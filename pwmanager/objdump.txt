
Enclave/encl.so:     file format elf64-x86-64


Disassembly of section .plt:

0000000000001000 <.plt>:
    1000:	ff 35 aa 6f 01 00    	push   0x16faa(%rip)        # 17fb0 <_GLOBAL_OFFSET_TABLE_+0x8>
    1006:	ff 25 ac 6f 01 00    	jmp    *0x16fac(%rip)        # 17fb8 <_GLOBAL_OFFSET_TABLE_+0x10>
    100c:	0f 1f 40 00          	nopl   0x0(%rax)

Disassembly of section .plt.got:

0000000000001010 <_Z9pcl_entryPvS_@plt>:
    1010:	ff 25 aa 6f 01 00    	jmp    *0x16faa(%rip)        # 17fc0 <_Z9pcl_entryPvS_>
    1016:	66 90                	xchg   %ax,%ax

0000000000001018 <ippcpSetCpuFeatures@plt>:
    1018:	ff 25 c2 6f 01 00    	jmp    *0x16fc2(%rip)        # 17fe0 <ippcpSetCpuFeatures>
    101e:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000002000 <trts_access_version_dummy1>:
    2000:	f3 0f 1e fa          	endbr64 
    2004:	48 8d 05 25 62 01 00 	lea    0x16225(%rip),%rax        # 18230 <sgx_trts_version>
    200b:	c6 00 73             	movb   $0x73,(%rax)
    200e:	c3                   	ret    
    200f:	90                   	nop

0000000000002010 <tstdc_access_version_dummy1>:
    2010:	f3 0f 1e fa          	endbr64 
    2014:	c6 05 c5 80 01 00 73 	movb   $0x73,0x180c5(%rip)        # 1a0e0 <sgx_tstdc_version>
    201b:	48 8d 05 be 80 01 00 	lea    0x180be(%rip),%rax        # 1a0e0 <sgx_tstdc_version>
    2022:	c3                   	ret    
    2023:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    202a:	00 00 00 
    202d:	0f 1f 00             	nopl   (%rax)

0000000000002030 <tcrypto_access_version_dummy1>:
    2030:	f3 0f 1e fa          	endbr64 
    2034:	c6 05 c5 80 01 00 73 	movb   $0x73,0x180c5(%rip)        # 1a100 <sgx_tcrypto_version>
    203b:	48 8d 05 be 80 01 00 	lea    0x180be(%rip),%rax        # 1a100 <sgx_tcrypto_version>
    2042:	c3                   	ret    
    2043:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    204a:	00 00 00 
    204d:	0f 1f 00             	nopl   (%rax)

0000000000002050 <tservice_access_version_dummy1>:
    2050:	f3 0f 1e fa          	endbr64 
    2054:	c6 05 c5 80 01 00 73 	movb   $0x73,0x180c5(%rip)        # 1a120 <sgx_tservice_version>
    205b:	48 8d 05 be 80 01 00 	lea    0x180be(%rip),%rax        # 1a120 <sgx_tservice_version>
    2062:	c3                   	ret    

0000000000002063 <ecall_login>:
    2063:	f3 0f 1e fa          	endbr64 
    2067:	83 3d f6 80 01 00 00 	cmpl   $0x0,0x180f6(%rip)        # 1a164 <currentDeviceId>
    206e:	75 3d                	jne    20ad <ecall_login+0x4a>
    2070:	41 50                	push   %r8
    2072:	89 f8                	mov    %edi,%eax
    2074:	48 89 f7             	mov    %rsi,%rdi
    2077:	48 8b 35 82 5f 01 00 	mov    0x15f82(%rip),%rsi        # 18000 <password>
    207e:	89 05 e0 80 01 00    	mov    %eax,0x180e0(%rip)        # 1a164 <currentDeviceId>
    2084:	e8 47 e9 00 00       	call   109d0 <strcmp>
    2089:	85 c0                	test   %eax,%eax
    208b:	75 0c                	jne    2099 <ecall_login+0x36>
    208d:	c7 05 c9 80 01 00 01 	movl   $0x1,0x180c9(%rip)        # 1a160 <is_authenticated>
    2094:	00 00 00 
    2097:	59                   	pop    %rcx
    2098:	c3                   	ret    
    2099:	31 c0                	xor    %eax,%eax
    209b:	48 8d 3d 5e 0f 01 00 	lea    0x10f5e(%rip),%rdi        # 13000 <second_phase+0xa50>
    20a2:	89 05 bc 80 01 00    	mov    %eax,0x180bc(%rip)        # 1a164 <currentDeviceId>
    20a8:	31 c0                	xor    %eax,%eax
    20aa:	5a                   	pop    %rdx
    20ab:	eb 09                	jmp    20b6 <ecall_login+0x53>
    20ad:	48 8d 3d 63 0f 01 00 	lea    0x10f63(%rip),%rdi        # 13017 <second_phase+0xa67>
    20b4:	31 c0                	xor    %eax,%eax
    20b6:	e9 09 21 00 00       	jmp    41c4 <ocall_print>

00000000000020bb <ecall_logout>:
    20bb:	f3 0f 1e fa          	endbr64 
    20bf:	39 3d 9f 80 01 00    	cmp    %edi,0x1809f(%rip)        # 1a164 <currentDeviceId>
    20c5:	75 17                	jne    20de <ecall_logout+0x23>
    20c7:	31 c0                	xor    %eax,%eax
    20c9:	48 8d 3d 66 0f 01 00 	lea    0x10f66(%rip),%rdi        # 13036 <second_phase+0xa86>
    20d0:	89 05 8e 80 01 00    	mov    %eax,0x1808e(%rip)        # 1a164 <currentDeviceId>
    20d6:	89 05 84 80 01 00    	mov    %eax,0x18084(%rip)        # 1a160 <is_authenticated>
    20dc:	eb 07                	jmp    20e5 <ecall_logout+0x2a>
    20de:	48 8d 3d 65 0f 01 00 	lea    0x10f65(%rip),%rdi        # 1304a <second_phase+0xa9a>
    20e5:	31 c0                	xor    %eax,%eax
    20e7:	e9 d8 20 00 00       	jmp    41c4 <ocall_print>

00000000000020ec <ecall_get_password>:
    20ec:	f3 0f 1e fa          	endbr64 
    20f0:	39 3d 6e 80 01 00    	cmp    %edi,0x1806e(%rip)        # 1a164 <currentDeviceId>
    20f6:	75 12                	jne    210a <ecall_get_password+0x1e>
    20f8:	83 3d 61 80 01 00 00 	cmpl   $0x0,0x18061(%rip)        # 1a160 <is_authenticated>
    20ff:	48 8b 3d fa 5e 01 00 	mov    0x15efa(%rip),%rdi        # 18000 <password>
    2106:	74 10                	je     2118 <ecall_get_password+0x2c>
    2108:	eb 07                	jmp    2111 <ecall_get_password+0x25>
    210a:	48 8d 3d 48 0f 01 00 	lea    0x10f48(%rip),%rdi        # 13059 <second_phase+0xaa9>
    2111:	31 c0                	xor    %eax,%eax
    2113:	e9 ac 20 00 00       	jmp    41c4 <ocall_print>
    2118:	c3                   	ret    
    2119:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2120:	00 00 00 
    2123:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    212a:	00 00 00 
    212d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2134:	00 00 00 
    2137:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    213e:	00 00 00 
    2141:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2148:	00 00 00 
    214b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2152:	00 00 00 
    2155:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    215c:	00 00 00 
    215f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2166:	00 00 00 
    2169:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2170:	00 00 00 
    2173:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    217a:	00 00 00 
    217d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2184:	00 00 00 
    2187:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    218e:	00 00 00 
    2191:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2198:	00 00 00 
    219b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21a2:	00 00 00 
    21a5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21ac:	00 00 00 
    21af:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21b6:	00 00 00 
    21b9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21c0:	00 00 00 
    21c3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21ca:	00 00 00 
    21cd:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21d4:	00 00 00 
    21d7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21de:	00 00 00 
    21e1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21e8:	00 00 00 
    21eb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21f2:	00 00 00 
    21f5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21fc:	00 00 00 
    21ff:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2206:	00 00 00 
    2209:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2210:	00 00 00 
    2213:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    221a:	00 00 00 
    221d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2224:	00 00 00 
    2227:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    222e:	00 00 00 
    2231:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2238:	00 00 00 
    223b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2242:	00 00 00 
    2245:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    224c:	00 00 00 
    224f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2256:	00 00 00 
    2259:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2260:	00 00 00 
    2263:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    226a:	00 00 00 
    226d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2274:	00 00 00 
    2277:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    227e:	00 00 00 
    2281:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2288:	00 00 00 
    228b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2292:	00 00 00 
    2295:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    229c:	00 00 00 
    229f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22a6:	00 00 00 
    22a9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22b0:	00 00 00 
    22b3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22ba:	00 00 00 
    22bd:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22c4:	00 00 00 
    22c7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22ce:	00 00 00 
    22d1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22d8:	00 00 00 
    22db:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22e2:	00 00 00 
    22e5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22ec:	00 00 00 
    22ef:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22f6:	00 00 00 
    22f9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2300:	00 00 00 
    2303:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    230a:	00 00 00 
    230d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2314:	00 00 00 
    2317:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    231e:	00 00 00 
    2321:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2328:	00 00 00 
    232b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2332:	00 00 00 
    2335:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    233c:	00 00 00 
    233f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2346:	00 00 00 
    2349:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2350:	00 00 00 
    2353:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    235a:	00 00 00 
    235d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2364:	00 00 00 
    2367:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    236e:	00 00 00 
    2371:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2378:	00 00 00 
    237b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2382:	00 00 00 
    2385:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    238c:	00 00 00 
    238f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2396:	00 00 00 
    2399:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23a0:	00 00 00 
    23a3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23aa:	00 00 00 
    23ad:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23b4:	00 00 00 
    23b7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23be:	00 00 00 
    23c1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23c8:	00 00 00 
    23cb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23d2:	00 00 00 
    23d5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23dc:	00 00 00 
    23df:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23e6:	00 00 00 
    23e9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23f0:	00 00 00 
    23f3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23fa:	00 00 00 
    23fd:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2404:	00 00 00 
    2407:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    240e:	00 00 00 
    2411:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2418:	00 00 00 
    241b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2422:	00 00 00 
    2425:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    242c:	00 00 00 
    242f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2436:	00 00 00 
    2439:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2440:	00 00 00 
    2443:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    244a:	00 00 00 
    244d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2454:	00 00 00 
    2457:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    245e:	00 00 00 
    2461:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2468:	00 00 00 
    246b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2472:	00 00 00 
    2475:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    247c:	00 00 00 
    247f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2486:	00 00 00 
    2489:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2490:	00 00 00 
    2493:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    249a:	00 00 00 
    249d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24a4:	00 00 00 
    24a7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24ae:	00 00 00 
    24b1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24b8:	00 00 00 
    24bb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24c2:	00 00 00 
    24c5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24cc:	00 00 00 
    24cf:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24d6:	00 00 00 
    24d9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24e0:	00 00 00 
    24e3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24ea:	00 00 00 
    24ed:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24f4:	00 00 00 
    24f7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24fe:	00 00 00 
    2501:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2508:	00 00 00 
    250b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2512:	00 00 00 
    2515:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    251c:	00 00 00 
    251f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2526:	00 00 00 
    2529:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2530:	00 00 00 
    2533:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    253a:	00 00 00 
    253d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2544:	00 00 00 
    2547:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    254e:	00 00 00 
    2551:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2558:	00 00 00 
    255b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2562:	00 00 00 
    2565:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    256c:	00 00 00 
    256f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2576:	00 00 00 
    2579:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2580:	00 00 00 
    2583:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    258a:	00 00 00 
    258d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2594:	00 00 00 
    2597:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    259e:	00 00 00 
    25a1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25a8:	00 00 00 
    25ab:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25b2:	00 00 00 
    25b5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25bc:	00 00 00 
    25bf:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25c6:	00 00 00 
    25c9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25d0:	00 00 00 
    25d3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25da:	00 00 00 
    25dd:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25e4:	00 00 00 
    25e7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25ee:	00 00 00 
    25f1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25f8:	00 00 00 
    25fb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2602:	00 00 00 
    2605:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    260c:	00 00 00 
    260f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2616:	00 00 00 
    2619:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2620:	00 00 00 
    2623:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    262a:	00 00 00 
    262d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2634:	00 00 00 
    2637:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    263e:	00 00 00 
    2641:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2648:	00 00 00 
    264b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2652:	00 00 00 
    2655:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    265c:	00 00 00 
    265f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2666:	00 00 00 
    2669:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2670:	00 00 00 
    2673:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    267a:	00 00 00 
    267d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2684:	00 00 00 
    2687:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    268e:	00 00 00 
    2691:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2698:	00 00 00 
    269b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26a2:	00 00 00 
    26a5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26ac:	00 00 00 
    26af:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26b6:	00 00 00 
    26b9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26c0:	00 00 00 
    26c3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26ca:	00 00 00 
    26cd:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26d4:	00 00 00 
    26d7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26de:	00 00 00 
    26e1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26e8:	00 00 00 
    26eb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26f2:	00 00 00 
    26f5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26fc:	00 00 00 
    26ff:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2706:	00 00 00 
    2709:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2710:	00 00 00 
    2713:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    271a:	00 00 00 
    271d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2724:	00 00 00 
    2727:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    272e:	00 00 00 
    2731:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2738:	00 00 00 
    273b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2742:	00 00 00 
    2745:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    274c:	00 00 00 
    274f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2756:	00 00 00 
    2759:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2760:	00 00 00 
    2763:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    276a:	00 00 00 
    276d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2774:	00 00 00 
    2777:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    277e:	00 00 00 
    2781:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2788:	00 00 00 
    278b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2792:	00 00 00 
    2795:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    279c:	00 00 00 
    279f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27a6:	00 00 00 
    27a9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27b0:	00 00 00 
    27b3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27ba:	00 00 00 
    27bd:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27c4:	00 00 00 
    27c7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27ce:	00 00 00 
    27d1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27d8:	00 00 00 
    27db:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27e2:	00 00 00 
    27e5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27ec:	00 00 00 
    27ef:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27f6:	00 00 00 
    27f9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2800:	00 00 00 
    2803:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    280a:	00 00 00 
    280d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2814:	00 00 00 
    2817:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    281e:	00 00 00 
    2821:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2828:	00 00 00 
    282b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2832:	00 00 00 
    2835:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    283c:	00 00 00 
    283f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2846:	00 00 00 
    2849:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2850:	00 00 00 
    2853:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    285a:	00 00 00 
    285d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2864:	00 00 00 
    2867:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    286e:	00 00 00 
    2871:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2878:	00 00 00 
    287b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2882:	00 00 00 
    2885:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    288c:	00 00 00 
    288f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2896:	00 00 00 
    2899:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28a0:	00 00 00 
    28a3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28aa:	00 00 00 
    28ad:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28b4:	00 00 00 
    28b7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28be:	00 00 00 
    28c1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28c8:	00 00 00 
    28cb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28d2:	00 00 00 
    28d5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28dc:	00 00 00 
    28df:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28e6:	00 00 00 
    28e9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28f0:	00 00 00 
    28f3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28fa:	00 00 00 
    28fd:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2904:	00 00 00 
    2907:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    290e:	00 00 00 
    2911:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2918:	00 00 00 
    291b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2922:	00 00 00 
    2925:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    292c:	00 00 00 
    292f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2936:	00 00 00 
    2939:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2940:	00 00 00 
    2943:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    294a:	00 00 00 
    294d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2954:	00 00 00 
    2957:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    295e:	00 00 00 
    2961:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2968:	00 00 00 
    296b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2972:	00 00 00 
    2975:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    297c:	00 00 00 
    297f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2986:	00 00 00 
    2989:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2990:	00 00 00 
    2993:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    299a:	00 00 00 
    299d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29a4:	00 00 00 
    29a7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29ae:	00 00 00 
    29b1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29b8:	00 00 00 
    29bb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29c2:	00 00 00 
    29c5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29cc:	00 00 00 
    29cf:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29d6:	00 00 00 
    29d9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29e0:	00 00 00 
    29e3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29ea:	00 00 00 
    29ed:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29f4:	00 00 00 
    29f7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29fe:	00 00 00 
    2a01:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a08:	00 00 00 
    2a0b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a12:	00 00 00 
    2a15:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a1c:	00 00 00 
    2a1f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a26:	00 00 00 
    2a29:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a30:	00 00 00 
    2a33:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a3a:	00 00 00 
    2a3d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a44:	00 00 00 
    2a47:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a4e:	00 00 00 
    2a51:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a58:	00 00 00 
    2a5b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a62:	00 00 00 
    2a65:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a6c:	00 00 00 
    2a6f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a76:	00 00 00 
    2a79:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a80:	00 00 00 
    2a83:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a8a:	00 00 00 
    2a8d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a94:	00 00 00 
    2a97:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a9e:	00 00 00 
    2aa1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2aa8:	00 00 00 
    2aab:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ab2:	00 00 00 
    2ab5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2abc:	00 00 00 
    2abf:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ac6:	00 00 00 
    2ac9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ad0:	00 00 00 
    2ad3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ada:	00 00 00 
    2add:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ae4:	00 00 00 
    2ae7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2aee:	00 00 00 
    2af1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2af8:	00 00 00 
    2afb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b02:	00 00 00 
    2b05:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b0c:	00 00 00 
    2b0f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b16:	00 00 00 
    2b19:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b20:	00 00 00 
    2b23:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b2a:	00 00 00 
    2b2d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b34:	00 00 00 
    2b37:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b3e:	00 00 00 
    2b41:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b48:	00 00 00 
    2b4b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b52:	00 00 00 
    2b55:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b5c:	00 00 00 
    2b5f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b66:	00 00 00 
    2b69:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b70:	00 00 00 
    2b73:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b7a:	00 00 00 
    2b7d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b84:	00 00 00 
    2b87:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b8e:	00 00 00 
    2b91:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b98:	00 00 00 
    2b9b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ba2:	00 00 00 
    2ba5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2bac:	00 00 00 
    2baf:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2bb6:	00 00 00 
    2bb9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2bc0:	00 00 00 
    2bc3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2bca:	00 00 00 
    2bcd:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2bd4:	00 00 00 
    2bd7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2bde:	00 00 00 
    2be1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2be8:	00 00 00 
    2beb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2bf2:	00 00 00 
    2bf5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2bfc:	00 00 00 
    2bff:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c06:	00 00 00 
    2c09:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c10:	00 00 00 
    2c13:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c1a:	00 00 00 
    2c1d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c24:	00 00 00 
    2c27:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c2e:	00 00 00 
    2c31:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c38:	00 00 00 
    2c3b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c42:	00 00 00 
    2c45:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c4c:	00 00 00 
    2c4f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c56:	00 00 00 
    2c59:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c60:	00 00 00 
    2c63:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c6a:	00 00 00 
    2c6d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c74:	00 00 00 
    2c77:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c7e:	00 00 00 
    2c81:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c88:	00 00 00 
    2c8b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c92:	00 00 00 
    2c95:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c9c:	00 00 00 
    2c9f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ca6:	00 00 00 
    2ca9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2cb0:	00 00 00 
    2cb3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2cba:	00 00 00 
    2cbd:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2cc4:	00 00 00 
    2cc7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2cce:	00 00 00 
    2cd1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2cd8:	00 00 00 
    2cdb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ce2:	00 00 00 
    2ce5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2cec:	00 00 00 
    2cef:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2cf6:	00 00 00 
    2cf9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d00:	00 00 00 
    2d03:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d0a:	00 00 00 
    2d0d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d14:	00 00 00 
    2d17:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d1e:	00 00 00 
    2d21:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d28:	00 00 00 
    2d2b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d32:	00 00 00 
    2d35:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d3c:	00 00 00 
    2d3f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d46:	00 00 00 
    2d49:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d50:	00 00 00 
    2d53:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d5a:	00 00 00 
    2d5d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d64:	00 00 00 
    2d67:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d6e:	00 00 00 
    2d71:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d78:	00 00 00 
    2d7b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d82:	00 00 00 
    2d85:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d8c:	00 00 00 
    2d8f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d96:	00 00 00 
    2d99:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2da0:	00 00 00 
    2da3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2daa:	00 00 00 
    2dad:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2db4:	00 00 00 
    2db7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2dbe:	00 00 00 
    2dc1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2dc8:	00 00 00 
    2dcb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2dd2:	00 00 00 
    2dd5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ddc:	00 00 00 
    2ddf:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2de6:	00 00 00 
    2de9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2df0:	00 00 00 
    2df3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2dfa:	00 00 00 
    2dfd:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e04:	00 00 00 
    2e07:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e0e:	00 00 00 
    2e11:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e18:	00 00 00 
    2e1b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e22:	00 00 00 
    2e25:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e2c:	00 00 00 
    2e2f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e36:	00 00 00 
    2e39:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e40:	00 00 00 
    2e43:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e4a:	00 00 00 
    2e4d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e54:	00 00 00 
    2e57:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e5e:	00 00 00 
    2e61:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e68:	00 00 00 
    2e6b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e72:	00 00 00 
    2e75:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e7c:	00 00 00 
    2e7f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e86:	00 00 00 
    2e89:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e90:	00 00 00 
    2e93:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e9a:	00 00 00 
    2e9d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ea4:	00 00 00 
    2ea7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2eae:	00 00 00 
    2eb1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2eb8:	00 00 00 
    2ebb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ec2:	00 00 00 
    2ec5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ecc:	00 00 00 
    2ecf:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ed6:	00 00 00 
    2ed9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ee0:	00 00 00 
    2ee3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2eea:	00 00 00 
    2eed:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ef4:	00 00 00 
    2ef7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2efe:	00 00 00 
    2f01:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f08:	00 00 00 
    2f0b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f12:	00 00 00 
    2f15:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f1c:	00 00 00 
    2f1f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f26:	00 00 00 
    2f29:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f30:	00 00 00 
    2f33:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f3a:	00 00 00 
    2f3d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f44:	00 00 00 
    2f47:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f4e:	00 00 00 
    2f51:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f58:	00 00 00 
    2f5b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f62:	00 00 00 
    2f65:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f6c:	00 00 00 
    2f6f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f76:	00 00 00 
    2f79:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f80:	00 00 00 
    2f83:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f8a:	00 00 00 
    2f8d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f94:	00 00 00 
    2f97:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f9e:	00 00 00 
    2fa1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2fa8:	00 00 00 
    2fab:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2fb2:	00 00 00 
    2fb5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2fbc:	00 00 00 
    2fbf:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2fc6:	00 00 00 
    2fc9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2fd0:	00 00 00 
    2fd3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2fda:	00 00 00 
    2fdd:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2fe4:	00 00 00 
    2fe7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2fee:	00 00 00 
    2ff1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ff8:	00 00 00 
    2ffb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003000 <test_dummy>:
    3000:	b8 00 00 00 00       	mov    $0x0,%eax
    3005:	c3                   	ret    
	...

0000000000004006 <sgx_ecall_login>:
    4006:	f3 0f 1e fa          	endbr64 
    400a:	41 55                	push   %r13
    400c:	41 54                	push   %r12
    400e:	55                   	push   %rbp
    400f:	53                   	push   %rbx
    4010:	48 83 ec 28          	sub    $0x28,%rsp
    4014:	48 85 ff             	test   %rdi,%rdi
    4017:	75 0b                	jne    4024 <sgx_ecall_login+0x1e>
    4019:	41 bc 02 00 00 00    	mov    $0x2,%r12d
    401f:	e9 ce 00 00 00       	jmp    40f2 <sgx_ecall_login+0xec>
    4024:	be 18 00 00 00       	mov    $0x18,%esi
    4029:	48 89 fb             	mov    %rdi,%rbx
    402c:	e8 8f 1b 00 00       	call   5bc0 <sgx_is_outside_enclave>
    4031:	85 c0                	test   %eax,%eax
    4033:	74 e4                	je     4019 <sgx_ecall_login+0x13>
    4035:	0f ae e8             	lfence 
    4038:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    403d:	b9 18 00 00 00       	mov    $0x18,%ecx
    4042:	48 89 da             	mov    %rbx,%rdx
    4045:	be 18 00 00 00       	mov    $0x18,%esi
    404a:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    4050:	e8 db cb 00 00       	call   10c30 <memcpy_s>
    4055:	85 c0                	test   %eax,%eax
    4057:	0f 85 95 00 00 00    	jne    40f2 <sgx_ecall_login+0xec>
    405d:	4c 8b 6c 24 10       	mov    0x10(%rsp),%r13
    4062:	48 8b 6c 24 18       	mov    0x18(%rsp),%rbp
    4067:	4d 85 ed             	test   %r13,%r13
    406a:	75 11                	jne    407d <sgx_ecall_login+0x77>
    406c:	0f ae e8             	lfence 
    406f:	4d 85 ed             	test   %r13,%r13
    4072:	74 05                	je     4079 <sgx_ecall_login+0x73>
    4074:	48 85 ed             	test   %rbp,%rbp
    4077:	75 15                	jne    408e <sgx_ecall_login+0x88>
    4079:	31 db                	xor    %ebx,%ebx
    407b:	eb 59                	jmp    40d6 <sgx_ecall_login+0xd0>
    407d:	48 89 ee             	mov    %rbp,%rsi
    4080:	4c 89 ef             	mov    %r13,%rdi
    4083:	e8 38 1b 00 00       	call   5bc0 <sgx_is_outside_enclave>
    4088:	85 c0                	test   %eax,%eax
    408a:	75 e0                	jne    406c <sgx_ecall_login+0x66>
    408c:	eb 8b                	jmp    4019 <sgx_ecall_login+0x13>
    408e:	48 89 ef             	mov    %rbp,%rdi
    4091:	41 bc 03 00 00 00    	mov    $0x3,%r12d
    4097:	e8 94 90 00 00       	call   d130 <dlmalloc>
    409c:	48 89 c3             	mov    %rax,%rbx
    409f:	48 85 c0             	test   %rax,%rax
    40a2:	74 4e                	je     40f2 <sgx_ecall_login+0xec>
    40a4:	48 89 e9             	mov    %rbp,%rcx
    40a7:	4c 89 ea             	mov    %r13,%rdx
    40aa:	48 89 ee             	mov    %rbp,%rsi
    40ad:	48 89 c7             	mov    %rax,%rdi
    40b0:	e8 7b cb 00 00       	call   10c30 <memcpy_s>
    40b5:	85 c0                	test   %eax,%eax
    40b7:	75 15                	jne    40ce <sgx_ecall_login+0xc8>
    40b9:	c6 44 2b ff 00       	movb   $0x0,-0x1(%rbx,%rbp,1)
    40be:	48 89 df             	mov    %rbx,%rdi
    40c1:	e8 1a c9 00 00       	call   109e0 <strlen>
    40c6:	48 ff c0             	inc    %rax
    40c9:	48 39 e8             	cmp    %rbp,%rax
    40cc:	74 08                	je     40d6 <sgx_ecall_login+0xd0>
    40ce:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    40d4:	eb 14                	jmp    40ea <sgx_ecall_login+0xe4>
    40d6:	8b 7c 24 08          	mov    0x8(%rsp),%edi
    40da:	48 89 de             	mov    %rbx,%rsi
    40dd:	45 31 e4             	xor    %r12d,%r12d
    40e0:	e8 7e df ff ff       	call   2063 <ecall_login>
    40e5:	48 85 db             	test   %rbx,%rbx
    40e8:	74 08                	je     40f2 <sgx_ecall_login+0xec>
    40ea:	48 89 df             	mov    %rbx,%rdi
    40ed:	e8 2e ae 00 00       	call   ef20 <dlfree>
    40f2:	48 83 c4 28          	add    $0x28,%rsp
    40f6:	44 89 e0             	mov    %r12d,%eax
    40f9:	5b                   	pop    %rbx
    40fa:	5d                   	pop    %rbp
    40fb:	41 5c                	pop    %r12
    40fd:	41 5d                	pop    %r13
    40ff:	c3                   	ret    

0000000000004100 <sgx_ecall_get_password>:
    4100:	f3 0f 1e fa          	endbr64 
    4104:	48 85 ff             	test   %rdi,%rdi
    4107:	74 53                	je     415c <sgx_ecall_get_password+0x5c>
    4109:	53                   	push   %rbx
    410a:	be 04 00 00 00       	mov    $0x4,%esi
    410f:	48 89 fb             	mov    %rdi,%rbx
    4112:	48 83 ec 10          	sub    $0x10,%rsp
    4116:	e8 a5 1a 00 00       	call   5bc0 <sgx_is_outside_enclave>
    411b:	85 c0                	test   %eax,%eax
    411d:	75 07                	jne    4126 <sgx_ecall_get_password+0x26>
    411f:	b8 02 00 00 00       	mov    $0x2,%eax
    4124:	eb 30                	jmp    4156 <sgx_ecall_get_password+0x56>
    4126:	0f ae e8             	lfence 
    4129:	48 89 da             	mov    %rbx,%rdx
    412c:	48 8d 7c 24 0c       	lea    0xc(%rsp),%rdi
    4131:	b9 04 00 00 00       	mov    $0x4,%ecx
    4136:	be 04 00 00 00       	mov    $0x4,%esi
    413b:	e8 f0 ca 00 00       	call   10c30 <memcpy_s>
    4140:	89 c2                	mov    %eax,%edx
    4142:	b8 01 00 00 00       	mov    $0x1,%eax
    4147:	85 d2                	test   %edx,%edx
    4149:	75 0b                	jne    4156 <sgx_ecall_get_password+0x56>
    414b:	8b 7c 24 0c          	mov    0xc(%rsp),%edi
    414f:	e8 98 df ff ff       	call   20ec <ecall_get_password>
    4154:	31 c0                	xor    %eax,%eax
    4156:	48 83 c4 10          	add    $0x10,%rsp
    415a:	5b                   	pop    %rbx
    415b:	c3                   	ret    
    415c:	b8 02 00 00 00       	mov    $0x2,%eax
    4161:	c3                   	ret    

0000000000004162 <sgx_ecall_logout>:
    4162:	f3 0f 1e fa          	endbr64 
    4166:	48 85 ff             	test   %rdi,%rdi
    4169:	74 53                	je     41be <sgx_ecall_logout+0x5c>
    416b:	53                   	push   %rbx
    416c:	be 04 00 00 00       	mov    $0x4,%esi
    4171:	48 89 fb             	mov    %rdi,%rbx
    4174:	48 83 ec 10          	sub    $0x10,%rsp
    4178:	e8 43 1a 00 00       	call   5bc0 <sgx_is_outside_enclave>
    417d:	85 c0                	test   %eax,%eax
    417f:	75 07                	jne    4188 <sgx_ecall_logout+0x26>
    4181:	b8 02 00 00 00       	mov    $0x2,%eax
    4186:	eb 30                	jmp    41b8 <sgx_ecall_logout+0x56>
    4188:	0f ae e8             	lfence 
    418b:	48 89 da             	mov    %rbx,%rdx
    418e:	48 8d 7c 24 0c       	lea    0xc(%rsp),%rdi
    4193:	b9 04 00 00 00       	mov    $0x4,%ecx
    4198:	be 04 00 00 00       	mov    $0x4,%esi
    419d:	e8 8e ca 00 00       	call   10c30 <memcpy_s>
    41a2:	89 c2                	mov    %eax,%edx
    41a4:	b8 01 00 00 00       	mov    $0x1,%eax
    41a9:	85 d2                	test   %edx,%edx
    41ab:	75 0b                	jne    41b8 <sgx_ecall_logout+0x56>
    41ad:	8b 7c 24 0c          	mov    0xc(%rsp),%edi
    41b1:	e8 05 df ff ff       	call   20bb <ecall_logout>
    41b6:	31 c0                	xor    %eax,%eax
    41b8:	48 83 c4 10          	add    $0x10,%rsp
    41bc:	5b                   	pop    %rbx
    41bd:	c3                   	ret    
    41be:	b8 02 00 00 00       	mov    $0x2,%eax
    41c3:	c3                   	ret    

00000000000041c4 <ocall_print>:
    41c4:	f3 0f 1e fa          	endbr64 
    41c8:	41 55                	push   %r13
    41ca:	41 54                	push   %r12
    41cc:	55                   	push   %rbp
    41cd:	31 ed                	xor    %ebp,%ebp
    41cf:	53                   	push   %rbx
    41d0:	48 89 fb             	mov    %rdi,%rbx
    41d3:	48 83 ec 28          	sub    $0x28,%rsp
    41d7:	48 85 ff             	test   %rdi,%rdi
    41da:	74 09                	je     41e5 <ocall_print+0x21>
    41dc:	e8 ff c7 00 00       	call   109e0 <strlen>
    41e1:	48 8d 68 01          	lea    0x1(%rax),%rbp
    41e5:	31 c9                	xor    %ecx,%ecx
    41e7:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
    41ec:	48 85 db             	test   %rbx,%rbx
    41ef:	74 1c                	je     420d <ocall_print+0x49>
    41f1:	48 89 ee             	mov    %rbp,%rsi
    41f4:	48 89 df             	mov    %rbx,%rdi
    41f7:	49 89 ed             	mov    %rbp,%r13
    41fa:	e8 61 19 00 00       	call   5b60 <sgx_is_within_enclave>
    41ff:	85 c0                	test   %eax,%eax
    4201:	75 0d                	jne    4210 <ocall_print+0x4c>
    4203:	b8 02 00 00 00       	mov    $0x2,%eax
    4208:	e9 95 00 00 00       	jmp    42a2 <ocall_print+0xde>
    420d:	45 31 ed             	xor    %r13d,%r13d
    4210:	49 8d 7d 08          	lea    0x8(%r13),%rdi
    4214:	48 39 ef             	cmp    %rbp,%rdi
    4217:	73 05                	jae    421e <ocall_print+0x5a>
    4219:	48 85 db             	test   %rbx,%rbx
    421c:	75 e5                	jne    4203 <ocall_print+0x3f>
    421e:	e8 fd 19 00 00       	call   5c20 <sgx_ocalloc>
    4223:	49 89 c4             	mov    %rax,%r12
    4226:	48 85 c0             	test   %rax,%rax
    4229:	75 13                	jne    423e <ocall_print+0x7a>
    422b:	31 d2                	xor    %edx,%edx
    422d:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
    4232:	e8 c9 1a 00 00       	call   5d00 <sgx_ocfree>
    4237:	b8 01 00 00 00       	mov    $0x1,%eax
    423c:	eb 64                	jmp    42a2 <ocall_print+0xde>
    423e:	48 8d 40 08          	lea    0x8(%rax),%rax
    4242:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    4247:	48 85 db             	test   %rbx,%rbx
    424a:	74 39                	je     4285 <ocall_print+0xc1>
    424c:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
    4251:	b9 08 00 00 00       	mov    $0x8,%ecx
    4256:	be 08 00 00 00       	mov    $0x8,%esi
    425b:	4c 89 e7             	mov    %r12,%rdi
    425e:	e8 4d ca 00 00       	call   10cb0 <memcpy_verw_s>
    4263:	85 c0                	test   %eax,%eax
    4265:	75 cb                	jne    4232 <ocall_print+0x6e>
    4267:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    426c:	48 89 e9             	mov    %rbp,%rcx
    426f:	48 89 da             	mov    %rbx,%rdx
    4272:	4c 89 ee             	mov    %r13,%rsi
    4275:	e8 36 ca 00 00       	call   10cb0 <memcpy_verw_s>
    427a:	85 c0                	test   %eax,%eax
    427c:	75 b4                	jne    4232 <ocall_print+0x6e>
    427e:	48 01 6c 24 18       	add    %rbp,0x18(%rsp)
    4283:	eb 06                	jmp    428b <ocall_print+0xc7>
    4285:	31 c0                	xor    %eax,%eax
    4287:	49 89 04 24          	mov    %rax,(%r12)
    428b:	4c 89 e6             	mov    %r12,%rsi
    428e:	31 ff                	xor    %edi,%edi
    4290:	e8 7b 2f 00 00       	call   7210 <sgx_ocall>
    4295:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    4299:	e8 62 1a 00 00       	call   5d00 <sgx_ocfree>
    429e:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    42a2:	48 83 c4 28          	add    $0x28,%rsp
    42a6:	5b                   	pop    %rbx
    42a7:	5d                   	pop    %rbp
    42a8:	41 5c                	pop    %r12
    42aa:	41 5d                	pop    %r13
    42ac:	c3                   	ret    

00000000000042ad <ocall_print_address>:
    42ad:	f3 0f 1e fa          	endbr64 
    42b1:	41 55                	push   %r13
    42b3:	41 54                	push   %r12
    42b5:	45 31 e4             	xor    %r12d,%r12d
    42b8:	55                   	push   %rbp
    42b9:	53                   	push   %rbx
    42ba:	48 89 fb             	mov    %rdi,%rbx
    42bd:	48 83 ec 28          	sub    $0x28,%rsp
    42c1:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    42c6:	48 85 ff             	test   %rdi,%rdi
    42c9:	74 09                	je     42d4 <ocall_print_address+0x27>
    42cb:	e8 10 c7 00 00       	call   109e0 <strlen>
    42d0:	4c 8d 60 01          	lea    0x1(%rax),%r12
    42d4:	31 c9                	xor    %ecx,%ecx
    42d6:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
    42db:	48 85 db             	test   %rbx,%rbx
    42de:	74 1c                	je     42fc <ocall_print_address+0x4f>
    42e0:	4c 89 e6             	mov    %r12,%rsi
    42e3:	48 89 df             	mov    %rbx,%rdi
    42e6:	4d 89 e5             	mov    %r12,%r13
    42e9:	e8 72 18 00 00       	call   5b60 <sgx_is_within_enclave>
    42ee:	85 c0                	test   %eax,%eax
    42f0:	75 0d                	jne    42ff <ocall_print_address+0x52>
    42f2:	b8 02 00 00 00       	mov    $0x2,%eax
    42f7:	e9 b7 00 00 00       	jmp    43b3 <ocall_print_address+0x106>
    42fc:	45 31 ed             	xor    %r13d,%r13d
    42ff:	49 8d 7d 10          	lea    0x10(%r13),%rdi
    4303:	4c 39 e7             	cmp    %r12,%rdi
    4306:	73 05                	jae    430d <ocall_print_address+0x60>
    4308:	48 85 db             	test   %rbx,%rbx
    430b:	75 e5                	jne    42f2 <ocall_print_address+0x45>
    430d:	e8 0e 19 00 00       	call   5c20 <sgx_ocalloc>
    4312:	48 89 c5             	mov    %rax,%rbp
    4315:	48 85 c0             	test   %rax,%rax
    4318:	75 16                	jne    4330 <ocall_print_address+0x83>
    431a:	31 d2                	xor    %edx,%edx
    431c:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
    4321:	e8 da 19 00 00       	call   5d00 <sgx_ocfree>
    4326:	b8 01 00 00 00       	mov    $0x1,%eax
    432b:	e9 83 00 00 00       	jmp    43b3 <ocall_print_address+0x106>
    4330:	48 8d 40 10          	lea    0x10(%rax),%rax
    4334:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    4339:	48 85 db             	test   %rbx,%rbx
    433c:	74 39                	je     4377 <ocall_print_address+0xca>
    433e:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
    4343:	b9 08 00 00 00       	mov    $0x8,%ecx
    4348:	be 08 00 00 00       	mov    $0x8,%esi
    434d:	48 89 ef             	mov    %rbp,%rdi
    4350:	e8 5b c9 00 00       	call   10cb0 <memcpy_verw_s>
    4355:	85 c0                	test   %eax,%eax
    4357:	75 c8                	jne    4321 <ocall_print_address+0x74>
    4359:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    435e:	4c 89 e1             	mov    %r12,%rcx
    4361:	48 89 da             	mov    %rbx,%rdx
    4364:	4c 89 ee             	mov    %r13,%rsi
    4367:	e8 44 c9 00 00       	call   10cb0 <memcpy_verw_s>
    436c:	85 c0                	test   %eax,%eax
    436e:	75 b1                	jne    4321 <ocall_print_address+0x74>
    4370:	4c 01 64 24 18       	add    %r12,0x18(%rsp)
    4375:	eb 06                	jmp    437d <ocall_print_address+0xd0>
    4377:	31 c0                	xor    %eax,%eax
    4379:	48 89 45 00          	mov    %rax,0x0(%rbp)
    437d:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
    4382:	48 8d 7d 08          	lea    0x8(%rbp),%rdi
    4386:	b9 08 00 00 00       	mov    $0x8,%ecx
    438b:	be 08 00 00 00       	mov    $0x8,%esi
    4390:	e8 1b c9 00 00       	call   10cb0 <memcpy_verw_s>
    4395:	85 c0                	test   %eax,%eax
    4397:	75 88                	jne    4321 <ocall_print_address+0x74>
    4399:	48 89 ee             	mov    %rbp,%rsi
    439c:	bf 01 00 00 00       	mov    $0x1,%edi
    43a1:	e8 6a 2e 00 00       	call   7210 <sgx_ocall>
    43a6:	89 44 24 04          	mov    %eax,0x4(%rsp)
    43aa:	e8 51 19 00 00       	call   5d00 <sgx_ocfree>
    43af:	8b 44 24 04          	mov    0x4(%rsp),%eax
    43b3:	48 83 c4 28          	add    $0x28,%rsp
    43b7:	5b                   	pop    %rbx
    43b8:	5d                   	pop    %rbp
    43b9:	41 5c                	pop    %r12
    43bb:	41 5d                	pop    %r13
    43bd:	c3                   	ret    
    43be:	66 90                	xchg   %ax,%ax

00000000000043c0 <register_value_select>:
    43c0:	89 f1                	mov    %esi,%ecx
    43c2:	31 c0                	xor    %eax,%eax
    43c4:	48 83 f9 00          	cmp    $0x0,%rcx
    43c8:	48 0f 44 07          	cmove  (%rdi),%rax
    43cc:	48 83 f9 01          	cmp    $0x1,%rcx
    43d0:	48 0f 44 47 08       	cmove  0x8(%rdi),%rax
    43d5:	48 83 f9 02          	cmp    $0x2,%rcx
    43d9:	48 0f 44 47 10       	cmove  0x10(%rdi),%rax
    43de:	48 83 f9 03          	cmp    $0x3,%rcx
    43e2:	48 0f 44 47 18       	cmove  0x18(%rdi),%rax
    43e7:	48 83 f9 04          	cmp    $0x4,%rcx
    43eb:	48 0f 44 47 20       	cmove  0x20(%rdi),%rax
    43f0:	48 83 f9 05          	cmp    $0x5,%rcx
    43f4:	48 0f 44 47 28       	cmove  0x28(%rdi),%rax
    43f9:	48 83 f9 06          	cmp    $0x6,%rcx
    43fd:	48 0f 44 47 30       	cmove  0x30(%rdi),%rax
    4402:	48 83 f9 07          	cmp    $0x7,%rcx
    4406:	48 0f 44 47 38       	cmove  0x38(%rdi),%rax
    440b:	48 83 f9 08          	cmp    $0x8,%rcx
    440f:	48 0f 44 47 40       	cmove  0x40(%rdi),%rax
    4414:	48 83 f9 09          	cmp    $0x9,%rcx
    4418:	48 0f 44 47 48       	cmove  0x48(%rdi),%rax
    441d:	48 83 f9 0a          	cmp    $0xa,%rcx
    4421:	48 0f 44 47 50       	cmove  0x50(%rdi),%rax
    4426:	48 83 f9 0b          	cmp    $0xb,%rcx
    442a:	48 0f 44 47 58       	cmove  0x58(%rdi),%rax
    442f:	48 83 f9 0c          	cmp    $0xc,%rcx
    4433:	48 0f 44 47 60       	cmove  0x60(%rdi),%rax
    4438:	48 83 f9 0d          	cmp    $0xd,%rcx
    443c:	48 0f 44 47 68       	cmove  0x68(%rdi),%rax
    4441:	48 83 f9 0e          	cmp    $0xe,%rcx
    4445:	48 0f 44 47 70       	cmove  0x70(%rdi),%rax
    444a:	48 83 f9 0f          	cmp    $0xf,%rcx
    444e:	48 0f 44 47 78       	cmove  0x78(%rdi),%rax
    4453:	c3                   	ret    
    4454:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    445b:	00 00 00 
    445e:	66 90                	xchg   %ax,%ax

0000000000004460 <ct_decode>:
    4460:	f3 0f 1e fa          	endbr64 
    4464:	55                   	push   %rbp
    4465:	48 89 e5             	mov    %rsp,%rbp
    4468:	41 57                	push   %r15
    446a:	41 56                	push   %r14
    446c:	41 55                	push   %r13
    446e:	41 54                	push   %r12
    4470:	53                   	push   %rbx
    4471:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    4475:	48 81 ec 40 05 00 00 	sub    $0x540,%rsp
    447c:	48 89 7c 24 78       	mov    %rdi,0x78(%rsp)
    4481:	48 89 74 24 50       	mov    %rsi,0x50(%rsp)
    4486:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    448d:	00 00 
    448f:	48 89 84 24 38 05 00 	mov    %rax,0x538(%rsp)
    4496:	00 
    4497:	31 c0                	xor    %eax,%eax
    4499:	48 8d 84 24 00 01 00 	lea    0x100(%rsp),%rax
    44a0:	00 
    44a1:	f6 05 7b 39 01 00 08 	testb  $0x8,0x1397b(%rip)        # 17e23 <g_cpu_feature_indicator+0x3>
    44a8:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    44ad:	0f 84 fd 0f 00 00    	je     54b0 <ct_decode+0x1050>
    44b3:	62 f1 7c 48 29 00    	vmovaps %zmm0,(%rax)
    44b9:	62 f1 7c 48 29 48 01 	vmovaps %zmm1,0x40(%rax)
    44c0:	62 f1 7c 48 29 50 02 	vmovaps %zmm2,0x80(%rax)
    44c7:	62 f1 7c 48 29 58 03 	vmovaps %zmm3,0xc0(%rax)
    44ce:	62 f1 7c 48 29 60 04 	vmovaps %zmm4,0x100(%rax)
    44d5:	62 f1 7c 48 29 68 05 	vmovaps %zmm5,0x140(%rax)
    44dc:	62 f1 7c 48 29 70 06 	vmovaps %zmm6,0x180(%rax)
    44e3:	62 f1 7c 48 29 78 07 	vmovaps %zmm7,0x1c0(%rax)
    44ea:	62 71 7c 48 29 40 08 	vmovaps %zmm8,0x200(%rax)
    44f1:	62 71 7c 48 29 48 09 	vmovaps %zmm9,0x240(%rax)
    44f8:	62 71 7c 48 29 50 0a 	vmovaps %zmm10,0x280(%rax)
    44ff:	62 71 7c 48 29 58 0b 	vmovaps %zmm11,0x2c0(%rax)
    4506:	62 71 7c 48 29 60 0c 	vmovaps %zmm12,0x300(%rax)
    450d:	62 71 7c 48 29 68 0d 	vmovaps %zmm13,0x340(%rax)
    4514:	62 71 7c 48 29 70 0e 	vmovaps %zmm14,0x380(%rax)
    451b:	62 71 7c 48 29 78 0f 	vmovaps %zmm15,0x3c0(%rax)
    4522:	48 8b 7c 24 78       	mov    0x78(%rsp),%rdi
    4527:	31 c9                	xor    %ecx,%ecx
    4529:	ba f0 0f 00 00       	mov    $0xff0,%edx
    452e:	48 be f0 f0 f0 f0 f0 	movabs $0xf0f0f0f0f0f0f0f0,%rsi
    4535:	f0 f0 f0 
    4538:	c4 e1 f9 6e c6       	vmovq  %rsi,%xmm0
    453d:	c5 f9 6f 25 db 3b 01 	vmovdqa 0x13bdb(%rip),%xmm4        # 18120 <standard>
    4544:	00 
    4545:	49 bb 80 80 80 80 80 	movabs $0x8080808080808080,%r11
    454c:	80 80 80 
    454f:	c4 e3 5d 38 25 c7 3a 	vinserti128 $0x1,0x13ac7(%rip),%ymm4,%ymm4        # 18020 <extended>
    4556:	01 00 01 
    4559:	4c 8b b7 88 00 00 00 	mov    0x88(%rdi),%r14
    4560:	c4 e2 7d 59 c0       	vpbroadcastq %xmm0,%ymm0
    4565:	c5 79 6f 2d d3 3b 01 	vmovdqa 0x13bd3(%rip),%xmm13        # 18140 <standard+0x20>
    456c:	00 
    456d:	48 bf ff ff ff ff ff 	movabs $0xffffffffffff,%rdi
    4574:	ff 00 00 
    4577:	c4 63 15 38 2d bf 3a 	vinserti128 $0x1,0x13abf(%rip),%ymm13,%ymm13        # 18040 <extended+0x20>
    457e:	01 00 01 
    4581:	c5 79 6f 25 e7 3b 01 	vmovdqa 0x13be7(%rip),%xmm12        # 18170 <standard+0x50>
    4588:	00 
    4589:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    458f:	41 b8 03 00 00 00    	mov    $0x3,%r8d
    4595:	4c 89 f0             	mov    %r14,%rax
    4598:	c5 79 6f 1d e0 3b 01 	vmovdqa 0x13be0(%rip),%xmm11        # 18180 <standard+0x60>
    459f:	00 
    45a0:	c4 63 1d 38 25 c6 3a 	vinserti128 $0x1,0x13ac6(%rip),%ymm12,%ymm12        # 18070 <extended+0x50>
    45a7:	01 00 01 
    45aa:	4c 89 74 24 68       	mov    %r14,0x68(%rsp)
    45af:	25 ff 0f 00 00       	and    $0xfff,%eax
    45b4:	c5 79 6f 15 d4 3b 01 	vmovdqa 0x13bd4(%rip),%xmm10        # 18190 <standard+0x70>
    45bb:	00 
    45bc:	c4 63 25 38 1d ba 3a 	vinserti128 $0x1,0x13aba(%rip),%ymm11,%ymm11        # 18080 <extended+0x60>
    45c3:	01 00 01 
    45c6:	48 3d f0 0f 00 00    	cmp    $0xff0,%rax
    45cc:	c5 79 6f 0d cc 3b 01 	vmovdqa 0x13bcc(%rip),%xmm9        # 181a0 <standard+0x80>
    45d3:	00 
    45d4:	c4 63 2d 38 15 b2 3a 	vinserti128 $0x1,0x13ab2(%rip),%ymm10,%ymm10        # 18090 <extended+0x70>
    45db:	01 00 01 
    45de:	0f 96 c1             	setbe  %cl
    45e1:	c5 79 6f 05 c7 3b 01 	vmovdqa 0x13bc7(%rip),%xmm8        # 181b0 <standard+0x90>
    45e8:	00 
    45e9:	c4 63 35 38 0d ad 3a 	vinserti128 $0x1,0x13aad(%rip),%ymm9,%ymm9        # 180a0 <extended+0x80>
    45f0:	01 00 01 
    45f3:	48 83 f9 00          	cmp    $0x0,%rcx
    45f7:	48 0f 45 d0          	cmovne %rax,%rdx
    45fb:	31 c9                	xor    %ecx,%ecx
    45fd:	48 3d f0 0f 00 00    	cmp    $0xff0,%rax
    4603:	c4 63 3d 38 05 a3 3a 	vinserti128 $0x1,0x13aa3(%rip),%ymm8,%ymm8        # 180b0 <extended+0x90>
    460a:	01 00 01 
    460d:	c5 79 6f 3d cb 3b 01 	vmovdqa 0x13bcb(%rip),%xmm15        # 181e0 <standard+0xc0>
    4614:	00 
    4615:	0f 97 c1             	seta   %cl
    4618:	45 31 e4             	xor    %r12d,%r12d
    461b:	2d f0 0f 00 00       	sub    $0xff0,%eax
    4620:	44 89 e3             	mov    %r12d,%ebx
    4623:	45 89 e7             	mov    %r12d,%r15d
    4626:	48 83 f9 00          	cmp    $0x0,%rcx
    462a:	0f 45 d8             	cmovne %eax,%ebx
    462d:	4c 89 f0             	mov    %r14,%rax
    4630:	89 5c 24 4c          	mov    %ebx,0x4c(%rsp)
    4634:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    463a:	48 09 d0             	or     %rdx,%rax
    463d:	c5 fa 6f 28          	vmovdqu (%rax),%xmm5
    4641:	48 63 c3             	movslq %ebx,%rax
    4644:	bb 02 00 00 00       	mov    $0x2,%ebx
    4649:	c4 e1 f9 6e f8       	vmovq  %rax,%xmm7
    464e:	b8 10 00 00 00       	mov    $0x10,%eax
    4653:	41 89 de             	mov    %ebx,%r14d
    4656:	c5 d1 f3 ef          	vpsllq %xmm7,%xmm5,%xmm5
    465a:	c4 c1 f9 6e fb       	vmovq  %r11,%xmm7
    465f:	c4 e2 7d 59 df       	vpbroadcastq %xmm7,%ymm3
    4664:	c4 e2 7d 59 cd       	vpbroadcastq %xmm5,%ymm1
    4669:	c4 e1 f9 7e ea       	vmovq  %xmm5,%rdx
    466e:	c5 fd df d1          	vpandn %ymm1,%ymm0,%ymm2
    4672:	c5 f5 db c8          	vpand  %ymm0,%ymm1,%ymm1
    4676:	c5 f9 ef c0          	vpxor  %xmm0,%xmm0,%xmm0
    467a:	49 89 d2             	mov    %rdx,%r10
    467d:	c5 f5 74 c0          	vpcmpeqb %ymm0,%ymm1,%ymm0
    4681:	c5 fd df c3          	vpandn %ymm3,%ymm0,%ymm0
    4685:	c5 fd eb c2          	vpor   %ymm2,%ymm0,%ymm0
    4689:	c4 62 5d 00 f0       	vpshufb %ymm0,%ymm4,%ymm14
    468e:	c5 f9 6e c0          	vmovd  %eax,%xmm0
    4692:	c5 f9 6f 25 96 3a 01 	vmovdqa 0x13a96(%rip),%xmm4        # 18130 <standard+0x10>
    4699:	00 
    469a:	c4 e3 5d 38 25 8c 39 	vinserti128 $0x1,0x1398c(%rip),%ymm4,%ymm4        # 18030 <extended+0x10>
    46a1:	01 00 01 
    46a4:	c4 e2 7d 78 c0       	vpbroadcastb %xmm0,%ymm0
    46a9:	b8 20 00 00 00       	mov    $0x20,%eax
    46ae:	c5 7d 7f b4 24 a0 00 	vmovdqa %ymm14,0xa0(%rsp)
    46b5:	00 00 
    46b7:	c5 f5 74 c0          	vpcmpeqb %ymm0,%ymm1,%ymm0
    46bb:	c5 fd df c3          	vpandn %ymm3,%ymm0,%ymm0
    46bf:	c5 fd eb c2          	vpor   %ymm2,%ymm0,%ymm0
    46c3:	c4 e2 5d 00 f8       	vpshufb %ymm0,%ymm4,%ymm7
    46c8:	c5 f9 6e c0          	vmovd  %eax,%xmm0
    46cc:	b8 30 00 00 00       	mov    $0x30,%eax
    46d1:	c5 f9 6f 25 77 3a 01 	vmovdqa 0x13a77(%rip),%xmm4        # 18150 <standard+0x30>
    46d8:	00 
    46d9:	c4 e3 5d 38 25 6d 39 	vinserti128 $0x1,0x1396d(%rip),%ymm4,%ymm4        # 18050 <extended+0x30>
    46e0:	01 00 01 
    46e3:	c4 e2 7d 78 c0       	vpbroadcastb %xmm0,%ymm0
    46e8:	c5 fd 7f bc 24 e0 00 	vmovdqa %ymm7,0xe0(%rsp)
    46ef:	00 00 
    46f1:	c5 f9 6f 3d c7 3a 01 	vmovdqa 0x13ac7(%rip),%xmm7        # 181c0 <standard+0xa0>
    46f8:	00 
    46f9:	c4 e3 45 38 3d bd 39 	vinserti128 $0x1,0x139bd(%rip),%ymm7,%ymm7        # 180c0 <extended+0xa0>
    4700:	01 00 01 
    4703:	c5 f5 74 c0          	vpcmpeqb %ymm0,%ymm1,%ymm0
    4707:	c5 fd df c3          	vpandn %ymm3,%ymm0,%ymm0
    470b:	c5 fd eb c2          	vpor   %ymm2,%ymm0,%ymm0
    470f:	c4 62 15 00 e8       	vpshufb %ymm0,%ymm13,%ymm13
    4714:	c5 f9 6e c0          	vmovd  %eax,%xmm0
    4718:	b8 40 00 00 00       	mov    $0x40,%eax
    471d:	c4 e2 7d 78 c0       	vpbroadcastb %xmm0,%ymm0
    4722:	c5 f9 6e f0          	vmovd  %eax,%xmm6
    4726:	b8 50 00 00 00       	mov    $0x50,%eax
    472b:	c5 f5 74 c0          	vpcmpeqb %ymm0,%ymm1,%ymm0
    472f:	c4 e2 7d 78 f6       	vpbroadcastb %xmm6,%ymm6
    4734:	c5 f5 74 f6          	vpcmpeqb %ymm6,%ymm1,%ymm6
    4738:	c5 fd df c3          	vpandn %ymm3,%ymm0,%ymm0
    473c:	c5 fd eb c2          	vpor   %ymm2,%ymm0,%ymm0
    4740:	c5 cd df f3          	vpandn %ymm3,%ymm6,%ymm6
    4744:	c4 e2 5d 00 e0       	vpshufb %ymm0,%ymm4,%ymm4
    4749:	c5 f9 6f 05 0f 3a 01 	vmovdqa 0x13a0f(%rip),%xmm0        # 18160 <standard+0x40>
    4750:	00 
    4751:	c5 cd eb f2          	vpor   %ymm2,%ymm6,%ymm6
    4755:	c4 e3 7d 38 05 01 39 	vinserti128 $0x1,0x13901(%rip),%ymm0,%ymm0        # 18060 <extended+0x40>
    475c:	01 00 01 
    475f:	c4 e1 f9 7e e1       	vmovq  %xmm4,%rcx
    4764:	c4 e3 7d 39 e4 01    	vextracti128 $0x1,%ymm4,%xmm4
    476a:	c4 e2 7d 00 c6       	vpshufb %ymm6,%ymm0,%ymm0
    476f:	c5 f9 6e f0          	vmovd  %eax,%xmm6
    4773:	b8 60 00 00 00       	mov    $0x60,%eax
    4778:	c4 e2 7d 78 f6       	vpbroadcastb %xmm6,%ymm6
    477d:	c5 f5 74 f6          	vpcmpeqb %ymm6,%ymm1,%ymm6
    4781:	c5 cd df f3          	vpandn %ymm3,%ymm6,%ymm6
    4785:	c5 cd eb f2          	vpor   %ymm2,%ymm6,%ymm6
    4789:	c4 62 1d 00 e6       	vpshufb %ymm6,%ymm12,%ymm12
    478e:	c5 f9 6e f0          	vmovd  %eax,%xmm6
    4792:	b8 70 00 00 00       	mov    $0x70,%eax
    4797:	c4 e2 7d 78 f6       	vpbroadcastb %xmm6,%ymm6
    479c:	c5 f5 74 f6          	vpcmpeqb %ymm6,%ymm1,%ymm6
    47a0:	c5 cd df f3          	vpandn %ymm3,%ymm6,%ymm6
    47a4:	c5 cd eb f2          	vpor   %ymm2,%ymm6,%ymm6
    47a8:	c4 62 25 00 de       	vpshufb %ymm6,%ymm11,%ymm11
    47ad:	c5 f9 6e f0          	vmovd  %eax,%xmm6
    47b1:	b8 80 ff ff ff       	mov    $0xffffff80,%eax
    47b6:	c4 e2 7d 78 f6       	vpbroadcastb %xmm6,%ymm6
    47bb:	c5 f5 74 f6          	vpcmpeqb %ymm6,%ymm1,%ymm6
    47bf:	c5 cd df f3          	vpandn %ymm3,%ymm6,%ymm6
    47c3:	c5 cd eb f2          	vpor   %ymm2,%ymm6,%ymm6
    47c7:	c4 62 2d 00 d6       	vpshufb %ymm6,%ymm10,%ymm10
    47cc:	c5 f9 6e f0          	vmovd  %eax,%xmm6
    47d0:	b8 90 ff ff ff       	mov    $0xffffff90,%eax
    47d5:	c4 e2 7d 78 f6       	vpbroadcastb %xmm6,%ymm6
    47da:	c5 f5 74 f6          	vpcmpeqb %ymm6,%ymm1,%ymm6
    47de:	c5 cd df f3          	vpandn %ymm3,%ymm6,%ymm6
    47e2:	c5 cd eb f2          	vpor   %ymm2,%ymm6,%ymm6
    47e6:	c4 62 35 00 ce       	vpshufb %ymm6,%ymm9,%ymm9
    47eb:	c5 f9 6e f0          	vmovd  %eax,%xmm6
    47ef:	b8 a0 ff ff ff       	mov    $0xffffffa0,%eax
    47f4:	c4 e2 7d 78 f6       	vpbroadcastb %xmm6,%ymm6
    47f9:	c5 f5 74 f6          	vpcmpeqb %ymm6,%ymm1,%ymm6
    47fd:	c5 cd df f3          	vpandn %ymm3,%ymm6,%ymm6
    4801:	c5 cd eb f2          	vpor   %ymm2,%ymm6,%ymm6
    4805:	c4 62 3d 00 c6       	vpshufb %ymm6,%ymm8,%ymm8
    480a:	c5 f9 6e f0          	vmovd  %eax,%xmm6
    480e:	b8 b0 ff ff ff       	mov    $0xffffffb0,%eax
    4813:	c4 e2 7d 78 f6       	vpbroadcastb %xmm6,%ymm6
    4818:	c5 79 6e f0          	vmovd  %eax,%xmm14
    481c:	b8 c0 ff ff ff       	mov    $0xffffffc0,%eax
    4821:	c5 f5 74 f6          	vpcmpeqb %ymm6,%ymm1,%ymm6
    4825:	c4 42 7d 78 f6       	vpbroadcastb %xmm14,%ymm14
    482a:	c4 41 75 74 f6       	vpcmpeqb %ymm14,%ymm1,%ymm14
    482f:	c5 cd df f3          	vpandn %ymm3,%ymm6,%ymm6
    4833:	c5 cd eb f2          	vpor   %ymm2,%ymm6,%ymm6
    4837:	c5 0d df f3          	vpandn %ymm3,%ymm14,%ymm14
    483b:	c4 e2 45 00 fe       	vpshufb %ymm6,%ymm7,%ymm7
    4840:	c5 f9 6f 35 88 39 01 	vmovdqa 0x13988(%rip),%xmm6        # 181d0 <standard+0xb0>
    4847:	00 
    4848:	c5 0d eb f2          	vpor   %ymm2,%ymm14,%ymm14
    484c:	c4 e3 4d 38 35 7a 38 	vinserti128 $0x1,0x1387a(%rip),%ymm6,%ymm6        # 180d0 <extended+0xb0>
    4853:	01 00 01 
    4856:	c4 63 05 38 3d 80 38 	vinserti128 $0x1,0x13880(%rip),%ymm15,%ymm15        # 180e0 <extended+0xc0>
    485d:	01 00 01 
    4860:	c4 c2 4d 00 f6       	vpshufb %ymm14,%ymm6,%ymm6
    4865:	c5 79 6e f0          	vmovd  %eax,%xmm14
    4869:	b8 d0 ff ff ff       	mov    $0xffffffd0,%eax
    486e:	c4 42 7d 78 f6       	vpbroadcastb %xmm14,%ymm14
    4873:	c4 41 75 74 f6       	vpcmpeqb %ymm14,%ymm1,%ymm14
    4878:	c5 0d df f3          	vpandn %ymm3,%ymm14,%ymm14
    487c:	c5 0d eb f2          	vpor   %ymm2,%ymm14,%ymm14
    4880:	c4 42 05 00 fe       	vpshufb %ymm14,%ymm15,%ymm15
    4885:	c5 79 6e f0          	vmovd  %eax,%xmm14
    4889:	b8 e0 ff ff ff       	mov    $0xffffffe0,%eax
    488e:	c5 7d 7f bc 24 c0 00 	vmovdqa %ymm15,0xc0(%rsp)
    4895:	00 00 
    4897:	c4 42 7d 78 f6       	vpbroadcastb %xmm14,%ymm14
    489c:	c5 79 6f 3d 4c 39 01 	vmovdqa 0x1394c(%rip),%xmm15        # 181f0 <standard+0xd0>
    48a3:	00 
    48a4:	c4 63 05 38 3d 42 38 	vinserti128 $0x1,0x13842(%rip),%ymm15,%ymm15        # 180f0 <extended+0xd0>
    48ab:	01 00 01 
    48ae:	c4 41 75 74 f6       	vpcmpeqb %ymm14,%ymm1,%ymm14
    48b3:	c5 0d df f3          	vpandn %ymm3,%ymm14,%ymm14
    48b7:	c5 0d eb f2          	vpor   %ymm2,%ymm14,%ymm14
    48bb:	c4 42 05 00 fe       	vpshufb %ymm14,%ymm15,%ymm15
    48c0:	c5 79 6e f0          	vmovd  %eax,%xmm14
    48c4:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
    48c9:	c5 7d 7f bc 24 80 00 	vmovdqa %ymm15,0x80(%rsp)
    48d0:	00 00 
    48d2:	c4 42 7d 78 f6       	vpbroadcastb %xmm14,%ymm14
    48d7:	c5 79 6f 3d 21 39 01 	vmovdqa 0x13921(%rip),%xmm15        # 18200 <standard+0xe0>
    48de:	00 
    48df:	c4 63 05 38 3d 17 38 	vinserti128 $0x1,0x13817(%rip),%ymm15,%ymm15        # 18100 <extended+0xe0>
    48e6:	01 00 01 
    48e9:	c4 41 75 74 f6       	vpcmpeqb %ymm14,%ymm1,%ymm14
    48ee:	c5 0d df f3          	vpandn %ymm3,%ymm14,%ymm14
    48f2:	c5 0d eb f2          	vpor   %ymm2,%ymm14,%ymm14
    48f6:	c4 42 05 00 fe       	vpshufb %ymm14,%ymm15,%ymm15
    48fb:	c5 79 6e f0          	vmovd  %eax,%xmm14
    48ff:	c4 61 f9 7e e8       	vmovq  %xmm13,%rax
    4904:	48 09 c8             	or     %rcx,%rax
    4907:	c4 42 7d 78 f6       	vpbroadcastb %xmm14,%ymm14
    490c:	c4 e1 f9 7e c1       	vmovq  %xmm0,%rcx
    4911:	48 09 c8             	or     %rcx,%rax
    4914:	c4 c1 75 74 ce       	vpcmpeqb %ymm14,%ymm1,%ymm1
    4919:	c4 61 f9 7e e1       	vmovq  %xmm12,%rcx
    491e:	c5 7d 6f b4 24 a0 00 	vmovdqa 0xa0(%rsp),%ymm14
    4925:	00 00 
    4927:	48 09 c8             	or     %rcx,%rax
    492a:	c4 61 f9 7e d9       	vmovq  %xmm11,%rcx
    492f:	c4 43 7d 39 ed 01    	vextracti128 $0x1,%ymm13,%xmm13
    4935:	48 09 c8             	or     %rcx,%rax
    4938:	c4 61 f9 7e d1       	vmovq  %xmm10,%rcx
    493d:	c5 91 eb e4          	vpor   %xmm4,%xmm13,%xmm4
    4941:	48 09 c8             	or     %rcx,%rax
    4944:	c5 f5 df cb          	vpandn %ymm3,%ymm1,%ymm1
    4948:	c4 61 f9 7e c9       	vmovq  %xmm9,%rcx
    494d:	c5 f9 6f 1d bb 38 01 	vmovdqa 0x138bb(%rip),%xmm3        # 18210 <standard+0xf0>
    4954:	00 
    4955:	c5 f5 eb ca          	vpor   %ymm2,%ymm1,%ymm1
    4959:	48 09 c8             	or     %rcx,%rax
    495c:	c4 61 f9 7e c1       	vmovq  %xmm8,%rcx
    4961:	48 09 c8             	or     %rcx,%rax
    4964:	c4 e1 f9 7e f9       	vmovq  %xmm7,%rcx
    4969:	c4 e3 65 38 1d 9d 37 	vinserti128 $0x1,0x1379d(%rip),%ymm3,%ymm3        # 18110 <extended+0xf0>
    4970:	01 00 01 
    4973:	48 09 c8             	or     %rcx,%rax
    4976:	c4 e1 f9 7e f1       	vmovq  %xmm6,%rcx
    497b:	c4 61 f9 7e f6       	vmovq  %xmm14,%rsi
    4980:	c4 e2 65 00 d9       	vpshufb %ymm1,%ymm3,%ymm3
    4985:	48 09 c8             	or     %rcx,%rax
    4988:	c5 f9 6f 8c 24 c0 00 	vmovdqa 0xc0(%rsp),%xmm1
    498f:	00 00 
    4991:	c4 e3 7d 39 c0 01    	vextracti128 $0x1,%ymm0,%xmm0
    4997:	c5 d9 eb c0          	vpor   %xmm0,%xmm4,%xmm0
    499b:	c4 43 7d 39 e4 01    	vextracti128 $0x1,%ymm12,%xmm12
    49a1:	c4 43 7d 39 db 01    	vextracti128 $0x1,%ymm11,%xmm11
    49a7:	c5 fd 6f a4 24 c0 00 	vmovdqa 0xc0(%rsp),%ymm4
    49ae:	00 00 
    49b0:	c4 e1 f9 7e c9       	vmovq  %xmm1,%rcx
    49b5:	c4 c1 79 eb c4       	vpor   %xmm12,%xmm0,%xmm0
    49ba:	c5 f9 6f 8c 24 80 00 	vmovdqa 0x80(%rsp),%xmm1
    49c1:	00 00 
    49c3:	c4 43 7d 39 d2 01    	vextracti128 $0x1,%ymm10,%xmm10
    49c9:	48 09 c8             	or     %rcx,%rax
    49cc:	c4 c1 79 eb c3       	vpor   %xmm11,%xmm0,%xmm0
    49d1:	c4 43 7d 39 c9 01    	vextracti128 $0x1,%ymm9,%xmm9
    49d7:	c4 e1 f9 7e c9       	vmovq  %xmm1,%rcx
    49dc:	c4 c1 79 eb c2       	vpor   %xmm10,%xmm0,%xmm0
    49e1:	c5 f9 6f 8c 24 e0 00 	vmovdqa 0xe0(%rsp),%xmm1
    49e8:	00 00 
    49ea:	c4 43 7d 39 c0 01    	vextracti128 $0x1,%ymm8,%xmm8
    49f0:	48 09 c8             	or     %rcx,%rax
    49f3:	c4 61 f9 7e f9       	vmovq  %xmm15,%rcx
    49f8:	c4 c1 79 eb c1       	vpor   %xmm9,%xmm0,%xmm0
    49fd:	48 09 c8             	or     %rcx,%rax
    4a00:	c4 e1 f9 7e d9       	vmovq  %xmm3,%rcx
    4a05:	c4 c1 79 eb c0       	vpor   %xmm8,%xmm0,%xmm0
    4a0a:	48 09 c8             	or     %rcx,%rax
    4a0d:	c4 e1 f9 7e c9       	vmovq  %xmm1,%rcx
    4a12:	c4 e3 7d 39 ff 01    	vextracti128 $0x1,%ymm7,%xmm7
    4a18:	48 09 f1             	or     %rsi,%rcx
    4a1b:	be 0f 00 00 00       	mov    $0xf,%esi
    4a20:	c5 f9 eb c7          	vpor   %xmm7,%xmm0,%xmm0
    4a24:	c5 fd 6f bc 24 e0 00 	vmovdqa 0xe0(%rsp),%ymm7
    4a2b:	00 00 
    4a2d:	48 09 c8             	or     %rcx,%rax
    4a30:	c4 e3 7d 39 f6 01    	vextracti128 $0x1,%ymm6,%xmm6
    4a36:	c4 43 7d 39 ff 01    	vextracti128 $0x1,%ymm15,%xmm15
    4a3c:	48 21 c7             	and    %rax,%rdi
    4a3f:	25 c0 00 00 00       	and    $0xc0,%eax
    4a44:	c5 f9 eb c6          	vpor   %xmm6,%xmm0,%xmm0
    4a48:	48 83 f8 7f          	cmp    $0x7f,%rax
    4a4c:	49 89 f9             	mov    %rdi,%r9
    4a4f:	c4 e3 7d 39 db 01    	vextracti128 $0x1,%ymm3,%xmm3
    4a55:	0f 97 c0             	seta   %al
    4a58:	0f b6 c0             	movzbl %al,%eax
    4a5b:	48 83 f8 00          	cmp    $0x0,%rax
    4a5f:	41 0f 45 f4          	cmovne %r12d,%esi
    4a63:	48 89 f8             	mov    %rdi,%rax
    4a66:	89 f1                	mov    %esi,%ecx
    4a68:	48 c1 e8 08          	shr    $0x8,%rax
    4a6c:	25 c0 00 00 00       	and    $0xc0,%eax
    4a71:	48 83 f8 7f          	cmp    $0x7f,%rax
    4a75:	0f 97 c0             	seta   %al
    4a78:	c1 e1 08             	shl    $0x8,%ecx
    4a7b:	0f b6 c0             	movzbl %al,%eax
    4a7e:	09 c8                	or     %ecx,%eax
    4a80:	3d 01 0f 00 00       	cmp    $0xf01,%eax
    4a85:	0f 94 c0             	sete   %al
    4a88:	0f b6 c0             	movzbl %al,%eax
    4a8b:	48 83 f8 00          	cmp    $0x0,%rax
    4a8f:	41 0f 45 f5          	cmovne %r13d,%esi
    4a93:	48 89 f8             	mov    %rdi,%rax
    4a96:	89 f1                	mov    %esi,%ecx
    4a98:	48 c1 e8 10          	shr    $0x10,%rax
    4a9c:	25 c0 00 00 00       	and    $0xc0,%eax
    4aa1:	48 83 f8 7f          	cmp    $0x7f,%rax
    4aa5:	0f 97 c0             	seta   %al
    4aa8:	c1 e1 08             	shl    $0x8,%ecx
    4aab:	0f b6 c0             	movzbl %al,%eax
    4aae:	09 c8                	or     %ecx,%eax
    4ab0:	3d 01 0f 00 00       	cmp    $0xf01,%eax
    4ab5:	0f 94 c0             	sete   %al
    4ab8:	0f b6 c0             	movzbl %al,%eax
    4abb:	48 83 f8 00          	cmp    $0x0,%rax
    4abf:	0f 45 f3             	cmovne %ebx,%esi
    4ac2:	48 89 f8             	mov    %rdi,%rax
    4ac5:	89 f1                	mov    %esi,%ecx
    4ac7:	bb 04 00 00 00       	mov    $0x4,%ebx
    4acc:	48 c1 e8 18          	shr    $0x18,%rax
    4ad0:	25 c0 00 00 00       	and    $0xc0,%eax
    4ad5:	48 83 f8 7f          	cmp    $0x7f,%rax
    4ad9:	0f 97 c0             	seta   %al
    4adc:	c1 e1 08             	shl    $0x8,%ecx
    4adf:	0f b6 c0             	movzbl %al,%eax
    4ae2:	09 c8                	or     %ecx,%eax
    4ae4:	3d 01 0f 00 00       	cmp    $0xf01,%eax
    4ae9:	0f 94 c0             	sete   %al
    4aec:	0f b6 c0             	movzbl %al,%eax
    4aef:	48 83 f8 00          	cmp    $0x0,%rax
    4af3:	41 0f 45 f0          	cmovne %r8d,%esi
    4af7:	48 89 f8             	mov    %rdi,%rax
    4afa:	89 f1                	mov    %esi,%ecx
    4afc:	48 c1 e8 20          	shr    $0x20,%rax
    4b00:	25 c0 00 00 00       	and    $0xc0,%eax
    4b05:	48 83 f8 7f          	cmp    $0x7f,%rax
    4b09:	0f 97 c0             	seta   %al
    4b0c:	c1 e1 08             	shl    $0x8,%ecx
    4b0f:	0f b6 c0             	movzbl %al,%eax
    4b12:	09 c8                	or     %ecx,%eax
    4b14:	3d 01 0f 00 00       	cmp    $0xf01,%eax
    4b19:	0f 94 c0             	sete   %al
    4b1c:	0f b6 c0             	movzbl %al,%eax
    4b1f:	48 83 f8 00          	cmp    $0x0,%rax
    4b23:	0f 45 f3             	cmovne %ebx,%esi
    4b26:	48 89 f8             	mov    %rdi,%rax
    4b29:	89 f1                	mov    %esi,%ecx
    4b2b:	48 c1 e8 28          	shr    $0x28,%rax
    4b2f:	25 c0 00 00 00       	and    $0xc0,%eax
    4b34:	48 83 f8 7f          	cmp    $0x7f,%rax
    4b38:	0f 97 c0             	seta   %al
    4b3b:	c1 e1 08             	shl    $0x8,%ecx
    4b3e:	0f b6 c0             	movzbl %al,%eax
    4b41:	09 c8                	or     %ecx,%eax
    4b43:	31 c9                	xor    %ecx,%ecx
    4b45:	3d 01 0f 00 00       	cmp    $0xf01,%eax
    4b4a:	b8 05 00 00 00       	mov    $0x5,%eax
    4b4f:	0f 94 c1             	sete   %cl
    4b52:	48 83 f9 00          	cmp    $0x0,%rcx
    4b56:	0f 45 f0             	cmovne %eax,%esi
    4b59:	8d 0c f5 00 00 00 00 	lea    0x0(,%rsi,8),%ecx
    4b60:	49 d3 e9             	shr    %cl,%r9
    4b63:	49 d3 ea             	shr    %cl,%r10
    4b66:	4c 89 d1             	mov    %r10,%rcx
    4b69:	45 89 ca             	mov    %r9d,%r10d
    4b6c:	4c 89 cb             	mov    %r9,%rbx
    4b6f:	48 89 4c 24 70       	mov    %rcx,0x70(%rsp)
    4b74:	41 c0 ea 02          	shr    $0x2,%r10b
    4b78:	31 c9                	xor    %ecx,%ecx
    4b7a:	80 7c 24 70 0f       	cmpb   $0xf,0x70(%rsp)
    4b7f:	0f 94 c1             	sete   %cl
    4b82:	44 88 94 24 a0 00 00 	mov    %r10b,0xa0(%rsp)
    4b89:	00 
    4b8a:	45 89 e2             	mov    %r12d,%r10d
    4b8d:	48 83 f9 00          	cmp    $0x0,%rcx
    4b91:	45 0f 45 fd          	cmovne %r13d,%r15d
    4b95:	44 89 c9             	mov    %r9d,%ecx
    4b98:	45 31 c9             	xor    %r9d,%r9d
    4b9b:	83 e1 f0             	and    $0xfffffff0,%ecx
    4b9e:	80 f9 a0             	cmp    $0xa0,%cl
    4ba1:	41 0f 94 c1          	sete   %r9b
    4ba5:	49 83 f9 00          	cmp    $0x0,%r9
    4ba9:	45 0f 45 d5          	cmovne %r13d,%r10d
    4bad:	80 f9 b0             	cmp    $0xb0,%cl
    4bb0:	45 89 e1             	mov    %r12d,%r9d
    4bb3:	44 89 54 24 48       	mov    %r10d,0x48(%rsp)
    4bb8:	0f 94 c1             	sete   %cl
    4bbb:	29 f0                	sub    %esi,%eax
    4bbd:	45 31 d2             	xor    %r10d,%r10d
    4bc0:	0f b6 c9             	movzbl %cl,%ecx
    4bc3:	48 83 f9 00          	cmp    $0x0,%rcx
    4bc7:	45 0f 45 cd          	cmovne %r13d,%r9d
    4bcb:	8d 0c c5 00 00 00 00 	lea    0x0(,%rax,8),%ecx
    4bd2:	44 89 4c 24 3c       	mov    %r9d,0x3c(%rsp)
    4bd7:	48 b8 ff ff ff ff ff 	movabs $0xffffffffff,%rax
    4bde:	00 00 00 
    4be1:	48 d3 f8             	sar    %cl,%rax
    4be4:	8d 0c f5 f8 ff ff ff 	lea    -0x8(,%rsi,8),%ecx
    4beb:	48 21 f8             	and    %rdi,%rax
    4bee:	49 89 c1             	mov    %rax,%r9
    4bf1:	c4 e1 f9 6e d0       	vmovq  %rax,%xmm2
    4bf6:	49 d3 e9             	shr    %cl,%r9
    4bf9:	c4 c1 f9 6e c9       	vmovq  %r9,%xmm1
    4bfe:	49 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%r9
    4c05:	c4 c3 f1 22 c9 01    	vpinsrq $0x1,%r9,%xmm1,%xmm1
    4c0b:	c5 f1 74 0d 7d e4 00 	vpcmpeqb 0xe47d(%rip),%xmm1,%xmm1        # 13090 <g_dyn_entry_table+0x10>
    4c12:	00 
    4c13:	c4 e1 f9 7e cf       	vmovq  %xmm1,%rdi
    4c18:	c4 c3 e9 22 c9 01    	vpinsrq $0x1,%r9,%xmm2,%xmm1
    4c1e:	45 89 e9             	mov    %r13d,%r9d
    4c21:	c5 f1 74 15 77 e4 00 	vpcmpeqb 0xe477(%rip),%xmm1,%xmm2        # 130a0 <g_dyn_entry_table+0x20>
    4c28:	00 
    4c29:	48 85 ff             	test   %rdi,%rdi
    4c2c:	44 89 ef             	mov    %r13d,%edi
    4c2f:	41 0f 94 c2          	sete   %r10b
    4c33:	48 d3 ea             	shr    %cl,%rdx
    4c36:	44 89 e1             	mov    %r12d,%ecx
    4c39:	49 83 fa 00          	cmp    $0x0,%r10
    4c3d:	41 0f 45 fc          	cmovne %r12d,%edi
    4c41:	c4 e1 f9 7e d0       	vmovq  %xmm2,%rax
    4c46:	c5 f1 74 15 62 e4 00 	vpcmpeqb 0xe462(%rip),%xmm1,%xmm2        # 130b0 <g_dyn_entry_table+0x30>
    4c4d:	00 
    4c4e:	83 e2 4f             	and    $0x4f,%edx
    4c51:	89 ff                	mov    %edi,%edi
    4c53:	48 83 ff 00          	cmp    $0x0,%rdi
    4c57:	0f 45 ca             	cmovne %edx,%ecx
    4c5a:	31 d2                	xor    %edx,%edx
    4c5c:	48 85 c0             	test   %rax,%rax
    4c5f:	44 89 e8             	mov    %r13d,%eax
    4c62:	89 4c 24 38          	mov    %ecx,0x38(%rsp)
    4c66:	0f 94 c2             	sete   %dl
    4c69:	44 89 e9             	mov    %r13d,%ecx
    4c6c:	48 83 fa 00          	cmp    $0x0,%rdx
    4c70:	41 0f 45 c4          	cmovne %r12d,%eax
    4c74:	89 c2                	mov    %eax,%edx
    4c76:	44 89 e0             	mov    %r12d,%eax
    4c79:	48 83 fa 00          	cmp    $0x0,%rdx
    4c7d:	41 0f 45 c5          	cmovne %r13d,%eax
    4c81:	c4 e1 f9 7e d2       	vmovq  %xmm2,%rdx
    4c86:	c5 f1 74 15 32 e4 00 	vpcmpeqb 0xe432(%rip),%xmm1,%xmm2        # 130c0 <g_dyn_entry_table+0x40>
    4c8d:	00 
    4c8e:	48 85 d2             	test   %rdx,%rdx
    4c91:	0f 94 c2             	sete   %dl
    4c94:	0f b6 d2             	movzbl %dl,%edx
    4c97:	48 83 fa 00          	cmp    $0x0,%rdx
    4c9b:	45 0f 45 cc          	cmovne %r12d,%r9d
    4c9f:	c4 e1 f9 7e d2       	vmovq  %xmm2,%rdx
    4ca4:	c5 f1 74 15 24 e4 00 	vpcmpeqb 0xe424(%rip),%xmm1,%xmm2        # 130d0 <g_dyn_entry_table+0x50>
    4cab:	00 
    4cac:	44 89 4c 24 34       	mov    %r9d,0x34(%rsp)
    4cb1:	49 b9 00 80 80 80 80 	movabs $0x8080808080808000,%r9
    4cb8:	80 80 80 
    4cbb:	48 85 d2             	test   %rdx,%rdx
    4cbe:	c5 f1 74 0d 1a e4 00 	vpcmpeqb 0xe41a(%rip),%xmm1,%xmm1        # 130e0 <g_dyn_entry_table+0x60>
    4cc5:	00 
    4cc6:	0f 94 c2             	sete   %dl
    4cc9:	0f b6 d2             	movzbl %dl,%edx
    4ccc:	48 83 fa 00          	cmp    $0x0,%rdx
    4cd0:	41 0f 45 cc          	cmovne %r12d,%ecx
    4cd4:	c4 e1 f9 7e d2       	vmovq  %xmm2,%rdx
    4cd9:	89 4c 24 30          	mov    %ecx,0x30(%rsp)
    4cdd:	31 c9                	xor    %ecx,%ecx
    4cdf:	c4 63 7d 39 f2 01    	vextracti128 $0x1,%ymm14,%xmm2
    4ce5:	48 85 d2             	test   %rdx,%rdx
    4ce8:	44 89 ea             	mov    %r13d,%edx
    4ceb:	0f 94 c1             	sete   %cl
    4cee:	48 83 f9 00          	cmp    $0x0,%rcx
    4cf2:	41 0f 45 d4          	cmovne %r12d,%edx
    4cf6:	89 d2                	mov    %edx,%edx
    4cf8:	31 c9                	xor    %ecx,%ecx
    4cfa:	48 83 fa 00          	cmp    $0x0,%rdx
    4cfe:	41 0f 45 c0          	cmovne %r8d,%eax
    4d02:	c4 e1 f9 7e ca       	vmovq  %xmm1,%rdx
    4d07:	c4 e3 7d 39 e1 01    	vextracti128 $0x1,%ymm4,%xmm1
    4d0d:	41 89 c0             	mov    %eax,%r8d
    4d10:	c5 fd 6f a4 24 80 00 	vmovdqa 0x80(%rsp),%ymm4
    4d17:	00 00 
    4d19:	c5 f9 eb c1          	vpor   %xmm1,%xmm0,%xmm0
    4d1d:	48 85 d2             	test   %rdx,%rdx
    4d20:	44 89 ea             	mov    %r13d,%edx
    4d23:	c4 e3 7d 39 e1 01    	vextracti128 $0x1,%ymm4,%xmm1
    4d29:	0f 94 c1             	sete   %cl
    4d2c:	c5 f9 eb c1          	vpor   %xmm1,%xmm0,%xmm0
    4d30:	c4 e3 7d 39 f9 01    	vextracti128 $0x1,%ymm7,%xmm1
    4d36:	c4 c1 79 eb c7       	vpor   %xmm15,%xmm0,%xmm0
    4d3b:	c5 f1 eb ca          	vpor   %xmm2,%xmm1,%xmm1
    4d3f:	c5 f9 eb c3          	vpor   %xmm3,%xmm0,%xmm0
    4d43:	c5 f9 eb c1          	vpor   %xmm1,%xmm0,%xmm0
    4d47:	48 83 f9 00          	cmp    $0x0,%rcx
    4d4b:	41 0f 45 d4          	cmovne %r12d,%edx
    4d4f:	c4 e1 f9 7e c0       	vmovq  %xmm0,%rax
    4d54:	8d 0c f5 08 00 00 00 	lea    0x8(,%rsi,8),%ecx
    4d5b:	89 d2                	mov    %edx,%edx
    4d5d:	44 01 fe             	add    %r15d,%esi
    4d60:	48 d3 f8             	sar    %cl,%rax
    4d63:	44 89 f9             	mov    %r15d,%ecx
    4d66:	48 83 fa 00          	cmp    $0x0,%rdx
    4d6a:	45 0f 45 c6          	cmovne %r14d,%r8d
    4d6e:	89 c2                	mov    %eax,%edx
    4d70:	44 89 44 24 5c       	mov    %r8d,0x5c(%rsp)
    4d75:	41 89 f0             	mov    %esi,%r8d
    4d78:	45 89 e6             	mov    %r12d,%r14d
    4d7b:	c0 ea 04             	shr    $0x4,%dl
    4d7e:	41 89 d2             	mov    %edx,%r10d
    4d81:	8b 94 24 a0 00 00 00 	mov    0xa0(%rsp),%edx
    4d88:	89 b4 24 e0 00 00 00 	mov    %esi,0xe0(%rsp)
    4d8f:	41 83 e2 03          	and    $0x3,%r10d
    4d93:	48 89 5c 24 40       	mov    %rbx,0x40(%rsp)
    4d98:	83 e2 03             	and    $0x3,%edx
    4d9b:	48 83 f9 00          	cmp    $0x0,%rcx
    4d9f:	41 0f 45 d2          	cmovne %r10d,%edx
    4da3:	41 8d 48 01          	lea    0x1(%r8),%ecx
    4da7:	0f b6 c9             	movzbl %cl,%ecx
    4daa:	4c 09 c9             	or     %r9,%rcx
    4dad:	c4 e1 f9 6e f9       	vmovq  %rcx,%xmm7
    4db2:	c4 c3 c1 22 c3 01    	vpinsrq $0x1,%r11,%xmm7,%xmm0
    4db8:	c4 e2 51 00 c0       	vpshufb %xmm0,%xmm5,%xmm0
    4dbd:	c4 e1 f9 7e c1       	vmovq  %xmm0,%rcx
    4dc2:	89 ce                	mov    %ecx,%esi
    4dc4:	41 89 c8             	mov    %ecx,%r8d
    4dc7:	40 c0 ee 03          	shr    $0x3,%sil
    4dcb:	41 c0 e8 06          	shr    $0x6,%r8b
    4dcf:	89 f7                	mov    %esi,%edi
    4dd1:	44 88 44 24 64       	mov    %r8b,0x64(%rsp)
    4dd6:	83 e7 07             	and    $0x7,%edi
    4dd9:	40 88 7c 24 60       	mov    %dil,0x60(%rsp)
    4dde:	89 cf                	mov    %ecx,%edi
    4de0:	83 e1 c7             	and    $0xffffffc7,%ecx
    4de3:	88 8c 24 c0 00 00 00 	mov    %cl,0xc0(%rsp)
    4dea:	83 e7 07             	and    $0x7,%edi
    4ded:	31 c9                	xor    %ecx,%ecx
    4def:	41 80 f8 03          	cmp    $0x3,%r8b
    4df3:	41 89 d8             	mov    %ebx,%r8d
    4df6:	0f 95 c1             	setne  %cl
    4df9:	40 88 bc 24 80 00 00 	mov    %dil,0x80(%rsp)
    4e00:	00 
    4e01:	83 e6 07             	and    $0x7,%esi
    4e04:	41 83 e0 30          	and    $0x30,%r8d
    4e08:	01 f6                	add    %esi,%esi
    4e0a:	48 83 f9 00          	cmp    $0x0,%rcx
    4e0e:	45 0f 45 f5          	cmovne %r13d,%r14d
    4e12:	44 89 c1             	mov    %r8d,%ecx
    4e15:	41 89 d8             	mov    %ebx,%r8d
    4e18:	31 db                	xor    %ebx,%ebx
    4e1a:	41 c0 e8 06          	shr    $0x6,%r8b
    4e1e:	41 0f b6 f8          	movzbl %r8b,%edi
    4e22:	49 b8 aa 6a aa aa a5 	movabs $0x155a55a5aaaa6aaa,%r8
    4e29:	55 5a 15 
    4e2c:	40 80 ff 03          	cmp    $0x3,%dil
    4e30:	0f 94 c3             	sete   %bl
    4e33:	01 f1                	add    %esi,%ecx
    4e35:	49 d3 e8             	shr    %cl,%r8
    4e38:	0f b6 4c 24 60       	movzbl 0x60(%rsp),%ecx
    4e3d:	41 83 e0 03          	and    $0x3,%r8d
    4e41:	48 83 fb 00          	cmp    $0x0,%rbx
    4e45:	41 0f 45 d0          	cmovne %r8d,%edx
    4e49:	41 b8 4c 00 00 00    	mov    $0x4c,%r8d
    4e4f:	44 89 e3             	mov    %r12d,%ebx
    4e52:	49 d3 e8             	shr    %cl,%r8
    4e55:	0f b6 4c 24 70       	movzbl 0x70(%rsp),%ecx
    4e5a:	41 83 e0 01          	and    $0x1,%r8d
    4e5e:	c1 e1 04             	shl    $0x4,%ecx
    4e61:	49 83 f8 00          	cmp    $0x0,%r8
    4e65:	41 0f 45 dd          	cmovne %r13d,%ebx
    4e69:	01 df                	add    %ebx,%edi
    4e6b:	45 89 e0             	mov    %r12d,%r8d
    4e6e:	09 f9                	or     %edi,%ecx
    4e70:	89 c7                	mov    %eax,%edi
    4e72:	81 f9 f4 0f 00 00    	cmp    $0xff4,%ecx
    4e78:	0f 94 c1             	sete   %cl
    4e7b:	40 c0 ef 06          	shr    $0x6,%dil
    4e7f:	31 db                	xor    %ebx,%ebx
    4e81:	0f b6 c9             	movzbl %cl,%ecx
    4e84:	40 0f b6 ff          	movzbl %dil,%edi
    4e88:	48 83 f9 00          	cmp    $0x0,%rcx
    4e8c:	45 0f 45 c5          	cmovne %r13d,%r8d
    4e90:	44 89 44 24 2c       	mov    %r8d,0x2c(%rsp)
    4e95:	45 89 f8             	mov    %r15d,%r8d
    4e98:	0f b6 4c 24 5c       	movzbl 0x5c(%rsp),%ecx
    4e9d:	41 c1 e0 04          	shl    $0x4,%r8d
    4ea1:	c5 fb f0 0d 67 31 01 	vlddqu 0x13167(%rip),%xmm1        # 18010 <extension_2op_table>
    4ea8:	00 
    4ea9:	41 09 f8             	or     %edi,%r8d
    4eac:	41 83 f8 11          	cmp    $0x11,%r8d
    4eb0:	0f 94 c3             	sete   %bl
    4eb3:	01 c9                	add    %ecx,%ecx
    4eb5:	c0 e8 03             	shr    $0x3,%al
    4eb8:	42 8d 0c d1          	lea    (%rcx,%r10,8),%ecx
    4ebc:	41 ba 1a 05 0a 00    	mov    $0xa051a,%r10d
    4ec2:	83 e0 07             	and    $0x7,%eax
    4ec5:	41 d3 ea             	shr    %cl,%r10d
    4ec8:	41 83 e2 03          	and    $0x3,%r10d
    4ecc:	48 83 fb 00          	cmp    $0x0,%rbx
    4ed0:	41 0f 45 d2          	cmovne %r10d,%edx
    4ed4:	44 8d 14 00          	lea    (%rax,%rax,1),%r10d
    4ed8:	41 8d 4a 01          	lea    0x1(%r10),%ecx
    4edc:	c1 e1 08             	shl    $0x8,%ecx
    4edf:	44 09 d1             	or     %r10d,%ecx
    4ee2:	41 83 f8 13          	cmp    $0x13,%r8d
    4ee6:	c5 f9 6e f9          	vmovd  %ecx,%xmm7
    4eea:	89 f1                	mov    %esi,%ecx
    4eec:	0f b6 74 24 64       	movzbl 0x64(%rsp),%esi
    4ef1:	41 0f 94 c0          	sete   %r8b
    4ef5:	41 c1 e7 0c          	shl    $0xc,%r15d
    4ef9:	c5 f9 70 c7 00       	vpshufd $0x0,%xmm7,%xmm0
    4efe:	45 0f b6 c0          	movzbl %r8b,%r8d
    4f02:	c1 e7 08             	shl    $0x8,%edi
    4f05:	c4 e2 71 00 c0       	vpshufb %xmm0,%xmm1,%xmm0
    4f0a:	89 74 24 64          	mov    %esi,0x64(%rsp)
    4f0e:	c4 c1 f9 7e c2       	vmovq  %xmm0,%r10
    4f13:	41 d3 ea             	shr    %cl,%r10d
    4f16:	41 83 e2 03          	and    $0x3,%r10d
    4f1a:	49 83 f8 00          	cmp    $0x0,%r8
    4f1e:	41 0f 45 d2          	cmovne %r10d,%edx
    4f22:	41 89 f0             	mov    %esi,%r8d
    4f25:	c1 e6 04             	shl    $0x4,%esi
    4f28:	44 8b 94 24 e0 00 00 	mov    0xe0(%rsp),%r10d
    4f2f:	00 
    4f30:	41 09 f7             	or     %esi,%r15d
    4f33:	89 74 24 60          	mov    %esi,0x60(%rsp)
    4f37:	41 09 c7             	or     %eax,%r15d
    4f3a:	31 c0                	xor    %eax,%eax
    4f3c:	41 09 ff             	or     %edi,%r15d
    4f3f:	41 81 ff 32 13 00 00 	cmp    $0x1332,%r15d
    4f46:	44 0f b6 bc 24 c0 00 	movzbl 0xc0(%rsp),%r15d
    4f4d:	00 00 
    4f4f:	0f 97 c0             	seta   %al
    4f52:	48 83 f8 00          	cmp    $0x0,%rax
    4f56:	41 0f 45 d4          	cmovne %r12d,%edx
    4f5a:	31 c0                	xor    %eax,%eax
    4f5c:	41 80 f8 03          	cmp    $0x3,%r8b
    4f60:	0f 94 c0             	sete   %al
    4f63:	48 83 f8 00          	cmp    $0x0,%rax
    4f67:	41 0f 45 d4          	cmovne %r12d,%edx
    4f6b:	89 54 24 28          	mov    %edx,0x28(%rsp)
    4f6f:	44 89 d2             	mov    %r10d,%edx
    4f72:	8d 42 02             	lea    0x2(%rdx),%eax
    4f75:	0f b6 c0             	movzbl %al,%eax
    4f78:	48 89 c2             	mov    %rax,%rdx
    4f7b:	48 8d 48 01          	lea    0x1(%rax),%rcx
    4f7f:	4c 09 ca             	or     %r9,%rdx
    4f82:	48 c1 e1 08          	shl    $0x8,%rcx
    4f86:	c4 e1 f9 6e c2       	vmovq  %rdx,%xmm0
    4f8b:	48 8d 50 03          	lea    0x3(%rax),%rdx
    4f8f:	48 c1 e2 18          	shl    $0x18,%rdx
    4f93:	c4 c3 f9 22 c3 01    	vpinsrq $0x1,%r11,%xmm0,%xmm0
    4f99:	48 09 ca             	or     %rcx,%rdx
    4f9c:	c4 e2 51 00 c0       	vpshufb %xmm0,%xmm5,%xmm0
    4fa1:	48 b9 00 00 00 00 80 	movabs $0x8080808000000000,%rcx
    4fa8:	80 80 80 
    4fab:	48 09 c2             	or     %rax,%rdx
    4fae:	48 83 c0 02          	add    $0x2,%rax
    4fb2:	c4 c1 f9 7e c0       	vmovq  %xmm0,%r8
    4fb7:	48 c1 e0 10          	shl    $0x10,%rax
    4fbb:	48 09 d0             	or     %rdx,%rax
    4fbe:	44 89 d2             	mov    %r10d,%edx
    4fc1:	83 c2 03             	add    $0x3,%edx
    4fc4:	48 09 c8             	or     %rcx,%rax
    4fc7:	0f b6 d2             	movzbl %dl,%edx
    4fca:	c4 e1 f9 6e e0       	vmovq  %rax,%xmm4
    4fcf:	48 8d 72 01          	lea    0x1(%rdx),%rsi
    4fd3:	48 8d 42 03          	lea    0x3(%rdx),%rax
    4fd7:	c4 c3 d9 22 c3 01    	vpinsrq $0x1,%r11,%xmm4,%xmm0
    4fdd:	48 c1 e6 08          	shl    $0x8,%rsi
    4fe1:	48 c1 e0 18          	shl    $0x18,%rax
    4fe5:	c4 e2 51 00 c0       	vpshufb %xmm0,%xmm5,%xmm0
    4fea:	48 09 f0             	or     %rsi,%rax
    4fed:	48 8d 72 02          	lea    0x2(%rdx),%rsi
    4ff1:	c4 e1 f9 7e c3       	vmovq  %xmm0,%rbx
    4ff6:	48 09 d0             	or     %rdx,%rax
    4ff9:	48 c1 e6 10          	shl    $0x10,%rsi
    4ffd:	4c 09 ca             	or     %r9,%rdx
    5000:	48 89 5c 24 70       	mov    %rbx,0x70(%rsp)
    5005:	48 09 f0             	or     %rsi,%rax
    5008:	c4 e1 f9 6e e2       	vmovq  %rdx,%xmm4
    500d:	bb 04 00 00 00       	mov    $0x4,%ebx
    5012:	44 89 e2             	mov    %r12d,%edx
    5015:	48 09 c8             	or     %rcx,%rax
    5018:	31 c9                	xor    %ecx,%ecx
    501a:	41 80 ff 05          	cmp    $0x5,%r15b
    501e:	44 89 e6             	mov    %r12d,%esi
    5021:	c4 e1 f9 6e f8       	vmovq  %rax,%xmm7
    5026:	0f 94 c1             	sete   %cl
    5029:	45 89 c1             	mov    %r8d,%r9d
    502c:	45 31 d2             	xor    %r10d,%r10d
    502f:	c4 c3 c1 22 c3 01    	vpinsrq $0x1,%r11,%xmm7,%xmm0
    5035:	c4 e2 51 00 c0       	vpshufb %xmm0,%xmm5,%xmm0
    503a:	c4 e1 f9 7e c0       	vmovq  %xmm0,%rax
    503f:	c4 c3 d9 22 c3 01    	vpinsrq $0x1,%r11,%xmm4,%xmm0
    5045:	45 89 f3             	mov    %r14d,%r11d
    5048:	48 83 f9 00          	cmp    $0x0,%rcx
    504c:	0f 45 54 24 70       	cmovne 0x70(%rsp),%edx
    5051:	48 83 f9 00          	cmp    $0x0,%rcx
    5055:	0f 45 f3             	cmovne %ebx,%esi
    5058:	0f b6 8c 24 80 00 00 	movzbl 0x80(%rsp),%ecx
    505f:	00 
    5060:	41 c1 e3 08          	shl    $0x8,%r11d
    5064:	c4 e2 51 00 e8       	vpshufb %xmm0,%xmm5,%xmm5
    5069:	89 4c 24 5c          	mov    %ecx,0x5c(%rsp)
    506d:	44 09 d9             	or     %r11d,%ecx
    5070:	81 f9 04 01 00 00    	cmp    $0x104,%ecx
    5076:	41 0f 94 c2          	sete   %r10b
    507a:	41 c0 e9 06          	shr    $0x6,%r9b
    507e:	41 0f b6 c9          	movzbl %r9b,%ecx
    5082:	41 b9 ff 00 00 00    	mov    $0xff,%r9d
    5088:	41 c1 e6 10          	shl    $0x10,%r14d
    508c:	44 89 cf             	mov    %r9d,%edi
    508f:	49 83 fa 00          	cmp    $0x0,%r10
    5093:	0f 45 f9             	cmovne %ecx,%edi
    5096:	44 89 e1             	mov    %r12d,%ecx
    5099:	89 7c 24 24          	mov    %edi,0x24(%rsp)
    509d:	8b 7c 24 38          	mov    0x38(%rsp),%edi
    50a1:	49 83 fa 00          	cmp    $0x0,%r10
    50a5:	41 0f 45 cd          	cmovne %r13d,%ecx
    50a9:	8d 74 0e 01          	lea    0x1(%rsi,%rcx,1),%esi
    50ad:	89 74 24 58          	mov    %esi,0x58(%rsp)
    50b1:	44 89 c6             	mov    %r8d,%esi
    50b4:	40 c0 ee 03          	shr    $0x3,%sil
    50b8:	89 f1                	mov    %esi,%ecx
    50ba:	8d 34 bd 00 00 00 00 	lea    0x0(,%rdi,4),%esi
    50c1:	83 e6 08             	and    $0x8,%esi
    50c4:	83 e1 07             	and    $0x7,%ecx
    50c7:	09 f1                	or     %esi,%ecx
    50c9:	44 89 ce             	mov    %r9d,%esi
    50cc:	49 83 fa 00          	cmp    $0x0,%r10
    50d0:	0f 45 f1             	cmovne %ecx,%esi
    50d3:	8d 0c fd 00 00 00 00 	lea    0x0(,%rdi,8),%ecx
    50da:	44 89 c7             	mov    %r8d,%edi
    50dd:	89 74 24 38          	mov    %esi,0x38(%rsp)
    50e1:	45 0f b6 c0          	movzbl %r8b,%r8d
    50e5:	83 e7 07             	and    $0x7,%edi
    50e8:	83 e1 08             	and    $0x8,%ecx
    50eb:	89 fe                	mov    %edi,%esi
    50ed:	44 89 e7             	mov    %r12d,%edi
    50f0:	09 ce                	or     %ecx,%esi
    50f2:	49 83 fa 00          	cmp    $0x0,%r10
    50f6:	0f 45 fe             	cmovne %esi,%edi
    50f9:	89 fe                	mov    %edi,%esi
    50fb:	41 0f b6 ff          	movzbl %r15b,%edi
    50ff:	41 89 f7             	mov    %esi,%r15d
    5102:	89 74 24 20          	mov    %esi,0x20(%rsp)
    5106:	41 c1 e7 08          	shl    $0x8,%r15d
    510a:	44 89 fe             	mov    %r15d,%esi
    510d:	45 31 ff             	xor    %r15d,%r15d
    5110:	81 e6 00 07 00 00    	and    $0x700,%esi
    5116:	44 09 f6             	or     %r14d,%esi
    5119:	09 fe                	or     %edi,%esi
    511b:	81 fe 04 05 01 00    	cmp    $0x10504,%esi
    5121:	44 89 e6             	mov    %r12d,%esi
    5124:	41 0f 94 c7          	sete   %r15b
    5128:	41 09 fb             	or     %edi,%r11d
    512b:	44 89 e7             	mov    %r12d,%edi
    512e:	49 83 ff 00          	cmp    $0x0,%r15
    5132:	0f 45 f3             	cmovne %ebx,%esi
    5135:	49 83 ff 00          	cmp    $0x0,%r15
    5139:	0f 45 d0             	cmovne %eax,%edx
    513c:	44 8b 7c 24 58       	mov    0x58(%rsp),%r15d
    5141:	41 01 f7             	add    %esi,%r15d
    5144:	c4 e1 f9 7e ee       	vmovq  %xmm5,%rsi
    5149:	44 89 fb             	mov    %r15d,%ebx
    514c:	45 31 ff             	xor    %r15d,%r15d
    514f:	41 81 fb 44 01 00 00 	cmp    $0x144,%r11d
    5156:	40 0f b6 f6          	movzbl %sil,%esi
    515a:	41 0f 94 c7          	sete   %r15b
    515e:	49 83 ff 00          	cmp    $0x0,%r15
    5162:	0f 45 fe             	cmovne %esi,%edi
    5165:	44 89 e6             	mov    %r12d,%esi
    5168:	49 83 ff 00          	cmp    $0x0,%r15
    516c:	41 0f 45 f5          	cmovne %r13d,%esi
    5170:	01 de                	add    %ebx,%esi
    5172:	41 81 fb 84 01 00 00 	cmp    $0x184,%r11d
    5179:	41 bf 04 00 00 00    	mov    $0x4,%r15d
    517f:	8b 5c 24 5c          	mov    0x5c(%rsp),%ebx
    5183:	41 0f 94 c3          	sete   %r11b
    5187:	45 0f b6 db          	movzbl %r11b,%r11d
    518b:	49 83 fb 00          	cmp    $0x0,%r11
    518f:	0f 45 d0             	cmovne %eax,%edx
    5192:	44 89 e0             	mov    %r12d,%eax
    5195:	49 83 fb 00          	cmp    $0x0,%r11
    5199:	41 0f 45 c7          	cmovne %r15d,%eax
    519d:	45 31 db             	xor    %r11d,%r11d
    51a0:	01 c6                	add    %eax,%esi
    51a2:	80 bc 24 80 00 00 00 	cmpb   $0x4,0x80(%rsp)
    51a9:	04 
    51aa:	44 89 e0             	mov    %r12d,%eax
    51ad:	41 0f 95 c3          	setne  %r11b
    51b1:	49 83 fb 00          	cmp    $0x0,%r11
    51b5:	41 0f 45 c5          	cmovne %r13d,%eax
    51b9:	44 8b 5c 24 64       	mov    0x64(%rsp),%r11d
    51be:	c1 e0 08             	shl    $0x8,%eax
    51c1:	44 09 f0             	or     %r14d,%eax
    51c4:	44 09 d8             	or     %r11d,%eax
    51c7:	45 31 db             	xor    %r11d,%r11d
    51ca:	3d 01 01 01 00       	cmp    $0x10101,%eax
    51cf:	41 0f 94 c3          	sete   %r11b
    51d3:	49 83 fb 00          	cmp    $0x0,%r11
    51d7:	41 0f 45 f8          	cmovne %r8d,%edi
    51db:	45 89 e0             	mov    %r12d,%r8d
    51de:	49 83 fb 00          	cmp    $0x0,%r11
    51e2:	45 0f 45 c5          	cmovne %r13d,%r8d
    51e6:	41 01 f0             	add    %esi,%r8d
    51e9:	3d 02 01 01 00       	cmp    $0x10102,%eax
    51ee:	4c 0f be df          	movsbq %dil,%r11
    51f2:	44 89 e6             	mov    %r12d,%esi
    51f5:	0f 94 c0             	sete   %al
    51f8:	09 d9                	or     %ebx,%ecx
    51fa:	0f b6 c0             	movzbl %al,%eax
    51fd:	49 83 fa 00          	cmp    $0x0,%r10
    5201:	41 0f 45 cf          	cmovne %r15d,%ecx
    5205:	48 83 f8 00          	cmp    $0x0,%rax
    5209:	41 0f 45 f7          	cmovne %r15d,%esi
    520d:	48 83 f8 00          	cmp    $0x0,%rax
    5211:	0f 45 54 24 70       	cmovne 0x70(%rsp),%edx
    5216:	41 01 f0             	add    %esi,%r8d
    5219:	31 c0                	xor    %eax,%eax
    521b:	8b 74 24 20          	mov    0x20(%rsp),%esi
    521f:	4d 85 db             	test   %r11,%r11
    5222:	0f 94 c0             	sete   %al
    5225:	89 d2                	mov    %edx,%edx
    5227:	41 89 da             	mov    %ebx,%r10d
    522a:	48 83 f8 00          	cmp    $0x0,%rax
    522e:	4c 0f 45 da          	cmovne %rdx,%r11
    5232:	31 d2                	xor    %edx,%edx
    5234:	80 bc 24 c0 00 00 00 	cmpb   $0x4,0xc0(%rsp)
    523b:	04 
    523c:	0f b6 c1             	movzbl %cl,%eax
    523f:	44 8b 7c 24 60       	mov    0x60(%rsp),%r15d
    5244:	0f 94 c2             	sete   %dl
    5247:	48 8b 7c 24 78       	mov    0x78(%rsp),%rdi
    524c:	48 83 fa 00          	cmp    $0x0,%rdx
    5250:	41 0f 45 c1          	cmovne %r9d,%eax
    5254:	89 f2                	mov    %esi,%edx
    5256:	83 e2 07             	and    $0x7,%edx
    5259:	44 09 fa             	or     %r15d,%edx
    525c:	83 fa 05             	cmp    $0x5,%edx
    525f:	0f 94 c2             	sete   %dl
    5262:	0f b6 d2             	movzbl %dl,%edx
    5265:	48 83 fa 00          	cmp    $0x0,%rdx
    5269:	41 0f 45 f1          	cmovne %r9d,%esi
    526d:	31 d2                	xor    %edx,%edx
    526f:	80 f9 04             	cmp    $0x4,%cl
    5272:	0f 94 c2             	sete   %dl
    5275:	45 09 fa             	or     %r15d,%r10d
    5278:	48 83 fa 00          	cmp    $0x0,%rdx
    527c:	0f 45 c6             	cmovne %esi,%eax
    527f:	31 d2                	xor    %edx,%edx
    5281:	41 83 fa 05          	cmp    $0x5,%r10d
    5285:	89 c6                	mov    %eax,%esi
    5287:	b8 10 00 00 00       	mov    $0x10,%eax
    528c:	0f 94 c2             	sete   %dl
    528f:	31 db                	xor    %ebx,%ebx
    5291:	48 83 fa 00          	cmp    $0x0,%rdx
    5295:	0f 45 f0             	cmovne %eax,%esi
    5298:	e8 23 f1 ff ff       	call   43c0 <register_value_select>
    529d:	89 f1                	mov    %esi,%ecx
    529f:	8b 74 24 38          	mov    0x38(%rsp),%esi
    52a3:	4c 8b 74 24 68       	mov    0x68(%rsp),%r14
    52a8:	44 8b 54 24 34       	mov    0x34(%rsp),%r10d
    52ad:	48 89 c2             	mov    %rax,%rdx
    52b0:	31 c0                	xor    %eax,%eax
    52b2:	48 83 f9 10          	cmp    $0x10,%rcx
    52b6:	49 0f 44 d6          	cmove  %r14,%rdx
    52ba:	48 81 f9 ff 00 00 00 	cmp    $0xff,%rcx
    52c1:	48 0f 44 d3          	cmove  %rbx,%rdx
    52c5:	89 d1                	mov    %edx,%ecx
    52c7:	49 83 fa 01          	cmp    $0x1,%r10
    52cb:	48 0f 44 d1          	cmove  %rcx,%rdx
    52cf:	83 fe 04             	cmp    $0x4,%esi
    52d2:	0f 94 c0             	sete   %al
    52d5:	48 83 f8 00          	cmp    $0x0,%rax
    52d9:	41 0f 45 f1          	cmovne %r9d,%esi
    52dd:	e8 de f0 ff ff       	call   43c0 <register_value_select>
    52e2:	44 8b 4c 24 28       	mov    0x28(%rsp),%r9d
    52e7:	89 f6                	mov    %esi,%esi
    52e9:	48 83 fe 10          	cmp    $0x10,%rsi
    52ed:	49 0f 44 c6          	cmove  %r14,%rax
    52f1:	48 81 fe ff 00 00 00 	cmp    $0xff,%rsi
    52f8:	48 0f 44 c3          	cmove  %rbx,%rax
    52fc:	89 c1                	mov    %eax,%ecx
    52fe:	41 be 02 00 00 00    	mov    $0x2,%r14d
    5304:	49 83 fa 01          	cmp    $0x1,%r10
    5308:	48 0f 44 c1          	cmove  %rcx,%rax
    530c:	45 85 c9             	test   %r9d,%r9d
    530f:	44 89 e9             	mov    %r13d,%ecx
    5312:	40 0f 94 c6          	sete   %sil
    5316:	40 0f b6 f6          	movzbl %sil,%esi
    531a:	48 83 fe 00          	cmp    $0x0,%rsi
    531e:	41 0f 45 cc          	cmovne %r12d,%ecx
    5322:	41 01 c8             	add    %ecx,%r8d
    5325:	0f b6 4c 24 24       	movzbl 0x24(%rsp),%ecx
    532a:	44 89 ee             	mov    %r13d,%esi
    532d:	d3 e6                	shl    %cl,%esi
    532f:	48 63 ce             	movslq %esi,%rcx
    5332:	48 0f af c1          	imul   %rcx,%rax
    5336:	48 01 c2             	add    %rax,%rdx
    5339:	8b 84 24 a0 00 00 00 	mov    0xa0(%rsp),%eax
    5340:	4c 01 da             	add    %r11,%rdx
    5343:	83 e0 0f             	and    $0xf,%eax
    5346:	8d 70 06             	lea    0x6(%rax),%esi
    5349:	e8 72 f0 ff ff       	call   43c0 <register_value_select>
    534e:	8b 74 24 40          	mov    0x40(%rsp),%esi
    5352:	44 8b 7c 24 3c       	mov    0x3c(%rsp),%r15d
    5357:	48 89 c1             	mov    %rax,%rcx
    535a:	8b 44 24 48          	mov    0x48(%rsp),%eax
    535e:	44 8b 64 24 2c       	mov    0x2c(%rsp),%r12d
    5363:	83 e6 03             	and    $0x3,%esi
    5366:	48 83 f8 01          	cmp    $0x1,%rax
    536a:	48 0f 44 d1          	cmove  %rcx,%rdx
    536e:	89 f1                	mov    %esi,%ecx
    5370:	49 89 c3             	mov    %rax,%r11
    5373:	be 04 00 00 00       	mov    $0x4,%esi
    5378:	83 c1 01             	add    $0x1,%ecx
    537b:	48 83 f8 00          	cmp    $0x0,%rax
    537f:	44 0f 45 c9          	cmovne %ecx,%r9d
    5383:	44 89 f8             	mov    %r15d,%eax
    5386:	44 09 e0             	or     %r12d,%eax
    5389:	49 89 c2             	mov    %rax,%r10
    538c:	48 83 f8 00          	cmp    $0x0,%rax
    5390:	45 0f 45 ce          	cmovne %r14d,%r9d
    5394:	e8 27 f0 ff ff       	call   43c0 <register_value_select>
    5399:	8b 4c 24 30          	mov    0x30(%rsp),%ecx
    539d:	8b 5c 24 4c          	mov    0x4c(%rsp),%ebx
    53a1:	49 83 fa 01          	cmp    $0x1,%r10
    53a5:	48 0f 44 d0          	cmove  %rax,%rdx
    53a9:	42 8d 04 09          	lea    (%rcx,%r9,1),%eax
    53ad:	31 c9                	xor    %ecx,%ecx
    53af:	44 8b 94 24 e0 00 00 	mov    0xe0(%rsp),%r10d
    53b6:	00 
    53b7:	83 f8 02             	cmp    $0x2,%eax
    53ba:	44 89 c8             	mov    %r9d,%eax
    53bd:	0f 97 c1             	seta   %cl
    53c0:	48 83 f9 00          	cmp    $0x0,%rcx
    53c4:	41 0f 45 c5          	cmovne %r13d,%eax
    53c8:	44 89 f9             	mov    %r15d,%ecx
    53cb:	44 09 d9             	or     %r11d,%ecx
    53ce:	48 83 f9 00          	cmp    $0x0,%rcx
    53d2:	45 0f 45 c5          	cmovne %r13d,%r8d
    53d6:	44 89 e1             	mov    %r12d,%ecx
    53d9:	48 83 f9 00          	cmp    $0x0,%rcx
    53dd:	45 0f 45 c6          	cmovne %r14d,%r8d
    53e1:	42 8d 0c 03          	lea    (%rbx,%r8,1),%ecx
    53e5:	48 8b 5c 24 50       	mov    0x50(%rsp),%rbx
    53ea:	44 01 d1             	add    %r10d,%ecx
    53ed:	83 f9 10             	cmp    $0x10,%ecx
    53f0:	48 89 13             	mov    %rdx,(%rbx)
    53f3:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
    53f8:	0f 96 c1             	setbe  %cl
    53fb:	0f b6 c9             	movzbl %cl,%ecx
    53fe:	48 21 c1             	and    %rax,%rcx
    5401:	48 83 f9 00          	cmp    $0x0,%rcx
    5405:	0f 45 c0             	cmovne %eax,%eax
    5408:	f6 05 14 2a 01 00 08 	testb  $0x8,0x12a14(%rip)        # 17e23 <g_cpu_feature_indicator+0x3>
    540f:	0f 84 1b 01 00 00    	je     5530 <ct_decode+0x10d0>
    5415:	62 f1 7c 48 28 03    	vmovaps (%rbx),%zmm0
    541b:	62 f1 7c 48 28 4b 01 	vmovaps 0x40(%rbx),%zmm1
    5422:	62 f1 7c 48 28 53 02 	vmovaps 0x80(%rbx),%zmm2
    5429:	62 f1 7c 48 28 5b 03 	vmovaps 0xc0(%rbx),%zmm3
    5430:	62 f1 7c 48 28 63 04 	vmovaps 0x100(%rbx),%zmm4
    5437:	62 f1 7c 48 28 6b 05 	vmovaps 0x140(%rbx),%zmm5
    543e:	62 f1 7c 48 28 73 06 	vmovaps 0x180(%rbx),%zmm6
    5445:	62 f1 7c 48 28 7b 07 	vmovaps 0x1c0(%rbx),%zmm7
    544c:	62 71 7c 48 28 43 08 	vmovaps 0x200(%rbx),%zmm8
    5453:	62 71 7c 48 28 4b 09 	vmovaps 0x240(%rbx),%zmm9
    545a:	62 71 7c 48 28 53 0a 	vmovaps 0x280(%rbx),%zmm10
    5461:	62 71 7c 48 28 5b 0b 	vmovaps 0x2c0(%rbx),%zmm11
    5468:	62 71 7c 48 28 63 0c 	vmovaps 0x300(%rbx),%zmm12
    546f:	62 71 7c 48 28 6b 0d 	vmovaps 0x340(%rbx),%zmm13
    5476:	62 71 7c 48 28 73 0e 	vmovaps 0x380(%rbx),%zmm14
    547d:	62 71 7c 48 28 7b 0f 	vmovaps 0x3c0(%rbx),%zmm15
    5484:	48 8b 94 24 38 05 00 	mov    0x538(%rsp),%rdx
    548b:	00 
    548c:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    5493:	00 00 
    5495:	0f 85 0d 01 00 00    	jne    55a8 <ct_decode+0x1148>
    549b:	c5 f8 77             	vzeroupper 
    549e:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    54a2:	5b                   	pop    %rbx
    54a3:	41 5c                	pop    %r12
    54a5:	41 5d                	pop    %r13
    54a7:	41 5e                	pop    %r14
    54a9:	41 5f                	pop    %r15
    54ab:	5d                   	pop    %rbp
    54ac:	c3                   	ret    
    54ad:	0f 1f 00             	nopl   (%rax)
    54b0:	c5 fc 29 00          	vmovaps %ymm0,(%rax)
    54b4:	c5 fc 29 48 20       	vmovaps %ymm1,0x20(%rax)
    54b9:	c5 fc 29 50 40       	vmovaps %ymm2,0x40(%rax)
    54be:	c5 fc 29 58 60       	vmovaps %ymm3,0x60(%rax)
    54c3:	c5 fc 29 a0 80 00 00 	vmovaps %ymm4,0x80(%rax)
    54ca:	00 
    54cb:	c5 fc 29 a8 a0 00 00 	vmovaps %ymm5,0xa0(%rax)
    54d2:	00 
    54d3:	c5 fc 29 b0 c0 00 00 	vmovaps %ymm6,0xc0(%rax)
    54da:	00 
    54db:	c5 fc 29 b8 e0 00 00 	vmovaps %ymm7,0xe0(%rax)
    54e2:	00 
    54e3:	c5 7c 29 80 00 01 00 	vmovaps %ymm8,0x100(%rax)
    54ea:	00 
    54eb:	c5 7c 29 88 20 01 00 	vmovaps %ymm9,0x120(%rax)
    54f2:	00 
    54f3:	c5 7c 29 90 40 01 00 	vmovaps %ymm10,0x140(%rax)
    54fa:	00 
    54fb:	c5 7c 29 98 60 01 00 	vmovaps %ymm11,0x160(%rax)
    5502:	00 
    5503:	c5 7c 29 a0 80 01 00 	vmovaps %ymm12,0x180(%rax)
    550a:	00 
    550b:	c5 7c 29 a8 a0 01 00 	vmovaps %ymm13,0x1a0(%rax)
    5512:	00 
    5513:	c5 7c 29 b0 c0 01 00 	vmovaps %ymm14,0x1c0(%rax)
    551a:	00 
    551b:	c5 7c 29 b8 e0 01 00 	vmovaps %ymm15,0x1e0(%rax)
    5522:	00 
    5523:	e9 fa ef ff ff       	jmp    4522 <ct_decode+0xc2>
    5528:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    552f:	00 
    5530:	c5 fc 28 03          	vmovaps (%rbx),%ymm0
    5534:	c5 fc 28 4b 20       	vmovaps 0x20(%rbx),%ymm1
    5539:	c5 fc 28 53 40       	vmovaps 0x40(%rbx),%ymm2
    553e:	c5 fc 28 5b 60       	vmovaps 0x60(%rbx),%ymm3
    5543:	c5 fc 28 a3 80 00 00 	vmovaps 0x80(%rbx),%ymm4
    554a:	00 
    554b:	c5 fc 28 ab a0 00 00 	vmovaps 0xa0(%rbx),%ymm5
    5552:	00 
    5553:	c5 fc 28 b3 c0 00 00 	vmovaps 0xc0(%rbx),%ymm6
    555a:	00 
    555b:	c5 fc 28 bb e0 00 00 	vmovaps 0xe0(%rbx),%ymm7
    5562:	00 
    5563:	c5 7c 28 83 00 01 00 	vmovaps 0x100(%rbx),%ymm8
    556a:	00 
    556b:	c5 7c 28 8b 20 01 00 	vmovaps 0x120(%rbx),%ymm9
    5572:	00 
    5573:	c5 7c 28 93 40 01 00 	vmovaps 0x140(%rbx),%ymm10
    557a:	00 
    557b:	c5 7c 28 9b 60 01 00 	vmovaps 0x160(%rbx),%ymm11
    5582:	00 
    5583:	c5 7c 28 a3 80 01 00 	vmovaps 0x180(%rbx),%ymm12
    558a:	00 
    558b:	c5 7c 28 ab a0 01 00 	vmovaps 0x1a0(%rbx),%ymm13
    5592:	00 
    5593:	c5 7c 28 b3 c0 01 00 	vmovaps 0x1c0(%rbx),%ymm14
    559a:	00 
    559b:	c5 7c 28 bb e0 01 00 	vmovaps 0x1e0(%rbx),%ymm15
    55a2:	00 
    55a3:	e9 dc fe ff ff       	jmp    5484 <ct_decode+0x1024>
    55a8:	c5 f8 77             	vzeroupper 
    55ab:	e8 40 b4 00 00       	call   109f0 <__stack_chk_fail>

00000000000055b0 <_ZL22init_rts_contexts_emasP9_layout_tS0_m>:
    55b0:	48 39 f7             	cmp    %rsi,%rdi
    55b3:	0f 83 f7 01 00 00    	jae    57b0 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x200>
    55b9:	41 57                	push   %r15
    55bb:	41 56                	push   %r14
    55bd:	49 89 d6             	mov    %rdx,%r14
    55c0:	41 55                	push   %r13
    55c2:	49 89 f5             	mov    %rsi,%r13
    55c5:	41 54                	push   %r12
    55c7:	55                   	push   %rbp
    55c8:	53                   	push   %rbx
    55c9:	48 89 fb             	mov    %rdi,%rbx
    55cc:	48 83 ec 08          	sub    $0x8,%rsp
    55d0:	66 f7 03 00 10       	testw  $0x1000,(%rbx)
    55d5:	0f 85 d5 00 00 00    	jne    56b0 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x100>
    55db:	48 8b 6b 08          	mov    0x8(%rbx),%rbp
    55df:	e8 14 cb 00 00       	call   120f8 <get_enclave_base>
    55e4:	44 8b 63 04          	mov    0x4(%rbx),%r12d
    55e8:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
    55ec:	4c 01 f5             	add    %r14,%rbp
    55ef:	48 01 c5             	add    %rax,%rbp
    55f2:	49 c1 e4 0c          	shl    $0xc,%r12
    55f6:	48 85 c9             	test   %rcx,%rcx
    55f9:	0f 84 81 00 00 00    	je     5680 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xd0>
    55ff:	0f b7 43 02          	movzwl 0x2(%rbx),%eax
    5603:	a8 04                	test   $0x4,%al
    5605:	75 79                	jne    5680 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xd0>
    5607:	89 c2                	mov    %eax,%edx
    5609:	41 89 c7             	mov    %eax,%r15d
    560c:	83 e2 10             	and    $0x10,%edx
    560f:	41 83 e7 08          	and    $0x8,%r15d
    5613:	a8 01                	test   $0x1,%al
    5615:	0f 84 e5 00 00 00    	je     5700 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x150>
    561b:	66 85 d2             	test   %dx,%dx
    561e:	0f 85 3c 01 00 00    	jne    5760 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x1b0>
    5624:	0f b7 03             	movzwl (%rbx),%eax
    5627:	66 45 85 ff          	test   %r15w,%r15w
    562b:	0f 85 e1 00 00 00    	jne    5712 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x162>
    5631:	66 83 f8 04          	cmp    $0x4,%ax
    5635:	0f 84 65 01 00 00    	je     57a0 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x1f0>
    563b:	83 e1 07             	and    $0x7,%ecx
    563e:	ba 80 02 00 00       	mov    $0x280,%edx
    5643:	45 31 c9             	xor    %r9d,%r9d
    5646:	45 31 c0             	xor    %r8d,%r8d
    5649:	4c 89 e6             	mov    %r12,%rsi
    564c:	48 89 ef             	mov    %rbp,%rdi
    564f:	e8 4c 62 00 00       	call   b8a0 <mm_init_ema>
    5654:	85 c0                	test   %eax,%eax
    5656:	75 44                	jne    569c <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xec>
    5658:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    565f:	00 
    5660:	48 83 c3 20          	add    $0x20,%rbx
    5664:	4c 39 eb             	cmp    %r13,%rbx
    5667:	0f 82 63 ff ff ff    	jb     55d0 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x20>
    566d:	48 83 c4 08          	add    $0x8,%rsp
    5671:	31 c0                	xor    %eax,%eax
    5673:	5b                   	pop    %rbx
    5674:	5d                   	pop    %rbp
    5675:	41 5c                	pop    %r12
    5677:	41 5d                	pop    %r13
    5679:	41 5e                	pop    %r14
    567b:	41 5f                	pop    %r15
    567d:	c3                   	ret    
    567e:	66 90                	xchg   %ax,%ax
    5680:	45 31 c9             	xor    %r9d,%r9d
    5683:	45 31 c0             	xor    %r8d,%r8d
    5686:	31 c9                	xor    %ecx,%ecx
    5688:	ba 81 00 00 00       	mov    $0x81,%edx
    568d:	4c 89 e6             	mov    %r12,%rsi
    5690:	48 89 ef             	mov    %rbp,%rdi
    5693:	e8 08 62 00 00       	call   b8a0 <mm_init_ema>
    5698:	85 c0                	test   %eax,%eax
    569a:	74 c4                	je     5660 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xb0>
    569c:	b8 01 00 00 00       	mov    $0x1,%eax
    56a1:	48 83 c4 08          	add    $0x8,%rsp
    56a5:	5b                   	pop    %rbx
    56a6:	5d                   	pop    %rbp
    56a7:	41 5c                	pop    %r12
    56a9:	41 5d                	pop    %r13
    56ab:	41 5e                	pop    %r14
    56ad:	41 5f                	pop    %r15
    56af:	c3                   	ret    
    56b0:	8b 43 04             	mov    0x4(%rbx),%eax
    56b3:	31 ed                	xor    %ebp,%ebp
    56b5:	45 31 e4             	xor    %r12d,%r12d
    56b8:	85 c0                	test   %eax,%eax
    56ba:	74 a4                	je     5660 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xb0>
    56bc:	0f b7 7b 02          	movzwl 0x2(%rbx),%edi
    56c0:	4c 03 63 08          	add    0x8(%rbx),%r12
    56c4:	48 89 de             	mov    %rbx,%rsi
    56c7:	4c 89 e2             	mov    %r12,%rdx
    56ca:	f7 df                	neg    %edi
    56cc:	48 63 ff             	movslq %edi,%rdi
    56cf:	48 c1 e7 05          	shl    $0x5,%rdi
    56d3:	48 01 df             	add    %rbx,%rdi
    56d6:	e8 d5 fe ff ff       	call   55b0 <_ZL22init_rts_contexts_emasP9_layout_tS0_m>
    56db:	85 c0                	test   %eax,%eax
    56dd:	75 c2                	jne    56a1 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xf1>
    56df:	83 c5 01             	add    $0x1,%ebp
    56e2:	3b 6b 04             	cmp    0x4(%rbx),%ebp
    56e5:	72 d5                	jb     56bc <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x10c>
    56e7:	48 83 c3 20          	add    $0x20,%rbx
    56eb:	4c 39 eb             	cmp    %r13,%rbx
    56ee:	0f 82 dc fe ff ff    	jb     55d0 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x20>
    56f4:	e9 74 ff ff ff       	jmp    566d <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xbd>
    56f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5700:	66 85 d2             	test   %dx,%dx
    5703:	75 5b                	jne    5760 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x1b0>
    5705:	66 45 85 ff          	test   %r15w,%r15w
    5709:	0f 84 51 ff ff ff    	je     5660 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xb0>
    570f:	0f b7 03             	movzwl (%rbx),%eax
    5712:	8d 50 ef             	lea    -0x11(%rax),%edx
    5715:	66 83 fa 01          	cmp    $0x1,%dx
    5719:	76 0b                	jbe    5726 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x176>
    571b:	ba e4 02 00 00       	mov    $0x2e4,%edx
    5720:	66 83 f8 07          	cmp    $0x7,%ax
    5724:	75 05                	jne    572b <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x17b>
    5726:	ba d4 02 00 00       	mov    $0x2d4,%edx
    572b:	45 31 c9             	xor    %r9d,%r9d
    572e:	45 31 c0             	xor    %r8d,%r8d
    5731:	31 c9                	xor    %ecx,%ecx
    5733:	4c 89 e6             	mov    %r12,%rsi
    5736:	48 89 ef             	mov    %rbp,%rdi
    5739:	e8 62 62 00 00       	call   b9a0 <mm_alloc>
    573e:	85 c0                	test   %eax,%eax
    5740:	0f 85 56 ff ff ff    	jne    569c <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xec>
    5746:	48 83 c3 20          	add    $0x20,%rbx
    574a:	4c 39 eb             	cmp    %r13,%rbx
    574d:	0f 82 7d fe ff ff    	jb     55d0 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x20>
    5753:	e9 15 ff ff ff       	jmp    566d <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xbd>
    5758:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    575f:	00 
    5760:	45 31 c9             	xor    %r9d,%r9d
    5763:	45 31 c0             	xor    %r8d,%r8d
    5766:	b9 03 00 00 00       	mov    $0x3,%ecx
    576b:	ba 80 00 00 00       	mov    $0x80,%edx
    5770:	4c 89 e6             	mov    %r12,%rsi
    5773:	48 89 ef             	mov    %rbp,%rdi
    5776:	e8 25 61 00 00       	call   b8a0 <mm_init_ema>
    577b:	85 c0                	test   %eax,%eax
    577d:	0f 85 19 ff ff ff    	jne    569c <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xec>
    5783:	4c 89 e6             	mov    %r12,%rsi
    5786:	48 89 ef             	mov    %rbp,%rdi
    5789:	e8 52 62 00 00       	call   b9e0 <mm_dealloc>
    578e:	85 c0                	test   %eax,%eax
    5790:	0f 84 6f ff ff ff    	je     5705 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x155>
    5796:	e9 01 ff ff ff       	jmp    569c <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xec>
    579b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    57a0:	ba 80 01 00 00       	mov    $0x180,%edx
    57a5:	31 c9                	xor    %ecx,%ecx
    57a7:	e9 97 fe ff ff       	jmp    5643 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x93>
    57ac:	0f 1f 40 00          	nopl   0x0(%rax)
    57b0:	31 c0                	xor    %eax,%eax
    57b2:	c3                   	ret    
    57b3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    57ba:	00 00 00 
    57bd:	0f 1f 00             	nopl   (%rax)

00000000000057c0 <init_rts_emas>:
    57c0:	f3 0f 1e fa          	endbr64 
    57c4:	55                   	push   %rbp
    57c5:	48 89 d5             	mov    %rdx,%rbp
    57c8:	53                   	push   %rbx
    57c9:	48 89 f3             	mov    %rsi,%rbx
    57cc:	48 83 ec 08          	sub    $0x8,%rsp
    57d0:	e8 8b 32 00 00       	call   8a60 <init_segment_emas>
    57d5:	85 c0                	test   %eax,%eax
    57d7:	74 07                	je     57e0 <init_rts_emas+0x20>
    57d9:	48 83 c4 08          	add    $0x8,%rsp
    57dd:	5b                   	pop    %rbx
    57de:	5d                   	pop    %rbp
    57df:	c3                   	ret    
    57e0:	48 83 c4 08          	add    $0x8,%rsp
    57e4:	48 89 ee             	mov    %rbp,%rsi
    57e7:	48 89 df             	mov    %rbx,%rdi
    57ea:	31 d2                	xor    %edx,%edx
    57ec:	5b                   	pop    %rbx
    57ed:	5d                   	pop    %rbp
    57ee:	e9 bd fd ff ff       	jmp    55b0 <_ZL22init_rts_contexts_emasP9_layout_tS0_m>
    57f3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    57fa:	00 00 00 
    57fd:	0f 1f 00             	nopl   (%rax)

0000000000005800 <sgx_mm_alloc_ocall>:
    5800:	f3 0f 1e fa          	endbr64 
    5804:	41 56                	push   %r14
    5806:	41 89 ce             	mov    %ecx,%r14d
    5809:	41 55                	push   %r13
    580b:	49 89 fd             	mov    %rdi,%r13
    580e:	bf 20 00 00 00       	mov    $0x20,%edi
    5813:	41 54                	push   %r12
    5815:	49 89 f4             	mov    %rsi,%r12
    5818:	55                   	push   %rbp
    5819:	89 d5                	mov    %edx,%ebp
    581b:	53                   	push   %rbx
    581c:	e8 ff 03 00 00       	call   5c20 <sgx_ocalloc>
    5821:	48 85 c0             	test   %rax,%rax
    5824:	74 4a                	je     5870 <sgx_mm_alloc_ocall+0x70>
    5826:	89 68 18             	mov    %ebp,0x18(%rax)
    5829:	48 89 c6             	mov    %rax,%rsi
    582c:	bf fa ff ff ff       	mov    $0xfffffffa,%edi
    5831:	48 89 c3             	mov    %rax,%rbx
    5834:	4c 89 68 08          	mov    %r13,0x8(%rax)
    5838:	bd 0e 00 00 00       	mov    $0xe,%ebp
    583d:	4c 89 60 10          	mov    %r12,0x10(%rax)
    5841:	44 89 70 1c          	mov    %r14d,0x1c(%rax)
    5845:	e8 c6 19 00 00       	call   7210 <sgx_ocall>
    584a:	85 c0                	test   %eax,%eax
    584c:	74 12                	je     5860 <sgx_mm_alloc_ocall+0x60>
    584e:	e8 ad 04 00 00       	call   5d00 <sgx_ocfree>
    5853:	5b                   	pop    %rbx
    5854:	89 e8                	mov    %ebp,%eax
    5856:	5d                   	pop    %rbp
    5857:	41 5c                	pop    %r12
    5859:	41 5d                	pop    %r13
    585b:	41 5e                	pop    %r14
    585d:	c3                   	ret    
    585e:	66 90                	xchg   %ax,%ax
    5860:	8b 03                	mov    (%rbx),%eax
    5862:	f7 d8                	neg    %eax
    5864:	19 ed                	sbb    %ebp,%ebp
    5866:	83 e5 0e             	and    $0xe,%ebp
    5869:	eb e3                	jmp    584e <sgx_mm_alloc_ocall+0x4e>
    586b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5870:	e8 8b 04 00 00       	call   5d00 <sgx_ocfree>
    5875:	bd 01 00 00 00       	mov    $0x1,%ebp
    587a:	5b                   	pop    %rbx
    587b:	89 e8                	mov    %ebp,%eax
    587d:	5d                   	pop    %rbp
    587e:	41 5c                	pop    %r12
    5880:	41 5d                	pop    %r13
    5882:	41 5e                	pop    %r14
    5884:	c3                   	ret    
    5885:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    588c:	00 00 00 
    588f:	90                   	nop

0000000000005890 <sgx_mm_modify_ocall>:
    5890:	f3 0f 1e fa          	endbr64 
    5894:	41 56                	push   %r14
    5896:	41 89 ce             	mov    %ecx,%r14d
    5899:	41 55                	push   %r13
    589b:	49 89 fd             	mov    %rdi,%r13
    589e:	bf 20 00 00 00       	mov    $0x20,%edi
    58a3:	41 54                	push   %r12
    58a5:	49 89 f4             	mov    %rsi,%r12
    58a8:	55                   	push   %rbp
    58a9:	89 d5                	mov    %edx,%ebp
    58ab:	53                   	push   %rbx
    58ac:	e8 6f 03 00 00       	call   5c20 <sgx_ocalloc>
    58b1:	48 85 c0             	test   %rax,%rax
    58b4:	74 4a                	je     5900 <sgx_mm_modify_ocall+0x70>
    58b6:	89 68 18             	mov    %ebp,0x18(%rax)
    58b9:	48 89 c6             	mov    %rax,%rsi
    58bc:	bf f9 ff ff ff       	mov    $0xfffffff9,%edi
    58c1:	48 89 c3             	mov    %rax,%rbx
    58c4:	4c 89 68 08          	mov    %r13,0x8(%rax)
    58c8:	bd 0e 00 00 00       	mov    $0xe,%ebp
    58cd:	4c 89 60 10          	mov    %r12,0x10(%rax)
    58d1:	44 89 70 1c          	mov    %r14d,0x1c(%rax)
    58d5:	e8 36 19 00 00       	call   7210 <sgx_ocall>
    58da:	85 c0                	test   %eax,%eax
    58dc:	74 12                	je     58f0 <sgx_mm_modify_ocall+0x60>
    58de:	e8 1d 04 00 00       	call   5d00 <sgx_ocfree>
    58e3:	5b                   	pop    %rbx
    58e4:	89 e8                	mov    %ebp,%eax
    58e6:	5d                   	pop    %rbp
    58e7:	41 5c                	pop    %r12
    58e9:	41 5d                	pop    %r13
    58eb:	41 5e                	pop    %r14
    58ed:	c3                   	ret    
    58ee:	66 90                	xchg   %ax,%ax
    58f0:	8b 03                	mov    (%rbx),%eax
    58f2:	f7 d8                	neg    %eax
    58f4:	19 ed                	sbb    %ebp,%ebp
    58f6:	83 e5 0e             	and    $0xe,%ebp
    58f9:	eb e3                	jmp    58de <sgx_mm_modify_ocall+0x4e>
    58fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5900:	e8 fb 03 00 00       	call   5d00 <sgx_ocfree>
    5905:	bd 01 00 00 00       	mov    $0x1,%ebp
    590a:	5b                   	pop    %rbx
    590b:	89 e8                	mov    %ebp,%eax
    590d:	5d                   	pop    %rbp
    590e:	41 5c                	pop    %r12
    5910:	41 5d                	pop    %r13
    5912:	41 5e                	pop    %r14
    5914:	c3                   	ret    
    5915:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    591c:	00 00 00 
    591f:	90                   	nop

0000000000005920 <sgx_mm_register_pfhandler>:
    5920:	f3 0f 1e fa          	endbr64 
    5924:	31 c0                	xor    %eax,%eax
    5926:	48 83 3d 52 48 01 00 	cmpq   $0x0,0x14852(%rip)        # 1a180 <g_mm_pfhandler>
    592d:	00 
    592e:	74 08                	je     5938 <sgx_mm_register_pfhandler+0x18>
    5930:	c3                   	ret    
    5931:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5938:	48 89 3d 41 48 01 00 	mov    %rdi,0x14841(%rip)        # 1a180 <g_mm_pfhandler>
    593f:	b8 01 00 00 00       	mov    $0x1,%eax
    5944:	c3                   	ret    
    5945:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    594c:	00 00 00 
    594f:	90                   	nop

0000000000005950 <sgx_mm_unregister_pfhandler>:
    5950:	f3 0f 1e fa          	endbr64 
    5954:	31 c0                	xor    %eax,%eax
    5956:	48 39 3d 23 48 01 00 	cmp    %rdi,0x14823(%rip)        # 1a180 <g_mm_pfhandler>
    595d:	74 01                	je     5960 <sgx_mm_unregister_pfhandler+0x10>
    595f:	c3                   	ret    
    5960:	48 c7 05 15 48 01 00 	movq   $0x0,0x14815(%rip)        # 1a180 <g_mm_pfhandler>
    5967:	00 00 00 00 
    596b:	b8 01 00 00 00       	mov    $0x1,%eax
    5970:	c3                   	ret    
    5971:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5978:	00 00 00 
    597b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000005980 <sgx_mm_mutex_create>:
    5980:	f3 0f 1e fa          	endbr64 
    5984:	48 83 ec 08          	sub    $0x8,%rsp
    5988:	bf 18 00 00 00       	mov    $0x18,%edi
    598d:	e8 9e 77 00 00       	call   d130 <dlmalloc>
    5992:	48 85 c0             	test   %rax,%rax
    5995:	74 16                	je     59ad <sgx_mm_mutex_create+0x2d>
    5997:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    599e:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
    59a5:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    59ac:	00 
    59ad:	48 83 c4 08          	add    $0x8,%rsp
    59b1:	c3                   	ret    
    59b2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    59b9:	00 00 00 
    59bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000059c0 <sgx_mm_mutex_lock>:
    59c0:	f3 0f 1e fa          	endbr64 
    59c4:	53                   	push   %rbx
    59c5:	48 89 fb             	mov    %rdi,%rbx
    59c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    59cf:	00 
    59d0:	48 89 df             	mov    %rbx,%rdi
    59d3:	e8 28 b1 00 00       	call   10b00 <sgx_thread_spin_trylock>
    59d8:	85 c0                	test   %eax,%eax
    59da:	75 f4                	jne    59d0 <sgx_mm_mutex_lock+0x10>
    59dc:	5b                   	pop    %rbx
    59dd:	c3                   	ret    
    59de:	66 90                	xchg   %ax,%ax

00000000000059e0 <sgx_mm_mutex_unlock>:
    59e0:	f3 0f 1e fa          	endbr64 
    59e4:	e9 a7 b1 00 00       	jmp    10b90 <sgx_thread_spin_unlock>
    59e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000059f0 <sgx_mm_mutex_destroy>:
    59f0:	f3 0f 1e fa          	endbr64 
    59f4:	55                   	push   %rbp
    59f5:	53                   	push   %rbx
    59f6:	48 89 fb             	mov    %rdi,%rbx
    59f9:	48 83 ec 08          	sub    $0x8,%rsp
    59fd:	e8 7e b0 00 00       	call   10a80 <sgx_thread_spin_destroy>
    5a02:	48 89 df             	mov    %rbx,%rdi
    5a05:	89 c5                	mov    %eax,%ebp
    5a07:	e8 14 95 00 00       	call   ef20 <dlfree>
    5a0c:	48 83 c4 08          	add    $0x8,%rsp
    5a10:	89 e8                	mov    %ebp,%eax
    5a12:	5b                   	pop    %rbx
    5a13:	5d                   	pop    %rbp
    5a14:	c3                   	ret    
    5a15:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5a1c:	00 00 00 
    5a1f:	90                   	nop

0000000000005a20 <sgx_mm_is_within_enclave>:
    5a20:	f3 0f 1e fa          	endbr64 
    5a24:	48 83 ec 08          	sub    $0x8,%rsp
    5a28:	e8 33 01 00 00       	call   5b60 <sgx_is_within_enclave>
    5a2d:	85 c0                	test   %eax,%eax
    5a2f:	0f 95 c0             	setne  %al
    5a32:	48 83 c4 08          	add    $0x8,%rsp
    5a36:	c3                   	ret    
    5a37:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    5a3e:	00 00 

0000000000005a40 <init_optimized_libs>:
    5a40:	f3 0f 1e fa          	endbr64 
    5a44:	41 54                	push   %r12
    5a46:	49 89 d4             	mov    %rdx,%r12
    5a49:	55                   	push   %rbp
    5a4a:	48 89 f5             	mov    %rsi,%rbp
    5a4d:	53                   	push   %rbx
    5a4e:	48 89 fb             	mov    %rdi,%rbx
    5a51:	e8 ae c6 00 00       	call   12104 <get_enclave_state>
    5a56:	83 f8 01             	cmp    $0x1,%eax
    5a59:	0f 85 d6 00 00 00    	jne    5b35 <init_optimized_libs+0xf5>
    5a5f:	48 b8 ff ff ff ff ff 	movabs $0xffffffffffffff,%rax
    5a66:	ff ff 00 
    5a69:	48 89 da             	mov    %rbx,%rdx
    5a6c:	48 21 c2             	and    %rax,%rdx
    5a6f:	48 39 d8             	cmp    %rbx,%rax
    5a72:	48 0f 42 da          	cmovb  %rdx,%rbx
    5a76:	48 81 fb ff 01 00 00 	cmp    $0x1ff,%rbx
    5a7d:	0f 86 b2 00 00 00    	jbe    5b35 <init_optimized_libs+0xf5>
    5a83:	f6 c3 20             	test   $0x20,%bl
    5a86:	74 0e                	je     5a96 <init_optimized_libs+0x56>
    5a88:	48 89 d8             	mov    %rbx,%rax
    5a8b:	48 f7 d0             	not    %rax
    5a8e:	a8 1f                	test   $0x1f,%al
    5a90:	0f 85 9f 00 00 00    	jne    5b35 <init_optimized_libs+0xf5>
    5a96:	f6 c3 40             	test   $0x40,%bl
    5a99:	74 0e                	je     5aa9 <init_optimized_libs+0x69>
    5a9b:	48 89 d8             	mov    %rbx,%rax
    5a9e:	48 f7 d0             	not    %rax
    5aa1:	a8 3f                	test   $0x3f,%al
    5aa3:	0f 85 8c 00 00 00    	jne    5b35 <init_optimized_libs+0xf5>
    5aa9:	f6 c3 80             	test   $0x80,%bl
    5aac:	74 0a                	je     5ab8 <init_optimized_libs+0x78>
    5aae:	48 89 d8             	mov    %rbx,%rax
    5ab1:	48 f7 d0             	not    %rax
    5ab4:	a8 7f                	test   $0x7f,%al
    5ab6:	75 7d                	jne    5b35 <init_optimized_libs+0xf5>
    5ab8:	f6 c7 01             	test   $0x1,%bh
    5abb:	74 0b                	je     5ac8 <init_optimized_libs+0x88>
    5abd:	0f b6 c3             	movzbl %bl,%eax
    5ac0:	48 3d ff 00 00 00    	cmp    $0xff,%rax
    5ac6:	75 6d                	jne    5b35 <init_optimized_libs+0xf5>
    5ac8:	f6 c7 02             	test   $0x2,%bh
    5acb:	74 0d                	je     5ada <init_optimized_libs+0x9a>
    5acd:	48 89 d8             	mov    %rbx,%rax
    5ad0:	48 f7 d0             	not    %rax
    5ad3:	a9 ff 01 00 00       	test   $0x1ff,%eax
    5ad8:	75 5b                	jne    5b35 <init_optimized_libs+0xf5>
    5ada:	f6 c7 04             	test   $0x4,%bh
    5add:	75 49                	jne    5b28 <init_optimized_libs+0xe8>
    5adf:	4c 89 e0             	mov    %r12,%rax
    5ae2:	48 f7 d0             	not    %rax
    5ae5:	a8 06                	test   $0x6,%al
    5ae7:	74 57                	je     5b40 <init_optimized_libs+0x100>
    5ae9:	48 b8 ff 7f 12 86 08 	movabs $0xfffe200886127fff,%rax
    5af0:	20 fe ff 
    5af3:	48 21 c3             	and    %rax,%rbx
    5af6:	4c 8d 25 23 23 01 00 	lea    0x12323(%rip),%r12        # 17e20 <g_cpu_feature_indicator>
    5afd:	48 89 df             	mov    %rbx,%rdi
    5b00:	49 89 1c 24          	mov    %rbx,(%r12)
    5b04:	e8 b7 ae 00 00       	call   109c0 <sgx_init_string_lib>
    5b09:	85 c0                	test   %eax,%eax
    5b0b:	75 28                	jne    5b35 <init_optimized_libs+0xf5>
    5b0d:	49 8b 3c 24          	mov    (%r12),%rdi
    5b11:	48 89 ee             	mov    %rbp,%rsi
    5b14:	e8 47 b5 00 00       	call   11060 <sgx_init_crypto_lib>
    5b19:	5b                   	pop    %rbx
    5b1a:	5d                   	pop    %rbp
    5b1b:	f7 d8                	neg    %eax
    5b1d:	41 5c                	pop    %r12
    5b1f:	19 c0                	sbb    %eax,%eax
    5b21:	c3                   	ret    
    5b22:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5b28:	48 89 d8             	mov    %rbx,%rax
    5b2b:	48 f7 d0             	not    %rax
    5b2e:	a9 ff 03 00 00       	test   $0x3ff,%eax
    5b33:	74 aa                	je     5adf <init_optimized_libs+0x9f>
    5b35:	5b                   	pop    %rbx
    5b36:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    5b3b:	5d                   	pop    %rbp
    5b3c:	41 5c                	pop    %r12
    5b3e:	c3                   	ret    
    5b3f:	90                   	nop
    5b40:	4c 89 e0             	mov    %r12,%rax
    5b43:	48 f7 d0             	not    %rax
    5b46:	a8 e0                	test   $0xe0,%al
    5b48:	74 ac                	je     5af6 <init_optimized_libs+0xb6>
    5b4a:	48 b8 ff ff ff b6 18 	movabs $0xfffee018b6ffffff,%rax
    5b51:	e0 fe ff 
    5b54:	48 21 c3             	and    %rax,%rbx
    5b57:	eb 9d                	jmp    5af6 <init_optimized_libs+0xb6>
    5b59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000005b60 <sgx_is_within_enclave>:
    5b60:	f3 0f 1e fa          	endbr64 
    5b64:	48 8d 05 a5 22 01 00 	lea    0x122a5(%rip),%rax        # 17e10 <g_enclave_base>
    5b6b:	48 8b 10             	mov    (%rax),%rdx
    5b6e:	48 8d 05 93 22 01 00 	lea    0x12293(%rip),%rax        # 17e08 <g_enclave_size>
    5b75:	48 8b 08             	mov    (%rax),%rcx
    5b78:	48 01 d1             	add    %rdx,%rcx
    5b7b:	48 89 c8             	mov    %rcx,%rax
    5b7e:	48 83 e8 01          	sub    $0x1,%rax
    5b82:	48 85 f6             	test   %rsi,%rsi
    5b85:	74 21                	je     5ba8 <sgx_is_within_enclave+0x48>
    5b87:	48 83 ee 01          	sub    $0x1,%rsi
    5b8b:	48 01 fe             	add    %rdi,%rsi
    5b8e:	0f 93 c1             	setae  %cl
    5b91:	48 39 d7             	cmp    %rdx,%rdi
    5b94:	0f 93 c2             	setae  %dl
    5b97:	21 ca                	and    %ecx,%edx
    5b99:	48 39 f0             	cmp    %rsi,%rax
    5b9c:	0f 93 c0             	setae  %al
    5b9f:	0f b6 c0             	movzbl %al,%eax
    5ba2:	21 d0                	and    %edx,%eax
    5ba4:	c3                   	ret    
    5ba5:	0f 1f 00             	nopl   (%rax)
    5ba8:	48 89 fe             	mov    %rdi,%rsi
    5bab:	b9 01 00 00 00       	mov    $0x1,%ecx
    5bb0:	eb df                	jmp    5b91 <sgx_is_within_enclave+0x31>
    5bb2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5bb9:	00 00 00 
    5bbc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005bc0 <sgx_is_outside_enclave>:
    5bc0:	f3 0f 1e fa          	endbr64 
    5bc4:	48 85 f6             	test   %rsi,%rsi
    5bc7:	74 17                	je     5be0 <sgx_is_outside_enclave+0x20>
    5bc9:	48 83 ee 01          	sub    $0x1,%rsi
    5bcd:	b8 00 00 00 00       	mov    $0x0,%eax
    5bd2:	48 01 fe             	add    %rdi,%rsi
    5bd5:	73 0c                	jae    5be3 <sgx_is_outside_enclave+0x23>
    5bd7:	c3                   	ret    
    5bd8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    5bdf:	00 
    5be0:	48 89 fe             	mov    %rdi,%rsi
    5be3:	48 8d 05 26 22 01 00 	lea    0x12226(%rip),%rax        # 17e10 <g_enclave_base>
    5bea:	48 8b 10             	mov    (%rax),%rdx
    5bed:	48 8d 05 14 22 01 00 	lea    0x12214(%rip),%rax        # 17e08 <g_enclave_size>
    5bf4:	48 8b 08             	mov    (%rax),%rcx
    5bf7:	48 01 d1             	add    %rdx,%rcx
    5bfa:	48 89 c8             	mov    %rcx,%rax
    5bfd:	48 83 e8 01          	sub    $0x1,%rax
    5c01:	48 39 f8             	cmp    %rdi,%rax
    5c04:	0f 92 c0             	setb   %al
    5c07:	48 39 d6             	cmp    %rdx,%rsi
    5c0a:	0f 92 c2             	setb   %dl
    5c0d:	09 d0                	or     %edx,%eax
    5c0f:	0f b6 c0             	movzbl %al,%eax
    5c12:	c3                   	ret    
    5c13:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5c1a:	00 00 00 
    5c1d:	0f 1f 00             	nopl   (%rax)

0000000000005c20 <sgx_ocalloc>:
    5c20:	f3 0f 1e fa          	endbr64 
    5c24:	53                   	push   %rbx
    5c25:	48 89 fb             	mov    %rdi,%rbx
    5c28:	48 83 ec 10          	sub    $0x10,%rsp
    5c2c:	e8 12 c5 00 00       	call   12143 <get_thread_data>
    5c31:	48 8d 15 d8 21 01 00 	lea    0x121d8(%rip),%rdx        # 17e10 <g_enclave_base>
    5c38:	48 8b 70 20          	mov    0x20(%rax),%rsi
    5c3c:	48 8b 3a             	mov    (%rdx),%rdi
    5c3f:	48 8d 15 c2 21 01 00 	lea    0x121c2(%rip),%rdx        # 17e08 <g_enclave_size>
    5c46:	48 8b 86 90 00 00 00 	mov    0x90(%rsi),%rax
    5c4d:	48 8b 0a             	mov    (%rdx),%rcx
    5c50:	48 89 c2             	mov    %rax,%rdx
    5c53:	48 83 c2 07          	add    $0x7,%rdx
    5c57:	72 33                	jb     5c8c <sgx_ocalloc+0x6c>
    5c59:	4c 8d 44 0f ff       	lea    -0x1(%rdi,%rcx,1),%r8
    5c5e:	48 39 fa             	cmp    %rdi,%rdx
    5c61:	72 05                	jb     5c68 <sgx_ocalloc+0x48>
    5c63:	49 39 c0             	cmp    %rax,%r8
    5c66:	73 24                	jae    5c8c <sgx_ocalloc+0x6c>
    5c68:	48 39 d8             	cmp    %rbx,%rax
    5c6b:	72 1f                	jb     5c8c <sgx_ocalloc+0x6c>
    5c6d:	48 89 c2             	mov    %rax,%rdx
    5c70:	48 29 da             	sub    %rbx,%rdx
    5c73:	48 89 d1             	mov    %rdx,%rcx
    5c76:	48 83 e1 f0          	and    $0xfffffffffffffff0,%rcx
    5c7a:	48 85 db             	test   %rbx,%rbx
    5c7d:	75 19                	jne    5c98 <sgx_ocalloc+0x78>
    5c7f:	48 89 cb             	mov    %rcx,%rbx
    5c82:	48 39 fb             	cmp    %rdi,%rbx
    5c85:	72 21                	jb     5ca8 <sgx_ocalloc+0x88>
    5c87:	49 39 c8             	cmp    %rcx,%r8
    5c8a:	72 1c                	jb     5ca8 <sgx_ocalloc+0x88>
    5c8c:	e8 a6 c8 00 00       	call   12537 <abort>
    5c91:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5c98:	48 83 eb 01          	sub    $0x1,%rbx
    5c9c:	48 01 cb             	add    %rcx,%rbx
    5c9f:	72 eb                	jb     5c8c <sgx_ocalloc+0x6c>
    5ca1:	eb df                	jmp    5c82 <sgx_ocalloc+0x62>
    5ca3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5ca8:	48 83 e8 01          	sub    $0x1,%rax
    5cac:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    5cb2:	48 81 e2 00 f0 ff ff 	and    $0xfffffffffffff000,%rdx
    5cb9:	75 1d                	jne    5cd8 <sgx_ocalloc+0xb8>
    5cbb:	eb cf                	jmp    5c8c <sgx_ocalloc+0x6c>
    5cbd:	0f 1f 00             	nopl   (%rax)
    5cc0:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    5cc5:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    5cca:	c6 00 00             	movb   $0x0,(%rax)
    5ccd:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    5cd2:	48 2d 00 10 00 00    	sub    $0x1000,%rax
    5cd8:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    5cdd:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    5ce2:	48 39 d0             	cmp    %rdx,%rax
    5ce5:	73 d9                	jae    5cc0 <sgx_ocalloc+0xa0>
    5ce7:	48 89 8e 90 00 00 00 	mov    %rcx,0x90(%rsi)
    5cee:	48 83 c4 10          	add    $0x10,%rsp
    5cf2:	48 89 c8             	mov    %rcx,%rax
    5cf5:	5b                   	pop    %rbx
    5cf6:	c3                   	ret    
    5cf7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    5cfe:	00 00 

0000000000005d00 <sgx_ocfree>:
    5d00:	f3 0f 1e fa          	endbr64 
    5d04:	48 83 ec 08          	sub    $0x8,%rsp
    5d08:	e8 36 c4 00 00       	call   12143 <get_thread_data>
    5d0d:	48 8d 15 fc 20 01 00 	lea    0x120fc(%rip),%rdx        # 17e10 <g_enclave_base>
    5d14:	48 8d 0d ed 20 01 00 	lea    0x120ed(%rip),%rcx        # 17e08 <g_enclave_size>
    5d1b:	48 8b 70 20          	mov    0x20(%rax),%rsi
    5d1f:	48 8b 40 08          	mov    0x8(%rax),%rax
    5d23:	48 8b 12             	mov    (%rdx),%rdx
    5d26:	48 8b 09             	mov    (%rcx),%rcx
    5d29:	48 8b 40 e8          	mov    -0x18(%rax),%rax
    5d2d:	48 89 c7             	mov    %rax,%rdi
    5d30:	48 83 c7 07          	add    $0x7,%rdi
    5d34:	72 0f                	jb     5d45 <sgx_ocfree+0x45>
    5d36:	48 8d 4c 0a ff       	lea    -0x1(%rdx,%rcx,1),%rcx
    5d3b:	48 39 c1             	cmp    %rax,%rcx
    5d3e:	72 10                	jb     5d50 <sgx_ocfree+0x50>
    5d40:	48 39 d7             	cmp    %rdx,%rdi
    5d43:	72 0b                	jb     5d50 <sgx_ocfree+0x50>
    5d45:	e8 ed c7 00 00       	call   12537 <abort>
    5d4a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5d50:	48 89 86 90 00 00 00 	mov    %rax,0x90(%rsi)
    5d57:	48 83 c4 08          	add    $0x8,%rsp
    5d5b:	c3                   	ret    
    5d5c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005d60 <sgx_read_rand>:
    5d60:	f3 0f 1e fa          	endbr64 
    5d64:	41 55                	push   %r13
    5d66:	41 54                	push   %r12
    5d68:	55                   	push   %rbp
    5d69:	53                   	push   %rbx
    5d6a:	48 83 ec 18          	sub    $0x18,%rsp
    5d6e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    5d75:	00 00 
    5d77:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    5d7c:	31 c0                	xor    %eax,%eax
    5d7e:	48 85 ff             	test   %rdi,%rdi
    5d81:	0f 84 f9 00 00 00    	je     5e80 <sgx_read_rand+0x120>
    5d87:	48 89 f3             	mov    %rsi,%rbx
    5d8a:	48 85 f6             	test   %rsi,%rsi
    5d8d:	0f 84 ed 00 00 00    	je     5e80 <sgx_read_rand+0x120>
    5d93:	48 8d 05 76 20 01 00 	lea    0x12076(%rip),%rax        # 17e10 <g_enclave_base>
    5d9a:	48 89 fd             	mov    %rdi,%rbp
    5d9d:	31 ff                	xor    %edi,%edi
    5d9f:	48 8b 08             	mov    (%rax),%rcx
    5da2:	48 8d 05 5f 20 01 00 	lea    0x1205f(%rip),%rax        # 17e08 <g_enclave_size>
    5da9:	48 8b 10             	mov    (%rax),%rdx
    5dac:	48 8d 46 ff          	lea    -0x1(%rsi),%rax
    5db0:	48 01 ca             	add    %rcx,%rdx
    5db3:	48 83 ea 01          	sub    $0x1,%rdx
    5db7:	48 01 e8             	add    %rbp,%rax
    5dba:	40 0f 92 c7          	setb   %dil
    5dbe:	48 39 c2             	cmp    %rax,%rdx
    5dc1:	41 0f 93 c0          	setae  %r8b
    5dc5:	48 85 ff             	test   %rdi,%rdi
    5dc8:	40 0f 94 c6          	sete   %sil
    5dcc:	41 84 f0             	test   %sil,%r8b
    5dcf:	74 05                	je     5dd6 <sgx_read_rand+0x76>
    5dd1:	48 39 cd             	cmp    %rcx,%rbp
    5dd4:	73 42                	jae    5e18 <sgx_read_rand+0xb8>
    5dd6:	be 02 00 00 00       	mov    $0x2,%esi
    5ddb:	48 85 ff             	test   %rdi,%rdi
    5dde:	74 28                	je     5e08 <sgx_read_rand+0xa8>
    5de0:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    5de5:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    5dec:	00 00 
    5dee:	0f 85 96 00 00 00    	jne    5e8a <sgx_read_rand+0x12a>
    5df4:	48 83 c4 18          	add    $0x18,%rsp
    5df8:	89 f0                	mov    %esi,%eax
    5dfa:	5b                   	pop    %rbx
    5dfb:	5d                   	pop    %rbp
    5dfc:	41 5c                	pop    %r12
    5dfe:	41 5d                	pop    %r13
    5e00:	c3                   	ret    
    5e01:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5e08:	48 39 c8             	cmp    %rcx,%rax
    5e0b:	72 0b                	jb     5e18 <sgx_read_rand+0xb8>
    5e0d:	48 39 d5             	cmp    %rdx,%rbp
    5e10:	76 ce                	jbe    5de0 <sgx_read_rand+0x80>
    5e12:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5e18:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
    5e1f:	00 
    5e20:	4c 8d 6c 24 04       	lea    0x4(%rsp),%r13
    5e25:	4c 89 ef             	mov    %r13,%rdi
    5e28:	e8 e7 c6 00 00       	call   12514 <do_rdrand>
    5e2d:	85 c0                	test   %eax,%eax
    5e2f:	74 3f                	je     5e70 <sgx_read_rand+0x110>
    5e31:	41 bc 04 00 00 00    	mov    $0x4,%r12d
    5e37:	48 89 ef             	mov    %rbp,%rdi
    5e3a:	4c 89 ee             	mov    %r13,%rsi
    5e3d:	4c 39 e3             	cmp    %r12,%rbx
    5e40:	4c 0f 46 e3          	cmovbe %rbx,%r12
    5e44:	4c 89 e2             	mov    %r12,%rdx
    5e47:	4c 01 e5             	add    %r12,%rbp
    5e4a:	e8 81 a8 00 00       	call   106d0 <memcpy>
    5e4f:	4c 29 e3             	sub    %r12,%rbx
    5e52:	75 d1                	jne    5e25 <sgx_read_rand+0xc5>
    5e54:	be 04 00 00 00       	mov    $0x4,%esi
    5e59:	b9 04 00 00 00       	mov    $0x4,%ecx
    5e5e:	31 d2                	xor    %edx,%edx
    5e60:	4c 89 ef             	mov    %r13,%rdi
    5e63:	e8 b8 aa 00 00       	call   10920 <memset_s>
    5e68:	31 f6                	xor    %esi,%esi
    5e6a:	e9 71 ff ff ff       	jmp    5de0 <sgx_read_rand+0x80>
    5e6f:	90                   	nop
    5e70:	be 01 00 00 00       	mov    $0x1,%esi
    5e75:	e9 66 ff ff ff       	jmp    5de0 <sgx_read_rand+0x80>
    5e7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5e80:	be 02 00 00 00       	mov    $0x2,%esi
    5e85:	e9 56 ff ff ff       	jmp    5de0 <sgx_read_rand+0x80>
    5e8a:	e8 61 ab 00 00       	call   109f0 <__stack_chk_fail>
    5e8f:	90                   	nop

0000000000005e90 <check_static_stack_canary>:
    5e90:	f3 0f 1e fa          	endbr64 
    5e94:	48 8d 05 5d 1f 01 00 	lea    0x11f5d(%rip),%rax        # 17df8 <__intel_security_cookie>
    5e9b:	48 8b 00             	mov    (%rax),%rax
    5e9e:	48 39 87 08 fc fe ff 	cmp    %rax,-0x103f8(%rdi)
    5ea5:	0f 95 c0             	setne  %al
    5ea8:	0f b6 c0             	movzbl %al,%eax
    5eab:	f7 d8                	neg    %eax
    5ead:	c3                   	ret    
    5eae:	66 90                	xchg   %ax,%ax

0000000000005eb0 <sgx_rdpkru>:
    5eb0:	f3 0f 1e fa          	endbr64 
    5eb4:	53                   	push   %rbx
    5eb5:	48 89 fb             	mov    %rdi,%rbx
    5eb8:	e8 63 18 00 00       	call   7720 <is_pkru_enabled>
    5ebd:	89 c2                	mov    %eax,%edx
    5ebf:	31 c0                	xor    %eax,%eax
    5ec1:	84 d2                	test   %dl,%dl
    5ec3:	74 0c                	je     5ed1 <sgx_rdpkru+0x21>
    5ec5:	89 c1                	mov    %eax,%ecx
    5ec7:	0f 01 ee             	rdpkru 
    5eca:	89 03                	mov    %eax,(%rbx)
    5ecc:	b8 01 00 00 00       	mov    $0x1,%eax
    5ed1:	5b                   	pop    %rbx
    5ed2:	c3                   	ret    
    5ed3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5eda:	00 00 00 
    5edd:	0f 1f 00             	nopl   (%rax)

0000000000005ee0 <sgx_wrpkru>:
    5ee0:	f3 0f 1e fa          	endbr64 
    5ee4:	53                   	push   %rbx
    5ee5:	89 fb                	mov    %edi,%ebx
    5ee7:	e8 34 18 00 00       	call   7720 <is_pkru_enabled>
    5eec:	31 d2                	xor    %edx,%edx
    5eee:	84 c0                	test   %al,%al
    5ef0:	74 0c                	je     5efe <sgx_wrpkru+0x1e>
    5ef2:	89 d8                	mov    %ebx,%eax
    5ef4:	89 d1                	mov    %edx,%ecx
    5ef6:	0f 01 ef             	wrpkru 
    5ef9:	ba 01 00 00 00       	mov    $0x1,%edx
    5efe:	89 d0                	mov    %edx,%eax
    5f00:	5b                   	pop    %rbx
    5f01:	c3                   	ret    
    5f02:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5f09:	00 00 00 
    5f0c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005f10 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0>:
    5f10:	41 55                	push   %r13
    5f12:	49 89 cd             	mov    %rcx,%r13
    5f15:	41 54                	push   %r12
    5f17:	55                   	push   %rbp
    5f18:	53                   	push   %rbx
    5f19:	48 83 ec 08          	sub    $0x8,%rsp
    5f1d:	48 8d 0d dc d2 00 00 	lea    0xd2dc(%rip),%rcx        # 13200 <g_global_data>
    5f24:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    5f2a:	85 c0                	test   %eax,%eax
    5f2c:	0f 84 8e 00 00 00    	je     5fc0 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0xb0>
    5f32:	48 89 d3             	mov    %rdx,%rbx
    5f35:	49 89 fc             	mov    %rdi,%r12
    5f38:	31 d2                	xor    %edx,%edx
    5f3a:	eb 11                	jmp    5f4d <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0x3d>
    5f3c:	0f 1f 40 00          	nopl   0x0(%rax)
    5f40:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    5f46:	83 c2 01             	add    $0x1,%edx
    5f49:	39 c2                	cmp    %eax,%edx
    5f4b:	73 73                	jae    5fc0 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0xb0>
    5f4d:	89 d0                	mov    %edx,%eax
    5f4f:	48 83 c0 0b          	add    $0xb,%rax
    5f53:	48 c1 e0 05          	shl    $0x5,%rax
    5f57:	48 01 c8             	add    %rcx,%rax
    5f5a:	0f b7 00             	movzwl (%rax),%eax
    5f5d:	66 39 c6             	cmp    %ax,%si
    5f60:	75 de                	jne    5f40 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0x30>
    5f62:	8d 42 0b             	lea    0xb(%rdx),%eax
    5f65:	48 c1 e0 05          	shl    $0x5,%rax
    5f69:	48 01 c1             	add    %rax,%rcx
    5f6c:	48 89 cd             	mov    %rcx,%rbp
    5f6f:	74 4f                	je     5fc0 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0xb0>
    5f71:	e8 82 c1 00 00       	call   120f8 <get_enclave_base>
    5f76:	48 8b 55 08          	mov    0x8(%rbp),%rdx
    5f7a:	48 01 da             	add    %rbx,%rdx
    5f7d:	48 01 d0             	add    %rdx,%rax
    5f80:	8b 55 04             	mov    0x4(%rbp),%edx
    5f83:	49 39 c4             	cmp    %rax,%r12
    5f86:	72 38                	jb     5fc0 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0xb0>
    5f88:	48 c1 e2 0c          	shl    $0xc,%rdx
    5f8c:	49 81 c4 00 10 00 00 	add    $0x1000,%r12
    5f93:	48 01 c2             	add    %rax,%rdx
    5f96:	4c 39 e2             	cmp    %r12,%rdx
    5f99:	72 25                	jb     5fc0 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0xb0>
    5f9b:	4d 85 ed             	test   %r13,%r13
    5f9e:	74 11                	je     5fb1 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0xa1>
    5fa0:	48 8b 45 18          	mov    0x18(%rbp),%rax
    5fa4:	49 89 45 00          	mov    %rax,0x0(%r13)
    5fa8:	0f b7 45 02          	movzwl 0x2(%rbp),%eax
    5fac:	66 41 89 45 08       	mov    %ax,0x8(%r13)
    5fb1:	31 c0                	xor    %eax,%eax
    5fb3:	48 83 c4 08          	add    $0x8,%rsp
    5fb7:	5b                   	pop    %rbx
    5fb8:	5d                   	pop    %rbp
    5fb9:	41 5c                	pop    %r12
    5fbb:	41 5d                	pop    %r13
    5fbd:	c3                   	ret    
    5fbe:	66 90                	xchg   %ax,%ax
    5fc0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    5fc5:	eb ec                	jmp    5fb3 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0xa3>
    5fc7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    5fce:	00 00 

0000000000005fd0 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0>:
    5fd0:	48 81 ff ff ef ff ff 	cmp    $0xffffffffffffefff,%rdi
    5fd7:	0f 87 c3 01 00 00    	ja     61a0 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x1d0>
    5fdd:	41 57                	push   %r15
    5fdf:	41 56                	push   %r14
    5fe1:	41 55                	push   %r13
    5fe3:	41 54                	push   %r12
    5fe5:	49 89 f4             	mov    %rsi,%r12
    5fe8:	55                   	push   %rbp
    5fe9:	48 89 d5             	mov    %rdx,%rbp
    5fec:	53                   	push   %rbx
    5fed:	48 89 fb             	mov    %rdi,%rbx
    5ff0:	48 83 ec 08          	sub    $0x8,%rsp
    5ff4:	e8 87 13 00 00       	call   7380 <get_heap_base>
    5ff9:	49 89 c5             	mov    %rax,%r13
    5ffc:	e8 0f 14 00 00       	call   7410 <get_heap_min_size>
    6001:	49 01 c5             	add    %rax,%r13
    6004:	e8 97 13 00 00       	call   73a0 <get_heap_size>
    6009:	49 89 c6             	mov    %rax,%r14
    600c:	e8 ff 13 00 00       	call   7410 <get_heap_min_size>
    6011:	49 29 c6             	sub    %rax,%r14
    6014:	4c 39 eb             	cmp    %r13,%rbx
    6017:	72 37                	jb     6050 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x80>
    6019:	48 8d 83 00 10 00 00 	lea    0x1000(%rbx),%rax
    6020:	4d 01 f5             	add    %r14,%r13
    6023:	49 39 c5             	cmp    %rax,%r13
    6026:	72 28                	jb     6050 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x80>
    6028:	48 85 ed             	test   %rbp,%rbp
    602b:	74 11                	je     603e <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x6e>
    602d:	b8 08 00 00 00       	mov    $0x8,%eax
    6032:	48 c7 45 00 03 02 00 	movq   $0x203,0x0(%rbp)
    6039:	00 
    603a:	66 89 45 08          	mov    %ax,0x8(%rbp)
    603e:	31 c0                	xor    %eax,%eax
    6040:	48 83 c4 08          	add    $0x8,%rsp
    6044:	5b                   	pop    %rbx
    6045:	5d                   	pop    %rbp
    6046:	41 5c                	pop    %r12
    6048:	41 5d                	pop    %r13
    604a:	41 5e                	pop    %r14
    604c:	41 5f                	pop    %r15
    604e:	c3                   	ret    
    604f:	90                   	nop
    6050:	31 d2                	xor    %edx,%edx
    6052:	48 89 e9             	mov    %rbp,%rcx
    6055:	be 07 00 00 00       	mov    $0x7,%esi
    605a:	48 89 df             	mov    %rbx,%rdi
    605d:	e8 ae fe ff ff       	call   5f10 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0>
    6062:	85 c0                	test   %eax,%eax
    6064:	74 d8                	je     603e <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x6e>
    6066:	48 8d 15 eb 1d 01 00 	lea    0x11deb(%rip),%rdx        # 17e58 <rsrv_mem_size>
    606d:	48 8d 05 ec 1d 01 00 	lea    0x11dec(%rip),%rax        # 17e60 <rsrv_mem_base>
    6074:	48 8b 0a             	mov    (%rdx),%rcx
    6077:	48 8d 15 d2 1d 01 00 	lea    0x11dd2(%rip),%rdx        # 17e50 <rsrv_mem_min_size>
    607e:	48 8b 00             	mov    (%rax),%rax
    6081:	48 8b 32             	mov    (%rdx),%rsi
    6084:	48 01 c6             	add    %rax,%rsi
    6087:	48 39 f3             	cmp    %rsi,%rbx
    608a:	72 0f                	jb     609b <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0xcb>
    608c:	48 8d 93 00 10 00 00 	lea    0x1000(%rbx),%rdx
    6093:	48 01 c8             	add    %rcx,%rax
    6096:	48 39 d0             	cmp    %rdx,%rax
    6099:	73 8d                	jae    6028 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x58>
    609b:	48 8d 0d 5e d1 00 00 	lea    0xd15e(%rip),%rcx        # 13200 <g_global_data>
    60a2:	31 d2                	xor    %edx,%edx
    60a4:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    60aa:	85 c0                	test   %eax,%eax
    60ac:	74 25                	je     60d3 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x103>
    60ae:	66 90                	xchg   %ax,%ax
    60b0:	89 d0                	mov    %edx,%eax
    60b2:	48 83 c0 0b          	add    $0xb,%rax
    60b6:	48 c1 e0 05          	shl    $0x5,%rax
    60ba:	48 01 c8             	add    %rcx,%rax
    60bd:	0f b7 00             	movzwl (%rax),%eax
    60c0:	66 3d 13 10          	cmp    $0x1013,%ax
    60c4:	74 42                	je     6108 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x138>
    60c6:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    60cc:	83 c2 01             	add    $0x1,%edx
    60cf:	39 c2                	cmp    %eax,%edx
    60d1:	72 dd                	jb     60b0 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0xe0>
    60d3:	41 bd 0e 00 00 00    	mov    $0xe,%r13d
    60d9:	31 d2                	xor    %edx,%edx
    60db:	48 89 e9             	mov    %rbp,%rcx
    60de:	44 89 ee             	mov    %r13d,%esi
    60e1:	48 89 df             	mov    %rbx,%rdi
    60e4:	e8 27 fe ff ff       	call   5f10 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0>
    60e9:	85 c0                	test   %eax,%eax
    60eb:	0f 84 96 00 00 00    	je     6187 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x1b7>
    60f1:	41 83 c5 01          	add    $0x1,%r13d
    60f5:	41 83 fd 13          	cmp    $0x13,%r13d
    60f9:	75 de                	jne    60d9 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x109>
    60fb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    6100:	e9 3b ff ff ff       	jmp    6040 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x70>
    6105:	0f 1f 00             	nopl   (%rax)
    6108:	8d 42 0b             	lea    0xb(%rdx),%eax
    610b:	41 bd 0e 00 00 00    	mov    $0xe,%r13d
    6111:	48 c1 e0 05          	shl    $0x5,%rax
    6115:	48 01 c1             	add    %rax,%rcx
    6118:	49 89 ce             	mov    %rcx,%r14
    611b:	74 bc                	je     60d9 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x109>
    611d:	41 8b 46 04          	mov    0x4(%r14),%eax
    6121:	45 31 ff             	xor    %r15d,%r15d
    6124:	83 f8 ff             	cmp    $0xffffffff,%eax
    6127:	75 17                	jne    6140 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x170>
    6129:	eb 4d                	jmp    6178 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x1a8>
    612b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6130:	41 8b 46 04          	mov    0x4(%r14),%eax
    6134:	49 83 c7 01          	add    $0x1,%r15
    6138:	83 c0 01             	add    $0x1,%eax
    613b:	41 39 c7             	cmp    %eax,%r15d
    613e:	73 38                	jae    6178 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x1a8>
    6140:	49 8b 56 08          	mov    0x8(%r14),%rdx
    6144:	48 89 e9             	mov    %rbp,%rcx
    6147:	44 89 ee             	mov    %r13d,%esi
    614a:	48 89 df             	mov    %rbx,%rdi
    614d:	49 0f af d7          	imul   %r15,%rdx
    6151:	e8 ba fd ff ff       	call   5f10 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0>
    6156:	85 c0                	test   %eax,%eax
    6158:	75 d6                	jne    6130 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x160>
    615a:	4d 85 e4             	test   %r12,%r12
    615d:	0f 84 db fe ff ff    	je     603e <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x6e>
    6163:	49 8b 46 08          	mov    0x8(%r14),%rax
    6167:	49 0f af c7          	imul   %r15,%rax
    616b:	49 89 04 24          	mov    %rax,(%r12)
    616f:	e9 ca fe ff ff       	jmp    603e <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x6e>
    6174:	0f 1f 40 00          	nopl   0x0(%rax)
    6178:	41 83 c5 01          	add    $0x1,%r13d
    617c:	41 83 fd 13          	cmp    $0x13,%r13d
    6180:	75 9b                	jne    611d <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x14d>
    6182:	e9 74 ff ff ff       	jmp    60fb <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x12b>
    6187:	4d 85 e4             	test   %r12,%r12
    618a:	0f 84 ae fe ff ff    	je     603e <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x6e>
    6190:	49 c7 04 24 00 00 00 	movq   $0x0,(%r12)
    6197:	00 
    6198:	e9 a1 fe ff ff       	jmp    603e <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x6e>
    619d:	0f 1f 00             	nopl   (%rax)
    61a0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    61a5:	c3                   	ret    
    61a6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    61ad:	00 00 00 

00000000000061b0 <_Z24get_dynamic_layout_by_idt>:
    61b0:	f3 0f 1e fa          	endbr64 
    61b4:	48 8d 05 45 d0 00 00 	lea    0xd045(%rip),%rax        # 13200 <g_global_data>
    61bb:	8b 90 58 01 00 00    	mov    0x158(%rax),%edx
    61c1:	85 d2                	test   %edx,%edx
    61c3:	74 3b                	je     6200 <_Z24get_dynamic_layout_by_idt+0x50>
    61c5:	31 c9                	xor    %ecx,%ecx
    61c7:	eb 14                	jmp    61dd <_Z24get_dynamic_layout_by_idt+0x2d>
    61c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    61d0:	8b 90 58 01 00 00    	mov    0x158(%rax),%edx
    61d6:	83 c1 01             	add    $0x1,%ecx
    61d9:	39 d1                	cmp    %edx,%ecx
    61db:	73 23                	jae    6200 <_Z24get_dynamic_layout_by_idt+0x50>
    61dd:	89 ca                	mov    %ecx,%edx
    61df:	48 83 c2 0b          	add    $0xb,%rdx
    61e3:	48 c1 e2 05          	shl    $0x5,%rdx
    61e7:	48 01 c2             	add    %rax,%rdx
    61ea:	0f b7 12             	movzwl (%rdx),%edx
    61ed:	66 39 fa             	cmp    %di,%dx
    61f0:	75 de                	jne    61d0 <_Z24get_dynamic_layout_by_idt+0x20>
    61f2:	8d 51 0b             	lea    0xb(%rcx),%edx
    61f5:	48 c1 e2 05          	shl    $0x5,%rdx
    61f9:	48 01 d0             	add    %rdx,%rax
    61fc:	c3                   	ret    
    61fd:	0f 1f 00             	nopl   (%rax)
    6200:	31 c0                	xor    %eax,%eax
    6202:	c3                   	ret    
    6203:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    620a:	00 00 00 
    620d:	0f 1f 00             	nopl   (%rax)

0000000000006210 <is_dynamic_thread>:
    6210:	f3 0f 1e fa          	endbr64 
    6214:	48 83 ec 28          	sub    $0x28,%rsp
    6218:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    621f:	00 00 
    6221:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    6226:	31 c0                	xor    %eax,%eax
    6228:	48 85 ff             	test   %rdi,%rdi
    622b:	74 0e                	je     623b <is_dynamic_thread+0x2b>
    622d:	31 f6                	xor    %esi,%esi
    622f:	48 89 e2             	mov    %rsp,%rdx
    6232:	e8 99 fd ff ff       	call   5fd0 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0>
    6237:	85 c0                	test   %eax,%eax
    6239:	74 1d                	je     6258 <is_dynamic_thread+0x48>
    623b:	31 c0                	xor    %eax,%eax
    623d:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    6242:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    6249:	00 00 
    624b:	75 1a                	jne    6267 <is_dynamic_thread+0x57>
    624d:	48 83 c4 28          	add    $0x28,%rsp
    6251:	c3                   	ret    
    6252:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6258:	31 c0                	xor    %eax,%eax
    625a:	48 81 3c 24 00 01 00 	cmpq   $0x100,(%rsp)
    6261:	00 
    6262:	0f 94 c0             	sete   %al
    6265:	eb d6                	jmp    623d <is_dynamic_thread+0x2d>
    6267:	e8 84 a7 00 00       	call   109f0 <__stack_chk_fail>
    626c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000006270 <is_dynamic_thread_exist>:
    6270:	f3 0f 1e fa          	endbr64 
    6274:	48 8d 05 a1 1b 01 00 	lea    0x11ba1(%rip),%rax        # 17e1c <EDMM_supported>
    627b:	8b 00                	mov    (%rax),%eax
    627d:	85 c0                	test   %eax,%eax
    627f:	74 59                	je     62da <is_dynamic_thread_exist+0x6a>
    6281:	48 8d 0d 78 cf 00 00 	lea    0xcf78(%rip),%rcx        # 13200 <g_global_data>
    6288:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    628e:	85 c0                	test   %eax,%eax
    6290:	74 46                	je     62d8 <is_dynamic_thread_exist+0x68>
    6292:	31 d2                	xor    %edx,%edx
    6294:	eb 17                	jmp    62ad <is_dynamic_thread_exist+0x3d>
    6296:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    629d:	00 00 00 
    62a0:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    62a6:	83 c2 01             	add    $0x1,%edx
    62a9:	39 c2                	cmp    %eax,%edx
    62ab:	73 2b                	jae    62d8 <is_dynamic_thread_exist+0x68>
    62ad:	89 d0                	mov    %edx,%eax
    62af:	48 83 c0 0b          	add    $0xb,%rax
    62b3:	48 c1 e0 05          	shl    $0x5,%rax
    62b7:	48 01 c8             	add    %rcx,%rax
    62ba:	0f b7 00             	movzwl (%rax),%eax
    62bd:	66 83 f8 12          	cmp    $0x12,%ax
    62c1:	75 dd                	jne    62a0 <is_dynamic_thread_exist+0x30>
    62c3:	8d 42 0b             	lea    0xb(%rdx),%eax
    62c6:	48 c1 e0 05          	shl    $0x5,%rax
    62ca:	48 01 c1             	add    %rax,%rcx
    62cd:	0f 95 c0             	setne  %al
    62d0:	0f b6 c0             	movzbl %al,%eax
    62d3:	c3                   	ret    
    62d4:	0f 1f 40 00          	nopl   0x0(%rax)
    62d8:	31 c0                	xor    %eax,%eax
    62da:	c3                   	ret    
    62db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000062e0 <get_dynamic_stack_max_page>:
    62e0:	f3 0f 1e fa          	endbr64 
    62e4:	48 8d 0d 15 cf 00 00 	lea    0xcf15(%rip),%rcx        # 13200 <g_global_data>
    62eb:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    62f1:	85 c0                	test   %eax,%eax
    62f3:	74 45                	je     633a <get_dynamic_stack_max_page+0x5a>
    62f5:	31 d2                	xor    %edx,%edx
    62f7:	eb 14                	jmp    630d <get_dynamic_stack_max_page+0x2d>
    62f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6300:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    6306:	83 c2 01             	add    $0x1,%edx
    6309:	39 c2                	cmp    %eax,%edx
    630b:	73 2b                	jae    6338 <get_dynamic_stack_max_page+0x58>
    630d:	89 d0                	mov    %edx,%eax
    630f:	48 83 c0 0b          	add    $0xb,%rax
    6313:	48 c1 e0 05          	shl    $0x5,%rax
    6317:	48 01 c8             	add    %rcx,%rax
    631a:	0f b7 00             	movzwl (%rax),%eax
    631d:	66 83 f8 07          	cmp    $0x7,%ax
    6321:	75 dd                	jne    6300 <get_dynamic_stack_max_page+0x20>
    6323:	8d 42 0b             	lea    0xb(%rdx),%eax
    6326:	48 c1 e0 05          	shl    $0x5,%rax
    632a:	48 01 c1             	add    %rax,%rcx
    632d:	74 09                	je     6338 <get_dynamic_stack_max_page+0x58>
    632f:	8b 41 04             	mov    0x4(%rcx),%eax
    6332:	c3                   	ret    
    6333:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6338:	31 c0                	xor    %eax,%eax
    633a:	c3                   	ret    
    633b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000006340 <do_add_thread>:
    6340:	f3 0f 1e fa          	endbr64 
    6344:	41 56                	push   %r14
    6346:	41 55                	push   %r13
    6348:	41 54                	push   %r12
    634a:	55                   	push   %rbp
    634b:	53                   	push   %rbx
    634c:	48 89 fb             	mov    %rdi,%rbx
    634f:	48 83 ec 10          	sub    $0x10,%rsp
    6353:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    635a:	00 00 
    635c:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    6361:	31 c0                	xor    %eax,%eax
    6363:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    636a:	00 
    636b:	e8 88 bd 00 00       	call   120f8 <get_enclave_base>
    6370:	31 d2                	xor    %edx,%edx
    6372:	48 89 e6             	mov    %rsp,%rsi
    6375:	48 89 df             	mov    %rbx,%rdi
    6378:	48 89 c5             	mov    %rax,%rbp
    637b:	e8 50 fc ff ff       	call   5fd0 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0>
    6380:	85 c0                	test   %eax,%eax
    6382:	75 62                	jne    63e6 <do_add_thread+0xa6>
    6384:	4c 8d 25 75 ce 00 00 	lea    0xce75(%rip),%r12        # 13200 <g_global_data>
    638b:	41 8b 84 24 58 01 00 	mov    0x158(%r12),%eax
    6392:	00 
    6393:	85 c0                	test   %eax,%eax
    6395:	74 4f                	je     63e6 <do_add_thread+0xa6>
    6397:	31 d2                	xor    %edx,%edx
    6399:	eb 14                	jmp    63af <do_add_thread+0x6f>
    639b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    63a0:	41 8b 84 24 58 01 00 	mov    0x158(%r12),%eax
    63a7:	00 
    63a8:	83 c2 01             	add    $0x1,%edx
    63ab:	39 c2                	cmp    %eax,%edx
    63ad:	73 37                	jae    63e6 <do_add_thread+0xa6>
    63af:	89 d0                	mov    %edx,%eax
    63b1:	48 83 c0 0b          	add    $0xb,%rax
    63b5:	48 c1 e0 05          	shl    $0x5,%rax
    63b9:	4c 01 e0             	add    %r12,%rax
    63bc:	44 0f b7 28          	movzwl (%rax),%r13d
    63c0:	66 41 83 fd 0e       	cmp    $0xe,%r13w
    63c5:	75 d9                	jne    63a0 <do_add_thread+0x60>
    63c7:	8d 42 0b             	lea    0xb(%rdx),%eax
    63ca:	48 c1 e0 05          	shl    $0x5,%rax
    63ce:	4c 01 e0             	add    %r12,%rax
    63d1:	74 13                	je     63e6 <do_add_thread+0xa6>
    63d3:	4c 8b 34 24          	mov    (%rsp),%r14
    63d7:	48 8b 40 08          	mov    0x8(%rax),%rax
    63db:	49 01 ee             	add    %rbp,%r14
    63de:	4c 01 f0             	add    %r14,%rax
    63e1:	48 39 d8             	cmp    %rbx,%rax
    63e4:	74 4e                	je     6434 <do_add_thread+0xf4>
    63e6:	b8 01 00 00 00       	mov    $0x1,%eax
    63eb:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    63f0:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    63f7:	00 00 
    63f9:	0f 85 f9 00 00 00    	jne    64f8 <do_add_thread+0x1b8>
    63ff:	48 83 c4 10          	add    $0x10,%rsp
    6403:	5b                   	pop    %rbx
    6404:	5d                   	pop    %rbp
    6405:	41 5c                	pop    %r12
    6407:	41 5d                	pop    %r13
    6409:	41 5e                	pop    %r14
    640b:	c3                   	ret    
    640c:	0f 1f 40 00          	nopl   0x0(%rax)
    6410:	8d 42 0b             	lea    0xb(%rdx),%eax
    6413:	48 c1 e0 05          	shl    $0x5,%rax
    6417:	4c 01 e0             	add    %r12,%rax
    641a:	74 0d                	je     6429 <do_add_thread+0xe9>
    641c:	0f b7 50 02          	movzwl 0x2(%rax),%edx
    6420:	83 e2 20             	and    $0x20,%edx
    6423:	0f 85 af 00 00 00    	jne    64d8 <do_add_thread+0x198>
    6429:	41 83 c5 01          	add    $0x1,%r13d
    642d:	66 41 83 fd 13       	cmp    $0x13,%r13w
    6432:	74 3c                	je     6470 <do_add_thread+0x130>
    6434:	41 8b 84 24 58 01 00 	mov    0x158(%r12),%eax
    643b:	00 
    643c:	31 d2                	xor    %edx,%edx
    643e:	85 c0                	test   %eax,%eax
    6440:	75 15                	jne    6457 <do_add_thread+0x117>
    6442:	eb e5                	jmp    6429 <do_add_thread+0xe9>
    6444:	0f 1f 40 00          	nopl   0x0(%rax)
    6448:	41 8b 84 24 58 01 00 	mov    0x158(%r12),%eax
    644f:	00 
    6450:	83 c2 01             	add    $0x1,%edx
    6453:	39 c2                	cmp    %eax,%edx
    6455:	73 d2                	jae    6429 <do_add_thread+0xe9>
    6457:	89 d0                	mov    %edx,%eax
    6459:	48 83 c0 0b          	add    $0xb,%rax
    645d:	48 c1 e0 05          	shl    $0x5,%rax
    6461:	4c 01 e0             	add    %r12,%rax
    6464:	0f b7 00             	movzwl (%rax),%eax
    6467:	66 44 39 e8          	cmp    %r13w,%ax
    646b:	75 db                	jne    6448 <do_add_thread+0x108>
    646d:	eb a1                	jmp    6410 <do_add_thread+0xd0>
    646f:	90                   	nop
    6470:	ba 48 00 00 00       	mov    $0x48,%edx
    6475:	49 8d b4 24 10 01 00 	lea    0x110(%r12),%rsi
    647c:	00 
    647d:	48 89 df             	mov    %rbx,%rdi
    6480:	e8 4b a2 00 00       	call   106d0 <memcpy>
    6485:	f3 0f 6f 4b 30       	movdqu 0x30(%rbx),%xmm1
    648a:	48 89 d8             	mov    %rbx,%rax
    648d:	48 89 df             	mov    %rbx,%rdi
    6490:	66 48 0f 6e c3       	movq   %rbx,%xmm0
    6495:	48 29 e8             	sub    %rbp,%rax
    6498:	48 01 43 10          	add    %rax,0x10(%rbx)
    649c:	ba 00 01 00 00       	mov    $0x100,%edx
    64a1:	66 0f 6c c0          	punpcklqdq %xmm0,%xmm0
    64a5:	be 00 10 00 00       	mov    $0x1000,%esi
    64aa:	66 0f d4 c8          	paddq  %xmm0,%xmm1
    64ae:	66 48 0f 6e c5       	movq   %rbp,%xmm0
    64b3:	66 0f 6c c0          	punpcklqdq %xmm0,%xmm0
    64b7:	66 0f fb c8          	psubq  %xmm0,%xmm1
    64bb:	0f 11 4b 30          	movups %xmm1,0x30(%rbx)
    64bf:	e8 3c 55 00 00       	call   ba00 <mm_modify_type>
    64c4:	85 c0                	test   %eax,%eax
    64c6:	0f 95 c0             	setne  %al
    64c9:	0f b6 c0             	movzbl %al,%eax
    64cc:	e9 1a ff ff ff       	jmp    63eb <do_add_thread+0xab>
    64d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    64d8:	8b 70 04             	mov    0x4(%rax),%esi
    64db:	48 8b 78 08          	mov    0x8(%rax),%rdi
    64df:	48 c1 e6 0c          	shl    $0xc,%rsi
    64e3:	4c 01 f7             	add    %r14,%rdi
    64e6:	e8 d5 54 00 00       	call   b9c0 <mm_commit>
    64eb:	85 c0                	test   %eax,%eax
    64ed:	0f 84 36 ff ff ff    	je     6429 <do_add_thread+0xe9>
    64f3:	e9 ee fe ff ff       	jmp    63e6 <do_add_thread+0xa6>
    64f8:	e8 f3 a4 00 00       	call   109f0 <__stack_chk_fail>
    64fd:	0f 1f 00             	nopl   (%rax)

0000000000006500 <sgx_set_ssa_aexnotify>:
    6500:	f3 0f 1e fa          	endbr64 
    6504:	55                   	push   %rbp
    6505:	89 fd                	mov    %edi,%ebp
    6507:	53                   	push   %rbx
    6508:	48 83 ec 08          	sub    $0x8,%rsp
    650c:	e8 32 bc 00 00       	call   12143 <get_thread_data>
    6511:	48 85 c0             	test   %rax,%rax
    6514:	74 3a                	je     6550 <sgx_set_ssa_aexnotify+0x50>
    6516:	48 89 c3             	mov    %rax,%rbx
    6519:	e8 32 af 00 00       	call   11450 <sgx_self_report>
    651e:	f6 40 31 04          	testb  $0x4,0x31(%rax)
    6522:	74 2c                	je     6550 <sgx_set_ssa_aexnotify+0x50>
    6524:	48 8b 53 20          	mov    0x20(%rbx),%rdx
    6528:	0f b6 82 a7 00 00 00 	movzbl 0xa7(%rdx),%eax
    652f:	89 c1                	mov    %eax,%ecx
    6531:	83 c8 01             	or     $0x1,%eax
    6534:	83 e1 fe             	and    $0xfffffffe,%ecx
    6537:	85 ed                	test   %ebp,%ebp
    6539:	0f 44 c1             	cmove  %ecx,%eax
    653c:	88 82 a7 00 00 00    	mov    %al,0xa7(%rdx)
    6542:	48 83 c4 08          	add    $0x8,%rsp
    6546:	31 c0                	xor    %eax,%eax
    6548:	5b                   	pop    %rbx
    6549:	5d                   	pop    %rbp
    654a:	c3                   	ret    
    654b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6550:	48 83 c4 08          	add    $0x8,%rsp
    6554:	b8 01 00 00 00       	mov    $0x1,%eax
    6559:	5b                   	pop    %rbx
    655a:	5d                   	pop    %rbp
    655b:	c3                   	ret    
    655c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000006560 <sgx_register_aex_handler>:
    6560:	f3 0f 1e fa          	endbr64 
    6564:	48 85 ff             	test   %rdi,%rdi
    6567:	0f 84 bb 00 00 00    	je     6628 <sgx_register_aex_handler+0xc8>
    656d:	41 55                	push   %r13
    656f:	b8 02 00 00 00       	mov    $0x2,%eax
    6574:	41 54                	push   %r12
    6576:	49 89 f4             	mov    %rsi,%r12
    6579:	55                   	push   %rbp
    657a:	53                   	push   %rbx
    657b:	48 83 ec 08          	sub    $0x8,%rsp
    657f:	48 85 f6             	test   %rsi,%rsi
    6582:	74 2a                	je     65ae <sgx_register_aex_handler+0x4e>
    6584:	48 89 fb             	mov    %rdi,%rbx
    6587:	48 89 d5             	mov    %rdx,%rbp
    658a:	e8 f1 11 00 00       	call   7780 <get_ssa_aexnotify>
    658f:	85 c0                	test   %eax,%eax
    6591:	75 2d                	jne    65c0 <sgx_register_aex_handler+0x60>
    6593:	e8 ab bb 00 00       	call   12143 <get_thread_data>
    6598:	66 48 0f 6e c5       	movq   %rbp,%xmm0
    659d:	0f 16 40 48          	movhps 0x48(%rax),%xmm0
    65a1:	4c 89 23             	mov    %r12,(%rbx)
    65a4:	0f 11 43 08          	movups %xmm0,0x8(%rbx)
    65a8:	48 89 58 48          	mov    %rbx,0x48(%rax)
    65ac:	31 c0                	xor    %eax,%eax
    65ae:	48 83 c4 08          	add    $0x8,%rsp
    65b2:	5b                   	pop    %rbx
    65b3:	5d                   	pop    %rbp
    65b4:	41 5c                	pop    %r12
    65b6:	41 5d                	pop    %r13
    65b8:	c3                   	ret    
    65b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    65c0:	e8 7e bb 00 00       	call   12143 <get_thread_data>
    65c5:	49 89 c5             	mov    %rax,%r13
    65c8:	48 85 c0             	test   %rax,%rax
    65cb:	74 16                	je     65e3 <sgx_register_aex_handler+0x83>
    65cd:	e8 7e ae 00 00       	call   11450 <sgx_self_report>
    65d2:	f6 40 31 04          	testb  $0x4,0x31(%rax)
    65d6:	74 0b                	je     65e3 <sgx_register_aex_handler+0x83>
    65d8:	49 8b 45 20          	mov    0x20(%r13),%rax
    65dc:	80 a0 a7 00 00 00 fe 	andb   $0xfe,0xa7(%rax)
    65e3:	e8 5b bb 00 00       	call   12143 <get_thread_data>
    65e8:	66 48 0f 6e c5       	movq   %rbp,%xmm0
    65ed:	0f 16 40 48          	movhps 0x48(%rax),%xmm0
    65f1:	4c 89 23             	mov    %r12,(%rbx)
    65f4:	0f 11 43 08          	movups %xmm0,0x8(%rbx)
    65f8:	48 89 58 48          	mov    %rbx,0x48(%rax)
    65fc:	e8 42 bb 00 00       	call   12143 <get_thread_data>
    6601:	48 89 c3             	mov    %rax,%rbx
    6604:	48 85 c0             	test   %rax,%rax
    6607:	74 a3                	je     65ac <sgx_register_aex_handler+0x4c>
    6609:	e8 42 ae 00 00       	call   11450 <sgx_self_report>
    660e:	f6 40 31 04          	testb  $0x4,0x31(%rax)
    6612:	74 98                	je     65ac <sgx_register_aex_handler+0x4c>
    6614:	48 8b 43 20          	mov    0x20(%rbx),%rax
    6618:	80 88 a7 00 00 00 01 	orb    $0x1,0xa7(%rax)
    661f:	31 c0                	xor    %eax,%eax
    6621:	eb 8b                	jmp    65ae <sgx_register_aex_handler+0x4e>
    6623:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6628:	b8 02 00 00 00       	mov    $0x2,%eax
    662d:	c3                   	ret    
    662e:	66 90                	xchg   %ax,%ax

0000000000006630 <sgx_unregister_aex_handler>:
    6630:	f3 0f 1e fa          	endbr64 
    6634:	41 54                	push   %r12
    6636:	55                   	push   %rbp
    6637:	53                   	push   %rbx
    6638:	48 85 ff             	test   %rdi,%rdi
    663b:	0f 84 e7 00 00 00    	je     6728 <sgx_unregister_aex_handler+0xf8>
    6641:	48 89 fd             	mov    %rdi,%rbp
    6644:	e8 37 11 00 00       	call   7780 <get_ssa_aexnotify>
    6649:	89 c3                	mov    %eax,%ebx
    664b:	85 c0                	test   %eax,%eax
    664d:	75 61                	jne    66b0 <sgx_unregister_aex_handler+0x80>
    664f:	e8 ef ba 00 00       	call   12143 <get_thread_data>
    6654:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    665a:	48 8b 50 48          	mov    0x48(%rax),%rdx
    665e:	48 85 d2             	test   %rdx,%rdx
    6661:	74 3d                	je     66a0 <sgx_unregister_aex_handler+0x70>
    6663:	31 f6                	xor    %esi,%esi
    6665:	eb 1c                	jmp    6683 <sgx_unregister_aex_handler+0x53>
    6667:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    666e:	00 00 
    6670:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
    6674:	48 89 d6             	mov    %rdx,%rsi
    6677:	48 85 c9             	test   %rcx,%rcx
    667a:	0f 84 98 00 00 00    	je     6718 <sgx_unregister_aex_handler+0xe8>
    6680:	48 89 ca             	mov    %rcx,%rdx
    6683:	48 39 2a             	cmp    %rbp,(%rdx)
    6686:	75 e8                	jne    6670 <sgx_unregister_aex_handler+0x40>
    6688:	48 8b 52 10          	mov    0x10(%rdx),%rdx
    668c:	48 85 f6             	test   %rsi,%rsi
    668f:	0f 84 ab 00 00 00    	je     6740 <sgx_unregister_aex_handler+0x110>
    6695:	48 89 56 10          	mov    %rdx,0x10(%rsi)
    6699:	45 31 e4             	xor    %r12d,%r12d
    669c:	85 db                	test   %ebx,%ebx
    669e:	75 48                	jne    66e8 <sgx_unregister_aex_handler+0xb8>
    66a0:	44 89 e0             	mov    %r12d,%eax
    66a3:	5b                   	pop    %rbx
    66a4:	5d                   	pop    %rbp
    66a5:	41 5c                	pop    %r12
    66a7:	c3                   	ret    
    66a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    66af:	00 
    66b0:	e8 8e ba 00 00       	call   12143 <get_thread_data>
    66b5:	49 89 c4             	mov    %rax,%r12
    66b8:	48 85 c0             	test   %rax,%rax
    66bb:	74 17                	je     66d4 <sgx_unregister_aex_handler+0xa4>
    66bd:	e8 8e ad 00 00       	call   11450 <sgx_self_report>
    66c2:	f6 40 31 04          	testb  $0x4,0x31(%rax)
    66c6:	74 0c                	je     66d4 <sgx_unregister_aex_handler+0xa4>
    66c8:	49 8b 44 24 20       	mov    0x20(%r12),%rax
    66cd:	80 a0 a7 00 00 00 fe 	andb   $0xfe,0xa7(%rax)
    66d4:	e8 6a ba 00 00       	call   12143 <get_thread_data>
    66d9:	48 8b 50 48          	mov    0x48(%rax),%rdx
    66dd:	48 85 d2             	test   %rdx,%rdx
    66e0:	75 81                	jne    6663 <sgx_unregister_aex_handler+0x33>
    66e2:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    66e8:	e8 56 ba 00 00       	call   12143 <get_thread_data>
    66ed:	48 89 c3             	mov    %rax,%rbx
    66f0:	48 85 c0             	test   %rax,%rax
    66f3:	74 ab                	je     66a0 <sgx_unregister_aex_handler+0x70>
    66f5:	e8 56 ad 00 00       	call   11450 <sgx_self_report>
    66fa:	f6 40 31 04          	testb  $0x4,0x31(%rax)
    66fe:	74 a0                	je     66a0 <sgx_unregister_aex_handler+0x70>
    6700:	48 8b 43 20          	mov    0x20(%rbx),%rax
    6704:	80 88 a7 00 00 00 01 	orb    $0x1,0xa7(%rax)
    670b:	44 89 e0             	mov    %r12d,%eax
    670e:	5b                   	pop    %rbx
    670f:	5d                   	pop    %rbp
    6710:	41 5c                	pop    %r12
    6712:	c3                   	ret    
    6713:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6718:	41 bc 02 00 00 00    	mov    $0x2,%r12d
    671e:	e9 79 ff ff ff       	jmp    669c <sgx_unregister_aex_handler+0x6c>
    6723:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6728:	41 bc 02 00 00 00    	mov    $0x2,%r12d
    672e:	5b                   	pop    %rbx
    672f:	5d                   	pop    %rbp
    6730:	44 89 e0             	mov    %r12d,%eax
    6733:	41 5c                	pop    %r12
    6735:	c3                   	ret    
    6736:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    673d:	00 00 00 
    6740:	48 89 50 48          	mov    %rdx,0x48(%rax)
    6744:	e9 50 ff ff ff       	jmp    6699 <sgx_unregister_aex_handler+0x69>
    6749:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000006750 <sgx_apply_mitigations>:
    6750:	f3 0f 1e fa          	endbr64 
    6754:	55                   	push   %rbp
    6755:	48 89 fd             	mov    %rdi,%rbp
    6758:	53                   	push   %rbx
    6759:	48 83 ec 08          	sub    $0x8,%rsp
    675d:	e8 e1 b9 00 00       	call   12143 <get_thread_data>
    6762:	48 8b 58 48          	mov    0x48(%rax),%rbx
    6766:	48 85 db             	test   %rbx,%rbx
    6769:	74 17                	je     6782 <sgx_apply_mitigations+0x32>
    676b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6770:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    6774:	48 89 ef             	mov    %rbp,%rdi
    6777:	ff 13                	call   *(%rbx)
    6779:	48 8b 5b 10          	mov    0x10(%rbx),%rbx
    677d:	48 85 db             	test   %rbx,%rbx
    6780:	75 ee                	jne    6770 <sgx_apply_mitigations+0x20>
    6782:	48 83 c4 08          	add    $0x8,%rsp
    6786:	31 c0                	xor    %eax,%eax
    6788:	5b                   	pop    %rbx
    6789:	5d                   	pop    %rbp
    678a:	c3                   	ret    
    678b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000006790 <_pthread_thread_run>:
    6790:	f3 0f 1e fa          	endbr64 
    6794:	31 c0                	xor    %eax,%eax
    6796:	c3                   	ret    
    6797:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    679e:	00 00 

00000000000067a0 <_ZL11do_save_tcsPv>:
    67a0:	55                   	push   %rbp
    67a1:	53                   	push   %rbx
    67a2:	48 89 fb             	mov    %rdi,%rbx
    67a5:	48 83 ec 18          	sub    $0x18,%rsp
    67a9:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    67b0:	00 00 
    67b2:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    67b7:	31 c0                	xor    %eax,%eax
    67b9:	48 83 3d af 39 01 00 	cmpq   $0x0,0x139af(%rip)        # 1a170 <_ZL12g_tcs_cookie>
    67c0:	00 
    67c1:	74 4d                	je     6810 <_ZL11do_save_tcsPv+0x70>
    67c3:	bf 10 00 00 00       	mov    $0x10,%edi
    67c8:	e8 63 69 00 00       	call   d130 <dlmalloc>
    67cd:	48 85 c0             	test   %rax,%rax
    67d0:	74 68                	je     683a <_ZL11do_save_tcsPv+0x9a>
    67d2:	48 8b 15 9f 39 01 00 	mov    0x1399f(%rip),%rdx        # 1a178 <_ZL10g_tcs_node>
    67d9:	48 33 1d 90 39 01 00 	xor    0x13990(%rip),%rbx        # 1a170 <_ZL12g_tcs_cookie>
    67e0:	48 89 05 91 39 01 00 	mov    %rax,0x13991(%rip)        # 1a178 <_ZL10g_tcs_node>
    67e7:	48 89 18             	mov    %rbx,(%rax)
    67ea:	48 89 50 08          	mov    %rdx,0x8(%rax)
    67ee:	31 c0                	xor    %eax,%eax
    67f0:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    67f5:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    67fc:	00 00 
    67fe:	75 62                	jne    6862 <_ZL11do_save_tcsPv+0xc2>
    6800:	48 83 c4 18          	add    $0x18,%rsp
    6804:	5b                   	pop    %rbx
    6805:	5d                   	pop    %rbp
    6806:	c3                   	ret    
    6807:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    680e:	00 00 
    6810:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    6817:	00 
    6818:	48 89 e5             	mov    %rsp,%rbp
    681b:	eb 0c                	jmp    6829 <_ZL11do_save_tcsPv+0x89>
    681d:	0f 1f 00             	nopl   (%rax)
    6820:	48 8b 04 24          	mov    (%rsp),%rax
    6824:	48 85 c0             	test   %rax,%rax
    6827:	75 1f                	jne    6848 <_ZL11do_save_tcsPv+0xa8>
    6829:	be 08 00 00 00       	mov    $0x8,%esi
    682e:	48 89 ef             	mov    %rbp,%rdi
    6831:	e8 2a f5 ff ff       	call   5d60 <sgx_read_rand>
    6836:	85 c0                	test   %eax,%eax
    6838:	74 e6                	je     6820 <_ZL11do_save_tcsPv+0x80>
    683a:	b8 01 00 00 00       	mov    $0x1,%eax
    683f:	eb af                	jmp    67f0 <_ZL11do_save_tcsPv+0x50>
    6841:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6848:	48 83 3d 20 39 01 00 	cmpq   $0x0,0x13920(%rip)        # 1a170 <_ZL12g_tcs_cookie>
    684f:	00 
    6850:	0f 85 6d ff ff ff    	jne    67c3 <_ZL11do_save_tcsPv+0x23>
    6856:	48 89 05 13 39 01 00 	mov    %rax,0x13913(%rip)        # 1a170 <_ZL12g_tcs_cookie>
    685d:	e9 61 ff ff ff       	jmp    67c3 <_ZL11do_save_tcsPv+0x23>
    6862:	e8 89 a1 00 00       	call   109f0 <__stack_chk_fail>
    6867:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    686e:	00 00 

0000000000006870 <_ZL18add_static_threadsPVK9_layout_tS1_m>:
    6870:	48 39 f7             	cmp    %rsi,%rdi
    6873:	0f 83 cf 00 00 00    	jae    6948 <_ZL18add_static_threadsPVK9_layout_tS1_m+0xd8>
    6879:	41 56                	push   %r14
    687b:	41 55                	push   %r13
    687d:	49 89 f5             	mov    %rsi,%r13
    6880:	41 54                	push   %r12
    6882:	49 89 d4             	mov    %rdx,%r12
    6885:	55                   	push   %rbp
    6886:	53                   	push   %rbx
    6887:	48 89 fb             	mov    %rdi,%rbx
    688a:	eb 0d                	jmp    6899 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x29>
    688c:	0f 1f 40 00          	nopl   0x0(%rax)
    6890:	48 83 c3 20          	add    $0x20,%rbx
    6894:	4c 39 eb             	cmp    %r13,%rbx
    6897:	73 77                	jae    6910 <_ZL18add_static_threadsPVK9_layout_tS1_m+0xa0>
    6899:	0f b7 03             	movzwl (%rbx),%eax
    689c:	f6 c4 10             	test   $0x10,%ah
    689f:	75 13                	jne    68b4 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x44>
    68a1:	48 8b 43 18          	mov    0x18(%rbx),%rax
    68a5:	f6 c4 01             	test   $0x1,%ah
    68a8:	74 0a                	je     68b4 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x44>
    68aa:	0f b7 43 02          	movzwl 0x2(%rbx),%eax
    68ae:	66 83 f8 03          	cmp    $0x3,%ax
    68b2:	74 6c                	je     6920 <_ZL18add_static_threadsPVK9_layout_tS1_m+0xb0>
    68b4:	0f b7 03             	movzwl (%rbx),%eax
    68b7:	f6 c4 10             	test   $0x10,%ah
    68ba:	74 d4                	je     6890 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x20>
    68bc:	8b 43 04             	mov    0x4(%rbx),%eax
    68bf:	85 c0                	test   %eax,%eax
    68c1:	74 cd                	je     6890 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x20>
    68c3:	31 ed                	xor    %ebp,%ebp
    68c5:	45 31 f6             	xor    %r14d,%r14d
    68c8:	eb 10                	jmp    68da <_ZL18add_static_threadsPVK9_layout_tS1_m+0x6a>
    68ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    68d0:	8b 43 04             	mov    0x4(%rbx),%eax
    68d3:	83 c5 01             	add    $0x1,%ebp
    68d6:	39 c5                	cmp    %eax,%ebp
    68d8:	73 b6                	jae    6890 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x20>
    68da:	48 8b 43 08          	mov    0x8(%rbx),%rax
    68de:	0f b7 7b 02          	movzwl 0x2(%rbx),%edi
    68e2:	48 89 de             	mov    %rbx,%rsi
    68e5:	f7 df                	neg    %edi
    68e7:	49 01 c6             	add    %rax,%r14
    68ea:	48 63 ff             	movslq %edi,%rdi
    68ed:	4c 89 f2             	mov    %r14,%rdx
    68f0:	48 c1 e7 05          	shl    $0x5,%rdi
    68f4:	48 01 df             	add    %rbx,%rdi
    68f7:	e8 74 ff ff ff       	call   6870 <_ZL18add_static_threadsPVK9_layout_tS1_m>
    68fc:	85 c0                	test   %eax,%eax
    68fe:	74 d0                	je     68d0 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x60>
    6900:	5b                   	pop    %rbx
    6901:	5d                   	pop    %rbp
    6902:	41 5c                	pop    %r12
    6904:	41 5d                	pop    %r13
    6906:	41 5e                	pop    %r14
    6908:	c3                   	ret    
    6909:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6910:	5b                   	pop    %rbx
    6911:	31 c0                	xor    %eax,%eax
    6913:	5d                   	pop    %rbp
    6914:	41 5c                	pop    %r12
    6916:	41 5d                	pop    %r13
    6918:	41 5e                	pop    %r14
    691a:	c3                   	ret    
    691b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6920:	48 8b 6b 08          	mov    0x8(%rbx),%rbp
    6924:	e8 cf b7 00 00       	call   120f8 <get_enclave_base>
    6929:	4c 01 e5             	add    %r12,%rbp
    692c:	48 8d 3c 28          	lea    (%rax,%rbp,1),%rdi
    6930:	e8 6b fe ff ff       	call   67a0 <_ZL11do_save_tcsPv>
    6935:	85 c0                	test   %eax,%eax
    6937:	0f 84 53 ff ff ff    	je     6890 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x20>
    693d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    6942:	eb bc                	jmp    6900 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x90>
    6944:	0f 1f 40 00          	nopl   0x0(%rax)
    6948:	31 c0                	xor    %eax,%eax
    694a:	c3                   	ret    
    694b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000006950 <_ZL10trts_ecalljPv>:
    6950:	f3 0f 1e fa          	endbr64 
    6954:	41 55                	push   %r13
    6956:	41 54                	push   %r12
    6958:	55                   	push   %rbp
    6959:	48 89 f5             	mov    %rsi,%rbp
    695c:	53                   	push   %rbx
    695d:	89 fb                	mov    %edi,%ebx
    695f:	48 83 ec 08          	sub    $0x8,%rsp
    6963:	0f b6 05 b6 18 01 00 	movzbl 0x118b6(%rip),%eax        # 18220 <_ZL16g_is_first_ecall>
    696a:	84 c0                	test   %al,%al
    696c:	0f 85 b6 00 00 00    	jne    6a28 <_ZL10trts_ecalljPv+0xd8>
    6972:	83 fb fa             	cmp    $0xfffffffa,%ebx
    6975:	0f 84 8d 00 00 00    	je     6a08 <_ZL10trts_ecalljPv+0xb8>
    697b:	4c 8d 25 3e 14 01 00 	lea    0x1143e(%rip),%r12        # 17dc0 <g_ecall_table>
    6982:	49 3b 1c 24          	cmp    (%r12),%rbx
    6986:	73 68                	jae    69f0 <_ZL10trts_ecalljPv+0xa0>
    6988:	e8 b6 b7 00 00       	call   12143 <get_thread_data>
    698d:	0f ae e8             	lfence 
    6990:	48 8b 50 08          	mov    0x8(%rax),%rdx
    6994:	48 3b 50 10          	cmp    0x10(%rax),%rdx
    6998:	0f 84 b2 00 00 00    	je     6a50 <_ZL10trts_ecalljPv+0x100>
    699e:	48 81 7a 20 44 49 43 	cmpq   $0x4f434944,0x20(%rdx)
    69a5:	4f 
    69a6:	0f 85 5b 01 00 00    	jne    6b07 <_ZL10trts_ecalljPv+0x1b7>
    69ac:	48 8d 05 cd c6 00 00 	lea    0xc6cd(%rip),%rax        # 13080 <g_dyn_entry_table>
    69b3:	48 8b 52 28          	mov    0x28(%rdx),%rdx
    69b7:	48 3b 10             	cmp    (%rax),%rdx
    69ba:	73 34                	jae    69f0 <_ZL10trts_ecalljPv+0xa0>
    69bc:	49 0f af 14 24       	imul   (%r12),%rdx
    69c1:	48 01 d8             	add    %rbx,%rax
    69c4:	80 7c 02 08 00       	cmpb   $0x0,0x8(%rdx,%rax,1)
    69c9:	74 6c                	je     6a37 <_ZL10trts_ecalljPv+0xe7>
    69cb:	48 c1 e3 04          	shl    $0x4,%rbx
    69cf:	31 f6                	xor    %esi,%esi
    69d1:	49 8b 5c 1c 08       	mov    0x8(%r12,%rbx,1),%rbx
    69d6:	48 89 df             	mov    %rbx,%rdi
    69d9:	e8 82 f1 ff ff       	call   5b60 <sgx_is_within_enclave>
    69de:	85 c0                	test   %eax,%eax
    69e0:	0f 84 8a 00 00 00    	je     6a70 <_ZL10trts_ecalljPv+0x120>
    69e6:	48 89 d8             	mov    %rbx,%rax
    69e9:	eb 24                	jmp    6a0f <_ZL10trts_ecalljPv+0xbf>
    69eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    69f0:	41 bc 01 10 00 00    	mov    $0x1001,%r12d
    69f6:	48 83 c4 08          	add    $0x8,%rsp
    69fa:	44 89 e0             	mov    %r12d,%eax
    69fd:	5b                   	pop    %rbx
    69fe:	5d                   	pop    %rbp
    69ff:	41 5c                	pop    %r12
    6a01:	41 5d                	pop    %r13
    6a03:	c3                   	ret    
    6a04:	0f 1f 40 00          	nopl   0x0(%rax)
    6a08:	48 8d 05 81 fd ff ff 	lea    -0x27f(%rip),%rax        # 6790 <_pthread_thread_run>
    6a0f:	0f ae e8             	lfence 
    6a12:	48 83 c4 08          	add    $0x8,%rsp
    6a16:	48 89 ef             	mov    %rbp,%rdi
    6a19:	5b                   	pop    %rbx
    6a1a:	5d                   	pop    %rbp
    6a1b:	41 5c                	pop    %r12
    6a1d:	41 5d                	pop    %r13
    6a1f:	ff e0                	jmp    *%rax
    6a21:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6a28:	e8 16 b7 00 00       	call   12143 <get_thread_data>
    6a2d:	48 8b 48 10          	mov    0x10(%rax),%rcx
    6a31:	48 39 48 08          	cmp    %rcx,0x8(%rax)
    6a35:	74 49                	je     6a80 <_ZL10trts_ecalljPv+0x130>
    6a37:	48 83 c4 08          	add    $0x8,%rsp
    6a3b:	41 bc 07 10 00 00    	mov    $0x1007,%r12d
    6a41:	5b                   	pop    %rbx
    6a42:	44 89 e0             	mov    %r12d,%eax
    6a45:	5d                   	pop    %rbp
    6a46:	41 5c                	pop    %r12
    6a48:	41 5d                	pop    %r13
    6a4a:	c3                   	ret    
    6a4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6a50:	48 89 d8             	mov    %rbx,%rax
    6a53:	48 c1 e0 04          	shl    $0x4,%rax
    6a57:	41 80 7c 04 10 00    	cmpb   $0x0,0x10(%r12,%rax,1)
    6a5d:	0f 84 68 ff ff ff    	je     69cb <_ZL10trts_ecalljPv+0x7b>
    6a63:	eb d2                	jmp    6a37 <_ZL10trts_ecalljPv+0xe7>
    6a65:	4c 89 ef             	mov    %r13,%rdi
    6a68:	e8 93 5d 00 00       	call   c800 <sgx_spin_unlock>
    6a6d:	0f 1f 00             	nopl   (%rax)
    6a70:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    6a76:	e9 7b ff ff ff       	jmp    69f6 <_ZL10trts_ecalljPv+0xa6>
    6a7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6a80:	4c 8d 2d e5 36 01 00 	lea    0x136e5(%rip),%r13        # 1a16c <_ZL10g_ife_lock>
    6a87:	4c 89 ef             	mov    %r13,%rdi
    6a8a:	e8 e1 5c 00 00       	call   c770 <sgx_spin_lock>
    6a8f:	0f b6 05 8a 17 01 00 	movzbl 0x1178a(%rip),%eax        # 18220 <_ZL16g_is_first_ecall>
    6a96:	84 c0                	test   %al,%al
    6a98:	74 53                	je     6aed <_ZL10trts_ecalljPv+0x19d>
    6a9a:	48 8d 05 7b 13 01 00 	lea    0x1137b(%rip),%rax        # 17e1c <EDMM_supported>
    6aa1:	8b 00                	mov    (%rax),%eax
    6aa3:	85 c0                	test   %eax,%eax
    6aa5:	74 3a                	je     6ae1 <_ZL10trts_ecalljPv+0x191>
    6aa7:	48 8d 05 52 c7 00 00 	lea    0xc752(%rip),%rax        # 13200 <g_global_data>
    6aae:	31 d2                	xor    %edx,%edx
    6ab0:	8b b0 58 01 00 00    	mov    0x158(%rax),%esi
    6ab6:	48 8d b8 60 01 00 00 	lea    0x160(%rax),%rdi
    6abd:	48 c1 e6 05          	shl    $0x5,%rsi
    6ac1:	48 01 fe             	add    %rdi,%rsi
    6ac4:	e8 a7 fd ff ff       	call   6870 <_ZL18add_static_threadsPVK9_layout_tS1_m>
    6ac9:	85 c0                	test   %eax,%eax
    6acb:	75 98                	jne    6a65 <_ZL10trts_ecalljPv+0x115>
    6acd:	e8 26 b6 00 00       	call   120f8 <get_enclave_base>
    6ad2:	48 89 c7             	mov    %rax,%rdi
    6ad5:	e8 a6 1d 00 00       	call   8880 <change_protection>
    6ada:	41 89 c4             	mov    %eax,%r12d
    6add:	85 c0                	test   %eax,%eax
    6adf:	75 19                	jne    6afa <_ZL10trts_ecalljPv+0x1aa>
    6ae1:	e8 ca 21 00 00       	call   8cb0 <init_global_object>
    6ae6:	c6 05 33 17 01 00 00 	movb   $0x0,0x11733(%rip)        # 18220 <_ZL16g_is_first_ecall>
    6aed:	4c 89 ef             	mov    %r13,%rdi
    6af0:	e8 0b 5d 00 00       	call   c800 <sgx_spin_unlock>
    6af5:	e9 78 fe ff ff       	jmp    6972 <_ZL10trts_ecalljPv+0x22>
    6afa:	4c 89 ef             	mov    %r13,%rdi
    6afd:	e8 fe 5c 00 00       	call   c800 <sgx_spin_unlock>
    6b02:	e9 ef fe ff ff       	jmp    69f6 <_ZL10trts_ecalljPv+0xa6>
    6b07:	e8 2b ba 00 00       	call   12537 <abort>
    6b0c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000006b10 <_Z30_random_stack_noinline_wrapperI9_status_tJjPvEJRiRS1_EET_PFS4_DpT0_EDpOT1_.constprop.0.isra.0>:
    6b10:	e9 3b fe ff ff       	jmp    6950 <_ZL10trts_ecalljPv>
    6b15:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6b1c:	00 00 00 
    6b1f:	90                   	nop

0000000000006b20 <_Z16_pthread_enabledv>:
    6b20:	f3 0f 1e fa          	endbr64 
    6b24:	31 c0                	xor    %eax,%eax
    6b26:	c3                   	ret    
    6b27:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    6b2e:	00 00 

0000000000006b30 <_Z24_pthread_tls_store_state9_status_t>:
    6b30:	f3 0f 1e fa          	endbr64 
    6b34:	c3                   	ret    
    6b35:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6b3c:	00 00 00 
    6b3f:	90                   	nop

0000000000006b40 <_Z22_pthread_tls_get_statev>:
    6b40:	f3 0f 1e fa          	endbr64 
    6b44:	31 c0                	xor    %eax,%eax
    6b46:	c3                   	ret    
    6b47:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    6b4e:	00 00 

0000000000006b50 <_Z26_pthread_tls_store_contextPv>:
    6b50:	f3 0f 1e fa          	endbr64 
    6b54:	c3                   	ret    
    6b55:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6b5c:	00 00 00 
    6b5f:	90                   	nop

0000000000006b60 <_Z20_pthread_wakeup_joinPv>:
    6b60:	f3 0f 1e fa          	endbr64 
    6b64:	c3                   	ret    
    6b65:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6b6c:	00 00 00 
    6b6f:	90                   	nop

0000000000006b70 <_Z24_pthread_tls_destructorsv>:
    6b70:	f3 0f 1e fa          	endbr64 
    6b74:	c3                   	ret    
    6b75:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6b7c:	00 00 00 
    6b7f:	90                   	nop

0000000000006b80 <tc_set_idle>:
    6b80:	f3 0f 1e fa          	endbr64 
    6b84:	c3                   	ret    
    6b85:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6b8c:	00 00 00 
    6b8f:	90                   	nop

0000000000006b90 <do_init_thread>:
    6b90:	f3 0f 1e fa          	endbr64 
    6b94:	41 57                	push   %r15
    6b96:	66 48 0f 6e d7       	movq   %rdi,%xmm2
    6b9b:	ba c0 00 00 00       	mov    $0xc0,%edx
    6ba0:	41 56                	push   %r14
    6ba2:	66 0f 6c d2          	punpcklqdq %xmm2,%xmm2
    6ba6:	41 55                	push   %r13
    6ba8:	41 54                	push   %r12
    6baa:	41 89 f4             	mov    %esi,%r12d
    6bad:	55                   	push   %rbp
    6bae:	48 89 fd             	mov    %rdi,%rbp
    6bb1:	53                   	push   %rbx
    6bb2:	48 83 ec 38          	sub    $0x38,%rsp
    6bb6:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    6bbd:	00 00 
    6bbf:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    6bc4:	48 8d 05 35 c6 00 00 	lea    0xc635(%rip),%rax        # 13200 <g_global_data>
    6bcb:	0f 29 14 24          	movaps %xmm2,(%rsp)
    6bcf:	48 8b 58 50          	mov    0x50(%rax),%rbx
    6bd3:	48 8d 70 50          	lea    0x50(%rax),%rsi
    6bd7:	48 01 fb             	add    %rdi,%rbx
    6bda:	48 89 df             	mov    %rbx,%rdi
    6bdd:	4c 8b 7b 28          	mov    0x28(%rbx),%r15
    6be1:	4c 8b 73 30          	mov    0x30(%rbx),%r14
    6be5:	4c 8b ab b0 00 00 00 	mov    0xb0(%rbx),%r13
    6bec:	e8 df 9a 00 00       	call   106d0 <memcpy>
    6bf1:	48 8d 85 00 fc ff ff 	lea    -0x400(%rbp),%rax
    6bf8:	f3 0f 6f 1b          	movdqu (%rbx),%xmm3
    6bfc:	f3 0f 6f 6b 10       	movdqu 0x10(%rbx),%xmm5
    6c01:	66 48 0f 6e c0       	movq   %rax,%xmm0
    6c06:	48 8b 43 18          	mov    0x18(%rbx),%rax
    6c0a:	f3 0f 6f 73 68       	movdqu 0x68(%rbx),%xmm6
    6c0f:	66 48 0f 6e cd       	movq   %rbp,%xmm1
    6c14:	66 0f 6f 14 24       	movdqa (%rsp),%xmm2
    6c19:	66 48 0f 6e e5       	movq   %rbp,%xmm4
    6c1e:	66 0f 6c c8          	punpcklqdq %xmm0,%xmm1
    6c22:	48 01 6b 20          	add    %rbp,0x20(%rbx)
    6c26:	48 01 e8             	add    %rbp,%rax
    6c29:	66 0f 6c c4          	punpcklqdq %xmm4,%xmm0
    6c2d:	66 0f d4 cb          	paddq  %xmm3,%xmm1
    6c31:	48 01 6b 58          	add    %rbp,0x58(%rbx)
    6c35:	48 89 83 b0 00 00 00 	mov    %rax,0xb0(%rbx)
    6c3c:	48 8d 05 b5 11 01 00 	lea    0x111b5(%rip),%rax        # 17df8 <__intel_security_cookie>
    6c43:	66 0f d4 c5          	paddq  %xmm5,%xmm0
    6c47:	66 0f d4 d6          	paddq  %xmm6,%xmm2
    6c4b:	4c 89 7b 28          	mov    %r15,0x28(%rbx)
    6c4f:	48 8b 00             	mov    (%rax),%rax
    6c52:	4c 89 73 30          	mov    %r14,0x30(%rbx)
    6c56:	0f 11 53 68          	movups %xmm2,0x68(%rbx)
    6c5a:	0f 11 0b             	movups %xmm1,(%rbx)
    6c5d:	0f 11 43 10          	movups %xmm0,0x10(%rbx)
    6c61:	48 89 85 08 fc fe ff 	mov    %rax,-0x103f8(%rbp)
    6c68:	48 8d 05 ad 11 01 00 	lea    0x111ad(%rip),%rax        # 17e1c <EDMM_supported>
    6c6f:	8b 00                	mov    (%rax),%eax
    6c71:	85 c0                	test   %eax,%eax
    6c73:	48 8d 05 8a 11 01 00 	lea    0x1118a(%rip),%rax        # 17e04 <g_aexnotify_supported>
    6c7a:	0f 85 f0 00 00 00    	jne    6d70 <do_init_thread+0x1e0>
    6c80:	83 38 01             	cmpl   $0x1,(%rax)
    6c83:	0f 84 17 01 00 00    	je     6da0 <do_init_thread+0x210>
    6c89:	4d 85 ed             	test   %r13,%r13
    6c8c:	0f 85 c8 00 00 00    	jne    6d5a <do_init_thread+0x1ca>
    6c92:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6c98:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
    6c9f:	00 00 
    6ca1:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    6ca8:	00 00 
    6caa:	e8 49 b4 00 00       	call   120f8 <get_enclave_base>
    6caf:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
    6cb4:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
    6cb9:	48 89 c7             	mov    %rax,%rdi
    6cbc:	e8 3f 19 00 00       	call   8600 <elf_tls_info>
    6cc1:	89 c2                	mov    %eax,%edx
    6cc3:	b8 01 00 00 00       	mov    $0x1,%eax
    6cc8:	85 d2                	test   %edx,%edx
    6cca:	75 0a                	jne    6cd6 <do_init_thread+0x146>
    6ccc:	48 83 7c 24 18 00    	cmpq   $0x0,0x18(%rsp)
    6cd2:	75 2c                	jne    6d00 <do_init_thread+0x170>
    6cd4:	31 c0                	xor    %eax,%eax
    6cd6:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    6cdb:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    6ce2:	00 00 
    6ce4:	0f 85 00 01 00 00    	jne    6dea <do_init_thread+0x25a>
    6cea:	48 83 c4 38          	add    $0x38,%rsp
    6cee:	5b                   	pop    %rbx
    6cef:	5d                   	pop    %rbp
    6cf0:	41 5c                	pop    %r12
    6cf2:	41 5d                	pop    %r13
    6cf4:	41 5e                	pop    %r14
    6cf6:	41 5f                	pop    %r15
    6cf8:	c3                   	ret    
    6cf9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6d00:	48 8b 03             	mov    (%rbx),%rax
    6d03:	48 8b 7b 68          	mov    0x68(%rbx),%rdi
    6d07:	31 f6                	xor    %esi,%esi
    6d09:	48 8d 90 ff 0f 00 00 	lea    0xfff(%rax),%rdx
    6d10:	48 29 fa             	sub    %rdi,%rdx
    6d13:	48 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%rdi
    6d1a:	48 81 e2 00 f0 ff ff 	and    $0xfffffffffffff000,%rdx
    6d21:	e8 ea 9b 00 00       	call   10910 <memset>
    6d26:	48 8b 7b 68          	mov    0x68(%rbx),%rdi
    6d2a:	48 8b 03             	mov    (%rbx),%rax
    6d2d:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
    6d32:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    6d37:	48 29 f8             	sub    %rdi,%rax
    6d3a:	48 39 d0             	cmp    %rdx,%rax
    6d3d:	72 95                	jb     6cd4 <do_init_thread+0x144>
    6d3f:	e8 8c 99 00 00       	call   106d0 <memcpy>
    6d44:	eb 8e                	jmp    6cd4 <do_init_thread+0x144>
    6d46:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6d4d:	00 00 00 
    6d50:	83 f8 01             	cmp    $0x1,%eax
    6d53:	74 7b                	je     6dd0 <do_init_thread+0x240>
    6d55:	4d 85 ed             	test   %r13,%r13
    6d58:	74 5e                	je     6db8 <do_init_thread+0x228>
    6d5a:	4c 89 ab b0 00 00 00 	mov    %r13,0xb0(%rbx)
    6d61:	e9 32 ff ff ff       	jmp    6c98 <do_init_thread+0x108>
    6d66:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6d6d:	00 00 00 
    6d70:	8b 00                	mov    (%rax),%eax
    6d72:	45 84 e4             	test   %r12b,%r12b
    6d75:	74 d9                	je     6d50 <do_init_thread+0x1c0>
    6d77:	48 c7 43 30 01 00 00 	movq   $0x1,0x30(%rbx)
    6d7e:	00 
    6d7f:	83 f8 01             	cmp    $0x1,%eax
    6d82:	74 5c                	je     6de0 <do_init_thread+0x250>
    6d84:	4d 85 ed             	test   %r13,%r13
    6d87:	75 d1                	jne    6d5a <do_init_thread+0x1ca>
    6d89:	e8 52 f5 ff ff       	call   62e0 <get_dynamic_stack_max_page>
    6d8e:	89 c0                	mov    %eax,%eax
    6d90:	48 c1 e0 0c          	shl    $0xc,%rax
    6d94:	48 01 83 b0 00 00 00 	add    %rax,0xb0(%rbx)
    6d9b:	e9 f8 fe ff ff       	jmp    6c98 <do_init_thread+0x108>
    6da0:	48 c7 43 50 01 00 00 	movq   $0x1,0x50(%rbx)
    6da7:	00 
    6da8:	4d 85 ed             	test   %r13,%r13
    6dab:	75 ad                	jne    6d5a <do_init_thread+0x1ca>
    6dad:	e9 e6 fe ff ff       	jmp    6c98 <do_init_thread+0x108>
    6db2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6db8:	48 89 ef             	mov    %rbp,%rdi
    6dbb:	e8 50 f4 ff ff       	call   6210 <is_dynamic_thread>
    6dc0:	85 c0                	test   %eax,%eax
    6dc2:	75 c5                	jne    6d89 <do_init_thread+0x1f9>
    6dc4:	e9 cf fe ff ff       	jmp    6c98 <do_init_thread+0x108>
    6dc9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6dd0:	48 c7 43 50 01 00 00 	movq   $0x1,0x50(%rbx)
    6dd7:	00 
    6dd8:	e9 78 ff ff ff       	jmp    6d55 <do_init_thread+0x1c5>
    6ddd:	0f 1f 00             	nopl   (%rax)
    6de0:	48 c7 43 50 01 00 00 	movq   $0x1,0x50(%rbx)
    6de7:	00 
    6de8:	eb 9a                	jmp    6d84 <do_init_thread+0x1f4>
    6dea:	e8 01 9c 00 00       	call   109f0 <__stack_chk_fail>
    6def:	90                   	nop

0000000000006df0 <do_ecall>:
    6df0:	f3 0f 1e fa          	endbr64 
    6df4:	53                   	push   %rbx
    6df5:	48 89 d3             	mov    %rdx,%rbx
    6df8:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    6dfc:	89 7c 24 20          	mov    %edi,0x20(%rsp)
    6e00:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    6e05:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    6e0c:	00 00 
    6e0e:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    6e13:	31 c0                	xor    %eax,%eax
    6e15:	e8 ea b2 00 00       	call   12104 <get_enclave_state>
    6e1a:	89 c2                	mov    %eax,%edx
    6e1c:	b8 01 00 00 00       	mov    $0x1,%eax
    6e21:	83 fa 02             	cmp    $0x2,%edx
    6e24:	74 1a                	je     6e40 <do_ecall+0x50>
    6e26:	48 8b 54 24 78       	mov    0x78(%rsp),%rdx
    6e2b:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    6e32:	00 00 
    6e34:	0f 85 0c 02 00 00    	jne    7046 <do_ecall+0x256>
    6e3a:	48 83 ec 80          	sub    $0xffffffffffffff80,%rsp
    6e3e:	5b                   	pop    %rbx
    6e3f:	c3                   	ret    
    6e40:	e8 fe b2 00 00       	call   12143 <get_thread_data>
    6e45:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    6e4a:	48 85 c0             	test   %rax,%rax
    6e4d:	0f 84 31 01 00 00    	je     6f84 <do_ecall+0x194>
    6e53:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    6e58:	48 8b 48 08          	mov    0x8(%rax),%rcx
    6e5c:	48 39 48 10          	cmp    %rcx,0x10(%rax)
    6e60:	0f 84 0a 01 00 00    	je     6f70 <do_ecall+0x180>
    6e66:	e8 d8 b2 00 00       	call   12143 <get_thread_data>
    6e6b:	48 83 78 50 01       	cmpq   $0x1,0x50(%rax)
    6e70:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    6e75:	0f 84 25 01 00 00    	je     6fa0 <do_ecall+0x1b0>
    6e7b:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    6e80:	48 8b 48 08          	mov    0x8(%rax),%rcx
    6e84:	48 39 48 10          	cmp    %rcx,0x10(%rax)
    6e88:	74 56                	je     6ee0 <do_ecall+0xf0>
    6e8a:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    6e8f:	8b 7c 24 20          	mov    0x20(%rsp),%edi
    6e93:	e8 b8 fa ff ff       	call   6950 <_ZL10trts_ecalljPv>
    6e98:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
    6e9d:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
    6ea2:	48 8d 15 57 c3 00 00 	lea    0xc357(%rip),%rdx        # 13200 <g_global_data>
    6ea9:	48 8b 52 38          	mov    0x38(%rdx),%rdx
    6ead:	48 85 d2             	test   %rdx,%rdx
    6eb0:	0f 84 70 ff ff ff    	je     6e26 <do_ecall+0x36>
    6eb6:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    6ebb:	48 8b 59 08          	mov    0x8(%rcx),%rbx
    6ebf:	48 39 59 10          	cmp    %rbx,0x10(%rcx)
    6ec3:	0f 85 5d ff ff ff    	jne    6e26 <do_ecall+0x36>
    6ec9:	89 44 24 2c          	mov    %eax,0x2c(%rsp)
    6ecd:	e8 ae fc ff ff       	call   6b80 <tc_set_idle>
    6ed2:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
    6ed6:	e9 4b ff ff ff       	jmp    6e26 <do_ecall+0x36>
    6edb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6ee0:	31 ff                	xor    %edi,%edi
    6ee2:	e8 f9 ef ff ff       	call   5ee0 <sgx_wrpkru>
    6ee7:	e8 34 fc ff ff       	call   6b20 <_Z16_pthread_enabledv>
    6eec:	84 c0                	test   %al,%al
    6eee:	0f 84 0c 01 00 00    	je     7000 <do_ecall+0x210>
    6ef4:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    6ef9:	66 0f ef c0          	pxor   %xmm0,%xmm0
    6efd:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
    6f02:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
    6f07:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    6f0c:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
    6f11:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
    6f16:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
    6f1b:	e8 02 9e 00 00       	call   10d22 <setjmp>
    6f20:	f3 0f 1e fa          	endbr64 
    6f24:	85 c0                	test   %eax,%eax
    6f26:	0f 84 94 00 00 00    	je     6fc0 <do_ecall+0x1d0>
    6f2c:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    6f31:	48 8b 41 10          	mov    0x10(%rcx),%rax
    6f35:	48 89 41 08          	mov    %rax,0x8(%rcx)
    6f39:	b8 09 00 00 00       	mov    $0x9,%eax
    6f3e:	bf 09 00 00 00       	mov    $0x9,%edi
    6f43:	89 44 24 28          	mov    %eax,0x28(%rsp)
    6f47:	e8 e4 fb ff ff       	call   6b30 <_Z24_pthread_tls_store_state9_status_t>
    6f4c:	8b 44 24 28          	mov    0x28(%rsp),%eax
    6f50:	89 44 24 24          	mov    %eax,0x24(%rsp)
    6f54:	e8 17 fc ff ff       	call   6b70 <_Z24_pthread_tls_destructorsv>
    6f59:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    6f5e:	e8 fd fb ff ff       	call   6b60 <_Z20_pthread_wakeup_joinPv>
    6f63:	8b 44 24 24          	mov    0x24(%rsp),%eax
    6f67:	e9 36 ff ff ff       	jmp    6ea2 <do_ecall+0xb2>
    6f6c:	0f 1f 40 00          	nopl   0x0(%rax)
    6f70:	48 8d 05 89 c2 00 00 	lea    0xc289(%rip),%rax        # 13200 <g_global_data>
    6f77:	48 8b 40 38          	mov    0x38(%rax),%rax
    6f7b:	48 85 c0             	test   %rax,%rax
    6f7e:	0f 84 a4 00 00 00    	je     7028 <do_ecall+0x238>
    6f84:	31 f6                	xor    %esi,%esi
    6f86:	48 89 df             	mov    %rbx,%rdi
    6f89:	e8 02 fc ff ff       	call   6b90 <do_init_thread>
    6f8e:	85 c0                	test   %eax,%eax
    6f90:	0f 84 d0 fe ff ff    	je     6e66 <do_ecall+0x76>
    6f96:	e9 8b fe ff ff       	jmp    6e26 <do_ecall+0x36>
    6f9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6fa0:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    6fa5:	bf 01 00 00 00       	mov    $0x1,%edi
    6faa:	48 c7 40 50 00 00 00 	movq   $0x0,0x50(%rax)
    6fb1:	00 
    6fb2:	e8 49 f5 ff ff       	call   6500 <sgx_set_ssa_aexnotify>
    6fb7:	e9 bf fe ff ff       	jmp    6e7b <do_ecall+0x8b>
    6fbc:	0f 1f 40 00          	nopl   0x0(%rax)
    6fc0:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
    6fc5:	e8 86 fb ff ff       	call   6b50 <_Z26_pthread_tls_store_contextPv>
    6fca:	0f c7 f0             	rdrand %eax
    6fcd:	73 fb                	jae    6fca <do_ecall+0x1da>
    6fcf:	8b 5c 24 20          	mov    0x20(%rsp),%ebx
    6fd3:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    6fd8:	89 df                	mov    %ebx,%edi
    6fda:	e8 31 fb ff ff       	call   6b10 <_Z30_random_stack_noinline_wrapperI9_status_tJjPvEJRiRS1_EET_PFS4_DpT0_EDpOT1_.constprop.0.isra.0>
    6fdf:	83 fb fa             	cmp    $0xfffffffa,%ebx
    6fe2:	0f 84 56 ff ff ff    	je     6f3e <do_ecall+0x14e>
    6fe8:	83 f8 09             	cmp    $0x9,%eax
    6feb:	0f 85 5f ff ff ff    	jne    6f50 <do_ecall+0x160>
    6ff1:	e9 43 ff ff ff       	jmp    6f39 <do_ecall+0x149>
    6ff6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6ffd:	00 00 00 
    7000:	0f c7 f0             	rdrand %eax
    7003:	73 fb                	jae    7000 <do_ecall+0x210>
    7005:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    700a:	8b 7c 24 20          	mov    0x20(%rsp),%edi
    700e:	e8 fd fa ff ff       	call   6b10 <_Z30_random_stack_noinline_wrapperI9_status_tJjPvEJRiRS1_EET_PFS4_DpT0_EDpOT1_.constprop.0.isra.0>
    7013:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    7018:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    701d:	e9 80 fe ff ff       	jmp    6ea2 <do_ecall+0xb2>
    7022:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7028:	e8 13 fb ff ff       	call   6b40 <_Z22_pthread_tls_get_statev>
    702d:	83 7c 24 20 fa       	cmpl   $0xfffffffa,0x20(%rsp)
    7032:	0f 84 4c ff ff ff    	je     6f84 <do_ecall+0x194>
    7038:	83 f8 09             	cmp    $0x9,%eax
    703b:	0f 85 25 fe ff ff    	jne    6e66 <do_ecall+0x76>
    7041:	e9 3e ff ff ff       	jmp    6f84 <do_ecall+0x194>
    7046:	e8 a5 99 00 00       	call   109f0 <__stack_chk_fail>
    704b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000007050 <do_ecall_add_thread>:
    7050:	f3 0f 1e fa          	endbr64 
    7054:	55                   	push   %rbp
    7055:	53                   	push   %rbx
    7056:	48 89 fb             	mov    %rdi,%rbx
    7059:	48 83 ec 08          	sub    $0x8,%rsp
    705d:	e8 5e 06 00 00       	call   76c0 <is_utility_thread>
    7062:	48 85 db             	test   %rbx,%rbx
    7065:	0f 84 a5 00 00 00    	je     7110 <do_ecall_add_thread+0xc0>
    706b:	3c 01                	cmp    $0x1,%al
    706d:	0f 85 9d 00 00 00    	jne    7110 <do_ecall_add_thread+0xc0>
    7073:	be 08 00 00 00       	mov    $0x8,%esi
    7078:	48 89 df             	mov    %rbx,%rdi
    707b:	e8 40 eb ff ff       	call   5bc0 <sgx_is_outside_enclave>
    7080:	85 c0                	test   %eax,%eax
    7082:	0f 84 88 00 00 00    	je     7110 <do_ecall_add_thread+0xc0>
    7088:	0f ae e8             	lfence 
    708b:	48 8b 2b             	mov    (%rbx),%rbp
    708e:	48 85 ed             	test   %rbp,%rbp
    7091:	74 7d                	je     7110 <do_ecall_add_thread+0xc0>
    7093:	0f ae e8             	lfence 
    7096:	48 89 ef             	mov    %rbp,%rdi
    7099:	e8 02 f7 ff ff       	call   67a0 <_ZL11do_save_tcsPv>
    709e:	89 c3                	mov    %eax,%ebx
    70a0:	85 c0                	test   %eax,%eax
    70a2:	75 71                	jne    7115 <do_ecall_add_thread+0xc5>
    70a4:	48 89 ef             	mov    %rbp,%rdi
    70a7:	e8 94 f2 ff ff       	call   6340 <do_add_thread>
    70ac:	89 c3                	mov    %eax,%ebx
    70ae:	85 c0                	test   %eax,%eax
    70b0:	74 63                	je     7115 <do_ecall_add_thread+0xc5>
    70b2:	e8 09 06 00 00       	call   76c0 <is_utility_thread>
    70b7:	84 c0                	test   %al,%al
    70b9:	74 5a                	je     7115 <do_ecall_add_thread+0xc5>
    70bb:	48 8b 0d b6 30 01 00 	mov    0x130b6(%rip),%rcx        # 1a178 <_ZL10g_tcs_node>
    70c2:	48 85 c9             	test   %rcx,%rcx
    70c5:	74 4e                	je     7115 <do_ecall_add_thread+0xc5>
    70c7:	48 8b 35 a2 30 01 00 	mov    0x130a2(%rip),%rsi        # 1a170 <_ZL12g_tcs_cookie>
    70ce:	48 8b 01             	mov    (%rcx),%rax
    70d1:	48 8b 79 08          	mov    0x8(%rcx),%rdi
    70d5:	48 31 f0             	xor    %rsi,%rax
    70d8:	48 39 c5             	cmp    %rax,%rbp
    70db:	74 41                	je     711e <do_ecall_add_thread+0xce>
    70dd:	48 85 ff             	test   %rdi,%rdi
    70e0:	75 11                	jne    70f3 <do_ecall_add_thread+0xa3>
    70e2:	eb 31                	jmp    7115 <do_ecall_add_thread+0xc5>
    70e4:	0f 1f 40 00          	nopl   0x0(%rax)
    70e8:	48 89 f9             	mov    %rdi,%rcx
    70eb:	48 85 c0             	test   %rax,%rax
    70ee:	74 25                	je     7115 <do_ecall_add_thread+0xc5>
    70f0:	48 89 c7             	mov    %rax,%rdi
    70f3:	48 8b 17             	mov    (%rdi),%rdx
    70f6:	48 8b 47 08          	mov    0x8(%rdi),%rax
    70fa:	48 31 f2             	xor    %rsi,%rdx
    70fd:	48 39 d5             	cmp    %rdx,%rbp
    7100:	75 e6                	jne    70e8 <do_ecall_add_thread+0x98>
    7102:	48 89 41 08          	mov    %rax,0x8(%rcx)
    7106:	e8 15 7e 00 00       	call   ef20 <dlfree>
    710b:	eb 08                	jmp    7115 <do_ecall_add_thread+0xc5>
    710d:	0f 1f 00             	nopl   (%rax)
    7110:	bb 01 00 00 00       	mov    $0x1,%ebx
    7115:	48 83 c4 08          	add    $0x8,%rsp
    7119:	89 d8                	mov    %ebx,%eax
    711b:	5b                   	pop    %rbx
    711c:	5d                   	pop    %rbp
    711d:	c3                   	ret    
    711e:	48 89 3d 53 30 01 00 	mov    %rdi,0x13053(%rip)        # 1a178 <_ZL10g_tcs_node>
    7125:	48 89 cf             	mov    %rcx,%rdi
    7128:	e8 f3 7d 00 00       	call   ef20 <dlfree>
    712d:	eb e6                	jmp    7115 <do_ecall_add_thread+0xc5>
    712f:	90                   	nop

0000000000007130 <do_uninit_enclave>:
    7130:	f3 0f 1e fa          	endbr64 
    7134:	48 8d 05 e1 0c 01 00 	lea    0x10ce1(%rip),%rax        # 17e1c <EDMM_supported>
    713b:	41 54                	push   %r12
    713d:	55                   	push   %rbp
    713e:	53                   	push   %rbx
    713f:	8b 00                	mov    (%rax),%eax
    7141:	85 c0                	test   %eax,%eax
    7143:	0f 84 a4 00 00 00    	je     71ed <do_uninit_enclave+0xbd>
    7149:	49 89 fc             	mov    %rdi,%r12
    714c:	e8 6f 05 00 00       	call   76c0 <is_utility_thread>
    7151:	84 c0                	test   %al,%al
    7153:	0f 84 87 00 00 00    	je     71e0 <do_uninit_enclave+0xb0>
    7159:	f0 83 0d 07 30 01 00 	lock orl $0x1,0x13007(%rip)        # 1a168 <g_uninit_flag>
    7160:	01 
    7161:	48 8b 1d 10 30 01 00 	mov    0x13010(%rip),%rbx        # 1a178 <_ZL10g_tcs_node>
    7168:	48 c7 05 05 30 01 00 	movq   $0x0,0x13005(%rip)        # 1a178 <_ZL10g_tcs_node>
    716f:	00 00 00 00 
    7173:	eb 2f                	jmp    71a4 <do_uninit_enclave+0x74>
    7175:	0f 1f 00             	nopl   (%rax)
    7178:	48 8b 3b             	mov    (%rbx),%rdi
    717b:	48 33 3d ee 2f 01 00 	xor    0x12fee(%rip),%rdi        # 1a170 <_ZL12g_tcs_cookie>
    7182:	4c 39 e7             	cmp    %r12,%rdi
    7185:	74 0e                	je     7195 <do_uninit_enclave+0x65>
    7187:	be 00 10 00 00       	mov    $0x1000,%esi
    718c:	e8 4f 48 00 00       	call   b9e0 <mm_dealloc>
    7191:	85 c0                	test   %eax,%eax
    7193:	75 58                	jne    71ed <do_uninit_enclave+0xbd>
    7195:	48 8b 6b 08          	mov    0x8(%rbx),%rbp
    7199:	48 89 df             	mov    %rbx,%rdi
    719c:	e8 7f 7d 00 00       	call   ef20 <dlfree>
    71a1:	48 89 eb             	mov    %rbp,%rbx
    71a4:	48 85 db             	test   %rbx,%rbx
    71a7:	75 cf                	jne    7178 <do_uninit_enclave+0x48>
    71a9:	48 8d 1d bc 2f 01 00 	lea    0x12fbc(%rip),%rbx        # 1a16c <_ZL10g_ife_lock>
    71b0:	48 89 df             	mov    %rbx,%rdi
    71b3:	e8 b8 55 00 00       	call   c770 <sgx_spin_lock>
    71b8:	0f b6 05 61 10 01 00 	movzbl 0x11061(%rip),%eax        # 18220 <_ZL16g_is_first_ecall>
    71bf:	84 c0                	test   %al,%al
    71c1:	74 45                	je     7208 <do_uninit_enclave+0xd8>
    71c3:	48 89 df             	mov    %rbx,%rdi
    71c6:	e8 35 56 00 00       	call   c800 <sgx_spin_unlock>
    71cb:	bf 03 00 00 00       	mov    $0x3,%edi
    71d0:	e8 40 af 00 00       	call   12115 <set_enclave_state>
    71d5:	5b                   	pop    %rbx
    71d6:	31 c0                	xor    %eax,%eax
    71d8:	5d                   	pop    %rbp
    71d9:	41 5c                	pop    %r12
    71db:	c3                   	ret    
    71dc:	0f 1f 40 00          	nopl   0x0(%rax)
    71e0:	e8 8b f0 ff ff       	call   6270 <is_dynamic_thread_exist>
    71e5:	85 c0                	test   %eax,%eax
    71e7:	0f 84 6c ff ff ff    	je     7159 <do_uninit_enclave+0x29>
    71ed:	bf 03 00 00 00       	mov    $0x3,%edi
    71f2:	e8 1e af 00 00       	call   12115 <set_enclave_state>
    71f7:	5b                   	pop    %rbx
    71f8:	b8 01 00 00 00       	mov    $0x1,%eax
    71fd:	5d                   	pop    %rbp
    71fe:	41 5c                	pop    %r12
    7200:	c3                   	ret    
    7201:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7208:	e8 43 1b 00 00       	call   8d50 <uninit_global_object>
    720d:	eb b4                	jmp    71c3 <do_uninit_enclave+0x93>
    720f:	90                   	nop

0000000000007210 <sgx_ocall>:
    7210:	f3 0f 1e fa          	endbr64 
    7214:	8d 47 07             	lea    0x7(%rdi),%eax
    7217:	83 f8 05             	cmp    $0x5,%eax
    721a:	76 12                	jbe    722e <sgx_ocall+0x1e>
    721c:	85 ff                	test   %edi,%edi
    721e:	74 0e                	je     722e <sgx_ocall+0x1e>
    7220:	48 8d 15 59 be 00 00 	lea    0xbe59(%rip),%rdx        # 13080 <g_dyn_entry_table>
    7227:	89 f8                	mov    %edi,%eax
    7229:	48 3b 02             	cmp    (%rdx),%rax
    722c:	73 0a                	jae    7238 <sgx_ocall+0x28>
    722e:	e9 ac b1 00 00       	jmp    123df <__morestack>
    7233:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7238:	b8 01 10 00 00       	mov    $0x1001,%eax
    723d:	c3                   	ret    
    723e:	66 90                	xchg   %ax,%ax

0000000000007240 <update_ocall_lastsp>:
    7240:	f3 0f 1e fa          	endbr64 
    7244:	53                   	push   %rbx
    7245:	48 89 fb             	mov    %rdi,%rbx
    7248:	e8 f6 ae 00 00       	call   12143 <get_thread_data>
    724d:	b9 01 00 00 00       	mov    $0x1,%ecx
    7252:	48 8b 50 08          	mov    0x8(%rax),%rdx
    7256:	48 89 53 30          	mov    %rdx,0x30(%rbx)
    725a:	48 39 50 10          	cmp    %rdx,0x10(%rax)
    725e:	74 0b                	je     726b <update_ocall_lastsp+0x2b>
    7260:	48 8b b2 90 00 00 00 	mov    0x90(%rdx),%rsi
    7267:	48 8d 4e 01          	lea    0x1(%rsi),%rcx
    726b:	48 89 8b 90 00 00 00 	mov    %rcx,0x90(%rbx)
    7272:	48 89 58 08          	mov    %rbx,0x8(%rax)
    7276:	48 89 d0             	mov    %rdx,%rax
    7279:	5b                   	pop    %rbx
    727a:	c3                   	ret    
    727b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000007280 <do_oret>:
    7280:	f3 0f 1e fa          	endbr64 
    7284:	55                   	push   %rbp
    7285:	48 89 fd             	mov    %rdi,%rbp
    7288:	53                   	push   %rbx
    7289:	48 83 ec 18          	sub    $0x18,%rsp
    728d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    7294:	00 00 
    7296:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    729b:	31 c0                	xor    %eax,%eax
    729d:	e8 a1 ae 00 00       	call   12143 <get_thread_data>
    72a2:	48 83 78 50 01       	cmpq   $0x1,0x50(%rax)
    72a7:	48 89 c3             	mov    %rax,%rbx
    72aa:	74 74                	je     7320 <do_oret+0xa0>
    72ac:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    72b0:	48 89 e0             	mov    %rsp,%rax
    72b3:	48 89 3c 24          	mov    %rdi,(%rsp)
    72b7:	48 39 f8             	cmp    %rdi,%rax
    72ba:	72 24                	jb     72e0 <do_oret+0x60>
    72bc:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    72c1:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    72c8:	00 00 
    72ca:	75 6b                	jne    7337 <do_oret+0xb7>
    72cc:	48 83 c4 18          	add    $0x18,%rsp
    72d0:	b8 01 00 00 00       	mov    $0x1,%eax
    72d5:	5b                   	pop    %rbx
    72d6:	5d                   	pop    %rbp
    72d7:	c3                   	ret    
    72d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    72df:	00 
    72e0:	48 8b 43 10          	mov    0x10(%rbx),%rax
    72e4:	48 8d 90 10 ff ff ff 	lea    -0xf0(%rax),%rdx
    72eb:	48 39 fa             	cmp    %rdi,%rdx
    72ee:	72 cc                	jb     72bc <do_oret+0x3c>
    72f0:	48 81 7f 20 44 49 43 	cmpq   $0x4f434944,0x20(%rdi)
    72f7:	4f 
    72f8:	75 c2                	jne    72bc <do_oret+0x3c>
    72fa:	48 8b 57 30          	mov    0x30(%rdi),%rdx
    72fe:	48 39 d7             	cmp    %rdx,%rdi
    7301:	73 b9                	jae    72bc <do_oret+0x3c>
    7303:	48 39 d0             	cmp    %rdx,%rax
    7306:	72 b4                	jb     72bc <do_oret+0x3c>
    7308:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    730c:	48 89 ee             	mov    %rbp,%rsi
    730f:	e8 de b0 00 00       	call   123f2 <asm_oret>
    7314:	eb a6                	jmp    72bc <do_oret+0x3c>
    7316:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    731d:	00 00 00 
    7320:	48 c7 40 50 00 00 00 	movq   $0x0,0x50(%rax)
    7327:	00 
    7328:	bf 01 00 00 00       	mov    $0x1,%edi
    732d:	e8 ce f1 ff ff       	call   6500 <sgx_set_ssa_aexnotify>
    7332:	e9 75 ff ff ff       	jmp    72ac <do_oret+0x2c>
    7337:	e8 b4 96 00 00       	call   109f0 <__stack_chk_fail>
    733c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000007340 <get_enclave_size>:
    7340:	f3 0f 1e fa          	endbr64 
    7344:	48 8d 05 b5 be 00 00 	lea    0xbeb5(%rip),%rax        # 13200 <g_global_data>
    734b:	48 8b 40 08          	mov    0x8(%rax),%rax
    734f:	c3                   	ret    

0000000000007350 <get_enclave_end>:
    7350:	f3 0f 1e fa          	endbr64 
    7354:	48 83 ec 08          	sub    $0x8,%rsp
    7358:	e8 9b ad 00 00       	call   120f8 <get_enclave_base>
    735d:	48 8d 15 9c be 00 00 	lea    0xbe9c(%rip),%rdx        # 13200 <g_global_data>
    7364:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    7368:	48 83 c4 08          	add    $0x8,%rsp
    736c:	48 8d 44 02 ff       	lea    -0x1(%rdx,%rax,1),%rax
    7371:	c3                   	ret    
    7372:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    7379:	00 00 00 
    737c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000007380 <get_heap_base>:
    7380:	f3 0f 1e fa          	endbr64 
    7384:	48 83 ec 08          	sub    $0x8,%rsp
    7388:	e8 6b ad 00 00       	call   120f8 <get_enclave_base>
    738d:	48 8d 15 6c be 00 00 	lea    0xbe6c(%rip),%rdx        # 13200 <g_global_data>
    7394:	48 8b 52 10          	mov    0x10(%rdx),%rdx
    7398:	48 83 c4 08          	add    $0x8,%rsp
    739c:	48 01 d0             	add    %rdx,%rax
    739f:	c3                   	ret    

00000000000073a0 <get_heap_size>:
    73a0:	f3 0f 1e fa          	endbr64 
    73a4:	48 8d 05 71 0a 01 00 	lea    0x10a71(%rip),%rax        # 17e1c <EDMM_supported>
    73ab:	48 8d 0d 4e be 00 00 	lea    0xbe4e(%rip),%rcx        # 13200 <g_global_data>
    73b2:	8b 00                	mov    (%rax),%eax
    73b4:	48 8b 79 18          	mov    0x18(%rcx),%rdi
    73b8:	85 c0                	test   %eax,%eax
    73ba:	74 41                	je     73fd <get_heap_size+0x5d>
    73bc:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    73c2:	85 c0                	test   %eax,%eax
    73c4:	74 37                	je     73fd <get_heap_size+0x5d>
    73c6:	31 d2                	xor    %edx,%edx
    73c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    73cf:	00 
    73d0:	89 d0                	mov    %edx,%eax
    73d2:	48 83 c0 0b          	add    $0xb,%rax
    73d6:	48 c1 e0 05          	shl    $0x5,%rax
    73da:	48 01 c8             	add    %rcx,%rax
    73dd:	0f b7 30             	movzwl (%rax),%esi
    73e0:	66 83 fe 03          	cmp    $0x3,%si
    73e4:	75 0a                	jne    73f0 <get_heap_size+0x50>
    73e6:	8b 40 04             	mov    0x4(%rax),%eax
    73e9:	48 c1 e0 0c          	shl    $0xc,%rax
    73ed:	48 01 c7             	add    %rax,%rdi
    73f0:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    73f6:	83 c2 01             	add    $0x1,%edx
    73f9:	39 c2                	cmp    %eax,%edx
    73fb:	72 d3                	jb     73d0 <get_heap_size+0x30>
    73fd:	48 89 f8             	mov    %rdi,%rax
    7400:	c3                   	ret    
    7401:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    7408:	00 00 00 
    740b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000007410 <get_heap_min_size>:
    7410:	f3 0f 1e fa          	endbr64 
    7414:	48 8d 0d e5 bd 00 00 	lea    0xbde5(%rip),%rcx        # 13200 <g_global_data>
    741b:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    7421:	85 c0                	test   %eax,%eax
    7423:	74 3b                	je     7460 <get_heap_min_size+0x50>
    7425:	31 d2                	xor    %edx,%edx
    7427:	eb 14                	jmp    743d <get_heap_min_size+0x2d>
    7429:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7430:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    7436:	83 c2 01             	add    $0x1,%edx
    7439:	39 c2                	cmp    %eax,%edx
    743b:	73 23                	jae    7460 <get_heap_min_size+0x50>
    743d:	89 d0                	mov    %edx,%eax
    743f:	48 83 c0 0b          	add    $0xb,%rax
    7443:	48 c1 e0 05          	shl    $0x5,%rax
    7447:	48 01 c8             	add    %rcx,%rax
    744a:	0f b7 30             	movzwl (%rax),%esi
    744d:	66 83 fe 01          	cmp    $0x1,%si
    7451:	75 dd                	jne    7430 <get_heap_min_size+0x20>
    7453:	8b 40 04             	mov    0x4(%rax),%eax
    7456:	48 c1 e0 0c          	shl    $0xc,%rax
    745a:	c3                   	ret    
    745b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7460:	31 c0                	xor    %eax,%eax
    7462:	c3                   	ret    
    7463:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    746a:	00 00 00 
    746d:	0f 1f 00             	nopl   (%rax)

0000000000007470 <get_rsrv_base>:
    7470:	f3 0f 1e fa          	endbr64 
    7474:	48 83 ec 08          	sub    $0x8,%rsp
    7478:	e8 7b ac 00 00       	call   120f8 <get_enclave_base>
    747d:	48 8d 15 7c bd 00 00 	lea    0xbd7c(%rip),%rdx        # 13200 <g_global_data>
    7484:	48 8b 52 20          	mov    0x20(%rdx),%rdx
    7488:	48 83 c4 08          	add    $0x8,%rsp
    748c:	48 01 d0             	add    %rdx,%rax
    748f:	c3                   	ret    

0000000000007490 <get_rsrv_end>:
    7490:	f3 0f 1e fa          	endbr64 
    7494:	48 83 ec 08          	sub    $0x8,%rsp
    7498:	e8 5b ac 00 00       	call   120f8 <get_enclave_base>
    749d:	48 8d 35 5c bd 00 00 	lea    0xbd5c(%rip),%rsi        # 13200 <g_global_data>
    74a4:	48 8d 15 71 09 01 00 	lea    0x10971(%rip),%rdx        # 17e1c <EDMM_supported>
    74ab:	4c 8b 4e 20          	mov    0x20(%rsi),%r9
    74af:	8b 12                	mov    (%rdx),%edx
    74b1:	4c 8b 46 28          	mov    0x28(%rsi),%r8
    74b5:	49 83 e9 01          	sub    $0x1,%r9
    74b9:	85 d2                	test   %edx,%edx
    74bb:	74 40                	je     74fd <get_rsrv_end+0x6d>
    74bd:	8b 96 58 01 00 00    	mov    0x158(%rsi),%edx
    74c3:	85 d2                	test   %edx,%edx
    74c5:	74 36                	je     74fd <get_rsrv_end+0x6d>
    74c7:	31 c9                	xor    %ecx,%ecx
    74c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    74d0:	89 ca                	mov    %ecx,%edx
    74d2:	48 83 c2 0b          	add    $0xb,%rdx
    74d6:	48 c1 e2 05          	shl    $0x5,%rdx
    74da:	48 01 f2             	add    %rsi,%rdx
    74dd:	0f b7 3a             	movzwl (%rdx),%edi
    74e0:	66 83 ff 16          	cmp    $0x16,%di
    74e4:	75 0a                	jne    74f0 <get_rsrv_end+0x60>
    74e6:	8b 52 04             	mov    0x4(%rdx),%edx
    74e9:	48 c1 e2 0c          	shl    $0xc,%rdx
    74ed:	49 01 d0             	add    %rdx,%r8
    74f0:	8b 96 58 01 00 00    	mov    0x158(%rsi),%edx
    74f6:	83 c1 01             	add    $0x1,%ecx
    74f9:	39 d1                	cmp    %edx,%ecx
    74fb:	72 d3                	jb     74d0 <get_rsrv_end+0x40>
    74fd:	4c 01 c8             	add    %r9,%rax
    7500:	48 83 c4 08          	add    $0x8,%rsp
    7504:	4c 01 c0             	add    %r8,%rax
    7507:	c3                   	ret    
    7508:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    750f:	00 

0000000000007510 <get_rsrv_size>:
    7510:	f3 0f 1e fa          	endbr64 
    7514:	48 8d 05 01 09 01 00 	lea    0x10901(%rip),%rax        # 17e1c <EDMM_supported>
    751b:	48 8d 0d de bc 00 00 	lea    0xbcde(%rip),%rcx        # 13200 <g_global_data>
    7522:	8b 00                	mov    (%rax),%eax
    7524:	48 8b 79 28          	mov    0x28(%rcx),%rdi
    7528:	85 c0                	test   %eax,%eax
    752a:	74 41                	je     756d <get_rsrv_size+0x5d>
    752c:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    7532:	85 c0                	test   %eax,%eax
    7534:	74 37                	je     756d <get_rsrv_size+0x5d>
    7536:	31 d2                	xor    %edx,%edx
    7538:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    753f:	00 
    7540:	89 d0                	mov    %edx,%eax
    7542:	48 83 c0 0b          	add    $0xb,%rax
    7546:	48 c1 e0 05          	shl    $0x5,%rax
    754a:	48 01 c8             	add    %rcx,%rax
    754d:	0f b7 30             	movzwl (%rax),%esi
    7550:	66 83 fe 16          	cmp    $0x16,%si
    7554:	75 0a                	jne    7560 <get_rsrv_size+0x50>
    7556:	8b 40 04             	mov    0x4(%rax),%eax
    7559:	48 c1 e0 0c          	shl    $0xc,%rax
    755d:	48 01 c7             	add    %rax,%rdi
    7560:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    7566:	83 c2 01             	add    $0x1,%edx
    7569:	39 c2                	cmp    %eax,%edx
    756b:	72 d3                	jb     7540 <get_rsrv_size+0x30>
    756d:	48 89 f8             	mov    %rdi,%rax
    7570:	c3                   	ret    
    7571:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    7578:	00 00 00 
    757b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000007580 <get_rsrv_min_size>:
    7580:	f3 0f 1e fa          	endbr64 
    7584:	48 8d 0d 75 bc 00 00 	lea    0xbc75(%rip),%rcx        # 13200 <g_global_data>
    758b:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    7591:	85 c0                	test   %eax,%eax
    7593:	74 3b                	je     75d0 <get_rsrv_min_size+0x50>
    7595:	31 d2                	xor    %edx,%edx
    7597:	eb 14                	jmp    75ad <get_rsrv_min_size+0x2d>
    7599:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    75a0:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    75a6:	83 c2 01             	add    $0x1,%edx
    75a9:	39 c2                	cmp    %eax,%edx
    75ab:	73 23                	jae    75d0 <get_rsrv_min_size+0x50>
    75ad:	89 d0                	mov    %edx,%eax
    75af:	48 83 c0 0b          	add    $0xb,%rax
    75b3:	48 c1 e0 05          	shl    $0x5,%rax
    75b7:	48 01 c8             	add    %rcx,%rax
    75ba:	0f b7 30             	movzwl (%rax),%esi
    75bd:	66 83 fe 14          	cmp    $0x14,%si
    75c1:	75 dd                	jne    75a0 <get_rsrv_min_size+0x20>
    75c3:	8b 40 04             	mov    0x4(%rax),%eax
    75c6:	48 c1 e0 0c          	shl    $0xc,%rax
    75ca:	c3                   	ret    
    75cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    75d0:	31 c0                	xor    %eax,%eax
    75d2:	c3                   	ret    
    75d3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    75da:	00 00 00 
    75dd:	0f 1f 00             	nopl   (%rax)

00000000000075e0 <get_errno_addr>:
    75e0:	f3 0f 1e fa          	endbr64 
    75e4:	48 83 ec 08          	sub    $0x8,%rsp
    75e8:	e8 56 ab 00 00       	call   12143 <get_thread_data>
    75ed:	48 83 c4 08          	add    $0x8,%rsp
    75f1:	48 83 c0 40          	add    $0x40,%rax
    75f5:	c3                   	ret    
    75f6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    75fd:	00 00 00 

0000000000007600 <feature_supported>:
    7600:	f3 0f 1e fa          	endbr64 
    7604:	48 85 ff             	test   %rdi,%rdi
    7607:	74 37                	je     7640 <feature_supported+0x40>
    7609:	31 d2                	xor    %edx,%edx
    760b:	eb 08                	jmp    7615 <feature_supported+0x15>
    760d:	0f 1f 00             	nopl   (%rax)
    7610:	48 85 c0             	test   %rax,%rax
    7613:	78 2b                	js     7640 <feature_supported+0x40>
    7615:	89 d0                	mov    %edx,%eax
    7617:	83 c2 01             	add    $0x1,%edx
    761a:	41 89 d1             	mov    %edx,%r9d
    761d:	49 89 c0             	mov    %rax,%r8
    7620:	48 8b 04 c7          	mov    (%rdi,%rax,8),%rax
    7624:	41 c1 e1 06          	shl    $0x6,%r9d
    7628:	44 39 ce             	cmp    %r9d,%esi
    762b:	73 e3                	jae    7610 <feature_supported+0x10>
    762d:	41 c1 e0 06          	shl    $0x6,%r8d
    7631:	44 29 c6             	sub    %r8d,%esi
    7634:	89 f1                	mov    %esi,%ecx
    7636:	48 d3 e8             	shr    %cl,%rax
    7639:	83 e0 01             	and    $0x1,%eax
    763c:	c3                   	ret    
    763d:	0f 1f 00             	nopl   (%rax)
    7640:	31 c0                	xor    %eax,%eax
    7642:	c3                   	ret    
    7643:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    764a:	00 00 00 
    764d:	0f 1f 00             	nopl   (%rax)

0000000000007650 <is_stack_addr>:
    7650:	f3 0f 1e fa          	endbr64 
    7654:	55                   	push   %rbp
    7655:	48 89 f5             	mov    %rsi,%rbp
    7658:	53                   	push   %rbx
    7659:	48 89 fb             	mov    %rdi,%rbx
    765c:	48 83 ec 08          	sub    $0x8,%rsp
    7660:	e8 de aa 00 00       	call   12143 <get_thread_data>
    7665:	31 c9                	xor    %ecx,%ecx
    7667:	48 01 dd             	add    %rbx,%rbp
    766a:	48 89 c2             	mov    %rax,%rdx
    766d:	0f 92 c1             	setb   %cl
    7670:	48 39 68 10          	cmp    %rbp,0x10(%rax)
    7674:	0f 93 c0             	setae  %al
    7677:	48 3b 5a 18          	cmp    0x18(%rdx),%rbx
    767b:	0f 93 c2             	setae  %dl
    767e:	21 d0                	and    %edx,%eax
    7680:	48 85 c9             	test   %rcx,%rcx
    7683:	0f 94 c2             	sete   %dl
    7686:	48 83 c4 08          	add    $0x8,%rsp
    768a:	21 d0                	and    %edx,%eax
    768c:	5b                   	pop    %rbx
    768d:	5d                   	pop    %rbp
    768e:	c3                   	ret    
    768f:	90                   	nop

0000000000007690 <is_valid_sp>:
    7690:	f3 0f 1e fa          	endbr64 
    7694:	40 f6 c7 07          	test   $0x7,%dil
    7698:	74 06                	je     76a0 <is_valid_sp+0x10>
    769a:	31 c0                	xor    %eax,%eax
    769c:	c3                   	ret    
    769d:	0f 1f 00             	nopl   (%rax)
    76a0:	53                   	push   %rbx
    76a1:	48 89 fb             	mov    %rdi,%rbx
    76a4:	e8 9a aa 00 00       	call   12143 <get_thread_data>
    76a9:	48 89 c2             	mov    %rax,%rdx
    76ac:	48 3b 58 18          	cmp    0x18(%rax),%rbx
    76b0:	0f 93 c0             	setae  %al
    76b3:	48 39 5a 10          	cmp    %rbx,0x10(%rdx)
    76b7:	5b                   	pop    %rbx
    76b8:	0f 93 c2             	setae  %dl
    76bb:	21 d0                	and    %edx,%eax
    76bd:	c3                   	ret    
    76be:	66 90                	xchg   %ax,%ax

00000000000076c0 <is_utility_thread>:
    76c0:	f3 0f 1e fa          	endbr64 
    76c4:	48 83 ec 08          	sub    $0x8,%rsp
    76c8:	e8 76 aa 00 00       	call   12143 <get_thread_data>
    76cd:	31 d2                	xor    %edx,%edx
    76cf:	48 85 c0             	test   %rax,%rax
    76d2:	74 07                	je     76db <is_utility_thread+0x1b>
    76d4:	48 8b 50 30          	mov    0x30(%rax),%rdx
    76d8:	83 e2 01             	and    $0x1,%edx
    76db:	89 d0                	mov    %edx,%eax
    76dd:	48 83 c4 08          	add    $0x8,%rsp
    76e1:	c3                   	ret    
    76e2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    76e9:	00 00 00 
    76ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000076f0 <get_max_tcs_num>:
    76f0:	f3 0f 1e fa          	endbr64 
    76f4:	48 8d 05 21 07 01 00 	lea    0x10721(%rip),%rax        # 17e1c <EDMM_supported>
    76fb:	83 38 01             	cmpl   $0x1,(%rax)
    76fe:	48 8d 05 fb ba 00 00 	lea    0xbafb(%rip),%rax        # 13200 <g_global_data>
    7705:	74 09                	je     7710 <get_max_tcs_num+0x20>
    7707:	48 8b 40 48          	mov    0x48(%rax),%rax
    770b:	c3                   	ret    
    770c:	0f 1f 40 00          	nopl   0x0(%rax)
    7710:	48 8b 40 40          	mov    0x40(%rax),%rax
    7714:	c3                   	ret    
    7715:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    771c:	00 00 00 
    771f:	90                   	nop

0000000000007720 <is_pkru_enabled>:
    7720:	f3 0f 1e fa          	endbr64 
    7724:	48 83 ec 08          	sub    $0x8,%rsp
    7728:	e8 23 0a 00 00       	call   8150 <get_xfeature_state>
    772d:	48 83 c4 08          	add    $0x8,%rsp
    7731:	48 c1 e8 09          	shr    $0x9,%rax
    7735:	83 e0 01             	and    $0x1,%eax
    7738:	c3                   	ret    
    7739:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000007740 <is_tcs_binding_mode>:
    7740:	f3 0f 1e fa          	endbr64 
    7744:	48 8d 05 b5 ba 00 00 	lea    0xbab5(%rip),%rax        # 13200 <g_global_data>
    774b:	48 8b 40 38          	mov    0x38(%rax),%rax
    774f:	48 85 c0             	test   %rax,%rax
    7752:	0f 94 c0             	sete   %al
    7755:	c3                   	ret    
    7756:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    775d:	00 00 00 

0000000000007760 <get_xsave_size>:
    7760:	f3 0f 1e fa          	endbr64 
    7764:	48 8d 05 95 ba 00 00 	lea    0xba95(%rip),%rax        # 13200 <g_global_data>
    776b:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
    7772:	c3                   	ret    
    7773:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    777a:	00 00 00 
    777d:	0f 1f 00             	nopl   (%rax)

0000000000007780 <get_ssa_aexnotify>:
    7780:	f3 0f 1e fa          	endbr64 
    7784:	48 83 ec 08          	sub    $0x8,%rsp
    7788:	e8 b6 a9 00 00       	call   12143 <get_thread_data>
    778d:	48 85 c0             	test   %rax,%rax
    7790:	74 16                	je     77a8 <get_ssa_aexnotify+0x28>
    7792:	48 8b 40 20          	mov    0x20(%rax),%rax
    7796:	0f b6 80 a7 00 00 00 	movzbl 0xa7(%rax),%eax
    779d:	48 83 c4 08          	add    $0x8,%rsp
    77a1:	83 e0 01             	and    $0x1,%eax
    77a4:	c3                   	ret    
    77a5:	0f 1f 00             	nopl   (%rax)
    77a8:	31 c0                	xor    %eax,%eax
    77aa:	48 83 c4 08          	add    $0x8,%rsp
    77ae:	c3                   	ret    
    77af:	90                   	nop

00000000000077b0 <internal_handle_exception>:
    77b0:	f3 0f 1e fa          	endbr64 
    77b4:	55                   	push   %rbp
    77b5:	48 89 e5             	mov    %rsp,%rbp
    77b8:	41 57                	push   %r15
    77ba:	41 56                	push   %r14
    77bc:	41 55                	push   %r13
    77be:	41 54                	push   %r12
    77c0:	53                   	push   %rbx
    77c1:	48 89 fb             	mov    %rdi,%rbx
    77c4:	48 83 ec 38          	sub    $0x38,%rsp
    77c8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    77cf:	00 00 
    77d1:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    77d5:	31 c0                	xor    %eax,%eax
    77d7:	e8 67 a9 00 00       	call   12143 <get_thread_data>
    77dc:	4c 8b 60 20          	mov    0x20(%rax),%r12
    77e0:	49 89 c5             	mov    %rax,%r13
    77e3:	e8 78 ff ff ff       	call   7760 <get_xsave_size>
    77e8:	48 85 db             	test   %rbx,%rbx
    77eb:	0f 84 4f 01 00 00    	je     7940 <internal_handle_exception+0x190>
    77f1:	49 8d b4 24 ff 0f 00 	lea    0xfff(%r12),%rsi
    77f8:	00 
    77f9:	48 05 b7 10 00 00    	add    $0x10b7,%rax
    77ff:	48 8b 93 b0 00 00 00 	mov    0xb0(%rbx),%rdx
    7806:	4c 8d b3 c0 00 00 00 	lea    0xc0(%rbx),%r14
    780d:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    7813:	48 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%rsi
    781a:	4c 89 f7             	mov    %r14,%rdi
    781d:	48 29 c6             	sub    %rax,%rsi
    7820:	e8 ab 8e 00 00       	call   106d0 <memcpy>
    7825:	8b 83 a8 00 00 00    	mov    0xa8(%rbx),%eax
    782b:	85 c0                	test   %eax,%eax
    782d:	0f 84 2e 01 00 00    	je     7961 <internal_handle_exception+0x1b1>
    7833:	49 8b 45 78          	mov    0x78(%r13),%rax
    7837:	48 85 c0             	test   %rax,%rax
    783a:	0f 88 00 01 00 00    	js     7940 <internal_handle_exception+0x190>
    7840:	48 8d 50 01          	lea    0x1(%rax),%rdx
    7844:	83 bb 90 00 00 00 0e 	cmpl   $0xe,0x90(%rbx)
    784b:	49 89 55 78          	mov    %rdx,0x78(%r13)
    784f:	75 27                	jne    7878 <internal_handle_exception+0xc8>
    7851:	48 8b 15 28 29 01 00 	mov    0x12928(%rip),%rdx        # 1a180 <g_mm_pfhandler>
    7858:	48 85 d2             	test   %rdx,%rdx
    785b:	74 1b                	je     7878 <internal_handle_exception+0xc8>
    785d:	49 89 45 78          	mov    %rax,0x78(%r13)
    7861:	48 8d bb 98 00 00 00 	lea    0x98(%rbx),%rdi
    7868:	ff d2                	call   *%rdx
    786a:	83 c0 01             	add    $0x1,%eax
    786d:	0f 84 ee 00 00 00    	je     7961 <internal_handle_exception+0x1b1>
    7873:	49 83 45 78 01       	addq   $0x1,0x78(%r13)
    7878:	48 8d 3d 11 29 01 00 	lea    0x12911(%rip),%rdi        # 1a190 <_ZL14g_handler_lock>
    787f:	e8 ec 4e 00 00       	call   c770 <sgx_spin_lock>
    7884:	48 8b 05 0d 29 01 00 	mov    0x1290d(%rip),%rax        # 1a198 <_ZL12g_first_node>
    788b:	48 85 c0             	test   %rax,%rax
    788e:	0f 84 b9 00 00 00    	je     794d <internal_handle_exception+0x19d>
    7894:	45 31 ff             	xor    %r15d,%r15d
    7897:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    789e:	00 00 
    78a0:	48 8b 40 08          	mov    0x8(%rax),%rax
    78a4:	49 83 c7 08          	add    $0x8,%r15
    78a8:	48 85 c0             	test   %rax,%rax
    78ab:	75 f3                	jne    78a0 <internal_handle_exception+0xf0>
    78ad:	4d 85 ff             	test   %r15,%r15
    78b0:	0f 84 97 00 00 00    	je     794d <internal_handle_exception+0x19d>
    78b6:	4c 89 ff             	mov    %r15,%rdi
    78b9:	e8 02 4d 00 00       	call   c5c0 <alloca>
    78be:	49 89 c4             	mov    %rax,%r12
    78c1:	48 85 c0             	test   %rax,%rax
    78c4:	0f 84 a9 02 00 00    	je     7b73 <internal_handle_exception+0x3c3>
    78ca:	48 8b 05 c7 28 01 00 	mov    0x128c7(%rip),%rax        # 1a198 <_ZL12g_first_node>
    78d1:	4c 89 e1             	mov    %r12,%rcx
    78d4:	48 85 c0             	test   %rax,%rax
    78d7:	74 1b                	je     78f4 <internal_handle_exception+0x144>
    78d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    78e0:	48 8b 30             	mov    (%rax),%rsi
    78e3:	48 8b 40 08          	mov    0x8(%rax),%rax
    78e7:	48 83 c1 08          	add    $0x8,%rcx
    78eb:	48 89 71 f8          	mov    %rsi,-0x8(%rcx)
    78ef:	48 85 c0             	test   %rax,%rax
    78f2:	75 ec                	jne    78e0 <internal_handle_exception+0x130>
    78f4:	48 8d 3d 95 28 01 00 	lea    0x12895(%rip),%rdi        # 1a190 <_ZL14g_handler_lock>
    78fb:	4d 01 e7             	add    %r12,%r15
    78fe:	e8 fd 4e 00 00       	call   c800 <sgx_spin_unlock>
    7903:	49 83 6d 78 01       	subq   $0x1,0x78(%r13)
    7908:	eb 13                	jmp    791d <internal_handle_exception+0x16d>
    790a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7910:	49 83 c4 08          	add    $0x8,%r12
    7914:	4d 39 fc             	cmp    %r15,%r12
    7917:	0f 84 e7 01 00 00    	je     7b04 <internal_handle_exception+0x354>
    791d:	49 8b 04 24          	mov    (%r12),%rax
    7921:	48 89 df             	mov    %rbx,%rdi
    7924:	48 33 05 5d 28 01 00 	xor    0x1285d(%rip),%rax        # 1a188 <_ZL12g_veh_cookie>
    792b:	ff d0                	call   *%rax
    792d:	83 f8 ff             	cmp    $0xffffffff,%eax
    7930:	75 de                	jne    7910 <internal_handle_exception+0x160>
    7932:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    7936:	e8 55 fd ff ff       	call   7690 <is_valid_sp>
    793b:	84 c0                	test   %al,%al
    793d:	75 22                	jne    7961 <internal_handle_exception+0x1b1>
    793f:	90                   	nop
    7940:	49 c7 45 78 ff ff ff 	movq   $0xffffffffffffffff,0x78(%r13)
    7947:	ff 
    7948:	e8 ea ab 00 00       	call   12537 <abort>
    794d:	48 8d 3d 3c 28 01 00 	lea    0x1283c(%rip),%rdi        # 1a190 <_ZL14g_handler_lock>
    7954:	e8 a7 4e 00 00       	call   c800 <sgx_spin_unlock>
    7959:	49 c7 45 78 ff ff ff 	movq   $0xffffffffffffffff,0x78(%r13)
    7960:	ff 
    7961:	83 bb ac 00 00 00 01 	cmpl   $0x1,0xac(%rbx)
    7968:	74 12                	je     797c <internal_handle_exception+0x1cc>
    796a:	4c 89 f7             	mov    %r14,%rdi
    796d:	e8 3f a3 00 00       	call   11cb1 <restore_xregs>
    7972:	48 89 df             	mov    %rbx,%rdi
    7975:	e8 d0 ab 00 00       	call   1254a <continue_execution>
    797a:	eb c4                	jmp    7940 <internal_handle_exception+0x190>
    797c:	48 89 df             	mov    %rbx,%rdi
    797f:	e8 cc ed ff ff       	call   6750 <sgx_apply_mitigations>
    7984:	4c 89 f7             	mov    %r14,%rdi
    7987:	e8 25 a3 00 00       	call   11cb1 <restore_xregs>
    798c:	e8 b2 a7 00 00       	call   12143 <get_thread_data>
    7991:	49 89 c6             	mov    %rax,%r14
    7994:	48 8b 40 10          	mov    0x10(%rax),%rax
    7998:	49 89 c4             	mov    %rax,%r12
    799b:	49 81 e4 00 f0 ff ff 	and    $0xfffffffffffff000,%r12
    79a2:	48 3d ff 0f 00 00    	cmp    $0xfff,%rax
    79a8:	77 07                	ja     79b1 <internal_handle_exception+0x201>
    79aa:	4c 8d a0 00 f0 ff ff 	lea    -0x1000(%rax),%r12
    79b1:	48 89 d8             	mov    %rbx,%rax
    79b4:	49 8b 4e 18          	mov    0x18(%r14),%rcx
    79b8:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    79be:	4c 39 e0             	cmp    %r12,%rax
    79c1:	0f 84 93 01 00 00    	je     7b5a <internal_handle_exception+0x3aa>
    79c7:	48 05 00 10 00 00    	add    $0x1000,%rax
    79cd:	48 83 c8 01          	or     $0x1,%rax
    79d1:	49 89 c4             	mov    %rax,%r12
    79d4:	48 8b 83 88 00 00 00 	mov    0x88(%rbx),%rax
    79db:	49 89 c7             	mov    %rax,%r15
    79de:	48 c1 e8 0b          	shr    $0xb,%rax
    79e2:	48 89 c1             	mov    %rax,%rcx
    79e5:	49 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%r15
    79ec:	81 e1 fe 0f 00 00    	and    $0xffe,%ecx
    79f2:	48 03 0d df 05 01 00 	add    0x105df(%rip),%rcx        # 17fd8 <_GLOBAL_OFFSET_TABLE_+0x30>
    79f9:	44 0f b7 09          	movzwl (%rcx),%r9d
    79fd:	4b 8d 14 39          	lea    (%r9,%r15,1),%rdx
    7a01:	80 3a c3             	cmpb   $0xc3,(%rdx)
    7a04:	74 3b                	je     7a41 <internal_handle_exception+0x291>
    7a06:	4d 89 f9             	mov    %r15,%r9
    7a09:	49 8d 87 00 10 00 00 	lea    0x1000(%r15),%rax
    7a10:	eb 13                	jmp    7a25 <internal_handle_exception+0x275>
    7a12:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7a18:	49 83 c1 01          	add    $0x1,%r9
    7a1c:	4c 39 c8             	cmp    %r9,%rax
    7a1f:	0f 84 5f 01 00 00    	je     7b84 <internal_handle_exception+0x3d4>
    7a25:	41 80 39 c3          	cmpb   $0xc3,(%r9)
    7a29:	75 ed                	jne    7a18 <internal_handle_exception+0x268>
    7a2b:	4c 39 c8             	cmp    %r9,%rax
    7a2e:	0f 84 50 01 00 00    	je     7b84 <internal_handle_exception+0x3d4>
    7a34:	44 89 c8             	mov    %r9d,%eax
    7a37:	4c 89 ca             	mov    %r9,%rdx
    7a3a:	66 25 ff 0f          	and    $0xfff,%ax
    7a3e:	66 89 01             	mov    %ax,(%rcx)
    7a41:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
    7a45:	48 89 df             	mov    %rbx,%rdi
    7a48:	48 89 55 a0          	mov    %rdx,-0x60(%rbp)
    7a4c:	e8 0f ca ff ff       	call   4460 <ct_decode>
    7a51:	4d 89 e0             	mov    %r12,%r8
    7a54:	be 01 00 00 00       	mov    $0x1,%esi
    7a59:	49 83 e0 fe          	and    $0xfffffffffffffffe,%r8
    7a5d:	4c 63 c8             	movslq %eax,%r9
    7a60:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    7a64:	4c 89 c1             	mov    %r8,%rcx
    7a67:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
    7a6b:	49 83 f9 01          	cmp    $0x1,%r9
    7a6f:	48 0f 44 c8          	cmove  %rax,%rcx
    7a73:	49 83 f9 02          	cmp    $0x2,%r9
    7a77:	48 0f 44 c8          	cmove  %rax,%rcx
    7a7b:	48 89 cf             	mov    %rcx,%rdi
    7a7e:	4c 89 4d b0          	mov    %r9,-0x50(%rbp)
    7a82:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
    7a86:	e8 d5 e0 ff ff       	call   5b60 <sgx_is_within_enclave>
    7a8b:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
    7a8f:	4c 8b 45 a8          	mov    -0x58(%rbp),%r8
    7a93:	85 c0                	test   %eax,%eax
    7a95:	4c 8b 4d b0          	mov    -0x50(%rbp),%r9
    7a99:	48 98                	cltq   
    7a9b:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
    7a9f:	4c 0f 45 c1          	cmovne %rcx,%r8
    7aa3:	4c 89 f9             	mov    %r15,%rcx
    7aa6:	48 83 c9 01          	or     $0x1,%rcx
    7aaa:	49 83 f9 02          	cmp    $0x2,%r9
    7aae:	4c 0f 44 f9          	cmove  %rcx,%r15
    7ab2:	4c 89 fe             	mov    %r15,%rsi
    7ab5:	48 83 e6 fe          	and    $0xfffffffffffffffe,%rsi
    7ab9:	48 83 f8 01          	cmp    $0x1,%rax
    7abd:	49 0f 44 f7          	cmove  %r15,%rsi
    7ac1:	41 83 ae bc 00 00 00 	subl   $0x1,0xbc(%r14)
    7ac8:	01 
    7ac9:	78 57                	js     7b22 <internal_handle_exception+0x372>
    7acb:	41 8b 8e b8 00 00 00 	mov    0xb8(%r14),%ecx
    7ad2:	49 89 d1             	mov    %rdx,%r9
    7ad5:	48 89 df             	mov    %rbx,%rdi
    7ad8:	4c 89 e2             	mov    %r12,%rdx
    7adb:	89 c8                	mov    %ecx,%eax
    7add:	c1 e1 04             	shl    $0x4,%ecx
    7ae0:	d1 e8                	shr    %eax
    7ae2:	83 e1 10             	and    $0x10,%ecx
    7ae5:	48 09 f1             	or     %rsi,%rcx
    7ae8:	41 89 86 b8 00 00 00 	mov    %eax,0xb8(%r14)
    7aef:	49 8b 76 20          	mov    0x20(%r14),%rsi
    7af3:	48 81 c6 a7 00 00 00 	add    $0xa7,%rsi
    7afa:	e8 01 a3 00 00       	call   11e00 <constant_time_apply_sgxstep_mitigation_and_continue_execution>
    7aff:	e9 3c fe ff ff       	jmp    7940 <internal_handle_exception+0x190>
    7b04:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    7b08:	e8 83 fb ff ff       	call   7690 <is_valid_sp>
    7b0d:	84 c0                	test   %al,%al
    7b0f:	0f 84 2b fe ff ff    	je     7940 <internal_handle_exception+0x190>
    7b15:	49 c7 45 78 ff ff ff 	movq   $0xffffffffffffffff,0x78(%r13)
    7b1c:	ff 
    7b1d:	e9 3f fe ff ff       	jmp    7961 <internal_handle_exception+0x1b1>
    7b22:	49 8d be b8 00 00 00 	lea    0xb8(%r14),%rdi
    7b29:	48 89 75 a8          	mov    %rsi,-0x58(%rbp)
    7b2d:	4c 89 45 b0          	mov    %r8,-0x50(%rbp)
    7b31:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    7b35:	e8 da a9 00 00       	call   12514 <do_rdrand>
    7b3a:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    7b3e:	4c 8b 45 b0          	mov    -0x50(%rbp),%r8
    7b42:	85 c0                	test   %eax,%eax
    7b44:	48 8b 75 a8          	mov    -0x58(%rbp),%rsi
    7b48:	74 46                	je     7b90 <internal_handle_exception+0x3e0>
    7b4a:	41 c7 86 bc 00 00 00 	movl   $0x1f,0xbc(%r14)
    7b51:	1f 00 00 00 
    7b55:	e9 71 ff ff ff       	jmp    7acb <internal_handle_exception+0x31b>
    7b5a:	48 81 e1 00 f0 ff ff 	and    $0xfffffffffffff000,%rcx
    7b61:	4c 39 e1             	cmp    %r12,%rcx
    7b64:	0f 84 6a fe ff ff    	je     79d4 <internal_handle_exception+0x224>
    7b6a:	49 83 cc 01          	or     $0x1,%r12
    7b6e:	e9 61 fe ff ff       	jmp    79d4 <internal_handle_exception+0x224>
    7b73:	48 8d 3d 16 26 01 00 	lea    0x12616(%rip),%rdi        # 1a190 <_ZL14g_handler_lock>
    7b7a:	e8 81 4c 00 00       	call   c800 <sgx_spin_unlock>
    7b7f:	e9 bc fd ff ff       	jmp    7940 <internal_handle_exception+0x190>
    7b84:	48 8d 15 6c a5 00 00 	lea    0xa56c(%rip),%rdx        # 120f7 <__ct_mitigation_ret>
    7b8b:	e9 b1 fe ff ff       	jmp    7a41 <internal_handle_exception+0x291>
    7b90:	49 c7 46 78 ff ff ff 	movq   $0xffffffffffffffff,0x78(%r14)
    7b97:	ff 
    7b98:	e8 9a a9 00 00       	call   12537 <abort>
    7b9d:	0f 1f 00             	nopl   (%rax)

0000000000007ba0 <sgx_register_exception_handler>:
    7ba0:	f3 0f 1e fa          	endbr64 
    7ba4:	41 55                	push   %r13
    7ba6:	41 54                	push   %r12
    7ba8:	41 89 fc             	mov    %edi,%r12d
    7bab:	55                   	push   %rbp
    7bac:	48 89 f5             	mov    %rsi,%rbp
    7baf:	53                   	push   %rbx
    7bb0:	48 83 ec 18          	sub    $0x18,%rsp
    7bb4:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    7bbb:	00 00 
    7bbd:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    7bc2:	31 c0                	xor    %eax,%eax
    7bc4:	48 83 3d bc 25 01 00 	cmpq   $0x0,0x125bc(%rip)        # 1a188 <_ZL12g_veh_cookie>
    7bcb:	00 
    7bcc:	0f 84 ae 00 00 00    	je     7c80 <sgx_register_exception_handler+0xe0>
    7bd2:	31 f6                	xor    %esi,%esi
    7bd4:	48 89 ef             	mov    %rbp,%rdi
    7bd7:	e8 84 df ff ff       	call   5b60 <sgx_is_within_enclave>
    7bdc:	85 c0                	test   %eax,%eax
    7bde:	0f 84 cc 00 00 00    	je     7cb0 <sgx_register_exception_handler+0x110>
    7be4:	bf 10 00 00 00       	mov    $0x10,%edi
    7be9:	e8 42 55 00 00       	call   d130 <dlmalloc>
    7bee:	48 89 c3             	mov    %rax,%rbx
    7bf1:	48 85 c0             	test   %rax,%rax
    7bf4:	0f 84 b6 00 00 00    	je     7cb0 <sgx_register_exception_handler+0x110>
    7bfa:	48 33 2d 87 25 01 00 	xor    0x12587(%rip),%rbp        # 1a188 <_ZL12g_veh_cookie>
    7c01:	4c 8d 2d 88 25 01 00 	lea    0x12588(%rip),%r13        # 1a190 <_ZL14g_handler_lock>
    7c08:	48 89 28             	mov    %rbp,(%rax)
    7c0b:	4c 89 ef             	mov    %r13,%rdi
    7c0e:	e8 5d 4b 00 00       	call   c770 <sgx_spin_lock>
    7c13:	48 8b 15 7e 25 01 00 	mov    0x1257e(%rip),%rdx        # 1a198 <_ZL12g_first_node>
    7c1a:	45 85 e4             	test   %r12d,%r12d
    7c1d:	75 29                	jne    7c48 <sgx_register_exception_handler+0xa8>
    7c1f:	48 85 d2             	test   %rdx,%rdx
    7c22:	74 24                	je     7c48 <sgx_register_exception_handler+0xa8>
    7c24:	0f 1f 40 00          	nopl   0x0(%rax)
    7c28:	48 89 d0             	mov    %rdx,%rax
    7c2b:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    7c2f:	48 85 d2             	test   %rdx,%rdx
    7c32:	75 f4                	jne    7c28 <sgx_register_exception_handler+0x88>
    7c34:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
    7c3b:	00 
    7c3c:	48 89 58 08          	mov    %rbx,0x8(%rax)
    7c40:	eb 11                	jmp    7c53 <sgx_register_exception_handler+0xb3>
    7c42:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7c48:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    7c4c:	48 89 1d 45 25 01 00 	mov    %rbx,0x12545(%rip)        # 1a198 <_ZL12g_first_node>
    7c53:	4c 89 ef             	mov    %r13,%rdi
    7c56:	e8 a5 4b 00 00       	call   c800 <sgx_spin_unlock>
    7c5b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    7c60:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    7c67:	00 00 
    7c69:	75 7e                	jne    7ce9 <sgx_register_exception_handler+0x149>
    7c6b:	48 83 c4 18          	add    $0x18,%rsp
    7c6f:	48 89 d8             	mov    %rbx,%rax
    7c72:	5b                   	pop    %rbx
    7c73:	5d                   	pop    %rbp
    7c74:	41 5c                	pop    %r12
    7c76:	41 5d                	pop    %r13
    7c78:	c3                   	ret    
    7c79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7c80:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    7c87:	00 
    7c88:	48 89 e3             	mov    %rsp,%rbx
    7c8b:	eb 0a                	jmp    7c97 <sgx_register_exception_handler+0xf7>
    7c8d:	0f 1f 00             	nopl   (%rax)
    7c90:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
    7c95:	75 21                	jne    7cb8 <sgx_register_exception_handler+0x118>
    7c97:	be 08 00 00 00       	mov    $0x8,%esi
    7c9c:	48 89 df             	mov    %rbx,%rdi
    7c9f:	e8 bc e0 ff ff       	call   5d60 <sgx_read_rand>
    7ca4:	85 c0                	test   %eax,%eax
    7ca6:	74 e8                	je     7c90 <sgx_register_exception_handler+0xf0>
    7ca8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    7caf:	00 
    7cb0:	31 db                	xor    %ebx,%ebx
    7cb2:	eb a7                	jmp    7c5b <sgx_register_exception_handler+0xbb>
    7cb4:	0f 1f 40 00          	nopl   0x0(%rax)
    7cb8:	4c 8d 2d d1 24 01 00 	lea    0x124d1(%rip),%r13        # 1a190 <_ZL14g_handler_lock>
    7cbf:	4c 89 ef             	mov    %r13,%rdi
    7cc2:	e8 a9 4a 00 00       	call   c770 <sgx_spin_lock>
    7cc7:	48 83 3d b9 24 01 00 	cmpq   $0x0,0x124b9(%rip)        # 1a188 <_ZL12g_veh_cookie>
    7cce:	00 
    7ccf:	75 0b                	jne    7cdc <sgx_register_exception_handler+0x13c>
    7cd1:	48 8b 04 24          	mov    (%rsp),%rax
    7cd5:	48 89 05 ac 24 01 00 	mov    %rax,0x124ac(%rip)        # 1a188 <_ZL12g_veh_cookie>
    7cdc:	4c 89 ef             	mov    %r13,%rdi
    7cdf:	e8 1c 4b 00 00       	call   c800 <sgx_spin_unlock>
    7ce4:	e9 e9 fe ff ff       	jmp    7bd2 <sgx_register_exception_handler+0x32>
    7ce9:	e8 02 8d 00 00       	call   109f0 <__stack_chk_fail>
    7cee:	66 90                	xchg   %ax,%ax

0000000000007cf0 <sgx_unregister_exception_handler>:
    7cf0:	f3 0f 1e fa          	endbr64 
    7cf4:	48 85 ff             	test   %rdi,%rdi
    7cf7:	0f 84 9b 00 00 00    	je     7d98 <sgx_unregister_exception_handler+0xa8>
    7cfd:	55                   	push   %rbp
    7cfe:	48 8d 2d 8b 24 01 00 	lea    0x1248b(%rip),%rbp        # 1a190 <_ZL14g_handler_lock>
    7d05:	53                   	push   %rbx
    7d06:	48 89 fb             	mov    %rdi,%rbx
    7d09:	48 89 ef             	mov    %rbp,%rdi
    7d0c:	48 83 ec 08          	sub    $0x8,%rsp
    7d10:	e8 5b 4a 00 00       	call   c770 <sgx_spin_lock>
    7d15:	48 8b 05 7c 24 01 00 	mov    0x1247c(%rip),%rax        # 1a198 <_ZL12g_first_node>
    7d1c:	48 85 c0             	test   %rax,%rax
    7d1f:	74 20                	je     7d41 <sgx_unregister_exception_handler+0x51>
    7d21:	48 39 d8             	cmp    %rbx,%rax
    7d24:	75 0f                	jne    7d35 <sgx_unregister_exception_handler+0x45>
    7d26:	eb 58                	jmp    7d80 <sgx_unregister_exception_handler+0x90>
    7d28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    7d2f:	00 
    7d30:	48 39 d8             	cmp    %rbx,%rax
    7d33:	74 23                	je     7d58 <sgx_unregister_exception_handler+0x68>
    7d35:	48 89 c2             	mov    %rax,%rdx
    7d38:	48 8b 40 08          	mov    0x8(%rax),%rax
    7d3c:	48 85 c0             	test   %rax,%rax
    7d3f:	75 ef                	jne    7d30 <sgx_unregister_exception_handler+0x40>
    7d41:	48 89 ef             	mov    %rbp,%rdi
    7d44:	e8 b7 4a 00 00       	call   c800 <sgx_spin_unlock>
    7d49:	48 83 c4 08          	add    $0x8,%rsp
    7d4d:	31 c0                	xor    %eax,%eax
    7d4f:	5b                   	pop    %rbx
    7d50:	5d                   	pop    %rbp
    7d51:	c3                   	ret    
    7d52:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7d58:	48 8b 43 08          	mov    0x8(%rbx),%rax
    7d5c:	48 89 ef             	mov    %rbp,%rdi
    7d5f:	48 89 42 08          	mov    %rax,0x8(%rdx)
    7d63:	e8 98 4a 00 00       	call   c800 <sgx_spin_unlock>
    7d68:	48 89 df             	mov    %rbx,%rdi
    7d6b:	e8 b0 71 00 00       	call   ef20 <dlfree>
    7d70:	48 83 c4 08          	add    $0x8,%rsp
    7d74:	b8 01 00 00 00       	mov    $0x1,%eax
    7d79:	5b                   	pop    %rbx
    7d7a:	5d                   	pop    %rbp
    7d7b:	c3                   	ret    
    7d7c:	0f 1f 40 00          	nopl   0x0(%rax)
    7d80:	48 8b 43 08          	mov    0x8(%rbx),%rax
    7d84:	48 89 ef             	mov    %rbp,%rdi
    7d87:	48 89 05 0a 24 01 00 	mov    %rax,0x1240a(%rip)        # 1a198 <_ZL12g_first_node>
    7d8e:	e8 6d 4a 00 00       	call   c800 <sgx_spin_unlock>
    7d93:	eb d3                	jmp    7d68 <sgx_unregister_exception_handler+0x78>
    7d95:	0f 1f 00             	nopl   (%rax)
    7d98:	31 c0                	xor    %eax,%eax
    7d9a:	c3                   	ret    
    7d9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000007da0 <trts_handle_exception>:
    7da0:	f3 0f 1e fa          	endbr64 
    7da4:	41 57                	push   %r15
    7da6:	41 56                	push   %r14
    7da8:	41 55                	push   %r13
    7daa:	41 54                	push   %r12
    7dac:	55                   	push   %rbp
    7dad:	53                   	push   %rbx
    7dae:	48 89 fb             	mov    %rdi,%rbx
    7db1:	48 83 ec 08          	sub    $0x8,%rsp
    7db5:	e8 89 a3 00 00       	call   12143 <get_thread_data>
    7dba:	48 85 c0             	test   %rax,%rax
    7dbd:	48 89 c5             	mov    %rax,%rbp
    7dc0:	0f 94 c2             	sete   %dl
    7dc3:	48 85 db             	test   %rbx,%rbx
    7dc6:	0f 94 c0             	sete   %al
    7dc9:	08 c2                	or     %al,%dl
    7dcb:	75 33                	jne    7e00 <trts_handle_exception+0x60>
    7dcd:	48 89 df             	mov    %rbx,%rdi
    7dd0:	41 89 d4             	mov    %edx,%r12d
    7dd3:	e8 b8 e0 ff ff       	call   5e90 <check_static_stack_canary>
    7dd8:	85 c0                	test   %eax,%eax
    7dda:	75 24                	jne    7e00 <trts_handle_exception+0x60>
    7ddc:	e8 23 a3 00 00       	call   12104 <get_enclave_state>
    7de1:	83 f8 02             	cmp    $0x2,%eax
    7de4:	75 1a                	jne    7e00 <trts_handle_exception+0x60>
    7de6:	48 83 7d 78 ff       	cmpq   $0xffffffffffffffff,0x78(%rbp)
    7deb:	74 13                	je     7e00 <trts_handle_exception+0x60>
    7ded:	48 8b 45 10          	mov    0x10(%rbp),%rax
    7df1:	48 05 00 04 01 00    	add    $0x10400,%rax
    7df7:	48 39 c3             	cmp    %rax,%rbx
    7dfa:	74 24                	je     7e20 <trts_handle_exception+0x80>
    7dfc:	0f 1f 40 00          	nopl   0x0(%rax)
    7e00:	bf 03 00 00 00       	mov    $0x3,%edi
    7e05:	e8 0b a3 00 00       	call   12115 <set_enclave_state>
    7e0a:	b8 06 10 00 00       	mov    $0x1006,%eax
    7e0f:	48 83 c4 08          	add    $0x8,%rsp
    7e13:	5b                   	pop    %rbx
    7e14:	5d                   	pop    %rbp
    7e15:	41 5c                	pop    %r12
    7e17:	41 5d                	pop    %r13
    7e19:	41 5e                	pop    %r14
    7e1b:	41 5f                	pop    %r15
    7e1d:	c3                   	ret    
    7e1e:	66 90                	xchg   %ax,%ax
    7e20:	4c 8b 6d 20          	mov    0x20(%rbp),%r13
    7e24:	e8 37 f9 ff ff       	call   7760 <get_xsave_size>
    7e29:	48 05 b7 10 00 00    	add    $0x10b7,%rax
    7e2f:	49 81 e5 00 f0 ff ff 	and    $0xfffffffffffff000,%r13
    7e36:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    7e3c:	49 29 c5             	sub    %rax,%r13
    7e3f:	4c 39 eb             	cmp    %r13,%rbx
    7e42:	75 bc                	jne    7e00 <trts_handle_exception+0x60>
    7e44:	4c 8b 6d 20          	mov    0x20(%rbp),%r13
    7e48:	be 08 00 00 00       	mov    $0x8,%esi
    7e4d:	4d 8b b5 90 00 00 00 	mov    0x90(%r13),%r14
    7e54:	4c 89 f7             	mov    %r14,%rdi
    7e57:	e8 64 dd ff ff       	call   5bc0 <sgx_is_outside_enclave>
    7e5c:	85 c0                	test   %eax,%eax
    7e5e:	0f 84 ec 01 00 00    	je     8050 <trts_handle_exception+0x2b0>
    7e64:	49 8b 5d 20          	mov    0x20(%r13),%rbx
    7e68:	49 39 de             	cmp    %rbx,%r14
    7e6b:	0f 84 df 01 00 00    	je     8050 <trts_handle_exception+0x2b0>
    7e71:	31 f6                	xor    %esi,%esi
    7e73:	48 89 df             	mov    %rbx,%rdi
    7e76:	e8 d5 f7 ff ff       	call   7650 <is_stack_addr>
    7e7b:	84 c0                	test   %al,%al
    7e7d:	0f 84 cd 01 00 00    	je     8050 <trts_handle_exception+0x2b0>
    7e83:	48 8b 45 38          	mov    0x38(%rbp),%rax
    7e87:	48 8d b0 b8 01 00 00 	lea    0x1b8(%rax),%rsi
    7e8e:	48 29 f3             	sub    %rsi,%rbx
    7e91:	48 83 e3 c0          	and    $0xffffffffffffffc0,%rbx
    7e95:	48 89 df             	mov    %rbx,%rdi
    7e98:	e8 b3 f7 ff ff       	call   7650 <is_stack_addr>
    7e9d:	84 c0                	test   %al,%al
    7e9f:	0f 84 ab 01 00 00    	je     8050 <trts_handle_exception+0x2b0>
    7ea5:	4c 8d 7b f8          	lea    -0x8(%rbx),%r15
    7ea9:	be 08 00 00 00       	mov    $0x8,%esi
    7eae:	4c 89 ff             	mov    %r15,%rdi
    7eb1:	e8 9a f7 ff ff       	call   7650 <is_stack_addr>
    7eb6:	41 89 c6             	mov    %eax,%r14d
    7eb9:	84 c0                	test   %al,%al
    7ebb:	0f 84 8f 01 00 00    	je     8050 <trts_handle_exception+0x2b0>
    7ec1:	48 8b bd b0 00 00 00 	mov    0xb0(%rbp),%rdi
    7ec8:	49 39 ff             	cmp    %rdi,%r15
    7ecb:	0f 83 93 01 00 00    	jae    8064 <trts_handle_exception+0x2c4>
    7ed1:	4c 8d a7 ff 0f 00 00 	lea    0xfff(%rdi),%r12
    7ed8:	4d 29 fc             	sub    %r15,%r12
    7edb:	49 81 e4 00 f0 ff ff 	and    $0xfffffffffffff000,%r12
    7ee2:	49 39 fc             	cmp    %rdi,%r12
    7ee5:	0f 83 65 01 00 00    	jae    8050 <trts_handle_exception+0x2b0>
    7eeb:	4c 29 e7             	sub    %r12,%rdi
    7eee:	48 3b 7d 18          	cmp    0x18(%rbp),%rdi
    7ef2:	0f 82 58 01 00 00    	jb     8050 <trts_handle_exception+0x2b0>
    7ef8:	4d 85 e4             	test   %r12,%r12
    7efb:	0f 84 4f 01 00 00    	je     8050 <trts_handle_exception+0x2b0>
    7f01:	4c 89 e6             	mov    %r12,%rsi
    7f04:	e8 b7 3a 00 00       	call   b9c0 <mm_commit>
    7f09:	85 c0                	test   %eax,%eax
    7f0b:	0f 85 3f 01 00 00    	jne    8050 <trts_handle_exception+0x2b0>
    7f11:	48 8d 05 ec fe 00 00 	lea    0xfeec(%rip),%rax        # 17e04 <g_aexnotify_supported>
    7f18:	4c 29 a5 b0 00 00 00 	sub    %r12,0xb0(%rbp)
    7f1f:	45 89 f4             	mov    %r14d,%r12d
    7f22:	8b 08                	mov    (%rax),%ecx
    7f24:	31 c0                	xor    %eax,%eax
    7f26:	89 83 a8 00 00 00    	mov    %eax,0xa8(%rbx)
    7f2c:	41 0f b6 85 a0 00 00 	movzbl 0xa0(%r13),%eax
    7f33:	00 
    7f34:	89 83 90 00 00 00    	mov    %eax,0x90(%rbx)
    7f3a:	41 0f b6 95 a1 00 00 	movzbl 0xa1(%r13),%edx
    7f41:	00 
    7f42:	83 e8 0d             	sub    $0xd,%eax
    7f45:	83 e2 07             	and    $0x7,%edx
    7f48:	89 93 94 00 00 00    	mov    %edx,0x94(%rbx)
    7f4e:	48 8b 55 38          	mov    0x38(%rbp),%rdx
    7f52:	48 89 93 b0 00 00 00 	mov    %rdx,0xb0(%rbx)
    7f59:	49 8b 55 00          	mov    0x0(%r13),%rdx
    7f5d:	48 89 13             	mov    %rdx,(%rbx)
    7f60:	49 8b 55 08          	mov    0x8(%r13),%rdx
    7f64:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    7f68:	49 8b 55 10          	mov    0x10(%r13),%rdx
    7f6c:	48 89 53 10          	mov    %rdx,0x10(%rbx)
    7f70:	49 8b 55 18          	mov    0x18(%r13),%rdx
    7f74:	48 89 53 18          	mov    %rdx,0x18(%rbx)
    7f78:	49 8b 55 20          	mov    0x20(%r13),%rdx
    7f7c:	48 89 53 20          	mov    %rdx,0x20(%rbx)
    7f80:	49 8b 55 28          	mov    0x28(%r13),%rdx
    7f84:	48 89 53 28          	mov    %rdx,0x28(%rbx)
    7f88:	49 8b 55 30          	mov    0x30(%r13),%rdx
    7f8c:	48 89 53 30          	mov    %rdx,0x30(%rbx)
    7f90:	49 8b 55 38          	mov    0x38(%r13),%rdx
    7f94:	48 89 53 38          	mov    %rdx,0x38(%rbx)
    7f98:	49 8b 95 80 00 00 00 	mov    0x80(%r13),%rdx
    7f9f:	48 89 93 80 00 00 00 	mov    %rdx,0x80(%rbx)
    7fa6:	49 8b 95 88 00 00 00 	mov    0x88(%r13),%rdx
    7fad:	48 89 93 88 00 00 00 	mov    %rdx,0x88(%rbx)
    7fb4:	49 8b 75 40          	mov    0x40(%r13),%rsi
    7fb8:	48 89 73 40          	mov    %rsi,0x40(%rbx)
    7fbc:	49 8b 75 48          	mov    0x48(%r13),%rsi
    7fc0:	48 89 73 48          	mov    %rsi,0x48(%rbx)
    7fc4:	49 8b 75 50          	mov    0x50(%r13),%rsi
    7fc8:	48 89 73 50          	mov    %rsi,0x50(%rbx)
    7fcc:	49 8b 75 58          	mov    0x58(%r13),%rsi
    7fd0:	48 89 73 58          	mov    %rsi,0x58(%rbx)
    7fd4:	49 8b 75 60          	mov    0x60(%r13),%rsi
    7fd8:	48 89 73 60          	mov    %rsi,0x60(%rbx)
    7fdc:	49 8b 75 68          	mov    0x68(%r13),%rsi
    7fe0:	48 89 73 68          	mov    %rsi,0x68(%rbx)
    7fe4:	49 8b 75 70          	mov    0x70(%r13),%rsi
    7fe8:	48 89 73 70          	mov    %rsi,0x70(%rbx)
    7fec:	49 8b 75 78          	mov    0x78(%r13),%rsi
    7ff0:	48 89 73 78          	mov    %rsi,0x78(%rbx)
    7ff4:	83 f8 01             	cmp    $0x1,%eax
    7ff7:	77 15                	ja     800e <trts_handle_exception+0x26e>
    7ff9:	49 8b 45 f0          	mov    -0x10(%r13),%rax
    7ffd:	48 89 83 98 00 00 00 	mov    %rax,0x98(%rbx)
    8004:	41 8b 45 f8          	mov    -0x8(%r13),%eax
    8008:	89 83 a0 00 00 00    	mov    %eax,0xa0(%rbx)
    800e:	85 c9                	test   %ecx,%ecx
    8010:	0f 85 99 00 00 00    	jne    80af <trts_handle_exception+0x30f>
    8016:	45 84 e4             	test   %r12b,%r12b
    8019:	0f 85 ec 00 00 00    	jne    810b <trts_handle_exception+0x36b>
    801f:	48 8d 05 8a f7 ff ff 	lea    -0x876(%rip),%rax        # 77b0 <internal_handle_exception>
    8026:	4d 89 7d 20          	mov    %r15,0x20(%r13)
    802a:	49 89 85 88 00 00 00 	mov    %rax,0x88(%r13)
    8031:	49 89 5d 00          	mov    %rbx,0x0(%r13)
    8035:	49 89 5d 38          	mov    %rbx,0x38(%r13)
    8039:	48 8b 83 88 00 00 00 	mov    0x88(%rbx),%rax
    8040:	48 89 43 f8          	mov    %rax,-0x8(%rbx)
    8044:	31 c0                	xor    %eax,%eax
    8046:	e9 c4 fd ff ff       	jmp    7e0f <trts_handle_exception+0x6f>
    804b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8050:	bf 03 00 00 00       	mov    $0x3,%edi
    8055:	e8 bb a0 00 00       	call   12115 <set_enclave_state>
    805a:	b8 09 10 00 00       	mov    $0x1009,%eax
    805f:	e9 ab fd ff ff       	jmp    7e0f <trts_handle_exception+0x6f>
    8064:	48 8d 15 99 fd 00 00 	lea    0xfd99(%rip),%rdx        # 17e04 <g_aexnotify_supported>
    806b:	49 8b 85 88 00 00 00 	mov    0x88(%r13),%rax
    8072:	48 3b 05 57 ff 00 00 	cmp    0xff57(%rip),%rax        # 17fd0 <_GLOBAL_OFFSET_TABLE_+0x28>
    8079:	8b 0a                	mov    (%rdx),%ecx
    807b:	74 6a                	je     80e7 <trts_handle_exception+0x347>
    807d:	48 3b 05 44 ff 00 00 	cmp    0xff44(%rip),%rax        # 17fc8 <_GLOBAL_OFFSET_TABLE_+0x20>
    8084:	0f 84 8c 00 00 00    	je     8116 <trts_handle_exception+0x376>
    808a:	85 c9                	test   %ecx,%ecx
    808c:	75 0e                	jne    809c <trts_handle_exception+0x2fc>
    808e:	41 80 bd a3 00 00 00 	cmpb   $0x0,0xa3(%r13)
    8095:	00 
    8096:	0f 89 64 fd ff ff    	jns    7e00 <trts_handle_exception+0x60>
    809c:	41 0f b6 85 a3 00 00 	movzbl 0xa3(%r13),%eax
    80a3:	00 
    80a4:	c0 e8 07             	shr    $0x7,%al
    80a7:	0f b6 c0             	movzbl %al,%eax
    80aa:	e9 77 fe ff ff       	jmp    7f26 <trts_handle_exception+0x186>
    80af:	48 89 53 f8          	mov    %rdx,-0x8(%rbx)
    80b3:	e8 c8 f6 ff ff       	call   7780 <get_ssa_aexnotify>
    80b8:	48 8b 7d 58          	mov    0x58(%rbp),%rdi
    80bc:	89 83 ac 00 00 00    	mov    %eax,0xac(%rbx)
    80c2:	e8 ea 9b 00 00       	call   11cb1 <restore_xregs>
    80c7:	83 bb ac 00 00 00 01 	cmpl   $0x1,0xac(%rbx)
    80ce:	74 76                	je     8146 <trts_handle_exception+0x3a6>
    80d0:	48 8d 15 d9 f6 ff ff 	lea    -0x927(%rip),%rdx        # 77b0 <internal_handle_exception>
    80d7:	4c 89 fe             	mov    %r15,%rsi
    80da:	48 89 df             	mov    %rbx,%rdi
    80dd:	e8 ce a4 00 00       	call   125b0 <second_phase>
    80e2:	e9 19 fd ff ff       	jmp    7e00 <trts_handle_exception+0x60>
    80e7:	49 83 7d 00 00       	cmpq   $0x0,0x0(%r13)
    80ec:	75 8f                	jne    807d <trts_handle_exception+0x2dd>
    80ee:	48 83 c0 03          	add    $0x3,%rax
    80f2:	49 83 8d 80 00 00 00 	orq    $0x1,0x80(%r13)
    80f9:	01 
    80fa:	45 89 f4             	mov    %r14d,%r12d
    80fd:	49 89 85 88 00 00 00 	mov    %rax,0x88(%r13)
    8104:	31 c0                	xor    %eax,%eax
    8106:	e9 1b fe ff ff       	jmp    7f26 <trts_handle_exception+0x186>
    810b:	48 89 53 f8          	mov    %rdx,-0x8(%rbx)
    810f:	31 c0                	xor    %eax,%eax
    8111:	e9 f9 fc ff ff       	jmp    7e0f <trts_handle_exception+0x6f>
    8116:	49 83 7d 00 08       	cmpq   $0x8,0x0(%r13)
    811b:	0f 85 69 ff ff ff    	jne    808a <trts_handle_exception+0x2ea>
    8121:	48 83 c0 03          	add    $0x3,%rax
    8125:	49 83 8d 80 00 00 00 	orq    $0x40,0x80(%r13)
    812c:	40 
    812d:	45 89 f4             	mov    %r14d,%r12d
    8130:	49 89 85 88 00 00 00 	mov    %rax,0x88(%r13)
    8137:	31 c0                	xor    %eax,%eax
    8139:	49 c7 45 00 01 00 00 	movq   $0x1,0x0(%r13)
    8140:	00 
    8141:	e9 e0 fd ff ff       	jmp    7f26 <trts_handle_exception+0x186>
    8146:	31 ff                	xor    %edi,%edi
    8148:	e8 b3 e3 ff ff       	call   6500 <sgx_set_ssa_aexnotify>
    814d:	eb 81                	jmp    80d0 <trts_handle_exception+0x330>
    814f:	90                   	nop

0000000000008150 <get_xfeature_state>:
    8150:	f3 0f 1e fa          	endbr64 
    8154:	48 83 ec 08          	sub    $0x8,%rsp
    8158:	e8 f3 92 00 00       	call   11450 <sgx_self_report>
    815d:	31 d2                	xor    %edx,%edx
    815f:	48 8b 40 38          	mov    0x38(%rax),%rax
    8163:	48 83 f8 03          	cmp    $0x3,%rax
    8167:	0f 95 c2             	setne  %dl
    816a:	89 15 d4 1f 01 00    	mov    %edx,0x11fd4(%rip)        # 1a144 <g_xsave_enabled>
    8170:	48 83 c4 08          	add    $0x8,%rsp
    8174:	c3                   	ret    
    8175:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    817c:	00 00 00 
    817f:	90                   	nop

0000000000008180 <has_text_relo>:
    8180:	85 d2                	test   %edx,%edx
    8182:	74 5b                	je     81df <has_text_relo+0x5f>
    8184:	89 d2                	mov    %edx,%edx
    8186:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax
    818d:	00 
    818e:	48 29 d0             	sub    %rdx,%rax
    8191:	48 8d 04 c6          	lea    (%rsi,%rax,8),%rax
    8195:	eb 12                	jmp    81a9 <has_text_relo+0x29>
    8197:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    819e:	00 00 
    81a0:	48 83 c6 38          	add    $0x38,%rsi
    81a4:	48 39 c6             	cmp    %rax,%rsi
    81a7:	74 36                	je     81df <has_text_relo+0x5f>
    81a9:	83 3e 02             	cmpl   $0x2,(%rsi)
    81ac:	75 f2                	jne    81a0 <has_text_relo+0x20>
    81ae:	48 8b 56 20          	mov    0x20(%rsi),%rdx
    81b2:	48 03 7e 18          	add    0x18(%rsi),%rdi
    81b6:	48 c1 ea 04          	shr    $0x4,%rdx
    81ba:	74 23                	je     81df <has_text_relo+0x5f>
    81bc:	48 c1 e2 04          	shl    $0x4,%rdx
    81c0:	48 01 fa             	add    %rdi,%rdx
    81c3:	eb 12                	jmp    81d7 <has_text_relo+0x57>
    81c5:	0f 1f 00             	nopl   (%rax)
    81c8:	48 83 f8 16          	cmp    $0x16,%rax
    81cc:	74 1a                	je     81e8 <has_text_relo+0x68>
    81ce:	48 83 c7 10          	add    $0x10,%rdi
    81d2:	48 39 fa             	cmp    %rdi,%rdx
    81d5:	74 08                	je     81df <has_text_relo+0x5f>
    81d7:	48 8b 07             	mov    (%rdi),%rax
    81da:	48 85 c0             	test   %rax,%rax
    81dd:	75 e9                	jne    81c8 <has_text_relo+0x48>
    81df:	31 c0                	xor    %eax,%eax
    81e1:	c3                   	ret    
    81e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    81e8:	b8 01 00 00 00       	mov    $0x1,%eax
    81ed:	c3                   	ret    
    81ee:	66 90                	xchg   %ax,%ax

00000000000081f0 <do_relocs>:
    81f0:	49 89 d3             	mov    %rdx,%r11
    81f3:	48 8d 14 37          	lea    (%rdi,%rsi,1),%rdx
    81f7:	49 01 fb             	add    %rdi,%r11
    81fa:	48 85 c9             	test   %rcx,%rcx
    81fd:	0f 84 c2 01 00 00    	je     83c5 <do_relocs+0x1d5>
    8203:	55                   	push   %rbp
    8204:	49 89 c9             	mov    %rcx,%r9
    8207:	31 f6                	xor    %esi,%esi
    8209:	4c 8d 05 10 af 00 00 	lea    0xaf10(%rip),%r8        # 13120 <g_dyn_entry_table+0xa0>
    8210:	53                   	push   %rbx
    8211:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8218:	4c 8b 12             	mov    (%rdx),%r10
    821b:	48 8b 42 08          	mov    0x8(%rdx),%rax
    821f:	49 01 fa             	add    %rdi,%r10
    8222:	89 c1                	mov    %eax,%ecx
    8224:	83 f8 12             	cmp    $0x12,%eax
    8227:	0f 87 85 00 00 00    	ja     82b2 <do_relocs+0xc2>
    822d:	49 63 0c 88          	movslq (%r8,%rcx,4),%rcx
    8231:	4c 01 c1             	add    %r8,%rcx
    8234:	3e ff e1             	notrack jmp *%rcx
    8237:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    823e:	00 00 
    8240:	48 c1 e8 20          	shr    $0x20,%rax
    8244:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
    8248:	49 8d 1c c3          	lea    (%r11,%rax,8),%rbx
    824c:	0f b6 43 04          	movzbl 0x4(%rbx),%eax
    8250:	c0 e8 04             	shr    $0x4,%al
    8253:	3c 02                	cmp    $0x2,%al
    8255:	0f 84 05 01 00 00    	je     8360 <do_relocs+0x170>
    825b:	48 85 db             	test   %rbx,%rbx
    825e:	0f 84 8c 00 00 00    	je     82f0 <do_relocs+0x100>
    8264:	48 85 ff             	test   %rdi,%rdi
    8267:	74 49                	je     82b2 <do_relocs+0xc2>
    8269:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    826f:	75 41                	jne    82b2 <do_relocs+0xc2>
    8271:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    8276:	75 3a                	jne    82b2 <do_relocs+0xc2>
    8278:	48 89 f8             	mov    %rdi,%rax
    827b:	48 03 47 20          	add    0x20(%rdi),%rax
    827f:	74 31                	je     82b2 <do_relocs+0xc2>
    8281:	0f b7 6f 38          	movzwl 0x38(%rdi),%ebp
    8285:	66 85 ed             	test   %bp,%bp
    8288:	74 28                	je     82b2 <do_relocs+0xc2>
    828a:	83 ed 01             	sub    $0x1,%ebp
    828d:	48 8d 0c ed 00 00 00 	lea    0x0(,%rbp,8),%rcx
    8294:	00 
    8295:	48 29 e9             	sub    %rbp,%rcx
    8298:	48 8d 4c c8 38       	lea    0x38(%rax,%rcx,8),%rcx
    829d:	0f 1f 00             	nopl   (%rax)
    82a0:	83 38 07             	cmpl   $0x7,(%rax)
    82a3:	0f 84 e7 00 00 00    	je     8390 <do_relocs+0x1a0>
    82a9:	48 83 c0 38          	add    $0x38,%rax
    82ad:	48 39 c8             	cmp    %rcx,%rax
    82b0:	75 ee                	jne    82a0 <do_relocs+0xb0>
    82b2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    82b7:	5b                   	pop    %rbx
    82b8:	5d                   	pop    %rbp
    82b9:	c3                   	ret    
    82ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    82c0:	48 c1 e8 20          	shr    $0x20,%rax
    82c4:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
    82c8:	49 8d 0c c3          	lea    (%r11,%rax,8),%rcx
    82cc:	0f b6 41 04          	movzbl 0x4(%rcx),%eax
    82d0:	c0 e8 04             	shr    $0x4,%al
    82d3:	3c 02                	cmp    $0x2,%al
    82d5:	0f 84 95 00 00 00    	je     8370 <do_relocs+0x180>
    82db:	48 85 c9             	test   %rcx,%rcx
    82de:	74 10                	je     82f0 <do_relocs+0x100>
    82e0:	48 8b 42 10          	mov    0x10(%rdx),%rax
    82e4:	48 01 f8             	add    %rdi,%rax
    82e7:	48 03 41 08          	add    0x8(%rcx),%rax
    82eb:	49 89 02             	mov    %rax,(%r10)
    82ee:	66 90                	xchg   %ax,%ax
    82f0:	48 83 c6 01          	add    $0x1,%rsi
    82f4:	48 83 c2 18          	add    $0x18,%rdx
    82f8:	49 39 f1             	cmp    %rsi,%r9
    82fb:	0f 85 17 ff ff ff    	jne    8218 <do_relocs+0x28>
    8301:	31 c0                	xor    %eax,%eax
    8303:	5b                   	pop    %rbx
    8304:	5d                   	pop    %rbp
    8305:	c3                   	ret    
    8306:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    830d:	00 00 00 
    8310:	48 c1 e8 20          	shr    $0x20,%rax
    8314:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
    8318:	49 8d 0c c3          	lea    (%r11,%rax,8),%rcx
    831c:	0f b6 41 04          	movzbl 0x4(%rcx),%eax
    8320:	c0 e8 04             	shr    $0x4,%al
    8323:	3c 02                	cmp    $0x2,%al
    8325:	74 59                	je     8380 <do_relocs+0x190>
    8327:	48 85 c9             	test   %rcx,%rcx
    832a:	74 c4                	je     82f0 <do_relocs+0x100>
    832c:	48 8b 42 10          	mov    0x10(%rdx),%rax
    8330:	48 03 41 08          	add    0x8(%rcx),%rax
    8334:	49 89 02             	mov    %rax,(%r10)
    8337:	eb b7                	jmp    82f0 <do_relocs+0x100>
    8339:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8340:	49 c7 02 01 00 00 00 	movq   $0x1,(%r10)
    8347:	eb a7                	jmp    82f0 <do_relocs+0x100>
    8349:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8350:	48 8b 42 10          	mov    0x10(%rdx),%rax
    8354:	48 01 f8             	add    %rdi,%rax
    8357:	49 89 02             	mov    %rax,(%r10)
    835a:	eb 94                	jmp    82f0 <do_relocs+0x100>
    835c:	0f 1f 40 00          	nopl   0x0(%rax)
    8360:	48 83 7b 08 00       	cmpq   $0x0,0x8(%rbx)
    8365:	0f 85 f0 fe ff ff    	jne    825b <do_relocs+0x6b>
    836b:	eb 83                	jmp    82f0 <do_relocs+0x100>
    836d:	0f 1f 00             	nopl   (%rax)
    8370:	48 83 79 08 00       	cmpq   $0x0,0x8(%rcx)
    8375:	0f 85 60 ff ff ff    	jne    82db <do_relocs+0xeb>
    837b:	e9 70 ff ff ff       	jmp    82f0 <do_relocs+0x100>
    8380:	48 83 79 08 00       	cmpq   $0x0,0x8(%rcx)
    8385:	75 a0                	jne    8327 <do_relocs+0x137>
    8387:	e9 64 ff ff ff       	jmp    82f0 <do_relocs+0x100>
    838c:	0f 1f 40 00          	nopl   0x0(%rax)
    8390:	48 8b 48 28          	mov    0x28(%rax),%rcx
    8394:	48 8b 40 30          	mov    0x30(%rax),%rax
    8398:	48 83 f8 01          	cmp    $0x1,%rax
    839c:	76 0b                	jbe    83a9 <do_relocs+0x1b9>
    839e:	48 8d 4c 01 ff       	lea    -0x1(%rcx,%rax,1),%rcx
    83a3:	48 f7 d8             	neg    %rax
    83a6:	48 21 c1             	and    %rax,%rcx
    83a9:	48 85 c9             	test   %rcx,%rcx
    83ac:	0f 84 00 ff ff ff    	je     82b2 <do_relocs+0xc2>
    83b2:	48 8b 42 10          	mov    0x10(%rdx),%rax
    83b6:	48 03 43 08          	add    0x8(%rbx),%rax
    83ba:	48 29 c8             	sub    %rcx,%rax
    83bd:	49 89 02             	mov    %rax,(%r10)
    83c0:	e9 2b ff ff ff       	jmp    82f0 <do_relocs+0x100>
    83c5:	31 c0                	xor    %eax,%eax
    83c7:	c3                   	ret    
    83c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    83cf:	00 

00000000000083d0 <relocate_enclave>:
    83d0:	f3 0f 1e fa          	endbr64 
    83d4:	48 85 ff             	test   %rdi,%rdi
    83d7:	0f 84 d3 01 00 00    	je     85b0 <relocate_enclave+0x1e0>
    83dd:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    83e3:	0f 85 c7 01 00 00    	jne    85b0 <relocate_enclave+0x1e0>
    83e9:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    83ee:	0f 85 bc 01 00 00    	jne    85b0 <relocate_enclave+0x1e0>
    83f4:	41 57                	push   %r15
    83f6:	41 56                	push   %r14
    83f8:	41 55                	push   %r13
    83fa:	41 54                	push   %r12
    83fc:	55                   	push   %rbp
    83fd:	53                   	push   %rbx
    83fe:	48 89 fb             	mov    %rdi,%rbx
    8401:	48 83 ec 08          	sub    $0x8,%rsp
    8405:	48 03 5f 20          	add    0x20(%rdi),%rbx
    8409:	0f 84 fd 00 00 00    	je     850c <relocate_enclave+0x13c>
    840f:	0f b7 57 38          	movzwl 0x38(%rdi),%edx
    8413:	66 85 d2             	test   %dx,%dx
    8416:	0f 84 c4 01 00 00    	je     85e0 <relocate_enclave+0x210>
    841c:	83 ea 01             	sub    $0x1,%edx
    841f:	48 8d 2d 46 ad 00 00 	lea    0xad46(%rip),%rbp        # 1316c <g_dyn_entry_table+0xec>
    8426:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax
    842d:	00 
    842e:	48 29 d0             	sub    %rdx,%rax
    8431:	4c 8d 64 c3 38       	lea    0x38(%rbx,%rax,8),%r12
    8436:	eb 15                	jmp    844d <relocate_enclave+0x7d>
    8438:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    843f:	00 
    8440:	48 83 c3 38          	add    $0x38,%rbx
    8444:	49 39 dc             	cmp    %rbx,%r12
    8447:	0f 84 93 01 00 00    	je     85e0 <relocate_enclave+0x210>
    844d:	83 3b 02             	cmpl   $0x2,(%rbx)
    8450:	75 ee                	jne    8440 <relocate_enclave+0x70>
    8452:	48 8b 53 18          	mov    0x18(%rbx),%rdx
    8456:	4c 8b 53 20          	mov    0x20(%rbx),%r10
    845a:	48 01 fa             	add    %rdi,%rdx
    845d:	49 c1 ea 04          	shr    $0x4,%r10
    8461:	74 dd                	je     8440 <relocate_enclave+0x70>
    8463:	49 c1 e2 04          	shl    $0x4,%r10
    8467:	45 31 f6             	xor    %r14d,%r14d
    846a:	45 31 ed             	xor    %r13d,%r13d
    846d:	31 c0                	xor    %eax,%eax
    846f:	49 01 d2             	add    %rdx,%r10
    8472:	45 31 ff             	xor    %r15d,%r15d
    8475:	45 31 c9             	xor    %r9d,%r9d
    8478:	45 31 c0             	xor    %r8d,%r8d
    847b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8480:	48 8b 32             	mov    (%rdx),%rsi
    8483:	48 85 f6             	test   %rsi,%rsi
    8486:	74 30                	je     84b8 <relocate_enclave+0xe8>
    8488:	48 83 fe 17          	cmp    $0x17,%rsi
    848c:	77 1a                	ja     84a8 <relocate_enclave+0xd8>
    848e:	48 63 74 b5 00       	movslq 0x0(%rbp,%rsi,4),%rsi
    8493:	48 01 ee             	add    %rbp,%rsi
    8496:	3e ff e6             	notrack jmp *%rsi
    8499:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    84a0:	4c 8b 42 08          	mov    0x8(%rdx),%r8
    84a4:	0f 1f 40 00          	nopl   0x0(%rax)
    84a8:	48 83 c2 10          	add    $0x10,%rdx
    84ac:	49 39 d2             	cmp    %rdx,%r10
    84af:	75 cf                	jne    8480 <relocate_enclave+0xb0>
    84b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    84b8:	4d 85 c9             	test   %r9,%r9
    84bb:	0f 84 ff 00 00 00    	je     85c0 <relocate_enclave+0x1f0>
    84c1:	4d 85 ed             	test   %r13,%r13
    84c4:	74 46                	je     850c <relocate_enclave+0x13c>
    84c6:	31 d2                	xor    %edx,%edx
    84c8:	4c 89 ce             	mov    %r9,%rsi
    84cb:	4c 89 04 24          	mov    %r8,(%rsp)
    84cf:	49 f7 f5             	div    %r13
    84d2:	4c 89 c2             	mov    %r8,%rdx
    84d5:	48 89 c1             	mov    %rax,%rcx
    84d8:	e8 13 fd ff ff       	call   81f0 <do_relocs>
    84dd:	85 c0                	test   %eax,%eax
    84df:	75 2b                	jne    850c <relocate_enclave+0x13c>
    84e1:	4d 85 ff             	test   %r15,%r15
    84e4:	4c 8b 04 24          	mov    (%rsp),%r8
    84e8:	0f 84 52 ff ff ff    	je     8440 <relocate_enclave+0x70>
    84ee:	31 d2                	xor    %edx,%edx
    84f0:	4c 89 f0             	mov    %r14,%rax
    84f3:	4c 89 fe             	mov    %r15,%rsi
    84f6:	49 f7 f5             	div    %r13
    84f9:	4c 89 c2             	mov    %r8,%rdx
    84fc:	48 89 c1             	mov    %rax,%rcx
    84ff:	e8 ec fc ff ff       	call   81f0 <do_relocs>
    8504:	85 c0                	test   %eax,%eax
    8506:	0f 84 34 ff ff ff    	je     8440 <relocate_enclave+0x70>
    850c:	48 83 c4 08          	add    $0x8,%rsp
    8510:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8515:	5b                   	pop    %rbx
    8516:	5d                   	pop    %rbp
    8517:	41 5c                	pop    %r12
    8519:	41 5d                	pop    %r13
    851b:	41 5e                	pop    %r14
    851d:	41 5f                	pop    %r15
    851f:	c3                   	ret    
    8520:	4c 8b 7a 08          	mov    0x8(%rdx),%r15
    8524:	48 83 c2 10          	add    $0x10,%rdx
    8528:	49 39 d2             	cmp    %rdx,%r10
    852b:	0f 85 4f ff ff ff    	jne    8480 <relocate_enclave+0xb0>
    8531:	eb 85                	jmp    84b8 <relocate_enclave+0xe8>
    8533:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8538:	48 8b 42 08          	mov    0x8(%rdx),%rax
    853c:	48 83 c2 10          	add    $0x10,%rdx
    8540:	49 39 d2             	cmp    %rdx,%r10
    8543:	0f 85 37 ff ff ff    	jne    8480 <relocate_enclave+0xb0>
    8549:	e9 6a ff ff ff       	jmp    84b8 <relocate_enclave+0xe8>
    854e:	66 90                	xchg   %ax,%ax
    8550:	4c 8b 4a 08          	mov    0x8(%rdx),%r9
    8554:	48 83 c2 10          	add    $0x10,%rdx
    8558:	49 39 d2             	cmp    %rdx,%r10
    855b:	0f 85 1f ff ff ff    	jne    8480 <relocate_enclave+0xb0>
    8561:	e9 52 ff ff ff       	jmp    84b8 <relocate_enclave+0xe8>
    8566:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    856d:	00 00 00 
    8570:	4c 8b 72 08          	mov    0x8(%rdx),%r14
    8574:	48 83 c2 10          	add    $0x10,%rdx
    8578:	49 39 d2             	cmp    %rdx,%r10
    857b:	0f 85 ff fe ff ff    	jne    8480 <relocate_enclave+0xb0>
    8581:	e9 32 ff ff ff       	jmp    84b8 <relocate_enclave+0xe8>
    8586:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    858d:	00 00 00 
    8590:	4c 8b 6a 08          	mov    0x8(%rdx),%r13
    8594:	48 83 c2 10          	add    $0x10,%rdx
    8598:	49 39 d2             	cmp    %rdx,%r10
    859b:	0f 85 df fe ff ff    	jne    8480 <relocate_enclave+0xb0>
    85a1:	e9 12 ff ff ff       	jmp    84b8 <relocate_enclave+0xe8>
    85a6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    85ad:	00 00 00 
    85b0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    85b5:	c3                   	ret    
    85b6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    85bd:	00 00 00 
    85c0:	4d 85 ff             	test   %r15,%r15
    85c3:	0f 84 77 fe ff ff    	je     8440 <relocate_enclave+0x70>
    85c9:	4d 85 ed             	test   %r13,%r13
    85cc:	0f 84 3a ff ff ff    	je     850c <relocate_enclave+0x13c>
    85d2:	e9 17 ff ff ff       	jmp    84ee <relocate_enclave+0x11e>
    85d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    85de:	00 00 
    85e0:	48 83 c4 08          	add    $0x8,%rsp
    85e4:	31 c0                	xor    %eax,%eax
    85e6:	5b                   	pop    %rbx
    85e7:	5d                   	pop    %rbp
    85e8:	41 5c                	pop    %r12
    85ea:	41 5d                	pop    %r13
    85ec:	41 5e                	pop    %r14
    85ee:	41 5f                	pop    %r15
    85f0:	c3                   	ret    
    85f1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    85f8:	00 00 00 
    85fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000008600 <elf_tls_info>:
    8600:	f3 0f 1e fa          	endbr64 
    8604:	49 89 f0             	mov    %rsi,%r8
    8607:	48 89 f9             	mov    %rdi,%rcx
    860a:	48 89 d6             	mov    %rdx,%rsi
    860d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8612:	48 85 ff             	test   %rdi,%rdi
    8615:	74 7e                	je     8695 <elf_tls_info+0x95>
    8617:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    861d:	75 75                	jne    8694 <elf_tls_info+0x94>
    861f:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    8624:	75 6e                	jne    8694 <elf_tls_info+0x94>
    8626:	48 8b 47 20          	mov    0x20(%rdi),%rax
    862a:	48 01 f8             	add    %rdi,%rax
    862d:	4d 85 c0             	test   %r8,%r8
    8630:	0f 94 c2             	sete   %dl
    8633:	48 85 f6             	test   %rsi,%rsi
    8636:	40 0f 94 c7          	sete   %dil
    863a:	40 08 fa             	or     %dil,%dl
    863d:	75 50                	jne    868f <elf_tls_info+0x8f>
    863f:	48 85 c0             	test   %rax,%rax
    8642:	74 4b                	je     868f <elf_tls_info+0x8f>
    8644:	0f b7 79 38          	movzwl 0x38(%rcx),%edi
    8648:	49 c7 00 00 00 00 00 	movq   $0x0,(%r8)
    864f:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
    8656:	66 85 ff             	test   %di,%di
    8659:	74 31                	je     868c <elf_tls_info+0x8c>
    865b:	83 ef 01             	sub    $0x1,%edi
    865e:	48 8d 14 fd 00 00 00 	lea    0x0(,%rdi,8),%rdx
    8665:	00 
    8666:	48 29 fa             	sub    %rdi,%rdx
    8669:	48 8d 54 d0 38       	lea    0x38(%rax,%rdx,8),%rdx
    866e:	eb 09                	jmp    8679 <elf_tls_info+0x79>
    8670:	48 83 c0 38          	add    $0x38,%rax
    8674:	48 39 d0             	cmp    %rdx,%rax
    8677:	74 13                	je     868c <elf_tls_info+0x8c>
    8679:	83 38 07             	cmpl   $0x7,(%rax)
    867c:	75 f2                	jne    8670 <elf_tls_info+0x70>
    867e:	48 03 48 10          	add    0x10(%rax),%rcx
    8682:	49 89 08             	mov    %rcx,(%r8)
    8685:	48 8b 40 20          	mov    0x20(%rax),%rax
    8689:	48 89 06             	mov    %rax,(%rsi)
    868c:	31 c0                	xor    %eax,%eax
    868e:	c3                   	ret    
    868f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8694:	c3                   	ret    
    8695:	c3                   	ret    
    8696:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    869d:	00 00 00 

00000000000086a0 <elf_get_init_array>:
    86a0:	f3 0f 1e fa          	endbr64 
    86a4:	49 89 f8             	mov    %rdi,%r8
    86a7:	49 89 f1             	mov    %rsi,%r9
    86aa:	49 89 d2             	mov    %rdx,%r10
    86ad:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    86b2:	48 85 ff             	test   %rdi,%rdi
    86b5:	0f 84 c8 00 00 00    	je     8783 <elf_get_init_array+0xe3>
    86bb:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    86c1:	0f 85 b6 00 00 00    	jne    877d <elf_get_init_array+0xdd>
    86c7:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    86cc:	0f 85 ab 00 00 00    	jne    877d <elf_get_init_array+0xdd>
    86d2:	48 8b 57 20          	mov    0x20(%rdi),%rdx
    86d6:	48 01 fa             	add    %rdi,%rdx
    86d9:	48 85 f6             	test   %rsi,%rsi
    86dc:	0f 94 c0             	sete   %al
    86df:	4d 85 d2             	test   %r10,%r10
    86e2:	0f 94 c1             	sete   %cl
    86e5:	08 c8                	or     %cl,%al
    86e7:	0f 85 8b 00 00 00    	jne    8778 <elf_get_init_array+0xd8>
    86ed:	48 85 d2             	test   %rdx,%rdx
    86f0:	0f 84 82 00 00 00    	je     8778 <elf_get_init_array+0xd8>
    86f6:	0f b7 4f 38          	movzwl 0x38(%rdi),%ecx
    86fa:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
    8701:	49 c7 02 00 00 00 00 	movq   $0x0,(%r10)
    8708:	66 85 c9             	test   %cx,%cx
    870b:	74 73                	je     8780 <elf_get_init_array+0xe0>
    870d:	83 e9 01             	sub    $0x1,%ecx
    8710:	48 8d 04 cd 00 00 00 	lea    0x0(,%rcx,8),%rax
    8717:	00 
    8718:	48 29 c8             	sub    %rcx,%rax
    871b:	48 8d 7c c2 38       	lea    0x38(%rdx,%rax,8),%rdi
    8720:	eb 0f                	jmp    8731 <elf_get_init_array+0x91>
    8722:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8728:	48 83 c2 38          	add    $0x38,%rdx
    872c:	48 39 fa             	cmp    %rdi,%rdx
    872f:	74 4f                	je     8780 <elf_get_init_array+0xe0>
    8731:	83 3a 02             	cmpl   $0x2,(%rdx)
    8734:	75 f2                	jne    8728 <elf_get_init_array+0x88>
    8736:	48 8b 42 18          	mov    0x18(%rdx),%rax
    873a:	48 8b 72 20          	mov    0x20(%rdx),%rsi
    873e:	4c 01 c0             	add    %r8,%rax
    8741:	48 c1 ee 04          	shr    $0x4,%rsi
    8745:	74 e1                	je     8728 <elf_get_init_array+0x88>
    8747:	48 c1 e6 04          	shl    $0x4,%rsi
    874b:	48 01 c6             	add    %rax,%rsi
    874e:	eb 16                	jmp    8766 <elf_get_init_array+0xc6>
    8750:	48 83 f9 1b          	cmp    $0x1b,%rcx
    8754:	75 07                	jne    875d <elf_get_init_array+0xbd>
    8756:	48 8b 48 08          	mov    0x8(%rax),%rcx
    875a:	49 89 0a             	mov    %rcx,(%r10)
    875d:	48 83 c0 10          	add    $0x10,%rax
    8761:	48 39 c6             	cmp    %rax,%rsi
    8764:	74 c2                	je     8728 <elf_get_init_array+0x88>
    8766:	48 8b 08             	mov    (%rax),%rcx
    8769:	48 83 f9 19          	cmp    $0x19,%rcx
    876d:	75 e1                	jne    8750 <elf_get_init_array+0xb0>
    876f:	48 8b 48 08          	mov    0x8(%rax),%rcx
    8773:	49 89 09             	mov    %rcx,(%r9)
    8776:	eb e5                	jmp    875d <elf_get_init_array+0xbd>
    8778:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    877d:	c3                   	ret    
    877e:	66 90                	xchg   %ax,%ax
    8780:	31 c0                	xor    %eax,%eax
    8782:	c3                   	ret    
    8783:	c3                   	ret    
    8784:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    878b:	00 00 00 
    878e:	66 90                	xchg   %ax,%ax

0000000000008790 <elf_get_uninit_array>:
    8790:	f3 0f 1e fa          	endbr64 
    8794:	49 89 f8             	mov    %rdi,%r8
    8797:	49 89 f1             	mov    %rsi,%r9
    879a:	49 89 d2             	mov    %rdx,%r10
    879d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    87a2:	48 85 ff             	test   %rdi,%rdi
    87a5:	0f 84 c8 00 00 00    	je     8873 <elf_get_uninit_array+0xe3>
    87ab:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    87b1:	0f 85 b6 00 00 00    	jne    886d <elf_get_uninit_array+0xdd>
    87b7:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    87bc:	0f 85 ab 00 00 00    	jne    886d <elf_get_uninit_array+0xdd>
    87c2:	48 8b 57 20          	mov    0x20(%rdi),%rdx
    87c6:	48 01 fa             	add    %rdi,%rdx
    87c9:	48 85 f6             	test   %rsi,%rsi
    87cc:	0f 94 c0             	sete   %al
    87cf:	4d 85 d2             	test   %r10,%r10
    87d2:	0f 94 c1             	sete   %cl
    87d5:	08 c8                	or     %cl,%al
    87d7:	0f 85 8b 00 00 00    	jne    8868 <elf_get_uninit_array+0xd8>
    87dd:	48 85 d2             	test   %rdx,%rdx
    87e0:	0f 84 82 00 00 00    	je     8868 <elf_get_uninit_array+0xd8>
    87e6:	0f b7 4f 38          	movzwl 0x38(%rdi),%ecx
    87ea:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
    87f1:	49 c7 02 00 00 00 00 	movq   $0x0,(%r10)
    87f8:	66 85 c9             	test   %cx,%cx
    87fb:	74 73                	je     8870 <elf_get_uninit_array+0xe0>
    87fd:	83 e9 01             	sub    $0x1,%ecx
    8800:	48 8d 04 cd 00 00 00 	lea    0x0(,%rcx,8),%rax
    8807:	00 
    8808:	48 29 c8             	sub    %rcx,%rax
    880b:	48 8d 7c c2 38       	lea    0x38(%rdx,%rax,8),%rdi
    8810:	eb 0f                	jmp    8821 <elf_get_uninit_array+0x91>
    8812:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8818:	48 83 c2 38          	add    $0x38,%rdx
    881c:	48 39 fa             	cmp    %rdi,%rdx
    881f:	74 4f                	je     8870 <elf_get_uninit_array+0xe0>
    8821:	83 3a 02             	cmpl   $0x2,(%rdx)
    8824:	75 f2                	jne    8818 <elf_get_uninit_array+0x88>
    8826:	48 8b 42 18          	mov    0x18(%rdx),%rax
    882a:	48 8b 72 20          	mov    0x20(%rdx),%rsi
    882e:	4c 01 c0             	add    %r8,%rax
    8831:	48 c1 ee 04          	shr    $0x4,%rsi
    8835:	74 e1                	je     8818 <elf_get_uninit_array+0x88>
    8837:	48 c1 e6 04          	shl    $0x4,%rsi
    883b:	48 01 c6             	add    %rax,%rsi
    883e:	eb 16                	jmp    8856 <elf_get_uninit_array+0xc6>
    8840:	48 83 f9 1c          	cmp    $0x1c,%rcx
    8844:	75 07                	jne    884d <elf_get_uninit_array+0xbd>
    8846:	48 8b 48 08          	mov    0x8(%rax),%rcx
    884a:	49 89 0a             	mov    %rcx,(%r10)
    884d:	48 83 c0 10          	add    $0x10,%rax
    8851:	48 39 c6             	cmp    %rax,%rsi
    8854:	74 c2                	je     8818 <elf_get_uninit_array+0x88>
    8856:	48 8b 08             	mov    (%rax),%rcx
    8859:	48 83 f9 1a          	cmp    $0x1a,%rcx
    885d:	75 e1                	jne    8840 <elf_get_uninit_array+0xb0>
    885f:	48 8b 48 08          	mov    0x8(%rax),%rcx
    8863:	49 89 09             	mov    %rcx,(%r9)
    8866:	eb e5                	jmp    884d <elf_get_uninit_array+0xbd>
    8868:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    886d:	c3                   	ret    
    886e:	66 90                	xchg   %ax,%ax
    8870:	31 c0                	xor    %eax,%eax
    8872:	c3                   	ret    
    8873:	c3                   	ret    
    8874:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    887b:	00 00 00 
    887e:	66 90                	xchg   %ax,%ax

0000000000008880 <change_protection>:
    8880:	f3 0f 1e fa          	endbr64 
    8884:	48 85 ff             	test   %rdi,%rdi
    8887:	0f 84 be 01 00 00    	je     8a4b <change_protection+0x1cb>
    888d:	41 56                	push   %r14
    888f:	41 55                	push   %r13
    8891:	49 89 fd             	mov    %rdi,%r13
    8894:	41 54                	push   %r12
    8896:	55                   	push   %rbp
    8897:	53                   	push   %rbx
    8898:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    889e:	0f 85 bc 00 00 00    	jne    8960 <change_protection+0xe0>
    88a4:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    88a9:	0f 85 b1 00 00 00    	jne    8960 <change_protection+0xe0>
    88af:	48 89 fb             	mov    %rdi,%rbx
    88b2:	48 03 5f 20          	add    0x20(%rdi),%rbx
    88b6:	0f 84 a4 00 00 00    	je     8960 <change_protection+0xe0>
    88bc:	0f b7 57 38          	movzwl 0x38(%rdi),%edx
    88c0:	48 89 de             	mov    %rbx,%rsi
    88c3:	89 d1                	mov    %edx,%ecx
    88c5:	e8 b6 f8 ff ff       	call   8180 <has_text_relo>
    88ca:	41 89 c6             	mov    %eax,%r14d
    88cd:	66 85 c9             	test   %cx,%cx
    88d0:	0f 84 ea 00 00 00    	je     89c0 <change_protection+0x140>
    88d6:	49 bc ff ff ff ff 02 	movabs $0x2ffffffff,%r12
    88dd:	00 00 00 
    88e0:	31 ed                	xor    %ebp,%ebp
    88e2:	eb 18                	jmp    88fc <change_protection+0x7c>
    88e4:	0f 1f 40 00          	nopl   0x0(%rax)
    88e8:	41 0f b7 45 38       	movzwl 0x38(%r13),%eax
    88ed:	83 c5 01             	add    $0x1,%ebp
    88f0:	48 83 c3 38          	add    $0x38,%rbx
    88f4:	39 c5                	cmp    %eax,%ebp
    88f6:	0f 83 c4 00 00 00    	jae    89c0 <change_protection+0x140>
    88fc:	45 85 f6             	test   %r14d,%r14d
    88ff:	74 0c                	je     890d <change_protection+0x8d>
    8901:	48 8b 03             	mov    (%rbx),%rax
    8904:	4c 21 e0             	and    %r12,%rax
    8907:	48 83 f8 01          	cmp    $0x1,%rax
    890b:	74 63                	je     8970 <change_protection+0xf0>
    890d:	81 3b 52 e5 74 64    	cmpl   $0x6474e552,(%rbx)
    8913:	75 d3                	jne    88e8 <change_protection+0x68>
    8915:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    8919:	48 8b 73 28          	mov    0x28(%rbx),%rsi
    891d:	48 01 fe             	add    %rdi,%rsi
    8920:	48 89 f8             	mov    %rdi,%rax
    8923:	48 81 c6 ff 0f 00 00 	add    $0xfff,%rsi
    892a:	48 31 f0             	xor    %rsi,%rax
    892d:	48 3d ff 0f 00 00    	cmp    $0xfff,%rax
    8933:	76 b3                	jbe    88e8 <change_protection+0x68>
    8935:	48 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%rdi
    893c:	48 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%rsi
    8943:	ba 01 00 00 00       	mov    $0x1,%edx
    8948:	48 29 fe             	sub    %rdi,%rsi
    894b:	4c 01 ef             	add    %r13,%rdi
    894e:	e8 bd 30 00 00       	call   ba10 <mm_modify_permissions>
    8953:	85 c0                	test   %eax,%eax
    8955:	74 91                	je     88e8 <change_protection+0x68>
    8957:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    895e:	00 00 
    8960:	b8 01 00 00 00       	mov    $0x1,%eax
    8965:	5b                   	pop    %rbx
    8966:	5d                   	pop    %rbp
    8967:	41 5c                	pop    %r12
    8969:	41 5d                	pop    %r13
    896b:	41 5e                	pop    %r14
    896d:	c3                   	ret    
    896e:	66 90                	xchg   %ax,%ax
    8970:	48 8b 43 10          	mov    0x10(%rbx),%rax
    8974:	8b 4b 04             	mov    0x4(%rbx),%ecx
    8977:	48 89 c7             	mov    %rax,%rdi
    897a:	89 ca                	mov    %ecx,%edx
    897c:	48 03 43 28          	add    0x28(%rbx),%rax
    8980:	c1 e9 02             	shr    $0x2,%ecx
    8983:	83 e2 01             	and    $0x1,%edx
    8986:	48 8d b0 ff 0f 00 00 	lea    0xfff(%rax),%rsi
    898d:	48 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%rdi
    8994:	83 e1 01             	and    $0x1,%ecx
    8997:	48 c1 e2 02          	shl    $0x2,%rdx
    899b:	48 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%rsi
    89a2:	48 29 fe             	sub    %rdi,%rsi
    89a5:	09 ca                	or     %ecx,%edx
    89a7:	4c 01 ef             	add    %r13,%rdi
    89aa:	e8 61 30 00 00       	call   ba10 <mm_modify_permissions>
    89af:	85 c0                	test   %eax,%eax
    89b1:	0f 84 56 ff ff ff    	je     890d <change_protection+0x8d>
    89b7:	eb a7                	jmp    8960 <change_protection+0xe0>
    89b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    89c0:	8b 05 92 a9 00 00    	mov    0xa992(%rip),%eax        # 13358 <g_global_data+0x158>
    89c6:	85 c0                	test   %eax,%eax
    89c8:	74 9b                	je     8965 <change_protection+0xe5>
    89ca:	31 d2                	xor    %edx,%edx
    89cc:	48 8d 3d 2d a8 00 00 	lea    0xa82d(%rip),%rdi        # 13200 <g_global_data>
    89d3:	eb 10                	jmp    89e5 <change_protection+0x165>
    89d5:	0f 1f 00             	nopl   (%rax)
    89d8:	8b 05 7a a9 00 00    	mov    0xa97a(%rip),%eax        # 13358 <g_global_data+0x158>
    89de:	83 c2 01             	add    $0x1,%edx
    89e1:	39 c2                	cmp    %eax,%edx
    89e3:	73 5b                	jae    8a40 <change_protection+0x1c0>
    89e5:	89 d1                	mov    %edx,%ecx
    89e7:	48 8d 41 0b          	lea    0xb(%rcx),%rax
    89eb:	48 c1 e0 05          	shl    $0x5,%rax
    89ef:	48 01 f8             	add    %rdi,%rax
    89f2:	0f b7 30             	movzwl (%rax),%esi
    89f5:	66 83 fe 14          	cmp    $0x14,%si
    89f9:	75 dd                	jne    89d8 <change_protection+0x158>
    89fb:	48 c1 e1 05          	shl    $0x5,%rcx
    89ff:	48 01 f9             	add    %rdi,%rcx
    8a02:	48 8b 89 78 01 00 00 	mov    0x178(%rcx),%rcx
    8a09:	48 81 f9 07 02 00 00 	cmp    $0x207,%rcx
    8a10:	75 c6                	jne    89d8 <change_protection+0x158>
    8a12:	8b 48 04             	mov    0x4(%rax),%ecx
    8a15:	85 c9                	test   %ecx,%ecx
    8a17:	74 bf                	je     89d8 <change_protection+0x158>
    8a19:	8b 70 04             	mov    0x4(%rax),%esi
    8a1c:	48 8b 40 08          	mov    0x8(%rax),%rax
    8a20:	ba 03 00 00 00       	mov    $0x3,%edx
    8a25:	48 c1 e6 0c          	shl    $0xc,%rsi
    8a29:	49 8d 7c 05 00       	lea    0x0(%r13,%rax,1),%rdi
    8a2e:	e8 dd 2f 00 00       	call   ba10 <mm_modify_permissions>
    8a33:	85 c0                	test   %eax,%eax
    8a35:	0f 95 c0             	setne  %al
    8a38:	0f b6 c0             	movzbl %al,%eax
    8a3b:	e9 25 ff ff ff       	jmp    8965 <change_protection+0xe5>
    8a40:	5b                   	pop    %rbx
    8a41:	31 c0                	xor    %eax,%eax
    8a43:	5d                   	pop    %rbp
    8a44:	41 5c                	pop    %r12
    8a46:	41 5d                	pop    %r13
    8a48:	41 5e                	pop    %r14
    8a4a:	c3                   	ret    
    8a4b:	b8 01 00 00 00       	mov    $0x1,%eax
    8a50:	c3                   	ret    
    8a51:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8a58:	00 00 00 
    8a5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000008a60 <init_segment_emas>:
    8a60:	f3 0f 1e fa          	endbr64 
    8a64:	48 85 ff             	test   %rdi,%rdi
    8a67:	0f 84 e8 00 00 00    	je     8b55 <init_segment_emas+0xf5>
    8a6d:	41 55                	push   %r13
    8a6f:	49 89 fd             	mov    %rdi,%r13
    8a72:	41 54                	push   %r12
    8a74:	55                   	push   %rbp
    8a75:	53                   	push   %rbx
    8a76:	48 83 ec 08          	sub    $0x8,%rsp
    8a7a:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    8a80:	0f 85 ae 00 00 00    	jne    8b34 <init_segment_emas+0xd4>
    8a86:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    8a8b:	0f 85 a3 00 00 00    	jne    8b34 <init_segment_emas+0xd4>
    8a91:	48 89 fb             	mov    %rdi,%rbx
    8a94:	48 03 5f 20          	add    0x20(%rdi),%rbx
    8a98:	0f 84 96 00 00 00    	je     8b34 <init_segment_emas+0xd4>
    8a9e:	0f b7 57 38          	movzwl 0x38(%rdi),%edx
    8aa2:	48 89 de             	mov    %rbx,%rsi
    8aa5:	45 31 e4             	xor    %r12d,%r12d
    8aa8:	89 d1                	mov    %edx,%ecx
    8aaa:	e8 d1 f6 ff ff       	call   8180 <has_text_relo>
    8aaf:	89 c5                	mov    %eax,%ebp
    8ab1:	66 85 c9             	test   %cx,%cx
    8ab4:	75 1c                	jne    8ad2 <init_segment_emas+0x72>
    8ab6:	e9 8d 00 00 00       	jmp    8b48 <init_segment_emas+0xe8>
    8abb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8ac0:	41 0f b7 45 38       	movzwl 0x38(%r13),%eax
    8ac5:	41 83 c4 01          	add    $0x1,%r12d
    8ac9:	48 83 c3 38          	add    $0x38,%rbx
    8acd:	41 39 c4             	cmp    %eax,%r12d
    8ad0:	73 76                	jae    8b48 <init_segment_emas+0xe8>
    8ad2:	83 3b 01             	cmpl   $0x1,(%rbx)
    8ad5:	75 e9                	jne    8ac0 <init_segment_emas+0x60>
    8ad7:	8b 4b 04             	mov    0x4(%rbx),%ecx
    8ada:	48 8b 73 10          	mov    0x10(%rbx),%rsi
    8ade:	89 c8                	mov    %ecx,%eax
    8ae0:	48 89 f2             	mov    %rsi,%rdx
    8ae3:	48 03 73 28          	add    0x28(%rbx),%rsi
    8ae7:	83 e0 02             	and    $0x2,%eax
    8aea:	48 81 c6 ff 0f 00 00 	add    $0xfff,%rsi
    8af1:	48 81 e2 00 f0 ff ff 	and    $0xfffffffffffff000,%rdx
    8af8:	09 e8                	or     %ebp,%eax
    8afa:	48 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%rsi
    8b01:	49 8d 7c 15 00       	lea    0x0(%r13,%rdx,1),%rdi
    8b06:	83 f8 01             	cmp    $0x1,%eax
    8b09:	48 19 c0             	sbb    %rax,%rax
    8b0c:	83 e1 01             	and    $0x1,%ecx
    8b0f:	48 29 d6             	sub    %rdx,%rsi
    8b12:	45 31 c9             	xor    %r9d,%r9d
    8b15:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    8b19:	48 c1 e1 02          	shl    $0x2,%rcx
    8b1d:	45 31 c0             	xor    %r8d,%r8d
    8b20:	ba 80 02 00 00       	mov    $0x280,%edx
    8b25:	48 83 c0 03          	add    $0x3,%rax
    8b29:	09 c1                	or     %eax,%ecx
    8b2b:	e8 70 2d 00 00       	call   b8a0 <mm_init_ema>
    8b30:	85 c0                	test   %eax,%eax
    8b32:	74 8c                	je     8ac0 <init_segment_emas+0x60>
    8b34:	48 83 c4 08          	add    $0x8,%rsp
    8b38:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8b3d:	5b                   	pop    %rbx
    8b3e:	5d                   	pop    %rbp
    8b3f:	41 5c                	pop    %r12
    8b41:	41 5d                	pop    %r13
    8b43:	c3                   	ret    
    8b44:	0f 1f 40 00          	nopl   0x0(%rax)
    8b48:	48 83 c4 08          	add    $0x8,%rsp
    8b4c:	31 c0                	xor    %eax,%eax
    8b4e:	5b                   	pop    %rbx
    8b4f:	5d                   	pop    %rbp
    8b50:	41 5c                	pop    %r12
    8b52:	41 5d                	pop    %r13
    8b54:	c3                   	ret    
    8b55:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8b5a:	c3                   	ret    
    8b5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000008b60 <__cxa_atexit>:
    8b60:	f3 0f 1e fa          	endbr64 
    8b64:	41 55                	push   %r13
    8b66:	49 89 d5             	mov    %rdx,%r13
    8b69:	41 54                	push   %r12
    8b6b:	49 89 f4             	mov    %rsi,%r12
    8b6e:	55                   	push   %rbp
    8b6f:	48 89 fd             	mov    %rdi,%rbp
    8b72:	53                   	push   %rbx
    8b73:	48 83 ec 18          	sub    $0x18,%rsp
    8b77:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    8b7e:	00 00 
    8b80:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    8b85:	31 c0                	xor    %eax,%eax
    8b87:	48 83 3d 11 16 01 00 	cmpq   $0x0,0x11611(%rip)        # 1a1a0 <g_exit_function_cookie>
    8b8e:	00 
    8b8f:	0f 84 8b 00 00 00    	je     8c20 <__cxa_atexit+0xc0>
    8b95:	31 f6                	xor    %esi,%esi
    8b97:	48 89 ef             	mov    %rbp,%rdi
    8b9a:	e8 c1 cf ff ff       	call   5b60 <sgx_is_within_enclave>
    8b9f:	85 c0                	test   %eax,%eax
    8ba1:	0f 84 a1 00 00 00    	je     8c48 <__cxa_atexit+0xe8>
    8ba7:	bf 20 00 00 00       	mov    $0x20,%edi
    8bac:	e8 7f 45 00 00       	call   d130 <dlmalloc>
    8bb1:	48 89 c3             	mov    %rax,%rbx
    8bb4:	48 85 c0             	test   %rax,%rax
    8bb7:	0f 84 8b 00 00 00    	je     8c48 <__cxa_atexit+0xe8>
    8bbd:	48 8b 05 dc 15 01 00 	mov    0x115dc(%rip),%rax        # 1a1a0 <g_exit_function_cookie>
    8bc4:	4c 89 6b 10          	mov    %r13,0x10(%rbx)
    8bc8:	48 31 c5             	xor    %rax,%rbp
    8bcb:	49 31 c4             	xor    %rax,%r12
    8bce:	48 89 2b             	mov    %rbp,(%rbx)
    8bd1:	48 8d 2d d0 15 01 00 	lea    0x115d0(%rip),%rbp        # 1a1a8 <g_exit_function_lock>
    8bd8:	4c 89 63 08          	mov    %r12,0x8(%rbx)
    8bdc:	48 89 ef             	mov    %rbp,%rdi
    8bdf:	e8 8c 3b 00 00       	call   c770 <sgx_spin_lock>
    8be4:	48 8b 05 c5 15 01 00 	mov    0x115c5(%rip),%rax        # 1a1b0 <g_exit_function>
    8beb:	48 89 ef             	mov    %rbp,%rdi
    8bee:	48 89 1d bb 15 01 00 	mov    %rbx,0x115bb(%rip)        # 1a1b0 <g_exit_function>
    8bf5:	48 89 43 18          	mov    %rax,0x18(%rbx)
    8bf9:	e8 02 3c 00 00       	call   c800 <sgx_spin_unlock>
    8bfe:	31 c0                	xor    %eax,%eax
    8c00:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    8c05:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    8c0c:	00 00 
    8c0e:	75 71                	jne    8c81 <__cxa_atexit+0x121>
    8c10:	48 83 c4 18          	add    $0x18,%rsp
    8c14:	5b                   	pop    %rbx
    8c15:	5d                   	pop    %rbp
    8c16:	41 5c                	pop    %r12
    8c18:	41 5d                	pop    %r13
    8c1a:	c3                   	ret    
    8c1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8c20:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    8c27:	00 
    8c28:	48 89 e3             	mov    %rsp,%rbx
    8c2b:	eb 0a                	jmp    8c37 <__cxa_atexit+0xd7>
    8c2d:	0f 1f 00             	nopl   (%rax)
    8c30:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
    8c35:	75 19                	jne    8c50 <__cxa_atexit+0xf0>
    8c37:	be 08 00 00 00       	mov    $0x8,%esi
    8c3c:	48 89 df             	mov    %rbx,%rdi
    8c3f:	e8 1c d1 ff ff       	call   5d60 <sgx_read_rand>
    8c44:	85 c0                	test   %eax,%eax
    8c46:	74 e8                	je     8c30 <__cxa_atexit+0xd0>
    8c48:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8c4d:	eb b1                	jmp    8c00 <__cxa_atexit+0xa0>
    8c4f:	90                   	nop
    8c50:	48 8d 1d 51 15 01 00 	lea    0x11551(%rip),%rbx        # 1a1a8 <g_exit_function_lock>
    8c57:	48 89 df             	mov    %rbx,%rdi
    8c5a:	e8 11 3b 00 00       	call   c770 <sgx_spin_lock>
    8c5f:	48 83 3d 39 15 01 00 	cmpq   $0x0,0x11539(%rip)        # 1a1a0 <g_exit_function_cookie>
    8c66:	00 
    8c67:	75 0b                	jne    8c74 <__cxa_atexit+0x114>
    8c69:	48 8b 04 24          	mov    (%rsp),%rax
    8c6d:	48 89 05 2c 15 01 00 	mov    %rax,0x1152c(%rip)        # 1a1a0 <g_exit_function_cookie>
    8c74:	48 89 df             	mov    %rbx,%rdi
    8c77:	e8 84 3b 00 00       	call   c800 <sgx_spin_unlock>
    8c7c:	e9 14 ff ff ff       	jmp    8b95 <__cxa_atexit+0x35>
    8c81:	e8 6a 7d 00 00       	call   109f0 <__stack_chk_fail>
    8c86:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8c8d:	00 00 00 

0000000000008c90 <atexit>:
    8c90:	f3 0f 1e fa          	endbr64 
    8c94:	48 8b 15 b5 f5 00 00 	mov    0xf5b5(%rip),%rdx        # 18250 <__dso_handle>
    8c9b:	31 f6                	xor    %esi,%esi
    8c9d:	e9 be fe ff ff       	jmp    8b60 <__cxa_atexit>
    8ca2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8ca9:	00 00 00 
    8cac:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000008cb0 <init_global_object>:
    8cb0:	f3 0f 1e fa          	endbr64 
    8cb4:	55                   	push   %rbp
    8cb5:	53                   	push   %rbx
    8cb6:	48 83 ec 28          	sub    $0x28,%rsp
    8cba:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    8cc1:	00 00 
    8cc3:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    8cc8:	31 c0                	xor    %eax,%eax
    8cca:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    8cd1:	00 00 
    8cd3:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    8cda:	00 00 
    8cdc:	e8 17 94 00 00       	call   120f8 <get_enclave_base>
    8ce1:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    8ce6:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
    8ceb:	48 89 c7             	mov    %rax,%rdi
    8cee:	48 89 c3             	mov    %rax,%rbx
    8cf1:	e8 aa f9 ff ff       	call   86a0 <elf_get_init_array>
    8cf6:	85 c0                	test   %eax,%eax
    8cf8:	75 31                	jne    8d2b <init_global_object+0x7b>
    8cfa:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    8cff:	48 85 c0             	test   %rax,%rax
    8d02:	74 27                	je     8d2b <init_global_object+0x7b>
    8d04:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
    8d09:	48 85 ed             	test   %rbp,%rbp
    8d0c:	74 1d                	je     8d2b <init_global_object+0x7b>
    8d0e:	48 01 c3             	add    %rax,%rbx
    8d11:	48 83 e5 f8          	and    $0xfffffffffffffff8,%rbp
    8d15:	48 01 dd             	add    %rbx,%rbp
    8d18:	48 39 eb             	cmp    %rbp,%rbx
    8d1b:	73 0e                	jae    8d2b <init_global_object+0x7b>
    8d1d:	0f 1f 00             	nopl   (%rax)
    8d20:	ff 13                	call   *(%rbx)
    8d22:	48 83 c3 08          	add    $0x8,%rbx
    8d26:	48 39 eb             	cmp    %rbp,%rbx
    8d29:	72 f5                	jb     8d20 <init_global_object+0x70>
    8d2b:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    8d30:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    8d37:	00 00 
    8d39:	75 07                	jne    8d42 <init_global_object+0x92>
    8d3b:	48 83 c4 28          	add    $0x28,%rsp
    8d3f:	5b                   	pop    %rbx
    8d40:	5d                   	pop    %rbp
    8d41:	c3                   	ret    
    8d42:	e8 a9 7c 00 00       	call   109f0 <__stack_chk_fail>
    8d47:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    8d4e:	00 00 

0000000000008d50 <uninit_global_object>:
    8d50:	f3 0f 1e fa          	endbr64 
    8d54:	55                   	push   %rbp
    8d55:	53                   	push   %rbx
    8d56:	48 83 ec 28          	sub    $0x28,%rsp
    8d5a:	48 8b 1d 4f 14 01 00 	mov    0x1144f(%rip),%rbx        # 1a1b0 <g_exit_function>
    8d61:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    8d68:	00 00 
    8d6a:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    8d6f:	31 c0                	xor    %eax,%eax
    8d71:	48 c7 05 34 14 01 00 	movq   $0x0,0x11434(%rip)        # 1a1b0 <g_exit_function>
    8d78:	00 00 00 00 
    8d7c:	48 85 db             	test   %rbx,%rbx
    8d7f:	74 2b                	je     8dac <uninit_global_object+0x5c>
    8d81:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8d88:	48 8b 05 11 14 01 00 	mov    0x11411(%rip),%rax        # 1a1a0 <g_exit_function_cookie>
    8d8f:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    8d93:	48 31 c7             	xor    %rax,%rdi
    8d96:	48 33 03             	xor    (%rbx),%rax
    8d99:	ff d0                	call   *%rax
    8d9b:	48 89 df             	mov    %rbx,%rdi
    8d9e:	48 8b 5b 18          	mov    0x18(%rbx),%rbx
    8da2:	e8 79 61 00 00       	call   ef20 <dlfree>
    8da7:	48 85 db             	test   %rbx,%rbx
    8daa:	75 dc                	jne    8d88 <uninit_global_object+0x38>
    8dac:	e8 47 93 00 00       	call   120f8 <get_enclave_base>
    8db1:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    8db6:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
    8dbb:	48 89 c7             	mov    %rax,%rdi
    8dbe:	48 89 c5             	mov    %rax,%rbp
    8dc1:	e8 ca f9 ff ff       	call   8790 <elf_get_uninit_array>
    8dc6:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    8dcb:	48 85 d2             	test   %rdx,%rdx
    8dce:	74 2b                	je     8dfb <uninit_global_object+0xab>
    8dd0:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    8dd5:	48 85 c0             	test   %rax,%rax
    8dd8:	74 21                	je     8dfb <uninit_global_object+0xab>
    8dda:	48 01 d5             	add    %rdx,%rbp
    8ddd:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    8de1:	48 8d 5c 05 f8       	lea    -0x8(%rbp,%rax,1),%rbx
    8de6:	48 39 eb             	cmp    %rbp,%rbx
    8de9:	72 10                	jb     8dfb <uninit_global_object+0xab>
    8deb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8df0:	ff 13                	call   *(%rbx)
    8df2:	48 83 eb 08          	sub    $0x8,%rbx
    8df6:	48 39 eb             	cmp    %rbp,%rbx
    8df9:	73 f5                	jae    8df0 <uninit_global_object+0xa0>
    8dfb:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    8e00:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    8e07:	00 00 
    8e09:	75 07                	jne    8e12 <uninit_global_object+0xc2>
    8e0b:	48 83 c4 28          	add    $0x28,%rsp
    8e0f:	5b                   	pop    %rbx
    8e10:	5d                   	pop    %rbp
    8e11:	c3                   	ret    
    8e12:	e8 d9 7b 00 00       	call   109f0 <__stack_chk_fail>
    8e17:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    8e1e:	00 00 

0000000000008e20 <__tls_get_addr>:
    8e20:	f3 0f 1e fa          	endbr64 
    8e24:	53                   	push   %rbx
    8e25:	48 89 fb             	mov    %rdi,%rbx
    8e28:	e8 16 93 00 00       	call   12143 <get_thread_data>
    8e2d:	48 8b 40 68          	mov    0x68(%rax),%rax
    8e31:	48 03 43 08          	add    0x8(%rbx),%rax
    8e35:	5b                   	pop    %rbx
    8e36:	c3                   	ret    
    8e37:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    8e3e:	00 00 

0000000000008e40 <bit_array_new>:
    8e40:	f3 0f 1e fa          	endbr64 
    8e44:	41 54                	push   %r12
    8e46:	55                   	push   %rbp
    8e47:	53                   	push   %rbx
    8e48:	48 85 ff             	test   %rdi,%rdi
    8e4b:	74 63                	je     8eb0 <bit_array_new+0x70>
    8e4d:	48 8d 47 07          	lea    0x7(%rdi),%rax
    8e51:	48 89 fb             	mov    %rdi,%rbx
    8e54:	48 89 c2             	mov    %rax,%rdx
    8e57:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    8e5b:	48 39 fa             	cmp    %rdi,%rdx
    8e5e:	72 50                	jb     8eb0 <bit_array_new+0x70>
    8e60:	48 c1 e8 03          	shr    $0x3,%rax
    8e64:	bf 18 00 00 00       	mov    $0x18,%edi
    8e69:	49 89 c4             	mov    %rax,%r12
    8e6c:	e8 af 25 00 00       	call   b420 <emalloc>
    8e71:	48 89 c5             	mov    %rax,%rbp
    8e74:	48 85 c0             	test   %rax,%rax
    8e77:	74 37                	je     8eb0 <bit_array_new+0x70>
    8e79:	4c 89 20             	mov    %r12,(%rax)
    8e7c:	4c 89 e7             	mov    %r12,%rdi
    8e7f:	48 89 58 08          	mov    %rbx,0x8(%rax)
    8e83:	e8 98 25 00 00       	call   b420 <emalloc>
    8e88:	48 89 45 10          	mov    %rax,0x10(%rbp)
    8e8c:	48 85 c0             	test   %rax,%rax
    8e8f:	74 0f                	je     8ea0 <bit_array_new+0x60>
    8e91:	48 89 e8             	mov    %rbp,%rax
    8e94:	5b                   	pop    %rbx
    8e95:	5d                   	pop    %rbp
    8e96:	41 5c                	pop    %r12
    8e98:	c3                   	ret    
    8e99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8ea0:	48 89 ef             	mov    %rbp,%rdi
    8ea3:	e8 f8 27 00 00       	call   b6a0 <efree>
    8ea8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    8eaf:	00 
    8eb0:	31 ed                	xor    %ebp,%ebp
    8eb2:	eb dd                	jmp    8e91 <bit_array_new+0x51>
    8eb4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8ebb:	00 00 00 
    8ebe:	66 90                	xchg   %ax,%ax

0000000000008ec0 <bit_array_new_set>:
    8ec0:	f3 0f 1e fa          	endbr64 
    8ec4:	53                   	push   %rbx
    8ec5:	e8 76 ff ff ff       	call   8e40 <bit_array_new>
    8eca:	48 89 c3             	mov    %rax,%rbx
    8ecd:	48 85 c0             	test   %rax,%rax
    8ed0:	74 11                	je     8ee3 <bit_array_new_set+0x23>
    8ed2:	48 8b 10             	mov    (%rax),%rdx
    8ed5:	48 8b 78 10          	mov    0x10(%rax),%rdi
    8ed9:	be ff 00 00 00       	mov    $0xff,%esi
    8ede:	e8 2d 7a 00 00       	call   10910 <memset>
    8ee3:	48 89 d8             	mov    %rbx,%rax
    8ee6:	5b                   	pop    %rbx
    8ee7:	c3                   	ret    
    8ee8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    8eef:	00 

0000000000008ef0 <bit_array_new_reset>:
    8ef0:	f3 0f 1e fa          	endbr64 
    8ef4:	53                   	push   %rbx
    8ef5:	e8 46 ff ff ff       	call   8e40 <bit_array_new>
    8efa:	48 89 c3             	mov    %rax,%rbx
    8efd:	48 85 c0             	test   %rax,%rax
    8f00:	74 0e                	je     8f10 <bit_array_new_reset+0x20>
    8f02:	48 8b 10             	mov    (%rax),%rdx
    8f05:	48 8b 78 10          	mov    0x10(%rax),%rdi
    8f09:	31 f6                	xor    %esi,%esi
    8f0b:	e8 00 7a 00 00       	call   10910 <memset>
    8f10:	48 89 d8             	mov    %rbx,%rax
    8f13:	5b                   	pop    %rbx
    8f14:	c3                   	ret    
    8f15:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8f1c:	00 00 00 
    8f1f:	90                   	nop

0000000000008f20 <bit_array_delete>:
    8f20:	f3 0f 1e fa          	endbr64 
    8f24:	53                   	push   %rbx
    8f25:	48 89 fb             	mov    %rdi,%rbx
    8f28:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    8f2c:	e8 6f 27 00 00       	call   b6a0 <efree>
    8f31:	48 89 df             	mov    %rbx,%rdi
    8f34:	5b                   	pop    %rbx
    8f35:	e9 66 27 00 00       	jmp    b6a0 <efree>
    8f3a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000008f40 <bit_array_test>:
    8f40:	f3 0f 1e fa          	endbr64 
    8f44:	48 89 f1             	mov    %rsi,%rcx
    8f47:	48 89 f2             	mov    %rsi,%rdx
    8f4a:	48 8b 77 10          	mov    0x10(%rdi),%rsi
    8f4e:	b8 01 00 00 00       	mov    $0x1,%eax
    8f53:	83 e1 07             	and    $0x7,%ecx
    8f56:	48 c1 ea 03          	shr    $0x3,%rdx
    8f5a:	d3 e0                	shl    %cl,%eax
    8f5c:	84 04 16             	test   %al,(%rsi,%rdx,1)
    8f5f:	0f 95 c0             	setne  %al
    8f62:	c3                   	ret    
    8f63:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8f6a:	00 00 00 
    8f6d:	0f 1f 00             	nopl   (%rax)

0000000000008f70 <set_mask>:
    8f70:	f3 0f 1e fa          	endbr64 
    8f74:	89 f1                	mov    %esi,%ecx
    8f76:	b8 01 00 00 00       	mov    $0x1,%eax
    8f7b:	d3 e0                	shl    %cl,%eax
    8f7d:	89 f9                	mov    %edi,%ecx
    8f7f:	83 e8 01             	sub    $0x1,%eax
    8f82:	d3 e0                	shl    %cl,%eax
    8f84:	c3                   	ret    
    8f85:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8f8c:	00 00 00 
    8f8f:	90                   	nop

0000000000008f90 <bit_array_test_range>:
    8f90:	f3 0f 1e fa          	endbr64 
    8f94:	48 89 f0             	mov    %rsi,%rax
    8f97:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    8f9b:	83 e6 07             	and    $0x7,%esi
    8f9e:	b9 08 00 00 00       	mov    $0x8,%ecx
    8fa3:	48 c1 e8 03          	shr    $0x3,%rax
    8fa7:	48 29 f1             	sub    %rsi,%rcx
    8faa:	44 0f b6 0c 07       	movzbl (%rdi,%rax,1),%r9d
    8faf:	48 39 d1             	cmp    %rdx,%rcx
    8fb2:	72 24                	jb     8fd8 <bit_array_test_range+0x48>
    8fb4:	89 d1                	mov    %edx,%ecx
    8fb6:	b8 01 00 00 00       	mov    $0x1,%eax
    8fbb:	41 f7 d1             	not    %r9d
    8fbe:	d3 e0                	shl    %cl,%eax
    8fc0:	89 f1                	mov    %esi,%ecx
    8fc2:	83 e8 01             	sub    $0x1,%eax
    8fc5:	d3 e0                	shl    %cl,%eax
    8fc7:	41 84 c1             	test   %al,%r9b
    8fca:	41 0f 94 c2          	sete   %r10b
    8fce:	44 89 d0             	mov    %r10d,%eax
    8fd1:	c3                   	ret    
    8fd2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8fd8:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    8fde:	41 f7 d1             	not    %r9d
    8fe1:	45 31 d2             	xor    %r10d,%r10d
    8fe4:	41 d3 e0             	shl    %cl,%r8d
    8fe7:	89 f1                	mov    %esi,%ecx
    8fe9:	41 83 e8 01          	sub    $0x1,%r8d
    8fed:	41 d3 e0             	shl    %cl,%r8d
    8ff0:	45 84 c1             	test   %r8b,%r9b
    8ff3:	75 d9                	jne    8fce <bit_array_test_range+0x3e>
    8ff5:	48 8d 4c 16 f8       	lea    -0x8(%rsi,%rdx,1),%rcx
    8ffa:	48 83 f9 07          	cmp    $0x7,%rcx
    8ffe:	77 12                	ja     9012 <bit_array_test_range+0x82>
    9000:	eb 26                	jmp    9028 <bit_array_test_range+0x98>
    9002:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9008:	48 83 e9 08          	sub    $0x8,%rcx
    900c:	48 83 f9 07          	cmp    $0x7,%rcx
    9010:	76 16                	jbe    9028 <bit_array_test_range+0x98>
    9012:	48 83 c0 01          	add    $0x1,%rax
    9016:	80 3c 07 ff          	cmpb   $0xff,(%rdi,%rax,1)
    901a:	74 ec                	je     9008 <bit_array_test_range+0x78>
    901c:	45 31 d2             	xor    %r10d,%r10d
    901f:	44 89 d0             	mov    %r10d,%eax
    9022:	c3                   	ret    
    9023:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9028:	41 ba 01 00 00 00    	mov    $0x1,%r10d
    902e:	48 85 c9             	test   %rcx,%rcx
    9031:	74 9b                	je     8fce <bit_array_test_range+0x3e>
    9033:	ba 01 00 00 00       	mov    $0x1,%edx
    9038:	0f b6 74 07 01       	movzbl 0x1(%rdi,%rax,1),%esi
    903d:	d3 e2                	shl    %cl,%edx
    903f:	83 ea 01             	sub    $0x1,%edx
    9042:	21 d6                	and    %edx,%esi
    9044:	40 38 d6             	cmp    %dl,%sil
    9047:	41 0f 94 c2          	sete   %r10b
    904b:	eb 81                	jmp    8fce <bit_array_test_range+0x3e>
    904d:	0f 1f 00             	nopl   (%rax)

0000000000009050 <bit_array_test_range_any>:
    9050:	f3 0f 1e fa          	endbr64 
    9054:	49 89 f8             	mov    %rdi,%r8
    9057:	48 89 f0             	mov    %rsi,%rax
    905a:	48 89 d7             	mov    %rdx,%rdi
    905d:	83 e6 07             	and    $0x7,%esi
    9060:	49 8b 50 10          	mov    0x10(%r8),%rdx
    9064:	b9 08 00 00 00       	mov    $0x8,%ecx
    9069:	48 c1 e8 03          	shr    $0x3,%rax
    906d:	48 29 f1             	sub    %rsi,%rcx
    9070:	44 0f b6 0c 02       	movzbl (%rdx,%rax,1),%r9d
    9075:	48 39 f9             	cmp    %rdi,%rcx
    9078:	72 1e                	jb     9098 <bit_array_test_range_any+0x48>
    907a:	89 f9                	mov    %edi,%ecx
    907c:	b8 01 00 00 00       	mov    $0x1,%eax
    9081:	d3 e0                	shl    %cl,%eax
    9083:	89 f1                	mov    %esi,%ecx
    9085:	83 e8 01             	sub    $0x1,%eax
    9088:	d3 e0                	shl    %cl,%eax
    908a:	41 84 c1             	test   %al,%r9b
    908d:	41 0f 95 c2          	setne  %r10b
    9091:	44 89 d0             	mov    %r10d,%eax
    9094:	c3                   	ret    
    9095:	0f 1f 00             	nopl   (%rax)
    9098:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    909e:	41 ba 01 00 00 00    	mov    $0x1,%r10d
    90a4:	41 d3 e0             	shl    %cl,%r8d
    90a7:	89 f1                	mov    %esi,%ecx
    90a9:	41 83 e8 01          	sub    $0x1,%r8d
    90ad:	41 d3 e0             	shl    %cl,%r8d
    90b0:	45 84 c1             	test   %r8b,%r9b
    90b3:	75 dc                	jne    9091 <bit_array_test_range_any+0x41>
    90b5:	48 8d 4c 3e f8       	lea    -0x8(%rsi,%rdi,1),%rcx
    90ba:	48 83 f9 07          	cmp    $0x7,%rcx
    90be:	77 12                	ja     90d2 <bit_array_test_range_any+0x82>
    90c0:	eb 2e                	jmp    90f0 <bit_array_test_range_any+0xa0>
    90c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    90c8:	48 83 e9 08          	sub    $0x8,%rcx
    90cc:	48 83 f9 07          	cmp    $0x7,%rcx
    90d0:	76 1e                	jbe    90f0 <bit_array_test_range_any+0xa0>
    90d2:	48 83 c0 01          	add    $0x1,%rax
    90d6:	80 3c 02 00          	cmpb   $0x0,(%rdx,%rax,1)
    90da:	74 ec                	je     90c8 <bit_array_test_range_any+0x78>
    90dc:	41 ba 01 00 00 00    	mov    $0x1,%r10d
    90e2:	44 89 d0             	mov    %r10d,%eax
    90e5:	c3                   	ret    
    90e6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    90ed:	00 00 00 
    90f0:	45 31 d2             	xor    %r10d,%r10d
    90f3:	48 85 c9             	test   %rcx,%rcx
    90f6:	74 99                	je     9091 <bit_array_test_range_any+0x41>
    90f8:	be 01 00 00 00       	mov    $0x1,%esi
    90fd:	d3 e6                	shl    %cl,%esi
    90ff:	83 ee 01             	sub    $0x1,%esi
    9102:	40 84 74 02 01       	test   %sil,0x1(%rdx,%rax,1)
    9107:	41 0f 95 c2          	setne  %r10b
    910b:	eb 84                	jmp    9091 <bit_array_test_range_any+0x41>
    910d:	0f 1f 00             	nopl   (%rax)

0000000000009110 <bit_array_set>:
    9110:	f3 0f 1e fa          	endbr64 
    9114:	48 89 f1             	mov    %rsi,%rcx
    9117:	48 89 f0             	mov    %rsi,%rax
    911a:	ba 01 00 00 00       	mov    $0x1,%edx
    911f:	48 c1 e8 03          	shr    $0x3,%rax
    9123:	83 e1 07             	and    $0x7,%ecx
    9126:	48 03 47 10          	add    0x10(%rdi),%rax
    912a:	d3 e2                	shl    %cl,%edx
    912c:	08 10                	or     %dl,(%rax)
    912e:	c3                   	ret    
    912f:	90                   	nop

0000000000009130 <bit_array_set_range>:
    9130:	f3 0f 1e fa          	endbr64 
    9134:	48 89 f0             	mov    %rsi,%rax
    9137:	4c 8b 4f 10          	mov    0x10(%rdi),%r9
    913b:	83 e6 07             	and    $0x7,%esi
    913e:	b9 08 00 00 00       	mov    $0x8,%ecx
    9143:	48 c1 e8 03          	shr    $0x3,%rax
    9147:	48 29 f1             	sub    %rsi,%rcx
    914a:	49 89 d0             	mov    %rdx,%r8
    914d:	49 01 c1             	add    %rax,%r9
    9150:	45 0f b6 11          	movzbl (%r9),%r10d
    9154:	48 39 d1             	cmp    %rdx,%rcx
    9157:	73 67                	jae    91c0 <bit_array_set_range+0x90>
    9159:	ba 01 00 00 00       	mov    $0x1,%edx
    915e:	d3 e2                	shl    %cl,%edx
    9160:	89 f1                	mov    %esi,%ecx
    9162:	83 ea 01             	sub    $0x1,%edx
    9165:	d3 e2                	shl    %cl,%edx
    9167:	4a 8d 4c 06 f8       	lea    -0x8(%rsi,%r8,1),%rcx
    916c:	41 09 d2             	or     %edx,%r10d
    916f:	45 88 11             	mov    %r10b,(%r9)
    9172:	48 83 f9 07          	cmp    $0x7,%rcx
    9176:	76 68                	jbe    91e0 <bit_array_set_range+0xb0>
    9178:	48 8d 51 f8          	lea    -0x8(%rcx),%rdx
    917c:	48 83 c0 01          	add    $0x1,%rax
    9180:	48 c1 ea 03          	shr    $0x3,%rdx
    9184:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
    9188:	eb 0a                	jmp    9194 <bit_array_set_range+0x64>
    918a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9190:	48 83 c0 01          	add    $0x1,%rax
    9194:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    9198:	c6 04 02 ff          	movb   $0xff,(%rdx,%rax,1)
    919c:	48 39 f0             	cmp    %rsi,%rax
    919f:	75 ef                	jne    9190 <bit_array_set_range+0x60>
    91a1:	83 e1 07             	and    $0x7,%ecx
    91a4:	48 85 c9             	test   %rcx,%rcx
    91a7:	74 12                	je     91bb <bit_array_set_range+0x8b>
    91a9:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    91ad:	b8 01 00 00 00       	mov    $0x1,%eax
    91b2:	d3 e0                	shl    %cl,%eax
    91b4:	83 e8 01             	sub    $0x1,%eax
    91b7:	08 44 32 01          	or     %al,0x1(%rdx,%rsi,1)
    91bb:	c3                   	ret    
    91bc:	0f 1f 40 00          	nopl   0x0(%rax)
    91c0:	89 d1                	mov    %edx,%ecx
    91c2:	b8 01 00 00 00       	mov    $0x1,%eax
    91c7:	d3 e0                	shl    %cl,%eax
    91c9:	89 f1                	mov    %esi,%ecx
    91cb:	83 e8 01             	sub    $0x1,%eax
    91ce:	d3 e0                	shl    %cl,%eax
    91d0:	44 09 d0             	or     %r10d,%eax
    91d3:	41 88 01             	mov    %al,(%r9)
    91d6:	c3                   	ret    
    91d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    91de:	00 00 
    91e0:	48 89 c6             	mov    %rax,%rsi
    91e3:	eb bf                	jmp    91a4 <bit_array_set_range+0x74>
    91e5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    91ec:	00 00 00 
    91ef:	90                   	nop

00000000000091f0 <bit_array_set_all>:
    91f0:	f3 0f 1e fa          	endbr64 
    91f4:	48 8b 17             	mov    (%rdi),%rdx
    91f7:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    91fb:	be ff 00 00 00       	mov    $0xff,%esi
    9200:	e9 0b 77 00 00       	jmp    10910 <memset>
    9205:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    920c:	00 00 00 
    920f:	90                   	nop

0000000000009210 <clear_mask>:
    9210:	f3 0f 1e fa          	endbr64 
    9214:	89 f1                	mov    %esi,%ecx
    9216:	b8 01 00 00 00       	mov    $0x1,%eax
    921b:	d3 e0                	shl    %cl,%eax
    921d:	89 f9                	mov    %edi,%ecx
    921f:	83 e8 01             	sub    $0x1,%eax
    9222:	d3 e0                	shl    %cl,%eax
    9224:	f7 d0                	not    %eax
    9226:	c3                   	ret    
    9227:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    922e:	00 00 

0000000000009230 <bit_array_reset_range>:
    9230:	f3 0f 1e fa          	endbr64 
    9234:	48 89 f0             	mov    %rsi,%rax
    9237:	4c 8b 4f 10          	mov    0x10(%rdi),%r9
    923b:	83 e6 07             	and    $0x7,%esi
    923e:	b9 08 00 00 00       	mov    $0x8,%ecx
    9243:	48 c1 e8 03          	shr    $0x3,%rax
    9247:	48 29 f1             	sub    %rsi,%rcx
    924a:	49 89 d0             	mov    %rdx,%r8
    924d:	49 01 c1             	add    %rax,%r9
    9250:	45 0f b6 11          	movzbl (%r9),%r10d
    9254:	48 39 d1             	cmp    %rdx,%rcx
    9257:	73 67                	jae    92c0 <bit_array_reset_range+0x90>
    9259:	ba 01 00 00 00       	mov    $0x1,%edx
    925e:	d3 e2                	shl    %cl,%edx
    9260:	89 f1                	mov    %esi,%ecx
    9262:	83 ea 01             	sub    $0x1,%edx
    9265:	d3 e2                	shl    %cl,%edx
    9267:	4a 8d 4c 06 f8       	lea    -0x8(%rsi,%r8,1),%rcx
    926c:	f7 d2                	not    %edx
    926e:	44 21 d2             	and    %r10d,%edx
    9271:	41 88 11             	mov    %dl,(%r9)
    9274:	48 83 f9 07          	cmp    $0x7,%rcx
    9278:	76 66                	jbe    92e0 <bit_array_reset_range+0xb0>
    927a:	48 8d 51 f8          	lea    -0x8(%rcx),%rdx
    927e:	48 83 c0 01          	add    $0x1,%rax
    9282:	48 c1 ea 03          	shr    $0x3,%rdx
    9286:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
    928a:	eb 08                	jmp    9294 <bit_array_reset_range+0x64>
    928c:	0f 1f 40 00          	nopl   0x0(%rax)
    9290:	48 83 c0 01          	add    $0x1,%rax
    9294:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    9298:	c6 04 02 00          	movb   $0x0,(%rdx,%rax,1)
    929c:	48 39 f0             	cmp    %rsi,%rax
    929f:	75 ef                	jne    9290 <bit_array_reset_range+0x60>
    92a1:	83 e1 07             	and    $0x7,%ecx
    92a4:	48 85 c9             	test   %rcx,%rcx
    92a7:	74 0f                	je     92b8 <bit_array_reset_range+0x88>
    92a9:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    92ad:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    92b2:	d3 e0                	shl    %cl,%eax
    92b4:	20 44 32 01          	and    %al,0x1(%rdx,%rsi,1)
    92b8:	c3                   	ret    
    92b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    92c0:	89 d1                	mov    %edx,%ecx
    92c2:	b8 01 00 00 00       	mov    $0x1,%eax
    92c7:	d3 e0                	shl    %cl,%eax
    92c9:	89 f1                	mov    %esi,%ecx
    92cb:	83 e8 01             	sub    $0x1,%eax
    92ce:	d3 e0                	shl    %cl,%eax
    92d0:	f7 d0                	not    %eax
    92d2:	44 21 d0             	and    %r10d,%eax
    92d5:	41 88 01             	mov    %al,(%r9)
    92d8:	c3                   	ret    
    92d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    92e0:	48 89 c6             	mov    %rax,%rsi
    92e3:	eb bf                	jmp    92a4 <bit_array_reset_range+0x74>
    92e5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    92ec:	00 00 00 
    92ef:	90                   	nop

00000000000092f0 <bit_array_reset_all>:
    92f0:	f3 0f 1e fa          	endbr64 
    92f4:	48 8b 17             	mov    (%rdi),%rdx
    92f7:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    92fb:	31 f6                	xor    %esi,%esi
    92fd:	e9 0e 76 00 00       	jmp    10910 <memset>
    9302:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    9309:	00 00 00 
    930c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000009310 <bit_array_reattach>:
    9310:	f3 0f 1e fa          	endbr64 
    9314:	41 54                	push   %r12
    9316:	49 89 d4             	mov    %rdx,%r12
    9319:	55                   	push   %rbp
    931a:	48 89 f5             	mov    %rsi,%rbp
    931d:	53                   	push   %rbx
    931e:	48 89 fb             	mov    %rdi,%rbx
    9321:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    9325:	48 85 ff             	test   %rdi,%rdi
    9328:	74 05                	je     932f <bit_array_reattach+0x1f>
    932a:	e8 71 23 00 00       	call   b6a0 <efree>
    932f:	48 8d 45 07          	lea    0x7(%rbp),%rax
    9333:	48 89 6b 08          	mov    %rbp,0x8(%rbx)
    9337:	48 c1 e8 03          	shr    $0x3,%rax
    933b:	4c 89 63 10          	mov    %r12,0x10(%rbx)
    933f:	48 89 03             	mov    %rax,(%rbx)
    9342:	5b                   	pop    %rbx
    9343:	5d                   	pop    %rbp
    9344:	41 5c                	pop    %r12
    9346:	c3                   	ret    
    9347:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    934e:	00 00 

0000000000009350 <bit_array_split>:
    9350:	f3 0f 1e fa          	endbr64 
    9354:	41 57                	push   %r15
    9356:	41 56                	push   %r14
    9358:	41 55                	push   %r13
    935a:	41 54                	push   %r12
    935c:	55                   	push   %rbp
    935d:	53                   	push   %rbx
    935e:	48 89 fb             	mov    %rdi,%rbx
    9361:	48 83 ec 38          	sub    $0x38,%rsp
    9365:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    936a:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    936f:	48 85 f6             	test   %rsi,%rsi
    9372:	0f 84 88 01 00 00    	je     9500 <bit_array_split+0x1b0>
    9378:	4c 8b 77 08          	mov    0x8(%rdi),%r14
    937c:	45 31 e4             	xor    %r12d,%r12d
    937f:	4c 39 f6             	cmp    %r14,%rsi
    9382:	72 24                	jb     93a8 <bit_array_split+0x58>
    9384:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    9389:	48 89 18             	mov    %rbx,(%rax)
    938c:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    9391:	4c 89 20             	mov    %r12,(%rax)
    9394:	31 c0                	xor    %eax,%eax
    9396:	48 83 c4 38          	add    $0x38,%rsp
    939a:	5b                   	pop    %rbx
    939b:	5d                   	pop    %rbp
    939c:	41 5c                	pop    %r12
    939e:	41 5d                	pop    %r13
    93a0:	41 5e                	pop    %r14
    93a2:	41 5f                	pop    %r15
    93a4:	c3                   	ret    
    93a5:	0f 1f 00             	nopl   (%rax)
    93a8:	48 8d 46 07          	lea    0x7(%rsi),%rax
    93ac:	48 89 f5             	mov    %rsi,%rbp
    93af:	41 89 f7             	mov    %esi,%r15d
    93b2:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
    93b7:	48 c1 e8 03          	shr    $0x3,%rax
    93bb:	49 29 f6             	sub    %rsi,%r14
    93be:	48 c1 ed 03          	shr    $0x3,%rbp
    93c2:	41 83 e7 07          	and    $0x7,%r15d
    93c6:	48 89 c7             	mov    %rax,%rdi
    93c9:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    93ce:	e8 4d 20 00 00       	call   b420 <emalloc>
    93d3:	49 89 c5             	mov    %rax,%r13
    93d6:	48 85 c0             	test   %rax,%rax
    93d9:	0f 84 98 01 00 00    	je     9577 <bit_array_split+0x227>
    93df:	48 85 ed             	test   %rbp,%rbp
    93e2:	0f 84 80 01 00 00    	je     9568 <bit_array_split+0x218>
    93e8:	31 c0                	xor    %eax,%eax
    93ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    93f0:	48 8b 53 10          	mov    0x10(%rbx),%rdx
    93f4:	0f b6 14 02          	movzbl (%rdx,%rax,1),%edx
    93f8:	41 88 54 05 00       	mov    %dl,0x0(%r13,%rax,1)
    93fd:	48 83 c0 01          	add    $0x1,%rax
    9401:	48 39 c5             	cmp    %rax,%rbp
    9404:	75 ea                	jne    93f0 <bit_array_split+0xa0>
    9406:	48 89 ea             	mov    %rbp,%rdx
    9409:	45 84 ff             	test   %r15b,%r15b
    940c:	0f 85 fe 00 00 00    	jne    9510 <bit_array_split+0x1c0>
    9412:	4c 89 f7             	mov    %r14,%rdi
    9415:	e8 26 fa ff ff       	call   8e40 <bit_array_new>
    941a:	49 89 c4             	mov    %rax,%r12
    941d:	48 85 c0             	test   %rax,%rax
    9420:	0f 84 49 01 00 00    	je     956f <bit_array_split+0x21f>
    9426:	49 89 ea             	mov    %rbp,%r10
    9429:	31 d2                	xor    %edx,%edx
    942b:	49 83 fe 07          	cmp    $0x7,%r14
    942f:	76 78                	jbe    94a9 <bit_array_split+0x159>
    9431:	49 8d 46 f8          	lea    -0x8(%r14),%rax
    9435:	45 0f b6 df          	movzbl %r15b,%r11d
    9439:	41 b9 08 00 00 00    	mov    $0x8,%r9d
    943f:	31 ff                	xor    %edi,%edi
    9441:	48 c1 e8 03          	shr    $0x3,%rax
    9445:	48 8d 55 01          	lea    0x1(%rbp),%rdx
    9449:	44 88 7c 24 2f       	mov    %r15b,0x2f(%rsp)
    944e:	45 29 d9             	sub    %r11d,%r9d
    9451:	48 89 c6             	mov    %rax,%rsi
    9454:	4c 8d 14 02          	lea    (%rdx,%rax,1),%r10
    9458:	eb 0a                	jmp    9464 <bit_array_split+0x114>
    945a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9460:	48 83 c2 01          	add    $0x1,%rdx
    9464:	4c 8b 43 10          	mov    0x10(%rbx),%r8
    9468:	48 89 e8             	mov    %rbp,%rax
    946b:	44 89 d9             	mov    %r11d,%ecx
    946e:	49 89 ff             	mov    %rdi,%r15
    9471:	48 89 d5             	mov    %rdx,%rbp
    9474:	48 83 c7 01          	add    $0x1,%rdi
    9478:	41 0f b6 04 00       	movzbl (%r8,%rax,1),%eax
    947d:	45 0f b6 04 10       	movzbl (%r8,%rdx,1),%r8d
    9482:	d3 f8                	sar    %cl,%eax
    9484:	44 89 c9             	mov    %r9d,%ecx
    9487:	41 d3 e0             	shl    %cl,%r8d
    948a:	49 8b 4c 24 10       	mov    0x10(%r12),%rcx
    948f:	44 09 c0             	or     %r8d,%eax
    9492:	42 88 04 39          	mov    %al,(%rcx,%r15,1)
    9496:	4c 39 d2             	cmp    %r10,%rdx
    9499:	75 c5                	jne    9460 <bit_array_split+0x110>
    949b:	44 0f b6 7c 24 2f    	movzbl 0x2f(%rsp),%r15d
    94a1:	48 8d 56 01          	lea    0x1(%rsi),%rdx
    94a5:	41 83 e6 07          	and    $0x7,%r14d
    94a9:	b8 08 00 00 00       	mov    $0x8,%eax
    94ae:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    94b2:	44 29 f8             	sub    %r15d,%eax
    94b5:	48 0f be c0          	movsbq %al,%rax
    94b9:	4c 39 f0             	cmp    %r14,%rax
    94bc:	72 72                	jb     9530 <bit_array_split+0x1e0>
    94be:	4d 85 f6             	test   %r14,%r14
    94c1:	74 16                	je     94d9 <bit_array_split+0x189>
    94c3:	42 0f b6 04 17       	movzbl (%rdi,%r10,1),%eax
    94c8:	49 8b 74 24 10       	mov    0x10(%r12),%rsi
    94cd:	44 89 f9             	mov    %r15d,%ecx
    94d0:	d3 f8                	sar    %cl,%eax
    94d2:	88 04 16             	mov    %al,(%rsi,%rdx,1)
    94d5:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    94d9:	48 85 ff             	test   %rdi,%rdi
    94dc:	74 05                	je     94e3 <bit_array_split+0x193>
    94de:	e8 bd 21 00 00       	call   b6a0 <efree>
    94e3:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    94e8:	4c 89 6b 10          	mov    %r13,0x10(%rbx)
    94ec:	48 89 03             	mov    %rax,(%rbx)
    94ef:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    94f4:	48 89 43 08          	mov    %rax,0x8(%rbx)
    94f8:	e9 87 fe ff ff       	jmp    9384 <bit_array_split+0x34>
    94fd:	0f 1f 00             	nopl   (%rax)
    9500:	49 89 fc             	mov    %rdi,%r12
    9503:	31 db                	xor    %ebx,%ebx
    9505:	e9 7a fe ff ff       	jmp    9384 <bit_array_split+0x34>
    950a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9510:	48 8b 73 10          	mov    0x10(%rbx),%rsi
    9514:	b8 01 00 00 00       	mov    $0x1,%eax
    9519:	44 89 f9             	mov    %r15d,%ecx
    951c:	d3 e0                	shl    %cl,%eax
    951e:	83 e8 01             	sub    $0x1,%eax
    9521:	22 04 16             	and    (%rsi,%rdx,1),%al
    9524:	41 88 44 15 00       	mov    %al,0x0(%r13,%rdx,1)
    9529:	e9 e4 fe ff ff       	jmp    9412 <bit_array_split+0xc2>
    952e:	66 90                	xchg   %ax,%ax
    9530:	42 0f b6 44 17 01    	movzbl 0x1(%rdi,%r10,1),%eax
    9536:	45 0f b6 c7          	movzbl %r15b,%r8d
    953a:	b9 08 00 00 00       	mov    $0x8,%ecx
    953f:	42 0f b6 3c 17       	movzbl (%rdi,%r10,1),%edi
    9544:	44 29 c1             	sub    %r8d,%ecx
    9547:	49 8b 74 24 10       	mov    0x10(%r12),%rsi
    954c:	d3 e0                	shl    %cl,%eax
    954e:	44 89 f9             	mov    %r15d,%ecx
    9551:	d3 ff                	sar    %cl,%edi
    9553:	09 f8                	or     %edi,%eax
    9555:	88 04 16             	mov    %al,(%rsi,%rdx,1)
    9558:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    955c:	e9 78 ff ff ff       	jmp    94d9 <bit_array_split+0x189>
    9561:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9568:	31 d2                	xor    %edx,%edx
    956a:	e9 9a fe ff ff       	jmp    9409 <bit_array_split+0xb9>
    956f:	4c 89 ef             	mov    %r13,%rdi
    9572:	e8 29 21 00 00       	call   b6a0 <efree>
    9577:	b8 0c 00 00 00       	mov    $0xc,%eax
    957c:	e9 15 fe ff ff       	jmp    9396 <bit_array_split+0x46>
    9581:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    9588:	00 00 00 
    958b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000009590 <ema_do_uncommit_real>:
    9590:	55                   	push   %rbp
    9591:	48 89 e5             	mov    %rsp,%rbp
    9594:	41 57                	push   %r15
    9596:	41 56                	push   %r14
    9598:	41 55                	push   %r13
    959a:	41 54                	push   %r12
    959c:	53                   	push   %rbx
    959d:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    95a1:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
    95a8:	89 4c 24 28          	mov    %ecx,0x28(%rsp)
    95ac:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    95b3:	00 00 
    95b5:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
    95bc:	00 
    95bd:	48 8b 47 18          	mov    0x18(%rdi),%rax
    95c1:	f6 47 10 01          	testb  $0x1,0x10(%rdi)
    95c5:	0f 85 68 01 00 00    	jne    9733 <ema_do_uncommit_real+0x1a3>
    95cb:	25 00 ff 00 00       	and    $0xff00,%eax
    95d0:	66 0f ef c0          	pxor   %xmm0,%xmm0
    95d4:	48 89 fb             	mov    %rdi,%rbx
    95d7:	49 89 f7             	mov    %rsi,%r15
    95da:	89 44 24 24          	mov    %eax,0x24(%rsp)
    95de:	8b 44 24 28          	mov    0x28(%rsp),%eax
    95e2:	49 89 d4             	mov    %rdx,%r12
    95e5:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
    95ec:	00 00 
    95ee:	80 cc 04             	or     $0x4,%ah
    95f1:	0f 11 44 24 48       	movups %xmm0,0x48(%rsp)
    95f6:	48 c7 44 24 40 10 04 	movq   $0x410,0x40(%rsp)
    95fd:	00 00 
    95ff:	89 44 24 2c          	mov    %eax,0x2c(%rsp)
    9603:	0f 11 44 24 58       	movups %xmm0,0x58(%rsp)
    9608:	0f 11 44 24 68       	movups %xmm0,0x68(%rsp)
    960d:	0f 1f 00             	nopl   (%rax)
    9610:	4d 39 e7             	cmp    %r12,%r15
    9613:	72 17                	jb     962c <ema_do_uncommit_real+0x9c>
    9615:	e9 19 01 00 00       	jmp    9733 <ema_do_uncommit_real+0x1a3>
    961a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9620:	49 81 c7 00 10 00 00 	add    $0x1000,%r15
    9627:	4d 39 e7             	cmp    %r12,%r15
    962a:	73 17                	jae    9643 <ema_do_uncommit_real+0xb3>
    962c:	4c 89 fe             	mov    %r15,%rsi
    962f:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    9633:	48 2b 33             	sub    (%rbx),%rsi
    9636:	48 c1 ee 0c          	shr    $0xc,%rsi
    963a:	e8 01 f9 ff ff       	call   8f40 <bit_array_test>
    963f:	84 c0                	test   %al,%al
    9641:	74 dd                	je     9620 <ema_do_uncommit_real+0x90>
    9643:	4c 89 7c 24 38       	mov    %r15,0x38(%rsp)
    9648:	4d 39 fc             	cmp    %r15,%r12
    964b:	0f 84 e2 00 00 00    	je     9733 <ema_do_uncommit_real+0x1a3>
    9651:	49 81 c7 00 10 00 00 	add    $0x1000,%r15
    9658:	4d 39 e7             	cmp    %r12,%r15
    965b:	72 17                	jb     9674 <ema_do_uncommit_real+0xe4>
    965d:	e9 f5 00 00 00       	jmp    9757 <ema_do_uncommit_real+0x1c7>
    9662:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9668:	49 81 c7 00 10 00 00 	add    $0x1000,%r15
    966f:	4d 39 e7             	cmp    %r12,%r15
    9672:	73 17                	jae    968b <ema_do_uncommit_real+0xfb>
    9674:	4c 89 fe             	mov    %r15,%rsi
    9677:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    967b:	48 2b 33             	sub    (%rbx),%rsi
    967e:	48 c1 ee 0c          	shr    $0xc,%rsi
    9682:	e8 b9 f8 ff ff       	call   8f40 <bit_array_test>
    9687:	84 c0                	test   %al,%al
    9689:	75 dd                	jne    9668 <ema_do_uncommit_real+0xd8>
    968b:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
    9690:	4c 89 f8             	mov    %r15,%rax
    9693:	48 29 c8             	sub    %rcx,%rax
    9696:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    969b:	8b 54 24 24          	mov    0x24(%rsp),%edx
    969f:	8b 44 24 28          	mov    0x28(%rsp),%eax
    96a3:	8b 4c 24 2c          	mov    0x2c(%rsp),%ecx
    96a7:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
    96ac:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
    96b1:	09 c2                	or     %eax,%edx
    96b3:	e8 d8 c1 ff ff       	call   5890 <sgx_mm_modify_ocall>
    96b8:	85 c0                	test   %eax,%eax
    96ba:	75 70                	jne    972c <ema_do_uncommit_real+0x19c>
    96bc:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    96c1:	4c 8d 6c 24 40       	lea    0x40(%rsp),%r13
    96c6:	49 89 c6             	mov    %rax,%r14
    96c9:	4c 39 f8             	cmp    %r15,%rax
    96cc:	73 21                	jae    96ef <ema_do_uncommit_real+0x15f>
    96ce:	66 90                	xchg   %ax,%ax
    96d0:	4c 89 f6             	mov    %r14,%rsi
    96d3:	4c 89 ef             	mov    %r13,%rdi
    96d6:	e8 e4 8d 00 00       	call   124bf <do_eaccept>
    96db:	85 c0                	test   %eax,%eax
    96dd:	0f 85 82 00 00 00    	jne    9765 <ema_do_uncommit_real+0x1d5>
    96e3:	49 81 c6 00 10 00 00 	add    $0x1000,%r14
    96ea:	4d 39 fe             	cmp    %r15,%r14
    96ed:	72 e1                	jb     96d0 <ema_do_uncommit_real+0x140>
    96ef:	4c 8b 74 24 30       	mov    0x30(%rsp),%r14
    96f4:	4c 8b 6c 24 38       	mov    0x38(%rsp),%r13
    96f9:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    96fd:	4c 89 f2             	mov    %r14,%rdx
    9700:	4c 89 ee             	mov    %r13,%rsi
    9703:	48 2b 33             	sub    (%rbx),%rsi
    9706:	48 c1 ea 0c          	shr    $0xc,%rdx
    970a:	48 c1 ee 0c          	shr    $0xc,%rsi
    970e:	e8 1d fb ff ff       	call   9230 <bit_array_reset_range>
    9713:	8b 4c 24 2c          	mov    0x2c(%rsp),%ecx
    9717:	4c 89 f6             	mov    %r14,%rsi
    971a:	4c 89 ef             	mov    %r13,%rdi
    971d:	89 ca                	mov    %ecx,%edx
    971f:	e8 6c c1 ff ff       	call   5890 <sgx_mm_modify_ocall>
    9724:	85 c0                	test   %eax,%eax
    9726:	0f 84 e4 fe ff ff    	je     9610 <ema_do_uncommit_real+0x80>
    972c:	b8 0e 00 00 00       	mov    $0xe,%eax
    9731:	eb 02                	jmp    9735 <ema_do_uncommit_real+0x1a5>
    9733:	31 c0                	xor    %eax,%eax
    9735:	48 8b 94 24 b8 00 00 	mov    0xb8(%rsp),%rdx
    973c:	00 
    973d:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    9744:	00 00 
    9746:	75 22                	jne    976a <ema_do_uncommit_real+0x1da>
    9748:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    974c:	5b                   	pop    %rbx
    974d:	41 5c                	pop    %r12
    974f:	41 5d                	pop    %r13
    9751:	41 5e                	pop    %r14
    9753:	41 5f                	pop    %r15
    9755:	5d                   	pop    %rbp
    9756:	c3                   	ret    
    9757:	48 c7 44 24 30 00 10 	movq   $0x1000,0x30(%rsp)
    975e:	00 00 
    9760:	e9 36 ff ff ff       	jmp    969b <ema_do_uncommit_real+0x10b>
    9765:	e8 cd 8d 00 00       	call   12537 <abort>
    976a:	e8 81 72 00 00       	call   109f0 <__stack_chk_fail>
    976f:	90                   	nop

0000000000009770 <get_ema_alloc_flags>:
    9770:	f3 0f 1e fa          	endbr64 
    9774:	8b 47 10             	mov    0x10(%rdi),%eax
    9777:	c3                   	ret    
    9778:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    977f:	00 

0000000000009780 <get_ema_si_flags>:
    9780:	f3 0f 1e fa          	endbr64 
    9784:	48 8b 47 18          	mov    0x18(%rdi),%rax
    9788:	c3                   	ret    
    9789:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000009790 <ema_fault_handler>:
    9790:	f3 0f 1e fa          	endbr64 
    9794:	48 85 f6             	test   %rsi,%rsi
    9797:	74 07                	je     97a0 <ema_fault_handler+0x10>
    9799:	48 8b 47 30          	mov    0x30(%rdi),%rax
    979d:	48 89 06             	mov    %rax,(%rsi)
    97a0:	48 8b 47 28          	mov    0x28(%rdi),%rax
    97a4:	c3                   	ret    
    97a5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    97ac:	00 00 00 
    97af:	90                   	nop

00000000000097b0 <ema_set_eaccept_full>:
    97b0:	f3 0f 1e fa          	endbr64 
    97b4:	53                   	push   %rbx
    97b5:	48 89 fb             	mov    %rdi,%rbx
    97b8:	48 8b 7f 20          	mov    0x20(%rdi),%rdi
    97bc:	48 85 ff             	test   %rdi,%rdi
    97bf:	74 0f                	je     97d0 <ema_set_eaccept_full+0x20>
    97c1:	e8 2a fa ff ff       	call   91f0 <bit_array_set_all>
    97c6:	31 c0                	xor    %eax,%eax
    97c8:	5b                   	pop    %rbx
    97c9:	c3                   	ret    
    97ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    97d0:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    97d4:	48 c1 ef 0c          	shr    $0xc,%rdi
    97d8:	e8 e3 f6 ff ff       	call   8ec0 <bit_array_new_set>
    97dd:	48 89 43 20          	mov    %rax,0x20(%rbx)
    97e1:	48 85 c0             	test   %rax,%rax
    97e4:	75 e0                	jne    97c6 <ema_set_eaccept_full+0x16>
    97e6:	b8 0c 00 00 00       	mov    $0xc,%eax
    97eb:	5b                   	pop    %rbx
    97ec:	c3                   	ret    
    97ed:	0f 1f 00             	nopl   (%rax)

00000000000097f0 <ema_clear_eaccept_full>:
    97f0:	f3 0f 1e fa          	endbr64 
    97f4:	53                   	push   %rbx
    97f5:	48 89 fb             	mov    %rdi,%rbx
    97f8:	48 8b 7f 20          	mov    0x20(%rdi),%rdi
    97fc:	48 85 ff             	test   %rdi,%rdi
    97ff:	74 0f                	je     9810 <ema_clear_eaccept_full+0x20>
    9801:	e8 ea fa ff ff       	call   92f0 <bit_array_reset_all>
    9806:	31 c0                	xor    %eax,%eax
    9808:	5b                   	pop    %rbx
    9809:	c3                   	ret    
    980a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9810:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    9814:	48 c1 ef 0c          	shr    $0xc,%rdi
    9818:	e8 d3 f6 ff ff       	call   8ef0 <bit_array_new_reset>
    981d:	48 89 43 20          	mov    %rax,0x20(%rbx)
    9821:	48 85 c0             	test   %rax,%rax
    9824:	75 e0                	jne    9806 <ema_clear_eaccept_full+0x16>
    9826:	b8 0c 00 00 00       	mov    $0xc,%eax
    982b:	5b                   	pop    %rbx
    982c:	c3                   	ret    
    982d:	0f 1f 00             	nopl   (%rax)

0000000000009830 <ema_set_eaccept>:
    9830:	f3 0f 1e fa          	endbr64 
    9834:	48 85 ff             	test   %rdi,%rdi
    9837:	74 6f                	je     98a8 <ema_set_eaccept+0x78>
    9839:	55                   	push   %rbp
    983a:	48 89 fd             	mov    %rdi,%rbp
    983d:	48 83 ec 10          	sub    $0x10,%rsp
    9841:	48 8b 07             	mov    (%rdi),%rax
    9844:	48 8b 7f 20          	mov    0x20(%rdi),%rdi
    9848:	48 29 c6             	sub    %rax,%rsi
    984b:	48 29 c2             	sub    %rax,%rdx
    984e:	48 c1 ee 0c          	shr    $0xc,%rsi
    9852:	48 c1 ea 0c          	shr    $0xc,%rdx
    9856:	48 85 ff             	test   %rdi,%rdi
    9859:	74 15                	je     9870 <ema_set_eaccept+0x40>
    985b:	48 29 f2             	sub    %rsi,%rdx
    985e:	e8 cd f8 ff ff       	call   9130 <bit_array_set_range>
    9863:	31 c0                	xor    %eax,%eax
    9865:	48 83 c4 10          	add    $0x10,%rsp
    9869:	5d                   	pop    %rbp
    986a:	c3                   	ret    
    986b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9870:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
    9874:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    9879:	48 89 34 24          	mov    %rsi,(%rsp)
    987d:	48 c1 ef 0c          	shr    $0xc,%rdi
    9881:	e8 6a f6 ff ff       	call   8ef0 <bit_array_new_reset>
    9886:	48 8b 34 24          	mov    (%rsp),%rsi
    988a:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    988f:	48 85 c0             	test   %rax,%rax
    9892:	48 89 45 20          	mov    %rax,0x20(%rbp)
    9896:	48 89 c7             	mov    %rax,%rdi
    9899:	75 c0                	jne    985b <ema_set_eaccept+0x2b>
    989b:	b8 0c 00 00 00       	mov    $0xc,%eax
    98a0:	eb c3                	jmp    9865 <ema_set_eaccept+0x35>
    98a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    98a8:	b8 16 00 00 00       	mov    $0x16,%eax
    98ad:	c3                   	ret    
    98ae:	66 90                	xchg   %ax,%ax

00000000000098b0 <ema_page_committed>:
    98b0:	f3 0f 1e fa          	endbr64 
    98b4:	48 8b 47 20          	mov    0x20(%rdi),%rax
    98b8:	48 85 c0             	test   %rax,%rax
    98bb:	74 13                	je     98d0 <ema_page_committed+0x20>
    98bd:	48 2b 37             	sub    (%rdi),%rsi
    98c0:	48 89 c7             	mov    %rax,%rdi
    98c3:	48 c1 ee 0c          	shr    $0xc,%rsi
    98c7:	e9 74 f6 ff ff       	jmp    8f40 <bit_array_test>
    98cc:	0f 1f 40 00          	nopl   0x0(%rax)
    98d0:	31 c0                	xor    %eax,%eax
    98d2:	c3                   	ret    
    98d3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    98da:	00 00 00 
    98dd:	0f 1f 00             	nopl   (%rax)

00000000000098e0 <search_ema>:
    98e0:	f3 0f 1e fa          	endbr64 
    98e4:	48 8b 0f             	mov    (%rdi),%rcx
    98e7:	48 8b 41 38          	mov    0x38(%rcx),%rax
    98eb:	48 39 c1             	cmp    %rax,%rcx
    98ee:	74 1a                	je     990a <search_ema+0x2a>
    98f0:	48 8b 10             	mov    (%rax),%rdx
    98f3:	48 39 d6             	cmp    %rdx,%rsi
    98f6:	72 09                	jb     9901 <search_ema+0x21>
    98f8:	48 03 50 08          	add    0x8(%rax),%rdx
    98fc:	48 39 d6             	cmp    %rdx,%rsi
    98ff:	72 0b                	jb     990c <search_ema+0x2c>
    9901:	48 8b 40 38          	mov    0x38(%rax),%rax
    9905:	48 39 c1             	cmp    %rax,%rcx
    9908:	75 e6                	jne    98f0 <search_ema+0x10>
    990a:	31 c0                	xor    %eax,%eax
    990c:	c3                   	ret    
    990d:	0f 1f 00             	nopl   (%rax)

0000000000009910 <insert_ema>:
    9910:	f3 0f 1e fa          	endbr64 
    9914:	48 8b 56 40          	mov    0x40(%rsi),%rdx
    9918:	66 48 0f 6e c6       	movq   %rsi,%xmm0
    991d:	48 89 f8             	mov    %rdi,%rax
    9920:	66 48 0f 6e ca       	movq   %rdx,%xmm1
    9925:	66 0f 6c c1          	punpcklqdq %xmm1,%xmm0
    9929:	0f 11 47 38          	movups %xmm0,0x38(%rdi)
    992d:	48 89 7a 38          	mov    %rdi,0x38(%rdx)
    9931:	48 89 7e 40          	mov    %rdi,0x40(%rsi)
    9935:	c3                   	ret    
    9936:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    993d:	00 00 00 

0000000000009940 <push_back_ema>:
    9940:	f3 0f 1e fa          	endbr64 
    9944:	48 8b 07             	mov    (%rdi),%rax
    9947:	48 8b 50 40          	mov    0x40(%rax),%rdx
    994b:	66 48 0f 6e c0       	movq   %rax,%xmm0
    9950:	66 48 0f 6e ca       	movq   %rdx,%xmm1
    9955:	66 0f 6c c1          	punpcklqdq %xmm1,%xmm0
    9959:	0f 11 46 38          	movups %xmm0,0x38(%rsi)
    995d:	48 89 72 38          	mov    %rsi,0x38(%rdx)
    9961:	48 89 70 40          	mov    %rsi,0x40(%rax)
    9965:	c3                   	ret    
    9966:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    996d:	00 00 00 

0000000000009970 <search_ema_range>:
    9970:	f3 0f 1e fa          	endbr64 
    9974:	4c 8b 0f             	mov    (%rdi),%r9
    9977:	49 89 fa             	mov    %rdi,%r10
    997a:	49 8b 41 38          	mov    0x38(%r9),%rax
    997e:	49 39 c1             	cmp    %rax,%r9
    9981:	75 0e                	jne    9991 <search_ema_range+0x21>
    9983:	eb 4b                	jmp    99d0 <search_ema_range+0x60>
    9985:	0f 1f 00             	nopl   (%rax)
    9988:	48 8b 40 38          	mov    0x38(%rax),%rax
    998c:	49 39 c1             	cmp    %rax,%r9
    998f:	74 3f                	je     99d0 <search_ema_range+0x60>
    9991:	48 8b 38             	mov    (%rax),%rdi
    9994:	48 03 78 08          	add    0x8(%rax),%rdi
    9998:	48 39 fe             	cmp    %rdi,%rsi
    999b:	73 eb                	jae    9988 <search_ema_range+0x18>
    999d:	49 39 c1             	cmp    %rax,%r9
    99a0:	74 2e                	je     99d0 <search_ema_range+0x60>
    99a2:	48 39 10             	cmp    %rdx,(%rax)
    99a5:	73 29                	jae    99d0 <search_ema_range+0x60>
    99a7:	48 89 01             	mov    %rax,(%rcx)
    99aa:	49 8b 0a             	mov    (%r10),%rcx
    99ad:	48 39 c1             	cmp    %rax,%rcx
    99b0:	74 14                	je     99c6 <search_ema_range+0x56>
    99b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    99b8:	48 8b 40 38          	mov    0x38(%rax),%rax
    99bc:	48 39 c1             	cmp    %rax,%rcx
    99bf:	74 05                	je     99c6 <search_ema_range+0x56>
    99c1:	48 39 10             	cmp    %rdx,(%rax)
    99c4:	72 f2                	jb     99b8 <search_ema_range+0x48>
    99c6:	31 d2                	xor    %edx,%edx
    99c8:	49 89 00             	mov    %rax,(%r8)
    99cb:	89 d0                	mov    %edx,%eax
    99cd:	c3                   	ret    
    99ce:	66 90                	xchg   %ax,%ax
    99d0:	48 c7 01 00 00 00 00 	movq   $0x0,(%rcx)
    99d7:	31 c0                	xor    %eax,%eax
    99d9:	ba ff ff ff ff       	mov    $0xffffffff,%edx
    99de:	eb e8                	jmp    99c8 <search_ema_range+0x58>

00000000000099e0 <ema_split>:
    99e0:	f3 0f 1e fa          	endbr64 
    99e4:	41 56                	push   %r14
    99e6:	41 89 d6             	mov    %edx,%r14d
    99e9:	41 55                	push   %r13
    99eb:	49 89 cd             	mov    %rcx,%r13
    99ee:	41 54                	push   %r12
    99f0:	49 89 f4             	mov    %rsi,%r12
    99f3:	55                   	push   %rbp
    99f4:	53                   	push   %rbx
    99f5:	48 89 fb             	mov    %rdi,%rbx
    99f8:	bf 48 00 00 00       	mov    $0x48,%edi
    99fd:	48 83 ec 30          	sub    $0x30,%rsp
    9a01:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    9a08:	00 00 
    9a0a:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    9a0f:	31 c0                	xor    %eax,%eax
    9a11:	e8 0a 1a 00 00       	call   b420 <emalloc>
    9a16:	48 85 c0             	test   %rax,%rax
    9a19:	0f 84 39 01 00 00    	je     9b58 <ema_split+0x178>
    9a1f:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
    9a26:	00 00 
    9a28:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    9a2c:	48 89 c5             	mov    %rax,%rbp
    9a2f:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    9a36:	00 00 
    9a38:	48 85 ff             	test   %rdi,%rdi
    9a3b:	74 21                	je     9a5e <ema_split+0x7e>
    9a3d:	4c 89 e6             	mov    %r12,%rsi
    9a40:	48 8d 4c 24 20       	lea    0x20(%rsp),%rcx
    9a45:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
    9a4a:	48 2b 33             	sub    (%rbx),%rsi
    9a4d:	48 c1 ee 0c          	shr    $0xc,%rsi
    9a51:	e8 fa f8 ff ff       	call   9350 <bit_array_split>
    9a56:	85 c0                	test   %eax,%eax
    9a58:	0f 85 e2 00 00 00    	jne    9b40 <ema_split+0x160>
    9a5e:	ba 48 00 00 00       	mov    $0x48,%edx
    9a63:	48 89 de             	mov    %rbx,%rsi
    9a66:	48 89 ef             	mov    %rbp,%rdi
    9a69:	e8 62 6c 00 00       	call   106d0 <memcpy>
    9a6e:	45 84 f6             	test   %r14b,%r14b
    9a71:	0f 85 99 00 00 00    	jne    9b10 <ema_split+0x130>
    9a77:	48 8b 43 38          	mov    0x38(%rbx),%rax
    9a7b:	48 89 d9             	mov    %rbx,%rcx
    9a7e:	48 8b 50 40          	mov    0x40(%rax),%rdx
    9a82:	66 48 0f 6e c0       	movq   %rax,%xmm0
    9a87:	66 48 0f 6e da       	movq   %rdx,%xmm3
    9a8c:	66 0f 6c c3          	punpcklqdq %xmm3,%xmm0
    9a90:	0f 11 45 38          	movups %xmm0,0x38(%rbp)
    9a94:	48 89 6a 38          	mov    %rbp,0x38(%rdx)
    9a98:	48 89 ea             	mov    %rbp,%rdx
    9a9b:	48 89 68 40          	mov    %rbp,0x40(%rax)
    9a9f:	48 8b 03             	mov    (%rbx),%rax
    9aa2:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    9aa6:	4c 89 e7             	mov    %r12,%rdi
    9aa9:	48 29 c7             	sub    %rax,%rdi
    9aac:	66 48 0f 6e c0       	movq   %rax,%xmm0
    9ab1:	48 01 f0             	add    %rsi,%rax
    9ab4:	66 48 0f 6e cf       	movq   %rdi,%xmm1
    9ab9:	4c 29 e0             	sub    %r12,%rax
    9abc:	48 83 7b 20 00       	cmpq   $0x0,0x20(%rbx)
    9ac1:	66 0f 6c c1          	punpcklqdq %xmm1,%xmm0
    9ac5:	0f 11 01             	movups %xmm0,(%rcx)
    9ac8:	4c 89 22             	mov    %r12,(%rdx)
    9acb:	48 89 42 08          	mov    %rax,0x8(%rdx)
    9acf:	74 12                	je     9ae3 <ema_split+0x103>
    9ad1:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    9ad6:	48 89 41 20          	mov    %rax,0x20(%rcx)
    9ada:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    9adf:	48 89 42 20          	mov    %rax,0x20(%rdx)
    9ae3:	49 89 6d 00          	mov    %rbp,0x0(%r13)
    9ae7:	31 c0                	xor    %eax,%eax
    9ae9:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    9aee:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    9af5:	00 00 
    9af7:	75 66                	jne    9b5f <ema_split+0x17f>
    9af9:	48 83 c4 30          	add    $0x30,%rsp
    9afd:	5b                   	pop    %rbx
    9afe:	5d                   	pop    %rbp
    9aff:	41 5c                	pop    %r12
    9b01:	41 5d                	pop    %r13
    9b03:	41 5e                	pop    %r14
    9b05:	c3                   	ret    
    9b06:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    9b0d:	00 00 00 
    9b10:	48 8b 43 40          	mov    0x40(%rbx),%rax
    9b14:	66 48 0f 6e c3       	movq   %rbx,%xmm0
    9b19:	48 89 da             	mov    %rbx,%rdx
    9b1c:	48 89 e9             	mov    %rbp,%rcx
    9b1f:	66 48 0f 6e d0       	movq   %rax,%xmm2
    9b24:	66 0f 6c c2          	punpcklqdq %xmm2,%xmm0
    9b28:	0f 11 45 38          	movups %xmm0,0x38(%rbp)
    9b2c:	48 89 68 38          	mov    %rbp,0x38(%rax)
    9b30:	48 89 6b 40          	mov    %rbp,0x40(%rbx)
    9b34:	e9 66 ff ff ff       	jmp    9a9f <ema_split+0xbf>
    9b39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9b40:	48 89 ef             	mov    %rbp,%rdi
    9b43:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    9b47:	e8 54 1b 00 00       	call   b6a0 <efree>
    9b4c:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    9b50:	eb 97                	jmp    9ae9 <ema_split+0x109>
    9b52:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9b58:	b8 0c 00 00 00       	mov    $0xc,%eax
    9b5d:	eb 8a                	jmp    9ae9 <ema_split+0x109>
    9b5f:	e8 8c 6e 00 00       	call   109f0 <__stack_chk_fail>
    9b64:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    9b6b:	00 00 00 
    9b6e:	66 90                	xchg   %ax,%ax

0000000000009b70 <ema_split_ex>:
    9b70:	f3 0f 1e fa          	endbr64 
    9b74:	41 54                	push   %r12
    9b76:	49 89 cc             	mov    %rcx,%r12
    9b79:	55                   	push   %rbp
    9b7a:	48 89 d5             	mov    %rdx,%rbp
    9b7d:	53                   	push   %rbx
    9b7e:	48 89 fb             	mov    %rdi,%rbx
    9b81:	48 83 ec 10          	sub    $0x10,%rsp
    9b85:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    9b8c:	00 00 
    9b8e:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    9b93:	48 8b 07             	mov    (%rdi),%rax
    9b96:	48 39 f0             	cmp    %rsi,%rax
    9b99:	72 35                	jb     9bd0 <ema_split_ex+0x60>
    9b9b:	48 03 43 08          	add    0x8(%rbx),%rax
    9b9f:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    9ba6:	00 
    9ba7:	48 39 c5             	cmp    %rax,%rbp
    9baa:	72 44                	jb     9bf0 <ema_split_ex+0x80>
    9bac:	48 89 d8             	mov    %rbx,%rax
    9baf:	49 89 04 24          	mov    %rax,(%r12)
    9bb3:	31 c0                	xor    %eax,%eax
    9bb5:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    9bba:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    9bc1:	00 00 
    9bc3:	75 5b                	jne    9c20 <ema_split_ex+0xb0>
    9bc5:	48 83 c4 10          	add    $0x10,%rsp
    9bc9:	5b                   	pop    %rbx
    9bca:	5d                   	pop    %rbp
    9bcb:	41 5c                	pop    %r12
    9bcd:	c3                   	ret    
    9bce:	66 90                	xchg   %ax,%ax
    9bd0:	31 d2                	xor    %edx,%edx
    9bd2:	48 89 e1             	mov    %rsp,%rcx
    9bd5:	e8 06 fe ff ff       	call   99e0 <ema_split>
    9bda:	85 c0                	test   %eax,%eax
    9bdc:	75 d7                	jne    9bb5 <ema_split_ex+0x45>
    9bde:	48 8b 14 24          	mov    (%rsp),%rdx
    9be2:	48 85 d2             	test   %rdx,%rdx
    9be5:	74 31                	je     9c18 <ema_split_ex+0xa8>
    9be7:	48 8b 02             	mov    (%rdx),%rax
    9bea:	48 89 d3             	mov    %rdx,%rbx
    9bed:	eb ac                	jmp    9b9b <ema_split_ex+0x2b>
    9bef:	90                   	nop
    9bf0:	48 89 e1             	mov    %rsp,%rcx
    9bf3:	ba 01 00 00 00       	mov    $0x1,%edx
    9bf8:	48 89 ee             	mov    %rbp,%rsi
    9bfb:	48 89 df             	mov    %rbx,%rdi
    9bfe:	e8 dd fd ff ff       	call   99e0 <ema_split>
    9c03:	85 c0                	test   %eax,%eax
    9c05:	75 ae                	jne    9bb5 <ema_split_ex+0x45>
    9c07:	48 8b 04 24          	mov    (%rsp),%rax
    9c0b:	48 85 c0             	test   %rax,%rax
    9c0e:	75 9f                	jne    9baf <ema_split_ex+0x3f>
    9c10:	eb 9a                	jmp    9bac <ema_split_ex+0x3c>
    9c12:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9c18:	48 8b 03             	mov    (%rbx),%rax
    9c1b:	e9 7b ff ff ff       	jmp    9b9b <ema_split_ex+0x2b>
    9c20:	e8 cb 6d 00 00       	call   109f0 <__stack_chk_fail>
    9c25:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    9c2c:	00 00 00 
    9c2f:	90                   	nop

0000000000009c30 <find_free_region>:
    9c30:	f3 0f 1e fa          	endbr64 
    9c34:	41 57                	push   %r15
    9c36:	49 89 cf             	mov    %rcx,%r15
    9c39:	41 56                	push   %r14
    9c3b:	49 89 fe             	mov    %rdi,%r14
    9c3e:	41 55                	push   %r13
    9c40:	49 89 d5             	mov    %rdx,%r13
    9c43:	41 54                	push   %r12
    9c45:	49 f7 dd             	neg    %r13
    9c48:	55                   	push   %rbp
    9c49:	48 89 f5             	mov    %rsi,%rbp
    9c4c:	53                   	push   %rbx
    9c4d:	48 89 d3             	mov    %rdx,%rbx
    9c50:	48 83 ec 18          	sub    $0x18,%rsp
    9c54:	4c 8b 27             	mov    (%rdi),%r12
    9c57:	49 8b 4c 24 38       	mov    0x38(%r12),%rcx
    9c5c:	49 c7 00 00 00 00 00 	movq   $0x0,(%r8)
    9c63:	49 c7 07 00 00 00 00 	movq   $0x0,(%r15)
    9c6a:	49 39 cc             	cmp    %rcx,%r12
    9c6d:	0f 84 a5 00 00 00    	je     9d18 <find_free_region+0xe8>
    9c73:	48 8b 51 38          	mov    0x38(%rcx),%rdx
    9c77:	4c 8b 11             	mov    (%rcx),%r10
    9c7a:	48 8d 73 ff          	lea    -0x1(%rbx),%rsi
    9c7e:	49 39 d4             	cmp    %rdx,%r12
    9c81:	0f 84 02 01 00 00    	je     9d89 <find_free_region+0x159>
    9c87:	4c 8b 0d 72 0d 02 00 	mov    0x20d72(%rip),%r9        # 2aa00 <mm_user_end>
    9c8e:	48 89 c8             	mov    %rcx,%rax
    9c91:	48 8d 3d d0 03 01 00 	lea    0x103d0(%rip),%rdi        # 1a068 <g_rts_ema_root>
    9c98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    9c9f:	00 
    9ca0:	48 8b 58 08          	mov    0x8(%rax),%rbx
    9ca4:	48 01 f3             	add    %rsi,%rbx
    9ca7:	48 89 d8             	mov    %rbx,%rax
    9caa:	4c 01 d0             	add    %r10,%rax
    9cad:	4c 8b 12             	mov    (%rdx),%r10
    9cb0:	4c 21 e8             	and    %r13,%rax
    9cb3:	49 39 c2             	cmp    %rax,%r10
    9cb6:	72 48                	jb     9d00 <find_free_region+0xd0>
    9cb8:	4d 89 d3             	mov    %r10,%r11
    9cbb:	49 29 c3             	sub    %rax,%r11
    9cbe:	49 39 eb             	cmp    %rbp,%r11
    9cc1:	72 3d                	jb     9d00 <find_free_region+0xd0>
    9cc3:	49 39 fe             	cmp    %rdi,%r14
    9cc6:	75 16                	jne    9cde <find_free_region+0xae>
    9cc8:	49 89 eb             	mov    %rbp,%r11
    9ccb:	49 01 c3             	add    %rax,%r11
    9cce:	72 30                	jb     9d00 <find_free_region+0xd0>
    9cd0:	4c 39 c8             	cmp    %r9,%rax
    9cd3:	73 09                	jae    9cde <find_free_region+0xae>
    9cd5:	4c 39 1d 2c 0d 02 00 	cmp    %r11,0x20d2c(%rip)        # 2aa08 <mm_user_base>
    9cdc:	72 22                	jb     9d00 <find_free_region+0xd0>
    9cde:	49 89 10             	mov    %rdx,(%r8)
    9ce1:	49 89 07             	mov    %rax,(%r15)
    9ce4:	48 83 c4 18          	add    $0x18,%rsp
    9ce8:	b8 01 00 00 00       	mov    $0x1,%eax
    9ced:	5b                   	pop    %rbx
    9cee:	5d                   	pop    %rbp
    9cef:	41 5c                	pop    %r12
    9cf1:	41 5d                	pop    %r13
    9cf3:	41 5e                	pop    %r14
    9cf5:	41 5f                	pop    %r15
    9cf7:	c3                   	ret    
    9cf8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    9cff:	00 
    9d00:	48 8b 5a 38          	mov    0x38(%rdx),%rbx
    9d04:	48 89 d0             	mov    %rdx,%rax
    9d07:	49 39 dc             	cmp    %rbx,%r12
    9d0a:	0f 84 80 00 00 00    	je     9d90 <find_free_region+0x160>
    9d10:	48 89 da             	mov    %rbx,%rdx
    9d13:	eb 8b                	jmp    9ca0 <find_free_region+0x70>
    9d15:	0f 1f 00             	nopl   (%rax)
    9d18:	48 8d 05 49 03 01 00 	lea    0x10349(%rip),%rax        # 1a068 <g_rts_ema_root>
    9d1f:	48 8b 15 e2 0c 02 00 	mov    0x20ce2(%rip),%rdx        # 2aa08 <mm_user_base>
    9d26:	48 39 c7             	cmp    %rax,%rdi
    9d29:	74 25                	je     9d50 <find_free_region+0x120>
    9d2b:	48 8d 44 1a ff       	lea    -0x1(%rdx,%rbx,1),%rax
    9d30:	4c 21 e8             	and    %r13,%rax
    9d33:	48 01 c5             	add    %rax,%rbp
    9d36:	72 40                	jb     9d78 <find_free_region+0x148>
    9d38:	48 39 d0             	cmp    %rdx,%rax
    9d3b:	72 3b                	jb     9d78 <find_free_region+0x148>
    9d3d:	48 39 2d bc 0c 02 00 	cmp    %rbp,0x20cbc(%rip)        # 2aa00 <mm_user_end>
    9d44:	72 32                	jb     9d78 <find_free_region+0x148>
    9d46:	49 89 07             	mov    %rax,(%r15)
    9d49:	4d 89 20             	mov    %r12,(%r8)
    9d4c:	eb 96                	jmp    9ce4 <find_free_region+0xb4>
    9d4e:	66 90                	xchg   %ax,%ax
    9d50:	48 39 f2             	cmp    %rsi,%rdx
    9d53:	0f 83 be 01 00 00    	jae    9f17 <find_free_region+0x2e7>
    9d59:	48 8b 05 a0 0c 02 00 	mov    0x20ca0(%rip),%rax        # 2aa00 <mm_user_end>
    9d60:	4c 8d 74 03 ff       	lea    -0x1(%rbx,%rax,1),%r14
    9d65:	48 89 e8             	mov    %rbp,%rax
    9d68:	4d 21 ee             	and    %r13,%r14
    9d6b:	4c 01 f0             	add    %r14,%rax
    9d6e:	0f 83 e4 00 00 00    	jae    9e58 <find_free_region+0x228>
    9d74:	0f 1f 40 00          	nopl   0x0(%rax)
    9d78:	31 c0                	xor    %eax,%eax
    9d7a:	48 83 c4 18          	add    $0x18,%rsp
    9d7e:	5b                   	pop    %rbx
    9d7f:	5d                   	pop    %rbp
    9d80:	41 5c                	pop    %r12
    9d82:	41 5d                	pop    %r13
    9d84:	41 5e                	pop    %r14
    9d86:	41 5f                	pop    %r15
    9d88:	c3                   	ret    
    9d89:	48 89 d3             	mov    %rdx,%rbx
    9d8c:	48 89 ca             	mov    %rcx,%rdx
    9d8f:	90                   	nop
    9d90:	4d 8d 24 32          	lea    (%r10,%rsi,1),%r12
    9d94:	4c 03 62 08          	add    0x8(%rdx),%r12
    9d98:	48 89 ee             	mov    %rbp,%rsi
    9d9b:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    9da0:	4d 21 ec             	and    %r13,%r12
    9da3:	48 89 0c 24          	mov    %rcx,(%rsp)
    9da7:	4c 89 e7             	mov    %r12,%rdi
    9daa:	e8 71 bc ff ff       	call   5a20 <sgx_mm_is_within_enclave>
    9daf:	48 8b 0c 24          	mov    (%rsp),%rcx
    9db3:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
    9db8:	84 c0                	test   %al,%al
    9dba:	74 4c                	je     9e08 <find_free_region+0x1d8>
    9dbc:	48 89 ee             	mov    %rbp,%rsi
    9dbf:	31 d2                	xor    %edx,%edx
    9dc1:	48 8d 05 a0 02 01 00 	lea    0x102a0(%rip),%rax        # 1a068 <g_rts_ema_root>
    9dc8:	4c 01 e6             	add    %r12,%rsi
    9dcb:	0f 92 c2             	setb   %dl
    9dce:	49 39 c6             	cmp    %rax,%r14
    9dd1:	0f 84 a7 00 00 00    	je     9e7e <find_free_region+0x24e>
    9dd7:	48 85 d2             	test   %rdx,%rdx
    9dda:	0f 85 20 01 00 00    	jne    9f00 <find_free_region+0x2d0>
    9de0:	4c 3b 25 21 0c 02 00 	cmp    0x20c21(%rip),%r12        # 2aa08 <mm_user_base>
    9de7:	0f 82 13 01 00 00    	jb     9f00 <find_free_region+0x2d0>
    9ded:	48 39 35 0c 0c 02 00 	cmp    %rsi,0x20c0c(%rip)        # 2aa00 <mm_user_end>
    9df4:	0f 82 06 01 00 00    	jb     9f00 <find_free_region+0x2d0>
    9dfa:	49 89 18             	mov    %rbx,(%r8)
    9dfd:	4d 89 27             	mov    %r12,(%r15)
    9e00:	e9 df fe ff ff       	jmp    9ce4 <find_free_region+0xb4>
    9e05:	0f 1f 00             	nopl   (%rax)
    9e08:	48 8b 19             	mov    (%rcx),%rbx
    9e0b:	48 39 eb             	cmp    %rbp,%rbx
    9e0e:	0f 82 64 ff ff ff    	jb     9d78 <find_free_region+0x148>
    9e14:	48 29 eb             	sub    %rbp,%rbx
    9e17:	48 8d 05 4a 02 01 00 	lea    0x1024a(%rip),%rax        # 1a068 <g_rts_ema_root>
    9e1e:	4c 21 eb             	and    %r13,%rbx
    9e21:	49 39 c6             	cmp    %rax,%r14
    9e24:	0f 84 85 00 00 00    	je     9eaf <find_free_region+0x27f>
    9e2a:	48 01 dd             	add    %rbx,%rbp
    9e2d:	0f 82 45 ff ff ff    	jb     9d78 <find_free_region+0x148>
    9e33:	48 3b 1d ce 0b 02 00 	cmp    0x20bce(%rip),%rbx        # 2aa08 <mm_user_base>
    9e3a:	0f 82 38 ff ff ff    	jb     9d78 <find_free_region+0x148>
    9e40:	48 39 2d b9 0b 02 00 	cmp    %rbp,0x20bb9(%rip)        # 2aa00 <mm_user_end>
    9e47:	0f 82 2b ff ff ff    	jb     9d78 <find_free_region+0x148>
    9e4d:	49 89 1f             	mov    %rbx,(%r15)
    9e50:	49 89 08             	mov    %rcx,(%r8)
    9e53:	e9 8c fe ff ff       	jmp    9ce4 <find_free_region+0xb4>
    9e58:	48 89 ee             	mov    %rbp,%rsi
    9e5b:	4c 89 f7             	mov    %r14,%rdi
    9e5e:	4c 89 04 24          	mov    %r8,(%rsp)
    9e62:	e8 b9 bb ff ff       	call   5a20 <sgx_mm_is_within_enclave>
    9e67:	4c 8b 04 24          	mov    (%rsp),%r8
    9e6b:	84 c0                	test   %al,%al
    9e6d:	0f 84 05 ff ff ff    	je     9d78 <find_free_region+0x148>
    9e73:	4d 89 37             	mov    %r14,(%r15)
    9e76:	4d 89 20             	mov    %r12,(%r8)
    9e79:	e9 66 fe ff ff       	jmp    9ce4 <find_free_region+0xb4>
    9e7e:	48 85 d2             	test   %rdx,%rdx
    9e81:	75 1a                	jne    9e9d <find_free_region+0x26d>
    9e83:	4c 3b 25 76 0b 02 00 	cmp    0x20b76(%rip),%r12        # 2aa00 <mm_user_end>
    9e8a:	0f 83 6a ff ff ff    	jae    9dfa <find_free_region+0x1ca>
    9e90:	48 39 35 71 0b 02 00 	cmp    %rsi,0x20b71(%rip)        # 2aa08 <mm_user_base>
    9e97:	0f 83 5d ff ff ff    	jae    9dfa <find_free_region+0x1ca>
    9e9d:	48 8b 19             	mov    (%rcx),%rbx
    9ea0:	48 39 eb             	cmp    %rbp,%rbx
    9ea3:	0f 82 cf fe ff ff    	jb     9d78 <find_free_region+0x148>
    9ea9:	48 29 eb             	sub    %rbp,%rbx
    9eac:	4c 21 eb             	and    %r13,%rbx
    9eaf:	48 89 ee             	mov    %rbp,%rsi
    9eb2:	48 89 df             	mov    %rbx,%rdi
    9eb5:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    9eba:	48 89 0c 24          	mov    %rcx,(%rsp)
    9ebe:	e8 5d bb ff ff       	call   5a20 <sgx_mm_is_within_enclave>
    9ec3:	84 c0                	test   %al,%al
    9ec5:	0f 84 ad fe ff ff    	je     9d78 <find_free_region+0x148>
    9ecb:	48 01 dd             	add    %rbx,%rbp
    9ece:	0f 82 a4 fe ff ff    	jb     9d78 <find_free_region+0x148>
    9ed4:	48 3b 1d 25 0b 02 00 	cmp    0x20b25(%rip),%rbx        # 2aa00 <mm_user_end>
    9edb:	48 8b 0c 24          	mov    (%rsp),%rcx
    9edf:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
    9ee4:	0f 83 63 ff ff ff    	jae    9e4d <find_free_region+0x21d>
    9eea:	48 39 2d 17 0b 02 00 	cmp    %rbp,0x20b17(%rip)        # 2aa08 <mm_user_base>
    9ef1:	0f 83 56 ff ff ff    	jae    9e4d <find_free_region+0x21d>
    9ef7:	31 c0                	xor    %eax,%eax
    9ef9:	e9 7c fe ff ff       	jmp    9d7a <find_free_region+0x14a>
    9efe:	66 90                	xchg   %ax,%ax
    9f00:	48 8b 19             	mov    (%rcx),%rbx
    9f03:	48 39 eb             	cmp    %rbp,%rbx
    9f06:	0f 82 6c fe ff ff    	jb     9d78 <find_free_region+0x148>
    9f0c:	48 29 eb             	sub    %rbp,%rbx
    9f0f:	4c 21 eb             	and    %r13,%rbx
    9f12:	e9 13 ff ff ff       	jmp    9e2a <find_free_region+0x1fa>
    9f17:	48 29 f2             	sub    %rsi,%rdx
    9f1a:	4c 89 04 24          	mov    %r8,(%rsp)
    9f1e:	4c 21 ea             	and    %r13,%rdx
    9f21:	48 89 d7             	mov    %rdx,%rdi
    9f24:	49 89 d6             	mov    %rdx,%r14
    9f27:	e8 f4 ba ff ff       	call   5a20 <sgx_mm_is_within_enclave>
    9f2c:	4c 8b 04 24          	mov    (%rsp),%r8
    9f30:	84 c0                	test   %al,%al
    9f32:	0f 85 3b ff ff ff    	jne    9e73 <find_free_region+0x243>
    9f38:	e9 1c fe ff ff       	jmp    9d59 <find_free_region+0x129>
    9f3d:	0f 1f 00             	nopl   (%rax)

0000000000009f40 <find_free_region_at>:
    9f40:	f3 0f 1e fa          	endbr64 
    9f44:	41 55                	push   %r13
    9f46:	49 89 cd             	mov    %rcx,%r13
    9f49:	41 54                	push   %r12
    9f4b:	49 89 fc             	mov    %rdi,%r12
    9f4e:	55                   	push   %rbp
    9f4f:	48 89 d5             	mov    %rdx,%rbp
    9f52:	53                   	push   %rbx
    9f53:	48 89 f3             	mov    %rsi,%rbx
    9f56:	48 89 d6             	mov    %rdx,%rsi
    9f59:	48 89 df             	mov    %rbx,%rdi
    9f5c:	48 83 ec 08          	sub    $0x8,%rsp
    9f60:	e8 bb ba ff ff       	call   5a20 <sgx_mm_is_within_enclave>
    9f65:	31 c9                	xor    %ecx,%ecx
    9f67:	84 c0                	test   %al,%al
    9f69:	74 5f                	je     9fca <find_free_region_at+0x8a>
    9f6b:	31 f6                	xor    %esi,%esi
    9f6d:	48 8d 15 f4 00 01 00 	lea    0x100f4(%rip),%rdx        # 1a068 <g_rts_ema_root>
    9f74:	48 01 dd             	add    %rbx,%rbp
    9f77:	40 0f 92 c6          	setb   %sil
    9f7b:	49 39 d4             	cmp    %rdx,%r12
    9f7e:	0f 84 7c 00 00 00    	je     a000 <find_free_region_at+0xc0>
    9f84:	48 85 f6             	test   %rsi,%rsi
    9f87:	75 5e                	jne    9fe7 <find_free_region_at+0xa7>
    9f89:	48 3b 1d 78 0a 02 00 	cmp    0x20a78(%rip),%rbx        # 2aa08 <mm_user_base>
    9f90:	72 55                	jb     9fe7 <find_free_region_at+0xa7>
    9f92:	48 39 2d 67 0a 02 00 	cmp    %rbp,0x20a67(%rip)        # 2aa00 <mm_user_end>
    9f99:	72 4c                	jb     9fe7 <find_free_region_at+0xa7>
    9f9b:	49 8b 14 24          	mov    (%r12),%rdx
    9f9f:	48 8b 4a 38          	mov    0x38(%rdx),%rcx
    9fa3:	48 39 ca             	cmp    %rcx,%rdx
    9fa6:	75 1a                	jne    9fc2 <find_free_region_at+0x82>
    9fa8:	eb 20                	jmp    9fca <find_free_region_at+0x8a>
    9faa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9fb0:	48 03 71 08          	add    0x8(%rcx),%rsi
    9fb4:	48 39 f3             	cmp    %rsi,%rbx
    9fb7:	72 27                	jb     9fe0 <find_free_region_at+0xa0>
    9fb9:	48 8b 49 38          	mov    0x38(%rcx),%rcx
    9fbd:	48 39 ca             	cmp    %rcx,%rdx
    9fc0:	74 08                	je     9fca <find_free_region_at+0x8a>
    9fc2:	48 8b 31             	mov    (%rcx),%rsi
    9fc5:	48 39 ee             	cmp    %rbp,%rsi
    9fc8:	72 e6                	jb     9fb0 <find_free_region_at+0x70>
    9fca:	49 89 4d 00          	mov    %rcx,0x0(%r13)
    9fce:	48 83 c4 08          	add    $0x8,%rsp
    9fd2:	5b                   	pop    %rbx
    9fd3:	5d                   	pop    %rbp
    9fd4:	41 5c                	pop    %r12
    9fd6:	41 5d                	pop    %r13
    9fd8:	c3                   	ret    
    9fd9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9fe0:	48 39 ca             	cmp    %rcx,%rdx
    9fe3:	74 e5                	je     9fca <find_free_region_at+0x8a>
    9fe5:	31 c9                	xor    %ecx,%ecx
    9fe7:	31 c0                	xor    %eax,%eax
    9fe9:	49 89 4d 00          	mov    %rcx,0x0(%r13)
    9fed:	48 83 c4 08          	add    $0x8,%rsp
    9ff1:	5b                   	pop    %rbx
    9ff2:	5d                   	pop    %rbp
    9ff3:	41 5c                	pop    %r12
    9ff5:	41 5d                	pop    %r13
    9ff7:	c3                   	ret    
    9ff8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    9fff:	00 
    a000:	48 85 f6             	test   %rsi,%rsi
    a003:	75 e2                	jne    9fe7 <find_free_region_at+0xa7>
    a005:	48 3b 1d f4 09 02 00 	cmp    0x209f4(%rip),%rbx        # 2aa00 <mm_user_end>
    a00c:	73 8d                	jae    9f9b <find_free_region_at+0x5b>
    a00e:	48 39 2d f3 09 02 00 	cmp    %rbp,0x209f3(%rip)        # 2aa08 <mm_user_base>
    a015:	73 84                	jae    9f9b <find_free_region_at+0x5b>
    a017:	31 c0                	xor    %eax,%eax
    a019:	eb ce                	jmp    9fe9 <find_free_region_at+0xa9>
    a01b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000a020 <ema_new>:
    a020:	f3 0f 1e fa          	endbr64 
    a024:	53                   	push   %rbx
    a025:	48 83 ec 50          	sub    $0x50,%rsp
    a029:	64 4c 8b 14 25 28 00 	mov    %fs:0x28,%r10
    a030:	00 00 
    a032:	4c 89 54 24 48       	mov    %r10,0x48(%rsp)
    a037:	45 31 d2             	xor    %r10d,%r10d
    a03a:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
    a03f:	89 54 24 10          	mov    %edx,0x10(%rsp)
    a043:	48 89 e3             	mov    %rsp,%rbx
    a046:	48 89 3c 24          	mov    %rdi,(%rsp)
    a04a:	bf 48 00 00 00       	mov    $0x48,%edi
    a04f:	48 8b 50 40          	mov    0x40(%rax),%rdx
    a053:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    a058:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    a05d:	48 89 54 24 40       	mov    %rdx,0x40(%rsp)
    a062:	48 89 5a 38          	mov    %rbx,0x38(%rdx)
    a066:	48 89 58 40          	mov    %rbx,0x40(%rax)
    a06a:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
    a06f:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    a076:	00 00 
    a078:	4c 89 44 24 28       	mov    %r8,0x28(%rsp)
    a07d:	4c 89 4c 24 30       	mov    %r9,0x30(%rsp)
    a082:	e8 99 13 00 00       	call   b420 <emalloc>
    a087:	48 85 c0             	test   %rax,%rax
    a08a:	74 6c                	je     a0f8 <ema_new+0xd8>
    a08c:	66 0f 6f 0c 24       	movdqa (%rsp),%xmm1
    a091:	0f 11 08             	movups %xmm1,(%rax)
    a094:	66 0f 6f 54 24 10    	movdqa 0x10(%rsp),%xmm2
    a09a:	0f 11 50 10          	movups %xmm2,0x10(%rax)
    a09e:	66 0f 6f 5c 24 20    	movdqa 0x20(%rsp),%xmm3
    a0a4:	0f 11 58 20          	movups %xmm3,0x20(%rax)
    a0a8:	66 0f 6f 64 24 30    	movdqa 0x30(%rsp),%xmm4
    a0ae:	0f 11 60 30          	movups %xmm4,0x30(%rax)
    a0b2:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
    a0b7:	48 89 50 40          	mov    %rdx,0x40(%rax)
    a0bb:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
    a0c0:	48 89 42 38          	mov    %rax,0x38(%rdx)
    a0c4:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
    a0c9:	48 89 42 40          	mov    %rax,0x40(%rdx)
    a0cd:	66 48 0f 6e c2       	movq   %rdx,%xmm0
    a0d2:	0f 16 44 24 40       	movhps 0x40(%rsp),%xmm0
    a0d7:	0f 11 40 38          	movups %xmm0,0x38(%rax)
    a0db:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
    a0e0:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    a0e7:	00 00 
    a0e9:	75 2d                	jne    a118 <ema_new+0xf8>
    a0eb:	48 83 c4 50          	add    $0x50,%rsp
    a0ef:	5b                   	pop    %rbx
    a0f0:	c3                   	ret    
    a0f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a0f8:	48 8b 4c 24 40       	mov    0x40(%rsp),%rcx
    a0fd:	48 39 59 38          	cmp    %rbx,0x38(%rcx)
    a101:	75 1a                	jne    a11d <ema_new+0xfd>
    a103:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
    a108:	48 39 5a 40          	cmp    %rbx,0x40(%rdx)
    a10c:	75 0f                	jne    a11d <ema_new+0xfd>
    a10e:	48 89 51 38          	mov    %rdx,0x38(%rcx)
    a112:	48 89 4a 40          	mov    %rcx,0x40(%rdx)
    a116:	eb c3                	jmp    a0db <ema_new+0xbb>
    a118:	e8 d3 68 00 00       	call   109f0 <__stack_chk_fail>
    a11d:	e8 15 84 00 00       	call   12537 <abort>
    a122:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a129:	00 00 00 
    a12c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000a130 <ema_destroy>:
    a130:	f3 0f 1e fa          	endbr64 
    a134:	53                   	push   %rbx
    a135:	48 89 fb             	mov    %rdi,%rbx
    a138:	48 85 ff             	test   %rdi,%rdi
    a13b:	74 1c                	je     a159 <ema_destroy+0x29>
    a13d:	48 8b 47 40          	mov    0x40(%rdi),%rax
    a141:	48 3b 78 38          	cmp    0x38(%rax),%rdi
    a145:	75 29                	jne    a170 <ema_destroy+0x40>
    a147:	48 8b 57 38          	mov    0x38(%rdi),%rdx
    a14b:	48 3b 7a 40          	cmp    0x40(%rdx),%rdi
    a14f:	75 1f                	jne    a170 <ema_destroy+0x40>
    a151:	48 89 50 38          	mov    %rdx,0x38(%rax)
    a155:	48 89 42 40          	mov    %rax,0x40(%rdx)
    a159:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    a15d:	48 85 ff             	test   %rdi,%rdi
    a160:	74 05                	je     a167 <ema_destroy+0x37>
    a162:	e8 b9 ed ff ff       	call   8f20 <bit_array_delete>
    a167:	48 89 df             	mov    %rbx,%rdi
    a16a:	5b                   	pop    %rbx
    a16b:	e9 30 15 00 00       	jmp    b6a0 <efree>
    a170:	e8 c2 83 00 00       	call   12537 <abort>
    a175:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a17c:	00 00 00 
    a17f:	90                   	nop

000000000000a180 <destroy_ema_root>:
    a180:	f3 0f 1e fa          	endbr64 
    a184:	55                   	push   %rbp
    a185:	53                   	push   %rbx
    a186:	48 83 ec 08          	sub    $0x8,%rsp
    a18a:	48 8b 07             	mov    (%rdi),%rax
    a18d:	48 8b 58 38          	mov    0x38(%rax),%rbx
    a191:	48 39 d8             	cmp    %rbx,%rax
    a194:	74 1c                	je     a1b2 <destroy_ema_root+0x32>
    a196:	48 89 fd             	mov    %rdi,%rbp
    a199:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a1a0:	48 89 df             	mov    %rbx,%rdi
    a1a3:	48 8b 5b 38          	mov    0x38(%rbx),%rbx
    a1a7:	e8 84 ff ff ff       	call   a130 <ema_destroy>
    a1ac:	48 39 5d 00          	cmp    %rbx,0x0(%rbp)
    a1b0:	75 ee                	jne    a1a0 <destroy_ema_root+0x20>
    a1b2:	48 83 c4 08          	add    $0x8,%rsp
    a1b6:	5b                   	pop    %rbx
    a1b7:	5d                   	pop    %rbp
    a1b8:	c3                   	ret    
    a1b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000a1c0 <do_commit>:
    a1c0:	f3 0f 1e fa          	endbr64 
    a1c4:	55                   	push   %rbp
    a1c5:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a1c9:	48 83 ca 08          	or     $0x8,%rdx
    a1cd:	48 89 e5             	mov    %rsp,%rbp
    a1d0:	41 55                	push   %r13
    a1d2:	41 54                	push   %r12
    a1d4:	49 89 fc             	mov    %rdi,%r12
    a1d7:	53                   	push   %rbx
    a1d8:	48 8d 1c 37          	lea    (%rdi,%rsi,1),%rbx
    a1dc:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    a1e0:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    a1e4:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a1eb:	00 00 
    a1ed:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    a1f2:	31 c0                	xor    %eax,%eax
    a1f4:	48 89 14 24          	mov    %rdx,(%rsp)
    a1f8:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    a1ff:	00 00 
    a201:	0f 11 44 24 08       	movups %xmm0,0x8(%rsp)
    a206:	0f 11 44 24 18       	movups %xmm0,0x18(%rsp)
    a20b:	0f 11 44 24 28       	movups %xmm0,0x28(%rsp)
    a210:	84 c9                	test   %cl,%cl
    a212:	74 4c                	je     a260 <do_commit+0xa0>
    a214:	49 89 e5             	mov    %rsp,%r13
    a217:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    a21e:	00 00 
    a220:	48 81 eb 00 10 00 00 	sub    $0x1000,%rbx
    a227:	4c 89 ef             	mov    %r13,%rdi
    a22a:	48 89 de             	mov    %rbx,%rsi
    a22d:	e8 8d 82 00 00       	call   124bf <do_eaccept>
    a232:	85 c0                	test   %eax,%eax
    a234:	75 57                	jne    a28d <do_commit+0xcd>
    a236:	49 39 dc             	cmp    %rbx,%r12
    a239:	72 e5                	jb     a220 <do_commit+0x60>
    a23b:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    a240:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    a247:	00 00 
    a249:	75 47                	jne    a292 <do_commit+0xd2>
    a24b:	48 8d 65 e8          	lea    -0x18(%rbp),%rsp
    a24f:	31 c0                	xor    %eax,%eax
    a251:	5b                   	pop    %rbx
    a252:	41 5c                	pop    %r12
    a254:	41 5d                	pop    %r13
    a256:	5d                   	pop    %rbp
    a257:	c3                   	ret    
    a258:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a25f:	00 
    a260:	48 39 df             	cmp    %rbx,%rdi
    a263:	73 d6                	jae    a23b <do_commit+0x7b>
    a265:	49 89 e5             	mov    %rsp,%r13
    a268:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a26f:	00 
    a270:	4c 89 e6             	mov    %r12,%rsi
    a273:	4c 89 ef             	mov    %r13,%rdi
    a276:	e8 44 82 00 00       	call   124bf <do_eaccept>
    a27b:	85 c0                	test   %eax,%eax
    a27d:	75 0e                	jne    a28d <do_commit+0xcd>
    a27f:	49 81 c4 00 10 00 00 	add    $0x1000,%r12
    a286:	49 39 dc             	cmp    %rbx,%r12
    a289:	72 e5                	jb     a270 <do_commit+0xb0>
    a28b:	eb ae                	jmp    a23b <do_commit+0x7b>
    a28d:	e8 a5 82 00 00       	call   12537 <abort>
    a292:	e8 59 67 00 00       	call   109f0 <__stack_chk_fail>
    a297:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    a29e:	00 00 

000000000000a2a0 <ema_do_commit>:
    a2a0:	f3 0f 1e fa          	endbr64 
    a2a4:	55                   	push   %rbp
    a2a5:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a2a9:	48 89 e5             	mov    %rsp,%rbp
    a2ac:	41 57                	push   %r15
    a2ae:	41 56                	push   %r14
    a2b0:	41 55                	push   %r13
    a2b2:	41 54                	push   %r12
    a2b4:	53                   	push   %rbx
    a2b5:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    a2b9:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    a2bd:	4c 8b 77 08          	mov    0x8(%rdi),%r14
    a2c1:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a2c8:	00 00 
    a2ca:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    a2cf:	48 8b 07             	mov    (%rdi),%rax
    a2d2:	48 c7 04 24 0b 02 00 	movq   $0x20b,(%rsp)
    a2d9:	00 
    a2da:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    a2e1:	00 00 
    a2e3:	0f 11 44 24 08       	movups %xmm0,0x8(%rsp)
    a2e8:	0f 11 44 24 18       	movups %xmm0,0x18(%rsp)
    a2ed:	0f 11 44 24 28       	movups %xmm0,0x28(%rsp)
    a2f2:	48 39 f0             	cmp    %rsi,%rax
    a2f5:	48 0f 43 f0          	cmovae %rax,%rsi
    a2f9:	49 01 c6             	add    %rax,%r14
    a2fc:	49 39 d6             	cmp    %rdx,%r14
    a2ff:	4c 0f 47 f2          	cmova  %rdx,%r14
    a303:	4c 39 f6             	cmp    %r14,%rsi
    a306:	73 61                	jae    a369 <ema_do_commit+0xc9>
    a308:	49 89 fd             	mov    %rdi,%r13
    a30b:	48 89 f3             	mov    %rsi,%rbx
    a30e:	49 89 e7             	mov    %rsp,%r15
    a311:	eb 15                	jmp    a328 <ema_do_commit+0x88>
    a313:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a318:	48 81 c3 00 10 00 00 	add    $0x1000,%rbx
    a31f:	4c 39 f3             	cmp    %r14,%rbx
    a322:	73 45                	jae    a369 <ema_do_commit+0xc9>
    a324:	49 8b 45 00          	mov    0x0(%r13),%rax
    a328:	49 89 dc             	mov    %rbx,%r12
    a32b:	49 8b 7d 20          	mov    0x20(%r13),%rdi
    a32f:	49 29 c4             	sub    %rax,%r12
    a332:	49 c1 ec 0c          	shr    $0xc,%r12
    a336:	4c 89 e6             	mov    %r12,%rsi
    a339:	e8 02 ec ff ff       	call   8f40 <bit_array_test>
    a33e:	84 c0                	test   %al,%al
    a340:	75 d6                	jne    a318 <ema_do_commit+0x78>
    a342:	48 89 de             	mov    %rbx,%rsi
    a345:	4c 89 ff             	mov    %r15,%rdi
    a348:	e8 72 81 00 00       	call   124bf <do_eaccept>
    a34d:	85 c0                	test   %eax,%eax
    a34f:	75 1a                	jne    a36b <ema_do_commit+0xcb>
    a351:	49 8b 7d 20          	mov    0x20(%r13),%rdi
    a355:	4c 89 e6             	mov    %r12,%rsi
    a358:	48 81 c3 00 10 00 00 	add    $0x1000,%rbx
    a35f:	e8 ac ed ff ff       	call   9110 <bit_array_set>
    a364:	4c 39 f3             	cmp    %r14,%rbx
    a367:	72 bb                	jb     a324 <ema_do_commit+0x84>
    a369:	31 c0                	xor    %eax,%eax
    a36b:	48 8b 54 24 78       	mov    0x78(%rsp),%rdx
    a370:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    a377:	00 00 
    a379:	75 0f                	jne    a38a <ema_do_commit+0xea>
    a37b:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    a37f:	5b                   	pop    %rbx
    a380:	41 5c                	pop    %r12
    a382:	41 5d                	pop    %r13
    a384:	41 5e                	pop    %r14
    a386:	41 5f                	pop    %r15
    a388:	5d                   	pop    %rbp
    a389:	c3                   	ret    
    a38a:	e8 61 66 00 00       	call   109f0 <__stack_chk_fail>
    a38f:	90                   	nop

000000000000a390 <ema_do_commit_loop>:
    a390:	f3 0f 1e fa          	endbr64 
    a394:	41 55                	push   %r13
    a396:	41 54                	push   %r12
    a398:	55                   	push   %rbp
    a399:	53                   	push   %rbx
    a39a:	48 89 cb             	mov    %rcx,%rbx
    a39d:	48 83 ec 08          	sub    $0x8,%rsp
    a3a1:	48 8b 0f             	mov    (%rdi),%rcx
    a3a4:	48 39 f7             	cmp    %rsi,%rdi
    a3a7:	0f 84 9b 00 00 00    	je     a448 <ema_do_commit_loop+0xb8>
    a3ad:	49 89 f5             	mov    %rsi,%r13
    a3b0:	48 89 d5             	mov    %rdx,%rbp
    a3b3:	48 89 f8             	mov    %rdi,%rax
    a3b6:	eb 26                	jmp    a3de <ema_do_commit_loop+0x4e>
    a3b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a3bf:	00 
    a3c0:	f6 40 10 01          	testb  $0x1,0x10(%rax)
    a3c4:	75 27                	jne    a3ed <ema_do_commit_loop+0x5d>
    a3c6:	48 03 48 08          	add    0x8(%rax),%rcx
    a3ca:	48 8b 40 38          	mov    0x38(%rax),%rax
    a3ce:	48 89 ca             	mov    %rcx,%rdx
    a3d1:	49 39 c5             	cmp    %rax,%r13
    a3d4:	74 3a                	je     a410 <ema_do_commit_loop+0x80>
    a3d6:	48 8b 08             	mov    (%rax),%rcx
    a3d9:	48 39 d1             	cmp    %rdx,%rcx
    a3dc:	75 22                	jne    a400 <ema_do_commit_loop+0x70>
    a3de:	48 8b 50 18          	mov    0x18(%rax),%rdx
    a3e2:	48 f7 d2             	not    %rdx
    a3e5:	f7 c2 02 02 00 00    	test   $0x202,%edx
    a3eb:	74 d3                	je     a3c0 <ema_do_commit_loop+0x30>
    a3ed:	b8 0d 00 00 00       	mov    $0xd,%eax
    a3f2:	48 83 c4 08          	add    $0x8,%rsp
    a3f6:	5b                   	pop    %rbx
    a3f7:	5d                   	pop    %rbp
    a3f8:	41 5c                	pop    %r12
    a3fa:	41 5d                	pop    %r13
    a3fc:	c3                   	ret    
    a3fd:	0f 1f 00             	nopl   (%rax)
    a400:	48 83 c4 08          	add    $0x8,%rsp
    a404:	b8 16 00 00 00       	mov    $0x16,%eax
    a409:	5b                   	pop    %rbx
    a40a:	5d                   	pop    %rbp
    a40b:	41 5c                	pop    %r12
    a40d:	41 5d                	pop    %r13
    a40f:	c3                   	ret    
    a410:	b8 16 00 00 00       	mov    $0x16,%eax
    a415:	48 39 d9             	cmp    %rbx,%rcx
    a418:	73 1c                	jae    a436 <ema_do_commit_loop+0xa6>
    a41a:	eb d6                	jmp    a3f2 <ema_do_commit_loop+0x62>
    a41c:	0f 1f 40 00          	nopl   0x0(%rax)
    a420:	48 89 da             	mov    %rbx,%rdx
    a423:	48 89 ee             	mov    %rbp,%rsi
    a426:	4c 8b 67 38          	mov    0x38(%rdi),%r12
    a42a:	e8 71 fe ff ff       	call   a2a0 <ema_do_commit>
    a42f:	85 c0                	test   %eax,%eax
    a431:	75 bf                	jne    a3f2 <ema_do_commit_loop+0x62>
    a433:	4c 89 e7             	mov    %r12,%rdi
    a436:	4c 39 ef             	cmp    %r13,%rdi
    a439:	75 e5                	jne    a420 <ema_do_commit_loop+0x90>
    a43b:	31 c0                	xor    %eax,%eax
    a43d:	48 83 c4 08          	add    $0x8,%rsp
    a441:	5b                   	pop    %rbx
    a442:	5d                   	pop    %rbp
    a443:	41 5c                	pop    %r12
    a445:	41 5d                	pop    %r13
    a447:	c3                   	ret    
    a448:	b8 16 00 00 00       	mov    $0x16,%eax
    a44d:	48 39 d9             	cmp    %rbx,%rcx
    a450:	72 a0                	jb     a3f2 <ema_do_commit_loop+0x62>
    a452:	31 c0                	xor    %eax,%eax
    a454:	eb e7                	jmp    a43d <ema_do_commit_loop+0xad>
    a456:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a45d:	00 00 00 

000000000000a460 <ema_change_to_tcs>:
    a460:	f3 0f 1e fa          	endbr64 
    a464:	55                   	push   %rbp
    a465:	48 89 e5             	mov    %rsp,%rbp
    a468:	41 56                	push   %r14
    a46a:	41 55                	push   %r13
    a46c:	41 54                	push   %r12
    a46e:	53                   	push   %rbx
    a46f:	48 89 fb             	mov    %rdi,%rbx
    a472:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    a476:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
    a47d:	4c 8b 6f 18          	mov    0x18(%rdi),%r13
    a481:	48 8b 7f 20          	mov    0x20(%rdi),%rdi
    a485:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a48c:	00 00 
    a48e:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
    a495:	00 
    a496:	31 c0                	xor    %eax,%eax
    a498:	45 89 ee             	mov    %r13d,%r14d
    a49b:	41 81 e6 00 ff 00 00 	and    $0xff00,%r14d
    a4a2:	48 85 ff             	test   %rdi,%rdi
    a4a5:	74 33                	je     a4da <ema_change_to_tcs+0x7a>
    a4a7:	49 89 f4             	mov    %rsi,%r12
    a4aa:	48 2b 33             	sub    (%rbx),%rsi
    a4ad:	48 c1 ee 0c          	shr    $0xc,%rsi
    a4b1:	e8 8a ea ff ff       	call   8f40 <bit_array_test>
    a4b6:	84 c0                	test   %al,%al
    a4b8:	74 20                	je     a4da <ema_change_to_tcs+0x7a>
    a4ba:	41 81 fe 00 01 00 00 	cmp    $0x100,%r14d
    a4c1:	0f 84 e1 00 00 00    	je     a5a8 <ema_change_to_tcs+0x148>
    a4c7:	41 83 e5 07          	and    $0x7,%r13d
    a4cb:	41 83 fd 03          	cmp    $0x3,%r13d
    a4cf:	75 09                	jne    a4da <ema_change_to_tcs+0x7a>
    a4d1:	41 81 fe 00 02 00 00 	cmp    $0x200,%r14d
    a4d8:	74 2e                	je     a508 <ema_change_to_tcs+0xa8>
    a4da:	b8 0d 00 00 00       	mov    $0xd,%eax
    a4df:	48 8b 94 24 b8 00 00 	mov    0xb8(%rsp),%rdx
    a4e6:	00 
    a4e7:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    a4ee:	00 00 
    a4f0:	0f 85 c4 00 00 00    	jne    a5ba <ema_change_to_tcs+0x15a>
    a4f6:	48 8d 65 e0          	lea    -0x20(%rbp),%rsp
    a4fa:	5b                   	pop    %rbx
    a4fb:	41 5c                	pop    %r12
    a4fd:	41 5d                	pop    %r13
    a4ff:	41 5e                	pop    %r14
    a501:	5d                   	pop    %rbp
    a502:	c3                   	ret    
    a503:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a508:	b9 03 01 00 00       	mov    $0x103,%ecx
    a50d:	ba 03 02 00 00       	mov    $0x203,%edx
    a512:	be 00 10 00 00       	mov    $0x1000,%esi
    a517:	4c 89 e7             	mov    %r12,%rdi
    a51a:	e8 71 b3 ff ff       	call   5890 <sgx_mm_modify_ocall>
    a51f:	85 c0                	test   %eax,%eax
    a521:	0f 85 89 00 00 00    	jne    a5b0 <ema_change_to_tcs+0x150>
    a527:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a52b:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
    a530:	4c 89 e6             	mov    %r12,%rsi
    a533:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
    a53a:	00 00 
    a53c:	48 c7 44 24 40 10 01 	movq   $0x110,0x40(%rsp)
    a543:	00 00 
    a545:	0f 11 44 24 48       	movups %xmm0,0x48(%rsp)
    a54a:	0f 11 44 24 58       	movups %xmm0,0x58(%rsp)
    a54f:	0f 11 44 24 68       	movups %xmm0,0x68(%rsp)
    a554:	e8 66 7f 00 00       	call   124bf <do_eaccept>
    a559:	85 c0                	test   %eax,%eax
    a55b:	75 62                	jne    a5bf <ema_change_to_tcs+0x15f>
    a55d:	48 8d 4c 24 38       	lea    0x38(%rsp),%rcx
    a562:	49 8d 94 24 00 10 00 	lea    0x1000(%r12),%rdx
    a569:	00 
    a56a:	4c 89 e6             	mov    %r12,%rsi
    a56d:	48 89 df             	mov    %rbx,%rdi
    a570:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    a577:	00 00 
    a579:	e8 f2 f5 ff ff       	call   9b70 <ema_split_ex>
    a57e:	85 c0                	test   %eax,%eax
    a580:	0f 85 59 ff ff ff    	jne    a4df <ema_change_to_tcs+0x7f>
    a586:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
    a58b:	48 8b 51 18          	mov    0x18(%rcx),%rdx
    a58f:	48 81 e2 f8 00 ff ff 	and    $0xffffffffffff00f8,%rdx
    a596:	80 ce 01             	or     $0x1,%dh
    a599:	48 89 51 18          	mov    %rdx,0x18(%rcx)
    a59d:	e9 3d ff ff ff       	jmp    a4df <ema_change_to_tcs+0x7f>
    a5a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a5a8:	31 c0                	xor    %eax,%eax
    a5aa:	e9 30 ff ff ff       	jmp    a4df <ema_change_to_tcs+0x7f>
    a5af:	90                   	nop
    a5b0:	b8 0e 00 00 00       	mov    $0xe,%eax
    a5b5:	e9 25 ff ff ff       	jmp    a4df <ema_change_to_tcs+0x7f>
    a5ba:	e8 31 64 00 00       	call   109f0 <__stack_chk_fail>
    a5bf:	e8 73 7f 00 00       	call   12537 <abort>
    a5c4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a5cb:	00 00 00 
    a5ce:	66 90                	xchg   %ax,%ax

000000000000a5d0 <ema_modify_permissions>:
    a5d0:	f3 0f 1e fa          	endbr64 
    a5d4:	55                   	push   %rbp
    a5d5:	48 89 e5             	mov    %rsp,%rbp
    a5d8:	41 57                	push   %r15
    a5da:	41 56                	push   %r14
    a5dc:	41 55                	push   %r13
    a5de:	41 54                	push   %r12
    a5e0:	53                   	push   %rbx
    a5e1:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    a5e5:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
    a5ec:	89 4c 24 20          	mov    %ecx,0x20(%rsp)
    a5f0:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a5f7:	00 00 
    a5f9:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
    a600:	00 
    a601:	48 8b 47 18          	mov    0x18(%rdi),%rax
    a605:	41 89 c4             	mov    %eax,%r12d
    a608:	41 83 e4 07          	and    $0x7,%r12d
    a60c:	41 39 cc             	cmp    %ecx,%r12d
    a60f:	0f 84 e2 00 00 00    	je     a6f7 <ema_modify_permissions+0x127>
    a615:	49 89 fd             	mov    %rdi,%r13
    a618:	89 c7                	mov    %eax,%edi
    a61a:	49 89 f7             	mov    %rsi,%r15
    a61d:	44 8b 74 24 20       	mov    0x20(%rsp),%r14d
    a622:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    a626:	81 e7 00 ff 00 00    	and    $0xff00,%edi
    a62c:	44 89 f1             	mov    %r14d,%ecx
    a62f:	89 7c 24 0c          	mov    %edi,0xc(%rsp)
    a633:	48 39 f3             	cmp    %rsi,%rbx
    a636:	4c 0f 43 fb          	cmovae %rbx,%r15
    a63a:	49 03 5d 08          	add    0x8(%r13),%rbx
    a63e:	48 39 d3             	cmp    %rdx,%rbx
    a641:	48 0f 47 da          	cmova  %rdx,%rbx
    a645:	89 c2                	mov    %eax,%edx
    a647:	09 f9                	or     %edi,%ecx
    a649:	4c 89 ff             	mov    %r15,%rdi
    a64c:	81 e2 07 ff 00 00    	and    $0xff07,%edx
    a652:	4c 89 7c 24 18       	mov    %r15,0x18(%rsp)
    a657:	48 89 de             	mov    %rbx,%rsi
    a65a:	4c 29 fe             	sub    %r15,%rsi
    a65d:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    a662:	e8 29 b2 ff ff       	call   5890 <sgx_mm_modify_ocall>
    a667:	85 c0                	test   %eax,%eax
    a669:	0f 85 21 01 00 00    	jne    a790 <ema_modify_permissions+0x1c0>
    a66f:	44 89 f0             	mov    %r14d,%eax
    a672:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a676:	48 8d 54 24 40       	lea    0x40(%rsp),%rdx
    a67b:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
    a682:	00 00 
    a684:	0d 20 02 00 00       	or     $0x220,%eax
    a689:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
    a68e:	48 98                	cltq   
    a690:	0f 11 44 24 48       	movups %xmm0,0x48(%rsp)
    a695:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    a69a:	44 89 f0             	mov    %r14d,%eax
    a69d:	45 09 e6             	or     %r12d,%r14d
    a6a0:	83 e0 06             	and    $0x6,%eax
    a6a3:	0f 11 44 24 58       	movups %xmm0,0x58(%rsp)
    a6a8:	89 44 24 24          	mov    %eax,0x24(%rsp)
    a6ac:	0f 11 44 24 68       	movups %xmm0,0x68(%rsp)
    a6b1:	49 39 df             	cmp    %rbx,%r15
    a6b4:	72 76                	jb     a72c <ema_modify_permissions+0x15c>
    a6b6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a6bd:	00 00 00 
    a6c0:	49 8b 45 00          	mov    0x0(%r13),%rax
    a6c4:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    a6c9:	48 39 d0             	cmp    %rdx,%rax
    a6cc:	0f 82 ce 00 00 00    	jb     a7a0 <ema_modify_permissions+0x1d0>
    a6d2:	49 03 45 08          	add    0x8(%r13),%rax
    a6d6:	48 39 c3             	cmp    %rax,%rbx
    a6d9:	0f 82 f9 00 00 00    	jb     a7d8 <ema_modify_permissions+0x208>
    a6df:	49 8b 45 18          	mov    0x18(%r13),%rax
    a6e3:	48 63 54 24 20       	movslq 0x20(%rsp),%rdx
    a6e8:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    a6ec:	48 09 d0             	or     %rdx,%rax
    a6ef:	49 89 45 18          	mov    %rax,0x18(%r13)
    a6f3:	85 d2                	test   %edx,%edx
    a6f5:	74 79                	je     a770 <ema_modify_permissions+0x1a0>
    a6f7:	31 c0                	xor    %eax,%eax
    a6f9:	48 8b 94 24 b8 00 00 	mov    0xb8(%rsp),%rdx
    a700:	00 
    a701:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    a708:	00 00 
    a70a:	0f 85 f8 00 00 00    	jne    a808 <ema_modify_permissions+0x238>
    a710:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    a714:	5b                   	pop    %rbx
    a715:	41 5c                	pop    %r12
    a717:	41 5d                	pop    %r13
    a719:	41 5e                	pop    %r14
    a71b:	41 5f                	pop    %r15
    a71d:	5d                   	pop    %rbp
    a71e:	c3                   	ret    
    a71f:	90                   	nop
    a720:	49 81 c7 00 10 00 00 	add    $0x1000,%r15
    a727:	49 39 df             	cmp    %rbx,%r15
    a72a:	73 94                	jae    a6c0 <ema_modify_permissions+0xf0>
    a72c:	45 39 f4             	cmp    %r14d,%r12d
    a72f:	74 0d                	je     a73e <ema_modify_permissions+0x16e>
    a731:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
    a736:	4c 89 fe             	mov    %r15,%rsi
    a739:	e8 bd 7d 00 00       	call   124fb <do_emodpe>
    a73e:	83 7c 24 24 06       	cmpl   $0x6,0x24(%rsp)
    a743:	74 db                	je     a720 <ema_modify_permissions+0x150>
    a745:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
    a74a:	4c 89 fe             	mov    %r15,%rsi
    a74d:	e8 6d 7d 00 00       	call   124bf <do_eaccept>
    a752:	85 c0                	test   %eax,%eax
    a754:	75 a3                	jne    a6f9 <ema_modify_permissions+0x129>
    a756:	49 81 c7 00 10 00 00 	add    $0x1000,%r15
    a75d:	49 39 df             	cmp    %rbx,%r15
    a760:	0f 83 5a ff ff ff    	jae    a6c0 <ema_modify_permissions+0xf0>
    a766:	45 39 f4             	cmp    %r14d,%r12d
    a769:	74 da                	je     a745 <ema_modify_permissions+0x175>
    a76b:	eb c4                	jmp    a731 <ema_modify_permissions+0x161>
    a76d:	0f 1f 00             	nopl   (%rax)
    a770:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
    a774:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    a779:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    a77e:	89 ca                	mov    %ecx,%edx
    a780:	e8 0b b1 ff ff       	call   5890 <sgx_mm_modify_ocall>
    a785:	85 c0                	test   %eax,%eax
    a787:	0f 84 6a ff ff ff    	je     a6f7 <ema_modify_permissions+0x127>
    a78d:	0f 1f 00             	nopl   (%rax)
    a790:	b8 0e 00 00 00       	mov    $0xe,%eax
    a795:	e9 5f ff ff ff       	jmp    a6f9 <ema_modify_permissions+0x129>
    a79a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a7a0:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    a7a5:	31 d2                	xor    %edx,%edx
    a7a7:	48 8d 4c 24 38       	lea    0x38(%rsp),%rcx
    a7ac:	4c 89 ef             	mov    %r13,%rdi
    a7af:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    a7b6:	00 00 
    a7b8:	e8 23 f2 ff ff       	call   99e0 <ema_split>
    a7bd:	85 c0                	test   %eax,%eax
    a7bf:	0f 85 34 ff ff ff    	jne    a6f9 <ema_modify_permissions+0x129>
    a7c5:	4c 8b 6c 24 38       	mov    0x38(%rsp),%r13
    a7ca:	49 8b 45 00          	mov    0x0(%r13),%rax
    a7ce:	e9 ff fe ff ff       	jmp    a6d2 <ema_modify_permissions+0x102>
    a7d3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a7d8:	4c 89 ef             	mov    %r13,%rdi
    a7db:	48 8d 4c 24 38       	lea    0x38(%rsp),%rcx
    a7e0:	ba 01 00 00 00       	mov    $0x1,%edx
    a7e5:	48 89 de             	mov    %rbx,%rsi
    a7e8:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    a7ef:	00 00 
    a7f1:	e8 ea f1 ff ff       	call   99e0 <ema_split>
    a7f6:	4c 8b 6c 24 38       	mov    0x38(%rsp),%r13
    a7fb:	85 c0                	test   %eax,%eax
    a7fd:	0f 84 dc fe ff ff    	je     a6df <ema_modify_permissions+0x10f>
    a803:	e9 f1 fe ff ff       	jmp    a6f9 <ema_modify_permissions+0x129>
    a808:	e8 e3 61 00 00       	call   109f0 <__stack_chk_fail>
    a80d:	0f 1f 00             	nopl   (%rax)

000000000000a810 <ema_do_uncommit>:
    a810:	f3 0f 1e fa          	endbr64 
    a814:	41 55                	push   %r13
    a816:	49 89 f5             	mov    %rsi,%r13
    a819:	41 54                	push   %r12
    a81b:	53                   	push   %rbx
    a81c:	48 83 ec 10          	sub    $0x10,%rsp
    a820:	48 8b 07             	mov    (%rdi),%rax
    a823:	44 8b 67 18          	mov    0x18(%rdi),%r12d
    a827:	48 39 f0             	cmp    %rsi,%rax
    a82a:	4c 0f 43 e8          	cmovae %rax,%r13
    a82e:	48 03 47 08          	add    0x8(%rdi),%rax
    a832:	48 39 d0             	cmp    %rdx,%rax
    a835:	48 0f 47 c2          	cmova  %rdx,%rax
    a839:	48 89 c3             	mov    %rax,%rbx
    a83c:	41 83 e4 07          	and    $0x7,%r12d
    a840:	74 1e                	je     a860 <ema_do_uncommit+0x50>
    a842:	48 83 c4 10          	add    $0x10,%rsp
    a846:	44 89 e1             	mov    %r12d,%ecx
    a849:	48 89 da             	mov    %rbx,%rdx
    a84c:	4c 89 ee             	mov    %r13,%rsi
    a84f:	5b                   	pop    %rbx
    a850:	41 5c                	pop    %r12
    a852:	41 5d                	pop    %r13
    a854:	e9 37 ed ff ff       	jmp    9590 <ema_do_uncommit_real>
    a859:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a860:	b9 01 00 00 00       	mov    $0x1,%ecx
    a865:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    a86a:	e8 61 fd ff ff       	call   a5d0 <ema_modify_permissions>
    a86f:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    a874:	eb cc                	jmp    a842 <ema_do_uncommit+0x32>
    a876:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a87d:	00 00 00 

000000000000a880 <ema_do_dealloc>:
    a880:	f3 0f 1e fa          	endbr64 
    a884:	41 54                	push   %r12
    a886:	49 89 f4             	mov    %rsi,%r12
    a889:	55                   	push   %rbp
    a88a:	53                   	push   %rbx
    a88b:	48 89 fb             	mov    %rdi,%rbx
    a88e:	48 83 ec 10          	sub    $0x10,%rsp
    a892:	48 8b 6f 08          	mov    0x8(%rdi),%rbp
    a896:	48 8b 4f 18          	mov    0x18(%rdi),%rcx
    a89a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a8a1:	00 00 
    a8a3:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    a8a8:	48 8b 07             	mov    (%rdi),%rax
    a8ab:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    a8b2:	00 
    a8b3:	48 39 f0             	cmp    %rsi,%rax
    a8b6:	4c 0f 43 e0          	cmovae %rax,%r12
    a8ba:	48 01 c5             	add    %rax,%rbp
    a8bd:	48 39 d5             	cmp    %rdx,%rbp
    a8c0:	48 0f 47 ea          	cmova  %rdx,%rbp
    a8c4:	f6 47 10 01          	testb  $0x1,0x10(%rdi)
    a8c8:	75 1c                	jne    a8e6 <ema_do_dealloc+0x66>
    a8ca:	83 e1 07             	and    $0x7,%ecx
    a8cd:	74 71                	je     a940 <ema_do_dealloc+0xc0>
    a8cf:	31 c9                	xor    %ecx,%ecx
    a8d1:	48 89 ea             	mov    %rbp,%rdx
    a8d4:	4c 89 e6             	mov    %r12,%rsi
    a8d7:	48 89 df             	mov    %rbx,%rdi
    a8da:	e8 b1 ec ff ff       	call   9590 <ema_do_uncommit_real>
    a8df:	85 c0                	test   %eax,%eax
    a8e1:	75 3e                	jne    a921 <ema_do_dealloc+0xa1>
    a8e3:	48 8b 03             	mov    (%rbx),%rax
    a8e6:	4c 39 e0             	cmp    %r12,%rax
    a8e9:	72 65                	jb     a950 <ema_do_dealloc+0xd0>
    a8eb:	48 03 43 08          	add    0x8(%rbx),%rax
    a8ef:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    a8f6:	00 
    a8f7:	48 39 c5             	cmp    %rax,%rbp
    a8fa:	73 1b                	jae    a917 <ema_do_dealloc+0x97>
    a8fc:	48 89 e1             	mov    %rsp,%rcx
    a8ff:	ba 01 00 00 00       	mov    $0x1,%edx
    a904:	48 89 ee             	mov    %rbp,%rsi
    a907:	48 89 df             	mov    %rbx,%rdi
    a90a:	e8 d1 f0 ff ff       	call   99e0 <ema_split>
    a90f:	85 c0                	test   %eax,%eax
    a911:	75 0e                	jne    a921 <ema_do_dealloc+0xa1>
    a913:	48 8b 1c 24          	mov    (%rsp),%rbx
    a917:	48 89 df             	mov    %rbx,%rdi
    a91a:	e8 11 f8 ff ff       	call   a130 <ema_destroy>
    a91f:	31 c0                	xor    %eax,%eax
    a921:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    a926:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    a92d:	00 00 
    a92f:	75 3f                	jne    a970 <ema_do_dealloc+0xf0>
    a931:	48 83 c4 10          	add    $0x10,%rsp
    a935:	5b                   	pop    %rbx
    a936:	5d                   	pop    %rbp
    a937:	41 5c                	pop    %r12
    a939:	c3                   	ret    
    a93a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a940:	b9 01 00 00 00       	mov    $0x1,%ecx
    a945:	e8 86 fc ff ff       	call   a5d0 <ema_modify_permissions>
    a94a:	eb 83                	jmp    a8cf <ema_do_dealloc+0x4f>
    a94c:	0f 1f 40 00          	nopl   0x0(%rax)
    a950:	31 d2                	xor    %edx,%edx
    a952:	48 89 e1             	mov    %rsp,%rcx
    a955:	4c 89 e6             	mov    %r12,%rsi
    a958:	48 89 df             	mov    %rbx,%rdi
    a95b:	e8 80 f0 ff ff       	call   99e0 <ema_split>
    a960:	85 c0                	test   %eax,%eax
    a962:	75 bd                	jne    a921 <ema_do_dealloc+0xa1>
    a964:	48 8b 1c 24          	mov    (%rsp),%rbx
    a968:	48 8b 03             	mov    (%rbx),%rax
    a96b:	e9 7b ff ff ff       	jmp    a8eb <ema_do_dealloc+0x6b>
    a970:	e8 7b 60 00 00       	call   109f0 <__stack_chk_fail>
    a975:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a97c:	00 00 00 
    a97f:	90                   	nop

000000000000a980 <ema_do_dealloc_loop>:
    a980:	f3 0f 1e fa          	endbr64 
    a984:	41 55                	push   %r13
    a986:	49 89 d5             	mov    %rdx,%r13
    a989:	41 54                	push   %r12
    a98b:	49 89 cc             	mov    %rcx,%r12
    a98e:	55                   	push   %rbp
    a98f:	48 89 f5             	mov    %rsi,%rbp
    a992:	53                   	push   %rbx
    a993:	48 83 ec 08          	sub    $0x8,%rsp
    a997:	eb 1d                	jmp    a9b6 <ema_do_dealloc_loop+0x36>
    a999:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a9a0:	4c 89 e2             	mov    %r12,%rdx
    a9a3:	4c 89 ee             	mov    %r13,%rsi
    a9a6:	48 8b 5f 38          	mov    0x38(%rdi),%rbx
    a9aa:	e8 d1 fe ff ff       	call   a880 <ema_do_dealloc>
    a9af:	85 c0                	test   %eax,%eax
    a9b1:	75 0a                	jne    a9bd <ema_do_dealloc_loop+0x3d>
    a9b3:	48 89 df             	mov    %rbx,%rdi
    a9b6:	48 39 ef             	cmp    %rbp,%rdi
    a9b9:	75 e5                	jne    a9a0 <ema_do_dealloc_loop+0x20>
    a9bb:	31 c0                	xor    %eax,%eax
    a9bd:	48 83 c4 08          	add    $0x8,%rsp
    a9c1:	5b                   	pop    %rbx
    a9c2:	5d                   	pop    %rbp
    a9c3:	41 5c                	pop    %r12
    a9c5:	41 5d                	pop    %r13
    a9c7:	c3                   	ret    
    a9c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a9cf:	00 

000000000000a9d0 <ema_do_uncommit_loop>:
    a9d0:	f3 0f 1e fa          	endbr64 
    a9d4:	41 57                	push   %r15
    a9d6:	41 56                	push   %r14
    a9d8:	41 55                	push   %r13
    a9da:	41 54                	push   %r12
    a9dc:	49 89 d4             	mov    %rdx,%r12
    a9df:	55                   	push   %rbp
    a9e0:	48 89 cd             	mov    %rcx,%rbp
    a9e3:	53                   	push   %rbx
    a9e4:	48 83 ec 18          	sub    $0x18,%rsp
    a9e8:	48 8b 17             	mov    (%rdi),%rdx
    a9eb:	48 39 f7             	cmp    %rsi,%rdi
    a9ee:	0f 84 d9 00 00 00    	je     aacd <ema_do_uncommit_loop+0xfd>
    a9f4:	49 89 ff             	mov    %rdi,%r15
    a9f7:	48 89 f3             	mov    %rsi,%rbx
    a9fa:	48 89 f8             	mov    %rdi,%rax
    a9fd:	0f 1f 00             	nopl   (%rax)
    aa00:	f6 40 10 01          	testb  $0x1,0x10(%rax)
    aa04:	75 32                	jne    aa38 <ema_do_uncommit_loop+0x68>
    aa06:	48 8b 48 08          	mov    0x8(%rax),%rcx
    aa0a:	48 8b 40 38          	mov    0x38(%rax),%rax
    aa0e:	48 01 d1             	add    %rdx,%rcx
    aa11:	48 39 c3             	cmp    %rax,%rbx
    aa14:	74 3a                	je     aa50 <ema_do_uncommit_loop+0x80>
    aa16:	48 8b 10             	mov    (%rax),%rdx
    aa19:	48 39 ca             	cmp    %rcx,%rdx
    aa1c:	74 e2                	je     aa00 <ema_do_uncommit_loop+0x30>
    aa1e:	b8 16 00 00 00       	mov    $0x16,%eax
    aa23:	48 83 c4 18          	add    $0x18,%rsp
    aa27:	5b                   	pop    %rbx
    aa28:	5d                   	pop    %rbp
    aa29:	41 5c                	pop    %r12
    aa2b:	41 5d                	pop    %r13
    aa2d:	41 5e                	pop    %r14
    aa2f:	41 5f                	pop    %r15
    aa31:	c3                   	ret    
    aa32:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    aa38:	48 83 c4 18          	add    $0x18,%rsp
    aa3c:	b8 0d 00 00 00       	mov    $0xd,%eax
    aa41:	5b                   	pop    %rbx
    aa42:	5d                   	pop    %rbp
    aa43:	41 5c                	pop    %r12
    aa45:	41 5d                	pop    %r13
    aa47:	41 5e                	pop    %r14
    aa49:	41 5f                	pop    %r15
    aa4b:	c3                   	ret    
    aa4c:	0f 1f 40 00          	nopl   0x0(%rax)
    aa50:	b8 16 00 00 00       	mov    $0x16,%eax
    aa55:	48 39 e9             	cmp    %rbp,%rcx
    aa58:	73 1e                	jae    aa78 <ema_do_uncommit_loop+0xa8>
    aa5a:	eb c7                	jmp    aa23 <ema_do_uncommit_loop+0x53>
    aa5c:	0f 1f 40 00          	nopl   0x0(%rax)
    aa60:	44 89 c1             	mov    %r8d,%ecx
    aa63:	4c 89 f2             	mov    %r14,%rdx
    aa66:	4c 89 ce             	mov    %r9,%rsi
    aa69:	4c 89 ff             	mov    %r15,%rdi
    aa6c:	e8 1f eb ff ff       	call   9590 <ema_do_uncommit_real>
    aa71:	85 c0                	test   %eax,%eax
    aa73:	75 ae                	jne    aa23 <ema_do_uncommit_loop+0x53>
    aa75:	4d 89 ef             	mov    %r13,%r15
    aa78:	49 39 df             	cmp    %rbx,%r15
    aa7b:	74 5e                	je     aadb <ema_do_uncommit_loop+0x10b>
    aa7d:	49 8b 07             	mov    (%r15),%rax
    aa80:	45 8b 47 18          	mov    0x18(%r15),%r8d
    aa84:	4d 8b 6f 38          	mov    0x38(%r15),%r13
    aa88:	49 39 c4             	cmp    %rax,%r12
    aa8b:	49 89 c1             	mov    %rax,%r9
    aa8e:	4d 0f 43 cc          	cmovae %r12,%r9
    aa92:	49 03 47 08          	add    0x8(%r15),%rax
    aa96:	48 39 e8             	cmp    %rbp,%rax
    aa99:	48 0f 47 c5          	cmova  %rbp,%rax
    aa9d:	49 89 c6             	mov    %rax,%r14
    aaa0:	41 83 e0 07          	and    $0x7,%r8d
    aaa4:	75 ba                	jne    aa60 <ema_do_uncommit_loop+0x90>
    aaa6:	b9 01 00 00 00       	mov    $0x1,%ecx
    aaab:	48 89 ea             	mov    %rbp,%rdx
    aaae:	4c 89 e6             	mov    %r12,%rsi
    aab1:	4c 89 ff             	mov    %r15,%rdi
    aab4:	44 89 44 24 0c       	mov    %r8d,0xc(%rsp)
    aab9:	4c 89 0c 24          	mov    %r9,(%rsp)
    aabd:	e8 0e fb ff ff       	call   a5d0 <ema_modify_permissions>
    aac2:	44 8b 44 24 0c       	mov    0xc(%rsp),%r8d
    aac7:	4c 8b 0c 24          	mov    (%rsp),%r9
    aacb:	eb 93                	jmp    aa60 <ema_do_uncommit_loop+0x90>
    aacd:	b8 16 00 00 00       	mov    $0x16,%eax
    aad2:	48 39 ca             	cmp    %rcx,%rdx
    aad5:	0f 82 48 ff ff ff    	jb     aa23 <ema_do_uncommit_loop+0x53>
    aadb:	48 83 c4 18          	add    $0x18,%rsp
    aadf:	31 c0                	xor    %eax,%eax
    aae1:	5b                   	pop    %rbx
    aae2:	5d                   	pop    %rbp
    aae3:	41 5c                	pop    %r12
    aae5:	41 5d                	pop    %r13
    aae7:	41 5e                	pop    %r14
    aae9:	41 5f                	pop    %r15
    aaeb:	c3                   	ret    
    aaec:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000aaf0 <ema_modify_permissions_loop>:
    aaf0:	f3 0f 1e fa          	endbr64 
    aaf4:	41 57                	push   %r15
    aaf6:	41 56                	push   %r14
    aaf8:	41 55                	push   %r13
    aafa:	41 54                	push   %r12
    aafc:	55                   	push   %rbp
    aafd:	48 89 d5             	mov    %rdx,%rbp
    ab00:	53                   	push   %rbx
    ab01:	48 89 cb             	mov    %rcx,%rbx
    ab04:	48 83 ec 08          	sub    $0x8,%rsp
    ab08:	48 8b 17             	mov    (%rdi),%rdx
    ab0b:	48 39 f7             	cmp    %rsi,%rdi
    ab0e:	0f 84 de 00 00 00    	je     abf2 <ema_modify_permissions_loop+0x102>
    ab14:	49 89 fe             	mov    %rdi,%r14
    ab17:	49 89 f4             	mov    %rsi,%r12
    ab1a:	45 89 c5             	mov    %r8d,%r13d
    ab1d:	49 89 ff             	mov    %rdi,%r15
    ab20:	41 f6 47 19 02       	testb  $0x2,0x19(%r15)
    ab25:	74 79                	je     aba0 <ema_modify_permissions_loop+0xb0>
    ab27:	41 f6 47 10 01       	testb  $0x1,0x10(%r15)
    ab2c:	75 72                	jne    aba0 <ema_modify_permissions_loop+0xb0>
    ab2e:	48 39 d5             	cmp    %rdx,%rbp
    ab31:	48 89 d6             	mov    %rdx,%rsi
    ab34:	49 8b 47 08          	mov    0x8(%r15),%rax
    ab38:	49 8b 7f 20          	mov    0x20(%r15),%rdi
    ab3c:	48 0f 43 f5          	cmovae %rbp,%rsi
    ab40:	48 01 d0             	add    %rdx,%rax
    ab43:	48 29 d6             	sub    %rdx,%rsi
    ab46:	48 c1 ee 0c          	shr    $0xc,%rsi
    ab4a:	48 39 d8             	cmp    %rbx,%rax
    ab4d:	48 0f 47 c3          	cmova  %rbx,%rax
    ab51:	48 29 d0             	sub    %rdx,%rax
    ab54:	48 c1 e8 0c          	shr    $0xc,%rax
    ab58:	48 85 ff             	test   %rdi,%rdi
    ab5b:	74 27                	je     ab84 <ema_modify_permissions_loop+0x94>
    ab5d:	48 29 f0             	sub    %rsi,%rax
    ab60:	48 89 c2             	mov    %rax,%rdx
    ab63:	e8 28 e4 ff ff       	call   8f90 <bit_array_test_range>
    ab68:	84 c0                	test   %al,%al
    ab6a:	74 18                	je     ab84 <ema_modify_permissions_loop+0x94>
    ab6c:	49 8b 47 08          	mov    0x8(%r15),%rax
    ab70:	49 03 07             	add    (%r15),%rax
    ab73:	4d 8b 7f 38          	mov    0x38(%r15),%r15
    ab77:	4d 39 fc             	cmp    %r15,%r12
    ab7a:	74 3c                	je     abb8 <ema_modify_permissions_loop+0xc8>
    ab7c:	49 8b 17             	mov    (%r15),%rdx
    ab7f:	48 39 d0             	cmp    %rdx,%rax
    ab82:	74 9c                	je     ab20 <ema_modify_permissions_loop+0x30>
    ab84:	b8 16 00 00 00       	mov    $0x16,%eax
    ab89:	48 83 c4 08          	add    $0x8,%rsp
    ab8d:	5b                   	pop    %rbx
    ab8e:	5d                   	pop    %rbp
    ab8f:	41 5c                	pop    %r12
    ab91:	41 5d                	pop    %r13
    ab93:	41 5e                	pop    %r14
    ab95:	41 5f                	pop    %r15
    ab97:	c3                   	ret    
    ab98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    ab9f:	00 
    aba0:	48 83 c4 08          	add    $0x8,%rsp
    aba4:	b8 0d 00 00 00       	mov    $0xd,%eax
    aba9:	5b                   	pop    %rbx
    abaa:	5d                   	pop    %rbp
    abab:	41 5c                	pop    %r12
    abad:	41 5d                	pop    %r13
    abaf:	41 5e                	pop    %r14
    abb1:	41 5f                	pop    %r15
    abb3:	c3                   	ret    
    abb4:	0f 1f 40 00          	nopl   0x0(%rax)
    abb8:	48 39 d8             	cmp    %rbx,%rax
    abbb:	73 1f                	jae    abdc <ema_modify_permissions_loop+0xec>
    abbd:	eb c5                	jmp    ab84 <ema_modify_permissions_loop+0x94>
    abbf:	90                   	nop
    abc0:	44 89 e9             	mov    %r13d,%ecx
    abc3:	48 89 da             	mov    %rbx,%rdx
    abc6:	48 89 ee             	mov    %rbp,%rsi
    abc9:	4c 89 f7             	mov    %r14,%rdi
    abcc:	4d 8b 7e 38          	mov    0x38(%r14),%r15
    abd0:	e8 fb f9 ff ff       	call   a5d0 <ema_modify_permissions>
    abd5:	85 c0                	test   %eax,%eax
    abd7:	75 b0                	jne    ab89 <ema_modify_permissions_loop+0x99>
    abd9:	4d 89 fe             	mov    %r15,%r14
    abdc:	4d 39 f4             	cmp    %r14,%r12
    abdf:	75 df                	jne    abc0 <ema_modify_permissions_loop+0xd0>
    abe1:	31 c0                	xor    %eax,%eax
    abe3:	48 83 c4 08          	add    $0x8,%rsp
    abe7:	5b                   	pop    %rbx
    abe8:	5d                   	pop    %rbp
    abe9:	41 5c                	pop    %r12
    abeb:	41 5d                	pop    %r13
    abed:	41 5e                	pop    %r14
    abef:	41 5f                	pop    %r15
    abf1:	c3                   	ret    
    abf2:	48 39 ca             	cmp    %rcx,%rdx
    abf5:	72 8d                	jb     ab84 <ema_modify_permissions_loop+0x94>
    abf7:	31 c0                	xor    %eax,%eax
    abf9:	eb e8                	jmp    abe3 <ema_modify_permissions_loop+0xf3>
    abfb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000ac00 <ema_do_commit_data>:
    ac00:	f3 0f 1e fa          	endbr64 
    ac04:	55                   	push   %rbp
    ac05:	41 81 c8 00 02 00 00 	or     $0x200,%r8d
    ac0c:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ac10:	4d 63 c0             	movslq %r8d,%r8
    ac13:	48 89 e5             	mov    %rsp,%rbp
    ac16:	41 57                	push   %r15
    ac18:	41 56                	push   %r14
    ac1a:	49 89 f6             	mov    %rsi,%r14
    ac1d:	41 55                	push   %r13
    ac1f:	41 54                	push   %r12
    ac21:	49 89 d4             	mov    %rdx,%r12
    ac24:	53                   	push   %rbx
    ac25:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    ac29:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
    ac30:	48 89 7c 24 38       	mov    %rdi,0x38(%rsp)
    ac35:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    ac3c:	00 00 
    ac3e:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
    ac45:	00 
    ac46:	31 c0                	xor    %eax,%eax
    ac48:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
    ac4d:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
    ac54:	00 00 
    ac56:	0f 11 44 24 48       	movups %xmm0,0x48(%rsp)
    ac5b:	0f 11 44 24 58       	movups %xmm0,0x58(%rsp)
    ac60:	0f 11 44 24 68       	movups %xmm0,0x68(%rsp)
    ac65:	48 39 d6             	cmp    %rdx,%rsi
    ac68:	73 46                	jae    acb0 <ema_do_commit_data+0xb0>
    ac6a:	48 29 f1             	sub    %rsi,%rcx
    ac6d:	49 89 f7             	mov    %rsi,%r15
    ac70:	4c 8d 6c 24 40       	lea    0x40(%rsp),%r13
    ac75:	48 89 cb             	mov    %rcx,%rbx
    ac78:	eb 12                	jmp    ac8c <ema_do_commit_data+0x8c>
    ac7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    ac80:	49 81 c7 00 10 00 00 	add    $0x1000,%r15
    ac87:	4d 39 e7             	cmp    %r12,%r15
    ac8a:	73 24                	jae    acb0 <ema_do_commit_data+0xb0>
    ac8c:	4a 8d 14 3b          	lea    (%rbx,%r15,1),%rdx
    ac90:	4c 89 fe             	mov    %r15,%rsi
    ac93:	4c 89 ef             	mov    %r13,%rdi
    ac96:	e8 42 78 00 00       	call   124dd <do_eacceptcopy>
    ac9b:	85 c0                	test   %eax,%eax
    ac9d:	74 e1                	je     ac80 <ema_do_commit_data+0x80>
    ac9f:	b8 0e 00 00 00       	mov    $0xe,%eax
    aca4:	eb 1a                	jmp    acc0 <ema_do_commit_data+0xc0>
    aca6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    acad:	00 00 00 
    acb0:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
    acb5:	4c 89 e2             	mov    %r12,%rdx
    acb8:	4c 89 f6             	mov    %r14,%rsi
    acbb:	e8 70 eb ff ff       	call   9830 <ema_set_eaccept>
    acc0:	48 8b 94 24 b8 00 00 	mov    0xb8(%rsp),%rdx
    acc7:	00 
    acc8:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    accf:	00 00 
    acd1:	75 0f                	jne    ace2 <ema_do_commit_data+0xe2>
    acd3:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    acd7:	5b                   	pop    %rbx
    acd8:	41 5c                	pop    %r12
    acda:	41 5d                	pop    %r13
    acdc:	41 5e                	pop    %r14
    acde:	41 5f                	pop    %r15
    ace0:	5d                   	pop    %rbp
    ace1:	c3                   	ret    
    ace2:	e8 09 5d 00 00       	call   109f0 <__stack_chk_fail>
    ace7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    acee:	00 00 

000000000000acf0 <ema_do_commit_data_loop>:
    acf0:	f3 0f 1e fa          	endbr64 
    acf4:	41 57                	push   %r15
    acf6:	41 56                	push   %r14
    acf8:	41 55                	push   %r13
    acfa:	41 54                	push   %r12
    acfc:	55                   	push   %rbp
    acfd:	53                   	push   %rbx
    acfe:	48 89 cb             	mov    %rcx,%rbx
    ad01:	48 83 ec 18          	sub    $0x18,%rsp
    ad05:	48 8b 0f             	mov    (%rdi),%rcx
    ad08:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    ad0d:	44 89 4c 24 04       	mov    %r9d,0x4(%rsp)
    ad12:	48 39 f7             	cmp    %rsi,%rdi
    ad15:	0f 84 a2 00 00 00    	je     adbd <ema_do_commit_data_loop+0xcd>
    ad1b:	48 89 fd             	mov    %rdi,%rbp
    ad1e:	49 89 f4             	mov    %rsi,%r12
    ad21:	49 89 d7             	mov    %rdx,%r15
    ad24:	49 89 fd             	mov    %rdi,%r13
    ad27:	eb 72                	jmp    ad9b <ema_do_commit_data_loop+0xab>
    ad29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    ad30:	41 8b 45 10          	mov    0x10(%r13),%eax
    ad34:	a8 01                	test   $0x1,%al
    ad36:	75 71                	jne    ada9 <ema_do_commit_data_loop+0xb9>
    ad38:	a8 04                	test   $0x4,%al
    ad3a:	0f 84 86 00 00 00    	je     adc6 <ema_do_commit_data_loop+0xd6>
    ad40:	49 8b 7d 20          	mov    0x20(%r13),%rdi
    ad44:	49 8b 45 08          	mov    0x8(%r13),%rax
    ad48:	48 85 ff             	test   %rdi,%rdi
    ad4b:	74 39                	je     ad86 <ema_do_commit_data_loop+0x96>
    ad4d:	49 39 cf             	cmp    %rcx,%r15
    ad50:	48 89 ce             	mov    %rcx,%rsi
    ad53:	49 0f 43 f7          	cmovae %r15,%rsi
    ad57:	48 01 c8             	add    %rcx,%rax
    ad5a:	48 29 ce             	sub    %rcx,%rsi
    ad5d:	48 c1 ee 0c          	shr    $0xc,%rsi
    ad61:	48 39 d8             	cmp    %rbx,%rax
    ad64:	48 0f 47 c3          	cmova  %rbx,%rax
    ad68:	48 89 c2             	mov    %rax,%rdx
    ad6b:	48 29 ca             	sub    %rcx,%rdx
    ad6e:	48 c1 ea 0c          	shr    $0xc,%rdx
    ad72:	48 29 f2             	sub    %rsi,%rdx
    ad75:	e8 d6 e2 ff ff       	call   9050 <bit_array_test_range_any>
    ad7a:	84 c0                	test   %al,%al
    ad7c:	75 2b                	jne    ada9 <ema_do_commit_data_loop+0xb9>
    ad7e:	49 8b 4d 00          	mov    0x0(%r13),%rcx
    ad82:	49 8b 45 08          	mov    0x8(%r13),%rax
    ad86:	4d 8b 6d 38          	mov    0x38(%r13),%r13
    ad8a:	48 01 c8             	add    %rcx,%rax
    ad8d:	4d 39 ec             	cmp    %r13,%r12
    ad90:	74 4e                	je     ade0 <ema_do_commit_data_loop+0xf0>
    ad92:	49 8b 4d 00          	mov    0x0(%r13),%rcx
    ad96:	48 39 c8             	cmp    %rcx,%rax
    ad99:	75 2b                	jne    adc6 <ema_do_commit_data_loop+0xd6>
    ad9b:	49 8b 45 18          	mov    0x18(%r13),%rax
    ad9f:	48 f7 d0             	not    %rax
    ada2:	a9 02 02 00 00       	test   $0x202,%eax
    ada7:	74 87                	je     ad30 <ema_do_commit_data_loop+0x40>
    ada9:	b8 0d 00 00 00       	mov    $0xd,%eax
    adae:	48 83 c4 18          	add    $0x18,%rsp
    adb2:	5b                   	pop    %rbx
    adb3:	5d                   	pop    %rbp
    adb4:	41 5c                	pop    %r12
    adb6:	41 5d                	pop    %r13
    adb8:	41 5e                	pop    %r14
    adba:	41 5f                	pop    %r15
    adbc:	c3                   	ret    
    adbd:	48 39 d9             	cmp    %rbx,%rcx
    adc0:	0f 83 98 00 00 00    	jae    ae5e <ema_do_commit_data_loop+0x16e>
    adc6:	48 83 c4 18          	add    $0x18,%rsp
    adca:	b8 16 00 00 00       	mov    $0x16,%eax
    adcf:	5b                   	pop    %rbx
    add0:	5d                   	pop    %rbp
    add1:	41 5c                	pop    %r12
    add3:	41 5d                	pop    %r13
    add5:	41 5e                	pop    %r14
    add7:	41 5f                	pop    %r15
    add9:	c3                   	ret    
    adda:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    ade0:	48 39 d8             	cmp    %rbx,%rax
    ade3:	72 e1                	jb     adc6 <ema_do_commit_data_loop+0xd6>
    ade5:	49 89 ee             	mov    %rbp,%r14
    ade8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    adef:	00 
    adf0:	49 8b 16             	mov    (%r14),%rdx
    adf3:	4c 89 fe             	mov    %r15,%rsi
    adf6:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    adfb:	4c 89 f7             	mov    %r14,%rdi
    adfe:	44 8b 44 24 04       	mov    0x4(%rsp),%r8d
    ae03:	4c 39 fa             	cmp    %r15,%rdx
    ae06:	48 0f 43 f2          	cmovae %rdx,%rsi
    ae0a:	49 03 56 08          	add    0x8(%r14),%rdx
    ae0e:	48 89 f1             	mov    %rsi,%rcx
    ae11:	4c 29 f9             	sub    %r15,%rcx
    ae14:	48 01 c1             	add    %rax,%rcx
    ae17:	48 39 da             	cmp    %rbx,%rdx
    ae1a:	48 0f 47 d3          	cmova  %rbx,%rdx
    ae1e:	e8 dd fd ff ff       	call   ac00 <ema_do_commit_data>
    ae23:	85 c0                	test   %eax,%eax
    ae25:	75 87                	jne    adae <ema_do_commit_data_loop+0xbe>
    ae27:	4d 8b 76 38          	mov    0x38(%r14),%r14
    ae2b:	4d 39 ee             	cmp    %r13,%r14
    ae2e:	75 c0                	jne    adf0 <ema_do_commit_data_loop+0x100>
    ae30:	49 39 ec             	cmp    %rbp,%r12
    ae33:	74 29                	je     ae5e <ema_do_commit_data_loop+0x16e>
    ae35:	0f 1f 00             	nopl   (%rax)
    ae38:	8b 4c 24 04          	mov    0x4(%rsp),%ecx
    ae3c:	48 89 da             	mov    %rbx,%rdx
    ae3f:	4c 89 fe             	mov    %r15,%rsi
    ae42:	48 89 ef             	mov    %rbp,%rdi
    ae45:	4c 8b 75 38          	mov    0x38(%rbp),%r14
    ae49:	e8 82 f7 ff ff       	call   a5d0 <ema_modify_permissions>
    ae4e:	85 c0                	test   %eax,%eax
    ae50:	0f 85 58 ff ff ff    	jne    adae <ema_do_commit_data_loop+0xbe>
    ae56:	4c 89 f5             	mov    %r14,%rbp
    ae59:	49 39 ec             	cmp    %rbp,%r12
    ae5c:	75 da                	jne    ae38 <ema_do_commit_data_loop+0x148>
    ae5e:	48 83 c4 18          	add    $0x18,%rsp
    ae62:	31 c0                	xor    %eax,%eax
    ae64:	5b                   	pop    %rbx
    ae65:	5d                   	pop    %rbp
    ae66:	41 5c                	pop    %r12
    ae68:	41 5d                	pop    %r13
    ae6a:	41 5e                	pop    %r14
    ae6c:	41 5f                	pop    %r15
    ae6e:	c3                   	ret    
    ae6f:	90                   	nop

000000000000ae70 <ema_realloc_from_reserve_range>:
    ae70:	f3 0f 1e fa          	endbr64 
    ae74:	41 57                	push   %r15
    ae76:	41 56                	push   %r14
    ae78:	41 55                	push   %r13
    ae7a:	49 89 d5             	mov    %rdx,%r13
    ae7d:	41 54                	push   %r12
    ae7f:	49 89 cc             	mov    %rcx,%r12
    ae82:	55                   	push   %rbp
    ae83:	48 89 fd             	mov    %rdi,%rbp
    ae86:	53                   	push   %rbx
    ae87:	48 89 f3             	mov    %rsi,%rbx
    ae8a:	48 83 ec 28          	sub    $0x28,%rsp
    ae8e:	4c 8b 37             	mov    (%rdi),%r14
    ae91:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
    ae96:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    ae9b:	44 89 44 24 04       	mov    %r8d,0x4(%rsp)
    aea0:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    aea5:	48 39 f7             	cmp    %rsi,%rdi
    aea8:	74 4a                	je     aef4 <ema_realloc_from_reserve_range+0x84>
    aeaa:	49 89 ff             	mov    %rdi,%r15
    aead:	eb 1a                	jmp    aec9 <ema_realloc_from_reserve_range+0x59>
    aeaf:	90                   	nop
    aeb0:	4d 39 37             	cmp    %r14,(%r15)
    aeb3:	75 20                	jne    aed5 <ema_realloc_from_reserve_range+0x65>
    aeb5:	41 f6 47 10 01       	testb  $0x1,0x10(%r15)
    aeba:	74 19                	je     aed5 <ema_realloc_from_reserve_range+0x65>
    aebc:	4d 03 77 08          	add    0x8(%r15),%r14
    aec0:	4d 8b 7f 38          	mov    0x38(%r15),%r15
    aec4:	49 39 df             	cmp    %rbx,%r15
    aec7:	74 27                	je     aef0 <ema_realloc_from_reserve_range+0x80>
    aec9:	4c 89 ff             	mov    %r15,%rdi
    aecc:	e8 7f 07 00 00       	call   b650 <can_erealloc>
    aed1:	85 c0                	test   %eax,%eax
    aed3:	75 db                	jne    aeb0 <ema_realloc_from_reserve_range+0x40>
    aed5:	48 83 c4 28          	add    $0x28,%rsp
    aed9:	31 c0                	xor    %eax,%eax
    aedb:	5b                   	pop    %rbx
    aedc:	5d                   	pop    %rbp
    aedd:	41 5c                	pop    %r12
    aedf:	41 5d                	pop    %r13
    aee1:	41 5e                	pop    %r14
    aee3:	41 5f                	pop    %r15
    aee5:	c3                   	ret    
    aee6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    aeed:	00 00 00 
    aef0:	4c 8b 75 00          	mov    0x0(%rbp),%r14
    aef4:	48 8b 5b 40          	mov    0x40(%rbx),%rbx
    aef8:	4d 39 ee             	cmp    %r13,%r14
    aefb:	72 6b                	jb     af68 <ema_realloc_from_reserve_range+0xf8>
    aefd:	48 8b 43 08          	mov    0x8(%rbx),%rax
    af01:	48 03 03             	add    (%rbx),%rax
    af04:	49 39 c4             	cmp    %rax,%r12
    af07:	0f 82 88 00 00 00    	jb     af95 <ema_realloc_from_reserve_range+0x125>
    af0d:	48 8b 6b 38          	mov    0x38(%rbx),%rbp
    af11:	48 89 6c 24 10       	mov    %rbp,0x10(%rsp)
    af16:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
    af1b:	48 39 dd             	cmp    %rbx,%rbp
    af1e:	74 11                	je     af31 <ema_realloc_from_reserve_range+0xc1>
    af20:	48 89 df             	mov    %rbx,%rdi
    af23:	48 8b 5b 38          	mov    0x38(%rbx),%rbx
    af27:	e8 04 f2 ff ff       	call   a130 <ema_destroy>
    af2c:	48 39 dd             	cmp    %rbx,%rbp
    af2f:	75 ef                	jne    af20 <ema_realloc_from_reserve_range+0xb0>
    af31:	48 83 ec 08          	sub    $0x8,%rsp
    af35:	4c 89 e6             	mov    %r12,%rsi
    af38:	4c 89 ef             	mov    %r13,%rdi
    af3b:	55                   	push   %rbp
    af3c:	4c 8b 4c 24 78       	mov    0x78(%rsp),%r9
    af41:	4c 29 ee             	sub    %r13,%rsi
    af44:	4c 8b 44 24 70       	mov    0x70(%rsp),%r8
    af49:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    af4e:	8b 54 24 14          	mov    0x14(%rsp),%edx
    af52:	e8 c9 f0 ff ff       	call   a020 <ema_new>
    af57:	5a                   	pop    %rdx
    af58:	59                   	pop    %rcx
    af59:	48 83 c4 28          	add    $0x28,%rsp
    af5d:	5b                   	pop    %rbx
    af5e:	5d                   	pop    %rbp
    af5f:	41 5c                	pop    %r12
    af61:	41 5d                	pop    %r13
    af63:	41 5e                	pop    %r14
    af65:	41 5f                	pop    %r15
    af67:	c3                   	ret    
    af68:	31 d2                	xor    %edx,%edx
    af6a:	48 8d 4c 24 18       	lea    0x18(%rsp),%rcx
    af6f:	4c 89 ee             	mov    %r13,%rsi
    af72:	48 89 ef             	mov    %rbp,%rdi
    af75:	e8 66 ea ff ff       	call   99e0 <ema_split>
    af7a:	85 c0                	test   %eax,%eax
    af7c:	0f 85 53 ff ff ff    	jne    aed5 <ema_realloc_from_reserve_range+0x65>
    af82:	48 39 dd             	cmp    %rbx,%rbp
    af85:	0f 85 72 ff ff ff    	jne    aefd <ema_realloc_from_reserve_range+0x8d>
    af8b:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
    af90:	e9 68 ff ff ff       	jmp    aefd <ema_realloc_from_reserve_range+0x8d>
    af95:	31 d2                	xor    %edx,%edx
    af97:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
    af9c:	4c 89 e6             	mov    %r12,%rsi
    af9f:	48 89 df             	mov    %rbx,%rdi
    afa2:	e8 39 ea ff ff       	call   99e0 <ema_split>
    afa7:	85 c0                	test   %eax,%eax
    afa9:	0f 85 26 ff ff ff    	jne    aed5 <ema_realloc_from_reserve_range+0x65>
    afaf:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
    afb4:	e9 5d ff ff ff       	jmp    af16 <ema_realloc_from_reserve_range+0xa6>
    afb9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000afc0 <ema_do_alloc>:
    afc0:	f3 0f 1e fa          	endbr64 
    afc4:	41 55                	push   %r13
    afc6:	41 54                	push   %r12
    afc8:	55                   	push   %rbp
    afc9:	53                   	push   %rbx
    afca:	48 83 ec 08          	sub    $0x8,%rsp
    afce:	8b 6f 10             	mov    0x10(%rdi),%ebp
    afd1:	40 f6 c5 01          	test   $0x1,%bpl
    afd5:	74 11                	je     afe8 <ema_do_alloc+0x28>
    afd7:	31 c0                	xor    %eax,%eax
    afd9:	48 83 c4 08          	add    $0x8,%rsp
    afdd:	5b                   	pop    %rbx
    afde:	5d                   	pop    %rbp
    afdf:	41 5c                	pop    %r12
    afe1:	41 5d                	pop    %r13
    afe3:	c3                   	ret    
    afe4:	0f 1f 40 00          	nopl   0x0(%rax)
    afe8:	4c 8b 6f 08          	mov    0x8(%rdi),%r13
    afec:	8b 57 18             	mov    0x18(%rdi),%edx
    afef:	48 89 fb             	mov    %rdi,%rbx
    aff2:	89 e9                	mov    %ebp,%ecx
    aff4:	4c 8b 27             	mov    (%rdi),%r12
    aff7:	81 e2 00 ff 00 00    	and    $0xff00,%edx
    affd:	4c 89 ee             	mov    %r13,%rsi
    b000:	4c 89 e7             	mov    %r12,%rdi
    b003:	e8 f8 a7 ff ff       	call   5800 <sgx_mm_alloc_ocall>
    b008:	89 c2                	mov    %eax,%edx
    b00a:	b8 0e 00 00 00       	mov    $0xe,%eax
    b00f:	85 d2                	test   %edx,%edx
    b011:	75 c6                	jne    afd9 <ema_do_alloc+0x19>
    b013:	40 f6 c5 02          	test   $0x2,%bpl
    b017:	74 37                	je     b050 <ema_do_alloc+0x90>
    b019:	89 e9                	mov    %ebp,%ecx
    b01b:	48 8b 53 18          	mov    0x18(%rbx),%rdx
    b01f:	4c 89 ee             	mov    %r13,%rsi
    b022:	4c 89 e7             	mov    %r12,%rdi
    b025:	c1 e9 04             	shr    $0x4,%ecx
    b028:	83 f1 01             	xor    $0x1,%ecx
    b02b:	83 e1 01             	and    $0x1,%ecx
    b02e:	e8 8d f1 ff ff       	call   a1c0 <do_commit>
    b033:	85 c0                	test   %eax,%eax
    b035:	75 a2                	jne    afd9 <ema_do_alloc+0x19>
    b037:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    b03b:	48 85 ff             	test   %rdi,%rdi
    b03e:	74 50                	je     b090 <ema_do_alloc+0xd0>
    b040:	e8 ab e1 ff ff       	call   91f0 <bit_array_set_all>
    b045:	31 c0                	xor    %eax,%eax
    b047:	eb 90                	jmp    afd9 <ema_do_alloc+0x19>
    b049:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b050:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    b054:	48 85 ff             	test   %rdi,%rdi
    b057:	74 0f                	je     b068 <ema_do_alloc+0xa8>
    b059:	e8 92 e2 ff ff       	call   92f0 <bit_array_reset_all>
    b05e:	31 c0                	xor    %eax,%eax
    b060:	e9 74 ff ff ff       	jmp    afd9 <ema_do_alloc+0x19>
    b065:	0f 1f 00             	nopl   (%rax)
    b068:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    b06c:	48 c1 ef 0c          	shr    $0xc,%rdi
    b070:	e8 7b de ff ff       	call   8ef0 <bit_array_new_reset>
    b075:	48 89 43 20          	mov    %rax,0x20(%rbx)
    b079:	48 85 c0             	test   %rax,%rax
    b07c:	0f 85 55 ff ff ff    	jne    afd7 <ema_do_alloc+0x17>
    b082:	b8 0c 00 00 00       	mov    $0xc,%eax
    b087:	e9 4d ff ff ff       	jmp    afd9 <ema_do_alloc+0x19>
    b08c:	0f 1f 40 00          	nopl   0x0(%rax)
    b090:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    b094:	48 c1 ef 0c          	shr    $0xc,%rdi
    b098:	e8 23 de ff ff       	call   8ec0 <bit_array_new_set>
    b09d:	48 89 43 20          	mov    %rax,0x20(%rbx)
    b0a1:	48 85 c0             	test   %rax,%rax
    b0a4:	74 dc                	je     b082 <ema_do_alloc+0xc2>
    b0a6:	31 c0                	xor    %eax,%eax
    b0a8:	e9 2c ff ff ff       	jmp    afd9 <ema_do_alloc+0x19>
    b0ad:	0f 1f 00             	nopl   (%rax)

000000000000b0b0 <add_reserve>:
    b0b0:	41 54                	push   %r12
    b0b2:	55                   	push   %rbp
    b0b3:	53                   	push   %rbx
    b0b4:	31 db                	xor    %ebx,%ebx
    b0b6:	48 83 ec 10          	sub    $0x10,%rsp
    b0ba:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    b0c1:	00 00 
    b0c3:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    b0c8:	31 c0                	xor    %eax,%eax
    b0ca:	80 3d e7 f0 00 00 00 	cmpb   $0x0,0xf0e7(%rip)        # 1a1b8 <adding_reserve>
    b0d1:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    b0d8:	00 
    b0d9:	74 25                	je     b100 <add_reserve+0x50>
    b0db:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    b0e0:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    b0e7:	00 00 
    b0e9:	0f 85 fb 00 00 00    	jne    b1ea <add_reserve+0x13a>
    b0ef:	48 83 c4 10          	add    $0x10,%rsp
    b0f3:	89 d8                	mov    %ebx,%eax
    b0f5:	5b                   	pop    %rbx
    b0f6:	5d                   	pop    %rbp
    b0f7:	41 5c                	pop    %r12
    b0f9:	c3                   	ret    
    b0fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b100:	48 8b 35 c1 ef 00 00 	mov    0xefc1(%rip),%rsi        # 1a0c8 <reserve_size_increment>
    b107:	49 89 e4             	mov    %rsp,%r12
    b10a:	48 89 fd             	mov    %rdi,%rbp
    b10d:	ba 01 00 00 00       	mov    $0x1,%edx
    b112:	4d 89 e1             	mov    %r12,%r9
    b115:	c6 05 9c f0 00 00 01 	movb   $0x1,0xf09c(%rip)        # 1a1b8 <adding_reserve>
    b11c:	48 39 f7             	cmp    %rsi,%rdi
    b11f:	48 0f 43 f7          	cmovae %rdi,%rsi
    b123:	45 31 c0             	xor    %r8d,%r8d
    b126:	31 c9                	xor    %ecx,%ecx
    b128:	31 ff                	xor    %edi,%edi
    b12a:	48 89 35 97 ef 00 00 	mov    %rsi,0xef97(%rip)        # 1a0c8 <reserve_size_increment>
    b131:	48 81 c6 00 00 01 00 	add    $0x10000,%rsi
    b138:	e8 a3 0d 00 00       	call   bee0 <sgx_mm_alloc>
    b13d:	89 c3                	mov    %eax,%ebx
    b13f:	85 c0                	test   %eax,%eax
    b141:	75 2a                	jne    b16d <add_reserve+0xbd>
    b143:	48 8b 04 24          	mov    (%rsp),%rax
    b147:	48 8b 35 7a ef 00 00 	mov    0xef7a(%rip),%rsi        # 1a0c8 <reserve_size_increment>
    b14e:	4d 89 e1             	mov    %r12,%r9
    b151:	31 c9                	xor    %ecx,%ecx
    b153:	45 31 c0             	xor    %r8d,%r8d
    b156:	ba 44 00 00 00       	mov    $0x44,%edx
    b15b:	48 8d b8 00 80 00 00 	lea    0x8000(%rax),%rdi
    b162:	e8 79 0d 00 00       	call   bee0 <sgx_mm_alloc>
    b167:	89 c3                	mov    %eax,%ebx
    b169:	85 c0                	test   %eax,%eax
    b16b:	74 13                	je     b180 <add_reserve+0xd0>
    b16d:	c6 05 44 f0 00 00 00 	movb   $0x0,0xf044(%rip)        # 1a1b8 <adding_reserve>
    b174:	e9 62 ff ff ff       	jmp    b0db <add_reserve+0x2b>
    b179:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b180:	48 8b 3c 24          	mov    (%rsp),%rdi
    b184:	48 89 ee             	mov    %rbp,%rsi
    b187:	e8 44 0e 00 00       	call   bfd0 <sgx_mm_commit>
    b18c:	48 8b 04 24          	mov    (%rsp),%rax
    b190:	48 8b 15 29 f0 00 00 	mov    0xf029(%rip),%rdx        # 1a1c0 <reserve_list>
    b197:	c6 05 1a f0 00 00 00 	movb   $0x0,0xf01a(%rip)        # 1a1b8 <adding_reserve>
    b19e:	66 48 0f 6e c0       	movq   %rax,%xmm0
    b1a3:	48 89 50 18          	mov    %rdx,0x18(%rax)
    b1a7:	ba 00 00 00 10       	mov    $0x10000000,%edx
    b1ac:	0f 16 05 15 ef 00 00 	movhps 0xef15(%rip),%xmm0        # 1a0c8 <reserve_size_increment>
    b1b3:	66 0f d4 05 35 7f 00 	paddq  0x7f35(%rip),%xmm0        # 130f0 <g_dyn_entry_table+0x70>
    b1ba:	00 
    b1bb:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    b1c2:	00 
    b1c3:	48 89 05 f6 ef 00 00 	mov    %rax,0xeff6(%rip)        # 1a1c0 <reserve_list>
    b1ca:	0f 11 00             	movups %xmm0,(%rax)
    b1cd:	48 8b 05 f4 ee 00 00 	mov    0xeef4(%rip),%rax        # 1a0c8 <reserve_size_increment>
    b1d4:	48 01 c0             	add    %rax,%rax
    b1d7:	48 39 d0             	cmp    %rdx,%rax
    b1da:	48 0f 47 c2          	cmova  %rdx,%rax
    b1de:	48 89 05 e3 ee 00 00 	mov    %rax,0xeee3(%rip)        # 1a0c8 <reserve_size_increment>
    b1e5:	e9 f1 fe ff ff       	jmp    b0db <add_reserve+0x2b>
    b1ea:	e8 01 58 00 00       	call   109f0 <__stack_chk_fail>
    b1ef:	90                   	nop

000000000000b1f0 <remove_from_list>:
    b1f0:	48 8b 07             	mov    (%rdi),%rax
    b1f3:	48 23 05 d6 ee 00 00 	and    0xeed6(%rip),%rax        # 1a0d0 <size_mask>
    b1fa:	48 89 c2             	mov    %rax,%rdx
    b1fd:	48 8b 06             	mov    (%rsi),%rax
    b200:	48 39 f8             	cmp    %rdi,%rax
    b203:	74 43                	je     b248 <remove_from_list+0x58>
    b205:	48 83 fa 10          	cmp    $0x10,%rdx
    b209:	76 25                	jbe    b230 <remove_from_list+0x40>
    b20b:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    b20f:	48 8b 47 08          	mov    0x8(%rdi),%rax
    b213:	48 85 d2             	test   %rdx,%rdx
    b216:	74 04                	je     b21c <remove_from_list+0x2c>
    b218:	48 89 42 08          	mov    %rax,0x8(%rdx)
    b21c:	48 85 c0             	test   %rax,%rax
    b21f:	74 23                	je     b244 <remove_from_list+0x54>
    b221:	48 89 50 10          	mov    %rdx,0x10(%rax)
    b225:	c3                   	ret    
    b226:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b22d:	00 00 00 
    b230:	48 89 c2             	mov    %rax,%rdx
    b233:	48 8b 40 08          	mov    0x8(%rax),%rax
    b237:	48 39 f8             	cmp    %rdi,%rax
    b23a:	75 f4                	jne    b230 <remove_from_list+0x40>
    b23c:	48 8b 40 08          	mov    0x8(%rax),%rax
    b240:	48 89 42 08          	mov    %rax,0x8(%rdx)
    b244:	c3                   	ret    
    b245:	0f 1f 00             	nopl   (%rax)
    b248:	48 8b 40 08          	mov    0x8(%rax),%rax
    b24c:	48 89 06             	mov    %rax,(%rsi)
    b24f:	48 85 c0             	test   %rax,%rax
    b252:	74 f0                	je     b244 <remove_from_list+0x54>
    b254:	48 83 fa 10          	cmp    $0x10,%rdx
    b258:	76 ea                	jbe    b244 <remove_from_list+0x54>
    b25a:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    b261:	00 
    b262:	c3                   	ret    
    b263:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b26a:	00 00 00 
    b26d:	0f 1f 00             	nopl   (%rax)

000000000000b270 <put_free_block>:
    b270:	48 8b 05 59 ee 00 00 	mov    0xee59(%rip),%rax        # 1a0d0 <size_mask>
    b277:	48 8b 17             	mov    (%rdi),%rdx
    b27a:	48 21 c2             	and    %rax,%rdx
    b27d:	48 81 fa 08 08 00 00 	cmp    $0x808,%rdx
    b284:	76 2a                	jbe    b2b0 <put_free_block+0x40>
    b286:	48 8b 15 3b ef 00 00 	mov    0xef3b(%rip),%rdx        # 1a1c8 <large_block_list>
    b28d:	48 89 57 08          	mov    %rdx,0x8(%rdi)
    b291:	48 85 d2             	test   %rdx,%rdx
    b294:	74 0d                	je     b2a3 <put_free_block+0x33>
    b296:	48 23 02             	and    (%rdx),%rax
    b299:	48 83 f8 10          	cmp    $0x10,%rax
    b29d:	76 04                	jbe    b2a3 <put_free_block+0x33>
    b29f:	48 89 7a 10          	mov    %rdi,0x10(%rdx)
    b2a3:	48 89 3d 1e ef 00 00 	mov    %rdi,0xef1e(%rip)        # 1a1c8 <large_block_list>
    b2aa:	c3                   	ret    
    b2ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b2b0:	48 8d 4a f0          	lea    -0x10(%rdx),%rcx
    b2b4:	48 8d 35 25 ef 00 00 	lea    0xef25(%rip),%rsi        # 1a1e0 <exact_block_list>
    b2bb:	48 c1 e9 03          	shr    $0x3,%rcx
    b2bf:	48 83 fa 0f          	cmp    $0xf,%rdx
    b2c3:	ba 00 00 00 00       	mov    $0x0,%edx
    b2c8:	48 0f 47 d1          	cmova  %rcx,%rdx
    b2cc:	48 8b 0c d6          	mov    (%rsi,%rdx,8),%rcx
    b2d0:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
    b2d4:	48 85 c9             	test   %rcx,%rcx
    b2d7:	74 0d                	je     b2e6 <put_free_block+0x76>
    b2d9:	48 23 01             	and    (%rcx),%rax
    b2dc:	48 83 f8 10          	cmp    $0x10,%rax
    b2e0:	76 04                	jbe    b2e6 <put_free_block+0x76>
    b2e2:	48 89 79 10          	mov    %rdi,0x10(%rcx)
    b2e6:	48 89 3c d6          	mov    %rdi,(%rsi,%rdx,8)
    b2ea:	c3                   	ret    
    b2eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000b2f0 <neighbor_right>:
    b2f0:	4c 8b 05 d9 ed 00 00 	mov    0xedd9(%rip),%r8        # 1a0d0 <size_mask>
    b2f7:	4c 89 c2             	mov    %r8,%rdx
    b2fa:	48 23 17             	and    (%rdi),%rdx
    b2fd:	48 8d 04 17          	lea    (%rdi,%rdx,1),%rax
    b301:	74 2f                	je     b332 <neighbor_right+0x42>
    b303:	48 8b 0d b6 ee 00 00 	mov    0xeeb6(%rip),%rcx        # 1a1c0 <reserve_list>
    b30a:	48 85 c9             	test   %rcx,%rcx
    b30d:	74 23                	je     b332 <neighbor_right+0x42>
    b30f:	48 89 ca             	mov    %rcx,%rdx
    b312:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b318:	48 8b 32             	mov    (%rdx),%rsi
    b31b:	48 39 f7             	cmp    %rsi,%rdi
    b31e:	72 09                	jb     b329 <neighbor_right+0x39>
    b320:	48 03 72 10          	add    0x10(%rdx),%rsi
    b324:	48 39 c6             	cmp    %rax,%rsi
    b327:	73 0f                	jae    b338 <neighbor_right+0x48>
    b329:	48 8b 52 18          	mov    0x18(%rdx),%rdx
    b32d:	48 85 d2             	test   %rdx,%rdx
    b330:	75 e6                	jne    b318 <neighbor_right+0x28>
    b332:	31 c0                	xor    %eax,%eax
    b334:	c3                   	ret    
    b335:	0f 1f 00             	nopl   (%rax)
    b338:	74 f8                	je     b332 <neighbor_right+0x42>
    b33a:	4c 23 00             	and    (%rax),%r8
    b33d:	74 f3                	je     b332 <neighbor_right+0x42>
    b33f:	4a 8d 3c 00          	lea    (%rax,%r8,1),%rdi
    b343:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b348:	48 8b 31             	mov    (%rcx),%rsi
    b34b:	48 39 f0             	cmp    %rsi,%rax
    b34e:	72 09                	jb     b359 <neighbor_right+0x69>
    b350:	48 03 71 10          	add    0x10(%rcx),%rsi
    b354:	48 39 fe             	cmp    %rdi,%rsi
    b357:	73 0f                	jae    b368 <neighbor_right+0x78>
    b359:	48 8b 49 18          	mov    0x18(%rcx),%rcx
    b35d:	48 85 c9             	test   %rcx,%rcx
    b360:	75 e6                	jne    b348 <neighbor_right+0x58>
    b362:	31 c0                	xor    %eax,%eax
    b364:	c3                   	ret    
    b365:	0f 1f 00             	nopl   (%rax)
    b368:	48 39 d1             	cmp    %rdx,%rcx
    b36b:	ba 00 00 00 00       	mov    $0x0,%edx
    b370:	48 0f 45 c2          	cmovne %rdx,%rax
    b374:	c3                   	ret    
    b375:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b37c:	00 00 00 
    b37f:	90                   	nop

000000000000b380 <payload_to_block>:
    b380:	f3 0f 1e fa          	endbr64 
    b384:	48 89 f8             	mov    %rdi,%rax
    b387:	48 2b 05 4a ed 00 00 	sub    0xed4a(%rip),%rax        # 1a0d8 <header_size>
    b38e:	c3                   	ret    
    b38f:	90                   	nop

000000000000b390 <block_to_payload>:
    b390:	f3 0f 1e fa          	endbr64 
    b394:	48 8d 47 08          	lea    0x8(%rdi),%rax
    b398:	c3                   	ret    
    b399:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000b3a0 <is_alloced>:
    b3a0:	f3 0f 1e fa          	endbr64 
    b3a4:	48 8b 07             	mov    (%rdi),%rax
    b3a7:	83 e0 01             	and    $0x1,%eax
    b3aa:	c3                   	ret    
    b3ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000b3b0 <block_size>:
    b3b0:	f3 0f 1e fa          	endbr64 
    b3b4:	48 8b 07             	mov    (%rdi),%rax
    b3b7:	48 23 05 12 ed 00 00 	and    0xed12(%rip),%rax        # 1a0d0 <size_mask>
    b3be:	c3                   	ret    
    b3bf:	90                   	nop

000000000000b3c0 <block_end>:
    b3c0:	f3 0f 1e fa          	endbr64 
    b3c4:	48 8b 07             	mov    (%rdi),%rax
    b3c7:	48 23 05 02 ed 00 00 	and    0xed02(%rip),%rax        # 1a0d0 <size_mask>
    b3ce:	48 01 f8             	add    %rdi,%rax
    b3d1:	c3                   	ret    
    b3d2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b3d9:	00 00 00 
    b3dc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000b3e0 <emalloc_init_with_reserved_mem>:
    b3e0:	f3 0f 1e fa          	endbr64 
    b3e4:	48 83 ec 08          	sub    $0x8,%rsp
    b3e8:	e8 c3 fc ff ff       	call   b0b0 <add_reserve>
    b3ed:	85 c0                	test   %eax,%eax
    b3ef:	75 17                	jne    b408 <emalloc_init_with_reserved_mem+0x28>
    b3f1:	48 c7 05 cc ec 00 00 	movq   $0x10000,0xeccc(%rip)        # 1a0c8 <reserve_size_increment>
    b3f8:	00 00 01 00 
    b3fc:	48 83 c4 08          	add    $0x8,%rsp
    b400:	c3                   	ret    
    b401:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b408:	b8 0c 00 00 00       	mov    $0xc,%eax
    b40d:	48 83 c4 08          	add    $0x8,%rsp
    b411:	c3                   	ret    
    b412:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b419:	00 00 00 
    b41c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000b420 <emalloc>:
    b420:	f3 0f 1e fa          	endbr64 
    b424:	48 8b 05 ad ec 00 00 	mov    0xecad(%rip),%rax        # 1a0d8 <header_size>
    b42b:	53                   	push   %rbx
    b42c:	bb 10 00 00 00       	mov    $0x10,%ebx
    b431:	48 8d 44 38 07       	lea    0x7(%rax,%rdi,1),%rax
    b436:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    b43a:	48 39 d8             	cmp    %rbx,%rax
    b43d:	48 0f 43 d8          	cmovae %rax,%rbx
    b441:	80 3d 70 ed 00 00 00 	cmpb   $0x0,0xed70(%rip)        # 1a1b8 <adding_reserve>
    b448:	74 36                	je     b480 <emalloc+0x60>
    b44a:	48 8b 05 8f f5 00 00 	mov    0xf58f(%rip),%rax        # 1a9e0 <meta_used>
    b451:	48 8d 14 03          	lea    (%rbx,%rax,1),%rdx
    b455:	48 81 fa 00 00 01 00 	cmp    $0x10000,%rdx
    b45c:	0f 87 1c 01 00 00    	ja     b57e <emalloc+0x15e>
    b462:	48 8d 0d 97 f5 00 00 	lea    0xf597(%rip),%rcx        # 1aa00 <meta_reserve>
    b469:	48 83 cb 01          	or     $0x1,%rbx
    b46d:	48 89 15 6c f5 00 00 	mov    %rdx,0xf56c(%rip)        # 1a9e0 <meta_used>
    b474:	48 01 c8             	add    %rcx,%rax
    b477:	48 89 18             	mov    %rbx,(%rax)
    b47a:	48 83 c0 08          	add    $0x8,%rax
    b47e:	5b                   	pop    %rbx
    b47f:	c3                   	ret    
    b480:	48 3d 08 08 00 00    	cmp    $0x808,%rax
    b486:	0f 86 74 01 00 00    	jbe    b600 <emalloc+0x1e0>
    b48c:	48 8b 05 35 ed 00 00 	mov    0xed35(%rip),%rax        # 1a1c8 <large_block_list>
    b493:	48 85 c0             	test   %rax,%rax
    b496:	0f 84 ec 00 00 00    	je     b588 <emalloc+0x168>
    b49c:	45 31 c0             	xor    %r8d,%r8d
    b49f:	90                   	nop
    b4a0:	48 8b 10             	mov    (%rax),%rdx
    b4a3:	48 39 da             	cmp    %rbx,%rdx
    b4a6:	72 3e                	jb     b4e6 <emalloc+0xc6>
    b4a8:	4d 85 c0             	test   %r8,%r8
    b4ab:	74 7b                	je     b528 <emalloc+0x108>
    b4ad:	49 3b 10             	cmp    (%r8),%rdx
    b4b0:	48 8b 48 08          	mov    0x8(%rax),%rcx
    b4b4:	73 20                	jae    b4d6 <emalloc+0xb6>
    b4b6:	48 85 c9             	test   %rcx,%rcx
    b4b9:	0f 84 89 01 00 00    	je     b648 <emalloc+0x228>
    b4bf:	48 8b 11             	mov    (%rcx),%rdx
    b4c2:	49 89 c0             	mov    %rax,%r8
    b4c5:	48 39 da             	cmp    %rbx,%rdx
    b4c8:	72 19                	jb     b4e3 <emalloc+0xc3>
    b4ca:	48 89 c8             	mov    %rcx,%rax
    b4cd:	49 3b 10             	cmp    (%r8),%rdx
    b4d0:	48 8b 48 08          	mov    0x8(%rax),%rcx
    b4d4:	72 e0                	jb     b4b6 <emalloc+0x96>
    b4d6:	48 85 c9             	test   %rcx,%rcx
    b4d9:	74 14                	je     b4ef <emalloc+0xcf>
    b4db:	48 8b 11             	mov    (%rcx),%rdx
    b4de:	48 39 da             	cmp    %rbx,%rdx
    b4e1:	73 e7                	jae    b4ca <emalloc+0xaa>
    b4e3:	48 89 c8             	mov    %rcx,%rax
    b4e6:	48 8b 40 08          	mov    0x8(%rax),%rax
    b4ea:	48 85 c0             	test   %rax,%rax
    b4ed:	75 b1                	jne    b4a0 <emalloc+0x80>
    b4ef:	4d 85 c0             	test   %r8,%r8
    b4f2:	0f 84 90 00 00 00    	je     b588 <emalloc+0x168>
    b4f8:	48 8d 35 c9 ec 00 00 	lea    0xecc9(%rip),%rsi        # 1a1c8 <large_block_list>
    b4ff:	4c 89 c7             	mov    %r8,%rdi
    b502:	e8 e9 fc ff ff       	call   b1f0 <remove_from_list>
    b507:	49 8b 00             	mov    (%r8),%rax
    b50a:	48 8d 53 10          	lea    0x10(%rbx),%rdx
    b50e:	48 39 d0             	cmp    %rdx,%rax
    b511:	0f 83 c9 00 00 00    	jae    b5e0 <emalloc+0x1c0>
    b517:	48 83 cb 01          	or     $0x1,%rbx
    b51b:	49 8d 40 08          	lea    0x8(%r8),%rax
    b51f:	49 89 18             	mov    %rbx,(%r8)
    b522:	5b                   	pop    %rbx
    b523:	c3                   	ret    
    b524:	0f 1f 40 00          	nopl   0x0(%rax)
    b528:	49 89 c0             	mov    %rax,%r8
    b52b:	eb b9                	jmp    b4e6 <emalloc+0xc6>
    b52d:	0f 1f 00             	nopl   (%rax)
    b530:	48 8d bb 1f 00 01 00 	lea    0x1001f(%rbx),%rdi
    b537:	66 31 ff             	xor    %di,%di
    b53a:	e8 71 fb ff ff       	call   b0b0 <add_reserve>
    b53f:	85 c0                	test   %eax,%eax
    b541:	75 3b                	jne    b57e <emalloc+0x15e>
    b543:	48 8b 15 76 ec 00 00 	mov    0xec76(%rip),%rdx        # 1a1c0 <reserve_list>
    b54a:	48 85 d2             	test   %rdx,%rdx
    b54d:	75 12                	jne    b561 <emalloc+0x141>
    b54f:	eb 2d                	jmp    b57e <emalloc+0x15e>
    b551:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b558:	48 8b 52 18          	mov    0x18(%rdx),%rdx
    b55c:	48 85 d2             	test   %rdx,%rdx
    b55f:	74 1d                	je     b57e <emalloc+0x15e>
    b561:	48 8b 42 10          	mov    0x10(%rdx),%rax
    b565:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
    b569:	48 29 c1             	sub    %rax,%rcx
    b56c:	48 39 d9             	cmp    %rbx,%rcx
    b56f:	72 e7                	jb     b558 <emalloc+0x138>
    b571:	48 8d 0c 03          	lea    (%rbx,%rax,1),%rcx
    b575:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
    b579:	48 03 02             	add    (%rdx),%rax
    b57c:	75 4c                	jne    b5ca <emalloc+0x1aa>
    b57e:	31 c0                	xor    %eax,%eax
    b580:	5b                   	pop    %rbx
    b581:	c3                   	ret    
    b582:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b588:	48 8b 15 31 ec 00 00 	mov    0xec31(%rip),%rdx        # 1a1c0 <reserve_list>
    b58f:	48 85 d2             	test   %rdx,%rdx
    b592:	75 15                	jne    b5a9 <emalloc+0x189>
    b594:	eb 9a                	jmp    b530 <emalloc+0x110>
    b596:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b59d:	00 00 00 
    b5a0:	48 8b 52 18          	mov    0x18(%rdx),%rdx
    b5a4:	48 85 d2             	test   %rdx,%rdx
    b5a7:	74 87                	je     b530 <emalloc+0x110>
    b5a9:	48 8b 42 10          	mov    0x10(%rdx),%rax
    b5ad:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
    b5b1:	48 29 c1             	sub    %rax,%rcx
    b5b4:	48 39 d9             	cmp    %rbx,%rcx
    b5b7:	72 e7                	jb     b5a0 <emalloc+0x180>
    b5b9:	48 8d 0c 03          	lea    (%rbx,%rax,1),%rcx
    b5bd:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
    b5c1:	48 03 02             	add    (%rdx),%rax
    b5c4:	0f 84 66 ff ff ff    	je     b530 <emalloc+0x110>
    b5ca:	48 83 cb 01          	or     $0x1,%rbx
    b5ce:	48 83 c0 08          	add    $0x8,%rax
    b5d2:	48 89 58 f8          	mov    %rbx,-0x8(%rax)
    b5d6:	5b                   	pop    %rbx
    b5d7:	c3                   	ret    
    b5d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    b5df:	00 
    b5e0:	49 8d 3c 18          	lea    (%r8,%rbx,1),%rdi
    b5e4:	48 29 d8             	sub    %rbx,%rax
    b5e7:	49 89 18             	mov    %rbx,(%r8)
    b5ea:	48 89 07             	mov    %rax,(%rdi)
    b5ed:	e8 7e fc ff ff       	call   b270 <put_free_block>
    b5f2:	e9 20 ff ff ff       	jmp    b517 <emalloc+0xf7>
    b5f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    b5fe:	00 00 
    b600:	48 8d 43 f0          	lea    -0x10(%rbx),%rax
    b604:	48 8d 15 d5 eb 00 00 	lea    0xebd5(%rip),%rdx        # 1a1e0 <exact_block_list>
    b60b:	48 c1 e8 03          	shr    $0x3,%rax
    b60f:	4c 8b 04 c2          	mov    (%rdx,%rax,8),%r8
    b613:	4d 85 c0             	test   %r8,%r8
    b616:	0f 84 6c ff ff ff    	je     b588 <emalloc+0x168>
    b61c:	49 8b 48 08          	mov    0x8(%r8),%rcx
    b620:	48 89 0c c2          	mov    %rcx,(%rdx,%rax,8)
    b624:	48 85 c9             	test   %rcx,%rcx
    b627:	0f 84 ea fe ff ff    	je     b517 <emalloc+0xf7>
    b62d:	48 85 c0             	test   %rax,%rax
    b630:	0f 84 e1 fe ff ff    	je     b517 <emalloc+0xf7>
    b636:	48 c7 41 10 00 00 00 	movq   $0x0,0x10(%rcx)
    b63d:	00 
    b63e:	e9 d4 fe ff ff       	jmp    b517 <emalloc+0xf7>
    b643:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b648:	49 89 c0             	mov    %rax,%r8
    b64b:	e9 9f fe ff ff       	jmp    b4ef <emalloc+0xcf>

000000000000b650 <can_erealloc>:
    b650:	f3 0f 1e fa          	endbr64 
    b654:	80 3d 5d eb 00 00 00 	cmpb   $0x0,0xeb5d(%rip)        # 1a1b8 <adding_reserve>
    b65b:	b8 01 00 00 00       	mov    $0x1,%eax
    b660:	75 30                	jne    b692 <can_erealloc+0x42>
    b662:	48 2b 3d 6f ea 00 00 	sub    0xea6f(%rip),%rdi        # 1a0d8 <header_size>
    b669:	48 8d 15 90 f3 01 00 	lea    0x1f390(%rip),%rdx        # 2aa00 <mm_user_end>
    b670:	48 39 d7             	cmp    %rdx,%rdi
    b673:	73 1d                	jae    b692 <can_erealloc+0x42>
    b675:	48 8b 05 54 ea 00 00 	mov    0xea54(%rip),%rax        # 1a0d0 <size_mask>
    b67c:	48 23 07             	and    (%rdi),%rax
    b67f:	48 01 c7             	add    %rax,%rdi
    b682:	48 8d 82 00 00 ff ff 	lea    -0x10000(%rdx),%rax
    b689:	48 39 f8             	cmp    %rdi,%rax
    b68c:	0f 93 c0             	setae  %al
    b68f:	0f b6 c0             	movzbl %al,%eax
    b692:	c3                   	ret    
    b693:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b69a:	00 00 00 
    b69d:	0f 1f 00             	nopl   (%rax)

000000000000b6a0 <efree>:
    b6a0:	f3 0f 1e fa          	endbr64 
    b6a4:	48 2b 3d 2d ea 00 00 	sub    0xea2d(%rip),%rdi        # 1a0d8 <header_size>
    b6ab:	41 54                	push   %r12
    b6ad:	48 8d 05 4c f3 01 00 	lea    0x1f34c(%rip),%rax        # 2aa00 <mm_user_end>
    b6b4:	55                   	push   %rbp
    b6b5:	4c 8b 1d 14 ea 00 00 	mov    0xea14(%rip),%r11        # 1a0d0 <size_mask>
    b6bc:	49 89 fc             	mov    %rdi,%r12
    b6bf:	53                   	push   %rbx
    b6c0:	4c 8b 0f             	mov    (%rdi),%r9
    b6c3:	4d 21 d9             	and    %r11,%r9
    b6c6:	48 39 c7             	cmp    %rax,%rdi
    b6c9:	73 14                	jae    b6df <efree+0x3f>
    b6cb:	49 8d 04 39          	lea    (%r9,%rdi,1),%rax
    b6cf:	48 8d 15 2a f3 00 00 	lea    0xf32a(%rip),%rdx        # 1aa00 <meta_reserve>
    b6d6:	48 39 c2             	cmp    %rax,%rdx
    b6d9:	0f 82 f9 00 00 00    	jb     b7d8 <efree+0x138>
    b6df:	4d 85 c9             	test   %r9,%r9
    b6e2:	74 2e                	je     b712 <efree+0x72>
    b6e4:	4c 8b 15 d5 ea 00 00 	mov    0xead5(%rip),%r10        # 1a1c0 <reserve_list>
    b6eb:	4d 85 d2             	test   %r10,%r10
    b6ee:	74 22                	je     b712 <efree+0x72>
    b6f0:	4b 8d 14 21          	lea    (%r9,%r12,1),%rdx
    b6f4:	0f 1f 40 00          	nopl   0x0(%rax)
    b6f8:	49 8b 02             	mov    (%r10),%rax
    b6fb:	49 39 c4             	cmp    %rax,%r12
    b6fe:	72 09                	jb     b709 <efree+0x69>
    b700:	49 03 42 10          	add    0x10(%r10),%rax
    b704:	48 39 d0             	cmp    %rdx,%rax
    b707:	73 17                	jae    b720 <efree+0x80>
    b709:	4d 8b 52 18          	mov    0x18(%r10),%r10
    b70d:	4d 85 d2             	test   %r10,%r10
    b710:	75 e6                	jne    b6f8 <efree+0x58>
    b712:	e8 20 6e 00 00       	call   12537 <abort>
    b717:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    b71e:	00 00 
    b720:	4d 89 0c 24          	mov    %r9,(%r12)
    b724:	49 c7 44 24 08 00 00 	movq   $0x0,0x8(%r12)
    b72b:	00 00 
    b72d:	49 83 f9 10          	cmp    $0x10,%r9
    b731:	0f 87 b9 00 00 00    	ja     b7f0 <efree+0x150>
    b737:	4c 89 e7             	mov    %r12,%rdi
    b73a:	48 8d 1d 9f ea 00 00 	lea    0xea9f(%rip),%rbx        # 1a1e0 <exact_block_list>
    b741:	48 8d 2d 80 ea 00 00 	lea    0xea80(%rip),%rbp        # 1a1c8 <large_block_list>
    b748:	e8 a3 fb ff ff       	call   b2f0 <neighbor_right>
    b74d:	48 89 c7             	mov    %rax,%rdi
    b750:	48 85 c0             	test   %rax,%rax
    b753:	75 3c                	jne    b791 <efree+0xf1>
    b755:	e9 3d 01 00 00       	jmp    b897 <efree+0x1f7>
    b75a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b760:	48 89 de             	mov    %rbx,%rsi
    b763:	48 83 f9 0f          	cmp    $0xf,%rcx
    b767:	76 0b                	jbe    b774 <efree+0xd4>
    b769:	48 8d 71 f0          	lea    -0x10(%rcx),%rsi
    b76d:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
    b771:	48 01 de             	add    %rbx,%rsi
    b774:	e8 77 fa ff ff       	call   b1f0 <remove_from_list>
    b779:	49 03 0c 24          	add    (%r12),%rcx
    b77d:	49 89 0c 24          	mov    %rcx,(%r12)
    b781:	49 89 c9             	mov    %rcx,%r9
    b784:	e8 67 fb ff ff       	call   b2f0 <neighbor_right>
    b789:	48 89 c7             	mov    %rax,%rdi
    b78c:	48 85 c0             	test   %rax,%rax
    b78f:	74 23                	je     b7b4 <efree+0x114>
    b791:	48 8b 0f             	mov    (%rdi),%rcx
    b794:	f6 c1 01             	test   $0x1,%cl
    b797:	75 17                	jne    b7b0 <efree+0x110>
    b799:	4c 21 d9             	and    %r11,%rcx
    b79c:	48 81 f9 08 08 00 00 	cmp    $0x808,%rcx
    b7a3:	76 bb                	jbe    b760 <efree+0xc0>
    b7a5:	48 89 ee             	mov    %rbp,%rsi
    b7a8:	e8 43 fa ff ff       	call   b1f0 <remove_from_list>
    b7ad:	eb ca                	jmp    b779 <efree+0xd9>
    b7af:	90                   	nop
    b7b0:	4d 8b 0c 24          	mov    (%r12),%r9
    b7b4:	4d 21 cb             	and    %r9,%r11
    b7b7:	49 8b 1a             	mov    (%r10),%rbx
    b7ba:	4c 89 e0             	mov    %r12,%rax
    b7bd:	48 29 d8             	sub    %rbx,%rax
    b7c0:	49 01 c3             	add    %rax,%r11
    b7c3:	4d 3b 5a 10          	cmp    0x10(%r10),%r11
    b7c7:	74 37                	je     b800 <efree+0x160>
    b7c9:	5b                   	pop    %rbx
    b7ca:	4c 89 e7             	mov    %r12,%rdi
    b7cd:	5d                   	pop    %rbp
    b7ce:	41 5c                	pop    %r12
    b7d0:	e9 9b fa ff ff       	jmp    b270 <put_free_block>
    b7d5:	0f 1f 00             	nopl   (%rax)
    b7d8:	80 3d d9 e9 00 00 00 	cmpb   $0x0,0xe9d9(%rip)        # 1a1b8 <adding_reserve>
    b7df:	0f 84 2d ff ff ff    	je     b712 <efree+0x72>
    b7e5:	5b                   	pop    %rbx
    b7e6:	5d                   	pop    %rbp
    b7e7:	41 5c                	pop    %r12
    b7e9:	c3                   	ret    
    b7ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b7f0:	49 c7 44 24 10 00 00 	movq   $0x0,0x10(%r12)
    b7f7:	00 00 
    b7f9:	e9 39 ff ff ff       	jmp    b737 <efree+0x97>
    b7fe:	66 90                	xchg   %ax,%ax
    b800:	48 8b 0d c1 e9 00 00 	mov    0xe9c1(%rip),%rcx        # 1a1c8 <large_block_list>
    b807:	4d 29 cb             	sub    %r9,%r11
    b80a:	4d 89 5a 10          	mov    %r11,0x10(%r10)
    b80e:	4e 8d 04 1b          	lea    (%rbx,%r11,1),%r8
    b812:	48 85 c9             	test   %rcx,%rcx
    b815:	75 12                	jne    b829 <efree+0x189>
    b817:	eb 6d                	jmp    b886 <efree+0x1e6>
    b819:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b820:	48 8b 49 08          	mov    0x8(%rcx),%rcx
    b824:	48 85 c9             	test   %rcx,%rcx
    b827:	74 5d                	je     b886 <efree+0x1e6>
    b829:	48 8b 01             	mov    (%rcx),%rax
    b82c:	48 01 c8             	add    %rcx,%rax
    b82f:	49 39 c0             	cmp    %rax,%r8
    b832:	75 ec                	jne    b820 <efree+0x180>
    b834:	48 8d 35 8d e9 00 00 	lea    0xe98d(%rip),%rsi        # 1a1c8 <large_block_list>
    b83b:	48 89 cf             	mov    %rcx,%rdi
    b83e:	e8 ad f9 ff ff       	call   b1f0 <remove_from_list>
    b843:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b848:	4c 2b 01             	sub    (%rcx),%r8
    b84b:	48 8b 0d 76 e9 00 00 	mov    0xe976(%rip),%rcx        # 1a1c8 <large_block_list>
    b852:	48 85 c9             	test   %rcx,%rcx
    b855:	75 12                	jne    b869 <efree+0x1c9>
    b857:	eb 36                	jmp    b88f <efree+0x1ef>
    b859:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b860:	48 8b 49 08          	mov    0x8(%rcx),%rcx
    b864:	48 85 c9             	test   %rcx,%rcx
    b867:	74 17                	je     b880 <efree+0x1e0>
    b869:	48 8b 01             	mov    (%rcx),%rax
    b86c:	48 01 c8             	add    %rcx,%rax
    b86f:	49 39 c0             	cmp    %rax,%r8
    b872:	75 ec                	jne    b860 <efree+0x1c0>
    b874:	48 89 cf             	mov    %rcx,%rdi
    b877:	e8 74 f9 ff ff       	call   b1f0 <remove_from_list>
    b87c:	eb ca                	jmp    b848 <efree+0x1a8>
    b87e:	66 90                	xchg   %ax,%ax
    b880:	4d 89 c3             	mov    %r8,%r11
    b883:	49 29 db             	sub    %rbx,%r11
    b886:	4d 89 5a 10          	mov    %r11,0x10(%r10)
    b88a:	5b                   	pop    %rbx
    b88b:	5d                   	pop    %rbp
    b88c:	41 5c                	pop    %r12
    b88e:	c3                   	ret    
    b88f:	49 29 d8             	sub    %rbx,%r8
    b892:	4d 89 c3             	mov    %r8,%r11
    b895:	eb ef                	jmp    b886 <efree+0x1e6>
    b897:	4d 89 cb             	mov    %r9,%r11
    b89a:	e9 18 ff ff ff       	jmp    b7b7 <efree+0x117>
    b89f:	90                   	nop

000000000000b8a0 <mm_init_ema>:
    b8a0:	f3 0f 1e fa          	endbr64 
    b8a4:	41 57                	push   %r15
    b8a6:	4d 89 cf             	mov    %r9,%r15
    b8a9:	41 56                	push   %r14
    b8ab:	4d 89 c6             	mov    %r8,%r14
    b8ae:	41 55                	push   %r13
    b8b0:	41 89 cd             	mov    %ecx,%r13d
    b8b3:	41 54                	push   %r12
    b8b5:	41 89 d4             	mov    %edx,%r12d
    b8b8:	55                   	push   %rbp
    b8b9:	48 89 f5             	mov    %rsi,%rbp
    b8bc:	53                   	push   %rbx
    b8bd:	48 89 fb             	mov    %rdi,%rbx
    b8c0:	48 83 ec 18          	sub    $0x18,%rsp
    b8c4:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    b8cb:	00 00 
    b8cd:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    b8d2:	31 c0                	xor    %eax,%eax
    b8d4:	e8 47 a1 ff ff       	call   5a20 <sgx_mm_is_within_enclave>
    b8d9:	89 c2                	mov    %eax,%edx
    b8db:	b8 0d 00 00 00       	mov    $0xd,%eax
    b8e0:	84 d2                	test   %dl,%dl
    b8e2:	0f 84 7d 00 00 00    	je     b965 <mm_init_ema+0xc5>
    b8e8:	41 f7 c4 7e f8 ff ff 	test   $0xfffff87e,%r12d
    b8ef:	75 6f                	jne    b960 <mm_init_ema+0xc0>
    b8f1:	41 83 fd 07          	cmp    $0x7,%r13d
    b8f5:	77 69                	ja     b960 <mm_init_ema+0xc0>
    b8f7:	48 89 e1             	mov    %rsp,%rcx
    b8fa:	48 89 ea             	mov    %rbp,%rdx
    b8fd:	48 8d 3d 64 e7 00 00 	lea    0xe764(%rip),%rdi        # 1a068 <g_rts_ema_root>
    b904:	48 89 de             	mov    %rbx,%rsi
    b907:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    b90e:	00 
    b90f:	e8 2c e6 ff ff       	call   9f40 <find_free_region_at>
    b914:	84 c0                	test   %al,%al
    b916:	74 48                	je     b960 <mm_init_ema+0xc0>
    b918:	48 83 ec 08          	sub    $0x8,%rsp
    b91c:	44 89 e1             	mov    %r12d,%ecx
    b91f:	41 0f b6 d4          	movzbl %r12b,%edx
    b923:	48 89 df             	mov    %rbx,%rdi
    b926:	ff 74 24 08          	push   0x8(%rsp)
    b92a:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    b930:	4d 89 f9             	mov    %r15,%r9
    b933:	4d 89 f0             	mov    %r14,%r8
    b936:	44 09 e9             	or     %r13d,%ecx
    b939:	48 89 ee             	mov    %rbp,%rsi
    b93c:	48 63 c9             	movslq %ecx,%rcx
    b93f:	e8 dc e6 ff ff       	call   a020 <ema_new>
    b944:	48 89 c7             	mov    %rax,%rdi
    b947:	58                   	pop    %rax
    b948:	5a                   	pop    %rdx
    b949:	48 85 ff             	test   %rdi,%rdi
    b94c:	74 3a                	je     b988 <mm_init_ema+0xe8>
    b94e:	31 c0                	xor    %eax,%eax
    b950:	41 83 e4 01          	and    $0x1,%r12d
    b954:	75 0f                	jne    b965 <mm_init_ema+0xc5>
    b956:	e8 55 de ff ff       	call   97b0 <ema_set_eaccept_full>
    b95b:	eb 08                	jmp    b965 <mm_init_ema+0xc5>
    b95d:	0f 1f 00             	nopl   (%rax)
    b960:	b8 16 00 00 00       	mov    $0x16,%eax
    b965:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    b96a:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    b971:	00 00 
    b973:	75 1a                	jne    b98f <mm_init_ema+0xef>
    b975:	48 83 c4 18          	add    $0x18,%rsp
    b979:	5b                   	pop    %rbx
    b97a:	5d                   	pop    %rbp
    b97b:	41 5c                	pop    %r12
    b97d:	41 5d                	pop    %r13
    b97f:	41 5e                	pop    %r14
    b981:	41 5f                	pop    %r15
    b983:	c3                   	ret    
    b984:	0f 1f 40 00          	nopl   0x0(%rax)
    b988:	b8 0c 00 00 00       	mov    $0xc,%eax
    b98d:	eb d6                	jmp    b965 <mm_init_ema+0xc5>
    b98f:	e8 5c 50 00 00       	call   109f0 <__stack_chk_fail>
    b994:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b99b:	00 00 00 
    b99e:	66 90                	xchg   %ax,%ax

000000000000b9a0 <mm_alloc>:
    b9a0:	f3 0f 1e fa          	endbr64 
    b9a4:	48 83 ec 10          	sub    $0x10,%rsp
    b9a8:	48 8d 05 b9 e6 00 00 	lea    0xe6b9(%rip),%rax        # 1a068 <g_rts_ema_root>
    b9af:	50                   	push   %rax
    b9b0:	e8 2b 02 00 00       	call   bbe0 <mm_alloc_internal>
    b9b5:	48 83 c4 18          	add    $0x18,%rsp
    b9b9:	c3                   	ret    
    b9ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000b9c0 <mm_commit>:
    b9c0:	f3 0f 1e fa          	endbr64 
    b9c4:	48 8d 15 9d e6 00 00 	lea    0xe69d(%rip),%rdx        # 1a068 <g_rts_ema_root>
    b9cb:	e9 40 05 00 00       	jmp    bf10 <mm_commit_internal>

000000000000b9d0 <mm_uncommit>:
    b9d0:	f3 0f 1e fa          	endbr64 
    b9d4:	48 8d 15 8d e6 00 00 	lea    0xe68d(%rip),%rdx        # 1a068 <g_rts_ema_root>
    b9db:	e9 00 06 00 00       	jmp    bfe0 <mm_uncommit_internal>

000000000000b9e0 <mm_dealloc>:
    b9e0:	f3 0f 1e fa          	endbr64 
    b9e4:	48 8d 15 7d e6 00 00 	lea    0xe67d(%rip),%rdx        # 1a068 <g_rts_ema_root>
    b9eb:	e9 c0 06 00 00       	jmp    c0b0 <mm_dealloc_internal>

000000000000b9f0 <mm_commit_data>:
    b9f0:	f3 0f 1e fa          	endbr64 
    b9f4:	4c 8d 05 6d e6 00 00 	lea    0xe66d(%rip),%r8        # 1a068 <g_rts_ema_root>
    b9fb:	e9 80 07 00 00       	jmp    c180 <mm_commit_data_internal>

000000000000ba00 <mm_modify_type>:
    ba00:	f3 0f 1e fa          	endbr64 
    ba04:	48 8d 0d 5d e6 00 00 	lea    0xe65d(%rip),%rcx        # 1a068 <g_rts_ema_root>
    ba0b:	e9 90 08 00 00       	jmp    c2a0 <mm_modify_type_internal>

000000000000ba10 <mm_modify_permissions>:
    ba10:	f3 0f 1e fa          	endbr64 
    ba14:	48 8d 0d 4d e6 00 00 	lea    0xe64d(%rip),%rcx        # 1a068 <g_rts_ema_root>
    ba1b:	e9 40 0a 00 00       	jmp    c460 <mm_modify_permissions_internal>

000000000000ba20 <sgx_mm_enclave_pfhandler>:
    ba20:	f3 0f 1e fa          	endbr64 
    ba24:	41 56                	push   %r14
    ba26:	41 55                	push   %r13
    ba28:	49 89 fd             	mov    %rdi,%r13
    ba2b:	41 54                	push   %r12
    ba2d:	55                   	push   %rbp
    ba2e:	53                   	push   %rbx
    ba2f:	31 db                	xor    %ebx,%ebx
    ba31:	48 83 ec 10          	sub    $0x10,%rsp
    ba35:	4c 8b 37             	mov    (%rdi),%r14
    ba38:	48 8b 3d d1 ef 01 00 	mov    0x1efd1(%rip),%rdi        # 2aa10 <mm_lock>
    ba3f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    ba46:	00 00 
    ba48:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    ba4d:	31 c0                	xor    %eax,%eax
    ba4f:	e8 6c 9f ff ff       	call   59c0 <sgx_mm_mutex_lock>
    ba54:	85 c0                	test   %eax,%eax
    ba56:	74 28                	je     ba80 <sgx_mm_enclave_pfhandler+0x60>
    ba58:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    ba5d:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    ba64:	00 00 
    ba66:	0f 85 50 01 00 00    	jne    bbbc <sgx_mm_enclave_pfhandler+0x19c>
    ba6c:	48 83 c4 10          	add    $0x10,%rsp
    ba70:	89 d8                	mov    %ebx,%eax
    ba72:	5b                   	pop    %rbx
    ba73:	5d                   	pop    %rbp
    ba74:	41 5c                	pop    %r12
    ba76:	41 5d                	pop    %r13
    ba78:	41 5e                	pop    %r14
    ba7a:	c3                   	ret    
    ba7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    ba80:	49 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%r14
    ba87:	48 8d 3d 72 e5 00 00 	lea    0xe572(%rip),%rdi        # 1a000 <g_user_ema_root>
    ba8e:	89 c3                	mov    %eax,%ebx
    ba90:	4c 89 f6             	mov    %r14,%rsi
    ba93:	e8 48 de ff ff       	call   98e0 <search_ema>
    ba98:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    ba9f:	00 
    baa0:	48 89 c5             	mov    %rax,%rbp
    baa3:	48 85 c0             	test   %rax,%rax
    baa6:	0f 84 b4 00 00 00    	je     bb60 <sgx_mm_enclave_pfhandler+0x140>
    baac:	48 89 e6             	mov    %rsp,%rsi
    baaf:	48 89 ef             	mov    %rbp,%rdi
    bab2:	e8 d9 dc ff ff       	call   9790 <ema_fault_handler>
    bab7:	49 89 c4             	mov    %rax,%r12
    baba:	48 85 c0             	test   %rax,%rax
    babd:	74 21                	je     bae0 <sgx_mm_enclave_pfhandler+0xc0>
    babf:	48 8b 3d 4a ef 01 00 	mov    0x1ef4a(%rip),%rdi        # 2aa10 <mm_lock>
    bac6:	e8 15 9f ff ff       	call   59e0 <sgx_mm_mutex_unlock>
    bacb:	48 8b 34 24          	mov    (%rsp),%rsi
    bacf:	4c 89 ef             	mov    %r13,%rdi
    bad2:	41 ff d4             	call   *%r12
    bad5:	89 c3                	mov    %eax,%ebx
    bad7:	e9 7c ff ff ff       	jmp    ba58 <sgx_mm_enclave_pfhandler+0x38>
    badc:	0f 1f 40 00          	nopl   0x0(%rax)
    bae0:	4c 89 f6             	mov    %r14,%rsi
    bae3:	48 89 ef             	mov    %rbp,%rdi
    bae6:	e8 c5 dd ff ff       	call   98b0 <ema_page_committed>
    baeb:	84 c0                	test   %al,%al
    baed:	74 31                	je     bb20 <sgx_mm_enclave_pfhandler+0x100>
    baef:	41 f6 45 08 02       	testb  $0x2,0x8(%r13)
    baf4:	0f 84 86 00 00 00    	je     bb80 <sgx_mm_enclave_pfhandler+0x160>
    bafa:	48 89 ef             	mov    %rbp,%rdi
    bafd:	e8 7e dc ff ff       	call   9780 <get_ema_si_flags>
    bb02:	48 d1 e8             	shr    %rax
    bb05:	48 89 c3             	mov    %rax,%rbx
    bb08:	83 e3 01             	and    $0x1,%ebx
    bb0b:	f7 db                	neg    %ebx
    bb0d:	48 8b 3d fc ee 01 00 	mov    0x1eefc(%rip),%rdi        # 2aa10 <mm_lock>
    bb14:	e8 c7 9e ff ff       	call   59e0 <sgx_mm_mutex_unlock>
    bb19:	e9 3a ff ff ff       	jmp    ba58 <sgx_mm_enclave_pfhandler+0x38>
    bb1e:	66 90                	xchg   %ax,%ax
    bb20:	48 89 ef             	mov    %rbp,%rdi
    bb23:	e8 48 dc ff ff       	call   9770 <get_ema_alloc_flags>
    bb28:	a8 04                	test   $0x4,%al
    bb2a:	0f 84 91 00 00 00    	je     bbc1 <sgx_mm_enclave_pfhandler+0x1a1>
    bb30:	41 f6 45 08 02       	testb  $0x2,0x8(%r13)
    bb35:	74 69                	je     bba0 <sgx_mm_enclave_pfhandler+0x180>
    bb37:	48 89 ef             	mov    %rbp,%rdi
    bb3a:	e8 41 dc ff ff       	call   9780 <get_ema_si_flags>
    bb3f:	a8 02                	test   $0x2,%al
    bb41:	74 ca                	je     bb0d <sgx_mm_enclave_pfhandler+0xed>
    bb43:	49 8d 96 00 10 00 00 	lea    0x1000(%r14),%rdx
    bb4a:	4c 89 f6             	mov    %r14,%rsi
    bb4d:	48 89 ef             	mov    %rbp,%rdi
    bb50:	e8 4b e7 ff ff       	call   a2a0 <ema_do_commit>
    bb55:	85 c0                	test   %eax,%eax
    bb57:	75 68                	jne    bbc1 <sgx_mm_enclave_pfhandler+0x1a1>
    bb59:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
    bb5e:	eb ad                	jmp    bb0d <sgx_mm_enclave_pfhandler+0xed>
    bb60:	4c 89 f6             	mov    %r14,%rsi
    bb63:	48 8d 3d fe e4 00 00 	lea    0xe4fe(%rip),%rdi        # 1a068 <g_rts_ema_root>
    bb6a:	e8 71 dd ff ff       	call   98e0 <search_ema>
    bb6f:	48 89 c5             	mov    %rax,%rbp
    bb72:	48 85 c0             	test   %rax,%rax
    bb75:	0f 85 31 ff ff ff    	jne    baac <sgx_mm_enclave_pfhandler+0x8c>
    bb7b:	eb 90                	jmp    bb0d <sgx_mm_enclave_pfhandler+0xed>
    bb7d:	0f 1f 00             	nopl   (%rax)
    bb80:	48 89 ef             	mov    %rbp,%rdi
    bb83:	e8 f8 db ff ff       	call   9780 <get_ema_si_flags>
    bb88:	a8 01                	test   $0x1,%al
    bb8a:	0f 84 7d ff ff ff    	je     bb0d <sgx_mm_enclave_pfhandler+0xed>
    bb90:	41 f6 45 08 02       	testb  $0x2,0x8(%r13)
    bb95:	74 c2                	je     bb59 <sgx_mm_enclave_pfhandler+0x139>
    bb97:	e9 5e ff ff ff       	jmp    bafa <sgx_mm_enclave_pfhandler+0xda>
    bb9c:	0f 1f 40 00          	nopl   0x0(%rax)
    bba0:	48 89 ef             	mov    %rbp,%rdi
    bba3:	e8 d8 db ff ff       	call   9780 <get_ema_si_flags>
    bba8:	a8 01                	test   $0x1,%al
    bbaa:	0f 84 5d ff ff ff    	je     bb0d <sgx_mm_enclave_pfhandler+0xed>
    bbb0:	41 f6 45 08 02       	testb  $0x2,0x8(%r13)
    bbb5:	74 8c                	je     bb43 <sgx_mm_enclave_pfhandler+0x123>
    bbb7:	e9 7b ff ff ff       	jmp    bb37 <sgx_mm_enclave_pfhandler+0x117>
    bbbc:	e8 2f 4e 00 00       	call   109f0 <__stack_chk_fail>
    bbc1:	48 8b 3d 48 ee 01 00 	mov    0x1ee48(%rip),%rdi        # 2aa10 <mm_lock>
    bbc8:	e8 13 9e ff ff       	call   59e0 <sgx_mm_mutex_unlock>
    bbcd:	e8 65 69 00 00       	call   12537 <abort>
    bbd2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    bbd9:	00 00 00 
    bbdc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000bbe0 <mm_alloc_internal>:
    bbe0:	f3 0f 1e fa          	endbr64 
    bbe4:	41 57                	push   %r15
    bbe6:	41 56                	push   %r14
    bbe8:	41 55                	push   %r13
    bbea:	41 54                	push   %r12
    bbec:	55                   	push   %rbp
    bbed:	53                   	push   %rbx
    bbee:	48 83 ec 68          	sub    $0x68,%rsp
    bbf2:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    bbf9:	00 00 
    bbfb:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    bc00:	31 c0                	xor    %eax,%eax
    bc02:	4c 8b b4 24 a0 00 00 	mov    0xa0(%rsp),%r14
    bc09:	00 
    bc0a:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
    bc11:	00 00 
    bc13:	f6 c2 07             	test   $0x7,%dl
    bc16:	74 60                	je     bc78 <mm_alloc_internal+0x98>
    bc18:	4c 89 c5             	mov    %r8,%rbp
    bc1b:	89 d0                	mov    %edx,%eax
    bc1d:	41 89 d0             	mov    %edx,%r8d
    bc20:	25 00 ff 00 00       	and    $0xff00,%eax
    bc25:	41 81 e0 00 ff 00 00 	and    $0xff00,%r8d
    bc2c:	f6 c6 f8             	test   $0xf8,%dh
    bc2f:	75 47                	jne    bc78 <mm_alloc_internal+0x98>
    bc31:	85 c0                	test   %eax,%eax
    bc33:	b8 00 02 00 00       	mov    $0x200,%eax
    bc38:	49 89 f7             	mov    %rsi,%r15
    bc3b:	4c 0f 44 c0          	cmove  %rax,%r8
    bc3f:	f7 c6 ff 0f 00 00    	test   $0xfff,%esi
    bc45:	75 31                	jne    bc78 <mm_alloc_internal+0x98>
    bc47:	48 89 cb             	mov    %rcx,%rbx
    bc4a:	89 d1                	mov    %edx,%ecx
    bc4c:	4d 89 cc             	mov    %r9,%r12
    bc4f:	c1 e9 18             	shr    $0x18,%ecx
    bc52:	74 54                	je     bca8 <mm_alloc_internal+0xc8>
    bc54:	83 f9 0b             	cmp    $0xb,%ecx
    bc57:	76 1f                	jbe    bc78 <mm_alloc_internal+0x98>
    bc59:	b8 01 00 00 00       	mov    $0x1,%eax
    bc5e:	49 c7 c5 ff ff ff ff 	mov    $0xffffffffffffffff,%r13
    bc65:	48 d3 e0             	shl    %cl,%rax
    bc68:	49 d3 e5             	shl    %cl,%r13
    bc6b:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    bc70:	49 f7 d5             	not    %r13
    bc73:	eb 42                	jmp    bcb7 <mm_alloc_internal+0xd7>
    bc75:	0f 1f 00             	nopl   (%rax)
    bc78:	b9 16 00 00 00       	mov    $0x16,%ecx
    bc7d:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
    bc82:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    bc89:	00 00 
    bc8b:	0f 85 41 02 00 00    	jne    bed2 <mm_alloc_internal+0x2f2>
    bc91:	48 83 c4 68          	add    $0x68,%rsp
    bc95:	89 c8                	mov    %ecx,%eax
    bc97:	5b                   	pop    %rbx
    bc98:	5d                   	pop    %rbp
    bc99:	41 5c                	pop    %r12
    bc9b:	41 5d                	pop    %r13
    bc9d:	41 5e                	pop    %r14
    bc9f:	41 5f                	pop    %r15
    bca1:	c3                   	ret    
    bca2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    bca8:	48 c7 44 24 08 00 10 	movq   $0x1000,0x8(%rsp)
    bcaf:	00 00 
    bcb1:	41 bd ff 0f 00 00    	mov    $0xfff,%r13d
    bcb7:	48 89 7c 24 38       	mov    %rdi,0x38(%rsp)
    bcbc:	49 21 fd             	and    %rdi,%r13
    bcbf:	75 b7                	jne    bc78 <mm_alloc_internal+0x98>
    bcc1:	48 85 ff             	test   %rdi,%rdi
    bcc4:	74 23                	je     bce9 <mm_alloc_internal+0x109>
    bcc6:	4c 89 fe             	mov    %r15,%rsi
    bcc9:	89 54 24 1c          	mov    %edx,0x1c(%rsp)
    bccd:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
    bcd2:	e8 49 9d ff ff       	call   5a20 <sgx_mm_is_within_enclave>
    bcd7:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
    bcdc:	8b 54 24 1c          	mov    0x1c(%rsp),%edx
    bce0:	b9 0d 00 00 00       	mov    $0xd,%ecx
    bce5:	84 c0                	test   %al,%al
    bce7:	74 94                	je     bc7d <mm_alloc_internal+0x9d>
    bce9:	48 8b 3d 20 ed 01 00 	mov    0x1ed20(%rip),%rdi        # 2aa10 <mm_lock>
    bcf0:	89 54 24 1c          	mov    %edx,0x1c(%rsp)
    bcf4:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
    bcf9:	e8 c2 9c ff ff       	call   59c0 <sgx_mm_mutex_lock>
    bcfe:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
    bd03:	8b 54 24 1c          	mov    0x1c(%rsp),%edx
    bd07:	b9 0e 00 00 00       	mov    $0xe,%ecx
    bd0c:	85 c0                	test   %eax,%eax
    bd0e:	0f 85 69 ff ff ff    	jne    bc7d <mm_alloc_internal+0x9d>
    bd14:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
    bd19:	49 83 c8 03          	or     $0x3,%r8
    bd1d:	0f b6 c2             	movzbl %dl,%eax
    bd20:	f6 c2 01             	test   $0x1,%dl
    bd23:	89 44 24 10          	mov    %eax,0x10(%rsp)
    bd27:	4d 0f 44 e8          	cmove  %r8,%r13
    bd2b:	48 85 f6             	test   %rsi,%rsi
    bd2e:	0f 85 9c 00 00 00    	jne    bdd0 <mm_alloc_internal+0x1f0>
    bd34:	4c 8d 44 24 40       	lea    0x40(%rsp),%r8
    bd39:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    bd3e:	48 8d 4c 24 38       	lea    0x38(%rsp),%rcx
    bd43:	4c 89 fe             	mov    %r15,%rsi
    bd46:	4c 89 f7             	mov    %r14,%rdi
    bd49:	e8 e2 de ff ff       	call   9c30 <find_free_region>
    bd4e:	84 c0                	test   %al,%al
    bd50:	0f 84 0a 01 00 00    	je     be60 <mm_alloc_internal+0x280>
    bd56:	48 83 ec 08          	sub    $0x8,%rsp
    bd5a:	49 89 e9             	mov    %rbp,%r9
    bd5d:	49 89 d8             	mov    %rbx,%r8
    bd60:	4c 89 e9             	mov    %r13,%rcx
    bd63:	ff 74 24 48          	push   0x48(%rsp)
    bd67:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
    bd6c:	4c 89 fe             	mov    %r15,%rsi
    bd6f:	8b 54 24 20          	mov    0x20(%rsp),%edx
    bd73:	e8 a8 e2 ff ff       	call   a020 <ema_new>
    bd78:	48 89 c7             	mov    %rax,%rdi
    bd7b:	58                   	pop    %rax
    bd7c:	5a                   	pop    %rdx
    bd7d:	48 85 ff             	test   %rdi,%rdi
    bd80:	0f 84 da 00 00 00    	je     be60 <mm_alloc_internal+0x280>
    bd86:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    bd8b:	e8 30 f2 ff ff       	call   afc0 <ema_do_alloc>
    bd90:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    bd95:	85 c0                	test   %eax,%eax
    bd97:	89 c1                	mov    %eax,%ecx
    bd99:	0f 85 21 01 00 00    	jne    bec0 <mm_alloc_internal+0x2e0>
    bd9f:	4d 85 e4             	test   %r12,%r12
    bda2:	74 09                	je     bdad <mm_alloc_internal+0x1cd>
    bda4:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    bda9:	49 89 04 24          	mov    %rax,(%r12)
    bdad:	48 8b 3d 5c ec 01 00 	mov    0x1ec5c(%rip),%rdi        # 2aa10 <mm_lock>
    bdb4:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
    bdb8:	e8 23 9c ff ff       	call   59e0 <sgx_mm_mutex_unlock>
    bdbd:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
    bdc1:	e9 b7 fe ff ff       	jmp    bc7d <mm_alloc_internal+0x9d>
    bdc6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    bdcd:	00 00 00 
    bdd0:	83 e2 40             	and    $0x40,%edx
    bdd3:	4a 8d 04 3e          	lea    (%rsi,%r15,1),%rax
    bdd7:	48 8d 4c 24 48       	lea    0x48(%rsp),%rcx
    bddc:	4c 89 f7             	mov    %r14,%rdi
    bddf:	89 54 24 1c          	mov    %edx,0x1c(%rsp)
    bde3:	4c 8d 44 24 50       	lea    0x50(%rsp),%r8
    bde8:	48 89 c2             	mov    %rax,%rdx
    bdeb:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
    bdf2:	00 00 
    bdf4:	48 c7 44 24 50 00 00 	movq   $0x0,0x50(%rsp)
    bdfb:	00 00 
    bdfd:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    be02:	48 89 74 24 28       	mov    %rsi,0x28(%rsp)
    be07:	e8 64 db ff ff       	call   9970 <search_ema_range>
    be0c:	85 c0                	test   %eax,%eax
    be0e:	75 60                	jne    be70 <mm_alloc_internal+0x290>
    be10:	55                   	push   %rbp
    be11:	4d 89 e9             	mov    %r13,%r9
    be14:	53                   	push   %rbx
    be15:	48 8b 7c 24 58       	mov    0x58(%rsp),%rdi
    be1a:	44 8b 44 24 20       	mov    0x20(%rsp),%r8d
    be1f:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
    be24:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
    be29:	48 8b 74 24 60       	mov    0x60(%rsp),%rsi
    be2e:	e8 3d f0 ff ff       	call   ae70 <ema_realloc_from_reserve_range>
    be33:	41 58                	pop    %r8
    be35:	41 59                	pop    %r9
    be37:	48 89 c7             	mov    %rax,%rdi
    be3a:	48 85 c0             	test   %rax,%rax
    be3d:	0f 85 43 ff ff ff    	jne    bd86 <mm_alloc_internal+0x1a6>
    be43:	8b 7c 24 1c          	mov    0x1c(%rsp),%edi
    be47:	b9 11 00 00 00       	mov    $0x11,%ecx
    be4c:	85 ff                	test   %edi,%edi
    be4e:	0f 84 e0 fe ff ff    	je     bd34 <mm_alloc_internal+0x154>
    be54:	e9 54 ff ff ff       	jmp    bdad <mm_alloc_internal+0x1cd>
    be59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    be60:	b9 0c 00 00 00       	mov    $0xc,%ecx
    be65:	e9 43 ff ff ff       	jmp    bdad <mm_alloc_internal+0x1cd>
    be6a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    be70:	4c 8d 44 24 40       	lea    0x40(%rsp),%r8
    be75:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
    be7a:	4c 89 fa             	mov    %r15,%rdx
    be7d:	4c 89 f7             	mov    %r14,%rdi
    be80:	4c 89 c1             	mov    %r8,%rcx
    be83:	4c 89 44 24 20       	mov    %r8,0x20(%rsp)
    be88:	e8 b3 e0 ff ff       	call   9f40 <find_free_region_at>
    be8d:	3c 01                	cmp    $0x1,%al
    be8f:	0f 84 c1 fe ff ff    	je     bd56 <mm_alloc_internal+0x176>
    be95:	8b 74 24 1c          	mov    0x1c(%rsp),%esi
    be99:	b9 01 00 00 00       	mov    $0x1,%ecx
    be9e:	85 f6                	test   %esi,%esi
    bea0:	0f 85 07 ff ff ff    	jne    bdad <mm_alloc_internal+0x1cd>
    bea6:	84 c0                	test   %al,%al
    bea8:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
    bead:	0f 84 86 fe ff ff    	je     bd39 <mm_alloc_internal+0x159>
    beb3:	e9 9e fe ff ff       	jmp    bd56 <mm_alloc_internal+0x176>
    beb8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    bebf:	00 
    bec0:	89 44 24 08          	mov    %eax,0x8(%rsp)
    bec4:	e8 67 e2 ff ff       	call   a130 <ema_destroy>
    bec9:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
    becd:	e9 db fe ff ff       	jmp    bdad <mm_alloc_internal+0x1cd>
    bed2:	e8 19 4b 00 00       	call   109f0 <__stack_chk_fail>
    bed7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    bede:	00 00 

000000000000bee0 <sgx_mm_alloc>:
    bee0:	f3 0f 1e fa          	endbr64 
    bee4:	f6 c2 80             	test   $0x80,%dl
    bee7:	75 17                	jne    bf00 <sgx_mm_alloc+0x20>
    bee9:	48 83 ec 10          	sub    $0x10,%rsp
    beed:	48 8d 05 0c e1 00 00 	lea    0xe10c(%rip),%rax        # 1a000 <g_user_ema_root>
    bef4:	50                   	push   %rax
    bef5:	e8 e6 fc ff ff       	call   bbe0 <mm_alloc_internal>
    befa:	48 83 c4 18          	add    $0x18,%rsp
    befe:	c3                   	ret    
    beff:	90                   	nop
    bf00:	b8 16 00 00 00       	mov    $0x16,%eax
    bf05:	c3                   	ret    
    bf06:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    bf0d:	00 00 00 

000000000000bf10 <mm_commit_internal>:
    bf10:	f3 0f 1e fa          	endbr64 
    bf14:	41 55                	push   %r13
    bf16:	49 89 d5             	mov    %rdx,%r13
    bf19:	41 54                	push   %r12
    bf1b:	49 89 fc             	mov    %rdi,%r12
    bf1e:	55                   	push   %rbp
    bf1f:	48 89 f5             	mov    %rsi,%rbp
    bf22:	53                   	push   %rbx
    bf23:	bb 0e 00 00 00       	mov    $0xe,%ebx
    bf28:	48 83 ec 28          	sub    $0x28,%rsp
    bf2c:	48 8b 3d dd ea 01 00 	mov    0x1eadd(%rip),%rdi        # 2aa10 <mm_lock>
    bf33:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    bf3a:	00 00 
    bf3c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    bf41:	31 c0                	xor    %eax,%eax
    bf43:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    bf4a:	00 00 
    bf4c:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    bf53:	00 00 
    bf55:	e8 66 9a ff ff       	call   59c0 <sgx_mm_mutex_lock>
    bf5a:	85 c0                	test   %eax,%eax
    bf5c:	75 47                	jne    bfa5 <mm_commit_internal+0x95>
    bf5e:	4c 01 e5             	add    %r12,%rbp
    bf61:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    bf66:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    bf6b:	4c 89 e6             	mov    %r12,%rsi
    bf6e:	48 89 ea             	mov    %rbp,%rdx
    bf71:	4c 89 ef             	mov    %r13,%rdi
    bf74:	bb 16 00 00 00       	mov    $0x16,%ebx
    bf79:	e8 f2 d9 ff ff       	call   9970 <search_ema_range>
    bf7e:	85 c0                	test   %eax,%eax
    bf80:	78 17                	js     bf99 <mm_commit_internal+0x89>
    bf82:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    bf87:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    bf8c:	48 89 e9             	mov    %rbp,%rcx
    bf8f:	4c 89 e2             	mov    %r12,%rdx
    bf92:	e8 f9 e3 ff ff       	call   a390 <ema_do_commit_loop>
    bf97:	89 c3                	mov    %eax,%ebx
    bf99:	48 8b 3d 70 ea 01 00 	mov    0x1ea70(%rip),%rdi        # 2aa10 <mm_lock>
    bfa0:	e8 3b 9a ff ff       	call   59e0 <sgx_mm_mutex_unlock>
    bfa5:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    bfaa:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    bfb1:	00 00 
    bfb3:	75 0d                	jne    bfc2 <mm_commit_internal+0xb2>
    bfb5:	48 83 c4 28          	add    $0x28,%rsp
    bfb9:	89 d8                	mov    %ebx,%eax
    bfbb:	5b                   	pop    %rbx
    bfbc:	5d                   	pop    %rbp
    bfbd:	41 5c                	pop    %r12
    bfbf:	41 5d                	pop    %r13
    bfc1:	c3                   	ret    
    bfc2:	e8 29 4a 00 00       	call   109f0 <__stack_chk_fail>
    bfc7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    bfce:	00 00 

000000000000bfd0 <sgx_mm_commit>:
    bfd0:	f3 0f 1e fa          	endbr64 
    bfd4:	48 8d 15 25 e0 00 00 	lea    0xe025(%rip),%rdx        # 1a000 <g_user_ema_root>
    bfdb:	e9 30 ff ff ff       	jmp    bf10 <mm_commit_internal>

000000000000bfe0 <mm_uncommit_internal>:
    bfe0:	f3 0f 1e fa          	endbr64 
    bfe4:	41 55                	push   %r13
    bfe6:	49 89 d5             	mov    %rdx,%r13
    bfe9:	41 54                	push   %r12
    bfeb:	49 89 fc             	mov    %rdi,%r12
    bfee:	55                   	push   %rbp
    bfef:	48 89 f5             	mov    %rsi,%rbp
    bff2:	53                   	push   %rbx
    bff3:	bb 0e 00 00 00       	mov    $0xe,%ebx
    bff8:	48 83 ec 28          	sub    $0x28,%rsp
    bffc:	48 8b 3d 0d ea 01 00 	mov    0x1ea0d(%rip),%rdi        # 2aa10 <mm_lock>
    c003:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c00a:	00 00 
    c00c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    c011:	31 c0                	xor    %eax,%eax
    c013:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    c01a:	00 00 
    c01c:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    c023:	00 00 
    c025:	e8 96 99 ff ff       	call   59c0 <sgx_mm_mutex_lock>
    c02a:	85 c0                	test   %eax,%eax
    c02c:	75 47                	jne    c075 <mm_uncommit_internal+0x95>
    c02e:	4c 01 e5             	add    %r12,%rbp
    c031:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    c036:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    c03b:	4c 89 e6             	mov    %r12,%rsi
    c03e:	48 89 ea             	mov    %rbp,%rdx
    c041:	4c 89 ef             	mov    %r13,%rdi
    c044:	bb 16 00 00 00       	mov    $0x16,%ebx
    c049:	e8 22 d9 ff ff       	call   9970 <search_ema_range>
    c04e:	85 c0                	test   %eax,%eax
    c050:	78 17                	js     c069 <mm_uncommit_internal+0x89>
    c052:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    c057:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    c05c:	48 89 e9             	mov    %rbp,%rcx
    c05f:	4c 89 e2             	mov    %r12,%rdx
    c062:	e8 69 e9 ff ff       	call   a9d0 <ema_do_uncommit_loop>
    c067:	89 c3                	mov    %eax,%ebx
    c069:	48 8b 3d a0 e9 01 00 	mov    0x1e9a0(%rip),%rdi        # 2aa10 <mm_lock>
    c070:	e8 6b 99 ff ff       	call   59e0 <sgx_mm_mutex_unlock>
    c075:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    c07a:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    c081:	00 00 
    c083:	75 0d                	jne    c092 <mm_uncommit_internal+0xb2>
    c085:	48 83 c4 28          	add    $0x28,%rsp
    c089:	89 d8                	mov    %ebx,%eax
    c08b:	5b                   	pop    %rbx
    c08c:	5d                   	pop    %rbp
    c08d:	41 5c                	pop    %r12
    c08f:	41 5d                	pop    %r13
    c091:	c3                   	ret    
    c092:	e8 59 49 00 00       	call   109f0 <__stack_chk_fail>
    c097:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    c09e:	00 00 

000000000000c0a0 <sgx_mm_uncommit>:
    c0a0:	f3 0f 1e fa          	endbr64 
    c0a4:	48 8d 15 55 df 00 00 	lea    0xdf55(%rip),%rdx        # 1a000 <g_user_ema_root>
    c0ab:	e9 30 ff ff ff       	jmp    bfe0 <mm_uncommit_internal>

000000000000c0b0 <mm_dealloc_internal>:
    c0b0:	f3 0f 1e fa          	endbr64 
    c0b4:	41 55                	push   %r13
    c0b6:	49 89 d5             	mov    %rdx,%r13
    c0b9:	41 54                	push   %r12
    c0bb:	49 89 fc             	mov    %rdi,%r12
    c0be:	55                   	push   %rbp
    c0bf:	48 89 f5             	mov    %rsi,%rbp
    c0c2:	53                   	push   %rbx
    c0c3:	bb 0e 00 00 00       	mov    $0xe,%ebx
    c0c8:	48 83 ec 28          	sub    $0x28,%rsp
    c0cc:	48 8b 3d 3d e9 01 00 	mov    0x1e93d(%rip),%rdi        # 2aa10 <mm_lock>
    c0d3:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c0da:	00 00 
    c0dc:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    c0e1:	31 c0                	xor    %eax,%eax
    c0e3:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    c0ea:	00 00 
    c0ec:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    c0f3:	00 00 
    c0f5:	e8 c6 98 ff ff       	call   59c0 <sgx_mm_mutex_lock>
    c0fa:	85 c0                	test   %eax,%eax
    c0fc:	75 47                	jne    c145 <mm_dealloc_internal+0x95>
    c0fe:	4c 01 e5             	add    %r12,%rbp
    c101:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    c106:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    c10b:	4c 89 e6             	mov    %r12,%rsi
    c10e:	48 89 ea             	mov    %rbp,%rdx
    c111:	4c 89 ef             	mov    %r13,%rdi
    c114:	bb 16 00 00 00       	mov    $0x16,%ebx
    c119:	e8 52 d8 ff ff       	call   9970 <search_ema_range>
    c11e:	85 c0                	test   %eax,%eax
    c120:	78 17                	js     c139 <mm_dealloc_internal+0x89>
    c122:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    c127:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    c12c:	48 89 e9             	mov    %rbp,%rcx
    c12f:	4c 89 e2             	mov    %r12,%rdx
    c132:	e8 49 e8 ff ff       	call   a980 <ema_do_dealloc_loop>
    c137:	89 c3                	mov    %eax,%ebx
    c139:	48 8b 3d d0 e8 01 00 	mov    0x1e8d0(%rip),%rdi        # 2aa10 <mm_lock>
    c140:	e8 9b 98 ff ff       	call   59e0 <sgx_mm_mutex_unlock>
    c145:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    c14a:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    c151:	00 00 
    c153:	75 0d                	jne    c162 <mm_dealloc_internal+0xb2>
    c155:	48 83 c4 28          	add    $0x28,%rsp
    c159:	89 d8                	mov    %ebx,%eax
    c15b:	5b                   	pop    %rbx
    c15c:	5d                   	pop    %rbp
    c15d:	41 5c                	pop    %r12
    c15f:	41 5d                	pop    %r13
    c161:	c3                   	ret    
    c162:	e8 89 48 00 00       	call   109f0 <__stack_chk_fail>
    c167:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    c16e:	00 00 

000000000000c170 <sgx_mm_dealloc>:
    c170:	f3 0f 1e fa          	endbr64 
    c174:	48 8d 15 85 de 00 00 	lea    0xde85(%rip),%rdx        # 1a000 <g_user_ema_root>
    c17b:	e9 30 ff ff ff       	jmp    c0b0 <mm_dealloc_internal>

000000000000c180 <mm_commit_data_internal>:
    c180:	f3 0f 1e fa          	endbr64 
    c184:	41 57                	push   %r15
    c186:	41 56                	push   %r14
    c188:	41 55                	push   %r13
    c18a:	41 54                	push   %r12
    c18c:	55                   	push   %rbp
    c18d:	53                   	push   %rbx
    c18e:	48 83 ec 28          	sub    $0x28,%rsp
    c192:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c199:	00 00 
    c19b:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    c1a0:	31 c0                	xor    %eax,%eax
    c1a2:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    c1a9:	00 00 
    c1ab:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    c1b2:	00 00 
    c1b4:	48 85 f6             	test   %rsi,%rsi
    c1b7:	0f 84 a3 00 00 00    	je     c260 <mm_commit_data_internal+0xe0>
    c1bd:	48 89 d0             	mov    %rdx,%rax
    c1c0:	49 89 fc             	mov    %rdi,%r12
    c1c3:	48 89 f3             	mov    %rsi,%rbx
    c1c6:	48 89 d5             	mov    %rdx,%rbp
    c1c9:	48 09 f0             	or     %rsi,%rax
    c1cc:	48 09 f8             	or     %rdi,%rax
    c1cf:	a9 ff 0f 00 00       	test   $0xfff,%eax
    c1d4:	0f 85 86 00 00 00    	jne    c260 <mm_commit_data_internal+0xe0>
    c1da:	41 89 cf             	mov    %ecx,%r15d
    c1dd:	83 f9 07             	cmp    $0x7,%ecx
    c1e0:	77 7e                	ja     c260 <mm_commit_data_internal+0xe0>
    c1e2:	48 89 d7             	mov    %rdx,%rdi
    c1e5:	4d 89 c6             	mov    %r8,%r14
    c1e8:	e8 33 98 ff ff       	call   5a20 <sgx_mm_is_within_enclave>
    c1ed:	84 c0                	test   %al,%al
    c1ef:	74 6f                	je     c260 <mm_commit_data_internal+0xe0>
    c1f1:	48 8b 3d 18 e8 01 00 	mov    0x1e818(%rip),%rdi        # 2aa10 <mm_lock>
    c1f8:	41 bd 0e 00 00 00    	mov    $0xe,%r13d
    c1fe:	e8 bd 97 ff ff       	call   59c0 <sgx_mm_mutex_lock>
    c203:	85 c0                	test   %eax,%eax
    c205:	75 5f                	jne    c266 <mm_commit_data_internal+0xe6>
    c207:	4c 01 e3             	add    %r12,%rbx
    c20a:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    c20f:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    c214:	4c 89 e6             	mov    %r12,%rsi
    c217:	48 89 da             	mov    %rbx,%rdx
    c21a:	4c 89 f7             	mov    %r14,%rdi
    c21d:	41 bd 16 00 00 00    	mov    $0x16,%r13d
    c223:	e8 48 d7 ff ff       	call   9970 <search_ema_range>
    c228:	85 c0                	test   %eax,%eax
    c22a:	78 1e                	js     c24a <mm_commit_data_internal+0xca>
    c22c:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    c231:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    c236:	45 89 f9             	mov    %r15d,%r9d
    c239:	49 89 e8             	mov    %rbp,%r8
    c23c:	48 89 d9             	mov    %rbx,%rcx
    c23f:	4c 89 e2             	mov    %r12,%rdx
    c242:	e8 a9 ea ff ff       	call   acf0 <ema_do_commit_data_loop>
    c247:	41 89 c5             	mov    %eax,%r13d
    c24a:	48 8b 3d bf e7 01 00 	mov    0x1e7bf(%rip),%rdi        # 2aa10 <mm_lock>
    c251:	e8 8a 97 ff ff       	call   59e0 <sgx_mm_mutex_unlock>
    c256:	eb 0e                	jmp    c266 <mm_commit_data_internal+0xe6>
    c258:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    c25f:	00 
    c260:	41 bd 16 00 00 00    	mov    $0x16,%r13d
    c266:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    c26b:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    c272:	00 00 
    c274:	75 12                	jne    c288 <mm_commit_data_internal+0x108>
    c276:	48 83 c4 28          	add    $0x28,%rsp
    c27a:	44 89 e8             	mov    %r13d,%eax
    c27d:	5b                   	pop    %rbx
    c27e:	5d                   	pop    %rbp
    c27f:	41 5c                	pop    %r12
    c281:	41 5d                	pop    %r13
    c283:	41 5e                	pop    %r14
    c285:	41 5f                	pop    %r15
    c287:	c3                   	ret    
    c288:	e8 63 47 00 00       	call   109f0 <__stack_chk_fail>
    c28d:	0f 1f 00             	nopl   (%rax)

000000000000c290 <sgx_mm_commit_data>:
    c290:	f3 0f 1e fa          	endbr64 
    c294:	4c 8d 05 65 dd 00 00 	lea    0xdd65(%rip),%r8        # 1a000 <g_user_ema_root>
    c29b:	e9 e0 fe ff ff       	jmp    c180 <mm_commit_data_internal>

000000000000c2a0 <mm_modify_type_internal>:
    c2a0:	f3 0f 1e fa          	endbr64 
    c2a4:	41 54                	push   %r12
    c2a6:	55                   	push   %rbp
    c2a7:	bd 01 00 00 00       	mov    $0x1,%ebp
    c2ac:	53                   	push   %rbx
    c2ad:	48 83 ec 20          	sub    $0x20,%rsp
    c2b1:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c2b8:	00 00 
    c2ba:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    c2bf:	31 c0                	xor    %eax,%eax
    c2c1:	81 fa 00 01 00 00    	cmp    $0x100,%edx
    c2c7:	0f 85 83 00 00 00    	jne    c350 <mm_modify_type_internal+0xb0>
    c2cd:	48 81 fe 00 10 00 00 	cmp    $0x1000,%rsi
    c2d4:	0f 85 96 00 00 00    	jne    c370 <mm_modify_type_internal+0xd0>
    c2da:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    c2e1:	00 00 
    c2e3:	49 89 fc             	mov    %rdi,%r12
    c2e6:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    c2ed:	00 00 
    c2ef:	f7 c7 ff 0f 00 00    	test   $0xfff,%edi
    c2f5:	75 79                	jne    c370 <mm_modify_type_internal+0xd0>
    c2f7:	48 8b 3d 12 e7 01 00 	mov    0x1e712(%rip),%rdi        # 2aa10 <mm_lock>
    c2fe:	48 89 cb             	mov    %rcx,%rbx
    c301:	bd 0e 00 00 00       	mov    $0xe,%ebp
    c306:	e8 b5 96 ff ff       	call   59c0 <sgx_mm_mutex_lock>
    c30b:	85 c0                	test   %eax,%eax
    c30d:	75 41                	jne    c350 <mm_modify_type_internal+0xb0>
    c30f:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    c314:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    c319:	4c 89 e6             	mov    %r12,%rsi
    c31c:	48 89 df             	mov    %rbx,%rdi
    c31f:	49 8d 94 24 00 10 00 	lea    0x1000(%r12),%rdx
    c326:	00 
    c327:	bd 16 00 00 00       	mov    $0x16,%ebp
    c32c:	e8 3f d6 ff ff       	call   9970 <search_ema_range>
    c331:	85 c0                	test   %eax,%eax
    c333:	78 0f                	js     c344 <mm_modify_type_internal+0xa4>
    c335:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    c33a:	4c 89 e6             	mov    %r12,%rsi
    c33d:	e8 1e e1 ff ff       	call   a460 <ema_change_to_tcs>
    c342:	89 c5                	mov    %eax,%ebp
    c344:	48 8b 3d c5 e6 01 00 	mov    0x1e6c5(%rip),%rdi        # 2aa10 <mm_lock>
    c34b:	e8 90 96 ff ff       	call   59e0 <sgx_mm_mutex_unlock>
    c350:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    c355:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    c35c:	00 00 
    c35e:	75 17                	jne    c377 <mm_modify_type_internal+0xd7>
    c360:	48 83 c4 20          	add    $0x20,%rsp
    c364:	89 e8                	mov    %ebp,%eax
    c366:	5b                   	pop    %rbx
    c367:	5d                   	pop    %rbp
    c368:	41 5c                	pop    %r12
    c36a:	c3                   	ret    
    c36b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    c370:	bd 16 00 00 00       	mov    $0x16,%ebp
    c375:	eb d9                	jmp    c350 <mm_modify_type_internal+0xb0>
    c377:	e8 74 46 00 00       	call   109f0 <__stack_chk_fail>
    c37c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000c380 <sgx_mm_modify_type>:
    c380:	f3 0f 1e fa          	endbr64 
    c384:	55                   	push   %rbp
    c385:	53                   	push   %rbx
    c386:	bb 01 00 00 00       	mov    $0x1,%ebx
    c38b:	48 83 ec 28          	sub    $0x28,%rsp
    c38f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c396:	00 00 
    c398:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    c39d:	31 c0                	xor    %eax,%eax
    c39f:	81 fa 00 01 00 00    	cmp    $0x100,%edx
    c3a5:	0f 85 85 00 00 00    	jne    c430 <sgx_mm_modify_type+0xb0>
    c3ab:	48 81 fe 00 10 00 00 	cmp    $0x1000,%rsi
    c3b2:	0f 85 98 00 00 00    	jne    c450 <sgx_mm_modify_type+0xd0>
    c3b8:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    c3bf:	00 00 
    c3c1:	48 89 fd             	mov    %rdi,%rbp
    c3c4:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    c3cb:	00 00 
    c3cd:	f7 c7 ff 0f 00 00    	test   $0xfff,%edi
    c3d3:	75 7b                	jne    c450 <sgx_mm_modify_type+0xd0>
    c3d5:	48 8b 3d 34 e6 01 00 	mov    0x1e634(%rip),%rdi        # 2aa10 <mm_lock>
    c3dc:	bb 0e 00 00 00       	mov    $0xe,%ebx
    c3e1:	e8 da 95 ff ff       	call   59c0 <sgx_mm_mutex_lock>
    c3e6:	85 c0                	test   %eax,%eax
    c3e8:	75 46                	jne    c430 <sgx_mm_modify_type+0xb0>
    c3ea:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    c3ef:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    c3f4:	48 89 ee             	mov    %rbp,%rsi
    c3f7:	bb 16 00 00 00       	mov    $0x16,%ebx
    c3fc:	48 8d 95 00 10 00 00 	lea    0x1000(%rbp),%rdx
    c403:	48 8d 3d f6 db 00 00 	lea    0xdbf6(%rip),%rdi        # 1a000 <g_user_ema_root>
    c40a:	e8 61 d5 ff ff       	call   9970 <search_ema_range>
    c40f:	85 c0                	test   %eax,%eax
    c411:	78 0f                	js     c422 <sgx_mm_modify_type+0xa2>
    c413:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    c418:	48 89 ee             	mov    %rbp,%rsi
    c41b:	e8 40 e0 ff ff       	call   a460 <ema_change_to_tcs>
    c420:	89 c3                	mov    %eax,%ebx
    c422:	48 8b 3d e7 e5 01 00 	mov    0x1e5e7(%rip),%rdi        # 2aa10 <mm_lock>
    c429:	e8 b2 95 ff ff       	call   59e0 <sgx_mm_mutex_unlock>
    c42e:	66 90                	xchg   %ax,%ax
    c430:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    c435:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    c43c:	00 00 
    c43e:	75 17                	jne    c457 <sgx_mm_modify_type+0xd7>
    c440:	48 83 c4 28          	add    $0x28,%rsp
    c444:	89 d8                	mov    %ebx,%eax
    c446:	5b                   	pop    %rbx
    c447:	5d                   	pop    %rbp
    c448:	c3                   	ret    
    c449:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c450:	bb 16 00 00 00       	mov    $0x16,%ebx
    c455:	eb d9                	jmp    c430 <sgx_mm_modify_type+0xb0>
    c457:	e8 94 45 00 00       	call   109f0 <__stack_chk_fail>
    c45c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000c460 <mm_modify_permissions_internal>:
    c460:	f3 0f 1e fa          	endbr64 
    c464:	41 56                	push   %r14
    c466:	41 55                	push   %r13
    c468:	41 54                	push   %r12
    c46a:	41 bc 16 00 00 00    	mov    $0x16,%r12d
    c470:	55                   	push   %rbp
    c471:	53                   	push   %rbx
    c472:	48 83 ec 20          	sub    $0x20,%rsp
    c476:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c47d:	00 00 
    c47f:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    c484:	31 c0                	xor    %eax,%eax
    c486:	48 85 f6             	test   %rsi,%rsi
    c489:	0f 84 9b 00 00 00    	je     c52a <mm_modify_permissions_internal+0xca>
    c48f:	48 89 f8             	mov    %rdi,%rax
    c492:	48 89 fd             	mov    %rdi,%rbp
    c495:	48 89 f3             	mov    %rsi,%rbx
    c498:	48 09 f0             	or     %rsi,%rax
    c49b:	a9 ff 0f 00 00       	test   $0xfff,%eax
    c4a0:	0f 85 84 00 00 00    	jne    c52a <mm_modify_permissions_internal+0xca>
    c4a6:	89 d0                	mov    %edx,%eax
    c4a8:	41 89 d6             	mov    %edx,%r14d
    c4ab:	83 e0 05             	and    $0x5,%eax
    c4ae:	83 f8 04             	cmp    $0x4,%eax
    c4b1:	74 77                	je     c52a <mm_modify_permissions_internal+0xca>
    c4b3:	48 8b 3d 56 e5 01 00 	mov    0x1e556(%rip),%rdi        # 2aa10 <mm_lock>
    c4ba:	49 89 cd             	mov    %rcx,%r13
    c4bd:	41 bc 0e 00 00 00    	mov    $0xe,%r12d
    c4c3:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    c4ca:	00 00 
    c4cc:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    c4d3:	00 00 
    c4d5:	e8 e6 94 ff ff       	call   59c0 <sgx_mm_mutex_lock>
    c4da:	85 c0                	test   %eax,%eax
    c4dc:	75 4c                	jne    c52a <mm_modify_permissions_internal+0xca>
    c4de:	48 01 eb             	add    %rbp,%rbx
    c4e1:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    c4e6:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    c4eb:	48 89 ee             	mov    %rbp,%rsi
    c4ee:	48 89 da             	mov    %rbx,%rdx
    c4f1:	4c 89 ef             	mov    %r13,%rdi
    c4f4:	41 bc 16 00 00 00    	mov    $0x16,%r12d
    c4fa:	e8 71 d4 ff ff       	call   9970 <search_ema_range>
    c4ff:	85 c0                	test   %eax,%eax
    c501:	78 1b                	js     c51e <mm_modify_permissions_internal+0xbe>
    c503:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    c508:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    c50d:	45 89 f0             	mov    %r14d,%r8d
    c510:	48 89 d9             	mov    %rbx,%rcx
    c513:	48 89 ea             	mov    %rbp,%rdx
    c516:	e8 d5 e5 ff ff       	call   aaf0 <ema_modify_permissions_loop>
    c51b:	41 89 c4             	mov    %eax,%r12d
    c51e:	48 8b 3d eb e4 01 00 	mov    0x1e4eb(%rip),%rdi        # 2aa10 <mm_lock>
    c525:	e8 b6 94 ff ff       	call   59e0 <sgx_mm_mutex_unlock>
    c52a:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    c52f:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    c536:	00 00 
    c538:	75 10                	jne    c54a <mm_modify_permissions_internal+0xea>
    c53a:	48 83 c4 20          	add    $0x20,%rsp
    c53e:	44 89 e0             	mov    %r12d,%eax
    c541:	5b                   	pop    %rbx
    c542:	5d                   	pop    %rbp
    c543:	41 5c                	pop    %r12
    c545:	41 5d                	pop    %r13
    c547:	41 5e                	pop    %r14
    c549:	c3                   	ret    
    c54a:	e8 a1 44 00 00       	call   109f0 <__stack_chk_fail>
    c54f:	90                   	nop

000000000000c550 <sgx_mm_modify_permissions>:
    c550:	f3 0f 1e fa          	endbr64 
    c554:	48 8d 0d a5 da 00 00 	lea    0xdaa5(%rip),%rcx        # 1a000 <g_user_ema_root>
    c55b:	e9 00 ff ff ff       	jmp    c460 <mm_modify_permissions_internal>

000000000000c560 <sgx_mm_init>:
    c560:	f3 0f 1e fa          	endbr64 
    c564:	55                   	push   %rbp
    c565:	48 89 fd             	mov    %rdi,%rbp
    c568:	53                   	push   %rbx
    c569:	48 89 f3             	mov    %rsi,%rbx
    c56c:	48 83 ec 08          	sub    $0x8,%rsp
    c570:	e8 0b 94 ff ff       	call   5980 <sgx_mm_mutex_create>
    c575:	48 89 05 94 e4 01 00 	mov    %rax,0x1e494(%rip)        # 2aa10 <mm_lock>
    c57c:	48 85 c0             	test   %rax,%rax
    c57f:	74 2f                	je     c5b0 <sgx_mm_init+0x50>
    c581:	48 8d 3d 98 f4 ff ff 	lea    -0xb68(%rip),%rdi        # ba20 <sgx_mm_enclave_pfhandler>
    c588:	48 89 2d 79 e4 01 00 	mov    %rbp,0x1e479(%rip)        # 2aa08 <mm_user_base>
    c58f:	48 89 1d 6a e4 01 00 	mov    %rbx,0x1e46a(%rip)        # 2aa00 <mm_user_end>
    c596:	e8 85 93 ff ff       	call   5920 <sgx_mm_register_pfhandler>
    c59b:	84 c0                	test   %al,%al
    c59d:	74 11                	je     c5b0 <sgx_mm_init+0x50>
    c59f:	48 83 c4 08          	add    $0x8,%rsp
    c5a3:	31 c0                	xor    %eax,%eax
    c5a5:	5b                   	pop    %rbx
    c5a6:	5d                   	pop    %rbp
    c5a7:	c3                   	ret    
    c5a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    c5af:	00 
    c5b0:	48 83 c4 08          	add    $0x8,%rsp
    c5b4:	b8 0e 00 00 00       	mov    $0xe,%eax
    c5b9:	5b                   	pop    %rbx
    c5ba:	5d                   	pop    %rbp
    c5bb:	c3                   	ret    
    c5bc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000c5c0 <alloca>:
    c5c0:	f3 0f 1e fa          	endbr64 
    c5c4:	5a                   	pop    %rdx
    c5c5:	48 89 e1             	mov    %rsp,%rcx
    c5c8:	48 83 c7 0f          	add    $0xf,%rdi
    c5cc:	48 83 e7 f0          	and    $0xfffffffffffffff0,%rdi
    c5d0:	48 29 fc             	sub    %rdi,%rsp
    c5d3:	48 89 e0             	mov    %rsp,%rax
    c5d6:	3e ff e2             	notrack jmp *%rdx
    c5d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000c5e0 <heap_init>:
    c5e0:	f3 0f 1e fa          	endbr64 
    c5e4:	48 89 f8             	mov    %rdi,%rax
    c5e7:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    c5ed:	48 85 ff             	test   %rdi,%rdi
    c5f0:	75 0e                	jne    c600 <heap_init+0x20>
    c5f2:	44 89 c0             	mov    %r8d,%eax
    c5f5:	c3                   	ret    
    c5f6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    c5fd:	00 00 00 
    c600:	48 89 f7             	mov    %rsi,%rdi
    c603:	49 89 c1             	mov    %rax,%r9
    c606:	48 09 d7             	or     %rdx,%rdi
    c609:	41 81 e1 ff 0f 00 00 	and    $0xfff,%r9d
    c610:	81 e7 ff 0f 00 00    	and    $0xfff,%edi
    c616:	48 0b 3d 23 b8 00 00 	or     0xb823(%rip),%rdi        # 17e40 <heap_base>
    c61d:	4c 09 cf             	or     %r9,%rdi
    c620:	75 d0                	jne    c5f2 <heap_init+0x12>
    c622:	45 31 c0             	xor    %r8d,%r8d
    c625:	48 89 05 14 b8 00 00 	mov    %rax,0xb814(%rip)        # 17e40 <heap_base>
    c62c:	48 89 35 05 b8 00 00 	mov    %rsi,0xb805(%rip)        # 17e38 <heap_size>
    c633:	44 89 c0             	mov    %r8d,%eax
    c636:	48 89 15 eb b7 00 00 	mov    %rdx,0xb7eb(%rip)        # 17e28 <heap_min_size>
    c63d:	89 0d ed b7 00 00    	mov    %ecx,0xb7ed(%rip)        # 17e30 <is_edmm_supported>
    c643:	c3                   	ret    
    c644:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    c64b:	00 00 00 
    c64e:	66 90                	xchg   %ax,%ax

000000000000c650 <sbrk>:
    c650:	f3 0f 1e fa          	endbr64 
    c654:	55                   	push   %rbp
    c655:	53                   	push   %rbx
    c656:	48 83 ec 08          	sub    $0x8,%rsp
    c65a:	48 8b 05 df b7 00 00 	mov    0xb7df(%rip),%rax        # 17e40 <heap_base>
    c661:	48 85 c0             	test   %rax,%rax
    c664:	0f 84 e6 00 00 00    	je     c750 <sbrk+0x100>
    c66a:	48 8b 1d a7 e3 01 00 	mov    0x1e3a7(%rip),%rbx        # 2aa18 <heap_used.0>
    c671:	48 85 ff             	test   %rdi,%rdi
    c674:	0f 88 86 00 00 00    	js     c700 <sbrk+0xb0>
    c67a:	48 89 fa             	mov    %rdi,%rdx
    c67d:	48 01 da             	add    %rbx,%rdx
    c680:	0f 82 ca 00 00 00    	jb     c750 <sbrk+0x100>
    c686:	48 39 15 ab b7 00 00 	cmp    %rdx,0xb7ab(%rip)        # 17e38 <heap_size>
    c68d:	0f 82 bd 00 00 00    	jb     c750 <sbrk+0x100>
    c693:	48 8d 2c 18          	lea    (%rax,%rbx,1),%rbp
    c697:	48 85 ff             	test   %rdi,%rdi
    c69a:	74 53                	je     c6ef <sbrk+0x9f>
    c69c:	48 8b 0d 7d e3 01 00 	mov    0x1e37d(%rip),%rcx        # 2aa20 <g_peak_heap_used>
    c6a3:	48 89 15 6e e3 01 00 	mov    %rdx,0x1e36e(%rip)        # 2aa18 <heap_used.0>
    c6aa:	48 39 d1             	cmp    %rdx,%rcx
    c6ad:	48 0f 42 ca          	cmovb  %rdx,%rcx
    c6b1:	48 89 0d 68 e3 01 00 	mov    %rcx,0x1e368(%rip)        # 2aa20 <g_peak_heap_used>
    c6b8:	8b 0d 72 b7 00 00    	mov    0xb772(%rip),%ecx        # 17e30 <is_edmm_supported>
    c6be:	85 c9                	test   %ecx,%ecx
    c6c0:	74 2d                	je     c6ef <sbrk+0x9f>
    c6c2:	48 8b 0d 5f b7 00 00 	mov    0xb75f(%rip),%rcx        # 17e28 <heap_min_size>
    c6c9:	48 39 d1             	cmp    %rdx,%rcx
    c6cc:	73 21                	jae    c6ef <sbrk+0x9f>
    c6ce:	49 89 e8             	mov    %rbp,%r8
    c6d1:	48 39 d9             	cmp    %rbx,%rcx
    c6d4:	72 0a                	jb     c6e0 <sbrk+0x90>
    c6d6:	48 29 ca             	sub    %rcx,%rdx
    c6d9:	4c 8d 04 08          	lea    (%rax,%rcx,1),%r8
    c6dd:	48 89 d7             	mov    %rdx,%rdi
    c6e0:	48 89 fe             	mov    %rdi,%rsi
    c6e3:	4c 89 c7             	mov    %r8,%rdi
    c6e6:	e8 d5 f2 ff ff       	call   b9c0 <mm_commit>
    c6eb:	85 c0                	test   %eax,%eax
    c6ed:	75 56                	jne    c745 <sbrk+0xf5>
    c6ef:	48 83 c4 08          	add    $0x8,%rsp
    c6f3:	48 89 e8             	mov    %rbp,%rax
    c6f6:	5b                   	pop    %rbx
    c6f7:	5d                   	pop    %rbp
    c6f8:	c3                   	ret    
    c6f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c700:	48 89 fe             	mov    %rdi,%rsi
    c703:	48 f7 de             	neg    %rsi
    c706:	48 39 f3             	cmp    %rsi,%rbx
    c709:	72 45                	jb     c750 <sbrk+0x100>
    c70b:	44 8b 05 1e b7 00 00 	mov    0xb71e(%rip),%r8d        # 17e30 <is_edmm_supported>
    c712:	48 01 df             	add    %rbx,%rdi
    c715:	48 89 3d fc e2 01 00 	mov    %rdi,0x1e2fc(%rip)        # 2aa18 <heap_used.0>
    c71c:	48 8d 2c 38          	lea    (%rax,%rdi,1),%rbp
    c720:	45 85 c0             	test   %r8d,%r8d
    c723:	74 ca                	je     c6ef <sbrk+0x9f>
    c725:	48 8b 15 fc b6 00 00 	mov    0xb6fc(%rip),%rdx        # 17e28 <heap_min_size>
    c72c:	48 39 da             	cmp    %rbx,%rdx
    c72f:	73 be                	jae    c6ef <sbrk+0x9f>
    c731:	48 89 e9             	mov    %rbp,%rcx
    c734:	48 39 fa             	cmp    %rdi,%rdx
    c737:	73 27                	jae    c760 <sbrk+0x110>
    c739:	48 89 cf             	mov    %rcx,%rdi
    c73c:	e8 8f f2 ff ff       	call   b9d0 <mm_uncommit>
    c741:	85 c0                	test   %eax,%eax
    c743:	74 aa                	je     c6ef <sbrk+0x9f>
    c745:	48 89 1d cc e2 01 00 	mov    %rbx,0x1e2cc(%rip)        # 2aa18 <heap_used.0>
    c74c:	0f 1f 40 00          	nopl   0x0(%rax)
    c750:	48 c7 c5 ff ff ff ff 	mov    $0xffffffffffffffff,%rbp
    c757:	eb 96                	jmp    c6ef <sbrk+0x9f>
    c759:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c760:	48 89 de             	mov    %rbx,%rsi
    c763:	48 8d 0c 10          	lea    (%rax,%rdx,1),%rcx
    c767:	48 29 d6             	sub    %rdx,%rsi
    c76a:	eb cd                	jmp    c739 <sbrk+0xe9>
    c76c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000c770 <sgx_spin_lock>:
    c770:	f3 0f 1e fa          	endbr64 
    c774:	48 83 ec 18          	sub    $0x18,%rsp
    c778:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c77f:	00 00 
    c781:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    c786:	b8 01 00 00 00       	mov    $0x1,%eax
    c78b:	f0 87 07             	lock xchg %eax,(%rdi)
    c78e:	89 44 24 04          	mov    %eax,0x4(%rsp)
    c792:	8b 54 24 04          	mov    0x4(%rsp),%edx
    c796:	85 d2                	test   %edx,%edx
    c798:	74 48                	je     c7e2 <sgx_spin_lock+0x72>
    c79a:	48 89 f9             	mov    %rdi,%rcx
    c79d:	be 01 00 00 00       	mov    $0x1,%esi
    c7a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    c7a8:	ba 02 00 00 00       	mov    $0x2,%edx
    c7ad:	0f 1f 00             	nopl   (%rax)
    c7b0:	85 d2                	test   %edx,%edx
    c7b2:	7e 0d                	jle    c7c1 <sgx_spin_lock+0x51>
    c7b4:	31 c0                	xor    %eax,%eax
    c7b6:	f3 90                	pause  
    c7b8:	f3 90                	pause  
    c7ba:	83 c0 02             	add    $0x2,%eax
    c7bd:	39 c2                	cmp    %eax,%edx
    c7bf:	75 f5                	jne    c7b6 <sgx_spin_lock+0x46>
    c7c1:	b8 00 04 00 00       	mov    $0x400,%eax
    c7c6:	01 d2                	add    %edx,%edx
    c7c8:	39 c2                	cmp    %eax,%edx
    c7ca:	0f 4f d0             	cmovg  %eax,%edx
    c7cd:	8b 01                	mov    (%rcx),%eax
    c7cf:	85 c0                	test   %eax,%eax
    c7d1:	75 dd                	jne    c7b0 <sgx_spin_lock+0x40>
    c7d3:	f0 87 31             	lock xchg %esi,(%rcx)
    c7d6:	89 74 24 04          	mov    %esi,0x4(%rsp)
    c7da:	8b 44 24 04          	mov    0x4(%rsp),%eax
    c7de:	85 c0                	test   %eax,%eax
    c7e0:	75 c6                	jne    c7a8 <sgx_spin_lock+0x38>
    c7e2:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    c7e7:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    c7ee:	00 00 
    c7f0:	75 07                	jne    c7f9 <sgx_spin_lock+0x89>
    c7f2:	31 c0                	xor    %eax,%eax
    c7f4:	48 83 c4 18          	add    $0x18,%rsp
    c7f8:	c3                   	ret    
    c7f9:	e8 f2 41 00 00       	call   109f0 <__stack_chk_fail>
    c7fe:	66 90                	xchg   %ax,%ax

000000000000c800 <sgx_spin_unlock>:
    c800:	f3 0f 1e fa          	endbr64 
    c804:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
    c80a:	31 c0                	xor    %eax,%eax
    c80c:	c3                   	ret    
    c80d:	0f 1f 00             	nopl   (%rax)

000000000000c810 <dispose_chunk>:
    c810:	55                   	push   %rbp
    c811:	48 89 f0             	mov    %rsi,%rax
    c814:	48 01 d6             	add    %rdx,%rsi
    c817:	53                   	push   %rbx
    c818:	48 83 ec 08          	sub    $0x8,%rsp
    c81c:	48 8b 48 08          	mov    0x8(%rax),%rcx
    c820:	f6 c1 01             	test   $0x1,%cl
    c823:	0f 85 f7 00 00 00    	jne    c920 <dispose_chunk+0x110>
    c829:	83 e1 03             	and    $0x3,%ecx
    c82c:	4c 8b 08             	mov    (%rax),%r9
    c82f:	0f 84 64 01 00 00    	je     c999 <dispose_chunk+0x189>
    c835:	4c 8b 47 18          	mov    0x18(%rdi),%r8
    c839:	4c 29 c8             	sub    %r9,%rax
    c83c:	4c 01 ca             	add    %r9,%rdx
    c83f:	4c 39 c0             	cmp    %r8,%rax
    c842:	0f 82 38 03 00 00    	jb     cb80 <dispose_chunk+0x370>
    c848:	48 39 47 20          	cmp    %rax,0x20(%rdi)
    c84c:	0f 84 2e 04 00 00    	je     cc80 <dispose_chunk+0x470>
    c852:	4c 89 c9             	mov    %r9,%rcx
    c855:	48 c1 e9 03          	shr    $0x3,%rcx
    c859:	49 81 f9 ff 00 00 00 	cmp    $0xff,%r9
    c860:	0f 86 4a 03 00 00    	jbe    cbb0 <dispose_chunk+0x3a0>
    c866:	4c 8b 50 18          	mov    0x18(%rax),%r10
    c86a:	48 8b 58 30          	mov    0x30(%rax),%rbx
    c86e:	49 39 c2             	cmp    %rax,%r10
    c871:	0f 84 89 05 00 00    	je     ce00 <dispose_chunk+0x5f0>
    c877:	48 8b 48 10          	mov    0x10(%rax),%rcx
    c87b:	4c 39 c1             	cmp    %r8,%rcx
    c87e:	0f 82 fc 02 00 00    	jb     cb80 <dispose_chunk+0x370>
    c884:	48 39 41 18          	cmp    %rax,0x18(%rcx)
    c888:	0f 85 f2 02 00 00    	jne    cb80 <dispose_chunk+0x370>
    c88e:	49 39 42 10          	cmp    %rax,0x10(%r10)
    c892:	0f 85 e8 02 00 00    	jne    cb80 <dispose_chunk+0x370>
    c898:	4c 89 51 18          	mov    %r10,0x18(%rcx)
    c89c:	49 89 4a 10          	mov    %rcx,0x10(%r10)
    c8a0:	48 85 db             	test   %rbx,%rbx
    c8a3:	74 7f                	je     c924 <dispose_chunk+0x114>
    c8a5:	44 8b 48 38          	mov    0x38(%rax),%r9d
    c8a9:	4c 89 c9             	mov    %r9,%rcx
    c8ac:	4d 8d 59 4a          	lea    0x4a(%r9),%r11
    c8b0:	4a 39 84 cf 58 02 00 	cmp    %rax,0x258(%rdi,%r9,8)
    c8b7:	00 
    c8b8:	0f 84 32 06 00 00    	je     cef0 <dispose_chunk+0x6e0>
    c8be:	4c 39 c3             	cmp    %r8,%rbx
    c8c1:	0f 82 b9 02 00 00    	jb     cb80 <dispose_chunk+0x370>
    c8c7:	48 39 43 20          	cmp    %rax,0x20(%rbx)
    c8cb:	0f 84 9c 06 00 00    	je     cf6d <dispose_chunk+0x75d>
    c8d1:	4c 89 53 28          	mov    %r10,0x28(%rbx)
    c8d5:	4d 85 d2             	test   %r10,%r10
    c8d8:	74 4a                	je     c924 <dispose_chunk+0x114>
    c8da:	4d 39 c2             	cmp    %r8,%r10
    c8dd:	0f 82 9d 02 00 00    	jb     cb80 <dispose_chunk+0x370>
    c8e3:	48 8b 48 20          	mov    0x20(%rax),%rcx
    c8e7:	49 89 5a 30          	mov    %rbx,0x30(%r10)
    c8eb:	48 85 c9             	test   %rcx,%rcx
    c8ee:	74 11                	je     c901 <dispose_chunk+0xf1>
    c8f0:	4c 39 c1             	cmp    %r8,%rcx
    c8f3:	0f 82 87 02 00 00    	jb     cb80 <dispose_chunk+0x370>
    c8f9:	49 89 4a 20          	mov    %rcx,0x20(%r10)
    c8fd:	4c 89 51 30          	mov    %r10,0x30(%rcx)
    c901:	48 8b 48 28          	mov    0x28(%rax),%rcx
    c905:	48 85 c9             	test   %rcx,%rcx
    c908:	74 1a                	je     c924 <dispose_chunk+0x114>
    c90a:	4c 39 c1             	cmp    %r8,%rcx
    c90d:	0f 82 6d 02 00 00    	jb     cb80 <dispose_chunk+0x370>
    c913:	49 89 4a 28          	mov    %rcx,0x28(%r10)
    c917:	4c 89 51 30          	mov    %r10,0x30(%rcx)
    c91b:	eb 07                	jmp    c924 <dispose_chunk+0x114>
    c91d:	0f 1f 00             	nopl   (%rax)
    c920:	4c 8b 47 18          	mov    0x18(%rdi),%r8
    c924:	4c 39 c6             	cmp    %r8,%rsi
    c927:	0f 82 53 02 00 00    	jb     cb80 <dispose_chunk+0x370>
    c92d:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    c931:	f6 c1 02             	test   $0x2,%cl
    c934:	74 6a                	je     c9a0 <dispose_chunk+0x190>
    c936:	48 83 e1 fe          	and    $0xfffffffffffffffe,%rcx
    c93a:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
    c93e:	48 89 d1             	mov    %rdx,%rcx
    c941:	48 83 c9 01          	or     $0x1,%rcx
    c945:	48 89 48 08          	mov    %rcx,0x8(%rax)
    c949:	48 89 14 10          	mov    %rdx,(%rax,%rdx,1)
    c94d:	48 89 d1             	mov    %rdx,%rcx
    c950:	48 c1 e9 03          	shr    $0x3,%rcx
    c954:	48 81 fa ff 00 00 00 	cmp    $0xff,%rdx
    c95b:	0f 87 57 01 00 00    	ja     cab8 <dispose_chunk+0x2a8>
    c961:	8d 54 09 09          	lea    0x9(%rcx,%rcx,1),%edx
    c965:	44 8b 0f             	mov    (%rdi),%r9d
    c968:	48 8d 34 d7          	lea    (%rdi,%rdx,8),%rsi
    c96c:	ba 01 00 00 00       	mov    $0x1,%edx
    c971:	d3 e2                	shl    %cl,%edx
    c973:	41 85 d1             	test   %edx,%r9d
    c976:	0f 84 24 02 00 00    	je     cba0 <dispose_chunk+0x390>
    c97c:	48 8b 56 10          	mov    0x10(%rsi),%rdx
    c980:	4c 39 c2             	cmp    %r8,%rdx
    c983:	0f 82 f7 01 00 00    	jb     cb80 <dispose_chunk+0x370>
    c989:	48 89 46 10          	mov    %rax,0x10(%rsi)
    c98d:	48 89 42 18          	mov    %rax,0x18(%rdx)
    c991:	48 89 50 10          	mov    %rdx,0x10(%rax)
    c995:	48 89 70 18          	mov    %rsi,0x18(%rax)
    c999:	48 83 c4 08          	add    $0x8,%rsp
    c99d:	5b                   	pop    %rbx
    c99e:	5d                   	pop    %rbp
    c99f:	c3                   	ret    
    c9a0:	48 8b 5f 20          	mov    0x20(%rdi),%rbx
    c9a4:	48 39 77 28          	cmp    %rsi,0x28(%rdi)
    c9a8:	0f 84 22 03 00 00    	je     ccd0 <dispose_chunk+0x4c0>
    c9ae:	48 39 f3             	cmp    %rsi,%rbx
    c9b1:	0f 84 89 03 00 00    	je     cd40 <dispose_chunk+0x530>
    c9b7:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    c9bb:	49 89 cb             	mov    %rcx,%r11
    c9be:	48 01 ca             	add    %rcx,%rdx
    c9c1:	49 c1 eb 03          	shr    $0x3,%r11
    c9c5:	48 81 f9 f8 00 00 00 	cmp    $0xf8,%rcx
    c9cc:	0f 86 7e 01 00 00    	jbe    cb50 <dispose_chunk+0x340>
    c9d2:	4c 8b 56 18          	mov    0x18(%rsi),%r10
    c9d6:	48 8b 6e 30          	mov    0x30(%rsi),%rbp
    c9da:	49 39 f2             	cmp    %rsi,%r10
    c9dd:	0f 84 7d 03 00 00    	je     cd60 <dispose_chunk+0x550>
    c9e3:	48 8b 4e 10          	mov    0x10(%rsi),%rcx
    c9e7:	4c 39 c1             	cmp    %r8,%rcx
    c9ea:	0f 82 90 01 00 00    	jb     cb80 <dispose_chunk+0x370>
    c9f0:	48 39 71 18          	cmp    %rsi,0x18(%rcx)
    c9f4:	0f 85 86 01 00 00    	jne    cb80 <dispose_chunk+0x370>
    c9fa:	49 39 72 10          	cmp    %rsi,0x10(%r10)
    c9fe:	0f 85 7c 01 00 00    	jne    cb80 <dispose_chunk+0x370>
    ca04:	4c 89 51 18          	mov    %r10,0x18(%rcx)
    ca08:	49 89 4a 10          	mov    %rcx,0x10(%r10)
    ca0c:	48 85 ed             	test   %rbp,%rbp
    ca0f:	74 7f                	je     ca90 <dispose_chunk+0x280>
    ca11:	44 8b 4e 38          	mov    0x38(%rsi),%r9d
    ca15:	4c 89 c9             	mov    %r9,%rcx
    ca18:	4d 8d 59 4a          	lea    0x4a(%r9),%r11
    ca1c:	4a 39 b4 cf 58 02 00 	cmp    %rsi,0x258(%rdi,%r9,8)
    ca23:	00 
    ca24:	0f 84 76 04 00 00    	je     cea0 <dispose_chunk+0x690>
    ca2a:	4c 39 c5             	cmp    %r8,%rbp
    ca2d:	0f 82 4d 01 00 00    	jb     cb80 <dispose_chunk+0x370>
    ca33:	48 39 75 20          	cmp    %rsi,0x20(%rbp)
    ca37:	0f 84 27 05 00 00    	je     cf64 <dispose_chunk+0x754>
    ca3d:	4c 89 55 28          	mov    %r10,0x28(%rbp)
    ca41:	4d 85 d2             	test   %r10,%r10
    ca44:	74 4a                	je     ca90 <dispose_chunk+0x280>
    ca46:	4d 39 c2             	cmp    %r8,%r10
    ca49:	0f 82 31 01 00 00    	jb     cb80 <dispose_chunk+0x370>
    ca4f:	48 8b 4e 20          	mov    0x20(%rsi),%rcx
    ca53:	49 89 6a 30          	mov    %rbp,0x30(%r10)
    ca57:	48 85 c9             	test   %rcx,%rcx
    ca5a:	74 11                	je     ca6d <dispose_chunk+0x25d>
    ca5c:	4c 39 c1             	cmp    %r8,%rcx
    ca5f:	0f 82 1b 01 00 00    	jb     cb80 <dispose_chunk+0x370>
    ca65:	49 89 4a 20          	mov    %rcx,0x20(%r10)
    ca69:	4c 89 51 30          	mov    %r10,0x30(%rcx)
    ca6d:	48 8b 4e 28          	mov    0x28(%rsi),%rcx
    ca71:	48 85 c9             	test   %rcx,%rcx
    ca74:	74 1a                	je     ca90 <dispose_chunk+0x280>
    ca76:	4c 39 c1             	cmp    %r8,%rcx
    ca79:	0f 82 01 01 00 00    	jb     cb80 <dispose_chunk+0x370>
    ca7f:	49 89 4a 28          	mov    %rcx,0x28(%r10)
    ca83:	4c 89 51 30          	mov    %r10,0x30(%rcx)
    ca87:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    ca8e:	00 00 
    ca90:	48 89 d1             	mov    %rdx,%rcx
    ca93:	48 83 c9 01          	or     $0x1,%rcx
    ca97:	48 89 48 08          	mov    %rcx,0x8(%rax)
    ca9b:	48 89 14 10          	mov    %rdx,(%rax,%rdx,1)
    ca9f:	48 39 d8             	cmp    %rbx,%rax
    caa2:	0f 85 a5 fe ff ff    	jne    c94d <dispose_chunk+0x13d>
    caa8:	48 89 57 08          	mov    %rdx,0x8(%rdi)
    caac:	e9 e8 fe ff ff       	jmp    c999 <dispose_chunk+0x189>
    cab1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    cab8:	48 89 d6             	mov    %rdx,%rsi
    cabb:	48 c1 ee 08          	shr    $0x8,%rsi
    cabf:	89 f1                	mov    %esi,%ecx
    cac1:	85 f6                	test   %esi,%esi
    cac3:	0f 84 bf 00 00 00    	je     cb88 <dispose_chunk+0x378>
    cac9:	81 fe ff ff 00 00    	cmp    $0xffff,%esi
    cacf:	0f 87 e3 01 00 00    	ja     ccb8 <dispose_chunk+0x4a8>
    cad5:	0f bd f1             	bsr    %ecx,%esi
    cad8:	b9 26 00 00 00       	mov    $0x26,%ecx
    cadd:	48 89 d3             	mov    %rdx,%rbx
    cae0:	41 b9 1f 00 00 00    	mov    $0x1f,%r9d
    cae6:	83 f6 1f             	xor    $0x1f,%esi
    cae9:	29 f1                	sub    %esi,%ecx
    caeb:	41 29 f1             	sub    %esi,%r9d
    caee:	be 01 00 00 00       	mov    $0x1,%esi
    caf3:	48 d3 eb             	shr    %cl,%rbx
    caf6:	48 89 d9             	mov    %rbx,%rcx
    caf9:	83 e1 01             	and    $0x1,%ecx
    cafc:	42 8d 0c 49          	lea    (%rcx,%r9,2),%ecx
    cb00:	44 8d 49 4b          	lea    0x4b(%rcx),%r9d
    cb04:	d3 e6                	shl    %cl,%esi
    cb06:	49 c1 e1 03          	shl    $0x3,%r9
    cb0a:	44 8b 57 04          	mov    0x4(%rdi),%r10d
    cb0e:	66 48 0f 6e c8       	movq   %rax,%xmm1
    cb13:	66 0f ef c0          	pxor   %xmm0,%xmm0
    cb17:	89 48 38             	mov    %ecx,0x38(%rax)
    cb1a:	66 0f 6c c9          	punpcklqdq %xmm1,%xmm1
    cb1e:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    cb22:	44 85 d6             	test   %r10d,%esi
    cb25:	0f 85 c5 00 00 00    	jne    cbf0 <dispose_chunk+0x3e0>
    cb2b:	44 09 d6             	or     %r10d,%esi
    cb2e:	49 01 f9             	add    %rdi,%r9
    cb31:	89 77 04             	mov    %esi,0x4(%rdi)
    cb34:	48 89 84 cf 58 02 00 	mov    %rax,0x258(%rdi,%rcx,8)
    cb3b:	00 
    cb3c:	4c 89 48 30          	mov    %r9,0x30(%rax)
    cb40:	0f 11 48 10          	movups %xmm1,0x10(%rax)
    cb44:	48 83 c4 08          	add    $0x8,%rsp
    cb48:	5b                   	pop    %rbx
    cb49:	5d                   	pop    %rbp
    cb4a:	c3                   	ret    
    cb4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    cb50:	43 8d 4c 1b 09       	lea    0x9(%r11,%r11,1),%ecx
    cb55:	4c 8b 4e 10          	mov    0x10(%rsi),%r9
    cb59:	4c 8b 56 18          	mov    0x18(%rsi),%r10
    cb5d:	48 8d 0c cf          	lea    (%rdi,%rcx,8),%rcx
    cb61:	4c 39 c9             	cmp    %r9,%rcx
    cb64:	0f 85 53 03 00 00    	jne    cebd <dispose_chunk+0x6ad>
    cb6a:	4d 39 d1             	cmp    %r10,%r9
    cb6d:	0f 84 75 02 00 00    	je     cde8 <dispose_chunk+0x5d8>
    cb73:	4d 39 c2             	cmp    %r8,%r10
    cb76:	0f 83 aa 01 00 00    	jae    cd26 <dispose_chunk+0x516>
    cb7c:	0f 1f 40 00          	nopl   0x0(%rax)
    cb80:	e8 b2 59 00 00       	call   12537 <abort>
    cb85:	0f 1f 00             	nopl   (%rax)
    cb88:	be 01 00 00 00       	mov    $0x1,%esi
    cb8d:	41 b9 58 02 00 00    	mov    $0x258,%r9d
    cb93:	e9 72 ff ff ff       	jmp    cb0a <dispose_chunk+0x2fa>
    cb98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    cb9f:	00 
    cba0:	41 09 d1             	or     %edx,%r9d
    cba3:	48 89 f2             	mov    %rsi,%rdx
    cba6:	44 89 0f             	mov    %r9d,(%rdi)
    cba9:	e9 db fd ff ff       	jmp    c989 <dispose_chunk+0x179>
    cbae:	66 90                	xchg   %ax,%ax
    cbb0:	44 8d 5c 09 09       	lea    0x9(%rcx,%rcx,1),%r11d
    cbb5:	4c 8b 48 10          	mov    0x10(%rax),%r9
    cbb9:	4c 8b 50 18          	mov    0x18(%rax),%r10
    cbbd:	4e 8d 1c df          	lea    (%rdi,%r11,8),%r11
    cbc1:	4d 39 cb             	cmp    %r9,%r11
    cbc4:	0f 85 46 03 00 00    	jne    cf10 <dispose_chunk+0x700>
    cbca:	4d 39 d1             	cmp    %r10,%r9
    cbcd:	0f 84 b5 02 00 00    	je     ce88 <dispose_chunk+0x678>
    cbd3:	4d 39 c2             	cmp    %r8,%r10
    cbd6:	72 a8                	jb     cb80 <dispose_chunk+0x370>
    cbd8:	49 39 42 10          	cmp    %rax,0x10(%r10)
    cbdc:	75 a2                	jne    cb80 <dispose_chunk+0x370>
    cbde:	4d 89 51 18          	mov    %r10,0x18(%r9)
    cbe2:	4d 89 4a 10          	mov    %r9,0x10(%r10)
    cbe6:	e9 39 fd ff ff       	jmp    c924 <dispose_chunk+0x114>
    cbeb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    cbf0:	89 ce                	mov    %ecx,%esi
    cbf2:	48 8b b4 f7 58 02 00 	mov    0x258(%rdi,%rsi,8),%rsi
    cbf9:	00 
    cbfa:	48 89 d7             	mov    %rdx,%rdi
    cbfd:	83 f9 1f             	cmp    $0x1f,%ecx
    cc00:	74 34                	je     cc36 <dispose_chunk+0x426>
    cc02:	89 cf                	mov    %ecx,%edi
    cc04:	b9 39 00 00 00       	mov    $0x39,%ecx
    cc09:	d1 ef                	shr    %edi
    cc0b:	29 f9                	sub    %edi,%ecx
    cc0d:	48 89 d7             	mov    %rdx,%rdi
    cc10:	48 d3 e7             	shl    %cl,%rdi
    cc13:	eb 21                	jmp    cc36 <dispose_chunk+0x426>
    cc15:	0f 1f 00             	nopl   (%rax)
    cc18:	48 89 f9             	mov    %rdi,%rcx
    cc1b:	48 01 ff             	add    %rdi,%rdi
    cc1e:	48 c1 e9 3f          	shr    $0x3f,%rcx
    cc22:	48 83 c1 04          	add    $0x4,%rcx
    cc26:	4c 8b 0c ce          	mov    (%rsi,%rcx,8),%r9
    cc2a:	4d 85 c9             	test   %r9,%r9
    cc2d:	0f 84 d5 00 00 00    	je     cd08 <dispose_chunk+0x4f8>
    cc33:	4c 89 ce             	mov    %r9,%rsi
    cc36:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    cc3a:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    cc3e:	48 39 d1             	cmp    %rdx,%rcx
    cc41:	75 d5                	jne    cc18 <dispose_chunk+0x408>
    cc43:	48 8b 56 10          	mov    0x10(%rsi),%rdx
    cc47:	66 48 0f 6e d6       	movq   %rsi,%xmm2
    cc4c:	66 48 0f 6e c2       	movq   %rdx,%xmm0
    cc51:	66 0f 6c c2          	punpcklqdq %xmm2,%xmm0
    cc55:	4c 39 c6             	cmp    %r8,%rsi
    cc58:	0f 82 22 ff ff ff    	jb     cb80 <dispose_chunk+0x370>
    cc5e:	4c 39 c2             	cmp    %r8,%rdx
    cc61:	0f 82 19 ff ff ff    	jb     cb80 <dispose_chunk+0x370>
    cc67:	48 89 42 18          	mov    %rax,0x18(%rdx)
    cc6b:	48 89 46 10          	mov    %rax,0x10(%rsi)
    cc6f:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
    cc76:	00 
    cc77:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    cc7b:	e9 19 fd ff ff       	jmp    c999 <dispose_chunk+0x189>
    cc80:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    cc84:	49 89 c9             	mov    %rcx,%r9
    cc87:	49 f7 d1             	not    %r9
    cc8a:	41 83 e1 03          	and    $0x3,%r9d
    cc8e:	0f 85 90 fc ff ff    	jne    c924 <dispose_chunk+0x114>
    cc94:	48 83 e1 fe          	and    $0xfffffffffffffffe,%rcx
    cc98:	48 89 57 08          	mov    %rdx,0x8(%rdi)
    cc9c:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
    cca0:	48 89 d1             	mov    %rdx,%rcx
    cca3:	48 83 c9 01          	or     $0x1,%rcx
    cca7:	48 89 48 08          	mov    %rcx,0x8(%rax)
    ccab:	48 89 16             	mov    %rdx,(%rsi)
    ccae:	e9 e6 fc ff ff       	jmp    c999 <dispose_chunk+0x189>
    ccb3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    ccb8:	be 00 00 00 80       	mov    $0x80000000,%esi
    ccbd:	41 b9 50 03 00 00    	mov    $0x350,%r9d
    ccc3:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    ccc8:	e9 3d fe ff ff       	jmp    cb0a <dispose_chunk+0x2fa>
    cccd:	0f 1f 00             	nopl   (%rax)
    ccd0:	48 03 57 10          	add    0x10(%rdi),%rdx
    ccd4:	48 89 47 28          	mov    %rax,0x28(%rdi)
    ccd8:	48 89 57 10          	mov    %rdx,0x10(%rdi)
    ccdc:	48 83 ca 01          	or     $0x1,%rdx
    cce0:	48 89 50 08          	mov    %rdx,0x8(%rax)
    cce4:	48 39 d8             	cmp    %rbx,%rax
    cce7:	0f 85 ac fc ff ff    	jne    c999 <dispose_chunk+0x189>
    cced:	48 c7 47 20 00 00 00 	movq   $0x0,0x20(%rdi)
    ccf4:	00 
    ccf5:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
    ccfc:	00 
    ccfd:	e9 97 fc ff ff       	jmp    c999 <dispose_chunk+0x189>
    cd02:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    cd08:	48 8d 14 ce          	lea    (%rsi,%rcx,8),%rdx
    cd0c:	4c 39 c2             	cmp    %r8,%rdx
    cd0f:	0f 82 6b fe ff ff    	jb     cb80 <dispose_chunk+0x370>
    cd15:	48 89 04 ce          	mov    %rax,(%rsi,%rcx,8)
    cd19:	48 89 70 30          	mov    %rsi,0x30(%rax)
    cd1d:	0f 11 48 10          	movups %xmm1,0x10(%rax)
    cd21:	e9 73 fc ff ff       	jmp    c999 <dispose_chunk+0x189>
    cd26:	49 39 72 10          	cmp    %rsi,0x10(%r10)
    cd2a:	0f 85 50 fe ff ff    	jne    cb80 <dispose_chunk+0x370>
    cd30:	4d 89 51 18          	mov    %r10,0x18(%r9)
    cd34:	4d 89 4a 10          	mov    %r9,0x10(%r10)
    cd38:	e9 53 fd ff ff       	jmp    ca90 <dispose_chunk+0x280>
    cd3d:	0f 1f 00             	nopl   (%rax)
    cd40:	48 03 57 08          	add    0x8(%rdi),%rdx
    cd44:	48 89 47 20          	mov    %rax,0x20(%rdi)
    cd48:	48 89 d1             	mov    %rdx,%rcx
    cd4b:	48 89 57 08          	mov    %rdx,0x8(%rdi)
    cd4f:	48 83 c9 01          	or     $0x1,%rcx
    cd53:	48 89 48 08          	mov    %rcx,0x8(%rax)
    cd57:	48 89 14 10          	mov    %rdx,(%rax,%rdx,1)
    cd5b:	e9 39 fc ff ff       	jmp    c999 <dispose_chunk+0x189>
    cd60:	48 8b 4e 28          	mov    0x28(%rsi),%rcx
    cd64:	4c 8d 4e 28          	lea    0x28(%rsi),%r9
    cd68:	48 85 c9             	test   %rcx,%rcx
    cd6b:	0f 84 cf 01 00 00    	je     cf40 <dispose_chunk+0x730>
    cd71:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    cd78:	4d 89 cb             	mov    %r9,%r11
    cd7b:	49 89 ca             	mov    %rcx,%r10
    cd7e:	4c 8d 49 28          	lea    0x28(%rcx),%r9
    cd82:	48 8b 49 28          	mov    0x28(%rcx),%rcx
    cd86:	48 85 c9             	test   %rcx,%rcx
    cd89:	75 ed                	jne    cd78 <dispose_chunk+0x568>
    cd8b:	49 8b 4a 20          	mov    0x20(%r10),%rcx
    cd8f:	4d 8d 4a 20          	lea    0x20(%r10),%r9
    cd93:	48 85 c9             	test   %rcx,%rcx
    cd96:	75 e0                	jne    cd78 <dispose_chunk+0x568>
    cd98:	4d 39 c3             	cmp    %r8,%r11
    cd9b:	0f 82 df fd ff ff    	jb     cb80 <dispose_chunk+0x370>
    cda1:	49 c7 03 00 00 00 00 	movq   $0x0,(%r11)
    cda8:	48 85 ed             	test   %rbp,%rbp
    cdab:	0f 84 df fc ff ff    	je     ca90 <dispose_chunk+0x280>
    cdb1:	8b 4e 38             	mov    0x38(%rsi),%ecx
    cdb4:	4c 8d 49 4a          	lea    0x4a(%rcx),%r9
    cdb8:	48 39 b4 cf 58 02 00 	cmp    %rsi,0x258(%rdi,%rcx,8)
    cdbf:	00 
    cdc0:	0f 84 b0 01 00 00    	je     cf76 <dispose_chunk+0x766>
    cdc6:	4c 39 c5             	cmp    %r8,%rbp
    cdc9:	0f 82 b1 fd ff ff    	jb     cb80 <dispose_chunk+0x370>
    cdcf:	48 39 75 20          	cmp    %rsi,0x20(%rbp)
    cdd3:	0f 84 b1 01 00 00    	je     cf8a <dispose_chunk+0x77a>
    cdd9:	4c 89 55 28          	mov    %r10,0x28(%rbp)
    cddd:	e9 64 fc ff ff       	jmp    ca46 <dispose_chunk+0x236>
    cde2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    cde8:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    cded:	44 89 d9             	mov    %r11d,%ecx
    cdf0:	d3 c6                	rol    %cl,%esi
    cdf2:	21 37                	and    %esi,(%rdi)
    cdf4:	e9 97 fc ff ff       	jmp    ca90 <dispose_chunk+0x280>
    cdf9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    ce00:	48 8b 48 28          	mov    0x28(%rax),%rcx
    ce04:	4c 8d 48 28          	lea    0x28(%rax),%r9
    ce08:	48 85 c9             	test   %rcx,%rcx
    ce0b:	0f 84 41 01 00 00    	je     cf52 <dispose_chunk+0x742>
    ce11:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    ce18:	4d 89 cb             	mov    %r9,%r11
    ce1b:	49 89 ca             	mov    %rcx,%r10
    ce1e:	4c 8d 49 28          	lea    0x28(%rcx),%r9
    ce22:	48 8b 49 28          	mov    0x28(%rcx),%rcx
    ce26:	48 85 c9             	test   %rcx,%rcx
    ce29:	75 ed                	jne    ce18 <dispose_chunk+0x608>
    ce2b:	49 8b 4a 20          	mov    0x20(%r10),%rcx
    ce2f:	4d 8d 4a 20          	lea    0x20(%r10),%r9
    ce33:	48 85 c9             	test   %rcx,%rcx
    ce36:	75 e0                	jne    ce18 <dispose_chunk+0x608>
    ce38:	4d 39 c3             	cmp    %r8,%r11
    ce3b:	0f 82 3f fd ff ff    	jb     cb80 <dispose_chunk+0x370>
    ce41:	49 c7 03 00 00 00 00 	movq   $0x0,(%r11)
    ce48:	48 85 db             	test   %rbx,%rbx
    ce4b:	0f 84 d3 fa ff ff    	je     c924 <dispose_chunk+0x114>
    ce51:	8b 48 38             	mov    0x38(%rax),%ecx
    ce54:	4c 8d 49 4a          	lea    0x4a(%rcx),%r9
    ce58:	48 39 84 cf 58 02 00 	cmp    %rax,0x258(%rdi,%rcx,8)
    ce5f:	00 
    ce60:	0f 84 1a 01 00 00    	je     cf80 <dispose_chunk+0x770>
    ce66:	4c 39 c3             	cmp    %r8,%rbx
    ce69:	0f 82 11 fd ff ff    	jb     cb80 <dispose_chunk+0x370>
    ce6f:	48 39 43 20          	cmp    %rax,0x20(%rbx)
    ce73:	0f 84 1a 01 00 00    	je     cf93 <dispose_chunk+0x783>
    ce79:	4c 89 53 28          	mov    %r10,0x28(%rbx)
    ce7d:	e9 58 fa ff ff       	jmp    c8da <dispose_chunk+0xca>
    ce82:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    ce88:	41 b9 fe ff ff ff    	mov    $0xfffffffe,%r9d
    ce8e:	41 d3 c1             	rol    %cl,%r9d
    ce91:	44 21 0f             	and    %r9d,(%rdi)
    ce94:	e9 8b fa ff ff       	jmp    c924 <dispose_chunk+0x114>
    ce99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    cea0:	4e 89 54 df 08       	mov    %r10,0x8(%rdi,%r11,8)
    cea5:	4d 85 d2             	test   %r10,%r10
    cea8:	0f 85 98 fb ff ff    	jne    ca46 <dispose_chunk+0x236>
    ceae:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    ceb3:	d3 c6                	rol    %cl,%esi
    ceb5:	21 77 04             	and    %esi,0x4(%rdi)
    ceb8:	e9 d3 fb ff ff       	jmp    ca90 <dispose_chunk+0x280>
    cebd:	4d 39 c1             	cmp    %r8,%r9
    cec0:	0f 82 ba fc ff ff    	jb     cb80 <dispose_chunk+0x370>
    cec6:	49 39 71 18          	cmp    %rsi,0x18(%r9)
    ceca:	0f 85 b0 fc ff ff    	jne    cb80 <dispose_chunk+0x370>
    ced0:	4d 39 d1             	cmp    %r10,%r9
    ced3:	0f 84 0f ff ff ff    	je     cde8 <dispose_chunk+0x5d8>
    ced9:	4c 39 d1             	cmp    %r10,%rcx
    cedc:	0f 84 4e fe ff ff    	je     cd30 <dispose_chunk+0x520>
    cee2:	e9 8c fc ff ff       	jmp    cb73 <dispose_chunk+0x363>
    cee7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    ceee:	00 00 
    cef0:	4e 89 54 df 08       	mov    %r10,0x8(%rdi,%r11,8)
    cef5:	4d 85 d2             	test   %r10,%r10
    cef8:	0f 85 dc f9 ff ff    	jne    c8da <dispose_chunk+0xca>
    cefe:	41 b9 fe ff ff ff    	mov    $0xfffffffe,%r9d
    cf04:	41 d3 c1             	rol    %cl,%r9d
    cf07:	44 21 4f 04          	and    %r9d,0x4(%rdi)
    cf0b:	e9 14 fa ff ff       	jmp    c924 <dispose_chunk+0x114>
    cf10:	4d 39 c1             	cmp    %r8,%r9
    cf13:	0f 82 67 fc ff ff    	jb     cb80 <dispose_chunk+0x370>
    cf19:	49 39 41 18          	cmp    %rax,0x18(%r9)
    cf1d:	0f 85 5d fc ff ff    	jne    cb80 <dispose_chunk+0x370>
    cf23:	4d 39 d1             	cmp    %r10,%r9
    cf26:	0f 84 5c ff ff ff    	je     ce88 <dispose_chunk+0x678>
    cf2c:	4d 39 d3             	cmp    %r10,%r11
    cf2f:	0f 84 a9 fc ff ff    	je     cbde <dispose_chunk+0x3ce>
    cf35:	e9 99 fc ff ff       	jmp    cbd3 <dispose_chunk+0x3c3>
    cf3a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    cf40:	48 8b 4e 20          	mov    0x20(%rsi),%rcx
    cf44:	48 85 c9             	test   %rcx,%rcx
    cf47:	74 53                	je     cf9c <dispose_chunk+0x78c>
    cf49:	4c 8d 4e 20          	lea    0x20(%rsi),%r9
    cf4d:	e9 26 fe ff ff       	jmp    cd78 <dispose_chunk+0x568>
    cf52:	48 8b 48 20          	mov    0x20(%rax),%rcx
    cf56:	48 85 c9             	test   %rcx,%rcx
    cf59:	74 75                	je     cfd0 <dispose_chunk+0x7c0>
    cf5b:	4c 8d 48 20          	lea    0x20(%rax),%r9
    cf5f:	e9 b4 fe ff ff       	jmp    ce18 <dispose_chunk+0x608>
    cf64:	4c 89 55 20          	mov    %r10,0x20(%rbp)
    cf68:	e9 d4 fa ff ff       	jmp    ca41 <dispose_chunk+0x231>
    cf6d:	4c 89 53 20          	mov    %r10,0x20(%rbx)
    cf71:	e9 5f f9 ff ff       	jmp    c8d5 <dispose_chunk+0xc5>
    cf76:	4e 89 54 cf 08       	mov    %r10,0x8(%rdi,%r9,8)
    cf7b:	e9 c6 fa ff ff       	jmp    ca46 <dispose_chunk+0x236>
    cf80:	4e 89 54 cf 08       	mov    %r10,0x8(%rdi,%r9,8)
    cf85:	e9 50 f9 ff ff       	jmp    c8da <dispose_chunk+0xca>
    cf8a:	4c 89 55 20          	mov    %r10,0x20(%rbp)
    cf8e:	e9 b3 fa ff ff       	jmp    ca46 <dispose_chunk+0x236>
    cf93:	4c 89 53 20          	mov    %r10,0x20(%rbx)
    cf97:	e9 3e f9 ff ff       	jmp    c8da <dispose_chunk+0xca>
    cf9c:	48 85 ed             	test   %rbp,%rbp
    cf9f:	0f 84 eb fa ff ff    	je     ca90 <dispose_chunk+0x280>
    cfa5:	44 8b 4e 38          	mov    0x38(%rsi),%r9d
    cfa9:	4c 89 c9             	mov    %r9,%rcx
    cfac:	4a 39 b4 cf 58 02 00 	cmp    %rsi,0x258(%rdi,%r9,8)
    cfb3:	00 
    cfb4:	74 4f                	je     d005 <dispose_chunk+0x7f5>
    cfb6:	4c 39 c5             	cmp    %r8,%rbp
    cfb9:	0f 82 c1 fb ff ff    	jb     cb80 <dispose_chunk+0x370>
    cfbf:	48 39 75 20          	cmp    %rsi,0x20(%rbp)
    cfc3:	74 60                	je     d025 <dispose_chunk+0x815>
    cfc5:	31 c9                	xor    %ecx,%ecx
    cfc7:	48 89 4d 28          	mov    %rcx,0x28(%rbp)
    cfcb:	e9 c0 fa ff ff       	jmp    ca90 <dispose_chunk+0x280>
    cfd0:	48 85 db             	test   %rbx,%rbx
    cfd3:	0f 84 4b f9 ff ff    	je     c924 <dispose_chunk+0x114>
    cfd9:	44 8b 48 38          	mov    0x38(%rax),%r9d
    cfdd:	4c 89 c9             	mov    %r9,%rcx
    cfe0:	4a 39 84 cf 58 02 00 	cmp    %rax,0x258(%rdi,%r9,8)
    cfe7:	00 
    cfe8:	74 2b                	je     d015 <dispose_chunk+0x805>
    cfea:	4c 39 c3             	cmp    %r8,%rbx
    cfed:	0f 82 8d fb ff ff    	jb     cb80 <dispose_chunk+0x370>
    cff3:	48 39 43 20          	cmp    %rax,0x20(%rbx)
    cff7:	74 37                	je     d030 <dispose_chunk+0x820>
    cff9:	45 31 db             	xor    %r11d,%r11d
    cffc:	4c 89 5b 28          	mov    %r11,0x28(%rbx)
    d000:	e9 1f f9 ff ff       	jmp    c924 <dispose_chunk+0x114>
    d005:	45 31 d2             	xor    %r10d,%r10d
    d008:	4e 89 94 cf 58 02 00 	mov    %r10,0x258(%rdi,%r9,8)
    d00f:	00 
    d010:	e9 99 fe ff ff       	jmp    ceae <dispose_chunk+0x69e>
    d015:	45 31 d2             	xor    %r10d,%r10d
    d018:	4e 89 94 cf 58 02 00 	mov    %r10,0x258(%rdi,%r9,8)
    d01f:	00 
    d020:	e9 d9 fe ff ff       	jmp    cefe <dispose_chunk+0x6ee>
    d025:	31 f6                	xor    %esi,%esi
    d027:	48 89 75 20          	mov    %rsi,0x20(%rbp)
    d02b:	e9 60 fa ff ff       	jmp    ca90 <dispose_chunk+0x280>
    d030:	31 ed                	xor    %ebp,%ebp
    d032:	48 89 6b 20          	mov    %rbp,0x20(%rbx)
    d036:	e9 e9 f8 ff ff       	jmp    c924 <dispose_chunk+0x114>
    d03b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000d040 <init_mparams.isra.0>:
    d040:	48 83 ec 18          	sub    $0x18,%rsp
    d044:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    d04b:	00 00 
    d04d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    d052:	b8 01 00 00 00       	mov    $0x1,%eax
    d057:	87 05 d3 dd 01 00    	xchg   %eax,0x1ddd3(%rip)        # 2ae30 <malloc_global_mutex>
    d05d:	85 c0                	test   %eax,%eax
    d05f:	0f 85 8b 00 00 00    	jne    d0f0 <init_mparams.isra.0+0xb0>
    d065:	48 83 3d 93 dd 01 00 	cmpq   $0x0,0x1dd93(%rip)        # 2ae00 <mparams>
    d06c:	00 
    d06d:	75 5d                	jne    d0cc <init_mparams.isra.0+0x8c>
    d06f:	66 0f 6f 05 89 60 00 	movdqa 0x6089(%rip),%xmm0        # 13100 <g_dyn_entry_table+0x80>
    d076:	00 
    d077:	48 89 e7             	mov    %rsp,%rdi
    d07a:	be 08 00 00 00       	mov    $0x8,%esi
    d07f:	c7 05 9f dd 01 00 02 	movl   $0x2,0x1dd9f(%rip)        # 2ae28 <mparams+0x28>
    d086:	00 00 00 
    d089:	48 c7 05 1c dd 01 00 	movq   $0x2,0x1dd1c(%rip)        # 2adb0 <_gm_+0x370>
    d090:	02 00 00 00 
    d094:	0f 11 05 6d dd 01 00 	movups %xmm0,0x1dd6d(%rip)        # 2ae08 <mparams+0x8>
    d09b:	66 0f 6f 05 6d 60 00 	movdqa 0x606d(%rip),%xmm0        # 13110 <g_dyn_entry_table+0x90>
    d0a2:	00 
    d0a3:	0f 11 05 6e dd 01 00 	movups %xmm0,0x1dd6e(%rip)        # 2ae18 <mparams+0x18>
    d0aa:	e8 b1 8c ff ff       	call   5d60 <sgx_read_rand>
    d0af:	85 c0                	test   %eax,%eax
    d0b1:	75 69                	jne    d11c <init_mparams.isra.0+0xdc>
    d0b3:	48 8b 04 24          	mov    (%rsp),%rax
    d0b7:	48 35 55 55 55 55    	xor    $0x55555555,%rax
    d0bd:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    d0c1:	48 83 c8 08          	or     $0x8,%rax
    d0c5:	48 89 05 34 dd 01 00 	mov    %rax,0x1dd34(%rip)        # 2ae00 <mparams>
    d0cc:	c7 05 5a dd 01 00 00 	movl   $0x0,0x1dd5a(%rip)        # 2ae30 <malloc_global_mutex>
    d0d3:	00 00 00 
    d0d6:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    d0db:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    d0e2:	00 00 
    d0e4:	75 31                	jne    d117 <init_mparams.isra.0+0xd7>
    d0e6:	48 83 c4 18          	add    $0x18,%rsp
    d0ea:	c3                   	ret    
    d0eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    d0f0:	48 8d 15 39 dd 01 00 	lea    0x1dd39(%rip),%rdx        # 2ae30 <malloc_global_mutex>
    d0f7:	b9 01 00 00 00       	mov    $0x1,%ecx
    d0fc:	0f 1f 40 00          	nopl   0x0(%rax)
    d100:	8b 02                	mov    (%rdx),%eax
    d102:	85 c0                	test   %eax,%eax
    d104:	75 fa                	jne    d100 <init_mparams.isra.0+0xc0>
    d106:	89 c8                	mov    %ecx,%eax
    d108:	87 05 22 dd 01 00    	xchg   %eax,0x1dd22(%rip)        # 2ae30 <malloc_global_mutex>
    d10e:	85 c0                	test   %eax,%eax
    d110:	75 ee                	jne    d100 <init_mparams.isra.0+0xc0>
    d112:	e9 4e ff ff ff       	jmp    d065 <init_mparams.isra.0+0x25>
    d117:	e8 d4 38 00 00       	call   109f0 <__stack_chk_fail>
    d11c:	e8 16 54 00 00       	call   12537 <abort>
    d121:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    d128:	00 00 00 
    d12b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000d130 <dlmalloc>:
    d130:	f3 0f 1e fa          	endbr64 
    d134:	41 57                	push   %r15
    d136:	41 56                	push   %r14
    d138:	41 55                	push   %r13
    d13a:	41 54                	push   %r12
    d13c:	55                   	push   %rbp
    d13d:	48 89 fd             	mov    %rdi,%rbp
    d140:	53                   	push   %rbx
    d141:	48 83 ec 18          	sub    $0x18,%rsp
    d145:	48 83 3d b3 dc 01 00 	cmpq   $0x0,0x1dcb3(%rip)        # 2ae00 <mparams>
    d14c:	00 
    d14d:	0f 84 55 01 00 00    	je     d2a8 <dlmalloc+0x178>
    d153:	f6 05 56 dc 01 00 02 	testb  $0x2,0x1dc56(%rip)        # 2adb0 <_gm_+0x370>
    d15a:	0f 85 5a 01 00 00    	jne    d2ba <dlmalloc+0x18a>
    d160:	48 81 fd e0 00 00 00 	cmp    $0xe0,%rbp
    d167:	0f 87 fb 00 00 00    	ja     d268 <dlmalloc+0x138>
    d16d:	48 83 fd 0e          	cmp    $0xe,%rbp
    d171:	0f 87 d9 00 00 00    	ja     d250 <dlmalloc+0x120>
    d177:	b9 04 00 00 00       	mov    $0x4,%ecx
    d17c:	41 bc 20 00 00 00    	mov    $0x20,%r12d
    d182:	8b 15 b8 d8 01 00    	mov    0x1d8b8(%rip),%edx        # 2aa40 <_gm_>
    d188:	4c 8d 2d b1 d8 01 00 	lea    0x1d8b1(%rip),%r13        # 2aa40 <_gm_>
    d18f:	89 d0                	mov    %edx,%eax
    d191:	d3 e8                	shr    %cl,%eax
    d193:	a8 03                	test   $0x3,%al
    d195:	0f 84 d5 01 00 00    	je     d370 <dlmalloc+0x240>
    d19b:	f7 d0                	not    %eax
    d19d:	83 e0 01             	and    $0x1,%eax
    d1a0:	01 c1                	add    %eax,%ecx
    d1a2:	8d 44 09 09          	lea    0x9(%rcx,%rcx,1),%eax
    d1a6:	49 8d 74 c5 00       	lea    0x0(%r13,%rax,8),%rsi
    d1ab:	48 8b 5e 10          	mov    0x10(%rsi),%rbx
    d1af:	48 8b 43 10          	mov    0x10(%rbx),%rax
    d1b3:	48 39 c6             	cmp    %rax,%rsi
    d1b6:	0f 84 a4 07 00 00    	je     d960 <dlmalloc+0x830>
    d1bc:	48 3b 05 95 d8 01 00 	cmp    0x1d895(%rip),%rax        # 2aa58 <_gm_+0x18>
    d1c3:	0f 82 c7 05 00 00    	jb     d790 <dlmalloc+0x660>
    d1c9:	48 39 58 18          	cmp    %rbx,0x18(%rax)
    d1cd:	0f 85 bd 05 00 00    	jne    d790 <dlmalloc+0x660>
    d1d3:	48 89 70 18          	mov    %rsi,0x18(%rax)
    d1d7:	48 89 46 10          	mov    %rax,0x10(%rsi)
    d1db:	c1 e1 03             	shl    $0x3,%ecx
    d1de:	89 c8                	mov    %ecx,%eax
    d1e0:	83 c8 03             	or     $0x3,%eax
    d1e3:	48 89 43 08          	mov    %rax,0x8(%rbx)
    d1e7:	48 8d 04 0b          	lea    (%rbx,%rcx,1),%rax
    d1eb:	48 83 c3 10          	add    $0x10,%rbx
    d1ef:	48 83 48 08 01       	orq    $0x1,0x8(%rax)
    d1f4:	4c 33 2d 05 dc 01 00 	xor    0x1dc05(%rip),%r13        # 2ae00 <mparams>
    d1fb:	4c 89 28             	mov    %r13,(%rax)
    d1fe:	48 85 db             	test   %rbx,%rbx
    d201:	0f 84 96 00 00 00    	je     d29d <dlmalloc+0x16d>
    d207:	e8 74 a1 ff ff       	call   7380 <get_heap_base>
    d20c:	48 39 c3             	cmp    %rax,%rbx
    d20f:	0f 82 7b 05 00 00    	jb     d790 <dlmalloc+0x660>
    d215:	48 01 dd             	add    %rbx,%rbp
    d218:	0f 82 72 05 00 00    	jb     d790 <dlmalloc+0x660>
    d21e:	31 ff                	xor    %edi,%edi
    d220:	e8 2b f4 ff ff       	call   c650 <sbrk>
    d225:	48 39 e8             	cmp    %rbp,%rax
    d228:	0f 82 62 05 00 00    	jb     d790 <dlmalloc+0x660>
    d22e:	f6 05 7b db 01 00 02 	testb  $0x2,0x1db7b(%rip)        # 2adb0 <_gm_+0x370>
    d235:	0f 85 35 05 00 00    	jne    d770 <dlmalloc+0x640>
    d23b:	48 83 c4 18          	add    $0x18,%rsp
    d23f:	48 89 d8             	mov    %rbx,%rax
    d242:	5b                   	pop    %rbx
    d243:	5d                   	pop    %rbp
    d244:	41 5c                	pop    %r12
    d246:	41 5d                	pop    %r13
    d248:	41 5e                	pop    %r14
    d24a:	41 5f                	pop    %r15
    d24c:	c3                   	ret    
    d24d:	0f 1f 00             	nopl   (%rax)
    d250:	4c 8d 65 1f          	lea    0x1f(%rbp),%r12
    d254:	49 83 e4 f0          	and    $0xfffffffffffffff0,%r12
    d258:	4c 89 e1             	mov    %r12,%rcx
    d25b:	48 c1 e9 03          	shr    $0x3,%rcx
    d25f:	e9 1e ff ff ff       	jmp    d182 <dlmalloc+0x52>
    d264:	0f 1f 40 00          	nopl   0x0(%rax)
    d268:	4c 8b 05 d9 d7 01 00 	mov    0x1d7d9(%rip),%r8        # 2aa48 <_gm_+0x8>
    d26f:	4c 8d 2d ca d7 01 00 	lea    0x1d7ca(%rip),%r13        # 2aa40 <_gm_>
    d276:	4c 89 c6             	mov    %r8,%rsi
    d279:	48 81 fd 7f ff ff ff 	cmp    $0xffffffffffffff7f,%rbp
    d280:	76 76                	jbe    d2f8 <dlmalloc+0x1c8>
    d282:	48 8b 05 77 db 01 00 	mov    0x1db77(%rip),%rax        # 2ae00 <mparams>
    d289:	49 83 f8 ff          	cmp    $0xffffffffffffffff,%r8
    d28d:	0f 84 5d 02 00 00    	je     d4f0 <dlmalloc+0x3c0>
    d293:	48 85 c0             	test   %rax,%rax
    d296:	75 05                	jne    d29d <dlmalloc+0x16d>
    d298:	e8 a3 fd ff ff       	call   d040 <init_mparams.isra.0>
    d29d:	31 db                	xor    %ebx,%ebx
    d29f:	eb 8d                	jmp    d22e <dlmalloc+0xfe>
    d2a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    d2a8:	e8 93 fd ff ff       	call   d040 <init_mparams.isra.0>
    d2ad:	f6 05 fc da 01 00 02 	testb  $0x2,0x1dafc(%rip)        # 2adb0 <_gm_+0x370>
    d2b4:	0f 84 a6 fe ff ff    	je     d160 <dlmalloc+0x30>
    d2ba:	b8 01 00 00 00       	mov    $0x1,%eax
    d2bf:	87 05 ef da 01 00    	xchg   %eax,0x1daef(%rip)        # 2adb4 <_gm_+0x374>
    d2c5:	85 c0                	test   %eax,%eax
    d2c7:	0f 84 93 fe ff ff    	je     d160 <dlmalloc+0x30>
    d2cd:	ba 01 00 00 00       	mov    $0x1,%edx
    d2d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    d2d8:	8b 05 d6 da 01 00    	mov    0x1dad6(%rip),%eax        # 2adb4 <_gm_+0x374>
    d2de:	85 c0                	test   %eax,%eax
    d2e0:	75 f6                	jne    d2d8 <dlmalloc+0x1a8>
    d2e2:	89 d0                	mov    %edx,%eax
    d2e4:	87 05 ca da 01 00    	xchg   %eax,0x1daca(%rip)        # 2adb4 <_gm_+0x374>
    d2ea:	85 c0                	test   %eax,%eax
    d2ec:	75 ea                	jne    d2d8 <dlmalloc+0x1a8>
    d2ee:	e9 6d fe ff ff       	jmp    d160 <dlmalloc+0x30>
    d2f3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    d2f8:	44 8b 0d 45 d7 01 00 	mov    0x1d745(%rip),%r9d        # 2aa44 <_gm_+0x4>
    d2ff:	4c 8d 65 1f          	lea    0x1f(%rbp),%r12
    d303:	49 83 e4 f0          	and    $0xfffffffffffffff0,%r12
    d307:	45 85 c9             	test   %r9d,%r9d
    d30a:	0f 85 20 02 00 00    	jne    d530 <dlmalloc+0x400>
    d310:	4c 39 e6             	cmp    %r12,%rsi
    d313:	0f 83 7f 01 00 00    	jae    d498 <dlmalloc+0x368>
    d319:	48 8b 05 30 d7 01 00 	mov    0x1d730(%rip),%rax        # 2aa50 <_gm_+0x10>
    d320:	48 8b 15 d9 da 01 00 	mov    0x1dad9(%rip),%rdx        # 2ae00 <mparams>
    d327:	49 39 c4             	cmp    %rax,%r12
    d32a:	0f 83 b0 06 00 00    	jae    d9e0 <dlmalloc+0x8b0>
    d330:	48 8b 1d 31 d7 01 00 	mov    0x1d731(%rip),%rbx        # 2aa68 <_gm_+0x28>
    d337:	4c 29 e0             	sub    %r12,%rax
    d33a:	4c 31 ea             	xor    %r13,%rdx
    d33d:	48 89 05 0c d7 01 00 	mov    %rax,0x1d70c(%rip)        # 2aa50 <_gm_+0x10>
    d344:	48 83 c8 01          	or     $0x1,%rax
    d348:	4a 8d 0c 23          	lea    (%rbx,%r12,1),%rcx
    d34c:	49 83 cc 03          	or     $0x3,%r12
    d350:	48 89 0d 11 d7 01 00 	mov    %rcx,0x1d711(%rip)        # 2aa68 <_gm_+0x28>
    d357:	48 89 41 08          	mov    %rax,0x8(%rcx)
    d35b:	4c 89 63 08          	mov    %r12,0x8(%rbx)
    d35f:	48 89 11             	mov    %rdx,(%rcx)
    d362:	48 83 c3 10          	add    $0x10,%rbx
    d366:	e9 93 fe ff ff       	jmp    d1fe <dlmalloc+0xce>
    d36b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    d370:	48 8b 35 d1 d6 01 00 	mov    0x1d6d1(%rip),%rsi        # 2aa48 <_gm_+0x8>
    d377:	4c 39 e6             	cmp    %r12,%rsi
    d37a:	0f 83 18 01 00 00    	jae    d498 <dlmalloc+0x368>
    d380:	85 c0                	test   %eax,%eax
    d382:	0f 84 10 04 00 00    	je     d798 <dlmalloc+0x668>
    d388:	bf 01 00 00 00       	mov    $0x1,%edi
    d38d:	d3 e0                	shl    %cl,%eax
    d38f:	41 89 f9             	mov    %edi,%r9d
    d392:	41 d3 e1             	shl    %cl,%r9d
    d395:	45 01 c9             	add    %r9d,%r9d
    d398:	45 89 c8             	mov    %r9d,%r8d
    d39b:	41 f7 d8             	neg    %r8d
    d39e:	45 09 c8             	or     %r9d,%r8d
    d3a1:	44 21 c0             	and    %r8d,%eax
    d3a4:	89 c1                	mov    %eax,%ecx
    d3a6:	f7 d9                	neg    %ecx
    d3a8:	21 c1                	and    %eax,%ecx
    d3aa:	f3 0f bc c9          	tzcnt  %ecx,%ecx
    d3ae:	8d 44 09 09          	lea    0x9(%rcx,%rcx,1),%eax
    d3b2:	4d 8d 44 c5 00       	lea    0x0(%r13,%rax,8),%r8
    d3b7:	49 8b 58 10          	mov    0x10(%r8),%rbx
    d3bb:	48 8b 43 10          	mov    0x10(%rbx),%rax
    d3bf:	49 39 c0             	cmp    %rax,%r8
    d3c2:	0f 84 d1 05 00 00    	je     d999 <dlmalloc+0x869>
    d3c8:	48 3b 05 89 d6 01 00 	cmp    0x1d689(%rip),%rax        # 2aa58 <_gm_+0x18>
    d3cf:	0f 82 bb 03 00 00    	jb     d790 <dlmalloc+0x660>
    d3d5:	48 39 58 18          	cmp    %rbx,0x18(%rax)
    d3d9:	0f 85 b1 03 00 00    	jne    d790 <dlmalloc+0x660>
    d3df:	4c 89 40 18          	mov    %r8,0x18(%rax)
    d3e3:	49 89 40 10          	mov    %rax,0x10(%r8)
    d3e7:	8d 04 cd 00 00 00 00 	lea    0x0(,%rcx,8),%eax
    d3ee:	48 8b 3d 0b da 01 00 	mov    0x1da0b(%rip),%rdi        # 2ae00 <mparams>
    d3f5:	48 89 c2             	mov    %rax,%rdx
    d3f8:	48 89 c1             	mov    %rax,%rcx
    d3fb:	48 01 d8             	add    %rbx,%rax
    d3fe:	4c 29 e2             	sub    %r12,%rdx
    d401:	4c 31 ef             	xor    %r13,%rdi
    d404:	48 83 fa 1f          	cmp    $0x1f,%rdx
    d408:	0f 86 8d 0d 00 00    	jbe    e19b <dlmalloc+0x106b>
    d40e:	4c 89 e1             	mov    %r12,%rcx
    d411:	49 01 dc             	add    %rbx,%r12
    d414:	48 83 c9 03          	or     $0x3,%rcx
    d418:	48 89 4b 08          	mov    %rcx,0x8(%rbx)
    d41c:	48 89 d1             	mov    %rdx,%rcx
    d41f:	48 83 c9 01          	or     $0x1,%rcx
    d423:	49 89 3c 24          	mov    %rdi,(%r12)
    d427:	49 89 4c 24 08       	mov    %rcx,0x8(%r12)
    d42c:	48 89 10             	mov    %rdx,(%rax)
    d42f:	48 85 f6             	test   %rsi,%rsi
    d432:	74 4d                	je     d481 <dlmalloc+0x351>
    d434:	48 c1 ee 03          	shr    $0x3,%rsi
    d438:	bf 01 00 00 00       	mov    $0x1,%edi
    d43d:	48 8b 05 1c d6 01 00 	mov    0x1d61c(%rip),%rax        # 2aa60 <_gm_+0x20>
    d444:	48 89 f1             	mov    %rsi,%rcx
    d447:	8d 74 36 09          	lea    0x9(%rsi,%rsi,1),%esi
    d44b:	4d 8d 44 f5 00       	lea    0x0(%r13,%rsi,8),%r8
    d450:	8b 35 ea d5 01 00    	mov    0x1d5ea(%rip),%esi        # 2aa40 <_gm_>
    d456:	d3 e7                	shl    %cl,%edi
    d458:	85 fe                	test   %edi,%esi
    d45a:	0f 84 a9 10 00 00    	je     e509 <dlmalloc+0x13d9>
    d460:	49 8b 48 10          	mov    0x10(%r8),%rcx
    d464:	48 3b 0d ed d5 01 00 	cmp    0x1d5ed(%rip),%rcx        # 2aa58 <_gm_+0x18>
    d46b:	0f 82 1f 03 00 00    	jb     d790 <dlmalloc+0x660>
    d471:	49 89 40 10          	mov    %rax,0x10(%r8)
    d475:	48 89 41 18          	mov    %rax,0x18(%rcx)
    d479:	48 89 48 10          	mov    %rcx,0x10(%rax)
    d47d:	4c 89 40 18          	mov    %r8,0x18(%rax)
    d481:	48 89 15 c0 d5 01 00 	mov    %rdx,0x1d5c0(%rip)        # 2aa48 <_gm_+0x8>
    d488:	4c 89 25 d1 d5 01 00 	mov    %r12,0x1d5d1(%rip)        # 2aa60 <_gm_+0x20>
    d48f:	e9 ce fe ff ff       	jmp    d362 <dlmalloc+0x232>
    d494:	0f 1f 40 00          	nopl   0x0(%rax)
    d498:	48 8b 1d c1 d5 01 00 	mov    0x1d5c1(%rip),%rbx        # 2aa60 <_gm_+0x20>
    d49f:	48 8b 3d 5a d9 01 00 	mov    0x1d95a(%rip),%rdi        # 2ae00 <mparams>
    d4a6:	48 89 f2             	mov    %rsi,%rdx
    d4a9:	4c 29 e2             	sub    %r12,%rdx
    d4ac:	48 8d 04 33          	lea    (%rbx,%rsi,1),%rax
    d4b0:	4c 31 ef             	xor    %r13,%rdi
    d4b3:	48 83 fa 1f          	cmp    $0x1f,%rdx
    d4b7:	0f 86 83 0a 00 00    	jbe    df40 <dlmalloc+0xe10>
    d4bd:	48 89 d6             	mov    %rdx,%rsi
    d4c0:	4a 8d 0c 23          	lea    (%rbx,%r12,1),%rcx
    d4c4:	49 83 cc 03          	or     $0x3,%r12
    d4c8:	48 89 15 79 d5 01 00 	mov    %rdx,0x1d579(%rip)        # 2aa48 <_gm_+0x8>
    d4cf:	48 83 ce 01          	or     $0x1,%rsi
    d4d3:	48 89 0d 86 d5 01 00 	mov    %rcx,0x1d586(%rip)        # 2aa60 <_gm_+0x20>
    d4da:	48 89 71 08          	mov    %rsi,0x8(%rcx)
    d4de:	48 89 10             	mov    %rdx,(%rax)
    d4e1:	4c 89 63 08          	mov    %r12,0x8(%rbx)
    d4e5:	48 89 39             	mov    %rdi,(%rcx)
    d4e8:	e9 75 fe ff ff       	jmp    d362 <dlmalloc+0x232>
    d4ed:	0f 1f 00             	nopl   (%rax)
    d4f0:	48 8b 1d 69 d5 01 00 	mov    0x1d569(%rip),%rbx        # 2aa60 <_gm_+0x20>
    d4f7:	48 c7 c6 ff ff ff ff 	mov    $0xffffffffffffffff,%rsi
    d4fe:	48 8d 43 ff          	lea    -0x1(%rbx),%rax
    d502:	48 c7 05 3b d5 01 00 	movq   $0x0,0x1d53b(%rip)        # 2aa48 <_gm_+0x8>
    d509:	00 00 00 00 
    d50d:	48 c7 05 48 d5 01 00 	movq   $0x0,0x1d548(%rip)        # 2aa60 <_gm_+0x20>
    d514:	00 00 00 00 
    d518:	48 89 73 08          	mov    %rsi,0x8(%rbx)
    d51c:	48 83 48 08 01       	orq    $0x1,0x8(%rax)
    d521:	4c 33 2d d8 d8 01 00 	xor    0x1d8d8(%rip),%r13        # 2ae00 <mparams>
    d528:	4c 89 28             	mov    %r13,(%rax)
    d52b:	e9 32 fe ff ff       	jmp    d362 <dlmalloc+0x232>
    d530:	4c 89 e0             	mov    %r12,%rax
    d533:	4c 89 e7             	mov    %r12,%rdi
    d536:	48 c1 e8 08          	shr    $0x8,%rax
    d53a:	48 f7 df             	neg    %rdi
    d53d:	41 89 c2             	mov    %eax,%r10d
    d540:	85 c0                	test   %eax,%eax
    d542:	0f 85 28 04 00 00    	jne    d970 <dlmalloc+0x840>
    d548:	48 8b 15 49 d7 01 00 	mov    0x1d749(%rip),%rdx        # 2ac98 <_gm_+0x258>
    d54f:	b9 39 00 00 00       	mov    $0x39,%ecx
    d554:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    d559:	48 85 d2             	test   %rdx,%rdx
    d55c:	0f 84 52 04 00 00    	je     d9b4 <dlmalloc+0x884>
    d562:	4d 89 e3             	mov    %r12,%r11
    d565:	49 d3 e3             	shl    %cl,%r11
    d568:	31 c9                	xor    %ecx,%ecx
    d56a:	31 db                	xor    %ebx,%ebx
    d56c:	eb 05                	jmp    d573 <dlmalloc+0x443>
    d56e:	66 90                	xchg   %ax,%ax
    d570:	4d 01 db             	add    %r11,%r11
    d573:	48 8b 42 08          	mov    0x8(%rdx),%rax
    d577:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    d57b:	4c 29 e0             	sub    %r12,%rax
    d57e:	48 39 f8             	cmp    %rdi,%rax
    d581:	73 0f                	jae    d592 <dlmalloc+0x462>
    d583:	48 85 c0             	test   %rax,%rax
    d586:	0f 84 c3 0b 00 00    	je     e14f <dlmalloc+0x101f>
    d58c:	48 89 c7             	mov    %rax,%rdi
    d58f:	48 89 d3             	mov    %rdx,%rbx
    d592:	48 8b 42 28          	mov    0x28(%rdx),%rax
    d596:	4d 89 de             	mov    %r11,%r14
    d599:	49 c1 ee 3f          	shr    $0x3f,%r14
    d59d:	4a 8b 54 f2 20       	mov    0x20(%rdx,%r14,8),%rdx
    d5a2:	48 85 c0             	test   %rax,%rax
    d5a5:	74 07                	je     d5ae <dlmalloc+0x47e>
    d5a7:	48 39 d0             	cmp    %rdx,%rax
    d5aa:	48 0f 45 c8          	cmovne %rax,%rcx
    d5ae:	48 85 d2             	test   %rdx,%rdx
    d5b1:	75 bd                	jne    d570 <dlmalloc+0x440>
    d5b3:	48 89 c8             	mov    %rcx,%rax
    d5b6:	48 09 d8             	or     %rbx,%rax
    d5b9:	0f 84 eb 03 00 00    	je     d9aa <dlmalloc+0x87a>
    d5bf:	48 85 c9             	test   %rcx,%rcx
    d5c2:	75 0f                	jne    d5d3 <dlmalloc+0x4a3>
    d5c4:	eb 35                	jmp    d5fb <dlmalloc+0x4cb>
    d5c6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    d5cd:	00 00 00 
    d5d0:	48 89 c1             	mov    %rax,%rcx
    d5d3:	48 8b 41 08          	mov    0x8(%rcx),%rax
    d5d7:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    d5db:	4c 29 e0             	sub    %r12,%rax
    d5de:	48 39 f8             	cmp    %rdi,%rax
    d5e1:	73 06                	jae    d5e9 <dlmalloc+0x4b9>
    d5e3:	48 89 c7             	mov    %rax,%rdi
    d5e6:	48 89 cb             	mov    %rcx,%rbx
    d5e9:	48 8b 41 20          	mov    0x20(%rcx),%rax
    d5ed:	48 85 c0             	test   %rax,%rax
    d5f0:	75 de                	jne    d5d0 <dlmalloc+0x4a0>
    d5f2:	48 8b 41 28          	mov    0x28(%rcx),%rax
    d5f6:	48 85 c0             	test   %rax,%rax
    d5f9:	75 d5                	jne    d5d0 <dlmalloc+0x4a0>
    d5fb:	48 85 db             	test   %rbx,%rbx
    d5fe:	0f 84 0c fd ff ff    	je     d310 <dlmalloc+0x1e0>
    d604:	4c 89 c0             	mov    %r8,%rax
    d607:	4c 29 e0             	sub    %r12,%rax
    d60a:	48 39 c7             	cmp    %rax,%rdi
    d60d:	0f 83 fd fc ff ff    	jae    d310 <dlmalloc+0x1e0>
    d613:	4c 8b 1d 3e d4 01 00 	mov    0x1d43e(%rip),%r11        # 2aa58 <_gm_+0x18>
    d61a:	4c 39 db             	cmp    %r11,%rbx
    d61d:	0f 82 6d 01 00 00    	jb     d790 <dlmalloc+0x660>
    d623:	4e 8d 14 23          	lea    (%rbx,%r12,1),%r10
    d627:	4c 39 d3             	cmp    %r10,%rbx
    d62a:	0f 83 60 01 00 00    	jae    d790 <dlmalloc+0x660>
    d630:	4c 8b 73 18          	mov    0x18(%rbx),%r14
    d634:	4c 8b 7b 30          	mov    0x30(%rbx),%r15
    d638:	4c 39 f3             	cmp    %r14,%rbx
    d63b:	0f 84 2d 0d 00 00    	je     e36e <dlmalloc+0x123e>
    d641:	48 8b 43 10          	mov    0x10(%rbx),%rax
    d645:	4c 39 d8             	cmp    %r11,%rax
    d648:	0f 82 42 01 00 00    	jb     d790 <dlmalloc+0x660>
    d64e:	48 3b 58 18          	cmp    0x18(%rax),%rbx
    d652:	0f 85 38 01 00 00    	jne    d790 <dlmalloc+0x660>
    d658:	49 3b 5e 10          	cmp    0x10(%r14),%rbx
    d65c:	0f 85 2e 01 00 00    	jne    d790 <dlmalloc+0x660>
    d662:	4c 89 70 18          	mov    %r14,0x18(%rax)
    d666:	49 89 46 10          	mov    %rax,0x10(%r14)
    d66a:	4d 85 ff             	test   %r15,%r15
    d66d:	74 71                	je     d6e0 <dlmalloc+0x5b0>
    d66f:	8b 53 38             	mov    0x38(%rbx),%edx
    d672:	48 89 d0             	mov    %rdx,%rax
    d675:	49 3b 9c d5 58 02 00 	cmp    0x258(%r13,%rdx,8),%rbx
    d67c:	00 
    d67d:	0f 84 ca 0f 00 00    	je     e64d <dlmalloc+0x151d>
    d683:	4d 39 df             	cmp    %r11,%r15
    d686:	0f 82 04 01 00 00    	jb     d790 <dlmalloc+0x660>
    d68c:	49 3b 5f 20          	cmp    0x20(%r15),%rbx
    d690:	0f 84 3e 11 00 00    	je     e7d4 <dlmalloc+0x16a4>
    d696:	4d 89 77 28          	mov    %r14,0x28(%r15)
    d69a:	4d 85 f6             	test   %r14,%r14
    d69d:	74 41                	je     d6e0 <dlmalloc+0x5b0>
    d69f:	4d 39 de             	cmp    %r11,%r14
    d6a2:	0f 82 e8 00 00 00    	jb     d790 <dlmalloc+0x660>
    d6a8:	48 8b 43 20          	mov    0x20(%rbx),%rax
    d6ac:	4d 89 7e 30          	mov    %r15,0x30(%r14)
    d6b0:	48 85 c0             	test   %rax,%rax
    d6b3:	74 11                	je     d6c6 <dlmalloc+0x596>
    d6b5:	4c 39 d8             	cmp    %r11,%rax
    d6b8:	0f 82 d2 00 00 00    	jb     d790 <dlmalloc+0x660>
    d6be:	49 89 46 20          	mov    %rax,0x20(%r14)
    d6c2:	4c 89 70 30          	mov    %r14,0x30(%rax)
    d6c6:	48 8b 43 28          	mov    0x28(%rbx),%rax
    d6ca:	48 85 c0             	test   %rax,%rax
    d6cd:	74 11                	je     d6e0 <dlmalloc+0x5b0>
    d6cf:	4c 39 d8             	cmp    %r11,%rax
    d6d2:	0f 82 b8 00 00 00    	jb     d790 <dlmalloc+0x660>
    d6d8:	49 89 46 28          	mov    %rax,0x28(%r14)
    d6dc:	4c 89 70 30          	mov    %r14,0x30(%rax)
    d6e0:	48 8b 15 19 d7 01 00 	mov    0x1d719(%rip),%rdx        # 2ae00 <mparams>
    d6e7:	4c 31 ea             	xor    %r13,%rdx
    d6ea:	48 83 ff 1f          	cmp    $0x1f,%rdi
    d6ee:	0f 86 fa 0c 00 00    	jbe    e3ee <dlmalloc+0x12be>
    d6f4:	4c 89 e0             	mov    %r12,%rax
    d6f7:	48 89 f9             	mov    %rdi,%rcx
    d6fa:	48 83 c8 03          	or     $0x3,%rax
    d6fe:	48 c1 e9 03          	shr    $0x3,%rcx
    d702:	48 89 43 08          	mov    %rax,0x8(%rbx)
    d706:	48 89 f8             	mov    %rdi,%rax
    d709:	48 83 c8 01          	or     $0x1,%rax
    d70d:	49 89 12             	mov    %rdx,(%r10)
    d710:	49 89 42 08          	mov    %rax,0x8(%r10)
    d714:	49 89 3c 3a          	mov    %rdi,(%r10,%rdi,1)
    d718:	48 81 ff ff 00 00 00 	cmp    $0xff,%rdi
    d71f:	0f 87 e8 0c 00 00    	ja     e40d <dlmalloc+0x12dd>
    d725:	8d 44 09 09          	lea    0x9(%rcx,%rcx,1),%eax
    d729:	8b 35 11 d3 01 00    	mov    0x1d311(%rip),%esi        # 2aa40 <_gm_>
    d72f:	49 8d 54 c5 00       	lea    0x0(%r13,%rax,8),%rdx
    d734:	b8 01 00 00 00       	mov    $0x1,%eax
    d739:	d3 e0                	shl    %cl,%eax
    d73b:	85 c6                	test   %eax,%esi
    d73d:	0f 84 39 10 00 00    	je     e77c <dlmalloc+0x164c>
    d743:	48 8b 42 10          	mov    0x10(%rdx),%rax
    d747:	4c 39 d8             	cmp    %r11,%rax
    d74a:	72 44                	jb     d790 <dlmalloc+0x660>
    d74c:	4c 89 52 10          	mov    %r10,0x10(%rdx)
    d750:	4c 89 50 18          	mov    %r10,0x18(%rax)
    d754:	49 89 42 10          	mov    %rax,0x10(%r10)
    d758:	49 89 52 18          	mov    %rdx,0x18(%r10)
    d75c:	48 83 c3 10          	add    $0x10,%rbx
    d760:	4c 89 c6             	mov    %r8,%rsi
    d763:	0f 85 9e fa ff ff    	jne    d207 <dlmalloc+0xd7>
    d769:	e9 a2 fb ff ff       	jmp    d310 <dlmalloc+0x1e0>
    d76e:	66 90                	xchg   %ax,%ax
    d770:	c7 05 3a d6 01 00 00 	movl   $0x0,0x1d63a(%rip)        # 2adb4 <_gm_+0x374>
    d777:	00 00 00 
    d77a:	e9 bc fa ff ff       	jmp    d23b <dlmalloc+0x10b>
    d77f:	48 8b 42 10          	mov    0x10(%rdx),%rax
    d783:	48 3b 05 ce d2 01 00 	cmp    0x1d2ce(%rip),%rax        # 2aa58 <_gm_+0x18>
    d78a:	0f 83 57 06 00 00    	jae    dde7 <dlmalloc+0xcb7>
    d790:	e8 a2 4d 00 00       	call   12537 <abort>
    d795:	0f 1f 00             	nopl   (%rax)
    d798:	44 8b 0d a5 d2 01 00 	mov    0x1d2a5(%rip),%r9d        # 2aa44 <_gm_+0x4>
    d79f:	45 85 c9             	test   %r9d,%r9d
    d7a2:	0f 84 71 fb ff ff    	je     d319 <dlmalloc+0x1e9>
    d7a8:	44 89 c8             	mov    %r9d,%eax
    d7ab:	f7 d8                	neg    %eax
    d7ad:	44 21 c8             	and    %r9d,%eax
    d7b0:	f3 0f bc c0          	tzcnt  %eax,%eax
    d7b4:	49 8b 84 c5 58 02 00 	mov    0x258(%r13,%rax,8),%rax
    d7bb:	00 
    d7bc:	48 8b 78 08          	mov    0x8(%rax),%rdi
    d7c0:	48 89 c3             	mov    %rax,%rbx
    d7c3:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    d7c7:	4c 29 e7             	sub    %r12,%rdi
    d7ca:	eb 1d                	jmp    d7e9 <dlmalloc+0x6b9>
    d7cc:	0f 1f 40 00          	nopl   0x0(%rax)
    d7d0:	48 8b 41 08          	mov    0x8(%rcx),%rax
    d7d4:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    d7d8:	4c 29 e0             	sub    %r12,%rax
    d7db:	48 39 f8             	cmp    %rdi,%rax
    d7de:	73 06                	jae    d7e6 <dlmalloc+0x6b6>
    d7e0:	48 89 c7             	mov    %rax,%rdi
    d7e3:	48 89 cb             	mov    %rcx,%rbx
    d7e6:	48 89 c8             	mov    %rcx,%rax
    d7e9:	48 8b 48 20          	mov    0x20(%rax),%rcx
    d7ed:	48 85 c9             	test   %rcx,%rcx
    d7f0:	75 de                	jne    d7d0 <dlmalloc+0x6a0>
    d7f2:	48 8b 48 28          	mov    0x28(%rax),%rcx
    d7f6:	48 85 c9             	test   %rcx,%rcx
    d7f9:	75 d5                	jne    d7d0 <dlmalloc+0x6a0>
    d7fb:	4c 8b 1d 56 d2 01 00 	mov    0x1d256(%rip),%r11        # 2aa58 <_gm_+0x18>
    d802:	4c 39 db             	cmp    %r11,%rbx
    d805:	72 89                	jb     d790 <dlmalloc+0x660>
    d807:	4e 8d 14 23          	lea    (%rbx,%r12,1),%r10
    d80b:	4c 39 d3             	cmp    %r10,%rbx
    d80e:	73 80                	jae    d790 <dlmalloc+0x660>
    d810:	4c 8b 43 18          	mov    0x18(%rbx),%r8
    d814:	4c 8b 73 30          	mov    0x30(%rbx),%r14
    d818:	49 39 d8             	cmp    %rbx,%r8
    d81b:	0f 84 36 0d 00 00    	je     e557 <dlmalloc+0x1427>
    d821:	48 8b 43 10          	mov    0x10(%rbx),%rax
    d825:	4c 39 d8             	cmp    %r11,%rax
    d828:	0f 82 62 ff ff ff    	jb     d790 <dlmalloc+0x660>
    d82e:	48 39 58 18          	cmp    %rbx,0x18(%rax)
    d832:	0f 85 58 ff ff ff    	jne    d790 <dlmalloc+0x660>
    d838:	49 39 58 10          	cmp    %rbx,0x10(%r8)
    d83c:	0f 85 4e ff ff ff    	jne    d790 <dlmalloc+0x660>
    d842:	4c 89 40 18          	mov    %r8,0x18(%rax)
    d846:	49 89 40 10          	mov    %rax,0x10(%r8)
    d84a:	4d 85 f6             	test   %r14,%r14
    d84d:	74 71                	je     d8c0 <dlmalloc+0x790>
    d84f:	8b 4b 38             	mov    0x38(%rbx),%ecx
    d852:	48 89 c8             	mov    %rcx,%rax
    d855:	49 39 9c cd 58 02 00 	cmp    %rbx,0x258(%r13,%rcx,8)
    d85c:	00 
    d85d:	0f 84 14 10 00 00    	je     e877 <dlmalloc+0x1747>
    d863:	4d 39 de             	cmp    %r11,%r14
    d866:	0f 82 24 ff ff ff    	jb     d790 <dlmalloc+0x660>
    d86c:	49 39 5e 20          	cmp    %rbx,0x20(%r14)
    d870:	0f 84 00 11 00 00    	je     e976 <dlmalloc+0x1846>
    d876:	4d 89 46 28          	mov    %r8,0x28(%r14)
    d87a:	4d 85 c0             	test   %r8,%r8
    d87d:	74 41                	je     d8c0 <dlmalloc+0x790>
    d87f:	4d 39 d8             	cmp    %r11,%r8
    d882:	0f 82 08 ff ff ff    	jb     d790 <dlmalloc+0x660>
    d888:	48 8b 43 20          	mov    0x20(%rbx),%rax
    d88c:	4d 89 70 30          	mov    %r14,0x30(%r8)
    d890:	48 85 c0             	test   %rax,%rax
    d893:	74 11                	je     d8a6 <dlmalloc+0x776>
    d895:	4c 39 d8             	cmp    %r11,%rax
    d898:	0f 82 f2 fe ff ff    	jb     d790 <dlmalloc+0x660>
    d89e:	49 89 40 20          	mov    %rax,0x20(%r8)
    d8a2:	4c 89 40 30          	mov    %r8,0x30(%rax)
    d8a6:	48 8b 43 28          	mov    0x28(%rbx),%rax
    d8aa:	48 85 c0             	test   %rax,%rax
    d8ad:	74 11                	je     d8c0 <dlmalloc+0x790>
    d8af:	4c 39 d8             	cmp    %r11,%rax
    d8b2:	0f 82 d8 fe ff ff    	jb     d790 <dlmalloc+0x660>
    d8b8:	49 89 40 28          	mov    %rax,0x28(%r8)
    d8bc:	4c 89 40 30          	mov    %r8,0x30(%rax)
    d8c0:	48 8b 05 39 d5 01 00 	mov    0x1d539(%rip),%rax        # 2ae00 <mparams>
    d8c7:	4c 31 e8             	xor    %r13,%rax
    d8ca:	48 83 ff 1f          	cmp    $0x1f,%rdi
    d8ce:	0f 86 d2 0d 00 00    	jbe    e6a6 <dlmalloc+0x1576>
    d8d4:	4c 89 e1             	mov    %r12,%rcx
    d8d7:	48 83 c9 03          	or     $0x3,%rcx
    d8db:	48 89 4b 08          	mov    %rcx,0x8(%rbx)
    d8df:	49 89 02             	mov    %rax,(%r10)
    d8e2:	48 89 f8             	mov    %rdi,%rax
    d8e5:	48 83 c8 01          	or     $0x1,%rax
    d8e9:	49 89 42 08          	mov    %rax,0x8(%r10)
    d8ed:	49 89 3c 3a          	mov    %rdi,(%r10,%rdi,1)
    d8f1:	48 85 f6             	test   %rsi,%rsi
    d8f4:	74 46                	je     d93c <dlmalloc+0x80c>
    d8f6:	48 c1 ee 03          	shr    $0x3,%rsi
    d8fa:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    d900:	48 8b 05 59 d1 01 00 	mov    0x1d159(%rip),%rax        # 2aa60 <_gm_+0x20>
    d907:	48 89 f1             	mov    %rsi,%rcx
    d90a:	8d 74 36 09          	lea    0x9(%rsi,%rsi,1),%esi
    d90e:	41 d3 e0             	shl    %cl,%r8d
    d911:	4d 8d 4c f5 00       	lea    0x0(%r13,%rsi,8),%r9
    d916:	44 85 c2             	test   %r8d,%edx
    d919:	0f 84 79 0f 00 00    	je     e898 <dlmalloc+0x1768>
    d91f:	49 8b 51 10          	mov    0x10(%r9),%rdx
    d923:	4c 39 da             	cmp    %r11,%rdx
    d926:	0f 82 64 fe ff ff    	jb     d790 <dlmalloc+0x660>
    d92c:	49 89 41 10          	mov    %rax,0x10(%r9)
    d930:	48 89 42 18          	mov    %rax,0x18(%rdx)
    d934:	48 89 50 10          	mov    %rdx,0x10(%rax)
    d938:	4c 89 48 18          	mov    %r9,0x18(%rax)
    d93c:	48 89 3d 05 d1 01 00 	mov    %rdi,0x1d105(%rip)        # 2aa48 <_gm_+0x8>
    d943:	4c 89 15 16 d1 01 00 	mov    %r10,0x1d116(%rip)        # 2aa60 <_gm_+0x20>
    d94a:	48 83 c3 10          	add    $0x10,%rbx
    d94e:	0f 85 b3 f8 ff ff    	jne    d207 <dlmalloc+0xd7>
    d954:	48 8b 35 ed d0 01 00 	mov    0x1d0ed(%rip),%rsi        # 2aa48 <_gm_+0x8>
    d95b:	e9 b0 f9 ff ff       	jmp    d310 <dlmalloc+0x1e0>
    d960:	0f b3 ca             	btr    %ecx,%edx
    d963:	89 15 d7 d0 01 00    	mov    %edx,0x1d0d7(%rip)        # 2aa40 <_gm_>
    d969:	e9 6d f8 ff ff       	jmp    d1db <dlmalloc+0xab>
    d96e:	66 90                	xchg   %ax,%ax
    d970:	3d ff ff 00 00       	cmp    $0xffff,%eax
    d975:	0f 86 85 07 00 00    	jbe    e100 <dlmalloc+0xfd0>
    d97b:	48 8b 15 0e d4 01 00 	mov    0x1d40e(%rip),%rdx        # 2ad90 <_gm_+0x350>
    d982:	4d 89 e3             	mov    %r12,%r11
    d985:	41 ba 1f 00 00 00    	mov    $0x1f,%r10d
    d98b:	48 85 d2             	test   %rdx,%rdx
    d98e:	0f 85 d4 fb ff ff    	jne    d568 <dlmalloc+0x438>
    d994:	e9 77 f9 ff ff       	jmp    d310 <dlmalloc+0x1e0>
    d999:	d3 e7                	shl    %cl,%edi
    d99b:	f7 d7                	not    %edi
    d99d:	21 d7                	and    %edx,%edi
    d99f:	89 3d 9b d0 01 00    	mov    %edi,0x1d09b(%rip)        # 2aa40 <_gm_>
    d9a5:	e9 3d fa ff ff       	jmp    d3e7 <dlmalloc+0x2b7>
    d9aa:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    d9af:	44 89 d1             	mov    %r10d,%ecx
    d9b2:	d3 e0                	shl    %cl,%eax
    d9b4:	44 21 c8             	and    %r9d,%eax
    d9b7:	0f 84 53 f9 ff ff    	je     d310 <dlmalloc+0x1e0>
    d9bd:	89 c2                	mov    %eax,%edx
    d9bf:	31 db                	xor    %ebx,%ebx
    d9c1:	f7 da                	neg    %edx
    d9c3:	21 d0                	and    %edx,%eax
    d9c5:	f3 0f bc c0          	tzcnt  %eax,%eax
    d9c9:	49 8b 8c c5 58 02 00 	mov    0x258(%r13,%rax,8),%rcx
    d9d0:	00 
    d9d1:	48 85 c9             	test   %rcx,%rcx
    d9d4:	0f 85 f9 fb ff ff    	jne    d5d3 <dlmalloc+0x4a3>
    d9da:	e9 31 f9 ff ff       	jmp    d310 <dlmalloc+0x1e0>
    d9df:	90                   	nop
    d9e0:	48 85 d2             	test   %rdx,%rdx
    d9e3:	0f 84 74 12 00 00    	je     ec5d <dlmalloc+0x1b2d>
    d9e9:	48 8b 05 20 d4 01 00 	mov    0x1d420(%rip),%rax        # 2ae10 <mparams+0x10>
    d9f0:	49 8d 4c 04 5f       	lea    0x5f(%r12,%rax,1),%rcx
    d9f5:	48 f7 d8             	neg    %rax
    d9f8:	48 21 c1             	and    %rax,%rcx
    d9fb:	49 39 cc             	cmp    %rcx,%r12
    d9fe:	0f 83 99 f8 ff ff    	jae    d29d <dlmalloc+0x16d>
    da04:	48 8b 05 9d d3 01 00 	mov    0x1d39d(%rip),%rax        # 2ada8 <_gm_+0x368>
    da0b:	48 85 c0             	test   %rax,%rax
    da0e:	74 1d                	je     da2d <dlmalloc+0x8fd>
    da10:	48 8b 15 81 d3 01 00 	mov    0x1d381(%rip),%rdx        # 2ad98 <_gm_+0x358>
    da17:	48 8d 34 11          	lea    (%rcx,%rdx,1),%rsi
    da1b:	48 39 f2             	cmp    %rsi,%rdx
    da1e:	0f 83 79 f8 ff ff    	jae    d29d <dlmalloc+0x16d>
    da24:	48 39 f0             	cmp    %rsi,%rax
    da27:	0f 82 70 f8 ff ff    	jb     d29d <dlmalloc+0x16d>
    da2d:	f6 05 7c d3 01 00 04 	testb  $0x4,0x1d37c(%rip)        # 2adb0 <_gm_+0x370>
    da34:	0f 85 b9 00 00 00    	jne    daf3 <dlmalloc+0x9c3>
    da3a:	48 8b 15 27 d0 01 00 	mov    0x1d027(%rip),%rdx        # 2aa68 <_gm_+0x28>
    da41:	48 85 d2             	test   %rdx,%rdx
    da44:	0f 84 b6 05 00 00    	je     e000 <dlmalloc+0xed0>
    da4a:	4c 8d 35 67 d3 01 00 	lea    0x1d367(%rip),%r14        # 2adb8 <_gm_+0x378>
    da51:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    da58:	49 8b 06             	mov    (%r14),%rax
    da5b:	48 39 c2             	cmp    %rax,%rdx
    da5e:	72 0d                	jb     da6d <dlmalloc+0x93d>
    da60:	49 03 46 08          	add    0x8(%r14),%rax
    da64:	48 39 c2             	cmp    %rax,%rdx
    da67:	0f 82 44 07 00 00    	jb     e1b1 <dlmalloc+0x1081>
    da6d:	4d 8b 76 10          	mov    0x10(%r14),%r14
    da71:	4d 85 f6             	test   %r14,%r14
    da74:	75 e2                	jne    da58 <dlmalloc+0x928>
    da76:	b8 01 00 00 00       	mov    $0x1,%eax
    da7b:	87 05 af d3 01 00    	xchg   %eax,0x1d3af(%rip)        # 2ae30 <malloc_global_mutex>
    da81:	85 c0                	test   %eax,%eax
    da83:	0f 84 8a 05 00 00    	je     e013 <dlmalloc+0xee3>
    da89:	45 31 f6             	xor    %r14d,%r14d
    da8c:	48 8d 15 9d d3 01 00 	lea    0x1d39d(%rip),%rdx        # 2ae30 <malloc_global_mutex>
    da93:	be 01 00 00 00       	mov    $0x1,%esi
    da98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    da9f:	00 
    daa0:	8b 02                	mov    (%rdx),%eax
    daa2:	85 c0                	test   %eax,%eax
    daa4:	75 fa                	jne    daa0 <dlmalloc+0x970>
    daa6:	89 f0                	mov    %esi,%eax
    daa8:	87 05 82 d3 01 00    	xchg   %eax,0x1d382(%rip)        # 2ae30 <malloc_global_mutex>
    daae:	85 c0                	test   %eax,%eax
    dab0:	75 ee                	jne    daa0 <dlmalloc+0x970>
    dab2:	4d 85 f6             	test   %r14,%r14
    dab5:	0f 84 58 05 00 00    	je     e013 <dlmalloc+0xee3>
    dabb:	48 8b 05 4e d3 01 00 	mov    0x1d34e(%rip),%rax        # 2ae10 <mparams+0x10>
    dac2:	4c 8d 78 5f          	lea    0x5f(%rax),%r15
    dac6:	4c 2b 3d 83 cf 01 00 	sub    0x1cf83(%rip),%r15        # 2aa50 <_gm_+0x10>
    dacd:	48 f7 d8             	neg    %rax
    dad0:	4d 01 e7             	add    %r12,%r15
    dad3:	49 21 c7             	and    %rax,%r15
    dad6:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
    dadd:	ff ff 7f 
    dae0:	4c 39 f8             	cmp    %r15,%rax
    dae3:	0f 83 73 06 00 00    	jae    e15c <dlmalloc+0x102c>
    dae9:	c7 05 3d d3 01 00 00 	movl   $0x0,0x1d33d(%rip)        # 2ae30 <malloc_global_mutex>
    daf0:	00 00 00 
    daf3:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
    dafa:	ff ff 7f 
    dafd:	48 39 c8             	cmp    %rcx,%rax
    db00:	73 16                	jae    db18 <dlmalloc+0x9e8>
    db02:	e8 b9 33 00 00       	call   10ec0 <__errno_location>
    db07:	31 db                	xor    %ebx,%ebx
    db09:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
    db0f:	e9 1a f7 ff ff       	jmp    d22e <dlmalloc+0xfe>
    db14:	0f 1f 40 00          	nopl   0x0(%rax)
    db18:	b8 01 00 00 00       	mov    $0x1,%eax
    db1d:	87 05 0d d3 01 00    	xchg   %eax,0x1d30d(%rip)        # 2ae30 <malloc_global_mutex>
    db23:	48 8d 15 06 d3 01 00 	lea    0x1d306(%rip),%rdx        # 2ae30 <malloc_global_mutex>
    db2a:	be 01 00 00 00       	mov    $0x1,%esi
    db2f:	85 c0                	test   %eax,%eax
    db31:	0f 85 11 03 00 00    	jne    de48 <dlmalloc+0xd18>
    db37:	48 89 cf             	mov    %rcx,%rdi
    db3a:	e8 11 eb ff ff       	call   c650 <sbrk>
    db3f:	31 ff                	xor    %edi,%edi
    db41:	48 89 c3             	mov    %rax,%rbx
    db44:	e8 07 eb ff ff       	call   c650 <sbrk>
    db49:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
    db4d:	0f 95 c1             	setne  %cl
    db50:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    db54:	c7 05 d2 d2 01 00 00 	movl   $0x0,0x1d2d2(%rip)        # 2ae30 <malloc_global_mutex>
    db5b:	00 00 00 
    db5e:	0f 95 c2             	setne  %dl
    db61:	84 d1                	test   %dl,%cl
    db63:	74 9d                	je     db02 <dlmalloc+0x9d2>
    db65:	48 39 c3             	cmp    %rax,%rbx
    db68:	73 98                	jae    db02 <dlmalloc+0x9d2>
    db6a:	48 29 d8             	sub    %rbx,%rax
    db6d:	49 89 c7             	mov    %rax,%r15
    db70:	49 8d 44 24 50       	lea    0x50(%r12),%rax
    db75:	4c 39 f8             	cmp    %r15,%rax
    db78:	73 88                	jae    db02 <dlmalloc+0x9d2>
    db7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    db80:	48 8b 05 11 d2 01 00 	mov    0x1d211(%rip),%rax        # 2ad98 <_gm_+0x358>
    db87:	4c 01 f8             	add    %r15,%rax
    db8a:	48 39 05 0f d2 01 00 	cmp    %rax,0x1d20f(%rip)        # 2ada0 <_gm_+0x360>
    db91:	48 89 05 00 d2 01 00 	mov    %rax,0x1d200(%rip)        # 2ad98 <_gm_+0x358>
    db98:	73 07                	jae    dba1 <dlmalloc+0xa71>
    db9a:	48 89 05 ff d1 01 00 	mov    %rax,0x1d1ff(%rip)        # 2ada0 <_gm_+0x360>
    dba1:	48 8b 35 c0 ce 01 00 	mov    0x1cec0(%rip),%rsi        # 2aa68 <_gm_+0x28>
    dba8:	48 8d 05 09 d2 01 00 	lea    0x1d209(%rip),%rax        # 2adb8 <_gm_+0x378>
    dbaf:	48 85 f6             	test   %rsi,%rsi
    dbb2:	75 15                	jne    dbc9 <dlmalloc+0xa99>
    dbb4:	e9 a7 02 00 00       	jmp    de60 <dlmalloc+0xd30>
    dbb9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    dbc0:	48 8b 40 10          	mov    0x10(%rax),%rax
    dbc4:	48 85 c0             	test   %rax,%rax
    dbc7:	74 27                	je     dbf0 <dlmalloc+0xac0>
    dbc9:	48 8b 10             	mov    (%rax),%rdx
    dbcc:	48 8b 48 08          	mov    0x8(%rax),%rcx
    dbd0:	48 8d 3c 0a          	lea    (%rdx,%rcx,1),%rdi
    dbd4:	48 39 fb             	cmp    %rdi,%rbx
    dbd7:	75 e7                	jne    dbc0 <dlmalloc+0xa90>
    dbd9:	f6 40 18 08          	testb  $0x8,0x18(%rax)
    dbdd:	75 11                	jne    dbf0 <dlmalloc+0xac0>
    dbdf:	48 39 d6             	cmp    %rdx,%rsi
    dbe2:	72 0c                	jb     dbf0 <dlmalloc+0xac0>
    dbe4:	48 39 de             	cmp    %rbx,%rsi
    dbe7:	0f 82 ed 09 00 00    	jb     e5da <dlmalloc+0x14aa>
    dbed:	0f 1f 00             	nopl   (%rax)
    dbf0:	48 3b 1d 61 ce 01 00 	cmp    0x1ce61(%rip),%rbx        # 2aa58 <_gm_+0x18>
    dbf7:	73 07                	jae    dc00 <dlmalloc+0xad0>
    dbf9:	48 89 1d 58 ce 01 00 	mov    %rbx,0x1ce58(%rip)        # 2aa58 <_gm_+0x18>
    dc00:	4a 8d 14 3b          	lea    (%rbx,%r15,1),%rdx
    dc04:	48 8d 05 ad d1 01 00 	lea    0x1d1ad(%rip),%rax        # 2adb8 <_gm_+0x378>
    dc0b:	eb 10                	jmp    dc1d <dlmalloc+0xaed>
    dc0d:	0f 1f 00             	nopl   (%rax)
    dc10:	48 8b 40 10          	mov    0x10(%rax),%rax
    dc14:	48 85 c0             	test   %rax,%rax
    dc17:	0f 84 b3 05 00 00    	je     e1d0 <dlmalloc+0x10a0>
    dc1d:	48 39 10             	cmp    %rdx,(%rax)
    dc20:	75 ee                	jne    dc10 <dlmalloc+0xae0>
    dc22:	44 8b 48 18          	mov    0x18(%rax),%r9d
    dc26:	49 89 d8             	mov    %rbx,%r8
    dc29:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
    dc2d:	41 83 e0 0f          	and    $0xf,%r8d
    dc31:	41 83 e1 08          	and    $0x8,%r9d
    dc35:	0f 84 a5 05 00 00    	je     e1e0 <dlmalloc+0x10b0>
    dc3b:	48 8d 05 76 d1 01 00 	lea    0x1d176(%rip),%rax        # 2adb8 <_gm_+0x378>
    dc42:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    dc48:	48 8b 10             	mov    (%rax),%rdx
    dc4b:	48 39 d6             	cmp    %rdx,%rsi
    dc4e:	72 09                	jb     dc59 <dlmalloc+0xb29>
    dc50:	48 03 50 08          	add    0x8(%rax),%rdx
    dc54:	48 39 d6             	cmp    %rdx,%rsi
    dc57:	72 19                	jb     dc72 <dlmalloc+0xb42>
    dc59:	48 8b 40 10          	mov    0x10(%rax),%rax
    dc5d:	48 85 c0             	test   %rax,%rax
    dc60:	75 e6                	jne    dc48 <dlmalloc+0xb18>
    dc62:	48 8b 14 25 08 00 00 	mov    0x8,%rdx
    dc69:	00 
    dc6a:	48 03 14 25 00 00 00 	add    0x0,%rdx
    dc71:	00 
    dc72:	48 8d 42 b1          	lea    -0x4f(%rdx),%rax
    dc76:	48 c7 c1 a1 ff ff ff 	mov    $0xffffffffffffffa1,%rcx
    dc7d:	a8 0f                	test   $0xf,%al
    dc7f:	74 0a                	je     dc8b <dlmalloc+0xb5b>
    dc81:	48 f7 d8             	neg    %rax
    dc84:	83 e0 0f             	and    $0xf,%eax
    dc87:	48 8d 48 a1          	lea    -0x5f(%rax),%rcx
    dc8b:	48 01 d1             	add    %rdx,%rcx
    dc8e:	48 8d 46 20          	lea    0x20(%rsi),%rax
    dc92:	4d 8d 4f b0          	lea    -0x50(%r15),%r9
    dc96:	48 39 c1             	cmp    %rax,%rcx
    dc99:	48 0f 42 ce          	cmovb  %rsi,%rcx
    dc9d:	4c 8d 51 10          	lea    0x10(%rcx),%r10
    dca1:	4d 85 c0             	test   %r8,%r8
    dca4:	0f 84 86 02 00 00    	je     df30 <dlmalloc+0xe00>
    dcaa:	48 f7 df             	neg    %rdi
    dcad:	4c 89 c8             	mov    %r9,%rax
    dcb0:	83 e7 0f             	and    $0xf,%edi
    dcb3:	4c 8d 04 3b          	lea    (%rbx,%rdi,1),%r8
    dcb7:	48 29 f8             	sub    %rdi,%rax
    dcba:	48 89 05 8f cd 01 00 	mov    %rax,0x1cd8f(%rip)        # 2aa50 <_gm_+0x10>
    dcc1:	48 83 c8 01          	or     $0x1,%rax
    dcc5:	f3 0f 6f 15 eb d0 01 	movdqu 0x1d0eb(%rip),%xmm2        # 2adb8 <_gm_+0x378>
    dccc:	00 
    dccd:	4c 89 05 94 cd 01 00 	mov    %r8,0x1cd94(%rip)        # 2aa68 <_gm_+0x28>
    dcd4:	49 89 40 08          	mov    %rax,0x8(%r8)
    dcd8:	48 8b 05 41 d1 01 00 	mov    0x1d141(%rip),%rax        # 2ae20 <mparams+0x20>
    dcdf:	4a c7 44 0b 08 50 00 	movq   $0x50,0x8(%rbx,%r9,1)
    dce6:	00 00 
    dce8:	48 89 05 81 cd 01 00 	mov    %rax,0x1cd81(%rip)        # 2aa70 <_gm_+0x30>
    dcef:	48 8b 05 0a d1 01 00 	mov    0x1d10a(%rip),%rax        # 2ae00 <mparams>
    dcf6:	0f 11 51 10          	movups %xmm2,0x10(%rcx)
    dcfa:	f3 0f 6f 1d c6 d0 01 	movdqu 0x1d0c6(%rip),%xmm3        # 2adc8 <_gm_+0x388>
    dd01:	00 
    dd02:	4c 31 e8             	xor    %r13,%rax
    dd05:	48 c7 41 08 33 00 00 	movq   $0x33,0x8(%rcx)
    dd0c:	00 
    dd0d:	48 89 41 30          	mov    %rax,0x30(%rcx)
    dd11:	48 8d 41 38          	lea    0x38(%rcx),%rax
    dd15:	48 89 c7             	mov    %rax,%rdi
    dd18:	48 8d 41 40          	lea    0x40(%rcx),%rax
    dd1c:	0f 11 59 20          	movups %xmm3,0x20(%rcx)
    dd20:	48 f7 d7             	not    %rdi
    dd23:	48 89 1d 8e d0 01 00 	mov    %rbx,0x1d08e(%rip)        # 2adb8 <_gm_+0x378>
    dd2a:	48 01 d7             	add    %rdx,%rdi
    dd2d:	4c 89 3d 8c d0 01 00 	mov    %r15,0x1d08c(%rip)        # 2adc0 <_gm_+0x380>
    dd34:	48 c1 ef 03          	shr    $0x3,%rdi
    dd38:	4c 89 15 89 d0 01 00 	mov    %r10,0x1d089(%rip)        # 2adc8 <_gm_+0x388>
    dd3f:	c7 05 87 d0 01 00 00 	movl   $0x0,0x1d087(%rip)        # 2add0 <_gm_+0x390>
    dd46:	00 00 00 
    dd49:	83 e7 01             	and    $0x1,%edi
    dd4c:	48 c7 41 38 0b 00 00 	movq   $0xb,0x38(%rcx)
    dd53:	00 
    dd54:	48 39 d0             	cmp    %rdx,%rax
    dd57:	73 2f                	jae    dd88 <dlmalloc+0xc58>
    dd59:	48 85 ff             	test   %rdi,%rdi
    dd5c:	74 12                	je     dd70 <dlmalloc+0xc40>
    dd5e:	48 c7 00 0b 00 00 00 	movq   $0xb,(%rax)
    dd65:	48 8d 41 48          	lea    0x48(%rcx),%rax
    dd69:	48 39 d0             	cmp    %rdx,%rax
    dd6c:	73 1a                	jae    dd88 <dlmalloc+0xc58>
    dd6e:	66 90                	xchg   %ax,%ax
    dd70:	48 c7 00 0b 00 00 00 	movq   $0xb,(%rax)
    dd77:	48 83 c0 10          	add    $0x10,%rax
    dd7b:	48 c7 40 f8 0b 00 00 	movq   $0xb,-0x8(%rax)
    dd82:	00 
    dd83:	48 39 d0             	cmp    %rdx,%rax
    dd86:	72 e8                	jb     dd70 <dlmalloc+0xc40>
    dd88:	48 39 ce             	cmp    %rcx,%rsi
    dd8b:	0f 84 5f 02 00 00    	je     dff0 <dlmalloc+0xec0>
    dd91:	48 89 ca             	mov    %rcx,%rdx
    dd94:	48 83 61 08 fe       	andq   $0xfffffffffffffffe,0x8(%rcx)
    dd99:	48 29 f2             	sub    %rsi,%rdx
    dd9c:	48 89 d0             	mov    %rdx,%rax
    dd9f:	48 83 c8 01          	or     $0x1,%rax
    dda3:	48 89 46 08          	mov    %rax,0x8(%rsi)
    dda7:	48 89 11             	mov    %rdx,(%rcx)
    ddaa:	48 89 d1             	mov    %rdx,%rcx
    ddad:	48 c1 e9 03          	shr    $0x3,%rcx
    ddb1:	48 81 fa ff 00 00 00 	cmp    $0xff,%rdx
    ddb8:	0f 87 92 01 00 00    	ja     df50 <dlmalloc+0xe20>
    ddbe:	8d 44 09 09          	lea    0x9(%rcx,%rcx,1),%eax
    ddc2:	8b 3d 78 cc 01 00    	mov    0x1cc78(%rip),%edi        # 2aa40 <_gm_>
    ddc8:	49 8d 54 c5 00       	lea    0x0(%r13,%rax,8),%rdx
    ddcd:	b8 01 00 00 00       	mov    $0x1,%eax
    ddd2:	d3 e0                	shl    %cl,%eax
    ddd4:	85 c7                	test   %eax,%edi
    ddd6:	0f 85 a3 f9 ff ff    	jne    d77f <dlmalloc+0x64f>
    dddc:	09 c7                	or     %eax,%edi
    ddde:	48 89 d0             	mov    %rdx,%rax
    dde1:	89 3d 59 cc 01 00    	mov    %edi,0x1cc59(%rip)        # 2aa40 <_gm_>
    dde7:	48 89 72 10          	mov    %rsi,0x10(%rdx)
    ddeb:	48 89 70 18          	mov    %rsi,0x18(%rax)
    ddef:	48 89 56 18          	mov    %rdx,0x18(%rsi)
    ddf3:	48 89 46 10          	mov    %rax,0x10(%rsi)
    ddf7:	48 8b 05 52 cc 01 00 	mov    0x1cc52(%rip),%rax        # 2aa50 <_gm_+0x10>
    ddfe:	49 39 c4             	cmp    %rax,%r12
    de01:	0f 83 fb fc ff ff    	jae    db02 <dlmalloc+0x9d2>
    de07:	48 8b 1d 5a cc 01 00 	mov    0x1cc5a(%rip),%rbx        # 2aa68 <_gm_+0x28>
    de0e:	4c 29 e0             	sub    %r12,%rax
    de11:	4c 33 2d e8 cf 01 00 	xor    0x1cfe8(%rip),%r13        # 2ae00 <mparams>
    de18:	48 89 05 31 cc 01 00 	mov    %rax,0x1cc31(%rip)        # 2aa50 <_gm_+0x10>
    de1f:	48 83 c8 01          	or     $0x1,%rax
    de23:	4a 8d 14 23          	lea    (%rbx,%r12,1),%rdx
    de27:	49 83 cc 03          	or     $0x3,%r12
    de2b:	48 89 15 36 cc 01 00 	mov    %rdx,0x1cc36(%rip)        # 2aa68 <_gm_+0x28>
    de32:	48 89 42 08          	mov    %rax,0x8(%rdx)
    de36:	4c 89 63 08          	mov    %r12,0x8(%rbx)
    de3a:	4c 89 2a             	mov    %r13,(%rdx)
    de3d:	e9 20 f5 ff ff       	jmp    d362 <dlmalloc+0x232>
    de42:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    de48:	8b 02                	mov    (%rdx),%eax
    de4a:	85 c0                	test   %eax,%eax
    de4c:	75 fa                	jne    de48 <dlmalloc+0xd18>
    de4e:	89 f0                	mov    %esi,%eax
    de50:	87 05 da cf 01 00    	xchg   %eax,0x1cfda(%rip)        # 2ae30 <malloc_global_mutex>
    de56:	85 c0                	test   %eax,%eax
    de58:	75 ee                	jne    de48 <dlmalloc+0xd18>
    de5a:	e9 d8 fc ff ff       	jmp    db37 <dlmalloc+0xa07>
    de5f:	90                   	nop
    de60:	48 8b 05 f1 cb 01 00 	mov    0x1cbf1(%rip),%rax        # 2aa58 <_gm_+0x18>
    de67:	48 85 c0             	test   %rax,%rax
    de6a:	74 05                	je     de71 <dlmalloc+0xd41>
    de6c:	48 39 c3             	cmp    %rax,%rbx
    de6f:	73 07                	jae    de78 <dlmalloc+0xd48>
    de71:	48 89 1d e0 cb 01 00 	mov    %rbx,0x1cbe0(%rip)        # 2aa58 <_gm_+0x18>
    de78:	48 8b 05 81 cf 01 00 	mov    0x1cf81(%rip),%rax        # 2ae00 <mparams>
    de7f:	48 89 1d 32 cf 01 00 	mov    %rbx,0x1cf32(%rip)        # 2adb8 <_gm_+0x378>
    de86:	4c 89 3d 33 cf 01 00 	mov    %r15,0x1cf33(%rip)        # 2adc0 <_gm_+0x380>
    de8d:	c7 05 39 cf 01 00 00 	movl   $0x0,0x1cf39(%rip)        # 2add0 <_gm_+0x390>
    de94:	00 00 00 
    de97:	48 c7 05 d6 cb 01 00 	movq   $0xffffffffffffffff,0x1cbd6(%rip)        # 2aa78 <_gm_+0x38>
    de9e:	ff ff ff ff 
    dea2:	48 89 05 d7 cb 01 00 	mov    %rax,0x1cbd7(%rip)        # 2aa80 <_gm_+0x40>
    dea9:	48 8d 05 d8 cb 01 00 	lea    0x1cbd8(%rip),%rax        # 2aa88 <_gm_+0x48>
    deb0:	48 8d 90 00 02 00 00 	lea    0x200(%rax),%rdx
    deb7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    debe:	00 00 
    dec0:	66 48 0f 6e c0       	movq   %rax,%xmm0
    dec5:	48 83 c0 10          	add    $0x10,%rax
    dec9:	66 0f 6c c0          	punpcklqdq %xmm0,%xmm0
    decd:	0f 11 00             	movups %xmm0,(%rax)
    ded0:	48 39 d0             	cmp    %rdx,%rax
    ded3:	75 eb                	jne    dec0 <dlmalloc+0xd90>
    ded5:	49 83 ef 50          	sub    $0x50,%r15
    ded9:	48 8d 53 10          	lea    0x10(%rbx),%rdx
    dedd:	f6 c3 0f             	test   $0xf,%bl
    dee0:	0f 84 aa 02 00 00    	je     e190 <dlmalloc+0x1060>
    dee6:	48 f7 da             	neg    %rdx
    dee9:	4c 89 f8             	mov    %r15,%rax
    deec:	83 e2 0f             	and    $0xf,%edx
    deef:	48 8d 0c 13          	lea    (%rbx,%rdx,1),%rcx
    def3:	48 29 d0             	sub    %rdx,%rax
    def6:	48 89 c2             	mov    %rax,%rdx
    def9:	48 89 0d 68 cb 01 00 	mov    %rcx,0x1cb68(%rip)        # 2aa68 <_gm_+0x28>
    df00:	48 83 ca 01          	or     $0x1,%rdx
    df04:	48 89 05 45 cb 01 00 	mov    %rax,0x1cb45(%rip)        # 2aa50 <_gm_+0x10>
    df0b:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    df0f:	48 8b 15 0a cf 01 00 	mov    0x1cf0a(%rip),%rdx        # 2ae20 <mparams+0x20>
    df16:	4a c7 44 3b 08 50 00 	movq   $0x50,0x8(%rbx,%r15,1)
    df1d:	00 00 
    df1f:	48 89 15 4a cb 01 00 	mov    %rdx,0x1cb4a(%rip)        # 2aa70 <_gm_+0x30>
    df26:	e9 d3 fe ff ff       	jmp    ddfe <dlmalloc+0xcce>
    df2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    df30:	4c 89 c8             	mov    %r9,%rax
    df33:	49 89 d8             	mov    %rbx,%r8
    df36:	e9 7f fd ff ff       	jmp    dcba <dlmalloc+0xb8a>
    df3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    df40:	48 83 ce 03          	or     $0x3,%rsi
    df44:	e9 b9 f5 ff ff       	jmp    d502 <dlmalloc+0x3d2>
    df49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    df50:	48 89 d0             	mov    %rdx,%rax
    df53:	48 c1 e8 08          	shr    $0x8,%rax
    df57:	89 c1                	mov    %eax,%ecx
    df59:	85 c0                	test   %eax,%eax
    df5b:	0f 84 60 03 00 00    	je     e2c1 <dlmalloc+0x1191>
    df61:	3d ff ff 00 00       	cmp    $0xffff,%eax
    df66:	0f 87 ad 05 00 00    	ja     e519 <dlmalloc+0x13e9>
    df6c:	0f bd c1             	bsr    %ecx,%eax
    df6f:	b9 26 00 00 00       	mov    $0x26,%ecx
    df74:	48 89 d3             	mov    %rdx,%rbx
    df77:	bf 1f 00 00 00       	mov    $0x1f,%edi
    df7c:	83 f0 1f             	xor    $0x1f,%eax
    df7f:	29 c1                	sub    %eax,%ecx
    df81:	29 c7                	sub    %eax,%edi
    df83:	48 d3 eb             	shr    %cl,%rbx
    df86:	48 89 d9             	mov    %rbx,%rcx
    df89:	83 e1 01             	and    $0x1,%ecx
    df8c:	8d 0c 79             	lea    (%rcx,%rdi,2),%ecx
    df8f:	bf 01 00 00 00       	mov    $0x1,%edi
    df94:	44 8d 41 4b          	lea    0x4b(%rcx),%r8d
    df98:	d3 e7                	shl    %cl,%edi
    df9a:	49 c1 e0 03          	shl    $0x3,%r8
    df9e:	8b 05 a0 ca 01 00    	mov    0x1caa0(%rip),%eax        # 2aa44 <_gm_+0x4>
    dfa4:	66 48 0f 6e ce       	movq   %rsi,%xmm1
    dfa9:	66 0f ef c0          	pxor   %xmm0,%xmm0
    dfad:	89 4e 38             	mov    %ecx,0x38(%rsi)
    dfb0:	66 0f 6c c9          	punpcklqdq %xmm1,%xmm1
    dfb4:	0f 11 46 20          	movups %xmm0,0x20(%rsi)
    dfb8:	85 f8                	test   %edi,%eax
    dfba:	0f 85 11 03 00 00    	jne    e2d1 <dlmalloc+0x11a1>
    dfc0:	09 f8                	or     %edi,%eax
    dfc2:	4d 01 e8             	add    %r13,%r8
    dfc5:	49 89 b4 cd 58 02 00 	mov    %rsi,0x258(%r13,%rcx,8)
    dfcc:	00 
    dfcd:	89 05 71 ca 01 00    	mov    %eax,0x1ca71(%rip)        # 2aa44 <_gm_+0x4>
    dfd3:	48 8b 05 76 ca 01 00 	mov    0x1ca76(%rip),%rax        # 2aa50 <_gm_+0x10>
    dfda:	4c 89 46 30          	mov    %r8,0x30(%rsi)
    dfde:	0f 11 4e 10          	movups %xmm1,0x10(%rsi)
    dfe2:	e9 17 fe ff ff       	jmp    ddfe <dlmalloc+0xcce>
    dfe7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    dfee:	00 00 
    dff0:	48 8b 05 59 ca 01 00 	mov    0x1ca59(%rip),%rax        # 2aa50 <_gm_+0x10>
    dff7:	e9 02 fe ff ff       	jmp    ddfe <dlmalloc+0xcce>
    dffc:	0f 1f 40 00          	nopl   0x0(%rax)
    e000:	b8 01 00 00 00       	mov    $0x1,%eax
    e005:	87 05 25 ce 01 00    	xchg   %eax,0x1ce25(%rip)        # 2ae30 <malloc_global_mutex>
    e00b:	85 c0                	test   %eax,%eax
    e00d:	0f 85 76 fa ff ff    	jne    da89 <dlmalloc+0x959>
    e013:	31 ff                	xor    %edi,%edi
    e015:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    e01a:	e8 31 e6 ff ff       	call   c650 <sbrk>
    e01f:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    e024:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    e028:	49 89 c6             	mov    %rax,%r14
    e02b:	0f 84 b8 fa ff ff    	je     dae9 <dlmalloc+0x9b9>
    e031:	48 8b 15 d0 cd 01 00 	mov    0x1cdd0(%rip),%rdx        # 2ae08 <mparams+0x8>
    e038:	49 89 cf             	mov    %rcx,%r15
    e03b:	48 8d 42 ff          	lea    -0x1(%rdx),%rax
    e03f:	49 85 c6             	test   %rax,%r14
    e042:	74 0f                	je     e053 <dlmalloc+0xf23>
    e044:	4c 01 f0             	add    %r14,%rax
    e047:	48 f7 da             	neg    %rdx
    e04a:	4d 29 f7             	sub    %r14,%r15
    e04d:	48 21 d0             	and    %rdx,%rax
    e050:	49 01 c7             	add    %rax,%r15
    e053:	48 8b 05 3e cd 01 00 	mov    0x1cd3e(%rip),%rax        # 2ad98 <_gm_+0x358>
    e05a:	4d 39 fc             	cmp    %r15,%r12
    e05d:	0f 83 86 fa ff ff    	jae    dae9 <dlmalloc+0x9b9>
    e063:	48 ba fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rdx
    e06a:	ff ff 7f 
    e06d:	4c 39 fa             	cmp    %r15,%rdx
    e070:	0f 82 73 fa ff ff    	jb     dae9 <dlmalloc+0x9b9>
    e076:	48 8b 15 2b cd 01 00 	mov    0x1cd2b(%rip),%rdx        # 2ada8 <_gm_+0x368>
    e07d:	48 85 d2             	test   %rdx,%rdx
    e080:	74 16                	je     e098 <dlmalloc+0xf68>
    e082:	4a 8d 34 38          	lea    (%rax,%r15,1),%rsi
    e086:	48 39 f0             	cmp    %rsi,%rax
    e089:	0f 83 5a fa ff ff    	jae    dae9 <dlmalloc+0x9b9>
    e08f:	48 39 f2             	cmp    %rsi,%rdx
    e092:	0f 82 51 fa ff ff    	jb     dae9 <dlmalloc+0x9b9>
    e098:	4c 89 ff             	mov    %r15,%rdi
    e09b:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    e0a0:	e8 ab e5 ff ff       	call   c650 <sbrk>
    e0a5:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    e0aa:	49 39 c6             	cmp    %rax,%r14
    e0ad:	48 89 c3             	mov    %rax,%rbx
    e0b0:	74 3c                	je     e0ee <dlmalloc+0xfbe>
    e0b2:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
    e0b6:	0f 84 2d fa ff ff    	je     dae9 <dlmalloc+0x9b9>
    e0bc:	49 8d 44 24 60       	lea    0x60(%r12),%rax
    e0c1:	49 39 c7             	cmp    %rax,%r15
    e0c4:	73 28                	jae    e0ee <dlmalloc+0xfbe>
    e0c6:	48 8b 05 43 cd 01 00 	mov    0x1cd43(%rip),%rax        # 2ae10 <mparams+0x10>
    e0cd:	4d 8d 74 04 5f       	lea    0x5f(%r12,%rax,1),%r14
    e0d2:	48 f7 d8             	neg    %rax
    e0d5:	4d 29 fe             	sub    %r15,%r14
    e0d8:	49 21 c6             	and    %rax,%r14
    e0db:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
    e0e2:	ff ff 7f 
    e0e5:	4c 39 f0             	cmp    %r14,%rax
    e0e8:	0f 83 91 08 00 00    	jae    e97f <dlmalloc+0x184f>
    e0ee:	c7 05 38 cd 01 00 00 	movl   $0x0,0x1cd38(%rip)        # 2ae30 <malloc_global_mutex>
    e0f5:	00 00 00 
    e0f8:	e9 83 fa ff ff       	jmp    db80 <dlmalloc+0xa50>
    e0fd:	0f 1f 00             	nopl   (%rax)
    e100:	44 0f bd d0          	bsr    %eax,%r10d
    e104:	b9 26 00 00 00       	mov    $0x26,%ecx
    e109:	4c 89 e0             	mov    %r12,%rax
    e10c:	ba 1f 00 00 00       	mov    $0x1f,%edx
    e111:	41 83 f2 1f          	xor    $0x1f,%r10d
    e115:	44 29 d1             	sub    %r10d,%ecx
    e118:	44 29 d2             	sub    %r10d,%edx
    e11b:	48 d3 e8             	shr    %cl,%rax
    e11e:	83 e0 01             	and    $0x1,%eax
    e121:	8d 04 50             	lea    (%rax,%rdx,2),%eax
    e124:	49 8b 94 c5 58 02 00 	mov    0x258(%r13,%rax,8),%rdx
    e12b:	00 
    e12c:	49 89 c2             	mov    %rax,%r10
    e12f:	48 85 d2             	test   %rdx,%rdx
    e132:	0f 84 72 f8 ff ff    	je     d9aa <dlmalloc+0x87a>
    e138:	83 f8 1f             	cmp    $0x1f,%eax
    e13b:	0f 84 d4 09 00 00    	je     eb15 <dlmalloc+0x19e5>
    e141:	d1 e8                	shr    %eax
    e143:	b9 39 00 00 00       	mov    $0x39,%ecx
    e148:	29 c1                	sub    %eax,%ecx
    e14a:	e9 13 f4 ff ff       	jmp    d562 <dlmalloc+0x432>
    e14f:	48 89 d3             	mov    %rdx,%rbx
    e152:	31 ff                	xor    %edi,%edi
    e154:	48 89 d1             	mov    %rdx,%rcx
    e157:	e9 77 f4 ff ff       	jmp    d5d3 <dlmalloc+0x4a3>
    e15c:	4c 89 ff             	mov    %r15,%rdi
    e15f:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    e164:	e8 e7 e4 ff ff       	call   c650 <sbrk>
    e169:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    e16e:	48 89 c3             	mov    %rax,%rbx
    e171:	49 8b 46 08          	mov    0x8(%r14),%rax
    e175:	49 03 06             	add    (%r14),%rax
    e178:	48 39 c3             	cmp    %rax,%rbx
    e17b:	0f 85 31 ff ff ff    	jne    e0b2 <dlmalloc+0xf82>
    e181:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
    e185:	0f 85 63 ff ff ff    	jne    e0ee <dlmalloc+0xfbe>
    e18b:	e9 59 f9 ff ff       	jmp    dae9 <dlmalloc+0x9b9>
    e190:	4c 89 f8             	mov    %r15,%rax
    e193:	48 89 d9             	mov    %rbx,%rcx
    e196:	e9 5b fd ff ff       	jmp    def6 <dlmalloc+0xdc6>
    e19b:	83 c9 03             	or     $0x3,%ecx
    e19e:	89 ce                	mov    %ecx,%esi
    e1a0:	48 89 73 08          	mov    %rsi,0x8(%rbx)
    e1a4:	48 89 38             	mov    %rdi,(%rax)
    e1a7:	48 83 48 08 01       	orq    $0x1,0x8(%rax)
    e1ac:	e9 b1 f1 ff ff       	jmp    d362 <dlmalloc+0x232>
    e1b1:	b8 01 00 00 00       	mov    $0x1,%eax
    e1b6:	87 05 74 cc 01 00    	xchg   %eax,0x1cc74(%rip)        # 2ae30 <malloc_global_mutex>
    e1bc:	85 c0                	test   %eax,%eax
    e1be:	0f 84 f7 f8 ff ff    	je     dabb <dlmalloc+0x98b>
    e1c4:	e9 c3 f8 ff ff       	jmp    da8c <dlmalloc+0x95c>
    e1c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    e1d0:	49 89 d8             	mov    %rbx,%r8
    e1d3:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
    e1d7:	41 83 e0 0f          	and    $0xf,%r8d
    e1db:	e9 5b fa ff ff       	jmp    dc3b <dlmalloc+0xb0b>
    e1e0:	4c 01 78 08          	add    %r15,0x8(%rax)
    e1e4:	49 89 d2             	mov    %rdx,%r10
    e1e7:	48 89 18             	mov    %rbx,(%rax)
    e1ea:	4d 85 c0             	test   %r8,%r8
    e1ed:	74 09                	je     e1f8 <dlmalloc+0x10c8>
    e1ef:	48 f7 df             	neg    %rdi
    e1f2:	83 e7 0f             	and    $0xf,%edi
    e1f5:	48 01 fb             	add    %rdi,%rbx
    e1f8:	48 8d 42 10          	lea    0x10(%rdx),%rax
    e1fc:	f6 c2 0f             	test   $0xf,%dl
    e1ff:	74 0a                	je     e20b <dlmalloc+0x10db>
    e201:	48 f7 d8             	neg    %rax
    e204:	83 e0 0f             	and    $0xf,%eax
    e207:	4c 8d 14 02          	lea    (%rdx,%rax,1),%r10
    e20b:	48 8b 0d ee cb 01 00 	mov    0x1cbee(%rip),%rcx        # 2ae00 <mparams>
    e212:	4c 89 d0             	mov    %r10,%rax
    e215:	4a 8d 14 23          	lea    (%rbx,%r12,1),%rdx
    e219:	48 29 d8             	sub    %rbx,%rax
    e21c:	4c 29 e0             	sub    %r12,%rax
    e21f:	4c 31 e9             	xor    %r13,%rcx
    e222:	49 83 cc 03          	or     $0x3,%r12
    e226:	4c 89 63 08          	mov    %r12,0x8(%rbx)
    e22a:	48 89 0a             	mov    %rcx,(%rdx)
    e22d:	4c 39 d6             	cmp    %r10,%rsi
    e230:	0f 84 38 04 00 00    	je     e66e <dlmalloc+0x153e>
    e236:	4c 39 15 23 c8 01 00 	cmp    %r10,0x1c823(%rip)        # 2aa60 <_gm_+0x20>
    e23d:	0f 84 49 05 00 00    	je     e78c <dlmalloc+0x165c>
    e243:	49 8b 72 08          	mov    0x8(%r10),%rsi
    e247:	4c 89 d1             	mov    %r10,%rcx
    e24a:	48 89 f7             	mov    %rsi,%rdi
    e24d:	83 e7 03             	and    $0x3,%edi
    e250:	48 83 ff 01          	cmp    $0x1,%rdi
    e254:	0f 84 a2 05 00 00    	je     e7fc <dlmalloc+0x16cc>
    e25a:	48 83 e6 fe          	and    $0xfffffffffffffffe,%rsi
    e25e:	49 89 72 08          	mov    %rsi,0x8(%r10)
    e262:	48 89 c6             	mov    %rax,%rsi
    e265:	48 83 ce 01          	or     $0x1,%rsi
    e269:	48 89 72 08          	mov    %rsi,0x8(%rdx)
    e26d:	48 89 01             	mov    %rax,(%rcx)
    e270:	48 89 c1             	mov    %rax,%rcx
    e273:	48 c1 e9 03          	shr    $0x3,%rcx
    e277:	48 3d ff 00 00 00    	cmp    $0xff,%rax
    e27d:	0f 87 42 04 00 00    	ja     e6c5 <dlmalloc+0x1595>
    e283:	bf 01 00 00 00       	mov    $0x1,%edi
    e288:	8b 35 b2 c7 01 00    	mov    0x1c7b2(%rip),%esi        # 2aa40 <_gm_>
    e28e:	8d 44 09 09          	lea    0x9(%rcx,%rcx,1),%eax
    e292:	d3 e7                	shl    %cl,%edi
    e294:	49 8d 44 c5 00       	lea    0x0(%r13,%rax,8),%rax
    e299:	85 fe                	test   %edi,%esi
    e29b:	0f 85 08 06 00 00    	jne    e8a9 <dlmalloc+0x1779>
    e2a1:	09 fe                	or     %edi,%esi
    e2a3:	48 89 c1             	mov    %rax,%rcx
    e2a6:	89 35 94 c7 01 00    	mov    %esi,0x1c794(%rip)        # 2aa40 <_gm_>
    e2ac:	48 89 50 10          	mov    %rdx,0x10(%rax)
    e2b0:	48 89 51 18          	mov    %rdx,0x18(%rcx)
    e2b4:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
    e2b8:	48 89 42 18          	mov    %rax,0x18(%rdx)
    e2bc:	e9 a1 f0 ff ff       	jmp    d362 <dlmalloc+0x232>
    e2c1:	bf 01 00 00 00       	mov    $0x1,%edi
    e2c6:	41 b8 58 02 00 00    	mov    $0x258,%r8d
    e2cc:	e9 cd fc ff ff       	jmp    df9e <dlmalloc+0xe6e>
    e2d1:	89 c8                	mov    %ecx,%eax
    e2d3:	49 89 d0             	mov    %rdx,%r8
    e2d6:	49 8b bc c5 58 02 00 	mov    0x258(%r13,%rax,8),%rdi
    e2dd:	00 
    e2de:	83 f9 1f             	cmp    $0x1f,%ecx
    e2e1:	74 33                	je     e316 <dlmalloc+0x11e6>
    e2e3:	89 c8                	mov    %ecx,%eax
    e2e5:	b9 39 00 00 00       	mov    $0x39,%ecx
    e2ea:	d1 e8                	shr    %eax
    e2ec:	29 c1                	sub    %eax,%ecx
    e2ee:	49 d3 e0             	shl    %cl,%r8
    e2f1:	eb 23                	jmp    e316 <dlmalloc+0x11e6>
    e2f3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    e2f8:	4c 89 c0             	mov    %r8,%rax
    e2fb:	4d 01 c0             	add    %r8,%r8
    e2fe:	48 c1 e8 3f          	shr    $0x3f,%rax
    e302:	48 83 c0 04          	add    $0x4,%rax
    e306:	48 8b 0c c7          	mov    (%rdi,%rax,8),%rcx
    e30a:	48 85 c9             	test   %rcx,%rcx
    e30d:	0f 84 1b 02 00 00    	je     e52e <dlmalloc+0x13fe>
    e313:	48 89 cf             	mov    %rcx,%rdi
    e316:	48 8b 47 08          	mov    0x8(%rdi),%rax
    e31a:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    e31e:	48 39 c2             	cmp    %rax,%rdx
    e321:	75 d5                	jne    e2f8 <dlmalloc+0x11c8>
    e323:	48 8b 47 10          	mov    0x10(%rdi),%rax
    e327:	48 8b 15 2a c7 01 00 	mov    0x1c72a(%rip),%rdx        # 2aa58 <_gm_+0x18>
    e32e:	66 48 0f 6e e7       	movq   %rdi,%xmm4
    e333:	66 48 0f 6e c0       	movq   %rax,%xmm0
    e338:	66 0f 6c c4          	punpcklqdq %xmm4,%xmm0
    e33c:	48 39 d7             	cmp    %rdx,%rdi
    e33f:	0f 82 4b f4 ff ff    	jb     d790 <dlmalloc+0x660>
    e345:	48 39 d0             	cmp    %rdx,%rax
    e348:	0f 82 42 f4 ff ff    	jb     d790 <dlmalloc+0x660>
    e34e:	48 89 70 18          	mov    %rsi,0x18(%rax)
    e352:	48 8b 05 f7 c6 01 00 	mov    0x1c6f7(%rip),%rax        # 2aa50 <_gm_+0x10>
    e359:	48 89 77 10          	mov    %rsi,0x10(%rdi)
    e35d:	48 c7 46 30 00 00 00 	movq   $0x0,0x30(%rsi)
    e364:	00 
    e365:	0f 11 46 10          	movups %xmm0,0x10(%rsi)
    e369:	e9 90 fa ff ff       	jmp    ddfe <dlmalloc+0xcce>
    e36e:	48 8b 43 28          	mov    0x28(%rbx),%rax
    e372:	48 8d 53 28          	lea    0x28(%rbx),%rdx
    e376:	48 85 c0             	test   %rax,%rax
    e379:	0f 84 11 03 00 00    	je     e690 <dlmalloc+0x1560>
    e37f:	90                   	nop
    e380:	48 89 d6             	mov    %rdx,%rsi
    e383:	48 89 c1             	mov    %rax,%rcx
    e386:	48 8d 50 28          	lea    0x28(%rax),%rdx
    e38a:	48 8b 40 28          	mov    0x28(%rax),%rax
    e38e:	48 85 c0             	test   %rax,%rax
    e391:	75 ed                	jne    e380 <dlmalloc+0x1250>
    e393:	48 8b 41 20          	mov    0x20(%rcx),%rax
    e397:	48 8d 51 20          	lea    0x20(%rcx),%rdx
    e39b:	48 85 c0             	test   %rax,%rax
    e39e:	75 e0                	jne    e380 <dlmalloc+0x1250>
    e3a0:	4c 39 de             	cmp    %r11,%rsi
    e3a3:	0f 82 e7 f3 ff ff    	jb     d790 <dlmalloc+0x660>
    e3a9:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
    e3b0:	4d 85 ff             	test   %r15,%r15
    e3b3:	0f 84 27 f3 ff ff    	je     d6e0 <dlmalloc+0x5b0>
    e3b9:	41 8b 46 38          	mov    0x38(%r14),%eax
    e3bd:	48 8d 50 4a          	lea    0x4a(%rax),%rdx
    e3c1:	4d 3b b4 c5 58 02 00 	cmp    0x258(%r13,%rax,8),%r14
    e3c8:	00 
    e3c9:	0f 84 9e 04 00 00    	je     e86d <dlmalloc+0x173d>
    e3cf:	4d 39 df             	cmp    %r11,%r15
    e3d2:	0f 82 b8 f3 ff ff    	jb     d790 <dlmalloc+0x660>
    e3d8:	49 3b 5f 20          	cmp    0x20(%r15),%rbx
    e3dc:	0f 84 cb 05 00 00    	je     e9ad <dlmalloc+0x187d>
    e3e2:	49 89 4f 28          	mov    %rcx,0x28(%r15)
    e3e6:	49 89 ce             	mov    %rcx,%r14
    e3e9:	e9 b1 f2 ff ff       	jmp    d69f <dlmalloc+0x56f>
    e3ee:	49 8d 04 3c          	lea    (%r12,%rdi,1),%rax
    e3f2:	48 89 c1             	mov    %rax,%rcx
    e3f5:	48 01 d8             	add    %rbx,%rax
    e3f8:	48 83 c9 03          	or     $0x3,%rcx
    e3fc:	48 89 4b 08          	mov    %rcx,0x8(%rbx)
    e400:	48 83 48 08 01       	orq    $0x1,0x8(%rax)
    e405:	48 89 10             	mov    %rdx,(%rax)
    e408:	e9 4f f3 ff ff       	jmp    d75c <dlmalloc+0x62c>
    e40d:	48 89 fa             	mov    %rdi,%rdx
    e410:	48 c1 ea 08          	shr    $0x8,%rdx
    e414:	89 d0                	mov    %edx,%eax
    e416:	85 d2                	test   %edx,%edx
    e418:	0f 84 20 02 00 00    	je     e63e <dlmalloc+0x150e>
    e41e:	81 fa ff ff 00 00    	cmp    $0xffff,%edx
    e424:	0f 87 be 03 00 00    	ja     e7e8 <dlmalloc+0x16b8>
    e42a:	0f bd c0             	bsr    %eax,%eax
    e42d:	b9 26 00 00 00       	mov    $0x26,%ecx
    e432:	48 89 fa             	mov    %rdi,%rdx
    e435:	83 f0 1f             	xor    $0x1f,%eax
    e438:	29 c1                	sub    %eax,%ecx
    e43a:	48 d3 ea             	shr    %cl,%rdx
    e43d:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    e442:	83 e2 01             	and    $0x1,%edx
    e445:	29 c1                	sub    %eax,%ecx
    e447:	8d 04 4a             	lea    (%rdx,%rcx,2),%eax
    e44a:	ba 01 00 00 00       	mov    $0x1,%edx
    e44f:	89 c1                	mov    %eax,%ecx
    e451:	8d 70 4b             	lea    0x4b(%rax),%esi
    e454:	d3 e2                	shl    %cl,%edx
    e456:	48 c1 e6 03          	shl    $0x3,%rsi
    e45a:	89 d1                	mov    %edx,%ecx
    e45c:	8b 15 e2 c5 01 00    	mov    0x1c5e2(%rip),%edx        # 2aa44 <_gm_+0x4>
    e462:	66 49 0f 6e ca       	movq   %r10,%xmm1
    e467:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e46b:	41 89 42 38          	mov    %eax,0x38(%r10)
    e46f:	66 0f 6c c9          	punpcklqdq %xmm1,%xmm1
    e473:	41 0f 11 42 20       	movups %xmm0,0x20(%r10)
    e478:	85 ca                	test   %ecx,%edx
    e47a:	0f 84 db 02 00 00    	je     e75b <dlmalloc+0x162b>
    e480:	89 c2                	mov    %eax,%edx
    e482:	48 89 fe             	mov    %rdi,%rsi
    e485:	49 8b 94 d5 58 02 00 	mov    0x258(%r13,%rdx,8),%rdx
    e48c:	00 
    e48d:	83 f8 1f             	cmp    $0x1f,%eax
    e490:	74 2c                	je     e4be <dlmalloc+0x138e>
    e492:	d1 e8                	shr    %eax
    e494:	b9 39 00 00 00       	mov    $0x39,%ecx
    e499:	29 c1                	sub    %eax,%ecx
    e49b:	48 d3 e6             	shl    %cl,%rsi
    e49e:	eb 1e                	jmp    e4be <dlmalloc+0x138e>
    e4a0:	48 89 f0             	mov    %rsi,%rax
    e4a3:	48 01 f6             	add    %rsi,%rsi
    e4a6:	48 c1 e8 3f          	shr    $0x3f,%rax
    e4aa:	48 83 c0 04          	add    $0x4,%rax
    e4ae:	48 8b 0c c2          	mov    (%rdx,%rax,8),%rcx
    e4b2:	48 85 c9             	test   %rcx,%rcx
    e4b5:	0f 84 fa 02 00 00    	je     e7b5 <dlmalloc+0x1685>
    e4bb:	48 89 ca             	mov    %rcx,%rdx
    e4be:	48 8b 42 08          	mov    0x8(%rdx),%rax
    e4c2:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    e4c6:	48 39 f8             	cmp    %rdi,%rax
    e4c9:	75 d5                	jne    e4a0 <dlmalloc+0x1370>
    e4cb:	48 8b 42 10          	mov    0x10(%rdx),%rax
    e4cf:	66 48 0f 6e ea       	movq   %rdx,%xmm5
    e4d4:	66 48 0f 6e c0       	movq   %rax,%xmm0
    e4d9:	66 0f 6c c5          	punpcklqdq %xmm5,%xmm0
    e4dd:	4c 39 da             	cmp    %r11,%rdx
    e4e0:	0f 82 aa f2 ff ff    	jb     d790 <dlmalloc+0x660>
    e4e6:	4c 39 d8             	cmp    %r11,%rax
    e4e9:	0f 82 a1 f2 ff ff    	jb     d790 <dlmalloc+0x660>
    e4ef:	4c 89 50 18          	mov    %r10,0x18(%rax)
    e4f3:	4c 89 52 10          	mov    %r10,0x10(%rdx)
    e4f7:	49 c7 42 30 00 00 00 	movq   $0x0,0x30(%r10)
    e4fe:	00 
    e4ff:	41 0f 11 42 10       	movups %xmm0,0x10(%r10)
    e504:	e9 53 f2 ff ff       	jmp    d75c <dlmalloc+0x62c>
    e509:	09 fe                	or     %edi,%esi
    e50b:	4c 89 c1             	mov    %r8,%rcx
    e50e:	89 35 2c c5 01 00    	mov    %esi,0x1c52c(%rip)        # 2aa40 <_gm_>
    e514:	e9 58 ef ff ff       	jmp    d471 <dlmalloc+0x341>
    e519:	bf 00 00 00 80       	mov    $0x80000000,%edi
    e51e:	41 b8 50 03 00 00    	mov    $0x350,%r8d
    e524:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    e529:	e9 70 fa ff ff       	jmp    df9e <dlmalloc+0xe6e>
    e52e:	48 8d 14 c7          	lea    (%rdi,%rax,8),%rdx
    e532:	48 3b 15 1f c5 01 00 	cmp    0x1c51f(%rip),%rdx        # 2aa58 <_gm_+0x18>
    e539:	0f 82 51 f2 ff ff    	jb     d790 <dlmalloc+0x660>
    e53f:	48 89 34 c7          	mov    %rsi,(%rdi,%rax,8)
    e543:	48 8b 05 06 c5 01 00 	mov    0x1c506(%rip),%rax        # 2aa50 <_gm_+0x10>
    e54a:	48 89 7e 30          	mov    %rdi,0x30(%rsi)
    e54e:	0f 11 4e 10          	movups %xmm1,0x10(%rsi)
    e552:	e9 a7 f8 ff ff       	jmp    ddfe <dlmalloc+0xcce>
    e557:	48 8b 43 28          	mov    0x28(%rbx),%rax
    e55b:	48 8d 4b 28          	lea    0x28(%rbx),%rcx
    e55f:	48 85 c0             	test   %rax,%rax
    e562:	0f 84 f8 03 00 00    	je     e960 <dlmalloc+0x1830>
    e568:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    e56f:	00 
    e570:	49 89 c9             	mov    %rcx,%r9
    e573:	49 89 c0             	mov    %rax,%r8
    e576:	48 8d 48 28          	lea    0x28(%rax),%rcx
    e57a:	48 8b 40 28          	mov    0x28(%rax),%rax
    e57e:	48 85 c0             	test   %rax,%rax
    e581:	75 ed                	jne    e570 <dlmalloc+0x1440>
    e583:	49 8b 40 20          	mov    0x20(%r8),%rax
    e587:	49 8d 48 20          	lea    0x20(%r8),%rcx
    e58b:	48 85 c0             	test   %rax,%rax
    e58e:	75 e0                	jne    e570 <dlmalloc+0x1440>
    e590:	4d 39 d9             	cmp    %r11,%r9
    e593:	0f 82 f7 f1 ff ff    	jb     d790 <dlmalloc+0x660>
    e599:	49 c7 01 00 00 00 00 	movq   $0x0,(%r9)
    e5a0:	4d 85 f6             	test   %r14,%r14
    e5a3:	0f 84 17 f3 ff ff    	je     d8c0 <dlmalloc+0x790>
    e5a9:	8b 43 38             	mov    0x38(%rbx),%eax
    e5ac:	48 8d 48 4a          	lea    0x4a(%rax),%rcx
    e5b0:	49 3b 9c c5 58 02 00 	cmp    0x258(%r13,%rax,8),%rbx
    e5b7:	00 
    e5b8:	0f 84 0e 05 00 00    	je     eacc <dlmalloc+0x199c>
    e5be:	4d 39 de             	cmp    %r11,%r14
    e5c1:	0f 82 c9 f1 ff ff    	jb     d790 <dlmalloc+0x660>
    e5c7:	49 3b 5e 20          	cmp    0x20(%r14),%rbx
    e5cb:	0f 84 3b 05 00 00    	je     eb0c <dlmalloc+0x19dc>
    e5d1:	4d 89 46 28          	mov    %r8,0x28(%r14)
    e5d5:	e9 a5 f2 ff ff       	jmp    d87f <dlmalloc+0x74f>
    e5da:	4c 01 f9             	add    %r15,%rcx
    e5dd:	4c 03 3d 6c c4 01 00 	add    0x1c46c(%rip),%r15        # 2aa50 <_gm_+0x10>
    e5e4:	48 89 48 08          	mov    %rcx,0x8(%rax)
    e5e8:	48 8d 46 10          	lea    0x10(%rsi),%rax
    e5ec:	40 f6 c6 0f          	test   $0xf,%sil
    e5f0:	0f 84 e7 01 00 00    	je     e7dd <dlmalloc+0x16ad>
    e5f6:	48 f7 d8             	neg    %rax
    e5f9:	83 e0 0f             	and    $0xf,%eax
    e5fc:	48 89 c2             	mov    %rax,%rdx
    e5ff:	48 8d 0c 06          	lea    (%rsi,%rax,1),%rcx
    e603:	4c 89 f8             	mov    %r15,%rax
    e606:	48 29 d0             	sub    %rdx,%rax
    e609:	48 89 c2             	mov    %rax,%rdx
    e60c:	48 89 0d 55 c4 01 00 	mov    %rcx,0x1c455(%rip)        # 2aa68 <_gm_+0x28>
    e613:	48 83 ca 01          	or     $0x1,%rdx
    e617:	48 89 05 32 c4 01 00 	mov    %rax,0x1c432(%rip)        # 2aa50 <_gm_+0x10>
    e61e:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    e622:	48 8b 15 f7 c7 01 00 	mov    0x1c7f7(%rip),%rdx        # 2ae20 <mparams+0x20>
    e629:	4a c7 44 3e 08 50 00 	movq   $0x50,0x8(%rsi,%r15,1)
    e630:	00 00 
    e632:	48 89 15 37 c4 01 00 	mov    %rdx,0x1c437(%rip)        # 2aa70 <_gm_+0x30>
    e639:	e9 c0 f7 ff ff       	jmp    ddfe <dlmalloc+0xcce>
    e63e:	b9 01 00 00 00       	mov    $0x1,%ecx
    e643:	be 58 02 00 00       	mov    $0x258,%esi
    e648:	e9 0f fe ff ff       	jmp    e45c <dlmalloc+0x132c>
    e64d:	4d 89 b4 d5 58 02 00 	mov    %r14,0x258(%r13,%rdx,8)
    e654:	00 
    e655:	4d 85 f6             	test   %r14,%r14
    e658:	0f 85 41 f0 ff ff    	jne    d69f <dlmalloc+0x56f>
    e65e:	41 0f b3 c1          	btr    %eax,%r9d
    e662:	44 89 0d db c3 01 00 	mov    %r9d,0x1c3db(%rip)        # 2aa44 <_gm_+0x4>
    e669:	e9 72 f0 ff ff       	jmp    d6e0 <dlmalloc+0x5b0>
    e66e:	48 03 05 db c3 01 00 	add    0x1c3db(%rip),%rax        # 2aa50 <_gm_+0x10>
    e675:	48 89 15 ec c3 01 00 	mov    %rdx,0x1c3ec(%rip)        # 2aa68 <_gm_+0x28>
    e67c:	48 89 05 cd c3 01 00 	mov    %rax,0x1c3cd(%rip)        # 2aa50 <_gm_+0x10>
    e683:	48 83 c8 01          	or     $0x1,%rax
    e687:	48 89 42 08          	mov    %rax,0x8(%rdx)
    e68b:	e9 d2 ec ff ff       	jmp    d362 <dlmalloc+0x232>
    e690:	48 8b 43 20          	mov    0x20(%rbx),%rax
    e694:	48 85 c0             	test   %rax,%rax
    e697:	0f 84 f0 03 00 00    	je     ea8d <dlmalloc+0x195d>
    e69d:	48 8d 53 20          	lea    0x20(%rbx),%rdx
    e6a1:	e9 da fc ff ff       	jmp    e380 <dlmalloc+0x1250>
    e6a6:	49 8d 14 3c          	lea    (%r12,%rdi,1),%rdx
    e6aa:	48 89 d1             	mov    %rdx,%rcx
    e6ad:	48 01 da             	add    %rbx,%rdx
    e6b0:	48 83 c9 03          	or     $0x3,%rcx
    e6b4:	48 89 4b 08          	mov    %rcx,0x8(%rbx)
    e6b8:	48 83 4a 08 01       	orq    $0x1,0x8(%rdx)
    e6bd:	48 89 02             	mov    %rax,(%rdx)
    e6c0:	e9 85 f2 ff ff       	jmp    d94a <dlmalloc+0x81a>
    e6c5:	48 89 c6             	mov    %rax,%rsi
    e6c8:	48 c1 ee 08          	shr    $0x8,%rsi
    e6cc:	89 f1                	mov    %esi,%ecx
    e6ce:	85 f6                	test   %esi,%esi
    e6d0:	0f 84 7b 02 00 00    	je     e951 <dlmalloc+0x1821>
    e6d6:	81 fe ff ff 00 00    	cmp    $0xffff,%esi
    e6dc:	0f 87 16 04 00 00    	ja     eaf8 <dlmalloc+0x19c8>
    e6e2:	0f bd c9             	bsr    %ecx,%ecx
    e6e5:	48 89 c7             	mov    %rax,%rdi
    e6e8:	89 ce                	mov    %ecx,%esi
    e6ea:	b9 26 00 00 00       	mov    $0x26,%ecx
    e6ef:	83 f6 1f             	xor    $0x1f,%esi
    e6f2:	29 f1                	sub    %esi,%ecx
    e6f4:	48 d3 ef             	shr    %cl,%rdi
    e6f7:	48 89 f9             	mov    %rdi,%rcx
    e6fa:	bf 1f 00 00 00       	mov    $0x1f,%edi
    e6ff:	29 f7                	sub    %esi,%edi
    e701:	83 e1 01             	and    $0x1,%ecx
    e704:	8d 0c 79             	lea    (%rcx,%rdi,2),%ecx
    e707:	bf 01 00 00 00       	mov    $0x1,%edi
    e70c:	8d 71 4b             	lea    0x4b(%rcx),%esi
    e70f:	d3 e7                	shl    %cl,%edi
    e711:	48 c1 e6 03          	shl    $0x3,%rsi
    e715:	44 8b 05 28 c3 01 00 	mov    0x1c328(%rip),%r8d        # 2aa44 <_gm_+0x4>
    e71c:	66 48 0f 6e c2       	movq   %rdx,%xmm0
    e721:	66 0f ef c9          	pxor   %xmm1,%xmm1
    e725:	89 4a 38             	mov    %ecx,0x38(%rdx)
    e728:	66 0f 6c c0          	punpcklqdq %xmm0,%xmm0
    e72c:	0f 11 4a 20          	movups %xmm1,0x20(%rdx)
    e730:	41 85 f8             	test   %edi,%r8d
    e733:	0f 85 86 01 00 00    	jne    e8bf <dlmalloc+0x178f>
    e739:	41 09 f8             	or     %edi,%r8d
    e73c:	4c 01 ee             	add    %r13,%rsi
    e73f:	49 89 94 cd 58 02 00 	mov    %rdx,0x258(%r13,%rcx,8)
    e746:	00 
    e747:	44 89 05 f6 c2 01 00 	mov    %r8d,0x1c2f6(%rip)        # 2aa44 <_gm_+0x4>
    e74e:	48 89 72 30          	mov    %rsi,0x30(%rdx)
    e752:	0f 11 42 10          	movups %xmm0,0x10(%rdx)
    e756:	e9 07 ec ff ff       	jmp    d362 <dlmalloc+0x232>
    e75b:	09 ca                	or     %ecx,%edx
    e75d:	4c 01 ee             	add    %r13,%rsi
    e760:	4d 89 94 c5 58 02 00 	mov    %r10,0x258(%r13,%rax,8)
    e767:	00 
    e768:	89 15 d6 c2 01 00    	mov    %edx,0x1c2d6(%rip)        # 2aa44 <_gm_+0x4>
    e76e:	49 89 72 30          	mov    %rsi,0x30(%r10)
    e772:	41 0f 11 4a 10       	movups %xmm1,0x10(%r10)
    e777:	e9 e0 ef ff ff       	jmp    d75c <dlmalloc+0x62c>
    e77c:	09 c6                	or     %eax,%esi
    e77e:	48 89 d0             	mov    %rdx,%rax
    e781:	89 35 b9 c2 01 00    	mov    %esi,0x1c2b9(%rip)        # 2aa40 <_gm_>
    e787:	e9 c0 ef ff ff       	jmp    d74c <dlmalloc+0x61c>
    e78c:	48 03 05 b5 c2 01 00 	add    0x1c2b5(%rip),%rax        # 2aa48 <_gm_+0x8>
    e793:	48 89 15 c6 c2 01 00 	mov    %rdx,0x1c2c6(%rip)        # 2aa60 <_gm_+0x20>
    e79a:	48 89 c1             	mov    %rax,%rcx
    e79d:	48 89 05 a4 c2 01 00 	mov    %rax,0x1c2a4(%rip)        # 2aa48 <_gm_+0x8>
    e7a4:	48 83 c9 01          	or     $0x1,%rcx
    e7a8:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
    e7ac:	48 89 04 02          	mov    %rax,(%rdx,%rax,1)
    e7b0:	e9 ad eb ff ff       	jmp    d362 <dlmalloc+0x232>
    e7b5:	48 8d 0c c2          	lea    (%rdx,%rax,8),%rcx
    e7b9:	4c 39 d9             	cmp    %r11,%rcx
    e7bc:	0f 82 ce ef ff ff    	jb     d790 <dlmalloc+0x660>
    e7c2:	4c 89 14 c2          	mov    %r10,(%rdx,%rax,8)
    e7c6:	49 89 52 30          	mov    %rdx,0x30(%r10)
    e7ca:	41 0f 11 4a 10       	movups %xmm1,0x10(%r10)
    e7cf:	e9 88 ef ff ff       	jmp    d75c <dlmalloc+0x62c>
    e7d4:	4d 89 77 20          	mov    %r14,0x20(%r15)
    e7d8:	e9 bd ee ff ff       	jmp    d69a <dlmalloc+0x56a>
    e7dd:	4c 89 f8             	mov    %r15,%rax
    e7e0:	48 89 f1             	mov    %rsi,%rcx
    e7e3:	e9 21 fe ff ff       	jmp    e609 <dlmalloc+0x14d9>
    e7e8:	b9 00 00 00 80       	mov    $0x80000000,%ecx
    e7ed:	be 50 03 00 00       	mov    $0x350,%esi
    e7f2:	b8 1f 00 00 00       	mov    $0x1f,%eax
    e7f7:	e9 60 fc ff ff       	jmp    e45c <dlmalloc+0x132c>
    e7fc:	49 89 f0             	mov    %rsi,%r8
    e7ff:	48 89 f1             	mov    %rsi,%rcx
    e802:	49 83 e0 f8          	and    $0xfffffffffffffff8,%r8
    e806:	48 c1 e9 03          	shr    $0x3,%rcx
    e80a:	48 81 fe ff 00 00 00 	cmp    $0xff,%rsi
    e811:	0f 87 9f 01 00 00    	ja     e9b6 <dlmalloc+0x1886>
    e817:	44 8d 5c 09 09       	lea    0x9(%rcx,%rcx,1),%r11d
    e81c:	49 8b 7a 10          	mov    0x10(%r10),%rdi
    e820:	49 8b 72 18          	mov    0x18(%r10),%rsi
    e824:	4f 8d 5c dd 00       	lea    0x0(%r13,%r11,8),%r11
    e829:	4c 39 df             	cmp    %r11,%rdi
    e82c:	0f 85 84 03 00 00    	jne    ebb6 <dlmalloc+0x1a86>
    e832:	48 39 fe             	cmp    %rdi,%rsi
    e835:	0f 84 69 03 00 00    	je     eba4 <dlmalloc+0x1a74>
    e83b:	48 3b 35 16 c2 01 00 	cmp    0x1c216(%rip),%rsi        # 2aa58 <_gm_+0x18>
    e842:	0f 82 48 ef ff ff    	jb     d790 <dlmalloc+0x660>
    e848:	4c 39 56 10          	cmp    %r10,0x10(%rsi)
    e84c:	0f 85 3e ef ff ff    	jne    d790 <dlmalloc+0x660>
    e852:	48 89 77 18          	mov    %rsi,0x18(%rdi)
    e856:	48 89 7e 10          	mov    %rdi,0x10(%rsi)
    e85a:	4d 01 c2             	add    %r8,%r10
    e85d:	4c 01 c0             	add    %r8,%rax
    e860:	49 8b 72 08          	mov    0x8(%r10),%rsi
    e864:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    e868:	e9 ed f9 ff ff       	jmp    e25a <dlmalloc+0x112a>
    e86d:	49 89 4c d5 08       	mov    %rcx,0x8(%r13,%rdx,8)
    e872:	e9 6f fb ff ff       	jmp    e3e6 <dlmalloc+0x12b6>
    e877:	4d 89 84 cd 58 02 00 	mov    %r8,0x258(%r13,%rcx,8)
    e87e:	00 
    e87f:	4d 85 c0             	test   %r8,%r8
    e882:	0f 85 f7 ef ff ff    	jne    d87f <dlmalloc+0x74f>
    e888:	41 0f b3 c1          	btr    %eax,%r9d
    e88c:	44 89 0d b1 c1 01 00 	mov    %r9d,0x1c1b1(%rip)        # 2aa44 <_gm_+0x4>
    e893:	e9 28 f0 ff ff       	jmp    d8c0 <dlmalloc+0x790>
    e898:	44 09 c2             	or     %r8d,%edx
    e89b:	89 15 9f c1 01 00    	mov    %edx,0x1c19f(%rip)        # 2aa40 <_gm_>
    e8a1:	4c 89 ca             	mov    %r9,%rdx
    e8a4:	e9 83 f0 ff ff       	jmp    d92c <dlmalloc+0x7fc>
    e8a9:	48 8b 48 10          	mov    0x10(%rax),%rcx
    e8ad:	48 3b 0d a4 c1 01 00 	cmp    0x1c1a4(%rip),%rcx        # 2aa58 <_gm_+0x18>
    e8b4:	0f 83 f2 f9 ff ff    	jae    e2ac <dlmalloc+0x117c>
    e8ba:	e9 d1 ee ff ff       	jmp    d790 <dlmalloc+0x660>
    e8bf:	89 ce                	mov    %ecx,%esi
    e8c1:	49 8b b4 f5 58 02 00 	mov    0x258(%r13,%rsi,8),%rsi
    e8c8:	00 
    e8c9:	83 f9 1f             	cmp    $0x1f,%ecx
    e8cc:	74 0b                	je     e8d9 <dlmalloc+0x17a9>
    e8ce:	d1 e9                	shr    %ecx
    e8d0:	41 b9 39 00 00 00    	mov    $0x39,%r9d
    e8d6:	41 29 c9             	sub    %ecx,%r9d
    e8d9:	48 89 c7             	mov    %rax,%rdi
    e8dc:	44 89 c9             	mov    %r9d,%ecx
    e8df:	48 d3 e7             	shl    %cl,%rdi
    e8e2:	eb 1e                	jmp    e902 <dlmalloc+0x17d2>
    e8e4:	48 89 f9             	mov    %rdi,%rcx
    e8e7:	48 01 ff             	add    %rdi,%rdi
    e8ea:	48 c1 e9 3f          	shr    $0x3f,%rcx
    e8ee:	48 83 c1 04          	add    $0x4,%rcx
    e8f2:	4c 8b 04 ce          	mov    (%rsi,%rcx,8),%r8
    e8f6:	4d 85 c0             	test   %r8,%r8
    e8f9:	0f 84 d7 01 00 00    	je     ead6 <dlmalloc+0x19a6>
    e8ff:	4c 89 c6             	mov    %r8,%rsi
    e902:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    e906:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    e90a:	48 39 c8             	cmp    %rcx,%rax
    e90d:	75 d5                	jne    e8e4 <dlmalloc+0x17b4>
    e90f:	48 8b 46 10          	mov    0x10(%rsi),%rax
    e913:	48 8b 0d 3e c1 01 00 	mov    0x1c13e(%rip),%rcx        # 2aa58 <_gm_+0x18>
    e91a:	66 48 0f 6e f6       	movq   %rsi,%xmm6
    e91f:	66 48 0f 6e c0       	movq   %rax,%xmm0
    e924:	66 0f 6c c6          	punpcklqdq %xmm6,%xmm0
    e928:	48 39 c8             	cmp    %rcx,%rax
    e92b:	0f 82 5f ee ff ff    	jb     d790 <dlmalloc+0x660>
    e931:	48 39 ce             	cmp    %rcx,%rsi
    e934:	0f 82 56 ee ff ff    	jb     d790 <dlmalloc+0x660>
    e93a:	48 89 50 18          	mov    %rdx,0x18(%rax)
    e93e:	31 c0                	xor    %eax,%eax
    e940:	48 89 56 10          	mov    %rdx,0x10(%rsi)
    e944:	48 89 42 30          	mov    %rax,0x30(%rdx)
    e948:	0f 11 42 10          	movups %xmm0,0x10(%rdx)
    e94c:	e9 11 ea ff ff       	jmp    d362 <dlmalloc+0x232>
    e951:	bf 01 00 00 00       	mov    $0x1,%edi
    e956:	be 58 02 00 00       	mov    $0x258,%esi
    e95b:	e9 b5 fd ff ff       	jmp    e715 <dlmalloc+0x15e5>
    e960:	48 8b 43 20          	mov    0x20(%rbx),%rax
    e964:	48 85 c0             	test   %rax,%rax
    e967:	0f 84 b0 01 00 00    	je     eb1d <dlmalloc+0x19ed>
    e96d:	48 8d 4b 20          	lea    0x20(%rbx),%rcx
    e971:	e9 fa fb ff ff       	jmp    e570 <dlmalloc+0x1440>
    e976:	4d 89 46 20          	mov    %r8,0x20(%r14)
    e97a:	e9 fb ee ff ff       	jmp    d87a <dlmalloc+0x74a>
    e97f:	4c 89 f7             	mov    %r14,%rdi
    e982:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    e987:	e8 c4 dc ff ff       	call   c650 <sbrk>
    e98c:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    e991:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    e995:	0f 84 5b 02 00 00    	je     ebf6 <dlmalloc+0x1ac6>
    e99b:	4d 01 f7             	add    %r14,%r15
    e99e:	c7 05 88 c4 01 00 00 	movl   $0x0,0x1c488(%rip)        # 2ae30 <malloc_global_mutex>
    e9a5:	00 00 00 
    e9a8:	e9 d3 f1 ff ff       	jmp    db80 <dlmalloc+0xa50>
    e9ad:	49 89 4f 20          	mov    %rcx,0x20(%r15)
    e9b1:	e9 30 fa ff ff       	jmp    e3e6 <dlmalloc+0x12b6>
    e9b6:	49 8b 72 18          	mov    0x18(%r10),%rsi
    e9ba:	4d 8b 62 30          	mov    0x30(%r10),%r12
    e9be:	4c 39 d6             	cmp    %r10,%rsi
    e9c1:	0f 84 96 01 00 00    	je     eb5d <dlmalloc+0x1a2d>
    e9c7:	49 8b 4a 10          	mov    0x10(%r10),%rcx
    e9cb:	48 3b 0d 86 c0 01 00 	cmp    0x1c086(%rip),%rcx        # 2aa58 <_gm_+0x18>
    e9d2:	0f 82 b8 ed ff ff    	jb     d790 <dlmalloc+0x660>
    e9d8:	4c 39 51 18          	cmp    %r10,0x18(%rcx)
    e9dc:	0f 85 ae ed ff ff    	jne    d790 <dlmalloc+0x660>
    e9e2:	4c 39 56 10          	cmp    %r10,0x10(%rsi)
    e9e6:	0f 85 a4 ed ff ff    	jne    d790 <dlmalloc+0x660>
    e9ec:	48 89 71 18          	mov    %rsi,0x18(%rcx)
    e9f0:	48 89 4e 10          	mov    %rcx,0x10(%rsi)
    e9f4:	4d 85 e4             	test   %r12,%r12
    e9f7:	0f 84 5d fe ff ff    	je     e85a <dlmalloc+0x172a>
    e9fd:	41 8b 7a 38          	mov    0x38(%r10),%edi
    ea01:	48 89 f9             	mov    %rdi,%rcx
    ea04:	4c 8d 5f 4a          	lea    0x4a(%rdi),%r11
    ea08:	4d 39 94 fd 58 02 00 	cmp    %r10,0x258(%r13,%rdi,8)
    ea0f:	00 
    ea10:	0f 84 0e 02 00 00    	je     ec24 <dlmalloc+0x1af4>
    ea16:	4c 3b 25 3b c0 01 00 	cmp    0x1c03b(%rip),%r12        # 2aa58 <_gm_+0x18>
    ea1d:	0f 82 6d ed ff ff    	jb     d790 <dlmalloc+0x660>
    ea23:	4d 39 54 24 20       	cmp    %r10,0x20(%r12)
    ea28:	0f 84 ec 01 00 00    	je     ec1a <dlmalloc+0x1aea>
    ea2e:	49 89 74 24 28       	mov    %rsi,0x28(%r12)
    ea33:	48 85 f6             	test   %rsi,%rsi
    ea36:	0f 84 1e fe ff ff    	je     e85a <dlmalloc+0x172a>
    ea3c:	48 8b 3d 15 c0 01 00 	mov    0x1c015(%rip),%rdi        # 2aa58 <_gm_+0x18>
    ea43:	48 39 fe             	cmp    %rdi,%rsi
    ea46:	0f 82 44 ed ff ff    	jb     d790 <dlmalloc+0x660>
    ea4c:	49 8b 4a 20          	mov    0x20(%r10),%rcx
    ea50:	4c 89 66 30          	mov    %r12,0x30(%rsi)
    ea54:	48 85 c9             	test   %rcx,%rcx
    ea57:	74 11                	je     ea6a <dlmalloc+0x193a>
    ea59:	48 39 f9             	cmp    %rdi,%rcx
    ea5c:	0f 82 2e ed ff ff    	jb     d790 <dlmalloc+0x660>
    ea62:	48 89 4e 20          	mov    %rcx,0x20(%rsi)
    ea66:	48 89 71 30          	mov    %rsi,0x30(%rcx)
    ea6a:	49 8b 4a 28          	mov    0x28(%r10),%rcx
    ea6e:	48 85 c9             	test   %rcx,%rcx
    ea71:	0f 84 e3 fd ff ff    	je     e85a <dlmalloc+0x172a>
    ea77:	48 39 f9             	cmp    %rdi,%rcx
    ea7a:	0f 82 10 ed ff ff    	jb     d790 <dlmalloc+0x660>
    ea80:	48 89 4e 28          	mov    %rcx,0x28(%rsi)
    ea84:	48 89 71 30          	mov    %rsi,0x30(%rcx)
    ea88:	e9 cd fd ff ff       	jmp    e85a <dlmalloc+0x172a>
    ea8d:	4d 85 ff             	test   %r15,%r15
    ea90:	0f 84 4a ec ff ff    	je     d6e0 <dlmalloc+0x5b0>
    ea96:	8b 53 38             	mov    0x38(%rbx),%edx
    ea99:	48 89 d0             	mov    %rdx,%rax
    ea9c:	48 8d 4a 4a          	lea    0x4a(%rdx),%rcx
    eaa0:	49 3b 9c d5 58 02 00 	cmp    0x258(%r13,%rdx,8),%rbx
    eaa7:	00 
    eaa8:	0f 84 a2 01 00 00    	je     ec50 <dlmalloc+0x1b20>
    eaae:	4d 39 df             	cmp    %r11,%r15
    eab1:	0f 82 d9 ec ff ff    	jb     d790 <dlmalloc+0x660>
    eab7:	4d 39 77 20          	cmp    %r14,0x20(%r15)
    eabb:	0f 84 83 01 00 00    	je     ec44 <dlmalloc+0x1b14>
    eac1:	31 f6                	xor    %esi,%esi
    eac3:	49 89 77 28          	mov    %rsi,0x28(%r15)
    eac7:	e9 14 ec ff ff       	jmp    d6e0 <dlmalloc+0x5b0>
    eacc:	4d 89 44 cd 08       	mov    %r8,0x8(%r13,%rcx,8)
    ead1:	e9 a9 ed ff ff       	jmp    d87f <dlmalloc+0x74f>
    ead6:	48 8d 04 ce          	lea    (%rsi,%rcx,8),%rax
    eada:	48 3b 05 77 bf 01 00 	cmp    0x1bf77(%rip),%rax        # 2aa58 <_gm_+0x18>
    eae1:	0f 82 a9 ec ff ff    	jb     d790 <dlmalloc+0x660>
    eae7:	48 89 14 ce          	mov    %rdx,(%rsi,%rcx,8)
    eaeb:	48 89 72 30          	mov    %rsi,0x30(%rdx)
    eaef:	0f 11 42 10          	movups %xmm0,0x10(%rdx)
    eaf3:	e9 6a e8 ff ff       	jmp    d362 <dlmalloc+0x232>
    eaf8:	bf 00 00 00 80       	mov    $0x80000000,%edi
    eafd:	be 50 03 00 00       	mov    $0x350,%esi
    eb02:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    eb07:	e9 09 fc ff ff       	jmp    e715 <dlmalloc+0x15e5>
    eb0c:	4d 89 46 20          	mov    %r8,0x20(%r14)
    eb10:	e9 6a ed ff ff       	jmp    d87f <dlmalloc+0x74f>
    eb15:	4d 89 e3             	mov    %r12,%r11
    eb18:	e9 4b ea ff ff       	jmp    d568 <dlmalloc+0x438>
    eb1d:	4d 85 f6             	test   %r14,%r14
    eb20:	0f 84 9a ed ff ff    	je     d8c0 <dlmalloc+0x790>
    eb26:	8b 4b 38             	mov    0x38(%rbx),%ecx
    eb29:	48 89 c8             	mov    %rcx,%rax
    eb2c:	4c 8d 41 4a          	lea    0x4a(%rcx),%r8
    eb30:	49 3b 9c cd 58 02 00 	cmp    0x258(%r13,%rcx,8),%rbx
    eb37:	00 
    eb38:	0f 84 34 01 00 00    	je     ec72 <dlmalloc+0x1b42>
    eb3e:	4d 39 de             	cmp    %r11,%r14
    eb41:	0f 82 49 ec ff ff    	jb     d790 <dlmalloc+0x660>
    eb47:	49 3b 5e 20          	cmp    0x20(%r14),%rbx
    eb4b:	0f 84 16 01 00 00    	je     ec67 <dlmalloc+0x1b37>
    eb51:	45 31 ff             	xor    %r15d,%r15d
    eb54:	4d 89 7e 28          	mov    %r15,0x28(%r14)
    eb58:	e9 63 ed ff ff       	jmp    d8c0 <dlmalloc+0x790>
    eb5d:	49 8b 72 28          	mov    0x28(%r10),%rsi
    eb61:	48 85 f6             	test   %rsi,%rsi
    eb64:	74 7a                	je     ebe0 <dlmalloc+0x1ab0>
    eb66:	49 8d 7a 28          	lea    0x28(%r10),%rdi
    eb6a:	48 89 f1             	mov    %rsi,%rcx
    eb6d:	49 89 fb             	mov    %rdi,%r11
    eb70:	48 89 ce             	mov    %rcx,%rsi
    eb73:	48 8d 79 28          	lea    0x28(%rcx),%rdi
    eb77:	48 8b 49 28          	mov    0x28(%rcx),%rcx
    eb7b:	48 85 c9             	test   %rcx,%rcx
    eb7e:	75 ed                	jne    eb6d <dlmalloc+0x1a3d>
    eb80:	48 8b 4e 20          	mov    0x20(%rsi),%rcx
    eb84:	48 8d 7e 20          	lea    0x20(%rsi),%rdi
    eb88:	48 85 c9             	test   %rcx,%rcx
    eb8b:	75 e0                	jne    eb6d <dlmalloc+0x1a3d>
    eb8d:	4c 3b 1d c4 be 01 00 	cmp    0x1bec4(%rip),%r11        # 2aa58 <_gm_+0x18>
    eb94:	0f 82 f6 eb ff ff    	jb     d790 <dlmalloc+0x660>
    eb9a:	31 c9                	xor    %ecx,%ecx
    eb9c:	49 89 0b             	mov    %rcx,(%r11)
    eb9f:	e9 50 fe ff ff       	jmp    e9f4 <dlmalloc+0x18c4>
    eba4:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    eba9:	d3 c6                	rol    %cl,%esi
    ebab:	21 35 8f be 01 00    	and    %esi,0x1be8f(%rip)        # 2aa40 <_gm_>
    ebb1:	e9 a4 fc ff ff       	jmp    e85a <dlmalloc+0x172a>
    ebb6:	48 3b 3d 9b be 01 00 	cmp    0x1be9b(%rip),%rdi        # 2aa58 <_gm_+0x18>
    ebbd:	0f 82 cd eb ff ff    	jb     d790 <dlmalloc+0x660>
    ebc3:	4c 39 57 18          	cmp    %r10,0x18(%rdi)
    ebc7:	0f 85 c3 eb ff ff    	jne    d790 <dlmalloc+0x660>
    ebcd:	48 39 f7             	cmp    %rsi,%rdi
    ebd0:	74 d2                	je     eba4 <dlmalloc+0x1a74>
    ebd2:	4c 39 de             	cmp    %r11,%rsi
    ebd5:	0f 84 77 fc ff ff    	je     e852 <dlmalloc+0x1722>
    ebdb:	e9 5b fc ff ff       	jmp    e83b <dlmalloc+0x170b>
    ebe0:	49 8b 72 20          	mov    0x20(%r10),%rsi
    ebe4:	48 85 f6             	test   %rsi,%rsi
    ebe7:	0f 84 07 fe ff ff    	je     e9f4 <dlmalloc+0x18c4>
    ebed:	49 8d 7a 20          	lea    0x20(%r10),%rdi
    ebf1:	e9 74 ff ff ff       	jmp    eb6a <dlmalloc+0x1a3a>
    ebf6:	4c 89 ff             	mov    %r15,%rdi
    ebf9:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    ebfe:	48 f7 df             	neg    %rdi
    ec01:	e8 4a da ff ff       	call   c650 <sbrk>
    ec06:	c7 05 20 c2 01 00 00 	movl   $0x0,0x1c220(%rip)        # 2ae30 <malloc_global_mutex>
    ec0d:	00 00 00 
    ec10:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    ec15:	e9 d9 ee ff ff       	jmp    daf3 <dlmalloc+0x9c3>
    ec1a:	49 89 74 24 20       	mov    %rsi,0x20(%r12)
    ec1f:	e9 0f fe ff ff       	jmp    ea33 <dlmalloc+0x1903>
    ec24:	4b 89 74 dd 08       	mov    %rsi,0x8(%r13,%r11,8)
    ec29:	48 85 f6             	test   %rsi,%rsi
    ec2c:	0f 85 0a fe ff ff    	jne    ea3c <dlmalloc+0x190c>
    ec32:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    ec37:	d3 c6                	rol    %cl,%esi
    ec39:	21 35 05 be 01 00    	and    %esi,0x1be05(%rip)        # 2aa44 <_gm_+0x4>
    ec3f:	e9 16 fc ff ff       	jmp    e85a <dlmalloc+0x172a>
    ec44:	45 31 c9             	xor    %r9d,%r9d
    ec47:	4d 89 4f 20          	mov    %r9,0x20(%r15)
    ec4b:	e9 90 ea ff ff       	jmp    d6e0 <dlmalloc+0x5b0>
    ec50:	45 31 f6             	xor    %r14d,%r14d
    ec53:	4d 89 74 cd 08       	mov    %r14,0x8(%r13,%rcx,8)
    ec58:	e9 01 fa ff ff       	jmp    e65e <dlmalloc+0x152e>
    ec5d:	e8 de e3 ff ff       	call   d040 <init_mparams.isra.0>
    ec62:	e9 82 ed ff ff       	jmp    d9e9 <dlmalloc+0x8b9>
    ec67:	31 c0                	xor    %eax,%eax
    ec69:	49 89 46 20          	mov    %rax,0x20(%r14)
    ec6d:	e9 4e ec ff ff       	jmp    d8c0 <dlmalloc+0x790>
    ec72:	31 c9                	xor    %ecx,%ecx
    ec74:	4b 89 4c c5 08       	mov    %rcx,0x8(%r13,%r8,8)
    ec79:	e9 0a fc ff ff       	jmp    e888 <dlmalloc+0x1758>
    ec7e:	66 90                	xchg   %ax,%ax

000000000000ec80 <internal_memalign.constprop.0>:
    ec80:	41 55                	push   %r13
    ec82:	41 54                	push   %r12
    ec84:	55                   	push   %rbp
    ec85:	53                   	push   %rbx
    ec86:	bb 20 00 00 00       	mov    $0x20,%ebx
    ec8b:	48 83 ec 18          	sub    $0x18,%rsp
    ec8f:	48 39 df             	cmp    %rbx,%rdi
    ec92:	48 0f 43 df          	cmovae %rdi,%rbx
    ec96:	48 8d 43 ff          	lea    -0x1(%rbx),%rax
    ec9a:	48 85 d8             	test   %rbx,%rax
    ec9d:	74 49                	je     ece8 <internal_memalign.constprop.0+0x68>
    ec9f:	48 83 ff 20          	cmp    $0x20,%rdi
    eca3:	0f 86 17 02 00 00    	jbe    eec0 <internal_memalign.constprop.0+0x240>
    eca9:	b8 20 00 00 00       	mov    $0x20,%eax
    ecae:	66 90                	xchg   %ax,%ax
    ecb0:	48 01 c0             	add    %rax,%rax
    ecb3:	48 39 d8             	cmp    %rbx,%rax
    ecb6:	72 f8                	jb     ecb0 <internal_memalign.constprop.0+0x30>
    ecb8:	48 c7 c2 80 ff ff ff 	mov    $0xffffffffffffff80,%rdx
    ecbf:	48 89 c3             	mov    %rax,%rbx
    ecc2:	48 29 c2             	sub    %rax,%rdx
    ecc5:	48 39 d6             	cmp    %rdx,%rsi
    ecc8:	72 2d                	jb     ecf7 <internal_memalign.constprop.0+0x77>
    ecca:	e8 f1 21 00 00       	call   10ec0 <__errno_location>
    eccf:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
    ecd5:	48 83 c4 18          	add    $0x18,%rsp
    ecd9:	31 c0                	xor    %eax,%eax
    ecdb:	5b                   	pop    %rbx
    ecdc:	5d                   	pop    %rbp
    ecdd:	41 5c                	pop    %r12
    ecdf:	41 5d                	pop    %r13
    ece1:	c3                   	ret    
    ece2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    ece8:	48 c7 c2 80 ff ff ff 	mov    $0xffffffffffffff80,%rdx
    ecef:	48 29 da             	sub    %rbx,%rdx
    ecf2:	48 39 d6             	cmp    %rdx,%rsi
    ecf5:	73 d3                	jae    ecca <internal_memalign.constprop.0+0x4a>
    ecf7:	48 8d 46 1f          	lea    0x1f(%rsi),%rax
    ecfb:	ba 20 00 00 00       	mov    $0x20,%edx
    ed00:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
    ed04:	48 83 fe 0e          	cmp    $0xe,%rsi
    ed08:	48 0f 47 d0          	cmova  %rax,%rdx
    ed0c:	48 8d 7c 13 10       	lea    0x10(%rbx,%rdx,1),%rdi
    ed11:	49 89 d4             	mov    %rdx,%r12
    ed14:	e8 17 e4 ff ff       	call   d130 <dlmalloc>
    ed19:	48 85 c0             	test   %rax,%rax
    ed1c:	74 b7                	je     ecd5 <internal_memalign.constprop.0+0x55>
    ed1e:	44 8b 2d 8b c0 01 00 	mov    0x1c08b(%rip),%r13d        # 2adb0 <_gm_+0x370>
    ed25:	48 8d 70 f0          	lea    -0x10(%rax),%rsi
    ed29:	41 83 e5 02          	and    $0x2,%r13d
    ed2d:	0f 85 9d 00 00 00    	jne    edd0 <internal_memalign.constprop.0+0x150>
    ed33:	48 8d 6b ff          	lea    -0x1(%rbx),%rbp
    ed37:	48 85 e8             	test   %rbp,%rax
    ed3a:	75 3c                	jne    ed78 <internal_memalign.constprop.0+0xf8>
    ed3c:	48 8b 50 f8          	mov    -0x8(%rax),%rdx
    ed40:	48 89 f5             	mov    %rsi,%rbp
    ed43:	f6 c2 03             	test   $0x3,%dl
    ed46:	74 15                	je     ed5d <internal_memalign.constprop.0+0xdd>
    ed48:	48 89 d1             	mov    %rdx,%rcx
    ed4b:	49 8d 74 24 20       	lea    0x20(%r12),%rsi
    ed50:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    ed54:	48 39 ce             	cmp    %rcx,%rsi
    ed57:	0f 82 a3 00 00 00    	jb     ee00 <internal_memalign.constprop.0+0x180>
    ed5d:	45 85 ed             	test   %r13d,%r13d
    ed60:	0f 85 72 01 00 00    	jne    eed8 <internal_memalign.constprop.0+0x258>
    ed66:	48 83 c4 18          	add    $0x18,%rsp
    ed6a:	5b                   	pop    %rbx
    ed6b:	5d                   	pop    %rbp
    ed6c:	41 5c                	pop    %r12
    ed6e:	41 5d                	pop    %r13
    ed70:	c3                   	ret    
    ed71:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    ed78:	48 89 da             	mov    %rbx,%rdx
    ed7b:	48 01 c5             	add    %rax,%rbp
    ed7e:	48 f7 da             	neg    %rdx
    ed81:	48 21 d5             	and    %rdx,%rbp
    ed84:	48 83 ed 10          	sub    $0x10,%rbp
    ed88:	48 89 e9             	mov    %rbp,%rcx
    ed8b:	48 29 f1             	sub    %rsi,%rcx
    ed8e:	48 83 f9 1f          	cmp    $0x1f,%rcx
    ed92:	77 09                	ja     ed9d <internal_memalign.constprop.0+0x11d>
    ed94:	48 01 dd             	add    %rbx,%rbp
    ed97:	48 89 e9             	mov    %rbp,%rcx
    ed9a:	48 29 f1             	sub    %rsi,%rcx
    ed9d:	48 8b 78 f8          	mov    -0x8(%rax),%rdi
    eda1:	48 8d 5d 10          	lea    0x10(%rbp),%rbx
    eda5:	48 89 fa             	mov    %rdi,%rdx
    eda8:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    edac:	48 29 ca             	sub    %rcx,%rdx
    edaf:	83 e7 03             	and    $0x3,%edi
    edb2:	0f 85 a8 00 00 00    	jne    ee60 <internal_memalign.constprop.0+0x1e0>
    edb8:	48 03 48 f0          	add    -0x10(%rax),%rcx
    edbc:	48 89 55 08          	mov    %rdx,0x8(%rbp)
    edc0:	48 89 d8             	mov    %rbx,%rax
    edc3:	48 89 4d 00          	mov    %rcx,0x0(%rbp)
    edc7:	e9 77 ff ff ff       	jmp    ed43 <internal_memalign.constprop.0+0xc3>
    edcc:	0f 1f 40 00          	nopl   0x0(%rax)
    edd0:	ba 01 00 00 00       	mov    $0x1,%edx
    edd5:	87 15 d9 bf 01 00    	xchg   %edx,0x1bfd9(%rip)        # 2adb4 <_gm_+0x374>
    eddb:	85 d2                	test   %edx,%edx
    eddd:	0f 85 0d 01 00 00    	jne    eef0 <internal_memalign.constprop.0+0x270>
    ede3:	44 8b 2d c6 bf 01 00 	mov    0x1bfc6(%rip),%r13d        # 2adb0 <_gm_+0x370>
    edea:	48 8d 6b ff          	lea    -0x1(%rbx),%rbp
    edee:	41 83 e5 02          	and    $0x2,%r13d
    edf2:	48 85 e8             	test   %rbp,%rax
    edf5:	75 81                	jne    ed78 <internal_memalign.constprop.0+0xf8>
    edf7:	e9 40 ff ff ff       	jmp    ed3c <internal_memalign.constprop.0+0xbc>
    edfc:	0f 1f 40 00          	nopl   0x0(%rax)
    ee00:	83 e2 01             	and    $0x1,%edx
    ee03:	49 89 c8             	mov    %rcx,%r8
    ee06:	4a 8d 74 25 00       	lea    0x0(%rbp,%r12,1),%rsi
    ee0b:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    ee10:	4c 09 e2             	or     %r12,%rdx
    ee13:	4d 29 e0             	sub    %r12,%r8
    ee16:	48 8d 3d 23 bc 01 00 	lea    0x1bc23(%rip),%rdi        # 2aa40 <_gm_>
    ee1d:	48 83 ca 02          	or     $0x2,%rdx
    ee21:	4d 89 c1             	mov    %r8,%r9
    ee24:	48 89 55 08          	mov    %rdx,0x8(%rbp)
    ee28:	48 8b 15 d1 bf 01 00 	mov    0x1bfd1(%rip),%rdx        # 2ae00 <mparams>
    ee2f:	48 01 cd             	add    %rcx,%rbp
    ee32:	49 83 c9 03          	or     $0x3,%r9
    ee36:	4c 89 4e 08          	mov    %r9,0x8(%rsi)
    ee3a:	48 31 fa             	xor    %rdi,%rdx
    ee3d:	48 89 16             	mov    %rdx,(%rsi)
    ee40:	48 83 4d 08 01       	orq    $0x1,0x8(%rbp)
    ee45:	48 89 55 00          	mov    %rdx,0x0(%rbp)
    ee49:	4c 89 c2             	mov    %r8,%rdx
    ee4c:	e8 bf d9 ff ff       	call   c810 <dispose_chunk>
    ee51:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    ee56:	e9 02 ff ff ff       	jmp    ed5d <internal_memalign.constprop.0+0xdd>
    ee5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    ee60:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
    ee64:	4c 8b 05 95 bf 01 00 	mov    0x1bf95(%rip),%r8        # 2ae00 <mparams>
    ee6b:	83 e7 01             	and    $0x1,%edi
    ee6e:	48 09 d7             	or     %rdx,%rdi
    ee71:	48 01 ea             	add    %rbp,%rdx
    ee74:	48 83 cf 02          	or     $0x2,%rdi
    ee78:	48 89 7d 08          	mov    %rdi,0x8(%rbp)
    ee7c:	48 8d 3d bd bb 01 00 	lea    0x1bbbd(%rip),%rdi        # 2aa40 <_gm_>
    ee83:	49 31 f8             	xor    %rdi,%r8
    ee86:	48 83 4a 08 01       	orq    $0x1,0x8(%rdx)
    ee8b:	4c 89 02             	mov    %r8,(%rdx)
    ee8e:	48 8b 50 f8          	mov    -0x8(%rax),%rdx
    ee92:	83 e2 01             	and    $0x1,%edx
    ee95:	48 09 ca             	or     %rcx,%rdx
    ee98:	48 83 ca 02          	or     $0x2,%rdx
    ee9c:	48 89 50 f8          	mov    %rdx,-0x8(%rax)
    eea0:	48 89 ca             	mov    %rcx,%rdx
    eea3:	48 83 4d 08 01       	orq    $0x1,0x8(%rbp)
    eea8:	4c 89 45 00          	mov    %r8,0x0(%rbp)
    eeac:	e8 5f d9 ff ff       	call   c810 <dispose_chunk>
    eeb1:	48 8b 55 08          	mov    0x8(%rbp),%rdx
    eeb5:	48 89 d8             	mov    %rbx,%rax
    eeb8:	e9 86 fe ff ff       	jmp    ed43 <internal_memalign.constprop.0+0xc3>
    eebd:	0f 1f 00             	nopl   (%rax)
    eec0:	48 c7 c2 60 ff ff ff 	mov    $0xffffffffffffff60,%rdx
    eec7:	bb 20 00 00 00       	mov    $0x20,%ebx
    eecc:	e9 21 fe ff ff       	jmp    ecf2 <internal_memalign.constprop.0+0x72>
    eed1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    eed8:	c7 05 d2 be 01 00 00 	movl   $0x0,0x1bed2(%rip)        # 2adb4 <_gm_+0x374>
    eedf:	00 00 00 
    eee2:	48 83 c4 18          	add    $0x18,%rsp
    eee6:	5b                   	pop    %rbx
    eee7:	5d                   	pop    %rbp
    eee8:	41 5c                	pop    %r12
    eeea:	41 5d                	pop    %r13
    eeec:	c3                   	ret    
    eeed:	0f 1f 00             	nopl   (%rax)
    eef0:	b9 01 00 00 00       	mov    $0x1,%ecx
    eef5:	0f 1f 00             	nopl   (%rax)
    eef8:	8b 15 b6 be 01 00    	mov    0x1beb6(%rip),%edx        # 2adb4 <_gm_+0x374>
    eefe:	85 d2                	test   %edx,%edx
    ef00:	75 f6                	jne    eef8 <internal_memalign.constprop.0+0x278>
    ef02:	89 ca                	mov    %ecx,%edx
    ef04:	87 15 aa be 01 00    	xchg   %edx,0x1beaa(%rip)        # 2adb4 <_gm_+0x374>
    ef0a:	85 d2                	test   %edx,%edx
    ef0c:	75 ea                	jne    eef8 <internal_memalign.constprop.0+0x278>
    ef0e:	e9 d0 fe ff ff       	jmp    ede3 <internal_memalign.constprop.0+0x163>
    ef13:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    ef1a:	00 00 00 
    ef1d:	0f 1f 00             	nopl   (%rax)

000000000000ef20 <dlfree>:
    ef20:	f3 0f 1e fa          	endbr64 
    ef24:	48 85 ff             	test   %rdi,%rdi
    ef27:	0f 84 db 01 00 00    	je     f108 <dlfree+0x1e8>
    ef2d:	41 55                	push   %r13
    ef2f:	48 89 f8             	mov    %rdi,%rax
    ef32:	48 8d 57 f0          	lea    -0x10(%rdi),%rdx
    ef36:	41 54                	push   %r12
    ef38:	55                   	push   %rbp
    ef39:	53                   	push   %rbx
    ef3a:	48 83 ec 08          	sub    $0x8,%rsp
    ef3e:	48 8b 4f f8          	mov    -0x8(%rdi),%rcx
    ef42:	48 8b 35 b7 be 01 00 	mov    0x1beb7(%rip),%rsi        # 2ae00 <mparams>
    ef49:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    ef4d:	48 8b 5c 0f f0       	mov    -0x10(%rdi,%rcx,1),%rbx
    ef52:	48 31 f3             	xor    %rsi,%rbx
    ef55:	48 3b 73 40          	cmp    0x40(%rbx),%rsi
    ef59:	0f 85 89 02 00 00    	jne    f1e8 <dlfree+0x2c8>
    ef5f:	f6 83 70 03 00 00 02 	testb  $0x2,0x370(%rbx)
    ef66:	0f 85 54 01 00 00    	jne    f0c0 <dlfree+0x1a0>
    ef6c:	4c 8b 4b 18          	mov    0x18(%rbx),%r9
    ef70:	4c 39 ca             	cmp    %r9,%rdx
    ef73:	0f 82 87 01 00 00    	jb     f100 <dlfree+0x1e0>
    ef79:	48 8b 48 f8          	mov    -0x8(%rax),%rcx
    ef7d:	49 89 c8             	mov    %rcx,%r8
    ef80:	41 83 e0 03          	and    $0x3,%r8d
    ef84:	49 83 f8 01          	cmp    $0x1,%r8
    ef88:	0f 84 72 01 00 00    	je     f100 <dlfree+0x1e0>
    ef8e:	48 89 ce             	mov    %rcx,%rsi
    ef91:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
    ef95:	83 e1 01             	and    $0x1,%ecx
    ef98:	48 8d 3c 32          	lea    (%rdx,%rsi,1),%rdi
    ef9c:	0f 84 9e 00 00 00    	je     f040 <dlfree+0x120>
    efa2:	48 39 fa             	cmp    %rdi,%rdx
    efa5:	0f 83 55 01 00 00    	jae    f100 <dlfree+0x1e0>
    efab:	48 8b 47 08          	mov    0x8(%rdi),%rax
    efaf:	a8 01                	test   $0x1,%al
    efb1:	0f 84 49 01 00 00    	je     f100 <dlfree+0x1e0>
    efb7:	a8 02                	test   $0x2,%al
    efb9:	0f 84 51 01 00 00    	je     f110 <dlfree+0x1f0>
    efbf:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    efc3:	48 89 47 08          	mov    %rax,0x8(%rdi)
    efc7:	48 89 f0             	mov    %rsi,%rax
    efca:	48 83 c8 01          	or     $0x1,%rax
    efce:	48 89 42 08          	mov    %rax,0x8(%rdx)
    efd2:	48 89 34 32          	mov    %rsi,(%rdx,%rsi,1)
    efd6:	48 89 f1             	mov    %rsi,%rcx
    efd9:	48 c1 e9 03          	shr    $0x3,%rcx
    efdd:	48 81 fe ff 00 00 00 	cmp    $0xff,%rsi
    efe4:	0f 87 ce 01 00 00    	ja     f1b8 <dlfree+0x298>
    efea:	8d 44 09 09          	lea    0x9(%rcx,%rcx,1),%eax
    efee:	8b 3b                	mov    (%rbx),%edi
    eff0:	48 8d 34 c3          	lea    (%rbx,%rax,8),%rsi
    eff4:	b8 01 00 00 00       	mov    $0x1,%eax
    eff9:	d3 e0                	shl    %cl,%eax
    effb:	85 c7                	test   %eax,%edi
    effd:	0f 84 35 06 00 00    	je     f638 <dlfree+0x718>
    f003:	48 8b 46 10          	mov    0x10(%rsi),%rax
    f007:	4c 39 c8             	cmp    %r9,%rax
    f00a:	0f 82 d8 01 00 00    	jb     f1e8 <dlfree+0x2c8>
    f010:	48 89 56 10          	mov    %rdx,0x10(%rsi)
    f014:	48 89 50 18          	mov    %rdx,0x18(%rax)
    f018:	48 89 42 10          	mov    %rax,0x10(%rdx)
    f01c:	48 89 72 18          	mov    %rsi,0x18(%rdx)
    f020:	f6 83 70 03 00 00 02 	testb  $0x2,0x370(%rbx)
    f027:	0f 85 73 01 00 00    	jne    f1a0 <dlfree+0x280>
    f02d:	48 83 c4 08          	add    $0x8,%rsp
    f031:	5b                   	pop    %rbx
    f032:	5d                   	pop    %rbp
    f033:	41 5c                	pop    %r12
    f035:	41 5d                	pop    %r13
    f037:	c3                   	ret    
    f038:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    f03f:	00 
    f040:	48 8b 40 f0          	mov    -0x10(%rax),%rax
    f044:	4d 85 c0             	test   %r8,%r8
    f047:	74 d7                	je     f020 <dlfree+0x100>
    f049:	48 29 c2             	sub    %rax,%rdx
    f04c:	48 01 c6             	add    %rax,%rsi
    f04f:	4c 39 ca             	cmp    %r9,%rdx
    f052:	0f 82 a8 00 00 00    	jb     f100 <dlfree+0x1e0>
    f058:	48 39 53 20          	cmp    %rdx,0x20(%rbx)
    f05c:	0f 84 9e 05 00 00    	je     f600 <dlfree+0x6e0>
    f062:	48 89 c1             	mov    %rax,%rcx
    f065:	48 c1 e9 03          	shr    $0x3,%rcx
    f069:	48 3d ff 00 00 00    	cmp    $0xff,%rax
    f06f:	0f 87 6b 02 00 00    	ja     f2e0 <dlfree+0x3c0>
    f075:	44 8d 54 09 09       	lea    0x9(%rcx,%rcx,1),%r10d
    f07a:	48 8b 42 10          	mov    0x10(%rdx),%rax
    f07e:	4c 8b 42 18          	mov    0x18(%rdx),%r8
    f082:	4e 8d 14 d3          	lea    (%rbx,%r10,8),%r10
    f086:	49 39 c2             	cmp    %rax,%r10
    f089:	0f 85 ae 07 00 00    	jne    f83d <dlfree+0x91d>
    f08f:	4c 39 c0             	cmp    %r8,%rax
    f092:	0f 84 28 05 00 00    	je     f5c0 <dlfree+0x6a0>
    f098:	4d 39 c8             	cmp    %r9,%r8
    f09b:	0f 82 47 01 00 00    	jb     f1e8 <dlfree+0x2c8>
    f0a1:	49 39 50 10          	cmp    %rdx,0x10(%r8)
    f0a5:	0f 85 3d 01 00 00    	jne    f1e8 <dlfree+0x2c8>
    f0ab:	4c 89 40 18          	mov    %r8,0x18(%rax)
    f0af:	49 89 40 10          	mov    %rax,0x10(%r8)
    f0b3:	e9 ea fe ff ff       	jmp    efa2 <dlfree+0x82>
    f0b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    f0bf:	00 
    f0c0:	48 8d b3 74 03 00 00 	lea    0x374(%rbx),%rsi
    f0c7:	b9 01 00 00 00       	mov    $0x1,%ecx
    f0cc:	87 0e                	xchg   %ecx,(%rsi)
    f0ce:	85 c9                	test   %ecx,%ecx
    f0d0:	0f 84 96 fe ff ff    	je     ef6c <dlfree+0x4c>
    f0d6:	bf 01 00 00 00       	mov    $0x1,%edi
    f0db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    f0e0:	8b 8b 74 03 00 00    	mov    0x374(%rbx),%ecx
    f0e6:	85 c9                	test   %ecx,%ecx
    f0e8:	75 f6                	jne    f0e0 <dlfree+0x1c0>
    f0ea:	89 f9                	mov    %edi,%ecx
    f0ec:	87 0e                	xchg   %ecx,(%rsi)
    f0ee:	85 c9                	test   %ecx,%ecx
    f0f0:	75 ee                	jne    f0e0 <dlfree+0x1c0>
    f0f2:	e9 75 fe ff ff       	jmp    ef6c <dlfree+0x4c>
    f0f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    f0fe:	00 00 
    f100:	e8 32 34 00 00       	call   12537 <abort>
    f105:	0f 1f 00             	nopl   (%rax)
    f108:	c3                   	ret    
    f109:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f110:	4c 8b 5b 20          	mov    0x20(%rbx),%r11
    f114:	48 39 7b 28          	cmp    %rdi,0x28(%rbx)
    f118:	0f 84 72 05 00 00    	je     f690 <dlfree+0x770>
    f11e:	49 39 fb             	cmp    %rdi,%r11
    f121:	0f 84 91 06 00 00    	je     f7b8 <dlfree+0x898>
    f127:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    f12b:	48 89 c1             	mov    %rax,%rcx
    f12e:	48 01 c6             	add    %rax,%rsi
    f131:	48 c1 e9 03          	shr    $0x3,%rcx
    f135:	48 3d f8 00 00 00    	cmp    $0xf8,%rax
    f13b:	0f 87 67 02 00 00    	ja     f3a8 <dlfree+0x488>
    f141:	44 8d 54 09 09       	lea    0x9(%rcx,%rcx,1),%r10d
    f146:	48 8b 47 10          	mov    0x10(%rdi),%rax
    f14a:	4c 8b 47 18          	mov    0x18(%rdi),%r8
    f14e:	4e 8d 14 d3          	lea    (%rbx,%r10,8),%r10
    f152:	49 39 c2             	cmp    %rax,%r10
    f155:	0f 85 73 04 00 00    	jne    f5ce <dlfree+0x6ae>
    f15b:	4c 39 c0             	cmp    %r8,%rax
    f15e:	0f 84 7c 06 00 00    	je     f7e0 <dlfree+0x8c0>
    f164:	4d 39 c8             	cmp    %r9,%r8
    f167:	72 7f                	jb     f1e8 <dlfree+0x2c8>
    f169:	49 39 78 10          	cmp    %rdi,0x10(%r8)
    f16d:	75 79                	jne    f1e8 <dlfree+0x2c8>
    f16f:	4c 89 40 18          	mov    %r8,0x18(%rax)
    f173:	49 89 40 10          	mov    %rax,0x10(%r8)
    f177:	48 89 f0             	mov    %rsi,%rax
    f17a:	48 83 c8 01          	or     $0x1,%rax
    f17e:	48 89 42 08          	mov    %rax,0x8(%rdx)
    f182:	48 89 34 32          	mov    %rsi,(%rdx,%rsi,1)
    f186:	4c 39 da             	cmp    %r11,%rdx
    f189:	0f 85 47 fe ff ff    	jne    efd6 <dlfree+0xb6>
    f18f:	48 89 73 08          	mov    %rsi,0x8(%rbx)
    f193:	e9 88 fe ff ff       	jmp    f020 <dlfree+0x100>
    f198:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    f19f:	00 
    f1a0:	c7 83 74 03 00 00 00 	movl   $0x0,0x374(%rbx)
    f1a7:	00 00 00 
    f1aa:	48 83 c4 08          	add    $0x8,%rsp
    f1ae:	5b                   	pop    %rbx
    f1af:	5d                   	pop    %rbp
    f1b0:	41 5c                	pop    %r12
    f1b2:	41 5d                	pop    %r13
    f1b4:	c3                   	ret    
    f1b5:	0f 1f 00             	nopl   (%rax)
    f1b8:	48 89 f0             	mov    %rsi,%rax
    f1bb:	48 c1 e8 08          	shr    $0x8,%rax
    f1bf:	89 c1                	mov    %eax,%ecx
    f1c1:	85 c0                	test   %eax,%eax
    f1c3:	74 2b                	je     f1f0 <dlfree+0x2d0>
    f1c5:	3d ff ff 00 00       	cmp    $0xffff,%eax
    f1ca:	0f 86 a0 02 00 00    	jbe    f470 <dlfree+0x550>
    f1d0:	b8 00 00 00 80       	mov    $0x80000000,%eax
    f1d5:	bf 50 03 00 00       	mov    $0x350,%edi
    f1da:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    f1df:	eb 19                	jmp    f1fa <dlfree+0x2da>
    f1e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f1e8:	e8 4a 33 00 00       	call   12537 <abort>
    f1ed:	0f 1f 00             	nopl   (%rax)
    f1f0:	b8 01 00 00 00       	mov    $0x1,%eax
    f1f5:	bf 58 02 00 00       	mov    $0x258,%edi
    f1fa:	44 8b 43 04          	mov    0x4(%rbx),%r8d
    f1fe:	66 48 0f 6e ca       	movq   %rdx,%xmm1
    f203:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f207:	89 4a 38             	mov    %ecx,0x38(%rdx)
    f20a:	66 0f 6c c9          	punpcklqdq %xmm1,%xmm1
    f20e:	0f 11 42 20          	movups %xmm0,0x20(%rdx)
    f212:	44 85 c0             	test   %r8d,%eax
    f215:	0f 84 2d 04 00 00    	je     f648 <dlfree+0x728>
    f21b:	89 c8                	mov    %ecx,%eax
    f21d:	49 89 f0             	mov    %rsi,%r8
    f220:	48 8b bc c3 58 02 00 	mov    0x258(%rbx,%rax,8),%rdi
    f227:	00 
    f228:	83 f9 1f             	cmp    $0x1f,%ecx
    f22b:	74 31                	je     f25e <dlfree+0x33e>
    f22d:	89 c8                	mov    %ecx,%eax
    f22f:	b9 39 00 00 00       	mov    $0x39,%ecx
    f234:	d1 e8                	shr    %eax
    f236:	29 c1                	sub    %eax,%ecx
    f238:	49 d3 e0             	shl    %cl,%r8
    f23b:	eb 21                	jmp    f25e <dlfree+0x33e>
    f23d:	0f 1f 00             	nopl   (%rax)
    f240:	4c 89 c0             	mov    %r8,%rax
    f243:	4d 01 c0             	add    %r8,%r8
    f246:	48 c1 e8 3f          	shr    $0x3f,%rax
    f24a:	48 83 c0 04          	add    $0x4,%rax
    f24e:	48 8b 0c c7          	mov    (%rdi,%rax,8),%rcx
    f252:	48 85 c9             	test   %rcx,%rcx
    f255:	0f 84 15 04 00 00    	je     f670 <dlfree+0x750>
    f25b:	48 89 cf             	mov    %rcx,%rdi
    f25e:	48 8b 47 08          	mov    0x8(%rdi),%rax
    f262:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    f266:	48 39 f0             	cmp    %rsi,%rax
    f269:	75 d5                	jne    f240 <dlfree+0x320>
    f26b:	48 8b 47 10          	mov    0x10(%rdi),%rax
    f26f:	66 48 0f 6e d7       	movq   %rdi,%xmm2
    f274:	66 48 0f 6e c0       	movq   %rax,%xmm0
    f279:	66 0f 6c c2          	punpcklqdq %xmm2,%xmm0
    f27d:	4c 39 cf             	cmp    %r9,%rdi
    f280:	0f 82 62 ff ff ff    	jb     f1e8 <dlfree+0x2c8>
    f286:	4c 39 c8             	cmp    %r9,%rax
    f289:	0f 82 59 ff ff ff    	jb     f1e8 <dlfree+0x2c8>
    f28f:	48 89 50 18          	mov    %rdx,0x18(%rax)
    f293:	48 89 57 10          	mov    %rdx,0x10(%rdi)
    f297:	48 c7 42 30 00 00 00 	movq   $0x0,0x30(%rdx)
    f29e:	00 
    f29f:	0f 11 42 10          	movups %xmm0,0x10(%rdx)
    f2a3:	48 83 6b 38 01       	subq   $0x1,0x38(%rbx)
    f2a8:	0f 85 72 fd ff ff    	jne    f020 <dlfree+0x100>
    f2ae:	48 8b 83 88 03 00 00 	mov    0x388(%rbx),%rax
    f2b5:	48 85 c0             	test   %rax,%rax
    f2b8:	74 0f                	je     f2c9 <dlfree+0x3a9>
    f2ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    f2c0:	48 8b 40 10          	mov    0x10(%rax),%rax
    f2c4:	48 85 c0             	test   %rax,%rax
    f2c7:	75 f7                	jne    f2c0 <dlfree+0x3a0>
    f2c9:	48 c7 43 38 ff ff ff 	movq   $0xffffffffffffffff,0x38(%rbx)
    f2d0:	ff 
    f2d1:	e9 4a fd ff ff       	jmp    f020 <dlfree+0x100>
    f2d6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    f2dd:	00 00 00 
    f2e0:	4c 8b 42 18          	mov    0x18(%rdx),%r8
    f2e4:	4c 8b 5a 30          	mov    0x30(%rdx),%r11
    f2e8:	49 39 d0             	cmp    %rdx,%r8
    f2eb:	0f 84 bf 01 00 00    	je     f4b0 <dlfree+0x590>
    f2f1:	48 8b 42 10          	mov    0x10(%rdx),%rax
    f2f5:	4c 39 c8             	cmp    %r9,%rax
    f2f8:	0f 82 ea fe ff ff    	jb     f1e8 <dlfree+0x2c8>
    f2fe:	48 39 50 18          	cmp    %rdx,0x18(%rax)
    f302:	0f 85 e0 fe ff ff    	jne    f1e8 <dlfree+0x2c8>
    f308:	49 39 50 10          	cmp    %rdx,0x10(%r8)
    f30c:	0f 85 d6 fe ff ff    	jne    f1e8 <dlfree+0x2c8>
    f312:	4c 89 40 18          	mov    %r8,0x18(%rax)
    f316:	49 89 40 10          	mov    %rax,0x10(%r8)
    f31a:	4d 85 db             	test   %r11,%r11
    f31d:	0f 84 7f fc ff ff    	je     efa2 <dlfree+0x82>
    f323:	8b 42 38             	mov    0x38(%rdx),%eax
    f326:	48 89 c1             	mov    %rax,%rcx
    f329:	4c 8d 50 4a          	lea    0x4a(%rax),%r10
    f32d:	48 39 94 c3 58 02 00 	cmp    %rdx,0x258(%rbx,%rax,8)
    f334:	00 
    f335:	0f 84 c8 04 00 00    	je     f803 <dlfree+0x8e3>
    f33b:	4d 39 cb             	cmp    %r9,%r11
    f33e:	0f 82 a4 fe ff ff    	jb     f1e8 <dlfree+0x2c8>
    f344:	49 39 53 20          	cmp    %rdx,0x20(%r11)
    f348:	0f 84 4a 05 00 00    	je     f898 <dlfree+0x978>
    f34e:	4d 89 43 28          	mov    %r8,0x28(%r11)
    f352:	4d 85 c0             	test   %r8,%r8
    f355:	0f 84 47 fc ff ff    	je     efa2 <dlfree+0x82>
    f35b:	4d 39 c8             	cmp    %r9,%r8
    f35e:	0f 82 84 fe ff ff    	jb     f1e8 <dlfree+0x2c8>
    f364:	48 8b 42 20          	mov    0x20(%rdx),%rax
    f368:	4d 89 58 30          	mov    %r11,0x30(%r8)
    f36c:	48 85 c0             	test   %rax,%rax
    f36f:	74 11                	je     f382 <dlfree+0x462>
    f371:	4c 39 c8             	cmp    %r9,%rax
    f374:	0f 82 6e fe ff ff    	jb     f1e8 <dlfree+0x2c8>
    f37a:	49 89 40 20          	mov    %rax,0x20(%r8)
    f37e:	4c 89 40 30          	mov    %r8,0x30(%rax)
    f382:	48 8b 42 28          	mov    0x28(%rdx),%rax
    f386:	48 85 c0             	test   %rax,%rax
    f389:	0f 84 13 fc ff ff    	je     efa2 <dlfree+0x82>
    f38f:	4c 39 c8             	cmp    %r9,%rax
    f392:	0f 82 50 fe ff ff    	jb     f1e8 <dlfree+0x2c8>
    f398:	49 89 40 28          	mov    %rax,0x28(%r8)
    f39c:	4c 89 40 30          	mov    %r8,0x30(%rax)
    f3a0:	e9 fd fb ff ff       	jmp    efa2 <dlfree+0x82>
    f3a5:	0f 1f 00             	nopl   (%rax)
    f3a8:	4c 8b 47 18          	mov    0x18(%rdi),%r8
    f3ac:	48 8b 6f 30          	mov    0x30(%rdi),%rbp
    f3b0:	49 39 f8             	cmp    %rdi,%r8
    f3b3:	0f 84 7f 01 00 00    	je     f538 <dlfree+0x618>
    f3b9:	48 8b 47 10          	mov    0x10(%rdi),%rax
    f3bd:	4c 39 c8             	cmp    %r9,%rax
    f3c0:	0f 82 22 fe ff ff    	jb     f1e8 <dlfree+0x2c8>
    f3c6:	48 39 78 18          	cmp    %rdi,0x18(%rax)
    f3ca:	0f 85 18 fe ff ff    	jne    f1e8 <dlfree+0x2c8>
    f3d0:	49 39 78 10          	cmp    %rdi,0x10(%r8)
    f3d4:	0f 85 0e fe ff ff    	jne    f1e8 <dlfree+0x2c8>
    f3da:	4c 89 40 18          	mov    %r8,0x18(%rax)
    f3de:	49 89 40 10          	mov    %rax,0x10(%r8)
    f3e2:	48 85 ed             	test   %rbp,%rbp
    f3e5:	0f 84 8c fd ff ff    	je     f177 <dlfree+0x257>
    f3eb:	8b 47 38             	mov    0x38(%rdi),%eax
    f3ee:	48 89 c1             	mov    %rax,%rcx
    f3f1:	4c 8d 50 4a          	lea    0x4a(%rax),%r10
    f3f5:	48 39 bc c3 58 02 00 	cmp    %rdi,0x258(%rbx,%rax,8)
    f3fc:	00 
    f3fd:	0f 84 1d 04 00 00    	je     f820 <dlfree+0x900>
    f403:	4c 39 cd             	cmp    %r9,%rbp
    f406:	0f 82 dc fd ff ff    	jb     f1e8 <dlfree+0x2c8>
    f40c:	48 39 7d 20          	cmp    %rdi,0x20(%rbp)
    f410:	0f 84 8b 04 00 00    	je     f8a1 <dlfree+0x981>
    f416:	4c 89 45 28          	mov    %r8,0x28(%rbp)
    f41a:	4d 85 c0             	test   %r8,%r8
    f41d:	0f 84 54 fd ff ff    	je     f177 <dlfree+0x257>
    f423:	4d 39 c8             	cmp    %r9,%r8
    f426:	0f 82 bc fd ff ff    	jb     f1e8 <dlfree+0x2c8>
    f42c:	48 8b 47 20          	mov    0x20(%rdi),%rax
    f430:	49 89 68 30          	mov    %rbp,0x30(%r8)
    f434:	48 85 c0             	test   %rax,%rax
    f437:	74 11                	je     f44a <dlfree+0x52a>
    f439:	4c 39 c8             	cmp    %r9,%rax
    f43c:	0f 82 a6 fd ff ff    	jb     f1e8 <dlfree+0x2c8>
    f442:	49 89 40 20          	mov    %rax,0x20(%r8)
    f446:	4c 89 40 30          	mov    %r8,0x30(%rax)
    f44a:	48 8b 47 28          	mov    0x28(%rdi),%rax
    f44e:	48 85 c0             	test   %rax,%rax
    f451:	0f 84 20 fd ff ff    	je     f177 <dlfree+0x257>
    f457:	4c 39 c8             	cmp    %r9,%rax
    f45a:	0f 82 88 fd ff ff    	jb     f1e8 <dlfree+0x2c8>
    f460:	49 89 40 28          	mov    %rax,0x28(%r8)
    f464:	4c 89 40 30          	mov    %r8,0x30(%rax)
    f468:	e9 0a fd ff ff       	jmp    f177 <dlfree+0x257>
    f46d:	0f 1f 00             	nopl   (%rax)
    f470:	0f bd c1             	bsr    %ecx,%eax
    f473:	b9 26 00 00 00       	mov    $0x26,%ecx
    f478:	48 89 f7             	mov    %rsi,%rdi
    f47b:	83 f0 1f             	xor    $0x1f,%eax
    f47e:	29 c1                	sub    %eax,%ecx
    f480:	48 d3 ef             	shr    %cl,%rdi
    f483:	48 89 f9             	mov    %rdi,%rcx
    f486:	bf 1f 00 00 00       	mov    $0x1f,%edi
    f48b:	29 c7                	sub    %eax,%edi
    f48d:	83 e1 01             	and    $0x1,%ecx
    f490:	b8 01 00 00 00       	mov    $0x1,%eax
    f495:	8d 0c 79             	lea    (%rcx,%rdi,2),%ecx
    f498:	8d 79 4b             	lea    0x4b(%rcx),%edi
    f49b:	d3 e0                	shl    %cl,%eax
    f49d:	48 c1 e7 03          	shl    $0x3,%rdi
    f4a1:	e9 54 fd ff ff       	jmp    f1fa <dlfree+0x2da>
    f4a6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    f4ad:	00 00 00 
    f4b0:	48 8b 42 28          	mov    0x28(%rdx),%rax
    f4b4:	48 8d 4a 28          	lea    0x28(%rdx),%rcx
    f4b8:	48 85 c0             	test   %rax,%rax
    f4bb:	0f 84 af 03 00 00    	je     f870 <dlfree+0x950>
    f4c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f4c8:	49 89 ca             	mov    %rcx,%r10
    f4cb:	49 89 c0             	mov    %rax,%r8
    f4ce:	48 8d 48 28          	lea    0x28(%rax),%rcx
    f4d2:	48 8b 40 28          	mov    0x28(%rax),%rax
    f4d6:	48 85 c0             	test   %rax,%rax
    f4d9:	75 ed                	jne    f4c8 <dlfree+0x5a8>
    f4db:	49 8b 40 20          	mov    0x20(%r8),%rax
    f4df:	49 8d 48 20          	lea    0x20(%r8),%rcx
    f4e3:	48 85 c0             	test   %rax,%rax
    f4e6:	75 e0                	jne    f4c8 <dlfree+0x5a8>
    f4e8:	4d 39 ca             	cmp    %r9,%r10
    f4eb:	0f 82 f7 fc ff ff    	jb     f1e8 <dlfree+0x2c8>
    f4f1:	49 c7 02 00 00 00 00 	movq   $0x0,(%r10)
    f4f8:	4d 85 db             	test   %r11,%r11
    f4fb:	0f 84 a1 fa ff ff    	je     efa2 <dlfree+0x82>
    f501:	8b 42 38             	mov    0x38(%rdx),%eax
    f504:	48 8d 48 4a          	lea    0x4a(%rax),%rcx
    f508:	48 39 94 c3 58 02 00 	cmp    %rdx,0x258(%rbx,%rax,8)
    f50f:	00 
    f510:	0f 84 a2 03 00 00    	je     f8b8 <dlfree+0x998>
    f516:	4d 39 cb             	cmp    %r9,%r11
    f519:	0f 82 c9 fc ff ff    	jb     f1e8 <dlfree+0x2c8>
    f51f:	49 39 53 20          	cmp    %rdx,0x20(%r11)
    f523:	0f 84 ac 03 00 00    	je     f8d5 <dlfree+0x9b5>
    f529:	4d 89 43 28          	mov    %r8,0x28(%r11)
    f52d:	e9 29 fe ff ff       	jmp    f35b <dlfree+0x43b>
    f532:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    f538:	48 8b 47 28          	mov    0x28(%rdi),%rax
    f53c:	48 8d 4f 28          	lea    0x28(%rdi),%rcx
    f540:	48 85 c0             	test   %rax,%rax
    f543:	0f 84 39 03 00 00    	je     f882 <dlfree+0x962>
    f549:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f550:	49 89 ca             	mov    %rcx,%r10
    f553:	49 89 c0             	mov    %rax,%r8
    f556:	48 8d 48 28          	lea    0x28(%rax),%rcx
    f55a:	48 8b 40 28          	mov    0x28(%rax),%rax
    f55e:	48 85 c0             	test   %rax,%rax
    f561:	75 ed                	jne    f550 <dlfree+0x630>
    f563:	49 8b 40 20          	mov    0x20(%r8),%rax
    f567:	49 8d 48 20          	lea    0x20(%r8),%rcx
    f56b:	48 85 c0             	test   %rax,%rax
    f56e:	75 e0                	jne    f550 <dlfree+0x630>
    f570:	4d 39 ca             	cmp    %r9,%r10
    f573:	0f 82 6f fc ff ff    	jb     f1e8 <dlfree+0x2c8>
    f579:	49 c7 02 00 00 00 00 	movq   $0x0,(%r10)
    f580:	48 85 ed             	test   %rbp,%rbp
    f583:	0f 84 ee fb ff ff    	je     f177 <dlfree+0x257>
    f589:	8b 47 38             	mov    0x38(%rdi),%eax
    f58c:	48 8d 48 4a          	lea    0x4a(%rax),%rcx
    f590:	48 39 bc c3 58 02 00 	cmp    %rdi,0x258(%rbx,%rax,8)
    f597:	00 
    f598:	0f 84 24 03 00 00    	je     f8c2 <dlfree+0x9a2>
    f59e:	4c 39 cd             	cmp    %r9,%rbp
    f5a1:	0f 82 41 fc ff ff    	jb     f1e8 <dlfree+0x2c8>
    f5a7:	48 39 7d 20          	cmp    %rdi,0x20(%rbp)
    f5ab:	0f 84 1b 03 00 00    	je     f8cc <dlfree+0x9ac>
    f5b1:	4c 89 45 28          	mov    %r8,0x28(%rbp)
    f5b5:	e9 69 fe ff ff       	jmp    f423 <dlfree+0x503>
    f5ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    f5c0:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    f5c5:	d3 c0                	rol    %cl,%eax
    f5c7:	21 03                	and    %eax,(%rbx)
    f5c9:	e9 d4 f9 ff ff       	jmp    efa2 <dlfree+0x82>
    f5ce:	4c 39 c8             	cmp    %r9,%rax
    f5d1:	0f 82 11 fc ff ff    	jb     f1e8 <dlfree+0x2c8>
    f5d7:	48 39 78 18          	cmp    %rdi,0x18(%rax)
    f5db:	0f 85 07 fc ff ff    	jne    f1e8 <dlfree+0x2c8>
    f5e1:	4c 39 c0             	cmp    %r8,%rax
    f5e4:	0f 84 f6 01 00 00    	je     f7e0 <dlfree+0x8c0>
    f5ea:	4d 39 c2             	cmp    %r8,%r10
    f5ed:	0f 84 7c fb ff ff    	je     f16f <dlfree+0x24f>
    f5f3:	e9 6c fb ff ff       	jmp    f164 <dlfree+0x244>
    f5f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    f5ff:	00 
    f600:	48 8b 47 08          	mov    0x8(%rdi),%rax
    f604:	48 89 c1             	mov    %rax,%rcx
    f607:	48 f7 d1             	not    %rcx
    f60a:	83 e1 03             	and    $0x3,%ecx
    f60d:	0f 85 8f f9 ff ff    	jne    efa2 <dlfree+0x82>
    f613:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    f617:	48 89 73 08          	mov    %rsi,0x8(%rbx)
    f61b:	48 89 47 08          	mov    %rax,0x8(%rdi)
    f61f:	48 89 f0             	mov    %rsi,%rax
    f622:	48 83 c8 01          	or     $0x1,%rax
    f626:	48 89 42 08          	mov    %rax,0x8(%rdx)
    f62a:	48 89 37             	mov    %rsi,(%rdi)
    f62d:	e9 ee f9 ff ff       	jmp    f020 <dlfree+0x100>
    f632:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    f638:	09 c7                	or     %eax,%edi
    f63a:	48 89 f0             	mov    %rsi,%rax
    f63d:	89 3b                	mov    %edi,(%rbx)
    f63f:	e9 cc f9 ff ff       	jmp    f010 <dlfree+0xf0>
    f644:	0f 1f 40 00          	nopl   0x0(%rax)
    f648:	44 09 c0             	or     %r8d,%eax
    f64b:	48 01 df             	add    %rbx,%rdi
    f64e:	89 43 04             	mov    %eax,0x4(%rbx)
    f651:	48 89 94 cb 58 02 00 	mov    %rdx,0x258(%rbx,%rcx,8)
    f658:	00 
    f659:	48 89 7a 30          	mov    %rdi,0x30(%rdx)
    f65d:	0f 11 4a 10          	movups %xmm1,0x10(%rdx)
    f661:	e9 3d fc ff ff       	jmp    f2a3 <dlfree+0x383>
    f666:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    f66d:	00 00 00 
    f670:	48 8d 0c c7          	lea    (%rdi,%rax,8),%rcx
    f674:	4c 39 c9             	cmp    %r9,%rcx
    f677:	0f 82 6b fb ff ff    	jb     f1e8 <dlfree+0x2c8>
    f67d:	48 89 14 c7          	mov    %rdx,(%rdi,%rax,8)
    f681:	48 89 7a 30          	mov    %rdi,0x30(%rdx)
    f685:	0f 11 4a 10          	movups %xmm1,0x10(%rdx)
    f689:	e9 15 fc ff ff       	jmp    f2a3 <dlfree+0x383>
    f68e:	66 90                	xchg   %ax,%ax
    f690:	48 03 73 10          	add    0x10(%rbx),%rsi
    f694:	48 89 53 28          	mov    %rdx,0x28(%rbx)
    f698:	48 89 f0             	mov    %rsi,%rax
    f69b:	48 89 73 10          	mov    %rsi,0x10(%rbx)
    f69f:	48 83 c8 01          	or     $0x1,%rax
    f6a3:	48 89 42 08          	mov    %rax,0x8(%rdx)
    f6a7:	4c 39 da             	cmp    %r11,%rdx
    f6aa:	0f 84 3e 01 00 00    	je     f7ee <dlfree+0x8ce>
    f6b0:	48 39 73 30          	cmp    %rsi,0x30(%rbx)
    f6b4:	0f 83 66 f9 ff ff    	jae    f020 <dlfree+0x100>
    f6ba:	48 83 3d 3e b7 01 00 	cmpq   $0x0,0x1b73e(%rip)        # 2ae00 <mparams>
    f6c1:	00 
    f6c2:	0f 84 e2 01 00 00    	je     f8aa <dlfree+0x98a>
    f6c8:	48 85 d2             	test   %rdx,%rdx
    f6cb:	0f 84 4f f9 ff ff    	je     f020 <dlfree+0x100>
    f6d1:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
    f6d5:	48 83 f9 50          	cmp    $0x50,%rcx
    f6d9:	0f 86 a7 00 00 00    	jbe    f786 <dlfree+0x866>
    f6df:	48 8b 35 2a b7 01 00 	mov    0x1b72a(%rip),%rsi        # 2ae10 <mparams+0x10>
    f6e6:	48 8d ab 78 03 00 00 	lea    0x378(%rbx),%rbp
    f6ed:	0f 1f 00             	nopl   (%rax)
    f6f0:	48 8b 45 00          	mov    0x0(%rbp),%rax
    f6f4:	48 39 c2             	cmp    %rax,%rdx
    f6f7:	72 09                	jb     f702 <dlfree+0x7e2>
    f6f9:	48 03 45 08          	add    0x8(%rbp),%rax
    f6fd:	48 39 c2             	cmp    %rax,%rdx
    f700:	72 09                	jb     f70b <dlfree+0x7eb>
    f702:	48 8b 6d 10          	mov    0x10(%rbp),%rbp
    f706:	48 85 ed             	test   %rbp,%rbp
    f709:	75 e5                	jne    f6f0 <dlfree+0x7d0>
    f70b:	f6 45 18 08          	testb  $0x8,0x18(%rbp)
    f70f:	75 75                	jne    f786 <dlfree+0x866>
    f711:	48 8d 44 31 af       	lea    -0x51(%rcx,%rsi,1),%rax
    f716:	31 d2                	xor    %edx,%edx
    f718:	48 f7 f6             	div    %rsi
    f71b:	48 83 e8 01          	sub    $0x1,%rax
    f71f:	48 0f af c6          	imul   %rsi,%rax
    f723:	49 89 c4             	mov    %rax,%r12
    f726:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
    f72d:	ff ff 7f 
    f730:	4c 39 e0             	cmp    %r12,%rax
    f733:	73 0d                	jae    f742 <dlfree+0x822>
    f735:	49 bc 00 00 00 00 00 	movabs $0x8000000000000000,%r12
    f73c:	00 00 80 
    f73f:	49 29 f4             	sub    %rsi,%r12
    f742:	b8 01 00 00 00       	mov    $0x1,%eax
    f747:	87 05 e3 b6 01 00    	xchg   %eax,0x1b6e3(%rip)        # 2ae30 <malloc_global_mutex>
    f74d:	48 8d 15 dc b6 01 00 	lea    0x1b6dc(%rip),%rdx        # 2ae30 <malloc_global_mutex>
    f754:	b9 01 00 00 00       	mov    $0x1,%ecx
    f759:	85 c0                	test   %eax,%eax
    f75b:	75 40                	jne    f79d <dlfree+0x87d>
    f75d:	31 ff                	xor    %edi,%edi
    f75f:	e8 ec ce ff ff       	call   c650 <sbrk>
    f764:	49 89 c5             	mov    %rax,%r13
    f767:	48 8b 45 08          	mov    0x8(%rbp),%rax
    f76b:	48 03 45 00          	add    0x0(%rbp),%rax
    f76f:	49 39 c5             	cmp    %rax,%r13
    f772:	0f 84 e5 01 00 00    	je     f95d <dlfree+0xa3d>
    f778:	c7 05 ae b6 01 00 00 	movl   $0x0,0x1b6ae(%rip)        # 2ae30 <malloc_global_mutex>
    f77f:	00 00 00 
    f782:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
    f786:	48 39 4b 30          	cmp    %rcx,0x30(%rbx)
    f78a:	0f 83 90 f8 ff ff    	jae    f020 <dlfree+0x100>
    f790:	48 c7 43 30 ff ff ff 	movq   $0xffffffffffffffff,0x30(%rbx)
    f797:	ff 
    f798:	e9 83 f8 ff ff       	jmp    f020 <dlfree+0x100>
    f79d:	8b 02                	mov    (%rdx),%eax
    f79f:	85 c0                	test   %eax,%eax
    f7a1:	75 fa                	jne    f79d <dlfree+0x87d>
    f7a3:	89 c8                	mov    %ecx,%eax
    f7a5:	87 05 85 b6 01 00    	xchg   %eax,0x1b685(%rip)        # 2ae30 <malloc_global_mutex>
    f7ab:	85 c0                	test   %eax,%eax
    f7ad:	75 ee                	jne    f79d <dlfree+0x87d>
    f7af:	eb ac                	jmp    f75d <dlfree+0x83d>
    f7b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f7b8:	48 03 73 08          	add    0x8(%rbx),%rsi
    f7bc:	48 89 53 20          	mov    %rdx,0x20(%rbx)
    f7c0:	48 89 f0             	mov    %rsi,%rax
    f7c3:	48 89 73 08          	mov    %rsi,0x8(%rbx)
    f7c7:	48 83 c8 01          	or     $0x1,%rax
    f7cb:	48 89 42 08          	mov    %rax,0x8(%rdx)
    f7cf:	48 89 34 32          	mov    %rsi,(%rdx,%rsi,1)
    f7d3:	e9 48 f8 ff ff       	jmp    f020 <dlfree+0x100>
    f7d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    f7df:	00 
    f7e0:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    f7e5:	d3 c0                	rol    %cl,%eax
    f7e7:	21 03                	and    %eax,(%rbx)
    f7e9:	e9 89 f9 ff ff       	jmp    f177 <dlfree+0x257>
    f7ee:	48 c7 43 20 00 00 00 	movq   $0x0,0x20(%rbx)
    f7f5:	00 
    f7f6:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
    f7fd:	00 
    f7fe:	e9 ad fe ff ff       	jmp    f6b0 <dlfree+0x790>
    f803:	4e 89 44 d3 08       	mov    %r8,0x8(%rbx,%r10,8)
    f808:	4d 85 c0             	test   %r8,%r8
    f80b:	0f 85 4a fb ff ff    	jne    f35b <dlfree+0x43b>
    f811:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    f816:	d3 c0                	rol    %cl,%eax
    f818:	21 43 04             	and    %eax,0x4(%rbx)
    f81b:	e9 82 f7 ff ff       	jmp    efa2 <dlfree+0x82>
    f820:	4e 89 44 d3 08       	mov    %r8,0x8(%rbx,%r10,8)
    f825:	4d 85 c0             	test   %r8,%r8
    f828:	0f 85 f5 fb ff ff    	jne    f423 <dlfree+0x503>
    f82e:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    f833:	d3 c0                	rol    %cl,%eax
    f835:	21 43 04             	and    %eax,0x4(%rbx)
    f838:	e9 3a f9 ff ff       	jmp    f177 <dlfree+0x257>
    f83d:	4c 39 c8             	cmp    %r9,%rax
    f840:	0f 82 a2 f9 ff ff    	jb     f1e8 <dlfree+0x2c8>
    f846:	48 39 50 18          	cmp    %rdx,0x18(%rax)
    f84a:	0f 85 98 f9 ff ff    	jne    f1e8 <dlfree+0x2c8>
    f850:	4c 39 c0             	cmp    %r8,%rax
    f853:	0f 84 67 fd ff ff    	je     f5c0 <dlfree+0x6a0>
    f859:	4d 39 c2             	cmp    %r8,%r10
    f85c:	0f 84 49 f8 ff ff    	je     f0ab <dlfree+0x18b>
    f862:	e9 31 f8 ff ff       	jmp    f098 <dlfree+0x178>
    f867:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    f86e:	00 00 
    f870:	48 8b 42 20          	mov    0x20(%rdx),%rax
    f874:	48 85 c0             	test   %rax,%rax
    f877:	74 65                	je     f8de <dlfree+0x9be>
    f879:	48 8d 4a 20          	lea    0x20(%rdx),%rcx
    f87d:	e9 46 fc ff ff       	jmp    f4c8 <dlfree+0x5a8>
    f882:	48 8b 47 20          	mov    0x20(%rdi),%rax
    f886:	48 85 c0             	test   %rax,%rax
    f889:	0f 84 8f 00 00 00    	je     f91e <dlfree+0x9fe>
    f88f:	48 8d 4f 20          	lea    0x20(%rdi),%rcx
    f893:	e9 b8 fc ff ff       	jmp    f550 <dlfree+0x630>
    f898:	4d 89 43 20          	mov    %r8,0x20(%r11)
    f89c:	e9 b1 fa ff ff       	jmp    f352 <dlfree+0x432>
    f8a1:	4c 89 45 20          	mov    %r8,0x20(%rbp)
    f8a5:	e9 70 fb ff ff       	jmp    f41a <dlfree+0x4fa>
    f8aa:	e8 91 d7 ff ff       	call   d040 <init_mparams.isra.0>
    f8af:	48 8b 53 28          	mov    0x28(%rbx),%rdx
    f8b3:	e9 10 fe ff ff       	jmp    f6c8 <dlfree+0x7a8>
    f8b8:	4c 89 44 cb 08       	mov    %r8,0x8(%rbx,%rcx,8)
    f8bd:	e9 99 fa ff ff       	jmp    f35b <dlfree+0x43b>
    f8c2:	4c 89 44 cb 08       	mov    %r8,0x8(%rbx,%rcx,8)
    f8c7:	e9 57 fb ff ff       	jmp    f423 <dlfree+0x503>
    f8cc:	4c 89 45 20          	mov    %r8,0x20(%rbp)
    f8d0:	e9 4e fb ff ff       	jmp    f423 <dlfree+0x503>
    f8d5:	4d 89 43 20          	mov    %r8,0x20(%r11)
    f8d9:	e9 7d fa ff ff       	jmp    f35b <dlfree+0x43b>
    f8de:	4d 85 db             	test   %r11,%r11
    f8e1:	0f 84 bb f6 ff ff    	je     efa2 <dlfree+0x82>
    f8e7:	8b 42 38             	mov    0x38(%rdx),%eax
    f8ea:	48 89 c1             	mov    %rax,%rcx
    f8ed:	4c 8d 40 4a          	lea    0x4a(%rax),%r8
    f8f1:	48 39 94 c3 58 02 00 	cmp    %rdx,0x258(%rbx,%rax,8)
    f8f8:	00 
    f8f9:	0f 84 fd 00 00 00    	je     f9fc <dlfree+0xadc>
    f8ff:	4d 39 cb             	cmp    %r9,%r11
    f902:	0f 82 e0 f8 ff ff    	jb     f1e8 <dlfree+0x2c8>
    f908:	49 3b 53 20          	cmp    0x20(%r11),%rdx
    f90c:	0f 84 02 01 00 00    	je     fa14 <dlfree+0xaf4>
    f912:	45 31 c0             	xor    %r8d,%r8d
    f915:	4d 89 43 28          	mov    %r8,0x28(%r11)
    f919:	e9 84 f6 ff ff       	jmp    efa2 <dlfree+0x82>
    f91e:	48 85 ed             	test   %rbp,%rbp
    f921:	0f 84 50 f8 ff ff    	je     f177 <dlfree+0x257>
    f927:	8b 47 38             	mov    0x38(%rdi),%eax
    f92a:	48 89 c1             	mov    %rax,%rcx
    f92d:	4c 8d 40 4a          	lea    0x4a(%rax),%r8
    f931:	48 3b bc c3 58 02 00 	cmp    0x258(%rbx,%rax,8),%rdi
    f938:	00 
    f939:	0f 84 b1 00 00 00    	je     f9f0 <dlfree+0xad0>
    f93f:	4c 39 cd             	cmp    %r9,%rbp
    f942:	0f 82 a0 f8 ff ff    	jb     f1e8 <dlfree+0x2c8>
    f948:	48 39 7d 20          	cmp    %rdi,0x20(%rbp)
    f94c:	0f 84 b7 00 00 00    	je     fa09 <dlfree+0xae9>
    f952:	31 c0                	xor    %eax,%eax
    f954:	48 89 45 28          	mov    %rax,0x28(%rbp)
    f958:	e9 1a f8 ff ff       	jmp    f177 <dlfree+0x257>
    f95d:	4c 89 e7             	mov    %r12,%rdi
    f960:	48 f7 df             	neg    %rdi
    f963:	e8 e8 cc ff ff       	call   c650 <sbrk>
    f968:	31 ff                	xor    %edi,%edi
    f96a:	49 89 c4             	mov    %rax,%r12
    f96d:	e8 de cc ff ff       	call   c650 <sbrk>
    f972:	49 83 c4 01          	add    $0x1,%r12
    f976:	0f 84 fc fd ff ff    	je     f778 <dlfree+0x858>
    f97c:	4c 39 e8             	cmp    %r13,%rax
    f97f:	0f 83 f3 fd ff ff    	jae    f778 <dlfree+0x858>
    f985:	49 29 c5             	sub    %rax,%r13
    f988:	c7 05 9e b4 01 00 00 	movl   $0x0,0x1b49e(%rip)        # 2ae30 <malloc_global_mutex>
    f98f:	00 00 00 
    f992:	48 8b 43 28          	mov    0x28(%rbx),%rax
    f996:	48 8b 53 10          	mov    0x10(%rbx),%rdx
    f99a:	4c 29 6d 08          	sub    %r13,0x8(%rbp)
    f99e:	48 89 c6             	mov    %rax,%rsi
    f9a1:	4c 29 ea             	sub    %r13,%rdx
    f9a4:	48 8d 48 10          	lea    0x10(%rax),%rcx
    f9a8:	4c 29 ab 58 03 00 00 	sub    %r13,0x358(%rbx)
    f9af:	83 e6 0f             	and    $0xf,%esi
    f9b2:	74 09                	je     f9bd <dlfree+0xa9d>
    f9b4:	48 f7 d9             	neg    %rcx
    f9b7:	48 89 ce             	mov    %rcx,%rsi
    f9ba:	83 e6 0f             	and    $0xf,%esi
    f9bd:	48 89 d1             	mov    %rdx,%rcx
    f9c0:	48 8d 3c 30          	lea    (%rax,%rsi,1),%rdi
    f9c4:	48 29 f1             	sub    %rsi,%rcx
    f9c7:	48 89 7b 28          	mov    %rdi,0x28(%rbx)
    f9cb:	48 89 4b 10          	mov    %rcx,0x10(%rbx)
    f9cf:	48 83 c9 01          	or     $0x1,%rcx
    f9d3:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
    f9d7:	48 c7 44 10 08 50 00 	movq   $0x50,0x8(%rax,%rdx,1)
    f9de:	00 00 
    f9e0:	48 8b 05 39 b4 01 00 	mov    0x1b439(%rip),%rax        # 2ae20 <mparams+0x20>
    f9e7:	48 89 43 30          	mov    %rax,0x30(%rbx)
    f9eb:	e9 30 f6 ff ff       	jmp    f020 <dlfree+0x100>
    f9f0:	31 ff                	xor    %edi,%edi
    f9f2:	4a 89 7c c3 08       	mov    %rdi,0x8(%rbx,%r8,8)
    f9f7:	e9 32 fe ff ff       	jmp    f82e <dlfree+0x90e>
    f9fc:	45 31 db             	xor    %r11d,%r11d
    f9ff:	4e 89 5c c3 08       	mov    %r11,0x8(%rbx,%r8,8)
    fa04:	e9 08 fe ff ff       	jmp    f811 <dlfree+0x8f1>
    fa09:	31 c9                	xor    %ecx,%ecx
    fa0b:	48 89 4d 20          	mov    %rcx,0x20(%rbp)
    fa0f:	e9 63 f7 ff ff       	jmp    f177 <dlfree+0x257>
    fa14:	45 31 d2             	xor    %r10d,%r10d
    fa17:	4d 89 53 20          	mov    %r10,0x20(%r11)
    fa1b:	e9 82 f5 ff ff       	jmp    efa2 <dlfree+0x82>

000000000000fa20 <calloc>:
    fa20:	f3 0f 1e fa          	endbr64 
    fa24:	55                   	push   %rbp
    fa25:	53                   	push   %rbx
    fa26:	48 89 fb             	mov    %rdi,%rbx
    fa29:	48 83 ec 08          	sub    $0x8,%rsp
    fa2d:	48 85 ff             	test   %rdi,%rdi
    fa30:	74 1b                	je     fa4d <calloc+0x2d>
    fa32:	48 89 f8             	mov    %rdi,%rax
    fa35:	48 f7 e6             	mul    %rsi
    fa38:	0f 90 c2             	seto   %dl
    fa3b:	48 09 fe             	or     %rdi,%rsi
    fa3e:	48 89 c3             	mov    %rax,%rbx
    fa41:	0f b6 d2             	movzbl %dl,%edx
    fa44:	48 81 fe ff ff 00 00 	cmp    $0xffff,%rsi
    fa4b:	77 2b                	ja     fa78 <calloc+0x58>
    fa4d:	48 89 df             	mov    %rbx,%rdi
    fa50:	e8 db d6 ff ff       	call   d130 <dlmalloc>
    fa55:	48 89 c5             	mov    %rax,%rbp
    fa58:	48 85 c0             	test   %rax,%rax
    fa5b:	74 0d                	je     fa6a <calloc+0x4a>
    fa5d:	48 89 da             	mov    %rbx,%rdx
    fa60:	31 f6                	xor    %esi,%esi
    fa62:	48 89 c7             	mov    %rax,%rdi
    fa65:	e8 a6 0e 00 00       	call   10910 <memset>
    fa6a:	48 83 c4 08          	add    $0x8,%rsp
    fa6e:	48 89 e8             	mov    %rbp,%rax
    fa71:	5b                   	pop    %rbx
    fa72:	5d                   	pop    %rbp
    fa73:	c3                   	ret    
    fa74:	0f 1f 40 00          	nopl   0x0(%rax)
    fa78:	48 85 d2             	test   %rdx,%rdx
    fa7b:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    fa82:	48 0f 45 d8          	cmovne %rax,%rbx
    fa86:	eb c5                	jmp    fa4d <calloc+0x2d>
    fa88:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    fa8f:	00 

000000000000fa90 <dlrealloc>:
    fa90:	f3 0f 1e fa          	endbr64 
    fa94:	41 57                	push   %r15
    fa96:	41 56                	push   %r14
    fa98:	41 55                	push   %r13
    fa9a:	41 54                	push   %r12
    fa9c:	55                   	push   %rbp
    fa9d:	53                   	push   %rbx
    fa9e:	48 89 f3             	mov    %rsi,%rbx
    faa1:	48 83 ec 08          	sub    $0x8,%rsp
    faa5:	48 85 ff             	test   %rdi,%rdi
    faa8:	0f 84 f2 01 00 00    	je     fca0 <dlrealloc+0x210>
    faae:	48 81 fe 7f ff ff ff 	cmp    $0xffffffffffffff7f,%rsi
    fab5:	0f 87 05 02 00 00    	ja     fcc0 <dlrealloc+0x230>
    fabb:	48 89 fd             	mov    %rdi,%rbp
    fabe:	48 85 f6             	test   %rsi,%rsi
    fac1:	0f 84 11 02 00 00    	je     fcd8 <dlrealloc+0x248>
    fac7:	48 8d 46 1f          	lea    0x1f(%rsi),%rax
    facb:	ba 20 00 00 00       	mov    $0x20,%edx
    fad0:	4c 8d 6f f0          	lea    -0x10(%rdi),%r13
    fad4:	48 8b 0d 25 b3 01 00 	mov    0x1b325(%rip),%rcx        # 2ae00 <mparams>
    fadb:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
    fadf:	48 83 fe 0e          	cmp    $0xe,%rsi
    fae3:	48 8b 77 f8          	mov    -0x8(%rdi),%rsi
    fae7:	48 0f 46 c2          	cmovbe %rdx,%rax
    faeb:	48 89 f2             	mov    %rsi,%rdx
    faee:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    faf2:	49 8d 7c 15 00       	lea    0x0(%r13,%rdx,1),%rdi
    faf7:	4c 8b 27             	mov    (%rdi),%r12
    fafa:	49 31 cc             	xor    %rcx,%r12
    fafd:	49 3b 4c 24 40       	cmp    0x40(%r12),%rcx
    fb02:	0f 85 90 01 00 00    	jne    fc98 <dlrealloc+0x208>
    fb08:	41 f6 84 24 70 03 00 	testb  $0x2,0x370(%r12)
    fb0f:	00 02 
    fb11:	0f 85 89 00 00 00    	jne    fba0 <dlrealloc+0x110>
    fb17:	4d 8b 44 24 18       	mov    0x18(%r12),%r8
    fb1c:	4d 39 c5             	cmp    %r8,%r13
    fb1f:	0f 82 73 01 00 00    	jb     fc98 <dlrealloc+0x208>
    fb25:	48 89 f1             	mov    %rsi,%rcx
    fb28:	83 e1 03             	and    $0x3,%ecx
    fb2b:	48 83 f9 01          	cmp    $0x1,%rcx
    fb2f:	0f 84 63 01 00 00    	je     fc98 <dlrealloc+0x208>
    fb35:	49 39 fd             	cmp    %rdi,%r13
    fb38:	0f 83 5a 01 00 00    	jae    fc98 <dlrealloc+0x208>
    fb3e:	4c 8b 4f 08          	mov    0x8(%rdi),%r9
    fb42:	41 f6 c1 01          	test   $0x1,%r9b
    fb46:	0f 84 4c 01 00 00    	je     fc98 <dlrealloc+0x208>
    fb4c:	48 85 c9             	test   %rcx,%rcx
    fb4f:	0f 84 8b 00 00 00    	je     fbe0 <dlrealloc+0x150>
    fb55:	48 39 c2             	cmp    %rax,%rdx
    fb58:	0f 82 82 01 00 00    	jb     fce0 <dlrealloc+0x250>
    fb5e:	48 29 c2             	sub    %rax,%rdx
    fb61:	49 89 d6             	mov    %rdx,%r14
    fb64:	48 83 fa 1f          	cmp    $0x1f,%rdx
    fb68:	0f 87 fa 02 00 00    	ja     fe68 <dlrealloc+0x3d8>
    fb6e:	41 8b 8c 24 70 03 00 	mov    0x370(%r12),%ecx
    fb75:	00 
    fb76:	83 e1 02             	and    $0x2,%ecx
    fb79:	0f 85 31 02 00 00    	jne    fdb0 <dlrealloc+0x320>
    fb7f:	4d 85 ed             	test   %r13,%r13
    fb82:	0f 84 94 00 00 00    	je     fc1c <dlrealloc+0x18c>
    fb88:	49 89 ec             	mov    %rbp,%r12
    fb8b:	48 83 c4 08          	add    $0x8,%rsp
    fb8f:	4c 89 e0             	mov    %r12,%rax
    fb92:	5b                   	pop    %rbx
    fb93:	5d                   	pop    %rbp
    fb94:	41 5c                	pop    %r12
    fb96:	41 5d                	pop    %r13
    fb98:	41 5e                	pop    %r14
    fb9a:	41 5f                	pop    %r15
    fb9c:	c3                   	ret    
    fb9d:	0f 1f 00             	nopl   (%rax)
    fba0:	49 8d 8c 24 74 03 00 	lea    0x374(%r12),%rcx
    fba7:	00 
    fba8:	ba 01 00 00 00       	mov    $0x1,%edx
    fbad:	87 11                	xchg   %edx,(%rcx)
    fbaf:	85 d2                	test   %edx,%edx
    fbb1:	0f 85 b9 00 00 00    	jne    fc70 <dlrealloc+0x1e0>
    fbb7:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    fbbb:	4d 8b 44 24 18       	mov    0x18(%r12),%r8
    fbc0:	48 89 f2             	mov    %rsi,%rdx
    fbc3:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    fbc7:	49 8d 7c 15 00       	lea    0x0(%r13,%rdx,1),%rdi
    fbcc:	4d 39 c5             	cmp    %r8,%r13
    fbcf:	0f 83 50 ff ff ff    	jae    fb25 <dlrealloc+0x95>
    fbd5:	e9 be 00 00 00       	jmp    fc98 <dlrealloc+0x208>
    fbda:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    fbe0:	41 8b 8c 24 70 03 00 	mov    0x370(%r12),%ecx
    fbe7:	00 
    fbe8:	89 ce                	mov    %ecx,%esi
    fbea:	83 e6 02             	and    $0x2,%esi
    fbed:	48 3d f8 00 00 00    	cmp    $0xf8,%rax
    fbf3:	76 1f                	jbe    fc14 <dlrealloc+0x184>
    fbf5:	48 8d 78 08          	lea    0x8(%rax),%rdi
    fbf9:	48 39 fa             	cmp    %rdi,%rdx
    fbfc:	72 16                	jb     fc14 <dlrealloc+0x184>
    fbfe:	48 29 c2             	sub    %rax,%rdx
    fc01:	48 8b 05 08 b2 01 00 	mov    0x1b208(%rip),%rax        # 2ae10 <mparams+0x10>
    fc08:	48 01 c0             	add    %rax,%rax
    fc0b:	48 39 d0             	cmp    %rdx,%rax
    fc0e:	0f 83 62 ff ff ff    	jae    fb76 <dlrealloc+0xe6>
    fc14:	85 f6                	test   %esi,%esi
    fc16:	0f 85 c4 01 00 00    	jne    fde0 <dlrealloc+0x350>
    fc1c:	48 89 df             	mov    %rbx,%rdi
    fc1f:	e8 0c d5 ff ff       	call   d130 <dlmalloc>
    fc24:	49 89 c4             	mov    %rax,%r12
    fc27:	48 85 c0             	test   %rax,%rax
    fc2a:	0f 84 5b ff ff ff    	je     fb8b <dlrealloc+0xfb>
    fc30:	4c 8b 6d f8          	mov    -0x8(%rbp),%r13
    fc34:	48 89 ee             	mov    %rbp,%rsi
    fc37:	48 89 c7             	mov    %rax,%rdi
    fc3a:	49 83 e5 f8          	and    $0xfffffffffffffff8,%r13
    fc3e:	49 83 ed 10          	sub    $0x10,%r13
    fc42:	4c 39 eb             	cmp    %r13,%rbx
    fc45:	49 0f 47 dd          	cmova  %r13,%rbx
    fc49:	48 89 da             	mov    %rbx,%rdx
    fc4c:	e8 7f 0a 00 00       	call   106d0 <memcpy>
    fc51:	48 89 ef             	mov    %rbp,%rdi
    fc54:	4c 89 ea             	mov    %r13,%rdx
    fc57:	31 f6                	xor    %esi,%esi
    fc59:	e8 b2 0c 00 00       	call   10910 <memset>
    fc5e:	48 89 ef             	mov    %rbp,%rdi
    fc61:	e8 ba f2 ff ff       	call   ef20 <dlfree>
    fc66:	e9 20 ff ff ff       	jmp    fb8b <dlrealloc+0xfb>
    fc6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    fc70:	be 01 00 00 00       	mov    $0x1,%esi
    fc75:	0f 1f 00             	nopl   (%rax)
    fc78:	41 8b 94 24 74 03 00 	mov    0x374(%r12),%edx
    fc7f:	00 
    fc80:	85 d2                	test   %edx,%edx
    fc82:	75 f4                	jne    fc78 <dlrealloc+0x1e8>
    fc84:	89 f2                	mov    %esi,%edx
    fc86:	87 11                	xchg   %edx,(%rcx)
    fc88:	85 d2                	test   %edx,%edx
    fc8a:	75 ec                	jne    fc78 <dlrealloc+0x1e8>
    fc8c:	e9 26 ff ff ff       	jmp    fbb7 <dlrealloc+0x127>
    fc91:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    fc98:	e8 9a 28 00 00       	call   12537 <abort>
    fc9d:	0f 1f 00             	nopl   (%rax)
    fca0:	48 83 c4 08          	add    $0x8,%rsp
    fca4:	48 89 f7             	mov    %rsi,%rdi
    fca7:	5b                   	pop    %rbx
    fca8:	5d                   	pop    %rbp
    fca9:	41 5c                	pop    %r12
    fcab:	41 5d                	pop    %r13
    fcad:	41 5e                	pop    %r14
    fcaf:	41 5f                	pop    %r15
    fcb1:	e9 7a d4 ff ff       	jmp    d130 <dlmalloc>
    fcb6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    fcbd:	00 00 00 
    fcc0:	e8 fb 11 00 00       	call   10ec0 <__errno_location>
    fcc5:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
    fccb:	45 31 e4             	xor    %r12d,%r12d
    fcce:	e9 b8 fe ff ff       	jmp    fb8b <dlrealloc+0xfb>
    fcd3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    fcd8:	e8 43 f2 ff ff       	call   ef20 <dlfree>
    fcdd:	eb ec                	jmp    fccb <dlrealloc+0x23b>
    fcdf:	90                   	nop
    fce0:	49 39 7c 24 28       	cmp    %rdi,0x28(%r12)
    fce5:	0f 84 d5 01 00 00    	je     fec0 <dlrealloc+0x430>
    fceb:	49 39 7c 24 20       	cmp    %rdi,0x20(%r12)
    fcf0:	0f 84 02 01 00 00    	je     fdf8 <dlrealloc+0x368>
    fcf6:	41 f6 c1 02          	test   $0x2,%r9b
    fcfa:	0f 85 c8 00 00 00    	jne    fdc8 <dlrealloc+0x338>
    fd00:	49 83 e1 f8          	and    $0xfffffffffffffff8,%r9
    fd04:	4e 8d 14 0a          	lea    (%rdx,%r9,1),%r10
    fd08:	49 39 c2             	cmp    %rax,%r10
    fd0b:	0f 82 b7 00 00 00    	jb     fdc8 <dlrealloc+0x338>
    fd11:	4c 89 d2             	mov    %r10,%rdx
    fd14:	4c 89 c9             	mov    %r9,%rcx
    fd17:	48 29 c2             	sub    %rax,%rdx
    fd1a:	48 c1 e9 03          	shr    $0x3,%rcx
    fd1e:	49 81 f9 f8 00 00 00 	cmp    $0xf8,%r9
    fd25:	0f 87 f2 01 00 00    	ja     ff1d <dlrealloc+0x48d>
    fd2b:	44 8d 74 09 09       	lea    0x9(%rcx,%rcx,1),%r14d
    fd30:	4c 8b 4f 10          	mov    0x10(%rdi),%r9
    fd34:	4c 8b 5f 18          	mov    0x18(%rdi),%r11
    fd38:	4f 8d 34 f4          	lea    (%r12,%r14,8),%r14
    fd3c:	4d 39 f1             	cmp    %r14,%r9
    fd3f:	0f 85 c6 03 00 00    	jne    1010b <dlrealloc+0x67b>
    fd45:	4d 39 cb             	cmp    %r9,%r11
    fd48:	0f 84 7c 03 00 00    	je     100ca <dlrealloc+0x63a>
    fd4e:	4d 39 c3             	cmp    %r8,%r11
    fd51:	0f 82 41 ff ff ff    	jb     fc98 <dlrealloc+0x208>
    fd57:	49 39 7b 10          	cmp    %rdi,0x10(%r11)
    fd5b:	0f 85 37 ff ff ff    	jne    fc98 <dlrealloc+0x208>
    fd61:	4d 89 59 18          	mov    %r11,0x18(%r9)
    fd65:	4d 89 4b 10          	mov    %r9,0x10(%r11)
    fd69:	48 8b 3d 90 b0 01 00 	mov    0x1b090(%rip),%rdi        # 2ae00 <mparams>
    fd70:	83 e6 01             	and    $0x1,%esi
    fd73:	4b 8d 4c 15 00       	lea    0x0(%r13,%r10,1),%rcx
    fd78:	4c 31 e7             	xor    %r12,%rdi
    fd7b:	48 83 fa 1f          	cmp    $0x1f,%rdx
    fd7f:	0f 87 88 02 00 00    	ja     1000d <dlrealloc+0x57d>
    fd85:	4c 89 d2             	mov    %r10,%rdx
    fd88:	48 09 f2             	or     %rsi,%rdx
    fd8b:	48 83 ca 02          	or     $0x2,%rdx
    fd8f:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
    fd93:	48 89 39             	mov    %rdi,(%rcx)
    fd96:	48 83 49 08 01       	orq    $0x1,0x8(%rcx)
    fd9b:	41 8b 8c 24 70 03 00 	mov    0x370(%r12),%ecx
    fda2:	00 
    fda3:	e9 ce fd ff ff       	jmp    fb76 <dlrealloc+0xe6>
    fda8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    fdaf:	00 
    fdb0:	41 c7 84 24 74 03 00 	movl   $0x0,0x374(%r12)
    fdb7:	00 00 00 00 00 
    fdbc:	e9 be fd ff ff       	jmp    fb7f <dlrealloc+0xef>
    fdc1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    fdc8:	41 f6 84 24 70 03 00 	testb  $0x2,0x370(%r12)
    fdcf:	00 02 
    fdd1:	0f 84 45 fe ff ff    	je     fc1c <dlrealloc+0x18c>
    fdd7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    fdde:	00 00 
    fde0:	41 c7 84 24 74 03 00 	movl   $0x0,0x374(%r12)
    fde7:	00 00 00 00 00 
    fdec:	e9 2b fe ff ff       	jmp    fc1c <dlrealloc+0x18c>
    fdf1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    fdf8:	49 03 54 24 08       	add    0x8(%r12),%rdx
    fdfd:	41 8b 8c 24 70 03 00 	mov    0x370(%r12),%ecx
    fe04:	00 
    fe05:	48 39 c2             	cmp    %rax,%rdx
    fe08:	0f 82 01 01 00 00    	jb     ff0f <dlrealloc+0x47f>
    fe0e:	4c 8b 05 eb af 01 00 	mov    0x1afeb(%rip),%r8        # 2ae00 <mparams>
    fe15:	49 89 d1             	mov    %rdx,%r9
    fe18:	49 8d 7c 15 00       	lea    0x0(%r13,%rdx,1),%rdi
    fe1d:	83 e6 01             	and    $0x1,%esi
    fe20:	49 29 c1             	sub    %rax,%r9
    fe23:	4d 31 e0             	xor    %r12,%r8
    fe26:	49 83 f9 1f          	cmp    $0x1f,%r9
    fe2a:	0f 86 b3 01 00 00    	jbe    ffe3 <dlrealloc+0x553>
    fe30:	49 8d 54 05 00       	lea    0x0(%r13,%rax,1),%rdx
    fe35:	48 09 c6             	or     %rax,%rsi
    fe38:	4c 89 c8             	mov    %r9,%rax
    fe3b:	48 83 ce 02          	or     $0x2,%rsi
    fe3f:	48 83 c8 01          	or     $0x1,%rax
    fe43:	48 89 75 f8          	mov    %rsi,-0x8(%rbp)
    fe47:	4c 89 02             	mov    %r8,(%rdx)
    fe4a:	48 89 42 08          	mov    %rax,0x8(%rdx)
    fe4e:	4c 89 0f             	mov    %r9,(%rdi)
    fe51:	48 83 67 08 fe       	andq   $0xfffffffffffffffe,0x8(%rdi)
    fe56:	4d 89 4c 24 08       	mov    %r9,0x8(%r12)
    fe5b:	49 89 54 24 20       	mov    %rdx,0x20(%r12)
    fe60:	e9 11 fd ff ff       	jmp    fb76 <dlrealloc+0xe6>
    fe65:	0f 1f 00             	nopl   (%rax)
    fe68:	83 e6 01             	and    $0x1,%esi
    fe6b:	4d 8d 7c 05 00       	lea    0x0(%r13,%rax,1),%r15
    fe70:	48 83 ca 03          	or     $0x3,%rdx
    fe74:	48 09 c6             	or     %rax,%rsi
    fe77:	48 8b 05 82 af 01 00 	mov    0x1af82(%rip),%rax        # 2ae00 <mparams>
    fe7e:	48 83 ce 02          	or     $0x2,%rsi
    fe82:	4c 31 e0             	xor    %r12,%rax
    fe85:	48 89 75 f8          	mov    %rsi,-0x8(%rbp)
    fe89:	31 f6                	xor    %esi,%esi
    fe8b:	49 89 57 08          	mov    %rdx,0x8(%r15)
    fe8f:	49 8d 56 f0          	lea    -0x10(%r14),%rdx
    fe93:	49 89 07             	mov    %rax,(%r15)
    fe96:	48 83 4f 08 01       	orq    $0x1,0x8(%rdi)
    fe9b:	48 89 07             	mov    %rax,(%rdi)
    fe9e:	49 8d 7f 10          	lea    0x10(%r15),%rdi
    fea2:	e8 69 0a 00 00       	call   10910 <memset>
    fea7:	4c 89 f2             	mov    %r14,%rdx
    feaa:	4c 89 fe             	mov    %r15,%rsi
    fead:	4c 89 e7             	mov    %r12,%rdi
    feb0:	e8 5b c9 ff ff       	call   c810 <dispose_chunk>
    feb5:	e9 b4 fc ff ff       	jmp    fb6e <dlrealloc+0xde>
    feba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    fec0:	49 03 54 24 10       	add    0x10(%r12),%rdx
    fec5:	41 8b 8c 24 70 03 00 	mov    0x370(%r12),%ecx
    fecc:	00 
    fecd:	48 39 d0             	cmp    %rdx,%rax
    fed0:	73 3d                	jae    ff0f <dlrealloc+0x47f>
    fed2:	83 e6 01             	and    $0x1,%esi
    fed5:	49 8d 7c 05 00       	lea    0x0(%r13,%rax,1),%rdi
    feda:	48 29 c2             	sub    %rax,%rdx
    fedd:	48 09 c6             	or     %rax,%rsi
    fee0:	48 8b 05 19 af 01 00 	mov    0x1af19(%rip),%rax        # 2ae00 <mparams>
    fee7:	48 83 ce 02          	or     $0x2,%rsi
    feeb:	4c 31 e0             	xor    %r12,%rax
    feee:	48 89 75 f8          	mov    %rsi,-0x8(%rbp)
    fef2:	48 89 07             	mov    %rax,(%rdi)
    fef5:	48 89 d0             	mov    %rdx,%rax
    fef8:	48 83 c8 01          	or     $0x1,%rax
    fefc:	48 89 47 08          	mov    %rax,0x8(%rdi)
    ff00:	49 89 7c 24 28       	mov    %rdi,0x28(%r12)
    ff05:	49 89 54 24 10       	mov    %rdx,0x10(%r12)
    ff0a:	e9 67 fc ff ff       	jmp    fb76 <dlrealloc+0xe6>
    ff0f:	83 e1 02             	and    $0x2,%ecx
    ff12:	0f 84 04 fd ff ff    	je     fc1c <dlrealloc+0x18c>
    ff18:	e9 c3 fe ff ff       	jmp    fde0 <dlrealloc+0x350>
    ff1d:	4c 8b 5f 18          	mov    0x18(%rdi),%r11
    ff21:	4c 8b 7f 30          	mov    0x30(%rdi),%r15
    ff25:	49 39 fb             	cmp    %rdi,%r11
    ff28:	0f 84 1d 01 00 00    	je     1004b <dlrealloc+0x5bb>
    ff2e:	48 8b 4f 10          	mov    0x10(%rdi),%rcx
    ff32:	4c 39 c1             	cmp    %r8,%rcx
    ff35:	0f 82 5d fd ff ff    	jb     fc98 <dlrealloc+0x208>
    ff3b:	48 39 79 18          	cmp    %rdi,0x18(%rcx)
    ff3f:	0f 85 53 fd ff ff    	jne    fc98 <dlrealloc+0x208>
    ff45:	49 39 7b 10          	cmp    %rdi,0x10(%r11)
    ff49:	0f 85 49 fd ff ff    	jne    fc98 <dlrealloc+0x208>
    ff4f:	4c 89 59 18          	mov    %r11,0x18(%rcx)
    ff53:	49 89 4b 10          	mov    %rcx,0x10(%r11)
    ff57:	4d 85 ff             	test   %r15,%r15
    ff5a:	0f 84 09 fe ff ff    	je     fd69 <dlrealloc+0x2d9>
    ff60:	44 8b 4f 38          	mov    0x38(%rdi),%r9d
    ff64:	4c 89 c9             	mov    %r9,%rcx
    ff67:	4d 8d 71 4a          	lea    0x4a(%r9),%r14
    ff6b:	4b 3b bc cc 58 02 00 	cmp    0x258(%r12,%r9,8),%rdi
    ff72:	00 
    ff73:	0f 84 61 01 00 00    	je     100da <dlrealloc+0x64a>
    ff79:	4d 39 c7             	cmp    %r8,%r15
    ff7c:	0f 82 16 fd ff ff    	jb     fc98 <dlrealloc+0x208>
    ff82:	49 3b 7f 20          	cmp    0x20(%r15),%rdi
    ff86:	0f 84 a5 01 00 00    	je     10131 <dlrealloc+0x6a1>
    ff8c:	4d 89 5f 28          	mov    %r11,0x28(%r15)
    ff90:	4d 85 db             	test   %r11,%r11
    ff93:	0f 84 d0 fd ff ff    	je     fd69 <dlrealloc+0x2d9>
    ff99:	4d 39 c3             	cmp    %r8,%r11
    ff9c:	0f 82 f6 fc ff ff    	jb     fc98 <dlrealloc+0x208>
    ffa2:	48 8b 4f 20          	mov    0x20(%rdi),%rcx
    ffa6:	4d 89 7b 30          	mov    %r15,0x30(%r11)
    ffaa:	48 85 c9             	test   %rcx,%rcx
    ffad:	74 11                	je     ffc0 <dlrealloc+0x530>
    ffaf:	4c 39 c1             	cmp    %r8,%rcx
    ffb2:	0f 82 e0 fc ff ff    	jb     fc98 <dlrealloc+0x208>
    ffb8:	49 89 4b 20          	mov    %rcx,0x20(%r11)
    ffbc:	4c 89 59 30          	mov    %r11,0x30(%rcx)
    ffc0:	48 8b 4f 28          	mov    0x28(%rdi),%rcx
    ffc4:	48 85 c9             	test   %rcx,%rcx
    ffc7:	0f 84 9c fd ff ff    	je     fd69 <dlrealloc+0x2d9>
    ffcd:	4c 39 c1             	cmp    %r8,%rcx
    ffd0:	0f 82 c2 fc ff ff    	jb     fc98 <dlrealloc+0x208>
    ffd6:	49 89 4b 28          	mov    %rcx,0x28(%r11)
    ffda:	4c 89 59 30          	mov    %r11,0x30(%rcx)
    ffde:	e9 86 fd ff ff       	jmp    fd69 <dlrealloc+0x2d9>
    ffe3:	48 09 f2             	or     %rsi,%rdx
    ffe6:	48 83 ca 02          	or     $0x2,%rdx
    ffea:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
    ffee:	4c 89 07             	mov    %r8,(%rdi)
    fff1:	48 83 4f 08 01       	orq    $0x1,0x8(%rdi)
    fff6:	49 c7 44 24 08 00 00 	movq   $0x0,0x8(%r12)
    fffd:	00 00 
    ffff:	49 c7 44 24 20 00 00 	movq   $0x0,0x20(%r12)
   10006:	00 00 
   10008:	e9 69 fb ff ff       	jmp    fb76 <dlrealloc+0xe6>
   1000d:	4d 8d 44 05 00       	lea    0x0(%r13,%rax,1),%r8
   10012:	48 09 f0             	or     %rsi,%rax
   10015:	48 83 c8 02          	or     $0x2,%rax
   10019:	4c 89 c6             	mov    %r8,%rsi
   1001c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   10020:	48 89 d0             	mov    %rdx,%rax
   10023:	48 83 c8 03          	or     $0x3,%rax
   10027:	49 89 38             	mov    %rdi,(%r8)
   1002a:	49 89 40 08          	mov    %rax,0x8(%r8)
   1002e:	48 83 49 08 01       	orq    $0x1,0x8(%rcx)
   10033:	48 89 39             	mov    %rdi,(%rcx)
   10036:	4c 89 e7             	mov    %r12,%rdi
   10039:	e8 d2 c7 ff ff       	call   c810 <dispose_chunk>
   1003e:	41 8b 8c 24 70 03 00 	mov    0x370(%r12),%ecx
   10045:	00 
   10046:	e9 2b fb ff ff       	jmp    fb76 <dlrealloc+0xe6>
   1004b:	48 8b 4f 28          	mov    0x28(%rdi),%rcx
   1004f:	4c 8d 4f 28          	lea    0x28(%rdi),%r9
   10053:	48 85 c9             	test   %rcx,%rcx
   10056:	0f 84 9d 00 00 00    	je     100f9 <dlrealloc+0x669>
   1005c:	0f 1f 40 00          	nopl   0x0(%rax)
   10060:	4d 89 ce             	mov    %r9,%r14
   10063:	49 89 cb             	mov    %rcx,%r11
   10066:	4c 8d 49 28          	lea    0x28(%rcx),%r9
   1006a:	48 8b 49 28          	mov    0x28(%rcx),%rcx
   1006e:	48 85 c9             	test   %rcx,%rcx
   10071:	75 ed                	jne    10060 <dlrealloc+0x5d0>
   10073:	49 8b 4b 20          	mov    0x20(%r11),%rcx
   10077:	4d 8d 4b 20          	lea    0x20(%r11),%r9
   1007b:	48 85 c9             	test   %rcx,%rcx
   1007e:	75 e0                	jne    10060 <dlrealloc+0x5d0>
   10080:	4d 39 c6             	cmp    %r8,%r14
   10083:	0f 82 0f fc ff ff    	jb     fc98 <dlrealloc+0x208>
   10089:	49 c7 06 00 00 00 00 	movq   $0x0,(%r14)
   10090:	4d 85 ff             	test   %r15,%r15
   10093:	0f 84 d0 fc ff ff    	je     fd69 <dlrealloc+0x2d9>
   10099:	8b 4f 38             	mov    0x38(%rdi),%ecx
   1009c:	4c 8d 49 4a          	lea    0x4a(%rcx),%r9
   100a0:	49 3b bc cc 58 02 00 	cmp    0x258(%r12,%rcx,8),%rdi
   100a7:	00 
   100a8:	0f 84 8c 00 00 00    	je     1013a <dlrealloc+0x6aa>
   100ae:	4d 39 c7             	cmp    %r8,%r15
   100b1:	0f 82 e1 fb ff ff    	jb     fc98 <dlrealloc+0x208>
   100b7:	49 3b 7f 20          	cmp    0x20(%r15),%rdi
   100bb:	0f 84 bb 00 00 00    	je     1017c <dlrealloc+0x6ec>
   100c1:	4d 89 5f 28          	mov    %r11,0x28(%r15)
   100c5:	e9 cf fe ff ff       	jmp    ff99 <dlrealloc+0x509>
   100ca:	bf fe ff ff ff       	mov    $0xfffffffe,%edi
   100cf:	d3 c7                	rol    %cl,%edi
   100d1:	41 21 3c 24          	and    %edi,(%r12)
   100d5:	e9 8f fc ff ff       	jmp    fd69 <dlrealloc+0x2d9>
   100da:	4f 89 5c f4 08       	mov    %r11,0x8(%r12,%r14,8)
   100df:	4d 85 db             	test   %r11,%r11
   100e2:	0f 85 b1 fe ff ff    	jne    ff99 <dlrealloc+0x509>
   100e8:	bf fe ff ff ff       	mov    $0xfffffffe,%edi
   100ed:	d3 c7                	rol    %cl,%edi
   100ef:	41 21 7c 24 04       	and    %edi,0x4(%r12)
   100f4:	e9 70 fc ff ff       	jmp    fd69 <dlrealloc+0x2d9>
   100f9:	48 8b 4f 20          	mov    0x20(%rdi),%rcx
   100fd:	48 85 c9             	test   %rcx,%rcx
   10100:	74 42                	je     10144 <dlrealloc+0x6b4>
   10102:	4c 8d 4f 20          	lea    0x20(%rdi),%r9
   10106:	e9 55 ff ff ff       	jmp    10060 <dlrealloc+0x5d0>
   1010b:	4d 39 c1             	cmp    %r8,%r9
   1010e:	0f 82 84 fb ff ff    	jb     fc98 <dlrealloc+0x208>
   10114:	49 39 79 18          	cmp    %rdi,0x18(%r9)
   10118:	0f 85 7a fb ff ff    	jne    fc98 <dlrealloc+0x208>
   1011e:	4d 39 d9             	cmp    %r11,%r9
   10121:	74 a7                	je     100ca <dlrealloc+0x63a>
   10123:	4d 39 f3             	cmp    %r14,%r11
   10126:	0f 84 35 fc ff ff    	je     fd61 <dlrealloc+0x2d1>
   1012c:	e9 1d fc ff ff       	jmp    fd4e <dlrealloc+0x2be>
   10131:	4d 89 5f 20          	mov    %r11,0x20(%r15)
   10135:	e9 56 fe ff ff       	jmp    ff90 <dlrealloc+0x500>
   1013a:	4f 89 5c cc 08       	mov    %r11,0x8(%r12,%r9,8)
   1013f:	e9 55 fe ff ff       	jmp    ff99 <dlrealloc+0x509>
   10144:	4d 85 ff             	test   %r15,%r15
   10147:	0f 84 1c fc ff ff    	je     fd69 <dlrealloc+0x2d9>
   1014d:	44 8b 4f 38          	mov    0x38(%rdi),%r9d
   10151:	4c 89 c9             	mov    %r9,%rcx
   10154:	4d 8d 59 4a          	lea    0x4a(%r9),%r11
   10158:	4b 3b bc cc 58 02 00 	cmp    0x258(%r12,%r9,8),%rdi
   1015f:	00 
   10160:	74 2e                	je     10190 <dlrealloc+0x700>
   10162:	4d 39 c7             	cmp    %r8,%r15
   10165:	0f 82 2d fb ff ff    	jb     fc98 <dlrealloc+0x208>
   1016b:	49 39 7f 20          	cmp    %rdi,0x20(%r15)
   1016f:	74 14                	je     10185 <dlrealloc+0x6f5>
   10171:	31 c9                	xor    %ecx,%ecx
   10173:	49 89 4f 28          	mov    %rcx,0x28(%r15)
   10177:	e9 ed fb ff ff       	jmp    fd69 <dlrealloc+0x2d9>
   1017c:	4d 89 5f 20          	mov    %r11,0x20(%r15)
   10180:	e9 14 fe ff ff       	jmp    ff99 <dlrealloc+0x509>
   10185:	31 ff                	xor    %edi,%edi
   10187:	49 89 7f 20          	mov    %rdi,0x20(%r15)
   1018b:	e9 d9 fb ff ff       	jmp    fd69 <dlrealloc+0x2d9>
   10190:	45 31 c0             	xor    %r8d,%r8d
   10193:	4f 89 44 dc 08       	mov    %r8,0x8(%r12,%r11,8)
   10198:	e9 4b ff ff ff       	jmp    100e8 <dlrealloc+0x658>
   1019d:	0f 1f 00             	nopl   (%rax)

00000000000101a0 <dlmemalign>:
   101a0:	f3 0f 1e fa          	endbr64 
   101a4:	48 83 ff 10          	cmp    $0x10,%rdi
   101a8:	76 06                	jbe    101b0 <dlmemalign+0x10>
   101aa:	e9 d1 ea ff ff       	jmp    ec80 <internal_memalign.constprop.0>
   101af:	90                   	nop
   101b0:	48 89 f7             	mov    %rsi,%rdi
   101b3:	e9 78 cf ff ff       	jmp    d130 <dlmalloc>
   101b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   101bf:	00 

00000000000101c0 <dlposix_memalign>:
   101c0:	f3 0f 1e fa          	endbr64 
   101c4:	53                   	push   %rbx
   101c5:	48 89 fb             	mov    %rdi,%rbx
   101c8:	48 89 f7             	mov    %rsi,%rdi
   101cb:	48 89 d6             	mov    %rdx,%rsi
   101ce:	48 83 ff 10          	cmp    $0x10,%rdi
   101d2:	74 6c                	je     10240 <dlposix_memalign+0x80>
   101d4:	48 89 f9             	mov    %rdi,%rcx
   101d7:	49 89 f8             	mov    %rdi,%r8
   101da:	ba 16 00 00 00       	mov    $0x16,%edx
   101df:	48 c1 e9 03          	shr    $0x3,%rcx
   101e3:	41 83 e0 07          	and    $0x7,%r8d
   101e7:	48 83 ff 07          	cmp    $0x7,%rdi
   101eb:	76 36                	jbe    10223 <dlposix_memalign+0x63>
   101ed:	48 8d 41 ff          	lea    -0x1(%rcx),%rax
   101f1:	48 21 c8             	and    %rcx,%rax
   101f4:	4c 09 c0             	or     %r8,%rax
   101f7:	75 2a                	jne    10223 <dlposix_memalign+0x63>
   101f9:	48 c7 c0 80 ff ff ff 	mov    $0xffffffffffffff80,%rax
   10200:	48 29 f8             	sub    %rdi,%rax
   10203:	48 39 f0             	cmp    %rsi,%rax
   10206:	72 28                	jb     10230 <dlposix_memalign+0x70>
   10208:	b8 20 00 00 00       	mov    $0x20,%eax
   1020d:	48 39 c7             	cmp    %rax,%rdi
   10210:	48 0f 42 f8          	cmovb  %rax,%rdi
   10214:	e8 67 ea ff ff       	call   ec80 <internal_memalign.constprop.0>
   10219:	48 85 c0             	test   %rax,%rax
   1021c:	74 12                	je     10230 <dlposix_memalign+0x70>
   1021e:	48 89 03             	mov    %rax,(%rbx)
   10221:	31 d2                	xor    %edx,%edx
   10223:	89 d0                	mov    %edx,%eax
   10225:	5b                   	pop    %rbx
   10226:	c3                   	ret    
   10227:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1022e:	00 00 
   10230:	ba 0c 00 00 00       	mov    $0xc,%edx
   10235:	5b                   	pop    %rbx
   10236:	89 d0                	mov    %edx,%eax
   10238:	c3                   	ret    
   10239:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10240:	48 89 d7             	mov    %rdx,%rdi
   10243:	e8 e8 ce ff ff       	call   d130 <dlmalloc>
   10248:	eb cf                	jmp    10219 <dlposix_memalign+0x59>
   1024a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000010250 <dlmallinfo>:
   10250:	f3 0f 1e fa          	endbr64 
   10254:	41 55                	push   %r13
   10256:	41 54                	push   %r12
   10258:	55                   	push   %rbp
   10259:	53                   	push   %rbx
   1025a:	48 89 fb             	mov    %rdi,%rbx
   1025d:	48 83 ec 08          	sub    $0x8,%rsp
   10261:	48 83 3d 97 ab 01 00 	cmpq   $0x0,0x1ab97(%rip)        # 2ae00 <mparams>
   10268:	00 
   10269:	0f 84 89 01 00 00    	je     103f8 <dlmallinfo+0x1a8>
   1026f:	44 8b 1d 3a ab 01 00 	mov    0x1ab3a(%rip),%r11d        # 2adb0 <_gm_+0x370>
   10276:	41 83 e3 02          	and    $0x2,%r11d
   1027a:	0f 85 16 01 00 00    	jne    10396 <dlmallinfo+0x146>
   10280:	48 8b 3d e1 a7 01 00 	mov    0x1a7e1(%rip),%rdi        # 2aa68 <_gm_+0x28>
   10287:	48 85 ff             	test   %rdi,%rdi
   1028a:	0f 84 f4 00 00 00    	je     10384 <dlmallinfo+0x134>
   10290:	48 8b 2d b9 a7 01 00 	mov    0x1a7b9(%rip),%rbp        # 2aa50 <_gm_+0x10>
   10297:	41 b9 01 00 00 00    	mov    $0x1,%r9d
   1029d:	4c 8d 15 14 ab 01 00 	lea    0x1ab14(%rip),%r10        # 2adb8 <_gm_+0x378>
   102a4:	4c 8d 45 50          	lea    0x50(%rbp),%r8
   102a8:	4c 89 c1             	mov    %r8,%rcx
   102ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   102b0:	49 8b 32             	mov    (%r10),%rsi
   102b3:	48 8d 46 10          	lea    0x10(%rsi),%rax
   102b7:	40 f6 c6 0f          	test   $0xf,%sil
   102bb:	0f 84 af 00 00 00    	je     10370 <dlmallinfo+0x120>
   102c1:	48 f7 d8             	neg    %rax
   102c4:	83 e0 0f             	and    $0xf,%eax
   102c7:	48 01 f0             	add    %rsi,%rax
   102ca:	72 4a                	jb     10316 <dlmallinfo+0xc6>
   102cc:	4d 8b 6a 08          	mov    0x8(%r10),%r13
   102d0:	49 01 f5             	add    %rsi,%r13
   102d3:	4c 39 e8             	cmp    %r13,%rax
   102d6:	72 39                	jb     10311 <dlmallinfo+0xc1>
   102d8:	eb 3c                	jmp    10316 <dlmallinfo+0xc6>
   102da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   102e0:	48 8b 50 08          	mov    0x8(%rax),%rdx
   102e4:	48 83 fa 0b          	cmp    $0xb,%rdx
   102e8:	74 2c                	je     10316 <dlmallinfo+0xc6>
   102ea:	49 89 d4             	mov    %rdx,%r12
   102ed:	83 e2 03             	and    $0x3,%edx
   102f0:	49 83 e4 f8          	and    $0xfffffffffffffff8,%r12
   102f4:	4c 01 e1             	add    %r12,%rcx
   102f7:	48 83 fa 01          	cmp    $0x1,%rdx
   102fb:	75 07                	jne    10304 <dlmallinfo+0xb4>
   102fd:	4d 01 e0             	add    %r12,%r8
   10300:	49 83 c1 01          	add    $0x1,%r9
   10304:	4c 01 e0             	add    %r12,%rax
   10307:	48 39 f0             	cmp    %rsi,%rax
   1030a:	72 0a                	jb     10316 <dlmallinfo+0xc6>
   1030c:	4c 39 e8             	cmp    %r13,%rax
   1030f:	73 05                	jae    10316 <dlmallinfo+0xc6>
   10311:	48 39 f8             	cmp    %rdi,%rax
   10314:	75 ca                	jne    102e0 <dlmallinfo+0x90>
   10316:	4d 8b 52 10          	mov    0x10(%r10),%r10
   1031a:	4d 85 d2             	test   %r10,%r10
   1031d:	75 91                	jne    102b0 <dlmallinfo+0x60>
   1031f:	48 8b 05 72 aa 01 00 	mov    0x1aa72(%rip),%rax        # 2ad98 <_gm_+0x358>
   10326:	89 ca                	mov    %ecx,%edx
   10328:	89 c6                	mov    %eax,%esi
   1032a:	44 29 c0             	sub    %r8d,%eax
   1032d:	29 ce                	sub    %ecx,%esi
   1032f:	8b 0d 6b aa 01 00    	mov    0x1aa6b(%rip),%ecx        # 2ada0 <_gm_+0x360>
   10335:	45 85 db             	test   %r11d,%r11d
   10338:	75 3e                	jne    10378 <dlmallinfo+0x128>
   1033a:	89 43 1c             	mov    %eax,0x1c(%rbx)
   1033d:	48 89 d8             	mov    %rbx,%rax
   10340:	89 13                	mov    %edx,(%rbx)
   10342:	44 89 4b 04          	mov    %r9d,0x4(%rbx)
   10346:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
   1034d:	00 
   1034e:	89 73 10             	mov    %esi,0x10(%rbx)
   10351:	89 4b 14             	mov    %ecx,0x14(%rbx)
   10354:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%rbx)
   1035b:	44 89 43 20          	mov    %r8d,0x20(%rbx)
   1035f:	89 6b 24             	mov    %ebp,0x24(%rbx)
   10362:	48 83 c4 08          	add    $0x8,%rsp
   10366:	5b                   	pop    %rbx
   10367:	5d                   	pop    %rbp
   10368:	41 5c                	pop    %r12
   1036a:	41 5d                	pop    %r13
   1036c:	c3                   	ret    
   1036d:	0f 1f 00             	nopl   (%rax)
   10370:	48 89 f0             	mov    %rsi,%rax
   10373:	e9 54 ff ff ff       	jmp    102cc <dlmallinfo+0x7c>
   10378:	c7 05 32 aa 01 00 00 	movl   $0x0,0x1aa32(%rip)        # 2adb4 <_gm_+0x374>
   1037f:	00 00 00 
   10382:	eb b6                	jmp    1033a <dlmallinfo+0xea>
   10384:	31 ed                	xor    %ebp,%ebp
   10386:	45 31 c0             	xor    %r8d,%r8d
   10389:	31 c0                	xor    %eax,%eax
   1038b:	31 c9                	xor    %ecx,%ecx
   1038d:	31 f6                	xor    %esi,%esi
   1038f:	45 31 c9             	xor    %r9d,%r9d
   10392:	31 d2                	xor    %edx,%edx
   10394:	eb a4                	jmp    1033a <dlmallinfo+0xea>
   10396:	b8 01 00 00 00       	mov    $0x1,%eax
   1039b:	87 05 13 aa 01 00    	xchg   %eax,0x1aa13(%rip)        # 2adb4 <_gm_+0x374>
   103a1:	ba 01 00 00 00       	mov    $0x1,%edx
   103a6:	85 c0                	test   %eax,%eax
   103a8:	75 36                	jne    103e0 <dlmallinfo+0x190>
   103aa:	44 8b 1d ff a9 01 00 	mov    0x1a9ff(%rip),%r11d        # 2adb0 <_gm_+0x370>
   103b1:	48 8b 3d b0 a6 01 00 	mov    0x1a6b0(%rip),%rdi        # 2aa68 <_gm_+0x28>
   103b8:	41 83 e3 02          	and    $0x2,%r11d
   103bc:	48 85 ff             	test   %rdi,%rdi
   103bf:	0f 85 cb fe ff ff    	jne    10290 <dlmallinfo+0x40>
   103c5:	31 ed                	xor    %ebp,%ebp
   103c7:	45 31 c0             	xor    %r8d,%r8d
   103ca:	31 c0                	xor    %eax,%eax
   103cc:	31 c9                	xor    %ecx,%ecx
   103ce:	31 f6                	xor    %esi,%esi
   103d0:	45 31 c9             	xor    %r9d,%r9d
   103d3:	31 d2                	xor    %edx,%edx
   103d5:	e9 5b ff ff ff       	jmp    10335 <dlmallinfo+0xe5>
   103da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   103e0:	8b 05 ce a9 01 00    	mov    0x1a9ce(%rip),%eax        # 2adb4 <_gm_+0x374>
   103e6:	85 c0                	test   %eax,%eax
   103e8:	75 f6                	jne    103e0 <dlmallinfo+0x190>
   103ea:	89 d0                	mov    %edx,%eax
   103ec:	87 05 c2 a9 01 00    	xchg   %eax,0x1a9c2(%rip)        # 2adb4 <_gm_+0x374>
   103f2:	85 c0                	test   %eax,%eax
   103f4:	75 ea                	jne    103e0 <dlmallinfo+0x190>
   103f6:	eb b2                	jmp    103aa <dlmallinfo+0x15a>
   103f8:	e8 43 cc ff ff       	call   d040 <init_mparams.isra.0>
   103fd:	e9 6d fe ff ff       	jmp    1026f <dlmallinfo+0x1f>
   10402:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   10409:	00 00 00 
   1040c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000010410 <__memcpy.part.0>:
   10410:	48 89 f0             	mov    %rsi,%rax
   10413:	48 89 f1             	mov    %rsi,%rcx
   10416:	48 09 f8             	or     %rdi,%rax
   10419:	a8 07                	test   $0x7,%al
   1041b:	74 43                	je     10460 <__memcpy.part.0+0x50>
   1041d:	48 89 f0             	mov    %rsi,%rax
   10420:	48 31 f8             	xor    %rdi,%rax
   10423:	a8 07                	test   $0x7,%al
   10425:	75 0a                	jne    10431 <__memcpy.part.0+0x21>
   10427:	48 83 fa 07          	cmp    $0x7,%rdx
   1042b:	0f 87 87 00 00 00    	ja     104b8 <__memcpy.part.0+0xa8>
   10431:	45 31 c9             	xor    %r9d,%r9d
   10434:	45 31 c0             	xor    %r8d,%r8d
   10437:	45 31 d2             	xor    %r10d,%r10d
   1043a:	31 c0                	xor    %eax,%eax
   1043c:	0f 1f 40 00          	nopl   0x0(%rax)
   10440:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
   10444:	40 88 34 07          	mov    %sil,(%rdi,%rax,1)
   10448:	48 83 c0 01          	add    $0x1,%rax
   1044c:	48 39 c2             	cmp    %rax,%rdx
   1044f:	75 ef                	jne    10440 <__memcpy.part.0+0x30>
   10451:	48 01 d1             	add    %rdx,%rcx
   10454:	48 01 d7             	add    %rdx,%rdi
   10457:	4c 89 d2             	mov    %r10,%rdx
   1045a:	eb 12                	jmp    1046e <__memcpy.part.0+0x5e>
   1045c:	0f 1f 40 00          	nopl   0x0(%rax)
   10460:	49 89 d0             	mov    %rdx,%r8
   10463:	49 89 d1             	mov    %rdx,%r9
   10466:	49 c1 e8 03          	shr    $0x3,%r8
   1046a:	41 83 e1 07          	and    $0x7,%r9d
   1046e:	48 83 fa 07          	cmp    $0x7,%rdx
   10472:	76 23                	jbe    10497 <__memcpy.part.0+0x87>
   10474:	4a 8d 34 c5 00 00 00 	lea    0x0(,%r8,8),%rsi
   1047b:	00 
   1047c:	31 c0                	xor    %eax,%eax
   1047e:	66 90                	xchg   %ax,%ax
   10480:	48 8b 14 01          	mov    (%rcx,%rax,1),%rdx
   10484:	48 89 14 07          	mov    %rdx,(%rdi,%rax,1)
   10488:	48 83 c0 08          	add    $0x8,%rax
   1048c:	48 39 f0             	cmp    %rsi,%rax
   1048f:	75 ef                	jne    10480 <__memcpy.part.0+0x70>
   10491:	48 01 c1             	add    %rax,%rcx
   10494:	48 01 c7             	add    %rax,%rdi
   10497:	4d 85 c9             	test   %r9,%r9
   1049a:	74 14                	je     104b0 <__memcpy.part.0+0xa0>
   1049c:	31 c0                	xor    %eax,%eax
   1049e:	66 90                	xchg   %ax,%ax
   104a0:	0f b6 14 01          	movzbl (%rcx,%rax,1),%edx
   104a4:	88 14 07             	mov    %dl,(%rdi,%rax,1)
   104a7:	48 83 c0 01          	add    $0x1,%rax
   104ab:	49 39 c1             	cmp    %rax,%r9
   104ae:	75 f0                	jne    104a0 <__memcpy.part.0+0x90>
   104b0:	c3                   	ret    
   104b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   104b8:	48 89 f0             	mov    %rsi,%rax
   104bb:	83 e0 07             	and    $0x7,%eax
   104be:	4c 8d 54 10 f8       	lea    -0x8(%rax,%rdx,1),%r10
   104c3:	ba 08 00 00 00       	mov    $0x8,%edx
   104c8:	4d 89 d0             	mov    %r10,%r8
   104cb:	4d 89 d1             	mov    %r10,%r9
   104ce:	48 29 c2             	sub    %rax,%rdx
   104d1:	49 c1 e8 03          	shr    $0x3,%r8
   104d5:	41 83 e1 07          	and    $0x7,%r9d
   104d9:	e9 5c ff ff ff       	jmp    1043a <__memcpy.part.0+0x2a>
   104de:	66 90                	xchg   %ax,%ax

00000000000104e0 <__memcpy>:
   104e0:	f3 0f 1e fa          	endbr64 
   104e4:	49 89 fb             	mov    %rdi,%r11
   104e7:	48 85 d2             	test   %rdx,%rdx
   104ea:	74 0a                	je     104f6 <__memcpy+0x16>
   104ec:	48 39 f7             	cmp    %rsi,%rdi
   104ef:	74 05                	je     104f6 <__memcpy+0x16>
   104f1:	e8 1a ff ff ff       	call   10410 <__memcpy.part.0>
   104f6:	4c 89 d8             	mov    %r11,%rax
   104f9:	c3                   	ret    
   104fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000010500 <memcpy_verw>:
   10500:	f3 0f 1e fa          	endbr64 
   10504:	41 56                	push   %r14
   10506:	41 55                	push   %r13
   10508:	49 89 fd             	mov    %rdi,%r13
   1050b:	41 54                	push   %r12
   1050d:	55                   	push   %rbp
   1050e:	53                   	push   %rbx
   1050f:	48 85 d2             	test   %rdx,%rdx
   10512:	0f 84 8f 00 00 00    	je     105a7 <memcpy_verw+0xa7>
   10518:	48 89 f3             	mov    %rsi,%rbx
   1051b:	48 39 f7             	cmp    %rsi,%rdi
   1051e:	0f 84 83 00 00 00    	je     105a7 <memcpy_verw+0xa7>
   10524:	49 89 d4             	mov    %rdx,%r12
   10527:	48 89 fd             	mov    %rdi,%rbp
   1052a:	48 83 fa 07          	cmp    $0x7,%rdx
   1052e:	77 25                	ja     10555 <memcpy_verw+0x55>
   10530:	eb 5b                	jmp    1058d <memcpy_verw+0x8d>
   10532:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10538:	48 89 de             	mov    %rbx,%rsi
   1053b:	48 89 ef             	mov    %rbp,%rdi
   1053e:	49 83 ec 01          	sub    $0x1,%r12
   10542:	48 83 c3 01          	add    $0x1,%rbx
   10546:	e8 85 09 00 00       	call   10ed0 <__memcpy_verw>
   1054b:	48 83 c5 01          	add    $0x1,%rbp
   1054f:	49 83 fc 07          	cmp    $0x7,%r12
   10553:	76 33                	jbe    10588 <memcpy_verw+0x88>
   10555:	48 89 e8             	mov    %rbp,%rax
   10558:	48 09 d8             	or     %rbx,%rax
   1055b:	a8 07                	test   $0x7,%al
   1055d:	75 d9                	jne    10538 <memcpy_verw+0x38>
   1055f:	4d 89 e3             	mov    %r12,%r11
   10562:	49 83 e3 f8          	and    $0xfffffffffffffff8,%r11
   10566:	48 39 dd             	cmp    %rbx,%rbp
   10569:	74 0e                	je     10579 <memcpy_verw+0x79>
   1056b:	4c 89 da             	mov    %r11,%rdx
   1056e:	48 89 de             	mov    %rbx,%rsi
   10571:	48 89 ef             	mov    %rbp,%rdi
   10574:	e8 97 fe ff ff       	call   10410 <__memcpy.part.0>
   10579:	4d 29 dc             	sub    %r11,%r12
   1057c:	4c 01 db             	add    %r11,%rbx
   1057f:	4c 01 dd             	add    %r11,%rbp
   10582:	49 83 fc 07          	cmp    $0x7,%r12
   10586:	77 cd                	ja     10555 <memcpy_verw+0x55>
   10588:	4d 85 e4             	test   %r12,%r12
   1058b:	74 1a                	je     105a7 <memcpy_verw+0xa7>
   1058d:	45 31 f6             	xor    %r14d,%r14d
   10590:	4a 8d 34 33          	lea    (%rbx,%r14,1),%rsi
   10594:	4a 8d 7c 35 00       	lea    0x0(%rbp,%r14,1),%rdi
   10599:	49 83 c6 01          	add    $0x1,%r14
   1059d:	e8 2e 09 00 00       	call   10ed0 <__memcpy_verw>
   105a2:	4d 39 e6             	cmp    %r12,%r14
   105a5:	72 e9                	jb     10590 <memcpy_verw+0x90>
   105a7:	5b                   	pop    %rbx
   105a8:	4c 89 e8             	mov    %r13,%rax
   105ab:	5d                   	pop    %rbp
   105ac:	41 5c                	pop    %r12
   105ae:	41 5d                	pop    %r13
   105b0:	41 5e                	pop    %r14
   105b2:	c3                   	ret    
   105b3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   105ba:	00 00 00 
   105bd:	0f 1f 00             	nopl   (%rax)

00000000000105c0 <copy_external_memory>:
   105c0:	41 57                	push   %r15
   105c2:	66 0f ef c0          	pxor   %xmm0,%xmm0
   105c6:	41 56                	push   %r14
   105c8:	41 55                	push   %r13
   105ca:	41 54                	push   %r12
   105cc:	55                   	push   %rbp
   105cd:	53                   	push   %rbx
   105ce:	48 83 ec 38          	sub    $0x38,%rsp
   105d2:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   105d9:	00 00 
   105db:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   105e0:	31 c0                	xor    %eax,%eax
   105e2:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   105e7:	48 85 d2             	test   %rdx,%rdx
   105ea:	74 2d                	je     10619 <copy_external_memory+0x59>
   105ec:	41 89 f6             	mov    %esi,%r14d
   105ef:	49 89 fd             	mov    %rdi,%r13
   105f2:	48 89 f3             	mov    %rsi,%rbx
   105f5:	41 89 cc             	mov    %ecx,%r12d
   105f8:	41 83 e6 07          	and    $0x7,%r14d
   105fc:	75 52                	jne    10650 <copy_external_memory+0x90>
   105fe:	48 83 fa 08          	cmp    $0x8,%rdx
   10602:	75 4c                	jne    10650 <copy_external_memory+0x90>
   10604:	45 84 e4             	test   %r12b,%r12b
   10607:	75 37                	jne    10640 <copy_external_memory+0x80>
   10609:	4c 39 eb             	cmp    %r13,%rbx
   1060c:	74 0b                	je     10619 <copy_external_memory+0x59>
   1060e:	48 89 de             	mov    %rbx,%rsi
   10611:	4c 89 ef             	mov    %r13,%rdi
   10614:	e8 f7 fd ff ff       	call   10410 <__memcpy.part.0>
   10619:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   1061e:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
   10625:	00 00 
   10627:	75 7f                	jne    106a8 <copy_external_memory+0xe8>
   10629:	48 83 c4 38          	add    $0x38,%rsp
   1062d:	5b                   	pop    %rbx
   1062e:	5d                   	pop    %rbp
   1062f:	41 5c                	pop    %r12
   10631:	41 5d                	pop    %r13
   10633:	41 5e                	pop    %r14
   10635:	41 5f                	pop    %r15
   10637:	c3                   	ret    
   10638:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1063f:	00 
   10640:	48 89 de             	mov    %rbx,%rsi
   10643:	4c 89 ef             	mov    %r13,%rdi
   10646:	e8 b5 fe ff ff       	call   10500 <memcpy_verw>
   1064b:	eb cc                	jmp    10619 <copy_external_memory+0x59>
   1064d:	0f 1f 00             	nopl   (%rax)
   10650:	45 89 f7             	mov    %r14d,%r15d
   10653:	48 89 de             	mov    %rbx,%rsi
   10656:	48 8d 6c 24 10       	lea    0x10(%rsp),%rbp
   1065b:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   10660:	4c 29 fe             	sub    %r15,%rsi
   10663:	48 89 ef             	mov    %rbp,%rdi
   10666:	e8 85 08 00 00       	call   10ef0 <__memcpy_8a>
   1066b:	45 85 f6             	test   %r14d,%r14d
   1066e:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   10673:	74 0a                	je     1067f <copy_external_memory+0xbf>
   10675:	49 8d 04 17          	lea    (%r15,%rdx,1),%rax
   10679:	48 83 f8 08          	cmp    $0x8,%rax
   1067d:	77 11                	ja     10690 <copy_external_memory+0xd0>
   1067f:	4a 8d 5c 3d 00       	lea    0x0(%rbp,%r15,1),%rbx
   10684:	45 84 e4             	test   %r12b,%r12b
   10687:	74 80                	je     10609 <copy_external_memory+0x49>
   10689:	eb b5                	jmp    10640 <copy_external_memory+0x80>
   1068b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10690:	4c 29 fb             	sub    %r15,%rbx
   10693:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   10698:	48 8d 73 08          	lea    0x8(%rbx),%rsi
   1069c:	e8 4f 08 00 00       	call   10ef0 <__memcpy_8a>
   106a1:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   106a6:	eb d7                	jmp    1067f <copy_external_memory+0xbf>
   106a8:	e8 43 03 00 00       	call   109f0 <__stack_chk_fail>
   106ad:	0f 1f 00             	nopl   (%rax)

00000000000106b0 <memcpy_nochecks>:
   106b0:	f3 0f 1e fa          	endbr64 
   106b4:	49 89 fb             	mov    %rdi,%r11
   106b7:	48 85 d2             	test   %rdx,%rdx
   106ba:	74 0a                	je     106c6 <memcpy_nochecks+0x16>
   106bc:	48 39 f7             	cmp    %rsi,%rdi
   106bf:	74 05                	je     106c6 <memcpy_nochecks+0x16>
   106c1:	e8 4a fd ff ff       	call   10410 <__memcpy.part.0>
   106c6:	4c 89 d8             	mov    %r11,%rax
   106c9:	c3                   	ret    
   106ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000106d0 <memcpy>:
   106d0:	f3 0f 1e fa          	endbr64 
   106d4:	41 57                	push   %r15
   106d6:	41 56                	push   %r14
   106d8:	41 55                	push   %r13
   106da:	49 89 fd             	mov    %rdi,%r13
   106dd:	41 54                	push   %r12
   106df:	55                   	push   %rbp
   106e0:	53                   	push   %rbx
   106e1:	48 83 ec 18          	sub    $0x18,%rsp
   106e5:	48 85 d2             	test   %rdx,%rdx
   106e8:	0f 84 d4 00 00 00    	je     107c2 <memcpy+0xf2>
   106ee:	48 89 f3             	mov    %rsi,%rbx
   106f1:	48 39 f7             	cmp    %rsi,%rdi
   106f4:	0f 84 c8 00 00 00    	je     107c2 <memcpy+0xf2>
   106fa:	48 89 d6             	mov    %rdx,%rsi
   106fd:	48 89 df             	mov    %rbx,%rdi
   10700:	48 89 d5             	mov    %rdx,%rbp
   10703:	e8 58 54 ff ff       	call   5b60 <sgx_is_within_enclave>
   10708:	48 89 ee             	mov    %rbp,%rsi
   1070b:	4c 89 ef             	mov    %r13,%rdi
   1070e:	41 89 c4             	mov    %eax,%r12d
   10711:	e8 4a 54 ff ff       	call   5b60 <sgx_is_within_enclave>
   10716:	45 85 e4             	test   %r12d,%r12d
   10719:	0f 85 b9 00 00 00    	jne    107d8 <memcpy+0x108>
   1071f:	85 c0                	test   %eax,%eax
   10721:	4d 89 ec             	mov    %r13,%r12
   10724:	0f 94 c0             	sete   %al
   10727:	0f b6 c0             	movzbl %al,%eax
   1072a:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   1072e:	48 83 fd 07          	cmp    $0x7,%rbp
   10732:	77 38                	ja     1076c <memcpy+0x9c>
   10734:	eb 7a                	jmp    107b0 <memcpy+0xe0>
   10736:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1073d:	00 00 00 
   10740:	41 be 08 00 00 00    	mov    $0x8,%r14d
   10746:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
   1074a:	48 89 de             	mov    %rbx,%rsi
   1074d:	4c 89 e7             	mov    %r12,%rdi
   10750:	4d 29 fe             	sub    %r15,%r14
   10753:	49 8d 6c 2f f8       	lea    -0x8(%r15,%rbp,1),%rbp
   10758:	4c 89 f2             	mov    %r14,%rdx
   1075b:	4c 01 f3             	add    %r14,%rbx
   1075e:	4d 01 f4             	add    %r14,%r12
   10761:	e8 5a fe ff ff       	call   105c0 <copy_external_memory>
   10766:	48 83 fd 07          	cmp    $0x7,%rbp
   1076a:	76 44                	jbe    107b0 <memcpy+0xe0>
   1076c:	48 89 d8             	mov    %rbx,%rax
   1076f:	4d 89 e7             	mov    %r12,%r15
   10772:	4c 09 e0             	or     %r12,%rax
   10775:	41 83 e7 07          	and    $0x7,%r15d
   10779:	a8 07                	test   $0x7,%al
   1077b:	75 c3                	jne    10740 <memcpy+0x70>
   1077d:	49 89 eb             	mov    %rbp,%r11
   10780:	49 83 e3 f8          	and    $0xfffffffffffffff8,%r11
   10784:	4c 39 e3             	cmp    %r12,%rbx
   10787:	74 0e                	je     10797 <memcpy+0xc7>
   10789:	4c 89 da             	mov    %r11,%rdx
   1078c:	48 89 de             	mov    %rbx,%rsi
   1078f:	4c 89 e7             	mov    %r12,%rdi
   10792:	e8 79 fc ff ff       	call   10410 <__memcpy.part.0>
   10797:	4c 29 dd             	sub    %r11,%rbp
   1079a:	4c 01 db             	add    %r11,%rbx
   1079d:	4d 01 dc             	add    %r11,%r12
   107a0:	48 83 fd 07          	cmp    $0x7,%rbp
   107a4:	77 c6                	ja     1076c <memcpy+0x9c>
   107a6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   107ad:	00 00 00 
   107b0:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
   107b4:	48 89 ea             	mov    %rbp,%rdx
   107b7:	48 89 de             	mov    %rbx,%rsi
   107ba:	4c 89 e7             	mov    %r12,%rdi
   107bd:	e8 fe fd ff ff       	call   105c0 <copy_external_memory>
   107c2:	48 83 c4 18          	add    $0x18,%rsp
   107c6:	4c 89 e8             	mov    %r13,%rax
   107c9:	5b                   	pop    %rbx
   107ca:	5d                   	pop    %rbp
   107cb:	41 5c                	pop    %r12
   107cd:	41 5d                	pop    %r13
   107cf:	41 5e                	pop    %r14
   107d1:	41 5f                	pop    %r15
   107d3:	c3                   	ret    
   107d4:	0f 1f 40 00          	nopl   0x0(%rax)
   107d8:	48 89 ea             	mov    %rbp,%rdx
   107db:	48 89 de             	mov    %rbx,%rsi
   107de:	4c 89 ef             	mov    %r13,%rdi
   107e1:	85 c0                	test   %eax,%eax
   107e3:	75 1b                	jne    10800 <memcpy+0x130>
   107e5:	48 83 c4 18          	add    $0x18,%rsp
   107e9:	5b                   	pop    %rbx
   107ea:	5d                   	pop    %rbp
   107eb:	41 5c                	pop    %r12
   107ed:	41 5d                	pop    %r13
   107ef:	41 5e                	pop    %r14
   107f1:	41 5f                	pop    %r15
   107f3:	e9 08 fd ff ff       	jmp    10500 <memcpy_verw>
   107f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   107ff:	00 
   10800:	e8 0b fc ff ff       	call   10410 <__memcpy.part.0>
   10805:	eb bb                	jmp    107c2 <memcpy+0xf2>
   10807:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1080e:	00 00 

0000000000010810 <memset_verw>:
   10810:	f3 0f 1e fa          	endbr64 
   10814:	41 56                	push   %r14
   10816:	41 55                	push   %r13
   10818:	41 54                	push   %r12
   1081a:	49 89 fc             	mov    %rdi,%r12
   1081d:	55                   	push   %rbp
   1081e:	53                   	push   %rbx
   1081f:	48 83 ec 20          	sub    $0x20,%rsp
   10823:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1082a:	00 00 
   1082c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   10831:	31 c0                	xor    %eax,%eax
   10833:	48 85 d2             	test   %rdx,%rdx
   10836:	0f 84 a0 00 00 00    	je     108dc <memset_verw+0xcc>
   1083c:	48 85 ff             	test   %rdi,%rdi
   1083f:	0f 84 97 00 00 00    	je     108dc <memset_verw+0xcc>
   10845:	4c 8d 6c 24 10       	lea    0x10(%rsp),%r13
   1084a:	48 89 d5             	mov    %rdx,%rbp
   1084d:	ba 08 00 00 00       	mov    $0x8,%edx
   10852:	4c 89 e3             	mov    %r12,%rbx
   10855:	4c 89 ef             	mov    %r13,%rdi
   10858:	40 88 74 24 0f       	mov    %sil,0xf(%rsp)
   1085d:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   10864:	00 00 
   10866:	e8 95 06 00 00       	call   10f00 <__memset>
   1086b:	48 83 fd 07          	cmp    $0x7,%rbp
   1086f:	76 4b                	jbe    108bc <memset_verw+0xac>
   10871:	4c 8d 74 24 0f       	lea    0xf(%rsp),%r14
   10876:	eb 21                	jmp    10899 <memset_verw+0x89>
   10878:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1087f:	00 
   10880:	48 89 df             	mov    %rbx,%rdi
   10883:	4c 89 ee             	mov    %r13,%rsi
   10886:	48 83 ed 08          	sub    $0x8,%rbp
   1088a:	48 83 c3 08          	add    $0x8,%rbx
   1088e:	e8 5d 06 00 00       	call   10ef0 <__memcpy_8a>
   10893:	48 83 fd 07          	cmp    $0x7,%rbp
   10897:	76 1e                	jbe    108b7 <memset_verw+0xa7>
   10899:	f6 c3 07             	test   $0x7,%bl
   1089c:	74 e2                	je     10880 <memset_verw+0x70>
   1089e:	48 89 df             	mov    %rbx,%rdi
   108a1:	4c 89 f6             	mov    %r14,%rsi
   108a4:	48 83 ed 01          	sub    $0x1,%rbp
   108a8:	48 83 c3 01          	add    $0x1,%rbx
   108ac:	e8 1f 06 00 00       	call   10ed0 <__memcpy_verw>
   108b1:	48 83 fd 07          	cmp    $0x7,%rbp
   108b5:	77 e2                	ja     10899 <memset_verw+0x89>
   108b7:	48 85 ed             	test   %rbp,%rbp
   108ba:	74 20                	je     108dc <memset_verw+0xcc>
   108bc:	48 01 dd             	add    %rbx,%rbp
   108bf:	4c 8d 6c 24 0f       	lea    0xf(%rsp),%r13
   108c4:	0f 1f 40 00          	nopl   0x0(%rax)
   108c8:	48 89 df             	mov    %rbx,%rdi
   108cb:	4c 89 ee             	mov    %r13,%rsi
   108ce:	48 83 c3 01          	add    $0x1,%rbx
   108d2:	e8 f9 05 00 00       	call   10ed0 <__memcpy_verw>
   108d7:	48 39 eb             	cmp    %rbp,%rbx
   108da:	75 ec                	jne    108c8 <memset_verw+0xb8>
   108dc:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   108e1:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
   108e8:	00 00 
   108ea:	75 10                	jne    108fc <memset_verw+0xec>
   108ec:	48 83 c4 20          	add    $0x20,%rsp
   108f0:	4c 89 e0             	mov    %r12,%rax
   108f3:	5b                   	pop    %rbx
   108f4:	5d                   	pop    %rbp
   108f5:	41 5c                	pop    %r12
   108f7:	41 5d                	pop    %r13
   108f9:	41 5e                	pop    %r14
   108fb:	c3                   	ret    
   108fc:	e8 ef 00 00 00       	call   109f0 <__stack_chk_fail>
   10901:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   10908:	00 00 00 
   1090b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010910 <memset>:
   10910:	f3 0f 1e fa          	endbr64 
   10914:	e9 e7 05 00 00       	jmp    10f00 <__memset>
   10919:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000010920 <memset_s>:
   10920:	f3 0f 1e fa          	endbr64 
   10924:	53                   	push   %rbx
   10925:	48 85 ff             	test   %rdi,%rdi
   10928:	74 3e                	je     10968 <memset_s+0x48>
   1092a:	48 89 f0             	mov    %rsi,%rax
   1092d:	89 d6                	mov    %edx,%esi
   1092f:	48 39 c8             	cmp    %rcx,%rax
   10932:	73 1c                	jae    10950 <memset_s+0x30>
   10934:	48 8b 0d 0d 75 00 00 	mov    0x750d(%rip),%rcx        # 17e48 <__memset_vp>
   1093b:	48 89 c2             	mov    %rax,%rdx
   1093e:	bb 4b 00 00 00       	mov    $0x4b,%ebx
   10943:	ff d1                	call   *%rcx
   10945:	e8 76 05 00 00       	call   10ec0 <__errno_location>
   1094a:	89 18                	mov    %ebx,(%rax)
   1094c:	89 d8                	mov    %ebx,%eax
   1094e:	5b                   	pop    %rbx
   1094f:	c3                   	ret    
   10950:	31 db                	xor    %ebx,%ebx
   10952:	48 8b 05 ef 74 00 00 	mov    0x74ef(%rip),%rax        # 17e48 <__memset_vp>
   10959:	48 89 ca             	mov    %rcx,%rdx
   1095c:	ff d0                	call   *%rax
   1095e:	89 d8                	mov    %ebx,%eax
   10960:	5b                   	pop    %rbx
   10961:	c3                   	ret    
   10962:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10968:	bb 16 00 00 00       	mov    $0x16,%ebx
   1096d:	eb d6                	jmp    10945 <memset_s+0x25>
   1096f:	90                   	nop

0000000000010970 <memset_verw_s>:
   10970:	f3 0f 1e fa          	endbr64 
   10974:	53                   	push   %rbx
   10975:	48 85 ff             	test   %rdi,%rdi
   10978:	74 36                	je     109b0 <memset_verw_s+0x40>
   1097a:	48 89 f0             	mov    %rsi,%rax
   1097d:	89 d6                	mov    %edx,%esi
   1097f:	48 39 c8             	cmp    %rcx,%rax
   10982:	73 1c                	jae    109a0 <memset_verw_s+0x30>
   10984:	48 89 c2             	mov    %rax,%rdx
   10987:	bb 4b 00 00 00       	mov    $0x4b,%ebx
   1098c:	e8 7f fe ff ff       	call   10810 <memset_verw>
   10991:	e8 2a 05 00 00       	call   10ec0 <__errno_location>
   10996:	89 18                	mov    %ebx,(%rax)
   10998:	89 d8                	mov    %ebx,%eax
   1099a:	5b                   	pop    %rbx
   1099b:	c3                   	ret    
   1099c:	0f 1f 40 00          	nopl   0x0(%rax)
   109a0:	31 db                	xor    %ebx,%ebx
   109a2:	48 89 ca             	mov    %rcx,%rdx
   109a5:	e8 66 fe ff ff       	call   10810 <memset_verw>
   109aa:	89 d8                	mov    %ebx,%eax
   109ac:	5b                   	pop    %rbx
   109ad:	c3                   	ret    
   109ae:	66 90                	xchg   %ax,%ax
   109b0:	bb 16 00 00 00       	mov    $0x16,%ebx
   109b5:	eb da                	jmp    10991 <memset_verw_s+0x21>
   109b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   109be:	00 00 

00000000000109c0 <sgx_init_string_lib>:
   109c0:	f3 0f 1e fa          	endbr64 
   109c4:	31 c0                	xor    %eax,%eax
   109c6:	c3                   	ret    
   109c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   109ce:	00 00 

00000000000109d0 <strcmp>:
   109d0:	f3 0f 1e fa          	endbr64 
   109d4:	e9 87 05 00 00       	jmp    10f60 <_strcmp>
   109d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000109e0 <strlen>:
   109e0:	f3 0f 1e fa          	endbr64 
   109e4:	e9 07 06 00 00       	jmp    10ff0 <_strlen>
   109e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000109f0 <__stack_chk_fail>:
   109f0:	f3 0f 1e fa          	endbr64 
   109f4:	50                   	push   %rax
   109f5:	58                   	pop    %rax
   109f6:	48 83 ec 08          	sub    $0x8,%rsp
   109fa:	e8 38 1b 00 00       	call   12537 <abort>
   109ff:	90                   	nop

0000000000010a00 <__stack_chk_fail_local>:
   10a00:	f3 0f 1e fa          	endbr64 
   10a04:	50                   	push   %rax
   10a05:	58                   	pop    %rax
   10a06:	48 83 ec 08          	sub    $0x8,%rsp
   10a0a:	e8 28 1b 00 00       	call   12537 <abort>
   10a0f:	90                   	nop

0000000000010a10 <__intel_security_check_cookie>:
   10a10:	f3 0f 1e fa          	endbr64 
   10a14:	48 39 3d dd 73 00 00 	cmp    %rdi,0x73dd(%rip)        # 17df8 <__intel_security_cookie>
   10a1b:	75 01                	jne    10a1e <__intel_security_check_cookie+0xe>
   10a1d:	c3                   	ret    
   10a1e:	50                   	push   %rax
   10a1f:	e8 13 1b 00 00       	call   12537 <abort>
   10a24:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   10a2b:	00 00 00 
   10a2e:	66 90                	xchg   %ax,%ax

0000000000010a30 <sgx_thread_spin_init>:
   10a30:	f3 0f 1e fa          	endbr64 
   10a34:	48 85 ff             	test   %rdi,%rdi
   10a37:	74 37                	je     10a70 <sgx_thread_spin_init+0x40>
   10a39:	53                   	push   %rbx
   10a3a:	be 18 00 00 00       	mov    $0x18,%esi
   10a3f:	48 89 fb             	mov    %rdi,%rbx
   10a42:	e8 19 51 ff ff       	call   5b60 <sgx_is_within_enclave>
   10a47:	85 c0                	test   %eax,%eax
   10a49:	74 1d                	je     10a68 <sgx_thread_spin_init+0x38>
   10a4b:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   10a52:	31 c0                	xor    %eax,%eax
   10a54:	48 c7 43 10 00 00 00 	movq   $0x0,0x10(%rbx)
   10a5b:	00 
   10a5c:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%rbx)
   10a63:	5b                   	pop    %rbx
   10a64:	c3                   	ret    
   10a65:	0f 1f 00             	nopl   (%rax)
   10a68:	b8 16 00 00 00       	mov    $0x16,%eax
   10a6d:	5b                   	pop    %rbx
   10a6e:	c3                   	ret    
   10a6f:	90                   	nop
   10a70:	b8 16 00 00 00       	mov    $0x16,%eax
   10a75:	c3                   	ret    
   10a76:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   10a7d:	00 00 00 

0000000000010a80 <sgx_thread_spin_destroy>:
   10a80:	f3 0f 1e fa          	endbr64 
   10a84:	48 85 ff             	test   %rdi,%rdi
   10a87:	74 6f                	je     10af8 <sgx_thread_spin_destroy+0x78>
   10a89:	55                   	push   %rbp
   10a8a:	be 18 00 00 00       	mov    $0x18,%esi
   10a8f:	53                   	push   %rbx
   10a90:	48 89 fb             	mov    %rdi,%rbx
   10a93:	48 83 ec 08          	sub    $0x8,%rsp
   10a97:	e8 c4 50 ff ff       	call   5b60 <sgx_is_within_enclave>
   10a9c:	85 c0                	test   %eax,%eax
   10a9e:	74 30                	je     10ad0 <sgx_thread_spin_destroy+0x50>
   10aa0:	48 8d 6b 08          	lea    0x8(%rbx),%rbp
   10aa4:	48 89 ef             	mov    %rbp,%rdi
   10aa7:	e8 c4 bc ff ff       	call   c770 <sgx_spin_lock>
   10aac:	48 83 7b 10 00       	cmpq   $0x0,0x10(%rbx)
   10ab1:	75 2d                	jne    10ae0 <sgx_thread_spin_destroy+0x60>
   10ab3:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   10aba:	48 89 ef             	mov    %rbp,%rdi
   10abd:	e8 3e bd ff ff       	call   c800 <sgx_spin_unlock>
   10ac2:	48 83 c4 08          	add    $0x8,%rsp
   10ac6:	31 c0                	xor    %eax,%eax
   10ac8:	5b                   	pop    %rbx
   10ac9:	5d                   	pop    %rbp
   10aca:	c3                   	ret    
   10acb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10ad0:	48 83 c4 08          	add    $0x8,%rsp
   10ad4:	b8 16 00 00 00       	mov    $0x16,%eax
   10ad9:	5b                   	pop    %rbx
   10ada:	5d                   	pop    %rbp
   10adb:	c3                   	ret    
   10adc:	0f 1f 40 00          	nopl   0x0(%rax)
   10ae0:	48 89 ef             	mov    %rbp,%rdi
   10ae3:	e8 18 bd ff ff       	call   c800 <sgx_spin_unlock>
   10ae8:	48 83 c4 08          	add    $0x8,%rsp
   10aec:	b8 10 00 00 00       	mov    $0x10,%eax
   10af1:	5b                   	pop    %rbx
   10af2:	5d                   	pop    %rbp
   10af3:	c3                   	ret    
   10af4:	0f 1f 40 00          	nopl   0x0(%rax)
   10af8:	b8 16 00 00 00       	mov    $0x16,%eax
   10afd:	c3                   	ret    
   10afe:	66 90                	xchg   %ax,%ax

0000000000010b00 <sgx_thread_spin_trylock>:
   10b00:	f3 0f 1e fa          	endbr64 
   10b04:	48 85 ff             	test   %rdi,%rdi
   10b07:	74 7f                	je     10b88 <sgx_thread_spin_trylock+0x88>
   10b09:	41 54                	push   %r12
   10b0b:	be 18 00 00 00       	mov    $0x18,%esi
   10b10:	55                   	push   %rbp
   10b11:	53                   	push   %rbx
   10b12:	48 89 fb             	mov    %rdi,%rbx
   10b15:	e8 46 50 ff ff       	call   5b60 <sgx_is_within_enclave>
   10b1a:	85 c0                	test   %eax,%eax
   10b1c:	74 42                	je     10b60 <sgx_thread_spin_trylock+0x60>
   10b1e:	e8 20 16 00 00       	call   12143 <get_thread_data>
   10b23:	4c 8d 63 08          	lea    0x8(%rbx),%r12
   10b27:	4c 89 e7             	mov    %r12,%rdi
   10b2a:	48 89 c5             	mov    %rax,%rbp
   10b2d:	e8 3e bc ff ff       	call   c770 <sgx_spin_lock>
   10b32:	48 8b 43 10          	mov    0x10(%rbx),%rax
   10b36:	48 39 e8             	cmp    %rbp,%rax
   10b39:	74 09                	je     10b44 <sgx_thread_spin_trylock+0x44>
   10b3b:	48 85 c0             	test   %rax,%rax
   10b3e:	75 30                	jne    10b70 <sgx_thread_spin_trylock+0x70>
   10b40:	48 89 6b 10          	mov    %rbp,0x10(%rbx)
   10b44:	48 83 03 01          	addq   $0x1,(%rbx)
   10b48:	4c 89 e7             	mov    %r12,%rdi
   10b4b:	e8 b0 bc ff ff       	call   c800 <sgx_spin_unlock>
   10b50:	5b                   	pop    %rbx
   10b51:	31 c0                	xor    %eax,%eax
   10b53:	5d                   	pop    %rbp
   10b54:	41 5c                	pop    %r12
   10b56:	c3                   	ret    
   10b57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   10b5e:	00 00 
   10b60:	5b                   	pop    %rbx
   10b61:	b8 16 00 00 00       	mov    $0x16,%eax
   10b66:	5d                   	pop    %rbp
   10b67:	41 5c                	pop    %r12
   10b69:	c3                   	ret    
   10b6a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10b70:	4c 89 e7             	mov    %r12,%rdi
   10b73:	e8 88 bc ff ff       	call   c800 <sgx_spin_unlock>
   10b78:	5b                   	pop    %rbx
   10b79:	b8 10 00 00 00       	mov    $0x10,%eax
   10b7e:	5d                   	pop    %rbp
   10b7f:	41 5c                	pop    %r12
   10b81:	c3                   	ret    
   10b82:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10b88:	b8 16 00 00 00       	mov    $0x16,%eax
   10b8d:	c3                   	ret    
   10b8e:	66 90                	xchg   %ax,%ax

0000000000010b90 <sgx_thread_spin_unlock>:
   10b90:	f3 0f 1e fa          	endbr64 
   10b94:	48 85 ff             	test   %rdi,%rdi
   10b97:	0f 84 8b 00 00 00    	je     10c28 <sgx_thread_spin_unlock+0x98>
   10b9d:	41 54                	push   %r12
   10b9f:	be 18 00 00 00       	mov    $0x18,%esi
   10ba4:	55                   	push   %rbp
   10ba5:	53                   	push   %rbx
   10ba6:	48 89 fb             	mov    %rdi,%rbx
   10ba9:	e8 b2 4f ff ff       	call   5b60 <sgx_is_within_enclave>
   10bae:	85 c0                	test   %eax,%eax
   10bb0:	74 56                	je     10c08 <sgx_thread_spin_unlock+0x78>
   10bb2:	e8 8c 15 00 00       	call   12143 <get_thread_data>
   10bb7:	4c 8d 63 08          	lea    0x8(%rbx),%r12
   10bbb:	4c 89 e7             	mov    %r12,%rdi
   10bbe:	48 89 c5             	mov    %rax,%rbp
   10bc1:	e8 aa bb ff ff       	call   c770 <sgx_spin_lock>
   10bc6:	48 8b 43 10          	mov    0x10(%rbx),%rax
   10bca:	48 85 c0             	test   %rax,%rax
   10bcd:	74 21                	je     10bf0 <sgx_thread_spin_unlock+0x60>
   10bcf:	48 39 e8             	cmp    %rbp,%rax
   10bd2:	75 1c                	jne    10bf0 <sgx_thread_spin_unlock+0x60>
   10bd4:	48 83 2b 01          	subq   $0x1,(%rbx)
   10bd8:	74 3e                	je     10c18 <sgx_thread_spin_unlock+0x88>
   10bda:	4c 89 e7             	mov    %r12,%rdi
   10bdd:	e8 1e bc ff ff       	call   c800 <sgx_spin_unlock>
   10be2:	5b                   	pop    %rbx
   10be3:	31 c0                	xor    %eax,%eax
   10be5:	5d                   	pop    %rbp
   10be6:	41 5c                	pop    %r12
   10be8:	c3                   	ret    
   10be9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10bf0:	4c 89 e7             	mov    %r12,%rdi
   10bf3:	e8 08 bc ff ff       	call   c800 <sgx_spin_unlock>
   10bf8:	5b                   	pop    %rbx
   10bf9:	b8 01 00 00 00       	mov    $0x1,%eax
   10bfe:	5d                   	pop    %rbp
   10bff:	41 5c                	pop    %r12
   10c01:	c3                   	ret    
   10c02:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10c08:	5b                   	pop    %rbx
   10c09:	b8 16 00 00 00       	mov    $0x16,%eax
   10c0e:	5d                   	pop    %rbp
   10c0f:	41 5c                	pop    %r12
   10c11:	c3                   	ret    
   10c12:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10c18:	48 c7 43 10 00 00 00 	movq   $0x0,0x10(%rbx)
   10c1f:	00 
   10c20:	eb b8                	jmp    10bda <sgx_thread_spin_unlock+0x4a>
   10c22:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10c28:	b8 16 00 00 00       	mov    $0x16,%eax
   10c2d:	c3                   	ret    
   10c2e:	66 90                	xchg   %ax,%ax

0000000000010c30 <memcpy_s>:
   10c30:	f3 0f 1e fa          	endbr64 
   10c34:	48 85 c9             	test   %rcx,%rcx
   10c37:	74 4f                	je     10c88 <memcpy_s+0x58>
   10c39:	53                   	push   %rbx
   10c3a:	48 85 ff             	test   %rdi,%rdi
   10c3d:	74 51                	je     10c90 <memcpy_s+0x60>
   10c3f:	48 89 d3             	mov    %rdx,%rbx
   10c42:	48 85 d2             	test   %rdx,%rdx
   10c45:	74 19                	je     10c60 <memcpy_s+0x30>
   10c47:	48 39 ce             	cmp    %rcx,%rsi
   10c4a:	72 14                	jb     10c60 <memcpy_s+0x30>
   10c4c:	48 89 de             	mov    %rbx,%rsi
   10c4f:	48 89 ca             	mov    %rcx,%rdx
   10c52:	e8 79 fa ff ff       	call   106d0 <memcpy>
   10c57:	31 c0                	xor    %eax,%eax
   10c59:	5b                   	pop    %rbx
   10c5a:	c3                   	ret    
   10c5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10c60:	48 89 f2             	mov    %rsi,%rdx
   10c63:	31 f6                	xor    %esi,%esi
   10c65:	e8 a6 fc ff ff       	call   10910 <memset>
   10c6a:	48 85 db             	test   %rbx,%rbx
   10c6d:	74 21                	je     10c90 <memcpy_s+0x60>
   10c6f:	e8 4c 02 00 00       	call   10ec0 <__errno_location>
   10c74:	c7 00 22 00 00 00    	movl   $0x22,(%rax)
   10c7a:	b8 22 00 00 00       	mov    $0x22,%eax
   10c7f:	5b                   	pop    %rbx
   10c80:	c3                   	ret    
   10c81:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10c88:	31 c0                	xor    %eax,%eax
   10c8a:	c3                   	ret    
   10c8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10c90:	e8 2b 02 00 00       	call   10ec0 <__errno_location>
   10c95:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   10c9b:	b8 16 00 00 00       	mov    $0x16,%eax
   10ca0:	5b                   	pop    %rbx
   10ca1:	c3                   	ret    
   10ca2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   10ca9:	00 00 00 
   10cac:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000010cb0 <memcpy_verw_s>:
   10cb0:	f3 0f 1e fa          	endbr64 
   10cb4:	48 85 c9             	test   %rcx,%rcx
   10cb7:	74 4f                	je     10d08 <memcpy_verw_s+0x58>
   10cb9:	53                   	push   %rbx
   10cba:	48 85 ff             	test   %rdi,%rdi
   10cbd:	74 51                	je     10d10 <memcpy_verw_s+0x60>
   10cbf:	48 89 d3             	mov    %rdx,%rbx
   10cc2:	48 85 d2             	test   %rdx,%rdx
   10cc5:	74 19                	je     10ce0 <memcpy_verw_s+0x30>
   10cc7:	48 39 ce             	cmp    %rcx,%rsi
   10cca:	72 14                	jb     10ce0 <memcpy_verw_s+0x30>
   10ccc:	48 89 de             	mov    %rbx,%rsi
   10ccf:	48 89 ca             	mov    %rcx,%rdx
   10cd2:	e8 29 f8 ff ff       	call   10500 <memcpy_verw>
   10cd7:	31 c0                	xor    %eax,%eax
   10cd9:	5b                   	pop    %rbx
   10cda:	c3                   	ret    
   10cdb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10ce0:	48 89 f2             	mov    %rsi,%rdx
   10ce3:	31 f6                	xor    %esi,%esi
   10ce5:	e8 26 fb ff ff       	call   10810 <memset_verw>
   10cea:	48 85 db             	test   %rbx,%rbx
   10ced:	74 21                	je     10d10 <memcpy_verw_s+0x60>
   10cef:	e8 cc 01 00 00       	call   10ec0 <__errno_location>
   10cf4:	c7 00 22 00 00 00    	movl   $0x22,(%rax)
   10cfa:	b8 22 00 00 00       	mov    $0x22,%eax
   10cff:	5b                   	pop    %rbx
   10d00:	c3                   	ret    
   10d01:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10d08:	31 c0                	xor    %eax,%eax
   10d0a:	c3                   	ret    
   10d0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10d10:	e8 ab 01 00 00       	call   10ec0 <__errno_location>
   10d15:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   10d1b:	b8 16 00 00 00       	mov    $0x16,%eax
   10d20:	5b                   	pop    %rbx
   10d21:	c3                   	ret    

0000000000010d22 <setjmp>:
   10d22:	f3 0f 1e fa          	endbr64 
   10d26:	50                   	push   %rax
   10d27:	53                   	push   %rbx
   10d28:	51                   	push   %rcx
   10d29:	52                   	push   %rdx
   10d2a:	56                   	push   %rsi
   10d2b:	57                   	push   %rdi
   10d2c:	41 50                	push   %r8
   10d2e:	41 51                	push   %r9
   10d30:	41 52                	push   %r10
   10d32:	41 53                	push   %r11
   10d34:	41 54                	push   %r12
   10d36:	41 55                	push   %r13
   10d38:	41 56                	push   %r14
   10d3a:	41 57                	push   %r15
   10d3c:	48 c7 c6 08 00 00 00 	mov    $0x8,%rsi
   10d43:	e8 18 4e ff ff       	call   5b60 <sgx_is_within_enclave>
   10d48:	83 f8 00             	cmp    $0x0,%eax
   10d4b:	74 60                	je     10dad <.crash>
   10d4d:	41 5f                	pop    %r15
   10d4f:	41 5e                	pop    %r14
   10d51:	41 5d                	pop    %r13
   10d53:	41 5c                	pop    %r12
   10d55:	41 5b                	pop    %r11
   10d57:	41 5a                	pop    %r10
   10d59:	41 59                	pop    %r9
   10d5b:	41 58                	pop    %r8
   10d5d:	5f                   	pop    %rdi
   10d5e:	5e                   	pop    %rsi
   10d5f:	5a                   	pop    %rdx
   10d60:	59                   	pop    %rcx
   10d61:	5b                   	pop    %rbx
   10d62:	58                   	pop    %rax
   10d63:	4c 8b 1c 24          	mov    (%rsp),%r11
   10d67:	48 89 1f             	mov    %rbx,(%rdi)
   10d6a:	48 89 6f 08          	mov    %rbp,0x8(%rdi)
   10d6e:	4c 89 67 10          	mov    %r12,0x10(%rdi)
   10d72:	4c 89 6f 18          	mov    %r13,0x18(%rdi)
   10d76:	4c 89 77 20          	mov    %r14,0x20(%rdi)
   10d7a:	4c 89 7f 28          	mov    %r15,0x28(%rdi)
   10d7e:	48 89 67 30          	mov    %rsp,0x30(%rdi)
   10d82:	4c 89 5f 38          	mov    %r11,0x38(%rdi)
   10d86:	e8 c6 13 00 00       	call   12151 <get_stack_guard>
   10d8b:	48 31 07             	xor    %rax,(%rdi)
   10d8e:	48 31 47 08          	xor    %rax,0x8(%rdi)
   10d92:	48 31 47 10          	xor    %rax,0x10(%rdi)
   10d96:	48 31 47 18          	xor    %rax,0x18(%rdi)
   10d9a:	48 31 47 20          	xor    %rax,0x20(%rdi)
   10d9e:	48 31 47 28          	xor    %rax,0x28(%rdi)
   10da2:	48 31 47 30          	xor    %rax,0x30(%rdi)
   10da6:	48 31 47 38          	xor    %rax,0x38(%rdi)
   10daa:	31 c0                	xor    %eax,%eax
   10dac:	c3                   	ret    

0000000000010dad <.crash>:
   10dad:	0f 0b                	ud2    

0000000000010daf <longjmp>:
   10daf:	f3 0f 1e fa          	endbr64 
   10db3:	50                   	push   %rax
   10db4:	53                   	push   %rbx
   10db5:	51                   	push   %rcx
   10db6:	52                   	push   %rdx
   10db7:	56                   	push   %rsi
   10db8:	57                   	push   %rdi
   10db9:	41 50                	push   %r8
   10dbb:	41 51                	push   %r9
   10dbd:	41 52                	push   %r10
   10dbf:	41 53                	push   %r11
   10dc1:	41 54                	push   %r12
   10dc3:	41 55                	push   %r13
   10dc5:	41 56                	push   %r14
   10dc7:	41 57                	push   %r15
   10dc9:	57                   	push   %rdi
   10dca:	48 c7 c6 08 00 00 00 	mov    $0x8,%rsi
   10dd1:	e8 8a 4d ff ff       	call   5b60 <sgx_is_within_enclave>
   10dd6:	83 f8 00             	cmp    $0x0,%eax
   10dd9:	74 d2                	je     10dad <.crash>
   10ddb:	5f                   	pop    %rdi
   10ddc:	48 8b 57 30          	mov    0x30(%rdi),%rdx
   10de0:	e8 6c 13 00 00       	call   12151 <get_stack_guard>
   10de5:	48 31 c2             	xor    %rax,%rdx
   10de8:	52                   	push   %rdx
   10de9:	5f                   	pop    %rdi
   10dea:	e8 a1 68 ff ff       	call   7690 <is_valid_sp>
   10def:	83 f8 00             	cmp    $0x0,%eax
   10df2:	74 b9                	je     10dad <.crash>
   10df4:	41 5f                	pop    %r15
   10df6:	41 5e                	pop    %r14
   10df8:	41 5d                	pop    %r13
   10dfa:	41 5c                	pop    %r12
   10dfc:	41 5b                	pop    %r11
   10dfe:	41 5a                	pop    %r10
   10e00:	41 59                	pop    %r9
   10e02:	41 58                	pop    %r8
   10e04:	5f                   	pop    %rdi
   10e05:	5e                   	pop    %rsi
   10e06:	5a                   	pop    %rdx
   10e07:	59                   	pop    %rcx
   10e08:	5b                   	pop    %rbx
   10e09:	58                   	pop    %rax
   10e0a:	89 f0                	mov    %esi,%eax
   10e0c:	48 8b 1f             	mov    (%rdi),%rbx
   10e0f:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   10e13:	4c 8b 67 10          	mov    0x10(%rdi),%r12
   10e17:	4c 8b 6f 18          	mov    0x18(%rdi),%r13
   10e1b:	4c 8b 77 20          	mov    0x20(%rdi),%r14
   10e1f:	4c 8b 7f 28          	mov    0x28(%rdi),%r15
   10e23:	48 8b 57 30          	mov    0x30(%rdi),%rdx
   10e27:	48 8b 4f 38          	mov    0x38(%rdi),%rcx
   10e2b:	50                   	push   %rax
   10e2c:	e8 20 13 00 00       	call   12151 <get_stack_guard>
   10e31:	48 31 c3             	xor    %rax,%rbx
   10e34:	48 31 c6             	xor    %rax,%rsi
   10e37:	49 31 c4             	xor    %rax,%r12
   10e3a:	49 31 c5             	xor    %rax,%r13
   10e3d:	49 31 c6             	xor    %rax,%r14
   10e40:	49 31 c7             	xor    %rax,%r15
   10e43:	48 31 c2             	xor    %rax,%rdx
   10e46:	48 31 c1             	xor    %rax,%rcx
   10e49:	58                   	pop    %rax
   10e4a:	48 89 f5             	mov    %rsi,%rbp
   10e4d:	48 89 0a             	mov    %rcx,(%rdx)
   10e50:	48 89 d4             	mov    %rdx,%rsp
   10e53:	85 c0                	test   %eax,%eax
   10e55:	75 02                	jne    10e59 <longjmp+0xaa>
   10e57:	ff c0                	inc    %eax
   10e59:	c3                   	ret    
   10e5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000010e60 <rsrv_mem_init>:
   10e60:	f3 0f 1e fa          	endbr64 
   10e64:	48 85 ff             	test   %rdi,%rdi
   10e67:	74 47                	je     10eb0 <rsrv_mem_init+0x50>
   10e69:	48 89 f0             	mov    %rsi,%rax
   10e6c:	b9 01 00 00 00       	mov    $0x1,%ecx
   10e71:	48 09 d0             	or     %rdx,%rax
   10e74:	48 09 f8             	or     %rdi,%rax
   10e77:	a9 ff 0f 00 00       	test   $0xfff,%eax
   10e7c:	74 0a                	je     10e88 <rsrv_mem_init+0x28>
   10e7e:	89 c8                	mov    %ecx,%eax
   10e80:	c3                   	ret    
   10e81:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10e88:	48 89 f0             	mov    %rsi,%rax
   10e8b:	48 03 05 ce 6f 00 00 	add    0x6fce(%rip),%rax        # 17e60 <rsrv_mem_base>
   10e92:	72 ea                	jb     10e7e <rsrv_mem_init+0x1e>
   10e94:	31 c9                	xor    %ecx,%ecx
   10e96:	48 89 3d c3 6f 00 00 	mov    %rdi,0x6fc3(%rip)        # 17e60 <rsrv_mem_base>
   10e9d:	48 89 35 b4 6f 00 00 	mov    %rsi,0x6fb4(%rip)        # 17e58 <rsrv_mem_size>
   10ea4:	89 c8                	mov    %ecx,%eax
   10ea6:	48 89 15 a3 6f 00 00 	mov    %rdx,0x6fa3(%rip)        # 17e50 <rsrv_mem_min_size>
   10ead:	c3                   	ret    
   10eae:	66 90                	xchg   %ax,%ax
   10eb0:	b9 01 00 00 00       	mov    $0x1,%ecx
   10eb5:	89 c8                	mov    %ecx,%eax
   10eb7:	c3                   	ret    
   10eb8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   10ebf:	00 

0000000000010ec0 <__errno_location>:
   10ec0:	f3 0f 1e fa          	endbr64 
   10ec4:	e9 17 67 ff ff       	jmp    75e0 <get_errno_addr>
   10ec9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000010ed0 <__memcpy_verw>:
   10ed0:	8a 06                	mov    (%rsi),%al
   10ed2:	48 83 ec 08          	sub    $0x8,%rsp
   10ed6:	8c 1c 24             	mov    %ds,(%rsp)
   10ed9:	0f 00 2c 24          	verw   (%rsp)
   10edd:	88 07                	mov    %al,(%rdi)
   10edf:	0f ae f0             	mfence 
   10ee2:	0f ae e8             	lfence 
   10ee5:	48 83 c4 08          	add    $0x8,%rsp
   10ee9:	48 89 f8             	mov    %rdi,%rax
   10eec:	c3                   	ret    
   10eed:	cc                   	int3   
   10eee:	cc                   	int3   
   10eef:	cc                   	int3   

0000000000010ef0 <__memcpy_8a>:
   10ef0:	48 8b 06             	mov    (%rsi),%rax
   10ef3:	48 89 07             	mov    %rax,(%rdi)
   10ef6:	48 89 f8             	mov    %rdi,%rax
   10ef9:	c3                   	ret    
   10efa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000010f00 <__memset>:
   10f00:	48 89 f0             	mov    %rsi,%rax
   10f03:	48 25 ff 00 00 00    	and    $0xff,%rax
   10f09:	48 89 d1             	mov    %rdx,%rcx
   10f0c:	49 89 fb             	mov    %rdi,%r11
   10f0f:	fc                   	cld    
   10f10:	48 83 f9 0f          	cmp    $0xf,%rcx
   10f14:	7e 38                	jle    10f4e <L1>
   10f16:	88 c4                	mov    %al,%ah
   10f18:	89 c2                	mov    %eax,%edx
   10f1a:	c1 e0 10             	shl    $0x10,%eax
   10f1d:	09 d0                	or     %edx,%eax
   10f1f:	89 c2                	mov    %eax,%edx
   10f21:	48 c1 e0 20          	shl    $0x20,%rax
   10f25:	48 09 d0             	or     %rdx,%rax
   10f28:	48 89 fa             	mov    %rdi,%rdx
   10f2b:	48 f7 da             	neg    %rdx
   10f2e:	48 83 e2 07          	and    $0x7,%rdx
   10f32:	49 89 c8             	mov    %rcx,%r8
   10f35:	49 29 d0             	sub    %rdx,%r8
   10f38:	48 89 d1             	mov    %rdx,%rcx
   10f3b:	f3 aa                	rep stos %al,%es:(%rdi)
   10f3d:	4c 89 c1             	mov    %r8,%rcx
   10f40:	48 c1 e9 03          	shr    $0x3,%rcx
   10f44:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   10f47:	4c 89 c1             	mov    %r8,%rcx
   10f4a:	48 83 e1 07          	and    $0x7,%rcx

0000000000010f4e <L1>:
   10f4e:	f3 aa                	rep stos %al,%es:(%rdi)
   10f50:	4c 89 d8             	mov    %r11,%rax
   10f53:	c3                   	ret    
   10f54:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   10f5b:	00 00 00 
   10f5e:	66 90                	xchg   %ax,%ax

0000000000010f60 <_strcmp>:
   10f60:	40 f6 c7 07          	test   $0x7,%dil
   10f64:	74 14                	je     10f7a <_strcmp+0x1a>
   10f66:	8a 07                	mov    (%rdi),%al
   10f68:	48 ff c7             	inc    %rdi
   10f6b:	8a 16                	mov    (%rsi),%dl
   10f6d:	48 ff c6             	inc    %rsi
   10f70:	84 c0                	test   %al,%al
   10f72:	74 6e                	je     10fe2 <_strcmp+0x82>
   10f74:	38 c2                	cmp    %al,%dl
   10f76:	74 e8                	je     10f60 <_strcmp>
   10f78:	eb 68                	jmp    10fe2 <_strcmp+0x82>
   10f7a:	40 f6 c6 07          	test   $0x7,%sil
   10f7e:	75 50                	jne    10fd0 <_strcmp+0x70>
   10f80:	49 b8 01 01 01 01 01 	movabs $0x101010101010101,%r8
   10f87:	01 01 01 
   10f8a:	48 83 ef 08          	sub    $0x8,%rdi
   10f8e:	49 b9 80 80 80 80 80 	movabs $0x8080808080808080,%r9
   10f95:	80 80 80 
   10f98:	48 83 ee 08          	sub    $0x8,%rsi
   10f9c:	0f 1f 40 00          	nopl   0x0(%rax)
   10fa0:	48 8b 47 08          	mov    0x8(%rdi),%rax
   10fa4:	48 83 c7 08          	add    $0x8,%rdi
   10fa8:	48 8b 56 08          	mov    0x8(%rsi),%rdx
   10fac:	48 83 c6 08          	add    $0x8,%rsi
   10fb0:	48 39 c2             	cmp    %rax,%rdx
   10fb3:	75 1b                	jne    10fd0 <_strcmp+0x70>
   10fb5:	4c 29 c2             	sub    %r8,%rdx
   10fb8:	48 f7 d0             	not    %rax
   10fbb:	48 21 c2             	and    %rax,%rdx
   10fbe:	4c 85 ca             	test   %r9,%rdx
   10fc1:	74 dd                	je     10fa0 <_strcmp+0x40>
   10fc3:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   10fca:	00 00 00 00 
   10fce:	66 90                	xchg   %ax,%ax
   10fd0:	8a 07                	mov    (%rdi),%al
   10fd2:	48 ff c7             	inc    %rdi
   10fd5:	8a 16                	mov    (%rsi),%dl
   10fd7:	48 ff c6             	inc    %rsi
   10fda:	84 c0                	test   %al,%al
   10fdc:	74 04                	je     10fe2 <_strcmp+0x82>
   10fde:	38 c2                	cmp    %al,%dl
   10fe0:	74 ee                	je     10fd0 <_strcmp+0x70>
   10fe2:	48 0f b6 c0          	movzbq %al,%rax
   10fe6:	48 0f b6 d2          	movzbq %dl,%rdx
   10fea:	48 29 d0             	sub    %rdx,%rax
   10fed:	c3                   	ret    
   10fee:	66 90                	xchg   %ax,%ax

0000000000010ff0 <_strlen>:
   10ff0:	49 b8 01 01 01 01 01 	movabs $0x101010101010101,%r8
   10ff7:	01 01 01 
   10ffa:	40 f6 c7 07          	test   $0x7,%dil
   10ffe:	48 89 f8             	mov    %rdi,%rax
   11001:	49 b9 80 80 80 80 80 	movabs $0x8080808080808080,%r9
   11008:	80 80 80 
   1100b:	75 33                	jne    11040 <_strlen+0x50>
   1100d:	0f 1f 00             	nopl   (%rax)
   11010:	48 8b 10             	mov    (%rax),%rdx
   11013:	48 83 c0 08          	add    $0x8,%rax
   11017:	48 89 d1             	mov    %rdx,%rcx
   1101a:	4c 29 c2             	sub    %r8,%rdx
   1101d:	48 f7 d1             	not    %rcx
   11020:	4c 21 ca             	and    %r9,%rdx
   11023:	74 eb                	je     11010 <_strlen+0x20>
   11025:	48 21 ca             	and    %rcx,%rdx
   11028:	74 e6                	je     11010 <_strlen+0x20>
   1102a:	48 29 f8             	sub    %rdi,%rax
   1102d:	48 0f bc d2          	bsf    %rdx,%rdx
   11031:	48 c1 ea 03          	shr    $0x3,%rdx
   11035:	48 8d 44 10 f8       	lea    -0x8(%rax,%rdx,1),%rax
   1103a:	c3                   	ret    
   1103b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   11040:	88 c1                	mov    %al,%cl
   11042:	48 c7 c6 01 00 00 00 	mov    $0x1,%rsi
   11049:	80 e1 07             	and    $0x7,%cl
   1104c:	24 f8                	and    $0xf8,%al
   1104e:	c0 e1 03             	shl    $0x3,%cl
   11051:	48 8b 10             	mov    (%rax),%rdx
   11054:	48 d3 e6             	shl    %cl,%rsi
   11057:	48 ff ce             	dec    %rsi
   1105a:	48 09 f2             	or     %rsi,%rdx
   1105d:	eb b4                	jmp    11013 <_strlen+0x23>
   1105f:	90                   	nop

0000000000011060 <sgx_init_crypto_lib>:
   11060:	f3 0f 1e fa          	endbr64 
   11064:	e9 07 00 00 00       	jmp    11070 <init_ipp_cpuid>
   11069:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000011070 <init_ipp_cpuid>:
   11070:	f3 0f 1e fa          	endbr64 
   11074:	48 83 3d 64 6f 00 00 	cmpq   $0x0,0x6f64(%rip)        # 17fe0 <ippcpSetCpuFeatures>
   1107b:	00 
   1107c:	0f 84 2e 02 00 00    	je     112b0 <init_ipp_cpuid+0x240>
   11082:	48 89 f8             	mov    %rdi,%rax
   11085:	ba 02 00 00 00       	mov    $0x2,%edx
   1108a:	f6 c4 02             	test   $0x2,%ah
   1108d:	0f 84 1f 02 00 00    	je     112b2 <init_ipp_cpuid+0x242>
   11093:	48 89 fa             	mov    %rdi,%rdx
   11096:	48 83 ec 08          	sub    $0x8,%rsp
   1109a:	48 b9 00 00 00 00 08 	movabs $0x800000000,%rcx
   110a1:	00 00 00 
   110a4:	81 e2 00 08 00 00    	and    $0x800,%edx
   110aa:	48 83 fa 01          	cmp    $0x1,%rdx
   110ae:	48 19 ff             	sbb    %rdi,%rdi
   110b1:	48 83 e7 e0          	and    $0xffffffffffffffe0,%rdi
   110b5:	48 83 c7 7f          	add    $0x7f,%rdi
   110b9:	48 89 fa             	mov    %rdi,%rdx
   110bc:	80 ca 80             	or     $0x80,%dl
   110bf:	f6 c4 04             	test   $0x4,%ah
   110c2:	48 0f 45 fa          	cmovne %rdx,%rdi
   110c6:	48 89 fa             	mov    %rdi,%rdx
   110c9:	80 ce 03             	or     $0x3,%dh
   110cc:	a9 00 00 01 00       	test   $0x10000,%eax
   110d1:	48 0f 45 fa          	cmovne %rdx,%rdi
   110d5:	48 89 fa             	mov    %rdi,%rdx
   110d8:	80 ce 04             	or     $0x4,%dh
   110db:	f6 c4 40             	test   $0x40,%ah
   110de:	48 0f 45 fa          	cmovne %rdx,%rdi
   110e2:	48 89 fa             	mov    %rdi,%rdx
   110e5:	80 ce 08             	or     $0x8,%dh
   110e8:	f6 c4 20             	test   $0x20,%ah
   110eb:	48 0f 45 fa          	cmovne %rdx,%rdi
   110ef:	48 89 fa             	mov    %rdi,%rdx
   110f2:	80 ce 20             	or     $0x20,%dh
   110f5:	a9 00 00 02 00       	test   $0x20000,%eax
   110fa:	48 0f 45 fa          	cmovne %rdx,%rdi
   110fe:	48 89 fa             	mov    %rdi,%rdx
   11101:	80 ce 40             	or     $0x40,%dh
   11104:	f6 c4 80             	test   $0x80,%ah
   11107:	48 0f 45 fa          	cmovne %rdx,%rdi
   1110b:	48 89 fa             	mov    %rdi,%rdx
   1110e:	80 ce 80             	or     $0x80,%dh
   11111:	a9 00 00 80 00       	test   $0x800000,%eax
   11116:	48 0f 45 fa          	cmovne %rdx,%rdi
   1111a:	48 89 fa             	mov    %rdi,%rdx
   1111d:	48 81 ca 00 00 01 00 	or     $0x10000,%rdx
   11124:	a9 00 00 00 10       	test   $0x10000000,%eax
   11129:	48 0f 45 fa          	cmovne %rdx,%rdi
   1112d:	48 89 fa             	mov    %rdi,%rdx
   11130:	48 81 ca 00 00 02 00 	or     $0x20000,%rdx
   11137:	a9 00 00 00 20       	test   $0x20000000,%eax
   1113c:	48 0f 45 fa          	cmovne %rdx,%rdi
   11140:	48 89 fa             	mov    %rdi,%rdx
   11143:	48 81 ca 00 00 08 00 	or     $0x80000,%rdx
   1114a:	48 85 c8             	test   %rcx,%rax
   1114d:	48 0f 45 fa          	cmovne %rdx,%rdi
   11151:	a9 00 00 00 08       	test   $0x8000000,%eax
   11156:	74 0d                	je     11165 <init_ipp_cpuid+0xf5>
   11158:	48 ba 00 00 10 00 02 	movabs $0x200100000,%rdx
   1115f:	00 00 00 
   11162:	48 09 d7             	or     %rdx,%rdi
   11165:	48 b9 00 00 00 00 02 	movabs $0x200000000,%rcx
   1116c:	00 00 00 
   1116f:	48 89 fa             	mov    %rdi,%rdx
   11172:	48 81 ca 00 00 80 00 	or     $0x800000,%rdx
   11179:	48 85 c8             	test   %rcx,%rax
   1117c:	48 b9 00 00 00 00 01 	movabs $0x100000000,%rcx
   11183:	00 00 00 
   11186:	48 0f 45 fa          	cmovne %rdx,%rdi
   1118a:	48 89 fa             	mov    %rdi,%rdx
   1118d:	48 81 ca 00 00 40 00 	or     $0x400000,%rdx
   11194:	48 85 c8             	test   %rcx,%rax
   11197:	48 b9 00 00 00 00 04 	movabs $0x400000000,%rcx
   1119e:	00 00 00 
   111a1:	48 0f 45 fa          	cmovne %rdx,%rdi
   111a5:	48 89 fa             	mov    %rdi,%rdx
   111a8:	48 81 ca 00 00 20 00 	or     $0x200000,%rdx
   111af:	48 85 c8             	test   %rcx,%rax
   111b2:	48 b9 00 00 00 00 20 	movabs $0x2000000000,%rcx
   111b9:	00 00 00 
   111bc:	48 0f 45 fa          	cmovne %rdx,%rdi
   111c0:	48 89 fa             	mov    %rdi,%rdx
   111c3:	48 81 ca 00 00 00 02 	or     $0x2000000,%rdx
   111ca:	a9 00 00 00 01       	test   $0x1000000,%eax
   111cf:	48 0f 45 fa          	cmovne %rdx,%rdi
   111d3:	48 89 fa             	mov    %rdi,%rdx
   111d6:	48 81 ca 00 00 00 01 	or     $0x1000000,%rdx
   111dd:	48 85 c8             	test   %rcx,%rax
   111e0:	48 b9 00 00 00 00 40 	movabs $0x4000000000,%rcx
   111e7:	00 00 00 
   111ea:	48 0f 45 fa          	cmovne %rdx,%rdi
   111ee:	48 89 fa             	mov    %rdi,%rdx
   111f1:	48 81 ca 00 00 00 04 	or     $0x4000000,%rdx
   111f8:	48 85 c8             	test   %rcx,%rax
   111fb:	48 b9 00 00 00 00 80 	movabs $0x8000000000,%rcx
   11202:	00 00 00 
   11205:	48 0f 45 fa          	cmovne %rdx,%rdi
   11209:	48 89 fa             	mov    %rdi,%rdx
   1120c:	48 81 ca 00 00 00 08 	or     $0x8000000,%rdx
   11213:	48 85 c8             	test   %rcx,%rax
   11216:	48 b9 00 00 00 00 00 	movabs $0x20000000000,%rcx
   1121d:	02 00 00 
   11220:	48 0f 45 fa          	cmovne %rdx,%rdi
   11224:	48 89 fa             	mov    %rdi,%rdx
   11227:	48 81 ca 00 00 00 40 	or     $0x40000000,%rdx
   1122e:	48 85 c8             	test   %rcx,%rax
   11231:	48 b9 00 00 00 00 00 	movabs $0x10000000000,%rcx
   11238:	01 00 00 
   1123b:	48 0f 45 fa          	cmovne %rdx,%rdi
   1123f:	48 89 fa             	mov    %rdi,%rdx
   11242:	48 81 ca 00 00 00 20 	or     $0x20000000,%rdx
   11249:	48 85 c8             	test   %rcx,%rax
   1124c:	48 0f 45 fa          	cmovne %rdx,%rdi
   11250:	48 0f ba e0 2e       	bt     $0x2e,%rax
   11255:	73 05                	jae    1125c <init_ipp_cpuid+0x1ec>
   11257:	48 0f ba ef 23       	bts    $0x23,%rdi
   1125c:	a9 00 00 00 40       	test   $0x40000000,%eax
   11261:	74 05                	je     11268 <init_ipp_cpuid+0x1f8>
   11263:	48 0f ba ef 20       	bts    $0x20,%rdi
   11268:	48 0f ba e0 2d       	bt     $0x2d,%rax
   1126d:	73 05                	jae    11274 <init_ipp_cpuid+0x204>
   1126f:	48 0f ba ef 22       	bts    $0x22,%rdi
   11274:	48 0f ba e0 2c       	bt     $0x2c,%rax
   11279:	73 05                	jae    11280 <init_ipp_cpuid+0x210>
   1127b:	48 0f ba ef 25       	bts    $0x25,%rdi
   11280:	48 0f ba e0 2f       	bt     $0x2f,%rax
   11285:	73 05                	jae    1128c <init_ipp_cpuid+0x21c>
   11287:	48 0f ba ef 24       	bts    $0x24,%rdi
   1128c:	48 0f ba ef 3f       	bts    $0x3f,%rdi
   11291:	e8 82 fd fe ff       	call   1018 <ippcpSetCpuFeatures@plt>
   11296:	31 d2                	xor    %edx,%edx
   11298:	85 c0                	test   %eax,%eax
   1129a:	0f 95 c2             	setne  %dl
   1129d:	48 83 c4 08          	add    $0x8,%rsp
   112a1:	01 d2                	add    %edx,%edx
   112a3:	89 d0                	mov    %edx,%eax
   112a5:	c3                   	ret    
   112a6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   112ad:	00 00 00 
   112b0:	31 d2                	xor    %edx,%edx
   112b2:	89 d0                	mov    %edx,%eax
   112b4:	c3                   	ret    
   112b5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   112bc:	00 00 00 
   112bf:	90                   	nop

00000000000112c0 <sgx_create_report>:
   112c0:	f3 0f 1e fa          	endbr64 
   112c4:	55                   	push   %rbp
   112c5:	48 89 e5             	mov    %rsp,%rbp
   112c8:	41 57                	push   %r15
   112ca:	49 89 f7             	mov    %rsi,%r15
   112cd:	31 f6                	xor    %esi,%esi
   112cf:	41 56                	push   %r14
   112d1:	41 55                	push   %r13
   112d3:	49 89 fd             	mov    %rdi,%r13
   112d6:	41 54                	push   %r12
   112d8:	53                   	push   %rbx
   112d9:	48 89 d3             	mov    %rdx,%rbx
   112dc:	ba 40 00 00 00       	mov    $0x40,%edx
   112e1:	48 81 e4 00 fe ff ff 	and    $0xfffffffffffffe00,%rsp
   112e8:	48 81 ec 00 08 00 00 	sub    $0x800,%rsp
   112ef:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   112f6:	00 00 
   112f8:	48 89 84 24 f8 07 00 	mov    %rax,0x7f8(%rsp)
   112ff:	00 
   11300:	31 c0                	xor    %eax,%eax
   11302:	48 8d 84 24 80 01 00 	lea    0x180(%rsp),%rax
   11309:	00 
   1130a:	4c 8d b4 24 00 04 00 	lea    0x400(%rsp),%r14
   11311:	00 
   11312:	48 89 c7             	mov    %rax,%rdi
   11315:	48 89 84 24 78 01 00 	mov    %rax,0x178(%rsp)
   1131c:	00 
   1131d:	4c 8d a4 24 00 02 00 	lea    0x200(%rsp),%r12
   11324:	00 
   11325:	e8 d6 fb ff ff       	call   10f00 <__memset>
   1132a:	31 f6                	xor    %esi,%esi
   1132c:	ba 00 02 00 00       	mov    $0x200,%edx
   11331:	4c 89 f7             	mov    %r14,%rdi
   11334:	e8 c7 fb ff ff       	call   10f00 <__memset>
   11339:	31 f6                	xor    %esi,%esi
   1133b:	ba b0 01 00 00       	mov    $0x1b0,%edx
   11340:	4c 89 e7             	mov    %r12,%rdi
   11343:	e8 b8 fb ff ff       	call   10f00 <__memset>
   11348:	4d 85 ed             	test   %r13,%r13
   1134b:	74 23                	je     11370 <sgx_create_report+0xb0>
   1134d:	be 00 02 00 00       	mov    $0x200,%esi
   11352:	4c 89 ef             	mov    %r13,%rdi
   11355:	e8 06 48 ff ff       	call   5b60 <sgx_is_within_enclave>
   1135a:	85 c0                	test   %eax,%eax
   1135c:	0f 84 be 00 00 00    	je     11420 <sgx_create_report+0x160>
   11362:	b9 40 00 00 00       	mov    $0x40,%ecx
   11367:	4c 89 f7             	mov    %r14,%rdi
   1136a:	4c 89 ee             	mov    %r13,%rsi
   1136d:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
   11370:	4d 85 ff             	test   %r15,%r15
   11373:	74 4c                	je     113c1 <sgx_create_report+0x101>
   11375:	be 40 00 00 00       	mov    $0x40,%esi
   1137a:	4c 89 ff             	mov    %r15,%rdi
   1137d:	e8 de 47 ff ff       	call   5b60 <sgx_is_within_enclave>
   11382:	85 c0                	test   %eax,%eax
   11384:	0f 84 96 00 00 00    	je     11420 <sgx_create_report+0x160>
   1138a:	f3 41 0f 6f 0f       	movdqu (%r15),%xmm1
   1138f:	f3 41 0f 6f 57 10    	movdqu 0x10(%r15),%xmm2
   11395:	f3 41 0f 6f 5f 20    	movdqu 0x20(%r15),%xmm3
   1139b:	f3 41 0f 6f 67 30    	movdqu 0x30(%r15),%xmm4
   113a1:	0f 29 8c 24 80 01 00 	movaps %xmm1,0x180(%rsp)
   113a8:	00 
   113a9:	0f 29 94 24 90 01 00 	movaps %xmm2,0x190(%rsp)
   113b0:	00 
   113b1:	0f 29 9c 24 a0 01 00 	movaps %xmm3,0x1a0(%rsp)
   113b8:	00 
   113b9:	0f 29 a4 24 b0 01 00 	movaps %xmm4,0x1b0(%rsp)
   113c0:	00 
   113c1:	48 85 db             	test   %rbx,%rbx
   113c4:	74 5a                	je     11420 <sgx_create_report+0x160>
   113c6:	be b0 01 00 00       	mov    $0x1b0,%esi
   113cb:	48 89 df             	mov    %rbx,%rdi
   113ce:	e8 8d 47 ff ff       	call   5b60 <sgx_is_within_enclave>
   113d3:	85 c0                	test   %eax,%eax
   113d5:	74 49                	je     11420 <sgx_create_report+0x160>
   113d7:	48 8b b4 24 78 01 00 	mov    0x178(%rsp),%rsi
   113de:	00 
   113df:	4c 89 e2             	mov    %r12,%rdx
   113e2:	4c 89 f7             	mov    %r14,%rdi
   113e5:	e8 96 10 00 00       	call   12480 <do_ereport>
   113ea:	89 c2                	mov    %eax,%edx
   113ec:	b8 01 00 00 00       	mov    $0x1,%eax
   113f1:	85 d2                	test   %edx,%edx
   113f3:	75 30                	jne    11425 <sgx_create_report+0x165>
   113f5:	31 c0                	xor    %eax,%eax
   113f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   113fe:	00 00 
   11400:	66 41 0f 6f 04 04    	movdqa (%r12,%rax,1),%xmm0
   11406:	0f 11 04 03          	movups %xmm0,(%rbx,%rax,1)
   1140a:	48 83 c0 10          	add    $0x10,%rax
   1140e:	48 3d b0 01 00 00    	cmp    $0x1b0,%rax
   11414:	75 ea                	jne    11400 <sgx_create_report+0x140>
   11416:	31 c0                	xor    %eax,%eax
   11418:	eb 0b                	jmp    11425 <sgx_create_report+0x165>
   1141a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   11420:	b8 02 00 00 00       	mov    $0x2,%eax
   11425:	48 8b 94 24 f8 07 00 	mov    0x7f8(%rsp),%rdx
   1142c:	00 
   1142d:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   11434:	00 00 
   11436:	75 0f                	jne    11447 <sgx_create_report+0x187>
   11438:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
   1143c:	5b                   	pop    %rbx
   1143d:	41 5c                	pop    %r12
   1143f:	41 5d                	pop    %r13
   11441:	41 5e                	pop    %r14
   11443:	41 5f                	pop    %r15
   11445:	5d                   	pop    %rbp
   11446:	c3                   	ret    
   11447:	e8 a4 f5 ff ff       	call   109f0 <__stack_chk_fail>
   1144c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000011450 <sgx_self_report>:
   11450:	f3 0f 1e fa          	endbr64 
   11454:	55                   	push   %rbp
   11455:	53                   	push   %rbx
   11456:	48 8d 1d 03 9a 01 00 	lea    0x19a03(%rip),%rbx        # 2ae60 <_ZZ15sgx_self_reportE7_report>
   1145d:	48 83 ec 08          	sub    $0x8,%rsp
   11461:	48 83 3d 27 9a 01 00 	cmpq   $0x0,0x19a27(%rip)        # 2ae90 <_ZZ15sgx_self_reportE7_report+0x30>
   11468:	00 
   11469:	74 0d                	je     11478 <sgx_self_report+0x28>
   1146b:	48 83 c4 08          	add    $0x8,%rsp
   1146f:	48 89 d8             	mov    %rbx,%rax
   11472:	5b                   	pop    %rbx
   11473:	5d                   	pop    %rbp
   11474:	c3                   	ret    
   11475:	0f 1f 00             	nopl   (%rax)
   11478:	48 8d 2d c1 99 01 00 	lea    0x199c1(%rip),%rbp        # 2ae40 <_ZZ15sgx_self_reportE11report_lock>
   1147f:	48 89 ef             	mov    %rbp,%rdi
   11482:	e8 e9 b2 ff ff       	call   c770 <sgx_spin_lock>
   11487:	48 83 3d 01 9a 01 00 	cmpq   $0x0,0x19a01(%rip)        # 2ae90 <_ZZ15sgx_self_reportE7_report+0x30>
   1148e:	00 
   1148f:	74 17                	je     114a8 <sgx_self_report+0x58>
   11491:	48 89 ef             	mov    %rbp,%rdi
   11494:	e8 67 b3 ff ff       	call   c800 <sgx_spin_unlock>
   11499:	48 83 c4 08          	add    $0x8,%rsp
   1149d:	48 89 d8             	mov    %rbx,%rax
   114a0:	5b                   	pop    %rbx
   114a1:	5d                   	pop    %rbp
   114a2:	c3                   	ret    
   114a3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   114a8:	48 89 da             	mov    %rbx,%rdx
   114ab:	31 f6                	xor    %esi,%esi
   114ad:	31 ff                	xor    %edi,%edi
   114af:	e8 0c fe ff ff       	call   112c0 <sgx_create_report>
   114b4:	eb db                	jmp    11491 <sgx_self_report+0x41>

Disassembly of section .nipx:

0000000000011600 <init_enclave>:
   11600:	f3 0f 1e fa          	endbr64 
   11604:	41 54                	push   %r12
   11606:	55                   	push   %rbp
   11607:	53                   	push   %rbx
   11608:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
   1160f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   11616:	00 00 
   11618:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
   1161f:	00 
   11620:	31 c0                	xor    %eax,%eax
   11622:	48 85 ff             	test   %rdi,%rdi
   11625:	0f 84 f5 02 00 00    	je     11920 <init_enclave+0x320>
   1162b:	48 89 f3             	mov    %rsi,%rbx
   1162e:	48 85 f6             	test   %rsi,%rsi
   11631:	0f 84 e9 02 00 00    	je     11920 <init_enclave+0x320>
   11637:	48 83 3d 81 69 00 00 	cmpq   $0x0,0x6981(%rip)        # 17fc0 <_Z9pcl_entryPvS_>
   1163e:	00 
   1163f:	48 89 fd             	mov    %rdi,%rbp
   11642:	74 10                	je     11654 <init_enclave+0x54>
   11644:	0f ae e8             	lfence 
   11647:	e8 c4 f9 fe ff       	call   1010 <_Z9pcl_entryPvS_@plt>
   1164c:	85 c0                	test   %eax,%eax
   1164e:	0f 85 cc 02 00 00    	jne    11920 <init_enclave+0x320>
   11654:	48 89 ef             	mov    %rbp,%rdi
   11657:	e8 74 6d ff ff       	call   83d0 <relocate_enclave>
   1165c:	89 c5                	mov    %eax,%ebp
   1165e:	85 c0                	test   %eax,%eax
   11660:	0f 85 ba 02 00 00    	jne    11920 <init_enclave+0x320>
   11666:	e8 8d 0a 00 00       	call   120f8 <get_enclave_base>
   1166b:	48 8d 15 8e 1b 00 00 	lea    0x1b8e(%rip),%rdx        # 13200 <g_global_data>
   11672:	48 89 05 97 67 00 00 	mov    %rax,0x6797(%rip)        # 17e10 <g_enclave_base>
   11679:	48 8b 8a d0 06 00 00 	mov    0x6d0(%rdx),%rcx
   11680:	48 89 0d 81 67 00 00 	mov    %rcx,0x6781(%rip)        # 17e08 <g_enclave_size>
   11687:	48 8b 8a c0 06 00 00 	mov    0x6c0(%rdx),%rcx
   1168e:	48 85 c9             	test   %rcx,%rcx
   11691:	74 1e                	je     116b1 <init_enclave+0xb1>
   11693:	48 8b 8a c0 06 00 00 	mov    0x6c0(%rdx),%rcx
   1169a:	48 39 c8             	cmp    %rcx,%rax
   1169d:	0f 85 84 02 00 00    	jne    11927 <init_enclave+0x327>
   116a3:	48 8b 82 c8 06 00 00 	mov    0x6c8(%rdx),%rax
   116aa:	48 89 05 5f 67 00 00 	mov    %rax,0x675f(%rip)        # 17e10 <g_enclave_base>
   116b1:	be b0 00 00 00       	mov    $0xb0,%esi
   116b6:	48 89 df             	mov    %rbx,%rdi
   116b9:	e8 02 45 ff ff       	call   5bc0 <sgx_is_outside_enclave>
   116be:	85 c0                	test   %eax,%eax
   116c0:	0f 84 5a 02 00 00    	je     11920 <init_enclave+0x320>
   116c6:	0f ae e8             	lfence 
   116c9:	f3 0f 6f 03          	movdqu (%rbx),%xmm0
   116cd:	f3 0f 6f 4b 10       	movdqu 0x10(%rbx),%xmm1
   116d2:	f3 0f 6f 53 20       	movdqu 0x20(%rbx),%xmm2
   116d7:	f3 0f 6f 5b 30       	movdqu 0x30(%rbx),%xmm3
   116dc:	f3 0f 6f 63 40       	movdqu 0x40(%rbx),%xmm4
   116e1:	0f 29 04 24          	movaps %xmm0,(%rsp)
   116e5:	f3 0f 6f 6b 50       	movdqu 0x50(%rbx),%xmm5
   116ea:	f3 0f 6f 73 60       	movdqu 0x60(%rbx),%xmm6
   116ef:	0f 29 4c 24 10       	movaps %xmm1,0x10(%rsp)
   116f4:	f3 0f 6f 7b 70       	movdqu 0x70(%rbx),%xmm7
   116f9:	f3 0f 6f 83 80 00 00 	movdqu 0x80(%rbx),%xmm0
   11700:	00 
   11701:	0f 29 54 24 20       	movaps %xmm2,0x20(%rsp)
   11706:	f3 0f 6f 8b 90 00 00 	movdqu 0x90(%rbx),%xmm1
   1170d:	00 
   1170e:	f3 0f 6f 93 a0 00 00 	movdqu 0xa0(%rbx),%xmm2
   11715:	00 
   11716:	0f 29 5c 24 30       	movaps %xmm3,0x30(%rsp)
   1171b:	0f 29 64 24 40       	movaps %xmm4,0x40(%rsp)
   11720:	0f 29 6c 24 50       	movaps %xmm5,0x50(%rsp)
   11725:	0f 29 74 24 60       	movaps %xmm6,0x60(%rsp)
   1172a:	0f 29 7c 24 70       	movaps %xmm7,0x70(%rsp)
   1172f:	0f 29 84 24 80 00 00 	movaps %xmm0,0x80(%rsp)
   11736:	00 
   11737:	0f 29 8c 24 90 00 00 	movaps %xmm1,0x90(%rsp)
   1173e:	00 
   1173f:	0f 29 94 24 a0 00 00 	movaps %xmm2,0xa0(%rsp)
   11746:	00 
   11747:	f6 44 24 13 40       	testb  $0x40,0x13(%rsp)
   1174c:	0f 85 8e 01 00 00    	jne    118e0 <init_enclave+0x2e0>
   11752:	b9 14 00 00 00       	mov    $0x14,%ecx
   11757:	b8 9c 00 00 00       	mov    $0x9c,%eax
   1175c:	48 8d 14 04          	lea    (%rsp,%rax,1),%rdx
   11760:	48 8d 41 ff          	lea    -0x1(%rcx),%rax
   11764:	83 e0 01             	and    $0x1,%eax
   11767:	c6 02 00             	movb   $0x0,(%rdx)
   1176a:	48 89 c6             	mov    %rax,%rsi
   1176d:	b8 01 00 00 00       	mov    $0x1,%eax
   11772:	48 39 c8             	cmp    %rcx,%rax
   11775:	73 2b                	jae    117a2 <init_enclave+0x1a2>
   11777:	48 85 f6             	test   %rsi,%rsi
   1177a:	74 14                	je     11790 <init_enclave+0x190>
   1177c:	b8 02 00 00 00       	mov    $0x2,%eax
   11781:	c6 42 01 00          	movb   $0x0,0x1(%rdx)
   11785:	48 39 c8             	cmp    %rcx,%rax
   11788:	73 18                	jae    117a2 <init_enclave+0x1a2>
   1178a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   11790:	c6 04 02 00          	movb   $0x0,(%rdx,%rax,1)
   11794:	48 83 c0 02          	add    $0x2,%rax
   11798:	c6 44 10 ff 00       	movb   $0x0,-0x1(%rax,%rdx,1)
   1179d:	48 39 c8             	cmp    %rcx,%rax
   117a0:	72 ee                	jb     11790 <init_enclave+0x190>
   117a2:	8b 84 24 ac 00 00 00 	mov    0xac(%rsp),%eax
   117a9:	48 8d 5c 24 0c       	lea    0xc(%rsp),%rbx
   117ae:	89 05 4c 66 00 00    	mov    %eax,0x664c(%rip)        # 17e00 <g_cpu_core_num>
   117b4:	8b 44 24 08          	mov    0x8(%rsp),%eax
   117b8:	89 05 5a 66 00 00    	mov    %eax,0x665a(%rip)        # 17e18 <g_sdk_version>
   117be:	85 c0                	test   %eax,%eax
   117c0:	74 1a                	je     117dc <init_enclave+0x1dc>
   117c2:	83 f8 04             	cmp    $0x4,%eax
   117c5:	0f 8e 55 01 00 00    	jle    11920 <init_enclave+0x320>
   117cb:	48 8d 5c 24 0c       	lea    0xc(%rsp),%rbx
   117d0:	31 f6                	xor    %esi,%esi
   117d2:	48 89 df             	mov    %rbx,%rdi
   117d5:	e8 26 5e ff ff       	call   7600 <feature_supported>
   117da:	89 c5                	mov    %eax,%ebp
   117dc:	48 89 df             	mov    %rbx,%rdi
   117df:	be 01 00 00 00       	mov    $0x1,%esi
   117e4:	89 2d 32 66 00 00    	mov    %ebp,0x6632(%rip)        # 17e1c <EDMM_supported>
   117ea:	e8 11 5e ff ff       	call   7600 <feature_supported>
   117ef:	44 8b 25 26 66 00 00 	mov    0x6626(%rip),%r12d        # 17e1c <EDMM_supported>
   117f6:	89 05 08 66 00 00    	mov    %eax,0x6608(%rip)        # 17e04 <g_aexnotify_supported>
   117fc:	e8 0f 5c ff ff       	call   7410 <get_heap_min_size>
   11801:	48 89 c5             	mov    %rax,%rbp
   11804:	e8 97 5b ff ff       	call   73a0 <get_heap_size>
   11809:	48 89 c3             	mov    %rax,%rbx
   1180c:	e8 6f 5b ff ff       	call   7380 <get_heap_base>
   11811:	44 89 e1             	mov    %r12d,%ecx
   11814:	48 89 ea             	mov    %rbp,%rdx
   11817:	48 89 de             	mov    %rbx,%rsi
   1181a:	48 89 c7             	mov    %rax,%rdi
   1181d:	e8 be ad ff ff       	call   c5e0 <heap_init>
   11822:	85 c0                	test   %eax,%eax
   11824:	0f 85 f6 00 00 00    	jne    11920 <init_enclave+0x320>
   1182a:	e8 21 69 ff ff       	call   8150 <get_xfeature_state>
   1182f:	48 8b 3c 24          	mov    (%rsp),%rdi
   11833:	48 89 c2             	mov    %rax,%rdx
   11836:	48 81 e7 ff e7 ff e1 	and    $0xffffffffe1ffe7ff,%rdi
   1183d:	f6 44 24 13 40       	testb  $0x40,0x13(%rsp)
   11842:	74 08                	je     1184c <init_enclave+0x24c>
   11844:	48 8b bc 24 a4 00 00 	mov    0xa4(%rsp),%rdi
   1184b:	00 
   1184c:	83 3d c5 65 00 00 01 	cmpl   $0x1,0x65c5(%rip)        # 17e18 <g_sdk_version>
   11853:	7f 0f                	jg     11864 <init_enclave+0x264>
   11855:	48 83 bc 24 9c 00 00 	cmpq   $0x0,0x9c(%rsp)
   1185c:	00 00 
   1185e:	0f 84 a4 00 00 00    	je     11908 <init_enclave+0x308>
   11864:	48 8d 74 24 14       	lea    0x14(%rsp),%rsi
   11869:	e8 d2 41 ff ff       	call   5a40 <init_optimized_libs>
   1186e:	85 c0                	test   %eax,%eax
   11870:	0f 85 aa 00 00 00    	jne    11920 <init_enclave+0x320>
   11876:	e8 95 5c ff ff       	call   7510 <get_rsrv_size>
   1187b:	48 85 c0             	test   %rax,%rax
   1187e:	74 27                	je     118a7 <init_enclave+0x2a7>
   11880:	e8 fb 5c ff ff       	call   7580 <get_rsrv_min_size>
   11885:	48 89 c5             	mov    %rax,%rbp
   11888:	e8 83 5c ff ff       	call   7510 <get_rsrv_size>
   1188d:	48 89 c3             	mov    %rax,%rbx
   11890:	e8 db 5b ff ff       	call   7470 <get_rsrv_base>
   11895:	48 89 ea             	mov    %rbp,%rdx
   11898:	48 89 de             	mov    %rbx,%rsi
   1189b:	48 89 c7             	mov    %rax,%rdi
   1189e:	e8 bd f5 ff ff       	call   10e60 <rsrv_mem_init>
   118a3:	85 c0                	test   %eax,%eax
   118a5:	75 79                	jne    11920 <init_enclave+0x320>
   118a7:	be 08 00 00 00       	mov    $0x8,%esi
   118ac:	48 8d 3d 45 65 00 00 	lea    0x6545(%rip),%rdi        # 17df8 <__intel_security_cookie>
   118b3:	e8 a8 44 ff ff       	call   5d60 <sgx_read_rand>
   118b8:	f7 d8                	neg    %eax
   118ba:	19 c0                	sbb    %eax,%eax
   118bc:	48 8b 94 24 b8 00 00 	mov    0xb8(%rsp),%rdx
   118c3:	00 
   118c4:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   118cb:	00 00 
   118cd:	75 5d                	jne    1192c <init_enclave+0x32c>
   118cf:	48 81 c4 c0 00 00 00 	add    $0xc0,%rsp
   118d6:	5b                   	pop    %rbx
   118d7:	5d                   	pop    %rbp
   118d8:	41 5c                	pop    %r12
   118da:	c3                   	ret    
   118db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   118e0:	48 8b 84 24 9c 00 00 	mov    0x9c(%rsp),%rax
   118e7:	00 
   118e8:	b9 b0 00 00 00       	mov    $0xb0,%ecx
   118ed:	48 29 c1             	sub    %rax,%rcx
   118f0:	48 3d af 00 00 00    	cmp    $0xaf,%rax
   118f6:	0f 86 60 fe ff ff    	jbe    1175c <init_enclave+0x15c>
   118fc:	e9 a1 fe ff ff       	jmp    117a2 <init_enclave+0x1a2>
   11901:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   11908:	31 f6                	xor    %esi,%esi
   1190a:	e8 31 41 ff ff       	call   5a40 <init_optimized_libs>
   1190f:	85 c0                	test   %eax,%eax
   11911:	0f 84 5f ff ff ff    	je     11876 <init_enclave+0x276>
   11917:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1191e:	00 00 
   11920:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   11925:	eb 95                	jmp    118bc <init_enclave+0x2bc>
   11927:	e8 0b 0c 00 00       	call   12537 <abort>
   1192c:	e8 bf f0 ff ff       	call   109f0 <__stack_chk_fail>
   11931:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   11938:	00 00 00 00 
   1193c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000011940 <do_init_enclave>:
   11940:	f3 0f 1e fa          	endbr64 
   11944:	41 54                	push   %r12
   11946:	49 89 f4             	mov    %rsi,%r12
   11949:	55                   	push   %rbp
   1194a:	48 89 fd             	mov    %rdi,%rbp
   1194d:	53                   	push   %rbx
   1194e:	e8 a5 07 00 00       	call   120f8 <get_enclave_base>
   11953:	48 89 c3             	mov    %rax,%rbx
   11956:	e8 c8 07 00 00       	call   12123 <lock_enclave>
   1195b:	85 c0                	test   %eax,%eax
   1195d:	74 11                	je     11970 <do_init_enclave+0x30>
   1195f:	bd 01 00 00 00       	mov    $0x1,%ebp
   11964:	89 e8                	mov    %ebp,%eax
   11966:	5b                   	pop    %rbx
   11967:	5d                   	pop    %rbp
   11968:	41 5c                	pop    %r12
   1196a:	c3                   	ret    
   1196b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   11970:	48 89 ee             	mov    %rbp,%rsi
   11973:	48 89 df             	mov    %rbx,%rdi
   11976:	e8 85 fc ff ff       	call   11600 <init_enclave>
   1197b:	85 c0                	test   %eax,%eax
   1197d:	75 e0                	jne    1195f <do_init_enclave+0x1f>
   1197f:	be 01 00 00 00       	mov    $0x1,%esi
   11984:	4c 89 e7             	mov    %r12,%rdi
   11987:	e8 04 52 ff ff       	call   6b90 <do_init_thread>
   1198c:	89 c5                	mov    %eax,%ebp
   1198e:	85 c0                	test   %eax,%eax
   11990:	75 cd                	jne    1195f <do_init_enclave+0x1f>
   11992:	8b 15 84 64 00 00    	mov    0x6484(%rip),%edx        # 17e1c <EDMM_supported>
   11998:	85 d2                	test   %edx,%edx
   1199a:	0f 84 f0 00 00 00    	je     11a90 <do_init_enclave+0x150>
   119a0:	e8 6b 5a ff ff       	call   7410 <get_heap_min_size>
   119a5:	4c 8d 25 54 18 00 00 	lea    0x1854(%rip),%r12        # 13200 <g_global_data>
   119ac:	31 d2                	xor    %edx,%edx
   119ae:	48 89 c6             	mov    %rax,%rsi
   119b1:	48 89 c1             	mov    %rax,%rcx
   119b4:	49 8b 7c 24 10       	mov    0x10(%r12),%rdi
   119b9:	48 01 df             	add    %rbx,%rdi
   119bc:	e8 5f ef ff ff       	call   10920 <memset_s>
   119c1:	48 8d 05 88 64 00 00 	lea    0x6488(%rip),%rax        # 17e50 <rsrv_mem_min_size>
   119c8:	49 8b 7c 24 20       	mov    0x20(%r12),%rdi
   119cd:	31 d2                	xor    %edx,%edx
   119cf:	48 8b 30             	mov    (%rax),%rsi
   119d2:	48 01 df             	add    %rbx,%rdi
   119d5:	48 89 f1             	mov    %rsi,%rcx
   119d8:	e8 43 ef ff ff       	call   10920 <memset_s>
   119dd:	bf 02 00 00 00       	mov    $0x2,%edi
   119e2:	e8 2e 07 00 00       	call   12115 <set_enclave_state>
   119e7:	8b 05 2f 64 00 00    	mov    0x642f(%rip),%eax        # 17e1c <EDMM_supported>
   119ed:	85 c0                	test   %eax,%eax
   119ef:	0f 84 6f ff ff ff    	je     11964 <do_init_enclave+0x24>
   119f5:	41 8b 84 24 58 01 00 	mov    0x158(%r12),%eax
   119fc:	00 
   119fd:	49 8d ac 24 60 01 00 	lea    0x160(%r12),%rbp
   11a04:	00 
   11a05:	48 c1 e0 05          	shl    $0x5,%rax
   11a09:	48 01 e8             	add    %rbp,%rax
   11a0c:	48 39 c5             	cmp    %rax,%rbp
   11a0f:	72 10                	jb     11a21 <do_init_enclave+0xe1>
   11a11:	eb 15                	jmp    11a28 <do_init_enclave+0xe8>
   11a13:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   11a18:	48 83 c5 20          	add    $0x20,%rbp
   11a1c:	48 39 c5             	cmp    %rax,%rbp
   11a1f:	73 07                	jae    11a28 <do_init_enclave+0xe8>
   11a21:	66 83 7d 00 17       	cmpw   $0x17,0x0(%rbp)
   11a26:	75 f0                	jne    11a18 <do_init_enclave+0xd8>
   11a28:	48 39 e8             	cmp    %rbp,%rax
   11a2b:	0f 84 9f 00 00 00    	je     11ad0 <do_init_enclave+0x190>
   11a31:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
   11a35:	8b 75 04             	mov    0x4(%rbp),%esi
   11a38:	48 01 df             	add    %rbx,%rdi
   11a3b:	48 c1 e6 0c          	shl    $0xc,%rsi
   11a3f:	48 01 fe             	add    %rdi,%rsi
   11a42:	0f 82 17 ff ff ff    	jb     1195f <do_init_enclave+0x1f>
   11a48:	e8 13 ab ff ff       	call   c560 <sgx_mm_init>
   11a4d:	85 c0                	test   %eax,%eax
   11a4f:	0f 85 0a ff ff ff    	jne    1195f <do_init_enclave+0x1f>
   11a55:	49 8b bc 24 d8 06 00 	mov    0x6d8(%r12),%rdi
   11a5c:	00 
   11a5d:	e8 7e 99 ff ff       	call   b3e0 <emalloc_init_with_reserved_mem>
   11a62:	85 c0                	test   %eax,%eax
   11a64:	0f 85 f5 fe ff ff    	jne    1195f <do_init_enclave+0x1f>
   11a6a:	48 89 ea             	mov    %rbp,%rdx
   11a6d:	49 8d b4 24 60 01 00 	lea    0x160(%r12),%rsi
   11a74:	00 
   11a75:	48 89 df             	mov    %rbx,%rdi
   11a78:	31 ed                	xor    %ebp,%ebp
   11a7a:	e8 41 3d ff ff       	call   57c0 <init_rts_emas>
   11a7f:	85 c0                	test   %eax,%eax
   11a81:	40 0f 95 c5          	setne  %bpl
   11a85:	e9 da fe ff ff       	jmp    11964 <do_init_enclave+0x24>
   11a8a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   11a90:	4c 8d 25 69 17 00 00 	lea    0x1769(%rip),%r12        # 13200 <g_global_data>
   11a97:	31 d2                	xor    %edx,%edx
   11a99:	49 8b 4c 24 18       	mov    0x18(%r12),%rcx
   11a9e:	49 8b 74 24 18       	mov    0x18(%r12),%rsi
   11aa3:	49 8b 7c 24 10       	mov    0x10(%r12),%rdi
   11aa8:	48 01 df             	add    %rbx,%rdi
   11aab:	e8 70 ee ff ff       	call   10920 <memset_s>
   11ab0:	49 8b 4c 24 28       	mov    0x28(%r12),%rcx
   11ab5:	49 8b 74 24 28       	mov    0x28(%r12),%rsi
   11aba:	31 d2                	xor    %edx,%edx
   11abc:	49 8b 7c 24 20       	mov    0x20(%r12),%rdi
   11ac1:	48 01 df             	add    %rbx,%rdi
   11ac4:	e8 57 ee ff ff       	call   10920 <memset_s>
   11ac9:	e9 0f ff ff ff       	jmp    119dd <do_init_enclave+0x9d>
   11ace:	66 90                	xchg   %ax,%ax
   11ad0:	31 f6                	xor    %esi,%esi
   11ad2:	31 ff                	xor    %edi,%edi
   11ad4:	e9 6f ff ff ff       	jmp    11a48 <do_init_enclave+0x108>
   11ad9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000011ae0 <sgx_is_enclave_crashed>:
   11ae0:	f3 0f 1e fa          	endbr64 
   11ae4:	48 83 ec 08          	sub    $0x8,%rsp
   11ae8:	e8 17 06 00 00       	call   12104 <get_enclave_state>
   11aed:	83 f8 03             	cmp    $0x3,%eax
   11af0:	0f 94 c0             	sete   %al
   11af3:	48 83 c4 08          	add    $0x8,%rsp
   11af7:	0f b6 c0             	movzbl %al,%eax
   11afa:	c3                   	ret    
   11afb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000011b00 <enter_enclave>:
   11b00:	f3 0f 1e fa          	endbr64 
   11b04:	41 55                	push   %r13
   11b06:	49 89 d5             	mov    %rdx,%r13
   11b09:	41 54                	push   %r12
   11b0b:	49 89 f4             	mov    %rsi,%r12
   11b0e:	55                   	push   %rbp
   11b0f:	89 cd                	mov    %ecx,%ebp
   11b11:	53                   	push   %rbx
   11b12:	89 fb                	mov    %edi,%ebx
   11b14:	48 83 ec 18          	sub    $0x18,%rsp
   11b18:	e8 c3 ff ff ff       	call   11ae0 <sgx_is_enclave_crashed>
   11b1d:	85 c0                	test   %eax,%eax
   11b1f:	75 67                	jne    11b88 <enter_enclave+0x88>
   11b21:	83 fb ff             	cmp    $0xffffffff,%ebx
   11b24:	75 2a                	jne    11b50 <enter_enclave+0x50>
   11b26:	85 ed                	test   %ebp,%ebp
   11b28:	75 34                	jne    11b5e <enter_enclave+0x5e>
   11b2a:	4c 89 ee             	mov    %r13,%rsi
   11b2d:	4c 89 e7             	mov    %r12,%rdi
   11b30:	e8 0b fe ff ff       	call   11940 <do_init_enclave>
   11b35:	89 c3                	mov    %eax,%ebx
   11b37:	89 d8                	mov    %ebx,%eax
   11b39:	83 fb 01             	cmp    $0x1,%ebx
   11b3c:	74 29                	je     11b67 <enter_enclave+0x67>
   11b3e:	48 83 c4 18          	add    $0x18,%rsp
   11b42:	5b                   	pop    %rbx
   11b43:	5d                   	pop    %rbp
   11b44:	41 5c                	pop    %r12
   11b46:	41 5d                	pop    %r13
   11b48:	c3                   	ret    
   11b49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   11b50:	e8 af 05 00 00       	call   12104 <get_enclave_state>
   11b55:	83 f8 02             	cmp    $0x2,%eax
   11b58:	75 0d                	jne    11b67 <enter_enclave+0x67>
   11b5a:	85 ed                	test   %ebp,%ebp
   11b5c:	74 42                	je     11ba0 <enter_enclave+0xa0>
   11b5e:	83 fd 01             	cmp    $0x1,%ebp
   11b61:	0f 84 e9 00 00 00    	je     11c50 <enter_enclave+0x150>
   11b67:	bf 03 00 00 00       	mov    $0x3,%edi
   11b6c:	e8 a4 05 00 00       	call   12115 <set_enclave_state>
   11b71:	b8 01 00 00 00       	mov    $0x1,%eax
   11b76:	48 83 c4 18          	add    $0x18,%rsp
   11b7a:	5b                   	pop    %rbx
   11b7b:	5d                   	pop    %rbp
   11b7c:	41 5c                	pop    %r12
   11b7e:	41 5d                	pop    %r13
   11b80:	c3                   	ret    
   11b81:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   11b88:	48 83 c4 18          	add    $0x18,%rsp
   11b8c:	b8 06 10 00 00       	mov    $0x1006,%eax
   11b91:	5b                   	pop    %rbx
   11b92:	5d                   	pop    %rbp
   11b93:	41 5c                	pop    %r12
   11b95:	41 5d                	pop    %r13
   11b97:	c3                   	ret    
   11b98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   11b9f:	00 
   11ba0:	85 db                	test   %ebx,%ebx
   11ba2:	79 2c                	jns    11bd0 <enter_enclave+0xd0>
   11ba4:	83 fb fa             	cmp    $0xfffffffa,%ebx
   11ba7:	74 27                	je     11bd0 <enter_enclave+0xd0>
   11ba9:	83 fb fe             	cmp    $0xfffffffe,%ebx
   11bac:	0f 84 ce 00 00 00    	je     11c80 <enter_enclave+0x180>
   11bb2:	83 fb fc             	cmp    $0xfffffffc,%ebx
   11bb5:	0f 84 d5 00 00 00    	je     11c90 <enter_enclave+0x190>
   11bbb:	83 fb fb             	cmp    $0xfffffffb,%ebx
   11bbe:	75 a7                	jne    11b67 <enter_enclave+0x67>
   11bc0:	4c 89 ef             	mov    %r13,%rdi
   11bc3:	e8 68 55 ff ff       	call   7130 <do_uninit_enclave>
   11bc8:	89 c3                	mov    %eax,%ebx
   11bca:	e9 68 ff ff ff       	jmp    11b37 <enter_enclave+0x37>
   11bcf:	90                   	nop
   11bd0:	e8 6e 05 00 00       	call   12143 <get_thread_data>
   11bd5:	48 85 c0             	test   %rax,%rax
   11bd8:	0f 84 c2 00 00 00    	je     11ca0 <enter_enclave+0x1a0>
   11bde:	48 8b 48 08          	mov    0x8(%rax),%rcx
   11be2:	48 39 48 10          	cmp    %rcx,0x10(%rax)
   11be6:	75 40                	jne    11c28 <enter_enclave+0x128>
   11be8:	48 8d 05 11 16 00 00 	lea    0x1611(%rip),%rax        # 13200 <g_global_data>
   11bef:	48 8b 50 38          	mov    0x38(%rax),%rdx
   11bf3:	48 85 d2             	test   %rdx,%rdx
   11bf6:	74 30                	je     11c28 <enter_enclave+0x128>
   11bf8:	48 8b 68 50          	mov    0x50(%rax),%rbp
   11bfc:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   11c01:	be 08 00 00 00       	mov    $0x8,%esi
   11c06:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
   11c0d:	00 00 
   11c0f:	4c 01 ed             	add    %r13,%rbp
   11c12:	e8 49 41 ff ff       	call   5d60 <sgx_read_rand>
   11c17:	85 c0                	test   %eax,%eax
   11c19:	0f 85 8d 00 00 00    	jne    11cac <enter_enclave+0x1ac>
   11c1f:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   11c24:	48 89 45 28          	mov    %rax,0x28(%rbp)
   11c28:	89 df                	mov    %ebx,%edi
   11c2a:	4c 89 ea             	mov    %r13,%rdx
   11c2d:	4c 89 e6             	mov    %r12,%rsi
   11c30:	e8 bb 51 ff ff       	call   6df0 <do_ecall>
   11c35:	89 c3                	mov    %eax,%ebx
   11c37:	89 d8                	mov    %ebx,%eax
   11c39:	83 fb 01             	cmp    $0x1,%ebx
   11c3c:	0f 85 fc fe ff ff    	jne    11b3e <enter_enclave+0x3e>
   11c42:	e9 20 ff ff ff       	jmp    11b67 <enter_enclave+0x67>
   11c47:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   11c4e:	00 00 
   11c50:	4c 89 ef             	mov    %r13,%rdi
   11c53:	e8 48 61 ff ff       	call   7da0 <trts_handle_exception>
   11c58:	4c 89 ef             	mov    %r13,%rdi
   11c5b:	89 c3                	mov    %eax,%ebx
   11c5d:	e8 2e 42 ff ff       	call   5e90 <check_static_stack_canary>
   11c62:	89 c2                	mov    %eax,%edx
   11c64:	b8 09 10 00 00       	mov    $0x1009,%eax
   11c69:	85 d2                	test   %edx,%edx
   11c6b:	0f 85 05 ff ff ff    	jne    11b76 <enter_enclave+0x76>
   11c71:	e9 c1 fe ff ff       	jmp    11b37 <enter_enclave+0x37>
   11c76:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11c7d:	00 00 00 
   11c80:	4c 89 e7             	mov    %r12,%rdi
   11c83:	e8 f8 55 ff ff       	call   7280 <do_oret>
   11c88:	89 c3                	mov    %eax,%ebx
   11c8a:	e9 a8 fe ff ff       	jmp    11b37 <enter_enclave+0x37>
   11c8f:	90                   	nop
   11c90:	4c 89 e7             	mov    %r12,%rdi
   11c93:	e8 b8 53 ff ff       	call   7050 <do_ecall_add_thread>
   11c98:	89 c3                	mov    %eax,%ebx
   11c9a:	e9 98 fe ff ff       	jmp    11b37 <enter_enclave+0x37>
   11c9f:	90                   	nop
   11ca0:	48 8d 05 59 15 00 00 	lea    0x1559(%rip),%rax        # 13200 <g_global_data>
   11ca7:	e9 4c ff ff ff       	jmp    11bf8 <enter_enclave+0xf8>
   11cac:	e8 86 08 00 00       	call   12537 <abort>

0000000000011cb1 <restore_xregs>:
   11cb1:	f3 0f 1e fa          	endbr64 
   11cb5:	48 89 f9             	mov    %rdi,%rcx
   11cb8:	48 8d 05 85 84 00 00 	lea    0x8485(%rip),%rax        # 1a144 <g_xsave_enabled>
   11cbf:	8b 00                	mov    (%rax),%eax
   11cc1:	83 f8 00             	cmp    $0x0,%eax
   11cc4:	74 16                	je     11cdc <restore_xregs+0x2b>
   11cc6:	48 31 c0             	xor    %rax,%rax
   11cc9:	48 31 d2             	xor    %rdx,%rdx
   11ccc:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   11cd1:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   11cd6:	48 0f ae 29          	xrstor64 (%rcx)
   11cda:	eb 04                	jmp    11ce0 <restore_xregs+0x2f>
   11cdc:	48 0f ae 09          	fxrstor64 (%rcx)
   11ce0:	c3                   	ret    

0000000000011ce1 <save_xregs>:
   11ce1:	f3 0f 1e fa          	endbr64 
   11ce5:	48 89 f9             	mov    %rdi,%rcx
   11ce8:	48 8d 05 55 84 00 00 	lea    0x8455(%rip),%rax        # 1a144 <g_xsave_enabled>
   11cef:	9b                   	fwait
   11cf0:	8b 00                	mov    (%rax),%eax
   11cf2:	83 f8 00             	cmp    $0x0,%eax
   11cf5:	74 16                	je     11d0d <save_xregs+0x2c>
   11cf7:	48 31 c0             	xor    %rax,%rax
   11cfa:	48 31 d2             	xor    %rdx,%rdx
   11cfd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   11d02:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   11d07:	48 0f c7 21          	xsavec64 (%rcx)
   11d0b:	eb 04                	jmp    11d11 <save_xregs+0x30>
   11d0d:	48 0f ae 01          	fxsave64 (%rcx)
   11d11:	c3                   	ret    

0000000000011d12 <__x86_return_thunk>:
   11d12:	c3                   	ret    

0000000000011d13 <__x86_indirect_thunk_rax>:
   11d13:	ff e0                	jmp    *%rax

0000000000011d15 <__x86_indirect_thunk_rbx>:
   11d15:	ff e3                	jmp    *%rbx

0000000000011d17 <__x86_indirect_thunk_rcx>:
   11d17:	ff e1                	jmp    *%rcx

0000000000011d19 <__x86_indirect_thunk_rdx>:
   11d19:	ff e2                	jmp    *%rdx

0000000000011d1b <__x86_indirect_thunk_rbp>:
   11d1b:	ff e5                	jmp    *%rbp

0000000000011d1d <__x86_indirect_thunk_rsi>:
   11d1d:	ff e6                	jmp    *%rsi

0000000000011d1f <__x86_indirect_thunk_rdi>:
   11d1f:	ff e7                	jmp    *%rdi

0000000000011d21 <__x86_indirect_thunk_r8>:
   11d21:	41 ff e0             	jmp    *%r8

0000000000011d24 <__x86_indirect_thunk_r9>:
   11d24:	41 ff e1             	jmp    *%r9

0000000000011d27 <__x86_indirect_thunk_r10>:
   11d27:	41 ff e2             	jmp    *%r10

0000000000011d2a <__x86_indirect_thunk_r11>:
   11d2a:	41 ff e3             	jmp    *%r11

0000000000011d2d <__x86_indirect_thunk_r12>:
   11d2d:	41 ff e4             	jmp    *%r12

0000000000011d30 <__x86_indirect_thunk_r13>:
   11d30:	41 ff e5             	jmp    *%r13

0000000000011d33 <__x86_indirect_thunk_r14>:
   11d33:	41 ff e6             	jmp    *%r14

0000000000011d36 <__x86_indirect_thunk_r15>:
   11d36:	41 ff e7             	jmp    *%r15
   11d39:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11d40:	00 00 00 
   11d43:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11d4a:	00 00 00 
   11d4d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11d54:	00 00 00 
   11d57:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11d5e:	00 00 00 
   11d61:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11d68:	00 00 00 
   11d6b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11d72:	00 00 00 
   11d75:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11d7c:	00 00 00 
   11d7f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11d86:	00 00 00 
   11d89:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11d90:	00 00 00 
   11d93:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11d9a:	00 00 00 
   11d9d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11da4:	00 00 00 
   11da7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11dae:	00 00 00 
   11db1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11db8:	00 00 00 
   11dbb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11dc2:	00 00 00 
   11dc5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11dcc:	00 00 00 
   11dcf:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11dd6:	00 00 00 
   11dd9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11de0:	00 00 00 
   11de3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11dea:	00 00 00 
   11ded:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11df4:	00 00 00 
   11df7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   11dfe:	00 00 

0000000000011e00 <constant_time_apply_sgxstep_mitigation_and_continue_execution>:
   11e00:	f3 0f 1e fa          	endbr64 
   11e04:	48 8b 67 20          	mov    0x20(%rdi),%rsp
   11e08:	48 8b 87 88 00 00 00 	mov    0x88(%rdi),%rax
   11e0f:	49 89 c2             	mov    %rax,%r10
   11e12:	80 38 c3             	cmpb   $0xc3,(%rax)
   11e15:	48 0f 44 04 24       	cmove  (%rsp),%rax
   11e1a:	48 89 e5             	mov    %rsp,%rbp
   11e1d:	48 8d 5c 24 08       	lea    0x8(%rsp),%rbx
   11e22:	48 0f 44 eb          	cmove  %rbx,%rbp
   11e26:	48 8d 1d c3 02 00 00 	lea    0x2c3(%rip),%rbx        # 120f0 <__ct_mitigation_end>
   11e2d:	48 29 c3             	sub    %rax,%rbx
   11e30:	48 81 fb e6 00 00 00 	cmp    $0xe6,%rbx
   11e37:	48 0f 42 e5          	cmovb  %rbp,%rsp
   11e3b:	48 89 67 20          	mov    %rsp,0x20(%rdi)
   11e3f:	4c 0f 42 94 24 78 ff 	cmovb  -0x88(%rsp),%r10
   11e46:	ff ff 
   11e48:	4c 89 94 24 78 ff ff 	mov    %r10,-0x88(%rsp)
   11e4f:	ff 
   11e50:	48 8b 87 80 00 00 00 	mov    0x80(%rdi),%rax
   11e57:	48 89 84 24 38 ff ff 	mov    %rax,-0xc8(%rsp)
   11e5e:	ff 
   11e5f:	48 8b 44 24 f8       	mov    -0x8(%rsp),%rax
   11e64:	48 0f 42 84 24 30 ff 	cmovb  -0xd0(%rsp),%rax
   11e6b:	ff ff 
   11e6d:	48 89 84 24 30 ff ff 	mov    %rax,-0xd0(%rsp)
   11e74:	ff 
   11e75:	48 89 b4 24 28 ff ff 	mov    %rsi,-0xd8(%rsp)
   11e7c:	ff 
   11e7d:	48 0f 42 94 24 20 ff 	cmovb  -0xe0(%rsp),%rdx
   11e84:	ff ff 
   11e86:	48 0f 42 8c 24 18 ff 	cmovb  -0xe8(%rsp),%rcx
   11e8d:	ff ff 
   11e8f:	4c 0f 42 84 24 10 ff 	cmovb  -0xf0(%rsp),%r8
   11e96:	ff ff 
   11e98:	4c 0f 42 8c 24 08 ff 	cmovb  -0xf8(%rsp),%r9
   11e9f:	ff ff 
   11ea1:	48 89 94 24 20 ff ff 	mov    %rdx,-0xe0(%rsp)
   11ea8:	ff 
   11ea9:	48 89 8c 24 18 ff ff 	mov    %rcx,-0xe8(%rsp)
   11eb0:	ff 
   11eb1:	4c 89 84 24 10 ff ff 	mov    %r8,-0xf0(%rsp)
   11eb8:	ff 
   11eb9:	4c 89 8c 24 08 ff ff 	mov    %r9,-0xf8(%rsp)
   11ec0:	ff 
   11ec1:	4c 8b 47 40          	mov    0x40(%rdi),%r8
   11ec5:	4c 8b 4f 48          	mov    0x48(%rdi),%r9
   11ec9:	4c 8b 57 50          	mov    0x50(%rdi),%r10
   11ecd:	4c 8b 5f 58          	mov    0x58(%rdi),%r11
   11ed1:	4c 8b 67 60          	mov    0x60(%rdi),%r12
   11ed5:	4c 8b 6f 68          	mov    0x68(%rdi),%r13
   11ed9:	4c 8b 77 70          	mov    0x70(%rdi),%r14
   11edd:	4c 8b 7f 78          	mov    0x78(%rdi),%r15
   11ee1:	48 8b 07             	mov    (%rdi),%rax
   11ee4:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
   11ee8:	48 8b 57 10          	mov    0x10(%rdi),%rdx
   11eec:	48 8b 5f 18          	mov    0x18(%rdi),%rbx
   11ef0:	48 8b 6f 28          	mov    0x28(%rdi),%rbp
   11ef4:	48 8b 77 30          	mov    0x30(%rdi),%rsi
   11ef8:	48 8b 7f 38          	mov    0x38(%rdi),%rdi
   11efc:	48 0f 42 84 24 70 ff 	cmovb  -0x90(%rsp),%rax
   11f03:	ff ff 
   11f05:	48 0f 42 8c 24 68 ff 	cmovb  -0x98(%rsp),%rcx
   11f0c:	ff ff 
   11f0e:	48 0f 42 94 24 60 ff 	cmovb  -0xa0(%rsp),%rdx
   11f15:	ff ff 
   11f17:	48 0f 42 9c 24 58 ff 	cmovb  -0xa8(%rsp),%rbx
   11f1e:	ff ff 
   11f20:	48 0f 42 ac 24 50 ff 	cmovb  -0xb0(%rsp),%rbp
   11f27:	ff ff 
   11f29:	48 0f 42 b4 24 48 ff 	cmovb  -0xb8(%rsp),%rsi
   11f30:	ff ff 
   11f32:	48 0f 42 bc 24 40 ff 	cmovb  -0xc0(%rsp),%rdi
   11f39:	ff ff 
   11f3b:	48 89 84 24 70 ff ff 	mov    %rax,-0x90(%rsp)
   11f42:	ff 
   11f43:	48 89 8c 24 68 ff ff 	mov    %rcx,-0x98(%rsp)
   11f4a:	ff 
   11f4b:	48 89 94 24 60 ff ff 	mov    %rdx,-0xa0(%rsp)
   11f52:	ff 
   11f53:	48 89 9c 24 58 ff ff 	mov    %rbx,-0xa8(%rsp)
   11f5a:	ff 
   11f5b:	48 89 ac 24 50 ff ff 	mov    %rbp,-0xb0(%rsp)
   11f62:	ff 
   11f63:	48 89 b4 24 48 ff ff 	mov    %rsi,-0xb8(%rsp)
   11f6a:	ff 
   11f6b:	48 89 bc 24 40 ff ff 	mov    %rdi,-0xc0(%rsp)
   11f72:	ff 
   11f73:	48 8b ac 24 20 ff ff 	mov    -0xe0(%rsp),%rbp
   11f7a:	ff 
   11f7b:	48 8b b4 24 18 ff ff 	mov    -0xe8(%rsp),%rsi
   11f82:	ff 
   11f83:	48 8b 94 24 10 ff ff 	mov    -0xf0(%rsp),%rdx
   11f8a:	ff 
   11f8b:	48 8b bc 24 08 ff ff 	mov    -0xf8(%rsp),%rdi
   11f92:	ff 
   11f93:	40 d0 ed             	shr    %bpl
   11f96:	48 89 eb             	mov    %rbp,%rbx
   11f99:	73 07                	jae    11fa2 <.restore_flags>
   11f9b:	48 81 eb 00 10 00 00 	sub    $0x1000,%rbx

0000000000011fa2 <.restore_flags>:
   11fa2:	48 8d 84 24 38 ff ff 	lea    -0xc8(%rsp),%rax
   11fa9:	ff 
   11faa:	48 94                	xchg   %rax,%rsp
   11fac:	9d                   	popf   
   11fad:	48 94                	xchg   %rax,%rsp
   11faf:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   11fb6:	00 00 00 00 
   11fba:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   11fc1:	00 00 00 00 
   11fc5:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   11fcc:	00 00 00 00 
   11fd0:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   11fd7:	00 00 00 00 
   11fdb:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   11fe2:	00 00 00 00 
   11fe6:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   11fed:	00 00 00 00 
   11ff1:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   11ff8:	00 00 00 00 
   11ffc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000012000 <.ct_enable_aexnotify>:
   12000:	48 8b 84 24 28 ff ff 	mov    -0xd8(%rsp),%rax
   12007:	ff 
   12008:	c6 00 01             	movb   $0x1,(%rax)

000000000001200b <__ct_mitigation_begin>:
   1200b:	0f ae e8             	lfence 

000000000001200e <.ct_check_write>:
   1200e:	b9 3f 00 00 00       	mov    $0x3f,%ecx
   12013:	c4 e2 f1 f7 ce       	shlx   %rcx,%rsi,%rcx
   12018:	e3 08                	jrcxz  12022 <.ct_clear_low_bits_of_rdx>
   1201a:	48 8d 76 ff          	lea    -0x1(%rsi),%rsi
   1201e:	8a 02                	mov    (%rdx),%al
   12020:	88 02                	mov    %al,(%rdx)

0000000000012022 <.ct_clear_low_bits_of_rdx>:
   12022:	b9 0c 00 00 00       	mov    $0xc,%ecx
   12027:	c4 e2 f3 f7 d2       	shrx   %rcx,%rdx,%rdx
   1202c:	c4 e2 f1 f7 d2       	shlx   %rcx,%rdx,%rdx

0000000000012031 <.ct_check_execute>:
   12031:	ff d7                	call   *%rdi
   12033:	b9 00 10 00 00       	mov    $0x1000,%ecx
   12038:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1203f:	00 

0000000000012040 <.ct_warm_caches_and_tlbs>:
   12040:	67 8d 49 c0          	lea    -0x40(%ecx),%ecx
   12044:	8b 04 0e             	mov    (%rsi,%rcx,1),%eax
   12047:	8b 44 0d 00          	mov    0x0(%rbp,%rcx,1),%eax
   1204b:	8b 04 0b             	mov    (%rbx,%rcx,1),%eax
   1204e:	8b 04 0a             	mov    (%rdx,%rcx,1),%eax
   12051:	e3 02                	jrcxz  12055 <.ct_restore_state>
   12053:	eb eb                	jmp    12040 <.ct_warm_caches_and_tlbs>

0000000000012055 <.ct_restore_state>:
   12055:	40 0f b6 ce          	movzbl %sil,%ecx
   12059:	48 8b bc 24 30 ff ff 	mov    -0xd0(%rsp),%rdi
   12060:	ff 
   12061:	48 89 7c 24 f8       	mov    %rdi,-0x8(%rsp)
   12066:	48 8b bc 24 40 ff ff 	mov    -0xc0(%rsp),%rdi
   1206d:	ff 
   1206e:	48 8b b4 24 48 ff ff 	mov    -0xb8(%rsp),%rsi
   12075:	ff 
   12076:	48 8b ac 24 50 ff ff 	mov    -0xb0(%rsp),%rbp
   1207d:	ff 
   1207e:	48 8b 9c 24 58 ff ff 	mov    -0xa8(%rsp),%rbx
   12085:	ff 
   12086:	48 8b 94 24 60 ff ff 	mov    -0xa0(%rsp),%rdx
   1208d:	ff 
   1208e:	48 8b 84 24 70 ff ff 	mov    -0x90(%rsp),%rax
   12095:	ff 
   12096:	e3 50                	jrcxz  120e8 <.ct_restore_rcx>
   12098:	48 8d 24 24          	lea    (%rsp),%rsp
   1209c:	48 8d 24 24          	lea    (%rsp),%rsp
   120a0:	48 8d 24 24          	lea    (%rsp),%rsp
   120a4:	48 8d 24 24          	lea    (%rsp),%rsp
   120a8:	48 8d 24 24          	lea    (%rsp),%rsp
   120ac:	48 8d 24 24          	lea    (%rsp),%rsp
   120b0:	48 8d 24 24          	lea    (%rsp),%rsp
   120b4:	48 8d 24 24          	lea    (%rsp),%rsp
   120b8:	48 8d 24 24          	lea    (%rsp),%rsp
   120bc:	48 8d 24 24          	lea    (%rsp),%rsp
   120c0:	48 8d 24 24          	lea    (%rsp),%rsp
   120c4:	48 8d 24 24          	lea    (%rsp),%rsp
   120c8:	48 8d 24 24          	lea    (%rsp),%rsp
   120cc:	48 8d 24 24          	lea    (%rsp),%rsp
   120d0:	48 8d 24 24          	lea    (%rsp),%rsp
   120d4:	48 8d 24 24          	lea    (%rsp),%rsp
   120d8:	48 8d 24 24          	lea    (%rsp),%rsp
   120dc:	48 8d 24 24          	lea    (%rsp),%rsp
   120e0:	48 8d 24 24          	lea    (%rsp),%rsp
   120e4:	48 8d 24 24          	lea    (%rsp),%rsp

00000000000120e8 <.ct_restore_rcx>:
   120e8:	48 8b 8c 24 68 ff ff 	mov    -0x98(%rsp),%rcx
   120ef:	ff 

00000000000120f0 <__ct_mitigation_end>:
   120f0:	ff a4 24 78 ff ff ff 	jmp    *-0x88(%rsp)

00000000000120f7 <__ct_mitigation_ret>:
   120f7:	c3                   	ret    

00000000000120f8 <get_enclave_base>:
   120f8:	f3 0f 1e fa          	endbr64 
   120fc:	48 8d 05 fd de fe ff 	lea    -0x12103(%rip),%rax        # 0 <__ImageBase>
   12103:	c3                   	ret    

0000000000012104 <get_enclave_state>:
   12104:	f3 0f 1e fa          	endbr64 
   12108:	48 8d 0d 31 80 00 00 	lea    0x8031(%rip),%rcx        # 1a140 <g_enclave_state>
   1210f:	48 31 c0             	xor    %rax,%rax
   12112:	8b 01                	mov    (%rcx),%eax
   12114:	c3                   	ret    

0000000000012115 <set_enclave_state>:
   12115:	f3 0f 1e fa          	endbr64 
   12119:	48 8d 05 20 80 00 00 	lea    0x8020(%rip),%rax        # 1a140 <g_enclave_state>
   12120:	89 38                	mov    %edi,(%rax)
   12122:	c3                   	ret    

0000000000012123 <lock_enclave>:
   12123:	f3 0f 1e fa          	endbr64 
   12127:	48 8d 15 12 80 00 00 	lea    0x8012(%rip),%rdx        # 1a140 <g_enclave_state>
   1212e:	48 31 c0             	xor    %rax,%rax
   12131:	b8 00 00 00 00       	mov    $0x0,%eax
   12136:	48 31 c9             	xor    %rcx,%rcx
   12139:	b9 01 00 00 00       	mov    $0x1,%ecx
   1213e:	f0 0f b1 0a          	lock cmpxchg %ecx,(%rdx)
   12142:	c3                   	ret    

0000000000012143 <get_thread_data>:
   12143:	f3 0f 1e fa          	endbr64 
   12147:	65 48 8b 04 25 00 00 	mov    %gs:0x0,%rax
   1214e:	00 00 
   12150:	c3                   	ret    

0000000000012151 <get_stack_guard>:
   12151:	f3 0f 1e fa          	endbr64 
   12155:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
   1215c:	00 00 
   1215e:	c3                   	ret    

000000000001215f <enclave_entry>:
   1215f:	f3 0f 1e fa          	endbr64 
   12163:	48 31 d2             	xor    %rdx,%rdx
   12166:	48 01 d2             	add    %rdx,%rdx
   12169:	fc                   	cld    
   1216a:	4d 31 c0             	xor    %r8,%r8
   1216d:	4d 31 c9             	xor    %r9,%r9
   12170:	4d 31 d2             	xor    %r10,%r10
   12173:	4d 31 db             	xor    %r11,%r11
   12176:	4d 31 e4             	xor    %r12,%r12
   12179:	4d 31 ed             	xor    %r13,%r13
   1217c:	4d 31 f6             	xor    %r14,%r14
   1217f:	4d 31 ff             	xor    %r15,%r15
   12182:	48 83 f8 00          	cmp    $0x0,%rax
   12186:	0f 85 07 01 00 00    	jne    12293 <enclave_entry+0x134>
   1218c:	65 48 8b 04 25 08 00 	mov    %gs:0x8,%rax
   12193:	00 00 
   12195:	48 83 f8 00          	cmp    $0x0,%rax
   12199:	75 0f                	jne    121aa <enclave_entry+0x4b>
   1219b:	48 89 d8             	mov    %rbx,%rax
   1219e:	48 2d 00 00 01 00    	sub    $0x10000,%rax
   121a4:	48 2d 00 04 00 00    	sub    $0x400,%rax
   121aa:	48 94                	xchg   %rax,%rsp
   121ac:	51                   	push   %rcx
   121ad:	55                   	push   %rbp
   121ae:	48 89 e5             	mov    %rsp,%rbp
   121b1:	9c                   	pushf  
   121b2:	48 f7 14 24          	notq   (%rsp)
   121b6:	48 81 0c 24 00 00 04 	orq    $0x40000,(%rsp)
   121bd:	00 
   121be:	48 f7 14 24          	notq   (%rsp)
   121c2:	9d                   	popf   
   121c3:	48 83 ec 30          	sub    $0x30,%rsp
   121c7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   121cb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   121cf:	48 89 5d e0          	mov    %rbx,-0x20(%rbp)
   121d3:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
   121d7:	48 89 7d d0          	mov    %rdi,-0x30(%rbp)
   121db:	48 83 ec 20          	sub    $0x20,%rsp
   121df:	48 8d 3d 1a 17 00 00 	lea    0x171a(%rip),%rdi        # 13900 <SYNTHETIC_STATE>
   121e6:	e8 c6 fa ff ff       	call   11cb1 <restore_xregs>
   121eb:	0f ae e8             	lfence 
   121ee:	48 83 c4 20          	add    $0x20,%rsp
   121f2:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
   121f6:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
   121fa:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   121fe:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   12202:	e8 f9 f8 ff ff       	call   11b00 <enter_enclave>
   12207:	48 89 c3             	mov    %rax,%rbx
   1220a:	48 8d 3d ef 16 00 00 	lea    0x16ef(%rip),%rdi        # 13900 <SYNTHETIC_STATE>
   12211:	e8 9b fa ff ff       	call   11cb1 <restore_xregs>
   12216:	0f ae e8             	lfence 
   12219:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1221d:	48 83 f8 00          	cmp    $0x0,%rax
   12221:	75 2c                	jne    1224f <enclave_entry+0xf0>
   12223:	65 48 8b 04 25 00 00 	mov    %gs:0x0,%rax
   1222a:	00 00 
   1222c:	48 83 f8 00          	cmp    $0x0,%rax
   12230:	74 1d                	je     1224f <enclave_entry+0xf0>
   12232:	48 8b 50 20          	mov    0x20(%rax),%rdx
   12236:	8a 8a a7 00 00 00    	mov    0xa7(%rdx),%cl
   1223c:	80 f9 00             	cmp    $0x0,%cl
   1223f:	74 0e                	je     1224f <enclave_entry+0xf0>
   12241:	c6 82 a7 00 00 00 00 	movb   $0x0,0xa7(%rdx)
   12248:	c7 40 50 01 00 00 00 	movl   $0x1,0x50(%rax)
   1224f:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
   12256:	48 89 de             	mov    %rbx,%rsi
   12259:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1225d:	48 89 ec             	mov    %rbp,%rsp
   12260:	5d                   	pop    %rbp
   12261:	5b                   	pop    %rbx
   12262:	48 89 d4             	mov    %rdx,%rsp
   12265:	48 31 c9             	xor    %rcx,%rcx
   12268:	48 31 d2             	xor    %rdx,%rdx
   1226b:	4d 31 c0             	xor    %r8,%r8
   1226e:	4d 31 c9             	xor    %r9,%r9
   12271:	4d 31 d2             	xor    %r10,%r10
   12274:	4d 31 db             	xor    %r11,%r11
   12277:	4d 31 e4             	xor    %r12,%r12
   1227a:	4d 31 ed             	xor    %r13,%r13
   1227d:	4d 31 f6             	xor    %r14,%r14
   12280:	4d 31 ff             	xor    %r15,%r15
   12283:	48 01 d2             	add    %rdx,%rdx
   12286:	fc                   	cld    
   12287:	48 c7 c0 04 00 00 00 	mov    $0x4,%rax
   1228e:	0f 01 d7             	enclu  
   12291:	0f 0b                	ud2    
   12293:	48 89 c2             	mov    %rax,%rdx
   12296:	48 89 d8             	mov    %rbx,%rax
   12299:	48 2d 00 00 01 00    	sub    $0x10000,%rax
   1229f:	e9 06 ff ff ff       	jmp    121aa <enclave_entry+0x4b>
   122a4:	0f 0b                	ud2    

00000000000122a6 <do_ocall>:
   122a6:	f3 0f 1e fa          	endbr64 
   122aa:	55                   	push   %rbp
   122ab:	48 89 e5             	mov    %rsp,%rbp
   122ae:	48 89 7d 10          	mov    %rdi,0x10(%rbp)
   122b2:	48 89 75 18          	mov    %rsi,0x18(%rbp)
   122b6:	65 48 8b 04 25 38 00 	mov    %gs:0x38,%rax
   122bd:	00 00 
   122bf:	48 29 c4             	sub    %rax,%rsp
   122c2:	48 c7 c0 3f 00 00 00 	mov    $0x3f,%rax
   122c9:	48 f7 d0             	not    %rax
   122cc:	48 21 c4             	and    %rax,%rsp
   122cf:	48 89 e1             	mov    %rsp,%rcx
   122d2:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
   122d9:	48 89 8c 24 98 00 00 	mov    %rcx,0x98(%rsp)
   122e0:	00 
   122e1:	48 89 5c 24 70       	mov    %rbx,0x70(%rsp)
   122e6:	48 89 74 24 68       	mov    %rsi,0x68(%rsp)
   122eb:	48 89 7c 24 60       	mov    %rdi,0x60(%rsp)
   122f0:	48 89 6c 24 58       	mov    %rbp,0x58(%rsp)
   122f5:	4c 89 64 24 50       	mov    %r12,0x50(%rsp)
   122fa:	4c 89 6c 24 48       	mov    %r13,0x48(%rsp)
   122ff:	4c 89 74 24 40       	mov    %r14,0x40(%rsp)
   12304:	4c 89 7c 24 38       	mov    %r15,0x38(%rsp)
   12309:	48 8b bc 24 98 00 00 	mov    0x98(%rsp),%rdi
   12310:	00 
   12311:	65 48 8b 04 25 38 00 	mov    %gs:0x38,%rax
   12318:	00 00 
   1231a:	48 89 c1             	mov    %rax,%rcx
   1231d:	48 c1 e9 02          	shr    $0x2,%rcx
   12321:	48 31 c0             	xor    %rax,%rax
   12324:	fc                   	cld    
   12325:	f3 ab                	rep stos %eax,%es:(%rdi)
   12327:	48 8b bc 24 98 00 00 	mov    0x98(%rsp),%rdi
   1232e:	00 
   1232f:	48 89 3c 24          	mov    %rdi,(%rsp)
   12333:	e8 a9 f9 ff ff       	call   11ce1 <save_xregs>
   12338:	48 8d 3d c1 15 00 00 	lea    0x15c1(%rip),%rdi        # 13900 <SYNTHETIC_STATE>
   1233f:	48 89 3c 24          	mov    %rdi,(%rsp)
   12343:	e8 69 f9 ff ff       	call   11cb1 <restore_xregs>
   12348:	0f ae e8             	lfence 
   1234b:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
   12350:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   12355:	48 c7 c0 44 49 43 4f 	mov    $0x4f434944,%rax
   1235c:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   12361:	48 89 7c 24 28       	mov    %rdi,0x28(%rsp)
   12366:	65 48 8b 04 25 00 00 	mov    %gs:0x0,%rax
   1236d:	00 00 
   1236f:	48 89 c3             	mov    %rax,%rbx
   12372:	48 89 e7             	mov    %rsp,%rdi
   12375:	e8 c6 4e ff ff       	call   7240 <update_ocall_lastsp>
   1237a:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
   1237f:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   12384:	48 8b 53 20          	mov    0x20(%rbx),%rdx
   12388:	8a 8a a7 00 00 00    	mov    0xa7(%rdx),%cl
   1238e:	80 f9 00             	cmp    $0x0,%cl
   12391:	74 0e                	je     123a1 <do_ocall+0xfb>
   12393:	c6 82 a7 00 00 00 00 	movb   $0x0,0xa7(%rdx)
   1239a:	c7 43 50 01 00 00 00 	movl   $0x1,0x50(%rbx)
   123a1:	48 8b aa 98 00 00 00 	mov    0x98(%rdx),%rbp
   123a8:	48 8b a2 90 00 00 00 	mov    0x90(%rdx),%rsp
   123af:	48 8b 58 f8          	mov    -0x8(%rax),%rbx
   123b3:	48 c7 c0 04 00 00 00 	mov    $0x4,%rax
   123ba:	48 31 c9             	xor    %rcx,%rcx
   123bd:	48 31 d2             	xor    %rdx,%rdx
   123c0:	4d 31 c0             	xor    %r8,%r8
   123c3:	4d 31 c9             	xor    %r9,%r9
   123c6:	4d 31 d2             	xor    %r10,%r10
   123c9:	4d 31 db             	xor    %r11,%r11
   123cc:	4d 31 e4             	xor    %r12,%r12
   123cf:	4d 31 ed             	xor    %r13,%r13
   123d2:	4d 31 f6             	xor    %r14,%r14
   123d5:	4d 31 ff             	xor    %r15,%r15
   123d8:	48 01 d2             	add    %rdx,%rdx
   123db:	fc                   	cld    
   123dc:	0f 01 d7             	enclu  

00000000000123df <__morestack>:
   123df:	f3 0f 1e fa          	endbr64 
   123e3:	55                   	push   %rbp
   123e4:	48 89 e5             	mov    %rsp,%rbp
   123e7:	48 83 ec 20          	sub    $0x20,%rsp
   123eb:	e8 b6 fe ff ff       	call   122a6 <do_ocall>
   123f0:	c9                   	leave  
   123f1:	c3                   	ret    

00000000000123f2 <asm_oret>:
   123f2:	f3 0f 1e fa          	endbr64 
   123f6:	48 89 e3             	mov    %rsp,%rbx
   123f9:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   123fe:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   12403:	48 8b 63 08          	mov    0x8(%rbx),%rsp
   12407:	48 8b bc 24 98 00 00 	mov    0x98(%rsp),%rdi
   1240e:	00 
   1240f:	e8 9d f8 ff ff       	call   11cb1 <restore_xregs>
   12414:	0f ae e8             	lfence 
   12417:	48 31 c0             	xor    %rax,%rax
   1241a:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
   1241f:	48 29 f9             	sub    %rdi,%rcx
   12422:	48 83 e9 08          	sub    $0x8,%rcx
   12426:	48 c1 e9 02          	shr    $0x2,%rcx
   1242a:	fc                   	cld    
   1242b:	f3 ab                	rep stos %eax,%es:(%rdi)
   1242d:	48 8b 43 10          	mov    0x10(%rbx),%rax
   12431:	4c 8b 7c 24 38       	mov    0x38(%rsp),%r15
   12436:	4c 8b 74 24 40       	mov    0x40(%rsp),%r14
   1243b:	4c 8b 6c 24 48       	mov    0x48(%rsp),%r13
   12440:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   12445:	48 8b 6c 24 58       	mov    0x58(%rsp),%rbp
   1244a:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
   1244f:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   12454:	48 8b 5c 24 70       	mov    0x70(%rsp),%rbx
   12459:	48 89 ec             	mov    %rbp,%rsp
   1245c:	5d                   	pop    %rbp
   1245d:	c3                   	ret    
   1245e:	0f 0b                	ud2    

0000000000012460 <do_egetkey>:
   12460:	f3 0f 1e fa          	endbr64 
   12464:	53                   	push   %rbx
   12465:	51                   	push   %rcx
   12466:	52                   	push   %rdx
   12467:	48 89 fb             	mov    %rdi,%rbx
   1246a:	48 89 f1             	mov    %rsi,%rcx
   1246d:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
   12474:	0f 01 d7             	enclu  
   12477:	74 03                	je     1247c <do_egetkey+0x1c>
   12479:	48 31 c0             	xor    %rax,%rax
   1247c:	5a                   	pop    %rdx
   1247d:	59                   	pop    %rcx
   1247e:	5b                   	pop    %rbx
   1247f:	c3                   	ret    

0000000000012480 <do_ereport>:
   12480:	f3 0f 1e fa          	endbr64 
   12484:	53                   	push   %rbx
   12485:	51                   	push   %rcx
   12486:	52                   	push   %rdx
   12487:	48 89 fb             	mov    %rdi,%rbx
   1248a:	48 89 f1             	mov    %rsi,%rcx
   1248d:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
   12494:	f8                   	clc    

0000000000012495 <Lereport_inst>:
   12495:	0f 01 d7             	enclu  
   12498:	0f 92 c0             	setb   %al
   1249b:	5a                   	pop    %rdx
   1249c:	59                   	pop    %rcx
   1249d:	5b                   	pop    %rbx
   1249e:	c3                   	ret    

000000000001249f <do_everifyreport2>:
   1249f:	f3 0f 1e fa          	endbr64 
   124a3:	53                   	push   %rbx
   124a4:	51                   	push   %rcx
   124a5:	52                   	push   %rdx
   124a6:	48 89 fb             	mov    %rdi,%rbx
   124a9:	48 89 f1             	mov    %rsi,%rcx
   124ac:	48 c7 c0 08 00 00 00 	mov    $0x8,%rax

00000000000124b3 <Leverifyreport2_inst>:
   124b3:	0f 01 d7             	enclu  
   124b6:	74 03                	je     124bb <Leverifyreport2_inst+0x8>
   124b8:	48 31 c0             	xor    %rax,%rax
   124bb:	5a                   	pop    %rdx
   124bc:	59                   	pop    %rcx
   124bd:	5b                   	pop    %rbx
   124be:	c3                   	ret    

00000000000124bf <do_eaccept>:
   124bf:	f3 0f 1e fa          	endbr64 
   124c3:	53                   	push   %rbx
   124c4:	51                   	push   %rcx
   124c5:	52                   	push   %rdx
   124c6:	48 89 fb             	mov    %rdi,%rbx
   124c9:	48 89 f1             	mov    %rsi,%rcx
   124cc:	b8 05 00 00 00       	mov    $0x5,%eax
   124d1:	0f 01 d7             	enclu  
   124d4:	83 f8 00             	cmp    $0x0,%eax
   124d7:	75 5e                	jne    12537 <abort>
   124d9:	5a                   	pop    %rdx
   124da:	59                   	pop    %rcx
   124db:	5b                   	pop    %rbx
   124dc:	c3                   	ret    

00000000000124dd <do_eacceptcopy>:
   124dd:	f3 0f 1e fa          	endbr64 
   124e1:	53                   	push   %rbx
   124e2:	51                   	push   %rcx
   124e3:	52                   	push   %rdx
   124e4:	48 89 fb             	mov    %rdi,%rbx
   124e7:	48 89 f1             	mov    %rsi,%rcx
   124ea:	b8 07 00 00 00       	mov    $0x7,%eax
   124ef:	0f 01 d7             	enclu  
   124f2:	83 f8 00             	cmp    $0x0,%eax
   124f5:	75 40                	jne    12537 <abort>
   124f7:	5a                   	pop    %rdx
   124f8:	59                   	pop    %rcx
   124f9:	5b                   	pop    %rbx
   124fa:	c3                   	ret    

00000000000124fb <do_emodpe>:
   124fb:	f3 0f 1e fa          	endbr64 
   124ff:	53                   	push   %rbx
   12500:	51                   	push   %rcx
   12501:	52                   	push   %rdx
   12502:	48 89 fb             	mov    %rdi,%rbx
   12505:	48 89 f1             	mov    %rsi,%rcx
   12508:	b8 06 00 00 00       	mov    $0x6,%eax
   1250d:	0f 01 d7             	enclu  
   12510:	5a                   	pop    %rdx
   12511:	59                   	pop    %rcx
   12512:	5b                   	pop    %rbx
   12513:	c3                   	ret    

0000000000012514 <do_rdrand>:
   12514:	f3 0f 1e fa          	endbr64 
   12518:	b9 0a 00 00 00       	mov    $0xa,%ecx
   1251d:	0f c7 f0             	rdrand %eax
   12520:	72 08                	jb     1252a <do_rdrand+0x16>
   12522:	ff c9                	dec    %ecx
   12524:	75 f7                	jne    1251d <do_rdrand+0x9>
   12526:	48 31 c0             	xor    %rax,%rax
   12529:	c3                   	ret    
   1252a:	48 89 f9             	mov    %rdi,%rcx
   1252d:	89 01                	mov    %eax,(%rcx)
   1252f:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
   12536:	c3                   	ret    

0000000000012537 <abort>:
   12537:	f3 0f 1e fa          	endbr64 
   1253b:	48 8d 05 fe 7b 00 00 	lea    0x7bfe(%rip),%rax        # 1a140 <g_enclave_state>
   12542:	c7 00 03 00 00 00    	movl   $0x3,(%rax)
   12548:	0f 0b                	ud2    

000000000001254a <continue_execution>:
   1254a:	f3 0f 1e fa          	endbr64 
   1254e:	48 89 f9             	mov    %rdi,%rcx
   12551:	48 8b 01             	mov    (%rcx),%rax
   12554:	50                   	push   %rax
   12555:	48 8b 41 08          	mov    0x8(%rcx),%rax
   12559:	50                   	push   %rax
   1255a:	48 8b 41 20          	mov    0x20(%rcx),%rax
   1255e:	48 2d 88 00 00 00    	sub    $0x88,%rax
   12564:	48 8b 51 10          	mov    0x10(%rcx),%rdx
   12568:	48 8b 59 18          	mov    0x18(%rcx),%rbx
   1256c:	48 8b 69 28          	mov    0x28(%rcx),%rbp
   12570:	48 8b 71 30          	mov    0x30(%rcx),%rsi
   12574:	48 8b 79 38          	mov    0x38(%rcx),%rdi
   12578:	4c 8b 41 40          	mov    0x40(%rcx),%r8
   1257c:	4c 8b 49 48          	mov    0x48(%rcx),%r9
   12580:	4c 8b 51 50          	mov    0x50(%rcx),%r10
   12584:	4c 8b 59 58          	mov    0x58(%rcx),%r11
   12588:	4c 8b 61 60          	mov    0x60(%rcx),%r12
   1258c:	4c 8b 69 68          	mov    0x68(%rcx),%r13
   12590:	4c 8b 71 70          	mov    0x70(%rcx),%r14
   12594:	4c 8b 79 78          	mov    0x78(%rcx),%r15
   12598:	ff b1 80 00 00 00    	push   0x80(%rcx)
   1259e:	9d                   	popf   
   1259f:	48 8b 89 88 00 00 00 	mov    0x88(%rcx),%rcx
   125a6:	48 89 08             	mov    %rcx,(%rax)
   125a9:	59                   	pop    %rcx
   125aa:	5c                   	pop    %rsp
   125ab:	48 94                	xchg   %rax,%rsp
   125ad:	c2 80 00             	ret    $0x80

00000000000125b0 <second_phase>:
   125b0:	f3 0f 1e fa          	endbr64 
   125b4:	48 89 f4             	mov    %rsi,%rsp
   125b7:	48 c7 c0 09 00 00 00 	mov    $0x9,%rax
   125be:	0f 01 d7             	enclu  
   125c1:	ff e2                	jmp    *%rdx
