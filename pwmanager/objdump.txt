
Enclave/encl.so:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000318 <.interp>:
 318:	2f                   	(bad)  
 319:	6c                   	insb   (%dx),%es:(%rdi)
 31a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 321:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 326:	78 2d                	js     355 <__ImageBase+0x355>
 328:	78 38                	js     362 <__ImageBase+0x362>
 32a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 330:	6f                   	outsl  %ds:(%rsi),(%dx)
 331:	2e 32 00             	cs xor (%rax),%al

Disassembly of section .note.gnu.property:

0000000000000338 <.note.gnu.property>:
 338:	04 00                	add    $0x0,%al
 33a:	00 00                	add    %al,(%rax)
 33c:	20 00                	and    %al,(%rax)
 33e:	00 00                	add    %al,(%rax)
 340:	05 00 00 00 47       	add    $0x47000000,%eax
 345:	4e 55                	rex.WRX push %rbp
 347:	00 01                	add    %al,(%rcx)
 349:	00 01                	add    %al,(%rcx)
 34b:	c0 04 00 00          	rolb   $0x0,(%rax,%rax,1)
 34f:	00 3b                	add    %bh,(%rbx)
 351:	00 00                	add    %al,(%rax)
 353:	00 00                	add    %al,(%rax)
 355:	00 00                	add    %al,(%rax)
 357:	00 02                	add    %al,(%rdx)
 359:	00 01                	add    %al,(%rcx)
 35b:	c0 04 00 00          	rolb   $0x0,(%rax,%rax,1)
 35f:	00 0d 00 00 00 00    	add    %cl,0x0(%rip)        # 365 <__ImageBase+0x365>
 365:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000000368 <.note.gnu.build-id>:
 368:	04 00                	add    $0x0,%al
 36a:	00 00                	add    %al,(%rax)
 36c:	14 00                	adc    $0x0,%al
 36e:	00 00                	add    %al,(%rax)
 370:	03 00                	add    (%rax),%eax
 372:	00 00                	add    %al,(%rax)
 374:	47                   	rex.RXB
 375:	4e 55                	rex.WRX push %rbp
 377:	00 ee                	add    %ch,%dh
 379:	51                   	push   %rcx
 37a:	97                   	xchg   %eax,%edi
 37b:	0f 30                	wrmsr  
 37d:	e0 6b                	loopne 3ea <__ImageBase+0x3ea>
 37f:	b4 2a                	mov    $0x2a,%ah
 381:	19 67 8f             	sbb    %esp,-0x71(%rdi)
 384:	4e e4 c4             	rex.WRX in $0xc4,%al
 387:	32 41 32             	xor    0x32(%rcx),%al
 38a:	e1 69                	loope  3f5 <__ImageBase+0x3f5>

Disassembly of section .gnu.hash:

0000000000000390 <.gnu.hash>:
 390:	11 00                	adc    %eax,(%rax)
 392:	00 00                	add    %al,(%rax)
 394:	03 00                	add    (%rax),%eax
 396:	00 00                	add    %al,(%rax)
 398:	04 00                	add    $0x0,%al
 39a:	00 00                	add    %al,(%rax)
 39c:	08 00                	or     %al,(%rax)
 39e:	00 00                	add    %al,(%rax)
 3a0:	02 00                	add    (%rax),%al
 3a2:	12 00                	adc    (%rax),%al
 3a4:	08 12                	or     %dl,(%rdx)
 3a6:	12 02                	adc    (%rdx),%al
 3a8:	28 10                	sub    %dl,(%rax)
 3aa:	04 e1                	add    $0xe1,%al
 3ac:	00 80 63 59 42 41    	add    %al,0x41425963(%rax)
 3b2:	81 38 4b 01 40 0f    	cmpl   $0xf40014b,(%rax)
 3b8:	84 31                	test   %dh,(%rcx)
 3ba:	17                   	(bad)  
 3bb:	91                   	xchg   %eax,%ecx
 3bc:	40 00 16             	rex add %dl,(%rsi)
 3bf:	30 03                	xor    %al,(%rbx)
 3c1:	00 00                	add    %al,(%rax)
 3c3:	00 06                	add    %al,(%rsi)
 3c5:	00 00                	add    %al,(%rax)
 3c7:	00 0a                	add    %cl,(%rdx)
 3c9:	00 00                	add    %al,(%rax)
 3cb:	00 0c 00             	add    %cl,(%rax,%rax,1)
 3ce:	00 00                	add    %al,(%rax)
 3d0:	0f 00 00             	sldt   (%rax)
 3d3:	00 11                	add    %dl,(%rcx)
 3d5:	00 00                	add    %al,(%rax)
 3d7:	00 13                	add    %dl,(%rbx)
 3d9:	00 00                	add    %al,(%rax)
 3db:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 3e1 <__ImageBase+0x3e1>
 3e1:	00 00                	add    %al,(%rax)
 3e3:	00 19                	add    %bl,(%rcx)
 3e5:	00 00                	add    %al,(%rax)
 3e7:	00 1c 00             	add    %bl,(%rax,%rax,1)
 3ea:	00 00                	add    %al,(%rax)
 3ec:	00 00                	add    %al,(%rax)
 3ee:	00 00                	add    %al,(%rax)
 3f0:	1d 00 00 00 21       	sbb    $0x21000000,%eax
 3f5:	00 00                	add    %al,(%rax)
 3f7:	00 24 00             	add    %ah,(%rax,%rax,1)
 3fa:	00 00                	add    %al,(%rax)
 3fc:	00 00                	add    %al,(%rax)
 3fe:	00 00                	add    %al,(%rax)
 400:	25 00 00 00 6e       	and    $0x6e000000,%eax
 405:	4c 0d 59 de 72 46    	rex.WR or $0x4672de59,%rax
 40b:	9a                   	(bad)  
 40c:	8f 88 a1 be          	(bad)
 410:	58                   	pop    %rax
 411:	5d                   	pop    %rbp
 412:	85 1b                	test   %ebx,(%rbx)
 414:	9a                   	(bad)  
 415:	5c                   	pop    %rsp
 416:	a0 ac 70 de 02 f2 f1 	movabs 0xac94f1f202de70ac,%al
 41d:	94 ac 
 41f:	67 00 a9 9e da fd 8d 	add    %ch,-0x72022562(%ecx)
 426:	23 fd                	and    %ebp,%edi
 428:	e6 42                	out    %al,$0x42
 42a:	5b                   	pop    %rbx
 42b:	6d                   	insl   (%dx),%es:(%rdi)
 42c:	d8 71 58             	fdivs  0x58(%rcx)
 42f:	1c 75                	sbb    $0x75,%al
 431:	36 20 04 ba          	ss and %al,(%rdx,%rdi,4)
 435:	e3 92                	jrcxz  3c9 <__ImageBase+0x3c9>
 437:	7c 97                	jl     3d0 <__ImageBase+0x3d0>
 439:	81 42 a8 7c b0 3e 88 	addl   $0x883eb07c,-0x58(%rdx)
 440:	23 71 91             	and    -0x6f(%rcx),%esi
 443:	45 d0 0c 74          	rex.RB rorb (%r12,%rsi,2)
 447:	e7 b7                	out    %eax,$0xb7
 449:	39 0d 80 f4 7c 90    	cmp    %ecx,-0x6f830b80(%rip)        # ffffffff907cf8cf <_end+0xffffffff907a48bf>
 44f:	5a                   	pop    %rdx
 450:	b8 a1 15 31 42       	mov    $0x423115a1,%eax
 455:	45 d5                	rex.RB (bad) 
 457:	ec                   	in     (%dx),%al
 458:	01 23                	add    %esp,(%rbx)
 45a:	f9                   	stc    
 45b:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
 45c:	9a                   	(bad)  
 45d:	28 c1                	sub    %al,%cl
 45f:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
 460:	90                   	nop
 461:	c6                   	(bad)  
 462:	fa                   	cli    
 463:	fa                   	cli    
 464:	6f                   	outsl  %ds:(%rsi),(%dx)
 465:	bb 9e 0c 39 54       	mov    $0x54390c9e,%ebx
 46a:	bc 04 5e f8 8c       	mov    $0x8cf85e04,%esp
 46f:	8d 10                	lea    (%rax),%edx
 471:	b4 59                	mov    $0x59,%ah
 473:	31 a0 a6 66 1a dd    	xor    %esp,-0x22e5995a(%rax)
 479:	df 50 a9             	fists  -0x57(%rax)
 47c:	52                   	push   %rdx
 47d:	3e e3 cb             	jrcxz,pt 44b <__ImageBase+0x44b>
 480:	2c 6c                	sub    $0x6c,%al
 482:	67 40 c9             	addr32 rex leave 
 485:	91                   	xchg   %eax,%ecx
 486:	b6 fb                	mov    $0xfb,%dh
 488:	9d                   	popf   
 489:	ba 50 a9 c7 d2       	mov    $0xd2c7a950,%edx
 48e:	91                   	xchg   %eax,%ecx
 48f:	c1                   	.byte 0xc1

Disassembly of section .dynsym:

0000000000000490 <.dynsym>:
	...
 4a8:	e3 00                	jrcxz  4aa <__ImageBase+0x4aa>
 4aa:	00 00                	add    %al,(%rax)
 4ac:	20 00                	and    %al,(%rax)
	...
 4be:	00 00                	add    %al,(%rax)
 4c0:	e0 01                	loopne 4c3 <__ImageBase+0x4c3>
 4c2:	00 00                	add    %al,(%rax)
 4c4:	20 00                	and    %al,(%rax)
	...
 4d6:	00 00                	add    %al,(%rax)
 4d8:	58                   	pop    %rax
 4d9:	00 00                	add    %al,(%rax)
 4db:	00 21                	add    %ah,(%rcx)
 4dd:	00 11                	add    %dl,(%rcx)
 4df:	00 f8                	add    %bh,%al
 4e1:	7d 01                	jge    4e4 <__ImageBase+0x4e4>
 4e3:	00 00                	add    %al,(%rax)
 4e5:	00 00                	add    %al,(%rax)
 4e7:	00 08                	add    %cl,(%rax)
 4e9:	00 00                	add    %al,(%rax)
 4eb:	00 00                	add    %al,(%rax)
 4ed:	00 00                	add    %al,(%rax)
 4ef:	00 cf                	add    %cl,%bh
 4f1:	00 00                	add    %al,(%rax)
 4f3:	00 12                	add    %dl,(%rdx)
 4f5:	00 0b                	add    %cl,(%rbx)
 4f7:	00 f2                	add    %dh,%dl
 4f9:	23 01                	and    (%rcx),%eax
	...
 507:	00 22                	add    %ah,(%rdx)
 509:	01 00                	add    %eax,(%rax)
 50b:	00 12                	add    %dl,(%rdx)
 50d:	00 0a                	add    %cl,(%rdx)
 50f:	00 b0 0e 01 00 00    	add    %dh,0x10e(%rax)
 515:	00 00                	add    %al,(%rax)
 517:	00 54 00 00          	add    %dl,0x0(%rax,%rax,1)
 51b:	00 00                	add    %al,(%rax)
 51d:	00 00                	add    %al,(%rax)
 51f:	00 95 01 00 00 12    	add    %dl,0x12000001(%rbp)
 525:	00 0a                	add    %cl,(%rdx)
 527:	00 d2                	add    %dl,%dl
 529:	0c 01                	or     $0x1,%al
	...
 537:	00 20                	add    %ah,(%rax)
 539:	00 00                	add    %al,(%rax)
 53b:	00 22                	add    %ah,(%rdx)
 53d:	00 0a                	add    %cl,(%rdx)
 53f:	00 5f 0d             	add    %bl,0xd(%rdi)
 542:	01 00                	add    %eax,(%rax)
	...
 550:	29 00                	sub    %eax,(%rax)
 552:	00 00                	add    %al,(%rax)
 554:	12 00                	adc    (%rax),%al
 556:	0a 00                	or     (%rax),%al
 558:	70 c5                	jo     51f <__ImageBase+0x51f>
	...
 566:	00 00                	add    %al,(%rax)
 568:	98                   	cwtl   
 569:	00 00                	add    %al,(%rax)
 56b:	00 12                	add    %dl,(%rdx)
 56d:	00 0b                	add    %cl,(%rbx)
 56f:	00 fb                	add    %bh,%bl
 571:	24 01                	and    $0x1,%al
	...
 57f:	00 14 00             	add    %dl,(%rax,%rax,1)
 582:	00 00                	add    %al,(%rax)
 584:	10 00                	adc    %al,(%rax)
 586:	f1                   	icebp  
 587:	ff 00                	incl   (%rax)
	...
 595:	00 00                	add    %al,(%rax)
 597:	00 70 00             	add    %dh,0x0(%rax)
 59a:	00 00                	add    %al,(%rax)
 59c:	11 00                	adc    %eax,(%rax)
 59e:	14 00                	adc    $0x0,%al
 5a0:	e0 a0                	loopne 542 <__ImageBase+0x542>
 5a2:	01 00                	add    %eax,(%rax)
 5a4:	00 00                	add    %al,(%rax)
 5a6:	00 00                	add    %al,(%rax)
 5a8:	1d 00 00 00 00       	sbb    $0x0,%eax
 5ad:	00 00                	add    %al,(%rax)
 5af:	00 f4                	add    %dh,%ah
 5b1:	00 00                	add    %al,(%rax)
 5b3:	00 12                	add    %dl,(%rdx)
 5b5:	00 0a                	add    %cl,(%rdx)
 5b7:	00 a0 0e 01 00 00    	add    %ah,0x10e(%rax)
 5bd:	00 00                	add    %al,(%rax)
 5bf:	00 0a                	add    %cl,(%rdx)
 5c1:	00 00                	add    %al,(%rax)
 5c3:	00 00                	add    %al,(%rax)
 5c5:	00 00                	add    %al,(%rax)
 5c7:	00 2b                	add    %ch,(%rbx)
 5c9:	01 00                	add    %eax,(%rax)
 5cb:	00 10                	add    %dl,(%rax)
 5cd:	00 16                	add    %dl,(%rsi)
 5cf:	00 60 a1             	add    %ah,-0x5f(%rax)
 5d2:	01 00                	add    %eax,(%rax)
	...
 5e0:	37                   	(bad)  
 5e1:	01 00                	add    %eax,(%rax)
 5e3:	00 11                	add    %dl,(%rcx)
 5e5:	00 0d 00 00 32 01    	add    %cl,0x1320000(%rip)        # 13205eb <_end+0x12f55db>
 5eb:	00 00                	add    %al,(%rax)
 5ed:	00 00                	add    %al,(%rax)
 5ef:	00 e0                	add    %ah,%al
 5f1:	06                   	(bad)  
 5f2:	00 00                	add    %al,(%rax)
 5f4:	00 00                	add    %al,(%rax)
 5f6:	00 00                	add    %al,(%rax)
 5f8:	76 01                	jbe    5fb <__ImageBase+0x5fb>
 5fa:	00 00                	add    %al,(%rax)
 5fc:	10 00                	adc    %al,(%rax)
 5fe:	16                   	(bad)  
 5ff:	00 10                	add    %dl,(%rax)
 601:	b0 02                	mov    $0x2,%al
	...
 60f:	00 94 01 00 00 22 00 	add    %dl,0x220000(%rcx,%rax,1)
 616:	0a 00                	or     (%rax),%al
 618:	d2 0c 01             	rorb   %cl,(%rcx,%rax,1)
	...
 627:	00 21                	add    %ah,(%rcx)
 629:	00 00                	add    %al,(%rax)
 62b:	00 12                	add    %dl,(%rdx)
 62d:	00 0a                	add    %cl,(%rdx)
 62f:	00 5f 0d             	add    %bl,0xd(%rdi)
 632:	01 00                	add    %eax,(%rax)
	...
 640:	bb 01 00 00 10       	mov    $0x10000001,%ebx
 645:	00 14 00             	add    %dl,(%rax,%rax,1)
 648:	00 90 01 00 00 00    	add    %dl,0x1(%rax)
	...
 656:	00 00                	add    %al,(%rax)
 658:	09 00                	or     %eax,(%rax)
 65a:	00 00                	add    %al,(%rax)
 65c:	10 00                	adc    %al,(%rax)
 65e:	0a 00                	or     (%rax),%al
 660:	00 30                	add    %dh,(%rax)
	...
 66e:	00 00                	add    %al,(%rax)
 670:	45 01 00             	add    %r8d,(%r8)
 673:	00 10                	add    %dl,(%rax)
 675:	00 0b                	add    %cl,(%rbx)
 677:	00 b3 24 01 00 00    	add    %dh,0x124(%rbx)
	...
 685:	00 00                	add    %al,(%rax)
 687:	00 30                	add    %dh,(%rax)
 689:	00 00                	add    %al,(%rax)
 68b:	00 12                	add    %dl,(%rdx)
 68d:	00 0b                	add    %cl,(%rbx)
 68f:	00 5f 21             	add    %bl,0x21(%rdi)
 692:	01 00                	add    %eax,(%rax)
	...
 6a0:	00 01                	add    %al,(%rcx)
 6a2:	00 00                	add    %al,(%rax)
 6a4:	10 00                	adc    %al,(%rax)
 6a6:	0b 00                	or     (%rax),%eax
 6a8:	f7 20                	mull   (%rax)
 6aa:	01 00                	add    %eax,(%rax)
	...
 6b8:	5a                   	pop    %rdx
 6b9:	01 00                	add    %eax,(%rax)
 6bb:	00 10                	add    %dl,(%rax)
 6bd:	00 15 00 48 a1 01    	add    %dl,0x1a14800(%rip)        # 1a14ec3 <_end+0x19e9eb3>
	...
 6cf:	00 7b 01             	add    %bh,0x1(%rbx)
 6d2:	00 00                	add    %al,(%rax)
 6d4:	22 00                	and    (%rax),%al
 6d6:	0a 00                	or     (%rax),%al
 6d8:	70 0e                	jo     6e8 <__ImageBase+0x6e8>
 6da:	01 00                	add    %eax,(%rax)
 6dc:	00 00                	add    %al,(%rax)
 6de:	00 00                	add    %al,(%rax)
 6e0:	09 00                	or     %eax,(%rax)
 6e2:	00 00                	add    %al,(%rax)
 6e4:	00 00                	add    %al,(%rax)
 6e6:	00 00                	add    %al,(%rax)
 6e8:	3e 00 00             	ds add %al,(%rax)
 6eb:	00 11                	add    %dl,(%rcx)
 6ed:	00 16                	add    %dl,(%rsi)
 6ef:	00 38                	add    %bh,(%rax)
 6f1:	ae                   	scas   %es:(%rdi),%al
 6f2:	02 00                	add    (%rax),%al
 6f4:	00 00                	add    %al,(%rax)
 6f6:	00 00                	add    %al,(%rax)
 6f8:	08 00                	or     %al,(%rax)
 6fa:	00 00                	add    %al,(%rax)
 6fc:	00 00                	add    %al,(%rax)
 6fe:	00 00                	add    %al,(%rax)
 700:	a2 00 00 00 11 00 14 	movabs %al,0x140011000000
 707:	00 00 
 709:	a1 01 00 00 00 00 00 	movabs 0x1f000000000001,%eax
 710:	1f 00 
 712:	00 00                	add    %al,(%rax)
 714:	00 00                	add    %al,(%rax)
 716:	00 00                	add    %al,(%rax)
 718:	ad                   	lods   %ds:(%rsi),%eax
 719:	01 00                	add    %eax,(%rax)
 71b:	00 10                	add    %dl,(%rax)
 71d:	00 0b                	add    %cl,(%rbx)
 71f:	00 95 24 01 00 00    	add    %dl,0x124(%rbp)
	...
 72d:	00 00                	add    %al,(%rax)
 72f:	00 cf                	add    %cl,%bh
 731:	01 00                	add    %eax,(%rax)
 733:	00 11                	add    %dl,(%rcx)
 735:	00 16                	add    %dl,(%rsi)
 737:	00 20                	add    %ah,(%rax)
 739:	aa                   	stos   %al,%es:(%rdi)
 73a:	02 00                	add    (%rax),%al
 73c:	00 00                	add    %al,(%rax)
 73e:	00 00                	add    %al,(%rax)
 740:	08 00                	or     %al,(%rax)
 742:	00 00                	add    %al,(%rax)
 744:	00 00                	add    %al,(%rax)
 746:	00 00                	add    %al,(%rax)
 748:	b6 00                	mov    $0x0,%dh
 74a:	00 00                	add    %al,(%rax)
 74c:	12 00                	adc    (%rax),%al
 74e:	0a 00                	or     (%rax),%al
 750:	60                   	(bad)  
 751:	44 00 00             	add    %r8b,(%rax)
 754:	00 00                	add    %al,(%rax)
 756:	00 00                	add    %al,(%rax)
 758:	4d 11 00             	adc    %r8,(%r8)
 75b:	00 00                	add    %al,(%rax)
 75d:	00 00                	add    %al,(%rax)
 75f:	00 14 01             	add    %dl,(%rcx,%rax,1)
 762:	00 00                	add    %al,(%rax)
 764:	12 00                	adc    (%rax),%al
 766:	0a 00                	or     (%rax),%al
 768:	80 0e 01             	orb    $0x1,(%rsi)
 76b:	00 00                	add    %al,(%rax)
 76d:	00 00                	add    %al,(%rax)
 76f:	00 1d 00 00 00 00    	add    %bl,0x0(%rip)        # 775 <__ImageBase+0x775>
 775:	00 00                	add    %al,(%rax)
 777:	00 61 01             	add    %ah,0x1(%rcx)
 77a:	00 00                	add    %al,(%rax)
 77c:	11 00                	adc    %eax,(%rax)
 77e:	14 00                	adc    $0x0,%al
 780:	20 a1 01 00 00 00    	and    %ah,0x1(%rcx)
 786:	00 00                	add    %al,(%rax)
 788:	20 00                	and    %al,(%rax)
 78a:	00 00                	add    %al,(%rax)
 78c:	00 00                	add    %al,(%rax)
 78e:	00 00                	add    %al,(%rax)
 790:	8c 01                	mov    %es,(%rcx)
 792:	00 00                	add    %al,(%rax)
 794:	12 00                	adc    (%rax),%al
 796:	0a 00                	or     (%rax),%al
 798:	a0 0f 01 00 00 00 00 	movabs 0x6f0000000000010f,%al
 79f:	00 6f 
 7a1:	00 00                	add    %al,(%rax)
 7a3:	00 00                	add    %al,(%rax)
 7a5:	00 00                	add    %al,(%rax)
 7a7:	00 82 00 00 00 10    	add    %al,0x10000000(%rdx)
 7ad:	00 0b                	add    %cl,(%rbx)
 7af:	00 0b                	add    %cl,(%rbx)
 7b1:	20 01                	and    %al,(%rcx)
	...
 7bf:	00 d8                	add    %bl,%al
 7c1:	00 00                	add    %al,(%rax)
 7c3:	00 12                	add    %dl,(%rdx)
 7c5:	00 0b                	add    %cl,(%rbx)
 7c7:	00 bf 24 01 00 00    	add    %bh,0x124(%rdi)
	...
 7d5:	00 00                	add    %al,(%rax)
 7d7:	00 9c 01 00 00 11 00 	add    %bl,0x110000(%rcx,%rax,1)
 7de:	14 00                	adc    $0x0,%al
 7e0:	30 82 01 00 00 00    	xor    %al,0x1(%rdx)
 7e6:	00 00                	add    %al,(%rax)
 7e8:	1c 00                	sbb    $0x0,%al
 7ea:	00 00                	add    %al,(%rax)
 7ec:	00 00                	add    %al,(%rax)
 7ee:	00 00                	add    %al,(%rax)
 7f0:	01 00                	add    %eax,(%rax)
 7f2:	00 00                	add    %al,(%rax)
 7f4:	12 00                	adc    (%rax),%al
 7f6:	0a 00                	or     (%rax),%al
 7f8:	10 0f                	adc    %cl,(%rdi)
 7fa:	01 00                	add    %eax,(%rax)
 7fc:	00 00                	add    %al,(%rax)
 7fe:	00 00                	add    %al,(%rax)
 800:	8e 00                	mov    (%rax),%es
 802:	00 00                	add    %al,(%rax)
 804:	00 00                	add    %al,(%rax)
 806:	00 00                	add    %al,(%rax)
 808:	c0 00 00             	rolb   $0x0,(%rax)
 80b:	00 12                	add    %dl,(%rdx)
 80d:	00 0b                	add    %cl,(%rbx)
 80f:	00 dd                	add    %bl,%ch
 811:	24 01                	and    $0x1,%al
	...

Disassembly of section .dynstr:

0000000000000820 <.dynstr>:
 820:	00 5f 73             	add    %bl,0x73(%rdi)
 823:	74 72                	je     897 <__ImageBase+0x897>
 825:	63 6d 70             	movsxd 0x70(%rbp),%ebp
 828:	00 74 65 73          	add    %dh,0x73(%rbp,%riz,2)
 82c:	74 5f                	je     88d <__ImageBase+0x88d>
 82e:	64 75 6d             	fs jne 89e <__ImageBase+0x89e>
 831:	6d                   	insl   (%dx),%es:(%rdi)
 832:	79 00                	jns    834 <__ImageBase+0x834>
 834:	5f                   	pop    %rdi
 835:	5f                   	pop    %rdi
 836:	49 6d                	rex.WB insl (%dx),%es:(%rdi)
 838:	61                   	(bad)  
 839:	67 65 42 61          	addr32 gs rex.X (bad) 
 83d:	73 65                	jae    8a4 <__ImageBase+0x8a4>
 83f:	00 5f 6c             	add    %bl,0x6c(%rdi)
 842:	6f                   	outsl  %ds:(%rsi),(%dx)
 843:	6e                   	outsb  %ds:(%rsi),(%dx)
 844:	67 6a 6d             	addr32 push $0x6d
 847:	70 00                	jo     849 <__ImageBase+0x849>
 849:	61                   	(bad)  
 84a:	6c                   	insb   (%dx),%es:(%rdi)
 84b:	6c                   	insb   (%dx),%es:(%rdi)
 84c:	6f                   	outsl  %ds:(%rsi),(%dx)
 84d:	63 61 00             	movsxd 0x0(%rcx),%esp
 850:	65 6e                	outsb  %gs:(%rsi),(%dx)
 852:	63 6c 61 76          	movsxd 0x76(%rcx,%riz,2),%ebp
 856:	65 5f                	gs pop %rdi
 858:	65 6e                	outsb  %gs:(%rsi),(%dx)
 85a:	74 72                	je     8ce <__ImageBase+0x8ce>
 85c:	79 00                	jns    85e <__ImageBase+0x85e>
 85e:	67 5f                	addr32 pop %rdi
 860:	70 65                	jo     8c7 <__ImageBase+0x8c7>
 862:	61                   	(bad)  
 863:	6b 5f 72 73          	imul   $0x73,0x72(%rdi),%ebx
 867:	72 76                	jb     8df <__ImageBase+0x8df>
 869:	5f                   	pop    %rdi
 86a:	6d                   	insl   (%dx),%es:(%rdi)
 86b:	65 6d                	gs insl (%dx),%es:(%rdi)
 86d:	5f                   	pop    %rdi
 86e:	63 6f 6d             	movsxd 0x6d(%rdi),%ebp
 871:	6d                   	insl   (%dx),%es:(%rdi)
 872:	69 74 74 65 64 00 5f 	imul   $0x5f5f0064,0x65(%rsp,%rsi,2),%esi
 879:	5f 
 87a:	69 6e 74 65 6c 5f 73 	imul   $0x735f6c65,0x74(%rsi),%ebp
 881:	65 63 75 72          	movsxd %gs:0x72(%rbp),%esi
 885:	69 74 79 5f 63 6f 6f 	imul   $0x6b6f6f63,0x5f(%rcx,%rdi,2),%esi
 88c:	6b 
 88d:	69 65 00 73 67 78 5f 	imul   $0x5f786773,0x0(%rbp),%esp
 894:	74 73                	je     909 <__ImageBase+0x909>
 896:	74 64                	je     8fc <__ImageBase+0x8fc>
 898:	63 5f 76             	movsxd 0x76(%rdi),%ebx
 89b:	65 72 73             	gs jb  911 <__ImageBase+0x911>
 89e:	69 6f 6e 00 5f 5f 63 	imul   $0x635f5f00,0x6e(%rdi),%ebp
 8a5:	74 5f                	je     906 <__ImageBase+0x906>
 8a7:	6d                   	insl   (%dx),%es:(%rdi)
 8a8:	69 74 69 67 61 74 69 	imul   $0x6f697461,0x67(%rcx,%rbp,2),%esi
 8af:	6f 
 8b0:	6e                   	outsb  %ds:(%rsi),(%dx)
 8b1:	5f                   	pop    %rdi
 8b2:	62                   	(bad)  
 8b3:	65 67 69 6e 00 64 6f 	imul   $0x655f6f64,%gs:0x0(%esi),%ebp
 8ba:	5f 65 
 8bc:	6d                   	insl   (%dx),%es:(%rdi)
 8bd:	6f                   	outsl  %ds:(%rsi),(%dx)
 8be:	64 70 65             	fs jo  926 <__ImageBase+0x926>
 8c1:	00 73 67             	add    %dh,0x67(%rbx)
 8c4:	78 5f                	js     925 <__ImageBase+0x925>
 8c6:	74 63                	je     92b <__ImageBase+0x92b>
 8c8:	72 79                	jb     943 <__ImageBase+0x943>
 8ca:	70 74                	jo     940 <__ImageBase+0x940>
 8cc:	6f                   	outsl  %ds:(%rsi),(%dx)
 8cd:	5f                   	pop    %rdi
 8ce:	76 65                	jbe    935 <__ImageBase+0x935>
 8d0:	72 73                	jb     945 <__ImageBase+0x945>
 8d2:	69 6f 6e 00 63 74 5f 	imul   $0x5f746300,0x6e(%rdi),%ebp
 8d9:	64 65 63 6f 64       	fs movsxd %gs:0x64(%rdi),%ebp
 8de:	65 00 64 6f 5f       	add    %ah,%gs:0x5f(%rdi,%rbp,2)
 8e3:	65 61                	gs (bad) 
 8e5:	63 63 65             	movsxd 0x65(%rbx),%esp
 8e8:	70 74                	jo     95e <__ImageBase+0x95e>
 8ea:	63 6f 70             	movsxd 0x70(%rdi),%ebp
 8ed:	79 00                	jns    8ef <__ImageBase+0x8ef>
 8ef:	61                   	(bad)  
 8f0:	73 6d                	jae    95f <__ImageBase+0x95f>
 8f2:	5f                   	pop    %rdi
 8f3:	6f                   	outsl  %ds:(%rsi),(%dx)
 8f4:	72 65                	jb     95b <__ImageBase+0x95b>
 8f6:	74 00                	je     8f8 <__ImageBase+0x8f8>
 8f8:	64 6f                	outsl  %fs:(%rsi),(%dx)
 8fa:	5f                   	pop    %rdi
 8fb:	65 61                	gs (bad) 
 8fd:	63 63 65             	movsxd 0x65(%rbx),%esp
 900:	70 74                	jo     976 <__ImageBase+0x976>
 902:	00 5f 5a             	add    %bl,0x5a(%rdi)
 905:	39 70 63             	cmp    %esi,0x63(%rax)
 908:	6c                   	insb   (%dx),%es:(%rdi)
 909:	5f                   	pop    %rdi
 90a:	65 6e                	outsb  %gs:(%rsi),(%dx)
 90c:	74 72                	je     980 <__ImageBase+0x980>
 90e:	79 50                	jns    960 <__ImageBase+0x960>
 910:	76 53                	jbe    965 <__ImageBase+0x965>
 912:	5f                   	pop    %rdi
 913:	00 5f 5f             	add    %bl,0x5f(%rdi)
 916:	6d                   	insl   (%dx),%es:(%rdi)
 917:	65 6d                	gs insl (%dx),%es:(%rdi)
 919:	63 70 79             	movsxd 0x79(%rax),%esi
 91c:	5f                   	pop    %rdi
 91d:	38 61 00             	cmp    %ah,0x0(%rcx)
 920:	5f                   	pop    %rdi
 921:	5f                   	pop    %rdi
 922:	63 74 5f 6d          	movsxd 0x6d(%rdi,%rbx,2),%esi
 926:	69 74 69 67 61 74 69 	imul   $0x6f697461,0x67(%rcx,%rbp,2),%esi
 92d:	6f 
 92e:	6e                   	outsb  %ds:(%rsi),(%dx)
 92f:	5f                   	pop    %rdi
 930:	72 65                	jb     997 <__ImageBase+0x997>
 932:	74 00                	je     934 <__ImageBase+0x934>
 934:	5f                   	pop    %rdi
 935:	5f                   	pop    %rdi
 936:	6d                   	insl   (%dx),%es:(%rdi)
 937:	65 6d                	gs insl (%dx),%es:(%rdi)
 939:	63 70 79             	movsxd 0x79(%rax),%esi
 93c:	5f                   	pop    %rdi
 93d:	76 65                	jbe    9a4 <__ImageBase+0x9a4>
 93f:	72 77                	jb     9b8 <__ImageBase+0x9b8>
 941:	00 5f 5f             	add    %bl,0x5f(%rdi)
 944:	6d                   	insl   (%dx),%es:(%rdi)
 945:	65 6d                	gs insl (%dx),%es:(%rdi)
 947:	73 65                	jae    9ae <__ImageBase+0x9ae>
 949:	74 00                	je     94b <__ImageBase+0x94b>
 94b:	5f                   	pop    %rdi
 94c:	5f                   	pop    %rdi
 94d:	62 73                	(bad)  
 94f:	73 5f                	jae    9b0 <__ImageBase+0x9b0>
 951:	73 74                	jae    9c7 <__ImageBase+0x9c7>
 953:	61                   	(bad)  
 954:	72 74                	jb     9ca <__ImageBase+0x9ca>
 956:	00 67 5f             	add    %ah,0x5f(%rdi)
 959:	67 6c                	insb   (%dx),%es:(%edi)
 95b:	6f                   	outsl  %ds:(%rsi),(%dx)
 95c:	62 61 6c 5f 64       	(bad)
 961:	61                   	(bad)  
 962:	74 61                	je     9c5 <__ImageBase+0x9c5>
 964:	00 4c 65 76          	add    %cl,0x76(%rbp,%riz,2)
 968:	65 72 69             	gs jb  9d4 <__ImageBase+0x9d4>
 96b:	66 79 72             	data16 jns 9e0 <__ImageBase+0x9e0>
 96e:	65 70 6f             	gs jo  9e0 <__ImageBase+0x9e0>
 971:	72 74                	jb     9e7 <__ImageBase+0x9e7>
 973:	32 5f 69             	xor    0x69(%rdi),%bl
 976:	6e                   	outsb  %ds:(%rsi),(%dx)
 977:	73 74                	jae    9ed <__ImageBase+0x9ed>
 979:	00 5f 65             	add    %bl,0x65(%rdi)
 97c:	64 61                	fs (bad) 
 97e:	74 61                	je     9e1 <__ImageBase+0x9e1>
 980:	00 73 67             	add    %dh,0x67(%rbx)
 983:	78 5f                	js     9e4 <__ImageBase+0x9e4>
 985:	74 73                	je     9fa <__ImageBase+0x9fa>
 987:	65 72 76             	gs jb  a00 <__ImageBase+0xa00>
 98a:	69 63 65 5f 76 65 72 	imul   $0x7265765f,0x65(%rbx),%esp
 991:	73 69                	jae    9fc <__ImageBase+0x9fc>
 993:	6f                   	outsl  %ds:(%rsi),(%dx)
 994:	6e                   	outsb  %ds:(%rsi),(%dx)
 995:	00 5f 65             	add    %bl,0x65(%rdi)
 998:	6e                   	outsb  %ds:(%rsi),(%dx)
 999:	64 00 5f 5f          	add    %bl,%fs:0x5f(%rdi)
 99d:	65 72 72             	gs jb  a12 <__ImageBase+0xa12>
 9a0:	6e                   	outsb  %ds:(%rsi),(%dx)
 9a1:	6f                   	outsl  %ds:(%rsi),(%dx)
 9a2:	5f                   	pop    %rdi
 9a3:	6c                   	insb   (%dx),%es:(%rdi)
 9a4:	6f                   	outsl  %ds:(%rsi),(%dx)
 9a5:	63 61 74             	movsxd 0x74(%rcx),%esp
 9a8:	69 6f 6e 00 5f 73 74 	imul   $0x74735f00,0x6e(%rdi),%ebp
 9af:	72 6c                	jb     a1d <__ImageBase+0xa1d>
 9b1:	65 6e                	outsb  %gs:(%rsi),(%dx)
 9b3:	00 5f 73             	add    %bl,0x73(%rdi)
 9b6:	65 74 6a             	gs je  a23 <__ImageBase+0xa23>
 9b9:	6d                   	insl   (%dx),%es:(%rdi)
 9ba:	70 00                	jo     9bc <__ImageBase+0x9bc>
 9bc:	73 67                	jae    a25 <__ImageBase+0xa25>
 9be:	78 5f                	js     a1f <__ImageBase+0xa1f>
 9c0:	74 72                	je     a34 <__ImageBase+0xa34>
 9c2:	74 73                	je     a37 <__ImageBase+0xa37>
 9c4:	5f                   	pop    %rdi
 9c5:	76 65                	jbe    a2c <__ImageBase+0xa2c>
 9c7:	72 73                	jb     a3c <__ImageBase+0xa3c>
 9c9:	69 6f 6e 00 4c 65 72 	imul   $0x72654c00,0x6e(%rdi),%ebp
 9d0:	65 70 6f             	gs jo  a42 <__ImageBase+0xa42>
 9d3:	72 74                	jb     a49 <__ImageBase+0xa49>
 9d5:	5f                   	pop    %rdi
 9d6:	69 6e 73 74 00 61 65 	imul   $0x65610074,0x73(%rsi),%ebp
 9dd:	78 5f                	js     a3e <__ImageBase+0xa3e>
 9df:	6e                   	outsb  %ds:(%rsi),(%dx)
 9e0:	6f                   	outsl  %ds:(%rsi),(%dx)
 9e1:	74 69                	je     a4c <__ImageBase+0xa4c>
 9e3:	66 79 5f             	data16 jns a45 <__ImageBase+0xa45>
 9e6:	63 33                	movsxd (%rbx),%esi
 9e8:	5f                   	pop    %rdi
 9e9:	63 61 63             	movsxd 0x63(%rcx),%esp
 9ec:	68 65 00 67 5f       	push   $0x5f670065
 9f1:	70 65                	jo     a58 <__ImageBase+0xa58>
 9f3:	61                   	(bad)  
 9f4:	6b 5f 68 65          	imul   $0x65,0x68(%rdi),%ebx
 9f8:	61                   	(bad)  
 9f9:	70 5f                	jo     a5a <__ImageBase+0xa5a>
 9fb:	75 73                	jne    a70 <__ImageBase+0xa70>
 9fd:	65 64 00 69 70       	gs add %ch,%fs:0x70(%rcx)
 a02:	70 63                	jo     a67 <__ImageBase+0xa67>
 a04:	70 53                	jo     a59 <__ImageBase+0xa59>
 a06:	65 74 43             	gs je  a4c <__ImageBase+0xa4c>
 a09:	70 75                	jo     a80 <__ImageBase+0xa80>
 a0b:	46                   	rex.RX
 a0c:	65 61                	gs (bad) 
 a0e:	74 75                	je     a85 <__ImageBase+0xa85>
 a10:	72 65                	jb     a77 <__ImageBase+0xa77>
 a12:	73 00                	jae    a14 <__ImageBase+0xa14>

Disassembly of section .rela.dyn:

0000000000000a18 <.rela.dyn>:
 a18:	a0 7d 01 00 00 00 00 	movabs 0x80000000000017d,%al
 a1f:	00 08 
	...
 a29:	20 00                	and    %al,(%rax)
 a2b:	00 00                	add    %al,(%rax)
 a2d:	00 00                	add    %al,(%rax)
 a2f:	00 a8 7d 01 00 00    	add    %ch,0x17d(%rax)
 a35:	00 00                	add    %al,(%rax)
 a37:	00 08                	add    %cl,(%rax)
 a39:	00 00                	add    %al,(%rax)
 a3b:	00 00                	add    %al,(%rax)
 a3d:	00 00                	add    %al,(%rax)
 a3f:	00 10                	add    %dl,(%rax)
 a41:	20 00                	and    %al,(%rax)
 a43:	00 00                	add    %al,(%rax)
 a45:	00 00                	add    %al,(%rax)
 a47:	00 b0 7d 01 00 00    	add    %dh,0x17d(%rax)
 a4d:	00 00                	add    %al,(%rax)
 a4f:	00 08                	add    %cl,(%rax)
 a51:	00 00                	add    %al,(%rax)
 a53:	00 00                	add    %al,(%rax)
 a55:	00 00                	add    %al,(%rax)
 a57:	00 30                	add    %dh,(%rax)
 a59:	20 00                	and    %al,(%rax)
 a5b:	00 00                	add    %al,(%rax)
 a5d:	00 00                	add    %al,(%rax)
 a5f:	00 b8 7d 01 00 00    	add    %bh,0x17d(%rax)
 a65:	00 00                	add    %al,(%rax)
 a67:	00 08                	add    %cl,(%rax)
 a69:	00 00                	add    %al,(%rax)
 a6b:	00 00                	add    %al,(%rax)
 a6d:	00 00                	add    %al,(%rax)
 a6f:	00 50 20             	add    %dl,0x20(%rax)
 a72:	00 00                	add    %al,(%rax)
 a74:	00 00                	add    %al,(%rax)
 a76:	00 00                	add    %al,(%rax)
 a78:	c8 7d 01 00          	enter  $0x17d,$0x0
 a7c:	00 00                	add    %al,(%rax)
 a7e:	00 00                	add    %al,(%rax)
 a80:	08 00                	or     %al,(%rax)
 a82:	00 00                	add    %al,(%rax)
 a84:	00 00                	add    %al,(%rax)
 a86:	00 00                	add    %al,(%rax)
 a88:	06                   	(bad)  
 a89:	40 00 00             	rex add %al,(%rax)
 a8c:	00 00                	add    %al,(%rax)
 a8e:	00 00                	add    %al,(%rax)
 a90:	d8 7d 01             	fdivrs 0x1(%rbp)
 a93:	00 00                	add    %al,(%rax)
 a95:	00 00                	add    %al,(%rax)
 a97:	00 08                	add    %cl,(%rax)
 a99:	00 00                	add    %al,(%rax)
 a9b:	00 00                	add    %al,(%rax)
 a9d:	00 00                	add    %al,(%rax)
 a9f:	00 62 41             	add    %ah,0x41(%rdx)
 aa2:	00 00                	add    %al,(%rax)
 aa4:	00 00                	add    %al,(%rax)
 aa6:	00 00                	add    %al,(%rax)
 aa8:	e8 7d 01 00 00       	call   c2a <__ImageBase+0xc2a>
 aad:	00 00                	add    %al,(%rax)
 aaf:	00 08                	add    %cl,(%rax)
	...
 ab9:	41 00 00             	add    %al,(%r8)
 abc:	00 00                	add    %al,(%rax)
 abe:	00 00                	add    %al,(%rax)
 ac0:	48 7e 01             	rex.W jle ac4 <__ImageBase+0xac4>
 ac3:	00 00                	add    %al,(%rax)
 ac5:	00 00                	add    %al,(%rax)
 ac7:	00 08                	add    %cl,(%rax)
 ac9:	00 00                	add    %al,(%rax)
 acb:	00 00                	add    %al,(%rax)
 acd:	00 00                	add    %al,(%rax)
 acf:	00 c0                	add    %al,%al
 ad1:	08 01                	or     %al,(%rcx)
 ad3:	00 00                	add    %al,(%rax)
 ad5:	00 00                	add    %al,(%rax)
 ad7:	00 c8                	add    %cl,%al
 ad9:	7f 01                	jg     adc <__ImageBase+0xadc>
 adb:	00 00                	add    %al,(%rax)
 add:	00 00                	add    %al,(%rax)
 adf:	00 08                	add    %cl,(%rax)
 ae1:	00 00                	add    %al,(%rax)
 ae3:	00 00                	add    %al,(%rax)
 ae5:	00 00                	add    %al,(%rax)
 ae7:	00 b3 24 01 00 00    	add    %dh,0x124(%rbx)
 aed:	00 00                	add    %al,(%rax)
 aef:	00 d0                	add    %dl,%al
 af1:	7f 01                	jg     af4 <__ImageBase+0xaf4>
 af3:	00 00                	add    %al,(%rax)
 af5:	00 00                	add    %al,(%rax)
 af7:	00 08                	add    %cl,(%rax)
 af9:	00 00                	add    %al,(%rax)
 afb:	00 00                	add    %al,(%rax)
 afd:	00 00                	add    %al,(%rax)
 aff:	00 95 24 01 00 00    	add    %dl,0x124(%rbp)
 b05:	00 00                	add    %al,(%rax)
 b07:	00 d8                	add    %bl,%al
 b09:	7f 01                	jg     b0c <__ImageBase+0xb0c>
 b0b:	00 00                	add    %al,(%rax)
 b0d:	00 00                	add    %al,(%rax)
 b0f:	00 08                	add    %cl,(%rax)
	...
 b19:	90                   	nop
 b1a:	01 00                	add    %eax,(%rax)
 b1c:	00 00                	add    %al,(%rax)
 b1e:	00 00                	add    %al,(%rax)
 b20:	00 80 01 00 00 00    	add    %al,0x1(%rax)
 b26:	00 00                	add    %al,(%rax)
 b28:	08 00                	or     %al,(%rax)
 b2a:	00 00                	add    %al,(%rax)
 b2c:	00 00                	add    %al,(%rax)
 b2e:	00 00                	add    %al,(%rax)
 b30:	83 30 01             	xorl   $0x1,(%rax)
 b33:	00 00                	add    %al,(%rax)
 b35:	00 00                	add    %al,(%rax)
 b37:	00 50 82             	add    %dl,-0x7e(%rax)
 b3a:	01 00                	add    %eax,(%rax)
 b3c:	00 00                	add    %al,(%rax)
 b3e:	00 00                	add    %al,(%rax)
 b40:	08 00                	or     %al,(%rax)
 b42:	00 00                	add    %al,(%rax)
 b44:	00 00                	add    %al,(%rax)
 b46:	00 00                	add    %al,(%rax)
 b48:	50                   	push   %rax
 b49:	82                   	(bad)  
 b4a:	01 00                	add    %eax,(%rax)
 b4c:	00 00                	add    %al,(%rax)
 b4e:	00 00                	add    %al,(%rax)
 b50:	00 a0 01 00 00 00    	add    %ah,0x1(%rax)
 b56:	00 00                	add    %al,(%rax)
 b58:	08 00                	or     %al,(%rax)
 b5a:	00 00                	add    %al,(%rax)
 b5c:	00 00                	add    %al,(%rax)
 b5e:	00 00                	add    %al,(%rax)
 b60:	20 a0 01 00 00 00    	and    %ah,0x1(%rax)
 b66:	00 00                	add    %al,(%rax)
 b68:	58                   	pop    %rax
 b69:	a0 01 00 00 00 00 00 	movabs 0x8000000000001,%al
 b70:	08 00 
 b72:	00 00                	add    %al,(%rax)
 b74:	00 00                	add    %al,(%rax)
 b76:	00 00                	add    %al,(%rax)
 b78:	20 a0 01 00 00 00    	and    %ah,0x1(%rax)
 b7e:	00 00                	add    %al,(%rax)
 b80:	60                   	(bad)  
 b81:	a0 01 00 00 00 00 00 	movabs 0x8000000000001,%al
 b88:	08 00 
 b8a:	00 00                	add    %al,(%rax)
 b8c:	00 00                	add    %al,(%rax)
 b8e:	00 00                	add    %al,(%rax)
 b90:	20 a0 01 00 00 00    	and    %ah,0x1(%rax)
 b96:	00 00                	add    %al,(%rax)
 b98:	68 a0 01 00 00       	push   $0x1a0
 b9d:	00 00                	add    %al,(%rax)
 b9f:	00 08                	add    %cl,(%rax)
 ba1:	00 00                	add    %al,(%rax)
 ba3:	00 00                	add    %al,(%rax)
 ba5:	00 00                	add    %al,(%rax)
 ba7:	00 80 a0 01 00 00    	add    %al,0x1a0(%rax)
 bad:	00 00                	add    %al,(%rax)
 baf:	00 b8 a0 01 00 00    	add    %bh,0x1a0(%rax)
 bb5:	00 00                	add    %al,(%rax)
 bb7:	00 08                	add    %cl,(%rax)
 bb9:	00 00                	add    %al,(%rax)
 bbb:	00 00                	add    %al,(%rax)
 bbd:	00 00                	add    %al,(%rax)
 bbf:	00 80 a0 01 00 00    	add    %al,0x1a0(%rax)
 bc5:	00 00                	add    %al,(%rax)
 bc7:	00 c0                	add    %al,%al
 bc9:	a0 01 00 00 00 00 00 	movabs 0x8000000000001,%al
 bd0:	08 00 
 bd2:	00 00                	add    %al,(%rax)
 bd4:	00 00                	add    %al,(%rax)
 bd6:	00 00                	add    %al,(%rax)
 bd8:	80 a0 01 00 00 00 00 	andb   $0x0,0x1(%rax)
 bdf:	00 c0                	add    %al,%al
 be1:	7f 01                	jg     be4 <__ImageBase+0xbe4>
 be3:	00 00                	add    %al,(%rax)
 be5:	00 00                	add    %al,(%rax)
 be7:	00 06                	add    %al,(%rsi)
 be9:	00 00                	add    %al,(%rax)
 beb:	00 01                	add    %al,(%rcx)
	...
 bf5:	00 00                	add    %al,(%rax)
 bf7:	00 e0                	add    %ah,%al
 bf9:	7f 01                	jg     bfc <__ImageBase+0xbfc>
 bfb:	00 00                	add    %al,(%rax)
 bfd:	00 00                	add    %al,(%rax)
 bff:	00 06                	add    %al,(%rsi)
 c01:	00 00                	add    %al,(%rax)
 c03:	00 02                	add    %al,(%rdx)
	...

Disassembly of section .plt:

0000000000001000 <.plt>:
    1000:	ff 35 aa 6f 01 00    	push   0x16faa(%rip)        # 17fb0 <_GLOBAL_OFFSET_TABLE_+0x8>
    1006:	ff 25 ac 6f 01 00    	jmp    *0x16fac(%rip)        # 17fb8 <_GLOBAL_OFFSET_TABLE_+0x10>
    100c:	0f 1f 40 00          	nopl   0x0(%rax)

Disassembly of section .plt.got:

0000000000001010 <_Z9pcl_entryPvS_@plt>:
    1010:	ff 25 aa 6f 01 00    	jmp    *0x16faa(%rip)        # 17fc0 <_Z9pcl_entryPvS_>
    1016:	66 90                	xchg   %ax,%ax

0000000000001018 <ippcpSetCpuFeatures@plt>:
    1018:	ff 25 c2 6f 01 00    	jmp    *0x16fc2(%rip)        # 17fe0 <ippcpSetCpuFeatures>
    101e:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000002000 <trts_access_version_dummy1>:
    2000:	f3 0f 1e fa          	endbr64 
    2004:	48 8d 05 25 62 01 00 	lea    0x16225(%rip),%rax        # 18230 <sgx_trts_version>
    200b:	c6 00 73             	movb   $0x73,(%rax)
    200e:	c3                   	ret    
    200f:	90                   	nop

0000000000002010 <tstdc_access_version_dummy1>:
    2010:	f3 0f 1e fa          	endbr64 
    2014:	c6 05 c5 80 01 00 73 	movb   $0x73,0x180c5(%rip)        # 1a0e0 <sgx_tstdc_version>
    201b:	48 8d 05 be 80 01 00 	lea    0x180be(%rip),%rax        # 1a0e0 <sgx_tstdc_version>
    2022:	c3                   	ret    
    2023:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    202a:	00 00 00 
    202d:	0f 1f 00             	nopl   (%rax)

0000000000002030 <tcrypto_access_version_dummy1>:
    2030:	f3 0f 1e fa          	endbr64 
    2034:	c6 05 c5 80 01 00 73 	movb   $0x73,0x180c5(%rip)        # 1a100 <sgx_tcrypto_version>
    203b:	48 8d 05 be 80 01 00 	lea    0x180be(%rip),%rax        # 1a100 <sgx_tcrypto_version>
    2042:	c3                   	ret    
    2043:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    204a:	00 00 00 
    204d:	0f 1f 00             	nopl   (%rax)

0000000000002050 <tservice_access_version_dummy1>:
    2050:	f3 0f 1e fa          	endbr64 
    2054:	c6 05 c5 80 01 00 73 	movb   $0x73,0x180c5(%rip)        # 1a120 <sgx_tservice_version>
    205b:	48 8d 05 be 80 01 00 	lea    0x180be(%rip),%rax        # 1a120 <sgx_tservice_version>
    2062:	c3                   	ret    

0000000000002063 <ecall_login>:
    2063:	f3 0f 1e fa          	endbr64 
    2067:	83 3d f6 80 01 00 00 	cmpl   $0x0,0x180f6(%rip)        # 1a164 <currentDeviceId>
    206e:	75 49                	jne    20b9 <ecall_login+0x56>
    2070:	41 50                	push   %r8
    2072:	89 f8                	mov    %edi,%eax
    2074:	48 89 f7             	mov    %rsi,%rdi
    2077:	48 8b 35 82 5f 01 00 	mov    0x15f82(%rip),%rsi        # 18000 <password>
    207e:	89 05 e0 80 01 00    	mov    %eax,0x180e0(%rip)        # 1a164 <currentDeviceId>
    2084:	e8 f7 e8 00 00       	call   10980 <strcmp>
    2089:	85 c0                	test   %eax,%eax
    208b:	75 18                	jne    20a5 <ecall_login+0x42>
    208d:	48 8d 3d 6c 0f 01 00 	lea    0x10f6c(%rip),%rdi        # 13000 <second_phase+0xa50>
    2094:	e8 2b 21 00 00       	call   41c4 <ocall_print>
    2099:	c7 05 bd 80 01 00 01 	movl   $0x1,0x180bd(%rip)        # 1a160 <is_authenticated>
    20a0:	00 00 00 
    20a3:	59                   	pop    %rcx
    20a4:	c3                   	ret    
    20a5:	31 c0                	xor    %eax,%eax
    20a7:	48 8d 3d 7c 0f 01 00 	lea    0x10f7c(%rip),%rdi        # 1302a <second_phase+0xa7a>
    20ae:	89 05 b0 80 01 00    	mov    %eax,0x180b0(%rip)        # 1a164 <currentDeviceId>
    20b4:	31 c0                	xor    %eax,%eax
    20b6:	5a                   	pop    %rdx
    20b7:	eb 09                	jmp    20c2 <ecall_login+0x5f>
    20b9:	48 8d 3d 81 0f 01 00 	lea    0x10f81(%rip),%rdi        # 13041 <second_phase+0xa91>
    20c0:	31 c0                	xor    %eax,%eax
    20c2:	e9 fd 20 00 00       	jmp    41c4 <ocall_print>

00000000000020c7 <ecall_logout>:
    20c7:	f3 0f 1e fa          	endbr64 
    20cb:	39 3d 93 80 01 00    	cmp    %edi,0x18093(%rip)        # 1a164 <currentDeviceId>
    20d1:	75 1c                	jne    20ef <ecall_logout+0x28>
    20d3:	31 c0                	xor    %eax,%eax
    20d5:	48 8d 3d 84 0f 01 00 	lea    0x10f84(%rip),%rdi        # 13060 <second_phase+0xab0>
    20dc:	89 05 82 80 01 00    	mov    %eax,0x18082(%rip)        # 1a164 <currentDeviceId>
    20e2:	89 05 78 80 01 00    	mov    %eax,0x18078(%rip)        # 1a160 <is_authenticated>
    20e8:	31 c0                	xor    %eax,%eax
    20ea:	e9 d5 20 00 00       	jmp    41c4 <ocall_print>
    20ef:	c3                   	ret    

00000000000020f0 <ecall_get_password>:
    20f0:	f3 0f 1e fa          	endbr64 
    20f4:	39 3d 6a 80 01 00    	cmp    %edi,0x1806a(%rip)        # 1a164 <currentDeviceId>
    20fa:	75 12                	jne    210e <ecall_get_password+0x1e>
    20fc:	83 3d 5d 80 01 00 00 	cmpl   $0x0,0x1805d(%rip)        # 1a160 <is_authenticated>
    2103:	48 8b 3d f6 5e 01 00 	mov    0x15ef6(%rip),%rdi        # 18000 <password>
    210a:	74 10                	je     211c <ecall_get_password+0x2c>
    210c:	eb 07                	jmp    2115 <ecall_get_password+0x25>
    210e:	48 8d 3d 5f 0f 01 00 	lea    0x10f5f(%rip),%rdi        # 13074 <second_phase+0xac4>
    2115:	31 c0                	xor    %eax,%eax
    2117:	e9 a8 20 00 00       	jmp    41c4 <ocall_print>
    211c:	c3                   	ret    
    211d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2124:	00 00 00 
    2127:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    212e:	00 00 00 
    2131:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2138:	00 00 00 
    213b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2142:	00 00 00 
    2145:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    214c:	00 00 00 
    214f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2156:	00 00 00 
    2159:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2160:	00 00 00 
    2163:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    216a:	00 00 00 
    216d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2174:	00 00 00 
    2177:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    217e:	00 00 00 
    2181:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2188:	00 00 00 
    218b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2192:	00 00 00 
    2195:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    219c:	00 00 00 
    219f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21a6:	00 00 00 
    21a9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21b0:	00 00 00 
    21b3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21ba:	00 00 00 
    21bd:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21c4:	00 00 00 
    21c7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21ce:	00 00 00 
    21d1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21d8:	00 00 00 
    21db:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21e2:	00 00 00 
    21e5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21ec:	00 00 00 
    21ef:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21f6:	00 00 00 
    21f9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2200:	00 00 00 
    2203:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    220a:	00 00 00 
    220d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2214:	00 00 00 
    2217:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    221e:	00 00 00 
    2221:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2228:	00 00 00 
    222b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2232:	00 00 00 
    2235:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    223c:	00 00 00 
    223f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2246:	00 00 00 
    2249:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2250:	00 00 00 
    2253:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    225a:	00 00 00 
    225d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2264:	00 00 00 
    2267:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    226e:	00 00 00 
    2271:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2278:	00 00 00 
    227b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2282:	00 00 00 
    2285:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    228c:	00 00 00 
    228f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2296:	00 00 00 
    2299:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22a0:	00 00 00 
    22a3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22aa:	00 00 00 
    22ad:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22b4:	00 00 00 
    22b7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22be:	00 00 00 
    22c1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22c8:	00 00 00 
    22cb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22d2:	00 00 00 
    22d5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22dc:	00 00 00 
    22df:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22e6:	00 00 00 
    22e9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22f0:	00 00 00 
    22f3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22fa:	00 00 00 
    22fd:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2304:	00 00 00 
    2307:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    230e:	00 00 00 
    2311:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2318:	00 00 00 
    231b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2322:	00 00 00 
    2325:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    232c:	00 00 00 
    232f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2336:	00 00 00 
    2339:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2340:	00 00 00 
    2343:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    234a:	00 00 00 
    234d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2354:	00 00 00 
    2357:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    235e:	00 00 00 
    2361:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2368:	00 00 00 
    236b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2372:	00 00 00 
    2375:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    237c:	00 00 00 
    237f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2386:	00 00 00 
    2389:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2390:	00 00 00 
    2393:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    239a:	00 00 00 
    239d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23a4:	00 00 00 
    23a7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23ae:	00 00 00 
    23b1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23b8:	00 00 00 
    23bb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23c2:	00 00 00 
    23c5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23cc:	00 00 00 
    23cf:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23d6:	00 00 00 
    23d9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23e0:	00 00 00 
    23e3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23ea:	00 00 00 
    23ed:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23f4:	00 00 00 
    23f7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23fe:	00 00 00 
    2401:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2408:	00 00 00 
    240b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2412:	00 00 00 
    2415:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    241c:	00 00 00 
    241f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2426:	00 00 00 
    2429:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2430:	00 00 00 
    2433:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    243a:	00 00 00 
    243d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2444:	00 00 00 
    2447:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    244e:	00 00 00 
    2451:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2458:	00 00 00 
    245b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2462:	00 00 00 
    2465:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    246c:	00 00 00 
    246f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2476:	00 00 00 
    2479:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2480:	00 00 00 
    2483:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    248a:	00 00 00 
    248d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2494:	00 00 00 
    2497:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    249e:	00 00 00 
    24a1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24a8:	00 00 00 
    24ab:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24b2:	00 00 00 
    24b5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24bc:	00 00 00 
    24bf:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24c6:	00 00 00 
    24c9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24d0:	00 00 00 
    24d3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24da:	00 00 00 
    24dd:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24e4:	00 00 00 
    24e7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24ee:	00 00 00 
    24f1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24f8:	00 00 00 
    24fb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2502:	00 00 00 
    2505:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    250c:	00 00 00 
    250f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2516:	00 00 00 
    2519:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2520:	00 00 00 
    2523:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    252a:	00 00 00 
    252d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2534:	00 00 00 
    2537:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    253e:	00 00 00 
    2541:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2548:	00 00 00 
    254b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2552:	00 00 00 
    2555:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    255c:	00 00 00 
    255f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2566:	00 00 00 
    2569:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2570:	00 00 00 
    2573:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    257a:	00 00 00 
    257d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2584:	00 00 00 
    2587:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    258e:	00 00 00 
    2591:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2598:	00 00 00 
    259b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25a2:	00 00 00 
    25a5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25ac:	00 00 00 
    25af:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25b6:	00 00 00 
    25b9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25c0:	00 00 00 
    25c3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25ca:	00 00 00 
    25cd:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25d4:	00 00 00 
    25d7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25de:	00 00 00 
    25e1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25e8:	00 00 00 
    25eb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25f2:	00 00 00 
    25f5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25fc:	00 00 00 
    25ff:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2606:	00 00 00 
    2609:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2610:	00 00 00 
    2613:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    261a:	00 00 00 
    261d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2624:	00 00 00 
    2627:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    262e:	00 00 00 
    2631:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2638:	00 00 00 
    263b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2642:	00 00 00 
    2645:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    264c:	00 00 00 
    264f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2656:	00 00 00 
    2659:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2660:	00 00 00 
    2663:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    266a:	00 00 00 
    266d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2674:	00 00 00 
    2677:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    267e:	00 00 00 
    2681:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2688:	00 00 00 
    268b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2692:	00 00 00 
    2695:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    269c:	00 00 00 
    269f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26a6:	00 00 00 
    26a9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26b0:	00 00 00 
    26b3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26ba:	00 00 00 
    26bd:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26c4:	00 00 00 
    26c7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26ce:	00 00 00 
    26d1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26d8:	00 00 00 
    26db:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26e2:	00 00 00 
    26e5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26ec:	00 00 00 
    26ef:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26f6:	00 00 00 
    26f9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2700:	00 00 00 
    2703:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    270a:	00 00 00 
    270d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2714:	00 00 00 
    2717:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    271e:	00 00 00 
    2721:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2728:	00 00 00 
    272b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2732:	00 00 00 
    2735:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    273c:	00 00 00 
    273f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2746:	00 00 00 
    2749:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2750:	00 00 00 
    2753:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    275a:	00 00 00 
    275d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2764:	00 00 00 
    2767:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    276e:	00 00 00 
    2771:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2778:	00 00 00 
    277b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2782:	00 00 00 
    2785:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    278c:	00 00 00 
    278f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2796:	00 00 00 
    2799:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27a0:	00 00 00 
    27a3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27aa:	00 00 00 
    27ad:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27b4:	00 00 00 
    27b7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27be:	00 00 00 
    27c1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27c8:	00 00 00 
    27cb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27d2:	00 00 00 
    27d5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27dc:	00 00 00 
    27df:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27e6:	00 00 00 
    27e9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27f0:	00 00 00 
    27f3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27fa:	00 00 00 
    27fd:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2804:	00 00 00 
    2807:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    280e:	00 00 00 
    2811:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2818:	00 00 00 
    281b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2822:	00 00 00 
    2825:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    282c:	00 00 00 
    282f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2836:	00 00 00 
    2839:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2840:	00 00 00 
    2843:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    284a:	00 00 00 
    284d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2854:	00 00 00 
    2857:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    285e:	00 00 00 
    2861:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2868:	00 00 00 
    286b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2872:	00 00 00 
    2875:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    287c:	00 00 00 
    287f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2886:	00 00 00 
    2889:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2890:	00 00 00 
    2893:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    289a:	00 00 00 
    289d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28a4:	00 00 00 
    28a7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28ae:	00 00 00 
    28b1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28b8:	00 00 00 
    28bb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28c2:	00 00 00 
    28c5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28cc:	00 00 00 
    28cf:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28d6:	00 00 00 
    28d9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28e0:	00 00 00 
    28e3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28ea:	00 00 00 
    28ed:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28f4:	00 00 00 
    28f7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28fe:	00 00 00 
    2901:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2908:	00 00 00 
    290b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2912:	00 00 00 
    2915:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    291c:	00 00 00 
    291f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2926:	00 00 00 
    2929:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2930:	00 00 00 
    2933:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    293a:	00 00 00 
    293d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2944:	00 00 00 
    2947:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    294e:	00 00 00 
    2951:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2958:	00 00 00 
    295b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2962:	00 00 00 
    2965:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    296c:	00 00 00 
    296f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2976:	00 00 00 
    2979:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2980:	00 00 00 
    2983:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    298a:	00 00 00 
    298d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2994:	00 00 00 
    2997:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    299e:	00 00 00 
    29a1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29a8:	00 00 00 
    29ab:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29b2:	00 00 00 
    29b5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29bc:	00 00 00 
    29bf:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29c6:	00 00 00 
    29c9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29d0:	00 00 00 
    29d3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29da:	00 00 00 
    29dd:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29e4:	00 00 00 
    29e7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29ee:	00 00 00 
    29f1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29f8:	00 00 00 
    29fb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a02:	00 00 00 
    2a05:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a0c:	00 00 00 
    2a0f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a16:	00 00 00 
    2a19:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a20:	00 00 00 
    2a23:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a2a:	00 00 00 
    2a2d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a34:	00 00 00 
    2a37:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a3e:	00 00 00 
    2a41:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a48:	00 00 00 
    2a4b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a52:	00 00 00 
    2a55:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a5c:	00 00 00 
    2a5f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a66:	00 00 00 
    2a69:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a70:	00 00 00 
    2a73:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a7a:	00 00 00 
    2a7d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a84:	00 00 00 
    2a87:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a8e:	00 00 00 
    2a91:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a98:	00 00 00 
    2a9b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2aa2:	00 00 00 
    2aa5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2aac:	00 00 00 
    2aaf:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ab6:	00 00 00 
    2ab9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ac0:	00 00 00 
    2ac3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2aca:	00 00 00 
    2acd:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ad4:	00 00 00 
    2ad7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ade:	00 00 00 
    2ae1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ae8:	00 00 00 
    2aeb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2af2:	00 00 00 
    2af5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2afc:	00 00 00 
    2aff:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b06:	00 00 00 
    2b09:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b10:	00 00 00 
    2b13:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b1a:	00 00 00 
    2b1d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b24:	00 00 00 
    2b27:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b2e:	00 00 00 
    2b31:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b38:	00 00 00 
    2b3b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b42:	00 00 00 
    2b45:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b4c:	00 00 00 
    2b4f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b56:	00 00 00 
    2b59:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b60:	00 00 00 
    2b63:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b6a:	00 00 00 
    2b6d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b74:	00 00 00 
    2b77:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b7e:	00 00 00 
    2b81:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b88:	00 00 00 
    2b8b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b92:	00 00 00 
    2b95:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b9c:	00 00 00 
    2b9f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ba6:	00 00 00 
    2ba9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2bb0:	00 00 00 
    2bb3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2bba:	00 00 00 
    2bbd:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2bc4:	00 00 00 
    2bc7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2bce:	00 00 00 
    2bd1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2bd8:	00 00 00 
    2bdb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2be2:	00 00 00 
    2be5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2bec:	00 00 00 
    2bef:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2bf6:	00 00 00 
    2bf9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c00:	00 00 00 
    2c03:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c0a:	00 00 00 
    2c0d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c14:	00 00 00 
    2c17:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c1e:	00 00 00 
    2c21:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c28:	00 00 00 
    2c2b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c32:	00 00 00 
    2c35:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c3c:	00 00 00 
    2c3f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c46:	00 00 00 
    2c49:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c50:	00 00 00 
    2c53:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c5a:	00 00 00 
    2c5d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c64:	00 00 00 
    2c67:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c6e:	00 00 00 
    2c71:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c78:	00 00 00 
    2c7b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c82:	00 00 00 
    2c85:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c8c:	00 00 00 
    2c8f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c96:	00 00 00 
    2c99:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ca0:	00 00 00 
    2ca3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2caa:	00 00 00 
    2cad:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2cb4:	00 00 00 
    2cb7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2cbe:	00 00 00 
    2cc1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2cc8:	00 00 00 
    2ccb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2cd2:	00 00 00 
    2cd5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2cdc:	00 00 00 
    2cdf:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ce6:	00 00 00 
    2ce9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2cf0:	00 00 00 
    2cf3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2cfa:	00 00 00 
    2cfd:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d04:	00 00 00 
    2d07:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d0e:	00 00 00 
    2d11:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d18:	00 00 00 
    2d1b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d22:	00 00 00 
    2d25:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d2c:	00 00 00 
    2d2f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d36:	00 00 00 
    2d39:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d40:	00 00 00 
    2d43:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d4a:	00 00 00 
    2d4d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d54:	00 00 00 
    2d57:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d5e:	00 00 00 
    2d61:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d68:	00 00 00 
    2d6b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d72:	00 00 00 
    2d75:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d7c:	00 00 00 
    2d7f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d86:	00 00 00 
    2d89:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d90:	00 00 00 
    2d93:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d9a:	00 00 00 
    2d9d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2da4:	00 00 00 
    2da7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2dae:	00 00 00 
    2db1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2db8:	00 00 00 
    2dbb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2dc2:	00 00 00 
    2dc5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2dcc:	00 00 00 
    2dcf:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2dd6:	00 00 00 
    2dd9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2de0:	00 00 00 
    2de3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2dea:	00 00 00 
    2ded:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2df4:	00 00 00 
    2df7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2dfe:	00 00 00 
    2e01:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e08:	00 00 00 
    2e0b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e12:	00 00 00 
    2e15:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e1c:	00 00 00 
    2e1f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e26:	00 00 00 
    2e29:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e30:	00 00 00 
    2e33:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e3a:	00 00 00 
    2e3d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e44:	00 00 00 
    2e47:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e4e:	00 00 00 
    2e51:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e58:	00 00 00 
    2e5b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e62:	00 00 00 
    2e65:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e6c:	00 00 00 
    2e6f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e76:	00 00 00 
    2e79:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e80:	00 00 00 
    2e83:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e8a:	00 00 00 
    2e8d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e94:	00 00 00 
    2e97:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e9e:	00 00 00 
    2ea1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ea8:	00 00 00 
    2eab:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2eb2:	00 00 00 
    2eb5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ebc:	00 00 00 
    2ebf:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ec6:	00 00 00 
    2ec9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ed0:	00 00 00 
    2ed3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2eda:	00 00 00 
    2edd:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ee4:	00 00 00 
    2ee7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2eee:	00 00 00 
    2ef1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ef8:	00 00 00 
    2efb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f02:	00 00 00 
    2f05:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f0c:	00 00 00 
    2f0f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f16:	00 00 00 
    2f19:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f20:	00 00 00 
    2f23:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f2a:	00 00 00 
    2f2d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f34:	00 00 00 
    2f37:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f3e:	00 00 00 
    2f41:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f48:	00 00 00 
    2f4b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f52:	00 00 00 
    2f55:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f5c:	00 00 00 
    2f5f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f66:	00 00 00 
    2f69:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f70:	00 00 00 
    2f73:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f7a:	00 00 00 
    2f7d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f84:	00 00 00 
    2f87:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f8e:	00 00 00 
    2f91:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f98:	00 00 00 
    2f9b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2fa2:	00 00 00 
    2fa5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2fac:	00 00 00 
    2faf:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2fb6:	00 00 00 
    2fb9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2fc0:	00 00 00 
    2fc3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2fca:	00 00 00 
    2fcd:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2fd4:	00 00 00 
    2fd7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2fde:	00 00 00 
    2fe1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2fe8:	00 00 00 
    2feb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ff2:	00 00 00 
    2ff5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ffc:	00 00 00 
    2fff:	90                   	nop

0000000000003000 <test_dummy>:
    3000:	b8 00 00 00 00       	mov    $0x0,%eax
    3005:	c3                   	ret    
	...

0000000000004006 <sgx_ecall_login>:
    4006:	f3 0f 1e fa          	endbr64 
    400a:	41 55                	push   %r13
    400c:	41 54                	push   %r12
    400e:	55                   	push   %rbp
    400f:	53                   	push   %rbx
    4010:	48 83 ec 28          	sub    $0x28,%rsp
    4014:	48 85 ff             	test   %rdi,%rdi
    4017:	75 0b                	jne    4024 <sgx_ecall_login+0x1e>
    4019:	41 bc 02 00 00 00    	mov    $0x2,%r12d
    401f:	e9 ce 00 00 00       	jmp    40f2 <sgx_ecall_login+0xec>
    4024:	be 18 00 00 00       	mov    $0x18,%esi
    4029:	48 89 fb             	mov    %rdi,%rbx
    402c:	e8 8f 1b 00 00       	call   5bc0 <sgx_is_outside_enclave>
    4031:	85 c0                	test   %eax,%eax
    4033:	74 e4                	je     4019 <sgx_ecall_login+0x13>
    4035:	0f ae e8             	lfence 
    4038:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    403d:	b9 18 00 00 00       	mov    $0x18,%ecx
    4042:	48 89 da             	mov    %rbx,%rdx
    4045:	be 18 00 00 00       	mov    $0x18,%esi
    404a:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    4050:	e8 8b cb 00 00       	call   10be0 <memcpy_s>
    4055:	85 c0                	test   %eax,%eax
    4057:	0f 85 95 00 00 00    	jne    40f2 <sgx_ecall_login+0xec>
    405d:	4c 8b 6c 24 10       	mov    0x10(%rsp),%r13
    4062:	48 8b 6c 24 18       	mov    0x18(%rsp),%rbp
    4067:	4d 85 ed             	test   %r13,%r13
    406a:	75 11                	jne    407d <sgx_ecall_login+0x77>
    406c:	0f ae e8             	lfence 
    406f:	4d 85 ed             	test   %r13,%r13
    4072:	74 05                	je     4079 <sgx_ecall_login+0x73>
    4074:	48 85 ed             	test   %rbp,%rbp
    4077:	75 15                	jne    408e <sgx_ecall_login+0x88>
    4079:	31 db                	xor    %ebx,%ebx
    407b:	eb 59                	jmp    40d6 <sgx_ecall_login+0xd0>
    407d:	48 89 ee             	mov    %rbp,%rsi
    4080:	4c 89 ef             	mov    %r13,%rdi
    4083:	e8 38 1b 00 00       	call   5bc0 <sgx_is_outside_enclave>
    4088:	85 c0                	test   %eax,%eax
    408a:	75 e0                	jne    406c <sgx_ecall_login+0x66>
    408c:	eb 8b                	jmp    4019 <sgx_ecall_login+0x13>
    408e:	48 89 ef             	mov    %rbp,%rdi
    4091:	41 bc 03 00 00 00    	mov    $0x3,%r12d
    4097:	e8 44 90 00 00       	call   d0e0 <dlmalloc>
    409c:	48 89 c3             	mov    %rax,%rbx
    409f:	48 85 c0             	test   %rax,%rax
    40a2:	74 4e                	je     40f2 <sgx_ecall_login+0xec>
    40a4:	48 89 e9             	mov    %rbp,%rcx
    40a7:	4c 89 ea             	mov    %r13,%rdx
    40aa:	48 89 ee             	mov    %rbp,%rsi
    40ad:	48 89 c7             	mov    %rax,%rdi
    40b0:	e8 2b cb 00 00       	call   10be0 <memcpy_s>
    40b5:	85 c0                	test   %eax,%eax
    40b7:	75 15                	jne    40ce <sgx_ecall_login+0xc8>
    40b9:	c6 44 2b ff 00       	movb   $0x0,-0x1(%rbx,%rbp,1)
    40be:	48 89 df             	mov    %rbx,%rdi
    40c1:	e8 ca c8 00 00       	call   10990 <strlen>
    40c6:	48 ff c0             	inc    %rax
    40c9:	48 39 e8             	cmp    %rbp,%rax
    40cc:	74 08                	je     40d6 <sgx_ecall_login+0xd0>
    40ce:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    40d4:	eb 14                	jmp    40ea <sgx_ecall_login+0xe4>
    40d6:	8b 7c 24 08          	mov    0x8(%rsp),%edi
    40da:	48 89 de             	mov    %rbx,%rsi
    40dd:	45 31 e4             	xor    %r12d,%r12d
    40e0:	e8 7e df ff ff       	call   2063 <ecall_login>
    40e5:	48 85 db             	test   %rbx,%rbx
    40e8:	74 08                	je     40f2 <sgx_ecall_login+0xec>
    40ea:	48 89 df             	mov    %rbx,%rdi
    40ed:	e8 de ad 00 00       	call   eed0 <dlfree>
    40f2:	48 83 c4 28          	add    $0x28,%rsp
    40f6:	44 89 e0             	mov    %r12d,%eax
    40f9:	5b                   	pop    %rbx
    40fa:	5d                   	pop    %rbp
    40fb:	41 5c                	pop    %r12
    40fd:	41 5d                	pop    %r13
    40ff:	c3                   	ret    

0000000000004100 <sgx_ecall_get_password>:
    4100:	f3 0f 1e fa          	endbr64 
    4104:	48 85 ff             	test   %rdi,%rdi
    4107:	74 53                	je     415c <sgx_ecall_get_password+0x5c>
    4109:	53                   	push   %rbx
    410a:	be 04 00 00 00       	mov    $0x4,%esi
    410f:	48 89 fb             	mov    %rdi,%rbx
    4112:	48 83 ec 10          	sub    $0x10,%rsp
    4116:	e8 a5 1a 00 00       	call   5bc0 <sgx_is_outside_enclave>
    411b:	85 c0                	test   %eax,%eax
    411d:	75 07                	jne    4126 <sgx_ecall_get_password+0x26>
    411f:	b8 02 00 00 00       	mov    $0x2,%eax
    4124:	eb 30                	jmp    4156 <sgx_ecall_get_password+0x56>
    4126:	0f ae e8             	lfence 
    4129:	48 89 da             	mov    %rbx,%rdx
    412c:	48 8d 7c 24 0c       	lea    0xc(%rsp),%rdi
    4131:	b9 04 00 00 00       	mov    $0x4,%ecx
    4136:	be 04 00 00 00       	mov    $0x4,%esi
    413b:	e8 a0 ca 00 00       	call   10be0 <memcpy_s>
    4140:	89 c2                	mov    %eax,%edx
    4142:	b8 01 00 00 00       	mov    $0x1,%eax
    4147:	85 d2                	test   %edx,%edx
    4149:	75 0b                	jne    4156 <sgx_ecall_get_password+0x56>
    414b:	8b 7c 24 0c          	mov    0xc(%rsp),%edi
    414f:	e8 9c df ff ff       	call   20f0 <ecall_get_password>
    4154:	31 c0                	xor    %eax,%eax
    4156:	48 83 c4 10          	add    $0x10,%rsp
    415a:	5b                   	pop    %rbx
    415b:	c3                   	ret    
    415c:	b8 02 00 00 00       	mov    $0x2,%eax
    4161:	c3                   	ret    

0000000000004162 <sgx_ecall_logout>:
    4162:	f3 0f 1e fa          	endbr64 
    4166:	48 85 ff             	test   %rdi,%rdi
    4169:	74 53                	je     41be <sgx_ecall_logout+0x5c>
    416b:	53                   	push   %rbx
    416c:	be 04 00 00 00       	mov    $0x4,%esi
    4171:	48 89 fb             	mov    %rdi,%rbx
    4174:	48 83 ec 10          	sub    $0x10,%rsp
    4178:	e8 43 1a 00 00       	call   5bc0 <sgx_is_outside_enclave>
    417d:	85 c0                	test   %eax,%eax
    417f:	75 07                	jne    4188 <sgx_ecall_logout+0x26>
    4181:	b8 02 00 00 00       	mov    $0x2,%eax
    4186:	eb 30                	jmp    41b8 <sgx_ecall_logout+0x56>
    4188:	0f ae e8             	lfence 
    418b:	48 89 da             	mov    %rbx,%rdx
    418e:	48 8d 7c 24 0c       	lea    0xc(%rsp),%rdi
    4193:	b9 04 00 00 00       	mov    $0x4,%ecx
    4198:	be 04 00 00 00       	mov    $0x4,%esi
    419d:	e8 3e ca 00 00       	call   10be0 <memcpy_s>
    41a2:	89 c2                	mov    %eax,%edx
    41a4:	b8 01 00 00 00       	mov    $0x1,%eax
    41a9:	85 d2                	test   %edx,%edx
    41ab:	75 0b                	jne    41b8 <sgx_ecall_logout+0x56>
    41ad:	8b 7c 24 0c          	mov    0xc(%rsp),%edi
    41b1:	e8 11 df ff ff       	call   20c7 <ecall_logout>
    41b6:	31 c0                	xor    %eax,%eax
    41b8:	48 83 c4 10          	add    $0x10,%rsp
    41bc:	5b                   	pop    %rbx
    41bd:	c3                   	ret    
    41be:	b8 02 00 00 00       	mov    $0x2,%eax
    41c3:	c3                   	ret    

00000000000041c4 <ocall_print>:
    41c4:	f3 0f 1e fa          	endbr64 
    41c8:	41 55                	push   %r13
    41ca:	41 54                	push   %r12
    41cc:	55                   	push   %rbp
    41cd:	31 ed                	xor    %ebp,%ebp
    41cf:	53                   	push   %rbx
    41d0:	48 89 fb             	mov    %rdi,%rbx
    41d3:	48 83 ec 28          	sub    $0x28,%rsp
    41d7:	48 85 ff             	test   %rdi,%rdi
    41da:	74 09                	je     41e5 <ocall_print+0x21>
    41dc:	e8 af c7 00 00       	call   10990 <strlen>
    41e1:	48 8d 68 01          	lea    0x1(%rax),%rbp
    41e5:	31 c9                	xor    %ecx,%ecx
    41e7:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
    41ec:	48 85 db             	test   %rbx,%rbx
    41ef:	74 1c                	je     420d <ocall_print+0x49>
    41f1:	48 89 ee             	mov    %rbp,%rsi
    41f4:	48 89 df             	mov    %rbx,%rdi
    41f7:	49 89 ed             	mov    %rbp,%r13
    41fa:	e8 61 19 00 00       	call   5b60 <sgx_is_within_enclave>
    41ff:	85 c0                	test   %eax,%eax
    4201:	75 0d                	jne    4210 <ocall_print+0x4c>
    4203:	b8 02 00 00 00       	mov    $0x2,%eax
    4208:	e9 95 00 00 00       	jmp    42a2 <ocall_print+0xde>
    420d:	45 31 ed             	xor    %r13d,%r13d
    4210:	49 8d 7d 08          	lea    0x8(%r13),%rdi
    4214:	48 39 ef             	cmp    %rbp,%rdi
    4217:	73 05                	jae    421e <ocall_print+0x5a>
    4219:	48 85 db             	test   %rbx,%rbx
    421c:	75 e5                	jne    4203 <ocall_print+0x3f>
    421e:	e8 fd 19 00 00       	call   5c20 <sgx_ocalloc>
    4223:	49 89 c4             	mov    %rax,%r12
    4226:	48 85 c0             	test   %rax,%rax
    4229:	75 13                	jne    423e <ocall_print+0x7a>
    422b:	31 d2                	xor    %edx,%edx
    422d:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
    4232:	e8 c9 1a 00 00       	call   5d00 <sgx_ocfree>
    4237:	b8 01 00 00 00       	mov    $0x1,%eax
    423c:	eb 64                	jmp    42a2 <ocall_print+0xde>
    423e:	48 8d 40 08          	lea    0x8(%rax),%rax
    4242:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    4247:	48 85 db             	test   %rbx,%rbx
    424a:	74 39                	je     4285 <ocall_print+0xc1>
    424c:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
    4251:	b9 08 00 00 00       	mov    $0x8,%ecx
    4256:	be 08 00 00 00       	mov    $0x8,%esi
    425b:	4c 89 e7             	mov    %r12,%rdi
    425e:	e8 fd c9 00 00       	call   10c60 <memcpy_verw_s>
    4263:	85 c0                	test   %eax,%eax
    4265:	75 cb                	jne    4232 <ocall_print+0x6e>
    4267:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    426c:	48 89 e9             	mov    %rbp,%rcx
    426f:	48 89 da             	mov    %rbx,%rdx
    4272:	4c 89 ee             	mov    %r13,%rsi
    4275:	e8 e6 c9 00 00       	call   10c60 <memcpy_verw_s>
    427a:	85 c0                	test   %eax,%eax
    427c:	75 b4                	jne    4232 <ocall_print+0x6e>
    427e:	48 01 6c 24 18       	add    %rbp,0x18(%rsp)
    4283:	eb 06                	jmp    428b <ocall_print+0xc7>
    4285:	31 c0                	xor    %eax,%eax
    4287:	49 89 04 24          	mov    %rax,(%r12)
    428b:	4c 89 e6             	mov    %r12,%rsi
    428e:	31 ff                	xor    %edi,%edi
    4290:	e8 4b 2f 00 00       	call   71e0 <sgx_ocall>
    4295:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    4299:	e8 62 1a 00 00       	call   5d00 <sgx_ocfree>
    429e:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    42a2:	48 83 c4 28          	add    $0x28,%rsp
    42a6:	5b                   	pop    %rbx
    42a7:	5d                   	pop    %rbp
    42a8:	41 5c                	pop    %r12
    42aa:	41 5d                	pop    %r13
    42ac:	c3                   	ret    

00000000000042ad <ocall_print_address>:
    42ad:	f3 0f 1e fa          	endbr64 
    42b1:	41 55                	push   %r13
    42b3:	41 54                	push   %r12
    42b5:	45 31 e4             	xor    %r12d,%r12d
    42b8:	55                   	push   %rbp
    42b9:	53                   	push   %rbx
    42ba:	48 89 fb             	mov    %rdi,%rbx
    42bd:	48 83 ec 28          	sub    $0x28,%rsp
    42c1:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    42c6:	48 85 ff             	test   %rdi,%rdi
    42c9:	74 09                	je     42d4 <ocall_print_address+0x27>
    42cb:	e8 c0 c6 00 00       	call   10990 <strlen>
    42d0:	4c 8d 60 01          	lea    0x1(%rax),%r12
    42d4:	31 c9                	xor    %ecx,%ecx
    42d6:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
    42db:	48 85 db             	test   %rbx,%rbx
    42de:	74 1c                	je     42fc <ocall_print_address+0x4f>
    42e0:	4c 89 e6             	mov    %r12,%rsi
    42e3:	48 89 df             	mov    %rbx,%rdi
    42e6:	4d 89 e5             	mov    %r12,%r13
    42e9:	e8 72 18 00 00       	call   5b60 <sgx_is_within_enclave>
    42ee:	85 c0                	test   %eax,%eax
    42f0:	75 0d                	jne    42ff <ocall_print_address+0x52>
    42f2:	b8 02 00 00 00       	mov    $0x2,%eax
    42f7:	e9 b7 00 00 00       	jmp    43b3 <ocall_print_address+0x106>
    42fc:	45 31 ed             	xor    %r13d,%r13d
    42ff:	49 8d 7d 10          	lea    0x10(%r13),%rdi
    4303:	4c 39 e7             	cmp    %r12,%rdi
    4306:	73 05                	jae    430d <ocall_print_address+0x60>
    4308:	48 85 db             	test   %rbx,%rbx
    430b:	75 e5                	jne    42f2 <ocall_print_address+0x45>
    430d:	e8 0e 19 00 00       	call   5c20 <sgx_ocalloc>
    4312:	48 89 c5             	mov    %rax,%rbp
    4315:	48 85 c0             	test   %rax,%rax
    4318:	75 16                	jne    4330 <ocall_print_address+0x83>
    431a:	31 d2                	xor    %edx,%edx
    431c:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
    4321:	e8 da 19 00 00       	call   5d00 <sgx_ocfree>
    4326:	b8 01 00 00 00       	mov    $0x1,%eax
    432b:	e9 83 00 00 00       	jmp    43b3 <ocall_print_address+0x106>
    4330:	48 8d 40 10          	lea    0x10(%rax),%rax
    4334:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    4339:	48 85 db             	test   %rbx,%rbx
    433c:	74 39                	je     4377 <ocall_print_address+0xca>
    433e:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
    4343:	b9 08 00 00 00       	mov    $0x8,%ecx
    4348:	be 08 00 00 00       	mov    $0x8,%esi
    434d:	48 89 ef             	mov    %rbp,%rdi
    4350:	e8 0b c9 00 00       	call   10c60 <memcpy_verw_s>
    4355:	85 c0                	test   %eax,%eax
    4357:	75 c8                	jne    4321 <ocall_print_address+0x74>
    4359:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    435e:	4c 89 e1             	mov    %r12,%rcx
    4361:	48 89 da             	mov    %rbx,%rdx
    4364:	4c 89 ee             	mov    %r13,%rsi
    4367:	e8 f4 c8 00 00       	call   10c60 <memcpy_verw_s>
    436c:	85 c0                	test   %eax,%eax
    436e:	75 b1                	jne    4321 <ocall_print_address+0x74>
    4370:	4c 01 64 24 18       	add    %r12,0x18(%rsp)
    4375:	eb 06                	jmp    437d <ocall_print_address+0xd0>
    4377:	31 c0                	xor    %eax,%eax
    4379:	48 89 45 00          	mov    %rax,0x0(%rbp)
    437d:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
    4382:	48 8d 7d 08          	lea    0x8(%rbp),%rdi
    4386:	b9 08 00 00 00       	mov    $0x8,%ecx
    438b:	be 08 00 00 00       	mov    $0x8,%esi
    4390:	e8 cb c8 00 00       	call   10c60 <memcpy_verw_s>
    4395:	85 c0                	test   %eax,%eax
    4397:	75 88                	jne    4321 <ocall_print_address+0x74>
    4399:	48 89 ee             	mov    %rbp,%rsi
    439c:	bf 01 00 00 00       	mov    $0x1,%edi
    43a1:	e8 3a 2e 00 00       	call   71e0 <sgx_ocall>
    43a6:	89 44 24 04          	mov    %eax,0x4(%rsp)
    43aa:	e8 51 19 00 00       	call   5d00 <sgx_ocfree>
    43af:	8b 44 24 04          	mov    0x4(%rsp),%eax
    43b3:	48 83 c4 28          	add    $0x28,%rsp
    43b7:	5b                   	pop    %rbx
    43b8:	5d                   	pop    %rbp
    43b9:	41 5c                	pop    %r12
    43bb:	41 5d                	pop    %r13
    43bd:	c3                   	ret    
    43be:	66 90                	xchg   %ax,%ax

00000000000043c0 <register_value_select>:
    43c0:	89 f1                	mov    %esi,%ecx
    43c2:	31 c0                	xor    %eax,%eax
    43c4:	48 83 f9 00          	cmp    $0x0,%rcx
    43c8:	48 0f 44 07          	cmove  (%rdi),%rax
    43cc:	48 83 f9 01          	cmp    $0x1,%rcx
    43d0:	48 0f 44 47 08       	cmove  0x8(%rdi),%rax
    43d5:	48 83 f9 02          	cmp    $0x2,%rcx
    43d9:	48 0f 44 47 10       	cmove  0x10(%rdi),%rax
    43de:	48 83 f9 03          	cmp    $0x3,%rcx
    43e2:	48 0f 44 47 18       	cmove  0x18(%rdi),%rax
    43e7:	48 83 f9 04          	cmp    $0x4,%rcx
    43eb:	48 0f 44 47 20       	cmove  0x20(%rdi),%rax
    43f0:	48 83 f9 05          	cmp    $0x5,%rcx
    43f4:	48 0f 44 47 28       	cmove  0x28(%rdi),%rax
    43f9:	48 83 f9 06          	cmp    $0x6,%rcx
    43fd:	48 0f 44 47 30       	cmove  0x30(%rdi),%rax
    4402:	48 83 f9 07          	cmp    $0x7,%rcx
    4406:	48 0f 44 47 38       	cmove  0x38(%rdi),%rax
    440b:	48 83 f9 08          	cmp    $0x8,%rcx
    440f:	48 0f 44 47 40       	cmove  0x40(%rdi),%rax
    4414:	48 83 f9 09          	cmp    $0x9,%rcx
    4418:	48 0f 44 47 48       	cmove  0x48(%rdi),%rax
    441d:	48 83 f9 0a          	cmp    $0xa,%rcx
    4421:	48 0f 44 47 50       	cmove  0x50(%rdi),%rax
    4426:	48 83 f9 0b          	cmp    $0xb,%rcx
    442a:	48 0f 44 47 58       	cmove  0x58(%rdi),%rax
    442f:	48 83 f9 0c          	cmp    $0xc,%rcx
    4433:	48 0f 44 47 60       	cmove  0x60(%rdi),%rax
    4438:	48 83 f9 0d          	cmp    $0xd,%rcx
    443c:	48 0f 44 47 68       	cmove  0x68(%rdi),%rax
    4441:	48 83 f9 0e          	cmp    $0xe,%rcx
    4445:	48 0f 44 47 70       	cmove  0x70(%rdi),%rax
    444a:	48 83 f9 0f          	cmp    $0xf,%rcx
    444e:	48 0f 44 47 78       	cmove  0x78(%rdi),%rax
    4453:	c3                   	ret    
    4454:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    445b:	00 00 00 
    445e:	66 90                	xchg   %ax,%ax

0000000000004460 <ct_decode>:
    4460:	f3 0f 1e fa          	endbr64 
    4464:	55                   	push   %rbp
    4465:	48 89 e5             	mov    %rsp,%rbp
    4468:	41 57                	push   %r15
    446a:	41 56                	push   %r14
    446c:	41 55                	push   %r13
    446e:	41 54                	push   %r12
    4470:	53                   	push   %rbx
    4471:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    4475:	48 81 ec 40 05 00 00 	sub    $0x540,%rsp
    447c:	48 89 7c 24 78       	mov    %rdi,0x78(%rsp)
    4481:	48 89 74 24 50       	mov    %rsi,0x50(%rsp)
    4486:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    448d:	00 00 
    448f:	48 89 84 24 38 05 00 	mov    %rax,0x538(%rsp)
    4496:	00 
    4497:	31 c0                	xor    %eax,%eax
    4499:	48 8d 84 24 00 01 00 	lea    0x100(%rsp),%rax
    44a0:	00 
    44a1:	f6 05 7b 39 01 00 08 	testb  $0x8,0x1397b(%rip)        # 17e23 <g_cpu_feature_indicator+0x3>
    44a8:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    44ad:	0f 84 fd 0f 00 00    	je     54b0 <ct_decode+0x1050>
    44b3:	62 f1 7c 48 29 00    	vmovaps %zmm0,(%rax)
    44b9:	62 f1 7c 48 29 48 01 	vmovaps %zmm1,0x40(%rax)
    44c0:	62 f1 7c 48 29 50 02 	vmovaps %zmm2,0x80(%rax)
    44c7:	62 f1 7c 48 29 58 03 	vmovaps %zmm3,0xc0(%rax)
    44ce:	62 f1 7c 48 29 60 04 	vmovaps %zmm4,0x100(%rax)
    44d5:	62 f1 7c 48 29 68 05 	vmovaps %zmm5,0x140(%rax)
    44dc:	62 f1 7c 48 29 70 06 	vmovaps %zmm6,0x180(%rax)
    44e3:	62 f1 7c 48 29 78 07 	vmovaps %zmm7,0x1c0(%rax)
    44ea:	62 71 7c 48 29 40 08 	vmovaps %zmm8,0x200(%rax)
    44f1:	62 71 7c 48 29 48 09 	vmovaps %zmm9,0x240(%rax)
    44f8:	62 71 7c 48 29 50 0a 	vmovaps %zmm10,0x280(%rax)
    44ff:	62 71 7c 48 29 58 0b 	vmovaps %zmm11,0x2c0(%rax)
    4506:	62 71 7c 48 29 60 0c 	vmovaps %zmm12,0x300(%rax)
    450d:	62 71 7c 48 29 68 0d 	vmovaps %zmm13,0x340(%rax)
    4514:	62 71 7c 48 29 70 0e 	vmovaps %zmm14,0x380(%rax)
    451b:	62 71 7c 48 29 78 0f 	vmovaps %zmm15,0x3c0(%rax)
    4522:	48 8b 7c 24 78       	mov    0x78(%rsp),%rdi
    4527:	31 c9                	xor    %ecx,%ecx
    4529:	ba f0 0f 00 00       	mov    $0xff0,%edx
    452e:	48 be f0 f0 f0 f0 f0 	movabs $0xf0f0f0f0f0f0f0f0,%rsi
    4535:	f0 f0 f0 
    4538:	c4 e1 f9 6e c6       	vmovq  %rsi,%xmm0
    453d:	c5 f9 6f 25 db 3b 01 	vmovdqa 0x13bdb(%rip),%xmm4        # 18120 <standard>
    4544:	00 
    4545:	49 bb 80 80 80 80 80 	movabs $0x8080808080808080,%r11
    454c:	80 80 80 
    454f:	c4 e3 5d 38 25 c7 3a 	vinserti128 $0x1,0x13ac7(%rip),%ymm4,%ymm4        # 18020 <extended>
    4556:	01 00 01 
    4559:	4c 8b b7 88 00 00 00 	mov    0x88(%rdi),%r14
    4560:	c4 e2 7d 59 c0       	vpbroadcastq %xmm0,%ymm0
    4565:	c5 79 6f 2d d3 3b 01 	vmovdqa 0x13bd3(%rip),%xmm13        # 18140 <standard+0x20>
    456c:	00 
    456d:	48 bf ff ff ff ff ff 	movabs $0xffffffffffff,%rdi
    4574:	ff 00 00 
    4577:	c4 63 15 38 2d bf 3a 	vinserti128 $0x1,0x13abf(%rip),%ymm13,%ymm13        # 18040 <extended+0x20>
    457e:	01 00 01 
    4581:	c5 79 6f 25 e7 3b 01 	vmovdqa 0x13be7(%rip),%xmm12        # 18170 <standard+0x50>
    4588:	00 
    4589:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    458f:	41 b8 03 00 00 00    	mov    $0x3,%r8d
    4595:	4c 89 f0             	mov    %r14,%rax
    4598:	c5 79 6f 1d e0 3b 01 	vmovdqa 0x13be0(%rip),%xmm11        # 18180 <standard+0x60>
    459f:	00 
    45a0:	c4 63 1d 38 25 c6 3a 	vinserti128 $0x1,0x13ac6(%rip),%ymm12,%ymm12        # 18070 <extended+0x50>
    45a7:	01 00 01 
    45aa:	4c 89 74 24 68       	mov    %r14,0x68(%rsp)
    45af:	25 ff 0f 00 00       	and    $0xfff,%eax
    45b4:	c5 79 6f 15 d4 3b 01 	vmovdqa 0x13bd4(%rip),%xmm10        # 18190 <standard+0x70>
    45bb:	00 
    45bc:	c4 63 25 38 1d ba 3a 	vinserti128 $0x1,0x13aba(%rip),%ymm11,%ymm11        # 18080 <extended+0x60>
    45c3:	01 00 01 
    45c6:	48 3d f0 0f 00 00    	cmp    $0xff0,%rax
    45cc:	c5 79 6f 0d cc 3b 01 	vmovdqa 0x13bcc(%rip),%xmm9        # 181a0 <standard+0x80>
    45d3:	00 
    45d4:	c4 63 2d 38 15 b2 3a 	vinserti128 $0x1,0x13ab2(%rip),%ymm10,%ymm10        # 18090 <extended+0x70>
    45db:	01 00 01 
    45de:	0f 96 c1             	setbe  %cl
    45e1:	c5 79 6f 05 c7 3b 01 	vmovdqa 0x13bc7(%rip),%xmm8        # 181b0 <standard+0x90>
    45e8:	00 
    45e9:	c4 63 35 38 0d ad 3a 	vinserti128 $0x1,0x13aad(%rip),%ymm9,%ymm9        # 180a0 <extended+0x80>
    45f0:	01 00 01 
    45f3:	48 83 f9 00          	cmp    $0x0,%rcx
    45f7:	48 0f 45 d0          	cmovne %rax,%rdx
    45fb:	31 c9                	xor    %ecx,%ecx
    45fd:	48 3d f0 0f 00 00    	cmp    $0xff0,%rax
    4603:	c4 63 3d 38 05 a3 3a 	vinserti128 $0x1,0x13aa3(%rip),%ymm8,%ymm8        # 180b0 <extended+0x90>
    460a:	01 00 01 
    460d:	c5 79 6f 3d cb 3b 01 	vmovdqa 0x13bcb(%rip),%xmm15        # 181e0 <standard+0xc0>
    4614:	00 
    4615:	0f 97 c1             	seta   %cl
    4618:	45 31 e4             	xor    %r12d,%r12d
    461b:	2d f0 0f 00 00       	sub    $0xff0,%eax
    4620:	44 89 e3             	mov    %r12d,%ebx
    4623:	45 89 e7             	mov    %r12d,%r15d
    4626:	48 83 f9 00          	cmp    $0x0,%rcx
    462a:	0f 45 d8             	cmovne %eax,%ebx
    462d:	4c 89 f0             	mov    %r14,%rax
    4630:	89 5c 24 4c          	mov    %ebx,0x4c(%rsp)
    4634:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    463a:	48 09 d0             	or     %rdx,%rax
    463d:	c5 fa 6f 28          	vmovdqu (%rax),%xmm5
    4641:	48 63 c3             	movslq %ebx,%rax
    4644:	bb 02 00 00 00       	mov    $0x2,%ebx
    4649:	c4 e1 f9 6e f8       	vmovq  %rax,%xmm7
    464e:	b8 10 00 00 00       	mov    $0x10,%eax
    4653:	41 89 de             	mov    %ebx,%r14d
    4656:	c5 d1 f3 ef          	vpsllq %xmm7,%xmm5,%xmm5
    465a:	c4 c1 f9 6e fb       	vmovq  %r11,%xmm7
    465f:	c4 e2 7d 59 df       	vpbroadcastq %xmm7,%ymm3
    4664:	c4 e2 7d 59 cd       	vpbroadcastq %xmm5,%ymm1
    4669:	c4 e1 f9 7e ea       	vmovq  %xmm5,%rdx
    466e:	c5 fd df d1          	vpandn %ymm1,%ymm0,%ymm2
    4672:	c5 f5 db c8          	vpand  %ymm0,%ymm1,%ymm1
    4676:	c5 f9 ef c0          	vpxor  %xmm0,%xmm0,%xmm0
    467a:	49 89 d2             	mov    %rdx,%r10
    467d:	c5 f5 74 c0          	vpcmpeqb %ymm0,%ymm1,%ymm0
    4681:	c5 fd df c3          	vpandn %ymm3,%ymm0,%ymm0
    4685:	c5 fd eb c2          	vpor   %ymm2,%ymm0,%ymm0
    4689:	c4 62 5d 00 f0       	vpshufb %ymm0,%ymm4,%ymm14
    468e:	c5 f9 6e c0          	vmovd  %eax,%xmm0
    4692:	c5 f9 6f 25 96 3a 01 	vmovdqa 0x13a96(%rip),%xmm4        # 18130 <standard+0x10>
    4699:	00 
    469a:	c4 e3 5d 38 25 8c 39 	vinserti128 $0x1,0x1398c(%rip),%ymm4,%ymm4        # 18030 <extended+0x10>
    46a1:	01 00 01 
    46a4:	c4 e2 7d 78 c0       	vpbroadcastb %xmm0,%ymm0
    46a9:	b8 20 00 00 00       	mov    $0x20,%eax
    46ae:	c5 7d 7f b4 24 a0 00 	vmovdqa %ymm14,0xa0(%rsp)
    46b5:	00 00 
    46b7:	c5 f5 74 c0          	vpcmpeqb %ymm0,%ymm1,%ymm0
    46bb:	c5 fd df c3          	vpandn %ymm3,%ymm0,%ymm0
    46bf:	c5 fd eb c2          	vpor   %ymm2,%ymm0,%ymm0
    46c3:	c4 e2 5d 00 f8       	vpshufb %ymm0,%ymm4,%ymm7
    46c8:	c5 f9 6e c0          	vmovd  %eax,%xmm0
    46cc:	b8 30 00 00 00       	mov    $0x30,%eax
    46d1:	c5 f9 6f 25 77 3a 01 	vmovdqa 0x13a77(%rip),%xmm4        # 18150 <standard+0x30>
    46d8:	00 
    46d9:	c4 e3 5d 38 25 6d 39 	vinserti128 $0x1,0x1396d(%rip),%ymm4,%ymm4        # 18050 <extended+0x30>
    46e0:	01 00 01 
    46e3:	c4 e2 7d 78 c0       	vpbroadcastb %xmm0,%ymm0
    46e8:	c5 fd 7f bc 24 e0 00 	vmovdqa %ymm7,0xe0(%rsp)
    46ef:	00 00 
    46f1:	c5 f9 6f 3d c7 3a 01 	vmovdqa 0x13ac7(%rip),%xmm7        # 181c0 <standard+0xa0>
    46f8:	00 
    46f9:	c4 e3 45 38 3d bd 39 	vinserti128 $0x1,0x139bd(%rip),%ymm7,%ymm7        # 180c0 <extended+0xa0>
    4700:	01 00 01 
    4703:	c5 f5 74 c0          	vpcmpeqb %ymm0,%ymm1,%ymm0
    4707:	c5 fd df c3          	vpandn %ymm3,%ymm0,%ymm0
    470b:	c5 fd eb c2          	vpor   %ymm2,%ymm0,%ymm0
    470f:	c4 62 15 00 e8       	vpshufb %ymm0,%ymm13,%ymm13
    4714:	c5 f9 6e c0          	vmovd  %eax,%xmm0
    4718:	b8 40 00 00 00       	mov    $0x40,%eax
    471d:	c4 e2 7d 78 c0       	vpbroadcastb %xmm0,%ymm0
    4722:	c5 f9 6e f0          	vmovd  %eax,%xmm6
    4726:	b8 50 00 00 00       	mov    $0x50,%eax
    472b:	c5 f5 74 c0          	vpcmpeqb %ymm0,%ymm1,%ymm0
    472f:	c4 e2 7d 78 f6       	vpbroadcastb %xmm6,%ymm6
    4734:	c5 f5 74 f6          	vpcmpeqb %ymm6,%ymm1,%ymm6
    4738:	c5 fd df c3          	vpandn %ymm3,%ymm0,%ymm0
    473c:	c5 fd eb c2          	vpor   %ymm2,%ymm0,%ymm0
    4740:	c5 cd df f3          	vpandn %ymm3,%ymm6,%ymm6
    4744:	c4 e2 5d 00 e0       	vpshufb %ymm0,%ymm4,%ymm4
    4749:	c5 f9 6f 05 0f 3a 01 	vmovdqa 0x13a0f(%rip),%xmm0        # 18160 <standard+0x40>
    4750:	00 
    4751:	c5 cd eb f2          	vpor   %ymm2,%ymm6,%ymm6
    4755:	c4 e3 7d 38 05 01 39 	vinserti128 $0x1,0x13901(%rip),%ymm0,%ymm0        # 18060 <extended+0x40>
    475c:	01 00 01 
    475f:	c4 e1 f9 7e e1       	vmovq  %xmm4,%rcx
    4764:	c4 e3 7d 39 e4 01    	vextracti128 $0x1,%ymm4,%xmm4
    476a:	c4 e2 7d 00 c6       	vpshufb %ymm6,%ymm0,%ymm0
    476f:	c5 f9 6e f0          	vmovd  %eax,%xmm6
    4773:	b8 60 00 00 00       	mov    $0x60,%eax
    4778:	c4 e2 7d 78 f6       	vpbroadcastb %xmm6,%ymm6
    477d:	c5 f5 74 f6          	vpcmpeqb %ymm6,%ymm1,%ymm6
    4781:	c5 cd df f3          	vpandn %ymm3,%ymm6,%ymm6
    4785:	c5 cd eb f2          	vpor   %ymm2,%ymm6,%ymm6
    4789:	c4 62 1d 00 e6       	vpshufb %ymm6,%ymm12,%ymm12
    478e:	c5 f9 6e f0          	vmovd  %eax,%xmm6
    4792:	b8 70 00 00 00       	mov    $0x70,%eax
    4797:	c4 e2 7d 78 f6       	vpbroadcastb %xmm6,%ymm6
    479c:	c5 f5 74 f6          	vpcmpeqb %ymm6,%ymm1,%ymm6
    47a0:	c5 cd df f3          	vpandn %ymm3,%ymm6,%ymm6
    47a4:	c5 cd eb f2          	vpor   %ymm2,%ymm6,%ymm6
    47a8:	c4 62 25 00 de       	vpshufb %ymm6,%ymm11,%ymm11
    47ad:	c5 f9 6e f0          	vmovd  %eax,%xmm6
    47b1:	b8 80 ff ff ff       	mov    $0xffffff80,%eax
    47b6:	c4 e2 7d 78 f6       	vpbroadcastb %xmm6,%ymm6
    47bb:	c5 f5 74 f6          	vpcmpeqb %ymm6,%ymm1,%ymm6
    47bf:	c5 cd df f3          	vpandn %ymm3,%ymm6,%ymm6
    47c3:	c5 cd eb f2          	vpor   %ymm2,%ymm6,%ymm6
    47c7:	c4 62 2d 00 d6       	vpshufb %ymm6,%ymm10,%ymm10
    47cc:	c5 f9 6e f0          	vmovd  %eax,%xmm6
    47d0:	b8 90 ff ff ff       	mov    $0xffffff90,%eax
    47d5:	c4 e2 7d 78 f6       	vpbroadcastb %xmm6,%ymm6
    47da:	c5 f5 74 f6          	vpcmpeqb %ymm6,%ymm1,%ymm6
    47de:	c5 cd df f3          	vpandn %ymm3,%ymm6,%ymm6
    47e2:	c5 cd eb f2          	vpor   %ymm2,%ymm6,%ymm6
    47e6:	c4 62 35 00 ce       	vpshufb %ymm6,%ymm9,%ymm9
    47eb:	c5 f9 6e f0          	vmovd  %eax,%xmm6
    47ef:	b8 a0 ff ff ff       	mov    $0xffffffa0,%eax
    47f4:	c4 e2 7d 78 f6       	vpbroadcastb %xmm6,%ymm6
    47f9:	c5 f5 74 f6          	vpcmpeqb %ymm6,%ymm1,%ymm6
    47fd:	c5 cd df f3          	vpandn %ymm3,%ymm6,%ymm6
    4801:	c5 cd eb f2          	vpor   %ymm2,%ymm6,%ymm6
    4805:	c4 62 3d 00 c6       	vpshufb %ymm6,%ymm8,%ymm8
    480a:	c5 f9 6e f0          	vmovd  %eax,%xmm6
    480e:	b8 b0 ff ff ff       	mov    $0xffffffb0,%eax
    4813:	c4 e2 7d 78 f6       	vpbroadcastb %xmm6,%ymm6
    4818:	c5 79 6e f0          	vmovd  %eax,%xmm14
    481c:	b8 c0 ff ff ff       	mov    $0xffffffc0,%eax
    4821:	c5 f5 74 f6          	vpcmpeqb %ymm6,%ymm1,%ymm6
    4825:	c4 42 7d 78 f6       	vpbroadcastb %xmm14,%ymm14
    482a:	c4 41 75 74 f6       	vpcmpeqb %ymm14,%ymm1,%ymm14
    482f:	c5 cd df f3          	vpandn %ymm3,%ymm6,%ymm6
    4833:	c5 cd eb f2          	vpor   %ymm2,%ymm6,%ymm6
    4837:	c5 0d df f3          	vpandn %ymm3,%ymm14,%ymm14
    483b:	c4 e2 45 00 fe       	vpshufb %ymm6,%ymm7,%ymm7
    4840:	c5 f9 6f 35 88 39 01 	vmovdqa 0x13988(%rip),%xmm6        # 181d0 <standard+0xb0>
    4847:	00 
    4848:	c5 0d eb f2          	vpor   %ymm2,%ymm14,%ymm14
    484c:	c4 e3 4d 38 35 7a 38 	vinserti128 $0x1,0x1387a(%rip),%ymm6,%ymm6        # 180d0 <extended+0xb0>
    4853:	01 00 01 
    4856:	c4 63 05 38 3d 80 38 	vinserti128 $0x1,0x13880(%rip),%ymm15,%ymm15        # 180e0 <extended+0xc0>
    485d:	01 00 01 
    4860:	c4 c2 4d 00 f6       	vpshufb %ymm14,%ymm6,%ymm6
    4865:	c5 79 6e f0          	vmovd  %eax,%xmm14
    4869:	b8 d0 ff ff ff       	mov    $0xffffffd0,%eax
    486e:	c4 42 7d 78 f6       	vpbroadcastb %xmm14,%ymm14
    4873:	c4 41 75 74 f6       	vpcmpeqb %ymm14,%ymm1,%ymm14
    4878:	c5 0d df f3          	vpandn %ymm3,%ymm14,%ymm14
    487c:	c5 0d eb f2          	vpor   %ymm2,%ymm14,%ymm14
    4880:	c4 42 05 00 fe       	vpshufb %ymm14,%ymm15,%ymm15
    4885:	c5 79 6e f0          	vmovd  %eax,%xmm14
    4889:	b8 e0 ff ff ff       	mov    $0xffffffe0,%eax
    488e:	c5 7d 7f bc 24 c0 00 	vmovdqa %ymm15,0xc0(%rsp)
    4895:	00 00 
    4897:	c4 42 7d 78 f6       	vpbroadcastb %xmm14,%ymm14
    489c:	c5 79 6f 3d 4c 39 01 	vmovdqa 0x1394c(%rip),%xmm15        # 181f0 <standard+0xd0>
    48a3:	00 
    48a4:	c4 63 05 38 3d 42 38 	vinserti128 $0x1,0x13842(%rip),%ymm15,%ymm15        # 180f0 <extended+0xd0>
    48ab:	01 00 01 
    48ae:	c4 41 75 74 f6       	vpcmpeqb %ymm14,%ymm1,%ymm14
    48b3:	c5 0d df f3          	vpandn %ymm3,%ymm14,%ymm14
    48b7:	c5 0d eb f2          	vpor   %ymm2,%ymm14,%ymm14
    48bb:	c4 42 05 00 fe       	vpshufb %ymm14,%ymm15,%ymm15
    48c0:	c5 79 6e f0          	vmovd  %eax,%xmm14
    48c4:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
    48c9:	c5 7d 7f bc 24 80 00 	vmovdqa %ymm15,0x80(%rsp)
    48d0:	00 00 
    48d2:	c4 42 7d 78 f6       	vpbroadcastb %xmm14,%ymm14
    48d7:	c5 79 6f 3d 21 39 01 	vmovdqa 0x13921(%rip),%xmm15        # 18200 <standard+0xe0>
    48de:	00 
    48df:	c4 63 05 38 3d 17 38 	vinserti128 $0x1,0x13817(%rip),%ymm15,%ymm15        # 18100 <extended+0xe0>
    48e6:	01 00 01 
    48e9:	c4 41 75 74 f6       	vpcmpeqb %ymm14,%ymm1,%ymm14
    48ee:	c5 0d df f3          	vpandn %ymm3,%ymm14,%ymm14
    48f2:	c5 0d eb f2          	vpor   %ymm2,%ymm14,%ymm14
    48f6:	c4 42 05 00 fe       	vpshufb %ymm14,%ymm15,%ymm15
    48fb:	c5 79 6e f0          	vmovd  %eax,%xmm14
    48ff:	c4 61 f9 7e e8       	vmovq  %xmm13,%rax
    4904:	48 09 c8             	or     %rcx,%rax
    4907:	c4 42 7d 78 f6       	vpbroadcastb %xmm14,%ymm14
    490c:	c4 e1 f9 7e c1       	vmovq  %xmm0,%rcx
    4911:	48 09 c8             	or     %rcx,%rax
    4914:	c4 c1 75 74 ce       	vpcmpeqb %ymm14,%ymm1,%ymm1
    4919:	c4 61 f9 7e e1       	vmovq  %xmm12,%rcx
    491e:	c5 7d 6f b4 24 a0 00 	vmovdqa 0xa0(%rsp),%ymm14
    4925:	00 00 
    4927:	48 09 c8             	or     %rcx,%rax
    492a:	c4 61 f9 7e d9       	vmovq  %xmm11,%rcx
    492f:	c4 43 7d 39 ed 01    	vextracti128 $0x1,%ymm13,%xmm13
    4935:	48 09 c8             	or     %rcx,%rax
    4938:	c4 61 f9 7e d1       	vmovq  %xmm10,%rcx
    493d:	c5 91 eb e4          	vpor   %xmm4,%xmm13,%xmm4
    4941:	48 09 c8             	or     %rcx,%rax
    4944:	c5 f5 df cb          	vpandn %ymm3,%ymm1,%ymm1
    4948:	c4 61 f9 7e c9       	vmovq  %xmm9,%rcx
    494d:	c5 f9 6f 1d bb 38 01 	vmovdqa 0x138bb(%rip),%xmm3        # 18210 <standard+0xf0>
    4954:	00 
    4955:	c5 f5 eb ca          	vpor   %ymm2,%ymm1,%ymm1
    4959:	48 09 c8             	or     %rcx,%rax
    495c:	c4 61 f9 7e c1       	vmovq  %xmm8,%rcx
    4961:	48 09 c8             	or     %rcx,%rax
    4964:	c4 e1 f9 7e f9       	vmovq  %xmm7,%rcx
    4969:	c4 e3 65 38 1d 9d 37 	vinserti128 $0x1,0x1379d(%rip),%ymm3,%ymm3        # 18110 <extended+0xf0>
    4970:	01 00 01 
    4973:	48 09 c8             	or     %rcx,%rax
    4976:	c4 e1 f9 7e f1       	vmovq  %xmm6,%rcx
    497b:	c4 61 f9 7e f6       	vmovq  %xmm14,%rsi
    4980:	c4 e2 65 00 d9       	vpshufb %ymm1,%ymm3,%ymm3
    4985:	48 09 c8             	or     %rcx,%rax
    4988:	c5 f9 6f 8c 24 c0 00 	vmovdqa 0xc0(%rsp),%xmm1
    498f:	00 00 
    4991:	c4 e3 7d 39 c0 01    	vextracti128 $0x1,%ymm0,%xmm0
    4997:	c5 d9 eb c0          	vpor   %xmm0,%xmm4,%xmm0
    499b:	c4 43 7d 39 e4 01    	vextracti128 $0x1,%ymm12,%xmm12
    49a1:	c4 43 7d 39 db 01    	vextracti128 $0x1,%ymm11,%xmm11
    49a7:	c5 fd 6f a4 24 c0 00 	vmovdqa 0xc0(%rsp),%ymm4
    49ae:	00 00 
    49b0:	c4 e1 f9 7e c9       	vmovq  %xmm1,%rcx
    49b5:	c4 c1 79 eb c4       	vpor   %xmm12,%xmm0,%xmm0
    49ba:	c5 f9 6f 8c 24 80 00 	vmovdqa 0x80(%rsp),%xmm1
    49c1:	00 00 
    49c3:	c4 43 7d 39 d2 01    	vextracti128 $0x1,%ymm10,%xmm10
    49c9:	48 09 c8             	or     %rcx,%rax
    49cc:	c4 c1 79 eb c3       	vpor   %xmm11,%xmm0,%xmm0
    49d1:	c4 43 7d 39 c9 01    	vextracti128 $0x1,%ymm9,%xmm9
    49d7:	c4 e1 f9 7e c9       	vmovq  %xmm1,%rcx
    49dc:	c4 c1 79 eb c2       	vpor   %xmm10,%xmm0,%xmm0
    49e1:	c5 f9 6f 8c 24 e0 00 	vmovdqa 0xe0(%rsp),%xmm1
    49e8:	00 00 
    49ea:	c4 43 7d 39 c0 01    	vextracti128 $0x1,%ymm8,%xmm8
    49f0:	48 09 c8             	or     %rcx,%rax
    49f3:	c4 61 f9 7e f9       	vmovq  %xmm15,%rcx
    49f8:	c4 c1 79 eb c1       	vpor   %xmm9,%xmm0,%xmm0
    49fd:	48 09 c8             	or     %rcx,%rax
    4a00:	c4 e1 f9 7e d9       	vmovq  %xmm3,%rcx
    4a05:	c4 c1 79 eb c0       	vpor   %xmm8,%xmm0,%xmm0
    4a0a:	48 09 c8             	or     %rcx,%rax
    4a0d:	c4 e1 f9 7e c9       	vmovq  %xmm1,%rcx
    4a12:	c4 e3 7d 39 ff 01    	vextracti128 $0x1,%ymm7,%xmm7
    4a18:	48 09 f1             	or     %rsi,%rcx
    4a1b:	be 0f 00 00 00       	mov    $0xf,%esi
    4a20:	c5 f9 eb c7          	vpor   %xmm7,%xmm0,%xmm0
    4a24:	c5 fd 6f bc 24 e0 00 	vmovdqa 0xe0(%rsp),%ymm7
    4a2b:	00 00 
    4a2d:	48 09 c8             	or     %rcx,%rax
    4a30:	c4 e3 7d 39 f6 01    	vextracti128 $0x1,%ymm6,%xmm6
    4a36:	c4 43 7d 39 ff 01    	vextracti128 $0x1,%ymm15,%xmm15
    4a3c:	48 21 c7             	and    %rax,%rdi
    4a3f:	25 c0 00 00 00       	and    $0xc0,%eax
    4a44:	c5 f9 eb c6          	vpor   %xmm6,%xmm0,%xmm0
    4a48:	48 83 f8 7f          	cmp    $0x7f,%rax
    4a4c:	49 89 f9             	mov    %rdi,%r9
    4a4f:	c4 e3 7d 39 db 01    	vextracti128 $0x1,%ymm3,%xmm3
    4a55:	0f 97 c0             	seta   %al
    4a58:	0f b6 c0             	movzbl %al,%eax
    4a5b:	48 83 f8 00          	cmp    $0x0,%rax
    4a5f:	41 0f 45 f4          	cmovne %r12d,%esi
    4a63:	48 89 f8             	mov    %rdi,%rax
    4a66:	89 f1                	mov    %esi,%ecx
    4a68:	48 c1 e8 08          	shr    $0x8,%rax
    4a6c:	25 c0 00 00 00       	and    $0xc0,%eax
    4a71:	48 83 f8 7f          	cmp    $0x7f,%rax
    4a75:	0f 97 c0             	seta   %al
    4a78:	c1 e1 08             	shl    $0x8,%ecx
    4a7b:	0f b6 c0             	movzbl %al,%eax
    4a7e:	09 c8                	or     %ecx,%eax
    4a80:	3d 01 0f 00 00       	cmp    $0xf01,%eax
    4a85:	0f 94 c0             	sete   %al
    4a88:	0f b6 c0             	movzbl %al,%eax
    4a8b:	48 83 f8 00          	cmp    $0x0,%rax
    4a8f:	41 0f 45 f5          	cmovne %r13d,%esi
    4a93:	48 89 f8             	mov    %rdi,%rax
    4a96:	89 f1                	mov    %esi,%ecx
    4a98:	48 c1 e8 10          	shr    $0x10,%rax
    4a9c:	25 c0 00 00 00       	and    $0xc0,%eax
    4aa1:	48 83 f8 7f          	cmp    $0x7f,%rax
    4aa5:	0f 97 c0             	seta   %al
    4aa8:	c1 e1 08             	shl    $0x8,%ecx
    4aab:	0f b6 c0             	movzbl %al,%eax
    4aae:	09 c8                	or     %ecx,%eax
    4ab0:	3d 01 0f 00 00       	cmp    $0xf01,%eax
    4ab5:	0f 94 c0             	sete   %al
    4ab8:	0f b6 c0             	movzbl %al,%eax
    4abb:	48 83 f8 00          	cmp    $0x0,%rax
    4abf:	0f 45 f3             	cmovne %ebx,%esi
    4ac2:	48 89 f8             	mov    %rdi,%rax
    4ac5:	89 f1                	mov    %esi,%ecx
    4ac7:	bb 04 00 00 00       	mov    $0x4,%ebx
    4acc:	48 c1 e8 18          	shr    $0x18,%rax
    4ad0:	25 c0 00 00 00       	and    $0xc0,%eax
    4ad5:	48 83 f8 7f          	cmp    $0x7f,%rax
    4ad9:	0f 97 c0             	seta   %al
    4adc:	c1 e1 08             	shl    $0x8,%ecx
    4adf:	0f b6 c0             	movzbl %al,%eax
    4ae2:	09 c8                	or     %ecx,%eax
    4ae4:	3d 01 0f 00 00       	cmp    $0xf01,%eax
    4ae9:	0f 94 c0             	sete   %al
    4aec:	0f b6 c0             	movzbl %al,%eax
    4aef:	48 83 f8 00          	cmp    $0x0,%rax
    4af3:	41 0f 45 f0          	cmovne %r8d,%esi
    4af7:	48 89 f8             	mov    %rdi,%rax
    4afa:	89 f1                	mov    %esi,%ecx
    4afc:	48 c1 e8 20          	shr    $0x20,%rax
    4b00:	25 c0 00 00 00       	and    $0xc0,%eax
    4b05:	48 83 f8 7f          	cmp    $0x7f,%rax
    4b09:	0f 97 c0             	seta   %al
    4b0c:	c1 e1 08             	shl    $0x8,%ecx
    4b0f:	0f b6 c0             	movzbl %al,%eax
    4b12:	09 c8                	or     %ecx,%eax
    4b14:	3d 01 0f 00 00       	cmp    $0xf01,%eax
    4b19:	0f 94 c0             	sete   %al
    4b1c:	0f b6 c0             	movzbl %al,%eax
    4b1f:	48 83 f8 00          	cmp    $0x0,%rax
    4b23:	0f 45 f3             	cmovne %ebx,%esi
    4b26:	48 89 f8             	mov    %rdi,%rax
    4b29:	89 f1                	mov    %esi,%ecx
    4b2b:	48 c1 e8 28          	shr    $0x28,%rax
    4b2f:	25 c0 00 00 00       	and    $0xc0,%eax
    4b34:	48 83 f8 7f          	cmp    $0x7f,%rax
    4b38:	0f 97 c0             	seta   %al
    4b3b:	c1 e1 08             	shl    $0x8,%ecx
    4b3e:	0f b6 c0             	movzbl %al,%eax
    4b41:	09 c8                	or     %ecx,%eax
    4b43:	31 c9                	xor    %ecx,%ecx
    4b45:	3d 01 0f 00 00       	cmp    $0xf01,%eax
    4b4a:	b8 05 00 00 00       	mov    $0x5,%eax
    4b4f:	0f 94 c1             	sete   %cl
    4b52:	48 83 f9 00          	cmp    $0x0,%rcx
    4b56:	0f 45 f0             	cmovne %eax,%esi
    4b59:	8d 0c f5 00 00 00 00 	lea    0x0(,%rsi,8),%ecx
    4b60:	49 d3 e9             	shr    %cl,%r9
    4b63:	49 d3 ea             	shr    %cl,%r10
    4b66:	4c 89 d1             	mov    %r10,%rcx
    4b69:	45 89 ca             	mov    %r9d,%r10d
    4b6c:	4c 89 cb             	mov    %r9,%rbx
    4b6f:	48 89 4c 24 70       	mov    %rcx,0x70(%rsp)
    4b74:	41 c0 ea 02          	shr    $0x2,%r10b
    4b78:	31 c9                	xor    %ecx,%ecx
    4b7a:	80 7c 24 70 0f       	cmpb   $0xf,0x70(%rsp)
    4b7f:	0f 94 c1             	sete   %cl
    4b82:	44 88 94 24 a0 00 00 	mov    %r10b,0xa0(%rsp)
    4b89:	00 
    4b8a:	45 89 e2             	mov    %r12d,%r10d
    4b8d:	48 83 f9 00          	cmp    $0x0,%rcx
    4b91:	45 0f 45 fd          	cmovne %r13d,%r15d
    4b95:	44 89 c9             	mov    %r9d,%ecx
    4b98:	45 31 c9             	xor    %r9d,%r9d
    4b9b:	83 e1 f0             	and    $0xfffffff0,%ecx
    4b9e:	80 f9 a0             	cmp    $0xa0,%cl
    4ba1:	41 0f 94 c1          	sete   %r9b
    4ba5:	49 83 f9 00          	cmp    $0x0,%r9
    4ba9:	45 0f 45 d5          	cmovne %r13d,%r10d
    4bad:	80 f9 b0             	cmp    $0xb0,%cl
    4bb0:	45 89 e1             	mov    %r12d,%r9d
    4bb3:	44 89 54 24 48       	mov    %r10d,0x48(%rsp)
    4bb8:	0f 94 c1             	sete   %cl
    4bbb:	29 f0                	sub    %esi,%eax
    4bbd:	45 31 d2             	xor    %r10d,%r10d
    4bc0:	0f b6 c9             	movzbl %cl,%ecx
    4bc3:	48 83 f9 00          	cmp    $0x0,%rcx
    4bc7:	45 0f 45 cd          	cmovne %r13d,%r9d
    4bcb:	8d 0c c5 00 00 00 00 	lea    0x0(,%rax,8),%ecx
    4bd2:	44 89 4c 24 3c       	mov    %r9d,0x3c(%rsp)
    4bd7:	48 b8 ff ff ff ff ff 	movabs $0xffffffffff,%rax
    4bde:	00 00 00 
    4be1:	48 d3 f8             	sar    %cl,%rax
    4be4:	8d 0c f5 f8 ff ff ff 	lea    -0x8(,%rsi,8),%ecx
    4beb:	48 21 f8             	and    %rdi,%rax
    4bee:	49 89 c1             	mov    %rax,%r9
    4bf1:	c4 e1 f9 6e d0       	vmovq  %rax,%xmm2
    4bf6:	49 d3 e9             	shr    %cl,%r9
    4bf9:	c4 c1 f9 6e c9       	vmovq  %r9,%xmm1
    4bfe:	49 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%r9
    4c05:	c4 c3 f1 22 c9 01    	vpinsrq $0x1,%r9,%xmm1,%xmm1
    4c0b:	c5 f1 74 0d 8d e4 00 	vpcmpeqb 0xe48d(%rip),%xmm1,%xmm1        # 130a0 <g_dyn_entry_table+0x10>
    4c12:	00 
    4c13:	c4 e1 f9 7e cf       	vmovq  %xmm1,%rdi
    4c18:	c4 c3 e9 22 c9 01    	vpinsrq $0x1,%r9,%xmm2,%xmm1
    4c1e:	45 89 e9             	mov    %r13d,%r9d
    4c21:	c5 f1 74 15 87 e4 00 	vpcmpeqb 0xe487(%rip),%xmm1,%xmm2        # 130b0 <g_dyn_entry_table+0x20>
    4c28:	00 
    4c29:	48 85 ff             	test   %rdi,%rdi
    4c2c:	44 89 ef             	mov    %r13d,%edi
    4c2f:	41 0f 94 c2          	sete   %r10b
    4c33:	48 d3 ea             	shr    %cl,%rdx
    4c36:	44 89 e1             	mov    %r12d,%ecx
    4c39:	49 83 fa 00          	cmp    $0x0,%r10
    4c3d:	41 0f 45 fc          	cmovne %r12d,%edi
    4c41:	c4 e1 f9 7e d0       	vmovq  %xmm2,%rax
    4c46:	c5 f1 74 15 72 e4 00 	vpcmpeqb 0xe472(%rip),%xmm1,%xmm2        # 130c0 <g_dyn_entry_table+0x30>
    4c4d:	00 
    4c4e:	83 e2 4f             	and    $0x4f,%edx
    4c51:	89 ff                	mov    %edi,%edi
    4c53:	48 83 ff 00          	cmp    $0x0,%rdi
    4c57:	0f 45 ca             	cmovne %edx,%ecx
    4c5a:	31 d2                	xor    %edx,%edx
    4c5c:	48 85 c0             	test   %rax,%rax
    4c5f:	44 89 e8             	mov    %r13d,%eax
    4c62:	89 4c 24 38          	mov    %ecx,0x38(%rsp)
    4c66:	0f 94 c2             	sete   %dl
    4c69:	44 89 e9             	mov    %r13d,%ecx
    4c6c:	48 83 fa 00          	cmp    $0x0,%rdx
    4c70:	41 0f 45 c4          	cmovne %r12d,%eax
    4c74:	89 c2                	mov    %eax,%edx
    4c76:	44 89 e0             	mov    %r12d,%eax
    4c79:	48 83 fa 00          	cmp    $0x0,%rdx
    4c7d:	41 0f 45 c5          	cmovne %r13d,%eax
    4c81:	c4 e1 f9 7e d2       	vmovq  %xmm2,%rdx
    4c86:	c5 f1 74 15 42 e4 00 	vpcmpeqb 0xe442(%rip),%xmm1,%xmm2        # 130d0 <g_dyn_entry_table+0x40>
    4c8d:	00 
    4c8e:	48 85 d2             	test   %rdx,%rdx
    4c91:	0f 94 c2             	sete   %dl
    4c94:	0f b6 d2             	movzbl %dl,%edx
    4c97:	48 83 fa 00          	cmp    $0x0,%rdx
    4c9b:	45 0f 45 cc          	cmovne %r12d,%r9d
    4c9f:	c4 e1 f9 7e d2       	vmovq  %xmm2,%rdx
    4ca4:	c5 f1 74 15 34 e4 00 	vpcmpeqb 0xe434(%rip),%xmm1,%xmm2        # 130e0 <g_dyn_entry_table+0x50>
    4cab:	00 
    4cac:	44 89 4c 24 34       	mov    %r9d,0x34(%rsp)
    4cb1:	49 b9 00 80 80 80 80 	movabs $0x8080808080808000,%r9
    4cb8:	80 80 80 
    4cbb:	48 85 d2             	test   %rdx,%rdx
    4cbe:	c5 f1 74 0d 2a e4 00 	vpcmpeqb 0xe42a(%rip),%xmm1,%xmm1        # 130f0 <g_dyn_entry_table+0x60>
    4cc5:	00 
    4cc6:	0f 94 c2             	sete   %dl
    4cc9:	0f b6 d2             	movzbl %dl,%edx
    4ccc:	48 83 fa 00          	cmp    $0x0,%rdx
    4cd0:	41 0f 45 cc          	cmovne %r12d,%ecx
    4cd4:	c4 e1 f9 7e d2       	vmovq  %xmm2,%rdx
    4cd9:	89 4c 24 30          	mov    %ecx,0x30(%rsp)
    4cdd:	31 c9                	xor    %ecx,%ecx
    4cdf:	c4 63 7d 39 f2 01    	vextracti128 $0x1,%ymm14,%xmm2
    4ce5:	48 85 d2             	test   %rdx,%rdx
    4ce8:	44 89 ea             	mov    %r13d,%edx
    4ceb:	0f 94 c1             	sete   %cl
    4cee:	48 83 f9 00          	cmp    $0x0,%rcx
    4cf2:	41 0f 45 d4          	cmovne %r12d,%edx
    4cf6:	89 d2                	mov    %edx,%edx
    4cf8:	31 c9                	xor    %ecx,%ecx
    4cfa:	48 83 fa 00          	cmp    $0x0,%rdx
    4cfe:	41 0f 45 c0          	cmovne %r8d,%eax
    4d02:	c4 e1 f9 7e ca       	vmovq  %xmm1,%rdx
    4d07:	c4 e3 7d 39 e1 01    	vextracti128 $0x1,%ymm4,%xmm1
    4d0d:	41 89 c0             	mov    %eax,%r8d
    4d10:	c5 fd 6f a4 24 80 00 	vmovdqa 0x80(%rsp),%ymm4
    4d17:	00 00 
    4d19:	c5 f9 eb c1          	vpor   %xmm1,%xmm0,%xmm0
    4d1d:	48 85 d2             	test   %rdx,%rdx
    4d20:	44 89 ea             	mov    %r13d,%edx
    4d23:	c4 e3 7d 39 e1 01    	vextracti128 $0x1,%ymm4,%xmm1
    4d29:	0f 94 c1             	sete   %cl
    4d2c:	c5 f9 eb c1          	vpor   %xmm1,%xmm0,%xmm0
    4d30:	c4 e3 7d 39 f9 01    	vextracti128 $0x1,%ymm7,%xmm1
    4d36:	c4 c1 79 eb c7       	vpor   %xmm15,%xmm0,%xmm0
    4d3b:	c5 f1 eb ca          	vpor   %xmm2,%xmm1,%xmm1
    4d3f:	c5 f9 eb c3          	vpor   %xmm3,%xmm0,%xmm0
    4d43:	c5 f9 eb c1          	vpor   %xmm1,%xmm0,%xmm0
    4d47:	48 83 f9 00          	cmp    $0x0,%rcx
    4d4b:	41 0f 45 d4          	cmovne %r12d,%edx
    4d4f:	c4 e1 f9 7e c0       	vmovq  %xmm0,%rax
    4d54:	8d 0c f5 08 00 00 00 	lea    0x8(,%rsi,8),%ecx
    4d5b:	89 d2                	mov    %edx,%edx
    4d5d:	44 01 fe             	add    %r15d,%esi
    4d60:	48 d3 f8             	sar    %cl,%rax
    4d63:	44 89 f9             	mov    %r15d,%ecx
    4d66:	48 83 fa 00          	cmp    $0x0,%rdx
    4d6a:	45 0f 45 c6          	cmovne %r14d,%r8d
    4d6e:	89 c2                	mov    %eax,%edx
    4d70:	44 89 44 24 5c       	mov    %r8d,0x5c(%rsp)
    4d75:	41 89 f0             	mov    %esi,%r8d
    4d78:	45 89 e6             	mov    %r12d,%r14d
    4d7b:	c0 ea 04             	shr    $0x4,%dl
    4d7e:	41 89 d2             	mov    %edx,%r10d
    4d81:	8b 94 24 a0 00 00 00 	mov    0xa0(%rsp),%edx
    4d88:	89 b4 24 e0 00 00 00 	mov    %esi,0xe0(%rsp)
    4d8f:	41 83 e2 03          	and    $0x3,%r10d
    4d93:	48 89 5c 24 40       	mov    %rbx,0x40(%rsp)
    4d98:	83 e2 03             	and    $0x3,%edx
    4d9b:	48 83 f9 00          	cmp    $0x0,%rcx
    4d9f:	41 0f 45 d2          	cmovne %r10d,%edx
    4da3:	41 8d 48 01          	lea    0x1(%r8),%ecx
    4da7:	0f b6 c9             	movzbl %cl,%ecx
    4daa:	4c 09 c9             	or     %r9,%rcx
    4dad:	c4 e1 f9 6e f9       	vmovq  %rcx,%xmm7
    4db2:	c4 c3 c1 22 c3 01    	vpinsrq $0x1,%r11,%xmm7,%xmm0
    4db8:	c4 e2 51 00 c0       	vpshufb %xmm0,%xmm5,%xmm0
    4dbd:	c4 e1 f9 7e c1       	vmovq  %xmm0,%rcx
    4dc2:	89 ce                	mov    %ecx,%esi
    4dc4:	41 89 c8             	mov    %ecx,%r8d
    4dc7:	40 c0 ee 03          	shr    $0x3,%sil
    4dcb:	41 c0 e8 06          	shr    $0x6,%r8b
    4dcf:	89 f7                	mov    %esi,%edi
    4dd1:	44 88 44 24 64       	mov    %r8b,0x64(%rsp)
    4dd6:	83 e7 07             	and    $0x7,%edi
    4dd9:	40 88 7c 24 60       	mov    %dil,0x60(%rsp)
    4dde:	89 cf                	mov    %ecx,%edi
    4de0:	83 e1 c7             	and    $0xffffffc7,%ecx
    4de3:	88 8c 24 c0 00 00 00 	mov    %cl,0xc0(%rsp)
    4dea:	83 e7 07             	and    $0x7,%edi
    4ded:	31 c9                	xor    %ecx,%ecx
    4def:	41 80 f8 03          	cmp    $0x3,%r8b
    4df3:	41 89 d8             	mov    %ebx,%r8d
    4df6:	0f 95 c1             	setne  %cl
    4df9:	40 88 bc 24 80 00 00 	mov    %dil,0x80(%rsp)
    4e00:	00 
    4e01:	83 e6 07             	and    $0x7,%esi
    4e04:	41 83 e0 30          	and    $0x30,%r8d
    4e08:	01 f6                	add    %esi,%esi
    4e0a:	48 83 f9 00          	cmp    $0x0,%rcx
    4e0e:	45 0f 45 f5          	cmovne %r13d,%r14d
    4e12:	44 89 c1             	mov    %r8d,%ecx
    4e15:	41 89 d8             	mov    %ebx,%r8d
    4e18:	31 db                	xor    %ebx,%ebx
    4e1a:	41 c0 e8 06          	shr    $0x6,%r8b
    4e1e:	41 0f b6 f8          	movzbl %r8b,%edi
    4e22:	49 b8 aa 6a aa aa a5 	movabs $0x155a55a5aaaa6aaa,%r8
    4e29:	55 5a 15 
    4e2c:	40 80 ff 03          	cmp    $0x3,%dil
    4e30:	0f 94 c3             	sete   %bl
    4e33:	01 f1                	add    %esi,%ecx
    4e35:	49 d3 e8             	shr    %cl,%r8
    4e38:	0f b6 4c 24 60       	movzbl 0x60(%rsp),%ecx
    4e3d:	41 83 e0 03          	and    $0x3,%r8d
    4e41:	48 83 fb 00          	cmp    $0x0,%rbx
    4e45:	41 0f 45 d0          	cmovne %r8d,%edx
    4e49:	41 b8 4c 00 00 00    	mov    $0x4c,%r8d
    4e4f:	44 89 e3             	mov    %r12d,%ebx
    4e52:	49 d3 e8             	shr    %cl,%r8
    4e55:	0f b6 4c 24 70       	movzbl 0x70(%rsp),%ecx
    4e5a:	41 83 e0 01          	and    $0x1,%r8d
    4e5e:	c1 e1 04             	shl    $0x4,%ecx
    4e61:	49 83 f8 00          	cmp    $0x0,%r8
    4e65:	41 0f 45 dd          	cmovne %r13d,%ebx
    4e69:	01 df                	add    %ebx,%edi
    4e6b:	45 89 e0             	mov    %r12d,%r8d
    4e6e:	09 f9                	or     %edi,%ecx
    4e70:	89 c7                	mov    %eax,%edi
    4e72:	81 f9 f4 0f 00 00    	cmp    $0xff4,%ecx
    4e78:	0f 94 c1             	sete   %cl
    4e7b:	40 c0 ef 06          	shr    $0x6,%dil
    4e7f:	31 db                	xor    %ebx,%ebx
    4e81:	0f b6 c9             	movzbl %cl,%ecx
    4e84:	40 0f b6 ff          	movzbl %dil,%edi
    4e88:	48 83 f9 00          	cmp    $0x0,%rcx
    4e8c:	45 0f 45 c5          	cmovne %r13d,%r8d
    4e90:	44 89 44 24 2c       	mov    %r8d,0x2c(%rsp)
    4e95:	45 89 f8             	mov    %r15d,%r8d
    4e98:	0f b6 4c 24 5c       	movzbl 0x5c(%rsp),%ecx
    4e9d:	41 c1 e0 04          	shl    $0x4,%r8d
    4ea1:	c5 fb f0 0d 67 31 01 	vlddqu 0x13167(%rip),%xmm1        # 18010 <extension_2op_table>
    4ea8:	00 
    4ea9:	41 09 f8             	or     %edi,%r8d
    4eac:	41 83 f8 11          	cmp    $0x11,%r8d
    4eb0:	0f 94 c3             	sete   %bl
    4eb3:	01 c9                	add    %ecx,%ecx
    4eb5:	c0 e8 03             	shr    $0x3,%al
    4eb8:	42 8d 0c d1          	lea    (%rcx,%r10,8),%ecx
    4ebc:	41 ba 1a 05 0a 00    	mov    $0xa051a,%r10d
    4ec2:	83 e0 07             	and    $0x7,%eax
    4ec5:	41 d3 ea             	shr    %cl,%r10d
    4ec8:	41 83 e2 03          	and    $0x3,%r10d
    4ecc:	48 83 fb 00          	cmp    $0x0,%rbx
    4ed0:	41 0f 45 d2          	cmovne %r10d,%edx
    4ed4:	44 8d 14 00          	lea    (%rax,%rax,1),%r10d
    4ed8:	41 8d 4a 01          	lea    0x1(%r10),%ecx
    4edc:	c1 e1 08             	shl    $0x8,%ecx
    4edf:	44 09 d1             	or     %r10d,%ecx
    4ee2:	41 83 f8 13          	cmp    $0x13,%r8d
    4ee6:	c5 f9 6e f9          	vmovd  %ecx,%xmm7
    4eea:	89 f1                	mov    %esi,%ecx
    4eec:	0f b6 74 24 64       	movzbl 0x64(%rsp),%esi
    4ef1:	41 0f 94 c0          	sete   %r8b
    4ef5:	41 c1 e7 0c          	shl    $0xc,%r15d
    4ef9:	c5 f9 70 c7 00       	vpshufd $0x0,%xmm7,%xmm0
    4efe:	45 0f b6 c0          	movzbl %r8b,%r8d
    4f02:	c1 e7 08             	shl    $0x8,%edi
    4f05:	c4 e2 71 00 c0       	vpshufb %xmm0,%xmm1,%xmm0
    4f0a:	89 74 24 64          	mov    %esi,0x64(%rsp)
    4f0e:	c4 c1 f9 7e c2       	vmovq  %xmm0,%r10
    4f13:	41 d3 ea             	shr    %cl,%r10d
    4f16:	41 83 e2 03          	and    $0x3,%r10d
    4f1a:	49 83 f8 00          	cmp    $0x0,%r8
    4f1e:	41 0f 45 d2          	cmovne %r10d,%edx
    4f22:	41 89 f0             	mov    %esi,%r8d
    4f25:	c1 e6 04             	shl    $0x4,%esi
    4f28:	44 8b 94 24 e0 00 00 	mov    0xe0(%rsp),%r10d
    4f2f:	00 
    4f30:	41 09 f7             	or     %esi,%r15d
    4f33:	89 74 24 60          	mov    %esi,0x60(%rsp)
    4f37:	41 09 c7             	or     %eax,%r15d
    4f3a:	31 c0                	xor    %eax,%eax
    4f3c:	41 09 ff             	or     %edi,%r15d
    4f3f:	41 81 ff 32 13 00 00 	cmp    $0x1332,%r15d
    4f46:	44 0f b6 bc 24 c0 00 	movzbl 0xc0(%rsp),%r15d
    4f4d:	00 00 
    4f4f:	0f 97 c0             	seta   %al
    4f52:	48 83 f8 00          	cmp    $0x0,%rax
    4f56:	41 0f 45 d4          	cmovne %r12d,%edx
    4f5a:	31 c0                	xor    %eax,%eax
    4f5c:	41 80 f8 03          	cmp    $0x3,%r8b
    4f60:	0f 94 c0             	sete   %al
    4f63:	48 83 f8 00          	cmp    $0x0,%rax
    4f67:	41 0f 45 d4          	cmovne %r12d,%edx
    4f6b:	89 54 24 28          	mov    %edx,0x28(%rsp)
    4f6f:	44 89 d2             	mov    %r10d,%edx
    4f72:	8d 42 02             	lea    0x2(%rdx),%eax
    4f75:	0f b6 c0             	movzbl %al,%eax
    4f78:	48 89 c2             	mov    %rax,%rdx
    4f7b:	48 8d 48 01          	lea    0x1(%rax),%rcx
    4f7f:	4c 09 ca             	or     %r9,%rdx
    4f82:	48 c1 e1 08          	shl    $0x8,%rcx
    4f86:	c4 e1 f9 6e c2       	vmovq  %rdx,%xmm0
    4f8b:	48 8d 50 03          	lea    0x3(%rax),%rdx
    4f8f:	48 c1 e2 18          	shl    $0x18,%rdx
    4f93:	c4 c3 f9 22 c3 01    	vpinsrq $0x1,%r11,%xmm0,%xmm0
    4f99:	48 09 ca             	or     %rcx,%rdx
    4f9c:	c4 e2 51 00 c0       	vpshufb %xmm0,%xmm5,%xmm0
    4fa1:	48 b9 00 00 00 00 80 	movabs $0x8080808000000000,%rcx
    4fa8:	80 80 80 
    4fab:	48 09 c2             	or     %rax,%rdx
    4fae:	48 83 c0 02          	add    $0x2,%rax
    4fb2:	c4 c1 f9 7e c0       	vmovq  %xmm0,%r8
    4fb7:	48 c1 e0 10          	shl    $0x10,%rax
    4fbb:	48 09 d0             	or     %rdx,%rax
    4fbe:	44 89 d2             	mov    %r10d,%edx
    4fc1:	83 c2 03             	add    $0x3,%edx
    4fc4:	48 09 c8             	or     %rcx,%rax
    4fc7:	0f b6 d2             	movzbl %dl,%edx
    4fca:	c4 e1 f9 6e e0       	vmovq  %rax,%xmm4
    4fcf:	48 8d 72 01          	lea    0x1(%rdx),%rsi
    4fd3:	48 8d 42 03          	lea    0x3(%rdx),%rax
    4fd7:	c4 c3 d9 22 c3 01    	vpinsrq $0x1,%r11,%xmm4,%xmm0
    4fdd:	48 c1 e6 08          	shl    $0x8,%rsi
    4fe1:	48 c1 e0 18          	shl    $0x18,%rax
    4fe5:	c4 e2 51 00 c0       	vpshufb %xmm0,%xmm5,%xmm0
    4fea:	48 09 f0             	or     %rsi,%rax
    4fed:	48 8d 72 02          	lea    0x2(%rdx),%rsi
    4ff1:	c4 e1 f9 7e c3       	vmovq  %xmm0,%rbx
    4ff6:	48 09 d0             	or     %rdx,%rax
    4ff9:	48 c1 e6 10          	shl    $0x10,%rsi
    4ffd:	4c 09 ca             	or     %r9,%rdx
    5000:	48 89 5c 24 70       	mov    %rbx,0x70(%rsp)
    5005:	48 09 f0             	or     %rsi,%rax
    5008:	c4 e1 f9 6e e2       	vmovq  %rdx,%xmm4
    500d:	bb 04 00 00 00       	mov    $0x4,%ebx
    5012:	44 89 e2             	mov    %r12d,%edx
    5015:	48 09 c8             	or     %rcx,%rax
    5018:	31 c9                	xor    %ecx,%ecx
    501a:	41 80 ff 05          	cmp    $0x5,%r15b
    501e:	44 89 e6             	mov    %r12d,%esi
    5021:	c4 e1 f9 6e f8       	vmovq  %rax,%xmm7
    5026:	0f 94 c1             	sete   %cl
    5029:	45 89 c1             	mov    %r8d,%r9d
    502c:	45 31 d2             	xor    %r10d,%r10d
    502f:	c4 c3 c1 22 c3 01    	vpinsrq $0x1,%r11,%xmm7,%xmm0
    5035:	c4 e2 51 00 c0       	vpshufb %xmm0,%xmm5,%xmm0
    503a:	c4 e1 f9 7e c0       	vmovq  %xmm0,%rax
    503f:	c4 c3 d9 22 c3 01    	vpinsrq $0x1,%r11,%xmm4,%xmm0
    5045:	45 89 f3             	mov    %r14d,%r11d
    5048:	48 83 f9 00          	cmp    $0x0,%rcx
    504c:	0f 45 54 24 70       	cmovne 0x70(%rsp),%edx
    5051:	48 83 f9 00          	cmp    $0x0,%rcx
    5055:	0f 45 f3             	cmovne %ebx,%esi
    5058:	0f b6 8c 24 80 00 00 	movzbl 0x80(%rsp),%ecx
    505f:	00 
    5060:	41 c1 e3 08          	shl    $0x8,%r11d
    5064:	c4 e2 51 00 e8       	vpshufb %xmm0,%xmm5,%xmm5
    5069:	89 4c 24 5c          	mov    %ecx,0x5c(%rsp)
    506d:	44 09 d9             	or     %r11d,%ecx
    5070:	81 f9 04 01 00 00    	cmp    $0x104,%ecx
    5076:	41 0f 94 c2          	sete   %r10b
    507a:	41 c0 e9 06          	shr    $0x6,%r9b
    507e:	41 0f b6 c9          	movzbl %r9b,%ecx
    5082:	41 b9 ff 00 00 00    	mov    $0xff,%r9d
    5088:	41 c1 e6 10          	shl    $0x10,%r14d
    508c:	44 89 cf             	mov    %r9d,%edi
    508f:	49 83 fa 00          	cmp    $0x0,%r10
    5093:	0f 45 f9             	cmovne %ecx,%edi
    5096:	44 89 e1             	mov    %r12d,%ecx
    5099:	89 7c 24 24          	mov    %edi,0x24(%rsp)
    509d:	8b 7c 24 38          	mov    0x38(%rsp),%edi
    50a1:	49 83 fa 00          	cmp    $0x0,%r10
    50a5:	41 0f 45 cd          	cmovne %r13d,%ecx
    50a9:	8d 74 0e 01          	lea    0x1(%rsi,%rcx,1),%esi
    50ad:	89 74 24 58          	mov    %esi,0x58(%rsp)
    50b1:	44 89 c6             	mov    %r8d,%esi
    50b4:	40 c0 ee 03          	shr    $0x3,%sil
    50b8:	89 f1                	mov    %esi,%ecx
    50ba:	8d 34 bd 00 00 00 00 	lea    0x0(,%rdi,4),%esi
    50c1:	83 e6 08             	and    $0x8,%esi
    50c4:	83 e1 07             	and    $0x7,%ecx
    50c7:	09 f1                	or     %esi,%ecx
    50c9:	44 89 ce             	mov    %r9d,%esi
    50cc:	49 83 fa 00          	cmp    $0x0,%r10
    50d0:	0f 45 f1             	cmovne %ecx,%esi
    50d3:	8d 0c fd 00 00 00 00 	lea    0x0(,%rdi,8),%ecx
    50da:	44 89 c7             	mov    %r8d,%edi
    50dd:	89 74 24 38          	mov    %esi,0x38(%rsp)
    50e1:	45 0f b6 c0          	movzbl %r8b,%r8d
    50e5:	83 e7 07             	and    $0x7,%edi
    50e8:	83 e1 08             	and    $0x8,%ecx
    50eb:	89 fe                	mov    %edi,%esi
    50ed:	44 89 e7             	mov    %r12d,%edi
    50f0:	09 ce                	or     %ecx,%esi
    50f2:	49 83 fa 00          	cmp    $0x0,%r10
    50f6:	0f 45 fe             	cmovne %esi,%edi
    50f9:	89 fe                	mov    %edi,%esi
    50fb:	41 0f b6 ff          	movzbl %r15b,%edi
    50ff:	41 89 f7             	mov    %esi,%r15d
    5102:	89 74 24 20          	mov    %esi,0x20(%rsp)
    5106:	41 c1 e7 08          	shl    $0x8,%r15d
    510a:	44 89 fe             	mov    %r15d,%esi
    510d:	45 31 ff             	xor    %r15d,%r15d
    5110:	81 e6 00 07 00 00    	and    $0x700,%esi
    5116:	44 09 f6             	or     %r14d,%esi
    5119:	09 fe                	or     %edi,%esi
    511b:	81 fe 04 05 01 00    	cmp    $0x10504,%esi
    5121:	44 89 e6             	mov    %r12d,%esi
    5124:	41 0f 94 c7          	sete   %r15b
    5128:	41 09 fb             	or     %edi,%r11d
    512b:	44 89 e7             	mov    %r12d,%edi
    512e:	49 83 ff 00          	cmp    $0x0,%r15
    5132:	0f 45 f3             	cmovne %ebx,%esi
    5135:	49 83 ff 00          	cmp    $0x0,%r15
    5139:	0f 45 d0             	cmovne %eax,%edx
    513c:	44 8b 7c 24 58       	mov    0x58(%rsp),%r15d
    5141:	41 01 f7             	add    %esi,%r15d
    5144:	c4 e1 f9 7e ee       	vmovq  %xmm5,%rsi
    5149:	44 89 fb             	mov    %r15d,%ebx
    514c:	45 31 ff             	xor    %r15d,%r15d
    514f:	41 81 fb 44 01 00 00 	cmp    $0x144,%r11d
    5156:	40 0f b6 f6          	movzbl %sil,%esi
    515a:	41 0f 94 c7          	sete   %r15b
    515e:	49 83 ff 00          	cmp    $0x0,%r15
    5162:	0f 45 fe             	cmovne %esi,%edi
    5165:	44 89 e6             	mov    %r12d,%esi
    5168:	49 83 ff 00          	cmp    $0x0,%r15
    516c:	41 0f 45 f5          	cmovne %r13d,%esi
    5170:	01 de                	add    %ebx,%esi
    5172:	41 81 fb 84 01 00 00 	cmp    $0x184,%r11d
    5179:	41 bf 04 00 00 00    	mov    $0x4,%r15d
    517f:	8b 5c 24 5c          	mov    0x5c(%rsp),%ebx
    5183:	41 0f 94 c3          	sete   %r11b
    5187:	45 0f b6 db          	movzbl %r11b,%r11d
    518b:	49 83 fb 00          	cmp    $0x0,%r11
    518f:	0f 45 d0             	cmovne %eax,%edx
    5192:	44 89 e0             	mov    %r12d,%eax
    5195:	49 83 fb 00          	cmp    $0x0,%r11
    5199:	41 0f 45 c7          	cmovne %r15d,%eax
    519d:	45 31 db             	xor    %r11d,%r11d
    51a0:	01 c6                	add    %eax,%esi
    51a2:	80 bc 24 80 00 00 00 	cmpb   $0x4,0x80(%rsp)
    51a9:	04 
    51aa:	44 89 e0             	mov    %r12d,%eax
    51ad:	41 0f 95 c3          	setne  %r11b
    51b1:	49 83 fb 00          	cmp    $0x0,%r11
    51b5:	41 0f 45 c5          	cmovne %r13d,%eax
    51b9:	44 8b 5c 24 64       	mov    0x64(%rsp),%r11d
    51be:	c1 e0 08             	shl    $0x8,%eax
    51c1:	44 09 f0             	or     %r14d,%eax
    51c4:	44 09 d8             	or     %r11d,%eax
    51c7:	45 31 db             	xor    %r11d,%r11d
    51ca:	3d 01 01 01 00       	cmp    $0x10101,%eax
    51cf:	41 0f 94 c3          	sete   %r11b
    51d3:	49 83 fb 00          	cmp    $0x0,%r11
    51d7:	41 0f 45 f8          	cmovne %r8d,%edi
    51db:	45 89 e0             	mov    %r12d,%r8d
    51de:	49 83 fb 00          	cmp    $0x0,%r11
    51e2:	45 0f 45 c5          	cmovne %r13d,%r8d
    51e6:	41 01 f0             	add    %esi,%r8d
    51e9:	3d 02 01 01 00       	cmp    $0x10102,%eax
    51ee:	4c 0f be df          	movsbq %dil,%r11
    51f2:	44 89 e6             	mov    %r12d,%esi
    51f5:	0f 94 c0             	sete   %al
    51f8:	09 d9                	or     %ebx,%ecx
    51fa:	0f b6 c0             	movzbl %al,%eax
    51fd:	49 83 fa 00          	cmp    $0x0,%r10
    5201:	41 0f 45 cf          	cmovne %r15d,%ecx
    5205:	48 83 f8 00          	cmp    $0x0,%rax
    5209:	41 0f 45 f7          	cmovne %r15d,%esi
    520d:	48 83 f8 00          	cmp    $0x0,%rax
    5211:	0f 45 54 24 70       	cmovne 0x70(%rsp),%edx
    5216:	41 01 f0             	add    %esi,%r8d
    5219:	31 c0                	xor    %eax,%eax
    521b:	8b 74 24 20          	mov    0x20(%rsp),%esi
    521f:	4d 85 db             	test   %r11,%r11
    5222:	0f 94 c0             	sete   %al
    5225:	89 d2                	mov    %edx,%edx
    5227:	41 89 da             	mov    %ebx,%r10d
    522a:	48 83 f8 00          	cmp    $0x0,%rax
    522e:	4c 0f 45 da          	cmovne %rdx,%r11
    5232:	31 d2                	xor    %edx,%edx
    5234:	80 bc 24 c0 00 00 00 	cmpb   $0x4,0xc0(%rsp)
    523b:	04 
    523c:	0f b6 c1             	movzbl %cl,%eax
    523f:	44 8b 7c 24 60       	mov    0x60(%rsp),%r15d
    5244:	0f 94 c2             	sete   %dl
    5247:	48 8b 7c 24 78       	mov    0x78(%rsp),%rdi
    524c:	48 83 fa 00          	cmp    $0x0,%rdx
    5250:	41 0f 45 c1          	cmovne %r9d,%eax
    5254:	89 f2                	mov    %esi,%edx
    5256:	83 e2 07             	and    $0x7,%edx
    5259:	44 09 fa             	or     %r15d,%edx
    525c:	83 fa 05             	cmp    $0x5,%edx
    525f:	0f 94 c2             	sete   %dl
    5262:	0f b6 d2             	movzbl %dl,%edx
    5265:	48 83 fa 00          	cmp    $0x0,%rdx
    5269:	41 0f 45 f1          	cmovne %r9d,%esi
    526d:	31 d2                	xor    %edx,%edx
    526f:	80 f9 04             	cmp    $0x4,%cl
    5272:	0f 94 c2             	sete   %dl
    5275:	45 09 fa             	or     %r15d,%r10d
    5278:	48 83 fa 00          	cmp    $0x0,%rdx
    527c:	0f 45 c6             	cmovne %esi,%eax
    527f:	31 d2                	xor    %edx,%edx
    5281:	41 83 fa 05          	cmp    $0x5,%r10d
    5285:	89 c6                	mov    %eax,%esi
    5287:	b8 10 00 00 00       	mov    $0x10,%eax
    528c:	0f 94 c2             	sete   %dl
    528f:	31 db                	xor    %ebx,%ebx
    5291:	48 83 fa 00          	cmp    $0x0,%rdx
    5295:	0f 45 f0             	cmovne %eax,%esi
    5298:	e8 23 f1 ff ff       	call   43c0 <register_value_select>
    529d:	89 f1                	mov    %esi,%ecx
    529f:	8b 74 24 38          	mov    0x38(%rsp),%esi
    52a3:	4c 8b 74 24 68       	mov    0x68(%rsp),%r14
    52a8:	44 8b 54 24 34       	mov    0x34(%rsp),%r10d
    52ad:	48 89 c2             	mov    %rax,%rdx
    52b0:	31 c0                	xor    %eax,%eax
    52b2:	48 83 f9 10          	cmp    $0x10,%rcx
    52b6:	49 0f 44 d6          	cmove  %r14,%rdx
    52ba:	48 81 f9 ff 00 00 00 	cmp    $0xff,%rcx
    52c1:	48 0f 44 d3          	cmove  %rbx,%rdx
    52c5:	89 d1                	mov    %edx,%ecx
    52c7:	49 83 fa 01          	cmp    $0x1,%r10
    52cb:	48 0f 44 d1          	cmove  %rcx,%rdx
    52cf:	83 fe 04             	cmp    $0x4,%esi
    52d2:	0f 94 c0             	sete   %al
    52d5:	48 83 f8 00          	cmp    $0x0,%rax
    52d9:	41 0f 45 f1          	cmovne %r9d,%esi
    52dd:	e8 de f0 ff ff       	call   43c0 <register_value_select>
    52e2:	44 8b 4c 24 28       	mov    0x28(%rsp),%r9d
    52e7:	89 f6                	mov    %esi,%esi
    52e9:	48 83 fe 10          	cmp    $0x10,%rsi
    52ed:	49 0f 44 c6          	cmove  %r14,%rax
    52f1:	48 81 fe ff 00 00 00 	cmp    $0xff,%rsi
    52f8:	48 0f 44 c3          	cmove  %rbx,%rax
    52fc:	89 c1                	mov    %eax,%ecx
    52fe:	41 be 02 00 00 00    	mov    $0x2,%r14d
    5304:	49 83 fa 01          	cmp    $0x1,%r10
    5308:	48 0f 44 c1          	cmove  %rcx,%rax
    530c:	45 85 c9             	test   %r9d,%r9d
    530f:	44 89 e9             	mov    %r13d,%ecx
    5312:	40 0f 94 c6          	sete   %sil
    5316:	40 0f b6 f6          	movzbl %sil,%esi
    531a:	48 83 fe 00          	cmp    $0x0,%rsi
    531e:	41 0f 45 cc          	cmovne %r12d,%ecx
    5322:	41 01 c8             	add    %ecx,%r8d
    5325:	0f b6 4c 24 24       	movzbl 0x24(%rsp),%ecx
    532a:	44 89 ee             	mov    %r13d,%esi
    532d:	d3 e6                	shl    %cl,%esi
    532f:	48 63 ce             	movslq %esi,%rcx
    5332:	48 0f af c1          	imul   %rcx,%rax
    5336:	48 01 c2             	add    %rax,%rdx
    5339:	8b 84 24 a0 00 00 00 	mov    0xa0(%rsp),%eax
    5340:	4c 01 da             	add    %r11,%rdx
    5343:	83 e0 0f             	and    $0xf,%eax
    5346:	8d 70 06             	lea    0x6(%rax),%esi
    5349:	e8 72 f0 ff ff       	call   43c0 <register_value_select>
    534e:	8b 74 24 40          	mov    0x40(%rsp),%esi
    5352:	44 8b 7c 24 3c       	mov    0x3c(%rsp),%r15d
    5357:	48 89 c1             	mov    %rax,%rcx
    535a:	8b 44 24 48          	mov    0x48(%rsp),%eax
    535e:	44 8b 64 24 2c       	mov    0x2c(%rsp),%r12d
    5363:	83 e6 03             	and    $0x3,%esi
    5366:	48 83 f8 01          	cmp    $0x1,%rax
    536a:	48 0f 44 d1          	cmove  %rcx,%rdx
    536e:	89 f1                	mov    %esi,%ecx
    5370:	49 89 c3             	mov    %rax,%r11
    5373:	be 04 00 00 00       	mov    $0x4,%esi
    5378:	83 c1 01             	add    $0x1,%ecx
    537b:	48 83 f8 00          	cmp    $0x0,%rax
    537f:	44 0f 45 c9          	cmovne %ecx,%r9d
    5383:	44 89 f8             	mov    %r15d,%eax
    5386:	44 09 e0             	or     %r12d,%eax
    5389:	49 89 c2             	mov    %rax,%r10
    538c:	48 83 f8 00          	cmp    $0x0,%rax
    5390:	45 0f 45 ce          	cmovne %r14d,%r9d
    5394:	e8 27 f0 ff ff       	call   43c0 <register_value_select>
    5399:	8b 4c 24 30          	mov    0x30(%rsp),%ecx
    539d:	8b 5c 24 4c          	mov    0x4c(%rsp),%ebx
    53a1:	49 83 fa 01          	cmp    $0x1,%r10
    53a5:	48 0f 44 d0          	cmove  %rax,%rdx
    53a9:	42 8d 04 09          	lea    (%rcx,%r9,1),%eax
    53ad:	31 c9                	xor    %ecx,%ecx
    53af:	44 8b 94 24 e0 00 00 	mov    0xe0(%rsp),%r10d
    53b6:	00 
    53b7:	83 f8 02             	cmp    $0x2,%eax
    53ba:	44 89 c8             	mov    %r9d,%eax
    53bd:	0f 97 c1             	seta   %cl
    53c0:	48 83 f9 00          	cmp    $0x0,%rcx
    53c4:	41 0f 45 c5          	cmovne %r13d,%eax
    53c8:	44 89 f9             	mov    %r15d,%ecx
    53cb:	44 09 d9             	or     %r11d,%ecx
    53ce:	48 83 f9 00          	cmp    $0x0,%rcx
    53d2:	45 0f 45 c5          	cmovne %r13d,%r8d
    53d6:	44 89 e1             	mov    %r12d,%ecx
    53d9:	48 83 f9 00          	cmp    $0x0,%rcx
    53dd:	45 0f 45 c6          	cmovne %r14d,%r8d
    53e1:	42 8d 0c 03          	lea    (%rbx,%r8,1),%ecx
    53e5:	48 8b 5c 24 50       	mov    0x50(%rsp),%rbx
    53ea:	44 01 d1             	add    %r10d,%ecx
    53ed:	83 f9 10             	cmp    $0x10,%ecx
    53f0:	48 89 13             	mov    %rdx,(%rbx)
    53f3:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
    53f8:	0f 96 c1             	setbe  %cl
    53fb:	0f b6 c9             	movzbl %cl,%ecx
    53fe:	48 21 c1             	and    %rax,%rcx
    5401:	48 83 f9 00          	cmp    $0x0,%rcx
    5405:	0f 45 c0             	cmovne %eax,%eax
    5408:	f6 05 14 2a 01 00 08 	testb  $0x8,0x12a14(%rip)        # 17e23 <g_cpu_feature_indicator+0x3>
    540f:	0f 84 1b 01 00 00    	je     5530 <ct_decode+0x10d0>
    5415:	62 f1 7c 48 28 03    	vmovaps (%rbx),%zmm0
    541b:	62 f1 7c 48 28 4b 01 	vmovaps 0x40(%rbx),%zmm1
    5422:	62 f1 7c 48 28 53 02 	vmovaps 0x80(%rbx),%zmm2
    5429:	62 f1 7c 48 28 5b 03 	vmovaps 0xc0(%rbx),%zmm3
    5430:	62 f1 7c 48 28 63 04 	vmovaps 0x100(%rbx),%zmm4
    5437:	62 f1 7c 48 28 6b 05 	vmovaps 0x140(%rbx),%zmm5
    543e:	62 f1 7c 48 28 73 06 	vmovaps 0x180(%rbx),%zmm6
    5445:	62 f1 7c 48 28 7b 07 	vmovaps 0x1c0(%rbx),%zmm7
    544c:	62 71 7c 48 28 43 08 	vmovaps 0x200(%rbx),%zmm8
    5453:	62 71 7c 48 28 4b 09 	vmovaps 0x240(%rbx),%zmm9
    545a:	62 71 7c 48 28 53 0a 	vmovaps 0x280(%rbx),%zmm10
    5461:	62 71 7c 48 28 5b 0b 	vmovaps 0x2c0(%rbx),%zmm11
    5468:	62 71 7c 48 28 63 0c 	vmovaps 0x300(%rbx),%zmm12
    546f:	62 71 7c 48 28 6b 0d 	vmovaps 0x340(%rbx),%zmm13
    5476:	62 71 7c 48 28 73 0e 	vmovaps 0x380(%rbx),%zmm14
    547d:	62 71 7c 48 28 7b 0f 	vmovaps 0x3c0(%rbx),%zmm15
    5484:	48 8b 94 24 38 05 00 	mov    0x538(%rsp),%rdx
    548b:	00 
    548c:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    5493:	00 00 
    5495:	0f 85 0d 01 00 00    	jne    55a8 <ct_decode+0x1148>
    549b:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    549f:	5b                   	pop    %rbx
    54a0:	41 5c                	pop    %r12
    54a2:	41 5d                	pop    %r13
    54a4:	41 5e                	pop    %r14
    54a6:	41 5f                	pop    %r15
    54a8:	5d                   	pop    %rbp
    54a9:	c3                   	ret    
    54aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    54b0:	c5 fc 29 00          	vmovaps %ymm0,(%rax)
    54b4:	c5 fc 29 48 20       	vmovaps %ymm1,0x20(%rax)
    54b9:	c5 fc 29 50 40       	vmovaps %ymm2,0x40(%rax)
    54be:	c5 fc 29 58 60       	vmovaps %ymm3,0x60(%rax)
    54c3:	c5 fc 29 a0 80 00 00 	vmovaps %ymm4,0x80(%rax)
    54ca:	00 
    54cb:	c5 fc 29 a8 a0 00 00 	vmovaps %ymm5,0xa0(%rax)
    54d2:	00 
    54d3:	c5 fc 29 b0 c0 00 00 	vmovaps %ymm6,0xc0(%rax)
    54da:	00 
    54db:	c5 fc 29 b8 e0 00 00 	vmovaps %ymm7,0xe0(%rax)
    54e2:	00 
    54e3:	c5 7c 29 80 00 01 00 	vmovaps %ymm8,0x100(%rax)
    54ea:	00 
    54eb:	c5 7c 29 88 20 01 00 	vmovaps %ymm9,0x120(%rax)
    54f2:	00 
    54f3:	c5 7c 29 90 40 01 00 	vmovaps %ymm10,0x140(%rax)
    54fa:	00 
    54fb:	c5 7c 29 98 60 01 00 	vmovaps %ymm11,0x160(%rax)
    5502:	00 
    5503:	c5 7c 29 a0 80 01 00 	vmovaps %ymm12,0x180(%rax)
    550a:	00 
    550b:	c5 7c 29 a8 a0 01 00 	vmovaps %ymm13,0x1a0(%rax)
    5512:	00 
    5513:	c5 7c 29 b0 c0 01 00 	vmovaps %ymm14,0x1c0(%rax)
    551a:	00 
    551b:	c5 7c 29 b8 e0 01 00 	vmovaps %ymm15,0x1e0(%rax)
    5522:	00 
    5523:	e9 fa ef ff ff       	jmp    4522 <ct_decode+0xc2>
    5528:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    552f:	00 
    5530:	c5 fc 28 03          	vmovaps (%rbx),%ymm0
    5534:	c5 fc 28 4b 20       	vmovaps 0x20(%rbx),%ymm1
    5539:	c5 fc 28 53 40       	vmovaps 0x40(%rbx),%ymm2
    553e:	c5 fc 28 5b 60       	vmovaps 0x60(%rbx),%ymm3
    5543:	c5 fc 28 a3 80 00 00 	vmovaps 0x80(%rbx),%ymm4
    554a:	00 
    554b:	c5 fc 28 ab a0 00 00 	vmovaps 0xa0(%rbx),%ymm5
    5552:	00 
    5553:	c5 fc 28 b3 c0 00 00 	vmovaps 0xc0(%rbx),%ymm6
    555a:	00 
    555b:	c5 fc 28 bb e0 00 00 	vmovaps 0xe0(%rbx),%ymm7
    5562:	00 
    5563:	c5 7c 28 83 00 01 00 	vmovaps 0x100(%rbx),%ymm8
    556a:	00 
    556b:	c5 7c 28 8b 20 01 00 	vmovaps 0x120(%rbx),%ymm9
    5572:	00 
    5573:	c5 7c 28 93 40 01 00 	vmovaps 0x140(%rbx),%ymm10
    557a:	00 
    557b:	c5 7c 28 9b 60 01 00 	vmovaps 0x160(%rbx),%ymm11
    5582:	00 
    5583:	c5 7c 28 a3 80 01 00 	vmovaps 0x180(%rbx),%ymm12
    558a:	00 
    558b:	c5 7c 28 ab a0 01 00 	vmovaps 0x1a0(%rbx),%ymm13
    5592:	00 
    5593:	c5 7c 28 b3 c0 01 00 	vmovaps 0x1c0(%rbx),%ymm14
    559a:	00 
    559b:	c5 7c 28 bb e0 01 00 	vmovaps 0x1e0(%rbx),%ymm15
    55a2:	00 
    55a3:	e9 dc fe ff ff       	jmp    5484 <ct_decode+0x1024>
    55a8:	e8 f3 b3 00 00       	call   109a0 <__stack_chk_fail>
    55ad:	0f 1f 00             	nopl   (%rax)

00000000000055b0 <_ZL22init_rts_contexts_emasP9_layout_tS0_m>:
    55b0:	48 39 f7             	cmp    %rsi,%rdi
    55b3:	0f 83 f7 01 00 00    	jae    57b0 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x200>
    55b9:	41 57                	push   %r15
    55bb:	41 56                	push   %r14
    55bd:	49 89 d6             	mov    %rdx,%r14
    55c0:	41 55                	push   %r13
    55c2:	49 89 f5             	mov    %rsi,%r13
    55c5:	41 54                	push   %r12
    55c7:	55                   	push   %rbp
    55c8:	53                   	push   %rbx
    55c9:	48 89 fb             	mov    %rdi,%rbx
    55cc:	48 83 ec 08          	sub    $0x8,%rsp
    55d0:	66 f7 03 00 10       	testw  $0x1000,(%rbx)
    55d5:	0f 85 d5 00 00 00    	jne    56b0 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x100>
    55db:	48 8b 6b 08          	mov    0x8(%rbx),%rbp
    55df:	e8 14 cb 00 00       	call   120f8 <get_enclave_base>
    55e4:	44 8b 63 04          	mov    0x4(%rbx),%r12d
    55e8:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
    55ec:	4c 01 f5             	add    %r14,%rbp
    55ef:	48 01 c5             	add    %rax,%rbp
    55f2:	49 c1 e4 0c          	shl    $0xc,%r12
    55f6:	48 85 c9             	test   %rcx,%rcx
    55f9:	0f 84 81 00 00 00    	je     5680 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xd0>
    55ff:	0f b7 43 02          	movzwl 0x2(%rbx),%eax
    5603:	a8 04                	test   $0x4,%al
    5605:	75 79                	jne    5680 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xd0>
    5607:	89 c2                	mov    %eax,%edx
    5609:	41 89 c7             	mov    %eax,%r15d
    560c:	83 e2 10             	and    $0x10,%edx
    560f:	41 83 e7 08          	and    $0x8,%r15d
    5613:	a8 01                	test   $0x1,%al
    5615:	0f 84 e5 00 00 00    	je     5700 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x150>
    561b:	66 85 d2             	test   %dx,%dx
    561e:	0f 85 3c 01 00 00    	jne    5760 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x1b0>
    5624:	0f b7 03             	movzwl (%rbx),%eax
    5627:	66 45 85 ff          	test   %r15w,%r15w
    562b:	0f 85 e1 00 00 00    	jne    5712 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x162>
    5631:	66 83 f8 04          	cmp    $0x4,%ax
    5635:	0f 84 65 01 00 00    	je     57a0 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x1f0>
    563b:	83 e1 07             	and    $0x7,%ecx
    563e:	ba 80 02 00 00       	mov    $0x280,%edx
    5643:	45 31 c9             	xor    %r9d,%r9d
    5646:	45 31 c0             	xor    %r8d,%r8d
    5649:	4c 89 e6             	mov    %r12,%rsi
    564c:	48 89 ef             	mov    %rbp,%rdi
    564f:	e8 fc 61 00 00       	call   b850 <mm_init_ema>
    5654:	85 c0                	test   %eax,%eax
    5656:	75 44                	jne    569c <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xec>
    5658:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    565f:	00 
    5660:	48 83 c3 20          	add    $0x20,%rbx
    5664:	4c 39 eb             	cmp    %r13,%rbx
    5667:	0f 82 63 ff ff ff    	jb     55d0 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x20>
    566d:	48 83 c4 08          	add    $0x8,%rsp
    5671:	31 c0                	xor    %eax,%eax
    5673:	5b                   	pop    %rbx
    5674:	5d                   	pop    %rbp
    5675:	41 5c                	pop    %r12
    5677:	41 5d                	pop    %r13
    5679:	41 5e                	pop    %r14
    567b:	41 5f                	pop    %r15
    567d:	c3                   	ret    
    567e:	66 90                	xchg   %ax,%ax
    5680:	45 31 c9             	xor    %r9d,%r9d
    5683:	45 31 c0             	xor    %r8d,%r8d
    5686:	31 c9                	xor    %ecx,%ecx
    5688:	ba 81 00 00 00       	mov    $0x81,%edx
    568d:	4c 89 e6             	mov    %r12,%rsi
    5690:	48 89 ef             	mov    %rbp,%rdi
    5693:	e8 b8 61 00 00       	call   b850 <mm_init_ema>
    5698:	85 c0                	test   %eax,%eax
    569a:	74 c4                	je     5660 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xb0>
    569c:	b8 01 00 00 00       	mov    $0x1,%eax
    56a1:	48 83 c4 08          	add    $0x8,%rsp
    56a5:	5b                   	pop    %rbx
    56a6:	5d                   	pop    %rbp
    56a7:	41 5c                	pop    %r12
    56a9:	41 5d                	pop    %r13
    56ab:	41 5e                	pop    %r14
    56ad:	41 5f                	pop    %r15
    56af:	c3                   	ret    
    56b0:	8b 43 04             	mov    0x4(%rbx),%eax
    56b3:	31 ed                	xor    %ebp,%ebp
    56b5:	45 31 e4             	xor    %r12d,%r12d
    56b8:	85 c0                	test   %eax,%eax
    56ba:	74 a4                	je     5660 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xb0>
    56bc:	0f b7 7b 02          	movzwl 0x2(%rbx),%edi
    56c0:	4c 03 63 08          	add    0x8(%rbx),%r12
    56c4:	48 89 de             	mov    %rbx,%rsi
    56c7:	4c 89 e2             	mov    %r12,%rdx
    56ca:	f7 df                	neg    %edi
    56cc:	48 63 ff             	movslq %edi,%rdi
    56cf:	48 c1 e7 05          	shl    $0x5,%rdi
    56d3:	48 01 df             	add    %rbx,%rdi
    56d6:	e8 d5 fe ff ff       	call   55b0 <_ZL22init_rts_contexts_emasP9_layout_tS0_m>
    56db:	85 c0                	test   %eax,%eax
    56dd:	75 c2                	jne    56a1 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xf1>
    56df:	83 c5 01             	add    $0x1,%ebp
    56e2:	3b 6b 04             	cmp    0x4(%rbx),%ebp
    56e5:	72 d5                	jb     56bc <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x10c>
    56e7:	48 83 c3 20          	add    $0x20,%rbx
    56eb:	4c 39 eb             	cmp    %r13,%rbx
    56ee:	0f 82 dc fe ff ff    	jb     55d0 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x20>
    56f4:	e9 74 ff ff ff       	jmp    566d <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xbd>
    56f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5700:	66 85 d2             	test   %dx,%dx
    5703:	75 5b                	jne    5760 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x1b0>
    5705:	66 45 85 ff          	test   %r15w,%r15w
    5709:	0f 84 51 ff ff ff    	je     5660 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xb0>
    570f:	0f b7 03             	movzwl (%rbx),%eax
    5712:	8d 50 ef             	lea    -0x11(%rax),%edx
    5715:	66 83 fa 01          	cmp    $0x1,%dx
    5719:	76 0b                	jbe    5726 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x176>
    571b:	ba e4 02 00 00       	mov    $0x2e4,%edx
    5720:	66 83 f8 07          	cmp    $0x7,%ax
    5724:	75 05                	jne    572b <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x17b>
    5726:	ba d4 02 00 00       	mov    $0x2d4,%edx
    572b:	45 31 c9             	xor    %r9d,%r9d
    572e:	45 31 c0             	xor    %r8d,%r8d
    5731:	31 c9                	xor    %ecx,%ecx
    5733:	4c 89 e6             	mov    %r12,%rsi
    5736:	48 89 ef             	mov    %rbp,%rdi
    5739:	e8 12 62 00 00       	call   b950 <mm_alloc>
    573e:	85 c0                	test   %eax,%eax
    5740:	0f 85 56 ff ff ff    	jne    569c <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xec>
    5746:	48 83 c3 20          	add    $0x20,%rbx
    574a:	4c 39 eb             	cmp    %r13,%rbx
    574d:	0f 82 7d fe ff ff    	jb     55d0 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x20>
    5753:	e9 15 ff ff ff       	jmp    566d <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xbd>
    5758:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    575f:	00 
    5760:	45 31 c9             	xor    %r9d,%r9d
    5763:	45 31 c0             	xor    %r8d,%r8d
    5766:	b9 03 00 00 00       	mov    $0x3,%ecx
    576b:	ba 80 00 00 00       	mov    $0x80,%edx
    5770:	4c 89 e6             	mov    %r12,%rsi
    5773:	48 89 ef             	mov    %rbp,%rdi
    5776:	e8 d5 60 00 00       	call   b850 <mm_init_ema>
    577b:	85 c0                	test   %eax,%eax
    577d:	0f 85 19 ff ff ff    	jne    569c <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xec>
    5783:	4c 89 e6             	mov    %r12,%rsi
    5786:	48 89 ef             	mov    %rbp,%rdi
    5789:	e8 02 62 00 00       	call   b990 <mm_dealloc>
    578e:	85 c0                	test   %eax,%eax
    5790:	0f 84 6f ff ff ff    	je     5705 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x155>
    5796:	e9 01 ff ff ff       	jmp    569c <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xec>
    579b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    57a0:	ba 80 01 00 00       	mov    $0x180,%edx
    57a5:	31 c9                	xor    %ecx,%ecx
    57a7:	e9 97 fe ff ff       	jmp    5643 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x93>
    57ac:	0f 1f 40 00          	nopl   0x0(%rax)
    57b0:	31 c0                	xor    %eax,%eax
    57b2:	c3                   	ret    
    57b3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    57ba:	00 00 00 
    57bd:	0f 1f 00             	nopl   (%rax)

00000000000057c0 <init_rts_emas>:
    57c0:	f3 0f 1e fa          	endbr64 
    57c4:	55                   	push   %rbp
    57c5:	48 89 d5             	mov    %rdx,%rbp
    57c8:	53                   	push   %rbx
    57c9:	48 89 f3             	mov    %rsi,%rbx
    57cc:	48 83 ec 08          	sub    $0x8,%rsp
    57d0:	e8 5b 32 00 00       	call   8a30 <init_segment_emas>
    57d5:	85 c0                	test   %eax,%eax
    57d7:	74 07                	je     57e0 <init_rts_emas+0x20>
    57d9:	48 83 c4 08          	add    $0x8,%rsp
    57dd:	5b                   	pop    %rbx
    57de:	5d                   	pop    %rbp
    57df:	c3                   	ret    
    57e0:	48 83 c4 08          	add    $0x8,%rsp
    57e4:	48 89 ee             	mov    %rbp,%rsi
    57e7:	48 89 df             	mov    %rbx,%rdi
    57ea:	31 d2                	xor    %edx,%edx
    57ec:	5b                   	pop    %rbx
    57ed:	5d                   	pop    %rbp
    57ee:	e9 bd fd ff ff       	jmp    55b0 <_ZL22init_rts_contexts_emasP9_layout_tS0_m>
    57f3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    57fa:	00 00 00 
    57fd:	0f 1f 00             	nopl   (%rax)

0000000000005800 <sgx_mm_alloc_ocall>:
    5800:	f3 0f 1e fa          	endbr64 
    5804:	41 56                	push   %r14
    5806:	41 89 ce             	mov    %ecx,%r14d
    5809:	41 55                	push   %r13
    580b:	49 89 fd             	mov    %rdi,%r13
    580e:	bf 20 00 00 00       	mov    $0x20,%edi
    5813:	41 54                	push   %r12
    5815:	49 89 f4             	mov    %rsi,%r12
    5818:	55                   	push   %rbp
    5819:	89 d5                	mov    %edx,%ebp
    581b:	53                   	push   %rbx
    581c:	e8 ff 03 00 00       	call   5c20 <sgx_ocalloc>
    5821:	48 85 c0             	test   %rax,%rax
    5824:	74 4a                	je     5870 <sgx_mm_alloc_ocall+0x70>
    5826:	89 68 18             	mov    %ebp,0x18(%rax)
    5829:	48 89 c6             	mov    %rax,%rsi
    582c:	bf fa ff ff ff       	mov    $0xfffffffa,%edi
    5831:	48 89 c3             	mov    %rax,%rbx
    5834:	4c 89 68 08          	mov    %r13,0x8(%rax)
    5838:	bd 0e 00 00 00       	mov    $0xe,%ebp
    583d:	4c 89 60 10          	mov    %r12,0x10(%rax)
    5841:	44 89 70 1c          	mov    %r14d,0x1c(%rax)
    5845:	e8 96 19 00 00       	call   71e0 <sgx_ocall>
    584a:	85 c0                	test   %eax,%eax
    584c:	74 12                	je     5860 <sgx_mm_alloc_ocall+0x60>
    584e:	e8 ad 04 00 00       	call   5d00 <sgx_ocfree>
    5853:	5b                   	pop    %rbx
    5854:	89 e8                	mov    %ebp,%eax
    5856:	5d                   	pop    %rbp
    5857:	41 5c                	pop    %r12
    5859:	41 5d                	pop    %r13
    585b:	41 5e                	pop    %r14
    585d:	c3                   	ret    
    585e:	66 90                	xchg   %ax,%ax
    5860:	8b 03                	mov    (%rbx),%eax
    5862:	f7 d8                	neg    %eax
    5864:	19 ed                	sbb    %ebp,%ebp
    5866:	83 e5 0e             	and    $0xe,%ebp
    5869:	eb e3                	jmp    584e <sgx_mm_alloc_ocall+0x4e>
    586b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5870:	e8 8b 04 00 00       	call   5d00 <sgx_ocfree>
    5875:	bd 01 00 00 00       	mov    $0x1,%ebp
    587a:	5b                   	pop    %rbx
    587b:	89 e8                	mov    %ebp,%eax
    587d:	5d                   	pop    %rbp
    587e:	41 5c                	pop    %r12
    5880:	41 5d                	pop    %r13
    5882:	41 5e                	pop    %r14
    5884:	c3                   	ret    
    5885:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    588c:	00 00 00 
    588f:	90                   	nop

0000000000005890 <sgx_mm_modify_ocall>:
    5890:	f3 0f 1e fa          	endbr64 
    5894:	41 56                	push   %r14
    5896:	41 89 ce             	mov    %ecx,%r14d
    5899:	41 55                	push   %r13
    589b:	49 89 fd             	mov    %rdi,%r13
    589e:	bf 20 00 00 00       	mov    $0x20,%edi
    58a3:	41 54                	push   %r12
    58a5:	49 89 f4             	mov    %rsi,%r12
    58a8:	55                   	push   %rbp
    58a9:	89 d5                	mov    %edx,%ebp
    58ab:	53                   	push   %rbx
    58ac:	e8 6f 03 00 00       	call   5c20 <sgx_ocalloc>
    58b1:	48 85 c0             	test   %rax,%rax
    58b4:	74 4a                	je     5900 <sgx_mm_modify_ocall+0x70>
    58b6:	89 68 18             	mov    %ebp,0x18(%rax)
    58b9:	48 89 c6             	mov    %rax,%rsi
    58bc:	bf f9 ff ff ff       	mov    $0xfffffff9,%edi
    58c1:	48 89 c3             	mov    %rax,%rbx
    58c4:	4c 89 68 08          	mov    %r13,0x8(%rax)
    58c8:	bd 0e 00 00 00       	mov    $0xe,%ebp
    58cd:	4c 89 60 10          	mov    %r12,0x10(%rax)
    58d1:	44 89 70 1c          	mov    %r14d,0x1c(%rax)
    58d5:	e8 06 19 00 00       	call   71e0 <sgx_ocall>
    58da:	85 c0                	test   %eax,%eax
    58dc:	74 12                	je     58f0 <sgx_mm_modify_ocall+0x60>
    58de:	e8 1d 04 00 00       	call   5d00 <sgx_ocfree>
    58e3:	5b                   	pop    %rbx
    58e4:	89 e8                	mov    %ebp,%eax
    58e6:	5d                   	pop    %rbp
    58e7:	41 5c                	pop    %r12
    58e9:	41 5d                	pop    %r13
    58eb:	41 5e                	pop    %r14
    58ed:	c3                   	ret    
    58ee:	66 90                	xchg   %ax,%ax
    58f0:	8b 03                	mov    (%rbx),%eax
    58f2:	f7 d8                	neg    %eax
    58f4:	19 ed                	sbb    %ebp,%ebp
    58f6:	83 e5 0e             	and    $0xe,%ebp
    58f9:	eb e3                	jmp    58de <sgx_mm_modify_ocall+0x4e>
    58fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5900:	e8 fb 03 00 00       	call   5d00 <sgx_ocfree>
    5905:	bd 01 00 00 00       	mov    $0x1,%ebp
    590a:	5b                   	pop    %rbx
    590b:	89 e8                	mov    %ebp,%eax
    590d:	5d                   	pop    %rbp
    590e:	41 5c                	pop    %r12
    5910:	41 5d                	pop    %r13
    5912:	41 5e                	pop    %r14
    5914:	c3                   	ret    
    5915:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    591c:	00 00 00 
    591f:	90                   	nop

0000000000005920 <sgx_mm_register_pfhandler>:
    5920:	f3 0f 1e fa          	endbr64 
    5924:	31 c0                	xor    %eax,%eax
    5926:	48 83 3d 52 48 01 00 	cmpq   $0x0,0x14852(%rip)        # 1a180 <g_mm_pfhandler>
    592d:	00 
    592e:	74 08                	je     5938 <sgx_mm_register_pfhandler+0x18>
    5930:	c3                   	ret    
    5931:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5938:	48 89 3d 41 48 01 00 	mov    %rdi,0x14841(%rip)        # 1a180 <g_mm_pfhandler>
    593f:	b8 01 00 00 00       	mov    $0x1,%eax
    5944:	c3                   	ret    
    5945:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    594c:	00 00 00 
    594f:	90                   	nop

0000000000005950 <sgx_mm_unregister_pfhandler>:
    5950:	f3 0f 1e fa          	endbr64 
    5954:	31 c0                	xor    %eax,%eax
    5956:	48 39 3d 23 48 01 00 	cmp    %rdi,0x14823(%rip)        # 1a180 <g_mm_pfhandler>
    595d:	74 01                	je     5960 <sgx_mm_unregister_pfhandler+0x10>
    595f:	c3                   	ret    
    5960:	48 c7 05 15 48 01 00 	movq   $0x0,0x14815(%rip)        # 1a180 <g_mm_pfhandler>
    5967:	00 00 00 00 
    596b:	b8 01 00 00 00       	mov    $0x1,%eax
    5970:	c3                   	ret    
    5971:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5978:	00 00 00 
    597b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000005980 <sgx_mm_mutex_create>:
    5980:	f3 0f 1e fa          	endbr64 
    5984:	48 83 ec 08          	sub    $0x8,%rsp
    5988:	bf 18 00 00 00       	mov    $0x18,%edi
    598d:	e8 4e 77 00 00       	call   d0e0 <dlmalloc>
    5992:	48 85 c0             	test   %rax,%rax
    5995:	74 16                	je     59ad <sgx_mm_mutex_create+0x2d>
    5997:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    599e:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
    59a5:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    59ac:	00 
    59ad:	48 83 c4 08          	add    $0x8,%rsp
    59b1:	c3                   	ret    
    59b2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    59b9:	00 00 00 
    59bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000059c0 <sgx_mm_mutex_lock>:
    59c0:	f3 0f 1e fa          	endbr64 
    59c4:	53                   	push   %rbx
    59c5:	48 89 fb             	mov    %rdi,%rbx
    59c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    59cf:	00 
    59d0:	48 89 df             	mov    %rbx,%rdi
    59d3:	e8 d8 b0 00 00       	call   10ab0 <sgx_thread_spin_trylock>
    59d8:	85 c0                	test   %eax,%eax
    59da:	75 f4                	jne    59d0 <sgx_mm_mutex_lock+0x10>
    59dc:	5b                   	pop    %rbx
    59dd:	c3                   	ret    
    59de:	66 90                	xchg   %ax,%ax

00000000000059e0 <sgx_mm_mutex_unlock>:
    59e0:	f3 0f 1e fa          	endbr64 
    59e4:	e9 57 b1 00 00       	jmp    10b40 <sgx_thread_spin_unlock>
    59e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000059f0 <sgx_mm_mutex_destroy>:
    59f0:	f3 0f 1e fa          	endbr64 
    59f4:	55                   	push   %rbp
    59f5:	53                   	push   %rbx
    59f6:	48 89 fb             	mov    %rdi,%rbx
    59f9:	48 83 ec 08          	sub    $0x8,%rsp
    59fd:	e8 2e b0 00 00       	call   10a30 <sgx_thread_spin_destroy>
    5a02:	48 89 df             	mov    %rbx,%rdi
    5a05:	89 c5                	mov    %eax,%ebp
    5a07:	e8 c4 94 00 00       	call   eed0 <dlfree>
    5a0c:	48 83 c4 08          	add    $0x8,%rsp
    5a10:	89 e8                	mov    %ebp,%eax
    5a12:	5b                   	pop    %rbx
    5a13:	5d                   	pop    %rbp
    5a14:	c3                   	ret    
    5a15:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5a1c:	00 00 00 
    5a1f:	90                   	nop

0000000000005a20 <sgx_mm_is_within_enclave>:
    5a20:	f3 0f 1e fa          	endbr64 
    5a24:	48 83 ec 08          	sub    $0x8,%rsp
    5a28:	e8 33 01 00 00       	call   5b60 <sgx_is_within_enclave>
    5a2d:	85 c0                	test   %eax,%eax
    5a2f:	0f 95 c0             	setne  %al
    5a32:	48 83 c4 08          	add    $0x8,%rsp
    5a36:	c3                   	ret    
    5a37:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    5a3e:	00 00 

0000000000005a40 <init_optimized_libs>:
    5a40:	f3 0f 1e fa          	endbr64 
    5a44:	41 54                	push   %r12
    5a46:	49 89 d4             	mov    %rdx,%r12
    5a49:	55                   	push   %rbp
    5a4a:	48 89 f5             	mov    %rsi,%rbp
    5a4d:	53                   	push   %rbx
    5a4e:	48 89 fb             	mov    %rdi,%rbx
    5a51:	e8 ae c6 00 00       	call   12104 <get_enclave_state>
    5a56:	83 f8 01             	cmp    $0x1,%eax
    5a59:	0f 85 d6 00 00 00    	jne    5b35 <init_optimized_libs+0xf5>
    5a5f:	48 b8 ff ff ff ff ff 	movabs $0xffffffffffffff,%rax
    5a66:	ff ff 00 
    5a69:	48 89 da             	mov    %rbx,%rdx
    5a6c:	48 21 c2             	and    %rax,%rdx
    5a6f:	48 39 d8             	cmp    %rbx,%rax
    5a72:	48 0f 42 da          	cmovb  %rdx,%rbx
    5a76:	48 81 fb ff 01 00 00 	cmp    $0x1ff,%rbx
    5a7d:	0f 86 b2 00 00 00    	jbe    5b35 <init_optimized_libs+0xf5>
    5a83:	f6 c3 20             	test   $0x20,%bl
    5a86:	74 0e                	je     5a96 <init_optimized_libs+0x56>
    5a88:	48 89 d8             	mov    %rbx,%rax
    5a8b:	48 f7 d0             	not    %rax
    5a8e:	a8 1f                	test   $0x1f,%al
    5a90:	0f 85 9f 00 00 00    	jne    5b35 <init_optimized_libs+0xf5>
    5a96:	f6 c3 40             	test   $0x40,%bl
    5a99:	74 0e                	je     5aa9 <init_optimized_libs+0x69>
    5a9b:	48 89 d8             	mov    %rbx,%rax
    5a9e:	48 f7 d0             	not    %rax
    5aa1:	a8 3f                	test   $0x3f,%al
    5aa3:	0f 85 8c 00 00 00    	jne    5b35 <init_optimized_libs+0xf5>
    5aa9:	f6 c3 80             	test   $0x80,%bl
    5aac:	74 0a                	je     5ab8 <init_optimized_libs+0x78>
    5aae:	48 89 d8             	mov    %rbx,%rax
    5ab1:	48 f7 d0             	not    %rax
    5ab4:	a8 7f                	test   $0x7f,%al
    5ab6:	75 7d                	jne    5b35 <init_optimized_libs+0xf5>
    5ab8:	f6 c7 01             	test   $0x1,%bh
    5abb:	74 0b                	je     5ac8 <init_optimized_libs+0x88>
    5abd:	0f b6 c3             	movzbl %bl,%eax
    5ac0:	48 3d ff 00 00 00    	cmp    $0xff,%rax
    5ac6:	75 6d                	jne    5b35 <init_optimized_libs+0xf5>
    5ac8:	f6 c7 02             	test   $0x2,%bh
    5acb:	74 0d                	je     5ada <init_optimized_libs+0x9a>
    5acd:	48 89 d8             	mov    %rbx,%rax
    5ad0:	48 f7 d0             	not    %rax
    5ad3:	a9 ff 01 00 00       	test   $0x1ff,%eax
    5ad8:	75 5b                	jne    5b35 <init_optimized_libs+0xf5>
    5ada:	f6 c7 04             	test   $0x4,%bh
    5add:	75 49                	jne    5b28 <init_optimized_libs+0xe8>
    5adf:	4c 89 e0             	mov    %r12,%rax
    5ae2:	48 f7 d0             	not    %rax
    5ae5:	a8 06                	test   $0x6,%al
    5ae7:	74 57                	je     5b40 <init_optimized_libs+0x100>
    5ae9:	48 b8 ff 7f 12 86 08 	movabs $0xfffe200886127fff,%rax
    5af0:	20 fe ff 
    5af3:	48 21 c3             	and    %rax,%rbx
    5af6:	4c 8d 25 23 23 01 00 	lea    0x12323(%rip),%r12        # 17e20 <g_cpu_feature_indicator>
    5afd:	48 89 df             	mov    %rbx,%rdi
    5b00:	49 89 1c 24          	mov    %rbx,(%r12)
    5b04:	e8 67 ae 00 00       	call   10970 <sgx_init_string_lib>
    5b09:	85 c0                	test   %eax,%eax
    5b0b:	75 28                	jne    5b35 <init_optimized_libs+0xf5>
    5b0d:	49 8b 3c 24          	mov    (%r12),%rdi
    5b11:	48 89 ee             	mov    %rbp,%rsi
    5b14:	e8 f7 b4 00 00       	call   11010 <sgx_init_crypto_lib>
    5b19:	5b                   	pop    %rbx
    5b1a:	5d                   	pop    %rbp
    5b1b:	f7 d8                	neg    %eax
    5b1d:	41 5c                	pop    %r12
    5b1f:	19 c0                	sbb    %eax,%eax
    5b21:	c3                   	ret    
    5b22:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5b28:	48 89 d8             	mov    %rbx,%rax
    5b2b:	48 f7 d0             	not    %rax
    5b2e:	a9 ff 03 00 00       	test   $0x3ff,%eax
    5b33:	74 aa                	je     5adf <init_optimized_libs+0x9f>
    5b35:	5b                   	pop    %rbx
    5b36:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    5b3b:	5d                   	pop    %rbp
    5b3c:	41 5c                	pop    %r12
    5b3e:	c3                   	ret    
    5b3f:	90                   	nop
    5b40:	4c 89 e0             	mov    %r12,%rax
    5b43:	48 f7 d0             	not    %rax
    5b46:	a8 e0                	test   $0xe0,%al
    5b48:	74 ac                	je     5af6 <init_optimized_libs+0xb6>
    5b4a:	48 b8 ff ff ff b6 18 	movabs $0xfffee018b6ffffff,%rax
    5b51:	e0 fe ff 
    5b54:	48 21 c3             	and    %rax,%rbx
    5b57:	eb 9d                	jmp    5af6 <init_optimized_libs+0xb6>
    5b59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000005b60 <sgx_is_within_enclave>:
    5b60:	f3 0f 1e fa          	endbr64 
    5b64:	48 8d 05 a5 22 01 00 	lea    0x122a5(%rip),%rax        # 17e10 <g_enclave_base>
    5b6b:	48 8b 10             	mov    (%rax),%rdx
    5b6e:	48 8d 05 93 22 01 00 	lea    0x12293(%rip),%rax        # 17e08 <g_enclave_size>
    5b75:	48 8b 08             	mov    (%rax),%rcx
    5b78:	48 01 d1             	add    %rdx,%rcx
    5b7b:	48 89 c8             	mov    %rcx,%rax
    5b7e:	48 83 e8 01          	sub    $0x1,%rax
    5b82:	48 85 f6             	test   %rsi,%rsi
    5b85:	74 21                	je     5ba8 <sgx_is_within_enclave+0x48>
    5b87:	48 83 ee 01          	sub    $0x1,%rsi
    5b8b:	48 01 fe             	add    %rdi,%rsi
    5b8e:	0f 93 c1             	setae  %cl
    5b91:	48 39 d7             	cmp    %rdx,%rdi
    5b94:	0f 93 c2             	setae  %dl
    5b97:	21 ca                	and    %ecx,%edx
    5b99:	48 39 f0             	cmp    %rsi,%rax
    5b9c:	0f 93 c0             	setae  %al
    5b9f:	0f b6 c0             	movzbl %al,%eax
    5ba2:	21 d0                	and    %edx,%eax
    5ba4:	c3                   	ret    
    5ba5:	0f 1f 00             	nopl   (%rax)
    5ba8:	48 89 fe             	mov    %rdi,%rsi
    5bab:	b9 01 00 00 00       	mov    $0x1,%ecx
    5bb0:	eb df                	jmp    5b91 <sgx_is_within_enclave+0x31>
    5bb2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5bb9:	00 00 00 
    5bbc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005bc0 <sgx_is_outside_enclave>:
    5bc0:	f3 0f 1e fa          	endbr64 
    5bc4:	48 85 f6             	test   %rsi,%rsi
    5bc7:	74 17                	je     5be0 <sgx_is_outside_enclave+0x20>
    5bc9:	48 83 ee 01          	sub    $0x1,%rsi
    5bcd:	b8 00 00 00 00       	mov    $0x0,%eax
    5bd2:	48 01 fe             	add    %rdi,%rsi
    5bd5:	73 0c                	jae    5be3 <sgx_is_outside_enclave+0x23>
    5bd7:	c3                   	ret    
    5bd8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    5bdf:	00 
    5be0:	48 89 fe             	mov    %rdi,%rsi
    5be3:	48 8d 05 26 22 01 00 	lea    0x12226(%rip),%rax        # 17e10 <g_enclave_base>
    5bea:	48 8b 10             	mov    (%rax),%rdx
    5bed:	48 8d 05 14 22 01 00 	lea    0x12214(%rip),%rax        # 17e08 <g_enclave_size>
    5bf4:	48 8b 08             	mov    (%rax),%rcx
    5bf7:	48 01 d1             	add    %rdx,%rcx
    5bfa:	48 89 c8             	mov    %rcx,%rax
    5bfd:	48 83 e8 01          	sub    $0x1,%rax
    5c01:	48 39 f8             	cmp    %rdi,%rax
    5c04:	0f 92 c0             	setb   %al
    5c07:	48 39 d6             	cmp    %rdx,%rsi
    5c0a:	0f 92 c2             	setb   %dl
    5c0d:	09 d0                	or     %edx,%eax
    5c0f:	0f b6 c0             	movzbl %al,%eax
    5c12:	c3                   	ret    
    5c13:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5c1a:	00 00 00 
    5c1d:	0f 1f 00             	nopl   (%rax)

0000000000005c20 <sgx_ocalloc>:
    5c20:	f3 0f 1e fa          	endbr64 
    5c24:	53                   	push   %rbx
    5c25:	48 89 fb             	mov    %rdi,%rbx
    5c28:	48 83 ec 10          	sub    $0x10,%rsp
    5c2c:	e8 12 c5 00 00       	call   12143 <get_thread_data>
    5c31:	48 8d 15 d8 21 01 00 	lea    0x121d8(%rip),%rdx        # 17e10 <g_enclave_base>
    5c38:	48 8b 70 20          	mov    0x20(%rax),%rsi
    5c3c:	48 8b 3a             	mov    (%rdx),%rdi
    5c3f:	48 8d 15 c2 21 01 00 	lea    0x121c2(%rip),%rdx        # 17e08 <g_enclave_size>
    5c46:	48 8b 86 90 00 00 00 	mov    0x90(%rsi),%rax
    5c4d:	48 8b 0a             	mov    (%rdx),%rcx
    5c50:	48 89 c2             	mov    %rax,%rdx
    5c53:	48 83 c2 07          	add    $0x7,%rdx
    5c57:	72 33                	jb     5c8c <sgx_ocalloc+0x6c>
    5c59:	4c 8d 44 0f ff       	lea    -0x1(%rdi,%rcx,1),%r8
    5c5e:	48 39 fa             	cmp    %rdi,%rdx
    5c61:	72 05                	jb     5c68 <sgx_ocalloc+0x48>
    5c63:	49 39 c0             	cmp    %rax,%r8
    5c66:	73 24                	jae    5c8c <sgx_ocalloc+0x6c>
    5c68:	48 39 d8             	cmp    %rbx,%rax
    5c6b:	72 1f                	jb     5c8c <sgx_ocalloc+0x6c>
    5c6d:	48 89 c2             	mov    %rax,%rdx
    5c70:	48 29 da             	sub    %rbx,%rdx
    5c73:	48 89 d1             	mov    %rdx,%rcx
    5c76:	48 83 e1 f0          	and    $0xfffffffffffffff0,%rcx
    5c7a:	48 85 db             	test   %rbx,%rbx
    5c7d:	75 19                	jne    5c98 <sgx_ocalloc+0x78>
    5c7f:	48 89 cb             	mov    %rcx,%rbx
    5c82:	48 39 fb             	cmp    %rdi,%rbx
    5c85:	72 21                	jb     5ca8 <sgx_ocalloc+0x88>
    5c87:	49 39 c8             	cmp    %rcx,%r8
    5c8a:	72 1c                	jb     5ca8 <sgx_ocalloc+0x88>
    5c8c:	e8 a6 c8 00 00       	call   12537 <abort>
    5c91:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5c98:	48 83 eb 01          	sub    $0x1,%rbx
    5c9c:	48 01 cb             	add    %rcx,%rbx
    5c9f:	72 eb                	jb     5c8c <sgx_ocalloc+0x6c>
    5ca1:	eb df                	jmp    5c82 <sgx_ocalloc+0x62>
    5ca3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5ca8:	48 83 e8 01          	sub    $0x1,%rax
    5cac:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    5cb2:	48 81 e2 00 f0 ff ff 	and    $0xfffffffffffff000,%rdx
    5cb9:	75 1d                	jne    5cd8 <sgx_ocalloc+0xb8>
    5cbb:	eb cf                	jmp    5c8c <sgx_ocalloc+0x6c>
    5cbd:	0f 1f 00             	nopl   (%rax)
    5cc0:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    5cc5:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    5cca:	c6 00 00             	movb   $0x0,(%rax)
    5ccd:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    5cd2:	48 2d 00 10 00 00    	sub    $0x1000,%rax
    5cd8:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    5cdd:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    5ce2:	48 39 d0             	cmp    %rdx,%rax
    5ce5:	73 d9                	jae    5cc0 <sgx_ocalloc+0xa0>
    5ce7:	48 89 8e 90 00 00 00 	mov    %rcx,0x90(%rsi)
    5cee:	48 83 c4 10          	add    $0x10,%rsp
    5cf2:	48 89 c8             	mov    %rcx,%rax
    5cf5:	5b                   	pop    %rbx
    5cf6:	c3                   	ret    
    5cf7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    5cfe:	00 00 

0000000000005d00 <sgx_ocfree>:
    5d00:	f3 0f 1e fa          	endbr64 
    5d04:	48 83 ec 08          	sub    $0x8,%rsp
    5d08:	e8 36 c4 00 00       	call   12143 <get_thread_data>
    5d0d:	48 8d 15 fc 20 01 00 	lea    0x120fc(%rip),%rdx        # 17e10 <g_enclave_base>
    5d14:	48 8d 0d ed 20 01 00 	lea    0x120ed(%rip),%rcx        # 17e08 <g_enclave_size>
    5d1b:	48 8b 70 20          	mov    0x20(%rax),%rsi
    5d1f:	48 8b 40 08          	mov    0x8(%rax),%rax
    5d23:	48 8b 12             	mov    (%rdx),%rdx
    5d26:	48 8b 09             	mov    (%rcx),%rcx
    5d29:	48 8b 40 e8          	mov    -0x18(%rax),%rax
    5d2d:	48 89 c7             	mov    %rax,%rdi
    5d30:	48 83 c7 07          	add    $0x7,%rdi
    5d34:	72 0f                	jb     5d45 <sgx_ocfree+0x45>
    5d36:	48 8d 4c 0a ff       	lea    -0x1(%rdx,%rcx,1),%rcx
    5d3b:	48 39 c1             	cmp    %rax,%rcx
    5d3e:	72 10                	jb     5d50 <sgx_ocfree+0x50>
    5d40:	48 39 d7             	cmp    %rdx,%rdi
    5d43:	72 0b                	jb     5d50 <sgx_ocfree+0x50>
    5d45:	e8 ed c7 00 00       	call   12537 <abort>
    5d4a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5d50:	48 89 86 90 00 00 00 	mov    %rax,0x90(%rsi)
    5d57:	48 83 c4 08          	add    $0x8,%rsp
    5d5b:	c3                   	ret    
    5d5c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005d60 <sgx_read_rand>:
    5d60:	f3 0f 1e fa          	endbr64 
    5d64:	41 55                	push   %r13
    5d66:	41 54                	push   %r12
    5d68:	55                   	push   %rbp
    5d69:	53                   	push   %rbx
    5d6a:	48 83 ec 18          	sub    $0x18,%rsp
    5d6e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    5d75:	00 00 
    5d77:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    5d7c:	31 c0                	xor    %eax,%eax
    5d7e:	48 85 ff             	test   %rdi,%rdi
    5d81:	0f 84 f9 00 00 00    	je     5e80 <sgx_read_rand+0x120>
    5d87:	48 89 f3             	mov    %rsi,%rbx
    5d8a:	48 85 f6             	test   %rsi,%rsi
    5d8d:	0f 84 ed 00 00 00    	je     5e80 <sgx_read_rand+0x120>
    5d93:	48 8d 05 76 20 01 00 	lea    0x12076(%rip),%rax        # 17e10 <g_enclave_base>
    5d9a:	48 89 fd             	mov    %rdi,%rbp
    5d9d:	31 ff                	xor    %edi,%edi
    5d9f:	48 8b 08             	mov    (%rax),%rcx
    5da2:	48 8d 05 5f 20 01 00 	lea    0x1205f(%rip),%rax        # 17e08 <g_enclave_size>
    5da9:	48 8b 10             	mov    (%rax),%rdx
    5dac:	48 8d 46 ff          	lea    -0x1(%rsi),%rax
    5db0:	48 01 ca             	add    %rcx,%rdx
    5db3:	48 83 ea 01          	sub    $0x1,%rdx
    5db7:	48 01 e8             	add    %rbp,%rax
    5dba:	40 0f 92 c7          	setb   %dil
    5dbe:	48 39 c2             	cmp    %rax,%rdx
    5dc1:	41 0f 93 c0          	setae  %r8b
    5dc5:	48 85 ff             	test   %rdi,%rdi
    5dc8:	40 0f 94 c6          	sete   %sil
    5dcc:	41 84 f0             	test   %sil,%r8b
    5dcf:	74 05                	je     5dd6 <sgx_read_rand+0x76>
    5dd1:	48 39 cd             	cmp    %rcx,%rbp
    5dd4:	73 42                	jae    5e18 <sgx_read_rand+0xb8>
    5dd6:	be 02 00 00 00       	mov    $0x2,%esi
    5ddb:	48 85 ff             	test   %rdi,%rdi
    5dde:	74 28                	je     5e08 <sgx_read_rand+0xa8>
    5de0:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    5de5:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    5dec:	00 00 
    5dee:	0f 85 96 00 00 00    	jne    5e8a <sgx_read_rand+0x12a>
    5df4:	48 83 c4 18          	add    $0x18,%rsp
    5df8:	89 f0                	mov    %esi,%eax
    5dfa:	5b                   	pop    %rbx
    5dfb:	5d                   	pop    %rbp
    5dfc:	41 5c                	pop    %r12
    5dfe:	41 5d                	pop    %r13
    5e00:	c3                   	ret    
    5e01:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5e08:	48 39 c8             	cmp    %rcx,%rax
    5e0b:	72 0b                	jb     5e18 <sgx_read_rand+0xb8>
    5e0d:	48 39 d5             	cmp    %rdx,%rbp
    5e10:	76 ce                	jbe    5de0 <sgx_read_rand+0x80>
    5e12:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5e18:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
    5e1f:	00 
    5e20:	4c 8d 6c 24 04       	lea    0x4(%rsp),%r13
    5e25:	4c 89 ef             	mov    %r13,%rdi
    5e28:	e8 e7 c6 00 00       	call   12514 <do_rdrand>
    5e2d:	85 c0                	test   %eax,%eax
    5e2f:	74 3f                	je     5e70 <sgx_read_rand+0x110>
    5e31:	41 bc 04 00 00 00    	mov    $0x4,%r12d
    5e37:	48 89 ef             	mov    %rbp,%rdi
    5e3a:	4c 89 ee             	mov    %r13,%rsi
    5e3d:	4c 39 e3             	cmp    %r12,%rbx
    5e40:	4c 0f 46 e3          	cmovbe %rbx,%r12
    5e44:	4c 89 e2             	mov    %r12,%rdx
    5e47:	4c 01 e5             	add    %r12,%rbp
    5e4a:	e8 31 a8 00 00       	call   10680 <memcpy>
    5e4f:	4c 29 e3             	sub    %r12,%rbx
    5e52:	75 d1                	jne    5e25 <sgx_read_rand+0xc5>
    5e54:	be 04 00 00 00       	mov    $0x4,%esi
    5e59:	b9 04 00 00 00       	mov    $0x4,%ecx
    5e5e:	31 d2                	xor    %edx,%edx
    5e60:	4c 89 ef             	mov    %r13,%rdi
    5e63:	e8 68 aa 00 00       	call   108d0 <memset_s>
    5e68:	31 f6                	xor    %esi,%esi
    5e6a:	e9 71 ff ff ff       	jmp    5de0 <sgx_read_rand+0x80>
    5e6f:	90                   	nop
    5e70:	be 01 00 00 00       	mov    $0x1,%esi
    5e75:	e9 66 ff ff ff       	jmp    5de0 <sgx_read_rand+0x80>
    5e7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5e80:	be 02 00 00 00       	mov    $0x2,%esi
    5e85:	e9 56 ff ff ff       	jmp    5de0 <sgx_read_rand+0x80>
    5e8a:	e8 11 ab 00 00       	call   109a0 <__stack_chk_fail>
    5e8f:	90                   	nop

0000000000005e90 <check_static_stack_canary>:
    5e90:	f3 0f 1e fa          	endbr64 
    5e94:	48 8d 05 5d 1f 01 00 	lea    0x11f5d(%rip),%rax        # 17df8 <__intel_security_cookie>
    5e9b:	48 8b 00             	mov    (%rax),%rax
    5e9e:	48 39 87 08 fc fe ff 	cmp    %rax,-0x103f8(%rdi)
    5ea5:	0f 95 c0             	setne  %al
    5ea8:	0f b6 c0             	movzbl %al,%eax
    5eab:	f7 d8                	neg    %eax
    5ead:	c3                   	ret    
    5eae:	66 90                	xchg   %ax,%ax

0000000000005eb0 <sgx_rdpkru>:
    5eb0:	f3 0f 1e fa          	endbr64 
    5eb4:	53                   	push   %rbx
    5eb5:	48 89 fb             	mov    %rdi,%rbx
    5eb8:	e8 33 18 00 00       	call   76f0 <is_pkru_enabled>
    5ebd:	89 c2                	mov    %eax,%edx
    5ebf:	31 c0                	xor    %eax,%eax
    5ec1:	84 d2                	test   %dl,%dl
    5ec3:	74 0c                	je     5ed1 <sgx_rdpkru+0x21>
    5ec5:	89 c1                	mov    %eax,%ecx
    5ec7:	0f 01 ee             	rdpkru 
    5eca:	89 03                	mov    %eax,(%rbx)
    5ecc:	b8 01 00 00 00       	mov    $0x1,%eax
    5ed1:	5b                   	pop    %rbx
    5ed2:	c3                   	ret    
    5ed3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5eda:	00 00 00 
    5edd:	0f 1f 00             	nopl   (%rax)

0000000000005ee0 <sgx_wrpkru>:
    5ee0:	f3 0f 1e fa          	endbr64 
    5ee4:	53                   	push   %rbx
    5ee5:	89 fb                	mov    %edi,%ebx
    5ee7:	e8 04 18 00 00       	call   76f0 <is_pkru_enabled>
    5eec:	31 d2                	xor    %edx,%edx
    5eee:	84 c0                	test   %al,%al
    5ef0:	74 0c                	je     5efe <sgx_wrpkru+0x1e>
    5ef2:	89 d8                	mov    %ebx,%eax
    5ef4:	89 d1                	mov    %edx,%ecx
    5ef6:	0f 01 ef             	wrpkru 
    5ef9:	ba 01 00 00 00       	mov    $0x1,%edx
    5efe:	89 d0                	mov    %edx,%eax
    5f00:	5b                   	pop    %rbx
    5f01:	c3                   	ret    
    5f02:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5f09:	00 00 00 
    5f0c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005f10 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0>:
    5f10:	41 55                	push   %r13
    5f12:	49 89 cd             	mov    %rcx,%r13
    5f15:	41 54                	push   %r12
    5f17:	55                   	push   %rbp
    5f18:	53                   	push   %rbx
    5f19:	48 83 ec 08          	sub    $0x8,%rsp
    5f1d:	48 8d 0d dc d2 00 00 	lea    0xd2dc(%rip),%rcx        # 13200 <g_global_data>
    5f24:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    5f2a:	85 c0                	test   %eax,%eax
    5f2c:	0f 84 8e 00 00 00    	je     5fc0 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0xb0>
    5f32:	48 89 d3             	mov    %rdx,%rbx
    5f35:	49 89 fc             	mov    %rdi,%r12
    5f38:	31 d2                	xor    %edx,%edx
    5f3a:	eb 11                	jmp    5f4d <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0x3d>
    5f3c:	0f 1f 40 00          	nopl   0x0(%rax)
    5f40:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    5f46:	83 c2 01             	add    $0x1,%edx
    5f49:	39 c2                	cmp    %eax,%edx
    5f4b:	73 73                	jae    5fc0 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0xb0>
    5f4d:	89 d0                	mov    %edx,%eax
    5f4f:	48 83 c0 0b          	add    $0xb,%rax
    5f53:	48 c1 e0 05          	shl    $0x5,%rax
    5f57:	48 01 c8             	add    %rcx,%rax
    5f5a:	0f b7 00             	movzwl (%rax),%eax
    5f5d:	66 39 c6             	cmp    %ax,%si
    5f60:	75 de                	jne    5f40 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0x30>
    5f62:	8d 42 0b             	lea    0xb(%rdx),%eax
    5f65:	48 c1 e0 05          	shl    $0x5,%rax
    5f69:	48 01 c1             	add    %rax,%rcx
    5f6c:	48 89 cd             	mov    %rcx,%rbp
    5f6f:	74 4f                	je     5fc0 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0xb0>
    5f71:	e8 82 c1 00 00       	call   120f8 <get_enclave_base>
    5f76:	48 8b 55 08          	mov    0x8(%rbp),%rdx
    5f7a:	48 01 da             	add    %rbx,%rdx
    5f7d:	48 01 d0             	add    %rdx,%rax
    5f80:	8b 55 04             	mov    0x4(%rbp),%edx
    5f83:	49 39 c4             	cmp    %rax,%r12
    5f86:	72 38                	jb     5fc0 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0xb0>
    5f88:	48 c1 e2 0c          	shl    $0xc,%rdx
    5f8c:	49 81 c4 00 10 00 00 	add    $0x1000,%r12
    5f93:	48 01 c2             	add    %rax,%rdx
    5f96:	4c 39 e2             	cmp    %r12,%rdx
    5f99:	72 25                	jb     5fc0 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0xb0>
    5f9b:	4d 85 ed             	test   %r13,%r13
    5f9e:	74 11                	je     5fb1 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0xa1>
    5fa0:	48 8b 45 18          	mov    0x18(%rbp),%rax
    5fa4:	49 89 45 00          	mov    %rax,0x0(%r13)
    5fa8:	0f b7 45 02          	movzwl 0x2(%rbp),%eax
    5fac:	66 41 89 45 08       	mov    %ax,0x8(%r13)
    5fb1:	31 c0                	xor    %eax,%eax
    5fb3:	48 83 c4 08          	add    $0x8,%rsp
    5fb7:	5b                   	pop    %rbx
    5fb8:	5d                   	pop    %rbp
    5fb9:	41 5c                	pop    %r12
    5fbb:	41 5d                	pop    %r13
    5fbd:	c3                   	ret    
    5fbe:	66 90                	xchg   %ax,%ax
    5fc0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    5fc5:	eb ec                	jmp    5fb3 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0xa3>
    5fc7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    5fce:	00 00 

0000000000005fd0 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0>:
    5fd0:	48 81 ff ff ef ff ff 	cmp    $0xffffffffffffefff,%rdi
    5fd7:	0f 87 c3 01 00 00    	ja     61a0 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x1d0>
    5fdd:	41 57                	push   %r15
    5fdf:	41 56                	push   %r14
    5fe1:	41 55                	push   %r13
    5fe3:	41 54                	push   %r12
    5fe5:	49 89 f4             	mov    %rsi,%r12
    5fe8:	55                   	push   %rbp
    5fe9:	48 89 d5             	mov    %rdx,%rbp
    5fec:	53                   	push   %rbx
    5fed:	48 89 fb             	mov    %rdi,%rbx
    5ff0:	48 83 ec 08          	sub    $0x8,%rsp
    5ff4:	e8 57 13 00 00       	call   7350 <get_heap_base>
    5ff9:	49 89 c5             	mov    %rax,%r13
    5ffc:	e8 df 13 00 00       	call   73e0 <get_heap_min_size>
    6001:	49 01 c5             	add    %rax,%r13
    6004:	e8 67 13 00 00       	call   7370 <get_heap_size>
    6009:	49 89 c6             	mov    %rax,%r14
    600c:	e8 cf 13 00 00       	call   73e0 <get_heap_min_size>
    6011:	49 29 c6             	sub    %rax,%r14
    6014:	4c 39 eb             	cmp    %r13,%rbx
    6017:	72 37                	jb     6050 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x80>
    6019:	48 8d 83 00 10 00 00 	lea    0x1000(%rbx),%rax
    6020:	4d 01 f5             	add    %r14,%r13
    6023:	49 39 c5             	cmp    %rax,%r13
    6026:	72 28                	jb     6050 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x80>
    6028:	48 85 ed             	test   %rbp,%rbp
    602b:	74 11                	je     603e <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x6e>
    602d:	b8 08 00 00 00       	mov    $0x8,%eax
    6032:	48 c7 45 00 03 02 00 	movq   $0x203,0x0(%rbp)
    6039:	00 
    603a:	66 89 45 08          	mov    %ax,0x8(%rbp)
    603e:	31 c0                	xor    %eax,%eax
    6040:	48 83 c4 08          	add    $0x8,%rsp
    6044:	5b                   	pop    %rbx
    6045:	5d                   	pop    %rbp
    6046:	41 5c                	pop    %r12
    6048:	41 5d                	pop    %r13
    604a:	41 5e                	pop    %r14
    604c:	41 5f                	pop    %r15
    604e:	c3                   	ret    
    604f:	90                   	nop
    6050:	31 d2                	xor    %edx,%edx
    6052:	48 89 e9             	mov    %rbp,%rcx
    6055:	be 07 00 00 00       	mov    $0x7,%esi
    605a:	48 89 df             	mov    %rbx,%rdi
    605d:	e8 ae fe ff ff       	call   5f10 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0>
    6062:	85 c0                	test   %eax,%eax
    6064:	74 d8                	je     603e <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x6e>
    6066:	48 8d 15 eb 1d 01 00 	lea    0x11deb(%rip),%rdx        # 17e58 <rsrv_mem_size>
    606d:	48 8d 05 ec 1d 01 00 	lea    0x11dec(%rip),%rax        # 17e60 <rsrv_mem_base>
    6074:	48 8b 0a             	mov    (%rdx),%rcx
    6077:	48 8d 15 d2 1d 01 00 	lea    0x11dd2(%rip),%rdx        # 17e50 <rsrv_mem_min_size>
    607e:	48 8b 00             	mov    (%rax),%rax
    6081:	48 8b 32             	mov    (%rdx),%rsi
    6084:	48 01 c6             	add    %rax,%rsi
    6087:	48 39 f3             	cmp    %rsi,%rbx
    608a:	72 0f                	jb     609b <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0xcb>
    608c:	48 8d 93 00 10 00 00 	lea    0x1000(%rbx),%rdx
    6093:	48 01 c8             	add    %rcx,%rax
    6096:	48 39 d0             	cmp    %rdx,%rax
    6099:	73 8d                	jae    6028 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x58>
    609b:	48 8d 0d 5e d1 00 00 	lea    0xd15e(%rip),%rcx        # 13200 <g_global_data>
    60a2:	31 d2                	xor    %edx,%edx
    60a4:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    60aa:	85 c0                	test   %eax,%eax
    60ac:	74 25                	je     60d3 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x103>
    60ae:	66 90                	xchg   %ax,%ax
    60b0:	89 d0                	mov    %edx,%eax
    60b2:	48 83 c0 0b          	add    $0xb,%rax
    60b6:	48 c1 e0 05          	shl    $0x5,%rax
    60ba:	48 01 c8             	add    %rcx,%rax
    60bd:	0f b7 00             	movzwl (%rax),%eax
    60c0:	66 3d 13 10          	cmp    $0x1013,%ax
    60c4:	74 42                	je     6108 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x138>
    60c6:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    60cc:	83 c2 01             	add    $0x1,%edx
    60cf:	39 c2                	cmp    %eax,%edx
    60d1:	72 dd                	jb     60b0 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0xe0>
    60d3:	41 bd 0e 00 00 00    	mov    $0xe,%r13d
    60d9:	31 d2                	xor    %edx,%edx
    60db:	48 89 e9             	mov    %rbp,%rcx
    60de:	44 89 ee             	mov    %r13d,%esi
    60e1:	48 89 df             	mov    %rbx,%rdi
    60e4:	e8 27 fe ff ff       	call   5f10 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0>
    60e9:	85 c0                	test   %eax,%eax
    60eb:	0f 84 96 00 00 00    	je     6187 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x1b7>
    60f1:	41 83 c5 01          	add    $0x1,%r13d
    60f5:	41 83 fd 13          	cmp    $0x13,%r13d
    60f9:	75 de                	jne    60d9 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x109>
    60fb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    6100:	e9 3b ff ff ff       	jmp    6040 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x70>
    6105:	0f 1f 00             	nopl   (%rax)
    6108:	8d 42 0b             	lea    0xb(%rdx),%eax
    610b:	41 bd 0e 00 00 00    	mov    $0xe,%r13d
    6111:	48 c1 e0 05          	shl    $0x5,%rax
    6115:	48 01 c1             	add    %rax,%rcx
    6118:	49 89 ce             	mov    %rcx,%r14
    611b:	74 bc                	je     60d9 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x109>
    611d:	41 8b 46 04          	mov    0x4(%r14),%eax
    6121:	45 31 ff             	xor    %r15d,%r15d
    6124:	83 f8 ff             	cmp    $0xffffffff,%eax
    6127:	75 17                	jne    6140 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x170>
    6129:	eb 4d                	jmp    6178 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x1a8>
    612b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6130:	41 8b 46 04          	mov    0x4(%r14),%eax
    6134:	49 83 c7 01          	add    $0x1,%r15
    6138:	83 c0 01             	add    $0x1,%eax
    613b:	41 39 c7             	cmp    %eax,%r15d
    613e:	73 38                	jae    6178 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x1a8>
    6140:	49 8b 56 08          	mov    0x8(%r14),%rdx
    6144:	48 89 e9             	mov    %rbp,%rcx
    6147:	44 89 ee             	mov    %r13d,%esi
    614a:	48 89 df             	mov    %rbx,%rdi
    614d:	49 0f af d7          	imul   %r15,%rdx
    6151:	e8 ba fd ff ff       	call   5f10 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0>
    6156:	85 c0                	test   %eax,%eax
    6158:	75 d6                	jne    6130 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x160>
    615a:	4d 85 e4             	test   %r12,%r12
    615d:	0f 84 db fe ff ff    	je     603e <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x6e>
    6163:	49 8b 46 08          	mov    0x8(%r14),%rax
    6167:	49 0f af c7          	imul   %r15,%rax
    616b:	49 89 04 24          	mov    %rax,(%r12)
    616f:	e9 ca fe ff ff       	jmp    603e <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x6e>
    6174:	0f 1f 40 00          	nopl   0x0(%rax)
    6178:	41 83 c5 01          	add    $0x1,%r13d
    617c:	41 83 fd 13          	cmp    $0x13,%r13d
    6180:	75 9b                	jne    611d <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x14d>
    6182:	e9 74 ff ff ff       	jmp    60fb <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x12b>
    6187:	4d 85 e4             	test   %r12,%r12
    618a:	0f 84 ae fe ff ff    	je     603e <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x6e>
    6190:	49 c7 04 24 00 00 00 	movq   $0x0,(%r12)
    6197:	00 
    6198:	e9 a1 fe ff ff       	jmp    603e <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x6e>
    619d:	0f 1f 00             	nopl   (%rax)
    61a0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    61a5:	c3                   	ret    
    61a6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    61ad:	00 00 00 

00000000000061b0 <_Z24get_dynamic_layout_by_idt>:
    61b0:	f3 0f 1e fa          	endbr64 
    61b4:	48 8d 05 45 d0 00 00 	lea    0xd045(%rip),%rax        # 13200 <g_global_data>
    61bb:	8b 90 58 01 00 00    	mov    0x158(%rax),%edx
    61c1:	85 d2                	test   %edx,%edx
    61c3:	74 3b                	je     6200 <_Z24get_dynamic_layout_by_idt+0x50>
    61c5:	31 c9                	xor    %ecx,%ecx
    61c7:	eb 14                	jmp    61dd <_Z24get_dynamic_layout_by_idt+0x2d>
    61c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    61d0:	8b 90 58 01 00 00    	mov    0x158(%rax),%edx
    61d6:	83 c1 01             	add    $0x1,%ecx
    61d9:	39 d1                	cmp    %edx,%ecx
    61db:	73 23                	jae    6200 <_Z24get_dynamic_layout_by_idt+0x50>
    61dd:	89 ca                	mov    %ecx,%edx
    61df:	48 83 c2 0b          	add    $0xb,%rdx
    61e3:	48 c1 e2 05          	shl    $0x5,%rdx
    61e7:	48 01 c2             	add    %rax,%rdx
    61ea:	0f b7 12             	movzwl (%rdx),%edx
    61ed:	66 39 fa             	cmp    %di,%dx
    61f0:	75 de                	jne    61d0 <_Z24get_dynamic_layout_by_idt+0x20>
    61f2:	8d 51 0b             	lea    0xb(%rcx),%edx
    61f5:	48 c1 e2 05          	shl    $0x5,%rdx
    61f9:	48 01 d0             	add    %rdx,%rax
    61fc:	c3                   	ret    
    61fd:	0f 1f 00             	nopl   (%rax)
    6200:	31 c0                	xor    %eax,%eax
    6202:	c3                   	ret    
    6203:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    620a:	00 00 00 
    620d:	0f 1f 00             	nopl   (%rax)

0000000000006210 <is_dynamic_thread>:
    6210:	f3 0f 1e fa          	endbr64 
    6214:	48 83 ec 28          	sub    $0x28,%rsp
    6218:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    621f:	00 00 
    6221:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    6226:	31 c0                	xor    %eax,%eax
    6228:	48 85 ff             	test   %rdi,%rdi
    622b:	74 0e                	je     623b <is_dynamic_thread+0x2b>
    622d:	31 f6                	xor    %esi,%esi
    622f:	48 89 e2             	mov    %rsp,%rdx
    6232:	e8 99 fd ff ff       	call   5fd0 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0>
    6237:	85 c0                	test   %eax,%eax
    6239:	74 1d                	je     6258 <is_dynamic_thread+0x48>
    623b:	31 c0                	xor    %eax,%eax
    623d:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    6242:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    6249:	00 00 
    624b:	75 1a                	jne    6267 <is_dynamic_thread+0x57>
    624d:	48 83 c4 28          	add    $0x28,%rsp
    6251:	c3                   	ret    
    6252:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6258:	31 c0                	xor    %eax,%eax
    625a:	48 81 3c 24 00 01 00 	cmpq   $0x100,(%rsp)
    6261:	00 
    6262:	0f 94 c0             	sete   %al
    6265:	eb d6                	jmp    623d <is_dynamic_thread+0x2d>
    6267:	e8 34 a7 00 00       	call   109a0 <__stack_chk_fail>
    626c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000006270 <is_dynamic_thread_exist>:
    6270:	f3 0f 1e fa          	endbr64 
    6274:	48 8d 05 a1 1b 01 00 	lea    0x11ba1(%rip),%rax        # 17e1c <EDMM_supported>
    627b:	8b 00                	mov    (%rax),%eax
    627d:	85 c0                	test   %eax,%eax
    627f:	74 59                	je     62da <is_dynamic_thread_exist+0x6a>
    6281:	48 8d 0d 78 cf 00 00 	lea    0xcf78(%rip),%rcx        # 13200 <g_global_data>
    6288:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    628e:	85 c0                	test   %eax,%eax
    6290:	74 46                	je     62d8 <is_dynamic_thread_exist+0x68>
    6292:	31 d2                	xor    %edx,%edx
    6294:	eb 17                	jmp    62ad <is_dynamic_thread_exist+0x3d>
    6296:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    629d:	00 00 00 
    62a0:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    62a6:	83 c2 01             	add    $0x1,%edx
    62a9:	39 c2                	cmp    %eax,%edx
    62ab:	73 2b                	jae    62d8 <is_dynamic_thread_exist+0x68>
    62ad:	89 d0                	mov    %edx,%eax
    62af:	48 83 c0 0b          	add    $0xb,%rax
    62b3:	48 c1 e0 05          	shl    $0x5,%rax
    62b7:	48 01 c8             	add    %rcx,%rax
    62ba:	0f b7 00             	movzwl (%rax),%eax
    62bd:	66 83 f8 12          	cmp    $0x12,%ax
    62c1:	75 dd                	jne    62a0 <is_dynamic_thread_exist+0x30>
    62c3:	8d 42 0b             	lea    0xb(%rdx),%eax
    62c6:	48 c1 e0 05          	shl    $0x5,%rax
    62ca:	48 01 c1             	add    %rax,%rcx
    62cd:	0f 95 c0             	setne  %al
    62d0:	0f b6 c0             	movzbl %al,%eax
    62d3:	c3                   	ret    
    62d4:	0f 1f 40 00          	nopl   0x0(%rax)
    62d8:	31 c0                	xor    %eax,%eax
    62da:	c3                   	ret    
    62db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000062e0 <get_dynamic_stack_max_page>:
    62e0:	f3 0f 1e fa          	endbr64 
    62e4:	48 8d 0d 15 cf 00 00 	lea    0xcf15(%rip),%rcx        # 13200 <g_global_data>
    62eb:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    62f1:	85 c0                	test   %eax,%eax
    62f3:	74 45                	je     633a <get_dynamic_stack_max_page+0x5a>
    62f5:	31 d2                	xor    %edx,%edx
    62f7:	eb 14                	jmp    630d <get_dynamic_stack_max_page+0x2d>
    62f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6300:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    6306:	83 c2 01             	add    $0x1,%edx
    6309:	39 c2                	cmp    %eax,%edx
    630b:	73 2b                	jae    6338 <get_dynamic_stack_max_page+0x58>
    630d:	89 d0                	mov    %edx,%eax
    630f:	48 83 c0 0b          	add    $0xb,%rax
    6313:	48 c1 e0 05          	shl    $0x5,%rax
    6317:	48 01 c8             	add    %rcx,%rax
    631a:	0f b7 00             	movzwl (%rax),%eax
    631d:	66 83 f8 07          	cmp    $0x7,%ax
    6321:	75 dd                	jne    6300 <get_dynamic_stack_max_page+0x20>
    6323:	8d 42 0b             	lea    0xb(%rdx),%eax
    6326:	48 c1 e0 05          	shl    $0x5,%rax
    632a:	48 01 c1             	add    %rax,%rcx
    632d:	74 09                	je     6338 <get_dynamic_stack_max_page+0x58>
    632f:	8b 41 04             	mov    0x4(%rcx),%eax
    6332:	c3                   	ret    
    6333:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6338:	31 c0                	xor    %eax,%eax
    633a:	c3                   	ret    
    633b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000006340 <do_add_thread>:
    6340:	f3 0f 1e fa          	endbr64 
    6344:	41 56                	push   %r14
    6346:	41 55                	push   %r13
    6348:	41 54                	push   %r12
    634a:	55                   	push   %rbp
    634b:	53                   	push   %rbx
    634c:	48 89 fb             	mov    %rdi,%rbx
    634f:	48 83 ec 10          	sub    $0x10,%rsp
    6353:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    635a:	00 00 
    635c:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    6361:	31 c0                	xor    %eax,%eax
    6363:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    636a:	00 
    636b:	e8 88 bd 00 00       	call   120f8 <get_enclave_base>
    6370:	31 d2                	xor    %edx,%edx
    6372:	48 89 e6             	mov    %rsp,%rsi
    6375:	48 89 df             	mov    %rbx,%rdi
    6378:	48 89 c5             	mov    %rax,%rbp
    637b:	e8 50 fc ff ff       	call   5fd0 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0>
    6380:	85 c0                	test   %eax,%eax
    6382:	75 62                	jne    63e6 <do_add_thread+0xa6>
    6384:	4c 8d 25 75 ce 00 00 	lea    0xce75(%rip),%r12        # 13200 <g_global_data>
    638b:	41 8b 84 24 58 01 00 	mov    0x158(%r12),%eax
    6392:	00 
    6393:	85 c0                	test   %eax,%eax
    6395:	74 4f                	je     63e6 <do_add_thread+0xa6>
    6397:	31 d2                	xor    %edx,%edx
    6399:	eb 14                	jmp    63af <do_add_thread+0x6f>
    639b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    63a0:	41 8b 84 24 58 01 00 	mov    0x158(%r12),%eax
    63a7:	00 
    63a8:	83 c2 01             	add    $0x1,%edx
    63ab:	39 c2                	cmp    %eax,%edx
    63ad:	73 37                	jae    63e6 <do_add_thread+0xa6>
    63af:	89 d0                	mov    %edx,%eax
    63b1:	48 83 c0 0b          	add    $0xb,%rax
    63b5:	48 c1 e0 05          	shl    $0x5,%rax
    63b9:	4c 01 e0             	add    %r12,%rax
    63bc:	44 0f b7 28          	movzwl (%rax),%r13d
    63c0:	66 41 83 fd 0e       	cmp    $0xe,%r13w
    63c5:	75 d9                	jne    63a0 <do_add_thread+0x60>
    63c7:	8d 42 0b             	lea    0xb(%rdx),%eax
    63ca:	48 c1 e0 05          	shl    $0x5,%rax
    63ce:	4c 01 e0             	add    %r12,%rax
    63d1:	74 13                	je     63e6 <do_add_thread+0xa6>
    63d3:	4c 8b 34 24          	mov    (%rsp),%r14
    63d7:	48 8b 40 08          	mov    0x8(%rax),%rax
    63db:	49 01 ee             	add    %rbp,%r14
    63de:	4c 01 f0             	add    %r14,%rax
    63e1:	48 39 d8             	cmp    %rbx,%rax
    63e4:	74 4e                	je     6434 <do_add_thread+0xf4>
    63e6:	b8 01 00 00 00       	mov    $0x1,%eax
    63eb:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    63f0:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    63f7:	00 00 
    63f9:	0f 85 f9 00 00 00    	jne    64f8 <do_add_thread+0x1b8>
    63ff:	48 83 c4 10          	add    $0x10,%rsp
    6403:	5b                   	pop    %rbx
    6404:	5d                   	pop    %rbp
    6405:	41 5c                	pop    %r12
    6407:	41 5d                	pop    %r13
    6409:	41 5e                	pop    %r14
    640b:	c3                   	ret    
    640c:	0f 1f 40 00          	nopl   0x0(%rax)
    6410:	8d 42 0b             	lea    0xb(%rdx),%eax
    6413:	48 c1 e0 05          	shl    $0x5,%rax
    6417:	4c 01 e0             	add    %r12,%rax
    641a:	74 0d                	je     6429 <do_add_thread+0xe9>
    641c:	0f b7 50 02          	movzwl 0x2(%rax),%edx
    6420:	83 e2 20             	and    $0x20,%edx
    6423:	0f 85 af 00 00 00    	jne    64d8 <do_add_thread+0x198>
    6429:	41 83 c5 01          	add    $0x1,%r13d
    642d:	66 41 83 fd 13       	cmp    $0x13,%r13w
    6432:	74 3c                	je     6470 <do_add_thread+0x130>
    6434:	41 8b 84 24 58 01 00 	mov    0x158(%r12),%eax
    643b:	00 
    643c:	31 d2                	xor    %edx,%edx
    643e:	85 c0                	test   %eax,%eax
    6440:	75 15                	jne    6457 <do_add_thread+0x117>
    6442:	eb e5                	jmp    6429 <do_add_thread+0xe9>
    6444:	0f 1f 40 00          	nopl   0x0(%rax)
    6448:	41 8b 84 24 58 01 00 	mov    0x158(%r12),%eax
    644f:	00 
    6450:	83 c2 01             	add    $0x1,%edx
    6453:	39 c2                	cmp    %eax,%edx
    6455:	73 d2                	jae    6429 <do_add_thread+0xe9>
    6457:	89 d0                	mov    %edx,%eax
    6459:	48 83 c0 0b          	add    $0xb,%rax
    645d:	48 c1 e0 05          	shl    $0x5,%rax
    6461:	4c 01 e0             	add    %r12,%rax
    6464:	0f b7 00             	movzwl (%rax),%eax
    6467:	66 44 39 e8          	cmp    %r13w,%ax
    646b:	75 db                	jne    6448 <do_add_thread+0x108>
    646d:	eb a1                	jmp    6410 <do_add_thread+0xd0>
    646f:	90                   	nop
    6470:	ba 48 00 00 00       	mov    $0x48,%edx
    6475:	49 8d b4 24 10 01 00 	lea    0x110(%r12),%rsi
    647c:	00 
    647d:	48 89 df             	mov    %rbx,%rdi
    6480:	e8 fb a1 00 00       	call   10680 <memcpy>
    6485:	f3 0f 6f 4b 30       	movdqu 0x30(%rbx),%xmm1
    648a:	48 89 d8             	mov    %rbx,%rax
    648d:	48 89 df             	mov    %rbx,%rdi
    6490:	66 48 0f 6e c3       	movq   %rbx,%xmm0
    6495:	48 29 e8             	sub    %rbp,%rax
    6498:	48 01 43 10          	add    %rax,0x10(%rbx)
    649c:	ba 00 01 00 00       	mov    $0x100,%edx
    64a1:	66 0f 6c c0          	punpcklqdq %xmm0,%xmm0
    64a5:	be 00 10 00 00       	mov    $0x1000,%esi
    64aa:	66 0f d4 c8          	paddq  %xmm0,%xmm1
    64ae:	66 48 0f 6e c5       	movq   %rbp,%xmm0
    64b3:	66 0f 6c c0          	punpcklqdq %xmm0,%xmm0
    64b7:	66 0f fb c8          	psubq  %xmm0,%xmm1
    64bb:	0f 11 4b 30          	movups %xmm1,0x30(%rbx)
    64bf:	e8 ec 54 00 00       	call   b9b0 <mm_modify_type>
    64c4:	85 c0                	test   %eax,%eax
    64c6:	0f 95 c0             	setne  %al
    64c9:	0f b6 c0             	movzbl %al,%eax
    64cc:	e9 1a ff ff ff       	jmp    63eb <do_add_thread+0xab>
    64d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    64d8:	8b 70 04             	mov    0x4(%rax),%esi
    64db:	48 8b 78 08          	mov    0x8(%rax),%rdi
    64df:	48 c1 e6 0c          	shl    $0xc,%rsi
    64e3:	4c 01 f7             	add    %r14,%rdi
    64e6:	e8 85 54 00 00       	call   b970 <mm_commit>
    64eb:	85 c0                	test   %eax,%eax
    64ed:	0f 84 36 ff ff ff    	je     6429 <do_add_thread+0xe9>
    64f3:	e9 ee fe ff ff       	jmp    63e6 <do_add_thread+0xa6>
    64f8:	e8 a3 a4 00 00       	call   109a0 <__stack_chk_fail>
    64fd:	0f 1f 00             	nopl   (%rax)

0000000000006500 <sgx_set_ssa_aexnotify>:
    6500:	f3 0f 1e fa          	endbr64 
    6504:	55                   	push   %rbp
    6505:	89 fd                	mov    %edi,%ebp
    6507:	53                   	push   %rbx
    6508:	48 83 ec 08          	sub    $0x8,%rsp
    650c:	e8 32 bc 00 00       	call   12143 <get_thread_data>
    6511:	48 85 c0             	test   %rax,%rax
    6514:	74 3a                	je     6550 <sgx_set_ssa_aexnotify+0x50>
    6516:	48 89 c3             	mov    %rax,%rbx
    6519:	e8 e2 ae 00 00       	call   11400 <sgx_self_report>
    651e:	f6 40 31 04          	testb  $0x4,0x31(%rax)
    6522:	74 2c                	je     6550 <sgx_set_ssa_aexnotify+0x50>
    6524:	48 8b 53 20          	mov    0x20(%rbx),%rdx
    6528:	0f b6 82 a7 00 00 00 	movzbl 0xa7(%rdx),%eax
    652f:	89 c1                	mov    %eax,%ecx
    6531:	83 c8 01             	or     $0x1,%eax
    6534:	83 e1 fe             	and    $0xfffffffe,%ecx
    6537:	85 ed                	test   %ebp,%ebp
    6539:	0f 44 c1             	cmove  %ecx,%eax
    653c:	88 82 a7 00 00 00    	mov    %al,0xa7(%rdx)
    6542:	48 83 c4 08          	add    $0x8,%rsp
    6546:	31 c0                	xor    %eax,%eax
    6548:	5b                   	pop    %rbx
    6549:	5d                   	pop    %rbp
    654a:	c3                   	ret    
    654b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6550:	48 83 c4 08          	add    $0x8,%rsp
    6554:	b8 01 00 00 00       	mov    $0x1,%eax
    6559:	5b                   	pop    %rbx
    655a:	5d                   	pop    %rbp
    655b:	c3                   	ret    
    655c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000006560 <sgx_register_aex_handler>:
    6560:	f3 0f 1e fa          	endbr64 
    6564:	48 85 ff             	test   %rdi,%rdi
    6567:	0f 84 bb 00 00 00    	je     6628 <sgx_register_aex_handler+0xc8>
    656d:	41 55                	push   %r13
    656f:	b8 02 00 00 00       	mov    $0x2,%eax
    6574:	41 54                	push   %r12
    6576:	49 89 f4             	mov    %rsi,%r12
    6579:	55                   	push   %rbp
    657a:	53                   	push   %rbx
    657b:	48 83 ec 08          	sub    $0x8,%rsp
    657f:	48 85 f6             	test   %rsi,%rsi
    6582:	74 2a                	je     65ae <sgx_register_aex_handler+0x4e>
    6584:	48 89 fb             	mov    %rdi,%rbx
    6587:	48 89 d5             	mov    %rdx,%rbp
    658a:	e8 c1 11 00 00       	call   7750 <get_ssa_aexnotify>
    658f:	85 c0                	test   %eax,%eax
    6591:	75 2d                	jne    65c0 <sgx_register_aex_handler+0x60>
    6593:	e8 ab bb 00 00       	call   12143 <get_thread_data>
    6598:	66 48 0f 6e c5       	movq   %rbp,%xmm0
    659d:	0f 16 40 48          	movhps 0x48(%rax),%xmm0
    65a1:	4c 89 23             	mov    %r12,(%rbx)
    65a4:	0f 11 43 08          	movups %xmm0,0x8(%rbx)
    65a8:	48 89 58 48          	mov    %rbx,0x48(%rax)
    65ac:	31 c0                	xor    %eax,%eax
    65ae:	48 83 c4 08          	add    $0x8,%rsp
    65b2:	5b                   	pop    %rbx
    65b3:	5d                   	pop    %rbp
    65b4:	41 5c                	pop    %r12
    65b6:	41 5d                	pop    %r13
    65b8:	c3                   	ret    
    65b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    65c0:	e8 7e bb 00 00       	call   12143 <get_thread_data>
    65c5:	49 89 c5             	mov    %rax,%r13
    65c8:	48 85 c0             	test   %rax,%rax
    65cb:	74 16                	je     65e3 <sgx_register_aex_handler+0x83>
    65cd:	e8 2e ae 00 00       	call   11400 <sgx_self_report>
    65d2:	f6 40 31 04          	testb  $0x4,0x31(%rax)
    65d6:	74 0b                	je     65e3 <sgx_register_aex_handler+0x83>
    65d8:	49 8b 45 20          	mov    0x20(%r13),%rax
    65dc:	80 a0 a7 00 00 00 fe 	andb   $0xfe,0xa7(%rax)
    65e3:	e8 5b bb 00 00       	call   12143 <get_thread_data>
    65e8:	66 48 0f 6e c5       	movq   %rbp,%xmm0
    65ed:	0f 16 40 48          	movhps 0x48(%rax),%xmm0
    65f1:	4c 89 23             	mov    %r12,(%rbx)
    65f4:	0f 11 43 08          	movups %xmm0,0x8(%rbx)
    65f8:	48 89 58 48          	mov    %rbx,0x48(%rax)
    65fc:	e8 42 bb 00 00       	call   12143 <get_thread_data>
    6601:	48 89 c3             	mov    %rax,%rbx
    6604:	48 85 c0             	test   %rax,%rax
    6607:	74 a3                	je     65ac <sgx_register_aex_handler+0x4c>
    6609:	e8 f2 ad 00 00       	call   11400 <sgx_self_report>
    660e:	f6 40 31 04          	testb  $0x4,0x31(%rax)
    6612:	74 98                	je     65ac <sgx_register_aex_handler+0x4c>
    6614:	48 8b 43 20          	mov    0x20(%rbx),%rax
    6618:	80 88 a7 00 00 00 01 	orb    $0x1,0xa7(%rax)
    661f:	31 c0                	xor    %eax,%eax
    6621:	eb 8b                	jmp    65ae <sgx_register_aex_handler+0x4e>
    6623:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6628:	b8 02 00 00 00       	mov    $0x2,%eax
    662d:	c3                   	ret    
    662e:	66 90                	xchg   %ax,%ax

0000000000006630 <sgx_unregister_aex_handler>:
    6630:	f3 0f 1e fa          	endbr64 
    6634:	41 54                	push   %r12
    6636:	55                   	push   %rbp
    6637:	53                   	push   %rbx
    6638:	48 85 ff             	test   %rdi,%rdi
    663b:	0f 84 e7 00 00 00    	je     6728 <sgx_unregister_aex_handler+0xf8>
    6641:	48 89 fd             	mov    %rdi,%rbp
    6644:	e8 07 11 00 00       	call   7750 <get_ssa_aexnotify>
    6649:	89 c3                	mov    %eax,%ebx
    664b:	85 c0                	test   %eax,%eax
    664d:	75 61                	jne    66b0 <sgx_unregister_aex_handler+0x80>
    664f:	e8 ef ba 00 00       	call   12143 <get_thread_data>
    6654:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    665a:	48 8b 50 48          	mov    0x48(%rax),%rdx
    665e:	48 85 d2             	test   %rdx,%rdx
    6661:	74 3d                	je     66a0 <sgx_unregister_aex_handler+0x70>
    6663:	31 f6                	xor    %esi,%esi
    6665:	eb 1c                	jmp    6683 <sgx_unregister_aex_handler+0x53>
    6667:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    666e:	00 00 
    6670:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
    6674:	48 89 d6             	mov    %rdx,%rsi
    6677:	48 85 c9             	test   %rcx,%rcx
    667a:	0f 84 98 00 00 00    	je     6718 <sgx_unregister_aex_handler+0xe8>
    6680:	48 89 ca             	mov    %rcx,%rdx
    6683:	48 39 2a             	cmp    %rbp,(%rdx)
    6686:	75 e8                	jne    6670 <sgx_unregister_aex_handler+0x40>
    6688:	48 8b 52 10          	mov    0x10(%rdx),%rdx
    668c:	48 85 f6             	test   %rsi,%rsi
    668f:	0f 84 ab 00 00 00    	je     6740 <sgx_unregister_aex_handler+0x110>
    6695:	48 89 56 10          	mov    %rdx,0x10(%rsi)
    6699:	45 31 e4             	xor    %r12d,%r12d
    669c:	85 db                	test   %ebx,%ebx
    669e:	75 48                	jne    66e8 <sgx_unregister_aex_handler+0xb8>
    66a0:	44 89 e0             	mov    %r12d,%eax
    66a3:	5b                   	pop    %rbx
    66a4:	5d                   	pop    %rbp
    66a5:	41 5c                	pop    %r12
    66a7:	c3                   	ret    
    66a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    66af:	00 
    66b0:	e8 8e ba 00 00       	call   12143 <get_thread_data>
    66b5:	49 89 c4             	mov    %rax,%r12
    66b8:	48 85 c0             	test   %rax,%rax
    66bb:	74 17                	je     66d4 <sgx_unregister_aex_handler+0xa4>
    66bd:	e8 3e ad 00 00       	call   11400 <sgx_self_report>
    66c2:	f6 40 31 04          	testb  $0x4,0x31(%rax)
    66c6:	74 0c                	je     66d4 <sgx_unregister_aex_handler+0xa4>
    66c8:	49 8b 44 24 20       	mov    0x20(%r12),%rax
    66cd:	80 a0 a7 00 00 00 fe 	andb   $0xfe,0xa7(%rax)
    66d4:	e8 6a ba 00 00       	call   12143 <get_thread_data>
    66d9:	48 8b 50 48          	mov    0x48(%rax),%rdx
    66dd:	48 85 d2             	test   %rdx,%rdx
    66e0:	75 81                	jne    6663 <sgx_unregister_aex_handler+0x33>
    66e2:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    66e8:	e8 56 ba 00 00       	call   12143 <get_thread_data>
    66ed:	48 89 c3             	mov    %rax,%rbx
    66f0:	48 85 c0             	test   %rax,%rax
    66f3:	74 ab                	je     66a0 <sgx_unregister_aex_handler+0x70>
    66f5:	e8 06 ad 00 00       	call   11400 <sgx_self_report>
    66fa:	f6 40 31 04          	testb  $0x4,0x31(%rax)
    66fe:	74 a0                	je     66a0 <sgx_unregister_aex_handler+0x70>
    6700:	48 8b 43 20          	mov    0x20(%rbx),%rax
    6704:	80 88 a7 00 00 00 01 	orb    $0x1,0xa7(%rax)
    670b:	44 89 e0             	mov    %r12d,%eax
    670e:	5b                   	pop    %rbx
    670f:	5d                   	pop    %rbp
    6710:	41 5c                	pop    %r12
    6712:	c3                   	ret    
    6713:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6718:	41 bc 02 00 00 00    	mov    $0x2,%r12d
    671e:	e9 79 ff ff ff       	jmp    669c <sgx_unregister_aex_handler+0x6c>
    6723:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6728:	41 bc 02 00 00 00    	mov    $0x2,%r12d
    672e:	5b                   	pop    %rbx
    672f:	5d                   	pop    %rbp
    6730:	44 89 e0             	mov    %r12d,%eax
    6733:	41 5c                	pop    %r12
    6735:	c3                   	ret    
    6736:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    673d:	00 00 00 
    6740:	48 89 50 48          	mov    %rdx,0x48(%rax)
    6744:	e9 50 ff ff ff       	jmp    6699 <sgx_unregister_aex_handler+0x69>
    6749:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000006750 <sgx_apply_mitigations>:
    6750:	f3 0f 1e fa          	endbr64 
    6754:	55                   	push   %rbp
    6755:	48 89 fd             	mov    %rdi,%rbp
    6758:	53                   	push   %rbx
    6759:	48 83 ec 08          	sub    $0x8,%rsp
    675d:	e8 e1 b9 00 00       	call   12143 <get_thread_data>
    6762:	48 8b 58 48          	mov    0x48(%rax),%rbx
    6766:	48 85 db             	test   %rbx,%rbx
    6769:	74 17                	je     6782 <sgx_apply_mitigations+0x32>
    676b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6770:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    6774:	48 89 ef             	mov    %rbp,%rdi
    6777:	ff 13                	call   *(%rbx)
    6779:	48 8b 5b 10          	mov    0x10(%rbx),%rbx
    677d:	48 85 db             	test   %rbx,%rbx
    6780:	75 ee                	jne    6770 <sgx_apply_mitigations+0x20>
    6782:	48 83 c4 08          	add    $0x8,%rsp
    6786:	31 c0                	xor    %eax,%eax
    6788:	5b                   	pop    %rbx
    6789:	5d                   	pop    %rbp
    678a:	c3                   	ret    
    678b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000006790 <_pthread_thread_run>:
    6790:	f3 0f 1e fa          	endbr64 
    6794:	31 c0                	xor    %eax,%eax
    6796:	c3                   	ret    
    6797:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    679e:	00 00 

00000000000067a0 <_ZL11do_save_tcsPv>:
    67a0:	55                   	push   %rbp
    67a1:	53                   	push   %rbx
    67a2:	48 89 fb             	mov    %rdi,%rbx
    67a5:	48 83 ec 18          	sub    $0x18,%rsp
    67a9:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    67b0:	00 00 
    67b2:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    67b7:	31 c0                	xor    %eax,%eax
    67b9:	48 83 3d af 39 01 00 	cmpq   $0x0,0x139af(%rip)        # 1a170 <_ZL12g_tcs_cookie>
    67c0:	00 
    67c1:	74 4d                	je     6810 <_ZL11do_save_tcsPv+0x70>
    67c3:	bf 10 00 00 00       	mov    $0x10,%edi
    67c8:	e8 13 69 00 00       	call   d0e0 <dlmalloc>
    67cd:	48 85 c0             	test   %rax,%rax
    67d0:	74 68                	je     683a <_ZL11do_save_tcsPv+0x9a>
    67d2:	48 8b 15 9f 39 01 00 	mov    0x1399f(%rip),%rdx        # 1a178 <_ZL10g_tcs_node>
    67d9:	48 33 1d 90 39 01 00 	xor    0x13990(%rip),%rbx        # 1a170 <_ZL12g_tcs_cookie>
    67e0:	48 89 05 91 39 01 00 	mov    %rax,0x13991(%rip)        # 1a178 <_ZL10g_tcs_node>
    67e7:	48 89 18             	mov    %rbx,(%rax)
    67ea:	48 89 50 08          	mov    %rdx,0x8(%rax)
    67ee:	31 c0                	xor    %eax,%eax
    67f0:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    67f5:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    67fc:	00 00 
    67fe:	75 62                	jne    6862 <_ZL11do_save_tcsPv+0xc2>
    6800:	48 83 c4 18          	add    $0x18,%rsp
    6804:	5b                   	pop    %rbx
    6805:	5d                   	pop    %rbp
    6806:	c3                   	ret    
    6807:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    680e:	00 00 
    6810:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    6817:	00 
    6818:	48 89 e5             	mov    %rsp,%rbp
    681b:	eb 0c                	jmp    6829 <_ZL11do_save_tcsPv+0x89>
    681d:	0f 1f 00             	nopl   (%rax)
    6820:	48 8b 04 24          	mov    (%rsp),%rax
    6824:	48 85 c0             	test   %rax,%rax
    6827:	75 1f                	jne    6848 <_ZL11do_save_tcsPv+0xa8>
    6829:	be 08 00 00 00       	mov    $0x8,%esi
    682e:	48 89 ef             	mov    %rbp,%rdi
    6831:	e8 2a f5 ff ff       	call   5d60 <sgx_read_rand>
    6836:	85 c0                	test   %eax,%eax
    6838:	74 e6                	je     6820 <_ZL11do_save_tcsPv+0x80>
    683a:	b8 01 00 00 00       	mov    $0x1,%eax
    683f:	eb af                	jmp    67f0 <_ZL11do_save_tcsPv+0x50>
    6841:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6848:	48 83 3d 20 39 01 00 	cmpq   $0x0,0x13920(%rip)        # 1a170 <_ZL12g_tcs_cookie>
    684f:	00 
    6850:	0f 85 6d ff ff ff    	jne    67c3 <_ZL11do_save_tcsPv+0x23>
    6856:	48 89 05 13 39 01 00 	mov    %rax,0x13913(%rip)        # 1a170 <_ZL12g_tcs_cookie>
    685d:	e9 61 ff ff ff       	jmp    67c3 <_ZL11do_save_tcsPv+0x23>
    6862:	e8 39 a1 00 00       	call   109a0 <__stack_chk_fail>
    6867:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    686e:	00 00 

0000000000006870 <_ZL18add_static_threadsPVK9_layout_tS1_m>:
    6870:	48 39 f7             	cmp    %rsi,%rdi
    6873:	0f 83 cf 00 00 00    	jae    6948 <_ZL18add_static_threadsPVK9_layout_tS1_m+0xd8>
    6879:	41 56                	push   %r14
    687b:	41 55                	push   %r13
    687d:	49 89 f5             	mov    %rsi,%r13
    6880:	41 54                	push   %r12
    6882:	49 89 d4             	mov    %rdx,%r12
    6885:	55                   	push   %rbp
    6886:	53                   	push   %rbx
    6887:	48 89 fb             	mov    %rdi,%rbx
    688a:	eb 0d                	jmp    6899 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x29>
    688c:	0f 1f 40 00          	nopl   0x0(%rax)
    6890:	48 83 c3 20          	add    $0x20,%rbx
    6894:	4c 39 eb             	cmp    %r13,%rbx
    6897:	73 77                	jae    6910 <_ZL18add_static_threadsPVK9_layout_tS1_m+0xa0>
    6899:	0f b7 03             	movzwl (%rbx),%eax
    689c:	f6 c4 10             	test   $0x10,%ah
    689f:	75 13                	jne    68b4 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x44>
    68a1:	48 8b 43 18          	mov    0x18(%rbx),%rax
    68a5:	f6 c4 01             	test   $0x1,%ah
    68a8:	74 0a                	je     68b4 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x44>
    68aa:	0f b7 43 02          	movzwl 0x2(%rbx),%eax
    68ae:	66 83 f8 03          	cmp    $0x3,%ax
    68b2:	74 6c                	je     6920 <_ZL18add_static_threadsPVK9_layout_tS1_m+0xb0>
    68b4:	0f b7 03             	movzwl (%rbx),%eax
    68b7:	f6 c4 10             	test   $0x10,%ah
    68ba:	74 d4                	je     6890 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x20>
    68bc:	8b 43 04             	mov    0x4(%rbx),%eax
    68bf:	85 c0                	test   %eax,%eax
    68c1:	74 cd                	je     6890 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x20>
    68c3:	31 ed                	xor    %ebp,%ebp
    68c5:	45 31 f6             	xor    %r14d,%r14d
    68c8:	eb 10                	jmp    68da <_ZL18add_static_threadsPVK9_layout_tS1_m+0x6a>
    68ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    68d0:	8b 43 04             	mov    0x4(%rbx),%eax
    68d3:	83 c5 01             	add    $0x1,%ebp
    68d6:	39 c5                	cmp    %eax,%ebp
    68d8:	73 b6                	jae    6890 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x20>
    68da:	48 8b 43 08          	mov    0x8(%rbx),%rax
    68de:	0f b7 7b 02          	movzwl 0x2(%rbx),%edi
    68e2:	48 89 de             	mov    %rbx,%rsi
    68e5:	f7 df                	neg    %edi
    68e7:	49 01 c6             	add    %rax,%r14
    68ea:	48 63 ff             	movslq %edi,%rdi
    68ed:	4c 89 f2             	mov    %r14,%rdx
    68f0:	48 c1 e7 05          	shl    $0x5,%rdi
    68f4:	48 01 df             	add    %rbx,%rdi
    68f7:	e8 74 ff ff ff       	call   6870 <_ZL18add_static_threadsPVK9_layout_tS1_m>
    68fc:	85 c0                	test   %eax,%eax
    68fe:	74 d0                	je     68d0 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x60>
    6900:	5b                   	pop    %rbx
    6901:	5d                   	pop    %rbp
    6902:	41 5c                	pop    %r12
    6904:	41 5d                	pop    %r13
    6906:	41 5e                	pop    %r14
    6908:	c3                   	ret    
    6909:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6910:	5b                   	pop    %rbx
    6911:	31 c0                	xor    %eax,%eax
    6913:	5d                   	pop    %rbp
    6914:	41 5c                	pop    %r12
    6916:	41 5d                	pop    %r13
    6918:	41 5e                	pop    %r14
    691a:	c3                   	ret    
    691b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6920:	48 8b 6b 08          	mov    0x8(%rbx),%rbp
    6924:	e8 cf b7 00 00       	call   120f8 <get_enclave_base>
    6929:	4c 01 e5             	add    %r12,%rbp
    692c:	48 8d 3c 28          	lea    (%rax,%rbp,1),%rdi
    6930:	e8 6b fe ff ff       	call   67a0 <_ZL11do_save_tcsPv>
    6935:	85 c0                	test   %eax,%eax
    6937:	0f 84 53 ff ff ff    	je     6890 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x20>
    693d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    6942:	eb bc                	jmp    6900 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x90>
    6944:	0f 1f 40 00          	nopl   0x0(%rax)
    6948:	31 c0                	xor    %eax,%eax
    694a:	c3                   	ret    
    694b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000006950 <_ZL10trts_ecalljPv>:
    6950:	f3 0f 1e fa          	endbr64 
    6954:	41 55                	push   %r13
    6956:	41 54                	push   %r12
    6958:	55                   	push   %rbp
    6959:	48 89 f5             	mov    %rsi,%rbp
    695c:	53                   	push   %rbx
    695d:	89 fb                	mov    %edi,%ebx
    695f:	48 83 ec 08          	sub    $0x8,%rsp
    6963:	0f b6 05 b6 18 01 00 	movzbl 0x118b6(%rip),%eax        # 18220 <_ZL16g_is_first_ecall>
    696a:	84 c0                	test   %al,%al
    696c:	0f 85 b6 00 00 00    	jne    6a28 <_ZL10trts_ecalljPv+0xd8>
    6972:	83 fb fa             	cmp    $0xfffffffa,%ebx
    6975:	0f 84 8d 00 00 00    	je     6a08 <_ZL10trts_ecalljPv+0xb8>
    697b:	4c 8d 25 3e 14 01 00 	lea    0x1143e(%rip),%r12        # 17dc0 <g_ecall_table>
    6982:	49 3b 1c 24          	cmp    (%r12),%rbx
    6986:	73 68                	jae    69f0 <_ZL10trts_ecalljPv+0xa0>
    6988:	e8 b6 b7 00 00       	call   12143 <get_thread_data>
    698d:	0f ae e8             	lfence 
    6990:	48 8b 50 08          	mov    0x8(%rax),%rdx
    6994:	48 3b 50 10          	cmp    0x10(%rax),%rdx
    6998:	0f 84 b2 00 00 00    	je     6a50 <_ZL10trts_ecalljPv+0x100>
    699e:	48 81 7a 20 44 49 43 	cmpq   $0x4f434944,0x20(%rdx)
    69a5:	4f 
    69a6:	0f 85 5b 01 00 00    	jne    6b07 <_ZL10trts_ecalljPv+0x1b7>
    69ac:	48 8d 05 dd c6 00 00 	lea    0xc6dd(%rip),%rax        # 13090 <g_dyn_entry_table>
    69b3:	48 8b 52 28          	mov    0x28(%rdx),%rdx
    69b7:	48 3b 10             	cmp    (%rax),%rdx
    69ba:	73 34                	jae    69f0 <_ZL10trts_ecalljPv+0xa0>
    69bc:	49 0f af 14 24       	imul   (%r12),%rdx
    69c1:	48 01 d8             	add    %rbx,%rax
    69c4:	80 7c 02 08 00       	cmpb   $0x0,0x8(%rdx,%rax,1)
    69c9:	74 6c                	je     6a37 <_ZL10trts_ecalljPv+0xe7>
    69cb:	48 c1 e3 04          	shl    $0x4,%rbx
    69cf:	31 f6                	xor    %esi,%esi
    69d1:	49 8b 5c 1c 08       	mov    0x8(%r12,%rbx,1),%rbx
    69d6:	48 89 df             	mov    %rbx,%rdi
    69d9:	e8 82 f1 ff ff       	call   5b60 <sgx_is_within_enclave>
    69de:	85 c0                	test   %eax,%eax
    69e0:	0f 84 8a 00 00 00    	je     6a70 <_ZL10trts_ecalljPv+0x120>
    69e6:	48 89 d8             	mov    %rbx,%rax
    69e9:	eb 24                	jmp    6a0f <_ZL10trts_ecalljPv+0xbf>
    69eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    69f0:	41 bc 01 10 00 00    	mov    $0x1001,%r12d
    69f6:	48 83 c4 08          	add    $0x8,%rsp
    69fa:	44 89 e0             	mov    %r12d,%eax
    69fd:	5b                   	pop    %rbx
    69fe:	5d                   	pop    %rbp
    69ff:	41 5c                	pop    %r12
    6a01:	41 5d                	pop    %r13
    6a03:	c3                   	ret    
    6a04:	0f 1f 40 00          	nopl   0x0(%rax)
    6a08:	48 8d 05 81 fd ff ff 	lea    -0x27f(%rip),%rax        # 6790 <_pthread_thread_run>
    6a0f:	0f ae e8             	lfence 
    6a12:	48 83 c4 08          	add    $0x8,%rsp
    6a16:	48 89 ef             	mov    %rbp,%rdi
    6a19:	5b                   	pop    %rbx
    6a1a:	5d                   	pop    %rbp
    6a1b:	41 5c                	pop    %r12
    6a1d:	41 5d                	pop    %r13
    6a1f:	ff e0                	jmp    *%rax
    6a21:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6a28:	e8 16 b7 00 00       	call   12143 <get_thread_data>
    6a2d:	48 8b 48 10          	mov    0x10(%rax),%rcx
    6a31:	48 39 48 08          	cmp    %rcx,0x8(%rax)
    6a35:	74 49                	je     6a80 <_ZL10trts_ecalljPv+0x130>
    6a37:	48 83 c4 08          	add    $0x8,%rsp
    6a3b:	41 bc 07 10 00 00    	mov    $0x1007,%r12d
    6a41:	5b                   	pop    %rbx
    6a42:	44 89 e0             	mov    %r12d,%eax
    6a45:	5d                   	pop    %rbp
    6a46:	41 5c                	pop    %r12
    6a48:	41 5d                	pop    %r13
    6a4a:	c3                   	ret    
    6a4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6a50:	48 89 d8             	mov    %rbx,%rax
    6a53:	48 c1 e0 04          	shl    $0x4,%rax
    6a57:	41 80 7c 04 10 00    	cmpb   $0x0,0x10(%r12,%rax,1)
    6a5d:	0f 84 68 ff ff ff    	je     69cb <_ZL10trts_ecalljPv+0x7b>
    6a63:	eb d2                	jmp    6a37 <_ZL10trts_ecalljPv+0xe7>
    6a65:	4c 89 ef             	mov    %r13,%rdi
    6a68:	e8 43 5d 00 00       	call   c7b0 <sgx_spin_unlock>
    6a6d:	0f 1f 00             	nopl   (%rax)
    6a70:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    6a76:	e9 7b ff ff ff       	jmp    69f6 <_ZL10trts_ecalljPv+0xa6>
    6a7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6a80:	4c 8d 2d e5 36 01 00 	lea    0x136e5(%rip),%r13        # 1a16c <_ZL10g_ife_lock>
    6a87:	4c 89 ef             	mov    %r13,%rdi
    6a8a:	e8 91 5c 00 00       	call   c720 <sgx_spin_lock>
    6a8f:	0f b6 05 8a 17 01 00 	movzbl 0x1178a(%rip),%eax        # 18220 <_ZL16g_is_first_ecall>
    6a96:	84 c0                	test   %al,%al
    6a98:	74 53                	je     6aed <_ZL10trts_ecalljPv+0x19d>
    6a9a:	48 8d 05 7b 13 01 00 	lea    0x1137b(%rip),%rax        # 17e1c <EDMM_supported>
    6aa1:	8b 00                	mov    (%rax),%eax
    6aa3:	85 c0                	test   %eax,%eax
    6aa5:	74 3a                	je     6ae1 <_ZL10trts_ecalljPv+0x191>
    6aa7:	48 8d 05 52 c7 00 00 	lea    0xc752(%rip),%rax        # 13200 <g_global_data>
    6aae:	31 d2                	xor    %edx,%edx
    6ab0:	8b b0 58 01 00 00    	mov    0x158(%rax),%esi
    6ab6:	48 8d b8 60 01 00 00 	lea    0x160(%rax),%rdi
    6abd:	48 c1 e6 05          	shl    $0x5,%rsi
    6ac1:	48 01 fe             	add    %rdi,%rsi
    6ac4:	e8 a7 fd ff ff       	call   6870 <_ZL18add_static_threadsPVK9_layout_tS1_m>
    6ac9:	85 c0                	test   %eax,%eax
    6acb:	75 98                	jne    6a65 <_ZL10trts_ecalljPv+0x115>
    6acd:	e8 26 b6 00 00       	call   120f8 <get_enclave_base>
    6ad2:	48 89 c7             	mov    %rax,%rdi
    6ad5:	e8 76 1d 00 00       	call   8850 <change_protection>
    6ada:	41 89 c4             	mov    %eax,%r12d
    6add:	85 c0                	test   %eax,%eax
    6adf:	75 19                	jne    6afa <_ZL10trts_ecalljPv+0x1aa>
    6ae1:	e8 9a 21 00 00       	call   8c80 <init_global_object>
    6ae6:	c6 05 33 17 01 00 00 	movb   $0x0,0x11733(%rip)        # 18220 <_ZL16g_is_first_ecall>
    6aed:	4c 89 ef             	mov    %r13,%rdi
    6af0:	e8 bb 5c 00 00       	call   c7b0 <sgx_spin_unlock>
    6af5:	e9 78 fe ff ff       	jmp    6972 <_ZL10trts_ecalljPv+0x22>
    6afa:	4c 89 ef             	mov    %r13,%rdi
    6afd:	e8 ae 5c 00 00       	call   c7b0 <sgx_spin_unlock>
    6b02:	e9 ef fe ff ff       	jmp    69f6 <_ZL10trts_ecalljPv+0xa6>
    6b07:	e8 2b ba 00 00       	call   12537 <abort>
    6b0c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000006b10 <_Z30_random_stack_noinline_wrapperI9_status_tJjPvEJRiRS1_EET_PFS4_DpT0_EDpOT1_.constprop.0.isra.0>:
    6b10:	e9 3b fe ff ff       	jmp    6950 <_ZL10trts_ecalljPv>
    6b15:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6b1c:	00 00 00 
    6b1f:	90                   	nop

0000000000006b20 <_Z16_pthread_enabledv>:
    6b20:	f3 0f 1e fa          	endbr64 
    6b24:	31 c0                	xor    %eax,%eax
    6b26:	c3                   	ret    
    6b27:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    6b2e:	00 00 

0000000000006b30 <_Z24_pthread_tls_store_state9_status_t>:
    6b30:	f3 0f 1e fa          	endbr64 
    6b34:	c3                   	ret    
    6b35:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6b3c:	00 00 00 
    6b3f:	90                   	nop

0000000000006b40 <_Z22_pthread_tls_get_statev>:
    6b40:	f3 0f 1e fa          	endbr64 
    6b44:	31 c0                	xor    %eax,%eax
    6b46:	c3                   	ret    
    6b47:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    6b4e:	00 00 

0000000000006b50 <_Z26_pthread_tls_store_contextPv>:
    6b50:	f3 0f 1e fa          	endbr64 
    6b54:	c3                   	ret    
    6b55:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6b5c:	00 00 00 
    6b5f:	90                   	nop

0000000000006b60 <_Z20_pthread_wakeup_joinPv>:
    6b60:	f3 0f 1e fa          	endbr64 
    6b64:	c3                   	ret    
    6b65:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6b6c:	00 00 00 
    6b6f:	90                   	nop

0000000000006b70 <_Z24_pthread_tls_destructorsv>:
    6b70:	f3 0f 1e fa          	endbr64 
    6b74:	c3                   	ret    
    6b75:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6b7c:	00 00 00 
    6b7f:	90                   	nop

0000000000006b80 <tc_set_idle>:
    6b80:	f3 0f 1e fa          	endbr64 
    6b84:	c3                   	ret    
    6b85:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6b8c:	00 00 00 
    6b8f:	90                   	nop

0000000000006b90 <do_init_thread>:
    6b90:	f3 0f 1e fa          	endbr64 
    6b94:	41 57                	push   %r15
    6b96:	66 48 0f 6e d7       	movq   %rdi,%xmm2
    6b9b:	ba c0 00 00 00       	mov    $0xc0,%edx
    6ba0:	41 56                	push   %r14
    6ba2:	66 0f 6c d2          	punpcklqdq %xmm2,%xmm2
    6ba6:	41 55                	push   %r13
    6ba8:	41 54                	push   %r12
    6baa:	41 89 f4             	mov    %esi,%r12d
    6bad:	55                   	push   %rbp
    6bae:	48 89 fd             	mov    %rdi,%rbp
    6bb1:	53                   	push   %rbx
    6bb2:	48 83 ec 38          	sub    $0x38,%rsp
    6bb6:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    6bbd:	00 00 
    6bbf:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    6bc4:	48 8d 05 35 c6 00 00 	lea    0xc635(%rip),%rax        # 13200 <g_global_data>
    6bcb:	0f 29 14 24          	movaps %xmm2,(%rsp)
    6bcf:	48 8b 58 50          	mov    0x50(%rax),%rbx
    6bd3:	48 8d 70 50          	lea    0x50(%rax),%rsi
    6bd7:	48 01 fb             	add    %rdi,%rbx
    6bda:	48 89 df             	mov    %rbx,%rdi
    6bdd:	4c 8b 7b 28          	mov    0x28(%rbx),%r15
    6be1:	4c 8b 73 30          	mov    0x30(%rbx),%r14
    6be5:	4c 8b ab b0 00 00 00 	mov    0xb0(%rbx),%r13
    6bec:	e8 8f 9a 00 00       	call   10680 <memcpy>
    6bf1:	48 8d 85 00 fc ff ff 	lea    -0x400(%rbp),%rax
    6bf8:	f3 0f 6f 1b          	movdqu (%rbx),%xmm3
    6bfc:	f3 0f 6f 6b 10       	movdqu 0x10(%rbx),%xmm5
    6c01:	66 48 0f 6e c0       	movq   %rax,%xmm0
    6c06:	48 8b 43 18          	mov    0x18(%rbx),%rax
    6c0a:	f3 0f 6f 73 68       	movdqu 0x68(%rbx),%xmm6
    6c0f:	66 48 0f 6e cd       	movq   %rbp,%xmm1
    6c14:	66 0f 6f 14 24       	movdqa (%rsp),%xmm2
    6c19:	66 48 0f 6e e5       	movq   %rbp,%xmm4
    6c1e:	66 0f 6c c8          	punpcklqdq %xmm0,%xmm1
    6c22:	48 01 6b 20          	add    %rbp,0x20(%rbx)
    6c26:	48 01 e8             	add    %rbp,%rax
    6c29:	66 0f 6c c4          	punpcklqdq %xmm4,%xmm0
    6c2d:	66 0f d4 cb          	paddq  %xmm3,%xmm1
    6c31:	48 01 6b 58          	add    %rbp,0x58(%rbx)
    6c35:	48 89 83 b0 00 00 00 	mov    %rax,0xb0(%rbx)
    6c3c:	48 8d 05 b5 11 01 00 	lea    0x111b5(%rip),%rax        # 17df8 <__intel_security_cookie>
    6c43:	66 0f d4 c5          	paddq  %xmm5,%xmm0
    6c47:	66 0f d4 d6          	paddq  %xmm6,%xmm2
    6c4b:	4c 89 7b 28          	mov    %r15,0x28(%rbx)
    6c4f:	48 8b 00             	mov    (%rax),%rax
    6c52:	4c 89 73 30          	mov    %r14,0x30(%rbx)
    6c56:	0f 11 53 68          	movups %xmm2,0x68(%rbx)
    6c5a:	0f 11 0b             	movups %xmm1,(%rbx)
    6c5d:	0f 11 43 10          	movups %xmm0,0x10(%rbx)
    6c61:	48 89 85 08 fc fe ff 	mov    %rax,-0x103f8(%rbp)
    6c68:	48 8d 05 ad 11 01 00 	lea    0x111ad(%rip),%rax        # 17e1c <EDMM_supported>
    6c6f:	8b 00                	mov    (%rax),%eax
    6c71:	85 c0                	test   %eax,%eax
    6c73:	48 8d 05 8a 11 01 00 	lea    0x1118a(%rip),%rax        # 17e04 <g_aexnotify_supported>
    6c7a:	0f 85 f0 00 00 00    	jne    6d70 <do_init_thread+0x1e0>
    6c80:	83 38 01             	cmpl   $0x1,(%rax)
    6c83:	0f 84 17 01 00 00    	je     6da0 <do_init_thread+0x210>
    6c89:	4d 85 ed             	test   %r13,%r13
    6c8c:	0f 85 c8 00 00 00    	jne    6d5a <do_init_thread+0x1ca>
    6c92:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6c98:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
    6c9f:	00 00 
    6ca1:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    6ca8:	00 00 
    6caa:	e8 49 b4 00 00       	call   120f8 <get_enclave_base>
    6caf:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
    6cb4:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
    6cb9:	48 89 c7             	mov    %rax,%rdi
    6cbc:	e8 0f 19 00 00       	call   85d0 <elf_tls_info>
    6cc1:	89 c2                	mov    %eax,%edx
    6cc3:	b8 01 00 00 00       	mov    $0x1,%eax
    6cc8:	85 d2                	test   %edx,%edx
    6cca:	75 0a                	jne    6cd6 <do_init_thread+0x146>
    6ccc:	48 83 7c 24 18 00    	cmpq   $0x0,0x18(%rsp)
    6cd2:	75 2c                	jne    6d00 <do_init_thread+0x170>
    6cd4:	31 c0                	xor    %eax,%eax
    6cd6:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    6cdb:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    6ce2:	00 00 
    6ce4:	0f 85 00 01 00 00    	jne    6dea <do_init_thread+0x25a>
    6cea:	48 83 c4 38          	add    $0x38,%rsp
    6cee:	5b                   	pop    %rbx
    6cef:	5d                   	pop    %rbp
    6cf0:	41 5c                	pop    %r12
    6cf2:	41 5d                	pop    %r13
    6cf4:	41 5e                	pop    %r14
    6cf6:	41 5f                	pop    %r15
    6cf8:	c3                   	ret    
    6cf9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6d00:	48 8b 03             	mov    (%rbx),%rax
    6d03:	48 8b 7b 68          	mov    0x68(%rbx),%rdi
    6d07:	31 f6                	xor    %esi,%esi
    6d09:	48 8d 90 ff 0f 00 00 	lea    0xfff(%rax),%rdx
    6d10:	48 29 fa             	sub    %rdi,%rdx
    6d13:	48 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%rdi
    6d1a:	48 81 e2 00 f0 ff ff 	and    $0xfffffffffffff000,%rdx
    6d21:	e8 9a 9b 00 00       	call   108c0 <memset>
    6d26:	48 8b 7b 68          	mov    0x68(%rbx),%rdi
    6d2a:	48 8b 03             	mov    (%rbx),%rax
    6d2d:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
    6d32:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    6d37:	48 29 f8             	sub    %rdi,%rax
    6d3a:	48 39 d0             	cmp    %rdx,%rax
    6d3d:	72 95                	jb     6cd4 <do_init_thread+0x144>
    6d3f:	e8 3c 99 00 00       	call   10680 <memcpy>
    6d44:	eb 8e                	jmp    6cd4 <do_init_thread+0x144>
    6d46:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6d4d:	00 00 00 
    6d50:	83 f8 01             	cmp    $0x1,%eax
    6d53:	74 7b                	je     6dd0 <do_init_thread+0x240>
    6d55:	4d 85 ed             	test   %r13,%r13
    6d58:	74 5e                	je     6db8 <do_init_thread+0x228>
    6d5a:	4c 89 ab b0 00 00 00 	mov    %r13,0xb0(%rbx)
    6d61:	e9 32 ff ff ff       	jmp    6c98 <do_init_thread+0x108>
    6d66:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6d6d:	00 00 00 
    6d70:	8b 00                	mov    (%rax),%eax
    6d72:	45 84 e4             	test   %r12b,%r12b
    6d75:	74 d9                	je     6d50 <do_init_thread+0x1c0>
    6d77:	48 c7 43 30 01 00 00 	movq   $0x1,0x30(%rbx)
    6d7e:	00 
    6d7f:	83 f8 01             	cmp    $0x1,%eax
    6d82:	74 5c                	je     6de0 <do_init_thread+0x250>
    6d84:	4d 85 ed             	test   %r13,%r13
    6d87:	75 d1                	jne    6d5a <do_init_thread+0x1ca>
    6d89:	e8 52 f5 ff ff       	call   62e0 <get_dynamic_stack_max_page>
    6d8e:	89 c0                	mov    %eax,%eax
    6d90:	48 c1 e0 0c          	shl    $0xc,%rax
    6d94:	48 01 83 b0 00 00 00 	add    %rax,0xb0(%rbx)
    6d9b:	e9 f8 fe ff ff       	jmp    6c98 <do_init_thread+0x108>
    6da0:	48 c7 43 50 01 00 00 	movq   $0x1,0x50(%rbx)
    6da7:	00 
    6da8:	4d 85 ed             	test   %r13,%r13
    6dab:	75 ad                	jne    6d5a <do_init_thread+0x1ca>
    6dad:	e9 e6 fe ff ff       	jmp    6c98 <do_init_thread+0x108>
    6db2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6db8:	48 89 ef             	mov    %rbp,%rdi
    6dbb:	e8 50 f4 ff ff       	call   6210 <is_dynamic_thread>
    6dc0:	85 c0                	test   %eax,%eax
    6dc2:	75 c5                	jne    6d89 <do_init_thread+0x1f9>
    6dc4:	e9 cf fe ff ff       	jmp    6c98 <do_init_thread+0x108>
    6dc9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6dd0:	48 c7 43 50 01 00 00 	movq   $0x1,0x50(%rbx)
    6dd7:	00 
    6dd8:	e9 78 ff ff ff       	jmp    6d55 <do_init_thread+0x1c5>
    6ddd:	0f 1f 00             	nopl   (%rax)
    6de0:	48 c7 43 50 01 00 00 	movq   $0x1,0x50(%rbx)
    6de7:	00 
    6de8:	eb 9a                	jmp    6d84 <do_init_thread+0x1f4>
    6dea:	e8 b1 9b 00 00       	call   109a0 <__stack_chk_fail>
    6def:	90                   	nop

0000000000006df0 <do_ecall>:
    6df0:	f3 0f 1e fa          	endbr64 
    6df4:	53                   	push   %rbx
    6df5:	48 89 d3             	mov    %rdx,%rbx
    6df8:	48 83 ec 70          	sub    $0x70,%rsp
    6dfc:	89 7c 24 10          	mov    %edi,0x10(%rsp)
    6e00:	48 89 34 24          	mov    %rsi,(%rsp)
    6e04:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    6e0b:	00 00 
    6e0d:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    6e12:	31 c0                	xor    %eax,%eax
    6e14:	e8 eb b2 00 00       	call   12104 <get_enclave_state>
    6e19:	89 c2                	mov    %eax,%edx
    6e1b:	b8 01 00 00 00       	mov    $0x1,%eax
    6e20:	83 fa 02             	cmp    $0x2,%edx
    6e23:	74 1b                	je     6e40 <do_ecall+0x50>
    6e25:	48 8b 54 24 68       	mov    0x68(%rsp),%rdx
    6e2a:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    6e31:	00 00 
    6e33:	0f 85 d5 01 00 00    	jne    700e <do_ecall+0x21e>
    6e39:	48 83 c4 70          	add    $0x70,%rsp
    6e3d:	5b                   	pop    %rbx
    6e3e:	c3                   	ret    
    6e3f:	90                   	nop
    6e40:	e8 fe b2 00 00       	call   12143 <get_thread_data>
    6e45:	48 85 c0             	test   %rax,%rax
    6e48:	0f 84 16 01 00 00    	je     6f64 <do_ecall+0x174>
    6e4e:	48 8b 48 08          	mov    0x8(%rax),%rcx
    6e52:	48 39 48 10          	cmp    %rcx,0x10(%rax)
    6e56:	0f 84 f4 00 00 00    	je     6f50 <do_ecall+0x160>
    6e5c:	e8 e2 b2 00 00       	call   12143 <get_thread_data>
    6e61:	48 83 78 50 01       	cmpq   $0x1,0x50(%rax)
    6e66:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    6e6b:	0f 84 0f 01 00 00    	je     6f80 <do_ecall+0x190>
    6e71:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    6e76:	48 8b 48 08          	mov    0x8(%rax),%rcx
    6e7a:	48 39 48 10          	cmp    %rcx,0x10(%rax)
    6e7e:	74 48                	je     6ec8 <do_ecall+0xd8>
    6e80:	48 8b 34 24          	mov    (%rsp),%rsi
    6e84:	8b 7c 24 10          	mov    0x10(%rsp),%edi
    6e88:	e8 c3 fa ff ff       	call   6950 <_ZL10trts_ecalljPv>
    6e8d:	48 8d 15 6c c3 00 00 	lea    0xc36c(%rip),%rdx        # 13200 <g_global_data>
    6e94:	48 8b 52 38          	mov    0x38(%rdx),%rdx
    6e98:	48 85 d2             	test   %rdx,%rdx
    6e9b:	74 88                	je     6e25 <do_ecall+0x35>
    6e9d:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    6ea2:	48 8b 59 08          	mov    0x8(%rcx),%rbx
    6ea6:	48 39 59 10          	cmp    %rbx,0x10(%rcx)
    6eaa:	0f 85 75 ff ff ff    	jne    6e25 <do_ecall+0x35>
    6eb0:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
    6eb4:	e8 c7 fc ff ff       	call   6b80 <tc_set_idle>
    6eb9:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    6ebd:	e9 63 ff ff ff       	jmp    6e25 <do_ecall+0x35>
    6ec2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6ec8:	31 ff                	xor    %edi,%edi
    6eca:	e8 11 f0 ff ff       	call   5ee0 <sgx_wrpkru>
    6ecf:	e8 4c fc ff ff       	call   6b20 <_Z16_pthread_enabledv>
    6ed4:	84 c0                	test   %al,%al
    6ed6:	0f 84 fc 00 00 00    	je     6fd8 <do_ecall+0x1e8>
    6edc:	66 0f ef c0          	pxor   %xmm0,%xmm0
    6ee0:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
    6ee5:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
    6eea:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
    6eef:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
    6ef4:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
    6ef9:	e8 d4 9d 00 00       	call   10cd2 <setjmp>
    6efe:	f3 0f 1e fa          	endbr64 
    6f02:	85 c0                	test   %eax,%eax
    6f04:	0f 84 96 00 00 00    	je     6fa0 <do_ecall+0x1b0>
    6f0a:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
    6f0f:	48 8b 43 10          	mov    0x10(%rbx),%rax
    6f13:	48 89 43 08          	mov    %rax,0x8(%rbx)
    6f17:	b8 09 00 00 00       	mov    $0x9,%eax
    6f1c:	bf 09 00 00 00       	mov    $0x9,%edi
    6f21:	89 44 24 18          	mov    %eax,0x18(%rsp)
    6f25:	e8 06 fc ff ff       	call   6b30 <_Z24_pthread_tls_store_state9_status_t>
    6f2a:	8b 44 24 18          	mov    0x18(%rsp),%eax
    6f2e:	89 44 24 14          	mov    %eax,0x14(%rsp)
    6f32:	e8 39 fc ff ff       	call   6b70 <_Z24_pthread_tls_destructorsv>
    6f37:	48 8b 3c 24          	mov    (%rsp),%rdi
    6f3b:	e8 20 fc ff ff       	call   6b60 <_Z20_pthread_wakeup_joinPv>
    6f40:	8b 44 24 14          	mov    0x14(%rsp),%eax
    6f44:	e9 44 ff ff ff       	jmp    6e8d <do_ecall+0x9d>
    6f49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6f50:	48 8d 05 a9 c2 00 00 	lea    0xc2a9(%rip),%rax        # 13200 <g_global_data>
    6f57:	48 8b 40 38          	mov    0x38(%rax),%rax
    6f5b:	48 85 c0             	test   %rax,%rax
    6f5e:	0f 84 8c 00 00 00    	je     6ff0 <do_ecall+0x200>
    6f64:	31 f6                	xor    %esi,%esi
    6f66:	48 89 df             	mov    %rbx,%rdi
    6f69:	e8 22 fc ff ff       	call   6b90 <do_init_thread>
    6f6e:	85 c0                	test   %eax,%eax
    6f70:	0f 84 e6 fe ff ff    	je     6e5c <do_ecall+0x6c>
    6f76:	e9 aa fe ff ff       	jmp    6e25 <do_ecall+0x35>
    6f7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6f80:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    6f85:	bf 01 00 00 00       	mov    $0x1,%edi
    6f8a:	48 c7 40 50 00 00 00 	movq   $0x0,0x50(%rax)
    6f91:	00 
    6f92:	e8 69 f5 ff ff       	call   6500 <sgx_set_ssa_aexnotify>
    6f97:	e9 d5 fe ff ff       	jmp    6e71 <do_ecall+0x81>
    6f9c:	0f 1f 40 00          	nopl   0x0(%rax)
    6fa0:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
    6fa5:	e8 a6 fb ff ff       	call   6b50 <_Z26_pthread_tls_store_contextPv>
    6faa:	0f c7 f0             	rdrand %eax
    6fad:	73 fb                	jae    6faa <do_ecall+0x1ba>
    6faf:	8b 5c 24 10          	mov    0x10(%rsp),%ebx
    6fb3:	48 8b 34 24          	mov    (%rsp),%rsi
    6fb7:	89 df                	mov    %ebx,%edi
    6fb9:	e8 52 fb ff ff       	call   6b10 <_Z30_random_stack_noinline_wrapperI9_status_tJjPvEJRiRS1_EET_PFS4_DpT0_EDpOT1_.constprop.0.isra.0>
    6fbe:	83 fb fa             	cmp    $0xfffffffa,%ebx
    6fc1:	0f 84 55 ff ff ff    	je     6f1c <do_ecall+0x12c>
    6fc7:	83 f8 09             	cmp    $0x9,%eax
    6fca:	0f 85 5e ff ff ff    	jne    6f2e <do_ecall+0x13e>
    6fd0:	e9 42 ff ff ff       	jmp    6f17 <do_ecall+0x127>
    6fd5:	0f 1f 00             	nopl   (%rax)
    6fd8:	0f c7 f0             	rdrand %eax
    6fdb:	73 fb                	jae    6fd8 <do_ecall+0x1e8>
    6fdd:	48 8b 34 24          	mov    (%rsp),%rsi
    6fe1:	8b 7c 24 10          	mov    0x10(%rsp),%edi
    6fe5:	e8 26 fb ff ff       	call   6b10 <_Z30_random_stack_noinline_wrapperI9_status_tJjPvEJRiRS1_EET_PFS4_DpT0_EDpOT1_.constprop.0.isra.0>
    6fea:	e9 9e fe ff ff       	jmp    6e8d <do_ecall+0x9d>
    6fef:	90                   	nop
    6ff0:	e8 4b fb ff ff       	call   6b40 <_Z22_pthread_tls_get_statev>
    6ff5:	83 7c 24 10 fa       	cmpl   $0xfffffffa,0x10(%rsp)
    6ffa:	0f 84 64 ff ff ff    	je     6f64 <do_ecall+0x174>
    7000:	83 f8 09             	cmp    $0x9,%eax
    7003:	0f 85 53 fe ff ff    	jne    6e5c <do_ecall+0x6c>
    7009:	e9 56 ff ff ff       	jmp    6f64 <do_ecall+0x174>
    700e:	e8 8d 99 00 00       	call   109a0 <__stack_chk_fail>
    7013:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    701a:	00 00 00 
    701d:	0f 1f 00             	nopl   (%rax)

0000000000007020 <do_ecall_add_thread>:
    7020:	f3 0f 1e fa          	endbr64 
    7024:	55                   	push   %rbp
    7025:	53                   	push   %rbx
    7026:	48 89 fb             	mov    %rdi,%rbx
    7029:	48 83 ec 08          	sub    $0x8,%rsp
    702d:	e8 5e 06 00 00       	call   7690 <is_utility_thread>
    7032:	48 85 db             	test   %rbx,%rbx
    7035:	0f 84 a5 00 00 00    	je     70e0 <do_ecall_add_thread+0xc0>
    703b:	3c 01                	cmp    $0x1,%al
    703d:	0f 85 9d 00 00 00    	jne    70e0 <do_ecall_add_thread+0xc0>
    7043:	be 08 00 00 00       	mov    $0x8,%esi
    7048:	48 89 df             	mov    %rbx,%rdi
    704b:	e8 70 eb ff ff       	call   5bc0 <sgx_is_outside_enclave>
    7050:	85 c0                	test   %eax,%eax
    7052:	0f 84 88 00 00 00    	je     70e0 <do_ecall_add_thread+0xc0>
    7058:	0f ae e8             	lfence 
    705b:	48 8b 2b             	mov    (%rbx),%rbp
    705e:	48 85 ed             	test   %rbp,%rbp
    7061:	74 7d                	je     70e0 <do_ecall_add_thread+0xc0>
    7063:	0f ae e8             	lfence 
    7066:	48 89 ef             	mov    %rbp,%rdi
    7069:	e8 32 f7 ff ff       	call   67a0 <_ZL11do_save_tcsPv>
    706e:	89 c3                	mov    %eax,%ebx
    7070:	85 c0                	test   %eax,%eax
    7072:	75 71                	jne    70e5 <do_ecall_add_thread+0xc5>
    7074:	48 89 ef             	mov    %rbp,%rdi
    7077:	e8 c4 f2 ff ff       	call   6340 <do_add_thread>
    707c:	89 c3                	mov    %eax,%ebx
    707e:	85 c0                	test   %eax,%eax
    7080:	74 63                	je     70e5 <do_ecall_add_thread+0xc5>
    7082:	e8 09 06 00 00       	call   7690 <is_utility_thread>
    7087:	84 c0                	test   %al,%al
    7089:	74 5a                	je     70e5 <do_ecall_add_thread+0xc5>
    708b:	48 8b 0d e6 30 01 00 	mov    0x130e6(%rip),%rcx        # 1a178 <_ZL10g_tcs_node>
    7092:	48 85 c9             	test   %rcx,%rcx
    7095:	74 4e                	je     70e5 <do_ecall_add_thread+0xc5>
    7097:	48 8b 35 d2 30 01 00 	mov    0x130d2(%rip),%rsi        # 1a170 <_ZL12g_tcs_cookie>
    709e:	48 8b 01             	mov    (%rcx),%rax
    70a1:	48 8b 79 08          	mov    0x8(%rcx),%rdi
    70a5:	48 31 f0             	xor    %rsi,%rax
    70a8:	48 39 c5             	cmp    %rax,%rbp
    70ab:	74 41                	je     70ee <do_ecall_add_thread+0xce>
    70ad:	48 85 ff             	test   %rdi,%rdi
    70b0:	75 11                	jne    70c3 <do_ecall_add_thread+0xa3>
    70b2:	eb 31                	jmp    70e5 <do_ecall_add_thread+0xc5>
    70b4:	0f 1f 40 00          	nopl   0x0(%rax)
    70b8:	48 89 f9             	mov    %rdi,%rcx
    70bb:	48 85 c0             	test   %rax,%rax
    70be:	74 25                	je     70e5 <do_ecall_add_thread+0xc5>
    70c0:	48 89 c7             	mov    %rax,%rdi
    70c3:	48 8b 17             	mov    (%rdi),%rdx
    70c6:	48 8b 47 08          	mov    0x8(%rdi),%rax
    70ca:	48 31 f2             	xor    %rsi,%rdx
    70cd:	48 39 d5             	cmp    %rdx,%rbp
    70d0:	75 e6                	jne    70b8 <do_ecall_add_thread+0x98>
    70d2:	48 89 41 08          	mov    %rax,0x8(%rcx)
    70d6:	e8 f5 7d 00 00       	call   eed0 <dlfree>
    70db:	eb 08                	jmp    70e5 <do_ecall_add_thread+0xc5>
    70dd:	0f 1f 00             	nopl   (%rax)
    70e0:	bb 01 00 00 00       	mov    $0x1,%ebx
    70e5:	48 83 c4 08          	add    $0x8,%rsp
    70e9:	89 d8                	mov    %ebx,%eax
    70eb:	5b                   	pop    %rbx
    70ec:	5d                   	pop    %rbp
    70ed:	c3                   	ret    
    70ee:	48 89 3d 83 30 01 00 	mov    %rdi,0x13083(%rip)        # 1a178 <_ZL10g_tcs_node>
    70f5:	48 89 cf             	mov    %rcx,%rdi
    70f8:	e8 d3 7d 00 00       	call   eed0 <dlfree>
    70fd:	eb e6                	jmp    70e5 <do_ecall_add_thread+0xc5>
    70ff:	90                   	nop

0000000000007100 <do_uninit_enclave>:
    7100:	f3 0f 1e fa          	endbr64 
    7104:	48 8d 05 11 0d 01 00 	lea    0x10d11(%rip),%rax        # 17e1c <EDMM_supported>
    710b:	41 54                	push   %r12
    710d:	55                   	push   %rbp
    710e:	53                   	push   %rbx
    710f:	8b 00                	mov    (%rax),%eax
    7111:	85 c0                	test   %eax,%eax
    7113:	0f 84 a4 00 00 00    	je     71bd <do_uninit_enclave+0xbd>
    7119:	49 89 fc             	mov    %rdi,%r12
    711c:	e8 6f 05 00 00       	call   7690 <is_utility_thread>
    7121:	84 c0                	test   %al,%al
    7123:	0f 84 87 00 00 00    	je     71b0 <do_uninit_enclave+0xb0>
    7129:	f0 83 0d 37 30 01 00 	lock orl $0x1,0x13037(%rip)        # 1a168 <g_uninit_flag>
    7130:	01 
    7131:	48 8b 1d 40 30 01 00 	mov    0x13040(%rip),%rbx        # 1a178 <_ZL10g_tcs_node>
    7138:	48 c7 05 35 30 01 00 	movq   $0x0,0x13035(%rip)        # 1a178 <_ZL10g_tcs_node>
    713f:	00 00 00 00 
    7143:	eb 2f                	jmp    7174 <do_uninit_enclave+0x74>
    7145:	0f 1f 00             	nopl   (%rax)
    7148:	48 8b 3b             	mov    (%rbx),%rdi
    714b:	48 33 3d 1e 30 01 00 	xor    0x1301e(%rip),%rdi        # 1a170 <_ZL12g_tcs_cookie>
    7152:	4c 39 e7             	cmp    %r12,%rdi
    7155:	74 0e                	je     7165 <do_uninit_enclave+0x65>
    7157:	be 00 10 00 00       	mov    $0x1000,%esi
    715c:	e8 2f 48 00 00       	call   b990 <mm_dealloc>
    7161:	85 c0                	test   %eax,%eax
    7163:	75 58                	jne    71bd <do_uninit_enclave+0xbd>
    7165:	48 8b 6b 08          	mov    0x8(%rbx),%rbp
    7169:	48 89 df             	mov    %rbx,%rdi
    716c:	e8 5f 7d 00 00       	call   eed0 <dlfree>
    7171:	48 89 eb             	mov    %rbp,%rbx
    7174:	48 85 db             	test   %rbx,%rbx
    7177:	75 cf                	jne    7148 <do_uninit_enclave+0x48>
    7179:	48 8d 1d ec 2f 01 00 	lea    0x12fec(%rip),%rbx        # 1a16c <_ZL10g_ife_lock>
    7180:	48 89 df             	mov    %rbx,%rdi
    7183:	e8 98 55 00 00       	call   c720 <sgx_spin_lock>
    7188:	0f b6 05 91 10 01 00 	movzbl 0x11091(%rip),%eax        # 18220 <_ZL16g_is_first_ecall>
    718f:	84 c0                	test   %al,%al
    7191:	74 45                	je     71d8 <do_uninit_enclave+0xd8>
    7193:	48 89 df             	mov    %rbx,%rdi
    7196:	e8 15 56 00 00       	call   c7b0 <sgx_spin_unlock>
    719b:	bf 03 00 00 00       	mov    $0x3,%edi
    71a0:	e8 70 af 00 00       	call   12115 <set_enclave_state>
    71a5:	5b                   	pop    %rbx
    71a6:	31 c0                	xor    %eax,%eax
    71a8:	5d                   	pop    %rbp
    71a9:	41 5c                	pop    %r12
    71ab:	c3                   	ret    
    71ac:	0f 1f 40 00          	nopl   0x0(%rax)
    71b0:	e8 bb f0 ff ff       	call   6270 <is_dynamic_thread_exist>
    71b5:	85 c0                	test   %eax,%eax
    71b7:	0f 84 6c ff ff ff    	je     7129 <do_uninit_enclave+0x29>
    71bd:	bf 03 00 00 00       	mov    $0x3,%edi
    71c2:	e8 4e af 00 00       	call   12115 <set_enclave_state>
    71c7:	5b                   	pop    %rbx
    71c8:	b8 01 00 00 00       	mov    $0x1,%eax
    71cd:	5d                   	pop    %rbp
    71ce:	41 5c                	pop    %r12
    71d0:	c3                   	ret    
    71d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    71d8:	e8 43 1b 00 00       	call   8d20 <uninit_global_object>
    71dd:	eb b4                	jmp    7193 <do_uninit_enclave+0x93>
    71df:	90                   	nop

00000000000071e0 <sgx_ocall>:
    71e0:	f3 0f 1e fa          	endbr64 
    71e4:	8d 47 07             	lea    0x7(%rdi),%eax
    71e7:	83 f8 05             	cmp    $0x5,%eax
    71ea:	76 12                	jbe    71fe <sgx_ocall+0x1e>
    71ec:	85 ff                	test   %edi,%edi
    71ee:	74 0e                	je     71fe <sgx_ocall+0x1e>
    71f0:	48 8d 15 99 be 00 00 	lea    0xbe99(%rip),%rdx        # 13090 <g_dyn_entry_table>
    71f7:	89 f8                	mov    %edi,%eax
    71f9:	48 3b 02             	cmp    (%rdx),%rax
    71fc:	73 0a                	jae    7208 <sgx_ocall+0x28>
    71fe:	e9 dc b1 00 00       	jmp    123df <__morestack>
    7203:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7208:	b8 01 10 00 00       	mov    $0x1001,%eax
    720d:	c3                   	ret    
    720e:	66 90                	xchg   %ax,%ax

0000000000007210 <update_ocall_lastsp>:
    7210:	f3 0f 1e fa          	endbr64 
    7214:	53                   	push   %rbx
    7215:	48 89 fb             	mov    %rdi,%rbx
    7218:	e8 26 af 00 00       	call   12143 <get_thread_data>
    721d:	b9 01 00 00 00       	mov    $0x1,%ecx
    7222:	48 8b 50 08          	mov    0x8(%rax),%rdx
    7226:	48 89 53 30          	mov    %rdx,0x30(%rbx)
    722a:	48 39 50 10          	cmp    %rdx,0x10(%rax)
    722e:	74 0b                	je     723b <update_ocall_lastsp+0x2b>
    7230:	48 8b b2 90 00 00 00 	mov    0x90(%rdx),%rsi
    7237:	48 8d 4e 01          	lea    0x1(%rsi),%rcx
    723b:	48 89 8b 90 00 00 00 	mov    %rcx,0x90(%rbx)
    7242:	48 89 58 08          	mov    %rbx,0x8(%rax)
    7246:	48 89 d0             	mov    %rdx,%rax
    7249:	5b                   	pop    %rbx
    724a:	c3                   	ret    
    724b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000007250 <do_oret>:
    7250:	f3 0f 1e fa          	endbr64 
    7254:	55                   	push   %rbp
    7255:	48 89 fd             	mov    %rdi,%rbp
    7258:	53                   	push   %rbx
    7259:	48 83 ec 18          	sub    $0x18,%rsp
    725d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    7264:	00 00 
    7266:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    726b:	31 c0                	xor    %eax,%eax
    726d:	e8 d1 ae 00 00       	call   12143 <get_thread_data>
    7272:	48 83 78 50 01       	cmpq   $0x1,0x50(%rax)
    7277:	48 89 c3             	mov    %rax,%rbx
    727a:	74 74                	je     72f0 <do_oret+0xa0>
    727c:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    7280:	48 89 e0             	mov    %rsp,%rax
    7283:	48 89 3c 24          	mov    %rdi,(%rsp)
    7287:	48 39 f8             	cmp    %rdi,%rax
    728a:	72 24                	jb     72b0 <do_oret+0x60>
    728c:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    7291:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    7298:	00 00 
    729a:	75 6b                	jne    7307 <do_oret+0xb7>
    729c:	48 83 c4 18          	add    $0x18,%rsp
    72a0:	b8 01 00 00 00       	mov    $0x1,%eax
    72a5:	5b                   	pop    %rbx
    72a6:	5d                   	pop    %rbp
    72a7:	c3                   	ret    
    72a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    72af:	00 
    72b0:	48 8b 43 10          	mov    0x10(%rbx),%rax
    72b4:	48 8d 90 10 ff ff ff 	lea    -0xf0(%rax),%rdx
    72bb:	48 39 fa             	cmp    %rdi,%rdx
    72be:	72 cc                	jb     728c <do_oret+0x3c>
    72c0:	48 81 7f 20 44 49 43 	cmpq   $0x4f434944,0x20(%rdi)
    72c7:	4f 
    72c8:	75 c2                	jne    728c <do_oret+0x3c>
    72ca:	48 8b 57 30          	mov    0x30(%rdi),%rdx
    72ce:	48 39 d7             	cmp    %rdx,%rdi
    72d1:	73 b9                	jae    728c <do_oret+0x3c>
    72d3:	48 39 d0             	cmp    %rdx,%rax
    72d6:	72 b4                	jb     728c <do_oret+0x3c>
    72d8:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    72dc:	48 89 ee             	mov    %rbp,%rsi
    72df:	e8 0e b1 00 00       	call   123f2 <asm_oret>
    72e4:	eb a6                	jmp    728c <do_oret+0x3c>
    72e6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    72ed:	00 00 00 
    72f0:	48 c7 40 50 00 00 00 	movq   $0x0,0x50(%rax)
    72f7:	00 
    72f8:	bf 01 00 00 00       	mov    $0x1,%edi
    72fd:	e8 fe f1 ff ff       	call   6500 <sgx_set_ssa_aexnotify>
    7302:	e9 75 ff ff ff       	jmp    727c <do_oret+0x2c>
    7307:	e8 94 96 00 00       	call   109a0 <__stack_chk_fail>
    730c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000007310 <get_enclave_size>:
    7310:	f3 0f 1e fa          	endbr64 
    7314:	48 8d 05 e5 be 00 00 	lea    0xbee5(%rip),%rax        # 13200 <g_global_data>
    731b:	48 8b 40 08          	mov    0x8(%rax),%rax
    731f:	c3                   	ret    

0000000000007320 <get_enclave_end>:
    7320:	f3 0f 1e fa          	endbr64 
    7324:	48 83 ec 08          	sub    $0x8,%rsp
    7328:	e8 cb ad 00 00       	call   120f8 <get_enclave_base>
    732d:	48 8d 15 cc be 00 00 	lea    0xbecc(%rip),%rdx        # 13200 <g_global_data>
    7334:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    7338:	48 83 c4 08          	add    $0x8,%rsp
    733c:	48 8d 44 02 ff       	lea    -0x1(%rdx,%rax,1),%rax
    7341:	c3                   	ret    
    7342:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    7349:	00 00 00 
    734c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000007350 <get_heap_base>:
    7350:	f3 0f 1e fa          	endbr64 
    7354:	48 83 ec 08          	sub    $0x8,%rsp
    7358:	e8 9b ad 00 00       	call   120f8 <get_enclave_base>
    735d:	48 8d 15 9c be 00 00 	lea    0xbe9c(%rip),%rdx        # 13200 <g_global_data>
    7364:	48 8b 52 10          	mov    0x10(%rdx),%rdx
    7368:	48 83 c4 08          	add    $0x8,%rsp
    736c:	48 01 d0             	add    %rdx,%rax
    736f:	c3                   	ret    

0000000000007370 <get_heap_size>:
    7370:	f3 0f 1e fa          	endbr64 
    7374:	48 8d 05 a1 0a 01 00 	lea    0x10aa1(%rip),%rax        # 17e1c <EDMM_supported>
    737b:	48 8d 0d 7e be 00 00 	lea    0xbe7e(%rip),%rcx        # 13200 <g_global_data>
    7382:	8b 00                	mov    (%rax),%eax
    7384:	48 8b 79 18          	mov    0x18(%rcx),%rdi
    7388:	85 c0                	test   %eax,%eax
    738a:	74 41                	je     73cd <get_heap_size+0x5d>
    738c:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    7392:	85 c0                	test   %eax,%eax
    7394:	74 37                	je     73cd <get_heap_size+0x5d>
    7396:	31 d2                	xor    %edx,%edx
    7398:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    739f:	00 
    73a0:	89 d0                	mov    %edx,%eax
    73a2:	48 83 c0 0b          	add    $0xb,%rax
    73a6:	48 c1 e0 05          	shl    $0x5,%rax
    73aa:	48 01 c8             	add    %rcx,%rax
    73ad:	0f b7 30             	movzwl (%rax),%esi
    73b0:	66 83 fe 03          	cmp    $0x3,%si
    73b4:	75 0a                	jne    73c0 <get_heap_size+0x50>
    73b6:	8b 40 04             	mov    0x4(%rax),%eax
    73b9:	48 c1 e0 0c          	shl    $0xc,%rax
    73bd:	48 01 c7             	add    %rax,%rdi
    73c0:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    73c6:	83 c2 01             	add    $0x1,%edx
    73c9:	39 c2                	cmp    %eax,%edx
    73cb:	72 d3                	jb     73a0 <get_heap_size+0x30>
    73cd:	48 89 f8             	mov    %rdi,%rax
    73d0:	c3                   	ret    
    73d1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    73d8:	00 00 00 
    73db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000073e0 <get_heap_min_size>:
    73e0:	f3 0f 1e fa          	endbr64 
    73e4:	48 8d 0d 15 be 00 00 	lea    0xbe15(%rip),%rcx        # 13200 <g_global_data>
    73eb:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    73f1:	85 c0                	test   %eax,%eax
    73f3:	74 3b                	je     7430 <get_heap_min_size+0x50>
    73f5:	31 d2                	xor    %edx,%edx
    73f7:	eb 14                	jmp    740d <get_heap_min_size+0x2d>
    73f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7400:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    7406:	83 c2 01             	add    $0x1,%edx
    7409:	39 c2                	cmp    %eax,%edx
    740b:	73 23                	jae    7430 <get_heap_min_size+0x50>
    740d:	89 d0                	mov    %edx,%eax
    740f:	48 83 c0 0b          	add    $0xb,%rax
    7413:	48 c1 e0 05          	shl    $0x5,%rax
    7417:	48 01 c8             	add    %rcx,%rax
    741a:	0f b7 30             	movzwl (%rax),%esi
    741d:	66 83 fe 01          	cmp    $0x1,%si
    7421:	75 dd                	jne    7400 <get_heap_min_size+0x20>
    7423:	8b 40 04             	mov    0x4(%rax),%eax
    7426:	48 c1 e0 0c          	shl    $0xc,%rax
    742a:	c3                   	ret    
    742b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7430:	31 c0                	xor    %eax,%eax
    7432:	c3                   	ret    
    7433:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    743a:	00 00 00 
    743d:	0f 1f 00             	nopl   (%rax)

0000000000007440 <get_rsrv_base>:
    7440:	f3 0f 1e fa          	endbr64 
    7444:	48 83 ec 08          	sub    $0x8,%rsp
    7448:	e8 ab ac 00 00       	call   120f8 <get_enclave_base>
    744d:	48 8d 15 ac bd 00 00 	lea    0xbdac(%rip),%rdx        # 13200 <g_global_data>
    7454:	48 8b 52 20          	mov    0x20(%rdx),%rdx
    7458:	48 83 c4 08          	add    $0x8,%rsp
    745c:	48 01 d0             	add    %rdx,%rax
    745f:	c3                   	ret    

0000000000007460 <get_rsrv_end>:
    7460:	f3 0f 1e fa          	endbr64 
    7464:	48 83 ec 08          	sub    $0x8,%rsp
    7468:	e8 8b ac 00 00       	call   120f8 <get_enclave_base>
    746d:	48 8d 35 8c bd 00 00 	lea    0xbd8c(%rip),%rsi        # 13200 <g_global_data>
    7474:	48 8d 15 a1 09 01 00 	lea    0x109a1(%rip),%rdx        # 17e1c <EDMM_supported>
    747b:	4c 8b 4e 20          	mov    0x20(%rsi),%r9
    747f:	8b 12                	mov    (%rdx),%edx
    7481:	4c 8b 46 28          	mov    0x28(%rsi),%r8
    7485:	49 83 e9 01          	sub    $0x1,%r9
    7489:	85 d2                	test   %edx,%edx
    748b:	74 40                	je     74cd <get_rsrv_end+0x6d>
    748d:	8b 96 58 01 00 00    	mov    0x158(%rsi),%edx
    7493:	85 d2                	test   %edx,%edx
    7495:	74 36                	je     74cd <get_rsrv_end+0x6d>
    7497:	31 c9                	xor    %ecx,%ecx
    7499:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    74a0:	89 ca                	mov    %ecx,%edx
    74a2:	48 83 c2 0b          	add    $0xb,%rdx
    74a6:	48 c1 e2 05          	shl    $0x5,%rdx
    74aa:	48 01 f2             	add    %rsi,%rdx
    74ad:	0f b7 3a             	movzwl (%rdx),%edi
    74b0:	66 83 ff 16          	cmp    $0x16,%di
    74b4:	75 0a                	jne    74c0 <get_rsrv_end+0x60>
    74b6:	8b 52 04             	mov    0x4(%rdx),%edx
    74b9:	48 c1 e2 0c          	shl    $0xc,%rdx
    74bd:	49 01 d0             	add    %rdx,%r8
    74c0:	8b 96 58 01 00 00    	mov    0x158(%rsi),%edx
    74c6:	83 c1 01             	add    $0x1,%ecx
    74c9:	39 d1                	cmp    %edx,%ecx
    74cb:	72 d3                	jb     74a0 <get_rsrv_end+0x40>
    74cd:	4c 01 c8             	add    %r9,%rax
    74d0:	48 83 c4 08          	add    $0x8,%rsp
    74d4:	4c 01 c0             	add    %r8,%rax
    74d7:	c3                   	ret    
    74d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    74df:	00 

00000000000074e0 <get_rsrv_size>:
    74e0:	f3 0f 1e fa          	endbr64 
    74e4:	48 8d 05 31 09 01 00 	lea    0x10931(%rip),%rax        # 17e1c <EDMM_supported>
    74eb:	48 8d 0d 0e bd 00 00 	lea    0xbd0e(%rip),%rcx        # 13200 <g_global_data>
    74f2:	8b 00                	mov    (%rax),%eax
    74f4:	48 8b 79 28          	mov    0x28(%rcx),%rdi
    74f8:	85 c0                	test   %eax,%eax
    74fa:	74 41                	je     753d <get_rsrv_size+0x5d>
    74fc:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    7502:	85 c0                	test   %eax,%eax
    7504:	74 37                	je     753d <get_rsrv_size+0x5d>
    7506:	31 d2                	xor    %edx,%edx
    7508:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    750f:	00 
    7510:	89 d0                	mov    %edx,%eax
    7512:	48 83 c0 0b          	add    $0xb,%rax
    7516:	48 c1 e0 05          	shl    $0x5,%rax
    751a:	48 01 c8             	add    %rcx,%rax
    751d:	0f b7 30             	movzwl (%rax),%esi
    7520:	66 83 fe 16          	cmp    $0x16,%si
    7524:	75 0a                	jne    7530 <get_rsrv_size+0x50>
    7526:	8b 40 04             	mov    0x4(%rax),%eax
    7529:	48 c1 e0 0c          	shl    $0xc,%rax
    752d:	48 01 c7             	add    %rax,%rdi
    7530:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    7536:	83 c2 01             	add    $0x1,%edx
    7539:	39 c2                	cmp    %eax,%edx
    753b:	72 d3                	jb     7510 <get_rsrv_size+0x30>
    753d:	48 89 f8             	mov    %rdi,%rax
    7540:	c3                   	ret    
    7541:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    7548:	00 00 00 
    754b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000007550 <get_rsrv_min_size>:
    7550:	f3 0f 1e fa          	endbr64 
    7554:	48 8d 0d a5 bc 00 00 	lea    0xbca5(%rip),%rcx        # 13200 <g_global_data>
    755b:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    7561:	85 c0                	test   %eax,%eax
    7563:	74 3b                	je     75a0 <get_rsrv_min_size+0x50>
    7565:	31 d2                	xor    %edx,%edx
    7567:	eb 14                	jmp    757d <get_rsrv_min_size+0x2d>
    7569:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7570:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    7576:	83 c2 01             	add    $0x1,%edx
    7579:	39 c2                	cmp    %eax,%edx
    757b:	73 23                	jae    75a0 <get_rsrv_min_size+0x50>
    757d:	89 d0                	mov    %edx,%eax
    757f:	48 83 c0 0b          	add    $0xb,%rax
    7583:	48 c1 e0 05          	shl    $0x5,%rax
    7587:	48 01 c8             	add    %rcx,%rax
    758a:	0f b7 30             	movzwl (%rax),%esi
    758d:	66 83 fe 14          	cmp    $0x14,%si
    7591:	75 dd                	jne    7570 <get_rsrv_min_size+0x20>
    7593:	8b 40 04             	mov    0x4(%rax),%eax
    7596:	48 c1 e0 0c          	shl    $0xc,%rax
    759a:	c3                   	ret    
    759b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    75a0:	31 c0                	xor    %eax,%eax
    75a2:	c3                   	ret    
    75a3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    75aa:	00 00 00 
    75ad:	0f 1f 00             	nopl   (%rax)

00000000000075b0 <get_errno_addr>:
    75b0:	f3 0f 1e fa          	endbr64 
    75b4:	48 83 ec 08          	sub    $0x8,%rsp
    75b8:	e8 86 ab 00 00       	call   12143 <get_thread_data>
    75bd:	48 83 c4 08          	add    $0x8,%rsp
    75c1:	48 83 c0 40          	add    $0x40,%rax
    75c5:	c3                   	ret    
    75c6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    75cd:	00 00 00 

00000000000075d0 <feature_supported>:
    75d0:	f3 0f 1e fa          	endbr64 
    75d4:	48 85 ff             	test   %rdi,%rdi
    75d7:	74 37                	je     7610 <feature_supported+0x40>
    75d9:	31 d2                	xor    %edx,%edx
    75db:	eb 08                	jmp    75e5 <feature_supported+0x15>
    75dd:	0f 1f 00             	nopl   (%rax)
    75e0:	48 85 c0             	test   %rax,%rax
    75e3:	78 2b                	js     7610 <feature_supported+0x40>
    75e5:	89 d0                	mov    %edx,%eax
    75e7:	83 c2 01             	add    $0x1,%edx
    75ea:	41 89 d1             	mov    %edx,%r9d
    75ed:	49 89 c0             	mov    %rax,%r8
    75f0:	48 8b 04 c7          	mov    (%rdi,%rax,8),%rax
    75f4:	41 c1 e1 06          	shl    $0x6,%r9d
    75f8:	44 39 ce             	cmp    %r9d,%esi
    75fb:	73 e3                	jae    75e0 <feature_supported+0x10>
    75fd:	41 c1 e0 06          	shl    $0x6,%r8d
    7601:	44 29 c6             	sub    %r8d,%esi
    7604:	89 f1                	mov    %esi,%ecx
    7606:	48 d3 e8             	shr    %cl,%rax
    7609:	83 e0 01             	and    $0x1,%eax
    760c:	c3                   	ret    
    760d:	0f 1f 00             	nopl   (%rax)
    7610:	31 c0                	xor    %eax,%eax
    7612:	c3                   	ret    
    7613:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    761a:	00 00 00 
    761d:	0f 1f 00             	nopl   (%rax)

0000000000007620 <is_stack_addr>:
    7620:	f3 0f 1e fa          	endbr64 
    7624:	55                   	push   %rbp
    7625:	48 89 f5             	mov    %rsi,%rbp
    7628:	53                   	push   %rbx
    7629:	48 89 fb             	mov    %rdi,%rbx
    762c:	48 83 ec 08          	sub    $0x8,%rsp
    7630:	e8 0e ab 00 00       	call   12143 <get_thread_data>
    7635:	31 c9                	xor    %ecx,%ecx
    7637:	48 01 dd             	add    %rbx,%rbp
    763a:	48 89 c2             	mov    %rax,%rdx
    763d:	0f 92 c1             	setb   %cl
    7640:	48 39 68 10          	cmp    %rbp,0x10(%rax)
    7644:	0f 93 c0             	setae  %al
    7647:	48 3b 5a 18          	cmp    0x18(%rdx),%rbx
    764b:	0f 93 c2             	setae  %dl
    764e:	21 d0                	and    %edx,%eax
    7650:	48 85 c9             	test   %rcx,%rcx
    7653:	0f 94 c2             	sete   %dl
    7656:	48 83 c4 08          	add    $0x8,%rsp
    765a:	21 d0                	and    %edx,%eax
    765c:	5b                   	pop    %rbx
    765d:	5d                   	pop    %rbp
    765e:	c3                   	ret    
    765f:	90                   	nop

0000000000007660 <is_valid_sp>:
    7660:	f3 0f 1e fa          	endbr64 
    7664:	40 f6 c7 07          	test   $0x7,%dil
    7668:	74 06                	je     7670 <is_valid_sp+0x10>
    766a:	31 c0                	xor    %eax,%eax
    766c:	c3                   	ret    
    766d:	0f 1f 00             	nopl   (%rax)
    7670:	53                   	push   %rbx
    7671:	48 89 fb             	mov    %rdi,%rbx
    7674:	e8 ca aa 00 00       	call   12143 <get_thread_data>
    7679:	48 89 c2             	mov    %rax,%rdx
    767c:	48 3b 58 18          	cmp    0x18(%rax),%rbx
    7680:	0f 93 c0             	setae  %al
    7683:	48 39 5a 10          	cmp    %rbx,0x10(%rdx)
    7687:	5b                   	pop    %rbx
    7688:	0f 93 c2             	setae  %dl
    768b:	21 d0                	and    %edx,%eax
    768d:	c3                   	ret    
    768e:	66 90                	xchg   %ax,%ax

0000000000007690 <is_utility_thread>:
    7690:	f3 0f 1e fa          	endbr64 
    7694:	48 83 ec 08          	sub    $0x8,%rsp
    7698:	e8 a6 aa 00 00       	call   12143 <get_thread_data>
    769d:	31 d2                	xor    %edx,%edx
    769f:	48 85 c0             	test   %rax,%rax
    76a2:	74 07                	je     76ab <is_utility_thread+0x1b>
    76a4:	48 8b 50 30          	mov    0x30(%rax),%rdx
    76a8:	83 e2 01             	and    $0x1,%edx
    76ab:	89 d0                	mov    %edx,%eax
    76ad:	48 83 c4 08          	add    $0x8,%rsp
    76b1:	c3                   	ret    
    76b2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    76b9:	00 00 00 
    76bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000076c0 <get_max_tcs_num>:
    76c0:	f3 0f 1e fa          	endbr64 
    76c4:	48 8d 05 51 07 01 00 	lea    0x10751(%rip),%rax        # 17e1c <EDMM_supported>
    76cb:	83 38 01             	cmpl   $0x1,(%rax)
    76ce:	48 8d 05 2b bb 00 00 	lea    0xbb2b(%rip),%rax        # 13200 <g_global_data>
    76d5:	74 09                	je     76e0 <get_max_tcs_num+0x20>
    76d7:	48 8b 40 48          	mov    0x48(%rax),%rax
    76db:	c3                   	ret    
    76dc:	0f 1f 40 00          	nopl   0x0(%rax)
    76e0:	48 8b 40 40          	mov    0x40(%rax),%rax
    76e4:	c3                   	ret    
    76e5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    76ec:	00 00 00 
    76ef:	90                   	nop

00000000000076f0 <is_pkru_enabled>:
    76f0:	f3 0f 1e fa          	endbr64 
    76f4:	48 83 ec 08          	sub    $0x8,%rsp
    76f8:	e8 23 0a 00 00       	call   8120 <get_xfeature_state>
    76fd:	48 83 c4 08          	add    $0x8,%rsp
    7701:	48 c1 e8 09          	shr    $0x9,%rax
    7705:	83 e0 01             	and    $0x1,%eax
    7708:	c3                   	ret    
    7709:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000007710 <is_tcs_binding_mode>:
    7710:	f3 0f 1e fa          	endbr64 
    7714:	48 8d 05 e5 ba 00 00 	lea    0xbae5(%rip),%rax        # 13200 <g_global_data>
    771b:	48 8b 40 38          	mov    0x38(%rax),%rax
    771f:	48 85 c0             	test   %rax,%rax
    7722:	0f 94 c0             	sete   %al
    7725:	c3                   	ret    
    7726:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    772d:	00 00 00 

0000000000007730 <get_xsave_size>:
    7730:	f3 0f 1e fa          	endbr64 
    7734:	48 8d 05 c5 ba 00 00 	lea    0xbac5(%rip),%rax        # 13200 <g_global_data>
    773b:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
    7742:	c3                   	ret    
    7743:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    774a:	00 00 00 
    774d:	0f 1f 00             	nopl   (%rax)

0000000000007750 <get_ssa_aexnotify>:
    7750:	f3 0f 1e fa          	endbr64 
    7754:	48 83 ec 08          	sub    $0x8,%rsp
    7758:	e8 e6 a9 00 00       	call   12143 <get_thread_data>
    775d:	48 85 c0             	test   %rax,%rax
    7760:	74 16                	je     7778 <get_ssa_aexnotify+0x28>
    7762:	48 8b 40 20          	mov    0x20(%rax),%rax
    7766:	0f b6 80 a7 00 00 00 	movzbl 0xa7(%rax),%eax
    776d:	48 83 c4 08          	add    $0x8,%rsp
    7771:	83 e0 01             	and    $0x1,%eax
    7774:	c3                   	ret    
    7775:	0f 1f 00             	nopl   (%rax)
    7778:	31 c0                	xor    %eax,%eax
    777a:	48 83 c4 08          	add    $0x8,%rsp
    777e:	c3                   	ret    
    777f:	90                   	nop

0000000000007780 <internal_handle_exception>:
    7780:	f3 0f 1e fa          	endbr64 
    7784:	55                   	push   %rbp
    7785:	48 89 e5             	mov    %rsp,%rbp
    7788:	41 57                	push   %r15
    778a:	41 56                	push   %r14
    778c:	41 55                	push   %r13
    778e:	41 54                	push   %r12
    7790:	53                   	push   %rbx
    7791:	48 89 fb             	mov    %rdi,%rbx
    7794:	48 83 ec 38          	sub    $0x38,%rsp
    7798:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    779f:	00 00 
    77a1:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    77a5:	31 c0                	xor    %eax,%eax
    77a7:	e8 97 a9 00 00       	call   12143 <get_thread_data>
    77ac:	4c 8b 60 20          	mov    0x20(%rax),%r12
    77b0:	49 89 c5             	mov    %rax,%r13
    77b3:	e8 78 ff ff ff       	call   7730 <get_xsave_size>
    77b8:	48 85 db             	test   %rbx,%rbx
    77bb:	0f 84 4f 01 00 00    	je     7910 <internal_handle_exception+0x190>
    77c1:	49 8d b4 24 ff 0f 00 	lea    0xfff(%r12),%rsi
    77c8:	00 
    77c9:	48 05 b7 10 00 00    	add    $0x10b7,%rax
    77cf:	48 8b 93 b0 00 00 00 	mov    0xb0(%rbx),%rdx
    77d6:	4c 8d b3 c0 00 00 00 	lea    0xc0(%rbx),%r14
    77dd:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    77e3:	48 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%rsi
    77ea:	4c 89 f7             	mov    %r14,%rdi
    77ed:	48 29 c6             	sub    %rax,%rsi
    77f0:	e8 8b 8e 00 00       	call   10680 <memcpy>
    77f5:	8b 83 a8 00 00 00    	mov    0xa8(%rbx),%eax
    77fb:	85 c0                	test   %eax,%eax
    77fd:	0f 84 2e 01 00 00    	je     7931 <internal_handle_exception+0x1b1>
    7803:	49 8b 45 78          	mov    0x78(%r13),%rax
    7807:	48 85 c0             	test   %rax,%rax
    780a:	0f 88 00 01 00 00    	js     7910 <internal_handle_exception+0x190>
    7810:	48 8d 50 01          	lea    0x1(%rax),%rdx
    7814:	83 bb 90 00 00 00 0e 	cmpl   $0xe,0x90(%rbx)
    781b:	49 89 55 78          	mov    %rdx,0x78(%r13)
    781f:	75 27                	jne    7848 <internal_handle_exception+0xc8>
    7821:	48 8b 15 58 29 01 00 	mov    0x12958(%rip),%rdx        # 1a180 <g_mm_pfhandler>
    7828:	48 85 d2             	test   %rdx,%rdx
    782b:	74 1b                	je     7848 <internal_handle_exception+0xc8>
    782d:	49 89 45 78          	mov    %rax,0x78(%r13)
    7831:	48 8d bb 98 00 00 00 	lea    0x98(%rbx),%rdi
    7838:	ff d2                	call   *%rdx
    783a:	83 c0 01             	add    $0x1,%eax
    783d:	0f 84 ee 00 00 00    	je     7931 <internal_handle_exception+0x1b1>
    7843:	49 83 45 78 01       	addq   $0x1,0x78(%r13)
    7848:	48 8d 3d 41 29 01 00 	lea    0x12941(%rip),%rdi        # 1a190 <_ZL14g_handler_lock>
    784f:	e8 cc 4e 00 00       	call   c720 <sgx_spin_lock>
    7854:	48 8b 05 3d 29 01 00 	mov    0x1293d(%rip),%rax        # 1a198 <_ZL12g_first_node>
    785b:	48 85 c0             	test   %rax,%rax
    785e:	0f 84 b9 00 00 00    	je     791d <internal_handle_exception+0x19d>
    7864:	45 31 ff             	xor    %r15d,%r15d
    7867:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    786e:	00 00 
    7870:	48 8b 40 08          	mov    0x8(%rax),%rax
    7874:	49 83 c7 08          	add    $0x8,%r15
    7878:	48 85 c0             	test   %rax,%rax
    787b:	75 f3                	jne    7870 <internal_handle_exception+0xf0>
    787d:	4d 85 ff             	test   %r15,%r15
    7880:	0f 84 97 00 00 00    	je     791d <internal_handle_exception+0x19d>
    7886:	4c 89 ff             	mov    %r15,%rdi
    7889:	e8 e2 4c 00 00       	call   c570 <alloca>
    788e:	49 89 c4             	mov    %rax,%r12
    7891:	48 85 c0             	test   %rax,%rax
    7894:	0f 84 a9 02 00 00    	je     7b43 <internal_handle_exception+0x3c3>
    789a:	48 8b 05 f7 28 01 00 	mov    0x128f7(%rip),%rax        # 1a198 <_ZL12g_first_node>
    78a1:	4c 89 e1             	mov    %r12,%rcx
    78a4:	48 85 c0             	test   %rax,%rax
    78a7:	74 1b                	je     78c4 <internal_handle_exception+0x144>
    78a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    78b0:	48 8b 30             	mov    (%rax),%rsi
    78b3:	48 8b 40 08          	mov    0x8(%rax),%rax
    78b7:	48 83 c1 08          	add    $0x8,%rcx
    78bb:	48 89 71 f8          	mov    %rsi,-0x8(%rcx)
    78bf:	48 85 c0             	test   %rax,%rax
    78c2:	75 ec                	jne    78b0 <internal_handle_exception+0x130>
    78c4:	48 8d 3d c5 28 01 00 	lea    0x128c5(%rip),%rdi        # 1a190 <_ZL14g_handler_lock>
    78cb:	4d 01 e7             	add    %r12,%r15
    78ce:	e8 dd 4e 00 00       	call   c7b0 <sgx_spin_unlock>
    78d3:	49 83 6d 78 01       	subq   $0x1,0x78(%r13)
    78d8:	eb 13                	jmp    78ed <internal_handle_exception+0x16d>
    78da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    78e0:	49 83 c4 08          	add    $0x8,%r12
    78e4:	4d 39 fc             	cmp    %r15,%r12
    78e7:	0f 84 e7 01 00 00    	je     7ad4 <internal_handle_exception+0x354>
    78ed:	49 8b 04 24          	mov    (%r12),%rax
    78f1:	48 89 df             	mov    %rbx,%rdi
    78f4:	48 33 05 8d 28 01 00 	xor    0x1288d(%rip),%rax        # 1a188 <_ZL12g_veh_cookie>
    78fb:	ff d0                	call   *%rax
    78fd:	83 f8 ff             	cmp    $0xffffffff,%eax
    7900:	75 de                	jne    78e0 <internal_handle_exception+0x160>
    7902:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    7906:	e8 55 fd ff ff       	call   7660 <is_valid_sp>
    790b:	84 c0                	test   %al,%al
    790d:	75 22                	jne    7931 <internal_handle_exception+0x1b1>
    790f:	90                   	nop
    7910:	49 c7 45 78 ff ff ff 	movq   $0xffffffffffffffff,0x78(%r13)
    7917:	ff 
    7918:	e8 1a ac 00 00       	call   12537 <abort>
    791d:	48 8d 3d 6c 28 01 00 	lea    0x1286c(%rip),%rdi        # 1a190 <_ZL14g_handler_lock>
    7924:	e8 87 4e 00 00       	call   c7b0 <sgx_spin_unlock>
    7929:	49 c7 45 78 ff ff ff 	movq   $0xffffffffffffffff,0x78(%r13)
    7930:	ff 
    7931:	83 bb ac 00 00 00 01 	cmpl   $0x1,0xac(%rbx)
    7938:	74 12                	je     794c <internal_handle_exception+0x1cc>
    793a:	4c 89 f7             	mov    %r14,%rdi
    793d:	e8 6f a3 00 00       	call   11cb1 <restore_xregs>
    7942:	48 89 df             	mov    %rbx,%rdi
    7945:	e8 00 ac 00 00       	call   1254a <continue_execution>
    794a:	eb c4                	jmp    7910 <internal_handle_exception+0x190>
    794c:	48 89 df             	mov    %rbx,%rdi
    794f:	e8 fc ed ff ff       	call   6750 <sgx_apply_mitigations>
    7954:	4c 89 f7             	mov    %r14,%rdi
    7957:	e8 55 a3 00 00       	call   11cb1 <restore_xregs>
    795c:	e8 e2 a7 00 00       	call   12143 <get_thread_data>
    7961:	49 89 c6             	mov    %rax,%r14
    7964:	48 8b 40 10          	mov    0x10(%rax),%rax
    7968:	49 89 c4             	mov    %rax,%r12
    796b:	49 81 e4 00 f0 ff ff 	and    $0xfffffffffffff000,%r12
    7972:	48 3d ff 0f 00 00    	cmp    $0xfff,%rax
    7978:	77 07                	ja     7981 <internal_handle_exception+0x201>
    797a:	4c 8d a0 00 f0 ff ff 	lea    -0x1000(%rax),%r12
    7981:	48 89 d8             	mov    %rbx,%rax
    7984:	49 8b 4e 18          	mov    0x18(%r14),%rcx
    7988:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    798e:	4c 39 e0             	cmp    %r12,%rax
    7991:	0f 84 93 01 00 00    	je     7b2a <internal_handle_exception+0x3aa>
    7997:	48 05 00 10 00 00    	add    $0x1000,%rax
    799d:	48 83 c8 01          	or     $0x1,%rax
    79a1:	49 89 c4             	mov    %rax,%r12
    79a4:	48 8b 83 88 00 00 00 	mov    0x88(%rbx),%rax
    79ab:	49 89 c7             	mov    %rax,%r15
    79ae:	48 c1 e8 0b          	shr    $0xb,%rax
    79b2:	48 89 c1             	mov    %rax,%rcx
    79b5:	49 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%r15
    79bc:	81 e1 fe 0f 00 00    	and    $0xffe,%ecx
    79c2:	48 03 0d 0f 06 01 00 	add    0x1060f(%rip),%rcx        # 17fd8 <_GLOBAL_OFFSET_TABLE_+0x30>
    79c9:	44 0f b7 09          	movzwl (%rcx),%r9d
    79cd:	4b 8d 14 39          	lea    (%r9,%r15,1),%rdx
    79d1:	80 3a c3             	cmpb   $0xc3,(%rdx)
    79d4:	74 3b                	je     7a11 <internal_handle_exception+0x291>
    79d6:	4d 89 f9             	mov    %r15,%r9
    79d9:	49 8d 87 00 10 00 00 	lea    0x1000(%r15),%rax
    79e0:	eb 13                	jmp    79f5 <internal_handle_exception+0x275>
    79e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    79e8:	49 83 c1 01          	add    $0x1,%r9
    79ec:	4c 39 c8             	cmp    %r9,%rax
    79ef:	0f 84 5f 01 00 00    	je     7b54 <internal_handle_exception+0x3d4>
    79f5:	41 80 39 c3          	cmpb   $0xc3,(%r9)
    79f9:	75 ed                	jne    79e8 <internal_handle_exception+0x268>
    79fb:	4c 39 c8             	cmp    %r9,%rax
    79fe:	0f 84 50 01 00 00    	je     7b54 <internal_handle_exception+0x3d4>
    7a04:	44 89 c8             	mov    %r9d,%eax
    7a07:	4c 89 ca             	mov    %r9,%rdx
    7a0a:	66 25 ff 0f          	and    $0xfff,%ax
    7a0e:	66 89 01             	mov    %ax,(%rcx)
    7a11:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
    7a15:	48 89 df             	mov    %rbx,%rdi
    7a18:	48 89 55 a0          	mov    %rdx,-0x60(%rbp)
    7a1c:	e8 3f ca ff ff       	call   4460 <ct_decode>
    7a21:	4d 89 e0             	mov    %r12,%r8
    7a24:	be 01 00 00 00       	mov    $0x1,%esi
    7a29:	49 83 e0 fe          	and    $0xfffffffffffffffe,%r8
    7a2d:	4c 63 c8             	movslq %eax,%r9
    7a30:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    7a34:	4c 89 c1             	mov    %r8,%rcx
    7a37:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
    7a3b:	49 83 f9 01          	cmp    $0x1,%r9
    7a3f:	48 0f 44 c8          	cmove  %rax,%rcx
    7a43:	49 83 f9 02          	cmp    $0x2,%r9
    7a47:	48 0f 44 c8          	cmove  %rax,%rcx
    7a4b:	48 89 cf             	mov    %rcx,%rdi
    7a4e:	4c 89 4d b0          	mov    %r9,-0x50(%rbp)
    7a52:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
    7a56:	e8 05 e1 ff ff       	call   5b60 <sgx_is_within_enclave>
    7a5b:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
    7a5f:	4c 8b 45 a8          	mov    -0x58(%rbp),%r8
    7a63:	85 c0                	test   %eax,%eax
    7a65:	4c 8b 4d b0          	mov    -0x50(%rbp),%r9
    7a69:	48 98                	cltq   
    7a6b:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
    7a6f:	4c 0f 45 c1          	cmovne %rcx,%r8
    7a73:	4c 89 f9             	mov    %r15,%rcx
    7a76:	48 83 c9 01          	or     $0x1,%rcx
    7a7a:	49 83 f9 02          	cmp    $0x2,%r9
    7a7e:	4c 0f 44 f9          	cmove  %rcx,%r15
    7a82:	4c 89 fe             	mov    %r15,%rsi
    7a85:	48 83 e6 fe          	and    $0xfffffffffffffffe,%rsi
    7a89:	48 83 f8 01          	cmp    $0x1,%rax
    7a8d:	49 0f 44 f7          	cmove  %r15,%rsi
    7a91:	41 83 ae bc 00 00 00 	subl   $0x1,0xbc(%r14)
    7a98:	01 
    7a99:	78 57                	js     7af2 <internal_handle_exception+0x372>
    7a9b:	41 8b 8e b8 00 00 00 	mov    0xb8(%r14),%ecx
    7aa2:	49 89 d1             	mov    %rdx,%r9
    7aa5:	48 89 df             	mov    %rbx,%rdi
    7aa8:	4c 89 e2             	mov    %r12,%rdx
    7aab:	89 c8                	mov    %ecx,%eax
    7aad:	c1 e1 04             	shl    $0x4,%ecx
    7ab0:	d1 e8                	shr    %eax
    7ab2:	83 e1 10             	and    $0x10,%ecx
    7ab5:	48 09 f1             	or     %rsi,%rcx
    7ab8:	41 89 86 b8 00 00 00 	mov    %eax,0xb8(%r14)
    7abf:	49 8b 76 20          	mov    0x20(%r14),%rsi
    7ac3:	48 81 c6 a7 00 00 00 	add    $0xa7,%rsi
    7aca:	e8 31 a3 00 00       	call   11e00 <constant_time_apply_sgxstep_mitigation_and_continue_execution>
    7acf:	e9 3c fe ff ff       	jmp    7910 <internal_handle_exception+0x190>
    7ad4:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    7ad8:	e8 83 fb ff ff       	call   7660 <is_valid_sp>
    7add:	84 c0                	test   %al,%al
    7adf:	0f 84 2b fe ff ff    	je     7910 <internal_handle_exception+0x190>
    7ae5:	49 c7 45 78 ff ff ff 	movq   $0xffffffffffffffff,0x78(%r13)
    7aec:	ff 
    7aed:	e9 3f fe ff ff       	jmp    7931 <internal_handle_exception+0x1b1>
    7af2:	49 8d be b8 00 00 00 	lea    0xb8(%r14),%rdi
    7af9:	48 89 75 a8          	mov    %rsi,-0x58(%rbp)
    7afd:	4c 89 45 b0          	mov    %r8,-0x50(%rbp)
    7b01:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    7b05:	e8 0a aa 00 00       	call   12514 <do_rdrand>
    7b0a:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    7b0e:	4c 8b 45 b0          	mov    -0x50(%rbp),%r8
    7b12:	85 c0                	test   %eax,%eax
    7b14:	48 8b 75 a8          	mov    -0x58(%rbp),%rsi
    7b18:	74 46                	je     7b60 <internal_handle_exception+0x3e0>
    7b1a:	41 c7 86 bc 00 00 00 	movl   $0x1f,0xbc(%r14)
    7b21:	1f 00 00 00 
    7b25:	e9 71 ff ff ff       	jmp    7a9b <internal_handle_exception+0x31b>
    7b2a:	48 81 e1 00 f0 ff ff 	and    $0xfffffffffffff000,%rcx
    7b31:	4c 39 e1             	cmp    %r12,%rcx
    7b34:	0f 84 6a fe ff ff    	je     79a4 <internal_handle_exception+0x224>
    7b3a:	49 83 cc 01          	or     $0x1,%r12
    7b3e:	e9 61 fe ff ff       	jmp    79a4 <internal_handle_exception+0x224>
    7b43:	48 8d 3d 46 26 01 00 	lea    0x12646(%rip),%rdi        # 1a190 <_ZL14g_handler_lock>
    7b4a:	e8 61 4c 00 00       	call   c7b0 <sgx_spin_unlock>
    7b4f:	e9 bc fd ff ff       	jmp    7910 <internal_handle_exception+0x190>
    7b54:	48 8d 15 9c a5 00 00 	lea    0xa59c(%rip),%rdx        # 120f7 <__ct_mitigation_ret>
    7b5b:	e9 b1 fe ff ff       	jmp    7a11 <internal_handle_exception+0x291>
    7b60:	49 c7 46 78 ff ff ff 	movq   $0xffffffffffffffff,0x78(%r14)
    7b67:	ff 
    7b68:	e8 ca a9 00 00       	call   12537 <abort>
    7b6d:	0f 1f 00             	nopl   (%rax)

0000000000007b70 <sgx_register_exception_handler>:
    7b70:	f3 0f 1e fa          	endbr64 
    7b74:	41 55                	push   %r13
    7b76:	41 54                	push   %r12
    7b78:	41 89 fc             	mov    %edi,%r12d
    7b7b:	55                   	push   %rbp
    7b7c:	48 89 f5             	mov    %rsi,%rbp
    7b7f:	53                   	push   %rbx
    7b80:	48 83 ec 18          	sub    $0x18,%rsp
    7b84:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    7b8b:	00 00 
    7b8d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    7b92:	31 c0                	xor    %eax,%eax
    7b94:	48 83 3d ec 25 01 00 	cmpq   $0x0,0x125ec(%rip)        # 1a188 <_ZL12g_veh_cookie>
    7b9b:	00 
    7b9c:	0f 84 ae 00 00 00    	je     7c50 <sgx_register_exception_handler+0xe0>
    7ba2:	31 f6                	xor    %esi,%esi
    7ba4:	48 89 ef             	mov    %rbp,%rdi
    7ba7:	e8 b4 df ff ff       	call   5b60 <sgx_is_within_enclave>
    7bac:	85 c0                	test   %eax,%eax
    7bae:	0f 84 cc 00 00 00    	je     7c80 <sgx_register_exception_handler+0x110>
    7bb4:	bf 10 00 00 00       	mov    $0x10,%edi
    7bb9:	e8 22 55 00 00       	call   d0e0 <dlmalloc>
    7bbe:	48 89 c3             	mov    %rax,%rbx
    7bc1:	48 85 c0             	test   %rax,%rax
    7bc4:	0f 84 b6 00 00 00    	je     7c80 <sgx_register_exception_handler+0x110>
    7bca:	48 33 2d b7 25 01 00 	xor    0x125b7(%rip),%rbp        # 1a188 <_ZL12g_veh_cookie>
    7bd1:	4c 8d 2d b8 25 01 00 	lea    0x125b8(%rip),%r13        # 1a190 <_ZL14g_handler_lock>
    7bd8:	48 89 28             	mov    %rbp,(%rax)
    7bdb:	4c 89 ef             	mov    %r13,%rdi
    7bde:	e8 3d 4b 00 00       	call   c720 <sgx_spin_lock>
    7be3:	48 8b 15 ae 25 01 00 	mov    0x125ae(%rip),%rdx        # 1a198 <_ZL12g_first_node>
    7bea:	45 85 e4             	test   %r12d,%r12d
    7bed:	75 29                	jne    7c18 <sgx_register_exception_handler+0xa8>
    7bef:	48 85 d2             	test   %rdx,%rdx
    7bf2:	74 24                	je     7c18 <sgx_register_exception_handler+0xa8>
    7bf4:	0f 1f 40 00          	nopl   0x0(%rax)
    7bf8:	48 89 d0             	mov    %rdx,%rax
    7bfb:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    7bff:	48 85 d2             	test   %rdx,%rdx
    7c02:	75 f4                	jne    7bf8 <sgx_register_exception_handler+0x88>
    7c04:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
    7c0b:	00 
    7c0c:	48 89 58 08          	mov    %rbx,0x8(%rax)
    7c10:	eb 11                	jmp    7c23 <sgx_register_exception_handler+0xb3>
    7c12:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7c18:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    7c1c:	48 89 1d 75 25 01 00 	mov    %rbx,0x12575(%rip)        # 1a198 <_ZL12g_first_node>
    7c23:	4c 89 ef             	mov    %r13,%rdi
    7c26:	e8 85 4b 00 00       	call   c7b0 <sgx_spin_unlock>
    7c2b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    7c30:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    7c37:	00 00 
    7c39:	75 7e                	jne    7cb9 <sgx_register_exception_handler+0x149>
    7c3b:	48 83 c4 18          	add    $0x18,%rsp
    7c3f:	48 89 d8             	mov    %rbx,%rax
    7c42:	5b                   	pop    %rbx
    7c43:	5d                   	pop    %rbp
    7c44:	41 5c                	pop    %r12
    7c46:	41 5d                	pop    %r13
    7c48:	c3                   	ret    
    7c49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7c50:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    7c57:	00 
    7c58:	48 89 e3             	mov    %rsp,%rbx
    7c5b:	eb 0a                	jmp    7c67 <sgx_register_exception_handler+0xf7>
    7c5d:	0f 1f 00             	nopl   (%rax)
    7c60:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
    7c65:	75 21                	jne    7c88 <sgx_register_exception_handler+0x118>
    7c67:	be 08 00 00 00       	mov    $0x8,%esi
    7c6c:	48 89 df             	mov    %rbx,%rdi
    7c6f:	e8 ec e0 ff ff       	call   5d60 <sgx_read_rand>
    7c74:	85 c0                	test   %eax,%eax
    7c76:	74 e8                	je     7c60 <sgx_register_exception_handler+0xf0>
    7c78:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    7c7f:	00 
    7c80:	31 db                	xor    %ebx,%ebx
    7c82:	eb a7                	jmp    7c2b <sgx_register_exception_handler+0xbb>
    7c84:	0f 1f 40 00          	nopl   0x0(%rax)
    7c88:	4c 8d 2d 01 25 01 00 	lea    0x12501(%rip),%r13        # 1a190 <_ZL14g_handler_lock>
    7c8f:	4c 89 ef             	mov    %r13,%rdi
    7c92:	e8 89 4a 00 00       	call   c720 <sgx_spin_lock>
    7c97:	48 83 3d e9 24 01 00 	cmpq   $0x0,0x124e9(%rip)        # 1a188 <_ZL12g_veh_cookie>
    7c9e:	00 
    7c9f:	75 0b                	jne    7cac <sgx_register_exception_handler+0x13c>
    7ca1:	48 8b 04 24          	mov    (%rsp),%rax
    7ca5:	48 89 05 dc 24 01 00 	mov    %rax,0x124dc(%rip)        # 1a188 <_ZL12g_veh_cookie>
    7cac:	4c 89 ef             	mov    %r13,%rdi
    7caf:	e8 fc 4a 00 00       	call   c7b0 <sgx_spin_unlock>
    7cb4:	e9 e9 fe ff ff       	jmp    7ba2 <sgx_register_exception_handler+0x32>
    7cb9:	e8 e2 8c 00 00       	call   109a0 <__stack_chk_fail>
    7cbe:	66 90                	xchg   %ax,%ax

0000000000007cc0 <sgx_unregister_exception_handler>:
    7cc0:	f3 0f 1e fa          	endbr64 
    7cc4:	48 85 ff             	test   %rdi,%rdi
    7cc7:	0f 84 9b 00 00 00    	je     7d68 <sgx_unregister_exception_handler+0xa8>
    7ccd:	55                   	push   %rbp
    7cce:	48 8d 2d bb 24 01 00 	lea    0x124bb(%rip),%rbp        # 1a190 <_ZL14g_handler_lock>
    7cd5:	53                   	push   %rbx
    7cd6:	48 89 fb             	mov    %rdi,%rbx
    7cd9:	48 89 ef             	mov    %rbp,%rdi
    7cdc:	48 83 ec 08          	sub    $0x8,%rsp
    7ce0:	e8 3b 4a 00 00       	call   c720 <sgx_spin_lock>
    7ce5:	48 8b 05 ac 24 01 00 	mov    0x124ac(%rip),%rax        # 1a198 <_ZL12g_first_node>
    7cec:	48 85 c0             	test   %rax,%rax
    7cef:	74 20                	je     7d11 <sgx_unregister_exception_handler+0x51>
    7cf1:	48 39 d8             	cmp    %rbx,%rax
    7cf4:	75 0f                	jne    7d05 <sgx_unregister_exception_handler+0x45>
    7cf6:	eb 58                	jmp    7d50 <sgx_unregister_exception_handler+0x90>
    7cf8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    7cff:	00 
    7d00:	48 39 d8             	cmp    %rbx,%rax
    7d03:	74 23                	je     7d28 <sgx_unregister_exception_handler+0x68>
    7d05:	48 89 c2             	mov    %rax,%rdx
    7d08:	48 8b 40 08          	mov    0x8(%rax),%rax
    7d0c:	48 85 c0             	test   %rax,%rax
    7d0f:	75 ef                	jne    7d00 <sgx_unregister_exception_handler+0x40>
    7d11:	48 89 ef             	mov    %rbp,%rdi
    7d14:	e8 97 4a 00 00       	call   c7b0 <sgx_spin_unlock>
    7d19:	48 83 c4 08          	add    $0x8,%rsp
    7d1d:	31 c0                	xor    %eax,%eax
    7d1f:	5b                   	pop    %rbx
    7d20:	5d                   	pop    %rbp
    7d21:	c3                   	ret    
    7d22:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7d28:	48 8b 43 08          	mov    0x8(%rbx),%rax
    7d2c:	48 89 ef             	mov    %rbp,%rdi
    7d2f:	48 89 42 08          	mov    %rax,0x8(%rdx)
    7d33:	e8 78 4a 00 00       	call   c7b0 <sgx_spin_unlock>
    7d38:	48 89 df             	mov    %rbx,%rdi
    7d3b:	e8 90 71 00 00       	call   eed0 <dlfree>
    7d40:	48 83 c4 08          	add    $0x8,%rsp
    7d44:	b8 01 00 00 00       	mov    $0x1,%eax
    7d49:	5b                   	pop    %rbx
    7d4a:	5d                   	pop    %rbp
    7d4b:	c3                   	ret    
    7d4c:	0f 1f 40 00          	nopl   0x0(%rax)
    7d50:	48 8b 43 08          	mov    0x8(%rbx),%rax
    7d54:	48 89 ef             	mov    %rbp,%rdi
    7d57:	48 89 05 3a 24 01 00 	mov    %rax,0x1243a(%rip)        # 1a198 <_ZL12g_first_node>
    7d5e:	e8 4d 4a 00 00       	call   c7b0 <sgx_spin_unlock>
    7d63:	eb d3                	jmp    7d38 <sgx_unregister_exception_handler+0x78>
    7d65:	0f 1f 00             	nopl   (%rax)
    7d68:	31 c0                	xor    %eax,%eax
    7d6a:	c3                   	ret    
    7d6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000007d70 <trts_handle_exception>:
    7d70:	f3 0f 1e fa          	endbr64 
    7d74:	41 57                	push   %r15
    7d76:	41 56                	push   %r14
    7d78:	41 55                	push   %r13
    7d7a:	41 54                	push   %r12
    7d7c:	55                   	push   %rbp
    7d7d:	53                   	push   %rbx
    7d7e:	48 89 fb             	mov    %rdi,%rbx
    7d81:	48 83 ec 08          	sub    $0x8,%rsp
    7d85:	e8 b9 a3 00 00       	call   12143 <get_thread_data>
    7d8a:	48 85 c0             	test   %rax,%rax
    7d8d:	48 89 c5             	mov    %rax,%rbp
    7d90:	0f 94 c2             	sete   %dl
    7d93:	48 85 db             	test   %rbx,%rbx
    7d96:	0f 94 c0             	sete   %al
    7d99:	08 c2                	or     %al,%dl
    7d9b:	75 33                	jne    7dd0 <trts_handle_exception+0x60>
    7d9d:	48 89 df             	mov    %rbx,%rdi
    7da0:	41 89 d4             	mov    %edx,%r12d
    7da3:	e8 e8 e0 ff ff       	call   5e90 <check_static_stack_canary>
    7da8:	85 c0                	test   %eax,%eax
    7daa:	75 24                	jne    7dd0 <trts_handle_exception+0x60>
    7dac:	e8 53 a3 00 00       	call   12104 <get_enclave_state>
    7db1:	83 f8 02             	cmp    $0x2,%eax
    7db4:	75 1a                	jne    7dd0 <trts_handle_exception+0x60>
    7db6:	48 83 7d 78 ff       	cmpq   $0xffffffffffffffff,0x78(%rbp)
    7dbb:	74 13                	je     7dd0 <trts_handle_exception+0x60>
    7dbd:	48 8b 45 10          	mov    0x10(%rbp),%rax
    7dc1:	48 05 00 04 01 00    	add    $0x10400,%rax
    7dc7:	48 39 c3             	cmp    %rax,%rbx
    7dca:	74 24                	je     7df0 <trts_handle_exception+0x80>
    7dcc:	0f 1f 40 00          	nopl   0x0(%rax)
    7dd0:	bf 03 00 00 00       	mov    $0x3,%edi
    7dd5:	e8 3b a3 00 00       	call   12115 <set_enclave_state>
    7dda:	b8 06 10 00 00       	mov    $0x1006,%eax
    7ddf:	48 83 c4 08          	add    $0x8,%rsp
    7de3:	5b                   	pop    %rbx
    7de4:	5d                   	pop    %rbp
    7de5:	41 5c                	pop    %r12
    7de7:	41 5d                	pop    %r13
    7de9:	41 5e                	pop    %r14
    7deb:	41 5f                	pop    %r15
    7ded:	c3                   	ret    
    7dee:	66 90                	xchg   %ax,%ax
    7df0:	4c 8b 6d 20          	mov    0x20(%rbp),%r13
    7df4:	e8 37 f9 ff ff       	call   7730 <get_xsave_size>
    7df9:	48 05 b7 10 00 00    	add    $0x10b7,%rax
    7dff:	49 81 e5 00 f0 ff ff 	and    $0xfffffffffffff000,%r13
    7e06:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    7e0c:	49 29 c5             	sub    %rax,%r13
    7e0f:	4c 39 eb             	cmp    %r13,%rbx
    7e12:	75 bc                	jne    7dd0 <trts_handle_exception+0x60>
    7e14:	4c 8b 6d 20          	mov    0x20(%rbp),%r13
    7e18:	be 08 00 00 00       	mov    $0x8,%esi
    7e1d:	4d 8b b5 90 00 00 00 	mov    0x90(%r13),%r14
    7e24:	4c 89 f7             	mov    %r14,%rdi
    7e27:	e8 94 dd ff ff       	call   5bc0 <sgx_is_outside_enclave>
    7e2c:	85 c0                	test   %eax,%eax
    7e2e:	0f 84 ec 01 00 00    	je     8020 <trts_handle_exception+0x2b0>
    7e34:	49 8b 5d 20          	mov    0x20(%r13),%rbx
    7e38:	49 39 de             	cmp    %rbx,%r14
    7e3b:	0f 84 df 01 00 00    	je     8020 <trts_handle_exception+0x2b0>
    7e41:	31 f6                	xor    %esi,%esi
    7e43:	48 89 df             	mov    %rbx,%rdi
    7e46:	e8 d5 f7 ff ff       	call   7620 <is_stack_addr>
    7e4b:	84 c0                	test   %al,%al
    7e4d:	0f 84 cd 01 00 00    	je     8020 <trts_handle_exception+0x2b0>
    7e53:	48 8b 45 38          	mov    0x38(%rbp),%rax
    7e57:	48 8d b0 b8 01 00 00 	lea    0x1b8(%rax),%rsi
    7e5e:	48 29 f3             	sub    %rsi,%rbx
    7e61:	48 83 e3 c0          	and    $0xffffffffffffffc0,%rbx
    7e65:	48 89 df             	mov    %rbx,%rdi
    7e68:	e8 b3 f7 ff ff       	call   7620 <is_stack_addr>
    7e6d:	84 c0                	test   %al,%al
    7e6f:	0f 84 ab 01 00 00    	je     8020 <trts_handle_exception+0x2b0>
    7e75:	4c 8d 7b f8          	lea    -0x8(%rbx),%r15
    7e79:	be 08 00 00 00       	mov    $0x8,%esi
    7e7e:	4c 89 ff             	mov    %r15,%rdi
    7e81:	e8 9a f7 ff ff       	call   7620 <is_stack_addr>
    7e86:	41 89 c6             	mov    %eax,%r14d
    7e89:	84 c0                	test   %al,%al
    7e8b:	0f 84 8f 01 00 00    	je     8020 <trts_handle_exception+0x2b0>
    7e91:	48 8b bd b0 00 00 00 	mov    0xb0(%rbp),%rdi
    7e98:	49 39 ff             	cmp    %rdi,%r15
    7e9b:	0f 83 93 01 00 00    	jae    8034 <trts_handle_exception+0x2c4>
    7ea1:	4c 8d a7 ff 0f 00 00 	lea    0xfff(%rdi),%r12
    7ea8:	4d 29 fc             	sub    %r15,%r12
    7eab:	49 81 e4 00 f0 ff ff 	and    $0xfffffffffffff000,%r12
    7eb2:	49 39 fc             	cmp    %rdi,%r12
    7eb5:	0f 83 65 01 00 00    	jae    8020 <trts_handle_exception+0x2b0>
    7ebb:	4c 29 e7             	sub    %r12,%rdi
    7ebe:	48 3b 7d 18          	cmp    0x18(%rbp),%rdi
    7ec2:	0f 82 58 01 00 00    	jb     8020 <trts_handle_exception+0x2b0>
    7ec8:	4d 85 e4             	test   %r12,%r12
    7ecb:	0f 84 4f 01 00 00    	je     8020 <trts_handle_exception+0x2b0>
    7ed1:	4c 89 e6             	mov    %r12,%rsi
    7ed4:	e8 97 3a 00 00       	call   b970 <mm_commit>
    7ed9:	85 c0                	test   %eax,%eax
    7edb:	0f 85 3f 01 00 00    	jne    8020 <trts_handle_exception+0x2b0>
    7ee1:	48 8d 05 1c ff 00 00 	lea    0xff1c(%rip),%rax        # 17e04 <g_aexnotify_supported>
    7ee8:	4c 29 a5 b0 00 00 00 	sub    %r12,0xb0(%rbp)
    7eef:	45 89 f4             	mov    %r14d,%r12d
    7ef2:	8b 08                	mov    (%rax),%ecx
    7ef4:	31 c0                	xor    %eax,%eax
    7ef6:	89 83 a8 00 00 00    	mov    %eax,0xa8(%rbx)
    7efc:	41 0f b6 85 a0 00 00 	movzbl 0xa0(%r13),%eax
    7f03:	00 
    7f04:	89 83 90 00 00 00    	mov    %eax,0x90(%rbx)
    7f0a:	41 0f b6 95 a1 00 00 	movzbl 0xa1(%r13),%edx
    7f11:	00 
    7f12:	83 e8 0d             	sub    $0xd,%eax
    7f15:	83 e2 07             	and    $0x7,%edx
    7f18:	89 93 94 00 00 00    	mov    %edx,0x94(%rbx)
    7f1e:	48 8b 55 38          	mov    0x38(%rbp),%rdx
    7f22:	48 89 93 b0 00 00 00 	mov    %rdx,0xb0(%rbx)
    7f29:	49 8b 55 00          	mov    0x0(%r13),%rdx
    7f2d:	48 89 13             	mov    %rdx,(%rbx)
    7f30:	49 8b 55 08          	mov    0x8(%r13),%rdx
    7f34:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    7f38:	49 8b 55 10          	mov    0x10(%r13),%rdx
    7f3c:	48 89 53 10          	mov    %rdx,0x10(%rbx)
    7f40:	49 8b 55 18          	mov    0x18(%r13),%rdx
    7f44:	48 89 53 18          	mov    %rdx,0x18(%rbx)
    7f48:	49 8b 55 20          	mov    0x20(%r13),%rdx
    7f4c:	48 89 53 20          	mov    %rdx,0x20(%rbx)
    7f50:	49 8b 55 28          	mov    0x28(%r13),%rdx
    7f54:	48 89 53 28          	mov    %rdx,0x28(%rbx)
    7f58:	49 8b 55 30          	mov    0x30(%r13),%rdx
    7f5c:	48 89 53 30          	mov    %rdx,0x30(%rbx)
    7f60:	49 8b 55 38          	mov    0x38(%r13),%rdx
    7f64:	48 89 53 38          	mov    %rdx,0x38(%rbx)
    7f68:	49 8b 95 80 00 00 00 	mov    0x80(%r13),%rdx
    7f6f:	48 89 93 80 00 00 00 	mov    %rdx,0x80(%rbx)
    7f76:	49 8b 95 88 00 00 00 	mov    0x88(%r13),%rdx
    7f7d:	48 89 93 88 00 00 00 	mov    %rdx,0x88(%rbx)
    7f84:	49 8b 75 40          	mov    0x40(%r13),%rsi
    7f88:	48 89 73 40          	mov    %rsi,0x40(%rbx)
    7f8c:	49 8b 75 48          	mov    0x48(%r13),%rsi
    7f90:	48 89 73 48          	mov    %rsi,0x48(%rbx)
    7f94:	49 8b 75 50          	mov    0x50(%r13),%rsi
    7f98:	48 89 73 50          	mov    %rsi,0x50(%rbx)
    7f9c:	49 8b 75 58          	mov    0x58(%r13),%rsi
    7fa0:	48 89 73 58          	mov    %rsi,0x58(%rbx)
    7fa4:	49 8b 75 60          	mov    0x60(%r13),%rsi
    7fa8:	48 89 73 60          	mov    %rsi,0x60(%rbx)
    7fac:	49 8b 75 68          	mov    0x68(%r13),%rsi
    7fb0:	48 89 73 68          	mov    %rsi,0x68(%rbx)
    7fb4:	49 8b 75 70          	mov    0x70(%r13),%rsi
    7fb8:	48 89 73 70          	mov    %rsi,0x70(%rbx)
    7fbc:	49 8b 75 78          	mov    0x78(%r13),%rsi
    7fc0:	48 89 73 78          	mov    %rsi,0x78(%rbx)
    7fc4:	83 f8 01             	cmp    $0x1,%eax
    7fc7:	77 15                	ja     7fde <trts_handle_exception+0x26e>
    7fc9:	49 8b 45 f0          	mov    -0x10(%r13),%rax
    7fcd:	48 89 83 98 00 00 00 	mov    %rax,0x98(%rbx)
    7fd4:	41 8b 45 f8          	mov    -0x8(%r13),%eax
    7fd8:	89 83 a0 00 00 00    	mov    %eax,0xa0(%rbx)
    7fde:	85 c9                	test   %ecx,%ecx
    7fe0:	0f 85 99 00 00 00    	jne    807f <trts_handle_exception+0x30f>
    7fe6:	45 84 e4             	test   %r12b,%r12b
    7fe9:	0f 85 ec 00 00 00    	jne    80db <trts_handle_exception+0x36b>
    7fef:	48 8d 05 8a f7 ff ff 	lea    -0x876(%rip),%rax        # 7780 <internal_handle_exception>
    7ff6:	4d 89 7d 20          	mov    %r15,0x20(%r13)
    7ffa:	49 89 85 88 00 00 00 	mov    %rax,0x88(%r13)
    8001:	49 89 5d 00          	mov    %rbx,0x0(%r13)
    8005:	49 89 5d 38          	mov    %rbx,0x38(%r13)
    8009:	48 8b 83 88 00 00 00 	mov    0x88(%rbx),%rax
    8010:	48 89 43 f8          	mov    %rax,-0x8(%rbx)
    8014:	31 c0                	xor    %eax,%eax
    8016:	e9 c4 fd ff ff       	jmp    7ddf <trts_handle_exception+0x6f>
    801b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8020:	bf 03 00 00 00       	mov    $0x3,%edi
    8025:	e8 eb a0 00 00       	call   12115 <set_enclave_state>
    802a:	b8 09 10 00 00       	mov    $0x1009,%eax
    802f:	e9 ab fd ff ff       	jmp    7ddf <trts_handle_exception+0x6f>
    8034:	48 8d 15 c9 fd 00 00 	lea    0xfdc9(%rip),%rdx        # 17e04 <g_aexnotify_supported>
    803b:	49 8b 85 88 00 00 00 	mov    0x88(%r13),%rax
    8042:	48 3b 05 87 ff 00 00 	cmp    0xff87(%rip),%rax        # 17fd0 <_GLOBAL_OFFSET_TABLE_+0x28>
    8049:	8b 0a                	mov    (%rdx),%ecx
    804b:	74 6a                	je     80b7 <trts_handle_exception+0x347>
    804d:	48 3b 05 74 ff 00 00 	cmp    0xff74(%rip),%rax        # 17fc8 <_GLOBAL_OFFSET_TABLE_+0x20>
    8054:	0f 84 8c 00 00 00    	je     80e6 <trts_handle_exception+0x376>
    805a:	85 c9                	test   %ecx,%ecx
    805c:	75 0e                	jne    806c <trts_handle_exception+0x2fc>
    805e:	41 80 bd a3 00 00 00 	cmpb   $0x0,0xa3(%r13)
    8065:	00 
    8066:	0f 89 64 fd ff ff    	jns    7dd0 <trts_handle_exception+0x60>
    806c:	41 0f b6 85 a3 00 00 	movzbl 0xa3(%r13),%eax
    8073:	00 
    8074:	c0 e8 07             	shr    $0x7,%al
    8077:	0f b6 c0             	movzbl %al,%eax
    807a:	e9 77 fe ff ff       	jmp    7ef6 <trts_handle_exception+0x186>
    807f:	48 89 53 f8          	mov    %rdx,-0x8(%rbx)
    8083:	e8 c8 f6 ff ff       	call   7750 <get_ssa_aexnotify>
    8088:	48 8b 7d 58          	mov    0x58(%rbp),%rdi
    808c:	89 83 ac 00 00 00    	mov    %eax,0xac(%rbx)
    8092:	e8 1a 9c 00 00       	call   11cb1 <restore_xregs>
    8097:	83 bb ac 00 00 00 01 	cmpl   $0x1,0xac(%rbx)
    809e:	74 76                	je     8116 <trts_handle_exception+0x3a6>
    80a0:	48 8d 15 d9 f6 ff ff 	lea    -0x927(%rip),%rdx        # 7780 <internal_handle_exception>
    80a7:	4c 89 fe             	mov    %r15,%rsi
    80aa:	48 89 df             	mov    %rbx,%rdi
    80ad:	e8 fe a4 00 00       	call   125b0 <second_phase>
    80b2:	e9 19 fd ff ff       	jmp    7dd0 <trts_handle_exception+0x60>
    80b7:	49 83 7d 00 00       	cmpq   $0x0,0x0(%r13)
    80bc:	75 8f                	jne    804d <trts_handle_exception+0x2dd>
    80be:	48 83 c0 03          	add    $0x3,%rax
    80c2:	49 83 8d 80 00 00 00 	orq    $0x1,0x80(%r13)
    80c9:	01 
    80ca:	45 89 f4             	mov    %r14d,%r12d
    80cd:	49 89 85 88 00 00 00 	mov    %rax,0x88(%r13)
    80d4:	31 c0                	xor    %eax,%eax
    80d6:	e9 1b fe ff ff       	jmp    7ef6 <trts_handle_exception+0x186>
    80db:	48 89 53 f8          	mov    %rdx,-0x8(%rbx)
    80df:	31 c0                	xor    %eax,%eax
    80e1:	e9 f9 fc ff ff       	jmp    7ddf <trts_handle_exception+0x6f>
    80e6:	49 83 7d 00 08       	cmpq   $0x8,0x0(%r13)
    80eb:	0f 85 69 ff ff ff    	jne    805a <trts_handle_exception+0x2ea>
    80f1:	48 83 c0 03          	add    $0x3,%rax
    80f5:	49 83 8d 80 00 00 00 	orq    $0x40,0x80(%r13)
    80fc:	40 
    80fd:	45 89 f4             	mov    %r14d,%r12d
    8100:	49 89 85 88 00 00 00 	mov    %rax,0x88(%r13)
    8107:	31 c0                	xor    %eax,%eax
    8109:	49 c7 45 00 01 00 00 	movq   $0x1,0x0(%r13)
    8110:	00 
    8111:	e9 e0 fd ff ff       	jmp    7ef6 <trts_handle_exception+0x186>
    8116:	31 ff                	xor    %edi,%edi
    8118:	e8 e3 e3 ff ff       	call   6500 <sgx_set_ssa_aexnotify>
    811d:	eb 81                	jmp    80a0 <trts_handle_exception+0x330>
    811f:	90                   	nop

0000000000008120 <get_xfeature_state>:
    8120:	f3 0f 1e fa          	endbr64 
    8124:	48 83 ec 08          	sub    $0x8,%rsp
    8128:	e8 d3 92 00 00       	call   11400 <sgx_self_report>
    812d:	31 d2                	xor    %edx,%edx
    812f:	48 8b 40 38          	mov    0x38(%rax),%rax
    8133:	48 83 f8 03          	cmp    $0x3,%rax
    8137:	0f 95 c2             	setne  %dl
    813a:	89 15 04 20 01 00    	mov    %edx,0x12004(%rip)        # 1a144 <g_xsave_enabled>
    8140:	48 83 c4 08          	add    $0x8,%rsp
    8144:	c3                   	ret    
    8145:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    814c:	00 00 00 
    814f:	90                   	nop

0000000000008150 <has_text_relo>:
    8150:	85 d2                	test   %edx,%edx
    8152:	74 5b                	je     81af <has_text_relo+0x5f>
    8154:	89 d2                	mov    %edx,%edx
    8156:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax
    815d:	00 
    815e:	48 29 d0             	sub    %rdx,%rax
    8161:	48 8d 04 c6          	lea    (%rsi,%rax,8),%rax
    8165:	eb 12                	jmp    8179 <has_text_relo+0x29>
    8167:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    816e:	00 00 
    8170:	48 83 c6 38          	add    $0x38,%rsi
    8174:	48 39 c6             	cmp    %rax,%rsi
    8177:	74 36                	je     81af <has_text_relo+0x5f>
    8179:	83 3e 02             	cmpl   $0x2,(%rsi)
    817c:	75 f2                	jne    8170 <has_text_relo+0x20>
    817e:	48 8b 56 20          	mov    0x20(%rsi),%rdx
    8182:	48 03 7e 18          	add    0x18(%rsi),%rdi
    8186:	48 c1 ea 04          	shr    $0x4,%rdx
    818a:	74 23                	je     81af <has_text_relo+0x5f>
    818c:	48 c1 e2 04          	shl    $0x4,%rdx
    8190:	48 01 fa             	add    %rdi,%rdx
    8193:	eb 12                	jmp    81a7 <has_text_relo+0x57>
    8195:	0f 1f 00             	nopl   (%rax)
    8198:	48 83 f8 16          	cmp    $0x16,%rax
    819c:	74 1a                	je     81b8 <has_text_relo+0x68>
    819e:	48 83 c7 10          	add    $0x10,%rdi
    81a2:	48 39 fa             	cmp    %rdi,%rdx
    81a5:	74 08                	je     81af <has_text_relo+0x5f>
    81a7:	48 8b 07             	mov    (%rdi),%rax
    81aa:	48 85 c0             	test   %rax,%rax
    81ad:	75 e9                	jne    8198 <has_text_relo+0x48>
    81af:	31 c0                	xor    %eax,%eax
    81b1:	c3                   	ret    
    81b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    81b8:	b8 01 00 00 00       	mov    $0x1,%eax
    81bd:	c3                   	ret    
    81be:	66 90                	xchg   %ax,%ax

00000000000081c0 <do_relocs>:
    81c0:	49 89 d3             	mov    %rdx,%r11
    81c3:	48 8d 14 37          	lea    (%rdi,%rsi,1),%rdx
    81c7:	49 01 fb             	add    %rdi,%r11
    81ca:	48 85 c9             	test   %rcx,%rcx
    81cd:	0f 84 c2 01 00 00    	je     8395 <do_relocs+0x1d5>
    81d3:	55                   	push   %rbp
    81d4:	49 89 c9             	mov    %rcx,%r9
    81d7:	31 f6                	xor    %esi,%esi
    81d9:	4c 8d 05 50 af 00 00 	lea    0xaf50(%rip),%r8        # 13130 <g_dyn_entry_table+0xa0>
    81e0:	53                   	push   %rbx
    81e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    81e8:	4c 8b 12             	mov    (%rdx),%r10
    81eb:	48 8b 42 08          	mov    0x8(%rdx),%rax
    81ef:	49 01 fa             	add    %rdi,%r10
    81f2:	89 c1                	mov    %eax,%ecx
    81f4:	83 f8 12             	cmp    $0x12,%eax
    81f7:	0f 87 85 00 00 00    	ja     8282 <do_relocs+0xc2>
    81fd:	49 63 0c 88          	movslq (%r8,%rcx,4),%rcx
    8201:	4c 01 c1             	add    %r8,%rcx
    8204:	3e ff e1             	notrack jmp *%rcx
    8207:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    820e:	00 00 
    8210:	48 c1 e8 20          	shr    $0x20,%rax
    8214:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
    8218:	49 8d 1c c3          	lea    (%r11,%rax,8),%rbx
    821c:	0f b6 43 04          	movzbl 0x4(%rbx),%eax
    8220:	c0 e8 04             	shr    $0x4,%al
    8223:	3c 02                	cmp    $0x2,%al
    8225:	0f 84 05 01 00 00    	je     8330 <do_relocs+0x170>
    822b:	48 85 db             	test   %rbx,%rbx
    822e:	0f 84 8c 00 00 00    	je     82c0 <do_relocs+0x100>
    8234:	48 85 ff             	test   %rdi,%rdi
    8237:	74 49                	je     8282 <do_relocs+0xc2>
    8239:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    823f:	75 41                	jne    8282 <do_relocs+0xc2>
    8241:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    8246:	75 3a                	jne    8282 <do_relocs+0xc2>
    8248:	48 89 f8             	mov    %rdi,%rax
    824b:	48 03 47 20          	add    0x20(%rdi),%rax
    824f:	74 31                	je     8282 <do_relocs+0xc2>
    8251:	0f b7 6f 38          	movzwl 0x38(%rdi),%ebp
    8255:	66 85 ed             	test   %bp,%bp
    8258:	74 28                	je     8282 <do_relocs+0xc2>
    825a:	83 ed 01             	sub    $0x1,%ebp
    825d:	48 8d 0c ed 00 00 00 	lea    0x0(,%rbp,8),%rcx
    8264:	00 
    8265:	48 29 e9             	sub    %rbp,%rcx
    8268:	48 8d 4c c8 38       	lea    0x38(%rax,%rcx,8),%rcx
    826d:	0f 1f 00             	nopl   (%rax)
    8270:	83 38 07             	cmpl   $0x7,(%rax)
    8273:	0f 84 e7 00 00 00    	je     8360 <do_relocs+0x1a0>
    8279:	48 83 c0 38          	add    $0x38,%rax
    827d:	48 39 c8             	cmp    %rcx,%rax
    8280:	75 ee                	jne    8270 <do_relocs+0xb0>
    8282:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8287:	5b                   	pop    %rbx
    8288:	5d                   	pop    %rbp
    8289:	c3                   	ret    
    828a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8290:	48 c1 e8 20          	shr    $0x20,%rax
    8294:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
    8298:	49 8d 0c c3          	lea    (%r11,%rax,8),%rcx
    829c:	0f b6 41 04          	movzbl 0x4(%rcx),%eax
    82a0:	c0 e8 04             	shr    $0x4,%al
    82a3:	3c 02                	cmp    $0x2,%al
    82a5:	0f 84 95 00 00 00    	je     8340 <do_relocs+0x180>
    82ab:	48 85 c9             	test   %rcx,%rcx
    82ae:	74 10                	je     82c0 <do_relocs+0x100>
    82b0:	48 8b 42 10          	mov    0x10(%rdx),%rax
    82b4:	48 01 f8             	add    %rdi,%rax
    82b7:	48 03 41 08          	add    0x8(%rcx),%rax
    82bb:	49 89 02             	mov    %rax,(%r10)
    82be:	66 90                	xchg   %ax,%ax
    82c0:	48 83 c6 01          	add    $0x1,%rsi
    82c4:	48 83 c2 18          	add    $0x18,%rdx
    82c8:	49 39 f1             	cmp    %rsi,%r9
    82cb:	0f 85 17 ff ff ff    	jne    81e8 <do_relocs+0x28>
    82d1:	31 c0                	xor    %eax,%eax
    82d3:	5b                   	pop    %rbx
    82d4:	5d                   	pop    %rbp
    82d5:	c3                   	ret    
    82d6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    82dd:	00 00 00 
    82e0:	48 c1 e8 20          	shr    $0x20,%rax
    82e4:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
    82e8:	49 8d 0c c3          	lea    (%r11,%rax,8),%rcx
    82ec:	0f b6 41 04          	movzbl 0x4(%rcx),%eax
    82f0:	c0 e8 04             	shr    $0x4,%al
    82f3:	3c 02                	cmp    $0x2,%al
    82f5:	74 59                	je     8350 <do_relocs+0x190>
    82f7:	48 85 c9             	test   %rcx,%rcx
    82fa:	74 c4                	je     82c0 <do_relocs+0x100>
    82fc:	48 8b 42 10          	mov    0x10(%rdx),%rax
    8300:	48 03 41 08          	add    0x8(%rcx),%rax
    8304:	49 89 02             	mov    %rax,(%r10)
    8307:	eb b7                	jmp    82c0 <do_relocs+0x100>
    8309:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8310:	49 c7 02 01 00 00 00 	movq   $0x1,(%r10)
    8317:	eb a7                	jmp    82c0 <do_relocs+0x100>
    8319:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8320:	48 8b 42 10          	mov    0x10(%rdx),%rax
    8324:	48 01 f8             	add    %rdi,%rax
    8327:	49 89 02             	mov    %rax,(%r10)
    832a:	eb 94                	jmp    82c0 <do_relocs+0x100>
    832c:	0f 1f 40 00          	nopl   0x0(%rax)
    8330:	48 83 7b 08 00       	cmpq   $0x0,0x8(%rbx)
    8335:	0f 85 f0 fe ff ff    	jne    822b <do_relocs+0x6b>
    833b:	eb 83                	jmp    82c0 <do_relocs+0x100>
    833d:	0f 1f 00             	nopl   (%rax)
    8340:	48 83 79 08 00       	cmpq   $0x0,0x8(%rcx)
    8345:	0f 85 60 ff ff ff    	jne    82ab <do_relocs+0xeb>
    834b:	e9 70 ff ff ff       	jmp    82c0 <do_relocs+0x100>
    8350:	48 83 79 08 00       	cmpq   $0x0,0x8(%rcx)
    8355:	75 a0                	jne    82f7 <do_relocs+0x137>
    8357:	e9 64 ff ff ff       	jmp    82c0 <do_relocs+0x100>
    835c:	0f 1f 40 00          	nopl   0x0(%rax)
    8360:	48 8b 48 28          	mov    0x28(%rax),%rcx
    8364:	48 8b 40 30          	mov    0x30(%rax),%rax
    8368:	48 83 f8 01          	cmp    $0x1,%rax
    836c:	76 0b                	jbe    8379 <do_relocs+0x1b9>
    836e:	48 8d 4c 01 ff       	lea    -0x1(%rcx,%rax,1),%rcx
    8373:	48 f7 d8             	neg    %rax
    8376:	48 21 c1             	and    %rax,%rcx
    8379:	48 85 c9             	test   %rcx,%rcx
    837c:	0f 84 00 ff ff ff    	je     8282 <do_relocs+0xc2>
    8382:	48 8b 42 10          	mov    0x10(%rdx),%rax
    8386:	48 03 43 08          	add    0x8(%rbx),%rax
    838a:	48 29 c8             	sub    %rcx,%rax
    838d:	49 89 02             	mov    %rax,(%r10)
    8390:	e9 2b ff ff ff       	jmp    82c0 <do_relocs+0x100>
    8395:	31 c0                	xor    %eax,%eax
    8397:	c3                   	ret    
    8398:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    839f:	00 

00000000000083a0 <relocate_enclave>:
    83a0:	f3 0f 1e fa          	endbr64 
    83a4:	48 85 ff             	test   %rdi,%rdi
    83a7:	0f 84 d3 01 00 00    	je     8580 <relocate_enclave+0x1e0>
    83ad:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    83b3:	0f 85 c7 01 00 00    	jne    8580 <relocate_enclave+0x1e0>
    83b9:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    83be:	0f 85 bc 01 00 00    	jne    8580 <relocate_enclave+0x1e0>
    83c4:	41 57                	push   %r15
    83c6:	41 56                	push   %r14
    83c8:	41 55                	push   %r13
    83ca:	41 54                	push   %r12
    83cc:	55                   	push   %rbp
    83cd:	53                   	push   %rbx
    83ce:	48 89 fb             	mov    %rdi,%rbx
    83d1:	48 83 ec 08          	sub    $0x8,%rsp
    83d5:	48 03 5f 20          	add    0x20(%rdi),%rbx
    83d9:	0f 84 fd 00 00 00    	je     84dc <relocate_enclave+0x13c>
    83df:	0f b7 57 38          	movzwl 0x38(%rdi),%edx
    83e3:	66 85 d2             	test   %dx,%dx
    83e6:	0f 84 c4 01 00 00    	je     85b0 <relocate_enclave+0x210>
    83ec:	83 ea 01             	sub    $0x1,%edx
    83ef:	48 8d 2d 86 ad 00 00 	lea    0xad86(%rip),%rbp        # 1317c <g_dyn_entry_table+0xec>
    83f6:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax
    83fd:	00 
    83fe:	48 29 d0             	sub    %rdx,%rax
    8401:	4c 8d 64 c3 38       	lea    0x38(%rbx,%rax,8),%r12
    8406:	eb 15                	jmp    841d <relocate_enclave+0x7d>
    8408:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    840f:	00 
    8410:	48 83 c3 38          	add    $0x38,%rbx
    8414:	49 39 dc             	cmp    %rbx,%r12
    8417:	0f 84 93 01 00 00    	je     85b0 <relocate_enclave+0x210>
    841d:	83 3b 02             	cmpl   $0x2,(%rbx)
    8420:	75 ee                	jne    8410 <relocate_enclave+0x70>
    8422:	48 8b 53 18          	mov    0x18(%rbx),%rdx
    8426:	4c 8b 53 20          	mov    0x20(%rbx),%r10
    842a:	48 01 fa             	add    %rdi,%rdx
    842d:	49 c1 ea 04          	shr    $0x4,%r10
    8431:	74 dd                	je     8410 <relocate_enclave+0x70>
    8433:	49 c1 e2 04          	shl    $0x4,%r10
    8437:	45 31 f6             	xor    %r14d,%r14d
    843a:	45 31 ed             	xor    %r13d,%r13d
    843d:	31 c0                	xor    %eax,%eax
    843f:	49 01 d2             	add    %rdx,%r10
    8442:	45 31 ff             	xor    %r15d,%r15d
    8445:	45 31 c9             	xor    %r9d,%r9d
    8448:	45 31 c0             	xor    %r8d,%r8d
    844b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8450:	48 8b 32             	mov    (%rdx),%rsi
    8453:	48 85 f6             	test   %rsi,%rsi
    8456:	74 30                	je     8488 <relocate_enclave+0xe8>
    8458:	48 83 fe 17          	cmp    $0x17,%rsi
    845c:	77 1a                	ja     8478 <relocate_enclave+0xd8>
    845e:	48 63 74 b5 00       	movslq 0x0(%rbp,%rsi,4),%rsi
    8463:	48 01 ee             	add    %rbp,%rsi
    8466:	3e ff e6             	notrack jmp *%rsi
    8469:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8470:	4c 8b 42 08          	mov    0x8(%rdx),%r8
    8474:	0f 1f 40 00          	nopl   0x0(%rax)
    8478:	48 83 c2 10          	add    $0x10,%rdx
    847c:	49 39 d2             	cmp    %rdx,%r10
    847f:	75 cf                	jne    8450 <relocate_enclave+0xb0>
    8481:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8488:	4d 85 c9             	test   %r9,%r9
    848b:	0f 84 ff 00 00 00    	je     8590 <relocate_enclave+0x1f0>
    8491:	4d 85 ed             	test   %r13,%r13
    8494:	74 46                	je     84dc <relocate_enclave+0x13c>
    8496:	31 d2                	xor    %edx,%edx
    8498:	4c 89 ce             	mov    %r9,%rsi
    849b:	4c 89 04 24          	mov    %r8,(%rsp)
    849f:	49 f7 f5             	div    %r13
    84a2:	4c 89 c2             	mov    %r8,%rdx
    84a5:	48 89 c1             	mov    %rax,%rcx
    84a8:	e8 13 fd ff ff       	call   81c0 <do_relocs>
    84ad:	85 c0                	test   %eax,%eax
    84af:	75 2b                	jne    84dc <relocate_enclave+0x13c>
    84b1:	4d 85 ff             	test   %r15,%r15
    84b4:	4c 8b 04 24          	mov    (%rsp),%r8
    84b8:	0f 84 52 ff ff ff    	je     8410 <relocate_enclave+0x70>
    84be:	31 d2                	xor    %edx,%edx
    84c0:	4c 89 f0             	mov    %r14,%rax
    84c3:	4c 89 fe             	mov    %r15,%rsi
    84c6:	49 f7 f5             	div    %r13
    84c9:	4c 89 c2             	mov    %r8,%rdx
    84cc:	48 89 c1             	mov    %rax,%rcx
    84cf:	e8 ec fc ff ff       	call   81c0 <do_relocs>
    84d4:	85 c0                	test   %eax,%eax
    84d6:	0f 84 34 ff ff ff    	je     8410 <relocate_enclave+0x70>
    84dc:	48 83 c4 08          	add    $0x8,%rsp
    84e0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    84e5:	5b                   	pop    %rbx
    84e6:	5d                   	pop    %rbp
    84e7:	41 5c                	pop    %r12
    84e9:	41 5d                	pop    %r13
    84eb:	41 5e                	pop    %r14
    84ed:	41 5f                	pop    %r15
    84ef:	c3                   	ret    
    84f0:	4c 8b 7a 08          	mov    0x8(%rdx),%r15
    84f4:	48 83 c2 10          	add    $0x10,%rdx
    84f8:	49 39 d2             	cmp    %rdx,%r10
    84fb:	0f 85 4f ff ff ff    	jne    8450 <relocate_enclave+0xb0>
    8501:	eb 85                	jmp    8488 <relocate_enclave+0xe8>
    8503:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8508:	48 8b 42 08          	mov    0x8(%rdx),%rax
    850c:	48 83 c2 10          	add    $0x10,%rdx
    8510:	49 39 d2             	cmp    %rdx,%r10
    8513:	0f 85 37 ff ff ff    	jne    8450 <relocate_enclave+0xb0>
    8519:	e9 6a ff ff ff       	jmp    8488 <relocate_enclave+0xe8>
    851e:	66 90                	xchg   %ax,%ax
    8520:	4c 8b 4a 08          	mov    0x8(%rdx),%r9
    8524:	48 83 c2 10          	add    $0x10,%rdx
    8528:	49 39 d2             	cmp    %rdx,%r10
    852b:	0f 85 1f ff ff ff    	jne    8450 <relocate_enclave+0xb0>
    8531:	e9 52 ff ff ff       	jmp    8488 <relocate_enclave+0xe8>
    8536:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    853d:	00 00 00 
    8540:	4c 8b 72 08          	mov    0x8(%rdx),%r14
    8544:	48 83 c2 10          	add    $0x10,%rdx
    8548:	49 39 d2             	cmp    %rdx,%r10
    854b:	0f 85 ff fe ff ff    	jne    8450 <relocate_enclave+0xb0>
    8551:	e9 32 ff ff ff       	jmp    8488 <relocate_enclave+0xe8>
    8556:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    855d:	00 00 00 
    8560:	4c 8b 6a 08          	mov    0x8(%rdx),%r13
    8564:	48 83 c2 10          	add    $0x10,%rdx
    8568:	49 39 d2             	cmp    %rdx,%r10
    856b:	0f 85 df fe ff ff    	jne    8450 <relocate_enclave+0xb0>
    8571:	e9 12 ff ff ff       	jmp    8488 <relocate_enclave+0xe8>
    8576:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    857d:	00 00 00 
    8580:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8585:	c3                   	ret    
    8586:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    858d:	00 00 00 
    8590:	4d 85 ff             	test   %r15,%r15
    8593:	0f 84 77 fe ff ff    	je     8410 <relocate_enclave+0x70>
    8599:	4d 85 ed             	test   %r13,%r13
    859c:	0f 84 3a ff ff ff    	je     84dc <relocate_enclave+0x13c>
    85a2:	e9 17 ff ff ff       	jmp    84be <relocate_enclave+0x11e>
    85a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    85ae:	00 00 
    85b0:	48 83 c4 08          	add    $0x8,%rsp
    85b4:	31 c0                	xor    %eax,%eax
    85b6:	5b                   	pop    %rbx
    85b7:	5d                   	pop    %rbp
    85b8:	41 5c                	pop    %r12
    85ba:	41 5d                	pop    %r13
    85bc:	41 5e                	pop    %r14
    85be:	41 5f                	pop    %r15
    85c0:	c3                   	ret    
    85c1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    85c8:	00 00 00 
    85cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000085d0 <elf_tls_info>:
    85d0:	f3 0f 1e fa          	endbr64 
    85d4:	49 89 f0             	mov    %rsi,%r8
    85d7:	48 89 f9             	mov    %rdi,%rcx
    85da:	48 89 d6             	mov    %rdx,%rsi
    85dd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    85e2:	48 85 ff             	test   %rdi,%rdi
    85e5:	74 7e                	je     8665 <elf_tls_info+0x95>
    85e7:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    85ed:	75 75                	jne    8664 <elf_tls_info+0x94>
    85ef:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    85f4:	75 6e                	jne    8664 <elf_tls_info+0x94>
    85f6:	48 8b 47 20          	mov    0x20(%rdi),%rax
    85fa:	48 01 f8             	add    %rdi,%rax
    85fd:	4d 85 c0             	test   %r8,%r8
    8600:	0f 94 c2             	sete   %dl
    8603:	48 85 f6             	test   %rsi,%rsi
    8606:	40 0f 94 c7          	sete   %dil
    860a:	40 08 fa             	or     %dil,%dl
    860d:	75 50                	jne    865f <elf_tls_info+0x8f>
    860f:	48 85 c0             	test   %rax,%rax
    8612:	74 4b                	je     865f <elf_tls_info+0x8f>
    8614:	0f b7 79 38          	movzwl 0x38(%rcx),%edi
    8618:	49 c7 00 00 00 00 00 	movq   $0x0,(%r8)
    861f:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
    8626:	66 85 ff             	test   %di,%di
    8629:	74 31                	je     865c <elf_tls_info+0x8c>
    862b:	83 ef 01             	sub    $0x1,%edi
    862e:	48 8d 14 fd 00 00 00 	lea    0x0(,%rdi,8),%rdx
    8635:	00 
    8636:	48 29 fa             	sub    %rdi,%rdx
    8639:	48 8d 54 d0 38       	lea    0x38(%rax,%rdx,8),%rdx
    863e:	eb 09                	jmp    8649 <elf_tls_info+0x79>
    8640:	48 83 c0 38          	add    $0x38,%rax
    8644:	48 39 d0             	cmp    %rdx,%rax
    8647:	74 13                	je     865c <elf_tls_info+0x8c>
    8649:	83 38 07             	cmpl   $0x7,(%rax)
    864c:	75 f2                	jne    8640 <elf_tls_info+0x70>
    864e:	48 03 48 10          	add    0x10(%rax),%rcx
    8652:	49 89 08             	mov    %rcx,(%r8)
    8655:	48 8b 40 20          	mov    0x20(%rax),%rax
    8659:	48 89 06             	mov    %rax,(%rsi)
    865c:	31 c0                	xor    %eax,%eax
    865e:	c3                   	ret    
    865f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8664:	c3                   	ret    
    8665:	c3                   	ret    
    8666:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    866d:	00 00 00 

0000000000008670 <elf_get_init_array>:
    8670:	f3 0f 1e fa          	endbr64 
    8674:	49 89 f8             	mov    %rdi,%r8
    8677:	49 89 f1             	mov    %rsi,%r9
    867a:	49 89 d2             	mov    %rdx,%r10
    867d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8682:	48 85 ff             	test   %rdi,%rdi
    8685:	0f 84 c8 00 00 00    	je     8753 <elf_get_init_array+0xe3>
    868b:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    8691:	0f 85 b6 00 00 00    	jne    874d <elf_get_init_array+0xdd>
    8697:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    869c:	0f 85 ab 00 00 00    	jne    874d <elf_get_init_array+0xdd>
    86a2:	48 8b 57 20          	mov    0x20(%rdi),%rdx
    86a6:	48 01 fa             	add    %rdi,%rdx
    86a9:	48 85 f6             	test   %rsi,%rsi
    86ac:	0f 94 c0             	sete   %al
    86af:	4d 85 d2             	test   %r10,%r10
    86b2:	0f 94 c1             	sete   %cl
    86b5:	08 c8                	or     %cl,%al
    86b7:	0f 85 8b 00 00 00    	jne    8748 <elf_get_init_array+0xd8>
    86bd:	48 85 d2             	test   %rdx,%rdx
    86c0:	0f 84 82 00 00 00    	je     8748 <elf_get_init_array+0xd8>
    86c6:	0f b7 4f 38          	movzwl 0x38(%rdi),%ecx
    86ca:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
    86d1:	49 c7 02 00 00 00 00 	movq   $0x0,(%r10)
    86d8:	66 85 c9             	test   %cx,%cx
    86db:	74 73                	je     8750 <elf_get_init_array+0xe0>
    86dd:	83 e9 01             	sub    $0x1,%ecx
    86e0:	48 8d 04 cd 00 00 00 	lea    0x0(,%rcx,8),%rax
    86e7:	00 
    86e8:	48 29 c8             	sub    %rcx,%rax
    86eb:	48 8d 7c c2 38       	lea    0x38(%rdx,%rax,8),%rdi
    86f0:	eb 0f                	jmp    8701 <elf_get_init_array+0x91>
    86f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    86f8:	48 83 c2 38          	add    $0x38,%rdx
    86fc:	48 39 fa             	cmp    %rdi,%rdx
    86ff:	74 4f                	je     8750 <elf_get_init_array+0xe0>
    8701:	83 3a 02             	cmpl   $0x2,(%rdx)
    8704:	75 f2                	jne    86f8 <elf_get_init_array+0x88>
    8706:	48 8b 42 18          	mov    0x18(%rdx),%rax
    870a:	48 8b 72 20          	mov    0x20(%rdx),%rsi
    870e:	4c 01 c0             	add    %r8,%rax
    8711:	48 c1 ee 04          	shr    $0x4,%rsi
    8715:	74 e1                	je     86f8 <elf_get_init_array+0x88>
    8717:	48 c1 e6 04          	shl    $0x4,%rsi
    871b:	48 01 c6             	add    %rax,%rsi
    871e:	eb 16                	jmp    8736 <elf_get_init_array+0xc6>
    8720:	48 83 f9 1b          	cmp    $0x1b,%rcx
    8724:	75 07                	jne    872d <elf_get_init_array+0xbd>
    8726:	48 8b 48 08          	mov    0x8(%rax),%rcx
    872a:	49 89 0a             	mov    %rcx,(%r10)
    872d:	48 83 c0 10          	add    $0x10,%rax
    8731:	48 39 c6             	cmp    %rax,%rsi
    8734:	74 c2                	je     86f8 <elf_get_init_array+0x88>
    8736:	48 8b 08             	mov    (%rax),%rcx
    8739:	48 83 f9 19          	cmp    $0x19,%rcx
    873d:	75 e1                	jne    8720 <elf_get_init_array+0xb0>
    873f:	48 8b 48 08          	mov    0x8(%rax),%rcx
    8743:	49 89 09             	mov    %rcx,(%r9)
    8746:	eb e5                	jmp    872d <elf_get_init_array+0xbd>
    8748:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    874d:	c3                   	ret    
    874e:	66 90                	xchg   %ax,%ax
    8750:	31 c0                	xor    %eax,%eax
    8752:	c3                   	ret    
    8753:	c3                   	ret    
    8754:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    875b:	00 00 00 
    875e:	66 90                	xchg   %ax,%ax

0000000000008760 <elf_get_uninit_array>:
    8760:	f3 0f 1e fa          	endbr64 
    8764:	49 89 f8             	mov    %rdi,%r8
    8767:	49 89 f1             	mov    %rsi,%r9
    876a:	49 89 d2             	mov    %rdx,%r10
    876d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8772:	48 85 ff             	test   %rdi,%rdi
    8775:	0f 84 c8 00 00 00    	je     8843 <elf_get_uninit_array+0xe3>
    877b:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    8781:	0f 85 b6 00 00 00    	jne    883d <elf_get_uninit_array+0xdd>
    8787:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    878c:	0f 85 ab 00 00 00    	jne    883d <elf_get_uninit_array+0xdd>
    8792:	48 8b 57 20          	mov    0x20(%rdi),%rdx
    8796:	48 01 fa             	add    %rdi,%rdx
    8799:	48 85 f6             	test   %rsi,%rsi
    879c:	0f 94 c0             	sete   %al
    879f:	4d 85 d2             	test   %r10,%r10
    87a2:	0f 94 c1             	sete   %cl
    87a5:	08 c8                	or     %cl,%al
    87a7:	0f 85 8b 00 00 00    	jne    8838 <elf_get_uninit_array+0xd8>
    87ad:	48 85 d2             	test   %rdx,%rdx
    87b0:	0f 84 82 00 00 00    	je     8838 <elf_get_uninit_array+0xd8>
    87b6:	0f b7 4f 38          	movzwl 0x38(%rdi),%ecx
    87ba:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
    87c1:	49 c7 02 00 00 00 00 	movq   $0x0,(%r10)
    87c8:	66 85 c9             	test   %cx,%cx
    87cb:	74 73                	je     8840 <elf_get_uninit_array+0xe0>
    87cd:	83 e9 01             	sub    $0x1,%ecx
    87d0:	48 8d 04 cd 00 00 00 	lea    0x0(,%rcx,8),%rax
    87d7:	00 
    87d8:	48 29 c8             	sub    %rcx,%rax
    87db:	48 8d 7c c2 38       	lea    0x38(%rdx,%rax,8),%rdi
    87e0:	eb 0f                	jmp    87f1 <elf_get_uninit_array+0x91>
    87e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    87e8:	48 83 c2 38          	add    $0x38,%rdx
    87ec:	48 39 fa             	cmp    %rdi,%rdx
    87ef:	74 4f                	je     8840 <elf_get_uninit_array+0xe0>
    87f1:	83 3a 02             	cmpl   $0x2,(%rdx)
    87f4:	75 f2                	jne    87e8 <elf_get_uninit_array+0x88>
    87f6:	48 8b 42 18          	mov    0x18(%rdx),%rax
    87fa:	48 8b 72 20          	mov    0x20(%rdx),%rsi
    87fe:	4c 01 c0             	add    %r8,%rax
    8801:	48 c1 ee 04          	shr    $0x4,%rsi
    8805:	74 e1                	je     87e8 <elf_get_uninit_array+0x88>
    8807:	48 c1 e6 04          	shl    $0x4,%rsi
    880b:	48 01 c6             	add    %rax,%rsi
    880e:	eb 16                	jmp    8826 <elf_get_uninit_array+0xc6>
    8810:	48 83 f9 1c          	cmp    $0x1c,%rcx
    8814:	75 07                	jne    881d <elf_get_uninit_array+0xbd>
    8816:	48 8b 48 08          	mov    0x8(%rax),%rcx
    881a:	49 89 0a             	mov    %rcx,(%r10)
    881d:	48 83 c0 10          	add    $0x10,%rax
    8821:	48 39 c6             	cmp    %rax,%rsi
    8824:	74 c2                	je     87e8 <elf_get_uninit_array+0x88>
    8826:	48 8b 08             	mov    (%rax),%rcx
    8829:	48 83 f9 1a          	cmp    $0x1a,%rcx
    882d:	75 e1                	jne    8810 <elf_get_uninit_array+0xb0>
    882f:	48 8b 48 08          	mov    0x8(%rax),%rcx
    8833:	49 89 09             	mov    %rcx,(%r9)
    8836:	eb e5                	jmp    881d <elf_get_uninit_array+0xbd>
    8838:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    883d:	c3                   	ret    
    883e:	66 90                	xchg   %ax,%ax
    8840:	31 c0                	xor    %eax,%eax
    8842:	c3                   	ret    
    8843:	c3                   	ret    
    8844:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    884b:	00 00 00 
    884e:	66 90                	xchg   %ax,%ax

0000000000008850 <change_protection>:
    8850:	f3 0f 1e fa          	endbr64 
    8854:	48 85 ff             	test   %rdi,%rdi
    8857:	0f 84 be 01 00 00    	je     8a1b <change_protection+0x1cb>
    885d:	41 56                	push   %r14
    885f:	41 55                	push   %r13
    8861:	49 89 fd             	mov    %rdi,%r13
    8864:	41 54                	push   %r12
    8866:	55                   	push   %rbp
    8867:	53                   	push   %rbx
    8868:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    886e:	0f 85 bc 00 00 00    	jne    8930 <change_protection+0xe0>
    8874:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    8879:	0f 85 b1 00 00 00    	jne    8930 <change_protection+0xe0>
    887f:	48 89 fb             	mov    %rdi,%rbx
    8882:	48 03 5f 20          	add    0x20(%rdi),%rbx
    8886:	0f 84 a4 00 00 00    	je     8930 <change_protection+0xe0>
    888c:	0f b7 57 38          	movzwl 0x38(%rdi),%edx
    8890:	48 89 de             	mov    %rbx,%rsi
    8893:	89 d1                	mov    %edx,%ecx
    8895:	e8 b6 f8 ff ff       	call   8150 <has_text_relo>
    889a:	41 89 c6             	mov    %eax,%r14d
    889d:	66 85 c9             	test   %cx,%cx
    88a0:	0f 84 ea 00 00 00    	je     8990 <change_protection+0x140>
    88a6:	49 bc ff ff ff ff 02 	movabs $0x2ffffffff,%r12
    88ad:	00 00 00 
    88b0:	31 ed                	xor    %ebp,%ebp
    88b2:	eb 18                	jmp    88cc <change_protection+0x7c>
    88b4:	0f 1f 40 00          	nopl   0x0(%rax)
    88b8:	41 0f b7 45 38       	movzwl 0x38(%r13),%eax
    88bd:	83 c5 01             	add    $0x1,%ebp
    88c0:	48 83 c3 38          	add    $0x38,%rbx
    88c4:	39 c5                	cmp    %eax,%ebp
    88c6:	0f 83 c4 00 00 00    	jae    8990 <change_protection+0x140>
    88cc:	45 85 f6             	test   %r14d,%r14d
    88cf:	74 0c                	je     88dd <change_protection+0x8d>
    88d1:	48 8b 03             	mov    (%rbx),%rax
    88d4:	4c 21 e0             	and    %r12,%rax
    88d7:	48 83 f8 01          	cmp    $0x1,%rax
    88db:	74 63                	je     8940 <change_protection+0xf0>
    88dd:	81 3b 52 e5 74 64    	cmpl   $0x6474e552,(%rbx)
    88e3:	75 d3                	jne    88b8 <change_protection+0x68>
    88e5:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    88e9:	48 8b 73 28          	mov    0x28(%rbx),%rsi
    88ed:	48 01 fe             	add    %rdi,%rsi
    88f0:	48 89 f8             	mov    %rdi,%rax
    88f3:	48 81 c6 ff 0f 00 00 	add    $0xfff,%rsi
    88fa:	48 31 f0             	xor    %rsi,%rax
    88fd:	48 3d ff 0f 00 00    	cmp    $0xfff,%rax
    8903:	76 b3                	jbe    88b8 <change_protection+0x68>
    8905:	48 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%rdi
    890c:	48 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%rsi
    8913:	ba 01 00 00 00       	mov    $0x1,%edx
    8918:	48 29 fe             	sub    %rdi,%rsi
    891b:	4c 01 ef             	add    %r13,%rdi
    891e:	e8 9d 30 00 00       	call   b9c0 <mm_modify_permissions>
    8923:	85 c0                	test   %eax,%eax
    8925:	74 91                	je     88b8 <change_protection+0x68>
    8927:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    892e:	00 00 
    8930:	b8 01 00 00 00       	mov    $0x1,%eax
    8935:	5b                   	pop    %rbx
    8936:	5d                   	pop    %rbp
    8937:	41 5c                	pop    %r12
    8939:	41 5d                	pop    %r13
    893b:	41 5e                	pop    %r14
    893d:	c3                   	ret    
    893e:	66 90                	xchg   %ax,%ax
    8940:	48 8b 43 10          	mov    0x10(%rbx),%rax
    8944:	8b 4b 04             	mov    0x4(%rbx),%ecx
    8947:	48 89 c7             	mov    %rax,%rdi
    894a:	89 ca                	mov    %ecx,%edx
    894c:	48 03 43 28          	add    0x28(%rbx),%rax
    8950:	c1 e9 02             	shr    $0x2,%ecx
    8953:	83 e2 01             	and    $0x1,%edx
    8956:	48 8d b0 ff 0f 00 00 	lea    0xfff(%rax),%rsi
    895d:	48 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%rdi
    8964:	83 e1 01             	and    $0x1,%ecx
    8967:	48 c1 e2 02          	shl    $0x2,%rdx
    896b:	48 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%rsi
    8972:	48 29 fe             	sub    %rdi,%rsi
    8975:	09 ca                	or     %ecx,%edx
    8977:	4c 01 ef             	add    %r13,%rdi
    897a:	e8 41 30 00 00       	call   b9c0 <mm_modify_permissions>
    897f:	85 c0                	test   %eax,%eax
    8981:	0f 84 56 ff ff ff    	je     88dd <change_protection+0x8d>
    8987:	eb a7                	jmp    8930 <change_protection+0xe0>
    8989:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8990:	8b 05 c2 a9 00 00    	mov    0xa9c2(%rip),%eax        # 13358 <g_global_data+0x158>
    8996:	85 c0                	test   %eax,%eax
    8998:	74 9b                	je     8935 <change_protection+0xe5>
    899a:	31 d2                	xor    %edx,%edx
    899c:	48 8d 3d 5d a8 00 00 	lea    0xa85d(%rip),%rdi        # 13200 <g_global_data>
    89a3:	eb 10                	jmp    89b5 <change_protection+0x165>
    89a5:	0f 1f 00             	nopl   (%rax)
    89a8:	8b 05 aa a9 00 00    	mov    0xa9aa(%rip),%eax        # 13358 <g_global_data+0x158>
    89ae:	83 c2 01             	add    $0x1,%edx
    89b1:	39 c2                	cmp    %eax,%edx
    89b3:	73 5b                	jae    8a10 <change_protection+0x1c0>
    89b5:	89 d1                	mov    %edx,%ecx
    89b7:	48 8d 41 0b          	lea    0xb(%rcx),%rax
    89bb:	48 c1 e0 05          	shl    $0x5,%rax
    89bf:	48 01 f8             	add    %rdi,%rax
    89c2:	0f b7 30             	movzwl (%rax),%esi
    89c5:	66 83 fe 14          	cmp    $0x14,%si
    89c9:	75 dd                	jne    89a8 <change_protection+0x158>
    89cb:	48 c1 e1 05          	shl    $0x5,%rcx
    89cf:	48 01 f9             	add    %rdi,%rcx
    89d2:	48 8b 89 78 01 00 00 	mov    0x178(%rcx),%rcx
    89d9:	48 81 f9 07 02 00 00 	cmp    $0x207,%rcx
    89e0:	75 c6                	jne    89a8 <change_protection+0x158>
    89e2:	8b 48 04             	mov    0x4(%rax),%ecx
    89e5:	85 c9                	test   %ecx,%ecx
    89e7:	74 bf                	je     89a8 <change_protection+0x158>
    89e9:	8b 70 04             	mov    0x4(%rax),%esi
    89ec:	48 8b 40 08          	mov    0x8(%rax),%rax
    89f0:	ba 03 00 00 00       	mov    $0x3,%edx
    89f5:	48 c1 e6 0c          	shl    $0xc,%rsi
    89f9:	49 8d 7c 05 00       	lea    0x0(%r13,%rax,1),%rdi
    89fe:	e8 bd 2f 00 00       	call   b9c0 <mm_modify_permissions>
    8a03:	85 c0                	test   %eax,%eax
    8a05:	0f 95 c0             	setne  %al
    8a08:	0f b6 c0             	movzbl %al,%eax
    8a0b:	e9 25 ff ff ff       	jmp    8935 <change_protection+0xe5>
    8a10:	5b                   	pop    %rbx
    8a11:	31 c0                	xor    %eax,%eax
    8a13:	5d                   	pop    %rbp
    8a14:	41 5c                	pop    %r12
    8a16:	41 5d                	pop    %r13
    8a18:	41 5e                	pop    %r14
    8a1a:	c3                   	ret    
    8a1b:	b8 01 00 00 00       	mov    $0x1,%eax
    8a20:	c3                   	ret    
    8a21:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8a28:	00 00 00 
    8a2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000008a30 <init_segment_emas>:
    8a30:	f3 0f 1e fa          	endbr64 
    8a34:	48 85 ff             	test   %rdi,%rdi
    8a37:	0f 84 e8 00 00 00    	je     8b25 <init_segment_emas+0xf5>
    8a3d:	41 55                	push   %r13
    8a3f:	49 89 fd             	mov    %rdi,%r13
    8a42:	41 54                	push   %r12
    8a44:	55                   	push   %rbp
    8a45:	53                   	push   %rbx
    8a46:	48 83 ec 08          	sub    $0x8,%rsp
    8a4a:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    8a50:	0f 85 ae 00 00 00    	jne    8b04 <init_segment_emas+0xd4>
    8a56:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    8a5b:	0f 85 a3 00 00 00    	jne    8b04 <init_segment_emas+0xd4>
    8a61:	48 89 fb             	mov    %rdi,%rbx
    8a64:	48 03 5f 20          	add    0x20(%rdi),%rbx
    8a68:	0f 84 96 00 00 00    	je     8b04 <init_segment_emas+0xd4>
    8a6e:	0f b7 57 38          	movzwl 0x38(%rdi),%edx
    8a72:	48 89 de             	mov    %rbx,%rsi
    8a75:	45 31 e4             	xor    %r12d,%r12d
    8a78:	89 d1                	mov    %edx,%ecx
    8a7a:	e8 d1 f6 ff ff       	call   8150 <has_text_relo>
    8a7f:	89 c5                	mov    %eax,%ebp
    8a81:	66 85 c9             	test   %cx,%cx
    8a84:	75 1c                	jne    8aa2 <init_segment_emas+0x72>
    8a86:	e9 8d 00 00 00       	jmp    8b18 <init_segment_emas+0xe8>
    8a8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8a90:	41 0f b7 45 38       	movzwl 0x38(%r13),%eax
    8a95:	41 83 c4 01          	add    $0x1,%r12d
    8a99:	48 83 c3 38          	add    $0x38,%rbx
    8a9d:	41 39 c4             	cmp    %eax,%r12d
    8aa0:	73 76                	jae    8b18 <init_segment_emas+0xe8>
    8aa2:	83 3b 01             	cmpl   $0x1,(%rbx)
    8aa5:	75 e9                	jne    8a90 <init_segment_emas+0x60>
    8aa7:	8b 4b 04             	mov    0x4(%rbx),%ecx
    8aaa:	48 8b 73 10          	mov    0x10(%rbx),%rsi
    8aae:	89 c8                	mov    %ecx,%eax
    8ab0:	48 89 f2             	mov    %rsi,%rdx
    8ab3:	48 03 73 28          	add    0x28(%rbx),%rsi
    8ab7:	83 e0 02             	and    $0x2,%eax
    8aba:	48 81 c6 ff 0f 00 00 	add    $0xfff,%rsi
    8ac1:	48 81 e2 00 f0 ff ff 	and    $0xfffffffffffff000,%rdx
    8ac8:	09 e8                	or     %ebp,%eax
    8aca:	48 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%rsi
    8ad1:	49 8d 7c 15 00       	lea    0x0(%r13,%rdx,1),%rdi
    8ad6:	83 f8 01             	cmp    $0x1,%eax
    8ad9:	48 19 c0             	sbb    %rax,%rax
    8adc:	83 e1 01             	and    $0x1,%ecx
    8adf:	48 29 d6             	sub    %rdx,%rsi
    8ae2:	45 31 c9             	xor    %r9d,%r9d
    8ae5:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    8ae9:	48 c1 e1 02          	shl    $0x2,%rcx
    8aed:	45 31 c0             	xor    %r8d,%r8d
    8af0:	ba 80 02 00 00       	mov    $0x280,%edx
    8af5:	48 83 c0 03          	add    $0x3,%rax
    8af9:	09 c1                	or     %eax,%ecx
    8afb:	e8 50 2d 00 00       	call   b850 <mm_init_ema>
    8b00:	85 c0                	test   %eax,%eax
    8b02:	74 8c                	je     8a90 <init_segment_emas+0x60>
    8b04:	48 83 c4 08          	add    $0x8,%rsp
    8b08:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8b0d:	5b                   	pop    %rbx
    8b0e:	5d                   	pop    %rbp
    8b0f:	41 5c                	pop    %r12
    8b11:	41 5d                	pop    %r13
    8b13:	c3                   	ret    
    8b14:	0f 1f 40 00          	nopl   0x0(%rax)
    8b18:	48 83 c4 08          	add    $0x8,%rsp
    8b1c:	31 c0                	xor    %eax,%eax
    8b1e:	5b                   	pop    %rbx
    8b1f:	5d                   	pop    %rbp
    8b20:	41 5c                	pop    %r12
    8b22:	41 5d                	pop    %r13
    8b24:	c3                   	ret    
    8b25:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8b2a:	c3                   	ret    
    8b2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000008b30 <__cxa_atexit>:
    8b30:	f3 0f 1e fa          	endbr64 
    8b34:	41 55                	push   %r13
    8b36:	49 89 d5             	mov    %rdx,%r13
    8b39:	41 54                	push   %r12
    8b3b:	49 89 f4             	mov    %rsi,%r12
    8b3e:	55                   	push   %rbp
    8b3f:	48 89 fd             	mov    %rdi,%rbp
    8b42:	53                   	push   %rbx
    8b43:	48 83 ec 18          	sub    $0x18,%rsp
    8b47:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    8b4e:	00 00 
    8b50:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    8b55:	31 c0                	xor    %eax,%eax
    8b57:	48 83 3d 41 16 01 00 	cmpq   $0x0,0x11641(%rip)        # 1a1a0 <g_exit_function_cookie>
    8b5e:	00 
    8b5f:	0f 84 8b 00 00 00    	je     8bf0 <__cxa_atexit+0xc0>
    8b65:	31 f6                	xor    %esi,%esi
    8b67:	48 89 ef             	mov    %rbp,%rdi
    8b6a:	e8 f1 cf ff ff       	call   5b60 <sgx_is_within_enclave>
    8b6f:	85 c0                	test   %eax,%eax
    8b71:	0f 84 a1 00 00 00    	je     8c18 <__cxa_atexit+0xe8>
    8b77:	bf 20 00 00 00       	mov    $0x20,%edi
    8b7c:	e8 5f 45 00 00       	call   d0e0 <dlmalloc>
    8b81:	48 89 c3             	mov    %rax,%rbx
    8b84:	48 85 c0             	test   %rax,%rax
    8b87:	0f 84 8b 00 00 00    	je     8c18 <__cxa_atexit+0xe8>
    8b8d:	48 8b 05 0c 16 01 00 	mov    0x1160c(%rip),%rax        # 1a1a0 <g_exit_function_cookie>
    8b94:	4c 89 6b 10          	mov    %r13,0x10(%rbx)
    8b98:	48 31 c5             	xor    %rax,%rbp
    8b9b:	49 31 c4             	xor    %rax,%r12
    8b9e:	48 89 2b             	mov    %rbp,(%rbx)
    8ba1:	48 8d 2d 00 16 01 00 	lea    0x11600(%rip),%rbp        # 1a1a8 <g_exit_function_lock>
    8ba8:	4c 89 63 08          	mov    %r12,0x8(%rbx)
    8bac:	48 89 ef             	mov    %rbp,%rdi
    8baf:	e8 6c 3b 00 00       	call   c720 <sgx_spin_lock>
    8bb4:	48 8b 05 f5 15 01 00 	mov    0x115f5(%rip),%rax        # 1a1b0 <g_exit_function>
    8bbb:	48 89 ef             	mov    %rbp,%rdi
    8bbe:	48 89 1d eb 15 01 00 	mov    %rbx,0x115eb(%rip)        # 1a1b0 <g_exit_function>
    8bc5:	48 89 43 18          	mov    %rax,0x18(%rbx)
    8bc9:	e8 e2 3b 00 00       	call   c7b0 <sgx_spin_unlock>
    8bce:	31 c0                	xor    %eax,%eax
    8bd0:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    8bd5:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    8bdc:	00 00 
    8bde:	75 71                	jne    8c51 <__cxa_atexit+0x121>
    8be0:	48 83 c4 18          	add    $0x18,%rsp
    8be4:	5b                   	pop    %rbx
    8be5:	5d                   	pop    %rbp
    8be6:	41 5c                	pop    %r12
    8be8:	41 5d                	pop    %r13
    8bea:	c3                   	ret    
    8beb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8bf0:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    8bf7:	00 
    8bf8:	48 89 e3             	mov    %rsp,%rbx
    8bfb:	eb 0a                	jmp    8c07 <__cxa_atexit+0xd7>
    8bfd:	0f 1f 00             	nopl   (%rax)
    8c00:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
    8c05:	75 19                	jne    8c20 <__cxa_atexit+0xf0>
    8c07:	be 08 00 00 00       	mov    $0x8,%esi
    8c0c:	48 89 df             	mov    %rbx,%rdi
    8c0f:	e8 4c d1 ff ff       	call   5d60 <sgx_read_rand>
    8c14:	85 c0                	test   %eax,%eax
    8c16:	74 e8                	je     8c00 <__cxa_atexit+0xd0>
    8c18:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8c1d:	eb b1                	jmp    8bd0 <__cxa_atexit+0xa0>
    8c1f:	90                   	nop
    8c20:	48 8d 1d 81 15 01 00 	lea    0x11581(%rip),%rbx        # 1a1a8 <g_exit_function_lock>
    8c27:	48 89 df             	mov    %rbx,%rdi
    8c2a:	e8 f1 3a 00 00       	call   c720 <sgx_spin_lock>
    8c2f:	48 83 3d 69 15 01 00 	cmpq   $0x0,0x11569(%rip)        # 1a1a0 <g_exit_function_cookie>
    8c36:	00 
    8c37:	75 0b                	jne    8c44 <__cxa_atexit+0x114>
    8c39:	48 8b 04 24          	mov    (%rsp),%rax
    8c3d:	48 89 05 5c 15 01 00 	mov    %rax,0x1155c(%rip)        # 1a1a0 <g_exit_function_cookie>
    8c44:	48 89 df             	mov    %rbx,%rdi
    8c47:	e8 64 3b 00 00       	call   c7b0 <sgx_spin_unlock>
    8c4c:	e9 14 ff ff ff       	jmp    8b65 <__cxa_atexit+0x35>
    8c51:	e8 4a 7d 00 00       	call   109a0 <__stack_chk_fail>
    8c56:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8c5d:	00 00 00 

0000000000008c60 <atexit>:
    8c60:	f3 0f 1e fa          	endbr64 
    8c64:	48 8b 15 e5 f5 00 00 	mov    0xf5e5(%rip),%rdx        # 18250 <__dso_handle>
    8c6b:	31 f6                	xor    %esi,%esi
    8c6d:	e9 be fe ff ff       	jmp    8b30 <__cxa_atexit>
    8c72:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8c79:	00 00 00 
    8c7c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000008c80 <init_global_object>:
    8c80:	f3 0f 1e fa          	endbr64 
    8c84:	55                   	push   %rbp
    8c85:	53                   	push   %rbx
    8c86:	48 83 ec 28          	sub    $0x28,%rsp
    8c8a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    8c91:	00 00 
    8c93:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    8c98:	31 c0                	xor    %eax,%eax
    8c9a:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    8ca1:	00 00 
    8ca3:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    8caa:	00 00 
    8cac:	e8 47 94 00 00       	call   120f8 <get_enclave_base>
    8cb1:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    8cb6:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
    8cbb:	48 89 c7             	mov    %rax,%rdi
    8cbe:	48 89 c3             	mov    %rax,%rbx
    8cc1:	e8 aa f9 ff ff       	call   8670 <elf_get_init_array>
    8cc6:	85 c0                	test   %eax,%eax
    8cc8:	75 31                	jne    8cfb <init_global_object+0x7b>
    8cca:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    8ccf:	48 85 c0             	test   %rax,%rax
    8cd2:	74 27                	je     8cfb <init_global_object+0x7b>
    8cd4:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
    8cd9:	48 85 ed             	test   %rbp,%rbp
    8cdc:	74 1d                	je     8cfb <init_global_object+0x7b>
    8cde:	48 01 c3             	add    %rax,%rbx
    8ce1:	48 83 e5 f8          	and    $0xfffffffffffffff8,%rbp
    8ce5:	48 01 dd             	add    %rbx,%rbp
    8ce8:	48 39 eb             	cmp    %rbp,%rbx
    8ceb:	73 0e                	jae    8cfb <init_global_object+0x7b>
    8ced:	0f 1f 00             	nopl   (%rax)
    8cf0:	ff 13                	call   *(%rbx)
    8cf2:	48 83 c3 08          	add    $0x8,%rbx
    8cf6:	48 39 eb             	cmp    %rbp,%rbx
    8cf9:	72 f5                	jb     8cf0 <init_global_object+0x70>
    8cfb:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    8d00:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    8d07:	00 00 
    8d09:	75 07                	jne    8d12 <init_global_object+0x92>
    8d0b:	48 83 c4 28          	add    $0x28,%rsp
    8d0f:	5b                   	pop    %rbx
    8d10:	5d                   	pop    %rbp
    8d11:	c3                   	ret    
    8d12:	e8 89 7c 00 00       	call   109a0 <__stack_chk_fail>
    8d17:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    8d1e:	00 00 

0000000000008d20 <uninit_global_object>:
    8d20:	f3 0f 1e fa          	endbr64 
    8d24:	55                   	push   %rbp
    8d25:	53                   	push   %rbx
    8d26:	48 83 ec 28          	sub    $0x28,%rsp
    8d2a:	48 8b 1d 7f 14 01 00 	mov    0x1147f(%rip),%rbx        # 1a1b0 <g_exit_function>
    8d31:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    8d38:	00 00 
    8d3a:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    8d3f:	31 c0                	xor    %eax,%eax
    8d41:	48 c7 05 64 14 01 00 	movq   $0x0,0x11464(%rip)        # 1a1b0 <g_exit_function>
    8d48:	00 00 00 00 
    8d4c:	48 85 db             	test   %rbx,%rbx
    8d4f:	74 2b                	je     8d7c <uninit_global_object+0x5c>
    8d51:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8d58:	48 8b 05 41 14 01 00 	mov    0x11441(%rip),%rax        # 1a1a0 <g_exit_function_cookie>
    8d5f:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    8d63:	48 31 c7             	xor    %rax,%rdi
    8d66:	48 33 03             	xor    (%rbx),%rax
    8d69:	ff d0                	call   *%rax
    8d6b:	48 89 df             	mov    %rbx,%rdi
    8d6e:	48 8b 5b 18          	mov    0x18(%rbx),%rbx
    8d72:	e8 59 61 00 00       	call   eed0 <dlfree>
    8d77:	48 85 db             	test   %rbx,%rbx
    8d7a:	75 dc                	jne    8d58 <uninit_global_object+0x38>
    8d7c:	e8 77 93 00 00       	call   120f8 <get_enclave_base>
    8d81:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    8d86:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
    8d8b:	48 89 c7             	mov    %rax,%rdi
    8d8e:	48 89 c5             	mov    %rax,%rbp
    8d91:	e8 ca f9 ff ff       	call   8760 <elf_get_uninit_array>
    8d96:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    8d9b:	48 85 d2             	test   %rdx,%rdx
    8d9e:	74 2b                	je     8dcb <uninit_global_object+0xab>
    8da0:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    8da5:	48 85 c0             	test   %rax,%rax
    8da8:	74 21                	je     8dcb <uninit_global_object+0xab>
    8daa:	48 01 d5             	add    %rdx,%rbp
    8dad:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    8db1:	48 8d 5c 05 f8       	lea    -0x8(%rbp,%rax,1),%rbx
    8db6:	48 39 eb             	cmp    %rbp,%rbx
    8db9:	72 10                	jb     8dcb <uninit_global_object+0xab>
    8dbb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8dc0:	ff 13                	call   *(%rbx)
    8dc2:	48 83 eb 08          	sub    $0x8,%rbx
    8dc6:	48 39 eb             	cmp    %rbp,%rbx
    8dc9:	73 f5                	jae    8dc0 <uninit_global_object+0xa0>
    8dcb:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    8dd0:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    8dd7:	00 00 
    8dd9:	75 07                	jne    8de2 <uninit_global_object+0xc2>
    8ddb:	48 83 c4 28          	add    $0x28,%rsp
    8ddf:	5b                   	pop    %rbx
    8de0:	5d                   	pop    %rbp
    8de1:	c3                   	ret    
    8de2:	e8 b9 7b 00 00       	call   109a0 <__stack_chk_fail>
    8de7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    8dee:	00 00 

0000000000008df0 <__tls_get_addr>:
    8df0:	f3 0f 1e fa          	endbr64 
    8df4:	53                   	push   %rbx
    8df5:	48 89 fb             	mov    %rdi,%rbx
    8df8:	e8 46 93 00 00       	call   12143 <get_thread_data>
    8dfd:	48 8b 40 68          	mov    0x68(%rax),%rax
    8e01:	48 03 43 08          	add    0x8(%rbx),%rax
    8e05:	5b                   	pop    %rbx
    8e06:	c3                   	ret    
    8e07:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    8e0e:	00 00 

0000000000008e10 <bit_array_new>:
    8e10:	f3 0f 1e fa          	endbr64 
    8e14:	41 54                	push   %r12
    8e16:	55                   	push   %rbp
    8e17:	53                   	push   %rbx
    8e18:	48 85 ff             	test   %rdi,%rdi
    8e1b:	74 63                	je     8e80 <bit_array_new+0x70>
    8e1d:	48 8d 47 07          	lea    0x7(%rdi),%rax
    8e21:	48 89 fb             	mov    %rdi,%rbx
    8e24:	48 89 c2             	mov    %rax,%rdx
    8e27:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    8e2b:	48 39 fa             	cmp    %rdi,%rdx
    8e2e:	72 50                	jb     8e80 <bit_array_new+0x70>
    8e30:	48 c1 e8 03          	shr    $0x3,%rax
    8e34:	bf 18 00 00 00       	mov    $0x18,%edi
    8e39:	49 89 c4             	mov    %rax,%r12
    8e3c:	e8 9f 25 00 00       	call   b3e0 <emalloc>
    8e41:	48 89 c5             	mov    %rax,%rbp
    8e44:	48 85 c0             	test   %rax,%rax
    8e47:	74 37                	je     8e80 <bit_array_new+0x70>
    8e49:	4c 89 20             	mov    %r12,(%rax)
    8e4c:	4c 89 e7             	mov    %r12,%rdi
    8e4f:	48 89 58 08          	mov    %rbx,0x8(%rax)
    8e53:	e8 88 25 00 00       	call   b3e0 <emalloc>
    8e58:	48 89 45 10          	mov    %rax,0x10(%rbp)
    8e5c:	48 85 c0             	test   %rax,%rax
    8e5f:	74 0f                	je     8e70 <bit_array_new+0x60>
    8e61:	48 89 e8             	mov    %rbp,%rax
    8e64:	5b                   	pop    %rbx
    8e65:	5d                   	pop    %rbp
    8e66:	41 5c                	pop    %r12
    8e68:	c3                   	ret    
    8e69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8e70:	48 89 ef             	mov    %rbp,%rdi
    8e73:	e8 e8 27 00 00       	call   b660 <efree>
    8e78:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    8e7f:	00 
    8e80:	31 ed                	xor    %ebp,%ebp
    8e82:	eb dd                	jmp    8e61 <bit_array_new+0x51>
    8e84:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8e8b:	00 00 00 
    8e8e:	66 90                	xchg   %ax,%ax

0000000000008e90 <bit_array_new_set>:
    8e90:	f3 0f 1e fa          	endbr64 
    8e94:	53                   	push   %rbx
    8e95:	e8 76 ff ff ff       	call   8e10 <bit_array_new>
    8e9a:	48 89 c3             	mov    %rax,%rbx
    8e9d:	48 85 c0             	test   %rax,%rax
    8ea0:	74 11                	je     8eb3 <bit_array_new_set+0x23>
    8ea2:	48 8b 10             	mov    (%rax),%rdx
    8ea5:	48 8b 78 10          	mov    0x10(%rax),%rdi
    8ea9:	be ff 00 00 00       	mov    $0xff,%esi
    8eae:	e8 0d 7a 00 00       	call   108c0 <memset>
    8eb3:	48 89 d8             	mov    %rbx,%rax
    8eb6:	5b                   	pop    %rbx
    8eb7:	c3                   	ret    
    8eb8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    8ebf:	00 

0000000000008ec0 <bit_array_new_reset>:
    8ec0:	f3 0f 1e fa          	endbr64 
    8ec4:	53                   	push   %rbx
    8ec5:	e8 46 ff ff ff       	call   8e10 <bit_array_new>
    8eca:	48 89 c3             	mov    %rax,%rbx
    8ecd:	48 85 c0             	test   %rax,%rax
    8ed0:	74 0e                	je     8ee0 <bit_array_new_reset+0x20>
    8ed2:	48 8b 10             	mov    (%rax),%rdx
    8ed5:	48 8b 78 10          	mov    0x10(%rax),%rdi
    8ed9:	31 f6                	xor    %esi,%esi
    8edb:	e8 e0 79 00 00       	call   108c0 <memset>
    8ee0:	48 89 d8             	mov    %rbx,%rax
    8ee3:	5b                   	pop    %rbx
    8ee4:	c3                   	ret    
    8ee5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8eec:	00 00 00 
    8eef:	90                   	nop

0000000000008ef0 <bit_array_delete>:
    8ef0:	f3 0f 1e fa          	endbr64 
    8ef4:	53                   	push   %rbx
    8ef5:	48 89 fb             	mov    %rdi,%rbx
    8ef8:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    8efc:	e8 5f 27 00 00       	call   b660 <efree>
    8f01:	48 89 df             	mov    %rbx,%rdi
    8f04:	5b                   	pop    %rbx
    8f05:	e9 56 27 00 00       	jmp    b660 <efree>
    8f0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000008f10 <bit_array_test>:
    8f10:	f3 0f 1e fa          	endbr64 
    8f14:	48 89 f1             	mov    %rsi,%rcx
    8f17:	48 89 f2             	mov    %rsi,%rdx
    8f1a:	48 8b 77 10          	mov    0x10(%rdi),%rsi
    8f1e:	b8 01 00 00 00       	mov    $0x1,%eax
    8f23:	83 e1 07             	and    $0x7,%ecx
    8f26:	48 c1 ea 03          	shr    $0x3,%rdx
    8f2a:	d3 e0                	shl    %cl,%eax
    8f2c:	84 04 16             	test   %al,(%rsi,%rdx,1)
    8f2f:	0f 95 c0             	setne  %al
    8f32:	c3                   	ret    
    8f33:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8f3a:	00 00 00 
    8f3d:	0f 1f 00             	nopl   (%rax)

0000000000008f40 <set_mask>:
    8f40:	f3 0f 1e fa          	endbr64 
    8f44:	89 f1                	mov    %esi,%ecx
    8f46:	b8 01 00 00 00       	mov    $0x1,%eax
    8f4b:	d3 e0                	shl    %cl,%eax
    8f4d:	89 f9                	mov    %edi,%ecx
    8f4f:	83 e8 01             	sub    $0x1,%eax
    8f52:	d3 e0                	shl    %cl,%eax
    8f54:	c3                   	ret    
    8f55:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8f5c:	00 00 00 
    8f5f:	90                   	nop

0000000000008f60 <bit_array_test_range>:
    8f60:	f3 0f 1e fa          	endbr64 
    8f64:	48 89 f0             	mov    %rsi,%rax
    8f67:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    8f6b:	83 e6 07             	and    $0x7,%esi
    8f6e:	b9 08 00 00 00       	mov    $0x8,%ecx
    8f73:	48 c1 e8 03          	shr    $0x3,%rax
    8f77:	48 29 f1             	sub    %rsi,%rcx
    8f7a:	44 0f b6 0c 07       	movzbl (%rdi,%rax,1),%r9d
    8f7f:	48 39 d1             	cmp    %rdx,%rcx
    8f82:	72 24                	jb     8fa8 <bit_array_test_range+0x48>
    8f84:	89 d1                	mov    %edx,%ecx
    8f86:	b8 01 00 00 00       	mov    $0x1,%eax
    8f8b:	41 f7 d1             	not    %r9d
    8f8e:	d3 e0                	shl    %cl,%eax
    8f90:	89 f1                	mov    %esi,%ecx
    8f92:	83 e8 01             	sub    $0x1,%eax
    8f95:	d3 e0                	shl    %cl,%eax
    8f97:	41 84 c1             	test   %al,%r9b
    8f9a:	41 0f 94 c2          	sete   %r10b
    8f9e:	44 89 d0             	mov    %r10d,%eax
    8fa1:	c3                   	ret    
    8fa2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8fa8:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    8fae:	41 f7 d1             	not    %r9d
    8fb1:	45 31 d2             	xor    %r10d,%r10d
    8fb4:	41 d3 e0             	shl    %cl,%r8d
    8fb7:	89 f1                	mov    %esi,%ecx
    8fb9:	41 83 e8 01          	sub    $0x1,%r8d
    8fbd:	41 d3 e0             	shl    %cl,%r8d
    8fc0:	45 84 c1             	test   %r8b,%r9b
    8fc3:	75 d9                	jne    8f9e <bit_array_test_range+0x3e>
    8fc5:	48 8d 4c 16 f8       	lea    -0x8(%rsi,%rdx,1),%rcx
    8fca:	48 83 f9 07          	cmp    $0x7,%rcx
    8fce:	77 12                	ja     8fe2 <bit_array_test_range+0x82>
    8fd0:	eb 26                	jmp    8ff8 <bit_array_test_range+0x98>
    8fd2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8fd8:	48 83 e9 08          	sub    $0x8,%rcx
    8fdc:	48 83 f9 07          	cmp    $0x7,%rcx
    8fe0:	76 16                	jbe    8ff8 <bit_array_test_range+0x98>
    8fe2:	48 83 c0 01          	add    $0x1,%rax
    8fe6:	80 3c 07 ff          	cmpb   $0xff,(%rdi,%rax,1)
    8fea:	74 ec                	je     8fd8 <bit_array_test_range+0x78>
    8fec:	45 31 d2             	xor    %r10d,%r10d
    8fef:	44 89 d0             	mov    %r10d,%eax
    8ff2:	c3                   	ret    
    8ff3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8ff8:	41 ba 01 00 00 00    	mov    $0x1,%r10d
    8ffe:	48 85 c9             	test   %rcx,%rcx
    9001:	74 9b                	je     8f9e <bit_array_test_range+0x3e>
    9003:	ba 01 00 00 00       	mov    $0x1,%edx
    9008:	0f b6 74 07 01       	movzbl 0x1(%rdi,%rax,1),%esi
    900d:	d3 e2                	shl    %cl,%edx
    900f:	83 ea 01             	sub    $0x1,%edx
    9012:	21 d6                	and    %edx,%esi
    9014:	40 38 d6             	cmp    %dl,%sil
    9017:	41 0f 94 c2          	sete   %r10b
    901b:	eb 81                	jmp    8f9e <bit_array_test_range+0x3e>
    901d:	0f 1f 00             	nopl   (%rax)

0000000000009020 <bit_array_test_range_any>:
    9020:	f3 0f 1e fa          	endbr64 
    9024:	49 89 f8             	mov    %rdi,%r8
    9027:	48 89 f0             	mov    %rsi,%rax
    902a:	48 89 d7             	mov    %rdx,%rdi
    902d:	83 e6 07             	and    $0x7,%esi
    9030:	49 8b 50 10          	mov    0x10(%r8),%rdx
    9034:	b9 08 00 00 00       	mov    $0x8,%ecx
    9039:	48 c1 e8 03          	shr    $0x3,%rax
    903d:	48 29 f1             	sub    %rsi,%rcx
    9040:	44 0f b6 0c 02       	movzbl (%rdx,%rax,1),%r9d
    9045:	48 39 f9             	cmp    %rdi,%rcx
    9048:	72 1e                	jb     9068 <bit_array_test_range_any+0x48>
    904a:	89 f9                	mov    %edi,%ecx
    904c:	b8 01 00 00 00       	mov    $0x1,%eax
    9051:	d3 e0                	shl    %cl,%eax
    9053:	89 f1                	mov    %esi,%ecx
    9055:	83 e8 01             	sub    $0x1,%eax
    9058:	d3 e0                	shl    %cl,%eax
    905a:	41 84 c1             	test   %al,%r9b
    905d:	41 0f 95 c2          	setne  %r10b
    9061:	44 89 d0             	mov    %r10d,%eax
    9064:	c3                   	ret    
    9065:	0f 1f 00             	nopl   (%rax)
    9068:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    906e:	41 ba 01 00 00 00    	mov    $0x1,%r10d
    9074:	41 d3 e0             	shl    %cl,%r8d
    9077:	89 f1                	mov    %esi,%ecx
    9079:	41 83 e8 01          	sub    $0x1,%r8d
    907d:	41 d3 e0             	shl    %cl,%r8d
    9080:	45 84 c1             	test   %r8b,%r9b
    9083:	75 dc                	jne    9061 <bit_array_test_range_any+0x41>
    9085:	48 8d 4c 3e f8       	lea    -0x8(%rsi,%rdi,1),%rcx
    908a:	48 83 f9 07          	cmp    $0x7,%rcx
    908e:	77 12                	ja     90a2 <bit_array_test_range_any+0x82>
    9090:	eb 2e                	jmp    90c0 <bit_array_test_range_any+0xa0>
    9092:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9098:	48 83 e9 08          	sub    $0x8,%rcx
    909c:	48 83 f9 07          	cmp    $0x7,%rcx
    90a0:	76 1e                	jbe    90c0 <bit_array_test_range_any+0xa0>
    90a2:	48 83 c0 01          	add    $0x1,%rax
    90a6:	80 3c 02 00          	cmpb   $0x0,(%rdx,%rax,1)
    90aa:	74 ec                	je     9098 <bit_array_test_range_any+0x78>
    90ac:	41 ba 01 00 00 00    	mov    $0x1,%r10d
    90b2:	44 89 d0             	mov    %r10d,%eax
    90b5:	c3                   	ret    
    90b6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    90bd:	00 00 00 
    90c0:	45 31 d2             	xor    %r10d,%r10d
    90c3:	48 85 c9             	test   %rcx,%rcx
    90c6:	74 99                	je     9061 <bit_array_test_range_any+0x41>
    90c8:	be 01 00 00 00       	mov    $0x1,%esi
    90cd:	d3 e6                	shl    %cl,%esi
    90cf:	83 ee 01             	sub    $0x1,%esi
    90d2:	40 84 74 02 01       	test   %sil,0x1(%rdx,%rax,1)
    90d7:	41 0f 95 c2          	setne  %r10b
    90db:	eb 84                	jmp    9061 <bit_array_test_range_any+0x41>
    90dd:	0f 1f 00             	nopl   (%rax)

00000000000090e0 <bit_array_set>:
    90e0:	f3 0f 1e fa          	endbr64 
    90e4:	48 89 f1             	mov    %rsi,%rcx
    90e7:	48 89 f0             	mov    %rsi,%rax
    90ea:	ba 01 00 00 00       	mov    $0x1,%edx
    90ef:	48 c1 e8 03          	shr    $0x3,%rax
    90f3:	83 e1 07             	and    $0x7,%ecx
    90f6:	48 03 47 10          	add    0x10(%rdi),%rax
    90fa:	d3 e2                	shl    %cl,%edx
    90fc:	08 10                	or     %dl,(%rax)
    90fe:	c3                   	ret    
    90ff:	90                   	nop

0000000000009100 <bit_array_set_range>:
    9100:	f3 0f 1e fa          	endbr64 
    9104:	48 89 f0             	mov    %rsi,%rax
    9107:	4c 8b 4f 10          	mov    0x10(%rdi),%r9
    910b:	83 e6 07             	and    $0x7,%esi
    910e:	b9 08 00 00 00       	mov    $0x8,%ecx
    9113:	48 c1 e8 03          	shr    $0x3,%rax
    9117:	48 29 f1             	sub    %rsi,%rcx
    911a:	49 89 d0             	mov    %rdx,%r8
    911d:	49 01 c1             	add    %rax,%r9
    9120:	45 0f b6 11          	movzbl (%r9),%r10d
    9124:	48 39 d1             	cmp    %rdx,%rcx
    9127:	73 67                	jae    9190 <bit_array_set_range+0x90>
    9129:	ba 01 00 00 00       	mov    $0x1,%edx
    912e:	d3 e2                	shl    %cl,%edx
    9130:	89 f1                	mov    %esi,%ecx
    9132:	83 ea 01             	sub    $0x1,%edx
    9135:	d3 e2                	shl    %cl,%edx
    9137:	4a 8d 4c 06 f8       	lea    -0x8(%rsi,%r8,1),%rcx
    913c:	41 09 d2             	or     %edx,%r10d
    913f:	45 88 11             	mov    %r10b,(%r9)
    9142:	48 83 f9 07          	cmp    $0x7,%rcx
    9146:	76 68                	jbe    91b0 <bit_array_set_range+0xb0>
    9148:	48 8d 51 f8          	lea    -0x8(%rcx),%rdx
    914c:	48 83 c0 01          	add    $0x1,%rax
    9150:	48 c1 ea 03          	shr    $0x3,%rdx
    9154:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
    9158:	eb 0a                	jmp    9164 <bit_array_set_range+0x64>
    915a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9160:	48 83 c0 01          	add    $0x1,%rax
    9164:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    9168:	c6 04 02 ff          	movb   $0xff,(%rdx,%rax,1)
    916c:	48 39 f0             	cmp    %rsi,%rax
    916f:	75 ef                	jne    9160 <bit_array_set_range+0x60>
    9171:	83 e1 07             	and    $0x7,%ecx
    9174:	48 85 c9             	test   %rcx,%rcx
    9177:	74 12                	je     918b <bit_array_set_range+0x8b>
    9179:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    917d:	b8 01 00 00 00       	mov    $0x1,%eax
    9182:	d3 e0                	shl    %cl,%eax
    9184:	83 e8 01             	sub    $0x1,%eax
    9187:	08 44 32 01          	or     %al,0x1(%rdx,%rsi,1)
    918b:	c3                   	ret    
    918c:	0f 1f 40 00          	nopl   0x0(%rax)
    9190:	89 d1                	mov    %edx,%ecx
    9192:	b8 01 00 00 00       	mov    $0x1,%eax
    9197:	d3 e0                	shl    %cl,%eax
    9199:	89 f1                	mov    %esi,%ecx
    919b:	83 e8 01             	sub    $0x1,%eax
    919e:	d3 e0                	shl    %cl,%eax
    91a0:	44 09 d0             	or     %r10d,%eax
    91a3:	41 88 01             	mov    %al,(%r9)
    91a6:	c3                   	ret    
    91a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    91ae:	00 00 
    91b0:	48 89 c6             	mov    %rax,%rsi
    91b3:	eb bf                	jmp    9174 <bit_array_set_range+0x74>
    91b5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    91bc:	00 00 00 
    91bf:	90                   	nop

00000000000091c0 <bit_array_set_all>:
    91c0:	f3 0f 1e fa          	endbr64 
    91c4:	48 8b 17             	mov    (%rdi),%rdx
    91c7:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    91cb:	be ff 00 00 00       	mov    $0xff,%esi
    91d0:	e9 eb 76 00 00       	jmp    108c0 <memset>
    91d5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    91dc:	00 00 00 
    91df:	90                   	nop

00000000000091e0 <clear_mask>:
    91e0:	f3 0f 1e fa          	endbr64 
    91e4:	89 f1                	mov    %esi,%ecx
    91e6:	b8 01 00 00 00       	mov    $0x1,%eax
    91eb:	d3 e0                	shl    %cl,%eax
    91ed:	89 f9                	mov    %edi,%ecx
    91ef:	83 e8 01             	sub    $0x1,%eax
    91f2:	d3 e0                	shl    %cl,%eax
    91f4:	f7 d0                	not    %eax
    91f6:	c3                   	ret    
    91f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    91fe:	00 00 

0000000000009200 <bit_array_reset_range>:
    9200:	f3 0f 1e fa          	endbr64 
    9204:	48 89 f0             	mov    %rsi,%rax
    9207:	4c 8b 4f 10          	mov    0x10(%rdi),%r9
    920b:	83 e6 07             	and    $0x7,%esi
    920e:	b9 08 00 00 00       	mov    $0x8,%ecx
    9213:	48 c1 e8 03          	shr    $0x3,%rax
    9217:	48 29 f1             	sub    %rsi,%rcx
    921a:	49 89 d0             	mov    %rdx,%r8
    921d:	49 01 c1             	add    %rax,%r9
    9220:	45 0f b6 11          	movzbl (%r9),%r10d
    9224:	48 39 d1             	cmp    %rdx,%rcx
    9227:	73 67                	jae    9290 <bit_array_reset_range+0x90>
    9229:	ba 01 00 00 00       	mov    $0x1,%edx
    922e:	d3 e2                	shl    %cl,%edx
    9230:	89 f1                	mov    %esi,%ecx
    9232:	83 ea 01             	sub    $0x1,%edx
    9235:	d3 e2                	shl    %cl,%edx
    9237:	4a 8d 4c 06 f8       	lea    -0x8(%rsi,%r8,1),%rcx
    923c:	f7 d2                	not    %edx
    923e:	44 21 d2             	and    %r10d,%edx
    9241:	41 88 11             	mov    %dl,(%r9)
    9244:	48 83 f9 07          	cmp    $0x7,%rcx
    9248:	76 66                	jbe    92b0 <bit_array_reset_range+0xb0>
    924a:	48 8d 51 f8          	lea    -0x8(%rcx),%rdx
    924e:	48 83 c0 01          	add    $0x1,%rax
    9252:	48 c1 ea 03          	shr    $0x3,%rdx
    9256:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
    925a:	eb 08                	jmp    9264 <bit_array_reset_range+0x64>
    925c:	0f 1f 40 00          	nopl   0x0(%rax)
    9260:	48 83 c0 01          	add    $0x1,%rax
    9264:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    9268:	c6 04 02 00          	movb   $0x0,(%rdx,%rax,1)
    926c:	48 39 f0             	cmp    %rsi,%rax
    926f:	75 ef                	jne    9260 <bit_array_reset_range+0x60>
    9271:	83 e1 07             	and    $0x7,%ecx
    9274:	48 85 c9             	test   %rcx,%rcx
    9277:	74 0f                	je     9288 <bit_array_reset_range+0x88>
    9279:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    927d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    9282:	d3 e0                	shl    %cl,%eax
    9284:	20 44 32 01          	and    %al,0x1(%rdx,%rsi,1)
    9288:	c3                   	ret    
    9289:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9290:	89 d1                	mov    %edx,%ecx
    9292:	b8 01 00 00 00       	mov    $0x1,%eax
    9297:	d3 e0                	shl    %cl,%eax
    9299:	89 f1                	mov    %esi,%ecx
    929b:	83 e8 01             	sub    $0x1,%eax
    929e:	d3 e0                	shl    %cl,%eax
    92a0:	f7 d0                	not    %eax
    92a2:	44 21 d0             	and    %r10d,%eax
    92a5:	41 88 01             	mov    %al,(%r9)
    92a8:	c3                   	ret    
    92a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    92b0:	48 89 c6             	mov    %rax,%rsi
    92b3:	eb bf                	jmp    9274 <bit_array_reset_range+0x74>
    92b5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    92bc:	00 00 00 
    92bf:	90                   	nop

00000000000092c0 <bit_array_reset_all>:
    92c0:	f3 0f 1e fa          	endbr64 
    92c4:	48 8b 17             	mov    (%rdi),%rdx
    92c7:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    92cb:	31 f6                	xor    %esi,%esi
    92cd:	e9 ee 75 00 00       	jmp    108c0 <memset>
    92d2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    92d9:	00 00 00 
    92dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000092e0 <bit_array_reattach>:
    92e0:	f3 0f 1e fa          	endbr64 
    92e4:	41 54                	push   %r12
    92e6:	49 89 d4             	mov    %rdx,%r12
    92e9:	55                   	push   %rbp
    92ea:	48 89 f5             	mov    %rsi,%rbp
    92ed:	53                   	push   %rbx
    92ee:	48 89 fb             	mov    %rdi,%rbx
    92f1:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    92f5:	48 85 ff             	test   %rdi,%rdi
    92f8:	74 05                	je     92ff <bit_array_reattach+0x1f>
    92fa:	e8 61 23 00 00       	call   b660 <efree>
    92ff:	48 8d 45 07          	lea    0x7(%rbp),%rax
    9303:	48 89 6b 08          	mov    %rbp,0x8(%rbx)
    9307:	48 c1 e8 03          	shr    $0x3,%rax
    930b:	4c 89 63 10          	mov    %r12,0x10(%rbx)
    930f:	48 89 03             	mov    %rax,(%rbx)
    9312:	5b                   	pop    %rbx
    9313:	5d                   	pop    %rbp
    9314:	41 5c                	pop    %r12
    9316:	c3                   	ret    
    9317:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    931e:	00 00 

0000000000009320 <bit_array_split>:
    9320:	f3 0f 1e fa          	endbr64 
    9324:	41 57                	push   %r15
    9326:	41 56                	push   %r14
    9328:	41 55                	push   %r13
    932a:	41 54                	push   %r12
    932c:	55                   	push   %rbp
    932d:	53                   	push   %rbx
    932e:	48 89 fb             	mov    %rdi,%rbx
    9331:	48 83 ec 38          	sub    $0x38,%rsp
    9335:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    933a:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    933f:	48 85 f6             	test   %rsi,%rsi
    9342:	0f 84 88 01 00 00    	je     94d0 <bit_array_split+0x1b0>
    9348:	4c 8b 77 08          	mov    0x8(%rdi),%r14
    934c:	45 31 e4             	xor    %r12d,%r12d
    934f:	4c 39 f6             	cmp    %r14,%rsi
    9352:	72 24                	jb     9378 <bit_array_split+0x58>
    9354:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    9359:	48 89 18             	mov    %rbx,(%rax)
    935c:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    9361:	4c 89 20             	mov    %r12,(%rax)
    9364:	31 c0                	xor    %eax,%eax
    9366:	48 83 c4 38          	add    $0x38,%rsp
    936a:	5b                   	pop    %rbx
    936b:	5d                   	pop    %rbp
    936c:	41 5c                	pop    %r12
    936e:	41 5d                	pop    %r13
    9370:	41 5e                	pop    %r14
    9372:	41 5f                	pop    %r15
    9374:	c3                   	ret    
    9375:	0f 1f 00             	nopl   (%rax)
    9378:	48 8d 46 07          	lea    0x7(%rsi),%rax
    937c:	48 89 f5             	mov    %rsi,%rbp
    937f:	41 89 f7             	mov    %esi,%r15d
    9382:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
    9387:	48 c1 e8 03          	shr    $0x3,%rax
    938b:	49 29 f6             	sub    %rsi,%r14
    938e:	48 c1 ed 03          	shr    $0x3,%rbp
    9392:	41 83 e7 07          	and    $0x7,%r15d
    9396:	48 89 c7             	mov    %rax,%rdi
    9399:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    939e:	e8 3d 20 00 00       	call   b3e0 <emalloc>
    93a3:	49 89 c5             	mov    %rax,%r13
    93a6:	48 85 c0             	test   %rax,%rax
    93a9:	0f 84 98 01 00 00    	je     9547 <bit_array_split+0x227>
    93af:	48 85 ed             	test   %rbp,%rbp
    93b2:	0f 84 80 01 00 00    	je     9538 <bit_array_split+0x218>
    93b8:	31 c0                	xor    %eax,%eax
    93ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    93c0:	48 8b 53 10          	mov    0x10(%rbx),%rdx
    93c4:	0f b6 14 02          	movzbl (%rdx,%rax,1),%edx
    93c8:	41 88 54 05 00       	mov    %dl,0x0(%r13,%rax,1)
    93cd:	48 83 c0 01          	add    $0x1,%rax
    93d1:	48 39 c5             	cmp    %rax,%rbp
    93d4:	75 ea                	jne    93c0 <bit_array_split+0xa0>
    93d6:	48 89 ea             	mov    %rbp,%rdx
    93d9:	45 84 ff             	test   %r15b,%r15b
    93dc:	0f 85 fe 00 00 00    	jne    94e0 <bit_array_split+0x1c0>
    93e2:	4c 89 f7             	mov    %r14,%rdi
    93e5:	e8 26 fa ff ff       	call   8e10 <bit_array_new>
    93ea:	49 89 c4             	mov    %rax,%r12
    93ed:	48 85 c0             	test   %rax,%rax
    93f0:	0f 84 49 01 00 00    	je     953f <bit_array_split+0x21f>
    93f6:	49 89 ea             	mov    %rbp,%r10
    93f9:	31 d2                	xor    %edx,%edx
    93fb:	49 83 fe 07          	cmp    $0x7,%r14
    93ff:	76 78                	jbe    9479 <bit_array_split+0x159>
    9401:	49 8d 46 f8          	lea    -0x8(%r14),%rax
    9405:	45 0f b6 df          	movzbl %r15b,%r11d
    9409:	41 b9 08 00 00 00    	mov    $0x8,%r9d
    940f:	31 ff                	xor    %edi,%edi
    9411:	48 c1 e8 03          	shr    $0x3,%rax
    9415:	48 8d 55 01          	lea    0x1(%rbp),%rdx
    9419:	44 88 7c 24 2f       	mov    %r15b,0x2f(%rsp)
    941e:	45 29 d9             	sub    %r11d,%r9d
    9421:	48 89 c6             	mov    %rax,%rsi
    9424:	4c 8d 14 02          	lea    (%rdx,%rax,1),%r10
    9428:	eb 0a                	jmp    9434 <bit_array_split+0x114>
    942a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9430:	48 83 c2 01          	add    $0x1,%rdx
    9434:	4c 8b 43 10          	mov    0x10(%rbx),%r8
    9438:	48 89 e8             	mov    %rbp,%rax
    943b:	44 89 d9             	mov    %r11d,%ecx
    943e:	49 89 ff             	mov    %rdi,%r15
    9441:	48 89 d5             	mov    %rdx,%rbp
    9444:	48 83 c7 01          	add    $0x1,%rdi
    9448:	41 0f b6 04 00       	movzbl (%r8,%rax,1),%eax
    944d:	45 0f b6 04 10       	movzbl (%r8,%rdx,1),%r8d
    9452:	d3 f8                	sar    %cl,%eax
    9454:	44 89 c9             	mov    %r9d,%ecx
    9457:	41 d3 e0             	shl    %cl,%r8d
    945a:	49 8b 4c 24 10       	mov    0x10(%r12),%rcx
    945f:	44 09 c0             	or     %r8d,%eax
    9462:	42 88 04 39          	mov    %al,(%rcx,%r15,1)
    9466:	4c 39 d2             	cmp    %r10,%rdx
    9469:	75 c5                	jne    9430 <bit_array_split+0x110>
    946b:	44 0f b6 7c 24 2f    	movzbl 0x2f(%rsp),%r15d
    9471:	48 8d 56 01          	lea    0x1(%rsi),%rdx
    9475:	41 83 e6 07          	and    $0x7,%r14d
    9479:	b8 08 00 00 00       	mov    $0x8,%eax
    947e:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    9482:	44 29 f8             	sub    %r15d,%eax
    9485:	48 0f be c0          	movsbq %al,%rax
    9489:	4c 39 f0             	cmp    %r14,%rax
    948c:	72 72                	jb     9500 <bit_array_split+0x1e0>
    948e:	4d 85 f6             	test   %r14,%r14
    9491:	74 16                	je     94a9 <bit_array_split+0x189>
    9493:	42 0f b6 04 17       	movzbl (%rdi,%r10,1),%eax
    9498:	49 8b 74 24 10       	mov    0x10(%r12),%rsi
    949d:	44 89 f9             	mov    %r15d,%ecx
    94a0:	d3 f8                	sar    %cl,%eax
    94a2:	88 04 16             	mov    %al,(%rsi,%rdx,1)
    94a5:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    94a9:	48 85 ff             	test   %rdi,%rdi
    94ac:	74 05                	je     94b3 <bit_array_split+0x193>
    94ae:	e8 ad 21 00 00       	call   b660 <efree>
    94b3:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    94b8:	4c 89 6b 10          	mov    %r13,0x10(%rbx)
    94bc:	48 89 03             	mov    %rax,(%rbx)
    94bf:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    94c4:	48 89 43 08          	mov    %rax,0x8(%rbx)
    94c8:	e9 87 fe ff ff       	jmp    9354 <bit_array_split+0x34>
    94cd:	0f 1f 00             	nopl   (%rax)
    94d0:	49 89 fc             	mov    %rdi,%r12
    94d3:	31 db                	xor    %ebx,%ebx
    94d5:	e9 7a fe ff ff       	jmp    9354 <bit_array_split+0x34>
    94da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    94e0:	48 8b 73 10          	mov    0x10(%rbx),%rsi
    94e4:	b8 01 00 00 00       	mov    $0x1,%eax
    94e9:	44 89 f9             	mov    %r15d,%ecx
    94ec:	d3 e0                	shl    %cl,%eax
    94ee:	83 e8 01             	sub    $0x1,%eax
    94f1:	22 04 16             	and    (%rsi,%rdx,1),%al
    94f4:	41 88 44 15 00       	mov    %al,0x0(%r13,%rdx,1)
    94f9:	e9 e4 fe ff ff       	jmp    93e2 <bit_array_split+0xc2>
    94fe:	66 90                	xchg   %ax,%ax
    9500:	42 0f b6 44 17 01    	movzbl 0x1(%rdi,%r10,1),%eax
    9506:	45 0f b6 c7          	movzbl %r15b,%r8d
    950a:	b9 08 00 00 00       	mov    $0x8,%ecx
    950f:	42 0f b6 3c 17       	movzbl (%rdi,%r10,1),%edi
    9514:	44 29 c1             	sub    %r8d,%ecx
    9517:	49 8b 74 24 10       	mov    0x10(%r12),%rsi
    951c:	d3 e0                	shl    %cl,%eax
    951e:	44 89 f9             	mov    %r15d,%ecx
    9521:	d3 ff                	sar    %cl,%edi
    9523:	09 f8                	or     %edi,%eax
    9525:	88 04 16             	mov    %al,(%rsi,%rdx,1)
    9528:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    952c:	e9 78 ff ff ff       	jmp    94a9 <bit_array_split+0x189>
    9531:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9538:	31 d2                	xor    %edx,%edx
    953a:	e9 9a fe ff ff       	jmp    93d9 <bit_array_split+0xb9>
    953f:	4c 89 ef             	mov    %r13,%rdi
    9542:	e8 19 21 00 00       	call   b660 <efree>
    9547:	b8 0c 00 00 00       	mov    $0xc,%eax
    954c:	e9 15 fe ff ff       	jmp    9366 <bit_array_split+0x46>
    9551:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    9558:	00 00 00 
    955b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000009560 <ema_do_uncommit_real>:
    9560:	55                   	push   %rbp
    9561:	48 89 e5             	mov    %rsp,%rbp
    9564:	41 57                	push   %r15
    9566:	41 56                	push   %r14
    9568:	41 55                	push   %r13
    956a:	41 54                	push   %r12
    956c:	53                   	push   %rbx
    956d:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    9571:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
    9578:	89 4c 24 28          	mov    %ecx,0x28(%rsp)
    957c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    9583:	00 00 
    9585:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
    958c:	00 
    958d:	48 8b 47 18          	mov    0x18(%rdi),%rax
    9591:	f6 47 10 01          	testb  $0x1,0x10(%rdi)
    9595:	0f 85 68 01 00 00    	jne    9703 <ema_do_uncommit_real+0x1a3>
    959b:	25 00 ff 00 00       	and    $0xff00,%eax
    95a0:	66 0f ef c0          	pxor   %xmm0,%xmm0
    95a4:	48 89 fb             	mov    %rdi,%rbx
    95a7:	49 89 f7             	mov    %rsi,%r15
    95aa:	89 44 24 24          	mov    %eax,0x24(%rsp)
    95ae:	8b 44 24 28          	mov    0x28(%rsp),%eax
    95b2:	49 89 d4             	mov    %rdx,%r12
    95b5:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
    95bc:	00 00 
    95be:	80 cc 04             	or     $0x4,%ah
    95c1:	0f 11 44 24 48       	movups %xmm0,0x48(%rsp)
    95c6:	48 c7 44 24 40 10 04 	movq   $0x410,0x40(%rsp)
    95cd:	00 00 
    95cf:	89 44 24 2c          	mov    %eax,0x2c(%rsp)
    95d3:	0f 11 44 24 58       	movups %xmm0,0x58(%rsp)
    95d8:	0f 11 44 24 68       	movups %xmm0,0x68(%rsp)
    95dd:	0f 1f 00             	nopl   (%rax)
    95e0:	4d 39 e7             	cmp    %r12,%r15
    95e3:	72 17                	jb     95fc <ema_do_uncommit_real+0x9c>
    95e5:	e9 19 01 00 00       	jmp    9703 <ema_do_uncommit_real+0x1a3>
    95ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    95f0:	49 81 c7 00 10 00 00 	add    $0x1000,%r15
    95f7:	4d 39 e7             	cmp    %r12,%r15
    95fa:	73 17                	jae    9613 <ema_do_uncommit_real+0xb3>
    95fc:	4c 89 fe             	mov    %r15,%rsi
    95ff:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    9603:	48 2b 33             	sub    (%rbx),%rsi
    9606:	48 c1 ee 0c          	shr    $0xc,%rsi
    960a:	e8 01 f9 ff ff       	call   8f10 <bit_array_test>
    960f:	84 c0                	test   %al,%al
    9611:	74 dd                	je     95f0 <ema_do_uncommit_real+0x90>
    9613:	4c 89 7c 24 38       	mov    %r15,0x38(%rsp)
    9618:	4d 39 fc             	cmp    %r15,%r12
    961b:	0f 84 e2 00 00 00    	je     9703 <ema_do_uncommit_real+0x1a3>
    9621:	49 81 c7 00 10 00 00 	add    $0x1000,%r15
    9628:	4d 39 e7             	cmp    %r12,%r15
    962b:	72 17                	jb     9644 <ema_do_uncommit_real+0xe4>
    962d:	e9 f5 00 00 00       	jmp    9727 <ema_do_uncommit_real+0x1c7>
    9632:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9638:	49 81 c7 00 10 00 00 	add    $0x1000,%r15
    963f:	4d 39 e7             	cmp    %r12,%r15
    9642:	73 17                	jae    965b <ema_do_uncommit_real+0xfb>
    9644:	4c 89 fe             	mov    %r15,%rsi
    9647:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    964b:	48 2b 33             	sub    (%rbx),%rsi
    964e:	48 c1 ee 0c          	shr    $0xc,%rsi
    9652:	e8 b9 f8 ff ff       	call   8f10 <bit_array_test>
    9657:	84 c0                	test   %al,%al
    9659:	75 dd                	jne    9638 <ema_do_uncommit_real+0xd8>
    965b:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
    9660:	4c 89 f8             	mov    %r15,%rax
    9663:	48 29 c8             	sub    %rcx,%rax
    9666:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    966b:	8b 54 24 24          	mov    0x24(%rsp),%edx
    966f:	8b 44 24 28          	mov    0x28(%rsp),%eax
    9673:	8b 4c 24 2c          	mov    0x2c(%rsp),%ecx
    9677:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
    967c:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
    9681:	09 c2                	or     %eax,%edx
    9683:	e8 08 c2 ff ff       	call   5890 <sgx_mm_modify_ocall>
    9688:	85 c0                	test   %eax,%eax
    968a:	75 70                	jne    96fc <ema_do_uncommit_real+0x19c>
    968c:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    9691:	4c 8d 6c 24 40       	lea    0x40(%rsp),%r13
    9696:	49 89 c6             	mov    %rax,%r14
    9699:	4c 39 f8             	cmp    %r15,%rax
    969c:	73 21                	jae    96bf <ema_do_uncommit_real+0x15f>
    969e:	66 90                	xchg   %ax,%ax
    96a0:	4c 89 f6             	mov    %r14,%rsi
    96a3:	4c 89 ef             	mov    %r13,%rdi
    96a6:	e8 14 8e 00 00       	call   124bf <do_eaccept>
    96ab:	85 c0                	test   %eax,%eax
    96ad:	0f 85 82 00 00 00    	jne    9735 <ema_do_uncommit_real+0x1d5>
    96b3:	49 81 c6 00 10 00 00 	add    $0x1000,%r14
    96ba:	4d 39 fe             	cmp    %r15,%r14
    96bd:	72 e1                	jb     96a0 <ema_do_uncommit_real+0x140>
    96bf:	4c 8b 74 24 30       	mov    0x30(%rsp),%r14
    96c4:	4c 8b 6c 24 38       	mov    0x38(%rsp),%r13
    96c9:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    96cd:	4c 89 f2             	mov    %r14,%rdx
    96d0:	4c 89 ee             	mov    %r13,%rsi
    96d3:	48 2b 33             	sub    (%rbx),%rsi
    96d6:	48 c1 ea 0c          	shr    $0xc,%rdx
    96da:	48 c1 ee 0c          	shr    $0xc,%rsi
    96de:	e8 1d fb ff ff       	call   9200 <bit_array_reset_range>
    96e3:	8b 4c 24 2c          	mov    0x2c(%rsp),%ecx
    96e7:	4c 89 f6             	mov    %r14,%rsi
    96ea:	4c 89 ef             	mov    %r13,%rdi
    96ed:	89 ca                	mov    %ecx,%edx
    96ef:	e8 9c c1 ff ff       	call   5890 <sgx_mm_modify_ocall>
    96f4:	85 c0                	test   %eax,%eax
    96f6:	0f 84 e4 fe ff ff    	je     95e0 <ema_do_uncommit_real+0x80>
    96fc:	b8 0e 00 00 00       	mov    $0xe,%eax
    9701:	eb 02                	jmp    9705 <ema_do_uncommit_real+0x1a5>
    9703:	31 c0                	xor    %eax,%eax
    9705:	48 8b 94 24 b8 00 00 	mov    0xb8(%rsp),%rdx
    970c:	00 
    970d:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    9714:	00 00 
    9716:	75 22                	jne    973a <ema_do_uncommit_real+0x1da>
    9718:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    971c:	5b                   	pop    %rbx
    971d:	41 5c                	pop    %r12
    971f:	41 5d                	pop    %r13
    9721:	41 5e                	pop    %r14
    9723:	41 5f                	pop    %r15
    9725:	5d                   	pop    %rbp
    9726:	c3                   	ret    
    9727:	48 c7 44 24 30 00 10 	movq   $0x1000,0x30(%rsp)
    972e:	00 00 
    9730:	e9 36 ff ff ff       	jmp    966b <ema_do_uncommit_real+0x10b>
    9735:	e8 fd 8d 00 00       	call   12537 <abort>
    973a:	e8 61 72 00 00       	call   109a0 <__stack_chk_fail>
    973f:	90                   	nop

0000000000009740 <get_ema_alloc_flags>:
    9740:	f3 0f 1e fa          	endbr64 
    9744:	8b 47 10             	mov    0x10(%rdi),%eax
    9747:	c3                   	ret    
    9748:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    974f:	00 

0000000000009750 <get_ema_si_flags>:
    9750:	f3 0f 1e fa          	endbr64 
    9754:	48 8b 47 18          	mov    0x18(%rdi),%rax
    9758:	c3                   	ret    
    9759:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000009760 <ema_fault_handler>:
    9760:	f3 0f 1e fa          	endbr64 
    9764:	48 85 f6             	test   %rsi,%rsi
    9767:	74 07                	je     9770 <ema_fault_handler+0x10>
    9769:	48 8b 47 30          	mov    0x30(%rdi),%rax
    976d:	48 89 06             	mov    %rax,(%rsi)
    9770:	48 8b 47 28          	mov    0x28(%rdi),%rax
    9774:	c3                   	ret    
    9775:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    977c:	00 00 00 
    977f:	90                   	nop

0000000000009780 <ema_set_eaccept_full>:
    9780:	f3 0f 1e fa          	endbr64 
    9784:	53                   	push   %rbx
    9785:	48 89 fb             	mov    %rdi,%rbx
    9788:	48 8b 7f 20          	mov    0x20(%rdi),%rdi
    978c:	48 85 ff             	test   %rdi,%rdi
    978f:	74 0f                	je     97a0 <ema_set_eaccept_full+0x20>
    9791:	e8 2a fa ff ff       	call   91c0 <bit_array_set_all>
    9796:	31 c0                	xor    %eax,%eax
    9798:	5b                   	pop    %rbx
    9799:	c3                   	ret    
    979a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    97a0:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    97a4:	48 c1 ef 0c          	shr    $0xc,%rdi
    97a8:	e8 e3 f6 ff ff       	call   8e90 <bit_array_new_set>
    97ad:	48 89 43 20          	mov    %rax,0x20(%rbx)
    97b1:	48 85 c0             	test   %rax,%rax
    97b4:	75 e0                	jne    9796 <ema_set_eaccept_full+0x16>
    97b6:	b8 0c 00 00 00       	mov    $0xc,%eax
    97bb:	5b                   	pop    %rbx
    97bc:	c3                   	ret    
    97bd:	0f 1f 00             	nopl   (%rax)

00000000000097c0 <ema_clear_eaccept_full>:
    97c0:	f3 0f 1e fa          	endbr64 
    97c4:	53                   	push   %rbx
    97c5:	48 89 fb             	mov    %rdi,%rbx
    97c8:	48 8b 7f 20          	mov    0x20(%rdi),%rdi
    97cc:	48 85 ff             	test   %rdi,%rdi
    97cf:	74 0f                	je     97e0 <ema_clear_eaccept_full+0x20>
    97d1:	e8 ea fa ff ff       	call   92c0 <bit_array_reset_all>
    97d6:	31 c0                	xor    %eax,%eax
    97d8:	5b                   	pop    %rbx
    97d9:	c3                   	ret    
    97da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    97e0:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    97e4:	48 c1 ef 0c          	shr    $0xc,%rdi
    97e8:	e8 d3 f6 ff ff       	call   8ec0 <bit_array_new_reset>
    97ed:	48 89 43 20          	mov    %rax,0x20(%rbx)
    97f1:	48 85 c0             	test   %rax,%rax
    97f4:	75 e0                	jne    97d6 <ema_clear_eaccept_full+0x16>
    97f6:	b8 0c 00 00 00       	mov    $0xc,%eax
    97fb:	5b                   	pop    %rbx
    97fc:	c3                   	ret    
    97fd:	0f 1f 00             	nopl   (%rax)

0000000000009800 <ema_set_eaccept>:
    9800:	f3 0f 1e fa          	endbr64 
    9804:	48 85 ff             	test   %rdi,%rdi
    9807:	74 6f                	je     9878 <ema_set_eaccept+0x78>
    9809:	55                   	push   %rbp
    980a:	48 89 fd             	mov    %rdi,%rbp
    980d:	48 83 ec 10          	sub    $0x10,%rsp
    9811:	48 8b 07             	mov    (%rdi),%rax
    9814:	48 8b 7f 20          	mov    0x20(%rdi),%rdi
    9818:	48 29 c6             	sub    %rax,%rsi
    981b:	48 29 c2             	sub    %rax,%rdx
    981e:	48 c1 ee 0c          	shr    $0xc,%rsi
    9822:	48 c1 ea 0c          	shr    $0xc,%rdx
    9826:	48 85 ff             	test   %rdi,%rdi
    9829:	74 15                	je     9840 <ema_set_eaccept+0x40>
    982b:	48 29 f2             	sub    %rsi,%rdx
    982e:	e8 cd f8 ff ff       	call   9100 <bit_array_set_range>
    9833:	31 c0                	xor    %eax,%eax
    9835:	48 83 c4 10          	add    $0x10,%rsp
    9839:	5d                   	pop    %rbp
    983a:	c3                   	ret    
    983b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9840:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
    9844:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    9849:	48 89 34 24          	mov    %rsi,(%rsp)
    984d:	48 c1 ef 0c          	shr    $0xc,%rdi
    9851:	e8 6a f6 ff ff       	call   8ec0 <bit_array_new_reset>
    9856:	48 8b 34 24          	mov    (%rsp),%rsi
    985a:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    985f:	48 85 c0             	test   %rax,%rax
    9862:	48 89 45 20          	mov    %rax,0x20(%rbp)
    9866:	48 89 c7             	mov    %rax,%rdi
    9869:	75 c0                	jne    982b <ema_set_eaccept+0x2b>
    986b:	b8 0c 00 00 00       	mov    $0xc,%eax
    9870:	eb c3                	jmp    9835 <ema_set_eaccept+0x35>
    9872:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9878:	b8 16 00 00 00       	mov    $0x16,%eax
    987d:	c3                   	ret    
    987e:	66 90                	xchg   %ax,%ax

0000000000009880 <ema_page_committed>:
    9880:	f3 0f 1e fa          	endbr64 
    9884:	48 8b 47 20          	mov    0x20(%rdi),%rax
    9888:	48 85 c0             	test   %rax,%rax
    988b:	74 13                	je     98a0 <ema_page_committed+0x20>
    988d:	48 2b 37             	sub    (%rdi),%rsi
    9890:	48 89 c7             	mov    %rax,%rdi
    9893:	48 c1 ee 0c          	shr    $0xc,%rsi
    9897:	e9 74 f6 ff ff       	jmp    8f10 <bit_array_test>
    989c:	0f 1f 40 00          	nopl   0x0(%rax)
    98a0:	31 c0                	xor    %eax,%eax
    98a2:	c3                   	ret    
    98a3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    98aa:	00 00 00 
    98ad:	0f 1f 00             	nopl   (%rax)

00000000000098b0 <search_ema>:
    98b0:	f3 0f 1e fa          	endbr64 
    98b4:	48 8b 0f             	mov    (%rdi),%rcx
    98b7:	48 8b 41 38          	mov    0x38(%rcx),%rax
    98bb:	48 39 c1             	cmp    %rax,%rcx
    98be:	74 1a                	je     98da <search_ema+0x2a>
    98c0:	48 8b 10             	mov    (%rax),%rdx
    98c3:	48 39 d6             	cmp    %rdx,%rsi
    98c6:	72 09                	jb     98d1 <search_ema+0x21>
    98c8:	48 03 50 08          	add    0x8(%rax),%rdx
    98cc:	48 39 d6             	cmp    %rdx,%rsi
    98cf:	72 0b                	jb     98dc <search_ema+0x2c>
    98d1:	48 8b 40 38          	mov    0x38(%rax),%rax
    98d5:	48 39 c1             	cmp    %rax,%rcx
    98d8:	75 e6                	jne    98c0 <search_ema+0x10>
    98da:	31 c0                	xor    %eax,%eax
    98dc:	c3                   	ret    
    98dd:	0f 1f 00             	nopl   (%rax)

00000000000098e0 <insert_ema>:
    98e0:	f3 0f 1e fa          	endbr64 
    98e4:	48 8b 56 40          	mov    0x40(%rsi),%rdx
    98e8:	66 48 0f 6e c6       	movq   %rsi,%xmm0
    98ed:	48 89 f8             	mov    %rdi,%rax
    98f0:	66 48 0f 6e ca       	movq   %rdx,%xmm1
    98f5:	66 0f 6c c1          	punpcklqdq %xmm1,%xmm0
    98f9:	0f 11 47 38          	movups %xmm0,0x38(%rdi)
    98fd:	48 89 7a 38          	mov    %rdi,0x38(%rdx)
    9901:	48 89 7e 40          	mov    %rdi,0x40(%rsi)
    9905:	c3                   	ret    
    9906:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    990d:	00 00 00 

0000000000009910 <push_back_ema>:
    9910:	f3 0f 1e fa          	endbr64 
    9914:	48 8b 07             	mov    (%rdi),%rax
    9917:	48 8b 50 40          	mov    0x40(%rax),%rdx
    991b:	66 48 0f 6e c0       	movq   %rax,%xmm0
    9920:	66 48 0f 6e ca       	movq   %rdx,%xmm1
    9925:	66 0f 6c c1          	punpcklqdq %xmm1,%xmm0
    9929:	0f 11 46 38          	movups %xmm0,0x38(%rsi)
    992d:	48 89 72 38          	mov    %rsi,0x38(%rdx)
    9931:	48 89 70 40          	mov    %rsi,0x40(%rax)
    9935:	c3                   	ret    
    9936:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    993d:	00 00 00 

0000000000009940 <search_ema_range>:
    9940:	f3 0f 1e fa          	endbr64 
    9944:	4c 8b 0f             	mov    (%rdi),%r9
    9947:	49 89 fa             	mov    %rdi,%r10
    994a:	49 8b 41 38          	mov    0x38(%r9),%rax
    994e:	49 39 c1             	cmp    %rax,%r9
    9951:	75 0e                	jne    9961 <search_ema_range+0x21>
    9953:	eb 4b                	jmp    99a0 <search_ema_range+0x60>
    9955:	0f 1f 00             	nopl   (%rax)
    9958:	48 8b 40 38          	mov    0x38(%rax),%rax
    995c:	49 39 c1             	cmp    %rax,%r9
    995f:	74 3f                	je     99a0 <search_ema_range+0x60>
    9961:	48 8b 38             	mov    (%rax),%rdi
    9964:	48 03 78 08          	add    0x8(%rax),%rdi
    9968:	48 39 fe             	cmp    %rdi,%rsi
    996b:	73 eb                	jae    9958 <search_ema_range+0x18>
    996d:	49 39 c1             	cmp    %rax,%r9
    9970:	74 2e                	je     99a0 <search_ema_range+0x60>
    9972:	48 39 10             	cmp    %rdx,(%rax)
    9975:	73 29                	jae    99a0 <search_ema_range+0x60>
    9977:	48 89 01             	mov    %rax,(%rcx)
    997a:	49 8b 0a             	mov    (%r10),%rcx
    997d:	48 39 c1             	cmp    %rax,%rcx
    9980:	74 14                	je     9996 <search_ema_range+0x56>
    9982:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9988:	48 8b 40 38          	mov    0x38(%rax),%rax
    998c:	48 39 c1             	cmp    %rax,%rcx
    998f:	74 05                	je     9996 <search_ema_range+0x56>
    9991:	48 39 10             	cmp    %rdx,(%rax)
    9994:	72 f2                	jb     9988 <search_ema_range+0x48>
    9996:	31 d2                	xor    %edx,%edx
    9998:	49 89 00             	mov    %rax,(%r8)
    999b:	89 d0                	mov    %edx,%eax
    999d:	c3                   	ret    
    999e:	66 90                	xchg   %ax,%ax
    99a0:	48 c7 01 00 00 00 00 	movq   $0x0,(%rcx)
    99a7:	31 c0                	xor    %eax,%eax
    99a9:	ba ff ff ff ff       	mov    $0xffffffff,%edx
    99ae:	eb e8                	jmp    9998 <search_ema_range+0x58>

00000000000099b0 <ema_split>:
    99b0:	f3 0f 1e fa          	endbr64 
    99b4:	41 56                	push   %r14
    99b6:	41 89 d6             	mov    %edx,%r14d
    99b9:	41 55                	push   %r13
    99bb:	49 89 cd             	mov    %rcx,%r13
    99be:	41 54                	push   %r12
    99c0:	49 89 f4             	mov    %rsi,%r12
    99c3:	55                   	push   %rbp
    99c4:	53                   	push   %rbx
    99c5:	48 89 fb             	mov    %rdi,%rbx
    99c8:	bf 48 00 00 00       	mov    $0x48,%edi
    99cd:	48 83 ec 30          	sub    $0x30,%rsp
    99d1:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    99d8:	00 00 
    99da:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    99df:	31 c0                	xor    %eax,%eax
    99e1:	e8 fa 19 00 00       	call   b3e0 <emalloc>
    99e6:	48 85 c0             	test   %rax,%rax
    99e9:	0f 84 39 01 00 00    	je     9b28 <ema_split+0x178>
    99ef:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
    99f6:	00 00 
    99f8:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    99fc:	48 89 c5             	mov    %rax,%rbp
    99ff:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    9a06:	00 00 
    9a08:	48 85 ff             	test   %rdi,%rdi
    9a0b:	74 21                	je     9a2e <ema_split+0x7e>
    9a0d:	4c 89 e6             	mov    %r12,%rsi
    9a10:	48 8d 4c 24 20       	lea    0x20(%rsp),%rcx
    9a15:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
    9a1a:	48 2b 33             	sub    (%rbx),%rsi
    9a1d:	48 c1 ee 0c          	shr    $0xc,%rsi
    9a21:	e8 fa f8 ff ff       	call   9320 <bit_array_split>
    9a26:	85 c0                	test   %eax,%eax
    9a28:	0f 85 e2 00 00 00    	jne    9b10 <ema_split+0x160>
    9a2e:	ba 48 00 00 00       	mov    $0x48,%edx
    9a33:	48 89 de             	mov    %rbx,%rsi
    9a36:	48 89 ef             	mov    %rbp,%rdi
    9a39:	e8 42 6c 00 00       	call   10680 <memcpy>
    9a3e:	45 84 f6             	test   %r14b,%r14b
    9a41:	0f 85 99 00 00 00    	jne    9ae0 <ema_split+0x130>
    9a47:	48 8b 43 38          	mov    0x38(%rbx),%rax
    9a4b:	48 89 d9             	mov    %rbx,%rcx
    9a4e:	48 8b 50 40          	mov    0x40(%rax),%rdx
    9a52:	66 48 0f 6e c0       	movq   %rax,%xmm0
    9a57:	66 48 0f 6e da       	movq   %rdx,%xmm3
    9a5c:	66 0f 6c c3          	punpcklqdq %xmm3,%xmm0
    9a60:	0f 11 45 38          	movups %xmm0,0x38(%rbp)
    9a64:	48 89 6a 38          	mov    %rbp,0x38(%rdx)
    9a68:	48 89 ea             	mov    %rbp,%rdx
    9a6b:	48 89 68 40          	mov    %rbp,0x40(%rax)
    9a6f:	48 8b 03             	mov    (%rbx),%rax
    9a72:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    9a76:	4c 89 e7             	mov    %r12,%rdi
    9a79:	48 29 c7             	sub    %rax,%rdi
    9a7c:	66 48 0f 6e c0       	movq   %rax,%xmm0
    9a81:	48 01 f0             	add    %rsi,%rax
    9a84:	66 48 0f 6e cf       	movq   %rdi,%xmm1
    9a89:	4c 29 e0             	sub    %r12,%rax
    9a8c:	48 83 7b 20 00       	cmpq   $0x0,0x20(%rbx)
    9a91:	66 0f 6c c1          	punpcklqdq %xmm1,%xmm0
    9a95:	0f 11 01             	movups %xmm0,(%rcx)
    9a98:	4c 89 22             	mov    %r12,(%rdx)
    9a9b:	48 89 42 08          	mov    %rax,0x8(%rdx)
    9a9f:	74 12                	je     9ab3 <ema_split+0x103>
    9aa1:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    9aa6:	48 89 41 20          	mov    %rax,0x20(%rcx)
    9aaa:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    9aaf:	48 89 42 20          	mov    %rax,0x20(%rdx)
    9ab3:	49 89 6d 00          	mov    %rbp,0x0(%r13)
    9ab7:	31 c0                	xor    %eax,%eax
    9ab9:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    9abe:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    9ac5:	00 00 
    9ac7:	75 66                	jne    9b2f <ema_split+0x17f>
    9ac9:	48 83 c4 30          	add    $0x30,%rsp
    9acd:	5b                   	pop    %rbx
    9ace:	5d                   	pop    %rbp
    9acf:	41 5c                	pop    %r12
    9ad1:	41 5d                	pop    %r13
    9ad3:	41 5e                	pop    %r14
    9ad5:	c3                   	ret    
    9ad6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    9add:	00 00 00 
    9ae0:	48 8b 43 40          	mov    0x40(%rbx),%rax
    9ae4:	66 48 0f 6e c3       	movq   %rbx,%xmm0
    9ae9:	48 89 da             	mov    %rbx,%rdx
    9aec:	48 89 e9             	mov    %rbp,%rcx
    9aef:	66 48 0f 6e d0       	movq   %rax,%xmm2
    9af4:	66 0f 6c c2          	punpcklqdq %xmm2,%xmm0
    9af8:	0f 11 45 38          	movups %xmm0,0x38(%rbp)
    9afc:	48 89 68 38          	mov    %rbp,0x38(%rax)
    9b00:	48 89 6b 40          	mov    %rbp,0x40(%rbx)
    9b04:	e9 66 ff ff ff       	jmp    9a6f <ema_split+0xbf>
    9b09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9b10:	48 89 ef             	mov    %rbp,%rdi
    9b13:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    9b17:	e8 44 1b 00 00       	call   b660 <efree>
    9b1c:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    9b20:	eb 97                	jmp    9ab9 <ema_split+0x109>
    9b22:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9b28:	b8 0c 00 00 00       	mov    $0xc,%eax
    9b2d:	eb 8a                	jmp    9ab9 <ema_split+0x109>
    9b2f:	e8 6c 6e 00 00       	call   109a0 <__stack_chk_fail>
    9b34:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    9b3b:	00 00 00 
    9b3e:	66 90                	xchg   %ax,%ax

0000000000009b40 <ema_split_ex>:
    9b40:	f3 0f 1e fa          	endbr64 
    9b44:	41 54                	push   %r12
    9b46:	49 89 cc             	mov    %rcx,%r12
    9b49:	55                   	push   %rbp
    9b4a:	48 89 d5             	mov    %rdx,%rbp
    9b4d:	53                   	push   %rbx
    9b4e:	48 89 fb             	mov    %rdi,%rbx
    9b51:	48 83 ec 10          	sub    $0x10,%rsp
    9b55:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    9b5c:	00 00 
    9b5e:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    9b63:	48 8b 07             	mov    (%rdi),%rax
    9b66:	48 39 f0             	cmp    %rsi,%rax
    9b69:	72 35                	jb     9ba0 <ema_split_ex+0x60>
    9b6b:	48 03 43 08          	add    0x8(%rbx),%rax
    9b6f:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    9b76:	00 
    9b77:	48 39 c5             	cmp    %rax,%rbp
    9b7a:	72 44                	jb     9bc0 <ema_split_ex+0x80>
    9b7c:	48 89 d8             	mov    %rbx,%rax
    9b7f:	49 89 04 24          	mov    %rax,(%r12)
    9b83:	31 c0                	xor    %eax,%eax
    9b85:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    9b8a:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    9b91:	00 00 
    9b93:	75 5b                	jne    9bf0 <ema_split_ex+0xb0>
    9b95:	48 83 c4 10          	add    $0x10,%rsp
    9b99:	5b                   	pop    %rbx
    9b9a:	5d                   	pop    %rbp
    9b9b:	41 5c                	pop    %r12
    9b9d:	c3                   	ret    
    9b9e:	66 90                	xchg   %ax,%ax
    9ba0:	31 d2                	xor    %edx,%edx
    9ba2:	48 89 e1             	mov    %rsp,%rcx
    9ba5:	e8 06 fe ff ff       	call   99b0 <ema_split>
    9baa:	85 c0                	test   %eax,%eax
    9bac:	75 d7                	jne    9b85 <ema_split_ex+0x45>
    9bae:	48 8b 14 24          	mov    (%rsp),%rdx
    9bb2:	48 85 d2             	test   %rdx,%rdx
    9bb5:	74 31                	je     9be8 <ema_split_ex+0xa8>
    9bb7:	48 8b 02             	mov    (%rdx),%rax
    9bba:	48 89 d3             	mov    %rdx,%rbx
    9bbd:	eb ac                	jmp    9b6b <ema_split_ex+0x2b>
    9bbf:	90                   	nop
    9bc0:	48 89 e1             	mov    %rsp,%rcx
    9bc3:	ba 01 00 00 00       	mov    $0x1,%edx
    9bc8:	48 89 ee             	mov    %rbp,%rsi
    9bcb:	48 89 df             	mov    %rbx,%rdi
    9bce:	e8 dd fd ff ff       	call   99b0 <ema_split>
    9bd3:	85 c0                	test   %eax,%eax
    9bd5:	75 ae                	jne    9b85 <ema_split_ex+0x45>
    9bd7:	48 8b 04 24          	mov    (%rsp),%rax
    9bdb:	48 85 c0             	test   %rax,%rax
    9bde:	75 9f                	jne    9b7f <ema_split_ex+0x3f>
    9be0:	eb 9a                	jmp    9b7c <ema_split_ex+0x3c>
    9be2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9be8:	48 8b 03             	mov    (%rbx),%rax
    9beb:	e9 7b ff ff ff       	jmp    9b6b <ema_split_ex+0x2b>
    9bf0:	e8 ab 6d 00 00       	call   109a0 <__stack_chk_fail>
    9bf5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    9bfc:	00 00 00 
    9bff:	90                   	nop

0000000000009c00 <find_free_region>:
    9c00:	f3 0f 1e fa          	endbr64 
    9c04:	41 57                	push   %r15
    9c06:	49 89 cf             	mov    %rcx,%r15
    9c09:	41 56                	push   %r14
    9c0b:	49 89 fe             	mov    %rdi,%r14
    9c0e:	41 55                	push   %r13
    9c10:	49 89 d5             	mov    %rdx,%r13
    9c13:	41 54                	push   %r12
    9c15:	49 f7 dd             	neg    %r13
    9c18:	55                   	push   %rbp
    9c19:	48 89 f5             	mov    %rsi,%rbp
    9c1c:	53                   	push   %rbx
    9c1d:	48 89 d3             	mov    %rdx,%rbx
    9c20:	48 83 ec 18          	sub    $0x18,%rsp
    9c24:	4c 8b 27             	mov    (%rdi),%r12
    9c27:	49 8b 4c 24 38       	mov    0x38(%r12),%rcx
    9c2c:	49 c7 00 00 00 00 00 	movq   $0x0,(%r8)
    9c33:	49 c7 07 00 00 00 00 	movq   $0x0,(%r15)
    9c3a:	49 39 cc             	cmp    %rcx,%r12
    9c3d:	0f 84 a5 00 00 00    	je     9ce8 <find_free_region+0xe8>
    9c43:	48 8b 51 38          	mov    0x38(%rcx),%rdx
    9c47:	4c 8b 11             	mov    (%rcx),%r10
    9c4a:	48 8d 73 ff          	lea    -0x1(%rbx),%rsi
    9c4e:	49 39 d4             	cmp    %rdx,%r12
    9c51:	0f 84 02 01 00 00    	je     9d59 <find_free_region+0x159>
    9c57:	4c 8b 0d a2 0d 02 00 	mov    0x20da2(%rip),%r9        # 2aa00 <mm_user_end>
    9c5e:	48 89 c8             	mov    %rcx,%rax
    9c61:	48 8d 3d 00 04 01 00 	lea    0x10400(%rip),%rdi        # 1a068 <g_rts_ema_root>
    9c68:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    9c6f:	00 
    9c70:	48 8b 58 08          	mov    0x8(%rax),%rbx
    9c74:	48 01 f3             	add    %rsi,%rbx
    9c77:	48 89 d8             	mov    %rbx,%rax
    9c7a:	4c 01 d0             	add    %r10,%rax
    9c7d:	4c 8b 12             	mov    (%rdx),%r10
    9c80:	4c 21 e8             	and    %r13,%rax
    9c83:	49 39 c2             	cmp    %rax,%r10
    9c86:	72 48                	jb     9cd0 <find_free_region+0xd0>
    9c88:	4d 89 d3             	mov    %r10,%r11
    9c8b:	49 29 c3             	sub    %rax,%r11
    9c8e:	49 39 eb             	cmp    %rbp,%r11
    9c91:	72 3d                	jb     9cd0 <find_free_region+0xd0>
    9c93:	49 39 fe             	cmp    %rdi,%r14
    9c96:	75 16                	jne    9cae <find_free_region+0xae>
    9c98:	49 89 eb             	mov    %rbp,%r11
    9c9b:	49 01 c3             	add    %rax,%r11
    9c9e:	72 30                	jb     9cd0 <find_free_region+0xd0>
    9ca0:	4c 39 c8             	cmp    %r9,%rax
    9ca3:	73 09                	jae    9cae <find_free_region+0xae>
    9ca5:	4c 39 1d 5c 0d 02 00 	cmp    %r11,0x20d5c(%rip)        # 2aa08 <mm_user_base>
    9cac:	72 22                	jb     9cd0 <find_free_region+0xd0>
    9cae:	49 89 10             	mov    %rdx,(%r8)
    9cb1:	49 89 07             	mov    %rax,(%r15)
    9cb4:	48 83 c4 18          	add    $0x18,%rsp
    9cb8:	b8 01 00 00 00       	mov    $0x1,%eax
    9cbd:	5b                   	pop    %rbx
    9cbe:	5d                   	pop    %rbp
    9cbf:	41 5c                	pop    %r12
    9cc1:	41 5d                	pop    %r13
    9cc3:	41 5e                	pop    %r14
    9cc5:	41 5f                	pop    %r15
    9cc7:	c3                   	ret    
    9cc8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    9ccf:	00 
    9cd0:	48 8b 5a 38          	mov    0x38(%rdx),%rbx
    9cd4:	48 89 d0             	mov    %rdx,%rax
    9cd7:	49 39 dc             	cmp    %rbx,%r12
    9cda:	0f 84 80 00 00 00    	je     9d60 <find_free_region+0x160>
    9ce0:	48 89 da             	mov    %rbx,%rdx
    9ce3:	eb 8b                	jmp    9c70 <find_free_region+0x70>
    9ce5:	0f 1f 00             	nopl   (%rax)
    9ce8:	48 8d 05 79 03 01 00 	lea    0x10379(%rip),%rax        # 1a068 <g_rts_ema_root>
    9cef:	48 8b 15 12 0d 02 00 	mov    0x20d12(%rip),%rdx        # 2aa08 <mm_user_base>
    9cf6:	48 39 c7             	cmp    %rax,%rdi
    9cf9:	74 25                	je     9d20 <find_free_region+0x120>
    9cfb:	48 8d 44 1a ff       	lea    -0x1(%rdx,%rbx,1),%rax
    9d00:	4c 21 e8             	and    %r13,%rax
    9d03:	48 01 c5             	add    %rax,%rbp
    9d06:	72 40                	jb     9d48 <find_free_region+0x148>
    9d08:	48 39 d0             	cmp    %rdx,%rax
    9d0b:	72 3b                	jb     9d48 <find_free_region+0x148>
    9d0d:	48 39 2d ec 0c 02 00 	cmp    %rbp,0x20cec(%rip)        # 2aa00 <mm_user_end>
    9d14:	72 32                	jb     9d48 <find_free_region+0x148>
    9d16:	49 89 07             	mov    %rax,(%r15)
    9d19:	4d 89 20             	mov    %r12,(%r8)
    9d1c:	eb 96                	jmp    9cb4 <find_free_region+0xb4>
    9d1e:	66 90                	xchg   %ax,%ax
    9d20:	48 39 f2             	cmp    %rsi,%rdx
    9d23:	0f 83 be 01 00 00    	jae    9ee7 <find_free_region+0x2e7>
    9d29:	48 8b 05 d0 0c 02 00 	mov    0x20cd0(%rip),%rax        # 2aa00 <mm_user_end>
    9d30:	4c 8d 74 03 ff       	lea    -0x1(%rbx,%rax,1),%r14
    9d35:	48 89 e8             	mov    %rbp,%rax
    9d38:	4d 21 ee             	and    %r13,%r14
    9d3b:	4c 01 f0             	add    %r14,%rax
    9d3e:	0f 83 e4 00 00 00    	jae    9e28 <find_free_region+0x228>
    9d44:	0f 1f 40 00          	nopl   0x0(%rax)
    9d48:	31 c0                	xor    %eax,%eax
    9d4a:	48 83 c4 18          	add    $0x18,%rsp
    9d4e:	5b                   	pop    %rbx
    9d4f:	5d                   	pop    %rbp
    9d50:	41 5c                	pop    %r12
    9d52:	41 5d                	pop    %r13
    9d54:	41 5e                	pop    %r14
    9d56:	41 5f                	pop    %r15
    9d58:	c3                   	ret    
    9d59:	48 89 d3             	mov    %rdx,%rbx
    9d5c:	48 89 ca             	mov    %rcx,%rdx
    9d5f:	90                   	nop
    9d60:	4d 8d 24 32          	lea    (%r10,%rsi,1),%r12
    9d64:	4c 03 62 08          	add    0x8(%rdx),%r12
    9d68:	48 89 ee             	mov    %rbp,%rsi
    9d6b:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    9d70:	4d 21 ec             	and    %r13,%r12
    9d73:	48 89 0c 24          	mov    %rcx,(%rsp)
    9d77:	4c 89 e7             	mov    %r12,%rdi
    9d7a:	e8 a1 bc ff ff       	call   5a20 <sgx_mm_is_within_enclave>
    9d7f:	48 8b 0c 24          	mov    (%rsp),%rcx
    9d83:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
    9d88:	84 c0                	test   %al,%al
    9d8a:	74 4c                	je     9dd8 <find_free_region+0x1d8>
    9d8c:	48 89 ee             	mov    %rbp,%rsi
    9d8f:	31 d2                	xor    %edx,%edx
    9d91:	48 8d 05 d0 02 01 00 	lea    0x102d0(%rip),%rax        # 1a068 <g_rts_ema_root>
    9d98:	4c 01 e6             	add    %r12,%rsi
    9d9b:	0f 92 c2             	setb   %dl
    9d9e:	49 39 c6             	cmp    %rax,%r14
    9da1:	0f 84 a7 00 00 00    	je     9e4e <find_free_region+0x24e>
    9da7:	48 85 d2             	test   %rdx,%rdx
    9daa:	0f 85 20 01 00 00    	jne    9ed0 <find_free_region+0x2d0>
    9db0:	4c 3b 25 51 0c 02 00 	cmp    0x20c51(%rip),%r12        # 2aa08 <mm_user_base>
    9db7:	0f 82 13 01 00 00    	jb     9ed0 <find_free_region+0x2d0>
    9dbd:	48 39 35 3c 0c 02 00 	cmp    %rsi,0x20c3c(%rip)        # 2aa00 <mm_user_end>
    9dc4:	0f 82 06 01 00 00    	jb     9ed0 <find_free_region+0x2d0>
    9dca:	49 89 18             	mov    %rbx,(%r8)
    9dcd:	4d 89 27             	mov    %r12,(%r15)
    9dd0:	e9 df fe ff ff       	jmp    9cb4 <find_free_region+0xb4>
    9dd5:	0f 1f 00             	nopl   (%rax)
    9dd8:	48 8b 19             	mov    (%rcx),%rbx
    9ddb:	48 39 eb             	cmp    %rbp,%rbx
    9dde:	0f 82 64 ff ff ff    	jb     9d48 <find_free_region+0x148>
    9de4:	48 29 eb             	sub    %rbp,%rbx
    9de7:	48 8d 05 7a 02 01 00 	lea    0x1027a(%rip),%rax        # 1a068 <g_rts_ema_root>
    9dee:	4c 21 eb             	and    %r13,%rbx
    9df1:	49 39 c6             	cmp    %rax,%r14
    9df4:	0f 84 85 00 00 00    	je     9e7f <find_free_region+0x27f>
    9dfa:	48 01 dd             	add    %rbx,%rbp
    9dfd:	0f 82 45 ff ff ff    	jb     9d48 <find_free_region+0x148>
    9e03:	48 3b 1d fe 0b 02 00 	cmp    0x20bfe(%rip),%rbx        # 2aa08 <mm_user_base>
    9e0a:	0f 82 38 ff ff ff    	jb     9d48 <find_free_region+0x148>
    9e10:	48 39 2d e9 0b 02 00 	cmp    %rbp,0x20be9(%rip)        # 2aa00 <mm_user_end>
    9e17:	0f 82 2b ff ff ff    	jb     9d48 <find_free_region+0x148>
    9e1d:	49 89 1f             	mov    %rbx,(%r15)
    9e20:	49 89 08             	mov    %rcx,(%r8)
    9e23:	e9 8c fe ff ff       	jmp    9cb4 <find_free_region+0xb4>
    9e28:	48 89 ee             	mov    %rbp,%rsi
    9e2b:	4c 89 f7             	mov    %r14,%rdi
    9e2e:	4c 89 04 24          	mov    %r8,(%rsp)
    9e32:	e8 e9 bb ff ff       	call   5a20 <sgx_mm_is_within_enclave>
    9e37:	4c 8b 04 24          	mov    (%rsp),%r8
    9e3b:	84 c0                	test   %al,%al
    9e3d:	0f 84 05 ff ff ff    	je     9d48 <find_free_region+0x148>
    9e43:	4d 89 37             	mov    %r14,(%r15)
    9e46:	4d 89 20             	mov    %r12,(%r8)
    9e49:	e9 66 fe ff ff       	jmp    9cb4 <find_free_region+0xb4>
    9e4e:	48 85 d2             	test   %rdx,%rdx
    9e51:	75 1a                	jne    9e6d <find_free_region+0x26d>
    9e53:	4c 3b 25 a6 0b 02 00 	cmp    0x20ba6(%rip),%r12        # 2aa00 <mm_user_end>
    9e5a:	0f 83 6a ff ff ff    	jae    9dca <find_free_region+0x1ca>
    9e60:	48 39 35 a1 0b 02 00 	cmp    %rsi,0x20ba1(%rip)        # 2aa08 <mm_user_base>
    9e67:	0f 83 5d ff ff ff    	jae    9dca <find_free_region+0x1ca>
    9e6d:	48 8b 19             	mov    (%rcx),%rbx
    9e70:	48 39 eb             	cmp    %rbp,%rbx
    9e73:	0f 82 cf fe ff ff    	jb     9d48 <find_free_region+0x148>
    9e79:	48 29 eb             	sub    %rbp,%rbx
    9e7c:	4c 21 eb             	and    %r13,%rbx
    9e7f:	48 89 ee             	mov    %rbp,%rsi
    9e82:	48 89 df             	mov    %rbx,%rdi
    9e85:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    9e8a:	48 89 0c 24          	mov    %rcx,(%rsp)
    9e8e:	e8 8d bb ff ff       	call   5a20 <sgx_mm_is_within_enclave>
    9e93:	84 c0                	test   %al,%al
    9e95:	0f 84 ad fe ff ff    	je     9d48 <find_free_region+0x148>
    9e9b:	48 01 dd             	add    %rbx,%rbp
    9e9e:	0f 82 a4 fe ff ff    	jb     9d48 <find_free_region+0x148>
    9ea4:	48 3b 1d 55 0b 02 00 	cmp    0x20b55(%rip),%rbx        # 2aa00 <mm_user_end>
    9eab:	48 8b 0c 24          	mov    (%rsp),%rcx
    9eaf:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
    9eb4:	0f 83 63 ff ff ff    	jae    9e1d <find_free_region+0x21d>
    9eba:	48 39 2d 47 0b 02 00 	cmp    %rbp,0x20b47(%rip)        # 2aa08 <mm_user_base>
    9ec1:	0f 83 56 ff ff ff    	jae    9e1d <find_free_region+0x21d>
    9ec7:	31 c0                	xor    %eax,%eax
    9ec9:	e9 7c fe ff ff       	jmp    9d4a <find_free_region+0x14a>
    9ece:	66 90                	xchg   %ax,%ax
    9ed0:	48 8b 19             	mov    (%rcx),%rbx
    9ed3:	48 39 eb             	cmp    %rbp,%rbx
    9ed6:	0f 82 6c fe ff ff    	jb     9d48 <find_free_region+0x148>
    9edc:	48 29 eb             	sub    %rbp,%rbx
    9edf:	4c 21 eb             	and    %r13,%rbx
    9ee2:	e9 13 ff ff ff       	jmp    9dfa <find_free_region+0x1fa>
    9ee7:	48 29 f2             	sub    %rsi,%rdx
    9eea:	4c 89 04 24          	mov    %r8,(%rsp)
    9eee:	4c 21 ea             	and    %r13,%rdx
    9ef1:	48 89 d7             	mov    %rdx,%rdi
    9ef4:	49 89 d6             	mov    %rdx,%r14
    9ef7:	e8 24 bb ff ff       	call   5a20 <sgx_mm_is_within_enclave>
    9efc:	4c 8b 04 24          	mov    (%rsp),%r8
    9f00:	84 c0                	test   %al,%al
    9f02:	0f 85 3b ff ff ff    	jne    9e43 <find_free_region+0x243>
    9f08:	e9 1c fe ff ff       	jmp    9d29 <find_free_region+0x129>
    9f0d:	0f 1f 00             	nopl   (%rax)

0000000000009f10 <find_free_region_at>:
    9f10:	f3 0f 1e fa          	endbr64 
    9f14:	41 55                	push   %r13
    9f16:	49 89 cd             	mov    %rcx,%r13
    9f19:	41 54                	push   %r12
    9f1b:	49 89 fc             	mov    %rdi,%r12
    9f1e:	55                   	push   %rbp
    9f1f:	48 89 d5             	mov    %rdx,%rbp
    9f22:	53                   	push   %rbx
    9f23:	48 89 f3             	mov    %rsi,%rbx
    9f26:	48 89 d6             	mov    %rdx,%rsi
    9f29:	48 89 df             	mov    %rbx,%rdi
    9f2c:	48 83 ec 08          	sub    $0x8,%rsp
    9f30:	e8 eb ba ff ff       	call   5a20 <sgx_mm_is_within_enclave>
    9f35:	31 c9                	xor    %ecx,%ecx
    9f37:	84 c0                	test   %al,%al
    9f39:	74 5f                	je     9f9a <find_free_region_at+0x8a>
    9f3b:	31 f6                	xor    %esi,%esi
    9f3d:	48 8d 15 24 01 01 00 	lea    0x10124(%rip),%rdx        # 1a068 <g_rts_ema_root>
    9f44:	48 01 dd             	add    %rbx,%rbp
    9f47:	40 0f 92 c6          	setb   %sil
    9f4b:	49 39 d4             	cmp    %rdx,%r12
    9f4e:	0f 84 7c 00 00 00    	je     9fd0 <find_free_region_at+0xc0>
    9f54:	48 85 f6             	test   %rsi,%rsi
    9f57:	75 5e                	jne    9fb7 <find_free_region_at+0xa7>
    9f59:	48 3b 1d a8 0a 02 00 	cmp    0x20aa8(%rip),%rbx        # 2aa08 <mm_user_base>
    9f60:	72 55                	jb     9fb7 <find_free_region_at+0xa7>
    9f62:	48 39 2d 97 0a 02 00 	cmp    %rbp,0x20a97(%rip)        # 2aa00 <mm_user_end>
    9f69:	72 4c                	jb     9fb7 <find_free_region_at+0xa7>
    9f6b:	49 8b 14 24          	mov    (%r12),%rdx
    9f6f:	48 8b 4a 38          	mov    0x38(%rdx),%rcx
    9f73:	48 39 ca             	cmp    %rcx,%rdx
    9f76:	75 1a                	jne    9f92 <find_free_region_at+0x82>
    9f78:	eb 20                	jmp    9f9a <find_free_region_at+0x8a>
    9f7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9f80:	48 03 71 08          	add    0x8(%rcx),%rsi
    9f84:	48 39 f3             	cmp    %rsi,%rbx
    9f87:	72 27                	jb     9fb0 <find_free_region_at+0xa0>
    9f89:	48 8b 49 38          	mov    0x38(%rcx),%rcx
    9f8d:	48 39 ca             	cmp    %rcx,%rdx
    9f90:	74 08                	je     9f9a <find_free_region_at+0x8a>
    9f92:	48 8b 31             	mov    (%rcx),%rsi
    9f95:	48 39 ee             	cmp    %rbp,%rsi
    9f98:	72 e6                	jb     9f80 <find_free_region_at+0x70>
    9f9a:	49 89 4d 00          	mov    %rcx,0x0(%r13)
    9f9e:	48 83 c4 08          	add    $0x8,%rsp
    9fa2:	5b                   	pop    %rbx
    9fa3:	5d                   	pop    %rbp
    9fa4:	41 5c                	pop    %r12
    9fa6:	41 5d                	pop    %r13
    9fa8:	c3                   	ret    
    9fa9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9fb0:	48 39 ca             	cmp    %rcx,%rdx
    9fb3:	74 e5                	je     9f9a <find_free_region_at+0x8a>
    9fb5:	31 c9                	xor    %ecx,%ecx
    9fb7:	31 c0                	xor    %eax,%eax
    9fb9:	49 89 4d 00          	mov    %rcx,0x0(%r13)
    9fbd:	48 83 c4 08          	add    $0x8,%rsp
    9fc1:	5b                   	pop    %rbx
    9fc2:	5d                   	pop    %rbp
    9fc3:	41 5c                	pop    %r12
    9fc5:	41 5d                	pop    %r13
    9fc7:	c3                   	ret    
    9fc8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    9fcf:	00 
    9fd0:	48 85 f6             	test   %rsi,%rsi
    9fd3:	75 e2                	jne    9fb7 <find_free_region_at+0xa7>
    9fd5:	48 3b 1d 24 0a 02 00 	cmp    0x20a24(%rip),%rbx        # 2aa00 <mm_user_end>
    9fdc:	73 8d                	jae    9f6b <find_free_region_at+0x5b>
    9fde:	48 39 2d 23 0a 02 00 	cmp    %rbp,0x20a23(%rip)        # 2aa08 <mm_user_base>
    9fe5:	73 84                	jae    9f6b <find_free_region_at+0x5b>
    9fe7:	31 c0                	xor    %eax,%eax
    9fe9:	eb ce                	jmp    9fb9 <find_free_region_at+0xa9>
    9feb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000009ff0 <ema_new>:
    9ff0:	f3 0f 1e fa          	endbr64 
    9ff4:	53                   	push   %rbx
    9ff5:	48 83 ec 50          	sub    $0x50,%rsp
    9ff9:	64 4c 8b 14 25 28 00 	mov    %fs:0x28,%r10
    a000:	00 00 
    a002:	4c 89 54 24 48       	mov    %r10,0x48(%rsp)
    a007:	45 31 d2             	xor    %r10d,%r10d
    a00a:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
    a00f:	89 54 24 10          	mov    %edx,0x10(%rsp)
    a013:	48 89 e3             	mov    %rsp,%rbx
    a016:	48 89 3c 24          	mov    %rdi,(%rsp)
    a01a:	bf 48 00 00 00       	mov    $0x48,%edi
    a01f:	48 8b 50 40          	mov    0x40(%rax),%rdx
    a023:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    a028:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    a02d:	48 89 54 24 40       	mov    %rdx,0x40(%rsp)
    a032:	48 89 5a 38          	mov    %rbx,0x38(%rdx)
    a036:	48 89 58 40          	mov    %rbx,0x40(%rax)
    a03a:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
    a03f:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    a046:	00 00 
    a048:	4c 89 44 24 28       	mov    %r8,0x28(%rsp)
    a04d:	4c 89 4c 24 30       	mov    %r9,0x30(%rsp)
    a052:	e8 89 13 00 00       	call   b3e0 <emalloc>
    a057:	48 85 c0             	test   %rax,%rax
    a05a:	74 6c                	je     a0c8 <ema_new+0xd8>
    a05c:	66 0f 6f 0c 24       	movdqa (%rsp),%xmm1
    a061:	0f 11 08             	movups %xmm1,(%rax)
    a064:	66 0f 6f 54 24 10    	movdqa 0x10(%rsp),%xmm2
    a06a:	0f 11 50 10          	movups %xmm2,0x10(%rax)
    a06e:	66 0f 6f 5c 24 20    	movdqa 0x20(%rsp),%xmm3
    a074:	0f 11 58 20          	movups %xmm3,0x20(%rax)
    a078:	66 0f 6f 64 24 30    	movdqa 0x30(%rsp),%xmm4
    a07e:	0f 11 60 30          	movups %xmm4,0x30(%rax)
    a082:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
    a087:	48 89 50 40          	mov    %rdx,0x40(%rax)
    a08b:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
    a090:	48 89 42 38          	mov    %rax,0x38(%rdx)
    a094:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
    a099:	48 89 42 40          	mov    %rax,0x40(%rdx)
    a09d:	66 48 0f 6e c2       	movq   %rdx,%xmm0
    a0a2:	0f 16 44 24 40       	movhps 0x40(%rsp),%xmm0
    a0a7:	0f 11 40 38          	movups %xmm0,0x38(%rax)
    a0ab:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
    a0b0:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    a0b7:	00 00 
    a0b9:	75 2d                	jne    a0e8 <ema_new+0xf8>
    a0bb:	48 83 c4 50          	add    $0x50,%rsp
    a0bf:	5b                   	pop    %rbx
    a0c0:	c3                   	ret    
    a0c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a0c8:	48 8b 4c 24 40       	mov    0x40(%rsp),%rcx
    a0cd:	48 39 59 38          	cmp    %rbx,0x38(%rcx)
    a0d1:	75 1a                	jne    a0ed <ema_new+0xfd>
    a0d3:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
    a0d8:	48 39 5a 40          	cmp    %rbx,0x40(%rdx)
    a0dc:	75 0f                	jne    a0ed <ema_new+0xfd>
    a0de:	48 89 51 38          	mov    %rdx,0x38(%rcx)
    a0e2:	48 89 4a 40          	mov    %rcx,0x40(%rdx)
    a0e6:	eb c3                	jmp    a0ab <ema_new+0xbb>
    a0e8:	e8 b3 68 00 00       	call   109a0 <__stack_chk_fail>
    a0ed:	e8 45 84 00 00       	call   12537 <abort>
    a0f2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a0f9:	00 00 00 
    a0fc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000a100 <ema_destroy>:
    a100:	f3 0f 1e fa          	endbr64 
    a104:	53                   	push   %rbx
    a105:	48 89 fb             	mov    %rdi,%rbx
    a108:	48 85 ff             	test   %rdi,%rdi
    a10b:	74 1c                	je     a129 <ema_destroy+0x29>
    a10d:	48 8b 47 40          	mov    0x40(%rdi),%rax
    a111:	48 3b 78 38          	cmp    0x38(%rax),%rdi
    a115:	75 29                	jne    a140 <ema_destroy+0x40>
    a117:	48 8b 57 38          	mov    0x38(%rdi),%rdx
    a11b:	48 3b 7a 40          	cmp    0x40(%rdx),%rdi
    a11f:	75 1f                	jne    a140 <ema_destroy+0x40>
    a121:	48 89 50 38          	mov    %rdx,0x38(%rax)
    a125:	48 89 42 40          	mov    %rax,0x40(%rdx)
    a129:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    a12d:	48 85 ff             	test   %rdi,%rdi
    a130:	74 05                	je     a137 <ema_destroy+0x37>
    a132:	e8 b9 ed ff ff       	call   8ef0 <bit_array_delete>
    a137:	48 89 df             	mov    %rbx,%rdi
    a13a:	5b                   	pop    %rbx
    a13b:	e9 20 15 00 00       	jmp    b660 <efree>
    a140:	e8 f2 83 00 00       	call   12537 <abort>
    a145:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a14c:	00 00 00 
    a14f:	90                   	nop

000000000000a150 <destroy_ema_root>:
    a150:	f3 0f 1e fa          	endbr64 
    a154:	55                   	push   %rbp
    a155:	53                   	push   %rbx
    a156:	48 83 ec 08          	sub    $0x8,%rsp
    a15a:	48 8b 07             	mov    (%rdi),%rax
    a15d:	48 8b 58 38          	mov    0x38(%rax),%rbx
    a161:	48 39 d8             	cmp    %rbx,%rax
    a164:	74 1c                	je     a182 <destroy_ema_root+0x32>
    a166:	48 89 fd             	mov    %rdi,%rbp
    a169:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a170:	48 89 df             	mov    %rbx,%rdi
    a173:	48 8b 5b 38          	mov    0x38(%rbx),%rbx
    a177:	e8 84 ff ff ff       	call   a100 <ema_destroy>
    a17c:	48 39 5d 00          	cmp    %rbx,0x0(%rbp)
    a180:	75 ee                	jne    a170 <destroy_ema_root+0x20>
    a182:	48 83 c4 08          	add    $0x8,%rsp
    a186:	5b                   	pop    %rbx
    a187:	5d                   	pop    %rbp
    a188:	c3                   	ret    
    a189:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000a190 <do_commit>:
    a190:	f3 0f 1e fa          	endbr64 
    a194:	55                   	push   %rbp
    a195:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a199:	48 83 ca 08          	or     $0x8,%rdx
    a19d:	48 89 e5             	mov    %rsp,%rbp
    a1a0:	41 55                	push   %r13
    a1a2:	41 54                	push   %r12
    a1a4:	49 89 fc             	mov    %rdi,%r12
    a1a7:	53                   	push   %rbx
    a1a8:	48 8d 1c 37          	lea    (%rdi,%rsi,1),%rbx
    a1ac:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    a1b0:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    a1b4:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a1bb:	00 00 
    a1bd:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    a1c2:	31 c0                	xor    %eax,%eax
    a1c4:	48 89 14 24          	mov    %rdx,(%rsp)
    a1c8:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    a1cf:	00 00 
    a1d1:	0f 11 44 24 08       	movups %xmm0,0x8(%rsp)
    a1d6:	0f 11 44 24 18       	movups %xmm0,0x18(%rsp)
    a1db:	0f 11 44 24 28       	movups %xmm0,0x28(%rsp)
    a1e0:	84 c9                	test   %cl,%cl
    a1e2:	74 4c                	je     a230 <do_commit+0xa0>
    a1e4:	49 89 e5             	mov    %rsp,%r13
    a1e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    a1ee:	00 00 
    a1f0:	48 81 eb 00 10 00 00 	sub    $0x1000,%rbx
    a1f7:	4c 89 ef             	mov    %r13,%rdi
    a1fa:	48 89 de             	mov    %rbx,%rsi
    a1fd:	e8 bd 82 00 00       	call   124bf <do_eaccept>
    a202:	85 c0                	test   %eax,%eax
    a204:	75 57                	jne    a25d <do_commit+0xcd>
    a206:	49 39 dc             	cmp    %rbx,%r12
    a209:	72 e5                	jb     a1f0 <do_commit+0x60>
    a20b:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    a210:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    a217:	00 00 
    a219:	75 47                	jne    a262 <do_commit+0xd2>
    a21b:	48 8d 65 e8          	lea    -0x18(%rbp),%rsp
    a21f:	31 c0                	xor    %eax,%eax
    a221:	5b                   	pop    %rbx
    a222:	41 5c                	pop    %r12
    a224:	41 5d                	pop    %r13
    a226:	5d                   	pop    %rbp
    a227:	c3                   	ret    
    a228:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a22f:	00 
    a230:	48 39 df             	cmp    %rbx,%rdi
    a233:	73 d6                	jae    a20b <do_commit+0x7b>
    a235:	49 89 e5             	mov    %rsp,%r13
    a238:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a23f:	00 
    a240:	4c 89 e6             	mov    %r12,%rsi
    a243:	4c 89 ef             	mov    %r13,%rdi
    a246:	e8 74 82 00 00       	call   124bf <do_eaccept>
    a24b:	85 c0                	test   %eax,%eax
    a24d:	75 0e                	jne    a25d <do_commit+0xcd>
    a24f:	49 81 c4 00 10 00 00 	add    $0x1000,%r12
    a256:	49 39 dc             	cmp    %rbx,%r12
    a259:	72 e5                	jb     a240 <do_commit+0xb0>
    a25b:	eb ae                	jmp    a20b <do_commit+0x7b>
    a25d:	e8 d5 82 00 00       	call   12537 <abort>
    a262:	e8 39 67 00 00       	call   109a0 <__stack_chk_fail>
    a267:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    a26e:	00 00 

000000000000a270 <ema_do_commit>:
    a270:	f3 0f 1e fa          	endbr64 
    a274:	55                   	push   %rbp
    a275:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a279:	48 89 e5             	mov    %rsp,%rbp
    a27c:	41 57                	push   %r15
    a27e:	41 56                	push   %r14
    a280:	41 55                	push   %r13
    a282:	41 54                	push   %r12
    a284:	53                   	push   %rbx
    a285:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    a289:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    a28d:	4c 8b 77 08          	mov    0x8(%rdi),%r14
    a291:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a298:	00 00 
    a29a:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    a29f:	48 8b 07             	mov    (%rdi),%rax
    a2a2:	48 c7 04 24 0b 02 00 	movq   $0x20b,(%rsp)
    a2a9:	00 
    a2aa:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    a2b1:	00 00 
    a2b3:	0f 11 44 24 08       	movups %xmm0,0x8(%rsp)
    a2b8:	0f 11 44 24 18       	movups %xmm0,0x18(%rsp)
    a2bd:	0f 11 44 24 28       	movups %xmm0,0x28(%rsp)
    a2c2:	48 39 f0             	cmp    %rsi,%rax
    a2c5:	48 0f 43 f0          	cmovae %rax,%rsi
    a2c9:	49 01 c6             	add    %rax,%r14
    a2cc:	49 39 d6             	cmp    %rdx,%r14
    a2cf:	4c 0f 47 f2          	cmova  %rdx,%r14
    a2d3:	4c 39 f6             	cmp    %r14,%rsi
    a2d6:	73 61                	jae    a339 <ema_do_commit+0xc9>
    a2d8:	49 89 fd             	mov    %rdi,%r13
    a2db:	48 89 f3             	mov    %rsi,%rbx
    a2de:	49 89 e7             	mov    %rsp,%r15
    a2e1:	eb 15                	jmp    a2f8 <ema_do_commit+0x88>
    a2e3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a2e8:	48 81 c3 00 10 00 00 	add    $0x1000,%rbx
    a2ef:	4c 39 f3             	cmp    %r14,%rbx
    a2f2:	73 45                	jae    a339 <ema_do_commit+0xc9>
    a2f4:	49 8b 45 00          	mov    0x0(%r13),%rax
    a2f8:	49 89 dc             	mov    %rbx,%r12
    a2fb:	49 8b 7d 20          	mov    0x20(%r13),%rdi
    a2ff:	49 29 c4             	sub    %rax,%r12
    a302:	49 c1 ec 0c          	shr    $0xc,%r12
    a306:	4c 89 e6             	mov    %r12,%rsi
    a309:	e8 02 ec ff ff       	call   8f10 <bit_array_test>
    a30e:	84 c0                	test   %al,%al
    a310:	75 d6                	jne    a2e8 <ema_do_commit+0x78>
    a312:	48 89 de             	mov    %rbx,%rsi
    a315:	4c 89 ff             	mov    %r15,%rdi
    a318:	e8 a2 81 00 00       	call   124bf <do_eaccept>
    a31d:	85 c0                	test   %eax,%eax
    a31f:	75 1a                	jne    a33b <ema_do_commit+0xcb>
    a321:	49 8b 7d 20          	mov    0x20(%r13),%rdi
    a325:	4c 89 e6             	mov    %r12,%rsi
    a328:	48 81 c3 00 10 00 00 	add    $0x1000,%rbx
    a32f:	e8 ac ed ff ff       	call   90e0 <bit_array_set>
    a334:	4c 39 f3             	cmp    %r14,%rbx
    a337:	72 bb                	jb     a2f4 <ema_do_commit+0x84>
    a339:	31 c0                	xor    %eax,%eax
    a33b:	48 8b 54 24 78       	mov    0x78(%rsp),%rdx
    a340:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    a347:	00 00 
    a349:	75 0f                	jne    a35a <ema_do_commit+0xea>
    a34b:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    a34f:	5b                   	pop    %rbx
    a350:	41 5c                	pop    %r12
    a352:	41 5d                	pop    %r13
    a354:	41 5e                	pop    %r14
    a356:	41 5f                	pop    %r15
    a358:	5d                   	pop    %rbp
    a359:	c3                   	ret    
    a35a:	e8 41 66 00 00       	call   109a0 <__stack_chk_fail>
    a35f:	90                   	nop

000000000000a360 <ema_do_commit_loop>:
    a360:	f3 0f 1e fa          	endbr64 
    a364:	41 55                	push   %r13
    a366:	41 54                	push   %r12
    a368:	55                   	push   %rbp
    a369:	53                   	push   %rbx
    a36a:	48 89 cb             	mov    %rcx,%rbx
    a36d:	48 83 ec 08          	sub    $0x8,%rsp
    a371:	48 8b 0f             	mov    (%rdi),%rcx
    a374:	48 39 f7             	cmp    %rsi,%rdi
    a377:	0f 84 9b 00 00 00    	je     a418 <ema_do_commit_loop+0xb8>
    a37d:	49 89 f5             	mov    %rsi,%r13
    a380:	48 89 d5             	mov    %rdx,%rbp
    a383:	48 89 f8             	mov    %rdi,%rax
    a386:	eb 26                	jmp    a3ae <ema_do_commit_loop+0x4e>
    a388:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a38f:	00 
    a390:	f6 40 10 01          	testb  $0x1,0x10(%rax)
    a394:	75 27                	jne    a3bd <ema_do_commit_loop+0x5d>
    a396:	48 03 48 08          	add    0x8(%rax),%rcx
    a39a:	48 8b 40 38          	mov    0x38(%rax),%rax
    a39e:	48 89 ca             	mov    %rcx,%rdx
    a3a1:	49 39 c5             	cmp    %rax,%r13
    a3a4:	74 3a                	je     a3e0 <ema_do_commit_loop+0x80>
    a3a6:	48 8b 08             	mov    (%rax),%rcx
    a3a9:	48 39 d1             	cmp    %rdx,%rcx
    a3ac:	75 22                	jne    a3d0 <ema_do_commit_loop+0x70>
    a3ae:	48 8b 50 18          	mov    0x18(%rax),%rdx
    a3b2:	48 f7 d2             	not    %rdx
    a3b5:	f7 c2 02 02 00 00    	test   $0x202,%edx
    a3bb:	74 d3                	je     a390 <ema_do_commit_loop+0x30>
    a3bd:	b8 0d 00 00 00       	mov    $0xd,%eax
    a3c2:	48 83 c4 08          	add    $0x8,%rsp
    a3c6:	5b                   	pop    %rbx
    a3c7:	5d                   	pop    %rbp
    a3c8:	41 5c                	pop    %r12
    a3ca:	41 5d                	pop    %r13
    a3cc:	c3                   	ret    
    a3cd:	0f 1f 00             	nopl   (%rax)
    a3d0:	48 83 c4 08          	add    $0x8,%rsp
    a3d4:	b8 16 00 00 00       	mov    $0x16,%eax
    a3d9:	5b                   	pop    %rbx
    a3da:	5d                   	pop    %rbp
    a3db:	41 5c                	pop    %r12
    a3dd:	41 5d                	pop    %r13
    a3df:	c3                   	ret    
    a3e0:	b8 16 00 00 00       	mov    $0x16,%eax
    a3e5:	48 39 d9             	cmp    %rbx,%rcx
    a3e8:	73 1c                	jae    a406 <ema_do_commit_loop+0xa6>
    a3ea:	eb d6                	jmp    a3c2 <ema_do_commit_loop+0x62>
    a3ec:	0f 1f 40 00          	nopl   0x0(%rax)
    a3f0:	48 89 da             	mov    %rbx,%rdx
    a3f3:	48 89 ee             	mov    %rbp,%rsi
    a3f6:	4c 8b 67 38          	mov    0x38(%rdi),%r12
    a3fa:	e8 71 fe ff ff       	call   a270 <ema_do_commit>
    a3ff:	85 c0                	test   %eax,%eax
    a401:	75 bf                	jne    a3c2 <ema_do_commit_loop+0x62>
    a403:	4c 89 e7             	mov    %r12,%rdi
    a406:	4c 39 ef             	cmp    %r13,%rdi
    a409:	75 e5                	jne    a3f0 <ema_do_commit_loop+0x90>
    a40b:	31 c0                	xor    %eax,%eax
    a40d:	48 83 c4 08          	add    $0x8,%rsp
    a411:	5b                   	pop    %rbx
    a412:	5d                   	pop    %rbp
    a413:	41 5c                	pop    %r12
    a415:	41 5d                	pop    %r13
    a417:	c3                   	ret    
    a418:	b8 16 00 00 00       	mov    $0x16,%eax
    a41d:	48 39 d9             	cmp    %rbx,%rcx
    a420:	72 a0                	jb     a3c2 <ema_do_commit_loop+0x62>
    a422:	31 c0                	xor    %eax,%eax
    a424:	eb e7                	jmp    a40d <ema_do_commit_loop+0xad>
    a426:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a42d:	00 00 00 

000000000000a430 <ema_change_to_tcs>:
    a430:	f3 0f 1e fa          	endbr64 
    a434:	55                   	push   %rbp
    a435:	48 89 e5             	mov    %rsp,%rbp
    a438:	41 56                	push   %r14
    a43a:	41 55                	push   %r13
    a43c:	41 54                	push   %r12
    a43e:	53                   	push   %rbx
    a43f:	48 89 fb             	mov    %rdi,%rbx
    a442:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    a446:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
    a44d:	4c 8b 6f 18          	mov    0x18(%rdi),%r13
    a451:	48 8b 7f 20          	mov    0x20(%rdi),%rdi
    a455:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a45c:	00 00 
    a45e:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
    a465:	00 
    a466:	31 c0                	xor    %eax,%eax
    a468:	45 89 ee             	mov    %r13d,%r14d
    a46b:	41 81 e6 00 ff 00 00 	and    $0xff00,%r14d
    a472:	48 85 ff             	test   %rdi,%rdi
    a475:	74 33                	je     a4aa <ema_change_to_tcs+0x7a>
    a477:	49 89 f4             	mov    %rsi,%r12
    a47a:	48 2b 33             	sub    (%rbx),%rsi
    a47d:	48 c1 ee 0c          	shr    $0xc,%rsi
    a481:	e8 8a ea ff ff       	call   8f10 <bit_array_test>
    a486:	84 c0                	test   %al,%al
    a488:	74 20                	je     a4aa <ema_change_to_tcs+0x7a>
    a48a:	41 81 fe 00 01 00 00 	cmp    $0x100,%r14d
    a491:	0f 84 e1 00 00 00    	je     a578 <ema_change_to_tcs+0x148>
    a497:	41 83 e5 07          	and    $0x7,%r13d
    a49b:	41 83 fd 03          	cmp    $0x3,%r13d
    a49f:	75 09                	jne    a4aa <ema_change_to_tcs+0x7a>
    a4a1:	41 81 fe 00 02 00 00 	cmp    $0x200,%r14d
    a4a8:	74 2e                	je     a4d8 <ema_change_to_tcs+0xa8>
    a4aa:	b8 0d 00 00 00       	mov    $0xd,%eax
    a4af:	48 8b 94 24 b8 00 00 	mov    0xb8(%rsp),%rdx
    a4b6:	00 
    a4b7:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    a4be:	00 00 
    a4c0:	0f 85 c4 00 00 00    	jne    a58a <ema_change_to_tcs+0x15a>
    a4c6:	48 8d 65 e0          	lea    -0x20(%rbp),%rsp
    a4ca:	5b                   	pop    %rbx
    a4cb:	41 5c                	pop    %r12
    a4cd:	41 5d                	pop    %r13
    a4cf:	41 5e                	pop    %r14
    a4d1:	5d                   	pop    %rbp
    a4d2:	c3                   	ret    
    a4d3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a4d8:	b9 03 01 00 00       	mov    $0x103,%ecx
    a4dd:	ba 03 02 00 00       	mov    $0x203,%edx
    a4e2:	be 00 10 00 00       	mov    $0x1000,%esi
    a4e7:	4c 89 e7             	mov    %r12,%rdi
    a4ea:	e8 a1 b3 ff ff       	call   5890 <sgx_mm_modify_ocall>
    a4ef:	85 c0                	test   %eax,%eax
    a4f1:	0f 85 89 00 00 00    	jne    a580 <ema_change_to_tcs+0x150>
    a4f7:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a4fb:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
    a500:	4c 89 e6             	mov    %r12,%rsi
    a503:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
    a50a:	00 00 
    a50c:	48 c7 44 24 40 10 01 	movq   $0x110,0x40(%rsp)
    a513:	00 00 
    a515:	0f 11 44 24 48       	movups %xmm0,0x48(%rsp)
    a51a:	0f 11 44 24 58       	movups %xmm0,0x58(%rsp)
    a51f:	0f 11 44 24 68       	movups %xmm0,0x68(%rsp)
    a524:	e8 96 7f 00 00       	call   124bf <do_eaccept>
    a529:	85 c0                	test   %eax,%eax
    a52b:	75 62                	jne    a58f <ema_change_to_tcs+0x15f>
    a52d:	48 8d 4c 24 38       	lea    0x38(%rsp),%rcx
    a532:	49 8d 94 24 00 10 00 	lea    0x1000(%r12),%rdx
    a539:	00 
    a53a:	4c 89 e6             	mov    %r12,%rsi
    a53d:	48 89 df             	mov    %rbx,%rdi
    a540:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    a547:	00 00 
    a549:	e8 f2 f5 ff ff       	call   9b40 <ema_split_ex>
    a54e:	85 c0                	test   %eax,%eax
    a550:	0f 85 59 ff ff ff    	jne    a4af <ema_change_to_tcs+0x7f>
    a556:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
    a55b:	48 8b 51 18          	mov    0x18(%rcx),%rdx
    a55f:	48 81 e2 f8 00 ff ff 	and    $0xffffffffffff00f8,%rdx
    a566:	80 ce 01             	or     $0x1,%dh
    a569:	48 89 51 18          	mov    %rdx,0x18(%rcx)
    a56d:	e9 3d ff ff ff       	jmp    a4af <ema_change_to_tcs+0x7f>
    a572:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a578:	31 c0                	xor    %eax,%eax
    a57a:	e9 30 ff ff ff       	jmp    a4af <ema_change_to_tcs+0x7f>
    a57f:	90                   	nop
    a580:	b8 0e 00 00 00       	mov    $0xe,%eax
    a585:	e9 25 ff ff ff       	jmp    a4af <ema_change_to_tcs+0x7f>
    a58a:	e8 11 64 00 00       	call   109a0 <__stack_chk_fail>
    a58f:	e8 a3 7f 00 00       	call   12537 <abort>
    a594:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a59b:	00 00 00 
    a59e:	66 90                	xchg   %ax,%ax

000000000000a5a0 <ema_modify_permissions>:
    a5a0:	f3 0f 1e fa          	endbr64 
    a5a4:	55                   	push   %rbp
    a5a5:	48 89 e5             	mov    %rsp,%rbp
    a5a8:	41 57                	push   %r15
    a5aa:	41 56                	push   %r14
    a5ac:	41 55                	push   %r13
    a5ae:	41 54                	push   %r12
    a5b0:	53                   	push   %rbx
    a5b1:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    a5b5:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
    a5bc:	89 4c 24 20          	mov    %ecx,0x20(%rsp)
    a5c0:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a5c7:	00 00 
    a5c9:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
    a5d0:	00 
    a5d1:	48 8b 47 18          	mov    0x18(%rdi),%rax
    a5d5:	41 89 c4             	mov    %eax,%r12d
    a5d8:	41 83 e4 07          	and    $0x7,%r12d
    a5dc:	41 39 cc             	cmp    %ecx,%r12d
    a5df:	0f 84 e2 00 00 00    	je     a6c7 <ema_modify_permissions+0x127>
    a5e5:	49 89 fd             	mov    %rdi,%r13
    a5e8:	89 c7                	mov    %eax,%edi
    a5ea:	49 89 f7             	mov    %rsi,%r15
    a5ed:	44 8b 74 24 20       	mov    0x20(%rsp),%r14d
    a5f2:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    a5f6:	81 e7 00 ff 00 00    	and    $0xff00,%edi
    a5fc:	44 89 f1             	mov    %r14d,%ecx
    a5ff:	89 7c 24 0c          	mov    %edi,0xc(%rsp)
    a603:	48 39 f3             	cmp    %rsi,%rbx
    a606:	4c 0f 43 fb          	cmovae %rbx,%r15
    a60a:	49 03 5d 08          	add    0x8(%r13),%rbx
    a60e:	48 39 d3             	cmp    %rdx,%rbx
    a611:	48 0f 47 da          	cmova  %rdx,%rbx
    a615:	89 c2                	mov    %eax,%edx
    a617:	09 f9                	or     %edi,%ecx
    a619:	4c 89 ff             	mov    %r15,%rdi
    a61c:	81 e2 07 ff 00 00    	and    $0xff07,%edx
    a622:	4c 89 7c 24 18       	mov    %r15,0x18(%rsp)
    a627:	48 89 de             	mov    %rbx,%rsi
    a62a:	4c 29 fe             	sub    %r15,%rsi
    a62d:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    a632:	e8 59 b2 ff ff       	call   5890 <sgx_mm_modify_ocall>
    a637:	85 c0                	test   %eax,%eax
    a639:	0f 85 21 01 00 00    	jne    a760 <ema_modify_permissions+0x1c0>
    a63f:	44 89 f0             	mov    %r14d,%eax
    a642:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a646:	48 8d 54 24 40       	lea    0x40(%rsp),%rdx
    a64b:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
    a652:	00 00 
    a654:	0d 20 02 00 00       	or     $0x220,%eax
    a659:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
    a65e:	48 98                	cltq   
    a660:	0f 11 44 24 48       	movups %xmm0,0x48(%rsp)
    a665:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    a66a:	44 89 f0             	mov    %r14d,%eax
    a66d:	45 09 e6             	or     %r12d,%r14d
    a670:	83 e0 06             	and    $0x6,%eax
    a673:	0f 11 44 24 58       	movups %xmm0,0x58(%rsp)
    a678:	89 44 24 24          	mov    %eax,0x24(%rsp)
    a67c:	0f 11 44 24 68       	movups %xmm0,0x68(%rsp)
    a681:	49 39 df             	cmp    %rbx,%r15
    a684:	72 76                	jb     a6fc <ema_modify_permissions+0x15c>
    a686:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a68d:	00 00 00 
    a690:	49 8b 45 00          	mov    0x0(%r13),%rax
    a694:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    a699:	48 39 d0             	cmp    %rdx,%rax
    a69c:	0f 82 ce 00 00 00    	jb     a770 <ema_modify_permissions+0x1d0>
    a6a2:	49 03 45 08          	add    0x8(%r13),%rax
    a6a6:	48 39 c3             	cmp    %rax,%rbx
    a6a9:	0f 82 f9 00 00 00    	jb     a7a8 <ema_modify_permissions+0x208>
    a6af:	49 8b 45 18          	mov    0x18(%r13),%rax
    a6b3:	48 63 54 24 20       	movslq 0x20(%rsp),%rdx
    a6b8:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    a6bc:	48 09 d0             	or     %rdx,%rax
    a6bf:	49 89 45 18          	mov    %rax,0x18(%r13)
    a6c3:	85 d2                	test   %edx,%edx
    a6c5:	74 79                	je     a740 <ema_modify_permissions+0x1a0>
    a6c7:	31 c0                	xor    %eax,%eax
    a6c9:	48 8b 94 24 b8 00 00 	mov    0xb8(%rsp),%rdx
    a6d0:	00 
    a6d1:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    a6d8:	00 00 
    a6da:	0f 85 f8 00 00 00    	jne    a7d8 <ema_modify_permissions+0x238>
    a6e0:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    a6e4:	5b                   	pop    %rbx
    a6e5:	41 5c                	pop    %r12
    a6e7:	41 5d                	pop    %r13
    a6e9:	41 5e                	pop    %r14
    a6eb:	41 5f                	pop    %r15
    a6ed:	5d                   	pop    %rbp
    a6ee:	c3                   	ret    
    a6ef:	90                   	nop
    a6f0:	49 81 c7 00 10 00 00 	add    $0x1000,%r15
    a6f7:	49 39 df             	cmp    %rbx,%r15
    a6fa:	73 94                	jae    a690 <ema_modify_permissions+0xf0>
    a6fc:	45 39 f4             	cmp    %r14d,%r12d
    a6ff:	74 0d                	je     a70e <ema_modify_permissions+0x16e>
    a701:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
    a706:	4c 89 fe             	mov    %r15,%rsi
    a709:	e8 ed 7d 00 00       	call   124fb <do_emodpe>
    a70e:	83 7c 24 24 06       	cmpl   $0x6,0x24(%rsp)
    a713:	74 db                	je     a6f0 <ema_modify_permissions+0x150>
    a715:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
    a71a:	4c 89 fe             	mov    %r15,%rsi
    a71d:	e8 9d 7d 00 00       	call   124bf <do_eaccept>
    a722:	85 c0                	test   %eax,%eax
    a724:	75 a3                	jne    a6c9 <ema_modify_permissions+0x129>
    a726:	49 81 c7 00 10 00 00 	add    $0x1000,%r15
    a72d:	49 39 df             	cmp    %rbx,%r15
    a730:	0f 83 5a ff ff ff    	jae    a690 <ema_modify_permissions+0xf0>
    a736:	45 39 f4             	cmp    %r14d,%r12d
    a739:	74 da                	je     a715 <ema_modify_permissions+0x175>
    a73b:	eb c4                	jmp    a701 <ema_modify_permissions+0x161>
    a73d:	0f 1f 00             	nopl   (%rax)
    a740:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
    a744:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    a749:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    a74e:	89 ca                	mov    %ecx,%edx
    a750:	e8 3b b1 ff ff       	call   5890 <sgx_mm_modify_ocall>
    a755:	85 c0                	test   %eax,%eax
    a757:	0f 84 6a ff ff ff    	je     a6c7 <ema_modify_permissions+0x127>
    a75d:	0f 1f 00             	nopl   (%rax)
    a760:	b8 0e 00 00 00       	mov    $0xe,%eax
    a765:	e9 5f ff ff ff       	jmp    a6c9 <ema_modify_permissions+0x129>
    a76a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a770:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    a775:	31 d2                	xor    %edx,%edx
    a777:	48 8d 4c 24 38       	lea    0x38(%rsp),%rcx
    a77c:	4c 89 ef             	mov    %r13,%rdi
    a77f:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    a786:	00 00 
    a788:	e8 23 f2 ff ff       	call   99b0 <ema_split>
    a78d:	85 c0                	test   %eax,%eax
    a78f:	0f 85 34 ff ff ff    	jne    a6c9 <ema_modify_permissions+0x129>
    a795:	4c 8b 6c 24 38       	mov    0x38(%rsp),%r13
    a79a:	49 8b 45 00          	mov    0x0(%r13),%rax
    a79e:	e9 ff fe ff ff       	jmp    a6a2 <ema_modify_permissions+0x102>
    a7a3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a7a8:	4c 89 ef             	mov    %r13,%rdi
    a7ab:	48 8d 4c 24 38       	lea    0x38(%rsp),%rcx
    a7b0:	ba 01 00 00 00       	mov    $0x1,%edx
    a7b5:	48 89 de             	mov    %rbx,%rsi
    a7b8:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    a7bf:	00 00 
    a7c1:	e8 ea f1 ff ff       	call   99b0 <ema_split>
    a7c6:	4c 8b 6c 24 38       	mov    0x38(%rsp),%r13
    a7cb:	85 c0                	test   %eax,%eax
    a7cd:	0f 84 dc fe ff ff    	je     a6af <ema_modify_permissions+0x10f>
    a7d3:	e9 f1 fe ff ff       	jmp    a6c9 <ema_modify_permissions+0x129>
    a7d8:	e8 c3 61 00 00       	call   109a0 <__stack_chk_fail>
    a7dd:	0f 1f 00             	nopl   (%rax)

000000000000a7e0 <ema_do_uncommit>:
    a7e0:	f3 0f 1e fa          	endbr64 
    a7e4:	41 55                	push   %r13
    a7e6:	49 89 f5             	mov    %rsi,%r13
    a7e9:	41 54                	push   %r12
    a7eb:	53                   	push   %rbx
    a7ec:	48 83 ec 10          	sub    $0x10,%rsp
    a7f0:	48 8b 07             	mov    (%rdi),%rax
    a7f3:	44 8b 67 18          	mov    0x18(%rdi),%r12d
    a7f7:	48 39 f0             	cmp    %rsi,%rax
    a7fa:	4c 0f 43 e8          	cmovae %rax,%r13
    a7fe:	48 03 47 08          	add    0x8(%rdi),%rax
    a802:	48 39 d0             	cmp    %rdx,%rax
    a805:	48 0f 47 c2          	cmova  %rdx,%rax
    a809:	48 89 c3             	mov    %rax,%rbx
    a80c:	41 83 e4 07          	and    $0x7,%r12d
    a810:	74 1e                	je     a830 <ema_do_uncommit+0x50>
    a812:	48 83 c4 10          	add    $0x10,%rsp
    a816:	44 89 e1             	mov    %r12d,%ecx
    a819:	48 89 da             	mov    %rbx,%rdx
    a81c:	4c 89 ee             	mov    %r13,%rsi
    a81f:	5b                   	pop    %rbx
    a820:	41 5c                	pop    %r12
    a822:	41 5d                	pop    %r13
    a824:	e9 37 ed ff ff       	jmp    9560 <ema_do_uncommit_real>
    a829:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a830:	b9 01 00 00 00       	mov    $0x1,%ecx
    a835:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    a83a:	e8 61 fd ff ff       	call   a5a0 <ema_modify_permissions>
    a83f:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    a844:	eb cc                	jmp    a812 <ema_do_uncommit+0x32>
    a846:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a84d:	00 00 00 

000000000000a850 <ema_do_dealloc>:
    a850:	f3 0f 1e fa          	endbr64 
    a854:	41 54                	push   %r12
    a856:	49 89 f4             	mov    %rsi,%r12
    a859:	55                   	push   %rbp
    a85a:	53                   	push   %rbx
    a85b:	48 89 fb             	mov    %rdi,%rbx
    a85e:	48 83 ec 10          	sub    $0x10,%rsp
    a862:	48 8b 6f 08          	mov    0x8(%rdi),%rbp
    a866:	48 8b 4f 18          	mov    0x18(%rdi),%rcx
    a86a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a871:	00 00 
    a873:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    a878:	48 8b 07             	mov    (%rdi),%rax
    a87b:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    a882:	00 
    a883:	48 39 f0             	cmp    %rsi,%rax
    a886:	4c 0f 43 e0          	cmovae %rax,%r12
    a88a:	48 01 c5             	add    %rax,%rbp
    a88d:	48 39 d5             	cmp    %rdx,%rbp
    a890:	48 0f 47 ea          	cmova  %rdx,%rbp
    a894:	f6 47 10 01          	testb  $0x1,0x10(%rdi)
    a898:	75 1c                	jne    a8b6 <ema_do_dealloc+0x66>
    a89a:	83 e1 07             	and    $0x7,%ecx
    a89d:	74 71                	je     a910 <ema_do_dealloc+0xc0>
    a89f:	31 c9                	xor    %ecx,%ecx
    a8a1:	48 89 ea             	mov    %rbp,%rdx
    a8a4:	4c 89 e6             	mov    %r12,%rsi
    a8a7:	48 89 df             	mov    %rbx,%rdi
    a8aa:	e8 b1 ec ff ff       	call   9560 <ema_do_uncommit_real>
    a8af:	85 c0                	test   %eax,%eax
    a8b1:	75 3e                	jne    a8f1 <ema_do_dealloc+0xa1>
    a8b3:	48 8b 03             	mov    (%rbx),%rax
    a8b6:	4c 39 e0             	cmp    %r12,%rax
    a8b9:	72 65                	jb     a920 <ema_do_dealloc+0xd0>
    a8bb:	48 03 43 08          	add    0x8(%rbx),%rax
    a8bf:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    a8c6:	00 
    a8c7:	48 39 c5             	cmp    %rax,%rbp
    a8ca:	73 1b                	jae    a8e7 <ema_do_dealloc+0x97>
    a8cc:	48 89 e1             	mov    %rsp,%rcx
    a8cf:	ba 01 00 00 00       	mov    $0x1,%edx
    a8d4:	48 89 ee             	mov    %rbp,%rsi
    a8d7:	48 89 df             	mov    %rbx,%rdi
    a8da:	e8 d1 f0 ff ff       	call   99b0 <ema_split>
    a8df:	85 c0                	test   %eax,%eax
    a8e1:	75 0e                	jne    a8f1 <ema_do_dealloc+0xa1>
    a8e3:	48 8b 1c 24          	mov    (%rsp),%rbx
    a8e7:	48 89 df             	mov    %rbx,%rdi
    a8ea:	e8 11 f8 ff ff       	call   a100 <ema_destroy>
    a8ef:	31 c0                	xor    %eax,%eax
    a8f1:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    a8f6:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    a8fd:	00 00 
    a8ff:	75 3f                	jne    a940 <ema_do_dealloc+0xf0>
    a901:	48 83 c4 10          	add    $0x10,%rsp
    a905:	5b                   	pop    %rbx
    a906:	5d                   	pop    %rbp
    a907:	41 5c                	pop    %r12
    a909:	c3                   	ret    
    a90a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a910:	b9 01 00 00 00       	mov    $0x1,%ecx
    a915:	e8 86 fc ff ff       	call   a5a0 <ema_modify_permissions>
    a91a:	eb 83                	jmp    a89f <ema_do_dealloc+0x4f>
    a91c:	0f 1f 40 00          	nopl   0x0(%rax)
    a920:	31 d2                	xor    %edx,%edx
    a922:	48 89 e1             	mov    %rsp,%rcx
    a925:	4c 89 e6             	mov    %r12,%rsi
    a928:	48 89 df             	mov    %rbx,%rdi
    a92b:	e8 80 f0 ff ff       	call   99b0 <ema_split>
    a930:	85 c0                	test   %eax,%eax
    a932:	75 bd                	jne    a8f1 <ema_do_dealloc+0xa1>
    a934:	48 8b 1c 24          	mov    (%rsp),%rbx
    a938:	48 8b 03             	mov    (%rbx),%rax
    a93b:	e9 7b ff ff ff       	jmp    a8bb <ema_do_dealloc+0x6b>
    a940:	e8 5b 60 00 00       	call   109a0 <__stack_chk_fail>
    a945:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a94c:	00 00 00 
    a94f:	90                   	nop

000000000000a950 <ema_do_dealloc_loop>:
    a950:	f3 0f 1e fa          	endbr64 
    a954:	41 55                	push   %r13
    a956:	49 89 d5             	mov    %rdx,%r13
    a959:	41 54                	push   %r12
    a95b:	49 89 cc             	mov    %rcx,%r12
    a95e:	55                   	push   %rbp
    a95f:	48 89 f5             	mov    %rsi,%rbp
    a962:	53                   	push   %rbx
    a963:	48 83 ec 08          	sub    $0x8,%rsp
    a967:	eb 1d                	jmp    a986 <ema_do_dealloc_loop+0x36>
    a969:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a970:	4c 89 e2             	mov    %r12,%rdx
    a973:	4c 89 ee             	mov    %r13,%rsi
    a976:	48 8b 5f 38          	mov    0x38(%rdi),%rbx
    a97a:	e8 d1 fe ff ff       	call   a850 <ema_do_dealloc>
    a97f:	85 c0                	test   %eax,%eax
    a981:	75 0a                	jne    a98d <ema_do_dealloc_loop+0x3d>
    a983:	48 89 df             	mov    %rbx,%rdi
    a986:	48 39 ef             	cmp    %rbp,%rdi
    a989:	75 e5                	jne    a970 <ema_do_dealloc_loop+0x20>
    a98b:	31 c0                	xor    %eax,%eax
    a98d:	48 83 c4 08          	add    $0x8,%rsp
    a991:	5b                   	pop    %rbx
    a992:	5d                   	pop    %rbp
    a993:	41 5c                	pop    %r12
    a995:	41 5d                	pop    %r13
    a997:	c3                   	ret    
    a998:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a99f:	00 

000000000000a9a0 <ema_do_uncommit_loop>:
    a9a0:	f3 0f 1e fa          	endbr64 
    a9a4:	41 57                	push   %r15
    a9a6:	41 56                	push   %r14
    a9a8:	41 55                	push   %r13
    a9aa:	41 54                	push   %r12
    a9ac:	49 89 d4             	mov    %rdx,%r12
    a9af:	55                   	push   %rbp
    a9b0:	48 89 cd             	mov    %rcx,%rbp
    a9b3:	53                   	push   %rbx
    a9b4:	48 83 ec 18          	sub    $0x18,%rsp
    a9b8:	48 8b 17             	mov    (%rdi),%rdx
    a9bb:	48 39 f7             	cmp    %rsi,%rdi
    a9be:	0f 84 d9 00 00 00    	je     aa9d <ema_do_uncommit_loop+0xfd>
    a9c4:	49 89 ff             	mov    %rdi,%r15
    a9c7:	48 89 f3             	mov    %rsi,%rbx
    a9ca:	48 89 f8             	mov    %rdi,%rax
    a9cd:	0f 1f 00             	nopl   (%rax)
    a9d0:	f6 40 10 01          	testb  $0x1,0x10(%rax)
    a9d4:	75 32                	jne    aa08 <ema_do_uncommit_loop+0x68>
    a9d6:	48 8b 48 08          	mov    0x8(%rax),%rcx
    a9da:	48 8b 40 38          	mov    0x38(%rax),%rax
    a9de:	48 01 d1             	add    %rdx,%rcx
    a9e1:	48 39 c3             	cmp    %rax,%rbx
    a9e4:	74 3a                	je     aa20 <ema_do_uncommit_loop+0x80>
    a9e6:	48 8b 10             	mov    (%rax),%rdx
    a9e9:	48 39 ca             	cmp    %rcx,%rdx
    a9ec:	74 e2                	je     a9d0 <ema_do_uncommit_loop+0x30>
    a9ee:	b8 16 00 00 00       	mov    $0x16,%eax
    a9f3:	48 83 c4 18          	add    $0x18,%rsp
    a9f7:	5b                   	pop    %rbx
    a9f8:	5d                   	pop    %rbp
    a9f9:	41 5c                	pop    %r12
    a9fb:	41 5d                	pop    %r13
    a9fd:	41 5e                	pop    %r14
    a9ff:	41 5f                	pop    %r15
    aa01:	c3                   	ret    
    aa02:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    aa08:	48 83 c4 18          	add    $0x18,%rsp
    aa0c:	b8 0d 00 00 00       	mov    $0xd,%eax
    aa11:	5b                   	pop    %rbx
    aa12:	5d                   	pop    %rbp
    aa13:	41 5c                	pop    %r12
    aa15:	41 5d                	pop    %r13
    aa17:	41 5e                	pop    %r14
    aa19:	41 5f                	pop    %r15
    aa1b:	c3                   	ret    
    aa1c:	0f 1f 40 00          	nopl   0x0(%rax)
    aa20:	b8 16 00 00 00       	mov    $0x16,%eax
    aa25:	48 39 e9             	cmp    %rbp,%rcx
    aa28:	73 1e                	jae    aa48 <ema_do_uncommit_loop+0xa8>
    aa2a:	eb c7                	jmp    a9f3 <ema_do_uncommit_loop+0x53>
    aa2c:	0f 1f 40 00          	nopl   0x0(%rax)
    aa30:	44 89 c1             	mov    %r8d,%ecx
    aa33:	4c 89 f2             	mov    %r14,%rdx
    aa36:	4c 89 ce             	mov    %r9,%rsi
    aa39:	4c 89 ff             	mov    %r15,%rdi
    aa3c:	e8 1f eb ff ff       	call   9560 <ema_do_uncommit_real>
    aa41:	85 c0                	test   %eax,%eax
    aa43:	75 ae                	jne    a9f3 <ema_do_uncommit_loop+0x53>
    aa45:	4d 89 ef             	mov    %r13,%r15
    aa48:	49 39 df             	cmp    %rbx,%r15
    aa4b:	74 5e                	je     aaab <ema_do_uncommit_loop+0x10b>
    aa4d:	49 8b 07             	mov    (%r15),%rax
    aa50:	45 8b 47 18          	mov    0x18(%r15),%r8d
    aa54:	4d 8b 6f 38          	mov    0x38(%r15),%r13
    aa58:	49 39 c4             	cmp    %rax,%r12
    aa5b:	49 89 c1             	mov    %rax,%r9
    aa5e:	4d 0f 43 cc          	cmovae %r12,%r9
    aa62:	49 03 47 08          	add    0x8(%r15),%rax
    aa66:	48 39 e8             	cmp    %rbp,%rax
    aa69:	48 0f 47 c5          	cmova  %rbp,%rax
    aa6d:	49 89 c6             	mov    %rax,%r14
    aa70:	41 83 e0 07          	and    $0x7,%r8d
    aa74:	75 ba                	jne    aa30 <ema_do_uncommit_loop+0x90>
    aa76:	b9 01 00 00 00       	mov    $0x1,%ecx
    aa7b:	48 89 ea             	mov    %rbp,%rdx
    aa7e:	4c 89 e6             	mov    %r12,%rsi
    aa81:	4c 89 ff             	mov    %r15,%rdi
    aa84:	44 89 44 24 0c       	mov    %r8d,0xc(%rsp)
    aa89:	4c 89 0c 24          	mov    %r9,(%rsp)
    aa8d:	e8 0e fb ff ff       	call   a5a0 <ema_modify_permissions>
    aa92:	44 8b 44 24 0c       	mov    0xc(%rsp),%r8d
    aa97:	4c 8b 0c 24          	mov    (%rsp),%r9
    aa9b:	eb 93                	jmp    aa30 <ema_do_uncommit_loop+0x90>
    aa9d:	b8 16 00 00 00       	mov    $0x16,%eax
    aaa2:	48 39 ca             	cmp    %rcx,%rdx
    aaa5:	0f 82 48 ff ff ff    	jb     a9f3 <ema_do_uncommit_loop+0x53>
    aaab:	48 83 c4 18          	add    $0x18,%rsp
    aaaf:	31 c0                	xor    %eax,%eax
    aab1:	5b                   	pop    %rbx
    aab2:	5d                   	pop    %rbp
    aab3:	41 5c                	pop    %r12
    aab5:	41 5d                	pop    %r13
    aab7:	41 5e                	pop    %r14
    aab9:	41 5f                	pop    %r15
    aabb:	c3                   	ret    
    aabc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000aac0 <ema_modify_permissions_loop>:
    aac0:	f3 0f 1e fa          	endbr64 
    aac4:	41 57                	push   %r15
    aac6:	41 56                	push   %r14
    aac8:	41 55                	push   %r13
    aaca:	41 54                	push   %r12
    aacc:	55                   	push   %rbp
    aacd:	48 89 d5             	mov    %rdx,%rbp
    aad0:	53                   	push   %rbx
    aad1:	48 89 cb             	mov    %rcx,%rbx
    aad4:	48 83 ec 08          	sub    $0x8,%rsp
    aad8:	48 8b 17             	mov    (%rdi),%rdx
    aadb:	48 39 f7             	cmp    %rsi,%rdi
    aade:	0f 84 de 00 00 00    	je     abc2 <ema_modify_permissions_loop+0x102>
    aae4:	49 89 fe             	mov    %rdi,%r14
    aae7:	49 89 f4             	mov    %rsi,%r12
    aaea:	45 89 c5             	mov    %r8d,%r13d
    aaed:	49 89 ff             	mov    %rdi,%r15
    aaf0:	41 f6 47 19 02       	testb  $0x2,0x19(%r15)
    aaf5:	74 79                	je     ab70 <ema_modify_permissions_loop+0xb0>
    aaf7:	41 f6 47 10 01       	testb  $0x1,0x10(%r15)
    aafc:	75 72                	jne    ab70 <ema_modify_permissions_loop+0xb0>
    aafe:	48 39 d5             	cmp    %rdx,%rbp
    ab01:	48 89 d6             	mov    %rdx,%rsi
    ab04:	49 8b 47 08          	mov    0x8(%r15),%rax
    ab08:	49 8b 7f 20          	mov    0x20(%r15),%rdi
    ab0c:	48 0f 43 f5          	cmovae %rbp,%rsi
    ab10:	48 01 d0             	add    %rdx,%rax
    ab13:	48 29 d6             	sub    %rdx,%rsi
    ab16:	48 c1 ee 0c          	shr    $0xc,%rsi
    ab1a:	48 39 d8             	cmp    %rbx,%rax
    ab1d:	48 0f 47 c3          	cmova  %rbx,%rax
    ab21:	48 29 d0             	sub    %rdx,%rax
    ab24:	48 c1 e8 0c          	shr    $0xc,%rax
    ab28:	48 85 ff             	test   %rdi,%rdi
    ab2b:	74 27                	je     ab54 <ema_modify_permissions_loop+0x94>
    ab2d:	48 29 f0             	sub    %rsi,%rax
    ab30:	48 89 c2             	mov    %rax,%rdx
    ab33:	e8 28 e4 ff ff       	call   8f60 <bit_array_test_range>
    ab38:	84 c0                	test   %al,%al
    ab3a:	74 18                	je     ab54 <ema_modify_permissions_loop+0x94>
    ab3c:	49 8b 47 08          	mov    0x8(%r15),%rax
    ab40:	49 03 07             	add    (%r15),%rax
    ab43:	4d 8b 7f 38          	mov    0x38(%r15),%r15
    ab47:	4d 39 fc             	cmp    %r15,%r12
    ab4a:	74 3c                	je     ab88 <ema_modify_permissions_loop+0xc8>
    ab4c:	49 8b 17             	mov    (%r15),%rdx
    ab4f:	48 39 d0             	cmp    %rdx,%rax
    ab52:	74 9c                	je     aaf0 <ema_modify_permissions_loop+0x30>
    ab54:	b8 16 00 00 00       	mov    $0x16,%eax
    ab59:	48 83 c4 08          	add    $0x8,%rsp
    ab5d:	5b                   	pop    %rbx
    ab5e:	5d                   	pop    %rbp
    ab5f:	41 5c                	pop    %r12
    ab61:	41 5d                	pop    %r13
    ab63:	41 5e                	pop    %r14
    ab65:	41 5f                	pop    %r15
    ab67:	c3                   	ret    
    ab68:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    ab6f:	00 
    ab70:	48 83 c4 08          	add    $0x8,%rsp
    ab74:	b8 0d 00 00 00       	mov    $0xd,%eax
    ab79:	5b                   	pop    %rbx
    ab7a:	5d                   	pop    %rbp
    ab7b:	41 5c                	pop    %r12
    ab7d:	41 5d                	pop    %r13
    ab7f:	41 5e                	pop    %r14
    ab81:	41 5f                	pop    %r15
    ab83:	c3                   	ret    
    ab84:	0f 1f 40 00          	nopl   0x0(%rax)
    ab88:	48 39 d8             	cmp    %rbx,%rax
    ab8b:	73 1f                	jae    abac <ema_modify_permissions_loop+0xec>
    ab8d:	eb c5                	jmp    ab54 <ema_modify_permissions_loop+0x94>
    ab8f:	90                   	nop
    ab90:	44 89 e9             	mov    %r13d,%ecx
    ab93:	48 89 da             	mov    %rbx,%rdx
    ab96:	48 89 ee             	mov    %rbp,%rsi
    ab99:	4c 89 f7             	mov    %r14,%rdi
    ab9c:	4d 8b 7e 38          	mov    0x38(%r14),%r15
    aba0:	e8 fb f9 ff ff       	call   a5a0 <ema_modify_permissions>
    aba5:	85 c0                	test   %eax,%eax
    aba7:	75 b0                	jne    ab59 <ema_modify_permissions_loop+0x99>
    aba9:	4d 89 fe             	mov    %r15,%r14
    abac:	4d 39 f4             	cmp    %r14,%r12
    abaf:	75 df                	jne    ab90 <ema_modify_permissions_loop+0xd0>
    abb1:	31 c0                	xor    %eax,%eax
    abb3:	48 83 c4 08          	add    $0x8,%rsp
    abb7:	5b                   	pop    %rbx
    abb8:	5d                   	pop    %rbp
    abb9:	41 5c                	pop    %r12
    abbb:	41 5d                	pop    %r13
    abbd:	41 5e                	pop    %r14
    abbf:	41 5f                	pop    %r15
    abc1:	c3                   	ret    
    abc2:	48 39 ca             	cmp    %rcx,%rdx
    abc5:	72 8d                	jb     ab54 <ema_modify_permissions_loop+0x94>
    abc7:	31 c0                	xor    %eax,%eax
    abc9:	eb e8                	jmp    abb3 <ema_modify_permissions_loop+0xf3>
    abcb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000abd0 <ema_do_commit_data>:
    abd0:	f3 0f 1e fa          	endbr64 
    abd4:	55                   	push   %rbp
    abd5:	41 81 c8 00 02 00 00 	or     $0x200,%r8d
    abdc:	66 0f ef c0          	pxor   %xmm0,%xmm0
    abe0:	4d 63 c0             	movslq %r8d,%r8
    abe3:	48 89 e5             	mov    %rsp,%rbp
    abe6:	41 57                	push   %r15
    abe8:	41 56                	push   %r14
    abea:	49 89 f6             	mov    %rsi,%r14
    abed:	41 55                	push   %r13
    abef:	41 54                	push   %r12
    abf1:	49 89 d4             	mov    %rdx,%r12
    abf4:	53                   	push   %rbx
    abf5:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    abf9:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
    ac00:	48 89 7c 24 38       	mov    %rdi,0x38(%rsp)
    ac05:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    ac0c:	00 00 
    ac0e:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
    ac15:	00 
    ac16:	31 c0                	xor    %eax,%eax
    ac18:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
    ac1d:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
    ac24:	00 00 
    ac26:	0f 11 44 24 48       	movups %xmm0,0x48(%rsp)
    ac2b:	0f 11 44 24 58       	movups %xmm0,0x58(%rsp)
    ac30:	0f 11 44 24 68       	movups %xmm0,0x68(%rsp)
    ac35:	48 39 d6             	cmp    %rdx,%rsi
    ac38:	73 46                	jae    ac80 <ema_do_commit_data+0xb0>
    ac3a:	48 29 f1             	sub    %rsi,%rcx
    ac3d:	49 89 f7             	mov    %rsi,%r15
    ac40:	4c 8d 6c 24 40       	lea    0x40(%rsp),%r13
    ac45:	48 89 cb             	mov    %rcx,%rbx
    ac48:	eb 12                	jmp    ac5c <ema_do_commit_data+0x8c>
    ac4a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    ac50:	49 81 c7 00 10 00 00 	add    $0x1000,%r15
    ac57:	4d 39 e7             	cmp    %r12,%r15
    ac5a:	73 24                	jae    ac80 <ema_do_commit_data+0xb0>
    ac5c:	4a 8d 14 3b          	lea    (%rbx,%r15,1),%rdx
    ac60:	4c 89 fe             	mov    %r15,%rsi
    ac63:	4c 89 ef             	mov    %r13,%rdi
    ac66:	e8 72 78 00 00       	call   124dd <do_eacceptcopy>
    ac6b:	85 c0                	test   %eax,%eax
    ac6d:	74 e1                	je     ac50 <ema_do_commit_data+0x80>
    ac6f:	b8 0e 00 00 00       	mov    $0xe,%eax
    ac74:	eb 1a                	jmp    ac90 <ema_do_commit_data+0xc0>
    ac76:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    ac7d:	00 00 00 
    ac80:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
    ac85:	4c 89 e2             	mov    %r12,%rdx
    ac88:	4c 89 f6             	mov    %r14,%rsi
    ac8b:	e8 70 eb ff ff       	call   9800 <ema_set_eaccept>
    ac90:	48 8b 94 24 b8 00 00 	mov    0xb8(%rsp),%rdx
    ac97:	00 
    ac98:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    ac9f:	00 00 
    aca1:	75 0f                	jne    acb2 <ema_do_commit_data+0xe2>
    aca3:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    aca7:	5b                   	pop    %rbx
    aca8:	41 5c                	pop    %r12
    acaa:	41 5d                	pop    %r13
    acac:	41 5e                	pop    %r14
    acae:	41 5f                	pop    %r15
    acb0:	5d                   	pop    %rbp
    acb1:	c3                   	ret    
    acb2:	e8 e9 5c 00 00       	call   109a0 <__stack_chk_fail>
    acb7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    acbe:	00 00 

000000000000acc0 <ema_do_commit_data_loop>:
    acc0:	f3 0f 1e fa          	endbr64 
    acc4:	41 57                	push   %r15
    acc6:	41 56                	push   %r14
    acc8:	41 55                	push   %r13
    acca:	41 54                	push   %r12
    accc:	55                   	push   %rbp
    accd:	53                   	push   %rbx
    acce:	48 89 cb             	mov    %rcx,%rbx
    acd1:	48 83 ec 18          	sub    $0x18,%rsp
    acd5:	48 8b 0f             	mov    (%rdi),%rcx
    acd8:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    acdd:	44 89 4c 24 04       	mov    %r9d,0x4(%rsp)
    ace2:	48 39 f7             	cmp    %rsi,%rdi
    ace5:	0f 84 a2 00 00 00    	je     ad8d <ema_do_commit_data_loop+0xcd>
    aceb:	48 89 fd             	mov    %rdi,%rbp
    acee:	49 89 f4             	mov    %rsi,%r12
    acf1:	49 89 d7             	mov    %rdx,%r15
    acf4:	49 89 fd             	mov    %rdi,%r13
    acf7:	eb 72                	jmp    ad6b <ema_do_commit_data_loop+0xab>
    acf9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    ad00:	41 8b 45 10          	mov    0x10(%r13),%eax
    ad04:	a8 01                	test   $0x1,%al
    ad06:	75 71                	jne    ad79 <ema_do_commit_data_loop+0xb9>
    ad08:	a8 04                	test   $0x4,%al
    ad0a:	0f 84 86 00 00 00    	je     ad96 <ema_do_commit_data_loop+0xd6>
    ad10:	49 8b 7d 20          	mov    0x20(%r13),%rdi
    ad14:	49 8b 45 08          	mov    0x8(%r13),%rax
    ad18:	48 85 ff             	test   %rdi,%rdi
    ad1b:	74 39                	je     ad56 <ema_do_commit_data_loop+0x96>
    ad1d:	49 39 cf             	cmp    %rcx,%r15
    ad20:	48 89 ce             	mov    %rcx,%rsi
    ad23:	49 0f 43 f7          	cmovae %r15,%rsi
    ad27:	48 01 c8             	add    %rcx,%rax
    ad2a:	48 29 ce             	sub    %rcx,%rsi
    ad2d:	48 c1 ee 0c          	shr    $0xc,%rsi
    ad31:	48 39 d8             	cmp    %rbx,%rax
    ad34:	48 0f 47 c3          	cmova  %rbx,%rax
    ad38:	48 89 c2             	mov    %rax,%rdx
    ad3b:	48 29 ca             	sub    %rcx,%rdx
    ad3e:	48 c1 ea 0c          	shr    $0xc,%rdx
    ad42:	48 29 f2             	sub    %rsi,%rdx
    ad45:	e8 d6 e2 ff ff       	call   9020 <bit_array_test_range_any>
    ad4a:	84 c0                	test   %al,%al
    ad4c:	75 2b                	jne    ad79 <ema_do_commit_data_loop+0xb9>
    ad4e:	49 8b 4d 00          	mov    0x0(%r13),%rcx
    ad52:	49 8b 45 08          	mov    0x8(%r13),%rax
    ad56:	4d 8b 6d 38          	mov    0x38(%r13),%r13
    ad5a:	48 01 c8             	add    %rcx,%rax
    ad5d:	4d 39 ec             	cmp    %r13,%r12
    ad60:	74 4e                	je     adb0 <ema_do_commit_data_loop+0xf0>
    ad62:	49 8b 4d 00          	mov    0x0(%r13),%rcx
    ad66:	48 39 c8             	cmp    %rcx,%rax
    ad69:	75 2b                	jne    ad96 <ema_do_commit_data_loop+0xd6>
    ad6b:	49 8b 45 18          	mov    0x18(%r13),%rax
    ad6f:	48 f7 d0             	not    %rax
    ad72:	a9 02 02 00 00       	test   $0x202,%eax
    ad77:	74 87                	je     ad00 <ema_do_commit_data_loop+0x40>
    ad79:	b8 0d 00 00 00       	mov    $0xd,%eax
    ad7e:	48 83 c4 18          	add    $0x18,%rsp
    ad82:	5b                   	pop    %rbx
    ad83:	5d                   	pop    %rbp
    ad84:	41 5c                	pop    %r12
    ad86:	41 5d                	pop    %r13
    ad88:	41 5e                	pop    %r14
    ad8a:	41 5f                	pop    %r15
    ad8c:	c3                   	ret    
    ad8d:	48 39 d9             	cmp    %rbx,%rcx
    ad90:	0f 83 98 00 00 00    	jae    ae2e <ema_do_commit_data_loop+0x16e>
    ad96:	48 83 c4 18          	add    $0x18,%rsp
    ad9a:	b8 16 00 00 00       	mov    $0x16,%eax
    ad9f:	5b                   	pop    %rbx
    ada0:	5d                   	pop    %rbp
    ada1:	41 5c                	pop    %r12
    ada3:	41 5d                	pop    %r13
    ada5:	41 5e                	pop    %r14
    ada7:	41 5f                	pop    %r15
    ada9:	c3                   	ret    
    adaa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    adb0:	48 39 d8             	cmp    %rbx,%rax
    adb3:	72 e1                	jb     ad96 <ema_do_commit_data_loop+0xd6>
    adb5:	49 89 ee             	mov    %rbp,%r14
    adb8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    adbf:	00 
    adc0:	49 8b 16             	mov    (%r14),%rdx
    adc3:	4c 89 fe             	mov    %r15,%rsi
    adc6:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    adcb:	4c 89 f7             	mov    %r14,%rdi
    adce:	44 8b 44 24 04       	mov    0x4(%rsp),%r8d
    add3:	4c 39 fa             	cmp    %r15,%rdx
    add6:	48 0f 43 f2          	cmovae %rdx,%rsi
    adda:	49 03 56 08          	add    0x8(%r14),%rdx
    adde:	48 89 f1             	mov    %rsi,%rcx
    ade1:	4c 29 f9             	sub    %r15,%rcx
    ade4:	48 01 c1             	add    %rax,%rcx
    ade7:	48 39 da             	cmp    %rbx,%rdx
    adea:	48 0f 47 d3          	cmova  %rbx,%rdx
    adee:	e8 dd fd ff ff       	call   abd0 <ema_do_commit_data>
    adf3:	85 c0                	test   %eax,%eax
    adf5:	75 87                	jne    ad7e <ema_do_commit_data_loop+0xbe>
    adf7:	4d 8b 76 38          	mov    0x38(%r14),%r14
    adfb:	4d 39 ee             	cmp    %r13,%r14
    adfe:	75 c0                	jne    adc0 <ema_do_commit_data_loop+0x100>
    ae00:	49 39 ec             	cmp    %rbp,%r12
    ae03:	74 29                	je     ae2e <ema_do_commit_data_loop+0x16e>
    ae05:	0f 1f 00             	nopl   (%rax)
    ae08:	8b 4c 24 04          	mov    0x4(%rsp),%ecx
    ae0c:	48 89 da             	mov    %rbx,%rdx
    ae0f:	4c 89 fe             	mov    %r15,%rsi
    ae12:	48 89 ef             	mov    %rbp,%rdi
    ae15:	4c 8b 75 38          	mov    0x38(%rbp),%r14
    ae19:	e8 82 f7 ff ff       	call   a5a0 <ema_modify_permissions>
    ae1e:	85 c0                	test   %eax,%eax
    ae20:	0f 85 58 ff ff ff    	jne    ad7e <ema_do_commit_data_loop+0xbe>
    ae26:	4c 89 f5             	mov    %r14,%rbp
    ae29:	49 39 ec             	cmp    %rbp,%r12
    ae2c:	75 da                	jne    ae08 <ema_do_commit_data_loop+0x148>
    ae2e:	48 83 c4 18          	add    $0x18,%rsp
    ae32:	31 c0                	xor    %eax,%eax
    ae34:	5b                   	pop    %rbx
    ae35:	5d                   	pop    %rbp
    ae36:	41 5c                	pop    %r12
    ae38:	41 5d                	pop    %r13
    ae3a:	41 5e                	pop    %r14
    ae3c:	41 5f                	pop    %r15
    ae3e:	c3                   	ret    
    ae3f:	90                   	nop

000000000000ae40 <ema_realloc_from_reserve_range>:
    ae40:	f3 0f 1e fa          	endbr64 
    ae44:	41 57                	push   %r15
    ae46:	41 56                	push   %r14
    ae48:	41 55                	push   %r13
    ae4a:	49 89 d5             	mov    %rdx,%r13
    ae4d:	41 54                	push   %r12
    ae4f:	49 89 cc             	mov    %rcx,%r12
    ae52:	55                   	push   %rbp
    ae53:	48 89 fd             	mov    %rdi,%rbp
    ae56:	53                   	push   %rbx
    ae57:	48 89 f3             	mov    %rsi,%rbx
    ae5a:	48 83 ec 28          	sub    $0x28,%rsp
    ae5e:	4c 8b 37             	mov    (%rdi),%r14
    ae61:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
    ae66:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    ae6b:	44 89 44 24 04       	mov    %r8d,0x4(%rsp)
    ae70:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    ae75:	48 39 f7             	cmp    %rsi,%rdi
    ae78:	74 4a                	je     aec4 <ema_realloc_from_reserve_range+0x84>
    ae7a:	49 89 ff             	mov    %rdi,%r15
    ae7d:	eb 1a                	jmp    ae99 <ema_realloc_from_reserve_range+0x59>
    ae7f:	90                   	nop
    ae80:	4d 39 37             	cmp    %r14,(%r15)
    ae83:	75 20                	jne    aea5 <ema_realloc_from_reserve_range+0x65>
    ae85:	41 f6 47 10 01       	testb  $0x1,0x10(%r15)
    ae8a:	74 19                	je     aea5 <ema_realloc_from_reserve_range+0x65>
    ae8c:	4d 03 77 08          	add    0x8(%r15),%r14
    ae90:	4d 8b 7f 38          	mov    0x38(%r15),%r15
    ae94:	49 39 df             	cmp    %rbx,%r15
    ae97:	74 27                	je     aec0 <ema_realloc_from_reserve_range+0x80>
    ae99:	4c 89 ff             	mov    %r15,%rdi
    ae9c:	e8 6f 07 00 00       	call   b610 <can_erealloc>
    aea1:	85 c0                	test   %eax,%eax
    aea3:	75 db                	jne    ae80 <ema_realloc_from_reserve_range+0x40>
    aea5:	48 83 c4 28          	add    $0x28,%rsp
    aea9:	31 c0                	xor    %eax,%eax
    aeab:	5b                   	pop    %rbx
    aeac:	5d                   	pop    %rbp
    aead:	41 5c                	pop    %r12
    aeaf:	41 5d                	pop    %r13
    aeb1:	41 5e                	pop    %r14
    aeb3:	41 5f                	pop    %r15
    aeb5:	c3                   	ret    
    aeb6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    aebd:	00 00 00 
    aec0:	4c 8b 75 00          	mov    0x0(%rbp),%r14
    aec4:	48 8b 5b 40          	mov    0x40(%rbx),%rbx
    aec8:	4d 39 ee             	cmp    %r13,%r14
    aecb:	72 6b                	jb     af38 <ema_realloc_from_reserve_range+0xf8>
    aecd:	48 8b 43 08          	mov    0x8(%rbx),%rax
    aed1:	48 03 03             	add    (%rbx),%rax
    aed4:	49 39 c4             	cmp    %rax,%r12
    aed7:	0f 82 88 00 00 00    	jb     af65 <ema_realloc_from_reserve_range+0x125>
    aedd:	48 8b 6b 38          	mov    0x38(%rbx),%rbp
    aee1:	48 89 6c 24 10       	mov    %rbp,0x10(%rsp)
    aee6:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
    aeeb:	48 39 dd             	cmp    %rbx,%rbp
    aeee:	74 11                	je     af01 <ema_realloc_from_reserve_range+0xc1>
    aef0:	48 89 df             	mov    %rbx,%rdi
    aef3:	48 8b 5b 38          	mov    0x38(%rbx),%rbx
    aef7:	e8 04 f2 ff ff       	call   a100 <ema_destroy>
    aefc:	48 39 dd             	cmp    %rbx,%rbp
    aeff:	75 ef                	jne    aef0 <ema_realloc_from_reserve_range+0xb0>
    af01:	48 83 ec 08          	sub    $0x8,%rsp
    af05:	4c 89 e6             	mov    %r12,%rsi
    af08:	4c 89 ef             	mov    %r13,%rdi
    af0b:	55                   	push   %rbp
    af0c:	4c 8b 4c 24 78       	mov    0x78(%rsp),%r9
    af11:	4c 29 ee             	sub    %r13,%rsi
    af14:	4c 8b 44 24 70       	mov    0x70(%rsp),%r8
    af19:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    af1e:	8b 54 24 14          	mov    0x14(%rsp),%edx
    af22:	e8 c9 f0 ff ff       	call   9ff0 <ema_new>
    af27:	5a                   	pop    %rdx
    af28:	59                   	pop    %rcx
    af29:	48 83 c4 28          	add    $0x28,%rsp
    af2d:	5b                   	pop    %rbx
    af2e:	5d                   	pop    %rbp
    af2f:	41 5c                	pop    %r12
    af31:	41 5d                	pop    %r13
    af33:	41 5e                	pop    %r14
    af35:	41 5f                	pop    %r15
    af37:	c3                   	ret    
    af38:	31 d2                	xor    %edx,%edx
    af3a:	48 8d 4c 24 18       	lea    0x18(%rsp),%rcx
    af3f:	4c 89 ee             	mov    %r13,%rsi
    af42:	48 89 ef             	mov    %rbp,%rdi
    af45:	e8 66 ea ff ff       	call   99b0 <ema_split>
    af4a:	85 c0                	test   %eax,%eax
    af4c:	0f 85 53 ff ff ff    	jne    aea5 <ema_realloc_from_reserve_range+0x65>
    af52:	48 39 dd             	cmp    %rbx,%rbp
    af55:	0f 85 72 ff ff ff    	jne    aecd <ema_realloc_from_reserve_range+0x8d>
    af5b:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
    af60:	e9 68 ff ff ff       	jmp    aecd <ema_realloc_from_reserve_range+0x8d>
    af65:	31 d2                	xor    %edx,%edx
    af67:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
    af6c:	4c 89 e6             	mov    %r12,%rsi
    af6f:	48 89 df             	mov    %rbx,%rdi
    af72:	e8 39 ea ff ff       	call   99b0 <ema_split>
    af77:	85 c0                	test   %eax,%eax
    af79:	0f 85 26 ff ff ff    	jne    aea5 <ema_realloc_from_reserve_range+0x65>
    af7f:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
    af84:	e9 5d ff ff ff       	jmp    aee6 <ema_realloc_from_reserve_range+0xa6>
    af89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000af90 <ema_do_alloc>:
    af90:	f3 0f 1e fa          	endbr64 
    af94:	41 55                	push   %r13
    af96:	41 54                	push   %r12
    af98:	55                   	push   %rbp
    af99:	53                   	push   %rbx
    af9a:	48 83 ec 08          	sub    $0x8,%rsp
    af9e:	8b 6f 10             	mov    0x10(%rdi),%ebp
    afa1:	40 f6 c5 01          	test   $0x1,%bpl
    afa5:	74 11                	je     afb8 <ema_do_alloc+0x28>
    afa7:	31 c0                	xor    %eax,%eax
    afa9:	48 83 c4 08          	add    $0x8,%rsp
    afad:	5b                   	pop    %rbx
    afae:	5d                   	pop    %rbp
    afaf:	41 5c                	pop    %r12
    afb1:	41 5d                	pop    %r13
    afb3:	c3                   	ret    
    afb4:	0f 1f 40 00          	nopl   0x0(%rax)
    afb8:	4c 8b 6f 08          	mov    0x8(%rdi),%r13
    afbc:	8b 57 18             	mov    0x18(%rdi),%edx
    afbf:	48 89 fb             	mov    %rdi,%rbx
    afc2:	89 e9                	mov    %ebp,%ecx
    afc4:	4c 8b 27             	mov    (%rdi),%r12
    afc7:	81 e2 00 ff 00 00    	and    $0xff00,%edx
    afcd:	4c 89 ee             	mov    %r13,%rsi
    afd0:	4c 89 e7             	mov    %r12,%rdi
    afd3:	e8 28 a8 ff ff       	call   5800 <sgx_mm_alloc_ocall>
    afd8:	89 c2                	mov    %eax,%edx
    afda:	b8 0e 00 00 00       	mov    $0xe,%eax
    afdf:	85 d2                	test   %edx,%edx
    afe1:	75 c6                	jne    afa9 <ema_do_alloc+0x19>
    afe3:	40 f6 c5 02          	test   $0x2,%bpl
    afe7:	74 37                	je     b020 <ema_do_alloc+0x90>
    afe9:	89 e9                	mov    %ebp,%ecx
    afeb:	48 8b 53 18          	mov    0x18(%rbx),%rdx
    afef:	4c 89 ee             	mov    %r13,%rsi
    aff2:	4c 89 e7             	mov    %r12,%rdi
    aff5:	c1 e9 04             	shr    $0x4,%ecx
    aff8:	83 f1 01             	xor    $0x1,%ecx
    affb:	83 e1 01             	and    $0x1,%ecx
    affe:	e8 8d f1 ff ff       	call   a190 <do_commit>
    b003:	85 c0                	test   %eax,%eax
    b005:	75 a2                	jne    afa9 <ema_do_alloc+0x19>
    b007:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    b00b:	48 85 ff             	test   %rdi,%rdi
    b00e:	74 50                	je     b060 <ema_do_alloc+0xd0>
    b010:	e8 ab e1 ff ff       	call   91c0 <bit_array_set_all>
    b015:	31 c0                	xor    %eax,%eax
    b017:	eb 90                	jmp    afa9 <ema_do_alloc+0x19>
    b019:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b020:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    b024:	48 85 ff             	test   %rdi,%rdi
    b027:	74 0f                	je     b038 <ema_do_alloc+0xa8>
    b029:	e8 92 e2 ff ff       	call   92c0 <bit_array_reset_all>
    b02e:	31 c0                	xor    %eax,%eax
    b030:	e9 74 ff ff ff       	jmp    afa9 <ema_do_alloc+0x19>
    b035:	0f 1f 00             	nopl   (%rax)
    b038:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    b03c:	48 c1 ef 0c          	shr    $0xc,%rdi
    b040:	e8 7b de ff ff       	call   8ec0 <bit_array_new_reset>
    b045:	48 89 43 20          	mov    %rax,0x20(%rbx)
    b049:	48 85 c0             	test   %rax,%rax
    b04c:	0f 85 55 ff ff ff    	jne    afa7 <ema_do_alloc+0x17>
    b052:	b8 0c 00 00 00       	mov    $0xc,%eax
    b057:	e9 4d ff ff ff       	jmp    afa9 <ema_do_alloc+0x19>
    b05c:	0f 1f 40 00          	nopl   0x0(%rax)
    b060:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    b064:	48 c1 ef 0c          	shr    $0xc,%rdi
    b068:	e8 23 de ff ff       	call   8e90 <bit_array_new_set>
    b06d:	48 89 43 20          	mov    %rax,0x20(%rbx)
    b071:	48 85 c0             	test   %rax,%rax
    b074:	74 dc                	je     b052 <ema_do_alloc+0xc2>
    b076:	31 c0                	xor    %eax,%eax
    b078:	e9 2c ff ff ff       	jmp    afa9 <ema_do_alloc+0x19>
    b07d:	0f 1f 00             	nopl   (%rax)

000000000000b080 <add_reserve>:
    b080:	41 54                	push   %r12
    b082:	55                   	push   %rbp
    b083:	53                   	push   %rbx
    b084:	31 db                	xor    %ebx,%ebx
    b086:	48 83 ec 10          	sub    $0x10,%rsp
    b08a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    b091:	00 00 
    b093:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    b098:	31 c0                	xor    %eax,%eax
    b09a:	80 3d 17 f1 00 00 00 	cmpb   $0x0,0xf117(%rip)        # 1a1b8 <adding_reserve>
    b0a1:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    b0a8:	00 
    b0a9:	74 25                	je     b0d0 <add_reserve+0x50>
    b0ab:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    b0b0:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    b0b7:	00 00 
    b0b9:	0f 85 fb 00 00 00    	jne    b1ba <add_reserve+0x13a>
    b0bf:	48 83 c4 10          	add    $0x10,%rsp
    b0c3:	89 d8                	mov    %ebx,%eax
    b0c5:	5b                   	pop    %rbx
    b0c6:	5d                   	pop    %rbp
    b0c7:	41 5c                	pop    %r12
    b0c9:	c3                   	ret    
    b0ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b0d0:	48 8b 35 f1 ef 00 00 	mov    0xeff1(%rip),%rsi        # 1a0c8 <reserve_size_increment>
    b0d7:	49 89 e4             	mov    %rsp,%r12
    b0da:	48 89 fd             	mov    %rdi,%rbp
    b0dd:	ba 01 00 00 00       	mov    $0x1,%edx
    b0e2:	4d 89 e1             	mov    %r12,%r9
    b0e5:	c6 05 cc f0 00 00 01 	movb   $0x1,0xf0cc(%rip)        # 1a1b8 <adding_reserve>
    b0ec:	48 39 f7             	cmp    %rsi,%rdi
    b0ef:	48 0f 43 f7          	cmovae %rdi,%rsi
    b0f3:	45 31 c0             	xor    %r8d,%r8d
    b0f6:	31 c9                	xor    %ecx,%ecx
    b0f8:	31 ff                	xor    %edi,%edi
    b0fa:	48 89 35 c7 ef 00 00 	mov    %rsi,0xefc7(%rip)        # 1a0c8 <reserve_size_increment>
    b101:	48 81 c6 00 00 01 00 	add    $0x10000,%rsi
    b108:	e8 83 0d 00 00       	call   be90 <sgx_mm_alloc>
    b10d:	89 c3                	mov    %eax,%ebx
    b10f:	85 c0                	test   %eax,%eax
    b111:	75 2a                	jne    b13d <add_reserve+0xbd>
    b113:	48 8b 04 24          	mov    (%rsp),%rax
    b117:	48 8b 35 aa ef 00 00 	mov    0xefaa(%rip),%rsi        # 1a0c8 <reserve_size_increment>
    b11e:	4d 89 e1             	mov    %r12,%r9
    b121:	31 c9                	xor    %ecx,%ecx
    b123:	45 31 c0             	xor    %r8d,%r8d
    b126:	ba 44 00 00 00       	mov    $0x44,%edx
    b12b:	48 8d b8 00 80 00 00 	lea    0x8000(%rax),%rdi
    b132:	e8 59 0d 00 00       	call   be90 <sgx_mm_alloc>
    b137:	89 c3                	mov    %eax,%ebx
    b139:	85 c0                	test   %eax,%eax
    b13b:	74 13                	je     b150 <add_reserve+0xd0>
    b13d:	c6 05 74 f0 00 00 00 	movb   $0x0,0xf074(%rip)        # 1a1b8 <adding_reserve>
    b144:	e9 62 ff ff ff       	jmp    b0ab <add_reserve+0x2b>
    b149:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b150:	48 8b 3c 24          	mov    (%rsp),%rdi
    b154:	48 89 ee             	mov    %rbp,%rsi
    b157:	e8 24 0e 00 00       	call   bf80 <sgx_mm_commit>
    b15c:	48 8b 04 24          	mov    (%rsp),%rax
    b160:	48 8b 15 59 f0 00 00 	mov    0xf059(%rip),%rdx        # 1a1c0 <reserve_list>
    b167:	c6 05 4a f0 00 00 00 	movb   $0x0,0xf04a(%rip)        # 1a1b8 <adding_reserve>
    b16e:	66 48 0f 6e c0       	movq   %rax,%xmm0
    b173:	48 89 50 18          	mov    %rdx,0x18(%rax)
    b177:	ba 00 00 00 10       	mov    $0x10000000,%edx
    b17c:	0f 16 05 45 ef 00 00 	movhps 0xef45(%rip),%xmm0        # 1a0c8 <reserve_size_increment>
    b183:	66 0f d4 05 75 7f 00 	paddq  0x7f75(%rip),%xmm0        # 13100 <g_dyn_entry_table+0x70>
    b18a:	00 
    b18b:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    b192:	00 
    b193:	48 89 05 26 f0 00 00 	mov    %rax,0xf026(%rip)        # 1a1c0 <reserve_list>
    b19a:	0f 11 00             	movups %xmm0,(%rax)
    b19d:	48 8b 05 24 ef 00 00 	mov    0xef24(%rip),%rax        # 1a0c8 <reserve_size_increment>
    b1a4:	48 01 c0             	add    %rax,%rax
    b1a7:	48 39 d0             	cmp    %rdx,%rax
    b1aa:	48 0f 47 c2          	cmova  %rdx,%rax
    b1ae:	48 89 05 13 ef 00 00 	mov    %rax,0xef13(%rip)        # 1a0c8 <reserve_size_increment>
    b1b5:	e9 f1 fe ff ff       	jmp    b0ab <add_reserve+0x2b>
    b1ba:	e8 e1 57 00 00       	call   109a0 <__stack_chk_fail>
    b1bf:	90                   	nop

000000000000b1c0 <remove_from_list>:
    b1c0:	48 8b 07             	mov    (%rdi),%rax
    b1c3:	48 23 05 06 ef 00 00 	and    0xef06(%rip),%rax        # 1a0d0 <size_mask>
    b1ca:	48 89 c2             	mov    %rax,%rdx
    b1cd:	48 8b 06             	mov    (%rsi),%rax
    b1d0:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
    b1d4:	48 39 f8             	cmp    %rdi,%rax
    b1d7:	74 3f                	je     b218 <remove_from_list+0x58>
    b1d9:	48 83 fa 10          	cmp    $0x10,%rdx
    b1dd:	76 21                	jbe    b200 <remove_from_list+0x40>
    b1df:	48 8b 47 10          	mov    0x10(%rdi),%rax
    b1e3:	48 85 c0             	test   %rax,%rax
    b1e6:	74 04                	je     b1ec <remove_from_list+0x2c>
    b1e8:	48 89 48 08          	mov    %rcx,0x8(%rax)
    b1ec:	48 85 c9             	test   %rcx,%rcx
    b1ef:	74 1f                	je     b210 <remove_from_list+0x50>
    b1f1:	48 89 41 10          	mov    %rax,0x10(%rcx)
    b1f5:	c3                   	ret    
    b1f6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b1fd:	00 00 00 
    b200:	48 89 c2             	mov    %rax,%rdx
    b203:	48 8b 40 08          	mov    0x8(%rax),%rax
    b207:	48 39 f8             	cmp    %rdi,%rax
    b20a:	75 f4                	jne    b200 <remove_from_list+0x40>
    b20c:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
    b210:	c3                   	ret    
    b211:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b218:	48 89 0e             	mov    %rcx,(%rsi)
    b21b:	48 85 c9             	test   %rcx,%rcx
    b21e:	74 f0                	je     b210 <remove_from_list+0x50>
    b220:	48 83 fa 10          	cmp    $0x10,%rdx
    b224:	76 ea                	jbe    b210 <remove_from_list+0x50>
    b226:	48 c7 41 10 00 00 00 	movq   $0x0,0x10(%rcx)
    b22d:	00 
    b22e:	c3                   	ret    
    b22f:	90                   	nop

000000000000b230 <put_free_block>:
    b230:	48 8b 05 99 ee 00 00 	mov    0xee99(%rip),%rax        # 1a0d0 <size_mask>
    b237:	48 8b 17             	mov    (%rdi),%rdx
    b23a:	48 21 c2             	and    %rax,%rdx
    b23d:	48 81 fa 08 08 00 00 	cmp    $0x808,%rdx
    b244:	76 2a                	jbe    b270 <put_free_block+0x40>
    b246:	48 8b 15 7b ef 00 00 	mov    0xef7b(%rip),%rdx        # 1a1c8 <large_block_list>
    b24d:	48 89 57 08          	mov    %rdx,0x8(%rdi)
    b251:	48 85 d2             	test   %rdx,%rdx
    b254:	74 0d                	je     b263 <put_free_block+0x33>
    b256:	48 23 02             	and    (%rdx),%rax
    b259:	48 83 f8 10          	cmp    $0x10,%rax
    b25d:	76 04                	jbe    b263 <put_free_block+0x33>
    b25f:	48 89 7a 10          	mov    %rdi,0x10(%rdx)
    b263:	48 89 3d 5e ef 00 00 	mov    %rdi,0xef5e(%rip)        # 1a1c8 <large_block_list>
    b26a:	c3                   	ret    
    b26b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b270:	48 8d 4a f0          	lea    -0x10(%rdx),%rcx
    b274:	48 8d 35 65 ef 00 00 	lea    0xef65(%rip),%rsi        # 1a1e0 <exact_block_list>
    b27b:	48 c1 e9 03          	shr    $0x3,%rcx
    b27f:	48 83 fa 0f          	cmp    $0xf,%rdx
    b283:	ba 00 00 00 00       	mov    $0x0,%edx
    b288:	48 0f 47 d1          	cmova  %rcx,%rdx
    b28c:	48 8b 0c d6          	mov    (%rsi,%rdx,8),%rcx
    b290:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
    b294:	48 85 c9             	test   %rcx,%rcx
    b297:	74 0d                	je     b2a6 <put_free_block+0x76>
    b299:	48 23 01             	and    (%rcx),%rax
    b29c:	48 83 f8 10          	cmp    $0x10,%rax
    b2a0:	76 04                	jbe    b2a6 <put_free_block+0x76>
    b2a2:	48 89 79 10          	mov    %rdi,0x10(%rcx)
    b2a6:	48 89 3c d6          	mov    %rdi,(%rsi,%rdx,8)
    b2aa:	c3                   	ret    
    b2ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000b2b0 <neighbor_right>:
    b2b0:	4c 8b 05 19 ee 00 00 	mov    0xee19(%rip),%r8        # 1a0d0 <size_mask>
    b2b7:	4c 89 c2             	mov    %r8,%rdx
    b2ba:	48 23 17             	and    (%rdi),%rdx
    b2bd:	48 8d 04 17          	lea    (%rdi,%rdx,1),%rax
    b2c1:	74 2f                	je     b2f2 <neighbor_right+0x42>
    b2c3:	48 8b 0d f6 ee 00 00 	mov    0xeef6(%rip),%rcx        # 1a1c0 <reserve_list>
    b2ca:	48 85 c9             	test   %rcx,%rcx
    b2cd:	74 23                	je     b2f2 <neighbor_right+0x42>
    b2cf:	48 89 ca             	mov    %rcx,%rdx
    b2d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b2d8:	48 8b 32             	mov    (%rdx),%rsi
    b2db:	48 39 f7             	cmp    %rsi,%rdi
    b2de:	72 09                	jb     b2e9 <neighbor_right+0x39>
    b2e0:	48 03 72 10          	add    0x10(%rdx),%rsi
    b2e4:	48 39 c6             	cmp    %rax,%rsi
    b2e7:	73 0f                	jae    b2f8 <neighbor_right+0x48>
    b2e9:	48 8b 52 18          	mov    0x18(%rdx),%rdx
    b2ed:	48 85 d2             	test   %rdx,%rdx
    b2f0:	75 e6                	jne    b2d8 <neighbor_right+0x28>
    b2f2:	31 c0                	xor    %eax,%eax
    b2f4:	c3                   	ret    
    b2f5:	0f 1f 00             	nopl   (%rax)
    b2f8:	74 f8                	je     b2f2 <neighbor_right+0x42>
    b2fa:	4c 23 00             	and    (%rax),%r8
    b2fd:	74 f3                	je     b2f2 <neighbor_right+0x42>
    b2ff:	4a 8d 3c 00          	lea    (%rax,%r8,1),%rdi
    b303:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b308:	48 8b 31             	mov    (%rcx),%rsi
    b30b:	48 39 f0             	cmp    %rsi,%rax
    b30e:	72 09                	jb     b319 <neighbor_right+0x69>
    b310:	48 03 71 10          	add    0x10(%rcx),%rsi
    b314:	48 39 fe             	cmp    %rdi,%rsi
    b317:	73 0f                	jae    b328 <neighbor_right+0x78>
    b319:	48 8b 49 18          	mov    0x18(%rcx),%rcx
    b31d:	48 85 c9             	test   %rcx,%rcx
    b320:	75 e6                	jne    b308 <neighbor_right+0x58>
    b322:	31 c0                	xor    %eax,%eax
    b324:	c3                   	ret    
    b325:	0f 1f 00             	nopl   (%rax)
    b328:	48 39 d1             	cmp    %rdx,%rcx
    b32b:	ba 00 00 00 00       	mov    $0x0,%edx
    b330:	48 0f 45 c2          	cmovne %rdx,%rax
    b334:	c3                   	ret    
    b335:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b33c:	00 00 00 
    b33f:	90                   	nop

000000000000b340 <payload_to_block>:
    b340:	f3 0f 1e fa          	endbr64 
    b344:	48 89 f8             	mov    %rdi,%rax
    b347:	48 2b 05 8a ed 00 00 	sub    0xed8a(%rip),%rax        # 1a0d8 <header_size>
    b34e:	c3                   	ret    
    b34f:	90                   	nop

000000000000b350 <block_to_payload>:
    b350:	f3 0f 1e fa          	endbr64 
    b354:	48 8d 47 08          	lea    0x8(%rdi),%rax
    b358:	c3                   	ret    
    b359:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000b360 <is_alloced>:
    b360:	f3 0f 1e fa          	endbr64 
    b364:	48 8b 07             	mov    (%rdi),%rax
    b367:	83 e0 01             	and    $0x1,%eax
    b36a:	c3                   	ret    
    b36b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000b370 <block_size>:
    b370:	f3 0f 1e fa          	endbr64 
    b374:	48 8b 07             	mov    (%rdi),%rax
    b377:	48 23 05 52 ed 00 00 	and    0xed52(%rip),%rax        # 1a0d0 <size_mask>
    b37e:	c3                   	ret    
    b37f:	90                   	nop

000000000000b380 <block_end>:
    b380:	f3 0f 1e fa          	endbr64 
    b384:	48 8b 07             	mov    (%rdi),%rax
    b387:	48 23 05 42 ed 00 00 	and    0xed42(%rip),%rax        # 1a0d0 <size_mask>
    b38e:	48 01 f8             	add    %rdi,%rax
    b391:	c3                   	ret    
    b392:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b399:	00 00 00 
    b39c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000b3a0 <emalloc_init_with_reserved_mem>:
    b3a0:	f3 0f 1e fa          	endbr64 
    b3a4:	48 83 ec 08          	sub    $0x8,%rsp
    b3a8:	e8 d3 fc ff ff       	call   b080 <add_reserve>
    b3ad:	85 c0                	test   %eax,%eax
    b3af:	75 17                	jne    b3c8 <emalloc_init_with_reserved_mem+0x28>
    b3b1:	48 c7 05 0c ed 00 00 	movq   $0x10000,0xed0c(%rip)        # 1a0c8 <reserve_size_increment>
    b3b8:	00 00 01 00 
    b3bc:	48 83 c4 08          	add    $0x8,%rsp
    b3c0:	c3                   	ret    
    b3c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b3c8:	b8 0c 00 00 00       	mov    $0xc,%eax
    b3cd:	48 83 c4 08          	add    $0x8,%rsp
    b3d1:	c3                   	ret    
    b3d2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b3d9:	00 00 00 
    b3dc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000b3e0 <emalloc>:
    b3e0:	f3 0f 1e fa          	endbr64 
    b3e4:	48 8b 05 ed ec 00 00 	mov    0xeced(%rip),%rax        # 1a0d8 <header_size>
    b3eb:	53                   	push   %rbx
    b3ec:	bb 10 00 00 00       	mov    $0x10,%ebx
    b3f1:	48 8d 44 38 07       	lea    0x7(%rax,%rdi,1),%rax
    b3f6:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    b3fa:	48 39 d8             	cmp    %rbx,%rax
    b3fd:	48 0f 43 d8          	cmovae %rax,%rbx
    b401:	80 3d b0 ed 00 00 00 	cmpb   $0x0,0xedb0(%rip)        # 1a1b8 <adding_reserve>
    b408:	74 36                	je     b440 <emalloc+0x60>
    b40a:	48 8b 05 cf f5 00 00 	mov    0xf5cf(%rip),%rax        # 1a9e0 <meta_used>
    b411:	48 8d 14 03          	lea    (%rbx,%rax,1),%rdx
    b415:	48 81 fa 00 00 01 00 	cmp    $0x10000,%rdx
    b41c:	0f 87 1c 01 00 00    	ja     b53e <emalloc+0x15e>
    b422:	48 8d 0d d7 f5 00 00 	lea    0xf5d7(%rip),%rcx        # 1aa00 <meta_reserve>
    b429:	48 83 cb 01          	or     $0x1,%rbx
    b42d:	48 89 15 ac f5 00 00 	mov    %rdx,0xf5ac(%rip)        # 1a9e0 <meta_used>
    b434:	48 01 c8             	add    %rcx,%rax
    b437:	48 89 18             	mov    %rbx,(%rax)
    b43a:	48 83 c0 08          	add    $0x8,%rax
    b43e:	5b                   	pop    %rbx
    b43f:	c3                   	ret    
    b440:	48 3d 08 08 00 00    	cmp    $0x808,%rax
    b446:	0f 86 74 01 00 00    	jbe    b5c0 <emalloc+0x1e0>
    b44c:	48 8b 05 75 ed 00 00 	mov    0xed75(%rip),%rax        # 1a1c8 <large_block_list>
    b453:	48 85 c0             	test   %rax,%rax
    b456:	0f 84 ec 00 00 00    	je     b548 <emalloc+0x168>
    b45c:	45 31 c0             	xor    %r8d,%r8d
    b45f:	90                   	nop
    b460:	48 8b 10             	mov    (%rax),%rdx
    b463:	48 39 da             	cmp    %rbx,%rdx
    b466:	72 3e                	jb     b4a6 <emalloc+0xc6>
    b468:	4d 85 c0             	test   %r8,%r8
    b46b:	74 7b                	je     b4e8 <emalloc+0x108>
    b46d:	49 3b 10             	cmp    (%r8),%rdx
    b470:	48 8b 48 08          	mov    0x8(%rax),%rcx
    b474:	73 20                	jae    b496 <emalloc+0xb6>
    b476:	48 85 c9             	test   %rcx,%rcx
    b479:	0f 84 89 01 00 00    	je     b608 <emalloc+0x228>
    b47f:	48 8b 11             	mov    (%rcx),%rdx
    b482:	49 89 c0             	mov    %rax,%r8
    b485:	48 39 da             	cmp    %rbx,%rdx
    b488:	72 19                	jb     b4a3 <emalloc+0xc3>
    b48a:	48 89 c8             	mov    %rcx,%rax
    b48d:	49 3b 10             	cmp    (%r8),%rdx
    b490:	48 8b 48 08          	mov    0x8(%rax),%rcx
    b494:	72 e0                	jb     b476 <emalloc+0x96>
    b496:	48 85 c9             	test   %rcx,%rcx
    b499:	74 14                	je     b4af <emalloc+0xcf>
    b49b:	48 8b 11             	mov    (%rcx),%rdx
    b49e:	48 39 da             	cmp    %rbx,%rdx
    b4a1:	73 e7                	jae    b48a <emalloc+0xaa>
    b4a3:	48 89 c8             	mov    %rcx,%rax
    b4a6:	48 8b 40 08          	mov    0x8(%rax),%rax
    b4aa:	48 85 c0             	test   %rax,%rax
    b4ad:	75 b1                	jne    b460 <emalloc+0x80>
    b4af:	4d 85 c0             	test   %r8,%r8
    b4b2:	0f 84 90 00 00 00    	je     b548 <emalloc+0x168>
    b4b8:	48 8d 35 09 ed 00 00 	lea    0xed09(%rip),%rsi        # 1a1c8 <large_block_list>
    b4bf:	4c 89 c7             	mov    %r8,%rdi
    b4c2:	e8 f9 fc ff ff       	call   b1c0 <remove_from_list>
    b4c7:	49 8b 00             	mov    (%r8),%rax
    b4ca:	48 8d 53 10          	lea    0x10(%rbx),%rdx
    b4ce:	48 39 d0             	cmp    %rdx,%rax
    b4d1:	0f 83 c9 00 00 00    	jae    b5a0 <emalloc+0x1c0>
    b4d7:	48 83 cb 01          	or     $0x1,%rbx
    b4db:	49 8d 40 08          	lea    0x8(%r8),%rax
    b4df:	49 89 18             	mov    %rbx,(%r8)
    b4e2:	5b                   	pop    %rbx
    b4e3:	c3                   	ret    
    b4e4:	0f 1f 40 00          	nopl   0x0(%rax)
    b4e8:	49 89 c0             	mov    %rax,%r8
    b4eb:	eb b9                	jmp    b4a6 <emalloc+0xc6>
    b4ed:	0f 1f 00             	nopl   (%rax)
    b4f0:	48 8d bb 1f 00 01 00 	lea    0x1001f(%rbx),%rdi
    b4f7:	66 31 ff             	xor    %di,%di
    b4fa:	e8 81 fb ff ff       	call   b080 <add_reserve>
    b4ff:	85 c0                	test   %eax,%eax
    b501:	75 3b                	jne    b53e <emalloc+0x15e>
    b503:	48 8b 15 b6 ec 00 00 	mov    0xecb6(%rip),%rdx        # 1a1c0 <reserve_list>
    b50a:	48 85 d2             	test   %rdx,%rdx
    b50d:	75 12                	jne    b521 <emalloc+0x141>
    b50f:	eb 2d                	jmp    b53e <emalloc+0x15e>
    b511:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b518:	48 8b 52 18          	mov    0x18(%rdx),%rdx
    b51c:	48 85 d2             	test   %rdx,%rdx
    b51f:	74 1d                	je     b53e <emalloc+0x15e>
    b521:	48 8b 42 10          	mov    0x10(%rdx),%rax
    b525:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
    b529:	48 29 c1             	sub    %rax,%rcx
    b52c:	48 39 d9             	cmp    %rbx,%rcx
    b52f:	72 e7                	jb     b518 <emalloc+0x138>
    b531:	48 8d 0c 03          	lea    (%rbx,%rax,1),%rcx
    b535:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
    b539:	48 03 02             	add    (%rdx),%rax
    b53c:	75 4c                	jne    b58a <emalloc+0x1aa>
    b53e:	31 c0                	xor    %eax,%eax
    b540:	5b                   	pop    %rbx
    b541:	c3                   	ret    
    b542:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b548:	48 8b 15 71 ec 00 00 	mov    0xec71(%rip),%rdx        # 1a1c0 <reserve_list>
    b54f:	48 85 d2             	test   %rdx,%rdx
    b552:	75 15                	jne    b569 <emalloc+0x189>
    b554:	eb 9a                	jmp    b4f0 <emalloc+0x110>
    b556:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b55d:	00 00 00 
    b560:	48 8b 52 18          	mov    0x18(%rdx),%rdx
    b564:	48 85 d2             	test   %rdx,%rdx
    b567:	74 87                	je     b4f0 <emalloc+0x110>
    b569:	48 8b 42 10          	mov    0x10(%rdx),%rax
    b56d:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
    b571:	48 29 c1             	sub    %rax,%rcx
    b574:	48 39 d9             	cmp    %rbx,%rcx
    b577:	72 e7                	jb     b560 <emalloc+0x180>
    b579:	48 8d 0c 03          	lea    (%rbx,%rax,1),%rcx
    b57d:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
    b581:	48 03 02             	add    (%rdx),%rax
    b584:	0f 84 66 ff ff ff    	je     b4f0 <emalloc+0x110>
    b58a:	48 83 cb 01          	or     $0x1,%rbx
    b58e:	48 83 c0 08          	add    $0x8,%rax
    b592:	48 89 58 f8          	mov    %rbx,-0x8(%rax)
    b596:	5b                   	pop    %rbx
    b597:	c3                   	ret    
    b598:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    b59f:	00 
    b5a0:	49 8d 3c 18          	lea    (%r8,%rbx,1),%rdi
    b5a4:	48 29 d8             	sub    %rbx,%rax
    b5a7:	49 89 18             	mov    %rbx,(%r8)
    b5aa:	48 89 07             	mov    %rax,(%rdi)
    b5ad:	e8 7e fc ff ff       	call   b230 <put_free_block>
    b5b2:	e9 20 ff ff ff       	jmp    b4d7 <emalloc+0xf7>
    b5b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    b5be:	00 00 
    b5c0:	48 8d 43 f0          	lea    -0x10(%rbx),%rax
    b5c4:	48 8d 15 15 ec 00 00 	lea    0xec15(%rip),%rdx        # 1a1e0 <exact_block_list>
    b5cb:	48 c1 e8 03          	shr    $0x3,%rax
    b5cf:	4c 8b 04 c2          	mov    (%rdx,%rax,8),%r8
    b5d3:	4d 85 c0             	test   %r8,%r8
    b5d6:	0f 84 6c ff ff ff    	je     b548 <emalloc+0x168>
    b5dc:	49 8b 48 08          	mov    0x8(%r8),%rcx
    b5e0:	48 89 0c c2          	mov    %rcx,(%rdx,%rax,8)
    b5e4:	48 85 c9             	test   %rcx,%rcx
    b5e7:	0f 84 ea fe ff ff    	je     b4d7 <emalloc+0xf7>
    b5ed:	48 85 c0             	test   %rax,%rax
    b5f0:	0f 84 e1 fe ff ff    	je     b4d7 <emalloc+0xf7>
    b5f6:	48 c7 41 10 00 00 00 	movq   $0x0,0x10(%rcx)
    b5fd:	00 
    b5fe:	e9 d4 fe ff ff       	jmp    b4d7 <emalloc+0xf7>
    b603:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b608:	49 89 c0             	mov    %rax,%r8
    b60b:	e9 9f fe ff ff       	jmp    b4af <emalloc+0xcf>

000000000000b610 <can_erealloc>:
    b610:	f3 0f 1e fa          	endbr64 
    b614:	80 3d 9d eb 00 00 00 	cmpb   $0x0,0xeb9d(%rip)        # 1a1b8 <adding_reserve>
    b61b:	b8 01 00 00 00       	mov    $0x1,%eax
    b620:	75 30                	jne    b652 <can_erealloc+0x42>
    b622:	48 2b 3d af ea 00 00 	sub    0xeaaf(%rip),%rdi        # 1a0d8 <header_size>
    b629:	48 8d 15 d0 f3 01 00 	lea    0x1f3d0(%rip),%rdx        # 2aa00 <mm_user_end>
    b630:	48 39 d7             	cmp    %rdx,%rdi
    b633:	73 1d                	jae    b652 <can_erealloc+0x42>
    b635:	48 8b 05 94 ea 00 00 	mov    0xea94(%rip),%rax        # 1a0d0 <size_mask>
    b63c:	48 23 07             	and    (%rdi),%rax
    b63f:	48 01 c7             	add    %rax,%rdi
    b642:	48 8d 82 00 00 ff ff 	lea    -0x10000(%rdx),%rax
    b649:	48 39 f8             	cmp    %rdi,%rax
    b64c:	0f 93 c0             	setae  %al
    b64f:	0f b6 c0             	movzbl %al,%eax
    b652:	c3                   	ret    
    b653:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b65a:	00 00 00 
    b65d:	0f 1f 00             	nopl   (%rax)

000000000000b660 <efree>:
    b660:	f3 0f 1e fa          	endbr64 
    b664:	48 2b 3d 6d ea 00 00 	sub    0xea6d(%rip),%rdi        # 1a0d8 <header_size>
    b66b:	41 54                	push   %r12
    b66d:	48 8d 05 8c f3 01 00 	lea    0x1f38c(%rip),%rax        # 2aa00 <mm_user_end>
    b674:	55                   	push   %rbp
    b675:	4c 8b 1d 54 ea 00 00 	mov    0xea54(%rip),%r11        # 1a0d0 <size_mask>
    b67c:	49 89 fc             	mov    %rdi,%r12
    b67f:	53                   	push   %rbx
    b680:	4c 8b 0f             	mov    (%rdi),%r9
    b683:	4d 21 d9             	and    %r11,%r9
    b686:	48 39 c7             	cmp    %rax,%rdi
    b689:	73 14                	jae    b69f <efree+0x3f>
    b68b:	49 8d 04 39          	lea    (%r9,%rdi,1),%rax
    b68f:	48 8d 15 6a f3 00 00 	lea    0xf36a(%rip),%rdx        # 1aa00 <meta_reserve>
    b696:	48 39 c2             	cmp    %rax,%rdx
    b699:	0f 82 f9 00 00 00    	jb     b798 <efree+0x138>
    b69f:	4d 85 c9             	test   %r9,%r9
    b6a2:	74 2e                	je     b6d2 <efree+0x72>
    b6a4:	4c 8b 15 15 eb 00 00 	mov    0xeb15(%rip),%r10        # 1a1c0 <reserve_list>
    b6ab:	4d 85 d2             	test   %r10,%r10
    b6ae:	74 22                	je     b6d2 <efree+0x72>
    b6b0:	4b 8d 14 21          	lea    (%r9,%r12,1),%rdx
    b6b4:	0f 1f 40 00          	nopl   0x0(%rax)
    b6b8:	49 8b 02             	mov    (%r10),%rax
    b6bb:	49 39 c4             	cmp    %rax,%r12
    b6be:	72 09                	jb     b6c9 <efree+0x69>
    b6c0:	49 03 42 10          	add    0x10(%r10),%rax
    b6c4:	48 39 d0             	cmp    %rdx,%rax
    b6c7:	73 17                	jae    b6e0 <efree+0x80>
    b6c9:	4d 8b 52 18          	mov    0x18(%r10),%r10
    b6cd:	4d 85 d2             	test   %r10,%r10
    b6d0:	75 e6                	jne    b6b8 <efree+0x58>
    b6d2:	e8 60 6e 00 00       	call   12537 <abort>
    b6d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    b6de:	00 00 
    b6e0:	4d 89 0c 24          	mov    %r9,(%r12)
    b6e4:	49 c7 44 24 08 00 00 	movq   $0x0,0x8(%r12)
    b6eb:	00 00 
    b6ed:	49 83 f9 10          	cmp    $0x10,%r9
    b6f1:	0f 87 b9 00 00 00    	ja     b7b0 <efree+0x150>
    b6f7:	4c 89 e7             	mov    %r12,%rdi
    b6fa:	48 8d 1d df ea 00 00 	lea    0xeadf(%rip),%rbx        # 1a1e0 <exact_block_list>
    b701:	48 8d 2d c0 ea 00 00 	lea    0xeac0(%rip),%rbp        # 1a1c8 <large_block_list>
    b708:	e8 a3 fb ff ff       	call   b2b0 <neighbor_right>
    b70d:	48 89 c7             	mov    %rax,%rdi
    b710:	48 85 c0             	test   %rax,%rax
    b713:	75 3c                	jne    b751 <efree+0xf1>
    b715:	e9 2d 01 00 00       	jmp    b847 <efree+0x1e7>
    b71a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b720:	48 89 de             	mov    %rbx,%rsi
    b723:	49 83 f8 0f          	cmp    $0xf,%r8
    b727:	76 0b                	jbe    b734 <efree+0xd4>
    b729:	49 8d 70 f0          	lea    -0x10(%r8),%rsi
    b72d:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
    b731:	48 01 de             	add    %rbx,%rsi
    b734:	e8 87 fa ff ff       	call   b1c0 <remove_from_list>
    b739:	4d 8b 0c 24          	mov    (%r12),%r9
    b73d:	4d 01 c1             	add    %r8,%r9
    b740:	4d 89 0c 24          	mov    %r9,(%r12)
    b744:	e8 67 fb ff ff       	call   b2b0 <neighbor_right>
    b749:	48 89 c7             	mov    %rax,%rdi
    b74c:	48 85 c0             	test   %rax,%rax
    b74f:	74 23                	je     b774 <efree+0x114>
    b751:	4c 8b 07             	mov    (%rdi),%r8
    b754:	41 f6 c0 01          	test   $0x1,%r8b
    b758:	75 16                	jne    b770 <efree+0x110>
    b75a:	4d 21 d8             	and    %r11,%r8
    b75d:	49 81 f8 08 08 00 00 	cmp    $0x808,%r8
    b764:	76 ba                	jbe    b720 <efree+0xc0>
    b766:	48 89 ee             	mov    %rbp,%rsi
    b769:	e8 52 fa ff ff       	call   b1c0 <remove_from_list>
    b76e:	eb c9                	jmp    b739 <efree+0xd9>
    b770:	4d 8b 0c 24          	mov    (%r12),%r9
    b774:	4d 21 cb             	and    %r9,%r11
    b777:	49 8b 1a             	mov    (%r10),%rbx
    b77a:	4c 89 e0             	mov    %r12,%rax
    b77d:	48 29 d8             	sub    %rbx,%rax
    b780:	49 01 c3             	add    %rax,%r11
    b783:	4d 3b 5a 10          	cmp    0x10(%r10),%r11
    b787:	74 37                	je     b7c0 <efree+0x160>
    b789:	5b                   	pop    %rbx
    b78a:	4c 89 e7             	mov    %r12,%rdi
    b78d:	5d                   	pop    %rbp
    b78e:	41 5c                	pop    %r12
    b790:	e9 9b fa ff ff       	jmp    b230 <put_free_block>
    b795:	0f 1f 00             	nopl   (%rax)
    b798:	80 3d 19 ea 00 00 00 	cmpb   $0x0,0xea19(%rip)        # 1a1b8 <adding_reserve>
    b79f:	0f 84 2d ff ff ff    	je     b6d2 <efree+0x72>
    b7a5:	5b                   	pop    %rbx
    b7a6:	5d                   	pop    %rbp
    b7a7:	41 5c                	pop    %r12
    b7a9:	c3                   	ret    
    b7aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b7b0:	49 c7 44 24 10 00 00 	movq   $0x0,0x10(%r12)
    b7b7:	00 00 
    b7b9:	e9 39 ff ff ff       	jmp    b6f7 <efree+0x97>
    b7be:	66 90                	xchg   %ax,%ax
    b7c0:	48 8b 3d 01 ea 00 00 	mov    0xea01(%rip),%rdi        # 1a1c8 <large_block_list>
    b7c7:	4d 29 cb             	sub    %r9,%r11
    b7ca:	4d 89 5a 10          	mov    %r11,0x10(%r10)
    b7ce:	4e 8d 04 1b          	lea    (%rbx,%r11,1),%r8
    b7d2:	48 85 ff             	test   %rdi,%rdi
    b7d5:	75 12                	jne    b7e9 <efree+0x189>
    b7d7:	eb 65                	jmp    b83e <efree+0x1de>
    b7d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b7e0:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    b7e4:	48 85 ff             	test   %rdi,%rdi
    b7e7:	74 55                	je     b83e <efree+0x1de>
    b7e9:	48 8b 07             	mov    (%rdi),%rax
    b7ec:	48 01 f8             	add    %rdi,%rax
    b7ef:	49 39 c0             	cmp    %rax,%r8
    b7f2:	75 ec                	jne    b7e0 <efree+0x180>
    b7f4:	48 8d 35 cd e9 00 00 	lea    0xe9cd(%rip),%rsi        # 1a1c8 <large_block_list>
    b7fb:	e8 c0 f9 ff ff       	call   b1c0 <remove_from_list>
    b800:	4c 2b 07             	sub    (%rdi),%r8
    b803:	48 8b 3d be e9 00 00 	mov    0xe9be(%rip),%rdi        # 1a1c8 <large_block_list>
    b80a:	48 85 ff             	test   %rdi,%rdi
    b80d:	75 12                	jne    b821 <efree+0x1c1>
    b80f:	eb 27                	jmp    b838 <efree+0x1d8>
    b811:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b818:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    b81c:	48 85 ff             	test   %rdi,%rdi
    b81f:	74 17                	je     b838 <efree+0x1d8>
    b821:	48 8b 07             	mov    (%rdi),%rax
    b824:	48 01 f8             	add    %rdi,%rax
    b827:	49 39 c0             	cmp    %rax,%r8
    b82a:	75 ec                	jne    b818 <efree+0x1b8>
    b82c:	e8 8f f9 ff ff       	call   b1c0 <remove_from_list>
    b831:	eb cd                	jmp    b800 <efree+0x1a0>
    b833:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b838:	4d 89 c3             	mov    %r8,%r11
    b83b:	49 29 db             	sub    %rbx,%r11
    b83e:	4d 89 5a 10          	mov    %r11,0x10(%r10)
    b842:	5b                   	pop    %rbx
    b843:	5d                   	pop    %rbp
    b844:	41 5c                	pop    %r12
    b846:	c3                   	ret    
    b847:	4d 89 cb             	mov    %r9,%r11
    b84a:	e9 28 ff ff ff       	jmp    b777 <efree+0x117>
    b84f:	90                   	nop

000000000000b850 <mm_init_ema>:
    b850:	f3 0f 1e fa          	endbr64 
    b854:	41 57                	push   %r15
    b856:	4d 89 cf             	mov    %r9,%r15
    b859:	41 56                	push   %r14
    b85b:	4d 89 c6             	mov    %r8,%r14
    b85e:	41 55                	push   %r13
    b860:	41 89 cd             	mov    %ecx,%r13d
    b863:	41 54                	push   %r12
    b865:	41 89 d4             	mov    %edx,%r12d
    b868:	55                   	push   %rbp
    b869:	48 89 f5             	mov    %rsi,%rbp
    b86c:	53                   	push   %rbx
    b86d:	48 89 fb             	mov    %rdi,%rbx
    b870:	48 83 ec 18          	sub    $0x18,%rsp
    b874:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    b87b:	00 00 
    b87d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    b882:	31 c0                	xor    %eax,%eax
    b884:	e8 97 a1 ff ff       	call   5a20 <sgx_mm_is_within_enclave>
    b889:	89 c2                	mov    %eax,%edx
    b88b:	b8 0d 00 00 00       	mov    $0xd,%eax
    b890:	84 d2                	test   %dl,%dl
    b892:	0f 84 7d 00 00 00    	je     b915 <mm_init_ema+0xc5>
    b898:	41 f7 c4 7e f8 ff ff 	test   $0xfffff87e,%r12d
    b89f:	75 6f                	jne    b910 <mm_init_ema+0xc0>
    b8a1:	41 83 fd 07          	cmp    $0x7,%r13d
    b8a5:	77 69                	ja     b910 <mm_init_ema+0xc0>
    b8a7:	48 89 e1             	mov    %rsp,%rcx
    b8aa:	48 89 ea             	mov    %rbp,%rdx
    b8ad:	48 8d 3d b4 e7 00 00 	lea    0xe7b4(%rip),%rdi        # 1a068 <g_rts_ema_root>
    b8b4:	48 89 de             	mov    %rbx,%rsi
    b8b7:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    b8be:	00 
    b8bf:	e8 4c e6 ff ff       	call   9f10 <find_free_region_at>
    b8c4:	84 c0                	test   %al,%al
    b8c6:	74 48                	je     b910 <mm_init_ema+0xc0>
    b8c8:	48 83 ec 08          	sub    $0x8,%rsp
    b8cc:	44 89 e1             	mov    %r12d,%ecx
    b8cf:	41 0f b6 d4          	movzbl %r12b,%edx
    b8d3:	48 89 df             	mov    %rbx,%rdi
    b8d6:	ff 74 24 08          	push   0x8(%rsp)
    b8da:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    b8e0:	4d 89 f9             	mov    %r15,%r9
    b8e3:	4d 89 f0             	mov    %r14,%r8
    b8e6:	44 09 e9             	or     %r13d,%ecx
    b8e9:	48 89 ee             	mov    %rbp,%rsi
    b8ec:	48 63 c9             	movslq %ecx,%rcx
    b8ef:	e8 fc e6 ff ff       	call   9ff0 <ema_new>
    b8f4:	48 89 c7             	mov    %rax,%rdi
    b8f7:	58                   	pop    %rax
    b8f8:	5a                   	pop    %rdx
    b8f9:	48 85 ff             	test   %rdi,%rdi
    b8fc:	74 3a                	je     b938 <mm_init_ema+0xe8>
    b8fe:	31 c0                	xor    %eax,%eax
    b900:	41 83 e4 01          	and    $0x1,%r12d
    b904:	75 0f                	jne    b915 <mm_init_ema+0xc5>
    b906:	e8 75 de ff ff       	call   9780 <ema_set_eaccept_full>
    b90b:	eb 08                	jmp    b915 <mm_init_ema+0xc5>
    b90d:	0f 1f 00             	nopl   (%rax)
    b910:	b8 16 00 00 00       	mov    $0x16,%eax
    b915:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    b91a:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    b921:	00 00 
    b923:	75 1a                	jne    b93f <mm_init_ema+0xef>
    b925:	48 83 c4 18          	add    $0x18,%rsp
    b929:	5b                   	pop    %rbx
    b92a:	5d                   	pop    %rbp
    b92b:	41 5c                	pop    %r12
    b92d:	41 5d                	pop    %r13
    b92f:	41 5e                	pop    %r14
    b931:	41 5f                	pop    %r15
    b933:	c3                   	ret    
    b934:	0f 1f 40 00          	nopl   0x0(%rax)
    b938:	b8 0c 00 00 00       	mov    $0xc,%eax
    b93d:	eb d6                	jmp    b915 <mm_init_ema+0xc5>
    b93f:	e8 5c 50 00 00       	call   109a0 <__stack_chk_fail>
    b944:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b94b:	00 00 00 
    b94e:	66 90                	xchg   %ax,%ax

000000000000b950 <mm_alloc>:
    b950:	f3 0f 1e fa          	endbr64 
    b954:	48 83 ec 10          	sub    $0x10,%rsp
    b958:	48 8d 05 09 e7 00 00 	lea    0xe709(%rip),%rax        # 1a068 <g_rts_ema_root>
    b95f:	50                   	push   %rax
    b960:	e8 2b 02 00 00       	call   bb90 <mm_alloc_internal>
    b965:	48 83 c4 18          	add    $0x18,%rsp
    b969:	c3                   	ret    
    b96a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000b970 <mm_commit>:
    b970:	f3 0f 1e fa          	endbr64 
    b974:	48 8d 15 ed e6 00 00 	lea    0xe6ed(%rip),%rdx        # 1a068 <g_rts_ema_root>
    b97b:	e9 40 05 00 00       	jmp    bec0 <mm_commit_internal>

000000000000b980 <mm_uncommit>:
    b980:	f3 0f 1e fa          	endbr64 
    b984:	48 8d 15 dd e6 00 00 	lea    0xe6dd(%rip),%rdx        # 1a068 <g_rts_ema_root>
    b98b:	e9 00 06 00 00       	jmp    bf90 <mm_uncommit_internal>

000000000000b990 <mm_dealloc>:
    b990:	f3 0f 1e fa          	endbr64 
    b994:	48 8d 15 cd e6 00 00 	lea    0xe6cd(%rip),%rdx        # 1a068 <g_rts_ema_root>
    b99b:	e9 c0 06 00 00       	jmp    c060 <mm_dealloc_internal>

000000000000b9a0 <mm_commit_data>:
    b9a0:	f3 0f 1e fa          	endbr64 
    b9a4:	4c 8d 05 bd e6 00 00 	lea    0xe6bd(%rip),%r8        # 1a068 <g_rts_ema_root>
    b9ab:	e9 80 07 00 00       	jmp    c130 <mm_commit_data_internal>

000000000000b9b0 <mm_modify_type>:
    b9b0:	f3 0f 1e fa          	endbr64 
    b9b4:	48 8d 0d ad e6 00 00 	lea    0xe6ad(%rip),%rcx        # 1a068 <g_rts_ema_root>
    b9bb:	e9 90 08 00 00       	jmp    c250 <mm_modify_type_internal>

000000000000b9c0 <mm_modify_permissions>:
    b9c0:	f3 0f 1e fa          	endbr64 
    b9c4:	48 8d 0d 9d e6 00 00 	lea    0xe69d(%rip),%rcx        # 1a068 <g_rts_ema_root>
    b9cb:	e9 40 0a 00 00       	jmp    c410 <mm_modify_permissions_internal>

000000000000b9d0 <sgx_mm_enclave_pfhandler>:
    b9d0:	f3 0f 1e fa          	endbr64 
    b9d4:	41 56                	push   %r14
    b9d6:	41 55                	push   %r13
    b9d8:	49 89 fd             	mov    %rdi,%r13
    b9db:	41 54                	push   %r12
    b9dd:	55                   	push   %rbp
    b9de:	53                   	push   %rbx
    b9df:	31 db                	xor    %ebx,%ebx
    b9e1:	48 83 ec 10          	sub    $0x10,%rsp
    b9e5:	4c 8b 37             	mov    (%rdi),%r14
    b9e8:	48 8b 3d 21 f0 01 00 	mov    0x1f021(%rip),%rdi        # 2aa10 <mm_lock>
    b9ef:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    b9f6:	00 00 
    b9f8:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    b9fd:	31 c0                	xor    %eax,%eax
    b9ff:	e8 bc 9f ff ff       	call   59c0 <sgx_mm_mutex_lock>
    ba04:	85 c0                	test   %eax,%eax
    ba06:	74 28                	je     ba30 <sgx_mm_enclave_pfhandler+0x60>
    ba08:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    ba0d:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    ba14:	00 00 
    ba16:	0f 85 50 01 00 00    	jne    bb6c <sgx_mm_enclave_pfhandler+0x19c>
    ba1c:	48 83 c4 10          	add    $0x10,%rsp
    ba20:	89 d8                	mov    %ebx,%eax
    ba22:	5b                   	pop    %rbx
    ba23:	5d                   	pop    %rbp
    ba24:	41 5c                	pop    %r12
    ba26:	41 5d                	pop    %r13
    ba28:	41 5e                	pop    %r14
    ba2a:	c3                   	ret    
    ba2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    ba30:	49 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%r14
    ba37:	48 8d 3d c2 e5 00 00 	lea    0xe5c2(%rip),%rdi        # 1a000 <g_user_ema_root>
    ba3e:	89 c3                	mov    %eax,%ebx
    ba40:	4c 89 f6             	mov    %r14,%rsi
    ba43:	e8 68 de ff ff       	call   98b0 <search_ema>
    ba48:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    ba4f:	00 
    ba50:	48 89 c5             	mov    %rax,%rbp
    ba53:	48 85 c0             	test   %rax,%rax
    ba56:	0f 84 b4 00 00 00    	je     bb10 <sgx_mm_enclave_pfhandler+0x140>
    ba5c:	48 89 e6             	mov    %rsp,%rsi
    ba5f:	48 89 ef             	mov    %rbp,%rdi
    ba62:	e8 f9 dc ff ff       	call   9760 <ema_fault_handler>
    ba67:	49 89 c4             	mov    %rax,%r12
    ba6a:	48 85 c0             	test   %rax,%rax
    ba6d:	74 21                	je     ba90 <sgx_mm_enclave_pfhandler+0xc0>
    ba6f:	48 8b 3d 9a ef 01 00 	mov    0x1ef9a(%rip),%rdi        # 2aa10 <mm_lock>
    ba76:	e8 65 9f ff ff       	call   59e0 <sgx_mm_mutex_unlock>
    ba7b:	48 8b 34 24          	mov    (%rsp),%rsi
    ba7f:	4c 89 ef             	mov    %r13,%rdi
    ba82:	41 ff d4             	call   *%r12
    ba85:	89 c3                	mov    %eax,%ebx
    ba87:	e9 7c ff ff ff       	jmp    ba08 <sgx_mm_enclave_pfhandler+0x38>
    ba8c:	0f 1f 40 00          	nopl   0x0(%rax)
    ba90:	4c 89 f6             	mov    %r14,%rsi
    ba93:	48 89 ef             	mov    %rbp,%rdi
    ba96:	e8 e5 dd ff ff       	call   9880 <ema_page_committed>
    ba9b:	84 c0                	test   %al,%al
    ba9d:	74 31                	je     bad0 <sgx_mm_enclave_pfhandler+0x100>
    ba9f:	41 f6 45 08 02       	testb  $0x2,0x8(%r13)
    baa4:	0f 84 86 00 00 00    	je     bb30 <sgx_mm_enclave_pfhandler+0x160>
    baaa:	48 89 ef             	mov    %rbp,%rdi
    baad:	e8 9e dc ff ff       	call   9750 <get_ema_si_flags>
    bab2:	48 d1 e8             	shr    %rax
    bab5:	48 89 c3             	mov    %rax,%rbx
    bab8:	83 e3 01             	and    $0x1,%ebx
    babb:	f7 db                	neg    %ebx
    babd:	48 8b 3d 4c ef 01 00 	mov    0x1ef4c(%rip),%rdi        # 2aa10 <mm_lock>
    bac4:	e8 17 9f ff ff       	call   59e0 <sgx_mm_mutex_unlock>
    bac9:	e9 3a ff ff ff       	jmp    ba08 <sgx_mm_enclave_pfhandler+0x38>
    bace:	66 90                	xchg   %ax,%ax
    bad0:	48 89 ef             	mov    %rbp,%rdi
    bad3:	e8 68 dc ff ff       	call   9740 <get_ema_alloc_flags>
    bad8:	a8 04                	test   $0x4,%al
    bada:	0f 84 91 00 00 00    	je     bb71 <sgx_mm_enclave_pfhandler+0x1a1>
    bae0:	41 f6 45 08 02       	testb  $0x2,0x8(%r13)
    bae5:	74 69                	je     bb50 <sgx_mm_enclave_pfhandler+0x180>
    bae7:	48 89 ef             	mov    %rbp,%rdi
    baea:	e8 61 dc ff ff       	call   9750 <get_ema_si_flags>
    baef:	a8 02                	test   $0x2,%al
    baf1:	74 ca                	je     babd <sgx_mm_enclave_pfhandler+0xed>
    baf3:	49 8d 96 00 10 00 00 	lea    0x1000(%r14),%rdx
    bafa:	4c 89 f6             	mov    %r14,%rsi
    bafd:	48 89 ef             	mov    %rbp,%rdi
    bb00:	e8 6b e7 ff ff       	call   a270 <ema_do_commit>
    bb05:	85 c0                	test   %eax,%eax
    bb07:	75 68                	jne    bb71 <sgx_mm_enclave_pfhandler+0x1a1>
    bb09:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
    bb0e:	eb ad                	jmp    babd <sgx_mm_enclave_pfhandler+0xed>
    bb10:	4c 89 f6             	mov    %r14,%rsi
    bb13:	48 8d 3d 4e e5 00 00 	lea    0xe54e(%rip),%rdi        # 1a068 <g_rts_ema_root>
    bb1a:	e8 91 dd ff ff       	call   98b0 <search_ema>
    bb1f:	48 89 c5             	mov    %rax,%rbp
    bb22:	48 85 c0             	test   %rax,%rax
    bb25:	0f 85 31 ff ff ff    	jne    ba5c <sgx_mm_enclave_pfhandler+0x8c>
    bb2b:	eb 90                	jmp    babd <sgx_mm_enclave_pfhandler+0xed>
    bb2d:	0f 1f 00             	nopl   (%rax)
    bb30:	48 89 ef             	mov    %rbp,%rdi
    bb33:	e8 18 dc ff ff       	call   9750 <get_ema_si_flags>
    bb38:	a8 01                	test   $0x1,%al
    bb3a:	0f 84 7d ff ff ff    	je     babd <sgx_mm_enclave_pfhandler+0xed>
    bb40:	41 f6 45 08 02       	testb  $0x2,0x8(%r13)
    bb45:	74 c2                	je     bb09 <sgx_mm_enclave_pfhandler+0x139>
    bb47:	e9 5e ff ff ff       	jmp    baaa <sgx_mm_enclave_pfhandler+0xda>
    bb4c:	0f 1f 40 00          	nopl   0x0(%rax)
    bb50:	48 89 ef             	mov    %rbp,%rdi
    bb53:	e8 f8 db ff ff       	call   9750 <get_ema_si_flags>
    bb58:	a8 01                	test   $0x1,%al
    bb5a:	0f 84 5d ff ff ff    	je     babd <sgx_mm_enclave_pfhandler+0xed>
    bb60:	41 f6 45 08 02       	testb  $0x2,0x8(%r13)
    bb65:	74 8c                	je     baf3 <sgx_mm_enclave_pfhandler+0x123>
    bb67:	e9 7b ff ff ff       	jmp    bae7 <sgx_mm_enclave_pfhandler+0x117>
    bb6c:	e8 2f 4e 00 00       	call   109a0 <__stack_chk_fail>
    bb71:	48 8b 3d 98 ee 01 00 	mov    0x1ee98(%rip),%rdi        # 2aa10 <mm_lock>
    bb78:	e8 63 9e ff ff       	call   59e0 <sgx_mm_mutex_unlock>
    bb7d:	e8 b5 69 00 00       	call   12537 <abort>
    bb82:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    bb89:	00 00 00 
    bb8c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000bb90 <mm_alloc_internal>:
    bb90:	f3 0f 1e fa          	endbr64 
    bb94:	41 57                	push   %r15
    bb96:	41 56                	push   %r14
    bb98:	41 55                	push   %r13
    bb9a:	41 54                	push   %r12
    bb9c:	55                   	push   %rbp
    bb9d:	53                   	push   %rbx
    bb9e:	48 83 ec 68          	sub    $0x68,%rsp
    bba2:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    bba9:	00 00 
    bbab:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    bbb0:	31 c0                	xor    %eax,%eax
    bbb2:	4c 8b b4 24 a0 00 00 	mov    0xa0(%rsp),%r14
    bbb9:	00 
    bbba:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
    bbc1:	00 00 
    bbc3:	f6 c2 07             	test   $0x7,%dl
    bbc6:	74 60                	je     bc28 <mm_alloc_internal+0x98>
    bbc8:	4c 89 c5             	mov    %r8,%rbp
    bbcb:	89 d0                	mov    %edx,%eax
    bbcd:	41 89 d0             	mov    %edx,%r8d
    bbd0:	25 00 ff 00 00       	and    $0xff00,%eax
    bbd5:	41 81 e0 00 ff 00 00 	and    $0xff00,%r8d
    bbdc:	f6 c6 f8             	test   $0xf8,%dh
    bbdf:	75 47                	jne    bc28 <mm_alloc_internal+0x98>
    bbe1:	85 c0                	test   %eax,%eax
    bbe3:	b8 00 02 00 00       	mov    $0x200,%eax
    bbe8:	49 89 f7             	mov    %rsi,%r15
    bbeb:	4c 0f 44 c0          	cmove  %rax,%r8
    bbef:	f7 c6 ff 0f 00 00    	test   $0xfff,%esi
    bbf5:	75 31                	jne    bc28 <mm_alloc_internal+0x98>
    bbf7:	48 89 cb             	mov    %rcx,%rbx
    bbfa:	89 d1                	mov    %edx,%ecx
    bbfc:	4d 89 cc             	mov    %r9,%r12
    bbff:	c1 e9 18             	shr    $0x18,%ecx
    bc02:	74 54                	je     bc58 <mm_alloc_internal+0xc8>
    bc04:	83 f9 0b             	cmp    $0xb,%ecx
    bc07:	76 1f                	jbe    bc28 <mm_alloc_internal+0x98>
    bc09:	b8 01 00 00 00       	mov    $0x1,%eax
    bc0e:	49 c7 c5 ff ff ff ff 	mov    $0xffffffffffffffff,%r13
    bc15:	48 d3 e0             	shl    %cl,%rax
    bc18:	49 d3 e5             	shl    %cl,%r13
    bc1b:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    bc20:	49 f7 d5             	not    %r13
    bc23:	eb 42                	jmp    bc67 <mm_alloc_internal+0xd7>
    bc25:	0f 1f 00             	nopl   (%rax)
    bc28:	b9 16 00 00 00       	mov    $0x16,%ecx
    bc2d:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
    bc32:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    bc39:	00 00 
    bc3b:	0f 85 41 02 00 00    	jne    be82 <mm_alloc_internal+0x2f2>
    bc41:	48 83 c4 68          	add    $0x68,%rsp
    bc45:	89 c8                	mov    %ecx,%eax
    bc47:	5b                   	pop    %rbx
    bc48:	5d                   	pop    %rbp
    bc49:	41 5c                	pop    %r12
    bc4b:	41 5d                	pop    %r13
    bc4d:	41 5e                	pop    %r14
    bc4f:	41 5f                	pop    %r15
    bc51:	c3                   	ret    
    bc52:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    bc58:	48 c7 44 24 08 00 10 	movq   $0x1000,0x8(%rsp)
    bc5f:	00 00 
    bc61:	41 bd ff 0f 00 00    	mov    $0xfff,%r13d
    bc67:	48 89 7c 24 38       	mov    %rdi,0x38(%rsp)
    bc6c:	49 21 fd             	and    %rdi,%r13
    bc6f:	75 b7                	jne    bc28 <mm_alloc_internal+0x98>
    bc71:	48 85 ff             	test   %rdi,%rdi
    bc74:	74 23                	je     bc99 <mm_alloc_internal+0x109>
    bc76:	4c 89 fe             	mov    %r15,%rsi
    bc79:	89 54 24 1c          	mov    %edx,0x1c(%rsp)
    bc7d:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
    bc82:	e8 99 9d ff ff       	call   5a20 <sgx_mm_is_within_enclave>
    bc87:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
    bc8c:	8b 54 24 1c          	mov    0x1c(%rsp),%edx
    bc90:	b9 0d 00 00 00       	mov    $0xd,%ecx
    bc95:	84 c0                	test   %al,%al
    bc97:	74 94                	je     bc2d <mm_alloc_internal+0x9d>
    bc99:	48 8b 3d 70 ed 01 00 	mov    0x1ed70(%rip),%rdi        # 2aa10 <mm_lock>
    bca0:	89 54 24 1c          	mov    %edx,0x1c(%rsp)
    bca4:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
    bca9:	e8 12 9d ff ff       	call   59c0 <sgx_mm_mutex_lock>
    bcae:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
    bcb3:	8b 54 24 1c          	mov    0x1c(%rsp),%edx
    bcb7:	b9 0e 00 00 00       	mov    $0xe,%ecx
    bcbc:	85 c0                	test   %eax,%eax
    bcbe:	0f 85 69 ff ff ff    	jne    bc2d <mm_alloc_internal+0x9d>
    bcc4:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
    bcc9:	49 83 c8 03          	or     $0x3,%r8
    bccd:	0f b6 c2             	movzbl %dl,%eax
    bcd0:	f6 c2 01             	test   $0x1,%dl
    bcd3:	89 44 24 10          	mov    %eax,0x10(%rsp)
    bcd7:	4d 0f 44 e8          	cmove  %r8,%r13
    bcdb:	48 85 f6             	test   %rsi,%rsi
    bcde:	0f 85 9c 00 00 00    	jne    bd80 <mm_alloc_internal+0x1f0>
    bce4:	4c 8d 44 24 40       	lea    0x40(%rsp),%r8
    bce9:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    bcee:	48 8d 4c 24 38       	lea    0x38(%rsp),%rcx
    bcf3:	4c 89 fe             	mov    %r15,%rsi
    bcf6:	4c 89 f7             	mov    %r14,%rdi
    bcf9:	e8 02 df ff ff       	call   9c00 <find_free_region>
    bcfe:	84 c0                	test   %al,%al
    bd00:	0f 84 0a 01 00 00    	je     be10 <mm_alloc_internal+0x280>
    bd06:	48 83 ec 08          	sub    $0x8,%rsp
    bd0a:	49 89 e9             	mov    %rbp,%r9
    bd0d:	49 89 d8             	mov    %rbx,%r8
    bd10:	4c 89 e9             	mov    %r13,%rcx
    bd13:	ff 74 24 48          	push   0x48(%rsp)
    bd17:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
    bd1c:	4c 89 fe             	mov    %r15,%rsi
    bd1f:	8b 54 24 20          	mov    0x20(%rsp),%edx
    bd23:	e8 c8 e2 ff ff       	call   9ff0 <ema_new>
    bd28:	48 89 c7             	mov    %rax,%rdi
    bd2b:	58                   	pop    %rax
    bd2c:	5a                   	pop    %rdx
    bd2d:	48 85 ff             	test   %rdi,%rdi
    bd30:	0f 84 da 00 00 00    	je     be10 <mm_alloc_internal+0x280>
    bd36:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    bd3b:	e8 50 f2 ff ff       	call   af90 <ema_do_alloc>
    bd40:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    bd45:	85 c0                	test   %eax,%eax
    bd47:	89 c1                	mov    %eax,%ecx
    bd49:	0f 85 21 01 00 00    	jne    be70 <mm_alloc_internal+0x2e0>
    bd4f:	4d 85 e4             	test   %r12,%r12
    bd52:	74 09                	je     bd5d <mm_alloc_internal+0x1cd>
    bd54:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    bd59:	49 89 04 24          	mov    %rax,(%r12)
    bd5d:	48 8b 3d ac ec 01 00 	mov    0x1ecac(%rip),%rdi        # 2aa10 <mm_lock>
    bd64:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
    bd68:	e8 73 9c ff ff       	call   59e0 <sgx_mm_mutex_unlock>
    bd6d:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
    bd71:	e9 b7 fe ff ff       	jmp    bc2d <mm_alloc_internal+0x9d>
    bd76:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    bd7d:	00 00 00 
    bd80:	83 e2 40             	and    $0x40,%edx
    bd83:	4a 8d 04 3e          	lea    (%rsi,%r15,1),%rax
    bd87:	48 8d 4c 24 48       	lea    0x48(%rsp),%rcx
    bd8c:	4c 89 f7             	mov    %r14,%rdi
    bd8f:	89 54 24 1c          	mov    %edx,0x1c(%rsp)
    bd93:	4c 8d 44 24 50       	lea    0x50(%rsp),%r8
    bd98:	48 89 c2             	mov    %rax,%rdx
    bd9b:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
    bda2:	00 00 
    bda4:	48 c7 44 24 50 00 00 	movq   $0x0,0x50(%rsp)
    bdab:	00 00 
    bdad:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    bdb2:	48 89 74 24 28       	mov    %rsi,0x28(%rsp)
    bdb7:	e8 84 db ff ff       	call   9940 <search_ema_range>
    bdbc:	85 c0                	test   %eax,%eax
    bdbe:	75 60                	jne    be20 <mm_alloc_internal+0x290>
    bdc0:	55                   	push   %rbp
    bdc1:	4d 89 e9             	mov    %r13,%r9
    bdc4:	53                   	push   %rbx
    bdc5:	48 8b 7c 24 58       	mov    0x58(%rsp),%rdi
    bdca:	44 8b 44 24 20       	mov    0x20(%rsp),%r8d
    bdcf:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
    bdd4:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
    bdd9:	48 8b 74 24 60       	mov    0x60(%rsp),%rsi
    bdde:	e8 5d f0 ff ff       	call   ae40 <ema_realloc_from_reserve_range>
    bde3:	41 58                	pop    %r8
    bde5:	41 59                	pop    %r9
    bde7:	48 89 c7             	mov    %rax,%rdi
    bdea:	48 85 c0             	test   %rax,%rax
    bded:	0f 85 43 ff ff ff    	jne    bd36 <mm_alloc_internal+0x1a6>
    bdf3:	8b 7c 24 1c          	mov    0x1c(%rsp),%edi
    bdf7:	b9 11 00 00 00       	mov    $0x11,%ecx
    bdfc:	85 ff                	test   %edi,%edi
    bdfe:	0f 84 e0 fe ff ff    	je     bce4 <mm_alloc_internal+0x154>
    be04:	e9 54 ff ff ff       	jmp    bd5d <mm_alloc_internal+0x1cd>
    be09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    be10:	b9 0c 00 00 00       	mov    $0xc,%ecx
    be15:	e9 43 ff ff ff       	jmp    bd5d <mm_alloc_internal+0x1cd>
    be1a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    be20:	4c 8d 44 24 40       	lea    0x40(%rsp),%r8
    be25:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
    be2a:	4c 89 fa             	mov    %r15,%rdx
    be2d:	4c 89 f7             	mov    %r14,%rdi
    be30:	4c 89 c1             	mov    %r8,%rcx
    be33:	4c 89 44 24 20       	mov    %r8,0x20(%rsp)
    be38:	e8 d3 e0 ff ff       	call   9f10 <find_free_region_at>
    be3d:	3c 01                	cmp    $0x1,%al
    be3f:	0f 84 c1 fe ff ff    	je     bd06 <mm_alloc_internal+0x176>
    be45:	8b 74 24 1c          	mov    0x1c(%rsp),%esi
    be49:	b9 01 00 00 00       	mov    $0x1,%ecx
    be4e:	85 f6                	test   %esi,%esi
    be50:	0f 85 07 ff ff ff    	jne    bd5d <mm_alloc_internal+0x1cd>
    be56:	84 c0                	test   %al,%al
    be58:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
    be5d:	0f 84 86 fe ff ff    	je     bce9 <mm_alloc_internal+0x159>
    be63:	e9 9e fe ff ff       	jmp    bd06 <mm_alloc_internal+0x176>
    be68:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    be6f:	00 
    be70:	89 44 24 08          	mov    %eax,0x8(%rsp)
    be74:	e8 87 e2 ff ff       	call   a100 <ema_destroy>
    be79:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
    be7d:	e9 db fe ff ff       	jmp    bd5d <mm_alloc_internal+0x1cd>
    be82:	e8 19 4b 00 00       	call   109a0 <__stack_chk_fail>
    be87:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    be8e:	00 00 

000000000000be90 <sgx_mm_alloc>:
    be90:	f3 0f 1e fa          	endbr64 
    be94:	f6 c2 80             	test   $0x80,%dl
    be97:	75 17                	jne    beb0 <sgx_mm_alloc+0x20>
    be99:	48 83 ec 10          	sub    $0x10,%rsp
    be9d:	48 8d 05 5c e1 00 00 	lea    0xe15c(%rip),%rax        # 1a000 <g_user_ema_root>
    bea4:	50                   	push   %rax
    bea5:	e8 e6 fc ff ff       	call   bb90 <mm_alloc_internal>
    beaa:	48 83 c4 18          	add    $0x18,%rsp
    beae:	c3                   	ret    
    beaf:	90                   	nop
    beb0:	b8 16 00 00 00       	mov    $0x16,%eax
    beb5:	c3                   	ret    
    beb6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    bebd:	00 00 00 

000000000000bec0 <mm_commit_internal>:
    bec0:	f3 0f 1e fa          	endbr64 
    bec4:	41 55                	push   %r13
    bec6:	49 89 d5             	mov    %rdx,%r13
    bec9:	41 54                	push   %r12
    becb:	49 89 fc             	mov    %rdi,%r12
    bece:	55                   	push   %rbp
    becf:	48 89 f5             	mov    %rsi,%rbp
    bed2:	53                   	push   %rbx
    bed3:	bb 0e 00 00 00       	mov    $0xe,%ebx
    bed8:	48 83 ec 28          	sub    $0x28,%rsp
    bedc:	48 8b 3d 2d eb 01 00 	mov    0x1eb2d(%rip),%rdi        # 2aa10 <mm_lock>
    bee3:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    beea:	00 00 
    beec:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    bef1:	31 c0                	xor    %eax,%eax
    bef3:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    befa:	00 00 
    befc:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    bf03:	00 00 
    bf05:	e8 b6 9a ff ff       	call   59c0 <sgx_mm_mutex_lock>
    bf0a:	85 c0                	test   %eax,%eax
    bf0c:	75 47                	jne    bf55 <mm_commit_internal+0x95>
    bf0e:	4c 01 e5             	add    %r12,%rbp
    bf11:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    bf16:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    bf1b:	4c 89 e6             	mov    %r12,%rsi
    bf1e:	48 89 ea             	mov    %rbp,%rdx
    bf21:	4c 89 ef             	mov    %r13,%rdi
    bf24:	bb 16 00 00 00       	mov    $0x16,%ebx
    bf29:	e8 12 da ff ff       	call   9940 <search_ema_range>
    bf2e:	85 c0                	test   %eax,%eax
    bf30:	78 17                	js     bf49 <mm_commit_internal+0x89>
    bf32:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    bf37:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    bf3c:	48 89 e9             	mov    %rbp,%rcx
    bf3f:	4c 89 e2             	mov    %r12,%rdx
    bf42:	e8 19 e4 ff ff       	call   a360 <ema_do_commit_loop>
    bf47:	89 c3                	mov    %eax,%ebx
    bf49:	48 8b 3d c0 ea 01 00 	mov    0x1eac0(%rip),%rdi        # 2aa10 <mm_lock>
    bf50:	e8 8b 9a ff ff       	call   59e0 <sgx_mm_mutex_unlock>
    bf55:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    bf5a:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    bf61:	00 00 
    bf63:	75 0d                	jne    bf72 <mm_commit_internal+0xb2>
    bf65:	48 83 c4 28          	add    $0x28,%rsp
    bf69:	89 d8                	mov    %ebx,%eax
    bf6b:	5b                   	pop    %rbx
    bf6c:	5d                   	pop    %rbp
    bf6d:	41 5c                	pop    %r12
    bf6f:	41 5d                	pop    %r13
    bf71:	c3                   	ret    
    bf72:	e8 29 4a 00 00       	call   109a0 <__stack_chk_fail>
    bf77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    bf7e:	00 00 

000000000000bf80 <sgx_mm_commit>:
    bf80:	f3 0f 1e fa          	endbr64 
    bf84:	48 8d 15 75 e0 00 00 	lea    0xe075(%rip),%rdx        # 1a000 <g_user_ema_root>
    bf8b:	e9 30 ff ff ff       	jmp    bec0 <mm_commit_internal>

000000000000bf90 <mm_uncommit_internal>:
    bf90:	f3 0f 1e fa          	endbr64 
    bf94:	41 55                	push   %r13
    bf96:	49 89 d5             	mov    %rdx,%r13
    bf99:	41 54                	push   %r12
    bf9b:	49 89 fc             	mov    %rdi,%r12
    bf9e:	55                   	push   %rbp
    bf9f:	48 89 f5             	mov    %rsi,%rbp
    bfa2:	53                   	push   %rbx
    bfa3:	bb 0e 00 00 00       	mov    $0xe,%ebx
    bfa8:	48 83 ec 28          	sub    $0x28,%rsp
    bfac:	48 8b 3d 5d ea 01 00 	mov    0x1ea5d(%rip),%rdi        # 2aa10 <mm_lock>
    bfb3:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    bfba:	00 00 
    bfbc:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    bfc1:	31 c0                	xor    %eax,%eax
    bfc3:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    bfca:	00 00 
    bfcc:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    bfd3:	00 00 
    bfd5:	e8 e6 99 ff ff       	call   59c0 <sgx_mm_mutex_lock>
    bfda:	85 c0                	test   %eax,%eax
    bfdc:	75 47                	jne    c025 <mm_uncommit_internal+0x95>
    bfde:	4c 01 e5             	add    %r12,%rbp
    bfe1:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    bfe6:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    bfeb:	4c 89 e6             	mov    %r12,%rsi
    bfee:	48 89 ea             	mov    %rbp,%rdx
    bff1:	4c 89 ef             	mov    %r13,%rdi
    bff4:	bb 16 00 00 00       	mov    $0x16,%ebx
    bff9:	e8 42 d9 ff ff       	call   9940 <search_ema_range>
    bffe:	85 c0                	test   %eax,%eax
    c000:	78 17                	js     c019 <mm_uncommit_internal+0x89>
    c002:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    c007:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    c00c:	48 89 e9             	mov    %rbp,%rcx
    c00f:	4c 89 e2             	mov    %r12,%rdx
    c012:	e8 89 e9 ff ff       	call   a9a0 <ema_do_uncommit_loop>
    c017:	89 c3                	mov    %eax,%ebx
    c019:	48 8b 3d f0 e9 01 00 	mov    0x1e9f0(%rip),%rdi        # 2aa10 <mm_lock>
    c020:	e8 bb 99 ff ff       	call   59e0 <sgx_mm_mutex_unlock>
    c025:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    c02a:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    c031:	00 00 
    c033:	75 0d                	jne    c042 <mm_uncommit_internal+0xb2>
    c035:	48 83 c4 28          	add    $0x28,%rsp
    c039:	89 d8                	mov    %ebx,%eax
    c03b:	5b                   	pop    %rbx
    c03c:	5d                   	pop    %rbp
    c03d:	41 5c                	pop    %r12
    c03f:	41 5d                	pop    %r13
    c041:	c3                   	ret    
    c042:	e8 59 49 00 00       	call   109a0 <__stack_chk_fail>
    c047:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    c04e:	00 00 

000000000000c050 <sgx_mm_uncommit>:
    c050:	f3 0f 1e fa          	endbr64 
    c054:	48 8d 15 a5 df 00 00 	lea    0xdfa5(%rip),%rdx        # 1a000 <g_user_ema_root>
    c05b:	e9 30 ff ff ff       	jmp    bf90 <mm_uncommit_internal>

000000000000c060 <mm_dealloc_internal>:
    c060:	f3 0f 1e fa          	endbr64 
    c064:	41 55                	push   %r13
    c066:	49 89 d5             	mov    %rdx,%r13
    c069:	41 54                	push   %r12
    c06b:	49 89 fc             	mov    %rdi,%r12
    c06e:	55                   	push   %rbp
    c06f:	48 89 f5             	mov    %rsi,%rbp
    c072:	53                   	push   %rbx
    c073:	bb 0e 00 00 00       	mov    $0xe,%ebx
    c078:	48 83 ec 28          	sub    $0x28,%rsp
    c07c:	48 8b 3d 8d e9 01 00 	mov    0x1e98d(%rip),%rdi        # 2aa10 <mm_lock>
    c083:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c08a:	00 00 
    c08c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    c091:	31 c0                	xor    %eax,%eax
    c093:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    c09a:	00 00 
    c09c:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    c0a3:	00 00 
    c0a5:	e8 16 99 ff ff       	call   59c0 <sgx_mm_mutex_lock>
    c0aa:	85 c0                	test   %eax,%eax
    c0ac:	75 47                	jne    c0f5 <mm_dealloc_internal+0x95>
    c0ae:	4c 01 e5             	add    %r12,%rbp
    c0b1:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    c0b6:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    c0bb:	4c 89 e6             	mov    %r12,%rsi
    c0be:	48 89 ea             	mov    %rbp,%rdx
    c0c1:	4c 89 ef             	mov    %r13,%rdi
    c0c4:	bb 16 00 00 00       	mov    $0x16,%ebx
    c0c9:	e8 72 d8 ff ff       	call   9940 <search_ema_range>
    c0ce:	85 c0                	test   %eax,%eax
    c0d0:	78 17                	js     c0e9 <mm_dealloc_internal+0x89>
    c0d2:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    c0d7:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    c0dc:	48 89 e9             	mov    %rbp,%rcx
    c0df:	4c 89 e2             	mov    %r12,%rdx
    c0e2:	e8 69 e8 ff ff       	call   a950 <ema_do_dealloc_loop>
    c0e7:	89 c3                	mov    %eax,%ebx
    c0e9:	48 8b 3d 20 e9 01 00 	mov    0x1e920(%rip),%rdi        # 2aa10 <mm_lock>
    c0f0:	e8 eb 98 ff ff       	call   59e0 <sgx_mm_mutex_unlock>
    c0f5:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    c0fa:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    c101:	00 00 
    c103:	75 0d                	jne    c112 <mm_dealloc_internal+0xb2>
    c105:	48 83 c4 28          	add    $0x28,%rsp
    c109:	89 d8                	mov    %ebx,%eax
    c10b:	5b                   	pop    %rbx
    c10c:	5d                   	pop    %rbp
    c10d:	41 5c                	pop    %r12
    c10f:	41 5d                	pop    %r13
    c111:	c3                   	ret    
    c112:	e8 89 48 00 00       	call   109a0 <__stack_chk_fail>
    c117:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    c11e:	00 00 

000000000000c120 <sgx_mm_dealloc>:
    c120:	f3 0f 1e fa          	endbr64 
    c124:	48 8d 15 d5 de 00 00 	lea    0xded5(%rip),%rdx        # 1a000 <g_user_ema_root>
    c12b:	e9 30 ff ff ff       	jmp    c060 <mm_dealloc_internal>

000000000000c130 <mm_commit_data_internal>:
    c130:	f3 0f 1e fa          	endbr64 
    c134:	41 57                	push   %r15
    c136:	41 56                	push   %r14
    c138:	41 55                	push   %r13
    c13a:	41 54                	push   %r12
    c13c:	55                   	push   %rbp
    c13d:	53                   	push   %rbx
    c13e:	48 83 ec 28          	sub    $0x28,%rsp
    c142:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c149:	00 00 
    c14b:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    c150:	31 c0                	xor    %eax,%eax
    c152:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    c159:	00 00 
    c15b:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    c162:	00 00 
    c164:	48 85 f6             	test   %rsi,%rsi
    c167:	0f 84 a3 00 00 00    	je     c210 <mm_commit_data_internal+0xe0>
    c16d:	48 89 d0             	mov    %rdx,%rax
    c170:	49 89 fc             	mov    %rdi,%r12
    c173:	48 89 f3             	mov    %rsi,%rbx
    c176:	48 89 d5             	mov    %rdx,%rbp
    c179:	48 09 f0             	or     %rsi,%rax
    c17c:	48 09 f8             	or     %rdi,%rax
    c17f:	a9 ff 0f 00 00       	test   $0xfff,%eax
    c184:	0f 85 86 00 00 00    	jne    c210 <mm_commit_data_internal+0xe0>
    c18a:	41 89 cf             	mov    %ecx,%r15d
    c18d:	83 f9 07             	cmp    $0x7,%ecx
    c190:	77 7e                	ja     c210 <mm_commit_data_internal+0xe0>
    c192:	48 89 d7             	mov    %rdx,%rdi
    c195:	4d 89 c6             	mov    %r8,%r14
    c198:	e8 83 98 ff ff       	call   5a20 <sgx_mm_is_within_enclave>
    c19d:	84 c0                	test   %al,%al
    c19f:	74 6f                	je     c210 <mm_commit_data_internal+0xe0>
    c1a1:	48 8b 3d 68 e8 01 00 	mov    0x1e868(%rip),%rdi        # 2aa10 <mm_lock>
    c1a8:	41 bd 0e 00 00 00    	mov    $0xe,%r13d
    c1ae:	e8 0d 98 ff ff       	call   59c0 <sgx_mm_mutex_lock>
    c1b3:	85 c0                	test   %eax,%eax
    c1b5:	75 5f                	jne    c216 <mm_commit_data_internal+0xe6>
    c1b7:	4c 01 e3             	add    %r12,%rbx
    c1ba:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    c1bf:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    c1c4:	4c 89 e6             	mov    %r12,%rsi
    c1c7:	48 89 da             	mov    %rbx,%rdx
    c1ca:	4c 89 f7             	mov    %r14,%rdi
    c1cd:	41 bd 16 00 00 00    	mov    $0x16,%r13d
    c1d3:	e8 68 d7 ff ff       	call   9940 <search_ema_range>
    c1d8:	85 c0                	test   %eax,%eax
    c1da:	78 1e                	js     c1fa <mm_commit_data_internal+0xca>
    c1dc:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    c1e1:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    c1e6:	45 89 f9             	mov    %r15d,%r9d
    c1e9:	49 89 e8             	mov    %rbp,%r8
    c1ec:	48 89 d9             	mov    %rbx,%rcx
    c1ef:	4c 89 e2             	mov    %r12,%rdx
    c1f2:	e8 c9 ea ff ff       	call   acc0 <ema_do_commit_data_loop>
    c1f7:	41 89 c5             	mov    %eax,%r13d
    c1fa:	48 8b 3d 0f e8 01 00 	mov    0x1e80f(%rip),%rdi        # 2aa10 <mm_lock>
    c201:	e8 da 97 ff ff       	call   59e0 <sgx_mm_mutex_unlock>
    c206:	eb 0e                	jmp    c216 <mm_commit_data_internal+0xe6>
    c208:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    c20f:	00 
    c210:	41 bd 16 00 00 00    	mov    $0x16,%r13d
    c216:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    c21b:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    c222:	00 00 
    c224:	75 12                	jne    c238 <mm_commit_data_internal+0x108>
    c226:	48 83 c4 28          	add    $0x28,%rsp
    c22a:	44 89 e8             	mov    %r13d,%eax
    c22d:	5b                   	pop    %rbx
    c22e:	5d                   	pop    %rbp
    c22f:	41 5c                	pop    %r12
    c231:	41 5d                	pop    %r13
    c233:	41 5e                	pop    %r14
    c235:	41 5f                	pop    %r15
    c237:	c3                   	ret    
    c238:	e8 63 47 00 00       	call   109a0 <__stack_chk_fail>
    c23d:	0f 1f 00             	nopl   (%rax)

000000000000c240 <sgx_mm_commit_data>:
    c240:	f3 0f 1e fa          	endbr64 
    c244:	4c 8d 05 b5 dd 00 00 	lea    0xddb5(%rip),%r8        # 1a000 <g_user_ema_root>
    c24b:	e9 e0 fe ff ff       	jmp    c130 <mm_commit_data_internal>

000000000000c250 <mm_modify_type_internal>:
    c250:	f3 0f 1e fa          	endbr64 
    c254:	41 54                	push   %r12
    c256:	55                   	push   %rbp
    c257:	bd 01 00 00 00       	mov    $0x1,%ebp
    c25c:	53                   	push   %rbx
    c25d:	48 83 ec 20          	sub    $0x20,%rsp
    c261:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c268:	00 00 
    c26a:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    c26f:	31 c0                	xor    %eax,%eax
    c271:	81 fa 00 01 00 00    	cmp    $0x100,%edx
    c277:	0f 85 83 00 00 00    	jne    c300 <mm_modify_type_internal+0xb0>
    c27d:	48 81 fe 00 10 00 00 	cmp    $0x1000,%rsi
    c284:	0f 85 96 00 00 00    	jne    c320 <mm_modify_type_internal+0xd0>
    c28a:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    c291:	00 00 
    c293:	49 89 fc             	mov    %rdi,%r12
    c296:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    c29d:	00 00 
    c29f:	f7 c7 ff 0f 00 00    	test   $0xfff,%edi
    c2a5:	75 79                	jne    c320 <mm_modify_type_internal+0xd0>
    c2a7:	48 8b 3d 62 e7 01 00 	mov    0x1e762(%rip),%rdi        # 2aa10 <mm_lock>
    c2ae:	48 89 cb             	mov    %rcx,%rbx
    c2b1:	bd 0e 00 00 00       	mov    $0xe,%ebp
    c2b6:	e8 05 97 ff ff       	call   59c0 <sgx_mm_mutex_lock>
    c2bb:	85 c0                	test   %eax,%eax
    c2bd:	75 41                	jne    c300 <mm_modify_type_internal+0xb0>
    c2bf:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    c2c4:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    c2c9:	4c 89 e6             	mov    %r12,%rsi
    c2cc:	48 89 df             	mov    %rbx,%rdi
    c2cf:	49 8d 94 24 00 10 00 	lea    0x1000(%r12),%rdx
    c2d6:	00 
    c2d7:	bd 16 00 00 00       	mov    $0x16,%ebp
    c2dc:	e8 5f d6 ff ff       	call   9940 <search_ema_range>
    c2e1:	85 c0                	test   %eax,%eax
    c2e3:	78 0f                	js     c2f4 <mm_modify_type_internal+0xa4>
    c2e5:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    c2ea:	4c 89 e6             	mov    %r12,%rsi
    c2ed:	e8 3e e1 ff ff       	call   a430 <ema_change_to_tcs>
    c2f2:	89 c5                	mov    %eax,%ebp
    c2f4:	48 8b 3d 15 e7 01 00 	mov    0x1e715(%rip),%rdi        # 2aa10 <mm_lock>
    c2fb:	e8 e0 96 ff ff       	call   59e0 <sgx_mm_mutex_unlock>
    c300:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    c305:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    c30c:	00 00 
    c30e:	75 17                	jne    c327 <mm_modify_type_internal+0xd7>
    c310:	48 83 c4 20          	add    $0x20,%rsp
    c314:	89 e8                	mov    %ebp,%eax
    c316:	5b                   	pop    %rbx
    c317:	5d                   	pop    %rbp
    c318:	41 5c                	pop    %r12
    c31a:	c3                   	ret    
    c31b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    c320:	bd 16 00 00 00       	mov    $0x16,%ebp
    c325:	eb d9                	jmp    c300 <mm_modify_type_internal+0xb0>
    c327:	e8 74 46 00 00       	call   109a0 <__stack_chk_fail>
    c32c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000c330 <sgx_mm_modify_type>:
    c330:	f3 0f 1e fa          	endbr64 
    c334:	55                   	push   %rbp
    c335:	53                   	push   %rbx
    c336:	bb 01 00 00 00       	mov    $0x1,%ebx
    c33b:	48 83 ec 28          	sub    $0x28,%rsp
    c33f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c346:	00 00 
    c348:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    c34d:	31 c0                	xor    %eax,%eax
    c34f:	81 fa 00 01 00 00    	cmp    $0x100,%edx
    c355:	0f 85 85 00 00 00    	jne    c3e0 <sgx_mm_modify_type+0xb0>
    c35b:	48 81 fe 00 10 00 00 	cmp    $0x1000,%rsi
    c362:	0f 85 98 00 00 00    	jne    c400 <sgx_mm_modify_type+0xd0>
    c368:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    c36f:	00 00 
    c371:	48 89 fd             	mov    %rdi,%rbp
    c374:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    c37b:	00 00 
    c37d:	f7 c7 ff 0f 00 00    	test   $0xfff,%edi
    c383:	75 7b                	jne    c400 <sgx_mm_modify_type+0xd0>
    c385:	48 8b 3d 84 e6 01 00 	mov    0x1e684(%rip),%rdi        # 2aa10 <mm_lock>
    c38c:	bb 0e 00 00 00       	mov    $0xe,%ebx
    c391:	e8 2a 96 ff ff       	call   59c0 <sgx_mm_mutex_lock>
    c396:	85 c0                	test   %eax,%eax
    c398:	75 46                	jne    c3e0 <sgx_mm_modify_type+0xb0>
    c39a:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    c39f:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    c3a4:	48 89 ee             	mov    %rbp,%rsi
    c3a7:	bb 16 00 00 00       	mov    $0x16,%ebx
    c3ac:	48 8d 95 00 10 00 00 	lea    0x1000(%rbp),%rdx
    c3b3:	48 8d 3d 46 dc 00 00 	lea    0xdc46(%rip),%rdi        # 1a000 <g_user_ema_root>
    c3ba:	e8 81 d5 ff ff       	call   9940 <search_ema_range>
    c3bf:	85 c0                	test   %eax,%eax
    c3c1:	78 0f                	js     c3d2 <sgx_mm_modify_type+0xa2>
    c3c3:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    c3c8:	48 89 ee             	mov    %rbp,%rsi
    c3cb:	e8 60 e0 ff ff       	call   a430 <ema_change_to_tcs>
    c3d0:	89 c3                	mov    %eax,%ebx
    c3d2:	48 8b 3d 37 e6 01 00 	mov    0x1e637(%rip),%rdi        # 2aa10 <mm_lock>
    c3d9:	e8 02 96 ff ff       	call   59e0 <sgx_mm_mutex_unlock>
    c3de:	66 90                	xchg   %ax,%ax
    c3e0:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    c3e5:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    c3ec:	00 00 
    c3ee:	75 17                	jne    c407 <sgx_mm_modify_type+0xd7>
    c3f0:	48 83 c4 28          	add    $0x28,%rsp
    c3f4:	89 d8                	mov    %ebx,%eax
    c3f6:	5b                   	pop    %rbx
    c3f7:	5d                   	pop    %rbp
    c3f8:	c3                   	ret    
    c3f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c400:	bb 16 00 00 00       	mov    $0x16,%ebx
    c405:	eb d9                	jmp    c3e0 <sgx_mm_modify_type+0xb0>
    c407:	e8 94 45 00 00       	call   109a0 <__stack_chk_fail>
    c40c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000c410 <mm_modify_permissions_internal>:
    c410:	f3 0f 1e fa          	endbr64 
    c414:	41 56                	push   %r14
    c416:	41 55                	push   %r13
    c418:	41 54                	push   %r12
    c41a:	41 bc 16 00 00 00    	mov    $0x16,%r12d
    c420:	55                   	push   %rbp
    c421:	53                   	push   %rbx
    c422:	48 83 ec 20          	sub    $0x20,%rsp
    c426:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c42d:	00 00 
    c42f:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    c434:	31 c0                	xor    %eax,%eax
    c436:	48 85 f6             	test   %rsi,%rsi
    c439:	0f 84 9b 00 00 00    	je     c4da <mm_modify_permissions_internal+0xca>
    c43f:	48 89 f8             	mov    %rdi,%rax
    c442:	48 89 fd             	mov    %rdi,%rbp
    c445:	48 89 f3             	mov    %rsi,%rbx
    c448:	48 09 f0             	or     %rsi,%rax
    c44b:	a9 ff 0f 00 00       	test   $0xfff,%eax
    c450:	0f 85 84 00 00 00    	jne    c4da <mm_modify_permissions_internal+0xca>
    c456:	89 d0                	mov    %edx,%eax
    c458:	41 89 d6             	mov    %edx,%r14d
    c45b:	83 e0 05             	and    $0x5,%eax
    c45e:	83 f8 04             	cmp    $0x4,%eax
    c461:	74 77                	je     c4da <mm_modify_permissions_internal+0xca>
    c463:	48 8b 3d a6 e5 01 00 	mov    0x1e5a6(%rip),%rdi        # 2aa10 <mm_lock>
    c46a:	49 89 cd             	mov    %rcx,%r13
    c46d:	41 bc 0e 00 00 00    	mov    $0xe,%r12d
    c473:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    c47a:	00 00 
    c47c:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    c483:	00 00 
    c485:	e8 36 95 ff ff       	call   59c0 <sgx_mm_mutex_lock>
    c48a:	85 c0                	test   %eax,%eax
    c48c:	75 4c                	jne    c4da <mm_modify_permissions_internal+0xca>
    c48e:	48 01 eb             	add    %rbp,%rbx
    c491:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    c496:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    c49b:	48 89 ee             	mov    %rbp,%rsi
    c49e:	48 89 da             	mov    %rbx,%rdx
    c4a1:	4c 89 ef             	mov    %r13,%rdi
    c4a4:	41 bc 16 00 00 00    	mov    $0x16,%r12d
    c4aa:	e8 91 d4 ff ff       	call   9940 <search_ema_range>
    c4af:	85 c0                	test   %eax,%eax
    c4b1:	78 1b                	js     c4ce <mm_modify_permissions_internal+0xbe>
    c4b3:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    c4b8:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    c4bd:	45 89 f0             	mov    %r14d,%r8d
    c4c0:	48 89 d9             	mov    %rbx,%rcx
    c4c3:	48 89 ea             	mov    %rbp,%rdx
    c4c6:	e8 f5 e5 ff ff       	call   aac0 <ema_modify_permissions_loop>
    c4cb:	41 89 c4             	mov    %eax,%r12d
    c4ce:	48 8b 3d 3b e5 01 00 	mov    0x1e53b(%rip),%rdi        # 2aa10 <mm_lock>
    c4d5:	e8 06 95 ff ff       	call   59e0 <sgx_mm_mutex_unlock>
    c4da:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    c4df:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    c4e6:	00 00 
    c4e8:	75 10                	jne    c4fa <mm_modify_permissions_internal+0xea>
    c4ea:	48 83 c4 20          	add    $0x20,%rsp
    c4ee:	44 89 e0             	mov    %r12d,%eax
    c4f1:	5b                   	pop    %rbx
    c4f2:	5d                   	pop    %rbp
    c4f3:	41 5c                	pop    %r12
    c4f5:	41 5d                	pop    %r13
    c4f7:	41 5e                	pop    %r14
    c4f9:	c3                   	ret    
    c4fa:	e8 a1 44 00 00       	call   109a0 <__stack_chk_fail>
    c4ff:	90                   	nop

000000000000c500 <sgx_mm_modify_permissions>:
    c500:	f3 0f 1e fa          	endbr64 
    c504:	48 8d 0d f5 da 00 00 	lea    0xdaf5(%rip),%rcx        # 1a000 <g_user_ema_root>
    c50b:	e9 00 ff ff ff       	jmp    c410 <mm_modify_permissions_internal>

000000000000c510 <sgx_mm_init>:
    c510:	f3 0f 1e fa          	endbr64 
    c514:	55                   	push   %rbp
    c515:	48 89 fd             	mov    %rdi,%rbp
    c518:	53                   	push   %rbx
    c519:	48 89 f3             	mov    %rsi,%rbx
    c51c:	48 83 ec 08          	sub    $0x8,%rsp
    c520:	e8 5b 94 ff ff       	call   5980 <sgx_mm_mutex_create>
    c525:	48 89 05 e4 e4 01 00 	mov    %rax,0x1e4e4(%rip)        # 2aa10 <mm_lock>
    c52c:	48 85 c0             	test   %rax,%rax
    c52f:	74 2f                	je     c560 <sgx_mm_init+0x50>
    c531:	48 8d 3d 98 f4 ff ff 	lea    -0xb68(%rip),%rdi        # b9d0 <sgx_mm_enclave_pfhandler>
    c538:	48 89 2d c9 e4 01 00 	mov    %rbp,0x1e4c9(%rip)        # 2aa08 <mm_user_base>
    c53f:	48 89 1d ba e4 01 00 	mov    %rbx,0x1e4ba(%rip)        # 2aa00 <mm_user_end>
    c546:	e8 d5 93 ff ff       	call   5920 <sgx_mm_register_pfhandler>
    c54b:	84 c0                	test   %al,%al
    c54d:	74 11                	je     c560 <sgx_mm_init+0x50>
    c54f:	48 83 c4 08          	add    $0x8,%rsp
    c553:	31 c0                	xor    %eax,%eax
    c555:	5b                   	pop    %rbx
    c556:	5d                   	pop    %rbp
    c557:	c3                   	ret    
    c558:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    c55f:	00 
    c560:	48 83 c4 08          	add    $0x8,%rsp
    c564:	b8 0e 00 00 00       	mov    $0xe,%eax
    c569:	5b                   	pop    %rbx
    c56a:	5d                   	pop    %rbp
    c56b:	c3                   	ret    
    c56c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000c570 <alloca>:
    c570:	f3 0f 1e fa          	endbr64 
    c574:	5a                   	pop    %rdx
    c575:	48 89 e1             	mov    %rsp,%rcx
    c578:	48 83 c7 0f          	add    $0xf,%rdi
    c57c:	48 83 e7 f0          	and    $0xfffffffffffffff0,%rdi
    c580:	48 29 fc             	sub    %rdi,%rsp
    c583:	48 89 e0             	mov    %rsp,%rax
    c586:	3e ff e2             	notrack jmp *%rdx
    c589:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000c590 <heap_init>:
    c590:	f3 0f 1e fa          	endbr64 
    c594:	48 89 f8             	mov    %rdi,%rax
    c597:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    c59d:	48 85 ff             	test   %rdi,%rdi
    c5a0:	75 0e                	jne    c5b0 <heap_init+0x20>
    c5a2:	44 89 c0             	mov    %r8d,%eax
    c5a5:	c3                   	ret    
    c5a6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    c5ad:	00 00 00 
    c5b0:	48 89 f7             	mov    %rsi,%rdi
    c5b3:	49 89 c1             	mov    %rax,%r9
    c5b6:	48 09 d7             	or     %rdx,%rdi
    c5b9:	41 81 e1 ff 0f 00 00 	and    $0xfff,%r9d
    c5c0:	81 e7 ff 0f 00 00    	and    $0xfff,%edi
    c5c6:	48 0b 3d 73 b8 00 00 	or     0xb873(%rip),%rdi        # 17e40 <heap_base>
    c5cd:	4c 09 cf             	or     %r9,%rdi
    c5d0:	75 d0                	jne    c5a2 <heap_init+0x12>
    c5d2:	45 31 c0             	xor    %r8d,%r8d
    c5d5:	48 89 05 64 b8 00 00 	mov    %rax,0xb864(%rip)        # 17e40 <heap_base>
    c5dc:	48 89 35 55 b8 00 00 	mov    %rsi,0xb855(%rip)        # 17e38 <heap_size>
    c5e3:	44 89 c0             	mov    %r8d,%eax
    c5e6:	48 89 15 3b b8 00 00 	mov    %rdx,0xb83b(%rip)        # 17e28 <heap_min_size>
    c5ed:	89 0d 3d b8 00 00    	mov    %ecx,0xb83d(%rip)        # 17e30 <is_edmm_supported>
    c5f3:	c3                   	ret    
    c5f4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    c5fb:	00 00 00 
    c5fe:	66 90                	xchg   %ax,%ax

000000000000c600 <sbrk>:
    c600:	f3 0f 1e fa          	endbr64 
    c604:	55                   	push   %rbp
    c605:	53                   	push   %rbx
    c606:	48 83 ec 08          	sub    $0x8,%rsp
    c60a:	48 8b 05 2f b8 00 00 	mov    0xb82f(%rip),%rax        # 17e40 <heap_base>
    c611:	48 85 c0             	test   %rax,%rax
    c614:	0f 84 e6 00 00 00    	je     c700 <sbrk+0x100>
    c61a:	48 8b 1d f7 e3 01 00 	mov    0x1e3f7(%rip),%rbx        # 2aa18 <heap_used.0>
    c621:	48 85 ff             	test   %rdi,%rdi
    c624:	0f 88 86 00 00 00    	js     c6b0 <sbrk+0xb0>
    c62a:	48 89 fa             	mov    %rdi,%rdx
    c62d:	48 01 da             	add    %rbx,%rdx
    c630:	0f 82 ca 00 00 00    	jb     c700 <sbrk+0x100>
    c636:	48 39 15 fb b7 00 00 	cmp    %rdx,0xb7fb(%rip)        # 17e38 <heap_size>
    c63d:	0f 82 bd 00 00 00    	jb     c700 <sbrk+0x100>
    c643:	48 8d 2c 18          	lea    (%rax,%rbx,1),%rbp
    c647:	48 85 ff             	test   %rdi,%rdi
    c64a:	74 53                	je     c69f <sbrk+0x9f>
    c64c:	48 8b 0d cd e3 01 00 	mov    0x1e3cd(%rip),%rcx        # 2aa20 <g_peak_heap_used>
    c653:	48 89 15 be e3 01 00 	mov    %rdx,0x1e3be(%rip)        # 2aa18 <heap_used.0>
    c65a:	48 39 d1             	cmp    %rdx,%rcx
    c65d:	48 0f 42 ca          	cmovb  %rdx,%rcx
    c661:	48 89 0d b8 e3 01 00 	mov    %rcx,0x1e3b8(%rip)        # 2aa20 <g_peak_heap_used>
    c668:	8b 0d c2 b7 00 00    	mov    0xb7c2(%rip),%ecx        # 17e30 <is_edmm_supported>
    c66e:	85 c9                	test   %ecx,%ecx
    c670:	74 2d                	je     c69f <sbrk+0x9f>
    c672:	48 8b 0d af b7 00 00 	mov    0xb7af(%rip),%rcx        # 17e28 <heap_min_size>
    c679:	48 39 d1             	cmp    %rdx,%rcx
    c67c:	73 21                	jae    c69f <sbrk+0x9f>
    c67e:	49 89 e8             	mov    %rbp,%r8
    c681:	48 39 d9             	cmp    %rbx,%rcx
    c684:	72 0a                	jb     c690 <sbrk+0x90>
    c686:	48 29 ca             	sub    %rcx,%rdx
    c689:	4c 8d 04 08          	lea    (%rax,%rcx,1),%r8
    c68d:	48 89 d7             	mov    %rdx,%rdi
    c690:	48 89 fe             	mov    %rdi,%rsi
    c693:	4c 89 c7             	mov    %r8,%rdi
    c696:	e8 d5 f2 ff ff       	call   b970 <mm_commit>
    c69b:	85 c0                	test   %eax,%eax
    c69d:	75 56                	jne    c6f5 <sbrk+0xf5>
    c69f:	48 83 c4 08          	add    $0x8,%rsp
    c6a3:	48 89 e8             	mov    %rbp,%rax
    c6a6:	5b                   	pop    %rbx
    c6a7:	5d                   	pop    %rbp
    c6a8:	c3                   	ret    
    c6a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c6b0:	48 89 fe             	mov    %rdi,%rsi
    c6b3:	48 f7 de             	neg    %rsi
    c6b6:	48 39 f3             	cmp    %rsi,%rbx
    c6b9:	72 45                	jb     c700 <sbrk+0x100>
    c6bb:	44 8b 05 6e b7 00 00 	mov    0xb76e(%rip),%r8d        # 17e30 <is_edmm_supported>
    c6c2:	48 01 df             	add    %rbx,%rdi
    c6c5:	48 89 3d 4c e3 01 00 	mov    %rdi,0x1e34c(%rip)        # 2aa18 <heap_used.0>
    c6cc:	48 8d 2c 38          	lea    (%rax,%rdi,1),%rbp
    c6d0:	45 85 c0             	test   %r8d,%r8d
    c6d3:	74 ca                	je     c69f <sbrk+0x9f>
    c6d5:	48 8b 15 4c b7 00 00 	mov    0xb74c(%rip),%rdx        # 17e28 <heap_min_size>
    c6dc:	48 39 da             	cmp    %rbx,%rdx
    c6df:	73 be                	jae    c69f <sbrk+0x9f>
    c6e1:	48 89 e9             	mov    %rbp,%rcx
    c6e4:	48 39 fa             	cmp    %rdi,%rdx
    c6e7:	73 27                	jae    c710 <sbrk+0x110>
    c6e9:	48 89 cf             	mov    %rcx,%rdi
    c6ec:	e8 8f f2 ff ff       	call   b980 <mm_uncommit>
    c6f1:	85 c0                	test   %eax,%eax
    c6f3:	74 aa                	je     c69f <sbrk+0x9f>
    c6f5:	48 89 1d 1c e3 01 00 	mov    %rbx,0x1e31c(%rip)        # 2aa18 <heap_used.0>
    c6fc:	0f 1f 40 00          	nopl   0x0(%rax)
    c700:	48 c7 c5 ff ff ff ff 	mov    $0xffffffffffffffff,%rbp
    c707:	eb 96                	jmp    c69f <sbrk+0x9f>
    c709:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c710:	48 89 de             	mov    %rbx,%rsi
    c713:	48 8d 0c 10          	lea    (%rax,%rdx,1),%rcx
    c717:	48 29 d6             	sub    %rdx,%rsi
    c71a:	eb cd                	jmp    c6e9 <sbrk+0xe9>
    c71c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000c720 <sgx_spin_lock>:
    c720:	f3 0f 1e fa          	endbr64 
    c724:	48 83 ec 18          	sub    $0x18,%rsp
    c728:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c72f:	00 00 
    c731:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    c736:	b8 01 00 00 00       	mov    $0x1,%eax
    c73b:	f0 87 07             	lock xchg %eax,(%rdi)
    c73e:	89 44 24 04          	mov    %eax,0x4(%rsp)
    c742:	8b 54 24 04          	mov    0x4(%rsp),%edx
    c746:	85 d2                	test   %edx,%edx
    c748:	74 48                	je     c792 <sgx_spin_lock+0x72>
    c74a:	48 89 f9             	mov    %rdi,%rcx
    c74d:	be 01 00 00 00       	mov    $0x1,%esi
    c752:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    c758:	ba 02 00 00 00       	mov    $0x2,%edx
    c75d:	0f 1f 00             	nopl   (%rax)
    c760:	85 d2                	test   %edx,%edx
    c762:	7e 0d                	jle    c771 <sgx_spin_lock+0x51>
    c764:	31 c0                	xor    %eax,%eax
    c766:	f3 90                	pause  
    c768:	f3 90                	pause  
    c76a:	83 c0 02             	add    $0x2,%eax
    c76d:	39 c2                	cmp    %eax,%edx
    c76f:	75 f5                	jne    c766 <sgx_spin_lock+0x46>
    c771:	b8 00 04 00 00       	mov    $0x400,%eax
    c776:	01 d2                	add    %edx,%edx
    c778:	39 c2                	cmp    %eax,%edx
    c77a:	0f 4f d0             	cmovg  %eax,%edx
    c77d:	8b 01                	mov    (%rcx),%eax
    c77f:	85 c0                	test   %eax,%eax
    c781:	75 dd                	jne    c760 <sgx_spin_lock+0x40>
    c783:	f0 87 31             	lock xchg %esi,(%rcx)
    c786:	89 74 24 04          	mov    %esi,0x4(%rsp)
    c78a:	8b 44 24 04          	mov    0x4(%rsp),%eax
    c78e:	85 c0                	test   %eax,%eax
    c790:	75 c6                	jne    c758 <sgx_spin_lock+0x38>
    c792:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    c797:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    c79e:	00 00 
    c7a0:	75 07                	jne    c7a9 <sgx_spin_lock+0x89>
    c7a2:	31 c0                	xor    %eax,%eax
    c7a4:	48 83 c4 18          	add    $0x18,%rsp
    c7a8:	c3                   	ret    
    c7a9:	e8 f2 41 00 00       	call   109a0 <__stack_chk_fail>
    c7ae:	66 90                	xchg   %ax,%ax

000000000000c7b0 <sgx_spin_unlock>:
    c7b0:	f3 0f 1e fa          	endbr64 
    c7b4:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
    c7ba:	31 c0                	xor    %eax,%eax
    c7bc:	c3                   	ret    
    c7bd:	0f 1f 00             	nopl   (%rax)

000000000000c7c0 <dispose_chunk>:
    c7c0:	55                   	push   %rbp
    c7c1:	48 89 f0             	mov    %rsi,%rax
    c7c4:	48 01 d6             	add    %rdx,%rsi
    c7c7:	53                   	push   %rbx
    c7c8:	48 83 ec 08          	sub    $0x8,%rsp
    c7cc:	48 8b 48 08          	mov    0x8(%rax),%rcx
    c7d0:	f6 c1 01             	test   $0x1,%cl
    c7d3:	0f 85 f7 00 00 00    	jne    c8d0 <dispose_chunk+0x110>
    c7d9:	83 e1 03             	and    $0x3,%ecx
    c7dc:	4c 8b 10             	mov    (%rax),%r10
    c7df:	0f 84 64 01 00 00    	je     c949 <dispose_chunk+0x189>
    c7e5:	4c 8b 47 18          	mov    0x18(%rdi),%r8
    c7e9:	4c 29 d0             	sub    %r10,%rax
    c7ec:	4c 01 d2             	add    %r10,%rdx
    c7ef:	4c 39 c0             	cmp    %r8,%rax
    c7f2:	0f 82 38 03 00 00    	jb     cb30 <dispose_chunk+0x370>
    c7f8:	48 39 47 20          	cmp    %rax,0x20(%rdi)
    c7fc:	0f 84 2e 04 00 00    	je     cc30 <dispose_chunk+0x470>
    c802:	4c 89 d1             	mov    %r10,%rcx
    c805:	4c 8b 48 18          	mov    0x18(%rax),%r9
    c809:	48 c1 e9 03          	shr    $0x3,%rcx
    c80d:	49 81 fa ff 00 00 00 	cmp    $0xff,%r10
    c814:	0f 86 46 03 00 00    	jbe    cb60 <dispose_chunk+0x3a0>
    c81a:	48 8b 58 30          	mov    0x30(%rax),%rbx
    c81e:	49 39 c1             	cmp    %rax,%r9
    c821:	0f 84 89 05 00 00    	je     cdb0 <dispose_chunk+0x5f0>
    c827:	48 8b 48 10          	mov    0x10(%rax),%rcx
    c82b:	4c 39 c1             	cmp    %r8,%rcx
    c82e:	0f 82 fc 02 00 00    	jb     cb30 <dispose_chunk+0x370>
    c834:	48 39 41 18          	cmp    %rax,0x18(%rcx)
    c838:	0f 85 f2 02 00 00    	jne    cb30 <dispose_chunk+0x370>
    c83e:	49 39 41 10          	cmp    %rax,0x10(%r9)
    c842:	0f 85 e8 02 00 00    	jne    cb30 <dispose_chunk+0x370>
    c848:	4c 89 49 18          	mov    %r9,0x18(%rcx)
    c84c:	49 89 49 10          	mov    %rcx,0x10(%r9)
    c850:	48 85 db             	test   %rbx,%rbx
    c853:	74 7f                	je     c8d4 <dispose_chunk+0x114>
    c855:	44 8b 50 38          	mov    0x38(%rax),%r10d
    c859:	4c 89 d1             	mov    %r10,%rcx
    c85c:	4d 8d 5a 4a          	lea    0x4a(%r10),%r11
    c860:	4a 39 84 d7 58 02 00 	cmp    %rax,0x258(%rdi,%r10,8)
    c867:	00 
    c868:	0f 84 32 06 00 00    	je     cea0 <dispose_chunk+0x6e0>
    c86e:	4c 39 c3             	cmp    %r8,%rbx
    c871:	0f 82 b9 02 00 00    	jb     cb30 <dispose_chunk+0x370>
    c877:	48 39 43 20          	cmp    %rax,0x20(%rbx)
    c87b:	0f 84 9c 06 00 00    	je     cf1d <dispose_chunk+0x75d>
    c881:	4c 89 4b 28          	mov    %r9,0x28(%rbx)
    c885:	4d 85 c9             	test   %r9,%r9
    c888:	74 4a                	je     c8d4 <dispose_chunk+0x114>
    c88a:	4d 39 c1             	cmp    %r8,%r9
    c88d:	0f 82 9d 02 00 00    	jb     cb30 <dispose_chunk+0x370>
    c893:	48 8b 48 20          	mov    0x20(%rax),%rcx
    c897:	49 89 59 30          	mov    %rbx,0x30(%r9)
    c89b:	48 85 c9             	test   %rcx,%rcx
    c89e:	74 11                	je     c8b1 <dispose_chunk+0xf1>
    c8a0:	4c 39 c1             	cmp    %r8,%rcx
    c8a3:	0f 82 87 02 00 00    	jb     cb30 <dispose_chunk+0x370>
    c8a9:	49 89 49 20          	mov    %rcx,0x20(%r9)
    c8ad:	4c 89 49 30          	mov    %r9,0x30(%rcx)
    c8b1:	48 8b 48 28          	mov    0x28(%rax),%rcx
    c8b5:	48 85 c9             	test   %rcx,%rcx
    c8b8:	74 1a                	je     c8d4 <dispose_chunk+0x114>
    c8ba:	4c 39 c1             	cmp    %r8,%rcx
    c8bd:	0f 82 6d 02 00 00    	jb     cb30 <dispose_chunk+0x370>
    c8c3:	49 89 49 28          	mov    %rcx,0x28(%r9)
    c8c7:	4c 89 49 30          	mov    %r9,0x30(%rcx)
    c8cb:	eb 07                	jmp    c8d4 <dispose_chunk+0x114>
    c8cd:	0f 1f 00             	nopl   (%rax)
    c8d0:	4c 8b 47 18          	mov    0x18(%rdi),%r8
    c8d4:	4c 39 c6             	cmp    %r8,%rsi
    c8d7:	0f 82 53 02 00 00    	jb     cb30 <dispose_chunk+0x370>
    c8dd:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    c8e1:	f6 c1 02             	test   $0x2,%cl
    c8e4:	74 6a                	je     c950 <dispose_chunk+0x190>
    c8e6:	48 83 e1 fe          	and    $0xfffffffffffffffe,%rcx
    c8ea:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
    c8ee:	48 89 d1             	mov    %rdx,%rcx
    c8f1:	48 83 c9 01          	or     $0x1,%rcx
    c8f5:	48 89 48 08          	mov    %rcx,0x8(%rax)
    c8f9:	48 89 14 10          	mov    %rdx,(%rax,%rdx,1)
    c8fd:	48 89 d1             	mov    %rdx,%rcx
    c900:	48 c1 e9 03          	shr    $0x3,%rcx
    c904:	48 81 fa ff 00 00 00 	cmp    $0xff,%rdx
    c90b:	0f 87 57 01 00 00    	ja     ca68 <dispose_chunk+0x2a8>
    c911:	8d 54 09 09          	lea    0x9(%rcx,%rcx,1),%edx
    c915:	44 8b 0f             	mov    (%rdi),%r9d
    c918:	48 8d 34 d7          	lea    (%rdi,%rdx,8),%rsi
    c91c:	ba 01 00 00 00       	mov    $0x1,%edx
    c921:	d3 e2                	shl    %cl,%edx
    c923:	41 85 d1             	test   %edx,%r9d
    c926:	0f 84 24 02 00 00    	je     cb50 <dispose_chunk+0x390>
    c92c:	48 8b 56 10          	mov    0x10(%rsi),%rdx
    c930:	4c 39 c2             	cmp    %r8,%rdx
    c933:	0f 82 f7 01 00 00    	jb     cb30 <dispose_chunk+0x370>
    c939:	48 89 46 10          	mov    %rax,0x10(%rsi)
    c93d:	48 89 42 18          	mov    %rax,0x18(%rdx)
    c941:	48 89 50 10          	mov    %rdx,0x10(%rax)
    c945:	48 89 70 18          	mov    %rsi,0x18(%rax)
    c949:	48 83 c4 08          	add    $0x8,%rsp
    c94d:	5b                   	pop    %rbx
    c94e:	5d                   	pop    %rbp
    c94f:	c3                   	ret    
    c950:	48 8b 5f 20          	mov    0x20(%rdi),%rbx
    c954:	48 39 77 28          	cmp    %rsi,0x28(%rdi)
    c958:	0f 84 22 03 00 00    	je     cc80 <dispose_chunk+0x4c0>
    c95e:	48 39 f3             	cmp    %rsi,%rbx
    c961:	0f 84 89 03 00 00    	je     ccf0 <dispose_chunk+0x530>
    c967:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    c96b:	4c 8b 4e 18          	mov    0x18(%rsi),%r9
    c96f:	49 89 cb             	mov    %rcx,%r11
    c972:	48 01 ca             	add    %rcx,%rdx
    c975:	49 c1 eb 03          	shr    $0x3,%r11
    c979:	48 81 f9 f8 00 00 00 	cmp    $0xf8,%rcx
    c980:	0f 86 7a 01 00 00    	jbe    cb00 <dispose_chunk+0x340>
    c986:	48 8b 6e 30          	mov    0x30(%rsi),%rbp
    c98a:	49 39 f1             	cmp    %rsi,%r9
    c98d:	0f 84 7d 03 00 00    	je     cd10 <dispose_chunk+0x550>
    c993:	48 8b 4e 10          	mov    0x10(%rsi),%rcx
    c997:	4c 39 c1             	cmp    %r8,%rcx
    c99a:	0f 82 90 01 00 00    	jb     cb30 <dispose_chunk+0x370>
    c9a0:	48 39 71 18          	cmp    %rsi,0x18(%rcx)
    c9a4:	0f 85 86 01 00 00    	jne    cb30 <dispose_chunk+0x370>
    c9aa:	49 39 71 10          	cmp    %rsi,0x10(%r9)
    c9ae:	0f 85 7c 01 00 00    	jne    cb30 <dispose_chunk+0x370>
    c9b4:	4c 89 49 18          	mov    %r9,0x18(%rcx)
    c9b8:	49 89 49 10          	mov    %rcx,0x10(%r9)
    c9bc:	48 85 ed             	test   %rbp,%rbp
    c9bf:	74 7f                	je     ca40 <dispose_chunk+0x280>
    c9c1:	44 8b 56 38          	mov    0x38(%rsi),%r10d
    c9c5:	4c 89 d1             	mov    %r10,%rcx
    c9c8:	4d 8d 5a 4a          	lea    0x4a(%r10),%r11
    c9cc:	4a 39 b4 d7 58 02 00 	cmp    %rsi,0x258(%rdi,%r10,8)
    c9d3:	00 
    c9d4:	0f 84 76 04 00 00    	je     ce50 <dispose_chunk+0x690>
    c9da:	4c 39 c5             	cmp    %r8,%rbp
    c9dd:	0f 82 4d 01 00 00    	jb     cb30 <dispose_chunk+0x370>
    c9e3:	48 39 75 20          	cmp    %rsi,0x20(%rbp)
    c9e7:	0f 84 27 05 00 00    	je     cf14 <dispose_chunk+0x754>
    c9ed:	4c 89 4d 28          	mov    %r9,0x28(%rbp)
    c9f1:	4d 85 c9             	test   %r9,%r9
    c9f4:	74 4a                	je     ca40 <dispose_chunk+0x280>
    c9f6:	4d 39 c1             	cmp    %r8,%r9
    c9f9:	0f 82 31 01 00 00    	jb     cb30 <dispose_chunk+0x370>
    c9ff:	48 8b 4e 20          	mov    0x20(%rsi),%rcx
    ca03:	49 89 69 30          	mov    %rbp,0x30(%r9)
    ca07:	48 85 c9             	test   %rcx,%rcx
    ca0a:	74 11                	je     ca1d <dispose_chunk+0x25d>
    ca0c:	4c 39 c1             	cmp    %r8,%rcx
    ca0f:	0f 82 1b 01 00 00    	jb     cb30 <dispose_chunk+0x370>
    ca15:	49 89 49 20          	mov    %rcx,0x20(%r9)
    ca19:	4c 89 49 30          	mov    %r9,0x30(%rcx)
    ca1d:	48 8b 4e 28          	mov    0x28(%rsi),%rcx
    ca21:	48 85 c9             	test   %rcx,%rcx
    ca24:	74 1a                	je     ca40 <dispose_chunk+0x280>
    ca26:	4c 39 c1             	cmp    %r8,%rcx
    ca29:	0f 82 01 01 00 00    	jb     cb30 <dispose_chunk+0x370>
    ca2f:	49 89 49 28          	mov    %rcx,0x28(%r9)
    ca33:	4c 89 49 30          	mov    %r9,0x30(%rcx)
    ca37:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    ca3e:	00 00 
    ca40:	48 89 d1             	mov    %rdx,%rcx
    ca43:	48 83 c9 01          	or     $0x1,%rcx
    ca47:	48 89 48 08          	mov    %rcx,0x8(%rax)
    ca4b:	48 89 14 10          	mov    %rdx,(%rax,%rdx,1)
    ca4f:	48 39 d8             	cmp    %rbx,%rax
    ca52:	0f 85 a5 fe ff ff    	jne    c8fd <dispose_chunk+0x13d>
    ca58:	48 89 57 08          	mov    %rdx,0x8(%rdi)
    ca5c:	e9 e8 fe ff ff       	jmp    c949 <dispose_chunk+0x189>
    ca61:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    ca68:	48 89 d6             	mov    %rdx,%rsi
    ca6b:	48 c1 ee 08          	shr    $0x8,%rsi
    ca6f:	89 f1                	mov    %esi,%ecx
    ca71:	85 f6                	test   %esi,%esi
    ca73:	0f 84 bf 00 00 00    	je     cb38 <dispose_chunk+0x378>
    ca79:	81 fe ff ff 00 00    	cmp    $0xffff,%esi
    ca7f:	0f 87 e3 01 00 00    	ja     cc68 <dispose_chunk+0x4a8>
    ca85:	0f bd f1             	bsr    %ecx,%esi
    ca88:	b9 26 00 00 00       	mov    $0x26,%ecx
    ca8d:	48 89 d3             	mov    %rdx,%rbx
    ca90:	41 b9 1f 00 00 00    	mov    $0x1f,%r9d
    ca96:	83 f6 1f             	xor    $0x1f,%esi
    ca99:	29 f1                	sub    %esi,%ecx
    ca9b:	41 29 f1             	sub    %esi,%r9d
    ca9e:	be 01 00 00 00       	mov    $0x1,%esi
    caa3:	48 d3 eb             	shr    %cl,%rbx
    caa6:	48 89 d9             	mov    %rbx,%rcx
    caa9:	83 e1 01             	and    $0x1,%ecx
    caac:	42 8d 0c 49          	lea    (%rcx,%r9,2),%ecx
    cab0:	44 8d 49 4b          	lea    0x4b(%rcx),%r9d
    cab4:	d3 e6                	shl    %cl,%esi
    cab6:	49 c1 e1 03          	shl    $0x3,%r9
    caba:	44 8b 57 04          	mov    0x4(%rdi),%r10d
    cabe:	66 48 0f 6e c8       	movq   %rax,%xmm1
    cac3:	66 0f ef c0          	pxor   %xmm0,%xmm0
    cac7:	89 48 38             	mov    %ecx,0x38(%rax)
    caca:	66 0f 6c c9          	punpcklqdq %xmm1,%xmm1
    cace:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    cad2:	44 85 d6             	test   %r10d,%esi
    cad5:	0f 85 c5 00 00 00    	jne    cba0 <dispose_chunk+0x3e0>
    cadb:	44 09 d6             	or     %r10d,%esi
    cade:	49 01 f9             	add    %rdi,%r9
    cae1:	89 77 04             	mov    %esi,0x4(%rdi)
    cae4:	48 89 84 cf 58 02 00 	mov    %rax,0x258(%rdi,%rcx,8)
    caeb:	00 
    caec:	4c 89 48 30          	mov    %r9,0x30(%rax)
    caf0:	0f 11 48 10          	movups %xmm1,0x10(%rax)
    caf4:	48 83 c4 08          	add    $0x8,%rsp
    caf8:	5b                   	pop    %rbx
    caf9:	5d                   	pop    %rbp
    cafa:	c3                   	ret    
    cafb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    cb00:	43 8d 4c 1b 09       	lea    0x9(%r11,%r11,1),%ecx
    cb05:	4c 8b 56 10          	mov    0x10(%rsi),%r10
    cb09:	48 8d 0c cf          	lea    (%rdi,%rcx,8),%rcx
    cb0d:	4c 39 d1             	cmp    %r10,%rcx
    cb10:	0f 85 57 03 00 00    	jne    ce6d <dispose_chunk+0x6ad>
    cb16:	4d 39 d1             	cmp    %r10,%r9
    cb19:	0f 84 79 02 00 00    	je     cd98 <dispose_chunk+0x5d8>
    cb1f:	4d 39 c1             	cmp    %r8,%r9
    cb22:	0f 83 ae 01 00 00    	jae    ccd6 <dispose_chunk+0x516>
    cb28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    cb2f:	00 
    cb30:	e8 02 5a 00 00       	call   12537 <abort>
    cb35:	0f 1f 00             	nopl   (%rax)
    cb38:	be 01 00 00 00       	mov    $0x1,%esi
    cb3d:	41 b9 58 02 00 00    	mov    $0x258,%r9d
    cb43:	e9 72 ff ff ff       	jmp    caba <dispose_chunk+0x2fa>
    cb48:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    cb4f:	00 
    cb50:	41 09 d1             	or     %edx,%r9d
    cb53:	48 89 f2             	mov    %rsi,%rdx
    cb56:	44 89 0f             	mov    %r9d,(%rdi)
    cb59:	e9 db fd ff ff       	jmp    c939 <dispose_chunk+0x179>
    cb5e:	66 90                	xchg   %ax,%ax
    cb60:	44 8d 5c 09 09       	lea    0x9(%rcx,%rcx,1),%r11d
    cb65:	4c 8b 50 10          	mov    0x10(%rax),%r10
    cb69:	4e 8d 1c df          	lea    (%rdi,%r11,8),%r11
    cb6d:	4d 39 d3             	cmp    %r10,%r11
    cb70:	0f 85 4a 03 00 00    	jne    cec0 <dispose_chunk+0x700>
    cb76:	4d 39 d1             	cmp    %r10,%r9
    cb79:	0f 84 b9 02 00 00    	je     ce38 <dispose_chunk+0x678>
    cb7f:	4d 39 c1             	cmp    %r8,%r9
    cb82:	72 ac                	jb     cb30 <dispose_chunk+0x370>
    cb84:	49 39 41 10          	cmp    %rax,0x10(%r9)
    cb88:	75 a6                	jne    cb30 <dispose_chunk+0x370>
    cb8a:	4d 89 4a 18          	mov    %r9,0x18(%r10)
    cb8e:	4d 89 51 10          	mov    %r10,0x10(%r9)
    cb92:	e9 3d fd ff ff       	jmp    c8d4 <dispose_chunk+0x114>
    cb97:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    cb9e:	00 00 
    cba0:	89 ce                	mov    %ecx,%esi
    cba2:	48 8b b4 f7 58 02 00 	mov    0x258(%rdi,%rsi,8),%rsi
    cba9:	00 
    cbaa:	48 89 d7             	mov    %rdx,%rdi
    cbad:	83 f9 1f             	cmp    $0x1f,%ecx
    cbb0:	74 34                	je     cbe6 <dispose_chunk+0x426>
    cbb2:	89 cf                	mov    %ecx,%edi
    cbb4:	b9 39 00 00 00       	mov    $0x39,%ecx
    cbb9:	d1 ef                	shr    %edi
    cbbb:	29 f9                	sub    %edi,%ecx
    cbbd:	48 89 d7             	mov    %rdx,%rdi
    cbc0:	48 d3 e7             	shl    %cl,%rdi
    cbc3:	eb 21                	jmp    cbe6 <dispose_chunk+0x426>
    cbc5:	0f 1f 00             	nopl   (%rax)
    cbc8:	48 89 f9             	mov    %rdi,%rcx
    cbcb:	48 01 ff             	add    %rdi,%rdi
    cbce:	48 c1 e9 3f          	shr    $0x3f,%rcx
    cbd2:	48 83 c1 04          	add    $0x4,%rcx
    cbd6:	4c 8b 0c ce          	mov    (%rsi,%rcx,8),%r9
    cbda:	4d 85 c9             	test   %r9,%r9
    cbdd:	0f 84 d5 00 00 00    	je     ccb8 <dispose_chunk+0x4f8>
    cbe3:	4c 89 ce             	mov    %r9,%rsi
    cbe6:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    cbea:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    cbee:	48 39 d1             	cmp    %rdx,%rcx
    cbf1:	75 d5                	jne    cbc8 <dispose_chunk+0x408>
    cbf3:	48 8b 56 10          	mov    0x10(%rsi),%rdx
    cbf7:	66 48 0f 6e d6       	movq   %rsi,%xmm2
    cbfc:	66 48 0f 6e c2       	movq   %rdx,%xmm0
    cc01:	66 0f 6c c2          	punpcklqdq %xmm2,%xmm0
    cc05:	4c 39 c6             	cmp    %r8,%rsi
    cc08:	0f 82 22 ff ff ff    	jb     cb30 <dispose_chunk+0x370>
    cc0e:	4c 39 c2             	cmp    %r8,%rdx
    cc11:	0f 82 19 ff ff ff    	jb     cb30 <dispose_chunk+0x370>
    cc17:	48 89 42 18          	mov    %rax,0x18(%rdx)
    cc1b:	48 89 46 10          	mov    %rax,0x10(%rsi)
    cc1f:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
    cc26:	00 
    cc27:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    cc2b:	e9 19 fd ff ff       	jmp    c949 <dispose_chunk+0x189>
    cc30:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    cc34:	49 89 c9             	mov    %rcx,%r9
    cc37:	49 f7 d1             	not    %r9
    cc3a:	41 83 e1 03          	and    $0x3,%r9d
    cc3e:	0f 85 90 fc ff ff    	jne    c8d4 <dispose_chunk+0x114>
    cc44:	48 83 e1 fe          	and    $0xfffffffffffffffe,%rcx
    cc48:	48 89 57 08          	mov    %rdx,0x8(%rdi)
    cc4c:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
    cc50:	48 89 d1             	mov    %rdx,%rcx
    cc53:	48 83 c9 01          	or     $0x1,%rcx
    cc57:	48 89 48 08          	mov    %rcx,0x8(%rax)
    cc5b:	48 89 16             	mov    %rdx,(%rsi)
    cc5e:	e9 e6 fc ff ff       	jmp    c949 <dispose_chunk+0x189>
    cc63:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    cc68:	be 00 00 00 80       	mov    $0x80000000,%esi
    cc6d:	41 b9 50 03 00 00    	mov    $0x350,%r9d
    cc73:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    cc78:	e9 3d fe ff ff       	jmp    caba <dispose_chunk+0x2fa>
    cc7d:	0f 1f 00             	nopl   (%rax)
    cc80:	48 03 57 10          	add    0x10(%rdi),%rdx
    cc84:	48 89 47 28          	mov    %rax,0x28(%rdi)
    cc88:	48 89 57 10          	mov    %rdx,0x10(%rdi)
    cc8c:	48 83 ca 01          	or     $0x1,%rdx
    cc90:	48 89 50 08          	mov    %rdx,0x8(%rax)
    cc94:	48 39 d8             	cmp    %rbx,%rax
    cc97:	0f 85 ac fc ff ff    	jne    c949 <dispose_chunk+0x189>
    cc9d:	48 c7 47 20 00 00 00 	movq   $0x0,0x20(%rdi)
    cca4:	00 
    cca5:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
    ccac:	00 
    ccad:	e9 97 fc ff ff       	jmp    c949 <dispose_chunk+0x189>
    ccb2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    ccb8:	48 8d 14 ce          	lea    (%rsi,%rcx,8),%rdx
    ccbc:	4c 39 c2             	cmp    %r8,%rdx
    ccbf:	0f 82 6b fe ff ff    	jb     cb30 <dispose_chunk+0x370>
    ccc5:	48 89 04 ce          	mov    %rax,(%rsi,%rcx,8)
    ccc9:	48 89 70 30          	mov    %rsi,0x30(%rax)
    cccd:	0f 11 48 10          	movups %xmm1,0x10(%rax)
    ccd1:	e9 73 fc ff ff       	jmp    c949 <dispose_chunk+0x189>
    ccd6:	49 39 71 10          	cmp    %rsi,0x10(%r9)
    ccda:	0f 85 50 fe ff ff    	jne    cb30 <dispose_chunk+0x370>
    cce0:	4d 89 4a 18          	mov    %r9,0x18(%r10)
    cce4:	4d 89 51 10          	mov    %r10,0x10(%r9)
    cce8:	e9 53 fd ff ff       	jmp    ca40 <dispose_chunk+0x280>
    cced:	0f 1f 00             	nopl   (%rax)
    ccf0:	48 03 57 08          	add    0x8(%rdi),%rdx
    ccf4:	48 89 47 20          	mov    %rax,0x20(%rdi)
    ccf8:	48 89 d1             	mov    %rdx,%rcx
    ccfb:	48 89 57 08          	mov    %rdx,0x8(%rdi)
    ccff:	48 83 c9 01          	or     $0x1,%rcx
    cd03:	48 89 48 08          	mov    %rcx,0x8(%rax)
    cd07:	48 89 14 10          	mov    %rdx,(%rax,%rdx,1)
    cd0b:	e9 39 fc ff ff       	jmp    c949 <dispose_chunk+0x189>
    cd10:	48 8b 4e 28          	mov    0x28(%rsi),%rcx
    cd14:	4c 8d 56 28          	lea    0x28(%rsi),%r10
    cd18:	48 85 c9             	test   %rcx,%rcx
    cd1b:	0f 84 cf 01 00 00    	je     cef0 <dispose_chunk+0x730>
    cd21:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    cd28:	4d 89 d3             	mov    %r10,%r11
    cd2b:	49 89 c9             	mov    %rcx,%r9
    cd2e:	4c 8d 51 28          	lea    0x28(%rcx),%r10
    cd32:	48 8b 49 28          	mov    0x28(%rcx),%rcx
    cd36:	48 85 c9             	test   %rcx,%rcx
    cd39:	75 ed                	jne    cd28 <dispose_chunk+0x568>
    cd3b:	49 8b 49 20          	mov    0x20(%r9),%rcx
    cd3f:	4d 8d 51 20          	lea    0x20(%r9),%r10
    cd43:	48 85 c9             	test   %rcx,%rcx
    cd46:	75 e0                	jne    cd28 <dispose_chunk+0x568>
    cd48:	4d 39 c3             	cmp    %r8,%r11
    cd4b:	0f 82 df fd ff ff    	jb     cb30 <dispose_chunk+0x370>
    cd51:	49 c7 03 00 00 00 00 	movq   $0x0,(%r11)
    cd58:	48 85 ed             	test   %rbp,%rbp
    cd5b:	0f 84 df fc ff ff    	je     ca40 <dispose_chunk+0x280>
    cd61:	8b 4e 38             	mov    0x38(%rsi),%ecx
    cd64:	4c 8d 51 4a          	lea    0x4a(%rcx),%r10
    cd68:	48 39 b4 cf 58 02 00 	cmp    %rsi,0x258(%rdi,%rcx,8)
    cd6f:	00 
    cd70:	0f 84 b0 01 00 00    	je     cf26 <dispose_chunk+0x766>
    cd76:	4c 39 c5             	cmp    %r8,%rbp
    cd79:	0f 82 b1 fd ff ff    	jb     cb30 <dispose_chunk+0x370>
    cd7f:	48 39 75 20          	cmp    %rsi,0x20(%rbp)
    cd83:	0f 84 b1 01 00 00    	je     cf3a <dispose_chunk+0x77a>
    cd89:	4c 89 4d 28          	mov    %r9,0x28(%rbp)
    cd8d:	e9 64 fc ff ff       	jmp    c9f6 <dispose_chunk+0x236>
    cd92:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    cd98:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    cd9d:	44 89 d9             	mov    %r11d,%ecx
    cda0:	d3 c6                	rol    %cl,%esi
    cda2:	21 37                	and    %esi,(%rdi)
    cda4:	e9 97 fc ff ff       	jmp    ca40 <dispose_chunk+0x280>
    cda9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    cdb0:	48 8b 48 28          	mov    0x28(%rax),%rcx
    cdb4:	4c 8d 50 28          	lea    0x28(%rax),%r10
    cdb8:	48 85 c9             	test   %rcx,%rcx
    cdbb:	0f 84 41 01 00 00    	je     cf02 <dispose_chunk+0x742>
    cdc1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    cdc8:	4d 89 d3             	mov    %r10,%r11
    cdcb:	49 89 c9             	mov    %rcx,%r9
    cdce:	4c 8d 51 28          	lea    0x28(%rcx),%r10
    cdd2:	48 8b 49 28          	mov    0x28(%rcx),%rcx
    cdd6:	48 85 c9             	test   %rcx,%rcx
    cdd9:	75 ed                	jne    cdc8 <dispose_chunk+0x608>
    cddb:	49 8b 49 20          	mov    0x20(%r9),%rcx
    cddf:	4d 8d 51 20          	lea    0x20(%r9),%r10
    cde3:	48 85 c9             	test   %rcx,%rcx
    cde6:	75 e0                	jne    cdc8 <dispose_chunk+0x608>
    cde8:	4d 39 c3             	cmp    %r8,%r11
    cdeb:	0f 82 3f fd ff ff    	jb     cb30 <dispose_chunk+0x370>
    cdf1:	49 c7 03 00 00 00 00 	movq   $0x0,(%r11)
    cdf8:	48 85 db             	test   %rbx,%rbx
    cdfb:	0f 84 d3 fa ff ff    	je     c8d4 <dispose_chunk+0x114>
    ce01:	8b 48 38             	mov    0x38(%rax),%ecx
    ce04:	4c 8d 51 4a          	lea    0x4a(%rcx),%r10
    ce08:	48 39 84 cf 58 02 00 	cmp    %rax,0x258(%rdi,%rcx,8)
    ce0f:	00 
    ce10:	0f 84 1a 01 00 00    	je     cf30 <dispose_chunk+0x770>
    ce16:	4c 39 c3             	cmp    %r8,%rbx
    ce19:	0f 82 11 fd ff ff    	jb     cb30 <dispose_chunk+0x370>
    ce1f:	48 39 43 20          	cmp    %rax,0x20(%rbx)
    ce23:	0f 84 1a 01 00 00    	je     cf43 <dispose_chunk+0x783>
    ce29:	4c 89 4b 28          	mov    %r9,0x28(%rbx)
    ce2d:	e9 58 fa ff ff       	jmp    c88a <dispose_chunk+0xca>
    ce32:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    ce38:	41 b9 fe ff ff ff    	mov    $0xfffffffe,%r9d
    ce3e:	41 d3 c1             	rol    %cl,%r9d
    ce41:	44 21 0f             	and    %r9d,(%rdi)
    ce44:	e9 8b fa ff ff       	jmp    c8d4 <dispose_chunk+0x114>
    ce49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    ce50:	4e 89 4c df 08       	mov    %r9,0x8(%rdi,%r11,8)
    ce55:	4d 85 c9             	test   %r9,%r9
    ce58:	0f 85 98 fb ff ff    	jne    c9f6 <dispose_chunk+0x236>
    ce5e:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    ce63:	d3 c6                	rol    %cl,%esi
    ce65:	21 77 04             	and    %esi,0x4(%rdi)
    ce68:	e9 d3 fb ff ff       	jmp    ca40 <dispose_chunk+0x280>
    ce6d:	4d 39 c2             	cmp    %r8,%r10
    ce70:	0f 82 ba fc ff ff    	jb     cb30 <dispose_chunk+0x370>
    ce76:	49 39 72 18          	cmp    %rsi,0x18(%r10)
    ce7a:	0f 85 b0 fc ff ff    	jne    cb30 <dispose_chunk+0x370>
    ce80:	4d 39 d1             	cmp    %r10,%r9
    ce83:	0f 84 0f ff ff ff    	je     cd98 <dispose_chunk+0x5d8>
    ce89:	4c 39 c9             	cmp    %r9,%rcx
    ce8c:	0f 84 4e fe ff ff    	je     cce0 <dispose_chunk+0x520>
    ce92:	e9 88 fc ff ff       	jmp    cb1f <dispose_chunk+0x35f>
    ce97:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    ce9e:	00 00 
    cea0:	4e 89 4c df 08       	mov    %r9,0x8(%rdi,%r11,8)
    cea5:	4d 85 c9             	test   %r9,%r9
    cea8:	0f 85 dc f9 ff ff    	jne    c88a <dispose_chunk+0xca>
    ceae:	41 b9 fe ff ff ff    	mov    $0xfffffffe,%r9d
    ceb4:	41 d3 c1             	rol    %cl,%r9d
    ceb7:	44 21 4f 04          	and    %r9d,0x4(%rdi)
    cebb:	e9 14 fa ff ff       	jmp    c8d4 <dispose_chunk+0x114>
    cec0:	4d 39 c2             	cmp    %r8,%r10
    cec3:	0f 82 67 fc ff ff    	jb     cb30 <dispose_chunk+0x370>
    cec9:	49 39 42 18          	cmp    %rax,0x18(%r10)
    cecd:	0f 85 5d fc ff ff    	jne    cb30 <dispose_chunk+0x370>
    ced3:	4d 39 d1             	cmp    %r10,%r9
    ced6:	0f 84 5c ff ff ff    	je     ce38 <dispose_chunk+0x678>
    cedc:	4d 39 cb             	cmp    %r9,%r11
    cedf:	0f 84 a5 fc ff ff    	je     cb8a <dispose_chunk+0x3ca>
    cee5:	e9 95 fc ff ff       	jmp    cb7f <dispose_chunk+0x3bf>
    ceea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    cef0:	48 8b 4e 20          	mov    0x20(%rsi),%rcx
    cef4:	48 85 c9             	test   %rcx,%rcx
    cef7:	74 53                	je     cf4c <dispose_chunk+0x78c>
    cef9:	4c 8d 56 20          	lea    0x20(%rsi),%r10
    cefd:	e9 26 fe ff ff       	jmp    cd28 <dispose_chunk+0x568>
    cf02:	48 8b 48 20          	mov    0x20(%rax),%rcx
    cf06:	48 85 c9             	test   %rcx,%rcx
    cf09:	74 75                	je     cf80 <dispose_chunk+0x7c0>
    cf0b:	4c 8d 50 20          	lea    0x20(%rax),%r10
    cf0f:	e9 b4 fe ff ff       	jmp    cdc8 <dispose_chunk+0x608>
    cf14:	4c 89 4d 20          	mov    %r9,0x20(%rbp)
    cf18:	e9 d4 fa ff ff       	jmp    c9f1 <dispose_chunk+0x231>
    cf1d:	4c 89 4b 20          	mov    %r9,0x20(%rbx)
    cf21:	e9 5f f9 ff ff       	jmp    c885 <dispose_chunk+0xc5>
    cf26:	4e 89 4c d7 08       	mov    %r9,0x8(%rdi,%r10,8)
    cf2b:	e9 c6 fa ff ff       	jmp    c9f6 <dispose_chunk+0x236>
    cf30:	4e 89 4c d7 08       	mov    %r9,0x8(%rdi,%r10,8)
    cf35:	e9 50 f9 ff ff       	jmp    c88a <dispose_chunk+0xca>
    cf3a:	4c 89 4d 20          	mov    %r9,0x20(%rbp)
    cf3e:	e9 b3 fa ff ff       	jmp    c9f6 <dispose_chunk+0x236>
    cf43:	4c 89 4b 20          	mov    %r9,0x20(%rbx)
    cf47:	e9 3e f9 ff ff       	jmp    c88a <dispose_chunk+0xca>
    cf4c:	48 85 ed             	test   %rbp,%rbp
    cf4f:	0f 84 eb fa ff ff    	je     ca40 <dispose_chunk+0x280>
    cf55:	44 8b 4e 38          	mov    0x38(%rsi),%r9d
    cf59:	4c 89 c9             	mov    %r9,%rcx
    cf5c:	4a 39 b4 cf 58 02 00 	cmp    %rsi,0x258(%rdi,%r9,8)
    cf63:	00 
    cf64:	74 4f                	je     cfb5 <dispose_chunk+0x7f5>
    cf66:	4c 39 c5             	cmp    %r8,%rbp
    cf69:	0f 82 c1 fb ff ff    	jb     cb30 <dispose_chunk+0x370>
    cf6f:	48 39 75 20          	cmp    %rsi,0x20(%rbp)
    cf73:	74 60                	je     cfd5 <dispose_chunk+0x815>
    cf75:	31 c9                	xor    %ecx,%ecx
    cf77:	48 89 4d 28          	mov    %rcx,0x28(%rbp)
    cf7b:	e9 c0 fa ff ff       	jmp    ca40 <dispose_chunk+0x280>
    cf80:	48 85 db             	test   %rbx,%rbx
    cf83:	0f 84 4b f9 ff ff    	je     c8d4 <dispose_chunk+0x114>
    cf89:	44 8b 48 38          	mov    0x38(%rax),%r9d
    cf8d:	4c 89 c9             	mov    %r9,%rcx
    cf90:	4a 39 84 cf 58 02 00 	cmp    %rax,0x258(%rdi,%r9,8)
    cf97:	00 
    cf98:	74 2b                	je     cfc5 <dispose_chunk+0x805>
    cf9a:	4c 39 c3             	cmp    %r8,%rbx
    cf9d:	0f 82 8d fb ff ff    	jb     cb30 <dispose_chunk+0x370>
    cfa3:	48 39 43 20          	cmp    %rax,0x20(%rbx)
    cfa7:	74 37                	je     cfe0 <dispose_chunk+0x820>
    cfa9:	45 31 db             	xor    %r11d,%r11d
    cfac:	4c 89 5b 28          	mov    %r11,0x28(%rbx)
    cfb0:	e9 1f f9 ff ff       	jmp    c8d4 <dispose_chunk+0x114>
    cfb5:	45 31 d2             	xor    %r10d,%r10d
    cfb8:	4e 89 94 cf 58 02 00 	mov    %r10,0x258(%rdi,%r9,8)
    cfbf:	00 
    cfc0:	e9 99 fe ff ff       	jmp    ce5e <dispose_chunk+0x69e>
    cfc5:	45 31 d2             	xor    %r10d,%r10d
    cfc8:	4e 89 94 cf 58 02 00 	mov    %r10,0x258(%rdi,%r9,8)
    cfcf:	00 
    cfd0:	e9 d9 fe ff ff       	jmp    ceae <dispose_chunk+0x6ee>
    cfd5:	31 f6                	xor    %esi,%esi
    cfd7:	48 89 75 20          	mov    %rsi,0x20(%rbp)
    cfdb:	e9 60 fa ff ff       	jmp    ca40 <dispose_chunk+0x280>
    cfe0:	31 ed                	xor    %ebp,%ebp
    cfe2:	48 89 6b 20          	mov    %rbp,0x20(%rbx)
    cfe6:	e9 e9 f8 ff ff       	jmp    c8d4 <dispose_chunk+0x114>
    cfeb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000cff0 <init_mparams.isra.0>:
    cff0:	48 83 ec 18          	sub    $0x18,%rsp
    cff4:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    cffb:	00 00 
    cffd:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    d002:	b8 01 00 00 00       	mov    $0x1,%eax
    d007:	87 05 23 de 01 00    	xchg   %eax,0x1de23(%rip)        # 2ae30 <malloc_global_mutex>
    d00d:	85 c0                	test   %eax,%eax
    d00f:	0f 85 8b 00 00 00    	jne    d0a0 <init_mparams.isra.0+0xb0>
    d015:	48 83 3d e3 dd 01 00 	cmpq   $0x0,0x1dde3(%rip)        # 2ae00 <mparams>
    d01c:	00 
    d01d:	75 5d                	jne    d07c <init_mparams.isra.0+0x8c>
    d01f:	66 0f 6f 05 e9 60 00 	movdqa 0x60e9(%rip),%xmm0        # 13110 <g_dyn_entry_table+0x80>
    d026:	00 
    d027:	48 89 e7             	mov    %rsp,%rdi
    d02a:	be 08 00 00 00       	mov    $0x8,%esi
    d02f:	c7 05 ef dd 01 00 02 	movl   $0x2,0x1ddef(%rip)        # 2ae28 <mparams+0x28>
    d036:	00 00 00 
    d039:	48 c7 05 6c dd 01 00 	movq   $0x2,0x1dd6c(%rip)        # 2adb0 <_gm_+0x370>
    d040:	02 00 00 00 
    d044:	0f 11 05 bd dd 01 00 	movups %xmm0,0x1ddbd(%rip)        # 2ae08 <mparams+0x8>
    d04b:	66 0f 6f 05 cd 60 00 	movdqa 0x60cd(%rip),%xmm0        # 13120 <g_dyn_entry_table+0x90>
    d052:	00 
    d053:	0f 11 05 be dd 01 00 	movups %xmm0,0x1ddbe(%rip)        # 2ae18 <mparams+0x18>
    d05a:	e8 01 8d ff ff       	call   5d60 <sgx_read_rand>
    d05f:	85 c0                	test   %eax,%eax
    d061:	75 69                	jne    d0cc <init_mparams.isra.0+0xdc>
    d063:	48 8b 04 24          	mov    (%rsp),%rax
    d067:	48 35 55 55 55 55    	xor    $0x55555555,%rax
    d06d:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    d071:	48 83 c8 08          	or     $0x8,%rax
    d075:	48 89 05 84 dd 01 00 	mov    %rax,0x1dd84(%rip)        # 2ae00 <mparams>
    d07c:	c7 05 aa dd 01 00 00 	movl   $0x0,0x1ddaa(%rip)        # 2ae30 <malloc_global_mutex>
    d083:	00 00 00 
    d086:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    d08b:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    d092:	00 00 
    d094:	75 31                	jne    d0c7 <init_mparams.isra.0+0xd7>
    d096:	48 83 c4 18          	add    $0x18,%rsp
    d09a:	c3                   	ret    
    d09b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    d0a0:	48 8d 15 89 dd 01 00 	lea    0x1dd89(%rip),%rdx        # 2ae30 <malloc_global_mutex>
    d0a7:	b9 01 00 00 00       	mov    $0x1,%ecx
    d0ac:	0f 1f 40 00          	nopl   0x0(%rax)
    d0b0:	8b 02                	mov    (%rdx),%eax
    d0b2:	85 c0                	test   %eax,%eax
    d0b4:	75 fa                	jne    d0b0 <init_mparams.isra.0+0xc0>
    d0b6:	89 c8                	mov    %ecx,%eax
    d0b8:	87 05 72 dd 01 00    	xchg   %eax,0x1dd72(%rip)        # 2ae30 <malloc_global_mutex>
    d0be:	85 c0                	test   %eax,%eax
    d0c0:	75 ee                	jne    d0b0 <init_mparams.isra.0+0xc0>
    d0c2:	e9 4e ff ff ff       	jmp    d015 <init_mparams.isra.0+0x25>
    d0c7:	e8 d4 38 00 00       	call   109a0 <__stack_chk_fail>
    d0cc:	e8 66 54 00 00       	call   12537 <abort>
    d0d1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    d0d8:	00 00 00 
    d0db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000d0e0 <dlmalloc>:
    d0e0:	f3 0f 1e fa          	endbr64 
    d0e4:	41 57                	push   %r15
    d0e6:	41 56                	push   %r14
    d0e8:	41 55                	push   %r13
    d0ea:	41 54                	push   %r12
    d0ec:	55                   	push   %rbp
    d0ed:	48 89 fd             	mov    %rdi,%rbp
    d0f0:	53                   	push   %rbx
    d0f1:	48 83 ec 18          	sub    $0x18,%rsp
    d0f5:	48 83 3d 03 dd 01 00 	cmpq   $0x0,0x1dd03(%rip)        # 2ae00 <mparams>
    d0fc:	00 
    d0fd:	0f 84 55 01 00 00    	je     d258 <dlmalloc+0x178>
    d103:	f6 05 a6 dc 01 00 02 	testb  $0x2,0x1dca6(%rip)        # 2adb0 <_gm_+0x370>
    d10a:	0f 85 5a 01 00 00    	jne    d26a <dlmalloc+0x18a>
    d110:	48 81 fd e0 00 00 00 	cmp    $0xe0,%rbp
    d117:	0f 87 fb 00 00 00    	ja     d218 <dlmalloc+0x138>
    d11d:	48 83 fd 0e          	cmp    $0xe,%rbp
    d121:	0f 87 d9 00 00 00    	ja     d200 <dlmalloc+0x120>
    d127:	b9 04 00 00 00       	mov    $0x4,%ecx
    d12c:	41 bc 20 00 00 00    	mov    $0x20,%r12d
    d132:	8b 15 08 d9 01 00    	mov    0x1d908(%rip),%edx        # 2aa40 <_gm_>
    d138:	4c 8d 2d 01 d9 01 00 	lea    0x1d901(%rip),%r13        # 2aa40 <_gm_>
    d13f:	89 d0                	mov    %edx,%eax
    d141:	d3 e8                	shr    %cl,%eax
    d143:	a8 03                	test   $0x3,%al
    d145:	0f 84 d5 01 00 00    	je     d320 <dlmalloc+0x240>
    d14b:	f7 d0                	not    %eax
    d14d:	83 e0 01             	and    $0x1,%eax
    d150:	01 c1                	add    %eax,%ecx
    d152:	8d 44 09 09          	lea    0x9(%rcx,%rcx,1),%eax
    d156:	49 8d 74 c5 00       	lea    0x0(%r13,%rax,8),%rsi
    d15b:	48 8b 5e 10          	mov    0x10(%rsi),%rbx
    d15f:	48 8b 43 10          	mov    0x10(%rbx),%rax
    d163:	48 39 c6             	cmp    %rax,%rsi
    d166:	0f 84 a4 07 00 00    	je     d910 <dlmalloc+0x830>
    d16c:	48 3b 05 e5 d8 01 00 	cmp    0x1d8e5(%rip),%rax        # 2aa58 <_gm_+0x18>
    d173:	0f 82 c7 05 00 00    	jb     d740 <dlmalloc+0x660>
    d179:	48 39 58 18          	cmp    %rbx,0x18(%rax)
    d17d:	0f 85 bd 05 00 00    	jne    d740 <dlmalloc+0x660>
    d183:	48 89 70 18          	mov    %rsi,0x18(%rax)
    d187:	48 89 46 10          	mov    %rax,0x10(%rsi)
    d18b:	c1 e1 03             	shl    $0x3,%ecx
    d18e:	89 c8                	mov    %ecx,%eax
    d190:	83 c8 03             	or     $0x3,%eax
    d193:	48 89 43 08          	mov    %rax,0x8(%rbx)
    d197:	48 8d 04 0b          	lea    (%rbx,%rcx,1),%rax
    d19b:	48 83 c3 10          	add    $0x10,%rbx
    d19f:	48 83 48 08 01       	orq    $0x1,0x8(%rax)
    d1a4:	4c 33 2d 55 dc 01 00 	xor    0x1dc55(%rip),%r13        # 2ae00 <mparams>
    d1ab:	4c 89 28             	mov    %r13,(%rax)
    d1ae:	48 85 db             	test   %rbx,%rbx
    d1b1:	0f 84 96 00 00 00    	je     d24d <dlmalloc+0x16d>
    d1b7:	e8 94 a1 ff ff       	call   7350 <get_heap_base>
    d1bc:	48 39 c3             	cmp    %rax,%rbx
    d1bf:	0f 82 7b 05 00 00    	jb     d740 <dlmalloc+0x660>
    d1c5:	48 01 dd             	add    %rbx,%rbp
    d1c8:	0f 82 72 05 00 00    	jb     d740 <dlmalloc+0x660>
    d1ce:	31 ff                	xor    %edi,%edi
    d1d0:	e8 2b f4 ff ff       	call   c600 <sbrk>
    d1d5:	48 39 e8             	cmp    %rbp,%rax
    d1d8:	0f 82 62 05 00 00    	jb     d740 <dlmalloc+0x660>
    d1de:	f6 05 cb db 01 00 02 	testb  $0x2,0x1dbcb(%rip)        # 2adb0 <_gm_+0x370>
    d1e5:	0f 85 35 05 00 00    	jne    d720 <dlmalloc+0x640>
    d1eb:	48 83 c4 18          	add    $0x18,%rsp
    d1ef:	48 89 d8             	mov    %rbx,%rax
    d1f2:	5b                   	pop    %rbx
    d1f3:	5d                   	pop    %rbp
    d1f4:	41 5c                	pop    %r12
    d1f6:	41 5d                	pop    %r13
    d1f8:	41 5e                	pop    %r14
    d1fa:	41 5f                	pop    %r15
    d1fc:	c3                   	ret    
    d1fd:	0f 1f 00             	nopl   (%rax)
    d200:	4c 8d 65 1f          	lea    0x1f(%rbp),%r12
    d204:	49 83 e4 f0          	and    $0xfffffffffffffff0,%r12
    d208:	4c 89 e1             	mov    %r12,%rcx
    d20b:	48 c1 e9 03          	shr    $0x3,%rcx
    d20f:	e9 1e ff ff ff       	jmp    d132 <dlmalloc+0x52>
    d214:	0f 1f 40 00          	nopl   0x0(%rax)
    d218:	4c 8b 05 29 d8 01 00 	mov    0x1d829(%rip),%r8        # 2aa48 <_gm_+0x8>
    d21f:	4c 8d 2d 1a d8 01 00 	lea    0x1d81a(%rip),%r13        # 2aa40 <_gm_>
    d226:	4c 89 c6             	mov    %r8,%rsi
    d229:	48 81 fd 7f ff ff ff 	cmp    $0xffffffffffffff7f,%rbp
    d230:	76 76                	jbe    d2a8 <dlmalloc+0x1c8>
    d232:	48 8b 05 c7 db 01 00 	mov    0x1dbc7(%rip),%rax        # 2ae00 <mparams>
    d239:	49 83 f8 ff          	cmp    $0xffffffffffffffff,%r8
    d23d:	0f 84 5d 02 00 00    	je     d4a0 <dlmalloc+0x3c0>
    d243:	48 85 c0             	test   %rax,%rax
    d246:	75 05                	jne    d24d <dlmalloc+0x16d>
    d248:	e8 a3 fd ff ff       	call   cff0 <init_mparams.isra.0>
    d24d:	31 db                	xor    %ebx,%ebx
    d24f:	eb 8d                	jmp    d1de <dlmalloc+0xfe>
    d251:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    d258:	e8 93 fd ff ff       	call   cff0 <init_mparams.isra.0>
    d25d:	f6 05 4c db 01 00 02 	testb  $0x2,0x1db4c(%rip)        # 2adb0 <_gm_+0x370>
    d264:	0f 84 a6 fe ff ff    	je     d110 <dlmalloc+0x30>
    d26a:	b8 01 00 00 00       	mov    $0x1,%eax
    d26f:	87 05 3f db 01 00    	xchg   %eax,0x1db3f(%rip)        # 2adb4 <_gm_+0x374>
    d275:	85 c0                	test   %eax,%eax
    d277:	0f 84 93 fe ff ff    	je     d110 <dlmalloc+0x30>
    d27d:	ba 01 00 00 00       	mov    $0x1,%edx
    d282:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    d288:	8b 05 26 db 01 00    	mov    0x1db26(%rip),%eax        # 2adb4 <_gm_+0x374>
    d28e:	85 c0                	test   %eax,%eax
    d290:	75 f6                	jne    d288 <dlmalloc+0x1a8>
    d292:	89 d0                	mov    %edx,%eax
    d294:	87 05 1a db 01 00    	xchg   %eax,0x1db1a(%rip)        # 2adb4 <_gm_+0x374>
    d29a:	85 c0                	test   %eax,%eax
    d29c:	75 ea                	jne    d288 <dlmalloc+0x1a8>
    d29e:	e9 6d fe ff ff       	jmp    d110 <dlmalloc+0x30>
    d2a3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    d2a8:	44 8b 0d 95 d7 01 00 	mov    0x1d795(%rip),%r9d        # 2aa44 <_gm_+0x4>
    d2af:	4c 8d 65 1f          	lea    0x1f(%rbp),%r12
    d2b3:	49 83 e4 f0          	and    $0xfffffffffffffff0,%r12
    d2b7:	45 85 c9             	test   %r9d,%r9d
    d2ba:	0f 85 20 02 00 00    	jne    d4e0 <dlmalloc+0x400>
    d2c0:	4c 39 e6             	cmp    %r12,%rsi
    d2c3:	0f 83 7f 01 00 00    	jae    d448 <dlmalloc+0x368>
    d2c9:	48 8b 05 80 d7 01 00 	mov    0x1d780(%rip),%rax        # 2aa50 <_gm_+0x10>
    d2d0:	48 8b 15 29 db 01 00 	mov    0x1db29(%rip),%rdx        # 2ae00 <mparams>
    d2d7:	49 39 c4             	cmp    %rax,%r12
    d2da:	0f 83 b0 06 00 00    	jae    d990 <dlmalloc+0x8b0>
    d2e0:	48 8b 1d 81 d7 01 00 	mov    0x1d781(%rip),%rbx        # 2aa68 <_gm_+0x28>
    d2e7:	4c 29 e0             	sub    %r12,%rax
    d2ea:	4c 31 ea             	xor    %r13,%rdx
    d2ed:	48 89 05 5c d7 01 00 	mov    %rax,0x1d75c(%rip)        # 2aa50 <_gm_+0x10>
    d2f4:	48 83 c8 01          	or     $0x1,%rax
    d2f8:	4a 8d 0c 23          	lea    (%rbx,%r12,1),%rcx
    d2fc:	49 83 cc 03          	or     $0x3,%r12
    d300:	48 89 0d 61 d7 01 00 	mov    %rcx,0x1d761(%rip)        # 2aa68 <_gm_+0x28>
    d307:	48 89 41 08          	mov    %rax,0x8(%rcx)
    d30b:	4c 89 63 08          	mov    %r12,0x8(%rbx)
    d30f:	48 89 11             	mov    %rdx,(%rcx)
    d312:	48 83 c3 10          	add    $0x10,%rbx
    d316:	e9 93 fe ff ff       	jmp    d1ae <dlmalloc+0xce>
    d31b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    d320:	48 8b 35 21 d7 01 00 	mov    0x1d721(%rip),%rsi        # 2aa48 <_gm_+0x8>
    d327:	4c 39 e6             	cmp    %r12,%rsi
    d32a:	0f 83 18 01 00 00    	jae    d448 <dlmalloc+0x368>
    d330:	85 c0                	test   %eax,%eax
    d332:	0f 84 10 04 00 00    	je     d748 <dlmalloc+0x668>
    d338:	bf 01 00 00 00       	mov    $0x1,%edi
    d33d:	d3 e0                	shl    %cl,%eax
    d33f:	41 89 f9             	mov    %edi,%r9d
    d342:	41 d3 e1             	shl    %cl,%r9d
    d345:	45 01 c9             	add    %r9d,%r9d
    d348:	45 89 c8             	mov    %r9d,%r8d
    d34b:	41 f7 d8             	neg    %r8d
    d34e:	45 09 c8             	or     %r9d,%r8d
    d351:	44 21 c0             	and    %r8d,%eax
    d354:	89 c1                	mov    %eax,%ecx
    d356:	f7 d9                	neg    %ecx
    d358:	21 c1                	and    %eax,%ecx
    d35a:	f3 0f bc c9          	tzcnt  %ecx,%ecx
    d35e:	8d 44 09 09          	lea    0x9(%rcx,%rcx,1),%eax
    d362:	4d 8d 44 c5 00       	lea    0x0(%r13,%rax,8),%r8
    d367:	49 8b 58 10          	mov    0x10(%r8),%rbx
    d36b:	48 8b 43 10          	mov    0x10(%rbx),%rax
    d36f:	49 39 c0             	cmp    %rax,%r8
    d372:	0f 84 d1 05 00 00    	je     d949 <dlmalloc+0x869>
    d378:	48 3b 05 d9 d6 01 00 	cmp    0x1d6d9(%rip),%rax        # 2aa58 <_gm_+0x18>
    d37f:	0f 82 bb 03 00 00    	jb     d740 <dlmalloc+0x660>
    d385:	48 39 58 18          	cmp    %rbx,0x18(%rax)
    d389:	0f 85 b1 03 00 00    	jne    d740 <dlmalloc+0x660>
    d38f:	4c 89 40 18          	mov    %r8,0x18(%rax)
    d393:	49 89 40 10          	mov    %rax,0x10(%r8)
    d397:	8d 04 cd 00 00 00 00 	lea    0x0(,%rcx,8),%eax
    d39e:	48 8b 3d 5b da 01 00 	mov    0x1da5b(%rip),%rdi        # 2ae00 <mparams>
    d3a5:	48 89 c2             	mov    %rax,%rdx
    d3a8:	48 89 c1             	mov    %rax,%rcx
    d3ab:	48 01 d8             	add    %rbx,%rax
    d3ae:	4c 29 e2             	sub    %r12,%rdx
    d3b1:	4c 31 ef             	xor    %r13,%rdi
    d3b4:	48 83 fa 1f          	cmp    $0x1f,%rdx
    d3b8:	0f 86 8d 0d 00 00    	jbe    e14b <dlmalloc+0x106b>
    d3be:	4c 89 e1             	mov    %r12,%rcx
    d3c1:	49 01 dc             	add    %rbx,%r12
    d3c4:	48 83 c9 03          	or     $0x3,%rcx
    d3c8:	48 89 4b 08          	mov    %rcx,0x8(%rbx)
    d3cc:	48 89 d1             	mov    %rdx,%rcx
    d3cf:	48 83 c9 01          	or     $0x1,%rcx
    d3d3:	49 89 3c 24          	mov    %rdi,(%r12)
    d3d7:	49 89 4c 24 08       	mov    %rcx,0x8(%r12)
    d3dc:	48 89 10             	mov    %rdx,(%rax)
    d3df:	48 85 f6             	test   %rsi,%rsi
    d3e2:	74 4d                	je     d431 <dlmalloc+0x351>
    d3e4:	48 c1 ee 03          	shr    $0x3,%rsi
    d3e8:	bf 01 00 00 00       	mov    $0x1,%edi
    d3ed:	48 8b 05 6c d6 01 00 	mov    0x1d66c(%rip),%rax        # 2aa60 <_gm_+0x20>
    d3f4:	48 89 f1             	mov    %rsi,%rcx
    d3f7:	8d 74 36 09          	lea    0x9(%rsi,%rsi,1),%esi
    d3fb:	4d 8d 44 f5 00       	lea    0x0(%r13,%rsi,8),%r8
    d400:	8b 35 3a d6 01 00    	mov    0x1d63a(%rip),%esi        # 2aa40 <_gm_>
    d406:	d3 e7                	shl    %cl,%edi
    d408:	85 fe                	test   %edi,%esi
    d40a:	0f 84 a9 10 00 00    	je     e4b9 <dlmalloc+0x13d9>
    d410:	49 8b 48 10          	mov    0x10(%r8),%rcx
    d414:	48 3b 0d 3d d6 01 00 	cmp    0x1d63d(%rip),%rcx        # 2aa58 <_gm_+0x18>
    d41b:	0f 82 1f 03 00 00    	jb     d740 <dlmalloc+0x660>
    d421:	49 89 40 10          	mov    %rax,0x10(%r8)
    d425:	48 89 41 18          	mov    %rax,0x18(%rcx)
    d429:	48 89 48 10          	mov    %rcx,0x10(%rax)
    d42d:	4c 89 40 18          	mov    %r8,0x18(%rax)
    d431:	48 89 15 10 d6 01 00 	mov    %rdx,0x1d610(%rip)        # 2aa48 <_gm_+0x8>
    d438:	4c 89 25 21 d6 01 00 	mov    %r12,0x1d621(%rip)        # 2aa60 <_gm_+0x20>
    d43f:	e9 ce fe ff ff       	jmp    d312 <dlmalloc+0x232>
    d444:	0f 1f 40 00          	nopl   0x0(%rax)
    d448:	48 8b 1d 11 d6 01 00 	mov    0x1d611(%rip),%rbx        # 2aa60 <_gm_+0x20>
    d44f:	48 8b 3d aa d9 01 00 	mov    0x1d9aa(%rip),%rdi        # 2ae00 <mparams>
    d456:	48 89 f2             	mov    %rsi,%rdx
    d459:	4c 29 e2             	sub    %r12,%rdx
    d45c:	48 8d 04 33          	lea    (%rbx,%rsi,1),%rax
    d460:	4c 31 ef             	xor    %r13,%rdi
    d463:	48 83 fa 1f          	cmp    $0x1f,%rdx
    d467:	0f 86 83 0a 00 00    	jbe    def0 <dlmalloc+0xe10>
    d46d:	48 89 d6             	mov    %rdx,%rsi
    d470:	4a 8d 0c 23          	lea    (%rbx,%r12,1),%rcx
    d474:	49 83 cc 03          	or     $0x3,%r12
    d478:	48 89 15 c9 d5 01 00 	mov    %rdx,0x1d5c9(%rip)        # 2aa48 <_gm_+0x8>
    d47f:	48 83 ce 01          	or     $0x1,%rsi
    d483:	48 89 0d d6 d5 01 00 	mov    %rcx,0x1d5d6(%rip)        # 2aa60 <_gm_+0x20>
    d48a:	48 89 71 08          	mov    %rsi,0x8(%rcx)
    d48e:	48 89 10             	mov    %rdx,(%rax)
    d491:	4c 89 63 08          	mov    %r12,0x8(%rbx)
    d495:	48 89 39             	mov    %rdi,(%rcx)
    d498:	e9 75 fe ff ff       	jmp    d312 <dlmalloc+0x232>
    d49d:	0f 1f 00             	nopl   (%rax)
    d4a0:	48 8b 1d b9 d5 01 00 	mov    0x1d5b9(%rip),%rbx        # 2aa60 <_gm_+0x20>
    d4a7:	48 c7 c6 ff ff ff ff 	mov    $0xffffffffffffffff,%rsi
    d4ae:	48 8d 43 ff          	lea    -0x1(%rbx),%rax
    d4b2:	48 c7 05 8b d5 01 00 	movq   $0x0,0x1d58b(%rip)        # 2aa48 <_gm_+0x8>
    d4b9:	00 00 00 00 
    d4bd:	48 c7 05 98 d5 01 00 	movq   $0x0,0x1d598(%rip)        # 2aa60 <_gm_+0x20>
    d4c4:	00 00 00 00 
    d4c8:	48 89 73 08          	mov    %rsi,0x8(%rbx)
    d4cc:	48 83 48 08 01       	orq    $0x1,0x8(%rax)
    d4d1:	4c 33 2d 28 d9 01 00 	xor    0x1d928(%rip),%r13        # 2ae00 <mparams>
    d4d8:	4c 89 28             	mov    %r13,(%rax)
    d4db:	e9 32 fe ff ff       	jmp    d312 <dlmalloc+0x232>
    d4e0:	4c 89 e0             	mov    %r12,%rax
    d4e3:	4c 89 e7             	mov    %r12,%rdi
    d4e6:	48 c1 e8 08          	shr    $0x8,%rax
    d4ea:	48 f7 df             	neg    %rdi
    d4ed:	41 89 c2             	mov    %eax,%r10d
    d4f0:	85 c0                	test   %eax,%eax
    d4f2:	0f 85 28 04 00 00    	jne    d920 <dlmalloc+0x840>
    d4f8:	48 8b 15 99 d7 01 00 	mov    0x1d799(%rip),%rdx        # 2ac98 <_gm_+0x258>
    d4ff:	b9 39 00 00 00       	mov    $0x39,%ecx
    d504:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    d509:	48 85 d2             	test   %rdx,%rdx
    d50c:	0f 84 52 04 00 00    	je     d964 <dlmalloc+0x884>
    d512:	4d 89 e3             	mov    %r12,%r11
    d515:	49 d3 e3             	shl    %cl,%r11
    d518:	31 c9                	xor    %ecx,%ecx
    d51a:	31 db                	xor    %ebx,%ebx
    d51c:	eb 05                	jmp    d523 <dlmalloc+0x443>
    d51e:	66 90                	xchg   %ax,%ax
    d520:	4d 01 db             	add    %r11,%r11
    d523:	48 8b 42 08          	mov    0x8(%rdx),%rax
    d527:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    d52b:	4c 29 e0             	sub    %r12,%rax
    d52e:	48 39 f8             	cmp    %rdi,%rax
    d531:	73 0f                	jae    d542 <dlmalloc+0x462>
    d533:	48 85 c0             	test   %rax,%rax
    d536:	0f 84 c3 0b 00 00    	je     e0ff <dlmalloc+0x101f>
    d53c:	48 89 c7             	mov    %rax,%rdi
    d53f:	48 89 d3             	mov    %rdx,%rbx
    d542:	48 8b 42 28          	mov    0x28(%rdx),%rax
    d546:	4d 89 de             	mov    %r11,%r14
    d549:	49 c1 ee 3f          	shr    $0x3f,%r14
    d54d:	4a 8b 54 f2 20       	mov    0x20(%rdx,%r14,8),%rdx
    d552:	48 85 c0             	test   %rax,%rax
    d555:	74 07                	je     d55e <dlmalloc+0x47e>
    d557:	48 39 d0             	cmp    %rdx,%rax
    d55a:	48 0f 45 c8          	cmovne %rax,%rcx
    d55e:	48 85 d2             	test   %rdx,%rdx
    d561:	75 bd                	jne    d520 <dlmalloc+0x440>
    d563:	48 89 c8             	mov    %rcx,%rax
    d566:	48 09 d8             	or     %rbx,%rax
    d569:	0f 84 eb 03 00 00    	je     d95a <dlmalloc+0x87a>
    d56f:	48 85 c9             	test   %rcx,%rcx
    d572:	75 0f                	jne    d583 <dlmalloc+0x4a3>
    d574:	eb 35                	jmp    d5ab <dlmalloc+0x4cb>
    d576:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    d57d:	00 00 00 
    d580:	48 89 c1             	mov    %rax,%rcx
    d583:	48 8b 41 08          	mov    0x8(%rcx),%rax
    d587:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    d58b:	4c 29 e0             	sub    %r12,%rax
    d58e:	48 39 f8             	cmp    %rdi,%rax
    d591:	73 06                	jae    d599 <dlmalloc+0x4b9>
    d593:	48 89 c7             	mov    %rax,%rdi
    d596:	48 89 cb             	mov    %rcx,%rbx
    d599:	48 8b 41 20          	mov    0x20(%rcx),%rax
    d59d:	48 85 c0             	test   %rax,%rax
    d5a0:	75 de                	jne    d580 <dlmalloc+0x4a0>
    d5a2:	48 8b 41 28          	mov    0x28(%rcx),%rax
    d5a6:	48 85 c0             	test   %rax,%rax
    d5a9:	75 d5                	jne    d580 <dlmalloc+0x4a0>
    d5ab:	48 85 db             	test   %rbx,%rbx
    d5ae:	0f 84 0c fd ff ff    	je     d2c0 <dlmalloc+0x1e0>
    d5b4:	4c 89 c0             	mov    %r8,%rax
    d5b7:	4c 29 e0             	sub    %r12,%rax
    d5ba:	48 39 c7             	cmp    %rax,%rdi
    d5bd:	0f 83 fd fc ff ff    	jae    d2c0 <dlmalloc+0x1e0>
    d5c3:	4c 8b 1d 8e d4 01 00 	mov    0x1d48e(%rip),%r11        # 2aa58 <_gm_+0x18>
    d5ca:	4c 39 db             	cmp    %r11,%rbx
    d5cd:	0f 82 6d 01 00 00    	jb     d740 <dlmalloc+0x660>
    d5d3:	4e 8d 14 23          	lea    (%rbx,%r12,1),%r10
    d5d7:	4c 39 d3             	cmp    %r10,%rbx
    d5da:	0f 83 60 01 00 00    	jae    d740 <dlmalloc+0x660>
    d5e0:	4c 8b 73 18          	mov    0x18(%rbx),%r14
    d5e4:	4c 8b 7b 30          	mov    0x30(%rbx),%r15
    d5e8:	4c 39 f3             	cmp    %r14,%rbx
    d5eb:	0f 84 2d 0d 00 00    	je     e31e <dlmalloc+0x123e>
    d5f1:	48 8b 43 10          	mov    0x10(%rbx),%rax
    d5f5:	4c 39 d8             	cmp    %r11,%rax
    d5f8:	0f 82 42 01 00 00    	jb     d740 <dlmalloc+0x660>
    d5fe:	48 3b 58 18          	cmp    0x18(%rax),%rbx
    d602:	0f 85 38 01 00 00    	jne    d740 <dlmalloc+0x660>
    d608:	49 3b 5e 10          	cmp    0x10(%r14),%rbx
    d60c:	0f 85 2e 01 00 00    	jne    d740 <dlmalloc+0x660>
    d612:	4c 89 70 18          	mov    %r14,0x18(%rax)
    d616:	49 89 46 10          	mov    %rax,0x10(%r14)
    d61a:	4d 85 ff             	test   %r15,%r15
    d61d:	74 71                	je     d690 <dlmalloc+0x5b0>
    d61f:	8b 53 38             	mov    0x38(%rbx),%edx
    d622:	48 89 d0             	mov    %rdx,%rax
    d625:	49 3b 9c d5 58 02 00 	cmp    0x258(%r13,%rdx,8),%rbx
    d62c:	00 
    d62d:	0f 84 ca 0f 00 00    	je     e5fd <dlmalloc+0x151d>
    d633:	4d 39 df             	cmp    %r11,%r15
    d636:	0f 82 04 01 00 00    	jb     d740 <dlmalloc+0x660>
    d63c:	49 3b 5f 20          	cmp    0x20(%r15),%rbx
    d640:	0f 84 3e 11 00 00    	je     e784 <dlmalloc+0x16a4>
    d646:	4d 89 77 28          	mov    %r14,0x28(%r15)
    d64a:	4d 85 f6             	test   %r14,%r14
    d64d:	74 41                	je     d690 <dlmalloc+0x5b0>
    d64f:	4d 39 de             	cmp    %r11,%r14
    d652:	0f 82 e8 00 00 00    	jb     d740 <dlmalloc+0x660>
    d658:	48 8b 43 20          	mov    0x20(%rbx),%rax
    d65c:	4d 89 7e 30          	mov    %r15,0x30(%r14)
    d660:	48 85 c0             	test   %rax,%rax
    d663:	74 11                	je     d676 <dlmalloc+0x596>
    d665:	4c 39 d8             	cmp    %r11,%rax
    d668:	0f 82 d2 00 00 00    	jb     d740 <dlmalloc+0x660>
    d66e:	49 89 46 20          	mov    %rax,0x20(%r14)
    d672:	4c 89 70 30          	mov    %r14,0x30(%rax)
    d676:	48 8b 43 28          	mov    0x28(%rbx),%rax
    d67a:	48 85 c0             	test   %rax,%rax
    d67d:	74 11                	je     d690 <dlmalloc+0x5b0>
    d67f:	4c 39 d8             	cmp    %r11,%rax
    d682:	0f 82 b8 00 00 00    	jb     d740 <dlmalloc+0x660>
    d688:	49 89 46 28          	mov    %rax,0x28(%r14)
    d68c:	4c 89 70 30          	mov    %r14,0x30(%rax)
    d690:	48 8b 15 69 d7 01 00 	mov    0x1d769(%rip),%rdx        # 2ae00 <mparams>
    d697:	4c 31 ea             	xor    %r13,%rdx
    d69a:	48 83 ff 1f          	cmp    $0x1f,%rdi
    d69e:	0f 86 fa 0c 00 00    	jbe    e39e <dlmalloc+0x12be>
    d6a4:	4c 89 e0             	mov    %r12,%rax
    d6a7:	48 89 f9             	mov    %rdi,%rcx
    d6aa:	48 83 c8 03          	or     $0x3,%rax
    d6ae:	48 c1 e9 03          	shr    $0x3,%rcx
    d6b2:	48 89 43 08          	mov    %rax,0x8(%rbx)
    d6b6:	48 89 f8             	mov    %rdi,%rax
    d6b9:	48 83 c8 01          	or     $0x1,%rax
    d6bd:	49 89 12             	mov    %rdx,(%r10)
    d6c0:	49 89 42 08          	mov    %rax,0x8(%r10)
    d6c4:	49 89 3c 3a          	mov    %rdi,(%r10,%rdi,1)
    d6c8:	48 81 ff ff 00 00 00 	cmp    $0xff,%rdi
    d6cf:	0f 87 e8 0c 00 00    	ja     e3bd <dlmalloc+0x12dd>
    d6d5:	8d 44 09 09          	lea    0x9(%rcx,%rcx,1),%eax
    d6d9:	8b 35 61 d3 01 00    	mov    0x1d361(%rip),%esi        # 2aa40 <_gm_>
    d6df:	49 8d 54 c5 00       	lea    0x0(%r13,%rax,8),%rdx
    d6e4:	b8 01 00 00 00       	mov    $0x1,%eax
    d6e9:	d3 e0                	shl    %cl,%eax
    d6eb:	85 c6                	test   %eax,%esi
    d6ed:	0f 84 39 10 00 00    	je     e72c <dlmalloc+0x164c>
    d6f3:	48 8b 42 10          	mov    0x10(%rdx),%rax
    d6f7:	4c 39 d8             	cmp    %r11,%rax
    d6fa:	72 44                	jb     d740 <dlmalloc+0x660>
    d6fc:	4c 89 52 10          	mov    %r10,0x10(%rdx)
    d700:	4c 89 50 18          	mov    %r10,0x18(%rax)
    d704:	49 89 42 10          	mov    %rax,0x10(%r10)
    d708:	49 89 52 18          	mov    %rdx,0x18(%r10)
    d70c:	48 83 c3 10          	add    $0x10,%rbx
    d710:	4c 89 c6             	mov    %r8,%rsi
    d713:	0f 85 9e fa ff ff    	jne    d1b7 <dlmalloc+0xd7>
    d719:	e9 a2 fb ff ff       	jmp    d2c0 <dlmalloc+0x1e0>
    d71e:	66 90                	xchg   %ax,%ax
    d720:	c7 05 8a d6 01 00 00 	movl   $0x0,0x1d68a(%rip)        # 2adb4 <_gm_+0x374>
    d727:	00 00 00 
    d72a:	e9 bc fa ff ff       	jmp    d1eb <dlmalloc+0x10b>
    d72f:	48 8b 42 10          	mov    0x10(%rdx),%rax
    d733:	48 3b 05 1e d3 01 00 	cmp    0x1d31e(%rip),%rax        # 2aa58 <_gm_+0x18>
    d73a:	0f 83 57 06 00 00    	jae    dd97 <dlmalloc+0xcb7>
    d740:	e8 f2 4d 00 00       	call   12537 <abort>
    d745:	0f 1f 00             	nopl   (%rax)
    d748:	44 8b 0d f5 d2 01 00 	mov    0x1d2f5(%rip),%r9d        # 2aa44 <_gm_+0x4>
    d74f:	45 85 c9             	test   %r9d,%r9d
    d752:	0f 84 71 fb ff ff    	je     d2c9 <dlmalloc+0x1e9>
    d758:	44 89 c8             	mov    %r9d,%eax
    d75b:	f7 d8                	neg    %eax
    d75d:	44 21 c8             	and    %r9d,%eax
    d760:	f3 0f bc c0          	tzcnt  %eax,%eax
    d764:	49 8b 84 c5 58 02 00 	mov    0x258(%r13,%rax,8),%rax
    d76b:	00 
    d76c:	48 8b 78 08          	mov    0x8(%rax),%rdi
    d770:	48 89 c3             	mov    %rax,%rbx
    d773:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    d777:	4c 29 e7             	sub    %r12,%rdi
    d77a:	eb 1d                	jmp    d799 <dlmalloc+0x6b9>
    d77c:	0f 1f 40 00          	nopl   0x0(%rax)
    d780:	48 8b 41 08          	mov    0x8(%rcx),%rax
    d784:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    d788:	4c 29 e0             	sub    %r12,%rax
    d78b:	48 39 f8             	cmp    %rdi,%rax
    d78e:	73 06                	jae    d796 <dlmalloc+0x6b6>
    d790:	48 89 c7             	mov    %rax,%rdi
    d793:	48 89 cb             	mov    %rcx,%rbx
    d796:	48 89 c8             	mov    %rcx,%rax
    d799:	48 8b 48 20          	mov    0x20(%rax),%rcx
    d79d:	48 85 c9             	test   %rcx,%rcx
    d7a0:	75 de                	jne    d780 <dlmalloc+0x6a0>
    d7a2:	48 8b 48 28          	mov    0x28(%rax),%rcx
    d7a6:	48 85 c9             	test   %rcx,%rcx
    d7a9:	75 d5                	jne    d780 <dlmalloc+0x6a0>
    d7ab:	4c 8b 1d a6 d2 01 00 	mov    0x1d2a6(%rip),%r11        # 2aa58 <_gm_+0x18>
    d7b2:	4c 39 db             	cmp    %r11,%rbx
    d7b5:	72 89                	jb     d740 <dlmalloc+0x660>
    d7b7:	4e 8d 14 23          	lea    (%rbx,%r12,1),%r10
    d7bb:	4c 39 d3             	cmp    %r10,%rbx
    d7be:	73 80                	jae    d740 <dlmalloc+0x660>
    d7c0:	4c 8b 43 18          	mov    0x18(%rbx),%r8
    d7c4:	4c 8b 73 30          	mov    0x30(%rbx),%r14
    d7c8:	49 39 d8             	cmp    %rbx,%r8
    d7cb:	0f 84 36 0d 00 00    	je     e507 <dlmalloc+0x1427>
    d7d1:	48 8b 43 10          	mov    0x10(%rbx),%rax
    d7d5:	4c 39 d8             	cmp    %r11,%rax
    d7d8:	0f 82 62 ff ff ff    	jb     d740 <dlmalloc+0x660>
    d7de:	48 39 58 18          	cmp    %rbx,0x18(%rax)
    d7e2:	0f 85 58 ff ff ff    	jne    d740 <dlmalloc+0x660>
    d7e8:	49 39 58 10          	cmp    %rbx,0x10(%r8)
    d7ec:	0f 85 4e ff ff ff    	jne    d740 <dlmalloc+0x660>
    d7f2:	4c 89 40 18          	mov    %r8,0x18(%rax)
    d7f6:	49 89 40 10          	mov    %rax,0x10(%r8)
    d7fa:	4d 85 f6             	test   %r14,%r14
    d7fd:	74 71                	je     d870 <dlmalloc+0x790>
    d7ff:	8b 4b 38             	mov    0x38(%rbx),%ecx
    d802:	48 89 c8             	mov    %rcx,%rax
    d805:	49 39 9c cd 58 02 00 	cmp    %rbx,0x258(%r13,%rcx,8)
    d80c:	00 
    d80d:	0f 84 14 10 00 00    	je     e827 <dlmalloc+0x1747>
    d813:	4d 39 de             	cmp    %r11,%r14
    d816:	0f 82 24 ff ff ff    	jb     d740 <dlmalloc+0x660>
    d81c:	49 39 5e 20          	cmp    %rbx,0x20(%r14)
    d820:	0f 84 00 11 00 00    	je     e926 <dlmalloc+0x1846>
    d826:	4d 89 46 28          	mov    %r8,0x28(%r14)
    d82a:	4d 85 c0             	test   %r8,%r8
    d82d:	74 41                	je     d870 <dlmalloc+0x790>
    d82f:	4d 39 d8             	cmp    %r11,%r8
    d832:	0f 82 08 ff ff ff    	jb     d740 <dlmalloc+0x660>
    d838:	48 8b 43 20          	mov    0x20(%rbx),%rax
    d83c:	4d 89 70 30          	mov    %r14,0x30(%r8)
    d840:	48 85 c0             	test   %rax,%rax
    d843:	74 11                	je     d856 <dlmalloc+0x776>
    d845:	4c 39 d8             	cmp    %r11,%rax
    d848:	0f 82 f2 fe ff ff    	jb     d740 <dlmalloc+0x660>
    d84e:	49 89 40 20          	mov    %rax,0x20(%r8)
    d852:	4c 89 40 30          	mov    %r8,0x30(%rax)
    d856:	48 8b 43 28          	mov    0x28(%rbx),%rax
    d85a:	48 85 c0             	test   %rax,%rax
    d85d:	74 11                	je     d870 <dlmalloc+0x790>
    d85f:	4c 39 d8             	cmp    %r11,%rax
    d862:	0f 82 d8 fe ff ff    	jb     d740 <dlmalloc+0x660>
    d868:	49 89 40 28          	mov    %rax,0x28(%r8)
    d86c:	4c 89 40 30          	mov    %r8,0x30(%rax)
    d870:	48 8b 05 89 d5 01 00 	mov    0x1d589(%rip),%rax        # 2ae00 <mparams>
    d877:	4c 31 e8             	xor    %r13,%rax
    d87a:	48 83 ff 1f          	cmp    $0x1f,%rdi
    d87e:	0f 86 d2 0d 00 00    	jbe    e656 <dlmalloc+0x1576>
    d884:	4c 89 e1             	mov    %r12,%rcx
    d887:	48 83 c9 03          	or     $0x3,%rcx
    d88b:	48 89 4b 08          	mov    %rcx,0x8(%rbx)
    d88f:	49 89 02             	mov    %rax,(%r10)
    d892:	48 89 f8             	mov    %rdi,%rax
    d895:	48 83 c8 01          	or     $0x1,%rax
    d899:	49 89 42 08          	mov    %rax,0x8(%r10)
    d89d:	49 89 3c 3a          	mov    %rdi,(%r10,%rdi,1)
    d8a1:	48 85 f6             	test   %rsi,%rsi
    d8a4:	74 46                	je     d8ec <dlmalloc+0x80c>
    d8a6:	48 c1 ee 03          	shr    $0x3,%rsi
    d8aa:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    d8b0:	48 8b 05 a9 d1 01 00 	mov    0x1d1a9(%rip),%rax        # 2aa60 <_gm_+0x20>
    d8b7:	48 89 f1             	mov    %rsi,%rcx
    d8ba:	8d 74 36 09          	lea    0x9(%rsi,%rsi,1),%esi
    d8be:	41 d3 e0             	shl    %cl,%r8d
    d8c1:	4d 8d 4c f5 00       	lea    0x0(%r13,%rsi,8),%r9
    d8c6:	44 85 c2             	test   %r8d,%edx
    d8c9:	0f 84 79 0f 00 00    	je     e848 <dlmalloc+0x1768>
    d8cf:	49 8b 51 10          	mov    0x10(%r9),%rdx
    d8d3:	4c 39 da             	cmp    %r11,%rdx
    d8d6:	0f 82 64 fe ff ff    	jb     d740 <dlmalloc+0x660>
    d8dc:	49 89 41 10          	mov    %rax,0x10(%r9)
    d8e0:	48 89 42 18          	mov    %rax,0x18(%rdx)
    d8e4:	48 89 50 10          	mov    %rdx,0x10(%rax)
    d8e8:	4c 89 48 18          	mov    %r9,0x18(%rax)
    d8ec:	48 89 3d 55 d1 01 00 	mov    %rdi,0x1d155(%rip)        # 2aa48 <_gm_+0x8>
    d8f3:	4c 89 15 66 d1 01 00 	mov    %r10,0x1d166(%rip)        # 2aa60 <_gm_+0x20>
    d8fa:	48 83 c3 10          	add    $0x10,%rbx
    d8fe:	0f 85 b3 f8 ff ff    	jne    d1b7 <dlmalloc+0xd7>
    d904:	48 8b 35 3d d1 01 00 	mov    0x1d13d(%rip),%rsi        # 2aa48 <_gm_+0x8>
    d90b:	e9 b0 f9 ff ff       	jmp    d2c0 <dlmalloc+0x1e0>
    d910:	0f b3 ca             	btr    %ecx,%edx
    d913:	89 15 27 d1 01 00    	mov    %edx,0x1d127(%rip)        # 2aa40 <_gm_>
    d919:	e9 6d f8 ff ff       	jmp    d18b <dlmalloc+0xab>
    d91e:	66 90                	xchg   %ax,%ax
    d920:	3d ff ff 00 00       	cmp    $0xffff,%eax
    d925:	0f 86 85 07 00 00    	jbe    e0b0 <dlmalloc+0xfd0>
    d92b:	48 8b 15 5e d4 01 00 	mov    0x1d45e(%rip),%rdx        # 2ad90 <_gm_+0x350>
    d932:	4d 89 e3             	mov    %r12,%r11
    d935:	41 ba 1f 00 00 00    	mov    $0x1f,%r10d
    d93b:	48 85 d2             	test   %rdx,%rdx
    d93e:	0f 85 d4 fb ff ff    	jne    d518 <dlmalloc+0x438>
    d944:	e9 77 f9 ff ff       	jmp    d2c0 <dlmalloc+0x1e0>
    d949:	d3 e7                	shl    %cl,%edi
    d94b:	f7 d7                	not    %edi
    d94d:	21 d7                	and    %edx,%edi
    d94f:	89 3d eb d0 01 00    	mov    %edi,0x1d0eb(%rip)        # 2aa40 <_gm_>
    d955:	e9 3d fa ff ff       	jmp    d397 <dlmalloc+0x2b7>
    d95a:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    d95f:	44 89 d1             	mov    %r10d,%ecx
    d962:	d3 e0                	shl    %cl,%eax
    d964:	44 21 c8             	and    %r9d,%eax
    d967:	0f 84 53 f9 ff ff    	je     d2c0 <dlmalloc+0x1e0>
    d96d:	89 c2                	mov    %eax,%edx
    d96f:	31 db                	xor    %ebx,%ebx
    d971:	f7 da                	neg    %edx
    d973:	21 d0                	and    %edx,%eax
    d975:	f3 0f bc c0          	tzcnt  %eax,%eax
    d979:	49 8b 8c c5 58 02 00 	mov    0x258(%r13,%rax,8),%rcx
    d980:	00 
    d981:	48 85 c9             	test   %rcx,%rcx
    d984:	0f 85 f9 fb ff ff    	jne    d583 <dlmalloc+0x4a3>
    d98a:	e9 31 f9 ff ff       	jmp    d2c0 <dlmalloc+0x1e0>
    d98f:	90                   	nop
    d990:	48 85 d2             	test   %rdx,%rdx
    d993:	0f 84 70 12 00 00    	je     ec09 <dlmalloc+0x1b29>
    d999:	48 8b 05 70 d4 01 00 	mov    0x1d470(%rip),%rax        # 2ae10 <mparams+0x10>
    d9a0:	49 8d 4c 04 5f       	lea    0x5f(%r12,%rax,1),%rcx
    d9a5:	48 f7 d8             	neg    %rax
    d9a8:	48 21 c1             	and    %rax,%rcx
    d9ab:	49 39 cc             	cmp    %rcx,%r12
    d9ae:	0f 83 99 f8 ff ff    	jae    d24d <dlmalloc+0x16d>
    d9b4:	48 8b 05 ed d3 01 00 	mov    0x1d3ed(%rip),%rax        # 2ada8 <_gm_+0x368>
    d9bb:	48 85 c0             	test   %rax,%rax
    d9be:	74 1d                	je     d9dd <dlmalloc+0x8fd>
    d9c0:	48 8b 15 d1 d3 01 00 	mov    0x1d3d1(%rip),%rdx        # 2ad98 <_gm_+0x358>
    d9c7:	48 8d 34 11          	lea    (%rcx,%rdx,1),%rsi
    d9cb:	48 39 f2             	cmp    %rsi,%rdx
    d9ce:	0f 83 79 f8 ff ff    	jae    d24d <dlmalloc+0x16d>
    d9d4:	48 39 f0             	cmp    %rsi,%rax
    d9d7:	0f 82 70 f8 ff ff    	jb     d24d <dlmalloc+0x16d>
    d9dd:	f6 05 cc d3 01 00 04 	testb  $0x4,0x1d3cc(%rip)        # 2adb0 <_gm_+0x370>
    d9e4:	0f 85 b9 00 00 00    	jne    daa3 <dlmalloc+0x9c3>
    d9ea:	48 8b 15 77 d0 01 00 	mov    0x1d077(%rip),%rdx        # 2aa68 <_gm_+0x28>
    d9f1:	48 85 d2             	test   %rdx,%rdx
    d9f4:	0f 84 b6 05 00 00    	je     dfb0 <dlmalloc+0xed0>
    d9fa:	4c 8d 35 b7 d3 01 00 	lea    0x1d3b7(%rip),%r14        # 2adb8 <_gm_+0x378>
    da01:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    da08:	49 8b 06             	mov    (%r14),%rax
    da0b:	48 39 c2             	cmp    %rax,%rdx
    da0e:	72 0d                	jb     da1d <dlmalloc+0x93d>
    da10:	49 03 46 08          	add    0x8(%r14),%rax
    da14:	48 39 c2             	cmp    %rax,%rdx
    da17:	0f 82 44 07 00 00    	jb     e161 <dlmalloc+0x1081>
    da1d:	4d 8b 76 10          	mov    0x10(%r14),%r14
    da21:	4d 85 f6             	test   %r14,%r14
    da24:	75 e2                	jne    da08 <dlmalloc+0x928>
    da26:	b8 01 00 00 00       	mov    $0x1,%eax
    da2b:	87 05 ff d3 01 00    	xchg   %eax,0x1d3ff(%rip)        # 2ae30 <malloc_global_mutex>
    da31:	85 c0                	test   %eax,%eax
    da33:	0f 84 8a 05 00 00    	je     dfc3 <dlmalloc+0xee3>
    da39:	45 31 f6             	xor    %r14d,%r14d
    da3c:	48 8d 15 ed d3 01 00 	lea    0x1d3ed(%rip),%rdx        # 2ae30 <malloc_global_mutex>
    da43:	be 01 00 00 00       	mov    $0x1,%esi
    da48:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    da4f:	00 
    da50:	8b 02                	mov    (%rdx),%eax
    da52:	85 c0                	test   %eax,%eax
    da54:	75 fa                	jne    da50 <dlmalloc+0x970>
    da56:	89 f0                	mov    %esi,%eax
    da58:	87 05 d2 d3 01 00    	xchg   %eax,0x1d3d2(%rip)        # 2ae30 <malloc_global_mutex>
    da5e:	85 c0                	test   %eax,%eax
    da60:	75 ee                	jne    da50 <dlmalloc+0x970>
    da62:	4d 85 f6             	test   %r14,%r14
    da65:	0f 84 58 05 00 00    	je     dfc3 <dlmalloc+0xee3>
    da6b:	48 8b 05 9e d3 01 00 	mov    0x1d39e(%rip),%rax        # 2ae10 <mparams+0x10>
    da72:	4c 8d 78 5f          	lea    0x5f(%rax),%r15
    da76:	4c 2b 3d d3 cf 01 00 	sub    0x1cfd3(%rip),%r15        # 2aa50 <_gm_+0x10>
    da7d:	48 f7 d8             	neg    %rax
    da80:	4d 01 e7             	add    %r12,%r15
    da83:	49 21 c7             	and    %rax,%r15
    da86:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
    da8d:	ff ff 7f 
    da90:	4c 39 f8             	cmp    %r15,%rax
    da93:	0f 83 73 06 00 00    	jae    e10c <dlmalloc+0x102c>
    da99:	c7 05 8d d3 01 00 00 	movl   $0x0,0x1d38d(%rip)        # 2ae30 <malloc_global_mutex>
    daa0:	00 00 00 
    daa3:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
    daaa:	ff ff 7f 
    daad:	48 39 c8             	cmp    %rcx,%rax
    dab0:	73 16                	jae    dac8 <dlmalloc+0x9e8>
    dab2:	e8 b9 33 00 00       	call   10e70 <__errno_location>
    dab7:	31 db                	xor    %ebx,%ebx
    dab9:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
    dabf:	e9 1a f7 ff ff       	jmp    d1de <dlmalloc+0xfe>
    dac4:	0f 1f 40 00          	nopl   0x0(%rax)
    dac8:	b8 01 00 00 00       	mov    $0x1,%eax
    dacd:	87 05 5d d3 01 00    	xchg   %eax,0x1d35d(%rip)        # 2ae30 <malloc_global_mutex>
    dad3:	48 8d 15 56 d3 01 00 	lea    0x1d356(%rip),%rdx        # 2ae30 <malloc_global_mutex>
    dada:	be 01 00 00 00       	mov    $0x1,%esi
    dadf:	85 c0                	test   %eax,%eax
    dae1:	0f 85 11 03 00 00    	jne    ddf8 <dlmalloc+0xd18>
    dae7:	48 89 cf             	mov    %rcx,%rdi
    daea:	e8 11 eb ff ff       	call   c600 <sbrk>
    daef:	31 ff                	xor    %edi,%edi
    daf1:	48 89 c3             	mov    %rax,%rbx
    daf4:	e8 07 eb ff ff       	call   c600 <sbrk>
    daf9:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
    dafd:	0f 95 c1             	setne  %cl
    db00:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    db04:	c7 05 22 d3 01 00 00 	movl   $0x0,0x1d322(%rip)        # 2ae30 <malloc_global_mutex>
    db0b:	00 00 00 
    db0e:	0f 95 c2             	setne  %dl
    db11:	84 d1                	test   %dl,%cl
    db13:	74 9d                	je     dab2 <dlmalloc+0x9d2>
    db15:	48 39 c3             	cmp    %rax,%rbx
    db18:	73 98                	jae    dab2 <dlmalloc+0x9d2>
    db1a:	48 29 d8             	sub    %rbx,%rax
    db1d:	49 89 c7             	mov    %rax,%r15
    db20:	49 8d 44 24 50       	lea    0x50(%r12),%rax
    db25:	4c 39 f8             	cmp    %r15,%rax
    db28:	73 88                	jae    dab2 <dlmalloc+0x9d2>
    db2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    db30:	48 8b 05 61 d2 01 00 	mov    0x1d261(%rip),%rax        # 2ad98 <_gm_+0x358>
    db37:	4c 01 f8             	add    %r15,%rax
    db3a:	48 39 05 5f d2 01 00 	cmp    %rax,0x1d25f(%rip)        # 2ada0 <_gm_+0x360>
    db41:	48 89 05 50 d2 01 00 	mov    %rax,0x1d250(%rip)        # 2ad98 <_gm_+0x358>
    db48:	73 07                	jae    db51 <dlmalloc+0xa71>
    db4a:	48 89 05 4f d2 01 00 	mov    %rax,0x1d24f(%rip)        # 2ada0 <_gm_+0x360>
    db51:	48 8b 35 10 cf 01 00 	mov    0x1cf10(%rip),%rsi        # 2aa68 <_gm_+0x28>
    db58:	48 8d 05 59 d2 01 00 	lea    0x1d259(%rip),%rax        # 2adb8 <_gm_+0x378>
    db5f:	48 85 f6             	test   %rsi,%rsi
    db62:	75 15                	jne    db79 <dlmalloc+0xa99>
    db64:	e9 a7 02 00 00       	jmp    de10 <dlmalloc+0xd30>
    db69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    db70:	48 8b 40 10          	mov    0x10(%rax),%rax
    db74:	48 85 c0             	test   %rax,%rax
    db77:	74 27                	je     dba0 <dlmalloc+0xac0>
    db79:	48 8b 10             	mov    (%rax),%rdx
    db7c:	48 8b 48 08          	mov    0x8(%rax),%rcx
    db80:	48 8d 3c 0a          	lea    (%rdx,%rcx,1),%rdi
    db84:	48 39 fb             	cmp    %rdi,%rbx
    db87:	75 e7                	jne    db70 <dlmalloc+0xa90>
    db89:	f6 40 18 08          	testb  $0x8,0x18(%rax)
    db8d:	75 11                	jne    dba0 <dlmalloc+0xac0>
    db8f:	48 39 d6             	cmp    %rdx,%rsi
    db92:	72 0c                	jb     dba0 <dlmalloc+0xac0>
    db94:	48 39 de             	cmp    %rbx,%rsi
    db97:	0f 82 ed 09 00 00    	jb     e58a <dlmalloc+0x14aa>
    db9d:	0f 1f 00             	nopl   (%rax)
    dba0:	48 3b 1d b1 ce 01 00 	cmp    0x1ceb1(%rip),%rbx        # 2aa58 <_gm_+0x18>
    dba7:	73 07                	jae    dbb0 <dlmalloc+0xad0>
    dba9:	48 89 1d a8 ce 01 00 	mov    %rbx,0x1cea8(%rip)        # 2aa58 <_gm_+0x18>
    dbb0:	4a 8d 14 3b          	lea    (%rbx,%r15,1),%rdx
    dbb4:	48 8d 05 fd d1 01 00 	lea    0x1d1fd(%rip),%rax        # 2adb8 <_gm_+0x378>
    dbbb:	eb 10                	jmp    dbcd <dlmalloc+0xaed>
    dbbd:	0f 1f 00             	nopl   (%rax)
    dbc0:	48 8b 40 10          	mov    0x10(%rax),%rax
    dbc4:	48 85 c0             	test   %rax,%rax
    dbc7:	0f 84 b3 05 00 00    	je     e180 <dlmalloc+0x10a0>
    dbcd:	48 39 10             	cmp    %rdx,(%rax)
    dbd0:	75 ee                	jne    dbc0 <dlmalloc+0xae0>
    dbd2:	44 8b 48 18          	mov    0x18(%rax),%r9d
    dbd6:	49 89 d8             	mov    %rbx,%r8
    dbd9:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
    dbdd:	41 83 e0 0f          	and    $0xf,%r8d
    dbe1:	41 83 e1 08          	and    $0x8,%r9d
    dbe5:	0f 84 a5 05 00 00    	je     e190 <dlmalloc+0x10b0>
    dbeb:	48 8d 05 c6 d1 01 00 	lea    0x1d1c6(%rip),%rax        # 2adb8 <_gm_+0x378>
    dbf2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    dbf8:	48 8b 10             	mov    (%rax),%rdx
    dbfb:	48 39 d6             	cmp    %rdx,%rsi
    dbfe:	72 09                	jb     dc09 <dlmalloc+0xb29>
    dc00:	48 03 50 08          	add    0x8(%rax),%rdx
    dc04:	48 39 d6             	cmp    %rdx,%rsi
    dc07:	72 19                	jb     dc22 <dlmalloc+0xb42>
    dc09:	48 8b 40 10          	mov    0x10(%rax),%rax
    dc0d:	48 85 c0             	test   %rax,%rax
    dc10:	75 e6                	jne    dbf8 <dlmalloc+0xb18>
    dc12:	48 8b 14 25 08 00 00 	mov    0x8,%rdx
    dc19:	00 
    dc1a:	48 03 14 25 00 00 00 	add    0x0,%rdx
    dc21:	00 
    dc22:	48 8d 42 b1          	lea    -0x4f(%rdx),%rax
    dc26:	48 c7 c1 a1 ff ff ff 	mov    $0xffffffffffffffa1,%rcx
    dc2d:	a8 0f                	test   $0xf,%al
    dc2f:	74 0a                	je     dc3b <dlmalloc+0xb5b>
    dc31:	48 f7 d8             	neg    %rax
    dc34:	83 e0 0f             	and    $0xf,%eax
    dc37:	48 8d 48 a1          	lea    -0x5f(%rax),%rcx
    dc3b:	48 01 d1             	add    %rdx,%rcx
    dc3e:	48 8d 46 20          	lea    0x20(%rsi),%rax
    dc42:	4d 8d 4f b0          	lea    -0x50(%r15),%r9
    dc46:	48 39 c1             	cmp    %rax,%rcx
    dc49:	48 0f 42 ce          	cmovb  %rsi,%rcx
    dc4d:	4c 8d 51 10          	lea    0x10(%rcx),%r10
    dc51:	4d 85 c0             	test   %r8,%r8
    dc54:	0f 84 86 02 00 00    	je     dee0 <dlmalloc+0xe00>
    dc5a:	48 f7 df             	neg    %rdi
    dc5d:	4c 89 c8             	mov    %r9,%rax
    dc60:	83 e7 0f             	and    $0xf,%edi
    dc63:	4c 8d 04 3b          	lea    (%rbx,%rdi,1),%r8
    dc67:	48 29 f8             	sub    %rdi,%rax
    dc6a:	48 89 05 df cd 01 00 	mov    %rax,0x1cddf(%rip)        # 2aa50 <_gm_+0x10>
    dc71:	48 83 c8 01          	or     $0x1,%rax
    dc75:	f3 0f 6f 15 3b d1 01 	movdqu 0x1d13b(%rip),%xmm2        # 2adb8 <_gm_+0x378>
    dc7c:	00 
    dc7d:	4c 89 05 e4 cd 01 00 	mov    %r8,0x1cde4(%rip)        # 2aa68 <_gm_+0x28>
    dc84:	49 89 40 08          	mov    %rax,0x8(%r8)
    dc88:	48 8b 05 91 d1 01 00 	mov    0x1d191(%rip),%rax        # 2ae20 <mparams+0x20>
    dc8f:	4a c7 44 0b 08 50 00 	movq   $0x50,0x8(%rbx,%r9,1)
    dc96:	00 00 
    dc98:	48 89 05 d1 cd 01 00 	mov    %rax,0x1cdd1(%rip)        # 2aa70 <_gm_+0x30>
    dc9f:	48 8b 05 5a d1 01 00 	mov    0x1d15a(%rip),%rax        # 2ae00 <mparams>
    dca6:	0f 11 51 10          	movups %xmm2,0x10(%rcx)
    dcaa:	f3 0f 6f 1d 16 d1 01 	movdqu 0x1d116(%rip),%xmm3        # 2adc8 <_gm_+0x388>
    dcb1:	00 
    dcb2:	4c 31 e8             	xor    %r13,%rax
    dcb5:	48 c7 41 08 33 00 00 	movq   $0x33,0x8(%rcx)
    dcbc:	00 
    dcbd:	48 89 41 30          	mov    %rax,0x30(%rcx)
    dcc1:	48 8d 41 38          	lea    0x38(%rcx),%rax
    dcc5:	48 89 c7             	mov    %rax,%rdi
    dcc8:	48 8d 41 40          	lea    0x40(%rcx),%rax
    dccc:	0f 11 59 20          	movups %xmm3,0x20(%rcx)
    dcd0:	48 f7 d7             	not    %rdi
    dcd3:	48 89 1d de d0 01 00 	mov    %rbx,0x1d0de(%rip)        # 2adb8 <_gm_+0x378>
    dcda:	48 01 d7             	add    %rdx,%rdi
    dcdd:	4c 89 3d dc d0 01 00 	mov    %r15,0x1d0dc(%rip)        # 2adc0 <_gm_+0x380>
    dce4:	48 c1 ef 03          	shr    $0x3,%rdi
    dce8:	4c 89 15 d9 d0 01 00 	mov    %r10,0x1d0d9(%rip)        # 2adc8 <_gm_+0x388>
    dcef:	c7 05 d7 d0 01 00 00 	movl   $0x0,0x1d0d7(%rip)        # 2add0 <_gm_+0x390>
    dcf6:	00 00 00 
    dcf9:	83 e7 01             	and    $0x1,%edi
    dcfc:	48 c7 41 38 0b 00 00 	movq   $0xb,0x38(%rcx)
    dd03:	00 
    dd04:	48 39 d0             	cmp    %rdx,%rax
    dd07:	73 2f                	jae    dd38 <dlmalloc+0xc58>
    dd09:	48 85 ff             	test   %rdi,%rdi
    dd0c:	74 12                	je     dd20 <dlmalloc+0xc40>
    dd0e:	48 c7 00 0b 00 00 00 	movq   $0xb,(%rax)
    dd15:	48 8d 41 48          	lea    0x48(%rcx),%rax
    dd19:	48 39 d0             	cmp    %rdx,%rax
    dd1c:	73 1a                	jae    dd38 <dlmalloc+0xc58>
    dd1e:	66 90                	xchg   %ax,%ax
    dd20:	48 c7 00 0b 00 00 00 	movq   $0xb,(%rax)
    dd27:	48 83 c0 10          	add    $0x10,%rax
    dd2b:	48 c7 40 f8 0b 00 00 	movq   $0xb,-0x8(%rax)
    dd32:	00 
    dd33:	48 39 d0             	cmp    %rdx,%rax
    dd36:	72 e8                	jb     dd20 <dlmalloc+0xc40>
    dd38:	48 39 ce             	cmp    %rcx,%rsi
    dd3b:	0f 84 5f 02 00 00    	je     dfa0 <dlmalloc+0xec0>
    dd41:	48 89 ca             	mov    %rcx,%rdx
    dd44:	48 83 61 08 fe       	andq   $0xfffffffffffffffe,0x8(%rcx)
    dd49:	48 29 f2             	sub    %rsi,%rdx
    dd4c:	48 89 d0             	mov    %rdx,%rax
    dd4f:	48 83 c8 01          	or     $0x1,%rax
    dd53:	48 89 46 08          	mov    %rax,0x8(%rsi)
    dd57:	48 89 11             	mov    %rdx,(%rcx)
    dd5a:	48 89 d1             	mov    %rdx,%rcx
    dd5d:	48 c1 e9 03          	shr    $0x3,%rcx
    dd61:	48 81 fa ff 00 00 00 	cmp    $0xff,%rdx
    dd68:	0f 87 92 01 00 00    	ja     df00 <dlmalloc+0xe20>
    dd6e:	8d 44 09 09          	lea    0x9(%rcx,%rcx,1),%eax
    dd72:	8b 3d c8 cc 01 00    	mov    0x1ccc8(%rip),%edi        # 2aa40 <_gm_>
    dd78:	49 8d 54 c5 00       	lea    0x0(%r13,%rax,8),%rdx
    dd7d:	b8 01 00 00 00       	mov    $0x1,%eax
    dd82:	d3 e0                	shl    %cl,%eax
    dd84:	85 c7                	test   %eax,%edi
    dd86:	0f 85 a3 f9 ff ff    	jne    d72f <dlmalloc+0x64f>
    dd8c:	09 c7                	or     %eax,%edi
    dd8e:	48 89 d0             	mov    %rdx,%rax
    dd91:	89 3d a9 cc 01 00    	mov    %edi,0x1cca9(%rip)        # 2aa40 <_gm_>
    dd97:	48 89 72 10          	mov    %rsi,0x10(%rdx)
    dd9b:	48 89 70 18          	mov    %rsi,0x18(%rax)
    dd9f:	48 89 56 18          	mov    %rdx,0x18(%rsi)
    dda3:	48 89 46 10          	mov    %rax,0x10(%rsi)
    dda7:	48 8b 05 a2 cc 01 00 	mov    0x1cca2(%rip),%rax        # 2aa50 <_gm_+0x10>
    ddae:	49 39 c4             	cmp    %rax,%r12
    ddb1:	0f 83 fb fc ff ff    	jae    dab2 <dlmalloc+0x9d2>
    ddb7:	48 8b 1d aa cc 01 00 	mov    0x1ccaa(%rip),%rbx        # 2aa68 <_gm_+0x28>
    ddbe:	4c 29 e0             	sub    %r12,%rax
    ddc1:	4c 33 2d 38 d0 01 00 	xor    0x1d038(%rip),%r13        # 2ae00 <mparams>
    ddc8:	48 89 05 81 cc 01 00 	mov    %rax,0x1cc81(%rip)        # 2aa50 <_gm_+0x10>
    ddcf:	48 83 c8 01          	or     $0x1,%rax
    ddd3:	4a 8d 14 23          	lea    (%rbx,%r12,1),%rdx
    ddd7:	49 83 cc 03          	or     $0x3,%r12
    dddb:	48 89 15 86 cc 01 00 	mov    %rdx,0x1cc86(%rip)        # 2aa68 <_gm_+0x28>
    dde2:	48 89 42 08          	mov    %rax,0x8(%rdx)
    dde6:	4c 89 63 08          	mov    %r12,0x8(%rbx)
    ddea:	4c 89 2a             	mov    %r13,(%rdx)
    dded:	e9 20 f5 ff ff       	jmp    d312 <dlmalloc+0x232>
    ddf2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    ddf8:	8b 02                	mov    (%rdx),%eax
    ddfa:	85 c0                	test   %eax,%eax
    ddfc:	75 fa                	jne    ddf8 <dlmalloc+0xd18>
    ddfe:	89 f0                	mov    %esi,%eax
    de00:	87 05 2a d0 01 00    	xchg   %eax,0x1d02a(%rip)        # 2ae30 <malloc_global_mutex>
    de06:	85 c0                	test   %eax,%eax
    de08:	75 ee                	jne    ddf8 <dlmalloc+0xd18>
    de0a:	e9 d8 fc ff ff       	jmp    dae7 <dlmalloc+0xa07>
    de0f:	90                   	nop
    de10:	48 8b 05 41 cc 01 00 	mov    0x1cc41(%rip),%rax        # 2aa58 <_gm_+0x18>
    de17:	48 85 c0             	test   %rax,%rax
    de1a:	74 05                	je     de21 <dlmalloc+0xd41>
    de1c:	48 39 c3             	cmp    %rax,%rbx
    de1f:	73 07                	jae    de28 <dlmalloc+0xd48>
    de21:	48 89 1d 30 cc 01 00 	mov    %rbx,0x1cc30(%rip)        # 2aa58 <_gm_+0x18>
    de28:	48 8b 05 d1 cf 01 00 	mov    0x1cfd1(%rip),%rax        # 2ae00 <mparams>
    de2f:	48 89 1d 82 cf 01 00 	mov    %rbx,0x1cf82(%rip)        # 2adb8 <_gm_+0x378>
    de36:	4c 89 3d 83 cf 01 00 	mov    %r15,0x1cf83(%rip)        # 2adc0 <_gm_+0x380>
    de3d:	c7 05 89 cf 01 00 00 	movl   $0x0,0x1cf89(%rip)        # 2add0 <_gm_+0x390>
    de44:	00 00 00 
    de47:	48 c7 05 26 cc 01 00 	movq   $0xffffffffffffffff,0x1cc26(%rip)        # 2aa78 <_gm_+0x38>
    de4e:	ff ff ff ff 
    de52:	48 89 05 27 cc 01 00 	mov    %rax,0x1cc27(%rip)        # 2aa80 <_gm_+0x40>
    de59:	48 8d 05 28 cc 01 00 	lea    0x1cc28(%rip),%rax        # 2aa88 <_gm_+0x48>
    de60:	48 8d 90 00 02 00 00 	lea    0x200(%rax),%rdx
    de67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    de6e:	00 00 
    de70:	66 48 0f 6e c0       	movq   %rax,%xmm0
    de75:	48 83 c0 10          	add    $0x10,%rax
    de79:	66 0f 6c c0          	punpcklqdq %xmm0,%xmm0
    de7d:	0f 11 00             	movups %xmm0,(%rax)
    de80:	48 39 d0             	cmp    %rdx,%rax
    de83:	75 eb                	jne    de70 <dlmalloc+0xd90>
    de85:	49 83 ef 50          	sub    $0x50,%r15
    de89:	48 8d 53 10          	lea    0x10(%rbx),%rdx
    de8d:	f6 c3 0f             	test   $0xf,%bl
    de90:	0f 84 aa 02 00 00    	je     e140 <dlmalloc+0x1060>
    de96:	48 f7 da             	neg    %rdx
    de99:	4c 89 f8             	mov    %r15,%rax
    de9c:	83 e2 0f             	and    $0xf,%edx
    de9f:	48 8d 0c 13          	lea    (%rbx,%rdx,1),%rcx
    dea3:	48 29 d0             	sub    %rdx,%rax
    dea6:	48 89 c2             	mov    %rax,%rdx
    dea9:	48 89 0d b8 cb 01 00 	mov    %rcx,0x1cbb8(%rip)        # 2aa68 <_gm_+0x28>
    deb0:	48 83 ca 01          	or     $0x1,%rdx
    deb4:	48 89 05 95 cb 01 00 	mov    %rax,0x1cb95(%rip)        # 2aa50 <_gm_+0x10>
    debb:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    debf:	48 8b 15 5a cf 01 00 	mov    0x1cf5a(%rip),%rdx        # 2ae20 <mparams+0x20>
    dec6:	4a c7 44 3b 08 50 00 	movq   $0x50,0x8(%rbx,%r15,1)
    decd:	00 00 
    decf:	48 89 15 9a cb 01 00 	mov    %rdx,0x1cb9a(%rip)        # 2aa70 <_gm_+0x30>
    ded6:	e9 d3 fe ff ff       	jmp    ddae <dlmalloc+0xcce>
    dedb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    dee0:	4c 89 c8             	mov    %r9,%rax
    dee3:	49 89 d8             	mov    %rbx,%r8
    dee6:	e9 7f fd ff ff       	jmp    dc6a <dlmalloc+0xb8a>
    deeb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    def0:	48 83 ce 03          	or     $0x3,%rsi
    def4:	e9 b9 f5 ff ff       	jmp    d4b2 <dlmalloc+0x3d2>
    def9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    df00:	48 89 d0             	mov    %rdx,%rax
    df03:	48 c1 e8 08          	shr    $0x8,%rax
    df07:	89 c1                	mov    %eax,%ecx
    df09:	85 c0                	test   %eax,%eax
    df0b:	0f 84 60 03 00 00    	je     e271 <dlmalloc+0x1191>
    df11:	3d ff ff 00 00       	cmp    $0xffff,%eax
    df16:	0f 87 ad 05 00 00    	ja     e4c9 <dlmalloc+0x13e9>
    df1c:	0f bd c1             	bsr    %ecx,%eax
    df1f:	b9 26 00 00 00       	mov    $0x26,%ecx
    df24:	48 89 d3             	mov    %rdx,%rbx
    df27:	bf 1f 00 00 00       	mov    $0x1f,%edi
    df2c:	83 f0 1f             	xor    $0x1f,%eax
    df2f:	29 c1                	sub    %eax,%ecx
    df31:	29 c7                	sub    %eax,%edi
    df33:	48 d3 eb             	shr    %cl,%rbx
    df36:	48 89 d9             	mov    %rbx,%rcx
    df39:	83 e1 01             	and    $0x1,%ecx
    df3c:	8d 0c 79             	lea    (%rcx,%rdi,2),%ecx
    df3f:	bf 01 00 00 00       	mov    $0x1,%edi
    df44:	44 8d 41 4b          	lea    0x4b(%rcx),%r8d
    df48:	d3 e7                	shl    %cl,%edi
    df4a:	49 c1 e0 03          	shl    $0x3,%r8
    df4e:	8b 05 f0 ca 01 00    	mov    0x1caf0(%rip),%eax        # 2aa44 <_gm_+0x4>
    df54:	66 48 0f 6e ce       	movq   %rsi,%xmm1
    df59:	66 0f ef c0          	pxor   %xmm0,%xmm0
    df5d:	89 4e 38             	mov    %ecx,0x38(%rsi)
    df60:	66 0f 6c c9          	punpcklqdq %xmm1,%xmm1
    df64:	0f 11 46 20          	movups %xmm0,0x20(%rsi)
    df68:	85 f8                	test   %edi,%eax
    df6a:	0f 85 11 03 00 00    	jne    e281 <dlmalloc+0x11a1>
    df70:	09 f8                	or     %edi,%eax
    df72:	4d 01 e8             	add    %r13,%r8
    df75:	49 89 b4 cd 58 02 00 	mov    %rsi,0x258(%r13,%rcx,8)
    df7c:	00 
    df7d:	89 05 c1 ca 01 00    	mov    %eax,0x1cac1(%rip)        # 2aa44 <_gm_+0x4>
    df83:	48 8b 05 c6 ca 01 00 	mov    0x1cac6(%rip),%rax        # 2aa50 <_gm_+0x10>
    df8a:	4c 89 46 30          	mov    %r8,0x30(%rsi)
    df8e:	0f 11 4e 10          	movups %xmm1,0x10(%rsi)
    df92:	e9 17 fe ff ff       	jmp    ddae <dlmalloc+0xcce>
    df97:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    df9e:	00 00 
    dfa0:	48 8b 05 a9 ca 01 00 	mov    0x1caa9(%rip),%rax        # 2aa50 <_gm_+0x10>
    dfa7:	e9 02 fe ff ff       	jmp    ddae <dlmalloc+0xcce>
    dfac:	0f 1f 40 00          	nopl   0x0(%rax)
    dfb0:	b8 01 00 00 00       	mov    $0x1,%eax
    dfb5:	87 05 75 ce 01 00    	xchg   %eax,0x1ce75(%rip)        # 2ae30 <malloc_global_mutex>
    dfbb:	85 c0                	test   %eax,%eax
    dfbd:	0f 85 76 fa ff ff    	jne    da39 <dlmalloc+0x959>
    dfc3:	31 ff                	xor    %edi,%edi
    dfc5:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    dfca:	e8 31 e6 ff ff       	call   c600 <sbrk>
    dfcf:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    dfd4:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    dfd8:	49 89 c6             	mov    %rax,%r14
    dfdb:	0f 84 b8 fa ff ff    	je     da99 <dlmalloc+0x9b9>
    dfe1:	48 8b 15 20 ce 01 00 	mov    0x1ce20(%rip),%rdx        # 2ae08 <mparams+0x8>
    dfe8:	49 89 cf             	mov    %rcx,%r15
    dfeb:	48 8d 42 ff          	lea    -0x1(%rdx),%rax
    dfef:	49 85 c6             	test   %rax,%r14
    dff2:	74 0f                	je     e003 <dlmalloc+0xf23>
    dff4:	4c 01 f0             	add    %r14,%rax
    dff7:	48 f7 da             	neg    %rdx
    dffa:	4d 29 f7             	sub    %r14,%r15
    dffd:	48 21 d0             	and    %rdx,%rax
    e000:	49 01 c7             	add    %rax,%r15
    e003:	48 8b 05 8e cd 01 00 	mov    0x1cd8e(%rip),%rax        # 2ad98 <_gm_+0x358>
    e00a:	4d 39 fc             	cmp    %r15,%r12
    e00d:	0f 83 86 fa ff ff    	jae    da99 <dlmalloc+0x9b9>
    e013:	48 ba fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rdx
    e01a:	ff ff 7f 
    e01d:	4c 39 fa             	cmp    %r15,%rdx
    e020:	0f 82 73 fa ff ff    	jb     da99 <dlmalloc+0x9b9>
    e026:	48 8b 15 7b cd 01 00 	mov    0x1cd7b(%rip),%rdx        # 2ada8 <_gm_+0x368>
    e02d:	48 85 d2             	test   %rdx,%rdx
    e030:	74 16                	je     e048 <dlmalloc+0xf68>
    e032:	4a 8d 34 38          	lea    (%rax,%r15,1),%rsi
    e036:	48 39 f0             	cmp    %rsi,%rax
    e039:	0f 83 5a fa ff ff    	jae    da99 <dlmalloc+0x9b9>
    e03f:	48 39 f2             	cmp    %rsi,%rdx
    e042:	0f 82 51 fa ff ff    	jb     da99 <dlmalloc+0x9b9>
    e048:	4c 89 ff             	mov    %r15,%rdi
    e04b:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    e050:	e8 ab e5 ff ff       	call   c600 <sbrk>
    e055:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    e05a:	49 39 c6             	cmp    %rax,%r14
    e05d:	48 89 c3             	mov    %rax,%rbx
    e060:	74 3c                	je     e09e <dlmalloc+0xfbe>
    e062:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
    e066:	0f 84 2d fa ff ff    	je     da99 <dlmalloc+0x9b9>
    e06c:	49 8d 44 24 60       	lea    0x60(%r12),%rax
    e071:	49 39 c7             	cmp    %rax,%r15
    e074:	73 28                	jae    e09e <dlmalloc+0xfbe>
    e076:	48 8b 05 93 cd 01 00 	mov    0x1cd93(%rip),%rax        # 2ae10 <mparams+0x10>
    e07d:	4d 8d 74 04 5f       	lea    0x5f(%r12,%rax,1),%r14
    e082:	48 f7 d8             	neg    %rax
    e085:	4d 29 fe             	sub    %r15,%r14
    e088:	49 21 c6             	and    %rax,%r14
    e08b:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
    e092:	ff ff 7f 
    e095:	4c 39 f0             	cmp    %r14,%rax
    e098:	0f 83 91 08 00 00    	jae    e92f <dlmalloc+0x184f>
    e09e:	c7 05 88 cd 01 00 00 	movl   $0x0,0x1cd88(%rip)        # 2ae30 <malloc_global_mutex>
    e0a5:	00 00 00 
    e0a8:	e9 83 fa ff ff       	jmp    db30 <dlmalloc+0xa50>
    e0ad:	0f 1f 00             	nopl   (%rax)
    e0b0:	44 0f bd d0          	bsr    %eax,%r10d
    e0b4:	b9 26 00 00 00       	mov    $0x26,%ecx
    e0b9:	4c 89 e0             	mov    %r12,%rax
    e0bc:	ba 1f 00 00 00       	mov    $0x1f,%edx
    e0c1:	41 83 f2 1f          	xor    $0x1f,%r10d
    e0c5:	44 29 d1             	sub    %r10d,%ecx
    e0c8:	44 29 d2             	sub    %r10d,%edx
    e0cb:	48 d3 e8             	shr    %cl,%rax
    e0ce:	83 e0 01             	and    $0x1,%eax
    e0d1:	8d 04 50             	lea    (%rax,%rdx,2),%eax
    e0d4:	49 8b 94 c5 58 02 00 	mov    0x258(%r13,%rax,8),%rdx
    e0db:	00 
    e0dc:	49 89 c2             	mov    %rax,%r10
    e0df:	48 85 d2             	test   %rdx,%rdx
    e0e2:	0f 84 72 f8 ff ff    	je     d95a <dlmalloc+0x87a>
    e0e8:	83 f8 1f             	cmp    $0x1f,%eax
    e0eb:	0f 84 d0 09 00 00    	je     eac1 <dlmalloc+0x19e1>
    e0f1:	d1 e8                	shr    %eax
    e0f3:	b9 39 00 00 00       	mov    $0x39,%ecx
    e0f8:	29 c1                	sub    %eax,%ecx
    e0fa:	e9 13 f4 ff ff       	jmp    d512 <dlmalloc+0x432>
    e0ff:	48 89 d3             	mov    %rdx,%rbx
    e102:	31 ff                	xor    %edi,%edi
    e104:	48 89 d1             	mov    %rdx,%rcx
    e107:	e9 77 f4 ff ff       	jmp    d583 <dlmalloc+0x4a3>
    e10c:	4c 89 ff             	mov    %r15,%rdi
    e10f:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    e114:	e8 e7 e4 ff ff       	call   c600 <sbrk>
    e119:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    e11e:	48 89 c3             	mov    %rax,%rbx
    e121:	49 8b 46 08          	mov    0x8(%r14),%rax
    e125:	49 03 06             	add    (%r14),%rax
    e128:	48 39 c3             	cmp    %rax,%rbx
    e12b:	0f 85 31 ff ff ff    	jne    e062 <dlmalloc+0xf82>
    e131:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
    e135:	0f 85 63 ff ff ff    	jne    e09e <dlmalloc+0xfbe>
    e13b:	e9 59 f9 ff ff       	jmp    da99 <dlmalloc+0x9b9>
    e140:	4c 89 f8             	mov    %r15,%rax
    e143:	48 89 d9             	mov    %rbx,%rcx
    e146:	e9 5b fd ff ff       	jmp    dea6 <dlmalloc+0xdc6>
    e14b:	83 c9 03             	or     $0x3,%ecx
    e14e:	89 ce                	mov    %ecx,%esi
    e150:	48 89 73 08          	mov    %rsi,0x8(%rbx)
    e154:	48 89 38             	mov    %rdi,(%rax)
    e157:	48 83 48 08 01       	orq    $0x1,0x8(%rax)
    e15c:	e9 b1 f1 ff ff       	jmp    d312 <dlmalloc+0x232>
    e161:	b8 01 00 00 00       	mov    $0x1,%eax
    e166:	87 05 c4 cc 01 00    	xchg   %eax,0x1ccc4(%rip)        # 2ae30 <malloc_global_mutex>
    e16c:	85 c0                	test   %eax,%eax
    e16e:	0f 84 f7 f8 ff ff    	je     da6b <dlmalloc+0x98b>
    e174:	e9 c3 f8 ff ff       	jmp    da3c <dlmalloc+0x95c>
    e179:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    e180:	49 89 d8             	mov    %rbx,%r8
    e183:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
    e187:	41 83 e0 0f          	and    $0xf,%r8d
    e18b:	e9 5b fa ff ff       	jmp    dbeb <dlmalloc+0xb0b>
    e190:	4c 01 78 08          	add    %r15,0x8(%rax)
    e194:	49 89 d2             	mov    %rdx,%r10
    e197:	48 89 18             	mov    %rbx,(%rax)
    e19a:	4d 85 c0             	test   %r8,%r8
    e19d:	74 09                	je     e1a8 <dlmalloc+0x10c8>
    e19f:	48 f7 df             	neg    %rdi
    e1a2:	83 e7 0f             	and    $0xf,%edi
    e1a5:	48 01 fb             	add    %rdi,%rbx
    e1a8:	48 8d 42 10          	lea    0x10(%rdx),%rax
    e1ac:	f6 c2 0f             	test   $0xf,%dl
    e1af:	74 0a                	je     e1bb <dlmalloc+0x10db>
    e1b1:	48 f7 d8             	neg    %rax
    e1b4:	83 e0 0f             	and    $0xf,%eax
    e1b7:	4c 8d 14 02          	lea    (%rdx,%rax,1),%r10
    e1bb:	48 8b 0d 3e cc 01 00 	mov    0x1cc3e(%rip),%rcx        # 2ae00 <mparams>
    e1c2:	4c 89 d0             	mov    %r10,%rax
    e1c5:	4a 8d 14 23          	lea    (%rbx,%r12,1),%rdx
    e1c9:	48 29 d8             	sub    %rbx,%rax
    e1cc:	4c 29 e0             	sub    %r12,%rax
    e1cf:	4c 31 e9             	xor    %r13,%rcx
    e1d2:	49 83 cc 03          	or     $0x3,%r12
    e1d6:	4c 89 63 08          	mov    %r12,0x8(%rbx)
    e1da:	48 89 0a             	mov    %rcx,(%rdx)
    e1dd:	4c 39 d6             	cmp    %r10,%rsi
    e1e0:	0f 84 38 04 00 00    	je     e61e <dlmalloc+0x153e>
    e1e6:	4c 39 15 73 c8 01 00 	cmp    %r10,0x1c873(%rip)        # 2aa60 <_gm_+0x20>
    e1ed:	0f 84 49 05 00 00    	je     e73c <dlmalloc+0x165c>
    e1f3:	49 8b 7a 08          	mov    0x8(%r10),%rdi
    e1f7:	4c 89 d1             	mov    %r10,%rcx
    e1fa:	48 89 fe             	mov    %rdi,%rsi
    e1fd:	83 e6 03             	and    $0x3,%esi
    e200:	48 83 fe 01          	cmp    $0x1,%rsi
    e204:	0f 84 a2 05 00 00    	je     e7ac <dlmalloc+0x16cc>
    e20a:	48 89 c6             	mov    %rax,%rsi
    e20d:	48 83 e7 fe          	and    $0xfffffffffffffffe,%rdi
    e211:	48 83 ce 01          	or     $0x1,%rsi
    e215:	49 89 7a 08          	mov    %rdi,0x8(%r10)
    e219:	48 89 72 08          	mov    %rsi,0x8(%rdx)
    e21d:	48 89 01             	mov    %rax,(%rcx)
    e220:	48 89 c1             	mov    %rax,%rcx
    e223:	48 c1 e9 03          	shr    $0x3,%rcx
    e227:	48 3d ff 00 00 00    	cmp    $0xff,%rax
    e22d:	0f 87 42 04 00 00    	ja     e675 <dlmalloc+0x1595>
    e233:	bf 01 00 00 00       	mov    $0x1,%edi
    e238:	8b 35 02 c8 01 00    	mov    0x1c802(%rip),%esi        # 2aa40 <_gm_>
    e23e:	8d 44 09 09          	lea    0x9(%rcx,%rcx,1),%eax
    e242:	d3 e7                	shl    %cl,%edi
    e244:	49 8d 44 c5 00       	lea    0x0(%r13,%rax,8),%rax
    e249:	85 fe                	test   %edi,%esi
    e24b:	0f 85 08 06 00 00    	jne    e859 <dlmalloc+0x1779>
    e251:	09 fe                	or     %edi,%esi
    e253:	48 89 c1             	mov    %rax,%rcx
    e256:	89 35 e4 c7 01 00    	mov    %esi,0x1c7e4(%rip)        # 2aa40 <_gm_>
    e25c:	48 89 50 10          	mov    %rdx,0x10(%rax)
    e260:	48 89 51 18          	mov    %rdx,0x18(%rcx)
    e264:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
    e268:	48 89 42 18          	mov    %rax,0x18(%rdx)
    e26c:	e9 a1 f0 ff ff       	jmp    d312 <dlmalloc+0x232>
    e271:	bf 01 00 00 00       	mov    $0x1,%edi
    e276:	41 b8 58 02 00 00    	mov    $0x258,%r8d
    e27c:	e9 cd fc ff ff       	jmp    df4e <dlmalloc+0xe6e>
    e281:	89 c8                	mov    %ecx,%eax
    e283:	49 89 d0             	mov    %rdx,%r8
    e286:	49 8b bc c5 58 02 00 	mov    0x258(%r13,%rax,8),%rdi
    e28d:	00 
    e28e:	83 f9 1f             	cmp    $0x1f,%ecx
    e291:	74 33                	je     e2c6 <dlmalloc+0x11e6>
    e293:	89 c8                	mov    %ecx,%eax
    e295:	b9 39 00 00 00       	mov    $0x39,%ecx
    e29a:	d1 e8                	shr    %eax
    e29c:	29 c1                	sub    %eax,%ecx
    e29e:	49 d3 e0             	shl    %cl,%r8
    e2a1:	eb 23                	jmp    e2c6 <dlmalloc+0x11e6>
    e2a3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    e2a8:	4c 89 c0             	mov    %r8,%rax
    e2ab:	4d 01 c0             	add    %r8,%r8
    e2ae:	48 c1 e8 3f          	shr    $0x3f,%rax
    e2b2:	48 83 c0 04          	add    $0x4,%rax
    e2b6:	48 8b 0c c7          	mov    (%rdi,%rax,8),%rcx
    e2ba:	48 85 c9             	test   %rcx,%rcx
    e2bd:	0f 84 1b 02 00 00    	je     e4de <dlmalloc+0x13fe>
    e2c3:	48 89 cf             	mov    %rcx,%rdi
    e2c6:	48 8b 47 08          	mov    0x8(%rdi),%rax
    e2ca:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    e2ce:	48 39 c2             	cmp    %rax,%rdx
    e2d1:	75 d5                	jne    e2a8 <dlmalloc+0x11c8>
    e2d3:	48 8b 47 10          	mov    0x10(%rdi),%rax
    e2d7:	48 8b 15 7a c7 01 00 	mov    0x1c77a(%rip),%rdx        # 2aa58 <_gm_+0x18>
    e2de:	66 48 0f 6e e7       	movq   %rdi,%xmm4
    e2e3:	66 48 0f 6e c0       	movq   %rax,%xmm0
    e2e8:	66 0f 6c c4          	punpcklqdq %xmm4,%xmm0
    e2ec:	48 39 d7             	cmp    %rdx,%rdi
    e2ef:	0f 82 4b f4 ff ff    	jb     d740 <dlmalloc+0x660>
    e2f5:	48 39 d0             	cmp    %rdx,%rax
    e2f8:	0f 82 42 f4 ff ff    	jb     d740 <dlmalloc+0x660>
    e2fe:	48 89 70 18          	mov    %rsi,0x18(%rax)
    e302:	48 8b 05 47 c7 01 00 	mov    0x1c747(%rip),%rax        # 2aa50 <_gm_+0x10>
    e309:	48 89 77 10          	mov    %rsi,0x10(%rdi)
    e30d:	48 c7 46 30 00 00 00 	movq   $0x0,0x30(%rsi)
    e314:	00 
    e315:	0f 11 46 10          	movups %xmm0,0x10(%rsi)
    e319:	e9 90 fa ff ff       	jmp    ddae <dlmalloc+0xcce>
    e31e:	48 8b 43 28          	mov    0x28(%rbx),%rax
    e322:	48 8d 53 28          	lea    0x28(%rbx),%rdx
    e326:	48 85 c0             	test   %rax,%rax
    e329:	0f 84 11 03 00 00    	je     e640 <dlmalloc+0x1560>
    e32f:	90                   	nop
    e330:	48 89 d6             	mov    %rdx,%rsi
    e333:	48 89 c1             	mov    %rax,%rcx
    e336:	48 8d 50 28          	lea    0x28(%rax),%rdx
    e33a:	48 8b 40 28          	mov    0x28(%rax),%rax
    e33e:	48 85 c0             	test   %rax,%rax
    e341:	75 ed                	jne    e330 <dlmalloc+0x1250>
    e343:	48 8b 41 20          	mov    0x20(%rcx),%rax
    e347:	48 8d 51 20          	lea    0x20(%rcx),%rdx
    e34b:	48 85 c0             	test   %rax,%rax
    e34e:	75 e0                	jne    e330 <dlmalloc+0x1250>
    e350:	4c 39 de             	cmp    %r11,%rsi
    e353:	0f 82 e7 f3 ff ff    	jb     d740 <dlmalloc+0x660>
    e359:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
    e360:	4d 85 ff             	test   %r15,%r15
    e363:	0f 84 27 f3 ff ff    	je     d690 <dlmalloc+0x5b0>
    e369:	41 8b 46 38          	mov    0x38(%r14),%eax
    e36d:	48 8d 50 4a          	lea    0x4a(%rax),%rdx
    e371:	4d 3b b4 c5 58 02 00 	cmp    0x258(%r13,%rax,8),%r14
    e378:	00 
    e379:	0f 84 9e 04 00 00    	je     e81d <dlmalloc+0x173d>
    e37f:	4d 39 df             	cmp    %r11,%r15
    e382:	0f 82 b8 f3 ff ff    	jb     d740 <dlmalloc+0x660>
    e388:	49 3b 5f 20          	cmp    0x20(%r15),%rbx
    e38c:	0f 84 cb 05 00 00    	je     e95d <dlmalloc+0x187d>
    e392:	49 89 4f 28          	mov    %rcx,0x28(%r15)
    e396:	49 89 ce             	mov    %rcx,%r14
    e399:	e9 b1 f2 ff ff       	jmp    d64f <dlmalloc+0x56f>
    e39e:	49 8d 04 3c          	lea    (%r12,%rdi,1),%rax
    e3a2:	48 89 c1             	mov    %rax,%rcx
    e3a5:	48 01 d8             	add    %rbx,%rax
    e3a8:	48 83 c9 03          	or     $0x3,%rcx
    e3ac:	48 89 4b 08          	mov    %rcx,0x8(%rbx)
    e3b0:	48 83 48 08 01       	orq    $0x1,0x8(%rax)
    e3b5:	48 89 10             	mov    %rdx,(%rax)
    e3b8:	e9 4f f3 ff ff       	jmp    d70c <dlmalloc+0x62c>
    e3bd:	48 89 fa             	mov    %rdi,%rdx
    e3c0:	48 c1 ea 08          	shr    $0x8,%rdx
    e3c4:	89 d0                	mov    %edx,%eax
    e3c6:	85 d2                	test   %edx,%edx
    e3c8:	0f 84 20 02 00 00    	je     e5ee <dlmalloc+0x150e>
    e3ce:	81 fa ff ff 00 00    	cmp    $0xffff,%edx
    e3d4:	0f 87 be 03 00 00    	ja     e798 <dlmalloc+0x16b8>
    e3da:	0f bd c0             	bsr    %eax,%eax
    e3dd:	b9 26 00 00 00       	mov    $0x26,%ecx
    e3e2:	48 89 fa             	mov    %rdi,%rdx
    e3e5:	83 f0 1f             	xor    $0x1f,%eax
    e3e8:	29 c1                	sub    %eax,%ecx
    e3ea:	48 d3 ea             	shr    %cl,%rdx
    e3ed:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    e3f2:	83 e2 01             	and    $0x1,%edx
    e3f5:	29 c1                	sub    %eax,%ecx
    e3f7:	8d 04 4a             	lea    (%rdx,%rcx,2),%eax
    e3fa:	ba 01 00 00 00       	mov    $0x1,%edx
    e3ff:	89 c1                	mov    %eax,%ecx
    e401:	8d 70 4b             	lea    0x4b(%rax),%esi
    e404:	d3 e2                	shl    %cl,%edx
    e406:	48 c1 e6 03          	shl    $0x3,%rsi
    e40a:	89 d1                	mov    %edx,%ecx
    e40c:	8b 15 32 c6 01 00    	mov    0x1c632(%rip),%edx        # 2aa44 <_gm_+0x4>
    e412:	66 49 0f 6e ca       	movq   %r10,%xmm1
    e417:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e41b:	41 89 42 38          	mov    %eax,0x38(%r10)
    e41f:	66 0f 6c c9          	punpcklqdq %xmm1,%xmm1
    e423:	41 0f 11 42 20       	movups %xmm0,0x20(%r10)
    e428:	85 ca                	test   %ecx,%edx
    e42a:	0f 84 db 02 00 00    	je     e70b <dlmalloc+0x162b>
    e430:	89 c2                	mov    %eax,%edx
    e432:	48 89 fe             	mov    %rdi,%rsi
    e435:	49 8b 94 d5 58 02 00 	mov    0x258(%r13,%rdx,8),%rdx
    e43c:	00 
    e43d:	83 f8 1f             	cmp    $0x1f,%eax
    e440:	74 2c                	je     e46e <dlmalloc+0x138e>
    e442:	d1 e8                	shr    %eax
    e444:	b9 39 00 00 00       	mov    $0x39,%ecx
    e449:	29 c1                	sub    %eax,%ecx
    e44b:	48 d3 e6             	shl    %cl,%rsi
    e44e:	eb 1e                	jmp    e46e <dlmalloc+0x138e>
    e450:	48 89 f0             	mov    %rsi,%rax
    e453:	48 01 f6             	add    %rsi,%rsi
    e456:	48 c1 e8 3f          	shr    $0x3f,%rax
    e45a:	48 83 c0 04          	add    $0x4,%rax
    e45e:	48 8b 0c c2          	mov    (%rdx,%rax,8),%rcx
    e462:	48 85 c9             	test   %rcx,%rcx
    e465:	0f 84 fa 02 00 00    	je     e765 <dlmalloc+0x1685>
    e46b:	48 89 ca             	mov    %rcx,%rdx
    e46e:	48 8b 42 08          	mov    0x8(%rdx),%rax
    e472:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    e476:	48 39 f8             	cmp    %rdi,%rax
    e479:	75 d5                	jne    e450 <dlmalloc+0x1370>
    e47b:	48 8b 42 10          	mov    0x10(%rdx),%rax
    e47f:	66 48 0f 6e ea       	movq   %rdx,%xmm5
    e484:	66 48 0f 6e c0       	movq   %rax,%xmm0
    e489:	66 0f 6c c5          	punpcklqdq %xmm5,%xmm0
    e48d:	4c 39 da             	cmp    %r11,%rdx
    e490:	0f 82 aa f2 ff ff    	jb     d740 <dlmalloc+0x660>
    e496:	4c 39 d8             	cmp    %r11,%rax
    e499:	0f 82 a1 f2 ff ff    	jb     d740 <dlmalloc+0x660>
    e49f:	4c 89 50 18          	mov    %r10,0x18(%rax)
    e4a3:	4c 89 52 10          	mov    %r10,0x10(%rdx)
    e4a7:	49 c7 42 30 00 00 00 	movq   $0x0,0x30(%r10)
    e4ae:	00 
    e4af:	41 0f 11 42 10       	movups %xmm0,0x10(%r10)
    e4b4:	e9 53 f2 ff ff       	jmp    d70c <dlmalloc+0x62c>
    e4b9:	09 fe                	or     %edi,%esi
    e4bb:	4c 89 c1             	mov    %r8,%rcx
    e4be:	89 35 7c c5 01 00    	mov    %esi,0x1c57c(%rip)        # 2aa40 <_gm_>
    e4c4:	e9 58 ef ff ff       	jmp    d421 <dlmalloc+0x341>
    e4c9:	bf 00 00 00 80       	mov    $0x80000000,%edi
    e4ce:	41 b8 50 03 00 00    	mov    $0x350,%r8d
    e4d4:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    e4d9:	e9 70 fa ff ff       	jmp    df4e <dlmalloc+0xe6e>
    e4de:	48 8d 14 c7          	lea    (%rdi,%rax,8),%rdx
    e4e2:	48 3b 15 6f c5 01 00 	cmp    0x1c56f(%rip),%rdx        # 2aa58 <_gm_+0x18>
    e4e9:	0f 82 51 f2 ff ff    	jb     d740 <dlmalloc+0x660>
    e4ef:	48 89 34 c7          	mov    %rsi,(%rdi,%rax,8)
    e4f3:	48 8b 05 56 c5 01 00 	mov    0x1c556(%rip),%rax        # 2aa50 <_gm_+0x10>
    e4fa:	48 89 7e 30          	mov    %rdi,0x30(%rsi)
    e4fe:	0f 11 4e 10          	movups %xmm1,0x10(%rsi)
    e502:	e9 a7 f8 ff ff       	jmp    ddae <dlmalloc+0xcce>
    e507:	48 8b 43 28          	mov    0x28(%rbx),%rax
    e50b:	48 8d 4b 28          	lea    0x28(%rbx),%rcx
    e50f:	48 85 c0             	test   %rax,%rax
    e512:	0f 84 f8 03 00 00    	je     e910 <dlmalloc+0x1830>
    e518:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    e51f:	00 
    e520:	49 89 c9             	mov    %rcx,%r9
    e523:	49 89 c0             	mov    %rax,%r8
    e526:	48 8d 48 28          	lea    0x28(%rax),%rcx
    e52a:	48 8b 40 28          	mov    0x28(%rax),%rax
    e52e:	48 85 c0             	test   %rax,%rax
    e531:	75 ed                	jne    e520 <dlmalloc+0x1440>
    e533:	49 8b 40 20          	mov    0x20(%r8),%rax
    e537:	49 8d 48 20          	lea    0x20(%r8),%rcx
    e53b:	48 85 c0             	test   %rax,%rax
    e53e:	75 e0                	jne    e520 <dlmalloc+0x1440>
    e540:	4d 39 d9             	cmp    %r11,%r9
    e543:	0f 82 f7 f1 ff ff    	jb     d740 <dlmalloc+0x660>
    e549:	49 c7 01 00 00 00 00 	movq   $0x0,(%r9)
    e550:	4d 85 f6             	test   %r14,%r14
    e553:	0f 84 17 f3 ff ff    	je     d870 <dlmalloc+0x790>
    e559:	8b 43 38             	mov    0x38(%rbx),%eax
    e55c:	48 8d 48 4a          	lea    0x4a(%rax),%rcx
    e560:	49 3b 9c c5 58 02 00 	cmp    0x258(%r13,%rax,8),%rbx
    e567:	00 
    e568:	0f 84 0a 05 00 00    	je     ea78 <dlmalloc+0x1998>
    e56e:	4d 39 de             	cmp    %r11,%r14
    e571:	0f 82 c9 f1 ff ff    	jb     d740 <dlmalloc+0x660>
    e577:	49 3b 5e 20          	cmp    0x20(%r14),%rbx
    e57b:	0f 84 37 05 00 00    	je     eab8 <dlmalloc+0x19d8>
    e581:	4d 89 46 28          	mov    %r8,0x28(%r14)
    e585:	e9 a5 f2 ff ff       	jmp    d82f <dlmalloc+0x74f>
    e58a:	4c 01 f9             	add    %r15,%rcx
    e58d:	4c 03 3d bc c4 01 00 	add    0x1c4bc(%rip),%r15        # 2aa50 <_gm_+0x10>
    e594:	48 89 48 08          	mov    %rcx,0x8(%rax)
    e598:	48 8d 46 10          	lea    0x10(%rsi),%rax
    e59c:	40 f6 c6 0f          	test   $0xf,%sil
    e5a0:	0f 84 e7 01 00 00    	je     e78d <dlmalloc+0x16ad>
    e5a6:	48 f7 d8             	neg    %rax
    e5a9:	83 e0 0f             	and    $0xf,%eax
    e5ac:	48 89 c2             	mov    %rax,%rdx
    e5af:	48 8d 0c 06          	lea    (%rsi,%rax,1),%rcx
    e5b3:	4c 89 f8             	mov    %r15,%rax
    e5b6:	48 29 d0             	sub    %rdx,%rax
    e5b9:	48 89 c2             	mov    %rax,%rdx
    e5bc:	48 89 0d a5 c4 01 00 	mov    %rcx,0x1c4a5(%rip)        # 2aa68 <_gm_+0x28>
    e5c3:	48 83 ca 01          	or     $0x1,%rdx
    e5c7:	48 89 05 82 c4 01 00 	mov    %rax,0x1c482(%rip)        # 2aa50 <_gm_+0x10>
    e5ce:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    e5d2:	48 8b 15 47 c8 01 00 	mov    0x1c847(%rip),%rdx        # 2ae20 <mparams+0x20>
    e5d9:	4a c7 44 3e 08 50 00 	movq   $0x50,0x8(%rsi,%r15,1)
    e5e0:	00 00 
    e5e2:	48 89 15 87 c4 01 00 	mov    %rdx,0x1c487(%rip)        # 2aa70 <_gm_+0x30>
    e5e9:	e9 c0 f7 ff ff       	jmp    ddae <dlmalloc+0xcce>
    e5ee:	b9 01 00 00 00       	mov    $0x1,%ecx
    e5f3:	be 58 02 00 00       	mov    $0x258,%esi
    e5f8:	e9 0f fe ff ff       	jmp    e40c <dlmalloc+0x132c>
    e5fd:	4d 89 b4 d5 58 02 00 	mov    %r14,0x258(%r13,%rdx,8)
    e604:	00 
    e605:	4d 85 f6             	test   %r14,%r14
    e608:	0f 85 41 f0 ff ff    	jne    d64f <dlmalloc+0x56f>
    e60e:	41 0f b3 c1          	btr    %eax,%r9d
    e612:	44 89 0d 2b c4 01 00 	mov    %r9d,0x1c42b(%rip)        # 2aa44 <_gm_+0x4>
    e619:	e9 72 f0 ff ff       	jmp    d690 <dlmalloc+0x5b0>
    e61e:	48 03 05 2b c4 01 00 	add    0x1c42b(%rip),%rax        # 2aa50 <_gm_+0x10>
    e625:	48 89 15 3c c4 01 00 	mov    %rdx,0x1c43c(%rip)        # 2aa68 <_gm_+0x28>
    e62c:	48 89 05 1d c4 01 00 	mov    %rax,0x1c41d(%rip)        # 2aa50 <_gm_+0x10>
    e633:	48 83 c8 01          	or     $0x1,%rax
    e637:	48 89 42 08          	mov    %rax,0x8(%rdx)
    e63b:	e9 d2 ec ff ff       	jmp    d312 <dlmalloc+0x232>
    e640:	48 8b 43 20          	mov    0x20(%rbx),%rax
    e644:	48 85 c0             	test   %rax,%rax
    e647:	0f 84 ec 03 00 00    	je     ea39 <dlmalloc+0x1959>
    e64d:	48 8d 53 20          	lea    0x20(%rbx),%rdx
    e651:	e9 da fc ff ff       	jmp    e330 <dlmalloc+0x1250>
    e656:	49 8d 14 3c          	lea    (%r12,%rdi,1),%rdx
    e65a:	48 89 d1             	mov    %rdx,%rcx
    e65d:	48 01 da             	add    %rbx,%rdx
    e660:	48 83 c9 03          	or     $0x3,%rcx
    e664:	48 89 4b 08          	mov    %rcx,0x8(%rbx)
    e668:	48 83 4a 08 01       	orq    $0x1,0x8(%rdx)
    e66d:	48 89 02             	mov    %rax,(%rdx)
    e670:	e9 85 f2 ff ff       	jmp    d8fa <dlmalloc+0x81a>
    e675:	48 89 c6             	mov    %rax,%rsi
    e678:	48 c1 ee 08          	shr    $0x8,%rsi
    e67c:	89 f1                	mov    %esi,%ecx
    e67e:	85 f6                	test   %esi,%esi
    e680:	0f 84 7b 02 00 00    	je     e901 <dlmalloc+0x1821>
    e686:	81 fe ff ff 00 00    	cmp    $0xffff,%esi
    e68c:	0f 87 12 04 00 00    	ja     eaa4 <dlmalloc+0x19c4>
    e692:	0f bd c9             	bsr    %ecx,%ecx
    e695:	48 89 c7             	mov    %rax,%rdi
    e698:	89 ce                	mov    %ecx,%esi
    e69a:	b9 26 00 00 00       	mov    $0x26,%ecx
    e69f:	83 f6 1f             	xor    $0x1f,%esi
    e6a2:	29 f1                	sub    %esi,%ecx
    e6a4:	48 d3 ef             	shr    %cl,%rdi
    e6a7:	48 89 f9             	mov    %rdi,%rcx
    e6aa:	bf 1f 00 00 00       	mov    $0x1f,%edi
    e6af:	29 f7                	sub    %esi,%edi
    e6b1:	83 e1 01             	and    $0x1,%ecx
    e6b4:	8d 0c 79             	lea    (%rcx,%rdi,2),%ecx
    e6b7:	bf 01 00 00 00       	mov    $0x1,%edi
    e6bc:	8d 71 4b             	lea    0x4b(%rcx),%esi
    e6bf:	d3 e7                	shl    %cl,%edi
    e6c1:	48 c1 e6 03          	shl    $0x3,%rsi
    e6c5:	44 8b 05 78 c3 01 00 	mov    0x1c378(%rip),%r8d        # 2aa44 <_gm_+0x4>
    e6cc:	66 48 0f 6e c2       	movq   %rdx,%xmm0
    e6d1:	66 0f ef c9          	pxor   %xmm1,%xmm1
    e6d5:	89 4a 38             	mov    %ecx,0x38(%rdx)
    e6d8:	66 0f 6c c0          	punpcklqdq %xmm0,%xmm0
    e6dc:	0f 11 4a 20          	movups %xmm1,0x20(%rdx)
    e6e0:	41 85 f8             	test   %edi,%r8d
    e6e3:	0f 85 86 01 00 00    	jne    e86f <dlmalloc+0x178f>
    e6e9:	41 09 f8             	or     %edi,%r8d
    e6ec:	4c 01 ee             	add    %r13,%rsi
    e6ef:	49 89 94 cd 58 02 00 	mov    %rdx,0x258(%r13,%rcx,8)
    e6f6:	00 
    e6f7:	44 89 05 46 c3 01 00 	mov    %r8d,0x1c346(%rip)        # 2aa44 <_gm_+0x4>
    e6fe:	48 89 72 30          	mov    %rsi,0x30(%rdx)
    e702:	0f 11 42 10          	movups %xmm0,0x10(%rdx)
    e706:	e9 07 ec ff ff       	jmp    d312 <dlmalloc+0x232>
    e70b:	09 ca                	or     %ecx,%edx
    e70d:	4c 01 ee             	add    %r13,%rsi
    e710:	4d 89 94 c5 58 02 00 	mov    %r10,0x258(%r13,%rax,8)
    e717:	00 
    e718:	89 15 26 c3 01 00    	mov    %edx,0x1c326(%rip)        # 2aa44 <_gm_+0x4>
    e71e:	49 89 72 30          	mov    %rsi,0x30(%r10)
    e722:	41 0f 11 4a 10       	movups %xmm1,0x10(%r10)
    e727:	e9 e0 ef ff ff       	jmp    d70c <dlmalloc+0x62c>
    e72c:	09 c6                	or     %eax,%esi
    e72e:	48 89 d0             	mov    %rdx,%rax
    e731:	89 35 09 c3 01 00    	mov    %esi,0x1c309(%rip)        # 2aa40 <_gm_>
    e737:	e9 c0 ef ff ff       	jmp    d6fc <dlmalloc+0x61c>
    e73c:	48 03 05 05 c3 01 00 	add    0x1c305(%rip),%rax        # 2aa48 <_gm_+0x8>
    e743:	48 89 15 16 c3 01 00 	mov    %rdx,0x1c316(%rip)        # 2aa60 <_gm_+0x20>
    e74a:	48 89 c1             	mov    %rax,%rcx
    e74d:	48 89 05 f4 c2 01 00 	mov    %rax,0x1c2f4(%rip)        # 2aa48 <_gm_+0x8>
    e754:	48 83 c9 01          	or     $0x1,%rcx
    e758:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
    e75c:	48 89 04 02          	mov    %rax,(%rdx,%rax,1)
    e760:	e9 ad eb ff ff       	jmp    d312 <dlmalloc+0x232>
    e765:	48 8d 0c c2          	lea    (%rdx,%rax,8),%rcx
    e769:	4c 39 d9             	cmp    %r11,%rcx
    e76c:	0f 82 ce ef ff ff    	jb     d740 <dlmalloc+0x660>
    e772:	4c 89 14 c2          	mov    %r10,(%rdx,%rax,8)
    e776:	49 89 52 30          	mov    %rdx,0x30(%r10)
    e77a:	41 0f 11 4a 10       	movups %xmm1,0x10(%r10)
    e77f:	e9 88 ef ff ff       	jmp    d70c <dlmalloc+0x62c>
    e784:	4d 89 77 20          	mov    %r14,0x20(%r15)
    e788:	e9 bd ee ff ff       	jmp    d64a <dlmalloc+0x56a>
    e78d:	4c 89 f8             	mov    %r15,%rax
    e790:	48 89 f1             	mov    %rsi,%rcx
    e793:	e9 21 fe ff ff       	jmp    e5b9 <dlmalloc+0x14d9>
    e798:	b9 00 00 00 80       	mov    $0x80000000,%ecx
    e79d:	be 50 03 00 00       	mov    $0x350,%esi
    e7a2:	b8 1f 00 00 00       	mov    $0x1f,%eax
    e7a7:	e9 60 fc ff ff       	jmp    e40c <dlmalloc+0x132c>
    e7ac:	49 89 f8             	mov    %rdi,%r8
    e7af:	48 89 f9             	mov    %rdi,%rcx
    e7b2:	49 8b 72 18          	mov    0x18(%r10),%rsi
    e7b6:	49 83 e0 f8          	and    $0xfffffffffffffff8,%r8
    e7ba:	48 c1 e9 03          	shr    $0x3,%rcx
    e7be:	48 81 ff ff 00 00 00 	cmp    $0xff,%rdi
    e7c5:	0f 87 9b 01 00 00    	ja     e966 <dlmalloc+0x1886>
    e7cb:	44 8d 5c 09 09       	lea    0x9(%rcx,%rcx,1),%r11d
    e7d0:	49 8b 7a 10          	mov    0x10(%r10),%rdi
    e7d4:	4f 8d 5c dd 00       	lea    0x0(%r13,%r11,8),%r11
    e7d9:	4c 39 df             	cmp    %r11,%rdi
    e7dc:	0f 85 80 03 00 00    	jne    eb62 <dlmalloc+0x1a82>
    e7e2:	48 39 f7             	cmp    %rsi,%rdi
    e7e5:	0f 84 65 03 00 00    	je     eb50 <dlmalloc+0x1a70>
    e7eb:	48 3b 35 66 c2 01 00 	cmp    0x1c266(%rip),%rsi        # 2aa58 <_gm_+0x18>
    e7f2:	0f 82 48 ef ff ff    	jb     d740 <dlmalloc+0x660>
    e7f8:	4c 39 56 10          	cmp    %r10,0x10(%rsi)
    e7fc:	0f 85 3e ef ff ff    	jne    d740 <dlmalloc+0x660>
    e802:	48 89 77 18          	mov    %rsi,0x18(%rdi)
    e806:	48 89 7e 10          	mov    %rdi,0x10(%rsi)
    e80a:	4d 01 c2             	add    %r8,%r10
    e80d:	4c 01 c0             	add    %r8,%rax
    e810:	49 8b 7a 08          	mov    0x8(%r10),%rdi
    e814:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    e818:	e9 ed f9 ff ff       	jmp    e20a <dlmalloc+0x112a>
    e81d:	49 89 4c d5 08       	mov    %rcx,0x8(%r13,%rdx,8)
    e822:	e9 6f fb ff ff       	jmp    e396 <dlmalloc+0x12b6>
    e827:	4d 89 84 cd 58 02 00 	mov    %r8,0x258(%r13,%rcx,8)
    e82e:	00 
    e82f:	4d 85 c0             	test   %r8,%r8
    e832:	0f 85 f7 ef ff ff    	jne    d82f <dlmalloc+0x74f>
    e838:	41 0f b3 c1          	btr    %eax,%r9d
    e83c:	44 89 0d 01 c2 01 00 	mov    %r9d,0x1c201(%rip)        # 2aa44 <_gm_+0x4>
    e843:	e9 28 f0 ff ff       	jmp    d870 <dlmalloc+0x790>
    e848:	44 09 c2             	or     %r8d,%edx
    e84b:	89 15 ef c1 01 00    	mov    %edx,0x1c1ef(%rip)        # 2aa40 <_gm_>
    e851:	4c 89 ca             	mov    %r9,%rdx
    e854:	e9 83 f0 ff ff       	jmp    d8dc <dlmalloc+0x7fc>
    e859:	48 8b 48 10          	mov    0x10(%rax),%rcx
    e85d:	48 3b 0d f4 c1 01 00 	cmp    0x1c1f4(%rip),%rcx        # 2aa58 <_gm_+0x18>
    e864:	0f 83 f2 f9 ff ff    	jae    e25c <dlmalloc+0x117c>
    e86a:	e9 d1 ee ff ff       	jmp    d740 <dlmalloc+0x660>
    e86f:	89 ce                	mov    %ecx,%esi
    e871:	49 8b b4 f5 58 02 00 	mov    0x258(%r13,%rsi,8),%rsi
    e878:	00 
    e879:	83 f9 1f             	cmp    $0x1f,%ecx
    e87c:	74 0b                	je     e889 <dlmalloc+0x17a9>
    e87e:	d1 e9                	shr    %ecx
    e880:	41 b9 39 00 00 00    	mov    $0x39,%r9d
    e886:	41 29 c9             	sub    %ecx,%r9d
    e889:	48 89 c7             	mov    %rax,%rdi
    e88c:	44 89 c9             	mov    %r9d,%ecx
    e88f:	48 d3 e7             	shl    %cl,%rdi
    e892:	eb 1e                	jmp    e8b2 <dlmalloc+0x17d2>
    e894:	48 89 f9             	mov    %rdi,%rcx
    e897:	48 01 ff             	add    %rdi,%rdi
    e89a:	48 c1 e9 3f          	shr    $0x3f,%rcx
    e89e:	48 83 c1 04          	add    $0x4,%rcx
    e8a2:	4c 8b 04 ce          	mov    (%rsi,%rcx,8),%r8
    e8a6:	4d 85 c0             	test   %r8,%r8
    e8a9:	0f 84 d3 01 00 00    	je     ea82 <dlmalloc+0x19a2>
    e8af:	4c 89 c6             	mov    %r8,%rsi
    e8b2:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    e8b6:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    e8ba:	48 39 c8             	cmp    %rcx,%rax
    e8bd:	75 d5                	jne    e894 <dlmalloc+0x17b4>
    e8bf:	48 8b 46 10          	mov    0x10(%rsi),%rax
    e8c3:	48 8b 0d 8e c1 01 00 	mov    0x1c18e(%rip),%rcx        # 2aa58 <_gm_+0x18>
    e8ca:	66 48 0f 6e f6       	movq   %rsi,%xmm6
    e8cf:	66 48 0f 6e c0       	movq   %rax,%xmm0
    e8d4:	66 0f 6c c6          	punpcklqdq %xmm6,%xmm0
    e8d8:	48 39 c8             	cmp    %rcx,%rax
    e8db:	0f 82 5f ee ff ff    	jb     d740 <dlmalloc+0x660>
    e8e1:	48 39 ce             	cmp    %rcx,%rsi
    e8e4:	0f 82 56 ee ff ff    	jb     d740 <dlmalloc+0x660>
    e8ea:	48 89 50 18          	mov    %rdx,0x18(%rax)
    e8ee:	31 c0                	xor    %eax,%eax
    e8f0:	48 89 56 10          	mov    %rdx,0x10(%rsi)
    e8f4:	48 89 42 30          	mov    %rax,0x30(%rdx)
    e8f8:	0f 11 42 10          	movups %xmm0,0x10(%rdx)
    e8fc:	e9 11 ea ff ff       	jmp    d312 <dlmalloc+0x232>
    e901:	bf 01 00 00 00       	mov    $0x1,%edi
    e906:	be 58 02 00 00       	mov    $0x258,%esi
    e90b:	e9 b5 fd ff ff       	jmp    e6c5 <dlmalloc+0x15e5>
    e910:	48 8b 43 20          	mov    0x20(%rbx),%rax
    e914:	48 85 c0             	test   %rax,%rax
    e917:	0f 84 ac 01 00 00    	je     eac9 <dlmalloc+0x19e9>
    e91d:	48 8d 4b 20          	lea    0x20(%rbx),%rcx
    e921:	e9 fa fb ff ff       	jmp    e520 <dlmalloc+0x1440>
    e926:	4d 89 46 20          	mov    %r8,0x20(%r14)
    e92a:	e9 fb ee ff ff       	jmp    d82a <dlmalloc+0x74a>
    e92f:	4c 89 f7             	mov    %r14,%rdi
    e932:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    e937:	e8 c4 dc ff ff       	call   c600 <sbrk>
    e93c:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    e941:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    e945:	0f 84 57 02 00 00    	je     eba2 <dlmalloc+0x1ac2>
    e94b:	4d 01 f7             	add    %r14,%r15
    e94e:	c7 05 d8 c4 01 00 00 	movl   $0x0,0x1c4d8(%rip)        # 2ae30 <malloc_global_mutex>
    e955:	00 00 00 
    e958:	e9 d3 f1 ff ff       	jmp    db30 <dlmalloc+0xa50>
    e95d:	49 89 4f 20          	mov    %rcx,0x20(%r15)
    e961:	e9 30 fa ff ff       	jmp    e396 <dlmalloc+0x12b6>
    e966:	4d 8b 62 30          	mov    0x30(%r10),%r12
    e96a:	49 39 f2             	cmp    %rsi,%r10
    e96d:	0f 84 96 01 00 00    	je     eb09 <dlmalloc+0x1a29>
    e973:	49 8b 4a 10          	mov    0x10(%r10),%rcx
    e977:	48 3b 0d da c0 01 00 	cmp    0x1c0da(%rip),%rcx        # 2aa58 <_gm_+0x18>
    e97e:	0f 82 bc ed ff ff    	jb     d740 <dlmalloc+0x660>
    e984:	4c 39 51 18          	cmp    %r10,0x18(%rcx)
    e988:	0f 85 b2 ed ff ff    	jne    d740 <dlmalloc+0x660>
    e98e:	4c 39 56 10          	cmp    %r10,0x10(%rsi)
    e992:	0f 85 a8 ed ff ff    	jne    d740 <dlmalloc+0x660>
    e998:	48 89 71 18          	mov    %rsi,0x18(%rcx)
    e99c:	48 89 4e 10          	mov    %rcx,0x10(%rsi)
    e9a0:	4d 85 e4             	test   %r12,%r12
    e9a3:	0f 84 61 fe ff ff    	je     e80a <dlmalloc+0x172a>
    e9a9:	41 8b 7a 38          	mov    0x38(%r10),%edi
    e9ad:	48 89 f9             	mov    %rdi,%rcx
    e9b0:	4c 8d 5f 4a          	lea    0x4a(%rdi),%r11
    e9b4:	4d 39 94 fd 58 02 00 	cmp    %r10,0x258(%r13,%rdi,8)
    e9bb:	00 
    e9bc:	0f 84 0e 02 00 00    	je     ebd0 <dlmalloc+0x1af0>
    e9c2:	4c 3b 25 8f c0 01 00 	cmp    0x1c08f(%rip),%r12        # 2aa58 <_gm_+0x18>
    e9c9:	0f 82 71 ed ff ff    	jb     d740 <dlmalloc+0x660>
    e9cf:	4d 39 54 24 20       	cmp    %r10,0x20(%r12)
    e9d4:	0f 84 ec 01 00 00    	je     ebc6 <dlmalloc+0x1ae6>
    e9da:	49 89 74 24 28       	mov    %rsi,0x28(%r12)
    e9df:	48 85 f6             	test   %rsi,%rsi
    e9e2:	0f 84 22 fe ff ff    	je     e80a <dlmalloc+0x172a>
    e9e8:	48 8b 3d 69 c0 01 00 	mov    0x1c069(%rip),%rdi        # 2aa58 <_gm_+0x18>
    e9ef:	48 39 fe             	cmp    %rdi,%rsi
    e9f2:	0f 82 48 ed ff ff    	jb     d740 <dlmalloc+0x660>
    e9f8:	49 8b 4a 20          	mov    0x20(%r10),%rcx
    e9fc:	4c 89 66 30          	mov    %r12,0x30(%rsi)
    ea00:	48 85 c9             	test   %rcx,%rcx
    ea03:	74 11                	je     ea16 <dlmalloc+0x1936>
    ea05:	48 39 f9             	cmp    %rdi,%rcx
    ea08:	0f 82 32 ed ff ff    	jb     d740 <dlmalloc+0x660>
    ea0e:	48 89 4e 20          	mov    %rcx,0x20(%rsi)
    ea12:	48 89 71 30          	mov    %rsi,0x30(%rcx)
    ea16:	49 8b 4a 28          	mov    0x28(%r10),%rcx
    ea1a:	48 85 c9             	test   %rcx,%rcx
    ea1d:	0f 84 e7 fd ff ff    	je     e80a <dlmalloc+0x172a>
    ea23:	48 39 f9             	cmp    %rdi,%rcx
    ea26:	0f 82 14 ed ff ff    	jb     d740 <dlmalloc+0x660>
    ea2c:	48 89 4e 28          	mov    %rcx,0x28(%rsi)
    ea30:	48 89 71 30          	mov    %rsi,0x30(%rcx)
    ea34:	e9 d1 fd ff ff       	jmp    e80a <dlmalloc+0x172a>
    ea39:	4d 85 ff             	test   %r15,%r15
    ea3c:	0f 84 4e ec ff ff    	je     d690 <dlmalloc+0x5b0>
    ea42:	8b 53 38             	mov    0x38(%rbx),%edx
    ea45:	48 89 d0             	mov    %rdx,%rax
    ea48:	48 8d 4a 4a          	lea    0x4a(%rdx),%rcx
    ea4c:	49 3b 9c d5 58 02 00 	cmp    0x258(%r13,%rdx,8),%rbx
    ea53:	00 
    ea54:	0f 84 a2 01 00 00    	je     ebfc <dlmalloc+0x1b1c>
    ea5a:	4d 39 df             	cmp    %r11,%r15
    ea5d:	0f 82 dd ec ff ff    	jb     d740 <dlmalloc+0x660>
    ea63:	4d 39 77 20          	cmp    %r14,0x20(%r15)
    ea67:	0f 84 83 01 00 00    	je     ebf0 <dlmalloc+0x1b10>
    ea6d:	31 f6                	xor    %esi,%esi
    ea6f:	49 89 77 28          	mov    %rsi,0x28(%r15)
    ea73:	e9 18 ec ff ff       	jmp    d690 <dlmalloc+0x5b0>
    ea78:	4d 89 44 cd 08       	mov    %r8,0x8(%r13,%rcx,8)
    ea7d:	e9 ad ed ff ff       	jmp    d82f <dlmalloc+0x74f>
    ea82:	48 8d 04 ce          	lea    (%rsi,%rcx,8),%rax
    ea86:	48 3b 05 cb bf 01 00 	cmp    0x1bfcb(%rip),%rax        # 2aa58 <_gm_+0x18>
    ea8d:	0f 82 ad ec ff ff    	jb     d740 <dlmalloc+0x660>
    ea93:	48 89 14 ce          	mov    %rdx,(%rsi,%rcx,8)
    ea97:	48 89 72 30          	mov    %rsi,0x30(%rdx)
    ea9b:	0f 11 42 10          	movups %xmm0,0x10(%rdx)
    ea9f:	e9 6e e8 ff ff       	jmp    d312 <dlmalloc+0x232>
    eaa4:	bf 00 00 00 80       	mov    $0x80000000,%edi
    eaa9:	be 50 03 00 00       	mov    $0x350,%esi
    eaae:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    eab3:	e9 0d fc ff ff       	jmp    e6c5 <dlmalloc+0x15e5>
    eab8:	4d 89 46 20          	mov    %r8,0x20(%r14)
    eabc:	e9 6e ed ff ff       	jmp    d82f <dlmalloc+0x74f>
    eac1:	4d 89 e3             	mov    %r12,%r11
    eac4:	e9 4f ea ff ff       	jmp    d518 <dlmalloc+0x438>
    eac9:	4d 85 f6             	test   %r14,%r14
    eacc:	0f 84 9e ed ff ff    	je     d870 <dlmalloc+0x790>
    ead2:	8b 4b 38             	mov    0x38(%rbx),%ecx
    ead5:	48 89 c8             	mov    %rcx,%rax
    ead8:	4c 8d 41 4a          	lea    0x4a(%rcx),%r8
    eadc:	49 3b 9c cd 58 02 00 	cmp    0x258(%r13,%rcx,8),%rbx
    eae3:	00 
    eae4:	0f 84 34 01 00 00    	je     ec1e <dlmalloc+0x1b3e>
    eaea:	4d 39 de             	cmp    %r11,%r14
    eaed:	0f 82 4d ec ff ff    	jb     d740 <dlmalloc+0x660>
    eaf3:	49 3b 5e 20          	cmp    0x20(%r14),%rbx
    eaf7:	0f 84 16 01 00 00    	je     ec13 <dlmalloc+0x1b33>
    eafd:	45 31 ff             	xor    %r15d,%r15d
    eb00:	4d 89 7e 28          	mov    %r15,0x28(%r14)
    eb04:	e9 67 ed ff ff       	jmp    d870 <dlmalloc+0x790>
    eb09:	49 8b 72 28          	mov    0x28(%r10),%rsi
    eb0d:	48 85 f6             	test   %rsi,%rsi
    eb10:	74 7a                	je     eb8c <dlmalloc+0x1aac>
    eb12:	49 8d 7a 28          	lea    0x28(%r10),%rdi
    eb16:	48 89 f1             	mov    %rsi,%rcx
    eb19:	49 89 fb             	mov    %rdi,%r11
    eb1c:	48 89 ce             	mov    %rcx,%rsi
    eb1f:	48 8d 79 28          	lea    0x28(%rcx),%rdi
    eb23:	48 8b 49 28          	mov    0x28(%rcx),%rcx
    eb27:	48 85 c9             	test   %rcx,%rcx
    eb2a:	75 ed                	jne    eb19 <dlmalloc+0x1a39>
    eb2c:	48 8b 4e 20          	mov    0x20(%rsi),%rcx
    eb30:	48 8d 7e 20          	lea    0x20(%rsi),%rdi
    eb34:	48 85 c9             	test   %rcx,%rcx
    eb37:	75 e0                	jne    eb19 <dlmalloc+0x1a39>
    eb39:	4c 3b 1d 18 bf 01 00 	cmp    0x1bf18(%rip),%r11        # 2aa58 <_gm_+0x18>
    eb40:	0f 82 fa eb ff ff    	jb     d740 <dlmalloc+0x660>
    eb46:	31 c9                	xor    %ecx,%ecx
    eb48:	49 89 0b             	mov    %rcx,(%r11)
    eb4b:	e9 50 fe ff ff       	jmp    e9a0 <dlmalloc+0x18c0>
    eb50:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    eb55:	d3 c6                	rol    %cl,%esi
    eb57:	21 35 e3 be 01 00    	and    %esi,0x1bee3(%rip)        # 2aa40 <_gm_>
    eb5d:	e9 a8 fc ff ff       	jmp    e80a <dlmalloc+0x172a>
    eb62:	48 3b 3d ef be 01 00 	cmp    0x1beef(%rip),%rdi        # 2aa58 <_gm_+0x18>
    eb69:	0f 82 d1 eb ff ff    	jb     d740 <dlmalloc+0x660>
    eb6f:	4c 39 57 18          	cmp    %r10,0x18(%rdi)
    eb73:	0f 85 c7 eb ff ff    	jne    d740 <dlmalloc+0x660>
    eb79:	48 39 f7             	cmp    %rsi,%rdi
    eb7c:	74 d2                	je     eb50 <dlmalloc+0x1a70>
    eb7e:	49 39 f3             	cmp    %rsi,%r11
    eb81:	0f 84 7b fc ff ff    	je     e802 <dlmalloc+0x1722>
    eb87:	e9 5f fc ff ff       	jmp    e7eb <dlmalloc+0x170b>
    eb8c:	49 8b 72 20          	mov    0x20(%r10),%rsi
    eb90:	48 85 f6             	test   %rsi,%rsi
    eb93:	0f 84 07 fe ff ff    	je     e9a0 <dlmalloc+0x18c0>
    eb99:	49 8d 7a 20          	lea    0x20(%r10),%rdi
    eb9d:	e9 74 ff ff ff       	jmp    eb16 <dlmalloc+0x1a36>
    eba2:	4c 89 ff             	mov    %r15,%rdi
    eba5:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    ebaa:	48 f7 df             	neg    %rdi
    ebad:	e8 4e da ff ff       	call   c600 <sbrk>
    ebb2:	c7 05 74 c2 01 00 00 	movl   $0x0,0x1c274(%rip)        # 2ae30 <malloc_global_mutex>
    ebb9:	00 00 00 
    ebbc:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    ebc1:	e9 dd ee ff ff       	jmp    daa3 <dlmalloc+0x9c3>
    ebc6:	49 89 74 24 20       	mov    %rsi,0x20(%r12)
    ebcb:	e9 0f fe ff ff       	jmp    e9df <dlmalloc+0x18ff>
    ebd0:	4b 89 74 dd 08       	mov    %rsi,0x8(%r13,%r11,8)
    ebd5:	48 85 f6             	test   %rsi,%rsi
    ebd8:	0f 85 0a fe ff ff    	jne    e9e8 <dlmalloc+0x1908>
    ebde:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    ebe3:	d3 c6                	rol    %cl,%esi
    ebe5:	21 35 59 be 01 00    	and    %esi,0x1be59(%rip)        # 2aa44 <_gm_+0x4>
    ebeb:	e9 1a fc ff ff       	jmp    e80a <dlmalloc+0x172a>
    ebf0:	45 31 c9             	xor    %r9d,%r9d
    ebf3:	4d 89 4f 20          	mov    %r9,0x20(%r15)
    ebf7:	e9 94 ea ff ff       	jmp    d690 <dlmalloc+0x5b0>
    ebfc:	45 31 f6             	xor    %r14d,%r14d
    ebff:	4d 89 74 cd 08       	mov    %r14,0x8(%r13,%rcx,8)
    ec04:	e9 05 fa ff ff       	jmp    e60e <dlmalloc+0x152e>
    ec09:	e8 e2 e3 ff ff       	call   cff0 <init_mparams.isra.0>
    ec0e:	e9 86 ed ff ff       	jmp    d999 <dlmalloc+0x8b9>
    ec13:	31 c0                	xor    %eax,%eax
    ec15:	49 89 46 20          	mov    %rax,0x20(%r14)
    ec19:	e9 52 ec ff ff       	jmp    d870 <dlmalloc+0x790>
    ec1e:	31 c9                	xor    %ecx,%ecx
    ec20:	4b 89 4c c5 08       	mov    %rcx,0x8(%r13,%r8,8)
    ec25:	e9 0e fc ff ff       	jmp    e838 <dlmalloc+0x1758>
    ec2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000ec30 <internal_memalign.constprop.0>:
    ec30:	41 55                	push   %r13
    ec32:	41 54                	push   %r12
    ec34:	55                   	push   %rbp
    ec35:	53                   	push   %rbx
    ec36:	bb 20 00 00 00       	mov    $0x20,%ebx
    ec3b:	48 83 ec 18          	sub    $0x18,%rsp
    ec3f:	48 39 df             	cmp    %rbx,%rdi
    ec42:	48 0f 43 df          	cmovae %rdi,%rbx
    ec46:	48 8d 43 ff          	lea    -0x1(%rbx),%rax
    ec4a:	48 85 d8             	test   %rbx,%rax
    ec4d:	74 49                	je     ec98 <internal_memalign.constprop.0+0x68>
    ec4f:	48 83 ff 20          	cmp    $0x20,%rdi
    ec53:	0f 86 17 02 00 00    	jbe    ee70 <internal_memalign.constprop.0+0x240>
    ec59:	b8 20 00 00 00       	mov    $0x20,%eax
    ec5e:	66 90                	xchg   %ax,%ax
    ec60:	48 01 c0             	add    %rax,%rax
    ec63:	48 39 d8             	cmp    %rbx,%rax
    ec66:	72 f8                	jb     ec60 <internal_memalign.constprop.0+0x30>
    ec68:	48 c7 c2 80 ff ff ff 	mov    $0xffffffffffffff80,%rdx
    ec6f:	48 89 c3             	mov    %rax,%rbx
    ec72:	48 29 c2             	sub    %rax,%rdx
    ec75:	48 39 d6             	cmp    %rdx,%rsi
    ec78:	72 2d                	jb     eca7 <internal_memalign.constprop.0+0x77>
    ec7a:	e8 f1 21 00 00       	call   10e70 <__errno_location>
    ec7f:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
    ec85:	48 83 c4 18          	add    $0x18,%rsp
    ec89:	31 c0                	xor    %eax,%eax
    ec8b:	5b                   	pop    %rbx
    ec8c:	5d                   	pop    %rbp
    ec8d:	41 5c                	pop    %r12
    ec8f:	41 5d                	pop    %r13
    ec91:	c3                   	ret    
    ec92:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    ec98:	48 c7 c2 80 ff ff ff 	mov    $0xffffffffffffff80,%rdx
    ec9f:	48 29 da             	sub    %rbx,%rdx
    eca2:	48 39 d6             	cmp    %rdx,%rsi
    eca5:	73 d3                	jae    ec7a <internal_memalign.constprop.0+0x4a>
    eca7:	48 8d 46 1f          	lea    0x1f(%rsi),%rax
    ecab:	ba 20 00 00 00       	mov    $0x20,%edx
    ecb0:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
    ecb4:	48 83 fe 0e          	cmp    $0xe,%rsi
    ecb8:	48 0f 47 d0          	cmova  %rax,%rdx
    ecbc:	48 8d 7c 13 10       	lea    0x10(%rbx,%rdx,1),%rdi
    ecc1:	49 89 d4             	mov    %rdx,%r12
    ecc4:	e8 17 e4 ff ff       	call   d0e0 <dlmalloc>
    ecc9:	48 85 c0             	test   %rax,%rax
    eccc:	74 b7                	je     ec85 <internal_memalign.constprop.0+0x55>
    ecce:	44 8b 2d db c0 01 00 	mov    0x1c0db(%rip),%r13d        # 2adb0 <_gm_+0x370>
    ecd5:	48 8d 70 f0          	lea    -0x10(%rax),%rsi
    ecd9:	41 83 e5 02          	and    $0x2,%r13d
    ecdd:	0f 85 9d 00 00 00    	jne    ed80 <internal_memalign.constprop.0+0x150>
    ece3:	48 8d 6b ff          	lea    -0x1(%rbx),%rbp
    ece7:	48 85 e8             	test   %rbp,%rax
    ecea:	75 3c                	jne    ed28 <internal_memalign.constprop.0+0xf8>
    ecec:	48 8b 50 f8          	mov    -0x8(%rax),%rdx
    ecf0:	48 89 f5             	mov    %rsi,%rbp
    ecf3:	f6 c2 03             	test   $0x3,%dl
    ecf6:	74 15                	je     ed0d <internal_memalign.constprop.0+0xdd>
    ecf8:	48 89 d1             	mov    %rdx,%rcx
    ecfb:	49 8d 74 24 20       	lea    0x20(%r12),%rsi
    ed00:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    ed04:	48 39 ce             	cmp    %rcx,%rsi
    ed07:	0f 82 a3 00 00 00    	jb     edb0 <internal_memalign.constprop.0+0x180>
    ed0d:	45 85 ed             	test   %r13d,%r13d
    ed10:	0f 85 72 01 00 00    	jne    ee88 <internal_memalign.constprop.0+0x258>
    ed16:	48 83 c4 18          	add    $0x18,%rsp
    ed1a:	5b                   	pop    %rbx
    ed1b:	5d                   	pop    %rbp
    ed1c:	41 5c                	pop    %r12
    ed1e:	41 5d                	pop    %r13
    ed20:	c3                   	ret    
    ed21:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    ed28:	48 89 da             	mov    %rbx,%rdx
    ed2b:	48 01 c5             	add    %rax,%rbp
    ed2e:	48 f7 da             	neg    %rdx
    ed31:	48 21 d5             	and    %rdx,%rbp
    ed34:	48 83 ed 10          	sub    $0x10,%rbp
    ed38:	48 89 e9             	mov    %rbp,%rcx
    ed3b:	48 29 f1             	sub    %rsi,%rcx
    ed3e:	48 83 f9 1f          	cmp    $0x1f,%rcx
    ed42:	77 09                	ja     ed4d <internal_memalign.constprop.0+0x11d>
    ed44:	48 01 dd             	add    %rbx,%rbp
    ed47:	48 89 e9             	mov    %rbp,%rcx
    ed4a:	48 29 f1             	sub    %rsi,%rcx
    ed4d:	48 8b 78 f8          	mov    -0x8(%rax),%rdi
    ed51:	48 8d 5d 10          	lea    0x10(%rbp),%rbx
    ed55:	48 89 fa             	mov    %rdi,%rdx
    ed58:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    ed5c:	48 29 ca             	sub    %rcx,%rdx
    ed5f:	83 e7 03             	and    $0x3,%edi
    ed62:	0f 85 a8 00 00 00    	jne    ee10 <internal_memalign.constprop.0+0x1e0>
    ed68:	48 03 48 f0          	add    -0x10(%rax),%rcx
    ed6c:	48 89 55 08          	mov    %rdx,0x8(%rbp)
    ed70:	48 89 d8             	mov    %rbx,%rax
    ed73:	48 89 4d 00          	mov    %rcx,0x0(%rbp)
    ed77:	e9 77 ff ff ff       	jmp    ecf3 <internal_memalign.constprop.0+0xc3>
    ed7c:	0f 1f 40 00          	nopl   0x0(%rax)
    ed80:	ba 01 00 00 00       	mov    $0x1,%edx
    ed85:	87 15 29 c0 01 00    	xchg   %edx,0x1c029(%rip)        # 2adb4 <_gm_+0x374>
    ed8b:	85 d2                	test   %edx,%edx
    ed8d:	0f 85 0d 01 00 00    	jne    eea0 <internal_memalign.constprop.0+0x270>
    ed93:	44 8b 2d 16 c0 01 00 	mov    0x1c016(%rip),%r13d        # 2adb0 <_gm_+0x370>
    ed9a:	48 8d 6b ff          	lea    -0x1(%rbx),%rbp
    ed9e:	41 83 e5 02          	and    $0x2,%r13d
    eda2:	48 85 e8             	test   %rbp,%rax
    eda5:	75 81                	jne    ed28 <internal_memalign.constprop.0+0xf8>
    eda7:	e9 40 ff ff ff       	jmp    ecec <internal_memalign.constprop.0+0xbc>
    edac:	0f 1f 40 00          	nopl   0x0(%rax)
    edb0:	83 e2 01             	and    $0x1,%edx
    edb3:	49 89 c8             	mov    %rcx,%r8
    edb6:	4a 8d 74 25 00       	lea    0x0(%rbp,%r12,1),%rsi
    edbb:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    edc0:	4c 09 e2             	or     %r12,%rdx
    edc3:	4d 29 e0             	sub    %r12,%r8
    edc6:	48 8d 3d 73 bc 01 00 	lea    0x1bc73(%rip),%rdi        # 2aa40 <_gm_>
    edcd:	48 83 ca 02          	or     $0x2,%rdx
    edd1:	4d 89 c1             	mov    %r8,%r9
    edd4:	48 89 55 08          	mov    %rdx,0x8(%rbp)
    edd8:	48 8b 15 21 c0 01 00 	mov    0x1c021(%rip),%rdx        # 2ae00 <mparams>
    eddf:	48 01 cd             	add    %rcx,%rbp
    ede2:	49 83 c9 03          	or     $0x3,%r9
    ede6:	4c 89 4e 08          	mov    %r9,0x8(%rsi)
    edea:	48 31 fa             	xor    %rdi,%rdx
    eded:	48 89 16             	mov    %rdx,(%rsi)
    edf0:	48 83 4d 08 01       	orq    $0x1,0x8(%rbp)
    edf5:	48 89 55 00          	mov    %rdx,0x0(%rbp)
    edf9:	4c 89 c2             	mov    %r8,%rdx
    edfc:	e8 bf d9 ff ff       	call   c7c0 <dispose_chunk>
    ee01:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    ee06:	e9 02 ff ff ff       	jmp    ed0d <internal_memalign.constprop.0+0xdd>
    ee0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    ee10:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
    ee14:	4c 8b 05 e5 bf 01 00 	mov    0x1bfe5(%rip),%r8        # 2ae00 <mparams>
    ee1b:	83 e7 01             	and    $0x1,%edi
    ee1e:	48 09 d7             	or     %rdx,%rdi
    ee21:	48 01 ea             	add    %rbp,%rdx
    ee24:	48 83 cf 02          	or     $0x2,%rdi
    ee28:	48 89 7d 08          	mov    %rdi,0x8(%rbp)
    ee2c:	48 8d 3d 0d bc 01 00 	lea    0x1bc0d(%rip),%rdi        # 2aa40 <_gm_>
    ee33:	49 31 f8             	xor    %rdi,%r8
    ee36:	48 83 4a 08 01       	orq    $0x1,0x8(%rdx)
    ee3b:	4c 89 02             	mov    %r8,(%rdx)
    ee3e:	48 8b 50 f8          	mov    -0x8(%rax),%rdx
    ee42:	83 e2 01             	and    $0x1,%edx
    ee45:	48 09 ca             	or     %rcx,%rdx
    ee48:	48 83 ca 02          	or     $0x2,%rdx
    ee4c:	48 89 50 f8          	mov    %rdx,-0x8(%rax)
    ee50:	48 89 ca             	mov    %rcx,%rdx
    ee53:	48 83 4d 08 01       	orq    $0x1,0x8(%rbp)
    ee58:	4c 89 45 00          	mov    %r8,0x0(%rbp)
    ee5c:	e8 5f d9 ff ff       	call   c7c0 <dispose_chunk>
    ee61:	48 8b 55 08          	mov    0x8(%rbp),%rdx
    ee65:	48 89 d8             	mov    %rbx,%rax
    ee68:	e9 86 fe ff ff       	jmp    ecf3 <internal_memalign.constprop.0+0xc3>
    ee6d:	0f 1f 00             	nopl   (%rax)
    ee70:	48 c7 c2 60 ff ff ff 	mov    $0xffffffffffffff60,%rdx
    ee77:	bb 20 00 00 00       	mov    $0x20,%ebx
    ee7c:	e9 21 fe ff ff       	jmp    eca2 <internal_memalign.constprop.0+0x72>
    ee81:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    ee88:	c7 05 22 bf 01 00 00 	movl   $0x0,0x1bf22(%rip)        # 2adb4 <_gm_+0x374>
    ee8f:	00 00 00 
    ee92:	48 83 c4 18          	add    $0x18,%rsp
    ee96:	5b                   	pop    %rbx
    ee97:	5d                   	pop    %rbp
    ee98:	41 5c                	pop    %r12
    ee9a:	41 5d                	pop    %r13
    ee9c:	c3                   	ret    
    ee9d:	0f 1f 00             	nopl   (%rax)
    eea0:	b9 01 00 00 00       	mov    $0x1,%ecx
    eea5:	0f 1f 00             	nopl   (%rax)
    eea8:	8b 15 06 bf 01 00    	mov    0x1bf06(%rip),%edx        # 2adb4 <_gm_+0x374>
    eeae:	85 d2                	test   %edx,%edx
    eeb0:	75 f6                	jne    eea8 <internal_memalign.constprop.0+0x278>
    eeb2:	89 ca                	mov    %ecx,%edx
    eeb4:	87 15 fa be 01 00    	xchg   %edx,0x1befa(%rip)        # 2adb4 <_gm_+0x374>
    eeba:	85 d2                	test   %edx,%edx
    eebc:	75 ea                	jne    eea8 <internal_memalign.constprop.0+0x278>
    eebe:	e9 d0 fe ff ff       	jmp    ed93 <internal_memalign.constprop.0+0x163>
    eec3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    eeca:	00 00 00 
    eecd:	0f 1f 00             	nopl   (%rax)

000000000000eed0 <dlfree>:
    eed0:	f3 0f 1e fa          	endbr64 
    eed4:	48 85 ff             	test   %rdi,%rdi
    eed7:	0f 84 db 01 00 00    	je     f0b8 <dlfree+0x1e8>
    eedd:	41 55                	push   %r13
    eedf:	48 89 f8             	mov    %rdi,%rax
    eee2:	48 8d 57 f0          	lea    -0x10(%rdi),%rdx
    eee6:	41 54                	push   %r12
    eee8:	55                   	push   %rbp
    eee9:	53                   	push   %rbx
    eeea:	48 83 ec 08          	sub    $0x8,%rsp
    eeee:	48 8b 4f f8          	mov    -0x8(%rdi),%rcx
    eef2:	48 8b 35 07 bf 01 00 	mov    0x1bf07(%rip),%rsi        # 2ae00 <mparams>
    eef9:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    eefd:	48 8b 5c 0f f0       	mov    -0x10(%rdi,%rcx,1),%rbx
    ef02:	48 31 f3             	xor    %rsi,%rbx
    ef05:	48 3b 73 40          	cmp    0x40(%rbx),%rsi
    ef09:	0f 85 89 02 00 00    	jne    f198 <dlfree+0x2c8>
    ef0f:	f6 83 70 03 00 00 02 	testb  $0x2,0x370(%rbx)
    ef16:	0f 85 54 01 00 00    	jne    f070 <dlfree+0x1a0>
    ef1c:	4c 8b 4b 18          	mov    0x18(%rbx),%r9
    ef20:	4c 39 ca             	cmp    %r9,%rdx
    ef23:	0f 82 87 01 00 00    	jb     f0b0 <dlfree+0x1e0>
    ef29:	48 8b 48 f8          	mov    -0x8(%rax),%rcx
    ef2d:	49 89 c8             	mov    %rcx,%r8
    ef30:	41 83 e0 03          	and    $0x3,%r8d
    ef34:	49 83 f8 01          	cmp    $0x1,%r8
    ef38:	0f 84 72 01 00 00    	je     f0b0 <dlfree+0x1e0>
    ef3e:	48 89 ce             	mov    %rcx,%rsi
    ef41:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
    ef45:	83 e1 01             	and    $0x1,%ecx
    ef48:	48 8d 3c 32          	lea    (%rdx,%rsi,1),%rdi
    ef4c:	0f 84 9e 00 00 00    	je     eff0 <dlfree+0x120>
    ef52:	48 39 fa             	cmp    %rdi,%rdx
    ef55:	0f 83 55 01 00 00    	jae    f0b0 <dlfree+0x1e0>
    ef5b:	48 8b 47 08          	mov    0x8(%rdi),%rax
    ef5f:	a8 01                	test   $0x1,%al
    ef61:	0f 84 49 01 00 00    	je     f0b0 <dlfree+0x1e0>
    ef67:	a8 02                	test   $0x2,%al
    ef69:	0f 84 51 01 00 00    	je     f0c0 <dlfree+0x1f0>
    ef6f:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    ef73:	48 89 47 08          	mov    %rax,0x8(%rdi)
    ef77:	48 89 f0             	mov    %rsi,%rax
    ef7a:	48 83 c8 01          	or     $0x1,%rax
    ef7e:	48 89 42 08          	mov    %rax,0x8(%rdx)
    ef82:	48 89 34 32          	mov    %rsi,(%rdx,%rsi,1)
    ef86:	48 89 f1             	mov    %rsi,%rcx
    ef89:	48 c1 e9 03          	shr    $0x3,%rcx
    ef8d:	48 81 fe ff 00 00 00 	cmp    $0xff,%rsi
    ef94:	0f 87 ce 01 00 00    	ja     f168 <dlfree+0x298>
    ef9a:	8d 44 09 09          	lea    0x9(%rcx,%rcx,1),%eax
    ef9e:	8b 3b                	mov    (%rbx),%edi
    efa0:	48 8d 34 c3          	lea    (%rbx,%rax,8),%rsi
    efa4:	b8 01 00 00 00       	mov    $0x1,%eax
    efa9:	d3 e0                	shl    %cl,%eax
    efab:	85 c7                	test   %eax,%edi
    efad:	0f 84 35 06 00 00    	je     f5e8 <dlfree+0x718>
    efb3:	48 8b 46 10          	mov    0x10(%rsi),%rax
    efb7:	4c 39 c8             	cmp    %r9,%rax
    efba:	0f 82 d8 01 00 00    	jb     f198 <dlfree+0x2c8>
    efc0:	48 89 56 10          	mov    %rdx,0x10(%rsi)
    efc4:	48 89 50 18          	mov    %rdx,0x18(%rax)
    efc8:	48 89 42 10          	mov    %rax,0x10(%rdx)
    efcc:	48 89 72 18          	mov    %rsi,0x18(%rdx)
    efd0:	f6 83 70 03 00 00 02 	testb  $0x2,0x370(%rbx)
    efd7:	0f 85 73 01 00 00    	jne    f150 <dlfree+0x280>
    efdd:	48 83 c4 08          	add    $0x8,%rsp
    efe1:	5b                   	pop    %rbx
    efe2:	5d                   	pop    %rbp
    efe3:	41 5c                	pop    %r12
    efe5:	41 5d                	pop    %r13
    efe7:	c3                   	ret    
    efe8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    efef:	00 
    eff0:	48 8b 40 f0          	mov    -0x10(%rax),%rax
    eff4:	4d 85 c0             	test   %r8,%r8
    eff7:	74 d7                	je     efd0 <dlfree+0x100>
    eff9:	48 29 c2             	sub    %rax,%rdx
    effc:	48 01 c6             	add    %rax,%rsi
    efff:	4c 39 ca             	cmp    %r9,%rdx
    f002:	0f 82 a8 00 00 00    	jb     f0b0 <dlfree+0x1e0>
    f008:	48 39 53 20          	cmp    %rdx,0x20(%rbx)
    f00c:	0f 84 9e 05 00 00    	je     f5b0 <dlfree+0x6e0>
    f012:	48 89 c1             	mov    %rax,%rcx
    f015:	4c 8b 42 18          	mov    0x18(%rdx),%r8
    f019:	48 c1 e9 03          	shr    $0x3,%rcx
    f01d:	48 3d ff 00 00 00    	cmp    $0xff,%rax
    f023:	0f 87 67 02 00 00    	ja     f290 <dlfree+0x3c0>
    f029:	44 8d 54 09 09       	lea    0x9(%rcx,%rcx,1),%r10d
    f02e:	48 8b 42 10          	mov    0x10(%rdx),%rax
    f032:	4e 8d 14 d3          	lea    (%rbx,%r10,8),%r10
    f036:	49 39 c2             	cmp    %rax,%r10
    f039:	0f 85 ae 07 00 00    	jne    f7ed <dlfree+0x91d>
    f03f:	49 39 c0             	cmp    %rax,%r8
    f042:	0f 84 28 05 00 00    	je     f570 <dlfree+0x6a0>
    f048:	4d 39 c8             	cmp    %r9,%r8
    f04b:	0f 82 47 01 00 00    	jb     f198 <dlfree+0x2c8>
    f051:	49 39 50 10          	cmp    %rdx,0x10(%r8)
    f055:	0f 85 3d 01 00 00    	jne    f198 <dlfree+0x2c8>
    f05b:	4c 89 40 18          	mov    %r8,0x18(%rax)
    f05f:	49 89 40 10          	mov    %rax,0x10(%r8)
    f063:	e9 ea fe ff ff       	jmp    ef52 <dlfree+0x82>
    f068:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    f06f:	00 
    f070:	48 8d b3 74 03 00 00 	lea    0x374(%rbx),%rsi
    f077:	b9 01 00 00 00       	mov    $0x1,%ecx
    f07c:	87 0e                	xchg   %ecx,(%rsi)
    f07e:	85 c9                	test   %ecx,%ecx
    f080:	0f 84 96 fe ff ff    	je     ef1c <dlfree+0x4c>
    f086:	bf 01 00 00 00       	mov    $0x1,%edi
    f08b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    f090:	8b 8b 74 03 00 00    	mov    0x374(%rbx),%ecx
    f096:	85 c9                	test   %ecx,%ecx
    f098:	75 f6                	jne    f090 <dlfree+0x1c0>
    f09a:	89 f9                	mov    %edi,%ecx
    f09c:	87 0e                	xchg   %ecx,(%rsi)
    f09e:	85 c9                	test   %ecx,%ecx
    f0a0:	75 ee                	jne    f090 <dlfree+0x1c0>
    f0a2:	e9 75 fe ff ff       	jmp    ef1c <dlfree+0x4c>
    f0a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    f0ae:	00 00 
    f0b0:	e8 82 34 00 00       	call   12537 <abort>
    f0b5:	0f 1f 00             	nopl   (%rax)
    f0b8:	c3                   	ret    
    f0b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f0c0:	4c 8b 5b 20          	mov    0x20(%rbx),%r11
    f0c4:	48 39 7b 28          	cmp    %rdi,0x28(%rbx)
    f0c8:	0f 84 72 05 00 00    	je     f640 <dlfree+0x770>
    f0ce:	49 39 fb             	cmp    %rdi,%r11
    f0d1:	0f 84 91 06 00 00    	je     f768 <dlfree+0x898>
    f0d7:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    f0db:	4c 8b 47 18          	mov    0x18(%rdi),%r8
    f0df:	48 89 c1             	mov    %rax,%rcx
    f0e2:	48 01 c6             	add    %rax,%rsi
    f0e5:	48 c1 e9 03          	shr    $0x3,%rcx
    f0e9:	48 3d f8 00 00 00    	cmp    $0xf8,%rax
    f0ef:	0f 87 63 02 00 00    	ja     f358 <dlfree+0x488>
    f0f5:	44 8d 54 09 09       	lea    0x9(%rcx,%rcx,1),%r10d
    f0fa:	48 8b 47 10          	mov    0x10(%rdi),%rax
    f0fe:	4e 8d 14 d3          	lea    (%rbx,%r10,8),%r10
    f102:	49 39 c2             	cmp    %rax,%r10
    f105:	0f 85 73 04 00 00    	jne    f57e <dlfree+0x6ae>
    f10b:	49 39 c0             	cmp    %rax,%r8
    f10e:	0f 84 7c 06 00 00    	je     f790 <dlfree+0x8c0>
    f114:	4d 39 c8             	cmp    %r9,%r8
    f117:	72 7f                	jb     f198 <dlfree+0x2c8>
    f119:	49 39 78 10          	cmp    %rdi,0x10(%r8)
    f11d:	75 79                	jne    f198 <dlfree+0x2c8>
    f11f:	4c 89 40 18          	mov    %r8,0x18(%rax)
    f123:	49 89 40 10          	mov    %rax,0x10(%r8)
    f127:	48 89 f0             	mov    %rsi,%rax
    f12a:	48 83 c8 01          	or     $0x1,%rax
    f12e:	48 89 42 08          	mov    %rax,0x8(%rdx)
    f132:	48 89 34 32          	mov    %rsi,(%rdx,%rsi,1)
    f136:	4c 39 da             	cmp    %r11,%rdx
    f139:	0f 85 47 fe ff ff    	jne    ef86 <dlfree+0xb6>
    f13f:	48 89 73 08          	mov    %rsi,0x8(%rbx)
    f143:	e9 88 fe ff ff       	jmp    efd0 <dlfree+0x100>
    f148:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    f14f:	00 
    f150:	c7 83 74 03 00 00 00 	movl   $0x0,0x374(%rbx)
    f157:	00 00 00 
    f15a:	48 83 c4 08          	add    $0x8,%rsp
    f15e:	5b                   	pop    %rbx
    f15f:	5d                   	pop    %rbp
    f160:	41 5c                	pop    %r12
    f162:	41 5d                	pop    %r13
    f164:	c3                   	ret    
    f165:	0f 1f 00             	nopl   (%rax)
    f168:	48 89 f0             	mov    %rsi,%rax
    f16b:	48 c1 e8 08          	shr    $0x8,%rax
    f16f:	89 c1                	mov    %eax,%ecx
    f171:	85 c0                	test   %eax,%eax
    f173:	74 2b                	je     f1a0 <dlfree+0x2d0>
    f175:	3d ff ff 00 00       	cmp    $0xffff,%eax
    f17a:	0f 86 a0 02 00 00    	jbe    f420 <dlfree+0x550>
    f180:	b8 00 00 00 80       	mov    $0x80000000,%eax
    f185:	bf 50 03 00 00       	mov    $0x350,%edi
    f18a:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    f18f:	eb 19                	jmp    f1aa <dlfree+0x2da>
    f191:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f198:	e8 9a 33 00 00       	call   12537 <abort>
    f19d:	0f 1f 00             	nopl   (%rax)
    f1a0:	b8 01 00 00 00       	mov    $0x1,%eax
    f1a5:	bf 58 02 00 00       	mov    $0x258,%edi
    f1aa:	44 8b 43 04          	mov    0x4(%rbx),%r8d
    f1ae:	66 48 0f 6e ca       	movq   %rdx,%xmm1
    f1b3:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f1b7:	89 4a 38             	mov    %ecx,0x38(%rdx)
    f1ba:	66 0f 6c c9          	punpcklqdq %xmm1,%xmm1
    f1be:	0f 11 42 20          	movups %xmm0,0x20(%rdx)
    f1c2:	44 85 c0             	test   %r8d,%eax
    f1c5:	0f 84 2d 04 00 00    	je     f5f8 <dlfree+0x728>
    f1cb:	89 c8                	mov    %ecx,%eax
    f1cd:	49 89 f0             	mov    %rsi,%r8
    f1d0:	48 8b bc c3 58 02 00 	mov    0x258(%rbx,%rax,8),%rdi
    f1d7:	00 
    f1d8:	83 f9 1f             	cmp    $0x1f,%ecx
    f1db:	74 31                	je     f20e <dlfree+0x33e>
    f1dd:	89 c8                	mov    %ecx,%eax
    f1df:	b9 39 00 00 00       	mov    $0x39,%ecx
    f1e4:	d1 e8                	shr    %eax
    f1e6:	29 c1                	sub    %eax,%ecx
    f1e8:	49 d3 e0             	shl    %cl,%r8
    f1eb:	eb 21                	jmp    f20e <dlfree+0x33e>
    f1ed:	0f 1f 00             	nopl   (%rax)
    f1f0:	4c 89 c0             	mov    %r8,%rax
    f1f3:	4d 01 c0             	add    %r8,%r8
    f1f6:	48 c1 e8 3f          	shr    $0x3f,%rax
    f1fa:	48 83 c0 04          	add    $0x4,%rax
    f1fe:	48 8b 0c c7          	mov    (%rdi,%rax,8),%rcx
    f202:	48 85 c9             	test   %rcx,%rcx
    f205:	0f 84 15 04 00 00    	je     f620 <dlfree+0x750>
    f20b:	48 89 cf             	mov    %rcx,%rdi
    f20e:	48 8b 47 08          	mov    0x8(%rdi),%rax
    f212:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    f216:	48 39 f0             	cmp    %rsi,%rax
    f219:	75 d5                	jne    f1f0 <dlfree+0x320>
    f21b:	48 8b 47 10          	mov    0x10(%rdi),%rax
    f21f:	66 48 0f 6e d7       	movq   %rdi,%xmm2
    f224:	66 48 0f 6e c0       	movq   %rax,%xmm0
    f229:	66 0f 6c c2          	punpcklqdq %xmm2,%xmm0
    f22d:	4c 39 cf             	cmp    %r9,%rdi
    f230:	0f 82 62 ff ff ff    	jb     f198 <dlfree+0x2c8>
    f236:	4c 39 c8             	cmp    %r9,%rax
    f239:	0f 82 59 ff ff ff    	jb     f198 <dlfree+0x2c8>
    f23f:	48 89 50 18          	mov    %rdx,0x18(%rax)
    f243:	48 89 57 10          	mov    %rdx,0x10(%rdi)
    f247:	48 c7 42 30 00 00 00 	movq   $0x0,0x30(%rdx)
    f24e:	00 
    f24f:	0f 11 42 10          	movups %xmm0,0x10(%rdx)
    f253:	48 83 6b 38 01       	subq   $0x1,0x38(%rbx)
    f258:	0f 85 72 fd ff ff    	jne    efd0 <dlfree+0x100>
    f25e:	48 8b 83 88 03 00 00 	mov    0x388(%rbx),%rax
    f265:	48 85 c0             	test   %rax,%rax
    f268:	74 0f                	je     f279 <dlfree+0x3a9>
    f26a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    f270:	48 8b 40 10          	mov    0x10(%rax),%rax
    f274:	48 85 c0             	test   %rax,%rax
    f277:	75 f7                	jne    f270 <dlfree+0x3a0>
    f279:	48 c7 43 38 ff ff ff 	movq   $0xffffffffffffffff,0x38(%rbx)
    f280:	ff 
    f281:	e9 4a fd ff ff       	jmp    efd0 <dlfree+0x100>
    f286:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    f28d:	00 00 00 
    f290:	4c 8b 5a 30          	mov    0x30(%rdx),%r11
    f294:	49 39 d0             	cmp    %rdx,%r8
    f297:	0f 84 c3 01 00 00    	je     f460 <dlfree+0x590>
    f29d:	48 8b 42 10          	mov    0x10(%rdx),%rax
    f2a1:	4c 39 c8             	cmp    %r9,%rax
    f2a4:	0f 82 ee fe ff ff    	jb     f198 <dlfree+0x2c8>
    f2aa:	48 39 50 18          	cmp    %rdx,0x18(%rax)
    f2ae:	0f 85 e4 fe ff ff    	jne    f198 <dlfree+0x2c8>
    f2b4:	49 39 50 10          	cmp    %rdx,0x10(%r8)
    f2b8:	0f 85 da fe ff ff    	jne    f198 <dlfree+0x2c8>
    f2be:	4c 89 40 18          	mov    %r8,0x18(%rax)
    f2c2:	49 89 40 10          	mov    %rax,0x10(%r8)
    f2c6:	4d 85 db             	test   %r11,%r11
    f2c9:	0f 84 83 fc ff ff    	je     ef52 <dlfree+0x82>
    f2cf:	8b 42 38             	mov    0x38(%rdx),%eax
    f2d2:	48 89 c1             	mov    %rax,%rcx
    f2d5:	4c 8d 50 4a          	lea    0x4a(%rax),%r10
    f2d9:	48 39 94 c3 58 02 00 	cmp    %rdx,0x258(%rbx,%rax,8)
    f2e0:	00 
    f2e1:	0f 84 cc 04 00 00    	je     f7b3 <dlfree+0x8e3>
    f2e7:	4d 39 cb             	cmp    %r9,%r11
    f2ea:	0f 82 a8 fe ff ff    	jb     f198 <dlfree+0x2c8>
    f2f0:	49 39 53 20          	cmp    %rdx,0x20(%r11)
    f2f4:	0f 84 4e 05 00 00    	je     f848 <dlfree+0x978>
    f2fa:	4d 89 43 28          	mov    %r8,0x28(%r11)
    f2fe:	4d 85 c0             	test   %r8,%r8
    f301:	0f 84 4b fc ff ff    	je     ef52 <dlfree+0x82>
    f307:	4d 39 c8             	cmp    %r9,%r8
    f30a:	0f 82 88 fe ff ff    	jb     f198 <dlfree+0x2c8>
    f310:	48 8b 42 20          	mov    0x20(%rdx),%rax
    f314:	4d 89 58 30          	mov    %r11,0x30(%r8)
    f318:	48 85 c0             	test   %rax,%rax
    f31b:	74 11                	je     f32e <dlfree+0x45e>
    f31d:	4c 39 c8             	cmp    %r9,%rax
    f320:	0f 82 72 fe ff ff    	jb     f198 <dlfree+0x2c8>
    f326:	49 89 40 20          	mov    %rax,0x20(%r8)
    f32a:	4c 89 40 30          	mov    %r8,0x30(%rax)
    f32e:	48 8b 42 28          	mov    0x28(%rdx),%rax
    f332:	48 85 c0             	test   %rax,%rax
    f335:	0f 84 17 fc ff ff    	je     ef52 <dlfree+0x82>
    f33b:	4c 39 c8             	cmp    %r9,%rax
    f33e:	0f 82 54 fe ff ff    	jb     f198 <dlfree+0x2c8>
    f344:	49 89 40 28          	mov    %rax,0x28(%r8)
    f348:	4c 89 40 30          	mov    %r8,0x30(%rax)
    f34c:	e9 01 fc ff ff       	jmp    ef52 <dlfree+0x82>
    f351:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f358:	48 8b 6f 30          	mov    0x30(%rdi),%rbp
    f35c:	49 39 f8             	cmp    %rdi,%r8
    f35f:	0f 84 83 01 00 00    	je     f4e8 <dlfree+0x618>
    f365:	48 8b 47 10          	mov    0x10(%rdi),%rax
    f369:	4c 39 c8             	cmp    %r9,%rax
    f36c:	0f 82 26 fe ff ff    	jb     f198 <dlfree+0x2c8>
    f372:	48 39 78 18          	cmp    %rdi,0x18(%rax)
    f376:	0f 85 1c fe ff ff    	jne    f198 <dlfree+0x2c8>
    f37c:	49 39 78 10          	cmp    %rdi,0x10(%r8)
    f380:	0f 85 12 fe ff ff    	jne    f198 <dlfree+0x2c8>
    f386:	4c 89 40 18          	mov    %r8,0x18(%rax)
    f38a:	49 89 40 10          	mov    %rax,0x10(%r8)
    f38e:	48 85 ed             	test   %rbp,%rbp
    f391:	0f 84 90 fd ff ff    	je     f127 <dlfree+0x257>
    f397:	8b 47 38             	mov    0x38(%rdi),%eax
    f39a:	48 89 c1             	mov    %rax,%rcx
    f39d:	4c 8d 50 4a          	lea    0x4a(%rax),%r10
    f3a1:	48 39 bc c3 58 02 00 	cmp    %rdi,0x258(%rbx,%rax,8)
    f3a8:	00 
    f3a9:	0f 84 21 04 00 00    	je     f7d0 <dlfree+0x900>
    f3af:	4c 39 cd             	cmp    %r9,%rbp
    f3b2:	0f 82 e0 fd ff ff    	jb     f198 <dlfree+0x2c8>
    f3b8:	48 39 7d 20          	cmp    %rdi,0x20(%rbp)
    f3bc:	0f 84 8f 04 00 00    	je     f851 <dlfree+0x981>
    f3c2:	4c 89 45 28          	mov    %r8,0x28(%rbp)
    f3c6:	4d 85 c0             	test   %r8,%r8
    f3c9:	0f 84 58 fd ff ff    	je     f127 <dlfree+0x257>
    f3cf:	4d 39 c8             	cmp    %r9,%r8
    f3d2:	0f 82 c0 fd ff ff    	jb     f198 <dlfree+0x2c8>
    f3d8:	48 8b 47 20          	mov    0x20(%rdi),%rax
    f3dc:	49 89 68 30          	mov    %rbp,0x30(%r8)
    f3e0:	48 85 c0             	test   %rax,%rax
    f3e3:	74 11                	je     f3f6 <dlfree+0x526>
    f3e5:	4c 39 c8             	cmp    %r9,%rax
    f3e8:	0f 82 aa fd ff ff    	jb     f198 <dlfree+0x2c8>
    f3ee:	49 89 40 20          	mov    %rax,0x20(%r8)
    f3f2:	4c 89 40 30          	mov    %r8,0x30(%rax)
    f3f6:	48 8b 47 28          	mov    0x28(%rdi),%rax
    f3fa:	48 85 c0             	test   %rax,%rax
    f3fd:	0f 84 24 fd ff ff    	je     f127 <dlfree+0x257>
    f403:	4c 39 c8             	cmp    %r9,%rax
    f406:	0f 82 8c fd ff ff    	jb     f198 <dlfree+0x2c8>
    f40c:	49 89 40 28          	mov    %rax,0x28(%r8)
    f410:	4c 89 40 30          	mov    %r8,0x30(%rax)
    f414:	e9 0e fd ff ff       	jmp    f127 <dlfree+0x257>
    f419:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f420:	0f bd c1             	bsr    %ecx,%eax
    f423:	b9 26 00 00 00       	mov    $0x26,%ecx
    f428:	48 89 f7             	mov    %rsi,%rdi
    f42b:	83 f0 1f             	xor    $0x1f,%eax
    f42e:	29 c1                	sub    %eax,%ecx
    f430:	48 d3 ef             	shr    %cl,%rdi
    f433:	48 89 f9             	mov    %rdi,%rcx
    f436:	bf 1f 00 00 00       	mov    $0x1f,%edi
    f43b:	29 c7                	sub    %eax,%edi
    f43d:	83 e1 01             	and    $0x1,%ecx
    f440:	b8 01 00 00 00       	mov    $0x1,%eax
    f445:	8d 0c 79             	lea    (%rcx,%rdi,2),%ecx
    f448:	8d 79 4b             	lea    0x4b(%rcx),%edi
    f44b:	d3 e0                	shl    %cl,%eax
    f44d:	48 c1 e7 03          	shl    $0x3,%rdi
    f451:	e9 54 fd ff ff       	jmp    f1aa <dlfree+0x2da>
    f456:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    f45d:	00 00 00 
    f460:	48 8b 42 28          	mov    0x28(%rdx),%rax
    f464:	48 8d 4a 28          	lea    0x28(%rdx),%rcx
    f468:	48 85 c0             	test   %rax,%rax
    f46b:	0f 84 af 03 00 00    	je     f820 <dlfree+0x950>
    f471:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f478:	49 89 ca             	mov    %rcx,%r10
    f47b:	49 89 c0             	mov    %rax,%r8
    f47e:	48 8d 48 28          	lea    0x28(%rax),%rcx
    f482:	48 8b 40 28          	mov    0x28(%rax),%rax
    f486:	48 85 c0             	test   %rax,%rax
    f489:	75 ed                	jne    f478 <dlfree+0x5a8>
    f48b:	49 8b 40 20          	mov    0x20(%r8),%rax
    f48f:	49 8d 48 20          	lea    0x20(%r8),%rcx
    f493:	48 85 c0             	test   %rax,%rax
    f496:	75 e0                	jne    f478 <dlfree+0x5a8>
    f498:	4d 39 ca             	cmp    %r9,%r10
    f49b:	0f 82 f7 fc ff ff    	jb     f198 <dlfree+0x2c8>
    f4a1:	49 c7 02 00 00 00 00 	movq   $0x0,(%r10)
    f4a8:	4d 85 db             	test   %r11,%r11
    f4ab:	0f 84 a1 fa ff ff    	je     ef52 <dlfree+0x82>
    f4b1:	8b 42 38             	mov    0x38(%rdx),%eax
    f4b4:	48 8d 48 4a          	lea    0x4a(%rax),%rcx
    f4b8:	48 39 94 c3 58 02 00 	cmp    %rdx,0x258(%rbx,%rax,8)
    f4bf:	00 
    f4c0:	0f 84 a2 03 00 00    	je     f868 <dlfree+0x998>
    f4c6:	4d 39 cb             	cmp    %r9,%r11
    f4c9:	0f 82 c9 fc ff ff    	jb     f198 <dlfree+0x2c8>
    f4cf:	49 39 53 20          	cmp    %rdx,0x20(%r11)
    f4d3:	0f 84 ac 03 00 00    	je     f885 <dlfree+0x9b5>
    f4d9:	4d 89 43 28          	mov    %r8,0x28(%r11)
    f4dd:	e9 25 fe ff ff       	jmp    f307 <dlfree+0x437>
    f4e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    f4e8:	48 8b 47 28          	mov    0x28(%rdi),%rax
    f4ec:	48 8d 4f 28          	lea    0x28(%rdi),%rcx
    f4f0:	48 85 c0             	test   %rax,%rax
    f4f3:	0f 84 39 03 00 00    	je     f832 <dlfree+0x962>
    f4f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f500:	49 89 ca             	mov    %rcx,%r10
    f503:	49 89 c0             	mov    %rax,%r8
    f506:	48 8d 48 28          	lea    0x28(%rax),%rcx
    f50a:	48 8b 40 28          	mov    0x28(%rax),%rax
    f50e:	48 85 c0             	test   %rax,%rax
    f511:	75 ed                	jne    f500 <dlfree+0x630>
    f513:	49 8b 40 20          	mov    0x20(%r8),%rax
    f517:	49 8d 48 20          	lea    0x20(%r8),%rcx
    f51b:	48 85 c0             	test   %rax,%rax
    f51e:	75 e0                	jne    f500 <dlfree+0x630>
    f520:	4d 39 ca             	cmp    %r9,%r10
    f523:	0f 82 6f fc ff ff    	jb     f198 <dlfree+0x2c8>
    f529:	49 c7 02 00 00 00 00 	movq   $0x0,(%r10)
    f530:	48 85 ed             	test   %rbp,%rbp
    f533:	0f 84 ee fb ff ff    	je     f127 <dlfree+0x257>
    f539:	8b 47 38             	mov    0x38(%rdi),%eax
    f53c:	48 8d 48 4a          	lea    0x4a(%rax),%rcx
    f540:	48 39 bc c3 58 02 00 	cmp    %rdi,0x258(%rbx,%rax,8)
    f547:	00 
    f548:	0f 84 24 03 00 00    	je     f872 <dlfree+0x9a2>
    f54e:	4c 39 cd             	cmp    %r9,%rbp
    f551:	0f 82 41 fc ff ff    	jb     f198 <dlfree+0x2c8>
    f557:	48 39 7d 20          	cmp    %rdi,0x20(%rbp)
    f55b:	0f 84 1b 03 00 00    	je     f87c <dlfree+0x9ac>
    f561:	4c 89 45 28          	mov    %r8,0x28(%rbp)
    f565:	e9 65 fe ff ff       	jmp    f3cf <dlfree+0x4ff>
    f56a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    f570:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    f575:	d3 c0                	rol    %cl,%eax
    f577:	21 03                	and    %eax,(%rbx)
    f579:	e9 d4 f9 ff ff       	jmp    ef52 <dlfree+0x82>
    f57e:	4c 39 c8             	cmp    %r9,%rax
    f581:	0f 82 11 fc ff ff    	jb     f198 <dlfree+0x2c8>
    f587:	48 39 78 18          	cmp    %rdi,0x18(%rax)
    f58b:	0f 85 07 fc ff ff    	jne    f198 <dlfree+0x2c8>
    f591:	49 39 c0             	cmp    %rax,%r8
    f594:	0f 84 f6 01 00 00    	je     f790 <dlfree+0x8c0>
    f59a:	4d 39 c2             	cmp    %r8,%r10
    f59d:	0f 84 7c fb ff ff    	je     f11f <dlfree+0x24f>
    f5a3:	e9 6c fb ff ff       	jmp    f114 <dlfree+0x244>
    f5a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    f5af:	00 
    f5b0:	48 8b 47 08          	mov    0x8(%rdi),%rax
    f5b4:	48 89 c1             	mov    %rax,%rcx
    f5b7:	48 f7 d1             	not    %rcx
    f5ba:	83 e1 03             	and    $0x3,%ecx
    f5bd:	0f 85 8f f9 ff ff    	jne    ef52 <dlfree+0x82>
    f5c3:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    f5c7:	48 89 73 08          	mov    %rsi,0x8(%rbx)
    f5cb:	48 89 47 08          	mov    %rax,0x8(%rdi)
    f5cf:	48 89 f0             	mov    %rsi,%rax
    f5d2:	48 83 c8 01          	or     $0x1,%rax
    f5d6:	48 89 42 08          	mov    %rax,0x8(%rdx)
    f5da:	48 89 37             	mov    %rsi,(%rdi)
    f5dd:	e9 ee f9 ff ff       	jmp    efd0 <dlfree+0x100>
    f5e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    f5e8:	09 c7                	or     %eax,%edi
    f5ea:	48 89 f0             	mov    %rsi,%rax
    f5ed:	89 3b                	mov    %edi,(%rbx)
    f5ef:	e9 cc f9 ff ff       	jmp    efc0 <dlfree+0xf0>
    f5f4:	0f 1f 40 00          	nopl   0x0(%rax)
    f5f8:	44 09 c0             	or     %r8d,%eax
    f5fb:	48 01 df             	add    %rbx,%rdi
    f5fe:	89 43 04             	mov    %eax,0x4(%rbx)
    f601:	48 89 94 cb 58 02 00 	mov    %rdx,0x258(%rbx,%rcx,8)
    f608:	00 
    f609:	48 89 7a 30          	mov    %rdi,0x30(%rdx)
    f60d:	0f 11 4a 10          	movups %xmm1,0x10(%rdx)
    f611:	e9 3d fc ff ff       	jmp    f253 <dlfree+0x383>
    f616:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    f61d:	00 00 00 
    f620:	48 8d 0c c7          	lea    (%rdi,%rax,8),%rcx
    f624:	4c 39 c9             	cmp    %r9,%rcx
    f627:	0f 82 6b fb ff ff    	jb     f198 <dlfree+0x2c8>
    f62d:	48 89 14 c7          	mov    %rdx,(%rdi,%rax,8)
    f631:	48 89 7a 30          	mov    %rdi,0x30(%rdx)
    f635:	0f 11 4a 10          	movups %xmm1,0x10(%rdx)
    f639:	e9 15 fc ff ff       	jmp    f253 <dlfree+0x383>
    f63e:	66 90                	xchg   %ax,%ax
    f640:	48 03 73 10          	add    0x10(%rbx),%rsi
    f644:	48 89 53 28          	mov    %rdx,0x28(%rbx)
    f648:	48 89 f0             	mov    %rsi,%rax
    f64b:	48 89 73 10          	mov    %rsi,0x10(%rbx)
    f64f:	48 83 c8 01          	or     $0x1,%rax
    f653:	48 89 42 08          	mov    %rax,0x8(%rdx)
    f657:	4c 39 da             	cmp    %r11,%rdx
    f65a:	0f 84 3e 01 00 00    	je     f79e <dlfree+0x8ce>
    f660:	48 39 73 30          	cmp    %rsi,0x30(%rbx)
    f664:	0f 83 66 f9 ff ff    	jae    efd0 <dlfree+0x100>
    f66a:	48 83 3d 8e b7 01 00 	cmpq   $0x0,0x1b78e(%rip)        # 2ae00 <mparams>
    f671:	00 
    f672:	0f 84 e2 01 00 00    	je     f85a <dlfree+0x98a>
    f678:	48 85 d2             	test   %rdx,%rdx
    f67b:	0f 84 4f f9 ff ff    	je     efd0 <dlfree+0x100>
    f681:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
    f685:	48 83 f9 50          	cmp    $0x50,%rcx
    f689:	0f 86 a7 00 00 00    	jbe    f736 <dlfree+0x866>
    f68f:	48 8b 35 7a b7 01 00 	mov    0x1b77a(%rip),%rsi        # 2ae10 <mparams+0x10>
    f696:	48 8d ab 78 03 00 00 	lea    0x378(%rbx),%rbp
    f69d:	0f 1f 00             	nopl   (%rax)
    f6a0:	48 8b 45 00          	mov    0x0(%rbp),%rax
    f6a4:	48 39 c2             	cmp    %rax,%rdx
    f6a7:	72 09                	jb     f6b2 <dlfree+0x7e2>
    f6a9:	48 03 45 08          	add    0x8(%rbp),%rax
    f6ad:	48 39 c2             	cmp    %rax,%rdx
    f6b0:	72 09                	jb     f6bb <dlfree+0x7eb>
    f6b2:	48 8b 6d 10          	mov    0x10(%rbp),%rbp
    f6b6:	48 85 ed             	test   %rbp,%rbp
    f6b9:	75 e5                	jne    f6a0 <dlfree+0x7d0>
    f6bb:	f6 45 18 08          	testb  $0x8,0x18(%rbp)
    f6bf:	75 75                	jne    f736 <dlfree+0x866>
    f6c1:	48 8d 44 31 af       	lea    -0x51(%rcx,%rsi,1),%rax
    f6c6:	31 d2                	xor    %edx,%edx
    f6c8:	48 f7 f6             	div    %rsi
    f6cb:	48 83 e8 01          	sub    $0x1,%rax
    f6cf:	48 0f af c6          	imul   %rsi,%rax
    f6d3:	49 89 c4             	mov    %rax,%r12
    f6d6:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
    f6dd:	ff ff 7f 
    f6e0:	4c 39 e0             	cmp    %r12,%rax
    f6e3:	73 0d                	jae    f6f2 <dlfree+0x822>
    f6e5:	49 bc 00 00 00 00 00 	movabs $0x8000000000000000,%r12
    f6ec:	00 00 80 
    f6ef:	49 29 f4             	sub    %rsi,%r12
    f6f2:	b8 01 00 00 00       	mov    $0x1,%eax
    f6f7:	87 05 33 b7 01 00    	xchg   %eax,0x1b733(%rip)        # 2ae30 <malloc_global_mutex>
    f6fd:	48 8d 15 2c b7 01 00 	lea    0x1b72c(%rip),%rdx        # 2ae30 <malloc_global_mutex>
    f704:	b9 01 00 00 00       	mov    $0x1,%ecx
    f709:	85 c0                	test   %eax,%eax
    f70b:	75 40                	jne    f74d <dlfree+0x87d>
    f70d:	31 ff                	xor    %edi,%edi
    f70f:	e8 ec ce ff ff       	call   c600 <sbrk>
    f714:	49 89 c5             	mov    %rax,%r13
    f717:	48 8b 45 08          	mov    0x8(%rbp),%rax
    f71b:	48 03 45 00          	add    0x0(%rbp),%rax
    f71f:	49 39 c5             	cmp    %rax,%r13
    f722:	0f 84 e5 01 00 00    	je     f90d <dlfree+0xa3d>
    f728:	c7 05 fe b6 01 00 00 	movl   $0x0,0x1b6fe(%rip)        # 2ae30 <malloc_global_mutex>
    f72f:	00 00 00 
    f732:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
    f736:	48 39 4b 30          	cmp    %rcx,0x30(%rbx)
    f73a:	0f 83 90 f8 ff ff    	jae    efd0 <dlfree+0x100>
    f740:	48 c7 43 30 ff ff ff 	movq   $0xffffffffffffffff,0x30(%rbx)
    f747:	ff 
    f748:	e9 83 f8 ff ff       	jmp    efd0 <dlfree+0x100>
    f74d:	8b 02                	mov    (%rdx),%eax
    f74f:	85 c0                	test   %eax,%eax
    f751:	75 fa                	jne    f74d <dlfree+0x87d>
    f753:	89 c8                	mov    %ecx,%eax
    f755:	87 05 d5 b6 01 00    	xchg   %eax,0x1b6d5(%rip)        # 2ae30 <malloc_global_mutex>
    f75b:	85 c0                	test   %eax,%eax
    f75d:	75 ee                	jne    f74d <dlfree+0x87d>
    f75f:	eb ac                	jmp    f70d <dlfree+0x83d>
    f761:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f768:	48 03 73 08          	add    0x8(%rbx),%rsi
    f76c:	48 89 53 20          	mov    %rdx,0x20(%rbx)
    f770:	48 89 f0             	mov    %rsi,%rax
    f773:	48 89 73 08          	mov    %rsi,0x8(%rbx)
    f777:	48 83 c8 01          	or     $0x1,%rax
    f77b:	48 89 42 08          	mov    %rax,0x8(%rdx)
    f77f:	48 89 34 32          	mov    %rsi,(%rdx,%rsi,1)
    f783:	e9 48 f8 ff ff       	jmp    efd0 <dlfree+0x100>
    f788:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    f78f:	00 
    f790:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    f795:	d3 c0                	rol    %cl,%eax
    f797:	21 03                	and    %eax,(%rbx)
    f799:	e9 89 f9 ff ff       	jmp    f127 <dlfree+0x257>
    f79e:	48 c7 43 20 00 00 00 	movq   $0x0,0x20(%rbx)
    f7a5:	00 
    f7a6:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
    f7ad:	00 
    f7ae:	e9 ad fe ff ff       	jmp    f660 <dlfree+0x790>
    f7b3:	4e 89 44 d3 08       	mov    %r8,0x8(%rbx,%r10,8)
    f7b8:	4d 85 c0             	test   %r8,%r8
    f7bb:	0f 85 46 fb ff ff    	jne    f307 <dlfree+0x437>
    f7c1:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    f7c6:	d3 c0                	rol    %cl,%eax
    f7c8:	21 43 04             	and    %eax,0x4(%rbx)
    f7cb:	e9 82 f7 ff ff       	jmp    ef52 <dlfree+0x82>
    f7d0:	4e 89 44 d3 08       	mov    %r8,0x8(%rbx,%r10,8)
    f7d5:	4d 85 c0             	test   %r8,%r8
    f7d8:	0f 85 f1 fb ff ff    	jne    f3cf <dlfree+0x4ff>
    f7de:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    f7e3:	d3 c0                	rol    %cl,%eax
    f7e5:	21 43 04             	and    %eax,0x4(%rbx)
    f7e8:	e9 3a f9 ff ff       	jmp    f127 <dlfree+0x257>
    f7ed:	4c 39 c8             	cmp    %r9,%rax
    f7f0:	0f 82 a2 f9 ff ff    	jb     f198 <dlfree+0x2c8>
    f7f6:	48 39 50 18          	cmp    %rdx,0x18(%rax)
    f7fa:	0f 85 98 f9 ff ff    	jne    f198 <dlfree+0x2c8>
    f800:	49 39 c0             	cmp    %rax,%r8
    f803:	0f 84 67 fd ff ff    	je     f570 <dlfree+0x6a0>
    f809:	4d 39 c2             	cmp    %r8,%r10
    f80c:	0f 84 49 f8 ff ff    	je     f05b <dlfree+0x18b>
    f812:	e9 31 f8 ff ff       	jmp    f048 <dlfree+0x178>
    f817:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    f81e:	00 00 
    f820:	48 8b 42 20          	mov    0x20(%rdx),%rax
    f824:	48 85 c0             	test   %rax,%rax
    f827:	74 65                	je     f88e <dlfree+0x9be>
    f829:	48 8d 4a 20          	lea    0x20(%rdx),%rcx
    f82d:	e9 46 fc ff ff       	jmp    f478 <dlfree+0x5a8>
    f832:	48 8b 47 20          	mov    0x20(%rdi),%rax
    f836:	48 85 c0             	test   %rax,%rax
    f839:	0f 84 8f 00 00 00    	je     f8ce <dlfree+0x9fe>
    f83f:	48 8d 4f 20          	lea    0x20(%rdi),%rcx
    f843:	e9 b8 fc ff ff       	jmp    f500 <dlfree+0x630>
    f848:	4d 89 43 20          	mov    %r8,0x20(%r11)
    f84c:	e9 ad fa ff ff       	jmp    f2fe <dlfree+0x42e>
    f851:	4c 89 45 20          	mov    %r8,0x20(%rbp)
    f855:	e9 6c fb ff ff       	jmp    f3c6 <dlfree+0x4f6>
    f85a:	e8 91 d7 ff ff       	call   cff0 <init_mparams.isra.0>
    f85f:	48 8b 53 28          	mov    0x28(%rbx),%rdx
    f863:	e9 10 fe ff ff       	jmp    f678 <dlfree+0x7a8>
    f868:	4c 89 44 cb 08       	mov    %r8,0x8(%rbx,%rcx,8)
    f86d:	e9 95 fa ff ff       	jmp    f307 <dlfree+0x437>
    f872:	4c 89 44 cb 08       	mov    %r8,0x8(%rbx,%rcx,8)
    f877:	e9 53 fb ff ff       	jmp    f3cf <dlfree+0x4ff>
    f87c:	4c 89 45 20          	mov    %r8,0x20(%rbp)
    f880:	e9 4a fb ff ff       	jmp    f3cf <dlfree+0x4ff>
    f885:	4d 89 43 20          	mov    %r8,0x20(%r11)
    f889:	e9 79 fa ff ff       	jmp    f307 <dlfree+0x437>
    f88e:	4d 85 db             	test   %r11,%r11
    f891:	0f 84 bb f6 ff ff    	je     ef52 <dlfree+0x82>
    f897:	8b 42 38             	mov    0x38(%rdx),%eax
    f89a:	48 89 c1             	mov    %rax,%rcx
    f89d:	4c 8d 40 4a          	lea    0x4a(%rax),%r8
    f8a1:	48 39 94 c3 58 02 00 	cmp    %rdx,0x258(%rbx,%rax,8)
    f8a8:	00 
    f8a9:	0f 84 fd 00 00 00    	je     f9ac <dlfree+0xadc>
    f8af:	4d 39 cb             	cmp    %r9,%r11
    f8b2:	0f 82 e0 f8 ff ff    	jb     f198 <dlfree+0x2c8>
    f8b8:	49 3b 53 20          	cmp    0x20(%r11),%rdx
    f8bc:	0f 84 02 01 00 00    	je     f9c4 <dlfree+0xaf4>
    f8c2:	45 31 c0             	xor    %r8d,%r8d
    f8c5:	4d 89 43 28          	mov    %r8,0x28(%r11)
    f8c9:	e9 84 f6 ff ff       	jmp    ef52 <dlfree+0x82>
    f8ce:	48 85 ed             	test   %rbp,%rbp
    f8d1:	0f 84 50 f8 ff ff    	je     f127 <dlfree+0x257>
    f8d7:	8b 47 38             	mov    0x38(%rdi),%eax
    f8da:	48 89 c1             	mov    %rax,%rcx
    f8dd:	4c 8d 40 4a          	lea    0x4a(%rax),%r8
    f8e1:	48 3b bc c3 58 02 00 	cmp    0x258(%rbx,%rax,8),%rdi
    f8e8:	00 
    f8e9:	0f 84 b1 00 00 00    	je     f9a0 <dlfree+0xad0>
    f8ef:	4c 39 cd             	cmp    %r9,%rbp
    f8f2:	0f 82 a0 f8 ff ff    	jb     f198 <dlfree+0x2c8>
    f8f8:	48 39 7d 20          	cmp    %rdi,0x20(%rbp)
    f8fc:	0f 84 b7 00 00 00    	je     f9b9 <dlfree+0xae9>
    f902:	31 c0                	xor    %eax,%eax
    f904:	48 89 45 28          	mov    %rax,0x28(%rbp)
    f908:	e9 1a f8 ff ff       	jmp    f127 <dlfree+0x257>
    f90d:	4c 89 e7             	mov    %r12,%rdi
    f910:	48 f7 df             	neg    %rdi
    f913:	e8 e8 cc ff ff       	call   c600 <sbrk>
    f918:	31 ff                	xor    %edi,%edi
    f91a:	49 89 c4             	mov    %rax,%r12
    f91d:	e8 de cc ff ff       	call   c600 <sbrk>
    f922:	49 83 c4 01          	add    $0x1,%r12
    f926:	0f 84 fc fd ff ff    	je     f728 <dlfree+0x858>
    f92c:	4c 39 e8             	cmp    %r13,%rax
    f92f:	0f 83 f3 fd ff ff    	jae    f728 <dlfree+0x858>
    f935:	49 29 c5             	sub    %rax,%r13
    f938:	c7 05 ee b4 01 00 00 	movl   $0x0,0x1b4ee(%rip)        # 2ae30 <malloc_global_mutex>
    f93f:	00 00 00 
    f942:	48 8b 43 28          	mov    0x28(%rbx),%rax
    f946:	48 8b 53 10          	mov    0x10(%rbx),%rdx
    f94a:	4c 29 6d 08          	sub    %r13,0x8(%rbp)
    f94e:	48 89 c6             	mov    %rax,%rsi
    f951:	4c 29 ea             	sub    %r13,%rdx
    f954:	48 8d 48 10          	lea    0x10(%rax),%rcx
    f958:	4c 29 ab 58 03 00 00 	sub    %r13,0x358(%rbx)
    f95f:	83 e6 0f             	and    $0xf,%esi
    f962:	74 09                	je     f96d <dlfree+0xa9d>
    f964:	48 f7 d9             	neg    %rcx
    f967:	48 89 ce             	mov    %rcx,%rsi
    f96a:	83 e6 0f             	and    $0xf,%esi
    f96d:	48 89 d1             	mov    %rdx,%rcx
    f970:	48 8d 3c 30          	lea    (%rax,%rsi,1),%rdi
    f974:	48 29 f1             	sub    %rsi,%rcx
    f977:	48 89 7b 28          	mov    %rdi,0x28(%rbx)
    f97b:	48 89 4b 10          	mov    %rcx,0x10(%rbx)
    f97f:	48 83 c9 01          	or     $0x1,%rcx
    f983:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
    f987:	48 c7 44 10 08 50 00 	movq   $0x50,0x8(%rax,%rdx,1)
    f98e:	00 00 
    f990:	48 8b 05 89 b4 01 00 	mov    0x1b489(%rip),%rax        # 2ae20 <mparams+0x20>
    f997:	48 89 43 30          	mov    %rax,0x30(%rbx)
    f99b:	e9 30 f6 ff ff       	jmp    efd0 <dlfree+0x100>
    f9a0:	31 ff                	xor    %edi,%edi
    f9a2:	4a 89 7c c3 08       	mov    %rdi,0x8(%rbx,%r8,8)
    f9a7:	e9 32 fe ff ff       	jmp    f7de <dlfree+0x90e>
    f9ac:	45 31 db             	xor    %r11d,%r11d
    f9af:	4e 89 5c c3 08       	mov    %r11,0x8(%rbx,%r8,8)
    f9b4:	e9 08 fe ff ff       	jmp    f7c1 <dlfree+0x8f1>
    f9b9:	31 c9                	xor    %ecx,%ecx
    f9bb:	48 89 4d 20          	mov    %rcx,0x20(%rbp)
    f9bf:	e9 63 f7 ff ff       	jmp    f127 <dlfree+0x257>
    f9c4:	45 31 d2             	xor    %r10d,%r10d
    f9c7:	4d 89 53 20          	mov    %r10,0x20(%r11)
    f9cb:	e9 82 f5 ff ff       	jmp    ef52 <dlfree+0x82>

000000000000f9d0 <calloc>:
    f9d0:	f3 0f 1e fa          	endbr64 
    f9d4:	55                   	push   %rbp
    f9d5:	53                   	push   %rbx
    f9d6:	48 89 fb             	mov    %rdi,%rbx
    f9d9:	48 83 ec 08          	sub    $0x8,%rsp
    f9dd:	48 85 ff             	test   %rdi,%rdi
    f9e0:	74 1b                	je     f9fd <calloc+0x2d>
    f9e2:	48 89 f8             	mov    %rdi,%rax
    f9e5:	48 f7 e6             	mul    %rsi
    f9e8:	0f 90 c2             	seto   %dl
    f9eb:	48 09 fe             	or     %rdi,%rsi
    f9ee:	48 89 c3             	mov    %rax,%rbx
    f9f1:	0f b6 d2             	movzbl %dl,%edx
    f9f4:	48 81 fe ff ff 00 00 	cmp    $0xffff,%rsi
    f9fb:	77 2b                	ja     fa28 <calloc+0x58>
    f9fd:	48 89 df             	mov    %rbx,%rdi
    fa00:	e8 db d6 ff ff       	call   d0e0 <dlmalloc>
    fa05:	48 89 c5             	mov    %rax,%rbp
    fa08:	48 85 c0             	test   %rax,%rax
    fa0b:	74 0d                	je     fa1a <calloc+0x4a>
    fa0d:	48 89 da             	mov    %rbx,%rdx
    fa10:	31 f6                	xor    %esi,%esi
    fa12:	48 89 c7             	mov    %rax,%rdi
    fa15:	e8 a6 0e 00 00       	call   108c0 <memset>
    fa1a:	48 83 c4 08          	add    $0x8,%rsp
    fa1e:	48 89 e8             	mov    %rbp,%rax
    fa21:	5b                   	pop    %rbx
    fa22:	5d                   	pop    %rbp
    fa23:	c3                   	ret    
    fa24:	0f 1f 40 00          	nopl   0x0(%rax)
    fa28:	48 85 d2             	test   %rdx,%rdx
    fa2b:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    fa32:	48 0f 45 d8          	cmovne %rax,%rbx
    fa36:	eb c5                	jmp    f9fd <calloc+0x2d>
    fa38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    fa3f:	00 

000000000000fa40 <dlrealloc>:
    fa40:	f3 0f 1e fa          	endbr64 
    fa44:	41 57                	push   %r15
    fa46:	41 56                	push   %r14
    fa48:	41 55                	push   %r13
    fa4a:	41 54                	push   %r12
    fa4c:	55                   	push   %rbp
    fa4d:	53                   	push   %rbx
    fa4e:	48 89 f3             	mov    %rsi,%rbx
    fa51:	48 83 ec 08          	sub    $0x8,%rsp
    fa55:	48 85 ff             	test   %rdi,%rdi
    fa58:	0f 84 f2 01 00 00    	je     fc50 <dlrealloc+0x210>
    fa5e:	48 81 fe 7f ff ff ff 	cmp    $0xffffffffffffff7f,%rsi
    fa65:	0f 87 05 02 00 00    	ja     fc70 <dlrealloc+0x230>
    fa6b:	48 89 fd             	mov    %rdi,%rbp
    fa6e:	48 85 f6             	test   %rsi,%rsi
    fa71:	0f 84 11 02 00 00    	je     fc88 <dlrealloc+0x248>
    fa77:	48 8d 46 1f          	lea    0x1f(%rsi),%rax
    fa7b:	ba 20 00 00 00       	mov    $0x20,%edx
    fa80:	4c 8d 6f f0          	lea    -0x10(%rdi),%r13
    fa84:	48 8b 0d 75 b3 01 00 	mov    0x1b375(%rip),%rcx        # 2ae00 <mparams>
    fa8b:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
    fa8f:	48 83 fe 0e          	cmp    $0xe,%rsi
    fa93:	48 8b 77 f8          	mov    -0x8(%rdi),%rsi
    fa97:	48 0f 46 c2          	cmovbe %rdx,%rax
    fa9b:	48 89 f2             	mov    %rsi,%rdx
    fa9e:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    faa2:	49 8d 7c 15 00       	lea    0x0(%r13,%rdx,1),%rdi
    faa7:	4c 8b 27             	mov    (%rdi),%r12
    faaa:	49 31 cc             	xor    %rcx,%r12
    faad:	49 3b 4c 24 40       	cmp    0x40(%r12),%rcx
    fab2:	0f 85 90 01 00 00    	jne    fc48 <dlrealloc+0x208>
    fab8:	41 f6 84 24 70 03 00 	testb  $0x2,0x370(%r12)
    fabf:	00 02 
    fac1:	0f 85 89 00 00 00    	jne    fb50 <dlrealloc+0x110>
    fac7:	4d 8b 44 24 18       	mov    0x18(%r12),%r8
    facc:	4d 39 c5             	cmp    %r8,%r13
    facf:	0f 82 73 01 00 00    	jb     fc48 <dlrealloc+0x208>
    fad5:	48 89 f1             	mov    %rsi,%rcx
    fad8:	83 e1 03             	and    $0x3,%ecx
    fadb:	48 83 f9 01          	cmp    $0x1,%rcx
    fadf:	0f 84 63 01 00 00    	je     fc48 <dlrealloc+0x208>
    fae5:	49 39 fd             	cmp    %rdi,%r13
    fae8:	0f 83 5a 01 00 00    	jae    fc48 <dlrealloc+0x208>
    faee:	4c 8b 4f 08          	mov    0x8(%rdi),%r9
    faf2:	41 f6 c1 01          	test   $0x1,%r9b
    faf6:	0f 84 4c 01 00 00    	je     fc48 <dlrealloc+0x208>
    fafc:	48 85 c9             	test   %rcx,%rcx
    faff:	0f 84 8b 00 00 00    	je     fb90 <dlrealloc+0x150>
    fb05:	48 39 c2             	cmp    %rax,%rdx
    fb08:	0f 82 82 01 00 00    	jb     fc90 <dlrealloc+0x250>
    fb0e:	48 29 c2             	sub    %rax,%rdx
    fb11:	49 89 d6             	mov    %rdx,%r14
    fb14:	48 83 fa 1f          	cmp    $0x1f,%rdx
    fb18:	0f 87 fa 02 00 00    	ja     fe18 <dlrealloc+0x3d8>
    fb1e:	41 8b 8c 24 70 03 00 	mov    0x370(%r12),%ecx
    fb25:	00 
    fb26:	83 e1 02             	and    $0x2,%ecx
    fb29:	0f 85 31 02 00 00    	jne    fd60 <dlrealloc+0x320>
    fb2f:	4d 85 ed             	test   %r13,%r13
    fb32:	0f 84 94 00 00 00    	je     fbcc <dlrealloc+0x18c>
    fb38:	49 89 ec             	mov    %rbp,%r12
    fb3b:	48 83 c4 08          	add    $0x8,%rsp
    fb3f:	4c 89 e0             	mov    %r12,%rax
    fb42:	5b                   	pop    %rbx
    fb43:	5d                   	pop    %rbp
    fb44:	41 5c                	pop    %r12
    fb46:	41 5d                	pop    %r13
    fb48:	41 5e                	pop    %r14
    fb4a:	41 5f                	pop    %r15
    fb4c:	c3                   	ret    
    fb4d:	0f 1f 00             	nopl   (%rax)
    fb50:	49 8d 8c 24 74 03 00 	lea    0x374(%r12),%rcx
    fb57:	00 
    fb58:	ba 01 00 00 00       	mov    $0x1,%edx
    fb5d:	87 11                	xchg   %edx,(%rcx)
    fb5f:	85 d2                	test   %edx,%edx
    fb61:	0f 85 b9 00 00 00    	jne    fc20 <dlrealloc+0x1e0>
    fb67:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    fb6b:	4d 8b 44 24 18       	mov    0x18(%r12),%r8
    fb70:	48 89 f2             	mov    %rsi,%rdx
    fb73:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    fb77:	49 8d 7c 15 00       	lea    0x0(%r13,%rdx,1),%rdi
    fb7c:	4d 39 c5             	cmp    %r8,%r13
    fb7f:	0f 83 50 ff ff ff    	jae    fad5 <dlrealloc+0x95>
    fb85:	e9 be 00 00 00       	jmp    fc48 <dlrealloc+0x208>
    fb8a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    fb90:	41 8b 8c 24 70 03 00 	mov    0x370(%r12),%ecx
    fb97:	00 
    fb98:	89 ce                	mov    %ecx,%esi
    fb9a:	83 e6 02             	and    $0x2,%esi
    fb9d:	48 3d f8 00 00 00    	cmp    $0xf8,%rax
    fba3:	76 1f                	jbe    fbc4 <dlrealloc+0x184>
    fba5:	48 8d 78 08          	lea    0x8(%rax),%rdi
    fba9:	48 39 fa             	cmp    %rdi,%rdx
    fbac:	72 16                	jb     fbc4 <dlrealloc+0x184>
    fbae:	48 29 c2             	sub    %rax,%rdx
    fbb1:	48 8b 05 58 b2 01 00 	mov    0x1b258(%rip),%rax        # 2ae10 <mparams+0x10>
    fbb8:	48 01 c0             	add    %rax,%rax
    fbbb:	48 39 d0             	cmp    %rdx,%rax
    fbbe:	0f 83 62 ff ff ff    	jae    fb26 <dlrealloc+0xe6>
    fbc4:	85 f6                	test   %esi,%esi
    fbc6:	0f 85 c4 01 00 00    	jne    fd90 <dlrealloc+0x350>
    fbcc:	48 89 df             	mov    %rbx,%rdi
    fbcf:	e8 0c d5 ff ff       	call   d0e0 <dlmalloc>
    fbd4:	49 89 c4             	mov    %rax,%r12
    fbd7:	48 85 c0             	test   %rax,%rax
    fbda:	0f 84 5b ff ff ff    	je     fb3b <dlrealloc+0xfb>
    fbe0:	4c 8b 6d f8          	mov    -0x8(%rbp),%r13
    fbe4:	48 89 ee             	mov    %rbp,%rsi
    fbe7:	48 89 c7             	mov    %rax,%rdi
    fbea:	49 83 e5 f8          	and    $0xfffffffffffffff8,%r13
    fbee:	49 83 ed 10          	sub    $0x10,%r13
    fbf2:	4c 39 eb             	cmp    %r13,%rbx
    fbf5:	49 0f 47 dd          	cmova  %r13,%rbx
    fbf9:	48 89 da             	mov    %rbx,%rdx
    fbfc:	e8 7f 0a 00 00       	call   10680 <memcpy>
    fc01:	48 89 ef             	mov    %rbp,%rdi
    fc04:	4c 89 ea             	mov    %r13,%rdx
    fc07:	31 f6                	xor    %esi,%esi
    fc09:	e8 b2 0c 00 00       	call   108c0 <memset>
    fc0e:	48 89 ef             	mov    %rbp,%rdi
    fc11:	e8 ba f2 ff ff       	call   eed0 <dlfree>
    fc16:	e9 20 ff ff ff       	jmp    fb3b <dlrealloc+0xfb>
    fc1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    fc20:	be 01 00 00 00       	mov    $0x1,%esi
    fc25:	0f 1f 00             	nopl   (%rax)
    fc28:	41 8b 94 24 74 03 00 	mov    0x374(%r12),%edx
    fc2f:	00 
    fc30:	85 d2                	test   %edx,%edx
    fc32:	75 f4                	jne    fc28 <dlrealloc+0x1e8>
    fc34:	89 f2                	mov    %esi,%edx
    fc36:	87 11                	xchg   %edx,(%rcx)
    fc38:	85 d2                	test   %edx,%edx
    fc3a:	75 ec                	jne    fc28 <dlrealloc+0x1e8>
    fc3c:	e9 26 ff ff ff       	jmp    fb67 <dlrealloc+0x127>
    fc41:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    fc48:	e8 ea 28 00 00       	call   12537 <abort>
    fc4d:	0f 1f 00             	nopl   (%rax)
    fc50:	48 83 c4 08          	add    $0x8,%rsp
    fc54:	48 89 f7             	mov    %rsi,%rdi
    fc57:	5b                   	pop    %rbx
    fc58:	5d                   	pop    %rbp
    fc59:	41 5c                	pop    %r12
    fc5b:	41 5d                	pop    %r13
    fc5d:	41 5e                	pop    %r14
    fc5f:	41 5f                	pop    %r15
    fc61:	e9 7a d4 ff ff       	jmp    d0e0 <dlmalloc>
    fc66:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    fc6d:	00 00 00 
    fc70:	e8 fb 11 00 00       	call   10e70 <__errno_location>
    fc75:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
    fc7b:	45 31 e4             	xor    %r12d,%r12d
    fc7e:	e9 b8 fe ff ff       	jmp    fb3b <dlrealloc+0xfb>
    fc83:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    fc88:	e8 43 f2 ff ff       	call   eed0 <dlfree>
    fc8d:	eb ec                	jmp    fc7b <dlrealloc+0x23b>
    fc8f:	90                   	nop
    fc90:	49 39 7c 24 28       	cmp    %rdi,0x28(%r12)
    fc95:	0f 84 d5 01 00 00    	je     fe70 <dlrealloc+0x430>
    fc9b:	49 39 7c 24 20       	cmp    %rdi,0x20(%r12)
    fca0:	0f 84 02 01 00 00    	je     fda8 <dlrealloc+0x368>
    fca6:	41 f6 c1 02          	test   $0x2,%r9b
    fcaa:	0f 85 c8 00 00 00    	jne    fd78 <dlrealloc+0x338>
    fcb0:	49 83 e1 f8          	and    $0xfffffffffffffff8,%r9
    fcb4:	4e 8d 1c 0a          	lea    (%rdx,%r9,1),%r11
    fcb8:	49 39 c3             	cmp    %rax,%r11
    fcbb:	0f 82 b7 00 00 00    	jb     fd78 <dlrealloc+0x338>
    fcc1:	4c 89 da             	mov    %r11,%rdx
    fcc4:	4c 89 c9             	mov    %r9,%rcx
    fcc7:	4c 8b 57 18          	mov    0x18(%rdi),%r10
    fccb:	48 29 c2             	sub    %rax,%rdx
    fcce:	48 c1 e9 03          	shr    $0x3,%rcx
    fcd2:	49 81 f9 f8 00 00 00 	cmp    $0xf8,%r9
    fcd9:	0f 87 ee 01 00 00    	ja     fecd <dlrealloc+0x48d>
    fcdf:	44 8d 74 09 09       	lea    0x9(%rcx,%rcx,1),%r14d
    fce4:	4c 8b 4f 10          	mov    0x10(%rdi),%r9
    fce8:	4f 8d 34 f4          	lea    (%r12,%r14,8),%r14
    fcec:	4d 39 f1             	cmp    %r14,%r9
    fcef:	0f 85 c6 03 00 00    	jne    100bb <dlrealloc+0x67b>
    fcf5:	4d 39 d1             	cmp    %r10,%r9
    fcf8:	0f 84 7c 03 00 00    	je     1007a <dlrealloc+0x63a>
    fcfe:	4d 39 c2             	cmp    %r8,%r10
    fd01:	0f 82 41 ff ff ff    	jb     fc48 <dlrealloc+0x208>
    fd07:	49 39 7a 10          	cmp    %rdi,0x10(%r10)
    fd0b:	0f 85 37 ff ff ff    	jne    fc48 <dlrealloc+0x208>
    fd11:	4d 89 51 18          	mov    %r10,0x18(%r9)
    fd15:	4d 89 4a 10          	mov    %r9,0x10(%r10)
    fd19:	48 8b 3d e0 b0 01 00 	mov    0x1b0e0(%rip),%rdi        # 2ae00 <mparams>
    fd20:	83 e6 01             	and    $0x1,%esi
    fd23:	4b 8d 4c 1d 00       	lea    0x0(%r13,%r11,1),%rcx
    fd28:	4c 31 e7             	xor    %r12,%rdi
    fd2b:	48 83 fa 1f          	cmp    $0x1f,%rdx
    fd2f:	0f 87 84 02 00 00    	ja     ffb9 <dlrealloc+0x579>
    fd35:	4c 89 da             	mov    %r11,%rdx
    fd38:	48 09 f2             	or     %rsi,%rdx
    fd3b:	48 83 ca 02          	or     $0x2,%rdx
    fd3f:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
    fd43:	48 89 39             	mov    %rdi,(%rcx)
    fd46:	48 83 49 08 01       	orq    $0x1,0x8(%rcx)
    fd4b:	41 8b 8c 24 70 03 00 	mov    0x370(%r12),%ecx
    fd52:	00 
    fd53:	e9 ce fd ff ff       	jmp    fb26 <dlrealloc+0xe6>
    fd58:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    fd5f:	00 
    fd60:	41 c7 84 24 74 03 00 	movl   $0x0,0x374(%r12)
    fd67:	00 00 00 00 00 
    fd6c:	e9 be fd ff ff       	jmp    fb2f <dlrealloc+0xef>
    fd71:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    fd78:	41 f6 84 24 70 03 00 	testb  $0x2,0x370(%r12)
    fd7f:	00 02 
    fd81:	0f 84 45 fe ff ff    	je     fbcc <dlrealloc+0x18c>
    fd87:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    fd8e:	00 00 
    fd90:	41 c7 84 24 74 03 00 	movl   $0x0,0x374(%r12)
    fd97:	00 00 00 00 00 
    fd9c:	e9 2b fe ff ff       	jmp    fbcc <dlrealloc+0x18c>
    fda1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    fda8:	49 03 54 24 08       	add    0x8(%r12),%rdx
    fdad:	41 8b 8c 24 70 03 00 	mov    0x370(%r12),%ecx
    fdb4:	00 
    fdb5:	48 39 c2             	cmp    %rax,%rdx
    fdb8:	0f 82 01 01 00 00    	jb     febf <dlrealloc+0x47f>
    fdbe:	4c 8b 05 3b b0 01 00 	mov    0x1b03b(%rip),%r8        # 2ae00 <mparams>
    fdc5:	49 89 d1             	mov    %rdx,%r9
    fdc8:	49 8d 7c 15 00       	lea    0x0(%r13,%rdx,1),%rdi
    fdcd:	83 e6 01             	and    $0x1,%esi
    fdd0:	49 29 c1             	sub    %rax,%r9
    fdd3:	4d 31 e0             	xor    %r12,%r8
    fdd6:	49 83 f9 1f          	cmp    $0x1f,%r9
    fdda:	0f 86 af 01 00 00    	jbe    ff8f <dlrealloc+0x54f>
    fde0:	49 8d 54 05 00       	lea    0x0(%r13,%rax,1),%rdx
    fde5:	48 09 c6             	or     %rax,%rsi
    fde8:	4c 89 c8             	mov    %r9,%rax
    fdeb:	48 83 ce 02          	or     $0x2,%rsi
    fdef:	48 83 c8 01          	or     $0x1,%rax
    fdf3:	48 89 75 f8          	mov    %rsi,-0x8(%rbp)
    fdf7:	4c 89 02             	mov    %r8,(%rdx)
    fdfa:	48 89 42 08          	mov    %rax,0x8(%rdx)
    fdfe:	4c 89 0f             	mov    %r9,(%rdi)
    fe01:	48 83 67 08 fe       	andq   $0xfffffffffffffffe,0x8(%rdi)
    fe06:	4d 89 4c 24 08       	mov    %r9,0x8(%r12)
    fe0b:	49 89 54 24 20       	mov    %rdx,0x20(%r12)
    fe10:	e9 11 fd ff ff       	jmp    fb26 <dlrealloc+0xe6>
    fe15:	0f 1f 00             	nopl   (%rax)
    fe18:	83 e6 01             	and    $0x1,%esi
    fe1b:	4d 8d 7c 05 00       	lea    0x0(%r13,%rax,1),%r15
    fe20:	48 83 ca 03          	or     $0x3,%rdx
    fe24:	48 09 c6             	or     %rax,%rsi
    fe27:	48 8b 05 d2 af 01 00 	mov    0x1afd2(%rip),%rax        # 2ae00 <mparams>
    fe2e:	48 83 ce 02          	or     $0x2,%rsi
    fe32:	4c 31 e0             	xor    %r12,%rax
    fe35:	48 89 75 f8          	mov    %rsi,-0x8(%rbp)
    fe39:	31 f6                	xor    %esi,%esi
    fe3b:	49 89 57 08          	mov    %rdx,0x8(%r15)
    fe3f:	49 8d 56 f0          	lea    -0x10(%r14),%rdx
    fe43:	49 89 07             	mov    %rax,(%r15)
    fe46:	48 83 4f 08 01       	orq    $0x1,0x8(%rdi)
    fe4b:	48 89 07             	mov    %rax,(%rdi)
    fe4e:	49 8d 7f 10          	lea    0x10(%r15),%rdi
    fe52:	e8 69 0a 00 00       	call   108c0 <memset>
    fe57:	4c 89 f2             	mov    %r14,%rdx
    fe5a:	4c 89 fe             	mov    %r15,%rsi
    fe5d:	4c 89 e7             	mov    %r12,%rdi
    fe60:	e8 5b c9 ff ff       	call   c7c0 <dispose_chunk>
    fe65:	e9 b4 fc ff ff       	jmp    fb1e <dlrealloc+0xde>
    fe6a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    fe70:	49 03 54 24 10       	add    0x10(%r12),%rdx
    fe75:	41 8b 8c 24 70 03 00 	mov    0x370(%r12),%ecx
    fe7c:	00 
    fe7d:	48 39 d0             	cmp    %rdx,%rax
    fe80:	73 3d                	jae    febf <dlrealloc+0x47f>
    fe82:	83 e6 01             	and    $0x1,%esi
    fe85:	49 8d 7c 05 00       	lea    0x0(%r13,%rax,1),%rdi
    fe8a:	48 29 c2             	sub    %rax,%rdx
    fe8d:	48 09 c6             	or     %rax,%rsi
    fe90:	48 8b 05 69 af 01 00 	mov    0x1af69(%rip),%rax        # 2ae00 <mparams>
    fe97:	48 83 ce 02          	or     $0x2,%rsi
    fe9b:	4c 31 e0             	xor    %r12,%rax
    fe9e:	48 89 75 f8          	mov    %rsi,-0x8(%rbp)
    fea2:	48 89 07             	mov    %rax,(%rdi)
    fea5:	48 89 d0             	mov    %rdx,%rax
    fea8:	48 83 c8 01          	or     $0x1,%rax
    feac:	48 89 47 08          	mov    %rax,0x8(%rdi)
    feb0:	49 89 7c 24 28       	mov    %rdi,0x28(%r12)
    feb5:	49 89 54 24 10       	mov    %rdx,0x10(%r12)
    feba:	e9 67 fc ff ff       	jmp    fb26 <dlrealloc+0xe6>
    febf:	83 e1 02             	and    $0x2,%ecx
    fec2:	0f 84 04 fd ff ff    	je     fbcc <dlrealloc+0x18c>
    fec8:	e9 c3 fe ff ff       	jmp    fd90 <dlrealloc+0x350>
    fecd:	4c 8b 7f 30          	mov    0x30(%rdi),%r15
    fed1:	49 39 fa             	cmp    %rdi,%r10
    fed4:	0f 84 1d 01 00 00    	je     fff7 <dlrealloc+0x5b7>
    feda:	48 8b 4f 10          	mov    0x10(%rdi),%rcx
    fede:	4c 39 c1             	cmp    %r8,%rcx
    fee1:	0f 82 61 fd ff ff    	jb     fc48 <dlrealloc+0x208>
    fee7:	48 39 79 18          	cmp    %rdi,0x18(%rcx)
    feeb:	0f 85 57 fd ff ff    	jne    fc48 <dlrealloc+0x208>
    fef1:	49 39 7a 10          	cmp    %rdi,0x10(%r10)
    fef5:	0f 85 4d fd ff ff    	jne    fc48 <dlrealloc+0x208>
    fefb:	4c 89 51 18          	mov    %r10,0x18(%rcx)
    feff:	49 89 4a 10          	mov    %rcx,0x10(%r10)
    ff03:	4d 85 ff             	test   %r15,%r15
    ff06:	0f 84 0d fe ff ff    	je     fd19 <dlrealloc+0x2d9>
    ff0c:	44 8b 4f 38          	mov    0x38(%rdi),%r9d
    ff10:	4c 89 c9             	mov    %r9,%rcx
    ff13:	4d 8d 71 4a          	lea    0x4a(%r9),%r14
    ff17:	4b 3b bc cc 58 02 00 	cmp    0x258(%r12,%r9,8),%rdi
    ff1e:	00 
    ff1f:	0f 84 65 01 00 00    	je     1008a <dlrealloc+0x64a>
    ff25:	4d 39 c7             	cmp    %r8,%r15
    ff28:	0f 82 1a fd ff ff    	jb     fc48 <dlrealloc+0x208>
    ff2e:	49 3b 7f 20          	cmp    0x20(%r15),%rdi
    ff32:	0f 84 a9 01 00 00    	je     100e1 <dlrealloc+0x6a1>
    ff38:	4d 89 57 28          	mov    %r10,0x28(%r15)
    ff3c:	4d 85 d2             	test   %r10,%r10
    ff3f:	0f 84 d4 fd ff ff    	je     fd19 <dlrealloc+0x2d9>
    ff45:	4d 39 c2             	cmp    %r8,%r10
    ff48:	0f 82 fa fc ff ff    	jb     fc48 <dlrealloc+0x208>
    ff4e:	48 8b 4f 20          	mov    0x20(%rdi),%rcx
    ff52:	4d 89 7a 30          	mov    %r15,0x30(%r10)
    ff56:	48 85 c9             	test   %rcx,%rcx
    ff59:	74 11                	je     ff6c <dlrealloc+0x52c>
    ff5b:	4c 39 c1             	cmp    %r8,%rcx
    ff5e:	0f 82 e4 fc ff ff    	jb     fc48 <dlrealloc+0x208>
    ff64:	49 89 4a 20          	mov    %rcx,0x20(%r10)
    ff68:	4c 89 51 30          	mov    %r10,0x30(%rcx)
    ff6c:	48 8b 4f 28          	mov    0x28(%rdi),%rcx
    ff70:	48 85 c9             	test   %rcx,%rcx
    ff73:	0f 84 a0 fd ff ff    	je     fd19 <dlrealloc+0x2d9>
    ff79:	4c 39 c1             	cmp    %r8,%rcx
    ff7c:	0f 82 c6 fc ff ff    	jb     fc48 <dlrealloc+0x208>
    ff82:	49 89 4a 28          	mov    %rcx,0x28(%r10)
    ff86:	4c 89 51 30          	mov    %r10,0x30(%rcx)
    ff8a:	e9 8a fd ff ff       	jmp    fd19 <dlrealloc+0x2d9>
    ff8f:	48 09 f2             	or     %rsi,%rdx
    ff92:	48 83 ca 02          	or     $0x2,%rdx
    ff96:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
    ff9a:	4c 89 07             	mov    %r8,(%rdi)
    ff9d:	48 83 4f 08 01       	orq    $0x1,0x8(%rdi)
    ffa2:	49 c7 44 24 08 00 00 	movq   $0x0,0x8(%r12)
    ffa9:	00 00 
    ffab:	49 c7 44 24 20 00 00 	movq   $0x0,0x20(%r12)
    ffb2:	00 00 
    ffb4:	e9 6d fb ff ff       	jmp    fb26 <dlrealloc+0xe6>
    ffb9:	4d 8d 44 05 00       	lea    0x0(%r13,%rax,1),%r8
    ffbe:	48 09 f0             	or     %rsi,%rax
    ffc1:	48 83 c8 02          	or     $0x2,%rax
    ffc5:	4c 89 c6             	mov    %r8,%rsi
    ffc8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    ffcc:	48 89 d0             	mov    %rdx,%rax
    ffcf:	48 83 c8 03          	or     $0x3,%rax
    ffd3:	49 89 38             	mov    %rdi,(%r8)
    ffd6:	49 89 40 08          	mov    %rax,0x8(%r8)
    ffda:	48 83 49 08 01       	orq    $0x1,0x8(%rcx)
    ffdf:	48 89 39             	mov    %rdi,(%rcx)
    ffe2:	4c 89 e7             	mov    %r12,%rdi
    ffe5:	e8 d6 c7 ff ff       	call   c7c0 <dispose_chunk>
    ffea:	41 8b 8c 24 70 03 00 	mov    0x370(%r12),%ecx
    fff1:	00 
    fff2:	e9 2f fb ff ff       	jmp    fb26 <dlrealloc+0xe6>
    fff7:	48 8b 4f 28          	mov    0x28(%rdi),%rcx
    fffb:	4c 8d 4f 28          	lea    0x28(%rdi),%r9
    ffff:	48 85 c9             	test   %rcx,%rcx
   10002:	0f 84 a1 00 00 00    	je     100a9 <dlrealloc+0x669>
   10008:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1000f:	00 
   10010:	4d 89 ce             	mov    %r9,%r14
   10013:	49 89 ca             	mov    %rcx,%r10
   10016:	4c 8d 49 28          	lea    0x28(%rcx),%r9
   1001a:	48 8b 49 28          	mov    0x28(%rcx),%rcx
   1001e:	48 85 c9             	test   %rcx,%rcx
   10021:	75 ed                	jne    10010 <dlrealloc+0x5d0>
   10023:	49 8b 4a 20          	mov    0x20(%r10),%rcx
   10027:	4d 8d 4a 20          	lea    0x20(%r10),%r9
   1002b:	48 85 c9             	test   %rcx,%rcx
   1002e:	75 e0                	jne    10010 <dlrealloc+0x5d0>
   10030:	4d 39 c6             	cmp    %r8,%r14
   10033:	0f 82 0f fc ff ff    	jb     fc48 <dlrealloc+0x208>
   10039:	49 c7 06 00 00 00 00 	movq   $0x0,(%r14)
   10040:	4d 85 ff             	test   %r15,%r15
   10043:	0f 84 d0 fc ff ff    	je     fd19 <dlrealloc+0x2d9>
   10049:	8b 4f 38             	mov    0x38(%rdi),%ecx
   1004c:	4c 8d 49 4a          	lea    0x4a(%rcx),%r9
   10050:	49 3b bc cc 58 02 00 	cmp    0x258(%r12,%rcx,8),%rdi
   10057:	00 
   10058:	0f 84 8c 00 00 00    	je     100ea <dlrealloc+0x6aa>
   1005e:	4d 39 c7             	cmp    %r8,%r15
   10061:	0f 82 e1 fb ff ff    	jb     fc48 <dlrealloc+0x208>
   10067:	49 3b 7f 20          	cmp    0x20(%r15),%rdi
   1006b:	0f 84 bb 00 00 00    	je     1012c <dlrealloc+0x6ec>
   10071:	4d 89 57 28          	mov    %r10,0x28(%r15)
   10075:	e9 cb fe ff ff       	jmp    ff45 <dlrealloc+0x505>
   1007a:	bf fe ff ff ff       	mov    $0xfffffffe,%edi
   1007f:	d3 c7                	rol    %cl,%edi
   10081:	41 21 3c 24          	and    %edi,(%r12)
   10085:	e9 8f fc ff ff       	jmp    fd19 <dlrealloc+0x2d9>
   1008a:	4f 89 54 f4 08       	mov    %r10,0x8(%r12,%r14,8)
   1008f:	4d 85 d2             	test   %r10,%r10
   10092:	0f 85 ad fe ff ff    	jne    ff45 <dlrealloc+0x505>
   10098:	bf fe ff ff ff       	mov    $0xfffffffe,%edi
   1009d:	d3 c7                	rol    %cl,%edi
   1009f:	41 21 7c 24 04       	and    %edi,0x4(%r12)
   100a4:	e9 70 fc ff ff       	jmp    fd19 <dlrealloc+0x2d9>
   100a9:	48 8b 4f 20          	mov    0x20(%rdi),%rcx
   100ad:	48 85 c9             	test   %rcx,%rcx
   100b0:	74 42                	je     100f4 <dlrealloc+0x6b4>
   100b2:	4c 8d 4f 20          	lea    0x20(%rdi),%r9
   100b6:	e9 55 ff ff ff       	jmp    10010 <dlrealloc+0x5d0>
   100bb:	4d 39 c1             	cmp    %r8,%r9
   100be:	0f 82 84 fb ff ff    	jb     fc48 <dlrealloc+0x208>
   100c4:	49 39 79 18          	cmp    %rdi,0x18(%r9)
   100c8:	0f 85 7a fb ff ff    	jne    fc48 <dlrealloc+0x208>
   100ce:	4d 39 d1             	cmp    %r10,%r9
   100d1:	74 a7                	je     1007a <dlrealloc+0x63a>
   100d3:	4d 39 d6             	cmp    %r10,%r14
   100d6:	0f 84 35 fc ff ff    	je     fd11 <dlrealloc+0x2d1>
   100dc:	e9 1d fc ff ff       	jmp    fcfe <dlrealloc+0x2be>
   100e1:	4d 89 57 20          	mov    %r10,0x20(%r15)
   100e5:	e9 52 fe ff ff       	jmp    ff3c <dlrealloc+0x4fc>
   100ea:	4f 89 54 cc 08       	mov    %r10,0x8(%r12,%r9,8)
   100ef:	e9 51 fe ff ff       	jmp    ff45 <dlrealloc+0x505>
   100f4:	4d 85 ff             	test   %r15,%r15
   100f7:	0f 84 1c fc ff ff    	je     fd19 <dlrealloc+0x2d9>
   100fd:	44 8b 4f 38          	mov    0x38(%rdi),%r9d
   10101:	4c 89 c9             	mov    %r9,%rcx
   10104:	4d 8d 51 4a          	lea    0x4a(%r9),%r10
   10108:	4b 3b bc cc 58 02 00 	cmp    0x258(%r12,%r9,8),%rdi
   1010f:	00 
   10110:	74 2e                	je     10140 <dlrealloc+0x700>
   10112:	4d 39 c7             	cmp    %r8,%r15
   10115:	0f 82 2d fb ff ff    	jb     fc48 <dlrealloc+0x208>
   1011b:	49 39 7f 20          	cmp    %rdi,0x20(%r15)
   1011f:	74 14                	je     10135 <dlrealloc+0x6f5>
   10121:	31 c9                	xor    %ecx,%ecx
   10123:	49 89 4f 28          	mov    %rcx,0x28(%r15)
   10127:	e9 ed fb ff ff       	jmp    fd19 <dlrealloc+0x2d9>
   1012c:	4d 89 57 20          	mov    %r10,0x20(%r15)
   10130:	e9 10 fe ff ff       	jmp    ff45 <dlrealloc+0x505>
   10135:	31 ff                	xor    %edi,%edi
   10137:	49 89 7f 20          	mov    %rdi,0x20(%r15)
   1013b:	e9 d9 fb ff ff       	jmp    fd19 <dlrealloc+0x2d9>
   10140:	45 31 c0             	xor    %r8d,%r8d
   10143:	4f 89 44 d4 08       	mov    %r8,0x8(%r12,%r10,8)
   10148:	e9 4b ff ff ff       	jmp    10098 <dlrealloc+0x658>
   1014d:	0f 1f 00             	nopl   (%rax)

0000000000010150 <dlmemalign>:
   10150:	f3 0f 1e fa          	endbr64 
   10154:	48 83 ff 10          	cmp    $0x10,%rdi
   10158:	76 06                	jbe    10160 <dlmemalign+0x10>
   1015a:	e9 d1 ea ff ff       	jmp    ec30 <internal_memalign.constprop.0>
   1015f:	90                   	nop
   10160:	48 89 f7             	mov    %rsi,%rdi
   10163:	e9 78 cf ff ff       	jmp    d0e0 <dlmalloc>
   10168:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1016f:	00 

0000000000010170 <dlposix_memalign>:
   10170:	f3 0f 1e fa          	endbr64 
   10174:	53                   	push   %rbx
   10175:	48 89 fb             	mov    %rdi,%rbx
   10178:	48 89 f7             	mov    %rsi,%rdi
   1017b:	48 89 d6             	mov    %rdx,%rsi
   1017e:	48 83 ff 10          	cmp    $0x10,%rdi
   10182:	74 6c                	je     101f0 <dlposix_memalign+0x80>
   10184:	48 89 f9             	mov    %rdi,%rcx
   10187:	49 89 f8             	mov    %rdi,%r8
   1018a:	ba 16 00 00 00       	mov    $0x16,%edx
   1018f:	48 c1 e9 03          	shr    $0x3,%rcx
   10193:	41 83 e0 07          	and    $0x7,%r8d
   10197:	48 83 ff 07          	cmp    $0x7,%rdi
   1019b:	76 36                	jbe    101d3 <dlposix_memalign+0x63>
   1019d:	48 8d 41 ff          	lea    -0x1(%rcx),%rax
   101a1:	48 21 c8             	and    %rcx,%rax
   101a4:	4c 09 c0             	or     %r8,%rax
   101a7:	75 2a                	jne    101d3 <dlposix_memalign+0x63>
   101a9:	48 c7 c0 80 ff ff ff 	mov    $0xffffffffffffff80,%rax
   101b0:	48 29 f8             	sub    %rdi,%rax
   101b3:	48 39 f0             	cmp    %rsi,%rax
   101b6:	72 28                	jb     101e0 <dlposix_memalign+0x70>
   101b8:	b8 20 00 00 00       	mov    $0x20,%eax
   101bd:	48 39 c7             	cmp    %rax,%rdi
   101c0:	48 0f 42 f8          	cmovb  %rax,%rdi
   101c4:	e8 67 ea ff ff       	call   ec30 <internal_memalign.constprop.0>
   101c9:	48 85 c0             	test   %rax,%rax
   101cc:	74 12                	je     101e0 <dlposix_memalign+0x70>
   101ce:	48 89 03             	mov    %rax,(%rbx)
   101d1:	31 d2                	xor    %edx,%edx
   101d3:	89 d0                	mov    %edx,%eax
   101d5:	5b                   	pop    %rbx
   101d6:	c3                   	ret    
   101d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   101de:	00 00 
   101e0:	ba 0c 00 00 00       	mov    $0xc,%edx
   101e5:	5b                   	pop    %rbx
   101e6:	89 d0                	mov    %edx,%eax
   101e8:	c3                   	ret    
   101e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   101f0:	48 89 d7             	mov    %rdx,%rdi
   101f3:	e8 e8 ce ff ff       	call   d0e0 <dlmalloc>
   101f8:	eb cf                	jmp    101c9 <dlposix_memalign+0x59>
   101fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000010200 <dlmallinfo>:
   10200:	f3 0f 1e fa          	endbr64 
   10204:	41 55                	push   %r13
   10206:	41 54                	push   %r12
   10208:	55                   	push   %rbp
   10209:	53                   	push   %rbx
   1020a:	48 89 fb             	mov    %rdi,%rbx
   1020d:	48 83 ec 08          	sub    $0x8,%rsp
   10211:	48 83 3d e7 ab 01 00 	cmpq   $0x0,0x1abe7(%rip)        # 2ae00 <mparams>
   10218:	00 
   10219:	0f 84 89 01 00 00    	je     103a8 <dlmallinfo+0x1a8>
   1021f:	44 8b 1d 8a ab 01 00 	mov    0x1ab8a(%rip),%r11d        # 2adb0 <_gm_+0x370>
   10226:	41 83 e3 02          	and    $0x2,%r11d
   1022a:	0f 85 16 01 00 00    	jne    10346 <dlmallinfo+0x146>
   10230:	48 8b 3d 31 a8 01 00 	mov    0x1a831(%rip),%rdi        # 2aa68 <_gm_+0x28>
   10237:	48 85 ff             	test   %rdi,%rdi
   1023a:	0f 84 f4 00 00 00    	je     10334 <dlmallinfo+0x134>
   10240:	48 8b 2d 09 a8 01 00 	mov    0x1a809(%rip),%rbp        # 2aa50 <_gm_+0x10>
   10247:	41 b9 01 00 00 00    	mov    $0x1,%r9d
   1024d:	4c 8d 15 64 ab 01 00 	lea    0x1ab64(%rip),%r10        # 2adb8 <_gm_+0x378>
   10254:	4c 8d 45 50          	lea    0x50(%rbp),%r8
   10258:	4c 89 c1             	mov    %r8,%rcx
   1025b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10260:	49 8b 32             	mov    (%r10),%rsi
   10263:	48 8d 46 10          	lea    0x10(%rsi),%rax
   10267:	40 f6 c6 0f          	test   $0xf,%sil
   1026b:	0f 84 af 00 00 00    	je     10320 <dlmallinfo+0x120>
   10271:	48 f7 d8             	neg    %rax
   10274:	83 e0 0f             	and    $0xf,%eax
   10277:	48 01 f0             	add    %rsi,%rax
   1027a:	72 4a                	jb     102c6 <dlmallinfo+0xc6>
   1027c:	4d 8b 6a 08          	mov    0x8(%r10),%r13
   10280:	49 01 f5             	add    %rsi,%r13
   10283:	4c 39 e8             	cmp    %r13,%rax
   10286:	72 39                	jb     102c1 <dlmallinfo+0xc1>
   10288:	eb 3c                	jmp    102c6 <dlmallinfo+0xc6>
   1028a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10290:	48 8b 50 08          	mov    0x8(%rax),%rdx
   10294:	48 83 fa 0b          	cmp    $0xb,%rdx
   10298:	74 2c                	je     102c6 <dlmallinfo+0xc6>
   1029a:	49 89 d4             	mov    %rdx,%r12
   1029d:	83 e2 03             	and    $0x3,%edx
   102a0:	49 83 e4 f8          	and    $0xfffffffffffffff8,%r12
   102a4:	4c 01 e1             	add    %r12,%rcx
   102a7:	48 83 fa 01          	cmp    $0x1,%rdx
   102ab:	75 07                	jne    102b4 <dlmallinfo+0xb4>
   102ad:	4d 01 e0             	add    %r12,%r8
   102b0:	49 83 c1 01          	add    $0x1,%r9
   102b4:	4c 01 e0             	add    %r12,%rax
   102b7:	48 39 f0             	cmp    %rsi,%rax
   102ba:	72 0a                	jb     102c6 <dlmallinfo+0xc6>
   102bc:	4c 39 e8             	cmp    %r13,%rax
   102bf:	73 05                	jae    102c6 <dlmallinfo+0xc6>
   102c1:	48 39 f8             	cmp    %rdi,%rax
   102c4:	75 ca                	jne    10290 <dlmallinfo+0x90>
   102c6:	4d 8b 52 10          	mov    0x10(%r10),%r10
   102ca:	4d 85 d2             	test   %r10,%r10
   102cd:	75 91                	jne    10260 <dlmallinfo+0x60>
   102cf:	48 8b 05 c2 aa 01 00 	mov    0x1aac2(%rip),%rax        # 2ad98 <_gm_+0x358>
   102d6:	89 ca                	mov    %ecx,%edx
   102d8:	89 c6                	mov    %eax,%esi
   102da:	44 29 c0             	sub    %r8d,%eax
   102dd:	29 ce                	sub    %ecx,%esi
   102df:	8b 0d bb aa 01 00    	mov    0x1aabb(%rip),%ecx        # 2ada0 <_gm_+0x360>
   102e5:	45 85 db             	test   %r11d,%r11d
   102e8:	75 3e                	jne    10328 <dlmallinfo+0x128>
   102ea:	89 43 1c             	mov    %eax,0x1c(%rbx)
   102ed:	48 89 d8             	mov    %rbx,%rax
   102f0:	89 13                	mov    %edx,(%rbx)
   102f2:	44 89 4b 04          	mov    %r9d,0x4(%rbx)
   102f6:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
   102fd:	00 
   102fe:	89 73 10             	mov    %esi,0x10(%rbx)
   10301:	89 4b 14             	mov    %ecx,0x14(%rbx)
   10304:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%rbx)
   1030b:	44 89 43 20          	mov    %r8d,0x20(%rbx)
   1030f:	89 6b 24             	mov    %ebp,0x24(%rbx)
   10312:	48 83 c4 08          	add    $0x8,%rsp
   10316:	5b                   	pop    %rbx
   10317:	5d                   	pop    %rbp
   10318:	41 5c                	pop    %r12
   1031a:	41 5d                	pop    %r13
   1031c:	c3                   	ret    
   1031d:	0f 1f 00             	nopl   (%rax)
   10320:	48 89 f0             	mov    %rsi,%rax
   10323:	e9 54 ff ff ff       	jmp    1027c <dlmallinfo+0x7c>
   10328:	c7 05 82 aa 01 00 00 	movl   $0x0,0x1aa82(%rip)        # 2adb4 <_gm_+0x374>
   1032f:	00 00 00 
   10332:	eb b6                	jmp    102ea <dlmallinfo+0xea>
   10334:	31 ed                	xor    %ebp,%ebp
   10336:	45 31 c0             	xor    %r8d,%r8d
   10339:	31 c0                	xor    %eax,%eax
   1033b:	31 c9                	xor    %ecx,%ecx
   1033d:	31 f6                	xor    %esi,%esi
   1033f:	45 31 c9             	xor    %r9d,%r9d
   10342:	31 d2                	xor    %edx,%edx
   10344:	eb a4                	jmp    102ea <dlmallinfo+0xea>
   10346:	b8 01 00 00 00       	mov    $0x1,%eax
   1034b:	87 05 63 aa 01 00    	xchg   %eax,0x1aa63(%rip)        # 2adb4 <_gm_+0x374>
   10351:	ba 01 00 00 00       	mov    $0x1,%edx
   10356:	85 c0                	test   %eax,%eax
   10358:	75 36                	jne    10390 <dlmallinfo+0x190>
   1035a:	44 8b 1d 4f aa 01 00 	mov    0x1aa4f(%rip),%r11d        # 2adb0 <_gm_+0x370>
   10361:	48 8b 3d 00 a7 01 00 	mov    0x1a700(%rip),%rdi        # 2aa68 <_gm_+0x28>
   10368:	41 83 e3 02          	and    $0x2,%r11d
   1036c:	48 85 ff             	test   %rdi,%rdi
   1036f:	0f 85 cb fe ff ff    	jne    10240 <dlmallinfo+0x40>
   10375:	31 ed                	xor    %ebp,%ebp
   10377:	45 31 c0             	xor    %r8d,%r8d
   1037a:	31 c0                	xor    %eax,%eax
   1037c:	31 c9                	xor    %ecx,%ecx
   1037e:	31 f6                	xor    %esi,%esi
   10380:	45 31 c9             	xor    %r9d,%r9d
   10383:	31 d2                	xor    %edx,%edx
   10385:	e9 5b ff ff ff       	jmp    102e5 <dlmallinfo+0xe5>
   1038a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10390:	8b 05 1e aa 01 00    	mov    0x1aa1e(%rip),%eax        # 2adb4 <_gm_+0x374>
   10396:	85 c0                	test   %eax,%eax
   10398:	75 f6                	jne    10390 <dlmallinfo+0x190>
   1039a:	89 d0                	mov    %edx,%eax
   1039c:	87 05 12 aa 01 00    	xchg   %eax,0x1aa12(%rip)        # 2adb4 <_gm_+0x374>
   103a2:	85 c0                	test   %eax,%eax
   103a4:	75 ea                	jne    10390 <dlmallinfo+0x190>
   103a6:	eb b2                	jmp    1035a <dlmallinfo+0x15a>
   103a8:	e8 43 cc ff ff       	call   cff0 <init_mparams.isra.0>
   103ad:	e9 6d fe ff ff       	jmp    1021f <dlmallinfo+0x1f>
   103b2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   103b9:	00 00 00 
   103bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000103c0 <__memcpy.part.0>:
   103c0:	48 89 f0             	mov    %rsi,%rax
   103c3:	48 89 f1             	mov    %rsi,%rcx
   103c6:	48 09 f8             	or     %rdi,%rax
   103c9:	a8 07                	test   $0x7,%al
   103cb:	74 43                	je     10410 <__memcpy.part.0+0x50>
   103cd:	48 89 f0             	mov    %rsi,%rax
   103d0:	48 31 f8             	xor    %rdi,%rax
   103d3:	a8 07                	test   $0x7,%al
   103d5:	75 0a                	jne    103e1 <__memcpy.part.0+0x21>
   103d7:	48 83 fa 07          	cmp    $0x7,%rdx
   103db:	0f 87 87 00 00 00    	ja     10468 <__memcpy.part.0+0xa8>
   103e1:	45 31 c9             	xor    %r9d,%r9d
   103e4:	45 31 c0             	xor    %r8d,%r8d
   103e7:	45 31 d2             	xor    %r10d,%r10d
   103ea:	31 c0                	xor    %eax,%eax
   103ec:	0f 1f 40 00          	nopl   0x0(%rax)
   103f0:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
   103f4:	40 88 34 07          	mov    %sil,(%rdi,%rax,1)
   103f8:	48 83 c0 01          	add    $0x1,%rax
   103fc:	48 39 c2             	cmp    %rax,%rdx
   103ff:	75 ef                	jne    103f0 <__memcpy.part.0+0x30>
   10401:	48 01 d1             	add    %rdx,%rcx
   10404:	48 01 d7             	add    %rdx,%rdi
   10407:	4c 89 d2             	mov    %r10,%rdx
   1040a:	eb 12                	jmp    1041e <__memcpy.part.0+0x5e>
   1040c:	0f 1f 40 00          	nopl   0x0(%rax)
   10410:	49 89 d0             	mov    %rdx,%r8
   10413:	49 89 d1             	mov    %rdx,%r9
   10416:	49 c1 e8 03          	shr    $0x3,%r8
   1041a:	41 83 e1 07          	and    $0x7,%r9d
   1041e:	48 83 fa 07          	cmp    $0x7,%rdx
   10422:	76 23                	jbe    10447 <__memcpy.part.0+0x87>
   10424:	4a 8d 34 c5 00 00 00 	lea    0x0(,%r8,8),%rsi
   1042b:	00 
   1042c:	31 c0                	xor    %eax,%eax
   1042e:	66 90                	xchg   %ax,%ax
   10430:	48 8b 14 01          	mov    (%rcx,%rax,1),%rdx
   10434:	48 89 14 07          	mov    %rdx,(%rdi,%rax,1)
   10438:	48 83 c0 08          	add    $0x8,%rax
   1043c:	48 39 f0             	cmp    %rsi,%rax
   1043f:	75 ef                	jne    10430 <__memcpy.part.0+0x70>
   10441:	48 01 c1             	add    %rax,%rcx
   10444:	48 01 c7             	add    %rax,%rdi
   10447:	4d 85 c9             	test   %r9,%r9
   1044a:	74 14                	je     10460 <__memcpy.part.0+0xa0>
   1044c:	31 c0                	xor    %eax,%eax
   1044e:	66 90                	xchg   %ax,%ax
   10450:	0f b6 14 01          	movzbl (%rcx,%rax,1),%edx
   10454:	88 14 07             	mov    %dl,(%rdi,%rax,1)
   10457:	48 83 c0 01          	add    $0x1,%rax
   1045b:	49 39 c1             	cmp    %rax,%r9
   1045e:	75 f0                	jne    10450 <__memcpy.part.0+0x90>
   10460:	c3                   	ret    
   10461:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10468:	48 89 f0             	mov    %rsi,%rax
   1046b:	83 e0 07             	and    $0x7,%eax
   1046e:	4c 8d 54 10 f8       	lea    -0x8(%rax,%rdx,1),%r10
   10473:	ba 08 00 00 00       	mov    $0x8,%edx
   10478:	4d 89 d0             	mov    %r10,%r8
   1047b:	4d 89 d1             	mov    %r10,%r9
   1047e:	48 29 c2             	sub    %rax,%rdx
   10481:	49 c1 e8 03          	shr    $0x3,%r8
   10485:	41 83 e1 07          	and    $0x7,%r9d
   10489:	e9 5c ff ff ff       	jmp    103ea <__memcpy.part.0+0x2a>
   1048e:	66 90                	xchg   %ax,%ax

0000000000010490 <__memcpy>:
   10490:	f3 0f 1e fa          	endbr64 
   10494:	49 89 fb             	mov    %rdi,%r11
   10497:	48 85 d2             	test   %rdx,%rdx
   1049a:	74 0a                	je     104a6 <__memcpy+0x16>
   1049c:	48 39 f7             	cmp    %rsi,%rdi
   1049f:	74 05                	je     104a6 <__memcpy+0x16>
   104a1:	e8 1a ff ff ff       	call   103c0 <__memcpy.part.0>
   104a6:	4c 89 d8             	mov    %r11,%rax
   104a9:	c3                   	ret    
   104aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000104b0 <memcpy_verw>:
   104b0:	f3 0f 1e fa          	endbr64 
   104b4:	41 56                	push   %r14
   104b6:	41 55                	push   %r13
   104b8:	49 89 fd             	mov    %rdi,%r13
   104bb:	41 54                	push   %r12
   104bd:	55                   	push   %rbp
   104be:	53                   	push   %rbx
   104bf:	48 85 d2             	test   %rdx,%rdx
   104c2:	0f 84 8f 00 00 00    	je     10557 <memcpy_verw+0xa7>
   104c8:	48 89 f3             	mov    %rsi,%rbx
   104cb:	48 39 f7             	cmp    %rsi,%rdi
   104ce:	0f 84 83 00 00 00    	je     10557 <memcpy_verw+0xa7>
   104d4:	49 89 d4             	mov    %rdx,%r12
   104d7:	48 89 fd             	mov    %rdi,%rbp
   104da:	48 83 fa 07          	cmp    $0x7,%rdx
   104de:	77 25                	ja     10505 <memcpy_verw+0x55>
   104e0:	eb 5b                	jmp    1053d <memcpy_verw+0x8d>
   104e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   104e8:	48 89 de             	mov    %rbx,%rsi
   104eb:	48 89 ef             	mov    %rbp,%rdi
   104ee:	49 83 ec 01          	sub    $0x1,%r12
   104f2:	48 83 c3 01          	add    $0x1,%rbx
   104f6:	e8 85 09 00 00       	call   10e80 <__memcpy_verw>
   104fb:	48 83 c5 01          	add    $0x1,%rbp
   104ff:	49 83 fc 07          	cmp    $0x7,%r12
   10503:	76 33                	jbe    10538 <memcpy_verw+0x88>
   10505:	48 89 e8             	mov    %rbp,%rax
   10508:	48 09 d8             	or     %rbx,%rax
   1050b:	a8 07                	test   $0x7,%al
   1050d:	75 d9                	jne    104e8 <memcpy_verw+0x38>
   1050f:	4d 89 e3             	mov    %r12,%r11
   10512:	49 83 e3 f8          	and    $0xfffffffffffffff8,%r11
   10516:	48 39 dd             	cmp    %rbx,%rbp
   10519:	74 0e                	je     10529 <memcpy_verw+0x79>
   1051b:	4c 89 da             	mov    %r11,%rdx
   1051e:	48 89 de             	mov    %rbx,%rsi
   10521:	48 89 ef             	mov    %rbp,%rdi
   10524:	e8 97 fe ff ff       	call   103c0 <__memcpy.part.0>
   10529:	4d 29 dc             	sub    %r11,%r12
   1052c:	4c 01 db             	add    %r11,%rbx
   1052f:	4c 01 dd             	add    %r11,%rbp
   10532:	49 83 fc 07          	cmp    $0x7,%r12
   10536:	77 cd                	ja     10505 <memcpy_verw+0x55>
   10538:	4d 85 e4             	test   %r12,%r12
   1053b:	74 1a                	je     10557 <memcpy_verw+0xa7>
   1053d:	45 31 f6             	xor    %r14d,%r14d
   10540:	4a 8d 34 33          	lea    (%rbx,%r14,1),%rsi
   10544:	4a 8d 7c 35 00       	lea    0x0(%rbp,%r14,1),%rdi
   10549:	49 83 c6 01          	add    $0x1,%r14
   1054d:	e8 2e 09 00 00       	call   10e80 <__memcpy_verw>
   10552:	4d 39 e6             	cmp    %r12,%r14
   10555:	72 e9                	jb     10540 <memcpy_verw+0x90>
   10557:	5b                   	pop    %rbx
   10558:	4c 89 e8             	mov    %r13,%rax
   1055b:	5d                   	pop    %rbp
   1055c:	41 5c                	pop    %r12
   1055e:	41 5d                	pop    %r13
   10560:	41 5e                	pop    %r14
   10562:	c3                   	ret    
   10563:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1056a:	00 00 00 
   1056d:	0f 1f 00             	nopl   (%rax)

0000000000010570 <copy_external_memory>:
   10570:	41 57                	push   %r15
   10572:	66 0f ef c0          	pxor   %xmm0,%xmm0
   10576:	41 56                	push   %r14
   10578:	41 55                	push   %r13
   1057a:	41 54                	push   %r12
   1057c:	55                   	push   %rbp
   1057d:	53                   	push   %rbx
   1057e:	48 83 ec 38          	sub    $0x38,%rsp
   10582:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   10589:	00 00 
   1058b:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   10590:	31 c0                	xor    %eax,%eax
   10592:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   10597:	48 85 d2             	test   %rdx,%rdx
   1059a:	74 2d                	je     105c9 <copy_external_memory+0x59>
   1059c:	41 89 f6             	mov    %esi,%r14d
   1059f:	49 89 fd             	mov    %rdi,%r13
   105a2:	48 89 f3             	mov    %rsi,%rbx
   105a5:	41 89 cc             	mov    %ecx,%r12d
   105a8:	41 83 e6 07          	and    $0x7,%r14d
   105ac:	75 52                	jne    10600 <copy_external_memory+0x90>
   105ae:	48 83 fa 08          	cmp    $0x8,%rdx
   105b2:	75 4c                	jne    10600 <copy_external_memory+0x90>
   105b4:	45 84 e4             	test   %r12b,%r12b
   105b7:	75 37                	jne    105f0 <copy_external_memory+0x80>
   105b9:	4c 39 eb             	cmp    %r13,%rbx
   105bc:	74 0b                	je     105c9 <copy_external_memory+0x59>
   105be:	48 89 de             	mov    %rbx,%rsi
   105c1:	4c 89 ef             	mov    %r13,%rdi
   105c4:	e8 f7 fd ff ff       	call   103c0 <__memcpy.part.0>
   105c9:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   105ce:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
   105d5:	00 00 
   105d7:	75 7f                	jne    10658 <copy_external_memory+0xe8>
   105d9:	48 83 c4 38          	add    $0x38,%rsp
   105dd:	5b                   	pop    %rbx
   105de:	5d                   	pop    %rbp
   105df:	41 5c                	pop    %r12
   105e1:	41 5d                	pop    %r13
   105e3:	41 5e                	pop    %r14
   105e5:	41 5f                	pop    %r15
   105e7:	c3                   	ret    
   105e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   105ef:	00 
   105f0:	48 89 de             	mov    %rbx,%rsi
   105f3:	4c 89 ef             	mov    %r13,%rdi
   105f6:	e8 b5 fe ff ff       	call   104b0 <memcpy_verw>
   105fb:	eb cc                	jmp    105c9 <copy_external_memory+0x59>
   105fd:	0f 1f 00             	nopl   (%rax)
   10600:	45 89 f7             	mov    %r14d,%r15d
   10603:	48 89 de             	mov    %rbx,%rsi
   10606:	48 8d 6c 24 10       	lea    0x10(%rsp),%rbp
   1060b:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   10610:	4c 29 fe             	sub    %r15,%rsi
   10613:	48 89 ef             	mov    %rbp,%rdi
   10616:	e8 85 08 00 00       	call   10ea0 <__memcpy_8a>
   1061b:	45 85 f6             	test   %r14d,%r14d
   1061e:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   10623:	74 0a                	je     1062f <copy_external_memory+0xbf>
   10625:	49 8d 04 17          	lea    (%r15,%rdx,1),%rax
   10629:	48 83 f8 08          	cmp    $0x8,%rax
   1062d:	77 11                	ja     10640 <copy_external_memory+0xd0>
   1062f:	4a 8d 5c 3d 00       	lea    0x0(%rbp,%r15,1),%rbx
   10634:	45 84 e4             	test   %r12b,%r12b
   10637:	74 80                	je     105b9 <copy_external_memory+0x49>
   10639:	eb b5                	jmp    105f0 <copy_external_memory+0x80>
   1063b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10640:	4c 29 fb             	sub    %r15,%rbx
   10643:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   10648:	48 8d 73 08          	lea    0x8(%rbx),%rsi
   1064c:	e8 4f 08 00 00       	call   10ea0 <__memcpy_8a>
   10651:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   10656:	eb d7                	jmp    1062f <copy_external_memory+0xbf>
   10658:	e8 43 03 00 00       	call   109a0 <__stack_chk_fail>
   1065d:	0f 1f 00             	nopl   (%rax)

0000000000010660 <memcpy_nochecks>:
   10660:	f3 0f 1e fa          	endbr64 
   10664:	49 89 fb             	mov    %rdi,%r11
   10667:	48 85 d2             	test   %rdx,%rdx
   1066a:	74 0a                	je     10676 <memcpy_nochecks+0x16>
   1066c:	48 39 f7             	cmp    %rsi,%rdi
   1066f:	74 05                	je     10676 <memcpy_nochecks+0x16>
   10671:	e8 4a fd ff ff       	call   103c0 <__memcpy.part.0>
   10676:	4c 89 d8             	mov    %r11,%rax
   10679:	c3                   	ret    
   1067a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000010680 <memcpy>:
   10680:	f3 0f 1e fa          	endbr64 
   10684:	41 57                	push   %r15
   10686:	41 56                	push   %r14
   10688:	41 55                	push   %r13
   1068a:	49 89 fd             	mov    %rdi,%r13
   1068d:	41 54                	push   %r12
   1068f:	55                   	push   %rbp
   10690:	53                   	push   %rbx
   10691:	48 83 ec 18          	sub    $0x18,%rsp
   10695:	48 85 d2             	test   %rdx,%rdx
   10698:	0f 84 d4 00 00 00    	je     10772 <memcpy+0xf2>
   1069e:	48 89 f3             	mov    %rsi,%rbx
   106a1:	48 39 f7             	cmp    %rsi,%rdi
   106a4:	0f 84 c8 00 00 00    	je     10772 <memcpy+0xf2>
   106aa:	48 89 d6             	mov    %rdx,%rsi
   106ad:	48 89 df             	mov    %rbx,%rdi
   106b0:	48 89 d5             	mov    %rdx,%rbp
   106b3:	e8 a8 54 ff ff       	call   5b60 <sgx_is_within_enclave>
   106b8:	48 89 ee             	mov    %rbp,%rsi
   106bb:	4c 89 ef             	mov    %r13,%rdi
   106be:	41 89 c4             	mov    %eax,%r12d
   106c1:	e8 9a 54 ff ff       	call   5b60 <sgx_is_within_enclave>
   106c6:	45 85 e4             	test   %r12d,%r12d
   106c9:	0f 85 b9 00 00 00    	jne    10788 <memcpy+0x108>
   106cf:	85 c0                	test   %eax,%eax
   106d1:	4d 89 ec             	mov    %r13,%r12
   106d4:	0f 94 c0             	sete   %al
   106d7:	0f b6 c0             	movzbl %al,%eax
   106da:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   106de:	48 83 fd 07          	cmp    $0x7,%rbp
   106e2:	77 38                	ja     1071c <memcpy+0x9c>
   106e4:	eb 7a                	jmp    10760 <memcpy+0xe0>
   106e6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   106ed:	00 00 00 
   106f0:	41 be 08 00 00 00    	mov    $0x8,%r14d
   106f6:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
   106fa:	48 89 de             	mov    %rbx,%rsi
   106fd:	4c 89 e7             	mov    %r12,%rdi
   10700:	4d 29 fe             	sub    %r15,%r14
   10703:	49 8d 6c 2f f8       	lea    -0x8(%r15,%rbp,1),%rbp
   10708:	4c 89 f2             	mov    %r14,%rdx
   1070b:	4c 01 f3             	add    %r14,%rbx
   1070e:	4d 01 f4             	add    %r14,%r12
   10711:	e8 5a fe ff ff       	call   10570 <copy_external_memory>
   10716:	48 83 fd 07          	cmp    $0x7,%rbp
   1071a:	76 44                	jbe    10760 <memcpy+0xe0>
   1071c:	48 89 d8             	mov    %rbx,%rax
   1071f:	4d 89 e7             	mov    %r12,%r15
   10722:	4c 09 e0             	or     %r12,%rax
   10725:	41 83 e7 07          	and    $0x7,%r15d
   10729:	a8 07                	test   $0x7,%al
   1072b:	75 c3                	jne    106f0 <memcpy+0x70>
   1072d:	49 89 eb             	mov    %rbp,%r11
   10730:	49 83 e3 f8          	and    $0xfffffffffffffff8,%r11
   10734:	4c 39 e3             	cmp    %r12,%rbx
   10737:	74 0e                	je     10747 <memcpy+0xc7>
   10739:	4c 89 da             	mov    %r11,%rdx
   1073c:	48 89 de             	mov    %rbx,%rsi
   1073f:	4c 89 e7             	mov    %r12,%rdi
   10742:	e8 79 fc ff ff       	call   103c0 <__memcpy.part.0>
   10747:	4c 29 dd             	sub    %r11,%rbp
   1074a:	4c 01 db             	add    %r11,%rbx
   1074d:	4d 01 dc             	add    %r11,%r12
   10750:	48 83 fd 07          	cmp    $0x7,%rbp
   10754:	77 c6                	ja     1071c <memcpy+0x9c>
   10756:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1075d:	00 00 00 
   10760:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
   10764:	48 89 ea             	mov    %rbp,%rdx
   10767:	48 89 de             	mov    %rbx,%rsi
   1076a:	4c 89 e7             	mov    %r12,%rdi
   1076d:	e8 fe fd ff ff       	call   10570 <copy_external_memory>
   10772:	48 83 c4 18          	add    $0x18,%rsp
   10776:	4c 89 e8             	mov    %r13,%rax
   10779:	5b                   	pop    %rbx
   1077a:	5d                   	pop    %rbp
   1077b:	41 5c                	pop    %r12
   1077d:	41 5d                	pop    %r13
   1077f:	41 5e                	pop    %r14
   10781:	41 5f                	pop    %r15
   10783:	c3                   	ret    
   10784:	0f 1f 40 00          	nopl   0x0(%rax)
   10788:	48 89 ea             	mov    %rbp,%rdx
   1078b:	48 89 de             	mov    %rbx,%rsi
   1078e:	4c 89 ef             	mov    %r13,%rdi
   10791:	85 c0                	test   %eax,%eax
   10793:	75 1b                	jne    107b0 <memcpy+0x130>
   10795:	48 83 c4 18          	add    $0x18,%rsp
   10799:	5b                   	pop    %rbx
   1079a:	5d                   	pop    %rbp
   1079b:	41 5c                	pop    %r12
   1079d:	41 5d                	pop    %r13
   1079f:	41 5e                	pop    %r14
   107a1:	41 5f                	pop    %r15
   107a3:	e9 08 fd ff ff       	jmp    104b0 <memcpy_verw>
   107a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   107af:	00 
   107b0:	e8 0b fc ff ff       	call   103c0 <__memcpy.part.0>
   107b5:	eb bb                	jmp    10772 <memcpy+0xf2>
   107b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   107be:	00 00 

00000000000107c0 <memset_verw>:
   107c0:	f3 0f 1e fa          	endbr64 
   107c4:	41 56                	push   %r14
   107c6:	41 55                	push   %r13
   107c8:	41 54                	push   %r12
   107ca:	49 89 fc             	mov    %rdi,%r12
   107cd:	55                   	push   %rbp
   107ce:	53                   	push   %rbx
   107cf:	48 83 ec 20          	sub    $0x20,%rsp
   107d3:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   107da:	00 00 
   107dc:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   107e1:	31 c0                	xor    %eax,%eax
   107e3:	48 85 d2             	test   %rdx,%rdx
   107e6:	0f 84 a0 00 00 00    	je     1088c <memset_verw+0xcc>
   107ec:	48 85 ff             	test   %rdi,%rdi
   107ef:	0f 84 97 00 00 00    	je     1088c <memset_verw+0xcc>
   107f5:	4c 8d 6c 24 10       	lea    0x10(%rsp),%r13
   107fa:	48 89 d5             	mov    %rdx,%rbp
   107fd:	ba 08 00 00 00       	mov    $0x8,%edx
   10802:	4c 89 e3             	mov    %r12,%rbx
   10805:	4c 89 ef             	mov    %r13,%rdi
   10808:	40 88 74 24 0f       	mov    %sil,0xf(%rsp)
   1080d:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   10814:	00 00 
   10816:	e8 95 06 00 00       	call   10eb0 <__memset>
   1081b:	48 83 fd 07          	cmp    $0x7,%rbp
   1081f:	76 4b                	jbe    1086c <memset_verw+0xac>
   10821:	4c 8d 74 24 0f       	lea    0xf(%rsp),%r14
   10826:	eb 21                	jmp    10849 <memset_verw+0x89>
   10828:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1082f:	00 
   10830:	48 89 df             	mov    %rbx,%rdi
   10833:	4c 89 ee             	mov    %r13,%rsi
   10836:	48 83 ed 08          	sub    $0x8,%rbp
   1083a:	48 83 c3 08          	add    $0x8,%rbx
   1083e:	e8 5d 06 00 00       	call   10ea0 <__memcpy_8a>
   10843:	48 83 fd 07          	cmp    $0x7,%rbp
   10847:	76 1e                	jbe    10867 <memset_verw+0xa7>
   10849:	f6 c3 07             	test   $0x7,%bl
   1084c:	74 e2                	je     10830 <memset_verw+0x70>
   1084e:	48 89 df             	mov    %rbx,%rdi
   10851:	4c 89 f6             	mov    %r14,%rsi
   10854:	48 83 ed 01          	sub    $0x1,%rbp
   10858:	48 83 c3 01          	add    $0x1,%rbx
   1085c:	e8 1f 06 00 00       	call   10e80 <__memcpy_verw>
   10861:	48 83 fd 07          	cmp    $0x7,%rbp
   10865:	77 e2                	ja     10849 <memset_verw+0x89>
   10867:	48 85 ed             	test   %rbp,%rbp
   1086a:	74 20                	je     1088c <memset_verw+0xcc>
   1086c:	48 01 dd             	add    %rbx,%rbp
   1086f:	4c 8d 6c 24 0f       	lea    0xf(%rsp),%r13
   10874:	0f 1f 40 00          	nopl   0x0(%rax)
   10878:	48 89 df             	mov    %rbx,%rdi
   1087b:	4c 89 ee             	mov    %r13,%rsi
   1087e:	48 83 c3 01          	add    $0x1,%rbx
   10882:	e8 f9 05 00 00       	call   10e80 <__memcpy_verw>
   10887:	48 39 eb             	cmp    %rbp,%rbx
   1088a:	75 ec                	jne    10878 <memset_verw+0xb8>
   1088c:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   10891:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
   10898:	00 00 
   1089a:	75 10                	jne    108ac <memset_verw+0xec>
   1089c:	48 83 c4 20          	add    $0x20,%rsp
   108a0:	4c 89 e0             	mov    %r12,%rax
   108a3:	5b                   	pop    %rbx
   108a4:	5d                   	pop    %rbp
   108a5:	41 5c                	pop    %r12
   108a7:	41 5d                	pop    %r13
   108a9:	41 5e                	pop    %r14
   108ab:	c3                   	ret    
   108ac:	e8 ef 00 00 00       	call   109a0 <__stack_chk_fail>
   108b1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   108b8:	00 00 00 
   108bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000108c0 <memset>:
   108c0:	f3 0f 1e fa          	endbr64 
   108c4:	e9 e7 05 00 00       	jmp    10eb0 <__memset>
   108c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000108d0 <memset_s>:
   108d0:	f3 0f 1e fa          	endbr64 
   108d4:	53                   	push   %rbx
   108d5:	48 85 ff             	test   %rdi,%rdi
   108d8:	74 3e                	je     10918 <memset_s+0x48>
   108da:	48 89 f0             	mov    %rsi,%rax
   108dd:	89 d6                	mov    %edx,%esi
   108df:	48 39 c8             	cmp    %rcx,%rax
   108e2:	73 1c                	jae    10900 <memset_s+0x30>
   108e4:	48 8b 0d 5d 75 00 00 	mov    0x755d(%rip),%rcx        # 17e48 <__memset_vp>
   108eb:	48 89 c2             	mov    %rax,%rdx
   108ee:	bb 4b 00 00 00       	mov    $0x4b,%ebx
   108f3:	ff d1                	call   *%rcx
   108f5:	e8 76 05 00 00       	call   10e70 <__errno_location>
   108fa:	89 18                	mov    %ebx,(%rax)
   108fc:	89 d8                	mov    %ebx,%eax
   108fe:	5b                   	pop    %rbx
   108ff:	c3                   	ret    
   10900:	31 db                	xor    %ebx,%ebx
   10902:	48 8b 05 3f 75 00 00 	mov    0x753f(%rip),%rax        # 17e48 <__memset_vp>
   10909:	48 89 ca             	mov    %rcx,%rdx
   1090c:	ff d0                	call   *%rax
   1090e:	89 d8                	mov    %ebx,%eax
   10910:	5b                   	pop    %rbx
   10911:	c3                   	ret    
   10912:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10918:	bb 16 00 00 00       	mov    $0x16,%ebx
   1091d:	eb d6                	jmp    108f5 <memset_s+0x25>
   1091f:	90                   	nop

0000000000010920 <memset_verw_s>:
   10920:	f3 0f 1e fa          	endbr64 
   10924:	53                   	push   %rbx
   10925:	48 85 ff             	test   %rdi,%rdi
   10928:	74 36                	je     10960 <memset_verw_s+0x40>
   1092a:	48 89 f0             	mov    %rsi,%rax
   1092d:	89 d6                	mov    %edx,%esi
   1092f:	48 39 c8             	cmp    %rcx,%rax
   10932:	73 1c                	jae    10950 <memset_verw_s+0x30>
   10934:	48 89 c2             	mov    %rax,%rdx
   10937:	bb 4b 00 00 00       	mov    $0x4b,%ebx
   1093c:	e8 7f fe ff ff       	call   107c0 <memset_verw>
   10941:	e8 2a 05 00 00       	call   10e70 <__errno_location>
   10946:	89 18                	mov    %ebx,(%rax)
   10948:	89 d8                	mov    %ebx,%eax
   1094a:	5b                   	pop    %rbx
   1094b:	c3                   	ret    
   1094c:	0f 1f 40 00          	nopl   0x0(%rax)
   10950:	31 db                	xor    %ebx,%ebx
   10952:	48 89 ca             	mov    %rcx,%rdx
   10955:	e8 66 fe ff ff       	call   107c0 <memset_verw>
   1095a:	89 d8                	mov    %ebx,%eax
   1095c:	5b                   	pop    %rbx
   1095d:	c3                   	ret    
   1095e:	66 90                	xchg   %ax,%ax
   10960:	bb 16 00 00 00       	mov    $0x16,%ebx
   10965:	eb da                	jmp    10941 <memset_verw_s+0x21>
   10967:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1096e:	00 00 

0000000000010970 <sgx_init_string_lib>:
   10970:	f3 0f 1e fa          	endbr64 
   10974:	31 c0                	xor    %eax,%eax
   10976:	c3                   	ret    
   10977:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1097e:	00 00 

0000000000010980 <strcmp>:
   10980:	f3 0f 1e fa          	endbr64 
   10984:	e9 87 05 00 00       	jmp    10f10 <_strcmp>
   10989:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000010990 <strlen>:
   10990:	f3 0f 1e fa          	endbr64 
   10994:	e9 07 06 00 00       	jmp    10fa0 <_strlen>
   10999:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000109a0 <__stack_chk_fail>:
   109a0:	f3 0f 1e fa          	endbr64 
   109a4:	50                   	push   %rax
   109a5:	58                   	pop    %rax
   109a6:	48 83 ec 08          	sub    $0x8,%rsp
   109aa:	e8 88 1b 00 00       	call   12537 <abort>
   109af:	90                   	nop

00000000000109b0 <__stack_chk_fail_local>:
   109b0:	f3 0f 1e fa          	endbr64 
   109b4:	50                   	push   %rax
   109b5:	58                   	pop    %rax
   109b6:	48 83 ec 08          	sub    $0x8,%rsp
   109ba:	e8 78 1b 00 00       	call   12537 <abort>
   109bf:	90                   	nop

00000000000109c0 <__intel_security_check_cookie>:
   109c0:	f3 0f 1e fa          	endbr64 
   109c4:	48 39 3d 2d 74 00 00 	cmp    %rdi,0x742d(%rip)        # 17df8 <__intel_security_cookie>
   109cb:	75 01                	jne    109ce <__intel_security_check_cookie+0xe>
   109cd:	c3                   	ret    
   109ce:	50                   	push   %rax
   109cf:	e8 63 1b 00 00       	call   12537 <abort>
   109d4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   109db:	00 00 00 
   109de:	66 90                	xchg   %ax,%ax

00000000000109e0 <sgx_thread_spin_init>:
   109e0:	f3 0f 1e fa          	endbr64 
   109e4:	48 85 ff             	test   %rdi,%rdi
   109e7:	74 37                	je     10a20 <sgx_thread_spin_init+0x40>
   109e9:	53                   	push   %rbx
   109ea:	be 18 00 00 00       	mov    $0x18,%esi
   109ef:	48 89 fb             	mov    %rdi,%rbx
   109f2:	e8 69 51 ff ff       	call   5b60 <sgx_is_within_enclave>
   109f7:	85 c0                	test   %eax,%eax
   109f9:	74 1d                	je     10a18 <sgx_thread_spin_init+0x38>
   109fb:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   10a02:	31 c0                	xor    %eax,%eax
   10a04:	48 c7 43 10 00 00 00 	movq   $0x0,0x10(%rbx)
   10a0b:	00 
   10a0c:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%rbx)
   10a13:	5b                   	pop    %rbx
   10a14:	c3                   	ret    
   10a15:	0f 1f 00             	nopl   (%rax)
   10a18:	b8 16 00 00 00       	mov    $0x16,%eax
   10a1d:	5b                   	pop    %rbx
   10a1e:	c3                   	ret    
   10a1f:	90                   	nop
   10a20:	b8 16 00 00 00       	mov    $0x16,%eax
   10a25:	c3                   	ret    
   10a26:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   10a2d:	00 00 00 

0000000000010a30 <sgx_thread_spin_destroy>:
   10a30:	f3 0f 1e fa          	endbr64 
   10a34:	48 85 ff             	test   %rdi,%rdi
   10a37:	74 6f                	je     10aa8 <sgx_thread_spin_destroy+0x78>
   10a39:	55                   	push   %rbp
   10a3a:	be 18 00 00 00       	mov    $0x18,%esi
   10a3f:	53                   	push   %rbx
   10a40:	48 89 fb             	mov    %rdi,%rbx
   10a43:	48 83 ec 08          	sub    $0x8,%rsp
   10a47:	e8 14 51 ff ff       	call   5b60 <sgx_is_within_enclave>
   10a4c:	85 c0                	test   %eax,%eax
   10a4e:	74 30                	je     10a80 <sgx_thread_spin_destroy+0x50>
   10a50:	48 8d 6b 08          	lea    0x8(%rbx),%rbp
   10a54:	48 89 ef             	mov    %rbp,%rdi
   10a57:	e8 c4 bc ff ff       	call   c720 <sgx_spin_lock>
   10a5c:	48 83 7b 10 00       	cmpq   $0x0,0x10(%rbx)
   10a61:	75 2d                	jne    10a90 <sgx_thread_spin_destroy+0x60>
   10a63:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   10a6a:	48 89 ef             	mov    %rbp,%rdi
   10a6d:	e8 3e bd ff ff       	call   c7b0 <sgx_spin_unlock>
   10a72:	48 83 c4 08          	add    $0x8,%rsp
   10a76:	31 c0                	xor    %eax,%eax
   10a78:	5b                   	pop    %rbx
   10a79:	5d                   	pop    %rbp
   10a7a:	c3                   	ret    
   10a7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10a80:	48 83 c4 08          	add    $0x8,%rsp
   10a84:	b8 16 00 00 00       	mov    $0x16,%eax
   10a89:	5b                   	pop    %rbx
   10a8a:	5d                   	pop    %rbp
   10a8b:	c3                   	ret    
   10a8c:	0f 1f 40 00          	nopl   0x0(%rax)
   10a90:	48 89 ef             	mov    %rbp,%rdi
   10a93:	e8 18 bd ff ff       	call   c7b0 <sgx_spin_unlock>
   10a98:	48 83 c4 08          	add    $0x8,%rsp
   10a9c:	b8 10 00 00 00       	mov    $0x10,%eax
   10aa1:	5b                   	pop    %rbx
   10aa2:	5d                   	pop    %rbp
   10aa3:	c3                   	ret    
   10aa4:	0f 1f 40 00          	nopl   0x0(%rax)
   10aa8:	b8 16 00 00 00       	mov    $0x16,%eax
   10aad:	c3                   	ret    
   10aae:	66 90                	xchg   %ax,%ax

0000000000010ab0 <sgx_thread_spin_trylock>:
   10ab0:	f3 0f 1e fa          	endbr64 
   10ab4:	48 85 ff             	test   %rdi,%rdi
   10ab7:	74 7f                	je     10b38 <sgx_thread_spin_trylock+0x88>
   10ab9:	41 54                	push   %r12
   10abb:	be 18 00 00 00       	mov    $0x18,%esi
   10ac0:	55                   	push   %rbp
   10ac1:	53                   	push   %rbx
   10ac2:	48 89 fb             	mov    %rdi,%rbx
   10ac5:	e8 96 50 ff ff       	call   5b60 <sgx_is_within_enclave>
   10aca:	85 c0                	test   %eax,%eax
   10acc:	74 42                	je     10b10 <sgx_thread_spin_trylock+0x60>
   10ace:	e8 70 16 00 00       	call   12143 <get_thread_data>
   10ad3:	4c 8d 63 08          	lea    0x8(%rbx),%r12
   10ad7:	4c 89 e7             	mov    %r12,%rdi
   10ada:	48 89 c5             	mov    %rax,%rbp
   10add:	e8 3e bc ff ff       	call   c720 <sgx_spin_lock>
   10ae2:	48 8b 43 10          	mov    0x10(%rbx),%rax
   10ae6:	48 39 e8             	cmp    %rbp,%rax
   10ae9:	74 09                	je     10af4 <sgx_thread_spin_trylock+0x44>
   10aeb:	48 85 c0             	test   %rax,%rax
   10aee:	75 30                	jne    10b20 <sgx_thread_spin_trylock+0x70>
   10af0:	48 89 6b 10          	mov    %rbp,0x10(%rbx)
   10af4:	48 83 03 01          	addq   $0x1,(%rbx)
   10af8:	4c 89 e7             	mov    %r12,%rdi
   10afb:	e8 b0 bc ff ff       	call   c7b0 <sgx_spin_unlock>
   10b00:	5b                   	pop    %rbx
   10b01:	31 c0                	xor    %eax,%eax
   10b03:	5d                   	pop    %rbp
   10b04:	41 5c                	pop    %r12
   10b06:	c3                   	ret    
   10b07:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   10b0e:	00 00 
   10b10:	5b                   	pop    %rbx
   10b11:	b8 16 00 00 00       	mov    $0x16,%eax
   10b16:	5d                   	pop    %rbp
   10b17:	41 5c                	pop    %r12
   10b19:	c3                   	ret    
   10b1a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10b20:	4c 89 e7             	mov    %r12,%rdi
   10b23:	e8 88 bc ff ff       	call   c7b0 <sgx_spin_unlock>
   10b28:	5b                   	pop    %rbx
   10b29:	b8 10 00 00 00       	mov    $0x10,%eax
   10b2e:	5d                   	pop    %rbp
   10b2f:	41 5c                	pop    %r12
   10b31:	c3                   	ret    
   10b32:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10b38:	b8 16 00 00 00       	mov    $0x16,%eax
   10b3d:	c3                   	ret    
   10b3e:	66 90                	xchg   %ax,%ax

0000000000010b40 <sgx_thread_spin_unlock>:
   10b40:	f3 0f 1e fa          	endbr64 
   10b44:	48 85 ff             	test   %rdi,%rdi
   10b47:	0f 84 8b 00 00 00    	je     10bd8 <sgx_thread_spin_unlock+0x98>
   10b4d:	41 54                	push   %r12
   10b4f:	be 18 00 00 00       	mov    $0x18,%esi
   10b54:	55                   	push   %rbp
   10b55:	53                   	push   %rbx
   10b56:	48 89 fb             	mov    %rdi,%rbx
   10b59:	e8 02 50 ff ff       	call   5b60 <sgx_is_within_enclave>
   10b5e:	85 c0                	test   %eax,%eax
   10b60:	74 56                	je     10bb8 <sgx_thread_spin_unlock+0x78>
   10b62:	e8 dc 15 00 00       	call   12143 <get_thread_data>
   10b67:	4c 8d 63 08          	lea    0x8(%rbx),%r12
   10b6b:	4c 89 e7             	mov    %r12,%rdi
   10b6e:	48 89 c5             	mov    %rax,%rbp
   10b71:	e8 aa bb ff ff       	call   c720 <sgx_spin_lock>
   10b76:	48 8b 43 10          	mov    0x10(%rbx),%rax
   10b7a:	48 85 c0             	test   %rax,%rax
   10b7d:	74 21                	je     10ba0 <sgx_thread_spin_unlock+0x60>
   10b7f:	48 39 e8             	cmp    %rbp,%rax
   10b82:	75 1c                	jne    10ba0 <sgx_thread_spin_unlock+0x60>
   10b84:	48 83 2b 01          	subq   $0x1,(%rbx)
   10b88:	74 3e                	je     10bc8 <sgx_thread_spin_unlock+0x88>
   10b8a:	4c 89 e7             	mov    %r12,%rdi
   10b8d:	e8 1e bc ff ff       	call   c7b0 <sgx_spin_unlock>
   10b92:	5b                   	pop    %rbx
   10b93:	31 c0                	xor    %eax,%eax
   10b95:	5d                   	pop    %rbp
   10b96:	41 5c                	pop    %r12
   10b98:	c3                   	ret    
   10b99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10ba0:	4c 89 e7             	mov    %r12,%rdi
   10ba3:	e8 08 bc ff ff       	call   c7b0 <sgx_spin_unlock>
   10ba8:	5b                   	pop    %rbx
   10ba9:	b8 01 00 00 00       	mov    $0x1,%eax
   10bae:	5d                   	pop    %rbp
   10baf:	41 5c                	pop    %r12
   10bb1:	c3                   	ret    
   10bb2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10bb8:	5b                   	pop    %rbx
   10bb9:	b8 16 00 00 00       	mov    $0x16,%eax
   10bbe:	5d                   	pop    %rbp
   10bbf:	41 5c                	pop    %r12
   10bc1:	c3                   	ret    
   10bc2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10bc8:	48 c7 43 10 00 00 00 	movq   $0x0,0x10(%rbx)
   10bcf:	00 
   10bd0:	eb b8                	jmp    10b8a <sgx_thread_spin_unlock+0x4a>
   10bd2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10bd8:	b8 16 00 00 00       	mov    $0x16,%eax
   10bdd:	c3                   	ret    
   10bde:	66 90                	xchg   %ax,%ax

0000000000010be0 <memcpy_s>:
   10be0:	f3 0f 1e fa          	endbr64 
   10be4:	48 85 c9             	test   %rcx,%rcx
   10be7:	74 4f                	je     10c38 <memcpy_s+0x58>
   10be9:	53                   	push   %rbx
   10bea:	48 85 ff             	test   %rdi,%rdi
   10bed:	74 51                	je     10c40 <memcpy_s+0x60>
   10bef:	48 89 d3             	mov    %rdx,%rbx
   10bf2:	48 85 d2             	test   %rdx,%rdx
   10bf5:	74 19                	je     10c10 <memcpy_s+0x30>
   10bf7:	48 39 ce             	cmp    %rcx,%rsi
   10bfa:	72 14                	jb     10c10 <memcpy_s+0x30>
   10bfc:	48 89 de             	mov    %rbx,%rsi
   10bff:	48 89 ca             	mov    %rcx,%rdx
   10c02:	e8 79 fa ff ff       	call   10680 <memcpy>
   10c07:	31 c0                	xor    %eax,%eax
   10c09:	5b                   	pop    %rbx
   10c0a:	c3                   	ret    
   10c0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10c10:	48 89 f2             	mov    %rsi,%rdx
   10c13:	31 f6                	xor    %esi,%esi
   10c15:	e8 a6 fc ff ff       	call   108c0 <memset>
   10c1a:	48 85 db             	test   %rbx,%rbx
   10c1d:	74 21                	je     10c40 <memcpy_s+0x60>
   10c1f:	e8 4c 02 00 00       	call   10e70 <__errno_location>
   10c24:	c7 00 22 00 00 00    	movl   $0x22,(%rax)
   10c2a:	b8 22 00 00 00       	mov    $0x22,%eax
   10c2f:	5b                   	pop    %rbx
   10c30:	c3                   	ret    
   10c31:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10c38:	31 c0                	xor    %eax,%eax
   10c3a:	c3                   	ret    
   10c3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10c40:	e8 2b 02 00 00       	call   10e70 <__errno_location>
   10c45:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   10c4b:	b8 16 00 00 00       	mov    $0x16,%eax
   10c50:	5b                   	pop    %rbx
   10c51:	c3                   	ret    
   10c52:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   10c59:	00 00 00 
   10c5c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000010c60 <memcpy_verw_s>:
   10c60:	f3 0f 1e fa          	endbr64 
   10c64:	48 85 c9             	test   %rcx,%rcx
   10c67:	74 4f                	je     10cb8 <memcpy_verw_s+0x58>
   10c69:	53                   	push   %rbx
   10c6a:	48 85 ff             	test   %rdi,%rdi
   10c6d:	74 51                	je     10cc0 <memcpy_verw_s+0x60>
   10c6f:	48 89 d3             	mov    %rdx,%rbx
   10c72:	48 85 d2             	test   %rdx,%rdx
   10c75:	74 19                	je     10c90 <memcpy_verw_s+0x30>
   10c77:	48 39 ce             	cmp    %rcx,%rsi
   10c7a:	72 14                	jb     10c90 <memcpy_verw_s+0x30>
   10c7c:	48 89 de             	mov    %rbx,%rsi
   10c7f:	48 89 ca             	mov    %rcx,%rdx
   10c82:	e8 29 f8 ff ff       	call   104b0 <memcpy_verw>
   10c87:	31 c0                	xor    %eax,%eax
   10c89:	5b                   	pop    %rbx
   10c8a:	c3                   	ret    
   10c8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10c90:	48 89 f2             	mov    %rsi,%rdx
   10c93:	31 f6                	xor    %esi,%esi
   10c95:	e8 26 fb ff ff       	call   107c0 <memset_verw>
   10c9a:	48 85 db             	test   %rbx,%rbx
   10c9d:	74 21                	je     10cc0 <memcpy_verw_s+0x60>
   10c9f:	e8 cc 01 00 00       	call   10e70 <__errno_location>
   10ca4:	c7 00 22 00 00 00    	movl   $0x22,(%rax)
   10caa:	b8 22 00 00 00       	mov    $0x22,%eax
   10caf:	5b                   	pop    %rbx
   10cb0:	c3                   	ret    
   10cb1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10cb8:	31 c0                	xor    %eax,%eax
   10cba:	c3                   	ret    
   10cbb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10cc0:	e8 ab 01 00 00       	call   10e70 <__errno_location>
   10cc5:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   10ccb:	b8 16 00 00 00       	mov    $0x16,%eax
   10cd0:	5b                   	pop    %rbx
   10cd1:	c3                   	ret    

0000000000010cd2 <setjmp>:
   10cd2:	f3 0f 1e fa          	endbr64 
   10cd6:	50                   	push   %rax
   10cd7:	53                   	push   %rbx
   10cd8:	51                   	push   %rcx
   10cd9:	52                   	push   %rdx
   10cda:	56                   	push   %rsi
   10cdb:	57                   	push   %rdi
   10cdc:	41 50                	push   %r8
   10cde:	41 51                	push   %r9
   10ce0:	41 52                	push   %r10
   10ce2:	41 53                	push   %r11
   10ce4:	41 54                	push   %r12
   10ce6:	41 55                	push   %r13
   10ce8:	41 56                	push   %r14
   10cea:	41 57                	push   %r15
   10cec:	48 c7 c6 08 00 00 00 	mov    $0x8,%rsi
   10cf3:	e8 68 4e ff ff       	call   5b60 <sgx_is_within_enclave>
   10cf8:	83 f8 00             	cmp    $0x0,%eax
   10cfb:	74 60                	je     10d5d <.crash>
   10cfd:	41 5f                	pop    %r15
   10cff:	41 5e                	pop    %r14
   10d01:	41 5d                	pop    %r13
   10d03:	41 5c                	pop    %r12
   10d05:	41 5b                	pop    %r11
   10d07:	41 5a                	pop    %r10
   10d09:	41 59                	pop    %r9
   10d0b:	41 58                	pop    %r8
   10d0d:	5f                   	pop    %rdi
   10d0e:	5e                   	pop    %rsi
   10d0f:	5a                   	pop    %rdx
   10d10:	59                   	pop    %rcx
   10d11:	5b                   	pop    %rbx
   10d12:	58                   	pop    %rax
   10d13:	4c 8b 1c 24          	mov    (%rsp),%r11
   10d17:	48 89 1f             	mov    %rbx,(%rdi)
   10d1a:	48 89 6f 08          	mov    %rbp,0x8(%rdi)
   10d1e:	4c 89 67 10          	mov    %r12,0x10(%rdi)
   10d22:	4c 89 6f 18          	mov    %r13,0x18(%rdi)
   10d26:	4c 89 77 20          	mov    %r14,0x20(%rdi)
   10d2a:	4c 89 7f 28          	mov    %r15,0x28(%rdi)
   10d2e:	48 89 67 30          	mov    %rsp,0x30(%rdi)
   10d32:	4c 89 5f 38          	mov    %r11,0x38(%rdi)
   10d36:	e8 16 14 00 00       	call   12151 <get_stack_guard>
   10d3b:	48 31 07             	xor    %rax,(%rdi)
   10d3e:	48 31 47 08          	xor    %rax,0x8(%rdi)
   10d42:	48 31 47 10          	xor    %rax,0x10(%rdi)
   10d46:	48 31 47 18          	xor    %rax,0x18(%rdi)
   10d4a:	48 31 47 20          	xor    %rax,0x20(%rdi)
   10d4e:	48 31 47 28          	xor    %rax,0x28(%rdi)
   10d52:	48 31 47 30          	xor    %rax,0x30(%rdi)
   10d56:	48 31 47 38          	xor    %rax,0x38(%rdi)
   10d5a:	31 c0                	xor    %eax,%eax
   10d5c:	c3                   	ret    

0000000000010d5d <.crash>:
   10d5d:	0f 0b                	ud2    

0000000000010d5f <longjmp>:
   10d5f:	f3 0f 1e fa          	endbr64 
   10d63:	50                   	push   %rax
   10d64:	53                   	push   %rbx
   10d65:	51                   	push   %rcx
   10d66:	52                   	push   %rdx
   10d67:	56                   	push   %rsi
   10d68:	57                   	push   %rdi
   10d69:	41 50                	push   %r8
   10d6b:	41 51                	push   %r9
   10d6d:	41 52                	push   %r10
   10d6f:	41 53                	push   %r11
   10d71:	41 54                	push   %r12
   10d73:	41 55                	push   %r13
   10d75:	41 56                	push   %r14
   10d77:	41 57                	push   %r15
   10d79:	57                   	push   %rdi
   10d7a:	48 c7 c6 08 00 00 00 	mov    $0x8,%rsi
   10d81:	e8 da 4d ff ff       	call   5b60 <sgx_is_within_enclave>
   10d86:	83 f8 00             	cmp    $0x0,%eax
   10d89:	74 d2                	je     10d5d <.crash>
   10d8b:	5f                   	pop    %rdi
   10d8c:	48 8b 57 30          	mov    0x30(%rdi),%rdx
   10d90:	e8 bc 13 00 00       	call   12151 <get_stack_guard>
   10d95:	48 31 c2             	xor    %rax,%rdx
   10d98:	52                   	push   %rdx
   10d99:	5f                   	pop    %rdi
   10d9a:	e8 c1 68 ff ff       	call   7660 <is_valid_sp>
   10d9f:	83 f8 00             	cmp    $0x0,%eax
   10da2:	74 b9                	je     10d5d <.crash>
   10da4:	41 5f                	pop    %r15
   10da6:	41 5e                	pop    %r14
   10da8:	41 5d                	pop    %r13
   10daa:	41 5c                	pop    %r12
   10dac:	41 5b                	pop    %r11
   10dae:	41 5a                	pop    %r10
   10db0:	41 59                	pop    %r9
   10db2:	41 58                	pop    %r8
   10db4:	5f                   	pop    %rdi
   10db5:	5e                   	pop    %rsi
   10db6:	5a                   	pop    %rdx
   10db7:	59                   	pop    %rcx
   10db8:	5b                   	pop    %rbx
   10db9:	58                   	pop    %rax
   10dba:	89 f0                	mov    %esi,%eax
   10dbc:	48 8b 1f             	mov    (%rdi),%rbx
   10dbf:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   10dc3:	4c 8b 67 10          	mov    0x10(%rdi),%r12
   10dc7:	4c 8b 6f 18          	mov    0x18(%rdi),%r13
   10dcb:	4c 8b 77 20          	mov    0x20(%rdi),%r14
   10dcf:	4c 8b 7f 28          	mov    0x28(%rdi),%r15
   10dd3:	48 8b 57 30          	mov    0x30(%rdi),%rdx
   10dd7:	48 8b 4f 38          	mov    0x38(%rdi),%rcx
   10ddb:	50                   	push   %rax
   10ddc:	e8 70 13 00 00       	call   12151 <get_stack_guard>
   10de1:	48 31 c3             	xor    %rax,%rbx
   10de4:	48 31 c6             	xor    %rax,%rsi
   10de7:	49 31 c4             	xor    %rax,%r12
   10dea:	49 31 c5             	xor    %rax,%r13
   10ded:	49 31 c6             	xor    %rax,%r14
   10df0:	49 31 c7             	xor    %rax,%r15
   10df3:	48 31 c2             	xor    %rax,%rdx
   10df6:	48 31 c1             	xor    %rax,%rcx
   10df9:	58                   	pop    %rax
   10dfa:	48 89 f5             	mov    %rsi,%rbp
   10dfd:	48 89 0a             	mov    %rcx,(%rdx)
   10e00:	48 89 d4             	mov    %rdx,%rsp
   10e03:	85 c0                	test   %eax,%eax
   10e05:	75 02                	jne    10e09 <longjmp+0xaa>
   10e07:	ff c0                	inc    %eax
   10e09:	c3                   	ret    
   10e0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000010e10 <rsrv_mem_init>:
   10e10:	f3 0f 1e fa          	endbr64 
   10e14:	48 85 ff             	test   %rdi,%rdi
   10e17:	74 47                	je     10e60 <rsrv_mem_init+0x50>
   10e19:	48 89 f0             	mov    %rsi,%rax
   10e1c:	b9 01 00 00 00       	mov    $0x1,%ecx
   10e21:	48 09 d0             	or     %rdx,%rax
   10e24:	48 09 f8             	or     %rdi,%rax
   10e27:	a9 ff 0f 00 00       	test   $0xfff,%eax
   10e2c:	74 0a                	je     10e38 <rsrv_mem_init+0x28>
   10e2e:	89 c8                	mov    %ecx,%eax
   10e30:	c3                   	ret    
   10e31:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10e38:	48 89 f0             	mov    %rsi,%rax
   10e3b:	48 03 05 1e 70 00 00 	add    0x701e(%rip),%rax        # 17e60 <rsrv_mem_base>
   10e42:	72 ea                	jb     10e2e <rsrv_mem_init+0x1e>
   10e44:	31 c9                	xor    %ecx,%ecx
   10e46:	48 89 3d 13 70 00 00 	mov    %rdi,0x7013(%rip)        # 17e60 <rsrv_mem_base>
   10e4d:	48 89 35 04 70 00 00 	mov    %rsi,0x7004(%rip)        # 17e58 <rsrv_mem_size>
   10e54:	89 c8                	mov    %ecx,%eax
   10e56:	48 89 15 f3 6f 00 00 	mov    %rdx,0x6ff3(%rip)        # 17e50 <rsrv_mem_min_size>
   10e5d:	c3                   	ret    
   10e5e:	66 90                	xchg   %ax,%ax
   10e60:	b9 01 00 00 00       	mov    $0x1,%ecx
   10e65:	89 c8                	mov    %ecx,%eax
   10e67:	c3                   	ret    
   10e68:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   10e6f:	00 

0000000000010e70 <__errno_location>:
   10e70:	f3 0f 1e fa          	endbr64 
   10e74:	e9 37 67 ff ff       	jmp    75b0 <get_errno_addr>
   10e79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000010e80 <__memcpy_verw>:
   10e80:	8a 06                	mov    (%rsi),%al
   10e82:	48 83 ec 08          	sub    $0x8,%rsp
   10e86:	8c 1c 24             	mov    %ds,(%rsp)
   10e89:	0f 00 2c 24          	verw   (%rsp)
   10e8d:	88 07                	mov    %al,(%rdi)
   10e8f:	0f ae f0             	mfence 
   10e92:	0f ae e8             	lfence 
   10e95:	48 83 c4 08          	add    $0x8,%rsp
   10e99:	48 89 f8             	mov    %rdi,%rax
   10e9c:	c3                   	ret    
   10e9d:	cc                   	int3   
   10e9e:	cc                   	int3   
   10e9f:	cc                   	int3   

0000000000010ea0 <__memcpy_8a>:
   10ea0:	48 8b 06             	mov    (%rsi),%rax
   10ea3:	48 89 07             	mov    %rax,(%rdi)
   10ea6:	48 89 f8             	mov    %rdi,%rax
   10ea9:	c3                   	ret    
   10eaa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000010eb0 <__memset>:
   10eb0:	48 89 f0             	mov    %rsi,%rax
   10eb3:	48 25 ff 00 00 00    	and    $0xff,%rax
   10eb9:	48 89 d1             	mov    %rdx,%rcx
   10ebc:	49 89 fb             	mov    %rdi,%r11
   10ebf:	fc                   	cld    
   10ec0:	48 83 f9 0f          	cmp    $0xf,%rcx
   10ec4:	7e 38                	jle    10efe <L1>
   10ec6:	88 c4                	mov    %al,%ah
   10ec8:	89 c2                	mov    %eax,%edx
   10eca:	c1 e0 10             	shl    $0x10,%eax
   10ecd:	09 d0                	or     %edx,%eax
   10ecf:	89 c2                	mov    %eax,%edx
   10ed1:	48 c1 e0 20          	shl    $0x20,%rax
   10ed5:	48 09 d0             	or     %rdx,%rax
   10ed8:	48 89 fa             	mov    %rdi,%rdx
   10edb:	48 f7 da             	neg    %rdx
   10ede:	48 83 e2 07          	and    $0x7,%rdx
   10ee2:	49 89 c8             	mov    %rcx,%r8
   10ee5:	49 29 d0             	sub    %rdx,%r8
   10ee8:	48 89 d1             	mov    %rdx,%rcx
   10eeb:	f3 aa                	rep stos %al,%es:(%rdi)
   10eed:	4c 89 c1             	mov    %r8,%rcx
   10ef0:	48 c1 e9 03          	shr    $0x3,%rcx
   10ef4:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   10ef7:	4c 89 c1             	mov    %r8,%rcx
   10efa:	48 83 e1 07          	and    $0x7,%rcx

0000000000010efe <L1>:
   10efe:	f3 aa                	rep stos %al,%es:(%rdi)
   10f00:	4c 89 d8             	mov    %r11,%rax
   10f03:	c3                   	ret    
   10f04:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   10f0b:	00 00 00 
   10f0e:	66 90                	xchg   %ax,%ax

0000000000010f10 <_strcmp>:
   10f10:	40 f6 c7 07          	test   $0x7,%dil
   10f14:	74 14                	je     10f2a <_strcmp+0x1a>
   10f16:	8a 07                	mov    (%rdi),%al
   10f18:	48 ff c7             	inc    %rdi
   10f1b:	8a 16                	mov    (%rsi),%dl
   10f1d:	48 ff c6             	inc    %rsi
   10f20:	84 c0                	test   %al,%al
   10f22:	74 6e                	je     10f92 <_strcmp+0x82>
   10f24:	38 c2                	cmp    %al,%dl
   10f26:	74 e8                	je     10f10 <_strcmp>
   10f28:	eb 68                	jmp    10f92 <_strcmp+0x82>
   10f2a:	40 f6 c6 07          	test   $0x7,%sil
   10f2e:	75 50                	jne    10f80 <_strcmp+0x70>
   10f30:	49 b8 01 01 01 01 01 	movabs $0x101010101010101,%r8
   10f37:	01 01 01 
   10f3a:	48 83 ef 08          	sub    $0x8,%rdi
   10f3e:	49 b9 80 80 80 80 80 	movabs $0x8080808080808080,%r9
   10f45:	80 80 80 
   10f48:	48 83 ee 08          	sub    $0x8,%rsi
   10f4c:	0f 1f 40 00          	nopl   0x0(%rax)
   10f50:	48 8b 47 08          	mov    0x8(%rdi),%rax
   10f54:	48 83 c7 08          	add    $0x8,%rdi
   10f58:	48 8b 56 08          	mov    0x8(%rsi),%rdx
   10f5c:	48 83 c6 08          	add    $0x8,%rsi
   10f60:	48 39 c2             	cmp    %rax,%rdx
   10f63:	75 1b                	jne    10f80 <_strcmp+0x70>
   10f65:	4c 29 c2             	sub    %r8,%rdx
   10f68:	48 f7 d0             	not    %rax
   10f6b:	48 21 c2             	and    %rax,%rdx
   10f6e:	4c 85 ca             	test   %r9,%rdx
   10f71:	74 dd                	je     10f50 <_strcmp+0x40>
   10f73:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   10f7a:	00 00 00 00 
   10f7e:	66 90                	xchg   %ax,%ax
   10f80:	8a 07                	mov    (%rdi),%al
   10f82:	48 ff c7             	inc    %rdi
   10f85:	8a 16                	mov    (%rsi),%dl
   10f87:	48 ff c6             	inc    %rsi
   10f8a:	84 c0                	test   %al,%al
   10f8c:	74 04                	je     10f92 <_strcmp+0x82>
   10f8e:	38 c2                	cmp    %al,%dl
   10f90:	74 ee                	je     10f80 <_strcmp+0x70>
   10f92:	48 0f b6 c0          	movzbq %al,%rax
   10f96:	48 0f b6 d2          	movzbq %dl,%rdx
   10f9a:	48 29 d0             	sub    %rdx,%rax
   10f9d:	c3                   	ret    
   10f9e:	66 90                	xchg   %ax,%ax

0000000000010fa0 <_strlen>:
   10fa0:	49 b8 01 01 01 01 01 	movabs $0x101010101010101,%r8
   10fa7:	01 01 01 
   10faa:	40 f6 c7 07          	test   $0x7,%dil
   10fae:	48 89 f8             	mov    %rdi,%rax
   10fb1:	49 b9 80 80 80 80 80 	movabs $0x8080808080808080,%r9
   10fb8:	80 80 80 
   10fbb:	75 33                	jne    10ff0 <_strlen+0x50>
   10fbd:	0f 1f 00             	nopl   (%rax)
   10fc0:	48 8b 10             	mov    (%rax),%rdx
   10fc3:	48 83 c0 08          	add    $0x8,%rax
   10fc7:	48 89 d1             	mov    %rdx,%rcx
   10fca:	4c 29 c2             	sub    %r8,%rdx
   10fcd:	48 f7 d1             	not    %rcx
   10fd0:	4c 21 ca             	and    %r9,%rdx
   10fd3:	74 eb                	je     10fc0 <_strlen+0x20>
   10fd5:	48 21 ca             	and    %rcx,%rdx
   10fd8:	74 e6                	je     10fc0 <_strlen+0x20>
   10fda:	48 29 f8             	sub    %rdi,%rax
   10fdd:	48 0f bc d2          	bsf    %rdx,%rdx
   10fe1:	48 c1 ea 03          	shr    $0x3,%rdx
   10fe5:	48 8d 44 10 f8       	lea    -0x8(%rax,%rdx,1),%rax
   10fea:	c3                   	ret    
   10feb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10ff0:	88 c1                	mov    %al,%cl
   10ff2:	48 c7 c6 01 00 00 00 	mov    $0x1,%rsi
   10ff9:	80 e1 07             	and    $0x7,%cl
   10ffc:	24 f8                	and    $0xf8,%al
   10ffe:	c0 e1 03             	shl    $0x3,%cl
   11001:	48 8b 10             	mov    (%rax),%rdx
   11004:	48 d3 e6             	shl    %cl,%rsi
   11007:	48 ff ce             	dec    %rsi
   1100a:	48 09 f2             	or     %rsi,%rdx
   1100d:	eb b4                	jmp    10fc3 <_strlen+0x23>
   1100f:	90                   	nop

0000000000011010 <sgx_init_crypto_lib>:
   11010:	f3 0f 1e fa          	endbr64 
   11014:	e9 07 00 00 00       	jmp    11020 <init_ipp_cpuid>
   11019:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000011020 <init_ipp_cpuid>:
   11020:	f3 0f 1e fa          	endbr64 
   11024:	48 83 3d b4 6f 00 00 	cmpq   $0x0,0x6fb4(%rip)        # 17fe0 <ippcpSetCpuFeatures>
   1102b:	00 
   1102c:	0f 84 2e 02 00 00    	je     11260 <init_ipp_cpuid+0x240>
   11032:	48 89 f8             	mov    %rdi,%rax
   11035:	ba 02 00 00 00       	mov    $0x2,%edx
   1103a:	f6 c4 02             	test   $0x2,%ah
   1103d:	0f 84 1f 02 00 00    	je     11262 <init_ipp_cpuid+0x242>
   11043:	48 89 fa             	mov    %rdi,%rdx
   11046:	48 83 ec 08          	sub    $0x8,%rsp
   1104a:	48 b9 00 00 00 00 08 	movabs $0x800000000,%rcx
   11051:	00 00 00 
   11054:	81 e2 00 08 00 00    	and    $0x800,%edx
   1105a:	48 83 fa 01          	cmp    $0x1,%rdx
   1105e:	48 19 ff             	sbb    %rdi,%rdi
   11061:	48 83 e7 e0          	and    $0xffffffffffffffe0,%rdi
   11065:	48 83 c7 7f          	add    $0x7f,%rdi
   11069:	48 89 fa             	mov    %rdi,%rdx
   1106c:	80 ca 80             	or     $0x80,%dl
   1106f:	f6 c4 04             	test   $0x4,%ah
   11072:	48 0f 45 fa          	cmovne %rdx,%rdi
   11076:	48 89 fa             	mov    %rdi,%rdx
   11079:	80 ce 03             	or     $0x3,%dh
   1107c:	a9 00 00 01 00       	test   $0x10000,%eax
   11081:	48 0f 45 fa          	cmovne %rdx,%rdi
   11085:	48 89 fa             	mov    %rdi,%rdx
   11088:	80 ce 04             	or     $0x4,%dh
   1108b:	f6 c4 40             	test   $0x40,%ah
   1108e:	48 0f 45 fa          	cmovne %rdx,%rdi
   11092:	48 89 fa             	mov    %rdi,%rdx
   11095:	80 ce 08             	or     $0x8,%dh
   11098:	f6 c4 20             	test   $0x20,%ah
   1109b:	48 0f 45 fa          	cmovne %rdx,%rdi
   1109f:	48 89 fa             	mov    %rdi,%rdx
   110a2:	80 ce 20             	or     $0x20,%dh
   110a5:	a9 00 00 02 00       	test   $0x20000,%eax
   110aa:	48 0f 45 fa          	cmovne %rdx,%rdi
   110ae:	48 89 fa             	mov    %rdi,%rdx
   110b1:	80 ce 40             	or     $0x40,%dh
   110b4:	f6 c4 80             	test   $0x80,%ah
   110b7:	48 0f 45 fa          	cmovne %rdx,%rdi
   110bb:	48 89 fa             	mov    %rdi,%rdx
   110be:	80 ce 80             	or     $0x80,%dh
   110c1:	a9 00 00 80 00       	test   $0x800000,%eax
   110c6:	48 0f 45 fa          	cmovne %rdx,%rdi
   110ca:	48 89 fa             	mov    %rdi,%rdx
   110cd:	48 81 ca 00 00 01 00 	or     $0x10000,%rdx
   110d4:	a9 00 00 00 10       	test   $0x10000000,%eax
   110d9:	48 0f 45 fa          	cmovne %rdx,%rdi
   110dd:	48 89 fa             	mov    %rdi,%rdx
   110e0:	48 81 ca 00 00 02 00 	or     $0x20000,%rdx
   110e7:	a9 00 00 00 20       	test   $0x20000000,%eax
   110ec:	48 0f 45 fa          	cmovne %rdx,%rdi
   110f0:	48 89 fa             	mov    %rdi,%rdx
   110f3:	48 81 ca 00 00 08 00 	or     $0x80000,%rdx
   110fa:	48 85 c8             	test   %rcx,%rax
   110fd:	48 0f 45 fa          	cmovne %rdx,%rdi
   11101:	a9 00 00 00 08       	test   $0x8000000,%eax
   11106:	74 0d                	je     11115 <init_ipp_cpuid+0xf5>
   11108:	48 ba 00 00 10 00 02 	movabs $0x200100000,%rdx
   1110f:	00 00 00 
   11112:	48 09 d7             	or     %rdx,%rdi
   11115:	48 b9 00 00 00 00 02 	movabs $0x200000000,%rcx
   1111c:	00 00 00 
   1111f:	48 89 fa             	mov    %rdi,%rdx
   11122:	48 81 ca 00 00 80 00 	or     $0x800000,%rdx
   11129:	48 85 c8             	test   %rcx,%rax
   1112c:	48 b9 00 00 00 00 01 	movabs $0x100000000,%rcx
   11133:	00 00 00 
   11136:	48 0f 45 fa          	cmovne %rdx,%rdi
   1113a:	48 89 fa             	mov    %rdi,%rdx
   1113d:	48 81 ca 00 00 40 00 	or     $0x400000,%rdx
   11144:	48 85 c8             	test   %rcx,%rax
   11147:	48 b9 00 00 00 00 04 	movabs $0x400000000,%rcx
   1114e:	00 00 00 
   11151:	48 0f 45 fa          	cmovne %rdx,%rdi
   11155:	48 89 fa             	mov    %rdi,%rdx
   11158:	48 81 ca 00 00 20 00 	or     $0x200000,%rdx
   1115f:	48 85 c8             	test   %rcx,%rax
   11162:	48 b9 00 00 00 00 20 	movabs $0x2000000000,%rcx
   11169:	00 00 00 
   1116c:	48 0f 45 fa          	cmovne %rdx,%rdi
   11170:	48 89 fa             	mov    %rdi,%rdx
   11173:	48 81 ca 00 00 00 02 	or     $0x2000000,%rdx
   1117a:	a9 00 00 00 01       	test   $0x1000000,%eax
   1117f:	48 0f 45 fa          	cmovne %rdx,%rdi
   11183:	48 89 fa             	mov    %rdi,%rdx
   11186:	48 81 ca 00 00 00 01 	or     $0x1000000,%rdx
   1118d:	48 85 c8             	test   %rcx,%rax
   11190:	48 b9 00 00 00 00 40 	movabs $0x4000000000,%rcx
   11197:	00 00 00 
   1119a:	48 0f 45 fa          	cmovne %rdx,%rdi
   1119e:	48 89 fa             	mov    %rdi,%rdx
   111a1:	48 81 ca 00 00 00 04 	or     $0x4000000,%rdx
   111a8:	48 85 c8             	test   %rcx,%rax
   111ab:	48 b9 00 00 00 00 80 	movabs $0x8000000000,%rcx
   111b2:	00 00 00 
   111b5:	48 0f 45 fa          	cmovne %rdx,%rdi
   111b9:	48 89 fa             	mov    %rdi,%rdx
   111bc:	48 81 ca 00 00 00 08 	or     $0x8000000,%rdx
   111c3:	48 85 c8             	test   %rcx,%rax
   111c6:	48 b9 00 00 00 00 00 	movabs $0x20000000000,%rcx
   111cd:	02 00 00 
   111d0:	48 0f 45 fa          	cmovne %rdx,%rdi
   111d4:	48 89 fa             	mov    %rdi,%rdx
   111d7:	48 81 ca 00 00 00 40 	or     $0x40000000,%rdx
   111de:	48 85 c8             	test   %rcx,%rax
   111e1:	48 b9 00 00 00 00 00 	movabs $0x10000000000,%rcx
   111e8:	01 00 00 
   111eb:	48 0f 45 fa          	cmovne %rdx,%rdi
   111ef:	48 89 fa             	mov    %rdi,%rdx
   111f2:	48 81 ca 00 00 00 20 	or     $0x20000000,%rdx
   111f9:	48 85 c8             	test   %rcx,%rax
   111fc:	48 0f 45 fa          	cmovne %rdx,%rdi
   11200:	48 0f ba e0 2e       	bt     $0x2e,%rax
   11205:	73 05                	jae    1120c <init_ipp_cpuid+0x1ec>
   11207:	48 0f ba ef 23       	bts    $0x23,%rdi
   1120c:	a9 00 00 00 40       	test   $0x40000000,%eax
   11211:	74 05                	je     11218 <init_ipp_cpuid+0x1f8>
   11213:	48 0f ba ef 20       	bts    $0x20,%rdi
   11218:	48 0f ba e0 2d       	bt     $0x2d,%rax
   1121d:	73 05                	jae    11224 <init_ipp_cpuid+0x204>
   1121f:	48 0f ba ef 22       	bts    $0x22,%rdi
   11224:	48 0f ba e0 2c       	bt     $0x2c,%rax
   11229:	73 05                	jae    11230 <init_ipp_cpuid+0x210>
   1122b:	48 0f ba ef 25       	bts    $0x25,%rdi
   11230:	48 0f ba e0 2f       	bt     $0x2f,%rax
   11235:	73 05                	jae    1123c <init_ipp_cpuid+0x21c>
   11237:	48 0f ba ef 24       	bts    $0x24,%rdi
   1123c:	48 0f ba ef 3f       	bts    $0x3f,%rdi
   11241:	e8 d2 fd fe ff       	call   1018 <ippcpSetCpuFeatures@plt>
   11246:	31 d2                	xor    %edx,%edx
   11248:	85 c0                	test   %eax,%eax
   1124a:	0f 95 c2             	setne  %dl
   1124d:	48 83 c4 08          	add    $0x8,%rsp
   11251:	01 d2                	add    %edx,%edx
   11253:	89 d0                	mov    %edx,%eax
   11255:	c3                   	ret    
   11256:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1125d:	00 00 00 
   11260:	31 d2                	xor    %edx,%edx
   11262:	89 d0                	mov    %edx,%eax
   11264:	c3                   	ret    
   11265:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1126c:	00 00 00 
   1126f:	90                   	nop

0000000000011270 <sgx_create_report>:
   11270:	f3 0f 1e fa          	endbr64 
   11274:	55                   	push   %rbp
   11275:	48 89 e5             	mov    %rsp,%rbp
   11278:	41 57                	push   %r15
   1127a:	49 89 f7             	mov    %rsi,%r15
   1127d:	31 f6                	xor    %esi,%esi
   1127f:	41 56                	push   %r14
   11281:	41 55                	push   %r13
   11283:	49 89 fd             	mov    %rdi,%r13
   11286:	41 54                	push   %r12
   11288:	53                   	push   %rbx
   11289:	48 89 d3             	mov    %rdx,%rbx
   1128c:	ba 40 00 00 00       	mov    $0x40,%edx
   11291:	48 81 e4 00 fe ff ff 	and    $0xfffffffffffffe00,%rsp
   11298:	48 81 ec 00 08 00 00 	sub    $0x800,%rsp
   1129f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   112a6:	00 00 
   112a8:	48 89 84 24 f8 07 00 	mov    %rax,0x7f8(%rsp)
   112af:	00 
   112b0:	31 c0                	xor    %eax,%eax
   112b2:	48 8d 84 24 80 01 00 	lea    0x180(%rsp),%rax
   112b9:	00 
   112ba:	4c 8d b4 24 00 04 00 	lea    0x400(%rsp),%r14
   112c1:	00 
   112c2:	48 89 c7             	mov    %rax,%rdi
   112c5:	48 89 84 24 78 01 00 	mov    %rax,0x178(%rsp)
   112cc:	00 
   112cd:	4c 8d a4 24 00 02 00 	lea    0x200(%rsp),%r12
   112d4:	00 
   112d5:	e8 d6 fb ff ff       	call   10eb0 <__memset>
   112da:	31 f6                	xor    %esi,%esi
   112dc:	ba 00 02 00 00       	mov    $0x200,%edx
   112e1:	4c 89 f7             	mov    %r14,%rdi
   112e4:	e8 c7 fb ff ff       	call   10eb0 <__memset>
   112e9:	31 f6                	xor    %esi,%esi
   112eb:	ba b0 01 00 00       	mov    $0x1b0,%edx
   112f0:	4c 89 e7             	mov    %r12,%rdi
   112f3:	e8 b8 fb ff ff       	call   10eb0 <__memset>
   112f8:	4d 85 ed             	test   %r13,%r13
   112fb:	74 23                	je     11320 <sgx_create_report+0xb0>
   112fd:	be 00 02 00 00       	mov    $0x200,%esi
   11302:	4c 89 ef             	mov    %r13,%rdi
   11305:	e8 56 48 ff ff       	call   5b60 <sgx_is_within_enclave>
   1130a:	85 c0                	test   %eax,%eax
   1130c:	0f 84 be 00 00 00    	je     113d0 <sgx_create_report+0x160>
   11312:	b9 40 00 00 00       	mov    $0x40,%ecx
   11317:	4c 89 f7             	mov    %r14,%rdi
   1131a:	4c 89 ee             	mov    %r13,%rsi
   1131d:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
   11320:	4d 85 ff             	test   %r15,%r15
   11323:	74 4c                	je     11371 <sgx_create_report+0x101>
   11325:	be 40 00 00 00       	mov    $0x40,%esi
   1132a:	4c 89 ff             	mov    %r15,%rdi
   1132d:	e8 2e 48 ff ff       	call   5b60 <sgx_is_within_enclave>
   11332:	85 c0                	test   %eax,%eax
   11334:	0f 84 96 00 00 00    	je     113d0 <sgx_create_report+0x160>
   1133a:	f3 41 0f 6f 0f       	movdqu (%r15),%xmm1
   1133f:	f3 41 0f 6f 57 10    	movdqu 0x10(%r15),%xmm2
   11345:	f3 41 0f 6f 5f 20    	movdqu 0x20(%r15),%xmm3
   1134b:	f3 41 0f 6f 67 30    	movdqu 0x30(%r15),%xmm4
   11351:	0f 29 8c 24 80 01 00 	movaps %xmm1,0x180(%rsp)
   11358:	00 
   11359:	0f 29 94 24 90 01 00 	movaps %xmm2,0x190(%rsp)
   11360:	00 
   11361:	0f 29 9c 24 a0 01 00 	movaps %xmm3,0x1a0(%rsp)
   11368:	00 
   11369:	0f 29 a4 24 b0 01 00 	movaps %xmm4,0x1b0(%rsp)
   11370:	00 
   11371:	48 85 db             	test   %rbx,%rbx
   11374:	74 5a                	je     113d0 <sgx_create_report+0x160>
   11376:	be b0 01 00 00       	mov    $0x1b0,%esi
   1137b:	48 89 df             	mov    %rbx,%rdi
   1137e:	e8 dd 47 ff ff       	call   5b60 <sgx_is_within_enclave>
   11383:	85 c0                	test   %eax,%eax
   11385:	74 49                	je     113d0 <sgx_create_report+0x160>
   11387:	48 8b b4 24 78 01 00 	mov    0x178(%rsp),%rsi
   1138e:	00 
   1138f:	4c 89 e2             	mov    %r12,%rdx
   11392:	4c 89 f7             	mov    %r14,%rdi
   11395:	e8 e6 10 00 00       	call   12480 <do_ereport>
   1139a:	89 c2                	mov    %eax,%edx
   1139c:	b8 01 00 00 00       	mov    $0x1,%eax
   113a1:	85 d2                	test   %edx,%edx
   113a3:	75 30                	jne    113d5 <sgx_create_report+0x165>
   113a5:	31 c0                	xor    %eax,%eax
   113a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   113ae:	00 00 
   113b0:	66 41 0f 6f 04 04    	movdqa (%r12,%rax,1),%xmm0
   113b6:	0f 11 04 03          	movups %xmm0,(%rbx,%rax,1)
   113ba:	48 83 c0 10          	add    $0x10,%rax
   113be:	48 3d b0 01 00 00    	cmp    $0x1b0,%rax
   113c4:	75 ea                	jne    113b0 <sgx_create_report+0x140>
   113c6:	31 c0                	xor    %eax,%eax
   113c8:	eb 0b                	jmp    113d5 <sgx_create_report+0x165>
   113ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   113d0:	b8 02 00 00 00       	mov    $0x2,%eax
   113d5:	48 8b 94 24 f8 07 00 	mov    0x7f8(%rsp),%rdx
   113dc:	00 
   113dd:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   113e4:	00 00 
   113e6:	75 0f                	jne    113f7 <sgx_create_report+0x187>
   113e8:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
   113ec:	5b                   	pop    %rbx
   113ed:	41 5c                	pop    %r12
   113ef:	41 5d                	pop    %r13
   113f1:	41 5e                	pop    %r14
   113f3:	41 5f                	pop    %r15
   113f5:	5d                   	pop    %rbp
   113f6:	c3                   	ret    
   113f7:	e8 a4 f5 ff ff       	call   109a0 <__stack_chk_fail>
   113fc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000011400 <sgx_self_report>:
   11400:	f3 0f 1e fa          	endbr64 
   11404:	55                   	push   %rbp
   11405:	53                   	push   %rbx
   11406:	48 8d 1d 53 9a 01 00 	lea    0x19a53(%rip),%rbx        # 2ae60 <_ZZ15sgx_self_reportE7_report>
   1140d:	48 83 ec 08          	sub    $0x8,%rsp
   11411:	48 83 3d 77 9a 01 00 	cmpq   $0x0,0x19a77(%rip)        # 2ae90 <_ZZ15sgx_self_reportE7_report+0x30>
   11418:	00 
   11419:	74 0d                	je     11428 <sgx_self_report+0x28>
   1141b:	48 83 c4 08          	add    $0x8,%rsp
   1141f:	48 89 d8             	mov    %rbx,%rax
   11422:	5b                   	pop    %rbx
   11423:	5d                   	pop    %rbp
   11424:	c3                   	ret    
   11425:	0f 1f 00             	nopl   (%rax)
   11428:	48 8d 2d 11 9a 01 00 	lea    0x19a11(%rip),%rbp        # 2ae40 <_ZZ15sgx_self_reportE11report_lock>
   1142f:	48 89 ef             	mov    %rbp,%rdi
   11432:	e8 e9 b2 ff ff       	call   c720 <sgx_spin_lock>
   11437:	48 83 3d 51 9a 01 00 	cmpq   $0x0,0x19a51(%rip)        # 2ae90 <_ZZ15sgx_self_reportE7_report+0x30>
   1143e:	00 
   1143f:	74 17                	je     11458 <sgx_self_report+0x58>
   11441:	48 89 ef             	mov    %rbp,%rdi
   11444:	e8 67 b3 ff ff       	call   c7b0 <sgx_spin_unlock>
   11449:	48 83 c4 08          	add    $0x8,%rsp
   1144d:	48 89 d8             	mov    %rbx,%rax
   11450:	5b                   	pop    %rbx
   11451:	5d                   	pop    %rbp
   11452:	c3                   	ret    
   11453:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   11458:	48 89 da             	mov    %rbx,%rdx
   1145b:	31 f6                	xor    %esi,%esi
   1145d:	31 ff                	xor    %edi,%edi
   1145f:	e8 0c fe ff ff       	call   11270 <sgx_create_report>
   11464:	eb db                	jmp    11441 <sgx_self_report+0x41>

Disassembly of section .nipx:

0000000000011600 <init_enclave>:
   11600:	f3 0f 1e fa          	endbr64 
   11604:	41 54                	push   %r12
   11606:	55                   	push   %rbp
   11607:	53                   	push   %rbx
   11608:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
   1160f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   11616:	00 00 
   11618:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
   1161f:	00 
   11620:	31 c0                	xor    %eax,%eax
   11622:	48 85 ff             	test   %rdi,%rdi
   11625:	0f 84 f5 02 00 00    	je     11920 <init_enclave+0x320>
   1162b:	48 89 f3             	mov    %rsi,%rbx
   1162e:	48 85 f6             	test   %rsi,%rsi
   11631:	0f 84 e9 02 00 00    	je     11920 <init_enclave+0x320>
   11637:	48 83 3d 81 69 00 00 	cmpq   $0x0,0x6981(%rip)        # 17fc0 <_Z9pcl_entryPvS_>
   1163e:	00 
   1163f:	48 89 fd             	mov    %rdi,%rbp
   11642:	74 10                	je     11654 <init_enclave+0x54>
   11644:	0f ae e8             	lfence 
   11647:	e8 c4 f9 fe ff       	call   1010 <_Z9pcl_entryPvS_@plt>
   1164c:	85 c0                	test   %eax,%eax
   1164e:	0f 85 cc 02 00 00    	jne    11920 <init_enclave+0x320>
   11654:	48 89 ef             	mov    %rbp,%rdi
   11657:	e8 44 6d ff ff       	call   83a0 <relocate_enclave>
   1165c:	89 c5                	mov    %eax,%ebp
   1165e:	85 c0                	test   %eax,%eax
   11660:	0f 85 ba 02 00 00    	jne    11920 <init_enclave+0x320>
   11666:	e8 8d 0a 00 00       	call   120f8 <get_enclave_base>
   1166b:	48 8d 15 8e 1b 00 00 	lea    0x1b8e(%rip),%rdx        # 13200 <g_global_data>
   11672:	48 89 05 97 67 00 00 	mov    %rax,0x6797(%rip)        # 17e10 <g_enclave_base>
   11679:	48 8b 8a d0 06 00 00 	mov    0x6d0(%rdx),%rcx
   11680:	48 89 0d 81 67 00 00 	mov    %rcx,0x6781(%rip)        # 17e08 <g_enclave_size>
   11687:	48 8b 8a c0 06 00 00 	mov    0x6c0(%rdx),%rcx
   1168e:	48 85 c9             	test   %rcx,%rcx
   11691:	74 1e                	je     116b1 <init_enclave+0xb1>
   11693:	48 8b 8a c0 06 00 00 	mov    0x6c0(%rdx),%rcx
   1169a:	48 39 c8             	cmp    %rcx,%rax
   1169d:	0f 85 84 02 00 00    	jne    11927 <init_enclave+0x327>
   116a3:	48 8b 82 c8 06 00 00 	mov    0x6c8(%rdx),%rax
   116aa:	48 89 05 5f 67 00 00 	mov    %rax,0x675f(%rip)        # 17e10 <g_enclave_base>
   116b1:	be b0 00 00 00       	mov    $0xb0,%esi
   116b6:	48 89 df             	mov    %rbx,%rdi
   116b9:	e8 02 45 ff ff       	call   5bc0 <sgx_is_outside_enclave>
   116be:	85 c0                	test   %eax,%eax
   116c0:	0f 84 5a 02 00 00    	je     11920 <init_enclave+0x320>
   116c6:	0f ae e8             	lfence 
   116c9:	f3 0f 6f 03          	movdqu (%rbx),%xmm0
   116cd:	f3 0f 6f 4b 10       	movdqu 0x10(%rbx),%xmm1
   116d2:	f3 0f 6f 53 20       	movdqu 0x20(%rbx),%xmm2
   116d7:	f3 0f 6f 5b 30       	movdqu 0x30(%rbx),%xmm3
   116dc:	f3 0f 6f 63 40       	movdqu 0x40(%rbx),%xmm4
   116e1:	0f 29 04 24          	movaps %xmm0,(%rsp)
   116e5:	f3 0f 6f 6b 50       	movdqu 0x50(%rbx),%xmm5
   116ea:	f3 0f 6f 73 60       	movdqu 0x60(%rbx),%xmm6
   116ef:	0f 29 4c 24 10       	movaps %xmm1,0x10(%rsp)
   116f4:	f3 0f 6f 7b 70       	movdqu 0x70(%rbx),%xmm7
   116f9:	f3 0f 6f 83 80 00 00 	movdqu 0x80(%rbx),%xmm0
   11700:	00 
   11701:	0f 29 54 24 20       	movaps %xmm2,0x20(%rsp)
   11706:	f3 0f 6f 8b 90 00 00 	movdqu 0x90(%rbx),%xmm1
   1170d:	00 
   1170e:	f3 0f 6f 93 a0 00 00 	movdqu 0xa0(%rbx),%xmm2
   11715:	00 
   11716:	0f 29 5c 24 30       	movaps %xmm3,0x30(%rsp)
   1171b:	0f 29 64 24 40       	movaps %xmm4,0x40(%rsp)
   11720:	0f 29 6c 24 50       	movaps %xmm5,0x50(%rsp)
   11725:	0f 29 74 24 60       	movaps %xmm6,0x60(%rsp)
   1172a:	0f 29 7c 24 70       	movaps %xmm7,0x70(%rsp)
   1172f:	0f 29 84 24 80 00 00 	movaps %xmm0,0x80(%rsp)
   11736:	00 
   11737:	0f 29 8c 24 90 00 00 	movaps %xmm1,0x90(%rsp)
   1173e:	00 
   1173f:	0f 29 94 24 a0 00 00 	movaps %xmm2,0xa0(%rsp)
   11746:	00 
   11747:	f6 44 24 13 40       	testb  $0x40,0x13(%rsp)
   1174c:	0f 85 8e 01 00 00    	jne    118e0 <init_enclave+0x2e0>
   11752:	b9 14 00 00 00       	mov    $0x14,%ecx
   11757:	b8 9c 00 00 00       	mov    $0x9c,%eax
   1175c:	48 8d 14 04          	lea    (%rsp,%rax,1),%rdx
   11760:	48 8d 41 ff          	lea    -0x1(%rcx),%rax
   11764:	83 e0 01             	and    $0x1,%eax
   11767:	c6 02 00             	movb   $0x0,(%rdx)
   1176a:	48 89 c6             	mov    %rax,%rsi
   1176d:	b8 01 00 00 00       	mov    $0x1,%eax
   11772:	48 39 c8             	cmp    %rcx,%rax
   11775:	73 2b                	jae    117a2 <init_enclave+0x1a2>
   11777:	48 85 f6             	test   %rsi,%rsi
   1177a:	74 14                	je     11790 <init_enclave+0x190>
   1177c:	b8 02 00 00 00       	mov    $0x2,%eax
   11781:	c6 42 01 00          	movb   $0x0,0x1(%rdx)
   11785:	48 39 c8             	cmp    %rcx,%rax
   11788:	73 18                	jae    117a2 <init_enclave+0x1a2>
   1178a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   11790:	c6 04 02 00          	movb   $0x0,(%rdx,%rax,1)
   11794:	48 83 c0 02          	add    $0x2,%rax
   11798:	c6 44 10 ff 00       	movb   $0x0,-0x1(%rax,%rdx,1)
   1179d:	48 39 c8             	cmp    %rcx,%rax
   117a0:	72 ee                	jb     11790 <init_enclave+0x190>
   117a2:	8b 84 24 ac 00 00 00 	mov    0xac(%rsp),%eax
   117a9:	48 8d 5c 24 0c       	lea    0xc(%rsp),%rbx
   117ae:	89 05 4c 66 00 00    	mov    %eax,0x664c(%rip)        # 17e00 <g_cpu_core_num>
   117b4:	8b 44 24 08          	mov    0x8(%rsp),%eax
   117b8:	89 05 5a 66 00 00    	mov    %eax,0x665a(%rip)        # 17e18 <g_sdk_version>
   117be:	85 c0                	test   %eax,%eax
   117c0:	74 1a                	je     117dc <init_enclave+0x1dc>
   117c2:	83 f8 04             	cmp    $0x4,%eax
   117c5:	0f 8e 55 01 00 00    	jle    11920 <init_enclave+0x320>
   117cb:	48 8d 5c 24 0c       	lea    0xc(%rsp),%rbx
   117d0:	31 f6                	xor    %esi,%esi
   117d2:	48 89 df             	mov    %rbx,%rdi
   117d5:	e8 f6 5d ff ff       	call   75d0 <feature_supported>
   117da:	89 c5                	mov    %eax,%ebp
   117dc:	48 89 df             	mov    %rbx,%rdi
   117df:	be 01 00 00 00       	mov    $0x1,%esi
   117e4:	89 2d 32 66 00 00    	mov    %ebp,0x6632(%rip)        # 17e1c <EDMM_supported>
   117ea:	e8 e1 5d ff ff       	call   75d0 <feature_supported>
   117ef:	44 8b 25 26 66 00 00 	mov    0x6626(%rip),%r12d        # 17e1c <EDMM_supported>
   117f6:	89 05 08 66 00 00    	mov    %eax,0x6608(%rip)        # 17e04 <g_aexnotify_supported>
   117fc:	e8 df 5b ff ff       	call   73e0 <get_heap_min_size>
   11801:	48 89 c5             	mov    %rax,%rbp
   11804:	e8 67 5b ff ff       	call   7370 <get_heap_size>
   11809:	48 89 c3             	mov    %rax,%rbx
   1180c:	e8 3f 5b ff ff       	call   7350 <get_heap_base>
   11811:	44 89 e1             	mov    %r12d,%ecx
   11814:	48 89 ea             	mov    %rbp,%rdx
   11817:	48 89 de             	mov    %rbx,%rsi
   1181a:	48 89 c7             	mov    %rax,%rdi
   1181d:	e8 6e ad ff ff       	call   c590 <heap_init>
   11822:	85 c0                	test   %eax,%eax
   11824:	0f 85 f6 00 00 00    	jne    11920 <init_enclave+0x320>
   1182a:	e8 f1 68 ff ff       	call   8120 <get_xfeature_state>
   1182f:	48 8b 3c 24          	mov    (%rsp),%rdi
   11833:	48 89 c2             	mov    %rax,%rdx
   11836:	48 81 e7 ff e7 ff e1 	and    $0xffffffffe1ffe7ff,%rdi
   1183d:	f6 44 24 13 40       	testb  $0x40,0x13(%rsp)
   11842:	74 08                	je     1184c <init_enclave+0x24c>
   11844:	48 8b bc 24 a4 00 00 	mov    0xa4(%rsp),%rdi
   1184b:	00 
   1184c:	83 3d c5 65 00 00 01 	cmpl   $0x1,0x65c5(%rip)        # 17e18 <g_sdk_version>
   11853:	7f 0f                	jg     11864 <init_enclave+0x264>
   11855:	48 83 bc 24 9c 00 00 	cmpq   $0x0,0x9c(%rsp)
   1185c:	00 00 
   1185e:	0f 84 a4 00 00 00    	je     11908 <init_enclave+0x308>
   11864:	48 8d 74 24 14       	lea    0x14(%rsp),%rsi
   11869:	e8 d2 41 ff ff       	call   5a40 <init_optimized_libs>
   1186e:	85 c0                	test   %eax,%eax
   11870:	0f 85 aa 00 00 00    	jne    11920 <init_enclave+0x320>
   11876:	e8 65 5c ff ff       	call   74e0 <get_rsrv_size>
   1187b:	48 85 c0             	test   %rax,%rax
   1187e:	74 27                	je     118a7 <init_enclave+0x2a7>
   11880:	e8 cb 5c ff ff       	call   7550 <get_rsrv_min_size>
   11885:	48 89 c5             	mov    %rax,%rbp
   11888:	e8 53 5c ff ff       	call   74e0 <get_rsrv_size>
   1188d:	48 89 c3             	mov    %rax,%rbx
   11890:	e8 ab 5b ff ff       	call   7440 <get_rsrv_base>
   11895:	48 89 ea             	mov    %rbp,%rdx
   11898:	48 89 de             	mov    %rbx,%rsi
   1189b:	48 89 c7             	mov    %rax,%rdi
   1189e:	e8 6d f5 ff ff       	call   10e10 <rsrv_mem_init>
   118a3:	85 c0                	test   %eax,%eax
   118a5:	75 79                	jne    11920 <init_enclave+0x320>
   118a7:	be 08 00 00 00       	mov    $0x8,%esi
   118ac:	48 8d 3d 45 65 00 00 	lea    0x6545(%rip),%rdi        # 17df8 <__intel_security_cookie>
   118b3:	e8 a8 44 ff ff       	call   5d60 <sgx_read_rand>
   118b8:	f7 d8                	neg    %eax
   118ba:	19 c0                	sbb    %eax,%eax
   118bc:	48 8b 94 24 b8 00 00 	mov    0xb8(%rsp),%rdx
   118c3:	00 
   118c4:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   118cb:	00 00 
   118cd:	75 5d                	jne    1192c <init_enclave+0x32c>
   118cf:	48 81 c4 c0 00 00 00 	add    $0xc0,%rsp
   118d6:	5b                   	pop    %rbx
   118d7:	5d                   	pop    %rbp
   118d8:	41 5c                	pop    %r12
   118da:	c3                   	ret    
   118db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   118e0:	48 8b 84 24 9c 00 00 	mov    0x9c(%rsp),%rax
   118e7:	00 
   118e8:	b9 b0 00 00 00       	mov    $0xb0,%ecx
   118ed:	48 29 c1             	sub    %rax,%rcx
   118f0:	48 3d af 00 00 00    	cmp    $0xaf,%rax
   118f6:	0f 86 60 fe ff ff    	jbe    1175c <init_enclave+0x15c>
   118fc:	e9 a1 fe ff ff       	jmp    117a2 <init_enclave+0x1a2>
   11901:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   11908:	31 f6                	xor    %esi,%esi
   1190a:	e8 31 41 ff ff       	call   5a40 <init_optimized_libs>
   1190f:	85 c0                	test   %eax,%eax
   11911:	0f 84 5f ff ff ff    	je     11876 <init_enclave+0x276>
   11917:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1191e:	00 00 
   11920:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   11925:	eb 95                	jmp    118bc <init_enclave+0x2bc>
   11927:	e8 0b 0c 00 00       	call   12537 <abort>
   1192c:	e8 6f f0 ff ff       	call   109a0 <__stack_chk_fail>
   11931:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   11938:	00 00 00 00 
   1193c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000011940 <do_init_enclave>:
   11940:	f3 0f 1e fa          	endbr64 
   11944:	41 54                	push   %r12
   11946:	49 89 f4             	mov    %rsi,%r12
   11949:	55                   	push   %rbp
   1194a:	48 89 fd             	mov    %rdi,%rbp
   1194d:	53                   	push   %rbx
   1194e:	e8 a5 07 00 00       	call   120f8 <get_enclave_base>
   11953:	48 89 c3             	mov    %rax,%rbx
   11956:	e8 c8 07 00 00       	call   12123 <lock_enclave>
   1195b:	85 c0                	test   %eax,%eax
   1195d:	74 11                	je     11970 <do_init_enclave+0x30>
   1195f:	bd 01 00 00 00       	mov    $0x1,%ebp
   11964:	89 e8                	mov    %ebp,%eax
   11966:	5b                   	pop    %rbx
   11967:	5d                   	pop    %rbp
   11968:	41 5c                	pop    %r12
   1196a:	c3                   	ret    
   1196b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   11970:	48 89 ee             	mov    %rbp,%rsi
   11973:	48 89 df             	mov    %rbx,%rdi
   11976:	e8 85 fc ff ff       	call   11600 <init_enclave>
   1197b:	85 c0                	test   %eax,%eax
   1197d:	75 e0                	jne    1195f <do_init_enclave+0x1f>
   1197f:	be 01 00 00 00       	mov    $0x1,%esi
   11984:	4c 89 e7             	mov    %r12,%rdi
   11987:	e8 04 52 ff ff       	call   6b90 <do_init_thread>
   1198c:	89 c5                	mov    %eax,%ebp
   1198e:	85 c0                	test   %eax,%eax
   11990:	75 cd                	jne    1195f <do_init_enclave+0x1f>
   11992:	8b 15 84 64 00 00    	mov    0x6484(%rip),%edx        # 17e1c <EDMM_supported>
   11998:	85 d2                	test   %edx,%edx
   1199a:	0f 84 f0 00 00 00    	je     11a90 <do_init_enclave+0x150>
   119a0:	e8 3b 5a ff ff       	call   73e0 <get_heap_min_size>
   119a5:	4c 8d 25 54 18 00 00 	lea    0x1854(%rip),%r12        # 13200 <g_global_data>
   119ac:	31 d2                	xor    %edx,%edx
   119ae:	48 89 c6             	mov    %rax,%rsi
   119b1:	48 89 c1             	mov    %rax,%rcx
   119b4:	49 8b 7c 24 10       	mov    0x10(%r12),%rdi
   119b9:	48 01 df             	add    %rbx,%rdi
   119bc:	e8 0f ef ff ff       	call   108d0 <memset_s>
   119c1:	48 8d 05 88 64 00 00 	lea    0x6488(%rip),%rax        # 17e50 <rsrv_mem_min_size>
   119c8:	49 8b 7c 24 20       	mov    0x20(%r12),%rdi
   119cd:	31 d2                	xor    %edx,%edx
   119cf:	48 8b 30             	mov    (%rax),%rsi
   119d2:	48 01 df             	add    %rbx,%rdi
   119d5:	48 89 f1             	mov    %rsi,%rcx
   119d8:	e8 f3 ee ff ff       	call   108d0 <memset_s>
   119dd:	bf 02 00 00 00       	mov    $0x2,%edi
   119e2:	e8 2e 07 00 00       	call   12115 <set_enclave_state>
   119e7:	8b 05 2f 64 00 00    	mov    0x642f(%rip),%eax        # 17e1c <EDMM_supported>
   119ed:	85 c0                	test   %eax,%eax
   119ef:	0f 84 6f ff ff ff    	je     11964 <do_init_enclave+0x24>
   119f5:	41 8b 84 24 58 01 00 	mov    0x158(%r12),%eax
   119fc:	00 
   119fd:	49 8d ac 24 60 01 00 	lea    0x160(%r12),%rbp
   11a04:	00 
   11a05:	48 c1 e0 05          	shl    $0x5,%rax
   11a09:	48 01 e8             	add    %rbp,%rax
   11a0c:	48 39 c5             	cmp    %rax,%rbp
   11a0f:	72 10                	jb     11a21 <do_init_enclave+0xe1>
   11a11:	eb 15                	jmp    11a28 <do_init_enclave+0xe8>
   11a13:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   11a18:	48 83 c5 20          	add    $0x20,%rbp
   11a1c:	48 39 c5             	cmp    %rax,%rbp
   11a1f:	73 07                	jae    11a28 <do_init_enclave+0xe8>
   11a21:	66 83 7d 00 17       	cmpw   $0x17,0x0(%rbp)
   11a26:	75 f0                	jne    11a18 <do_init_enclave+0xd8>
   11a28:	48 39 e8             	cmp    %rbp,%rax
   11a2b:	0f 84 9f 00 00 00    	je     11ad0 <do_init_enclave+0x190>
   11a31:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
   11a35:	8b 75 04             	mov    0x4(%rbp),%esi
   11a38:	48 01 df             	add    %rbx,%rdi
   11a3b:	48 c1 e6 0c          	shl    $0xc,%rsi
   11a3f:	48 01 fe             	add    %rdi,%rsi
   11a42:	0f 82 17 ff ff ff    	jb     1195f <do_init_enclave+0x1f>
   11a48:	e8 c3 aa ff ff       	call   c510 <sgx_mm_init>
   11a4d:	85 c0                	test   %eax,%eax
   11a4f:	0f 85 0a ff ff ff    	jne    1195f <do_init_enclave+0x1f>
   11a55:	49 8b bc 24 d8 06 00 	mov    0x6d8(%r12),%rdi
   11a5c:	00 
   11a5d:	e8 3e 99 ff ff       	call   b3a0 <emalloc_init_with_reserved_mem>
   11a62:	85 c0                	test   %eax,%eax
   11a64:	0f 85 f5 fe ff ff    	jne    1195f <do_init_enclave+0x1f>
   11a6a:	48 89 ea             	mov    %rbp,%rdx
   11a6d:	49 8d b4 24 60 01 00 	lea    0x160(%r12),%rsi
   11a74:	00 
   11a75:	48 89 df             	mov    %rbx,%rdi
   11a78:	31 ed                	xor    %ebp,%ebp
   11a7a:	e8 41 3d ff ff       	call   57c0 <init_rts_emas>
   11a7f:	85 c0                	test   %eax,%eax
   11a81:	40 0f 95 c5          	setne  %bpl
   11a85:	e9 da fe ff ff       	jmp    11964 <do_init_enclave+0x24>
   11a8a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   11a90:	4c 8d 25 69 17 00 00 	lea    0x1769(%rip),%r12        # 13200 <g_global_data>
   11a97:	31 d2                	xor    %edx,%edx
   11a99:	49 8b 4c 24 18       	mov    0x18(%r12),%rcx
   11a9e:	49 8b 74 24 18       	mov    0x18(%r12),%rsi
   11aa3:	49 8b 7c 24 10       	mov    0x10(%r12),%rdi
   11aa8:	48 01 df             	add    %rbx,%rdi
   11aab:	e8 20 ee ff ff       	call   108d0 <memset_s>
   11ab0:	49 8b 4c 24 28       	mov    0x28(%r12),%rcx
   11ab5:	49 8b 74 24 28       	mov    0x28(%r12),%rsi
   11aba:	31 d2                	xor    %edx,%edx
   11abc:	49 8b 7c 24 20       	mov    0x20(%r12),%rdi
   11ac1:	48 01 df             	add    %rbx,%rdi
   11ac4:	e8 07 ee ff ff       	call   108d0 <memset_s>
   11ac9:	e9 0f ff ff ff       	jmp    119dd <do_init_enclave+0x9d>
   11ace:	66 90                	xchg   %ax,%ax
   11ad0:	31 f6                	xor    %esi,%esi
   11ad2:	31 ff                	xor    %edi,%edi
   11ad4:	e9 6f ff ff ff       	jmp    11a48 <do_init_enclave+0x108>
   11ad9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000011ae0 <sgx_is_enclave_crashed>:
   11ae0:	f3 0f 1e fa          	endbr64 
   11ae4:	48 83 ec 08          	sub    $0x8,%rsp
   11ae8:	e8 17 06 00 00       	call   12104 <get_enclave_state>
   11aed:	83 f8 03             	cmp    $0x3,%eax
   11af0:	0f 94 c0             	sete   %al
   11af3:	48 83 c4 08          	add    $0x8,%rsp
   11af7:	0f b6 c0             	movzbl %al,%eax
   11afa:	c3                   	ret    
   11afb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000011b00 <enter_enclave>:
   11b00:	f3 0f 1e fa          	endbr64 
   11b04:	41 55                	push   %r13
   11b06:	49 89 d5             	mov    %rdx,%r13
   11b09:	41 54                	push   %r12
   11b0b:	49 89 f4             	mov    %rsi,%r12
   11b0e:	55                   	push   %rbp
   11b0f:	89 cd                	mov    %ecx,%ebp
   11b11:	53                   	push   %rbx
   11b12:	89 fb                	mov    %edi,%ebx
   11b14:	48 83 ec 18          	sub    $0x18,%rsp
   11b18:	e8 c3 ff ff ff       	call   11ae0 <sgx_is_enclave_crashed>
   11b1d:	85 c0                	test   %eax,%eax
   11b1f:	75 67                	jne    11b88 <enter_enclave+0x88>
   11b21:	83 fb ff             	cmp    $0xffffffff,%ebx
   11b24:	75 2a                	jne    11b50 <enter_enclave+0x50>
   11b26:	85 ed                	test   %ebp,%ebp
   11b28:	75 34                	jne    11b5e <enter_enclave+0x5e>
   11b2a:	4c 89 ee             	mov    %r13,%rsi
   11b2d:	4c 89 e7             	mov    %r12,%rdi
   11b30:	e8 0b fe ff ff       	call   11940 <do_init_enclave>
   11b35:	89 c3                	mov    %eax,%ebx
   11b37:	89 d8                	mov    %ebx,%eax
   11b39:	83 fb 01             	cmp    $0x1,%ebx
   11b3c:	74 29                	je     11b67 <enter_enclave+0x67>
   11b3e:	48 83 c4 18          	add    $0x18,%rsp
   11b42:	5b                   	pop    %rbx
   11b43:	5d                   	pop    %rbp
   11b44:	41 5c                	pop    %r12
   11b46:	41 5d                	pop    %r13
   11b48:	c3                   	ret    
   11b49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   11b50:	e8 af 05 00 00       	call   12104 <get_enclave_state>
   11b55:	83 f8 02             	cmp    $0x2,%eax
   11b58:	75 0d                	jne    11b67 <enter_enclave+0x67>
   11b5a:	85 ed                	test   %ebp,%ebp
   11b5c:	74 42                	je     11ba0 <enter_enclave+0xa0>
   11b5e:	83 fd 01             	cmp    $0x1,%ebp
   11b61:	0f 84 e9 00 00 00    	je     11c50 <enter_enclave+0x150>
   11b67:	bf 03 00 00 00       	mov    $0x3,%edi
   11b6c:	e8 a4 05 00 00       	call   12115 <set_enclave_state>
   11b71:	b8 01 00 00 00       	mov    $0x1,%eax
   11b76:	48 83 c4 18          	add    $0x18,%rsp
   11b7a:	5b                   	pop    %rbx
   11b7b:	5d                   	pop    %rbp
   11b7c:	41 5c                	pop    %r12
   11b7e:	41 5d                	pop    %r13
   11b80:	c3                   	ret    
   11b81:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   11b88:	48 83 c4 18          	add    $0x18,%rsp
   11b8c:	b8 06 10 00 00       	mov    $0x1006,%eax
   11b91:	5b                   	pop    %rbx
   11b92:	5d                   	pop    %rbp
   11b93:	41 5c                	pop    %r12
   11b95:	41 5d                	pop    %r13
   11b97:	c3                   	ret    
   11b98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   11b9f:	00 
   11ba0:	85 db                	test   %ebx,%ebx
   11ba2:	79 2c                	jns    11bd0 <enter_enclave+0xd0>
   11ba4:	83 fb fa             	cmp    $0xfffffffa,%ebx
   11ba7:	74 27                	je     11bd0 <enter_enclave+0xd0>
   11ba9:	83 fb fe             	cmp    $0xfffffffe,%ebx
   11bac:	0f 84 ce 00 00 00    	je     11c80 <enter_enclave+0x180>
   11bb2:	83 fb fc             	cmp    $0xfffffffc,%ebx
   11bb5:	0f 84 d5 00 00 00    	je     11c90 <enter_enclave+0x190>
   11bbb:	83 fb fb             	cmp    $0xfffffffb,%ebx
   11bbe:	75 a7                	jne    11b67 <enter_enclave+0x67>
   11bc0:	4c 89 ef             	mov    %r13,%rdi
   11bc3:	e8 38 55 ff ff       	call   7100 <do_uninit_enclave>
   11bc8:	89 c3                	mov    %eax,%ebx
   11bca:	e9 68 ff ff ff       	jmp    11b37 <enter_enclave+0x37>
   11bcf:	90                   	nop
   11bd0:	e8 6e 05 00 00       	call   12143 <get_thread_data>
   11bd5:	48 85 c0             	test   %rax,%rax
   11bd8:	0f 84 c2 00 00 00    	je     11ca0 <enter_enclave+0x1a0>
   11bde:	48 8b 48 08          	mov    0x8(%rax),%rcx
   11be2:	48 39 48 10          	cmp    %rcx,0x10(%rax)
   11be6:	75 40                	jne    11c28 <enter_enclave+0x128>
   11be8:	48 8d 05 11 16 00 00 	lea    0x1611(%rip),%rax        # 13200 <g_global_data>
   11bef:	48 8b 50 38          	mov    0x38(%rax),%rdx
   11bf3:	48 85 d2             	test   %rdx,%rdx
   11bf6:	74 30                	je     11c28 <enter_enclave+0x128>
   11bf8:	48 8b 68 50          	mov    0x50(%rax),%rbp
   11bfc:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   11c01:	be 08 00 00 00       	mov    $0x8,%esi
   11c06:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
   11c0d:	00 00 
   11c0f:	4c 01 ed             	add    %r13,%rbp
   11c12:	e8 49 41 ff ff       	call   5d60 <sgx_read_rand>
   11c17:	85 c0                	test   %eax,%eax
   11c19:	0f 85 8d 00 00 00    	jne    11cac <enter_enclave+0x1ac>
   11c1f:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   11c24:	48 89 45 28          	mov    %rax,0x28(%rbp)
   11c28:	89 df                	mov    %ebx,%edi
   11c2a:	4c 89 ea             	mov    %r13,%rdx
   11c2d:	4c 89 e6             	mov    %r12,%rsi
   11c30:	e8 bb 51 ff ff       	call   6df0 <do_ecall>
   11c35:	89 c3                	mov    %eax,%ebx
   11c37:	89 d8                	mov    %ebx,%eax
   11c39:	83 fb 01             	cmp    $0x1,%ebx
   11c3c:	0f 85 fc fe ff ff    	jne    11b3e <enter_enclave+0x3e>
   11c42:	e9 20 ff ff ff       	jmp    11b67 <enter_enclave+0x67>
   11c47:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   11c4e:	00 00 
   11c50:	4c 89 ef             	mov    %r13,%rdi
   11c53:	e8 18 61 ff ff       	call   7d70 <trts_handle_exception>
   11c58:	4c 89 ef             	mov    %r13,%rdi
   11c5b:	89 c3                	mov    %eax,%ebx
   11c5d:	e8 2e 42 ff ff       	call   5e90 <check_static_stack_canary>
   11c62:	89 c2                	mov    %eax,%edx
   11c64:	b8 09 10 00 00       	mov    $0x1009,%eax
   11c69:	85 d2                	test   %edx,%edx
   11c6b:	0f 85 05 ff ff ff    	jne    11b76 <enter_enclave+0x76>
   11c71:	e9 c1 fe ff ff       	jmp    11b37 <enter_enclave+0x37>
   11c76:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11c7d:	00 00 00 
   11c80:	4c 89 e7             	mov    %r12,%rdi
   11c83:	e8 c8 55 ff ff       	call   7250 <do_oret>
   11c88:	89 c3                	mov    %eax,%ebx
   11c8a:	e9 a8 fe ff ff       	jmp    11b37 <enter_enclave+0x37>
   11c8f:	90                   	nop
   11c90:	4c 89 e7             	mov    %r12,%rdi
   11c93:	e8 88 53 ff ff       	call   7020 <do_ecall_add_thread>
   11c98:	89 c3                	mov    %eax,%ebx
   11c9a:	e9 98 fe ff ff       	jmp    11b37 <enter_enclave+0x37>
   11c9f:	90                   	nop
   11ca0:	48 8d 05 59 15 00 00 	lea    0x1559(%rip),%rax        # 13200 <g_global_data>
   11ca7:	e9 4c ff ff ff       	jmp    11bf8 <enter_enclave+0xf8>
   11cac:	e8 86 08 00 00       	call   12537 <abort>

0000000000011cb1 <restore_xregs>:
   11cb1:	f3 0f 1e fa          	endbr64 
   11cb5:	48 89 f9             	mov    %rdi,%rcx
   11cb8:	48 8d 05 85 84 00 00 	lea    0x8485(%rip),%rax        # 1a144 <g_xsave_enabled>
   11cbf:	8b 00                	mov    (%rax),%eax
   11cc1:	83 f8 00             	cmp    $0x0,%eax
   11cc4:	74 16                	je     11cdc <restore_xregs+0x2b>
   11cc6:	48 31 c0             	xor    %rax,%rax
   11cc9:	48 31 d2             	xor    %rdx,%rdx
   11ccc:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   11cd1:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   11cd6:	48 0f ae 29          	xrstor64 (%rcx)
   11cda:	eb 04                	jmp    11ce0 <restore_xregs+0x2f>
   11cdc:	48 0f ae 09          	fxrstor64 (%rcx)
   11ce0:	c3                   	ret    

0000000000011ce1 <save_xregs>:
   11ce1:	f3 0f 1e fa          	endbr64 
   11ce5:	48 89 f9             	mov    %rdi,%rcx
   11ce8:	48 8d 05 55 84 00 00 	lea    0x8455(%rip),%rax        # 1a144 <g_xsave_enabled>
   11cef:	9b                   	fwait
   11cf0:	8b 00                	mov    (%rax),%eax
   11cf2:	83 f8 00             	cmp    $0x0,%eax
   11cf5:	74 16                	je     11d0d <save_xregs+0x2c>
   11cf7:	48 31 c0             	xor    %rax,%rax
   11cfa:	48 31 d2             	xor    %rdx,%rdx
   11cfd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   11d02:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   11d07:	48 0f c7 21          	xsavec64 (%rcx)
   11d0b:	eb 04                	jmp    11d11 <save_xregs+0x30>
   11d0d:	48 0f ae 01          	fxsave64 (%rcx)
   11d11:	c3                   	ret    

0000000000011d12 <__x86_return_thunk>:
   11d12:	c3                   	ret    

0000000000011d13 <__x86_indirect_thunk_rax>:
   11d13:	ff e0                	jmp    *%rax

0000000000011d15 <__x86_indirect_thunk_rbx>:
   11d15:	ff e3                	jmp    *%rbx

0000000000011d17 <__x86_indirect_thunk_rcx>:
   11d17:	ff e1                	jmp    *%rcx

0000000000011d19 <__x86_indirect_thunk_rdx>:
   11d19:	ff e2                	jmp    *%rdx

0000000000011d1b <__x86_indirect_thunk_rbp>:
   11d1b:	ff e5                	jmp    *%rbp

0000000000011d1d <__x86_indirect_thunk_rsi>:
   11d1d:	ff e6                	jmp    *%rsi

0000000000011d1f <__x86_indirect_thunk_rdi>:
   11d1f:	ff e7                	jmp    *%rdi

0000000000011d21 <__x86_indirect_thunk_r8>:
   11d21:	41 ff e0             	jmp    *%r8

0000000000011d24 <__x86_indirect_thunk_r9>:
   11d24:	41 ff e1             	jmp    *%r9

0000000000011d27 <__x86_indirect_thunk_r10>:
   11d27:	41 ff e2             	jmp    *%r10

0000000000011d2a <__x86_indirect_thunk_r11>:
   11d2a:	41 ff e3             	jmp    *%r11

0000000000011d2d <__x86_indirect_thunk_r12>:
   11d2d:	41 ff e4             	jmp    *%r12

0000000000011d30 <__x86_indirect_thunk_r13>:
   11d30:	41 ff e5             	jmp    *%r13

0000000000011d33 <__x86_indirect_thunk_r14>:
   11d33:	41 ff e6             	jmp    *%r14

0000000000011d36 <__x86_indirect_thunk_r15>:
   11d36:	41 ff e7             	jmp    *%r15
   11d39:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11d40:	00 00 00 
   11d43:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11d4a:	00 00 00 
   11d4d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11d54:	00 00 00 
   11d57:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11d5e:	00 00 00 
   11d61:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11d68:	00 00 00 
   11d6b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11d72:	00 00 00 
   11d75:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11d7c:	00 00 00 
   11d7f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11d86:	00 00 00 
   11d89:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11d90:	00 00 00 
   11d93:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11d9a:	00 00 00 
   11d9d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11da4:	00 00 00 
   11da7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11dae:	00 00 00 
   11db1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11db8:	00 00 00 
   11dbb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11dc2:	00 00 00 
   11dc5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11dcc:	00 00 00 
   11dcf:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11dd6:	00 00 00 
   11dd9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11de0:	00 00 00 
   11de3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11dea:	00 00 00 
   11ded:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11df4:	00 00 00 
   11df7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   11dfe:	00 00 

0000000000011e00 <constant_time_apply_sgxstep_mitigation_and_continue_execution>:
   11e00:	f3 0f 1e fa          	endbr64 
   11e04:	48 8b 67 20          	mov    0x20(%rdi),%rsp
   11e08:	48 8b 87 88 00 00 00 	mov    0x88(%rdi),%rax
   11e0f:	49 89 c2             	mov    %rax,%r10
   11e12:	80 38 c3             	cmpb   $0xc3,(%rax)
   11e15:	48 0f 44 04 24       	cmove  (%rsp),%rax
   11e1a:	48 89 e5             	mov    %rsp,%rbp
   11e1d:	48 8d 5c 24 08       	lea    0x8(%rsp),%rbx
   11e22:	48 0f 44 eb          	cmove  %rbx,%rbp
   11e26:	48 8d 1d c3 02 00 00 	lea    0x2c3(%rip),%rbx        # 120f0 <__ct_mitigation_end>
   11e2d:	48 29 c3             	sub    %rax,%rbx
   11e30:	48 81 fb e6 00 00 00 	cmp    $0xe6,%rbx
   11e37:	48 0f 42 e5          	cmovb  %rbp,%rsp
   11e3b:	48 89 67 20          	mov    %rsp,0x20(%rdi)
   11e3f:	4c 0f 42 94 24 78 ff 	cmovb  -0x88(%rsp),%r10
   11e46:	ff ff 
   11e48:	4c 89 94 24 78 ff ff 	mov    %r10,-0x88(%rsp)
   11e4f:	ff 
   11e50:	48 8b 87 80 00 00 00 	mov    0x80(%rdi),%rax
   11e57:	48 89 84 24 38 ff ff 	mov    %rax,-0xc8(%rsp)
   11e5e:	ff 
   11e5f:	48 8b 44 24 f8       	mov    -0x8(%rsp),%rax
   11e64:	48 0f 42 84 24 30 ff 	cmovb  -0xd0(%rsp),%rax
   11e6b:	ff ff 
   11e6d:	48 89 84 24 30 ff ff 	mov    %rax,-0xd0(%rsp)
   11e74:	ff 
   11e75:	48 89 b4 24 28 ff ff 	mov    %rsi,-0xd8(%rsp)
   11e7c:	ff 
   11e7d:	48 0f 42 94 24 20 ff 	cmovb  -0xe0(%rsp),%rdx
   11e84:	ff ff 
   11e86:	48 0f 42 8c 24 18 ff 	cmovb  -0xe8(%rsp),%rcx
   11e8d:	ff ff 
   11e8f:	4c 0f 42 84 24 10 ff 	cmovb  -0xf0(%rsp),%r8
   11e96:	ff ff 
   11e98:	4c 0f 42 8c 24 08 ff 	cmovb  -0xf8(%rsp),%r9
   11e9f:	ff ff 
   11ea1:	48 89 94 24 20 ff ff 	mov    %rdx,-0xe0(%rsp)
   11ea8:	ff 
   11ea9:	48 89 8c 24 18 ff ff 	mov    %rcx,-0xe8(%rsp)
   11eb0:	ff 
   11eb1:	4c 89 84 24 10 ff ff 	mov    %r8,-0xf0(%rsp)
   11eb8:	ff 
   11eb9:	4c 89 8c 24 08 ff ff 	mov    %r9,-0xf8(%rsp)
   11ec0:	ff 
   11ec1:	4c 8b 47 40          	mov    0x40(%rdi),%r8
   11ec5:	4c 8b 4f 48          	mov    0x48(%rdi),%r9
   11ec9:	4c 8b 57 50          	mov    0x50(%rdi),%r10
   11ecd:	4c 8b 5f 58          	mov    0x58(%rdi),%r11
   11ed1:	4c 8b 67 60          	mov    0x60(%rdi),%r12
   11ed5:	4c 8b 6f 68          	mov    0x68(%rdi),%r13
   11ed9:	4c 8b 77 70          	mov    0x70(%rdi),%r14
   11edd:	4c 8b 7f 78          	mov    0x78(%rdi),%r15
   11ee1:	48 8b 07             	mov    (%rdi),%rax
   11ee4:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
   11ee8:	48 8b 57 10          	mov    0x10(%rdi),%rdx
   11eec:	48 8b 5f 18          	mov    0x18(%rdi),%rbx
   11ef0:	48 8b 6f 28          	mov    0x28(%rdi),%rbp
   11ef4:	48 8b 77 30          	mov    0x30(%rdi),%rsi
   11ef8:	48 8b 7f 38          	mov    0x38(%rdi),%rdi
   11efc:	48 0f 42 84 24 70 ff 	cmovb  -0x90(%rsp),%rax
   11f03:	ff ff 
   11f05:	48 0f 42 8c 24 68 ff 	cmovb  -0x98(%rsp),%rcx
   11f0c:	ff ff 
   11f0e:	48 0f 42 94 24 60 ff 	cmovb  -0xa0(%rsp),%rdx
   11f15:	ff ff 
   11f17:	48 0f 42 9c 24 58 ff 	cmovb  -0xa8(%rsp),%rbx
   11f1e:	ff ff 
   11f20:	48 0f 42 ac 24 50 ff 	cmovb  -0xb0(%rsp),%rbp
   11f27:	ff ff 
   11f29:	48 0f 42 b4 24 48 ff 	cmovb  -0xb8(%rsp),%rsi
   11f30:	ff ff 
   11f32:	48 0f 42 bc 24 40 ff 	cmovb  -0xc0(%rsp),%rdi
   11f39:	ff ff 
   11f3b:	48 89 84 24 70 ff ff 	mov    %rax,-0x90(%rsp)
   11f42:	ff 
   11f43:	48 89 8c 24 68 ff ff 	mov    %rcx,-0x98(%rsp)
   11f4a:	ff 
   11f4b:	48 89 94 24 60 ff ff 	mov    %rdx,-0xa0(%rsp)
   11f52:	ff 
   11f53:	48 89 9c 24 58 ff ff 	mov    %rbx,-0xa8(%rsp)
   11f5a:	ff 
   11f5b:	48 89 ac 24 50 ff ff 	mov    %rbp,-0xb0(%rsp)
   11f62:	ff 
   11f63:	48 89 b4 24 48 ff ff 	mov    %rsi,-0xb8(%rsp)
   11f6a:	ff 
   11f6b:	48 89 bc 24 40 ff ff 	mov    %rdi,-0xc0(%rsp)
   11f72:	ff 
   11f73:	48 8b ac 24 20 ff ff 	mov    -0xe0(%rsp),%rbp
   11f7a:	ff 
   11f7b:	48 8b b4 24 18 ff ff 	mov    -0xe8(%rsp),%rsi
   11f82:	ff 
   11f83:	48 8b 94 24 10 ff ff 	mov    -0xf0(%rsp),%rdx
   11f8a:	ff 
   11f8b:	48 8b bc 24 08 ff ff 	mov    -0xf8(%rsp),%rdi
   11f92:	ff 
   11f93:	40 d0 ed             	shr    %bpl
   11f96:	48 89 eb             	mov    %rbp,%rbx
   11f99:	73 07                	jae    11fa2 <.restore_flags>
   11f9b:	48 81 eb 00 10 00 00 	sub    $0x1000,%rbx

0000000000011fa2 <.restore_flags>:
   11fa2:	48 8d 84 24 38 ff ff 	lea    -0xc8(%rsp),%rax
   11fa9:	ff 
   11faa:	48 94                	xchg   %rax,%rsp
   11fac:	9d                   	popf   
   11fad:	48 94                	xchg   %rax,%rsp
   11faf:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   11fb6:	00 00 00 00 
   11fba:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   11fc1:	00 00 00 00 
   11fc5:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   11fcc:	00 00 00 00 
   11fd0:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   11fd7:	00 00 00 00 
   11fdb:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   11fe2:	00 00 00 00 
   11fe6:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   11fed:	00 00 00 00 
   11ff1:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   11ff8:	00 00 00 00 
   11ffc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000012000 <.ct_enable_aexnotify>:
   12000:	48 8b 84 24 28 ff ff 	mov    -0xd8(%rsp),%rax
   12007:	ff 
   12008:	c6 00 01             	movb   $0x1,(%rax)

000000000001200b <__ct_mitigation_begin>:
   1200b:	0f ae e8             	lfence 

000000000001200e <.ct_check_write>:
   1200e:	b9 3f 00 00 00       	mov    $0x3f,%ecx
   12013:	c4 e2 f1 f7 ce       	shlx   %rcx,%rsi,%rcx
   12018:	e3 08                	jrcxz  12022 <.ct_clear_low_bits_of_rdx>
   1201a:	48 8d 76 ff          	lea    -0x1(%rsi),%rsi
   1201e:	8a 02                	mov    (%rdx),%al
   12020:	88 02                	mov    %al,(%rdx)

0000000000012022 <.ct_clear_low_bits_of_rdx>:
   12022:	b9 0c 00 00 00       	mov    $0xc,%ecx
   12027:	c4 e2 f3 f7 d2       	shrx   %rcx,%rdx,%rdx
   1202c:	c4 e2 f1 f7 d2       	shlx   %rcx,%rdx,%rdx

0000000000012031 <.ct_check_execute>:
   12031:	ff d7                	call   *%rdi
   12033:	b9 00 10 00 00       	mov    $0x1000,%ecx
   12038:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1203f:	00 

0000000000012040 <.ct_warm_caches_and_tlbs>:
   12040:	67 8d 49 c0          	lea    -0x40(%ecx),%ecx
   12044:	8b 04 0e             	mov    (%rsi,%rcx,1),%eax
   12047:	8b 44 0d 00          	mov    0x0(%rbp,%rcx,1),%eax
   1204b:	8b 04 0b             	mov    (%rbx,%rcx,1),%eax
   1204e:	8b 04 0a             	mov    (%rdx,%rcx,1),%eax
   12051:	e3 02                	jrcxz  12055 <.ct_restore_state>
   12053:	eb eb                	jmp    12040 <.ct_warm_caches_and_tlbs>

0000000000012055 <.ct_restore_state>:
   12055:	40 0f b6 ce          	movzbl %sil,%ecx
   12059:	48 8b bc 24 30 ff ff 	mov    -0xd0(%rsp),%rdi
   12060:	ff 
   12061:	48 89 7c 24 f8       	mov    %rdi,-0x8(%rsp)
   12066:	48 8b bc 24 40 ff ff 	mov    -0xc0(%rsp),%rdi
   1206d:	ff 
   1206e:	48 8b b4 24 48 ff ff 	mov    -0xb8(%rsp),%rsi
   12075:	ff 
   12076:	48 8b ac 24 50 ff ff 	mov    -0xb0(%rsp),%rbp
   1207d:	ff 
   1207e:	48 8b 9c 24 58 ff ff 	mov    -0xa8(%rsp),%rbx
   12085:	ff 
   12086:	48 8b 94 24 60 ff ff 	mov    -0xa0(%rsp),%rdx
   1208d:	ff 
   1208e:	48 8b 84 24 70 ff ff 	mov    -0x90(%rsp),%rax
   12095:	ff 
   12096:	e3 50                	jrcxz  120e8 <.ct_restore_rcx>
   12098:	48 8d 24 24          	lea    (%rsp),%rsp
   1209c:	48 8d 24 24          	lea    (%rsp),%rsp
   120a0:	48 8d 24 24          	lea    (%rsp),%rsp
   120a4:	48 8d 24 24          	lea    (%rsp),%rsp
   120a8:	48 8d 24 24          	lea    (%rsp),%rsp
   120ac:	48 8d 24 24          	lea    (%rsp),%rsp
   120b0:	48 8d 24 24          	lea    (%rsp),%rsp
   120b4:	48 8d 24 24          	lea    (%rsp),%rsp
   120b8:	48 8d 24 24          	lea    (%rsp),%rsp
   120bc:	48 8d 24 24          	lea    (%rsp),%rsp
   120c0:	48 8d 24 24          	lea    (%rsp),%rsp
   120c4:	48 8d 24 24          	lea    (%rsp),%rsp
   120c8:	48 8d 24 24          	lea    (%rsp),%rsp
   120cc:	48 8d 24 24          	lea    (%rsp),%rsp
   120d0:	48 8d 24 24          	lea    (%rsp),%rsp
   120d4:	48 8d 24 24          	lea    (%rsp),%rsp
   120d8:	48 8d 24 24          	lea    (%rsp),%rsp
   120dc:	48 8d 24 24          	lea    (%rsp),%rsp
   120e0:	48 8d 24 24          	lea    (%rsp),%rsp
   120e4:	48 8d 24 24          	lea    (%rsp),%rsp

00000000000120e8 <.ct_restore_rcx>:
   120e8:	48 8b 8c 24 68 ff ff 	mov    -0x98(%rsp),%rcx
   120ef:	ff 

00000000000120f0 <__ct_mitigation_end>:
   120f0:	ff a4 24 78 ff ff ff 	jmp    *-0x88(%rsp)

00000000000120f7 <__ct_mitigation_ret>:
   120f7:	c3                   	ret    

00000000000120f8 <get_enclave_base>:
   120f8:	f3 0f 1e fa          	endbr64 
   120fc:	48 8d 05 fd de fe ff 	lea    -0x12103(%rip),%rax        # 0 <__ImageBase>
   12103:	c3                   	ret    

0000000000012104 <get_enclave_state>:
   12104:	f3 0f 1e fa          	endbr64 
   12108:	48 8d 0d 31 80 00 00 	lea    0x8031(%rip),%rcx        # 1a140 <g_enclave_state>
   1210f:	48 31 c0             	xor    %rax,%rax
   12112:	8b 01                	mov    (%rcx),%eax
   12114:	c3                   	ret    

0000000000012115 <set_enclave_state>:
   12115:	f3 0f 1e fa          	endbr64 
   12119:	48 8d 05 20 80 00 00 	lea    0x8020(%rip),%rax        # 1a140 <g_enclave_state>
   12120:	89 38                	mov    %edi,(%rax)
   12122:	c3                   	ret    

0000000000012123 <lock_enclave>:
   12123:	f3 0f 1e fa          	endbr64 
   12127:	48 8d 15 12 80 00 00 	lea    0x8012(%rip),%rdx        # 1a140 <g_enclave_state>
   1212e:	48 31 c0             	xor    %rax,%rax
   12131:	b8 00 00 00 00       	mov    $0x0,%eax
   12136:	48 31 c9             	xor    %rcx,%rcx
   12139:	b9 01 00 00 00       	mov    $0x1,%ecx
   1213e:	f0 0f b1 0a          	lock cmpxchg %ecx,(%rdx)
   12142:	c3                   	ret    

0000000000012143 <get_thread_data>:
   12143:	f3 0f 1e fa          	endbr64 
   12147:	65 48 8b 04 25 00 00 	mov    %gs:0x0,%rax
   1214e:	00 00 
   12150:	c3                   	ret    

0000000000012151 <get_stack_guard>:
   12151:	f3 0f 1e fa          	endbr64 
   12155:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
   1215c:	00 00 
   1215e:	c3                   	ret    

000000000001215f <enclave_entry>:
   1215f:	f3 0f 1e fa          	endbr64 
   12163:	48 31 d2             	xor    %rdx,%rdx
   12166:	48 01 d2             	add    %rdx,%rdx
   12169:	fc                   	cld    
   1216a:	4d 31 c0             	xor    %r8,%r8
   1216d:	4d 31 c9             	xor    %r9,%r9
   12170:	4d 31 d2             	xor    %r10,%r10
   12173:	4d 31 db             	xor    %r11,%r11
   12176:	4d 31 e4             	xor    %r12,%r12
   12179:	4d 31 ed             	xor    %r13,%r13
   1217c:	4d 31 f6             	xor    %r14,%r14
   1217f:	4d 31 ff             	xor    %r15,%r15
   12182:	48 83 f8 00          	cmp    $0x0,%rax
   12186:	0f 85 07 01 00 00    	jne    12293 <enclave_entry+0x134>
   1218c:	65 48 8b 04 25 08 00 	mov    %gs:0x8,%rax
   12193:	00 00 
   12195:	48 83 f8 00          	cmp    $0x0,%rax
   12199:	75 0f                	jne    121aa <enclave_entry+0x4b>
   1219b:	48 89 d8             	mov    %rbx,%rax
   1219e:	48 2d 00 00 01 00    	sub    $0x10000,%rax
   121a4:	48 2d 00 04 00 00    	sub    $0x400,%rax
   121aa:	48 94                	xchg   %rax,%rsp
   121ac:	51                   	push   %rcx
   121ad:	55                   	push   %rbp
   121ae:	48 89 e5             	mov    %rsp,%rbp
   121b1:	9c                   	pushf  
   121b2:	48 f7 14 24          	notq   (%rsp)
   121b6:	48 81 0c 24 00 00 04 	orq    $0x40000,(%rsp)
   121bd:	00 
   121be:	48 f7 14 24          	notq   (%rsp)
   121c2:	9d                   	popf   
   121c3:	48 83 ec 30          	sub    $0x30,%rsp
   121c7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   121cb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   121cf:	48 89 5d e0          	mov    %rbx,-0x20(%rbp)
   121d3:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
   121d7:	48 89 7d d0          	mov    %rdi,-0x30(%rbp)
   121db:	48 83 ec 20          	sub    $0x20,%rsp
   121df:	48 8d 3d 1a 17 00 00 	lea    0x171a(%rip),%rdi        # 13900 <SYNTHETIC_STATE>
   121e6:	e8 c6 fa ff ff       	call   11cb1 <restore_xregs>
   121eb:	0f ae e8             	lfence 
   121ee:	48 83 c4 20          	add    $0x20,%rsp
   121f2:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
   121f6:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
   121fa:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   121fe:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   12202:	e8 f9 f8 ff ff       	call   11b00 <enter_enclave>
   12207:	48 89 c3             	mov    %rax,%rbx
   1220a:	48 8d 3d ef 16 00 00 	lea    0x16ef(%rip),%rdi        # 13900 <SYNTHETIC_STATE>
   12211:	e8 9b fa ff ff       	call   11cb1 <restore_xregs>
   12216:	0f ae e8             	lfence 
   12219:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1221d:	48 83 f8 00          	cmp    $0x0,%rax
   12221:	75 2c                	jne    1224f <enclave_entry+0xf0>
   12223:	65 48 8b 04 25 00 00 	mov    %gs:0x0,%rax
   1222a:	00 00 
   1222c:	48 83 f8 00          	cmp    $0x0,%rax
   12230:	74 1d                	je     1224f <enclave_entry+0xf0>
   12232:	48 8b 50 20          	mov    0x20(%rax),%rdx
   12236:	8a 8a a7 00 00 00    	mov    0xa7(%rdx),%cl
   1223c:	80 f9 00             	cmp    $0x0,%cl
   1223f:	74 0e                	je     1224f <enclave_entry+0xf0>
   12241:	c6 82 a7 00 00 00 00 	movb   $0x0,0xa7(%rdx)
   12248:	c7 40 50 01 00 00 00 	movl   $0x1,0x50(%rax)
   1224f:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
   12256:	48 89 de             	mov    %rbx,%rsi
   12259:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1225d:	48 89 ec             	mov    %rbp,%rsp
   12260:	5d                   	pop    %rbp
   12261:	5b                   	pop    %rbx
   12262:	48 89 d4             	mov    %rdx,%rsp
   12265:	48 31 c9             	xor    %rcx,%rcx
   12268:	48 31 d2             	xor    %rdx,%rdx
   1226b:	4d 31 c0             	xor    %r8,%r8
   1226e:	4d 31 c9             	xor    %r9,%r9
   12271:	4d 31 d2             	xor    %r10,%r10
   12274:	4d 31 db             	xor    %r11,%r11
   12277:	4d 31 e4             	xor    %r12,%r12
   1227a:	4d 31 ed             	xor    %r13,%r13
   1227d:	4d 31 f6             	xor    %r14,%r14
   12280:	4d 31 ff             	xor    %r15,%r15
   12283:	48 01 d2             	add    %rdx,%rdx
   12286:	fc                   	cld    
   12287:	48 c7 c0 04 00 00 00 	mov    $0x4,%rax
   1228e:	0f 01 d7             	enclu  
   12291:	0f 0b                	ud2    
   12293:	48 89 c2             	mov    %rax,%rdx
   12296:	48 89 d8             	mov    %rbx,%rax
   12299:	48 2d 00 00 01 00    	sub    $0x10000,%rax
   1229f:	e9 06 ff ff ff       	jmp    121aa <enclave_entry+0x4b>
   122a4:	0f 0b                	ud2    

00000000000122a6 <do_ocall>:
   122a6:	f3 0f 1e fa          	endbr64 
   122aa:	55                   	push   %rbp
   122ab:	48 89 e5             	mov    %rsp,%rbp
   122ae:	48 89 7d 10          	mov    %rdi,0x10(%rbp)
   122b2:	48 89 75 18          	mov    %rsi,0x18(%rbp)
   122b6:	65 48 8b 04 25 38 00 	mov    %gs:0x38,%rax
   122bd:	00 00 
   122bf:	48 29 c4             	sub    %rax,%rsp
   122c2:	48 c7 c0 3f 00 00 00 	mov    $0x3f,%rax
   122c9:	48 f7 d0             	not    %rax
   122cc:	48 21 c4             	and    %rax,%rsp
   122cf:	48 89 e1             	mov    %rsp,%rcx
   122d2:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
   122d9:	48 89 8c 24 98 00 00 	mov    %rcx,0x98(%rsp)
   122e0:	00 
   122e1:	48 89 5c 24 70       	mov    %rbx,0x70(%rsp)
   122e6:	48 89 74 24 68       	mov    %rsi,0x68(%rsp)
   122eb:	48 89 7c 24 60       	mov    %rdi,0x60(%rsp)
   122f0:	48 89 6c 24 58       	mov    %rbp,0x58(%rsp)
   122f5:	4c 89 64 24 50       	mov    %r12,0x50(%rsp)
   122fa:	4c 89 6c 24 48       	mov    %r13,0x48(%rsp)
   122ff:	4c 89 74 24 40       	mov    %r14,0x40(%rsp)
   12304:	4c 89 7c 24 38       	mov    %r15,0x38(%rsp)
   12309:	48 8b bc 24 98 00 00 	mov    0x98(%rsp),%rdi
   12310:	00 
   12311:	65 48 8b 04 25 38 00 	mov    %gs:0x38,%rax
   12318:	00 00 
   1231a:	48 89 c1             	mov    %rax,%rcx
   1231d:	48 c1 e9 02          	shr    $0x2,%rcx
   12321:	48 31 c0             	xor    %rax,%rax
   12324:	fc                   	cld    
   12325:	f3 ab                	rep stos %eax,%es:(%rdi)
   12327:	48 8b bc 24 98 00 00 	mov    0x98(%rsp),%rdi
   1232e:	00 
   1232f:	48 89 3c 24          	mov    %rdi,(%rsp)
   12333:	e8 a9 f9 ff ff       	call   11ce1 <save_xregs>
   12338:	48 8d 3d c1 15 00 00 	lea    0x15c1(%rip),%rdi        # 13900 <SYNTHETIC_STATE>
   1233f:	48 89 3c 24          	mov    %rdi,(%rsp)
   12343:	e8 69 f9 ff ff       	call   11cb1 <restore_xregs>
   12348:	0f ae e8             	lfence 
   1234b:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
   12350:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   12355:	48 c7 c0 44 49 43 4f 	mov    $0x4f434944,%rax
   1235c:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   12361:	48 89 7c 24 28       	mov    %rdi,0x28(%rsp)
   12366:	65 48 8b 04 25 00 00 	mov    %gs:0x0,%rax
   1236d:	00 00 
   1236f:	48 89 c3             	mov    %rax,%rbx
   12372:	48 89 e7             	mov    %rsp,%rdi
   12375:	e8 96 4e ff ff       	call   7210 <update_ocall_lastsp>
   1237a:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
   1237f:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   12384:	48 8b 53 20          	mov    0x20(%rbx),%rdx
   12388:	8a 8a a7 00 00 00    	mov    0xa7(%rdx),%cl
   1238e:	80 f9 00             	cmp    $0x0,%cl
   12391:	74 0e                	je     123a1 <do_ocall+0xfb>
   12393:	c6 82 a7 00 00 00 00 	movb   $0x0,0xa7(%rdx)
   1239a:	c7 43 50 01 00 00 00 	movl   $0x1,0x50(%rbx)
   123a1:	48 8b aa 98 00 00 00 	mov    0x98(%rdx),%rbp
   123a8:	48 8b a2 90 00 00 00 	mov    0x90(%rdx),%rsp
   123af:	48 8b 58 f8          	mov    -0x8(%rax),%rbx
   123b3:	48 c7 c0 04 00 00 00 	mov    $0x4,%rax
   123ba:	48 31 c9             	xor    %rcx,%rcx
   123bd:	48 31 d2             	xor    %rdx,%rdx
   123c0:	4d 31 c0             	xor    %r8,%r8
   123c3:	4d 31 c9             	xor    %r9,%r9
   123c6:	4d 31 d2             	xor    %r10,%r10
   123c9:	4d 31 db             	xor    %r11,%r11
   123cc:	4d 31 e4             	xor    %r12,%r12
   123cf:	4d 31 ed             	xor    %r13,%r13
   123d2:	4d 31 f6             	xor    %r14,%r14
   123d5:	4d 31 ff             	xor    %r15,%r15
   123d8:	48 01 d2             	add    %rdx,%rdx
   123db:	fc                   	cld    
   123dc:	0f 01 d7             	enclu  

00000000000123df <__morestack>:
   123df:	f3 0f 1e fa          	endbr64 
   123e3:	55                   	push   %rbp
   123e4:	48 89 e5             	mov    %rsp,%rbp
   123e7:	48 83 ec 20          	sub    $0x20,%rsp
   123eb:	e8 b6 fe ff ff       	call   122a6 <do_ocall>
   123f0:	c9                   	leave  
   123f1:	c3                   	ret    

00000000000123f2 <asm_oret>:
   123f2:	f3 0f 1e fa          	endbr64 
   123f6:	48 89 e3             	mov    %rsp,%rbx
   123f9:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   123fe:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   12403:	48 8b 63 08          	mov    0x8(%rbx),%rsp
   12407:	48 8b bc 24 98 00 00 	mov    0x98(%rsp),%rdi
   1240e:	00 
   1240f:	e8 9d f8 ff ff       	call   11cb1 <restore_xregs>
   12414:	0f ae e8             	lfence 
   12417:	48 31 c0             	xor    %rax,%rax
   1241a:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
   1241f:	48 29 f9             	sub    %rdi,%rcx
   12422:	48 83 e9 08          	sub    $0x8,%rcx
   12426:	48 c1 e9 02          	shr    $0x2,%rcx
   1242a:	fc                   	cld    
   1242b:	f3 ab                	rep stos %eax,%es:(%rdi)
   1242d:	48 8b 43 10          	mov    0x10(%rbx),%rax
   12431:	4c 8b 7c 24 38       	mov    0x38(%rsp),%r15
   12436:	4c 8b 74 24 40       	mov    0x40(%rsp),%r14
   1243b:	4c 8b 6c 24 48       	mov    0x48(%rsp),%r13
   12440:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   12445:	48 8b 6c 24 58       	mov    0x58(%rsp),%rbp
   1244a:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
   1244f:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   12454:	48 8b 5c 24 70       	mov    0x70(%rsp),%rbx
   12459:	48 89 ec             	mov    %rbp,%rsp
   1245c:	5d                   	pop    %rbp
   1245d:	c3                   	ret    
   1245e:	0f 0b                	ud2    

0000000000012460 <do_egetkey>:
   12460:	f3 0f 1e fa          	endbr64 
   12464:	53                   	push   %rbx
   12465:	51                   	push   %rcx
   12466:	52                   	push   %rdx
   12467:	48 89 fb             	mov    %rdi,%rbx
   1246a:	48 89 f1             	mov    %rsi,%rcx
   1246d:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
   12474:	0f 01 d7             	enclu  
   12477:	74 03                	je     1247c <do_egetkey+0x1c>
   12479:	48 31 c0             	xor    %rax,%rax
   1247c:	5a                   	pop    %rdx
   1247d:	59                   	pop    %rcx
   1247e:	5b                   	pop    %rbx
   1247f:	c3                   	ret    

0000000000012480 <do_ereport>:
   12480:	f3 0f 1e fa          	endbr64 
   12484:	53                   	push   %rbx
   12485:	51                   	push   %rcx
   12486:	52                   	push   %rdx
   12487:	48 89 fb             	mov    %rdi,%rbx
   1248a:	48 89 f1             	mov    %rsi,%rcx
   1248d:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
   12494:	f8                   	clc    

0000000000012495 <Lereport_inst>:
   12495:	0f 01 d7             	enclu  
   12498:	0f 92 c0             	setb   %al
   1249b:	5a                   	pop    %rdx
   1249c:	59                   	pop    %rcx
   1249d:	5b                   	pop    %rbx
   1249e:	c3                   	ret    

000000000001249f <do_everifyreport2>:
   1249f:	f3 0f 1e fa          	endbr64 
   124a3:	53                   	push   %rbx
   124a4:	51                   	push   %rcx
   124a5:	52                   	push   %rdx
   124a6:	48 89 fb             	mov    %rdi,%rbx
   124a9:	48 89 f1             	mov    %rsi,%rcx
   124ac:	48 c7 c0 08 00 00 00 	mov    $0x8,%rax

00000000000124b3 <Leverifyreport2_inst>:
   124b3:	0f 01 d7             	enclu  
   124b6:	74 03                	je     124bb <Leverifyreport2_inst+0x8>
   124b8:	48 31 c0             	xor    %rax,%rax
   124bb:	5a                   	pop    %rdx
   124bc:	59                   	pop    %rcx
   124bd:	5b                   	pop    %rbx
   124be:	c3                   	ret    

00000000000124bf <do_eaccept>:
   124bf:	f3 0f 1e fa          	endbr64 
   124c3:	53                   	push   %rbx
   124c4:	51                   	push   %rcx
   124c5:	52                   	push   %rdx
   124c6:	48 89 fb             	mov    %rdi,%rbx
   124c9:	48 89 f1             	mov    %rsi,%rcx
   124cc:	b8 05 00 00 00       	mov    $0x5,%eax
   124d1:	0f 01 d7             	enclu  
   124d4:	83 f8 00             	cmp    $0x0,%eax
   124d7:	75 5e                	jne    12537 <abort>
   124d9:	5a                   	pop    %rdx
   124da:	59                   	pop    %rcx
   124db:	5b                   	pop    %rbx
   124dc:	c3                   	ret    

00000000000124dd <do_eacceptcopy>:
   124dd:	f3 0f 1e fa          	endbr64 
   124e1:	53                   	push   %rbx
   124e2:	51                   	push   %rcx
   124e3:	52                   	push   %rdx
   124e4:	48 89 fb             	mov    %rdi,%rbx
   124e7:	48 89 f1             	mov    %rsi,%rcx
   124ea:	b8 07 00 00 00       	mov    $0x7,%eax
   124ef:	0f 01 d7             	enclu  
   124f2:	83 f8 00             	cmp    $0x0,%eax
   124f5:	75 40                	jne    12537 <abort>
   124f7:	5a                   	pop    %rdx
   124f8:	59                   	pop    %rcx
   124f9:	5b                   	pop    %rbx
   124fa:	c3                   	ret    

00000000000124fb <do_emodpe>:
   124fb:	f3 0f 1e fa          	endbr64 
   124ff:	53                   	push   %rbx
   12500:	51                   	push   %rcx
   12501:	52                   	push   %rdx
   12502:	48 89 fb             	mov    %rdi,%rbx
   12505:	48 89 f1             	mov    %rsi,%rcx
   12508:	b8 06 00 00 00       	mov    $0x6,%eax
   1250d:	0f 01 d7             	enclu  
   12510:	5a                   	pop    %rdx
   12511:	59                   	pop    %rcx
   12512:	5b                   	pop    %rbx
   12513:	c3                   	ret    

0000000000012514 <do_rdrand>:
   12514:	f3 0f 1e fa          	endbr64 
   12518:	b9 0a 00 00 00       	mov    $0xa,%ecx
   1251d:	0f c7 f0             	rdrand %eax
   12520:	72 08                	jb     1252a <do_rdrand+0x16>
   12522:	ff c9                	dec    %ecx
   12524:	75 f7                	jne    1251d <do_rdrand+0x9>
   12526:	48 31 c0             	xor    %rax,%rax
   12529:	c3                   	ret    
   1252a:	48 89 f9             	mov    %rdi,%rcx
   1252d:	89 01                	mov    %eax,(%rcx)
   1252f:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
   12536:	c3                   	ret    

0000000000012537 <abort>:
   12537:	f3 0f 1e fa          	endbr64 
   1253b:	48 8d 05 fe 7b 00 00 	lea    0x7bfe(%rip),%rax        # 1a140 <g_enclave_state>
   12542:	c7 00 03 00 00 00    	movl   $0x3,(%rax)
   12548:	0f 0b                	ud2    

000000000001254a <continue_execution>:
   1254a:	f3 0f 1e fa          	endbr64 
   1254e:	48 89 f9             	mov    %rdi,%rcx
   12551:	48 8b 01             	mov    (%rcx),%rax
   12554:	50                   	push   %rax
   12555:	48 8b 41 08          	mov    0x8(%rcx),%rax
   12559:	50                   	push   %rax
   1255a:	48 8b 41 20          	mov    0x20(%rcx),%rax
   1255e:	48 2d 88 00 00 00    	sub    $0x88,%rax
   12564:	48 8b 51 10          	mov    0x10(%rcx),%rdx
   12568:	48 8b 59 18          	mov    0x18(%rcx),%rbx
   1256c:	48 8b 69 28          	mov    0x28(%rcx),%rbp
   12570:	48 8b 71 30          	mov    0x30(%rcx),%rsi
   12574:	48 8b 79 38          	mov    0x38(%rcx),%rdi
   12578:	4c 8b 41 40          	mov    0x40(%rcx),%r8
   1257c:	4c 8b 49 48          	mov    0x48(%rcx),%r9
   12580:	4c 8b 51 50          	mov    0x50(%rcx),%r10
   12584:	4c 8b 59 58          	mov    0x58(%rcx),%r11
   12588:	4c 8b 61 60          	mov    0x60(%rcx),%r12
   1258c:	4c 8b 69 68          	mov    0x68(%rcx),%r13
   12590:	4c 8b 71 70          	mov    0x70(%rcx),%r14
   12594:	4c 8b 79 78          	mov    0x78(%rcx),%r15
   12598:	ff b1 80 00 00 00    	push   0x80(%rcx)
   1259e:	9d                   	popf   
   1259f:	48 8b 89 88 00 00 00 	mov    0x88(%rcx),%rcx
   125a6:	48 89 08             	mov    %rcx,(%rax)
   125a9:	59                   	pop    %rcx
   125aa:	5c                   	pop    %rsp
   125ab:	48 94                	xchg   %rax,%rsp
   125ad:	c2 80 00             	ret    $0x80

00000000000125b0 <second_phase>:
   125b0:	f3 0f 1e fa          	endbr64 
   125b4:	48 89 f4             	mov    %rsi,%rsp
   125b7:	48 c7 c0 09 00 00 00 	mov    $0x9,%rax
   125be:	0f 01 d7             	enclu  
   125c1:	ff e2                	jmp    *%rdx

Disassembly of section .rodata:

0000000000013000 <g_dyn_entry_table-0x90>:
   13000:	50                   	push   %rax
   13001:	61                   	(bad)  
   13002:	73 73                	jae    13077 <second_phase+0xac7>
   13004:	77 6f                	ja     13075 <second_phase+0xac5>
   13006:	72 64                	jb     1306c <second_phase+0xabc>
   13008:	20 63 68             	and    %ah,0x68(%rbx)
   1300b:	65 63 6b 20          	movsxd %gs:0x20(%rbx),%ebp
   1300f:	70 61                	jo     13072 <second_phase+0xac2>
   13011:	73 73                	jae    13086 <second_phase+0xad6>
   13013:	65 64 2c 20          	gs fs sub $0x20,%al
   13017:	79 6f                	jns    13088 <second_phase+0xad8>
   13019:	75 20                	jne    1303b <second_phase+0xa8b>
   1301b:	61                   	(bad)  
   1301c:	72 65                	jb     13083 <second_phase+0xad3>
   1301e:	20 6c 6f 67          	and    %ch,0x67(%rdi,%rbp,2)
   13022:	67 65 64 20 69 6e    	gs and %ch,%fs:0x6e(%ecx)
   13028:	21 00                	and    %eax,(%rax)
   1302a:	50                   	push   %rax
   1302b:	61                   	(bad)  
   1302c:	73 73                	jae    130a1 <g_dyn_entry_table+0x11>
   1302e:	77 6f                	ja     1309f <g_dyn_entry_table+0xf>
   13030:	72 64                	jb     13096 <g_dyn_entry_table+0x6>
   13032:	20 63 68             	and    %ah,0x68(%rbx)
   13035:	65 63 6b 20          	movsxd %gs:0x20(%rbx),%ebp
   13039:	66 61                	data16 (bad) 
   1303b:	69 6c 65 64 21 00 4f 	imul   $0x744f0021,0x64(%rbp,%riz,2),%ebp
   13042:	74 
   13043:	68 65 72 20 64       	push   $0x64207265
   13048:	65 76 69             	gs jbe 130b4 <g_dyn_entry_table+0x24>
   1304b:	63 65 20             	movsxd 0x20(%rbp),%esp
   1304e:	61                   	(bad)  
   1304f:	6c                   	insb   (%dx),%es:(%rdi)
   13050:	72 65                	jb     130b7 <g_dyn_entry_table+0x27>
   13052:	61                   	(bad)  
   13053:	64 79 20             	fs jns 13076 <second_phase+0xac6>
   13056:	6c                   	insb   (%dx),%es:(%rdi)
   13057:	6f                   	outsl  %ds:(%rsi),(%dx)
   13058:	67 67 65 64 20 69 6e 	addr32 gs and %ch,%fs:0x6e(%ecx)
   1305f:	00 59 6f             	add    %bl,0x6f(%rcx)
   13062:	75 20                	jne    13084 <second_phase+0xad4>
   13064:	61                   	(bad)  
   13065:	72 65                	jb     130cc <g_dyn_entry_table+0x3c>
   13067:	20 6c 6f 67          	and    %ch,0x67(%rdi,%rbp,2)
   1306b:	67 65 64 20 6f 75    	gs and %ch,%fs:0x75(%edi)
   13071:	74 21                	je     13094 <g_dyn_entry_table+0x4>
   13073:	00 41 63             	add    %al,0x63(%rcx)
   13076:	63 65 73             	movsxd 0x73(%rbp),%esp
   13079:	73 20                	jae    1309b <g_dyn_entry_table+0xb>
   1307b:	64 65 6e             	fs outsb %gs:(%rsi),(%dx)
   1307e:	69 65 64 2e 00 73 65 	imul   $0x6573002e,0x64(%rbp),%esp
   13085:	63 72 65             	movsxd 0x65(%rdx),%esi
   13088:	74 5f                	je     130e9 <g_dyn_entry_table+0x59>
   1308a:	70 77                	jo     13103 <g_dyn_entry_table+0x73>
   1308c:	00 00                	add    %al,(%rax)
	...

0000000000013090 <g_dyn_entry_table>:
   13090:	02 00                	add    (%rax),%al
	...
   1309e:	00 00                	add    %al,(%rax)
   130a0:	40                   	rex
   130a1:	40                   	rex
   130a2:	40                   	rex
   130a3:	40                   	rex
   130a4:	40                   	rex
   130a5:	40                   	rex
   130a6:	40                   	rex
   130a7:	40 00 00             	rex add %al,(%rax)
   130aa:	00 00                	add    %al,(%rax)
   130ac:	00 00                	add    %al,(%rax)
   130ae:	00 00                	add    %al,(%rax)
   130b0:	20 20                	and    %ah,(%rax)
   130b2:	20 20                	and    %ah,(%rax)
   130b4:	20 20                	and    %ah,(%rax)
   130b6:	20 20                	and    %ah,(%rax)
	...
   130c0:	30 30                	xor    %dh,(%rax)
   130c2:	30 30                	xor    %dh,(%rax)
   130c4:	30 30                	xor    %dh,(%rax)
   130c6:	30 30                	xor    %dh,(%rax)
	...
   130d0:	03 03                	add    (%rbx),%eax
   130d2:	03 03                	add    (%rbx),%eax
   130d4:	03 03                	add    (%rbx),%eax
   130d6:	03 03                	add    (%rbx),%eax
	...
   130e0:	01 01                	add    %eax,(%rcx)
   130e2:	01 01                	add    %eax,(%rcx)
   130e4:	01 01                	add    %eax,(%rcx)
   130e6:	01 01                	add    %eax,(%rcx)
	...
   130f0:	02 02                	add    (%rdx),%al
   130f2:	02 02                	add    (%rdx),%al
   130f4:	02 02                	add    (%rdx),%al
   130f6:	02 02                	add    (%rdx),%al
	...
   13100:	20 00                	and    %al,(%rax)
   13102:	00 00                	add    %al,(%rax)
   13104:	00 00                	add    %al,(%rax)
   13106:	00 00                	add    %al,(%rax)
   13108:	e0 ff                	loopne 13109 <g_dyn_entry_table+0x79>
   1310a:	ff                   	(bad)  
   1310b:	ff                   	(bad)  
   1310c:	ff                   	(bad)  
   1310d:	ff                   	(bad)  
   1310e:	ff                   	(bad)  
   1310f:	ff 00                	incl   (%rax)
   13111:	10 00                	adc    %al,(%rax)
   13113:	00 00                	add    %al,(%rax)
   13115:	00 00                	add    %al,(%rax)
   13117:	00 00                	add    %al,(%rax)
   13119:	10 00                	adc    %al,(%rax)
   1311b:	00 00                	add    %al,(%rax)
   1311d:	00 00                	add    %al,(%rax)
   1311f:	00 ff                	add    %bh,%bh
   13121:	ff                   	(bad)  
   13122:	ff                   	(bad)  
   13123:	ff                   	(bad)  
   13124:	ff                   	(bad)  
   13125:	ff                   	(bad)  
   13126:	ff                   	(bad)  
   13127:	ff 00                	incl   (%rax)
   13129:	00 20                	add    %ah,(%rax)
   1312b:	00 00                	add    %al,(%rax)
   1312d:	00 00                	add    %al,(%rax)
   1312f:	00 90 51 ff ff 60    	add    %dl,0x60ffff51(%rax)
   13135:	51                   	push   %rcx
   13136:	ff                   	(bad)  
   13137:	ff 52 51             	call   *0x51(%rdx)
   1313a:	ff                   	(bad)  
   1313b:	ff 52 51             	call   *0x51(%rdx)
   1313e:	ff                   	(bad)  
   1313f:	ff 52 51             	call   *0x51(%rdx)
   13142:	ff                   	(bad)  
   13143:	ff 52 51             	call   *0x51(%rdx)
   13146:	ff                   	(bad)  
   13147:	ff 60 51             	jmp    *0x51(%rax)
   1314a:	ff                   	(bad)  
   1314b:	ff 60 51             	jmp    *0x51(%rax)
   1314e:	ff                   	(bad)  
   1314f:	ff f0                	push   %rax
   13151:	51                   	push   %rcx
   13152:	ff                   	(bad)  
   13153:	ff 52 51             	call   *0x51(%rdx)
   13156:	ff                   	(bad)  
   13157:	ff 52 51             	call   *0x51(%rdx)
   1315a:	ff                   	(bad)  
   1315b:	ff 52 51             	call   *0x51(%rdx)
   1315e:	ff                   	(bad)  
   1315f:	ff 52 51             	call   *0x51(%rdx)
   13162:	ff                   	(bad)  
   13163:	ff 52 51             	call   *0x51(%rdx)
   13166:	ff                   	(bad)  
   13167:	ff 52 51             	call   *0x51(%rdx)
   1316a:	ff                   	(bad)  
   1316b:	ff 52 51             	call   *0x51(%rdx)
   1316e:	ff                   	(bad)  
   1316f:	ff e0                	jmp    *%rax
   13171:	51                   	push   %rcx
   13172:	ff                   	(bad)  
   13173:	ff b0 51 ff ff e0    	push   -0x1f0000af(%rax)
   13179:	50                   	push   %rax
   1317a:	ff                   	(bad)  
   1317b:	ff                   	(bad)  
   1317c:	fc                   	cld    
   1317d:	52                   	push   %rdx
   1317e:	ff                   	(bad)  
   1317f:	ff                   	(bad)  
   13180:	fc                   	cld    
   13181:	52                   	push   %rdx
   13182:	ff                   	(bad)  
   13183:	ff c4                	inc    %esp
   13185:	53                   	push   %rbx
   13186:	ff                   	(bad)  
   13187:	ff                   	(bad)  
   13188:	fc                   	cld    
   13189:	52                   	push   %rdx
   1318a:	ff                   	(bad)  
   1318b:	ff                   	(bad)  
   1318c:	fc                   	cld    
   1318d:	52                   	push   %rdx
   1318e:	ff                   	(bad)  
   1318f:	ff                   	(bad)  
   13190:	fc                   	cld    
   13191:	52                   	push   %rdx
   13192:	ff                   	(bad)  
   13193:	ff f4                	push   %rsp
   13195:	52                   	push   %rdx
   13196:	ff                   	(bad)  
   13197:	ff a4 53 ff ff 8c 53 	jmp    *0x538cffff(%rbx,%rdx,2)
   1319e:	ff                   	(bad)  
   1319f:	ff e4                	jmp    *%rsp
   131a1:	53                   	push   %rbx
   131a2:	ff                   	(bad)  
   131a3:	ff                   	(bad)  
   131a4:	fc                   	cld    
   131a5:	52                   	push   %rdx
   131a6:	ff                   	(bad)  
   131a7:	ff                   	(bad)  
   131a8:	fc                   	cld    
   131a9:	52                   	push   %rdx
   131aa:	ff                   	(bad)  
   131ab:	ff                   	(bad)  
   131ac:	fc                   	cld    
   131ad:	52                   	push   %rdx
   131ae:	ff                   	(bad)  
   131af:	ff                   	(bad)  
   131b0:	fc                   	cld    
   131b1:	52                   	push   %rdx
   131b2:	ff                   	(bad)  
   131b3:	ff                   	(bad)  
   131b4:	fc                   	cld    
   131b5:	52                   	push   %rdx
   131b6:	ff                   	(bad)  
   131b7:	ff                   	(bad)  
   131b8:	fc                   	cld    
   131b9:	52                   	push   %rdx
   131ba:	ff                   	(bad)  
   131bb:	ff                   	(bad)  
   131bc:	fc                   	cld    
   131bd:	52                   	push   %rdx
   131be:	ff                   	(bad)  
   131bf:	ff                   	(bad)  
   131c0:	fc                   	cld    
   131c1:	52                   	push   %rdx
   131c2:	ff                   	(bad)  
   131c3:	ff                   	(bad)  
   131c4:	fc                   	cld    
   131c5:	52                   	push   %rdx
   131c6:	ff                   	(bad)  
   131c7:	ff                   	(bad)  
   131c8:	fc                   	cld    
   131c9:	52                   	push   %rdx
   131ca:	ff                   	(bad)  
   131cb:	ff                   	(bad)  
   131cc:	fc                   	cld    
   131cd:	52                   	push   %rdx
   131ce:	ff                   	(bad)  
   131cf:	ff                   	(bad)  
   131d0:	fc                   	cld    
   131d1:	52                   	push   %rdx
   131d2:	ff                   	(bad)  
   131d3:	ff                   	(bad)  
   131d4:	fc                   	cld    
   131d5:	52                   	push   %rdx
   131d6:	ff                   	(bad)  
   131d7:	ff 74 53 ff          	push   -0x1(%rbx,%rdx,2)
   131db:	ff                   	.byte 0xff

Disassembly of section .niprod:

0000000000013200 <g_global_data>:
   13200:	64 00 17             	add    %dl,%fs:(%rdi)
   13203:	00 02                	add    %al,(%rdx)
   13205:	00 00                	add    %al,(%rax)
   13207:	00 01                	add    %al,(%rcx)
   13209:	00 00                	add    %al,(%rax)
   1320b:	00 00                	add    %al,(%rax)
   1320d:	00 00                	add    %al,(%rax)
   1320f:	00 02                	add    %al,(%rdx)
   13211:	00 00                	add    %al,(%rax)
   13213:	00 00                	add    %al,(%rax)
   13215:	00 00                	add    %al,(%rax)
   13217:	00 03                	add    %al,(%rbx)
   13219:	00 00                	add    %al,(%rax)
   1321b:	00 00                	add    %al,(%rax)
   1321d:	00 00                	add    %al,(%rax)
   1321f:	00 04 00             	add    %al,(%rax,%rax,1)
   13222:	00 00                	add    %al,(%rax)
   13224:	00 00                	add    %al,(%rax)
   13226:	00 00                	add    %al,(%rax)
   13228:	05 00 00 00 00       	add    $0x0,%eax
   1322d:	00 00                	add    %al,(%rax)
   1322f:	00 06                	add    %al,(%rsi)
	...

0000000000013900 <SYNTHETIC_STATE>:
   13900:	7f 03                	jg     13905 <SYNTHETIC_STATE+0x5>
	...
   13916:	00 00                	add    %al,(%rax)
   13918:	bf 1f 00 00 ff       	mov    $0xff00001f,%edi
   1391d:	ff 00                	incl   (%rax)
	...
   13aff:	00 02                	add    %al,(%rdx)
   13b01:	00 00                	add    %al,(%rax)
   13b03:	00 00                	add    %al,(%rax)
   13b05:	00 00                	add    %al,(%rax)
   13b07:	00 02                	add    %al,(%rdx)
   13b09:	00 00                	add    %al,(%rax)
   13b0b:	00 00                	add    %al,(%rax)
   13b0d:	00 00                	add    %al,(%rax)
   13b0f:	80 00 00             	addb   $0x0,(%rax)
	...

Disassembly of section .eh_frame_hdr:

0000000000013b40 <__GNU_EH_FRAME_HDR>:
   13b40:	01 1b                	add    %ebx,(%rbx)
   13b42:	03 3b                	add    (%rbx),%edi
   13b44:	24 08                	and    $0x8,%al
   13b46:	00 00                	add    %al,(%rax)
   13b48:	03 01                	add    (%rcx),%eax
   13b4a:	00 00                	add    %al,(%rax)
   13b4c:	c0 d4 fe             	rcl    $0xfe,%ah
   13b4f:	ff 88 08 00 00 d0    	decl   -0x2ffffff8(%rax)
   13b55:	d4                   	(bad)  
   13b56:	fe                   	(bad)  
   13b57:	ff b0 08 00 00 c0    	push   -0x3ffffff8(%rax)
   13b5d:	e4 fe                	in     $0xfe,%al
   13b5f:	ff b0 0c 00 00 d0    	push   -0x2ffffff4(%rax)
   13b65:	e4 fe                	in     $0xfe,%al
   13b67:	ff                   	(bad)  
   13b68:	e8 2c 00 00 f0       	call   fffffffff0013b99 <_end+0xffffffffeffe8b89>
   13b6d:	e4 fe                	in     $0xfe,%al
   13b6f:	ff 18                	lcall  *(%rax)
   13b71:	2f                   	(bad)  
   13b72:	00 00                	add    %al,(%rax)
   13b74:	10 e5                	adc    %ah,%ch
   13b76:	fe                   	(bad)  
   13b77:	ff 60 2f             	jmp    *0x2f(%rax)
   13b7a:	00 00                	add    %al,(%rax)
   13b7c:	23 e5                	and    %ebp,%esp
   13b7e:	fe                   	(bad)  
   13b7f:	ff 40 08             	incl   0x8(%rax)
   13b82:	00 00                	add    %al,(%rax)
   13b84:	87 e5                	xchg   %esp,%ebp
   13b86:	fe                   	(bad)  
   13b87:	ff 60 08             	jmp    *0x8(%rax)
   13b8a:	00 00                	add    %al,(%rax)
   13b8c:	b0 e5                	mov    $0xe5,%al
   13b8e:	fe                   	(bad)  
   13b8f:	ff 74 08 00          	push   0x0(%rax,%rcx,1)
   13b93:	00 c6                	add    %al,%dh
   13b95:	04 ff                	add    $0xff,%al
   13b97:	ff c8                	dec    %eax
   13b99:	08 00                	or     %al,(%rax)
   13b9b:	00 c0                	add    %al,%al
   13b9d:	05 ff ff 00 09       	add    $0x900ffff,%eax
   13ba2:	00 00                	add    %al,(%rax)
   13ba4:	22 06                	and    (%rsi),%al
   13ba6:	ff                   	(bad)  
   13ba7:	ff 24 09             	jmp    *(%rcx,%rcx,1)
   13baa:	00 00                	add    %al,(%rax)
   13bac:	84 06                	test   %al,(%rsi)
   13bae:	ff                   	(bad)  
   13baf:	ff 48 09             	decl   0x9(%rax)
   13bb2:	00 00                	add    %al,(%rax)
   13bb4:	6d                   	insl   (%dx),%es:(%rdi)
   13bb5:	07                   	(bad)  
   13bb6:	ff                   	(bad)  
   13bb7:	ff 80 09 00 00 80    	incl   -0x7ffffff7(%rax)
   13bbd:	08 ff                	or     %bh,%bh
   13bbf:	ff                   	(bad)  
   13bc0:	b8 09 00 00 20       	mov    $0x20000009,%eax
   13bc5:	09 ff                	or     %edi,%edi
   13bc7:	ff cc                	dec    %esp
   13bc9:	09 00                	or     %eax,(%rax)
   13bcb:	00 70 1a             	add    %dh,0x1a(%rax)
   13bce:	ff                   	(bad)  
   13bcf:	ff 00                	incl   (%rax)
   13bd1:	0a 00                	or     (%rax),%al
   13bd3:	00 80 1c ff ff 70    	add    %al,0x70ffff1c(%rax)
   13bd9:	0a 00                	or     (%rax),%al
   13bdb:	00 c0                	add    %al,%al
   13bdd:	1c ff                	sbb    $0xff,%al
   13bdf:	ff a8 0a 00 00 50    	ljmp   *0x5000000a(%rax)
   13be5:	1d ff ff f4 0a       	sbb    $0xaf4ffff,%eax
   13bea:	00 00                	add    %al,(%rax)
   13bec:	e0 1d                	loopne 13c0b <__GNU_EH_FRAME_HDR+0xcb>
   13bee:	ff                   	(bad)  
   13bef:	ff 40 0b             	incl   0xb(%rax)
   13bf2:	00 00                	add    %al,(%rax)
   13bf4:	10 1e                	adc    %bl,(%rsi)
   13bf6:	ff                   	(bad)  
   13bf7:	ff 54 0b 00          	call   *0x0(%rbx,%rcx,1)
   13bfb:	00 40 1e             	add    %al,0x1e(%rax)
   13bfe:	ff                   	(bad)  
   13bff:	ff 68 0b             	ljmp   *0xb(%rax)
   13c02:	00 00                	add    %al,(%rax)
   13c04:	80 1e ff             	sbbb   $0xff,(%rsi)
   13c07:	ff 80 0b 00 00 a0    	incl   -0x5ffffff5(%rax)
   13c0d:	1e                   	(bad)  
   13c0e:	ff                   	(bad)  
   13c0f:	ff 9c 0b 00 00 b0 1e 	lcall  *0x1eb00000(%rbx,%rcx,1)
   13c16:	ff                   	(bad)  
   13c17:	ff b0 0b 00 00 e0    	push   -0x1ffffff5(%rax)
   13c1d:	1e                   	(bad)  
   13c1e:	ff                   	(bad)  
   13c1f:	ff                   	(bad)  
   13c20:	d8 0b                	fmuls  (%rbx)
   13c22:	00 00                	add    %al,(%rax)
   13c24:	00 1f                	add    %bl,(%rdi)
   13c26:	ff                   	(bad)  
   13c27:	ff 58 0c             	lcall  *0xc(%rax)
   13c2a:	00 00                	add    %al,(%rax)
   13c2c:	20 20                	and    %ah,(%rax)
   13c2e:	ff                   	(bad)  
   13c2f:	ff c4                	inc    %esp
   13c31:	0c 00                	or     $0x0,%al
   13c33:	00 80 20 ff ff d8    	add    %al,-0x270000e0(%rax)
   13c39:	0c 00                	or     $0x0,%al
   13c3b:	00 e0                	add    %ah,%al
   13c3d:	20 ff                	and    %bh,%bh
   13c3f:	ff                   	(bad)  
   13c40:	ec                   	in     (%dx),%al
   13c41:	0c 00                	or     $0x0,%al
   13c43:	00 c0                	add    %al,%al
   13c45:	21 ff                	and    %edi,%edi
   13c47:	ff 0c 0d 00 00 20 22 	decl   0x22200000(,%rcx,1)
   13c4e:	ff                   	(bad)  
   13c4f:	ff 24 0d 00 00 50 23 	jmp    *0x23500000(,%rcx,1)
   13c56:	ff                   	(bad)  
   13c57:	ff 60 0d             	jmp    *0xd(%rax)
   13c5a:	00 00                	add    %al,(%rax)
   13c5c:	70 23                	jo     13c81 <__GNU_EH_FRAME_HDR+0x141>
   13c5e:	ff                   	(bad)  
   13c5f:	ff 74 0d 00          	push   0x0(%rbp,%rcx,1)
   13c63:	00 a0 23 ff ff 90    	add    %ah,-0x6f0000dd(%rax)
   13c69:	0d 00 00 d0 23       	or     $0x23d00000,%eax
   13c6e:	ff                   	(bad)  
   13c6f:	ff b0 0d 00 00 90    	push   -0x6ffffff3(%rax)
   13c75:	24 ff                	and    $0xff,%al
   13c77:	ff                   	(bad)  
   13c78:	ec                   	in     (%dx),%al
   13c79:	0d 00 00 70 26       	or     $0x26700000,%eax
   13c7e:	ff                   	(bad)  
   13c7f:	ff 44 0e 00          	incl   0x0(%rsi,%rcx,1)
   13c83:	00 d0                	add    %dl,%al
   13c85:	26 ff                	es (bad) 
   13c87:	ff 58 0e             	lcall  *0xe(%rax)
   13c8a:	00 00                	add    %al,(%rax)
   13c8c:	30 27                	xor    %ah,(%rdi)
   13c8e:	ff                   	(bad)  
   13c8f:	ff 74 0e 00          	push   0x0(%rsi,%rcx,1)
   13c93:	00 a0 27 ff ff 88    	add    %ah,-0x770000d9(%rax)
   13c99:	0e                   	(bad)  
   13c9a:	00 00                	add    %al,(%rax)
   13c9c:	00 28                	add    %ch,(%rax)
   13c9e:	ff                   	(bad)  
   13c9f:	ff 9c 0e 00 00 c0 29 	lcall  *0x29c00000(%rsi,%rcx,1)
   13ca6:	ff                   	(bad)  
   13ca7:	ff e0                	jmp    *%rax
   13ca9:	0e                   	(bad)  
   13caa:	00 00                	add    %al,(%rax)
   13cac:	20 2a                	and    %ch,(%rdx)
   13cae:	ff                   	(bad)  
   13caf:	ff 14 0f             	call   *(%rdi,%rcx,1)
   13cb2:	00 00                	add    %al,(%rax)
   13cb4:	f0 2a ff             	lock sub %bh,%bh
   13cb7:	ff 58 0f             	lcall  *0xf(%rax)
   13cba:	00 00                	add    %al,(%rax)
   13cbc:	10 2c ff             	adc    %ch,(%rdi,%rdi,8)
   13cbf:	ff a0 0f 00 00 50    	jmp    *0x5000000f(%rax)
   13cc5:	2c ff                	sub    $0xff,%al
   13cc7:	ff c8                	dec    %eax
   13cc9:	0f 00 00             	sldt   (%rax)
   13ccc:	60                   	(bad)  
   13ccd:	2c ff                	sub    $0xff,%al
   13ccf:	ff                   	(bad)  
   13cd0:	dc 0f                	fmull  (%rdi)
   13cd2:	00 00                	add    %al,(%rax)
   13cd4:	30 2d ff ff 08 10    	xor    %ch,0x1008ffff(%rip)        # 100a3cd9 <_end+0x10078cc9>
   13cda:	00 00                	add    %al,(%rax)
   13cdc:	10 2e                	adc    %ch,(%rsi)
   13cde:	ff                   	(bad)  
   13cdf:	ff 60 10             	jmp    *0x10(%rax)
   13ce2:	00 00                	add    %al,(%rax)
   13ce4:	d0 2f                	shrb   (%rdi)
   13ce6:	ff                   	(bad)  
   13ce7:	ff c0                	inc    %eax
   13ce9:	10 00                	adc    %al,(%rax)
   13ceb:	00 e0                	add    %ah,%al
   13ced:	2f                   	(bad)  
   13cee:	ff                   	(bad)  
   13cef:	ff d4                	call   *%rsp
   13cf1:	10 00                	adc    %al,(%rax)
   13cf3:	00 f0                	add    %dh,%al
   13cf5:	2f                   	(bad)  
   13cf6:	ff                   	(bad)  
   13cf7:	ff                   	(bad)  
   13cf8:	e8 10 00 00 00       	call   13d0d <__GNU_EH_FRAME_HDR+0x1cd>
   13cfd:	30 ff                	xor    %bh,%bh
   13cff:	ff                   	(bad)  
   13d00:	fc                   	cld    
   13d01:	10 00                	adc    %al,(%rax)
   13d03:	00 10                	add    %dl,(%rax)
   13d05:	30 ff                	xor    %bh,%bh
   13d07:	ff 10                	call   *(%rax)
   13d09:	11 00                	adc    %eax,(%rax)
   13d0b:	00 20                	add    %ah,(%rax)
   13d0d:	30 ff                	xor    %bh,%bh
   13d0f:	ff 24 11             	jmp    *(%rcx,%rdx,1)
   13d12:	00 00                	add    %al,(%rax)
   13d14:	30 30                	xor    %dh,(%rax)
   13d16:	ff                   	(bad)  
   13d17:	ff                   	(bad)  
   13d18:	38 11                	cmp    %dl,(%rcx)
   13d1a:	00 00                	add    %al,(%rax)
   13d1c:	40 30 ff             	xor    %dil,%dil
   13d1f:	ff 4c 11 00          	decl   0x0(%rcx,%rdx,1)
   13d23:	00 50 30             	add    %dl,0x30(%rax)
   13d26:	ff                   	(bad)  
   13d27:	ff 60 11             	jmp    *0x11(%rax)
   13d2a:	00 00                	add    %al,(%rax)
   13d2c:	b0 32                	mov    $0x32,%al
   13d2e:	ff                   	(bad)  
   13d2f:	ff ac 11 00 00 e0 34 	ljmp   *0x34e00000(%rcx,%rdx,1)
   13d36:	ff                   	(bad)  
   13d37:	ff d0                	call   *%rax
   13d39:	11 00                	adc    %eax,(%rax)
   13d3b:	00 c0                	add    %al,%al
   13d3d:	35 ff ff fc 11       	xor    $0x11fcffff,%eax
   13d42:	00 00                	add    %al,(%rax)
   13d44:	a0 36 ff ff 98 12 00 	movabs 0xd000001298ffff36,%al
   13d4b:	00 d0 
   13d4d:	36 ff                	ss (bad) 
   13d4f:	ff ac 12 00 00 10 37 	ljmp   *0x37100000(%rdx,%rdx,1)
   13d56:	ff                   	(bad)  
   13d57:	ff c8                	dec    %eax
   13d59:	12 00                	adc    (%rax),%al
   13d5b:	00 d0                	add    %dl,%al
   13d5d:	37                   	(bad)  
   13d5e:	ff                   	(bad)  
   13d5f:	ff                   	(bad)  
   13d60:	f8                   	clc    
   13d61:	12 00                	adc    (%rax),%al
   13d63:	00 e0                	add    %ah,%al
   13d65:	37                   	(bad)  
   13d66:	ff                   	(bad)  
   13d67:	ff 0c 13             	decl   (%rbx,%rdx,1)
   13d6a:	00 00                	add    %al,(%rax)
   13d6c:	10 38                	adc    %bh,(%rax)
   13d6e:	ff                   	(bad)  
   13d6f:	ff 24 13             	jmp    *(%rbx,%rdx,1)
   13d72:	00 00                	add    %al,(%rax)
   13d74:	30 38                	xor    %bh,(%rax)
   13d76:	ff                   	(bad)  
   13d77:	ff                   	(bad)  
   13d78:	3c 13                	cmp    $0x13,%al
   13d7a:	00 00                	add    %al,(%rax)
   13d7c:	a0 38 ff ff 50 13 00 	movabs 0x1350ffff38,%al
   13d83:	00 00 
   13d85:	39 ff                	cmp    %edi,%edi
   13d87:	ff 64 13 00          	jmp    *0x0(%rbx,%rdx,1)
   13d8b:	00 20                	add    %ah,(%rax)
   13d8d:	39 ff                	cmp    %edi,%edi
   13d8f:	ff                   	(bad)  
   13d90:	7c 13                	jl     13da5 <__GNU_EH_FRAME_HDR+0x265>
   13d92:	00 00                	add    %al,(%rax)
   13d94:	a0 39 ff ff 94 13 00 	movabs 0x1000001394ffff39,%al
   13d9b:	00 10 
   13d9d:	3a ff                	cmp    %bh,%bh
   13d9f:	ff a8 13 00 00 70    	ljmp   *0x70000013(%rax)
   13da5:	3a ff                	cmp    %bh,%bh
   13da7:	ff                   	(bad)  
   13da8:	bc 13 00 00 90       	mov    $0x90000013,%esp
   13dad:	3a ff                	cmp    %bh,%bh
   13daf:	ff d4                	call   *%rsp
   13db1:	13 00                	adc    (%rax),%eax
   13db3:	00 e0                	add    %ah,%al
   13db5:	3a ff                	cmp    %bh,%bh
   13db7:	ff                   	(bad)  
   13db8:	e8 13 00 00 20       	call   20013dd0 <_end+0x1ffe8dc0>
   13dbd:	3b ff                	cmp    %edi,%edi
   13dbf:	ff 10                	call   *(%rax)
   13dc1:	14 00                	adc    $0x0,%al
   13dc3:	00 50 3b             	add    %dl,0x3b(%rax)
   13dc6:	ff                   	(bad)  
   13dc7:	ff 2c 14             	ljmp   *(%rsp,%rdx,1)
   13dca:	00 00                	add    %al,(%rax)
   13dcc:	80 3b ff             	cmpb   $0xff,(%rbx)
   13dcf:	ff 44 14 00          	incl   0x0(%rsp,%rdx,1)
   13dd3:	00 b0 3b ff ff 58    	add    %dh,0x58ffff3b(%rax)
   13dd9:	14 00                	adc    $0x0,%al
   13ddb:	00 d0                	add    %dl,%al
   13ddd:	3b ff                	cmp    %edi,%edi
   13ddf:	ff 70 14             	push   0x14(%rax)
   13de2:	00 00                	add    %al,(%rax)
   13de4:	f0 3b ff             	lock cmp %edi,%edi
   13de7:	ff 84 14 00 00 10 3c 	incl   0x3c100000(%rsp,%rdx,1)
   13dee:	ff                   	(bad)  
   13def:	ff 98 14 00 00 40    	lcall  *0x40000014(%rax)
   13df5:	3c ff                	cmp    $0xff,%al
   13df7:	ff                   	(bad)  
   13df8:	b8 14 00 00 30       	mov    $0x30000014,%eax
   13dfd:	40 ff                	rex (bad) 
   13dff:	ff                   	(bad)  
   13e00:	dc 14 00             	fcoml  (%rax,%rax,1)
   13e03:	00 80 41 ff ff 18    	add    %al,0x18ffff41(%rax)
   13e09:	15 00 00 30 42       	adc    $0x42300000,%eax
   13e0e:	ff                   	(bad)  
   13e0f:	ff 54 15 00          	call   *0x0(%rbp,%rdx,1)
   13e13:	00 e0                	add    %ah,%al
   13e15:	45 ff                	rex.RB (bad) 
   13e17:	ff a0 15 00 00 10    	jmp    *0x10000015(%rax)
   13e1d:	46 ff                	rex.RX (bad) 
   13e1f:	ff                   	(bad)  
   13e20:	b8 15 00 00 80       	mov    $0x80000015,%eax
   13e25:	46 ff                	rex.RX (bad) 
   13e27:	ff cc                	dec    %esp
   13e29:	15 00 00 60 48       	adc    $0x48600000,%eax
   13e2e:	ff                   	(bad)  
   13e2f:	ff 04 16             	incl   (%rsi,%rdx,1)
   13e32:	00 00                	add    %al,(%rax)
   13e34:	90                   	nop
   13e35:	4a ff                	rex.WX (bad) 
   13e37:	ff 80 16 00 00 30    	incl   0x30000016(%rax)
   13e3d:	4b ff                	rex.WXB (bad) 
   13e3f:	ff 94 16 00 00 20 4c 	call   *0x4c200000(%rsi,%rdx,1)
   13e46:	ff                   	(bad)  
   13e47:	ff a8 16 00 00 10    	ljmp   *0x10000016(%rax)
   13e4d:	4d ff                	rex.WRB (bad) 
   13e4f:	ff                   	(bad)  
   13e50:	bc 16 00 00 f0       	mov    $0xf0000016,%esp
   13e55:	4e ff                	rex.WRX (bad) 
   13e57:	ff 10                	call   *(%rax)
   13e59:	17                   	(bad)  
   13e5a:	00 00                	add    %al,(%rax)
   13e5c:	f0 4f ff             	lock rex.WRXB (bad) 
   13e5f:	ff 60 17             	jmp    *0x17(%rax)
   13e62:	00 00                	add    %al,(%rax)
   13e64:	20 51 ff             	and    %dl,-0x1(%rcx)
   13e67:	ff 9c 17 00 00 40 51 	lcall  *0x51400000(%rdi,%rdx,1)
   13e6e:	ff                   	(bad)  
   13e6f:	ff b0 17 00 00 e0    	push   -0x1fffffe9(%rax)
   13e75:	51                   	push   %rcx
   13e76:	ff                   	(bad)  
   13e77:	ff                   	(bad)  
   13e78:	dc 17                	fcoml  (%rdi)
   13e7a:	00 00                	add    %al,(%rax)
   13e7c:	b0 52                	mov    $0x52,%al
   13e7e:	ff                   	(bad)  
   13e7f:	ff 48 19             	decl   0x19(%rax)
   13e82:	00 00                	add    %al,(%rax)
   13e84:	d0 52 ff             	rclb   -0x1(%rdx)
   13e87:	ff 18                	lcall  *(%rax)
   13e89:	1a 00                	sbb    (%rax),%al
   13e8b:	00 50 53             	add    %dl,0x53(%rax)
   13e8e:	ff                   	(bad)  
   13e8f:	ff 48 1a             	decl   0x1a(%rax)
   13e92:	00 00                	add    %al,(%rax)
   13e94:	80 53 ff ff          	adcb   $0xff,-0x1(%rbx)
   13e98:	64 1a 00             	sbb    %fs:(%rax),%al
   13e9b:	00 b0 53 ff ff 80    	add    %dh,-0x7f0000ad(%rax)
   13ea1:	1a 00                	sbb    (%rax),%al
   13ea3:	00 d0                	add    %dl,%al
   13ea5:	53                   	push   %rbx
   13ea6:	ff                   	(bad)  
   13ea7:	ff 9c 1a 00 00 00 54 	lcall  *0x54000000(%rdx,%rbx,1)
   13eae:	ff                   	(bad)  
   13eaf:	ff b0 1a 00 00 20    	push   0x2000001a(%rax)
   13eb5:	54                   	push   %rsp
   13eb6:	ff                   	(bad)  
   13eb7:	ff c4                	inc    %esp
   13eb9:	1a 00                	sbb    (%rax),%al
   13ebb:	00 e0                	add    %ah,%al
   13ebd:	54                   	push   %rsp
   13ebe:	ff                   	(bad)  
   13ebf:	ff                   	(bad)  
   13ec0:	d8 1a                	fcomps (%rdx)
   13ec2:	00 00                	add    %al,(%rax)
   13ec4:	a0 55 ff ff ec 1a 00 	movabs 0xc000001aecffff55,%al
   13ecb:	00 c0 
   13ecd:	55                   	push   %rbp
   13ece:	ff                   	(bad)  
   13ecf:	ff 00                	incl   (%rax)
   13ed1:	1b 00                	sbb    (%rax),%eax
   13ed3:	00 80 56 ff ff 14    	add    %al,0x14ffff56(%rax)
   13ed9:	1b 00                	sbb    (%rax),%eax
   13edb:	00 a0 56 ff ff 28    	add    %ah,0x28ffff56(%rax)
   13ee1:	1b 00                	sbb    (%rax),%eax
   13ee3:	00 c0                	add    %al,%al
   13ee5:	56                   	push   %rsi
   13ee6:	ff                   	(bad)  
   13ee7:	ff                   	(bad)  
   13ee8:	3c 1b                	cmp    $0x1b,%al
   13eea:	00 00                	add    %al,(%rax)
   13eec:	80 57 ff ff          	adcb   $0xff,-0x1(%rdi)
   13ef0:	50                   	push   %rax
   13ef1:	1b 00                	sbb    (%rax),%eax
   13ef3:	00 a0 57 ff ff 64    	add    %ah,0x64ffff57(%rax)
   13ef9:	1b 00                	sbb    (%rax),%eax
   13efb:	00 e0                	add    %ah,%al
   13efd:	57                   	push   %rdi
   13efe:	ff                   	(bad)  
   13eff:	ff 90 1b 00 00 20    	call   *0x2000001b(%rax)
   13f05:	5a                   	pop    %rdx
   13f06:	ff                   	(bad)  
   13f07:	ff e0                	jmp    *%rax
   13f09:	1b 00                	sbb    (%rax),%eax
   13f0b:	00 00                	add    %al,(%rax)
   13f0d:	5c                   	pop    %rsp
   13f0e:	ff                   	(bad)  
   13f0f:	ff 10                	call   *(%rax)
   13f11:	1c 00                	sbb    $0x0,%al
   13f13:	00 10                	add    %dl,(%rax)
   13f15:	5c                   	pop    %rsp
   13f16:	ff                   	(bad)  
   13f17:	ff 24 1c             	jmp    *(%rsp,%rbx,1)
   13f1a:	00 00                	add    %al,(%rax)
   13f1c:	20 5c ff ff          	and    %bl,-0x1(%rdi,%rdi,8)
   13f20:	38 1c 00             	cmp    %bl,(%rax,%rax,1)
   13f23:	00 40 5c             	add    %al,0x5c(%rax)
   13f26:	ff                   	(bad)  
   13f27:	ff 4c 1c 00          	decl   0x0(%rsp,%rbx,1)
   13f2b:	00 80 5c ff ff 6c    	add    %al,0x6cffff5c(%rax)
   13f31:	1c 00                	sbb    $0x0,%al
   13f33:	00 c0                	add    %al,%al
   13f35:	5c                   	pop    %rsp
   13f36:	ff                   	(bad)  
   13f37:	ff 8c 1c 00 00 40 5d 	decl   0x5d400000(%rsp,%rbx,1)
   13f3e:	ff                   	(bad)  
   13f3f:	ff b4 1c 00 00 70 5d 	push   0x5d700000(%rsp,%rbx,1)
   13f46:	ff                   	(bad)  
   13f47:	ff c8                	dec    %eax
   13f49:	1c 00                	sbb    $0x0,%al
   13f4b:	00 a0 5d ff ff dc    	add    %ah,-0x230000a3(%rax)
   13f51:	1c 00                	sbb    $0x0,%al
   13f53:	00 d0                	add    %dl,%al
   13f55:	5d                   	pop    %rbp
   13f56:	ff                   	(bad)  
   13f57:	ff f0                	push   %rax
   13f59:	1c 00                	sbb    $0x0,%al
   13f5b:	00 00                	add    %al,(%rax)
   13f5d:	5e                   	pop    %rsi
   13f5e:	ff                   	(bad)  
   13f5f:	ff 04 1d 00 00 70 5e 	incl   0x5e700000(,%rbx,1)
   13f66:	ff                   	(bad)  
   13f67:	ff 18                	lcall  *(%rax)
   13f69:	1d 00 00 00 60       	sbb    $0x60000000,%eax
   13f6e:	ff                   	(bad)  
   13f6f:	ff 5c 1d 00          	lcall  *0x0(%rbp,%rbx,1)
   13f73:	00 c0                	add    %al,%al
   13f75:	60                   	(bad)  
   13f76:	ff                   	(bad)  
   13f77:	ff 90 1d 00 00 d0    	call   *-0x2fffffe3(%rax)
   13f7d:	63 ff                	movsxd %edi,%edi
   13f7f:	ff f4                	push   %rsp
   13f81:	1d 00 00 b0 64       	sbb    $0x64b00000,%eax
   13f86:	ff                   	(bad)  
   13f87:	ff 44 1e 00          	incl   0x0(%rsi,%rbx,1)
   13f8b:	00 c0                	add    %al,%al
   13f8d:	65 ff                	gs (bad) 
   13f8f:	ff 68 1e             	ljmp   *0x1e(%rax)
   13f92:	00 00                	add    %al,(%rax)
   13f94:	10 66 ff             	adc    %ah,-0x1(%rsi)
   13f97:	ff 84 1e 00 00 50 66 	incl   0x66500000(%rsi,%rbx,1)
   13f9e:	ff                   	(bad)  
   13f9f:	ff ac 1e 00 00 30 67 	ljmp   *0x67300000(%rsi,%rbx,1)
   13fa6:	ff                   	(bad)  
   13fa7:	ff                   	(bad)  
   13fa8:	d8 1e                	fcomps (%rsi)
   13faa:	00 00                	add    %al,(%rax)
   13fac:	20 68 ff             	and    %ch,-0x1(%rax)
   13faf:	ff 04 1f             	incl   (%rdi,%rbx,1)
   13fb2:	00 00                	add    %al,(%rax)
   13fb4:	f0 68 ff ff 64 1f    	lock push $0x1f64ffff
   13fba:	00 00                	add    %al,(%rax)
   13fbc:	60                   	(bad)  
   13fbd:	6a ff                	push   $0xffffffffffffffff
   13fbf:	ff 90 1f 00 00 a0    	call   *-0x5fffffe1(%rax)
   13fc5:	6c                   	insb   (%dx),%es:(%rdi)
   13fc6:	ff                   	(bad)  
   13fc7:	ff c0                	inc    %eax
   13fc9:	1f                   	(bad)  
   13fca:	00 00                	add    %al,(%rax)
   13fcc:	10 6d ff             	adc    %ch,-0x1(%rbp)
   13fcf:	ff f4                	push   %rsp
   13fd1:	1f                   	(bad)  
   13fd2:	00 00                	add    %al,(%rax)
   13fd4:	10 6e ff             	adc    %ch,-0x1(%rsi)
   13fd7:	ff 28                	ljmp   *(%rax)
   13fd9:	20 00                	and    %al,(%rax)
   13fdb:	00 60 6e             	add    %ah,0x6e(%rax)
   13fde:	ff                   	(bad)  
   13fdf:	ff 60 20             	jmp    *0x20(%rax)
   13fe2:	00 00                	add    %al,(%rax)
   13fe4:	80 6f ff ff          	subb   $0xff,-0x1(%rdi)
   13fe8:	d8 20                	fsubs  (%rax)
   13fea:	00 00                	add    %al,(%rax)
   13fec:	90                   	nop
   13fed:	70 ff                	jo     13fee <__GNU_EH_FRAME_HDR+0x4ae>
   13fef:	ff 54 21 00          	call   *0x0(%rcx,%riz,1)
   13ff3:	00 80 71 ff ff 84    	add    %al,-0x7b00008f(%rax)
   13ff9:	21 00                	and    %eax,(%rax)
   13ffb:	00 00                	add    %al,(%rax)
   13ffd:	73 ff                	jae    13ffe <__GNU_EH_FRAME_HDR+0x4be>
   13fff:	ff 00                	incl   (%rax)
   14001:	22 00                	and    (%rax),%al
   14003:	00 50 74             	add    %dl,0x74(%rax)
   14006:	ff                   	(bad)  
   14007:	ff 70 22             	push   0x22(%rax)
   1400a:	00 00                	add    %al,(%rax)
   1400c:	40 75 ff             	rex jne 1400e <__GNU_EH_FRAME_HDR+0x4ce>
   1400f:	ff b0 22 00 00 80    	push   -0x7fffffde(%rax)
   14015:	76 ff                	jbe    14016 <__GNU_EH_FRAME_HDR+0x4d6>
   14017:	ff e4                	jmp    *%rsp
   14019:	22 00                	and    (%rax),%al
   1401b:	00 f0                	add    %dh,%al
   1401d:	76 ff                	jbe    1401e <__GNU_EH_FRAME_HDR+0x4de>
   1401f:	ff                   	(bad)  
   14020:	f8                   	clc    
   14021:	22 00                	and    (%rax),%al
   14023:	00 70 77             	add    %dh,0x77(%rax)
   14026:	ff                   	(bad)  
   14027:	ff 0c 23             	decl   (%rbx,%riz,1)
   1402a:	00 00                	add    %al,(%rax)
   1402c:	00 78 ff             	add    %bh,-0x1(%rax)
   1402f:	ff 20                	jmp    *(%rax)
   14031:	23 00                	and    (%rax),%eax
   14033:	00 10                	add    %dl,(%rax)
   14035:	78 ff                	js     14036 <__GNU_EH_FRAME_HDR+0x4f6>
   14037:	ff 34 23             	push   (%rbx,%riz,1)
   1403a:	00 00                	add    %al,(%rax)
   1403c:	20 78 ff             	and    %bh,-0x1(%rax)
   1403f:	ff 48 23             	decl   0x23(%rax)
   14042:	00 00                	add    %al,(%rax)
   14044:	30 78 ff             	xor    %bh,-0x1(%rax)
   14047:	ff 5c 23 00          	lcall  *0x0(%rbx,%riz,1)
   1404b:	00 40 78             	add    %al,0x78(%rax)
   1404e:	ff                   	(bad)  
   1404f:	ff 70 23             	push   0x23(%rax)
   14052:	00 00                	add    %al,(%rax)
   14054:	60                   	(bad)  
   14055:	78 ff                	js     14056 <__GNU_EH_FRAME_HDR+0x516>
   14057:	ff 84 23 00 00 a0 78 	incl   0x78a00000(%rbx,%riz,1)
   1405e:	ff                   	(bad)  
   1405f:	ff a4 23 00 00 d0 7a 	jmp    *0x7ad00000(%rbx,%riz,1)
   14066:	ff                   	(bad)  
   14067:	ff                   	(bad)  
   14068:	d8 23                	fsubs  (%rbx)
   1406a:	00 00                	add    %al,(%rax)
   1406c:	20 7b ff             	and    %bh,-0x1(%rbx)
   1406f:	ff                   	(bad)  
   14070:	ec                   	in     (%dx),%al
   14071:	23 00                	and    (%rax),%eax
   14073:	00 10                	add    %dl,(%rax)
   14075:	7d ff                	jge    14076 <__GNU_EH_FRAME_HDR+0x536>
   14077:	ff                   	(bad)  
   14078:	38 24 00             	cmp    %ah,(%rax,%rax,1)
   1407b:	00 10                	add    %dl,(%rax)
   1407d:	7e ff                	jle    1407e <__GNU_EH_FRAME_HDR+0x53e>
   1407f:	ff 90 24 00 00 30    	call   *0x30000024(%rax)
   14085:	7e ff                	jle    14086 <__GNU_EH_FRAME_HDR+0x546>
   14087:	ff ac 24 00 00 40 7e 	ljmp   *0x7e400000(%rsp)
   1408e:	ff                   	(bad)  
   1408f:	ff c0                	inc    %eax
   14091:	24 00                	and    $0x0,%al
   14093:	00 50 7e             	add    %dl,0x7e(%rax)
   14096:	ff                   	(bad)  
   14097:	ff d4                	call   *%rsp
   14099:	24 00                	and    $0x0,%al
   1409b:	00 60 7e             	add    %ah,0x7e(%rax)
   1409e:	ff                   	(bad)  
   1409f:	ff                   	(bad)  
   140a0:	e8 24 00 00 70       	call   700140c9 <_end+0x6ffe90b9>
   140a5:	7e ff                	jle    140a6 <__GNU_EH_FRAME_HDR+0x566>
   140a7:	ff                   	(bad)  
   140a8:	fc                   	cld    
   140a9:	24 00                	and    $0x0,%al
   140ab:	00 80 7e ff ff 10    	add    %al,0x10ffff7e(%rax)
   140b1:	25 00 00 90 7e       	and    $0x7e900000,%eax
   140b6:	ff                   	(bad)  
   140b7:	ff 28                	ljmp   *(%rax)
   140b9:	25 00 00 50 80       	and    $0x80500000,%eax
   140be:	ff                   	(bad)  
   140bf:	ff 6c 25 00          	ljmp   *0x0(%rbp,%riz,1)
   140c3:	00 50 83             	add    %dl,-0x7d(%rax)
   140c6:	ff                   	(bad)  
   140c7:	ff                   	(bad)  
   140c8:	dc 25 00 00 80 83    	fsubl  -0x7c800000(%rip)        # ffffffff838140ce <_end+0xffffffff837e90be>
   140ce:	ff                   	(bad)  
   140cf:	ff                   	(bad)  
   140d0:	f8                   	clc    
   140d1:	25 00 00 40 84       	and    $0x84400000,%eax
   140d6:	ff                   	(bad)  
   140d7:	ff 34 26             	push   (%rsi,%riz,1)
   140da:	00 00                	add    %al,(%rax)
   140dc:	50                   	push   %rax
   140dd:	84 ff                	test   %bh,%bh
   140df:	ff 48 26             	decl   0x26(%rax)
   140e2:	00 00                	add    %al,(%rax)
   140e4:	10 85 ff ff 84 26    	adc    %al,0x2684ffff(%rbp)
   140ea:	00 00                	add    %al,(%rax)
   140ec:	20 85 ff ff 98 26    	and    %al,0x2698ffff(%rbp)
   140f2:	00 00                	add    %al,(%rax)
   140f4:	e0 85                	loopne 1407b <__GNU_EH_FRAME_HDR+0x53b>
   140f6:	ff                   	(bad)  
   140f7:	ff d4                	call   *%rsp
   140f9:	26 00 00             	es add %al,(%rax)
   140fc:	f0 85 ff             	lock test %edi,%edi
   140ff:	ff                   	(bad)  
   14100:	e8 26 00 00 00       	call   1412b <__GNU_EH_FRAME_HDR+0x5eb>
   14105:	87 ff                	xchg   %edi,%edi
   14107:	ff 34 27             	push   (%rdi,%riz,1)
   1410a:	00 00                	add    %al,(%rax)
   1410c:	10 87 ff ff 48 27    	adc    %al,0x2748ffff(%rdi)
   14112:	00 00                	add    %al,(%rax)
   14114:	f0 87 ff             	lock xchg %edi,%edi
   14117:	ff                   	(bad)  
   14118:	7c 27                	jl     14141 <__GNU_EH_FRAME_HDR+0x601>
   1411a:	00 00                	add    %al,(%rax)
   1411c:	d0 88 ff ff a8 27    	rorb   0x27a8ffff(%rax)
   14122:	00 00                	add    %al,(%rax)
   14124:	c0 89 ff ff ec 27 00 	rorb   $0x0,0x27ecffff(%rcx)
   1412b:	00 d0                	add    %dl,%al
   1412d:	89 ff                	mov    %edi,%edi
   1412f:	ff 00                	incl   (%rax)
   14131:	28 00                	sub    %al,(%rax)
   14133:	00 50 8a             	add    %dl,-0x76(%rax)
   14136:	ff                   	(bad)  
   14137:	ff                   	(bad)  
   14138:	38 28                	cmp    %ch,(%rax)
   1413a:	00 00                	add    %al,(%rax)
   1413c:	c0 8a ff ff 4c 28 00 	rorb   $0x0,0x284cffff(%rdx)
   14143:	00 e0                	add    %ah,%al
   14145:	8b ff                	mov    %edi,%edi
   14147:	ff                   	(bad)  
   14148:	78 28                	js     14172 <__GNU_EH_FRAME_HDR+0x632>
   1414a:	00 00                	add    %al,(%rax)
   1414c:	70 8c                	jo     140da <__GNU_EH_FRAME_HDR+0x59a>
   1414e:	ff                   	(bad)  
   1414f:	ff 94 28 00 00 80 8c 	call   *-0x73800000(%rax,%rbp,1)
   14156:	ff                   	(bad)  
   14157:	ff a8 28 00 00 b0    	ljmp   *-0x4fffffd8(%rax)
   1415d:	94                   	xchg   %eax,%esp
   1415e:	ff                   	(bad)  
   1415f:	ff e4                	jmp    *%rsp
   14161:	28 00                	sub    %al,(%rax)
   14163:	00 a0 95 ff ff 00    	add    %ah,0xffff95(%rax)
   14169:	29 00                	sub    %eax,(%rax)
   1416b:	00 f0                	add    %dh,%al
   1416d:	b0 ff                	mov    $0xff,%al
   1416f:	ff 4c 29 00          	decl   0x0(%rcx,%rbp,1)
   14173:	00 90 b3 ff ff b0    	add    %dl,-0x4f00004d(%rax)
   14179:	29 00                	sub    %eax,(%rax)
   1417b:	00 90 be ff ff 14    	add    %dl,0x14ffffbe(%rax)
   14181:	2a 00                	sub    (%rax),%al
   14183:	00 00                	add    %al,(%rax)
   14185:	bf ff ff 40 2a       	mov    $0x2a40ffff,%edi
   1418a:	00 00                	add    %al,(%rax)
   1418c:	10 c6                	adc    %al,%dh
   1418e:	ff                   	(bad)  
   1418f:	ff a8 2a 00 00 30    	ljmp   *0x3000002a(%rax)
   14195:	c6                   	(bad)  
   14196:	ff                   	(bad)  
   14197:	ff                   	(bad)  
   14198:	bc 2a 00 00 c0       	mov    $0xc000002a,%esp
   1419d:	c6                   	(bad)  
   1419e:	ff                   	(bad)  
   1419f:	ff e0                	jmp    *%rax
   141a1:	2a 00                	sub    (%rax),%al
   141a3:	00 80 c8 ff ff 20    	add    %al,0x20ffffc8(%rax)
   141a9:	2b 00                	sub    (%rax),%eax
   141ab:	00 50 c9             	add    %dl,-0x37(%rax)
   141ae:	ff                   	(bad)  
   141af:	ff 34 2b             	push   (%rbx,%rbp,1)
   141b2:	00 00                	add    %al,(%rax)
   141b4:	70 c9                	jo     1417f <__GNU_EH_FRAME_HDR+0x63f>
   141b6:	ff                   	(bad)  
   141b7:	ff 48 2b             	decl   0x2b(%rax)
   141ba:	00 00                	add    %al,(%rax)
   141bc:	30 ca                	xor    %cl,%dl
   141be:	ff                   	(bad)  
   141bf:	ff 84 2b 00 00 20 cb 	incl   -0x34e00000(%rbx,%rbp,1)
   141c6:	ff                   	(bad)  
   141c7:	ff d0                	call   *%rax
   141c9:	2b 00                	sub    (%rax),%eax
   141cb:	00 40 cb             	add    %al,-0x35(%rax)
   141ce:	ff                   	(bad)  
   141cf:	ff e4                	jmp    *%rsp
   141d1:	2b 00                	sub    (%rax),%eax
   141d3:	00 80 cc ff ff 48    	add    %al,0x48ffffcc(%rax)
   141d9:	2c 00                	sub    $0x0,%al
   141db:	00 80 cd ff ff 8c    	add    %al,-0x73000033(%rax)
   141e1:	2c 00                	sub    $0x0,%al
   141e3:	00 90 cd ff ff a0    	add    %dl,-0x5f000033(%rax)
   141e9:	2c 00                	sub    $0x0,%al
   141eb:	00 e0                	add    %ah,%al
   141ed:	cd ff                	int    $0xff
   141ef:	ff c4                	inc    %esp
   141f1:	2c 00                	sub    $0x0,%al
   141f3:	00 30                	add    %dh,(%rax)
   141f5:	ce                   	(bad)  
   141f6:	ff                   	(bad)  
   141f7:	ff                   	(bad)  
   141f8:	fc                   	cld    
   141f9:	2c 00                	sub    $0x0,%al
   141fb:	00 40 ce             	add    %al,-0x32(%rax)
   141fe:	ff                   	(bad)  
   141ff:	ff 10                	call   *(%rax)
   14201:	2d 00 00 50 ce       	sub    $0xce500000,%eax
   14206:	ff                   	(bad)  
   14207:	ff 28                	ljmp   *(%rax)
   14209:	2d 00 00 60 ce       	sub    $0xce600000,%eax
   1420e:	ff                   	(bad)  
   1420f:	ff 40 2d             	incl   0x2d(%rax)
   14212:	00 00                	add    %al,(%rax)
   14214:	70 ce                	jo     141e4 <__GNU_EH_FRAME_HDR+0x6a4>
   14216:	ff                   	(bad)  
   14217:	ff 5c 2d 00          	lcall  *0x0(%rbp,%rbp,1)
   1421b:	00 80 ce ff ff 78    	add    %al,0x78ffffce(%rax)
   14221:	2d 00 00 a0 ce       	sub    $0xcea00000,%eax
   14226:	ff                   	(bad)  
   14227:	ff 90 2d 00 00 f0    	call   *-0xfffffd3(%rax)
   1422d:	ce                   	(bad)  
   1422e:	ff                   	(bad)  
   1422f:	ff b4 2d 00 00 70 cf 	push   -0x30900000(%rbp,%rbp,1)
   14236:	ff                   	(bad)  
   14237:	ff                   	(bad)  
   14238:	f8                   	clc    
   14239:	2d 00 00 00 d0       	sub    $0xd0000000,%eax
   1423e:	ff                   	(bad)  
   1423f:	ff 40 2e             	incl   0x2e(%rax)
   14242:	00 00                	add    %al,(%rax)
   14244:	a0 d0 ff ff 90 2e 00 	movabs 0x2000002e90ffffd0,%al
   1424b:	00 20 
   1424d:	d1 ff                	sar    %edi
   1424f:	ff                   	(bad)  
   14250:	bc 2e 00 00 d0       	mov    $0xd000002e,%esp
   14255:	d2 ff                	sar    %cl,%bh
   14257:	ff                   	(bad)  
   14258:	e8 2e 00 00 30       	call   3001428b <_end+0x2ffe927b>
   1425d:	d3 ff                	sar    %cl,%edi
   1425f:	ff 00                	incl   (%rax)
   14261:	2f                   	(bad)  
   14262:	00 00                	add    %al,(%rax)
   14264:	d0 d4                	rcl    %ah
   14266:	ff                   	(bad)  
   14267:	ff 2c 2f             	ljmp   *(%rdi,%rbp,1)
   1426a:	00 00                	add    %al,(%rax)
   1426c:	e0 d4                	loopne 14242 <__GNU_EH_FRAME_HDR+0x702>
   1426e:	ff                   	(bad)  
   1426f:	ff 40 2f             	incl   0x2f(%rax)
   14272:	00 00                	add    %al,(%rax)
   14274:	30 d7                	xor    %dl,%bh
   14276:	ff                   	(bad)  
   14277:	ff 74 2f 00          	push   0x0(%rdi,%rbp,1)
   1427b:	00 c0                	add    %al,%al
   1427d:	d8 ff                	fdivr  %st(7),%st
   1427f:	ff a4 2f 00 00 c0 da 	jmp    *-0x25400000(%rdi,%rbp,1)
   14286:	ff                   	(bad)  
   14287:	ff f0                	push   %rax
   14289:	0b 00                	or     (%rax),%eax
   1428b:	00 00                	add    %al,(%rax)
   1428d:	de ff                	fdivrp %st,%st(7)
   1428f:	ff 28                	ljmp   *(%rax)
   14291:	0c 00                	or     $0x0,%al
   14293:	00 a0 df ff ff 98    	add    %ah,-0x67000021(%rax)
   14299:	0c 00                	or     $0x0,%al
   1429b:	00 c0                	add    %al,%al
   1429d:	df ff                	(bad)  
   1429f:	ff                   	(bad)  
   142a0:	38 12                	cmp    %dl,(%rdx)
   142a2:	00 00                	add    %al,(%rax)
   142a4:	d2 e1                	shl    %cl,%cl
   142a6:	ff                   	(bad)  
   142a7:	ff 08                	decl   (%rax)
   142a9:	18 00                	sbb    %al,(%rax)
   142ab:	00 d3                	add    %dl,%bl
   142ad:	e1 ff                	loope  142ae <__GNU_EH_FRAME_HDR+0x76e>
   142af:	ff 1c 18             	lcall  *(%rax,%rbx,1)
   142b2:	00 00                	add    %al,(%rax)
   142b4:	d5                   	(bad)  
   142b5:	e1 ff                	loope  142b6 <__GNU_EH_FRAME_HDR+0x776>
   142b7:	ff 30                	push   (%rax)
   142b9:	18 00                	sbb    %al,(%rax)
   142bb:	00 d7                	add    %dl,%bh
   142bd:	e1 ff                	loope  142be <__GNU_EH_FRAME_HDR+0x77e>
   142bf:	ff 44 18 00          	incl   0x0(%rax,%rbx,1)
   142c3:	00 d9                	add    %bl,%cl
   142c5:	e1 ff                	loope  142c6 <__GNU_EH_FRAME_HDR+0x786>
   142c7:	ff 58 18             	lcall  *0x18(%rax)
   142ca:	00 00                	add    %al,(%rax)
   142cc:	db e1                	fndisi(8087 only) 
   142ce:	ff                   	(bad)  
   142cf:	ff 6c 18 00          	ljmp   *0x0(%rax,%rbx,1)
   142d3:	00 dd                	add    %bl,%ch
   142d5:	e1 ff                	loope  142d6 <__GNU_EH_FRAME_HDR+0x796>
   142d7:	ff 80 18 00 00 df    	incl   -0x20ffffe8(%rax)
   142dd:	e1 ff                	loope  142de <__GNU_EH_FRAME_HDR+0x79e>
   142df:	ff 94 18 00 00 e1 e1 	call   *-0x1e1f0000(%rax,%rbx,1)
   142e6:	ff                   	(bad)  
   142e7:	ff a8 18 00 00 e4    	ljmp   *-0x1bffffe8(%rax)
   142ed:	e1 ff                	loope  142ee <__GNU_EH_FRAME_HDR+0x7ae>
   142ef:	ff                   	(bad)  
   142f0:	bc 18 00 00 e7       	mov    $0xe7000018,%esp
   142f5:	e1 ff                	loope  142f6 <__GNU_EH_FRAME_HDR+0x7b6>
   142f7:	ff d0                	call   *%rax
   142f9:	18 00                	sbb    %al,(%rax)
   142fb:	00 ea                	add    %ch,%dl
   142fd:	e1 ff                	loope  142fe <__GNU_EH_FRAME_HDR+0x7be>
   142ff:	ff e4                	jmp    *%rsp
   14301:	18 00                	sbb    %al,(%rax)
   14303:	00 ed                	add    %ch,%ch
   14305:	e1 ff                	loope  14306 <__GNU_EH_FRAME_HDR+0x7c6>
   14307:	ff                   	(bad)  
   14308:	f8                   	clc    
   14309:	18 00                	sbb    %al,(%rax)
   1430b:	00 f0                	add    %dh,%al
   1430d:	e1 ff                	loope  1430e <__GNU_EH_FRAME_HDR+0x7ce>
   1430f:	ff 0c 19             	decl   (%rcx,%rbx,1)
   14312:	00 00                	add    %al,(%rax)
   14314:	f3 e1 ff             	repz loope 14316 <__GNU_EH_FRAME_HDR+0x7d6>
   14317:	ff 20                	jmp    *(%rax)
   14319:	19 00                	sbb    %eax,(%rax)
   1431b:	00 f6                	add    %dh,%dh
   1431d:	e1 ff                	loope  1431e <__GNU_EH_FRAME_HDR+0x7de>
   1431f:	ff 34 19             	push   (%rcx,%rbx,1)
   14322:	00 00                	add    %al,(%rax)
   14324:	23 e6                	and    %esi,%esp
   14326:	ff                   	(bad)  
   14327:	ff 68 19             	ljmp   *0x19(%rax)
   1432a:	00 00                	add    %al,(%rax)
   1432c:	a3 e8 ff ff 84 19 00 	movabs %eax,0x2400001984ffffe8
   14333:	00 24 
   14335:	e9 ff ff a0 19       	jmp    19a24339 <_end+0x199f9329>
   1433a:	00 00                	add    %al,(%rax)
   1433c:	44 e9 ff ff b4 19    	rex.R jmp 19b64341 <_end+0x19b39331>
   14342:	00 00                	add    %al,(%rax)
   14344:	63 e9                	movsxd %ecx,%ebp
   14346:	ff                   	(bad)  
   14347:	ff c8                	dec    %eax
   14349:	19 00                	sbb    %eax,(%rax)
   1434b:	00 83 e9 ff ff dc    	add    %al,-0x23000017(%rbx)
   14351:	19 00                	sbb    %eax,(%rax)
   14353:	00 a1 e9 ff ff f0    	add    %ah,-0xf000017(%rcx)
   14359:	19 00                	sbb    %eax,(%rax)
   1435b:	00 bf e9 ff ff 04    	add    %bh,0x4ffffe9(%rdi)
   14361:	1a 00                	sbb    (%rax),%al
	...

Disassembly of section .eh_frame:

0000000000014368 <.eh_frame>:
   14368:	14 00                	adc    $0x0,%al
   1436a:	00 00                	add    %al,(%rax)
   1436c:	00 00                	add    %al,(%rax)
   1436e:	00 00                	add    %al,(%rax)
   14370:	01 7a 52             	add    %edi,0x52(%rdx)
   14373:	00 01                	add    %al,(%rcx)
   14375:	78 10                	js     14387 <__GNU_EH_FRAME_HDR+0x847>
   14377:	01 1b                	add    %ebx,(%rbx)
   14379:	0c 07                	or     $0x7,%al
   1437b:	08 90 01 00 00 1c    	or     %dl,0x1c000001(%rax)
   14381:	00 00                	add    %al,(%rax)
   14383:	00 1c 00             	add    %bl,(%rax,%rax,1)
   14386:	00 00                	add    %al,(%rax)
   14388:	db dc                	fcmovnu %st(4),%st
   1438a:	fe                   	(bad)  
   1438b:	ff 64 00 00          	jmp    *0x0(%rax,%rax,1)
   1438f:	00 00                	add    %al,(%rax)
   14391:	4f 0e                	rex.WRXB (bad) 
   14393:	10 72 0a             	adc    %dh,0xa(%rdx)
   14396:	0e                   	(bad)  
   14397:	08 41 0b             	or     %al,0xb(%rcx)
   1439a:	52                   	push   %rdx
   1439b:	0e                   	(bad)  
   1439c:	08 00                	or     %al,(%rax)
   1439e:	00 00                	add    %al,(%rax)
   143a0:	10 00                	adc    %al,(%rax)
   143a2:	00 00                	add    %al,(%rax)
   143a4:	3c 00                	cmp    $0x0,%al
   143a6:	00 00                	add    %al,(%rax)
   143a8:	1f                   	(bad)  
   143a9:	dd fe                	(bad)  
   143ab:	ff 29                	ljmp   *(%rcx)
   143ad:	00 00                	add    %al,(%rax)
   143af:	00 00                	add    %al,(%rax)
   143b1:	00 00                	add    %al,(%rax)
   143b3:	00 10                	add    %dl,(%rax)
   143b5:	00 00                	add    %al,(%rax)
   143b7:	00 50 00             	add    %dl,0x0(%rax)
   143ba:	00 00                	add    %al,(%rax)
   143bc:	34 dd                	xor    $0xdd,%al
   143be:	fe                   	(bad)  
   143bf:	ff 2d 00 00 00 00    	ljmp   *0x0(%rip)        # 143c5 <__GNU_EH_FRAME_HDR+0x885>
   143c5:	00 00                	add    %al,(%rax)
   143c7:	00 24 00             	add    %ah,(%rax,%rax,1)
   143ca:	00 00                	add    %al,(%rax)
   143cc:	64 00 00             	add    %al,%fs:(%rax)
   143cf:	00 30                	add    %dh,(%rax)
   143d1:	cc                   	int3   
   143d2:	fe                   	(bad)  
   143d3:	ff 10                	call   *(%rax)
   143d5:	00 00                	add    %al,(%rax)
   143d7:	00 00                	add    %al,(%rax)
   143d9:	0e                   	(bad)  
   143da:	10 46 0e             	adc    %al,0xe(%rsi)
   143dd:	18 4a 0f             	sbb    %cl,0xf(%rdx)
   143e0:	0b 77 08             	or     0x8(%rdi),%esi
   143e3:	80 00 3f             	addb   $0x3f,(%rax)
   143e6:	1a 3b                	sbb    (%rbx),%bh
   143e8:	2a 33                	sub    (%rbx),%dh
   143ea:	24 22                	and    $0x22,%al
   143ec:	00 00                	add    %al,(%rax)
   143ee:	00 00                	add    %al,(%rax)
   143f0:	14 00                	adc    $0x0,%al
   143f2:	00 00                	add    %al,(%rax)
   143f4:	8c 00                	mov    %es,(%rax)
   143f6:	00 00                	add    %al,(%rax)
   143f8:	18 cc                	sbb    %cl,%ah
   143fa:	fe                   	(bad)  
   143fb:	ff 10                	call   *(%rax)
	...
   14405:	00 00                	add    %al,(%rax)
   14407:	00 34 00             	add    %dh,(%rax,%rax,1)
   1440a:	00 00                	add    %al,(%rax)
   1440c:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
   1440d:	00 00                	add    %al,(%rax)
   1440f:	00 f6                	add    %dh,%dh
   14411:	fb                   	sti    
   14412:	fe                   	(bad)  
   14413:	ff                   	(bad)  
   14414:	fa                   	cli    
   14415:	00 00                	add    %al,(%rax)
   14417:	00 00                	add    %al,(%rax)
   14419:	46 0e                	rex.RX (bad) 
   1441b:	10 8d 02 42 0e 18    	adc    %cl,0x180e4202(%rbp)
   14421:	8c 03                	mov    %es,(%rbx)
   14423:	41 0e                	rex.B (bad) 
   14425:	20 86 04 41 0e 28    	and    %al,0x280e4104(%rsi)
   1442b:	83 05 44 0e 50 02 e2 	addl   $0xffffffe2,0x2500e44(%rip)        # 2515276 <_end+0x24ea266>
   14432:	0e                   	(bad)  
   14433:	28 44 0e 20          	sub    %al,0x20(%rsi,%rcx,1)
   14437:	41 0e                	rex.B (bad) 
   14439:	18 42 0e             	sbb    %al,0xe(%rdx)
   1443c:	10 42 0e             	adc    %al,0xe(%rdx)
   1443f:	08 20                	or     %ah,(%rax)
   14441:	00 00                	add    %al,(%rax)
   14443:	00 dc                	add    %bl,%ah
   14445:	00 00                	add    %al,(%rax)
   14447:	00 b8 fc fe ff 62    	add    %bh,0x62fffefc(%rax)
   1444d:	00 00                	add    %al,(%rax)
   1444f:	00 00                	add    %al,(%rax)
   14451:	4a 0e                	rex.WX (bad) 
   14453:	10 83 02 4c 0e 20    	adc    %al,0x200e4c02(%rbx)
   14459:	02 44 0e 10          	add    0x10(%rsi,%rcx,1),%al
   1445d:	41 0e                	rex.B (bad) 
   1445f:	08 41 c3             	or     %al,-0x3d(%rcx)
   14462:	00 00                	add    %al,(%rax)
   14464:	20 00                	and    %al,(%rax)
   14466:	00 00                	add    %al,(%rax)
   14468:	00 01                	add    %al,(%rcx)
   1446a:	00 00                	add    %al,(%rax)
   1446c:	f6 fc                	idiv   %ah
   1446e:	fe                   	(bad)  
   1446f:	ff 62 00             	jmp    *0x0(%rdx)
   14472:	00 00                	add    %al,(%rax)
   14474:	00 4a 0e             	add    %cl,0xe(%rdx)
   14477:	10 83 02 4c 0e 20    	adc    %al,0x200e4c02(%rbx)
   1447d:	02 44 0e 10          	add    0x10(%rsi,%rcx,1),%al
   14481:	41 0e                	rex.B (bad) 
   14483:	08 41 c3             	or     %al,-0x3d(%rcx)
   14486:	00 00                	add    %al,(%rax)
   14488:	34 00                	xor    $0x0,%al
   1448a:	00 00                	add    %al,(%rax)
   1448c:	24 01                	and    $0x1,%al
   1448e:	00 00                	add    %al,(%rax)
   14490:	34 fd                	xor    $0xfd,%al
   14492:	fe                   	(bad)  
   14493:	ff                   	(bad)  
   14494:	e9 00 00 00 00       	jmp    14499 <__GNU_EH_FRAME_HDR+0x959>
   14499:	46 0e                	rex.RX (bad) 
   1449b:	10 8d 02 42 0e 18    	adc    %cl,0x180e4202(%rbp)
   144a1:	8c 03                	mov    %es,(%rbx)
   144a3:	41 0e                	rex.B (bad) 
   144a5:	20 86 04 43 0e 28    	and    %al,0x280e4304(%rsi)
   144ab:	83 05 47 0e 50 02 cf 	addl   $0xffffffcf,0x2500e47(%rip)        # 25152f9 <_end+0x24ea2e9>
   144b2:	0e                   	(bad)  
   144b3:	28 41 0e             	sub    %al,0xe(%rcx)
   144b6:	20 41 0e             	and    %al,0xe(%rcx)
   144b9:	18 42 0e             	sbb    %al,0xe(%rdx)
   144bc:	10 42 0e             	adc    %al,0xe(%rdx)
   144bf:	08 34 00             	or     %dh,(%rax,%rax,1)
   144c2:	00 00                	add    %al,(%rax)
   144c4:	5c                   	pop    %rsp
   144c5:	01 00                	add    %eax,(%rax)
   144c7:	00 e5                	add    %ah,%ch
   144c9:	fd                   	std    
   144ca:	fe                   	(bad)  
   144cb:	ff 11                	call   *(%rcx)
   144cd:	01 00                	add    %eax,(%rax)
   144cf:	00 00                	add    %al,(%rax)
   144d1:	46 0e                	rex.RX (bad) 
   144d3:	10 8d 02 42 0e 18    	adc    %cl,0x180e4202(%rbp)
   144d9:	8c 03                	mov    %es,(%rbx)
   144db:	44 0e                	rex.R (bad) 
   144dd:	20 86 04 41 0e 28    	and    %al,0x280e4104(%rsi)
   144e3:	83 05 47 0e 50 02 f6 	addl   $0xfffffff6,0x2500e47(%rip)        # 2515331 <_end+0x24ea321>
   144ea:	0e                   	(bad)  
   144eb:	28 41 0e             	sub    %al,0xe(%rcx)
   144ee:	20 41 0e             	and    %al,0xe(%rcx)
   144f1:	18 42 0e             	sbb    %al,0xe(%rdx)
   144f4:	10 42 0e             	adc    %al,0xe(%rdx)
   144f7:	08 10                	or     %dl,(%rax)
   144f9:	00 00                	add    %al,(%rax)
   144fb:	00 94 01 00 00 c0 fe 	add    %dl,-0x1400000(%rcx,%rax,1)
   14502:	fe                   	(bad)  
   14503:	ff 94 00 00 00 00 00 	call   *0x0(%rax,%rax,1)
   1450a:	00 00                	add    %al,(%rax)
   1450c:	30 00                	xor    %al,(%rax)
   1450e:	00 00                	add    %al,(%rax)
   14510:	a8 01                	test   $0x1,%al
   14512:	00 00                	add    %al,(%rax)
   14514:	4c ff                	rex.WR (bad) 
   14516:	fe                   	(bad)  
   14517:	ff 4d 11             	decl   0x11(%rbp)
   1451a:	00 00                	add    %al,(%rax)
   1451c:	00 45 0e             	add    %al,0xe(%rbp)
   1451f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
   14525:	54                   	push   %rsp
   14526:	8f 03                	pop    (%rbx)
   14528:	8e 04 8d 05 8c 06 83 	mov    -0x7cf973fb(,%rcx,4),%es
   1452f:	07                   	(bad)  
   14530:	03 2d 10 0a 0c 07    	add    0x70c0a10(%rip),%ebp        # 70d4f46 <_end+0x70a9f36>
   14536:	08 47 0b             	or     %al,0xb(%rdi)
   14539:	00 00                	add    %al,(%rax)
   1453b:	00 00                	add    %al,(%rax)
   1453d:	00 00                	add    %al,(%rax)
   1453f:	00 6c 00 00          	add    %ch,0x0(%rax,%rax,1)
   14543:	00 dc                	add    %bl,%ah
   14545:	01 00                	add    %eax,(%rax)
   14547:	00 68 10             	add    %ch,0x10(%rax)
   1454a:	ff                   	(bad)  
   1454b:	ff 03                	incl   (%rbx)
   1454d:	02 00                	add    (%rax),%al
   1454f:	00 00                	add    %al,(%rax)
   14551:	4b 0e                	rex.WXB (bad) 
   14553:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   14559:	8e 03                	mov    (%rbx),%es
   1455b:	45 0e                	rex.RB (bad) 
   1455d:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
   14563:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff863153aa <_end+0xffffffff862ea39a>
   14569:	06                   	(bad)  
   1456a:	41 0e                	rex.B (bad) 
   1456c:	38 83 07 47 0e 40    	cmp    %al,0x400e4707(%rbx)
   14572:	02 a1 0a 0e 38 43    	add    0x43380e0a(%rcx),%ah
   14578:	0e                   	(bad)  
   14579:	30 41 0e             	xor    %al,0xe(%rcx)
   1457c:	28 42 0e             	sub    %al,0xe(%rdx)
   1457f:	20 42 0e             	and    %al,0xe(%rdx)
   14582:	18 42 0e             	sbb    %al,0xe(%rdx)
   14585:	10 42 0e             	adc    %al,0xe(%rdx)
   14588:	08 43 0b             	or     %al,0xb(%rbx)
   1458b:	65 0a 0e             	or     %gs:(%rsi),%cl
   1458e:	38 41 0e             	cmp    %al,0xe(%rcx)
   14591:	30 41 0e             	xor    %al,0xe(%rcx)
   14594:	28 42 0e             	sub    %al,0xe(%rdx)
   14597:	20 42 0e             	and    %al,0xe(%rdx)
   1459a:	18 42 0e             	sbb    %al,0xe(%rdx)
   1459d:	10 42 0e             	adc    %al,0xe(%rdx)
   145a0:	08 41 0b             	or     %al,0xb(%rcx)
   145a3:	03 00                	add    (%rax),%eax
   145a5:	01 0e                	add    %ecx,(%rsi)
   145a7:	08 c3                	or     %al,%bl
   145a9:	c6                   	(bad)  
   145aa:	cc                   	int3   
   145ab:	cd ce                	int    $0xce
   145ad:	cf                   	iret   
   145ae:	00 00                	add    %al,(%rax)
   145b0:	34 00                	xor    $0x0,%al
   145b2:	00 00                	add    %al,(%rax)
   145b4:	4c 02 00             	rex.WR add (%rax),%r8b
   145b7:	00 08                	add    %cl,(%rax)
   145b9:	12 ff                	adc    %bh,%bh
   145bb:	ff 33                	push   (%rbx)
   145bd:	00 00                	add    %al,(%rax)
   145bf:	00 00                	add    %al,(%rax)
   145c1:	45 0e                	rex.RB (bad) 
   145c3:	10 86 02 44 0e 18    	adc    %al,0x180e4402(%rsi)
   145c9:	83 03 47             	addl   $0x47,(%rbx)
   145cc:	0e                   	(bad)  
   145cd:	20 4d 0a             	and    %cl,0xa(%rbp)
   145d0:	0e                   	(bad)  
   145d1:	18 41 0e             	sbb    %al,0xe(%rcx)
   145d4:	10 41 0e             	adc    %al,0xe(%rcx)
   145d7:	08 41 0b             	or     %al,0xb(%rcx)
   145da:	44 0e                	rex.R (bad) 
   145dc:	18 49 0e             	sbb    %cl,0xe(%rcx)
   145df:	10 41 0e             	adc    %al,0xe(%rcx)
   145e2:	08 00                	or     %al,(%rax)
   145e4:	00 00                	add    %al,(%rax)
   145e6:	00 00                	add    %al,(%rax)
   145e8:	48 00 00             	rex.W add %al,(%rax)
   145eb:	00 84 02 00 00 10 12 	add    %al,0x12100000(%rdx,%rax,1)
   145f2:	ff                   	(bad)  
   145f3:	ff 85 00 00 00 00    	incl   0x0(%rbp)
   145f9:	46 0e                	rex.RX (bad) 
   145fb:	10 8e 02 45 0e 18    	adc    %cl,0x180e4502(%rsi)
   14601:	8d 03                	lea    (%rbx),%eax
   14603:	4a 0e                	rex.WX (bad) 
   14605:	20 8c 04 44 0e 28 86 	and    %cl,-0x79d7f1bc(%rsp,%rax,1)
   1460c:	05 43 0e 30 83       	add    $0x83300e43,%eax
   14611:	06                   	(bad)  
   14612:	78 0a                	js     1461e <__GNU_EH_FRAME_HDR+0xade>
   14614:	0e                   	(bad)  
   14615:	28 43 0e             	sub    %al,0xe(%rbx)
   14618:	20 42 0e             	and    %al,0xe(%rdx)
   1461b:	18 42 0e             	sbb    %al,0xe(%rdx)
   1461e:	10 42 0e             	adc    %al,0xe(%rdx)
   14621:	08 43 0b             	or     %al,0xb(%rbx)
   14624:	5b                   	pop    %rbx
   14625:	0e                   	(bad)  
   14626:	28 43 0e             	sub    %al,0xe(%rbx)
   14629:	20 42 0e             	and    %al,0xe(%rdx)
   1462c:	18 42 0e             	sbb    %al,0xe(%rdx)
   1462f:	10 42 0e             	adc    %al,0xe(%rdx)
   14632:	08 00                	or     %al,(%rax)
   14634:	48 00 00             	rex.W add %al,(%rax)
   14637:	00 d0                	add    %dl,%al
   14639:	02 00                	add    (%rax),%al
   1463b:	00 54 12 ff          	add    %dl,-0x1(%rdx,%rdx,1)
   1463f:	ff 85 00 00 00 00    	incl   0x0(%rbp)
   14645:	46 0e                	rex.RX (bad) 
   14647:	10 8e 02 45 0e 18    	adc    %cl,0x180e4502(%rsi)
   1464d:	8d 03                	lea    (%rbx),%eax
   1464f:	4a 0e                	rex.WX (bad) 
   14651:	20 8c 04 44 0e 28 86 	and    %cl,-0x79d7f1bc(%rsp,%rax,1)
   14658:	05 43 0e 30 83       	add    $0x83300e43,%eax
   1465d:	06                   	(bad)  
   1465e:	78 0a                	js     1466a <__GNU_EH_FRAME_HDR+0xb2a>
   14660:	0e                   	(bad)  
   14661:	28 43 0e             	sub    %al,0xe(%rbx)
   14664:	20 42 0e             	and    %al,0xe(%rdx)
   14667:	18 42 0e             	sbb    %al,0xe(%rdx)
   1466a:	10 42 0e             	adc    %al,0xe(%rdx)
   1466d:	08 43 0b             	or     %al,0xb(%rbx)
   14670:	5b                   	pop    %rbx
   14671:	0e                   	(bad)  
   14672:	28 43 0e             	sub    %al,0xe(%rbx)
   14675:	20 42 0e             	and    %al,0xe(%rdx)
   14678:	18 42 0e             	sbb    %al,0xe(%rdx)
   1467b:	10 42 0e             	adc    %al,0xe(%rdx)
   1467e:	08 00                	or     %al,(%rax)
   14680:	10 00                	adc    %al,(%rax)
   14682:	00 00                	add    %al,(%rax)
   14684:	1c 03                	sbb    $0x3,%al
   14686:	00 00                	add    %al,(%rax)
   14688:	98                   	cwtl   
   14689:	12 ff                	adc    %bh,%bh
   1468b:	ff 25 00 00 00 00    	jmp    *0x0(%rip)        # 14691 <__GNU_EH_FRAME_HDR+0xb51>
   14691:	00 00                	add    %al,(%rax)
   14693:	00 10                	add    %dl,(%rax)
   14695:	00 00                	add    %al,(%rax)
   14697:	00 30                	add    %dh,(%rax)
   14699:	03 00                	add    (%rax),%eax
   1469b:	00 b4 12 ff ff 21 00 	add    %dh,0x21ffff(%rdx,%rdx,1)
   146a2:	00 00                	add    %al,(%rax)
   146a4:	00 00                	add    %al,(%rax)
   146a6:	00 00                	add    %al,(%rax)
   146a8:	14 00                	adc    $0x0,%al
   146aa:	00 00                	add    %al,(%rax)
   146ac:	44 03 00             	add    (%rax),%r8d
   146af:	00 d0                	add    %dl,%al
   146b1:	12 ff                	adc    %bh,%bh
   146b3:	ff 32                	push   (%rdx)
   146b5:	00 00                	add    %al,(%rax)
   146b7:	00 00                	add    %al,(%rax)
   146b9:	48 0e                	rex.W (bad) 
   146bb:	10 69 0e             	adc    %ch,0xe(%rcx)
   146be:	08 00                	or     %al,(%rax)
   146c0:	18 00                	sbb    %al,(%rax)
   146c2:	00 00                	add    %al,(%rax)
   146c4:	5c                   	pop    %rsp
   146c5:	03 00                	add    (%rax),%eax
   146c7:	00 f8                	add    %bh,%al
   146c9:	12 ff                	adc    %bh,%bh
   146cb:	ff 1e                	lcall  *(%rsi)
   146cd:	00 00                	add    %al,(%rax)
   146cf:	00 00                	add    %al,(%rax)
   146d1:	45 0e                	rex.RB (bad) 
   146d3:	10 83 02 58 0e 08    	adc    %al,0x80e5802(%rbx)
   146d9:	00 00                	add    %al,(%rax)
   146db:	00 10                	add    %dl,(%rax)
   146dd:	00 00                	add    %al,(%rax)
   146df:	00 78 03             	add    %bh,0x3(%rax)
   146e2:	00 00                	add    %al,(%rax)
   146e4:	fc                   	cld    
   146e5:	12 ff                	adc    %bh,%bh
   146e7:	ff 09                	decl   (%rcx)
   146e9:	00 00                	add    %al,(%rax)
   146eb:	00 00                	add    %al,(%rax)
   146ed:	00 00                	add    %al,(%rax)
   146ef:	00 24 00             	add    %ah,(%rax,%rax,1)
   146f2:	00 00                	add    %al,(%rax)
   146f4:	8c 03                	mov    %es,(%rbx)
   146f6:	00 00                	add    %al,(%rax)
   146f8:	f8                   	clc    
   146f9:	12 ff                	adc    %bh,%bh
   146fb:	ff 25 00 00 00 00    	jmp    *0x0(%rip)        # 14701 <__GNU_EH_FRAME_HDR+0xbc1>
   14701:	45 0e                	rex.RB (bad) 
   14703:	10 86 02 41 0e 18    	adc    %al,0x180e4102(%rsi)
   14709:	83 03 47             	addl   $0x47,(%rbx)
   1470c:	0e                   	(bad)  
   1470d:	20 53 0e             	and    %dl,0xe(%rbx)
   14710:	18 43 0e             	sbb    %al,0xe(%rbx)
   14713:	10 41 0e             	adc    %al,0xe(%rcx)
   14716:	08 00                	or     %al,(%rax)
   14718:	14 00                	adc    $0x0,%al
   1471a:	00 00                	add    %al,(%rax)
   1471c:	b4 03                	mov    $0x3,%ah
   1471e:	00 00                	add    %al,(%rax)
   14720:	00 13                	add    %dl,(%rbx)
   14722:	ff                   	(bad)  
   14723:	ff 17                	call   *(%rdi)
   14725:	00 00                	add    %al,(%rax)
   14727:	00 00                	add    %al,(%rax)
   14729:	48 0e                	rex.W (bad) 
   1472b:	10 4e 0e             	adc    %cl,0xe(%rsi)
   1472e:	08 00                	or     %al,(%rax)
   14730:	34 00                	xor    $0x0,%al
   14732:	00 00                	add    %al,(%rax)
   14734:	cc                   	int3   
   14735:	03 00                	add    (%rax),%eax
   14737:	00 c8                	add    %cl,%al
   14739:	ce                   	(bad)  
   1473a:	ff                   	(bad)  
   1473b:	ff 31                	push   (%rcx)
   1473d:	03 00                	add    (%rax),%eax
   1473f:	00 00                	add    %al,(%rax)
   14741:	46 0e                	rex.RX (bad) 
   14743:	10 8c 02 41 0e 18 86 	adc    %cl,-0x79e7f1bf(%rdx,%rax,1)
   1474a:	03 41 0e             	add    0xe(%rcx),%eax
   1474d:	20 83 04 47 0e e0    	and    %al,-0x1ff1b8fc(%rbx)
   14753:	01 03                	add    %eax,(%rbx)
   14755:	c7 02 0a 0e 20 41    	movl   $0x41200e0a,(%rdx)
   1475b:	0e                   	(bad)  
   1475c:	18 41 0e             	sbb    %al,0xe(%rcx)
   1475f:	10 42 0e             	adc    %al,0xe(%rdx)
   14762:	08 46 0b             	or     %al,0xb(%rsi)
   14765:	00 00                	add    %al,(%rax)
   14767:	00 2c 00             	add    %ch,(%rax,%rax,1)
   1476a:	00 00                	add    %al,(%rax)
   1476c:	04 04                	add    $0x4,%al
   1476e:	00 00                	add    %al,(%rax)
   14770:	d0 d1                	rcl    %cl
   14772:	ff                   	(bad)  
   14773:	ff 99 01 00 00 00    	lcall  *0x1(%rcx)
   14779:	46 0e                	rex.RX (bad) 
   1477b:	10 8c 02 44 0e 18 86 	adc    %cl,-0x79e7f1bc(%rdx,%rax,1)
   14782:	03 44 0e 20          	add    0x20(%rsi,%rcx,1),%eax
   14786:	83 04 59 0a          	addl   $0xa,(%rcx,%rbx,2)
   1478a:	0e                   	(bad)  
   1478b:	18 41 0e             	sbb    %al,0xe(%rcx)
   1478e:	10 42 0e             	adc    %al,0xe(%rdx)
   14791:	08 46 0b             	or     %al,0xb(%rsi)
   14794:	00 00                	add    %al,(%rax)
   14796:	00 00                	add    %al,(%rax)
   14798:	3c 00                	cmp    $0x0,%al
   1479a:	00 00                	add    %al,(%rax)
   1479c:	34 04                	xor    $0x4,%al
   1479e:	00 00                	add    %al,(%rax)
   147a0:	a0 12 ff ff 19 01 00 	movabs 0x119ffff12,%al
   147a7:	00 00 
   147a9:	46 0e                	rex.RX (bad) 
   147ab:	10 8c 02 44 0e 18 86 	adc    %cl,-0x79e7f1bc(%rdx,%rax,1)
   147b2:	03 44 0e 20          	add    0x20(%rsi,%rcx,1),%eax
   147b6:	83 04 02 cc          	addl   $0xffffffcc,(%rdx,%rax,1)
   147ba:	0a 0e                	or     (%rsi),%cl
   147bc:	18 41 0e             	sbb    %al,0xe(%rcx)
   147bf:	10 44 0e 08          	adc    %al,0x8(%rsi,%rcx,1)
   147c3:	49 0b 4e 0a          	or     0xa(%r14),%rcx
   147c7:	0e                   	(bad)  
   147c8:	18 46 0e             	sbb    %al,0xe(%rsi)
   147cb:	10 42 0e             	adc    %al,0xe(%rdx)
   147ce:	08 42 0b             	or     %al,0xb(%rdx)
   147d1:	00 00                	add    %al,(%rax)
   147d3:	00 00                	add    %al,(%rax)
   147d5:	00 00                	add    %al,(%rax)
   147d7:	00 14 00             	add    %dl,(%rax,%rax,1)
   147da:	00 00                	add    %al,(%rax)
   147dc:	74 04                	je     147e2 <__GNU_EH_FRAME_HDR+0xca2>
   147de:	00 00                	add    %al,(%rax)
   147e0:	00 d3                	add    %dl,%bl
   147e2:	ff                   	(bad)  
   147e3:	ff 1b                	lcall  *(%rbx)
   147e5:	00 00                	add    %al,(%rax)
   147e7:	00 00                	add    %al,(%rax)
   147e9:	48 0e                	rex.W (bad) 
   147eb:	10 4f 0e             	adc    %cl,0xe(%rdi)
   147ee:	08 00                	or     %al,(%rax)
   147f0:	10 00                	adc    %al,(%rax)
   147f2:	00 00                	add    %al,(%rax)
   147f4:	8c 04 00             	mov    %es,(%rax,%rax,1)
   147f7:	00 08                	add    %cl,(%rax)
   147f9:	d8 fe                	fdivr  %st(6),%st
   147fb:	ff 0f                	decl   (%rdi)
   147fd:	00 00                	add    %al,(%rax)
   147ff:	00 00                	add    %al,(%rax)
   14801:	00 00                	add    %al,(%rax)
   14803:	00 10                	add    %dl,(%rax)
   14805:	00 00                	add    %al,(%rax)
   14807:	00 a0 04 00 00 54    	add    %ah,0x54000004(%rax)
   1480d:	13 ff                	adc    %edi,%edi
   1480f:	ff 52 00             	call   *0x0(%rdx)
   14812:	00 00                	add    %al,(%rax)
   14814:	00 00                	add    %al,(%rax)
   14816:	00 00                	add    %al,(%rax)
   14818:	10 00                	adc    %al,(%rax)
   1481a:	00 00                	add    %al,(%rax)
   1481c:	b4 04                	mov    $0x4,%ah
   1481e:	00 00                	add    %al,(%rax)
   14820:	a0 13 ff ff 53 00 00 	movabs 0x53ffff13,%al
   14827:	00 00 
   14829:	00 00                	add    %al,(%rax)
   1482b:	00 1c 00             	add    %bl,(%rax,%rax,1)
   1482e:	00 00                	add    %al,(%rax)
   14830:	c8 04 00 00          	enter  $0x4,$0x0
   14834:	ec                   	in     (%dx),%al
   14835:	13 ff                	adc    %edi,%edi
   14837:	ff d7                	call   *%rdi
   14839:	00 00                	add    %al,(%rax)
   1483b:	00 00                	add    %al,(%rax)
   1483d:	45 0e                	rex.RB (bad) 
   1483f:	10 83 02 47 0e 20    	adc    %al,0x200e4702(%rbx)
   14845:	02 c6                	add    %dh,%al
   14847:	0e                   	(bad)  
   14848:	10 44 0e 08          	adc    %al,0x8(%rsi,%rcx,1)
   1484c:	14 00                	adc    $0x0,%al
   1484e:	00 00                	add    %al,(%rax)
   14850:	e8 04 00 00 ac       	call   ffffffffac014859 <_end+0xffffffffabfe9849>
   14855:	14 ff                	adc    $0xff,%al
   14857:	ff 5c 00 00          	lcall  *0x0(%rax,%rax,1)
   1485b:	00 00                	add    %al,(%rax)
   1485d:	48 0e                	rex.W (bad) 
   1485f:	10 02                	adc    %al,(%rdx)
   14861:	53                   	push   %rbx
   14862:	0e                   	(bad)  
   14863:	08 38                	or     %bh,(%rax)
   14865:	00 00                	add    %al,(%rax)
   14867:	00 00                	add    %al,(%rax)
   14869:	05 00 00 f4 14       	add    $0x14f40000,%eax
   1486e:	ff                   	(bad)  
   1486f:	ff 2f                	ljmp   *(%rdi)
   14871:	01 00                	add    %eax,(%rax)
   14873:	00 00                	add    %al,(%rax)
   14875:	46 0e                	rex.RX (bad) 
   14877:	10 8d 02 42 0e 18    	adc    %cl,0x180e4202(%rbp)
   1487d:	8c 03                	mov    %es,(%rbx)
   1487f:	41 0e                	rex.B (bad) 
   14881:	20 86 04 41 0e 28    	and    %al,0x280e4104(%rsi)
   14887:	83 05 44 0e 40 02 8a 	addl   $0xffffff8a,0x2400e44(%rip)        # 24156d2 <_end+0x23ea6c2>
   1488e:	0a 0e                	or     (%rsi),%cl
   14890:	28 43 0e             	sub    %al,0xe(%rbx)
   14893:	20 41 0e             	and    %al,0xe(%rcx)
   14896:	18 42 0e             	sbb    %al,0xe(%rdx)
   14899:	10 42 0e             	adc    %al,0xe(%rdx)
   1489c:	08 48 0b             	or     %cl,0xb(%rax)
   1489f:	00 10                	add    %dl,(%rax)
   148a1:	00 00                	add    %al,(%rax)
   148a3:	00 3c 05 00 00 e8 15 	add    %bh,0x15e80000(,%rax,1)
   148aa:	ff                   	(bad)  
   148ab:	ff 1e                	lcall  *(%rsi)
   148ad:	00 00                	add    %al,(%rax)
   148af:	00 00                	add    %al,(%rax)
   148b1:	00 00                	add    %al,(%rax)
   148b3:	00 18                	add    %bl,(%rax)
   148b5:	00 00                	add    %al,(%rax)
   148b7:	00 50 05             	add    %dl,0x5(%rax)
   148ba:	00 00                	add    %al,(%rax)
   148bc:	f4                   	hlt    
   148bd:	15 ff ff 23 00       	adc    $0x23ffff,%eax
   148c2:	00 00                	add    %al,(%rax)
   148c4:	00 45 0e             	add    %al,0xe(%rbp)
   148c7:	10 83 02 5d 0e 08    	adc    %al,0x80e5d02(%rbx)
   148cd:	00 00                	add    %al,(%rax)
   148cf:	00 1c 00             	add    %bl,(%rax,%rax,1)
   148d2:	00 00                	add    %al,(%rax)
   148d4:	6c                   	insb   (%dx),%es:(%rdi)
   148d5:	05 00 00 08 16       	add    $0x16080000,%eax
   148da:	ff                   	(bad)  
   148db:	ff 22                	jmp    *(%rdx)
   148dd:	00 00                	add    %al,(%rax)
   148df:	00 00                	add    %al,(%rax)
   148e1:	45 0e                	rex.RB (bad) 
   148e3:	10 83 02 5c 0e 08    	adc    %al,0x80e5c02(%rbx)
   148e9:	00 00                	add    %al,(%rax)
   148eb:	00 00                	add    %al,(%rax)
   148ed:	00 00                	add    %al,(%rax)
   148ef:	00 38                	add    %bh,(%rax)
   148f1:	00 00                	add    %al,(%rax)
   148f3:	00 8c 05 00 00 18 16 	add    %cl,0x16180000(%rbp,%rax,1)
   148fa:	ff                   	(bad)  
   148fb:	ff b7 00 00 00 00    	push   0x0(%rdi)
   14901:	42 0e                	rex.X (bad) 
   14903:	10 8d 02 45 0e 18    	adc    %cl,0x180e4502(%rbp)
   14909:	8c 03                	mov    %es,(%rbx)
   1490b:	41 0e                	rex.B (bad) 
   1490d:	20 86 04 41 0e 28    	and    %al,0x280e4104(%rsi)
   14913:	83 05 44 0e 30 02 9a 	addl   $0xffffff9a,0x2300e44(%rip)        # 231575e <_end+0x22ea74e>
   1491a:	0a 0e                	or     (%rsi),%cl
   1491c:	28 41 0e             	sub    %al,0xe(%rcx)
   1491f:	20 41 0e             	and    %al,0xe(%rcx)
   14922:	18 42 0e             	sbb    %al,0xe(%rdx)
   14925:	10 42 0e             	adc    %al,0xe(%rdx)
   14928:	08 43 0b             	or     %al,0xb(%rbx)
   1492b:	00 54 00 00          	add    %dl,0x0(%rax,%rax,1)
   1492f:	00 c8                	add    %cl,%al
   14931:	05 00 00 9c 16       	add    $0x169c0000,%eax
   14936:	ff                   	(bad)  
   14937:	ff d6                	call   *%rsi
   14939:	01 00                	add    %eax,(%rax)
   1493b:	00 00                	add    %al,(%rax)
   1493d:	4f 0e                	rex.WRXB (bad) 
   1493f:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   14945:	8e 03                	mov    (%rbx),%es
   14947:	42 0e                	rex.X (bad) 
   14949:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   1494f:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff86315799 <_end+0xffffffff862ea789>
   14955:	06                   	(bad)  
   14956:	44 0e                	rex.R (bad) 
   14958:	38 83 07 47 0e 40    	cmp    %al,0x400e4707(%rbx)
   1495e:	02 50 0a             	add    0xa(%rax),%dl
   14961:	0e                   	(bad)  
   14962:	38 41 0e             	cmp    %al,0xe(%rcx)
   14965:	30 41 0e             	xor    %al,0xe(%rcx)
   14968:	28 42 0e             	sub    %al,0xe(%rdx)
   1496b:	20 42 0e             	and    %al,0xe(%rdx)
   1496e:	18 42 0e             	sbb    %al,0xe(%rdx)
   14971:	10 42 0e             	adc    %al,0xe(%rdx)
   14974:	08 42 0b             	or     %al,0xb(%rdx)
   14977:	03 50 01             	add    0x1(%rax),%edx
   1497a:	0e                   	(bad)  
   1497b:	08 c3                	or     %al,%bl
   1497d:	c6                   	(bad)  
   1497e:	cc                   	int3   
   1497f:	cd ce                	int    $0xce
   14981:	cf                   	iret   
   14982:	00 00                	add    %al,(%rax)
   14984:	10 00                	adc    %al,(%rax)
   14986:	00 00                	add    %al,(%rax)
   14988:	20 06                	and    %al,(%rsi)
   1498a:	00 00                	add    %al,(%rax)
   1498c:	24 18                	and    $0x18,%al
   1498e:	ff                   	(bad)  
   1498f:	ff 53 00             	call   *0x0(%rbx)
   14992:	00 00                	add    %al,(%rax)
   14994:	00 00                	add    %al,(%rax)
   14996:	00 00                	add    %al,(%rax)
   14998:	18 00                	sbb    %al,(%rax)
   1499a:	00 00                	add    %al,(%rax)
   1499c:	34 06                	xor    $0x6,%al
   1499e:	00 00                	add    %al,(%rax)
   149a0:	70 18                	jo     149ba <__GNU_EH_FRAME_HDR+0xe7a>
   149a2:	ff                   	(bad)  
   149a3:	ff 5c 00 00          	lcall  *0x0(%rax,%rax,1)
   149a7:	00 00                	add    %al,(%rax)
   149a9:	48 0e                	rex.W (bad) 
   149ab:	30 79 0a             	xor    %bh,0xa(%rcx)
   149ae:	0e                   	(bad)  
   149af:	08 47 0b             	or     %al,0xb(%rdi)
   149b2:	00 00                	add    %al,(%rax)
   149b4:	10 00                	adc    %al,(%rax)
   149b6:	00 00                	add    %al,(%rax)
   149b8:	50                   	push   %rax
   149b9:	06                   	(bad)  
   149ba:	00 00                	add    %al,(%rax)
   149bc:	b4 18                	mov    $0x18,%ah
   149be:	ff                   	(bad)  
   149bf:	ff 6b 00             	ljmp   *0x0(%rbx)
   149c2:	00 00                	add    %al,(%rax)
   149c4:	00 00                	add    %al,(%rax)
   149c6:	00 00                	add    %al,(%rax)
   149c8:	10 00                	adc    %al,(%rax)
   149ca:	00 00                	add    %al,(%rax)
   149cc:	64 06                	fs (bad) 
   149ce:	00 00                	add    %al,(%rax)
   149d0:	10 19                	adc    %bl,(%rcx)
   149d2:	ff                   	(bad)  
   149d3:	ff 5b 00             	lcall  *0x0(%rbx)
   149d6:	00 00                	add    %al,(%rax)
   149d8:	00 00                	add    %al,(%rax)
   149da:	00 00                	add    %al,(%rax)
   149dc:	40 00 00             	rex add %al,(%rax)
   149df:	00 78 06             	add    %bh,0x6(%rax)
   149e2:	00 00                	add    %al,(%rax)
   149e4:	5c                   	pop    %rsp
   149e5:	19 ff                	sbb    %edi,%edi
   149e7:	ff                   	(bad)  
   149e8:	bd 01 00 00 00       	mov    $0x1,%ebp
   149ed:	46 0e                	rex.RX (bad) 
   149ef:	10 8e 02 42 0e 18    	adc    %cl,0x180e4202(%rsi)
   149f5:	8d 03                	lea    (%rbx),%eax
   149f7:	42 0e                	rex.X (bad) 
   149f9:	20 8c 04 41 0e 28 86 	and    %cl,-0x79d7f1bf(%rsp,%rax,1)
   14a00:	05 41 0e 30 83       	add    $0x83300e41,%eax
   14a05:	06                   	(bad)  
   14a06:	47 0e                	rex.RXB (bad) 
   14a08:	40 02 b0 0a 0e 30 41 	add    0x41300e0a(%rax),%sil
   14a0f:	0e                   	(bad)  
   14a10:	28 41 0e             	sub    %al,0xe(%rcx)
   14a13:	20 42 0e             	and    %al,0xe(%rdx)
   14a16:	18 42 0e             	sbb    %al,0xe(%rdx)
   14a19:	10 42 0e             	adc    %al,0xe(%rdx)
   14a1c:	08 45 0b             	or     %al,0xb(%rbp)
   14a1f:	00 30                	add    %dh,(%rax)
   14a21:	00 00                	add    %al,(%rax)
   14a23:	00 bc 06 00 00 d8 1a 	add    %bh,0x1ad80000(%rsi,%rax,1)
   14a2a:	ff                   	(bad)  
   14a2b:	ff 5c 00 00          	lcall  *0x0(%rax,%rax,1)
   14a2f:	00 00                	add    %al,(%rax)
   14a31:	45 0e                	rex.RB (bad) 
   14a33:	10 86 02 43 0e 18    	adc    %al,0x180e4302(%rsi)
   14a39:	83 03 44             	addl   $0x44,(%rbx)
   14a3c:	0e                   	(bad)  
   14a3d:	20 7a 0a             	and    %bh,0xa(%rdx)
   14a40:	0e                   	(bad)  
   14a41:	18 43 0e             	sbb    %al,0xe(%rbx)
   14a44:	10 41 0e             	adc    %al,0xe(%rcx)
   14a47:	08 46 0b             	or     %al,0xb(%rsi)
   14a4a:	44 0e                	rex.R (bad) 
   14a4c:	18 46 0e             	sbb    %al,0xe(%rsi)
   14a4f:	10 41 0e             	adc    %al,0xe(%rcx)
   14a52:	08 00                	or     %al,(%rax)
   14a54:	40 00 00             	rex add %al,(%rax)
   14a57:	00 f0                	add    %dh,%al
   14a59:	06                   	(bad)  
   14a5a:	00 00                	add    %al,(%rax)
   14a5c:	04 1b                	add    $0x1b,%al
   14a5e:	ff                   	(bad)  
   14a5f:	ff ce                	dec    %esi
   14a61:	00 00                	add    %al,(%rax)
   14a63:	00 00                	add    %al,(%rax)
   14a65:	4f 0e                	rex.WRXB (bad) 
   14a67:	10 8d 02 47 0e 18    	adc    %cl,0x180e4702(%rbp)
   14a6d:	8c 03                	mov    %es,(%rbx)
   14a6f:	44 0e                	rex.R (bad) 
   14a71:	20 86 04 41 0e 28    	and    %al,0x280e4104(%rsi)
   14a77:	83 05 44 0e 30 73 0a 	addl   $0xa,0x73300e44(%rip)        # 733158c2 <_end+0x732ea8b2>
   14a7e:	0e                   	(bad)  
   14a7f:	28 41 0e             	sub    %al,0xe(%rcx)
   14a82:	20 41 0e             	and    %al,0xe(%rcx)
   14a85:	18 42 0e             	sbb    %al,0xe(%rdx)
   14a88:	10 42 0e             	adc    %al,0xe(%rdx)
   14a8b:	08 48 0b             	or     %cl,0xb(%rax)
   14a8e:	02 68 0e             	add    0xe(%rax),%ch
   14a91:	08 c3                	or     %al,%bl
   14a93:	c6                   	(bad)  
   14a94:	cc                   	int3   
   14a95:	cd 00                	int    $0x0
   14a97:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
   14a9b:	00 34 07             	add    %dh,(%rdi,%rax,1)
   14a9e:	00 00                	add    %al,(%rax)
   14aa0:	90                   	nop
   14aa1:	1b ff                	sbb    %edi,%edi
   14aa3:	ff 19                	lcall  *(%rcx)
   14aa5:	01 00                	add    %eax,(%rax)
   14aa7:	00 00                	add    %al,(%rax)
   14aa9:	46 0e                	rex.RX (bad) 
   14aab:	10 8c 02 41 0e 18 86 	adc    %cl,-0x79e7f1bf(%rdx,%rax,1)
   14ab2:	03 41 0e             	add    0xe(%rcx),%eax
   14ab5:	20 83 04 02 6c 0a    	and    %al,0xa6c0204(%rbx)
   14abb:	0e                   	(bad)  
   14abc:	18 41 0e             	sbb    %al,0xe(%rcx)
   14abf:	10 42 0e             	adc    %al,0xe(%rdx)
   14ac2:	08 49 0b             	or     %cl,0xb(%rcx)
   14ac5:	02 5f 0a             	add    0xa(%rdi),%bl
   14ac8:	0e                   	(bad)  
   14ac9:	18 41 0e             	sbb    %al,0xe(%rcx)
   14acc:	10 42 0e             	adc    %al,0xe(%rdx)
   14acf:	08 46 0b             	or     %al,0xb(%rsi)
   14ad2:	57                   	push   %rdi
   14ad3:	0a 0e                	or     (%rsi),%cl
   14ad5:	18 41 0e             	sbb    %al,0xe(%rcx)
   14ad8:	10 45 0e             	adc    %al,0xe(%rbp)
   14adb:	08 4b 0b             	or     %cl,0xb(%rbx)
   14ade:	00 00                	add    %al,(%rax)
   14ae0:	24 00                	and    $0x0,%al
   14ae2:	00 00                	add    %al,(%rax)
   14ae4:	7c 07                	jl     14aed <__GNU_EH_FRAME_HDR+0xfad>
   14ae6:	00 00                	add    %al,(%rax)
   14ae8:	68 1c ff ff 3b       	push   $0x3bffff1c
   14aed:	00 00                	add    %al,(%rax)
   14aef:	00 00                	add    %al,(%rax)
   14af1:	45 0e                	rex.RB (bad) 
   14af3:	10 86 02 44 0e 18    	adc    %al,0x180e4402(%rsi)
   14af9:	83 03 44             	addl   $0x44,(%rbx)
   14afc:	0e                   	(bad)  
   14afd:	20 69 0e             	and    %ch,0xe(%rcx)
   14b00:	18 43 0e             	sbb    %al,0xe(%rbx)
   14b03:	10 41 0e             	adc    %al,0xe(%rcx)
   14b06:	08 00                	or     %al,(%rax)
   14b08:	10 00                	adc    %al,(%rax)
   14b0a:	00 00                	add    %al,(%rax)
   14b0c:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
   14b0d:	07                   	(bad)  
   14b0e:	00 00                	add    %al,(%rax)
   14b10:	80 1c ff ff          	sbbb   $0xff,(%rdi,%rdi,8)
   14b14:	07                   	(bad)  
   14b15:	00 00                	add    %al,(%rax)
   14b17:	00 00                	add    %al,(%rax)
   14b19:	00 00                	add    %al,(%rax)
   14b1b:	00 28                	add    %ch,(%rax)
   14b1d:	00 00                	add    %al,(%rax)
   14b1f:	00 b8 07 00 00 7c    	add    %bh,0x7c000007(%rax)
   14b25:	1c ff                	sbb    $0xff,%al
   14b27:	ff c7                	inc    %edi
   14b29:	00 00                	add    %al,(%rax)
   14b2b:	00 00                	add    %al,(%rax)
   14b2d:	41 0e                	rex.B (bad) 
   14b2f:	10 86 02 41 0e 18    	adc    %al,0x180e4102(%rsi)
   14b35:	83 03 47             	addl   $0x47,(%rbx)
   14b38:	0e                   	(bad)  
   14b39:	30 02                	xor    %al,(%rdx)
   14b3b:	5b                   	pop    %rbx
   14b3c:	0a 0e                	or     (%rsi),%cl
   14b3e:	18 41 0e             	sbb    %al,0xe(%rcx)
   14b41:	10 41 0e             	adc    %al,0xe(%rcx)
   14b44:	08 4a 0b             	or     %cl,0xb(%rdx)
   14b47:	00 54 00 00          	add    %dl,0x0(%rax,%rax,1)
   14b4b:	00 e4                	add    %ah,%ah
   14b4d:	07                   	(bad)  
   14b4e:	00 00                	add    %al,(%rax)
   14b50:	20 1d ff ff db 00    	and    %bl,0xdbffff(%rip)        # dd4b55 <_end+0xda9b45>
   14b56:	00 00                	add    %al,(%rax)
   14b58:	00 4b 0e             	add    %cl,0xe(%rbx)
   14b5b:	10 8e 02 42 0e 18    	adc    %cl,0x180e4202(%rsi)
   14b61:	8d 03                	lea    (%rbx),%eax
   14b63:	45 0e                	rex.RB (bad) 
   14b65:	20 8c 04 44 0e 28 86 	and    %cl,-0x79d7f1bc(%rsp,%rax,1)
   14b6c:	05 41 0e 30 83       	add    $0x83300e41,%eax
   14b71:	06                   	(bad)  
   14b72:	02 7a 0a             	add    0xa(%rdx),%bh
   14b75:	0e                   	(bad)  
   14b76:	28 41 0e             	sub    %al,0xe(%rcx)
   14b79:	20 42 0e             	and    %al,0xe(%rdx)
   14b7c:	18 42 0e             	sbb    %al,0xe(%rdx)
   14b7f:	10 42 0e             	adc    %al,0xe(%rdx)
   14b82:	08 48 0b             	or     %cl,0xb(%rax)
   14b85:	41 0a 0e             	or     (%r14),%cl
   14b88:	28 43 0e             	sub    %al,0xe(%rbx)
   14b8b:	20 42 0e             	and    %al,0xe(%rdx)
   14b8e:	18 42 0e             	sbb    %al,0xe(%rdx)
   14b91:	10 42 0e             	adc    %al,0xe(%rdx)
   14b94:	08 46 0b             	or     %al,0xb(%rsi)
   14b97:	68 0e 08 c3 c6       	push   $0xffffffffc6c3080e
   14b9c:	cc                   	int3   
   14b9d:	cd ce                	int    $0xce
   14b9f:	00 5c 00 00          	add    %bl,0x0(%rax,%rax,1)
   14ba3:	00 3c 08             	add    %bh,(%rax,%rcx,1)
   14ba6:	00 00                	add    %al,(%rax)
   14ba8:	a8 1d                	test   $0x1d,%al
   14baa:	ff                   	(bad)  
   14bab:	ff                   	(bad)  
   14bac:	bc 01 00 00 00       	mov    $0x1,%esp
   14bb1:	46 0e                	rex.RX (bad) 
   14bb3:	10 8d 02 42 0e 18    	adc    %cl,0x180e4202(%rbp)
   14bb9:	8c 03                	mov    %es,(%rbx)
   14bbb:	41 0e                	rex.B (bad) 
   14bbd:	20 86 04 44 0e 28    	and    %al,0x280e4404(%rsi)
   14bc3:	83 05 46 0e 30 02 97 	addl   $0xffffff97,0x2300e46(%rip)        # 2315a10 <_end+0x22eaa00>
   14bca:	0a 0e                	or     (%rsi),%cl
   14bcc:	28 44 0e 20          	sub    %al,0x20(%rsi,%rcx,1)
   14bd0:	41 0e                	rex.B (bad) 
   14bd2:	18 42 0e             	sbb    %al,0xe(%rdx)
   14bd5:	10 42 0e             	adc    %al,0xe(%rdx)
   14bd8:	08 45 0b             	or     %al,0xb(%rbp)
   14bdb:	4e 0a 0e             	rex.WRX or (%rsi),%r9b
   14bde:	28 44 0e 20          	sub    %al,0x20(%rsi,%rcx,1)
   14be2:	41 0e                	rex.B (bad) 
   14be4:	18 42 0e             	sbb    %al,0xe(%rdx)
   14be7:	10 42 0e             	adc    %al,0xe(%rdx)
   14bea:	08 49 0b             	or     %cl,0xb(%rcx)
   14bed:	53                   	push   %rbx
   14bee:	0a 0e                	or     (%rsi),%cl
   14bf0:	28 47 0e             	sub    %al,0xe(%rdi)
   14bf3:	20 44 0e 18          	and    %al,0x18(%rsi,%rcx,1)
   14bf7:	42 0e                	rex.X (bad) 
   14bf9:	10 42 0e             	adc    %al,0xe(%rdx)
   14bfc:	08 46 0b             	or     %al,0xb(%rsi)
   14bff:	00 10                	add    %dl,(%rax)
   14c01:	00 00                	add    %al,(%rax)
   14c03:	00 9c 08 00 00 08 1f 	add    %bl,0x1f080000(%rax,%rcx,1)
   14c0a:	ff                   	(bad)  
   14c0b:	ff 05 00 00 00 00    	incl   0x0(%rip)        # 14c11 <__GNU_EH_FRAME_HDR+0x10d1>
   14c11:	00 00                	add    %al,(%rax)
   14c13:	00 10                	add    %dl,(%rax)
   14c15:	00 00                	add    %al,(%rax)
   14c17:	00 b0 08 00 00 04    	add    %dh,0x4000008(%rax)
   14c1d:	1f                   	(bad)  
   14c1e:	ff                   	(bad)  
   14c1f:	ff 07                	incl   (%rdi)
   14c21:	00 00                	add    %al,(%rax)
   14c23:	00 00                	add    %al,(%rax)
   14c25:	00 00                	add    %al,(%rax)
   14c27:	00 10                	add    %dl,(%rax)
   14c29:	00 00                	add    %al,(%rax)
   14c2b:	00 c4                	add    %al,%ah
   14c2d:	08 00                	or     %al,(%rax)
   14c2f:	00 00                	add    %al,(%rax)
   14c31:	1f                   	(bad)  
   14c32:	ff                   	(bad)  
   14c33:	ff 05 00 00 00 00    	incl   0x0(%rip)        # 14c39 <__GNU_EH_FRAME_HDR+0x10f9>
   14c39:	00 00                	add    %al,(%rax)
   14c3b:	00 10                	add    %dl,(%rax)
   14c3d:	00 00                	add    %al,(%rax)
   14c3f:	00 d8                	add    %bl,%al
   14c41:	08 00                	or     %al,(%rax)
   14c43:	00 fc                	add    %bh,%ah
   14c45:	1e                   	(bad)  
   14c46:	ff                   	(bad)  
   14c47:	ff 07                	incl   (%rdi)
   14c49:	00 00                	add    %al,(%rax)
   14c4b:	00 00                	add    %al,(%rax)
   14c4d:	00 00                	add    %al,(%rax)
   14c4f:	00 10                	add    %dl,(%rax)
   14c51:	00 00                	add    %al,(%rax)
   14c53:	00 ec                	add    %ch,%ah
   14c55:	08 00                	or     %al,(%rax)
   14c57:	00 f8                	add    %bh,%al
   14c59:	1e                   	(bad)  
   14c5a:	ff                   	(bad)  
   14c5b:	ff 05 00 00 00 00    	incl   0x0(%rip)        # 14c61 <__GNU_EH_FRAME_HDR+0x1121>
   14c61:	00 00                	add    %al,(%rax)
   14c63:	00 10                	add    %dl,(%rax)
   14c65:	00 00                	add    %al,(%rax)
   14c67:	00 00                	add    %al,(%rax)
   14c69:	09 00                	or     %eax,(%rax)
   14c6b:	00 f4                	add    %dh,%ah
   14c6d:	1e                   	(bad)  
   14c6e:	ff                   	(bad)  
   14c6f:	ff 05 00 00 00 00    	incl   0x0(%rip)        # 14c75 <__GNU_EH_FRAME_HDR+0x1135>
   14c75:	00 00                	add    %al,(%rax)
   14c77:	00 10                	add    %dl,(%rax)
   14c79:	00 00                	add    %al,(%rax)
   14c7b:	00 14 09             	add    %dl,(%rcx,%rcx,1)
   14c7e:	00 00                	add    %al,(%rax)
   14c80:	f0 1e                	lock (bad) 
   14c82:	ff                   	(bad)  
   14c83:	ff 05 00 00 00 00    	incl   0x0(%rip)        # 14c89 <__GNU_EH_FRAME_HDR+0x1149>
   14c89:	00 00                	add    %al,(%rax)
   14c8b:	00 10                	add    %dl,(%rax)
   14c8d:	00 00                	add    %al,(%rax)
   14c8f:	00 28                	add    %ch,(%rax)
   14c91:	09 00                	or     %eax,(%rax)
   14c93:	00 ec                	add    %ch,%ah
   14c95:	1e                   	(bad)  
   14c96:	ff                   	(bad)  
   14c97:	ff 05 00 00 00 00    	incl   0x0(%rip)        # 14c9d <__GNU_EH_FRAME_HDR+0x115d>
   14c9d:	00 00                	add    %al,(%rax)
   14c9f:	00 48 00             	add    %cl,0x0(%rax)
   14ca2:	00 00                	add    %al,(%rax)
   14ca4:	3c 09                	cmp    $0x9,%al
   14ca6:	00 00                	add    %al,(%rax)
   14ca8:	e8 1e ff ff 5f       	call   60014bcb <_end+0x5ffe9bbb>
   14cad:	02 00                	add    (%rax),%al
   14caf:	00 00                	add    %al,(%rax)
   14cb1:	46 0e                	rex.RX (bad) 
   14cb3:	10 8f 02 4c 0e 18    	adc    %cl,0x180e4c02(%rdi)
   14cb9:	8e 03                	mov    (%rbx),%es
   14cbb:	46 0e                	rex.RX (bad) 
   14cbd:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   14cc3:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff86315b0d <_end+0xffffffff862eaafd>
   14cc9:	06                   	(bad)  
   14cca:	44 0e                	rex.R (bad) 
   14ccc:	38 83 07 44 0e 70    	cmp    %al,0x700e4407(%rbx)
   14cd2:	03 38                	add    (%rax),%edi
   14cd4:	01 0a                	add    %ecx,(%rdx)
   14cd6:	0e                   	(bad)  
   14cd7:	38 41 0e             	cmp    %al,0xe(%rcx)
   14cda:	30 41 0e             	xor    %al,0xe(%rcx)
   14cdd:	28 42 0e             	sub    %al,0xe(%rdx)
   14ce0:	20 42 0e             	and    %al,0xe(%rdx)
   14ce3:	18 42 0e             	sbb    %al,0xe(%rdx)
   14ce6:	10 42 0e             	adc    %al,0xe(%rdx)
   14ce9:	08 48 0b             	or     %cl,0xb(%rax)
   14cec:	20 00                	and    %al,(%rax)
   14cee:	00 00                	add    %al,(%rax)
   14cf0:	88 09                	mov    %cl,(%rcx)
   14cf2:	00 00                	add    %al,(%rax)
   14cf4:	fc                   	cld    
   14cf5:	20 ff                	and    %bh,%bh
   14cf7:	ff 23                	jmp    *(%rbx)
   14cf9:	02 00                	add    (%rax),%al
   14cfb:	00 00                	add    %al,(%rax)
   14cfd:	45 0e                	rex.RB (bad) 
   14cff:	10 83 02 47 0e 80    	adc    %al,-0x7ff1b8fe(%rbx)
   14d05:	01 02                	add    %eax,(%rdx)
   14d07:	41 0a 0e             	or     (%r14),%cl
   14d0a:	10 41 0e             	adc    %al,0xe(%rcx)
   14d0d:	08 42 0b             	or     %al,0xb(%rdx)
   14d10:	28 00                	sub    %al,(%rax)
   14d12:	00 00                	add    %al,(%rax)
   14d14:	ac                   	lods   %ds:(%rsi),%al
   14d15:	09 00                	or     %eax,(%rax)
   14d17:	00 08                	add    %cl,(%rax)
   14d19:	23 ff                	and    %edi,%edi
   14d1b:	ff                   	(bad)  
   14d1c:	df 00                	filds  (%rax)
   14d1e:	00 00                	add    %al,(%rax)
   14d20:	00 45 0e             	add    %al,0xe(%rbp)
   14d23:	10 86 02 41 0e 18    	adc    %al,0x180e4102(%rsi)
   14d29:	83 03 47             	addl   $0x47,(%rbx)
   14d2c:	0e                   	(bad)  
   14d2d:	20 02                	and    %al,(%rdx)
   14d2f:	bc 0a 0e 18 43       	mov    $0x43180e0a,%esp
   14d34:	0e                   	(bad)  
   14d35:	10 41 0e             	adc    %al,0xe(%rcx)
   14d38:	08 41 0b             	or     %al,0xb(%rcx)
   14d3b:	00 38                	add    %bh,(%rax)
   14d3d:	00 00                	add    %al,(%rax)
   14d3f:	00 d8                	add    %bl,%al
   14d41:	09 00                	or     %eax,(%rax)
   14d43:	00 bc 23 ff ff df 00 	add    %bh,0xdfffff(%rbx,%riz,1)
   14d4a:	00 00                	add    %al,(%rax)
   14d4c:	00 4d 0e             	add    %cl,0xe(%rbp)
   14d4f:	10 8c 02 41 0e 18 86 	adc    %cl,-0x79e7f1bf(%rdx,%rax,1)
   14d56:	03 41 0e             	add    0xe(%rcx),%eax
   14d59:	20 83 04 02 97 0a    	and    %al,0xa970204(%rbx)
   14d5f:	0e                   	(bad)  
   14d60:	18 43 0e             	sbb    %al,0xe(%rbx)
   14d63:	10 42 0e             	adc    %al,0xe(%rdx)
   14d66:	08 45 0b             	or     %al,0xb(%rbp)
   14d69:	58                   	pop    %rax
   14d6a:	0a 0e                	or     (%rsi),%cl
   14d6c:	18 46 0e             	sbb    %al,0xe(%rsi)
   14d6f:	10 42 0e             	adc    %al,0xe(%rdx)
   14d72:	08 48 0b             	or     %cl,0xb(%rax)
   14d75:	00 00                	add    %al,(%rax)
   14d77:	00 5c 00 00          	add    %bl,0x0(%rax,%rax,1)
   14d7b:	00 14 0a             	add    %dl,(%rdx,%rcx,1)
   14d7e:	00 00                	add    %al,(%rax)
   14d80:	80 cd ff             	or     $0xff,%ch
   14d83:	ff b1 01 00 00 00    	push   0x1(%rcx)
   14d89:	46 0e                	rex.RX (bad) 
   14d8b:	10 8d 02 45 0e 18    	adc    %cl,0x180e4502(%rbp)
   14d91:	8c 03                	mov    %es,(%rbx)
   14d93:	44 0e                	rex.R (bad) 
   14d95:	20 86 04 43 0e 28    	and    %al,0x280e4304(%rsi)
   14d9b:	83 05 46 0e 40 6a 0a 	addl   $0xa,0x6a400e46(%rip)        # 6a415be8 <_end+0x6a3eabd8>
   14da2:	0e                   	(bad)  
   14da3:	28 41 0e             	sub    %al,0xe(%rcx)
   14da6:	20 41 0e             	and    %al,0xe(%rcx)
   14da9:	18 42 0e             	sbb    %al,0xe(%rdx)
   14dac:	10 42 0e             	adc    %al,0xe(%rdx)
   14daf:	08 48 0b             	or     %cl,0xb(%rax)
   14db2:	6a 0a                	push   $0xa
   14db4:	0e                   	(bad)  
   14db5:	28 41 0e             	sub    %al,0xe(%rcx)
   14db8:	20 41 0e             	and    %al,0xe(%rcx)
   14dbb:	18 42 0e             	sbb    %al,0xe(%rdx)
   14dbe:	10 42 0e             	adc    %al,0xe(%rdx)
   14dc1:	08 48 0b             	or     %cl,0xb(%rax)
   14dc4:	44 0a 0e             	or     (%rsi),%r9b
   14dc7:	28 46 0e             	sub    %al,0xe(%rsi)
   14dca:	20 41 0e             	and    %al,0xe(%rcx)
   14dcd:	18 42 0e             	sbb    %al,0xe(%rdx)
   14dd0:	10 42 0e             	adc    %al,0xe(%rdx)
   14dd3:	08 49 0b             	or     %cl,0xb(%rcx)
   14dd6:	00 00                	add    %al,(%rax)
   14dd8:	10 00                	adc    %al,(%rax)
   14dda:	00 00                	add    %al,(%rax)
   14ddc:	74 0a                	je     14de8 <__GNU_EH_FRAME_HDR+0x12a8>
   14dde:	00 00                	add    %al,(%rax)
   14de0:	00 24 ff             	add    %ah,(%rdi,%rdi,8)
   14de3:	ff 2e                	ljmp   *(%rsi)
   14de5:	00 00                	add    %al,(%rax)
   14de7:	00 00                	add    %al,(%rax)
   14de9:	00 00                	add    %al,(%rax)
   14deb:	00 18                	add    %bl,(%rax)
   14ded:	00 00                	add    %al,(%rax)
   14def:	00 88 0a 00 00 1c    	add    %cl,0x1c00000a(%rax)
   14df5:	24 ff                	and    $0xff,%al
   14df7:	ff                   	(bad)  
   14df8:	3b 00                	cmp    (%rax),%eax
   14dfa:	00 00                	add    %al,(%rax)
   14dfc:	00 45 0e             	add    %al,0xe(%rbp)
   14dff:	10 83 02 75 0e 08    	adc    %al,0x80e7502(%rbx)
   14e05:	00 00                	add    %al,(%rax)
   14e07:	00 2c 00             	add    %ch,(%rax,%rax,1)
   14e0a:	00 00                	add    %al,(%rax)
   14e0c:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
   14e0d:	0a 00                	or     (%rax),%al
   14e0f:	00 40 24             	add    %al,0x24(%rax)
   14e12:	ff                   	(bad)  
   14e13:	ff                   	(bad)  
   14e14:	bc 00 00 00 00       	mov    $0x0,%esp
   14e19:	45 0e                	rex.RB (bad) 
   14e1b:	10 86 02 44 0e 18    	adc    %al,0x180e4402(%rsi)
   14e21:	83 03 44             	addl   $0x44,(%rbx)
   14e24:	0e                   	(bad)  
   14e25:	30 02                	xor    %al,(%rdx)
   14e27:	43 0a 0e             	rex.XB or (%r14),%cl
   14e2a:	18 46 0e             	sbb    %al,0xe(%rsi)
   14e2d:	10 41 0e             	adc    %al,0xe(%rcx)
   14e30:	08 49 0b             	or     %cl,0xb(%rcx)
   14e33:	00 00                	add    %al,(%rax)
   14e35:	00 00                	add    %al,(%rax)
   14e37:	00 10                	add    %dl,(%rax)
   14e39:	00 00                	add    %al,(%rax)
   14e3b:	00 d4                	add    %dl,%ah
   14e3d:	0a 00                	or     (%rax),%al
   14e3f:	00 d0                	add    %dl,%al
   14e41:	24 ff                	and    $0xff,%al
   14e43:	ff 10                	call   *(%rax)
   14e45:	00 00                	add    %al,(%rax)
   14e47:	00 00                	add    %al,(%rax)
   14e49:	00 00                	add    %al,(%rax)
   14e4b:	00 14 00             	add    %dl,(%rax,%rax,1)
   14e4e:	00 00                	add    %al,(%rax)
   14e50:	e8 0a 00 00 cc       	call   ffffffffcc014e5f <_end+0xffffffffcbfe9e4f>
   14e55:	24 ff                	and    $0xff,%al
   14e57:	ff 22                	jmp    *(%rdx)
   14e59:	00 00                	add    %al,(%rax)
   14e5b:	00 00                	add    %al,(%rax)
   14e5d:	48 0e                	rex.W (bad) 
   14e5f:	10 54 0e 08          	adc    %dl,0x8(%rsi,%rcx,1)
   14e63:	00 14 00             	add    %dl,(%rax,%rax,1)
   14e66:	00 00                	add    %al,(%rax)
   14e68:	00 0b                	add    %cl,(%rbx)
   14e6a:	00 00                	add    %al,(%rax)
   14e6c:	e4 24                	in     $0x24,%al
   14e6e:	ff                   	(bad)  
   14e6f:	ff 20                	jmp    *(%rax)
   14e71:	00 00                	add    %al,(%rax)
   14e73:	00 00                	add    %al,(%rax)
   14e75:	48 0e                	rex.W (bad) 
   14e77:	10 54 0e 08          	adc    %dl,0x8(%rsi,%rcx,1)
   14e7b:	00 10                	add    %dl,(%rax)
   14e7d:	00 00                	add    %al,(%rax)
   14e7f:	00 18                	add    %bl,(%rax)
   14e81:	0b 00                	or     (%rax),%eax
   14e83:	00 ec                	add    %ch,%ah
   14e85:	24 ff                	and    $0xff,%al
   14e87:	ff 61 00             	jmp    *0x0(%rcx)
   14e8a:	00 00                	add    %al,(%rax)
   14e8c:	00 00                	add    %al,(%rax)
   14e8e:	00 00                	add    %al,(%rax)
   14e90:	10 00                	adc    %al,(%rax)
   14e92:	00 00                	add    %al,(%rax)
   14e94:	2c 0b                	sub    $0xb,%al
   14e96:	00 00                	add    %al,(%rax)
   14e98:	48 25 ff ff 53 00    	and    $0x53ffff,%rax
   14e9e:	00 00                	add    %al,(%rax)
   14ea0:	00 00                	add    %al,(%rax)
   14ea2:	00 00                	add    %al,(%rax)
   14ea4:	14 00                	adc    $0x0,%al
   14ea6:	00 00                	add    %al,(%rax)
   14ea8:	40 0b 00             	rex or (%rax),%eax
   14eab:	00 94 25 ff ff 20 00 	add    %dl,0x20ffff(%rbp,%riz,1)
   14eb2:	00 00                	add    %al,(%rax)
   14eb4:	00 48 0e             	add    %cl,0xe(%rax)
   14eb7:	10 54 0e 08          	adc    %dl,0x8(%rsi,%rcx,1)
   14ebb:	00 14 00             	add    %dl,(%rax,%rax,1)
   14ebe:	00 00                	add    %al,(%rax)
   14ec0:	58                   	pop    %rax
   14ec1:	0b 00                	or     (%rax),%eax
   14ec3:	00 9c 25 ff ff 78 00 	add    %bl,0x78ffff(%rbp,%riz,1)
   14eca:	00 00                	add    %al,(%rax)
   14ecc:	00 48 0e             	add    %cl,0xe(%rax)
   14ecf:	10 02                	adc    %al,(%rdx)
   14ed1:	6c                   	insb   (%dx),%es:(%rdi)
   14ed2:	0e                   	(bad)  
   14ed3:	08 10                	or     %dl,(%rax)
   14ed5:	00 00                	add    %al,(%rax)
   14ed7:	00 70 0b             	add    %dh,0xb(%rax)
   14eda:	00 00                	add    %al,(%rax)
   14edc:	04 26                	add    $0x26,%al
   14ede:	ff                   	(bad)  
   14edf:	ff 61 00             	jmp    *0x0(%rcx)
   14ee2:	00 00                	add    %al,(%rax)
   14ee4:	00 00                	add    %al,(%rax)
   14ee6:	00 00                	add    %al,(%rax)
   14ee8:	10 00                	adc    %al,(%rax)
   14eea:	00 00                	add    %al,(%rax)
   14eec:	84 0b                	test   %cl,(%rbx)
   14eee:	00 00                	add    %al,(%rax)
   14ef0:	60                   	(bad)  
   14ef1:	26 ff                	es (bad) 
   14ef3:	ff 53 00             	call   *0x0(%rbx)
   14ef6:	00 00                	add    %al,(%rax)
   14ef8:	00 00                	add    %al,(%rax)
   14efa:	00 00                	add    %al,(%rax)
   14efc:	14 00                	adc    $0x0,%al
   14efe:	00 00                	add    %al,(%rax)
   14f00:	98                   	cwtl   
   14f01:	0b 00                	or     (%rax),%eax
   14f03:	00 ac 26 ff ff 16 00 	add    %ch,0x16ffff(%rsi,%riz,1)
   14f0a:	00 00                	add    %al,(%rax)
   14f0c:	00 48 0e             	add    %cl,0xe(%rax)
   14f0f:	10 49 0e             	adc    %cl,0xe(%rcx)
   14f12:	08 00                	or     %al,(%rax)
   14f14:	10 00                	adc    %al,(%rax)
   14f16:	00 00                	add    %al,(%rax)
   14f18:	b0 0b                	mov    $0xb,%al
   14f1a:	00 00                	add    %al,(%rax)
   14f1c:	b4 26                	mov    $0x26,%ah
   14f1e:	ff                   	(bad)  
   14f1f:	ff 43 00             	incl   0x0(%rbx)
   14f22:	00 00                	add    %al,(%rax)
   14f24:	00 00                	add    %al,(%rax)
   14f26:	00 00                	add    %al,(%rax)
   14f28:	24 00                	and    $0x0,%al
   14f2a:	00 00                	add    %al,(%rax)
   14f2c:	c4                   	(bad)  
   14f2d:	0b 00                	or     (%rax),%eax
   14f2f:	00 f0                	add    %dh,%al
   14f31:	26 ff                	es (bad) 
   14f33:	ff                   	(bad)  
   14f34:	3f                   	(bad)  
   14f35:	00 00                	add    %al,(%rax)
   14f37:	00 00                	add    %al,(%rax)
   14f39:	45 0e                	rex.RB (bad) 
   14f3b:	10 86 02 44 0e 18    	adc    %al,0x180e4402(%rsi)
   14f41:	83 03 47             	addl   $0x47,(%rbx)
   14f44:	0e                   	(bad)  
   14f45:	20 6a 0e             	and    %ch,0xe(%rdx)
   14f48:	18 43 0e             	sbb    %al,0xe(%rbx)
   14f4b:	10 41 0e             	adc    %al,0xe(%rcx)
   14f4e:	08 00                	or     %al,(%rax)
   14f50:	18 00                	sbb    %al,(%rax)
   14f52:	00 00                	add    %al,(%rax)
   14f54:	ec                   	in     (%dx),%al
   14f55:	0b 00                	or     (%rax),%eax
   14f57:	00 08                	add    %cl,(%rax)
   14f59:	27                   	(bad)  
   14f5a:	ff                   	(bad)  
   14f5b:	ff 2e                	ljmp   *(%rsi)
   14f5d:	00 00                	add    %al,(%rax)
   14f5f:	00 00                	add    %al,(%rax)
   14f61:	51                   	push   %rcx
   14f62:	0e                   	(bad)  
   14f63:	10 83 02 57 0e 08    	adc    %al,0x80e5702(%rbx)
   14f69:	00 00                	add    %al,(%rax)
   14f6b:	00 14 00             	add    %dl,(%rax,%rax,1)
   14f6e:	00 00                	add    %al,(%rax)
   14f70:	08 0c 00             	or     %cl,(%rax,%rax,1)
   14f73:	00 1c 27             	add    %bl,(%rdi,%riz,1)
   14f76:	ff                   	(bad)  
   14f77:	ff 22                	jmp    *(%rdx)
   14f79:	00 00                	add    %al,(%rax)
   14f7b:	00 00                	add    %al,(%rax)
   14f7d:	48 0e                	rex.W (bad) 
   14f7f:	10 59 0e             	adc    %bl,0xe(%rcx)
   14f82:	08 00                	or     %al,(%rax)
   14f84:	10 00                	adc    %al,(%rax)
   14f86:	00 00                	add    %al,(%rax)
   14f88:	20 0c 00             	and    %cl,(%rax,%rax,1)
   14f8b:	00 34 27             	add    %dh,(%rdi,%riz,1)
   14f8e:	ff                   	(bad)  
   14f8f:	ff 25 00 00 00 00    	jmp    *0x0(%rip)        # 14f95 <__GNU_EH_FRAME_HDR+0x1455>
   14f95:	00 00                	add    %al,(%rax)
   14f97:	00 14 00             	add    %dl,(%rax,%rax,1)
   14f9a:	00 00                	add    %al,(%rax)
   14f9c:	34 0c                	xor    $0xc,%al
   14f9e:	00 00                	add    %al,(%rax)
   14fa0:	50                   	push   %rax
   14fa1:	27                   	(bad)  
   14fa2:	ff                   	(bad)  
   14fa3:	ff 19                	lcall  *(%rcx)
   14fa5:	00 00                	add    %al,(%rax)
   14fa7:	00 00                	add    %al,(%rax)
   14fa9:	48 0e                	rex.W (bad) 
   14fab:	10 49 0e             	adc    %cl,0xe(%rcx)
   14fae:	08 00                	or     %al,(%rax)
   14fb0:	10 00                	adc    %al,(%rax)
   14fb2:	00 00                	add    %al,(%rax)
   14fb4:	4c 0c 00             	rex.WR or $0x0,%al
   14fb7:	00 58 27             	add    %bl,0x27(%rax)
   14fba:	ff                   	(bad)  
   14fbb:	ff 16                	call   *(%rsi)
   14fbd:	00 00                	add    %al,(%rax)
   14fbf:	00 00                	add    %al,(%rax)
   14fc1:	00 00                	add    %al,(%rax)
   14fc3:	00 10                	add    %dl,(%rax)
   14fc5:	00 00                	add    %al,(%rax)
   14fc7:	00 60 0c             	add    %ah,0xc(%rax)
   14fca:	00 00                	add    %al,(%rax)
   14fcc:	64 27                	fs (bad) 
   14fce:	ff                   	(bad)  
   14fcf:	ff 13                	call   *(%rbx)
   14fd1:	00 00                	add    %al,(%rax)
   14fd3:	00 00                	add    %al,(%rax)
   14fd5:	00 00                	add    %al,(%rax)
   14fd7:	00 1c 00             	add    %bl,(%rax,%rax,1)
   14fda:	00 00                	add    %al,(%rax)
   14fdc:	74 0c                	je     14fea <__GNU_EH_FRAME_HDR+0x14aa>
   14fde:	00 00                	add    %al,(%rax)
   14fe0:	70 27                	jo     15009 <__GNU_EH_FRAME_HDR+0x14c9>
   14fe2:	ff                   	(bad)  
   14fe3:	ff 2f                	ljmp   *(%rdi)
   14fe5:	00 00                	add    %al,(%rax)
   14fe7:	00 00                	add    %al,(%rax)
   14fe9:	48 0e                	rex.W (bad) 
   14feb:	10 59 0a             	adc    %bl,0xa(%rcx)
   14fee:	0e                   	(bad)  
   14fef:	08 47 0b             	or     %al,0xb(%rdi)
   14ff2:	46 0e                	rex.RX (bad) 
   14ff4:	08 00                	or     %al,(%rax)
   14ff6:	00 00                	add    %al,(%rax)
   14ff8:	20 00                	and    %al,(%rax)
   14ffa:	00 00                	add    %al,(%rax)
   14ffc:	94                   	xchg   %eax,%esp
   14ffd:	0c 00                	or     $0x0,%al
   14fff:	00 80 27 ff ff ed    	add    %al,-0x120000d9(%rax)
   15005:	03 00                	add    (%rax),%eax
   15007:	00 00                	add    %al,(%rax)
   15009:	45 0e                	rex.RB (bad) 
   1500b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
   15011:	49 8f 03             	rex.WB pop (%r11)
   15014:	8e 04 8d 05 8c 06 83 	mov    -0x7cf973fb(,%rcx,4),%es
   1501b:	07                   	(bad)  
   1501c:	38 00                	cmp    %al,(%rax)
   1501e:	00 00                	add    %al,(%rax)
   15020:	b8 0c 00 00 4c       	mov    $0x4c00000c,%eax
   15025:	2b ff                	sub    %edi,%edi
   15027:	ff 4e 01             	decl   0x1(%rsi)
   1502a:	00 00                	add    %al,(%rax)
   1502c:	00 46 0e             	add    %al,0xe(%rsi)
   1502f:	10 8d 02 42 0e 18    	adc    %cl,0x180e4202(%rbp)
   15035:	8c 03                	mov    %es,(%rbx)
   15037:	44 0e                	rex.R (bad) 
   15039:	20 86 04 44 0e 28    	and    %al,0x280e4404(%rsi)
   1503f:	83 05 44 0e 40 02 bb 	addl   $0xffffffbb,0x2400e44(%rip)        # 2415e8a <_end+0x23eae7a>
   15046:	0a 0e                	or     (%rsi),%cl
   15048:	28 44 0e 20          	sub    %al,0x20(%rsi,%rcx,1)
   1504c:	41 0e                	rex.B (bad) 
   1504e:	18 42 0e             	sbb    %al,0xe(%rdx)
   15051:	10 42 0e             	adc    %al,0xe(%rdx)
   15054:	08 48 0b             	or     %cl,0xb(%rax)
   15057:	00 38                	add    %bh,(%rax)
   15059:	00 00                	add    %al,(%rax)
   1505b:	00 f4                	add    %dh,%ah
   1505d:	0c 00                	or     $0x0,%al
   1505f:	00 60 2c             	add    %ah,0x2c(%rax)
   15062:	ff                   	(bad)  
   15063:	ff ab 00 00 00 00    	ljmp   *0x0(%rbx)
   15069:	4e 0e                	rex.WRX (bad) 
   1506b:	10 86 02 48 0e 18    	adc    %al,0x180e4802(%rsi)
   15071:	83 03 4a             	addl   $0x4a,(%rbx)
   15074:	0e                   	(bad)  
   15075:	20 7d 0a             	and    %bh,0xa(%rbp)
   15078:	0e                   	(bad)  
   15079:	18 43 0e             	sbb    %al,0xe(%rbx)
   1507c:	10 41 0e             	adc    %al,0xe(%rcx)
   1507f:	08 47 0b             	or     %al,0xb(%rdi)
   15082:	5c                   	pop    %rsp
   15083:	0a 0e                	or     (%rsi),%cl
   15085:	18 46 0e             	sbb    %al,0xe(%rsi)
   15088:	10 41 0e             	adc    %al,0xe(%rcx)
   1508b:	08 45 0b             	or     %al,0xb(%rbp)
   1508e:	58                   	pop    %rax
   1508f:	0e                   	(bad)  
   15090:	08 c3                	or     %al,%bl
   15092:	c6 00 48             	movb   $0x48,(%rax)
   15095:	00 00                	add    %al,(%rax)
   15097:	00 30                	add    %dh,(%rax)
   15099:	0d 00 00 d4 2c       	or     $0x2cd40000,%eax
   1509e:	ff                   	(bad)  
   1509f:	ff af 03 00 00 00    	ljmp   *0x3(%rdi)
   150a5:	46 0e                	rex.RX (bad) 
   150a7:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   150ad:	8e 03                	mov    (%rbx),%es
   150af:	42 0e                	rex.X (bad) 
   150b1:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   150b7:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff86315efe <_end+0xffffffff862eaeee>
   150bd:	06                   	(bad)  
   150be:	41 0e                	rex.B (bad) 
   150c0:	38 83 07 47 0e 40    	cmp    %al,0x400e4707(%rbx)
   150c6:	02 5e 0a             	add    0xa(%rsi),%bl
   150c9:	0e                   	(bad)  
   150ca:	38 41 0e             	cmp    %al,0xe(%rcx)
   150cd:	30 41 0e             	xor    %al,0xe(%rcx)
   150d0:	28 42 0e             	sub    %al,0xe(%rdx)
   150d3:	20 42 0e             	and    %al,0xe(%rdx)
   150d6:	18 42 0e             	sbb    %al,0xe(%rdx)
   150d9:	10 42 0e             	adc    %al,0xe(%rdx)
   150dc:	08 43 0b             	or     %al,0xb(%rbx)
   150df:	00 14 00             	add    %dl,(%rax,%rax,1)
   150e2:	00 00                	add    %al,(%rax)
   150e4:	7c 0d                	jl     150f3 <__GNU_EH_FRAME_HDR+0x15b3>
   150e6:	00 00                	add    %al,(%rax)
   150e8:	38 30                	cmp    %dh,(%rax)
   150ea:	ff                   	(bad)  
   150eb:	ff 25 00 00 00 00    	jmp    *0x0(%rip)        # 150f1 <__GNU_EH_FRAME_HDR+0x15b1>
   150f1:	48 0e                	rex.W (bad) 
   150f3:	10 5c 0e 08          	adc    %bl,0x8(%rsi,%rcx,1)
   150f7:	00 10                	add    %dl,(%rax)
   150f9:	00 00                	add    %al,(%rax)
   150fb:	00 94 0d 00 00 50 30 	add    %dl,0x30500000(%rbp,%rcx,1)
   15102:	ff                   	(bad)  
   15103:	ff 6e 00             	ljmp   *0x0(%rsi)
   15106:	00 00                	add    %al,(%rax)
   15108:	00 00                	add    %al,(%rax)
   1510a:	00 00                	add    %al,(%rax)
   1510c:	34 00                	xor    $0x0,%al
   1510e:	00 00                	add    %al,(%rax)
   15110:	a8 0d                	test   $0xd,%al
   15112:	00 00                	add    %al,(%rax)
   15114:	ac                   	lods   %ds:(%rsi),%al
   15115:	30 ff                	xor    %bh,%bh
   15117:	ff                   	(bad)  
   15118:	d8 01                	fadds  (%rcx)
   1511a:	00 00                	add    %al,(%rax)
   1511c:	00 54 0e 10          	add    %dl,0x10(%rsi,%rcx,1)
   15120:	86 02                	xchg   %al,(%rdx)
   15122:	4d 0e                	rex.WRB (bad) 
   15124:	18 83 03 02 a7 0a    	sbb    %al,0xaa70203(%rbx)
   1512a:	0e                   	(bad)  
   1512b:	10 41 0e             	adc    %al,0xe(%rcx)
   1512e:	08 47 0b             	or     %al,0xb(%rdi)
   15131:	02 44 0a 0e          	add    0xe(%rdx,%rcx,1),%al
   15135:	10 41 0e             	adc    %al,0xe(%rcx)
   15138:	08 4b 0b             	or     %cl,0xb(%rbx)
   1513b:	02 b5 0e 08 c3 c6    	add    -0x393cf7f2(%rbp),%dh
   15141:	00 00                	add    %al,(%rax)
   15143:	00 78 00             	add    %bh,0x0(%rax)
   15146:	00 00                	add    %al,(%rax)
   15148:	e0 0d                	loopne 15157 <__GNU_EH_FRAME_HDR+0x1617>
   1514a:	00 00                	add    %al,(%rax)
   1514c:	54                   	push   %rsp
   1514d:	32 ff                	xor    %bh,%bh
   1514f:	ff 21                	jmp    *(%rcx)
   15151:	02 00                	add    (%rax),%al
   15153:	00 00                	add    %al,(%rax)
   15155:	66 0e                	data16 (bad) 
   15157:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   1515d:	8e 03                	mov    (%rbx),%es
   1515f:	42 0e                	rex.X (bad) 
   15161:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   15167:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff86315fae <_end+0xffffffff862eaf9e>
   1516d:	06                   	(bad)  
   1516e:	41 0e                	rex.B (bad) 
   15170:	38 83 07 47 0e 40    	cmp    %al,0x400e4707(%rbx)
   15176:	03 0b                	add    (%rbx),%ecx
   15178:	01 0a                	add    %ecx,(%rdx)
   1517a:	0e                   	(bad)  
   1517b:	38 46 0e             	cmp    %al,0xe(%rsi)
   1517e:	30 41 0e             	xor    %al,0xe(%rcx)
   15181:	28 42 0e             	sub    %al,0xe(%rdx)
   15184:	20 42 0e             	and    %al,0xe(%rdx)
   15187:	18 42 0e             	sbb    %al,0xe(%rdx)
   1518a:	10 42 0e             	adc    %al,0xe(%rdx)
   1518d:	08 41 0b             	or     %al,0xb(%rcx)
   15190:	02 90 0e 08 c3 c6    	add    -0x393cf7f2(%rax),%dl
   15196:	cc                   	int3   
   15197:	cd ce                	int    $0xce
   15199:	cf                   	iret   
   1519a:	50                   	push   %rax
   1519b:	0e                   	(bad)  
   1519c:	40 83 07 86          	rex addl $0xffffff86,(%rdi)
   151a0:	06                   	(bad)  
   151a1:	8c 05 8d 04 8e 03    	mov    %es,0x38e048d(%rip)        # 38f5634 <_end+0x38ca624>
   151a7:	8f 02                	pop    (%rdx)
   151a9:	64 0e                	fs (bad) 
   151ab:	38 43 0e             	cmp    %al,0xe(%rbx)
   151ae:	30 41 0e             	xor    %al,0xe(%rcx)
   151b1:	28 42 0e             	sub    %al,0xe(%rdx)
   151b4:	20 42 0e             	and    %al,0xe(%rdx)
   151b7:	18 42 0e             	sbb    %al,0xe(%rdx)
   151ba:	10 42 0e             	adc    %al,0xe(%rdx)
   151bd:	08 00                	or     %al,(%rax)
   151bf:	00 10                	add    %dl,(%rax)
   151c1:	00 00                	add    %al,(%rax)
   151c3:	00 5c 0e 00          	add    %bl,0x0(%rsi,%rcx,1)
   151c7:	00 08                	add    %cl,(%rax)
   151c9:	34 ff                	xor    $0xff,%al
   151cb:	ff 96 00 00 00 00    	call   *0x0(%rsi)
   151d1:	00 00                	add    %al,(%rax)
   151d3:	00 10                	add    %dl,(%rax)
   151d5:	00 00                	add    %al,(%rax)
   151d7:	00 70 0e             	add    %dh,0xe(%rax)
   151da:	00 00                	add    %al,(%rax)
   151dc:	94                   	xchg   %eax,%esp
   151dd:	34 ff                	xor    $0xff,%al
   151df:	ff e4                	jmp    *%rsp
   151e1:	00 00                	add    %al,(%rax)
   151e3:	00 00                	add    %al,(%rax)
   151e5:	00 00                	add    %al,(%rax)
   151e7:	00 10                	add    %dl,(%rax)
   151e9:	00 00                	add    %al,(%rax)
   151eb:	00 84 0e 00 00 70 35 	add    %al,0x35700000(%rsi,%rcx,1)
   151f2:	ff                   	(bad)  
   151f3:	ff e4                	jmp    *%rsp
   151f5:	00 00                	add    %al,(%rax)
   151f7:	00 00                	add    %al,(%rax)
   151f9:	00 00                	add    %al,(%rax)
   151fb:	00 50 00             	add    %dl,0x0(%rax)
   151fe:	00 00                	add    %al,(%rax)
   15200:	98                   	cwtl   
   15201:	0e                   	(bad)  
   15202:	00 00                	add    %al,(%rax)
   15204:	4c                   	rex.WR
   15205:	36 ff                	ss (bad) 
   15207:	ff d1                	call   *%rcx
   15209:	01 00                	add    %eax,(%rax)
   1520b:	00 00                	add    %al,(%rax)
   1520d:	4f 0e                	rex.WRXB (bad) 
   1520f:	10 8e 02 42 0e 18    	adc    %cl,0x180e4202(%rsi)
   15215:	8d 03                	lea    (%rbx),%eax
   15217:	45 0e                	rex.RB (bad) 
   15219:	20 8c 04 41 0e 28 86 	and    %cl,-0x79d7f1bf(%rsp,%rax,1)
   15220:	05 41 0e 30 83       	add    $0x83300e41,%eax
   15225:	06                   	(bad)  
   15226:	02 ce                	add    %dh,%cl
   15228:	0a 0e                	or     (%rsi),%cl
   1522a:	28 41 0e             	sub    %al,0xe(%rcx)
   1522d:	20 42 0e             	and    %al,0xe(%rdx)
   15230:	18 42 0e             	sbb    %al,0xe(%rdx)
   15233:	10 42 0e             	adc    %al,0xe(%rdx)
   15236:	08 43 0b             	or     %al,0xb(%rbx)
   15239:	02 d1                	add    %cl,%dl
   1523b:	0e                   	(bad)  
   1523c:	28 43 0e             	sub    %al,0xe(%rbx)
   1523f:	20 42 0e             	and    %al,0xe(%rdx)
   15242:	18 42 0e             	sbb    %al,0xe(%rdx)
   15245:	10 42 0e             	adc    %al,0xe(%rdx)
   15248:	08 41 c3             	or     %al,-0x3d(%rcx)
   1524b:	c6                   	(bad)  
   1524c:	cc                   	int3   
   1524d:	cd ce                	int    $0xce
   1524f:	00 4c 00 00          	add    %cl,0x0(%rax,%rax,1)
   15253:	00 ec                	add    %ch,%ah
   15255:	0e                   	(bad)  
   15256:	00 00                	add    %al,(%rax)
   15258:	d8 37                	fdivs  (%rdi)
   1525a:	ff                   	(bad)  
   1525b:	ff                   	(bad)  
   1525c:	fb                   	sti    
   1525d:	00 00                	add    %al,(%rax)
   1525f:	00 00                	add    %al,(%rax)
   15261:	4f 0e                	rex.WRXB (bad) 
   15263:	10 8d 02 45 0e 18    	adc    %cl,0x180e4502(%rbp)
   15269:	8c 03                	mov    %es,(%rbx)
   1526b:	41 0e                	rex.B (bad) 
   1526d:	20 86 04 41 0e 28    	and    %al,0x280e4104(%rsi)
   15273:	83 05 44 0e 30 02 be 	addl   $0xffffffbe,0x2300e44(%rip)        # 23160be <_end+0x22eb0ae>
   1527a:	0a 0e                	or     (%rsi),%cl
   1527c:	28 46 0e             	sub    %al,0xe(%rsi)
   1527f:	20 41 0e             	and    %al,0xe(%rcx)
   15282:	18 42 0e             	sbb    %al,0xe(%rdx)
   15285:	10 42 0e             	adc    %al,0xe(%rdx)
   15288:	08 45 0b             	or     %al,0xb(%rbp)
   1528b:	44 0e                	rex.R (bad) 
   1528d:	28 43 0e             	sub    %al,0xe(%rbx)
   15290:	20 41 0e             	and    %al,0xe(%rcx)
   15293:	18 42 0e             	sbb    %al,0xe(%rdx)
   15296:	10 42 0e             	adc    %al,0xe(%rdx)
   15299:	08 41 c3             	or     %al,-0x3d(%rcx)
   1529c:	c6                   	(bad)  
   1529d:	cc                   	int3   
   1529e:	cd 00                	int    $0x0
   152a0:	38 00                	cmp    %al,(%rax)
   152a2:	00 00                	add    %al,(%rax)
   152a4:	3c 0f                	cmp    $0xf,%al
   152a6:	00 00                	add    %al,(%rax)
   152a8:	88 38                	mov    %bh,(%rax)
   152aa:	ff                   	(bad)  
   152ab:	ff 26                	jmp    *(%rsi)
   152ad:	01 00                	add    %eax,(%rax)
   152af:	00 00                	add    %al,(%rax)
   152b1:	46 0e                	rex.RX (bad) 
   152b3:	10 8d 02 45 0e 18    	adc    %cl,0x180e4502(%rbp)
   152b9:	8c 03                	mov    %es,(%rbx)
   152bb:	44 0e                	rex.R (bad) 
   152bd:	20 86 04 44 0e 28    	and    %al,0x280e4404(%rsi)
   152c3:	83 05 44 0e 40 02 9d 	addl   $0xffffff9d,0x2400e44(%rip)        # 241610e <_end+0x23eb0fe>
   152ca:	0a 0e                	or     (%rsi),%cl
   152cc:	28 41 0e             	sub    %al,0xe(%rcx)
   152cf:	20 41 0e             	and    %al,0xe(%rcx)
   152d2:	18 42 0e             	sbb    %al,0xe(%rdx)
   152d5:	10 42 0e             	adc    %al,0xe(%rdx)
   152d8:	08 46 0b             	or     %al,0xb(%rsi)
   152db:	00 10                	add    %dl,(%rax)
   152dd:	00 00                	add    %al,(%rax)
   152df:	00 78 0f             	add    %bh,0xf(%rax)
   152e2:	00 00                	add    %al,(%rax)
   152e4:	7c 39                	jl     1531f <__GNU_EH_FRAME_HDR+0x17df>
   152e6:	ff                   	(bad)  
   152e7:	ff 12                	call   *(%rdx)
   152e9:	00 00                	add    %al,(%rax)
   152eb:	00 00                	add    %al,(%rax)
   152ed:	00 00                	add    %al,(%rax)
   152ef:	00 28                	add    %ch,(%rax)
   152f1:	00 00                	add    %al,(%rax)
   152f3:	00 8c 0f 00 00 88 39 	add    %cl,0x39880000(%rdi,%rcx,1)
   152fa:	ff                   	(bad)  
   152fb:	ff 97 00 00 00 00    	call   *0x0(%rdi)
   15301:	45 0e                	rex.RB (bad) 
   15303:	10 86 02 41 0e 18    	adc    %al,0x180e4102(%rsi)
   15309:	83 03 44             	addl   $0x44,(%rbx)
   1530c:	0e                   	(bad)  
   1530d:	40 02 85 0a 0e 18 41 	rex add 0x41180e0a(%rbp),%al
   15314:	0e                   	(bad)  
   15315:	10 41 0e             	adc    %al,0xe(%rcx)
   15318:	08 41 0b             	or     %al,0xb(%rcx)
   1531b:	00 28                	add    %ch,(%rax)
   1531d:	00 00                	add    %al,(%rax)
   1531f:	00 b8 0f 00 00 fc    	add    %bh,-0x3fffff1(%rax)
   15325:	39 ff                	cmp    %edi,%edi
   15327:	ff c7                	inc    %edi
   15329:	00 00                	add    %al,(%rax)
   1532b:	00 00                	add    %al,(%rax)
   1532d:	45 0e                	rex.RB (bad) 
   1532f:	10 86 02 41 0e 18    	adc    %al,0x180e4102(%rsi)
   15335:	83 03 44             	addl   $0x44,(%rbx)
   15338:	0e                   	(bad)  
   15339:	40 02 b5 0a 0e 18 41 	add    0x41180e0a(%rbp),%sil
   15340:	0e                   	(bad)  
   15341:	10 41 0e             	adc    %al,0xe(%rcx)
   15344:	08 41 0b             	or     %al,0xb(%rcx)
   15347:	00 10                	add    %dl,(%rax)
   15349:	00 00                	add    %al,(%rax)
   1534b:	00 e4                	add    %ah,%ah
   1534d:	0f 00 00             	sldt   (%rax)
   15350:	c2 c9 ff             	ret    $0xffc9
   15353:	ff 01                	incl   (%rcx)
   15355:	00 00                	add    %al,(%rax)
   15357:	00 00                	add    %al,(%rax)
   15359:	00 00                	add    %al,(%rax)
   1535b:	00 10                	add    %dl,(%rax)
   1535d:	00 00                	add    %al,(%rax)
   1535f:	00 f8                	add    %bh,%al
   15361:	0f 00 00             	sldt   (%rax)
   15364:	af                   	scas   %es:(%rdi),%eax
   15365:	c9                   	leave  
   15366:	ff                   	(bad)  
   15367:	ff 02                	incl   (%rdx)
   15369:	00 00                	add    %al,(%rax)
   1536b:	00 00                	add    %al,(%rax)
   1536d:	00 00                	add    %al,(%rax)
   1536f:	00 10                	add    %dl,(%rax)
   15371:	00 00                	add    %al,(%rax)
   15373:	00 0c 10             	add    %cl,(%rax,%rdx,1)
   15376:	00 00                	add    %al,(%rax)
   15378:	9d                   	popf   
   15379:	c9                   	leave  
   1537a:	ff                   	(bad)  
   1537b:	ff 02                	incl   (%rdx)
   1537d:	00 00                	add    %al,(%rax)
   1537f:	00 00                	add    %al,(%rax)
   15381:	00 00                	add    %al,(%rax)
   15383:	00 10                	add    %dl,(%rax)
   15385:	00 00                	add    %al,(%rax)
   15387:	00 20                	add    %ah,(%rax)
   15389:	10 00                	adc    %al,(%rax)
   1538b:	00 8b c9 ff ff 02    	add    %cl,0x2ffffc9(%rbx)
   15391:	00 00                	add    %al,(%rax)
   15393:	00 00                	add    %al,(%rax)
   15395:	00 00                	add    %al,(%rax)
   15397:	00 10                	add    %dl,(%rax)
   15399:	00 00                	add    %al,(%rax)
   1539b:	00 34 10             	add    %dh,(%rax,%rdx,1)
   1539e:	00 00                	add    %al,(%rax)
   153a0:	79 c9                	jns    1536b <__GNU_EH_FRAME_HDR+0x182b>
   153a2:	ff                   	(bad)  
   153a3:	ff 02                	incl   (%rdx)
   153a5:	00 00                	add    %al,(%rax)
   153a7:	00 00                	add    %al,(%rax)
   153a9:	00 00                	add    %al,(%rax)
   153ab:	00 10                	add    %dl,(%rax)
   153ad:	00 00                	add    %al,(%rax)
   153af:	00 48 10             	add    %cl,0x10(%rax)
   153b2:	00 00                	add    %al,(%rax)
   153b4:	67 c9                	addr32 leave 
   153b6:	ff                   	(bad)  
   153b7:	ff 02                	incl   (%rdx)
   153b9:	00 00                	add    %al,(%rax)
   153bb:	00 00                	add    %al,(%rax)
   153bd:	00 00                	add    %al,(%rax)
   153bf:	00 10                	add    %dl,(%rax)
   153c1:	00 00                	add    %al,(%rax)
   153c3:	00 5c 10 00          	add    %bl,0x0(%rax,%rdx,1)
   153c7:	00 55 c9             	add    %dl,-0x37(%rbp)
   153ca:	ff                   	(bad)  
   153cb:	ff 02                	incl   (%rdx)
   153cd:	00 00                	add    %al,(%rax)
   153cf:	00 00                	add    %al,(%rax)
   153d1:	00 00                	add    %al,(%rax)
   153d3:	00 10                	add    %dl,(%rax)
   153d5:	00 00                	add    %al,(%rax)
   153d7:	00 70 10             	add    %dh,0x10(%rax)
   153da:	00 00                	add    %al,(%rax)
   153dc:	43 c9                	rex.XB leave 
   153de:	ff                   	(bad)  
   153df:	ff 02                	incl   (%rdx)
   153e1:	00 00                	add    %al,(%rax)
   153e3:	00 00                	add    %al,(%rax)
   153e5:	00 00                	add    %al,(%rax)
   153e7:	00 10                	add    %dl,(%rax)
   153e9:	00 00                	add    %al,(%rax)
   153eb:	00 84 10 00 00 31 c9 	add    %al,-0x36cf0000(%rax,%rdx,1)
   153f2:	ff                   	(bad)  
   153f3:	ff 03                	incl   (%rbx)
   153f5:	00 00                	add    %al,(%rax)
   153f7:	00 00                	add    %al,(%rax)
   153f9:	00 00                	add    %al,(%rax)
   153fb:	00 10                	add    %dl,(%rax)
   153fd:	00 00                	add    %al,(%rax)
   153ff:	00 98 10 00 00 20    	add    %bl,0x20000010(%rax)
   15405:	c9                   	leave  
   15406:	ff                   	(bad)  
   15407:	ff 03                	incl   (%rbx)
   15409:	00 00                	add    %al,(%rax)
   1540b:	00 00                	add    %al,(%rax)
   1540d:	00 00                	add    %al,(%rax)
   1540f:	00 10                	add    %dl,(%rax)
   15411:	00 00                	add    %al,(%rax)
   15413:	00 ac 10 00 00 0f c9 	add    %ch,-0x36f10000(%rax,%rdx,1)
   1541a:	ff                   	(bad)  
   1541b:	ff 03                	incl   (%rbx)
   1541d:	00 00                	add    %al,(%rax)
   1541f:	00 00                	add    %al,(%rax)
   15421:	00 00                	add    %al,(%rax)
   15423:	00 10                	add    %dl,(%rax)
   15425:	00 00                	add    %al,(%rax)
   15427:	00 c0                	add    %al,%al
   15429:	10 00                	adc    %al,(%rax)
   1542b:	00 fe                	add    %bh,%dh
   1542d:	c8 ff ff 03          	enter  $0xffff,$0x3
   15431:	00 00                	add    %al,(%rax)
   15433:	00 00                	add    %al,(%rax)
   15435:	00 00                	add    %al,(%rax)
   15437:	00 10                	add    %dl,(%rax)
   15439:	00 00                	add    %al,(%rax)
   1543b:	00 d4                	add    %dl,%ah
   1543d:	10 00                	adc    %al,(%rax)
   1543f:	00 ed                	add    %ch,%ch
   15441:	c8 ff ff 03          	enter  $0xffff,$0x3
   15445:	00 00                	add    %al,(%rax)
   15447:	00 00                	add    %al,(%rax)
   15449:	00 00                	add    %al,(%rax)
   1544b:	00 10                	add    %dl,(%rax)
   1544d:	00 00                	add    %al,(%rax)
   1544f:	00 e8                	add    %ch,%al
   15451:	10 00                	adc    %al,(%rax)
   15453:	00 dc                	add    %bl,%ah
   15455:	c8 ff ff 03          	enter  $0xffff,$0x3
   15459:	00 00                	add    %al,(%rax)
   1545b:	00 00                	add    %al,(%rax)
   1545d:	00 00                	add    %al,(%rax)
   1545f:	00 10                	add    %dl,(%rax)
   15461:	00 00                	add    %al,(%rax)
   15463:	00 fc                	add    %bh,%ah
   15465:	10 00                	adc    %al,(%rax)
   15467:	00 cb                	add    %cl,%bl
   15469:	c8 ff ff 03          	enter  $0xffff,$0x3
   1546d:	00 00                	add    %al,(%rax)
   1546f:	00 00                	add    %al,(%rax)
   15471:	00 00                	add    %al,(%rax)
   15473:	00 10                	add    %dl,(%rax)
   15475:	00 00                	add    %al,(%rax)
   15477:	00 10                	add    %dl,(%rax)
   15479:	11 00                	adc    %eax,(%rax)
   1547b:	00 ba c8 ff ff 03    	add    %bh,0x3ffffc8(%rdx)
   15481:	00 00                	add    %al,(%rax)
   15483:	00 00                	add    %al,(%rax)
   15485:	00 00                	add    %al,(%rax)
   15487:	00 1c 00             	add    %bl,(%rax,%rax,1)
   1548a:	00 00                	add    %al,(%rax)
   1548c:	24 11                	and    $0x11,%al
   1548e:	00 00                	add    %al,(%rax)
   15490:	60                   	(bad)  
   15491:	39 ff                	cmp    %edi,%edi
   15493:	ff 17                	call   *(%rdi)
   15495:	00 00                	add    %al,(%rax)
   15497:	00 00                	add    %al,(%rax)
   15499:	45 0e                	rex.RB (bad) 
   1549b:	10 83 02 51 0e 08    	adc    %al,0x80e5102(%rbx)
   154a1:	00 00                	add    %al,(%rax)
   154a3:	00 00                	add    %al,(%rax)
   154a5:	00 00                	add    %al,(%rax)
   154a7:	00 18                	add    %bl,(%rax)
   154a9:	00 00                	add    %al,(%rax)
   154ab:	00 44 11 00          	add    %al,0x0(%rcx,%rdx,1)
   154af:	00 b3 cc ff ff 43    	add    %dh,0x43ffffcc(%rbx)
   154b5:	01 00                	add    %eax,(%rax)
   154b7:	00 00                	add    %al,(%rax)
   154b9:	02 4b 0e             	add    0xe(%rbx),%cl
   154bc:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
   154c2:	00 00                	add    %al,(%rax)
   154c4:	18 00                	sbb    %al,(%rax)
   154c6:	00 00                	add    %al,(%rax)
   154c8:	60                   	(bad)  
   154c9:	11 00                	adc    %eax,(%rax)
   154cb:	00 17                	add    %dl,(%rdi)
   154cd:	cf                   	iret   
   154ce:	ff                   	(bad)  
   154cf:	ff 0f                	decl   (%rdi)
   154d1:	00 00                	add    %al,(%rax)
   154d3:	00 00                	add    %al,(%rax)
   154d5:	41 0e                	rex.B (bad) 
   154d7:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
   154dd:	00 00                	add    %al,(%rax)
   154df:	00 10                	add    %dl,(%rax)
   154e1:	00 00                	add    %al,(%rax)
   154e3:	00 7c 11 00          	add    %bh,0x0(%rcx,%rdx,1)
   154e7:	00 7c cf ff          	add    %bh,-0x1(%rdi,%rcx,8)
   154eb:	ff 1c 00             	lcall  *(%rax,%rax,1)
   154ee:	00 00                	add    %al,(%rax)
   154f0:	00 00                	add    %al,(%rax)
   154f2:	00 00                	add    %al,(%rax)
   154f4:	10 00                	adc    %al,(%rax)
   154f6:	00 00                	add    %al,(%rax)
   154f8:	90                   	nop
   154f9:	11 00                	adc    %eax,(%rax)
   154fb:	00 88 cf ff ff 1b    	add    %cl,0x1bffffcf(%rax)
   15501:	00 00                	add    %al,(%rax)
   15503:	00 00                	add    %al,(%rax)
   15505:	00 00                	add    %al,(%rax)
   15507:	00 10                	add    %dl,(%rax)
   15509:	00 00                	add    %al,(%rax)
   1550b:	00 a4 11 00 00 93 cf 	add    %ah,-0x306d0000(%rcx,%rdx,1)
   15512:	ff                   	(bad)  
   15513:	ff 1c 00             	lcall  *(%rax,%rax,1)
   15516:	00 00                	add    %al,(%rax)
   15518:	00 00                	add    %al,(%rax)
   1551a:	00 00                	add    %al,(%rax)
   1551c:	10 00                	adc    %al,(%rax)
   1551e:	00 00                	add    %al,(%rax)
   15520:	b8 11 00 00 9f       	mov    $0x9f000011,%eax
   15525:	cf                   	iret   
   15526:	ff                   	(bad)  
   15527:	ff 1a                	lcall  *(%rdx)
   15529:	00 00                	add    %al,(%rax)
   1552b:	00 00                	add    %al,(%rax)
   1552d:	00 00                	add    %al,(%rax)
   1552f:	00 10                	add    %dl,(%rax)
   15531:	00 00                	add    %al,(%rax)
   15533:	00 cc                	add    %cl,%ah
   15535:	11 00                	adc    %eax,(%rax)
   15537:	00 a9 cf ff ff 1a    	add    %ch,0x1affffcf(%rcx)
   1553d:	00 00                	add    %al,(%rax)
   1553f:	00 00                	add    %al,(%rax)
   15541:	00 00                	add    %al,(%rax)
   15543:	00 10                	add    %dl,(%rax)
   15545:	00 00                	add    %al,(%rax)
   15547:	00 e0                	add    %ah,%al
   15549:	11 00                	adc    %eax,(%rax)
   1554b:	00 b3 cf ff ff 15    	add    %dh,0x15ffffcf(%rbx)
   15551:	00 00                	add    %al,(%rax)
   15553:	00 00                	add    %al,(%rax)
   15555:	00 00                	add    %al,(%rax)
   15557:	00 2c 00             	add    %ch,(%rax,%rax,1)
   1555a:	00 00                	add    %al,(%rax)
   1555c:	f4                   	hlt    
   1555d:	11 00                	adc    %eax,(%rax)
   1555f:	00 b0 38 ff ff 74    	add    %dh,0x74ffff38(%rax)
   15565:	00 00                	add    %al,(%rax)
   15567:	00 00                	add    %al,(%rax)
   15569:	46 0e                	rex.RX (bad) 
   1556b:	10 8c 02 41 0e 18 86 	adc    %cl,-0x79e7f1bf(%rdx,%rax,1)
   15572:	03 41 0e             	add    0xe(%rcx),%eax
   15575:	20 83 04 02 4d 0a    	and    %al,0xa4d0204(%rbx)
   1557b:	0e                   	(bad)  
   1557c:	18 41 0e             	sbb    %al,0xe(%rcx)
   1557f:	10 42 0e             	adc    %al,0xe(%rdx)
   15582:	08 48 0b             	or     %cl,0xb(%rax)
   15585:	00 00                	add    %al,(%rax)
   15587:	00 18                	add    %bl,(%rax)
   15589:	00 00                	add    %al,(%rax)
   1558b:	00 24 12             	add    %ah,(%rdx,%rdx,1)
   1558e:	00 00                	add    %al,(%rax)
   15590:	00 39                	add    %bh,(%rcx)
   15592:	ff                   	(bad)  
   15593:	ff 28                	ljmp   *(%rax)
   15595:	00 00                	add    %al,(%rax)
   15597:	00 00                	add    %al,(%rax)
   15599:	45 0e                	rex.RB (bad) 
   1559b:	10 83 02 62 0e 08    	adc    %al,0x80e6202(%rbx)
   155a1:	00 00                	add    %al,(%rax)
   155a3:	00 18                	add    %bl,(%rax)
   155a5:	00 00                	add    %al,(%rax)
   155a7:	00 40 12             	add    %al,0x12(%rax)
   155aa:	00 00                	add    %al,(%rax)
   155ac:	14 39                	adc    $0x39,%al
   155ae:	ff                   	(bad)  
   155af:	ff 25 00 00 00 00    	jmp    *0x0(%rip)        # 155b5 <__GNU_EH_FRAME_HDR+0x1a75>
   155b5:	45 0e                	rex.RB (bad) 
   155b7:	10 83 02 5f 0e 08    	adc    %al,0x80e5f02(%rbx)
   155bd:	00 00                	add    %al,(%rax)
   155bf:	00 18                	add    %bl,(%rax)
   155c1:	00 00                	add    %al,(%rax)
   155c3:	00 5c 12 00          	add    %bl,0x0(%rdx,%rdx,1)
   155c7:	00 28                	add    %ch,(%rax)
   155c9:	39 ff                	cmp    %edi,%edi
   155cb:	ff 1a                	lcall  *(%rdx)
   155cd:	00 00                	add    %al,(%rax)
   155cf:	00 00                	add    %al,(%rax)
   155d1:	45 0e                	rex.RB (bad) 
   155d3:	10 83 02 50 0e 08    	adc    %al,0x80e5002(%rbx)
   155d9:	00 00                	add    %al,(%rax)
   155db:	00 10                	add    %dl,(%rax)
   155dd:	00 00                	add    %al,(%rax)
   155df:	00 78 12             	add    %bh,0x12(%rax)
   155e2:	00 00                	add    %al,(%rax)
   155e4:	2c 39                	sub    $0x39,%al
   155e6:	ff                   	(bad)  
   155e7:	ff 23                	jmp    *(%rbx)
   155e9:	00 00                	add    %al,(%rax)
   155eb:	00 00                	add    %al,(%rax)
   155ed:	00 00                	add    %al,(%rax)
   155ef:	00 10                	add    %dl,(%rax)
   155f1:	00 00                	add    %al,(%rax)
   155f3:	00 8c 12 00 00 48 39 	add    %cl,0x39480000(%rdx,%rdx,1)
   155fa:	ff                   	(bad)  
   155fb:	ff 15 00 00 00 00    	call   *0x0(%rip)        # 15601 <__GNU_EH_FRAME_HDR+0x1ac1>
   15601:	00 00                	add    %al,(%rax)
   15603:	00 10                	add    %dl,(%rax)
   15605:	00 00                	add    %al,(%rax)
   15607:	00 a0 12 00 00 54    	add    %ah,0x54000012(%rax)
   1560d:	39 ff                	cmp    %edi,%edi
   1560f:	ff                   	(bad)  
   15610:	bd 00 00 00 00       	mov    $0x0,%ebp
   15615:	00 00                	add    %al,(%rax)
   15617:	00 10                	add    %dl,(%rax)
   15619:	00 00                	add    %al,(%rax)
   1561b:	00 b4 12 00 00 00 3a 	add    %dh,0x3a000000(%rdx,%rdx,1)
   15622:	ff                   	(bad)  
   15623:	ff                   	(bad)  
   15624:	bd 00 00 00 00       	mov    $0x0,%ebp
   15629:	00 00                	add    %al,(%rax)
   1562b:	00 10                	add    %dl,(%rax)
   1562d:	00 00                	add    %al,(%rax)
   1562f:	00 c8                	add    %cl,%al
   15631:	12 00                	adc    (%rax),%al
   15633:	00 ac 3a ff ff 1f 00 	add    %ch,0x1fffff(%rdx,%rdi,1)
   1563a:	00 00                	add    %al,(%rax)
   1563c:	00 00                	add    %al,(%rax)
   1563e:	00 00                	add    %al,(%rax)
   15640:	10 00                	adc    %al,(%rax)
   15642:	00 00                	add    %al,(%rax)
   15644:	dc 12                	fcoml  (%rdx)
   15646:	00 00                	add    %al,(%rax)
   15648:	b8 3a ff ff b5       	mov    $0xb5ffff3a,%eax
   1564d:	00 00                	add    %al,(%rax)
   1564f:	00 00                	add    %al,(%rax)
   15651:	00 00                	add    %al,(%rax)
   15653:	00 10                	add    %dl,(%rax)
   15655:	00 00                	add    %al,(%rax)
   15657:	00 f0                	add    %dh,%al
   15659:	12 00                	adc    (%rax),%al
   1565b:	00 64 3b ff          	add    %ah,-0x1(%rbx,%rdi,1)
   1565f:	ff 15 00 00 00 00    	call   *0x0(%rip)        # 15665 <__GNU_EH_FRAME_HDR+0x1b25>
   15665:	00 00                	add    %al,(%rax)
   15667:	00 10                	add    %dl,(%rax)
   15669:	00 00                	add    %al,(%rax)
   1566b:	00 04 13             	add    %al,(%rbx,%rdx,1)
   1566e:	00 00                	add    %al,(%rax)
   15670:	70 3b                	jo     156ad <__GNU_EH_FRAME_HDR+0x1b6d>
   15672:	ff                   	(bad)  
   15673:	ff 17                	call   *(%rdi)
   15675:	00 00                	add    %al,(%rax)
   15677:	00 00                	add    %al,(%rax)
   15679:	00 00                	add    %al,(%rax)
   1567b:	00 10                	add    %dl,(%rax)
   1567d:	00 00                	add    %al,(%rax)
   1567f:	00 18                	add    %bl,(%rax)
   15681:	13 00                	adc    (%rax),%eax
   15683:	00 7c 3b ff          	add    %bh,-0x1(%rbx,%rdi,1)
   15687:	ff b5 00 00 00 00    	push   0x0(%rbp)
   1568d:	00 00                	add    %al,(%rax)
   1568f:	00 10                	add    %dl,(%rax)
   15691:	00 00                	add    %al,(%rax)
   15693:	00 2c 13             	add    %ch,(%rbx,%rdx,1)
   15696:	00 00                	add    %al,(%rax)
   15698:	28 3c ff             	sub    %bh,(%rdi,%rdi,8)
   1569b:	ff 12                	call   *(%rdx)
   1569d:	00 00                	add    %al,(%rax)
   1569f:	00 00                	add    %al,(%rax)
   156a1:	00 00                	add    %al,(%rax)
   156a3:	00 28                	add    %ch,(%rax)
   156a5:	00 00                	add    %al,(%rax)
   156a7:	00 40 13             	add    %al,0x13(%rax)
   156aa:	00 00                	add    %al,(%rax)
   156ac:	34 3c                	xor    $0x3c,%al
   156ae:	ff                   	(bad)  
   156af:	ff 37                	push   (%rdi)
   156b1:	00 00                	add    %al,(%rax)
   156b3:	00 00                	add    %al,(%rax)
   156b5:	46 0e                	rex.RX (bad) 
   156b7:	10 8c 02 44 0e 18 86 	adc    %cl,-0x79e7f1bc(%rdx,%rax,1)
   156be:	03 44 0e 20          	add    0x20(%rsi,%rcx,1),%eax
   156c2:	83 04 65 0e 18 41 0e 	addl   $0x10,0xe41180e(,%riz,2)
   156c9:	10 
   156ca:	42 0e                	rex.X (bad) 
   156cc:	08 00                	or     %al,(%rax)
   156ce:	00 00                	add    %al,(%rax)
   156d0:	4c 00 00             	rex.WR add %r8b,(%rax)
   156d3:	00 6c 13 00          	add    %ch,0x0(%rbx,%rdx,1)
   156d7:	00 48 3c             	add    %cl,0x3c(%rax)
   156da:	ff                   	(bad)  
   156db:	ff 31                	push   (%rcx)
   156dd:	02 00                	add    (%rax),%al
   156df:	00 00                	add    %al,(%rax)
   156e1:	46 0e                	rex.RX (bad) 
   156e3:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   156e9:	8e 03                	mov    (%rbx),%es
   156eb:	42 0e                	rex.X (bad) 
   156ed:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   156f3:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff8631653a <_end+0xffffffff862eb52a>
   156f9:	06                   	(bad)  
   156fa:	41 0e                	rex.B (bad) 
   156fc:	38 83 07 47 0e 70    	cmp    %al,0x700e4707(%rbx)
   15702:	75 0a                	jne    1570e <__GNU_EH_FRAME_HDR+0x1bce>
   15704:	0e                   	(bad)  
   15705:	38 41 0e             	cmp    %al,0xe(%rcx)
   15708:	30 41 0e             	xor    %al,0xe(%rcx)
   1570b:	28 42 0e             	sub    %al,0xe(%rdx)
   1570e:	20 42 0e             	and    %al,0xe(%rdx)
   15711:	18 42 0e             	sbb    %al,0xe(%rdx)
   15714:	10 42 0e             	adc    %al,0xe(%rdx)
   15717:	08 44 0b 00          	or     %al,0x0(%rbx,%rcx,1)
   1571b:	00 00                	add    %al,(%rax)
   1571d:	00 00                	add    %al,(%rax)
   1571f:	00 2c 00             	add    %ch,(%rax,%rax,1)
   15722:	00 00                	add    %al,(%rax)
   15724:	bc 13 00 00 38       	mov    $0x38000013,%esp
   15729:	3e ff                	ds (bad) 
   1572b:	ff                   	(bad)  
   1572c:	df 01                	filds  (%rcx)
   1572e:	00 00                	add    %al,(%rax)
   15730:	00 41 0e             	add    %al,0xe(%rcx)
   15733:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
   15739:	54                   	push   %rsp
   1573a:	8f 03                	pop    (%rbx)
   1573c:	8e 04 8d 05 8c 06 83 	mov    -0x7cf973fb(,%rcx,4),%es
   15743:	07                   	(bad)  
   15744:	03 ae 01 0a 0c 07    	add    0x70c0a01(%rsi),%ebp
   1574a:	08 41 0b             	or     %al,0xb(%rcx)
   1574d:	00 00                	add    %al,(%rax)
   1574f:	00 10                	add    %dl,(%rax)
   15751:	00 00                	add    %al,(%rax)
   15753:	00 ec                	add    %ch,%ah
   15755:	13 00                	adc    (%rax),%eax
   15757:	00 e8                	add    %ch,%al
   15759:	3f                   	(bad)  
   1575a:	ff                   	(bad)  
   1575b:	ff 08                	decl   (%rax)
   1575d:	00 00                	add    %al,(%rax)
   1575f:	00 00                	add    %al,(%rax)
   15761:	00 00                	add    %al,(%rax)
   15763:	00 10                	add    %dl,(%rax)
   15765:	00 00                	add    %al,(%rax)
   15767:	00 00                	add    %al,(%rax)
   15769:	14 00                	adc    $0x0,%al
   1576b:	00 e4                	add    %ah,%ah
   1576d:	3f                   	(bad)  
   1576e:	ff                   	(bad)  
   1576f:	ff 09                	decl   (%rcx)
   15771:	00 00                	add    %al,(%rax)
   15773:	00 00                	add    %al,(%rax)
   15775:	00 00                	add    %al,(%rax)
   15777:	00 10                	add    %dl,(%rax)
   15779:	00 00                	add    %al,(%rax)
   1577b:	00 14 14             	add    %dl,(%rsp,%rdx,1)
   1577e:	00 00                	add    %al,(%rax)
   15780:	e0 3f                	loopne 157c1 <__GNU_EH_FRAME_HDR+0x1c81>
   15782:	ff                   	(bad)  
   15783:	ff 15 00 00 00 00    	call   *0x0(%rip)        # 15789 <__GNU_EH_FRAME_HDR+0x1c49>
   15789:	00 00                	add    %al,(%rax)
   1578b:	00 1c 00             	add    %bl,(%rax,%rax,1)
   1578e:	00 00                	add    %al,(%rax)
   15790:	28 14 00             	sub    %dl,(%rax,%rax,1)
   15793:	00 ec                	add    %ch,%ah
   15795:	3f                   	(bad)  
   15796:	ff                   	(bad)  
   15797:	ff                   	(bad)  
   15798:	3d 00 00 00 00       	cmp    $0x0,%eax
   1579d:	45 0e                	rex.RB (bad) 
   1579f:	10 83 02 54 0a 0e    	adc    %al,0xe0a5402(%rbx)
   157a5:	08 47 0b             	or     %al,0xb(%rdi)
   157a8:	5c                   	pop    %rsp
   157a9:	0e                   	(bad)  
   157aa:	08 00                	or     %al,(%rax)
   157ac:	1c 00                	sbb    $0x0,%al
   157ae:	00 00                	add    %al,(%rax)
   157b0:	48 14 00             	rex.W adc $0x0,%al
   157b3:	00 0c 40             	add    %cl,(%rax,%rax,2)
   157b6:	ff                   	(bad)  
   157b7:	ff                   	(bad)  
   157b8:	3d 00 00 00 00       	cmp    $0x0,%eax
   157bd:	45 0e                	rex.RB (bad) 
   157bf:	10 83 02 54 0a 0e    	adc    %al,0xe0a5402(%rbx)
   157c5:	08 47 0b             	or     %al,0xb(%rdi)
   157c8:	5c                   	pop    %rsp
   157c9:	0e                   	(bad)  
   157ca:	08 00                	or     %al,(%rax)
   157cc:	24 00                	and    $0x0,%al
   157ce:	00 00                	add    %al,(%rax)
   157d0:	68 14 00 00 2c       	push   $0x2c000014
   157d5:	40 ff                	rex (bad) 
   157d7:	ff                   	(bad)  
   157d8:	7e 00                	jle    157da <__GNU_EH_FRAME_HDR+0x1c9a>
   157da:	00 00                	add    %al,(%rax)
   157dc:	00 4a 0e             	add    %cl,0xe(%rdx)
   157df:	10 86 02 47 0e 20    	adc    %al,0x200e4702(%rsi)
   157e5:	68 0a 0e 10 41       	push   $0x41100e0a
   157ea:	0e                   	(bad)  
   157eb:	08 46 0b             	or     %al,0xb(%rsi)
   157ee:	78 0e                	js     157fe <__GNU_EH_FRAME_HDR+0x1cbe>
   157f0:	08 c6                	or     %al,%dh
   157f2:	00 00                	add    %al,(%rax)
   157f4:	10 00                	adc    %al,(%rax)
   157f6:	00 00                	add    %al,(%rax)
   157f8:	90                   	nop
   157f9:	14 00                	adc    $0x0,%al
   157fb:	00 84 40 ff ff 23 00 	add    %al,0x23ffff(%rax,%rax,2)
   15802:	00 00                	add    %al,(%rax)
   15804:	00 00                	add    %al,(%rax)
   15806:	00 00                	add    %al,(%rax)
   15808:	10 00                	adc    %al,(%rax)
   1580a:	00 00                	add    %al,(%rax)
   1580c:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
   1580d:	14 00                	adc    $0x0,%al
   1580f:	00 a0 40 ff ff 2d    	add    %ah,0x2dffff40(%rax)
   15815:	00 00                	add    %al,(%rax)
   15817:	00 00                	add    %al,(%rax)
   15819:	00 00                	add    %al,(%rax)
   1581b:	00 10                	add    %dl,(%rax)
   1581d:	00 00                	add    %al,(%rax)
   1581f:	00 b8 14 00 00 bc    	add    %bh,-0x43ffffec(%rax)
   15825:	40 ff                	rex (bad) 
   15827:	ff 26                	jmp    *(%rsi)
   15829:	00 00                	add    %al,(%rax)
   1582b:	00 00                	add    %al,(%rax)
   1582d:	00 00                	add    %al,(%rax)
   1582f:	00 10                	add    %dl,(%rax)
   15831:	00 00                	add    %al,(%rax)
   15833:	00 cc                	add    %cl,%ah
   15835:	14 00                	adc    $0x0,%al
   15837:	00 d8                	add    %bl,%al
   15839:	40 ff                	rex (bad) 
   1583b:	ff 26                	jmp    *(%rsi)
   1583d:	00 00                	add    %al,(%rax)
   1583f:	00 00                	add    %al,(%rax)
   15841:	00 00                	add    %al,(%rax)
   15843:	00 10                	add    %dl,(%rax)
   15845:	00 00                	add    %al,(%rax)
   15847:	00 e0                	add    %ah,%al
   15849:	14 00                	adc    $0x0,%al
   1584b:	00 f4                	add    %dh,%ah
   1584d:	40 ff                	rex (bad) 
   1584f:	ff 70 00             	push   0x0(%rax)
   15852:	00 00                	add    %al,(%rax)
   15854:	00 00                	add    %al,(%rax)
   15856:	00 00                	add    %al,(%rax)
   15858:	40 00 00             	rex add %al,(%rax)
   1585b:	00 f4                	add    %dh,%ah
   1585d:	14 00                	adc    $0x0,%al
   1585f:	00 50 41             	add    %dl,0x41(%rax)
   15862:	ff                   	(bad)  
   15863:	ff 84 01 00 00 00 46 	incl   0x46000000(%rcx,%rax,1)
   1586a:	0e                   	(bad)  
   1586b:	10 8e 02 45 0e 18    	adc    %cl,0x180e4502(%rsi)
   15871:	8d 03                	lea    (%rbx),%eax
   15873:	45 0e                	rex.RB (bad) 
   15875:	20 8c 04 44 0e 28 86 	and    %cl,-0x79d7f1bc(%rsp,%rax,1)
   1587c:	05 41 0e 30 83       	add    $0x83300e41,%eax
   15881:	06                   	(bad)  
   15882:	4c 0e                	rex.WR (bad) 
   15884:	60                   	(bad)  
   15885:	02 fc                	add    %ah,%bh
   15887:	0a 0e                	or     (%rsi),%cl
   15889:	30 41 0e             	xor    %al,0xe(%rcx)
   1588c:	28 41 0e             	sub    %al,0xe(%rcx)
   1588f:	20 42 0e             	and    %al,0xe(%rdx)
   15892:	18 42 0e             	sbb    %al,0xe(%rdx)
   15895:	10 42 0e             	adc    %al,0xe(%rdx)
   15898:	08 4b 0b             	or     %cl,0xb(%rbx)
   1589b:	00 30                	add    %dh,(%rax)
   1589d:	00 00                	add    %al,(%rax)
   1589f:	00 38                	add    %bh,(%rax)
   158a1:	15 00 00 9c 42       	adc    $0x429c0000,%eax
   158a6:	ff                   	(bad)  
   158a7:	ff b5 00 00 00 00    	push   0x0(%rbp)
   158ad:	46 0e                	rex.RX (bad) 
   158af:	10 8c 02 44 0e 18 86 	adc    %cl,-0x79e7f1bc(%rdx,%rax,1)
   158b6:	03 44 0e 20          	add    0x20(%rsi,%rcx,1),%eax
   158ba:	83 04 47 0e          	addl   $0xe,(%rdi,%rax,2)
   158be:	30 02                	xor    %al,(%rdx)
   158c0:	44 0a 0e             	or     (%rsi),%r9b
   158c3:	20 41 0e             	and    %al,0xe(%rcx)
   158c6:	18 41 0e             	sbb    %al,0xe(%rcx)
   158c9:	10 42 0e             	adc    %al,0xe(%rdx)
   158cc:	08 43 0b             	or     %al,0xb(%rbx)
   158cf:	00 60 00             	add    %ah,0x0(%rax)
   158d2:	00 00                	add    %al,(%rax)
   158d4:	6c                   	insb   (%dx),%es:(%rdi)
   158d5:	15 00 00 28 43       	adc    $0x43280000,%eax
   158da:	ff                   	(bad)  
   158db:	ff 0d 03 00 00 00    	decl   0x3(%rip)        # 158e4 <__GNU_EH_FRAME_HDR+0x1da4>
   158e1:	46 0e                	rex.RX (bad) 
   158e3:	10 8f 02 45 0e 18    	adc    %cl,0x180e4502(%rdi)
   158e9:	8e 03                	mov    (%rbx),%es
   158eb:	45 0e                	rex.RB (bad) 
   158ed:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
   158f3:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff8631673d <_end+0xffffffff862eb72d>
   158f9:	06                   	(bad)  
   158fa:	44 0e                	rex.R (bad) 
   158fc:	38 83 07 47 0e 50    	cmp    %al,0x500e4707(%rbx)
   15902:	02 94 0a 0e 38 46 0e 	add    0xe46380e(%rdx,%rcx,1),%dl
   15909:	30 41 0e             	xor    %al,0xe(%rcx)
   1590c:	28 42 0e             	sub    %al,0xe(%rdx)
   1590f:	20 42 0e             	and    %al,0xe(%rdx)
   15912:	18 42 0e             	sbb    %al,0xe(%rdx)
   15915:	10 42 0e             	adc    %al,0xe(%rdx)
   15918:	08 49 0b             	or     %cl,0xb(%rcx)
   1591b:	02 7e 0a             	add    0xa(%rsi),%bh
   1591e:	0e                   	(bad)  
   1591f:	38 41 0e             	cmp    %al,0xe(%rcx)
   15922:	30 41 0e             	xor    %al,0xe(%rcx)
   15925:	28 42 0e             	sub    %al,0xe(%rdx)
   15928:	20 42 0e             	and    %al,0xe(%rdx)
   1592b:	18 42 0e             	sbb    %al,0xe(%rdx)
   1592e:	10 42 0e             	adc    %al,0xe(%rdx)
   15931:	08 41 0b             	or     %al,0xb(%rcx)
   15934:	4c 00 00             	rex.WR add %r8b,(%rax)
   15937:	00 d0                	add    %dl,%al
   15939:	15 00 00 d4 45       	adc    $0x45d40000,%eax
   1593e:	ff                   	(bad)  
   1593f:	ff                   	(bad)  
   15940:	db 00                	fildl  (%rax)
   15942:	00 00                	add    %al,(%rax)
   15944:	00 46 0e             	add    %al,0xe(%rsi)
   15947:	10 8d 02 45 0e 18    	adc    %cl,0x180e4502(%rbp)
   1594d:	8c 03                	mov    %es,(%rbx)
   1594f:	44 0e                	rex.R (bad) 
   15951:	20 86 04 44 0e 28    	and    %al,0x280e4404(%rsi)
   15957:	83 05 4d 0e 30 02 72 	addl   $0x72,0x2300e4d(%rip)        # 23167ab <_end+0x22eb79b>
   1595e:	0a 0e                	or     (%rsi),%cl
   15960:	28 41 0e             	sub    %al,0xe(%rcx)
   15963:	20 41 0e             	and    %al,0xe(%rcx)
   15966:	18 42 0e             	sbb    %al,0xe(%rdx)
   15969:	10 42 0e             	adc    %al,0xe(%rdx)
   1596c:	08 48 0b             	or     %cl,0xb(%rax)
   1596f:	51                   	push   %rcx
   15970:	0a 0e                	or     (%rsi),%cl
   15972:	28 41 0e             	sub    %al,0xe(%rcx)
   15975:	20 41 0e             	and    %al,0xe(%rcx)
   15978:	18 42 0e             	sbb    %al,0xe(%rdx)
   1597b:	10 42 0e             	adc    %al,0xe(%rdx)
   1597e:	08 49 0b             	or     %cl,0xb(%rcx)
   15981:	00 00                	add    %al,(%rax)
   15983:	00 20                	add    %ah,(%rax)
   15985:	00 00                	add    %al,(%rax)
   15987:	00 20                	add    %ah,(%rax)
   15989:	16                   	(bad)  
   1598a:	00 00                	add    %al,(%rax)
   1598c:	64 46 ff             	fs rex.RX (bad) 
   1598f:	ff 02                	incl   (%rdx)
   15991:	01 00                	add    %eax,(%rax)
   15993:	00 00                	add    %al,(%rax)
   15995:	45 0e                	rex.RB (bad) 
   15997:	10 83 02 44 0e 60    	adc    %al,0x600e4402(%rbx)
   1599d:	02 c6                	add    %dh,%al
   1599f:	0a 0e                	or     (%rsi),%cl
   159a1:	10 41 0e             	adc    %al,0xe(%rcx)
   159a4:	08 48 0b             	or     %cl,0xb(%rax)
   159a7:	00 18                	add    %bl,(%rax)
   159a9:	00 00                	add    %al,(%rax)
   159ab:	00 44 16 00          	add    %al,0x0(%rsi,%rdx,1)
   159af:	00 50 47             	add    %dl,0x47(%rax)
   159b2:	ff                   	(bad)  
   159b3:	ff 45 00             	incl   0x0(%rbp)
   159b6:	00 00                	add    %al,(%rax)
   159b8:	00 45 0e             	add    %al,0xe(%rbp)
   159bb:	10 83 02 76 0a 0e    	adc    %al,0xe0a7602(%rbx)
   159c1:	08 45 0b             	or     %al,0xb(%rbp)
   159c4:	24 00                	and    $0x0,%al
   159c6:	00 00                	add    %al,(%rax)
   159c8:	60                   	(bad)  
   159c9:	16                   	(bad)  
   159ca:	00 00                	add    %al,(%rax)
   159cc:	84 47 ff             	test   %al,-0x1(%rdi)
   159cf:	ff                   	(bad)  
   159d0:	39 00                	cmp    %eax,(%rax)
   159d2:	00 00                	add    %al,(%rax)
   159d4:	00 45 0e             	add    %al,0xe(%rbp)
   159d7:	10 86 02 41 0e 18    	adc    %al,0x180e4102(%rsi)
   159dd:	83 03 44             	addl   $0x44,(%rbx)
   159e0:	0e                   	(bad)  
   159e1:	20 6c 0e 18          	and    %ch,0x18(%rsi,%rcx,1)
   159e5:	41 0e                	rex.B (bad) 
   159e7:	10 41 0e             	adc    %al,0xe(%rcx)
   159ea:	08 00                	or     %al,(%rax)
   159ec:	28 00                	sub    %al,(%rax)
   159ee:	00 00                	add    %al,(%rax)
   159f0:	88 16                	mov    %dl,(%rsi)
   159f2:	00 00                	add    %al,(%rax)
   159f4:	9c                   	pushf  
   159f5:	47 ff                	rex.RXB (bad) 
   159f7:	ff d7                	call   *%rdi
   159f9:	00 00                	add    %al,(%rax)
   159fb:	00 00                	add    %al,(%rax)
   159fd:	45 0e                	rex.RB (bad) 
   159ff:	10 86 02 4b 0d 06    	adc    %al,0x60d4b02(%rsi)
   15a05:	44 8d 03             	lea    (%rbx),%r8d
   15a08:	8c 04 44             	mov    %es,(%rsp,%rax,2)
   15a0b:	83 05 02 7f 0a 0c 07 	addl   $0x7,0xc0a7f02(%rip)        # c0bd914 <_end+0xc092904>
   15a12:	08 49 0b             	or     %cl,0xb(%rcx)
   15a15:	00 00                	add    %al,(%rax)
   15a17:	00 28                	add    %ch,(%rax)
   15a19:	00 00                	add    %al,(%rax)
   15a1b:	00 b4 16 00 00 50 48 	add    %dh,0x48500000(%rsi,%rdx,1)
   15a22:	ff                   	(bad)  
   15a23:	ff                   	(bad)  
   15a24:	ef                   	out    %eax,(%dx)
   15a25:	00 00                	add    %al,(%rax)
   15a27:	00 00                	add    %al,(%rax)
   15a29:	45 0e                	rex.RB (bad) 
   15a2b:	10 86 02 47 0d 06    	adc    %al,0x60d4702(%rsi)
   15a31:	51                   	push   %rcx
   15a32:	8f 03                	pop    (%rbx)
   15a34:	8e 04 8d 05 8c 06 83 	mov    -0x7cf973fb(,%rcx,4),%es
   15a3b:	07                   	(bad)  
   15a3c:	02 cc                	add    %ah,%cl
   15a3e:	0a 0c 07             	or     (%rdi,%rax,1),%cl
   15a41:	08 41 0b             	or     %al,0xb(%rcx)
   15a44:	5c                   	pop    %rsp
   15a45:	00 00                	add    %al,(%rax)
   15a47:	00 e0                	add    %ah,%al
   15a49:	16                   	(bad)  
   15a4a:	00 00                	add    %al,(%rax)
   15a4c:	14 49                	adc    $0x49,%al
   15a4e:	ff                   	(bad)  
   15a4f:	ff c6                	inc    %esi
   15a51:	00 00                	add    %al,(%rax)
   15a53:	00 00                	add    %al,(%rax)
   15a55:	46 0e                	rex.RX (bad) 
   15a57:	10 8d 02 42 0e 18    	adc    %cl,0x180e4202(%rbp)
   15a5d:	8c 03                	mov    %es,(%rbx)
   15a5f:	41 0e                	rex.B (bad) 
   15a61:	20 86 04 41 0e 28    	and    %al,0x280e4104(%rsi)
   15a67:	83 05 47 0e 30 02 55 	addl   $0x55,0x2300e47(%rip)        # 23168b5 <_end+0x22eb8a5>
   15a6e:	0a 0e                	or     (%rsi),%cl
   15a70:	28 41 0e             	sub    %al,0xe(%rcx)
   15a73:	20 41 0e             	and    %al,0xe(%rcx)
   15a76:	18 42 0e             	sbb    %al,0xe(%rdx)
   15a79:	10 42 0e             	adc    %al,0xe(%rdx)
   15a7c:	08 44 0b 44          	or     %al,0x44(%rbx,%rcx,1)
   15a80:	0a 0e                	or     (%rsi),%cl
   15a82:	28 46 0e             	sub    %al,0xe(%rsi)
   15a85:	20 41 0e             	and    %al,0xe(%rcx)
   15a88:	18 42 0e             	sbb    %al,0xe(%rdx)
   15a8b:	10 42 0e             	adc    %al,0xe(%rdx)
   15a8e:	08 41 0b             	or     %al,0xb(%rcx)
   15a91:	71 0a                	jno    15a9d <__GNU_EH_FRAME_HDR+0x1f5d>
   15a93:	0e                   	(bad)  
   15a94:	28 41 0e             	sub    %al,0xe(%rcx)
   15a97:	20 41 0e             	and    %al,0xe(%rcx)
   15a9a:	18 42 0e             	sbb    %al,0xe(%rdx)
   15a9d:	10 42 0e             	adc    %al,0xe(%rdx)
   15aa0:	08 41 0b             	or     %al,0xb(%rcx)
   15aa3:	00 28                	add    %ch,(%rax)
   15aa5:	00 00                	add    %al,(%rax)
   15aa7:	00 40 17             	add    %al,0x17(%rax)
   15aaa:	00 00                	add    %al,(%rax)
   15aac:	84 49 ff             	test   %cl,-0x1(%rcx)
   15aaf:	ff 64 01 00          	jmp    *0x0(%rcx,%rax,1)
   15ab3:	00 00                	add    %al,(%rax)
   15ab5:	45 0e                	rex.RB (bad) 
   15ab7:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
   15abd:	47 8e 03             	rex.RXB mov (%r11),%es
   15ac0:	8d 04 8c             	lea    (%rsp,%rcx,4),%eax
   15ac3:	05 83 06 02 93       	add    $0x93020683,%eax
   15ac8:	0a 0c 07             	or     (%rdi,%rax,1),%cl
   15acb:	08 46 0b             	or     %al,0xb(%rsi)
   15ace:	00 00                	add    %al,(%rax)
   15ad0:	2c 00                	sub    $0x0,%al
   15ad2:	00 00                	add    %al,(%rax)
   15ad4:	6c                   	insb   (%dx),%es:(%rdi)
   15ad5:	17                   	(bad)  
   15ad6:	00 00                	add    %al,(%rax)
   15ad8:	c8 4a ff ff          	enter  $0xff4a,$0xff
   15adc:	3d 02 00 00 00       	cmp    $0x2,%eax
   15ae1:	45 0e                	rex.RB (bad) 
   15ae3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
   15ae9:	54                   	push   %rsp
   15aea:	8f 03                	pop    (%rbx)
   15aec:	8e 04 8d 05 8c 06 83 	mov    -0x7cf973fb(,%rcx,4),%es
   15af3:	07                   	(bad)  
   15af4:	03 32                	add    (%rdx),%esi
   15af6:	01 0a                	add    %ecx,(%rdx)
   15af8:	0c 07                	or     $0x7,%al
   15afa:	08 42 0b             	or     %al,0xb(%rdx)
   15afd:	00 00                	add    %al,(%rax)
   15aff:	00 30                	add    %dh,(%rax)
   15b01:	00 00                	add    %al,(%rax)
   15b03:	00 9c 17 00 00 d8 4c 	add    %bl,0x4cd80000(%rdi,%rdx,1)
   15b0a:	ff                   	(bad)  
   15b0b:	ff 66 00             	jmp    *0x0(%rsi)
   15b0e:	00 00                	add    %al,(%rax)
   15b10:	00 46 0e             	add    %al,0xe(%rsi)
   15b13:	10 8d 02 45 0e 18    	adc    %cl,0x180e4502(%rbp)
   15b19:	8c 03                	mov    %es,(%rbx)
   15b1b:	41 0e                	rex.B (bad) 
   15b1d:	20 83 04 44 0e 30    	and    %al,0x300e4404(%rbx)
   15b23:	66 0a 0e             	data16 or (%rsi),%cl
   15b26:	20 4a 0e             	and    %cl,0xe(%rdx)
   15b29:	18 42 0e             	sbb    %al,0xe(%rdx)
   15b2c:	10 42 0e             	adc    %al,0xe(%rdx)
   15b2f:	08 4c 0b 00          	or     %cl,0x0(%rbx,%rcx,1)
   15b33:	00 30                	add    %dh,(%rax)
   15b35:	00 00                	add    %al,(%rax)
   15b37:	00 d0                	add    %dl,%al
   15b39:	17                   	(bad)  
   15b3a:	00 00                	add    %al,(%rax)
   15b3c:	14 4d                	adc    $0x4d,%al
   15b3e:	ff                   	(bad)  
   15b3f:	ff f5                	push   %rbp
   15b41:	00 00                	add    %al,(%rax)
   15b43:	00 00                	add    %al,(%rax)
   15b45:	46 0e                	rex.RX (bad) 
   15b47:	10 8c 02 44 0e 18 86 	adc    %cl,-0x79e7f1bc(%rdx,%rax,1)
   15b4e:	03 41 0e             	add    0xe(%rcx),%eax
   15b51:	20 83 04 47 0e 30    	and    %al,0x300e4704(%rbx)
   15b57:	02 a3 0a 0e 20 41    	add    0x41200e0a(%rbx),%ah
   15b5d:	0e                   	(bad)  
   15b5e:	18 41 0e             	sbb    %al,0xe(%rcx)
   15b61:	10 42 0e             	adc    %al,0xe(%rdx)
   15b64:	08 47 0b             	or     %al,0xb(%rdi)
   15b67:	00 34 00             	add    %dh,(%rax,%rax,1)
   15b6a:	00 00                	add    %al,(%rax)
   15b6c:	04 18                	add    $0x18,%al
   15b6e:	00 00                	add    %al,(%rax)
   15b70:	e0 4d                	loopne 15bbf <__GNU_EH_FRAME_HDR+0x207f>
   15b72:	ff                   	(bad)  
   15b73:	ff 48 00             	decl   0x0(%rax)
   15b76:	00 00                	add    %al,(%rax)
   15b78:	00 46 0e             	add    %al,0xe(%rsi)
   15b7b:	10 8d 02 45 0e 18    	adc    %cl,0x180e4502(%rbp)
   15b81:	8c 03                	mov    %es,(%rbx)
   15b83:	44 0e                	rex.R (bad) 
   15b85:	20 86 04 44 0e 28    	and    %al,0x280e4404(%rsi)
   15b8b:	83 05 44 0e 30 6a 0e 	addl   $0xe,0x6a300e44(%rip)        # 6a3169d6 <_end+0x6a2eb9c6>
   15b92:	28 41 0e             	sub    %al,0xe(%rcx)
   15b95:	20 41 0e             	and    %al,0xe(%rcx)
   15b98:	18 42 0e             	sbb    %al,0xe(%rdx)
   15b9b:	10 42 0e             	adc    %al,0xe(%rdx)
   15b9e:	08 00                	or     %al,(%rax)
   15ba0:	74 00                	je     15ba2 <__GNU_EH_FRAME_HDR+0x2062>
   15ba2:	00 00                	add    %al,(%rax)
   15ba4:	3c 18                	cmp    $0x18,%al
   15ba6:	00 00                	add    %al,(%rax)
   15ba8:	f8                   	clc    
   15ba9:	4d ff                	rex.WRB (bad) 
   15bab:	ff 1c 01             	lcall  *(%rcx,%rax,1)
   15bae:	00 00                	add    %al,(%rax)
   15bb0:	00 46 0e             	add    %al,0xe(%rsi)
   15bb3:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   15bb9:	8e 03                	mov    (%rbx),%es
   15bbb:	42 0e                	rex.X (bad) 
   15bbd:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   15bc3:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff86316a0d <_end+0xffffffff862eb9fd>
   15bc9:	06                   	(bad)  
   15bca:	44 0e                	rex.R (bad) 
   15bcc:	38 83 07 44 0e 50    	cmp    %al,0x500e4407(%rbx)
   15bd2:	7f 0a                	jg     15bde <__GNU_EH_FRAME_HDR+0x209e>
   15bd4:	0e                   	(bad)  
   15bd5:	38 41 0e             	cmp    %al,0xe(%rcx)
   15bd8:	30 41 0e             	xor    %al,0xe(%rcx)
   15bdb:	28 42 0e             	sub    %al,0xe(%rdx)
   15bde:	20 42 0e             	and    %al,0xe(%rdx)
   15be1:	18 42 0e             	sbb    %al,0xe(%rdx)
   15be4:	10 42 0e             	adc    %al,0xe(%rdx)
   15be7:	08 47 0b             	or     %al,0xb(%rdi)
   15bea:	44 0a 0e             	or     (%rsi),%r9b
   15bed:	38 46 0e             	cmp    %al,0xe(%rsi)
   15bf0:	30 41 0e             	xor    %al,0xe(%rcx)
   15bf3:	28 42 0e             	sub    %al,0xe(%rdx)
   15bf6:	20 42 0e             	and    %al,0xe(%rdx)
   15bf9:	18 42 0e             	sbb    %al,0xe(%rdx)
   15bfc:	10 42 0e             	adc    %al,0xe(%rdx)
   15bff:	08 45 0b             	or     %al,0xb(%rbp)
   15c02:	02 8f 0e 38 43 0e    	add    0xe43380e(%rdi),%cl
   15c08:	30 41 0e             	xor    %al,0xe(%rcx)
   15c0b:	28 42 0e             	sub    %al,0xe(%rdx)
   15c0e:	20 42 0e             	and    %al,0xe(%rdx)
   15c11:	18 42 0e             	sbb    %al,0xe(%rdx)
   15c14:	10 42 0e             	adc    %al,0xe(%rdx)
   15c17:	08 78 00             	or     %bh,0x0(%rax)
   15c1a:	00 00                	add    %al,(%rax)
   15c1c:	b4 18                	mov    $0x18,%ah
   15c1e:	00 00                	add    %al,(%rax)
   15c20:	a0 4e ff ff 0b 01 00 	movabs 0x10bffff4e,%al
   15c27:	00 00 
   15c29:	46 0e                	rex.RX (bad) 
   15c2b:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   15c31:	8e 03                	mov    (%rbx),%es
   15c33:	42 0e                	rex.X (bad) 
   15c35:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   15c3b:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff86316a82 <_end+0xffffffff862eba72>
   15c41:	06                   	(bad)  
   15c42:	44 0e                	rex.R (bad) 
   15c44:	38 83 07 47 0e 40    	cmp    %al,0x400e4707(%rbx)
   15c4a:	02 85 0a 0e 38 41    	add    0x41380e0a(%rbp),%al
   15c50:	0e                   	(bad)  
   15c51:	30 41 0e             	xor    %al,0xe(%rcx)
   15c54:	28 42 0e             	sub    %al,0xe(%rdx)
   15c57:	20 42 0e             	and    %al,0xe(%rdx)
   15c5a:	18 42 0e             	sbb    %al,0xe(%rdx)
   15c5d:	10 42 0e             	adc    %al,0xe(%rdx)
   15c60:	08 49 0b             	or     %cl,0xb(%rcx)
   15c63:	44 0a 0e             	or     (%rsi),%r9b
   15c66:	38 46 0e             	cmp    %al,0xe(%rsi)
   15c69:	30 41 0e             	xor    %al,0xe(%rcx)
   15c6c:	28 42 0e             	sub    %al,0xe(%rdx)
   15c6f:	20 42 0e             	and    %al,0xe(%rdx)
   15c72:	18 42 0e             	sbb    %al,0xe(%rdx)
   15c75:	10 42 0e             	adc    %al,0xe(%rdx)
   15c78:	08 45 0b             	or     %al,0xb(%rbp)
   15c7b:	6f                   	outsl  %ds:(%rsi),(%dx)
   15c7c:	0a 0e                	or     (%rsi),%cl
   15c7e:	38 41 0e             	cmp    %al,0xe(%rcx)
   15c81:	30 41 0e             	xor    %al,0xe(%rcx)
   15c84:	28 42 0e             	sub    %al,0xe(%rdx)
   15c87:	20 42 0e             	and    %al,0xe(%rdx)
   15c8a:	18 42 0e             	sbb    %al,0xe(%rdx)
   15c8d:	10 42 0e             	adc    %al,0xe(%rdx)
   15c90:	08 41 0b             	or     %al,0xb(%rcx)
   15c93:	00 2c 00             	add    %ch,(%rax,%rax,1)
   15c96:	00 00                	add    %al,(%rax)
   15c98:	30 19                	xor    %bl,(%rcx)
   15c9a:	00 00                	add    %al,(%rax)
   15c9c:	34 4f                	xor    $0x4f,%al
   15c9e:	ff                   	(bad)  
   15c9f:	ff e7                	jmp    *%rdi
   15ca1:	00 00                	add    %al,(%rax)
   15ca3:	00 00                	add    %al,(%rax)
   15ca5:	45 0e                	rex.RB (bad) 
   15ca7:	10 86 02 51 0d 06    	adc    %al,0x60d5102(%rsi)
   15cad:	44 8f 03             	rex.R pop (%rbx)
   15cb0:	8e 04 47             	mov    (%rdi,%rax,2),%es
   15cb3:	8d 05 8c 06 4f 83    	lea    -0x7cb0f974(%rip),%eax        # ffffffff83506345 <_end+0xffffffff834db335>
   15cb9:	07                   	(bad)  
   15cba:	02 b1 0a 0c 07 08    	add    0x8070c0a(%rcx),%dh
   15cc0:	41 0b 00             	or     (%r8),%eax
   15cc3:	00 78 00             	add    %bh,0x0(%rax)
   15cc6:	00 00                	add    %al,(%rax)
   15cc8:	60                   	(bad)  
   15cc9:	19 00                	sbb    %eax,(%rax)
   15ccb:	00 f4                	add    %dh,%ah
   15ccd:	4f ff                	rex.WRXB (bad) 
   15ccf:	ff                   	(bad)  
   15cd0:	7f 01                	jg     15cd3 <__GNU_EH_FRAME_HDR+0x2193>
   15cd2:	00 00                	add    %al,(%rax)
   15cd4:	00 46 0e             	add    %al,0xe(%rsi)
   15cd7:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   15cdd:	8e 03                	mov    (%rbx),%es
   15cdf:	42 0e                	rex.X (bad) 
   15ce1:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   15ce7:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff86316b2e <_end+0xffffffff862ebb1e>
   15ced:	06                   	(bad)  
   15cee:	41 0e                	rex.B (bad) 
   15cf0:	38 83 07 47 0e 50    	cmp    %al,0x500e4707(%rbx)
   15cf6:	02 ad 0a 0e 38 41    	add    0x41380e0a(%rbp),%ch
   15cfc:	0e                   	(bad)  
   15cfd:	30 41 0e             	xor    %al,0xe(%rcx)
   15d00:	28 42 0e             	sub    %al,0xe(%rdx)
   15d03:	20 42 0e             	and    %al,0xe(%rdx)
   15d06:	18 42 0e             	sbb    %al,0xe(%rdx)
   15d09:	10 42 0e             	adc    %al,0xe(%rdx)
   15d0c:	08 41 0b             	or     %al,0xb(%rcx)
   15d0f:	4d 0a 0e             	rex.WRB or (%r14),%r9b
   15d12:	38 46 0e             	cmp    %al,0xe(%rsi)
   15d15:	30 41 0e             	xor    %al,0xe(%rcx)
   15d18:	28 42 0e             	sub    %al,0xe(%rdx)
   15d1b:	20 42 0e             	and    %al,0xe(%rdx)
   15d1e:	18 42 0e             	sbb    %al,0xe(%rdx)
   15d21:	10 42 0e             	adc    %al,0xe(%rdx)
   15d24:	08 47 0b             	or     %al,0xb(%rdi)
   15d27:	02 82 0e 38 43 0e    	add    0xe43380e(%rdx),%al
   15d2d:	30 41 0e             	xor    %al,0xe(%rcx)
   15d30:	28 42 0e             	sub    %al,0xe(%rdx)
   15d33:	20 42 0e             	and    %al,0xe(%rdx)
   15d36:	18 42 0e             	sbb    %al,0xe(%rdx)
   15d39:	10 42 0e             	adc    %al,0xe(%rdx)
   15d3c:	08 00                	or     %al,(%rax)
   15d3e:	00 00                	add    %al,(%rax)
   15d40:	6c                   	insb   (%dx),%es:(%rdi)
   15d41:	00 00                	add    %al,(%rax)
   15d43:	00 dc                	add    %bl,%ah
   15d45:	19 00                	sbb    %eax,(%rax)
   15d47:	00 f8                	add    %bh,%al
   15d49:	50                   	push   %rax
   15d4a:	ff                   	(bad)  
   15d4b:	ff 49 01             	decl   0x1(%rcx)
   15d4e:	00 00                	add    %al,(%rax)
   15d50:	00 46 0e             	add    %al,0xe(%rsi)
   15d53:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   15d59:	8e 03                	mov    (%rbx),%es
   15d5b:	42 0e                	rex.X (bad) 
   15d5d:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
   15d63:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff86316bad <_end+0xffffffff862ebb9d>
   15d69:	06                   	(bad)  
   15d6a:	44 0e                	rex.R (bad) 
   15d6c:	38 83 07 47 0e 60    	cmp    %al,0x600e4707(%rbx)
   15d72:	02 4b 0a             	add    0xa(%rbx),%cl
   15d75:	0e                   	(bad)  
   15d76:	38 43 0e             	cmp    %al,0xe(%rbx)
   15d79:	30 41 0e             	xor    %al,0xe(%rcx)
   15d7c:	28 42 0e             	sub    %al,0xe(%rdx)
   15d7f:	20 42 0e             	and    %al,0xe(%rdx)
   15d82:	18 42 0e             	sbb    %al,0xe(%rdx)
   15d85:	10 42 0e             	adc    %al,0xe(%rdx)
   15d88:	08 4b 0b             	or     %cl,0xb(%rbx)
   15d8b:	02 45 0e             	add    0xe(%rbp),%al
   15d8e:	68 47 0e 70 5c       	push   $0x5c700e47
   15d93:	0e                   	(bad)  
   15d94:	68 41 0e 60 44       	push   $0x44600e41
   15d99:	0a 0e                	or     (%rsi),%cl
   15d9b:	38 41 0e             	cmp    %al,0xe(%rcx)
   15d9e:	30 41 0e             	xor    %al,0xe(%rcx)
   15da1:	28 42 0e             	sub    %al,0xe(%rdx)
   15da4:	20 42 0e             	and    %al,0xe(%rdx)
   15da7:	18 42 0e             	sbb    %al,0xe(%rdx)
   15daa:	10 42 0e             	adc    %al,0xe(%rdx)
   15dad:	08 41 0b             	or     %al,0xb(%rcx)
   15db0:	3c 00                	cmp    $0x0,%al
   15db2:	00 00                	add    %al,(%rax)
   15db4:	4c 1a 00             	rex.WR sbb (%rax),%r8b
   15db7:	00 d8                	add    %bl,%al
   15db9:	51                   	push   %rcx
   15dba:	ff                   	(bad)  
   15dbb:	ff                   	(bad)  
   15dbc:	ed                   	in     (%dx),%eax
   15dbd:	00 00                	add    %al,(%rax)
   15dbf:	00 00                	add    %al,(%rax)
   15dc1:	46 0e                	rex.RX (bad) 
   15dc3:	10 8d 02 42 0e 18    	adc    %cl,0x180e4202(%rbp)
   15dc9:	8c 03                	mov    %es,(%rbx)
   15dcb:	41 0e                	rex.B (bad) 
   15dcd:	20 86 04 41 0e 28    	and    %al,0x280e4104(%rsi)
   15dd3:	83 05 44 0e 30 4f 0a 	addl   $0xa,0x4f300e44(%rip)        # 4f316c1e <_end+0x4f2ebc0e>
   15dda:	0e                   	(bad)  
   15ddb:	28 41 0e             	sub    %al,0xe(%rcx)
   15dde:	20 41 0e             	and    %al,0xe(%rcx)
   15de1:	18 42 0e             	sbb    %al,0xe(%rdx)
   15de4:	10 42 0e             	adc    %al,0xe(%rdx)
   15de7:	08 45 0b             	or     %al,0xb(%rbp)
   15dea:	00 00                	add    %al,(%rax)
   15dec:	00 00                	add    %al,(%rax)
   15dee:	00 00                	add    %al,(%rax)
   15df0:	30 00                	xor    %al,(%rax)
   15df2:	00 00                	add    %al,(%rax)
   15df4:	8c 1a                	mov    %ds,(%rdx)
   15df6:	00 00                	add    %al,(%rax)
   15df8:	88 52 ff             	mov    %dl,-0x1(%rdx)
   15dfb:	ff                   	(bad)  
   15dfc:	3f                   	(bad)  
   15dfd:	01 00                	add    %eax,(%rax)
   15dff:	00 00                	add    %al,(%rax)
   15e01:	42 0e                	rex.X (bad) 
   15e03:	10 8c 02 41 0e 18 86 	adc    %cl,-0x79e7f1bf(%rdx,%rax,1)
   15e0a:	03 41 0e             	add    0xe(%rcx),%eax
   15e0d:	20 83 04 46 0e 30    	and    %al,0x300e4604(%rbx)
   15e13:	79 0a                	jns    15e1f <__GNU_EH_FRAME_HDR+0x22df>
   15e15:	0e                   	(bad)  
   15e16:	20 43 0e             	and    %al,0xe(%rbx)
   15e19:	18 41 0e             	sbb    %al,0xe(%rcx)
   15e1c:	10 42 0e             	adc    %al,0xe(%rdx)
   15e1f:	08 47 0b             	or     %al,0xb(%rdi)
   15e22:	00 00                	add    %al,(%rax)
   15e24:	10 00                	adc    %al,(%rax)
   15e26:	00 00                	add    %al,(%rax)
   15e28:	c0 1a 00             	rcrb   $0x0,(%rdx)
   15e2b:	00 94 53 ff ff 6f 00 	add    %dl,0x6fffff(%rbx,%rdx,2)
   15e32:	00 00                	add    %al,(%rax)
   15e34:	00 00                	add    %al,(%rax)
   15e36:	00 00                	add    %al,(%rax)
   15e38:	10 00                	adc    %al,(%rax)
   15e3a:	00 00                	add    %al,(%rax)
   15e3c:	d4                   	(bad)  
   15e3d:	1a 00                	sbb    (%rax),%al
   15e3f:	00 f0                	add    %dh,%al
   15e41:	53                   	push   %rbx
   15e42:	ff                   	(bad)  
   15e43:	ff                   	(bad)  
   15e44:	7b 00                	jnp    15e46 <__GNU_EH_FRAME_HDR+0x2306>
   15e46:	00 00                	add    %al,(%rax)
   15e48:	00 00                	add    %al,(%rax)
   15e4a:	00 00                	add    %al,(%rax)
   15e4c:	10 00                	adc    %al,(%rax)
   15e4e:	00 00                	add    %al,(%rax)
   15e50:	e8 1a 00 00 5c       	call   5c015e6f <_end+0x5bfeae5f>
   15e55:	54                   	push   %rsp
   15e56:	ff                   	(bad)  
   15e57:	ff 85 00 00 00 00    	incl   0x0(%rbp)
   15e5d:	00 00                	add    %al,(%rax)
   15e5f:	00 10                	add    %dl,(%rax)
   15e61:	00 00                	add    %al,(%rax)
   15e63:	00 fc                	add    %bh,%ah
   15e65:	1a 00                	sbb    (%rax),%al
   15e67:	00 d8                	add    %bl,%al
   15e69:	54                   	push   %rsp
   15e6a:	ff                   	(bad)  
   15e6b:	ff 0f                	decl   (%rdi)
   15e6d:	00 00                	add    %al,(%rax)
   15e6f:	00 00                	add    %al,(%rax)
   15e71:	00 00                	add    %al,(%rax)
   15e73:	00 10                	add    %dl,(%rax)
   15e75:	00 00                	add    %al,(%rax)
   15e77:	00 10                	add    %dl,(%rax)
   15e79:	1b 00                	sbb    (%rax),%eax
   15e7b:	00 d4                	add    %dl,%ah
   15e7d:	54                   	push   %rsp
   15e7e:	ff                   	(bad)  
   15e7f:	ff 09                	decl   (%rcx)
   15e81:	00 00                	add    %al,(%rax)
   15e83:	00 00                	add    %al,(%rax)
   15e85:	00 00                	add    %al,(%rax)
   15e87:	00 10                	add    %dl,(%rax)
   15e89:	00 00                	add    %al,(%rax)
   15e8b:	00 24 1b             	add    %ah,(%rbx,%rbx,1)
   15e8e:	00 00                	add    %al,(%rax)
   15e90:	d0 54 ff ff          	rclb   -0x1(%rdi,%rdi,8)
   15e94:	0b 00                	or     (%rax),%eax
   15e96:	00 00                	add    %al,(%rax)
   15e98:	00 00                	add    %al,(%rax)
   15e9a:	00 00                	add    %al,(%rax)
   15e9c:	10 00                	adc    %al,(%rax)
   15e9e:	00 00                	add    %al,(%rax)
   15ea0:	38 1b                	cmp    %bl,(%rbx)
   15ea2:	00 00                	add    %al,(%rax)
   15ea4:	cc                   	int3   
   15ea5:	54                   	push   %rsp
   15ea6:	ff                   	(bad)  
   15ea7:	ff 0f                	decl   (%rdi)
   15ea9:	00 00                	add    %al,(%rax)
   15eab:	00 00                	add    %al,(%rax)
   15ead:	00 00                	add    %al,(%rax)
   15eaf:	00 10                	add    %dl,(%rax)
   15eb1:	00 00                	add    %al,(%rax)
   15eb3:	00 4c 1b 00          	add    %cl,0x0(%rbx,%rbx,1)
   15eb7:	00 c8                	add    %cl,%al
   15eb9:	54                   	push   %rsp
   15eba:	ff                   	(bad)  
   15ebb:	ff 12                	call   *(%rdx)
   15ebd:	00 00                	add    %al,(%rax)
   15ebf:	00 00                	add    %al,(%rax)
   15ec1:	00 00                	add    %al,(%rax)
   15ec3:	00 1c 00             	add    %bl,(%rax,%rax,1)
   15ec6:	00 00                	add    %al,(%rax)
   15ec8:	60                   	(bad)  
   15ec9:	1b 00                	sbb    (%rax),%eax
   15ecb:	00 d4                	add    %dl,%ah
   15ecd:	54                   	push   %rsp
   15ece:	ff                   	(bad)  
   15ecf:	ff 32                	push   (%rdx)
   15ed1:	00 00                	add    %al,(%rax)
   15ed3:	00 00                	add    %al,(%rax)
   15ed5:	48 0e                	rex.W (bad) 
   15ed7:	10 58 0a             	adc    %bl,0xa(%rax)
   15eda:	0e                   	(bad)  
   15edb:	08 48 0b             	or     %cl,0xb(%rax)
   15ede:	49 0e                	rex.WB (bad) 
   15ee0:	08 00                	or     %al,(%rax)
   15ee2:	00 00                	add    %al,(%rax)
   15ee4:	30 00                	xor    %al,(%rax)
   15ee6:	00 00                	add    %al,(%rax)
   15ee8:	80 1b 00             	sbbb   $0x0,(%rbx)
   15eeb:	00 f4                	add    %dh,%ah
   15eed:	54                   	push   %rsp
   15eee:	ff                   	(bad)  
   15eef:	ff 30                	push   (%rax)
   15ef1:	02 00                	add    (%rax),%al
   15ef3:	00 00                	add    %al,(%rax)
   15ef5:	4c 0e                	rex.WR (bad) 
   15ef7:	10 83 02 02 53 0a    	adc    %al,0xa530202(%rbx)
   15efd:	0e                   	(bad)  
   15efe:	08 41 0b             	or     %al,0xb(%rcx)
   15f01:	02 a3 0a 0e 08 45    	add    0x45080e0a(%rbx),%ah
   15f07:	0b 02                	or     (%rdx),%eax
   15f09:	59                   	pop    %rcx
   15f0a:	0a 0e                	or     (%rsi),%cl
   15f0c:	08 47 0b             	or     %al,0xb(%rdi)
   15f0f:	02 4f 0a             	add    0xa(%rdi),%cl
   15f12:	0e                   	(bad)  
   15f13:	08 49 0b             	or     %cl,0xb(%rcx)
   15f16:	00 00                	add    %al,(%rax)
   15f18:	10 00                	adc    %al,(%rax)
   15f1a:	00 00                	add    %al,(%rax)
   15f1c:	b4 1b                	mov    $0x1b,%ah
   15f1e:	00 00                	add    %al,(%rax)
   15f20:	f0 56                	lock push %rsi
   15f22:	ff                   	(bad)  
   15f23:	ff 43 00             	incl   0x0(%rbx)
   15f26:	00 00                	add    %al,(%rax)
   15f28:	00 00                	add    %al,(%rax)
   15f2a:	00 00                	add    %al,(%rax)
   15f2c:	48 00 00             	rex.W add %al,(%rax)
   15f2f:	00 c8                	add    %cl,%al
   15f31:	1b 00                	sbb    (%rax),%eax
   15f33:	00 2c 57             	add    %ch,(%rdi,%rdx,2)
   15f36:	ff                   	(bad)  
   15f37:	ff                   	(bad)  
   15f38:	ef                   	out    %eax,(%dx)
   15f39:	01 00                	add    %eax,(%rax)
   15f3b:	00 00                	add    %al,(%rax)
   15f3d:	4d 0e                	rex.WRB (bad) 
   15f3f:	10 8c 02 48 0e 18 86 	adc    %cl,-0x79e7f1b8(%rdx,%rax,1)
   15f46:	03 4b 0e             	add    0xe(%rbx),%ecx
   15f49:	20 83 04 03 0a 01    	and    %al,0x10a0304(%rbx)
   15f4f:	0a 0e                	or     (%rsi),%cl
   15f51:	18 44 0e 10          	sbb    %al,0x10(%rsi,%rcx,1)
   15f55:	42 0e                	rex.X (bad) 
   15f57:	08 48 0b             	or     %cl,0xb(%rax)
   15f5a:	4e 0a 0e             	rex.WRX or (%rsi),%r9b
   15f5d:	18 41 0e             	sbb    %al,0xe(%rcx)
   15f60:	10 42 0e             	adc    %al,0xe(%rdx)
   15f63:	08 47 0b             	or     %al,0xb(%rdi)
   15f66:	02 93 0a 0e 18 41    	add    0x41180e0a(%rbx),%dl
   15f6c:	0e                   	(bad)  
   15f6d:	10 42 0e             	adc    %al,0xe(%rdx)
   15f70:	08 41 0b             	or     %al,0xb(%rcx)
   15f73:	00 00                	add    %al,(%rax)
   15f75:	00 00                	add    %al,(%rax)
   15f77:	00 54 00 00          	add    %dl,0x0(%rax,%rax,1)
   15f7b:	00 14 1c             	add    %dl,(%rsp,%rbx,1)
   15f7e:	00 00                	add    %al,(%rax)
   15f80:	d0 58 ff             	rcrb   -0x1(%rax)
   15f83:	ff f4                	push   %rsp
   15f85:	00 00                	add    %al,(%rax)
   15f87:	00 00                	add    %al,(%rax)
   15f89:	46 0e                	rex.RX (bad) 
   15f8b:	10 8f 02 45 0e 18    	adc    %cl,0x180e4502(%rdi)
   15f91:	8e 03                	mov    (%rbx),%es
   15f93:	45 0e                	rex.RB (bad) 
   15f95:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
   15f9b:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff86316de5 <_end+0xffffffff862ebdd5>
   15fa1:	06                   	(bad)  
   15fa2:	44 0e                	rex.R (bad) 
   15fa4:	38 83 07 47 0e 50    	cmp    %al,0x500e4707(%rbx)
   15faa:	02 58 0e             	add    0xe(%rax),%bl
   15fad:	58                   	pop    %rax
   15fae:	4e 0e                	rex.WRX (bad) 
   15fb0:	60                   	(bad)  
   15fb1:	5e                   	pop    %rsi
   15fb2:	0e                   	(bad)  
   15fb3:	58                   	pop    %rax
   15fb4:	41 0e                	rex.B (bad) 
   15fb6:	50                   	push   %rax
   15fb7:	70 0a                	jo     15fc3 <__GNU_EH_FRAME_HDR+0x2483>
   15fb9:	0e                   	(bad)  
   15fba:	38 41 0e             	cmp    %al,0xe(%rcx)
   15fbd:	30 41 0e             	xor    %al,0xe(%rcx)
   15fc0:	28 42 0e             	sub    %al,0xe(%rdx)
   15fc3:	20 42 0e             	and    %al,0xe(%rdx)
   15fc6:	18 42 0e             	sbb    %al,0xe(%rdx)
   15fc9:	10 42 0e             	adc    %al,0xe(%rdx)
   15fcc:	08 45 0b             	or     %al,0xb(%rbp)
   15fcf:	00 18                	add    %bl,(%rax)
   15fd1:	00 00                	add    %al,(%rax)
   15fd3:	00 6c 1c 00          	add    %ch,0x0(%rsp,%rbx,1)
   15fd7:	00 78 59             	add    %bh,0x59(%rax)
   15fda:	ff                   	(bad)  
   15fdb:	ff 1a                	lcall  *(%rdx)
   15fdd:	00 00                	add    %al,(%rax)
   15fdf:	00 00                	add    %al,(%rax)
   15fe1:	48 0e                	rex.W (bad) 
   15fe3:	18 48 0e             	sbb    %cl,0xe(%rax)
   15fe6:	20 49 0e             	and    %cl,0xe(%rcx)
   15fe9:	08 00                	or     %al,(%rax)
   15feb:	00 10                	add    %dl,(%rax)
   15fed:	00 00                	add    %al,(%rax)
   15fef:	00 88 1c 00 00 7c    	add    %cl,0x7c00001c(%rax)
   15ff5:	59                   	pop    %rcx
   15ff6:	ff                   	(bad)  
   15ff7:	ff 10                	call   *(%rax)
   15ff9:	00 00                	add    %al,(%rax)
   15ffb:	00 00                	add    %al,(%rax)
   15ffd:	00 00                	add    %al,(%rax)
   15fff:	00 10                	add    %dl,(%rax)
   16001:	00 00                	add    %al,(%rax)
   16003:	00 9c 1c 00 00 78 59 	add    %bl,0x59780000(%rsp,%rbx,1)
   1600a:	ff                   	(bad)  
   1600b:	ff 10                	call   *(%rax)
   1600d:	00 00                	add    %al,(%rax)
   1600f:	00 00                	add    %al,(%rax)
   16011:	00 00                	add    %al,(%rax)
   16013:	00 10                	add    %dl,(%rax)
   16015:	00 00                	add    %al,(%rax)
   16017:	00 b0 1c 00 00 74    	add    %dh,0x7400001c(%rax)
   1601d:	59                   	pop    %rcx
   1601e:	ff                   	(bad)  
   1601f:	ff 10                	call   *(%rax)
   16021:	00 00                	add    %al,(%rax)
   16023:	00 00                	add    %al,(%rax)
   16025:	00 00                	add    %al,(%rax)
   16027:	00 10                	add    %dl,(%rax)
   16029:	00 00                	add    %al,(%rax)
   1602b:	00 c4                	add    %al,%ah
   1602d:	1c 00                	sbb    $0x0,%al
   1602f:	00 70 59             	add    %dh,0x59(%rax)
   16032:	ff                   	(bad)  
   16033:	ff 10                	call   *(%rax)
   16035:	00 00                	add    %al,(%rax)
   16037:	00 00                	add    %al,(%rax)
   16039:	00 00                	add    %al,(%rax)
   1603b:	00 10                	add    %dl,(%rax)
   1603d:	00 00                	add    %al,(%rax)
   1603f:	00 d8                	add    %bl,%al
   16041:	1c 00                	sbb    $0x0,%al
   16043:	00 6c 59 ff          	add    %ch,-0x1(%rcx,%rbx,2)
   16047:	ff 10                	call   *(%rax)
   16049:	00 00                	add    %al,(%rax)
   1604b:	00 00                	add    %al,(%rax)
   1604d:	00 00                	add    %al,(%rax)
   1604f:	00 14 00             	add    %dl,(%rax,%rax,1)
   16052:	00 00                	add    %al,(%rax)
   16054:	ec                   	in     (%dx),%al
   16055:	1c 00                	sbb    $0x0,%al
   16057:	00 68 59             	add    %ch,0x59(%rax)
   1605a:	ff                   	(bad)  
   1605b:	ff 10                	call   *(%rax)
	...
   16065:	00 00                	add    %al,(%rax)
   16067:	00 40 00             	add    %al,0x0(%rax)
   1606a:	00 00                	add    %al,(%rax)
   1606c:	04 1d                	add    $0x1d,%al
   1606e:	00 00                	add    %al,(%rax)
   16070:	60                   	(bad)  
   16071:	59                   	pop    %rcx
   16072:	ff                   	(bad)  
   16073:	ff b2 01 00 00 00    	push   0x1(%rdx)
   16079:	46 0e                	rex.RX (bad) 
   1607b:	10 8e 02 42 0e 18    	adc    %cl,0x180e4202(%rsi)
   16081:	8d 03                	lea    (%rbx),%eax
   16083:	45 0e                	rex.RB (bad) 
   16085:	20 8c 04 41 0e 28 86 	and    %cl,-0x79d7f1bf(%rsp,%rax,1)
   1608c:	05 41 0e 30 83       	add    $0x83300e41,%eax
   16091:	06                   	(bad)  
   16092:	46 0e                	rex.RX (bad) 
   16094:	40 7b 0a             	rex jnp 160a1 <__GNU_EH_FRAME_HDR+0x2561>
   16097:	0e                   	(bad)  
   16098:	30 43 0e             	xor    %al,0xe(%rbx)
   1609b:	28 41 0e             	sub    %al,0xe(%rcx)
   1609e:	20 42 0e             	and    %al,0xe(%rdx)
   160a1:	18 42 0e             	sbb    %al,0xe(%rdx)
   160a4:	10 42 0e             	adc    %al,0xe(%rdx)
   160a7:	08 46 0b             	or     %al,0xb(%rsi)
   160aa:	00 00                	add    %al,(%rax)
   160ac:	6c                   	insb   (%dx),%es:(%rdi)
   160ad:	00 00                	add    %al,(%rax)
   160af:	00 48 1d             	add    %cl,0x1d(%rax)
   160b2:	00 00                	add    %al,(%rax)
   160b4:	dc 5a ff             	fcompl -0x1(%rdx)
   160b7:	ff f7                	push   %rdi
   160b9:	02 00                	add    (%rax),%al
   160bb:	00 00                	add    %al,(%rax)
   160bd:	46 0e                	rex.RX (bad) 
   160bf:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   160c5:	8e 03                	mov    (%rbx),%es
   160c7:	42 0e                	rex.X (bad) 
   160c9:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   160cf:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff86316f16 <_end+0xffffffff862ebf06>
   160d5:	06                   	(bad)  
   160d6:	41 0e                	rex.B (bad) 
   160d8:	38 83 07 44 0e a0    	cmp    %al,-0x5ff1bbf9(%rbx)
   160de:	01 02                	add    %eax,(%rdx)
   160e0:	a3 0a 0e 38 43 0e 30 	movabs %eax,0xe41300e43380e0a
   160e7:	41 0e 
   160e9:	28 42 0e             	sub    %al,0xe(%rdx)
   160ec:	20 42 0e             	and    %al,0xe(%rdx)
   160ef:	18 42 0e             	sbb    %al,0xe(%rdx)
   160f2:	10 42 0e             	adc    %al,0xe(%rdx)
   160f5:	08 47 0b             	or     %al,0xb(%rdi)
   160f8:	02 b2 0e a8 01 4d    	add    0x4d01a80e(%rdx),%dh
   160fe:	0e                   	(bad)  
   160ff:	b0 01                	mov    $0x1,%al
   16101:	55                   	push   %rbp
   16102:	0e                   	(bad)  
   16103:	a8 01                	test   $0x1,%al
   16105:	41 0e                	rex.B (bad) 
   16107:	a0 01 02 94 0e a8 01 	movabs 0xe4401a80e940201,%al
   1610e:	44 0e 
   16110:	b0 01                	mov    $0x1,%al
   16112:	60                   	(bad)  
   16113:	0e                   	(bad)  
   16114:	a8 01                	test   $0x1,%al
   16116:	42 0e                	rex.X (bad) 
   16118:	a0 01 00 00 18 00 00 	movabs 0xb800000018000001,%al
   1611f:	00 b8 
   16121:	1d 00 00 6c 5d       	sbb    $0x5d6c0000,%eax
   16126:	ff                   	(bad)  
   16127:	ff 26                	jmp    *(%rsi)
   16129:	00 00                	add    %al,(%rax)
   1612b:	00 00                	add    %al,(%rax)
   1612d:	4d 0e                	rex.WRB (bad) 
   1612f:	18 48 0e             	sbb    %cl,0xe(%rax)
   16132:	20 49 0e             	and    %cl,0xe(%rcx)
   16135:	08 00                	or     %al,(%rax)
   16137:	00 38                	add    %bh,(%rax)
   16139:	00 00                	add    %al,(%rax)
   1613b:	00 d4                	add    %dl,%ah
   1613d:	1d 00 00 80 5d       	sbb    $0x5d800000,%eax
   16142:	ff                   	(bad)  
   16143:	ff b7 00 00 00 00    	push   0x0(%rdi)
   16149:	46 0e                	rex.RX (bad) 
   1614b:	10 8d 02 45 0e 18    	adc    %cl,0x180e4502(%rbp)
   16151:	8c 03                	mov    %es,(%rbx)
   16153:	44 0e                	rex.R (bad) 
   16155:	20 86 04 44 0e 28    	and    %al,0x280e4404(%rsi)
   1615b:	83 05 49 0e 50 02 8d 	addl   $0xffffff8d,0x2500e49(%rip)        # 2516fab <_end+0x24ebf9b>
   16162:	0a 0e                	or     (%rsi),%cl
   16164:	28 43 0e             	sub    %al,0xe(%rbx)
   16167:	20 41 0e             	and    %al,0xe(%rcx)
   1616a:	18 42 0e             	sbb    %al,0xe(%rdx)
   1616d:	10 42 0e             	adc    %al,0xe(%rdx)
   16170:	08 41 0b             	or     %al,0xb(%rcx)
   16173:	00 10                	add    %dl,(%rax)
   16175:	00 00                	add    %al,(%rax)
   16177:	00 10                	add    %dl,(%rax)
   16179:	1e                   	(bad)  
   1617a:	00 00                	add    %al,(%rax)
   1617c:	04 5e                	add    $0x5e,%al
   1617e:	ff                   	(bad)  
   1617f:	ff 10                	call   *(%rax)
   16181:	00 00                	add    %al,(%rax)
   16183:	00 00                	add    %al,(%rax)
   16185:	00 00                	add    %al,(%rax)
   16187:	00 38                	add    %bh,(%rax)
   16189:	00 00                	add    %al,(%rax)
   1618b:	00 24 1e             	add    %ah,(%rsi,%rbx,1)
   1618e:	00 00                	add    %al,(%rax)
   16190:	00 5e ff             	add    %bl,-0x1(%rsi)
   16193:	ff b7 00 00 00 00    	push   0x0(%rdi)
   16199:	46 0e                	rex.RX (bad) 
   1619b:	10 8d 02 45 0e 18    	adc    %cl,0x180e4502(%rbp)
   161a1:	8c 03                	mov    %es,(%rbx)
   161a3:	44 0e                	rex.R (bad) 
   161a5:	20 86 04 44 0e 28    	and    %al,0x280e4404(%rsi)
   161ab:	83 05 49 0e 50 02 8d 	addl   $0xffffff8d,0x2500e49(%rip)        # 2516ffb <_end+0x24ebfeb>
   161b2:	0a 0e                	or     (%rsi),%cl
   161b4:	28 43 0e             	sub    %al,0xe(%rbx)
   161b7:	20 41 0e             	and    %al,0xe(%rcx)
   161ba:	18 42 0e             	sbb    %al,0xe(%rdx)
   161bd:	10 42 0e             	adc    %al,0xe(%rdx)
   161c0:	08 41 0b             	or     %al,0xb(%rcx)
   161c3:	00 10                	add    %dl,(%rax)
   161c5:	00 00                	add    %al,(%rax)
   161c7:	00 60 1e             	add    %ah,0x1e(%rax)
   161ca:	00 00                	add    %al,(%rax)
   161cc:	84 5e ff             	test   %bl,-0x1(%rsi)
   161cf:	ff 10                	call   *(%rax)
   161d1:	00 00                	add    %al,(%rax)
   161d3:	00 00                	add    %al,(%rax)
   161d5:	00 00                	add    %al,(%rax)
   161d7:	00 38                	add    %bh,(%rax)
   161d9:	00 00                	add    %al,(%rax)
   161db:	00 74 1e 00          	add    %dh,0x0(%rsi,%rbx,1)
   161df:	00 80 5e ff ff b7    	add    %al,-0x480000a2(%rax)
   161e5:	00 00                	add    %al,(%rax)
   161e7:	00 00                	add    %al,(%rax)
   161e9:	46 0e                	rex.RX (bad) 
   161eb:	10 8d 02 45 0e 18    	adc    %cl,0x180e4502(%rbp)
   161f1:	8c 03                	mov    %es,(%rbx)
   161f3:	44 0e                	rex.R (bad) 
   161f5:	20 86 04 44 0e 28    	and    %al,0x280e4404(%rsi)
   161fb:	83 05 49 0e 50 02 8d 	addl   $0xffffff8d,0x2500e49(%rip)        # 251704b <_end+0x24ec03b>
   16202:	0a 0e                	or     (%rsi),%cl
   16204:	28 43 0e             	sub    %al,0xe(%rbx)
   16207:	20 41 0e             	and    %al,0xe(%rcx)
   1620a:	18 42 0e             	sbb    %al,0xe(%rdx)
   1620d:	10 42 0e             	adc    %al,0xe(%rdx)
   16210:	08 41 0b             	or     %al,0xb(%rcx)
   16213:	00 10                	add    %dl,(%rax)
   16215:	00 00                	add    %al,(%rax)
   16217:	00 b0 1e 00 00 04    	add    %dh,0x400001e(%rax)
   1621d:	5f                   	pop    %rdi
   1621e:	ff                   	(bad)  
   1621f:	ff 10                	call   *(%rax)
   16221:	00 00                	add    %al,(%rax)
   16223:	00 00                	add    %al,(%rax)
   16225:	00 00                	add    %al,(%rax)
   16227:	00 48 00             	add    %cl,0x0(%rax)
   1622a:	00 00                	add    %al,(%rax)
   1622c:	c4                   	(bad)  
   1622d:	1e                   	(bad)  
   1622e:	00 00                	add    %al,(%rax)
   16230:	00 5f ff             	add    %bl,-0x1(%rdi)
   16233:	ff 0d 01 00 00 00    	decl   0x1(%rip)        # 1623a <__GNU_EH_FRAME_HDR+0x26fa>
   16239:	46 0e                	rex.RX (bad) 
   1623b:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   16241:	8e 03                	mov    (%rbx),%es
   16243:	42 0e                	rex.X (bad) 
   16245:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   1624b:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff86317092 <_end+0xffffffff862ec082>
   16251:	06                   	(bad)  
   16252:	41 0e                	rex.B (bad) 
   16254:	38 83 07 44 0e 60    	cmp    %al,0x600e4407(%rbx)
   1625a:	02 e8                	add    %al,%ch
   1625c:	0a 0e                	or     (%rsi),%cl
   1625e:	38 44 0e 30          	cmp    %al,0x30(%rsi,%rcx,1)
   16262:	41 0e                	rex.B (bad) 
   16264:	28 42 0e             	sub    %al,0xe(%rdx)
   16267:	20 42 0e             	and    %al,0xe(%rdx)
   1626a:	18 42 0e             	sbb    %al,0xe(%rdx)
   1626d:	10 42 0e             	adc    %al,0xe(%rdx)
   16270:	08 41 0b             	or     %al,0xb(%rcx)
   16273:	00 10                	add    %dl,(%rax)
   16275:	00 00                	add    %al,(%rax)
   16277:	00 10                	add    %dl,(%rax)
   16279:	1f                   	(bad)  
   1627a:	00 00                	add    %al,(%rax)
   1627c:	c4                   	(bad)  
   1627d:	5f                   	pop    %rdi
   1627e:	ff                   	(bad)  
   1627f:	ff 10                	call   *(%rax)
   16281:	00 00                	add    %al,(%rax)
   16283:	00 00                	add    %al,(%rax)
   16285:	00 00                	add    %al,(%rax)
   16287:	00 30                	add    %dh,(%rax)
   16289:	00 00                	add    %al,(%rax)
   1628b:	00 24 1f             	add    %ah,(%rdi,%rbx,1)
   1628e:	00 00                	add    %al,(%rax)
   16290:	c0 5f ff ff          	rcrb   $0xff,-0x1(%rdi)
   16294:	dc 00                	faddl  (%rax)
   16296:	00 00                	add    %al,(%rax)
   16298:	00 46 0e             	add    %al,0xe(%rsi)
   1629b:	10 8c 02 41 0e 18 86 	adc    %cl,-0x79e7f1bf(%rdx,%rax,1)
   162a2:	03 46 0e             	add    0xe(%rsi),%eax
   162a5:	20 83 04 44 0e 40    	and    %al,0x400e4404(%rbx)
   162ab:	02 b3 0a 0e 20 43    	add    0x43200e0a(%rbx),%dh
   162b1:	0e                   	(bad)  
   162b2:	18 41 0e             	sbb    %al,0xe(%rcx)
   162b5:	10 42 0e             	adc    %al,0xe(%rdx)
   162b8:	08 46 0b             	or     %al,0xb(%rsi)
   162bb:	00 28                	add    %ch,(%rax)
   162bd:	00 00                	add    %al,(%rax)
   162bf:	00 58 1f             	add    %bl,0x1f(%rax)
   162c2:	00 00                	add    %al,(%rax)
   162c4:	6c                   	insb   (%dx),%es:(%rdi)
   162c5:	60                   	(bad)  
   162c6:	ff                   	(bad)  
   162c7:	ff                   	(bad)  
   162c8:	dc 00                	faddl  (%rax)
   162ca:	00 00                	add    %al,(%rax)
   162cc:	00 45 0e             	add    %al,0xe(%rbp)
   162cf:	10 86 02 41 0e 18    	adc    %al,0x180e4102(%rsi)
   162d5:	83 03 49             	addl   $0x49,(%rbx)
   162d8:	0e                   	(bad)  
   162d9:	40 02 b5 0a 0e 18 43 	add    0x43180e0a(%rbp),%sil
   162e0:	0e                   	(bad)  
   162e1:	10 41 0e             	adc    %al,0xe(%rcx)
   162e4:	08 48 0b             	or     %cl,0xb(%rax)
   162e7:	00 40 00             	add    %al,0x0(%rax)
   162ea:	00 00                	add    %al,(%rax)
   162ec:	84 1f                	test   %bl,(%rdi)
   162ee:	00 00                	add    %al,(%rax)
   162f0:	20 61 ff             	and    %ah,-0x1(%rcx)
   162f3:	ff                   	(bad)  
   162f4:	ef                   	out    %eax,(%dx)
   162f5:	00 00                	add    %al,(%rax)
   162f7:	00 00                	add    %al,(%rax)
   162f9:	46 0e                	rex.RX (bad) 
   162fb:	10 8e 02 42 0e 18    	adc    %cl,0x180e4202(%rsi)
   16301:	8d 03                	lea    (%rbx),%eax
   16303:	42 0e                	rex.X (bad) 
   16305:	20 8c 04 47 0e 28 86 	and    %cl,-0x79d7f1b9(%rsp,%rax,1)
   1630c:	05 41 0e 30 83       	add    $0x83300e41,%eax
   16311:	06                   	(bad)  
   16312:	44 0e                	rex.R (bad) 
   16314:	50                   	push   %rax
   16315:	02 c8                	add    %al,%cl
   16317:	0a 0e                	or     (%rsi),%cl
   16319:	30 44 0e 28          	xor    %al,0x28(%rsi,%rcx,1)
   1631d:	41 0e                	rex.B (bad) 
   1631f:	20 42 0e             	and    %al,0xe(%rdx)
   16322:	18 42 0e             	sbb    %al,0xe(%rdx)
   16325:	10 42 0e             	adc    %al,0xe(%rdx)
   16328:	08 41 0b             	or     %al,0xb(%rcx)
   1632b:	00 10                	add    %dl,(%rax)
   1632d:	00 00                	add    %al,(%rax)
   1632f:	00 c8                	add    %cl,%al
   16331:	1f                   	(bad)  
   16332:	00 00                	add    %al,(%rax)
   16334:	cc                   	int3   
   16335:	61                   	(bad)  
   16336:	ff                   	(bad)  
   16337:	ff 10                	call   *(%rax)
   16339:	00 00                	add    %al,(%rax)
   1633b:	00 00                	add    %al,(%rax)
   1633d:	00 00                	add    %al,(%rax)
   1633f:	00 34 00             	add    %dh,(%rax,%rax,1)
   16342:	00 00                	add    %al,(%rax)
   16344:	dc 1f                	fcompl (%rdi)
   16346:	00 00                	add    %al,(%rax)
   16348:	c8 61 ff ff          	enter  $0xff61,$0xff
   1634c:	5c                   	pop    %rsp
   1634d:	00 00                	add    %al,(%rax)
   1634f:	00 00                	add    %al,(%rax)
   16351:	45 0e                	rex.RB (bad) 
   16353:	10 86 02 44 0e 18    	adc    %al,0x180e4402(%rsi)
   16359:	83 03 47             	addl   $0x47,(%rbx)
   1635c:	0e                   	(bad)  
   1635d:	20 73 0a             	and    %dh,0xa(%rbx)
   16360:	0e                   	(bad)  
   16361:	18 43 0e             	sbb    %al,0xe(%rbx)
   16364:	10 41 0e             	adc    %al,0xe(%rcx)
   16367:	08 49 0b             	or     %cl,0xb(%rcx)
   1636a:	44 0e                	rex.R (bad) 
   1636c:	18 46 0e             	sbb    %al,0xe(%rsi)
   1636f:	10 41 0e             	adc    %al,0xe(%rcx)
   16372:	08 00                	or     %al,(%rax)
   16374:	00 00                	add    %al,(%rax)
   16376:	00 00                	add    %al,(%rax)
   16378:	10 00                	adc    %al,(%rax)
   1637a:	00 00                	add    %al,(%rax)
   1637c:	14 20                	adc    $0x20,%al
   1637e:	00 00                	add    %al,(%rax)
   16380:	10 62 ff             	adc    %ah,-0x1(%rdx)
   16383:	ff 64 00 00          	jmp    *0x0(%rax,%rax,1)
   16387:	00 00                	add    %al,(%rax)
   16389:	00 00                	add    %al,(%rax)
   1638b:	00 28                	add    %ch,(%rax)
   1638d:	00 00                	add    %al,(%rax)
   1638f:	00 28                	add    %ch,(%rax)
   16391:	20 00                	and    %al,(%rax)
   16393:	00 6c 62 ff          	add    %ch,-0x1(%rdx,%riz,2)
   16397:	ff 1c 01             	lcall  *(%rcx,%rax,1)
   1639a:	00 00                	add    %al,(%rax)
   1639c:	00 45 0e             	add    %al,0xe(%rbp)
   1639f:	10 86 02 41 0e 18    	adc    %al,0x180e4102(%rsi)
   163a5:	83 03 44             	addl   $0x44,(%rbx)
   163a8:	0e                   	(bad)  
   163a9:	20 02                	and    %al,(%rdx)
   163ab:	99                   	cltd   
   163ac:	0a 0e                	or     (%rsi),%cl
   163ae:	18 44 0e 10          	sbb    %al,0x10(%rsi,%rcx,1)
   163b2:	41 0e                	rex.B (bad) 
   163b4:	08 48 0b             	or     %cl,0xb(%rax)
   163b7:	00 18                	add    %bl,(%rax)
   163b9:	00 00                	add    %al,(%rax)
   163bb:	00 54 20 00          	add    %dl,0x0(%rax,%riz,1)
   163bf:	00 60 63             	add    %ah,0x63(%rax)
   163c2:	ff                   	(bad)  
   163c3:	ff 8e 00 00 00 00    	decl   0x0(%rsi)
   163c9:	48 0e                	rex.W (bad) 
   163cb:	20 02                	and    %al,(%rdx)
   163cd:	80 0a 0e             	orb    $0xe,(%rdx)
   163d0:	08 41 0b             	or     %al,0xb(%rcx)
   163d3:	00 10                	add    %dl,(%rax)
   163d5:	00 00                	add    %al,(%rax)
   163d7:	00 70 20             	add    %dh,0x20(%rax)
   163da:	00 00                	add    %al,(%rax)
   163dc:	d4                   	(bad)  
   163dd:	63 ff                	movsxd %edi,%edi
   163df:	ff 0d 00 00 00 00    	decl   0x0(%rip)        # 163e5 <__GNU_EH_FRAME_HDR+0x28a5>
   163e5:	00 00                	add    %al,(%rax)
   163e7:	00 38                	add    %bh,(%rax)
   163e9:	00 00                	add    %al,(%rax)
   163eb:	00 84 20 00 00 d0 63 	add    %al,0x63d00000(%rax,%riz,1)
   163f2:	ff                   	(bad)  
   163f3:	ff 2b                	ljmp   *(%rbx)
   163f5:	08 00                	or     %al,(%rax)
   163f7:	00 00                	add    %al,(%rax)
   163f9:	41 0e                	rex.B (bad) 
   163fb:	10 86 02 47 0e 18    	adc    %al,0x180e4702(%rsi)
   16401:	83 03 44             	addl   $0x44,(%rbx)
   16404:	0e                   	(bad)  
   16405:	20 03                	and    %al,(%rbx)
   16407:	81 01 0a 0e 18 41    	addl   $0x41180e0a,(%rcx)
   1640d:	0e                   	(bad)  
   1640e:	10 41 0e             	adc    %al,0xe(%rcx)
   16411:	08 41 0b             	or     %al,0xb(%rcx)
   16414:	03 a8 01 0a 0e 18    	add    0x180e0a01(%rax),%ebp
   1641a:	41 0e                	rex.B (bad) 
   1641c:	10 41 0e             	adc    %al,0xe(%rcx)
   1641f:	08 46 0b             	or     %al,0xb(%rsi)
   16422:	00 00                	add    %al,(%rax)
   16424:	18 00                	sbb    %al,(%rax)
   16426:	00 00                	add    %al,(%rax)
   16428:	c0 20 00             	shlb   $0x0,(%rax)
   1642b:	00 c4                	add    %al,%ah
   1642d:	6b ff ff             	imul   $0xffffffff,%edi,%edi
   16430:	e1 00                	loope  16432 <__GNU_EH_FRAME_HDR+0x28f2>
   16432:	00 00                	add    %al,(%rax)
   16434:	00 44 0e 20          	add    %al,0x20(%rsi,%rcx,1)
   16438:	02 a6 0a 0e 08 46    	add    0x46080e0a(%rsi),%ah
   1643e:	0b 00                	or     (%rax),%eax
   16440:	48 00 00             	rex.W add %al,(%rax)
   16443:	00 dc                	add    %bl,%ah
   16445:	20 00                	and    %al,(%rax)
   16447:	00 98 6c ff ff 4a    	add    %bl,0x4affff6c(%rax)
   1644d:	1b 00                	sbb    (%rax),%eax
   1644f:	00 00                	add    %al,(%rax)
   16451:	46 0e                	rex.RX (bad) 
   16453:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   16459:	8e 03                	mov    (%rbx),%es
   1645b:	42 0e                	rex.X (bad) 
   1645d:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   16463:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff863172aa <_end+0xffffffff862ec29a>
   16469:	06                   	(bad)  
   1646a:	44 0e                	rex.R (bad) 
   1646c:	38 83 07 44 0e 50    	cmp    %al,0x500e4407(%rbx)
   16472:	02 fa                	add    %dl,%bh
   16474:	0a 0e                	or     (%rsi),%cl
   16476:	38 44 0e 30          	cmp    %al,0x30(%rsi,%rcx,1)
   1647a:	41 0e                	rex.B (bad) 
   1647c:	28 42 0e             	sub    %al,0xe(%rdx)
   1647f:	20 42 0e             	and    %al,0xe(%rdx)
   16482:	18 42 0e             	sbb    %al,0xe(%rdx)
   16485:	10 42 0e             	adc    %al,0xe(%rdx)
   16488:	08 44 0b 00          	or     %al,0x0(%rbx,%rcx,1)
   1648c:	60                   	(bad)  
   1648d:	00 00                	add    %al,(%rax)
   1648f:	00 28                	add    %ch,(%rax)
   16491:	21 00                	and    %eax,(%rax)
   16493:	00 9c 87 ff ff 93 02 	add    %bl,0x293ffff(%rdi,%rax,4)
   1649a:	00 00                	add    %al,(%rax)
   1649c:	00 42 0e             	add    %al,0xe(%rdx)
   1649f:	10 8d 02 42 0e 18    	adc    %cl,0x180e4202(%rbp)
   164a5:	8c 03                	mov    %es,(%rbx)
   164a7:	41 0e                	rex.B (bad) 
   164a9:	20 86 04 41 0e 28    	and    %al,0x280e4104(%rsi)
   164af:	83 05 49 0e 40 02 4a 	addl   $0x4a,0x2400e49(%rip)        # 24172ff <_end+0x23ec2ef>
   164b6:	0a 0e                	or     (%rsi),%cl
   164b8:	28 43 0e             	sub    %al,0xe(%rbx)
   164bb:	20 41 0e             	and    %al,0xe(%rcx)
   164be:	18 42 0e             	sbb    %al,0xe(%rdx)
   164c1:	10 42 0e             	adc    %al,0xe(%rdx)
   164c4:	08 47 0b             	or     %al,0xb(%rdi)
   164c7:	02 82 0a 0e 28 41    	add    0x41280e0a(%rdx),%al
   164cd:	0e                   	(bad)  
   164ce:	20 41 0e             	and    %al,0xe(%rcx)
   164d1:	18 42 0e             	sbb    %al,0xe(%rdx)
   164d4:	10 42 0e             	adc    %al,0xe(%rdx)
   164d7:	08 48 0b             	or     %cl,0xb(%rax)
   164da:	03 6e 01             	add    0x1(%rsi),%ebp
   164dd:	0a 0e                	or     (%rsi),%cl
   164df:	28 41 0e             	sub    %al,0xe(%rcx)
   164e2:	20 41 0e             	and    %al,0xe(%rcx)
   164e5:	18 42 0e             	sbb    %al,0xe(%rdx)
   164e8:	10 42 0e             	adc    %al,0xe(%rdx)
   164eb:	08 44 0b 00          	or     %al,0x0(%rbx,%rcx,1)
   164ef:	00 60 00             	add    %ah,0x0(%rax)
   164f2:	00 00                	add    %al,(%rax)
   164f4:	8c 21                	mov    %fs,(%rcx)
   164f6:	00 00                	add    %al,(%rax)
   164f8:	d8 89 ff ff 00 0b    	fmuls  0xb00ffff(%rcx)
   164fe:	00 00                	add    %al,(%rax)
   16500:	00 4f 0e             	add    %cl,0xe(%rdi)
   16503:	10 8d 02 49 0e 18    	adc    %cl,0x180e4902(%rbp)
   16509:	8c 03                	mov    %es,(%rbx)
   1650b:	41 0e                	rex.B (bad) 
   1650d:	20 86 04 41 0e 28    	and    %al,0x280e4104(%rsi)
   16513:	83 05 44 0e 30 02 f3 	addl   $0xfffffff3,0x2300e44(%rip)        # 231735e <_end+0x22ec34e>
   1651a:	0a 0e                	or     (%rsi),%cl
   1651c:	28 41 0e             	sub    %al,0xe(%rcx)
   1651f:	20 41 0e             	and    %al,0xe(%rcx)
   16522:	18 42 0e             	sbb    %al,0xe(%rdx)
   16525:	10 42 0e             	adc    %al,0xe(%rdx)
   16528:	08 49 0b             	or     %cl,0xb(%rcx)
   1652b:	02 c8                	add    %al,%cl
   1652d:	0e                   	(bad)  
   1652e:	08 c3                	or     %al,%bl
   16530:	c6                   	(bad)  
   16531:	cc                   	int3   
   16532:	cd 48                	int    $0x48
   16534:	0e                   	(bad)  
   16535:	30 83 05 86 04 8c    	xor    %al,-0x73fb79fb(%rbx)
   1653b:	03 8d 02 02 9e 0a    	add    0xa9e0202(%rbp),%ecx
   16541:	0e                   	(bad)  
   16542:	28 41 0e             	sub    %al,0xe(%rcx)
   16545:	20 41 0e             	and    %al,0xe(%rcx)
   16548:	18 42 0e             	sbb    %al,0xe(%rdx)
   1654b:	10 42 0e             	adc    %al,0xe(%rdx)
   1654e:	08 44 0b 00          	or     %al,0x0(%rbx,%rcx,1)
   16552:	00 00                	add    %al,(%rax)
   16554:	28 00                	sub    %al,(%rax)
   16556:	00 00                	add    %al,(%rax)
   16558:	f0 21 00             	lock and %eax,(%rax)
   1655b:	00 74 94 ff          	add    %dh,-0x1(%rsp,%rdx,4)
   1655f:	ff 68 00             	ljmp   *0x0(%rax)
   16562:	00 00                	add    %al,(%rax)
   16564:	00 45 0e             	add    %al,0xe(%rbp)
   16567:	10 86 02 41 0e 18    	adc    %al,0x180e4102(%rsi)
   1656d:	83 03 47             	addl   $0x47,(%rbx)
   16570:	0e                   	(bad)  
   16571:	20 02                	and    %al,(%rdx)
   16573:	41 0a 0e             	or     (%r14),%cl
   16576:	18 44 0e 10          	sbb    %al,0x10(%rsi,%rcx,1)
   1657a:	41 0e                	rex.B (bad) 
   1657c:	08 45 0b             	or     %al,0xb(%rbp)
   1657f:	00 64 00 00          	add    %ah,0x0(%rax,%rax,1)
   16583:	00 1c 22             	add    %bl,(%rdx,%riz,1)
   16586:	00 00                	add    %al,(%rax)
   16588:	b8 94 ff ff 0d       	mov    $0xdffff94,%eax
   1658d:	07                   	(bad)  
   1658e:	00 00                	add    %al,(%rax)
   16590:	00 46 0e             	add    %al,0xe(%rsi)
   16593:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   16599:	8e 03                	mov    (%rbx),%es
   1659b:	42 0e                	rex.X (bad) 
   1659d:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   165a3:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff863173ea <_end+0xffffffff862ec3da>
   165a9:	06                   	(bad)  
   165aa:	41 0e                	rex.B (bad) 
   165ac:	38 83 07 47 0e 40    	cmp    %al,0x400e4707(%rbx)
   165b2:	02 ea                	add    %dl,%ch
   165b4:	0a 0e                	or     (%rsi),%cl
   165b6:	38 44 0e 30          	cmp    %al,0x30(%rsi,%rcx,1)
   165ba:	41 0e                	rex.B (bad) 
   165bc:	28 42 0e             	sub    %al,0xe(%rdx)
   165bf:	20 42 0e             	and    %al,0xe(%rdx)
   165c2:	18 42 0e             	sbb    %al,0xe(%rdx)
   165c5:	10 42 0e             	adc    %al,0xe(%rdx)
   165c8:	08 44 0b 03          	or     %al,0x3(%rbx,%rcx,1)
   165cc:	04 01                	add    $0x1,%al
   165ce:	0a 0e                	or     (%rsi),%cl
   165d0:	38 44 0e 30          	cmp    %al,0x30(%rsi,%rcx,1)
   165d4:	41 0e                	rex.B (bad) 
   165d6:	28 42 0e             	sub    %al,0xe(%rdx)
   165d9:	20 42 0e             	and    %al,0xe(%rdx)
   165dc:	18 42 0e             	sbb    %al,0xe(%rdx)
   165df:	10 42 0e             	adc    %al,0xe(%rdx)
   165e2:	08 4f 0b             	or     %cl,0xb(%rdi)
   165e5:	00 00                	add    %al,(%rax)
   165e7:	00 10                	add    %dl,(%rax)
   165e9:	00 00                	add    %al,(%rax)
   165eb:	00 84 22 00 00 60 9b 	add    %al,-0x64a00000(%rdx,%riz,1)
   165f2:	ff                   	(bad)  
   165f3:	ff 18                	lcall  *(%rax)
   165f5:	00 00                	add    %al,(%rax)
   165f7:	00 00                	add    %al,(%rax)
   165f9:	00 00                	add    %al,(%rax)
   165fb:	00 20                	add    %ah,(%rax)
   165fd:	00 00                	add    %al,(%rax)
   165ff:	00 98 22 00 00 6c    	add    %bl,0x6c000022(%rax)
   16605:	9b                   	fwait
   16606:	ff                   	(bad)  
   16607:	ff 8a 00 00 00 00    	decl   0x0(%rdx)
   1660d:	45 0e                	rex.RB (bad) 
   1660f:	10 83 02 02 61 0a    	adc    %al,0xa610202(%rbx)
   16615:	0e                   	(bad)  
   16616:	08 4a 0b             	or     %cl,0xb(%rdx)
   16619:	46 0a 0e             	rex.RX or (%rsi),%r9b
   1661c:	08 4a 0b             	or     %cl,0xb(%rdx)
   1661f:	00 3c 00             	add    %bh,(%rax,%rax,1)
   16622:	00 00                	add    %al,(%rax)
   16624:	bc 22 00 00 d8       	mov    $0xd8000022,%esp
   16629:	9b                   	fwait
   1662a:	ff                   	(bad)  
   1662b:	ff b2 01 00 00 00    	push   0x1(%rdx)
   16631:	46 0e                	rex.RX (bad) 
   16633:	10 8d 02 42 0e 18    	adc    %cl,0x180e4202(%rbp)
   16639:	8c 03                	mov    %es,(%rbx)
   1663b:	41 0e                	rex.B (bad) 
   1663d:	20 86 04 41 0e 28    	and    %al,0x280e4104(%rsi)
   16643:	83 05 47 0e 30 03 05 	addl   $0x5,0x3300e47(%rip)        # 3317491 <_end+0x32ec481>
   1664a:	01 0a                	add    %ecx,(%rdx)
   1664c:	0e                   	(bad)  
   1664d:	28 41 0e             	sub    %al,0xe(%rcx)
   16650:	20 41 0e             	and    %al,0xe(%rcx)
   16653:	18 42 0e             	sbb    %al,0xe(%rdx)
   16656:	10 42 0e             	adc    %al,0xe(%rdx)
   16659:	08 44 0b 00          	or     %al,0x0(%rbx,%rcx,1)
   1665d:	00 00                	add    %al,(%rax)
   1665f:	00 10                	add    %dl,(%rax)
   16661:	00 00                	add    %al,(%rax)
   16663:	00 fc                	add    %bh,%ah
   16665:	22 00                	and    (%rax),%al
   16667:	00 58 9d             	add    %bl,-0x63(%rax)
   1666a:	ff                   	(bad)  
   1666b:	ff ce                	dec    %esi
   1666d:	00 00                	add    %al,(%rax)
   1666f:	00 00                	add    %al,(%rax)
   16671:	00 00                	add    %al,(%rax)
   16673:	00 10                	add    %dl,(%rax)
   16675:	00 00                	add    %al,(%rax)
   16677:	00 10                	add    %dl,(%rax)
   16679:	23 00                	and    (%rax),%eax
   1667b:	00 14 9e             	add    %dl,(%rsi,%rbx,4)
   1667e:	ff                   	(bad)  
   1667f:	ff 1a                	lcall  *(%rdx)
   16681:	00 00                	add    %al,(%rax)
   16683:	00 00                	add    %al,(%rax)
   16685:	00 00                	add    %al,(%rax)
   16687:	00 38                	add    %bh,(%rax)
   16689:	00 00                	add    %al,(%rax)
   1668b:	00 24 23             	add    %ah,(%rbx,%riz,1)
   1668e:	00 00                	add    %al,(%rax)
   16690:	20 9e ff ff b3 00    	and    %bl,0xb3ffff(%rsi)
   16696:	00 00                	add    %al,(%rax)
   16698:	00 46 0e             	add    %al,0xe(%rsi)
   1669b:	10 8e 02 42 0e 18    	adc    %cl,0x180e4202(%rsi)
   166a1:	8d 03                	lea    (%rbx),%eax
   166a3:	45 0e                	rex.RB (bad) 
   166a5:	20 8c 04 41 0e 28 86 	and    %cl,-0x79d7f1bf(%rsp,%rax,1)
   166ac:	05 41 0e 30 83       	add    $0x83300e41,%eax
   166b1:	06                   	(bad)  
   166b2:	02 99 0e 28 44 0e    	add    0xe44280e(%rcx),%bl
   166b8:	20 42 0e             	and    %al,0xe(%rdx)
   166bb:	18 42 0e             	sbb    %al,0xe(%rdx)
   166be:	10 42 0e             	adc    %al,0xe(%rdx)
   166c1:	08 00                	or     %al,(%rax)
   166c3:	00 48 00             	add    %cl,0x0(%rax)
   166c6:	00 00                	add    %al,(%rax)
   166c8:	60                   	(bad)  
   166c9:	23 00                	and    (%rax),%eax
   166cb:	00 a4 9e ff ff ed 00 	add    %ah,0xedffff(%rsi,%rbx,4)
   166d2:	00 00                	add    %al,(%rax)
   166d4:	00 42 0e             	add    %al,0xe(%rdx)
   166d7:	10 8f 02 46 0e 18    	adc    %cl,0x180e4602(%rdi)
   166dd:	8e 03                	mov    (%rbx),%es
   166df:	42 0e                	rex.X (bad) 
   166e1:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   166e7:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff8631752e <_end+0xffffffff862ec51e>
   166ed:	06                   	(bad)  
   166ee:	41 0e                	rex.B (bad) 
   166f0:	38 83 07 44 0e 70    	cmp    %al,0x700e4407(%rbx)
   166f6:	02 5b 0a             	add    0xa(%rbx),%bl
   166f9:	0e                   	(bad)  
   166fa:	38 41 0e             	cmp    %al,0xe(%rcx)
   166fd:	30 41 0e             	xor    %al,0xe(%rcx)
   16700:	28 42 0e             	sub    %al,0xe(%rdx)
   16703:	20 42 0e             	and    %al,0xe(%rdx)
   16706:	18 42 0e             	sbb    %al,0xe(%rdx)
   16709:	10 42 0e             	adc    %al,0xe(%rdx)
   1670c:	08 49 0b             	or     %cl,0xb(%rcx)
   1670f:	00 10                	add    %dl,(%rax)
   16711:	00 00                	add    %al,(%rax)
   16713:	00 ac 23 00 00 48 9f 	add    %ch,-0x60b80000(%rbx,%riz,1)
   1671a:	ff                   	(bad)  
   1671b:	ff 1a                	lcall  *(%rdx)
   1671d:	00 00                	add    %al,(%rax)
   1671f:	00 00                	add    %al,(%rax)
   16721:	00 00                	add    %al,(%rax)
   16723:	00 60 00             	add    %ah,0x0(%rax)
   16726:	00 00                	add    %al,(%rax)
   16728:	c0 23 00             	shlb   $0x0,(%rbx)
   1672b:	00 54 9f ff          	add    %dl,-0x1(%rdi,%rbx,4)
   1672f:	ff 37                	push   (%rdi)
   16731:	01 00                	add    %eax,(%rax)
   16733:	00 00                	add    %al,(%rax)
   16735:	46 0e                	rex.RX (bad) 
   16737:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   1673d:	8e 03                	mov    (%rbx),%es
   1673f:	42 0e                	rex.X (bad) 
   16741:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
   16747:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff8631758e <_end+0xffffffff862ec57e>
   1674d:	06                   	(bad)  
   1674e:	41 0e                	rex.B (bad) 
   16750:	38 83 07 44 0e 50    	cmp    %al,0x500e4407(%rbx)
   16756:	02 e1                	add    %cl,%ah
   16758:	0a 0e                	or     (%rsi),%cl
   1675a:	38 44 0e 30          	cmp    %al,0x30(%rsi,%rcx,1)
   1675e:	41 0e                	rex.B (bad) 
   16760:	28 42 0e             	sub    %al,0xe(%rdx)
   16763:	20 42 0e             	and    %al,0xe(%rdx)
   16766:	18 42 0e             	sbb    %al,0xe(%rdx)
   16769:	10 42 0e             	adc    %al,0xe(%rdx)
   1676c:	08 45 0b             	or     %al,0xb(%rbp)
   1676f:	51                   	push   %rcx
   16770:	0a 0e                	or     (%rsi),%cl
   16772:	38 41 0e             	cmp    %al,0xe(%rcx)
   16775:	30 41 0e             	xor    %al,0xe(%rcx)
   16778:	28 42 0e             	sub    %al,0xe(%rdx)
   1677b:	20 42 0e             	and    %al,0xe(%rdx)
   1677e:	18 42 0e             	sbb    %al,0xe(%rdx)
   16781:	10 42 0e             	adc    %al,0xe(%rdx)
   16784:	08 4d 0b             	or     %cl,0xb(%rbp)
   16787:	00 40 00             	add    %al,0x0(%rax)
   1678a:	00 00                	add    %al,(%rax)
   1678c:	24 24                	and    $0x24,%al
   1678e:	00 00                	add    %al,(%rax)
   16790:	30 a0 ff ff f1 00    	xor    %ah,0xf1ffff(%rax)
   16796:	00 00                	add    %al,(%rax)
   16798:	00 46 0e             	add    %al,0xe(%rsi)
   1679b:	10 8e 02 42 0e 18    	adc    %cl,0x180e4202(%rsi)
   167a1:	8d 03                	lea    (%rbx),%eax
   167a3:	42 0e                	rex.X (bad) 
   167a5:	20 8c 04 44 0e 28 86 	and    %cl,-0x79d7f1bc(%rsp,%rax,1)
   167ac:	05 41 0e 30 83       	add    $0x83300e41,%eax
   167b1:	06                   	(bad)  
   167b2:	44 0e                	rex.R (bad) 
   167b4:	50                   	push   %rax
   167b5:	02 cd                	add    %ch,%cl
   167b7:	0a 0e                	or     (%rsi),%cl
   167b9:	30 44 0e 28          	xor    %al,0x28(%rsi,%rcx,1)
   167bd:	41 0e                	rex.B (bad) 
   167bf:	20 42 0e             	and    %al,0xe(%rdx)
   167c2:	18 42 0e             	sbb    %al,0xe(%rdx)
   167c5:	10 42 0e             	adc    %al,0xe(%rdx)
   167c8:	08 41 0b             	or     %al,0xb(%rcx)
   167cb:	00 10                	add    %dl,(%rax)
   167cd:	00 00                	add    %al,(%rax)
   167cf:	00 68 24             	add    %ch,0x24(%rax)
   167d2:	00 00                	add    %al,(%rax)
   167d4:	ec                   	in     (%dx),%al
   167d5:	a0 ff ff 09 00 00 00 	movabs 0x9ffff,%al
   167dc:	00 00 
   167de:	00 00                	add    %al,(%rax)
   167e0:	20 00                	and    %al,(%rax)
   167e2:	00 00                	add    %al,(%rax)
   167e4:	7c 24                	jl     1680a <__GNU_EH_FRAME_HDR+0x2cca>
   167e6:	00 00                	add    %al,(%rax)
   167e8:	e8 a0 ff ff 4f       	call   5001678d <_end+0x4ffeb77d>
   167ed:	00 00                	add    %al,(%rax)
   167ef:	00 00                	add    %al,(%rax)
   167f1:	45 0e                	rex.RB (bad) 
   167f3:	10 83 02 6a 0a 0e    	adc    %al,0xe0a6a02(%rbx)
   167f9:	08 41 0b             	or     %al,0xb(%rcx)
   167fc:	51                   	push   %rcx
   167fd:	0a 0e                	or     (%rsi),%cl
   167ff:	08 47 0b             	or     %al,0xb(%rdi)
   16802:	00 00                	add    %al,(%rax)
   16804:	20 00                	and    %al,(%rax)
   16806:	00 00                	add    %al,(%rax)
   16808:	a0 24 00 00 14 a1 ff 	movabs 0x47ffffa114000024,%al
   1680f:	ff 47 
   16811:	00 00                	add    %al,(%rax)
   16813:	00 00                	add    %al,(%rax)
   16815:	45 0e                	rex.RB (bad) 
   16817:	10 83 02 66 0a 0e    	adc    %al,0xe0a6602(%rbx)
   1681d:	08 45 0b             	or     %al,0xb(%rbp)
   16820:	4d 0a 0e             	rex.WRB or (%r14),%r9b
   16823:	08 43 0b             	or     %al,0xb(%rbx)
   16826:	00 00                	add    %al,(%rax)
   16828:	10 00                	adc    %al,(%rax)
   1682a:	00 00                	add    %al,(%rax)
   1682c:	c4                   	(bad)  
   1682d:	24 00                	and    $0x0,%al
   1682f:	00 e0                	add    %ah,%al
   16831:	b7 fe                	mov    $0xfe,%bh
   16833:	ff 13                	call   *(%rbx)
   16835:	00 00                	add    %al,(%rax)
   16837:	00 00                	add    %al,(%rax)
   16839:	00 00                	add    %al,(%rax)
   1683b:	00 10                	add    %dl,(%rax)
   1683d:	00 00                	add    %al,(%rax)
   1683f:	00 d8                	add    %bl,%al
   16841:	24 00                	and    $0x0,%al
   16843:	00 2c a1             	add    %ch,(%rcx,%riz,4)
   16846:	ff                   	(bad)  
   16847:	ff 07                	incl   (%rdi)
   16849:	00 00                	add    %al,(%rax)
   1684b:	00 00                	add    %al,(%rax)
   1684d:	00 00                	add    %al,(%rax)
   1684f:	00 14 00             	add    %dl,(%rax,%rax,1)
   16852:	00 00                	add    %al,(%rax)
   16854:	ec                   	in     (%dx),%al
   16855:	24 00                	and    $0x0,%al
   16857:	00 28                	add    %ch,(%rax)
   16859:	a1 ff ff 09 00 00 00 	movabs 0x9ffff,%eax
   16860:	00 00 
   16862:	00 00                	add    %al,(%rax)
   16864:	00 00                	add    %al,(%rax)
   16866:	00 00                	add    %al,(%rax)
   16868:	14 00                	adc    $0x0,%al
   1686a:	00 00                	add    %al,(%rax)
   1686c:	04 25                	add    $0x25,%al
   1686e:	00 00                	add    %al,(%rax)
   16870:	20 a1 ff ff 09 00    	and    %ah,0x9ffff(%rcx)
	...
   1687e:	00 00                	add    %al,(%rax)
   16880:	18 00                	sbb    %al,(%rax)
   16882:	00 00                	add    %al,(%rax)
   16884:	1c 25                	sbb    $0x25,%al
   16886:	00 00                	add    %al,(%rax)
   16888:	18 a1 ff ff 0f 00    	sbb    %ah,0xfffff(%rcx)
   1688e:	00 00                	add    %al,(%rax)
   16890:	00 45 0e             	add    %al,0xe(%rbp)
   16893:	10 41 0e             	adc    %al,0xe(%rcx)
   16896:	08 44 0e 10          	or     %al,0x10(%rsi,%rcx,1)
   1689a:	00 00                	add    %al,(%rax)
   1689c:	18 00                	sbb    %al,(%rax)
   1689e:	00 00                	add    %al,(%rax)
   168a0:	38 25 00 00 0c a1    	cmp    %ah,-0x5ef40000(%rip)        # ffffffffa10d68a6 <_end+0xffffffffa10ab896>
   168a6:	ff                   	(bad)  
   168a7:	ff 0f                	decl   (%rdi)
   168a9:	00 00                	add    %al,(%rax)
   168ab:	00 00                	add    %al,(%rax)
   168ad:	45 0e                	rex.RB (bad) 
   168af:	10 41 0e             	adc    %al,0xe(%rcx)
   168b2:	08 44 0e 10          	or     %al,0x10(%rsi,%rcx,1)
   168b6:	00 00                	add    %al,(%rax)
   168b8:	14 00                	adc    $0x0,%al
   168ba:	00 00                	add    %al,(%rax)
   168bc:	54                   	push   %rsp
   168bd:	25 00 00 00 a1       	and    $0xa1000000,%eax
   168c2:	ff                   	(bad)  
   168c3:	ff 14 00             	call   *(%rax,%rax,1)
   168c6:	00 00                	add    %al,(%rax)
   168c8:	00 4f 0e             	add    %cl,0xe(%rdi)
   168cb:	10 00                	adc    %al,(%rax)
   168cd:	00 00                	add    %al,(%rax)
   168cf:	00 20                	add    %ah,(%rax)
   168d1:	00 00                	add    %al,(%rax)
   168d3:	00 6c 25 00          	add    %ch,0x0(%rbp,%riz,1)
   168d7:	00 08                	add    %cl,(%rax)
   168d9:	a1 ff ff 46 00 00 00 	movabs 0x4a0000000046ffff,%eax
   168e0:	00 4a 
   168e2:	0e                   	(bad)  
   168e3:	10 83 02 6a 0a 0e    	adc    %al,0xe0a6a02(%rbx)
   168e9:	08 44 0b 46          	or     %al,0x46(%rbx,%rcx,1)
   168ed:	0e                   	(bad)  
   168ee:	08 42 c3             	or     %al,-0x3d(%rdx)
   168f1:	00 00                	add    %al,(%rax)
   168f3:	00 40 00             	add    %al,0x0(%rax)
   168f6:	00 00                	add    %al,(%rax)
   168f8:	90                   	nop
   168f9:	25 00 00 34 a1       	and    $0xa1340000,%eax
   168fe:	ff                   	(bad)  
   168ff:	ff                   	(bad)  
   16900:	7e 00                	jle    16902 <__GNU_EH_FRAME_HDR+0x2dc2>
   16902:	00 00                	add    %al,(%rax)
   16904:	00 4a 0e             	add    %cl,0xe(%rdx)
   16907:	10 86 02 46 0e 18    	adc    %al,0x180e4602(%rsi)
   1690d:	83 03 47             	addl   $0x47,(%rbx)
   16910:	0e                   	(bad)  
   16911:	20 6f 0a             	and    %ch,0xa(%rdi)
   16914:	0e                   	(bad)  
   16915:	18 43 0e             	sbb    %al,0xe(%rbx)
   16918:	10 41 0e             	adc    %al,0xe(%rcx)
   1691b:	08 46 0b             	or     %al,0xb(%rsi)
   1691e:	44 0a 0e             	or     (%rsi),%r9b
   16921:	18 46 0e             	sbb    %al,0xe(%rsi)
   16924:	10 41 0e             	adc    %al,0xe(%rcx)
   16927:	08 45 0b             	or     %al,0xb(%rbp)
   1692a:	4c 0e                	rex.WR (bad) 
   1692c:	18 46 0e             	sbb    %al,0xe(%rsi)
   1692f:	10 41 0e             	adc    %al,0xe(%rcx)
   16932:	08 45 c3             	or     %al,-0x3d(%rbp)
   16935:	c6 00 00             	movb   $0x0,(%rax)
   16938:	44 00 00             	add    %r8b,(%rax)
   1693b:	00 d4                	add    %dl,%ah
   1693d:	25 00 00 70 a1       	and    $0xa1700000,%eax
   16942:	ff                   	(bad)  
   16943:	ff 8e 00 00 00 00    	decl   0x0(%rsi)
   16949:	4b 0e                	rex.WXB (bad) 
   1694b:	10 8c 02 46 0e 18 86 	adc    %cl,-0x79e7f1ba(%rdx,%rax,1)
   16952:	03 41 0e             	add    0xe(%rcx),%eax
   16955:	20 83 04 7f 0a 0e    	and    %al,0xe0a7f04(%rbx)
   1695b:	18 43 0e             	sbb    %al,0xe(%rbx)
   1695e:	10 42 0e             	adc    %al,0xe(%rdx)
   16961:	08 4a 0b             	or     %cl,0xb(%rdx)
   16964:	41 0a 0e             	or     (%r14),%cl
   16967:	18 46 0e             	sbb    %al,0xe(%rsi)
   1696a:	10 42 0e             	adc    %al,0xe(%rdx)
   1696d:	08 47 0b             	or     %al,0xb(%rdi)
   16970:	49 0e                	rex.WB (bad) 
   16972:	18 46 0e             	sbb    %al,0xe(%rsi)
   16975:	10 42 0e             	adc    %al,0xe(%rdx)
   16978:	08 47 c3             	or     %al,-0x3d(%rdi)
   1697b:	c6                   	(bad)  
   1697c:	cc                   	int3   
   1697d:	00 00                	add    %al,(%rax)
   1697f:	00 4c 00 00          	add    %cl,0x0(%rax,%rax,1)
   16983:	00 1c 26             	add    %bl,(%rsi,%riz,1)
   16986:	00 00                	add    %al,(%rax)
   16988:	b8 a1 ff ff 9e       	mov    $0x9effffa1,%eax
   1698d:	00 00                	add    %al,(%rax)
   1698f:	00 00                	add    %al,(%rax)
   16991:	4f 0e                	rex.WRXB (bad) 
   16993:	10 8c 02 46 0e 18 86 	adc    %cl,-0x79e7f1ba(%rdx,%rax,1)
   1699a:	03 41 0e             	add    0xe(%rcx),%eax
   1699d:	20 83 04 7d 0a 0e    	and    %al,0xe0a7d04(%rbx)
   169a3:	18 43 0e             	sbb    %al,0xe(%rbx)
   169a6:	10 42 0e             	adc    %al,0xe(%rdx)
   169a9:	08 48 0b             	or     %cl,0xb(%rax)
   169ac:	49 0a 0e             	rex.WB or (%r14),%cl
   169af:	18 46 0e             	sbb    %al,0xe(%rsi)
   169b2:	10 42 0e             	adc    %al,0xe(%rdx)
   169b5:	08 47 0b             	or     %al,0xb(%rdi)
   169b8:	41 0a 0e             	or     (%r14),%cl
   169bb:	18 46 0e             	sbb    %al,0xe(%rsi)
   169be:	10 42 0e             	adc    %al,0xe(%rdx)
   169c1:	08 47 0b             	or     %al,0xb(%rdi)
   169c4:	50                   	push   %rax
   169c5:	0e                   	(bad)  
   169c6:	08 c3                	or     %al,%bl
   169c8:	c6                   	(bad)  
   169c9:	cc                   	int3   
   169ca:	00 00                	add    %al,(%rax)
   169cc:	00 00                	add    %al,(%rax)
   169ce:	00 00                	add    %al,(%rax)
   169d0:	28 00                	sub    %al,(%rax)
   169d2:	00 00                	add    %al,(%rax)
   169d4:	6c                   	insb   (%dx),%es:(%rdi)
   169d5:	26 00 00             	es add %al,(%rax)
   169d8:	08 a2 ff ff 72 00    	or     %ah,0x72ffff(%rdx)
   169de:	00 00                	add    %al,(%rax)
   169e0:	00 4a 0e             	add    %cl,0xe(%rdx)
   169e3:	10 83 02 60 0a 0e    	adc    %al,0xe0a6002(%rbx)
   169e9:	08 46 0b             	or     %al,0xb(%rsi)
   169ec:	60                   	(bad)  
   169ed:	0e                   	(bad)  
   169ee:	08 48 c3             	or     %cl,-0x3d(%rax)
   169f1:	48 0e                	rex.W (bad) 
   169f3:	10 83 02 51 0e 08    	adc    %al,0x80e5102(%rbx)
   169f9:	00 00                	add    %al,(%rax)
   169fb:	00 28                	add    %ch,(%rax)
   169fd:	00 00                	add    %al,(%rax)
   169ff:	00 98 26 00 00 5c    	add    %bl,0x5c000026(%rax)
   16a05:	a2 ff ff 72 00 00 00 	movabs %al,0x4a0000000072ffff
   16a0c:	00 4a 
   16a0e:	0e                   	(bad)  
   16a0f:	10 83 02 60 0a 0e    	adc    %al,0xe0a6002(%rbx)
   16a15:	08 46 0b             	or     %al,0xb(%rsi)
   16a18:	60                   	(bad)  
   16a19:	0e                   	(bad)  
   16a1a:	08 48 c3             	or     %cl,-0x3d(%rax)
   16a1d:	48 0e                	rex.W (bad) 
   16a1f:	10 83 02 51 0e 08    	adc    %al,0x80e5102(%rbx)
   16a25:	00 00                	add    %al,(%rax)
   16a27:	00 14 00             	add    %dl,(%rax,%rax,1)
   16a2a:	00 00                	add    %al,(%rax)
   16a2c:	c4                   	(bad)  
   16a2d:	26 00 00             	es add %al,(%rax)
   16a30:	e0 a3                	loopne 169d5 <__GNU_EH_FRAME_HDR+0x2e95>
   16a32:	ff                   	(bad)  
   16a33:	ff 58 00             	lcall  *0x0(%rax)
	...
   16a3e:	00 00                	add    %al,(%rax)
   16a40:	14 00                	adc    $0x0,%al
   16a42:	00 00                	add    %al,(%rax)
   16a44:	dc 26                	fsubl  (%rsi)
   16a46:	00 00                	add    %al,(%rax)
   16a48:	28 a4 ff ff 09 00 00 	sub    %ah,0x9ff(%rdi,%rdi,8)
	...
   16a57:	00 10                	add    %dl,(%rax)
   16a59:	00 00                	add    %al,(%rax)
   16a5b:	00 f4                	add    %dh,%ah
   16a5d:	26 00 00             	es add %al,(%rax)
   16a60:	d0 b5 fe ff 13 00    	shlb   0x13fffe(%rbp)
   16a66:	00 00                	add    %al,(%rax)
   16a68:	00 00                	add    %al,(%rax)
   16a6a:	00 00                	add    %al,(%rax)
   16a6c:	10 00                	adc    %al,(%rax)
   16a6e:	00 00                	add    %al,(%rax)
   16a70:	08 27                	or     %ah,(%rdi)
   16a72:	00 00                	add    %al,(%rax)
   16a74:	9c                   	pushf  
   16a75:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   16a76:	ff                   	(bad)  
   16a77:	ff 09                	decl   (%rcx)
   16a79:	00 00                	add    %al,(%rax)
   16a7b:	00 00                	add    %al,(%rax)
   16a7d:	00 00                	add    %al,(%rax)
   16a7f:	00 1c 00             	add    %bl,(%rax,%rax,1)
   16a82:	00 00                	add    %al,(%rax)
   16a84:	1c 27                	sbb    $0x27,%al
   16a86:	00 00                	add    %al,(%rax)
   16a88:	98                   	cwtl   
   16a89:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   16a8a:	ff                   	(bad)  
   16a8b:	ff 45 02             	incl   0x2(%rbp)
   16a8e:	00 00                	add    %al,(%rax)
   16a90:	00 6a 0e             	add    %ch,0xe(%rdx)
   16a93:	10 03                	adc    %al,(%rbx)
   16a95:	07                   	(bad)  
   16a96:	02 0e                	add    (%rsi),%cl
   16a98:	08 00                	or     %al,(%rax)
   16a9a:	00 00                	add    %al,(%rax)
   16a9c:	00 00                	add    %al,(%rax)
   16a9e:	00 00                	add    %al,(%rax)
   16aa0:	10 00                	adc    %al,(%rax)
   16aa2:	00 00                	add    %al,(%rax)
   16aa4:	3c 27                	cmp    $0x27,%al
   16aa6:	00 00                	add    %al,(%rax)
   16aa8:	a8 b5                	test   $0xb5,%al
   16aaa:	fe                   	(bad)  
   16aab:	ff 13                	call   *(%rbx)
   16aad:	00 00                	add    %al,(%rax)
   16aaf:	00 00                	add    %al,(%rax)
   16ab1:	00 00                	add    %al,(%rax)
   16ab3:	00 2c 00             	add    %ch,(%rax,%rax,1)
   16ab6:	00 00                	add    %al,(%rax)
   16ab8:	50                   	push   %rax
   16ab9:	27                   	(bad)  
   16aba:	00 00                	add    %al,(%rax)
   16abc:	b4 a7                	mov    $0xa7,%ah
   16abe:	ff                   	(bad)  
   16abf:	ff 8c 01 00 00 00 45 	decl   0x45000000(%rcx,%rax,1)
   16ac6:	0e                   	(bad)  
   16ac7:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
   16acd:	42 8f 03             	rex.X pop (%rbx)
   16ad0:	49 8e 04 8d 05 46 8c 	rex.WB mov 0x68c4605(,%rcx,4),%es
   16ad7:	06 
   16ad8:	83 07 03             	addl   $0x3,(%rdi)
   16adb:	6d                   	insl   (%dx),%es:(%rdi)
   16adc:	01 0a                	add    %ecx,(%rdx)
   16ade:	0c 07                	or     $0x7,%al
   16ae0:	08 41 0b             	or     %al,0xb(%rcx)
   16ae3:	00 34 00             	add    %dh,(%rax,%rax,1)
   16ae6:	00 00                	add    %al,(%rax)
   16ae8:	80 27 00             	andb   $0x0,(%rdi)
   16aeb:	00 14 a9             	add    %dl,(%rcx,%rbp,4)
   16aee:	ff                   	(bad)  
   16aef:	ff 66 00             	jmp    *0x0(%rsi)
   16af2:	00 00                	add    %al,(%rax)
   16af4:	00 45 0e             	add    %al,0xe(%rbp)
   16af7:	10 86 02 41 0e 18    	adc    %al,0x180e4102(%rsi)
   16afd:	83 03 4b             	addl   $0x4b,(%rbx)
   16b00:	0e                   	(bad)  
   16b01:	20 4e 0a             	and    %cl,0xa(%rsi)
   16b04:	0e                   	(bad)  
   16b05:	18 44 0e 10          	sbb    %al,0x10(%rsi,%rcx,1)
   16b09:	41 0e                	rex.B (bad) 
   16b0b:	08 44 0b 65          	or     %al,0x65(%rbx,%rcx,1)
   16b0f:	0a 0e                	or     (%rsi),%cl
   16b11:	18 44 0e 10          	sbb    %al,0x10(%rsi,%rcx,1)
   16b15:	41 0e                	rex.B (bad) 
   16b17:	08 46 0b             	or     %al,0xb(%rsi)
	...

Disassembly of section .fini_array:

0000000000017da0 <.fini_array>:
   17da0:	00 20                	add    %ah,(%rax)
   17da2:	00 00                	add    %al,(%rax)
   17da4:	00 00                	add    %al,(%rax)
   17da6:	00 00                	add    %al,(%rax)
   17da8:	10 20                	adc    %ah,(%rax)
   17daa:	00 00                	add    %al,(%rax)
   17dac:	00 00                	add    %al,(%rax)
   17dae:	00 00                	add    %al,(%rax)
   17db0:	30 20                	xor    %ah,(%rax)
   17db2:	00 00                	add    %al,(%rax)
   17db4:	00 00                	add    %al,(%rax)
   17db6:	00 00                	add    %al,(%rax)
   17db8:	50                   	push   %rax
   17db9:	20 00                	and    %al,(%rax)
   17dbb:	00 00                	add    %al,(%rax)
   17dbd:	00 00                	add    %al,(%rax)
	...

Disassembly of section .data.rel.ro:

0000000000017dc0 <g_ecall_table>:
   17dc0:	03 00                	add    (%rax),%eax
   17dc2:	00 00                	add    %al,(%rax)
   17dc4:	00 00                	add    %al,(%rax)
   17dc6:	00 00                	add    %al,(%rax)
   17dc8:	06                   	(bad)  
   17dc9:	40 00 00             	rex add %al,(%rax)
	...
   17dd8:	62 41                	(bad)  
	...
   17de6:	00 00                	add    %al,(%rax)
   17de8:	00 41 00             	add    %al,0x0(%rcx)
	...

0000000000017df8 <__intel_security_cookie>:
	...

0000000000017e00 <g_cpu_core_num>:
   17e00:	00 00                	add    %al,(%rax)
	...

0000000000017e04 <g_aexnotify_supported>:
   17e04:	00 00                	add    %al,(%rax)
	...

0000000000017e08 <g_enclave_size>:
	...

0000000000017e10 <g_enclave_base>:
	...

0000000000017e18 <g_sdk_version>:
   17e18:	00 00                	add    %al,(%rax)
	...

0000000000017e1c <EDMM_supported>:
   17e1c:	00 00                	add    %al,(%rax)
	...

0000000000017e20 <g_cpu_feature_indicator>:
	...

0000000000017e28 <heap_min_size>:
	...

0000000000017e30 <is_edmm_supported>:
	...

0000000000017e38 <heap_size>:
	...

0000000000017e40 <heap_base>:
	...

0000000000017e48 <__memset_vp>:
   17e48:	c0 08 01             	rorb   $0x1,(%rax)
   17e4b:	00 00                	add    %al,(%rax)
   17e4d:	00 00                	add    %al,(%rax)
	...

0000000000017e50 <rsrv_mem_min_size>:
	...

0000000000017e58 <rsrv_mem_size>:
	...

0000000000017e60 <rsrv_mem_base>:
	...

Disassembly of section .dynamic:

0000000000017e68 <_DYNAMIC>:
   17e68:	1a 00                	sbb    (%rax),%al
   17e6a:	00 00                	add    %al,(%rax)
   17e6c:	00 00                	add    %al,(%rax)
   17e6e:	00 00                	add    %al,(%rax)
   17e70:	a0 7d 01 00 00 00 00 	movabs 0x1c0000000000017d,%al
   17e77:	00 1c 
   17e79:	00 00                	add    %al,(%rax)
   17e7b:	00 00                	add    %al,(%rax)
   17e7d:	00 00                	add    %al,(%rax)
   17e7f:	00 20                	add    %ah,(%rax)
   17e81:	00 00                	add    %al,(%rax)
   17e83:	00 00                	add    %al,(%rax)
   17e85:	00 00                	add    %al,(%rax)
   17e87:	00 f5                	add    %dh,%ch
   17e89:	fe                   	(bad)  
   17e8a:	ff 6f 00             	ljmp   *0x0(%rdi)
   17e8d:	00 00                	add    %al,(%rax)
   17e8f:	00 90 03 00 00 00    	add    %dl,0x3(%rax)
   17e95:	00 00                	add    %al,(%rax)
   17e97:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 17e9d <_DYNAMIC+0x35>
   17e9d:	00 00                	add    %al,(%rax)
   17e9f:	00 20                	add    %ah,(%rax)
   17ea1:	08 00                	or     %al,(%rax)
   17ea3:	00 00                	add    %al,(%rax)
   17ea5:	00 00                	add    %al,(%rax)
   17ea7:	00 06                	add    %al,(%rsi)
   17ea9:	00 00                	add    %al,(%rax)
   17eab:	00 00                	add    %al,(%rax)
   17ead:	00 00                	add    %al,(%rax)
   17eaf:	00 90 04 00 00 00    	add    %dl,0x4(%rax)
   17eb5:	00 00                	add    %al,(%rax)
   17eb7:	00 0a                	add    %cl,(%rdx)
   17eb9:	00 00                	add    %al,(%rax)
   17ebb:	00 00                	add    %al,(%rax)
   17ebd:	00 00                	add    %al,(%rax)
   17ebf:	00 f4                	add    %dh,%ah
   17ec1:	01 00                	add    %eax,(%rax)
   17ec3:	00 00                	add    %al,(%rax)
   17ec5:	00 00                	add    %al,(%rax)
   17ec7:	00 0b                	add    %cl,(%rbx)
   17ec9:	00 00                	add    %al,(%rax)
   17ecb:	00 00                	add    %al,(%rax)
   17ecd:	00 00                	add    %al,(%rax)
   17ecf:	00 18                	add    %bl,(%rax)
   17ed1:	00 00                	add    %al,(%rax)
   17ed3:	00 00                	add    %al,(%rax)
   17ed5:	00 00                	add    %al,(%rax)
   17ed7:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 17edd <_DYNAMIC+0x75>
	...
   17ee5:	00 00                	add    %al,(%rax)
   17ee7:	00 03                	add    %al,(%rbx)
   17ee9:	00 00                	add    %al,(%rax)
   17eeb:	00 00                	add    %al,(%rax)
   17eed:	00 00                	add    %al,(%rax)
   17eef:	00 a8 7f 01 00 00    	add    %ch,0x17f(%rax)
   17ef5:	00 00                	add    %al,(%rax)
   17ef7:	00 07                	add    %al,(%rdi)
   17ef9:	00 00                	add    %al,(%rax)
   17efb:	00 00                	add    %al,(%rax)
   17efd:	00 00                	add    %al,(%rax)
   17eff:	00 18                	add    %bl,(%rax)
   17f01:	0a 00                	or     (%rax),%al
   17f03:	00 00                	add    %al,(%rax)
   17f05:	00 00                	add    %al,(%rax)
   17f07:	00 08                	add    %cl,(%rax)
   17f09:	00 00                	add    %al,(%rax)
   17f0b:	00 00                	add    %al,(%rax)
   17f0d:	00 00                	add    %al,(%rax)
   17f0f:	00 f8                	add    %bh,%al
   17f11:	01 00                	add    %eax,(%rax)
   17f13:	00 00                	add    %al,(%rax)
   17f15:	00 00                	add    %al,(%rax)
   17f17:	00 09                	add    %cl,(%rcx)
   17f19:	00 00                	add    %al,(%rax)
   17f1b:	00 00                	add    %al,(%rax)
   17f1d:	00 00                	add    %al,(%rax)
   17f1f:	00 18                	add    %bl,(%rax)
   17f21:	00 00                	add    %al,(%rax)
   17f23:	00 00                	add    %al,(%rax)
   17f25:	00 00                	add    %al,(%rax)
   17f27:	00 1e                	add    %bl,(%rsi)
   17f29:	00 00                	add    %al,(%rax)
   17f2b:	00 00                	add    %al,(%rax)
   17f2d:	00 00                	add    %al,(%rax)
   17f2f:	00 08                	add    %cl,(%rax)
   17f31:	00 00                	add    %al,(%rax)
   17f33:	00 00                	add    %al,(%rax)
   17f35:	00 00                	add    %al,(%rax)
   17f37:	00 fb                	add    %bh,%bl
   17f39:	ff                   	(bad)  
   17f3a:	ff 6f 00             	ljmp   *0x0(%rdi)
   17f3d:	00 00                	add    %al,(%rax)
   17f3f:	00 01                	add    %al,(%rcx)
   17f41:	00 00                	add    %al,(%rax)
   17f43:	08 00                	or     %al,(%rax)
   17f45:	00 00                	add    %al,(%rax)
   17f47:	00 f9                	add    %bh,%cl
   17f49:	ff                   	(bad)  
   17f4a:	ff 6f 00             	ljmp   *0x0(%rdi)
   17f4d:	00 00                	add    %al,(%rax)
   17f4f:	00 13                	add    %dl,(%rbx)
	...

Disassembly of section .got:

0000000000017fa8 <_GLOBAL_OFFSET_TABLE_>:
   17fa8:	68 7e 01 00 00       	push   $0x17e
	...
   17fc5:	00 00                	add    %al,(%rax)
   17fc7:	00 b3 24 01 00 00    	add    %dh,0x124(%rbx)
   17fcd:	00 00                	add    %al,(%rax)
   17fcf:	00 95 24 01 00 00    	add    %dl,0x124(%rbp)
   17fd5:	00 00                	add    %al,(%rax)
   17fd7:	00 00                	add    %al,(%rax)
   17fd9:	90                   	nop
   17fda:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .data:

0000000000018000 <password>:
   18000:	83 30 01             	xorl   $0x1,(%rax)
	...

0000000000018010 <extension_2op_table>:
   18010:	5a                   	pop    %rdx
   18011:	05 00 a9 08 00       	add    $0x8a900,%eax
   18016:	5a                   	pop    %rdx
   18017:	50                   	push   %rax
   18018:	96                   	xchg   %eax,%esi
   18019:	40 55                	rex push %rbp
   1801b:	00 00                	add    %al,(%rax)
   1801d:	00 00                	add    %al,(%rax)
	...

0000000000018020 <extended>:
   18020:	c1 d8 90             	rcr    $0x90,%eax
   18023:	90                   	nop
   18024:	80 80 80 80 80 80 80 	addb   $0x80,-0x7f7f7f80(%rax)
   1802b:	80 80 90 80 93 94 a4 	addb   $0xa4,-0x6b6c7f70(%rax)
   18032:	93                   	xchg   %eax,%ebx
   18033:	a3 94 94 93 a3 e8 82 	movabs %eax,0x645482e8a3939494
   1803a:	54 64 
   1803c:	82                   	(bad)  
   1803d:	82                   	(bad)  
   1803e:	82                   	(bad)  
   1803f:	82                   	(bad)  
   18040:	80 80 80 80 80 80 80 	addb   $0x80,-0x7f7f7f80(%rax)
   18047:	80 94 a4 93 a4 93 93 	adcb   $0x92,-0x6c6c5b6d(%rsp,%riz,4)
   1804e:	92 
   1804f:	92                   	xchg   %eax,%edx
   18050:	80 80 80 80 80 80 80 	addb   $0x80,-0x7f7f7f80(%rax)
   18057:	80 80 80 80 80 80 80 	addb   $0x80,-0x7f7f7f80(%rax)
   1805e:	80 80 92 92 92 92 92 	addb   $0x92,-0x6d6d6d6e(%rax)
   18065:	92                   	xchg   %eax,%edx
   18066:	92                   	xchg   %eax,%edx
   18067:	92                   	xchg   %eax,%edx
   18068:	92                   	xchg   %eax,%edx
   18069:	92                   	xchg   %eax,%edx
   1806a:	92                   	xchg   %eax,%edx
   1806b:	92                   	xchg   %eax,%edx
   1806c:	92                   	xchg   %eax,%edx
   1806d:	92                   	xchg   %eax,%edx
   1806e:	92                   	xchg   %eax,%edx
   1806f:	92                   	xchg   %eax,%edx
   18070:	80 94 94 94 94 94 94 	adcb   $0x94,-0x6b6b6b6c(%rsp,%rdx,4)
   18077:	94 
   18078:	94                   	xchg   %eax,%esp
   18079:	94                   	xchg   %eax,%esp
   1807a:	93                   	xchg   %eax,%ebx
   1807b:	94                   	xchg   %eax,%esp
   1807c:	94                   	xchg   %eax,%esp
   1807d:	94                   	xchg   %eax,%esp
   1807e:	94                   	xchg   %eax,%esp
   1807f:	94                   	xchg   %eax,%esp
   18080:	92                   	xchg   %eax,%edx
   18081:	92                   	xchg   %eax,%edx
   18082:	92                   	xchg   %eax,%edx
   18083:	93                   	xchg   %eax,%ebx
   18084:	93                   	xchg   %eax,%ebx
   18085:	93                   	xchg   %eax,%ebx
   18086:	93                   	xchg   %eax,%ebx
   18087:	93                   	xchg   %eax,%ebx
   18088:	93                   	xchg   %eax,%ebx
   18089:	93                   	xchg   %eax,%ebx
   1808a:	93                   	xchg   %eax,%ebx
   1808b:	93                   	xchg   %eax,%ebx
   1808c:	94                   	xchg   %eax,%esp
   1808d:	94                   	xchg   %eax,%esp
   1808e:	92                   	xchg   %eax,%edx
   1808f:	93                   	xchg   %eax,%ebx
   18090:	94                   	xchg   %eax,%esp
   18091:	80 80 80 93 93 93 80 	addb   $0x80,-0x6c6c6c80(%rax)
   18098:	80 80 40 80 94 94 42 	addb   $0x42,-0x6b6b7fc0(%rax)
   1809f:	a3 80 80 80 80 80 80 	movabs %eax,0x8080808080808080
   180a6:	80 80 
   180a8:	80 80 80 80 80 80 80 	addb   $0x80,-0x7f7f7f80(%rax)
   180af:	80 a0 a0 a0 a0 a0 a0 	andb   $0xa0,-0x5f5f5f60(%rax)
   180b6:	a0 a0 a0 a0 a0 a0 a0 	movabs 0xa0a0a0a0a0a0a0a0,%al
   180bd:	a0 a0 
   180bf:	a0 80 80 80 92 a2 a2 	movabs 0x8080a2a292808080,%al
   180c6:	80 80 
   180c8:	80 80 80 a2 a2 a2 e0 	addb   $0xe0,-0x5d5d5d80(%rax)
   180cf:	92                   	xchg   %eax,%edx
   180d0:	a0 a2 92 a2 92 92 90 	movabs 0x9291909292a292a2,%al
   180d7:	91 92 
   180d9:	80 ca a2             	or     $0xa2,%dl
   180dc:	92                   	xchg   %eax,%edx
   180dd:	92                   	xchg   %eax,%edx
   180de:	90                   	nop
   180df:	91                   	xchg   %eax,%ecx
   180e0:	a0 a2 94 a3 91 80 94 	movabs 0x80d3948091a394a2,%al
   180e7:	d3 80 
   180e9:	80 80 80 80 80 80 80 	addb   $0x80,-0x7f7f7f80(%rax)
   180f0:	94                   	xchg   %eax,%esp
   180f1:	93                   	xchg   %eax,%ebx
   180f2:	93                   	xchg   %eax,%ebx
   180f3:	93                   	xchg   %eax,%ebx
   180f4:	93                   	xchg   %eax,%ebx
   180f5:	93                   	xchg   %eax,%ebx
   180f6:	a3 80 93 93 93 93 93 	movabs %eax,0x9393939393939380
   180fd:	93 93 
   180ff:	93                   	xchg   %eax,%ebx
   18100:	93                   	xchg   %eax,%ebx
   18101:	93                   	xchg   %eax,%ebx
   18102:	93                   	xchg   %eax,%ebx
   18103:	93                   	xchg   %eax,%ebx
   18104:	93                   	xchg   %eax,%ebx
   18105:	93                   	xchg   %eax,%ebx
   18106:	94                   	xchg   %eax,%esp
   18107:	a3 93 93 93 93 93 93 	movabs %eax,0x9393939393939393
   1810e:	93 93 
   18110:	94                   	xchg   %eax,%esp
   18111:	93                   	xchg   %eax,%ebx
   18112:	93                   	xchg   %eax,%ebx
   18113:	93                   	xchg   %eax,%ebx
   18114:	93                   	xchg   %eax,%ebx
   18115:	93                   	xchg   %eax,%ebx
   18116:	93                   	xchg   %eax,%ebx
   18117:	80 93 93 93 93 93 93 	adcb   $0x93,-0x6c6c6c6d(%rbx)
   1811e:	93                   	xchg   %eax,%ebx
   1811f:	80       	sbbb   $0x90,-0x6f696b66(%rax)

0000000000018120 <standard>:
   18120:	98                   	cwtl   
   18121:	9a                   	(bad)  
   18122:	94                   	xchg   %eax,%esp
   18123:	96                   	xchg   %eax,%esi
   18124:	90                   	nop
   18125:	90                   	nop
   18126:	90                   	nop
   18127:	90                   	nop
   18128:	98                   	cwtl   
   18129:	9a                   	(bad)  
   1812a:	94                   	xchg   %eax,%esp
   1812b:	96                   	xchg   %eax,%esi
   1812c:	90                   	nop
   1812d:	90                   	nop
   1812e:	90                   	nop
   1812f:	80 98 9a 94 96 90 90 	sbbb   $0x90,-0x6f696b66(%rax)
   18136:	90                   	nop
   18137:	90                   	nop
   18138:	98                   	cwtl   
   18139:	9a                   	(bad)  
   1813a:	94                   	xchg   %eax,%esp
   1813b:	96                   	xchg   %eax,%esi
   1813c:	90                   	nop
   1813d:	90                   	nop
   1813e:	90                   	nop
   1813f:	90                   	nop
   18140:	98                   	cwtl   
   18141:	9a                   	(bad)  
   18142:	94                   	xchg   %eax,%esp
   18143:	96                   	xchg   %eax,%esi
   18144:	90                   	nop
   18145:	90                   	nop
   18146:	13 90 98 9a 94 96    	adc    -0x696b6568(%rax),%edx
   1814c:	90                   	nop
   1814d:	90                   	nop
   1814e:	10 90 98 9a 94 96    	adc    %dl,-0x696b6568(%rax)
   18154:	90                   	nop
   18155:	90                   	nop
   18156:	11 90 94 96 94 96    	adc    %edx,-0x696b696c(%rax)
   1815c:	90                   	nop
   1815d:	90                   	nop
   1815e:	12 90 40 40 40 40    	adc    0x40404040(%rax),%dl
   18164:	40                   	rex
   18165:	40                   	rex
   18166:	40                   	rex
   18167:	40                   	rex
   18168:	40                   	rex
   18169:	40                   	rex
   1816a:	40                   	rex
   1816b:	40                   	rex
   1816c:	40                   	rex
   1816d:	40                   	rex
   1816e:	40                   	rex
   1816f:	40 b0 b0             	rex mov $0xb0,%al
   18172:	b0 b0                	mov    $0xb0,%al
   18174:	b0 b0                	mov    $0xb0,%al
   18176:	b0 b0                	mov    $0xb0,%al
   18178:	90                   	nop
   18179:	90                   	nop
   1817a:	90                   	nop
   1817b:	90                   	nop
   1817c:	90                   	nop
   1817d:	90                   	nop
   1817e:	90                   	nop
   1817f:	90                   	nop
   18180:	b0 90                	mov    $0x90,%al
   18182:	90                   	nop
   18183:	95                   	xchg   %eax,%ebp
   18184:	14 15                	adc    $0x15,%al
   18186:	20 30                	and    %dh,(%rax)
   18188:	b0 96                	mov    $0x96,%al
   1818a:	b0 96                	mov    $0x96,%al
   1818c:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1818d:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1818e:	a0 a0 90 90 90 90 90 	movabs 0x90909090909090a0,%al
   18195:	90 90 
   18197:	90                   	nop
   18198:	90                   	nop
   18199:	90                   	nop
   1819a:	90                   	nop
   1819b:	90                   	nop
   1819c:	90                   	nop
   1819d:	90                   	nop
   1819e:	90                   	nop
   1819f:	90                   	nop
   181a0:	c4                   	(bad)  
   181a1:	c6 c4 c6             	mov    $0xc6,%ah
   181a4:	94                   	xchg   %eax,%esp
   181a5:	96                   	xchg   %eax,%esi
   181a6:	94                   	xchg   %eax,%esp
   181a7:	96                   	xchg   %eax,%esi
   181a8:	98                   	cwtl   
   181a9:	9a                   	(bad)  
   181aa:	94                   	xchg   %eax,%esp
   181ab:	96                   	xchg   %eax,%esi
   181ac:	99                   	cltd   
   181ad:	90                   	nop
   181ae:	95                   	xchg   %eax,%ebp
   181af:	9a                   	(bad)  
   181b0:	90                   	nop
   181b1:	90                   	nop
   181b2:	90                   	nop
   181b3:	90                   	nop
   181b4:	90                   	nop
   181b5:	90                   	nop
   181b6:	90                   	nop
   181b7:	90                   	nop
   181b8:	90                   	nop
   181b9:	90                   	nop
   181ba:	b0 90                	mov    $0x90,%al
   181bc:	b0 90                	mov    $0x90,%al
   181be:	90                   	nop
   181bf:	90                   	nop
   181c0:	90                   	nop
   181c1:	90                   	nop
   181c2:	90                   	nop
   181c3:	90                   	nop
   181c4:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   181c5:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   181c6:	a0 a0 90 90 a5 a5 a0 	movabs 0xa4a0a0a5a59090a0,%al
   181cd:	a0 a4 
   181cf:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
   181d0:	90                   	nop
   181d1:	90                   	nop
   181d2:	90                   	nop
   181d3:	90                   	nop
   181d4:	90                   	nop
   181d5:	90                   	nop
   181d6:	90                   	nop
   181d7:	90                   	nop
   181d8:	90                   	nop
   181d9:	90                   	nop
   181da:	90                   	nop
   181db:	90                   	nop
   181dc:	90                   	nop
   181dd:	90                   	nop
   181de:	90                   	nop
   181df:	90                   	nop
   181e0:	d8 da                	fcomp  %st(2)
   181e2:	90                   	nop
   181e3:	90                   	nop
   181e4:	90                   	nop
   181e5:	90                   	nop
   181e6:	f8                   	clc    
   181e7:	fa                   	cli    
   181e8:	90                   	nop
   181e9:	90                   	nop
   181ea:	90                   	nop
   181eb:	90                   	nop
   181ec:	90                   	nop
   181ed:	90                   	nop
   181ee:	90                   	nop
   181ef:	90                   	nop
   181f0:	d8 da                	fcomp  %st(2)
   181f2:	d8 da                	fcomp  %st(2)
   181f4:	90                   	nop
   181f5:	90                   	nop
   181f6:	90                   	nop
   181f7:	90                   	nop
   181f8:	90                   	nop
   181f9:	90                   	nop
   181fa:	90                   	nop
   181fb:	90                   	nop
   181fc:	90                   	nop
   181fd:	90                   	nop
   181fe:	90                   	nop
   181ff:	90                   	nop
   18200:	90                   	nop
   18201:	90                   	nop
   18202:	90                   	nop
   18203:	90                   	nop
   18204:	90                   	nop
   18205:	90                   	nop
   18206:	90                   	nop
   18207:	90                   	nop
   18208:	b0 90                	mov    $0x90,%al
   1820a:	90                   	nop
   1820b:	90                   	nop
   1820c:	90                   	nop
   1820d:	90                   	nop
   1820e:	90                   	nop
   1820f:	90                   	nop
   18210:	03 90 01 02 90 90    	add    -0x6f6ffdff(%rax),%edx
   18216:	e4 e6                	in     $0xe6,%al
   18218:	90                   	nop
   18219:	90                   	nop
   1821a:	90                   	nop
   1821b:	90                   	nop
   1821c:	90                   	nop
   1821d:	90                   	nop
   1821e:	f8                   	clc    
   1821f:	f6               	testb  $0x0,(%rcx)

0000000000018220 <_ZL16g_is_first_ecall>:
   18220:	01 00                	add    %eax,(%rax)
	...

0000000000018230 <sgx_trts_version>:
   18230:	53                   	push   %rbx
   18231:	47 58                	rex.RXB pop %r8
   18233:	5f                   	pop    %rdi
   18234:	54                   	push   %rsp
   18235:	52                   	push   %rdx
   18236:	54                   	push   %rsp
   18237:	53                   	push   %rbx
   18238:	5f                   	pop    %rdi
   18239:	56                   	push   %rsi
   1823a:	45 52                	rex.RB push %r10
   1823c:	53                   	push   %rbx
   1823d:	49                   	rex.WB
   1823e:	4f                   	rex.WRXB
   1823f:	4e 5f                	rex.WRX pop %rdi
   18241:	32 2e                	xor    (%rsi),%ch
   18243:	32 33                	xor    (%rbx),%dh
   18245:	2e 31 30             	cs xor %esi,(%rax)
   18248:	30 2e                	xor    %ch,(%rsi)
   1824a:	32 00                	xor    (%rax),%al
   1824c:	00 00                	add    %al,(%rax)
	...

0000000000018250 <__dso_handle>:
   18250:	50                   	push   %rax
   18251:	82                   	(bad)  
   18252:	01 00                	add    %eax,(%rax)
	...

0000000000019000 <aex_notify_c3_cache>:
	...

000000000001a000 <g_user_ema_root>:
   1a000:	20 a0 01 00 00 00    	and    %ah,0x1(%rax)
	...

000000000001a020 <user_ema_guard>:
	...
   1a058:	20 a0 01 00 00 00    	and    %ah,0x1(%rax)
   1a05e:	00 00                	add    %al,(%rax)
   1a060:	20 a0 01 00 00 00    	and    %ah,0x1(%rax)
	...

000000000001a068 <g_rts_ema_root>:
   1a068:	80 a0 01 00 00 00 00 	andb   $0x0,0x1(%rax)
	...

000000000001a080 <rts_ema_guard>:
	...
   1a0b8:	80 a0 01 00 00 00 00 	andb   $0x0,0x1(%rax)
   1a0bf:	00 80 a0 01 00 00    	add    %al,0x1a0(%rax)
   1a0c5:	00 00                	add    %al,(%rax)
	...

000000000001a0c8 <reserve_size_increment>:
   1a0c8:	00 00                	add    %al,(%rax)
   1a0ca:	01 00                	add    %eax,(%rax)
   1a0cc:	00 00                	add    %al,(%rax)
	...

000000000001a0d0 <size_mask>:
   1a0d0:	f8                   	clc    
   1a0d1:	ff                   	(bad)  
   1a0d2:	ff                   	(bad)  
   1a0d3:	ff                   	(bad)  
   1a0d4:	ff                   	(bad)  
   1a0d5:	ff                   	(bad)  
   1a0d6:	ff                   	(bad)  
   1a0d7:	ff                 	decl   (%rax)

000000000001a0d8 <header_size>:
   1a0d8:	08 00                	or     %al,(%rax)
   1a0da:	00 00                	add    %al,(%rax)
   1a0dc:	00 00                	add    %al,(%rax)
	...

000000000001a0e0 <sgx_tstdc_version>:
   1a0e0:	53                   	push   %rbx
   1a0e1:	47 58                	rex.RXB pop %r8
   1a0e3:	5f                   	pop    %rdi
   1a0e4:	54                   	push   %rsp
   1a0e5:	53                   	push   %rbx
   1a0e6:	54                   	push   %rsp
   1a0e7:	44                   	rex.R
   1a0e8:	43 5f                	rex.XB pop %r15
   1a0ea:	56                   	push   %rsi
   1a0eb:	45 52                	rex.RB push %r10
   1a0ed:	53                   	push   %rbx
   1a0ee:	49                   	rex.WB
   1a0ef:	4f                   	rex.WRXB
   1a0f0:	4e 5f                	rex.WRX pop %rdi
   1a0f2:	32 2e                	xor    (%rsi),%ch
   1a0f4:	32 33                	xor    (%rbx),%dh
   1a0f6:	2e 31 30             	cs xor %esi,(%rax)
   1a0f9:	30 2e                	xor    %ch,(%rsi)
   1a0fb:	32 00                	xor    (%rax),%al
   1a0fd:	00 00                	add    %al,(%rax)
	...

000000000001a100 <sgx_tcrypto_version>:
   1a100:	53                   	push   %rbx
   1a101:	47 58                	rex.RXB pop %r8
   1a103:	5f                   	pop    %rdi
   1a104:	54                   	push   %rsp
   1a105:	43 52                	rex.XB push %r10
   1a107:	59                   	pop    %rcx
   1a108:	50                   	push   %rax
   1a109:	54                   	push   %rsp
   1a10a:	4f 5f                	rex.WRXB pop %r15
   1a10c:	56                   	push   %rsi
   1a10d:	45 52                	rex.RB push %r10
   1a10f:	53                   	push   %rbx
   1a110:	49                   	rex.WB
   1a111:	4f                   	rex.WRXB
   1a112:	4e 5f                	rex.WRX pop %rdi
   1a114:	32 2e                	xor    (%rsi),%ch
   1a116:	32 33                	xor    (%rbx),%dh
   1a118:	2e 31 30             	cs xor %esi,(%rax)
   1a11b:	30 2e                	xor    %ch,(%rsi)
   1a11d:	32 00                	xor    (%rax),%al
	...

000000000001a120 <sgx_tservice_version>:
   1a120:	53                   	push   %rbx
   1a121:	47 58                	rex.RXB pop %r8
   1a123:	5f                   	pop    %rdi
   1a124:	54                   	push   %rsp
   1a125:	53                   	push   %rbx
   1a126:	45 52                	rex.RB push %r10
   1a128:	56                   	push   %rsi
   1a129:	49                   	rex.WB
   1a12a:	43                   	rex.XB
   1a12b:	45 5f                	rex.RB pop %r15
   1a12d:	56                   	push   %rsi
   1a12e:	45 52                	rex.RB push %r10
   1a130:	53                   	push   %rbx
   1a131:	49                   	rex.WB
   1a132:	4f                   	rex.WRXB
   1a133:	4e 5f                	rex.WRX pop %rdi
   1a135:	32 2e                	xor    (%rsi),%ch
   1a137:	32 33                	xor    (%rbx),%dh
   1a139:	2e 31 30             	cs xor %esi,(%rax)
   1a13c:	30 2e                	xor    %ch,(%rsi)
   1a13e:	32 00                	xor    (%rax),%al

Disassembly of section .nipd:

000000000001a140 <g_enclave_state>:
   1a140:	00 00                	add    %al,(%rax)
	...

000000000001a144 <g_xsave_enabled>:
   1a144:	00 00                	add    %al,(%rax)
	...

Disassembly of section .bss:

000000000001a160 <is_authenticated>:
   1a160:	00 00                	add    %al,(%rax)
	...

000000000001a164 <currentDeviceId>:
   1a164:	00 00                	add    %al,(%rax)
	...

000000000001a168 <g_uninit_flag>:
   1a168:	00 00                	add    %al,(%rax)
	...

000000000001a16c <_ZL10g_ife_lock>:
   1a16c:	00 00                	add    %al,(%rax)
	...

000000000001a170 <_ZL12g_tcs_cookie>:
	...

000000000001a178 <_ZL10g_tcs_node>:
	...

000000000001a180 <g_mm_pfhandler>:
	...

000000000001a188 <_ZL12g_veh_cookie>:
	...

000000000001a190 <_ZL14g_handler_lock>:
	...

000000000001a198 <_ZL12g_first_node>:
	...

000000000001a1a0 <g_exit_function_cookie>:
	...

000000000001a1a8 <g_exit_function_lock>:
	...

000000000001a1b0 <g_exit_function>:
	...

000000000001a1b8 <adding_reserve>:
	...

000000000001a1c0 <reserve_list>:
	...

000000000001a1c8 <large_block_list>:
	...

000000000001a1e0 <exact_block_list>:
	...

000000000001a9e0 <meta_used>:
	...

000000000001aa00 <meta_reserve>:
	...

000000000002aa00 <mm_user_end>:
	...

000000000002aa08 <mm_user_base>:
	...

000000000002aa10 <mm_lock>:
	...

000000000002aa18 <heap_used.0>:
	...

000000000002aa20 <g_peak_heap_used>:
	...

000000000002aa40 <_gm_>:
	...

000000000002ae00 <mparams>:
	...

000000000002ae30 <malloc_global_mutex>:
	...

000000000002ae38 <g_peak_rsrv_mem_committed>:
	...

000000000002ae40 <_ZZ15sgx_self_reportE11report_lock>:
	...

000000000002ae60 <_ZZ15sgx_self_reportE7_report>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <__ImageBase+0x78>
   a:	74 75                	je     81 <__ImageBase+0x81>
   c:	20 31                	and    %dh,(%rcx)
   e:	33 2e                	xor    (%rsi),%ebp
  10:	33 2e                	xor    (%rsi),%ebp
  12:	30 2d 36 75 62 75    	xor    %ch,0x75627536(%rip)        # 7562754e <_end+0x755fc53e>
  18:	6e                   	outsb  %ds:(%rsi),(%dx)
  19:	74 75                	je     90 <__ImageBase+0x90>
  1b:	32 7e 32             	xor    0x32(%rsi),%bh
  1e:	34 2e                	xor    $0x2e,%al
  20:	30 34 29             	xor    %dh,(%rcx,%rbp,1)
  23:	20 31                	and    %dh,(%rcx)
  25:	33 2e                	xor    (%rsi),%ebp
  27:	33 2e                	xor    (%rsi),%ebp
  29:	30 00                	xor    %al,(%rax)
  2b:	47                   	rex.RXB
  2c:	43                   	rex.XB
  2d:	43 3a 20             	rex.XB cmp (%r8),%spl
  30:	28 55 62             	sub    %dl,0x62(%rbp)
  33:	75 6e                	jne    a3 <__ImageBase+0xa3>
  35:	74 75                	je     ac <__ImageBase+0xac>
  37:	20 31                	and    %dh,(%rcx)
  39:	33 2e                	xor    (%rsi),%ebp
  3b:	32 2e                	xor    (%rsi),%ch
  3d:	30 2d 34 75 62 75    	xor    %ch,0x75627534(%rip)        # 75627577 <_end+0x755fc567>
  43:	6e                   	outsb  %ds:(%rsi),(%dx)
  44:	74 75                	je     bb <__ImageBase+0xbb>
  46:	33 29                	xor    (%rcx),%ebp
  48:	20 31                	and    %dh,(%rcx)
  4a:	33 2e                	xor    (%rsi),%ebp
  4c:	32 2e                	xor    (%rsi),%ch
  4e:	30 00                	xor    %al,(%rax)

Disassembly of section .note.sgxmeta:

0000000000000000 <.note.sgxmeta>:
       0:	0d 00 00 00 00       	or     $0x0,%eax
       5:	50                   	push   %rax
       6:	00 00                	add    %al,(%rax)
       8:	01 00                	add    %eax,(%rax)
       a:	00 00                	add    %al,(%rax)
       c:	73 67                	jae    75 <__ImageBase+0x75>
       e:	78 5f                	js     6f <__ImageBase+0x6f>
      10:	6d                   	insl   (%dx),%es:(%rdi)
      11:	65 74 61             	gs je  75 <__ImageBase+0x75>
      14:	64 61                	fs (bad) 
      16:	74 61                	je     79 <__ImageBase+0x79>
      18:	00 4c 0e 5d          	add    %cl,0x5d(%rsi,%rcx,1)
      1c:	63 94 02 a8 86 04 00 	movsxd 0x486a8(%rdx,%rax,1),%edx
      23:	00 00                	add    %al,(%rax)
      25:	01 00                	add    %eax,(%rax)
      27:	00 00                	add    %al,(%rax)
      29:	70 10                	jo     3b <__ImageBase+0x3b>
      2b:	00 00                	add    %al,(%rax)
      2d:	01 00                	add    %eax,(%rax)
      2f:	00 00                	add    %al,(%rax)
      31:	01 00                	add    %eax,(%rax)
      33:	00 00                	add    %al,(%rax)
      35:	80 0a 00             	orb    $0x0,(%rdx)
      38:	00 00                	add    %al,(%rax)
      3a:	00 00                	add    %al,(%rax)
      3c:	00 01                	add    %al,(%rcx)
      3e:	00 00                	add    %al,(%rax)
      40:	00 00                	add    %al,(%rax)
      42:	00 40 00             	add    %al,0x0(%rax)
      45:	00 00                	add    %al,(%rax)
      47:	00 00                	add    %al,(%rax)
      49:	04 00                	add    $0x0,%al
      4b:	00 00                	add    %al,(%rax)
      4d:	00 00                	add    %al,(%rax)
      4f:	00 00                	add    %al,(%rax)
      51:	e7 00                	out    %eax,$0x0
      53:	00 00                	add    %al,(%rax)
      55:	00 00                	add    %al,(%rax)
      57:	00 00                	add    %al,(%rax)
      59:	06                   	(bad)  
      5a:	00 00                	add    %al,(%rax)
      5c:	00 e1                	add    %ah,%cl
      5e:	00 00                	add    %al,(%rax)
      60:	00 00                	add    %al,(%rax)
      62:	00 01                	add    %al,(%rcx)
	...
      6c:	00 03                	add    %al,(%rbx)
      6e:	04 25                	add    $0x25,%al
      70:	20 01                	and    %al,(%rcx)
      72:	01 00                	add    %eax,(%rax)
      74:	00 60 00             	add    %ah,0x0(%rax)
      77:	00 00                	add    %al,(%rax)
      79:	60                   	(bad)  
      7a:	00 00                	add    %al,(%rax)
      7c:	00 01                	add    %al,(%rcx)
	...
      d6:	00 00                	add    %al,(%rax)
      d8:	00 0d 5b d0 bf de    	add    %cl,-0x21402fa5(%rip)        # ffffffffdebfd139 <_end+0xffffffffdebd2129>
      de:	b1 3e                	mov    $0x3e,%cl
      e0:	f1                   	icebp  
      e1:	59                   	pop    %rcx
      e2:	2e 09 75 a3          	cs or  %esi,-0x5d(%rbp)
      e6:	2e ec                	cs in  (%dx),%al
      e8:	5c                   	pop    %rsp
      e9:	3e ee                	ds out %al,(%dx)
      eb:	c6                   	(bad)  
      ec:	77 a8                	ja     96 <__ImageBase+0x96>
      ee:	df e3                	(bad)  
      f0:	bf d3 03 c3 81       	mov    $0x81c303d3,%edi
      f5:	90                   	nop
      f6:	6e                   	outsb  %ds:(%rsi),(%dx)
      f7:	c2 8e bd             	ret    $0xbd8e
      fa:	07                   	(bad)  
      fb:	29 46 ec             	sub    %eax,-0x14(%rsi)
      fe:	f2 c3                	bnd ret 
     100:	b6 0d                	mov    $0xd,%dh
     102:	9e                   	sahf   
     103:	dc 3a                	fdivrl (%rdx)
     105:	f2 07                	repnz (bad) 
     107:	b6 23                	mov    $0x23,%dh
     109:	22 78 46             	and    0x46(%rax),%bh
     10c:	72 25                	jb     133 <__ImageBase+0x133>
     10e:	48 3b ea             	cmp    %rdx,%rbp
     111:	1d f4 d6 f4 c1       	sbb    $0xc1f4d6f4,%eax
     116:	f4                   	hlt    
     117:	5c                   	pop    %rsp
     118:	b5 c7                	mov    $0xc7,%ch
     11a:	b4 56                	mov    $0x56,%ah
     11c:	e2 8b                	loop   a9 <__ImageBase+0xa9>
     11e:	3c b7                	cmp    $0xb7,%al
     120:	55                   	push   %rbp
     121:	5d                   	pop    %rbp
     122:	ae                   	scas   %es:(%rdi),%al
     123:	7f 6f                	jg     194 <__ImageBase+0x194>
     125:	b9 54 42 89 fb       	mov    $0xfb894254,%ecx
     12a:	ed                   	in     (%dx),%eax
     12b:	f7 e7                	mul    %edi
     12d:	ba e2 50 26 95       	mov    $0x952650e2,%edx
     132:	b6 88                	mov    $0x88,%dh
     134:	1e                   	(bad)  
     135:	7e f6                	jle    12d <__ImageBase+0x12d>
     137:	0a df                	or     %bh,%bl
     139:	5e                   	pop    %rsi
     13a:	8d                   	(bad)  
     13b:	f9                   	stc    
     13c:	f2 a4                	repnz movsb %ds:(%rsi),%es:(%rdi)
     13e:	e5 5a                	in     $0x5a,%eax
     140:	aa                   	stos   %al,%es:(%rdi)
     141:	82                   	(bad)  
     142:	8d 42 e0             	lea    -0x20(%rdx),%eax
     145:	e8 88 66 77 c0       	call   ffffffffc07767d2 <_end+0xffffffffc074b7c2>
     14a:	1a a7 8f 64 66 35    	sbb    0x3566648f(%rdi),%ah
     150:	e6 ee                	out    %al,$0xee
     152:	88 80 7c 2c 87 6a    	mov    %al,0x6a872c7c(%rax)
     158:	6c                   	insb   (%dx),%es:(%rdi)
     159:	37                   	(bad)  
     15a:	d5                   	(bad)  
     15b:	71 58                	jno    1b5 <__ImageBase+0x1b5>
     15d:	e1 e9                	loope  148 <__ImageBase+0x148>
     15f:	26 d8 39             	es fdivrs (%rcx)
     162:	2a 36                	sub    (%rsi),%dh
     164:	df 7a 25             	fistpll 0x25(%rdx)
     167:	38 6b 25             	cmp    %ch,0x25(%rbx)
     16a:	2e 76 4f             	jbe,pn 1bc <__ImageBase+0x1bc>
     16d:	53                   	push   %rbx
     16e:	35 0f 80 ab 5b       	xor    $0x5bab800f,%eax
     173:	dd 0f                	fisttpll (%rdi)
     175:	8a bc 43 91 bf 2a 27 	mov    0x272abf91(%rbx,%rax,2),%bh
     17c:	3c 19                	cmp    $0x19,%al
     17e:	dd 3e                	fnstsw (%rsi)
     180:	ad                   	lods   %ds:(%rsi),%eax
     181:	97                   	xchg   %eax,%edi
     182:	11 a2 0e b3 73 d9    	adc    %esp,-0x268c4cf2(%rdx)
     188:	75 b3                	jne    13d <__ImageBase+0x13d>
     18a:	42 63 ef             	rex.X movsxd %edi,%ebp
     18d:	21 89 45 24 c6 cc    	and    %ecx,-0x3339dbbb(%rcx)
     193:	cb                   	lret   
     194:	eb 30                	jmp    1c6 <__ImageBase+0x1c6>
     196:	dd 76 ae             	fnsave -0x52(%rsi)
     199:	f1                   	icebp  
     19a:	ee                   	out    %al,(%dx)
     19b:	34 25                	xor    $0x25,%al
     19d:	1b 00                	sbb    (%rax),%eax
     19f:	50                   	push   %rax
     1a0:	7d 49                	jge    1eb <__ImageBase+0x1eb>
     1a2:	77 a5                	ja     149 <__ImageBase+0x149>
     1a4:	24 90                	and    $0x90,%al
     1a6:	7b 92                	jnp    13a <__ImageBase+0x13a>
     1a8:	24 96                	and    $0x96,%al
     1aa:	1b e6                	sbb    %esi,%esp
     1ac:	98                   	cwtl   
     1ad:	d6                   	(bad)  
     1ae:	42                   	rex.X
     1af:	36 3c 44             	ss cmp $0x44,%al
     1b2:	0c 6f                	or     $0x6f,%al
     1b4:	01 63 06             	add    %esp,0x6(%rbx)
     1b7:	17                   	(bad)  
     1b8:	8d 42 ac             	lea    -0x54(%rdx),%eax
     1bb:	7b 8b                	jnp    148 <__ImageBase+0x148>
     1bd:	a9 6d eb 67 dc       	test   $0xdc67eb6d,%eax
     1c2:	e7 ee                	out    %eax,$0xee
     1c4:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
     1c5:	ea                   	(bad)  
     1c6:	7e 59                	jle    221 <__ImageBase+0x221>
     1c8:	5e                   	pop    %rsi
     1c9:	05 96 f8 3d 2b       	add    $0x2b3df896,%eax
     1ce:	88 6d ee             	mov    %ch,-0x12(%rbp)
     1d1:	cd b6                	int    $0xb6
     1d3:	8b c0                	mov    %eax,%eax
     1d5:	10 da                	adc    %bl,%dl
     1d7:	bf 59 bb a0 ed       	mov    $0xeda0bb59,%edi
     1dc:	87 d3                	xchg   %edx,%ebx
     1de:	48                   	rex.W
     1df:	43 f1                	rex.XB icebp 
     1e1:	69 32 c8 06 7c 5c    	imul   $0x5c7c06c8,(%rdx),%esi
     1e7:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
     1e8:	c5 1a a9             	(bad)
     1eb:	e9 e1 00 20 a9       	jmp    ffffffffa92002d1 <_end+0xffffffffa91d52c1>
     1f0:	8d                   	(bad)  
     1f1:	e1 42                	loope  235 <__ImageBase+0x235>
     1f3:	9d                   	popf   
     1f4:	2b 71 4a             	sub    0x4a(%rcx),%esi
     1f7:	ff cb                	dec    %ebx
     1f9:	b6 d2                	mov    $0xd2,%dh
     1fb:	ac                   	lods   %ds:(%rsi),%al
     1fc:	c5 95 69 dd          	vpunpckhwd %ymm5,%ymm13,%ymm3
     200:	fa                   	cli    
     201:	ff 81 f2 06 b8 41    	incl   0x41b806f2(%rcx)
     207:	08 66 18             	or     %ah,0x18(%rsi)
     20a:	a3 bd a5 69 74 74 d9 	movabs %eax,0x8051d9747469a5bd
     211:	51 80 
     213:	ea                   	(bad)  
     214:	ac                   	lods   %ds:(%rsi),%al
     215:	87 23                	xchg   %esp,(%rbx)
     217:	0c 35                	or     $0x35,%al
     219:	cf                   	iret   
     21a:	05 ea db b0 b7       	add    $0xb7b0dbea,%eax
     21f:	e6 f8                	out    %al,$0xf8
     221:	5c                   	pop    %rsp
     222:	b5 05                	mov    $0x5,%ch
     224:	ff                   	(bad)  
     225:	7b 39                	jnp    260 <__ImageBase+0x260>
     227:	54                   	push   %rsp
     228:	a2 c3 73 4b d4 e3 c7 	movabs %al,0x2a18c7e3d44b73c3
     22f:	18 2a 
     231:	bb f1 76 d9 1c       	mov    $0x1cd976f1,%ebx
     236:	8d 57 1b             	lea    0x1b(%rdi),%edx
     239:	a1 36 85 7a e6 8d 65 	movabs 0xf30b658de67a8536,%eax
     240:	0b f3 
     242:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
     243:	8c 5b 93             	mov    %ds,-0x6d(%rbx)
     246:	9f                   	lahf   
     247:	b7 78                	mov    $0x78,%bh
     249:	6d                   	insl   (%dx),%es:(%rdi)
     24a:	1d ba 6e d7 93       	sbb    $0x93d76eba,%eax
     24f:	17                   	(bad)  
     250:	9f                   	lahf   
     251:	99                   	cltd   
     252:	09 d2                	or     %edx,%edx
     254:	02 fb                	add    %bl,%bh
     256:	38 0b                	cmp    %cl,(%rbx)
     258:	98                   	cwtl   
     259:	03 00                	add    (%rax),%eax
     25b:	00 00                	add    %al,(%rax)
     25d:	14 70                	adc    $0x70,%al
     25f:	16                   	(bad)  
     260:	62                   	(bad)  
     261:	0d 9c a7 91 20       	or     $0x2091a79c,%eax
     266:	e8 c0 c7 68 34       	call   3468ca2b <_end+0x34661a1b>
     26b:	59                   	pop    %rcx
     26c:	78 13                	js     281 <__ImageBase+0x281>
     26e:	66 5a                	pop    %dx
     270:	f2 95                	repnz xchg %eax,%ebp
     272:	b8 a5 6a d5 7e       	mov    $0x7ed56aa5,%eax
     277:	5d                   	pop    %rbp
     278:	3c 0e                	cmp    $0xe,%al
     27a:	79 90                	jns    20c <__ImageBase+0x20c>
     27c:	3a fb                	cmp    %bl,%bh
     27e:	05 4c 36 0b 72       	add    $0x720b364c,%eax
     283:	c4                   	(bad)  
     284:	12 0e                	adc    (%rsi),%cl
     286:	84 2c 8c             	test   %ch,(%rsp,%rcx,4)
     289:	34 79                	xor    $0x79,%al
     28b:	13 3e                	adc    (%rsi),%edi
     28d:	14 bd                	adc    $0xbd,%al
     28f:	b5 d0                	mov    $0xd0,%ch
     291:	d3 0a                	rorl   %cl,(%rdx)
     293:	d8 5c b5 7f          	fcomps 0x7f(%rbp,%rsi,4)
     297:	61                   	(bad)  
     298:	32 61 3c             	xor    0x3c(%rcx),%ah
     29b:	81 d1 c2 0e fa c9    	adc    $0xc9fa0ec2,%ecx
     2a1:	39 a3 29 0c c9 4b    	cmp    %esp,0x4bc90c29(%rbx)
     2a7:	21 c3                	and    %eax,%ebx
     2a9:	31 4b 83             	xor    %ecx,-0x7d(%rbx)
     2ac:	18 75 da             	sbb    %dh,-0x26(%rbp)
     2af:	e0 55                	loopne 306 <__ImageBase+0x306>
     2b1:	ef                   	out    %eax,(%dx)
     2b2:	fc                   	cld    
     2b3:	da 3f                	fidivrl (%rdi)
     2b5:	24 58                	and    $0x58,%al
     2b7:	ae                   	scas   %es:(%rdi),%al
     2b8:	05 3a 03 ad ea       	add    $0xeaad033a,%eax
     2bd:	45 f7 58 ef          	rex.RB negl -0x11(%r8)
     2c1:	23 4a d6             	and    -0x2a(%rdx),%ecx
     2c4:	8c a3 bf 81 4b ac    	mov    %fs,-0x53b47e41(%rbx)
     2ca:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
     2cb:	04 17                	add    $0x17,%al
     2cd:	43 21 3a             	rex.XB and %edi,(%r10)
     2d0:	66 5c                	pop    %sp
     2d2:	0d 0d ed 1c 4c       	or     $0x4c1ced0d,%eax
     2d7:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
     2d8:	d1 cc                	ror    %esp
     2da:	2a aa d7 b9 5a 37    	sub    0x375ab9d7(%rdx),%ch
     2e0:	7c 56                	jl     338 <__ImageBase+0x338>
     2e2:	47 55                	rex.RXB push %r13
     2e4:	65 92                	gs xchg %eax,%edx
     2e6:	d2 65 79             	shlb   %cl,0x79(%rbp)
     2e9:	ed                   	in     (%dx),%eax
     2ea:	6b 6b ea f1          	imul   $0xfffffff1,-0x16(%rbx),%ebp
     2ee:	b9 7c ee be 24       	mov    $0x24beee7c,%ecx
     2f3:	08 26                	or     %ah,(%rsi)
     2f5:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
     2f6:	91                   	xchg   %eax,%ecx
     2f7:	c1 a9 24 0e 08 9d 78 	shrl   $0x78,-0x62f7f1dc(%rcx)
     2fe:	91                   	xchg   %eax,%ecx
     2ff:	16                   	(bad)  
     300:	be 4d ac e6 e6       	mov    $0xe6e6ac4d,%esi
     305:	ad                   	lods   %ds:(%rsi),%eax
     306:	43 2b 9c 2a 4e 45 03 	sub    0x3e03454e(%r10,%r13,1),%ebx
     30d:	3e 
     30e:	6b 33 c7             	imul   $0xffffffc7,(%rbx),%esi
     311:	93                   	xchg   %eax,%ebx
     312:	1b 8a b6 cb cd ca    	sbb    -0x3532344a(%rdx),%ecx
     318:	e2 fa                	loop   314 <__ImageBase+0x314>
     31a:	35 13 c6 8a bc       	xor    $0xbc8ac613,%eax
     31f:	7e c6                	jle    2e7 <__ImageBase+0x2e7>
     321:	83 74 89 92 52       	xorl   $0x52,-0x6e(%rcx,%rcx,4)
     326:	3c 0b                	cmp    $0xb,%al
     328:	05 c7 1b e6 b5       	add    $0xb5e61bc7,%eax
     32d:	63 83 d1 af f5 ba    	movsxd -0x450a502f(%rbx),%eax
     333:	91                   	xchg   %eax,%ecx
     334:	85 5c 5b 23          	test   %ebx,0x23(%rbx,%rbx,2)
     338:	89 b6 7e 14 ac ce    	mov    %esi,-0x3153eb82(%rsi)
     33e:	88 e5                	mov    %ah,%ch
     340:	a2 2f bc f6 fe 46 64 	movabs %al,0x47a06446fef6bc2f
     347:	a0 47 
     349:	6c                   	insb   (%dx),%es:(%rdi)
     34a:	43                   	rex.XB
     34b:	66 7d 1d             	data16 jge 36b <__ImageBase+0x36b>
     34e:	3b 4b 2a             	cmp    0x2a(%rbx),%ecx
     351:	98                   	cwtl   
     352:	bc f0 88 19 e5       	mov    $0xe51988f0,%esp
     357:	8d 1d d3 18 4e 20    	lea    0x204e18d3(%rip),%ebx        # 204e1c30 <_end+0x204b6c20>
     35d:	c4                   	(bad)  
     35e:	b6 56                	mov    $0x56,%dh
     360:	83 6f 26 be          	subl   $0xffffffbe,0x26(%rdi)
     364:	b8 83 b2 ce e1       	mov    $0xe1ceb283,%eax
     369:	cc                   	int3   
     36a:	7c bb                	jl     327 <__ImageBase+0x327>
     36c:	78 ab                	js     319 <__ImageBase+0x319>
     36e:	e7 7b                	out    %eax,$0x7b
     370:	b5 47                	mov    $0x47,%ch
     372:	00 ed                	add    %ch,%ch
     374:	0c 14                	or     $0x14,%al
     376:	66 50                	push   %ax
     378:	67 d7                	xlat   %ds:(%ebx)
     37a:	97                   	xchg   %eax,%edi
     37b:	d4                   	(bad)  
     37c:	68 8c 71 f5 02       	push   $0x2f5718c
     381:	c9                   	leave  
     382:	7b 2b                	jnp    3af <__ImageBase+0x3af>
     384:	12 3b                	adc    (%rbx),%bh
     386:	9b                   	fwait
     387:	ad                   	lods   %ds:(%rsi),%eax
     388:	c5 be c9             	(bad)
     38b:	02 94 d7 0d 7f 56 e1 	add    -0x1ea980f3(%rdi,%rdx,8),%dl
     392:	46 7d 34             	rex.RX jge 3c9 <__ImageBase+0x3c9>
     395:	cb                   	lret   
     396:	0a 5e 8f             	or     -0x71(%rsi),%bl
     399:	7e fa                	jle    395 <__ImageBase+0x395>
     39b:	ea                   	(bad)  
     39c:	75 c2                	jne    360 <__ImageBase+0x360>
     39e:	fc                   	cld    
     39f:	79 2b                	jns    3cc <__ImageBase+0x3cc>
     3a1:	fd                   	std    
     3a2:	40                   	rex
     3a3:	4a b5 db             	rex.WX mov $0xdb,%bpl
     3a6:	f2 3b dd             	repnz cmp %ebp,%ebx
     3a9:	af                   	scas   %es:(%rdi),%eax
     3aa:	1b 67 59             	sbb    0x59(%rdi),%esp
     3ad:	f4                   	hlt    
     3ae:	6e                   	outsb  %ds:(%rsi),(%dx)
     3af:	1e                   	(bad)  
     3b0:	77 57                	ja     409 <__ImageBase+0x409>
     3b2:	c5 b1 2e             	(bad)
     3b5:	91                   	xchg   %eax,%ecx
     3b6:	ee                   	out    %al,(%dx)
     3b7:	94                   	xchg   %eax,%esp
     3b8:	9d                   	popf   
     3b9:	08 8b c2 e0 84 8c    	or     %cl,-0x737b1f3e(%rbx)
     3bf:	aa                   	stos   %al,%es:(%rdi)
     3c0:	4a c7                	rex.WX (bad) 
     3c2:	73 b7                	jae    37b <__ImageBase+0x37b>
     3c4:	ba 0e 99 c1 00       	mov    $0xc1990e,%edx
     3c9:	ba 19 9a a1 41       	mov    $0x41a19a19,%edx
     3ce:	48 e8 46 c0 5f 79    	rex.W call 795fc41a <_end+0x795d140a>
     3d4:	53                   	push   %rbx
     3d5:	b1 6f                	mov    $0x6f,%cl
     3d7:	b5 75                	mov    $0x75,%ch
     3d9:	0c 0f                	or     $0xf,%al
     3db:	6f                   	outsl  %ds:(%rsi),(%dx)
     3dc:	15 00 00 00 00       	adc    $0x0,%eax
     3e1:	ff                   	(bad)  
     3e2:	ff                   	(bad)  
     3e3:	ff                   	(bad)  
     3e4:	ff 00                	incl   (%rax)
	...
     3f6:	00 00                	add    %al,(%rax)
     3f8:	00 04 00             	add    %al,(%rax,%rax,1)
     3fb:	00 00                	add    %al,(%rax)
     3fd:	00 00                	add    %al,(%rax)
     3ff:	00 00                	add    %al,(%rax)
     401:	03 00                	add    (%rax),%eax
     403:	00 00                	add    %al,(%rax)
     405:	00 00                	add    %al,(%rax)
     407:	00 00                	add    %al,(%rax)
     409:	fd                   	std    
     40a:	ff                   	(bad)  
     40b:	ff                   	(bad)  
     40c:	ff                   	(bad)  
     40d:	ff                   	(bad)  
     40e:	ff 00                	incl   (%rax)
     410:	ff 1b                	lcall  *(%rbx)
     412:	ff                   	(bad)  
     413:	ff                   	(bad)  
     414:	ff                   	(bad)  
     415:	ff                   	(bad)  
     416:	ff                   	(bad)  
     417:	ff                   	(bad)  
     418:	ff b3 7a 8c 45 4b    	push   0x4b458c7a(%rbx)
     41e:	a9 4a 79 83 d0       	test   $0xd083794a,%eax
     423:	86 cf                	xchg   %cl,%bh
     425:	1c 8e                	sbb    $0x8e,%al
     427:	ad                   	lods   %ds:(%rsi),%eax
     428:	69 c7 b1 3d ae 72    	imul   $0x72ae3db1,%edi,%eax
     42e:	e4 7c                	in     $0x7c,%al
     430:	3a bd ff 0a fd 5a    	cmp    0x5afd0aff(%rbp),%bh
     436:	5e                   	pop    %rsi
     437:	97                   	xchg   %eax,%edi
     438:	af                   	scas   %es:(%rdi),%eax
	...
     469:	1e                   	(bad)  
     46a:	47 87 b3 ac bc d5 ad 	rex.RXB xchg %r14d,-0x522a4354(%r11)
     471:	b4 ed                	mov    $0xed,%ah
     473:	d9 6f dd             	fldcw  -0x23(%rdi)
     476:	f2 0c 76             	repnz or $0x76,%al
     479:	35 b3 c4 45 99       	xor    $0x9945c4b3,%eax
     47e:	40 0c 40             	rex or $0x40,%al
     481:	83 7e d4 71          	cmpl   $0x71,-0x2c(%rsi)
     485:	ff 89 11 04 bc 45    	decl   0x45bc0411(%rcx)
     48b:	33 f8                	xor    %eax,%edi
     48d:	7f f4                	jg     483 <__ImageBase+0x483>
     48f:	5d                   	pop    %rbp
     490:	f6 81 a2 44 67 e0 b1 	testb  $0xb1,-0x1f98bb5e(%rcx)
     497:	31 0c f8             	xor    %ecx,(%rax,%rdi,8)
     49a:	2c 37                	sub    $0x37,%al
     49c:	0b e7                	or     %edi,%esp
     49e:	94                   	xchg   %eax,%esp
     49f:	e1 ae                	loope  44f <__ImageBase+0x44f>
     4a1:	62                   	(bad)  
     4a2:	17                   	(bad)  
     4a3:	82                   	(bad)  
     4a4:	ba 3e 40 9b 66       	mov    $0x669b403e,%edx
     4a9:	f6 63 f9             	mulb   -0x7(%rbx)
     4ac:	c6                   	(bad)  
     4ad:	f6 c1 6c             	test   $0x6c,%cl
     4b0:	84 bd 59 08 93 9c    	test   %bh,-0x636cf7a7(%rbp)
     4b6:	ea                   	(bad)  
     4b7:	2d 8a c9 00 7e       	sub    $0x7e00c98a,%eax
     4bc:	22 12                	and    (%rdx),%dl
     4be:	57                   	push   %rdi
     4bf:	fb                   	sti    
     4c0:	5d                   	pop    %rbp
     4c1:	6e                   	outsb  %ds:(%rsi),(%dx)
     4c2:	49 c9                	rex.WB leave 
     4c4:	7e 2b                	jle    4f1 <__ImageBase+0x4f1>
     4c6:	bc 3c 36 4f 40       	mov    $0x404f363c,%esp
     4cb:	2c e7                	sub    $0xe7,%al
     4cd:	c1 a2 dc f3 bf 27 fa 	shll   $0xfa,0x27bff3dc(%rdx)
     4d4:	cc                   	int3   
     4d5:	b4 ba                	mov    $0xba,%ah
     4d7:	d5                   	(bad)  
     4d8:	0b 5e 2b             	or     0x2b(%rsi),%ebx
     4db:	c0 61 f7 21          	shlb   $0x21,-0x9(%rcx)
     4df:	8e 77 15             	mov    0x15(%rdi),%?
     4e2:	6c                   	insb   (%dx),%es:(%rdi)
     4e3:	26 69 3d ba 00 15 81 	es imul $0x49fbc79,-0x7eeaff46(%rip),%edi        # ffffffff811505a8 <_end+0xffffffff81125598>
     4ea:	79 bc 9f 04 
     4ee:	94                   	xchg   %eax,%esp
     4ef:	45 2b fb             	sub    %r11d,%r15d
     4f2:	ec                   	in     (%dx),%al
     4f3:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
     4f4:	f7 93 61 c2 ac a1    	notl   -0x5e533d9f(%rbx)
     4fa:	fb                   	sti    
     4fb:	e3 1b                	jrcxz  518 <__ImageBase+0x518>
     4fd:	b4 7a                	mov    $0x7a,%ah
     4ff:	54                   	push   %rsp
     500:	d8 69 b1             	fsubrs -0x4f(%rcx)
     503:	91                   	xchg   %eax,%ecx
     504:	31 a1 72 bd 26 f2    	xor    %esp,-0xdd9428e(%rcx)
     50a:	58                   	pop    %rax
     50b:	2b 5a b2             	sub    -0x4e(%rdx),%ebx
     50e:	32 df                	xor    %bh,%bl
     510:	c9                   	leave  
     511:	5f                   	pop    %rdi
     512:	df 30                	fbstp  (%rax)
     514:	26 0b 92 8f 68 4f e2 	es or  -0x1db09771(%rdx),%edx
     51b:	c3                   	ret    
     51c:	bb 2b 68 38 af       	mov    $0xaf38682b,%ebx
     521:	5f                   	pop    %rdi
     522:	db 9f e7 25 d4 cc    	fistpl -0x332bda19(%rdi)
     528:	eb 06                	jmp    530 <__ImageBase+0x530>
     52a:	f5                   	cmc    
     52b:	37                   	(bad)  
     52c:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
     52d:	e3 a2                	jrcxz  4d1 <__ImageBase+0x4d1>
     52f:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
     530:	5e                   	pop    %rsi
     531:	42 3f                	rex.X (bad) 
     533:	ff 45 c8             	incl   -0x38(%rbp)
     536:	30 1c e3             	xor    %bl,(%rbx,%riz,8)
     539:	57                   	push   %rdi
     53a:	34 b8                	xor    $0xb8,%al
     53c:	36 de 16             	ss ficoms (%rsi)
     53f:	f5                   	cmc    
     540:	f8                   	clc    
     541:	8b 68 2c             	mov    0x2c(%rax),%ebp
     544:	55                   	push   %rbp
     545:	d2 15 6d d6 ae ad    	rclb   %cl,-0x52512993(%rip)        # ffffffffadaedbb8 <_end+0xffffffffadac2ba8>
     54b:	a8 c8                	test   $0xc8,%al
     54d:	6a 9e                	push   $0xffffffffffffff9e
     54f:	e8 9f 07 a8 68       	call   68a80cf3 <_end+0x68a55ce3>
     554:	c8 bc eb 35          	enter  $0xebbc,$0x35
     558:	9e                   	sahf   
     559:	e9 22 69 e7 52       	jmp    52e76e80 <_end+0x52e4be70>
     55e:	ad                   	lods   %ds:(%rsi),%eax
     55f:	d7                   	xlat   %ds:(%rbx)
     560:	6a 1f                	push   $0x1f
     562:	be af d9 95 87       	mov    $0x8795d9af,%esi
     567:	c6                   	(bad)  
     568:	4d 6c                	rex.WRB insb (%dx),%es:(%rdi)
     56a:	32 02                	xor    (%rdx),%al
     56c:	d5                   	(bad)  
     56d:	51                   	push   %rcx
     56e:	63 4a b8             	movsxd -0x48(%rdx),%ecx
     571:	fb                   	sti    
     572:	10 96 4c 5d ba cd    	adc    %dl,-0x3245a2b4(%rsi)
     578:	5d                   	pop    %rbp
     579:	57                   	push   %rdi
     57a:	33 9a 7b 4f f5 e2    	xor    -0x1d0ab085(%rdx),%ebx
     580:	52                   	push   %rdx
     581:	20 a2 20 00 5b a2    	and    %ah,-0x5da4ffe0(%rdx)
     587:	81 46 7c 99 69 41 d2 	addl   $0xd2416999,0x7c(%rsi)
     58e:	b0 44                	mov    $0x44,%al
     590:	4a 0d c0 d7 5f 1f    	rex.WX or $0x1f5fd7c0,%rax
     596:	e3 8f                	jrcxz  527 <__ImageBase+0x527>
     598:	46 30 7d d6          	rex.RX xor %r15b,-0x2a(%rbp)
     59c:	fc                   	cld    
     59d:	cb                   	lret   
     59e:	88 6d 52             	mov    %ch,0x52(%rbp)
     5a1:	97                   	xchg   %eax,%edi
     5a2:	bb 7d 9a d4 67       	mov    $0x67d49a7d,%ebx
     5a7:	3a 56 07             	cmp    0x7(%rsi),%dl
     5aa:	c1 0b 21             	rorl   $0x21,(%rbx)
     5ad:	e1 d7                	loope  586 <__ImageBase+0x586>
     5af:	3d 5f 31 f0 02       	cmp    $0x2f0315f,%eax
     5b4:	a0 b6 69 5c 72 91 8d 	movabs 0x530f8d91725c69b6,%al
     5bb:	0f 53 
     5bd:	62                   	(bad)  
     5be:	4a 61                	rex.WX (bad) 
     5c0:	ff e2                	jmp    *%rdx
     5c2:	d9 2b                	fldcw  (%rbx)
     5c4:	9d                   	popf   
     5c5:	f9                   	stc    
     5c6:	f1                   	icebp  
     5c7:	39 95 d7 32 27 c1    	cmp    %edx,-0x3ed8cd29(%rbp)
     5cd:	96                   	xchg   %eax,%esi
     5ce:	45 fc                	rex.RB cld 
     5d0:	7f 84                	jg     556 <__ImageBase+0x556>
     5d2:	ba 39 40 fd dd       	mov    $0xddfd4039,%edx
     5d7:	65 c3                	gs ret 
     5d9:	a9 95 e9 05 bc       	test   $0xbc05e995,%eax
     5de:	98                   	cwtl   
     5df:	2d 6a 51 ee b7       	sub    $0xb7ee516a,%eax
     5e4:	04 9d                	add    $0x9d,%al
     5e6:	84 05 03 7e 69 19    	test   %al,0x19697e03(%rip)        # 196983ef <_end+0x1966d3df>
     5ec:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
     5ed:	8b 6a d4             	mov    -0x2c(%rdx),%ebp
     5f0:	34 80                	xor    $0x80,%al
     5f2:	41 6d                	rex.B insl (%dx),%es:(%rdi)
     5f4:	2e 9d                	cs popf 
     5f6:	15 9c ce ea ea       	adc    $0xeaeace9c,%eax
     5fb:	1d 71 ca 8a 84       	sbb    $0x848aca71,%eax
     600:	64 e6 20             	fs out %al,$0x20
     603:	d3 bc 66 de a4 08 69 	sarl   %cl,0x6908a4de(%rsi,%riz,2)
     60a:	cd 88                	int    $0x88
     60c:	65 87 ee             	gs xchg %ebp,%esi
     60f:	6b ec 96             	imul   $0xffffff96,%esp,%ebp
     612:	c9                   	leave  
     613:	cb                   	lret   
     614:	08 44 3d ba          	or     %al,-0x46(%rbp,%rdi,1)
     618:	27                   	(bad)  
     619:	2b 14 14             	sub    (%rsp,%rdx,1),%edx
     61c:	79 c1                	jns    5df <__ImageBase+0x5df>
     61e:	d1 f7                	shl    %edi
     620:	b1 ac                	mov    $0xac,%cl
     622:	77 55                	ja     679 <__ImageBase+0x679>
     624:	6b fe ce             	imul   $0xffffffce,%esi,%edi
     627:	42 3f                	rex.X (bad) 
     629:	b4 dc                	mov    $0xdc,%ah
     62b:	8d 88 c5 d8 c8 eb    	lea    -0x1437273b(%rax),%ecx
     631:	64 98                	fs cwtl 
     633:	ba ea 51 e0 4d       	mov    $0x4de051ea,%edx
     638:	df 7c 49 17          	fistpll 0x17(%rcx,%rcx,2)
     63c:	78 7a                	js     6b8 <__ImageBase+0x6b8>
     63e:	90                   	nop
     63f:	a8 e9                	test   $0xe9,%al
     641:	d8 9c 8f 63 95 0c b1 	fcomps -0x4ef36a9d(%rdi,%rcx,4)
     648:	de 5c aa 3b          	ficomps 0x3b(%rdx,%rbp,4)
     64c:	63 0b                	movsxd (%rbx),%ecx
     64e:	a8 b9                	test   $0xb9,%al
     650:	6b f9 98             	imul   $0xffffff98,%ecx,%edi
     653:	62                   	(bad)  
     654:	4e 30 44 86 68       	rex.WRX xor %r8b,0x68(%rsi,%r8,4)
     659:	e9 6b 2e 4a d7       	jmp    ffffffffd74a34c9 <_end+0xffffffffd74784b9>
     65e:	bb b0 60 3c aa       	mov    $0xaa3c60b0,%ebx
     663:	55                   	push   %rbp
     664:	72 f3                	jb     659 <__ImageBase+0x659>
     666:	85 fc                	test   %edi,%esp
     668:	a9 6c e8 4e 7c       	test   $0x7c4ee86c,%eax
     66d:	76 ce                	jbe    63d <__ImageBase+0x63d>
     66f:	83 d6 05             	adc    $0x5,%esi
     672:	8e f9                	mov    %ecx,%?
     674:	4c 0b ef             	or     %rdi,%r13
     677:	d6                   	(bad)  
     678:	fb                   	sti    
     679:	55                   	push   %rbp
     67a:	81 e6 6c 29 31 e8    	and    $0xe831296c,%esi
     680:	f3 58                	repz pop %rax
     682:	73 a6                	jae    62a <__ImageBase+0x62a>
     684:	e9 01 1a c6 52       	jmp    52c6208a <_end+0x52c3707a>
     689:	4d d5                	rex.WRB (bad) 
     68b:	29 63 dc             	sub    %esp,-0x24(%rbx)
     68e:	38 ef                	cmp    %ch,%bh
     690:	67 95                	addr32 xchg %eax,%ebp
     692:	5a                   	pop    %rdx
     693:	ff                   	(bad)  
     694:	fc                   	cld    
     695:	d5                   	(bad)  
     696:	33 de                	xor    %esi,%ebx
     698:	c9                   	leave  
     699:	d5                   	(bad)  
     69a:	de db                	(bad)  
     69c:	9c                   	pushf  
     69d:	4e b9 64 85 99 ff 9a 	rex.WRX movabs $0xbcddd19aff998564,%rcx
     6a4:	d1 dd bc 
     6a7:	df cc                	(bad)  
     6a9:	09 d4                	or     %edx,%esp
     6ab:	6c                   	insb   (%dx),%es:(%rdi)
     6ac:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
     6ad:	8e 0d 46 f9 81 32    	mov    0x3281f946(%rip),%cs        # 3281fff9 <_end+0x327f4fe9>
     6b3:	46 fb                	rex.RX sti 
     6b5:	84 c4                	test   %al,%ah
     6b7:	e6 0d                	out    %al,$0xd
     6b9:	2e 32 55 e8          	cs xor -0x18(%rbp),%dl
     6bd:	fe                   	(bad)  
     6be:	90                   	nop
     6bf:	1f                   	(bad)  
     6c0:	73 bd                	jae    67f <__ImageBase+0x67f>
     6c2:	9f                   	lahf   
     6c3:	0e                   	(bad)  
     6c4:	ce                   	(bad)  
     6c5:	19 46 aa             	sbb    %eax,-0x56(%rsi)
     6c8:	78 24                	js     6ee <__ImageBase+0x6ee>
     6ca:	92                   	xchg   %eax,%edx
     6cb:	eb 83                	jmp    650 <__ImageBase+0x650>
     6cd:	bd c4 bd 79 ae       	mov    $0xae79bdc4,%ebp
     6d2:	4e 06                	rex.WRX (bad) 
     6d4:	5f                   	pop    %rdi
     6d5:	a0 ce 5f 5a b6 f6 f8 	movabs 0x4b9df8f6b65a5fce,%al
     6dc:	9d 4b 
     6de:	75 47                	jne    727 <__ImageBase+0x727>
     6e0:	83 d5 36             	adc    $0x36,%ebp
     6e3:	e1 76                	loope  75b <__ImageBase+0x75b>
     6e5:	77 3c                	ja     723 <__ImageBase+0x723>
     6e7:	4e 8a 1c e6          	rex.WRX mov (%rsi,%r12,8),%r11b
     6eb:	5e                   	pop    %rsi
     6ec:	64 63 81 05 f1 b4 46 	movsxd %fs:0x46b4f105(%rcx),%eax
     6f3:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
     6f4:	59                   	pop    %rcx
     6f5:	ef                   	out    %eax,(%dx)
     6f6:	6c                   	insb   (%dx),%es:(%rdi)
     6f7:	cd 2e                	int    $0x2e
     6f9:	da 77 9d             	fidivl -0x63(%rdi)
     6fc:	1a 3c ab             	sbb    (%rbx,%rbp,4),%bh
     6ff:	28 f4                	sub    %dh,%ah
     701:	87 79 90             	xchg   %edi,-0x70(%rcx)
     704:	a8 d7                	test   $0xd7,%al
     706:	51                   	push   %rcx
     707:	93                   	xchg   %eax,%ebx
     708:	79 3c                	jns    746 <__ImageBase+0x746>
     70a:	d5                   	(bad)  
     70b:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
     70c:	6c                   	insb   (%dx),%es:(%rdi)
     70d:	b8 7e 49 b0 4d       	mov    $0x4db0497e,%eax
     712:	57                   	push   %rdi
     713:	e8 0e 54 59 0d       	call   d595b26 <_end+0xd56ab16>
     718:	75 c8                	jne    6e2 <__ImageBase+0x6e2>
     71a:	d0 08                	rorb   (%rax)
     71c:	7e 85                	jle    6a3 <__ImageBase+0x6a3>
     71e:	53                   	push   %rbx
     71f:	32 3e                	xor    (%rsi),%bh
     721:	7b 11                	jnp    734 <__ImageBase+0x734>
     723:	46 58                	rex.RX pop %rax
     725:	85 2f                	test   %ebp,(%rdi)
     727:	83 cd 89             	or     $0xffffff89,%ebp
     72a:	6b 08 2f             	imul   $0x2f,(%rax),%ecx
     72d:	2d 17 85 b6 e6       	sub    $0xe6b68517,%eax
     732:	09 56 a6             	or     %edx,-0x5a(%rsi)
     735:	a8 2a                	test   $0x2a,%al
     737:	5d                   	pop    %rbp
     738:	79 42                	jns    77c <__ImageBase+0x77c>
     73a:	bc 8c 95 6a 22       	mov    $0x226a958c,%esp
     73f:	02 7b 2a             	add    0x2a(%rbx),%bh
     742:	42 0f 7e 1d 7b a3 bc 	rex.X movd %mm3,-0x70435c85(%rip)        # ffffffff8fbcaac5 <_end+0xffffffff8fb9fab5>
     749:	8f 
     74a:	5b                   	pop    %rbx
     74b:	b8 5b 9e 97 7f       	mov    $0x7f979e5b,%eax
     750:	da 90 24 30 e2 ab    	ficoml -0x541dcfdc(%rax)
     756:	5d                   	pop    %rbp
     757:	fd                   	std    
     758:	62                   	(bad)  
     759:	4b ac                	rex.WXB lods %ds:(%rsi),%al
     75b:	a3 68 2f 3c b3 35 31 	movabs %eax,0x75073135b33c2f68
     762:	07 75 
     764:	b2 07                	mov    $0x7,%dl
     766:	19 fb                	sbb    %edi,%ebx
     768:	0c 90                	or     $0x90,%al
     76a:	0e                   	(bad)  
     76b:	00 00                	add    %al,(%rax)
     76d:	80 00 00             	addb   $0x0,(%rax)
     770:	00 10                	add    %dl,(%rax)
     772:	0f 00 00             	sldt   (%rax)
     775:	60                   	(bad)  
     776:	01 00                	add    %eax,(%rax)
	...
     788:	00 00                	add    %al,(%rax)
     78a:	10 00                	adc    %al,(%rax)
	...
     794:	00 02                	add    %al,(%rdx)
     796:	00 00                	add    %al,(%rax)
     798:	00 5f 21             	add    %bl,0x21(%rdi)
     79b:	01 00                	add    %eax,(%rax)
	...
     7a9:	00 30                	add    %dh,(%rax)
     7ab:	01 00                	add    %eax,(%rax)
     7ad:	00 00                	add    %al,(%rax)
     7af:	00 00                	add    %al,(%rax)
     7b1:	00 30                	add    %dh,(%rax)
     7b3:	01 00                	add    %eax,(%rax)
     7b5:	00 00                	add    %al,(%rax)
     7b7:	00 00                	add    %al,(%rax)
     7b9:	ff                   	(bad)  
     7ba:	ff                   	(bad)  
     7bb:	ff                   	(bad)  
     7bc:	ff                   	(bad)  
     7bd:	ff                   	(bad)  
     7be:	ff                   	(bad)  
     7bf:	ff                   	(bad)  
     7c0:	ff 00                	incl   (%rax)
	...
     7ca:	00 40 00             	add    %al,0x0(%rax)
     7cd:	00 00                	add    %al,(%rax)
     7cf:	00 00                	add    %al,(%rax)
     7d1:	00 c0                	add    %al,%al
     7d3:	02 00                	add    (%rax),%al
     7d5:	00 00                	add    %al,(%rax)
     7d7:	00 00                	add    %al,(%rax)
     7d9:	00 00                	add    %al,(%rax)
     7db:	10 00                	adc    %al,(%rax)
	...
     7f9:	01 00                	add    %eax,(%rax)
     7fb:	00 00                	add    %al,(%rax)
     7fd:	00 00                	add    %al,(%rax)
     7ff:	00 00                	add    %al,(%rax)
     801:	02 00                	add    (%rax),%al
     803:	00 00                	add    %al,(%rax)
     805:	00 00                	add    %al,(%rax)
     807:	00 00                	add    %al,(%rax)
     809:	02 00                	add    (%rax),%al
     80b:	00 00                	add    %al,(%rax)
     80d:	00 00                	add    %al,(%rax)
     80f:	00 00                	add    %al,(%rax)
     811:	00 30                	add    %dh,(%rax)
     813:	01 00                	add    %eax,(%rax)
     815:	00 00                	add    %al,(%rax)
     817:	00 00                	add    %al,(%rax)
     819:	00 00                	add    %al,(%rax)
     81b:	ff                   	(bad)  
     81c:	ff                   	(bad)  
     81d:	ff                   	(bad)  
     81e:	ff                   	(bad)  
     81f:	ff                   	(bad)  
     820:	ff 00                	incl   (%rax)
     822:	00 ff                	add    %bh,%bh
     824:	ff                   	(bad)  
     825:	ff                   	(bad)  
     826:	ff                   	(bad)  
     827:	ff                   	(bad)  
     828:	ff 00                	incl   (%rax)
     82a:	00 fb                	add    %bh,%bl
     82c:	ff                   	(bad)  
     82d:	ff                   	(bad)  
     82e:	ff                   	(bad)  
     82f:	ff                   	(bad)  
     830:	ff 48 1f             	decl   0x1f(%rax)
	...
     847:	00 00                	add    %al,(%rax)
     849:	80 0a 00             	orb    $0x0,(%rdx)
	...
     868:	00 00                	add    %al,(%rax)
     86a:	10 00                	adc    %al,(%rax)
	...
     878:	00 00                	add    %al,(%rax)
     87a:	30 01                	xor    %al,(%rcx)
     87c:	00 00                	add    %al,(%rax)
     87e:	00 00                	add    %al,(%rax)
     880:	00 68 30             	add    %ch,0x30(%rax)
     883:	01 00                	add    %eax,(%rax)
	...
     8e1:	00 10                	add    %dl,(%rax)
	...
     8eb:	00 00                	add    %al,(%rax)
     8ed:	02 00                	add    (%rax),%al
     8ef:	00 00                	add    %al,(%rax)
     8f1:	5f                   	pop    %rdi
     8f2:	21 01                	and    %eax,(%rcx)
	...
     900:	00 00                	add    %al,(%rax)
     902:	30 01                	xor    %al,(%rcx)
     904:	00 00                	add    %al,(%rax)
     906:	00 00                	add    %al,(%rax)
     908:	00 00                	add    %al,(%rax)
     90a:	30 01                	xor    %al,(%rcx)
     90c:	00 00                	add    %al,(%rax)
     90e:	00 00                	add    %al,(%rax)
     910:	00 ff                	add    %bh,%bh
     912:	ff                   	(bad)  
     913:	ff                   	(bad)  
     914:	ff                   	(bad)  
     915:	ff                   	(bad)  
     916:	ff                   	(bad)  
     917:	ff                   	(bad)  
     918:	ff 13                	call   *(%rbx)
     91a:	00 00                	add    %al,(%rax)
     91c:	00 00                	add    %al,(%rax)
     91e:	00 00                	add    %al,(%rax)
     920:	00 01                	add    %al,(%rcx)
     922:	00 01                	add    %al,(%rcx)
     924:	00 01                	add    %al,(%rcx)
     926:	00 00                	add    %al,(%rax)
     928:	00 00                	add    %al,(%rax)
     92a:	c0 02 00             	rolb   $0x0,(%rdx)
	...
     939:	03 02                	add    (%rdx),%eax
     93b:	00 00                	add    %al,(%rax)
     93d:	00 00                	add    %al,(%rax)
     93f:	00 00                	add    %al,(%rax)
     941:	02 00                	add    (%rax),%al
     943:	19 00                	sbb    %eax,(%rax)
     945:	ff 00                	incl   (%rax)
     947:	00 00                	add    %al,(%rax)
     949:	00 d0                	add    %dl,%al
     94b:	02 00                	add    (%rax),%al
	...
     959:	03 02                	add    (%rdx),%eax
     95b:	00 00                	add    %al,(%rax)
     95d:	00 00                	add    %al,(%rax)
     95f:	00 00                	add    %al,(%rax)
     961:	0a 00                	or     (%rax),%al
     963:	00 00                	add    %al,(%rax)
     965:	10 00                	adc    %al,(%rax)
     967:	00 00                	add    %al,(%rax)
     969:	00 c0                	add    %al,%al
     96b:	12 00                	adc    (%rax),%al
	...
     981:	07                   	(bad)  
     982:	00 5b 00             	add    %bl,0x0(%rbx)
     985:	3e 00 00             	ds add %al,(%rax)
     988:	00 00                	add    %al,(%rax)
     98a:	c0 13 00             	rclb   $0x0,(%rbx)
     98d:	00 00                	add    %al,(%rax)
     98f:	00 00                	add    %al,(%rax)
     991:	cc                   	int3   
     992:	cc                   	int3   
     993:	cc                   	int3   
     994:	cc                   	int3   
     995:	00 00                	add    %al,(%rax)
     997:	00 00                	add    %al,(%rax)
     999:	03 02                	add    (%rdx),%eax
     99b:	00 00                	add    %al,(%rax)
     99d:	00 00                	add    %al,(%rax)
     99f:	00 00                	add    %al,(%rax)
     9a1:	08 00                	or     %al,(%rax)
     9a3:	03 00                	add    (%rax),%eax
     9a5:	02 00                	add    (%rax),%al
     9a7:	00 00                	add    %al,(%rax)
     9a9:	00 a0 17 00 00 00    	add    %ah,0x17(%rax)
     9af:	00 00                	add    %al,(%rax)
     9b1:	cc                   	int3   
     9b2:	cc                   	int3   
     9b3:	cc                   	int3   
     9b4:	cc                   	int3   
     9b5:	00 00                	add    %al,(%rax)
     9b7:	00 00                	add    %al,(%rax)
     9b9:	03 02                	add    (%rdx),%eax
     9bb:	00 00                	add    %al,(%rax)
     9bd:	00 00                	add    %al,(%rax)
     9bf:	00 00                	add    %al,(%rax)
     9c1:	0a 00                	or     (%rax),%al
     9c3:	00 00                	add    %al,(%rax)
     9c5:	10 00                	adc    %al,(%rax)
     9c7:	00 00                	add    %al,(%rax)
     9c9:	00 c0                	add    %al,%al
     9cb:	17                   	(bad)  
	...
     9e0:	00 04 00             	add    %al,(%rax,%rax,1)
     9e3:	03 00                	add    (%rax),%eax
     9e5:	01 00                	add    %eax,(%rax)
     9e7:	00 00                	add    %al,(%rax)
     9e9:	00 c0                	add    %al,%al
     9eb:	18 00                	sbb    %al,(%rax)
     9ed:	00 00                	add    %al,(%rax)
     9ef:	00 00                	add    %al,(%rax)
     9f1:	48 00 00             	rex.W add %al,(%rax)
     9f4:	00 60 07             	add    %ah,0x7(%rax)
     9f7:	00 00                	add    %al,(%rax)
     9f9:	00 01                	add    %al,(%rcx)
     9fb:	00 00                	add    %al,(%rax)
     9fd:	00 00                	add    %al,(%rax)
     9ff:	00 00                	add    %al,(%rax)
     a01:	06                   	(bad)  
     a02:	00 03                	add    %al,(%rbx)
     a04:	00 02                	add    %al,(%rdx)
     a06:	00 00                	add    %al,(%rax)
     a08:	00 00                	add    %al,(%rax)
     a0a:	d0 18                	rcrb   (%rax)
	...
     a18:	00 03                	add    %al,(%rbx)
     a1a:	02 00                	add    (%rax),%al
     a1c:	00 00                	add    %al,(%rax)
     a1e:	00 00                	add    %al,(%rax)
     a20:	00 0a                	add    %cl,(%rdx)
     a22:	00 00                	add    %al,(%rax)
     a24:	00 10                	add    %dl,(%rax)
     a26:	00 00                	add    %al,(%rax)
     a28:	00 00                	add    %al,(%rax)
     a2a:	f0 18 00             	lock sbb %al,(%rax)
	...
     a41:	05 00 03 00 01       	add    $0x1000300,%eax
     a46:	00 00                	add    %al,(%rax)
     a48:	00 00                	add    %al,(%rax)
     a4a:	f0 19 00             	lock sbb %eax,(%rax)
	...
     a59:	03 02                	add    (%rdx),%eax
     a5b:	00 00                	add    %al,(%rax)
     a5d:	00 00                	add    %al,(%rax)
     a5f:	00 00                	add    %al,(%rax)
     a61:	0a 00                	or     (%rax),%al
     a63:	00 00                	add    %al,(%rax)
     a65:	10 00                	adc    %al,(%rax)
     a67:	00 00                	add    %al,(%rax)
     a69:	00 00                	add    %al,(%rax)
     a6b:	1a 00                	sbb    (%rax),%al
	...
     a81:	07                   	(bad)  
     a82:	00 43 00             	add    %al,0x0(%rbx)
     a85:	3e 00 00             	ds add %al,(%rax)
     a88:	00 00                	add    %al,(%rax)
     a8a:	00 1b                	add    %bl,(%rbx)
     a8c:	00 00                	add    %al,(%rax)
     a8e:	00 00                	add    %al,(%rax)
     a90:	00 cc                	add    %cl,%ah
     a92:	cc                   	int3   
     a93:	cc                   	int3   
     a94:	cc                   	int3   
     a95:	00 00                	add    %al,(%rax)
     a97:	00 00                	add    %al,(%rax)
     a99:	03 02                	add    (%rdx),%eax
     a9b:	00 00                	add    %al,(%rax)
     a9d:	00 00                	add    %al,(%rax)
     a9f:	00 00                	add    %al,(%rax)
     aa1:	08 00                	or     %al,(%rax)
     aa3:	03 00                	add    (%rax),%eax
     aa5:	02 00                	add    (%rax),%al
     aa7:	00 00                	add    %al,(%rax)
     aa9:	00 e0                	add    %ah,%al
     aab:	1e                   	(bad)  
     aac:	00 00                	add    %al,(%rax)
     aae:	00 00                	add    %al,(%rax)
     ab0:	00 cc                	add    %cl,%ah
     ab2:	cc                   	int3   
     ab3:	cc                   	int3   
     ab4:	cc                   	int3   
     ab5:	00 00                	add    %al,(%rax)
     ab7:	00 00                	add    %al,(%rax)
     ab9:	03 02                	add    (%rdx),%eax
     abb:	00 00                	add    %al,(%rax)
     abd:	00 00                	add    %al,(%rax)
     abf:	00 00                	add    %al,(%rax)
     ac1:	0a 00                	or     (%rax),%al
     ac3:	00 00                	add    %al,(%rax)
     ac5:	10 00                	adc    %al,(%rax)
     ac7:	00 00                	add    %al,(%rax)
     ac9:	00 00                	add    %al,(%rax)
     acb:	1f                   	(bad)  
	...
     ae0:	00 04 00             	add    %al,(%rax,%rax,1)
     ae3:	03 00                	add    (%rax),%eax
     ae5:	01 00                	add    %eax,(%rax)
     ae7:	00 00                	add    %al,(%rax)
     ae9:	00 00                	add    %al,(%rax)
     aeb:	20 00                	and    %al,(%rax)
     aed:	00 00                	add    %al,(%rax)
     aef:	00 00                	add    %al,(%rax)
     af1:	48 00 00             	rex.W add %al,(%rax)
     af4:	00 60 07             	add    %ah,0x7(%rax)
     af7:	00 00                	add    %al,(%rax)
     af9:	00 01                	add    %al,(%rcx)
     afb:	00 00                	add    %al,(%rax)
     afd:	00 00                	add    %al,(%rax)
     aff:	00 00                	add    %al,(%rax)
     b01:	06                   	(bad)  
     b02:	00 03                	add    %al,(%rbx)
     b04:	00 02                	add    %al,(%rdx)
     b06:	00 00                	add    %al,(%rax)
     b08:	00 00                	add    %al,(%rax)
     b0a:	10 20                	adc    %ah,(%rax)
	...
     b18:	00 03                	add    %al,(%rbx)
     b1a:	02 00                	add    (%rax),%al
     b1c:	00 00                	add    %al,(%rax)
     b1e:	00 00                	add    %al,(%rax)
     b20:	00 0a                	add    %cl,(%rdx)
     b22:	00 00                	add    %al,(%rax)
     b24:	00 10                	add    %dl,(%rax)
     b26:	00 00                	add    %al,(%rax)
     b28:	00 00                	add    %al,(%rax)
     b2a:	30 20                	xor    %ah,(%rax)
	...
     b40:	00 05 00 03 00 01    	add    %al,0x1000300(%rip)        # 1000e46 <_end+0xfd5e36>
     b46:	00 00                	add    %al,(%rax)
     b48:	00 00                	add    %al,(%rax)
     b4a:	30 21                	xor    %ah,(%rcx)
	...
     b58:	00 03                	add    %al,(%rbx)
     b5a:	02 00                	add    (%rax),%al
     b5c:	00 00                	add    %al,(%rax)
     b5e:	00 00                	add    %al,(%rax)
     b60:	00 0a                	add    %cl,(%rdx)
     b62:	00 00                	add    %al,(%rax)
     b64:	00 ec                	add    %ch,%ah
     b66:	01 00                	add    %eax,(%rax)
     b68:	00 00                	add    %al,(%rax)
     b6a:	40 21 00             	rex and %eax,(%rax)
	...
     e91:	00 00                	add    %al,(%rax)
     e93:	40 00 00             	rex add %al,(%rax)
	...
     eaa:	32 01                	xor    (%rcx),%al
     eac:	00 00                	add    %al,(%rax)
     eae:	00 00                	add    %al,(%rax)
     eb0:	00 a8 07 00 00 e0    	add    %ch,-0x1ffffff9(%rax)
     eb6:	06                   	(bad)  
	...
     ec7:	00 00                	add    %al,(%rax)
     ec9:	3c 00                	cmp    $0x0,%al
     ecb:	00 00                	add    %al,(%rax)
     ecd:	00 00                	add    %al,(%rax)
     ecf:	00 00                	add    %al,(%rax)
     ed1:	88 0e                	mov    %cl,(%rsi)
     ed3:	00 00                	add    %al,(%rax)
     ed5:	02 00                	add    (%rax),%al
	...
     ee7:	00 00                	add    %al,(%rax)
     ee9:	28 00                	sub    %al,(%rax)
     eeb:	00 00                	add    %al,(%rax)
     eed:	00 00                	add    %al,(%rax)
     eef:	00 00                	add    %al,(%rax)
     ef1:	88 0e                	mov    %cl,(%rsi)
     ef3:	00 00                	add    %al,(%rax)
     ef5:	08 00                	or     %al,(%rax)
	...
     f07:	00 00                	add    %al,(%rax)
     f09:	3e 00 00             	ds add %al,(%rax)
     f0c:	00 00                	add    %al,(%rax)
     f0e:	00 00                	add    %al,(%rax)
     f10:	00 88 0e 00 00 02    	add    %cl,0x200000e(%rax)
	...
     f26:	00 00                	add    %al,(%rax)
     f28:	00 01                	add    %al,(%rcx)
     f2a:	00 01                	add    %al,(%rcx)
     f2c:	00 01                	add    %al,(%rcx)
     f2e:	00 00                	add    %al,(%rax)
     f30:	00 00                	add    %al,(%rax)
     f32:	c0 02 00             	rolb   $0x0,(%rdx)
	...
     f41:	03 02                	add    (%rdx),%eax
     f43:	00 00                	add    %al,(%rax)
     f45:	00 00                	add    %al,(%rax)
     f47:	00 00                	add    %al,(%rax)
     f49:	02 00                	add    (%rax),%al
     f4b:	11 00                	adc    %eax,(%rax)
     f4d:	ff 00                	incl   (%rax)
     f4f:	00 00                	add    %al,(%rax)
     f51:	00 d0                	add    %dl,%al
     f53:	02 00                	add    (%rax),%al
	...
     f61:	03 02                	add    (%rdx),%eax
     f63:	00 00                	add    %al,(%rax)
     f65:	00 00                	add    %al,(%rax)
     f67:	00 00                	add    %al,(%rax)
     f69:	0a 00                	or     (%rax),%al
     f6b:	00 00                	add    %al,(%rax)
     f6d:	10 00                	adc    %al,(%rax)
     f6f:	00 00                	add    %al,(%rax)
     f71:	00 c0                	add    %al,%al
     f73:	12 00                	adc    (%rax),%al
	...
     f89:	07                   	(bad)  
     f8a:	00 53 00             	add    %dl,0x0(%rbx)
     f8d:	3e 00 00             	ds add %al,(%rax)
     f90:	00 00                	add    %al,(%rax)
     f92:	c0 13 00             	rclb   $0x0,(%rbx)
     f95:	00 00                	add    %al,(%rax)
     f97:	00 00                	add    %al,(%rax)
     f99:	cc                   	int3   
     f9a:	cc                   	int3   
     f9b:	cc                   	int3   
     f9c:	cc                   	int3   
     f9d:	00 00                	add    %al,(%rax)
     f9f:	00 00                	add    %al,(%rax)
     fa1:	03 02                	add    (%rdx),%eax
     fa3:	00 00                	add    %al,(%rax)
     fa5:	00 00                	add    %al,(%rax)
     fa7:	00 00                	add    %al,(%rax)
     fa9:	08 00                	or     %al,(%rax)
     fab:	03 00                	add    (%rax),%eax
     fad:	02 00                	add    (%rax),%al
     faf:	00 00                	add    %al,(%rax)
     fb1:	00 a0 17 00 00 00    	add    %ah,0x17(%rax)
     fb7:	00 00                	add    %al,(%rax)
     fb9:	cc                   	int3   
     fba:	cc                   	int3   
     fbb:	cc                   	int3   
     fbc:	cc                   	int3   
     fbd:	00 00                	add    %al,(%rax)
     fbf:	00 00                	add    %al,(%rax)
     fc1:	03 02                	add    (%rdx),%eax
     fc3:	00 00                	add    %al,(%rax)
     fc5:	00 00                	add    %al,(%rax)
     fc7:	00 00                	add    %al,(%rax)
     fc9:	0a 00                	or     (%rax),%al
     fcb:	00 00                	add    %al,(%rax)
     fcd:	10 00                	adc    %al,(%rax)
     fcf:	00 00                	add    %al,(%rax)
     fd1:	00 c0                	add    %al,%al
     fd3:	17                   	(bad)  
	...
     fe8:	00 04 00             	add    %al,(%rax,%rax,1)
     feb:	03 00                	add    (%rax),%eax
     fed:	01 00                	add    %eax,(%rax)
     fef:	00 00                	add    %al,(%rax)
     ff1:	00 c0                	add    %al,%al
     ff3:	18 00                	sbb    %al,(%rax)
     ff5:	00 00                	add    %al,(%rax)
     ff7:	00 00                	add    %al,(%rax)
     ff9:	48 00 00             	rex.W add %al,(%rax)
     ffc:	00 60 07             	add    %ah,0x7(%rax)
     fff:	00 00                	add    %al,(%rax)
    1001:	00 01                	add    %al,(%rcx)
    1003:	00 00                	add    %al,(%rax)
    1005:	00 00                	add    %al,(%rax)
    1007:	00 00                	add    %al,(%rax)
    1009:	06                   	(bad)  
    100a:	00 03                	add    %al,(%rbx)
    100c:	00 02                	add    %al,(%rdx)
    100e:	00 00                	add    %al,(%rax)
    1010:	00 00                	add    %al,(%rax)
    1012:	d0 18                	rcrb   (%rax)
	...
    1020:	00 03                	add    %al,(%rbx)
    1022:	02 00                	add    (%rax),%al
    1024:	00 00                	add    %al,(%rax)
    1026:	00 00                	add    %al,(%rax)
    1028:	00 0a                	add    %cl,(%rdx)
    102a:	00 00                	add    %al,(%rax)
    102c:	00 10                	add    %dl,(%rax)
    102e:	00 00                	add    %al,(%rax)
    1030:	00 00                	add    %al,(%rax)
    1032:	f0 18 00             	lock sbb %al,(%rax)
	...
    1049:	05 00 03 00 01       	add    $0x1000300,%eax
    104e:	00 00                	add    %al,(%rax)
    1050:	00 00                	add    %al,(%rax)
    1052:	f0 19 00             	lock sbb %eax,(%rax)
	...
    1061:	03 02                	add    (%rdx),%eax
    1063:	00 00                	add    %al,(%rax)
    1065:	00 00                	add    %al,(%rax)
    1067:	00 00                	add    %al,(%rax)
    1069:	09 10                	or     %edx,(%rax)
    106b:	08 00                	or     %al,(%rax)
    106d:	01 00                	add    %eax,(%rax)
    106f:	00 00                	add    %al,(%rax)
    1071:	00 40 07             	add    %al,0x7(%rax)
	...

Disassembly of section .debug_aranges:

0000000000000000 <.debug_aranges>:
   0:	2c 00                	sub    $0x0,%al
   2:	00 00                	add    %al,(%rax)
   4:	02 00                	add    (%rax),%al
   6:	00 00                	add    %al,(%rax)
   8:	00 00                	add    %al,(%rax)
   a:	08 00                	or     %al,(%rax)
   c:	00 00                	add    %al,(%rax)
   e:	00 00                	add    %al,(%rax)
  10:	63 20                	movsxd (%rax),%esp
  12:	00 00                	add    %al,(%rax)
  14:	00 00                	add    %al,(%rax)
  16:	00 00                	add    %al,(%rax)
  18:	ba 00 00 00 00       	mov    $0x0,%edx
	...
  2d:	00 00                	add    %al,(%rax)
  2f:	00 2c 00             	add    %ch,(%rax,%rax,1)
  32:	00 00                	add    %al,(%rax)
  34:	02 00                	add    (%rax),%al
  36:	cf                   	iret   
  37:	02 00                	add    (%rax),%al
  39:	00 08                	add    %cl,(%rax)
  3b:	00 00                	add    %al,(%rax)
  3d:	00 00                	add    %al,(%rax)
  3f:	00 00                	add    %al,(%rax)
  41:	30 00                	xor    %al,(%rax)
  43:	00 00                	add    %al,(%rax)
  45:	00 00                	add    %al,(%rax)
  47:	00 06                	add    %al,(%rsi)
  49:	10 00                	adc    %al,(%rax)
	...
  5f:	00 2c 00             	add    %ch,(%rax,%rax,1)
  62:	00 00                	add    %al,(%rax)
  64:	02 00                	add    (%rax),%al
  66:	f8                   	clc    
  67:	02 00                	add    (%rax),%al
  69:	00 08                	add    %cl,(%rax)
  6b:	00 00                	add    %al,(%rax)
  6d:	00 00                	add    %al,(%rax)
  6f:	00 06                	add    %al,(%rsi)
  71:	40 00 00             	rex add %al,(%rax)
  74:	00 00                	add    %al,(%rax)
  76:	00 00                	add    %al,(%rax)
  78:	b8 03 00 00 00       	mov    $0x3,%eax
	...

Disassembly of section .debug_info:

0000000000000000 <.debug_info>:
   0:	cb                   	lret   
   1:	02 00                	add    (%rax),%al
   3:	00 05 00 01 08 00    	add    %al,0x80100(%rip)        # 80109 <_end+0x550f9>
   9:	00 00                	add    %al,(%rax)
   b:	00 0f                	add    %cl,(%rdi)
   d:	82                   	(bad)  
   e:	00 00                	add    %al,(%rax)
  10:	00 1d 00 00 00 00    	add    %bl,0x0(%rip)        # 16 <__ImageBase+0x16>
  16:	07                   	(bad)  
  17:	00 00                	add    %al,(%rax)
  19:	00 63 20             	add    %ah,0x20(%rbx)
  1c:	00 00                	add    %al,(%rax)
  1e:	00 00                	add    %al,(%rax)
  20:	00 00                	add    %al,(%rax)
  22:	ba 00 00 00 00       	mov    $0x0,%edx
  27:	00 00                	add    %al,(%rax)
  29:	00 00                	add    %al,(%rax)
  2b:	00 00                	add    %al,(%rax)
  2d:	00 01                	add    %al,(%rcx)
  2f:	01 06                	add    %eax,(%rsi)
  31:	33 00                	xor    (%rax),%eax
  33:	00 00                	add    %al,(%rax)
  35:	01 01                	add    %eax,(%rcx)
  37:	08 31                	or     %dh,(%rcx)
  39:	00 00                	add    %al,(%rax)
  3b:	00 01                	add    %al,(%rcx)
  3d:	02 05 27 01 00 00    	add    0x127(%rip),%al        # 16a <__ImageBase+0x16a>
  43:	01 02                	add    %eax,(%rdx)
  45:	07                   	(bad)  
  46:	59                   	pop    %rcx
  47:	00 00                	add    %al,(%rax)
  49:	00 10                	add    %dl,(%rax)
  4b:	04 05                	add    $0x5,%al
  4d:	69 6e 74 00 01 04 07 	imul   $0x7040100,0x74(%rsi),%ebp
  54:	13 00                	adc    (%rax),%eax
  56:	00 00                	add    %al,(%rax)
  58:	01 08                	add    %ecx,(%rax)
  5a:	05 05 00 00 00       	add    $0x5,%eax
  5f:	01 08                	add    %ecx,(%rax)
  61:	07                   	(bad)  
  62:	0e                   	(bad)  
  63:	00 00                	add    %al,(%rax)
  65:	00 01                	add    %al,(%rcx)
  67:	08 04 52             	or     %al,(%rdx,%rdx,2)
  6a:	00 00                	add    %al,(%rax)
  6c:	00 01                	add    %al,(%rcx)
  6e:	04 04                	add    $0x4,%al
  70:	7c 00                	jl     72 <__ImageBase+0x72>
  72:	00 00                	add    %al,(%rax)
  74:	01 01                	add    %eax,(%rcx)
  76:	06                   	(bad)  
  77:	3a 00                	cmp    (%rax),%al
  79:	00 00                	add    %al,(%rax)
  7b:	11 74 00 00          	adc    %esi,0x0(%rax,%rax,1)
  7f:	00 01                	add    %al,(%rcx)
  81:	08 05 00 00 00 00    	or     %al,0x0(%rip)        # 87 <__ImageBase+0x87>
  87:	05 6c 00 00 00       	add    $0x6c,%eax
  8c:	08 05 4a 00 00 00    	or     %al,0x4a(%rip)        # dc <__ImageBase+0xdc>
  92:	09 03                	or     %eax,(%rbx)
  94:	64 a1 01 00 00 00 00 	movabs %fs:0xc205000000000001,%eax
  9b:	00 05 c2 
  9e:	07                   	(bad)  
  9f:	00 00                	add    %al,(%rax)
  a1:	09 07                	or     %eax,(%rdi)
  a3:	b1 00                	mov    $0x0,%cl
  a5:	00 00                	add    %al,(%rax)
  a7:	09 03                	or     %eax,(%rbx)
  a9:	00 80 01 00 00 00    	add    %al,0x1(%rax)
  af:	00 00                	add    %al,(%rax)
  b1:	08 74 00 00          	or     %dh,0x0(%rax,%rax,1)
  b5:	00 05 20 00 00 00    	add    %al,0x20(%rip)        # db <__ImageBase+0xdb>
  bb:	0a 05 4a 00 00 00    	or     0x4a(%rip),%al        # 10b <__ImageBase+0x10b>
  c1:	09 03                	or     %eax,(%rbx)
  c3:	60                   	(bad)  
  c4:	a1 01 00 00 00 00 00 	movabs 0x3f03000000000001,%eax
  cb:	03 3f 
  cd:	00 00                	add    %al,(%rax)
  cf:	00 4a 00             	add    %cl,0x0(%rdx)
  d2:	00 00                	add    %al,(%rax)
  d4:	da 00                	fiaddl (%rax)
  d6:	00 00                	add    %al,(%rax)
  d8:	02 00                	add    (%rax),%al
  da:	12 4b 00             	adc    0x0(%rbx),%cl
  dd:	00 00                	add    %al,(%rax)
  df:	02 47 16             	add    0x16(%rdi),%al
  e2:	4a 00 00             	rex.WX add %al,(%rax)
  e5:	00 f5                	add    %dh,%ch
  e7:	00 00                	add    %al,(%rax)
  e9:	00 09                	add    %cl,(%rcx)
  eb:	f5                   	cmc    
  ec:	00 00                	add    %al,(%rax)
  ee:	00 09                	add    %cl,(%rcx)
  f0:	f5                   	cmc    
  f1:	00 00                	add    %al,(%rax)
  f3:	00 00                	add    %al,(%rax)
  f5:	08 7b 00             	or     %bh,0x0(%rbx)
  f8:	00 00                	add    %al,(%rax)
  fa:	0a b8 07 00 00 2d    	or     0x2d000007(%rax),%bh
 100:	f0 20 00             	lock and %al,(%rax)
 103:	00 00                	add    %al,(%rax)
 105:	00 00                	add    %al,(%rax)
 107:	00 2d 00 00 00 00    	add    %ch,0x0(%rip)        # 10d <__ImageBase+0x10d>
 10d:	00 00                	add    %al,(%rax)
 10f:	00 01                	add    %al,(%rcx)
 111:	9c                   	pushf  
 112:	79 01                	jns    115 <__ImageBase+0x115>
 114:	00 00                	add    %al,(%rax)
 116:	06                   	(bad)  
 117:	a1 04 00 00 2d 1d 4a 	movabs 0x4a1d2d000004,%eax
 11e:	00 00 
 120:	00 14 00             	add    %dl,(%rax,%rax,1)
 123:	00 00                	add    %al,(%rax)
 125:	0c 00                	or     $0x0,%al
 127:	00 00                	add    %al,(%rax)
 129:	04 03                	add    $0x3,%al
 12b:	21 00                	and    %eax,(%rax)
 12d:	00 00                	add    %al,(%rax)
 12f:	00 00                	add    %al,(%rax)
 131:	00 07                	add    %al,(%rdi)
 133:	00 00                	add    %al,(%rax)
 135:	00 00                	add    %al,(%rax)
 137:	00 00                	add    %al,(%rax)
 139:	00 4a 01             	add    %cl,0x1(%rdx)
 13c:	00 00                	add    %al,(%rax)
 13e:	0b 3f                	or     (%rdi),%edi
 140:	00 00                	add    %al,(%rax)
 142:	00 4a 00             	add    %cl,0x0(%rdx)
 145:	00 00                	add    %al,(%rax)
 147:	02 00                	add    (%rax),%al
 149:	00 0c 0e             	add    %cl,(%rsi,%rcx,1)
 14c:	21 00                	and    %eax,(%rax)
 14e:	00 00                	add    %al,(%rax)
 150:	00 00                	add    %al,(%rax)
 152:	00 0e                	add    %cl,(%rsi)
 154:	00 00                	add    %al,(%rax)
 156:	00 00                	add    %al,(%rax)
 158:	00 00                	add    %al,(%rax)
 15a:	00 03                	add    %al,(%rbx)
 15c:	3f                   	(bad)  
 15d:	00 00                	add    %al,(%rax)
 15f:	00 4a 00             	add    %cl,0x0(%rdx)
 162:	00 00                	add    %al,(%rax)
 164:	6a 01                	push   $0x1
 166:	00 00                	add    %al,(%rax)
 168:	02 00                	add    (%rax),%al
 16a:	0d 1c 21 00 00       	or     $0x211c,%eax
 16f:	00 00                	add    %al,(%rax)
 171:	00 00                	add    %al,(%rax)
 173:	cb                   	lret   
 174:	00 00                	add    %al,(%rax)
 176:	00 00                	add    %al,(%rax)
 178:	00 0a                	add    %cl,(%rdx)
 17a:	00 0a                	add    %cl,(%rdx)
 17c:	00 00                	add    %al,(%rax)
 17e:	22 c7                	and    %bh,%al
 180:	20 00                	and    %al,(%rax)
 182:	00 00                	add    %al,(%rax)
 184:	00 00                	add    %al,(%rax)
 186:	00 29                	add    %ch,(%rcx)
 188:	00 00                	add    %al,(%rax)
 18a:	00 00                	add    %al,(%rax)
 18c:	00 00                	add    %al,(%rax)
 18e:	00 01                	add    %al,(%rcx)
 190:	9c                   	pushf  
 191:	e5 01                	in     $0x1,%eax
 193:	00 00                	add    %al,(%rax)
 195:	06                   	(bad)  
 196:	a1 04 00 00 22 17 4a 	movabs 0x4a1722000004,%eax
 19d:	00 00 
 19f:	00 3d 00 00 00 37    	add    %bh,0x37000000(%rip)        # 370001a5 <_end+0x36fd5195>
 1a5:	00 00                	add    %al,(%rax)
 1a7:	00 0c d3             	add    %cl,(%rbx,%rdx,8)
 1aa:	20 00                	and    %al,(%rax)
 1ac:	00 00                	add    %al,(%rax)
 1ae:	00 00                	add    %al,(%rax)
 1b0:	00 1c 00             	add    %bl,(%rax,%rax,1)
 1b3:	00 00                	add    %al,(%rax)
 1b5:	00 00                	add    %al,(%rax)
 1b7:	00 00                	add    %al,(%rax)
 1b9:	03 3f                	add    (%rdi),%edi
 1bb:	00 00                	add    %al,(%rax)
 1bd:	00 4a 00             	add    %cl,0x0(%rdx)
 1c0:	00 00                	add    %al,(%rax)
 1c2:	c8 01 00 00          	enter  $0x1,$0x0
 1c6:	02 00                	add    (%rax),%al
 1c8:	13 ef                	adc    %edi,%ebp
 1ca:	20 00                	and    %al,(%rax)
 1cc:	00 00                	add    %al,(%rax)
 1ce:	00 00                	add    %al,(%rax)
 1d0:	00 cb                	add    %cl,%bl
 1d2:	00 00                	add    %al,(%rax)
 1d4:	00 07                	add    %al,(%rdi)
 1d6:	01 55 09             	add    %edx,0x9(%rbp)
 1d9:	03 60 30             	add    0x30(%rax),%esp
 1dc:	01 00                	add    %eax,(%rax)
 1de:	00 00                	add    %al,(%rax)
 1e0:	00 00                	add    %al,(%rax)
 1e2:	00 00                	add    %al,(%rax)
 1e4:	00 14 53             	add    %dl,(%rbx,%rdx,2)
 1e7:	02 00                	add    (%rax),%al
 1e9:	00 01                	add    %al,(%rcx)
 1eb:	0d 06 63 20 00       	or     $0x206306,%eax
 1f0:	00 00                	add    %al,(%rax)
 1f2:	00 00                	add    %al,(%rax)
 1f4:	00 64 00 00          	add    %ah,0x0(%rax,%rax,1)
 1f8:	00 00                	add    %al,(%rax)
 1fa:	00 00                	add    %al,(%rax)
 1fc:	00 01                	add    %al,(%rcx)
 1fe:	9c                   	pushf  
 1ff:	06                   	(bad)  
 200:	a1 04 00 00 0d 16 4a 	movabs 0x4a160d000004,%eax
 207:	00 00 
 209:	00 5d 00             	add    %bl,0x0(%rbp)
 20c:	00 00                	add    %al,(%rax)
 20e:	53                   	push   %rbx
 20f:	00 00                	add    %al,(%rax)
 211:	00 15 70 77 00 01    	add    %dl,0x1007770(%rip)        # 1007987 <_end+0xfdc977>
 217:	0d 2c f5 00 00       	or     $0xf52c,%eax
 21c:	00 87 00 00 00 7d    	add    %al,0x7d000000(%rdi)
 222:	00 00                	add    %al,(%rax)
 224:	00 04 8d 20 00 00 00 	add    %al,0x20(,%rcx,4)
 22b:	00 00                	add    %al,(%rax)
 22d:	00 16                	add    %dl,(%rsi)
 22f:	00 00                	add    %al,(%rax)
 231:	00 00                	add    %al,(%rax)
 233:	00 00                	add    %al,(%rax)
 235:	00 65 02             	add    %ah,0x2(%rbp)
 238:	00 00                	add    %al,(%rax)
 23a:	03 3f                	add    (%rdi),%edi
 23c:	00 00                	add    %al,(%rax)
 23e:	00 4a 00             	add    %cl,0x0(%rdx)
 241:	00 00                	add    %al,(%rax)
 243:	49 02 00             	rex.WB add (%r8),%al
 246:	00 02                	add    %al,(%rdx)
 248:	00 0e                	add    %cl,(%rsi)
 24a:	99                   	cltd   
 24b:	20 00                	and    %al,(%rax)
 24d:	00 00                	add    %al,(%rax)
 24f:	00 00                	add    %al,(%rax)
 251:	00 cb                	add    %cl,%bl
 253:	00 00                	add    %al,(%rax)
 255:	00 07                	add    %al,(%rdi)
 257:	01 55 09             	add    %edx,0x9(%rbp)
 25a:	03 00                	add    (%rax),%eax
 25c:	30 01                	xor    %al,(%rcx)
 25e:	00 00                	add    %al,(%rax)
 260:	00 00                	add    %al,(%rax)
 262:	00 00                	add    %al,(%rax)
 264:	00 04 a5 20 00 00 00 	add    %al,0x20(,%riz,4)
 26b:	00 00                	add    %al,(%rax)
 26d:	00 11                	add    %dl,(%rcx)
 26f:	00 00                	add    %al,(%rax)
 271:	00 00                	add    %al,(%rax)
 273:	00 00                	add    %al,(%rax)
 275:	00 86 02 00 00 0b    	add    %al,0xb000002(%rsi)
 27b:	3f                   	(bad)  
 27c:	00 00                	add    %al,(%rax)
 27e:	00 4a 00             	add    %cl,0x0(%rdx)
 281:	00 00                	add    %al,(%rax)
 283:	02 00                	add    (%rax),%al
 285:	00 04 b9             	add    %al,(%rcx,%rdi,4)
 288:	20 00                	and    %al,(%rax)
 28a:	00 00                	add    %al,(%rax)
 28c:	00 00                	add    %al,(%rax)
 28e:	00 0e                	add    %cl,(%rsi)
 290:	00 00                	add    %al,(%rax)
 292:	00 00                	add    %al,(%rax)
 294:	00 00                	add    %al,(%rax)
 296:	00 b8 02 00 00 03    	add    %bh,0x3000002(%rax)
 29c:	3f                   	(bad)  
 29d:	00 00                	add    %al,(%rax)
 29f:	00 4a 00             	add    %cl,0x0(%rdx)
 2a2:	00 00                	add    %al,(%rax)
 2a4:	aa                   	stos   %al,%es:(%rdi)
 2a5:	02 00                	add    (%rax),%al
 2a7:	00 02                	add    %al,(%rdx)
 2a9:	00 0d c7 20 00 00    	add    %cl,0x20c7(%rip)        # 2376 <ecall_get_password+0x286>
 2af:	00 00                	add    %al,(%rax)
 2b1:	00 00                	add    %al,(%rax)
 2b3:	cb                   	lret   
 2b4:	00 00                	add    %al,(%rax)
 2b6:	00 00                	add    %al,(%rax)
 2b8:	0e                   	(bad)  
 2b9:	89 20                	mov    %esp,(%rax)
 2bb:	00 00                	add    %al,(%rax)
 2bd:	00 00                	add    %al,(%rax)
 2bf:	00 00                	add    %al,(%rax)
 2c1:	da 00                	fiaddl (%rax)
 2c3:	00 00                	add    %al,(%rax)
 2c5:	07                   	(bad)  
 2c6:	01 55 03             	add    %edx,0x3(%rbp)
 2c9:	a3 01 54 00 00 00 25 	movabs %eax,0x250000005401
 2d0:	00 00 
 2d2:	00 05 00 01 08 3d    	add    %al,0x3d080100(%rip)        # 3d0803d8 <_end+0x3d0553c8>
 2d8:	01 00                	add    %eax,(%rax)
 2da:	00 01                	add    %al,(%rcx)
 2dc:	f3 00 00             	repz add %al,(%rax)
 2df:	00 00                	add    %al,(%rax)
 2e1:	30 00                	xor    %al,(%rax)
 2e3:	00 00                	add    %al,(%rax)
 2e5:	00 00                	add    %al,(%rax)
 2e7:	00 86 20 31 01 00    	add    %al,0x13120(%rsi)
 2ed:	00 37                	add    %dh,(%rdi)
 2ef:	01 00                	add    %eax,(%rax)
 2f1:	00 53 01             	add    %dl,0x1(%rbx)
 2f4:	00 00                	add    %al,(%rax)
 2f6:	01 80 b1 0c 00 00    	add    %eax,0xcb1(%rax)
 2fc:	05 00 01 08 51       	add    $0x51080100,%eax
 301:	01 00                	add    %eax,(%rax)
 303:	00 23                	add    %ah,(%rbx)
 305:	82                   	(bad)  
 306:	00 00                	add    %al,(%rax)
 308:	00 1d 52 00 00 00    	add    %bl,0x52(%rip)        # 360 <__ImageBase+0x360>
 30e:	07                   	(bad)  
 30f:	00 00                	add    %al,(%rax)
 311:	00 06                	add    %al,(%rsi)
 313:	40 00 00             	rex add %al,(%rax)
 316:	00 00                	add    %al,(%rax)
 318:	00 00                	add    %al,(%rax)
 31a:	b8 03 00 00 00       	mov    $0x3,%eax
 31f:	00 00                	add    %al,(%rax)
 321:	00 3c 01             	add    %bh,(%rcx,%rax,1)
 324:	00 00                	add    %al,(%rax)
 326:	07                   	(bad)  
 327:	01 06                	add    %eax,(%rsi)
 329:	33 00                	xor    (%rax),%eax
 32b:	00 00                	add    %al,(%rax)
 32d:	05 b0 01 00 00       	add    $0x1b0,%eax
 332:	02 28                	add    (%rax),%ch
 334:	1d 41 00 00 00       	sbb    $0x41,%eax
 339:	07                   	(bad)  
 33a:	01 08                	add    %ecx,(%rax)
 33c:	31 00                	xor    %eax,(%rax)
 33e:	00 00                	add    %al,(%rax)
 340:	07                   	(bad)  
 341:	02 05 27 01 00 00    	add    0x127(%rip),%al        # 46e <__ImageBase+0x46e>
 347:	07                   	(bad)  
 348:	02 07                	add    (%rdi),%al
 34a:	59                   	pop    %rcx
 34b:	00 00                	add    %al,(%rax)
 34d:	00 24 04             	add    %ah,(%rsp,%rax,1)
 350:	05 69 6e 74 00       	add    $0x746e69,%eax
 355:	07                   	(bad)  
 356:	04 07                	add    $0x7,%al
 358:	13 00                	adc    (%rax),%eax
 35a:	00 00                	add    %al,(%rax)
 35c:	10 5d 00             	adc    %bl,0x0(%rbp)
 35f:	00 00                	add    %al,(%rax)
 361:	07                   	(bad)  
 362:	08 05 05 00 00 00    	or     %al,0x5(%rip)        # 36d <__ImageBase+0x36d>
 368:	05 57 07 00 00       	add    $0x757,%eax
 36d:	02 2f                	add    (%rdi),%ch
 36f:	1d 7c 00 00 00       	sbb    $0x7c,%eax
 374:	07                   	(bad)  
 375:	08 07                	or     %al,(%rdi)
 377:	0e                   	(bad)  
 378:	00 00                	add    %al,(%rax)
 37a:	00 05 67 08 00 00    	add    %al,0x867(%rip)        # be7 <__ImageBase+0xbe7>
 380:	02 62 1d             	add    0x1d(%rdx),%ah
 383:	70 00                	jo     385 <__ImageBase+0x385>
 385:	00 00                	add    %al,(%rax)
 387:	05 20 04 00 00       	add    $0x420,%eax
 38c:	02 66 1d             	add    0x1d(%rsi),%ah
 38f:	7c 00                	jl     391 <__ImageBase+0x391>
 391:	00 00                	add    %al,(%rax)
 393:	07                   	(bad)  
 394:	08 04 52             	or     %al,(%rdx,%rdx,2)
 397:	00 00                	add    %al,(%rax)
 399:	00 07                	add    %al,(%rdi)
 39b:	04 04                	add    $0x4,%al
 39d:	7c 00                	jl     39f <__ImageBase+0x39f>
 39f:	00 00                	add    %al,(%rax)
 3a1:	25 08 07 01 06       	and    $0x6010708,%eax
 3a6:	3a 00                	cmp    (%rax),%al
 3a8:	00 00                	add    %al,(%rax)
 3aa:	10 ab 00 00 00 05    	adc    %ch,0x5000000(%rbx)
 3b0:	b2 01                	mov    $0x1,%dl
 3b2:	00 00                	add    %al,(%rax)
 3b4:	03 21                	add    (%rcx),%esp
 3b6:	19 35 00 00 00 05    	sbb    %esi,0x5000000(%rip)        # 50003bc <_end+0x4fd53ac>
 3bc:	59                   	pop    %rcx
 3bd:	07                   	(bad)  
 3be:	00 00                	add    %al,(%rax)
 3c0:	03 3f                	add    (%rdi),%edi
 3c2:	19 70 00             	sbb    %esi,0x0(%rax)
 3c5:	00 00                	add    %al,(%rax)
 3c7:	05 69 08 00 00       	add    $0x869,%eax
 3cc:	03 5e 19             	add    0x19(%rsi),%ebx
 3cf:	83 00 00             	addl   $0x0,(%rax)
 3d2:	00 05 22 04 00 00    	add    %al,0x422(%rip)        # 7fa <__ImageBase+0x7fa>
 3d8:	04 5e                	add    $0x5e,%al
 3da:	15 8f 00 00 00       	adc    $0x8f,%eax
 3df:	26 3f                	es (bad) 
 3e1:	07                   	(bad)  
 3e2:	00 00                	add    %al,(%rax)
 3e4:	07                   	(bad)  
 3e5:	04 5d                	add    $0x5d,%al
 3e7:	00 00                	add    %al,(%rax)
 3e9:	00 05 25 0e f0 02    	add    %al,0x2f00e25(%rip)        # 2f01214 <_end+0x2ed6204>
 3ef:	00 00                	add    %al,(%rax)
 3f1:	08 62 07             	or     %ah,0x7(%rdx)
 3f4:	00 00                	add    %al,(%rax)
 3f6:	00 08                	add    %cl,(%rax)
 3f8:	61                   	(bad)  
 3f9:	01 00                	add    %eax,(%rax)
 3fb:	00 01                	add    %al,(%rcx)
 3fd:	08 98 07 00 00 02    	or     %bl,0x2000007(%rax)
 403:	08 51 0b             	or     %dl,0xb(%rcx)
 406:	00 00                	add    %al,(%rax)
 408:	03 08                	add    (%rax),%ecx
 40a:	0b 08                	or     (%rax),%ecx
 40c:	00 00                	add    %al,(%rax)
 40e:	04 08                	add    $0x8,%al
 410:	df 06                	filds  (%rsi)
 412:	00 00                	add    %al,(%rax)
 414:	05 08 0e 09 00       	add    $0x90e08,%eax
 419:	00 08                	add    %cl,(%rax)
 41b:	08 92 01 00 00 09    	or     %dl,0x9000001(%rdx)
 421:	08 78 03             	or     %bh,0x3(%rax)
 424:	00 00                	add    %al,(%rax)
 426:	0a 01                	or     (%rcx),%al
 428:	d8 08                	fmuls  (%rax)
 42a:	00 00                	add    %al,(%rax)
 42c:	01 10                	add    %edx,(%rax)
 42e:	01 01                	add    %eax,(%rcx)
 430:	03 00                	add    (%rax),%eax
 432:	00 03                	add    %al,(%rbx)
 434:	10 01                	adc    %al,(%rcx)
 436:	f7 06 00 00 06 10    	testl  $0x10060000,(%rsi)
 43c:	01 e3                	add    %esp,%ebx
 43e:	03 00                	add    (%rax),%eax
 440:	00 07                	add    %al,(%rdi)
 442:	10 01                	adc    %al,(%rcx)
 444:	95                   	xchg   %eax,%ebp
 445:	09 00                	or     %eax,(%rax)
 447:	00 08                	add    %cl,(%rax)
 449:	10 01                	adc    %al,(%rcx)
 44b:	7a 0a                	jp     457 <__ImageBase+0x457>
 44d:	00 00                	add    %al,(%rax)
 44f:	09 10                	or     %edx,(%rax)
 451:	01 ae 03 00 00 00    	add    %ebp,0x3(%rsi)
 457:	20 01                	and    %al,(%rcx)
 459:	c9                   	leave  
 45a:	03 00                	add    (%rax),%eax
 45c:	00 01                	add    %al,(%rcx)
 45e:	20 01                	and    %al,(%rcx)
 460:	d8 01                	fadds  (%rcx)
 462:	00 00                	add    %al,(%rax)
 464:	02 20                	add    (%rax),%ah
 466:	01 fb                	add    %edi,%ebx
 468:	01 00                	add    %eax,(%rax)
 46a:	00 03                	add    %al,(%rbx)
 46c:	20 01                	and    %al,(%rcx)
 46e:	61                   	(bad)  
 46f:	0a 00                	or     (%rax),%al
 471:	00 04 20             	add    %al,(%rax,%riz,1)
 474:	01 27                	add    %esp,(%rdi)
 476:	07                   	(bad)  
 477:	00 00                	add    %al,(%rax)
 479:	05 20 01 cb 09       	add    $0x9cb0120,%eax
 47e:	00 00                	add    %al,(%rax)
 480:	06                   	(bad)  
 481:	20 01                	and    %al,(%rcx)
 483:	33 0b                	xor    (%rbx),%ecx
 485:	00 00                	add    %al,(%rax)
 487:	07                   	(bad)  
 488:	20 01                	and    %al,(%rcx)
 48a:	05 04 00 00 09       	add    $0x9000004,%eax
 48f:	20 01                	and    %al,(%rcx)
 491:	11 07                	adc    %eax,(%rdi)
 493:	00 00                	add    %al,(%rax)
 495:	0c 20                	or     $0x20,%al
 497:	01 ac 08 00 00 0d 20 	add    %ebp,0x200d0000(%rax,%rcx,1)
 49e:	01 76 01             	add    %esi,0x1(%rsi)
 4a1:	00 00                	add    %al,(%rax)
 4a3:	0e                   	(bad)  
 4a4:	20 01                	and    %al,(%rcx)
 4a6:	5f                   	pop    %rdi
 4a7:	02 00                	add    (%rax),%al
 4a9:	00 0f                	add    %cl,(%rdi)
 4ab:	20 01                	and    %al,(%rcx)
 4ad:	2e 09 00             	cs or  %eax,(%rax)
 4b0:	00 10                	add    %dl,(%rax)
 4b2:	20 01                	and    %al,(%rcx)
 4b4:	8d 08                	lea    (%rax),%ecx
 4b6:	00 00                	add    %al,(%rax)
 4b8:	11 20                	adc    %esp,(%rax)
 4ba:	01 30                	add    %esi,(%rax)
 4bc:	0a 00                	or     (%rax),%al
 4be:	00 01                	add    %al,(%rcx)
 4c0:	30 01                	xor    %al,(%rcx)
 4c2:	5f                   	pop    %rdi
 4c3:	06                   	(bad)  
 4c4:	00 00                	add    %al,(%rax)
 4c6:	02 30                	add    (%rax),%dh
 4c8:	01 aa 04 00 00 03    	add    %ebp,0x3000004(%rdx)
 4ce:	30 01                	xor    %al,(%rcx)
 4d0:	16                   	(bad)  
 4d1:	03 00                	add    (%rax),%eax
 4d3:	00 04 30             	add    %al,(%rax,%rsi,1)
 4d6:	01 b1 09 00 00 05    	add    %esi,0x5000009(%rcx)
 4dc:	30 01                	xor    %al,(%rcx)
 4de:	b9 05 00 00 01       	mov    $0x1000005,%ecx
 4e3:	40 01 46 04          	rex add %eax,0x4(%rsi)
 4e7:	00 00                	add    %al,(%rax)
 4e9:	02 40 01             	add    0x1(%rax),%al
 4ec:	13 06                	adc    (%rsi),%eax
 4ee:	00 00                	add    %al,(%rax)
 4f0:	03 40 01             	add    0x1(%rax),%eax
 4f3:	fd                   	std    
 4f4:	04 00                	add    $0x0,%al
 4f6:	00 04 40             	add    %al,(%rax,%rax,2)
 4f9:	01 74 05 00          	add    %esi,0x0(%rbp,%rax,1)
 4fd:	00 05 40 01 1b 0b    	add    %al,0xb1b0140(%rip)        # b1b0643 <_end+0xb185633>
 503:	00 00                	add    %al,(%rax)
 505:	06                   	(bad)  
 506:	40 01 47 0a          	rex add %eax,0xa(%rdi)
 50a:	00 00                	add    %al,(%rax)
 50c:	07                   	(bad)  
 50d:	40 01 c2             	rex add %eax,%edx
 510:	06                   	(bad)  
 511:	00 00                	add    %al,(%rax)
 513:	08 40 01             	or     %al,0x1(%rax)
 516:	4d 05 00 00 0a 40    	rex.WRB add $0x400a0000,%rax
 51c:	01 ba 01 00 00 0c    	add    %edi,0xc000001(%rdx)
 522:	40 01 29             	rex add %ebp,(%rcx)
 525:	04 00                	add    $0x0,%al
 527:	00 0d 40 01 0d 0a    	add    %cl,0xa0d0140(%rip)        # a0d066d <_end+0xa0a565d>
 52d:	00 00                	add    %al,(%rax)
 52f:	0e                   	(bad)  
 530:	40 01 5c 05 00       	rex add %ebx,0x0(%rbp,%rax,1)
 535:	00 0f                	add    %cl,(%rdi)
 537:	40 01 45 09          	rex add %eax,0x9(%rbp)
 53b:	00 00                	add    %al,(%rax)
 53d:	11 40 01             	adc    %eax,0x1(%rax)
 540:	dd 04 00             	fldl   (%rax,%rax,1)
 543:	00 12                	add    %dl,(%rdx)
 545:	40 01 21             	rex add %esp,(%rcx)
 548:	02 00                	add    (%rax),%al
 54a:	00 13                	add    %dl,(%rbx)
 54c:	40 01 81 07 00 00 02 	rex add %eax,0x2000007(%rcx)
 553:	50                   	push   %rax
 554:	01 aa 06 00 00 01    	add    %ebp,0x1000006(%rdx)
 55a:	60                   	(bad)  
 55b:	01 f7                	add    %esi,%edi
 55d:	05 00 00 02 60       	add    $0x60020000,%eax
 562:	01 f3                	add    %esi,%ebx
 564:	08 00                	or     %al,(%rax)
 566:	00 03                	add    %al,(%rbx)
 568:	60                   	(bad)  
 569:	01 83 04 00 00 04    	add    %eax,0x4000004(%rbx)
 56f:	60                   	(bad)  
 570:	01 d9                	add    %ebx,%ecx
 572:	07                   	(bad)  
 573:	00 00                	add    %al,(%rax)
 575:	05 60 01 c3 04       	add    $0x4c30160,%eax
 57a:	00 00                	add    %al,(%rax)
 57c:	01 70 01             	add    %esi,0x1(%rax)
 57f:	c0 02 00             	rolb   $0x0,(%rdx)
 582:	00 02                	add    %al,(%rdx)
 584:	70 01                	jo     587 <__ImageBase+0x587>
 586:	df 09                	fisttps (%rcx)
 588:	00 00                	add    %al,(%rax)
 58a:	03 70 01             	add    0x1(%rax),%esi
 58d:	8e 02                	mov    (%rdx),%es
 58f:	00 00                	add    %al,(%rax)
 591:	04 70                	add    $0x70,%al
 593:	01 83 06 00 00 05    	add    %eax,0x5000006(%rbx)
 599:	70 01                	jo     59c <__ImageBase+0x59c>
 59b:	d9 02                	flds   (%rdx)
 59d:	00 00                	add    %al,(%rax)
 59f:	06                   	(bad)  
 5a0:	70 01                	jo     5a3 <__ImageBase+0x5a3>
 5a2:	92                   	xchg   %eax,%edx
 5a3:	05 00 00 07 70       	add    $0x70070000,%eax
 5a8:	01 21                	add    %esp,(%rcx)
 5aa:	05 00 00 08 70       	add    $0x70080000,%eax
 5af:	01 53 03             	add    %edx,0x3(%rbx)
 5b2:	00 00                	add    %al,(%rax)
 5b4:	09 70 01             	or     %esi,0x1(%rax)
 5b7:	c9                   	leave  
 5b8:	0a 00                	or     (%rax),%al
 5ba:	00 01                	add    %al,(%rcx)
 5bc:	80 01 f3             	addb   $0xf3,(%rcx)
 5bf:	0a 00                	or     (%rax),%al
 5c1:	00 02                	add    %al,(%rdx)
 5c3:	80 01 d7             	addb   $0xd7,(%rcx)
 5c6:	05 00 00 03 80       	add    $0x80030000,%eax
 5cb:	01 a5 0a 00 00 04    	add    %esp,0x400000a(%rbp)
 5d1:	80 01 2f             	addb   $0x2f,(%rcx)
 5d4:	03 00                	add    (%rax),%eax
 5d6:	00 05 80 01 5c 09    	add    %al,0x95c0180(%rip)        # 95c075c <_end+0x959574c>
 5dc:	00 00                	add    %al,(%rax)
 5de:	01 90 01 31 06 00    	add    %edx,0x63101(%rax)
 5e4:	00 01                	add    %al,(%rcx)
 5e6:	f0 00 05 3c 07 00 00 	lock add %al,0x73c(%rip)        # d29 <__ImageBase+0xd29>
 5ed:	05 7e 03 e7 00       	add    $0xe7037e,%eax
 5f2:	00 00                	add    %al,(%rax)
 5f4:	07                   	(bad)  
 5f5:	08 05 00 00 00 00    	or     %al,0x0(%rip)        # 5fb <__ImageBase+0x5fb>
 5fb:	05 6e 07 00 00       	add    $0x76e,%eax
 600:	06                   	(bad)  
 601:	30 0d 56 00 00 00    	xor    %cl,0x56(%rip)        # 65d <__ImageBase+0x65d>
 607:	0f 3e                	(bad)  
 609:	02 00                	add    (%rax),%al
 60b:	00 18                	add    %bl,(%rax)
 60d:	1e                   	(bad)  
 60e:	3f                   	(bad)  
 60f:	03 00                	add    (%rax),%eax
 611:	00 06                	add    %al,(%rsi)
 613:	9e                   	sahf   
 614:	04 00                	add    $0x0,%al
 616:	00 1f                	add    %bl,(%rdi)
 618:	06                   	(bad)  
 619:	56                   	push   %rsi
 61a:	00 00                	add    %al,(%rax)
 61c:	00 00                	add    %al,(%rax)
 61e:	06                   	(bad)  
 61f:	f5                   	cmc    
 620:	01 00                	add    %eax,(%rax)
 622:	00 20                	add    %ah,(%rax)
 624:	0e                   	(bad)  
 625:	3f                   	(bad)  
 626:	03 00                	add    (%rax),%eax
 628:	00 08                	add    %cl,(%rax)
 62a:	06                   	(bad)  
 62b:	72 04                	jb     631 <__ImageBase+0x631>
 62d:	00 00                	add    %al,(%rax)
 62f:	21 09                	and    %ecx,(%rcx)
 631:	db 00                	fildl  (%rax)
 633:	00 00                	add    %al,(%rax)
 635:	10 00                	adc    %al,(%rax)
 637:	09 b2 00 00 00 05    	or     %esi,0x5000000(%rdx)
 63d:	3e 02 00             	ds add (%rax),%al
 640:	00 01                	add    %al,(%rcx)
 642:	22 03                	and    (%rbx),%al
 644:	0f 03 00             	lsl    (%rax),%eax
 647:	00 0f                	add    %cl,(%rdi)
 649:	60                   	(bad)  
 64a:	04 00                	add    $0x0,%al
 64c:	00 04 24             	add    %al,(%rsp)
 64f:	68 03 00 00 06       	push   $0x6000003
 654:	9e                   	sahf   
 655:	04 00                	add    $0x0,%al
 657:	00 25 06 56 00 00    	add    %ah,0x5606(%rip)        # 5c63 <sgx_ocalloc+0x43>
 65d:	00 00                	add    %al,(%rax)
 65f:	00 05 60 04 00 00    	add    %al,0x460(%rip)        # ac5 <__ImageBase+0xac5>
 665:	01 26                	add    %esp,(%rsi)
 667:	03 50 03             	add    0x3(%rax),%edx
 66a:	00 00                	add    %al,(%rax)
 66c:	0f 33                	rdpmc  
 66e:	08 00                	or     %al,(%rax)
 670:	00 04 28             	add    %al,(%rax,%rbp,1)
 673:	8c 03                	mov    %es,(%rbx)
 675:	00 00                	add    %al,(%rax)
 677:	06                   	(bad)  
 678:	9e                   	sahf   
 679:	04 00                	add    $0x0,%al
 67b:	00 29                	add    %ch,(%rcx)
 67d:	06                   	(bad)  
 67e:	56                   	push   %rsi
 67f:	00 00                	add    %al,(%rax)
 681:	00 00                	add    %al,(%rax)
 683:	00 05 33 08 00 00    	add    %al,0x833(%rip)        # ebc <__ImageBase+0xebc>
 689:	01 2a                	add    %ebp,(%rdx)
 68b:	03 74 03 00          	add    0x0(%rbx,%rax,1),%esi
 68f:	00 0f                	add    %cl,(%rdi)
 691:	22 08                	and    (%rax),%cl
 693:	00 00                	add    %al,(%rax)
 695:	08 2c b0             	or     %ch,(%rax,%rsi,4)
 698:	03 00                	add    (%rax),%eax
 69a:	00 06                	add    %al,(%rsi)
 69c:	d1 01                	roll   (%rcx)
 69e:	00 00                	add    %al,(%rax)
 6a0:	2d 0e 3f 03 00       	sub    $0x33f0e,%eax
 6a5:	00 00                	add    %al,(%rax)
 6a7:	00 05 22 08 00 00    	add    %al,0x822(%rip)        # ecf <__ImageBase+0xecf>
 6ad:	01 2e                	add    %ebp,(%rsi)
 6af:	03 98 03 00 00 0f    	add    0xf000003(%rax),%ebx
 6b5:	95                   	xchg   %eax,%ebp
 6b6:	03 00                	add    (%rax),%eax
 6b8:	00 10                	add    %dl,(%rax)
 6ba:	30 e0                	xor    %ah,%al
 6bc:	03 00                	add    (%rax),%eax
 6be:	00 06                	add    %al,(%rsi)
 6c0:	d1 01                	roll   (%rcx)
 6c2:	00 00                	add    %al,(%rax)
 6c4:	31 0e                	xor    %ecx,(%rsi)
 6c6:	3f                   	(bad)  
 6c7:	03 00                	add    (%rax),%eax
 6c9:	00 00                	add    %al,(%rax)
 6cb:	06                   	(bad)  
 6cc:	4b 08 00             	rex.WXB or %al,(%r8)
 6cf:	00 32                	add    %dh,(%rdx)
 6d1:	0b c3                	or     %ebx,%eax
 6d3:	00 00                	add    %al,(%rax)
 6d5:	00 08                	add    %cl,(%rax)
 6d7:	00 05 95 03 00 00    	add    %al,0x395(%rip)        # a72 <__ImageBase+0xa72>
 6dd:	01 33                	add    %esi,(%rbx)
 6df:	03 bc 03 00 00 15 10 	add    0x10150000(%rbx,%rax,1),%edi
 6e6:	93                   	xchg   %eax,%ebx
 6e7:	02 19                	add    (%rcx),%bl
 6e9:	04 00                	add    $0x0,%al
 6eb:	00 06                	add    %al,(%rsi)
 6ed:	7b 08                	jnp    6f7 <__ImageBase+0x6f7>
 6ef:	00 00                	add    %al,(%rax)
 6f1:	93                   	xchg   %eax,%ebx
 6f2:	10 a9 00 00 00 00    	adc    %ch,0x0(%rcx)
 6f8:	06                   	(bad)  
 6f9:	73 08                	jae    703 <__ImageBase+0x703>
 6fb:	00 00                	add    %al,(%rax)
 6fd:	93                   	xchg   %eax,%ebx
 6fe:	24 b7                	and    $0xb7,%al
 700:	00 00                	add    %al,(%rax)
 702:	00 08                	add    %cl,(%rax)
 704:	06                   	(bad)  
 705:	cb                   	lret   
 706:	07                   	(bad)  
 707:	00 00                	add    %al,(%rax)
 709:	93                   	xchg   %eax,%ebx
 70a:	35 b7 00 00 00       	xor    $0xb7,%eax
 70f:	09 00                	or     %eax,(%rax)
 711:	15 38 91 13 3a       	adc    $0x3a139138,%eax
 716:	04 00                	add    $0x0,%al
 718:	00 06                	add    %al,(%rsi)
 71a:	6f                   	outsl  %ds:(%rsi),(%dx)
 71b:	03 00                	add    (%rax),%eax
 71d:	00 92 09 db 00 00    	add    %dl,0xdb09(%rdx)
 723:	00 00                	add    %al,(%rax)
 725:	06                   	(bad)  
 726:	24 0a                	and    $0xa,%al
 728:	00 00                	add    %al,(%rax)
 72a:	93                   	xchg   %eax,%ebx
 72b:	45 3f                	rex.RB (bad) 
 72d:	04 00                	add    $0x0,%al
 72f:	00 08                	add    %cl,(%rax)
 731:	00 10                	add    %dl,(%rax)
 733:	19 04 00             	sbb    %eax,(%rax,%rax,1)
 736:	00 1a                	add    %bl,(%rdx)
 738:	ec                   	in     (%dx),%al
 739:	03 00                	add    (%rax),%eax
 73b:	00 4f 04             	add    %cl,0x4(%rdi)
 73e:	00 00                	add    %al,(%rax)
 740:	16                   	(bad)  
 741:	7c 00                	jl     743 <__ImageBase+0x743>
 743:	00 00                	add    %al,(%rax)
 745:	02 00                	add    (%rax),%al
 747:	1b 22                	sbb    (%rdx),%esp
 749:	0a 00                	or     (%rax),%al
 74b:	00 94 3a 04 00 00 09 	add    %dl,0x9000004(%rdx,%rdi,1)
 752:	03 c0                	add    %eax,%eax
 754:	7d 01                	jge    757 <__ImageBase+0x757>
 756:	00 00                	add    %al,(%rax)
 758:	00 00                	add    %al,(%rax)
 75a:	00 15 10 9d 13 84    	add    %dl,-0x7bec62f0(%rip)        # ffffffff8413a470 <_end+0xffffffff8410f460>
 760:	04 00                	add    $0x0,%al
 762:	00 06                	add    %al,(%rsi)
 764:	ea                   	(bad)  
 765:	0a 00                	or     (%rax),%al
 767:	00 9e 09 db 00 00    	add    %bl,0xdb09(%rsi)
 76d:	00 00                	add    %al,(%rax)
 76f:	06                   	(bad)  
 770:	cc                   	int3   
 771:	08 00                	or     %al,(%rax)
 773:	00 9f 0a 89 04 00    	add    %bl,0x4890a(%rdi)
 779:	00 08                	add    %cl,(%rax)
 77b:	00 10                	add    %dl,(%rax)
 77d:	63 04 00             	movsxd (%rax,%rax,1),%eax
 780:	00 1a                	add    %bl,(%rdx)
 782:	b7 00                	mov    $0x0,%bh
 784:	00 00                	add    %al,(%rax)
 786:	9f                   	lahf   
 787:	04 00                	add    $0x0,%al
 789:	00 16                	add    %dl,(%rsi)
 78b:	7c 00                	jl     78d <__ImageBase+0x78d>
 78d:	00 00                	add    %al,(%rax)
 78f:	01 16                	add    %edx,(%rsi)
 791:	7c 00                	jl     793 <__ImageBase+0x793>
 793:	00 00                	add    %al,(%rax)
 795:	02 00                	add    (%rax),%al
 797:	1b c6                	sbb    %esi,%eax
 799:	08 00                	or     %al,(%rax)
 79b:	00 a0 84 04 00 00    	add    %ah,0x484(%rax)
 7a1:	09 03                	or     %eax,(%rbx)
 7a3:	90                   	nop
 7a4:	30 01                	xor    %al,(%rcx)
 7a6:	00 00                	add    %al,(%rax)
 7a8:	00 00                	add    %al,(%rax)
 7aa:	00 0a                	add    %cl,(%rdx)
 7ac:	17                   	(bad)  
 7ad:	02 00                	add    (%rax),%al
 7af:	00 07                	add    %al,(%rdi)
 7b1:	68 15 f0 02 00       	push   $0x2f015
 7b6:	00 ce                	add    %cl,%dh
 7b8:	04 00                	add    $0x0,%al
 7ba:	00 03                	add    %al,(%rbx)
 7bc:	64 00 00             	add    %al,%fs:(%rax)
 7bf:	00 03                	add    %al,(%rbx)
 7c1:	a9 00 00 00 00       	test   $0x0,%eax
 7c6:	0a 49 07             	or     0x7(%rcx),%cl
 7c9:	00 00                	add    %al,(%rax)
 7cb:	08 4d 10             	or     %cl,0x10(%rbp)
 7ce:	03 03                	add    (%rbx),%eax
 7d0:	00 00                	add    %al,(%rax)
 7d2:	f3 04 00             	repz add $0x0,%al
 7d5:	00 03                	add    %al,(%rbx)
 7d7:	a9 00 00 00 03       	test   $0x3000000,%eax
 7dc:	db 00                	fildl  (%rax)
 7de:	00 00                	add    %al,(%rax)
 7e0:	03 f3                	add    %ebx,%esi
 7e2:	04 00                	add    $0x0,%al
 7e4:	00 03                	add    %al,(%rbx)
 7e6:	db 00                	fildl  (%rax)
 7e8:	00 00                	add    %al,(%rax)
 7ea:	00 09                	add    %cl,(%rcx)
 7ec:	f8                   	clc    
 7ed:	04 00                	add    $0x0,%al
 7ef:	00 27                	add    %ah,(%rdi)
 7f1:	1c 76                	sbb    $0x76,%al
 7f3:	07                   	(bad)  
 7f4:	00 00                	add    %al,(%rax)
 7f6:	07                   	(bad)  
 7f7:	4d 0a 99 0a 00 00 07 	rex.WRB or 0x700000a(%r9),%r11b
 7fe:	45 0e                	rex.RB (bad) 
 800:	a9 00 00 00 16       	test   $0x16000000,%eax
 805:	05 00 00 03 db       	add    $0xdb030000,%eax
 80a:	00 00                	add    %al,(%rax)
 80c:	00 00                	add    %al,(%rax)
 80e:	0a aa 02 00 00 09    	or     0x9000002(%rdx),%ch
 814:	35 0c 56 00 00       	xor    $0x560c,%eax
 819:	00 31                	add    %dh,(%rcx)
 81b:	05 00 00 03 f3       	add    $0xf3030000,%eax
 820:	04 00                	add    $0x0,%al
 822:	00 03                	add    %al,(%rbx)
 824:	db 00                	fildl  (%rax)
 826:	00 00                	add    %al,(%rax)
 828:	00 11                	add    %dl,(%rcx)
 82a:	7c 07                	jl     833 <__ImageBase+0x833>
 82c:	00 00                	add    %al,(%rax)
 82e:	0a 61 17             	or     0x17(%rcx),%ah
 831:	43 05 00 00 03 a9    	rex.XB add $0xa9030000,%eax
 837:	00 00                	add    %al,(%rax)
 839:	00 00                	add    %al,(%rax)
 83b:	11 53 02             	adc    %edx,0x2(%rbx)
 83e:	00 00                	add    %al,(%rax)
 840:	0b 12                	or     (%rdx),%edx
 842:	06                   	(bad)  
 843:	5a                   	pop    %rdx
 844:	05 00 00 03 56       	add    $0x56030000,%eax
 849:	00 00                	add    %al,(%rax)
 84b:	00 03                	add    %al,(%rbx)
 84d:	3f                   	(bad)  
 84e:	03 00                	add    (%rax),%eax
 850:	00 00                	add    %al,(%rax)
 852:	0a 7c 04 00          	or     0x0(%rsp,%rax,1),%bh
 856:	00 06                	add    %al,(%rsi)
 858:	4b 16                	rex.WXB (bad) 
 85a:	db 00                	fildl  (%rax)
 85c:	00 00                	add    %al,(%rax)
 85e:	70 05                	jo     865 <__ImageBase+0x865>
 860:	00 00                	add    %al,(%rax)
 862:	03 3f                	add    (%rdi),%edi
 864:	03 00                	add    (%rax),%eax
 866:	00 00                	add    %al,(%rax)
 868:	0a 86 08 00 00 0a    	or     0xa000008(%rsi),%al
 86e:	64 17                	fs (bad) 
 870:	a9 00 00 00 86       	test   $0x86000000,%eax
 875:	05 00 00 03 db       	add    $0xdb030000,%eax
 87a:	00 00                	add    %al,(%rax)
 87c:	00 00                	add    %al,(%rax)
 87e:	11 00                	adc    %eax,(%rax)
 880:	0a 00                	or     (%rax),%al
 882:	00 0b                	add    %cl,(%rbx)
 884:	13 06                	adc    (%rsi),%eax
 886:	98                   	cwtl   
 887:	05 00 00 03 56       	add    $0x56030000,%eax
 88c:	00 00                	add    %al,(%rax)
 88e:	00 00                	add    %al,(%rax)
 890:	11 b8 07 00 00 0b    	adc    %edi,0xb000007(%rax)
 896:	14 06                	adc    $0x6,%al
 898:	aa                   	stos   %al,%es:(%rdi)
 899:	05 00 00 03 56       	add    $0x56030000,%eax
 89e:	00 00                	add    %al,(%rax)
 8a0:	00 00                	add    %al,(%rax)
 8a2:	0a 7d 02             	or     0x2(%rbp),%bh
 8a5:	00 00                	add    %al,(%rax)
 8a7:	08 4c 10 03          	or     %cl,0x3(%rax,%rdx,1)
 8ab:	03 00                	add    (%rax),%eax
 8ad:	00 cf                	add    %cl,%bh
 8af:	05 00 00 03 a9       	add    $0xa9030000,%eax
 8b4:	00 00                	add    %al,(%rax)
 8b6:	00 03                	add    %al,(%rbx)
 8b8:	db 00                	fildl  (%rax)
 8ba:	00 00                	add    %al,(%rax)
 8bc:	03 f3                	add    %ebx,%esi
 8be:	04 00                	add    $0x0,%al
 8c0:	00 03                	add    %al,(%rbx)
 8c2:	db 00                	fildl  (%rax)
 8c4:	00 00                	add    %al,(%rax)
 8c6:	00 1c f5 07 00 00 0c 	add    %bl,0xc000007(,%rsi,8)
 8cd:	29 0a                	sub    %ecx,(%rdx)
 8cf:	50                   	push   %rax
 8d0:	08 00                	or     %al,(%rax)
 8d2:	00 09                	add    %cl,(%rcx)
 8d4:	40 0c 56             	rex or $0x56,%al
 8d7:	00 00                	add    %al,(%rax)
 8d9:	00 f1                	add    %dh,%cl
 8db:	05 00 00 03 f3       	add    $0xf3030000,%eax
 8e0:	04 00                	add    $0x0,%al
 8e2:	00 03                	add    %al,(%rbx)
 8e4:	db 00                	fildl  (%rax)
 8e6:	00 00                	add    %al,(%rax)
 8e8:	00 1d 81 09 00 00    	add    %bl,0x981(%rip)        # 126f <ippcpSetCpuFeatures@plt+0x257>
 8ee:	dc f0                	fdiv   %st,%st(0)
 8f0:	02 00                	add    (%rax),%al
 8f2:	00 ad 42 00 00 00    	add    %ch,0x42(%rbp)
 8f8:	00 00                	add    %al,(%rax)
 8fa:	00 11                	add    %dl,(%rcx)
 8fc:	01 00                	add    %eax,(%rax)
 8fe:	00 00                	add    %al,(%rax)
 900:	00 00                	add    %al,(%rax)
 902:	00 01                	add    %al,(%rcx)
 904:	9c                   	pushf  
 905:	81 07 00 00 12 73    	addl   $0x73120000,(%rdi)
 90b:	74 72                	je     97f <__ImageBase+0x97f>
 90d:	00 dc                	add    %bl,%ah
 90f:	38 3f                	cmp    %bh,(%rdi)
 911:	03 00                	add    (%rax),%eax
 913:	00 b9 00 00 00 b3    	add    %bh,-0x4d000000(%rcx)
 919:	00 00                	add    %al,(%rax)
 91b:	00 12                	add    %dl,(%rdx)
 91d:	61                   	(bad)  
 91e:	00 dc                	add    %bl,%ah
 920:	46 c3                	rex.RX ret 
 922:	00 00                	add    %al,(%rax)
 924:	00 d4                	add    %dl,%ah
 926:	00 00                	add    %al,(%rax)
 928:	00 d2                	add    %dl,%dl
 92a:	00 00                	add    %al,(%rax)
 92c:	00 0b                	add    %cl,(%rbx)
 92e:	92                   	xchg   %eax,%edx
 92f:	0a 00                	or     (%rax),%al
 931:	00 de                	add    %bl,%dh
 933:	0f f0                	(bad)  
 935:	02 00                	add    (%rax),%al
 937:	00 e2                	add    %ah,%dl
 939:	00 00                	add    %al,(%rax)
 93b:	00 dc                	add    %bl,%ah
 93d:	00 00                	add    %al,(%rax)
 93f:	00 0c 3d 05 00 00 df 	add    %cl,-0x20fffffb(,%rdi,1)
 946:	09 db                	or     %ebx,%ebx
 948:	00 00                	add    %al,(%rax)
 94a:	00 17                	add    %dl,(%rdi)
 94c:	6d                   	insl   (%dx),%es:(%rdi)
 94d:	73 00                	jae    94f <__ImageBase+0x94f>
 94f:	e1 1c                	loope  96d <__ImageBase+0x96d>
 951:	81 07 00 00 03 01    	addl   $0x1030000,(%rdi)
 957:	00 00                	add    %al,(%rax)
 959:	fb                   	sti    
 95a:	00 00                	add    %al,(%rax)
 95c:	00 0b                	add    %cl,(%rbx)
 95e:	a3 01 00 00 e2 09 db 	movabs %eax,0xdb09e2000001
 965:	00 00 
 967:	00 2c 01             	add    %ch,(%rcx,%rax,1)
 96a:	00 00                	add    %al,(%rax)
 96c:	22 01                	and    (%rcx),%al
 96e:	00 00                	add    %al,(%rax)
 970:	18 ff                	sbb    %bh,%bh
 972:	03 00                	add    (%rax),%eax
 974:	00 e3                	add    %ah,%bl
 976:	08 a9 00 00 00 02    	or     %ch,0x2000000(%rcx)
 97c:	91                   	xchg   %eax,%ecx
 97d:	48 04 d0             	rex.W add $0xd0,%al
 980:	42 00 00             	rex.X add %al,(%rax)
 983:	00 00                	add    %al,(%rax)
 985:	00 00                	add    %al,(%rax)
 987:	5a                   	pop    %rdx
 988:	05 00 00 9e 06       	add    $0x69e0000,%eax
 98d:	00 00                	add    %al,(%rax)
 98f:	02 01                	add    (%rcx),%al
 991:	55                   	push   %rbp
 992:	02 73 00             	add    0x0(%rbx),%dh
 995:	00 04 ee             	add    %al,(%rsi,%rbp,8)
 998:	42 00 00             	rex.X add %al,(%rax)
 99b:	00 00                	add    %al,(%rax)
 99d:	00 00                	add    %al,(%rax)
 99f:	16                   	(bad)  
 9a0:	05 00 00 bc 06       	add    $0x6bc0000,%eax
 9a5:	00 00                	add    %al,(%rax)
 9a7:	02 01                	add    (%rcx),%al
 9a9:	55                   	push   %rbp
 9aa:	02 73 00             	add    0x0(%rbx),%dh
 9ad:	02 01                	add    (%rcx),%al
 9af:	54                   	push   %rsp
 9b0:	02 7c 00 00          	add    0x0(%rax,%rax,1),%bh
 9b4:	04 12                	add    $0x12,%al
 9b6:	43 00 00             	rex.XB add %al,(%r8)
 9b9:	00 00                	add    %al,(%rax)
 9bb:	00 00                	add    %al,(%rax)
 9bd:	00 05 00 00 d4 06    	add    %al,0x6d40000(%rip)        # 6d409c3 <_end+0x6d159b3>
 9c3:	00 00                	add    %al,(%rax)
 9c5:	02 01                	add    (%rcx),%al
 9c7:	55                   	push   %rbp
 9c8:	02 7d 10             	add    0x10(%rbp),%bh
 9cb:	00 0d 26 43 00 00    	add    %cl,0x4326(%rip)        # 4cf7 <ct_decode+0x897>
 9d1:	00 00                	add    %al,(%rax)
 9d3:	00 00                	add    %al,(%rax)
 9d5:	f9                   	stc    
 9d6:	04 00                	add    $0x0,%al
 9d8:	00 04 55 43 00 00 00 	add    %al,0x43(,%rdx,2)
 9df:	00 00                	add    %al,(%rax)
 9e1:	00 ce                	add    %cl,%dh
 9e3:	04 00                	add    $0x0,%al
 9e5:	00 09                	add    %cl,(%rcx)
 9e7:	07                   	(bad)  
 9e8:	00 00                	add    %al,(%rax)
 9ea:	02 01                	add    (%rcx),%al
 9ec:	55                   	push   %rbp
 9ed:	02 76 00             	add    0x0(%rsi),%dh
 9f0:	02 01                	add    (%rcx),%al
 9f2:	54                   	push   %rsp
 9f3:	01 38                	add    %edi,(%rax)
 9f5:	02 01                	add    (%rcx),%al
 9f7:	51                   	push   %rcx
 9f8:	02 91 48 02 01 52    	add    0x52010248(%rcx),%dl
 9fe:	01 38                	add    %edi,(%rax)
 a00:	00 04 6c             	add    %al,(%rsp,%rbp,2)
 a03:	43 00 00             	rex.XB add %al,(%r8)
 a06:	00 00                	add    %al,(%rax)
 a08:	00 00                	add    %al,(%rax)
 a0a:	ce                   	(bad)  
 a0b:	04 00                	add    $0x0,%al
 a0d:	00 2d 07 00 00 02    	add    %ch,0x2000007(%rip)        # 2000a1a <_end+0x1fd5a0a>
 a13:	01 54 02 7d          	add    %edx,0x7d(%rdx,%rax,1)
 a17:	00 02                	add    %al,(%rdx)
 a19:	01 51 02             	add    %edx,0x2(%rcx)
 a1c:	73 00                	jae    a1e <__ImageBase+0xa1e>
 a1e:	02 01                	add    (%rcx),%al
 a20:	52                   	push   %rdx
 a21:	02 7c 00 00          	add    0x0(%rax,%rax,1),%bh
 a25:	04 95                	add    $0x95,%al
 a27:	43 00 00             	rex.XB add %al,(%r8)
 a2a:	00 00                	add    %al,(%rax)
 a2c:	00 00                	add    %al,(%rax)
 a2e:	ce                   	(bad)  
 a2f:	04 00                	add    $0x0,%al
 a31:	00 56 07             	add    %dl,0x7(%rsi)
 a34:	00 00                	add    %al,(%rax)
 a36:	02 01                	add    (%rcx),%al
 a38:	55                   	push   %rbp
 a39:	02 76 08             	add    0x8(%rsi),%dh
 a3c:	02 01                	add    (%rcx),%al
 a3e:	54                   	push   %rsp
 a3f:	01 38                	add    %edi,(%rax)
 a41:	02 01                	add    (%rcx),%al
 a43:	51                   	push   %rcx
 a44:	03 91 b8 7f 02 01    	add    0x1027fb8(%rcx),%edx
 a4a:	52                   	push   %rdx
 a4b:	01 38                	add    %edi,(%rax)
 a4d:	00 04 a6             	add    %al,(%rsi,%riz,4)
 a50:	43 00 00             	rex.XB add %al,(%r8)
 a53:	00 00                	add    %al,(%rax)
 a55:	00 00                	add    %al,(%rax)
 a57:	b3 04                	mov    $0x4,%bl
 a59:	00 00                	add    %al,(%rax)
 a5b:	73 07                	jae    a64 <__ImageBase+0xa64>
 a5d:	00 00                	add    %al,(%rax)
 a5f:	02 01                	add    (%rcx),%al
 a61:	55                   	push   %rbp
 a62:	01 31                	add    %esi,(%rcx)
 a64:	02 01                	add    (%rcx),%al
 a66:	54                   	push   %rsp
 a67:	02 76 00             	add    0x0(%rsi),%dh
 a6a:	00 0d af 43 00 00    	add    %cl,0x43af(%rip)        # 4e1f <ct_decode+0x9bf>
 a70:	00 00                	add    %al,(%rax)
 a72:	00 00                	add    %al,(%rax)
 a74:	f9                   	stc    
 a75:	04 00                	add    $0x0,%al
 a77:	00 00                	add    %al,(%rax)
 a79:	09 e0                	or     %esp,%eax
 a7b:	03 00                	add    (%rax),%eax
 a7d:	00 1d 3f 00 00 00    	add    %bl,0x3f(%rip)        # ac2 <__ImageBase+0xac2>
 a83:	a9 f0 02 00 00       	test   $0x2f0,%eax
 a88:	c4 41 00 00          	(bad)
 a8c:	00 00                	add    %al,(%rax)
 a8e:	00 00                	add    %al,(%rax)
 a90:	e9 00 00 00 00       	jmp    a95 <__ImageBase+0xa95>
 a95:	00 00                	add    %al,(%rax)
 a97:	00 01                	add    %al,(%rcx)
 a99:	9c                   	pushf  
 a9a:	dc 08                	fmull  (%rax)
 a9c:	00 00                	add    %al,(%rax)
 a9e:	12 73 74             	adc    0x74(%rbx),%dh
 aa1:	72 00                	jb     aa3 <__ImageBase+0xaa3>
 aa3:	a9 30 3f 03 00       	test   $0x33f30,%eax
 aa8:	00 5c 01 00          	add    %bl,0x0(%rcx,%rax,1)
 aac:	00 56 01             	add    %dl,0x1(%rsi)
 aaf:	00 00                	add    %al,(%rax)
 ab1:	0b 92 0a 00 00 ab    	or     -0x54fffff6(%rdx),%edx
 ab7:	0f f0                	(bad)  
 ab9:	02 00                	add    (%rax),%al
 abb:	00 7b 01             	add    %bh,0x1(%rbx)
 abe:	00 00                	add    %al,(%rax)
 ac0:	75 01                	jne    ac3 <__ImageBase+0xac3>
 ac2:	00 00                	add    %al,(%rax)
 ac4:	0c 3d                	or     $0x3d,%al
 ac6:	05 00 00 ac 09       	add    $0x9ac0000,%eax
 acb:	db 00                	fildl  (%rax)
 acd:	00 00                	add    %al,(%rax)
 acf:	17                   	(bad)  
 ad0:	6d                   	insl   (%dx),%es:(%rdi)
 ad1:	73 00                	jae    ad3 <__ImageBase+0xad3>
 ad3:	ae                   	scas   %es:(%rdi),%al
 ad4:	14 dc                	adc    $0xdc,%al
 ad6:	08 00                	or     %al,(%rax)
 ad8:	00 9c 01 00 00 94 01 	add    %bl,0x1940000(%rcx,%rax,1)
 adf:	00 00                	add    %al,(%rax)
 ae1:	0b a3 01 00 00 af    	or     -0x50ffffff(%rbx),%esp
 ae7:	09 db                	or     %ebx,%ebx
 ae9:	00 00                	add    %al,(%rax)
 aeb:	00 c5                	add    %al,%ch
 aed:	01 00                	add    %eax,(%rax)
 aef:	00 bb 01 00 00 18    	add    %bh,0x18000001(%rbx)
 af5:	ff 03                	incl   (%rbx)
 af7:	00 00                	add    %al,(%rax)
 af9:	b0 08                	mov    $0x8,%al
 afb:	a9 00 00 00 02       	test   $0x2000000,%eax
 b00:	91                   	xchg   %eax,%ecx
 b01:	48 04 e1             	rex.W add $0xe1,%al
 b04:	41 00 00             	add    %al,(%r8)
 b07:	00 00                	add    %al,(%rax)
 b09:	00 00                	add    %al,(%rax)
 b0b:	5a                   	pop    %rdx
 b0c:	05 00 00 22 08       	add    $0x8220000,%eax
 b11:	00 00                	add    %al,(%rax)
 b13:	02 01                	add    (%rcx),%al
 b15:	55                   	push   %rbp
 b16:	02 73 00             	add    0x0(%rbx),%dh
 b19:	00 04 ff             	add    %al,(%rdi,%rdi,8)
 b1c:	41 00 00             	add    %al,(%r8)
 b1f:	00 00                	add    %al,(%rax)
 b21:	00 00                	add    %al,(%rax)
 b23:	16                   	(bad)  
 b24:	05 00 00 40 08       	add    $0x8400000,%eax
 b29:	00 00                	add    %al,(%rax)
 b2b:	02 01                	add    (%rcx),%al
 b2d:	55                   	push   %rbp
 b2e:	02 73 00             	add    0x0(%rbx),%dh
 b31:	02 01                	add    (%rcx),%al
 b33:	54                   	push   %rsp
 b34:	02 76 00             	add    0x0(%rsi),%dh
 b37:	00 04 23             	add    %al,(%rbx,%riz,1)
 b3a:	42 00 00             	rex.X add %al,(%rax)
 b3d:	00 00                	add    %al,(%rax)
 b3f:	00 00                	add    %al,(%rax)
 b41:	00 05 00 00 58 08    	add    %al,0x8580000(%rip)        # 8580b47 <_end+0x8555b37>
 b47:	00 00                	add    %al,(%rax)
 b49:	02 01                	add    (%rcx),%al
 b4b:	55                   	push   %rbp
 b4c:	02 7d 08             	add    0x8(%rbp),%bh
 b4f:	00 0d 37 42 00 00    	add    %cl,0x4237(%rip)        # 4d8c <ct_decode+0x92c>
 b55:	00 00                	add    %al,(%rax)
 b57:	00 00                	add    %al,(%rax)
 b59:	f9                   	stc    
 b5a:	04 00                	add    $0x0,%al
 b5c:	00 04 63             	add    %al,(%rbx,%riz,2)
 b5f:	42 00 00             	rex.X add %al,(%rax)
 b62:	00 00                	add    %al,(%rax)
 b64:	00 00                	add    %al,(%rax)
 b66:	ce                   	(bad)  
 b67:	04 00                	add    $0x0,%al
 b69:	00 8d 08 00 00 02    	add    %cl,0x2000008(%rbp)
 b6f:	01 55 02             	add    %edx,0x2(%rbp)
 b72:	7c 00                	jl     b74 <__ImageBase+0xb74>
 b74:	02 01                	add    (%rcx),%al
 b76:	54                   	push   %rsp
 b77:	01 38                	add    %edi,(%rax)
 b79:	02 01                	add    (%rcx),%al
 b7b:	51                   	push   %rcx
 b7c:	02 91 48 02 01 52    	add    0x52010248(%rcx),%dl
 b82:	01 38                	add    %edi,(%rax)
 b84:	00 04 7a             	add    %al,(%rdx,%rdi,2)
 b87:	42 00 00             	rex.X add %al,(%rax)
 b8a:	00 00                	add    %al,(%rax)
 b8c:	00 00                	add    %al,(%rax)
 b8e:	ce                   	(bad)  
 b8f:	04 00                	add    $0x0,%al
 b91:	00 b1 08 00 00 02    	add    %dh,0x2000008(%rcx)
 b97:	01 54 02 7d          	add    %edx,0x7d(%rdx,%rax,1)
 b9b:	00 02                	add    %al,(%rdx)
 b9d:	01 51 02             	add    %edx,0x2(%rcx)
 ba0:	73 00                	jae    ba2 <__ImageBase+0xba2>
 ba2:	02 01                	add    (%rcx),%al
 ba4:	52                   	push   %rdx
 ba5:	02 76 00             	add    0x0(%rsi),%dh
 ba8:	00 04 95 42 00 00 00 	add    %al,0x42(,%rdx,4)
 baf:	00 00                	add    %al,(%rax)
 bb1:	00 b3 04 00 00 ce    	add    %dh,-0x31fffffc(%rbx)
 bb7:	08 00                	or     %al,(%rax)
 bb9:	00 02                	add    %al,(%rdx)
 bbb:	01 55 01             	add    %edx,0x1(%rbp)
 bbe:	30 02                	xor    %al,(%rdx)
 bc0:	01 54 02 7c          	add    %edx,0x7c(%rdx,%rax,1)
 bc4:	00 00                	add    %al,(%rax)
 bc6:	0d 9e 42 00 00       	or     $0x429e,%eax
 bcb:	00 00                	add    %al,(%rax)
 bcd:	00 00                	add    %al,(%rax)
 bcf:	f9                   	stc    
 bd0:	04 00                	add    $0x0,%al
 bd2:	00 00                	add    %al,(%rax)
 bd4:	09 b0 03 00 00 1e    	or     %esi,0x1e000003(%rax)
 bda:	b4 07                	mov    $0x7,%ah
 bdc:	00 00                	add    %al,(%rax)
 bde:	7c f0                	jl     bd0 <__ImageBase+0xbd0>
 be0:	02 00                	add    (%rax),%al
 be2:	00 1b                	add    %bl,(%rbx)
 be4:	09 00                	or     %eax,(%rax)
 be6:	00 1f                	add    %bl,(%rdi)
 be8:	70 6d                	jo     c57 <__ImageBase+0xc57>
 bea:	73 00                	jae    bec <__ImageBase+0xbec>
 bec:	7c 3c                	jl     c2a <__ImageBase+0xc2a>
 bee:	a9 00 00 00 20       	test   $0x20000000,%eax
 bf3:	6d                   	insl   (%dx),%es:(%rdi)
 bf4:	73 00                	jae    bf6 <__ImageBase+0xbf6>
 bf6:	83 1b 1b             	sbbl   $0x1b,(%rbx)
 bf9:	09 00                	or     %eax,(%rax)
 bfb:	00 0c b1             	add    %cl,(%rcx,%rsi,4)
 bfe:	05 00 00 84 1a       	add    $0x1a840000,%eax
 c03:	8c 03                	mov    %es,(%rbx)
 c05:	00 00                	add    %al,(%rax)
 c07:	0c 92                	or     $0x92,%al
 c09:	0a 00                	or     (%rax),%al
 c0b:	00 88 0f f0 02 00    	add    %cl,0x2f00f(%rax)
 c11:	00 00                	add    %al,(%rax)
 c13:	09 8c 03 00 00 1e fc 	or     %ecx,-0x3e20000(%rbx,%rax,1)
 c1a:	09 00                	or     %eax,(%rax)
 c1c:	00 67 f0             	add    %ah,-0x10(%rdi)
 c1f:	02 00                	add    (%rax),%al
 c21:	00 5a 09             	add    %bl,0x9(%rdx)
 c24:	00 00                	add    %al,(%rax)
 c26:	1f                   	(bad)  
 c27:	70 6d                	jo     c96 <__ImageBase+0xc96>
 c29:	73 00                	jae    c2b <__ImageBase+0xc2b>
 c2b:	67 36 a9 00 00 00 20 	addr32 ss test $0x20000000,%eax
 c32:	6d                   	insl   (%dx),%es:(%rdi)
 c33:	73 00                	jae    c35 <__ImageBase+0xc35>
 c35:	6e                   	outsb  %ds:(%rsi),(%dx)
 c36:	15 5a 09 00 00       	adc    $0x95a,%eax
 c3b:	0c b1                	or     $0xb1,%al
 c3d:	05 00 00 6f 14       	add    $0x146f0000,%eax
 c42:	68 03 00 00 0c       	push   $0xc000003
 c47:	92                   	xchg   %eax,%edx
 c48:	0a 00                	or     (%rax),%al
 c4a:	00 73 0f             	add    %dh,0xf(%rbx)
 c4d:	f0 02 00             	lock add (%rax),%al
 c50:	00 00                	add    %al,(%rax)
 c52:	09 68 03             	or     %ebp,0x3(%rax)
 c55:	00 00                	add    %al,(%rax)
 c57:	28 4f 02             	sub    %cl,0x2(%rdi)
 c5a:	00 00                	add    %al,(%rax)
 c5c:	01 35 1f f0 02 00    	add    %esi,0x2f01f(%rip)        # 2fc81 <_end+0x4c71>
 c62:	00 06                	add    %al,(%rsi)
 c64:	40 00 00             	rex add %al,(%rax)
 c67:	00 00                	add    %al,(%rax)
 c69:	00 00                	add    %al,(%rax)
 c6b:	fa                   	cli    
 c6c:	00 00                	add    %al,(%rax)
 c6e:	00 00                	add    %al,(%rax)
 c70:	00 00                	add    %al,(%rax)
 c72:	00 01                	add    %al,(%rcx)
 c74:	9c                   	pushf  
 c75:	fc                   	cld    
 c76:	0a 00                	or     (%rax),%al
 c78:	00 12                	add    %dl,(%rdx)
 c7a:	70 6d                	jo     ce9 <__ImageBase+0xce9>
 c7c:	73 00                	jae    c7e <__ImageBase+0xc7e>
 c7e:	35 35 a9 00 00       	xor    $0xa935,%eax
 c83:	00 fd                	add    %bh,%ch
 c85:	01 00                	add    %eax,(%rax)
 c87:	00 ef                	add    %ch,%bh
 c89:	01 00                	add    %eax,(%rax)
 c8b:	00 17                	add    %dl,(%rdi)
 c8d:	6d                   	insl   (%dx),%es:(%rdi)
 c8e:	73 00                	jae    c90 <__ImageBase+0xc90>
 c90:	3c 14                	cmp    $0x14,%al
 c92:	fc                   	cld    
 c93:	0a 00                	or     (%rax),%al
 c95:	00 35 02 00 00 2d    	add    %dh,0x2d000002(%rip)        # 2d000c9d <_end+0x2cfd5c8d>
 c9b:	02 00                	add    (%rax),%al
 c9d:	00 18                	add    %bl,(%rax)
 c9f:	b1 05                	mov    $0x5,%cl
 ca1:	00 00                	add    %al,(%rax)
 ca3:	3d 13 44 03 00       	cmp    $0x34413,%eax
 ca8:	00 03                	add    %al,(%rbx)
 caa:	91                   	xchg   %eax,%ecx
 cab:	b8 7f 0b 92 0a       	mov    $0xa920b7f,%eax
 cb0:	00 00                	add    %al,(%rax)
 cb2:	41 0f f0             	rex.B (bad) 
 cb5:	02 00                	add    (%rax),%al
 cb7:	00 55 02             	add    %dl,0x2(%rbp)
 cba:	00 00                	add    %al,(%rax)
 cbc:	53                   	push   %rbx
 cbd:	02 00                	add    (%rax),%al
 cbf:	00 0b                	add    %cl,(%rbx)
 cc1:	7b 06                	jnp    cc9 <__ImageBase+0xcc9>
 cc3:	00 00                	add    %al,(%rax)
 cc5:	42 0e                	rex.X (bad) 
 cc7:	3f                   	(bad)  
 cc8:	03 00                	add    (%rax),%eax
 cca:	00 5f 02             	add    %bl,0x2(%rdi)
 ccd:	00 00                	add    %al,(%rax)
 ccf:	5d                   	pop    %rbp
 cd0:	02 00                	add    (%rax),%al
 cd2:	00 0b                	add    %cl,(%rbx)
 cd4:	86 02                	xchg   %al,(%rdx)
 cd6:	00 00                	add    %al,(%rax)
 cd8:	43 09 db             	rex.XB or %ebx,%r11d
 cdb:	00 00                	add    %al,(%rax)
 cdd:	00 68 02             	add    %ch,0x2(%rax)
 ce0:	00 00                	add    %al,(%rax)
 ce2:	66 02 00             	data16 add (%rax),%al
 ce5:	00 0b                	add    %cl,(%rbx)
 ce7:	46 05 00 00 44 08    	rex.RX add $0x8440000,%eax
 ced:	01 0b                	add    %ecx,(%rbx)
 cef:	00 00                	add    %al,(%rax)
 cf1:	75 02                	jne    cf5 <__ImageBase+0xcf5>
 cf3:	00 00                	add    %al,(%rax)
 cf5:	6f                   	outsl  %ds:(%rsi),(%dx)
 cf6:	02 00                	add    (%rax),%al
 cf8:	00 29                	add    %ch,(%rcx)
 cfa:	65 72 72             	gs jb  d6f <__ImageBase+0xd6f>
 cfd:	00 01                	add    %al,(%rcx)
 cff:	62 01 e5 40 00       	(bad)
 d04:	00 00                	add    %al,(%rax)
 d06:	00 00                	add    %al,(%rax)
 d08:	00 04 31             	add    %al,(%rcx,%rsi,1)
 d0b:	40 00 00             	rex add %al,(%rax)
 d0e:	00 00                	add    %al,(%rax)
 d10:	00 00                	add    %al,(%rax)
 d12:	d6                   	(bad)  
 d13:	05 00 00 2e 0a       	add    $0xa2e0000,%eax
 d18:	00 00                	add    %al,(%rax)
 d1a:	02 01                	add    (%rcx),%al
 d1c:	55                   	push   %rbp
 d1d:	02 73 00             	add    0x0(%rbx),%dh
 d20:	02 01                	add    (%rcx),%al
 d22:	54                   	push   %rsp
 d23:	01 48 00             	add    %ecx,0x0(%rax)
 d26:	04 55                	add    $0x55,%al
 d28:	40 00 00             	rex add %al,(%rax)
 d2b:	00 00                	add    %al,(%rax)
 d2d:	00 00                	add    %al,(%rax)
 d2f:	aa                   	stos   %al,%es:(%rdi)
 d30:	05 00 00 57 0a       	add    $0xa570000,%eax
 d35:	00 00                	add    %al,(%rax)
 d37:	02 01                	add    (%rcx),%al
 d39:	55                   	push   %rbp
 d3a:	03 91 b8 7f 02 01    	add    0x1027fb8(%rcx),%edx
 d40:	54                   	push   %rsp
 d41:	01 48 02             	add    %ecx,0x2(%rax)
 d44:	01 51 02             	add    %edx,0x2(%rcx)
 d47:	73 00                	jae    d49 <__ImageBase+0xd49>
 d49:	02 01                	add    (%rcx),%al
 d4b:	52                   	push   %rdx
 d4c:	01 48 00             	add    %ecx,0x0(%rax)
 d4f:	04 88                	add    $0x88,%al
 d51:	40 00 00             	rex add %al,(%rax)
 d54:	00 00                	add    %al,(%rax)
 d56:	00 00                	add    %al,(%rax)
 d58:	d6                   	(bad)  
 d59:	05 00 00 75 0a       	add    $0xa750000,%eax
 d5e:	00 00                	add    %al,(%rax)
 d60:	02 01                	add    (%rcx),%al
 d62:	55                   	push   %rbp
 d63:	02 7d 00             	add    0x0(%rbp),%bh
 d66:	02 01                	add    (%rcx),%al
 d68:	54                   	push   %rsp
 d69:	02 76 00             	add    0x0(%rsi),%dh
 d6c:	00 04 9c             	add    %al,(%rsp,%rbx,4)
 d6f:	40 00 00             	rex add %al,(%rax)
 d72:	00 00                	add    %al,(%rax)
 d74:	00 00                	add    %al,(%rax)
 d76:	70 05                	jo     d7d <__ImageBase+0xd7d>
 d78:	00 00                	add    %al,(%rax)
 d7a:	8d 0a                	lea    (%rdx),%ecx
 d7c:	00 00                	add    %al,(%rax)
 d7e:	02 01                	add    (%rcx),%al
 d80:	55                   	push   %rbp
 d81:	02 76 00             	add    0x0(%rsi),%dh
 d84:	00 04 b5 40 00 00 00 	add    %al,0x40(,%rsi,4)
 d8b:	00 00                	add    %al,(%rax)
 d8d:	00 aa 05 00 00 b7    	add    %ch,-0x48fffffb(%rdx)
 d93:	0a 00                	or     (%rax),%al
 d95:	00 02                	add    %al,(%rdx)
 d97:	01 55 02             	add    %edx,0x2(%rbp)
 d9a:	73 00                	jae    d9c <__ImageBase+0xd9c>
 d9c:	02 01                	add    (%rcx),%al
 d9e:	54                   	push   %rsp
 d9f:	02 76 00             	add    0x0(%rsi),%dh
 da2:	02 01                	add    (%rcx),%al
 da4:	51                   	push   %rcx
 da5:	02 7d 00             	add    0x0(%rbp),%bh
 da8:	02 01                	add    (%rcx),%al
 daa:	52                   	push   %rdx
 dab:	02 76 00             	add    0x0(%rsi),%dh
 dae:	00 04 c6             	add    %al,(%rsi,%rax,8)
 db1:	40 00 00             	rex add %al,(%rax)
 db4:	00 00                	add    %al,(%rax)
 db6:	00 00                	add    %al,(%rax)
 db8:	5a                   	pop    %rdx
 db9:	05 00 00 cf 0a       	add    $0xacf0000,%eax
 dbe:	00 00                	add    %al,(%rax)
 dc0:	02 01                	add    (%rcx),%al
 dc2:	55                   	push   %rbp
 dc3:	02 73 00             	add    0x0(%rbx),%dh
 dc6:	00 04 e5 40 00 00 00 	add    %al,0x40(,%riz,8)
 dcd:	00 00                	add    %al,(%rax)
 dcf:	00 43 05             	add    %al,0x5(%rbx)
 dd2:	00 00                	add    %al,(%rax)
 dd4:	e7 0a                	out    %eax,$0xa
 dd6:	00 00                	add    %al,(%rax)
 dd8:	02 01                	add    (%rcx),%al
 dda:	54                   	push   %rsp
 ddb:	02 73 00             	add    0x0(%rbx),%dh
 dde:	00 19                	add    %bl,(%rcx)
 de0:	f2 40 00 00          	repnz rex add %al,(%rax)
 de4:	00 00                	add    %al,(%rax)
 de6:	00 00                	add    %al,(%rax)
 de8:	31 05 00 00 02 01    	xor    %eax,0x1020000(%rip)        # 1020dee <_end+0xff5dde>
 dee:	55                   	push   %rbp
 def:	02 73 00             	add    0x0(%rbx),%dh
 df2:	00 00                	add    %al,(%rax)
 df4:	09 44 03 00          	or     %eax,0x0(%rbx,%rax,1)
 df8:	00 09                	add    %cl,(%rcx)
 dfa:	ab                   	stos   %eax,%es:(%rdi)
 dfb:	00 00                	add    %al,(%rax)
 dfd:	00 2a                	add    %ch,(%rdx)
 dff:	e1 08                	loope  e09 <__ImageBase+0xe09>
 e01:	00 00                	add    %al,(%rax)
 e03:	00 41 00             	add    %al,0x0(%rcx)
 e06:	00 00                	add    %al,(%rax)
 e08:	00 00                	add    %al,(%rax)
 e0a:	00 62 00             	add    %ah,0x0(%rdx)
 e0d:	00 00                	add    %al,(%rax)
 e0f:	00 00                	add    %al,(%rax)
 e11:	00 00                	add    %al,(%rax)
 e13:	01 9c df 0b 00 00 13 	add    %ebx,0x1300000b(%rdi,%rbx,8)
 e1a:	ef                   	out    %eax,(%dx)
 e1b:	08 00                	or     %al,(%rax)
 e1d:	00 93 02 00 00 8b    	add    %dl,-0x74fffffe(%rbx)
 e23:	02 00                	add    (%rax),%al
 e25:	00 0e                	add    %cl,(%rsi)
 e27:	fa                   	cli    
 e28:	08 00                	or     %al,(%rax)
 e2a:	00 0e                	add    %cl,(%rsi)
 e2c:	04 09                	add    $0x9,%al
 e2e:	00 00                	add    %al,(%rax)
 e30:	0e                   	(bad)  
 e31:	0f 09                	wbinvd 
 e33:	00 00                	add    %al,(%rax)
 e35:	21 e1                	and    %esp,%ecx
 e37:	08 00                	or     %al,(%rax)
 e39:	00 26                	add    %ah,(%rsi)
 e3b:	41 00 00             	add    %al,(%r8)
 e3e:	00 00                	add    %al,(%rax)
 e40:	00 00                	add    %al,(%rax)
 e42:	00 26                	add    %ah,(%rsi)
 e44:	41 00 00             	add    %al,(%r8)
 e47:	00 00                	add    %al,(%rax)
 e49:	00 00                	add    %al,(%rax)
 e4b:	30 00                	xor    %al,(%rax)
 e4d:	00 00                	add    %al,(%rax)
 e4f:	00 00                	add    %al,(%rax)
 e51:	00 00                	add    %al,(%rax)
 e53:	7c c5                	jl     e1a <__ImageBase+0xe1a>
 e55:	0b 00                	or     (%rax),%eax
 e57:	00 13                	add    %dl,(%rbx)
 e59:	ef                   	out    %eax,(%dx)
 e5a:	08 00                	or     %al,(%rax)
 e5c:	00 b5 02 00 00 b3    	add    %dh,-0x4cfffffe(%rbp)
 e62:	02 00                	add    (%rax),%al
 e64:	00 14 fa             	add    %dl,(%rdx,%rdi,8)
 e67:	08 00                	or     %al,(%rax)
 e69:	00 bf 02 00 00 bd    	add    %bh,-0x42fffffe(%rdi)
 e6f:	02 00                	add    (%rax),%al
 e71:	00 22                	add    %ah,(%rdx)
 e73:	04 09                	add    $0x9,%al
 e75:	00 00                	add    %al,(%rax)
 e77:	02 91 6c 14 0f 09    	add    0x90f146c(%rcx),%dl
 e7d:	00 00                	add    %al,(%rax)
 e7f:	c9                   	leave  
 e80:	02 00                	add    (%rax),%al
 e82:	00 c7                	add    %al,%bh
 e84:	02 00                	add    (%rax),%al
 e86:	00 04 40             	add    %al,(%rax,%rax,2)
 e89:	41 00 00             	add    %al,(%r8)
 e8c:	00 00                	add    %al,(%rax)
 e8e:	00 00                	add    %al,(%rax)
 e90:	aa                   	stos   %al,%es:(%rdi)
 e91:	05 00 00 b7 0b       	add    $0xbb70000,%eax
 e96:	00 00                	add    %al,(%rax)
 e98:	02 01                	add    (%rcx),%al
 e9a:	55                   	push   %rbp
 e9b:	02 91 6c 02 01 54    	add    0x5401026c(%rcx),%dl
 ea1:	01 34 02             	add    %esi,(%rdx,%rax,1)
 ea4:	01 51 02             	add    %edx,0x2(%rcx)
 ea7:	73 00                	jae    ea9 <__ImageBase+0xea9>
 ea9:	02 01                	add    (%rcx),%al
 eab:	52                   	push   %rdx
 eac:	01 34 00             	add    %esi,(%rax,%rax,1)
 eaf:	0d 54 41 00 00       	or     $0x4154,%eax
 eb4:	00 00                	add    %al,(%rax)
 eb6:	00 00                	add    %al,(%rax)
 eb8:	98                   	cwtl   
 eb9:	05 00 00 00 19       	add    $0x19000000,%eax
 ebe:	1b 41 00             	sbb    0x0(%rcx),%eax
 ec1:	00 00                	add    %al,(%rax)
 ec3:	00 00                	add    %al,(%rax)
 ec5:	00 d6                	add    %dl,%dh
 ec7:	05 00 00 02 01       	add    $0x1020000,%eax
 ecc:	55                   	push   %rbp
 ecd:	02 73 00             	add    0x0(%rbx),%dh
 ed0:	02 01                	add    (%rcx),%al
 ed2:	54                   	push   %rsp
 ed3:	01 34 00             	add    %esi,(%rax,%rax,1)
 ed6:	00 2b                	add    %ch,(%rbx)
 ed8:	20 09                	and    %cl,(%rcx)
 eda:	00 00                	add    %al,(%rax)
 edc:	62 41                	(bad)  
 ede:	00 00                	add    %al,(%rax)
 ee0:	00 00                	add    %al,(%rax)
 ee2:	00 00                	add    %al,(%rax)
 ee4:	62                   	(bad)  
 ee5:	00 00                	add    %al,(%rax)
 ee7:	00 00                	add    %al,(%rax)
 ee9:	00 00                	add    %al,(%rax)
 eeb:	00 01                	add    %al,(%rcx)
 eed:	9c                   	pushf  
 eee:	13 2e                	adc    (%rsi),%ebp
 ef0:	09 00                	or     %eax,(%rax)
 ef2:	00 da                	add    %bl,%dl
 ef4:	02 00                	add    (%rax),%al
 ef6:	00 d2                	add    %dl,%dl
 ef8:	02 00                	add    (%rax),%al
 efa:	00 0e                	add    %cl,(%rsi)
 efc:	39 09                	cmp    %ecx,(%rcx)
 efe:	00 00                	add    %al,(%rax)
 f00:	0e                   	(bad)  
 f01:	43 09 00             	rex.XB or %eax,(%r8)
 f04:	00 0e                	add    %cl,(%rsi)
 f06:	4e 09 00             	rex.WRX or %r8,(%rax)
 f09:	00 21                	add    %ah,(%rcx)
 f0b:	20 09                	and    %cl,(%rcx)
 f0d:	00 00                	add    %al,(%rax)
 f0f:	88 41 00             	mov    %al,0x0(%rcx)
 f12:	00 00                	add    %al,(%rax)
 f14:	00 00                	add    %al,(%rax)
 f16:	00 00                	add    %al,(%rax)
 f18:	88 41 00             	mov    %al,0x0(%rcx)
 f1b:	00 00                	add    %al,(%rax)
 f1d:	00 00                	add    %al,(%rax)
 f1f:	00 30                	add    %dh,(%rax)
 f21:	00 00                	add    %al,(%rax)
 f23:	00 00                	add    %al,(%rax)
 f25:	00 00                	add    %al,(%rax)
 f27:	00 67 9a             	add    %ah,-0x66(%rdi)
 f2a:	0c 00                	or     $0x0,%al
 f2c:	00 13                	add    %dl,(%rbx)
 f2e:	2e 09 00             	cs or  %eax,(%rax)
 f31:	00 fc                	add    %bh,%ah
 f33:	02 00                	add    (%rax),%al
 f35:	00 fa                	add    %bh,%dl
 f37:	02 00                	add    (%rax),%al
 f39:	00 14 39             	add    %dl,(%rcx,%rdi,1)
 f3c:	09 00                	or     %eax,(%rax)
 f3e:	00 06                	add    %al,(%rsi)
 f40:	03 00                	add    (%rax),%eax
 f42:	00 04 03             	add    %al,(%rbx,%rax,1)
 f45:	00 00                	add    %al,(%rax)
 f47:	22 43 09             	and    0x9(%rbx),%al
 f4a:	00 00                	add    %al,(%rax)
 f4c:	02 91 6c 14 4e 09    	add    0x94e146c(%rcx),%dl
 f52:	00 00                	add    %al,(%rax)
 f54:	10 03                	adc    %al,(%rbx)
 f56:	00 00                	add    %al,(%rax)
 f58:	0e                   	(bad)  
 f59:	03 00                	add    (%rax),%eax
 f5b:	00 04 a2             	add    %al,(%rdx,%riz,4)
 f5e:	41 00 00             	add    %al,(%r8)
 f61:	00 00                	add    %al,(%rax)
 f63:	00 00                	add    %al,(%rax)
 f65:	aa                   	stos   %al,%es:(%rdi)
 f66:	05 00 00 8c 0c       	add    $0xc8c0000,%eax
 f6b:	00 00                	add    %al,(%rax)
 f6d:	02 01                	add    (%rcx),%al
 f6f:	55                   	push   %rbp
 f70:	02 91 6c 02 01 54    	add    0x5401026c(%rcx),%dl
 f76:	01 34 02             	add    %esi,(%rdx,%rax,1)
 f79:	01 51 02             	add    %edx,0x2(%rcx)
 f7c:	73 00                	jae    f7e <__ImageBase+0xf7e>
 f7e:	02 01                	add    (%rcx),%al
 f80:	52                   	push   %rdx
 f81:	01 34 00             	add    %esi,(%rax,%rax,1)
 f84:	0d b6 41 00 00       	or     $0x41b6,%eax
 f89:	00 00                	add    %al,(%rax)
 f8b:	00 00                	add    %al,(%rax)
 f8d:	86 05 00 00 00 19    	xchg   %al,0x19000000(%rip)        # 19000f93 <_end+0x18fd5f83>
 f93:	7d 41                	jge    fd6 <__ImageBase+0xfd6>
 f95:	00 00                	add    %al,(%rax)
 f97:	00 00                	add    %al,(%rax)
 f99:	00 00                	add    %al,(%rax)
 f9b:	d6                   	(bad)  
 f9c:	05 00 00 02 01       	add    $0x1020000,%eax
 fa1:	55                   	push   %rbp
 fa2:	02 73 00             	add    0x0(%rbx),%dh
 fa5:	02 01                	add    (%rcx),%al
 fa7:	54                   	push   %rsp
 fa8:	01 34 00             	add    %esi,(%rax,%rax,1)
	...

Disassembly of section .debug_abbrev:

0000000000000000 <.debug_abbrev>:
   0:	01 24 00             	add    %esp,(%rax,%rax,1)
   3:	0b 0b                	or     (%rbx),%ecx
   5:	3e 0b 03             	ds or  (%rbx),%eax
   8:	0e                   	(bad)  
   9:	00 00                	add    %al,(%rax)
   b:	02 18                	add    (%rax),%bl
   d:	00 00                	add    %al,(%rax)
   f:	00 03                	add    %al,(%rbx)
  11:	2e 01 3f             	cs add %edi,(%rdi)
  14:	19 03                	sbb    %eax,(%rbx)
  16:	0e                   	(bad)  
  17:	3a 21                	cmp    (%rcx),%ah
  19:	01 3b                	add    %edi,(%rbx)
  1b:	21 14 39             	and    %edx,(%rcx,%rdi,1)
  1e:	21 0d 49 13 3c 19    	and    %ecx,0x193c1349(%rip)        # 193c136d <_end+0x1939635d>
  24:	01 13                	add    %edx,(%rbx)
  26:	00 00                	add    %al,(%rax)
  28:	04 0b                	add    $0xb,%al
  2a:	01 11                	add    %edx,(%rcx)
  2c:	01 12                	add    %edx,(%rdx)
  2e:	07                   	(bad)  
  2f:	01 13                	add    %edx,(%rbx)
  31:	00 00                	add    %al,(%rax)
  33:	05 34 00 03 0e       	add    $0xe030034,%eax
  38:	3a 21                	cmp    (%rcx),%ah
  3a:	01 3b                	add    %edi,(%rbx)
  3c:	0b 39                	or     (%rcx),%edi
  3e:	0b 49 13             	or     0x13(%rcx),%ecx
  41:	3f                   	(bad)  
  42:	19 02                	sbb    %eax,(%rdx)
  44:	18 00                	sbb    %al,(%rax)
  46:	00 06                	add    %al,(%rsi)
  48:	05 00 03 0e 3a       	add    $0x3a0e0300,%eax
  4d:	21 01                	and    %eax,(%rcx)
  4f:	3b 0b                	cmp    (%rbx),%ecx
  51:	39 0b                	cmp    %ecx,(%rbx)
  53:	49 13 02             	adc    (%r10),%rax
  56:	17                   	(bad)  
  57:	b7 42                	mov    $0x42,%bh
  59:	17                   	(bad)  
  5a:	00 00                	add    %al,(%rax)
  5c:	07                   	(bad)  
  5d:	49 00 02             	rex.WB add %al,(%r10)
  60:	18 7e 18             	sbb    %bh,0x18(%rsi)
  63:	00 00                	add    %al,(%rax)
  65:	08 0f                	or     %cl,(%rdi)
  67:	00 0b                	add    %cl,(%rbx)
  69:	21 08                	and    %ecx,(%rax)
  6b:	49 13 00             	adc    (%r8),%rax
  6e:	00 09                	add    %cl,(%rcx)
  70:	05 00 49 13 00       	add    $0x134900,%eax
  75:	00 0a                	add    %cl,(%rdx)
  77:	2e 01 3f             	cs add %edi,(%rdi)
  7a:	19 03                	sbb    %eax,(%rbx)
  7c:	0e                   	(bad)  
  7d:	3a 21                	cmp    (%rcx),%ah
  7f:	01 3b                	add    %edi,(%rbx)
  81:	0b 39                	or     (%rcx),%edi
  83:	21 06                	and    %eax,(%rsi)
  85:	27                   	(bad)  
  86:	19 11                	sbb    %edx,(%rcx)
  88:	01 12                	add    %edx,(%rdx)
  8a:	07                   	(bad)  
  8b:	40 18 7a 19          	sbb    %dil,0x19(%rdx)
  8f:	01 13                	add    %edx,(%rbx)
  91:	00 00                	add    %al,(%rax)
  93:	0b 2e                	or     (%rsi),%ebp
  95:	01 3f                	add    %edi,(%rdi)
  97:	19 03                	sbb    %eax,(%rbx)
  99:	0e                   	(bad)  
  9a:	3a 21                	cmp    (%rcx),%ah
  9c:	01 3b                	add    %edi,(%rbx)
  9e:	21 14 39             	and    %edx,(%rcx,%rdi,1)
  a1:	21 0d 49 13 3c 19    	and    %ecx,0x193c1349(%rip)        # 193c13f0 <_end+0x193963e0>
  a7:	00 00                	add    %al,(%rax)
  a9:	0c 0b                	or     $0xb,%al
  ab:	01 11                	add    %edx,(%rcx)
  ad:	01 12                	add    %edx,(%rdx)
  af:	07                   	(bad)  
  b0:	00 00                	add    %al,(%rax)
  b2:	0d 48 00 7d 01       	or     $0x17d0048,%eax
  b7:	82                   	(bad)  
  b8:	01 19                	add    %ebx,(%rcx)
  ba:	7f 13                	jg     cf <__ImageBase+0xcf>
  bc:	00 00                	add    %al,(%rax)
  be:	0e                   	(bad)  
  bf:	48 01 7d 01          	add    %rdi,0x1(%rbp)
  c3:	7f 13                	jg     d8 <__ImageBase+0xd8>
  c5:	00 00                	add    %al,(%rax)
  c7:	0f 11 01             	movups %xmm0,(%rcx)
  ca:	25 0e 13 0b 03       	and    $0x30b130e,%eax
  cf:	1f                   	(bad)  
  d0:	1b 1f                	sbb    (%rdi),%ebx
  d2:	11 01                	adc    %eax,(%rcx)
  d4:	12 07                	adc    (%rdi),%al
  d6:	10 17                	adc    %dl,(%rdi)
  d8:	00 00                	add    %al,(%rax)
  da:	10 24 00             	adc    %ah,(%rax,%rax,1)
  dd:	0b 0b                	or     (%rbx),%ecx
  df:	3e 0b 03             	ds or  (%rbx),%eax
  e2:	08 00                	or     %al,(%rax)
  e4:	00 11                	add    %dl,(%rcx)
  e6:	26 00 49 13          	es add %cl,0x13(%rcx)
  ea:	00 00                	add    %al,(%rax)
  ec:	12 2e                	adc    (%rsi),%ch
  ee:	01 3f                	add    %edi,(%rdi)
  f0:	19 03                	sbb    %eax,(%rbx)
  f2:	0e                   	(bad)  
  f3:	3a 0b                	cmp    (%rbx),%cl
  f5:	3b 0b                	cmp    (%rbx),%ecx
  f7:	39 0b                	cmp    %ecx,(%rbx)
  f9:	27                   	(bad)  
  fa:	19 49 13             	sbb    %ecx,0x13(%rcx)
  fd:	3c 19                	cmp    $0x19,%al
  ff:	01 13                	add    %edx,(%rbx)
 101:	00 00                	add    %al,(%rax)
 103:	13 48 01             	adc    0x1(%rax),%ecx
 106:	7d 01                	jge    109 <__ImageBase+0x109>
 108:	82                   	(bad)  
 109:	01 19                	add    %ebx,(%rcx)
 10b:	7f 13                	jg     120 <__ImageBase+0x120>
 10d:	00 00                	add    %al,(%rax)
 10f:	14 2e                	adc    $0x2e,%al
 111:	01 3f                	add    %edi,(%rdi)
 113:	19 03                	sbb    %eax,(%rbx)
 115:	0e                   	(bad)  
 116:	3a 0b                	cmp    (%rbx),%cl
 118:	3b 0b                	cmp    (%rbx),%ecx
 11a:	39 0b                	cmp    %ecx,(%rbx)
 11c:	27                   	(bad)  
 11d:	19 11                	sbb    %edx,(%rcx)
 11f:	01 12                	add    %edx,(%rdx)
 121:	07                   	(bad)  
 122:	40 18 7a 19          	sbb    %dil,0x19(%rdx)
 126:	00 00                	add    %al,(%rax)
 128:	15 05 00 03 08       	adc    $0x8030005,%eax
 12d:	3a 0b                	cmp    (%rbx),%cl
 12f:	3b 0b                	cmp    (%rbx),%ecx
 131:	39 0b                	cmp    %ecx,(%rbx)
 133:	49 13 02             	adc    (%r10),%rax
 136:	17                   	(bad)  
 137:	b7 42                	mov    $0x42,%bh
 139:	17                   	(bad)  
 13a:	00 00                	add    %al,(%rax)
 13c:	00 01                	add    %al,(%rcx)
 13e:	11 00                	adc    %eax,(%rax)
 140:	10 17                	adc    %dl,(%rdi)
 142:	11 01                	adc    %eax,(%rcx)
 144:	12 0f                	adc    (%rdi),%cl
 146:	03 0e                	add    (%rsi),%ecx
 148:	1b 0e                	sbb    (%rsi),%ecx
 14a:	25 0e 13 05 00       	and    $0x5130e,%eax
 14f:	00 00                	add    %al,(%rax)
 151:	01 28                	add    %ebp,(%rax)
 153:	00 03                	add    %al,(%rbx)
 155:	0e                   	(bad)  
 156:	1c 05                	sbb    $0x5,%al
 158:	00 00                	add    %al,(%rax)
 15a:	02 49 00             	add    0x0(%rcx),%cl
 15d:	02 18                	add    (%rax),%bl
 15f:	7e 18                	jle    179 <__ImageBase+0x179>
 161:	00 00                	add    %al,(%rax)
 163:	03 05 00 49 13 00    	add    0x134900(%rip),%eax        # 134a69 <_end+0x109a59>
 169:	00 04 48             	add    %al,(%rax,%rcx,2)
 16c:	01 7d 01             	add    %edi,0x1(%rbp)
 16f:	7f 13                	jg     184 <__ImageBase+0x184>
 171:	01 13                	add    %edx,(%rbx)
 173:	00 00                	add    %al,(%rax)
 175:	05 16 00 03 0e       	add    $0xe030016,%eax
 17a:	3a 0b                	cmp    (%rbx),%cl
 17c:	3b 0b                	cmp    (%rbx),%ecx
 17e:	39 0b                	cmp    %ecx,(%rbx)
 180:	49 13 00             	adc    (%r8),%rax
 183:	00 06                	add    %al,(%rsi)
 185:	0d 00 03 0e 3a       	or     $0x3a0e0300,%eax
 18a:	21 01                	and    %eax,(%rcx)
 18c:	3b 0b                	cmp    (%rbx),%ecx
 18e:	39 0b                	cmp    %ecx,(%rbx)
 190:	49 13 38             	adc    (%r8),%rdi
 193:	0b 00                	or     (%rax),%eax
 195:	00 07                	add    %al,(%rdi)
 197:	24 00                	and    $0x0,%al
 199:	0b 0b                	or     (%rbx),%ecx
 19b:	3e 0b 03             	ds or  (%rbx),%eax
 19e:	0e                   	(bad)  
 19f:	00 00                	add    %al,(%rax)
 1a1:	08 28                	or     %ch,(%rax)
 1a3:	00 03                	add    %al,(%rbx)
 1a5:	0e                   	(bad)  
 1a6:	1c 0b                	sbb    $0xb,%al
 1a8:	00 00                	add    %al,(%rax)
 1aa:	09 0f                	or     %ecx,(%rdi)
 1ac:	00 0b                	add    %cl,(%rbx)
 1ae:	21 08                	and    %ecx,(%rax)
 1b0:	49 13 00             	adc    (%r8),%rax
 1b3:	00 0a                	add    %cl,(%rdx)
 1b5:	2e 01 3f             	cs add %edi,(%rdi)
 1b8:	19 03                	sbb    %eax,(%rbx)
 1ba:	0e                   	(bad)  
 1bb:	3a 0b                	cmp    (%rbx),%cl
 1bd:	3b 0b                	cmp    (%rbx),%ecx
 1bf:	39 0b                	cmp    %ecx,(%rbx)
 1c1:	27                   	(bad)  
 1c2:	19 49 13             	sbb    %ecx,0x13(%rcx)
 1c5:	3c 19                	cmp    $0x19,%al
 1c7:	01 13                	add    %edx,(%rbx)
 1c9:	00 00                	add    %al,(%rax)
 1cb:	0b 34 00             	or     (%rax,%rax,1),%esi
 1ce:	03 0e                	add    (%rsi),%ecx
 1d0:	3a 21                	cmp    (%rcx),%ah
 1d2:	01 3b                	add    %edi,(%rbx)
 1d4:	0b 39                	or     (%rcx),%edi
 1d6:	0b 49 13             	or     0x13(%rcx),%ecx
 1d9:	02 17                	add    (%rdi),%dl
 1db:	b7 42                	mov    $0x42,%bh
 1dd:	17                   	(bad)  
 1de:	00 00                	add    %al,(%rax)
 1e0:	0c 34                	or     $0x34,%al
 1e2:	00 03                	add    %al,(%rbx)
 1e4:	0e                   	(bad)  
 1e5:	3a 21                	cmp    (%rcx),%ah
 1e7:	01 3b                	add    %edi,(%rbx)
 1e9:	0b 39                	or     (%rcx),%edi
 1eb:	0b 49 13             	or     0x13(%rcx),%ecx
 1ee:	00 00                	add    %al,(%rax)
 1f0:	0d 48 00 7d 01       	or     $0x17d0048,%eax
 1f5:	7f 13                	jg     20a <__ImageBase+0x20a>
 1f7:	00 00                	add    %al,(%rax)
 1f9:	0e                   	(bad)  
 1fa:	34 00                	xor    $0x0,%al
 1fc:	31 13                	xor    %edx,(%rbx)
 1fe:	00 00                	add    %al,(%rax)
 200:	0f 13 01             	movlps %xmm0,(%rcx)
 203:	03 0e                	add    (%rsi),%ecx
 205:	0b 0b                	or     (%rbx),%ecx
 207:	3a 21                	cmp    (%rcx),%ah
 209:	01 3b                	add    %edi,(%rbx)
 20b:	0b 39                	or     (%rcx),%edi
 20d:	21 10                	and    %edx,(%rax)
 20f:	01 13                	add    %edx,(%rbx)
 211:	00 00                	add    %al,(%rax)
 213:	10 26                	adc    %ah,(%rsi)
 215:	00 49 13             	add    %cl,0x13(%rcx)
 218:	00 00                	add    %al,(%rax)
 21a:	11 2e                	adc    %ebp,(%rsi)
 21c:	01 3f                	add    %edi,(%rdi)
 21e:	19 03                	sbb    %eax,(%rbx)
 220:	0e                   	(bad)  
 221:	3a 0b                	cmp    (%rbx),%cl
 223:	3b 0b                	cmp    (%rbx),%ecx
 225:	39 0b                	cmp    %ecx,(%rbx)
 227:	27                   	(bad)  
 228:	19 3c 19             	sbb    %edi,(%rcx,%rbx,1)
 22b:	01 13                	add    %edx,(%rbx)
 22d:	00 00                	add    %al,(%rax)
 22f:	12 05 00 03 08 3a    	adc    0x3a080300(%rip),%al        # 3a080535 <_end+0x3a055525>
 235:	21 01                	and    %eax,(%rcx)
 237:	3b 0b                	cmp    (%rbx),%ecx
 239:	39 0b                	cmp    %ecx,(%rbx)
 23b:	49 13 02             	adc    (%r10),%rax
 23e:	17                   	(bad)  
 23f:	b7 42                	mov    $0x42,%bh
 241:	17                   	(bad)  
 242:	00 00                	add    %al,(%rax)
 244:	13 05 00 31 13 02    	adc    0x2133100(%rip),%eax        # 213334a <_end+0x210833a>
 24a:	17                   	(bad)  
 24b:	b7 42                	mov    $0x42,%bh
 24d:	17                   	(bad)  
 24e:	00 00                	add    %al,(%rax)
 250:	14 34                	adc    $0x34,%al
 252:	00 31                	add    %dh,(%rcx)
 254:	13 02                	adc    (%rdx),%eax
 256:	17                   	(bad)  
 257:	b7 42                	mov    $0x42,%bh
 259:	17                   	(bad)  
 25a:	00 00                	add    %al,(%rax)
 25c:	15 13 01 0b 0b       	adc    $0xb0b0113,%eax
 261:	3a 21                	cmp    (%rcx),%ah
 263:	01 3b                	add    %edi,(%rbx)
 265:	0b 39                	or     (%rcx),%edi
 267:	0b 01                	or     (%rcx),%eax
 269:	13 00                	adc    (%rax),%eax
 26b:	00 16                	add    %dl,(%rsi)
 26d:	21 00                	and    %eax,(%rax)
 26f:	49 13 2f             	adc    (%r15),%rbp
 272:	0b 00                	or     (%rax),%eax
 274:	00 17                	add    %dl,(%rdi)
 276:	34 00                	xor    $0x0,%al
 278:	03 08                	add    (%rax),%ecx
 27a:	3a 21                	cmp    (%rcx),%ah
 27c:	01 3b                	add    %edi,(%rbx)
 27e:	0b 39                	or     (%rcx),%edi
 280:	0b 49 13             	or     0x13(%rcx),%ecx
 283:	02 17                	add    (%rdi),%dl
 285:	b7 42                	mov    $0x42,%bh
 287:	17                   	(bad)  
 288:	00 00                	add    %al,(%rax)
 28a:	18 34 00             	sbb    %dh,(%rax,%rax,1)
 28d:	03 0e                	add    (%rsi),%ecx
 28f:	3a 21                	cmp    (%rcx),%ah
 291:	01 3b                	add    %edi,(%rbx)
 293:	0b 39                	or     (%rcx),%edi
 295:	0b 49 13             	or     0x13(%rcx),%ecx
 298:	02 18                	add    (%rax),%bl
 29a:	00 00                	add    %al,(%rax)
 29c:	19 48 01             	sbb    %ecx,0x1(%rax)
 29f:	7d 01                	jge    2a2 <__ImageBase+0x2a2>
 2a1:	7f 13                	jg     2b6 <__ImageBase+0x2b6>
 2a3:	00 00                	add    %al,(%rax)
 2a5:	1a 01                	sbb    (%rcx),%al
 2a7:	01 49 13             	add    %ecx,0x13(%rcx)
 2aa:	01 13                	add    %edx,(%rbx)
 2ac:	00 00                	add    %al,(%rax)
 2ae:	1b 34 00             	sbb    (%rax,%rax,1),%esi
 2b1:	03 0e                	add    (%rsi),%ecx
 2b3:	3a 21                	cmp    (%rcx),%ah
 2b5:	01 3b                	add    %edi,(%rbx)
 2b7:	0b 39                	or     (%rcx),%edi
 2b9:	21 03                	and    %eax,(%rbx)
 2bb:	49 13 3f             	adc    (%r15),%rdi
 2be:	19 02                	sbb    %eax,(%rdx)
 2c0:	18 00                	sbb    %al,(%rax)
 2c2:	00 1c 2e             	add    %bl,(%rsi,%rbp,1)
 2c5:	00 3f                	add    %bh,(%rdi)
 2c7:	19 03                	sbb    %eax,(%rbx)
 2c9:	0e                   	(bad)  
 2ca:	3a 0b                	cmp    (%rbx),%cl
 2cc:	3b 0b                	cmp    (%rbx),%ecx
 2ce:	39 21                	cmp    %esp,(%rcx)
 2d0:	0d 27 19 3c 19       	or     $0x193c1927,%eax
 2d5:	00 00                	add    %al,(%rax)
 2d7:	1d 2e 01 3f 19       	sbb    $0x193f012e,%eax
 2dc:	03 0e                	add    (%rsi),%ecx
 2de:	3a 21                	cmp    (%rcx),%ah
 2e0:	01 3b                	add    %edi,(%rbx)
 2e2:	0b 39                	or     (%rcx),%edi
 2e4:	21 18                	and    %ebx,(%rax)
 2e6:	27                   	(bad)  
 2e7:	19 49 13             	sbb    %ecx,0x13(%rcx)
 2ea:	11 01                	adc    %eax,(%rcx)
 2ec:	12 07                	adc    (%rdi),%al
 2ee:	40 18 7a 19          	sbb    %dil,0x19(%rdx)
 2f2:	01 13                	add    %edx,(%rbx)
 2f4:	00 00                	add    %al,(%rax)
 2f6:	1e                   	(bad)  
 2f7:	2e 01 03             	cs add %eax,(%rbx)
 2fa:	0e                   	(bad)  
 2fb:	3a 21                	cmp    (%rcx),%ah
 2fd:	01 3b                	add    %edi,(%rbx)
 2ff:	0b 39                	or     (%rcx),%edi
 301:	21 1f                	and    %ebx,(%rdi)
 303:	27                   	(bad)  
 304:	19 49 13             	sbb    %ecx,0x13(%rcx)
 307:	20 21                	and    %ah,(%rcx)
 309:	01 01                	add    %eax,(%rcx)
 30b:	13 00                	adc    (%rax),%eax
 30d:	00 1f                	add    %bl,(%rdi)
 30f:	05 00 03 08 3a       	add    $0x3a080300,%eax
 314:	21 01                	and    %eax,(%rcx)
 316:	3b 0b                	cmp    (%rbx),%ecx
 318:	39 0b                	cmp    %ecx,(%rbx)
 31a:	49 13 00             	adc    (%r8),%rax
 31d:	00 20                	add    %ah,(%rax)
 31f:	34 00                	xor    $0x0,%al
 321:	03 08                	add    (%rax),%ecx
 323:	3a 21                	cmp    (%rcx),%ah
 325:	01 3b                	add    %edi,(%rbx)
 327:	0b 39                	or     (%rcx),%edi
 329:	0b 49 13             	or     0x13(%rcx),%ecx
 32c:	00 00                	add    %al,(%rax)
 32e:	21 1d 01 31 13 52    	and    %ebx,0x52133101(%rip)        # 52133435 <_end+0x52108425>
 334:	01 b8 42 0b 11 01    	add    %edi,0x1110b42(%rax)
 33a:	12 07                	adc    (%rdi),%al
 33c:	58                   	pop    %rax
 33d:	21 01                	and    %eax,(%rcx)
 33f:	59                   	pop    %rcx
 340:	0b 57 21             	or     0x21(%rdi),%edx
 343:	1f                   	(bad)  
 344:	01 13                	add    %edx,(%rbx)
 346:	00 00                	add    %al,(%rax)
 348:	22 34 00             	and    (%rax,%rax,1),%dh
 34b:	31 13                	xor    %edx,(%rbx)
 34d:	02 18                	add    (%rax),%bl
 34f:	00 00                	add    %al,(%rax)
 351:	23 11                	and    (%rcx),%edx
 353:	01 25 0e 13 0b 03    	add    %esp,0x30b130e(%rip)        # 30b1667 <_end+0x3086657>
 359:	1f                   	(bad)  
 35a:	1b 1f                	sbb    (%rdi),%ebx
 35c:	11 01                	adc    %eax,(%rcx)
 35e:	12 07                	adc    (%rdi),%al
 360:	10 17                	adc    %dl,(%rdi)
 362:	00 00                	add    %al,(%rax)
 364:	24 24                	and    $0x24,%al
 366:	00 0b                	add    %cl,(%rbx)
 368:	0b 3e                	or     (%rsi),%edi
 36a:	0b 03                	or     (%rbx),%eax
 36c:	08 00                	or     %al,(%rax)
 36e:	00 25 0f 00 0b 0b    	add    %ah,0xb0b000f(%rip)        # b0b0383 <_end+0xb085373>
 374:	00 00                	add    %al,(%rax)
 376:	26 04 01             	es add $0x1,%al
 379:	03 0e                	add    (%rsi),%ecx
 37b:	3e 0b 0b             	ds or  (%rbx),%ecx
 37e:	0b 49 13             	or     0x13(%rcx),%ecx
 381:	3a 0b                	cmp    (%rbx),%cl
 383:	3b 0b                	cmp    (%rbx),%ecx
 385:	39 0b                	cmp    %ecx,(%rbx)
 387:	01 13                	add    %edx,(%rbx)
 389:	00 00                	add    %al,(%rax)
 38b:	27                   	(bad)  
 38c:	26 00 00             	es add %al,(%rax)
 38f:	00 28                	add    %ch,(%rax)
 391:	2e 01 03             	cs add %eax,(%rbx)
 394:	0e                   	(bad)  
 395:	3a 0b                	cmp    (%rbx),%cl
 397:	3b 0b                	cmp    (%rbx),%ecx
 399:	39 0b                	cmp    %ecx,(%rbx)
 39b:	27                   	(bad)  
 39c:	19 49 13             	sbb    %ecx,0x13(%rcx)
 39f:	11 01                	adc    %eax,(%rcx)
 3a1:	12 07                	adc    (%rdi),%al
 3a3:	40 18 7a 19          	sbb    %dil,0x19(%rdx)
 3a7:	01 13                	add    %edx,(%rbx)
 3a9:	00 00                	add    %al,(%rax)
 3ab:	29 0a                	sub    %ecx,(%rdx)
 3ad:	00 03                	add    %al,(%rbx)
 3af:	08 3a                	or     %bh,(%rdx)
 3b1:	0b 3b                	or     (%rbx),%edi
 3b3:	0b 39                	or     (%rcx),%edi
 3b5:	0b 11                	or     (%rcx),%edx
 3b7:	01 00                	add    %eax,(%rax)
 3b9:	00 2a                	add    %ch,(%rdx)
 3bb:	2e 01 31             	cs add %esi,(%rcx)
 3be:	13 11                	adc    (%rcx),%edx
 3c0:	01 12                	add    %edx,(%rdx)
 3c2:	07                   	(bad)  
 3c3:	40 18 7a 19          	sbb    %dil,0x19(%rdx)
 3c7:	01 13                	add    %edx,(%rbx)
 3c9:	00 00                	add    %al,(%rax)
 3cb:	2b 2e                	sub    (%rsi),%ebp
 3cd:	01 31                	add    %esi,(%rcx)
 3cf:	13 11                	adc    (%rcx),%edx
 3d1:	01 12                	add    %edx,(%rdx)
 3d3:	07                   	(bad)  
 3d4:	40 18 7a 19          	sbb    %dil,0x19(%rdx)
 3d8:	00 00                	add    %al,(%rax)
	...

Disassembly of section .debug_line:

0000000000000000 <.debug_line>:
   0:	ef                   	out    %eax,(%dx)
   1:	00 00                	add    %al,(%rax)
   3:	00 05 00 08 00 33    	add    %al,0x33000800(%rip)        # 33000809 <_end+0x32fd57f9>
   9:	00 00                	add    %al,(%rax)
   b:	00 01                	add    %al,(%rcx)
   d:	01 01                	add    %eax,(%rcx)
   f:	fb                   	sti    
  10:	0e                   	(bad)  
  11:	0d 00 01 01 01       	or     $0x1010100,%eax
  16:	01 00                	add    %eax,(%rax)
  18:	00 00                	add    %al,(%rax)
  1a:	01 00                	add    %eax,(%rax)
  1c:	00 01                	add    %al,(%rcx)
  1e:	01 01                	add    %eax,(%rcx)
  20:	1f                   	(bad)  
  21:	02 07                	add    (%rdi),%al
  23:	00 00                	add    %al,(%rax)
  25:	00 23                	add    %ah,(%rbx)
  27:	00 00                	add    %al,(%rax)
  29:	00 02                	add    %al,(%rdx)
  2b:	01 1f                	add    %ebx,(%rdi)
  2d:	02 0f                	add    (%rdi),%cl
  2f:	03 00                	add    (%rax),%eax
	...
  39:	00 43 00             	add    %al,0x0(%rbx)
  3c:	00 00                	add    %al,(%rax)
  3e:	01 05 2f 00 09 02    	add    %eax,0x209002f(%rip)        # 2090073 <_end+0x2065063>
  44:	63 20                	movsxd (%rax),%esp
  46:	00 00                	add    %al,(%rax)
  48:	00 00                	add    %al,(%rax)
  4a:	00 00                	add    %al,(%rax)
  4c:	03 0c 01             	add    (%rcx,%rax,1),%ecx
  4f:	06                   	(bad)  
  50:	01 05 05 06 4d 05    	add    %eax,0x54d0605(%rip)        # 54d065b <_end+0x54a564b>
  56:	07                   	(bad)  
  57:	06                   	(bad)  
  58:	01 05 2f 8d 05 09    	add    %eax,0x9058d2f(%rip)        # 9058d8d <_end+0x902dd7d>
  5e:	06                   	(bad)  
  5f:	78 05                	js     66 <__ImageBase+0x66>
  61:	0d 06 14 05 19       	or     $0x19051406,%eax
  66:	72 05                	jb     6d <__ImageBase+0x6d>
  68:	09 06                	or     %eax,(%rsi)
  6a:	68 05 0d 06 01       	push   $0x1060d05
  6f:	05 0c 00 02 04       	add    $0x402000c,%eax
  74:	01 58 05             	add    %ebx,0x5(%rax)
  77:	0d 06 4b bb 05       	or     $0x5bb4b06,%eax
  7c:	1e                   	(bad)  
  7d:	06                   	(bad)  
  7e:	01 05 01 03 0b 9e    	add    %eax,-0x61f4fcff(%rip)        # ffffffff9e0b0385 <_end+0xffffffff9e085375>
  84:	05 0d 06 03 77       	add    $0x7703060d,%eax
  89:	2e 05 1d 06 01 05    	cs add $0x501061d,%eax
  8f:	0d 2f 05 1d 73       	or     $0x731d052f,%eax
  94:	05 0d 06 67 05       	add    $0x567060d,%eax
  99:	01 06                	add    %eax,(%rsi)
  9b:	36 05 09 06 39 06    	ss add $0x6390609,%eax
  a1:	74 2e                	je     d1 <__ImageBase+0xd1>
  a3:	05 20 06 5d 06       	add    $0x65d0620,%eax
  a8:	01 05 05 06 4d 05    	add    %eax,0x54d0605(%rip)        # 54d06b3 <_end+0x54a56a3>
  ae:	07                   	(bad)  
  af:	06                   	(bad)  
  b0:	01 05 09 06 83 05    	add    %eax,0x5830609(%rip)        # 58306bf <_end+0x58056af>
  b6:	1a 06                	sbb    (%rsi),%al
  b8:	13 05 09 2f 05 1a    	adc    0x1a052f09(%rip),%eax        # 1a052fc7 <_end+0x1a027fb7>
  be:	73 05                	jae    c5 <__ImageBase+0xc5>
  c0:	09 06                	or     %eax,(%rsi)
  c2:	bb 06 74 05 01       	mov    $0x1057406,%ebx
  c7:	14 05                	adc    $0x5,%al
  c9:	27                   	(bad)  
  ca:	06                   	(bad)  
  cb:	23 06                	and    (%rsi),%eax
  cd:	01 05 05 06 4c 05    	add    %eax,0x54c0605(%rip)        # 54c06d8 <_end+0x54956c8>
  d3:	07                   	(bad)  
  d4:	06                   	(bad)  
  d5:	01 05 09 06 83 05    	add    %eax,0x5830609(%rip)        # 58306e4 <_end+0x58056d4>
  db:	0c 06                	or     $0x6,%al
  dd:	01 05 0d 75 74 05    	add    %eax,0x574750d(%rip)        # 57475f0 <_end+0x571c5e0>
  e3:	0c 11                	or     $0x11,%al
  e5:	05 09 06 4e 06       	add    $0x64e0609,%eax
  ea:	74 05                	je     f1 <__ImageBase+0xf1>
  ec:	01 76 02             	add    %esi,0x2(%rsi)
  ef:	01 00                	add    %eax,(%rax)
  f1:	01 01                	add    %eax,(%rcx)
  f3:	45 00 00             	add    %r8b,(%r8)
  f6:	00 05 00 08 00 2a    	add    %al,0x2a000800(%rip)        # 2a0008fc <_end+0x29fd58ec>
  fc:	00 00                	add    %al,(%rax)
  fe:	00 01                	add    %al,(%rcx)
 100:	01 01                	add    %eax,(%rcx)
 102:	fb                   	sti    
 103:	0e                   	(bad)  
 104:	0d 00 01 01 01       	or     $0x1010100,%eax
 109:	01 00                	add    %eax,(%rax)
 10b:	00 00                	add    %al,(%rax)
 10d:	01 00                	add    %eax,(%rax)
 10f:	00 01                	add    %al,(%rcx)
 111:	01 01                	add    %eax,(%rcx)
 113:	1f                   	(bad)  
 114:	01 07                	add    %eax,(%rdi)
 116:	00 00                	add    %al,(%rax)
 118:	00 02                	add    %al,(%rdx)
 11a:	01 1f                	add    %ebx,(%rdi)
 11c:	02 0f                	add    (%rdi),%cl
 11e:	02 4c 00 00          	add    0x0(%rax,%rax,1),%cl
 122:	00 00                	add    %al,(%rax)
 124:	4c 00 00             	rex.WR add %r8b,(%rax)
 127:	00 00                	add    %al,(%rax)
 129:	00 09                	add    %cl,(%rcx)
 12b:	02 00                	add    (%rax),%al
 12d:	30 00                	xor    %al,(%rax)
 12f:	00 00                	add    %al,(%rax)
 131:	00 00                	add    %al,(%rax)
 133:	00 16                	add    %dl,(%rsi)
 135:	59                   	pop    %rcx
 136:	02 81 20 00 01 01    	add    0x1010020(%rcx),%al
 13c:	e4 03                	in     $0x3,%al
 13e:	00 00                	add    %al,(%rax)
 140:	05 00 08 00 6d       	add    $0x6d000800,%eax
 145:	00 00                	add    %al,(%rax)
 147:	00 01                	add    %al,(%rcx)
 149:	01 01                	add    %eax,(%rcx)
 14b:	fb                   	sti    
 14c:	0e                   	(bad)  
 14d:	0d 00 01 01 01       	or     $0x1010100,%eax
 152:	01 00                	add    %eax,(%rax)
 154:	00 00                	add    %al,(%rax)
 156:	01 00                	add    %eax,(%rax)
 158:	00 01                	add    %al,(%rcx)
 15a:	01 01                	add    %eax,(%rcx)
 15c:	1f                   	(bad)  
 15d:	04 07                	add    $0x7,%al
 15f:	00 00                	add    %al,(%rax)
 161:	00 5b 00             	add    %bl,0x0(%rbx)
 164:	00 00                	add    %al,(%rax)
 166:	23 00                	and    (%rax),%eax
 168:	00 00                	add    %al,(%rax)
 16a:	7f 00                	jg     16c <__ImageBase+0x16c>
 16c:	00 00                	add    %al,(%rax)
 16e:	02 01                	add    (%rcx),%al
 170:	1f                   	(bad)  
 171:	02 0f                	add    (%rdi),%cl
 173:	0d 52 00 00 00       	or     $0x52,%eax
 178:	00 52 00             	add    %dl,0x0(%rdx)
 17b:	00 00                	add    %al,(%rax)
 17d:	00 99 00 00 00 01    	add    %bl,0x1000000(%rcx)
 183:	a2 00 00 00 01 ab 00 	movabs %al,0xab01000000
 18a:	00 00 
 18c:	02 b3 00 00 00 03    	add    0x3000000(%rbx),%dh
 192:	43 00 00             	rex.XB add %al,(%r8)
 195:	00 02                	add    %al,(%rdx)
 197:	bf 00 00 00 03       	mov    $0x3000000,%edi
 19c:	cd 00                	int    $0x0
 19e:	00 00                	add    %al,(%rax)
 1a0:	02 da                	add    %dl,%bl
 1a2:	00 00                	add    %al,(%rax)
 1a4:	00 03                	add    %al,(%rbx)
 1a6:	e5 00                	in     $0x0,%eax
 1a8:	00 00                	add    %al,(%rax)
 1aa:	02 ee                	add    %dh,%ch
 1ac:	00 00                	add    %al,(%rax)
 1ae:	00 00                	add    %al,(%rax)
 1b0:	f7 00 00 00 03 05    	testl  $0x5030000,(%rax)
 1b6:	01 00                	add    %eax,(%rax)
 1b8:	09 02                	or     %eax,(%rdx)
 1ba:	06                   	(bad)  
 1bb:	40 00 00             	rex add %al,(%rax)
 1be:	00 00                	add    %al,(%rax)
 1c0:	00 00                	add    %al,(%rax)
 1c2:	03 35 01 06 01 05    	add    0x5010601(%rip),%esi        # 50107c9 <_end+0x4fe57b9>
 1c8:	02 06                	add    (%rsi),%al
 1ca:	4b 01 05 01 06 11 05 	rex.WXB add %rax,0x5110601(%rip)        # 51107d2 <_end+0x50e57c2>
 1d1:	02 9f 00 02 04 03    	add    0x3040200(%rdi),%bl
 1d7:	58                   	pop    %rax
 1d8:	00 02                	add    %al,(%rdx)
 1da:	04 02                	add    $0x2,%al
 1dc:	ac                   	lods   %ds:(%rsi),%al
 1dd:	00 02                	add    %al,(%rdx)
 1df:	04 01                	add    $0x1,%al
 1e1:	c8 00 02 04          	enter  $0x200,$0x4
 1e5:	04 06                	add    $0x6,%al
 1e7:	4a 16                	rex.WX (bad) 
 1e9:	3d 13 13 05 06       	cmp    $0x6051313,%eax
 1ee:	06                   	(bad)  
 1ef:	01 05 0a 08 21 05    	add    %eax,0x521080a(%rip)        # 52109ff <_end+0x51e59ef>
 1f5:	06                   	(bad)  
 1f6:	65 05 05 00 02 04    	gs add $0x4020005,%eax
 1fc:	01 58 05             	add    %ebx,0x5(%rax)
 1ff:	02 06                	add    (%rsi),%al
 201:	85 13                	test   %edx,(%rbx)
 203:	05 0e 06 01 05       	add    $0x501060e,%eax
 208:	02 06                	add    (%rsi),%al
 20a:	59                   	pop    %rcx
 20b:	05 09 06 01 05       	add    $0x5010609,%eax
 210:	02 06                	add    (%rsi),%al
 212:	59                   	pop    %rcx
 213:	14 01                	adc    $0x1,%al
 215:	00 02                	add    %al,(%rdx)
 217:	04 04                	add    $0x4,%al
 219:	58                   	pop    %rax
 21a:	17                   	(bad)  
 21b:	3e 05 05 06 01 05    	ds add $0x5010605,%eax
 221:	08 03                	or     %al,(%rbx)
 223:	77 9e                	ja     1c3 <__ImageBase+0x1c3>
 225:	2e 05 02 00 02 04    	cs add $0x4020002,%eax
 22b:	01 30                	add    %esi,(%rax)
 22d:	05 03 06 08 1a       	add    $0x1a080603,%eax
 232:	05 13 06 01 05       	add    $0x5010613,%eax
 237:	0b 3e                	or     (%rsi),%edi
 239:	05 13 64 05 03       	add    $0x3056413,%eax
 23e:	06                   	(bad)  
 23f:	83 05 06 06 01 05 03 	addl   $0x3,0x5010606(%rip)        # 501084c <_end+0x4fe583c>
 246:	06                   	(bad)  
 247:	5d                   	pop    %rbp
 248:	05 07 06 01 05       	add    $0x5010607,%eax
 24d:	06                   	(bad)  
 24e:	00 02                	add    %al,(%rdx)
 250:	04 01                	add    $0x1,%al
 252:	08 12                	or     %dl,(%rdx)
 254:	05 03 06 4f 05       	add    $0x54f0603,%eax
 259:	17                   	(bad)  
 25a:	06                   	(bad)  
 25b:	01 05 03 06 59 05    	add    %eax,0x5590603(%rip)        # 5590864 <_end+0x5565854>
 261:	12 06                	adc    (%rsi),%al
 263:	01 05 21 00 02 04    	add    %eax,0x4020021(%rip)        # 402028a <_end+0x3ff527a>
 269:	01 82 05 06 00 02    	add    %eax,0x2000605(%rdx)
 26f:	04 01                	add    $0x1,%al
 271:	3c 05                	cmp    $0x5,%al
 273:	0b 5a 05             	or     0x5(%rdx),%ebx
 276:	02 06                	add    (%rsi),%al
 278:	86 e7                	xchg   %ah,%bh
 27a:	05 05 06 01 05       	add    $0x5010605,%eax
 27f:	0e                   	(bad)  
 280:	00 02                	add    %al,(%rdx)
 282:	04 01                	add    $0x1,%al
 284:	06                   	(bad)  
 285:	58                   	pop    %rax
 286:	05 01 06 84 06       	add    $0x6840601,%eax
 28b:	03 18                	add    (%rax),%ebx
 28d:	d6                   	(bad)  
 28e:	06                   	(bad)  
 28f:	01 05 02 06 4b 01    	add    %eax,0x14b0602(%rip)        # 14b0897 <_end+0x1485887>
 295:	05 01 06 57 05       	add    $0x5570601,%eax
 29a:	02 00                	add    (%rax),%al
 29c:	02 04 02             	add    (%rdx,%rax,1),%al
 29f:	21 05 01 81 05 02    	and    %eax,0x2058101(%rip)        # 20583a6 <_end+0x202d396>
 2a5:	00 02                	add    %al,(%rdx)
 2a7:	04 02                	add    $0x2,%al
 2a9:	4b 00 02             	rex.WXB add %al,(%r10)
 2ac:	04 01                	add    $0x1,%al
 2ae:	58                   	pop    %rax
 2af:	00 02                	add    %al,(%rdx)
 2b1:	04 03                	add    $0x3,%al
 2b3:	4a 05 1f 06 72 05    	rex.WX add $0x572061f,%rax
 2b9:	02 00                	add    (%rax),%al
 2bb:	02 04 04             	add    (%rsp,%rax,1),%al
 2be:	14 16                	adc    $0x16,%al
 2c0:	3d 13 13 05 06       	cmp    $0x6051313,%eax
 2c5:	06                   	(bad)  
 2c6:	01 05 0a 08 83 05    	add    %eax,0x583080a(%rip)        # 5830ad6 <_end+0x5805ac6>
 2cc:	05 00 02 04 01       	add    $0x1040200,%eax
 2d1:	57                   	push   %rdi
 2d2:	05 02 06 4d 15       	add    $0x154d0602,%eax
 2d7:	93                   	xchg   %eax,%ebx
 2d8:	05 09 06 01 2e       	add    $0x2e010609,%eax
 2dd:	05 01 13 58 05       	add    $0x5581301,%eax
 2e2:	02 00                	add    (%rax),%al
 2e4:	02 04 03             	add    (%rbx,%rax,1),%al
 2e7:	03 6f 20             	add    0x20(%rdi),%ebp
 2ea:	05 01 03 11 58       	add    $0x58110301,%eax
 2ef:	06                   	(bad)  
 2f0:	03 59 20             	add    0x20(%rcx),%ebx
 2f3:	06                   	(bad)  
 2f4:	01 05 02 06 4b 01    	add    %eax,0x14b0602(%rip)        # 14b08fc <_end+0x14858ec>
 2fa:	05 01 06 57 05       	add    $0x5570601,%eax
 2ff:	02 00                	add    (%rax),%al
 301:	02 04 02             	add    (%rdx,%rax,1),%al
 304:	21 05 01 81 05 02    	and    %eax,0x2058101(%rip)        # 205840b <_end+0x202d3fb>
 30a:	00 02                	add    %al,(%rdx)
 30c:	04 02                	add    $0x2,%al
 30e:	4b 00 02             	rex.WXB add %al,(%r10)
 311:	04 01                	add    $0x1,%al
 313:	58                   	pop    %rax
 314:	00 02                	add    %al,(%rdx)
 316:	04 03                	add    $0x3,%al
 318:	4a 05 1f 06 72 05    	rex.WX add $0x572061f,%rax
 31e:	02 00                	add    (%rax),%al
 320:	02 04 04             	add    (%rsp,%rax,1),%al
 323:	14 16                	adc    $0x16,%al
 325:	3d 13 13 05 06       	cmp    $0x6051313,%eax
 32a:	06                   	(bad)  
 32b:	01 05 0a 08 83 05    	add    %eax,0x583080a(%rip)        # 5830b3b <_end+0x5805b2b>
 331:	05 00 02 04 01       	add    $0x1040200,%eax
 336:	57                   	push   %rdi
 337:	05 02 06 4d 15       	add    $0x154d0602,%eax
 33c:	93                   	xchg   %eax,%ebx
 33d:	05 09 06 01 2e       	add    $0x2e010609,%eax
 342:	05 01 13 58 05       	add    $0x5581301,%eax
 347:	02 00                	add    (%rax),%al
 349:	02 04 03             	add    (%rbx,%rax,1),%al
 34c:	03 6f 20             	add    0x20(%rdi),%ebp
 34f:	05 01 03 11 58       	add    $0x58110301,%eax
 354:	06                   	(bad)  
 355:	03 30                	add    (%rax),%esi
 357:	20 06                	and    %al,(%rsi)
 359:	01 05 02 06 4b 13    	add    %eax,0x134b0602(%rip)        # 134b0961 <_end+0x13485951>
 35f:	05 01 06 10 05       	add    $0x5100601,%eax
 364:	2a e6                	sub    %dh,%ah
 366:	05 1a 00 02 04       	add    $0x402001a,%eax
 36b:	01 58 05             	add    %ebx,0x5(%rax)
 36e:	2a 00                	sub    (%rax),%al
 370:	02 04 01             	add    (%rcx,%rax,1),%al
 373:	58                   	pop    %rax
 374:	05 02 06 4c 13       	add    $0x134c0602,%eax
 379:	13 05 08 06 01 05    	adc    0x5010608(%rip),%eax        # 5010987 <_end+0x4fe5977>
 37f:	02 06                	add    (%rsi),%al
 381:	77 01                	ja     384 <__ImageBase+0x384>
 383:	00 02                	add    %al,(%rdx)
 385:	04 01                	add    $0x1,%al
 387:	06                   	(bad)  
 388:	58                   	pop    %rax
 389:	05 06 00 02 04       	add    $0x4020006,%eax
 38e:	01 68 05             	add    %ebp,0x5(%rax)
 391:	02 00                	add    (%rax),%al
 393:	02 04 01             	add    (%rcx,%rax,1),%al
 396:	3a 00                	cmp    (%rax),%al
 398:	02 04 03             	add    (%rbx,%rax,1),%al
 39b:	90                   	nop
 39c:	05 06 00 02 04       	add    $0x4020006,%eax
 3a1:	02 a0 00 02 04 04    	add    0x4040200(%rax),%ah
 3a7:	3c 05                	cmp    $0x5,%al
 3a9:	05 00 02 04 08       	add    $0x8040200,%eax
 3ae:	4a 05 02 06 a1 05    	rex.WX add $0x5a10602,%rax
 3b4:	0a 06                	or     (%rsi),%al
 3b6:	01 58 05             	add    %ebx,0x5(%rax)
 3b9:	02 06                	add    (%rsi),%al
 3bb:	3d 05 05 06 01       	cmp    $0x1060505,%eax
 3c0:	05 08 00 02 04       	add    $0x4020008,%eax
 3c5:	01 57 05             	add    %edx,0x5(%rdi)
 3c8:	03 06                	add    (%rsi),%eax
 3ca:	76 59                	jbe    425 <__ImageBase+0x425>
 3cc:	05 0a 06 01 05       	add    $0x501060a,%eax
 3d1:	02 06                	add    (%rsi),%al
 3d3:	76 13                	jbe    3e8 <__ImageBase+0x3e8>
 3d5:	05 21 06 01 4a       	add    $0x4a010621,%eax
 3da:	05 02 06 59 14       	add    $0x14590602,%eax
 3df:	05 05 06 01 05       	add    $0x5010605,%eax
 3e4:	03 06                	add    (%rsi),%eax
 3e6:	59                   	pop    %rcx
 3e7:	05 07 06 01 05       	add    $0x5010607,%eax
 3ec:	06                   	(bad)  
 3ed:	00 02                	add    %al,(%rdx)
 3ef:	04 01                	add    $0x1,%al
 3f1:	08 66 05             	or     %ah,0x5(%rsi)
 3f4:	03 06                	add    (%rsi),%eax
 3f6:	4e 16                	rex.WRX (bad) 
 3f8:	05 07 06 01 05       	add    $0x5010607,%eax
 3fd:	06                   	(bad)  
 3fe:	00 02                	add    %al,(%rdx)
 400:	04 01                	add    $0x1,%al
 402:	08 2e                	or     %ch,(%rsi)
 404:	05 03 06 4e 05       	add    $0x54e0603,%eax
 409:	22 06                	and    (%rsi),%al
 40b:	01 05 03 06 59 06    	add    %eax,0x6590603(%rip)        # 6590a14 <_end+0x6565a04>
 411:	01 06                	add    %eax,(%rsi)
 413:	30 05 0e 06 01 05    	xor    %al,0x501060e(%rip)        # 5010a27 <_end+0x4fe5a17>
 419:	02 06                	add    (%rsi),%al
 41b:	69 05 0b 06 01 05 02 	imul   $0x13d80602,0x501060b(%rip),%eax        # 5010a30 <_end+0x4fe5a20>
 422:	06 d8 13 
 425:	13 06                	adc    (%rsi),%eax
 427:	58                   	pop    %rax
 428:	06                   	(bad)  
 429:	4b 05 01 06 13 58    	rex.WXB add $0x58130601,%rax
 42f:	06                   	(bad)  
 430:	69 06 01 05 02 06    	imul   $0x6020501,(%rsi),%eax
 436:	4b 13 05 01 06 10 f2 	rex.WXB adc -0xdeff9ff(%rip),%rax        # fffffffff2100a3e <_end+0xfffffffff20d5a2e>
 43d:	05 2a 5a 05 1a       	add    $0x1a055a2a,%eax
 442:	00 02                	add    %al,(%rdx)
 444:	04 01                	add    $0x1,%al
 446:	58                   	pop    %rax
 447:	05 2a 00 02 04       	add    $0x402002a,%eax
 44c:	01 58 05             	add    %ebx,0x5(%rax)
 44f:	02 06                	add    (%rsi),%al
 451:	4c 13 13             	adc    (%rbx),%r10
 454:	05 08 06 01 05       	add    $0x5010608,%eax
 459:	02 06                	add    (%rsi),%al
 45b:	77 01                	ja     45e <__ImageBase+0x45e>
 45d:	00 02                	add    %al,(%rdx)
 45f:	04 01                	add    $0x1,%al
 461:	06                   	(bad)  
 462:	58                   	pop    %rax
 463:	05 06 00 02 04       	add    $0x4020006,%eax
 468:	01 68 05             	add    %ebp,0x5(%rax)
 46b:	02 00                	add    (%rax),%al
 46d:	02 04 01             	add    (%rcx,%rax,1),%al
 470:	3a 00                	cmp    (%rax),%al
 472:	02 04 03             	add    (%rbx,%rax,1),%al
 475:	90                   	nop
 476:	05 06 00 02 04       	add    $0x4020006,%eax
 47b:	02 a0 00 02 04 04    	add    0x4040200(%rax),%ah
 481:	3c 05                	cmp    $0x5,%al
 483:	05 00 02 04 08       	add    $0x8040200,%eax
 488:	4a 05 02 06 a1 05    	rex.WX add $0x5a10602,%rax
 48e:	0a 06                	or     (%rsi),%al
 490:	01 58 05             	add    %ebx,0x5(%rax)
 493:	02 06                	add    (%rsi),%al
 495:	3d 05 05 06 01       	cmp    $0x1060505,%eax
 49a:	05 08 00 02 04       	add    $0x4020008,%eax
 49f:	01 57 05             	add    %edx,0x5(%rdi)
 4a2:	03 06                	add    (%rsi),%eax
 4a4:	76 59                	jbe    4ff <__ImageBase+0x4ff>
 4a6:	05 0a 06 01 05       	add    $0x501060a,%eax
 4ab:	02 06                	add    (%rsi),%al
 4ad:	a0 13 05 21 06 01 4a 	movabs 0x2054a0106210513,%al
 4b4:	05 02 
 4b6:	06                   	(bad)  
 4b7:	59                   	pop    %rcx
 4b8:	14 05                	adc    $0x5,%al
 4ba:	05 06 01 05 03       	add    $0x3050106,%eax
 4bf:	06                   	(bad)  
 4c0:	59                   	pop    %rcx
 4c1:	05 07 06 01 05       	add    $0x5010607,%eax
 4c6:	06                   	(bad)  
 4c7:	00 02                	add    %al,(%rdx)
 4c9:	04 01                	add    $0x1,%al
 4cb:	08 66 05             	or     %ah,0x5(%rsi)
 4ce:	03 06                	add    (%rsi),%eax
 4d0:	4e 16                	rex.WRX (bad) 
 4d2:	05 07 06 01 05       	add    $0x5010607,%eax
 4d7:	06                   	(bad)  
 4d8:	00 02                	add    %al,(%rdx)
 4da:	04 01                	add    $0x1,%al
 4dc:	08 2e                	or     %ch,(%rsi)
 4de:	05 03 06 4e 05       	add    $0x54e0603,%eax
 4e3:	22 06                	and    (%rsi),%al
 4e5:	01 05 03 06 59 06    	add    %eax,0x6590603(%rip)        # 6590aee <_end+0x6565ade>
 4eb:	01 06                	add    %eax,(%rsi)
 4ed:	30 05 0e 06 01 05    	xor    %al,0x501060e(%rip)        # 5010b01 <_end+0x4fe5af1>
 4f3:	02 06                	add    (%rsi),%al
 4f5:	69 05 06 06 01 05 14 	imul   $0x6055814,0x5010606(%rip),%eax        # 5010b05 <_end+0x4fe5af5>
 4fc:	58 05 06 
 4ff:	4a 05 05 00 02 04    	rex.WX add $0x4020005,%rax
 505:	01 e4                	add    %esp,%esp
 507:	05 02 06 4f 05       	add    $0x54f0602,%eax
 50c:	0b 06                	or     (%rsi),%eax
 50e:	01 05 02 06 08 14    	add    %eax,0x14080602(%rip)        # 14080b16 <_end+0x14055b06>
 514:	13 13                	adc    (%rbx),%edx
 516:	06                   	(bad)  
 517:	58                   	pop    %rax
 518:	06                   	(bad)  
 519:	4b 05 01 06 13 58    	rex.WXB add $0x58130601,%rax
 51f:	02 06                	add    (%rsi),%al
 521:	00 01                	add    %al,(%rcx)
 523:	01                   	.byte 0x1

Disassembly of section .debug_str:

0000000000000000 <.debug_str>:
   0:	6c                   	insb   (%dx),%es:(%rdi)
   1:	6f                   	outsl  %ds:(%rsi),(%dx)
   2:	6e                   	outsb  %ds:(%rsi),(%dx)
   3:	67 20 6c 6f 6e       	and    %ch,0x6e(%edi,%ebp,2)
   8:	67 20 69 6e          	and    %ch,0x6e(%ecx)
   c:	74 00                	je     e <__ImageBase+0xe>
   e:	6c                   	insb   (%dx),%es:(%rdi)
   f:	6f                   	outsl  %ds:(%rsi),(%dx)
  10:	6e                   	outsb  %ds:(%rsi),(%dx)
  11:	67 20 75 6e          	and    %dh,0x6e(%ebp)
  15:	73 69                	jae    80 <__ImageBase+0x80>
  17:	67 6e                	outsb  %ds:(%esi),(%dx)
  19:	65 64 20 69 6e       	gs and %ch,%fs:0x6e(%rcx)
  1e:	74 00                	je     20 <__ImageBase+0x20>
  20:	69 73 5f 61 75 74 68 	imul   $0x68747561,0x5f(%rbx),%esi
  27:	65 6e                	outsb  %gs:(%rsi),(%dx)
  29:	74 69                	je     94 <__ImageBase+0x94>
  2b:	63 61 74             	movsxd 0x74(%rcx),%esp
  2e:	65 64 00 75 6e       	gs add %dh,%fs:0x6e(%rbp)
  33:	73 69                	jae    9e <__ImageBase+0x9e>
  35:	67 6e                	outsb  %ds:(%esi),(%dx)
  37:	65 64 20 63 68       	gs and %ah,%fs:0x68(%rbx)
  3c:	61                   	(bad)  
  3d:	72 00                	jb     3f <__ImageBase+0x3f>
  3f:	6f                   	outsl  %ds:(%rsi),(%dx)
  40:	63 61 6c             	movsxd 0x6c(%rcx),%esp
  43:	6c                   	insb   (%dx),%es:(%rdi)
  44:	5f                   	pop    %rdi
  45:	70 72                	jo     b9 <__ImageBase+0xb9>
  47:	69 6e 74 00 73 74 72 	imul   $0x72747300,0x74(%rsi),%ebp
  4e:	63 6d 70             	movsxd 0x70(%rbp),%ebp
  51:	00 64 6f 75          	add    %ah,0x75(%rdi,%rbp,2)
  55:	62                   	(bad)  
  56:	6c                   	insb   (%dx),%es:(%rdi)
  57:	65 00 73 68          	add    %dh,%gs:0x68(%rbx)
  5b:	6f                   	outsl  %ds:(%rsi),(%dx)
  5c:	72 74                	jb     d2 <__ImageBase+0xd2>
  5e:	20 75 6e             	and    %dh,0x6e(%rbp)
  61:	73 69                	jae    cc <__ImageBase+0xcc>
  63:	67 6e                	outsb  %ds:(%esi),(%dx)
  65:	65 64 20 69 6e       	gs and %ch,%fs:0x6e(%rcx)
  6a:	74 00                	je     6c <__ImageBase+0x6c>
  6c:	63 75 72             	movsxd 0x72(%rbp),%esi
  6f:	72 65                	jb     d6 <__ImageBase+0xd6>
  71:	6e                   	outsb  %ds:(%rsi),(%dx)
  72:	74 44                	je     b8 <__ImageBase+0xb8>
  74:	65 76 69             	gs jbe e0 <__ImageBase+0xe0>
  77:	63 65 49             	movsxd 0x49(%rbp),%esp
  7a:	64 00 66 6c          	add    %ah,%fs:0x6c(%rsi)
  7e:	6f                   	outsl  %ds:(%rsi),(%dx)
  7f:	61                   	(bad)  
  80:	74 00                	je     82 <__ImageBase+0x82>
  82:	47                   	rex.RXB
  83:	4e 55                	rex.WRX push %rbp
  85:	20 43 31             	and    %al,0x31(%rbx)
  88:	37                   	(bad)  
  89:	20 31                	and    %dh,(%rcx)
  8b:	33 2e                	xor    (%rsi),%ebp
  8d:	33 2e                	xor    (%rsi),%ebp
  8f:	30 20                	xor    %ah,(%rax)
  91:	2d 6d 74 75 6e       	sub    $0x6e75746d,%eax
  96:	65 3d 67 65 6e 65    	gs cmp $0x656e6567,%eax
  9c:	72 69                	jb     107 <__ImageBase+0x107>
  9e:	63 20                	movsxd (%rax),%esp
  a0:	2d 6d 61 72 63       	sub    $0x6372616d,%eax
  a5:	68 3d 78 38 36       	push   $0x3638783d
  aa:	2d 36 34 20 2d       	sub    $0x2d203436,%eax
  af:	67 20 2d 4f 73 20 2d 	and    %ch,0x2d20734f(%eip)        # 2d207405 <_end+0x2d1dc3f5>
  b6:	66 76 69             	data16 jbe 122 <__ImageBase+0x122>
  b9:	73 69                	jae    124 <__ImageBase+0x124>
  bb:	62                   	(bad)  
  bc:	69 6c 69 74 79 3d 68 	imul   $0x69683d79,0x74(%rcx,%rbp,2),%ebp
  c3:	69 
  c4:	64 64 65 6e          	fs fs outsb %gs:(%rsi),(%dx)
  c8:	20 2d 66 70 69 65    	and    %ch,0x65697066(%rip)        # 65697134 <_end+0x6566c124>
  ce:	20 2d 66 73 74 61    	and    %ch,0x61747366(%rip)        # 6174743a <_end+0x6171c42a>
  d4:	63 6b 2d             	movsxd 0x2d(%rbx),%ebp
  d7:	70 72                	jo     14b <__ImageBase+0x14b>
  d9:	6f                   	outsl  %ds:(%rsi),(%dx)
  da:	74 65                	je     141 <__ImageBase+0x141>
  dc:	63 74 6f 72          	movsxd 0x72(%rdi,%rbp,2),%esi
  e0:	20 2d 66 61 73 79    	and    %ch,0x79736166(%rip)        # 7973624c <_end+0x7970b23c>
  e6:	6e                   	outsb  %ds:(%rsi),(%dx)
  e7:	63 68 72             	movsxd 0x72(%rax),%ebp
  ea:	6f                   	outsl  %ds:(%rsi),(%dx)
  eb:	6e                   	outsb  %ds:(%rsi),(%dx)
  ec:	6f                   	outsl  %ds:(%rsi),(%dx)
  ed:	75 73                	jne    162 <__ImageBase+0x162>
  ef:	2d 75 6e 77 69       	sub    $0x69776e75,%eax
  f4:	6e                   	outsb  %ds:(%rsi),(%dx)
  f5:	64 2d 74 61 62 6c    	fs sub $0x6c626174,%eax
  fb:	65 73 20             	gs jae 11e <__ImageBase+0x11e>
  fe:	2d 66 73 74 61       	sub    $0x61747366,%eax
 103:	63 6b 2d             	movsxd 0x2d(%rbx),%ebp
 106:	63 6c 61 73          	movsxd 0x73(%rcx,%riz,2),%ebp
 10a:	68 2d 70 72 6f       	push   $0x6f72702d
 10f:	74 65                	je     176 <__ImageBase+0x176>
 111:	63 74 69 6f          	movsxd 0x6f(%rcx,%rbp,2),%esi
 115:	6e                   	outsb  %ds:(%rsi),(%dx)
 116:	20 2d 66 63 66 2d    	and    %ch,0x2d666366(%rip)        # 2d666482 <_end+0x2d63b472>
 11c:	70 72                	jo     190 <__ImageBase+0x190>
 11e:	6f                   	outsl  %ds:(%rsi),(%dx)
 11f:	74 65                	je     186 <__ImageBase+0x186>
 121:	63 74 69 6f          	movsxd 0x6f(%rcx,%rbp,2),%esi
 125:	6e                   	outsb  %ds:(%rsi),(%dx)
 126:	00 73 68             	add    %dh,0x68(%rbx)
 129:	6f                   	outsl  %ds:(%rsi),(%dx)
 12a:	72 74                	jb     1a0 <__ImageBase+0x1a0>
 12c:	20 69 6e             	and    %ch,0x6e(%rcx)
 12f:	74 00                	je     131 <__ImageBase+0x131>
 131:	61                   	(bad)  
 132:	73 6d                	jae    1a1 <__ImageBase+0x1a1>
 134:	2e 53                	cs push %rbx
 136:	00 2f                	add    %ch,(%rdi)
 138:	68 6f 6d 65 2f       	push   $0x2f656d6f
 13d:	6a 61                	push   $0x61
 13f:	6e                   	outsb  %ds:(%rsi),(%dx)
 140:	2f                   	(bad)  
 141:	70 77                	jo     1ba <__ImageBase+0x1ba>
 143:	6d                   	insl   (%dx),%es:(%rdi)
 144:	61                   	(bad)  
 145:	6e                   	outsb  %ds:(%rsi),(%dx)
 146:	61                   	(bad)  
 147:	67 65 72 2f          	addr32 gs jb 17a <__ImageBase+0x17a>
 14b:	45 6e                	rex.RB outsb %ds:(%rsi),(%dx)
 14d:	63 6c 61 76          	movsxd 0x76(%rcx,%riz,2),%ebp
 151:	65 00 47 4e          	add    %al,%gs:0x4e(%rdi)
 155:	55                   	push   %rbp
 156:	20 41 53             	and    %al,0x53(%rcx)
 159:	20 32                	and    %dh,(%rdx)
 15b:	2e 33 36             	cs xor (%rsi),%esi
 15e:	2e 31 00             	cs xor %eax,(%rax)
 161:	53                   	push   %rbx
 162:	47 58                	rex.RXB pop %r8
 164:	5f                   	pop    %rdi
 165:	45 52                	rex.RB push %r10
 167:	52                   	push   %rdx
 168:	4f 52                	rex.WRXB push %r10
 16a:	5f                   	pop    %rdi
 16b:	55                   	push   %rbp
 16c:	4e                   	rex.WRX
 16d:	45 58                	rex.RB pop %r8
 16f:	50                   	push   %rax
 170:	45                   	rex.RB
 171:	43 54                	rex.XB push %r12
 173:	45                   	rex.RB
 174:	44 00 53 47          	add    %r10b,0x47(%rbx)
 178:	58                   	pop    %rax
 179:	5f                   	pop    %rdi
 17a:	45 52                	rex.RB push %r10
 17c:	52                   	push   %rdx
 17d:	4f 52                	rex.WRXB push %r10
 17f:	5f                   	pop    %rdi
 180:	4d                   	rex.WRB
 181:	4f                   	rex.WRXB
 182:	44                   	rex.R
 183:	45 5f                	rex.RB pop %r15
 185:	49                   	rex.WB
 186:	4e                   	rex.WRX
 187:	43                   	rex.XB
 188:	4f                   	rex.WRXB
 189:	4d 50                	rex.WRB push %r8
 18b:	41 54                	push   %r12
 18d:	49                   	rex.WB
 18e:	42                   	rex.X
 18f:	4c                   	rex.WR
 190:	45 00 53 47          	add    %r10b,0x47(%r11)
 194:	58                   	pop    %rax
 195:	5f                   	pop    %rdi
 196:	50                   	push   %rax
 197:	54                   	push   %rsp
 198:	48 52                	rex.W push %rdx
 19a:	45                   	rex.RB
 19b:	41                   	rex.B
 19c:	44 5f                	rex.R pop %rdi
 19e:	45 58                	rex.RB pop %r8
 1a0:	49 54                	rex.WB push %r12
 1a2:	00 6f 63             	add    %ch,0x63(%rdi)
 1a5:	61                   	(bad)  
 1a6:	6c                   	insb   (%dx),%es:(%rdi)
 1a7:	6c                   	insb   (%dx),%es:(%rdi)
 1a8:	6f                   	outsl  %ds:(%rsi),(%dx)
 1a9:	63 5f 73             	movsxd 0x73(%rdi),%ebx
 1ac:	69 7a 65 00 5f 5f 75 	imul   $0x755f5f00,0x65(%rdx),%edi
 1b3:	69 6e 74 38 5f 74 00 	imul   $0x745f38,0x74(%rsi),%ebp
 1ba:	53                   	push   %rbx
 1bb:	47 58                	rex.RXB pop %r8
 1bd:	5f                   	pop    %rdi
 1be:	45 52                	rex.RB push %r10
 1c0:	52                   	push   %rdx
 1c1:	4f 52                	rex.WRXB push %r10
 1c3:	5f                   	pop    %rdi
 1c4:	4d                   	rex.WRB
 1c5:	43 5f                	rex.XB pop %r15
 1c7:	4e                   	rex.WRX
 1c8:	4f 54                	rex.WRXB push %r12
 1ca:	5f                   	pop    %rdi
 1cb:	46                   	rex.RX
 1cc:	4f 55                	rex.WRXB push %r13
 1ce:	4e                   	rex.WRX
 1cf:	44 00 6d 73          	add    %r13b,0x73(%rbp)
 1d3:	5f                   	pop    %rdi
 1d4:	73 74                	jae    24a <__ImageBase+0x24a>
 1d6:	72 00                	jb     1d8 <__ImageBase+0x1d8>
 1d8:	53                   	push   %rbx
 1d9:	47 58                	rex.RXB pop %r8
 1db:	5f                   	pop    %rdi
 1dc:	45 52                	rex.RB push %r10
 1de:	52                   	push   %rdx
 1df:	4f 52                	rex.WRXB push %r10
 1e1:	5f                   	pop    %rdi
 1e2:	49                   	rex.WB
 1e3:	4e 56                	rex.WRX push %rsi
 1e5:	41                   	rex.B
 1e6:	4c                   	rex.WR
 1e7:	49                   	rex.WB
 1e8:	44 5f                	rex.R pop %rdi
 1ea:	45                   	rex.RB
 1eb:	4e                   	rex.WRX
 1ec:	43                   	rex.XB
 1ed:	4c                   	rex.WR
 1ee:	41 56                	push   %r14
 1f0:	45 5f                	rex.RB pop %r15
 1f2:	49                   	rex.WB
 1f3:	44 00 6d 73          	add    %r13b,0x73(%rbp)
 1f7:	5f                   	pop    %rdi
 1f8:	70 77                	jo     271 <__ImageBase+0x271>
 1fa:	00 53 47             	add    %dl,0x47(%rbx)
 1fd:	58                   	pop    %rax
 1fe:	5f                   	pop    %rdi
 1ff:	45 52                	rex.RB push %r10
 201:	52                   	push   %rdx
 202:	4f 52                	rex.WRXB push %r10
 204:	5f                   	pop    %rdi
 205:	49                   	rex.WB
 206:	4e 56                	rex.WRX push %rsi
 208:	41                   	rex.B
 209:	4c                   	rex.WR
 20a:	49                   	rex.WB
 20b:	44 5f                	rex.R pop %rdi
 20d:	53                   	push   %rbx
 20e:	49                   	rex.WB
 20f:	47                   	rex.RXB
 210:	4e                   	rex.WRX
 211:	41 54                	push   %r12
 213:	55                   	push   %rbp
 214:	52                   	push   %rdx
 215:	45 00 73 67          	add    %r14b,0x67(%r11)
 219:	78 5f                	js     27a <__ImageBase+0x27a>
 21b:	6f                   	outsl  %ds:(%rsi),(%dx)
 21c:	63 61 6c             	movsxd 0x6c(%rcx),%esp
 21f:	6c                   	insb   (%dx),%es:(%rdi)
 220:	00 53 47             	add    %dl,0x47(%rbx)
 223:	58                   	pop    %rax
 224:	5f                   	pop    %rdi
 225:	45 52                	rex.RB push %r10
 227:	52                   	push   %rdx
 228:	4f 52                	rex.WRXB push %r10
 22a:	5f                   	pop    %rdi
 22b:	55                   	push   %rbp
 22c:	4e 53                	rex.WRX push %rbx
 22e:	55                   	push   %rbp
 22f:	50                   	push   %rax
 230:	50                   	push   %rax
 231:	4f 52                	rex.WRXB push %r10
 233:	54                   	push   %rsp
 234:	45                   	rex.RB
 235:	44 5f                	rex.R pop %rdi
 237:	43                   	rex.XB
 238:	4f                   	rex.WRXB
 239:	4e                   	rex.WRX
 23a:	46                   	rex.RX
 23b:	49                   	rex.WB
 23c:	47 00 6d 73          	rex.RXB add %r13b,0x73(%r13)
 240:	5f                   	pop    %rdi
 241:	65 63 61 6c          	movsxd %gs:0x6c(%rcx),%esp
 245:	6c                   	insb   (%dx),%es:(%rdi)
 246:	5f                   	pop    %rdi
 247:	6c                   	insb   (%dx),%es:(%rdi)
 248:	6f                   	outsl  %ds:(%rsi),(%dx)
 249:	67 69 6e 5f 74 00 73 	imul   $0x67730074,0x5f(%esi),%ebp
 250:	67 
 251:	78 5f                	js     2b2 <__ImageBase+0x2b2>
 253:	65 63 61 6c          	movsxd %gs:0x6c(%rcx),%esp
 257:	6c                   	insb   (%dx),%es:(%rdi)
 258:	5f                   	pop    %rdi
 259:	6c                   	insb   (%dx),%es:(%rdi)
 25a:	6f                   	outsl  %ds:(%rsi),(%dx)
 25b:	67 69 6e 00 53 47 58 	imul   $0x5f584753,0x0(%esi),%ebp
 262:	5f 
 263:	45 52                	rex.RB push %r10
 265:	52                   	push   %rdx
 266:	4f 52                	rex.WRXB push %r10
 268:	5f                   	pop    %rdi
 269:	45                   	rex.RB
 26a:	4e                   	rex.WRX
 26b:	43                   	rex.XB
 26c:	4c                   	rex.WR
 26d:	41 56                	push   %r14
 26f:	45 5f                	rex.RB pop %r15
 271:	46                   	rex.RX
 272:	49                   	rex.WB
 273:	4c                   	rex.WR
 274:	45 5f                	rex.RB pop %r15
 276:	41                   	rex.B
 277:	43                   	rex.XB
 278:	43                   	rex.XB
 279:	45 53                	rex.RB push %r11
 27b:	53                   	push   %rbx
 27c:	00 6d 65             	add    %ch,0x65(%rbp)
 27f:	6d                   	insl   (%dx),%es:(%rdi)
 280:	63 70 79             	movsxd 0x79(%rax),%esi
 283:	5f                   	pop    %rdi
 284:	73 00                	jae    286 <__ImageBase+0x286>
 286:	5f                   	pop    %rdi
 287:	6c                   	insb   (%dx),%es:(%rdi)
 288:	65 6e                	outsb  %gs:(%rsi),(%dx)
 28a:	5f                   	pop    %rdi
 28b:	70 77                	jo     304 <__ImageBase+0x304>
 28d:	00 53 47             	add    %dl,0x47(%rbx)
 290:	58                   	pop    %rax
 291:	5f                   	pop    %rdi
 292:	45 52                	rex.RB push %r10
 294:	52                   	push   %rdx
 295:	4f 52                	rex.WRXB push %r10
 297:	5f                   	pop    %rdi
 298:	46                   	rex.RX
 299:	49                   	rex.WB
 29a:	4c                   	rex.WR
 29b:	45 5f                	rex.RB pop %r15
 29d:	4e                   	rex.WRX
 29e:	4f 54                	rex.WRXB push %r12
 2a0:	5f                   	pop    %rdi
 2a1:	53                   	push   %rbx
 2a2:	47 58                	rex.RXB pop %r8
 2a4:	5f                   	pop    %rdi
 2a5:	46                   	rex.RX
 2a6:	49                   	rex.WB
 2a7:	4c                   	rex.WR
 2a8:	45 00 73 67          	add    %r14b,0x67(%r11)
 2ac:	78 5f                	js     30d <__ImageBase+0x30d>
 2ae:	69 73 5f 77 69 74 68 	imul   $0x68746977,0x5f(%rbx),%esi
 2b5:	69 6e 5f 65 6e 63 6c 	imul   $0x6c636e65,0x5f(%rsi),%ebp
 2bc:	61                   	(bad)  
 2bd:	76 65                	jbe    324 <__ImageBase+0x324>
 2bf:	00 53 47             	add    %dl,0x47(%rbx)
 2c2:	58                   	pop    %rax
 2c3:	5f                   	pop    %rdi
 2c4:	45 52                	rex.RB push %r10
 2c6:	52                   	push   %rdx
 2c7:	4f 52                	rex.WRXB push %r10
 2c9:	5f                   	pop    %rdi
 2ca:	46                   	rex.RX
 2cb:	49                   	rex.WB
 2cc:	4c                   	rex.WR
 2cd:	45 5f                	rex.RB pop %r15
 2cf:	4e                   	rex.WRX
 2d0:	4f 5f                	rex.WRXB pop %r15
 2d2:	4b                   	rex.WXB
 2d3:	45 59                	rex.RB pop %r9
 2d5:	5f                   	pop    %rdi
 2d6:	49                   	rex.WB
 2d7:	44 00 53 47          	add    %r10b,0x47(%rbx)
 2db:	58                   	pop    %rax
 2dc:	5f                   	pop    %rdi
 2dd:	45 52                	rex.RB push %r10
 2df:	52                   	push   %rdx
 2e0:	4f 52                	rex.WRXB push %r10
 2e2:	5f                   	pop    %rdi
 2e3:	46                   	rex.RX
 2e4:	49                   	rex.WB
 2e5:	4c                   	rex.WR
 2e6:	45 5f                	rex.RB pop %r15
 2e8:	43                   	rex.XB
 2e9:	41                   	rex.B
 2ea:	4e 54                	rex.WRX push %rsp
 2ec:	5f                   	pop    %rdi
 2ed:	57                   	push   %rdi
 2ee:	52                   	push   %rdx
 2ef:	49 54                	rex.WB push %r12
 2f1:	45 5f                	rex.RB pop %r15
 2f3:	52                   	push   %rdx
 2f4:	45                   	rex.RB
 2f5:	43                   	rex.XB
 2f6:	4f 56                	rex.WRXB push %r14
 2f8:	45 52                	rex.RB push %r10
 2fa:	59                   	pop    %rcx
 2fb:	5f                   	pop    %rdi
 2fc:	46                   	rex.RX
 2fd:	49                   	rex.WB
 2fe:	4c                   	rex.WR
 2ff:	45 00 53 47          	add    %r10b,0x47(%r11)
 303:	58                   	pop    %rax
 304:	5f                   	pop    %rdi
 305:	45 52                	rex.RB push %r10
 307:	52                   	push   %rdx
 308:	4f 52                	rex.WRXB push %r10
 30a:	5f                   	pop    %rdi
 30b:	4f 55                	rex.WRXB push %r13
 30d:	54                   	push   %rsp
 30e:	5f                   	pop    %rdi
 30f:	4f                   	rex.WRXB
 310:	46 5f                	rex.RX pop %rdi
 312:	54                   	push   %rsp
 313:	43 53                	rex.XB push %r11
 315:	00 53 47             	add    %dl,0x47(%rbx)
 318:	58                   	pop    %rax
 319:	5f                   	pop    %rdi
 31a:	45 52                	rex.RB push %r10
 31c:	52                   	push   %rdx
 31d:	4f 52                	rex.WRXB push %r10
 31f:	5f                   	pop    %rdi
 320:	49                   	rex.WB
 321:	4e 56                	rex.WRX push %rsi
 323:	41                   	rex.B
 324:	4c                   	rex.WR
 325:	49                   	rex.WB
 326:	44 5f                	rex.R pop %rdi
 328:	49 53                	rex.WB push %r11
 32a:	56                   	push   %rsi
 32b:	53                   	push   %rbx
 32c:	56                   	push   %rsi
 32d:	4e 00 53 47          	rex.WRX add %r10b,0x47(%rbx)
 331:	58                   	pop    %rax
 332:	5f                   	pop    %rdi
 333:	45 52                	rex.RB push %r10
 335:	52                   	push   %rdx
 336:	4f 52                	rex.WRXB push %r10
 338:	5f                   	pop    %rdi
 339:	50                   	push   %rax
 33a:	4c                   	rex.WR
 33b:	41 54                	push   %r12
 33d:	46                   	rex.RX
 33e:	4f 52                	rex.WRXB push %r10
 340:	4d 5f                	rex.WRB pop %r15
 342:	43                   	rex.XB
 343:	45 52                	rex.RB push %r10
 345:	54                   	push   %rsp
 346:	5f                   	pop    %rdi
 347:	55                   	push   %rbp
 348:	4e                   	rex.WRX
 349:	41 56                	push   %r14
 34b:	41                   	rex.B
 34c:	49                   	rex.WB
 34d:	4c                   	rex.WR
 34e:	41                   	rex.B
 34f:	42                   	rex.X
 350:	4c                   	rex.WR
 351:	45 00 53 47          	add    %r10b,0x47(%r11)
 355:	58                   	pop    %rax
 356:	5f                   	pop    %rdi
 357:	45 52                	rex.RB push %r10
 359:	52                   	push   %rdx
 35a:	4f 52                	rex.WRXB push %r10
 35c:	5f                   	pop    %rdi
 35d:	46                   	rex.RX
 35e:	49                   	rex.WB
 35f:	4c                   	rex.WR
 360:	45 5f                	rex.RB pop %r15
 362:	43                   	rex.XB
 363:	4c                   	rex.WR
 364:	4f 53                	rex.WRXB push %r11
 366:	45 5f                	rex.RB pop %r15
 368:	46                   	rex.RX
 369:	41                   	rex.B
 36a:	49                   	rex.WB
 36b:	4c                   	rex.WR
 36c:	45                   	rex.RB
 36d:	44 00 6e 72          	add    %r13b,0x72(%rsi)
 371:	5f                   	pop    %rdi
 372:	65 63 61 6c          	movsxd %gs:0x6c(%rcx),%esp
 376:	6c                   	insb   (%dx),%es:(%rdi)
 377:	00 53 47             	add    %dl,0x47(%rbx)
 37a:	58                   	pop    %rax
 37b:	5f                   	pop    %rdi
 37c:	45 52                	rex.RB push %r10
 37e:	52                   	push   %rdx
 37f:	4f 52                	rex.WRXB push %r10
 381:	5f                   	pop    %rdi
 382:	4d                   	rex.WRB
 383:	45                   	rex.RB
 384:	4d                   	rex.WRB
 385:	4f 52                	rex.WRXB push %r10
 387:	59                   	pop    %rcx
 388:	5f                   	pop    %rdi
 389:	4d                   	rex.WRB
 38a:	41 50                	push   %r8
 38c:	5f                   	pop    %rdi
 38d:	46                   	rex.RX
 38e:	41                   	rex.B
 38f:	49                   	rex.WB
 390:	4c 55                	rex.WR push %rbp
 392:	52                   	push   %rdx
 393:	45 00 6d 73          	add    %r13b,0x73(%r13)
 397:	5f                   	pop    %rdi
 398:	6f                   	outsl  %ds:(%rsi),(%dx)
 399:	63 61 6c             	movsxd 0x6c(%rcx),%esp
 39c:	6c                   	insb   (%dx),%es:(%rdi)
 39d:	5f                   	pop    %rdi
 39e:	70 72                	jo     412 <__ImageBase+0x412>
 3a0:	69 6e 74 5f 61 64 64 	imul   $0x6464615f,0x74(%rsi),%ebp
 3a7:	72 65                	jb     40e <__ImageBase+0x40e>
 3a9:	73 73                	jae    41e <__ImageBase+0x41e>
 3ab:	5f                   	pop    %rdi
 3ac:	74 00                	je     3ae <__ImageBase+0x3ae>
 3ae:	53                   	push   %rbx
 3af:	47 58                	rex.RXB pop %r8
 3b1:	5f                   	pop    %rdi
 3b2:	45 52                	rex.RB push %r10
 3b4:	52                   	push   %rdx
 3b5:	4f 52                	rex.WRXB push %r10
 3b7:	5f                   	pop    %rdi
 3b8:	55                   	push   %rbp
 3b9:	4e                   	rex.WRX
 3ba:	44                   	rex.R
 3bb:	45                   	rex.RB
 3bc:	46                   	rex.RX
 3bd:	49                   	rex.WB
 3be:	4e                   	rex.WRX
 3bf:	45                   	rex.RB
 3c0:	44 5f                	rex.R pop %rdi
 3c2:	53                   	push   %rbx
 3c3:	59                   	pop    %rcx
 3c4:	4d                   	rex.WRB
 3c5:	42                   	rex.X
 3c6:	4f                   	rex.WRXB
 3c7:	4c 00 53 47          	rex.WR add %r10b,0x47(%rbx)
 3cb:	58                   	pop    %rax
 3cc:	5f                   	pop    %rdi
 3cd:	45 52                	rex.RB push %r10
 3cf:	52                   	push   %rdx
 3d0:	4f 52                	rex.WRXB push %r10
 3d2:	5f                   	pop    %rdi
 3d3:	49                   	rex.WB
 3d4:	4e 56                	rex.WRX push %rsi
 3d6:	41                   	rex.B
 3d7:	4c                   	rex.WR
 3d8:	49                   	rex.WB
 3d9:	44 5f                	rex.R pop %rdi
 3db:	45                   	rex.RB
 3dc:	4e                   	rex.WRX
 3dd:	43                   	rex.XB
 3de:	4c                   	rex.WR
 3df:	41 56                	push   %r14
 3e1:	45 00 53 47          	add    %r10b,0x47(%r11)
 3e5:	58                   	pop    %rax
 3e6:	5f                   	pop    %rdi
 3e7:	45 52                	rex.RB push %r10
 3e9:	52                   	push   %rdx
 3ea:	4f 52                	rex.WRXB push %r10
 3ec:	5f                   	pop    %rdi
 3ed:	45                   	rex.RB
 3ee:	43                   	rex.XB
 3ef:	41                   	rex.B
 3f0:	4c                   	rex.WR
 3f1:	4c 5f                	rex.WR pop %rdi
 3f3:	4e                   	rex.WRX
 3f4:	4f 54                	rex.WRXB push %r12
 3f6:	5f                   	pop    %rdi
 3f7:	41                   	rex.B
 3f8:	4c                   	rex.WR
 3f9:	4c                   	rex.WR
 3fa:	4f 57                	rex.WRXB push %r15
 3fc:	45                   	rex.RB
 3fd:	44 00 5f 5f          	add    %r11b,0x5f(%rdi)
 401:	74 6d                	je     470 <__ImageBase+0x470>
 403:	70 00                	jo     405 <__ImageBase+0x405>
 405:	53                   	push   %rbx
 406:	47 58                	rex.RXB pop %r8
 408:	5f                   	pop    %rdi
 409:	45 52                	rex.RB push %r10
 40b:	52                   	push   %rdx
 40c:	4f 52                	rex.WRXB push %r10
 40e:	5f                   	pop    %rdi
 40f:	49                   	rex.WB
 410:	4e 56                	rex.WRX push %rsi
 412:	41                   	rex.B
 413:	4c                   	rex.WR
 414:	49                   	rex.WB
 415:	44 5f                	rex.R pop %rdi
 417:	4d                   	rex.WRB
 418:	45 54                	rex.RB push %r12
 41a:	41                   	rex.B
 41b:	44                   	rex.R
 41c:	41 54                	push   %r12
 41e:	41 00 5f 5f          	add    %bl,0x5f(%r15)
 422:	73 69                	jae    48d <__ImageBase+0x48d>
 424:	7a 65                	jp     48b <__ImageBase+0x48b>
 426:	5f                   	pop    %rdi
 427:	74 00                	je     429 <__ImageBase+0x429>
 429:	53                   	push   %rbx
 42a:	47 58                	rex.RXB pop %r8
 42c:	5f                   	pop    %rdi
 42d:	45 52                	rex.RB push %r10
 42f:	52                   	push   %rdx
 430:	4f 52                	rex.WRXB push %r10
 432:	5f                   	pop    %rdi
 433:	4d                   	rex.WRB
 434:	43 5f                	rex.XB pop %r15
 436:	4e                   	rex.WRX
 437:	4f 5f                	rex.WRXB pop %r15
 439:	41                   	rex.B
 43a:	43                   	rex.XB
 43b:	43                   	rex.XB
 43c:	45 53                	rex.RB push %r11
 43e:	53                   	push   %rbx
 43f:	5f                   	pop    %rdi
 440:	52                   	push   %rdx
 441:	49                   	rex.WB
 442:	47                   	rex.RXB
 443:	48 54                	rex.W push %rsp
 445:	00 53 47             	add    %dl,0x47(%rbx)
 448:	58                   	pop    %rax
 449:	5f                   	pop    %rdi
 44a:	45 52                	rex.RB push %r10
 44c:	52                   	push   %rdx
 44d:	4f 52                	rex.WRXB push %r10
 44f:	5f                   	pop    %rdi
 450:	53                   	push   %rbx
 451:	45 52                	rex.RB push %r10
 453:	56                   	push   %rsi
 454:	49                   	rex.WB
 455:	43                   	rex.XB
 456:	45 5f                	rex.RB pop %r15
 458:	54                   	push   %rsp
 459:	49                   	rex.WB
 45a:	4d                   	rex.WRB
 45b:	45                   	rex.RB
 45c:	4f 55                	rex.WRXB push %r13
 45e:	54                   	push   %rsp
 45f:	00 6d 73             	add    %ch,0x73(%rbp)
 462:	5f                   	pop    %rdi
 463:	65 63 61 6c          	movsxd %gs:0x6c(%rcx),%esp
 467:	6c                   	insb   (%dx),%es:(%rdi)
 468:	5f                   	pop    %rdi
 469:	6c                   	insb   (%dx),%es:(%rdi)
 46a:	6f                   	outsl  %ds:(%rsi),(%dx)
 46b:	67 6f                	outsl  %ds:(%esi),(%dx)
 46d:	75 74                	jne    4e3 <__ImageBase+0x4e3>
 46f:	5f                   	pop    %rdi
 470:	74 00                	je     472 <__ImageBase+0x472>
 472:	6d                   	insl   (%dx),%es:(%rdi)
 473:	73 5f                	jae    4d4 <__ImageBase+0x4d4>
 475:	70 77                	jo     4ee <__ImageBase+0x4ee>
 477:	5f                   	pop    %rdi
 478:	6c                   	insb   (%dx),%es:(%rdi)
 479:	65 6e                	outsb  %gs:(%rsi),(%dx)
 47b:	00 73 74             	add    %dh,0x74(%rbx)
 47e:	72 6c                	jb     4ec <__ImageBase+0x4ec>
 480:	65 6e                	outsb  %gs:(%rsi),(%dx)
 482:	00 53 47             	add    %dl,0x47(%rbx)
 485:	58                   	pop    %rax
 486:	5f                   	pop    %rdi
 487:	45 52                	rex.RB push %r10
 489:	52                   	push   %rdx
 48a:	4f 52                	rex.WRXB push %r10
 48c:	5f                   	pop    %rdi
 48d:	50                   	push   %rax
 48e:	43                   	rex.XB
 48f:	4c 5f                	rex.WR pop %rdi
 491:	53                   	push   %rbx
 492:	48                   	rex.W
 493:	41 5f                	pop    %r15
 495:	4d                   	rex.WRB
 496:	49 53                	rex.WB push %r11
 498:	4d                   	rex.WRB
 499:	41 54                	push   %r12
 49b:	43                   	rex.XB
 49c:	48 00 6d 73          	rex.W add %bpl,0x73(%rbp)
 4a0:	5f                   	pop    %rdi
 4a1:	64 65 76 69          	fs gs jbe 50e <__ImageBase+0x50e>
 4a5:	63 65 49             	movsxd 0x49(%rbp),%esp
 4a8:	64 00 53 47          	add    %dl,%fs:0x47(%rbx)
 4ac:	58                   	pop    %rax
 4ad:	5f                   	pop    %rdi
 4ae:	45 52                	rex.RB push %r10
 4b0:	52                   	push   %rdx
 4b1:	4f 52                	rex.WRXB push %r10
 4b3:	5f                   	pop    %rdi
 4b4:	49                   	rex.WB
 4b5:	4e 56                	rex.WRX push %rsi
 4b7:	41                   	rex.B
 4b8:	4c                   	rex.WR
 4b9:	49                   	rex.WB
 4ba:	44 5f                	rex.R pop %rdi
 4bc:	43 50                	rex.XB push %r8
 4be:	55                   	push   %rbp
 4bf:	53                   	push   %rbx
 4c0:	56                   	push   %rsi
 4c1:	4e 00 53 47          	rex.WRX add %r10b,0x47(%rbx)
 4c5:	58                   	pop    %rax
 4c6:	5f                   	pop    %rdi
 4c7:	45 52                	rex.RB push %r10
 4c9:	52                   	push   %rdx
 4ca:	4f 52                	rex.WRXB push %r10
 4cc:	5f                   	pop    %rdi
 4cd:	46                   	rex.RX
 4ce:	49                   	rex.WB
 4cf:	4c                   	rex.WR
 4d0:	45 5f                	rex.RB pop %r15
 4d2:	42                   	rex.X
 4d3:	41                   	rex.B
 4d4:	44 5f                	rex.R pop %rdi
 4d6:	53                   	push   %rbx
 4d7:	54                   	push   %rsp
 4d8:	41 54                	push   %r12
 4da:	55                   	push   %rbp
 4db:	53                   	push   %rbx
 4dc:	00 53 47             	add    %dl,0x47(%rbx)
 4df:	58                   	pop    %rax
 4e0:	5f                   	pop    %rdi
 4e1:	45 52                	rex.RB push %r10
 4e3:	52                   	push   %rdx
 4e4:	4f 52                	rex.WRXB push %r10
 4e6:	5f                   	pop    %rdi
 4e7:	55                   	push   %rbp
 4e8:	4e 52                	rex.WRX push %rdx
 4ea:	45                   	rex.RB
 4eb:	43                   	rex.XB
 4ec:	4f                   	rex.WRXB
 4ed:	47                   	rex.RXB
 4ee:	4e                   	rex.WRX
 4ef:	49 5a                	rex.WB pop %r10
 4f1:	45                   	rex.RB
 4f2:	44 5f                	rex.R pop %rdi
 4f4:	50                   	push   %rax
 4f5:	4c                   	rex.WR
 4f6:	41 54                	push   %r12
 4f8:	46                   	rex.RX
 4f9:	4f 52                	rex.WRXB push %r10
 4fb:	4d 00 53 47          	rex.WRB add %r10b,0x47(%r11)
 4ff:	58                   	pop    %rax
 500:	5f                   	pop    %rdi
 501:	45 52                	rex.RB push %r10
 503:	52                   	push   %rdx
 504:	4f 52                	rex.WRXB push %r10
 506:	5f                   	pop    %rdi
 507:	53                   	push   %rbx
 508:	45 52                	rex.RB push %r10
 50a:	56                   	push   %rsi
 50b:	49                   	rex.WB
 50c:	43                   	rex.XB
 50d:	45 5f                	rex.RB pop %r15
 50f:	49                   	rex.WB
 510:	4e 56                	rex.WRX push %rsi
 512:	41                   	rex.B
 513:	4c                   	rex.WR
 514:	49                   	rex.WB
 515:	44 5f                	rex.R pop %rdi
 517:	50                   	push   %rax
 518:	52                   	push   %rdx
 519:	49 56                	rex.WB push %r14
 51b:	49                   	rex.WB
 51c:	4c                   	rex.WR
 51d:	45                   	rex.RB
 51e:	47                   	rex.RXB
 51f:	45 00 53 47          	add    %r10b,0x47(%r11)
 523:	58                   	pop    %rax
 524:	5f                   	pop    %rdi
 525:	45 52                	rex.RB push %r10
 527:	52                   	push   %rdx
 528:	4f 52                	rex.WRXB push %r10
 52a:	5f                   	pop    %rdi
 52b:	46                   	rex.RX
 52c:	49                   	rex.WB
 52d:	4c                   	rex.WR
 52e:	45 5f                	rex.RB pop %r15
 530:	46                   	rex.RX
 531:	4c 55                	rex.WR push %rbp
 533:	53                   	push   %rbx
 534:	48 5f                	rex.W pop %rdi
 536:	46                   	rex.RX
 537:	41                   	rex.B
 538:	49                   	rex.WB
 539:	4c                   	rex.WR
 53a:	45                   	rex.RB
 53b:	44 00 5f 6c          	add    %r11b,0x6c(%rdi)
 53f:	65 6e                	outsb  %gs:(%rsi),(%dx)
 541:	5f                   	pop    %rdi
 542:	73 74                	jae    5b8 <__ImageBase+0x5b8>
 544:	72 00                	jb     546 <__ImageBase+0x546>
 546:	5f                   	pop    %rdi
 547:	69 6e 5f 70 77 00 53 	imul   $0x53007770,0x5f(%rsi),%ebp
 54e:	47 58                	rex.RXB pop %r8
 550:	5f                   	pop    %rdi
 551:	45 52                	rex.RB push %r10
 553:	52                   	push   %rdx
 554:	4f 52                	rex.WRXB push %r10
 556:	5f                   	pop    %rdi
 557:	42 55                	rex.X push %rbp
 559:	53                   	push   %rbx
 55a:	59                   	pop    %rcx
 55b:	00 53 47             	add    %dl,0x47(%rbx)
 55e:	58                   	pop    %rax
 55f:	5f                   	pop    %rdi
 560:	45 52                	rex.RB push %r10
 562:	52                   	push   %rdx
 563:	4f 52                	rex.WRXB push %r10
 565:	5f                   	pop    %rdi
 566:	4d                   	rex.WRB
 567:	43 5f                	rex.XB pop %r15
 569:	4f 56                	rex.WRXB push %r14
 56b:	45 52                	rex.RB push %r10
 56d:	5f                   	pop    %rdi
 56e:	51                   	push   %rcx
 56f:	55                   	push   %rbp
 570:	4f 54                	rex.WRXB push %r12
 572:	41 00 53 47          	add    %dl,0x47(%r11)
 576:	58                   	pop    %rax
 577:	5f                   	pop    %rdi
 578:	45 52                	rex.RB push %r10
 57a:	52                   	push   %rdx
 57b:	4f 52                	rex.WRXB push %r10
 57d:	5f                   	pop    %rdi
 57e:	45 50                	rex.RB push %r8
 580:	49                   	rex.WB
 581:	44 5f                	rex.R pop %rdi
 583:	4d                   	rex.WRB
 584:	45                   	rex.RB
 585:	4d                   	rex.WRB
 586:	42                   	rex.X
 587:	45 52                	rex.RB push %r10
 589:	5f                   	pop    %rdi
 58a:	52                   	push   %rdx
 58b:	45 56                	rex.RB push %r14
 58d:	4f                   	rex.WRXB
 58e:	4b                   	rex.WXB
 58f:	45                   	rex.RB
 590:	44 00 53 47          	add    %r10b,0x47(%rbx)
 594:	58                   	pop    %rax
 595:	5f                   	pop    %rdi
 596:	45 52                	rex.RB push %r10
 598:	52                   	push   %rdx
 599:	4f 52                	rex.WRXB push %r10
 59b:	5f                   	pop    %rdi
 59c:	46                   	rex.RX
 59d:	49                   	rex.WB
 59e:	4c                   	rex.WR
 59f:	45 5f                	rex.RB pop %r15
 5a1:	52                   	push   %rdx
 5a2:	45                   	rex.RB
 5a3:	43                   	rex.XB
 5a4:	4f 56                	rex.WRXB push %r14
 5a6:	45 52                	rex.RB push %r10
 5a8:	59                   	pop    %rcx
 5a9:	5f                   	pop    %rdi
 5aa:	4e                   	rex.WRX
 5ab:	45                   	rex.RB
 5ac:	45                   	rex.RB
 5ad:	44                   	rex.R
 5ae:	45                   	rex.RB
 5af:	44 00 5f 5f          	add    %r11b,0x5f(%rdi)
 5b3:	69 6e 5f 6d 73 00 53 	imul   $0x5300736d,0x5f(%rsi),%ebp
 5ba:	47 58                	rex.RXB pop %r8
 5bc:	5f                   	pop    %rdi
 5bd:	45 52                	rex.RB push %r10
 5bf:	52                   	push   %rdx
 5c0:	4f 52                	rex.WRXB push %r10
 5c2:	5f                   	pop    %rdi
 5c3:	53                   	push   %rbx
 5c4:	45 52                	rex.RB push %r10
 5c6:	56                   	push   %rsi
 5c7:	49                   	rex.WB
 5c8:	43                   	rex.XB
 5c9:	45 5f                	rex.RB pop %r15
 5cb:	55                   	push   %rbp
 5cc:	4e                   	rex.WRX
 5cd:	41 56                	push   %r14
 5cf:	41                   	rex.B
 5d0:	49                   	rex.WB
 5d1:	4c                   	rex.WR
 5d2:	41                   	rex.B
 5d3:	42                   	rex.X
 5d4:	4c                   	rex.WR
 5d5:	45 00 53 47          	add    %r10b,0x47(%r11)
 5d9:	58                   	pop    %rax
 5da:	5f                   	pop    %rdi
 5db:	45 52                	rex.RB push %r10
 5dd:	52                   	push   %rdx
 5de:	4f 52                	rex.WRXB push %r10
 5e0:	5f                   	pop    %rdi
 5e1:	41 54                	push   %r12
 5e3:	54                   	push   %rsp
 5e4:	5f                   	pop    %rdi
 5e5:	4b                   	rex.WXB
 5e6:	45 59                	rex.RB pop %r9
 5e8:	5f                   	pop    %rdi
 5e9:	55                   	push   %rbp
 5ea:	4e                   	rex.WRX
 5eb:	49                   	rex.WB
 5ec:	4e                   	rex.WRX
 5ed:	49 54                	rex.WB push %r12
 5ef:	49                   	rex.WB
 5f0:	41                   	rex.B
 5f1:	4c                   	rex.WR
 5f2:	49 5a                	rex.WB pop %r10
 5f4:	45                   	rex.RB
 5f5:	44 00 53 47          	add    %r10b,0x47(%rbx)
 5f9:	58                   	pop    %rax
 5fa:	5f                   	pop    %rdi
 5fb:	45 52                	rex.RB push %r10
 5fd:	52                   	push   %rdx
 5fe:	4f 52                	rex.WRXB push %r10
 600:	5f                   	pop    %rdi
 601:	50                   	push   %rax
 602:	43                   	rex.XB
 603:	4c 5f                	rex.WR pop %rdi
 605:	4e                   	rex.WRX
 606:	4f 54                	rex.WRXB push %r12
 608:	5f                   	pop    %rdi
 609:	45                   	rex.RB
 60a:	4e                   	rex.WRX
 60b:	43 52                	rex.XB push %r10
 60d:	59                   	pop    %rcx
 60e:	50                   	push   %rax
 60f:	54                   	push   %rsp
 610:	45                   	rex.RB
 611:	44 00 53 47          	add    %r10b,0x47(%rbx)
 615:	58                   	pop    %rax
 616:	5f                   	pop    %rdi
 617:	45 52                	rex.RB push %r10
 619:	52                   	push   %rdx
 61a:	4f 52                	rex.WRXB push %r10
 61c:	5f                   	pop    %rdi
 61d:	41                   	rex.B
 61e:	45 5f                	rex.RB pop %r15
 620:	49                   	rex.WB
 621:	4e 56                	rex.WRX push %rsi
 623:	41                   	rex.B
 624:	4c                   	rex.WR
 625:	49                   	rex.WB
 626:	44 5f                	rex.R pop %rdi
 628:	45 50                	rex.RB push %r8
 62a:	49                   	rex.WB
 62b:	44                   	rex.R
 62c:	42                   	rex.X
 62d:	4c                   	rex.WR
 62e:	4f                   	rex.WRXB
 62f:	42 00 53 47          	rex.X add %dl,0x47(%rbx)
 633:	58                   	pop    %rax
 634:	5f                   	pop    %rdi
 635:	49                   	rex.WB
 636:	4e 54                	rex.WRX push %rsp
 638:	45 52                	rex.RB push %r10
 63a:	4e                   	rex.WRX
 63b:	41                   	rex.B
 63c:	4c 5f                	rex.WR pop %rdi
 63e:	45 52                	rex.RB push %r10
 640:	52                   	push   %rdx
 641:	4f 52                	rex.WRXB push %r10
 643:	5f                   	pop    %rdi
 644:	45                   	rex.RB
 645:	4e                   	rex.WRX
 646:	43                   	rex.XB
 647:	4c                   	rex.WR
 648:	41 56                	push   %r14
 64a:	45 5f                	rex.RB pop %r15
 64c:	43 52                	rex.XB push %r10
 64e:	45                   	rex.RB
 64f:	41 54                	push   %r12
 651:	45 5f                	rex.RB pop %r15
 653:	49                   	rex.WB
 654:	4e 54                	rex.WRX push %rsp
 656:	45 52                	rex.RB push %r10
 658:	52                   	push   %rdx
 659:	55                   	push   %rbp
 65a:	50                   	push   %rax
 65b:	54                   	push   %rsp
 65c:	45                   	rex.RB
 65d:	44 00 53 47          	add    %r10b,0x47(%rbx)
 661:	58                   	pop    %rax
 662:	5f                   	pop    %rdi
 663:	45 52                	rex.RB push %r10
 665:	52                   	push   %rdx
 666:	4f 52                	rex.WRXB push %r10
 668:	5f                   	pop    %rdi
 669:	49                   	rex.WB
 66a:	4e 56                	rex.WRX push %rsi
 66c:	41                   	rex.B
 66d:	4c                   	rex.WR
 66e:	49                   	rex.WB
 66f:	44 5f                	rex.R pop %rdi
 671:	41 54                	push   %r12
 673:	54                   	push   %rsp
 674:	52                   	push   %rdx
 675:	49                   	rex.WB
 676:	42 55                	rex.X push %rbp
 678:	54                   	push   %rsp
 679:	45 00 5f 74          	add    %r11b,0x74(%r15)
 67d:	6d                   	insl   (%dx),%es:(%rdi)
 67e:	70 5f                	jo     6df <__ImageBase+0x6df>
 680:	70 77                	jo     6f9 <__ImageBase+0x6f9>
 682:	00 53 47             	add    %dl,0x47(%rbx)
 685:	58                   	pop    %rax
 686:	5f                   	pop    %rdi
 687:	45 52                	rex.RB push %r10
 689:	52                   	push   %rdx
 68a:	4f 52                	rex.WRXB push %r10
 68c:	5f                   	pop    %rdi
 68d:	46                   	rex.RX
 68e:	49                   	rex.WB
 68f:	4c                   	rex.WR
 690:	45 5f                	rex.RB pop %r15
 692:	43                   	rex.XB
 693:	41                   	rex.B
 694:	4e 54                	rex.WRX push %rsp
 696:	5f                   	pop    %rdi
 697:	4f 50                	rex.WRXB push %r8
 699:	45                   	rex.RB
 69a:	4e 5f                	rex.WRX pop %rdi
 69c:	52                   	push   %rdx
 69d:	45                   	rex.RB
 69e:	43                   	rex.XB
 69f:	4f 56                	rex.WRXB push %r14
 6a1:	45 52                	rex.RB push %r10
 6a3:	59                   	pop    %rcx
 6a4:	5f                   	pop    %rdi
 6a5:	46                   	rex.RX
 6a6:	49                   	rex.WB
 6a7:	4c                   	rex.WR
 6a8:	45 00 53 47          	add    %r10b,0x47(%r11)
 6ac:	58                   	pop    %rax
 6ad:	5f                   	pop    %rdi
 6ae:	45 52                	rex.RB push %r10
 6b0:	52                   	push   %rdx
 6b1:	4f 52                	rex.WRXB push %r10
 6b3:	5f                   	pop    %rdi
 6b4:	50                   	push   %rax
 6b5:	43                   	rex.XB
 6b6:	4c 5f                	rex.WR pop %rdi
 6b8:	45                   	rex.RB
 6b9:	4e                   	rex.WRX
 6ba:	43 52                	rex.XB push %r10
 6bc:	59                   	pop    %rcx
 6bd:	50                   	push   %rax
 6be:	54                   	push   %rsp
 6bf:	45                   	rex.RB
 6c0:	44 00 53 47          	add    %r10b,0x47(%rbx)
 6c4:	58                   	pop    %rax
 6c5:	5f                   	pop    %rdi
 6c6:	45 52                	rex.RB push %r10
 6c8:	52                   	push   %rdx
 6c9:	4f 52                	rex.WRXB push %r10
 6cb:	5f                   	pop    %rdi
 6cc:	41                   	rex.B
 6cd:	45 5f                	rex.RB pop %r15
 6cf:	53                   	push   %rbx
 6d0:	45 53                	rex.RB push %r11
 6d2:	53                   	push   %rbx
 6d3:	49                   	rex.WB
 6d4:	4f                   	rex.WRXB
 6d5:	4e 5f                	rex.WRX pop %rdi
 6d7:	49                   	rex.WB
 6d8:	4e 56                	rex.WRX push %rsi
 6da:	41                   	rex.B
 6db:	4c                   	rex.WR
 6dc:	49                   	rex.WB
 6dd:	44 00 53 47          	add    %r10b,0x47(%rbx)
 6e1:	58                   	pop    %rax
 6e2:	5f                   	pop    %rdi
 6e3:	45 52                	rex.RB push %r10
 6e5:	52                   	push   %rdx
 6e6:	4f 52                	rex.WRXB push %r10
 6e8:	5f                   	pop    %rdi
 6e9:	49                   	rex.WB
 6ea:	4e 56                	rex.WRX push %rsi
 6ec:	41                   	rex.B
 6ed:	4c                   	rex.WR
 6ee:	49                   	rex.WB
 6ef:	44 5f                	rex.R pop %rdi
 6f1:	53                   	push   %rbx
 6f2:	54                   	push   %rsp
 6f3:	41 54                	push   %r12
 6f5:	45 00 53 47          	add    %r10b,0x47(%r11)
 6f9:	58                   	pop    %rax
 6fa:	5f                   	pop    %rdi
 6fb:	45 52                	rex.RB push %r10
 6fd:	52                   	push   %rdx
 6fe:	4f 52                	rex.WRXB push %r10
 700:	5f                   	pop    %rdi
 701:	45                   	rex.RB
 702:	4e                   	rex.WRX
 703:	43                   	rex.XB
 704:	4c                   	rex.WR
 705:	41 56                	push   %r14
 707:	45 5f                	rex.RB pop %r15
 709:	43 52                	rex.XB push %r10
 70b:	41 53                	push   %r11
 70d:	48                   	rex.W
 70e:	45                   	rex.RB
 70f:	44 00 53 47          	add    %r10b,0x47(%rbx)
 713:	58                   	pop    %rax
 714:	5f                   	pop    %rdi
 715:	45 52                	rex.RB push %r10
 717:	52                   	push   %rdx
 718:	4f 52                	rex.WRXB push %r10
 71a:	5f                   	pop    %rdi
 71b:	44                   	rex.R
 71c:	45 56                	rex.RB push %r14
 71e:	49                   	rex.WB
 71f:	43                   	rex.XB
 720:	45 5f                	rex.RB pop %r15
 722:	42 55                	rex.X push %rbp
 724:	53                   	push   %rbx
 725:	59                   	pop    %rcx
 726:	00 53 47             	add    %dl,0x47(%rbx)
 729:	58                   	pop    %rax
 72a:	5f                   	pop    %rdi
 72b:	45 52                	rex.RB push %r10
 72d:	52                   	push   %rdx
 72e:	4f 52                	rex.WRXB push %r10
 730:	5f                   	pop    %rdi
 731:	4f 55                	rex.WRXB push %r13
 733:	54                   	push   %rsp
 734:	5f                   	pop    %rdi
 735:	4f                   	rex.WRXB
 736:	46 5f                	rex.RX pop %rdi
 738:	45 50                	rex.RB push %r8
 73a:	43 00 73 67          	rex.XB add %sil,0x67(%r11)
 73e:	78 5f                	js     79f <__ImageBase+0x79f>
 740:	73 74                	jae    7b6 <__ImageBase+0x7b6>
 742:	61                   	(bad)  
 743:	74 75                	je     7ba <__ImageBase+0x7ba>
 745:	73 5f                	jae    7a6 <__ImageBase+0x7a6>
 747:	74 00                	je     749 <__ImageBase+0x749>
 749:	6d                   	insl   (%dx),%es:(%rdi)
 74a:	65 6d                	gs insl (%dx),%es:(%rdi)
 74c:	63 70 79             	movsxd 0x79(%rax),%esi
 74f:	5f                   	pop    %rdi
 750:	76 65                	jbe    7b7 <__ImageBase+0x7b7>
 752:	72 77                	jb     7cb <__ImageBase+0x7cb>
 754:	5f                   	pop    %rdi
 755:	73 00                	jae    757 <__ImageBase+0x757>
 757:	5f                   	pop    %rdi
 758:	5f                   	pop    %rdi
 759:	75 69                	jne    7c4 <__ImageBase+0x7c4>
 75b:	6e                   	outsb  %ds:(%rsi),(%dx)
 75c:	74 36                	je     794 <__ImageBase+0x794>
 75e:	34 5f                	xor    $0x5f,%al
 760:	74 00                	je     762 <__ImageBase+0x762>
 762:	53                   	push   %rbx
 763:	47 58                	rex.RXB pop %r8
 765:	5f                   	pop    %rdi
 766:	53                   	push   %rbx
 767:	55                   	push   %rbp
 768:	43                   	rex.XB
 769:	43                   	rex.XB
 76a:	45 53                	rex.RB push %r11
 76c:	53                   	push   %rbx
 76d:	00 65 72             	add    %ah,0x72(%rbp)
 770:	72 6e                	jb     7e0 <__ImageBase+0x7e0>
 772:	6f                   	outsl  %ds:(%rsi),(%dx)
 773:	5f                   	pop    %rdi
 774:	74 00                	je     776 <__ImageBase+0x776>
 776:	73 67                	jae    7df <__ImageBase+0x7df>
 778:	78 5f                	js     7d9 <__ImageBase+0x7d9>
 77a:	6f                   	outsl  %ds:(%rsi),(%dx)
 77b:	63 66 72             	movsxd 0x72(%rsi),%esp
 77e:	65 65 00 53 47       	gs add %dl,%gs:0x47(%rbx)
 783:	58                   	pop    %rax
 784:	5f                   	pop    %rdi
 785:	45 52                	rex.RB push %r10
 787:	52                   	push   %rdx
 788:	4f 52                	rex.WRXB push %r10
 78a:	5f                   	pop    %rdi
 78b:	4e                   	rex.WRX
 78c:	4f 5f                	rex.WRXB pop %r15
 78e:	50                   	push   %rax
 78f:	52                   	push   %rdx
 790:	49 56                	rex.WB push %r14
 792:	49                   	rex.WB
 793:	4c                   	rex.WR
 794:	45                   	rex.RB
 795:	47                   	rex.RXB
 796:	45 00 53 47          	add    %r10b,0x47(%r11)
 79a:	58                   	pop    %rax
 79b:	5f                   	pop    %rdi
 79c:	45 52                	rex.RB push %r10
 79e:	52                   	push   %rdx
 79f:	4f 52                	rex.WRXB push %r10
 7a1:	5f                   	pop    %rdi
 7a2:	49                   	rex.WB
 7a3:	4e 56                	rex.WRX push %rsi
 7a5:	41                   	rex.B
 7a6:	4c                   	rex.WR
 7a7:	49                   	rex.WB
 7a8:	44 5f                	rex.R pop %rdi
 7aa:	50                   	push   %rax
 7ab:	41 52                	push   %r10
 7ad:	41                   	rex.B
 7ae:	4d                   	rex.WRB
 7af:	45 54                	rex.RB push %r12
 7b1:	45 52                	rex.RB push %r10
 7b3:	00 73 67             	add    %dh,0x67(%rbx)
 7b6:	78 5f                	js     817 <__ImageBase+0x817>
 7b8:	65 63 61 6c          	movsxd %gs:0x6c(%rcx),%esp
 7bc:	6c                   	insb   (%dx),%es:(%rdi)
 7bd:	5f                   	pop    %rdi
 7be:	67 65 74 5f          	addr32 gs je 821 <__ImageBase+0x821>
 7c2:	70 61                	jo     825 <__ImageBase+0x825>
 7c4:	73 73                	jae    839 <__ImageBase+0x839>
 7c6:	77 6f                	ja     837 <__ImageBase+0x837>
 7c8:	72 64                	jb     82e <__ImageBase+0x82e>
 7ca:	00 69 73             	add    %ch,0x73(%rcx)
 7cd:	5f                   	pop    %rdi
 7ce:	73 77                	jae    847 <__ImageBase+0x847>
 7d0:	69 74 63 68 6c 65 73 	imul   $0x7373656c,0x68(%rbx,%riz,2),%esi
 7d7:	73 
 7d8:	00 53 47             	add    %dl,0x47(%rbx)
 7db:	58                   	pop    %rax
 7dc:	5f                   	pop    %rdi
 7dd:	45 52                	rex.RB push %r10
 7df:	52                   	push   %rdx
 7e0:	4f 52                	rex.WRXB push %r10
 7e2:	5f                   	pop    %rdi
 7e3:	50                   	push   %rax
 7e4:	43                   	rex.XB
 7e5:	4c 5f                	rex.WR pop %rdi
 7e7:	47 55                	rex.RXB push %r13
 7e9:	49                   	rex.WB
 7ea:	44 5f                	rex.R pop %rdi
 7ec:	4d                   	rex.WRB
 7ed:	49 53                	rex.WB push %r11
 7ef:	4d                   	rex.WRB
 7f0:	41 54                	push   %r12
 7f2:	43                   	rex.XB
 7f3:	48 00 5f 5f          	rex.W add %bl,0x5f(%rdi)
 7f7:	62                   	(bad)  
 7f8:	75 69                	jne    863 <__ImageBase+0x863>
 7fa:	6c                   	insb   (%dx),%es:(%rdi)
 7fb:	74 69                	je     866 <__ImageBase+0x866>
 7fd:	6e                   	outsb  %ds:(%rsi),(%dx)
 7fe:	5f                   	pop    %rdi
 7ff:	69 61 33 32 5f 6c 66 	imul   $0x666c5f32,0x33(%rcx),%esp
 806:	65 6e                	outsb  %gs:(%rsi),(%dx)
 808:	63 65 00             	movsxd 0x0(%rbp),%esp
 80b:	53                   	push   %rbx
 80c:	47 58                	rex.RXB pop %r8
 80e:	5f                   	pop    %rdi
 80f:	45 52                	rex.RB push %r10
 811:	52                   	push   %rdx
 812:	4f 52                	rex.WRXB push %r10
 814:	5f                   	pop    %rdi
 815:	45                   	rex.RB
 816:	4e                   	rex.WRX
 817:	43                   	rex.XB
 818:	4c                   	rex.WR
 819:	41 56                	push   %r14
 81b:	45 5f                	rex.RB pop %r15
 81d:	4c                   	rex.WR
 81e:	4f 53                	rex.WRXB push %r11
 820:	54                   	push   %rsp
 821:	00 6d 73             	add    %ch,0x73(%rbp)
 824:	5f                   	pop    %rdi
 825:	6f                   	outsl  %ds:(%rsi),(%dx)
 826:	63 61 6c             	movsxd 0x6c(%rcx),%esp
 829:	6c                   	insb   (%dx),%es:(%rdi)
 82a:	5f                   	pop    %rdi
 82b:	70 72                	jo     89f <__ImageBase+0x89f>
 82d:	69 6e 74 5f 74 00 6d 	imul   $0x6d00745f,0x74(%rsi),%ebp
 834:	73 5f                	jae    895 <__ImageBase+0x895>
 836:	65 63 61 6c          	movsxd %gs:0x6c(%rcx),%esp
 83a:	6c                   	insb   (%dx),%es:(%rdi)
 83b:	5f                   	pop    %rdi
 83c:	67 65 74 5f          	addr32 gs je 89f <__ImageBase+0x89f>
 840:	70 61                	jo     8a3 <__ImageBase+0x8a3>
 842:	73 73                	jae    8b7 <__ImageBase+0x8b7>
 844:	77 6f                	ja     8b5 <__ImageBase+0x8b5>
 846:	72 64                	jb     8ac <__ImageBase+0x8ac>
 848:	5f                   	pop    %rdi
 849:	74 00                	je     84b <__ImageBase+0x84b>
 84b:	6d                   	insl   (%dx),%es:(%rdi)
 84c:	73 5f                	jae    8ad <__ImageBase+0x8ad>
 84e:	61                   	(bad)  
 84f:	00 73 67             	add    %dh,0x67(%rbx)
 852:	78 5f                	js     8b3 <__ImageBase+0x8b3>
 854:	69 73 5f 6f 75 74 73 	imul   $0x7374756f,0x5f(%rbx),%esi
 85b:	69 64 65 5f 65 6e 63 	imul   $0x6c636e65,0x5f(%rbp,%riz,2),%esp
 862:	6c 
 863:	61                   	(bad)  
 864:	76 65                	jbe    8cb <__ImageBase+0x8cb>
 866:	00 5f 5f             	add    %bl,0x5f(%rdi)
 869:	75 69                	jne    8d4 <__ImageBase+0x8d4>
 86b:	6e                   	outsb  %ds:(%rsi),(%dx)
 86c:	74 70                	je     8de <__ImageBase+0x8de>
 86e:	74 72                	je     8e2 <__ImageBase+0x8e2>
 870:	5f                   	pop    %rdi
 871:	74 00                	je     873 <__ImageBase+0x873>
 873:	69 73 5f 70 72 69 76 	imul   $0x76697270,0x5f(%rbx),%esi
 87a:	00 65 63             	add    %ah,0x63(%rbp)
 87d:	61                   	(bad)  
 87e:	6c                   	insb   (%dx),%es:(%rdi)
 87f:	6c                   	insb   (%dx),%es:(%rdi)
 880:	5f                   	pop    %rdi
 881:	61                   	(bad)  
 882:	64 64 72 00          	fs fs jb 886 <__ImageBase+0x886>
 886:	6d                   	insl   (%dx),%es:(%rdi)
 887:	61                   	(bad)  
 888:	6c                   	insb   (%dx),%es:(%rdi)
 889:	6c                   	insb   (%dx),%es:(%rdi)
 88a:	6f                   	outsl  %ds:(%rsi),(%dx)
 88b:	63 00                	movsxd (%rax),%eax
 88d:	53                   	push   %rbx
 88e:	47 58                	rex.RXB pop %r8
 890:	5f                   	pop    %rdi
 891:	45 52                	rex.RB push %r10
 893:	52                   	push   %rdx
 894:	4f 52                	rex.WRXB push %r10
 896:	5f                   	pop    %rdi
 897:	49                   	rex.WB
 898:	4e 56                	rex.WRX push %rsi
 89a:	41                   	rex.B
 89b:	4c                   	rex.WR
 89c:	49                   	rex.WB
 89d:	44 5f                	rex.R pop %rdi
 89f:	4c                   	rex.WR
 8a0:	41 55                	push   %r13
 8a2:	4e                   	rex.WRX
 8a3:	43                   	rex.XB
 8a4:	48 5f                	rex.W pop %rdi
 8a6:	54                   	push   %rsp
 8a7:	4f                   	rex.WRXB
 8a8:	4b                   	rex.WXB
 8a9:	45                   	rex.RB
 8aa:	4e 00 53 47          	rex.WRX add %r10b,0x47(%rbx)
 8ae:	58                   	pop    %rax
 8af:	5f                   	pop    %rdi
 8b0:	45 52                	rex.RB push %r10
 8b2:	52                   	push   %rdx
 8b3:	4f 52                	rex.WRXB push %r10
 8b5:	5f                   	pop    %rdi
 8b6:	49                   	rex.WB
 8b7:	4e 56                	rex.WRX push %rsi
 8b9:	41                   	rex.B
 8ba:	4c                   	rex.WR
 8bb:	49                   	rex.WB
 8bc:	44 5f                	rex.R pop %rdi
 8be:	56                   	push   %rsi
 8bf:	45 52                	rex.RB push %r10
 8c1:	53                   	push   %rbx
 8c2:	49                   	rex.WB
 8c3:	4f                   	rex.WRXB
 8c4:	4e 00 67 5f          	rex.WRX add %r12b,0x5f(%rdi)
 8c8:	64 79 6e             	fs jns 939 <__ImageBase+0x939>
 8cb:	5f                   	pop    %rdi
 8cc:	65 6e                	outsb  %gs:(%rsi),(%dx)
 8ce:	74 72                	je     942 <__ImageBase+0x942>
 8d0:	79 5f                	jns    931 <__ImageBase+0x931>
 8d2:	74 61                	je     935 <__ImageBase+0x935>
 8d4:	62                   	(bad)  
 8d5:	6c                   	insb   (%dx),%es:(%rdi)
 8d6:	65 00 53 47          	add    %dl,%gs:0x47(%rbx)
 8da:	58                   	pop    %rax
 8db:	5f                   	pop    %rdi
 8dc:	45 52                	rex.RB push %r10
 8de:	52                   	push   %rdx
 8df:	4f 52                	rex.WRXB push %r10
 8e1:	5f                   	pop    %rdi
 8e2:	49                   	rex.WB
 8e3:	4e 56                	rex.WRX push %rsi
 8e5:	41                   	rex.B
 8e6:	4c                   	rex.WR
 8e7:	49                   	rex.WB
 8e8:	44 5f                	rex.R pop %rdi
 8ea:	46 55                	rex.RX push %rbp
 8ec:	4e                   	rex.WRX
 8ed:	43 54                	rex.XB push %r12
 8ef:	49                   	rex.WB
 8f0:	4f                   	rex.WRXB
 8f1:	4e 00 53 47          	rex.WRX add %r10b,0x47(%rbx)
 8f5:	58                   	pop    %rax
 8f6:	5f                   	pop    %rdi
 8f7:	45 52                	rex.RB push %r10
 8f9:	52                   	push   %rdx
 8fa:	4f 52                	rex.WRXB push %r10
 8fc:	5f                   	pop    %rdi
 8fd:	50                   	push   %rax
 8fe:	43                   	rex.XB
 8ff:	4c 5f                	rex.WR pop %rdi
 901:	4d                   	rex.WRB
 902:	41                   	rex.B
 903:	43 5f                	rex.XB pop %r15
 905:	4d                   	rex.WRB
 906:	49 53                	rex.WB push %r11
 908:	4d                   	rex.WRB
 909:	41 54                	push   %r12
 90b:	43                   	rex.XB
 90c:	48 00 53 47          	rex.W add %dl,0x47(%rbx)
 910:	58                   	pop    %rax
 911:	5f                   	pop    %rdi
 912:	45 52                	rex.RB push %r10
 914:	52                   	push   %rdx
 915:	4f 52                	rex.WRXB push %r10
 917:	5f                   	pop    %rdi
 918:	46                   	rex.RX
 919:	45                   	rex.RB
 91a:	41 54                	push   %r12
 91c:	55                   	push   %rbp
 91d:	52                   	push   %rdx
 91e:	45 5f                	rex.RB pop %r15
 920:	4e                   	rex.WRX
 921:	4f 54                	rex.WRXB push %r12
 923:	5f                   	pop    %rdi
 924:	53                   	push   %rbx
 925:	55                   	push   %rbp
 926:	50                   	push   %rax
 927:	50                   	push   %rax
 928:	4f 52                	rex.WRXB push %r10
 92a:	54                   	push   %rsp
 92b:	45                   	rex.RB
 92c:	44 00 53 47          	add    %r10b,0x47(%rbx)
 930:	58                   	pop    %rax
 931:	5f                   	pop    %rdi
 932:	45 52                	rex.RB push %r10
 934:	52                   	push   %rdx
 935:	4f 52                	rex.WRXB push %r10
 937:	5f                   	pop    %rdi
 938:	49                   	rex.WB
 939:	4e 56                	rex.WRX push %rsi
 93b:	41                   	rex.B
 93c:	4c                   	rex.WR
 93d:	49                   	rex.WB
 93e:	44 5f                	rex.R pop %rdi
 940:	4d                   	rex.WRB
 941:	49 53                	rex.WB push %r11
 943:	43 00 53 47          	rex.XB add %dl,0x47(%r11)
 947:	58                   	pop    %rax
 948:	5f                   	pop    %rdi
 949:	45 52                	rex.RB push %r10
 94b:	52                   	push   %rdx
 94c:	4f 52                	rex.WRXB push %r10
 94e:	5f                   	pop    %rdi
 94f:	4b                   	rex.WXB
 950:	44                   	rex.R
 951:	46 5f                	rex.RX pop %rdi
 953:	4d                   	rex.WRB
 954:	49 53                	rex.WB push %r11
 956:	4d                   	rex.WRB
 957:	41 54                	push   %r12
 959:	43                   	rex.XB
 95a:	48 00 53 47          	rex.W add %dl,0x47(%rbx)
 95e:	58                   	pop    %rax
 95f:	5f                   	pop    %rdi
 960:	45 52                	rex.RB push %r10
 962:	52                   	push   %rdx
 963:	4f 52                	rex.WRXB push %r10
 965:	5f                   	pop    %rdi
 966:	54                   	push   %rsp
 967:	4c 53                	rex.WR push %rbx
 969:	5f                   	pop    %rdi
 96a:	58                   	pop    %rax
 96b:	35 30 39 5f 49       	xor    $0x495f3930,%eax
 970:	4e 56                	rex.WRX push %rsi
 972:	41                   	rex.B
 973:	4c                   	rex.WR
 974:	49                   	rex.WB
 975:	44 5f                	rex.R pop %rdi
 977:	45 58                	rex.RB pop %r8
 979:	54                   	push   %rsp
 97a:	45                   	rex.RB
 97b:	4e 53                	rex.WRX push %rbx
 97d:	49                   	rex.WB
 97e:	4f                   	rex.WRXB
 97f:	4e 00 6f 63          	rex.WRX add %r13b,0x63(%rdi)
 983:	61                   	(bad)  
 984:	6c                   	insb   (%dx),%es:(%rdi)
 985:	6c                   	insb   (%dx),%es:(%rdi)
 986:	5f                   	pop    %rdi
 987:	70 72                	jo     9fb <__ImageBase+0x9fb>
 989:	69 6e 74 5f 61 64 64 	imul   $0x6464615f,0x74(%rsi),%ebp
 990:	72 65                	jb     9f7 <__ImageBase+0x9f7>
 992:	73 73                	jae    a07 <__ImageBase+0xa07>
 994:	00 53 47             	add    %dl,0x47(%rbx)
 997:	58                   	pop    %rax
 998:	5f                   	pop    %rdi
 999:	45 52                	rex.RB push %r10
 99b:	52                   	push   %rdx
 99c:	4f 52                	rex.WRXB push %r10
 99e:	5f                   	pop    %rdi
 99f:	4f                   	rex.WRXB
 9a0:	43                   	rex.XB
 9a1:	41                   	rex.B
 9a2:	4c                   	rex.WR
 9a3:	4c 5f                	rex.WR pop %rdi
 9a5:	4e                   	rex.WRX
 9a6:	4f 54                	rex.WRXB push %r12
 9a8:	5f                   	pop    %rdi
 9a9:	41                   	rex.B
 9aa:	4c                   	rex.WR
 9ab:	4c                   	rex.WR
 9ac:	4f 57                	rex.WRXB push %r15
 9ae:	45                   	rex.RB
 9af:	44 00 53 47          	add    %r10b,0x47(%rbx)
 9b3:	58                   	pop    %rax
 9b4:	5f                   	pop    %rdi
 9b5:	45 52                	rex.RB push %r10
 9b7:	52                   	push   %rdx
 9b8:	4f 52                	rex.WRXB push %r10
 9ba:	5f                   	pop    %rdi
 9bb:	49                   	rex.WB
 9bc:	4e 56                	rex.WRX push %rsi
 9be:	41                   	rex.B
 9bf:	4c                   	rex.WR
 9c0:	49                   	rex.WB
 9c1:	44 5f                	rex.R pop %rdi
 9c3:	4b                   	rex.WXB
 9c4:	45 59                	rex.RB pop %r9
 9c6:	4e                   	rex.WRX
 9c7:	41                   	rex.B
 9c8:	4d                   	rex.WRB
 9c9:	45 00 53 47          	add    %r10b,0x47(%r11)
 9cd:	58                   	pop    %rax
 9ce:	5f                   	pop    %rdi
 9cf:	45 52                	rex.RB push %r10
 9d1:	52                   	push   %rdx
 9d2:	4f 52                	rex.WRXB push %r10
 9d4:	5f                   	pop    %rdi
 9d5:	4e                   	rex.WRX
 9d6:	4f 5f                	rex.WRXB pop %r15
 9d8:	44                   	rex.R
 9d9:	45 56                	rex.RB push %r14
 9db:	49                   	rex.WB
 9dc:	43                   	rex.XB
 9dd:	45 00 53 47          	add    %r10b,0x47(%r11)
 9e1:	58                   	pop    %rax
 9e2:	5f                   	pop    %rdi
 9e3:	45 52                	rex.RB push %r10
 9e5:	52                   	push   %rdx
 9e6:	4f 52                	rex.WRXB push %r10
 9e8:	5f                   	pop    %rdi
 9e9:	46                   	rex.RX
 9ea:	49                   	rex.WB
 9eb:	4c                   	rex.WR
 9ec:	45 5f                	rex.RB pop %r15
 9ee:	4e                   	rex.WRX
 9ef:	41                   	rex.B
 9f0:	4d                   	rex.WRB
 9f1:	45 5f                	rex.RB pop %r15
 9f3:	4d                   	rex.WRB
 9f4:	49 53                	rex.WB push %r11
 9f6:	4d                   	rex.WRB
 9f7:	41 54                	push   %r12
 9f9:	43                   	rex.XB
 9fa:	48 00 73 67          	rex.W add %sil,0x67(%rbx)
 9fe:	78 5f                	js     a5f <__ImageBase+0xa5f>
 a00:	65 63 61 6c          	movsxd %gs:0x6c(%rcx),%esp
 a04:	6c                   	insb   (%dx),%es:(%rdi)
 a05:	5f                   	pop    %rdi
 a06:	6c                   	insb   (%dx),%es:(%rdi)
 a07:	6f                   	outsl  %ds:(%rsi),(%dx)
 a08:	67 6f                	outsl  %ds:(%esi),(%dx)
 a0a:	75 74                	jne    a80 <__ImageBase+0xa80>
 a0c:	00 53 47             	add    %dl,0x47(%rbx)
 a0f:	58                   	pop    %rax
 a10:	5f                   	pop    %rdi
 a11:	45 52                	rex.RB push %r10
 a13:	52                   	push   %rdx
 a14:	4f 52                	rex.WRXB push %r10
 a16:	5f                   	pop    %rdi
 a17:	4d                   	rex.WRB
 a18:	43 5f                	rex.XB pop %r15
 a1a:	55                   	push   %rbp
 a1b:	53                   	push   %rbx
 a1c:	45                   	rex.RB
 a1d:	44 5f                	rex.R pop %rdi
 a1f:	55                   	push   %rbp
 a20:	50                   	push   %rax
 a21:	00 67 5f             	add    %ah,0x5f(%rdi)
 a24:	65 63 61 6c          	movsxd %gs:0x6c(%rcx),%esp
 a28:	6c                   	insb   (%dx),%es:(%rdi)
 a29:	5f                   	pop    %rdi
 a2a:	74 61                	je     a8d <__ImageBase+0xa8d>
 a2c:	62                   	(bad)  
 a2d:	6c                   	insb   (%dx),%es:(%rdi)
 a2e:	65 00 53 47          	add    %dl,%gs:0x47(%rbx)
 a32:	58                   	pop    %rax
 a33:	5f                   	pop    %rdi
 a34:	45 52                	rex.RB push %r10
 a36:	52                   	push   %rdx
 a37:	4f 52                	rex.WRXB push %r10
 a39:	5f                   	pop    %rdi
 a3a:	4d                   	rex.WRB
 a3b:	41                   	rex.B
 a3c:	43 5f                	rex.XB pop %r15
 a3e:	4d                   	rex.WRB
 a3f:	49 53                	rex.WB push %r11
 a41:	4d                   	rex.WRB
 a42:	41 54                	push   %r12
 a44:	43                   	rex.XB
 a45:	48 00 53 47          	rex.W add %dl,0x47(%rbx)
 a49:	58                   	pop    %rax
 a4a:	5f                   	pop    %rdi
 a4b:	45 52                	rex.RB push %r10
 a4d:	52                   	push   %rdx
 a4e:	4f 52                	rex.WRXB push %r10
 a50:	5f                   	pop    %rdi
 a51:	4e                   	rex.WRX
 a52:	45 54                	rex.RB push %r12
 a54:	57                   	push   %rdi
 a55:	4f 52                	rex.WRXB push %r10
 a57:	4b 5f                	rex.WXB pop %r15
 a59:	46                   	rex.RX
 a5a:	41                   	rex.B
 a5b:	49                   	rex.WB
 a5c:	4c 55                	rex.WR push %rbp
 a5e:	52                   	push   %rdx
 a5f:	45 00 53 47          	add    %r10b,0x47(%r11)
 a63:	58                   	pop    %rax
 a64:	5f                   	pop    %rdi
 a65:	45 52                	rex.RB push %r10
 a67:	52                   	push   %rdx
 a68:	4f 52                	rex.WRXB push %r10
 a6a:	5f                   	pop    %rdi
 a6b:	4e                   	rex.WRX
 a6c:	44                   	rex.R
 a6d:	45                   	rex.RB
 a6e:	42 55                	rex.X push %rbp
 a70:	47 5f                	rex.RXB pop %r15
 a72:	45                   	rex.RB
 a73:	4e                   	rex.WRX
 a74:	43                   	rex.XB
 a75:	4c                   	rex.WR
 a76:	41 56                	push   %r14
 a78:	45 00 53 47          	add    %r10b,0x47(%r11)
 a7c:	58                   	pop    %rax
 a7d:	5f                   	pop    %rdi
 a7e:	45 52                	rex.RB push %r10
 a80:	52                   	push   %rdx
 a81:	4f 52                	rex.WRXB push %r10
 a83:	5f                   	pop    %rdi
 a84:	53                   	push   %rbx
 a85:	54                   	push   %rsp
 a86:	41                   	rex.B
 a87:	43                   	rex.XB
 a88:	4b 5f                	rex.WXB pop %r15
 a8a:	4f 56                	rex.WRXB push %r14
 a8c:	45 52                	rex.RB push %r10
 a8e:	52                   	push   %rdx
 a8f:	55                   	push   %rbp
 a90:	4e 00 73 74          	rex.WRX add %r14b,0x74(%rbx)
 a94:	61                   	(bad)  
 a95:	74 75                	je     b0c <__ImageBase+0xb0c>
 a97:	73 00                	jae    a99 <__ImageBase+0xa99>
 a99:	73 67                	jae    b02 <__ImageBase+0xb02>
 a9b:	78 5f                	js     afc <__ImageBase+0xafc>
 a9d:	6f                   	outsl  %ds:(%rsi),(%dx)
 a9e:	63 61 6c             	movsxd 0x6c(%rcx),%esp
 aa1:	6c                   	insb   (%dx),%es:(%rdi)
 aa2:	6f                   	outsl  %ds:(%rsi),(%dx)
 aa3:	63 00                	movsxd (%rax),%eax
 aa5:	53                   	push   %rbx
 aa6:	47 58                	rex.RXB pop %r8
 aa8:	5f                   	pop    %rdi
 aa9:	45 52                	rex.RB push %r10
 aab:	52                   	push   %rdx
 aac:	4f 52                	rex.WRXB push %r10
 aae:	5f                   	pop    %rdi
 aaf:	49                   	rex.WB
 ab0:	4e 56                	rex.WRX push %rsi
 ab2:	41                   	rex.B
 ab3:	4c                   	rex.WR
 ab4:	49                   	rex.WB
 ab5:	44 5f                	rex.R pop %rdi
 ab7:	41 54                	push   %r12
 ab9:	54                   	push   %rsp
 aba:	5f                   	pop    %rdi
 abb:	4b                   	rex.WXB
 abc:	45 59                	rex.RB pop %r9
 abe:	5f                   	pop    %rdi
 abf:	43                   	rex.XB
 ac0:	45 52                	rex.RB push %r10
 ac2:	54                   	push   %rsp
 ac3:	5f                   	pop    %rdi
 ac4:	44                   	rex.R
 ac5:	41 54                	push   %r12
 ac7:	41 00 53 47          	add    %dl,0x47(%r11)
 acb:	58                   	pop    %rax
 acc:	5f                   	pop    %rdi
 acd:	45 52                	rex.RB push %r10
 acf:	52                   	push   %rdx
 ad0:	4f 52                	rex.WRXB push %r10
 ad2:	5f                   	pop    %rdi
 ad3:	55                   	push   %rbp
 ad4:	4e 53                	rex.WRX push %rbx
 ad6:	55                   	push   %rbp
 ad7:	50                   	push   %rax
 ad8:	50                   	push   %rax
 ad9:	4f 52                	rex.WRXB push %r10
 adb:	54                   	push   %rsp
 adc:	45                   	rex.RB
 add:	44 5f                	rex.R pop %rdi
 adf:	41 54                	push   %r12
 ae1:	54                   	push   %rsp
 ae2:	5f                   	pop    %rdi
 ae3:	4b                   	rex.WXB
 ae4:	45 59                	rex.RB pop %r9
 ae6:	5f                   	pop    %rdi
 ae7:	49                   	rex.WB
 ae8:	44 00 6e 72          	add    %r13b,0x72(%rsi)
 aec:	5f                   	pop    %rdi
 aed:	6f                   	outsl  %ds:(%rsi),(%dx)
 aee:	63 61 6c             	movsxd 0x6c(%rcx),%esp
 af1:	6c                   	insb   (%dx),%es:(%rdi)
 af2:	00 53 47             	add    %dl,0x47(%rbx)
 af5:	58                   	pop    %rax
 af6:	5f                   	pop    %rdi
 af7:	45 52                	rex.RB push %r10
 af9:	52                   	push   %rdx
 afa:	4f 52                	rex.WRXB push %r10
 afc:	5f                   	pop    %rdi
 afd:	41 54                	push   %r12
 aff:	54                   	push   %rsp
 b00:	5f                   	pop    %rdi
 b01:	4b                   	rex.WXB
 b02:	45 59                	rex.RB pop %r9
 b04:	5f                   	pop    %rdi
 b05:	43                   	rex.XB
 b06:	45 52                	rex.RB push %r10
 b08:	54                   	push   %rsp
 b09:	49                   	rex.WB
 b0a:	46                   	rex.RX
 b0b:	49                   	rex.WB
 b0c:	43                   	rex.XB
 b0d:	41 54                	push   %r12
 b0f:	49                   	rex.WB
 b10:	4f                   	rex.WRXB
 b11:	4e 5f                	rex.WRX pop %rdi
 b13:	46                   	rex.RX
 b14:	41                   	rex.B
 b15:	49                   	rex.WB
 b16:	4c 55                	rex.WR push %rbp
 b18:	52                   	push   %rdx
 b19:	45 00 53 47          	add    %r10b,0x47(%r11)
 b1d:	58                   	pop    %rax
 b1e:	5f                   	pop    %rdi
 b1f:	45 52                	rex.RB push %r10
 b21:	52                   	push   %rdx
 b22:	4f 52                	rex.WRXB push %r10
 b24:	5f                   	pop    %rdi
 b25:	55                   	push   %rbp
 b26:	50                   	push   %rax
 b27:	44                   	rex.R
 b28:	41 54                	push   %r12
 b2a:	45 5f                	rex.RB pop %r15
 b2c:	4e                   	rex.WRX
 b2d:	45                   	rex.RB
 b2e:	45                   	rex.RB
 b2f:	44                   	rex.R
 b30:	45                   	rex.RB
 b31:	44 00 53 47          	add    %r10b,0x47(%rbx)
 b35:	58                   	pop    %rax
 b36:	5f                   	pop    %rdi
 b37:	45 52                	rex.RB push %r10
 b39:	52                   	push   %rdx
 b3a:	4f 52                	rex.WRXB push %r10
 b3c:	5f                   	pop    %rdi
 b3d:	4d                   	rex.WRB
 b3e:	45                   	rex.RB
 b3f:	4d                   	rex.WRB
 b40:	4f 52                	rex.WRXB push %r10
 b42:	59                   	pop    %rcx
 b43:	5f                   	pop    %rdi
 b44:	4d                   	rex.WRB
 b45:	41 50                	push   %r8
 b47:	5f                   	pop    %rdi
 b48:	43                   	rex.XB
 b49:	4f                   	rex.WRXB
 b4a:	4e                   	rex.WRX
 b4b:	46                   	rex.RX
 b4c:	4c                   	rex.WR
 b4d:	49                   	rex.WB
 b4e:	43 54                	rex.XB push %r12
 b50:	00 53 47             	add    %dl,0x47(%rbx)
 b53:	58                   	pop    %rax
 b54:	5f                   	pop    %rdi
 b55:	45 52                	rex.RB push %r10
 b57:	52                   	push   %rdx
 b58:	4f 52                	rex.WRXB push %r10
 b5a:	5f                   	pop    %rdi
 b5b:	4f 55                	rex.WRXB push %r13
 b5d:	54                   	push   %rsp
 b5e:	5f                   	pop    %rdi
 b5f:	4f                   	rex.WRXB
 b60:	46 5f                	rex.RX pop %rdi
 b62:	4d                   	rex.WRB
 b63:	45                   	rex.RB
 b64:	4d                   	rex.WRB
 b65:	4f 52                	rex.WRXB push %r10
 b67:	59                   	pop    %rcx
	...

Disassembly of section .debug_line_str:

0000000000000000 <.debug_line_str>:
   0:	65 6e                	outsb  %gs:(%rsi),(%dx)
   2:	63 6c 2e 63          	movsxd 0x63(%rsi,%rbp,1),%ebp
   6:	00 2f                	add    %ch,(%rdi)
   8:	68 6f 6d 65 2f       	push   $0x2f656d6f
   d:	6a 61                	push   $0x61
   f:	6e                   	outsb  %ds:(%rsi),(%dx)
  10:	2f                   	(bad)  
  11:	70 77                	jo     8a <__ImageBase+0x8a>
  13:	6d                   	insl   (%dx),%es:(%rdi)
  14:	61                   	(bad)  
  15:	6e                   	outsb  %ds:(%rsi),(%dx)
  16:	61                   	(bad)  
  17:	67 65 72 2f          	addr32 gs jb 4a <__ImageBase+0x4a>
  1b:	45 6e                	rex.RB outsb %ds:(%rsi),(%dx)
  1d:	63 6c 61 76          	movsxd 0x76(%rcx,%riz,2),%ebp
  21:	65 00 2f             	add    %ch,%gs:(%rdi)
  24:	6f                   	outsl  %ds:(%rsi),(%dx)
  25:	70 74                	jo     9b <__ImageBase+0x9b>
  27:	2f                   	(bad)  
  28:	69 6e 74 65 6c 2f 73 	imul   $0x732f6c65,0x74(%rsi),%ebp
  2f:	67 78 73             	addr32 js a5 <__ImageBase+0xa5>
  32:	64 6b 2f 69          	imul   $0x69,%fs:(%rdi),%ebp
  36:	6e                   	outsb  %ds:(%rsi),(%dx)
  37:	63 6c 75 64          	movsxd 0x64(%rbp,%rsi,2),%ebp
  3b:	65 2f                	gs (bad) 
  3d:	74 6c                	je     ab <__ImageBase+0xab>
  3f:	69 62 63 00 73 74 72 	imul   $0x72747300,0x63(%rdx),%esp
  46:	69 6e 67 2e 68 00 61 	imul   $0x6100682e,0x67(%rsi),%ebp
  4d:	73 6d                	jae    bc <__ImageBase+0xbc>
  4f:	2e 53                	cs push %rbx
  51:	00 65 6e             	add    %ah,0x6e(%rbp)
  54:	63 6c 5f 74          	movsxd 0x74(%rdi,%rbx,2),%ebp
  58:	2e 63 00             	cs movsxd (%rax),%eax
  5b:	2f                   	(bad)  
  5c:	6f                   	outsl  %ds:(%rsi),(%dx)
  5d:	70 74                	jo     d3 <__ImageBase+0xd3>
  5f:	2f                   	(bad)  
  60:	69 6e 74 65 6c 2f 73 	imul   $0x732f6c65,0x74(%rsi),%ebp
  67:	67 78 73             	addr32 js dd <__ImageBase+0xdd>
  6a:	64 6b 2f 69          	imul   $0x69,%fs:(%rdi),%ebp
  6e:	6e                   	outsb  %ds:(%rsi),(%dx)
  6f:	63 6c 75 64          	movsxd 0x64(%rbp,%rsi,2),%ebp
  73:	65 2f                	gs (bad) 
  75:	74 6c                	je     e3 <__ImageBase+0xe3>
  77:	69 62 63 2f 73 79 73 	imul   $0x7379732f,0x63(%rdx),%esp
  7e:	00 2f                	add    %ch,(%rdi)
  80:	6f                   	outsl  %ds:(%rsi),(%dx)
  81:	70 74                	jo     f7 <__ImageBase+0xf7>
  83:	2f                   	(bad)  
  84:	69 6e 74 65 6c 2f 73 	imul   $0x732f6c65,0x74(%rsi),%ebp
  8b:	67 78 73             	addr32 js 101 <__ImageBase+0x101>
  8e:	64 6b 2f 69          	imul   $0x69,%fs:(%rdi),%ebp
  92:	6e                   	outsb  %ds:(%rsi),(%dx)
  93:	63 6c 75 64          	movsxd 0x64(%rbp,%rsi,2),%ebp
  97:	65 00 5f 74          	add    %bl,%gs:0x74(%rdi)
  9b:	79 70                	jns    10d <__ImageBase+0x10d>
  9d:	65 73 2e             	gs jae ce <__ImageBase+0xce>
  a0:	68 00 73 74 64       	push   $0x64747300
  a5:	69 6e 74 2e 68 00 77 	imul   $0x7700682e,0x74(%rsi),%ebp
  ac:	63 68 61             	movsxd 0x61(%rax),%ebp
  af:	72 2e                	jb     df <__ImageBase+0xdf>
  b1:	68 00 73 67 78       	push   $0x78677300
  b6:	5f                   	pop    %rdi
  b7:	65 72 72             	gs jb  12c <__ImageBase+0x12c>
  ba:	6f                   	outsl  %ds:(%rsi),(%dx)
  bb:	72 2e                	jb     eb <__ImageBase+0xeb>
  bd:	68 00 73 67 78       	push   $0x78677300
  c2:	5f                   	pop    %rdi
  c3:	65 64 67 65 72 38    	gs fs addr32 gs jb 101 <__ImageBase+0x101>
  c9:	72 2e                	jb     f9 <__ImageBase+0xf9>
  cb:	68 00 6d 62 75       	push   $0x75626d00
  d0:	73 61                	jae    133 <__ImageBase+0x133>
  d2:	66 65 63 72 74       	movsxd %gs:0x74(%rdx),%si
  d7:	2e 68 00 73 67 78    	cs push $0x78677300
  dd:	5f                   	pop    %rdi
  de:	74 72                	je     152 <__ImageBase+0x152>
  e0:	74 73                	je     155 <__ImageBase+0x155>
  e2:	2e 68 00 73 74 64    	cs push $0x64747300
  e8:	6c                   	insb   (%dx),%es:(%rdi)
  e9:	69 62 2e 68 00 65 6e 	imul   $0x6e650068,0x2e(%rdx),%esp
  f0:	63 6c 5f 74          	movsxd 0x74(%rdi,%rbx,2),%ebp
  f4:	2e 68 00 73 67 78    	cs push $0x78677300
  fa:	5f                   	pop    %rdi
  fb:	6c                   	insb   (%dx),%es:(%rdi)
  fc:	66 65 6e             	data16 outsb %gs:(%rsi),(%dx)
  ff:	63 65 2e             	movsxd 0x2e(%rbp),%esp
 102:	68                   	.byte 0x68
	...

Disassembly of section .debug_loclists:

0000000000000000 <.debug_loclists>:
   0:	a3 00 00 00 05 00 08 	movabs %eax,0x80005000000
   7:	00 00 
	...
  11:	00 00                	add    %al,(%rax)
  13:	00 04 8d 01 a7 01 01 	add    %al,0x101a701(,%rcx,4)
  1a:	55                   	push   %rbp
  1b:	04 a7                	add    $0xa7,%al
  1d:	01 ab 01 04 a3 01    	add    %ebp,0x1a30401(%rbx)
  23:	55                   	push   %rbp
  24:	9f                   	lahf   
  25:	04 ab                	add    $0xab,%al
  27:	01 b2 01 01 55 04    	add    %esi,0x4550101(%rdx)
  2d:	b2 01                	mov    $0x1,%dl
  2f:	ba 01 04 a3 01       	mov    $0x1a30401,%edx
  34:	55                   	push   %rbp
  35:	9f                   	lahf   
  36:	00 00                	add    %al,(%rax)
  38:	00 00                	add    %al,(%rax)
  3a:	00 00                	add    %al,(%rax)
  3c:	00 04 64             	add    %al,(%rsp,%riz,2)
  3f:	79 01                	jns    42 <__ImageBase+0x42>
  41:	55                   	push   %rbp
  42:	04 79                	add    $0x79,%al
  44:	8c 01                	mov    %es,(%rcx)
  46:	04 a3                	add    $0xa3,%al
  48:	01 55 9f             	add    %edx,-0x61(%rbp)
  4b:	04 8c                	add    $0x8c,%al
  4d:	01 8d 01 01 55 00    	add    %ecx,0x550101(%rbp)
	...
  5b:	00 00                	add    %al,(%rax)
  5d:	04 00                	add    $0x0,%al
  5f:	14 01                	adc    $0x1,%al
  61:	55                   	push   %rbp
  62:	04 14                	add    $0x14,%al
  64:	25 01 50 04 25       	and    $0x25045001,%eax
  69:	56                   	push   %rsi
  6a:	04 a3                	add    $0xa3,%al
  6c:	01 55 9f             	add    %edx,-0x61(%rbp)
  6f:	04 56                	add    $0x56,%al
  71:	5d                   	pop    %rbp
  72:	01 55 04             	add    %edx,0x4(%rbp)
  75:	5d                   	pop    %rbp
  76:	64 04 a3             	fs add $0xa3,%al
  79:	01 55 9f             	add    %edx,-0x61(%rbp)
	...
  84:	00 00                	add    %al,(%rax)
  86:	00 04 00             	add    %al,(%rax,%rax,1)
  89:	1b 01                	sbb    (%rcx),%eax
  8b:	54                   	push   %rsp
  8c:	04 1b                	add    $0x1b,%al
  8e:	25 01 55 04 25       	and    $0x25045501,%eax
  93:	56                   	push   %rsi
  94:	04 a3                	add    $0xa3,%al
  96:	01 54 9f 04          	add    %edx,0x4(%rdi,%rbx,4)
  9a:	56                   	push   %rsi
  9b:	5f                   	pop    %rdi
  9c:	01 54 04 5f          	add    %edx,0x5f(%rsp,%rax,1)
  a0:	64 04 a3             	fs add $0xa3,%al
  a3:	01 54 9f 00          	add    %edx,0x0(%rdi,%rbx,4)
  a7:	6e                   	outsb  %ds:(%rsi),(%dx)
  a8:	02 00                	add    (%rax),%al
  aa:	00 05 00 08 00 00    	add    %al,0x800(%rip)        # 8b0 <__ImageBase+0x8b0>
	...
  b8:	00 04 a7             	add    %al,(%rdi,%riz,4)
  bb:	05 c9 05 01 55       	add    $0x550105c9,%eax
  c0:	04 c9                	add    $0xc9,%al
  c2:	05 b2 07 01 53       	add    $0x530107b2,%eax
  c7:	04 b2                	add    $0xb2,%al
  c9:	07                   	(bad)  
  ca:	b8 07 04 a3 01       	mov    $0x1a30407,%eax
  cf:	55                   	push   %rbp
  d0:	9f                   	lahf   
  d1:	00 00                	add    %al,(%rax)
  d3:	00 04 a7             	add    %al,(%rdi,%riz,4)
  d6:	05 c9 05 01 54       	add    $0x540105c9,%eax
  db:	00 01                	add    %al,(%rcx)
  dd:	00 00                	add    %al,(%rax)
  df:	00 00                	add    %al,(%rax)
  e1:	01 04 ab             	add    %eax,(%rbx,%rbp,4)
  e4:	05 a4 07 02 30       	add    $0x300207a4,%eax
  e9:	9f                   	lahf   
  ea:	04 a4                	add    $0xa4,%al
  ec:	07                   	(bad)  
  ed:	a8 07                	test   $0x7,%al
  ef:	01 50 04             	add    %edx,0x4(%rax)
  f2:	a8 07                	test   $0x7,%al
  f4:	ad                   	lods   %ds:(%rsi),%eax
  f5:	07                   	(bad)  
  f6:	03 91 b4 7f 00 01    	add    0x1007fb4(%rcx),%edx
  fc:	00 00                	add    %al,(%rax)
  fe:	01 01                	add    %eax,(%rcx)
 100:	00 00                	add    %al,(%rax)
 102:	01 04 ce             	add    %eax,(%rsi,%rcx,8)
 105:	05 9b 06 02 30       	add    $0x3002069b,%eax
 10a:	9f                   	lahf   
 10b:	04 aa                	add    $0xaa,%al
 10d:	06                   	(bad)  
 10e:	aa                   	stos   %al,%es:(%rdi)
 10f:	06                   	(bad)  
 110:	02 30                	add    (%rax),%dh
 112:	9f                   	lahf   
 113:	04 aa                	add    $0xaa,%al
 115:	06                   	(bad)  
 116:	ae                   	scas   %es:(%rdi),%al
 117:	06                   	(bad)  
 118:	01 50 04             	add    %edx,0x4(%rax)
 11b:	ae                   	scas   %es:(%rdi),%al
 11c:	06                   	(bad)  
 11d:	ad                   	lods   %ds:(%rsi),%eax
 11e:	07                   	(bad)  
 11f:	01 56 00             	add    %edx,0x0(%rsi)
 122:	02 00                	add    (%rax),%al
 124:	00 00                	add    %al,(%rax)
 126:	00 00                	add    %al,(%rax)
 128:	00 00                	add    %al,(%rax)
 12a:	00 01                	add    %al,(%rcx)
 12c:	04 ce                	add    $0xce,%al
 12e:	05 ec 05 02 40       	add    $0x400205ec,%eax
 133:	9f                   	lahf   
 134:	04 f6                	add    $0xf6,%al
 136:	05 fd 05 02 40       	add    $0x400205fd,%eax
 13b:	9f                   	lahf   
 13c:	04 fd                	add    $0xfd,%al
 13e:	05 8b 06 01 55       	add    $0x5501068b,%eax
 143:	04 8b                	add    $0x8b,%al
 145:	06                   	(bad)  
 146:	9b                   	fwait
 147:	06                   	(bad)  
 148:	03 7d 10             	add    0x10(%rbp),%edi
 14b:	9f                   	lahf   
 14c:	04 aa                	add    $0xaa,%al
 14e:	06                   	(bad)  
 14f:	b3 06                	mov    $0x6,%bl
 151:	03 7d 10             	add    0x10(%rbp),%edi
 154:	9f                   	lahf   
 155:	00 00                	add    %al,(%rax)
 157:	00 00                	add    %al,(%rax)
 159:	00 00                	add    %al,(%rax)
 15b:	00 04 be             	add    %al,(%rsi,%rdi,4)
 15e:	03 da                	add    %edx,%ebx
 160:	03 01                	add    (%rcx),%eax
 162:	55                   	push   %rbp
 163:	04 da                	add    $0xda,%al
 165:	03 a1 05 01 53 04    	add    0x4530105(%rcx),%esp
 16b:	a1 05 a7 05 04 a3 01 	movabs 0x9f5501a30405a705,%eax
 172:	55 9f 
 174:	00 01                	add    %al,(%rcx)
 176:	00 00                	add    %al,(%rax)
 178:	00 00                	add    %al,(%rax)
 17a:	01 04 c2             	add    %eax,(%rdx,%rax,8)
 17d:	03 93 05 02 30 9f    	add    -0x60cffdfb(%rbx),%edx
 183:	04 93                	add    $0x93,%al
 185:	05 97 05 01 50       	add    $0x50010597,%eax
 18a:	04 97                	add    $0x97,%al
 18c:	05 9c 05 03 91       	add    $0x9103059c,%eax
 191:	bc 7f 00 01 00       	mov    $0x1007f,%esp
 196:	00 01                	add    %al,(%rcx)
 198:	01 00                	add    %eax,(%rax)
 19a:	00 01                	add    %al,(%rcx)
 19c:	04 df                	add    $0xdf,%al
 19e:	03 ac 04 02 30 9f 04 	add    0x49f3002(%rsp,%rax,1),%ebp
 1a5:	b8 04 b8 04 02       	mov    $0x204b804,%eax
 1aa:	30 9f 04 b8 04 bc    	xor    %bl,-0x43fb47fc(%rdi)
 1b0:	04 01                	add    $0x1,%al
 1b2:	50                   	push   %rax
 1b3:	04 bc                	add    $0xbc,%al
 1b5:	04 9c                	add    $0x9c,%al
 1b7:	05 01 5c 00 02       	add    $0x2005c01,%eax
	...
 1c4:	01 04 df             	add    %eax,(%rdi,%rbx,8)
 1c7:	03 fd                	add    %ebp,%edi
 1c9:	03 02                	add    (%rdx),%eax
 1cb:	38 9f 04 87 04 8e    	cmp    %bl,-0x71fb78fc(%rdi)
 1d1:	04 02                	add    $0x2,%al
 1d3:	38 9f 04 8e 04 9c    	cmp    %bl,-0x63fb71fc(%rdi)
 1d9:	04 01                	add    $0x1,%al
 1db:	55                   	push   %rbp
 1dc:	04 9c                	add    $0x9c,%al
 1de:	04 ac                	add    $0xac,%al
 1e0:	04 03                	add    $0x3,%al
 1e2:	7d 08                	jge    1ec <__ImageBase+0x1ec>
 1e4:	9f                   	lahf   
 1e5:	04 b8                	add    $0xb8,%al
 1e7:	04 c1                	add    $0xc1,%al
 1e9:	04 03                	add    $0x3,%al
 1eb:	7d 08                	jge    1f5 <__ImageBase+0x1f5>
 1ed:	9f                   	lahf   
	...
 1fa:	00 00                	add    %al,(%rax)
 1fc:	00 04 00             	add    %al,(%rax,%rax,1)
 1ff:	13 01                	adc    (%rcx),%eax
 201:	55                   	push   %rbp
 202:	04 13                	add    $0x13,%al
 204:	1e                   	(bad)  
 205:	04 a3                	add    $0xa3,%al
 207:	01 55 9f             	add    %edx,-0x61(%rbp)
 20a:	04 1e                	add    $0x1e,%al
 20c:	2a 01                	sub    (%rcx),%al
 20e:	55                   	push   %rbp
 20f:	04 2a                	add    $0x2a,%al
 211:	75 01                	jne    214 <__ImageBase+0x214>
 213:	53                   	push   %rbx
 214:	04 75                	add    $0x75,%al
 216:	77 04                	ja     21c <__ImageBase+0x21c>
 218:	a3 01 55 9f 04 77 99 	movabs %eax,0x1019977049f5501
 21f:	01 01 
 221:	53                   	push   %rbx
 222:	04 99                	add    $0x99,%al
 224:	01 fa                	add    %edi,%edx
 226:	01 04 a3             	add    %eax,(%rbx,%riz,4)
 229:	01 55 9f             	add    %edx,-0x61(%rbp)
 22c:	00 01                	add    %al,(%rcx)
 22e:	00 00                	add    %al,(%rax)
 230:	00 00                	add    %al,(%rax)
 232:	00 00                	add    %al,(%rax)
 234:	00 04 32             	add    %al,(%rdx,%rsi,1)
 237:	75 01                	jne    23a <__ImageBase+0x23a>
 239:	53                   	push   %rbx
 23a:	04 75                	add    $0x75,%al
 23c:	77 04                	ja     242 <__ImageBase+0x242>
 23e:	a3 01 55 9f 04 77 99 	movabs %eax,0x1019977049f5501
 245:	01 01 
 247:	53                   	push   %rbx
 248:	04 99                	add    $0x99,%al
 24a:	01 ec                	add    %ebp,%esp
 24c:	01 04 a3             	add    %eax,(%rbx,%riz,4)
 24f:	01 55 9f             	add    %edx,-0x61(%rbp)
 252:	00 01                	add    %al,(%rcx)
 254:	00 04 57             	add    %al,(%rdi,%rdx,2)
 257:	e4 01                	in     $0x1,%al
 259:	02 30                	add    (%rax),%dh
 25b:	9f                   	lahf   
 25c:	00 00                	add    %al,(%rax)
 25e:	00 04 5c             	add    %al,(%rsp,%rbx,2)
 261:	ec                   	in     (%dx),%al
 262:	01 01                	add    %eax,(%rcx)
 264:	5d                   	pop    %rbp
 265:	00 00                	add    %al,(%rax)
 267:	00 04 61             	add    %al,(%rcx,%riz,2)
 26a:	ec                   	in     (%dx),%al
 26b:	01 01                	add    %eax,(%rcx)
 26d:	56                   	push   %rsi
 26e:	00 01                	add    %al,(%rcx)
 270:	00 00                	add    %al,(%rax)
 272:	00 00                	add    %al,(%rax)
 274:	00 04 61             	add    %al,(%rcx,%riz,2)
 277:	99                   	cltd   
 278:	01 02                	add    %eax,(%rdx)
 27a:	30 9f 04 99 01 ae    	xor    %bl,-0x51fe66fc(%rdi)
 280:	01 01                	add    %eax,(%rcx)
 282:	50                   	push   %rax
 283:	04 ae                	add    $0xae,%al
 285:	01 e4                	add    %esp,%esp
 287:	01 01                	add    %eax,(%rcx)
 289:	53                   	push   %rbx
	...
 292:	00 04 fa             	add    %al,(%rdx,%rdi,8)
 295:	01 94 02 01 55 04 94 	add    %edx,-0x6bfbaaff(%rdx,%rax,1)
 29c:	02 d5                	add    %ch,%dl
 29e:	02 01                	add    (%rcx),%al
 2a0:	53                   	push   %rbx
 2a1:	04 d5                	add    $0xd5,%al
 2a3:	02 d6                	add    %dh,%dl
 2a5:	02 04 a3             	add    (%rbx,%riz,4),%al
 2a8:	01 55 9f             	add    %edx,-0x61(%rbp)
 2ab:	04 d6                	add    $0xd6,%al
 2ad:	02 dc                	add    %ah,%bl
 2af:	02 01                	add    (%rcx),%al
 2b1:	55                   	push   %rbp
 2b2:	00 00                	add    %al,(%rax)
 2b4:	00 04 a0             	add    %al,(%rax,%riz,4)
 2b7:	02 d0                	add    %al,%dl
 2b9:	02 01                	add    (%rcx),%al
 2bb:	53                   	push   %rbx
 2bc:	00 01                	add    %al,(%rcx)
 2be:	00 04 a3             	add    %al,(%rbx,%riz,4)
 2c1:	02 d0                	add    %al,%dl
 2c3:	02 01                	add    (%rcx),%al
 2c5:	53                   	push   %rbx
 2c6:	00 01                	add    %al,(%rcx)
 2c8:	00 04 c5 02 d0 02 02 	add    %al,0x202d002(,%rax,8)
 2cf:	30 9f 00 00 00 00    	xor    %bl,0x0(%rdi)
 2d5:	00 00                	add    %al,(%rax)
 2d7:	00 00                	add    %al,(%rax)
 2d9:	00 04 dc             	add    %al,(%rsp,%rbx,8)
 2dc:	02 f6                	add    %dh,%dh
 2de:	02 01                	add    (%rcx),%al
 2e0:	55                   	push   %rbp
 2e1:	04 f6                	add    $0xf6,%al
 2e3:	02 b7 03 01 53 04    	add    0x4530103(%rdi),%dh
 2e9:	b7 03                	mov    $0x3,%bh
 2eb:	b8 03 04 a3 01       	mov    $0x1a30403,%eax
 2f0:	55                   	push   %rbp
 2f1:	9f                   	lahf   
 2f2:	04 b8                	add    $0xb8,%al
 2f4:	03 be 03 01 55 00    	add    0x550103(%rsi),%edi
 2fa:	00 00                	add    %al,(%rax)
 2fc:	04 82                	add    $0x82,%al
 2fe:	03 b2 03 01 53 00    	add    0x530103(%rdx),%esi
 304:	01 00                	add    %eax,(%rax)
 306:	04 85                	add    $0x85,%al
 308:	03 b2 03 01 53 00    	add    0x530103(%rdx),%esi
 30e:	01 00                	add    %eax,(%rax)
 310:	04 a7                	add    $0xa7,%al
 312:	03 b2 03 02 30 9f    	add    -0x60cffdfd(%rdx),%esi
	...
