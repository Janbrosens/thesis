
Enclave/encl.so:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000318 <.interp>:
 318:	2f                   	(bad)  
 319:	6c                   	insb   (%dx),%es:(%rdi)
 31a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 321:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 326:	78 2d                	js     355 <__ImageBase+0x355>
 328:	78 38                	js     362 <__ImageBase+0x362>
 32a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 330:	6f                   	outsl  %ds:(%rsi),(%dx)
 331:	2e 32 00             	cs xor (%rax),%al

Disassembly of section .note.gnu.property:

0000000000000338 <.note.gnu.property>:
 338:	04 00                	add    $0x0,%al
 33a:	00 00                	add    %al,(%rax)
 33c:	20 00                	and    %al,(%rax)
 33e:	00 00                	add    %al,(%rax)
 340:	05 00 00 00 47       	add    $0x47000000,%eax
 345:	4e 55                	rex.WRX push %rbp
 347:	00 01                	add    %al,(%rcx)
 349:	00 01                	add    %al,(%rcx)
 34b:	c0 04 00 00          	rolb   $0x0,(%rax,%rax,1)
 34f:	00 3b                	add    %bh,(%rbx)
 351:	00 00                	add    %al,(%rax)
 353:	00 00                	add    %al,(%rax)
 355:	00 00                	add    %al,(%rax)
 357:	00 02                	add    %al,(%rdx)
 359:	00 01                	add    %al,(%rcx)
 35b:	c0 04 00 00          	rolb   $0x0,(%rax,%rax,1)
 35f:	00 0d 00 00 00 00    	add    %cl,0x0(%rip)        # 365 <__ImageBase+0x365>
 365:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000000368 <.note.gnu.build-id>:
 368:	04 00                	add    $0x0,%al
 36a:	00 00                	add    %al,(%rax)
 36c:	14 00                	adc    $0x0,%al
 36e:	00 00                	add    %al,(%rax)
 370:	03 00                	add    (%rax),%eax
 372:	00 00                	add    %al,(%rax)
 374:	47                   	rex.RXB
 375:	4e 55                	rex.WRX push %rbp
 377:	00 72 a8             	add    %dh,-0x58(%rdx)
 37a:	df 47 f1             	filds  -0xf(%rdi)
 37d:	b0 bd                	mov    $0xbd,%al
 37f:	09 e0                	or     %esp,%eax
 381:	35 ee 85 4e 77       	xor    $0x774e85ee,%eax
 386:	ff c3                	inc    %ebx
 388:	af                   	scas   %es:(%rdi),%eax
 389:	69                   	.byte 0x69
 38a:	a3                   	.byte 0xa3
 38b:	50                   	push   %rax

Disassembly of section .gnu.hash:

0000000000000390 <.gnu.hash>:
 390:	11 00                	adc    %eax,(%rax)
 392:	00 00                	add    %al,(%rax)
 394:	03 00                	add    (%rax),%eax
 396:	00 00                	add    %al,(%rax)
 398:	04 00                	add    $0x0,%al
 39a:	00 00                	add    %al,(%rax)
 39c:	08 00                	or     %al,(%rax)
 39e:	00 00                	add    %al,(%rax)
 3a0:	02 00                	add    (%rax),%al
 3a2:	12 00                	adc    (%rax),%al
 3a4:	08 12                	or     %dl,(%rdx)
 3a6:	12 02                	adc    (%rdx),%al
 3a8:	28 10                	sub    %dl,(%rax)
 3aa:	04 e1                	add    $0xe1,%al
 3ac:	00 80 63 59 42 41    	add    %al,0x41425963(%rax)
 3b2:	81 18 4b 01 40 0b    	sbbl   $0xb40014b,(%rax)
 3b8:	84 31                	test   %dh,(%rcx)
 3ba:	17                   	(bad)  
 3bb:	91                   	xchg   %eax,%ecx
 3bc:	40 00 16             	rex add %dl,(%rsi)
 3bf:	30 03                	xor    %al,(%rbx)
 3c1:	00 00                	add    %al,(%rax)
 3c3:	00 06                	add    %al,(%rsi)
 3c5:	00 00                	add    %al,(%rax)
 3c7:	00 0a                	add    %cl,(%rdx)
 3c9:	00 00                	add    %al,(%rax)
 3cb:	00 0c 00             	add    %cl,(%rax,%rax,1)
 3ce:	00 00                	add    %al,(%rax)
 3d0:	0f 00 00             	sldt   (%rax)
 3d3:	00 11                	add    %dl,(%rcx)
 3d5:	00 00                	add    %al,(%rax)
 3d7:	00 13                	add    %dl,(%rbx)
 3d9:	00 00                	add    %al,(%rax)
 3db:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 3e1 <__ImageBase+0x3e1>
 3e1:	00 00                	add    %al,(%rax)
 3e3:	00 19                	add    %bl,(%rcx)
 3e5:	00 00                	add    %al,(%rax)
 3e7:	00 1c 00             	add    %bl,(%rax,%rax,1)
 3ea:	00 00                	add    %al,(%rax)
 3ec:	00 00                	add    %al,(%rax)
 3ee:	00 00                	add    %al,(%rax)
 3f0:	1d 00 00 00 21       	sbb    $0x21000000,%eax
	...
 3fd:	00 00                	add    %al,(%rax)
 3ff:	00 24 00             	add    %ah,(%rax,%rax,1)
 402:	00 00                	add    %al,(%rax)
 404:	6e                   	outsb  %ds:(%rsi),(%dx)
 405:	4c 0d 59 de 72 46    	rex.WR or $0x4672de59,%rax
 40b:	9a                   	(bad)  
 40c:	8f 88 a1 be          	(bad)
 410:	58                   	pop    %rax
 411:	5d                   	pop    %rbp
 412:	85 1b                	test   %ebx,(%rbx)
 414:	9a                   	(bad)  
 415:	5c                   	pop    %rsp
 416:	a0 ac 70 de 02 f2 f1 	movabs 0xac94f1f202de70ac,%al
 41d:	94 ac 
 41f:	67 00 a9 9e da fd 8d 	add    %ch,-0x72022562(%ecx)
 426:	23 fd                	and    %ebp,%edi
 428:	e6 42                	out    %al,$0x42
 42a:	5b                   	pop    %rbx
 42b:	6d                   	insl   (%dx),%es:(%rdi)
 42c:	d8 71 58             	fdivs  0x58(%rcx)
 42f:	1c 75                	sbb    $0x75,%al
 431:	36 20 04 ba          	ss and %al,(%rdx,%rdi,4)
 435:	e3 92                	jrcxz  3c9 <__ImageBase+0x3c9>
 437:	7c 97                	jl     3d0 <__ImageBase+0x3d0>
 439:	81 42 a8 7c b0 3e 88 	addl   $0x883eb07c,-0x58(%rdx)
 440:	23 71 91             	and    -0x6f(%rcx),%esi
 443:	45 d0 0c 74          	rex.RB rorb (%r12,%rsi,2)
 447:	e7 b7                	out    %eax,$0xb7
 449:	39 0d 80 f4 7c 90    	cmp    %ecx,-0x6f830b80(%rip)        # ffffffff907cf8cf <_end+0xffffffff907a473f>
 44f:	5a                   	pop    %rdx
 450:	b8 a1 15 31 42       	mov    $0x423115a1,%eax
 455:	45 d5                	rex.RB (bad) 
 457:	ec                   	in     (%dx),%al
 458:	01 23                	add    %esp,(%rbx)
 45a:	f9                   	stc    
 45b:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
 45c:	9a                   	(bad)  
 45d:	28 c1                	sub    %al,%cl
 45f:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
 460:	90                   	nop
 461:	c6                   	(bad)  
 462:	fa                   	cli    
 463:	fa                   	cli    
 464:	6f                   	outsl  %ds:(%rsi),(%dx)
 465:	bb 9e 0c 39 54       	mov    $0x54390c9e,%ebx
 46a:	bc 04 5e f8 8c       	mov    $0x8cf85e04,%esp
 46f:	8d 10                	lea    (%rax),%edx
 471:	b4 59                	mov    $0x59,%ah
 473:	31 a0 a6 66 1a dd    	xor    %esp,-0x22e5995a(%rax)
 479:	df 50 a9             	fists  -0x57(%rax)
 47c:	52                   	push   %rdx
 47d:	3e e3 cb             	jrcxz,pt 44b <__ImageBase+0x44b>
 480:	2c 6c                	sub    $0x6c,%al
 482:	67 40 c9             	addr32 rex leave 
 485:	91                   	xchg   %eax,%ecx
 486:	b6 fb                	mov    $0xfb,%dh
 488:	c7                   	(bad)  
 489:	d2                   	.byte 0xd2
 48a:	91                   	xchg   %eax,%ecx
 48b:	c1                   	.byte 0xc1

Disassembly of section .dynsym:

0000000000000490 <.dynsym>:
	...
 4a8:	db 00                	fildl  (%rax)
 4aa:	00 00                	add    %al,(%rax)
 4ac:	20 00                	and    %al,(%rax)
	...
 4be:	00 00                	add    %al,(%rax)
 4c0:	d8 01                	fadds  (%rcx)
 4c2:	00 00                	add    %al,(%rax)
 4c4:	20 00                	and    %al,(%rax)
	...
 4d6:	00 00                	add    %al,(%rax)
 4d8:	50                   	push   %rax
 4d9:	00 00                	add    %al,(%rax)
 4db:	00 21                	add    %ah,(%rcx)
 4dd:	00 11                	add    %dl,(%rcx)
 4df:	00 08                	add    %cl,(%rax)
 4e1:	7e 01                	jle    4e4 <__ImageBase+0x4e4>
 4e3:	00 00                	add    %al,(%rax)
 4e5:	00 00                	add    %al,(%rax)
 4e7:	00 08                	add    %cl,(%rax)
 4e9:	00 00                	add    %al,(%rax)
 4eb:	00 00                	add    %al,(%rax)
 4ed:	00 00                	add    %al,(%rax)
 4ef:	00 c7                	add    %al,%bh
 4f1:	00 00                	add    %al,(%rax)
 4f3:	00 12                	add    %dl,(%rdx)
 4f5:	00 0b                	add    %cl,(%rbx)
 4f7:	00 f2                	add    %dh,%dl
 4f9:	27                   	(bad)  
 4fa:	01 00                	add    %eax,(%rax)
	...
 508:	1a 01                	sbb    (%rcx),%al
 50a:	00 00                	add    %al,(%rax)
 50c:	12 00                	adc    (%rax),%al
 50e:	0a 00                	or     (%rax),%al
 510:	10 13                	adc    %dl,(%rbx)
 512:	01 00                	add    %eax,(%rax)
 514:	00 00                	add    %al,(%rax)
 516:	00 00                	add    %al,(%rax)
 518:	54                   	push   %rsp
 519:	00 00                	add    %al,(%rax)
 51b:	00 00                	add    %al,(%rax)
 51d:	00 00                	add    %al,(%rax)
 51f:	00 8d 01 00 00 12    	add    %cl,0x12000001(%rbp)
 525:	00 0a                	add    %cl,(%rdx)
 527:	00 32                	add    %dh,(%rdx)
 529:	11 01                	adc    %eax,(%rcx)
	...
 537:	00 18                	add    %bl,(%rax)
 539:	00 00                	add    %al,(%rax)
 53b:	00 22                	add    %ah,(%rdx)
 53d:	00 0a                	add    %cl,(%rdx)
 53f:	00 bf 11 01 00 00    	add    %bh,0x111(%rdi)
	...
 54d:	00 00                	add    %al,(%rax)
 54f:	00 21                	add    %ah,(%rcx)
 551:	00 00                	add    %al,(%rax)
 553:	00 12                	add    %dl,(%rdx)
 555:	00 0a                	add    %cl,(%rdx)
 557:	00 20                	add    %ah,(%rax)
 559:	c9                   	leave  
	...
 566:	00 00                	add    %al,(%rax)
 568:	90                   	nop
 569:	00 00                	add    %al,(%rax)
 56b:	00 12                	add    %dl,(%rdx)
 56d:	00 0b                	add    %cl,(%rbx)
 56f:	00 fb                	add    %bh,%bl
 571:	28 01                	sub    %al,(%rcx)
	...
 57f:	00 0c 00             	add    %cl,(%rax,%rax,1)
 582:	00 00                	add    %al,(%rax)
 584:	10 00                	adc    %al,(%rax)
 586:	f1                   	icebp  
 587:	ff 00                	incl   (%rax)
	...
 595:	00 00                	add    %al,(%rax)
 597:	00 68 00             	add    %ch,0x0(%rax)
 59a:	00 00                	add    %al,(%rax)
 59c:	11 00                	adc    %eax,(%rax)
 59e:	14 00                	adc    $0x0,%al
 5a0:	e0 a0                	loopne 542 <__ImageBase+0x542>
 5a2:	01 00                	add    %eax,(%rax)
 5a4:	00 00                	add    %al,(%rax)
 5a6:	00 00                	add    %al,(%rax)
 5a8:	1d 00 00 00 00       	sbb    $0x0,%eax
 5ad:	00 00                	add    %al,(%rax)
 5af:	00 ec                	add    %ch,%ah
 5b1:	00 00                	add    %al,(%rax)
 5b3:	00 12                	add    %dl,(%rdx)
 5b5:	00 0a                	add    %cl,(%rdx)
 5b7:	00 00                	add    %al,(%rax)
 5b9:	13 01                	adc    (%rcx),%eax
 5bb:	00 00                	add    %al,(%rax)
 5bd:	00 00                	add    %al,(%rax)
 5bf:	00 0a                	add    %cl,(%rdx)
 5c1:	00 00                	add    %al,(%rax)
 5c3:	00 00                	add    %al,(%rax)
 5c5:	00 00                	add    %al,(%rax)
 5c7:	00 23                	add    %ah,(%rbx)
 5c9:	01 00                	add    %eax,(%rax)
 5cb:	00 10                	add    %dl,(%rax)
 5cd:	00 16                	add    %dl,(%rsi)
 5cf:	00 60 a1             	add    %ah,-0x5f(%rax)
 5d2:	01 00                	add    %eax,(%rax)
	...
 5e0:	2f                   	(bad)  
 5e1:	01 00                	add    %eax,(%rax)
 5e3:	00 11                	add    %dl,(%rcx)
 5e5:	00 0d 00 80 33 01    	add    %cl,0x1338000(%rip)        # 13385eb <_end+0x130d45b>
 5eb:	00 00                	add    %al,(%rax)
 5ed:	00 00                	add    %al,(%rax)
 5ef:	00 e0                	add    %ah,%al
 5f1:	06                   	(bad)  
 5f2:	00 00                	add    %al,(%rax)
 5f4:	00 00                	add    %al,(%rax)
 5f6:	00 00                	add    %al,(%rax)
 5f8:	6e                   	outsb  %ds:(%rsi),(%dx)
 5f9:	01 00                	add    %eax,(%rax)
 5fb:	00 10                	add    %dl,(%rax)
 5fd:	00 16                	add    %dl,(%rsi)
 5ff:	00 90 b1 02 00 00    	add    %dl,0x2b1(%rax)
	...
 60d:	00 00                	add    %al,(%rax)
 60f:	00 8c 01 00 00 22 00 	add    %cl,0x220000(%rcx,%rax,1)
 616:	0a 00                	or     (%rax),%al
 618:	32 11                	xor    (%rcx),%dl
 61a:	01 00                	add    %eax,(%rax)
	...
 628:	19 00                	sbb    %eax,(%rax)
 62a:	00 00                	add    %al,(%rax)
 62c:	12 00                	adc    (%rax),%al
 62e:	0a 00                	or     (%rax),%al
 630:	bf 11 01 00 00       	mov    $0x111,%edi
	...
 63d:	00 00                	add    %al,(%rax)
 63f:	00 b3 01 00 00 10    	add    %dh,0x10000001(%rbx)
 645:	00 14 00             	add    %dl,(%rax,%rax,1)
 648:	00 90 01 00 00 00    	add    %dl,0x1(%rax)
	...
 656:	00 00                	add    %al,(%rax)
 658:	01 00                	add    %eax,(%rax)
 65a:	00 00                	add    %al,(%rax)
 65c:	10 00                	adc    %al,(%rax)
 65e:	0a 00                	or     (%rax),%al
 660:	00 30                	add    %dh,(%rax)
	...
 66e:	00 00                	add    %al,(%rax)
 670:	3d 01 00 00 10       	cmp    $0x10000001,%eax
 675:	00 0b                	add    %cl,(%rbx)
 677:	00 b3 28 01 00 00    	add    %dh,0x128(%rbx)
	...
 685:	00 00                	add    %al,(%rax)
 687:	00 28                	add    %ch,(%rax)
 689:	00 00                	add    %al,(%rax)
 68b:	00 12                	add    %dl,(%rdx)
 68d:	00 0b                	add    %cl,(%rbx)
 68f:	00 5f 25             	add    %bl,0x25(%rdi)
 692:	01 00                	add    %eax,(%rax)
	...
 6a0:	f8                   	clc    
 6a1:	00 00                	add    %al,(%rax)
 6a3:	00 10                	add    %dl,(%rax)
 6a5:	00 0b                	add    %cl,(%rbx)
 6a7:	00 f7                	add    %dh,%bh
 6a9:	24 01                	and    $0x1,%al
	...
 6b7:	00 52 01             	add    %dl,0x1(%rdx)
 6ba:	00 00                	add    %al,(%rax)
 6bc:	10 00                	adc    %al,(%rax)
 6be:	15 00 48 a1 01       	adc    $0x1a14800,%eax
	...
 6cf:	00 73 01             	add    %dh,0x1(%rbx)
 6d2:	00 00                	add    %al,(%rax)
 6d4:	22 00                	and    (%rax),%al
 6d6:	0a 00                	or     (%rax),%al
 6d8:	d0 12                	rclb   (%rdx)
 6da:	01 00                	add    %eax,(%rax)
 6dc:	00 00                	add    %al,(%rax)
 6de:	00 00                	add    %al,(%rax)
 6e0:	09 00                	or     %eax,(%rax)
 6e2:	00 00                	add    %al,(%rax)
 6e4:	00 00                	add    %al,(%rax)
 6e6:	00 00                	add    %al,(%rax)
 6e8:	36 00 00             	ss add %al,(%rax)
 6eb:	00 11                	add    %dl,(%rcx)
 6ed:	00 16                	add    %dl,(%rsi)
 6ef:	00 b8 af 02 00 00    	add    %bh,0x2af(%rax)
 6f5:	00 00                	add    %al,(%rax)
 6f7:	00 08                	add    %cl,(%rax)
 6f9:	00 00                	add    %al,(%rax)
 6fb:	00 00                	add    %al,(%rax)
 6fd:	00 00                	add    %al,(%rax)
 6ff:	00 9a 00 00 00 11    	add    %bl,0x11000000(%rdx)
 705:	00 14 00             	add    %dl,(%rax,%rax,1)
 708:	00 a1 01 00 00 00    	add    %ah,0x1(%rcx)
 70e:	00 00                	add    %al,(%rax)
 710:	1f                   	(bad)  
 711:	00 00                	add    %al,(%rax)
 713:	00 00                	add    %al,(%rax)
 715:	00 00                	add    %al,(%rax)
 717:	00 a5 01 00 00 10    	add    %ah,0x10000001(%rbp)
 71d:	00 0b                	add    %cl,(%rbx)
 71f:	00 95 28 01 00 00    	add    %dl,0x128(%rbp)
	...
 72d:	00 00                	add    %al,(%rax)
 72f:	00 c7                	add    %al,%bh
 731:	01 00                	add    %eax,(%rax)
 733:	00 11                	add    %dl,(%rcx)
 735:	00 16                	add    %dl,(%rsi)
 737:	00 a0 ab 02 00 00    	add    %ah,0x2ab(%rax)
 73d:	00 00                	add    %al,(%rax)
 73f:	00 08                	add    %cl,(%rax)
 741:	00 00                	add    %al,(%rax)
 743:	00 00                	add    %al,(%rax)
 745:	00 00                	add    %al,(%rax)
 747:	00 ae 00 00 00 12    	add    %ch,0x12000000(%rsi)
 74d:	00 0a                	add    %cl,(%rdx)
 74f:	00 c0                	add    %al,%al
 751:	47 00 00             	rex.RXB add %r8b,(%r8)
 754:	00 00                	add    %al,(%rax)
 756:	00 00                	add    %al,(%rax)
 758:	50                   	push   %rax
 759:	11 00                	adc    %eax,(%rax)
 75b:	00 00                	add    %al,(%rax)
 75d:	00 00                	add    %al,(%rax)
 75f:	00 0c 01             	add    %cl,(%rcx,%rax,1)
 762:	00 00                	add    %al,(%rax)
 764:	12 00                	adc    (%rax),%al
 766:	0a 00                	or     (%rax),%al
 768:	e0 12                	loopne 77c <__ImageBase+0x77c>
 76a:	01 00                	add    %eax,(%rax)
 76c:	00 00                	add    %al,(%rax)
 76e:	00 00                	add    %al,(%rax)
 770:	1d 00 00 00 00       	sbb    $0x0,%eax
 775:	00 00                	add    %al,(%rax)
 777:	00 59 01             	add    %bl,0x1(%rcx)
 77a:	00 00                	add    %al,(%rax)
 77c:	11 00                	adc    %eax,(%rax)
 77e:	14 00                	adc    $0x0,%al
 780:	20 a1 01 00 00 00    	and    %ah,0x1(%rcx)
 786:	00 00                	add    %al,(%rax)
 788:	20 00                	and    %al,(%rax)
 78a:	00 00                	add    %al,(%rax)
 78c:	00 00                	add    %al,(%rax)
 78e:	00 00                	add    %al,(%rax)
 790:	84 01                	test   %al,(%rcx)
 792:	00 00                	add    %al,(%rax)
 794:	12 00                	adc    (%rax),%al
 796:	0a 00                	or     (%rax),%al
 798:	70 13                	jo     7ad <__ImageBase+0x7ad>
 79a:	01 00                	add    %eax,(%rax)
 79c:	00 00                	add    %al,(%rax)
 79e:	00 00                	add    %al,(%rax)
 7a0:	6f                   	outsl  %ds:(%rsi),(%dx)
 7a1:	00 00                	add    %al,(%rax)
 7a3:	00 00                	add    %al,(%rax)
 7a5:	00 00                	add    %al,(%rax)
 7a7:	00 7a 00             	add    %bh,0x0(%rdx)
 7aa:	00 00                	add    %al,(%rax)
 7ac:	10 00                	adc    %al,(%rax)
 7ae:	0b 00                	or     (%rax),%eax
 7b0:	0b 24 01             	or     (%rcx,%rax,1),%esp
	...
 7bf:	00 d0                	add    %dl,%al
 7c1:	00 00                	add    %al,(%rax)
 7c3:	00 12                	add    %dl,(%rdx)
 7c5:	00 0b                	add    %cl,(%rbx)
 7c7:	00 bf 28 01 00 00    	add    %bh,0x128(%rdi)
	...
 7d5:	00 00                	add    %al,(%rax)
 7d7:	00 94 01 00 00 11 00 	add    %dl,0x110000(%rcx,%rax,1)
 7de:	14 00                	adc    $0x0,%al
 7e0:	30 82 01 00 00 00    	xor    %al,0x1(%rdx)
 7e6:	00 00                	add    %al,(%rax)
 7e8:	1c 00                	sbb    $0x0,%al
 7ea:	00 00                	add    %al,(%rax)
 7ec:	00 00                	add    %al,(%rax)
 7ee:	00 00                	add    %al,(%rax)
 7f0:	b8 00 00 00 12       	mov    $0x12000000,%eax
 7f5:	00 0b                	add    %cl,(%rbx)
 7f7:	00 dd                	add    %bl,%ch
 7f9:	28 01                	sub    %al,(%rcx)
	...

Disassembly of section .dynstr:

0000000000000808 <.dynstr>:
 808:	00 74 65 73          	add    %dh,0x73(%rbp,%riz,2)
 80c:	74 5f                	je     86d <__ImageBase+0x86d>
 80e:	64 75 6d             	fs jne 87e <__ImageBase+0x87e>
 811:	6d                   	insl   (%dx),%es:(%rdi)
 812:	79 00                	jns    814 <__ImageBase+0x814>
 814:	5f                   	pop    %rdi
 815:	5f                   	pop    %rdi
 816:	49 6d                	rex.WB insl (%dx),%es:(%rdi)
 818:	61                   	(bad)  
 819:	67 65 42 61          	addr32 gs rex.X (bad) 
 81d:	73 65                	jae    884 <__ImageBase+0x884>
 81f:	00 5f 6c             	add    %bl,0x6c(%rdi)
 822:	6f                   	outsl  %ds:(%rsi),(%dx)
 823:	6e                   	outsb  %ds:(%rsi),(%dx)
 824:	67 6a 6d             	addr32 push $0x6d
 827:	70 00                	jo     829 <__ImageBase+0x829>
 829:	61                   	(bad)  
 82a:	6c                   	insb   (%dx),%es:(%rdi)
 82b:	6c                   	insb   (%dx),%es:(%rdi)
 82c:	6f                   	outsl  %ds:(%rsi),(%dx)
 82d:	63 61 00             	movsxd 0x0(%rcx),%esp
 830:	65 6e                	outsb  %gs:(%rsi),(%dx)
 832:	63 6c 61 76          	movsxd 0x76(%rcx,%riz,2),%ebp
 836:	65 5f                	gs pop %rdi
 838:	65 6e                	outsb  %gs:(%rsi),(%dx)
 83a:	74 72                	je     8ae <__ImageBase+0x8ae>
 83c:	79 00                	jns    83e <__ImageBase+0x83e>
 83e:	67 5f                	addr32 pop %rdi
 840:	70 65                	jo     8a7 <__ImageBase+0x8a7>
 842:	61                   	(bad)  
 843:	6b 5f 72 73          	imul   $0x73,0x72(%rdi),%ebx
 847:	72 76                	jb     8bf <__ImageBase+0x8bf>
 849:	5f                   	pop    %rdi
 84a:	6d                   	insl   (%dx),%es:(%rdi)
 84b:	65 6d                	gs insl (%dx),%es:(%rdi)
 84d:	5f                   	pop    %rdi
 84e:	63 6f 6d             	movsxd 0x6d(%rdi),%ebp
 851:	6d                   	insl   (%dx),%es:(%rdi)
 852:	69 74 74 65 64 00 5f 	imul   $0x5f5f0064,0x65(%rsp,%rsi,2),%esi
 859:	5f 
 85a:	69 6e 74 65 6c 5f 73 	imul   $0x735f6c65,0x74(%rsi),%ebp
 861:	65 63 75 72          	movsxd %gs:0x72(%rbp),%esi
 865:	69 74 79 5f 63 6f 6f 	imul   $0x6b6f6f63,0x5f(%rcx,%rdi,2),%esi
 86c:	6b 
 86d:	69 65 00 73 67 78 5f 	imul   $0x5f786773,0x0(%rbp),%esp
 874:	74 73                	je     8e9 <__ImageBase+0x8e9>
 876:	74 64                	je     8dc <__ImageBase+0x8dc>
 878:	63 5f 76             	movsxd 0x76(%rdi),%ebx
 87b:	65 72 73             	gs jb  8f1 <__ImageBase+0x8f1>
 87e:	69 6f 6e 00 5f 5f 63 	imul   $0x635f5f00,0x6e(%rdi),%ebp
 885:	74 5f                	je     8e6 <__ImageBase+0x8e6>
 887:	6d                   	insl   (%dx),%es:(%rdi)
 888:	69 74 69 67 61 74 69 	imul   $0x6f697461,0x67(%rcx,%rbp,2),%esi
 88f:	6f 
 890:	6e                   	outsb  %ds:(%rsi),(%dx)
 891:	5f                   	pop    %rdi
 892:	62                   	(bad)  
 893:	65 67 69 6e 00 64 6f 	imul   $0x655f6f64,%gs:0x0(%esi),%ebp
 89a:	5f 65 
 89c:	6d                   	insl   (%dx),%es:(%rdi)
 89d:	6f                   	outsl  %ds:(%rsi),(%dx)
 89e:	64 70 65             	fs jo  906 <__ImageBase+0x906>
 8a1:	00 73 67             	add    %dh,0x67(%rbx)
 8a4:	78 5f                	js     905 <__ImageBase+0x905>
 8a6:	74 63                	je     90b <__ImageBase+0x90b>
 8a8:	72 79                	jb     923 <__ImageBase+0x923>
 8aa:	70 74                	jo     920 <__ImageBase+0x920>
 8ac:	6f                   	outsl  %ds:(%rsi),(%dx)
 8ad:	5f                   	pop    %rdi
 8ae:	76 65                	jbe    915 <__ImageBase+0x915>
 8b0:	72 73                	jb     925 <__ImageBase+0x925>
 8b2:	69 6f 6e 00 63 74 5f 	imul   $0x5f746300,0x6e(%rdi),%ebp
 8b9:	64 65 63 6f 64       	fs movsxd %gs:0x64(%rdi),%ebp
 8be:	65 00 64 6f 5f       	add    %ah,%gs:0x5f(%rdi,%rbp,2)
 8c3:	65 61                	gs (bad) 
 8c5:	63 63 65             	movsxd 0x65(%rbx),%esp
 8c8:	70 74                	jo     93e <__ImageBase+0x93e>
 8ca:	63 6f 70             	movsxd 0x70(%rdi),%ebp
 8cd:	79 00                	jns    8cf <__ImageBase+0x8cf>
 8cf:	61                   	(bad)  
 8d0:	73 6d                	jae    93f <__ImageBase+0x93f>
 8d2:	5f                   	pop    %rdi
 8d3:	6f                   	outsl  %ds:(%rsi),(%dx)
 8d4:	72 65                	jb     93b <__ImageBase+0x93b>
 8d6:	74 00                	je     8d8 <__ImageBase+0x8d8>
 8d8:	64 6f                	outsl  %fs:(%rsi),(%dx)
 8da:	5f                   	pop    %rdi
 8db:	65 61                	gs (bad) 
 8dd:	63 63 65             	movsxd 0x65(%rbx),%esp
 8e0:	70 74                	jo     956 <__ImageBase+0x956>
 8e2:	00 5f 5a             	add    %bl,0x5a(%rdi)
 8e5:	39 70 63             	cmp    %esi,0x63(%rax)
 8e8:	6c                   	insb   (%dx),%es:(%rdi)
 8e9:	5f                   	pop    %rdi
 8ea:	65 6e                	outsb  %gs:(%rsi),(%dx)
 8ec:	74 72                	je     960 <__ImageBase+0x960>
 8ee:	79 50                	jns    940 <__ImageBase+0x940>
 8f0:	76 53                	jbe    945 <__ImageBase+0x945>
 8f2:	5f                   	pop    %rdi
 8f3:	00 5f 5f             	add    %bl,0x5f(%rdi)
 8f6:	6d                   	insl   (%dx),%es:(%rdi)
 8f7:	65 6d                	gs insl (%dx),%es:(%rdi)
 8f9:	63 70 79             	movsxd 0x79(%rax),%esi
 8fc:	5f                   	pop    %rdi
 8fd:	38 61 00             	cmp    %ah,0x0(%rcx)
 900:	5f                   	pop    %rdi
 901:	5f                   	pop    %rdi
 902:	63 74 5f 6d          	movsxd 0x6d(%rdi,%rbx,2),%esi
 906:	69 74 69 67 61 74 69 	imul   $0x6f697461,0x67(%rcx,%rbp,2),%esi
 90d:	6f 
 90e:	6e                   	outsb  %ds:(%rsi),(%dx)
 90f:	5f                   	pop    %rdi
 910:	72 65                	jb     977 <__ImageBase+0x977>
 912:	74 00                	je     914 <__ImageBase+0x914>
 914:	5f                   	pop    %rdi
 915:	5f                   	pop    %rdi
 916:	6d                   	insl   (%dx),%es:(%rdi)
 917:	65 6d                	gs insl (%dx),%es:(%rdi)
 919:	63 70 79             	movsxd 0x79(%rax),%esi
 91c:	5f                   	pop    %rdi
 91d:	76 65                	jbe    984 <__ImageBase+0x984>
 91f:	72 77                	jb     998 <__ImageBase+0x998>
 921:	00 5f 5f             	add    %bl,0x5f(%rdi)
 924:	6d                   	insl   (%dx),%es:(%rdi)
 925:	65 6d                	gs insl (%dx),%es:(%rdi)
 927:	73 65                	jae    98e <__ImageBase+0x98e>
 929:	74 00                	je     92b <__ImageBase+0x92b>
 92b:	5f                   	pop    %rdi
 92c:	5f                   	pop    %rdi
 92d:	62 73                	(bad)  
 92f:	73 5f                	jae    990 <__ImageBase+0x990>
 931:	73 74                	jae    9a7 <__ImageBase+0x9a7>
 933:	61                   	(bad)  
 934:	72 74                	jb     9aa <__ImageBase+0x9aa>
 936:	00 67 5f             	add    %ah,0x5f(%rdi)
 939:	67 6c                	insb   (%dx),%es:(%edi)
 93b:	6f                   	outsl  %ds:(%rsi),(%dx)
 93c:	62 61 6c 5f 64       	(bad)
 941:	61                   	(bad)  
 942:	74 61                	je     9a5 <__ImageBase+0x9a5>
 944:	00 4c 65 76          	add    %cl,0x76(%rbp,%riz,2)
 948:	65 72 69             	gs jb  9b4 <__ImageBase+0x9b4>
 94b:	66 79 72             	data16 jns 9c0 <__ImageBase+0x9c0>
 94e:	65 70 6f             	gs jo  9c0 <__ImageBase+0x9c0>
 951:	72 74                	jb     9c7 <__ImageBase+0x9c7>
 953:	32 5f 69             	xor    0x69(%rdi),%bl
 956:	6e                   	outsb  %ds:(%rsi),(%dx)
 957:	73 74                	jae    9cd <__ImageBase+0x9cd>
 959:	00 5f 65             	add    %bl,0x65(%rdi)
 95c:	64 61                	fs (bad) 
 95e:	74 61                	je     9c1 <__ImageBase+0x9c1>
 960:	00 73 67             	add    %dh,0x67(%rbx)
 963:	78 5f                	js     9c4 <__ImageBase+0x9c4>
 965:	74 73                	je     9da <__ImageBase+0x9da>
 967:	65 72 76             	gs jb  9e0 <__ImageBase+0x9e0>
 96a:	69 63 65 5f 76 65 72 	imul   $0x7265765f,0x65(%rbx),%esp
 971:	73 69                	jae    9dc <__ImageBase+0x9dc>
 973:	6f                   	outsl  %ds:(%rsi),(%dx)
 974:	6e                   	outsb  %ds:(%rsi),(%dx)
 975:	00 5f 65             	add    %bl,0x65(%rdi)
 978:	6e                   	outsb  %ds:(%rsi),(%dx)
 979:	64 00 5f 5f          	add    %bl,%fs:0x5f(%rdi)
 97d:	65 72 72             	gs jb  9f2 <__ImageBase+0x9f2>
 980:	6e                   	outsb  %ds:(%rsi),(%dx)
 981:	6f                   	outsl  %ds:(%rsi),(%dx)
 982:	5f                   	pop    %rdi
 983:	6c                   	insb   (%dx),%es:(%rdi)
 984:	6f                   	outsl  %ds:(%rsi),(%dx)
 985:	63 61 74             	movsxd 0x74(%rcx),%esp
 988:	69 6f 6e 00 5f 73 74 	imul   $0x74735f00,0x6e(%rdi),%ebp
 98f:	72 6c                	jb     9fd <__ImageBase+0x9fd>
 991:	65 6e                	outsb  %gs:(%rsi),(%dx)
 993:	00 5f 73             	add    %bl,0x73(%rdi)
 996:	65 74 6a             	gs je  a03 <__ImageBase+0xa03>
 999:	6d                   	insl   (%dx),%es:(%rdi)
 99a:	70 00                	jo     99c <__ImageBase+0x99c>
 99c:	73 67                	jae    a05 <__ImageBase+0xa05>
 99e:	78 5f                	js     9ff <__ImageBase+0x9ff>
 9a0:	74 72                	je     a14 <__ImageBase+0xa14>
 9a2:	74 73                	je     a17 <__ImageBase+0xa17>
 9a4:	5f                   	pop    %rdi
 9a5:	76 65                	jbe    a0c <__ImageBase+0xa0c>
 9a7:	72 73                	jb     a1c <__ImageBase+0xa1c>
 9a9:	69 6f 6e 00 4c 65 72 	imul   $0x72654c00,0x6e(%rdi),%ebp
 9b0:	65 70 6f             	gs jo  a22 <__ImageBase+0xa22>
 9b3:	72 74                	jb     a29 <__ImageBase+0xa29>
 9b5:	5f                   	pop    %rdi
 9b6:	69 6e 73 74 00 61 65 	imul   $0x65610074,0x73(%rsi),%ebp
 9bd:	78 5f                	js     a1e <__ImageBase+0xa1e>
 9bf:	6e                   	outsb  %ds:(%rsi),(%dx)
 9c0:	6f                   	outsl  %ds:(%rsi),(%dx)
 9c1:	74 69                	je     a2c <__ImageBase+0xa2c>
 9c3:	66 79 5f             	data16 jns a25 <__ImageBase+0xa25>
 9c6:	63 33                	movsxd (%rbx),%esi
 9c8:	5f                   	pop    %rdi
 9c9:	63 61 63             	movsxd 0x63(%rcx),%esp
 9cc:	68 65 00 67 5f       	push   $0x5f670065
 9d1:	70 65                	jo     a38 <__ImageBase+0xa38>
 9d3:	61                   	(bad)  
 9d4:	6b 5f 68 65          	imul   $0x65,0x68(%rdi),%ebx
 9d8:	61                   	(bad)  
 9d9:	70 5f                	jo     a3a <__ImageBase+0xa3a>
 9db:	75 73                	jne    a50 <__ImageBase+0xa50>
 9dd:	65 64 00 69 70       	gs add %ch,%fs:0x70(%rcx)
 9e2:	70 63                	jo     a47 <__ImageBase+0xa47>
 9e4:	70 53                	jo     a39 <__ImageBase+0xa39>
 9e6:	65 74 43             	gs je  a2c <__ImageBase+0xa2c>
 9e9:	70 75                	jo     a60 <__ImageBase+0xa60>
 9eb:	46                   	rex.RX
 9ec:	65 61                	gs (bad) 
 9ee:	74 75                	je     a65 <__ImageBase+0xa65>
 9f0:	72 65                	jb     a57 <__ImageBase+0xa57>
 9f2:	73 00                	jae    9f4 <__ImageBase+0x9f4>

Disassembly of section .rela.dyn:

00000000000009f8 <.rela.dyn>:
 9f8:	80 7d 01 00          	cmpb   $0x0,0x1(%rbp)
 9fc:	00 00                	add    %al,(%rax)
 9fe:	00 00                	add    %al,(%rax)
 a00:	08 00                	or     %al,(%rax)
 a02:	00 00                	add    %al,(%rax)
 a04:	00 00                	add    %al,(%rax)
 a06:	00 00                	add    %al,(%rax)
 a08:	00 20                	add    %ah,(%rax)
 a0a:	00 00                	add    %al,(%rax)
 a0c:	00 00                	add    %al,(%rax)
 a0e:	00 00                	add    %al,(%rax)
 a10:	88 7d 01             	mov    %bh,0x1(%rbp)
 a13:	00 00                	add    %al,(%rax)
 a15:	00 00                	add    %al,(%rax)
 a17:	00 08                	add    %cl,(%rax)
 a19:	00 00                	add    %al,(%rax)
 a1b:	00 00                	add    %al,(%rax)
 a1d:	00 00                	add    %al,(%rax)
 a1f:	00 10                	add    %dl,(%rax)
 a21:	20 00                	and    %al,(%rax)
 a23:	00 00                	add    %al,(%rax)
 a25:	00 00                	add    %al,(%rax)
 a27:	00 90 7d 01 00 00    	add    %dl,0x17d(%rax)
 a2d:	00 00                	add    %al,(%rax)
 a2f:	00 08                	add    %cl,(%rax)
 a31:	00 00                	add    %al,(%rax)
 a33:	00 00                	add    %al,(%rax)
 a35:	00 00                	add    %al,(%rax)
 a37:	00 30                	add    %dh,(%rax)
 a39:	20 00                	and    %al,(%rax)
 a3b:	00 00                	add    %al,(%rax)
 a3d:	00 00                	add    %al,(%rax)
 a3f:	00 98 7d 01 00 00    	add    %bl,0x17d(%rax)
 a45:	00 00                	add    %al,(%rax)
 a47:	00 08                	add    %cl,(%rax)
 a49:	00 00                	add    %al,(%rax)
 a4b:	00 00                	add    %al,(%rax)
 a4d:	00 00                	add    %al,(%rax)
 a4f:	00 50 20             	add    %dl,0x20(%rax)
 a52:	00 00                	add    %al,(%rax)
 a54:	00 00                	add    %al,(%rax)
 a56:	00 00                	add    %al,(%rax)
 a58:	a8 7d                	test   $0x7d,%al
 a5a:	01 00                	add    %eax,(%rax)
 a5c:	00 00                	add    %al,(%rax)
 a5e:	00 00                	add    %al,(%rax)
 a60:	08 00                	or     %al,(%rax)
 a62:	00 00                	add    %al,(%rax)
 a64:	00 00                	add    %al,(%rax)
 a66:	00 00                	add    %al,(%rax)
 a68:	1b 46 00             	sbb    0x0(%rsi),%eax
 a6b:	00 00                	add    %al,(%rax)
 a6d:	00 00                	add    %al,(%rax)
 a6f:	00 b8 7d 01 00 00    	add    %bh,0x17d(%rax)
 a75:	00 00                	add    %al,(%rax)
 a77:	00 08                	add    %cl,(%rax)
 a79:	00 00                	add    %al,(%rax)
 a7b:	00 00                	add    %al,(%rax)
 a7d:	00 00                	add    %al,(%rax)
 a7f:	00 7d 44             	add    %bh,0x44(%rbp)
 a82:	00 00                	add    %al,(%rax)
 a84:	00 00                	add    %al,(%rax)
 a86:	00 00                	add    %al,(%rax)
 a88:	c8 7d 01 00          	enter  $0x17d,$0x0
 a8c:	00 00                	add    %al,(%rax)
 a8e:	00 00                	add    %al,(%rax)
 a90:	08 00                	or     %al,(%rax)
 a92:	00 00                	add    %al,(%rax)
 a94:	00 00                	add    %al,(%rax)
 a96:	00 00                	add    %al,(%rax)
 a98:	df 42 00             	filds  0x0(%rdx)
 a9b:	00 00                	add    %al,(%rax)
 a9d:	00 00                	add    %al,(%rax)
 a9f:	00 d8                	add    %bl,%al
 aa1:	7d 01                	jge    aa4 <__ImageBase+0xaa4>
 aa3:	00 00                	add    %al,(%rax)
 aa5:	00 00                	add    %al,(%rax)
 aa7:	00 08                	add    %cl,(%rax)
 aa9:	00 00                	add    %al,(%rax)
 aab:	00 00                	add    %al,(%rax)
 aad:	00 00                	add    %al,(%rax)
 aaf:	00 ec                	add    %ch,%ah
 ab1:	41 00 00             	add    %al,(%r8)
 ab4:	00 00                	add    %al,(%rax)
 ab6:	00 00                	add    %al,(%rax)
 ab8:	e8 7d 01 00 00       	call   c3a <__ImageBase+0xc3a>
 abd:	00 00                	add    %al,(%rax)
 abf:	00 08                	add    %cl,(%rax)
 ac1:	00 00                	add    %al,(%rax)
 ac3:	00 00                	add    %al,(%rax)
 ac5:	00 00                	add    %al,(%rax)
 ac7:	00 f9                	add    %bh,%cl
 ac9:	40 00 00             	rex add %al,(%rax)
 acc:	00 00                	add    %al,(%rax)
 ace:	00 00                	add    %al,(%rax)
 ad0:	f8                   	clc    
 ad1:	7d 01                	jge    ad4 <__ImageBase+0xad4>
 ad3:	00 00                	add    %al,(%rax)
 ad5:	00 00                	add    %al,(%rax)
 ad7:	00 08                	add    %cl,(%rax)
 ad9:	00 00                	add    %al,(%rax)
 adb:	00 00                	add    %al,(%rax)
 add:	00 00                	add    %al,(%rax)
 adf:	00 06                	add    %al,(%rsi)
 ae1:	40 00 00             	rex add %al,(%rax)
 ae4:	00 00                	add    %al,(%rax)
 ae6:	00 00                	add    %al,(%rax)
 ae8:	58                   	pop    %rax
 ae9:	7e 01                	jle    aec <__ImageBase+0xaec>
 aeb:	00 00                	add    %al,(%rax)
 aed:	00 00                	add    %al,(%rax)
 aef:	00 08                	add    %cl,(%rax)
 af1:	00 00                	add    %al,(%rax)
 af3:	00 00                	add    %al,(%rax)
 af5:	00 00                	add    %al,(%rax)
 af7:	00 70 0c             	add    %dh,0xc(%rax)
 afa:	01 00                	add    %eax,(%rax)
 afc:	00 00                	add    %al,(%rax)
 afe:	00 00                	add    %al,(%rax)
 b00:	d8 7f 01             	fdivrs 0x1(%rdi)
 b03:	00 00                	add    %al,(%rax)
 b05:	00 00                	add    %al,(%rax)
 b07:	00 08                	add    %cl,(%rax)
 b09:	00 00                	add    %al,(%rax)
 b0b:	00 00                	add    %al,(%rax)
 b0d:	00 00                	add    %al,(%rax)
 b0f:	00 b3 28 01 00 00    	add    %dh,0x128(%rbx)
 b15:	00 00                	add    %al,(%rax)
 b17:	00 e0                	add    %ah,%al
 b19:	7f 01                	jg     b1c <__ImageBase+0xb1c>
 b1b:	00 00                	add    %al,(%rax)
 b1d:	00 00                	add    %al,(%rax)
 b1f:	00 08                	add    %cl,(%rax)
 b21:	00 00                	add    %al,(%rax)
 b23:	00 00                	add    %al,(%rax)
 b25:	00 00                	add    %al,(%rax)
 b27:	00 95 28 01 00 00    	add    %dl,0x128(%rbp)
 b2d:	00 00                	add    %al,(%rax)
 b2f:	00 e8                	add    %ch,%al
 b31:	7f 01                	jg     b34 <__ImageBase+0xb34>
 b33:	00 00                	add    %al,(%rax)
 b35:	00 00                	add    %al,(%rax)
 b37:	00 08                	add    %cl,(%rax)
	...
 b41:	90                   	nop
 b42:	01 00                	add    %eax,(%rax)
 b44:	00 00                	add    %al,(%rax)
 b46:	00 00                	add    %al,(%rax)
 b48:	50                   	push   %rax
 b49:	82                   	(bad)  
 b4a:	01 00                	add    %eax,(%rax)
 b4c:	00 00                	add    %al,(%rax)
 b4e:	00 00                	add    %al,(%rax)
 b50:	08 00                	or     %al,(%rax)
 b52:	00 00                	add    %al,(%rax)
 b54:	00 00                	add    %al,(%rax)
 b56:	00 00                	add    %al,(%rax)
 b58:	50                   	push   %rax
 b59:	82                   	(bad)  
 b5a:	01 00                	add    %eax,(%rax)
 b5c:	00 00                	add    %al,(%rax)
 b5e:	00 00                	add    %al,(%rax)
 b60:	00 a0 01 00 00 00    	add    %ah,0x1(%rax)
 b66:	00 00                	add    %al,(%rax)
 b68:	08 00                	or     %al,(%rax)
 b6a:	00 00                	add    %al,(%rax)
 b6c:	00 00                	add    %al,(%rax)
 b6e:	00 00                	add    %al,(%rax)
 b70:	20 a0 01 00 00 00    	and    %ah,0x1(%rax)
 b76:	00 00                	add    %al,(%rax)
 b78:	58                   	pop    %rax
 b79:	a0 01 00 00 00 00 00 	movabs 0x8000000000001,%al
 b80:	08 00 
 b82:	00 00                	add    %al,(%rax)
 b84:	00 00                	add    %al,(%rax)
 b86:	00 00                	add    %al,(%rax)
 b88:	20 a0 01 00 00 00    	and    %ah,0x1(%rax)
 b8e:	00 00                	add    %al,(%rax)
 b90:	60                   	(bad)  
 b91:	a0 01 00 00 00 00 00 	movabs 0x8000000000001,%al
 b98:	08 00 
 b9a:	00 00                	add    %al,(%rax)
 b9c:	00 00                	add    %al,(%rax)
 b9e:	00 00                	add    %al,(%rax)
 ba0:	20 a0 01 00 00 00    	and    %ah,0x1(%rax)
 ba6:	00 00                	add    %al,(%rax)
 ba8:	68 a0 01 00 00       	push   $0x1a0
 bad:	00 00                	add    %al,(%rax)
 baf:	00 08                	add    %cl,(%rax)
 bb1:	00 00                	add    %al,(%rax)
 bb3:	00 00                	add    %al,(%rax)
 bb5:	00 00                	add    %al,(%rax)
 bb7:	00 80 a0 01 00 00    	add    %al,0x1a0(%rax)
 bbd:	00 00                	add    %al,(%rax)
 bbf:	00 b8 a0 01 00 00    	add    %bh,0x1a0(%rax)
 bc5:	00 00                	add    %al,(%rax)
 bc7:	00 08                	add    %cl,(%rax)
 bc9:	00 00                	add    %al,(%rax)
 bcb:	00 00                	add    %al,(%rax)
 bcd:	00 00                	add    %al,(%rax)
 bcf:	00 80 a0 01 00 00    	add    %al,0x1a0(%rax)
 bd5:	00 00                	add    %al,(%rax)
 bd7:	00 c0                	add    %al,%al
 bd9:	a0 01 00 00 00 00 00 	movabs 0x8000000000001,%al
 be0:	08 00 
 be2:	00 00                	add    %al,(%rax)
 be4:	00 00                	add    %al,(%rax)
 be6:	00 00                	add    %al,(%rax)
 be8:	80 a0 01 00 00 00 00 	andb   $0x0,0x1(%rax)
 bef:	00 d0                	add    %dl,%al
 bf1:	7f 01                	jg     bf4 <__ImageBase+0xbf4>
 bf3:	00 00                	add    %al,(%rax)
 bf5:	00 00                	add    %al,(%rax)
 bf7:	00 06                	add    %al,(%rsi)
 bf9:	00 00                	add    %al,(%rax)
 bfb:	00 01                	add    %al,(%rcx)
	...
 c05:	00 00                	add    %al,(%rax)
 c07:	00 f0                	add    %dh,%al
 c09:	7f 01                	jg     c0c <__ImageBase+0xc0c>
 c0b:	00 00                	add    %al,(%rax)
 c0d:	00 00                	add    %al,(%rax)
 c0f:	00 06                	add    %al,(%rsi)
 c11:	00 00                	add    %al,(%rax)
 c13:	00 02                	add    %al,(%rdx)
	...

Disassembly of section .plt:

0000000000001000 <.plt>:
    1000:	ff 35 ba 6f 01 00    	push   0x16fba(%rip)        # 17fc0 <_GLOBAL_OFFSET_TABLE_+0x8>
    1006:	ff 25 bc 6f 01 00    	jmp    *0x16fbc(%rip)        # 17fc8 <_GLOBAL_OFFSET_TABLE_+0x10>
    100c:	0f 1f 40 00          	nopl   0x0(%rax)

Disassembly of section .plt.got:

0000000000001010 <_Z9pcl_entryPvS_@plt>:
    1010:	ff 25 ba 6f 01 00    	jmp    *0x16fba(%rip)        # 17fd0 <_Z9pcl_entryPvS_>
    1016:	66 90                	xchg   %ax,%ax

0000000000001018 <ippcpSetCpuFeatures@plt>:
    1018:	ff 25 d2 6f 01 00    	jmp    *0x16fd2(%rip)        # 17ff0 <ippcpSetCpuFeatures>
    101e:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000002000 <trts_access_version_dummy1>:
    2000:	f3 0f 1e fa          	endbr64 
    2004:	48 8d 05 25 62 01 00 	lea    0x16225(%rip),%rax        # 18230 <sgx_trts_version>
    200b:	c6 00 73             	movb   $0x73,(%rax)
    200e:	c3                   	ret    
    200f:	90                   	nop

0000000000002010 <tstdc_access_version_dummy1>:
    2010:	f3 0f 1e fa          	endbr64 
    2014:	c6 05 c5 80 01 00 73 	movb   $0x73,0x180c5(%rip)        # 1a0e0 <sgx_tstdc_version>
    201b:	48 8d 05 be 80 01 00 	lea    0x180be(%rip),%rax        # 1a0e0 <sgx_tstdc_version>
    2022:	c3                   	ret    
    2023:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    202a:	00 00 00 
    202d:	0f 1f 00             	nopl   (%rax)

0000000000002030 <tcrypto_access_version_dummy1>:
    2030:	f3 0f 1e fa          	endbr64 
    2034:	c6 05 c5 80 01 00 73 	movb   $0x73,0x180c5(%rip)        # 1a100 <sgx_tcrypto_version>
    203b:	48 8d 05 be 80 01 00 	lea    0x180be(%rip),%rax        # 1a100 <sgx_tcrypto_version>
    2042:	c3                   	ret    
    2043:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    204a:	00 00 00 
    204d:	0f 1f 00             	nopl   (%rax)

0000000000002050 <tservice_access_version_dummy1>:
    2050:	f3 0f 1e fa          	endbr64 
    2054:	c6 05 c5 80 01 00 73 	movb   $0x73,0x180c5(%rip)        # 1a120 <sgx_tservice_version>
    205b:	48 8d 05 be 80 01 00 	lea    0x180be(%rip),%rax        # 1a120 <sgx_tservice_version>
    2062:	c3                   	ret    

0000000000002063 <print_str>:
    2063:	f3 0f 1e fa          	endbr64 
    2067:	53                   	push   %rbx
    2068:	48 89 f3             	mov    %rsi,%rbx
    206b:	e8 c4 25 00 00       	call   4634 <ocall_print>
    2070:	48 89 df             	mov    %rbx,%rdi
    2073:	5b                   	pop    %rbx
    2074:	e9 bb 25 00 00       	jmp    4634 <ocall_print>

0000000000002079 <ecall_init_master_password>:
    2079:	f3 0f 1e fa          	endbr64 
    207d:	80 3d dc 80 01 00 00 	cmpb   $0x0,0x180dc(%rip)        # 1a160 <current_masterpw>
    2084:	74 09                	je     208f <ecall_init_master_password+0x16>
    2086:	48 8d 3d 73 0f 01 00 	lea    0x10f73(%rip),%rdi        # 13000 <second_phase+0x650>
    208d:	eb 1d                	jmp    20ac <ecall_init_master_password+0x33>
    208f:	50                   	push   %rax
    2090:	48 89 fe             	mov    %rdi,%rsi
    2093:	ba 1f 00 00 00       	mov    $0x1f,%edx
    2098:	48 8d 3d c1 80 01 00 	lea    0x180c1(%rip),%rdi        # 1a160 <current_masterpw>
    209f:	e8 dc ec 00 00       	call   10d80 <strncpy>
    20a4:	48 8d 3d 96 0f 01 00 	lea    0x10f96(%rip),%rdi        # 13041 <second_phase+0x691>
    20ab:	5a                   	pop    %rdx
    20ac:	e9 83 25 00 00       	jmp    4634 <ocall_print>

00000000000020b1 <ecall_add_password>:
    20b1:	f3 0f 1e fa          	endbr64 
    20b5:	55                   	push   %rbp
    20b6:	48 89 f5             	mov    %rsi,%rbp
    20b9:	ba 20 00 00 00       	mov    $0x20,%edx
    20be:	48 8d 35 9b 80 01 00 	lea    0x1809b(%rip),%rsi        # 1a160 <current_masterpw>
    20c5:	53                   	push   %rbx
    20c6:	51                   	push   %rcx
    20c7:	e8 74 ec 00 00       	call   10d40 <strncmp>
    20cc:	85 c0                	test   %eax,%eax
    20ce:	74 0f                	je     20df <ecall_add_password+0x2e>
    20d0:	5a                   	pop    %rdx
    20d1:	48 8d 3d 9d 0f 01 00 	lea    0x10f9d(%rip),%rdi        # 13075 <second_phase+0x6c5>
    20d8:	5b                   	pop    %rbx
    20d9:	5d                   	pop    %rbp
    20da:	e9 55 25 00 00       	jmp    4634 <ocall_print>
    20df:	8b 1d 9b 80 01 00    	mov    0x1809b(%rip),%ebx        # 1a180 <pw_count>
    20e5:	83 fb 09             	cmp    $0x9,%ebx
    20e8:	7f 26                	jg     2110 <ecall_add_password+0x5f>
    20ea:	48 63 fb             	movslq %ebx,%rdi
    20ed:	48 8d 05 ac 80 01 00 	lea    0x180ac(%rip),%rax        # 1a1a0 <stored_passwords>
    20f4:	48 89 ee             	mov    %rbp,%rsi
    20f7:	ff c3                	inc    %ebx
    20f9:	48 c1 e7 05          	shl    $0x5,%rdi
    20fd:	ba 1f 00 00 00       	mov    $0x1f,%edx
    2102:	48 01 c7             	add    %rax,%rdi
    2105:	e8 76 ec 00 00       	call   10d80 <strncpy>
    210a:	89 1d 70 80 01 00    	mov    %ebx,0x18070(%rip)        # 1a180 <pw_count>
    2110:	58                   	pop    %rax
    2111:	5b                   	pop    %rbx
    2112:	5d                   	pop    %rbp
    2113:	c3                   	ret    

0000000000002114 <ecall_setup>:
    2114:	f3 0f 1e fa          	endbr64 
    2118:	53                   	push   %rbx
    2119:	48 8d 1d 97 0f 01 00 	lea    0x10f97(%rip),%rbx        # 130b7 <second_phase+0x707>
    2120:	48 89 df             	mov    %rbx,%rdi
    2123:	e8 51 ff ff ff       	call   2079 <ecall_init_master_password>
    2128:	48 89 df             	mov    %rbx,%rdi
    212b:	48 8d 35 92 0f 01 00 	lea    0x10f92(%rip),%rsi        # 130c4 <second_phase+0x714>
    2132:	e8 7a ff ff ff       	call   20b1 <ecall_add_password>
    2137:	48 8d 35 62 80 01 00 	lea    0x18062(%rip),%rsi        # 1a1a0 <stored_passwords>
    213e:	48 8d 3d 8d 0f 01 00 	lea    0x10f8d(%rip),%rdi        # 130d2 <second_phase+0x722>
    2145:	e8 19 ff ff ff       	call   2063 <print_str>
    214a:	48 89 df             	mov    %rbx,%rdi
    214d:	48 8d 35 8a 0f 01 00 	lea    0x10f8a(%rip),%rsi        # 130de <second_phase+0x72e>
    2154:	e8 58 ff ff ff       	call   20b1 <ecall_add_password>
    2159:	48 8d 35 60 80 01 00 	lea    0x18060(%rip),%rsi        # 1a1c0 <stored_passwords+0x20>
    2160:	48 8d 3d 88 0f 01 00 	lea    0x10f88(%rip),%rdi        # 130ef <second_phase+0x73f>
    2167:	e8 f7 fe ff ff       	call   2063 <print_str>
    216c:	48 89 df             	mov    %rbx,%rdi
    216f:	48 8d 35 85 0f 01 00 	lea    0x10f85(%rip),%rsi        # 130fb <second_phase+0x74b>
    2176:	e8 36 ff ff ff       	call   20b1 <ecall_add_password>
    217b:	48 8d 35 5e 80 01 00 	lea    0x1805e(%rip),%rsi        # 1a1e0 <stored_passwords+0x40>
    2182:	48 8d 3d 82 0f 01 00 	lea    0x10f82(%rip),%rdi        # 1310b <second_phase+0x75b>
    2189:	5b                   	pop    %rbx
    218a:	e9 d4 fe ff ff       	jmp    2063 <print_str>

000000000000218f <ecall_get_passwords>:
    218f:	f3 0f 1e fa          	endbr64 
    2193:	55                   	push   %rbp
    2194:	ba 20 00 00 00       	mov    $0x20,%edx
    2199:	48 8d 35 c0 7f 01 00 	lea    0x17fc0(%rip),%rsi        # 1a160 <current_masterpw>
    21a0:	48 8d 2d f9 7f 01 00 	lea    0x17ff9(%rip),%rbp        # 1a1a0 <stored_passwords>
    21a7:	53                   	push   %rbx
    21a8:	51                   	push   %rcx
    21a9:	e8 92 eb 00 00       	call   10d40 <strncmp>
    21ae:	89 c3                	mov    %eax,%ebx
    21b0:	85 c0                	test   %eax,%eax
    21b2:	74 0f                	je     21c3 <ecall_get_passwords+0x34>
    21b4:	5a                   	pop    %rdx
    21b5:	48 8d 3d 5b 0f 01 00 	lea    0x10f5b(%rip),%rdi        # 13117 <second_phase+0x767>
    21bc:	5b                   	pop    %rbx
    21bd:	5d                   	pop    %rbp
    21be:	e9 71 24 00 00       	jmp    4634 <ocall_print>
    21c3:	39 1d b7 7f 01 00    	cmp    %ebx,0x17fb7(%rip)        # 1a180 <pw_count>
    21c9:	7e 10                	jle    21db <ecall_get_passwords+0x4c>
    21cb:	48 89 ef             	mov    %rbp,%rdi
    21ce:	ff c3                	inc    %ebx
    21d0:	48 83 c5 20          	add    $0x20,%rbp
    21d4:	e8 5b 24 00 00       	call   4634 <ocall_print>
    21d9:	eb e8                	jmp    21c3 <ecall_get_passwords+0x34>
    21db:	58                   	pop    %rax
    21dc:	5b                   	pop    %rbx
    21dd:	5d                   	pop    %rbp
    21de:	c3                   	ret    

00000000000021df <ecall_change_master_password>:
    21df:	f3 0f 1e fa          	endbr64 
    21e3:	55                   	push   %rbp
    21e4:	48 8d 2d 75 7f 01 00 	lea    0x17f75(%rip),%rbp        # 1a160 <current_masterpw>
    21eb:	53                   	push   %rbx
    21ec:	48 89 f3             	mov    %rsi,%rbx
    21ef:	48 89 ee             	mov    %rbp,%rsi
    21f2:	52                   	push   %rdx
    21f3:	ba 20 00 00 00       	mov    $0x20,%edx
    21f8:	e8 43 eb 00 00       	call   10d40 <strncmp>
    21fd:	48 8d 3d 51 0f 01 00 	lea    0x10f51(%rip),%rdi        # 13155 <second_phase+0x7a5>
    2204:	85 c0                	test   %eax,%eax
    2206:	75 17                	jne    221f <ecall_change_master_password+0x40>
    2208:	48 89 ef             	mov    %rbp,%rdi
    220b:	ba 1f 00 00 00       	mov    $0x1f,%edx
    2210:	48 89 de             	mov    %rbx,%rsi
    2213:	e8 68 eb 00 00       	call   10d80 <strncpy>
    2218:	48 8d 3d 71 0f 01 00 	lea    0x10f71(%rip),%rdi        # 13190 <second_phase+0x7e0>
    221f:	58                   	pop    %rax
    2220:	5b                   	pop    %rbx
    2221:	5d                   	pop    %rbp
    2222:	e9 0d 24 00 00       	jmp    4634 <ocall_print>

0000000000002227 <ecall_clear_all>:
    2227:	f3 0f 1e fa          	endbr64 
    222b:	53                   	push   %rbx
    222c:	48 8d 1d 2d 7f 01 00 	lea    0x17f2d(%rip),%rbx        # 1a160 <current_masterpw>
    2233:	ba 20 00 00 00       	mov    $0x20,%edx
    2238:	48 89 de             	mov    %rbx,%rsi
    223b:	e8 00 eb 00 00       	call   10d40 <strncmp>
    2240:	85 c0                	test   %eax,%eax
    2242:	74 0d                	je     2251 <ecall_clear_all+0x2a>
    2244:	48 8d 3d 68 0f 01 00 	lea    0x10f68(%rip),%rdi        # 131b3 <second_phase+0x803>
    224b:	5b                   	pop    %rbx
    224c:	e9 e3 23 00 00       	jmp    4634 <ocall_print>
    2251:	b9 08 00 00 00       	mov    $0x8,%ecx
    2256:	48 89 df             	mov    %rbx,%rdi
    2259:	48 8d 15 40 7f 01 00 	lea    0x17f40(%rip),%rdx        # 1a1a0 <stored_passwords>
    2260:	f3 ab                	rep stos %eax,%es:(%rdi)
    2262:	48 8d b2 40 01 00 00 	lea    0x140(%rdx),%rsi
    2269:	31 c0                	xor    %eax,%eax
    226b:	48 89 d7             	mov    %rdx,%rdi
    226e:	b9 08 00 00 00       	mov    $0x8,%ecx
    2273:	48 83 c2 20          	add    $0x20,%rdx
    2277:	f3 ab                	rep stos %eax,%es:(%rdi)
    2279:	48 39 f2             	cmp    %rsi,%rdx
    227c:	75 ed                	jne    226b <ecall_clear_all+0x44>
    227e:	31 c0                	xor    %eax,%eax
    2280:	5b                   	pop    %rbx
    2281:	89 05 f9 7e 01 00    	mov    %eax,0x17ef9(%rip)        # 1a180 <pw_count>
    2287:	c3                   	ret    
    2288:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    228f:	00 00 00 
    2292:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2299:	00 00 00 
    229c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22a3:	00 00 00 
    22a6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22ad:	00 00 00 
    22b0:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22b7:	00 00 00 
    22ba:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22c1:	00 00 00 
    22c4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22cb:	00 00 00 
    22ce:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22d5:	00 00 00 
    22d8:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22df:	00 00 00 
    22e2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22e9:	00 00 00 
    22ec:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22f3:	00 00 00 
    22f6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22fd:	00 00 00 
    2300:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2307:	00 00 00 
    230a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2311:	00 00 00 
    2314:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    231b:	00 00 00 
    231e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2325:	00 00 00 
    2328:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    232f:	00 00 00 
    2332:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2339:	00 00 00 
    233c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2343:	00 00 00 
    2346:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    234d:	00 00 00 
    2350:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2357:	00 00 00 
    235a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2361:	00 00 00 
    2364:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    236b:	00 00 00 
    236e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2375:	00 00 00 
    2378:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    237f:	00 00 00 
    2382:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2389:	00 00 00 
    238c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2393:	00 00 00 
    2396:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    239d:	00 00 00 
    23a0:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23a7:	00 00 00 
    23aa:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23b1:	00 00 00 
    23b4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23bb:	00 00 00 
    23be:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23c5:	00 00 00 
    23c8:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23cf:	00 00 00 
    23d2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23d9:	00 00 00 
    23dc:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23e3:	00 00 00 
    23e6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23ed:	00 00 00 
    23f0:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23f7:	00 00 00 
    23fa:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2401:	00 00 00 
    2404:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    240b:	00 00 00 
    240e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2415:	00 00 00 
    2418:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    241f:	00 00 00 
    2422:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2429:	00 00 00 
    242c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2433:	00 00 00 
    2436:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    243d:	00 00 00 
    2440:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2447:	00 00 00 
    244a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2451:	00 00 00 
    2454:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    245b:	00 00 00 
    245e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2465:	00 00 00 
    2468:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    246f:	00 00 00 
    2472:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2479:	00 00 00 
    247c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2483:	00 00 00 
    2486:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    248d:	00 00 00 
    2490:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2497:	00 00 00 
    249a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24a1:	00 00 00 
    24a4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24ab:	00 00 00 
    24ae:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24b5:	00 00 00 
    24b8:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24bf:	00 00 00 
    24c2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24c9:	00 00 00 
    24cc:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24d3:	00 00 00 
    24d6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24dd:	00 00 00 
    24e0:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24e7:	00 00 00 
    24ea:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24f1:	00 00 00 
    24f4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24fb:	00 00 00 
    24fe:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2505:	00 00 00 
    2508:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    250f:	00 00 00 
    2512:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2519:	00 00 00 
    251c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2523:	00 00 00 
    2526:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    252d:	00 00 00 
    2530:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2537:	00 00 00 
    253a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2541:	00 00 00 
    2544:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    254b:	00 00 00 
    254e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2555:	00 00 00 
    2558:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    255f:	00 00 00 
    2562:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2569:	00 00 00 
    256c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2573:	00 00 00 
    2576:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    257d:	00 00 00 
    2580:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2587:	00 00 00 
    258a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2591:	00 00 00 
    2594:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    259b:	00 00 00 
    259e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25a5:	00 00 00 
    25a8:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25af:	00 00 00 
    25b2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25b9:	00 00 00 
    25bc:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25c3:	00 00 00 
    25c6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25cd:	00 00 00 
    25d0:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25d7:	00 00 00 
    25da:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25e1:	00 00 00 
    25e4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25eb:	00 00 00 
    25ee:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25f5:	00 00 00 
    25f8:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25ff:	00 00 00 
    2602:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2609:	00 00 00 
    260c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2613:	00 00 00 
    2616:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    261d:	00 00 00 
    2620:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2627:	00 00 00 
    262a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2631:	00 00 00 
    2634:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    263b:	00 00 00 
    263e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2645:	00 00 00 
    2648:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    264f:	00 00 00 
    2652:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2659:	00 00 00 
    265c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2663:	00 00 00 
    2666:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    266d:	00 00 00 
    2670:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2677:	00 00 00 
    267a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2681:	00 00 00 
    2684:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    268b:	00 00 00 
    268e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2695:	00 00 00 
    2698:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    269f:	00 00 00 
    26a2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26a9:	00 00 00 
    26ac:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26b3:	00 00 00 
    26b6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26bd:	00 00 00 
    26c0:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26c7:	00 00 00 
    26ca:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26d1:	00 00 00 
    26d4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26db:	00 00 00 
    26de:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26e5:	00 00 00 
    26e8:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26ef:	00 00 00 
    26f2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26f9:	00 00 00 
    26fc:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2703:	00 00 00 
    2706:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    270d:	00 00 00 
    2710:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2717:	00 00 00 
    271a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2721:	00 00 00 
    2724:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    272b:	00 00 00 
    272e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2735:	00 00 00 
    2738:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    273f:	00 00 00 
    2742:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2749:	00 00 00 
    274c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2753:	00 00 00 
    2756:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    275d:	00 00 00 
    2760:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2767:	00 00 00 
    276a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2771:	00 00 00 
    2774:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    277b:	00 00 00 
    277e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2785:	00 00 00 
    2788:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    278f:	00 00 00 
    2792:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2799:	00 00 00 
    279c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27a3:	00 00 00 
    27a6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27ad:	00 00 00 
    27b0:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27b7:	00 00 00 
    27ba:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27c1:	00 00 00 
    27c4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27cb:	00 00 00 
    27ce:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27d5:	00 00 00 
    27d8:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27df:	00 00 00 
    27e2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27e9:	00 00 00 
    27ec:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27f3:	00 00 00 
    27f6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27fd:	00 00 00 
    2800:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2807:	00 00 00 
    280a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2811:	00 00 00 
    2814:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    281b:	00 00 00 
    281e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2825:	00 00 00 
    2828:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    282f:	00 00 00 
    2832:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2839:	00 00 00 
    283c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2843:	00 00 00 
    2846:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    284d:	00 00 00 
    2850:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2857:	00 00 00 
    285a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2861:	00 00 00 
    2864:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    286b:	00 00 00 
    286e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2875:	00 00 00 
    2878:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    287f:	00 00 00 
    2882:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2889:	00 00 00 
    288c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2893:	00 00 00 
    2896:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    289d:	00 00 00 
    28a0:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28a7:	00 00 00 
    28aa:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28b1:	00 00 00 
    28b4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28bb:	00 00 00 
    28be:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28c5:	00 00 00 
    28c8:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28cf:	00 00 00 
    28d2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28d9:	00 00 00 
    28dc:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28e3:	00 00 00 
    28e6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28ed:	00 00 00 
    28f0:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28f7:	00 00 00 
    28fa:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2901:	00 00 00 
    2904:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    290b:	00 00 00 
    290e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2915:	00 00 00 
    2918:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    291f:	00 00 00 
    2922:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2929:	00 00 00 
    292c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2933:	00 00 00 
    2936:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    293d:	00 00 00 
    2940:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2947:	00 00 00 
    294a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2951:	00 00 00 
    2954:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    295b:	00 00 00 
    295e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2965:	00 00 00 
    2968:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    296f:	00 00 00 
    2972:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2979:	00 00 00 
    297c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2983:	00 00 00 
    2986:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    298d:	00 00 00 
    2990:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2997:	00 00 00 
    299a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29a1:	00 00 00 
    29a4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29ab:	00 00 00 
    29ae:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29b5:	00 00 00 
    29b8:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29bf:	00 00 00 
    29c2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29c9:	00 00 00 
    29cc:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29d3:	00 00 00 
    29d6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29dd:	00 00 00 
    29e0:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29e7:	00 00 00 
    29ea:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29f1:	00 00 00 
    29f4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29fb:	00 00 00 
    29fe:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a05:	00 00 00 
    2a08:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a0f:	00 00 00 
    2a12:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a19:	00 00 00 
    2a1c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a23:	00 00 00 
    2a26:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a2d:	00 00 00 
    2a30:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a37:	00 00 00 
    2a3a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a41:	00 00 00 
    2a44:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a4b:	00 00 00 
    2a4e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a55:	00 00 00 
    2a58:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a5f:	00 00 00 
    2a62:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a69:	00 00 00 
    2a6c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a73:	00 00 00 
    2a76:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a7d:	00 00 00 
    2a80:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a87:	00 00 00 
    2a8a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a91:	00 00 00 
    2a94:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a9b:	00 00 00 
    2a9e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2aa5:	00 00 00 
    2aa8:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2aaf:	00 00 00 
    2ab2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ab9:	00 00 00 
    2abc:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ac3:	00 00 00 
    2ac6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2acd:	00 00 00 
    2ad0:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ad7:	00 00 00 
    2ada:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ae1:	00 00 00 
    2ae4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2aeb:	00 00 00 
    2aee:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2af5:	00 00 00 
    2af8:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2aff:	00 00 00 
    2b02:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b09:	00 00 00 
    2b0c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b13:	00 00 00 
    2b16:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b1d:	00 00 00 
    2b20:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b27:	00 00 00 
    2b2a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b31:	00 00 00 
    2b34:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b3b:	00 00 00 
    2b3e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b45:	00 00 00 
    2b48:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b4f:	00 00 00 
    2b52:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b59:	00 00 00 
    2b5c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b63:	00 00 00 
    2b66:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b6d:	00 00 00 
    2b70:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b77:	00 00 00 
    2b7a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b81:	00 00 00 
    2b84:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b8b:	00 00 00 
    2b8e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b95:	00 00 00 
    2b98:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b9f:	00 00 00 
    2ba2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ba9:	00 00 00 
    2bac:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2bb3:	00 00 00 
    2bb6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2bbd:	00 00 00 
    2bc0:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2bc7:	00 00 00 
    2bca:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2bd1:	00 00 00 
    2bd4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2bdb:	00 00 00 
    2bde:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2be5:	00 00 00 
    2be8:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2bef:	00 00 00 
    2bf2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2bf9:	00 00 00 
    2bfc:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c03:	00 00 00 
    2c06:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c0d:	00 00 00 
    2c10:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c17:	00 00 00 
    2c1a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c21:	00 00 00 
    2c24:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c2b:	00 00 00 
    2c2e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c35:	00 00 00 
    2c38:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c3f:	00 00 00 
    2c42:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c49:	00 00 00 
    2c4c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c53:	00 00 00 
    2c56:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c5d:	00 00 00 
    2c60:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c67:	00 00 00 
    2c6a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c71:	00 00 00 
    2c74:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c7b:	00 00 00 
    2c7e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c85:	00 00 00 
    2c88:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c8f:	00 00 00 
    2c92:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c99:	00 00 00 
    2c9c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ca3:	00 00 00 
    2ca6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2cad:	00 00 00 
    2cb0:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2cb7:	00 00 00 
    2cba:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2cc1:	00 00 00 
    2cc4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ccb:	00 00 00 
    2cce:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2cd5:	00 00 00 
    2cd8:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2cdf:	00 00 00 
    2ce2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ce9:	00 00 00 
    2cec:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2cf3:	00 00 00 
    2cf6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2cfd:	00 00 00 
    2d00:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d07:	00 00 00 
    2d0a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d11:	00 00 00 
    2d14:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d1b:	00 00 00 
    2d1e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d25:	00 00 00 
    2d28:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d2f:	00 00 00 
    2d32:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d39:	00 00 00 
    2d3c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d43:	00 00 00 
    2d46:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d4d:	00 00 00 
    2d50:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d57:	00 00 00 
    2d5a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d61:	00 00 00 
    2d64:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d6b:	00 00 00 
    2d6e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d75:	00 00 00 
    2d78:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d7f:	00 00 00 
    2d82:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d89:	00 00 00 
    2d8c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d93:	00 00 00 
    2d96:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d9d:	00 00 00 
    2da0:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2da7:	00 00 00 
    2daa:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2db1:	00 00 00 
    2db4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2dbb:	00 00 00 
    2dbe:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2dc5:	00 00 00 
    2dc8:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2dcf:	00 00 00 
    2dd2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2dd9:	00 00 00 
    2ddc:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2de3:	00 00 00 
    2de6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ded:	00 00 00 
    2df0:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2df7:	00 00 00 
    2dfa:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e01:	00 00 00 
    2e04:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e0b:	00 00 00 
    2e0e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e15:	00 00 00 
    2e18:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e1f:	00 00 00 
    2e22:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e29:	00 00 00 
    2e2c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e33:	00 00 00 
    2e36:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e3d:	00 00 00 
    2e40:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e47:	00 00 00 
    2e4a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e51:	00 00 00 
    2e54:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e5b:	00 00 00 
    2e5e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e65:	00 00 00 
    2e68:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e6f:	00 00 00 
    2e72:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e79:	00 00 00 
    2e7c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e83:	00 00 00 
    2e86:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e8d:	00 00 00 
    2e90:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e97:	00 00 00 
    2e9a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ea1:	00 00 00 
    2ea4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2eab:	00 00 00 
    2eae:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2eb5:	00 00 00 
    2eb8:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ebf:	00 00 00 
    2ec2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ec9:	00 00 00 
    2ecc:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ed3:	00 00 00 
    2ed6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2edd:	00 00 00 
    2ee0:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ee7:	00 00 00 
    2eea:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ef1:	00 00 00 
    2ef4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2efb:	00 00 00 
    2efe:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f05:	00 00 00 
    2f08:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f0f:	00 00 00 
    2f12:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f19:	00 00 00 
    2f1c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f23:	00 00 00 
    2f26:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f2d:	00 00 00 
    2f30:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f37:	00 00 00 
    2f3a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f41:	00 00 00 
    2f44:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f4b:	00 00 00 
    2f4e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f55:	00 00 00 
    2f58:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f5f:	00 00 00 
    2f62:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f69:	00 00 00 
    2f6c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f73:	00 00 00 
    2f76:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f7d:	00 00 00 
    2f80:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f87:	00 00 00 
    2f8a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f91:	00 00 00 
    2f94:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f9b:	00 00 00 
    2f9e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2fa5:	00 00 00 
    2fa8:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2faf:	00 00 00 
    2fb2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2fb9:	00 00 00 
    2fbc:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2fc3:	00 00 00 
    2fc6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2fcd:	00 00 00 
    2fd0:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2fd7:	00 00 00 
    2fda:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2fe1:	00 00 00 
    2fe4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2feb:	00 00 00 
    2fee:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ff5:	00 00 00 
    2ff8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    2fff:	00 

0000000000003000 <test_dummy>:
    3000:	b8 00 00 00 00       	mov    $0x0,%eax
    3005:	c3                   	ret    
	...

0000000000004006 <sgx_ecall_clear_all>:
    4006:	f3 0f 1e fa          	endbr64 
    400a:	41 55                	push   %r13
    400c:	41 54                	push   %r12
    400e:	55                   	push   %rbp
    400f:	53                   	push   %rbx
    4010:	48 83 ec 18          	sub    $0x18,%rsp
    4014:	48 85 ff             	test   %rdi,%rdi
    4017:	75 0b                	jne    4024 <sgx_ecall_clear_all+0x1e>
    4019:	41 bc 02 00 00 00    	mov    $0x2,%r12d
    401f:	e9 c7 00 00 00       	jmp    40eb <sgx_ecall_clear_all+0xe5>
    4024:	be 10 00 00 00       	mov    $0x10,%esi
    4029:	48 89 fb             	mov    %rdi,%rbx
    402c:	e8 ef 1e 00 00       	call   5f20 <sgx_is_outside_enclave>
    4031:	85 c0                	test   %eax,%eax
    4033:	74 e4                	je     4019 <sgx_ecall_clear_all+0x13>
    4035:	0f ae e8             	lfence 
    4038:	48 89 e7             	mov    %rsp,%rdi
    403b:	b9 10 00 00 00       	mov    $0x10,%ecx
    4040:	48 89 da             	mov    %rbx,%rdx
    4043:	be 10 00 00 00       	mov    $0x10,%esi
    4048:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    404e:	e8 ed cf 00 00       	call   11040 <memcpy_s>
    4053:	85 c0                	test   %eax,%eax
    4055:	0f 85 90 00 00 00    	jne    40eb <sgx_ecall_clear_all+0xe5>
    405b:	4c 8b 2c 24          	mov    (%rsp),%r13
    405f:	48 8b 6c 24 08       	mov    0x8(%rsp),%rbp
    4064:	4d 85 ed             	test   %r13,%r13
    4067:	75 11                	jne    407a <sgx_ecall_clear_all+0x74>
    4069:	0f ae e8             	lfence 
    406c:	4d 85 ed             	test   %r13,%r13
    406f:	74 05                	je     4076 <sgx_ecall_clear_all+0x70>
    4071:	48 85 ed             	test   %rbp,%rbp
    4074:	75 15                	jne    408b <sgx_ecall_clear_all+0x85>
    4076:	31 db                	xor    %ebx,%ebx
    4078:	eb 59                	jmp    40d3 <sgx_ecall_clear_all+0xcd>
    407a:	48 89 ee             	mov    %rbp,%rsi
    407d:	4c 89 ef             	mov    %r13,%rdi
    4080:	e8 9b 1e 00 00       	call   5f20 <sgx_is_outside_enclave>
    4085:	85 c0                	test   %eax,%eax
    4087:	75 e0                	jne    4069 <sgx_ecall_clear_all+0x63>
    4089:	eb 8e                	jmp    4019 <sgx_ecall_clear_all+0x13>
    408b:	48 89 ef             	mov    %rbp,%rdi
    408e:	41 bc 03 00 00 00    	mov    $0x3,%r12d
    4094:	e8 f7 93 00 00       	call   d490 <dlmalloc>
    4099:	48 89 c3             	mov    %rax,%rbx
    409c:	48 85 c0             	test   %rax,%rax
    409f:	74 4a                	je     40eb <sgx_ecall_clear_all+0xe5>
    40a1:	48 89 e9             	mov    %rbp,%rcx
    40a4:	4c 89 ea             	mov    %r13,%rdx
    40a7:	48 89 ee             	mov    %rbp,%rsi
    40aa:	48 89 c7             	mov    %rax,%rdi
    40ad:	e8 8e cf 00 00       	call   11040 <memcpy_s>
    40b2:	85 c0                	test   %eax,%eax
    40b4:	75 15                	jne    40cb <sgx_ecall_clear_all+0xc5>
    40b6:	c6 44 2b ff 00       	movb   $0x0,-0x1(%rbx,%rbp,1)
    40bb:	48 89 df             	mov    %rbx,%rdi
    40be:	e8 6d cc 00 00       	call   10d30 <strlen>
    40c3:	48 ff c0             	inc    %rax
    40c6:	48 39 e8             	cmp    %rbp,%rax
    40c9:	74 08                	je     40d3 <sgx_ecall_clear_all+0xcd>
    40cb:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    40d1:	eb 10                	jmp    40e3 <sgx_ecall_clear_all+0xdd>
    40d3:	48 89 df             	mov    %rbx,%rdi
    40d6:	45 31 e4             	xor    %r12d,%r12d
    40d9:	e8 49 e1 ff ff       	call   2227 <ecall_clear_all>
    40de:	48 85 db             	test   %rbx,%rbx
    40e1:	74 08                	je     40eb <sgx_ecall_clear_all+0xe5>
    40e3:	48 89 df             	mov    %rbx,%rdi
    40e6:	e8 95 b1 00 00       	call   f280 <dlfree>
    40eb:	48 83 c4 18          	add    $0x18,%rsp
    40ef:	44 89 e0             	mov    %r12d,%eax
    40f2:	5b                   	pop    %rbx
    40f3:	5d                   	pop    %rbp
    40f4:	41 5c                	pop    %r12
    40f6:	41 5d                	pop    %r13
    40f8:	c3                   	ret    

00000000000040f9 <sgx_ecall_init_master_password>:
    40f9:	f3 0f 1e fa          	endbr64 
    40fd:	41 55                	push   %r13
    40ff:	41 54                	push   %r12
    4101:	55                   	push   %rbp
    4102:	53                   	push   %rbx
    4103:	48 83 ec 18          	sub    $0x18,%rsp
    4107:	48 85 ff             	test   %rdi,%rdi
    410a:	75 0b                	jne    4117 <sgx_ecall_init_master_password+0x1e>
    410c:	41 bc 02 00 00 00    	mov    $0x2,%r12d
    4112:	e9 c7 00 00 00       	jmp    41de <sgx_ecall_init_master_password+0xe5>
    4117:	be 10 00 00 00       	mov    $0x10,%esi
    411c:	48 89 fb             	mov    %rdi,%rbx
    411f:	e8 fc 1d 00 00       	call   5f20 <sgx_is_outside_enclave>
    4124:	85 c0                	test   %eax,%eax
    4126:	74 e4                	je     410c <sgx_ecall_init_master_password+0x13>
    4128:	0f ae e8             	lfence 
    412b:	48 89 e7             	mov    %rsp,%rdi
    412e:	b9 10 00 00 00       	mov    $0x10,%ecx
    4133:	48 89 da             	mov    %rbx,%rdx
    4136:	be 10 00 00 00       	mov    $0x10,%esi
    413b:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    4141:	e8 fa ce 00 00       	call   11040 <memcpy_s>
    4146:	85 c0                	test   %eax,%eax
    4148:	0f 85 90 00 00 00    	jne    41de <sgx_ecall_init_master_password+0xe5>
    414e:	4c 8b 2c 24          	mov    (%rsp),%r13
    4152:	48 8b 6c 24 08       	mov    0x8(%rsp),%rbp
    4157:	4d 85 ed             	test   %r13,%r13
    415a:	75 11                	jne    416d <sgx_ecall_init_master_password+0x74>
    415c:	0f ae e8             	lfence 
    415f:	4d 85 ed             	test   %r13,%r13
    4162:	74 05                	je     4169 <sgx_ecall_init_master_password+0x70>
    4164:	48 85 ed             	test   %rbp,%rbp
    4167:	75 15                	jne    417e <sgx_ecall_init_master_password+0x85>
    4169:	31 db                	xor    %ebx,%ebx
    416b:	eb 59                	jmp    41c6 <sgx_ecall_init_master_password+0xcd>
    416d:	48 89 ee             	mov    %rbp,%rsi
    4170:	4c 89 ef             	mov    %r13,%rdi
    4173:	e8 a8 1d 00 00       	call   5f20 <sgx_is_outside_enclave>
    4178:	85 c0                	test   %eax,%eax
    417a:	75 e0                	jne    415c <sgx_ecall_init_master_password+0x63>
    417c:	eb 8e                	jmp    410c <sgx_ecall_init_master_password+0x13>
    417e:	48 89 ef             	mov    %rbp,%rdi
    4181:	41 bc 03 00 00 00    	mov    $0x3,%r12d
    4187:	e8 04 93 00 00       	call   d490 <dlmalloc>
    418c:	48 89 c3             	mov    %rax,%rbx
    418f:	48 85 c0             	test   %rax,%rax
    4192:	74 4a                	je     41de <sgx_ecall_init_master_password+0xe5>
    4194:	48 89 e9             	mov    %rbp,%rcx
    4197:	4c 89 ea             	mov    %r13,%rdx
    419a:	48 89 ee             	mov    %rbp,%rsi
    419d:	48 89 c7             	mov    %rax,%rdi
    41a0:	e8 9b ce 00 00       	call   11040 <memcpy_s>
    41a5:	85 c0                	test   %eax,%eax
    41a7:	75 15                	jne    41be <sgx_ecall_init_master_password+0xc5>
    41a9:	c6 44 2b ff 00       	movb   $0x0,-0x1(%rbx,%rbp,1)
    41ae:	48 89 df             	mov    %rbx,%rdi
    41b1:	e8 7a cb 00 00       	call   10d30 <strlen>
    41b6:	48 ff c0             	inc    %rax
    41b9:	48 39 e8             	cmp    %rbp,%rax
    41bc:	74 08                	je     41c6 <sgx_ecall_init_master_password+0xcd>
    41be:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    41c4:	eb 10                	jmp    41d6 <sgx_ecall_init_master_password+0xdd>
    41c6:	48 89 df             	mov    %rbx,%rdi
    41c9:	45 31 e4             	xor    %r12d,%r12d
    41cc:	e8 a8 de ff ff       	call   2079 <ecall_init_master_password>
    41d1:	48 85 db             	test   %rbx,%rbx
    41d4:	74 08                	je     41de <sgx_ecall_init_master_password+0xe5>
    41d6:	48 89 df             	mov    %rbx,%rdi
    41d9:	e8 a2 b0 00 00       	call   f280 <dlfree>
    41de:	48 83 c4 18          	add    $0x18,%rsp
    41e2:	44 89 e0             	mov    %r12d,%eax
    41e5:	5b                   	pop    %rbx
    41e6:	5d                   	pop    %rbp
    41e7:	41 5c                	pop    %r12
    41e9:	41 5d                	pop    %r13
    41eb:	c3                   	ret    

00000000000041ec <sgx_ecall_get_passwords>:
    41ec:	f3 0f 1e fa          	endbr64 
    41f0:	41 55                	push   %r13
    41f2:	41 54                	push   %r12
    41f4:	55                   	push   %rbp
    41f5:	53                   	push   %rbx
    41f6:	48 83 ec 18          	sub    $0x18,%rsp
    41fa:	48 85 ff             	test   %rdi,%rdi
    41fd:	75 0b                	jne    420a <sgx_ecall_get_passwords+0x1e>
    41ff:	41 bc 02 00 00 00    	mov    $0x2,%r12d
    4205:	e9 c7 00 00 00       	jmp    42d1 <sgx_ecall_get_passwords+0xe5>
    420a:	be 10 00 00 00       	mov    $0x10,%esi
    420f:	48 89 fb             	mov    %rdi,%rbx
    4212:	e8 09 1d 00 00       	call   5f20 <sgx_is_outside_enclave>
    4217:	85 c0                	test   %eax,%eax
    4219:	74 e4                	je     41ff <sgx_ecall_get_passwords+0x13>
    421b:	0f ae e8             	lfence 
    421e:	48 89 e7             	mov    %rsp,%rdi
    4221:	b9 10 00 00 00       	mov    $0x10,%ecx
    4226:	48 89 da             	mov    %rbx,%rdx
    4229:	be 10 00 00 00       	mov    $0x10,%esi
    422e:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    4234:	e8 07 ce 00 00       	call   11040 <memcpy_s>
    4239:	85 c0                	test   %eax,%eax
    423b:	0f 85 90 00 00 00    	jne    42d1 <sgx_ecall_get_passwords+0xe5>
    4241:	4c 8b 2c 24          	mov    (%rsp),%r13
    4245:	48 8b 6c 24 08       	mov    0x8(%rsp),%rbp
    424a:	4d 85 ed             	test   %r13,%r13
    424d:	75 11                	jne    4260 <sgx_ecall_get_passwords+0x74>
    424f:	0f ae e8             	lfence 
    4252:	4d 85 ed             	test   %r13,%r13
    4255:	74 05                	je     425c <sgx_ecall_get_passwords+0x70>
    4257:	48 85 ed             	test   %rbp,%rbp
    425a:	75 15                	jne    4271 <sgx_ecall_get_passwords+0x85>
    425c:	31 db                	xor    %ebx,%ebx
    425e:	eb 59                	jmp    42b9 <sgx_ecall_get_passwords+0xcd>
    4260:	48 89 ee             	mov    %rbp,%rsi
    4263:	4c 89 ef             	mov    %r13,%rdi
    4266:	e8 b5 1c 00 00       	call   5f20 <sgx_is_outside_enclave>
    426b:	85 c0                	test   %eax,%eax
    426d:	75 e0                	jne    424f <sgx_ecall_get_passwords+0x63>
    426f:	eb 8e                	jmp    41ff <sgx_ecall_get_passwords+0x13>
    4271:	48 89 ef             	mov    %rbp,%rdi
    4274:	41 bc 03 00 00 00    	mov    $0x3,%r12d
    427a:	e8 11 92 00 00       	call   d490 <dlmalloc>
    427f:	48 89 c3             	mov    %rax,%rbx
    4282:	48 85 c0             	test   %rax,%rax
    4285:	74 4a                	je     42d1 <sgx_ecall_get_passwords+0xe5>
    4287:	48 89 e9             	mov    %rbp,%rcx
    428a:	4c 89 ea             	mov    %r13,%rdx
    428d:	48 89 ee             	mov    %rbp,%rsi
    4290:	48 89 c7             	mov    %rax,%rdi
    4293:	e8 a8 cd 00 00       	call   11040 <memcpy_s>
    4298:	85 c0                	test   %eax,%eax
    429a:	75 15                	jne    42b1 <sgx_ecall_get_passwords+0xc5>
    429c:	c6 44 2b ff 00       	movb   $0x0,-0x1(%rbx,%rbp,1)
    42a1:	48 89 df             	mov    %rbx,%rdi
    42a4:	e8 87 ca 00 00       	call   10d30 <strlen>
    42a9:	48 ff c0             	inc    %rax
    42ac:	48 39 e8             	cmp    %rbp,%rax
    42af:	74 08                	je     42b9 <sgx_ecall_get_passwords+0xcd>
    42b1:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    42b7:	eb 10                	jmp    42c9 <sgx_ecall_get_passwords+0xdd>
    42b9:	48 89 df             	mov    %rbx,%rdi
    42bc:	45 31 e4             	xor    %r12d,%r12d
    42bf:	e8 cb de ff ff       	call   218f <ecall_get_passwords>
    42c4:	48 85 db             	test   %rbx,%rbx
    42c7:	74 08                	je     42d1 <sgx_ecall_get_passwords+0xe5>
    42c9:	48 89 df             	mov    %rbx,%rdi
    42cc:	e8 af af 00 00       	call   f280 <dlfree>
    42d1:	48 83 c4 18          	add    $0x18,%rsp
    42d5:	44 89 e0             	mov    %r12d,%eax
    42d8:	5b                   	pop    %rbx
    42d9:	5d                   	pop    %rbp
    42da:	41 5c                	pop    %r12
    42dc:	41 5d                	pop    %r13
    42de:	c3                   	ret    

00000000000042df <sgx_ecall_change_master_password>:
    42df:	f3 0f 1e fa          	endbr64 
    42e3:	41 56                	push   %r14
    42e5:	41 55                	push   %r13
    42e7:	41 54                	push   %r12
    42e9:	55                   	push   %rbp
    42ea:	53                   	push   %rbx
    42eb:	48 83 ec 20          	sub    $0x20,%rsp
    42ef:	48 85 ff             	test   %rdi,%rdi
    42f2:	75 0b                	jne    42ff <sgx_ecall_change_master_password+0x20>
    42f4:	41 bc 02 00 00 00    	mov    $0x2,%r12d
    42fa:	e9 6e 01 00 00       	jmp    446d <sgx_ecall_change_master_password+0x18e>
    42ff:	be 20 00 00 00       	mov    $0x20,%esi
    4304:	48 89 fb             	mov    %rdi,%rbx
    4307:	e8 14 1c 00 00       	call   5f20 <sgx_is_outside_enclave>
    430c:	85 c0                	test   %eax,%eax
    430e:	74 e4                	je     42f4 <sgx_ecall_change_master_password+0x15>
    4310:	0f ae e8             	lfence 
    4313:	48 89 e7             	mov    %rsp,%rdi
    4316:	b9 20 00 00 00       	mov    $0x20,%ecx
    431b:	48 89 da             	mov    %rbx,%rdx
    431e:	be 20 00 00 00       	mov    $0x20,%esi
    4323:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    4329:	e8 12 cd 00 00       	call   11040 <memcpy_s>
    432e:	85 c0                	test   %eax,%eax
    4330:	0f 85 37 01 00 00    	jne    446d <sgx_ecall_change_master_password+0x18e>
    4336:	4c 8b 34 24          	mov    (%rsp),%r14
    433a:	48 8b 6c 24 08       	mov    0x8(%rsp),%rbp
    433f:	4c 8b 6c 24 10       	mov    0x10(%rsp),%r13
    4344:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
    4349:	4d 85 f6             	test   %r14,%r14
    434c:	75 07                	jne    4355 <sgx_ecall_change_master_password+0x76>
    434e:	4d 85 ed             	test   %r13,%r13
    4351:	75 13                	jne    4366 <sgx_ecall_change_master_password+0x87>
    4353:	eb 24                	jmp    4379 <sgx_ecall_change_master_password+0x9a>
    4355:	48 89 ee             	mov    %rbp,%rsi
    4358:	4c 89 f7             	mov    %r14,%rdi
    435b:	e8 c0 1b 00 00       	call   5f20 <sgx_is_outside_enclave>
    4360:	85 c0                	test   %eax,%eax
    4362:	75 ea                	jne    434e <sgx_ecall_change_master_password+0x6f>
    4364:	eb 8e                	jmp    42f4 <sgx_ecall_change_master_password+0x15>
    4366:	4c 89 e6             	mov    %r12,%rsi
    4369:	4c 89 ef             	mov    %r13,%rdi
    436c:	e8 af 1b 00 00       	call   5f20 <sgx_is_outside_enclave>
    4371:	85 c0                	test   %eax,%eax
    4373:	0f 84 7b ff ff ff    	je     42f4 <sgx_ecall_change_master_password+0x15>
    4379:	0f ae e8             	lfence 
    437c:	4d 85 f6             	test   %r14,%r14
    437f:	74 05                	je     4386 <sgx_ecall_change_master_password+0xa7>
    4381:	48 85 ed             	test   %rbp,%rbp
    4384:	75 04                	jne    438a <sgx_ecall_change_master_password+0xab>
    4386:	31 db                	xor    %ebx,%ebx
    4388:	eb 46                	jmp    43d0 <sgx_ecall_change_master_password+0xf1>
    438a:	48 89 ef             	mov    %rbp,%rdi
    438d:	e8 fe 90 00 00       	call   d490 <dlmalloc>
    4392:	48 89 c3             	mov    %rax,%rbx
    4395:	48 85 c0             	test   %rax,%rax
    4398:	0f 84 c9 00 00 00    	je     4467 <sgx_ecall_change_master_password+0x188>
    439e:	48 89 e9             	mov    %rbp,%rcx
    43a1:	4c 89 f2             	mov    %r14,%rdx
    43a4:	48 89 ee             	mov    %rbp,%rsi
    43a7:	48 89 c7             	mov    %rax,%rdi
    43aa:	e8 91 cc 00 00       	call   11040 <memcpy_s>
    43af:	85 c0                	test   %eax,%eax
    43b1:	0f 85 99 00 00 00    	jne    4450 <sgx_ecall_change_master_password+0x171>
    43b7:	c6 44 2b ff 00       	movb   $0x0,-0x1(%rbx,%rbp,1)
    43bc:	48 89 df             	mov    %rbx,%rdi
    43bf:	e8 6c c9 00 00       	call   10d30 <strlen>
    43c4:	48 ff c0             	inc    %rax
    43c7:	48 39 e8             	cmp    %rbp,%rax
    43ca:	0f 85 80 00 00 00    	jne    4450 <sgx_ecall_change_master_password+0x171>
    43d0:	4d 85 ed             	test   %r13,%r13
    43d3:	74 42                	je     4417 <sgx_ecall_change_master_password+0x138>
    43d5:	4d 85 e4             	test   %r12,%r12
    43d8:	74 3d                	je     4417 <sgx_ecall_change_master_password+0x138>
    43da:	4c 89 e7             	mov    %r12,%rdi
    43dd:	e8 ae 90 00 00       	call   d490 <dlmalloc>
    43e2:	48 89 c5             	mov    %rax,%rbp
    43e5:	48 85 c0             	test   %rax,%rax
    43e8:	74 44                	je     442e <sgx_ecall_change_master_password+0x14f>
    43ea:	4c 89 e1             	mov    %r12,%rcx
    43ed:	4c 89 ea             	mov    %r13,%rdx
    43f0:	4c 89 e6             	mov    %r12,%rsi
    43f3:	48 89 c7             	mov    %rax,%rdi
    43f6:	e8 45 cc 00 00       	call   11040 <memcpy_s>
    43fb:	85 c0                	test   %eax,%eax
    43fd:	75 5b                	jne    445a <sgx_ecall_change_master_password+0x17b>
    43ff:	42 c6 44 25 ff 00    	movb   $0x0,-0x1(%rbp,%r12,1)
    4405:	48 89 ef             	mov    %rbp,%rdi
    4408:	e8 23 c9 00 00       	call   10d30 <strlen>
    440d:	48 ff c0             	inc    %rax
    4410:	4c 39 e0             	cmp    %r12,%rax
    4413:	75 45                	jne    445a <sgx_ecall_change_master_password+0x17b>
    4415:	eb 02                	jmp    4419 <sgx_ecall_change_master_password+0x13a>
    4417:	31 ed                	xor    %ebp,%ebp
    4419:	48 89 ee             	mov    %rbp,%rsi
    441c:	48 89 df             	mov    %rbx,%rdi
    441f:	45 31 e4             	xor    %r12d,%r12d
    4422:	e8 b8 dd ff ff       	call   21df <ecall_change_master_password>
    4427:	48 85 db             	test   %rbx,%rbx
    442a:	74 15                	je     4441 <sgx_ecall_change_master_password+0x162>
    442c:	eb 0b                	jmp    4439 <sgx_ecall_change_master_password+0x15a>
    442e:	48 85 db             	test   %rbx,%rbx
    4431:	74 34                	je     4467 <sgx_ecall_change_master_password+0x188>
    4433:	41 bc 03 00 00 00    	mov    $0x3,%r12d
    4439:	48 89 df             	mov    %rbx,%rdi
    443c:	e8 3f ae 00 00       	call   f280 <dlfree>
    4441:	48 85 ed             	test   %rbp,%rbp
    4444:	74 27                	je     446d <sgx_ecall_change_master_password+0x18e>
    4446:	48 89 ef             	mov    %rbp,%rdi
    4449:	e8 32 ae 00 00       	call   f280 <dlfree>
    444e:	eb 1d                	jmp    446d <sgx_ecall_change_master_password+0x18e>
    4450:	31 ed                	xor    %ebp,%ebp
    4452:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    4458:	eb df                	jmp    4439 <sgx_ecall_change_master_password+0x15a>
    445a:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    4460:	48 85 db             	test   %rbx,%rbx
    4463:	74 e1                	je     4446 <sgx_ecall_change_master_password+0x167>
    4465:	eb eb                	jmp    4452 <sgx_ecall_change_master_password+0x173>
    4467:	41 bc 03 00 00 00    	mov    $0x3,%r12d
    446d:	48 83 c4 20          	add    $0x20,%rsp
    4471:	44 89 e0             	mov    %r12d,%eax
    4474:	5b                   	pop    %rbx
    4475:	5d                   	pop    %rbp
    4476:	41 5c                	pop    %r12
    4478:	41 5d                	pop    %r13
    447a:	41 5e                	pop    %r14
    447c:	c3                   	ret    

000000000000447d <sgx_ecall_add_password>:
    447d:	f3 0f 1e fa          	endbr64 
    4481:	41 56                	push   %r14
    4483:	41 55                	push   %r13
    4485:	41 54                	push   %r12
    4487:	55                   	push   %rbp
    4488:	53                   	push   %rbx
    4489:	48 83 ec 20          	sub    $0x20,%rsp
    448d:	48 85 ff             	test   %rdi,%rdi
    4490:	75 0b                	jne    449d <sgx_ecall_add_password+0x20>
    4492:	41 bc 02 00 00 00    	mov    $0x2,%r12d
    4498:	e9 6e 01 00 00       	jmp    460b <sgx_ecall_add_password+0x18e>
    449d:	be 20 00 00 00       	mov    $0x20,%esi
    44a2:	48 89 fb             	mov    %rdi,%rbx
    44a5:	e8 76 1a 00 00       	call   5f20 <sgx_is_outside_enclave>
    44aa:	85 c0                	test   %eax,%eax
    44ac:	74 e4                	je     4492 <sgx_ecall_add_password+0x15>
    44ae:	0f ae e8             	lfence 
    44b1:	48 89 e7             	mov    %rsp,%rdi
    44b4:	b9 20 00 00 00       	mov    $0x20,%ecx
    44b9:	48 89 da             	mov    %rbx,%rdx
    44bc:	be 20 00 00 00       	mov    $0x20,%esi
    44c1:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    44c7:	e8 74 cb 00 00       	call   11040 <memcpy_s>
    44cc:	85 c0                	test   %eax,%eax
    44ce:	0f 85 37 01 00 00    	jne    460b <sgx_ecall_add_password+0x18e>
    44d4:	4c 8b 34 24          	mov    (%rsp),%r14
    44d8:	48 8b 6c 24 08       	mov    0x8(%rsp),%rbp
    44dd:	4c 8b 6c 24 10       	mov    0x10(%rsp),%r13
    44e2:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
    44e7:	4d 85 f6             	test   %r14,%r14
    44ea:	75 07                	jne    44f3 <sgx_ecall_add_password+0x76>
    44ec:	4d 85 ed             	test   %r13,%r13
    44ef:	75 13                	jne    4504 <sgx_ecall_add_password+0x87>
    44f1:	eb 24                	jmp    4517 <sgx_ecall_add_password+0x9a>
    44f3:	48 89 ee             	mov    %rbp,%rsi
    44f6:	4c 89 f7             	mov    %r14,%rdi
    44f9:	e8 22 1a 00 00       	call   5f20 <sgx_is_outside_enclave>
    44fe:	85 c0                	test   %eax,%eax
    4500:	75 ea                	jne    44ec <sgx_ecall_add_password+0x6f>
    4502:	eb 8e                	jmp    4492 <sgx_ecall_add_password+0x15>
    4504:	4c 89 e6             	mov    %r12,%rsi
    4507:	4c 89 ef             	mov    %r13,%rdi
    450a:	e8 11 1a 00 00       	call   5f20 <sgx_is_outside_enclave>
    450f:	85 c0                	test   %eax,%eax
    4511:	0f 84 7b ff ff ff    	je     4492 <sgx_ecall_add_password+0x15>
    4517:	0f ae e8             	lfence 
    451a:	4d 85 f6             	test   %r14,%r14
    451d:	74 05                	je     4524 <sgx_ecall_add_password+0xa7>
    451f:	48 85 ed             	test   %rbp,%rbp
    4522:	75 04                	jne    4528 <sgx_ecall_add_password+0xab>
    4524:	31 db                	xor    %ebx,%ebx
    4526:	eb 46                	jmp    456e <sgx_ecall_add_password+0xf1>
    4528:	48 89 ef             	mov    %rbp,%rdi
    452b:	e8 60 8f 00 00       	call   d490 <dlmalloc>
    4530:	48 89 c3             	mov    %rax,%rbx
    4533:	48 85 c0             	test   %rax,%rax
    4536:	0f 84 c9 00 00 00    	je     4605 <sgx_ecall_add_password+0x188>
    453c:	48 89 e9             	mov    %rbp,%rcx
    453f:	4c 89 f2             	mov    %r14,%rdx
    4542:	48 89 ee             	mov    %rbp,%rsi
    4545:	48 89 c7             	mov    %rax,%rdi
    4548:	e8 f3 ca 00 00       	call   11040 <memcpy_s>
    454d:	85 c0                	test   %eax,%eax
    454f:	0f 85 99 00 00 00    	jne    45ee <sgx_ecall_add_password+0x171>
    4555:	c6 44 2b ff 00       	movb   $0x0,-0x1(%rbx,%rbp,1)
    455a:	48 89 df             	mov    %rbx,%rdi
    455d:	e8 ce c7 00 00       	call   10d30 <strlen>
    4562:	48 ff c0             	inc    %rax
    4565:	48 39 e8             	cmp    %rbp,%rax
    4568:	0f 85 80 00 00 00    	jne    45ee <sgx_ecall_add_password+0x171>
    456e:	4d 85 ed             	test   %r13,%r13
    4571:	74 42                	je     45b5 <sgx_ecall_add_password+0x138>
    4573:	4d 85 e4             	test   %r12,%r12
    4576:	74 3d                	je     45b5 <sgx_ecall_add_password+0x138>
    4578:	4c 89 e7             	mov    %r12,%rdi
    457b:	e8 10 8f 00 00       	call   d490 <dlmalloc>
    4580:	48 89 c5             	mov    %rax,%rbp
    4583:	48 85 c0             	test   %rax,%rax
    4586:	74 44                	je     45cc <sgx_ecall_add_password+0x14f>
    4588:	4c 89 e1             	mov    %r12,%rcx
    458b:	4c 89 ea             	mov    %r13,%rdx
    458e:	4c 89 e6             	mov    %r12,%rsi
    4591:	48 89 c7             	mov    %rax,%rdi
    4594:	e8 a7 ca 00 00       	call   11040 <memcpy_s>
    4599:	85 c0                	test   %eax,%eax
    459b:	75 5b                	jne    45f8 <sgx_ecall_add_password+0x17b>
    459d:	42 c6 44 25 ff 00    	movb   $0x0,-0x1(%rbp,%r12,1)
    45a3:	48 89 ef             	mov    %rbp,%rdi
    45a6:	e8 85 c7 00 00       	call   10d30 <strlen>
    45ab:	48 ff c0             	inc    %rax
    45ae:	4c 39 e0             	cmp    %r12,%rax
    45b1:	75 45                	jne    45f8 <sgx_ecall_add_password+0x17b>
    45b3:	eb 02                	jmp    45b7 <sgx_ecall_add_password+0x13a>
    45b5:	31 ed                	xor    %ebp,%ebp
    45b7:	48 89 ee             	mov    %rbp,%rsi
    45ba:	48 89 df             	mov    %rbx,%rdi
    45bd:	45 31 e4             	xor    %r12d,%r12d
    45c0:	e8 ec da ff ff       	call   20b1 <ecall_add_password>
    45c5:	48 85 db             	test   %rbx,%rbx
    45c8:	74 15                	je     45df <sgx_ecall_add_password+0x162>
    45ca:	eb 0b                	jmp    45d7 <sgx_ecall_add_password+0x15a>
    45cc:	48 85 db             	test   %rbx,%rbx
    45cf:	74 34                	je     4605 <sgx_ecall_add_password+0x188>
    45d1:	41 bc 03 00 00 00    	mov    $0x3,%r12d
    45d7:	48 89 df             	mov    %rbx,%rdi
    45da:	e8 a1 ac 00 00       	call   f280 <dlfree>
    45df:	48 85 ed             	test   %rbp,%rbp
    45e2:	74 27                	je     460b <sgx_ecall_add_password+0x18e>
    45e4:	48 89 ef             	mov    %rbp,%rdi
    45e7:	e8 94 ac 00 00       	call   f280 <dlfree>
    45ec:	eb 1d                	jmp    460b <sgx_ecall_add_password+0x18e>
    45ee:	31 ed                	xor    %ebp,%ebp
    45f0:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    45f6:	eb df                	jmp    45d7 <sgx_ecall_add_password+0x15a>
    45f8:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    45fe:	48 85 db             	test   %rbx,%rbx
    4601:	74 e1                	je     45e4 <sgx_ecall_add_password+0x167>
    4603:	eb eb                	jmp    45f0 <sgx_ecall_add_password+0x173>
    4605:	41 bc 03 00 00 00    	mov    $0x3,%r12d
    460b:	48 83 c4 20          	add    $0x20,%rsp
    460f:	44 89 e0             	mov    %r12d,%eax
    4612:	5b                   	pop    %rbx
    4613:	5d                   	pop    %rbp
    4614:	41 5c                	pop    %r12
    4616:	41 5d                	pop    %r13
    4618:	41 5e                	pop    %r14
    461a:	c3                   	ret    

000000000000461b <sgx_ecall_setup>:
    461b:	f3 0f 1e fa          	endbr64 
    461f:	48 85 ff             	test   %rdi,%rdi
    4622:	75 0a                	jne    462e <sgx_ecall_setup+0x13>
    4624:	50                   	push   %rax
    4625:	e8 ea da ff ff       	call   2114 <ecall_setup>
    462a:	31 c0                	xor    %eax,%eax
    462c:	5a                   	pop    %rdx
    462d:	c3                   	ret    
    462e:	b8 02 00 00 00       	mov    $0x2,%eax
    4633:	c3                   	ret    

0000000000004634 <ocall_print>:
    4634:	f3 0f 1e fa          	endbr64 
    4638:	41 55                	push   %r13
    463a:	41 54                	push   %r12
    463c:	55                   	push   %rbp
    463d:	31 ed                	xor    %ebp,%ebp
    463f:	53                   	push   %rbx
    4640:	48 89 fb             	mov    %rdi,%rbx
    4643:	48 83 ec 28          	sub    $0x28,%rsp
    4647:	48 85 ff             	test   %rdi,%rdi
    464a:	74 09                	je     4655 <ocall_print+0x21>
    464c:	e8 df c6 00 00       	call   10d30 <strlen>
    4651:	48 8d 68 01          	lea    0x1(%rax),%rbp
    4655:	31 c9                	xor    %ecx,%ecx
    4657:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
    465c:	48 85 db             	test   %rbx,%rbx
    465f:	74 1c                	je     467d <ocall_print+0x49>
    4661:	48 89 ee             	mov    %rbp,%rsi
    4664:	48 89 df             	mov    %rbx,%rdi
    4667:	49 89 ed             	mov    %rbp,%r13
    466a:	e8 51 18 00 00       	call   5ec0 <sgx_is_within_enclave>
    466f:	85 c0                	test   %eax,%eax
    4671:	75 0d                	jne    4680 <ocall_print+0x4c>
    4673:	b8 02 00 00 00       	mov    $0x2,%eax
    4678:	e9 95 00 00 00       	jmp    4712 <ocall_print+0xde>
    467d:	45 31 ed             	xor    %r13d,%r13d
    4680:	49 8d 7d 08          	lea    0x8(%r13),%rdi
    4684:	48 39 ef             	cmp    %rbp,%rdi
    4687:	73 05                	jae    468e <ocall_print+0x5a>
    4689:	48 85 db             	test   %rbx,%rbx
    468c:	75 e5                	jne    4673 <ocall_print+0x3f>
    468e:	e8 ed 18 00 00       	call   5f80 <sgx_ocalloc>
    4693:	49 89 c4             	mov    %rax,%r12
    4696:	48 85 c0             	test   %rax,%rax
    4699:	75 13                	jne    46ae <ocall_print+0x7a>
    469b:	31 d2                	xor    %edx,%edx
    469d:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
    46a2:	e8 b9 19 00 00       	call   6060 <sgx_ocfree>
    46a7:	b8 01 00 00 00       	mov    $0x1,%eax
    46ac:	eb 64                	jmp    4712 <ocall_print+0xde>
    46ae:	48 8d 40 08          	lea    0x8(%rax),%rax
    46b2:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    46b7:	48 85 db             	test   %rbx,%rbx
    46ba:	74 39                	je     46f5 <ocall_print+0xc1>
    46bc:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
    46c1:	b9 08 00 00 00       	mov    $0x8,%ecx
    46c6:	be 08 00 00 00       	mov    $0x8,%esi
    46cb:	4c 89 e7             	mov    %r12,%rdi
    46ce:	e8 ed c9 00 00       	call   110c0 <memcpy_verw_s>
    46d3:	85 c0                	test   %eax,%eax
    46d5:	75 cb                	jne    46a2 <ocall_print+0x6e>
    46d7:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    46dc:	48 89 e9             	mov    %rbp,%rcx
    46df:	48 89 da             	mov    %rbx,%rdx
    46e2:	4c 89 ee             	mov    %r13,%rsi
    46e5:	e8 d6 c9 00 00       	call   110c0 <memcpy_verw_s>
    46ea:	85 c0                	test   %eax,%eax
    46ec:	75 b4                	jne    46a2 <ocall_print+0x6e>
    46ee:	48 01 6c 24 18       	add    %rbp,0x18(%rsp)
    46f3:	eb 06                	jmp    46fb <ocall_print+0xc7>
    46f5:	31 c0                	xor    %eax,%eax
    46f7:	49 89 04 24          	mov    %rax,(%r12)
    46fb:	4c 89 e6             	mov    %r12,%rsi
    46fe:	31 ff                	xor    %edi,%edi
    4700:	e8 6b 2e 00 00       	call   7570 <sgx_ocall>
    4705:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    4709:	e8 52 19 00 00       	call   6060 <sgx_ocfree>
    470e:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    4712:	48 83 c4 28          	add    $0x28,%rsp
    4716:	5b                   	pop    %rbx
    4717:	5d                   	pop    %rbp
    4718:	41 5c                	pop    %r12
    471a:	41 5d                	pop    %r13
    471c:	c3                   	ret    
    471d:	0f 1f 00             	nopl   (%rax)

0000000000004720 <register_value_select>:
    4720:	89 f1                	mov    %esi,%ecx
    4722:	31 c0                	xor    %eax,%eax
    4724:	48 83 f9 00          	cmp    $0x0,%rcx
    4728:	48 0f 44 07          	cmove  (%rdi),%rax
    472c:	48 83 f9 01          	cmp    $0x1,%rcx
    4730:	48 0f 44 47 08       	cmove  0x8(%rdi),%rax
    4735:	48 83 f9 02          	cmp    $0x2,%rcx
    4739:	48 0f 44 47 10       	cmove  0x10(%rdi),%rax
    473e:	48 83 f9 03          	cmp    $0x3,%rcx
    4742:	48 0f 44 47 18       	cmove  0x18(%rdi),%rax
    4747:	48 83 f9 04          	cmp    $0x4,%rcx
    474b:	48 0f 44 47 20       	cmove  0x20(%rdi),%rax
    4750:	48 83 f9 05          	cmp    $0x5,%rcx
    4754:	48 0f 44 47 28       	cmove  0x28(%rdi),%rax
    4759:	48 83 f9 06          	cmp    $0x6,%rcx
    475d:	48 0f 44 47 30       	cmove  0x30(%rdi),%rax
    4762:	48 83 f9 07          	cmp    $0x7,%rcx
    4766:	48 0f 44 47 38       	cmove  0x38(%rdi),%rax
    476b:	48 83 f9 08          	cmp    $0x8,%rcx
    476f:	48 0f 44 47 40       	cmove  0x40(%rdi),%rax
    4774:	48 83 f9 09          	cmp    $0x9,%rcx
    4778:	48 0f 44 47 48       	cmove  0x48(%rdi),%rax
    477d:	48 83 f9 0a          	cmp    $0xa,%rcx
    4781:	48 0f 44 47 50       	cmove  0x50(%rdi),%rax
    4786:	48 83 f9 0b          	cmp    $0xb,%rcx
    478a:	48 0f 44 47 58       	cmove  0x58(%rdi),%rax
    478f:	48 83 f9 0c          	cmp    $0xc,%rcx
    4793:	48 0f 44 47 60       	cmove  0x60(%rdi),%rax
    4798:	48 83 f9 0d          	cmp    $0xd,%rcx
    479c:	48 0f 44 47 68       	cmove  0x68(%rdi),%rax
    47a1:	48 83 f9 0e          	cmp    $0xe,%rcx
    47a5:	48 0f 44 47 70       	cmove  0x70(%rdi),%rax
    47aa:	48 83 f9 0f          	cmp    $0xf,%rcx
    47ae:	48 0f 44 47 78       	cmove  0x78(%rdi),%rax
    47b3:	c3                   	ret    
    47b4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    47bb:	00 00 00 
    47be:	66 90                	xchg   %ax,%ax

00000000000047c0 <ct_decode>:
    47c0:	f3 0f 1e fa          	endbr64 
    47c4:	55                   	push   %rbp
    47c5:	48 89 e5             	mov    %rsp,%rbp
    47c8:	41 57                	push   %r15
    47ca:	41 56                	push   %r14
    47cc:	41 55                	push   %r13
    47ce:	41 54                	push   %r12
    47d0:	53                   	push   %rbx
    47d1:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    47d5:	48 81 ec 40 05 00 00 	sub    $0x540,%rsp
    47dc:	48 89 7c 24 78       	mov    %rdi,0x78(%rsp)
    47e1:	48 89 74 24 50       	mov    %rsi,0x50(%rsp)
    47e6:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    47ed:	00 00 
    47ef:	48 89 84 24 38 05 00 	mov    %rax,0x538(%rsp)
    47f6:	00 
    47f7:	31 c0                	xor    %eax,%eax
    47f9:	48 8d 84 24 00 01 00 	lea    0x100(%rsp),%rax
    4800:	00 
    4801:	f6 05 2b 36 01 00 08 	testb  $0x8,0x1362b(%rip)        # 17e33 <g_cpu_feature_indicator+0x3>
    4808:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    480d:	0f 84 fd 0f 00 00    	je     5810 <ct_decode+0x1050>
    4813:	62 f1 7c 48 29 00    	vmovaps %zmm0,(%rax)
    4819:	62 f1 7c 48 29 48 01 	vmovaps %zmm1,0x40(%rax)
    4820:	62 f1 7c 48 29 50 02 	vmovaps %zmm2,0x80(%rax)
    4827:	62 f1 7c 48 29 58 03 	vmovaps %zmm3,0xc0(%rax)
    482e:	62 f1 7c 48 29 60 04 	vmovaps %zmm4,0x100(%rax)
    4835:	62 f1 7c 48 29 68 05 	vmovaps %zmm5,0x140(%rax)
    483c:	62 f1 7c 48 29 70 06 	vmovaps %zmm6,0x180(%rax)
    4843:	62 f1 7c 48 29 78 07 	vmovaps %zmm7,0x1c0(%rax)
    484a:	62 71 7c 48 29 40 08 	vmovaps %zmm8,0x200(%rax)
    4851:	62 71 7c 48 29 48 09 	vmovaps %zmm9,0x240(%rax)
    4858:	62 71 7c 48 29 50 0a 	vmovaps %zmm10,0x280(%rax)
    485f:	62 71 7c 48 29 58 0b 	vmovaps %zmm11,0x2c0(%rax)
    4866:	62 71 7c 48 29 60 0c 	vmovaps %zmm12,0x300(%rax)
    486d:	62 71 7c 48 29 68 0d 	vmovaps %zmm13,0x340(%rax)
    4874:	62 71 7c 48 29 70 0e 	vmovaps %zmm14,0x380(%rax)
    487b:	62 71 7c 48 29 78 0f 	vmovaps %zmm15,0x3c0(%rax)
    4882:	48 8b 7c 24 78       	mov    0x78(%rsp),%rdi
    4887:	31 c9                	xor    %ecx,%ecx
    4889:	ba f0 0f 00 00       	mov    $0xff0,%edx
    488e:	48 be f0 f0 f0 f0 f0 	movabs $0xf0f0f0f0f0f0f0f0,%rsi
    4895:	f0 f0 f0 
    4898:	c4 e1 f9 6e c6       	vmovq  %rsi,%xmm0
    489d:	c5 f9 6f 25 7b 38 01 	vmovdqa 0x1387b(%rip),%xmm4        # 18120 <standard>
    48a4:	00 
    48a5:	49 bb 80 80 80 80 80 	movabs $0x8080808080808080,%r11
    48ac:	80 80 80 
    48af:	c4 e3 5d 38 25 67 37 	vinserti128 $0x1,0x13767(%rip),%ymm4,%ymm4        # 18020 <extended>
    48b6:	01 00 01 
    48b9:	4c 8b b7 88 00 00 00 	mov    0x88(%rdi),%r14
    48c0:	c4 e2 7d 59 c0       	vpbroadcastq %xmm0,%ymm0
    48c5:	c5 79 6f 2d 73 38 01 	vmovdqa 0x13873(%rip),%xmm13        # 18140 <standard+0x20>
    48cc:	00 
    48cd:	48 bf ff ff ff ff ff 	movabs $0xffffffffffff,%rdi
    48d4:	ff 00 00 
    48d7:	c4 63 15 38 2d 5f 37 	vinserti128 $0x1,0x1375f(%rip),%ymm13,%ymm13        # 18040 <extended+0x20>
    48de:	01 00 01 
    48e1:	c5 79 6f 25 87 38 01 	vmovdqa 0x13887(%rip),%xmm12        # 18170 <standard+0x50>
    48e8:	00 
    48e9:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    48ef:	41 b8 03 00 00 00    	mov    $0x3,%r8d
    48f5:	4c 89 f0             	mov    %r14,%rax
    48f8:	c5 79 6f 1d 80 38 01 	vmovdqa 0x13880(%rip),%xmm11        # 18180 <standard+0x60>
    48ff:	00 
    4900:	c4 63 1d 38 25 66 37 	vinserti128 $0x1,0x13766(%rip),%ymm12,%ymm12        # 18070 <extended+0x50>
    4907:	01 00 01 
    490a:	4c 89 74 24 68       	mov    %r14,0x68(%rsp)
    490f:	25 ff 0f 00 00       	and    $0xfff,%eax
    4914:	c5 79 6f 15 74 38 01 	vmovdqa 0x13874(%rip),%xmm10        # 18190 <standard+0x70>
    491b:	00 
    491c:	c4 63 25 38 1d 5a 37 	vinserti128 $0x1,0x1375a(%rip),%ymm11,%ymm11        # 18080 <extended+0x60>
    4923:	01 00 01 
    4926:	48 3d f0 0f 00 00    	cmp    $0xff0,%rax
    492c:	c5 79 6f 0d 6c 38 01 	vmovdqa 0x1386c(%rip),%xmm9        # 181a0 <standard+0x80>
    4933:	00 
    4934:	c4 63 2d 38 15 52 37 	vinserti128 $0x1,0x13752(%rip),%ymm10,%ymm10        # 18090 <extended+0x70>
    493b:	01 00 01 
    493e:	0f 96 c1             	setbe  %cl
    4941:	c5 79 6f 05 67 38 01 	vmovdqa 0x13867(%rip),%xmm8        # 181b0 <standard+0x90>
    4948:	00 
    4949:	c4 63 35 38 0d 4d 37 	vinserti128 $0x1,0x1374d(%rip),%ymm9,%ymm9        # 180a0 <extended+0x80>
    4950:	01 00 01 
    4953:	48 83 f9 00          	cmp    $0x0,%rcx
    4957:	48 0f 45 d0          	cmovne %rax,%rdx
    495b:	31 c9                	xor    %ecx,%ecx
    495d:	48 3d f0 0f 00 00    	cmp    $0xff0,%rax
    4963:	c4 63 3d 38 05 43 37 	vinserti128 $0x1,0x13743(%rip),%ymm8,%ymm8        # 180b0 <extended+0x90>
    496a:	01 00 01 
    496d:	c5 79 6f 3d 6b 38 01 	vmovdqa 0x1386b(%rip),%xmm15        # 181e0 <standard+0xc0>
    4974:	00 
    4975:	0f 97 c1             	seta   %cl
    4978:	45 31 e4             	xor    %r12d,%r12d
    497b:	2d f0 0f 00 00       	sub    $0xff0,%eax
    4980:	44 89 e3             	mov    %r12d,%ebx
    4983:	45 89 e7             	mov    %r12d,%r15d
    4986:	48 83 f9 00          	cmp    $0x0,%rcx
    498a:	0f 45 d8             	cmovne %eax,%ebx
    498d:	4c 89 f0             	mov    %r14,%rax
    4990:	89 5c 24 4c          	mov    %ebx,0x4c(%rsp)
    4994:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    499a:	48 09 d0             	or     %rdx,%rax
    499d:	c5 fa 6f 28          	vmovdqu (%rax),%xmm5
    49a1:	48 63 c3             	movslq %ebx,%rax
    49a4:	bb 02 00 00 00       	mov    $0x2,%ebx
    49a9:	c4 e1 f9 6e f8       	vmovq  %rax,%xmm7
    49ae:	b8 10 00 00 00       	mov    $0x10,%eax
    49b3:	41 89 de             	mov    %ebx,%r14d
    49b6:	c5 d1 f3 ef          	vpsllq %xmm7,%xmm5,%xmm5
    49ba:	c4 c1 f9 6e fb       	vmovq  %r11,%xmm7
    49bf:	c4 e2 7d 59 df       	vpbroadcastq %xmm7,%ymm3
    49c4:	c4 e2 7d 59 cd       	vpbroadcastq %xmm5,%ymm1
    49c9:	c4 e1 f9 7e ea       	vmovq  %xmm5,%rdx
    49ce:	c5 fd df d1          	vpandn %ymm1,%ymm0,%ymm2
    49d2:	c5 f5 db c8          	vpand  %ymm0,%ymm1,%ymm1
    49d6:	c5 f9 ef c0          	vpxor  %xmm0,%xmm0,%xmm0
    49da:	49 89 d2             	mov    %rdx,%r10
    49dd:	c5 f5 74 c0          	vpcmpeqb %ymm0,%ymm1,%ymm0
    49e1:	c5 fd df c3          	vpandn %ymm3,%ymm0,%ymm0
    49e5:	c5 fd eb c2          	vpor   %ymm2,%ymm0,%ymm0
    49e9:	c4 62 5d 00 f0       	vpshufb %ymm0,%ymm4,%ymm14
    49ee:	c5 f9 6e c0          	vmovd  %eax,%xmm0
    49f2:	c5 f9 6f 25 36 37 01 	vmovdqa 0x13736(%rip),%xmm4        # 18130 <standard+0x10>
    49f9:	00 
    49fa:	c4 e3 5d 38 25 2c 36 	vinserti128 $0x1,0x1362c(%rip),%ymm4,%ymm4        # 18030 <extended+0x10>
    4a01:	01 00 01 
    4a04:	c4 e2 7d 78 c0       	vpbroadcastb %xmm0,%ymm0
    4a09:	b8 20 00 00 00       	mov    $0x20,%eax
    4a0e:	c5 7d 7f b4 24 a0 00 	vmovdqa %ymm14,0xa0(%rsp)
    4a15:	00 00 
    4a17:	c5 f5 74 c0          	vpcmpeqb %ymm0,%ymm1,%ymm0
    4a1b:	c5 fd df c3          	vpandn %ymm3,%ymm0,%ymm0
    4a1f:	c5 fd eb c2          	vpor   %ymm2,%ymm0,%ymm0
    4a23:	c4 e2 5d 00 f8       	vpshufb %ymm0,%ymm4,%ymm7
    4a28:	c5 f9 6e c0          	vmovd  %eax,%xmm0
    4a2c:	b8 30 00 00 00       	mov    $0x30,%eax
    4a31:	c5 f9 6f 25 17 37 01 	vmovdqa 0x13717(%rip),%xmm4        # 18150 <standard+0x30>
    4a38:	00 
    4a39:	c4 e3 5d 38 25 0d 36 	vinserti128 $0x1,0x1360d(%rip),%ymm4,%ymm4        # 18050 <extended+0x30>
    4a40:	01 00 01 
    4a43:	c4 e2 7d 78 c0       	vpbroadcastb %xmm0,%ymm0
    4a48:	c5 fd 7f bc 24 e0 00 	vmovdqa %ymm7,0xe0(%rsp)
    4a4f:	00 00 
    4a51:	c5 f9 6f 3d 67 37 01 	vmovdqa 0x13767(%rip),%xmm7        # 181c0 <standard+0xa0>
    4a58:	00 
    4a59:	c4 e3 45 38 3d 5d 36 	vinserti128 $0x1,0x1365d(%rip),%ymm7,%ymm7        # 180c0 <extended+0xa0>
    4a60:	01 00 01 
    4a63:	c5 f5 74 c0          	vpcmpeqb %ymm0,%ymm1,%ymm0
    4a67:	c5 fd df c3          	vpandn %ymm3,%ymm0,%ymm0
    4a6b:	c5 fd eb c2          	vpor   %ymm2,%ymm0,%ymm0
    4a6f:	c4 62 15 00 e8       	vpshufb %ymm0,%ymm13,%ymm13
    4a74:	c5 f9 6e c0          	vmovd  %eax,%xmm0
    4a78:	b8 40 00 00 00       	mov    $0x40,%eax
    4a7d:	c4 e2 7d 78 c0       	vpbroadcastb %xmm0,%ymm0
    4a82:	c5 f9 6e f0          	vmovd  %eax,%xmm6
    4a86:	b8 50 00 00 00       	mov    $0x50,%eax
    4a8b:	c5 f5 74 c0          	vpcmpeqb %ymm0,%ymm1,%ymm0
    4a8f:	c4 e2 7d 78 f6       	vpbroadcastb %xmm6,%ymm6
    4a94:	c5 f5 74 f6          	vpcmpeqb %ymm6,%ymm1,%ymm6
    4a98:	c5 fd df c3          	vpandn %ymm3,%ymm0,%ymm0
    4a9c:	c5 fd eb c2          	vpor   %ymm2,%ymm0,%ymm0
    4aa0:	c5 cd df f3          	vpandn %ymm3,%ymm6,%ymm6
    4aa4:	c4 e2 5d 00 e0       	vpshufb %ymm0,%ymm4,%ymm4
    4aa9:	c5 f9 6f 05 af 36 01 	vmovdqa 0x136af(%rip),%xmm0        # 18160 <standard+0x40>
    4ab0:	00 
    4ab1:	c5 cd eb f2          	vpor   %ymm2,%ymm6,%ymm6
    4ab5:	c4 e3 7d 38 05 a1 35 	vinserti128 $0x1,0x135a1(%rip),%ymm0,%ymm0        # 18060 <extended+0x40>
    4abc:	01 00 01 
    4abf:	c4 e1 f9 7e e1       	vmovq  %xmm4,%rcx
    4ac4:	c4 e3 7d 39 e4 01    	vextracti128 $0x1,%ymm4,%xmm4
    4aca:	c4 e2 7d 00 c6       	vpshufb %ymm6,%ymm0,%ymm0
    4acf:	c5 f9 6e f0          	vmovd  %eax,%xmm6
    4ad3:	b8 60 00 00 00       	mov    $0x60,%eax
    4ad8:	c4 e2 7d 78 f6       	vpbroadcastb %xmm6,%ymm6
    4add:	c5 f5 74 f6          	vpcmpeqb %ymm6,%ymm1,%ymm6
    4ae1:	c5 cd df f3          	vpandn %ymm3,%ymm6,%ymm6
    4ae5:	c5 cd eb f2          	vpor   %ymm2,%ymm6,%ymm6
    4ae9:	c4 62 1d 00 e6       	vpshufb %ymm6,%ymm12,%ymm12
    4aee:	c5 f9 6e f0          	vmovd  %eax,%xmm6
    4af2:	b8 70 00 00 00       	mov    $0x70,%eax
    4af7:	c4 e2 7d 78 f6       	vpbroadcastb %xmm6,%ymm6
    4afc:	c5 f5 74 f6          	vpcmpeqb %ymm6,%ymm1,%ymm6
    4b00:	c5 cd df f3          	vpandn %ymm3,%ymm6,%ymm6
    4b04:	c5 cd eb f2          	vpor   %ymm2,%ymm6,%ymm6
    4b08:	c4 62 25 00 de       	vpshufb %ymm6,%ymm11,%ymm11
    4b0d:	c5 f9 6e f0          	vmovd  %eax,%xmm6
    4b11:	b8 80 ff ff ff       	mov    $0xffffff80,%eax
    4b16:	c4 e2 7d 78 f6       	vpbroadcastb %xmm6,%ymm6
    4b1b:	c5 f5 74 f6          	vpcmpeqb %ymm6,%ymm1,%ymm6
    4b1f:	c5 cd df f3          	vpandn %ymm3,%ymm6,%ymm6
    4b23:	c5 cd eb f2          	vpor   %ymm2,%ymm6,%ymm6
    4b27:	c4 62 2d 00 d6       	vpshufb %ymm6,%ymm10,%ymm10
    4b2c:	c5 f9 6e f0          	vmovd  %eax,%xmm6
    4b30:	b8 90 ff ff ff       	mov    $0xffffff90,%eax
    4b35:	c4 e2 7d 78 f6       	vpbroadcastb %xmm6,%ymm6
    4b3a:	c5 f5 74 f6          	vpcmpeqb %ymm6,%ymm1,%ymm6
    4b3e:	c5 cd df f3          	vpandn %ymm3,%ymm6,%ymm6
    4b42:	c5 cd eb f2          	vpor   %ymm2,%ymm6,%ymm6
    4b46:	c4 62 35 00 ce       	vpshufb %ymm6,%ymm9,%ymm9
    4b4b:	c5 f9 6e f0          	vmovd  %eax,%xmm6
    4b4f:	b8 a0 ff ff ff       	mov    $0xffffffa0,%eax
    4b54:	c4 e2 7d 78 f6       	vpbroadcastb %xmm6,%ymm6
    4b59:	c5 f5 74 f6          	vpcmpeqb %ymm6,%ymm1,%ymm6
    4b5d:	c5 cd df f3          	vpandn %ymm3,%ymm6,%ymm6
    4b61:	c5 cd eb f2          	vpor   %ymm2,%ymm6,%ymm6
    4b65:	c4 62 3d 00 c6       	vpshufb %ymm6,%ymm8,%ymm8
    4b6a:	c5 f9 6e f0          	vmovd  %eax,%xmm6
    4b6e:	b8 b0 ff ff ff       	mov    $0xffffffb0,%eax
    4b73:	c4 e2 7d 78 f6       	vpbroadcastb %xmm6,%ymm6
    4b78:	c5 79 6e f0          	vmovd  %eax,%xmm14
    4b7c:	b8 c0 ff ff ff       	mov    $0xffffffc0,%eax
    4b81:	c5 f5 74 f6          	vpcmpeqb %ymm6,%ymm1,%ymm6
    4b85:	c4 42 7d 78 f6       	vpbroadcastb %xmm14,%ymm14
    4b8a:	c4 41 75 74 f6       	vpcmpeqb %ymm14,%ymm1,%ymm14
    4b8f:	c5 cd df f3          	vpandn %ymm3,%ymm6,%ymm6
    4b93:	c5 cd eb f2          	vpor   %ymm2,%ymm6,%ymm6
    4b97:	c5 0d df f3          	vpandn %ymm3,%ymm14,%ymm14
    4b9b:	c4 e2 45 00 fe       	vpshufb %ymm6,%ymm7,%ymm7
    4ba0:	c5 f9 6f 35 28 36 01 	vmovdqa 0x13628(%rip),%xmm6        # 181d0 <standard+0xb0>
    4ba7:	00 
    4ba8:	c5 0d eb f2          	vpor   %ymm2,%ymm14,%ymm14
    4bac:	c4 e3 4d 38 35 1a 35 	vinserti128 $0x1,0x1351a(%rip),%ymm6,%ymm6        # 180d0 <extended+0xb0>
    4bb3:	01 00 01 
    4bb6:	c4 63 05 38 3d 20 35 	vinserti128 $0x1,0x13520(%rip),%ymm15,%ymm15        # 180e0 <extended+0xc0>
    4bbd:	01 00 01 
    4bc0:	c4 c2 4d 00 f6       	vpshufb %ymm14,%ymm6,%ymm6
    4bc5:	c5 79 6e f0          	vmovd  %eax,%xmm14
    4bc9:	b8 d0 ff ff ff       	mov    $0xffffffd0,%eax
    4bce:	c4 42 7d 78 f6       	vpbroadcastb %xmm14,%ymm14
    4bd3:	c4 41 75 74 f6       	vpcmpeqb %ymm14,%ymm1,%ymm14
    4bd8:	c5 0d df f3          	vpandn %ymm3,%ymm14,%ymm14
    4bdc:	c5 0d eb f2          	vpor   %ymm2,%ymm14,%ymm14
    4be0:	c4 42 05 00 fe       	vpshufb %ymm14,%ymm15,%ymm15
    4be5:	c5 79 6e f0          	vmovd  %eax,%xmm14
    4be9:	b8 e0 ff ff ff       	mov    $0xffffffe0,%eax
    4bee:	c5 7d 7f bc 24 c0 00 	vmovdqa %ymm15,0xc0(%rsp)
    4bf5:	00 00 
    4bf7:	c4 42 7d 78 f6       	vpbroadcastb %xmm14,%ymm14
    4bfc:	c5 79 6f 3d ec 35 01 	vmovdqa 0x135ec(%rip),%xmm15        # 181f0 <standard+0xd0>
    4c03:	00 
    4c04:	c4 63 05 38 3d e2 34 	vinserti128 $0x1,0x134e2(%rip),%ymm15,%ymm15        # 180f0 <extended+0xd0>
    4c0b:	01 00 01 
    4c0e:	c4 41 75 74 f6       	vpcmpeqb %ymm14,%ymm1,%ymm14
    4c13:	c5 0d df f3          	vpandn %ymm3,%ymm14,%ymm14
    4c17:	c5 0d eb f2          	vpor   %ymm2,%ymm14,%ymm14
    4c1b:	c4 42 05 00 fe       	vpshufb %ymm14,%ymm15,%ymm15
    4c20:	c5 79 6e f0          	vmovd  %eax,%xmm14
    4c24:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
    4c29:	c5 7d 7f bc 24 80 00 	vmovdqa %ymm15,0x80(%rsp)
    4c30:	00 00 
    4c32:	c4 42 7d 78 f6       	vpbroadcastb %xmm14,%ymm14
    4c37:	c5 79 6f 3d c1 35 01 	vmovdqa 0x135c1(%rip),%xmm15        # 18200 <standard+0xe0>
    4c3e:	00 
    4c3f:	c4 63 05 38 3d b7 34 	vinserti128 $0x1,0x134b7(%rip),%ymm15,%ymm15        # 18100 <extended+0xe0>
    4c46:	01 00 01 
    4c49:	c4 41 75 74 f6       	vpcmpeqb %ymm14,%ymm1,%ymm14
    4c4e:	c5 0d df f3          	vpandn %ymm3,%ymm14,%ymm14
    4c52:	c5 0d eb f2          	vpor   %ymm2,%ymm14,%ymm14
    4c56:	c4 42 05 00 fe       	vpshufb %ymm14,%ymm15,%ymm15
    4c5b:	c5 79 6e f0          	vmovd  %eax,%xmm14
    4c5f:	c4 61 f9 7e e8       	vmovq  %xmm13,%rax
    4c64:	48 09 c8             	or     %rcx,%rax
    4c67:	c4 42 7d 78 f6       	vpbroadcastb %xmm14,%ymm14
    4c6c:	c4 e1 f9 7e c1       	vmovq  %xmm0,%rcx
    4c71:	48 09 c8             	or     %rcx,%rax
    4c74:	c4 c1 75 74 ce       	vpcmpeqb %ymm14,%ymm1,%ymm1
    4c79:	c4 61 f9 7e e1       	vmovq  %xmm12,%rcx
    4c7e:	c5 7d 6f b4 24 a0 00 	vmovdqa 0xa0(%rsp),%ymm14
    4c85:	00 00 
    4c87:	48 09 c8             	or     %rcx,%rax
    4c8a:	c4 61 f9 7e d9       	vmovq  %xmm11,%rcx
    4c8f:	c4 43 7d 39 ed 01    	vextracti128 $0x1,%ymm13,%xmm13
    4c95:	48 09 c8             	or     %rcx,%rax
    4c98:	c4 61 f9 7e d1       	vmovq  %xmm10,%rcx
    4c9d:	c5 91 eb e4          	vpor   %xmm4,%xmm13,%xmm4
    4ca1:	48 09 c8             	or     %rcx,%rax
    4ca4:	c5 f5 df cb          	vpandn %ymm3,%ymm1,%ymm1
    4ca8:	c4 61 f9 7e c9       	vmovq  %xmm9,%rcx
    4cad:	c5 f9 6f 1d 5b 35 01 	vmovdqa 0x1355b(%rip),%xmm3        # 18210 <standard+0xf0>
    4cb4:	00 
    4cb5:	c5 f5 eb ca          	vpor   %ymm2,%ymm1,%ymm1
    4cb9:	48 09 c8             	or     %rcx,%rax
    4cbc:	c4 61 f9 7e c1       	vmovq  %xmm8,%rcx
    4cc1:	48 09 c8             	or     %rcx,%rax
    4cc4:	c4 e1 f9 7e f9       	vmovq  %xmm7,%rcx
    4cc9:	c4 e3 65 38 1d 3d 34 	vinserti128 $0x1,0x1343d(%rip),%ymm3,%ymm3        # 18110 <extended+0xf0>
    4cd0:	01 00 01 
    4cd3:	48 09 c8             	or     %rcx,%rax
    4cd6:	c4 e1 f9 7e f1       	vmovq  %xmm6,%rcx
    4cdb:	c4 61 f9 7e f6       	vmovq  %xmm14,%rsi
    4ce0:	c4 e2 65 00 d9       	vpshufb %ymm1,%ymm3,%ymm3
    4ce5:	48 09 c8             	or     %rcx,%rax
    4ce8:	c5 f9 6f 8c 24 c0 00 	vmovdqa 0xc0(%rsp),%xmm1
    4cef:	00 00 
    4cf1:	c4 e3 7d 39 c0 01    	vextracti128 $0x1,%ymm0,%xmm0
    4cf7:	c5 d9 eb c0          	vpor   %xmm0,%xmm4,%xmm0
    4cfb:	c4 43 7d 39 e4 01    	vextracti128 $0x1,%ymm12,%xmm12
    4d01:	c4 43 7d 39 db 01    	vextracti128 $0x1,%ymm11,%xmm11
    4d07:	c5 fd 6f a4 24 c0 00 	vmovdqa 0xc0(%rsp),%ymm4
    4d0e:	00 00 
    4d10:	c4 e1 f9 7e c9       	vmovq  %xmm1,%rcx
    4d15:	c4 c1 79 eb c4       	vpor   %xmm12,%xmm0,%xmm0
    4d1a:	c5 f9 6f 8c 24 80 00 	vmovdqa 0x80(%rsp),%xmm1
    4d21:	00 00 
    4d23:	c4 43 7d 39 d2 01    	vextracti128 $0x1,%ymm10,%xmm10
    4d29:	48 09 c8             	or     %rcx,%rax
    4d2c:	c4 c1 79 eb c3       	vpor   %xmm11,%xmm0,%xmm0
    4d31:	c4 43 7d 39 c9 01    	vextracti128 $0x1,%ymm9,%xmm9
    4d37:	c4 e1 f9 7e c9       	vmovq  %xmm1,%rcx
    4d3c:	c4 c1 79 eb c2       	vpor   %xmm10,%xmm0,%xmm0
    4d41:	c5 f9 6f 8c 24 e0 00 	vmovdqa 0xe0(%rsp),%xmm1
    4d48:	00 00 
    4d4a:	c4 43 7d 39 c0 01    	vextracti128 $0x1,%ymm8,%xmm8
    4d50:	48 09 c8             	or     %rcx,%rax
    4d53:	c4 61 f9 7e f9       	vmovq  %xmm15,%rcx
    4d58:	c4 c1 79 eb c1       	vpor   %xmm9,%xmm0,%xmm0
    4d5d:	48 09 c8             	or     %rcx,%rax
    4d60:	c4 e1 f9 7e d9       	vmovq  %xmm3,%rcx
    4d65:	c4 c1 79 eb c0       	vpor   %xmm8,%xmm0,%xmm0
    4d6a:	48 09 c8             	or     %rcx,%rax
    4d6d:	c4 e1 f9 7e c9       	vmovq  %xmm1,%rcx
    4d72:	c4 e3 7d 39 ff 01    	vextracti128 $0x1,%ymm7,%xmm7
    4d78:	48 09 f1             	or     %rsi,%rcx
    4d7b:	be 0f 00 00 00       	mov    $0xf,%esi
    4d80:	c5 f9 eb c7          	vpor   %xmm7,%xmm0,%xmm0
    4d84:	c5 fd 6f bc 24 e0 00 	vmovdqa 0xe0(%rsp),%ymm7
    4d8b:	00 00 
    4d8d:	48 09 c8             	or     %rcx,%rax
    4d90:	c4 e3 7d 39 f6 01    	vextracti128 $0x1,%ymm6,%xmm6
    4d96:	c4 43 7d 39 ff 01    	vextracti128 $0x1,%ymm15,%xmm15
    4d9c:	48 21 c7             	and    %rax,%rdi
    4d9f:	25 c0 00 00 00       	and    $0xc0,%eax
    4da4:	c5 f9 eb c6          	vpor   %xmm6,%xmm0,%xmm0
    4da8:	48 83 f8 7f          	cmp    $0x7f,%rax
    4dac:	49 89 f9             	mov    %rdi,%r9
    4daf:	c4 e3 7d 39 db 01    	vextracti128 $0x1,%ymm3,%xmm3
    4db5:	0f 97 c0             	seta   %al
    4db8:	0f b6 c0             	movzbl %al,%eax
    4dbb:	48 83 f8 00          	cmp    $0x0,%rax
    4dbf:	41 0f 45 f4          	cmovne %r12d,%esi
    4dc3:	48 89 f8             	mov    %rdi,%rax
    4dc6:	89 f1                	mov    %esi,%ecx
    4dc8:	48 c1 e8 08          	shr    $0x8,%rax
    4dcc:	25 c0 00 00 00       	and    $0xc0,%eax
    4dd1:	48 83 f8 7f          	cmp    $0x7f,%rax
    4dd5:	0f 97 c0             	seta   %al
    4dd8:	c1 e1 08             	shl    $0x8,%ecx
    4ddb:	0f b6 c0             	movzbl %al,%eax
    4dde:	09 c8                	or     %ecx,%eax
    4de0:	3d 01 0f 00 00       	cmp    $0xf01,%eax
    4de5:	0f 94 c0             	sete   %al
    4de8:	0f b6 c0             	movzbl %al,%eax
    4deb:	48 83 f8 00          	cmp    $0x0,%rax
    4def:	41 0f 45 f5          	cmovne %r13d,%esi
    4df3:	48 89 f8             	mov    %rdi,%rax
    4df6:	89 f1                	mov    %esi,%ecx
    4df8:	48 c1 e8 10          	shr    $0x10,%rax
    4dfc:	25 c0 00 00 00       	and    $0xc0,%eax
    4e01:	48 83 f8 7f          	cmp    $0x7f,%rax
    4e05:	0f 97 c0             	seta   %al
    4e08:	c1 e1 08             	shl    $0x8,%ecx
    4e0b:	0f b6 c0             	movzbl %al,%eax
    4e0e:	09 c8                	or     %ecx,%eax
    4e10:	3d 01 0f 00 00       	cmp    $0xf01,%eax
    4e15:	0f 94 c0             	sete   %al
    4e18:	0f b6 c0             	movzbl %al,%eax
    4e1b:	48 83 f8 00          	cmp    $0x0,%rax
    4e1f:	0f 45 f3             	cmovne %ebx,%esi
    4e22:	48 89 f8             	mov    %rdi,%rax
    4e25:	89 f1                	mov    %esi,%ecx
    4e27:	bb 04 00 00 00       	mov    $0x4,%ebx
    4e2c:	48 c1 e8 18          	shr    $0x18,%rax
    4e30:	25 c0 00 00 00       	and    $0xc0,%eax
    4e35:	48 83 f8 7f          	cmp    $0x7f,%rax
    4e39:	0f 97 c0             	seta   %al
    4e3c:	c1 e1 08             	shl    $0x8,%ecx
    4e3f:	0f b6 c0             	movzbl %al,%eax
    4e42:	09 c8                	or     %ecx,%eax
    4e44:	3d 01 0f 00 00       	cmp    $0xf01,%eax
    4e49:	0f 94 c0             	sete   %al
    4e4c:	0f b6 c0             	movzbl %al,%eax
    4e4f:	48 83 f8 00          	cmp    $0x0,%rax
    4e53:	41 0f 45 f0          	cmovne %r8d,%esi
    4e57:	48 89 f8             	mov    %rdi,%rax
    4e5a:	89 f1                	mov    %esi,%ecx
    4e5c:	48 c1 e8 20          	shr    $0x20,%rax
    4e60:	25 c0 00 00 00       	and    $0xc0,%eax
    4e65:	48 83 f8 7f          	cmp    $0x7f,%rax
    4e69:	0f 97 c0             	seta   %al
    4e6c:	c1 e1 08             	shl    $0x8,%ecx
    4e6f:	0f b6 c0             	movzbl %al,%eax
    4e72:	09 c8                	or     %ecx,%eax
    4e74:	3d 01 0f 00 00       	cmp    $0xf01,%eax
    4e79:	0f 94 c0             	sete   %al
    4e7c:	0f b6 c0             	movzbl %al,%eax
    4e7f:	48 83 f8 00          	cmp    $0x0,%rax
    4e83:	0f 45 f3             	cmovne %ebx,%esi
    4e86:	48 89 f8             	mov    %rdi,%rax
    4e89:	89 f1                	mov    %esi,%ecx
    4e8b:	48 c1 e8 28          	shr    $0x28,%rax
    4e8f:	25 c0 00 00 00       	and    $0xc0,%eax
    4e94:	48 83 f8 7f          	cmp    $0x7f,%rax
    4e98:	0f 97 c0             	seta   %al
    4e9b:	c1 e1 08             	shl    $0x8,%ecx
    4e9e:	0f b6 c0             	movzbl %al,%eax
    4ea1:	09 c8                	or     %ecx,%eax
    4ea3:	31 c9                	xor    %ecx,%ecx
    4ea5:	3d 01 0f 00 00       	cmp    $0xf01,%eax
    4eaa:	b8 05 00 00 00       	mov    $0x5,%eax
    4eaf:	0f 94 c1             	sete   %cl
    4eb2:	48 83 f9 00          	cmp    $0x0,%rcx
    4eb6:	0f 45 f0             	cmovne %eax,%esi
    4eb9:	8d 0c f5 00 00 00 00 	lea    0x0(,%rsi,8),%ecx
    4ec0:	49 d3 e9             	shr    %cl,%r9
    4ec3:	49 d3 ea             	shr    %cl,%r10
    4ec6:	4c 89 d1             	mov    %r10,%rcx
    4ec9:	45 89 ca             	mov    %r9d,%r10d
    4ecc:	4c 89 cb             	mov    %r9,%rbx
    4ecf:	48 89 4c 24 70       	mov    %rcx,0x70(%rsp)
    4ed4:	41 c0 ea 02          	shr    $0x2,%r10b
    4ed8:	31 c9                	xor    %ecx,%ecx
    4eda:	80 7c 24 70 0f       	cmpb   $0xf,0x70(%rsp)
    4edf:	0f 94 c1             	sete   %cl
    4ee2:	44 88 94 24 a0 00 00 	mov    %r10b,0xa0(%rsp)
    4ee9:	00 
    4eea:	45 89 e2             	mov    %r12d,%r10d
    4eed:	48 83 f9 00          	cmp    $0x0,%rcx
    4ef1:	45 0f 45 fd          	cmovne %r13d,%r15d
    4ef5:	44 89 c9             	mov    %r9d,%ecx
    4ef8:	45 31 c9             	xor    %r9d,%r9d
    4efb:	83 e1 f0             	and    $0xfffffff0,%ecx
    4efe:	80 f9 a0             	cmp    $0xa0,%cl
    4f01:	41 0f 94 c1          	sete   %r9b
    4f05:	49 83 f9 00          	cmp    $0x0,%r9
    4f09:	45 0f 45 d5          	cmovne %r13d,%r10d
    4f0d:	80 f9 b0             	cmp    $0xb0,%cl
    4f10:	45 89 e1             	mov    %r12d,%r9d
    4f13:	44 89 54 24 48       	mov    %r10d,0x48(%rsp)
    4f18:	0f 94 c1             	sete   %cl
    4f1b:	29 f0                	sub    %esi,%eax
    4f1d:	45 31 d2             	xor    %r10d,%r10d
    4f20:	0f b6 c9             	movzbl %cl,%ecx
    4f23:	48 83 f9 00          	cmp    $0x0,%rcx
    4f27:	45 0f 45 cd          	cmovne %r13d,%r9d
    4f2b:	8d 0c c5 00 00 00 00 	lea    0x0(,%rax,8),%ecx
    4f32:	44 89 4c 24 3c       	mov    %r9d,0x3c(%rsp)
    4f37:	48 b8 ff ff ff ff ff 	movabs $0xffffffffff,%rax
    4f3e:	00 00 00 
    4f41:	48 d3 f8             	sar    %cl,%rax
    4f44:	8d 0c f5 f8 ff ff ff 	lea    -0x8(,%rsi,8),%ecx
    4f4b:	48 21 f8             	and    %rdi,%rax
    4f4e:	49 89 c1             	mov    %rax,%r9
    4f51:	c4 e1 f9 6e d0       	vmovq  %rax,%xmm2
    4f56:	49 d3 e9             	shr    %cl,%r9
    4f59:	c4 c1 f9 6e c9       	vmovq  %r9,%xmm1
    4f5e:	49 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%r9
    4f65:	c4 c3 f1 22 c9 01    	vpinsrq $0x1,%r9,%xmm1,%xmm1
    4f6b:	c5 f1 74 0d 9d e2 00 	vpcmpeqb 0xe29d(%rip),%xmm1,%xmm1        # 13210 <g_dyn_entry_table+0x10>
    4f72:	00 
    4f73:	c4 e1 f9 7e cf       	vmovq  %xmm1,%rdi
    4f78:	c4 c3 e9 22 c9 01    	vpinsrq $0x1,%r9,%xmm2,%xmm1
    4f7e:	45 89 e9             	mov    %r13d,%r9d
    4f81:	c5 f1 74 15 97 e2 00 	vpcmpeqb 0xe297(%rip),%xmm1,%xmm2        # 13220 <g_dyn_entry_table+0x20>
    4f88:	00 
    4f89:	48 85 ff             	test   %rdi,%rdi
    4f8c:	44 89 ef             	mov    %r13d,%edi
    4f8f:	41 0f 94 c2          	sete   %r10b
    4f93:	48 d3 ea             	shr    %cl,%rdx
    4f96:	44 89 e1             	mov    %r12d,%ecx
    4f99:	49 83 fa 00          	cmp    $0x0,%r10
    4f9d:	41 0f 45 fc          	cmovne %r12d,%edi
    4fa1:	c4 e1 f9 7e d0       	vmovq  %xmm2,%rax
    4fa6:	c5 f1 74 15 82 e2 00 	vpcmpeqb 0xe282(%rip),%xmm1,%xmm2        # 13230 <g_dyn_entry_table+0x30>
    4fad:	00 
    4fae:	83 e2 4f             	and    $0x4f,%edx
    4fb1:	89 ff                	mov    %edi,%edi
    4fb3:	48 83 ff 00          	cmp    $0x0,%rdi
    4fb7:	0f 45 ca             	cmovne %edx,%ecx
    4fba:	31 d2                	xor    %edx,%edx
    4fbc:	48 85 c0             	test   %rax,%rax
    4fbf:	44 89 e8             	mov    %r13d,%eax
    4fc2:	89 4c 24 38          	mov    %ecx,0x38(%rsp)
    4fc6:	0f 94 c2             	sete   %dl
    4fc9:	44 89 e9             	mov    %r13d,%ecx
    4fcc:	48 83 fa 00          	cmp    $0x0,%rdx
    4fd0:	41 0f 45 c4          	cmovne %r12d,%eax
    4fd4:	89 c2                	mov    %eax,%edx
    4fd6:	44 89 e0             	mov    %r12d,%eax
    4fd9:	48 83 fa 00          	cmp    $0x0,%rdx
    4fdd:	41 0f 45 c5          	cmovne %r13d,%eax
    4fe1:	c4 e1 f9 7e d2       	vmovq  %xmm2,%rdx
    4fe6:	c5 f1 74 15 52 e2 00 	vpcmpeqb 0xe252(%rip),%xmm1,%xmm2        # 13240 <g_dyn_entry_table+0x40>
    4fed:	00 
    4fee:	48 85 d2             	test   %rdx,%rdx
    4ff1:	0f 94 c2             	sete   %dl
    4ff4:	0f b6 d2             	movzbl %dl,%edx
    4ff7:	48 83 fa 00          	cmp    $0x0,%rdx
    4ffb:	45 0f 45 cc          	cmovne %r12d,%r9d
    4fff:	c4 e1 f9 7e d2       	vmovq  %xmm2,%rdx
    5004:	c5 f1 74 15 44 e2 00 	vpcmpeqb 0xe244(%rip),%xmm1,%xmm2        # 13250 <g_dyn_entry_table+0x50>
    500b:	00 
    500c:	44 89 4c 24 34       	mov    %r9d,0x34(%rsp)
    5011:	49 b9 00 80 80 80 80 	movabs $0x8080808080808000,%r9
    5018:	80 80 80 
    501b:	48 85 d2             	test   %rdx,%rdx
    501e:	c5 f1 74 0d 3a e2 00 	vpcmpeqb 0xe23a(%rip),%xmm1,%xmm1        # 13260 <g_dyn_entry_table+0x60>
    5025:	00 
    5026:	0f 94 c2             	sete   %dl
    5029:	0f b6 d2             	movzbl %dl,%edx
    502c:	48 83 fa 00          	cmp    $0x0,%rdx
    5030:	41 0f 45 cc          	cmovne %r12d,%ecx
    5034:	c4 e1 f9 7e d2       	vmovq  %xmm2,%rdx
    5039:	89 4c 24 30          	mov    %ecx,0x30(%rsp)
    503d:	31 c9                	xor    %ecx,%ecx
    503f:	c4 63 7d 39 f2 01    	vextracti128 $0x1,%ymm14,%xmm2
    5045:	48 85 d2             	test   %rdx,%rdx
    5048:	44 89 ea             	mov    %r13d,%edx
    504b:	0f 94 c1             	sete   %cl
    504e:	48 83 f9 00          	cmp    $0x0,%rcx
    5052:	41 0f 45 d4          	cmovne %r12d,%edx
    5056:	89 d2                	mov    %edx,%edx
    5058:	31 c9                	xor    %ecx,%ecx
    505a:	48 83 fa 00          	cmp    $0x0,%rdx
    505e:	41 0f 45 c0          	cmovne %r8d,%eax
    5062:	c4 e1 f9 7e ca       	vmovq  %xmm1,%rdx
    5067:	c4 e3 7d 39 e1 01    	vextracti128 $0x1,%ymm4,%xmm1
    506d:	41 89 c0             	mov    %eax,%r8d
    5070:	c5 fd 6f a4 24 80 00 	vmovdqa 0x80(%rsp),%ymm4
    5077:	00 00 
    5079:	c5 f9 eb c1          	vpor   %xmm1,%xmm0,%xmm0
    507d:	48 85 d2             	test   %rdx,%rdx
    5080:	44 89 ea             	mov    %r13d,%edx
    5083:	c4 e3 7d 39 e1 01    	vextracti128 $0x1,%ymm4,%xmm1
    5089:	0f 94 c1             	sete   %cl
    508c:	c5 f9 eb c1          	vpor   %xmm1,%xmm0,%xmm0
    5090:	c4 e3 7d 39 f9 01    	vextracti128 $0x1,%ymm7,%xmm1
    5096:	c4 c1 79 eb c7       	vpor   %xmm15,%xmm0,%xmm0
    509b:	c5 f1 eb ca          	vpor   %xmm2,%xmm1,%xmm1
    509f:	c5 f9 eb c3          	vpor   %xmm3,%xmm0,%xmm0
    50a3:	c5 f9 eb c1          	vpor   %xmm1,%xmm0,%xmm0
    50a7:	48 83 f9 00          	cmp    $0x0,%rcx
    50ab:	41 0f 45 d4          	cmovne %r12d,%edx
    50af:	c4 e1 f9 7e c0       	vmovq  %xmm0,%rax
    50b4:	8d 0c f5 08 00 00 00 	lea    0x8(,%rsi,8),%ecx
    50bb:	89 d2                	mov    %edx,%edx
    50bd:	44 01 fe             	add    %r15d,%esi
    50c0:	48 d3 f8             	sar    %cl,%rax
    50c3:	44 89 f9             	mov    %r15d,%ecx
    50c6:	48 83 fa 00          	cmp    $0x0,%rdx
    50ca:	45 0f 45 c6          	cmovne %r14d,%r8d
    50ce:	89 c2                	mov    %eax,%edx
    50d0:	44 89 44 24 5c       	mov    %r8d,0x5c(%rsp)
    50d5:	41 89 f0             	mov    %esi,%r8d
    50d8:	45 89 e6             	mov    %r12d,%r14d
    50db:	c0 ea 04             	shr    $0x4,%dl
    50de:	41 89 d2             	mov    %edx,%r10d
    50e1:	8b 94 24 a0 00 00 00 	mov    0xa0(%rsp),%edx
    50e8:	89 b4 24 e0 00 00 00 	mov    %esi,0xe0(%rsp)
    50ef:	41 83 e2 03          	and    $0x3,%r10d
    50f3:	48 89 5c 24 40       	mov    %rbx,0x40(%rsp)
    50f8:	83 e2 03             	and    $0x3,%edx
    50fb:	48 83 f9 00          	cmp    $0x0,%rcx
    50ff:	41 0f 45 d2          	cmovne %r10d,%edx
    5103:	41 8d 48 01          	lea    0x1(%r8),%ecx
    5107:	0f b6 c9             	movzbl %cl,%ecx
    510a:	4c 09 c9             	or     %r9,%rcx
    510d:	c4 e1 f9 6e f9       	vmovq  %rcx,%xmm7
    5112:	c4 c3 c1 22 c3 01    	vpinsrq $0x1,%r11,%xmm7,%xmm0
    5118:	c4 e2 51 00 c0       	vpshufb %xmm0,%xmm5,%xmm0
    511d:	c4 e1 f9 7e c1       	vmovq  %xmm0,%rcx
    5122:	89 ce                	mov    %ecx,%esi
    5124:	41 89 c8             	mov    %ecx,%r8d
    5127:	40 c0 ee 03          	shr    $0x3,%sil
    512b:	41 c0 e8 06          	shr    $0x6,%r8b
    512f:	89 f7                	mov    %esi,%edi
    5131:	44 88 44 24 64       	mov    %r8b,0x64(%rsp)
    5136:	83 e7 07             	and    $0x7,%edi
    5139:	40 88 7c 24 60       	mov    %dil,0x60(%rsp)
    513e:	89 cf                	mov    %ecx,%edi
    5140:	83 e1 c7             	and    $0xffffffc7,%ecx
    5143:	88 8c 24 c0 00 00 00 	mov    %cl,0xc0(%rsp)
    514a:	83 e7 07             	and    $0x7,%edi
    514d:	31 c9                	xor    %ecx,%ecx
    514f:	41 80 f8 03          	cmp    $0x3,%r8b
    5153:	41 89 d8             	mov    %ebx,%r8d
    5156:	0f 95 c1             	setne  %cl
    5159:	40 88 bc 24 80 00 00 	mov    %dil,0x80(%rsp)
    5160:	00 
    5161:	83 e6 07             	and    $0x7,%esi
    5164:	41 83 e0 30          	and    $0x30,%r8d
    5168:	01 f6                	add    %esi,%esi
    516a:	48 83 f9 00          	cmp    $0x0,%rcx
    516e:	45 0f 45 f5          	cmovne %r13d,%r14d
    5172:	44 89 c1             	mov    %r8d,%ecx
    5175:	41 89 d8             	mov    %ebx,%r8d
    5178:	31 db                	xor    %ebx,%ebx
    517a:	41 c0 e8 06          	shr    $0x6,%r8b
    517e:	41 0f b6 f8          	movzbl %r8b,%edi
    5182:	49 b8 aa 6a aa aa a5 	movabs $0x155a55a5aaaa6aaa,%r8
    5189:	55 5a 15 
    518c:	40 80 ff 03          	cmp    $0x3,%dil
    5190:	0f 94 c3             	sete   %bl
    5193:	01 f1                	add    %esi,%ecx
    5195:	49 d3 e8             	shr    %cl,%r8
    5198:	0f b6 4c 24 60       	movzbl 0x60(%rsp),%ecx
    519d:	41 83 e0 03          	and    $0x3,%r8d
    51a1:	48 83 fb 00          	cmp    $0x0,%rbx
    51a5:	41 0f 45 d0          	cmovne %r8d,%edx
    51a9:	41 b8 4c 00 00 00    	mov    $0x4c,%r8d
    51af:	44 89 e3             	mov    %r12d,%ebx
    51b2:	49 d3 e8             	shr    %cl,%r8
    51b5:	0f b6 4c 24 70       	movzbl 0x70(%rsp),%ecx
    51ba:	41 83 e0 01          	and    $0x1,%r8d
    51be:	c1 e1 04             	shl    $0x4,%ecx
    51c1:	49 83 f8 00          	cmp    $0x0,%r8
    51c5:	41 0f 45 dd          	cmovne %r13d,%ebx
    51c9:	01 df                	add    %ebx,%edi
    51cb:	45 89 e0             	mov    %r12d,%r8d
    51ce:	09 f9                	or     %edi,%ecx
    51d0:	89 c7                	mov    %eax,%edi
    51d2:	81 f9 f4 0f 00 00    	cmp    $0xff4,%ecx
    51d8:	0f 94 c1             	sete   %cl
    51db:	40 c0 ef 06          	shr    $0x6,%dil
    51df:	31 db                	xor    %ebx,%ebx
    51e1:	0f b6 c9             	movzbl %cl,%ecx
    51e4:	40 0f b6 ff          	movzbl %dil,%edi
    51e8:	48 83 f9 00          	cmp    $0x0,%rcx
    51ec:	45 0f 45 c5          	cmovne %r13d,%r8d
    51f0:	44 89 44 24 2c       	mov    %r8d,0x2c(%rsp)
    51f5:	45 89 f8             	mov    %r15d,%r8d
    51f8:	0f b6 4c 24 5c       	movzbl 0x5c(%rsp),%ecx
    51fd:	41 c1 e0 04          	shl    $0x4,%r8d
    5201:	c5 fb f0 0d f7 2d 01 	vlddqu 0x12df7(%rip),%xmm1        # 18000 <extension_2op_table>
    5208:	00 
    5209:	41 09 f8             	or     %edi,%r8d
    520c:	41 83 f8 11          	cmp    $0x11,%r8d
    5210:	0f 94 c3             	sete   %bl
    5213:	01 c9                	add    %ecx,%ecx
    5215:	c0 e8 03             	shr    $0x3,%al
    5218:	42 8d 0c d1          	lea    (%rcx,%r10,8),%ecx
    521c:	41 ba 1a 05 0a 00    	mov    $0xa051a,%r10d
    5222:	83 e0 07             	and    $0x7,%eax
    5225:	41 d3 ea             	shr    %cl,%r10d
    5228:	41 83 e2 03          	and    $0x3,%r10d
    522c:	48 83 fb 00          	cmp    $0x0,%rbx
    5230:	41 0f 45 d2          	cmovne %r10d,%edx
    5234:	44 8d 14 00          	lea    (%rax,%rax,1),%r10d
    5238:	41 8d 4a 01          	lea    0x1(%r10),%ecx
    523c:	c1 e1 08             	shl    $0x8,%ecx
    523f:	44 09 d1             	or     %r10d,%ecx
    5242:	41 83 f8 13          	cmp    $0x13,%r8d
    5246:	c5 f9 6e f9          	vmovd  %ecx,%xmm7
    524a:	89 f1                	mov    %esi,%ecx
    524c:	0f b6 74 24 64       	movzbl 0x64(%rsp),%esi
    5251:	41 0f 94 c0          	sete   %r8b
    5255:	41 c1 e7 0c          	shl    $0xc,%r15d
    5259:	c5 f9 70 c7 00       	vpshufd $0x0,%xmm7,%xmm0
    525e:	45 0f b6 c0          	movzbl %r8b,%r8d
    5262:	c1 e7 08             	shl    $0x8,%edi
    5265:	c4 e2 71 00 c0       	vpshufb %xmm0,%xmm1,%xmm0
    526a:	89 74 24 64          	mov    %esi,0x64(%rsp)
    526e:	c4 c1 f9 7e c2       	vmovq  %xmm0,%r10
    5273:	41 d3 ea             	shr    %cl,%r10d
    5276:	41 83 e2 03          	and    $0x3,%r10d
    527a:	49 83 f8 00          	cmp    $0x0,%r8
    527e:	41 0f 45 d2          	cmovne %r10d,%edx
    5282:	41 89 f0             	mov    %esi,%r8d
    5285:	c1 e6 04             	shl    $0x4,%esi
    5288:	44 8b 94 24 e0 00 00 	mov    0xe0(%rsp),%r10d
    528f:	00 
    5290:	41 09 f7             	or     %esi,%r15d
    5293:	89 74 24 60          	mov    %esi,0x60(%rsp)
    5297:	41 09 c7             	or     %eax,%r15d
    529a:	31 c0                	xor    %eax,%eax
    529c:	41 09 ff             	or     %edi,%r15d
    529f:	41 81 ff 32 13 00 00 	cmp    $0x1332,%r15d
    52a6:	44 0f b6 bc 24 c0 00 	movzbl 0xc0(%rsp),%r15d
    52ad:	00 00 
    52af:	0f 97 c0             	seta   %al
    52b2:	48 83 f8 00          	cmp    $0x0,%rax
    52b6:	41 0f 45 d4          	cmovne %r12d,%edx
    52ba:	31 c0                	xor    %eax,%eax
    52bc:	41 80 f8 03          	cmp    $0x3,%r8b
    52c0:	0f 94 c0             	sete   %al
    52c3:	48 83 f8 00          	cmp    $0x0,%rax
    52c7:	41 0f 45 d4          	cmovne %r12d,%edx
    52cb:	89 54 24 28          	mov    %edx,0x28(%rsp)
    52cf:	44 89 d2             	mov    %r10d,%edx
    52d2:	8d 42 02             	lea    0x2(%rdx),%eax
    52d5:	0f b6 c0             	movzbl %al,%eax
    52d8:	48 89 c2             	mov    %rax,%rdx
    52db:	48 8d 48 01          	lea    0x1(%rax),%rcx
    52df:	4c 09 ca             	or     %r9,%rdx
    52e2:	48 c1 e1 08          	shl    $0x8,%rcx
    52e6:	c4 e1 f9 6e c2       	vmovq  %rdx,%xmm0
    52eb:	48 8d 50 03          	lea    0x3(%rax),%rdx
    52ef:	48 c1 e2 18          	shl    $0x18,%rdx
    52f3:	c4 c3 f9 22 c3 01    	vpinsrq $0x1,%r11,%xmm0,%xmm0
    52f9:	48 09 ca             	or     %rcx,%rdx
    52fc:	c4 e2 51 00 c0       	vpshufb %xmm0,%xmm5,%xmm0
    5301:	48 b9 00 00 00 00 80 	movabs $0x8080808000000000,%rcx
    5308:	80 80 80 
    530b:	48 09 c2             	or     %rax,%rdx
    530e:	48 83 c0 02          	add    $0x2,%rax
    5312:	c4 c1 f9 7e c0       	vmovq  %xmm0,%r8
    5317:	48 c1 e0 10          	shl    $0x10,%rax
    531b:	48 09 d0             	or     %rdx,%rax
    531e:	44 89 d2             	mov    %r10d,%edx
    5321:	83 c2 03             	add    $0x3,%edx
    5324:	48 09 c8             	or     %rcx,%rax
    5327:	0f b6 d2             	movzbl %dl,%edx
    532a:	c4 e1 f9 6e e0       	vmovq  %rax,%xmm4
    532f:	48 8d 72 01          	lea    0x1(%rdx),%rsi
    5333:	48 8d 42 03          	lea    0x3(%rdx),%rax
    5337:	c4 c3 d9 22 c3 01    	vpinsrq $0x1,%r11,%xmm4,%xmm0
    533d:	48 c1 e6 08          	shl    $0x8,%rsi
    5341:	48 c1 e0 18          	shl    $0x18,%rax
    5345:	c4 e2 51 00 c0       	vpshufb %xmm0,%xmm5,%xmm0
    534a:	48 09 f0             	or     %rsi,%rax
    534d:	48 8d 72 02          	lea    0x2(%rdx),%rsi
    5351:	c4 e1 f9 7e c3       	vmovq  %xmm0,%rbx
    5356:	48 09 d0             	or     %rdx,%rax
    5359:	48 c1 e6 10          	shl    $0x10,%rsi
    535d:	4c 09 ca             	or     %r9,%rdx
    5360:	48 89 5c 24 70       	mov    %rbx,0x70(%rsp)
    5365:	48 09 f0             	or     %rsi,%rax
    5368:	c4 e1 f9 6e e2       	vmovq  %rdx,%xmm4
    536d:	bb 04 00 00 00       	mov    $0x4,%ebx
    5372:	44 89 e2             	mov    %r12d,%edx
    5375:	48 09 c8             	or     %rcx,%rax
    5378:	31 c9                	xor    %ecx,%ecx
    537a:	41 80 ff 05          	cmp    $0x5,%r15b
    537e:	44 89 e6             	mov    %r12d,%esi
    5381:	c4 e1 f9 6e f8       	vmovq  %rax,%xmm7
    5386:	0f 94 c1             	sete   %cl
    5389:	45 89 c1             	mov    %r8d,%r9d
    538c:	45 31 d2             	xor    %r10d,%r10d
    538f:	c4 c3 c1 22 c3 01    	vpinsrq $0x1,%r11,%xmm7,%xmm0
    5395:	c4 e2 51 00 c0       	vpshufb %xmm0,%xmm5,%xmm0
    539a:	c4 e1 f9 7e c0       	vmovq  %xmm0,%rax
    539f:	c4 c3 d9 22 c3 01    	vpinsrq $0x1,%r11,%xmm4,%xmm0
    53a5:	45 89 f3             	mov    %r14d,%r11d
    53a8:	48 83 f9 00          	cmp    $0x0,%rcx
    53ac:	0f 45 54 24 70       	cmovne 0x70(%rsp),%edx
    53b1:	48 83 f9 00          	cmp    $0x0,%rcx
    53b5:	0f 45 f3             	cmovne %ebx,%esi
    53b8:	0f b6 8c 24 80 00 00 	movzbl 0x80(%rsp),%ecx
    53bf:	00 
    53c0:	41 c1 e3 08          	shl    $0x8,%r11d
    53c4:	c4 e2 51 00 e8       	vpshufb %xmm0,%xmm5,%xmm5
    53c9:	89 4c 24 5c          	mov    %ecx,0x5c(%rsp)
    53cd:	44 09 d9             	or     %r11d,%ecx
    53d0:	81 f9 04 01 00 00    	cmp    $0x104,%ecx
    53d6:	41 0f 94 c2          	sete   %r10b
    53da:	41 c0 e9 06          	shr    $0x6,%r9b
    53de:	41 0f b6 c9          	movzbl %r9b,%ecx
    53e2:	41 b9 ff 00 00 00    	mov    $0xff,%r9d
    53e8:	41 c1 e6 10          	shl    $0x10,%r14d
    53ec:	44 89 cf             	mov    %r9d,%edi
    53ef:	49 83 fa 00          	cmp    $0x0,%r10
    53f3:	0f 45 f9             	cmovne %ecx,%edi
    53f6:	44 89 e1             	mov    %r12d,%ecx
    53f9:	89 7c 24 24          	mov    %edi,0x24(%rsp)
    53fd:	8b 7c 24 38          	mov    0x38(%rsp),%edi
    5401:	49 83 fa 00          	cmp    $0x0,%r10
    5405:	41 0f 45 cd          	cmovne %r13d,%ecx
    5409:	8d 74 0e 01          	lea    0x1(%rsi,%rcx,1),%esi
    540d:	89 74 24 58          	mov    %esi,0x58(%rsp)
    5411:	44 89 c6             	mov    %r8d,%esi
    5414:	40 c0 ee 03          	shr    $0x3,%sil
    5418:	89 f1                	mov    %esi,%ecx
    541a:	8d 34 bd 00 00 00 00 	lea    0x0(,%rdi,4),%esi
    5421:	83 e6 08             	and    $0x8,%esi
    5424:	83 e1 07             	and    $0x7,%ecx
    5427:	09 f1                	or     %esi,%ecx
    5429:	44 89 ce             	mov    %r9d,%esi
    542c:	49 83 fa 00          	cmp    $0x0,%r10
    5430:	0f 45 f1             	cmovne %ecx,%esi
    5433:	8d 0c fd 00 00 00 00 	lea    0x0(,%rdi,8),%ecx
    543a:	44 89 c7             	mov    %r8d,%edi
    543d:	89 74 24 38          	mov    %esi,0x38(%rsp)
    5441:	45 0f b6 c0          	movzbl %r8b,%r8d
    5445:	83 e7 07             	and    $0x7,%edi
    5448:	83 e1 08             	and    $0x8,%ecx
    544b:	89 fe                	mov    %edi,%esi
    544d:	44 89 e7             	mov    %r12d,%edi
    5450:	09 ce                	or     %ecx,%esi
    5452:	49 83 fa 00          	cmp    $0x0,%r10
    5456:	0f 45 fe             	cmovne %esi,%edi
    5459:	89 fe                	mov    %edi,%esi
    545b:	41 0f b6 ff          	movzbl %r15b,%edi
    545f:	41 89 f7             	mov    %esi,%r15d
    5462:	89 74 24 20          	mov    %esi,0x20(%rsp)
    5466:	41 c1 e7 08          	shl    $0x8,%r15d
    546a:	44 89 fe             	mov    %r15d,%esi
    546d:	45 31 ff             	xor    %r15d,%r15d
    5470:	81 e6 00 07 00 00    	and    $0x700,%esi
    5476:	44 09 f6             	or     %r14d,%esi
    5479:	09 fe                	or     %edi,%esi
    547b:	81 fe 04 05 01 00    	cmp    $0x10504,%esi
    5481:	44 89 e6             	mov    %r12d,%esi
    5484:	41 0f 94 c7          	sete   %r15b
    5488:	41 09 fb             	or     %edi,%r11d
    548b:	44 89 e7             	mov    %r12d,%edi
    548e:	49 83 ff 00          	cmp    $0x0,%r15
    5492:	0f 45 f3             	cmovne %ebx,%esi
    5495:	49 83 ff 00          	cmp    $0x0,%r15
    5499:	0f 45 d0             	cmovne %eax,%edx
    549c:	44 8b 7c 24 58       	mov    0x58(%rsp),%r15d
    54a1:	41 01 f7             	add    %esi,%r15d
    54a4:	c4 e1 f9 7e ee       	vmovq  %xmm5,%rsi
    54a9:	44 89 fb             	mov    %r15d,%ebx
    54ac:	45 31 ff             	xor    %r15d,%r15d
    54af:	41 81 fb 44 01 00 00 	cmp    $0x144,%r11d
    54b6:	40 0f b6 f6          	movzbl %sil,%esi
    54ba:	41 0f 94 c7          	sete   %r15b
    54be:	49 83 ff 00          	cmp    $0x0,%r15
    54c2:	0f 45 fe             	cmovne %esi,%edi
    54c5:	44 89 e6             	mov    %r12d,%esi
    54c8:	49 83 ff 00          	cmp    $0x0,%r15
    54cc:	41 0f 45 f5          	cmovne %r13d,%esi
    54d0:	01 de                	add    %ebx,%esi
    54d2:	41 81 fb 84 01 00 00 	cmp    $0x184,%r11d
    54d9:	41 bf 04 00 00 00    	mov    $0x4,%r15d
    54df:	8b 5c 24 5c          	mov    0x5c(%rsp),%ebx
    54e3:	41 0f 94 c3          	sete   %r11b
    54e7:	45 0f b6 db          	movzbl %r11b,%r11d
    54eb:	49 83 fb 00          	cmp    $0x0,%r11
    54ef:	0f 45 d0             	cmovne %eax,%edx
    54f2:	44 89 e0             	mov    %r12d,%eax
    54f5:	49 83 fb 00          	cmp    $0x0,%r11
    54f9:	41 0f 45 c7          	cmovne %r15d,%eax
    54fd:	45 31 db             	xor    %r11d,%r11d
    5500:	01 c6                	add    %eax,%esi
    5502:	80 bc 24 80 00 00 00 	cmpb   $0x4,0x80(%rsp)
    5509:	04 
    550a:	44 89 e0             	mov    %r12d,%eax
    550d:	41 0f 95 c3          	setne  %r11b
    5511:	49 83 fb 00          	cmp    $0x0,%r11
    5515:	41 0f 45 c5          	cmovne %r13d,%eax
    5519:	44 8b 5c 24 64       	mov    0x64(%rsp),%r11d
    551e:	c1 e0 08             	shl    $0x8,%eax
    5521:	44 09 f0             	or     %r14d,%eax
    5524:	44 09 d8             	or     %r11d,%eax
    5527:	45 31 db             	xor    %r11d,%r11d
    552a:	3d 01 01 01 00       	cmp    $0x10101,%eax
    552f:	41 0f 94 c3          	sete   %r11b
    5533:	49 83 fb 00          	cmp    $0x0,%r11
    5537:	41 0f 45 f8          	cmovne %r8d,%edi
    553b:	45 89 e0             	mov    %r12d,%r8d
    553e:	49 83 fb 00          	cmp    $0x0,%r11
    5542:	45 0f 45 c5          	cmovne %r13d,%r8d
    5546:	41 01 f0             	add    %esi,%r8d
    5549:	3d 02 01 01 00       	cmp    $0x10102,%eax
    554e:	4c 0f be df          	movsbq %dil,%r11
    5552:	44 89 e6             	mov    %r12d,%esi
    5555:	0f 94 c0             	sete   %al
    5558:	09 d9                	or     %ebx,%ecx
    555a:	0f b6 c0             	movzbl %al,%eax
    555d:	49 83 fa 00          	cmp    $0x0,%r10
    5561:	41 0f 45 cf          	cmovne %r15d,%ecx
    5565:	48 83 f8 00          	cmp    $0x0,%rax
    5569:	41 0f 45 f7          	cmovne %r15d,%esi
    556d:	48 83 f8 00          	cmp    $0x0,%rax
    5571:	0f 45 54 24 70       	cmovne 0x70(%rsp),%edx
    5576:	41 01 f0             	add    %esi,%r8d
    5579:	31 c0                	xor    %eax,%eax
    557b:	8b 74 24 20          	mov    0x20(%rsp),%esi
    557f:	4d 85 db             	test   %r11,%r11
    5582:	0f 94 c0             	sete   %al
    5585:	89 d2                	mov    %edx,%edx
    5587:	41 89 da             	mov    %ebx,%r10d
    558a:	48 83 f8 00          	cmp    $0x0,%rax
    558e:	4c 0f 45 da          	cmovne %rdx,%r11
    5592:	31 d2                	xor    %edx,%edx
    5594:	80 bc 24 c0 00 00 00 	cmpb   $0x4,0xc0(%rsp)
    559b:	04 
    559c:	0f b6 c1             	movzbl %cl,%eax
    559f:	44 8b 7c 24 60       	mov    0x60(%rsp),%r15d
    55a4:	0f 94 c2             	sete   %dl
    55a7:	48 8b 7c 24 78       	mov    0x78(%rsp),%rdi
    55ac:	48 83 fa 00          	cmp    $0x0,%rdx
    55b0:	41 0f 45 c1          	cmovne %r9d,%eax
    55b4:	89 f2                	mov    %esi,%edx
    55b6:	83 e2 07             	and    $0x7,%edx
    55b9:	44 09 fa             	or     %r15d,%edx
    55bc:	83 fa 05             	cmp    $0x5,%edx
    55bf:	0f 94 c2             	sete   %dl
    55c2:	0f b6 d2             	movzbl %dl,%edx
    55c5:	48 83 fa 00          	cmp    $0x0,%rdx
    55c9:	41 0f 45 f1          	cmovne %r9d,%esi
    55cd:	31 d2                	xor    %edx,%edx
    55cf:	80 f9 04             	cmp    $0x4,%cl
    55d2:	0f 94 c2             	sete   %dl
    55d5:	45 09 fa             	or     %r15d,%r10d
    55d8:	48 83 fa 00          	cmp    $0x0,%rdx
    55dc:	0f 45 c6             	cmovne %esi,%eax
    55df:	31 d2                	xor    %edx,%edx
    55e1:	41 83 fa 05          	cmp    $0x5,%r10d
    55e5:	89 c6                	mov    %eax,%esi
    55e7:	b8 10 00 00 00       	mov    $0x10,%eax
    55ec:	0f 94 c2             	sete   %dl
    55ef:	31 db                	xor    %ebx,%ebx
    55f1:	48 83 fa 00          	cmp    $0x0,%rdx
    55f5:	0f 45 f0             	cmovne %eax,%esi
    55f8:	e8 23 f1 ff ff       	call   4720 <register_value_select>
    55fd:	89 f1                	mov    %esi,%ecx
    55ff:	8b 74 24 38          	mov    0x38(%rsp),%esi
    5603:	4c 8b 74 24 68       	mov    0x68(%rsp),%r14
    5608:	44 8b 54 24 34       	mov    0x34(%rsp),%r10d
    560d:	48 89 c2             	mov    %rax,%rdx
    5610:	31 c0                	xor    %eax,%eax
    5612:	48 83 f9 10          	cmp    $0x10,%rcx
    5616:	49 0f 44 d6          	cmove  %r14,%rdx
    561a:	48 81 f9 ff 00 00 00 	cmp    $0xff,%rcx
    5621:	48 0f 44 d3          	cmove  %rbx,%rdx
    5625:	89 d1                	mov    %edx,%ecx
    5627:	49 83 fa 01          	cmp    $0x1,%r10
    562b:	48 0f 44 d1          	cmove  %rcx,%rdx
    562f:	83 fe 04             	cmp    $0x4,%esi
    5632:	0f 94 c0             	sete   %al
    5635:	48 83 f8 00          	cmp    $0x0,%rax
    5639:	41 0f 45 f1          	cmovne %r9d,%esi
    563d:	e8 de f0 ff ff       	call   4720 <register_value_select>
    5642:	44 8b 4c 24 28       	mov    0x28(%rsp),%r9d
    5647:	89 f6                	mov    %esi,%esi
    5649:	48 83 fe 10          	cmp    $0x10,%rsi
    564d:	49 0f 44 c6          	cmove  %r14,%rax
    5651:	48 81 fe ff 00 00 00 	cmp    $0xff,%rsi
    5658:	48 0f 44 c3          	cmove  %rbx,%rax
    565c:	89 c1                	mov    %eax,%ecx
    565e:	41 be 02 00 00 00    	mov    $0x2,%r14d
    5664:	49 83 fa 01          	cmp    $0x1,%r10
    5668:	48 0f 44 c1          	cmove  %rcx,%rax
    566c:	45 85 c9             	test   %r9d,%r9d
    566f:	44 89 e9             	mov    %r13d,%ecx
    5672:	40 0f 94 c6          	sete   %sil
    5676:	40 0f b6 f6          	movzbl %sil,%esi
    567a:	48 83 fe 00          	cmp    $0x0,%rsi
    567e:	41 0f 45 cc          	cmovne %r12d,%ecx
    5682:	41 01 c8             	add    %ecx,%r8d
    5685:	0f b6 4c 24 24       	movzbl 0x24(%rsp),%ecx
    568a:	44 89 ee             	mov    %r13d,%esi
    568d:	d3 e6                	shl    %cl,%esi
    568f:	48 63 ce             	movslq %esi,%rcx
    5692:	48 0f af c1          	imul   %rcx,%rax
    5696:	48 01 c2             	add    %rax,%rdx
    5699:	8b 84 24 a0 00 00 00 	mov    0xa0(%rsp),%eax
    56a0:	4c 01 da             	add    %r11,%rdx
    56a3:	83 e0 0f             	and    $0xf,%eax
    56a6:	8d 70 06             	lea    0x6(%rax),%esi
    56a9:	e8 72 f0 ff ff       	call   4720 <register_value_select>
    56ae:	8b 74 24 40          	mov    0x40(%rsp),%esi
    56b2:	44 8b 7c 24 3c       	mov    0x3c(%rsp),%r15d
    56b7:	48 89 c1             	mov    %rax,%rcx
    56ba:	8b 44 24 48          	mov    0x48(%rsp),%eax
    56be:	44 8b 64 24 2c       	mov    0x2c(%rsp),%r12d
    56c3:	83 e6 03             	and    $0x3,%esi
    56c6:	48 83 f8 01          	cmp    $0x1,%rax
    56ca:	48 0f 44 d1          	cmove  %rcx,%rdx
    56ce:	89 f1                	mov    %esi,%ecx
    56d0:	49 89 c3             	mov    %rax,%r11
    56d3:	be 04 00 00 00       	mov    $0x4,%esi
    56d8:	83 c1 01             	add    $0x1,%ecx
    56db:	48 83 f8 00          	cmp    $0x0,%rax
    56df:	44 0f 45 c9          	cmovne %ecx,%r9d
    56e3:	44 89 f8             	mov    %r15d,%eax
    56e6:	44 09 e0             	or     %r12d,%eax
    56e9:	49 89 c2             	mov    %rax,%r10
    56ec:	48 83 f8 00          	cmp    $0x0,%rax
    56f0:	45 0f 45 ce          	cmovne %r14d,%r9d
    56f4:	e8 27 f0 ff ff       	call   4720 <register_value_select>
    56f9:	8b 4c 24 30          	mov    0x30(%rsp),%ecx
    56fd:	8b 5c 24 4c          	mov    0x4c(%rsp),%ebx
    5701:	49 83 fa 01          	cmp    $0x1,%r10
    5705:	48 0f 44 d0          	cmove  %rax,%rdx
    5709:	42 8d 04 09          	lea    (%rcx,%r9,1),%eax
    570d:	31 c9                	xor    %ecx,%ecx
    570f:	44 8b 94 24 e0 00 00 	mov    0xe0(%rsp),%r10d
    5716:	00 
    5717:	83 f8 02             	cmp    $0x2,%eax
    571a:	44 89 c8             	mov    %r9d,%eax
    571d:	0f 97 c1             	seta   %cl
    5720:	48 83 f9 00          	cmp    $0x0,%rcx
    5724:	41 0f 45 c5          	cmovne %r13d,%eax
    5728:	44 89 f9             	mov    %r15d,%ecx
    572b:	44 09 d9             	or     %r11d,%ecx
    572e:	48 83 f9 00          	cmp    $0x0,%rcx
    5732:	45 0f 45 c5          	cmovne %r13d,%r8d
    5736:	44 89 e1             	mov    %r12d,%ecx
    5739:	48 83 f9 00          	cmp    $0x0,%rcx
    573d:	45 0f 45 c6          	cmovne %r14d,%r8d
    5741:	42 8d 0c 03          	lea    (%rbx,%r8,1),%ecx
    5745:	48 8b 5c 24 50       	mov    0x50(%rsp),%rbx
    574a:	44 01 d1             	add    %r10d,%ecx
    574d:	83 f9 10             	cmp    $0x10,%ecx
    5750:	48 89 13             	mov    %rdx,(%rbx)
    5753:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
    5758:	0f 96 c1             	setbe  %cl
    575b:	0f b6 c9             	movzbl %cl,%ecx
    575e:	48 21 c1             	and    %rax,%rcx
    5761:	48 83 f9 00          	cmp    $0x0,%rcx
    5765:	0f 45 c0             	cmovne %eax,%eax
    5768:	f6 05 c4 26 01 00 08 	testb  $0x8,0x126c4(%rip)        # 17e33 <g_cpu_feature_indicator+0x3>
    576f:	0f 84 1b 01 00 00    	je     5890 <ct_decode+0x10d0>
    5775:	62 f1 7c 48 28 03    	vmovaps (%rbx),%zmm0
    577b:	62 f1 7c 48 28 4b 01 	vmovaps 0x40(%rbx),%zmm1
    5782:	62 f1 7c 48 28 53 02 	vmovaps 0x80(%rbx),%zmm2
    5789:	62 f1 7c 48 28 5b 03 	vmovaps 0xc0(%rbx),%zmm3
    5790:	62 f1 7c 48 28 63 04 	vmovaps 0x100(%rbx),%zmm4
    5797:	62 f1 7c 48 28 6b 05 	vmovaps 0x140(%rbx),%zmm5
    579e:	62 f1 7c 48 28 73 06 	vmovaps 0x180(%rbx),%zmm6
    57a5:	62 f1 7c 48 28 7b 07 	vmovaps 0x1c0(%rbx),%zmm7
    57ac:	62 71 7c 48 28 43 08 	vmovaps 0x200(%rbx),%zmm8
    57b3:	62 71 7c 48 28 4b 09 	vmovaps 0x240(%rbx),%zmm9
    57ba:	62 71 7c 48 28 53 0a 	vmovaps 0x280(%rbx),%zmm10
    57c1:	62 71 7c 48 28 5b 0b 	vmovaps 0x2c0(%rbx),%zmm11
    57c8:	62 71 7c 48 28 63 0c 	vmovaps 0x300(%rbx),%zmm12
    57cf:	62 71 7c 48 28 6b 0d 	vmovaps 0x340(%rbx),%zmm13
    57d6:	62 71 7c 48 28 73 0e 	vmovaps 0x380(%rbx),%zmm14
    57dd:	62 71 7c 48 28 7b 0f 	vmovaps 0x3c0(%rbx),%zmm15
    57e4:	48 8b 94 24 38 05 00 	mov    0x538(%rsp),%rdx
    57eb:	00 
    57ec:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    57f3:	00 00 
    57f5:	0f 85 0d 01 00 00    	jne    5908 <ct_decode+0x1148>
    57fb:	c5 f8 77             	vzeroupper 
    57fe:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    5802:	5b                   	pop    %rbx
    5803:	41 5c                	pop    %r12
    5805:	41 5d                	pop    %r13
    5807:	41 5e                	pop    %r14
    5809:	41 5f                	pop    %r15
    580b:	5d                   	pop    %rbp
    580c:	c3                   	ret    
    580d:	0f 1f 00             	nopl   (%rax)
    5810:	c5 fc 29 00          	vmovaps %ymm0,(%rax)
    5814:	c5 fc 29 48 20       	vmovaps %ymm1,0x20(%rax)
    5819:	c5 fc 29 50 40       	vmovaps %ymm2,0x40(%rax)
    581e:	c5 fc 29 58 60       	vmovaps %ymm3,0x60(%rax)
    5823:	c5 fc 29 a0 80 00 00 	vmovaps %ymm4,0x80(%rax)
    582a:	00 
    582b:	c5 fc 29 a8 a0 00 00 	vmovaps %ymm5,0xa0(%rax)
    5832:	00 
    5833:	c5 fc 29 b0 c0 00 00 	vmovaps %ymm6,0xc0(%rax)
    583a:	00 
    583b:	c5 fc 29 b8 e0 00 00 	vmovaps %ymm7,0xe0(%rax)
    5842:	00 
    5843:	c5 7c 29 80 00 01 00 	vmovaps %ymm8,0x100(%rax)
    584a:	00 
    584b:	c5 7c 29 88 20 01 00 	vmovaps %ymm9,0x120(%rax)
    5852:	00 
    5853:	c5 7c 29 90 40 01 00 	vmovaps %ymm10,0x140(%rax)
    585a:	00 
    585b:	c5 7c 29 98 60 01 00 	vmovaps %ymm11,0x160(%rax)
    5862:	00 
    5863:	c5 7c 29 a0 80 01 00 	vmovaps %ymm12,0x180(%rax)
    586a:	00 
    586b:	c5 7c 29 a8 a0 01 00 	vmovaps %ymm13,0x1a0(%rax)
    5872:	00 
    5873:	c5 7c 29 b0 c0 01 00 	vmovaps %ymm14,0x1c0(%rax)
    587a:	00 
    587b:	c5 7c 29 b8 e0 01 00 	vmovaps %ymm15,0x1e0(%rax)
    5882:	00 
    5883:	e9 fa ef ff ff       	jmp    4882 <ct_decode+0xc2>
    5888:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    588f:	00 
    5890:	c5 fc 28 03          	vmovaps (%rbx),%ymm0
    5894:	c5 fc 28 4b 20       	vmovaps 0x20(%rbx),%ymm1
    5899:	c5 fc 28 53 40       	vmovaps 0x40(%rbx),%ymm2
    589e:	c5 fc 28 5b 60       	vmovaps 0x60(%rbx),%ymm3
    58a3:	c5 fc 28 a3 80 00 00 	vmovaps 0x80(%rbx),%ymm4
    58aa:	00 
    58ab:	c5 fc 28 ab a0 00 00 	vmovaps 0xa0(%rbx),%ymm5
    58b2:	00 
    58b3:	c5 fc 28 b3 c0 00 00 	vmovaps 0xc0(%rbx),%ymm6
    58ba:	00 
    58bb:	c5 fc 28 bb e0 00 00 	vmovaps 0xe0(%rbx),%ymm7
    58c2:	00 
    58c3:	c5 7c 28 83 00 01 00 	vmovaps 0x100(%rbx),%ymm8
    58ca:	00 
    58cb:	c5 7c 28 8b 20 01 00 	vmovaps 0x120(%rbx),%ymm9
    58d2:	00 
    58d3:	c5 7c 28 93 40 01 00 	vmovaps 0x140(%rbx),%ymm10
    58da:	00 
    58db:	c5 7c 28 9b 60 01 00 	vmovaps 0x160(%rbx),%ymm11
    58e2:	00 
    58e3:	c5 7c 28 a3 80 01 00 	vmovaps 0x180(%rbx),%ymm12
    58ea:	00 
    58eb:	c5 7c 28 ab a0 01 00 	vmovaps 0x1a0(%rbx),%ymm13
    58f2:	00 
    58f3:	c5 7c 28 b3 c0 01 00 	vmovaps 0x1c0(%rbx),%ymm14
    58fa:	00 
    58fb:	c5 7c 28 bb e0 01 00 	vmovaps 0x1e0(%rbx),%ymm15
    5902:	00 
    5903:	e9 dc fe ff ff       	jmp    57e4 <ct_decode+0x1024>
    5908:	c5 f8 77             	vzeroupper 
    590b:	e8 f0 b4 00 00       	call   10e00 <__stack_chk_fail>

0000000000005910 <_ZL22init_rts_contexts_emasP9_layout_tS0_m>:
    5910:	48 39 f7             	cmp    %rsi,%rdi
    5913:	0f 83 f7 01 00 00    	jae    5b10 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x200>
    5919:	41 57                	push   %r15
    591b:	41 56                	push   %r14
    591d:	49 89 d6             	mov    %rdx,%r14
    5920:	41 55                	push   %r13
    5922:	49 89 f5             	mov    %rsi,%r13
    5925:	41 54                	push   %r12
    5927:	55                   	push   %rbp
    5928:	53                   	push   %rbx
    5929:	48 89 fb             	mov    %rdi,%rbx
    592c:	48 83 ec 08          	sub    $0x8,%rsp
    5930:	66 f7 03 00 10       	testw  $0x1000,(%rbx)
    5935:	0f 85 d5 00 00 00    	jne    5a10 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x100>
    593b:	48 8b 6b 08          	mov    0x8(%rbx),%rbp
    593f:	e8 b4 cb 00 00       	call   124f8 <get_enclave_base>
    5944:	44 8b 63 04          	mov    0x4(%rbx),%r12d
    5948:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
    594c:	4c 01 f5             	add    %r14,%rbp
    594f:	48 01 c5             	add    %rax,%rbp
    5952:	49 c1 e4 0c          	shl    $0xc,%r12
    5956:	48 85 c9             	test   %rcx,%rcx
    5959:	0f 84 81 00 00 00    	je     59e0 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xd0>
    595f:	0f b7 43 02          	movzwl 0x2(%rbx),%eax
    5963:	a8 04                	test   $0x4,%al
    5965:	75 79                	jne    59e0 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xd0>
    5967:	89 c2                	mov    %eax,%edx
    5969:	41 89 c7             	mov    %eax,%r15d
    596c:	83 e2 10             	and    $0x10,%edx
    596f:	41 83 e7 08          	and    $0x8,%r15d
    5973:	a8 01                	test   $0x1,%al
    5975:	0f 84 e5 00 00 00    	je     5a60 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x150>
    597b:	66 85 d2             	test   %dx,%dx
    597e:	0f 85 3c 01 00 00    	jne    5ac0 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x1b0>
    5984:	0f b7 03             	movzwl (%rbx),%eax
    5987:	66 45 85 ff          	test   %r15w,%r15w
    598b:	0f 85 e1 00 00 00    	jne    5a72 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x162>
    5991:	66 83 f8 04          	cmp    $0x4,%ax
    5995:	0f 84 65 01 00 00    	je     5b00 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x1f0>
    599b:	83 e1 07             	and    $0x7,%ecx
    599e:	ba 80 02 00 00       	mov    $0x280,%edx
    59a3:	45 31 c9             	xor    %r9d,%r9d
    59a6:	45 31 c0             	xor    %r8d,%r8d
    59a9:	4c 89 e6             	mov    %r12,%rsi
    59ac:	48 89 ef             	mov    %rbp,%rdi
    59af:	e8 4c 62 00 00       	call   bc00 <mm_init_ema>
    59b4:	85 c0                	test   %eax,%eax
    59b6:	75 44                	jne    59fc <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xec>
    59b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    59bf:	00 
    59c0:	48 83 c3 20          	add    $0x20,%rbx
    59c4:	4c 39 eb             	cmp    %r13,%rbx
    59c7:	0f 82 63 ff ff ff    	jb     5930 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x20>
    59cd:	48 83 c4 08          	add    $0x8,%rsp
    59d1:	31 c0                	xor    %eax,%eax
    59d3:	5b                   	pop    %rbx
    59d4:	5d                   	pop    %rbp
    59d5:	41 5c                	pop    %r12
    59d7:	41 5d                	pop    %r13
    59d9:	41 5e                	pop    %r14
    59db:	41 5f                	pop    %r15
    59dd:	c3                   	ret    
    59de:	66 90                	xchg   %ax,%ax
    59e0:	45 31 c9             	xor    %r9d,%r9d
    59e3:	45 31 c0             	xor    %r8d,%r8d
    59e6:	31 c9                	xor    %ecx,%ecx
    59e8:	ba 81 00 00 00       	mov    $0x81,%edx
    59ed:	4c 89 e6             	mov    %r12,%rsi
    59f0:	48 89 ef             	mov    %rbp,%rdi
    59f3:	e8 08 62 00 00       	call   bc00 <mm_init_ema>
    59f8:	85 c0                	test   %eax,%eax
    59fa:	74 c4                	je     59c0 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xb0>
    59fc:	b8 01 00 00 00       	mov    $0x1,%eax
    5a01:	48 83 c4 08          	add    $0x8,%rsp
    5a05:	5b                   	pop    %rbx
    5a06:	5d                   	pop    %rbp
    5a07:	41 5c                	pop    %r12
    5a09:	41 5d                	pop    %r13
    5a0b:	41 5e                	pop    %r14
    5a0d:	41 5f                	pop    %r15
    5a0f:	c3                   	ret    
    5a10:	8b 43 04             	mov    0x4(%rbx),%eax
    5a13:	31 ed                	xor    %ebp,%ebp
    5a15:	45 31 e4             	xor    %r12d,%r12d
    5a18:	85 c0                	test   %eax,%eax
    5a1a:	74 a4                	je     59c0 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xb0>
    5a1c:	0f b7 7b 02          	movzwl 0x2(%rbx),%edi
    5a20:	4c 03 63 08          	add    0x8(%rbx),%r12
    5a24:	48 89 de             	mov    %rbx,%rsi
    5a27:	4c 89 e2             	mov    %r12,%rdx
    5a2a:	f7 df                	neg    %edi
    5a2c:	48 63 ff             	movslq %edi,%rdi
    5a2f:	48 c1 e7 05          	shl    $0x5,%rdi
    5a33:	48 01 df             	add    %rbx,%rdi
    5a36:	e8 d5 fe ff ff       	call   5910 <_ZL22init_rts_contexts_emasP9_layout_tS0_m>
    5a3b:	85 c0                	test   %eax,%eax
    5a3d:	75 c2                	jne    5a01 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xf1>
    5a3f:	83 c5 01             	add    $0x1,%ebp
    5a42:	3b 6b 04             	cmp    0x4(%rbx),%ebp
    5a45:	72 d5                	jb     5a1c <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x10c>
    5a47:	48 83 c3 20          	add    $0x20,%rbx
    5a4b:	4c 39 eb             	cmp    %r13,%rbx
    5a4e:	0f 82 dc fe ff ff    	jb     5930 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x20>
    5a54:	e9 74 ff ff ff       	jmp    59cd <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xbd>
    5a59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5a60:	66 85 d2             	test   %dx,%dx
    5a63:	75 5b                	jne    5ac0 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x1b0>
    5a65:	66 45 85 ff          	test   %r15w,%r15w
    5a69:	0f 84 51 ff ff ff    	je     59c0 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xb0>
    5a6f:	0f b7 03             	movzwl (%rbx),%eax
    5a72:	8d 50 ef             	lea    -0x11(%rax),%edx
    5a75:	66 83 fa 01          	cmp    $0x1,%dx
    5a79:	76 0b                	jbe    5a86 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x176>
    5a7b:	ba e4 02 00 00       	mov    $0x2e4,%edx
    5a80:	66 83 f8 07          	cmp    $0x7,%ax
    5a84:	75 05                	jne    5a8b <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x17b>
    5a86:	ba d4 02 00 00       	mov    $0x2d4,%edx
    5a8b:	45 31 c9             	xor    %r9d,%r9d
    5a8e:	45 31 c0             	xor    %r8d,%r8d
    5a91:	31 c9                	xor    %ecx,%ecx
    5a93:	4c 89 e6             	mov    %r12,%rsi
    5a96:	48 89 ef             	mov    %rbp,%rdi
    5a99:	e8 62 62 00 00       	call   bd00 <mm_alloc>
    5a9e:	85 c0                	test   %eax,%eax
    5aa0:	0f 85 56 ff ff ff    	jne    59fc <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xec>
    5aa6:	48 83 c3 20          	add    $0x20,%rbx
    5aaa:	4c 39 eb             	cmp    %r13,%rbx
    5aad:	0f 82 7d fe ff ff    	jb     5930 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x20>
    5ab3:	e9 15 ff ff ff       	jmp    59cd <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xbd>
    5ab8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    5abf:	00 
    5ac0:	45 31 c9             	xor    %r9d,%r9d
    5ac3:	45 31 c0             	xor    %r8d,%r8d
    5ac6:	b9 03 00 00 00       	mov    $0x3,%ecx
    5acb:	ba 80 00 00 00       	mov    $0x80,%edx
    5ad0:	4c 89 e6             	mov    %r12,%rsi
    5ad3:	48 89 ef             	mov    %rbp,%rdi
    5ad6:	e8 25 61 00 00       	call   bc00 <mm_init_ema>
    5adb:	85 c0                	test   %eax,%eax
    5add:	0f 85 19 ff ff ff    	jne    59fc <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xec>
    5ae3:	4c 89 e6             	mov    %r12,%rsi
    5ae6:	48 89 ef             	mov    %rbp,%rdi
    5ae9:	e8 52 62 00 00       	call   bd40 <mm_dealloc>
    5aee:	85 c0                	test   %eax,%eax
    5af0:	0f 84 6f ff ff ff    	je     5a65 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x155>
    5af6:	e9 01 ff ff ff       	jmp    59fc <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xec>
    5afb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5b00:	ba 80 01 00 00       	mov    $0x180,%edx
    5b05:	31 c9                	xor    %ecx,%ecx
    5b07:	e9 97 fe ff ff       	jmp    59a3 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x93>
    5b0c:	0f 1f 40 00          	nopl   0x0(%rax)
    5b10:	31 c0                	xor    %eax,%eax
    5b12:	c3                   	ret    
    5b13:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5b1a:	00 00 00 
    5b1d:	0f 1f 00             	nopl   (%rax)

0000000000005b20 <init_rts_emas>:
    5b20:	f3 0f 1e fa          	endbr64 
    5b24:	55                   	push   %rbp
    5b25:	48 89 d5             	mov    %rdx,%rbp
    5b28:	53                   	push   %rbx
    5b29:	48 89 f3             	mov    %rsi,%rbx
    5b2c:	48 83 ec 08          	sub    $0x8,%rsp
    5b30:	e8 8b 32 00 00       	call   8dc0 <init_segment_emas>
    5b35:	85 c0                	test   %eax,%eax
    5b37:	74 07                	je     5b40 <init_rts_emas+0x20>
    5b39:	48 83 c4 08          	add    $0x8,%rsp
    5b3d:	5b                   	pop    %rbx
    5b3e:	5d                   	pop    %rbp
    5b3f:	c3                   	ret    
    5b40:	48 83 c4 08          	add    $0x8,%rsp
    5b44:	48 89 ee             	mov    %rbp,%rsi
    5b47:	48 89 df             	mov    %rbx,%rdi
    5b4a:	31 d2                	xor    %edx,%edx
    5b4c:	5b                   	pop    %rbx
    5b4d:	5d                   	pop    %rbp
    5b4e:	e9 bd fd ff ff       	jmp    5910 <_ZL22init_rts_contexts_emasP9_layout_tS0_m>
    5b53:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5b5a:	00 00 00 
    5b5d:	0f 1f 00             	nopl   (%rax)

0000000000005b60 <sgx_mm_alloc_ocall>:
    5b60:	f3 0f 1e fa          	endbr64 
    5b64:	41 56                	push   %r14
    5b66:	41 89 ce             	mov    %ecx,%r14d
    5b69:	41 55                	push   %r13
    5b6b:	49 89 fd             	mov    %rdi,%r13
    5b6e:	bf 20 00 00 00       	mov    $0x20,%edi
    5b73:	41 54                	push   %r12
    5b75:	49 89 f4             	mov    %rsi,%r12
    5b78:	55                   	push   %rbp
    5b79:	89 d5                	mov    %edx,%ebp
    5b7b:	53                   	push   %rbx
    5b7c:	e8 ff 03 00 00       	call   5f80 <sgx_ocalloc>
    5b81:	48 85 c0             	test   %rax,%rax
    5b84:	74 4a                	je     5bd0 <sgx_mm_alloc_ocall+0x70>
    5b86:	89 68 18             	mov    %ebp,0x18(%rax)
    5b89:	48 89 c6             	mov    %rax,%rsi
    5b8c:	bf fa ff ff ff       	mov    $0xfffffffa,%edi
    5b91:	48 89 c3             	mov    %rax,%rbx
    5b94:	4c 89 68 08          	mov    %r13,0x8(%rax)
    5b98:	bd 0e 00 00 00       	mov    $0xe,%ebp
    5b9d:	4c 89 60 10          	mov    %r12,0x10(%rax)
    5ba1:	44 89 70 1c          	mov    %r14d,0x1c(%rax)
    5ba5:	e8 c6 19 00 00       	call   7570 <sgx_ocall>
    5baa:	85 c0                	test   %eax,%eax
    5bac:	74 12                	je     5bc0 <sgx_mm_alloc_ocall+0x60>
    5bae:	e8 ad 04 00 00       	call   6060 <sgx_ocfree>
    5bb3:	5b                   	pop    %rbx
    5bb4:	89 e8                	mov    %ebp,%eax
    5bb6:	5d                   	pop    %rbp
    5bb7:	41 5c                	pop    %r12
    5bb9:	41 5d                	pop    %r13
    5bbb:	41 5e                	pop    %r14
    5bbd:	c3                   	ret    
    5bbe:	66 90                	xchg   %ax,%ax
    5bc0:	8b 03                	mov    (%rbx),%eax
    5bc2:	f7 d8                	neg    %eax
    5bc4:	19 ed                	sbb    %ebp,%ebp
    5bc6:	83 e5 0e             	and    $0xe,%ebp
    5bc9:	eb e3                	jmp    5bae <sgx_mm_alloc_ocall+0x4e>
    5bcb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5bd0:	e8 8b 04 00 00       	call   6060 <sgx_ocfree>
    5bd5:	bd 01 00 00 00       	mov    $0x1,%ebp
    5bda:	5b                   	pop    %rbx
    5bdb:	89 e8                	mov    %ebp,%eax
    5bdd:	5d                   	pop    %rbp
    5bde:	41 5c                	pop    %r12
    5be0:	41 5d                	pop    %r13
    5be2:	41 5e                	pop    %r14
    5be4:	c3                   	ret    
    5be5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5bec:	00 00 00 
    5bef:	90                   	nop

0000000000005bf0 <sgx_mm_modify_ocall>:
    5bf0:	f3 0f 1e fa          	endbr64 
    5bf4:	41 56                	push   %r14
    5bf6:	41 89 ce             	mov    %ecx,%r14d
    5bf9:	41 55                	push   %r13
    5bfb:	49 89 fd             	mov    %rdi,%r13
    5bfe:	bf 20 00 00 00       	mov    $0x20,%edi
    5c03:	41 54                	push   %r12
    5c05:	49 89 f4             	mov    %rsi,%r12
    5c08:	55                   	push   %rbp
    5c09:	89 d5                	mov    %edx,%ebp
    5c0b:	53                   	push   %rbx
    5c0c:	e8 6f 03 00 00       	call   5f80 <sgx_ocalloc>
    5c11:	48 85 c0             	test   %rax,%rax
    5c14:	74 4a                	je     5c60 <sgx_mm_modify_ocall+0x70>
    5c16:	89 68 18             	mov    %ebp,0x18(%rax)
    5c19:	48 89 c6             	mov    %rax,%rsi
    5c1c:	bf f9 ff ff ff       	mov    $0xfffffff9,%edi
    5c21:	48 89 c3             	mov    %rax,%rbx
    5c24:	4c 89 68 08          	mov    %r13,0x8(%rax)
    5c28:	bd 0e 00 00 00       	mov    $0xe,%ebp
    5c2d:	4c 89 60 10          	mov    %r12,0x10(%rax)
    5c31:	44 89 70 1c          	mov    %r14d,0x1c(%rax)
    5c35:	e8 36 19 00 00       	call   7570 <sgx_ocall>
    5c3a:	85 c0                	test   %eax,%eax
    5c3c:	74 12                	je     5c50 <sgx_mm_modify_ocall+0x60>
    5c3e:	e8 1d 04 00 00       	call   6060 <sgx_ocfree>
    5c43:	5b                   	pop    %rbx
    5c44:	89 e8                	mov    %ebp,%eax
    5c46:	5d                   	pop    %rbp
    5c47:	41 5c                	pop    %r12
    5c49:	41 5d                	pop    %r13
    5c4b:	41 5e                	pop    %r14
    5c4d:	c3                   	ret    
    5c4e:	66 90                	xchg   %ax,%ax
    5c50:	8b 03                	mov    (%rbx),%eax
    5c52:	f7 d8                	neg    %eax
    5c54:	19 ed                	sbb    %ebp,%ebp
    5c56:	83 e5 0e             	and    $0xe,%ebp
    5c59:	eb e3                	jmp    5c3e <sgx_mm_modify_ocall+0x4e>
    5c5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5c60:	e8 fb 03 00 00       	call   6060 <sgx_ocfree>
    5c65:	bd 01 00 00 00       	mov    $0x1,%ebp
    5c6a:	5b                   	pop    %rbx
    5c6b:	89 e8                	mov    %ebp,%eax
    5c6d:	5d                   	pop    %rbp
    5c6e:	41 5c                	pop    %r12
    5c70:	41 5d                	pop    %r13
    5c72:	41 5e                	pop    %r14
    5c74:	c3                   	ret    
    5c75:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5c7c:	00 00 00 
    5c7f:	90                   	nop

0000000000005c80 <sgx_mm_register_pfhandler>:
    5c80:	f3 0f 1e fa          	endbr64 
    5c84:	31 c0                	xor    %eax,%eax
    5c86:	48 83 3d 6a 46 01 00 	cmpq   $0x0,0x1466a(%rip)        # 1a2f8 <g_mm_pfhandler>
    5c8d:	00 
    5c8e:	74 08                	je     5c98 <sgx_mm_register_pfhandler+0x18>
    5c90:	c3                   	ret    
    5c91:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5c98:	48 89 3d 59 46 01 00 	mov    %rdi,0x14659(%rip)        # 1a2f8 <g_mm_pfhandler>
    5c9f:	b8 01 00 00 00       	mov    $0x1,%eax
    5ca4:	c3                   	ret    
    5ca5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5cac:	00 00 00 
    5caf:	90                   	nop

0000000000005cb0 <sgx_mm_unregister_pfhandler>:
    5cb0:	f3 0f 1e fa          	endbr64 
    5cb4:	31 c0                	xor    %eax,%eax
    5cb6:	48 39 3d 3b 46 01 00 	cmp    %rdi,0x1463b(%rip)        # 1a2f8 <g_mm_pfhandler>
    5cbd:	74 01                	je     5cc0 <sgx_mm_unregister_pfhandler+0x10>
    5cbf:	c3                   	ret    
    5cc0:	48 c7 05 2d 46 01 00 	movq   $0x0,0x1462d(%rip)        # 1a2f8 <g_mm_pfhandler>
    5cc7:	00 00 00 00 
    5ccb:	b8 01 00 00 00       	mov    $0x1,%eax
    5cd0:	c3                   	ret    
    5cd1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5cd8:	00 00 00 
    5cdb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000005ce0 <sgx_mm_mutex_create>:
    5ce0:	f3 0f 1e fa          	endbr64 
    5ce4:	48 83 ec 08          	sub    $0x8,%rsp
    5ce8:	bf 18 00 00 00       	mov    $0x18,%edi
    5ced:	e8 9e 77 00 00       	call   d490 <dlmalloc>
    5cf2:	48 85 c0             	test   %rax,%rax
    5cf5:	74 16                	je     5d0d <sgx_mm_mutex_create+0x2d>
    5cf7:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    5cfe:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
    5d05:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    5d0c:	00 
    5d0d:	48 83 c4 08          	add    $0x8,%rsp
    5d11:	c3                   	ret    
    5d12:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5d19:	00 00 00 
    5d1c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005d20 <sgx_mm_mutex_lock>:
    5d20:	f3 0f 1e fa          	endbr64 
    5d24:	53                   	push   %rbx
    5d25:	48 89 fb             	mov    %rdi,%rbx
    5d28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    5d2f:	00 
    5d30:	48 89 df             	mov    %rbx,%rdi
    5d33:	e8 d8 b1 00 00       	call   10f10 <sgx_thread_spin_trylock>
    5d38:	85 c0                	test   %eax,%eax
    5d3a:	75 f4                	jne    5d30 <sgx_mm_mutex_lock+0x10>
    5d3c:	5b                   	pop    %rbx
    5d3d:	c3                   	ret    
    5d3e:	66 90                	xchg   %ax,%ax

0000000000005d40 <sgx_mm_mutex_unlock>:
    5d40:	f3 0f 1e fa          	endbr64 
    5d44:	e9 57 b2 00 00       	jmp    10fa0 <sgx_thread_spin_unlock>
    5d49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000005d50 <sgx_mm_mutex_destroy>:
    5d50:	f3 0f 1e fa          	endbr64 
    5d54:	55                   	push   %rbp
    5d55:	53                   	push   %rbx
    5d56:	48 89 fb             	mov    %rdi,%rbx
    5d59:	48 83 ec 08          	sub    $0x8,%rsp
    5d5d:	e8 2e b1 00 00       	call   10e90 <sgx_thread_spin_destroy>
    5d62:	48 89 df             	mov    %rbx,%rdi
    5d65:	89 c5                	mov    %eax,%ebp
    5d67:	e8 14 95 00 00       	call   f280 <dlfree>
    5d6c:	48 83 c4 08          	add    $0x8,%rsp
    5d70:	89 e8                	mov    %ebp,%eax
    5d72:	5b                   	pop    %rbx
    5d73:	5d                   	pop    %rbp
    5d74:	c3                   	ret    
    5d75:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5d7c:	00 00 00 
    5d7f:	90                   	nop

0000000000005d80 <sgx_mm_is_within_enclave>:
    5d80:	f3 0f 1e fa          	endbr64 
    5d84:	48 83 ec 08          	sub    $0x8,%rsp
    5d88:	e8 33 01 00 00       	call   5ec0 <sgx_is_within_enclave>
    5d8d:	85 c0                	test   %eax,%eax
    5d8f:	0f 95 c0             	setne  %al
    5d92:	48 83 c4 08          	add    $0x8,%rsp
    5d96:	c3                   	ret    
    5d97:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    5d9e:	00 00 

0000000000005da0 <init_optimized_libs>:
    5da0:	f3 0f 1e fa          	endbr64 
    5da4:	41 54                	push   %r12
    5da6:	49 89 d4             	mov    %rdx,%r12
    5da9:	55                   	push   %rbp
    5daa:	48 89 f5             	mov    %rsi,%rbp
    5dad:	53                   	push   %rbx
    5dae:	48 89 fb             	mov    %rdi,%rbx
    5db1:	e8 4e c7 00 00       	call   12504 <get_enclave_state>
    5db6:	83 f8 01             	cmp    $0x1,%eax
    5db9:	0f 85 d6 00 00 00    	jne    5e95 <init_optimized_libs+0xf5>
    5dbf:	48 b8 ff ff ff ff ff 	movabs $0xffffffffffffff,%rax
    5dc6:	ff ff 00 
    5dc9:	48 89 da             	mov    %rbx,%rdx
    5dcc:	48 21 c2             	and    %rax,%rdx
    5dcf:	48 39 d8             	cmp    %rbx,%rax
    5dd2:	48 0f 42 da          	cmovb  %rdx,%rbx
    5dd6:	48 81 fb ff 01 00 00 	cmp    $0x1ff,%rbx
    5ddd:	0f 86 b2 00 00 00    	jbe    5e95 <init_optimized_libs+0xf5>
    5de3:	f6 c3 20             	test   $0x20,%bl
    5de6:	74 0e                	je     5df6 <init_optimized_libs+0x56>
    5de8:	48 89 d8             	mov    %rbx,%rax
    5deb:	48 f7 d0             	not    %rax
    5dee:	a8 1f                	test   $0x1f,%al
    5df0:	0f 85 9f 00 00 00    	jne    5e95 <init_optimized_libs+0xf5>
    5df6:	f6 c3 40             	test   $0x40,%bl
    5df9:	74 0e                	je     5e09 <init_optimized_libs+0x69>
    5dfb:	48 89 d8             	mov    %rbx,%rax
    5dfe:	48 f7 d0             	not    %rax
    5e01:	a8 3f                	test   $0x3f,%al
    5e03:	0f 85 8c 00 00 00    	jne    5e95 <init_optimized_libs+0xf5>
    5e09:	f6 c3 80             	test   $0x80,%bl
    5e0c:	74 0a                	je     5e18 <init_optimized_libs+0x78>
    5e0e:	48 89 d8             	mov    %rbx,%rax
    5e11:	48 f7 d0             	not    %rax
    5e14:	a8 7f                	test   $0x7f,%al
    5e16:	75 7d                	jne    5e95 <init_optimized_libs+0xf5>
    5e18:	f6 c7 01             	test   $0x1,%bh
    5e1b:	74 0b                	je     5e28 <init_optimized_libs+0x88>
    5e1d:	0f b6 c3             	movzbl %bl,%eax
    5e20:	48 3d ff 00 00 00    	cmp    $0xff,%rax
    5e26:	75 6d                	jne    5e95 <init_optimized_libs+0xf5>
    5e28:	f6 c7 02             	test   $0x2,%bh
    5e2b:	74 0d                	je     5e3a <init_optimized_libs+0x9a>
    5e2d:	48 89 d8             	mov    %rbx,%rax
    5e30:	48 f7 d0             	not    %rax
    5e33:	a9 ff 01 00 00       	test   $0x1ff,%eax
    5e38:	75 5b                	jne    5e95 <init_optimized_libs+0xf5>
    5e3a:	f6 c7 04             	test   $0x4,%bh
    5e3d:	75 49                	jne    5e88 <init_optimized_libs+0xe8>
    5e3f:	4c 89 e0             	mov    %r12,%rax
    5e42:	48 f7 d0             	not    %rax
    5e45:	a8 06                	test   $0x6,%al
    5e47:	74 57                	je     5ea0 <init_optimized_libs+0x100>
    5e49:	48 b8 ff 7f 12 86 08 	movabs $0xfffe200886127fff,%rax
    5e50:	20 fe ff 
    5e53:	48 21 c3             	and    %rax,%rbx
    5e56:	4c 8d 25 d3 1f 01 00 	lea    0x11fd3(%rip),%r12        # 17e30 <g_cpu_feature_indicator>
    5e5d:	48 89 df             	mov    %rbx,%rdi
    5e60:	49 89 1c 24          	mov    %rbx,(%r12)
    5e64:	e8 b7 ae 00 00       	call   10d20 <sgx_init_string_lib>
    5e69:	85 c0                	test   %eax,%eax
    5e6b:	75 28                	jne    5e95 <init_optimized_libs+0xf5>
    5e6d:	49 8b 3c 24          	mov    (%r12),%rdi
    5e71:	48 89 ee             	mov    %rbp,%rsi
    5e74:	e8 67 b5 00 00       	call   113e0 <sgx_init_crypto_lib>
    5e79:	5b                   	pop    %rbx
    5e7a:	5d                   	pop    %rbp
    5e7b:	f7 d8                	neg    %eax
    5e7d:	41 5c                	pop    %r12
    5e7f:	19 c0                	sbb    %eax,%eax
    5e81:	c3                   	ret    
    5e82:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5e88:	48 89 d8             	mov    %rbx,%rax
    5e8b:	48 f7 d0             	not    %rax
    5e8e:	a9 ff 03 00 00       	test   $0x3ff,%eax
    5e93:	74 aa                	je     5e3f <init_optimized_libs+0x9f>
    5e95:	5b                   	pop    %rbx
    5e96:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    5e9b:	5d                   	pop    %rbp
    5e9c:	41 5c                	pop    %r12
    5e9e:	c3                   	ret    
    5e9f:	90                   	nop
    5ea0:	4c 89 e0             	mov    %r12,%rax
    5ea3:	48 f7 d0             	not    %rax
    5ea6:	a8 e0                	test   $0xe0,%al
    5ea8:	74 ac                	je     5e56 <init_optimized_libs+0xb6>
    5eaa:	48 b8 ff ff ff b6 18 	movabs $0xfffee018b6ffffff,%rax
    5eb1:	e0 fe ff 
    5eb4:	48 21 c3             	and    %rax,%rbx
    5eb7:	eb 9d                	jmp    5e56 <init_optimized_libs+0xb6>
    5eb9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000005ec0 <sgx_is_within_enclave>:
    5ec0:	f3 0f 1e fa          	endbr64 
    5ec4:	48 8d 05 55 1f 01 00 	lea    0x11f55(%rip),%rax        # 17e20 <g_enclave_base>
    5ecb:	48 8b 10             	mov    (%rax),%rdx
    5ece:	48 8d 05 43 1f 01 00 	lea    0x11f43(%rip),%rax        # 17e18 <g_enclave_size>
    5ed5:	48 8b 08             	mov    (%rax),%rcx
    5ed8:	48 01 d1             	add    %rdx,%rcx
    5edb:	48 89 c8             	mov    %rcx,%rax
    5ede:	48 83 e8 01          	sub    $0x1,%rax
    5ee2:	48 85 f6             	test   %rsi,%rsi
    5ee5:	74 21                	je     5f08 <sgx_is_within_enclave+0x48>
    5ee7:	48 83 ee 01          	sub    $0x1,%rsi
    5eeb:	48 01 fe             	add    %rdi,%rsi
    5eee:	0f 93 c1             	setae  %cl
    5ef1:	48 39 d7             	cmp    %rdx,%rdi
    5ef4:	0f 93 c2             	setae  %dl
    5ef7:	21 ca                	and    %ecx,%edx
    5ef9:	48 39 f0             	cmp    %rsi,%rax
    5efc:	0f 93 c0             	setae  %al
    5eff:	0f b6 c0             	movzbl %al,%eax
    5f02:	21 d0                	and    %edx,%eax
    5f04:	c3                   	ret    
    5f05:	0f 1f 00             	nopl   (%rax)
    5f08:	48 89 fe             	mov    %rdi,%rsi
    5f0b:	b9 01 00 00 00       	mov    $0x1,%ecx
    5f10:	eb df                	jmp    5ef1 <sgx_is_within_enclave+0x31>
    5f12:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5f19:	00 00 00 
    5f1c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005f20 <sgx_is_outside_enclave>:
    5f20:	f3 0f 1e fa          	endbr64 
    5f24:	48 85 f6             	test   %rsi,%rsi
    5f27:	74 17                	je     5f40 <sgx_is_outside_enclave+0x20>
    5f29:	48 83 ee 01          	sub    $0x1,%rsi
    5f2d:	b8 00 00 00 00       	mov    $0x0,%eax
    5f32:	48 01 fe             	add    %rdi,%rsi
    5f35:	73 0c                	jae    5f43 <sgx_is_outside_enclave+0x23>
    5f37:	c3                   	ret    
    5f38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    5f3f:	00 
    5f40:	48 89 fe             	mov    %rdi,%rsi
    5f43:	48 8d 05 d6 1e 01 00 	lea    0x11ed6(%rip),%rax        # 17e20 <g_enclave_base>
    5f4a:	48 8b 10             	mov    (%rax),%rdx
    5f4d:	48 8d 05 c4 1e 01 00 	lea    0x11ec4(%rip),%rax        # 17e18 <g_enclave_size>
    5f54:	48 8b 08             	mov    (%rax),%rcx
    5f57:	48 01 d1             	add    %rdx,%rcx
    5f5a:	48 89 c8             	mov    %rcx,%rax
    5f5d:	48 83 e8 01          	sub    $0x1,%rax
    5f61:	48 39 f8             	cmp    %rdi,%rax
    5f64:	0f 92 c0             	setb   %al
    5f67:	48 39 d6             	cmp    %rdx,%rsi
    5f6a:	0f 92 c2             	setb   %dl
    5f6d:	09 d0                	or     %edx,%eax
    5f6f:	0f b6 c0             	movzbl %al,%eax
    5f72:	c3                   	ret    
    5f73:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5f7a:	00 00 00 
    5f7d:	0f 1f 00             	nopl   (%rax)

0000000000005f80 <sgx_ocalloc>:
    5f80:	f3 0f 1e fa          	endbr64 
    5f84:	53                   	push   %rbx
    5f85:	48 89 fb             	mov    %rdi,%rbx
    5f88:	48 83 ec 10          	sub    $0x10,%rsp
    5f8c:	e8 b2 c5 00 00       	call   12543 <get_thread_data>
    5f91:	48 8d 15 88 1e 01 00 	lea    0x11e88(%rip),%rdx        # 17e20 <g_enclave_base>
    5f98:	48 8b 70 20          	mov    0x20(%rax),%rsi
    5f9c:	48 8b 3a             	mov    (%rdx),%rdi
    5f9f:	48 8d 15 72 1e 01 00 	lea    0x11e72(%rip),%rdx        # 17e18 <g_enclave_size>
    5fa6:	48 8b 86 90 00 00 00 	mov    0x90(%rsi),%rax
    5fad:	48 8b 0a             	mov    (%rdx),%rcx
    5fb0:	48 89 c2             	mov    %rax,%rdx
    5fb3:	48 83 c2 07          	add    $0x7,%rdx
    5fb7:	72 33                	jb     5fec <sgx_ocalloc+0x6c>
    5fb9:	4c 8d 44 0f ff       	lea    -0x1(%rdi,%rcx,1),%r8
    5fbe:	48 39 fa             	cmp    %rdi,%rdx
    5fc1:	72 05                	jb     5fc8 <sgx_ocalloc+0x48>
    5fc3:	49 39 c0             	cmp    %rax,%r8
    5fc6:	73 24                	jae    5fec <sgx_ocalloc+0x6c>
    5fc8:	48 39 d8             	cmp    %rbx,%rax
    5fcb:	72 1f                	jb     5fec <sgx_ocalloc+0x6c>
    5fcd:	48 89 c2             	mov    %rax,%rdx
    5fd0:	48 29 da             	sub    %rbx,%rdx
    5fd3:	48 89 d1             	mov    %rdx,%rcx
    5fd6:	48 83 e1 f0          	and    $0xfffffffffffffff0,%rcx
    5fda:	48 85 db             	test   %rbx,%rbx
    5fdd:	75 19                	jne    5ff8 <sgx_ocalloc+0x78>
    5fdf:	48 89 cb             	mov    %rcx,%rbx
    5fe2:	48 39 fb             	cmp    %rdi,%rbx
    5fe5:	72 21                	jb     6008 <sgx_ocalloc+0x88>
    5fe7:	49 39 c8             	cmp    %rcx,%r8
    5fea:	72 1c                	jb     6008 <sgx_ocalloc+0x88>
    5fec:	e8 46 c9 00 00       	call   12937 <abort>
    5ff1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5ff8:	48 83 eb 01          	sub    $0x1,%rbx
    5ffc:	48 01 cb             	add    %rcx,%rbx
    5fff:	72 eb                	jb     5fec <sgx_ocalloc+0x6c>
    6001:	eb df                	jmp    5fe2 <sgx_ocalloc+0x62>
    6003:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6008:	48 83 e8 01          	sub    $0x1,%rax
    600c:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    6012:	48 81 e2 00 f0 ff ff 	and    $0xfffffffffffff000,%rdx
    6019:	75 1d                	jne    6038 <sgx_ocalloc+0xb8>
    601b:	eb cf                	jmp    5fec <sgx_ocalloc+0x6c>
    601d:	0f 1f 00             	nopl   (%rax)
    6020:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    6025:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    602a:	c6 00 00             	movb   $0x0,(%rax)
    602d:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    6032:	48 2d 00 10 00 00    	sub    $0x1000,%rax
    6038:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    603d:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    6042:	48 39 d0             	cmp    %rdx,%rax
    6045:	73 d9                	jae    6020 <sgx_ocalloc+0xa0>
    6047:	48 89 8e 90 00 00 00 	mov    %rcx,0x90(%rsi)
    604e:	48 83 c4 10          	add    $0x10,%rsp
    6052:	48 89 c8             	mov    %rcx,%rax
    6055:	5b                   	pop    %rbx
    6056:	c3                   	ret    
    6057:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    605e:	00 00 

0000000000006060 <sgx_ocfree>:
    6060:	f3 0f 1e fa          	endbr64 
    6064:	48 83 ec 08          	sub    $0x8,%rsp
    6068:	e8 d6 c4 00 00       	call   12543 <get_thread_data>
    606d:	48 8d 15 ac 1d 01 00 	lea    0x11dac(%rip),%rdx        # 17e20 <g_enclave_base>
    6074:	48 8d 0d 9d 1d 01 00 	lea    0x11d9d(%rip),%rcx        # 17e18 <g_enclave_size>
    607b:	48 8b 70 20          	mov    0x20(%rax),%rsi
    607f:	48 8b 40 08          	mov    0x8(%rax),%rax
    6083:	48 8b 12             	mov    (%rdx),%rdx
    6086:	48 8b 09             	mov    (%rcx),%rcx
    6089:	48 8b 40 e8          	mov    -0x18(%rax),%rax
    608d:	48 89 c7             	mov    %rax,%rdi
    6090:	48 83 c7 07          	add    $0x7,%rdi
    6094:	72 0f                	jb     60a5 <sgx_ocfree+0x45>
    6096:	48 8d 4c 0a ff       	lea    -0x1(%rdx,%rcx,1),%rcx
    609b:	48 39 c1             	cmp    %rax,%rcx
    609e:	72 10                	jb     60b0 <sgx_ocfree+0x50>
    60a0:	48 39 d7             	cmp    %rdx,%rdi
    60a3:	72 0b                	jb     60b0 <sgx_ocfree+0x50>
    60a5:	e8 8d c8 00 00       	call   12937 <abort>
    60aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    60b0:	48 89 86 90 00 00 00 	mov    %rax,0x90(%rsi)
    60b7:	48 83 c4 08          	add    $0x8,%rsp
    60bb:	c3                   	ret    
    60bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000060c0 <sgx_read_rand>:
    60c0:	f3 0f 1e fa          	endbr64 
    60c4:	41 55                	push   %r13
    60c6:	41 54                	push   %r12
    60c8:	55                   	push   %rbp
    60c9:	53                   	push   %rbx
    60ca:	48 83 ec 18          	sub    $0x18,%rsp
    60ce:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    60d5:	00 00 
    60d7:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    60dc:	31 c0                	xor    %eax,%eax
    60de:	48 85 ff             	test   %rdi,%rdi
    60e1:	0f 84 f9 00 00 00    	je     61e0 <sgx_read_rand+0x120>
    60e7:	48 89 f3             	mov    %rsi,%rbx
    60ea:	48 85 f6             	test   %rsi,%rsi
    60ed:	0f 84 ed 00 00 00    	je     61e0 <sgx_read_rand+0x120>
    60f3:	48 8d 05 26 1d 01 00 	lea    0x11d26(%rip),%rax        # 17e20 <g_enclave_base>
    60fa:	48 89 fd             	mov    %rdi,%rbp
    60fd:	31 ff                	xor    %edi,%edi
    60ff:	48 8b 08             	mov    (%rax),%rcx
    6102:	48 8d 05 0f 1d 01 00 	lea    0x11d0f(%rip),%rax        # 17e18 <g_enclave_size>
    6109:	48 8b 10             	mov    (%rax),%rdx
    610c:	48 8d 46 ff          	lea    -0x1(%rsi),%rax
    6110:	48 01 ca             	add    %rcx,%rdx
    6113:	48 83 ea 01          	sub    $0x1,%rdx
    6117:	48 01 e8             	add    %rbp,%rax
    611a:	40 0f 92 c7          	setb   %dil
    611e:	48 39 c2             	cmp    %rax,%rdx
    6121:	41 0f 93 c0          	setae  %r8b
    6125:	48 85 ff             	test   %rdi,%rdi
    6128:	40 0f 94 c6          	sete   %sil
    612c:	41 84 f0             	test   %sil,%r8b
    612f:	74 05                	je     6136 <sgx_read_rand+0x76>
    6131:	48 39 cd             	cmp    %rcx,%rbp
    6134:	73 42                	jae    6178 <sgx_read_rand+0xb8>
    6136:	be 02 00 00 00       	mov    $0x2,%esi
    613b:	48 85 ff             	test   %rdi,%rdi
    613e:	74 28                	je     6168 <sgx_read_rand+0xa8>
    6140:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    6145:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    614c:	00 00 
    614e:	0f 85 96 00 00 00    	jne    61ea <sgx_read_rand+0x12a>
    6154:	48 83 c4 18          	add    $0x18,%rsp
    6158:	89 f0                	mov    %esi,%eax
    615a:	5b                   	pop    %rbx
    615b:	5d                   	pop    %rbp
    615c:	41 5c                	pop    %r12
    615e:	41 5d                	pop    %r13
    6160:	c3                   	ret    
    6161:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6168:	48 39 c8             	cmp    %rcx,%rax
    616b:	72 0b                	jb     6178 <sgx_read_rand+0xb8>
    616d:	48 39 d5             	cmp    %rdx,%rbp
    6170:	76 ce                	jbe    6140 <sgx_read_rand+0x80>
    6172:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6178:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
    617f:	00 
    6180:	4c 8d 6c 24 04       	lea    0x4(%rsp),%r13
    6185:	4c 89 ef             	mov    %r13,%rdi
    6188:	e8 87 c7 00 00       	call   12914 <do_rdrand>
    618d:	85 c0                	test   %eax,%eax
    618f:	74 3f                	je     61d0 <sgx_read_rand+0x110>
    6191:	41 bc 04 00 00 00    	mov    $0x4,%r12d
    6197:	48 89 ef             	mov    %rbp,%rdi
    619a:	4c 89 ee             	mov    %r13,%rsi
    619d:	4c 39 e3             	cmp    %r12,%rbx
    61a0:	4c 0f 46 e3          	cmovbe %rbx,%r12
    61a4:	4c 89 e2             	mov    %r12,%rdx
    61a7:	4c 01 e5             	add    %r12,%rbp
    61aa:	e8 81 a8 00 00       	call   10a30 <memcpy>
    61af:	4c 29 e3             	sub    %r12,%rbx
    61b2:	75 d1                	jne    6185 <sgx_read_rand+0xc5>
    61b4:	be 04 00 00 00       	mov    $0x4,%esi
    61b9:	b9 04 00 00 00       	mov    $0x4,%ecx
    61be:	31 d2                	xor    %edx,%edx
    61c0:	4c 89 ef             	mov    %r13,%rdi
    61c3:	e8 b8 aa 00 00       	call   10c80 <memset_s>
    61c8:	31 f6                	xor    %esi,%esi
    61ca:	e9 71 ff ff ff       	jmp    6140 <sgx_read_rand+0x80>
    61cf:	90                   	nop
    61d0:	be 01 00 00 00       	mov    $0x1,%esi
    61d5:	e9 66 ff ff ff       	jmp    6140 <sgx_read_rand+0x80>
    61da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    61e0:	be 02 00 00 00       	mov    $0x2,%esi
    61e5:	e9 56 ff ff ff       	jmp    6140 <sgx_read_rand+0x80>
    61ea:	e8 11 ac 00 00       	call   10e00 <__stack_chk_fail>
    61ef:	90                   	nop

00000000000061f0 <check_static_stack_canary>:
    61f0:	f3 0f 1e fa          	endbr64 
    61f4:	48 8d 05 0d 1c 01 00 	lea    0x11c0d(%rip),%rax        # 17e08 <__intel_security_cookie>
    61fb:	48 8b 00             	mov    (%rax),%rax
    61fe:	48 39 87 08 fc fe ff 	cmp    %rax,-0x103f8(%rdi)
    6205:	0f 95 c0             	setne  %al
    6208:	0f b6 c0             	movzbl %al,%eax
    620b:	f7 d8                	neg    %eax
    620d:	c3                   	ret    
    620e:	66 90                	xchg   %ax,%ax

0000000000006210 <sgx_rdpkru>:
    6210:	f3 0f 1e fa          	endbr64 
    6214:	53                   	push   %rbx
    6215:	48 89 fb             	mov    %rdi,%rbx
    6218:	e8 63 18 00 00       	call   7a80 <is_pkru_enabled>
    621d:	89 c2                	mov    %eax,%edx
    621f:	31 c0                	xor    %eax,%eax
    6221:	84 d2                	test   %dl,%dl
    6223:	74 0c                	je     6231 <sgx_rdpkru+0x21>
    6225:	89 c1                	mov    %eax,%ecx
    6227:	0f 01 ee             	rdpkru 
    622a:	89 03                	mov    %eax,(%rbx)
    622c:	b8 01 00 00 00       	mov    $0x1,%eax
    6231:	5b                   	pop    %rbx
    6232:	c3                   	ret    
    6233:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    623a:	00 00 00 
    623d:	0f 1f 00             	nopl   (%rax)

0000000000006240 <sgx_wrpkru>:
    6240:	f3 0f 1e fa          	endbr64 
    6244:	53                   	push   %rbx
    6245:	89 fb                	mov    %edi,%ebx
    6247:	e8 34 18 00 00       	call   7a80 <is_pkru_enabled>
    624c:	31 d2                	xor    %edx,%edx
    624e:	84 c0                	test   %al,%al
    6250:	74 0c                	je     625e <sgx_wrpkru+0x1e>
    6252:	89 d8                	mov    %ebx,%eax
    6254:	89 d1                	mov    %edx,%ecx
    6256:	0f 01 ef             	wrpkru 
    6259:	ba 01 00 00 00       	mov    $0x1,%edx
    625e:	89 d0                	mov    %edx,%eax
    6260:	5b                   	pop    %rbx
    6261:	c3                   	ret    
    6262:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6269:	00 00 00 
    626c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000006270 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0>:
    6270:	41 55                	push   %r13
    6272:	49 89 cd             	mov    %rcx,%r13
    6275:	41 54                	push   %r12
    6277:	55                   	push   %rbp
    6278:	53                   	push   %rbx
    6279:	48 83 ec 08          	sub    $0x8,%rsp
    627d:	48 8d 0d fc d0 00 00 	lea    0xd0fc(%rip),%rcx        # 13380 <g_global_data>
    6284:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    628a:	85 c0                	test   %eax,%eax
    628c:	0f 84 8e 00 00 00    	je     6320 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0xb0>
    6292:	48 89 d3             	mov    %rdx,%rbx
    6295:	49 89 fc             	mov    %rdi,%r12
    6298:	31 d2                	xor    %edx,%edx
    629a:	eb 11                	jmp    62ad <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0x3d>
    629c:	0f 1f 40 00          	nopl   0x0(%rax)
    62a0:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    62a6:	83 c2 01             	add    $0x1,%edx
    62a9:	39 c2                	cmp    %eax,%edx
    62ab:	73 73                	jae    6320 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0xb0>
    62ad:	89 d0                	mov    %edx,%eax
    62af:	48 83 c0 0b          	add    $0xb,%rax
    62b3:	48 c1 e0 05          	shl    $0x5,%rax
    62b7:	48 01 c8             	add    %rcx,%rax
    62ba:	0f b7 00             	movzwl (%rax),%eax
    62bd:	66 39 c6             	cmp    %ax,%si
    62c0:	75 de                	jne    62a0 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0x30>
    62c2:	8d 42 0b             	lea    0xb(%rdx),%eax
    62c5:	48 c1 e0 05          	shl    $0x5,%rax
    62c9:	48 01 c1             	add    %rax,%rcx
    62cc:	48 89 cd             	mov    %rcx,%rbp
    62cf:	74 4f                	je     6320 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0xb0>
    62d1:	e8 22 c2 00 00       	call   124f8 <get_enclave_base>
    62d6:	48 8b 55 08          	mov    0x8(%rbp),%rdx
    62da:	48 01 da             	add    %rbx,%rdx
    62dd:	48 01 d0             	add    %rdx,%rax
    62e0:	8b 55 04             	mov    0x4(%rbp),%edx
    62e3:	49 39 c4             	cmp    %rax,%r12
    62e6:	72 38                	jb     6320 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0xb0>
    62e8:	48 c1 e2 0c          	shl    $0xc,%rdx
    62ec:	49 81 c4 00 10 00 00 	add    $0x1000,%r12
    62f3:	48 01 c2             	add    %rax,%rdx
    62f6:	4c 39 e2             	cmp    %r12,%rdx
    62f9:	72 25                	jb     6320 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0xb0>
    62fb:	4d 85 ed             	test   %r13,%r13
    62fe:	74 11                	je     6311 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0xa1>
    6300:	48 8b 45 18          	mov    0x18(%rbp),%rax
    6304:	49 89 45 00          	mov    %rax,0x0(%r13)
    6308:	0f b7 45 02          	movzwl 0x2(%rbp),%eax
    630c:	66 41 89 45 08       	mov    %ax,0x8(%r13)
    6311:	31 c0                	xor    %eax,%eax
    6313:	48 83 c4 08          	add    $0x8,%rsp
    6317:	5b                   	pop    %rbx
    6318:	5d                   	pop    %rbp
    6319:	41 5c                	pop    %r12
    631b:	41 5d                	pop    %r13
    631d:	c3                   	ret    
    631e:	66 90                	xchg   %ax,%ax
    6320:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    6325:	eb ec                	jmp    6313 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0xa3>
    6327:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    632e:	00 00 

0000000000006330 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0>:
    6330:	48 81 ff ff ef ff ff 	cmp    $0xffffffffffffefff,%rdi
    6337:	0f 87 c3 01 00 00    	ja     6500 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x1d0>
    633d:	41 57                	push   %r15
    633f:	41 56                	push   %r14
    6341:	41 55                	push   %r13
    6343:	41 54                	push   %r12
    6345:	49 89 f4             	mov    %rsi,%r12
    6348:	55                   	push   %rbp
    6349:	48 89 d5             	mov    %rdx,%rbp
    634c:	53                   	push   %rbx
    634d:	48 89 fb             	mov    %rdi,%rbx
    6350:	48 83 ec 08          	sub    $0x8,%rsp
    6354:	e8 87 13 00 00       	call   76e0 <get_heap_base>
    6359:	49 89 c5             	mov    %rax,%r13
    635c:	e8 0f 14 00 00       	call   7770 <get_heap_min_size>
    6361:	49 01 c5             	add    %rax,%r13
    6364:	e8 97 13 00 00       	call   7700 <get_heap_size>
    6369:	49 89 c6             	mov    %rax,%r14
    636c:	e8 ff 13 00 00       	call   7770 <get_heap_min_size>
    6371:	49 29 c6             	sub    %rax,%r14
    6374:	4c 39 eb             	cmp    %r13,%rbx
    6377:	72 37                	jb     63b0 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x80>
    6379:	48 8d 83 00 10 00 00 	lea    0x1000(%rbx),%rax
    6380:	4d 01 f5             	add    %r14,%r13
    6383:	49 39 c5             	cmp    %rax,%r13
    6386:	72 28                	jb     63b0 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x80>
    6388:	48 85 ed             	test   %rbp,%rbp
    638b:	74 11                	je     639e <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x6e>
    638d:	b8 08 00 00 00       	mov    $0x8,%eax
    6392:	48 c7 45 00 03 02 00 	movq   $0x203,0x0(%rbp)
    6399:	00 
    639a:	66 89 45 08          	mov    %ax,0x8(%rbp)
    639e:	31 c0                	xor    %eax,%eax
    63a0:	48 83 c4 08          	add    $0x8,%rsp
    63a4:	5b                   	pop    %rbx
    63a5:	5d                   	pop    %rbp
    63a6:	41 5c                	pop    %r12
    63a8:	41 5d                	pop    %r13
    63aa:	41 5e                	pop    %r14
    63ac:	41 5f                	pop    %r15
    63ae:	c3                   	ret    
    63af:	90                   	nop
    63b0:	31 d2                	xor    %edx,%edx
    63b2:	48 89 e9             	mov    %rbp,%rcx
    63b5:	be 07 00 00 00       	mov    $0x7,%esi
    63ba:	48 89 df             	mov    %rbx,%rdi
    63bd:	e8 ae fe ff ff       	call   6270 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0>
    63c2:	85 c0                	test   %eax,%eax
    63c4:	74 d8                	je     639e <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x6e>
    63c6:	48 8d 15 9b 1a 01 00 	lea    0x11a9b(%rip),%rdx        # 17e68 <rsrv_mem_size>
    63cd:	48 8d 05 9c 1a 01 00 	lea    0x11a9c(%rip),%rax        # 17e70 <rsrv_mem_base>
    63d4:	48 8b 0a             	mov    (%rdx),%rcx
    63d7:	48 8d 15 82 1a 01 00 	lea    0x11a82(%rip),%rdx        # 17e60 <rsrv_mem_min_size>
    63de:	48 8b 00             	mov    (%rax),%rax
    63e1:	48 8b 32             	mov    (%rdx),%rsi
    63e4:	48 01 c6             	add    %rax,%rsi
    63e7:	48 39 f3             	cmp    %rsi,%rbx
    63ea:	72 0f                	jb     63fb <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0xcb>
    63ec:	48 8d 93 00 10 00 00 	lea    0x1000(%rbx),%rdx
    63f3:	48 01 c8             	add    %rcx,%rax
    63f6:	48 39 d0             	cmp    %rdx,%rax
    63f9:	73 8d                	jae    6388 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x58>
    63fb:	48 8d 0d 7e cf 00 00 	lea    0xcf7e(%rip),%rcx        # 13380 <g_global_data>
    6402:	31 d2                	xor    %edx,%edx
    6404:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    640a:	85 c0                	test   %eax,%eax
    640c:	74 25                	je     6433 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x103>
    640e:	66 90                	xchg   %ax,%ax
    6410:	89 d0                	mov    %edx,%eax
    6412:	48 83 c0 0b          	add    $0xb,%rax
    6416:	48 c1 e0 05          	shl    $0x5,%rax
    641a:	48 01 c8             	add    %rcx,%rax
    641d:	0f b7 00             	movzwl (%rax),%eax
    6420:	66 3d 13 10          	cmp    $0x1013,%ax
    6424:	74 42                	je     6468 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x138>
    6426:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    642c:	83 c2 01             	add    $0x1,%edx
    642f:	39 c2                	cmp    %eax,%edx
    6431:	72 dd                	jb     6410 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0xe0>
    6433:	41 bd 0e 00 00 00    	mov    $0xe,%r13d
    6439:	31 d2                	xor    %edx,%edx
    643b:	48 89 e9             	mov    %rbp,%rcx
    643e:	44 89 ee             	mov    %r13d,%esi
    6441:	48 89 df             	mov    %rbx,%rdi
    6444:	e8 27 fe ff ff       	call   6270 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0>
    6449:	85 c0                	test   %eax,%eax
    644b:	0f 84 96 00 00 00    	je     64e7 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x1b7>
    6451:	41 83 c5 01          	add    $0x1,%r13d
    6455:	41 83 fd 13          	cmp    $0x13,%r13d
    6459:	75 de                	jne    6439 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x109>
    645b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    6460:	e9 3b ff ff ff       	jmp    63a0 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x70>
    6465:	0f 1f 00             	nopl   (%rax)
    6468:	8d 42 0b             	lea    0xb(%rdx),%eax
    646b:	41 bd 0e 00 00 00    	mov    $0xe,%r13d
    6471:	48 c1 e0 05          	shl    $0x5,%rax
    6475:	48 01 c1             	add    %rax,%rcx
    6478:	49 89 ce             	mov    %rcx,%r14
    647b:	74 bc                	je     6439 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x109>
    647d:	41 8b 46 04          	mov    0x4(%r14),%eax
    6481:	45 31 ff             	xor    %r15d,%r15d
    6484:	83 f8 ff             	cmp    $0xffffffff,%eax
    6487:	75 17                	jne    64a0 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x170>
    6489:	eb 4d                	jmp    64d8 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x1a8>
    648b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6490:	41 8b 46 04          	mov    0x4(%r14),%eax
    6494:	49 83 c7 01          	add    $0x1,%r15
    6498:	83 c0 01             	add    $0x1,%eax
    649b:	41 39 c7             	cmp    %eax,%r15d
    649e:	73 38                	jae    64d8 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x1a8>
    64a0:	49 8b 56 08          	mov    0x8(%r14),%rdx
    64a4:	48 89 e9             	mov    %rbp,%rcx
    64a7:	44 89 ee             	mov    %r13d,%esi
    64aa:	48 89 df             	mov    %rbx,%rdi
    64ad:	49 0f af d7          	imul   %r15,%rdx
    64b1:	e8 ba fd ff ff       	call   6270 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0>
    64b6:	85 c0                	test   %eax,%eax
    64b8:	75 d6                	jne    6490 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x160>
    64ba:	4d 85 e4             	test   %r12,%r12
    64bd:	0f 84 db fe ff ff    	je     639e <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x6e>
    64c3:	49 8b 46 08          	mov    0x8(%r14),%rax
    64c7:	49 0f af c7          	imul   %r15,%rax
    64cb:	49 89 04 24          	mov    %rax,(%r12)
    64cf:	e9 ca fe ff ff       	jmp    639e <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x6e>
    64d4:	0f 1f 40 00          	nopl   0x0(%rax)
    64d8:	41 83 c5 01          	add    $0x1,%r13d
    64dc:	41 83 fd 13          	cmp    $0x13,%r13d
    64e0:	75 9b                	jne    647d <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x14d>
    64e2:	e9 74 ff ff ff       	jmp    645b <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x12b>
    64e7:	4d 85 e4             	test   %r12,%r12
    64ea:	0f 84 ae fe ff ff    	je     639e <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x6e>
    64f0:	49 c7 04 24 00 00 00 	movq   $0x0,(%r12)
    64f7:	00 
    64f8:	e9 a1 fe ff ff       	jmp    639e <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x6e>
    64fd:	0f 1f 00             	nopl   (%rax)
    6500:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    6505:	c3                   	ret    
    6506:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    650d:	00 00 00 

0000000000006510 <_Z24get_dynamic_layout_by_idt>:
    6510:	f3 0f 1e fa          	endbr64 
    6514:	48 8d 05 65 ce 00 00 	lea    0xce65(%rip),%rax        # 13380 <g_global_data>
    651b:	8b 90 58 01 00 00    	mov    0x158(%rax),%edx
    6521:	85 d2                	test   %edx,%edx
    6523:	74 3b                	je     6560 <_Z24get_dynamic_layout_by_idt+0x50>
    6525:	31 c9                	xor    %ecx,%ecx
    6527:	eb 14                	jmp    653d <_Z24get_dynamic_layout_by_idt+0x2d>
    6529:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6530:	8b 90 58 01 00 00    	mov    0x158(%rax),%edx
    6536:	83 c1 01             	add    $0x1,%ecx
    6539:	39 d1                	cmp    %edx,%ecx
    653b:	73 23                	jae    6560 <_Z24get_dynamic_layout_by_idt+0x50>
    653d:	89 ca                	mov    %ecx,%edx
    653f:	48 83 c2 0b          	add    $0xb,%rdx
    6543:	48 c1 e2 05          	shl    $0x5,%rdx
    6547:	48 01 c2             	add    %rax,%rdx
    654a:	0f b7 12             	movzwl (%rdx),%edx
    654d:	66 39 fa             	cmp    %di,%dx
    6550:	75 de                	jne    6530 <_Z24get_dynamic_layout_by_idt+0x20>
    6552:	8d 51 0b             	lea    0xb(%rcx),%edx
    6555:	48 c1 e2 05          	shl    $0x5,%rdx
    6559:	48 01 d0             	add    %rdx,%rax
    655c:	c3                   	ret    
    655d:	0f 1f 00             	nopl   (%rax)
    6560:	31 c0                	xor    %eax,%eax
    6562:	c3                   	ret    
    6563:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    656a:	00 00 00 
    656d:	0f 1f 00             	nopl   (%rax)

0000000000006570 <is_dynamic_thread>:
    6570:	f3 0f 1e fa          	endbr64 
    6574:	48 83 ec 28          	sub    $0x28,%rsp
    6578:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    657f:	00 00 
    6581:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    6586:	31 c0                	xor    %eax,%eax
    6588:	48 85 ff             	test   %rdi,%rdi
    658b:	74 0e                	je     659b <is_dynamic_thread+0x2b>
    658d:	31 f6                	xor    %esi,%esi
    658f:	48 89 e2             	mov    %rsp,%rdx
    6592:	e8 99 fd ff ff       	call   6330 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0>
    6597:	85 c0                	test   %eax,%eax
    6599:	74 1d                	je     65b8 <is_dynamic_thread+0x48>
    659b:	31 c0                	xor    %eax,%eax
    659d:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    65a2:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    65a9:	00 00 
    65ab:	75 1a                	jne    65c7 <is_dynamic_thread+0x57>
    65ad:	48 83 c4 28          	add    $0x28,%rsp
    65b1:	c3                   	ret    
    65b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    65b8:	31 c0                	xor    %eax,%eax
    65ba:	48 81 3c 24 00 01 00 	cmpq   $0x100,(%rsp)
    65c1:	00 
    65c2:	0f 94 c0             	sete   %al
    65c5:	eb d6                	jmp    659d <is_dynamic_thread+0x2d>
    65c7:	e8 34 a8 00 00       	call   10e00 <__stack_chk_fail>
    65cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000065d0 <is_dynamic_thread_exist>:
    65d0:	f3 0f 1e fa          	endbr64 
    65d4:	48 8d 05 51 18 01 00 	lea    0x11851(%rip),%rax        # 17e2c <EDMM_supported>
    65db:	8b 00                	mov    (%rax),%eax
    65dd:	85 c0                	test   %eax,%eax
    65df:	74 59                	je     663a <is_dynamic_thread_exist+0x6a>
    65e1:	48 8d 0d 98 cd 00 00 	lea    0xcd98(%rip),%rcx        # 13380 <g_global_data>
    65e8:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    65ee:	85 c0                	test   %eax,%eax
    65f0:	74 46                	je     6638 <is_dynamic_thread_exist+0x68>
    65f2:	31 d2                	xor    %edx,%edx
    65f4:	eb 17                	jmp    660d <is_dynamic_thread_exist+0x3d>
    65f6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    65fd:	00 00 00 
    6600:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    6606:	83 c2 01             	add    $0x1,%edx
    6609:	39 c2                	cmp    %eax,%edx
    660b:	73 2b                	jae    6638 <is_dynamic_thread_exist+0x68>
    660d:	89 d0                	mov    %edx,%eax
    660f:	48 83 c0 0b          	add    $0xb,%rax
    6613:	48 c1 e0 05          	shl    $0x5,%rax
    6617:	48 01 c8             	add    %rcx,%rax
    661a:	0f b7 00             	movzwl (%rax),%eax
    661d:	66 83 f8 12          	cmp    $0x12,%ax
    6621:	75 dd                	jne    6600 <is_dynamic_thread_exist+0x30>
    6623:	8d 42 0b             	lea    0xb(%rdx),%eax
    6626:	48 c1 e0 05          	shl    $0x5,%rax
    662a:	48 01 c1             	add    %rax,%rcx
    662d:	0f 95 c0             	setne  %al
    6630:	0f b6 c0             	movzbl %al,%eax
    6633:	c3                   	ret    
    6634:	0f 1f 40 00          	nopl   0x0(%rax)
    6638:	31 c0                	xor    %eax,%eax
    663a:	c3                   	ret    
    663b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000006640 <get_dynamic_stack_max_page>:
    6640:	f3 0f 1e fa          	endbr64 
    6644:	48 8d 0d 35 cd 00 00 	lea    0xcd35(%rip),%rcx        # 13380 <g_global_data>
    664b:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    6651:	85 c0                	test   %eax,%eax
    6653:	74 45                	je     669a <get_dynamic_stack_max_page+0x5a>
    6655:	31 d2                	xor    %edx,%edx
    6657:	eb 14                	jmp    666d <get_dynamic_stack_max_page+0x2d>
    6659:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6660:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    6666:	83 c2 01             	add    $0x1,%edx
    6669:	39 c2                	cmp    %eax,%edx
    666b:	73 2b                	jae    6698 <get_dynamic_stack_max_page+0x58>
    666d:	89 d0                	mov    %edx,%eax
    666f:	48 83 c0 0b          	add    $0xb,%rax
    6673:	48 c1 e0 05          	shl    $0x5,%rax
    6677:	48 01 c8             	add    %rcx,%rax
    667a:	0f b7 00             	movzwl (%rax),%eax
    667d:	66 83 f8 07          	cmp    $0x7,%ax
    6681:	75 dd                	jne    6660 <get_dynamic_stack_max_page+0x20>
    6683:	8d 42 0b             	lea    0xb(%rdx),%eax
    6686:	48 c1 e0 05          	shl    $0x5,%rax
    668a:	48 01 c1             	add    %rax,%rcx
    668d:	74 09                	je     6698 <get_dynamic_stack_max_page+0x58>
    668f:	8b 41 04             	mov    0x4(%rcx),%eax
    6692:	c3                   	ret    
    6693:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6698:	31 c0                	xor    %eax,%eax
    669a:	c3                   	ret    
    669b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000066a0 <do_add_thread>:
    66a0:	f3 0f 1e fa          	endbr64 
    66a4:	41 56                	push   %r14
    66a6:	41 55                	push   %r13
    66a8:	41 54                	push   %r12
    66aa:	55                   	push   %rbp
    66ab:	53                   	push   %rbx
    66ac:	48 89 fb             	mov    %rdi,%rbx
    66af:	48 83 ec 10          	sub    $0x10,%rsp
    66b3:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    66ba:	00 00 
    66bc:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    66c1:	31 c0                	xor    %eax,%eax
    66c3:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    66ca:	00 
    66cb:	e8 28 be 00 00       	call   124f8 <get_enclave_base>
    66d0:	31 d2                	xor    %edx,%edx
    66d2:	48 89 e6             	mov    %rsp,%rsi
    66d5:	48 89 df             	mov    %rbx,%rdi
    66d8:	48 89 c5             	mov    %rax,%rbp
    66db:	e8 50 fc ff ff       	call   6330 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0>
    66e0:	85 c0                	test   %eax,%eax
    66e2:	75 62                	jne    6746 <do_add_thread+0xa6>
    66e4:	4c 8d 25 95 cc 00 00 	lea    0xcc95(%rip),%r12        # 13380 <g_global_data>
    66eb:	41 8b 84 24 58 01 00 	mov    0x158(%r12),%eax
    66f2:	00 
    66f3:	85 c0                	test   %eax,%eax
    66f5:	74 4f                	je     6746 <do_add_thread+0xa6>
    66f7:	31 d2                	xor    %edx,%edx
    66f9:	eb 14                	jmp    670f <do_add_thread+0x6f>
    66fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6700:	41 8b 84 24 58 01 00 	mov    0x158(%r12),%eax
    6707:	00 
    6708:	83 c2 01             	add    $0x1,%edx
    670b:	39 c2                	cmp    %eax,%edx
    670d:	73 37                	jae    6746 <do_add_thread+0xa6>
    670f:	89 d0                	mov    %edx,%eax
    6711:	48 83 c0 0b          	add    $0xb,%rax
    6715:	48 c1 e0 05          	shl    $0x5,%rax
    6719:	4c 01 e0             	add    %r12,%rax
    671c:	44 0f b7 28          	movzwl (%rax),%r13d
    6720:	66 41 83 fd 0e       	cmp    $0xe,%r13w
    6725:	75 d9                	jne    6700 <do_add_thread+0x60>
    6727:	8d 42 0b             	lea    0xb(%rdx),%eax
    672a:	48 c1 e0 05          	shl    $0x5,%rax
    672e:	4c 01 e0             	add    %r12,%rax
    6731:	74 13                	je     6746 <do_add_thread+0xa6>
    6733:	4c 8b 34 24          	mov    (%rsp),%r14
    6737:	48 8b 40 08          	mov    0x8(%rax),%rax
    673b:	49 01 ee             	add    %rbp,%r14
    673e:	4c 01 f0             	add    %r14,%rax
    6741:	48 39 d8             	cmp    %rbx,%rax
    6744:	74 4e                	je     6794 <do_add_thread+0xf4>
    6746:	b8 01 00 00 00       	mov    $0x1,%eax
    674b:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    6750:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    6757:	00 00 
    6759:	0f 85 f9 00 00 00    	jne    6858 <do_add_thread+0x1b8>
    675f:	48 83 c4 10          	add    $0x10,%rsp
    6763:	5b                   	pop    %rbx
    6764:	5d                   	pop    %rbp
    6765:	41 5c                	pop    %r12
    6767:	41 5d                	pop    %r13
    6769:	41 5e                	pop    %r14
    676b:	c3                   	ret    
    676c:	0f 1f 40 00          	nopl   0x0(%rax)
    6770:	8d 42 0b             	lea    0xb(%rdx),%eax
    6773:	48 c1 e0 05          	shl    $0x5,%rax
    6777:	4c 01 e0             	add    %r12,%rax
    677a:	74 0d                	je     6789 <do_add_thread+0xe9>
    677c:	0f b7 50 02          	movzwl 0x2(%rax),%edx
    6780:	83 e2 20             	and    $0x20,%edx
    6783:	0f 85 af 00 00 00    	jne    6838 <do_add_thread+0x198>
    6789:	41 83 c5 01          	add    $0x1,%r13d
    678d:	66 41 83 fd 13       	cmp    $0x13,%r13w
    6792:	74 3c                	je     67d0 <do_add_thread+0x130>
    6794:	41 8b 84 24 58 01 00 	mov    0x158(%r12),%eax
    679b:	00 
    679c:	31 d2                	xor    %edx,%edx
    679e:	85 c0                	test   %eax,%eax
    67a0:	75 15                	jne    67b7 <do_add_thread+0x117>
    67a2:	eb e5                	jmp    6789 <do_add_thread+0xe9>
    67a4:	0f 1f 40 00          	nopl   0x0(%rax)
    67a8:	41 8b 84 24 58 01 00 	mov    0x158(%r12),%eax
    67af:	00 
    67b0:	83 c2 01             	add    $0x1,%edx
    67b3:	39 c2                	cmp    %eax,%edx
    67b5:	73 d2                	jae    6789 <do_add_thread+0xe9>
    67b7:	89 d0                	mov    %edx,%eax
    67b9:	48 83 c0 0b          	add    $0xb,%rax
    67bd:	48 c1 e0 05          	shl    $0x5,%rax
    67c1:	4c 01 e0             	add    %r12,%rax
    67c4:	0f b7 00             	movzwl (%rax),%eax
    67c7:	66 44 39 e8          	cmp    %r13w,%ax
    67cb:	75 db                	jne    67a8 <do_add_thread+0x108>
    67cd:	eb a1                	jmp    6770 <do_add_thread+0xd0>
    67cf:	90                   	nop
    67d0:	ba 48 00 00 00       	mov    $0x48,%edx
    67d5:	49 8d b4 24 10 01 00 	lea    0x110(%r12),%rsi
    67dc:	00 
    67dd:	48 89 df             	mov    %rbx,%rdi
    67e0:	e8 4b a2 00 00       	call   10a30 <memcpy>
    67e5:	f3 0f 6f 4b 30       	movdqu 0x30(%rbx),%xmm1
    67ea:	48 89 d8             	mov    %rbx,%rax
    67ed:	48 89 df             	mov    %rbx,%rdi
    67f0:	66 48 0f 6e c3       	movq   %rbx,%xmm0
    67f5:	48 29 e8             	sub    %rbp,%rax
    67f8:	48 01 43 10          	add    %rax,0x10(%rbx)
    67fc:	ba 00 01 00 00       	mov    $0x100,%edx
    6801:	66 0f 6c c0          	punpcklqdq %xmm0,%xmm0
    6805:	be 00 10 00 00       	mov    $0x1000,%esi
    680a:	66 0f d4 c8          	paddq  %xmm0,%xmm1
    680e:	66 48 0f 6e c5       	movq   %rbp,%xmm0
    6813:	66 0f 6c c0          	punpcklqdq %xmm0,%xmm0
    6817:	66 0f fb c8          	psubq  %xmm0,%xmm1
    681b:	0f 11 4b 30          	movups %xmm1,0x30(%rbx)
    681f:	e8 3c 55 00 00       	call   bd60 <mm_modify_type>
    6824:	85 c0                	test   %eax,%eax
    6826:	0f 95 c0             	setne  %al
    6829:	0f b6 c0             	movzbl %al,%eax
    682c:	e9 1a ff ff ff       	jmp    674b <do_add_thread+0xab>
    6831:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6838:	8b 70 04             	mov    0x4(%rax),%esi
    683b:	48 8b 78 08          	mov    0x8(%rax),%rdi
    683f:	48 c1 e6 0c          	shl    $0xc,%rsi
    6843:	4c 01 f7             	add    %r14,%rdi
    6846:	e8 d5 54 00 00       	call   bd20 <mm_commit>
    684b:	85 c0                	test   %eax,%eax
    684d:	0f 84 36 ff ff ff    	je     6789 <do_add_thread+0xe9>
    6853:	e9 ee fe ff ff       	jmp    6746 <do_add_thread+0xa6>
    6858:	e8 a3 a5 00 00       	call   10e00 <__stack_chk_fail>
    685d:	0f 1f 00             	nopl   (%rax)

0000000000006860 <sgx_set_ssa_aexnotify>:
    6860:	f3 0f 1e fa          	endbr64 
    6864:	55                   	push   %rbp
    6865:	89 fd                	mov    %edi,%ebp
    6867:	53                   	push   %rbx
    6868:	48 83 ec 08          	sub    $0x8,%rsp
    686c:	e8 d2 bc 00 00       	call   12543 <get_thread_data>
    6871:	48 85 c0             	test   %rax,%rax
    6874:	74 3a                	je     68b0 <sgx_set_ssa_aexnotify+0x50>
    6876:	48 89 c3             	mov    %rax,%rbx
    6879:	e8 52 af 00 00       	call   117d0 <sgx_self_report>
    687e:	f6 40 31 04          	testb  $0x4,0x31(%rax)
    6882:	74 2c                	je     68b0 <sgx_set_ssa_aexnotify+0x50>
    6884:	48 8b 53 20          	mov    0x20(%rbx),%rdx
    6888:	0f b6 82 a7 00 00 00 	movzbl 0xa7(%rdx),%eax
    688f:	89 c1                	mov    %eax,%ecx
    6891:	83 c8 01             	or     $0x1,%eax
    6894:	83 e1 fe             	and    $0xfffffffe,%ecx
    6897:	85 ed                	test   %ebp,%ebp
    6899:	0f 44 c1             	cmove  %ecx,%eax
    689c:	88 82 a7 00 00 00    	mov    %al,0xa7(%rdx)
    68a2:	48 83 c4 08          	add    $0x8,%rsp
    68a6:	31 c0                	xor    %eax,%eax
    68a8:	5b                   	pop    %rbx
    68a9:	5d                   	pop    %rbp
    68aa:	c3                   	ret    
    68ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    68b0:	48 83 c4 08          	add    $0x8,%rsp
    68b4:	b8 01 00 00 00       	mov    $0x1,%eax
    68b9:	5b                   	pop    %rbx
    68ba:	5d                   	pop    %rbp
    68bb:	c3                   	ret    
    68bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000068c0 <sgx_register_aex_handler>:
    68c0:	f3 0f 1e fa          	endbr64 
    68c4:	48 85 ff             	test   %rdi,%rdi
    68c7:	0f 84 bb 00 00 00    	je     6988 <sgx_register_aex_handler+0xc8>
    68cd:	41 55                	push   %r13
    68cf:	b8 02 00 00 00       	mov    $0x2,%eax
    68d4:	41 54                	push   %r12
    68d6:	49 89 f4             	mov    %rsi,%r12
    68d9:	55                   	push   %rbp
    68da:	53                   	push   %rbx
    68db:	48 83 ec 08          	sub    $0x8,%rsp
    68df:	48 85 f6             	test   %rsi,%rsi
    68e2:	74 2a                	je     690e <sgx_register_aex_handler+0x4e>
    68e4:	48 89 fb             	mov    %rdi,%rbx
    68e7:	48 89 d5             	mov    %rdx,%rbp
    68ea:	e8 f1 11 00 00       	call   7ae0 <get_ssa_aexnotify>
    68ef:	85 c0                	test   %eax,%eax
    68f1:	75 2d                	jne    6920 <sgx_register_aex_handler+0x60>
    68f3:	e8 4b bc 00 00       	call   12543 <get_thread_data>
    68f8:	66 48 0f 6e c5       	movq   %rbp,%xmm0
    68fd:	0f 16 40 48          	movhps 0x48(%rax),%xmm0
    6901:	4c 89 23             	mov    %r12,(%rbx)
    6904:	0f 11 43 08          	movups %xmm0,0x8(%rbx)
    6908:	48 89 58 48          	mov    %rbx,0x48(%rax)
    690c:	31 c0                	xor    %eax,%eax
    690e:	48 83 c4 08          	add    $0x8,%rsp
    6912:	5b                   	pop    %rbx
    6913:	5d                   	pop    %rbp
    6914:	41 5c                	pop    %r12
    6916:	41 5d                	pop    %r13
    6918:	c3                   	ret    
    6919:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6920:	e8 1e bc 00 00       	call   12543 <get_thread_data>
    6925:	49 89 c5             	mov    %rax,%r13
    6928:	48 85 c0             	test   %rax,%rax
    692b:	74 16                	je     6943 <sgx_register_aex_handler+0x83>
    692d:	e8 9e ae 00 00       	call   117d0 <sgx_self_report>
    6932:	f6 40 31 04          	testb  $0x4,0x31(%rax)
    6936:	74 0b                	je     6943 <sgx_register_aex_handler+0x83>
    6938:	49 8b 45 20          	mov    0x20(%r13),%rax
    693c:	80 a0 a7 00 00 00 fe 	andb   $0xfe,0xa7(%rax)
    6943:	e8 fb bb 00 00       	call   12543 <get_thread_data>
    6948:	66 48 0f 6e c5       	movq   %rbp,%xmm0
    694d:	0f 16 40 48          	movhps 0x48(%rax),%xmm0
    6951:	4c 89 23             	mov    %r12,(%rbx)
    6954:	0f 11 43 08          	movups %xmm0,0x8(%rbx)
    6958:	48 89 58 48          	mov    %rbx,0x48(%rax)
    695c:	e8 e2 bb 00 00       	call   12543 <get_thread_data>
    6961:	48 89 c3             	mov    %rax,%rbx
    6964:	48 85 c0             	test   %rax,%rax
    6967:	74 a3                	je     690c <sgx_register_aex_handler+0x4c>
    6969:	e8 62 ae 00 00       	call   117d0 <sgx_self_report>
    696e:	f6 40 31 04          	testb  $0x4,0x31(%rax)
    6972:	74 98                	je     690c <sgx_register_aex_handler+0x4c>
    6974:	48 8b 43 20          	mov    0x20(%rbx),%rax
    6978:	80 88 a7 00 00 00 01 	orb    $0x1,0xa7(%rax)
    697f:	31 c0                	xor    %eax,%eax
    6981:	eb 8b                	jmp    690e <sgx_register_aex_handler+0x4e>
    6983:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6988:	b8 02 00 00 00       	mov    $0x2,%eax
    698d:	c3                   	ret    
    698e:	66 90                	xchg   %ax,%ax

0000000000006990 <sgx_unregister_aex_handler>:
    6990:	f3 0f 1e fa          	endbr64 
    6994:	41 54                	push   %r12
    6996:	55                   	push   %rbp
    6997:	53                   	push   %rbx
    6998:	48 85 ff             	test   %rdi,%rdi
    699b:	0f 84 e7 00 00 00    	je     6a88 <sgx_unregister_aex_handler+0xf8>
    69a1:	48 89 fd             	mov    %rdi,%rbp
    69a4:	e8 37 11 00 00       	call   7ae0 <get_ssa_aexnotify>
    69a9:	89 c3                	mov    %eax,%ebx
    69ab:	85 c0                	test   %eax,%eax
    69ad:	75 61                	jne    6a10 <sgx_unregister_aex_handler+0x80>
    69af:	e8 8f bb 00 00       	call   12543 <get_thread_data>
    69b4:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    69ba:	48 8b 50 48          	mov    0x48(%rax),%rdx
    69be:	48 85 d2             	test   %rdx,%rdx
    69c1:	74 3d                	je     6a00 <sgx_unregister_aex_handler+0x70>
    69c3:	31 f6                	xor    %esi,%esi
    69c5:	eb 1c                	jmp    69e3 <sgx_unregister_aex_handler+0x53>
    69c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    69ce:	00 00 
    69d0:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
    69d4:	48 89 d6             	mov    %rdx,%rsi
    69d7:	48 85 c9             	test   %rcx,%rcx
    69da:	0f 84 98 00 00 00    	je     6a78 <sgx_unregister_aex_handler+0xe8>
    69e0:	48 89 ca             	mov    %rcx,%rdx
    69e3:	48 39 2a             	cmp    %rbp,(%rdx)
    69e6:	75 e8                	jne    69d0 <sgx_unregister_aex_handler+0x40>
    69e8:	48 8b 52 10          	mov    0x10(%rdx),%rdx
    69ec:	48 85 f6             	test   %rsi,%rsi
    69ef:	0f 84 ab 00 00 00    	je     6aa0 <sgx_unregister_aex_handler+0x110>
    69f5:	48 89 56 10          	mov    %rdx,0x10(%rsi)
    69f9:	45 31 e4             	xor    %r12d,%r12d
    69fc:	85 db                	test   %ebx,%ebx
    69fe:	75 48                	jne    6a48 <sgx_unregister_aex_handler+0xb8>
    6a00:	44 89 e0             	mov    %r12d,%eax
    6a03:	5b                   	pop    %rbx
    6a04:	5d                   	pop    %rbp
    6a05:	41 5c                	pop    %r12
    6a07:	c3                   	ret    
    6a08:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    6a0f:	00 
    6a10:	e8 2e bb 00 00       	call   12543 <get_thread_data>
    6a15:	49 89 c4             	mov    %rax,%r12
    6a18:	48 85 c0             	test   %rax,%rax
    6a1b:	74 17                	je     6a34 <sgx_unregister_aex_handler+0xa4>
    6a1d:	e8 ae ad 00 00       	call   117d0 <sgx_self_report>
    6a22:	f6 40 31 04          	testb  $0x4,0x31(%rax)
    6a26:	74 0c                	je     6a34 <sgx_unregister_aex_handler+0xa4>
    6a28:	49 8b 44 24 20       	mov    0x20(%r12),%rax
    6a2d:	80 a0 a7 00 00 00 fe 	andb   $0xfe,0xa7(%rax)
    6a34:	e8 0a bb 00 00       	call   12543 <get_thread_data>
    6a39:	48 8b 50 48          	mov    0x48(%rax),%rdx
    6a3d:	48 85 d2             	test   %rdx,%rdx
    6a40:	75 81                	jne    69c3 <sgx_unregister_aex_handler+0x33>
    6a42:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    6a48:	e8 f6 ba 00 00       	call   12543 <get_thread_data>
    6a4d:	48 89 c3             	mov    %rax,%rbx
    6a50:	48 85 c0             	test   %rax,%rax
    6a53:	74 ab                	je     6a00 <sgx_unregister_aex_handler+0x70>
    6a55:	e8 76 ad 00 00       	call   117d0 <sgx_self_report>
    6a5a:	f6 40 31 04          	testb  $0x4,0x31(%rax)
    6a5e:	74 a0                	je     6a00 <sgx_unregister_aex_handler+0x70>
    6a60:	48 8b 43 20          	mov    0x20(%rbx),%rax
    6a64:	80 88 a7 00 00 00 01 	orb    $0x1,0xa7(%rax)
    6a6b:	44 89 e0             	mov    %r12d,%eax
    6a6e:	5b                   	pop    %rbx
    6a6f:	5d                   	pop    %rbp
    6a70:	41 5c                	pop    %r12
    6a72:	c3                   	ret    
    6a73:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6a78:	41 bc 02 00 00 00    	mov    $0x2,%r12d
    6a7e:	e9 79 ff ff ff       	jmp    69fc <sgx_unregister_aex_handler+0x6c>
    6a83:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6a88:	41 bc 02 00 00 00    	mov    $0x2,%r12d
    6a8e:	5b                   	pop    %rbx
    6a8f:	5d                   	pop    %rbp
    6a90:	44 89 e0             	mov    %r12d,%eax
    6a93:	41 5c                	pop    %r12
    6a95:	c3                   	ret    
    6a96:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6a9d:	00 00 00 
    6aa0:	48 89 50 48          	mov    %rdx,0x48(%rax)
    6aa4:	e9 50 ff ff ff       	jmp    69f9 <sgx_unregister_aex_handler+0x69>
    6aa9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000006ab0 <sgx_apply_mitigations>:
    6ab0:	f3 0f 1e fa          	endbr64 
    6ab4:	55                   	push   %rbp
    6ab5:	48 89 fd             	mov    %rdi,%rbp
    6ab8:	53                   	push   %rbx
    6ab9:	48 83 ec 08          	sub    $0x8,%rsp
    6abd:	e8 81 ba 00 00       	call   12543 <get_thread_data>
    6ac2:	48 8b 58 48          	mov    0x48(%rax),%rbx
    6ac6:	48 85 db             	test   %rbx,%rbx
    6ac9:	74 17                	je     6ae2 <sgx_apply_mitigations+0x32>
    6acb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6ad0:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    6ad4:	48 89 ef             	mov    %rbp,%rdi
    6ad7:	ff 13                	call   *(%rbx)
    6ad9:	48 8b 5b 10          	mov    0x10(%rbx),%rbx
    6add:	48 85 db             	test   %rbx,%rbx
    6ae0:	75 ee                	jne    6ad0 <sgx_apply_mitigations+0x20>
    6ae2:	48 83 c4 08          	add    $0x8,%rsp
    6ae6:	31 c0                	xor    %eax,%eax
    6ae8:	5b                   	pop    %rbx
    6ae9:	5d                   	pop    %rbp
    6aea:	c3                   	ret    
    6aeb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000006af0 <_pthread_thread_run>:
    6af0:	f3 0f 1e fa          	endbr64 
    6af4:	31 c0                	xor    %eax,%eax
    6af6:	c3                   	ret    
    6af7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    6afe:	00 00 

0000000000006b00 <_ZL11do_save_tcsPv>:
    6b00:	55                   	push   %rbp
    6b01:	53                   	push   %rbx
    6b02:	48 89 fb             	mov    %rdi,%rbx
    6b05:	48 83 ec 18          	sub    $0x18,%rsp
    6b09:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    6b10:	00 00 
    6b12:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    6b17:	31 c0                	xor    %eax,%eax
    6b19:	48 83 3d c7 37 01 00 	cmpq   $0x0,0x137c7(%rip)        # 1a2e8 <_ZL12g_tcs_cookie>
    6b20:	00 
    6b21:	74 4d                	je     6b70 <_ZL11do_save_tcsPv+0x70>
    6b23:	bf 10 00 00 00       	mov    $0x10,%edi
    6b28:	e8 63 69 00 00       	call   d490 <dlmalloc>
    6b2d:	48 85 c0             	test   %rax,%rax
    6b30:	74 68                	je     6b9a <_ZL11do_save_tcsPv+0x9a>
    6b32:	48 8b 15 b7 37 01 00 	mov    0x137b7(%rip),%rdx        # 1a2f0 <_ZL10g_tcs_node>
    6b39:	48 33 1d a8 37 01 00 	xor    0x137a8(%rip),%rbx        # 1a2e8 <_ZL12g_tcs_cookie>
    6b40:	48 89 05 a9 37 01 00 	mov    %rax,0x137a9(%rip)        # 1a2f0 <_ZL10g_tcs_node>
    6b47:	48 89 18             	mov    %rbx,(%rax)
    6b4a:	48 89 50 08          	mov    %rdx,0x8(%rax)
    6b4e:	31 c0                	xor    %eax,%eax
    6b50:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    6b55:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    6b5c:	00 00 
    6b5e:	75 62                	jne    6bc2 <_ZL11do_save_tcsPv+0xc2>
    6b60:	48 83 c4 18          	add    $0x18,%rsp
    6b64:	5b                   	pop    %rbx
    6b65:	5d                   	pop    %rbp
    6b66:	c3                   	ret    
    6b67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    6b6e:	00 00 
    6b70:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    6b77:	00 
    6b78:	48 89 e5             	mov    %rsp,%rbp
    6b7b:	eb 0c                	jmp    6b89 <_ZL11do_save_tcsPv+0x89>
    6b7d:	0f 1f 00             	nopl   (%rax)
    6b80:	48 8b 04 24          	mov    (%rsp),%rax
    6b84:	48 85 c0             	test   %rax,%rax
    6b87:	75 1f                	jne    6ba8 <_ZL11do_save_tcsPv+0xa8>
    6b89:	be 08 00 00 00       	mov    $0x8,%esi
    6b8e:	48 89 ef             	mov    %rbp,%rdi
    6b91:	e8 2a f5 ff ff       	call   60c0 <sgx_read_rand>
    6b96:	85 c0                	test   %eax,%eax
    6b98:	74 e6                	je     6b80 <_ZL11do_save_tcsPv+0x80>
    6b9a:	b8 01 00 00 00       	mov    $0x1,%eax
    6b9f:	eb af                	jmp    6b50 <_ZL11do_save_tcsPv+0x50>
    6ba1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6ba8:	48 83 3d 38 37 01 00 	cmpq   $0x0,0x13738(%rip)        # 1a2e8 <_ZL12g_tcs_cookie>
    6baf:	00 
    6bb0:	0f 85 6d ff ff ff    	jne    6b23 <_ZL11do_save_tcsPv+0x23>
    6bb6:	48 89 05 2b 37 01 00 	mov    %rax,0x1372b(%rip)        # 1a2e8 <_ZL12g_tcs_cookie>
    6bbd:	e9 61 ff ff ff       	jmp    6b23 <_ZL11do_save_tcsPv+0x23>
    6bc2:	e8 39 a2 00 00       	call   10e00 <__stack_chk_fail>
    6bc7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    6bce:	00 00 

0000000000006bd0 <_ZL18add_static_threadsPVK9_layout_tS1_m>:
    6bd0:	48 39 f7             	cmp    %rsi,%rdi
    6bd3:	0f 83 cf 00 00 00    	jae    6ca8 <_ZL18add_static_threadsPVK9_layout_tS1_m+0xd8>
    6bd9:	41 56                	push   %r14
    6bdb:	41 55                	push   %r13
    6bdd:	49 89 f5             	mov    %rsi,%r13
    6be0:	41 54                	push   %r12
    6be2:	49 89 d4             	mov    %rdx,%r12
    6be5:	55                   	push   %rbp
    6be6:	53                   	push   %rbx
    6be7:	48 89 fb             	mov    %rdi,%rbx
    6bea:	eb 0d                	jmp    6bf9 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x29>
    6bec:	0f 1f 40 00          	nopl   0x0(%rax)
    6bf0:	48 83 c3 20          	add    $0x20,%rbx
    6bf4:	4c 39 eb             	cmp    %r13,%rbx
    6bf7:	73 77                	jae    6c70 <_ZL18add_static_threadsPVK9_layout_tS1_m+0xa0>
    6bf9:	0f b7 03             	movzwl (%rbx),%eax
    6bfc:	f6 c4 10             	test   $0x10,%ah
    6bff:	75 13                	jne    6c14 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x44>
    6c01:	48 8b 43 18          	mov    0x18(%rbx),%rax
    6c05:	f6 c4 01             	test   $0x1,%ah
    6c08:	74 0a                	je     6c14 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x44>
    6c0a:	0f b7 43 02          	movzwl 0x2(%rbx),%eax
    6c0e:	66 83 f8 03          	cmp    $0x3,%ax
    6c12:	74 6c                	je     6c80 <_ZL18add_static_threadsPVK9_layout_tS1_m+0xb0>
    6c14:	0f b7 03             	movzwl (%rbx),%eax
    6c17:	f6 c4 10             	test   $0x10,%ah
    6c1a:	74 d4                	je     6bf0 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x20>
    6c1c:	8b 43 04             	mov    0x4(%rbx),%eax
    6c1f:	85 c0                	test   %eax,%eax
    6c21:	74 cd                	je     6bf0 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x20>
    6c23:	31 ed                	xor    %ebp,%ebp
    6c25:	45 31 f6             	xor    %r14d,%r14d
    6c28:	eb 10                	jmp    6c3a <_ZL18add_static_threadsPVK9_layout_tS1_m+0x6a>
    6c2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6c30:	8b 43 04             	mov    0x4(%rbx),%eax
    6c33:	83 c5 01             	add    $0x1,%ebp
    6c36:	39 c5                	cmp    %eax,%ebp
    6c38:	73 b6                	jae    6bf0 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x20>
    6c3a:	48 8b 43 08          	mov    0x8(%rbx),%rax
    6c3e:	0f b7 7b 02          	movzwl 0x2(%rbx),%edi
    6c42:	48 89 de             	mov    %rbx,%rsi
    6c45:	f7 df                	neg    %edi
    6c47:	49 01 c6             	add    %rax,%r14
    6c4a:	48 63 ff             	movslq %edi,%rdi
    6c4d:	4c 89 f2             	mov    %r14,%rdx
    6c50:	48 c1 e7 05          	shl    $0x5,%rdi
    6c54:	48 01 df             	add    %rbx,%rdi
    6c57:	e8 74 ff ff ff       	call   6bd0 <_ZL18add_static_threadsPVK9_layout_tS1_m>
    6c5c:	85 c0                	test   %eax,%eax
    6c5e:	74 d0                	je     6c30 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x60>
    6c60:	5b                   	pop    %rbx
    6c61:	5d                   	pop    %rbp
    6c62:	41 5c                	pop    %r12
    6c64:	41 5d                	pop    %r13
    6c66:	41 5e                	pop    %r14
    6c68:	c3                   	ret    
    6c69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6c70:	5b                   	pop    %rbx
    6c71:	31 c0                	xor    %eax,%eax
    6c73:	5d                   	pop    %rbp
    6c74:	41 5c                	pop    %r12
    6c76:	41 5d                	pop    %r13
    6c78:	41 5e                	pop    %r14
    6c7a:	c3                   	ret    
    6c7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6c80:	48 8b 6b 08          	mov    0x8(%rbx),%rbp
    6c84:	e8 6f b8 00 00       	call   124f8 <get_enclave_base>
    6c89:	4c 01 e5             	add    %r12,%rbp
    6c8c:	48 8d 3c 28          	lea    (%rax,%rbp,1),%rdi
    6c90:	e8 6b fe ff ff       	call   6b00 <_ZL11do_save_tcsPv>
    6c95:	85 c0                	test   %eax,%eax
    6c97:	0f 84 53 ff ff ff    	je     6bf0 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x20>
    6c9d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    6ca2:	eb bc                	jmp    6c60 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x90>
    6ca4:	0f 1f 40 00          	nopl   0x0(%rax)
    6ca8:	31 c0                	xor    %eax,%eax
    6caa:	c3                   	ret    
    6cab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000006cb0 <_ZL10trts_ecalljPv>:
    6cb0:	f3 0f 1e fa          	endbr64 
    6cb4:	41 55                	push   %r13
    6cb6:	41 54                	push   %r12
    6cb8:	55                   	push   %rbp
    6cb9:	48 89 f5             	mov    %rsi,%rbp
    6cbc:	53                   	push   %rbx
    6cbd:	89 fb                	mov    %edi,%ebx
    6cbf:	48 83 ec 08          	sub    $0x8,%rsp
    6cc3:	0f b6 05 56 15 01 00 	movzbl 0x11556(%rip),%eax        # 18220 <_ZL16g_is_first_ecall>
    6cca:	84 c0                	test   %al,%al
    6ccc:	0f 85 b6 00 00 00    	jne    6d88 <_ZL10trts_ecalljPv+0xd8>
    6cd2:	83 fb fa             	cmp    $0xfffffffa,%ebx
    6cd5:	0f 84 8d 00 00 00    	je     6d68 <_ZL10trts_ecalljPv+0xb8>
    6cdb:	4c 8d 25 be 10 01 00 	lea    0x110be(%rip),%r12        # 17da0 <g_ecall_table>
    6ce2:	49 3b 1c 24          	cmp    (%r12),%rbx
    6ce6:	73 68                	jae    6d50 <_ZL10trts_ecalljPv+0xa0>
    6ce8:	e8 56 b8 00 00       	call   12543 <get_thread_data>
    6ced:	0f ae e8             	lfence 
    6cf0:	48 8b 50 08          	mov    0x8(%rax),%rdx
    6cf4:	48 3b 50 10          	cmp    0x10(%rax),%rdx
    6cf8:	0f 84 b2 00 00 00    	je     6db0 <_ZL10trts_ecalljPv+0x100>
    6cfe:	48 81 7a 20 44 49 43 	cmpq   $0x4f434944,0x20(%rdx)
    6d05:	4f 
    6d06:	0f 85 5b 01 00 00    	jne    6e67 <_ZL10trts_ecalljPv+0x1b7>
    6d0c:	48 8d 05 ed c4 00 00 	lea    0xc4ed(%rip),%rax        # 13200 <g_dyn_entry_table>
    6d13:	48 8b 52 28          	mov    0x28(%rdx),%rdx
    6d17:	48 3b 10             	cmp    (%rax),%rdx
    6d1a:	73 34                	jae    6d50 <_ZL10trts_ecalljPv+0xa0>
    6d1c:	49 0f af 14 24       	imul   (%r12),%rdx
    6d21:	48 01 d8             	add    %rbx,%rax
    6d24:	80 7c 02 08 00       	cmpb   $0x0,0x8(%rdx,%rax,1)
    6d29:	74 6c                	je     6d97 <_ZL10trts_ecalljPv+0xe7>
    6d2b:	48 c1 e3 04          	shl    $0x4,%rbx
    6d2f:	31 f6                	xor    %esi,%esi
    6d31:	49 8b 5c 1c 08       	mov    0x8(%r12,%rbx,1),%rbx
    6d36:	48 89 df             	mov    %rbx,%rdi
    6d39:	e8 82 f1 ff ff       	call   5ec0 <sgx_is_within_enclave>
    6d3e:	85 c0                	test   %eax,%eax
    6d40:	0f 84 8a 00 00 00    	je     6dd0 <_ZL10trts_ecalljPv+0x120>
    6d46:	48 89 d8             	mov    %rbx,%rax
    6d49:	eb 24                	jmp    6d6f <_ZL10trts_ecalljPv+0xbf>
    6d4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6d50:	41 bc 01 10 00 00    	mov    $0x1001,%r12d
    6d56:	48 83 c4 08          	add    $0x8,%rsp
    6d5a:	44 89 e0             	mov    %r12d,%eax
    6d5d:	5b                   	pop    %rbx
    6d5e:	5d                   	pop    %rbp
    6d5f:	41 5c                	pop    %r12
    6d61:	41 5d                	pop    %r13
    6d63:	c3                   	ret    
    6d64:	0f 1f 40 00          	nopl   0x0(%rax)
    6d68:	48 8d 05 81 fd ff ff 	lea    -0x27f(%rip),%rax        # 6af0 <_pthread_thread_run>
    6d6f:	0f ae e8             	lfence 
    6d72:	48 83 c4 08          	add    $0x8,%rsp
    6d76:	48 89 ef             	mov    %rbp,%rdi
    6d79:	5b                   	pop    %rbx
    6d7a:	5d                   	pop    %rbp
    6d7b:	41 5c                	pop    %r12
    6d7d:	41 5d                	pop    %r13
    6d7f:	ff e0                	jmp    *%rax
    6d81:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6d88:	e8 b6 b7 00 00       	call   12543 <get_thread_data>
    6d8d:	48 8b 48 10          	mov    0x10(%rax),%rcx
    6d91:	48 39 48 08          	cmp    %rcx,0x8(%rax)
    6d95:	74 49                	je     6de0 <_ZL10trts_ecalljPv+0x130>
    6d97:	48 83 c4 08          	add    $0x8,%rsp
    6d9b:	41 bc 07 10 00 00    	mov    $0x1007,%r12d
    6da1:	5b                   	pop    %rbx
    6da2:	44 89 e0             	mov    %r12d,%eax
    6da5:	5d                   	pop    %rbp
    6da6:	41 5c                	pop    %r12
    6da8:	41 5d                	pop    %r13
    6daa:	c3                   	ret    
    6dab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6db0:	48 89 d8             	mov    %rbx,%rax
    6db3:	48 c1 e0 04          	shl    $0x4,%rax
    6db7:	41 80 7c 04 10 00    	cmpb   $0x0,0x10(%r12,%rax,1)
    6dbd:	0f 84 68 ff ff ff    	je     6d2b <_ZL10trts_ecalljPv+0x7b>
    6dc3:	eb d2                	jmp    6d97 <_ZL10trts_ecalljPv+0xe7>
    6dc5:	4c 89 ef             	mov    %r13,%rdi
    6dc8:	e8 93 5d 00 00       	call   cb60 <sgx_spin_unlock>
    6dcd:	0f 1f 00             	nopl   (%rax)
    6dd0:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    6dd6:	e9 7b ff ff ff       	jmp    6d56 <_ZL10trts_ecalljPv+0xa6>
    6ddb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6de0:	4c 8d 2d fd 34 01 00 	lea    0x134fd(%rip),%r13        # 1a2e4 <_ZL10g_ife_lock>
    6de7:	4c 89 ef             	mov    %r13,%rdi
    6dea:	e8 e1 5c 00 00       	call   cad0 <sgx_spin_lock>
    6def:	0f b6 05 2a 14 01 00 	movzbl 0x1142a(%rip),%eax        # 18220 <_ZL16g_is_first_ecall>
    6df6:	84 c0                	test   %al,%al
    6df8:	74 53                	je     6e4d <_ZL10trts_ecalljPv+0x19d>
    6dfa:	48 8d 05 2b 10 01 00 	lea    0x1102b(%rip),%rax        # 17e2c <EDMM_supported>
    6e01:	8b 00                	mov    (%rax),%eax
    6e03:	85 c0                	test   %eax,%eax
    6e05:	74 3a                	je     6e41 <_ZL10trts_ecalljPv+0x191>
    6e07:	48 8d 05 72 c5 00 00 	lea    0xc572(%rip),%rax        # 13380 <g_global_data>
    6e0e:	31 d2                	xor    %edx,%edx
    6e10:	8b b0 58 01 00 00    	mov    0x158(%rax),%esi
    6e16:	48 8d b8 60 01 00 00 	lea    0x160(%rax),%rdi
    6e1d:	48 c1 e6 05          	shl    $0x5,%rsi
    6e21:	48 01 fe             	add    %rdi,%rsi
    6e24:	e8 a7 fd ff ff       	call   6bd0 <_ZL18add_static_threadsPVK9_layout_tS1_m>
    6e29:	85 c0                	test   %eax,%eax
    6e2b:	75 98                	jne    6dc5 <_ZL10trts_ecalljPv+0x115>
    6e2d:	e8 c6 b6 00 00       	call   124f8 <get_enclave_base>
    6e32:	48 89 c7             	mov    %rax,%rdi
    6e35:	e8 a6 1d 00 00       	call   8be0 <change_protection>
    6e3a:	41 89 c4             	mov    %eax,%r12d
    6e3d:	85 c0                	test   %eax,%eax
    6e3f:	75 19                	jne    6e5a <_ZL10trts_ecalljPv+0x1aa>
    6e41:	e8 ca 21 00 00       	call   9010 <init_global_object>
    6e46:	c6 05 d3 13 01 00 00 	movb   $0x0,0x113d3(%rip)        # 18220 <_ZL16g_is_first_ecall>
    6e4d:	4c 89 ef             	mov    %r13,%rdi
    6e50:	e8 0b 5d 00 00       	call   cb60 <sgx_spin_unlock>
    6e55:	e9 78 fe ff ff       	jmp    6cd2 <_ZL10trts_ecalljPv+0x22>
    6e5a:	4c 89 ef             	mov    %r13,%rdi
    6e5d:	e8 fe 5c 00 00       	call   cb60 <sgx_spin_unlock>
    6e62:	e9 ef fe ff ff       	jmp    6d56 <_ZL10trts_ecalljPv+0xa6>
    6e67:	e8 cb ba 00 00       	call   12937 <abort>
    6e6c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000006e70 <_Z30_random_stack_noinline_wrapperI9_status_tJjPvEJRiRS1_EET_PFS4_DpT0_EDpOT1_.constprop.0.isra.0>:
    6e70:	e9 3b fe ff ff       	jmp    6cb0 <_ZL10trts_ecalljPv>
    6e75:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6e7c:	00 00 00 
    6e7f:	90                   	nop

0000000000006e80 <_Z16_pthread_enabledv>:
    6e80:	f3 0f 1e fa          	endbr64 
    6e84:	31 c0                	xor    %eax,%eax
    6e86:	c3                   	ret    
    6e87:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    6e8e:	00 00 

0000000000006e90 <_Z24_pthread_tls_store_state9_status_t>:
    6e90:	f3 0f 1e fa          	endbr64 
    6e94:	c3                   	ret    
    6e95:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6e9c:	00 00 00 
    6e9f:	90                   	nop

0000000000006ea0 <_Z22_pthread_tls_get_statev>:
    6ea0:	f3 0f 1e fa          	endbr64 
    6ea4:	31 c0                	xor    %eax,%eax
    6ea6:	c3                   	ret    
    6ea7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    6eae:	00 00 

0000000000006eb0 <_Z26_pthread_tls_store_contextPv>:
    6eb0:	f3 0f 1e fa          	endbr64 
    6eb4:	c3                   	ret    
    6eb5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6ebc:	00 00 00 
    6ebf:	90                   	nop

0000000000006ec0 <_Z20_pthread_wakeup_joinPv>:
    6ec0:	f3 0f 1e fa          	endbr64 
    6ec4:	c3                   	ret    
    6ec5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6ecc:	00 00 00 
    6ecf:	90                   	nop

0000000000006ed0 <_Z24_pthread_tls_destructorsv>:
    6ed0:	f3 0f 1e fa          	endbr64 
    6ed4:	c3                   	ret    
    6ed5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6edc:	00 00 00 
    6edf:	90                   	nop

0000000000006ee0 <tc_set_idle>:
    6ee0:	f3 0f 1e fa          	endbr64 
    6ee4:	c3                   	ret    
    6ee5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6eec:	00 00 00 
    6eef:	90                   	nop

0000000000006ef0 <do_init_thread>:
    6ef0:	f3 0f 1e fa          	endbr64 
    6ef4:	41 57                	push   %r15
    6ef6:	66 48 0f 6e d7       	movq   %rdi,%xmm2
    6efb:	ba c0 00 00 00       	mov    $0xc0,%edx
    6f00:	41 56                	push   %r14
    6f02:	66 0f 6c d2          	punpcklqdq %xmm2,%xmm2
    6f06:	41 55                	push   %r13
    6f08:	41 54                	push   %r12
    6f0a:	41 89 f4             	mov    %esi,%r12d
    6f0d:	55                   	push   %rbp
    6f0e:	48 89 fd             	mov    %rdi,%rbp
    6f11:	53                   	push   %rbx
    6f12:	48 83 ec 38          	sub    $0x38,%rsp
    6f16:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    6f1d:	00 00 
    6f1f:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    6f24:	48 8d 05 55 c4 00 00 	lea    0xc455(%rip),%rax        # 13380 <g_global_data>
    6f2b:	0f 29 14 24          	movaps %xmm2,(%rsp)
    6f2f:	48 8b 58 50          	mov    0x50(%rax),%rbx
    6f33:	48 8d 70 50          	lea    0x50(%rax),%rsi
    6f37:	48 01 fb             	add    %rdi,%rbx
    6f3a:	48 89 df             	mov    %rbx,%rdi
    6f3d:	4c 8b 7b 28          	mov    0x28(%rbx),%r15
    6f41:	4c 8b 73 30          	mov    0x30(%rbx),%r14
    6f45:	4c 8b ab b0 00 00 00 	mov    0xb0(%rbx),%r13
    6f4c:	e8 df 9a 00 00       	call   10a30 <memcpy>
    6f51:	48 8d 85 00 fc ff ff 	lea    -0x400(%rbp),%rax
    6f58:	f3 0f 6f 1b          	movdqu (%rbx),%xmm3
    6f5c:	f3 0f 6f 6b 10       	movdqu 0x10(%rbx),%xmm5
    6f61:	66 48 0f 6e c0       	movq   %rax,%xmm0
    6f66:	48 8b 43 18          	mov    0x18(%rbx),%rax
    6f6a:	f3 0f 6f 73 68       	movdqu 0x68(%rbx),%xmm6
    6f6f:	66 48 0f 6e cd       	movq   %rbp,%xmm1
    6f74:	66 0f 6f 14 24       	movdqa (%rsp),%xmm2
    6f79:	66 48 0f 6e e5       	movq   %rbp,%xmm4
    6f7e:	66 0f 6c c8          	punpcklqdq %xmm0,%xmm1
    6f82:	48 01 6b 20          	add    %rbp,0x20(%rbx)
    6f86:	48 01 e8             	add    %rbp,%rax
    6f89:	66 0f 6c c4          	punpcklqdq %xmm4,%xmm0
    6f8d:	66 0f d4 cb          	paddq  %xmm3,%xmm1
    6f91:	48 01 6b 58          	add    %rbp,0x58(%rbx)
    6f95:	48 89 83 b0 00 00 00 	mov    %rax,0xb0(%rbx)
    6f9c:	48 8d 05 65 0e 01 00 	lea    0x10e65(%rip),%rax        # 17e08 <__intel_security_cookie>
    6fa3:	66 0f d4 c5          	paddq  %xmm5,%xmm0
    6fa7:	66 0f d4 d6          	paddq  %xmm6,%xmm2
    6fab:	4c 89 7b 28          	mov    %r15,0x28(%rbx)
    6faf:	48 8b 00             	mov    (%rax),%rax
    6fb2:	4c 89 73 30          	mov    %r14,0x30(%rbx)
    6fb6:	0f 11 53 68          	movups %xmm2,0x68(%rbx)
    6fba:	0f 11 0b             	movups %xmm1,(%rbx)
    6fbd:	0f 11 43 10          	movups %xmm0,0x10(%rbx)
    6fc1:	48 89 85 08 fc fe ff 	mov    %rax,-0x103f8(%rbp)
    6fc8:	48 8d 05 5d 0e 01 00 	lea    0x10e5d(%rip),%rax        # 17e2c <EDMM_supported>
    6fcf:	8b 00                	mov    (%rax),%eax
    6fd1:	85 c0                	test   %eax,%eax
    6fd3:	48 8d 05 3a 0e 01 00 	lea    0x10e3a(%rip),%rax        # 17e14 <g_aexnotify_supported>
    6fda:	0f 85 f0 00 00 00    	jne    70d0 <do_init_thread+0x1e0>
    6fe0:	83 38 01             	cmpl   $0x1,(%rax)
    6fe3:	0f 84 17 01 00 00    	je     7100 <do_init_thread+0x210>
    6fe9:	4d 85 ed             	test   %r13,%r13
    6fec:	0f 85 c8 00 00 00    	jne    70ba <do_init_thread+0x1ca>
    6ff2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6ff8:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
    6fff:	00 00 
    7001:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    7008:	00 00 
    700a:	e8 e9 b4 00 00       	call   124f8 <get_enclave_base>
    700f:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
    7014:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
    7019:	48 89 c7             	mov    %rax,%rdi
    701c:	e8 3f 19 00 00       	call   8960 <elf_tls_info>
    7021:	89 c2                	mov    %eax,%edx
    7023:	b8 01 00 00 00       	mov    $0x1,%eax
    7028:	85 d2                	test   %edx,%edx
    702a:	75 0a                	jne    7036 <do_init_thread+0x146>
    702c:	48 83 7c 24 18 00    	cmpq   $0x0,0x18(%rsp)
    7032:	75 2c                	jne    7060 <do_init_thread+0x170>
    7034:	31 c0                	xor    %eax,%eax
    7036:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    703b:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    7042:	00 00 
    7044:	0f 85 00 01 00 00    	jne    714a <do_init_thread+0x25a>
    704a:	48 83 c4 38          	add    $0x38,%rsp
    704e:	5b                   	pop    %rbx
    704f:	5d                   	pop    %rbp
    7050:	41 5c                	pop    %r12
    7052:	41 5d                	pop    %r13
    7054:	41 5e                	pop    %r14
    7056:	41 5f                	pop    %r15
    7058:	c3                   	ret    
    7059:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7060:	48 8b 03             	mov    (%rbx),%rax
    7063:	48 8b 7b 68          	mov    0x68(%rbx),%rdi
    7067:	31 f6                	xor    %esi,%esi
    7069:	48 8d 90 ff 0f 00 00 	lea    0xfff(%rax),%rdx
    7070:	48 29 fa             	sub    %rdi,%rdx
    7073:	48 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%rdi
    707a:	48 81 e2 00 f0 ff ff 	and    $0xfffffffffffff000,%rdx
    7081:	e8 ea 9b 00 00       	call   10c70 <memset>
    7086:	48 8b 7b 68          	mov    0x68(%rbx),%rdi
    708a:	48 8b 03             	mov    (%rbx),%rax
    708d:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
    7092:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    7097:	48 29 f8             	sub    %rdi,%rax
    709a:	48 39 d0             	cmp    %rdx,%rax
    709d:	72 95                	jb     7034 <do_init_thread+0x144>
    709f:	e8 8c 99 00 00       	call   10a30 <memcpy>
    70a4:	eb 8e                	jmp    7034 <do_init_thread+0x144>
    70a6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    70ad:	00 00 00 
    70b0:	83 f8 01             	cmp    $0x1,%eax
    70b3:	74 7b                	je     7130 <do_init_thread+0x240>
    70b5:	4d 85 ed             	test   %r13,%r13
    70b8:	74 5e                	je     7118 <do_init_thread+0x228>
    70ba:	4c 89 ab b0 00 00 00 	mov    %r13,0xb0(%rbx)
    70c1:	e9 32 ff ff ff       	jmp    6ff8 <do_init_thread+0x108>
    70c6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    70cd:	00 00 00 
    70d0:	8b 00                	mov    (%rax),%eax
    70d2:	45 84 e4             	test   %r12b,%r12b
    70d5:	74 d9                	je     70b0 <do_init_thread+0x1c0>
    70d7:	48 c7 43 30 01 00 00 	movq   $0x1,0x30(%rbx)
    70de:	00 
    70df:	83 f8 01             	cmp    $0x1,%eax
    70e2:	74 5c                	je     7140 <do_init_thread+0x250>
    70e4:	4d 85 ed             	test   %r13,%r13
    70e7:	75 d1                	jne    70ba <do_init_thread+0x1ca>
    70e9:	e8 52 f5 ff ff       	call   6640 <get_dynamic_stack_max_page>
    70ee:	89 c0                	mov    %eax,%eax
    70f0:	48 c1 e0 0c          	shl    $0xc,%rax
    70f4:	48 01 83 b0 00 00 00 	add    %rax,0xb0(%rbx)
    70fb:	e9 f8 fe ff ff       	jmp    6ff8 <do_init_thread+0x108>
    7100:	48 c7 43 50 01 00 00 	movq   $0x1,0x50(%rbx)
    7107:	00 
    7108:	4d 85 ed             	test   %r13,%r13
    710b:	75 ad                	jne    70ba <do_init_thread+0x1ca>
    710d:	e9 e6 fe ff ff       	jmp    6ff8 <do_init_thread+0x108>
    7112:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7118:	48 89 ef             	mov    %rbp,%rdi
    711b:	e8 50 f4 ff ff       	call   6570 <is_dynamic_thread>
    7120:	85 c0                	test   %eax,%eax
    7122:	75 c5                	jne    70e9 <do_init_thread+0x1f9>
    7124:	e9 cf fe ff ff       	jmp    6ff8 <do_init_thread+0x108>
    7129:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7130:	48 c7 43 50 01 00 00 	movq   $0x1,0x50(%rbx)
    7137:	00 
    7138:	e9 78 ff ff ff       	jmp    70b5 <do_init_thread+0x1c5>
    713d:	0f 1f 00             	nopl   (%rax)
    7140:	48 c7 43 50 01 00 00 	movq   $0x1,0x50(%rbx)
    7147:	00 
    7148:	eb 9a                	jmp    70e4 <do_init_thread+0x1f4>
    714a:	e8 b1 9c 00 00       	call   10e00 <__stack_chk_fail>
    714f:	90                   	nop

0000000000007150 <do_ecall>:
    7150:	f3 0f 1e fa          	endbr64 
    7154:	53                   	push   %rbx
    7155:	48 89 d3             	mov    %rdx,%rbx
    7158:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    715c:	89 7c 24 20          	mov    %edi,0x20(%rsp)
    7160:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    7165:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    716c:	00 00 
    716e:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    7173:	31 c0                	xor    %eax,%eax
    7175:	e8 8a b3 00 00       	call   12504 <get_enclave_state>
    717a:	89 c2                	mov    %eax,%edx
    717c:	b8 01 00 00 00       	mov    $0x1,%eax
    7181:	83 fa 02             	cmp    $0x2,%edx
    7184:	74 1a                	je     71a0 <do_ecall+0x50>
    7186:	48 8b 54 24 78       	mov    0x78(%rsp),%rdx
    718b:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    7192:	00 00 
    7194:	0f 85 0c 02 00 00    	jne    73a6 <do_ecall+0x256>
    719a:	48 83 ec 80          	sub    $0xffffffffffffff80,%rsp
    719e:	5b                   	pop    %rbx
    719f:	c3                   	ret    
    71a0:	e8 9e b3 00 00       	call   12543 <get_thread_data>
    71a5:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    71aa:	48 85 c0             	test   %rax,%rax
    71ad:	0f 84 31 01 00 00    	je     72e4 <do_ecall+0x194>
    71b3:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    71b8:	48 8b 48 08          	mov    0x8(%rax),%rcx
    71bc:	48 39 48 10          	cmp    %rcx,0x10(%rax)
    71c0:	0f 84 0a 01 00 00    	je     72d0 <do_ecall+0x180>
    71c6:	e8 78 b3 00 00       	call   12543 <get_thread_data>
    71cb:	48 83 78 50 01       	cmpq   $0x1,0x50(%rax)
    71d0:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    71d5:	0f 84 25 01 00 00    	je     7300 <do_ecall+0x1b0>
    71db:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    71e0:	48 8b 48 08          	mov    0x8(%rax),%rcx
    71e4:	48 39 48 10          	cmp    %rcx,0x10(%rax)
    71e8:	74 56                	je     7240 <do_ecall+0xf0>
    71ea:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    71ef:	8b 7c 24 20          	mov    0x20(%rsp),%edi
    71f3:	e8 b8 fa ff ff       	call   6cb0 <_ZL10trts_ecalljPv>
    71f8:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
    71fd:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
    7202:	48 8d 15 77 c1 00 00 	lea    0xc177(%rip),%rdx        # 13380 <g_global_data>
    7209:	48 8b 52 38          	mov    0x38(%rdx),%rdx
    720d:	48 85 d2             	test   %rdx,%rdx
    7210:	0f 84 70 ff ff ff    	je     7186 <do_ecall+0x36>
    7216:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    721b:	48 8b 59 08          	mov    0x8(%rcx),%rbx
    721f:	48 39 59 10          	cmp    %rbx,0x10(%rcx)
    7223:	0f 85 5d ff ff ff    	jne    7186 <do_ecall+0x36>
    7229:	89 44 24 2c          	mov    %eax,0x2c(%rsp)
    722d:	e8 ae fc ff ff       	call   6ee0 <tc_set_idle>
    7232:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
    7236:	e9 4b ff ff ff       	jmp    7186 <do_ecall+0x36>
    723b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7240:	31 ff                	xor    %edi,%edi
    7242:	e8 f9 ef ff ff       	call   6240 <sgx_wrpkru>
    7247:	e8 34 fc ff ff       	call   6e80 <_Z16_pthread_enabledv>
    724c:	84 c0                	test   %al,%al
    724e:	0f 84 0c 01 00 00    	je     7360 <do_ecall+0x210>
    7254:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    7259:	66 0f ef c0          	pxor   %xmm0,%xmm0
    725d:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
    7262:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
    7267:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    726c:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
    7271:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
    7276:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
    727b:	e8 b2 9e 00 00       	call   11132 <setjmp>
    7280:	f3 0f 1e fa          	endbr64 
    7284:	85 c0                	test   %eax,%eax
    7286:	0f 84 94 00 00 00    	je     7320 <do_ecall+0x1d0>
    728c:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    7291:	48 8b 41 10          	mov    0x10(%rcx),%rax
    7295:	48 89 41 08          	mov    %rax,0x8(%rcx)
    7299:	b8 09 00 00 00       	mov    $0x9,%eax
    729e:	bf 09 00 00 00       	mov    $0x9,%edi
    72a3:	89 44 24 28          	mov    %eax,0x28(%rsp)
    72a7:	e8 e4 fb ff ff       	call   6e90 <_Z24_pthread_tls_store_state9_status_t>
    72ac:	8b 44 24 28          	mov    0x28(%rsp),%eax
    72b0:	89 44 24 24          	mov    %eax,0x24(%rsp)
    72b4:	e8 17 fc ff ff       	call   6ed0 <_Z24_pthread_tls_destructorsv>
    72b9:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    72be:	e8 fd fb ff ff       	call   6ec0 <_Z20_pthread_wakeup_joinPv>
    72c3:	8b 44 24 24          	mov    0x24(%rsp),%eax
    72c7:	e9 36 ff ff ff       	jmp    7202 <do_ecall+0xb2>
    72cc:	0f 1f 40 00          	nopl   0x0(%rax)
    72d0:	48 8d 05 a9 c0 00 00 	lea    0xc0a9(%rip),%rax        # 13380 <g_global_data>
    72d7:	48 8b 40 38          	mov    0x38(%rax),%rax
    72db:	48 85 c0             	test   %rax,%rax
    72de:	0f 84 a4 00 00 00    	je     7388 <do_ecall+0x238>
    72e4:	31 f6                	xor    %esi,%esi
    72e6:	48 89 df             	mov    %rbx,%rdi
    72e9:	e8 02 fc ff ff       	call   6ef0 <do_init_thread>
    72ee:	85 c0                	test   %eax,%eax
    72f0:	0f 84 d0 fe ff ff    	je     71c6 <do_ecall+0x76>
    72f6:	e9 8b fe ff ff       	jmp    7186 <do_ecall+0x36>
    72fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7300:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    7305:	bf 01 00 00 00       	mov    $0x1,%edi
    730a:	48 c7 40 50 00 00 00 	movq   $0x0,0x50(%rax)
    7311:	00 
    7312:	e8 49 f5 ff ff       	call   6860 <sgx_set_ssa_aexnotify>
    7317:	e9 bf fe ff ff       	jmp    71db <do_ecall+0x8b>
    731c:	0f 1f 40 00          	nopl   0x0(%rax)
    7320:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
    7325:	e8 86 fb ff ff       	call   6eb0 <_Z26_pthread_tls_store_contextPv>
    732a:	0f c7 f0             	rdrand %eax
    732d:	73 fb                	jae    732a <do_ecall+0x1da>
    732f:	8b 5c 24 20          	mov    0x20(%rsp),%ebx
    7333:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    7338:	89 df                	mov    %ebx,%edi
    733a:	e8 31 fb ff ff       	call   6e70 <_Z30_random_stack_noinline_wrapperI9_status_tJjPvEJRiRS1_EET_PFS4_DpT0_EDpOT1_.constprop.0.isra.0>
    733f:	83 fb fa             	cmp    $0xfffffffa,%ebx
    7342:	0f 84 56 ff ff ff    	je     729e <do_ecall+0x14e>
    7348:	83 f8 09             	cmp    $0x9,%eax
    734b:	0f 85 5f ff ff ff    	jne    72b0 <do_ecall+0x160>
    7351:	e9 43 ff ff ff       	jmp    7299 <do_ecall+0x149>
    7356:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    735d:	00 00 00 
    7360:	0f c7 f0             	rdrand %eax
    7363:	73 fb                	jae    7360 <do_ecall+0x210>
    7365:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    736a:	8b 7c 24 20          	mov    0x20(%rsp),%edi
    736e:	e8 fd fa ff ff       	call   6e70 <_Z30_random_stack_noinline_wrapperI9_status_tJjPvEJRiRS1_EET_PFS4_DpT0_EDpOT1_.constprop.0.isra.0>
    7373:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    7378:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    737d:	e9 80 fe ff ff       	jmp    7202 <do_ecall+0xb2>
    7382:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7388:	e8 13 fb ff ff       	call   6ea0 <_Z22_pthread_tls_get_statev>
    738d:	83 7c 24 20 fa       	cmpl   $0xfffffffa,0x20(%rsp)
    7392:	0f 84 4c ff ff ff    	je     72e4 <do_ecall+0x194>
    7398:	83 f8 09             	cmp    $0x9,%eax
    739b:	0f 85 25 fe ff ff    	jne    71c6 <do_ecall+0x76>
    73a1:	e9 3e ff ff ff       	jmp    72e4 <do_ecall+0x194>
    73a6:	e8 55 9a 00 00       	call   10e00 <__stack_chk_fail>
    73ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000073b0 <do_ecall_add_thread>:
    73b0:	f3 0f 1e fa          	endbr64 
    73b4:	55                   	push   %rbp
    73b5:	53                   	push   %rbx
    73b6:	48 89 fb             	mov    %rdi,%rbx
    73b9:	48 83 ec 08          	sub    $0x8,%rsp
    73bd:	e8 5e 06 00 00       	call   7a20 <is_utility_thread>
    73c2:	48 85 db             	test   %rbx,%rbx
    73c5:	0f 84 a5 00 00 00    	je     7470 <do_ecall_add_thread+0xc0>
    73cb:	3c 01                	cmp    $0x1,%al
    73cd:	0f 85 9d 00 00 00    	jne    7470 <do_ecall_add_thread+0xc0>
    73d3:	be 08 00 00 00       	mov    $0x8,%esi
    73d8:	48 89 df             	mov    %rbx,%rdi
    73db:	e8 40 eb ff ff       	call   5f20 <sgx_is_outside_enclave>
    73e0:	85 c0                	test   %eax,%eax
    73e2:	0f 84 88 00 00 00    	je     7470 <do_ecall_add_thread+0xc0>
    73e8:	0f ae e8             	lfence 
    73eb:	48 8b 2b             	mov    (%rbx),%rbp
    73ee:	48 85 ed             	test   %rbp,%rbp
    73f1:	74 7d                	je     7470 <do_ecall_add_thread+0xc0>
    73f3:	0f ae e8             	lfence 
    73f6:	48 89 ef             	mov    %rbp,%rdi
    73f9:	e8 02 f7 ff ff       	call   6b00 <_ZL11do_save_tcsPv>
    73fe:	89 c3                	mov    %eax,%ebx
    7400:	85 c0                	test   %eax,%eax
    7402:	75 71                	jne    7475 <do_ecall_add_thread+0xc5>
    7404:	48 89 ef             	mov    %rbp,%rdi
    7407:	e8 94 f2 ff ff       	call   66a0 <do_add_thread>
    740c:	89 c3                	mov    %eax,%ebx
    740e:	85 c0                	test   %eax,%eax
    7410:	74 63                	je     7475 <do_ecall_add_thread+0xc5>
    7412:	e8 09 06 00 00       	call   7a20 <is_utility_thread>
    7417:	84 c0                	test   %al,%al
    7419:	74 5a                	je     7475 <do_ecall_add_thread+0xc5>
    741b:	48 8b 0d ce 2e 01 00 	mov    0x12ece(%rip),%rcx        # 1a2f0 <_ZL10g_tcs_node>
    7422:	48 85 c9             	test   %rcx,%rcx
    7425:	74 4e                	je     7475 <do_ecall_add_thread+0xc5>
    7427:	48 8b 35 ba 2e 01 00 	mov    0x12eba(%rip),%rsi        # 1a2e8 <_ZL12g_tcs_cookie>
    742e:	48 8b 01             	mov    (%rcx),%rax
    7431:	48 8b 79 08          	mov    0x8(%rcx),%rdi
    7435:	48 31 f0             	xor    %rsi,%rax
    7438:	48 39 c5             	cmp    %rax,%rbp
    743b:	74 41                	je     747e <do_ecall_add_thread+0xce>
    743d:	48 85 ff             	test   %rdi,%rdi
    7440:	75 11                	jne    7453 <do_ecall_add_thread+0xa3>
    7442:	eb 31                	jmp    7475 <do_ecall_add_thread+0xc5>
    7444:	0f 1f 40 00          	nopl   0x0(%rax)
    7448:	48 89 f9             	mov    %rdi,%rcx
    744b:	48 85 c0             	test   %rax,%rax
    744e:	74 25                	je     7475 <do_ecall_add_thread+0xc5>
    7450:	48 89 c7             	mov    %rax,%rdi
    7453:	48 8b 17             	mov    (%rdi),%rdx
    7456:	48 8b 47 08          	mov    0x8(%rdi),%rax
    745a:	48 31 f2             	xor    %rsi,%rdx
    745d:	48 39 d5             	cmp    %rdx,%rbp
    7460:	75 e6                	jne    7448 <do_ecall_add_thread+0x98>
    7462:	48 89 41 08          	mov    %rax,0x8(%rcx)
    7466:	e8 15 7e 00 00       	call   f280 <dlfree>
    746b:	eb 08                	jmp    7475 <do_ecall_add_thread+0xc5>
    746d:	0f 1f 00             	nopl   (%rax)
    7470:	bb 01 00 00 00       	mov    $0x1,%ebx
    7475:	48 83 c4 08          	add    $0x8,%rsp
    7479:	89 d8                	mov    %ebx,%eax
    747b:	5b                   	pop    %rbx
    747c:	5d                   	pop    %rbp
    747d:	c3                   	ret    
    747e:	48 89 3d 6b 2e 01 00 	mov    %rdi,0x12e6b(%rip)        # 1a2f0 <_ZL10g_tcs_node>
    7485:	48 89 cf             	mov    %rcx,%rdi
    7488:	e8 f3 7d 00 00       	call   f280 <dlfree>
    748d:	eb e6                	jmp    7475 <do_ecall_add_thread+0xc5>
    748f:	90                   	nop

0000000000007490 <do_uninit_enclave>:
    7490:	f3 0f 1e fa          	endbr64 
    7494:	48 8d 05 91 09 01 00 	lea    0x10991(%rip),%rax        # 17e2c <EDMM_supported>
    749b:	41 54                	push   %r12
    749d:	55                   	push   %rbp
    749e:	53                   	push   %rbx
    749f:	8b 00                	mov    (%rax),%eax
    74a1:	85 c0                	test   %eax,%eax
    74a3:	0f 84 a4 00 00 00    	je     754d <do_uninit_enclave+0xbd>
    74a9:	49 89 fc             	mov    %rdi,%r12
    74ac:	e8 6f 05 00 00       	call   7a20 <is_utility_thread>
    74b1:	84 c0                	test   %al,%al
    74b3:	0f 84 87 00 00 00    	je     7540 <do_uninit_enclave+0xb0>
    74b9:	f0 83 0d 1f 2e 01 00 	lock orl $0x1,0x12e1f(%rip)        # 1a2e0 <g_uninit_flag>
    74c0:	01 
    74c1:	48 8b 1d 28 2e 01 00 	mov    0x12e28(%rip),%rbx        # 1a2f0 <_ZL10g_tcs_node>
    74c8:	48 c7 05 1d 2e 01 00 	movq   $0x0,0x12e1d(%rip)        # 1a2f0 <_ZL10g_tcs_node>
    74cf:	00 00 00 00 
    74d3:	eb 2f                	jmp    7504 <do_uninit_enclave+0x74>
    74d5:	0f 1f 00             	nopl   (%rax)
    74d8:	48 8b 3b             	mov    (%rbx),%rdi
    74db:	48 33 3d 06 2e 01 00 	xor    0x12e06(%rip),%rdi        # 1a2e8 <_ZL12g_tcs_cookie>
    74e2:	4c 39 e7             	cmp    %r12,%rdi
    74e5:	74 0e                	je     74f5 <do_uninit_enclave+0x65>
    74e7:	be 00 10 00 00       	mov    $0x1000,%esi
    74ec:	e8 4f 48 00 00       	call   bd40 <mm_dealloc>
    74f1:	85 c0                	test   %eax,%eax
    74f3:	75 58                	jne    754d <do_uninit_enclave+0xbd>
    74f5:	48 8b 6b 08          	mov    0x8(%rbx),%rbp
    74f9:	48 89 df             	mov    %rbx,%rdi
    74fc:	e8 7f 7d 00 00       	call   f280 <dlfree>
    7501:	48 89 eb             	mov    %rbp,%rbx
    7504:	48 85 db             	test   %rbx,%rbx
    7507:	75 cf                	jne    74d8 <do_uninit_enclave+0x48>
    7509:	48 8d 1d d4 2d 01 00 	lea    0x12dd4(%rip),%rbx        # 1a2e4 <_ZL10g_ife_lock>
    7510:	48 89 df             	mov    %rbx,%rdi
    7513:	e8 b8 55 00 00       	call   cad0 <sgx_spin_lock>
    7518:	0f b6 05 01 0d 01 00 	movzbl 0x10d01(%rip),%eax        # 18220 <_ZL16g_is_first_ecall>
    751f:	84 c0                	test   %al,%al
    7521:	74 45                	je     7568 <do_uninit_enclave+0xd8>
    7523:	48 89 df             	mov    %rbx,%rdi
    7526:	e8 35 56 00 00       	call   cb60 <sgx_spin_unlock>
    752b:	bf 03 00 00 00       	mov    $0x3,%edi
    7530:	e8 e0 af 00 00       	call   12515 <set_enclave_state>
    7535:	5b                   	pop    %rbx
    7536:	31 c0                	xor    %eax,%eax
    7538:	5d                   	pop    %rbp
    7539:	41 5c                	pop    %r12
    753b:	c3                   	ret    
    753c:	0f 1f 40 00          	nopl   0x0(%rax)
    7540:	e8 8b f0 ff ff       	call   65d0 <is_dynamic_thread_exist>
    7545:	85 c0                	test   %eax,%eax
    7547:	0f 84 6c ff ff ff    	je     74b9 <do_uninit_enclave+0x29>
    754d:	bf 03 00 00 00       	mov    $0x3,%edi
    7552:	e8 be af 00 00       	call   12515 <set_enclave_state>
    7557:	5b                   	pop    %rbx
    7558:	b8 01 00 00 00       	mov    $0x1,%eax
    755d:	5d                   	pop    %rbp
    755e:	41 5c                	pop    %r12
    7560:	c3                   	ret    
    7561:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7568:	e8 43 1b 00 00       	call   90b0 <uninit_global_object>
    756d:	eb b4                	jmp    7523 <do_uninit_enclave+0x93>
    756f:	90                   	nop

0000000000007570 <sgx_ocall>:
    7570:	f3 0f 1e fa          	endbr64 
    7574:	8d 47 07             	lea    0x7(%rdi),%eax
    7577:	83 f8 05             	cmp    $0x5,%eax
    757a:	76 12                	jbe    758e <sgx_ocall+0x1e>
    757c:	85 ff                	test   %edi,%edi
    757e:	74 0e                	je     758e <sgx_ocall+0x1e>
    7580:	48 8d 15 79 bc 00 00 	lea    0xbc79(%rip),%rdx        # 13200 <g_dyn_entry_table>
    7587:	89 f8                	mov    %edi,%eax
    7589:	48 3b 02             	cmp    (%rdx),%rax
    758c:	73 0a                	jae    7598 <sgx_ocall+0x28>
    758e:	e9 4c b2 00 00       	jmp    127df <__morestack>
    7593:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7598:	b8 01 10 00 00       	mov    $0x1001,%eax
    759d:	c3                   	ret    
    759e:	66 90                	xchg   %ax,%ax

00000000000075a0 <update_ocall_lastsp>:
    75a0:	f3 0f 1e fa          	endbr64 
    75a4:	53                   	push   %rbx
    75a5:	48 89 fb             	mov    %rdi,%rbx
    75a8:	e8 96 af 00 00       	call   12543 <get_thread_data>
    75ad:	b9 01 00 00 00       	mov    $0x1,%ecx
    75b2:	48 8b 50 08          	mov    0x8(%rax),%rdx
    75b6:	48 89 53 30          	mov    %rdx,0x30(%rbx)
    75ba:	48 39 50 10          	cmp    %rdx,0x10(%rax)
    75be:	74 0b                	je     75cb <update_ocall_lastsp+0x2b>
    75c0:	48 8b b2 90 00 00 00 	mov    0x90(%rdx),%rsi
    75c7:	48 8d 4e 01          	lea    0x1(%rsi),%rcx
    75cb:	48 89 8b 90 00 00 00 	mov    %rcx,0x90(%rbx)
    75d2:	48 89 58 08          	mov    %rbx,0x8(%rax)
    75d6:	48 89 d0             	mov    %rdx,%rax
    75d9:	5b                   	pop    %rbx
    75da:	c3                   	ret    
    75db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000075e0 <do_oret>:
    75e0:	f3 0f 1e fa          	endbr64 
    75e4:	55                   	push   %rbp
    75e5:	48 89 fd             	mov    %rdi,%rbp
    75e8:	53                   	push   %rbx
    75e9:	48 83 ec 18          	sub    $0x18,%rsp
    75ed:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    75f4:	00 00 
    75f6:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    75fb:	31 c0                	xor    %eax,%eax
    75fd:	e8 41 af 00 00       	call   12543 <get_thread_data>
    7602:	48 83 78 50 01       	cmpq   $0x1,0x50(%rax)
    7607:	48 89 c3             	mov    %rax,%rbx
    760a:	74 74                	je     7680 <do_oret+0xa0>
    760c:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    7610:	48 89 e0             	mov    %rsp,%rax
    7613:	48 89 3c 24          	mov    %rdi,(%rsp)
    7617:	48 39 f8             	cmp    %rdi,%rax
    761a:	72 24                	jb     7640 <do_oret+0x60>
    761c:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    7621:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    7628:	00 00 
    762a:	75 6b                	jne    7697 <do_oret+0xb7>
    762c:	48 83 c4 18          	add    $0x18,%rsp
    7630:	b8 01 00 00 00       	mov    $0x1,%eax
    7635:	5b                   	pop    %rbx
    7636:	5d                   	pop    %rbp
    7637:	c3                   	ret    
    7638:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    763f:	00 
    7640:	48 8b 43 10          	mov    0x10(%rbx),%rax
    7644:	48 8d 90 10 ff ff ff 	lea    -0xf0(%rax),%rdx
    764b:	48 39 fa             	cmp    %rdi,%rdx
    764e:	72 cc                	jb     761c <do_oret+0x3c>
    7650:	48 81 7f 20 44 49 43 	cmpq   $0x4f434944,0x20(%rdi)
    7657:	4f 
    7658:	75 c2                	jne    761c <do_oret+0x3c>
    765a:	48 8b 57 30          	mov    0x30(%rdi),%rdx
    765e:	48 39 d7             	cmp    %rdx,%rdi
    7661:	73 b9                	jae    761c <do_oret+0x3c>
    7663:	48 39 d0             	cmp    %rdx,%rax
    7666:	72 b4                	jb     761c <do_oret+0x3c>
    7668:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    766c:	48 89 ee             	mov    %rbp,%rsi
    766f:	e8 7e b1 00 00       	call   127f2 <asm_oret>
    7674:	eb a6                	jmp    761c <do_oret+0x3c>
    7676:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    767d:	00 00 00 
    7680:	48 c7 40 50 00 00 00 	movq   $0x0,0x50(%rax)
    7687:	00 
    7688:	bf 01 00 00 00       	mov    $0x1,%edi
    768d:	e8 ce f1 ff ff       	call   6860 <sgx_set_ssa_aexnotify>
    7692:	e9 75 ff ff ff       	jmp    760c <do_oret+0x2c>
    7697:	e8 64 97 00 00       	call   10e00 <__stack_chk_fail>
    769c:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000076a0 <get_enclave_size>:
    76a0:	f3 0f 1e fa          	endbr64 
    76a4:	48 8d 05 d5 bc 00 00 	lea    0xbcd5(%rip),%rax        # 13380 <g_global_data>
    76ab:	48 8b 40 08          	mov    0x8(%rax),%rax
    76af:	c3                   	ret    

00000000000076b0 <get_enclave_end>:
    76b0:	f3 0f 1e fa          	endbr64 
    76b4:	48 83 ec 08          	sub    $0x8,%rsp
    76b8:	e8 3b ae 00 00       	call   124f8 <get_enclave_base>
    76bd:	48 8d 15 bc bc 00 00 	lea    0xbcbc(%rip),%rdx        # 13380 <g_global_data>
    76c4:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    76c8:	48 83 c4 08          	add    $0x8,%rsp
    76cc:	48 8d 44 02 ff       	lea    -0x1(%rdx,%rax,1),%rax
    76d1:	c3                   	ret    
    76d2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    76d9:	00 00 00 
    76dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000076e0 <get_heap_base>:
    76e0:	f3 0f 1e fa          	endbr64 
    76e4:	48 83 ec 08          	sub    $0x8,%rsp
    76e8:	e8 0b ae 00 00       	call   124f8 <get_enclave_base>
    76ed:	48 8d 15 8c bc 00 00 	lea    0xbc8c(%rip),%rdx        # 13380 <g_global_data>
    76f4:	48 8b 52 10          	mov    0x10(%rdx),%rdx
    76f8:	48 83 c4 08          	add    $0x8,%rsp
    76fc:	48 01 d0             	add    %rdx,%rax
    76ff:	c3                   	ret    

0000000000007700 <get_heap_size>:
    7700:	f3 0f 1e fa          	endbr64 
    7704:	48 8d 05 21 07 01 00 	lea    0x10721(%rip),%rax        # 17e2c <EDMM_supported>
    770b:	48 8d 0d 6e bc 00 00 	lea    0xbc6e(%rip),%rcx        # 13380 <g_global_data>
    7712:	8b 00                	mov    (%rax),%eax
    7714:	48 8b 79 18          	mov    0x18(%rcx),%rdi
    7718:	85 c0                	test   %eax,%eax
    771a:	74 41                	je     775d <get_heap_size+0x5d>
    771c:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    7722:	85 c0                	test   %eax,%eax
    7724:	74 37                	je     775d <get_heap_size+0x5d>
    7726:	31 d2                	xor    %edx,%edx
    7728:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    772f:	00 
    7730:	89 d0                	mov    %edx,%eax
    7732:	48 83 c0 0b          	add    $0xb,%rax
    7736:	48 c1 e0 05          	shl    $0x5,%rax
    773a:	48 01 c8             	add    %rcx,%rax
    773d:	0f b7 30             	movzwl (%rax),%esi
    7740:	66 83 fe 03          	cmp    $0x3,%si
    7744:	75 0a                	jne    7750 <get_heap_size+0x50>
    7746:	8b 40 04             	mov    0x4(%rax),%eax
    7749:	48 c1 e0 0c          	shl    $0xc,%rax
    774d:	48 01 c7             	add    %rax,%rdi
    7750:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    7756:	83 c2 01             	add    $0x1,%edx
    7759:	39 c2                	cmp    %eax,%edx
    775b:	72 d3                	jb     7730 <get_heap_size+0x30>
    775d:	48 89 f8             	mov    %rdi,%rax
    7760:	c3                   	ret    
    7761:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    7768:	00 00 00 
    776b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000007770 <get_heap_min_size>:
    7770:	f3 0f 1e fa          	endbr64 
    7774:	48 8d 0d 05 bc 00 00 	lea    0xbc05(%rip),%rcx        # 13380 <g_global_data>
    777b:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    7781:	85 c0                	test   %eax,%eax
    7783:	74 3b                	je     77c0 <get_heap_min_size+0x50>
    7785:	31 d2                	xor    %edx,%edx
    7787:	eb 14                	jmp    779d <get_heap_min_size+0x2d>
    7789:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7790:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    7796:	83 c2 01             	add    $0x1,%edx
    7799:	39 c2                	cmp    %eax,%edx
    779b:	73 23                	jae    77c0 <get_heap_min_size+0x50>
    779d:	89 d0                	mov    %edx,%eax
    779f:	48 83 c0 0b          	add    $0xb,%rax
    77a3:	48 c1 e0 05          	shl    $0x5,%rax
    77a7:	48 01 c8             	add    %rcx,%rax
    77aa:	0f b7 30             	movzwl (%rax),%esi
    77ad:	66 83 fe 01          	cmp    $0x1,%si
    77b1:	75 dd                	jne    7790 <get_heap_min_size+0x20>
    77b3:	8b 40 04             	mov    0x4(%rax),%eax
    77b6:	48 c1 e0 0c          	shl    $0xc,%rax
    77ba:	c3                   	ret    
    77bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    77c0:	31 c0                	xor    %eax,%eax
    77c2:	c3                   	ret    
    77c3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    77ca:	00 00 00 
    77cd:	0f 1f 00             	nopl   (%rax)

00000000000077d0 <get_rsrv_base>:
    77d0:	f3 0f 1e fa          	endbr64 
    77d4:	48 83 ec 08          	sub    $0x8,%rsp
    77d8:	e8 1b ad 00 00       	call   124f8 <get_enclave_base>
    77dd:	48 8d 15 9c bb 00 00 	lea    0xbb9c(%rip),%rdx        # 13380 <g_global_data>
    77e4:	48 8b 52 20          	mov    0x20(%rdx),%rdx
    77e8:	48 83 c4 08          	add    $0x8,%rsp
    77ec:	48 01 d0             	add    %rdx,%rax
    77ef:	c3                   	ret    

00000000000077f0 <get_rsrv_end>:
    77f0:	f3 0f 1e fa          	endbr64 
    77f4:	48 83 ec 08          	sub    $0x8,%rsp
    77f8:	e8 fb ac 00 00       	call   124f8 <get_enclave_base>
    77fd:	48 8d 35 7c bb 00 00 	lea    0xbb7c(%rip),%rsi        # 13380 <g_global_data>
    7804:	48 8d 15 21 06 01 00 	lea    0x10621(%rip),%rdx        # 17e2c <EDMM_supported>
    780b:	4c 8b 4e 20          	mov    0x20(%rsi),%r9
    780f:	8b 12                	mov    (%rdx),%edx
    7811:	4c 8b 46 28          	mov    0x28(%rsi),%r8
    7815:	49 83 e9 01          	sub    $0x1,%r9
    7819:	85 d2                	test   %edx,%edx
    781b:	74 40                	je     785d <get_rsrv_end+0x6d>
    781d:	8b 96 58 01 00 00    	mov    0x158(%rsi),%edx
    7823:	85 d2                	test   %edx,%edx
    7825:	74 36                	je     785d <get_rsrv_end+0x6d>
    7827:	31 c9                	xor    %ecx,%ecx
    7829:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7830:	89 ca                	mov    %ecx,%edx
    7832:	48 83 c2 0b          	add    $0xb,%rdx
    7836:	48 c1 e2 05          	shl    $0x5,%rdx
    783a:	48 01 f2             	add    %rsi,%rdx
    783d:	0f b7 3a             	movzwl (%rdx),%edi
    7840:	66 83 ff 16          	cmp    $0x16,%di
    7844:	75 0a                	jne    7850 <get_rsrv_end+0x60>
    7846:	8b 52 04             	mov    0x4(%rdx),%edx
    7849:	48 c1 e2 0c          	shl    $0xc,%rdx
    784d:	49 01 d0             	add    %rdx,%r8
    7850:	8b 96 58 01 00 00    	mov    0x158(%rsi),%edx
    7856:	83 c1 01             	add    $0x1,%ecx
    7859:	39 d1                	cmp    %edx,%ecx
    785b:	72 d3                	jb     7830 <get_rsrv_end+0x40>
    785d:	4c 01 c8             	add    %r9,%rax
    7860:	48 83 c4 08          	add    $0x8,%rsp
    7864:	4c 01 c0             	add    %r8,%rax
    7867:	c3                   	ret    
    7868:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    786f:	00 

0000000000007870 <get_rsrv_size>:
    7870:	f3 0f 1e fa          	endbr64 
    7874:	48 8d 05 b1 05 01 00 	lea    0x105b1(%rip),%rax        # 17e2c <EDMM_supported>
    787b:	48 8d 0d fe ba 00 00 	lea    0xbafe(%rip),%rcx        # 13380 <g_global_data>
    7882:	8b 00                	mov    (%rax),%eax
    7884:	48 8b 79 28          	mov    0x28(%rcx),%rdi
    7888:	85 c0                	test   %eax,%eax
    788a:	74 41                	je     78cd <get_rsrv_size+0x5d>
    788c:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    7892:	85 c0                	test   %eax,%eax
    7894:	74 37                	je     78cd <get_rsrv_size+0x5d>
    7896:	31 d2                	xor    %edx,%edx
    7898:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    789f:	00 
    78a0:	89 d0                	mov    %edx,%eax
    78a2:	48 83 c0 0b          	add    $0xb,%rax
    78a6:	48 c1 e0 05          	shl    $0x5,%rax
    78aa:	48 01 c8             	add    %rcx,%rax
    78ad:	0f b7 30             	movzwl (%rax),%esi
    78b0:	66 83 fe 16          	cmp    $0x16,%si
    78b4:	75 0a                	jne    78c0 <get_rsrv_size+0x50>
    78b6:	8b 40 04             	mov    0x4(%rax),%eax
    78b9:	48 c1 e0 0c          	shl    $0xc,%rax
    78bd:	48 01 c7             	add    %rax,%rdi
    78c0:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    78c6:	83 c2 01             	add    $0x1,%edx
    78c9:	39 c2                	cmp    %eax,%edx
    78cb:	72 d3                	jb     78a0 <get_rsrv_size+0x30>
    78cd:	48 89 f8             	mov    %rdi,%rax
    78d0:	c3                   	ret    
    78d1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    78d8:	00 00 00 
    78db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000078e0 <get_rsrv_min_size>:
    78e0:	f3 0f 1e fa          	endbr64 
    78e4:	48 8d 0d 95 ba 00 00 	lea    0xba95(%rip),%rcx        # 13380 <g_global_data>
    78eb:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    78f1:	85 c0                	test   %eax,%eax
    78f3:	74 3b                	je     7930 <get_rsrv_min_size+0x50>
    78f5:	31 d2                	xor    %edx,%edx
    78f7:	eb 14                	jmp    790d <get_rsrv_min_size+0x2d>
    78f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7900:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    7906:	83 c2 01             	add    $0x1,%edx
    7909:	39 c2                	cmp    %eax,%edx
    790b:	73 23                	jae    7930 <get_rsrv_min_size+0x50>
    790d:	89 d0                	mov    %edx,%eax
    790f:	48 83 c0 0b          	add    $0xb,%rax
    7913:	48 c1 e0 05          	shl    $0x5,%rax
    7917:	48 01 c8             	add    %rcx,%rax
    791a:	0f b7 30             	movzwl (%rax),%esi
    791d:	66 83 fe 14          	cmp    $0x14,%si
    7921:	75 dd                	jne    7900 <get_rsrv_min_size+0x20>
    7923:	8b 40 04             	mov    0x4(%rax),%eax
    7926:	48 c1 e0 0c          	shl    $0xc,%rax
    792a:	c3                   	ret    
    792b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7930:	31 c0                	xor    %eax,%eax
    7932:	c3                   	ret    
    7933:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    793a:	00 00 00 
    793d:	0f 1f 00             	nopl   (%rax)

0000000000007940 <get_errno_addr>:
    7940:	f3 0f 1e fa          	endbr64 
    7944:	48 83 ec 08          	sub    $0x8,%rsp
    7948:	e8 f6 ab 00 00       	call   12543 <get_thread_data>
    794d:	48 83 c4 08          	add    $0x8,%rsp
    7951:	48 83 c0 40          	add    $0x40,%rax
    7955:	c3                   	ret    
    7956:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    795d:	00 00 00 

0000000000007960 <feature_supported>:
    7960:	f3 0f 1e fa          	endbr64 
    7964:	48 85 ff             	test   %rdi,%rdi
    7967:	74 37                	je     79a0 <feature_supported+0x40>
    7969:	31 d2                	xor    %edx,%edx
    796b:	eb 08                	jmp    7975 <feature_supported+0x15>
    796d:	0f 1f 00             	nopl   (%rax)
    7970:	48 85 c0             	test   %rax,%rax
    7973:	78 2b                	js     79a0 <feature_supported+0x40>
    7975:	89 d0                	mov    %edx,%eax
    7977:	83 c2 01             	add    $0x1,%edx
    797a:	41 89 d1             	mov    %edx,%r9d
    797d:	49 89 c0             	mov    %rax,%r8
    7980:	48 8b 04 c7          	mov    (%rdi,%rax,8),%rax
    7984:	41 c1 e1 06          	shl    $0x6,%r9d
    7988:	44 39 ce             	cmp    %r9d,%esi
    798b:	73 e3                	jae    7970 <feature_supported+0x10>
    798d:	41 c1 e0 06          	shl    $0x6,%r8d
    7991:	44 29 c6             	sub    %r8d,%esi
    7994:	89 f1                	mov    %esi,%ecx
    7996:	48 d3 e8             	shr    %cl,%rax
    7999:	83 e0 01             	and    $0x1,%eax
    799c:	c3                   	ret    
    799d:	0f 1f 00             	nopl   (%rax)
    79a0:	31 c0                	xor    %eax,%eax
    79a2:	c3                   	ret    
    79a3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    79aa:	00 00 00 
    79ad:	0f 1f 00             	nopl   (%rax)

00000000000079b0 <is_stack_addr>:
    79b0:	f3 0f 1e fa          	endbr64 
    79b4:	55                   	push   %rbp
    79b5:	48 89 f5             	mov    %rsi,%rbp
    79b8:	53                   	push   %rbx
    79b9:	48 89 fb             	mov    %rdi,%rbx
    79bc:	48 83 ec 08          	sub    $0x8,%rsp
    79c0:	e8 7e ab 00 00       	call   12543 <get_thread_data>
    79c5:	31 c9                	xor    %ecx,%ecx
    79c7:	48 01 dd             	add    %rbx,%rbp
    79ca:	48 89 c2             	mov    %rax,%rdx
    79cd:	0f 92 c1             	setb   %cl
    79d0:	48 39 68 10          	cmp    %rbp,0x10(%rax)
    79d4:	0f 93 c0             	setae  %al
    79d7:	48 3b 5a 18          	cmp    0x18(%rdx),%rbx
    79db:	0f 93 c2             	setae  %dl
    79de:	21 d0                	and    %edx,%eax
    79e0:	48 85 c9             	test   %rcx,%rcx
    79e3:	0f 94 c2             	sete   %dl
    79e6:	48 83 c4 08          	add    $0x8,%rsp
    79ea:	21 d0                	and    %edx,%eax
    79ec:	5b                   	pop    %rbx
    79ed:	5d                   	pop    %rbp
    79ee:	c3                   	ret    
    79ef:	90                   	nop

00000000000079f0 <is_valid_sp>:
    79f0:	f3 0f 1e fa          	endbr64 
    79f4:	40 f6 c7 07          	test   $0x7,%dil
    79f8:	74 06                	je     7a00 <is_valid_sp+0x10>
    79fa:	31 c0                	xor    %eax,%eax
    79fc:	c3                   	ret    
    79fd:	0f 1f 00             	nopl   (%rax)
    7a00:	53                   	push   %rbx
    7a01:	48 89 fb             	mov    %rdi,%rbx
    7a04:	e8 3a ab 00 00       	call   12543 <get_thread_data>
    7a09:	48 89 c2             	mov    %rax,%rdx
    7a0c:	48 3b 58 18          	cmp    0x18(%rax),%rbx
    7a10:	0f 93 c0             	setae  %al
    7a13:	48 39 5a 10          	cmp    %rbx,0x10(%rdx)
    7a17:	5b                   	pop    %rbx
    7a18:	0f 93 c2             	setae  %dl
    7a1b:	21 d0                	and    %edx,%eax
    7a1d:	c3                   	ret    
    7a1e:	66 90                	xchg   %ax,%ax

0000000000007a20 <is_utility_thread>:
    7a20:	f3 0f 1e fa          	endbr64 
    7a24:	48 83 ec 08          	sub    $0x8,%rsp
    7a28:	e8 16 ab 00 00       	call   12543 <get_thread_data>
    7a2d:	31 d2                	xor    %edx,%edx
    7a2f:	48 85 c0             	test   %rax,%rax
    7a32:	74 07                	je     7a3b <is_utility_thread+0x1b>
    7a34:	48 8b 50 30          	mov    0x30(%rax),%rdx
    7a38:	83 e2 01             	and    $0x1,%edx
    7a3b:	89 d0                	mov    %edx,%eax
    7a3d:	48 83 c4 08          	add    $0x8,%rsp
    7a41:	c3                   	ret    
    7a42:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    7a49:	00 00 00 
    7a4c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000007a50 <get_max_tcs_num>:
    7a50:	f3 0f 1e fa          	endbr64 
    7a54:	48 8d 05 d1 03 01 00 	lea    0x103d1(%rip),%rax        # 17e2c <EDMM_supported>
    7a5b:	83 38 01             	cmpl   $0x1,(%rax)
    7a5e:	48 8d 05 1b b9 00 00 	lea    0xb91b(%rip),%rax        # 13380 <g_global_data>
    7a65:	74 09                	je     7a70 <get_max_tcs_num+0x20>
    7a67:	48 8b 40 48          	mov    0x48(%rax),%rax
    7a6b:	c3                   	ret    
    7a6c:	0f 1f 40 00          	nopl   0x0(%rax)
    7a70:	48 8b 40 40          	mov    0x40(%rax),%rax
    7a74:	c3                   	ret    
    7a75:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    7a7c:	00 00 00 
    7a7f:	90                   	nop

0000000000007a80 <is_pkru_enabled>:
    7a80:	f3 0f 1e fa          	endbr64 
    7a84:	48 83 ec 08          	sub    $0x8,%rsp
    7a88:	e8 23 0a 00 00       	call   84b0 <get_xfeature_state>
    7a8d:	48 83 c4 08          	add    $0x8,%rsp
    7a91:	48 c1 e8 09          	shr    $0x9,%rax
    7a95:	83 e0 01             	and    $0x1,%eax
    7a98:	c3                   	ret    
    7a99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000007aa0 <is_tcs_binding_mode>:
    7aa0:	f3 0f 1e fa          	endbr64 
    7aa4:	48 8d 05 d5 b8 00 00 	lea    0xb8d5(%rip),%rax        # 13380 <g_global_data>
    7aab:	48 8b 40 38          	mov    0x38(%rax),%rax
    7aaf:	48 85 c0             	test   %rax,%rax
    7ab2:	0f 94 c0             	sete   %al
    7ab5:	c3                   	ret    
    7ab6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    7abd:	00 00 00 

0000000000007ac0 <get_xsave_size>:
    7ac0:	f3 0f 1e fa          	endbr64 
    7ac4:	48 8d 05 b5 b8 00 00 	lea    0xb8b5(%rip),%rax        # 13380 <g_global_data>
    7acb:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
    7ad2:	c3                   	ret    
    7ad3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    7ada:	00 00 00 
    7add:	0f 1f 00             	nopl   (%rax)

0000000000007ae0 <get_ssa_aexnotify>:
    7ae0:	f3 0f 1e fa          	endbr64 
    7ae4:	48 83 ec 08          	sub    $0x8,%rsp
    7ae8:	e8 56 aa 00 00       	call   12543 <get_thread_data>
    7aed:	48 85 c0             	test   %rax,%rax
    7af0:	74 16                	je     7b08 <get_ssa_aexnotify+0x28>
    7af2:	48 8b 40 20          	mov    0x20(%rax),%rax
    7af6:	0f b6 80 a7 00 00 00 	movzbl 0xa7(%rax),%eax
    7afd:	48 83 c4 08          	add    $0x8,%rsp
    7b01:	83 e0 01             	and    $0x1,%eax
    7b04:	c3                   	ret    
    7b05:	0f 1f 00             	nopl   (%rax)
    7b08:	31 c0                	xor    %eax,%eax
    7b0a:	48 83 c4 08          	add    $0x8,%rsp
    7b0e:	c3                   	ret    
    7b0f:	90                   	nop

0000000000007b10 <internal_handle_exception>:
    7b10:	f3 0f 1e fa          	endbr64 
    7b14:	55                   	push   %rbp
    7b15:	48 89 e5             	mov    %rsp,%rbp
    7b18:	41 57                	push   %r15
    7b1a:	41 56                	push   %r14
    7b1c:	41 55                	push   %r13
    7b1e:	41 54                	push   %r12
    7b20:	53                   	push   %rbx
    7b21:	48 89 fb             	mov    %rdi,%rbx
    7b24:	48 83 ec 38          	sub    $0x38,%rsp
    7b28:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    7b2f:	00 00 
    7b31:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    7b35:	31 c0                	xor    %eax,%eax
    7b37:	e8 07 aa 00 00       	call   12543 <get_thread_data>
    7b3c:	4c 8b 60 20          	mov    0x20(%rax),%r12
    7b40:	49 89 c5             	mov    %rax,%r13
    7b43:	e8 78 ff ff ff       	call   7ac0 <get_xsave_size>
    7b48:	48 85 db             	test   %rbx,%rbx
    7b4b:	0f 84 4f 01 00 00    	je     7ca0 <internal_handle_exception+0x190>
    7b51:	49 8d b4 24 ff 0f 00 	lea    0xfff(%r12),%rsi
    7b58:	00 
    7b59:	48 05 b7 10 00 00    	add    $0x10b7,%rax
    7b5f:	48 8b 93 b0 00 00 00 	mov    0xb0(%rbx),%rdx
    7b66:	4c 8d b3 c0 00 00 00 	lea    0xc0(%rbx),%r14
    7b6d:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    7b73:	48 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%rsi
    7b7a:	4c 89 f7             	mov    %r14,%rdi
    7b7d:	48 29 c6             	sub    %rax,%rsi
    7b80:	e8 ab 8e 00 00       	call   10a30 <memcpy>
    7b85:	8b 83 a8 00 00 00    	mov    0xa8(%rbx),%eax
    7b8b:	85 c0                	test   %eax,%eax
    7b8d:	0f 84 2e 01 00 00    	je     7cc1 <internal_handle_exception+0x1b1>
    7b93:	49 8b 45 78          	mov    0x78(%r13),%rax
    7b97:	48 85 c0             	test   %rax,%rax
    7b9a:	0f 88 00 01 00 00    	js     7ca0 <internal_handle_exception+0x190>
    7ba0:	48 8d 50 01          	lea    0x1(%rax),%rdx
    7ba4:	83 bb 90 00 00 00 0e 	cmpl   $0xe,0x90(%rbx)
    7bab:	49 89 55 78          	mov    %rdx,0x78(%r13)
    7baf:	75 27                	jne    7bd8 <internal_handle_exception+0xc8>
    7bb1:	48 8b 15 40 27 01 00 	mov    0x12740(%rip),%rdx        # 1a2f8 <g_mm_pfhandler>
    7bb8:	48 85 d2             	test   %rdx,%rdx
    7bbb:	74 1b                	je     7bd8 <internal_handle_exception+0xc8>
    7bbd:	49 89 45 78          	mov    %rax,0x78(%r13)
    7bc1:	48 8d bb 98 00 00 00 	lea    0x98(%rbx),%rdi
    7bc8:	ff d2                	call   *%rdx
    7bca:	83 c0 01             	add    $0x1,%eax
    7bcd:	0f 84 ee 00 00 00    	je     7cc1 <internal_handle_exception+0x1b1>
    7bd3:	49 83 45 78 01       	addq   $0x1,0x78(%r13)
    7bd8:	48 8d 3d 29 27 01 00 	lea    0x12729(%rip),%rdi        # 1a308 <_ZL14g_handler_lock>
    7bdf:	e8 ec 4e 00 00       	call   cad0 <sgx_spin_lock>
    7be4:	48 8b 05 25 27 01 00 	mov    0x12725(%rip),%rax        # 1a310 <_ZL12g_first_node>
    7beb:	48 85 c0             	test   %rax,%rax
    7bee:	0f 84 b9 00 00 00    	je     7cad <internal_handle_exception+0x19d>
    7bf4:	45 31 ff             	xor    %r15d,%r15d
    7bf7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    7bfe:	00 00 
    7c00:	48 8b 40 08          	mov    0x8(%rax),%rax
    7c04:	49 83 c7 08          	add    $0x8,%r15
    7c08:	48 85 c0             	test   %rax,%rax
    7c0b:	75 f3                	jne    7c00 <internal_handle_exception+0xf0>
    7c0d:	4d 85 ff             	test   %r15,%r15
    7c10:	0f 84 97 00 00 00    	je     7cad <internal_handle_exception+0x19d>
    7c16:	4c 89 ff             	mov    %r15,%rdi
    7c19:	e8 02 4d 00 00       	call   c920 <alloca>
    7c1e:	49 89 c4             	mov    %rax,%r12
    7c21:	48 85 c0             	test   %rax,%rax
    7c24:	0f 84 a9 02 00 00    	je     7ed3 <internal_handle_exception+0x3c3>
    7c2a:	48 8b 05 df 26 01 00 	mov    0x126df(%rip),%rax        # 1a310 <_ZL12g_first_node>
    7c31:	4c 89 e1             	mov    %r12,%rcx
    7c34:	48 85 c0             	test   %rax,%rax
    7c37:	74 1b                	je     7c54 <internal_handle_exception+0x144>
    7c39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7c40:	48 8b 30             	mov    (%rax),%rsi
    7c43:	48 8b 40 08          	mov    0x8(%rax),%rax
    7c47:	48 83 c1 08          	add    $0x8,%rcx
    7c4b:	48 89 71 f8          	mov    %rsi,-0x8(%rcx)
    7c4f:	48 85 c0             	test   %rax,%rax
    7c52:	75 ec                	jne    7c40 <internal_handle_exception+0x130>
    7c54:	48 8d 3d ad 26 01 00 	lea    0x126ad(%rip),%rdi        # 1a308 <_ZL14g_handler_lock>
    7c5b:	4d 01 e7             	add    %r12,%r15
    7c5e:	e8 fd 4e 00 00       	call   cb60 <sgx_spin_unlock>
    7c63:	49 83 6d 78 01       	subq   $0x1,0x78(%r13)
    7c68:	eb 13                	jmp    7c7d <internal_handle_exception+0x16d>
    7c6a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7c70:	49 83 c4 08          	add    $0x8,%r12
    7c74:	4d 39 fc             	cmp    %r15,%r12
    7c77:	0f 84 e7 01 00 00    	je     7e64 <internal_handle_exception+0x354>
    7c7d:	49 8b 04 24          	mov    (%r12),%rax
    7c81:	48 89 df             	mov    %rbx,%rdi
    7c84:	48 33 05 75 26 01 00 	xor    0x12675(%rip),%rax        # 1a300 <_ZL12g_veh_cookie>
    7c8b:	ff d0                	call   *%rax
    7c8d:	83 f8 ff             	cmp    $0xffffffff,%eax
    7c90:	75 de                	jne    7c70 <internal_handle_exception+0x160>
    7c92:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    7c96:	e8 55 fd ff ff       	call   79f0 <is_valid_sp>
    7c9b:	84 c0                	test   %al,%al
    7c9d:	75 22                	jne    7cc1 <internal_handle_exception+0x1b1>
    7c9f:	90                   	nop
    7ca0:	49 c7 45 78 ff ff ff 	movq   $0xffffffffffffffff,0x78(%r13)
    7ca7:	ff 
    7ca8:	e8 8a ac 00 00       	call   12937 <abort>
    7cad:	48 8d 3d 54 26 01 00 	lea    0x12654(%rip),%rdi        # 1a308 <_ZL14g_handler_lock>
    7cb4:	e8 a7 4e 00 00       	call   cb60 <sgx_spin_unlock>
    7cb9:	49 c7 45 78 ff ff ff 	movq   $0xffffffffffffffff,0x78(%r13)
    7cc0:	ff 
    7cc1:	83 bb ac 00 00 00 01 	cmpl   $0x1,0xac(%rbx)
    7cc8:	74 12                	je     7cdc <internal_handle_exception+0x1cc>
    7cca:	4c 89 f7             	mov    %r14,%rdi
    7ccd:	e8 df a3 00 00       	call   120b1 <restore_xregs>
    7cd2:	48 89 df             	mov    %rbx,%rdi
    7cd5:	e8 70 ac 00 00       	call   1294a <continue_execution>
    7cda:	eb c4                	jmp    7ca0 <internal_handle_exception+0x190>
    7cdc:	48 89 df             	mov    %rbx,%rdi
    7cdf:	e8 cc ed ff ff       	call   6ab0 <sgx_apply_mitigations>
    7ce4:	4c 89 f7             	mov    %r14,%rdi
    7ce7:	e8 c5 a3 00 00       	call   120b1 <restore_xregs>
    7cec:	e8 52 a8 00 00       	call   12543 <get_thread_data>
    7cf1:	49 89 c6             	mov    %rax,%r14
    7cf4:	48 8b 40 10          	mov    0x10(%rax),%rax
    7cf8:	49 89 c4             	mov    %rax,%r12
    7cfb:	49 81 e4 00 f0 ff ff 	and    $0xfffffffffffff000,%r12
    7d02:	48 3d ff 0f 00 00    	cmp    $0xfff,%rax
    7d08:	77 07                	ja     7d11 <internal_handle_exception+0x201>
    7d0a:	4c 8d a0 00 f0 ff ff 	lea    -0x1000(%rax),%r12
    7d11:	48 89 d8             	mov    %rbx,%rax
    7d14:	49 8b 4e 18          	mov    0x18(%r14),%rcx
    7d18:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    7d1e:	4c 39 e0             	cmp    %r12,%rax
    7d21:	0f 84 93 01 00 00    	je     7eba <internal_handle_exception+0x3aa>
    7d27:	48 05 00 10 00 00    	add    $0x1000,%rax
    7d2d:	48 83 c8 01          	or     $0x1,%rax
    7d31:	49 89 c4             	mov    %rax,%r12
    7d34:	48 8b 83 88 00 00 00 	mov    0x88(%rbx),%rax
    7d3b:	49 89 c7             	mov    %rax,%r15
    7d3e:	48 c1 e8 0b          	shr    $0xb,%rax
    7d42:	48 89 c1             	mov    %rax,%rcx
    7d45:	49 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%r15
    7d4c:	81 e1 fe 0f 00 00    	and    $0xffe,%ecx
    7d52:	48 03 0d 8f 02 01 00 	add    0x1028f(%rip),%rcx        # 17fe8 <_GLOBAL_OFFSET_TABLE_+0x30>
    7d59:	44 0f b7 09          	movzwl (%rcx),%r9d
    7d5d:	4b 8d 14 39          	lea    (%r9,%r15,1),%rdx
    7d61:	80 3a c3             	cmpb   $0xc3,(%rdx)
    7d64:	74 3b                	je     7da1 <internal_handle_exception+0x291>
    7d66:	4d 89 f9             	mov    %r15,%r9
    7d69:	49 8d 87 00 10 00 00 	lea    0x1000(%r15),%rax
    7d70:	eb 13                	jmp    7d85 <internal_handle_exception+0x275>
    7d72:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7d78:	49 83 c1 01          	add    $0x1,%r9
    7d7c:	4c 39 c8             	cmp    %r9,%rax
    7d7f:	0f 84 5f 01 00 00    	je     7ee4 <internal_handle_exception+0x3d4>
    7d85:	41 80 39 c3          	cmpb   $0xc3,(%r9)
    7d89:	75 ed                	jne    7d78 <internal_handle_exception+0x268>
    7d8b:	4c 39 c8             	cmp    %r9,%rax
    7d8e:	0f 84 50 01 00 00    	je     7ee4 <internal_handle_exception+0x3d4>
    7d94:	44 89 c8             	mov    %r9d,%eax
    7d97:	4c 89 ca             	mov    %r9,%rdx
    7d9a:	66 25 ff 0f          	and    $0xfff,%ax
    7d9e:	66 89 01             	mov    %ax,(%rcx)
    7da1:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
    7da5:	48 89 df             	mov    %rbx,%rdi
    7da8:	48 89 55 a0          	mov    %rdx,-0x60(%rbp)
    7dac:	e8 0f ca ff ff       	call   47c0 <ct_decode>
    7db1:	4d 89 e0             	mov    %r12,%r8
    7db4:	be 01 00 00 00       	mov    $0x1,%esi
    7db9:	49 83 e0 fe          	and    $0xfffffffffffffffe,%r8
    7dbd:	4c 63 c8             	movslq %eax,%r9
    7dc0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    7dc4:	4c 89 c1             	mov    %r8,%rcx
    7dc7:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
    7dcb:	49 83 f9 01          	cmp    $0x1,%r9
    7dcf:	48 0f 44 c8          	cmove  %rax,%rcx
    7dd3:	49 83 f9 02          	cmp    $0x2,%r9
    7dd7:	48 0f 44 c8          	cmove  %rax,%rcx
    7ddb:	48 89 cf             	mov    %rcx,%rdi
    7dde:	4c 89 4d b0          	mov    %r9,-0x50(%rbp)
    7de2:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
    7de6:	e8 d5 e0 ff ff       	call   5ec0 <sgx_is_within_enclave>
    7deb:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
    7def:	4c 8b 45 a8          	mov    -0x58(%rbp),%r8
    7df3:	85 c0                	test   %eax,%eax
    7df5:	4c 8b 4d b0          	mov    -0x50(%rbp),%r9
    7df9:	48 98                	cltq   
    7dfb:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
    7dff:	4c 0f 45 c1          	cmovne %rcx,%r8
    7e03:	4c 89 f9             	mov    %r15,%rcx
    7e06:	48 83 c9 01          	or     $0x1,%rcx
    7e0a:	49 83 f9 02          	cmp    $0x2,%r9
    7e0e:	4c 0f 44 f9          	cmove  %rcx,%r15
    7e12:	4c 89 fe             	mov    %r15,%rsi
    7e15:	48 83 e6 fe          	and    $0xfffffffffffffffe,%rsi
    7e19:	48 83 f8 01          	cmp    $0x1,%rax
    7e1d:	49 0f 44 f7          	cmove  %r15,%rsi
    7e21:	41 83 ae bc 00 00 00 	subl   $0x1,0xbc(%r14)
    7e28:	01 
    7e29:	78 57                	js     7e82 <internal_handle_exception+0x372>
    7e2b:	41 8b 8e b8 00 00 00 	mov    0xb8(%r14),%ecx
    7e32:	49 89 d1             	mov    %rdx,%r9
    7e35:	48 89 df             	mov    %rbx,%rdi
    7e38:	4c 89 e2             	mov    %r12,%rdx
    7e3b:	89 c8                	mov    %ecx,%eax
    7e3d:	c1 e1 04             	shl    $0x4,%ecx
    7e40:	d1 e8                	shr    %eax
    7e42:	83 e1 10             	and    $0x10,%ecx
    7e45:	48 09 f1             	or     %rsi,%rcx
    7e48:	41 89 86 b8 00 00 00 	mov    %eax,0xb8(%r14)
    7e4f:	49 8b 76 20          	mov    0x20(%r14),%rsi
    7e53:	48 81 c6 a7 00 00 00 	add    $0xa7,%rsi
    7e5a:	e8 a1 a3 00 00       	call   12200 <constant_time_apply_sgxstep_mitigation_and_continue_execution>
    7e5f:	e9 3c fe ff ff       	jmp    7ca0 <internal_handle_exception+0x190>
    7e64:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    7e68:	e8 83 fb ff ff       	call   79f0 <is_valid_sp>
    7e6d:	84 c0                	test   %al,%al
    7e6f:	0f 84 2b fe ff ff    	je     7ca0 <internal_handle_exception+0x190>
    7e75:	49 c7 45 78 ff ff ff 	movq   $0xffffffffffffffff,0x78(%r13)
    7e7c:	ff 
    7e7d:	e9 3f fe ff ff       	jmp    7cc1 <internal_handle_exception+0x1b1>
    7e82:	49 8d be b8 00 00 00 	lea    0xb8(%r14),%rdi
    7e89:	48 89 75 a8          	mov    %rsi,-0x58(%rbp)
    7e8d:	4c 89 45 b0          	mov    %r8,-0x50(%rbp)
    7e91:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    7e95:	e8 7a aa 00 00       	call   12914 <do_rdrand>
    7e9a:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    7e9e:	4c 8b 45 b0          	mov    -0x50(%rbp),%r8
    7ea2:	85 c0                	test   %eax,%eax
    7ea4:	48 8b 75 a8          	mov    -0x58(%rbp),%rsi
    7ea8:	74 46                	je     7ef0 <internal_handle_exception+0x3e0>
    7eaa:	41 c7 86 bc 00 00 00 	movl   $0x1f,0xbc(%r14)
    7eb1:	1f 00 00 00 
    7eb5:	e9 71 ff ff ff       	jmp    7e2b <internal_handle_exception+0x31b>
    7eba:	48 81 e1 00 f0 ff ff 	and    $0xfffffffffffff000,%rcx
    7ec1:	4c 39 e1             	cmp    %r12,%rcx
    7ec4:	0f 84 6a fe ff ff    	je     7d34 <internal_handle_exception+0x224>
    7eca:	49 83 cc 01          	or     $0x1,%r12
    7ece:	e9 61 fe ff ff       	jmp    7d34 <internal_handle_exception+0x224>
    7ed3:	48 8d 3d 2e 24 01 00 	lea    0x1242e(%rip),%rdi        # 1a308 <_ZL14g_handler_lock>
    7eda:	e8 81 4c 00 00       	call   cb60 <sgx_spin_unlock>
    7edf:	e9 bc fd ff ff       	jmp    7ca0 <internal_handle_exception+0x190>
    7ee4:	48 8d 15 0c a6 00 00 	lea    0xa60c(%rip),%rdx        # 124f7 <__ct_mitigation_ret>
    7eeb:	e9 b1 fe ff ff       	jmp    7da1 <internal_handle_exception+0x291>
    7ef0:	49 c7 46 78 ff ff ff 	movq   $0xffffffffffffffff,0x78(%r14)
    7ef7:	ff 
    7ef8:	e8 3a aa 00 00       	call   12937 <abort>
    7efd:	0f 1f 00             	nopl   (%rax)

0000000000007f00 <sgx_register_exception_handler>:
    7f00:	f3 0f 1e fa          	endbr64 
    7f04:	41 55                	push   %r13
    7f06:	41 54                	push   %r12
    7f08:	41 89 fc             	mov    %edi,%r12d
    7f0b:	55                   	push   %rbp
    7f0c:	48 89 f5             	mov    %rsi,%rbp
    7f0f:	53                   	push   %rbx
    7f10:	48 83 ec 18          	sub    $0x18,%rsp
    7f14:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    7f1b:	00 00 
    7f1d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    7f22:	31 c0                	xor    %eax,%eax
    7f24:	48 83 3d d4 23 01 00 	cmpq   $0x0,0x123d4(%rip)        # 1a300 <_ZL12g_veh_cookie>
    7f2b:	00 
    7f2c:	0f 84 ae 00 00 00    	je     7fe0 <sgx_register_exception_handler+0xe0>
    7f32:	31 f6                	xor    %esi,%esi
    7f34:	48 89 ef             	mov    %rbp,%rdi
    7f37:	e8 84 df ff ff       	call   5ec0 <sgx_is_within_enclave>
    7f3c:	85 c0                	test   %eax,%eax
    7f3e:	0f 84 cc 00 00 00    	je     8010 <sgx_register_exception_handler+0x110>
    7f44:	bf 10 00 00 00       	mov    $0x10,%edi
    7f49:	e8 42 55 00 00       	call   d490 <dlmalloc>
    7f4e:	48 89 c3             	mov    %rax,%rbx
    7f51:	48 85 c0             	test   %rax,%rax
    7f54:	0f 84 b6 00 00 00    	je     8010 <sgx_register_exception_handler+0x110>
    7f5a:	48 33 2d 9f 23 01 00 	xor    0x1239f(%rip),%rbp        # 1a300 <_ZL12g_veh_cookie>
    7f61:	4c 8d 2d a0 23 01 00 	lea    0x123a0(%rip),%r13        # 1a308 <_ZL14g_handler_lock>
    7f68:	48 89 28             	mov    %rbp,(%rax)
    7f6b:	4c 89 ef             	mov    %r13,%rdi
    7f6e:	e8 5d 4b 00 00       	call   cad0 <sgx_spin_lock>
    7f73:	48 8b 15 96 23 01 00 	mov    0x12396(%rip),%rdx        # 1a310 <_ZL12g_first_node>
    7f7a:	45 85 e4             	test   %r12d,%r12d
    7f7d:	75 29                	jne    7fa8 <sgx_register_exception_handler+0xa8>
    7f7f:	48 85 d2             	test   %rdx,%rdx
    7f82:	74 24                	je     7fa8 <sgx_register_exception_handler+0xa8>
    7f84:	0f 1f 40 00          	nopl   0x0(%rax)
    7f88:	48 89 d0             	mov    %rdx,%rax
    7f8b:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    7f8f:	48 85 d2             	test   %rdx,%rdx
    7f92:	75 f4                	jne    7f88 <sgx_register_exception_handler+0x88>
    7f94:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
    7f9b:	00 
    7f9c:	48 89 58 08          	mov    %rbx,0x8(%rax)
    7fa0:	eb 11                	jmp    7fb3 <sgx_register_exception_handler+0xb3>
    7fa2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7fa8:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    7fac:	48 89 1d 5d 23 01 00 	mov    %rbx,0x1235d(%rip)        # 1a310 <_ZL12g_first_node>
    7fb3:	4c 89 ef             	mov    %r13,%rdi
    7fb6:	e8 a5 4b 00 00       	call   cb60 <sgx_spin_unlock>
    7fbb:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    7fc0:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    7fc7:	00 00 
    7fc9:	75 7e                	jne    8049 <sgx_register_exception_handler+0x149>
    7fcb:	48 83 c4 18          	add    $0x18,%rsp
    7fcf:	48 89 d8             	mov    %rbx,%rax
    7fd2:	5b                   	pop    %rbx
    7fd3:	5d                   	pop    %rbp
    7fd4:	41 5c                	pop    %r12
    7fd6:	41 5d                	pop    %r13
    7fd8:	c3                   	ret    
    7fd9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7fe0:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    7fe7:	00 
    7fe8:	48 89 e3             	mov    %rsp,%rbx
    7feb:	eb 0a                	jmp    7ff7 <sgx_register_exception_handler+0xf7>
    7fed:	0f 1f 00             	nopl   (%rax)
    7ff0:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
    7ff5:	75 21                	jne    8018 <sgx_register_exception_handler+0x118>
    7ff7:	be 08 00 00 00       	mov    $0x8,%esi
    7ffc:	48 89 df             	mov    %rbx,%rdi
    7fff:	e8 bc e0 ff ff       	call   60c0 <sgx_read_rand>
    8004:	85 c0                	test   %eax,%eax
    8006:	74 e8                	je     7ff0 <sgx_register_exception_handler+0xf0>
    8008:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    800f:	00 
    8010:	31 db                	xor    %ebx,%ebx
    8012:	eb a7                	jmp    7fbb <sgx_register_exception_handler+0xbb>
    8014:	0f 1f 40 00          	nopl   0x0(%rax)
    8018:	4c 8d 2d e9 22 01 00 	lea    0x122e9(%rip),%r13        # 1a308 <_ZL14g_handler_lock>
    801f:	4c 89 ef             	mov    %r13,%rdi
    8022:	e8 a9 4a 00 00       	call   cad0 <sgx_spin_lock>
    8027:	48 83 3d d1 22 01 00 	cmpq   $0x0,0x122d1(%rip)        # 1a300 <_ZL12g_veh_cookie>
    802e:	00 
    802f:	75 0b                	jne    803c <sgx_register_exception_handler+0x13c>
    8031:	48 8b 04 24          	mov    (%rsp),%rax
    8035:	48 89 05 c4 22 01 00 	mov    %rax,0x122c4(%rip)        # 1a300 <_ZL12g_veh_cookie>
    803c:	4c 89 ef             	mov    %r13,%rdi
    803f:	e8 1c 4b 00 00       	call   cb60 <sgx_spin_unlock>
    8044:	e9 e9 fe ff ff       	jmp    7f32 <sgx_register_exception_handler+0x32>
    8049:	e8 b2 8d 00 00       	call   10e00 <__stack_chk_fail>
    804e:	66 90                	xchg   %ax,%ax

0000000000008050 <sgx_unregister_exception_handler>:
    8050:	f3 0f 1e fa          	endbr64 
    8054:	48 85 ff             	test   %rdi,%rdi
    8057:	0f 84 9b 00 00 00    	je     80f8 <sgx_unregister_exception_handler+0xa8>
    805d:	55                   	push   %rbp
    805e:	48 8d 2d a3 22 01 00 	lea    0x122a3(%rip),%rbp        # 1a308 <_ZL14g_handler_lock>
    8065:	53                   	push   %rbx
    8066:	48 89 fb             	mov    %rdi,%rbx
    8069:	48 89 ef             	mov    %rbp,%rdi
    806c:	48 83 ec 08          	sub    $0x8,%rsp
    8070:	e8 5b 4a 00 00       	call   cad0 <sgx_spin_lock>
    8075:	48 8b 05 94 22 01 00 	mov    0x12294(%rip),%rax        # 1a310 <_ZL12g_first_node>
    807c:	48 85 c0             	test   %rax,%rax
    807f:	74 20                	je     80a1 <sgx_unregister_exception_handler+0x51>
    8081:	48 39 d8             	cmp    %rbx,%rax
    8084:	75 0f                	jne    8095 <sgx_unregister_exception_handler+0x45>
    8086:	eb 58                	jmp    80e0 <sgx_unregister_exception_handler+0x90>
    8088:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    808f:	00 
    8090:	48 39 d8             	cmp    %rbx,%rax
    8093:	74 23                	je     80b8 <sgx_unregister_exception_handler+0x68>
    8095:	48 89 c2             	mov    %rax,%rdx
    8098:	48 8b 40 08          	mov    0x8(%rax),%rax
    809c:	48 85 c0             	test   %rax,%rax
    809f:	75 ef                	jne    8090 <sgx_unregister_exception_handler+0x40>
    80a1:	48 89 ef             	mov    %rbp,%rdi
    80a4:	e8 b7 4a 00 00       	call   cb60 <sgx_spin_unlock>
    80a9:	48 83 c4 08          	add    $0x8,%rsp
    80ad:	31 c0                	xor    %eax,%eax
    80af:	5b                   	pop    %rbx
    80b0:	5d                   	pop    %rbp
    80b1:	c3                   	ret    
    80b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    80b8:	48 8b 43 08          	mov    0x8(%rbx),%rax
    80bc:	48 89 ef             	mov    %rbp,%rdi
    80bf:	48 89 42 08          	mov    %rax,0x8(%rdx)
    80c3:	e8 98 4a 00 00       	call   cb60 <sgx_spin_unlock>
    80c8:	48 89 df             	mov    %rbx,%rdi
    80cb:	e8 b0 71 00 00       	call   f280 <dlfree>
    80d0:	48 83 c4 08          	add    $0x8,%rsp
    80d4:	b8 01 00 00 00       	mov    $0x1,%eax
    80d9:	5b                   	pop    %rbx
    80da:	5d                   	pop    %rbp
    80db:	c3                   	ret    
    80dc:	0f 1f 40 00          	nopl   0x0(%rax)
    80e0:	48 8b 43 08          	mov    0x8(%rbx),%rax
    80e4:	48 89 ef             	mov    %rbp,%rdi
    80e7:	48 89 05 22 22 01 00 	mov    %rax,0x12222(%rip)        # 1a310 <_ZL12g_first_node>
    80ee:	e8 6d 4a 00 00       	call   cb60 <sgx_spin_unlock>
    80f3:	eb d3                	jmp    80c8 <sgx_unregister_exception_handler+0x78>
    80f5:	0f 1f 00             	nopl   (%rax)
    80f8:	31 c0                	xor    %eax,%eax
    80fa:	c3                   	ret    
    80fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000008100 <trts_handle_exception>:
    8100:	f3 0f 1e fa          	endbr64 
    8104:	41 57                	push   %r15
    8106:	41 56                	push   %r14
    8108:	41 55                	push   %r13
    810a:	41 54                	push   %r12
    810c:	55                   	push   %rbp
    810d:	53                   	push   %rbx
    810e:	48 89 fb             	mov    %rdi,%rbx
    8111:	48 83 ec 08          	sub    $0x8,%rsp
    8115:	e8 29 a4 00 00       	call   12543 <get_thread_data>
    811a:	48 85 c0             	test   %rax,%rax
    811d:	48 89 c5             	mov    %rax,%rbp
    8120:	0f 94 c2             	sete   %dl
    8123:	48 85 db             	test   %rbx,%rbx
    8126:	0f 94 c0             	sete   %al
    8129:	08 c2                	or     %al,%dl
    812b:	75 33                	jne    8160 <trts_handle_exception+0x60>
    812d:	48 89 df             	mov    %rbx,%rdi
    8130:	41 89 d4             	mov    %edx,%r12d
    8133:	e8 b8 e0 ff ff       	call   61f0 <check_static_stack_canary>
    8138:	85 c0                	test   %eax,%eax
    813a:	75 24                	jne    8160 <trts_handle_exception+0x60>
    813c:	e8 c3 a3 00 00       	call   12504 <get_enclave_state>
    8141:	83 f8 02             	cmp    $0x2,%eax
    8144:	75 1a                	jne    8160 <trts_handle_exception+0x60>
    8146:	48 83 7d 78 ff       	cmpq   $0xffffffffffffffff,0x78(%rbp)
    814b:	74 13                	je     8160 <trts_handle_exception+0x60>
    814d:	48 8b 45 10          	mov    0x10(%rbp),%rax
    8151:	48 05 00 04 01 00    	add    $0x10400,%rax
    8157:	48 39 c3             	cmp    %rax,%rbx
    815a:	74 24                	je     8180 <trts_handle_exception+0x80>
    815c:	0f 1f 40 00          	nopl   0x0(%rax)
    8160:	bf 03 00 00 00       	mov    $0x3,%edi
    8165:	e8 ab a3 00 00       	call   12515 <set_enclave_state>
    816a:	b8 06 10 00 00       	mov    $0x1006,%eax
    816f:	48 83 c4 08          	add    $0x8,%rsp
    8173:	5b                   	pop    %rbx
    8174:	5d                   	pop    %rbp
    8175:	41 5c                	pop    %r12
    8177:	41 5d                	pop    %r13
    8179:	41 5e                	pop    %r14
    817b:	41 5f                	pop    %r15
    817d:	c3                   	ret    
    817e:	66 90                	xchg   %ax,%ax
    8180:	4c 8b 6d 20          	mov    0x20(%rbp),%r13
    8184:	e8 37 f9 ff ff       	call   7ac0 <get_xsave_size>
    8189:	48 05 b7 10 00 00    	add    $0x10b7,%rax
    818f:	49 81 e5 00 f0 ff ff 	and    $0xfffffffffffff000,%r13
    8196:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    819c:	49 29 c5             	sub    %rax,%r13
    819f:	4c 39 eb             	cmp    %r13,%rbx
    81a2:	75 bc                	jne    8160 <trts_handle_exception+0x60>
    81a4:	4c 8b 6d 20          	mov    0x20(%rbp),%r13
    81a8:	be 08 00 00 00       	mov    $0x8,%esi
    81ad:	4d 8b b5 90 00 00 00 	mov    0x90(%r13),%r14
    81b4:	4c 89 f7             	mov    %r14,%rdi
    81b7:	e8 64 dd ff ff       	call   5f20 <sgx_is_outside_enclave>
    81bc:	85 c0                	test   %eax,%eax
    81be:	0f 84 ec 01 00 00    	je     83b0 <trts_handle_exception+0x2b0>
    81c4:	49 8b 5d 20          	mov    0x20(%r13),%rbx
    81c8:	49 39 de             	cmp    %rbx,%r14
    81cb:	0f 84 df 01 00 00    	je     83b0 <trts_handle_exception+0x2b0>
    81d1:	31 f6                	xor    %esi,%esi
    81d3:	48 89 df             	mov    %rbx,%rdi
    81d6:	e8 d5 f7 ff ff       	call   79b0 <is_stack_addr>
    81db:	84 c0                	test   %al,%al
    81dd:	0f 84 cd 01 00 00    	je     83b0 <trts_handle_exception+0x2b0>
    81e3:	48 8b 45 38          	mov    0x38(%rbp),%rax
    81e7:	48 8d b0 b8 01 00 00 	lea    0x1b8(%rax),%rsi
    81ee:	48 29 f3             	sub    %rsi,%rbx
    81f1:	48 83 e3 c0          	and    $0xffffffffffffffc0,%rbx
    81f5:	48 89 df             	mov    %rbx,%rdi
    81f8:	e8 b3 f7 ff ff       	call   79b0 <is_stack_addr>
    81fd:	84 c0                	test   %al,%al
    81ff:	0f 84 ab 01 00 00    	je     83b0 <trts_handle_exception+0x2b0>
    8205:	4c 8d 7b f8          	lea    -0x8(%rbx),%r15
    8209:	be 08 00 00 00       	mov    $0x8,%esi
    820e:	4c 89 ff             	mov    %r15,%rdi
    8211:	e8 9a f7 ff ff       	call   79b0 <is_stack_addr>
    8216:	41 89 c6             	mov    %eax,%r14d
    8219:	84 c0                	test   %al,%al
    821b:	0f 84 8f 01 00 00    	je     83b0 <trts_handle_exception+0x2b0>
    8221:	48 8b bd b0 00 00 00 	mov    0xb0(%rbp),%rdi
    8228:	49 39 ff             	cmp    %rdi,%r15
    822b:	0f 83 93 01 00 00    	jae    83c4 <trts_handle_exception+0x2c4>
    8231:	4c 8d a7 ff 0f 00 00 	lea    0xfff(%rdi),%r12
    8238:	4d 29 fc             	sub    %r15,%r12
    823b:	49 81 e4 00 f0 ff ff 	and    $0xfffffffffffff000,%r12
    8242:	49 39 fc             	cmp    %rdi,%r12
    8245:	0f 83 65 01 00 00    	jae    83b0 <trts_handle_exception+0x2b0>
    824b:	4c 29 e7             	sub    %r12,%rdi
    824e:	48 3b 7d 18          	cmp    0x18(%rbp),%rdi
    8252:	0f 82 58 01 00 00    	jb     83b0 <trts_handle_exception+0x2b0>
    8258:	4d 85 e4             	test   %r12,%r12
    825b:	0f 84 4f 01 00 00    	je     83b0 <trts_handle_exception+0x2b0>
    8261:	4c 89 e6             	mov    %r12,%rsi
    8264:	e8 b7 3a 00 00       	call   bd20 <mm_commit>
    8269:	85 c0                	test   %eax,%eax
    826b:	0f 85 3f 01 00 00    	jne    83b0 <trts_handle_exception+0x2b0>
    8271:	48 8d 05 9c fb 00 00 	lea    0xfb9c(%rip),%rax        # 17e14 <g_aexnotify_supported>
    8278:	4c 29 a5 b0 00 00 00 	sub    %r12,0xb0(%rbp)
    827f:	45 89 f4             	mov    %r14d,%r12d
    8282:	8b 08                	mov    (%rax),%ecx
    8284:	31 c0                	xor    %eax,%eax
    8286:	89 83 a8 00 00 00    	mov    %eax,0xa8(%rbx)
    828c:	41 0f b6 85 a0 00 00 	movzbl 0xa0(%r13),%eax
    8293:	00 
    8294:	89 83 90 00 00 00    	mov    %eax,0x90(%rbx)
    829a:	41 0f b6 95 a1 00 00 	movzbl 0xa1(%r13),%edx
    82a1:	00 
    82a2:	83 e8 0d             	sub    $0xd,%eax
    82a5:	83 e2 07             	and    $0x7,%edx
    82a8:	89 93 94 00 00 00    	mov    %edx,0x94(%rbx)
    82ae:	48 8b 55 38          	mov    0x38(%rbp),%rdx
    82b2:	48 89 93 b0 00 00 00 	mov    %rdx,0xb0(%rbx)
    82b9:	49 8b 55 00          	mov    0x0(%r13),%rdx
    82bd:	48 89 13             	mov    %rdx,(%rbx)
    82c0:	49 8b 55 08          	mov    0x8(%r13),%rdx
    82c4:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    82c8:	49 8b 55 10          	mov    0x10(%r13),%rdx
    82cc:	48 89 53 10          	mov    %rdx,0x10(%rbx)
    82d0:	49 8b 55 18          	mov    0x18(%r13),%rdx
    82d4:	48 89 53 18          	mov    %rdx,0x18(%rbx)
    82d8:	49 8b 55 20          	mov    0x20(%r13),%rdx
    82dc:	48 89 53 20          	mov    %rdx,0x20(%rbx)
    82e0:	49 8b 55 28          	mov    0x28(%r13),%rdx
    82e4:	48 89 53 28          	mov    %rdx,0x28(%rbx)
    82e8:	49 8b 55 30          	mov    0x30(%r13),%rdx
    82ec:	48 89 53 30          	mov    %rdx,0x30(%rbx)
    82f0:	49 8b 55 38          	mov    0x38(%r13),%rdx
    82f4:	48 89 53 38          	mov    %rdx,0x38(%rbx)
    82f8:	49 8b 95 80 00 00 00 	mov    0x80(%r13),%rdx
    82ff:	48 89 93 80 00 00 00 	mov    %rdx,0x80(%rbx)
    8306:	49 8b 95 88 00 00 00 	mov    0x88(%r13),%rdx
    830d:	48 89 93 88 00 00 00 	mov    %rdx,0x88(%rbx)
    8314:	49 8b 75 40          	mov    0x40(%r13),%rsi
    8318:	48 89 73 40          	mov    %rsi,0x40(%rbx)
    831c:	49 8b 75 48          	mov    0x48(%r13),%rsi
    8320:	48 89 73 48          	mov    %rsi,0x48(%rbx)
    8324:	49 8b 75 50          	mov    0x50(%r13),%rsi
    8328:	48 89 73 50          	mov    %rsi,0x50(%rbx)
    832c:	49 8b 75 58          	mov    0x58(%r13),%rsi
    8330:	48 89 73 58          	mov    %rsi,0x58(%rbx)
    8334:	49 8b 75 60          	mov    0x60(%r13),%rsi
    8338:	48 89 73 60          	mov    %rsi,0x60(%rbx)
    833c:	49 8b 75 68          	mov    0x68(%r13),%rsi
    8340:	48 89 73 68          	mov    %rsi,0x68(%rbx)
    8344:	49 8b 75 70          	mov    0x70(%r13),%rsi
    8348:	48 89 73 70          	mov    %rsi,0x70(%rbx)
    834c:	49 8b 75 78          	mov    0x78(%r13),%rsi
    8350:	48 89 73 78          	mov    %rsi,0x78(%rbx)
    8354:	83 f8 01             	cmp    $0x1,%eax
    8357:	77 15                	ja     836e <trts_handle_exception+0x26e>
    8359:	49 8b 45 f0          	mov    -0x10(%r13),%rax
    835d:	48 89 83 98 00 00 00 	mov    %rax,0x98(%rbx)
    8364:	41 8b 45 f8          	mov    -0x8(%r13),%eax
    8368:	89 83 a0 00 00 00    	mov    %eax,0xa0(%rbx)
    836e:	85 c9                	test   %ecx,%ecx
    8370:	0f 85 99 00 00 00    	jne    840f <trts_handle_exception+0x30f>
    8376:	45 84 e4             	test   %r12b,%r12b
    8379:	0f 85 ec 00 00 00    	jne    846b <trts_handle_exception+0x36b>
    837f:	48 8d 05 8a f7 ff ff 	lea    -0x876(%rip),%rax        # 7b10 <internal_handle_exception>
    8386:	4d 89 7d 20          	mov    %r15,0x20(%r13)
    838a:	49 89 85 88 00 00 00 	mov    %rax,0x88(%r13)
    8391:	49 89 5d 00          	mov    %rbx,0x0(%r13)
    8395:	49 89 5d 38          	mov    %rbx,0x38(%r13)
    8399:	48 8b 83 88 00 00 00 	mov    0x88(%rbx),%rax
    83a0:	48 89 43 f8          	mov    %rax,-0x8(%rbx)
    83a4:	31 c0                	xor    %eax,%eax
    83a6:	e9 c4 fd ff ff       	jmp    816f <trts_handle_exception+0x6f>
    83ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    83b0:	bf 03 00 00 00       	mov    $0x3,%edi
    83b5:	e8 5b a1 00 00       	call   12515 <set_enclave_state>
    83ba:	b8 09 10 00 00       	mov    $0x1009,%eax
    83bf:	e9 ab fd ff ff       	jmp    816f <trts_handle_exception+0x6f>
    83c4:	48 8d 15 49 fa 00 00 	lea    0xfa49(%rip),%rdx        # 17e14 <g_aexnotify_supported>
    83cb:	49 8b 85 88 00 00 00 	mov    0x88(%r13),%rax
    83d2:	48 3b 05 07 fc 00 00 	cmp    0xfc07(%rip),%rax        # 17fe0 <_GLOBAL_OFFSET_TABLE_+0x28>
    83d9:	8b 0a                	mov    (%rdx),%ecx
    83db:	74 6a                	je     8447 <trts_handle_exception+0x347>
    83dd:	48 3b 05 f4 fb 00 00 	cmp    0xfbf4(%rip),%rax        # 17fd8 <_GLOBAL_OFFSET_TABLE_+0x20>
    83e4:	0f 84 8c 00 00 00    	je     8476 <trts_handle_exception+0x376>
    83ea:	85 c9                	test   %ecx,%ecx
    83ec:	75 0e                	jne    83fc <trts_handle_exception+0x2fc>
    83ee:	41 80 bd a3 00 00 00 	cmpb   $0x0,0xa3(%r13)
    83f5:	00 
    83f6:	0f 89 64 fd ff ff    	jns    8160 <trts_handle_exception+0x60>
    83fc:	41 0f b6 85 a3 00 00 	movzbl 0xa3(%r13),%eax
    8403:	00 
    8404:	c0 e8 07             	shr    $0x7,%al
    8407:	0f b6 c0             	movzbl %al,%eax
    840a:	e9 77 fe ff ff       	jmp    8286 <trts_handle_exception+0x186>
    840f:	48 89 53 f8          	mov    %rdx,-0x8(%rbx)
    8413:	e8 c8 f6 ff ff       	call   7ae0 <get_ssa_aexnotify>
    8418:	48 8b 7d 58          	mov    0x58(%rbp),%rdi
    841c:	89 83 ac 00 00 00    	mov    %eax,0xac(%rbx)
    8422:	e8 8a 9c 00 00       	call   120b1 <restore_xregs>
    8427:	83 bb ac 00 00 00 01 	cmpl   $0x1,0xac(%rbx)
    842e:	74 76                	je     84a6 <trts_handle_exception+0x3a6>
    8430:	48 8d 15 d9 f6 ff ff 	lea    -0x927(%rip),%rdx        # 7b10 <internal_handle_exception>
    8437:	4c 89 fe             	mov    %r15,%rsi
    843a:	48 89 df             	mov    %rbx,%rdi
    843d:	e8 6e a5 00 00       	call   129b0 <second_phase>
    8442:	e9 19 fd ff ff       	jmp    8160 <trts_handle_exception+0x60>
    8447:	49 83 7d 00 00       	cmpq   $0x0,0x0(%r13)
    844c:	75 8f                	jne    83dd <trts_handle_exception+0x2dd>
    844e:	48 83 c0 03          	add    $0x3,%rax
    8452:	49 83 8d 80 00 00 00 	orq    $0x1,0x80(%r13)
    8459:	01 
    845a:	45 89 f4             	mov    %r14d,%r12d
    845d:	49 89 85 88 00 00 00 	mov    %rax,0x88(%r13)
    8464:	31 c0                	xor    %eax,%eax
    8466:	e9 1b fe ff ff       	jmp    8286 <trts_handle_exception+0x186>
    846b:	48 89 53 f8          	mov    %rdx,-0x8(%rbx)
    846f:	31 c0                	xor    %eax,%eax
    8471:	e9 f9 fc ff ff       	jmp    816f <trts_handle_exception+0x6f>
    8476:	49 83 7d 00 08       	cmpq   $0x8,0x0(%r13)
    847b:	0f 85 69 ff ff ff    	jne    83ea <trts_handle_exception+0x2ea>
    8481:	48 83 c0 03          	add    $0x3,%rax
    8485:	49 83 8d 80 00 00 00 	orq    $0x40,0x80(%r13)
    848c:	40 
    848d:	45 89 f4             	mov    %r14d,%r12d
    8490:	49 89 85 88 00 00 00 	mov    %rax,0x88(%r13)
    8497:	31 c0                	xor    %eax,%eax
    8499:	49 c7 45 00 01 00 00 	movq   $0x1,0x0(%r13)
    84a0:	00 
    84a1:	e9 e0 fd ff ff       	jmp    8286 <trts_handle_exception+0x186>
    84a6:	31 ff                	xor    %edi,%edi
    84a8:	e8 b3 e3 ff ff       	call   6860 <sgx_set_ssa_aexnotify>
    84ad:	eb 81                	jmp    8430 <trts_handle_exception+0x330>
    84af:	90                   	nop

00000000000084b0 <get_xfeature_state>:
    84b0:	f3 0f 1e fa          	endbr64 
    84b4:	48 83 ec 08          	sub    $0x8,%rsp
    84b8:	e8 13 93 00 00       	call   117d0 <sgx_self_report>
    84bd:	31 d2                	xor    %edx,%edx
    84bf:	48 8b 40 38          	mov    0x38(%rax),%rax
    84c3:	48 83 f8 03          	cmp    $0x3,%rax
    84c7:	0f 95 c2             	setne  %dl
    84ca:	89 15 74 1c 01 00    	mov    %edx,0x11c74(%rip)        # 1a144 <g_xsave_enabled>
    84d0:	48 83 c4 08          	add    $0x8,%rsp
    84d4:	c3                   	ret    
    84d5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    84dc:	00 00 00 
    84df:	90                   	nop

00000000000084e0 <has_text_relo>:
    84e0:	85 d2                	test   %edx,%edx
    84e2:	74 5b                	je     853f <has_text_relo+0x5f>
    84e4:	89 d2                	mov    %edx,%edx
    84e6:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax
    84ed:	00 
    84ee:	48 29 d0             	sub    %rdx,%rax
    84f1:	48 8d 04 c6          	lea    (%rsi,%rax,8),%rax
    84f5:	eb 12                	jmp    8509 <has_text_relo+0x29>
    84f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    84fe:	00 00 
    8500:	48 83 c6 38          	add    $0x38,%rsi
    8504:	48 39 c6             	cmp    %rax,%rsi
    8507:	74 36                	je     853f <has_text_relo+0x5f>
    8509:	83 3e 02             	cmpl   $0x2,(%rsi)
    850c:	75 f2                	jne    8500 <has_text_relo+0x20>
    850e:	48 8b 56 20          	mov    0x20(%rsi),%rdx
    8512:	48 03 7e 18          	add    0x18(%rsi),%rdi
    8516:	48 c1 ea 04          	shr    $0x4,%rdx
    851a:	74 23                	je     853f <has_text_relo+0x5f>
    851c:	48 c1 e2 04          	shl    $0x4,%rdx
    8520:	48 01 fa             	add    %rdi,%rdx
    8523:	eb 12                	jmp    8537 <has_text_relo+0x57>
    8525:	0f 1f 00             	nopl   (%rax)
    8528:	48 83 f8 16          	cmp    $0x16,%rax
    852c:	74 1a                	je     8548 <has_text_relo+0x68>
    852e:	48 83 c7 10          	add    $0x10,%rdi
    8532:	48 39 fa             	cmp    %rdi,%rdx
    8535:	74 08                	je     853f <has_text_relo+0x5f>
    8537:	48 8b 07             	mov    (%rdi),%rax
    853a:	48 85 c0             	test   %rax,%rax
    853d:	75 e9                	jne    8528 <has_text_relo+0x48>
    853f:	31 c0                	xor    %eax,%eax
    8541:	c3                   	ret    
    8542:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8548:	b8 01 00 00 00       	mov    $0x1,%eax
    854d:	c3                   	ret    
    854e:	66 90                	xchg   %ax,%ax

0000000000008550 <do_relocs>:
    8550:	49 89 d3             	mov    %rdx,%r11
    8553:	48 8d 14 37          	lea    (%rdi,%rsi,1),%rdx
    8557:	49 01 fb             	add    %rdi,%r11
    855a:	48 85 c9             	test   %rcx,%rcx
    855d:	0f 84 c2 01 00 00    	je     8725 <do_relocs+0x1d5>
    8563:	55                   	push   %rbp
    8564:	49 89 c9             	mov    %rcx,%r9
    8567:	31 f6                	xor    %esi,%esi
    8569:	4c 8d 05 30 ad 00 00 	lea    0xad30(%rip),%r8        # 132a0 <g_dyn_entry_table+0xa0>
    8570:	53                   	push   %rbx
    8571:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8578:	4c 8b 12             	mov    (%rdx),%r10
    857b:	48 8b 42 08          	mov    0x8(%rdx),%rax
    857f:	49 01 fa             	add    %rdi,%r10
    8582:	89 c1                	mov    %eax,%ecx
    8584:	83 f8 12             	cmp    $0x12,%eax
    8587:	0f 87 85 00 00 00    	ja     8612 <do_relocs+0xc2>
    858d:	49 63 0c 88          	movslq (%r8,%rcx,4),%rcx
    8591:	4c 01 c1             	add    %r8,%rcx
    8594:	3e ff e1             	notrack jmp *%rcx
    8597:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    859e:	00 00 
    85a0:	48 c1 e8 20          	shr    $0x20,%rax
    85a4:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
    85a8:	49 8d 1c c3          	lea    (%r11,%rax,8),%rbx
    85ac:	0f b6 43 04          	movzbl 0x4(%rbx),%eax
    85b0:	c0 e8 04             	shr    $0x4,%al
    85b3:	3c 02                	cmp    $0x2,%al
    85b5:	0f 84 05 01 00 00    	je     86c0 <do_relocs+0x170>
    85bb:	48 85 db             	test   %rbx,%rbx
    85be:	0f 84 8c 00 00 00    	je     8650 <do_relocs+0x100>
    85c4:	48 85 ff             	test   %rdi,%rdi
    85c7:	74 49                	je     8612 <do_relocs+0xc2>
    85c9:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    85cf:	75 41                	jne    8612 <do_relocs+0xc2>
    85d1:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    85d6:	75 3a                	jne    8612 <do_relocs+0xc2>
    85d8:	48 89 f8             	mov    %rdi,%rax
    85db:	48 03 47 20          	add    0x20(%rdi),%rax
    85df:	74 31                	je     8612 <do_relocs+0xc2>
    85e1:	0f b7 6f 38          	movzwl 0x38(%rdi),%ebp
    85e5:	66 85 ed             	test   %bp,%bp
    85e8:	74 28                	je     8612 <do_relocs+0xc2>
    85ea:	83 ed 01             	sub    $0x1,%ebp
    85ed:	48 8d 0c ed 00 00 00 	lea    0x0(,%rbp,8),%rcx
    85f4:	00 
    85f5:	48 29 e9             	sub    %rbp,%rcx
    85f8:	48 8d 4c c8 38       	lea    0x38(%rax,%rcx,8),%rcx
    85fd:	0f 1f 00             	nopl   (%rax)
    8600:	83 38 07             	cmpl   $0x7,(%rax)
    8603:	0f 84 e7 00 00 00    	je     86f0 <do_relocs+0x1a0>
    8609:	48 83 c0 38          	add    $0x38,%rax
    860d:	48 39 c8             	cmp    %rcx,%rax
    8610:	75 ee                	jne    8600 <do_relocs+0xb0>
    8612:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8617:	5b                   	pop    %rbx
    8618:	5d                   	pop    %rbp
    8619:	c3                   	ret    
    861a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8620:	48 c1 e8 20          	shr    $0x20,%rax
    8624:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
    8628:	49 8d 0c c3          	lea    (%r11,%rax,8),%rcx
    862c:	0f b6 41 04          	movzbl 0x4(%rcx),%eax
    8630:	c0 e8 04             	shr    $0x4,%al
    8633:	3c 02                	cmp    $0x2,%al
    8635:	0f 84 95 00 00 00    	je     86d0 <do_relocs+0x180>
    863b:	48 85 c9             	test   %rcx,%rcx
    863e:	74 10                	je     8650 <do_relocs+0x100>
    8640:	48 8b 42 10          	mov    0x10(%rdx),%rax
    8644:	48 01 f8             	add    %rdi,%rax
    8647:	48 03 41 08          	add    0x8(%rcx),%rax
    864b:	49 89 02             	mov    %rax,(%r10)
    864e:	66 90                	xchg   %ax,%ax
    8650:	48 83 c6 01          	add    $0x1,%rsi
    8654:	48 83 c2 18          	add    $0x18,%rdx
    8658:	49 39 f1             	cmp    %rsi,%r9
    865b:	0f 85 17 ff ff ff    	jne    8578 <do_relocs+0x28>
    8661:	31 c0                	xor    %eax,%eax
    8663:	5b                   	pop    %rbx
    8664:	5d                   	pop    %rbp
    8665:	c3                   	ret    
    8666:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    866d:	00 00 00 
    8670:	48 c1 e8 20          	shr    $0x20,%rax
    8674:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
    8678:	49 8d 0c c3          	lea    (%r11,%rax,8),%rcx
    867c:	0f b6 41 04          	movzbl 0x4(%rcx),%eax
    8680:	c0 e8 04             	shr    $0x4,%al
    8683:	3c 02                	cmp    $0x2,%al
    8685:	74 59                	je     86e0 <do_relocs+0x190>
    8687:	48 85 c9             	test   %rcx,%rcx
    868a:	74 c4                	je     8650 <do_relocs+0x100>
    868c:	48 8b 42 10          	mov    0x10(%rdx),%rax
    8690:	48 03 41 08          	add    0x8(%rcx),%rax
    8694:	49 89 02             	mov    %rax,(%r10)
    8697:	eb b7                	jmp    8650 <do_relocs+0x100>
    8699:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    86a0:	49 c7 02 01 00 00 00 	movq   $0x1,(%r10)
    86a7:	eb a7                	jmp    8650 <do_relocs+0x100>
    86a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    86b0:	48 8b 42 10          	mov    0x10(%rdx),%rax
    86b4:	48 01 f8             	add    %rdi,%rax
    86b7:	49 89 02             	mov    %rax,(%r10)
    86ba:	eb 94                	jmp    8650 <do_relocs+0x100>
    86bc:	0f 1f 40 00          	nopl   0x0(%rax)
    86c0:	48 83 7b 08 00       	cmpq   $0x0,0x8(%rbx)
    86c5:	0f 85 f0 fe ff ff    	jne    85bb <do_relocs+0x6b>
    86cb:	eb 83                	jmp    8650 <do_relocs+0x100>
    86cd:	0f 1f 00             	nopl   (%rax)
    86d0:	48 83 79 08 00       	cmpq   $0x0,0x8(%rcx)
    86d5:	0f 85 60 ff ff ff    	jne    863b <do_relocs+0xeb>
    86db:	e9 70 ff ff ff       	jmp    8650 <do_relocs+0x100>
    86e0:	48 83 79 08 00       	cmpq   $0x0,0x8(%rcx)
    86e5:	75 a0                	jne    8687 <do_relocs+0x137>
    86e7:	e9 64 ff ff ff       	jmp    8650 <do_relocs+0x100>
    86ec:	0f 1f 40 00          	nopl   0x0(%rax)
    86f0:	48 8b 48 28          	mov    0x28(%rax),%rcx
    86f4:	48 8b 40 30          	mov    0x30(%rax),%rax
    86f8:	48 83 f8 01          	cmp    $0x1,%rax
    86fc:	76 0b                	jbe    8709 <do_relocs+0x1b9>
    86fe:	48 8d 4c 01 ff       	lea    -0x1(%rcx,%rax,1),%rcx
    8703:	48 f7 d8             	neg    %rax
    8706:	48 21 c1             	and    %rax,%rcx
    8709:	48 85 c9             	test   %rcx,%rcx
    870c:	0f 84 00 ff ff ff    	je     8612 <do_relocs+0xc2>
    8712:	48 8b 42 10          	mov    0x10(%rdx),%rax
    8716:	48 03 43 08          	add    0x8(%rbx),%rax
    871a:	48 29 c8             	sub    %rcx,%rax
    871d:	49 89 02             	mov    %rax,(%r10)
    8720:	e9 2b ff ff ff       	jmp    8650 <do_relocs+0x100>
    8725:	31 c0                	xor    %eax,%eax
    8727:	c3                   	ret    
    8728:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    872f:	00 

0000000000008730 <relocate_enclave>:
    8730:	f3 0f 1e fa          	endbr64 
    8734:	48 85 ff             	test   %rdi,%rdi
    8737:	0f 84 d3 01 00 00    	je     8910 <relocate_enclave+0x1e0>
    873d:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    8743:	0f 85 c7 01 00 00    	jne    8910 <relocate_enclave+0x1e0>
    8749:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    874e:	0f 85 bc 01 00 00    	jne    8910 <relocate_enclave+0x1e0>
    8754:	41 57                	push   %r15
    8756:	41 56                	push   %r14
    8758:	41 55                	push   %r13
    875a:	41 54                	push   %r12
    875c:	55                   	push   %rbp
    875d:	53                   	push   %rbx
    875e:	48 89 fb             	mov    %rdi,%rbx
    8761:	48 83 ec 08          	sub    $0x8,%rsp
    8765:	48 03 5f 20          	add    0x20(%rdi),%rbx
    8769:	0f 84 fd 00 00 00    	je     886c <relocate_enclave+0x13c>
    876f:	0f b7 57 38          	movzwl 0x38(%rdi),%edx
    8773:	66 85 d2             	test   %dx,%dx
    8776:	0f 84 c4 01 00 00    	je     8940 <relocate_enclave+0x210>
    877c:	83 ea 01             	sub    $0x1,%edx
    877f:	48 8d 2d 66 ab 00 00 	lea    0xab66(%rip),%rbp        # 132ec <g_dyn_entry_table+0xec>
    8786:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax
    878d:	00 
    878e:	48 29 d0             	sub    %rdx,%rax
    8791:	4c 8d 64 c3 38       	lea    0x38(%rbx,%rax,8),%r12
    8796:	eb 15                	jmp    87ad <relocate_enclave+0x7d>
    8798:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    879f:	00 
    87a0:	48 83 c3 38          	add    $0x38,%rbx
    87a4:	49 39 dc             	cmp    %rbx,%r12
    87a7:	0f 84 93 01 00 00    	je     8940 <relocate_enclave+0x210>
    87ad:	83 3b 02             	cmpl   $0x2,(%rbx)
    87b0:	75 ee                	jne    87a0 <relocate_enclave+0x70>
    87b2:	48 8b 53 18          	mov    0x18(%rbx),%rdx
    87b6:	4c 8b 53 20          	mov    0x20(%rbx),%r10
    87ba:	48 01 fa             	add    %rdi,%rdx
    87bd:	49 c1 ea 04          	shr    $0x4,%r10
    87c1:	74 dd                	je     87a0 <relocate_enclave+0x70>
    87c3:	49 c1 e2 04          	shl    $0x4,%r10
    87c7:	45 31 f6             	xor    %r14d,%r14d
    87ca:	45 31 ed             	xor    %r13d,%r13d
    87cd:	31 c0                	xor    %eax,%eax
    87cf:	49 01 d2             	add    %rdx,%r10
    87d2:	45 31 ff             	xor    %r15d,%r15d
    87d5:	45 31 c9             	xor    %r9d,%r9d
    87d8:	45 31 c0             	xor    %r8d,%r8d
    87db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    87e0:	48 8b 32             	mov    (%rdx),%rsi
    87e3:	48 85 f6             	test   %rsi,%rsi
    87e6:	74 30                	je     8818 <relocate_enclave+0xe8>
    87e8:	48 83 fe 17          	cmp    $0x17,%rsi
    87ec:	77 1a                	ja     8808 <relocate_enclave+0xd8>
    87ee:	48 63 74 b5 00       	movslq 0x0(%rbp,%rsi,4),%rsi
    87f3:	48 01 ee             	add    %rbp,%rsi
    87f6:	3e ff e6             	notrack jmp *%rsi
    87f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8800:	4c 8b 42 08          	mov    0x8(%rdx),%r8
    8804:	0f 1f 40 00          	nopl   0x0(%rax)
    8808:	48 83 c2 10          	add    $0x10,%rdx
    880c:	49 39 d2             	cmp    %rdx,%r10
    880f:	75 cf                	jne    87e0 <relocate_enclave+0xb0>
    8811:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8818:	4d 85 c9             	test   %r9,%r9
    881b:	0f 84 ff 00 00 00    	je     8920 <relocate_enclave+0x1f0>
    8821:	4d 85 ed             	test   %r13,%r13
    8824:	74 46                	je     886c <relocate_enclave+0x13c>
    8826:	31 d2                	xor    %edx,%edx
    8828:	4c 89 ce             	mov    %r9,%rsi
    882b:	4c 89 04 24          	mov    %r8,(%rsp)
    882f:	49 f7 f5             	div    %r13
    8832:	4c 89 c2             	mov    %r8,%rdx
    8835:	48 89 c1             	mov    %rax,%rcx
    8838:	e8 13 fd ff ff       	call   8550 <do_relocs>
    883d:	85 c0                	test   %eax,%eax
    883f:	75 2b                	jne    886c <relocate_enclave+0x13c>
    8841:	4d 85 ff             	test   %r15,%r15
    8844:	4c 8b 04 24          	mov    (%rsp),%r8
    8848:	0f 84 52 ff ff ff    	je     87a0 <relocate_enclave+0x70>
    884e:	31 d2                	xor    %edx,%edx
    8850:	4c 89 f0             	mov    %r14,%rax
    8853:	4c 89 fe             	mov    %r15,%rsi
    8856:	49 f7 f5             	div    %r13
    8859:	4c 89 c2             	mov    %r8,%rdx
    885c:	48 89 c1             	mov    %rax,%rcx
    885f:	e8 ec fc ff ff       	call   8550 <do_relocs>
    8864:	85 c0                	test   %eax,%eax
    8866:	0f 84 34 ff ff ff    	je     87a0 <relocate_enclave+0x70>
    886c:	48 83 c4 08          	add    $0x8,%rsp
    8870:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8875:	5b                   	pop    %rbx
    8876:	5d                   	pop    %rbp
    8877:	41 5c                	pop    %r12
    8879:	41 5d                	pop    %r13
    887b:	41 5e                	pop    %r14
    887d:	41 5f                	pop    %r15
    887f:	c3                   	ret    
    8880:	4c 8b 7a 08          	mov    0x8(%rdx),%r15
    8884:	48 83 c2 10          	add    $0x10,%rdx
    8888:	49 39 d2             	cmp    %rdx,%r10
    888b:	0f 85 4f ff ff ff    	jne    87e0 <relocate_enclave+0xb0>
    8891:	eb 85                	jmp    8818 <relocate_enclave+0xe8>
    8893:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8898:	48 8b 42 08          	mov    0x8(%rdx),%rax
    889c:	48 83 c2 10          	add    $0x10,%rdx
    88a0:	49 39 d2             	cmp    %rdx,%r10
    88a3:	0f 85 37 ff ff ff    	jne    87e0 <relocate_enclave+0xb0>
    88a9:	e9 6a ff ff ff       	jmp    8818 <relocate_enclave+0xe8>
    88ae:	66 90                	xchg   %ax,%ax
    88b0:	4c 8b 4a 08          	mov    0x8(%rdx),%r9
    88b4:	48 83 c2 10          	add    $0x10,%rdx
    88b8:	49 39 d2             	cmp    %rdx,%r10
    88bb:	0f 85 1f ff ff ff    	jne    87e0 <relocate_enclave+0xb0>
    88c1:	e9 52 ff ff ff       	jmp    8818 <relocate_enclave+0xe8>
    88c6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    88cd:	00 00 00 
    88d0:	4c 8b 72 08          	mov    0x8(%rdx),%r14
    88d4:	48 83 c2 10          	add    $0x10,%rdx
    88d8:	49 39 d2             	cmp    %rdx,%r10
    88db:	0f 85 ff fe ff ff    	jne    87e0 <relocate_enclave+0xb0>
    88e1:	e9 32 ff ff ff       	jmp    8818 <relocate_enclave+0xe8>
    88e6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    88ed:	00 00 00 
    88f0:	4c 8b 6a 08          	mov    0x8(%rdx),%r13
    88f4:	48 83 c2 10          	add    $0x10,%rdx
    88f8:	49 39 d2             	cmp    %rdx,%r10
    88fb:	0f 85 df fe ff ff    	jne    87e0 <relocate_enclave+0xb0>
    8901:	e9 12 ff ff ff       	jmp    8818 <relocate_enclave+0xe8>
    8906:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    890d:	00 00 00 
    8910:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8915:	c3                   	ret    
    8916:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    891d:	00 00 00 
    8920:	4d 85 ff             	test   %r15,%r15
    8923:	0f 84 77 fe ff ff    	je     87a0 <relocate_enclave+0x70>
    8929:	4d 85 ed             	test   %r13,%r13
    892c:	0f 84 3a ff ff ff    	je     886c <relocate_enclave+0x13c>
    8932:	e9 17 ff ff ff       	jmp    884e <relocate_enclave+0x11e>
    8937:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    893e:	00 00 
    8940:	48 83 c4 08          	add    $0x8,%rsp
    8944:	31 c0                	xor    %eax,%eax
    8946:	5b                   	pop    %rbx
    8947:	5d                   	pop    %rbp
    8948:	41 5c                	pop    %r12
    894a:	41 5d                	pop    %r13
    894c:	41 5e                	pop    %r14
    894e:	41 5f                	pop    %r15
    8950:	c3                   	ret    
    8951:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8958:	00 00 00 
    895b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000008960 <elf_tls_info>:
    8960:	f3 0f 1e fa          	endbr64 
    8964:	49 89 f0             	mov    %rsi,%r8
    8967:	48 89 f9             	mov    %rdi,%rcx
    896a:	48 89 d6             	mov    %rdx,%rsi
    896d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8972:	48 85 ff             	test   %rdi,%rdi
    8975:	74 7e                	je     89f5 <elf_tls_info+0x95>
    8977:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    897d:	75 75                	jne    89f4 <elf_tls_info+0x94>
    897f:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    8984:	75 6e                	jne    89f4 <elf_tls_info+0x94>
    8986:	48 8b 47 20          	mov    0x20(%rdi),%rax
    898a:	48 01 f8             	add    %rdi,%rax
    898d:	4d 85 c0             	test   %r8,%r8
    8990:	0f 94 c2             	sete   %dl
    8993:	48 85 f6             	test   %rsi,%rsi
    8996:	40 0f 94 c7          	sete   %dil
    899a:	40 08 fa             	or     %dil,%dl
    899d:	75 50                	jne    89ef <elf_tls_info+0x8f>
    899f:	48 85 c0             	test   %rax,%rax
    89a2:	74 4b                	je     89ef <elf_tls_info+0x8f>
    89a4:	0f b7 79 38          	movzwl 0x38(%rcx),%edi
    89a8:	49 c7 00 00 00 00 00 	movq   $0x0,(%r8)
    89af:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
    89b6:	66 85 ff             	test   %di,%di
    89b9:	74 31                	je     89ec <elf_tls_info+0x8c>
    89bb:	83 ef 01             	sub    $0x1,%edi
    89be:	48 8d 14 fd 00 00 00 	lea    0x0(,%rdi,8),%rdx
    89c5:	00 
    89c6:	48 29 fa             	sub    %rdi,%rdx
    89c9:	48 8d 54 d0 38       	lea    0x38(%rax,%rdx,8),%rdx
    89ce:	eb 09                	jmp    89d9 <elf_tls_info+0x79>
    89d0:	48 83 c0 38          	add    $0x38,%rax
    89d4:	48 39 d0             	cmp    %rdx,%rax
    89d7:	74 13                	je     89ec <elf_tls_info+0x8c>
    89d9:	83 38 07             	cmpl   $0x7,(%rax)
    89dc:	75 f2                	jne    89d0 <elf_tls_info+0x70>
    89de:	48 03 48 10          	add    0x10(%rax),%rcx
    89e2:	49 89 08             	mov    %rcx,(%r8)
    89e5:	48 8b 40 20          	mov    0x20(%rax),%rax
    89e9:	48 89 06             	mov    %rax,(%rsi)
    89ec:	31 c0                	xor    %eax,%eax
    89ee:	c3                   	ret    
    89ef:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    89f4:	c3                   	ret    
    89f5:	c3                   	ret    
    89f6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    89fd:	00 00 00 

0000000000008a00 <elf_get_init_array>:
    8a00:	f3 0f 1e fa          	endbr64 
    8a04:	49 89 f8             	mov    %rdi,%r8
    8a07:	49 89 f1             	mov    %rsi,%r9
    8a0a:	49 89 d2             	mov    %rdx,%r10
    8a0d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8a12:	48 85 ff             	test   %rdi,%rdi
    8a15:	0f 84 c8 00 00 00    	je     8ae3 <elf_get_init_array+0xe3>
    8a1b:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    8a21:	0f 85 b6 00 00 00    	jne    8add <elf_get_init_array+0xdd>
    8a27:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    8a2c:	0f 85 ab 00 00 00    	jne    8add <elf_get_init_array+0xdd>
    8a32:	48 8b 57 20          	mov    0x20(%rdi),%rdx
    8a36:	48 01 fa             	add    %rdi,%rdx
    8a39:	48 85 f6             	test   %rsi,%rsi
    8a3c:	0f 94 c0             	sete   %al
    8a3f:	4d 85 d2             	test   %r10,%r10
    8a42:	0f 94 c1             	sete   %cl
    8a45:	08 c8                	or     %cl,%al
    8a47:	0f 85 8b 00 00 00    	jne    8ad8 <elf_get_init_array+0xd8>
    8a4d:	48 85 d2             	test   %rdx,%rdx
    8a50:	0f 84 82 00 00 00    	je     8ad8 <elf_get_init_array+0xd8>
    8a56:	0f b7 4f 38          	movzwl 0x38(%rdi),%ecx
    8a5a:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
    8a61:	49 c7 02 00 00 00 00 	movq   $0x0,(%r10)
    8a68:	66 85 c9             	test   %cx,%cx
    8a6b:	74 73                	je     8ae0 <elf_get_init_array+0xe0>
    8a6d:	83 e9 01             	sub    $0x1,%ecx
    8a70:	48 8d 04 cd 00 00 00 	lea    0x0(,%rcx,8),%rax
    8a77:	00 
    8a78:	48 29 c8             	sub    %rcx,%rax
    8a7b:	48 8d 7c c2 38       	lea    0x38(%rdx,%rax,8),%rdi
    8a80:	eb 0f                	jmp    8a91 <elf_get_init_array+0x91>
    8a82:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8a88:	48 83 c2 38          	add    $0x38,%rdx
    8a8c:	48 39 fa             	cmp    %rdi,%rdx
    8a8f:	74 4f                	je     8ae0 <elf_get_init_array+0xe0>
    8a91:	83 3a 02             	cmpl   $0x2,(%rdx)
    8a94:	75 f2                	jne    8a88 <elf_get_init_array+0x88>
    8a96:	48 8b 42 18          	mov    0x18(%rdx),%rax
    8a9a:	48 8b 72 20          	mov    0x20(%rdx),%rsi
    8a9e:	4c 01 c0             	add    %r8,%rax
    8aa1:	48 c1 ee 04          	shr    $0x4,%rsi
    8aa5:	74 e1                	je     8a88 <elf_get_init_array+0x88>
    8aa7:	48 c1 e6 04          	shl    $0x4,%rsi
    8aab:	48 01 c6             	add    %rax,%rsi
    8aae:	eb 16                	jmp    8ac6 <elf_get_init_array+0xc6>
    8ab0:	48 83 f9 1b          	cmp    $0x1b,%rcx
    8ab4:	75 07                	jne    8abd <elf_get_init_array+0xbd>
    8ab6:	48 8b 48 08          	mov    0x8(%rax),%rcx
    8aba:	49 89 0a             	mov    %rcx,(%r10)
    8abd:	48 83 c0 10          	add    $0x10,%rax
    8ac1:	48 39 c6             	cmp    %rax,%rsi
    8ac4:	74 c2                	je     8a88 <elf_get_init_array+0x88>
    8ac6:	48 8b 08             	mov    (%rax),%rcx
    8ac9:	48 83 f9 19          	cmp    $0x19,%rcx
    8acd:	75 e1                	jne    8ab0 <elf_get_init_array+0xb0>
    8acf:	48 8b 48 08          	mov    0x8(%rax),%rcx
    8ad3:	49 89 09             	mov    %rcx,(%r9)
    8ad6:	eb e5                	jmp    8abd <elf_get_init_array+0xbd>
    8ad8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8add:	c3                   	ret    
    8ade:	66 90                	xchg   %ax,%ax
    8ae0:	31 c0                	xor    %eax,%eax
    8ae2:	c3                   	ret    
    8ae3:	c3                   	ret    
    8ae4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8aeb:	00 00 00 
    8aee:	66 90                	xchg   %ax,%ax

0000000000008af0 <elf_get_uninit_array>:
    8af0:	f3 0f 1e fa          	endbr64 
    8af4:	49 89 f8             	mov    %rdi,%r8
    8af7:	49 89 f1             	mov    %rsi,%r9
    8afa:	49 89 d2             	mov    %rdx,%r10
    8afd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8b02:	48 85 ff             	test   %rdi,%rdi
    8b05:	0f 84 c8 00 00 00    	je     8bd3 <elf_get_uninit_array+0xe3>
    8b0b:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    8b11:	0f 85 b6 00 00 00    	jne    8bcd <elf_get_uninit_array+0xdd>
    8b17:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    8b1c:	0f 85 ab 00 00 00    	jne    8bcd <elf_get_uninit_array+0xdd>
    8b22:	48 8b 57 20          	mov    0x20(%rdi),%rdx
    8b26:	48 01 fa             	add    %rdi,%rdx
    8b29:	48 85 f6             	test   %rsi,%rsi
    8b2c:	0f 94 c0             	sete   %al
    8b2f:	4d 85 d2             	test   %r10,%r10
    8b32:	0f 94 c1             	sete   %cl
    8b35:	08 c8                	or     %cl,%al
    8b37:	0f 85 8b 00 00 00    	jne    8bc8 <elf_get_uninit_array+0xd8>
    8b3d:	48 85 d2             	test   %rdx,%rdx
    8b40:	0f 84 82 00 00 00    	je     8bc8 <elf_get_uninit_array+0xd8>
    8b46:	0f b7 4f 38          	movzwl 0x38(%rdi),%ecx
    8b4a:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
    8b51:	49 c7 02 00 00 00 00 	movq   $0x0,(%r10)
    8b58:	66 85 c9             	test   %cx,%cx
    8b5b:	74 73                	je     8bd0 <elf_get_uninit_array+0xe0>
    8b5d:	83 e9 01             	sub    $0x1,%ecx
    8b60:	48 8d 04 cd 00 00 00 	lea    0x0(,%rcx,8),%rax
    8b67:	00 
    8b68:	48 29 c8             	sub    %rcx,%rax
    8b6b:	48 8d 7c c2 38       	lea    0x38(%rdx,%rax,8),%rdi
    8b70:	eb 0f                	jmp    8b81 <elf_get_uninit_array+0x91>
    8b72:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8b78:	48 83 c2 38          	add    $0x38,%rdx
    8b7c:	48 39 fa             	cmp    %rdi,%rdx
    8b7f:	74 4f                	je     8bd0 <elf_get_uninit_array+0xe0>
    8b81:	83 3a 02             	cmpl   $0x2,(%rdx)
    8b84:	75 f2                	jne    8b78 <elf_get_uninit_array+0x88>
    8b86:	48 8b 42 18          	mov    0x18(%rdx),%rax
    8b8a:	48 8b 72 20          	mov    0x20(%rdx),%rsi
    8b8e:	4c 01 c0             	add    %r8,%rax
    8b91:	48 c1 ee 04          	shr    $0x4,%rsi
    8b95:	74 e1                	je     8b78 <elf_get_uninit_array+0x88>
    8b97:	48 c1 e6 04          	shl    $0x4,%rsi
    8b9b:	48 01 c6             	add    %rax,%rsi
    8b9e:	eb 16                	jmp    8bb6 <elf_get_uninit_array+0xc6>
    8ba0:	48 83 f9 1c          	cmp    $0x1c,%rcx
    8ba4:	75 07                	jne    8bad <elf_get_uninit_array+0xbd>
    8ba6:	48 8b 48 08          	mov    0x8(%rax),%rcx
    8baa:	49 89 0a             	mov    %rcx,(%r10)
    8bad:	48 83 c0 10          	add    $0x10,%rax
    8bb1:	48 39 c6             	cmp    %rax,%rsi
    8bb4:	74 c2                	je     8b78 <elf_get_uninit_array+0x88>
    8bb6:	48 8b 08             	mov    (%rax),%rcx
    8bb9:	48 83 f9 1a          	cmp    $0x1a,%rcx
    8bbd:	75 e1                	jne    8ba0 <elf_get_uninit_array+0xb0>
    8bbf:	48 8b 48 08          	mov    0x8(%rax),%rcx
    8bc3:	49 89 09             	mov    %rcx,(%r9)
    8bc6:	eb e5                	jmp    8bad <elf_get_uninit_array+0xbd>
    8bc8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8bcd:	c3                   	ret    
    8bce:	66 90                	xchg   %ax,%ax
    8bd0:	31 c0                	xor    %eax,%eax
    8bd2:	c3                   	ret    
    8bd3:	c3                   	ret    
    8bd4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8bdb:	00 00 00 
    8bde:	66 90                	xchg   %ax,%ax

0000000000008be0 <change_protection>:
    8be0:	f3 0f 1e fa          	endbr64 
    8be4:	48 85 ff             	test   %rdi,%rdi
    8be7:	0f 84 be 01 00 00    	je     8dab <change_protection+0x1cb>
    8bed:	41 56                	push   %r14
    8bef:	41 55                	push   %r13
    8bf1:	49 89 fd             	mov    %rdi,%r13
    8bf4:	41 54                	push   %r12
    8bf6:	55                   	push   %rbp
    8bf7:	53                   	push   %rbx
    8bf8:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    8bfe:	0f 85 bc 00 00 00    	jne    8cc0 <change_protection+0xe0>
    8c04:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    8c09:	0f 85 b1 00 00 00    	jne    8cc0 <change_protection+0xe0>
    8c0f:	48 89 fb             	mov    %rdi,%rbx
    8c12:	48 03 5f 20          	add    0x20(%rdi),%rbx
    8c16:	0f 84 a4 00 00 00    	je     8cc0 <change_protection+0xe0>
    8c1c:	0f b7 57 38          	movzwl 0x38(%rdi),%edx
    8c20:	48 89 de             	mov    %rbx,%rsi
    8c23:	89 d1                	mov    %edx,%ecx
    8c25:	e8 b6 f8 ff ff       	call   84e0 <has_text_relo>
    8c2a:	41 89 c6             	mov    %eax,%r14d
    8c2d:	66 85 c9             	test   %cx,%cx
    8c30:	0f 84 ea 00 00 00    	je     8d20 <change_protection+0x140>
    8c36:	49 bc ff ff ff ff 02 	movabs $0x2ffffffff,%r12
    8c3d:	00 00 00 
    8c40:	31 ed                	xor    %ebp,%ebp
    8c42:	eb 18                	jmp    8c5c <change_protection+0x7c>
    8c44:	0f 1f 40 00          	nopl   0x0(%rax)
    8c48:	41 0f b7 45 38       	movzwl 0x38(%r13),%eax
    8c4d:	83 c5 01             	add    $0x1,%ebp
    8c50:	48 83 c3 38          	add    $0x38,%rbx
    8c54:	39 c5                	cmp    %eax,%ebp
    8c56:	0f 83 c4 00 00 00    	jae    8d20 <change_protection+0x140>
    8c5c:	45 85 f6             	test   %r14d,%r14d
    8c5f:	74 0c                	je     8c6d <change_protection+0x8d>
    8c61:	48 8b 03             	mov    (%rbx),%rax
    8c64:	4c 21 e0             	and    %r12,%rax
    8c67:	48 83 f8 01          	cmp    $0x1,%rax
    8c6b:	74 63                	je     8cd0 <change_protection+0xf0>
    8c6d:	81 3b 52 e5 74 64    	cmpl   $0x6474e552,(%rbx)
    8c73:	75 d3                	jne    8c48 <change_protection+0x68>
    8c75:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    8c79:	48 8b 73 28          	mov    0x28(%rbx),%rsi
    8c7d:	48 01 fe             	add    %rdi,%rsi
    8c80:	48 89 f8             	mov    %rdi,%rax
    8c83:	48 81 c6 ff 0f 00 00 	add    $0xfff,%rsi
    8c8a:	48 31 f0             	xor    %rsi,%rax
    8c8d:	48 3d ff 0f 00 00    	cmp    $0xfff,%rax
    8c93:	76 b3                	jbe    8c48 <change_protection+0x68>
    8c95:	48 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%rdi
    8c9c:	48 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%rsi
    8ca3:	ba 01 00 00 00       	mov    $0x1,%edx
    8ca8:	48 29 fe             	sub    %rdi,%rsi
    8cab:	4c 01 ef             	add    %r13,%rdi
    8cae:	e8 bd 30 00 00       	call   bd70 <mm_modify_permissions>
    8cb3:	85 c0                	test   %eax,%eax
    8cb5:	74 91                	je     8c48 <change_protection+0x68>
    8cb7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    8cbe:	00 00 
    8cc0:	b8 01 00 00 00       	mov    $0x1,%eax
    8cc5:	5b                   	pop    %rbx
    8cc6:	5d                   	pop    %rbp
    8cc7:	41 5c                	pop    %r12
    8cc9:	41 5d                	pop    %r13
    8ccb:	41 5e                	pop    %r14
    8ccd:	c3                   	ret    
    8cce:	66 90                	xchg   %ax,%ax
    8cd0:	48 8b 43 10          	mov    0x10(%rbx),%rax
    8cd4:	8b 4b 04             	mov    0x4(%rbx),%ecx
    8cd7:	48 89 c7             	mov    %rax,%rdi
    8cda:	89 ca                	mov    %ecx,%edx
    8cdc:	48 03 43 28          	add    0x28(%rbx),%rax
    8ce0:	c1 e9 02             	shr    $0x2,%ecx
    8ce3:	83 e2 01             	and    $0x1,%edx
    8ce6:	48 8d b0 ff 0f 00 00 	lea    0xfff(%rax),%rsi
    8ced:	48 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%rdi
    8cf4:	83 e1 01             	and    $0x1,%ecx
    8cf7:	48 c1 e2 02          	shl    $0x2,%rdx
    8cfb:	48 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%rsi
    8d02:	48 29 fe             	sub    %rdi,%rsi
    8d05:	09 ca                	or     %ecx,%edx
    8d07:	4c 01 ef             	add    %r13,%rdi
    8d0a:	e8 61 30 00 00       	call   bd70 <mm_modify_permissions>
    8d0f:	85 c0                	test   %eax,%eax
    8d11:	0f 84 56 ff ff ff    	je     8c6d <change_protection+0x8d>
    8d17:	eb a7                	jmp    8cc0 <change_protection+0xe0>
    8d19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8d20:	8b 05 b2 a7 00 00    	mov    0xa7b2(%rip),%eax        # 134d8 <g_global_data+0x158>
    8d26:	85 c0                	test   %eax,%eax
    8d28:	74 9b                	je     8cc5 <change_protection+0xe5>
    8d2a:	31 d2                	xor    %edx,%edx
    8d2c:	48 8d 3d 4d a6 00 00 	lea    0xa64d(%rip),%rdi        # 13380 <g_global_data>
    8d33:	eb 10                	jmp    8d45 <change_protection+0x165>
    8d35:	0f 1f 00             	nopl   (%rax)
    8d38:	8b 05 9a a7 00 00    	mov    0xa79a(%rip),%eax        # 134d8 <g_global_data+0x158>
    8d3e:	83 c2 01             	add    $0x1,%edx
    8d41:	39 c2                	cmp    %eax,%edx
    8d43:	73 5b                	jae    8da0 <change_protection+0x1c0>
    8d45:	89 d1                	mov    %edx,%ecx
    8d47:	48 8d 41 0b          	lea    0xb(%rcx),%rax
    8d4b:	48 c1 e0 05          	shl    $0x5,%rax
    8d4f:	48 01 f8             	add    %rdi,%rax
    8d52:	0f b7 30             	movzwl (%rax),%esi
    8d55:	66 83 fe 14          	cmp    $0x14,%si
    8d59:	75 dd                	jne    8d38 <change_protection+0x158>
    8d5b:	48 c1 e1 05          	shl    $0x5,%rcx
    8d5f:	48 01 f9             	add    %rdi,%rcx
    8d62:	48 8b 89 78 01 00 00 	mov    0x178(%rcx),%rcx
    8d69:	48 81 f9 07 02 00 00 	cmp    $0x207,%rcx
    8d70:	75 c6                	jne    8d38 <change_protection+0x158>
    8d72:	8b 48 04             	mov    0x4(%rax),%ecx
    8d75:	85 c9                	test   %ecx,%ecx
    8d77:	74 bf                	je     8d38 <change_protection+0x158>
    8d79:	8b 70 04             	mov    0x4(%rax),%esi
    8d7c:	48 8b 40 08          	mov    0x8(%rax),%rax
    8d80:	ba 03 00 00 00       	mov    $0x3,%edx
    8d85:	48 c1 e6 0c          	shl    $0xc,%rsi
    8d89:	49 8d 7c 05 00       	lea    0x0(%r13,%rax,1),%rdi
    8d8e:	e8 dd 2f 00 00       	call   bd70 <mm_modify_permissions>
    8d93:	85 c0                	test   %eax,%eax
    8d95:	0f 95 c0             	setne  %al
    8d98:	0f b6 c0             	movzbl %al,%eax
    8d9b:	e9 25 ff ff ff       	jmp    8cc5 <change_protection+0xe5>
    8da0:	5b                   	pop    %rbx
    8da1:	31 c0                	xor    %eax,%eax
    8da3:	5d                   	pop    %rbp
    8da4:	41 5c                	pop    %r12
    8da6:	41 5d                	pop    %r13
    8da8:	41 5e                	pop    %r14
    8daa:	c3                   	ret    
    8dab:	b8 01 00 00 00       	mov    $0x1,%eax
    8db0:	c3                   	ret    
    8db1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8db8:	00 00 00 
    8dbb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000008dc0 <init_segment_emas>:
    8dc0:	f3 0f 1e fa          	endbr64 
    8dc4:	48 85 ff             	test   %rdi,%rdi
    8dc7:	0f 84 e8 00 00 00    	je     8eb5 <init_segment_emas+0xf5>
    8dcd:	41 55                	push   %r13
    8dcf:	49 89 fd             	mov    %rdi,%r13
    8dd2:	41 54                	push   %r12
    8dd4:	55                   	push   %rbp
    8dd5:	53                   	push   %rbx
    8dd6:	48 83 ec 08          	sub    $0x8,%rsp
    8dda:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    8de0:	0f 85 ae 00 00 00    	jne    8e94 <init_segment_emas+0xd4>
    8de6:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    8deb:	0f 85 a3 00 00 00    	jne    8e94 <init_segment_emas+0xd4>
    8df1:	48 89 fb             	mov    %rdi,%rbx
    8df4:	48 03 5f 20          	add    0x20(%rdi),%rbx
    8df8:	0f 84 96 00 00 00    	je     8e94 <init_segment_emas+0xd4>
    8dfe:	0f b7 57 38          	movzwl 0x38(%rdi),%edx
    8e02:	48 89 de             	mov    %rbx,%rsi
    8e05:	45 31 e4             	xor    %r12d,%r12d
    8e08:	89 d1                	mov    %edx,%ecx
    8e0a:	e8 d1 f6 ff ff       	call   84e0 <has_text_relo>
    8e0f:	89 c5                	mov    %eax,%ebp
    8e11:	66 85 c9             	test   %cx,%cx
    8e14:	75 1c                	jne    8e32 <init_segment_emas+0x72>
    8e16:	e9 8d 00 00 00       	jmp    8ea8 <init_segment_emas+0xe8>
    8e1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8e20:	41 0f b7 45 38       	movzwl 0x38(%r13),%eax
    8e25:	41 83 c4 01          	add    $0x1,%r12d
    8e29:	48 83 c3 38          	add    $0x38,%rbx
    8e2d:	41 39 c4             	cmp    %eax,%r12d
    8e30:	73 76                	jae    8ea8 <init_segment_emas+0xe8>
    8e32:	83 3b 01             	cmpl   $0x1,(%rbx)
    8e35:	75 e9                	jne    8e20 <init_segment_emas+0x60>
    8e37:	8b 4b 04             	mov    0x4(%rbx),%ecx
    8e3a:	48 8b 73 10          	mov    0x10(%rbx),%rsi
    8e3e:	89 c8                	mov    %ecx,%eax
    8e40:	48 89 f2             	mov    %rsi,%rdx
    8e43:	48 03 73 28          	add    0x28(%rbx),%rsi
    8e47:	83 e0 02             	and    $0x2,%eax
    8e4a:	48 81 c6 ff 0f 00 00 	add    $0xfff,%rsi
    8e51:	48 81 e2 00 f0 ff ff 	and    $0xfffffffffffff000,%rdx
    8e58:	09 e8                	or     %ebp,%eax
    8e5a:	48 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%rsi
    8e61:	49 8d 7c 15 00       	lea    0x0(%r13,%rdx,1),%rdi
    8e66:	83 f8 01             	cmp    $0x1,%eax
    8e69:	48 19 c0             	sbb    %rax,%rax
    8e6c:	83 e1 01             	and    $0x1,%ecx
    8e6f:	48 29 d6             	sub    %rdx,%rsi
    8e72:	45 31 c9             	xor    %r9d,%r9d
    8e75:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    8e79:	48 c1 e1 02          	shl    $0x2,%rcx
    8e7d:	45 31 c0             	xor    %r8d,%r8d
    8e80:	ba 80 02 00 00       	mov    $0x280,%edx
    8e85:	48 83 c0 03          	add    $0x3,%rax
    8e89:	09 c1                	or     %eax,%ecx
    8e8b:	e8 70 2d 00 00       	call   bc00 <mm_init_ema>
    8e90:	85 c0                	test   %eax,%eax
    8e92:	74 8c                	je     8e20 <init_segment_emas+0x60>
    8e94:	48 83 c4 08          	add    $0x8,%rsp
    8e98:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8e9d:	5b                   	pop    %rbx
    8e9e:	5d                   	pop    %rbp
    8e9f:	41 5c                	pop    %r12
    8ea1:	41 5d                	pop    %r13
    8ea3:	c3                   	ret    
    8ea4:	0f 1f 40 00          	nopl   0x0(%rax)
    8ea8:	48 83 c4 08          	add    $0x8,%rsp
    8eac:	31 c0                	xor    %eax,%eax
    8eae:	5b                   	pop    %rbx
    8eaf:	5d                   	pop    %rbp
    8eb0:	41 5c                	pop    %r12
    8eb2:	41 5d                	pop    %r13
    8eb4:	c3                   	ret    
    8eb5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8eba:	c3                   	ret    
    8ebb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000008ec0 <__cxa_atexit>:
    8ec0:	f3 0f 1e fa          	endbr64 
    8ec4:	41 55                	push   %r13
    8ec6:	49 89 d5             	mov    %rdx,%r13
    8ec9:	41 54                	push   %r12
    8ecb:	49 89 f4             	mov    %rsi,%r12
    8ece:	55                   	push   %rbp
    8ecf:	48 89 fd             	mov    %rdi,%rbp
    8ed2:	53                   	push   %rbx
    8ed3:	48 83 ec 18          	sub    $0x18,%rsp
    8ed7:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    8ede:	00 00 
    8ee0:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    8ee5:	31 c0                	xor    %eax,%eax
    8ee7:	48 83 3d 29 14 01 00 	cmpq   $0x0,0x11429(%rip)        # 1a318 <g_exit_function_cookie>
    8eee:	00 
    8eef:	0f 84 8b 00 00 00    	je     8f80 <__cxa_atexit+0xc0>
    8ef5:	31 f6                	xor    %esi,%esi
    8ef7:	48 89 ef             	mov    %rbp,%rdi
    8efa:	e8 c1 cf ff ff       	call   5ec0 <sgx_is_within_enclave>
    8eff:	85 c0                	test   %eax,%eax
    8f01:	0f 84 a1 00 00 00    	je     8fa8 <__cxa_atexit+0xe8>
    8f07:	bf 20 00 00 00       	mov    $0x20,%edi
    8f0c:	e8 7f 45 00 00       	call   d490 <dlmalloc>
    8f11:	48 89 c3             	mov    %rax,%rbx
    8f14:	48 85 c0             	test   %rax,%rax
    8f17:	0f 84 8b 00 00 00    	je     8fa8 <__cxa_atexit+0xe8>
    8f1d:	48 8b 05 f4 13 01 00 	mov    0x113f4(%rip),%rax        # 1a318 <g_exit_function_cookie>
    8f24:	4c 89 6b 10          	mov    %r13,0x10(%rbx)
    8f28:	48 31 c5             	xor    %rax,%rbp
    8f2b:	49 31 c4             	xor    %rax,%r12
    8f2e:	48 89 2b             	mov    %rbp,(%rbx)
    8f31:	48 8d 2d e8 13 01 00 	lea    0x113e8(%rip),%rbp        # 1a320 <g_exit_function_lock>
    8f38:	4c 89 63 08          	mov    %r12,0x8(%rbx)
    8f3c:	48 89 ef             	mov    %rbp,%rdi
    8f3f:	e8 8c 3b 00 00       	call   cad0 <sgx_spin_lock>
    8f44:	48 8b 05 dd 13 01 00 	mov    0x113dd(%rip),%rax        # 1a328 <g_exit_function>
    8f4b:	48 89 ef             	mov    %rbp,%rdi
    8f4e:	48 89 1d d3 13 01 00 	mov    %rbx,0x113d3(%rip)        # 1a328 <g_exit_function>
    8f55:	48 89 43 18          	mov    %rax,0x18(%rbx)
    8f59:	e8 02 3c 00 00       	call   cb60 <sgx_spin_unlock>
    8f5e:	31 c0                	xor    %eax,%eax
    8f60:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    8f65:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    8f6c:	00 00 
    8f6e:	75 71                	jne    8fe1 <__cxa_atexit+0x121>
    8f70:	48 83 c4 18          	add    $0x18,%rsp
    8f74:	5b                   	pop    %rbx
    8f75:	5d                   	pop    %rbp
    8f76:	41 5c                	pop    %r12
    8f78:	41 5d                	pop    %r13
    8f7a:	c3                   	ret    
    8f7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8f80:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    8f87:	00 
    8f88:	48 89 e3             	mov    %rsp,%rbx
    8f8b:	eb 0a                	jmp    8f97 <__cxa_atexit+0xd7>
    8f8d:	0f 1f 00             	nopl   (%rax)
    8f90:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
    8f95:	75 19                	jne    8fb0 <__cxa_atexit+0xf0>
    8f97:	be 08 00 00 00       	mov    $0x8,%esi
    8f9c:	48 89 df             	mov    %rbx,%rdi
    8f9f:	e8 1c d1 ff ff       	call   60c0 <sgx_read_rand>
    8fa4:	85 c0                	test   %eax,%eax
    8fa6:	74 e8                	je     8f90 <__cxa_atexit+0xd0>
    8fa8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8fad:	eb b1                	jmp    8f60 <__cxa_atexit+0xa0>
    8faf:	90                   	nop
    8fb0:	48 8d 1d 69 13 01 00 	lea    0x11369(%rip),%rbx        # 1a320 <g_exit_function_lock>
    8fb7:	48 89 df             	mov    %rbx,%rdi
    8fba:	e8 11 3b 00 00       	call   cad0 <sgx_spin_lock>
    8fbf:	48 83 3d 51 13 01 00 	cmpq   $0x0,0x11351(%rip)        # 1a318 <g_exit_function_cookie>
    8fc6:	00 
    8fc7:	75 0b                	jne    8fd4 <__cxa_atexit+0x114>
    8fc9:	48 8b 04 24          	mov    (%rsp),%rax
    8fcd:	48 89 05 44 13 01 00 	mov    %rax,0x11344(%rip)        # 1a318 <g_exit_function_cookie>
    8fd4:	48 89 df             	mov    %rbx,%rdi
    8fd7:	e8 84 3b 00 00       	call   cb60 <sgx_spin_unlock>
    8fdc:	e9 14 ff ff ff       	jmp    8ef5 <__cxa_atexit+0x35>
    8fe1:	e8 1a 7e 00 00       	call   10e00 <__stack_chk_fail>
    8fe6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8fed:	00 00 00 

0000000000008ff0 <atexit>:
    8ff0:	f3 0f 1e fa          	endbr64 
    8ff4:	48 8b 15 55 f2 00 00 	mov    0xf255(%rip),%rdx        # 18250 <__dso_handle>
    8ffb:	31 f6                	xor    %esi,%esi
    8ffd:	e9 be fe ff ff       	jmp    8ec0 <__cxa_atexit>
    9002:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    9009:	00 00 00 
    900c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000009010 <init_global_object>:
    9010:	f3 0f 1e fa          	endbr64 
    9014:	55                   	push   %rbp
    9015:	53                   	push   %rbx
    9016:	48 83 ec 28          	sub    $0x28,%rsp
    901a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    9021:	00 00 
    9023:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    9028:	31 c0                	xor    %eax,%eax
    902a:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    9031:	00 00 
    9033:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    903a:	00 00 
    903c:	e8 b7 94 00 00       	call   124f8 <get_enclave_base>
    9041:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    9046:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
    904b:	48 89 c7             	mov    %rax,%rdi
    904e:	48 89 c3             	mov    %rax,%rbx
    9051:	e8 aa f9 ff ff       	call   8a00 <elf_get_init_array>
    9056:	85 c0                	test   %eax,%eax
    9058:	75 31                	jne    908b <init_global_object+0x7b>
    905a:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    905f:	48 85 c0             	test   %rax,%rax
    9062:	74 27                	je     908b <init_global_object+0x7b>
    9064:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
    9069:	48 85 ed             	test   %rbp,%rbp
    906c:	74 1d                	je     908b <init_global_object+0x7b>
    906e:	48 01 c3             	add    %rax,%rbx
    9071:	48 83 e5 f8          	and    $0xfffffffffffffff8,%rbp
    9075:	48 01 dd             	add    %rbx,%rbp
    9078:	48 39 eb             	cmp    %rbp,%rbx
    907b:	73 0e                	jae    908b <init_global_object+0x7b>
    907d:	0f 1f 00             	nopl   (%rax)
    9080:	ff 13                	call   *(%rbx)
    9082:	48 83 c3 08          	add    $0x8,%rbx
    9086:	48 39 eb             	cmp    %rbp,%rbx
    9089:	72 f5                	jb     9080 <init_global_object+0x70>
    908b:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    9090:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    9097:	00 00 
    9099:	75 07                	jne    90a2 <init_global_object+0x92>
    909b:	48 83 c4 28          	add    $0x28,%rsp
    909f:	5b                   	pop    %rbx
    90a0:	5d                   	pop    %rbp
    90a1:	c3                   	ret    
    90a2:	e8 59 7d 00 00       	call   10e00 <__stack_chk_fail>
    90a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    90ae:	00 00 

00000000000090b0 <uninit_global_object>:
    90b0:	f3 0f 1e fa          	endbr64 
    90b4:	55                   	push   %rbp
    90b5:	53                   	push   %rbx
    90b6:	48 83 ec 28          	sub    $0x28,%rsp
    90ba:	48 8b 1d 67 12 01 00 	mov    0x11267(%rip),%rbx        # 1a328 <g_exit_function>
    90c1:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    90c8:	00 00 
    90ca:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    90cf:	31 c0                	xor    %eax,%eax
    90d1:	48 c7 05 4c 12 01 00 	movq   $0x0,0x1124c(%rip)        # 1a328 <g_exit_function>
    90d8:	00 00 00 00 
    90dc:	48 85 db             	test   %rbx,%rbx
    90df:	74 2b                	je     910c <uninit_global_object+0x5c>
    90e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    90e8:	48 8b 05 29 12 01 00 	mov    0x11229(%rip),%rax        # 1a318 <g_exit_function_cookie>
    90ef:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    90f3:	48 31 c7             	xor    %rax,%rdi
    90f6:	48 33 03             	xor    (%rbx),%rax
    90f9:	ff d0                	call   *%rax
    90fb:	48 89 df             	mov    %rbx,%rdi
    90fe:	48 8b 5b 18          	mov    0x18(%rbx),%rbx
    9102:	e8 79 61 00 00       	call   f280 <dlfree>
    9107:	48 85 db             	test   %rbx,%rbx
    910a:	75 dc                	jne    90e8 <uninit_global_object+0x38>
    910c:	e8 e7 93 00 00       	call   124f8 <get_enclave_base>
    9111:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    9116:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
    911b:	48 89 c7             	mov    %rax,%rdi
    911e:	48 89 c5             	mov    %rax,%rbp
    9121:	e8 ca f9 ff ff       	call   8af0 <elf_get_uninit_array>
    9126:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    912b:	48 85 d2             	test   %rdx,%rdx
    912e:	74 2b                	je     915b <uninit_global_object+0xab>
    9130:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    9135:	48 85 c0             	test   %rax,%rax
    9138:	74 21                	je     915b <uninit_global_object+0xab>
    913a:	48 01 d5             	add    %rdx,%rbp
    913d:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    9141:	48 8d 5c 05 f8       	lea    -0x8(%rbp,%rax,1),%rbx
    9146:	48 39 eb             	cmp    %rbp,%rbx
    9149:	72 10                	jb     915b <uninit_global_object+0xab>
    914b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9150:	ff 13                	call   *(%rbx)
    9152:	48 83 eb 08          	sub    $0x8,%rbx
    9156:	48 39 eb             	cmp    %rbp,%rbx
    9159:	73 f5                	jae    9150 <uninit_global_object+0xa0>
    915b:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    9160:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    9167:	00 00 
    9169:	75 07                	jne    9172 <uninit_global_object+0xc2>
    916b:	48 83 c4 28          	add    $0x28,%rsp
    916f:	5b                   	pop    %rbx
    9170:	5d                   	pop    %rbp
    9171:	c3                   	ret    
    9172:	e8 89 7c 00 00       	call   10e00 <__stack_chk_fail>
    9177:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    917e:	00 00 

0000000000009180 <__tls_get_addr>:
    9180:	f3 0f 1e fa          	endbr64 
    9184:	53                   	push   %rbx
    9185:	48 89 fb             	mov    %rdi,%rbx
    9188:	e8 b6 93 00 00       	call   12543 <get_thread_data>
    918d:	48 8b 40 68          	mov    0x68(%rax),%rax
    9191:	48 03 43 08          	add    0x8(%rbx),%rax
    9195:	5b                   	pop    %rbx
    9196:	c3                   	ret    
    9197:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    919e:	00 00 

00000000000091a0 <bit_array_new>:
    91a0:	f3 0f 1e fa          	endbr64 
    91a4:	41 54                	push   %r12
    91a6:	55                   	push   %rbp
    91a7:	53                   	push   %rbx
    91a8:	48 85 ff             	test   %rdi,%rdi
    91ab:	74 63                	je     9210 <bit_array_new+0x70>
    91ad:	48 8d 47 07          	lea    0x7(%rdi),%rax
    91b1:	48 89 fb             	mov    %rdi,%rbx
    91b4:	48 89 c2             	mov    %rax,%rdx
    91b7:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    91bb:	48 39 fa             	cmp    %rdi,%rdx
    91be:	72 50                	jb     9210 <bit_array_new+0x70>
    91c0:	48 c1 e8 03          	shr    $0x3,%rax
    91c4:	bf 18 00 00 00       	mov    $0x18,%edi
    91c9:	49 89 c4             	mov    %rax,%r12
    91cc:	e8 af 25 00 00       	call   b780 <emalloc>
    91d1:	48 89 c5             	mov    %rax,%rbp
    91d4:	48 85 c0             	test   %rax,%rax
    91d7:	74 37                	je     9210 <bit_array_new+0x70>
    91d9:	4c 89 20             	mov    %r12,(%rax)
    91dc:	4c 89 e7             	mov    %r12,%rdi
    91df:	48 89 58 08          	mov    %rbx,0x8(%rax)
    91e3:	e8 98 25 00 00       	call   b780 <emalloc>
    91e8:	48 89 45 10          	mov    %rax,0x10(%rbp)
    91ec:	48 85 c0             	test   %rax,%rax
    91ef:	74 0f                	je     9200 <bit_array_new+0x60>
    91f1:	48 89 e8             	mov    %rbp,%rax
    91f4:	5b                   	pop    %rbx
    91f5:	5d                   	pop    %rbp
    91f6:	41 5c                	pop    %r12
    91f8:	c3                   	ret    
    91f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9200:	48 89 ef             	mov    %rbp,%rdi
    9203:	e8 f8 27 00 00       	call   ba00 <efree>
    9208:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    920f:	00 
    9210:	31 ed                	xor    %ebp,%ebp
    9212:	eb dd                	jmp    91f1 <bit_array_new+0x51>
    9214:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    921b:	00 00 00 
    921e:	66 90                	xchg   %ax,%ax

0000000000009220 <bit_array_new_set>:
    9220:	f3 0f 1e fa          	endbr64 
    9224:	53                   	push   %rbx
    9225:	e8 76 ff ff ff       	call   91a0 <bit_array_new>
    922a:	48 89 c3             	mov    %rax,%rbx
    922d:	48 85 c0             	test   %rax,%rax
    9230:	74 11                	je     9243 <bit_array_new_set+0x23>
    9232:	48 8b 10             	mov    (%rax),%rdx
    9235:	48 8b 78 10          	mov    0x10(%rax),%rdi
    9239:	be ff 00 00 00       	mov    $0xff,%esi
    923e:	e8 2d 7a 00 00       	call   10c70 <memset>
    9243:	48 89 d8             	mov    %rbx,%rax
    9246:	5b                   	pop    %rbx
    9247:	c3                   	ret    
    9248:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    924f:	00 

0000000000009250 <bit_array_new_reset>:
    9250:	f3 0f 1e fa          	endbr64 
    9254:	53                   	push   %rbx
    9255:	e8 46 ff ff ff       	call   91a0 <bit_array_new>
    925a:	48 89 c3             	mov    %rax,%rbx
    925d:	48 85 c0             	test   %rax,%rax
    9260:	74 0e                	je     9270 <bit_array_new_reset+0x20>
    9262:	48 8b 10             	mov    (%rax),%rdx
    9265:	48 8b 78 10          	mov    0x10(%rax),%rdi
    9269:	31 f6                	xor    %esi,%esi
    926b:	e8 00 7a 00 00       	call   10c70 <memset>
    9270:	48 89 d8             	mov    %rbx,%rax
    9273:	5b                   	pop    %rbx
    9274:	c3                   	ret    
    9275:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    927c:	00 00 00 
    927f:	90                   	nop

0000000000009280 <bit_array_delete>:
    9280:	f3 0f 1e fa          	endbr64 
    9284:	53                   	push   %rbx
    9285:	48 89 fb             	mov    %rdi,%rbx
    9288:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    928c:	e8 6f 27 00 00       	call   ba00 <efree>
    9291:	48 89 df             	mov    %rbx,%rdi
    9294:	5b                   	pop    %rbx
    9295:	e9 66 27 00 00       	jmp    ba00 <efree>
    929a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000092a0 <bit_array_test>:
    92a0:	f3 0f 1e fa          	endbr64 
    92a4:	48 89 f1             	mov    %rsi,%rcx
    92a7:	48 89 f2             	mov    %rsi,%rdx
    92aa:	48 8b 77 10          	mov    0x10(%rdi),%rsi
    92ae:	b8 01 00 00 00       	mov    $0x1,%eax
    92b3:	83 e1 07             	and    $0x7,%ecx
    92b6:	48 c1 ea 03          	shr    $0x3,%rdx
    92ba:	d3 e0                	shl    %cl,%eax
    92bc:	84 04 16             	test   %al,(%rsi,%rdx,1)
    92bf:	0f 95 c0             	setne  %al
    92c2:	c3                   	ret    
    92c3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    92ca:	00 00 00 
    92cd:	0f 1f 00             	nopl   (%rax)

00000000000092d0 <set_mask>:
    92d0:	f3 0f 1e fa          	endbr64 
    92d4:	89 f1                	mov    %esi,%ecx
    92d6:	b8 01 00 00 00       	mov    $0x1,%eax
    92db:	d3 e0                	shl    %cl,%eax
    92dd:	89 f9                	mov    %edi,%ecx
    92df:	83 e8 01             	sub    $0x1,%eax
    92e2:	d3 e0                	shl    %cl,%eax
    92e4:	c3                   	ret    
    92e5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    92ec:	00 00 00 
    92ef:	90                   	nop

00000000000092f0 <bit_array_test_range>:
    92f0:	f3 0f 1e fa          	endbr64 
    92f4:	48 89 f0             	mov    %rsi,%rax
    92f7:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    92fb:	83 e6 07             	and    $0x7,%esi
    92fe:	b9 08 00 00 00       	mov    $0x8,%ecx
    9303:	48 c1 e8 03          	shr    $0x3,%rax
    9307:	48 29 f1             	sub    %rsi,%rcx
    930a:	44 0f b6 0c 07       	movzbl (%rdi,%rax,1),%r9d
    930f:	48 39 d1             	cmp    %rdx,%rcx
    9312:	72 24                	jb     9338 <bit_array_test_range+0x48>
    9314:	89 d1                	mov    %edx,%ecx
    9316:	b8 01 00 00 00       	mov    $0x1,%eax
    931b:	41 f7 d1             	not    %r9d
    931e:	d3 e0                	shl    %cl,%eax
    9320:	89 f1                	mov    %esi,%ecx
    9322:	83 e8 01             	sub    $0x1,%eax
    9325:	d3 e0                	shl    %cl,%eax
    9327:	41 84 c1             	test   %al,%r9b
    932a:	41 0f 94 c2          	sete   %r10b
    932e:	44 89 d0             	mov    %r10d,%eax
    9331:	c3                   	ret    
    9332:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9338:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    933e:	41 f7 d1             	not    %r9d
    9341:	45 31 d2             	xor    %r10d,%r10d
    9344:	41 d3 e0             	shl    %cl,%r8d
    9347:	89 f1                	mov    %esi,%ecx
    9349:	41 83 e8 01          	sub    $0x1,%r8d
    934d:	41 d3 e0             	shl    %cl,%r8d
    9350:	45 84 c1             	test   %r8b,%r9b
    9353:	75 d9                	jne    932e <bit_array_test_range+0x3e>
    9355:	48 8d 4c 16 f8       	lea    -0x8(%rsi,%rdx,1),%rcx
    935a:	48 83 f9 07          	cmp    $0x7,%rcx
    935e:	77 12                	ja     9372 <bit_array_test_range+0x82>
    9360:	eb 26                	jmp    9388 <bit_array_test_range+0x98>
    9362:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9368:	48 83 e9 08          	sub    $0x8,%rcx
    936c:	48 83 f9 07          	cmp    $0x7,%rcx
    9370:	76 16                	jbe    9388 <bit_array_test_range+0x98>
    9372:	48 83 c0 01          	add    $0x1,%rax
    9376:	80 3c 07 ff          	cmpb   $0xff,(%rdi,%rax,1)
    937a:	74 ec                	je     9368 <bit_array_test_range+0x78>
    937c:	45 31 d2             	xor    %r10d,%r10d
    937f:	44 89 d0             	mov    %r10d,%eax
    9382:	c3                   	ret    
    9383:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9388:	41 ba 01 00 00 00    	mov    $0x1,%r10d
    938e:	48 85 c9             	test   %rcx,%rcx
    9391:	74 9b                	je     932e <bit_array_test_range+0x3e>
    9393:	ba 01 00 00 00       	mov    $0x1,%edx
    9398:	0f b6 74 07 01       	movzbl 0x1(%rdi,%rax,1),%esi
    939d:	d3 e2                	shl    %cl,%edx
    939f:	83 ea 01             	sub    $0x1,%edx
    93a2:	21 d6                	and    %edx,%esi
    93a4:	40 38 d6             	cmp    %dl,%sil
    93a7:	41 0f 94 c2          	sete   %r10b
    93ab:	eb 81                	jmp    932e <bit_array_test_range+0x3e>
    93ad:	0f 1f 00             	nopl   (%rax)

00000000000093b0 <bit_array_test_range_any>:
    93b0:	f3 0f 1e fa          	endbr64 
    93b4:	49 89 f8             	mov    %rdi,%r8
    93b7:	48 89 f0             	mov    %rsi,%rax
    93ba:	48 89 d7             	mov    %rdx,%rdi
    93bd:	83 e6 07             	and    $0x7,%esi
    93c0:	49 8b 50 10          	mov    0x10(%r8),%rdx
    93c4:	b9 08 00 00 00       	mov    $0x8,%ecx
    93c9:	48 c1 e8 03          	shr    $0x3,%rax
    93cd:	48 29 f1             	sub    %rsi,%rcx
    93d0:	44 0f b6 0c 02       	movzbl (%rdx,%rax,1),%r9d
    93d5:	48 39 f9             	cmp    %rdi,%rcx
    93d8:	72 1e                	jb     93f8 <bit_array_test_range_any+0x48>
    93da:	89 f9                	mov    %edi,%ecx
    93dc:	b8 01 00 00 00       	mov    $0x1,%eax
    93e1:	d3 e0                	shl    %cl,%eax
    93e3:	89 f1                	mov    %esi,%ecx
    93e5:	83 e8 01             	sub    $0x1,%eax
    93e8:	d3 e0                	shl    %cl,%eax
    93ea:	41 84 c1             	test   %al,%r9b
    93ed:	41 0f 95 c2          	setne  %r10b
    93f1:	44 89 d0             	mov    %r10d,%eax
    93f4:	c3                   	ret    
    93f5:	0f 1f 00             	nopl   (%rax)
    93f8:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    93fe:	41 ba 01 00 00 00    	mov    $0x1,%r10d
    9404:	41 d3 e0             	shl    %cl,%r8d
    9407:	89 f1                	mov    %esi,%ecx
    9409:	41 83 e8 01          	sub    $0x1,%r8d
    940d:	41 d3 e0             	shl    %cl,%r8d
    9410:	45 84 c1             	test   %r8b,%r9b
    9413:	75 dc                	jne    93f1 <bit_array_test_range_any+0x41>
    9415:	48 8d 4c 3e f8       	lea    -0x8(%rsi,%rdi,1),%rcx
    941a:	48 83 f9 07          	cmp    $0x7,%rcx
    941e:	77 12                	ja     9432 <bit_array_test_range_any+0x82>
    9420:	eb 2e                	jmp    9450 <bit_array_test_range_any+0xa0>
    9422:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9428:	48 83 e9 08          	sub    $0x8,%rcx
    942c:	48 83 f9 07          	cmp    $0x7,%rcx
    9430:	76 1e                	jbe    9450 <bit_array_test_range_any+0xa0>
    9432:	48 83 c0 01          	add    $0x1,%rax
    9436:	80 3c 02 00          	cmpb   $0x0,(%rdx,%rax,1)
    943a:	74 ec                	je     9428 <bit_array_test_range_any+0x78>
    943c:	41 ba 01 00 00 00    	mov    $0x1,%r10d
    9442:	44 89 d0             	mov    %r10d,%eax
    9445:	c3                   	ret    
    9446:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    944d:	00 00 00 
    9450:	45 31 d2             	xor    %r10d,%r10d
    9453:	48 85 c9             	test   %rcx,%rcx
    9456:	74 99                	je     93f1 <bit_array_test_range_any+0x41>
    9458:	be 01 00 00 00       	mov    $0x1,%esi
    945d:	d3 e6                	shl    %cl,%esi
    945f:	83 ee 01             	sub    $0x1,%esi
    9462:	40 84 74 02 01       	test   %sil,0x1(%rdx,%rax,1)
    9467:	41 0f 95 c2          	setne  %r10b
    946b:	eb 84                	jmp    93f1 <bit_array_test_range_any+0x41>
    946d:	0f 1f 00             	nopl   (%rax)

0000000000009470 <bit_array_set>:
    9470:	f3 0f 1e fa          	endbr64 
    9474:	48 89 f1             	mov    %rsi,%rcx
    9477:	48 89 f0             	mov    %rsi,%rax
    947a:	ba 01 00 00 00       	mov    $0x1,%edx
    947f:	48 c1 e8 03          	shr    $0x3,%rax
    9483:	83 e1 07             	and    $0x7,%ecx
    9486:	48 03 47 10          	add    0x10(%rdi),%rax
    948a:	d3 e2                	shl    %cl,%edx
    948c:	08 10                	or     %dl,(%rax)
    948e:	c3                   	ret    
    948f:	90                   	nop

0000000000009490 <bit_array_set_range>:
    9490:	f3 0f 1e fa          	endbr64 
    9494:	48 89 f0             	mov    %rsi,%rax
    9497:	4c 8b 4f 10          	mov    0x10(%rdi),%r9
    949b:	83 e6 07             	and    $0x7,%esi
    949e:	b9 08 00 00 00       	mov    $0x8,%ecx
    94a3:	48 c1 e8 03          	shr    $0x3,%rax
    94a7:	48 29 f1             	sub    %rsi,%rcx
    94aa:	49 89 d0             	mov    %rdx,%r8
    94ad:	49 01 c1             	add    %rax,%r9
    94b0:	45 0f b6 11          	movzbl (%r9),%r10d
    94b4:	48 39 d1             	cmp    %rdx,%rcx
    94b7:	73 67                	jae    9520 <bit_array_set_range+0x90>
    94b9:	ba 01 00 00 00       	mov    $0x1,%edx
    94be:	d3 e2                	shl    %cl,%edx
    94c0:	89 f1                	mov    %esi,%ecx
    94c2:	83 ea 01             	sub    $0x1,%edx
    94c5:	d3 e2                	shl    %cl,%edx
    94c7:	4a 8d 4c 06 f8       	lea    -0x8(%rsi,%r8,1),%rcx
    94cc:	41 09 d2             	or     %edx,%r10d
    94cf:	45 88 11             	mov    %r10b,(%r9)
    94d2:	48 83 f9 07          	cmp    $0x7,%rcx
    94d6:	76 68                	jbe    9540 <bit_array_set_range+0xb0>
    94d8:	48 8d 51 f8          	lea    -0x8(%rcx),%rdx
    94dc:	48 83 c0 01          	add    $0x1,%rax
    94e0:	48 c1 ea 03          	shr    $0x3,%rdx
    94e4:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
    94e8:	eb 0a                	jmp    94f4 <bit_array_set_range+0x64>
    94ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    94f0:	48 83 c0 01          	add    $0x1,%rax
    94f4:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    94f8:	c6 04 02 ff          	movb   $0xff,(%rdx,%rax,1)
    94fc:	48 39 f0             	cmp    %rsi,%rax
    94ff:	75 ef                	jne    94f0 <bit_array_set_range+0x60>
    9501:	83 e1 07             	and    $0x7,%ecx
    9504:	48 85 c9             	test   %rcx,%rcx
    9507:	74 12                	je     951b <bit_array_set_range+0x8b>
    9509:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    950d:	b8 01 00 00 00       	mov    $0x1,%eax
    9512:	d3 e0                	shl    %cl,%eax
    9514:	83 e8 01             	sub    $0x1,%eax
    9517:	08 44 32 01          	or     %al,0x1(%rdx,%rsi,1)
    951b:	c3                   	ret    
    951c:	0f 1f 40 00          	nopl   0x0(%rax)
    9520:	89 d1                	mov    %edx,%ecx
    9522:	b8 01 00 00 00       	mov    $0x1,%eax
    9527:	d3 e0                	shl    %cl,%eax
    9529:	89 f1                	mov    %esi,%ecx
    952b:	83 e8 01             	sub    $0x1,%eax
    952e:	d3 e0                	shl    %cl,%eax
    9530:	44 09 d0             	or     %r10d,%eax
    9533:	41 88 01             	mov    %al,(%r9)
    9536:	c3                   	ret    
    9537:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    953e:	00 00 
    9540:	48 89 c6             	mov    %rax,%rsi
    9543:	eb bf                	jmp    9504 <bit_array_set_range+0x74>
    9545:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    954c:	00 00 00 
    954f:	90                   	nop

0000000000009550 <bit_array_set_all>:
    9550:	f3 0f 1e fa          	endbr64 
    9554:	48 8b 17             	mov    (%rdi),%rdx
    9557:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    955b:	be ff 00 00 00       	mov    $0xff,%esi
    9560:	e9 0b 77 00 00       	jmp    10c70 <memset>
    9565:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    956c:	00 00 00 
    956f:	90                   	nop

0000000000009570 <clear_mask>:
    9570:	f3 0f 1e fa          	endbr64 
    9574:	89 f1                	mov    %esi,%ecx
    9576:	b8 01 00 00 00       	mov    $0x1,%eax
    957b:	d3 e0                	shl    %cl,%eax
    957d:	89 f9                	mov    %edi,%ecx
    957f:	83 e8 01             	sub    $0x1,%eax
    9582:	d3 e0                	shl    %cl,%eax
    9584:	f7 d0                	not    %eax
    9586:	c3                   	ret    
    9587:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    958e:	00 00 

0000000000009590 <bit_array_reset_range>:
    9590:	f3 0f 1e fa          	endbr64 
    9594:	48 89 f0             	mov    %rsi,%rax
    9597:	4c 8b 4f 10          	mov    0x10(%rdi),%r9
    959b:	83 e6 07             	and    $0x7,%esi
    959e:	b9 08 00 00 00       	mov    $0x8,%ecx
    95a3:	48 c1 e8 03          	shr    $0x3,%rax
    95a7:	48 29 f1             	sub    %rsi,%rcx
    95aa:	49 89 d0             	mov    %rdx,%r8
    95ad:	49 01 c1             	add    %rax,%r9
    95b0:	45 0f b6 11          	movzbl (%r9),%r10d
    95b4:	48 39 d1             	cmp    %rdx,%rcx
    95b7:	73 67                	jae    9620 <bit_array_reset_range+0x90>
    95b9:	ba 01 00 00 00       	mov    $0x1,%edx
    95be:	d3 e2                	shl    %cl,%edx
    95c0:	89 f1                	mov    %esi,%ecx
    95c2:	83 ea 01             	sub    $0x1,%edx
    95c5:	d3 e2                	shl    %cl,%edx
    95c7:	4a 8d 4c 06 f8       	lea    -0x8(%rsi,%r8,1),%rcx
    95cc:	f7 d2                	not    %edx
    95ce:	44 21 d2             	and    %r10d,%edx
    95d1:	41 88 11             	mov    %dl,(%r9)
    95d4:	48 83 f9 07          	cmp    $0x7,%rcx
    95d8:	76 66                	jbe    9640 <bit_array_reset_range+0xb0>
    95da:	48 8d 51 f8          	lea    -0x8(%rcx),%rdx
    95de:	48 83 c0 01          	add    $0x1,%rax
    95e2:	48 c1 ea 03          	shr    $0x3,%rdx
    95e6:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
    95ea:	eb 08                	jmp    95f4 <bit_array_reset_range+0x64>
    95ec:	0f 1f 40 00          	nopl   0x0(%rax)
    95f0:	48 83 c0 01          	add    $0x1,%rax
    95f4:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    95f8:	c6 04 02 00          	movb   $0x0,(%rdx,%rax,1)
    95fc:	48 39 f0             	cmp    %rsi,%rax
    95ff:	75 ef                	jne    95f0 <bit_array_reset_range+0x60>
    9601:	83 e1 07             	and    $0x7,%ecx
    9604:	48 85 c9             	test   %rcx,%rcx
    9607:	74 0f                	je     9618 <bit_array_reset_range+0x88>
    9609:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    960d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    9612:	d3 e0                	shl    %cl,%eax
    9614:	20 44 32 01          	and    %al,0x1(%rdx,%rsi,1)
    9618:	c3                   	ret    
    9619:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9620:	89 d1                	mov    %edx,%ecx
    9622:	b8 01 00 00 00       	mov    $0x1,%eax
    9627:	d3 e0                	shl    %cl,%eax
    9629:	89 f1                	mov    %esi,%ecx
    962b:	83 e8 01             	sub    $0x1,%eax
    962e:	d3 e0                	shl    %cl,%eax
    9630:	f7 d0                	not    %eax
    9632:	44 21 d0             	and    %r10d,%eax
    9635:	41 88 01             	mov    %al,(%r9)
    9638:	c3                   	ret    
    9639:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9640:	48 89 c6             	mov    %rax,%rsi
    9643:	eb bf                	jmp    9604 <bit_array_reset_range+0x74>
    9645:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    964c:	00 00 00 
    964f:	90                   	nop

0000000000009650 <bit_array_reset_all>:
    9650:	f3 0f 1e fa          	endbr64 
    9654:	48 8b 17             	mov    (%rdi),%rdx
    9657:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    965b:	31 f6                	xor    %esi,%esi
    965d:	e9 0e 76 00 00       	jmp    10c70 <memset>
    9662:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    9669:	00 00 00 
    966c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000009670 <bit_array_reattach>:
    9670:	f3 0f 1e fa          	endbr64 
    9674:	41 54                	push   %r12
    9676:	49 89 d4             	mov    %rdx,%r12
    9679:	55                   	push   %rbp
    967a:	48 89 f5             	mov    %rsi,%rbp
    967d:	53                   	push   %rbx
    967e:	48 89 fb             	mov    %rdi,%rbx
    9681:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    9685:	48 85 ff             	test   %rdi,%rdi
    9688:	74 05                	je     968f <bit_array_reattach+0x1f>
    968a:	e8 71 23 00 00       	call   ba00 <efree>
    968f:	48 8d 45 07          	lea    0x7(%rbp),%rax
    9693:	48 89 6b 08          	mov    %rbp,0x8(%rbx)
    9697:	48 c1 e8 03          	shr    $0x3,%rax
    969b:	4c 89 63 10          	mov    %r12,0x10(%rbx)
    969f:	48 89 03             	mov    %rax,(%rbx)
    96a2:	5b                   	pop    %rbx
    96a3:	5d                   	pop    %rbp
    96a4:	41 5c                	pop    %r12
    96a6:	c3                   	ret    
    96a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    96ae:	00 00 

00000000000096b0 <bit_array_split>:
    96b0:	f3 0f 1e fa          	endbr64 
    96b4:	41 57                	push   %r15
    96b6:	41 56                	push   %r14
    96b8:	41 55                	push   %r13
    96ba:	41 54                	push   %r12
    96bc:	55                   	push   %rbp
    96bd:	53                   	push   %rbx
    96be:	48 89 fb             	mov    %rdi,%rbx
    96c1:	48 83 ec 38          	sub    $0x38,%rsp
    96c5:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    96ca:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    96cf:	48 85 f6             	test   %rsi,%rsi
    96d2:	0f 84 88 01 00 00    	je     9860 <bit_array_split+0x1b0>
    96d8:	4c 8b 77 08          	mov    0x8(%rdi),%r14
    96dc:	45 31 e4             	xor    %r12d,%r12d
    96df:	4c 39 f6             	cmp    %r14,%rsi
    96e2:	72 24                	jb     9708 <bit_array_split+0x58>
    96e4:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    96e9:	48 89 18             	mov    %rbx,(%rax)
    96ec:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    96f1:	4c 89 20             	mov    %r12,(%rax)
    96f4:	31 c0                	xor    %eax,%eax
    96f6:	48 83 c4 38          	add    $0x38,%rsp
    96fa:	5b                   	pop    %rbx
    96fb:	5d                   	pop    %rbp
    96fc:	41 5c                	pop    %r12
    96fe:	41 5d                	pop    %r13
    9700:	41 5e                	pop    %r14
    9702:	41 5f                	pop    %r15
    9704:	c3                   	ret    
    9705:	0f 1f 00             	nopl   (%rax)
    9708:	48 8d 46 07          	lea    0x7(%rsi),%rax
    970c:	48 89 f5             	mov    %rsi,%rbp
    970f:	41 89 f7             	mov    %esi,%r15d
    9712:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
    9717:	48 c1 e8 03          	shr    $0x3,%rax
    971b:	49 29 f6             	sub    %rsi,%r14
    971e:	48 c1 ed 03          	shr    $0x3,%rbp
    9722:	41 83 e7 07          	and    $0x7,%r15d
    9726:	48 89 c7             	mov    %rax,%rdi
    9729:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    972e:	e8 4d 20 00 00       	call   b780 <emalloc>
    9733:	49 89 c5             	mov    %rax,%r13
    9736:	48 85 c0             	test   %rax,%rax
    9739:	0f 84 98 01 00 00    	je     98d7 <bit_array_split+0x227>
    973f:	48 85 ed             	test   %rbp,%rbp
    9742:	0f 84 80 01 00 00    	je     98c8 <bit_array_split+0x218>
    9748:	31 c0                	xor    %eax,%eax
    974a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9750:	48 8b 53 10          	mov    0x10(%rbx),%rdx
    9754:	0f b6 14 02          	movzbl (%rdx,%rax,1),%edx
    9758:	41 88 54 05 00       	mov    %dl,0x0(%r13,%rax,1)
    975d:	48 83 c0 01          	add    $0x1,%rax
    9761:	48 39 c5             	cmp    %rax,%rbp
    9764:	75 ea                	jne    9750 <bit_array_split+0xa0>
    9766:	48 89 ea             	mov    %rbp,%rdx
    9769:	45 84 ff             	test   %r15b,%r15b
    976c:	0f 85 fe 00 00 00    	jne    9870 <bit_array_split+0x1c0>
    9772:	4c 89 f7             	mov    %r14,%rdi
    9775:	e8 26 fa ff ff       	call   91a0 <bit_array_new>
    977a:	49 89 c4             	mov    %rax,%r12
    977d:	48 85 c0             	test   %rax,%rax
    9780:	0f 84 49 01 00 00    	je     98cf <bit_array_split+0x21f>
    9786:	49 89 ea             	mov    %rbp,%r10
    9789:	31 d2                	xor    %edx,%edx
    978b:	49 83 fe 07          	cmp    $0x7,%r14
    978f:	76 78                	jbe    9809 <bit_array_split+0x159>
    9791:	49 8d 46 f8          	lea    -0x8(%r14),%rax
    9795:	45 0f b6 df          	movzbl %r15b,%r11d
    9799:	41 b9 08 00 00 00    	mov    $0x8,%r9d
    979f:	31 ff                	xor    %edi,%edi
    97a1:	48 c1 e8 03          	shr    $0x3,%rax
    97a5:	48 8d 55 01          	lea    0x1(%rbp),%rdx
    97a9:	44 88 7c 24 2f       	mov    %r15b,0x2f(%rsp)
    97ae:	45 29 d9             	sub    %r11d,%r9d
    97b1:	48 89 c6             	mov    %rax,%rsi
    97b4:	4c 8d 14 02          	lea    (%rdx,%rax,1),%r10
    97b8:	eb 0a                	jmp    97c4 <bit_array_split+0x114>
    97ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    97c0:	48 83 c2 01          	add    $0x1,%rdx
    97c4:	4c 8b 43 10          	mov    0x10(%rbx),%r8
    97c8:	48 89 e8             	mov    %rbp,%rax
    97cb:	44 89 d9             	mov    %r11d,%ecx
    97ce:	49 89 ff             	mov    %rdi,%r15
    97d1:	48 89 d5             	mov    %rdx,%rbp
    97d4:	48 83 c7 01          	add    $0x1,%rdi
    97d8:	41 0f b6 04 00       	movzbl (%r8,%rax,1),%eax
    97dd:	45 0f b6 04 10       	movzbl (%r8,%rdx,1),%r8d
    97e2:	d3 f8                	sar    %cl,%eax
    97e4:	44 89 c9             	mov    %r9d,%ecx
    97e7:	41 d3 e0             	shl    %cl,%r8d
    97ea:	49 8b 4c 24 10       	mov    0x10(%r12),%rcx
    97ef:	44 09 c0             	or     %r8d,%eax
    97f2:	42 88 04 39          	mov    %al,(%rcx,%r15,1)
    97f6:	4c 39 d2             	cmp    %r10,%rdx
    97f9:	75 c5                	jne    97c0 <bit_array_split+0x110>
    97fb:	44 0f b6 7c 24 2f    	movzbl 0x2f(%rsp),%r15d
    9801:	48 8d 56 01          	lea    0x1(%rsi),%rdx
    9805:	41 83 e6 07          	and    $0x7,%r14d
    9809:	b8 08 00 00 00       	mov    $0x8,%eax
    980e:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    9812:	44 29 f8             	sub    %r15d,%eax
    9815:	48 0f be c0          	movsbq %al,%rax
    9819:	4c 39 f0             	cmp    %r14,%rax
    981c:	72 72                	jb     9890 <bit_array_split+0x1e0>
    981e:	4d 85 f6             	test   %r14,%r14
    9821:	74 16                	je     9839 <bit_array_split+0x189>
    9823:	42 0f b6 04 17       	movzbl (%rdi,%r10,1),%eax
    9828:	49 8b 74 24 10       	mov    0x10(%r12),%rsi
    982d:	44 89 f9             	mov    %r15d,%ecx
    9830:	d3 f8                	sar    %cl,%eax
    9832:	88 04 16             	mov    %al,(%rsi,%rdx,1)
    9835:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    9839:	48 85 ff             	test   %rdi,%rdi
    983c:	74 05                	je     9843 <bit_array_split+0x193>
    983e:	e8 bd 21 00 00       	call   ba00 <efree>
    9843:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    9848:	4c 89 6b 10          	mov    %r13,0x10(%rbx)
    984c:	48 89 03             	mov    %rax,(%rbx)
    984f:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    9854:	48 89 43 08          	mov    %rax,0x8(%rbx)
    9858:	e9 87 fe ff ff       	jmp    96e4 <bit_array_split+0x34>
    985d:	0f 1f 00             	nopl   (%rax)
    9860:	49 89 fc             	mov    %rdi,%r12
    9863:	31 db                	xor    %ebx,%ebx
    9865:	e9 7a fe ff ff       	jmp    96e4 <bit_array_split+0x34>
    986a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9870:	48 8b 73 10          	mov    0x10(%rbx),%rsi
    9874:	b8 01 00 00 00       	mov    $0x1,%eax
    9879:	44 89 f9             	mov    %r15d,%ecx
    987c:	d3 e0                	shl    %cl,%eax
    987e:	83 e8 01             	sub    $0x1,%eax
    9881:	22 04 16             	and    (%rsi,%rdx,1),%al
    9884:	41 88 44 15 00       	mov    %al,0x0(%r13,%rdx,1)
    9889:	e9 e4 fe ff ff       	jmp    9772 <bit_array_split+0xc2>
    988e:	66 90                	xchg   %ax,%ax
    9890:	42 0f b6 44 17 01    	movzbl 0x1(%rdi,%r10,1),%eax
    9896:	45 0f b6 c7          	movzbl %r15b,%r8d
    989a:	b9 08 00 00 00       	mov    $0x8,%ecx
    989f:	42 0f b6 3c 17       	movzbl (%rdi,%r10,1),%edi
    98a4:	44 29 c1             	sub    %r8d,%ecx
    98a7:	49 8b 74 24 10       	mov    0x10(%r12),%rsi
    98ac:	d3 e0                	shl    %cl,%eax
    98ae:	44 89 f9             	mov    %r15d,%ecx
    98b1:	d3 ff                	sar    %cl,%edi
    98b3:	09 f8                	or     %edi,%eax
    98b5:	88 04 16             	mov    %al,(%rsi,%rdx,1)
    98b8:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    98bc:	e9 78 ff ff ff       	jmp    9839 <bit_array_split+0x189>
    98c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    98c8:	31 d2                	xor    %edx,%edx
    98ca:	e9 9a fe ff ff       	jmp    9769 <bit_array_split+0xb9>
    98cf:	4c 89 ef             	mov    %r13,%rdi
    98d2:	e8 29 21 00 00       	call   ba00 <efree>
    98d7:	b8 0c 00 00 00       	mov    $0xc,%eax
    98dc:	e9 15 fe ff ff       	jmp    96f6 <bit_array_split+0x46>
    98e1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    98e8:	00 00 00 
    98eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000098f0 <ema_do_uncommit_real>:
    98f0:	55                   	push   %rbp
    98f1:	48 89 e5             	mov    %rsp,%rbp
    98f4:	41 57                	push   %r15
    98f6:	41 56                	push   %r14
    98f8:	41 55                	push   %r13
    98fa:	41 54                	push   %r12
    98fc:	53                   	push   %rbx
    98fd:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    9901:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
    9908:	89 4c 24 28          	mov    %ecx,0x28(%rsp)
    990c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    9913:	00 00 
    9915:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
    991c:	00 
    991d:	48 8b 47 18          	mov    0x18(%rdi),%rax
    9921:	f6 47 10 01          	testb  $0x1,0x10(%rdi)
    9925:	0f 85 68 01 00 00    	jne    9a93 <ema_do_uncommit_real+0x1a3>
    992b:	25 00 ff 00 00       	and    $0xff00,%eax
    9930:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9934:	48 89 fb             	mov    %rdi,%rbx
    9937:	49 89 f7             	mov    %rsi,%r15
    993a:	89 44 24 24          	mov    %eax,0x24(%rsp)
    993e:	8b 44 24 28          	mov    0x28(%rsp),%eax
    9942:	49 89 d4             	mov    %rdx,%r12
    9945:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
    994c:	00 00 
    994e:	80 cc 04             	or     $0x4,%ah
    9951:	0f 11 44 24 48       	movups %xmm0,0x48(%rsp)
    9956:	48 c7 44 24 40 10 04 	movq   $0x410,0x40(%rsp)
    995d:	00 00 
    995f:	89 44 24 2c          	mov    %eax,0x2c(%rsp)
    9963:	0f 11 44 24 58       	movups %xmm0,0x58(%rsp)
    9968:	0f 11 44 24 68       	movups %xmm0,0x68(%rsp)
    996d:	0f 1f 00             	nopl   (%rax)
    9970:	4d 39 e7             	cmp    %r12,%r15
    9973:	72 17                	jb     998c <ema_do_uncommit_real+0x9c>
    9975:	e9 19 01 00 00       	jmp    9a93 <ema_do_uncommit_real+0x1a3>
    997a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9980:	49 81 c7 00 10 00 00 	add    $0x1000,%r15
    9987:	4d 39 e7             	cmp    %r12,%r15
    998a:	73 17                	jae    99a3 <ema_do_uncommit_real+0xb3>
    998c:	4c 89 fe             	mov    %r15,%rsi
    998f:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    9993:	48 2b 33             	sub    (%rbx),%rsi
    9996:	48 c1 ee 0c          	shr    $0xc,%rsi
    999a:	e8 01 f9 ff ff       	call   92a0 <bit_array_test>
    999f:	84 c0                	test   %al,%al
    99a1:	74 dd                	je     9980 <ema_do_uncommit_real+0x90>
    99a3:	4c 89 7c 24 38       	mov    %r15,0x38(%rsp)
    99a8:	4d 39 fc             	cmp    %r15,%r12
    99ab:	0f 84 e2 00 00 00    	je     9a93 <ema_do_uncommit_real+0x1a3>
    99b1:	49 81 c7 00 10 00 00 	add    $0x1000,%r15
    99b8:	4d 39 e7             	cmp    %r12,%r15
    99bb:	72 17                	jb     99d4 <ema_do_uncommit_real+0xe4>
    99bd:	e9 f5 00 00 00       	jmp    9ab7 <ema_do_uncommit_real+0x1c7>
    99c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    99c8:	49 81 c7 00 10 00 00 	add    $0x1000,%r15
    99cf:	4d 39 e7             	cmp    %r12,%r15
    99d2:	73 17                	jae    99eb <ema_do_uncommit_real+0xfb>
    99d4:	4c 89 fe             	mov    %r15,%rsi
    99d7:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    99db:	48 2b 33             	sub    (%rbx),%rsi
    99de:	48 c1 ee 0c          	shr    $0xc,%rsi
    99e2:	e8 b9 f8 ff ff       	call   92a0 <bit_array_test>
    99e7:	84 c0                	test   %al,%al
    99e9:	75 dd                	jne    99c8 <ema_do_uncommit_real+0xd8>
    99eb:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
    99f0:	4c 89 f8             	mov    %r15,%rax
    99f3:	48 29 c8             	sub    %rcx,%rax
    99f6:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    99fb:	8b 54 24 24          	mov    0x24(%rsp),%edx
    99ff:	8b 44 24 28          	mov    0x28(%rsp),%eax
    9a03:	8b 4c 24 2c          	mov    0x2c(%rsp),%ecx
    9a07:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
    9a0c:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
    9a11:	09 c2                	or     %eax,%edx
    9a13:	e8 d8 c1 ff ff       	call   5bf0 <sgx_mm_modify_ocall>
    9a18:	85 c0                	test   %eax,%eax
    9a1a:	75 70                	jne    9a8c <ema_do_uncommit_real+0x19c>
    9a1c:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    9a21:	4c 8d 6c 24 40       	lea    0x40(%rsp),%r13
    9a26:	49 89 c6             	mov    %rax,%r14
    9a29:	4c 39 f8             	cmp    %r15,%rax
    9a2c:	73 21                	jae    9a4f <ema_do_uncommit_real+0x15f>
    9a2e:	66 90                	xchg   %ax,%ax
    9a30:	4c 89 f6             	mov    %r14,%rsi
    9a33:	4c 89 ef             	mov    %r13,%rdi
    9a36:	e8 84 8e 00 00       	call   128bf <do_eaccept>
    9a3b:	85 c0                	test   %eax,%eax
    9a3d:	0f 85 82 00 00 00    	jne    9ac5 <ema_do_uncommit_real+0x1d5>
    9a43:	49 81 c6 00 10 00 00 	add    $0x1000,%r14
    9a4a:	4d 39 fe             	cmp    %r15,%r14
    9a4d:	72 e1                	jb     9a30 <ema_do_uncommit_real+0x140>
    9a4f:	4c 8b 74 24 30       	mov    0x30(%rsp),%r14
    9a54:	4c 8b 6c 24 38       	mov    0x38(%rsp),%r13
    9a59:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    9a5d:	4c 89 f2             	mov    %r14,%rdx
    9a60:	4c 89 ee             	mov    %r13,%rsi
    9a63:	48 2b 33             	sub    (%rbx),%rsi
    9a66:	48 c1 ea 0c          	shr    $0xc,%rdx
    9a6a:	48 c1 ee 0c          	shr    $0xc,%rsi
    9a6e:	e8 1d fb ff ff       	call   9590 <bit_array_reset_range>
    9a73:	8b 4c 24 2c          	mov    0x2c(%rsp),%ecx
    9a77:	4c 89 f6             	mov    %r14,%rsi
    9a7a:	4c 89 ef             	mov    %r13,%rdi
    9a7d:	89 ca                	mov    %ecx,%edx
    9a7f:	e8 6c c1 ff ff       	call   5bf0 <sgx_mm_modify_ocall>
    9a84:	85 c0                	test   %eax,%eax
    9a86:	0f 84 e4 fe ff ff    	je     9970 <ema_do_uncommit_real+0x80>
    9a8c:	b8 0e 00 00 00       	mov    $0xe,%eax
    9a91:	eb 02                	jmp    9a95 <ema_do_uncommit_real+0x1a5>
    9a93:	31 c0                	xor    %eax,%eax
    9a95:	48 8b 94 24 b8 00 00 	mov    0xb8(%rsp),%rdx
    9a9c:	00 
    9a9d:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    9aa4:	00 00 
    9aa6:	75 22                	jne    9aca <ema_do_uncommit_real+0x1da>
    9aa8:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    9aac:	5b                   	pop    %rbx
    9aad:	41 5c                	pop    %r12
    9aaf:	41 5d                	pop    %r13
    9ab1:	41 5e                	pop    %r14
    9ab3:	41 5f                	pop    %r15
    9ab5:	5d                   	pop    %rbp
    9ab6:	c3                   	ret    
    9ab7:	48 c7 44 24 30 00 10 	movq   $0x1000,0x30(%rsp)
    9abe:	00 00 
    9ac0:	e9 36 ff ff ff       	jmp    99fb <ema_do_uncommit_real+0x10b>
    9ac5:	e8 6d 8e 00 00       	call   12937 <abort>
    9aca:	e8 31 73 00 00       	call   10e00 <__stack_chk_fail>
    9acf:	90                   	nop

0000000000009ad0 <get_ema_alloc_flags>:
    9ad0:	f3 0f 1e fa          	endbr64 
    9ad4:	8b 47 10             	mov    0x10(%rdi),%eax
    9ad7:	c3                   	ret    
    9ad8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    9adf:	00 

0000000000009ae0 <get_ema_si_flags>:
    9ae0:	f3 0f 1e fa          	endbr64 
    9ae4:	48 8b 47 18          	mov    0x18(%rdi),%rax
    9ae8:	c3                   	ret    
    9ae9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000009af0 <ema_fault_handler>:
    9af0:	f3 0f 1e fa          	endbr64 
    9af4:	48 85 f6             	test   %rsi,%rsi
    9af7:	74 07                	je     9b00 <ema_fault_handler+0x10>
    9af9:	48 8b 47 30          	mov    0x30(%rdi),%rax
    9afd:	48 89 06             	mov    %rax,(%rsi)
    9b00:	48 8b 47 28          	mov    0x28(%rdi),%rax
    9b04:	c3                   	ret    
    9b05:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    9b0c:	00 00 00 
    9b0f:	90                   	nop

0000000000009b10 <ema_set_eaccept_full>:
    9b10:	f3 0f 1e fa          	endbr64 
    9b14:	53                   	push   %rbx
    9b15:	48 89 fb             	mov    %rdi,%rbx
    9b18:	48 8b 7f 20          	mov    0x20(%rdi),%rdi
    9b1c:	48 85 ff             	test   %rdi,%rdi
    9b1f:	74 0f                	je     9b30 <ema_set_eaccept_full+0x20>
    9b21:	e8 2a fa ff ff       	call   9550 <bit_array_set_all>
    9b26:	31 c0                	xor    %eax,%eax
    9b28:	5b                   	pop    %rbx
    9b29:	c3                   	ret    
    9b2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9b30:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    9b34:	48 c1 ef 0c          	shr    $0xc,%rdi
    9b38:	e8 e3 f6 ff ff       	call   9220 <bit_array_new_set>
    9b3d:	48 89 43 20          	mov    %rax,0x20(%rbx)
    9b41:	48 85 c0             	test   %rax,%rax
    9b44:	75 e0                	jne    9b26 <ema_set_eaccept_full+0x16>
    9b46:	b8 0c 00 00 00       	mov    $0xc,%eax
    9b4b:	5b                   	pop    %rbx
    9b4c:	c3                   	ret    
    9b4d:	0f 1f 00             	nopl   (%rax)

0000000000009b50 <ema_clear_eaccept_full>:
    9b50:	f3 0f 1e fa          	endbr64 
    9b54:	53                   	push   %rbx
    9b55:	48 89 fb             	mov    %rdi,%rbx
    9b58:	48 8b 7f 20          	mov    0x20(%rdi),%rdi
    9b5c:	48 85 ff             	test   %rdi,%rdi
    9b5f:	74 0f                	je     9b70 <ema_clear_eaccept_full+0x20>
    9b61:	e8 ea fa ff ff       	call   9650 <bit_array_reset_all>
    9b66:	31 c0                	xor    %eax,%eax
    9b68:	5b                   	pop    %rbx
    9b69:	c3                   	ret    
    9b6a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9b70:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    9b74:	48 c1 ef 0c          	shr    $0xc,%rdi
    9b78:	e8 d3 f6 ff ff       	call   9250 <bit_array_new_reset>
    9b7d:	48 89 43 20          	mov    %rax,0x20(%rbx)
    9b81:	48 85 c0             	test   %rax,%rax
    9b84:	75 e0                	jne    9b66 <ema_clear_eaccept_full+0x16>
    9b86:	b8 0c 00 00 00       	mov    $0xc,%eax
    9b8b:	5b                   	pop    %rbx
    9b8c:	c3                   	ret    
    9b8d:	0f 1f 00             	nopl   (%rax)

0000000000009b90 <ema_set_eaccept>:
    9b90:	f3 0f 1e fa          	endbr64 
    9b94:	48 85 ff             	test   %rdi,%rdi
    9b97:	74 6f                	je     9c08 <ema_set_eaccept+0x78>
    9b99:	55                   	push   %rbp
    9b9a:	48 89 fd             	mov    %rdi,%rbp
    9b9d:	48 83 ec 10          	sub    $0x10,%rsp
    9ba1:	48 8b 07             	mov    (%rdi),%rax
    9ba4:	48 8b 7f 20          	mov    0x20(%rdi),%rdi
    9ba8:	48 29 c6             	sub    %rax,%rsi
    9bab:	48 29 c2             	sub    %rax,%rdx
    9bae:	48 c1 ee 0c          	shr    $0xc,%rsi
    9bb2:	48 c1 ea 0c          	shr    $0xc,%rdx
    9bb6:	48 85 ff             	test   %rdi,%rdi
    9bb9:	74 15                	je     9bd0 <ema_set_eaccept+0x40>
    9bbb:	48 29 f2             	sub    %rsi,%rdx
    9bbe:	e8 cd f8 ff ff       	call   9490 <bit_array_set_range>
    9bc3:	31 c0                	xor    %eax,%eax
    9bc5:	48 83 c4 10          	add    $0x10,%rsp
    9bc9:	5d                   	pop    %rbp
    9bca:	c3                   	ret    
    9bcb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9bd0:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
    9bd4:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    9bd9:	48 89 34 24          	mov    %rsi,(%rsp)
    9bdd:	48 c1 ef 0c          	shr    $0xc,%rdi
    9be1:	e8 6a f6 ff ff       	call   9250 <bit_array_new_reset>
    9be6:	48 8b 34 24          	mov    (%rsp),%rsi
    9bea:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    9bef:	48 85 c0             	test   %rax,%rax
    9bf2:	48 89 45 20          	mov    %rax,0x20(%rbp)
    9bf6:	48 89 c7             	mov    %rax,%rdi
    9bf9:	75 c0                	jne    9bbb <ema_set_eaccept+0x2b>
    9bfb:	b8 0c 00 00 00       	mov    $0xc,%eax
    9c00:	eb c3                	jmp    9bc5 <ema_set_eaccept+0x35>
    9c02:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9c08:	b8 16 00 00 00       	mov    $0x16,%eax
    9c0d:	c3                   	ret    
    9c0e:	66 90                	xchg   %ax,%ax

0000000000009c10 <ema_page_committed>:
    9c10:	f3 0f 1e fa          	endbr64 
    9c14:	48 8b 47 20          	mov    0x20(%rdi),%rax
    9c18:	48 85 c0             	test   %rax,%rax
    9c1b:	74 13                	je     9c30 <ema_page_committed+0x20>
    9c1d:	48 2b 37             	sub    (%rdi),%rsi
    9c20:	48 89 c7             	mov    %rax,%rdi
    9c23:	48 c1 ee 0c          	shr    $0xc,%rsi
    9c27:	e9 74 f6 ff ff       	jmp    92a0 <bit_array_test>
    9c2c:	0f 1f 40 00          	nopl   0x0(%rax)
    9c30:	31 c0                	xor    %eax,%eax
    9c32:	c3                   	ret    
    9c33:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    9c3a:	00 00 00 
    9c3d:	0f 1f 00             	nopl   (%rax)

0000000000009c40 <search_ema>:
    9c40:	f3 0f 1e fa          	endbr64 
    9c44:	48 8b 0f             	mov    (%rdi),%rcx
    9c47:	48 8b 41 38          	mov    0x38(%rcx),%rax
    9c4b:	48 39 c1             	cmp    %rax,%rcx
    9c4e:	74 1a                	je     9c6a <search_ema+0x2a>
    9c50:	48 8b 10             	mov    (%rax),%rdx
    9c53:	48 39 d6             	cmp    %rdx,%rsi
    9c56:	72 09                	jb     9c61 <search_ema+0x21>
    9c58:	48 03 50 08          	add    0x8(%rax),%rdx
    9c5c:	48 39 d6             	cmp    %rdx,%rsi
    9c5f:	72 0b                	jb     9c6c <search_ema+0x2c>
    9c61:	48 8b 40 38          	mov    0x38(%rax),%rax
    9c65:	48 39 c1             	cmp    %rax,%rcx
    9c68:	75 e6                	jne    9c50 <search_ema+0x10>
    9c6a:	31 c0                	xor    %eax,%eax
    9c6c:	c3                   	ret    
    9c6d:	0f 1f 00             	nopl   (%rax)

0000000000009c70 <insert_ema>:
    9c70:	f3 0f 1e fa          	endbr64 
    9c74:	48 8b 56 40          	mov    0x40(%rsi),%rdx
    9c78:	66 48 0f 6e c6       	movq   %rsi,%xmm0
    9c7d:	48 89 f8             	mov    %rdi,%rax
    9c80:	66 48 0f 6e ca       	movq   %rdx,%xmm1
    9c85:	66 0f 6c c1          	punpcklqdq %xmm1,%xmm0
    9c89:	0f 11 47 38          	movups %xmm0,0x38(%rdi)
    9c8d:	48 89 7a 38          	mov    %rdi,0x38(%rdx)
    9c91:	48 89 7e 40          	mov    %rdi,0x40(%rsi)
    9c95:	c3                   	ret    
    9c96:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    9c9d:	00 00 00 

0000000000009ca0 <push_back_ema>:
    9ca0:	f3 0f 1e fa          	endbr64 
    9ca4:	48 8b 07             	mov    (%rdi),%rax
    9ca7:	48 8b 50 40          	mov    0x40(%rax),%rdx
    9cab:	66 48 0f 6e c0       	movq   %rax,%xmm0
    9cb0:	66 48 0f 6e ca       	movq   %rdx,%xmm1
    9cb5:	66 0f 6c c1          	punpcklqdq %xmm1,%xmm0
    9cb9:	0f 11 46 38          	movups %xmm0,0x38(%rsi)
    9cbd:	48 89 72 38          	mov    %rsi,0x38(%rdx)
    9cc1:	48 89 70 40          	mov    %rsi,0x40(%rax)
    9cc5:	c3                   	ret    
    9cc6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    9ccd:	00 00 00 

0000000000009cd0 <search_ema_range>:
    9cd0:	f3 0f 1e fa          	endbr64 
    9cd4:	4c 8b 0f             	mov    (%rdi),%r9
    9cd7:	49 89 fa             	mov    %rdi,%r10
    9cda:	49 8b 41 38          	mov    0x38(%r9),%rax
    9cde:	49 39 c1             	cmp    %rax,%r9
    9ce1:	75 0e                	jne    9cf1 <search_ema_range+0x21>
    9ce3:	eb 4b                	jmp    9d30 <search_ema_range+0x60>
    9ce5:	0f 1f 00             	nopl   (%rax)
    9ce8:	48 8b 40 38          	mov    0x38(%rax),%rax
    9cec:	49 39 c1             	cmp    %rax,%r9
    9cef:	74 3f                	je     9d30 <search_ema_range+0x60>
    9cf1:	48 8b 38             	mov    (%rax),%rdi
    9cf4:	48 03 78 08          	add    0x8(%rax),%rdi
    9cf8:	48 39 fe             	cmp    %rdi,%rsi
    9cfb:	73 eb                	jae    9ce8 <search_ema_range+0x18>
    9cfd:	49 39 c1             	cmp    %rax,%r9
    9d00:	74 2e                	je     9d30 <search_ema_range+0x60>
    9d02:	48 39 10             	cmp    %rdx,(%rax)
    9d05:	73 29                	jae    9d30 <search_ema_range+0x60>
    9d07:	48 89 01             	mov    %rax,(%rcx)
    9d0a:	49 8b 0a             	mov    (%r10),%rcx
    9d0d:	48 39 c1             	cmp    %rax,%rcx
    9d10:	74 14                	je     9d26 <search_ema_range+0x56>
    9d12:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9d18:	48 8b 40 38          	mov    0x38(%rax),%rax
    9d1c:	48 39 c1             	cmp    %rax,%rcx
    9d1f:	74 05                	je     9d26 <search_ema_range+0x56>
    9d21:	48 39 10             	cmp    %rdx,(%rax)
    9d24:	72 f2                	jb     9d18 <search_ema_range+0x48>
    9d26:	31 d2                	xor    %edx,%edx
    9d28:	49 89 00             	mov    %rax,(%r8)
    9d2b:	89 d0                	mov    %edx,%eax
    9d2d:	c3                   	ret    
    9d2e:	66 90                	xchg   %ax,%ax
    9d30:	48 c7 01 00 00 00 00 	movq   $0x0,(%rcx)
    9d37:	31 c0                	xor    %eax,%eax
    9d39:	ba ff ff ff ff       	mov    $0xffffffff,%edx
    9d3e:	eb e8                	jmp    9d28 <search_ema_range+0x58>

0000000000009d40 <ema_split>:
    9d40:	f3 0f 1e fa          	endbr64 
    9d44:	41 56                	push   %r14
    9d46:	41 89 d6             	mov    %edx,%r14d
    9d49:	41 55                	push   %r13
    9d4b:	49 89 cd             	mov    %rcx,%r13
    9d4e:	41 54                	push   %r12
    9d50:	49 89 f4             	mov    %rsi,%r12
    9d53:	55                   	push   %rbp
    9d54:	53                   	push   %rbx
    9d55:	48 89 fb             	mov    %rdi,%rbx
    9d58:	bf 48 00 00 00       	mov    $0x48,%edi
    9d5d:	48 83 ec 30          	sub    $0x30,%rsp
    9d61:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    9d68:	00 00 
    9d6a:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    9d6f:	31 c0                	xor    %eax,%eax
    9d71:	e8 0a 1a 00 00       	call   b780 <emalloc>
    9d76:	48 85 c0             	test   %rax,%rax
    9d79:	0f 84 39 01 00 00    	je     9eb8 <ema_split+0x178>
    9d7f:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
    9d86:	00 00 
    9d88:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    9d8c:	48 89 c5             	mov    %rax,%rbp
    9d8f:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    9d96:	00 00 
    9d98:	48 85 ff             	test   %rdi,%rdi
    9d9b:	74 21                	je     9dbe <ema_split+0x7e>
    9d9d:	4c 89 e6             	mov    %r12,%rsi
    9da0:	48 8d 4c 24 20       	lea    0x20(%rsp),%rcx
    9da5:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
    9daa:	48 2b 33             	sub    (%rbx),%rsi
    9dad:	48 c1 ee 0c          	shr    $0xc,%rsi
    9db1:	e8 fa f8 ff ff       	call   96b0 <bit_array_split>
    9db6:	85 c0                	test   %eax,%eax
    9db8:	0f 85 e2 00 00 00    	jne    9ea0 <ema_split+0x160>
    9dbe:	ba 48 00 00 00       	mov    $0x48,%edx
    9dc3:	48 89 de             	mov    %rbx,%rsi
    9dc6:	48 89 ef             	mov    %rbp,%rdi
    9dc9:	e8 62 6c 00 00       	call   10a30 <memcpy>
    9dce:	45 84 f6             	test   %r14b,%r14b
    9dd1:	0f 85 99 00 00 00    	jne    9e70 <ema_split+0x130>
    9dd7:	48 8b 43 38          	mov    0x38(%rbx),%rax
    9ddb:	48 89 d9             	mov    %rbx,%rcx
    9dde:	48 8b 50 40          	mov    0x40(%rax),%rdx
    9de2:	66 48 0f 6e c0       	movq   %rax,%xmm0
    9de7:	66 48 0f 6e da       	movq   %rdx,%xmm3
    9dec:	66 0f 6c c3          	punpcklqdq %xmm3,%xmm0
    9df0:	0f 11 45 38          	movups %xmm0,0x38(%rbp)
    9df4:	48 89 6a 38          	mov    %rbp,0x38(%rdx)
    9df8:	48 89 ea             	mov    %rbp,%rdx
    9dfb:	48 89 68 40          	mov    %rbp,0x40(%rax)
    9dff:	48 8b 03             	mov    (%rbx),%rax
    9e02:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    9e06:	4c 89 e7             	mov    %r12,%rdi
    9e09:	48 29 c7             	sub    %rax,%rdi
    9e0c:	66 48 0f 6e c0       	movq   %rax,%xmm0
    9e11:	48 01 f0             	add    %rsi,%rax
    9e14:	66 48 0f 6e cf       	movq   %rdi,%xmm1
    9e19:	4c 29 e0             	sub    %r12,%rax
    9e1c:	48 83 7b 20 00       	cmpq   $0x0,0x20(%rbx)
    9e21:	66 0f 6c c1          	punpcklqdq %xmm1,%xmm0
    9e25:	0f 11 01             	movups %xmm0,(%rcx)
    9e28:	4c 89 22             	mov    %r12,(%rdx)
    9e2b:	48 89 42 08          	mov    %rax,0x8(%rdx)
    9e2f:	74 12                	je     9e43 <ema_split+0x103>
    9e31:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    9e36:	48 89 41 20          	mov    %rax,0x20(%rcx)
    9e3a:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    9e3f:	48 89 42 20          	mov    %rax,0x20(%rdx)
    9e43:	49 89 6d 00          	mov    %rbp,0x0(%r13)
    9e47:	31 c0                	xor    %eax,%eax
    9e49:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    9e4e:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    9e55:	00 00 
    9e57:	75 66                	jne    9ebf <ema_split+0x17f>
    9e59:	48 83 c4 30          	add    $0x30,%rsp
    9e5d:	5b                   	pop    %rbx
    9e5e:	5d                   	pop    %rbp
    9e5f:	41 5c                	pop    %r12
    9e61:	41 5d                	pop    %r13
    9e63:	41 5e                	pop    %r14
    9e65:	c3                   	ret    
    9e66:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    9e6d:	00 00 00 
    9e70:	48 8b 43 40          	mov    0x40(%rbx),%rax
    9e74:	66 48 0f 6e c3       	movq   %rbx,%xmm0
    9e79:	48 89 da             	mov    %rbx,%rdx
    9e7c:	48 89 e9             	mov    %rbp,%rcx
    9e7f:	66 48 0f 6e d0       	movq   %rax,%xmm2
    9e84:	66 0f 6c c2          	punpcklqdq %xmm2,%xmm0
    9e88:	0f 11 45 38          	movups %xmm0,0x38(%rbp)
    9e8c:	48 89 68 38          	mov    %rbp,0x38(%rax)
    9e90:	48 89 6b 40          	mov    %rbp,0x40(%rbx)
    9e94:	e9 66 ff ff ff       	jmp    9dff <ema_split+0xbf>
    9e99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9ea0:	48 89 ef             	mov    %rbp,%rdi
    9ea3:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    9ea7:	e8 54 1b 00 00       	call   ba00 <efree>
    9eac:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    9eb0:	eb 97                	jmp    9e49 <ema_split+0x109>
    9eb2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9eb8:	b8 0c 00 00 00       	mov    $0xc,%eax
    9ebd:	eb 8a                	jmp    9e49 <ema_split+0x109>
    9ebf:	e8 3c 6f 00 00       	call   10e00 <__stack_chk_fail>
    9ec4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    9ecb:	00 00 00 
    9ece:	66 90                	xchg   %ax,%ax

0000000000009ed0 <ema_split_ex>:
    9ed0:	f3 0f 1e fa          	endbr64 
    9ed4:	41 54                	push   %r12
    9ed6:	49 89 cc             	mov    %rcx,%r12
    9ed9:	55                   	push   %rbp
    9eda:	48 89 d5             	mov    %rdx,%rbp
    9edd:	53                   	push   %rbx
    9ede:	48 89 fb             	mov    %rdi,%rbx
    9ee1:	48 83 ec 10          	sub    $0x10,%rsp
    9ee5:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    9eec:	00 00 
    9eee:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    9ef3:	48 8b 07             	mov    (%rdi),%rax
    9ef6:	48 39 f0             	cmp    %rsi,%rax
    9ef9:	72 35                	jb     9f30 <ema_split_ex+0x60>
    9efb:	48 03 43 08          	add    0x8(%rbx),%rax
    9eff:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    9f06:	00 
    9f07:	48 39 c5             	cmp    %rax,%rbp
    9f0a:	72 44                	jb     9f50 <ema_split_ex+0x80>
    9f0c:	48 89 d8             	mov    %rbx,%rax
    9f0f:	49 89 04 24          	mov    %rax,(%r12)
    9f13:	31 c0                	xor    %eax,%eax
    9f15:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    9f1a:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    9f21:	00 00 
    9f23:	75 5b                	jne    9f80 <ema_split_ex+0xb0>
    9f25:	48 83 c4 10          	add    $0x10,%rsp
    9f29:	5b                   	pop    %rbx
    9f2a:	5d                   	pop    %rbp
    9f2b:	41 5c                	pop    %r12
    9f2d:	c3                   	ret    
    9f2e:	66 90                	xchg   %ax,%ax
    9f30:	31 d2                	xor    %edx,%edx
    9f32:	48 89 e1             	mov    %rsp,%rcx
    9f35:	e8 06 fe ff ff       	call   9d40 <ema_split>
    9f3a:	85 c0                	test   %eax,%eax
    9f3c:	75 d7                	jne    9f15 <ema_split_ex+0x45>
    9f3e:	48 8b 14 24          	mov    (%rsp),%rdx
    9f42:	48 85 d2             	test   %rdx,%rdx
    9f45:	74 31                	je     9f78 <ema_split_ex+0xa8>
    9f47:	48 8b 02             	mov    (%rdx),%rax
    9f4a:	48 89 d3             	mov    %rdx,%rbx
    9f4d:	eb ac                	jmp    9efb <ema_split_ex+0x2b>
    9f4f:	90                   	nop
    9f50:	48 89 e1             	mov    %rsp,%rcx
    9f53:	ba 01 00 00 00       	mov    $0x1,%edx
    9f58:	48 89 ee             	mov    %rbp,%rsi
    9f5b:	48 89 df             	mov    %rbx,%rdi
    9f5e:	e8 dd fd ff ff       	call   9d40 <ema_split>
    9f63:	85 c0                	test   %eax,%eax
    9f65:	75 ae                	jne    9f15 <ema_split_ex+0x45>
    9f67:	48 8b 04 24          	mov    (%rsp),%rax
    9f6b:	48 85 c0             	test   %rax,%rax
    9f6e:	75 9f                	jne    9f0f <ema_split_ex+0x3f>
    9f70:	eb 9a                	jmp    9f0c <ema_split_ex+0x3c>
    9f72:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9f78:	48 8b 03             	mov    (%rbx),%rax
    9f7b:	e9 7b ff ff ff       	jmp    9efb <ema_split_ex+0x2b>
    9f80:	e8 7b 6e 00 00       	call   10e00 <__stack_chk_fail>
    9f85:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    9f8c:	00 00 00 
    9f8f:	90                   	nop

0000000000009f90 <find_free_region>:
    9f90:	f3 0f 1e fa          	endbr64 
    9f94:	41 57                	push   %r15
    9f96:	49 89 cf             	mov    %rcx,%r15
    9f99:	41 56                	push   %r14
    9f9b:	49 89 fe             	mov    %rdi,%r14
    9f9e:	41 55                	push   %r13
    9fa0:	49 89 d5             	mov    %rdx,%r13
    9fa3:	41 54                	push   %r12
    9fa5:	49 f7 dd             	neg    %r13
    9fa8:	55                   	push   %rbp
    9fa9:	48 89 f5             	mov    %rsi,%rbp
    9fac:	53                   	push   %rbx
    9fad:	48 89 d3             	mov    %rdx,%rbx
    9fb0:	48 83 ec 18          	sub    $0x18,%rsp
    9fb4:	4c 8b 27             	mov    (%rdi),%r12
    9fb7:	49 8b 4c 24 38       	mov    0x38(%r12),%rcx
    9fbc:	49 c7 00 00 00 00 00 	movq   $0x0,(%r8)
    9fc3:	49 c7 07 00 00 00 00 	movq   $0x0,(%r15)
    9fca:	49 39 cc             	cmp    %rcx,%r12
    9fcd:	0f 84 a5 00 00 00    	je     a078 <find_free_region+0xe8>
    9fd3:	48 8b 51 38          	mov    0x38(%rcx),%rdx
    9fd7:	4c 8b 11             	mov    (%rcx),%r10
    9fda:	48 8d 73 ff          	lea    -0x1(%rbx),%rsi
    9fde:	49 39 d4             	cmp    %rdx,%r12
    9fe1:	0f 84 02 01 00 00    	je     a0e9 <find_free_region+0x159>
    9fe7:	4c 8b 0d 92 0b 02 00 	mov    0x20b92(%rip),%r9        # 2ab80 <mm_user_end>
    9fee:	48 89 c8             	mov    %rcx,%rax
    9ff1:	48 8d 3d 70 00 01 00 	lea    0x10070(%rip),%rdi        # 1a068 <g_rts_ema_root>
    9ff8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    9fff:	00 
    a000:	48 8b 58 08          	mov    0x8(%rax),%rbx
    a004:	48 01 f3             	add    %rsi,%rbx
    a007:	48 89 d8             	mov    %rbx,%rax
    a00a:	4c 01 d0             	add    %r10,%rax
    a00d:	4c 8b 12             	mov    (%rdx),%r10
    a010:	4c 21 e8             	and    %r13,%rax
    a013:	49 39 c2             	cmp    %rax,%r10
    a016:	72 48                	jb     a060 <find_free_region+0xd0>
    a018:	4d 89 d3             	mov    %r10,%r11
    a01b:	49 29 c3             	sub    %rax,%r11
    a01e:	49 39 eb             	cmp    %rbp,%r11
    a021:	72 3d                	jb     a060 <find_free_region+0xd0>
    a023:	49 39 fe             	cmp    %rdi,%r14
    a026:	75 16                	jne    a03e <find_free_region+0xae>
    a028:	49 89 eb             	mov    %rbp,%r11
    a02b:	49 01 c3             	add    %rax,%r11
    a02e:	72 30                	jb     a060 <find_free_region+0xd0>
    a030:	4c 39 c8             	cmp    %r9,%rax
    a033:	73 09                	jae    a03e <find_free_region+0xae>
    a035:	4c 39 1d 4c 0b 02 00 	cmp    %r11,0x20b4c(%rip)        # 2ab88 <mm_user_base>
    a03c:	72 22                	jb     a060 <find_free_region+0xd0>
    a03e:	49 89 10             	mov    %rdx,(%r8)
    a041:	49 89 07             	mov    %rax,(%r15)
    a044:	48 83 c4 18          	add    $0x18,%rsp
    a048:	b8 01 00 00 00       	mov    $0x1,%eax
    a04d:	5b                   	pop    %rbx
    a04e:	5d                   	pop    %rbp
    a04f:	41 5c                	pop    %r12
    a051:	41 5d                	pop    %r13
    a053:	41 5e                	pop    %r14
    a055:	41 5f                	pop    %r15
    a057:	c3                   	ret    
    a058:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a05f:	00 
    a060:	48 8b 5a 38          	mov    0x38(%rdx),%rbx
    a064:	48 89 d0             	mov    %rdx,%rax
    a067:	49 39 dc             	cmp    %rbx,%r12
    a06a:	0f 84 80 00 00 00    	je     a0f0 <find_free_region+0x160>
    a070:	48 89 da             	mov    %rbx,%rdx
    a073:	eb 8b                	jmp    a000 <find_free_region+0x70>
    a075:	0f 1f 00             	nopl   (%rax)
    a078:	48 8d 05 e9 ff 00 00 	lea    0xffe9(%rip),%rax        # 1a068 <g_rts_ema_root>
    a07f:	48 8b 15 02 0b 02 00 	mov    0x20b02(%rip),%rdx        # 2ab88 <mm_user_base>
    a086:	48 39 c7             	cmp    %rax,%rdi
    a089:	74 25                	je     a0b0 <find_free_region+0x120>
    a08b:	48 8d 44 1a ff       	lea    -0x1(%rdx,%rbx,1),%rax
    a090:	4c 21 e8             	and    %r13,%rax
    a093:	48 01 c5             	add    %rax,%rbp
    a096:	72 40                	jb     a0d8 <find_free_region+0x148>
    a098:	48 39 d0             	cmp    %rdx,%rax
    a09b:	72 3b                	jb     a0d8 <find_free_region+0x148>
    a09d:	48 39 2d dc 0a 02 00 	cmp    %rbp,0x20adc(%rip)        # 2ab80 <mm_user_end>
    a0a4:	72 32                	jb     a0d8 <find_free_region+0x148>
    a0a6:	49 89 07             	mov    %rax,(%r15)
    a0a9:	4d 89 20             	mov    %r12,(%r8)
    a0ac:	eb 96                	jmp    a044 <find_free_region+0xb4>
    a0ae:	66 90                	xchg   %ax,%ax
    a0b0:	48 39 f2             	cmp    %rsi,%rdx
    a0b3:	0f 83 be 01 00 00    	jae    a277 <find_free_region+0x2e7>
    a0b9:	48 8b 05 c0 0a 02 00 	mov    0x20ac0(%rip),%rax        # 2ab80 <mm_user_end>
    a0c0:	4c 8d 74 03 ff       	lea    -0x1(%rbx,%rax,1),%r14
    a0c5:	48 89 e8             	mov    %rbp,%rax
    a0c8:	4d 21 ee             	and    %r13,%r14
    a0cb:	4c 01 f0             	add    %r14,%rax
    a0ce:	0f 83 e4 00 00 00    	jae    a1b8 <find_free_region+0x228>
    a0d4:	0f 1f 40 00          	nopl   0x0(%rax)
    a0d8:	31 c0                	xor    %eax,%eax
    a0da:	48 83 c4 18          	add    $0x18,%rsp
    a0de:	5b                   	pop    %rbx
    a0df:	5d                   	pop    %rbp
    a0e0:	41 5c                	pop    %r12
    a0e2:	41 5d                	pop    %r13
    a0e4:	41 5e                	pop    %r14
    a0e6:	41 5f                	pop    %r15
    a0e8:	c3                   	ret    
    a0e9:	48 89 d3             	mov    %rdx,%rbx
    a0ec:	48 89 ca             	mov    %rcx,%rdx
    a0ef:	90                   	nop
    a0f0:	4d 8d 24 32          	lea    (%r10,%rsi,1),%r12
    a0f4:	4c 03 62 08          	add    0x8(%rdx),%r12
    a0f8:	48 89 ee             	mov    %rbp,%rsi
    a0fb:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    a100:	4d 21 ec             	and    %r13,%r12
    a103:	48 89 0c 24          	mov    %rcx,(%rsp)
    a107:	4c 89 e7             	mov    %r12,%rdi
    a10a:	e8 71 bc ff ff       	call   5d80 <sgx_mm_is_within_enclave>
    a10f:	48 8b 0c 24          	mov    (%rsp),%rcx
    a113:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
    a118:	84 c0                	test   %al,%al
    a11a:	74 4c                	je     a168 <find_free_region+0x1d8>
    a11c:	48 89 ee             	mov    %rbp,%rsi
    a11f:	31 d2                	xor    %edx,%edx
    a121:	48 8d 05 40 ff 00 00 	lea    0xff40(%rip),%rax        # 1a068 <g_rts_ema_root>
    a128:	4c 01 e6             	add    %r12,%rsi
    a12b:	0f 92 c2             	setb   %dl
    a12e:	49 39 c6             	cmp    %rax,%r14
    a131:	0f 84 a7 00 00 00    	je     a1de <find_free_region+0x24e>
    a137:	48 85 d2             	test   %rdx,%rdx
    a13a:	0f 85 20 01 00 00    	jne    a260 <find_free_region+0x2d0>
    a140:	4c 3b 25 41 0a 02 00 	cmp    0x20a41(%rip),%r12        # 2ab88 <mm_user_base>
    a147:	0f 82 13 01 00 00    	jb     a260 <find_free_region+0x2d0>
    a14d:	48 39 35 2c 0a 02 00 	cmp    %rsi,0x20a2c(%rip)        # 2ab80 <mm_user_end>
    a154:	0f 82 06 01 00 00    	jb     a260 <find_free_region+0x2d0>
    a15a:	49 89 18             	mov    %rbx,(%r8)
    a15d:	4d 89 27             	mov    %r12,(%r15)
    a160:	e9 df fe ff ff       	jmp    a044 <find_free_region+0xb4>
    a165:	0f 1f 00             	nopl   (%rax)
    a168:	48 8b 19             	mov    (%rcx),%rbx
    a16b:	48 39 eb             	cmp    %rbp,%rbx
    a16e:	0f 82 64 ff ff ff    	jb     a0d8 <find_free_region+0x148>
    a174:	48 29 eb             	sub    %rbp,%rbx
    a177:	48 8d 05 ea fe 00 00 	lea    0xfeea(%rip),%rax        # 1a068 <g_rts_ema_root>
    a17e:	4c 21 eb             	and    %r13,%rbx
    a181:	49 39 c6             	cmp    %rax,%r14
    a184:	0f 84 85 00 00 00    	je     a20f <find_free_region+0x27f>
    a18a:	48 01 dd             	add    %rbx,%rbp
    a18d:	0f 82 45 ff ff ff    	jb     a0d8 <find_free_region+0x148>
    a193:	48 3b 1d ee 09 02 00 	cmp    0x209ee(%rip),%rbx        # 2ab88 <mm_user_base>
    a19a:	0f 82 38 ff ff ff    	jb     a0d8 <find_free_region+0x148>
    a1a0:	48 39 2d d9 09 02 00 	cmp    %rbp,0x209d9(%rip)        # 2ab80 <mm_user_end>
    a1a7:	0f 82 2b ff ff ff    	jb     a0d8 <find_free_region+0x148>
    a1ad:	49 89 1f             	mov    %rbx,(%r15)
    a1b0:	49 89 08             	mov    %rcx,(%r8)
    a1b3:	e9 8c fe ff ff       	jmp    a044 <find_free_region+0xb4>
    a1b8:	48 89 ee             	mov    %rbp,%rsi
    a1bb:	4c 89 f7             	mov    %r14,%rdi
    a1be:	4c 89 04 24          	mov    %r8,(%rsp)
    a1c2:	e8 b9 bb ff ff       	call   5d80 <sgx_mm_is_within_enclave>
    a1c7:	4c 8b 04 24          	mov    (%rsp),%r8
    a1cb:	84 c0                	test   %al,%al
    a1cd:	0f 84 05 ff ff ff    	je     a0d8 <find_free_region+0x148>
    a1d3:	4d 89 37             	mov    %r14,(%r15)
    a1d6:	4d 89 20             	mov    %r12,(%r8)
    a1d9:	e9 66 fe ff ff       	jmp    a044 <find_free_region+0xb4>
    a1de:	48 85 d2             	test   %rdx,%rdx
    a1e1:	75 1a                	jne    a1fd <find_free_region+0x26d>
    a1e3:	4c 3b 25 96 09 02 00 	cmp    0x20996(%rip),%r12        # 2ab80 <mm_user_end>
    a1ea:	0f 83 6a ff ff ff    	jae    a15a <find_free_region+0x1ca>
    a1f0:	48 39 35 91 09 02 00 	cmp    %rsi,0x20991(%rip)        # 2ab88 <mm_user_base>
    a1f7:	0f 83 5d ff ff ff    	jae    a15a <find_free_region+0x1ca>
    a1fd:	48 8b 19             	mov    (%rcx),%rbx
    a200:	48 39 eb             	cmp    %rbp,%rbx
    a203:	0f 82 cf fe ff ff    	jb     a0d8 <find_free_region+0x148>
    a209:	48 29 eb             	sub    %rbp,%rbx
    a20c:	4c 21 eb             	and    %r13,%rbx
    a20f:	48 89 ee             	mov    %rbp,%rsi
    a212:	48 89 df             	mov    %rbx,%rdi
    a215:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    a21a:	48 89 0c 24          	mov    %rcx,(%rsp)
    a21e:	e8 5d bb ff ff       	call   5d80 <sgx_mm_is_within_enclave>
    a223:	84 c0                	test   %al,%al
    a225:	0f 84 ad fe ff ff    	je     a0d8 <find_free_region+0x148>
    a22b:	48 01 dd             	add    %rbx,%rbp
    a22e:	0f 82 a4 fe ff ff    	jb     a0d8 <find_free_region+0x148>
    a234:	48 3b 1d 45 09 02 00 	cmp    0x20945(%rip),%rbx        # 2ab80 <mm_user_end>
    a23b:	48 8b 0c 24          	mov    (%rsp),%rcx
    a23f:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
    a244:	0f 83 63 ff ff ff    	jae    a1ad <find_free_region+0x21d>
    a24a:	48 39 2d 37 09 02 00 	cmp    %rbp,0x20937(%rip)        # 2ab88 <mm_user_base>
    a251:	0f 83 56 ff ff ff    	jae    a1ad <find_free_region+0x21d>
    a257:	31 c0                	xor    %eax,%eax
    a259:	e9 7c fe ff ff       	jmp    a0da <find_free_region+0x14a>
    a25e:	66 90                	xchg   %ax,%ax
    a260:	48 8b 19             	mov    (%rcx),%rbx
    a263:	48 39 eb             	cmp    %rbp,%rbx
    a266:	0f 82 6c fe ff ff    	jb     a0d8 <find_free_region+0x148>
    a26c:	48 29 eb             	sub    %rbp,%rbx
    a26f:	4c 21 eb             	and    %r13,%rbx
    a272:	e9 13 ff ff ff       	jmp    a18a <find_free_region+0x1fa>
    a277:	48 29 f2             	sub    %rsi,%rdx
    a27a:	4c 89 04 24          	mov    %r8,(%rsp)
    a27e:	4c 21 ea             	and    %r13,%rdx
    a281:	48 89 d7             	mov    %rdx,%rdi
    a284:	49 89 d6             	mov    %rdx,%r14
    a287:	e8 f4 ba ff ff       	call   5d80 <sgx_mm_is_within_enclave>
    a28c:	4c 8b 04 24          	mov    (%rsp),%r8
    a290:	84 c0                	test   %al,%al
    a292:	0f 85 3b ff ff ff    	jne    a1d3 <find_free_region+0x243>
    a298:	e9 1c fe ff ff       	jmp    a0b9 <find_free_region+0x129>
    a29d:	0f 1f 00             	nopl   (%rax)

000000000000a2a0 <find_free_region_at>:
    a2a0:	f3 0f 1e fa          	endbr64 
    a2a4:	41 55                	push   %r13
    a2a6:	49 89 cd             	mov    %rcx,%r13
    a2a9:	41 54                	push   %r12
    a2ab:	49 89 fc             	mov    %rdi,%r12
    a2ae:	55                   	push   %rbp
    a2af:	48 89 d5             	mov    %rdx,%rbp
    a2b2:	53                   	push   %rbx
    a2b3:	48 89 f3             	mov    %rsi,%rbx
    a2b6:	48 89 d6             	mov    %rdx,%rsi
    a2b9:	48 89 df             	mov    %rbx,%rdi
    a2bc:	48 83 ec 08          	sub    $0x8,%rsp
    a2c0:	e8 bb ba ff ff       	call   5d80 <sgx_mm_is_within_enclave>
    a2c5:	31 c9                	xor    %ecx,%ecx
    a2c7:	84 c0                	test   %al,%al
    a2c9:	74 5f                	je     a32a <find_free_region_at+0x8a>
    a2cb:	31 f6                	xor    %esi,%esi
    a2cd:	48 8d 15 94 fd 00 00 	lea    0xfd94(%rip),%rdx        # 1a068 <g_rts_ema_root>
    a2d4:	48 01 dd             	add    %rbx,%rbp
    a2d7:	40 0f 92 c6          	setb   %sil
    a2db:	49 39 d4             	cmp    %rdx,%r12
    a2de:	0f 84 7c 00 00 00    	je     a360 <find_free_region_at+0xc0>
    a2e4:	48 85 f6             	test   %rsi,%rsi
    a2e7:	75 5e                	jne    a347 <find_free_region_at+0xa7>
    a2e9:	48 3b 1d 98 08 02 00 	cmp    0x20898(%rip),%rbx        # 2ab88 <mm_user_base>
    a2f0:	72 55                	jb     a347 <find_free_region_at+0xa7>
    a2f2:	48 39 2d 87 08 02 00 	cmp    %rbp,0x20887(%rip)        # 2ab80 <mm_user_end>
    a2f9:	72 4c                	jb     a347 <find_free_region_at+0xa7>
    a2fb:	49 8b 14 24          	mov    (%r12),%rdx
    a2ff:	48 8b 4a 38          	mov    0x38(%rdx),%rcx
    a303:	48 39 ca             	cmp    %rcx,%rdx
    a306:	75 1a                	jne    a322 <find_free_region_at+0x82>
    a308:	eb 20                	jmp    a32a <find_free_region_at+0x8a>
    a30a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a310:	48 03 71 08          	add    0x8(%rcx),%rsi
    a314:	48 39 f3             	cmp    %rsi,%rbx
    a317:	72 27                	jb     a340 <find_free_region_at+0xa0>
    a319:	48 8b 49 38          	mov    0x38(%rcx),%rcx
    a31d:	48 39 ca             	cmp    %rcx,%rdx
    a320:	74 08                	je     a32a <find_free_region_at+0x8a>
    a322:	48 8b 31             	mov    (%rcx),%rsi
    a325:	48 39 ee             	cmp    %rbp,%rsi
    a328:	72 e6                	jb     a310 <find_free_region_at+0x70>
    a32a:	49 89 4d 00          	mov    %rcx,0x0(%r13)
    a32e:	48 83 c4 08          	add    $0x8,%rsp
    a332:	5b                   	pop    %rbx
    a333:	5d                   	pop    %rbp
    a334:	41 5c                	pop    %r12
    a336:	41 5d                	pop    %r13
    a338:	c3                   	ret    
    a339:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a340:	48 39 ca             	cmp    %rcx,%rdx
    a343:	74 e5                	je     a32a <find_free_region_at+0x8a>
    a345:	31 c9                	xor    %ecx,%ecx
    a347:	31 c0                	xor    %eax,%eax
    a349:	49 89 4d 00          	mov    %rcx,0x0(%r13)
    a34d:	48 83 c4 08          	add    $0x8,%rsp
    a351:	5b                   	pop    %rbx
    a352:	5d                   	pop    %rbp
    a353:	41 5c                	pop    %r12
    a355:	41 5d                	pop    %r13
    a357:	c3                   	ret    
    a358:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a35f:	00 
    a360:	48 85 f6             	test   %rsi,%rsi
    a363:	75 e2                	jne    a347 <find_free_region_at+0xa7>
    a365:	48 3b 1d 14 08 02 00 	cmp    0x20814(%rip),%rbx        # 2ab80 <mm_user_end>
    a36c:	73 8d                	jae    a2fb <find_free_region_at+0x5b>
    a36e:	48 39 2d 13 08 02 00 	cmp    %rbp,0x20813(%rip)        # 2ab88 <mm_user_base>
    a375:	73 84                	jae    a2fb <find_free_region_at+0x5b>
    a377:	31 c0                	xor    %eax,%eax
    a379:	eb ce                	jmp    a349 <find_free_region_at+0xa9>
    a37b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000a380 <ema_new>:
    a380:	f3 0f 1e fa          	endbr64 
    a384:	53                   	push   %rbx
    a385:	48 83 ec 50          	sub    $0x50,%rsp
    a389:	64 4c 8b 14 25 28 00 	mov    %fs:0x28,%r10
    a390:	00 00 
    a392:	4c 89 54 24 48       	mov    %r10,0x48(%rsp)
    a397:	45 31 d2             	xor    %r10d,%r10d
    a39a:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
    a39f:	89 54 24 10          	mov    %edx,0x10(%rsp)
    a3a3:	48 89 e3             	mov    %rsp,%rbx
    a3a6:	48 89 3c 24          	mov    %rdi,(%rsp)
    a3aa:	bf 48 00 00 00       	mov    $0x48,%edi
    a3af:	48 8b 50 40          	mov    0x40(%rax),%rdx
    a3b3:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    a3b8:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    a3bd:	48 89 54 24 40       	mov    %rdx,0x40(%rsp)
    a3c2:	48 89 5a 38          	mov    %rbx,0x38(%rdx)
    a3c6:	48 89 58 40          	mov    %rbx,0x40(%rax)
    a3ca:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
    a3cf:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    a3d6:	00 00 
    a3d8:	4c 89 44 24 28       	mov    %r8,0x28(%rsp)
    a3dd:	4c 89 4c 24 30       	mov    %r9,0x30(%rsp)
    a3e2:	e8 99 13 00 00       	call   b780 <emalloc>
    a3e7:	48 85 c0             	test   %rax,%rax
    a3ea:	74 6c                	je     a458 <ema_new+0xd8>
    a3ec:	66 0f 6f 0c 24       	movdqa (%rsp),%xmm1
    a3f1:	0f 11 08             	movups %xmm1,(%rax)
    a3f4:	66 0f 6f 54 24 10    	movdqa 0x10(%rsp),%xmm2
    a3fa:	0f 11 50 10          	movups %xmm2,0x10(%rax)
    a3fe:	66 0f 6f 5c 24 20    	movdqa 0x20(%rsp),%xmm3
    a404:	0f 11 58 20          	movups %xmm3,0x20(%rax)
    a408:	66 0f 6f 64 24 30    	movdqa 0x30(%rsp),%xmm4
    a40e:	0f 11 60 30          	movups %xmm4,0x30(%rax)
    a412:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
    a417:	48 89 50 40          	mov    %rdx,0x40(%rax)
    a41b:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
    a420:	48 89 42 38          	mov    %rax,0x38(%rdx)
    a424:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
    a429:	48 89 42 40          	mov    %rax,0x40(%rdx)
    a42d:	66 48 0f 6e c2       	movq   %rdx,%xmm0
    a432:	0f 16 44 24 40       	movhps 0x40(%rsp),%xmm0
    a437:	0f 11 40 38          	movups %xmm0,0x38(%rax)
    a43b:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
    a440:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    a447:	00 00 
    a449:	75 2d                	jne    a478 <ema_new+0xf8>
    a44b:	48 83 c4 50          	add    $0x50,%rsp
    a44f:	5b                   	pop    %rbx
    a450:	c3                   	ret    
    a451:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a458:	48 8b 4c 24 40       	mov    0x40(%rsp),%rcx
    a45d:	48 39 59 38          	cmp    %rbx,0x38(%rcx)
    a461:	75 1a                	jne    a47d <ema_new+0xfd>
    a463:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
    a468:	48 39 5a 40          	cmp    %rbx,0x40(%rdx)
    a46c:	75 0f                	jne    a47d <ema_new+0xfd>
    a46e:	48 89 51 38          	mov    %rdx,0x38(%rcx)
    a472:	48 89 4a 40          	mov    %rcx,0x40(%rdx)
    a476:	eb c3                	jmp    a43b <ema_new+0xbb>
    a478:	e8 83 69 00 00       	call   10e00 <__stack_chk_fail>
    a47d:	e8 b5 84 00 00       	call   12937 <abort>
    a482:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a489:	00 00 00 
    a48c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000a490 <ema_destroy>:
    a490:	f3 0f 1e fa          	endbr64 
    a494:	53                   	push   %rbx
    a495:	48 89 fb             	mov    %rdi,%rbx
    a498:	48 85 ff             	test   %rdi,%rdi
    a49b:	74 1c                	je     a4b9 <ema_destroy+0x29>
    a49d:	48 8b 47 40          	mov    0x40(%rdi),%rax
    a4a1:	48 3b 78 38          	cmp    0x38(%rax),%rdi
    a4a5:	75 29                	jne    a4d0 <ema_destroy+0x40>
    a4a7:	48 8b 57 38          	mov    0x38(%rdi),%rdx
    a4ab:	48 3b 7a 40          	cmp    0x40(%rdx),%rdi
    a4af:	75 1f                	jne    a4d0 <ema_destroy+0x40>
    a4b1:	48 89 50 38          	mov    %rdx,0x38(%rax)
    a4b5:	48 89 42 40          	mov    %rax,0x40(%rdx)
    a4b9:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    a4bd:	48 85 ff             	test   %rdi,%rdi
    a4c0:	74 05                	je     a4c7 <ema_destroy+0x37>
    a4c2:	e8 b9 ed ff ff       	call   9280 <bit_array_delete>
    a4c7:	48 89 df             	mov    %rbx,%rdi
    a4ca:	5b                   	pop    %rbx
    a4cb:	e9 30 15 00 00       	jmp    ba00 <efree>
    a4d0:	e8 62 84 00 00       	call   12937 <abort>
    a4d5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a4dc:	00 00 00 
    a4df:	90                   	nop

000000000000a4e0 <destroy_ema_root>:
    a4e0:	f3 0f 1e fa          	endbr64 
    a4e4:	55                   	push   %rbp
    a4e5:	53                   	push   %rbx
    a4e6:	48 83 ec 08          	sub    $0x8,%rsp
    a4ea:	48 8b 07             	mov    (%rdi),%rax
    a4ed:	48 8b 58 38          	mov    0x38(%rax),%rbx
    a4f1:	48 39 d8             	cmp    %rbx,%rax
    a4f4:	74 1c                	je     a512 <destroy_ema_root+0x32>
    a4f6:	48 89 fd             	mov    %rdi,%rbp
    a4f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a500:	48 89 df             	mov    %rbx,%rdi
    a503:	48 8b 5b 38          	mov    0x38(%rbx),%rbx
    a507:	e8 84 ff ff ff       	call   a490 <ema_destroy>
    a50c:	48 39 5d 00          	cmp    %rbx,0x0(%rbp)
    a510:	75 ee                	jne    a500 <destroy_ema_root+0x20>
    a512:	48 83 c4 08          	add    $0x8,%rsp
    a516:	5b                   	pop    %rbx
    a517:	5d                   	pop    %rbp
    a518:	c3                   	ret    
    a519:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000a520 <do_commit>:
    a520:	f3 0f 1e fa          	endbr64 
    a524:	55                   	push   %rbp
    a525:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a529:	48 83 ca 08          	or     $0x8,%rdx
    a52d:	48 89 e5             	mov    %rsp,%rbp
    a530:	41 55                	push   %r13
    a532:	41 54                	push   %r12
    a534:	49 89 fc             	mov    %rdi,%r12
    a537:	53                   	push   %rbx
    a538:	48 8d 1c 37          	lea    (%rdi,%rsi,1),%rbx
    a53c:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    a540:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    a544:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a54b:	00 00 
    a54d:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    a552:	31 c0                	xor    %eax,%eax
    a554:	48 89 14 24          	mov    %rdx,(%rsp)
    a558:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    a55f:	00 00 
    a561:	0f 11 44 24 08       	movups %xmm0,0x8(%rsp)
    a566:	0f 11 44 24 18       	movups %xmm0,0x18(%rsp)
    a56b:	0f 11 44 24 28       	movups %xmm0,0x28(%rsp)
    a570:	84 c9                	test   %cl,%cl
    a572:	74 4c                	je     a5c0 <do_commit+0xa0>
    a574:	49 89 e5             	mov    %rsp,%r13
    a577:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    a57e:	00 00 
    a580:	48 81 eb 00 10 00 00 	sub    $0x1000,%rbx
    a587:	4c 89 ef             	mov    %r13,%rdi
    a58a:	48 89 de             	mov    %rbx,%rsi
    a58d:	e8 2d 83 00 00       	call   128bf <do_eaccept>
    a592:	85 c0                	test   %eax,%eax
    a594:	75 57                	jne    a5ed <do_commit+0xcd>
    a596:	49 39 dc             	cmp    %rbx,%r12
    a599:	72 e5                	jb     a580 <do_commit+0x60>
    a59b:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    a5a0:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    a5a7:	00 00 
    a5a9:	75 47                	jne    a5f2 <do_commit+0xd2>
    a5ab:	48 8d 65 e8          	lea    -0x18(%rbp),%rsp
    a5af:	31 c0                	xor    %eax,%eax
    a5b1:	5b                   	pop    %rbx
    a5b2:	41 5c                	pop    %r12
    a5b4:	41 5d                	pop    %r13
    a5b6:	5d                   	pop    %rbp
    a5b7:	c3                   	ret    
    a5b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a5bf:	00 
    a5c0:	48 39 df             	cmp    %rbx,%rdi
    a5c3:	73 d6                	jae    a59b <do_commit+0x7b>
    a5c5:	49 89 e5             	mov    %rsp,%r13
    a5c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a5cf:	00 
    a5d0:	4c 89 e6             	mov    %r12,%rsi
    a5d3:	4c 89 ef             	mov    %r13,%rdi
    a5d6:	e8 e4 82 00 00       	call   128bf <do_eaccept>
    a5db:	85 c0                	test   %eax,%eax
    a5dd:	75 0e                	jne    a5ed <do_commit+0xcd>
    a5df:	49 81 c4 00 10 00 00 	add    $0x1000,%r12
    a5e6:	49 39 dc             	cmp    %rbx,%r12
    a5e9:	72 e5                	jb     a5d0 <do_commit+0xb0>
    a5eb:	eb ae                	jmp    a59b <do_commit+0x7b>
    a5ed:	e8 45 83 00 00       	call   12937 <abort>
    a5f2:	e8 09 68 00 00       	call   10e00 <__stack_chk_fail>
    a5f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    a5fe:	00 00 

000000000000a600 <ema_do_commit>:
    a600:	f3 0f 1e fa          	endbr64 
    a604:	55                   	push   %rbp
    a605:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a609:	48 89 e5             	mov    %rsp,%rbp
    a60c:	41 57                	push   %r15
    a60e:	41 56                	push   %r14
    a610:	41 55                	push   %r13
    a612:	41 54                	push   %r12
    a614:	53                   	push   %rbx
    a615:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    a619:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    a61d:	4c 8b 77 08          	mov    0x8(%rdi),%r14
    a621:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a628:	00 00 
    a62a:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    a62f:	48 8b 07             	mov    (%rdi),%rax
    a632:	48 c7 04 24 0b 02 00 	movq   $0x20b,(%rsp)
    a639:	00 
    a63a:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    a641:	00 00 
    a643:	0f 11 44 24 08       	movups %xmm0,0x8(%rsp)
    a648:	0f 11 44 24 18       	movups %xmm0,0x18(%rsp)
    a64d:	0f 11 44 24 28       	movups %xmm0,0x28(%rsp)
    a652:	48 39 f0             	cmp    %rsi,%rax
    a655:	48 0f 43 f0          	cmovae %rax,%rsi
    a659:	49 01 c6             	add    %rax,%r14
    a65c:	49 39 d6             	cmp    %rdx,%r14
    a65f:	4c 0f 47 f2          	cmova  %rdx,%r14
    a663:	4c 39 f6             	cmp    %r14,%rsi
    a666:	73 61                	jae    a6c9 <ema_do_commit+0xc9>
    a668:	49 89 fd             	mov    %rdi,%r13
    a66b:	48 89 f3             	mov    %rsi,%rbx
    a66e:	49 89 e7             	mov    %rsp,%r15
    a671:	eb 15                	jmp    a688 <ema_do_commit+0x88>
    a673:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a678:	48 81 c3 00 10 00 00 	add    $0x1000,%rbx
    a67f:	4c 39 f3             	cmp    %r14,%rbx
    a682:	73 45                	jae    a6c9 <ema_do_commit+0xc9>
    a684:	49 8b 45 00          	mov    0x0(%r13),%rax
    a688:	49 89 dc             	mov    %rbx,%r12
    a68b:	49 8b 7d 20          	mov    0x20(%r13),%rdi
    a68f:	49 29 c4             	sub    %rax,%r12
    a692:	49 c1 ec 0c          	shr    $0xc,%r12
    a696:	4c 89 e6             	mov    %r12,%rsi
    a699:	e8 02 ec ff ff       	call   92a0 <bit_array_test>
    a69e:	84 c0                	test   %al,%al
    a6a0:	75 d6                	jne    a678 <ema_do_commit+0x78>
    a6a2:	48 89 de             	mov    %rbx,%rsi
    a6a5:	4c 89 ff             	mov    %r15,%rdi
    a6a8:	e8 12 82 00 00       	call   128bf <do_eaccept>
    a6ad:	85 c0                	test   %eax,%eax
    a6af:	75 1a                	jne    a6cb <ema_do_commit+0xcb>
    a6b1:	49 8b 7d 20          	mov    0x20(%r13),%rdi
    a6b5:	4c 89 e6             	mov    %r12,%rsi
    a6b8:	48 81 c3 00 10 00 00 	add    $0x1000,%rbx
    a6bf:	e8 ac ed ff ff       	call   9470 <bit_array_set>
    a6c4:	4c 39 f3             	cmp    %r14,%rbx
    a6c7:	72 bb                	jb     a684 <ema_do_commit+0x84>
    a6c9:	31 c0                	xor    %eax,%eax
    a6cb:	48 8b 54 24 78       	mov    0x78(%rsp),%rdx
    a6d0:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    a6d7:	00 00 
    a6d9:	75 0f                	jne    a6ea <ema_do_commit+0xea>
    a6db:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    a6df:	5b                   	pop    %rbx
    a6e0:	41 5c                	pop    %r12
    a6e2:	41 5d                	pop    %r13
    a6e4:	41 5e                	pop    %r14
    a6e6:	41 5f                	pop    %r15
    a6e8:	5d                   	pop    %rbp
    a6e9:	c3                   	ret    
    a6ea:	e8 11 67 00 00       	call   10e00 <__stack_chk_fail>
    a6ef:	90                   	nop

000000000000a6f0 <ema_do_commit_loop>:
    a6f0:	f3 0f 1e fa          	endbr64 
    a6f4:	41 55                	push   %r13
    a6f6:	41 54                	push   %r12
    a6f8:	55                   	push   %rbp
    a6f9:	53                   	push   %rbx
    a6fa:	48 89 cb             	mov    %rcx,%rbx
    a6fd:	48 83 ec 08          	sub    $0x8,%rsp
    a701:	48 8b 0f             	mov    (%rdi),%rcx
    a704:	48 39 f7             	cmp    %rsi,%rdi
    a707:	0f 84 9b 00 00 00    	je     a7a8 <ema_do_commit_loop+0xb8>
    a70d:	49 89 f5             	mov    %rsi,%r13
    a710:	48 89 d5             	mov    %rdx,%rbp
    a713:	48 89 f8             	mov    %rdi,%rax
    a716:	eb 26                	jmp    a73e <ema_do_commit_loop+0x4e>
    a718:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a71f:	00 
    a720:	f6 40 10 01          	testb  $0x1,0x10(%rax)
    a724:	75 27                	jne    a74d <ema_do_commit_loop+0x5d>
    a726:	48 03 48 08          	add    0x8(%rax),%rcx
    a72a:	48 8b 40 38          	mov    0x38(%rax),%rax
    a72e:	48 89 ca             	mov    %rcx,%rdx
    a731:	49 39 c5             	cmp    %rax,%r13
    a734:	74 3a                	je     a770 <ema_do_commit_loop+0x80>
    a736:	48 8b 08             	mov    (%rax),%rcx
    a739:	48 39 d1             	cmp    %rdx,%rcx
    a73c:	75 22                	jne    a760 <ema_do_commit_loop+0x70>
    a73e:	48 8b 50 18          	mov    0x18(%rax),%rdx
    a742:	48 f7 d2             	not    %rdx
    a745:	f7 c2 02 02 00 00    	test   $0x202,%edx
    a74b:	74 d3                	je     a720 <ema_do_commit_loop+0x30>
    a74d:	b8 0d 00 00 00       	mov    $0xd,%eax
    a752:	48 83 c4 08          	add    $0x8,%rsp
    a756:	5b                   	pop    %rbx
    a757:	5d                   	pop    %rbp
    a758:	41 5c                	pop    %r12
    a75a:	41 5d                	pop    %r13
    a75c:	c3                   	ret    
    a75d:	0f 1f 00             	nopl   (%rax)
    a760:	48 83 c4 08          	add    $0x8,%rsp
    a764:	b8 16 00 00 00       	mov    $0x16,%eax
    a769:	5b                   	pop    %rbx
    a76a:	5d                   	pop    %rbp
    a76b:	41 5c                	pop    %r12
    a76d:	41 5d                	pop    %r13
    a76f:	c3                   	ret    
    a770:	b8 16 00 00 00       	mov    $0x16,%eax
    a775:	48 39 d9             	cmp    %rbx,%rcx
    a778:	73 1c                	jae    a796 <ema_do_commit_loop+0xa6>
    a77a:	eb d6                	jmp    a752 <ema_do_commit_loop+0x62>
    a77c:	0f 1f 40 00          	nopl   0x0(%rax)
    a780:	48 89 da             	mov    %rbx,%rdx
    a783:	48 89 ee             	mov    %rbp,%rsi
    a786:	4c 8b 67 38          	mov    0x38(%rdi),%r12
    a78a:	e8 71 fe ff ff       	call   a600 <ema_do_commit>
    a78f:	85 c0                	test   %eax,%eax
    a791:	75 bf                	jne    a752 <ema_do_commit_loop+0x62>
    a793:	4c 89 e7             	mov    %r12,%rdi
    a796:	4c 39 ef             	cmp    %r13,%rdi
    a799:	75 e5                	jne    a780 <ema_do_commit_loop+0x90>
    a79b:	31 c0                	xor    %eax,%eax
    a79d:	48 83 c4 08          	add    $0x8,%rsp
    a7a1:	5b                   	pop    %rbx
    a7a2:	5d                   	pop    %rbp
    a7a3:	41 5c                	pop    %r12
    a7a5:	41 5d                	pop    %r13
    a7a7:	c3                   	ret    
    a7a8:	b8 16 00 00 00       	mov    $0x16,%eax
    a7ad:	48 39 d9             	cmp    %rbx,%rcx
    a7b0:	72 a0                	jb     a752 <ema_do_commit_loop+0x62>
    a7b2:	31 c0                	xor    %eax,%eax
    a7b4:	eb e7                	jmp    a79d <ema_do_commit_loop+0xad>
    a7b6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a7bd:	00 00 00 

000000000000a7c0 <ema_change_to_tcs>:
    a7c0:	f3 0f 1e fa          	endbr64 
    a7c4:	55                   	push   %rbp
    a7c5:	48 89 e5             	mov    %rsp,%rbp
    a7c8:	41 56                	push   %r14
    a7ca:	41 55                	push   %r13
    a7cc:	41 54                	push   %r12
    a7ce:	53                   	push   %rbx
    a7cf:	48 89 fb             	mov    %rdi,%rbx
    a7d2:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    a7d6:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
    a7dd:	4c 8b 6f 18          	mov    0x18(%rdi),%r13
    a7e1:	48 8b 7f 20          	mov    0x20(%rdi),%rdi
    a7e5:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a7ec:	00 00 
    a7ee:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
    a7f5:	00 
    a7f6:	31 c0                	xor    %eax,%eax
    a7f8:	45 89 ee             	mov    %r13d,%r14d
    a7fb:	41 81 e6 00 ff 00 00 	and    $0xff00,%r14d
    a802:	48 85 ff             	test   %rdi,%rdi
    a805:	74 33                	je     a83a <ema_change_to_tcs+0x7a>
    a807:	49 89 f4             	mov    %rsi,%r12
    a80a:	48 2b 33             	sub    (%rbx),%rsi
    a80d:	48 c1 ee 0c          	shr    $0xc,%rsi
    a811:	e8 8a ea ff ff       	call   92a0 <bit_array_test>
    a816:	84 c0                	test   %al,%al
    a818:	74 20                	je     a83a <ema_change_to_tcs+0x7a>
    a81a:	41 81 fe 00 01 00 00 	cmp    $0x100,%r14d
    a821:	0f 84 e1 00 00 00    	je     a908 <ema_change_to_tcs+0x148>
    a827:	41 83 e5 07          	and    $0x7,%r13d
    a82b:	41 83 fd 03          	cmp    $0x3,%r13d
    a82f:	75 09                	jne    a83a <ema_change_to_tcs+0x7a>
    a831:	41 81 fe 00 02 00 00 	cmp    $0x200,%r14d
    a838:	74 2e                	je     a868 <ema_change_to_tcs+0xa8>
    a83a:	b8 0d 00 00 00       	mov    $0xd,%eax
    a83f:	48 8b 94 24 b8 00 00 	mov    0xb8(%rsp),%rdx
    a846:	00 
    a847:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    a84e:	00 00 
    a850:	0f 85 c4 00 00 00    	jne    a91a <ema_change_to_tcs+0x15a>
    a856:	48 8d 65 e0          	lea    -0x20(%rbp),%rsp
    a85a:	5b                   	pop    %rbx
    a85b:	41 5c                	pop    %r12
    a85d:	41 5d                	pop    %r13
    a85f:	41 5e                	pop    %r14
    a861:	5d                   	pop    %rbp
    a862:	c3                   	ret    
    a863:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a868:	b9 03 01 00 00       	mov    $0x103,%ecx
    a86d:	ba 03 02 00 00       	mov    $0x203,%edx
    a872:	be 00 10 00 00       	mov    $0x1000,%esi
    a877:	4c 89 e7             	mov    %r12,%rdi
    a87a:	e8 71 b3 ff ff       	call   5bf0 <sgx_mm_modify_ocall>
    a87f:	85 c0                	test   %eax,%eax
    a881:	0f 85 89 00 00 00    	jne    a910 <ema_change_to_tcs+0x150>
    a887:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a88b:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
    a890:	4c 89 e6             	mov    %r12,%rsi
    a893:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
    a89a:	00 00 
    a89c:	48 c7 44 24 40 10 01 	movq   $0x110,0x40(%rsp)
    a8a3:	00 00 
    a8a5:	0f 11 44 24 48       	movups %xmm0,0x48(%rsp)
    a8aa:	0f 11 44 24 58       	movups %xmm0,0x58(%rsp)
    a8af:	0f 11 44 24 68       	movups %xmm0,0x68(%rsp)
    a8b4:	e8 06 80 00 00       	call   128bf <do_eaccept>
    a8b9:	85 c0                	test   %eax,%eax
    a8bb:	75 62                	jne    a91f <ema_change_to_tcs+0x15f>
    a8bd:	48 8d 4c 24 38       	lea    0x38(%rsp),%rcx
    a8c2:	49 8d 94 24 00 10 00 	lea    0x1000(%r12),%rdx
    a8c9:	00 
    a8ca:	4c 89 e6             	mov    %r12,%rsi
    a8cd:	48 89 df             	mov    %rbx,%rdi
    a8d0:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    a8d7:	00 00 
    a8d9:	e8 f2 f5 ff ff       	call   9ed0 <ema_split_ex>
    a8de:	85 c0                	test   %eax,%eax
    a8e0:	0f 85 59 ff ff ff    	jne    a83f <ema_change_to_tcs+0x7f>
    a8e6:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
    a8eb:	48 8b 51 18          	mov    0x18(%rcx),%rdx
    a8ef:	48 81 e2 f8 00 ff ff 	and    $0xffffffffffff00f8,%rdx
    a8f6:	80 ce 01             	or     $0x1,%dh
    a8f9:	48 89 51 18          	mov    %rdx,0x18(%rcx)
    a8fd:	e9 3d ff ff ff       	jmp    a83f <ema_change_to_tcs+0x7f>
    a902:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a908:	31 c0                	xor    %eax,%eax
    a90a:	e9 30 ff ff ff       	jmp    a83f <ema_change_to_tcs+0x7f>
    a90f:	90                   	nop
    a910:	b8 0e 00 00 00       	mov    $0xe,%eax
    a915:	e9 25 ff ff ff       	jmp    a83f <ema_change_to_tcs+0x7f>
    a91a:	e8 e1 64 00 00       	call   10e00 <__stack_chk_fail>
    a91f:	e8 13 80 00 00       	call   12937 <abort>
    a924:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a92b:	00 00 00 
    a92e:	66 90                	xchg   %ax,%ax

000000000000a930 <ema_modify_permissions>:
    a930:	f3 0f 1e fa          	endbr64 
    a934:	55                   	push   %rbp
    a935:	48 89 e5             	mov    %rsp,%rbp
    a938:	41 57                	push   %r15
    a93a:	41 56                	push   %r14
    a93c:	41 55                	push   %r13
    a93e:	41 54                	push   %r12
    a940:	53                   	push   %rbx
    a941:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    a945:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
    a94c:	89 4c 24 20          	mov    %ecx,0x20(%rsp)
    a950:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a957:	00 00 
    a959:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
    a960:	00 
    a961:	48 8b 47 18          	mov    0x18(%rdi),%rax
    a965:	41 89 c4             	mov    %eax,%r12d
    a968:	41 83 e4 07          	and    $0x7,%r12d
    a96c:	41 39 cc             	cmp    %ecx,%r12d
    a96f:	0f 84 e2 00 00 00    	je     aa57 <ema_modify_permissions+0x127>
    a975:	49 89 fd             	mov    %rdi,%r13
    a978:	89 c7                	mov    %eax,%edi
    a97a:	49 89 f7             	mov    %rsi,%r15
    a97d:	44 8b 74 24 20       	mov    0x20(%rsp),%r14d
    a982:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    a986:	81 e7 00 ff 00 00    	and    $0xff00,%edi
    a98c:	44 89 f1             	mov    %r14d,%ecx
    a98f:	89 7c 24 0c          	mov    %edi,0xc(%rsp)
    a993:	48 39 f3             	cmp    %rsi,%rbx
    a996:	4c 0f 43 fb          	cmovae %rbx,%r15
    a99a:	49 03 5d 08          	add    0x8(%r13),%rbx
    a99e:	48 39 d3             	cmp    %rdx,%rbx
    a9a1:	48 0f 47 da          	cmova  %rdx,%rbx
    a9a5:	89 c2                	mov    %eax,%edx
    a9a7:	09 f9                	or     %edi,%ecx
    a9a9:	4c 89 ff             	mov    %r15,%rdi
    a9ac:	81 e2 07 ff 00 00    	and    $0xff07,%edx
    a9b2:	4c 89 7c 24 18       	mov    %r15,0x18(%rsp)
    a9b7:	48 89 de             	mov    %rbx,%rsi
    a9ba:	4c 29 fe             	sub    %r15,%rsi
    a9bd:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    a9c2:	e8 29 b2 ff ff       	call   5bf0 <sgx_mm_modify_ocall>
    a9c7:	85 c0                	test   %eax,%eax
    a9c9:	0f 85 21 01 00 00    	jne    aaf0 <ema_modify_permissions+0x1c0>
    a9cf:	44 89 f0             	mov    %r14d,%eax
    a9d2:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a9d6:	48 8d 54 24 40       	lea    0x40(%rsp),%rdx
    a9db:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
    a9e2:	00 00 
    a9e4:	0d 20 02 00 00       	or     $0x220,%eax
    a9e9:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
    a9ee:	48 98                	cltq   
    a9f0:	0f 11 44 24 48       	movups %xmm0,0x48(%rsp)
    a9f5:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    a9fa:	44 89 f0             	mov    %r14d,%eax
    a9fd:	45 09 e6             	or     %r12d,%r14d
    aa00:	83 e0 06             	and    $0x6,%eax
    aa03:	0f 11 44 24 58       	movups %xmm0,0x58(%rsp)
    aa08:	89 44 24 24          	mov    %eax,0x24(%rsp)
    aa0c:	0f 11 44 24 68       	movups %xmm0,0x68(%rsp)
    aa11:	49 39 df             	cmp    %rbx,%r15
    aa14:	72 76                	jb     aa8c <ema_modify_permissions+0x15c>
    aa16:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    aa1d:	00 00 00 
    aa20:	49 8b 45 00          	mov    0x0(%r13),%rax
    aa24:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    aa29:	48 39 d0             	cmp    %rdx,%rax
    aa2c:	0f 82 ce 00 00 00    	jb     ab00 <ema_modify_permissions+0x1d0>
    aa32:	49 03 45 08          	add    0x8(%r13),%rax
    aa36:	48 39 c3             	cmp    %rax,%rbx
    aa39:	0f 82 f9 00 00 00    	jb     ab38 <ema_modify_permissions+0x208>
    aa3f:	49 8b 45 18          	mov    0x18(%r13),%rax
    aa43:	48 63 54 24 20       	movslq 0x20(%rsp),%rdx
    aa48:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    aa4c:	48 09 d0             	or     %rdx,%rax
    aa4f:	49 89 45 18          	mov    %rax,0x18(%r13)
    aa53:	85 d2                	test   %edx,%edx
    aa55:	74 79                	je     aad0 <ema_modify_permissions+0x1a0>
    aa57:	31 c0                	xor    %eax,%eax
    aa59:	48 8b 94 24 b8 00 00 	mov    0xb8(%rsp),%rdx
    aa60:	00 
    aa61:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    aa68:	00 00 
    aa6a:	0f 85 f8 00 00 00    	jne    ab68 <ema_modify_permissions+0x238>
    aa70:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    aa74:	5b                   	pop    %rbx
    aa75:	41 5c                	pop    %r12
    aa77:	41 5d                	pop    %r13
    aa79:	41 5e                	pop    %r14
    aa7b:	41 5f                	pop    %r15
    aa7d:	5d                   	pop    %rbp
    aa7e:	c3                   	ret    
    aa7f:	90                   	nop
    aa80:	49 81 c7 00 10 00 00 	add    $0x1000,%r15
    aa87:	49 39 df             	cmp    %rbx,%r15
    aa8a:	73 94                	jae    aa20 <ema_modify_permissions+0xf0>
    aa8c:	45 39 f4             	cmp    %r14d,%r12d
    aa8f:	74 0d                	je     aa9e <ema_modify_permissions+0x16e>
    aa91:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
    aa96:	4c 89 fe             	mov    %r15,%rsi
    aa99:	e8 5d 7e 00 00       	call   128fb <do_emodpe>
    aa9e:	83 7c 24 24 06       	cmpl   $0x6,0x24(%rsp)
    aaa3:	74 db                	je     aa80 <ema_modify_permissions+0x150>
    aaa5:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
    aaaa:	4c 89 fe             	mov    %r15,%rsi
    aaad:	e8 0d 7e 00 00       	call   128bf <do_eaccept>
    aab2:	85 c0                	test   %eax,%eax
    aab4:	75 a3                	jne    aa59 <ema_modify_permissions+0x129>
    aab6:	49 81 c7 00 10 00 00 	add    $0x1000,%r15
    aabd:	49 39 df             	cmp    %rbx,%r15
    aac0:	0f 83 5a ff ff ff    	jae    aa20 <ema_modify_permissions+0xf0>
    aac6:	45 39 f4             	cmp    %r14d,%r12d
    aac9:	74 da                	je     aaa5 <ema_modify_permissions+0x175>
    aacb:	eb c4                	jmp    aa91 <ema_modify_permissions+0x161>
    aacd:	0f 1f 00             	nopl   (%rax)
    aad0:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
    aad4:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    aad9:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    aade:	89 ca                	mov    %ecx,%edx
    aae0:	e8 0b b1 ff ff       	call   5bf0 <sgx_mm_modify_ocall>
    aae5:	85 c0                	test   %eax,%eax
    aae7:	0f 84 6a ff ff ff    	je     aa57 <ema_modify_permissions+0x127>
    aaed:	0f 1f 00             	nopl   (%rax)
    aaf0:	b8 0e 00 00 00       	mov    $0xe,%eax
    aaf5:	e9 5f ff ff ff       	jmp    aa59 <ema_modify_permissions+0x129>
    aafa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    ab00:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    ab05:	31 d2                	xor    %edx,%edx
    ab07:	48 8d 4c 24 38       	lea    0x38(%rsp),%rcx
    ab0c:	4c 89 ef             	mov    %r13,%rdi
    ab0f:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    ab16:	00 00 
    ab18:	e8 23 f2 ff ff       	call   9d40 <ema_split>
    ab1d:	85 c0                	test   %eax,%eax
    ab1f:	0f 85 34 ff ff ff    	jne    aa59 <ema_modify_permissions+0x129>
    ab25:	4c 8b 6c 24 38       	mov    0x38(%rsp),%r13
    ab2a:	49 8b 45 00          	mov    0x0(%r13),%rax
    ab2e:	e9 ff fe ff ff       	jmp    aa32 <ema_modify_permissions+0x102>
    ab33:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    ab38:	4c 89 ef             	mov    %r13,%rdi
    ab3b:	48 8d 4c 24 38       	lea    0x38(%rsp),%rcx
    ab40:	ba 01 00 00 00       	mov    $0x1,%edx
    ab45:	48 89 de             	mov    %rbx,%rsi
    ab48:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    ab4f:	00 00 
    ab51:	e8 ea f1 ff ff       	call   9d40 <ema_split>
    ab56:	4c 8b 6c 24 38       	mov    0x38(%rsp),%r13
    ab5b:	85 c0                	test   %eax,%eax
    ab5d:	0f 84 dc fe ff ff    	je     aa3f <ema_modify_permissions+0x10f>
    ab63:	e9 f1 fe ff ff       	jmp    aa59 <ema_modify_permissions+0x129>
    ab68:	e8 93 62 00 00       	call   10e00 <__stack_chk_fail>
    ab6d:	0f 1f 00             	nopl   (%rax)

000000000000ab70 <ema_do_uncommit>:
    ab70:	f3 0f 1e fa          	endbr64 
    ab74:	41 55                	push   %r13
    ab76:	49 89 f5             	mov    %rsi,%r13
    ab79:	41 54                	push   %r12
    ab7b:	53                   	push   %rbx
    ab7c:	48 83 ec 10          	sub    $0x10,%rsp
    ab80:	48 8b 07             	mov    (%rdi),%rax
    ab83:	44 8b 67 18          	mov    0x18(%rdi),%r12d
    ab87:	48 39 f0             	cmp    %rsi,%rax
    ab8a:	4c 0f 43 e8          	cmovae %rax,%r13
    ab8e:	48 03 47 08          	add    0x8(%rdi),%rax
    ab92:	48 39 d0             	cmp    %rdx,%rax
    ab95:	48 0f 47 c2          	cmova  %rdx,%rax
    ab99:	48 89 c3             	mov    %rax,%rbx
    ab9c:	41 83 e4 07          	and    $0x7,%r12d
    aba0:	74 1e                	je     abc0 <ema_do_uncommit+0x50>
    aba2:	48 83 c4 10          	add    $0x10,%rsp
    aba6:	44 89 e1             	mov    %r12d,%ecx
    aba9:	48 89 da             	mov    %rbx,%rdx
    abac:	4c 89 ee             	mov    %r13,%rsi
    abaf:	5b                   	pop    %rbx
    abb0:	41 5c                	pop    %r12
    abb2:	41 5d                	pop    %r13
    abb4:	e9 37 ed ff ff       	jmp    98f0 <ema_do_uncommit_real>
    abb9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    abc0:	b9 01 00 00 00       	mov    $0x1,%ecx
    abc5:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    abca:	e8 61 fd ff ff       	call   a930 <ema_modify_permissions>
    abcf:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    abd4:	eb cc                	jmp    aba2 <ema_do_uncommit+0x32>
    abd6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    abdd:	00 00 00 

000000000000abe0 <ema_do_dealloc>:
    abe0:	f3 0f 1e fa          	endbr64 
    abe4:	41 54                	push   %r12
    abe6:	49 89 f4             	mov    %rsi,%r12
    abe9:	55                   	push   %rbp
    abea:	53                   	push   %rbx
    abeb:	48 89 fb             	mov    %rdi,%rbx
    abee:	48 83 ec 10          	sub    $0x10,%rsp
    abf2:	48 8b 6f 08          	mov    0x8(%rdi),%rbp
    abf6:	48 8b 4f 18          	mov    0x18(%rdi),%rcx
    abfa:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    ac01:	00 00 
    ac03:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    ac08:	48 8b 07             	mov    (%rdi),%rax
    ac0b:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    ac12:	00 
    ac13:	48 39 f0             	cmp    %rsi,%rax
    ac16:	4c 0f 43 e0          	cmovae %rax,%r12
    ac1a:	48 01 c5             	add    %rax,%rbp
    ac1d:	48 39 d5             	cmp    %rdx,%rbp
    ac20:	48 0f 47 ea          	cmova  %rdx,%rbp
    ac24:	f6 47 10 01          	testb  $0x1,0x10(%rdi)
    ac28:	75 1c                	jne    ac46 <ema_do_dealloc+0x66>
    ac2a:	83 e1 07             	and    $0x7,%ecx
    ac2d:	74 71                	je     aca0 <ema_do_dealloc+0xc0>
    ac2f:	31 c9                	xor    %ecx,%ecx
    ac31:	48 89 ea             	mov    %rbp,%rdx
    ac34:	4c 89 e6             	mov    %r12,%rsi
    ac37:	48 89 df             	mov    %rbx,%rdi
    ac3a:	e8 b1 ec ff ff       	call   98f0 <ema_do_uncommit_real>
    ac3f:	85 c0                	test   %eax,%eax
    ac41:	75 3e                	jne    ac81 <ema_do_dealloc+0xa1>
    ac43:	48 8b 03             	mov    (%rbx),%rax
    ac46:	4c 39 e0             	cmp    %r12,%rax
    ac49:	72 65                	jb     acb0 <ema_do_dealloc+0xd0>
    ac4b:	48 03 43 08          	add    0x8(%rbx),%rax
    ac4f:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    ac56:	00 
    ac57:	48 39 c5             	cmp    %rax,%rbp
    ac5a:	73 1b                	jae    ac77 <ema_do_dealloc+0x97>
    ac5c:	48 89 e1             	mov    %rsp,%rcx
    ac5f:	ba 01 00 00 00       	mov    $0x1,%edx
    ac64:	48 89 ee             	mov    %rbp,%rsi
    ac67:	48 89 df             	mov    %rbx,%rdi
    ac6a:	e8 d1 f0 ff ff       	call   9d40 <ema_split>
    ac6f:	85 c0                	test   %eax,%eax
    ac71:	75 0e                	jne    ac81 <ema_do_dealloc+0xa1>
    ac73:	48 8b 1c 24          	mov    (%rsp),%rbx
    ac77:	48 89 df             	mov    %rbx,%rdi
    ac7a:	e8 11 f8 ff ff       	call   a490 <ema_destroy>
    ac7f:	31 c0                	xor    %eax,%eax
    ac81:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    ac86:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    ac8d:	00 00 
    ac8f:	75 3f                	jne    acd0 <ema_do_dealloc+0xf0>
    ac91:	48 83 c4 10          	add    $0x10,%rsp
    ac95:	5b                   	pop    %rbx
    ac96:	5d                   	pop    %rbp
    ac97:	41 5c                	pop    %r12
    ac99:	c3                   	ret    
    ac9a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    aca0:	b9 01 00 00 00       	mov    $0x1,%ecx
    aca5:	e8 86 fc ff ff       	call   a930 <ema_modify_permissions>
    acaa:	eb 83                	jmp    ac2f <ema_do_dealloc+0x4f>
    acac:	0f 1f 40 00          	nopl   0x0(%rax)
    acb0:	31 d2                	xor    %edx,%edx
    acb2:	48 89 e1             	mov    %rsp,%rcx
    acb5:	4c 89 e6             	mov    %r12,%rsi
    acb8:	48 89 df             	mov    %rbx,%rdi
    acbb:	e8 80 f0 ff ff       	call   9d40 <ema_split>
    acc0:	85 c0                	test   %eax,%eax
    acc2:	75 bd                	jne    ac81 <ema_do_dealloc+0xa1>
    acc4:	48 8b 1c 24          	mov    (%rsp),%rbx
    acc8:	48 8b 03             	mov    (%rbx),%rax
    accb:	e9 7b ff ff ff       	jmp    ac4b <ema_do_dealloc+0x6b>
    acd0:	e8 2b 61 00 00       	call   10e00 <__stack_chk_fail>
    acd5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    acdc:	00 00 00 
    acdf:	90                   	nop

000000000000ace0 <ema_do_dealloc_loop>:
    ace0:	f3 0f 1e fa          	endbr64 
    ace4:	41 55                	push   %r13
    ace6:	49 89 d5             	mov    %rdx,%r13
    ace9:	41 54                	push   %r12
    aceb:	49 89 cc             	mov    %rcx,%r12
    acee:	55                   	push   %rbp
    acef:	48 89 f5             	mov    %rsi,%rbp
    acf2:	53                   	push   %rbx
    acf3:	48 83 ec 08          	sub    $0x8,%rsp
    acf7:	eb 1d                	jmp    ad16 <ema_do_dealloc_loop+0x36>
    acf9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    ad00:	4c 89 e2             	mov    %r12,%rdx
    ad03:	4c 89 ee             	mov    %r13,%rsi
    ad06:	48 8b 5f 38          	mov    0x38(%rdi),%rbx
    ad0a:	e8 d1 fe ff ff       	call   abe0 <ema_do_dealloc>
    ad0f:	85 c0                	test   %eax,%eax
    ad11:	75 0a                	jne    ad1d <ema_do_dealloc_loop+0x3d>
    ad13:	48 89 df             	mov    %rbx,%rdi
    ad16:	48 39 ef             	cmp    %rbp,%rdi
    ad19:	75 e5                	jne    ad00 <ema_do_dealloc_loop+0x20>
    ad1b:	31 c0                	xor    %eax,%eax
    ad1d:	48 83 c4 08          	add    $0x8,%rsp
    ad21:	5b                   	pop    %rbx
    ad22:	5d                   	pop    %rbp
    ad23:	41 5c                	pop    %r12
    ad25:	41 5d                	pop    %r13
    ad27:	c3                   	ret    
    ad28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    ad2f:	00 

000000000000ad30 <ema_do_uncommit_loop>:
    ad30:	f3 0f 1e fa          	endbr64 
    ad34:	41 57                	push   %r15
    ad36:	41 56                	push   %r14
    ad38:	41 55                	push   %r13
    ad3a:	41 54                	push   %r12
    ad3c:	49 89 d4             	mov    %rdx,%r12
    ad3f:	55                   	push   %rbp
    ad40:	48 89 cd             	mov    %rcx,%rbp
    ad43:	53                   	push   %rbx
    ad44:	48 83 ec 18          	sub    $0x18,%rsp
    ad48:	48 8b 17             	mov    (%rdi),%rdx
    ad4b:	48 39 f7             	cmp    %rsi,%rdi
    ad4e:	0f 84 d9 00 00 00    	je     ae2d <ema_do_uncommit_loop+0xfd>
    ad54:	49 89 ff             	mov    %rdi,%r15
    ad57:	48 89 f3             	mov    %rsi,%rbx
    ad5a:	48 89 f8             	mov    %rdi,%rax
    ad5d:	0f 1f 00             	nopl   (%rax)
    ad60:	f6 40 10 01          	testb  $0x1,0x10(%rax)
    ad64:	75 32                	jne    ad98 <ema_do_uncommit_loop+0x68>
    ad66:	48 8b 48 08          	mov    0x8(%rax),%rcx
    ad6a:	48 8b 40 38          	mov    0x38(%rax),%rax
    ad6e:	48 01 d1             	add    %rdx,%rcx
    ad71:	48 39 c3             	cmp    %rax,%rbx
    ad74:	74 3a                	je     adb0 <ema_do_uncommit_loop+0x80>
    ad76:	48 8b 10             	mov    (%rax),%rdx
    ad79:	48 39 ca             	cmp    %rcx,%rdx
    ad7c:	74 e2                	je     ad60 <ema_do_uncommit_loop+0x30>
    ad7e:	b8 16 00 00 00       	mov    $0x16,%eax
    ad83:	48 83 c4 18          	add    $0x18,%rsp
    ad87:	5b                   	pop    %rbx
    ad88:	5d                   	pop    %rbp
    ad89:	41 5c                	pop    %r12
    ad8b:	41 5d                	pop    %r13
    ad8d:	41 5e                	pop    %r14
    ad8f:	41 5f                	pop    %r15
    ad91:	c3                   	ret    
    ad92:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    ad98:	48 83 c4 18          	add    $0x18,%rsp
    ad9c:	b8 0d 00 00 00       	mov    $0xd,%eax
    ada1:	5b                   	pop    %rbx
    ada2:	5d                   	pop    %rbp
    ada3:	41 5c                	pop    %r12
    ada5:	41 5d                	pop    %r13
    ada7:	41 5e                	pop    %r14
    ada9:	41 5f                	pop    %r15
    adab:	c3                   	ret    
    adac:	0f 1f 40 00          	nopl   0x0(%rax)
    adb0:	b8 16 00 00 00       	mov    $0x16,%eax
    adb5:	48 39 e9             	cmp    %rbp,%rcx
    adb8:	73 1e                	jae    add8 <ema_do_uncommit_loop+0xa8>
    adba:	eb c7                	jmp    ad83 <ema_do_uncommit_loop+0x53>
    adbc:	0f 1f 40 00          	nopl   0x0(%rax)
    adc0:	44 89 c1             	mov    %r8d,%ecx
    adc3:	4c 89 f2             	mov    %r14,%rdx
    adc6:	4c 89 ce             	mov    %r9,%rsi
    adc9:	4c 89 ff             	mov    %r15,%rdi
    adcc:	e8 1f eb ff ff       	call   98f0 <ema_do_uncommit_real>
    add1:	85 c0                	test   %eax,%eax
    add3:	75 ae                	jne    ad83 <ema_do_uncommit_loop+0x53>
    add5:	4d 89 ef             	mov    %r13,%r15
    add8:	49 39 df             	cmp    %rbx,%r15
    addb:	74 5e                	je     ae3b <ema_do_uncommit_loop+0x10b>
    addd:	49 8b 07             	mov    (%r15),%rax
    ade0:	45 8b 47 18          	mov    0x18(%r15),%r8d
    ade4:	4d 8b 6f 38          	mov    0x38(%r15),%r13
    ade8:	49 39 c4             	cmp    %rax,%r12
    adeb:	49 89 c1             	mov    %rax,%r9
    adee:	4d 0f 43 cc          	cmovae %r12,%r9
    adf2:	49 03 47 08          	add    0x8(%r15),%rax
    adf6:	48 39 e8             	cmp    %rbp,%rax
    adf9:	48 0f 47 c5          	cmova  %rbp,%rax
    adfd:	49 89 c6             	mov    %rax,%r14
    ae00:	41 83 e0 07          	and    $0x7,%r8d
    ae04:	75 ba                	jne    adc0 <ema_do_uncommit_loop+0x90>
    ae06:	b9 01 00 00 00       	mov    $0x1,%ecx
    ae0b:	48 89 ea             	mov    %rbp,%rdx
    ae0e:	4c 89 e6             	mov    %r12,%rsi
    ae11:	4c 89 ff             	mov    %r15,%rdi
    ae14:	44 89 44 24 0c       	mov    %r8d,0xc(%rsp)
    ae19:	4c 89 0c 24          	mov    %r9,(%rsp)
    ae1d:	e8 0e fb ff ff       	call   a930 <ema_modify_permissions>
    ae22:	44 8b 44 24 0c       	mov    0xc(%rsp),%r8d
    ae27:	4c 8b 0c 24          	mov    (%rsp),%r9
    ae2b:	eb 93                	jmp    adc0 <ema_do_uncommit_loop+0x90>
    ae2d:	b8 16 00 00 00       	mov    $0x16,%eax
    ae32:	48 39 ca             	cmp    %rcx,%rdx
    ae35:	0f 82 48 ff ff ff    	jb     ad83 <ema_do_uncommit_loop+0x53>
    ae3b:	48 83 c4 18          	add    $0x18,%rsp
    ae3f:	31 c0                	xor    %eax,%eax
    ae41:	5b                   	pop    %rbx
    ae42:	5d                   	pop    %rbp
    ae43:	41 5c                	pop    %r12
    ae45:	41 5d                	pop    %r13
    ae47:	41 5e                	pop    %r14
    ae49:	41 5f                	pop    %r15
    ae4b:	c3                   	ret    
    ae4c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000ae50 <ema_modify_permissions_loop>:
    ae50:	f3 0f 1e fa          	endbr64 
    ae54:	41 57                	push   %r15
    ae56:	41 56                	push   %r14
    ae58:	41 55                	push   %r13
    ae5a:	41 54                	push   %r12
    ae5c:	55                   	push   %rbp
    ae5d:	48 89 d5             	mov    %rdx,%rbp
    ae60:	53                   	push   %rbx
    ae61:	48 89 cb             	mov    %rcx,%rbx
    ae64:	48 83 ec 08          	sub    $0x8,%rsp
    ae68:	48 8b 17             	mov    (%rdi),%rdx
    ae6b:	48 39 f7             	cmp    %rsi,%rdi
    ae6e:	0f 84 de 00 00 00    	je     af52 <ema_modify_permissions_loop+0x102>
    ae74:	49 89 fe             	mov    %rdi,%r14
    ae77:	49 89 f4             	mov    %rsi,%r12
    ae7a:	45 89 c5             	mov    %r8d,%r13d
    ae7d:	49 89 ff             	mov    %rdi,%r15
    ae80:	41 f6 47 19 02       	testb  $0x2,0x19(%r15)
    ae85:	74 79                	je     af00 <ema_modify_permissions_loop+0xb0>
    ae87:	41 f6 47 10 01       	testb  $0x1,0x10(%r15)
    ae8c:	75 72                	jne    af00 <ema_modify_permissions_loop+0xb0>
    ae8e:	48 39 d5             	cmp    %rdx,%rbp
    ae91:	48 89 d6             	mov    %rdx,%rsi
    ae94:	49 8b 47 08          	mov    0x8(%r15),%rax
    ae98:	49 8b 7f 20          	mov    0x20(%r15),%rdi
    ae9c:	48 0f 43 f5          	cmovae %rbp,%rsi
    aea0:	48 01 d0             	add    %rdx,%rax
    aea3:	48 29 d6             	sub    %rdx,%rsi
    aea6:	48 c1 ee 0c          	shr    $0xc,%rsi
    aeaa:	48 39 d8             	cmp    %rbx,%rax
    aead:	48 0f 47 c3          	cmova  %rbx,%rax
    aeb1:	48 29 d0             	sub    %rdx,%rax
    aeb4:	48 c1 e8 0c          	shr    $0xc,%rax
    aeb8:	48 85 ff             	test   %rdi,%rdi
    aebb:	74 27                	je     aee4 <ema_modify_permissions_loop+0x94>
    aebd:	48 29 f0             	sub    %rsi,%rax
    aec0:	48 89 c2             	mov    %rax,%rdx
    aec3:	e8 28 e4 ff ff       	call   92f0 <bit_array_test_range>
    aec8:	84 c0                	test   %al,%al
    aeca:	74 18                	je     aee4 <ema_modify_permissions_loop+0x94>
    aecc:	49 8b 47 08          	mov    0x8(%r15),%rax
    aed0:	49 03 07             	add    (%r15),%rax
    aed3:	4d 8b 7f 38          	mov    0x38(%r15),%r15
    aed7:	4d 39 fc             	cmp    %r15,%r12
    aeda:	74 3c                	je     af18 <ema_modify_permissions_loop+0xc8>
    aedc:	49 8b 17             	mov    (%r15),%rdx
    aedf:	48 39 d0             	cmp    %rdx,%rax
    aee2:	74 9c                	je     ae80 <ema_modify_permissions_loop+0x30>
    aee4:	b8 16 00 00 00       	mov    $0x16,%eax
    aee9:	48 83 c4 08          	add    $0x8,%rsp
    aeed:	5b                   	pop    %rbx
    aeee:	5d                   	pop    %rbp
    aeef:	41 5c                	pop    %r12
    aef1:	41 5d                	pop    %r13
    aef3:	41 5e                	pop    %r14
    aef5:	41 5f                	pop    %r15
    aef7:	c3                   	ret    
    aef8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    aeff:	00 
    af00:	48 83 c4 08          	add    $0x8,%rsp
    af04:	b8 0d 00 00 00       	mov    $0xd,%eax
    af09:	5b                   	pop    %rbx
    af0a:	5d                   	pop    %rbp
    af0b:	41 5c                	pop    %r12
    af0d:	41 5d                	pop    %r13
    af0f:	41 5e                	pop    %r14
    af11:	41 5f                	pop    %r15
    af13:	c3                   	ret    
    af14:	0f 1f 40 00          	nopl   0x0(%rax)
    af18:	48 39 d8             	cmp    %rbx,%rax
    af1b:	73 1f                	jae    af3c <ema_modify_permissions_loop+0xec>
    af1d:	eb c5                	jmp    aee4 <ema_modify_permissions_loop+0x94>
    af1f:	90                   	nop
    af20:	44 89 e9             	mov    %r13d,%ecx
    af23:	48 89 da             	mov    %rbx,%rdx
    af26:	48 89 ee             	mov    %rbp,%rsi
    af29:	4c 89 f7             	mov    %r14,%rdi
    af2c:	4d 8b 7e 38          	mov    0x38(%r14),%r15
    af30:	e8 fb f9 ff ff       	call   a930 <ema_modify_permissions>
    af35:	85 c0                	test   %eax,%eax
    af37:	75 b0                	jne    aee9 <ema_modify_permissions_loop+0x99>
    af39:	4d 89 fe             	mov    %r15,%r14
    af3c:	4d 39 f4             	cmp    %r14,%r12
    af3f:	75 df                	jne    af20 <ema_modify_permissions_loop+0xd0>
    af41:	31 c0                	xor    %eax,%eax
    af43:	48 83 c4 08          	add    $0x8,%rsp
    af47:	5b                   	pop    %rbx
    af48:	5d                   	pop    %rbp
    af49:	41 5c                	pop    %r12
    af4b:	41 5d                	pop    %r13
    af4d:	41 5e                	pop    %r14
    af4f:	41 5f                	pop    %r15
    af51:	c3                   	ret    
    af52:	48 39 ca             	cmp    %rcx,%rdx
    af55:	72 8d                	jb     aee4 <ema_modify_permissions_loop+0x94>
    af57:	31 c0                	xor    %eax,%eax
    af59:	eb e8                	jmp    af43 <ema_modify_permissions_loop+0xf3>
    af5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000af60 <ema_do_commit_data>:
    af60:	f3 0f 1e fa          	endbr64 
    af64:	55                   	push   %rbp
    af65:	41 81 c8 00 02 00 00 	or     $0x200,%r8d
    af6c:	66 0f ef c0          	pxor   %xmm0,%xmm0
    af70:	4d 63 c0             	movslq %r8d,%r8
    af73:	48 89 e5             	mov    %rsp,%rbp
    af76:	41 57                	push   %r15
    af78:	41 56                	push   %r14
    af7a:	49 89 f6             	mov    %rsi,%r14
    af7d:	41 55                	push   %r13
    af7f:	41 54                	push   %r12
    af81:	49 89 d4             	mov    %rdx,%r12
    af84:	53                   	push   %rbx
    af85:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    af89:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
    af90:	48 89 7c 24 38       	mov    %rdi,0x38(%rsp)
    af95:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    af9c:	00 00 
    af9e:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
    afa5:	00 
    afa6:	31 c0                	xor    %eax,%eax
    afa8:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
    afad:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
    afb4:	00 00 
    afb6:	0f 11 44 24 48       	movups %xmm0,0x48(%rsp)
    afbb:	0f 11 44 24 58       	movups %xmm0,0x58(%rsp)
    afc0:	0f 11 44 24 68       	movups %xmm0,0x68(%rsp)
    afc5:	48 39 d6             	cmp    %rdx,%rsi
    afc8:	73 46                	jae    b010 <ema_do_commit_data+0xb0>
    afca:	48 29 f1             	sub    %rsi,%rcx
    afcd:	49 89 f7             	mov    %rsi,%r15
    afd0:	4c 8d 6c 24 40       	lea    0x40(%rsp),%r13
    afd5:	48 89 cb             	mov    %rcx,%rbx
    afd8:	eb 12                	jmp    afec <ema_do_commit_data+0x8c>
    afda:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    afe0:	49 81 c7 00 10 00 00 	add    $0x1000,%r15
    afe7:	4d 39 e7             	cmp    %r12,%r15
    afea:	73 24                	jae    b010 <ema_do_commit_data+0xb0>
    afec:	4a 8d 14 3b          	lea    (%rbx,%r15,1),%rdx
    aff0:	4c 89 fe             	mov    %r15,%rsi
    aff3:	4c 89 ef             	mov    %r13,%rdi
    aff6:	e8 e2 78 00 00       	call   128dd <do_eacceptcopy>
    affb:	85 c0                	test   %eax,%eax
    affd:	74 e1                	je     afe0 <ema_do_commit_data+0x80>
    afff:	b8 0e 00 00 00       	mov    $0xe,%eax
    b004:	eb 1a                	jmp    b020 <ema_do_commit_data+0xc0>
    b006:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b00d:	00 00 00 
    b010:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
    b015:	4c 89 e2             	mov    %r12,%rdx
    b018:	4c 89 f6             	mov    %r14,%rsi
    b01b:	e8 70 eb ff ff       	call   9b90 <ema_set_eaccept>
    b020:	48 8b 94 24 b8 00 00 	mov    0xb8(%rsp),%rdx
    b027:	00 
    b028:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    b02f:	00 00 
    b031:	75 0f                	jne    b042 <ema_do_commit_data+0xe2>
    b033:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    b037:	5b                   	pop    %rbx
    b038:	41 5c                	pop    %r12
    b03a:	41 5d                	pop    %r13
    b03c:	41 5e                	pop    %r14
    b03e:	41 5f                	pop    %r15
    b040:	5d                   	pop    %rbp
    b041:	c3                   	ret    
    b042:	e8 b9 5d 00 00       	call   10e00 <__stack_chk_fail>
    b047:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    b04e:	00 00 

000000000000b050 <ema_do_commit_data_loop>:
    b050:	f3 0f 1e fa          	endbr64 
    b054:	41 57                	push   %r15
    b056:	41 56                	push   %r14
    b058:	41 55                	push   %r13
    b05a:	41 54                	push   %r12
    b05c:	55                   	push   %rbp
    b05d:	53                   	push   %rbx
    b05e:	48 89 cb             	mov    %rcx,%rbx
    b061:	48 83 ec 18          	sub    $0x18,%rsp
    b065:	48 8b 0f             	mov    (%rdi),%rcx
    b068:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    b06d:	44 89 4c 24 04       	mov    %r9d,0x4(%rsp)
    b072:	48 39 f7             	cmp    %rsi,%rdi
    b075:	0f 84 a2 00 00 00    	je     b11d <ema_do_commit_data_loop+0xcd>
    b07b:	48 89 fd             	mov    %rdi,%rbp
    b07e:	49 89 f4             	mov    %rsi,%r12
    b081:	49 89 d7             	mov    %rdx,%r15
    b084:	49 89 fd             	mov    %rdi,%r13
    b087:	eb 72                	jmp    b0fb <ema_do_commit_data_loop+0xab>
    b089:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b090:	41 8b 45 10          	mov    0x10(%r13),%eax
    b094:	a8 01                	test   $0x1,%al
    b096:	75 71                	jne    b109 <ema_do_commit_data_loop+0xb9>
    b098:	a8 04                	test   $0x4,%al
    b09a:	0f 84 86 00 00 00    	je     b126 <ema_do_commit_data_loop+0xd6>
    b0a0:	49 8b 7d 20          	mov    0x20(%r13),%rdi
    b0a4:	49 8b 45 08          	mov    0x8(%r13),%rax
    b0a8:	48 85 ff             	test   %rdi,%rdi
    b0ab:	74 39                	je     b0e6 <ema_do_commit_data_loop+0x96>
    b0ad:	49 39 cf             	cmp    %rcx,%r15
    b0b0:	48 89 ce             	mov    %rcx,%rsi
    b0b3:	49 0f 43 f7          	cmovae %r15,%rsi
    b0b7:	48 01 c8             	add    %rcx,%rax
    b0ba:	48 29 ce             	sub    %rcx,%rsi
    b0bd:	48 c1 ee 0c          	shr    $0xc,%rsi
    b0c1:	48 39 d8             	cmp    %rbx,%rax
    b0c4:	48 0f 47 c3          	cmova  %rbx,%rax
    b0c8:	48 89 c2             	mov    %rax,%rdx
    b0cb:	48 29 ca             	sub    %rcx,%rdx
    b0ce:	48 c1 ea 0c          	shr    $0xc,%rdx
    b0d2:	48 29 f2             	sub    %rsi,%rdx
    b0d5:	e8 d6 e2 ff ff       	call   93b0 <bit_array_test_range_any>
    b0da:	84 c0                	test   %al,%al
    b0dc:	75 2b                	jne    b109 <ema_do_commit_data_loop+0xb9>
    b0de:	49 8b 4d 00          	mov    0x0(%r13),%rcx
    b0e2:	49 8b 45 08          	mov    0x8(%r13),%rax
    b0e6:	4d 8b 6d 38          	mov    0x38(%r13),%r13
    b0ea:	48 01 c8             	add    %rcx,%rax
    b0ed:	4d 39 ec             	cmp    %r13,%r12
    b0f0:	74 4e                	je     b140 <ema_do_commit_data_loop+0xf0>
    b0f2:	49 8b 4d 00          	mov    0x0(%r13),%rcx
    b0f6:	48 39 c8             	cmp    %rcx,%rax
    b0f9:	75 2b                	jne    b126 <ema_do_commit_data_loop+0xd6>
    b0fb:	49 8b 45 18          	mov    0x18(%r13),%rax
    b0ff:	48 f7 d0             	not    %rax
    b102:	a9 02 02 00 00       	test   $0x202,%eax
    b107:	74 87                	je     b090 <ema_do_commit_data_loop+0x40>
    b109:	b8 0d 00 00 00       	mov    $0xd,%eax
    b10e:	48 83 c4 18          	add    $0x18,%rsp
    b112:	5b                   	pop    %rbx
    b113:	5d                   	pop    %rbp
    b114:	41 5c                	pop    %r12
    b116:	41 5d                	pop    %r13
    b118:	41 5e                	pop    %r14
    b11a:	41 5f                	pop    %r15
    b11c:	c3                   	ret    
    b11d:	48 39 d9             	cmp    %rbx,%rcx
    b120:	0f 83 98 00 00 00    	jae    b1be <ema_do_commit_data_loop+0x16e>
    b126:	48 83 c4 18          	add    $0x18,%rsp
    b12a:	b8 16 00 00 00       	mov    $0x16,%eax
    b12f:	5b                   	pop    %rbx
    b130:	5d                   	pop    %rbp
    b131:	41 5c                	pop    %r12
    b133:	41 5d                	pop    %r13
    b135:	41 5e                	pop    %r14
    b137:	41 5f                	pop    %r15
    b139:	c3                   	ret    
    b13a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b140:	48 39 d8             	cmp    %rbx,%rax
    b143:	72 e1                	jb     b126 <ema_do_commit_data_loop+0xd6>
    b145:	49 89 ee             	mov    %rbp,%r14
    b148:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    b14f:	00 
    b150:	49 8b 16             	mov    (%r14),%rdx
    b153:	4c 89 fe             	mov    %r15,%rsi
    b156:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    b15b:	4c 89 f7             	mov    %r14,%rdi
    b15e:	44 8b 44 24 04       	mov    0x4(%rsp),%r8d
    b163:	4c 39 fa             	cmp    %r15,%rdx
    b166:	48 0f 43 f2          	cmovae %rdx,%rsi
    b16a:	49 03 56 08          	add    0x8(%r14),%rdx
    b16e:	48 89 f1             	mov    %rsi,%rcx
    b171:	4c 29 f9             	sub    %r15,%rcx
    b174:	48 01 c1             	add    %rax,%rcx
    b177:	48 39 da             	cmp    %rbx,%rdx
    b17a:	48 0f 47 d3          	cmova  %rbx,%rdx
    b17e:	e8 dd fd ff ff       	call   af60 <ema_do_commit_data>
    b183:	85 c0                	test   %eax,%eax
    b185:	75 87                	jne    b10e <ema_do_commit_data_loop+0xbe>
    b187:	4d 8b 76 38          	mov    0x38(%r14),%r14
    b18b:	4d 39 ee             	cmp    %r13,%r14
    b18e:	75 c0                	jne    b150 <ema_do_commit_data_loop+0x100>
    b190:	49 39 ec             	cmp    %rbp,%r12
    b193:	74 29                	je     b1be <ema_do_commit_data_loop+0x16e>
    b195:	0f 1f 00             	nopl   (%rax)
    b198:	8b 4c 24 04          	mov    0x4(%rsp),%ecx
    b19c:	48 89 da             	mov    %rbx,%rdx
    b19f:	4c 89 fe             	mov    %r15,%rsi
    b1a2:	48 89 ef             	mov    %rbp,%rdi
    b1a5:	4c 8b 75 38          	mov    0x38(%rbp),%r14
    b1a9:	e8 82 f7 ff ff       	call   a930 <ema_modify_permissions>
    b1ae:	85 c0                	test   %eax,%eax
    b1b0:	0f 85 58 ff ff ff    	jne    b10e <ema_do_commit_data_loop+0xbe>
    b1b6:	4c 89 f5             	mov    %r14,%rbp
    b1b9:	49 39 ec             	cmp    %rbp,%r12
    b1bc:	75 da                	jne    b198 <ema_do_commit_data_loop+0x148>
    b1be:	48 83 c4 18          	add    $0x18,%rsp
    b1c2:	31 c0                	xor    %eax,%eax
    b1c4:	5b                   	pop    %rbx
    b1c5:	5d                   	pop    %rbp
    b1c6:	41 5c                	pop    %r12
    b1c8:	41 5d                	pop    %r13
    b1ca:	41 5e                	pop    %r14
    b1cc:	41 5f                	pop    %r15
    b1ce:	c3                   	ret    
    b1cf:	90                   	nop

000000000000b1d0 <ema_realloc_from_reserve_range>:
    b1d0:	f3 0f 1e fa          	endbr64 
    b1d4:	41 57                	push   %r15
    b1d6:	41 56                	push   %r14
    b1d8:	41 55                	push   %r13
    b1da:	49 89 d5             	mov    %rdx,%r13
    b1dd:	41 54                	push   %r12
    b1df:	49 89 cc             	mov    %rcx,%r12
    b1e2:	55                   	push   %rbp
    b1e3:	48 89 fd             	mov    %rdi,%rbp
    b1e6:	53                   	push   %rbx
    b1e7:	48 89 f3             	mov    %rsi,%rbx
    b1ea:	48 83 ec 28          	sub    $0x28,%rsp
    b1ee:	4c 8b 37             	mov    (%rdi),%r14
    b1f1:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
    b1f6:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    b1fb:	44 89 44 24 04       	mov    %r8d,0x4(%rsp)
    b200:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    b205:	48 39 f7             	cmp    %rsi,%rdi
    b208:	74 4a                	je     b254 <ema_realloc_from_reserve_range+0x84>
    b20a:	49 89 ff             	mov    %rdi,%r15
    b20d:	eb 1a                	jmp    b229 <ema_realloc_from_reserve_range+0x59>
    b20f:	90                   	nop
    b210:	4d 39 37             	cmp    %r14,(%r15)
    b213:	75 20                	jne    b235 <ema_realloc_from_reserve_range+0x65>
    b215:	41 f6 47 10 01       	testb  $0x1,0x10(%r15)
    b21a:	74 19                	je     b235 <ema_realloc_from_reserve_range+0x65>
    b21c:	4d 03 77 08          	add    0x8(%r15),%r14
    b220:	4d 8b 7f 38          	mov    0x38(%r15),%r15
    b224:	49 39 df             	cmp    %rbx,%r15
    b227:	74 27                	je     b250 <ema_realloc_from_reserve_range+0x80>
    b229:	4c 89 ff             	mov    %r15,%rdi
    b22c:	e8 7f 07 00 00       	call   b9b0 <can_erealloc>
    b231:	85 c0                	test   %eax,%eax
    b233:	75 db                	jne    b210 <ema_realloc_from_reserve_range+0x40>
    b235:	48 83 c4 28          	add    $0x28,%rsp
    b239:	31 c0                	xor    %eax,%eax
    b23b:	5b                   	pop    %rbx
    b23c:	5d                   	pop    %rbp
    b23d:	41 5c                	pop    %r12
    b23f:	41 5d                	pop    %r13
    b241:	41 5e                	pop    %r14
    b243:	41 5f                	pop    %r15
    b245:	c3                   	ret    
    b246:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b24d:	00 00 00 
    b250:	4c 8b 75 00          	mov    0x0(%rbp),%r14
    b254:	48 8b 5b 40          	mov    0x40(%rbx),%rbx
    b258:	4d 39 ee             	cmp    %r13,%r14
    b25b:	72 6b                	jb     b2c8 <ema_realloc_from_reserve_range+0xf8>
    b25d:	48 8b 43 08          	mov    0x8(%rbx),%rax
    b261:	48 03 03             	add    (%rbx),%rax
    b264:	49 39 c4             	cmp    %rax,%r12
    b267:	0f 82 88 00 00 00    	jb     b2f5 <ema_realloc_from_reserve_range+0x125>
    b26d:	48 8b 6b 38          	mov    0x38(%rbx),%rbp
    b271:	48 89 6c 24 10       	mov    %rbp,0x10(%rsp)
    b276:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
    b27b:	48 39 dd             	cmp    %rbx,%rbp
    b27e:	74 11                	je     b291 <ema_realloc_from_reserve_range+0xc1>
    b280:	48 89 df             	mov    %rbx,%rdi
    b283:	48 8b 5b 38          	mov    0x38(%rbx),%rbx
    b287:	e8 04 f2 ff ff       	call   a490 <ema_destroy>
    b28c:	48 39 dd             	cmp    %rbx,%rbp
    b28f:	75 ef                	jne    b280 <ema_realloc_from_reserve_range+0xb0>
    b291:	48 83 ec 08          	sub    $0x8,%rsp
    b295:	4c 89 e6             	mov    %r12,%rsi
    b298:	4c 89 ef             	mov    %r13,%rdi
    b29b:	55                   	push   %rbp
    b29c:	4c 8b 4c 24 78       	mov    0x78(%rsp),%r9
    b2a1:	4c 29 ee             	sub    %r13,%rsi
    b2a4:	4c 8b 44 24 70       	mov    0x70(%rsp),%r8
    b2a9:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    b2ae:	8b 54 24 14          	mov    0x14(%rsp),%edx
    b2b2:	e8 c9 f0 ff ff       	call   a380 <ema_new>
    b2b7:	5a                   	pop    %rdx
    b2b8:	59                   	pop    %rcx
    b2b9:	48 83 c4 28          	add    $0x28,%rsp
    b2bd:	5b                   	pop    %rbx
    b2be:	5d                   	pop    %rbp
    b2bf:	41 5c                	pop    %r12
    b2c1:	41 5d                	pop    %r13
    b2c3:	41 5e                	pop    %r14
    b2c5:	41 5f                	pop    %r15
    b2c7:	c3                   	ret    
    b2c8:	31 d2                	xor    %edx,%edx
    b2ca:	48 8d 4c 24 18       	lea    0x18(%rsp),%rcx
    b2cf:	4c 89 ee             	mov    %r13,%rsi
    b2d2:	48 89 ef             	mov    %rbp,%rdi
    b2d5:	e8 66 ea ff ff       	call   9d40 <ema_split>
    b2da:	85 c0                	test   %eax,%eax
    b2dc:	0f 85 53 ff ff ff    	jne    b235 <ema_realloc_from_reserve_range+0x65>
    b2e2:	48 39 dd             	cmp    %rbx,%rbp
    b2e5:	0f 85 72 ff ff ff    	jne    b25d <ema_realloc_from_reserve_range+0x8d>
    b2eb:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
    b2f0:	e9 68 ff ff ff       	jmp    b25d <ema_realloc_from_reserve_range+0x8d>
    b2f5:	31 d2                	xor    %edx,%edx
    b2f7:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
    b2fc:	4c 89 e6             	mov    %r12,%rsi
    b2ff:	48 89 df             	mov    %rbx,%rdi
    b302:	e8 39 ea ff ff       	call   9d40 <ema_split>
    b307:	85 c0                	test   %eax,%eax
    b309:	0f 85 26 ff ff ff    	jne    b235 <ema_realloc_from_reserve_range+0x65>
    b30f:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
    b314:	e9 5d ff ff ff       	jmp    b276 <ema_realloc_from_reserve_range+0xa6>
    b319:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000b320 <ema_do_alloc>:
    b320:	f3 0f 1e fa          	endbr64 
    b324:	41 55                	push   %r13
    b326:	41 54                	push   %r12
    b328:	55                   	push   %rbp
    b329:	53                   	push   %rbx
    b32a:	48 83 ec 08          	sub    $0x8,%rsp
    b32e:	8b 6f 10             	mov    0x10(%rdi),%ebp
    b331:	40 f6 c5 01          	test   $0x1,%bpl
    b335:	74 11                	je     b348 <ema_do_alloc+0x28>
    b337:	31 c0                	xor    %eax,%eax
    b339:	48 83 c4 08          	add    $0x8,%rsp
    b33d:	5b                   	pop    %rbx
    b33e:	5d                   	pop    %rbp
    b33f:	41 5c                	pop    %r12
    b341:	41 5d                	pop    %r13
    b343:	c3                   	ret    
    b344:	0f 1f 40 00          	nopl   0x0(%rax)
    b348:	4c 8b 6f 08          	mov    0x8(%rdi),%r13
    b34c:	8b 57 18             	mov    0x18(%rdi),%edx
    b34f:	48 89 fb             	mov    %rdi,%rbx
    b352:	89 e9                	mov    %ebp,%ecx
    b354:	4c 8b 27             	mov    (%rdi),%r12
    b357:	81 e2 00 ff 00 00    	and    $0xff00,%edx
    b35d:	4c 89 ee             	mov    %r13,%rsi
    b360:	4c 89 e7             	mov    %r12,%rdi
    b363:	e8 f8 a7 ff ff       	call   5b60 <sgx_mm_alloc_ocall>
    b368:	89 c2                	mov    %eax,%edx
    b36a:	b8 0e 00 00 00       	mov    $0xe,%eax
    b36f:	85 d2                	test   %edx,%edx
    b371:	75 c6                	jne    b339 <ema_do_alloc+0x19>
    b373:	40 f6 c5 02          	test   $0x2,%bpl
    b377:	74 37                	je     b3b0 <ema_do_alloc+0x90>
    b379:	89 e9                	mov    %ebp,%ecx
    b37b:	48 8b 53 18          	mov    0x18(%rbx),%rdx
    b37f:	4c 89 ee             	mov    %r13,%rsi
    b382:	4c 89 e7             	mov    %r12,%rdi
    b385:	c1 e9 04             	shr    $0x4,%ecx
    b388:	83 f1 01             	xor    $0x1,%ecx
    b38b:	83 e1 01             	and    $0x1,%ecx
    b38e:	e8 8d f1 ff ff       	call   a520 <do_commit>
    b393:	85 c0                	test   %eax,%eax
    b395:	75 a2                	jne    b339 <ema_do_alloc+0x19>
    b397:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    b39b:	48 85 ff             	test   %rdi,%rdi
    b39e:	74 50                	je     b3f0 <ema_do_alloc+0xd0>
    b3a0:	e8 ab e1 ff ff       	call   9550 <bit_array_set_all>
    b3a5:	31 c0                	xor    %eax,%eax
    b3a7:	eb 90                	jmp    b339 <ema_do_alloc+0x19>
    b3a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b3b0:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    b3b4:	48 85 ff             	test   %rdi,%rdi
    b3b7:	74 0f                	je     b3c8 <ema_do_alloc+0xa8>
    b3b9:	e8 92 e2 ff ff       	call   9650 <bit_array_reset_all>
    b3be:	31 c0                	xor    %eax,%eax
    b3c0:	e9 74 ff ff ff       	jmp    b339 <ema_do_alloc+0x19>
    b3c5:	0f 1f 00             	nopl   (%rax)
    b3c8:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    b3cc:	48 c1 ef 0c          	shr    $0xc,%rdi
    b3d0:	e8 7b de ff ff       	call   9250 <bit_array_new_reset>
    b3d5:	48 89 43 20          	mov    %rax,0x20(%rbx)
    b3d9:	48 85 c0             	test   %rax,%rax
    b3dc:	0f 85 55 ff ff ff    	jne    b337 <ema_do_alloc+0x17>
    b3e2:	b8 0c 00 00 00       	mov    $0xc,%eax
    b3e7:	e9 4d ff ff ff       	jmp    b339 <ema_do_alloc+0x19>
    b3ec:	0f 1f 40 00          	nopl   0x0(%rax)
    b3f0:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    b3f4:	48 c1 ef 0c          	shr    $0xc,%rdi
    b3f8:	e8 23 de ff ff       	call   9220 <bit_array_new_set>
    b3fd:	48 89 43 20          	mov    %rax,0x20(%rbx)
    b401:	48 85 c0             	test   %rax,%rax
    b404:	74 dc                	je     b3e2 <ema_do_alloc+0xc2>
    b406:	31 c0                	xor    %eax,%eax
    b408:	e9 2c ff ff ff       	jmp    b339 <ema_do_alloc+0x19>
    b40d:	0f 1f 00             	nopl   (%rax)

000000000000b410 <add_reserve>:
    b410:	41 54                	push   %r12
    b412:	55                   	push   %rbp
    b413:	53                   	push   %rbx
    b414:	31 db                	xor    %ebx,%ebx
    b416:	48 83 ec 10          	sub    $0x10,%rsp
    b41a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    b421:	00 00 
    b423:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    b428:	31 c0                	xor    %eax,%eax
    b42a:	80 3d ff ee 00 00 00 	cmpb   $0x0,0xeeff(%rip)        # 1a330 <adding_reserve>
    b431:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    b438:	00 
    b439:	74 25                	je     b460 <add_reserve+0x50>
    b43b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    b440:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    b447:	00 00 
    b449:	0f 85 fb 00 00 00    	jne    b54a <add_reserve+0x13a>
    b44f:	48 83 c4 10          	add    $0x10,%rsp
    b453:	89 d8                	mov    %ebx,%eax
    b455:	5b                   	pop    %rbx
    b456:	5d                   	pop    %rbp
    b457:	41 5c                	pop    %r12
    b459:	c3                   	ret    
    b45a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b460:	48 8b 35 61 ec 00 00 	mov    0xec61(%rip),%rsi        # 1a0c8 <reserve_size_increment>
    b467:	49 89 e4             	mov    %rsp,%r12
    b46a:	48 89 fd             	mov    %rdi,%rbp
    b46d:	ba 01 00 00 00       	mov    $0x1,%edx
    b472:	4d 89 e1             	mov    %r12,%r9
    b475:	c6 05 b4 ee 00 00 01 	movb   $0x1,0xeeb4(%rip)        # 1a330 <adding_reserve>
    b47c:	48 39 f7             	cmp    %rsi,%rdi
    b47f:	48 0f 43 f7          	cmovae %rdi,%rsi
    b483:	45 31 c0             	xor    %r8d,%r8d
    b486:	31 c9                	xor    %ecx,%ecx
    b488:	31 ff                	xor    %edi,%edi
    b48a:	48 89 35 37 ec 00 00 	mov    %rsi,0xec37(%rip)        # 1a0c8 <reserve_size_increment>
    b491:	48 81 c6 00 00 01 00 	add    $0x10000,%rsi
    b498:	e8 a3 0d 00 00       	call   c240 <sgx_mm_alloc>
    b49d:	89 c3                	mov    %eax,%ebx
    b49f:	85 c0                	test   %eax,%eax
    b4a1:	75 2a                	jne    b4cd <add_reserve+0xbd>
    b4a3:	48 8b 04 24          	mov    (%rsp),%rax
    b4a7:	48 8b 35 1a ec 00 00 	mov    0xec1a(%rip),%rsi        # 1a0c8 <reserve_size_increment>
    b4ae:	4d 89 e1             	mov    %r12,%r9
    b4b1:	31 c9                	xor    %ecx,%ecx
    b4b3:	45 31 c0             	xor    %r8d,%r8d
    b4b6:	ba 44 00 00 00       	mov    $0x44,%edx
    b4bb:	48 8d b8 00 80 00 00 	lea    0x8000(%rax),%rdi
    b4c2:	e8 79 0d 00 00       	call   c240 <sgx_mm_alloc>
    b4c7:	89 c3                	mov    %eax,%ebx
    b4c9:	85 c0                	test   %eax,%eax
    b4cb:	74 13                	je     b4e0 <add_reserve+0xd0>
    b4cd:	c6 05 5c ee 00 00 00 	movb   $0x0,0xee5c(%rip)        # 1a330 <adding_reserve>
    b4d4:	e9 62 ff ff ff       	jmp    b43b <add_reserve+0x2b>
    b4d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b4e0:	48 8b 3c 24          	mov    (%rsp),%rdi
    b4e4:	48 89 ee             	mov    %rbp,%rsi
    b4e7:	e8 44 0e 00 00       	call   c330 <sgx_mm_commit>
    b4ec:	48 8b 04 24          	mov    (%rsp),%rax
    b4f0:	48 8b 15 41 ee 00 00 	mov    0xee41(%rip),%rdx        # 1a338 <reserve_list>
    b4f7:	c6 05 32 ee 00 00 00 	movb   $0x0,0xee32(%rip)        # 1a330 <adding_reserve>
    b4fe:	66 48 0f 6e c0       	movq   %rax,%xmm0
    b503:	48 89 50 18          	mov    %rdx,0x18(%rax)
    b507:	ba 00 00 00 10       	mov    $0x10000000,%edx
    b50c:	0f 16 05 b5 eb 00 00 	movhps 0xebb5(%rip),%xmm0        # 1a0c8 <reserve_size_increment>
    b513:	66 0f d4 05 55 7d 00 	paddq  0x7d55(%rip),%xmm0        # 13270 <g_dyn_entry_table+0x70>
    b51a:	00 
    b51b:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    b522:	00 
    b523:	48 89 05 0e ee 00 00 	mov    %rax,0xee0e(%rip)        # 1a338 <reserve_list>
    b52a:	0f 11 00             	movups %xmm0,(%rax)
    b52d:	48 8b 05 94 eb 00 00 	mov    0xeb94(%rip),%rax        # 1a0c8 <reserve_size_increment>
    b534:	48 01 c0             	add    %rax,%rax
    b537:	48 39 d0             	cmp    %rdx,%rax
    b53a:	48 0f 47 c2          	cmova  %rdx,%rax
    b53e:	48 89 05 83 eb 00 00 	mov    %rax,0xeb83(%rip)        # 1a0c8 <reserve_size_increment>
    b545:	e9 f1 fe ff ff       	jmp    b43b <add_reserve+0x2b>
    b54a:	e8 b1 58 00 00       	call   10e00 <__stack_chk_fail>
    b54f:	90                   	nop

000000000000b550 <remove_from_list>:
    b550:	48 8b 07             	mov    (%rdi),%rax
    b553:	48 23 05 76 eb 00 00 	and    0xeb76(%rip),%rax        # 1a0d0 <size_mask>
    b55a:	48 89 c2             	mov    %rax,%rdx
    b55d:	48 8b 06             	mov    (%rsi),%rax
    b560:	48 39 f8             	cmp    %rdi,%rax
    b563:	74 43                	je     b5a8 <remove_from_list+0x58>
    b565:	48 83 fa 10          	cmp    $0x10,%rdx
    b569:	76 25                	jbe    b590 <remove_from_list+0x40>
    b56b:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    b56f:	48 8b 47 08          	mov    0x8(%rdi),%rax
    b573:	48 85 d2             	test   %rdx,%rdx
    b576:	74 04                	je     b57c <remove_from_list+0x2c>
    b578:	48 89 42 08          	mov    %rax,0x8(%rdx)
    b57c:	48 85 c0             	test   %rax,%rax
    b57f:	74 23                	je     b5a4 <remove_from_list+0x54>
    b581:	48 89 50 10          	mov    %rdx,0x10(%rax)
    b585:	c3                   	ret    
    b586:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b58d:	00 00 00 
    b590:	48 89 c2             	mov    %rax,%rdx
    b593:	48 8b 40 08          	mov    0x8(%rax),%rax
    b597:	48 39 f8             	cmp    %rdi,%rax
    b59a:	75 f4                	jne    b590 <remove_from_list+0x40>
    b59c:	48 8b 40 08          	mov    0x8(%rax),%rax
    b5a0:	48 89 42 08          	mov    %rax,0x8(%rdx)
    b5a4:	c3                   	ret    
    b5a5:	0f 1f 00             	nopl   (%rax)
    b5a8:	48 8b 40 08          	mov    0x8(%rax),%rax
    b5ac:	48 89 06             	mov    %rax,(%rsi)
    b5af:	48 85 c0             	test   %rax,%rax
    b5b2:	74 f0                	je     b5a4 <remove_from_list+0x54>
    b5b4:	48 83 fa 10          	cmp    $0x10,%rdx
    b5b8:	76 ea                	jbe    b5a4 <remove_from_list+0x54>
    b5ba:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    b5c1:	00 
    b5c2:	c3                   	ret    
    b5c3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b5ca:	00 00 00 
    b5cd:	0f 1f 00             	nopl   (%rax)

000000000000b5d0 <put_free_block>:
    b5d0:	48 8b 05 f9 ea 00 00 	mov    0xeaf9(%rip),%rax        # 1a0d0 <size_mask>
    b5d7:	48 8b 17             	mov    (%rdi),%rdx
    b5da:	48 21 c2             	and    %rax,%rdx
    b5dd:	48 81 fa 08 08 00 00 	cmp    $0x808,%rdx
    b5e4:	76 2a                	jbe    b610 <put_free_block+0x40>
    b5e6:	48 8b 15 53 ed 00 00 	mov    0xed53(%rip),%rdx        # 1a340 <large_block_list>
    b5ed:	48 89 57 08          	mov    %rdx,0x8(%rdi)
    b5f1:	48 85 d2             	test   %rdx,%rdx
    b5f4:	74 0d                	je     b603 <put_free_block+0x33>
    b5f6:	48 23 02             	and    (%rdx),%rax
    b5f9:	48 83 f8 10          	cmp    $0x10,%rax
    b5fd:	76 04                	jbe    b603 <put_free_block+0x33>
    b5ff:	48 89 7a 10          	mov    %rdi,0x10(%rdx)
    b603:	48 89 3d 36 ed 00 00 	mov    %rdi,0xed36(%rip)        # 1a340 <large_block_list>
    b60a:	c3                   	ret    
    b60b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b610:	48 8d 4a f0          	lea    -0x10(%rdx),%rcx
    b614:	48 8d 35 45 ed 00 00 	lea    0xed45(%rip),%rsi        # 1a360 <exact_block_list>
    b61b:	48 c1 e9 03          	shr    $0x3,%rcx
    b61f:	48 83 fa 0f          	cmp    $0xf,%rdx
    b623:	ba 00 00 00 00       	mov    $0x0,%edx
    b628:	48 0f 47 d1          	cmova  %rcx,%rdx
    b62c:	48 8b 0c d6          	mov    (%rsi,%rdx,8),%rcx
    b630:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
    b634:	48 85 c9             	test   %rcx,%rcx
    b637:	74 0d                	je     b646 <put_free_block+0x76>
    b639:	48 23 01             	and    (%rcx),%rax
    b63c:	48 83 f8 10          	cmp    $0x10,%rax
    b640:	76 04                	jbe    b646 <put_free_block+0x76>
    b642:	48 89 79 10          	mov    %rdi,0x10(%rcx)
    b646:	48 89 3c d6          	mov    %rdi,(%rsi,%rdx,8)
    b64a:	c3                   	ret    
    b64b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000b650 <neighbor_right>:
    b650:	4c 8b 05 79 ea 00 00 	mov    0xea79(%rip),%r8        # 1a0d0 <size_mask>
    b657:	4c 89 c2             	mov    %r8,%rdx
    b65a:	48 23 17             	and    (%rdi),%rdx
    b65d:	48 8d 04 17          	lea    (%rdi,%rdx,1),%rax
    b661:	74 2f                	je     b692 <neighbor_right+0x42>
    b663:	48 8b 0d ce ec 00 00 	mov    0xecce(%rip),%rcx        # 1a338 <reserve_list>
    b66a:	48 85 c9             	test   %rcx,%rcx
    b66d:	74 23                	je     b692 <neighbor_right+0x42>
    b66f:	48 89 ca             	mov    %rcx,%rdx
    b672:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b678:	48 8b 32             	mov    (%rdx),%rsi
    b67b:	48 39 f7             	cmp    %rsi,%rdi
    b67e:	72 09                	jb     b689 <neighbor_right+0x39>
    b680:	48 03 72 10          	add    0x10(%rdx),%rsi
    b684:	48 39 c6             	cmp    %rax,%rsi
    b687:	73 0f                	jae    b698 <neighbor_right+0x48>
    b689:	48 8b 52 18          	mov    0x18(%rdx),%rdx
    b68d:	48 85 d2             	test   %rdx,%rdx
    b690:	75 e6                	jne    b678 <neighbor_right+0x28>
    b692:	31 c0                	xor    %eax,%eax
    b694:	c3                   	ret    
    b695:	0f 1f 00             	nopl   (%rax)
    b698:	74 f8                	je     b692 <neighbor_right+0x42>
    b69a:	4c 23 00             	and    (%rax),%r8
    b69d:	74 f3                	je     b692 <neighbor_right+0x42>
    b69f:	4a 8d 3c 00          	lea    (%rax,%r8,1),%rdi
    b6a3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b6a8:	48 8b 31             	mov    (%rcx),%rsi
    b6ab:	48 39 f0             	cmp    %rsi,%rax
    b6ae:	72 09                	jb     b6b9 <neighbor_right+0x69>
    b6b0:	48 03 71 10          	add    0x10(%rcx),%rsi
    b6b4:	48 39 fe             	cmp    %rdi,%rsi
    b6b7:	73 0f                	jae    b6c8 <neighbor_right+0x78>
    b6b9:	48 8b 49 18          	mov    0x18(%rcx),%rcx
    b6bd:	48 85 c9             	test   %rcx,%rcx
    b6c0:	75 e6                	jne    b6a8 <neighbor_right+0x58>
    b6c2:	31 c0                	xor    %eax,%eax
    b6c4:	c3                   	ret    
    b6c5:	0f 1f 00             	nopl   (%rax)
    b6c8:	48 39 d1             	cmp    %rdx,%rcx
    b6cb:	ba 00 00 00 00       	mov    $0x0,%edx
    b6d0:	48 0f 45 c2          	cmovne %rdx,%rax
    b6d4:	c3                   	ret    
    b6d5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b6dc:	00 00 00 
    b6df:	90                   	nop

000000000000b6e0 <payload_to_block>:
    b6e0:	f3 0f 1e fa          	endbr64 
    b6e4:	48 89 f8             	mov    %rdi,%rax
    b6e7:	48 2b 05 ea e9 00 00 	sub    0xe9ea(%rip),%rax        # 1a0d8 <header_size>
    b6ee:	c3                   	ret    
    b6ef:	90                   	nop

000000000000b6f0 <block_to_payload>:
    b6f0:	f3 0f 1e fa          	endbr64 
    b6f4:	48 8d 47 08          	lea    0x8(%rdi),%rax
    b6f8:	c3                   	ret    
    b6f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000b700 <is_alloced>:
    b700:	f3 0f 1e fa          	endbr64 
    b704:	48 8b 07             	mov    (%rdi),%rax
    b707:	83 e0 01             	and    $0x1,%eax
    b70a:	c3                   	ret    
    b70b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000b710 <block_size>:
    b710:	f3 0f 1e fa          	endbr64 
    b714:	48 8b 07             	mov    (%rdi),%rax
    b717:	48 23 05 b2 e9 00 00 	and    0xe9b2(%rip),%rax        # 1a0d0 <size_mask>
    b71e:	c3                   	ret    
    b71f:	90                   	nop

000000000000b720 <block_end>:
    b720:	f3 0f 1e fa          	endbr64 
    b724:	48 8b 07             	mov    (%rdi),%rax
    b727:	48 23 05 a2 e9 00 00 	and    0xe9a2(%rip),%rax        # 1a0d0 <size_mask>
    b72e:	48 01 f8             	add    %rdi,%rax
    b731:	c3                   	ret    
    b732:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b739:	00 00 00 
    b73c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000b740 <emalloc_init_with_reserved_mem>:
    b740:	f3 0f 1e fa          	endbr64 
    b744:	48 83 ec 08          	sub    $0x8,%rsp
    b748:	e8 c3 fc ff ff       	call   b410 <add_reserve>
    b74d:	85 c0                	test   %eax,%eax
    b74f:	75 17                	jne    b768 <emalloc_init_with_reserved_mem+0x28>
    b751:	48 c7 05 6c e9 00 00 	movq   $0x10000,0xe96c(%rip)        # 1a0c8 <reserve_size_increment>
    b758:	00 00 01 00 
    b75c:	48 83 c4 08          	add    $0x8,%rsp
    b760:	c3                   	ret    
    b761:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b768:	b8 0c 00 00 00       	mov    $0xc,%eax
    b76d:	48 83 c4 08          	add    $0x8,%rsp
    b771:	c3                   	ret    
    b772:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b779:	00 00 00 
    b77c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000b780 <emalloc>:
    b780:	f3 0f 1e fa          	endbr64 
    b784:	48 8b 05 4d e9 00 00 	mov    0xe94d(%rip),%rax        # 1a0d8 <header_size>
    b78b:	53                   	push   %rbx
    b78c:	bb 10 00 00 00       	mov    $0x10,%ebx
    b791:	48 8d 44 38 07       	lea    0x7(%rax,%rdi,1),%rax
    b796:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    b79a:	48 39 d8             	cmp    %rbx,%rax
    b79d:	48 0f 43 d8          	cmovae %rax,%rbx
    b7a1:	80 3d 88 eb 00 00 00 	cmpb   $0x0,0xeb88(%rip)        # 1a330 <adding_reserve>
    b7a8:	74 36                	je     b7e0 <emalloc+0x60>
    b7aa:	48 8b 05 af f3 00 00 	mov    0xf3af(%rip),%rax        # 1ab60 <meta_used>
    b7b1:	48 8d 14 03          	lea    (%rbx,%rax,1),%rdx
    b7b5:	48 81 fa 00 00 01 00 	cmp    $0x10000,%rdx
    b7bc:	0f 87 1c 01 00 00    	ja     b8de <emalloc+0x15e>
    b7c2:	48 8d 0d b7 f3 00 00 	lea    0xf3b7(%rip),%rcx        # 1ab80 <meta_reserve>
    b7c9:	48 83 cb 01          	or     $0x1,%rbx
    b7cd:	48 89 15 8c f3 00 00 	mov    %rdx,0xf38c(%rip)        # 1ab60 <meta_used>
    b7d4:	48 01 c8             	add    %rcx,%rax
    b7d7:	48 89 18             	mov    %rbx,(%rax)
    b7da:	48 83 c0 08          	add    $0x8,%rax
    b7de:	5b                   	pop    %rbx
    b7df:	c3                   	ret    
    b7e0:	48 3d 08 08 00 00    	cmp    $0x808,%rax
    b7e6:	0f 86 74 01 00 00    	jbe    b960 <emalloc+0x1e0>
    b7ec:	48 8b 05 4d eb 00 00 	mov    0xeb4d(%rip),%rax        # 1a340 <large_block_list>
    b7f3:	48 85 c0             	test   %rax,%rax
    b7f6:	0f 84 ec 00 00 00    	je     b8e8 <emalloc+0x168>
    b7fc:	45 31 c0             	xor    %r8d,%r8d
    b7ff:	90                   	nop
    b800:	48 8b 10             	mov    (%rax),%rdx
    b803:	48 39 da             	cmp    %rbx,%rdx
    b806:	72 3e                	jb     b846 <emalloc+0xc6>
    b808:	4d 85 c0             	test   %r8,%r8
    b80b:	74 7b                	je     b888 <emalloc+0x108>
    b80d:	49 3b 10             	cmp    (%r8),%rdx
    b810:	48 8b 48 08          	mov    0x8(%rax),%rcx
    b814:	73 20                	jae    b836 <emalloc+0xb6>
    b816:	48 85 c9             	test   %rcx,%rcx
    b819:	0f 84 89 01 00 00    	je     b9a8 <emalloc+0x228>
    b81f:	48 8b 11             	mov    (%rcx),%rdx
    b822:	49 89 c0             	mov    %rax,%r8
    b825:	48 39 da             	cmp    %rbx,%rdx
    b828:	72 19                	jb     b843 <emalloc+0xc3>
    b82a:	48 89 c8             	mov    %rcx,%rax
    b82d:	49 3b 10             	cmp    (%r8),%rdx
    b830:	48 8b 48 08          	mov    0x8(%rax),%rcx
    b834:	72 e0                	jb     b816 <emalloc+0x96>
    b836:	48 85 c9             	test   %rcx,%rcx
    b839:	74 14                	je     b84f <emalloc+0xcf>
    b83b:	48 8b 11             	mov    (%rcx),%rdx
    b83e:	48 39 da             	cmp    %rbx,%rdx
    b841:	73 e7                	jae    b82a <emalloc+0xaa>
    b843:	48 89 c8             	mov    %rcx,%rax
    b846:	48 8b 40 08          	mov    0x8(%rax),%rax
    b84a:	48 85 c0             	test   %rax,%rax
    b84d:	75 b1                	jne    b800 <emalloc+0x80>
    b84f:	4d 85 c0             	test   %r8,%r8
    b852:	0f 84 90 00 00 00    	je     b8e8 <emalloc+0x168>
    b858:	48 8d 35 e1 ea 00 00 	lea    0xeae1(%rip),%rsi        # 1a340 <large_block_list>
    b85f:	4c 89 c7             	mov    %r8,%rdi
    b862:	e8 e9 fc ff ff       	call   b550 <remove_from_list>
    b867:	49 8b 00             	mov    (%r8),%rax
    b86a:	48 8d 53 10          	lea    0x10(%rbx),%rdx
    b86e:	48 39 d0             	cmp    %rdx,%rax
    b871:	0f 83 c9 00 00 00    	jae    b940 <emalloc+0x1c0>
    b877:	48 83 cb 01          	or     $0x1,%rbx
    b87b:	49 8d 40 08          	lea    0x8(%r8),%rax
    b87f:	49 89 18             	mov    %rbx,(%r8)
    b882:	5b                   	pop    %rbx
    b883:	c3                   	ret    
    b884:	0f 1f 40 00          	nopl   0x0(%rax)
    b888:	49 89 c0             	mov    %rax,%r8
    b88b:	eb b9                	jmp    b846 <emalloc+0xc6>
    b88d:	0f 1f 00             	nopl   (%rax)
    b890:	48 8d bb 1f 00 01 00 	lea    0x1001f(%rbx),%rdi
    b897:	66 31 ff             	xor    %di,%di
    b89a:	e8 71 fb ff ff       	call   b410 <add_reserve>
    b89f:	85 c0                	test   %eax,%eax
    b8a1:	75 3b                	jne    b8de <emalloc+0x15e>
    b8a3:	48 8b 15 8e ea 00 00 	mov    0xea8e(%rip),%rdx        # 1a338 <reserve_list>
    b8aa:	48 85 d2             	test   %rdx,%rdx
    b8ad:	75 12                	jne    b8c1 <emalloc+0x141>
    b8af:	eb 2d                	jmp    b8de <emalloc+0x15e>
    b8b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b8b8:	48 8b 52 18          	mov    0x18(%rdx),%rdx
    b8bc:	48 85 d2             	test   %rdx,%rdx
    b8bf:	74 1d                	je     b8de <emalloc+0x15e>
    b8c1:	48 8b 42 10          	mov    0x10(%rdx),%rax
    b8c5:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
    b8c9:	48 29 c1             	sub    %rax,%rcx
    b8cc:	48 39 d9             	cmp    %rbx,%rcx
    b8cf:	72 e7                	jb     b8b8 <emalloc+0x138>
    b8d1:	48 8d 0c 03          	lea    (%rbx,%rax,1),%rcx
    b8d5:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
    b8d9:	48 03 02             	add    (%rdx),%rax
    b8dc:	75 4c                	jne    b92a <emalloc+0x1aa>
    b8de:	31 c0                	xor    %eax,%eax
    b8e0:	5b                   	pop    %rbx
    b8e1:	c3                   	ret    
    b8e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b8e8:	48 8b 15 49 ea 00 00 	mov    0xea49(%rip),%rdx        # 1a338 <reserve_list>
    b8ef:	48 85 d2             	test   %rdx,%rdx
    b8f2:	75 15                	jne    b909 <emalloc+0x189>
    b8f4:	eb 9a                	jmp    b890 <emalloc+0x110>
    b8f6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b8fd:	00 00 00 
    b900:	48 8b 52 18          	mov    0x18(%rdx),%rdx
    b904:	48 85 d2             	test   %rdx,%rdx
    b907:	74 87                	je     b890 <emalloc+0x110>
    b909:	48 8b 42 10          	mov    0x10(%rdx),%rax
    b90d:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
    b911:	48 29 c1             	sub    %rax,%rcx
    b914:	48 39 d9             	cmp    %rbx,%rcx
    b917:	72 e7                	jb     b900 <emalloc+0x180>
    b919:	48 8d 0c 03          	lea    (%rbx,%rax,1),%rcx
    b91d:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
    b921:	48 03 02             	add    (%rdx),%rax
    b924:	0f 84 66 ff ff ff    	je     b890 <emalloc+0x110>
    b92a:	48 83 cb 01          	or     $0x1,%rbx
    b92e:	48 83 c0 08          	add    $0x8,%rax
    b932:	48 89 58 f8          	mov    %rbx,-0x8(%rax)
    b936:	5b                   	pop    %rbx
    b937:	c3                   	ret    
    b938:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    b93f:	00 
    b940:	49 8d 3c 18          	lea    (%r8,%rbx,1),%rdi
    b944:	48 29 d8             	sub    %rbx,%rax
    b947:	49 89 18             	mov    %rbx,(%r8)
    b94a:	48 89 07             	mov    %rax,(%rdi)
    b94d:	e8 7e fc ff ff       	call   b5d0 <put_free_block>
    b952:	e9 20 ff ff ff       	jmp    b877 <emalloc+0xf7>
    b957:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    b95e:	00 00 
    b960:	48 8d 43 f0          	lea    -0x10(%rbx),%rax
    b964:	48 8d 15 f5 e9 00 00 	lea    0xe9f5(%rip),%rdx        # 1a360 <exact_block_list>
    b96b:	48 c1 e8 03          	shr    $0x3,%rax
    b96f:	4c 8b 04 c2          	mov    (%rdx,%rax,8),%r8
    b973:	4d 85 c0             	test   %r8,%r8
    b976:	0f 84 6c ff ff ff    	je     b8e8 <emalloc+0x168>
    b97c:	49 8b 48 08          	mov    0x8(%r8),%rcx
    b980:	48 89 0c c2          	mov    %rcx,(%rdx,%rax,8)
    b984:	48 85 c9             	test   %rcx,%rcx
    b987:	0f 84 ea fe ff ff    	je     b877 <emalloc+0xf7>
    b98d:	48 85 c0             	test   %rax,%rax
    b990:	0f 84 e1 fe ff ff    	je     b877 <emalloc+0xf7>
    b996:	48 c7 41 10 00 00 00 	movq   $0x0,0x10(%rcx)
    b99d:	00 
    b99e:	e9 d4 fe ff ff       	jmp    b877 <emalloc+0xf7>
    b9a3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b9a8:	49 89 c0             	mov    %rax,%r8
    b9ab:	e9 9f fe ff ff       	jmp    b84f <emalloc+0xcf>

000000000000b9b0 <can_erealloc>:
    b9b0:	f3 0f 1e fa          	endbr64 
    b9b4:	80 3d 75 e9 00 00 00 	cmpb   $0x0,0xe975(%rip)        # 1a330 <adding_reserve>
    b9bb:	b8 01 00 00 00       	mov    $0x1,%eax
    b9c0:	75 30                	jne    b9f2 <can_erealloc+0x42>
    b9c2:	48 2b 3d 0f e7 00 00 	sub    0xe70f(%rip),%rdi        # 1a0d8 <header_size>
    b9c9:	48 8d 15 b0 f1 01 00 	lea    0x1f1b0(%rip),%rdx        # 2ab80 <mm_user_end>
    b9d0:	48 39 d7             	cmp    %rdx,%rdi
    b9d3:	73 1d                	jae    b9f2 <can_erealloc+0x42>
    b9d5:	48 8b 05 f4 e6 00 00 	mov    0xe6f4(%rip),%rax        # 1a0d0 <size_mask>
    b9dc:	48 23 07             	and    (%rdi),%rax
    b9df:	48 01 c7             	add    %rax,%rdi
    b9e2:	48 8d 82 00 00 ff ff 	lea    -0x10000(%rdx),%rax
    b9e9:	48 39 f8             	cmp    %rdi,%rax
    b9ec:	0f 93 c0             	setae  %al
    b9ef:	0f b6 c0             	movzbl %al,%eax
    b9f2:	c3                   	ret    
    b9f3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b9fa:	00 00 00 
    b9fd:	0f 1f 00             	nopl   (%rax)

000000000000ba00 <efree>:
    ba00:	f3 0f 1e fa          	endbr64 
    ba04:	48 2b 3d cd e6 00 00 	sub    0xe6cd(%rip),%rdi        # 1a0d8 <header_size>
    ba0b:	41 54                	push   %r12
    ba0d:	48 8d 05 6c f1 01 00 	lea    0x1f16c(%rip),%rax        # 2ab80 <mm_user_end>
    ba14:	55                   	push   %rbp
    ba15:	4c 8b 1d b4 e6 00 00 	mov    0xe6b4(%rip),%r11        # 1a0d0 <size_mask>
    ba1c:	49 89 fc             	mov    %rdi,%r12
    ba1f:	53                   	push   %rbx
    ba20:	4c 8b 0f             	mov    (%rdi),%r9
    ba23:	4d 21 d9             	and    %r11,%r9
    ba26:	48 39 c7             	cmp    %rax,%rdi
    ba29:	73 14                	jae    ba3f <efree+0x3f>
    ba2b:	49 8d 04 39          	lea    (%r9,%rdi,1),%rax
    ba2f:	48 8d 15 4a f1 00 00 	lea    0xf14a(%rip),%rdx        # 1ab80 <meta_reserve>
    ba36:	48 39 c2             	cmp    %rax,%rdx
    ba39:	0f 82 f9 00 00 00    	jb     bb38 <efree+0x138>
    ba3f:	4d 85 c9             	test   %r9,%r9
    ba42:	74 2e                	je     ba72 <efree+0x72>
    ba44:	4c 8b 15 ed e8 00 00 	mov    0xe8ed(%rip),%r10        # 1a338 <reserve_list>
    ba4b:	4d 85 d2             	test   %r10,%r10
    ba4e:	74 22                	je     ba72 <efree+0x72>
    ba50:	4b 8d 14 21          	lea    (%r9,%r12,1),%rdx
    ba54:	0f 1f 40 00          	nopl   0x0(%rax)
    ba58:	49 8b 02             	mov    (%r10),%rax
    ba5b:	49 39 c4             	cmp    %rax,%r12
    ba5e:	72 09                	jb     ba69 <efree+0x69>
    ba60:	49 03 42 10          	add    0x10(%r10),%rax
    ba64:	48 39 d0             	cmp    %rdx,%rax
    ba67:	73 17                	jae    ba80 <efree+0x80>
    ba69:	4d 8b 52 18          	mov    0x18(%r10),%r10
    ba6d:	4d 85 d2             	test   %r10,%r10
    ba70:	75 e6                	jne    ba58 <efree+0x58>
    ba72:	e8 c0 6e 00 00       	call   12937 <abort>
    ba77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    ba7e:	00 00 
    ba80:	4d 89 0c 24          	mov    %r9,(%r12)
    ba84:	49 c7 44 24 08 00 00 	movq   $0x0,0x8(%r12)
    ba8b:	00 00 
    ba8d:	49 83 f9 10          	cmp    $0x10,%r9
    ba91:	0f 87 b9 00 00 00    	ja     bb50 <efree+0x150>
    ba97:	4c 89 e7             	mov    %r12,%rdi
    ba9a:	48 8d 1d bf e8 00 00 	lea    0xe8bf(%rip),%rbx        # 1a360 <exact_block_list>
    baa1:	48 8d 2d 98 e8 00 00 	lea    0xe898(%rip),%rbp        # 1a340 <large_block_list>
    baa8:	e8 a3 fb ff ff       	call   b650 <neighbor_right>
    baad:	48 89 c7             	mov    %rax,%rdi
    bab0:	48 85 c0             	test   %rax,%rax
    bab3:	75 3c                	jne    baf1 <efree+0xf1>
    bab5:	e9 3d 01 00 00       	jmp    bbf7 <efree+0x1f7>
    baba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    bac0:	48 89 de             	mov    %rbx,%rsi
    bac3:	48 83 f9 0f          	cmp    $0xf,%rcx
    bac7:	76 0b                	jbe    bad4 <efree+0xd4>
    bac9:	48 8d 71 f0          	lea    -0x10(%rcx),%rsi
    bacd:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
    bad1:	48 01 de             	add    %rbx,%rsi
    bad4:	e8 77 fa ff ff       	call   b550 <remove_from_list>
    bad9:	49 03 0c 24          	add    (%r12),%rcx
    badd:	49 89 0c 24          	mov    %rcx,(%r12)
    bae1:	49 89 c9             	mov    %rcx,%r9
    bae4:	e8 67 fb ff ff       	call   b650 <neighbor_right>
    bae9:	48 89 c7             	mov    %rax,%rdi
    baec:	48 85 c0             	test   %rax,%rax
    baef:	74 23                	je     bb14 <efree+0x114>
    baf1:	48 8b 0f             	mov    (%rdi),%rcx
    baf4:	f6 c1 01             	test   $0x1,%cl
    baf7:	75 17                	jne    bb10 <efree+0x110>
    baf9:	4c 21 d9             	and    %r11,%rcx
    bafc:	48 81 f9 08 08 00 00 	cmp    $0x808,%rcx
    bb03:	76 bb                	jbe    bac0 <efree+0xc0>
    bb05:	48 89 ee             	mov    %rbp,%rsi
    bb08:	e8 43 fa ff ff       	call   b550 <remove_from_list>
    bb0d:	eb ca                	jmp    bad9 <efree+0xd9>
    bb0f:	90                   	nop
    bb10:	4d 8b 0c 24          	mov    (%r12),%r9
    bb14:	4d 21 cb             	and    %r9,%r11
    bb17:	49 8b 1a             	mov    (%r10),%rbx
    bb1a:	4c 89 e0             	mov    %r12,%rax
    bb1d:	48 29 d8             	sub    %rbx,%rax
    bb20:	49 01 c3             	add    %rax,%r11
    bb23:	4d 3b 5a 10          	cmp    0x10(%r10),%r11
    bb27:	74 37                	je     bb60 <efree+0x160>
    bb29:	5b                   	pop    %rbx
    bb2a:	4c 89 e7             	mov    %r12,%rdi
    bb2d:	5d                   	pop    %rbp
    bb2e:	41 5c                	pop    %r12
    bb30:	e9 9b fa ff ff       	jmp    b5d0 <put_free_block>
    bb35:	0f 1f 00             	nopl   (%rax)
    bb38:	80 3d f1 e7 00 00 00 	cmpb   $0x0,0xe7f1(%rip)        # 1a330 <adding_reserve>
    bb3f:	0f 84 2d ff ff ff    	je     ba72 <efree+0x72>
    bb45:	5b                   	pop    %rbx
    bb46:	5d                   	pop    %rbp
    bb47:	41 5c                	pop    %r12
    bb49:	c3                   	ret    
    bb4a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    bb50:	49 c7 44 24 10 00 00 	movq   $0x0,0x10(%r12)
    bb57:	00 00 
    bb59:	e9 39 ff ff ff       	jmp    ba97 <efree+0x97>
    bb5e:	66 90                	xchg   %ax,%ax
    bb60:	48 8b 0d d9 e7 00 00 	mov    0xe7d9(%rip),%rcx        # 1a340 <large_block_list>
    bb67:	4d 29 cb             	sub    %r9,%r11
    bb6a:	4d 89 5a 10          	mov    %r11,0x10(%r10)
    bb6e:	4e 8d 04 1b          	lea    (%rbx,%r11,1),%r8
    bb72:	48 85 c9             	test   %rcx,%rcx
    bb75:	75 12                	jne    bb89 <efree+0x189>
    bb77:	eb 6d                	jmp    bbe6 <efree+0x1e6>
    bb79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    bb80:	48 8b 49 08          	mov    0x8(%rcx),%rcx
    bb84:	48 85 c9             	test   %rcx,%rcx
    bb87:	74 5d                	je     bbe6 <efree+0x1e6>
    bb89:	48 8b 01             	mov    (%rcx),%rax
    bb8c:	48 01 c8             	add    %rcx,%rax
    bb8f:	49 39 c0             	cmp    %rax,%r8
    bb92:	75 ec                	jne    bb80 <efree+0x180>
    bb94:	48 8d 35 a5 e7 00 00 	lea    0xe7a5(%rip),%rsi        # 1a340 <large_block_list>
    bb9b:	48 89 cf             	mov    %rcx,%rdi
    bb9e:	e8 ad f9 ff ff       	call   b550 <remove_from_list>
    bba3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    bba8:	4c 2b 01             	sub    (%rcx),%r8
    bbab:	48 8b 0d 8e e7 00 00 	mov    0xe78e(%rip),%rcx        # 1a340 <large_block_list>
    bbb2:	48 85 c9             	test   %rcx,%rcx
    bbb5:	75 12                	jne    bbc9 <efree+0x1c9>
    bbb7:	eb 36                	jmp    bbef <efree+0x1ef>
    bbb9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    bbc0:	48 8b 49 08          	mov    0x8(%rcx),%rcx
    bbc4:	48 85 c9             	test   %rcx,%rcx
    bbc7:	74 17                	je     bbe0 <efree+0x1e0>
    bbc9:	48 8b 01             	mov    (%rcx),%rax
    bbcc:	48 01 c8             	add    %rcx,%rax
    bbcf:	49 39 c0             	cmp    %rax,%r8
    bbd2:	75 ec                	jne    bbc0 <efree+0x1c0>
    bbd4:	48 89 cf             	mov    %rcx,%rdi
    bbd7:	e8 74 f9 ff ff       	call   b550 <remove_from_list>
    bbdc:	eb ca                	jmp    bba8 <efree+0x1a8>
    bbde:	66 90                	xchg   %ax,%ax
    bbe0:	4d 89 c3             	mov    %r8,%r11
    bbe3:	49 29 db             	sub    %rbx,%r11
    bbe6:	4d 89 5a 10          	mov    %r11,0x10(%r10)
    bbea:	5b                   	pop    %rbx
    bbeb:	5d                   	pop    %rbp
    bbec:	41 5c                	pop    %r12
    bbee:	c3                   	ret    
    bbef:	49 29 d8             	sub    %rbx,%r8
    bbf2:	4d 89 c3             	mov    %r8,%r11
    bbf5:	eb ef                	jmp    bbe6 <efree+0x1e6>
    bbf7:	4d 89 cb             	mov    %r9,%r11
    bbfa:	e9 18 ff ff ff       	jmp    bb17 <efree+0x117>
    bbff:	90                   	nop

000000000000bc00 <mm_init_ema>:
    bc00:	f3 0f 1e fa          	endbr64 
    bc04:	41 57                	push   %r15
    bc06:	4d 89 cf             	mov    %r9,%r15
    bc09:	41 56                	push   %r14
    bc0b:	4d 89 c6             	mov    %r8,%r14
    bc0e:	41 55                	push   %r13
    bc10:	41 89 cd             	mov    %ecx,%r13d
    bc13:	41 54                	push   %r12
    bc15:	41 89 d4             	mov    %edx,%r12d
    bc18:	55                   	push   %rbp
    bc19:	48 89 f5             	mov    %rsi,%rbp
    bc1c:	53                   	push   %rbx
    bc1d:	48 89 fb             	mov    %rdi,%rbx
    bc20:	48 83 ec 18          	sub    $0x18,%rsp
    bc24:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    bc2b:	00 00 
    bc2d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    bc32:	31 c0                	xor    %eax,%eax
    bc34:	e8 47 a1 ff ff       	call   5d80 <sgx_mm_is_within_enclave>
    bc39:	89 c2                	mov    %eax,%edx
    bc3b:	b8 0d 00 00 00       	mov    $0xd,%eax
    bc40:	84 d2                	test   %dl,%dl
    bc42:	0f 84 7d 00 00 00    	je     bcc5 <mm_init_ema+0xc5>
    bc48:	41 f7 c4 7e f8 ff ff 	test   $0xfffff87e,%r12d
    bc4f:	75 6f                	jne    bcc0 <mm_init_ema+0xc0>
    bc51:	41 83 fd 07          	cmp    $0x7,%r13d
    bc55:	77 69                	ja     bcc0 <mm_init_ema+0xc0>
    bc57:	48 89 e1             	mov    %rsp,%rcx
    bc5a:	48 89 ea             	mov    %rbp,%rdx
    bc5d:	48 8d 3d 04 e4 00 00 	lea    0xe404(%rip),%rdi        # 1a068 <g_rts_ema_root>
    bc64:	48 89 de             	mov    %rbx,%rsi
    bc67:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    bc6e:	00 
    bc6f:	e8 2c e6 ff ff       	call   a2a0 <find_free_region_at>
    bc74:	84 c0                	test   %al,%al
    bc76:	74 48                	je     bcc0 <mm_init_ema+0xc0>
    bc78:	48 83 ec 08          	sub    $0x8,%rsp
    bc7c:	44 89 e1             	mov    %r12d,%ecx
    bc7f:	41 0f b6 d4          	movzbl %r12b,%edx
    bc83:	48 89 df             	mov    %rbx,%rdi
    bc86:	ff 74 24 08          	push   0x8(%rsp)
    bc8a:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    bc90:	4d 89 f9             	mov    %r15,%r9
    bc93:	4d 89 f0             	mov    %r14,%r8
    bc96:	44 09 e9             	or     %r13d,%ecx
    bc99:	48 89 ee             	mov    %rbp,%rsi
    bc9c:	48 63 c9             	movslq %ecx,%rcx
    bc9f:	e8 dc e6 ff ff       	call   a380 <ema_new>
    bca4:	48 89 c7             	mov    %rax,%rdi
    bca7:	58                   	pop    %rax
    bca8:	5a                   	pop    %rdx
    bca9:	48 85 ff             	test   %rdi,%rdi
    bcac:	74 3a                	je     bce8 <mm_init_ema+0xe8>
    bcae:	31 c0                	xor    %eax,%eax
    bcb0:	41 83 e4 01          	and    $0x1,%r12d
    bcb4:	75 0f                	jne    bcc5 <mm_init_ema+0xc5>
    bcb6:	e8 55 de ff ff       	call   9b10 <ema_set_eaccept_full>
    bcbb:	eb 08                	jmp    bcc5 <mm_init_ema+0xc5>
    bcbd:	0f 1f 00             	nopl   (%rax)
    bcc0:	b8 16 00 00 00       	mov    $0x16,%eax
    bcc5:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    bcca:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    bcd1:	00 00 
    bcd3:	75 1a                	jne    bcef <mm_init_ema+0xef>
    bcd5:	48 83 c4 18          	add    $0x18,%rsp
    bcd9:	5b                   	pop    %rbx
    bcda:	5d                   	pop    %rbp
    bcdb:	41 5c                	pop    %r12
    bcdd:	41 5d                	pop    %r13
    bcdf:	41 5e                	pop    %r14
    bce1:	41 5f                	pop    %r15
    bce3:	c3                   	ret    
    bce4:	0f 1f 40 00          	nopl   0x0(%rax)
    bce8:	b8 0c 00 00 00       	mov    $0xc,%eax
    bced:	eb d6                	jmp    bcc5 <mm_init_ema+0xc5>
    bcef:	e8 0c 51 00 00       	call   10e00 <__stack_chk_fail>
    bcf4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    bcfb:	00 00 00 
    bcfe:	66 90                	xchg   %ax,%ax

000000000000bd00 <mm_alloc>:
    bd00:	f3 0f 1e fa          	endbr64 
    bd04:	48 83 ec 10          	sub    $0x10,%rsp
    bd08:	48 8d 05 59 e3 00 00 	lea    0xe359(%rip),%rax        # 1a068 <g_rts_ema_root>
    bd0f:	50                   	push   %rax
    bd10:	e8 2b 02 00 00       	call   bf40 <mm_alloc_internal>
    bd15:	48 83 c4 18          	add    $0x18,%rsp
    bd19:	c3                   	ret    
    bd1a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000bd20 <mm_commit>:
    bd20:	f3 0f 1e fa          	endbr64 
    bd24:	48 8d 15 3d e3 00 00 	lea    0xe33d(%rip),%rdx        # 1a068 <g_rts_ema_root>
    bd2b:	e9 40 05 00 00       	jmp    c270 <mm_commit_internal>

000000000000bd30 <mm_uncommit>:
    bd30:	f3 0f 1e fa          	endbr64 
    bd34:	48 8d 15 2d e3 00 00 	lea    0xe32d(%rip),%rdx        # 1a068 <g_rts_ema_root>
    bd3b:	e9 00 06 00 00       	jmp    c340 <mm_uncommit_internal>

000000000000bd40 <mm_dealloc>:
    bd40:	f3 0f 1e fa          	endbr64 
    bd44:	48 8d 15 1d e3 00 00 	lea    0xe31d(%rip),%rdx        # 1a068 <g_rts_ema_root>
    bd4b:	e9 c0 06 00 00       	jmp    c410 <mm_dealloc_internal>

000000000000bd50 <mm_commit_data>:
    bd50:	f3 0f 1e fa          	endbr64 
    bd54:	4c 8d 05 0d e3 00 00 	lea    0xe30d(%rip),%r8        # 1a068 <g_rts_ema_root>
    bd5b:	e9 80 07 00 00       	jmp    c4e0 <mm_commit_data_internal>

000000000000bd60 <mm_modify_type>:
    bd60:	f3 0f 1e fa          	endbr64 
    bd64:	48 8d 0d fd e2 00 00 	lea    0xe2fd(%rip),%rcx        # 1a068 <g_rts_ema_root>
    bd6b:	e9 90 08 00 00       	jmp    c600 <mm_modify_type_internal>

000000000000bd70 <mm_modify_permissions>:
    bd70:	f3 0f 1e fa          	endbr64 
    bd74:	48 8d 0d ed e2 00 00 	lea    0xe2ed(%rip),%rcx        # 1a068 <g_rts_ema_root>
    bd7b:	e9 40 0a 00 00       	jmp    c7c0 <mm_modify_permissions_internal>

000000000000bd80 <sgx_mm_enclave_pfhandler>:
    bd80:	f3 0f 1e fa          	endbr64 
    bd84:	41 56                	push   %r14
    bd86:	41 55                	push   %r13
    bd88:	49 89 fd             	mov    %rdi,%r13
    bd8b:	41 54                	push   %r12
    bd8d:	55                   	push   %rbp
    bd8e:	53                   	push   %rbx
    bd8f:	31 db                	xor    %ebx,%ebx
    bd91:	48 83 ec 10          	sub    $0x10,%rsp
    bd95:	4c 8b 37             	mov    (%rdi),%r14
    bd98:	48 8b 3d f1 ed 01 00 	mov    0x1edf1(%rip),%rdi        # 2ab90 <mm_lock>
    bd9f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    bda6:	00 00 
    bda8:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    bdad:	31 c0                	xor    %eax,%eax
    bdaf:	e8 6c 9f ff ff       	call   5d20 <sgx_mm_mutex_lock>
    bdb4:	85 c0                	test   %eax,%eax
    bdb6:	74 28                	je     bde0 <sgx_mm_enclave_pfhandler+0x60>
    bdb8:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    bdbd:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    bdc4:	00 00 
    bdc6:	0f 85 50 01 00 00    	jne    bf1c <sgx_mm_enclave_pfhandler+0x19c>
    bdcc:	48 83 c4 10          	add    $0x10,%rsp
    bdd0:	89 d8                	mov    %ebx,%eax
    bdd2:	5b                   	pop    %rbx
    bdd3:	5d                   	pop    %rbp
    bdd4:	41 5c                	pop    %r12
    bdd6:	41 5d                	pop    %r13
    bdd8:	41 5e                	pop    %r14
    bdda:	c3                   	ret    
    bddb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    bde0:	49 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%r14
    bde7:	48 8d 3d 12 e2 00 00 	lea    0xe212(%rip),%rdi        # 1a000 <g_user_ema_root>
    bdee:	89 c3                	mov    %eax,%ebx
    bdf0:	4c 89 f6             	mov    %r14,%rsi
    bdf3:	e8 48 de ff ff       	call   9c40 <search_ema>
    bdf8:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    bdff:	00 
    be00:	48 89 c5             	mov    %rax,%rbp
    be03:	48 85 c0             	test   %rax,%rax
    be06:	0f 84 b4 00 00 00    	je     bec0 <sgx_mm_enclave_pfhandler+0x140>
    be0c:	48 89 e6             	mov    %rsp,%rsi
    be0f:	48 89 ef             	mov    %rbp,%rdi
    be12:	e8 d9 dc ff ff       	call   9af0 <ema_fault_handler>
    be17:	49 89 c4             	mov    %rax,%r12
    be1a:	48 85 c0             	test   %rax,%rax
    be1d:	74 21                	je     be40 <sgx_mm_enclave_pfhandler+0xc0>
    be1f:	48 8b 3d 6a ed 01 00 	mov    0x1ed6a(%rip),%rdi        # 2ab90 <mm_lock>
    be26:	e8 15 9f ff ff       	call   5d40 <sgx_mm_mutex_unlock>
    be2b:	48 8b 34 24          	mov    (%rsp),%rsi
    be2f:	4c 89 ef             	mov    %r13,%rdi
    be32:	41 ff d4             	call   *%r12
    be35:	89 c3                	mov    %eax,%ebx
    be37:	e9 7c ff ff ff       	jmp    bdb8 <sgx_mm_enclave_pfhandler+0x38>
    be3c:	0f 1f 40 00          	nopl   0x0(%rax)
    be40:	4c 89 f6             	mov    %r14,%rsi
    be43:	48 89 ef             	mov    %rbp,%rdi
    be46:	e8 c5 dd ff ff       	call   9c10 <ema_page_committed>
    be4b:	84 c0                	test   %al,%al
    be4d:	74 31                	je     be80 <sgx_mm_enclave_pfhandler+0x100>
    be4f:	41 f6 45 08 02       	testb  $0x2,0x8(%r13)
    be54:	0f 84 86 00 00 00    	je     bee0 <sgx_mm_enclave_pfhandler+0x160>
    be5a:	48 89 ef             	mov    %rbp,%rdi
    be5d:	e8 7e dc ff ff       	call   9ae0 <get_ema_si_flags>
    be62:	48 d1 e8             	shr    %rax
    be65:	48 89 c3             	mov    %rax,%rbx
    be68:	83 e3 01             	and    $0x1,%ebx
    be6b:	f7 db                	neg    %ebx
    be6d:	48 8b 3d 1c ed 01 00 	mov    0x1ed1c(%rip),%rdi        # 2ab90 <mm_lock>
    be74:	e8 c7 9e ff ff       	call   5d40 <sgx_mm_mutex_unlock>
    be79:	e9 3a ff ff ff       	jmp    bdb8 <sgx_mm_enclave_pfhandler+0x38>
    be7e:	66 90                	xchg   %ax,%ax
    be80:	48 89 ef             	mov    %rbp,%rdi
    be83:	e8 48 dc ff ff       	call   9ad0 <get_ema_alloc_flags>
    be88:	a8 04                	test   $0x4,%al
    be8a:	0f 84 91 00 00 00    	je     bf21 <sgx_mm_enclave_pfhandler+0x1a1>
    be90:	41 f6 45 08 02       	testb  $0x2,0x8(%r13)
    be95:	74 69                	je     bf00 <sgx_mm_enclave_pfhandler+0x180>
    be97:	48 89 ef             	mov    %rbp,%rdi
    be9a:	e8 41 dc ff ff       	call   9ae0 <get_ema_si_flags>
    be9f:	a8 02                	test   $0x2,%al
    bea1:	74 ca                	je     be6d <sgx_mm_enclave_pfhandler+0xed>
    bea3:	49 8d 96 00 10 00 00 	lea    0x1000(%r14),%rdx
    beaa:	4c 89 f6             	mov    %r14,%rsi
    bead:	48 89 ef             	mov    %rbp,%rdi
    beb0:	e8 4b e7 ff ff       	call   a600 <ema_do_commit>
    beb5:	85 c0                	test   %eax,%eax
    beb7:	75 68                	jne    bf21 <sgx_mm_enclave_pfhandler+0x1a1>
    beb9:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
    bebe:	eb ad                	jmp    be6d <sgx_mm_enclave_pfhandler+0xed>
    bec0:	4c 89 f6             	mov    %r14,%rsi
    bec3:	48 8d 3d 9e e1 00 00 	lea    0xe19e(%rip),%rdi        # 1a068 <g_rts_ema_root>
    beca:	e8 71 dd ff ff       	call   9c40 <search_ema>
    becf:	48 89 c5             	mov    %rax,%rbp
    bed2:	48 85 c0             	test   %rax,%rax
    bed5:	0f 85 31 ff ff ff    	jne    be0c <sgx_mm_enclave_pfhandler+0x8c>
    bedb:	eb 90                	jmp    be6d <sgx_mm_enclave_pfhandler+0xed>
    bedd:	0f 1f 00             	nopl   (%rax)
    bee0:	48 89 ef             	mov    %rbp,%rdi
    bee3:	e8 f8 db ff ff       	call   9ae0 <get_ema_si_flags>
    bee8:	a8 01                	test   $0x1,%al
    beea:	0f 84 7d ff ff ff    	je     be6d <sgx_mm_enclave_pfhandler+0xed>
    bef0:	41 f6 45 08 02       	testb  $0x2,0x8(%r13)
    bef5:	74 c2                	je     beb9 <sgx_mm_enclave_pfhandler+0x139>
    bef7:	e9 5e ff ff ff       	jmp    be5a <sgx_mm_enclave_pfhandler+0xda>
    befc:	0f 1f 40 00          	nopl   0x0(%rax)
    bf00:	48 89 ef             	mov    %rbp,%rdi
    bf03:	e8 d8 db ff ff       	call   9ae0 <get_ema_si_flags>
    bf08:	a8 01                	test   $0x1,%al
    bf0a:	0f 84 5d ff ff ff    	je     be6d <sgx_mm_enclave_pfhandler+0xed>
    bf10:	41 f6 45 08 02       	testb  $0x2,0x8(%r13)
    bf15:	74 8c                	je     bea3 <sgx_mm_enclave_pfhandler+0x123>
    bf17:	e9 7b ff ff ff       	jmp    be97 <sgx_mm_enclave_pfhandler+0x117>
    bf1c:	e8 df 4e 00 00       	call   10e00 <__stack_chk_fail>
    bf21:	48 8b 3d 68 ec 01 00 	mov    0x1ec68(%rip),%rdi        # 2ab90 <mm_lock>
    bf28:	e8 13 9e ff ff       	call   5d40 <sgx_mm_mutex_unlock>
    bf2d:	e8 05 6a 00 00       	call   12937 <abort>
    bf32:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    bf39:	00 00 00 
    bf3c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000bf40 <mm_alloc_internal>:
    bf40:	f3 0f 1e fa          	endbr64 
    bf44:	41 57                	push   %r15
    bf46:	41 56                	push   %r14
    bf48:	41 55                	push   %r13
    bf4a:	41 54                	push   %r12
    bf4c:	55                   	push   %rbp
    bf4d:	53                   	push   %rbx
    bf4e:	48 83 ec 68          	sub    $0x68,%rsp
    bf52:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    bf59:	00 00 
    bf5b:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    bf60:	31 c0                	xor    %eax,%eax
    bf62:	4c 8b b4 24 a0 00 00 	mov    0xa0(%rsp),%r14
    bf69:	00 
    bf6a:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
    bf71:	00 00 
    bf73:	f6 c2 07             	test   $0x7,%dl
    bf76:	74 60                	je     bfd8 <mm_alloc_internal+0x98>
    bf78:	4c 89 c5             	mov    %r8,%rbp
    bf7b:	89 d0                	mov    %edx,%eax
    bf7d:	41 89 d0             	mov    %edx,%r8d
    bf80:	25 00 ff 00 00       	and    $0xff00,%eax
    bf85:	41 81 e0 00 ff 00 00 	and    $0xff00,%r8d
    bf8c:	f6 c6 f8             	test   $0xf8,%dh
    bf8f:	75 47                	jne    bfd8 <mm_alloc_internal+0x98>
    bf91:	85 c0                	test   %eax,%eax
    bf93:	b8 00 02 00 00       	mov    $0x200,%eax
    bf98:	49 89 f7             	mov    %rsi,%r15
    bf9b:	4c 0f 44 c0          	cmove  %rax,%r8
    bf9f:	f7 c6 ff 0f 00 00    	test   $0xfff,%esi
    bfa5:	75 31                	jne    bfd8 <mm_alloc_internal+0x98>
    bfa7:	48 89 cb             	mov    %rcx,%rbx
    bfaa:	89 d1                	mov    %edx,%ecx
    bfac:	4d 89 cc             	mov    %r9,%r12
    bfaf:	c1 e9 18             	shr    $0x18,%ecx
    bfb2:	74 54                	je     c008 <mm_alloc_internal+0xc8>
    bfb4:	83 f9 0b             	cmp    $0xb,%ecx
    bfb7:	76 1f                	jbe    bfd8 <mm_alloc_internal+0x98>
    bfb9:	b8 01 00 00 00       	mov    $0x1,%eax
    bfbe:	49 c7 c5 ff ff ff ff 	mov    $0xffffffffffffffff,%r13
    bfc5:	48 d3 e0             	shl    %cl,%rax
    bfc8:	49 d3 e5             	shl    %cl,%r13
    bfcb:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    bfd0:	49 f7 d5             	not    %r13
    bfd3:	eb 42                	jmp    c017 <mm_alloc_internal+0xd7>
    bfd5:	0f 1f 00             	nopl   (%rax)
    bfd8:	b9 16 00 00 00       	mov    $0x16,%ecx
    bfdd:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
    bfe2:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    bfe9:	00 00 
    bfeb:	0f 85 41 02 00 00    	jne    c232 <mm_alloc_internal+0x2f2>
    bff1:	48 83 c4 68          	add    $0x68,%rsp
    bff5:	89 c8                	mov    %ecx,%eax
    bff7:	5b                   	pop    %rbx
    bff8:	5d                   	pop    %rbp
    bff9:	41 5c                	pop    %r12
    bffb:	41 5d                	pop    %r13
    bffd:	41 5e                	pop    %r14
    bfff:	41 5f                	pop    %r15
    c001:	c3                   	ret    
    c002:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    c008:	48 c7 44 24 08 00 10 	movq   $0x1000,0x8(%rsp)
    c00f:	00 00 
    c011:	41 bd ff 0f 00 00    	mov    $0xfff,%r13d
    c017:	48 89 7c 24 38       	mov    %rdi,0x38(%rsp)
    c01c:	49 21 fd             	and    %rdi,%r13
    c01f:	75 b7                	jne    bfd8 <mm_alloc_internal+0x98>
    c021:	48 85 ff             	test   %rdi,%rdi
    c024:	74 23                	je     c049 <mm_alloc_internal+0x109>
    c026:	4c 89 fe             	mov    %r15,%rsi
    c029:	89 54 24 1c          	mov    %edx,0x1c(%rsp)
    c02d:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
    c032:	e8 49 9d ff ff       	call   5d80 <sgx_mm_is_within_enclave>
    c037:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
    c03c:	8b 54 24 1c          	mov    0x1c(%rsp),%edx
    c040:	b9 0d 00 00 00       	mov    $0xd,%ecx
    c045:	84 c0                	test   %al,%al
    c047:	74 94                	je     bfdd <mm_alloc_internal+0x9d>
    c049:	48 8b 3d 40 eb 01 00 	mov    0x1eb40(%rip),%rdi        # 2ab90 <mm_lock>
    c050:	89 54 24 1c          	mov    %edx,0x1c(%rsp)
    c054:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
    c059:	e8 c2 9c ff ff       	call   5d20 <sgx_mm_mutex_lock>
    c05e:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
    c063:	8b 54 24 1c          	mov    0x1c(%rsp),%edx
    c067:	b9 0e 00 00 00       	mov    $0xe,%ecx
    c06c:	85 c0                	test   %eax,%eax
    c06e:	0f 85 69 ff ff ff    	jne    bfdd <mm_alloc_internal+0x9d>
    c074:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
    c079:	49 83 c8 03          	or     $0x3,%r8
    c07d:	0f b6 c2             	movzbl %dl,%eax
    c080:	f6 c2 01             	test   $0x1,%dl
    c083:	89 44 24 10          	mov    %eax,0x10(%rsp)
    c087:	4d 0f 44 e8          	cmove  %r8,%r13
    c08b:	48 85 f6             	test   %rsi,%rsi
    c08e:	0f 85 9c 00 00 00    	jne    c130 <mm_alloc_internal+0x1f0>
    c094:	4c 8d 44 24 40       	lea    0x40(%rsp),%r8
    c099:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    c09e:	48 8d 4c 24 38       	lea    0x38(%rsp),%rcx
    c0a3:	4c 89 fe             	mov    %r15,%rsi
    c0a6:	4c 89 f7             	mov    %r14,%rdi
    c0a9:	e8 e2 de ff ff       	call   9f90 <find_free_region>
    c0ae:	84 c0                	test   %al,%al
    c0b0:	0f 84 0a 01 00 00    	je     c1c0 <mm_alloc_internal+0x280>
    c0b6:	48 83 ec 08          	sub    $0x8,%rsp
    c0ba:	49 89 e9             	mov    %rbp,%r9
    c0bd:	49 89 d8             	mov    %rbx,%r8
    c0c0:	4c 89 e9             	mov    %r13,%rcx
    c0c3:	ff 74 24 48          	push   0x48(%rsp)
    c0c7:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
    c0cc:	4c 89 fe             	mov    %r15,%rsi
    c0cf:	8b 54 24 20          	mov    0x20(%rsp),%edx
    c0d3:	e8 a8 e2 ff ff       	call   a380 <ema_new>
    c0d8:	48 89 c7             	mov    %rax,%rdi
    c0db:	58                   	pop    %rax
    c0dc:	5a                   	pop    %rdx
    c0dd:	48 85 ff             	test   %rdi,%rdi
    c0e0:	0f 84 da 00 00 00    	je     c1c0 <mm_alloc_internal+0x280>
    c0e6:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    c0eb:	e8 30 f2 ff ff       	call   b320 <ema_do_alloc>
    c0f0:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    c0f5:	85 c0                	test   %eax,%eax
    c0f7:	89 c1                	mov    %eax,%ecx
    c0f9:	0f 85 21 01 00 00    	jne    c220 <mm_alloc_internal+0x2e0>
    c0ff:	4d 85 e4             	test   %r12,%r12
    c102:	74 09                	je     c10d <mm_alloc_internal+0x1cd>
    c104:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    c109:	49 89 04 24          	mov    %rax,(%r12)
    c10d:	48 8b 3d 7c ea 01 00 	mov    0x1ea7c(%rip),%rdi        # 2ab90 <mm_lock>
    c114:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
    c118:	e8 23 9c ff ff       	call   5d40 <sgx_mm_mutex_unlock>
    c11d:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
    c121:	e9 b7 fe ff ff       	jmp    bfdd <mm_alloc_internal+0x9d>
    c126:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    c12d:	00 00 00 
    c130:	83 e2 40             	and    $0x40,%edx
    c133:	4a 8d 04 3e          	lea    (%rsi,%r15,1),%rax
    c137:	48 8d 4c 24 48       	lea    0x48(%rsp),%rcx
    c13c:	4c 89 f7             	mov    %r14,%rdi
    c13f:	89 54 24 1c          	mov    %edx,0x1c(%rsp)
    c143:	4c 8d 44 24 50       	lea    0x50(%rsp),%r8
    c148:	48 89 c2             	mov    %rax,%rdx
    c14b:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
    c152:	00 00 
    c154:	48 c7 44 24 50 00 00 	movq   $0x0,0x50(%rsp)
    c15b:	00 00 
    c15d:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    c162:	48 89 74 24 28       	mov    %rsi,0x28(%rsp)
    c167:	e8 64 db ff ff       	call   9cd0 <search_ema_range>
    c16c:	85 c0                	test   %eax,%eax
    c16e:	75 60                	jne    c1d0 <mm_alloc_internal+0x290>
    c170:	55                   	push   %rbp
    c171:	4d 89 e9             	mov    %r13,%r9
    c174:	53                   	push   %rbx
    c175:	48 8b 7c 24 58       	mov    0x58(%rsp),%rdi
    c17a:	44 8b 44 24 20       	mov    0x20(%rsp),%r8d
    c17f:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
    c184:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
    c189:	48 8b 74 24 60       	mov    0x60(%rsp),%rsi
    c18e:	e8 3d f0 ff ff       	call   b1d0 <ema_realloc_from_reserve_range>
    c193:	41 58                	pop    %r8
    c195:	41 59                	pop    %r9
    c197:	48 89 c7             	mov    %rax,%rdi
    c19a:	48 85 c0             	test   %rax,%rax
    c19d:	0f 85 43 ff ff ff    	jne    c0e6 <mm_alloc_internal+0x1a6>
    c1a3:	8b 7c 24 1c          	mov    0x1c(%rsp),%edi
    c1a7:	b9 11 00 00 00       	mov    $0x11,%ecx
    c1ac:	85 ff                	test   %edi,%edi
    c1ae:	0f 84 e0 fe ff ff    	je     c094 <mm_alloc_internal+0x154>
    c1b4:	e9 54 ff ff ff       	jmp    c10d <mm_alloc_internal+0x1cd>
    c1b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c1c0:	b9 0c 00 00 00       	mov    $0xc,%ecx
    c1c5:	e9 43 ff ff ff       	jmp    c10d <mm_alloc_internal+0x1cd>
    c1ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    c1d0:	4c 8d 44 24 40       	lea    0x40(%rsp),%r8
    c1d5:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
    c1da:	4c 89 fa             	mov    %r15,%rdx
    c1dd:	4c 89 f7             	mov    %r14,%rdi
    c1e0:	4c 89 c1             	mov    %r8,%rcx
    c1e3:	4c 89 44 24 20       	mov    %r8,0x20(%rsp)
    c1e8:	e8 b3 e0 ff ff       	call   a2a0 <find_free_region_at>
    c1ed:	3c 01                	cmp    $0x1,%al
    c1ef:	0f 84 c1 fe ff ff    	je     c0b6 <mm_alloc_internal+0x176>
    c1f5:	8b 74 24 1c          	mov    0x1c(%rsp),%esi
    c1f9:	b9 01 00 00 00       	mov    $0x1,%ecx
    c1fe:	85 f6                	test   %esi,%esi
    c200:	0f 85 07 ff ff ff    	jne    c10d <mm_alloc_internal+0x1cd>
    c206:	84 c0                	test   %al,%al
    c208:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
    c20d:	0f 84 86 fe ff ff    	je     c099 <mm_alloc_internal+0x159>
    c213:	e9 9e fe ff ff       	jmp    c0b6 <mm_alloc_internal+0x176>
    c218:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    c21f:	00 
    c220:	89 44 24 08          	mov    %eax,0x8(%rsp)
    c224:	e8 67 e2 ff ff       	call   a490 <ema_destroy>
    c229:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
    c22d:	e9 db fe ff ff       	jmp    c10d <mm_alloc_internal+0x1cd>
    c232:	e8 c9 4b 00 00       	call   10e00 <__stack_chk_fail>
    c237:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    c23e:	00 00 

000000000000c240 <sgx_mm_alloc>:
    c240:	f3 0f 1e fa          	endbr64 
    c244:	f6 c2 80             	test   $0x80,%dl
    c247:	75 17                	jne    c260 <sgx_mm_alloc+0x20>
    c249:	48 83 ec 10          	sub    $0x10,%rsp
    c24d:	48 8d 05 ac dd 00 00 	lea    0xddac(%rip),%rax        # 1a000 <g_user_ema_root>
    c254:	50                   	push   %rax
    c255:	e8 e6 fc ff ff       	call   bf40 <mm_alloc_internal>
    c25a:	48 83 c4 18          	add    $0x18,%rsp
    c25e:	c3                   	ret    
    c25f:	90                   	nop
    c260:	b8 16 00 00 00       	mov    $0x16,%eax
    c265:	c3                   	ret    
    c266:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    c26d:	00 00 00 

000000000000c270 <mm_commit_internal>:
    c270:	f3 0f 1e fa          	endbr64 
    c274:	41 55                	push   %r13
    c276:	49 89 d5             	mov    %rdx,%r13
    c279:	41 54                	push   %r12
    c27b:	49 89 fc             	mov    %rdi,%r12
    c27e:	55                   	push   %rbp
    c27f:	48 89 f5             	mov    %rsi,%rbp
    c282:	53                   	push   %rbx
    c283:	bb 0e 00 00 00       	mov    $0xe,%ebx
    c288:	48 83 ec 28          	sub    $0x28,%rsp
    c28c:	48 8b 3d fd e8 01 00 	mov    0x1e8fd(%rip),%rdi        # 2ab90 <mm_lock>
    c293:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c29a:	00 00 
    c29c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    c2a1:	31 c0                	xor    %eax,%eax
    c2a3:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    c2aa:	00 00 
    c2ac:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    c2b3:	00 00 
    c2b5:	e8 66 9a ff ff       	call   5d20 <sgx_mm_mutex_lock>
    c2ba:	85 c0                	test   %eax,%eax
    c2bc:	75 47                	jne    c305 <mm_commit_internal+0x95>
    c2be:	4c 01 e5             	add    %r12,%rbp
    c2c1:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    c2c6:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    c2cb:	4c 89 e6             	mov    %r12,%rsi
    c2ce:	48 89 ea             	mov    %rbp,%rdx
    c2d1:	4c 89 ef             	mov    %r13,%rdi
    c2d4:	bb 16 00 00 00       	mov    $0x16,%ebx
    c2d9:	e8 f2 d9 ff ff       	call   9cd0 <search_ema_range>
    c2de:	85 c0                	test   %eax,%eax
    c2e0:	78 17                	js     c2f9 <mm_commit_internal+0x89>
    c2e2:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    c2e7:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    c2ec:	48 89 e9             	mov    %rbp,%rcx
    c2ef:	4c 89 e2             	mov    %r12,%rdx
    c2f2:	e8 f9 e3 ff ff       	call   a6f0 <ema_do_commit_loop>
    c2f7:	89 c3                	mov    %eax,%ebx
    c2f9:	48 8b 3d 90 e8 01 00 	mov    0x1e890(%rip),%rdi        # 2ab90 <mm_lock>
    c300:	e8 3b 9a ff ff       	call   5d40 <sgx_mm_mutex_unlock>
    c305:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    c30a:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    c311:	00 00 
    c313:	75 0d                	jne    c322 <mm_commit_internal+0xb2>
    c315:	48 83 c4 28          	add    $0x28,%rsp
    c319:	89 d8                	mov    %ebx,%eax
    c31b:	5b                   	pop    %rbx
    c31c:	5d                   	pop    %rbp
    c31d:	41 5c                	pop    %r12
    c31f:	41 5d                	pop    %r13
    c321:	c3                   	ret    
    c322:	e8 d9 4a 00 00       	call   10e00 <__stack_chk_fail>
    c327:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    c32e:	00 00 

000000000000c330 <sgx_mm_commit>:
    c330:	f3 0f 1e fa          	endbr64 
    c334:	48 8d 15 c5 dc 00 00 	lea    0xdcc5(%rip),%rdx        # 1a000 <g_user_ema_root>
    c33b:	e9 30 ff ff ff       	jmp    c270 <mm_commit_internal>

000000000000c340 <mm_uncommit_internal>:
    c340:	f3 0f 1e fa          	endbr64 
    c344:	41 55                	push   %r13
    c346:	49 89 d5             	mov    %rdx,%r13
    c349:	41 54                	push   %r12
    c34b:	49 89 fc             	mov    %rdi,%r12
    c34e:	55                   	push   %rbp
    c34f:	48 89 f5             	mov    %rsi,%rbp
    c352:	53                   	push   %rbx
    c353:	bb 0e 00 00 00       	mov    $0xe,%ebx
    c358:	48 83 ec 28          	sub    $0x28,%rsp
    c35c:	48 8b 3d 2d e8 01 00 	mov    0x1e82d(%rip),%rdi        # 2ab90 <mm_lock>
    c363:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c36a:	00 00 
    c36c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    c371:	31 c0                	xor    %eax,%eax
    c373:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    c37a:	00 00 
    c37c:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    c383:	00 00 
    c385:	e8 96 99 ff ff       	call   5d20 <sgx_mm_mutex_lock>
    c38a:	85 c0                	test   %eax,%eax
    c38c:	75 47                	jne    c3d5 <mm_uncommit_internal+0x95>
    c38e:	4c 01 e5             	add    %r12,%rbp
    c391:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    c396:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    c39b:	4c 89 e6             	mov    %r12,%rsi
    c39e:	48 89 ea             	mov    %rbp,%rdx
    c3a1:	4c 89 ef             	mov    %r13,%rdi
    c3a4:	bb 16 00 00 00       	mov    $0x16,%ebx
    c3a9:	e8 22 d9 ff ff       	call   9cd0 <search_ema_range>
    c3ae:	85 c0                	test   %eax,%eax
    c3b0:	78 17                	js     c3c9 <mm_uncommit_internal+0x89>
    c3b2:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    c3b7:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    c3bc:	48 89 e9             	mov    %rbp,%rcx
    c3bf:	4c 89 e2             	mov    %r12,%rdx
    c3c2:	e8 69 e9 ff ff       	call   ad30 <ema_do_uncommit_loop>
    c3c7:	89 c3                	mov    %eax,%ebx
    c3c9:	48 8b 3d c0 e7 01 00 	mov    0x1e7c0(%rip),%rdi        # 2ab90 <mm_lock>
    c3d0:	e8 6b 99 ff ff       	call   5d40 <sgx_mm_mutex_unlock>
    c3d5:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    c3da:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    c3e1:	00 00 
    c3e3:	75 0d                	jne    c3f2 <mm_uncommit_internal+0xb2>
    c3e5:	48 83 c4 28          	add    $0x28,%rsp
    c3e9:	89 d8                	mov    %ebx,%eax
    c3eb:	5b                   	pop    %rbx
    c3ec:	5d                   	pop    %rbp
    c3ed:	41 5c                	pop    %r12
    c3ef:	41 5d                	pop    %r13
    c3f1:	c3                   	ret    
    c3f2:	e8 09 4a 00 00       	call   10e00 <__stack_chk_fail>
    c3f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    c3fe:	00 00 

000000000000c400 <sgx_mm_uncommit>:
    c400:	f3 0f 1e fa          	endbr64 
    c404:	48 8d 15 f5 db 00 00 	lea    0xdbf5(%rip),%rdx        # 1a000 <g_user_ema_root>
    c40b:	e9 30 ff ff ff       	jmp    c340 <mm_uncommit_internal>

000000000000c410 <mm_dealloc_internal>:
    c410:	f3 0f 1e fa          	endbr64 
    c414:	41 55                	push   %r13
    c416:	49 89 d5             	mov    %rdx,%r13
    c419:	41 54                	push   %r12
    c41b:	49 89 fc             	mov    %rdi,%r12
    c41e:	55                   	push   %rbp
    c41f:	48 89 f5             	mov    %rsi,%rbp
    c422:	53                   	push   %rbx
    c423:	bb 0e 00 00 00       	mov    $0xe,%ebx
    c428:	48 83 ec 28          	sub    $0x28,%rsp
    c42c:	48 8b 3d 5d e7 01 00 	mov    0x1e75d(%rip),%rdi        # 2ab90 <mm_lock>
    c433:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c43a:	00 00 
    c43c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    c441:	31 c0                	xor    %eax,%eax
    c443:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    c44a:	00 00 
    c44c:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    c453:	00 00 
    c455:	e8 c6 98 ff ff       	call   5d20 <sgx_mm_mutex_lock>
    c45a:	85 c0                	test   %eax,%eax
    c45c:	75 47                	jne    c4a5 <mm_dealloc_internal+0x95>
    c45e:	4c 01 e5             	add    %r12,%rbp
    c461:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    c466:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    c46b:	4c 89 e6             	mov    %r12,%rsi
    c46e:	48 89 ea             	mov    %rbp,%rdx
    c471:	4c 89 ef             	mov    %r13,%rdi
    c474:	bb 16 00 00 00       	mov    $0x16,%ebx
    c479:	e8 52 d8 ff ff       	call   9cd0 <search_ema_range>
    c47e:	85 c0                	test   %eax,%eax
    c480:	78 17                	js     c499 <mm_dealloc_internal+0x89>
    c482:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    c487:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    c48c:	48 89 e9             	mov    %rbp,%rcx
    c48f:	4c 89 e2             	mov    %r12,%rdx
    c492:	e8 49 e8 ff ff       	call   ace0 <ema_do_dealloc_loop>
    c497:	89 c3                	mov    %eax,%ebx
    c499:	48 8b 3d f0 e6 01 00 	mov    0x1e6f0(%rip),%rdi        # 2ab90 <mm_lock>
    c4a0:	e8 9b 98 ff ff       	call   5d40 <sgx_mm_mutex_unlock>
    c4a5:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    c4aa:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    c4b1:	00 00 
    c4b3:	75 0d                	jne    c4c2 <mm_dealloc_internal+0xb2>
    c4b5:	48 83 c4 28          	add    $0x28,%rsp
    c4b9:	89 d8                	mov    %ebx,%eax
    c4bb:	5b                   	pop    %rbx
    c4bc:	5d                   	pop    %rbp
    c4bd:	41 5c                	pop    %r12
    c4bf:	41 5d                	pop    %r13
    c4c1:	c3                   	ret    
    c4c2:	e8 39 49 00 00       	call   10e00 <__stack_chk_fail>
    c4c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    c4ce:	00 00 

000000000000c4d0 <sgx_mm_dealloc>:
    c4d0:	f3 0f 1e fa          	endbr64 
    c4d4:	48 8d 15 25 db 00 00 	lea    0xdb25(%rip),%rdx        # 1a000 <g_user_ema_root>
    c4db:	e9 30 ff ff ff       	jmp    c410 <mm_dealloc_internal>

000000000000c4e0 <mm_commit_data_internal>:
    c4e0:	f3 0f 1e fa          	endbr64 
    c4e4:	41 57                	push   %r15
    c4e6:	41 56                	push   %r14
    c4e8:	41 55                	push   %r13
    c4ea:	41 54                	push   %r12
    c4ec:	55                   	push   %rbp
    c4ed:	53                   	push   %rbx
    c4ee:	48 83 ec 28          	sub    $0x28,%rsp
    c4f2:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c4f9:	00 00 
    c4fb:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    c500:	31 c0                	xor    %eax,%eax
    c502:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    c509:	00 00 
    c50b:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    c512:	00 00 
    c514:	48 85 f6             	test   %rsi,%rsi
    c517:	0f 84 a3 00 00 00    	je     c5c0 <mm_commit_data_internal+0xe0>
    c51d:	48 89 d0             	mov    %rdx,%rax
    c520:	49 89 fc             	mov    %rdi,%r12
    c523:	48 89 f3             	mov    %rsi,%rbx
    c526:	48 89 d5             	mov    %rdx,%rbp
    c529:	48 09 f0             	or     %rsi,%rax
    c52c:	48 09 f8             	or     %rdi,%rax
    c52f:	a9 ff 0f 00 00       	test   $0xfff,%eax
    c534:	0f 85 86 00 00 00    	jne    c5c0 <mm_commit_data_internal+0xe0>
    c53a:	41 89 cf             	mov    %ecx,%r15d
    c53d:	83 f9 07             	cmp    $0x7,%ecx
    c540:	77 7e                	ja     c5c0 <mm_commit_data_internal+0xe0>
    c542:	48 89 d7             	mov    %rdx,%rdi
    c545:	4d 89 c6             	mov    %r8,%r14
    c548:	e8 33 98 ff ff       	call   5d80 <sgx_mm_is_within_enclave>
    c54d:	84 c0                	test   %al,%al
    c54f:	74 6f                	je     c5c0 <mm_commit_data_internal+0xe0>
    c551:	48 8b 3d 38 e6 01 00 	mov    0x1e638(%rip),%rdi        # 2ab90 <mm_lock>
    c558:	41 bd 0e 00 00 00    	mov    $0xe,%r13d
    c55e:	e8 bd 97 ff ff       	call   5d20 <sgx_mm_mutex_lock>
    c563:	85 c0                	test   %eax,%eax
    c565:	75 5f                	jne    c5c6 <mm_commit_data_internal+0xe6>
    c567:	4c 01 e3             	add    %r12,%rbx
    c56a:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    c56f:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    c574:	4c 89 e6             	mov    %r12,%rsi
    c577:	48 89 da             	mov    %rbx,%rdx
    c57a:	4c 89 f7             	mov    %r14,%rdi
    c57d:	41 bd 16 00 00 00    	mov    $0x16,%r13d
    c583:	e8 48 d7 ff ff       	call   9cd0 <search_ema_range>
    c588:	85 c0                	test   %eax,%eax
    c58a:	78 1e                	js     c5aa <mm_commit_data_internal+0xca>
    c58c:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    c591:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    c596:	45 89 f9             	mov    %r15d,%r9d
    c599:	49 89 e8             	mov    %rbp,%r8
    c59c:	48 89 d9             	mov    %rbx,%rcx
    c59f:	4c 89 e2             	mov    %r12,%rdx
    c5a2:	e8 a9 ea ff ff       	call   b050 <ema_do_commit_data_loop>
    c5a7:	41 89 c5             	mov    %eax,%r13d
    c5aa:	48 8b 3d df e5 01 00 	mov    0x1e5df(%rip),%rdi        # 2ab90 <mm_lock>
    c5b1:	e8 8a 97 ff ff       	call   5d40 <sgx_mm_mutex_unlock>
    c5b6:	eb 0e                	jmp    c5c6 <mm_commit_data_internal+0xe6>
    c5b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    c5bf:	00 
    c5c0:	41 bd 16 00 00 00    	mov    $0x16,%r13d
    c5c6:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    c5cb:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    c5d2:	00 00 
    c5d4:	75 12                	jne    c5e8 <mm_commit_data_internal+0x108>
    c5d6:	48 83 c4 28          	add    $0x28,%rsp
    c5da:	44 89 e8             	mov    %r13d,%eax
    c5dd:	5b                   	pop    %rbx
    c5de:	5d                   	pop    %rbp
    c5df:	41 5c                	pop    %r12
    c5e1:	41 5d                	pop    %r13
    c5e3:	41 5e                	pop    %r14
    c5e5:	41 5f                	pop    %r15
    c5e7:	c3                   	ret    
    c5e8:	e8 13 48 00 00       	call   10e00 <__stack_chk_fail>
    c5ed:	0f 1f 00             	nopl   (%rax)

000000000000c5f0 <sgx_mm_commit_data>:
    c5f0:	f3 0f 1e fa          	endbr64 
    c5f4:	4c 8d 05 05 da 00 00 	lea    0xda05(%rip),%r8        # 1a000 <g_user_ema_root>
    c5fb:	e9 e0 fe ff ff       	jmp    c4e0 <mm_commit_data_internal>

000000000000c600 <mm_modify_type_internal>:
    c600:	f3 0f 1e fa          	endbr64 
    c604:	41 54                	push   %r12
    c606:	55                   	push   %rbp
    c607:	bd 01 00 00 00       	mov    $0x1,%ebp
    c60c:	53                   	push   %rbx
    c60d:	48 83 ec 20          	sub    $0x20,%rsp
    c611:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c618:	00 00 
    c61a:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    c61f:	31 c0                	xor    %eax,%eax
    c621:	81 fa 00 01 00 00    	cmp    $0x100,%edx
    c627:	0f 85 83 00 00 00    	jne    c6b0 <mm_modify_type_internal+0xb0>
    c62d:	48 81 fe 00 10 00 00 	cmp    $0x1000,%rsi
    c634:	0f 85 96 00 00 00    	jne    c6d0 <mm_modify_type_internal+0xd0>
    c63a:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    c641:	00 00 
    c643:	49 89 fc             	mov    %rdi,%r12
    c646:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    c64d:	00 00 
    c64f:	f7 c7 ff 0f 00 00    	test   $0xfff,%edi
    c655:	75 79                	jne    c6d0 <mm_modify_type_internal+0xd0>
    c657:	48 8b 3d 32 e5 01 00 	mov    0x1e532(%rip),%rdi        # 2ab90 <mm_lock>
    c65e:	48 89 cb             	mov    %rcx,%rbx
    c661:	bd 0e 00 00 00       	mov    $0xe,%ebp
    c666:	e8 b5 96 ff ff       	call   5d20 <sgx_mm_mutex_lock>
    c66b:	85 c0                	test   %eax,%eax
    c66d:	75 41                	jne    c6b0 <mm_modify_type_internal+0xb0>
    c66f:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    c674:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    c679:	4c 89 e6             	mov    %r12,%rsi
    c67c:	48 89 df             	mov    %rbx,%rdi
    c67f:	49 8d 94 24 00 10 00 	lea    0x1000(%r12),%rdx
    c686:	00 
    c687:	bd 16 00 00 00       	mov    $0x16,%ebp
    c68c:	e8 3f d6 ff ff       	call   9cd0 <search_ema_range>
    c691:	85 c0                	test   %eax,%eax
    c693:	78 0f                	js     c6a4 <mm_modify_type_internal+0xa4>
    c695:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    c69a:	4c 89 e6             	mov    %r12,%rsi
    c69d:	e8 1e e1 ff ff       	call   a7c0 <ema_change_to_tcs>
    c6a2:	89 c5                	mov    %eax,%ebp
    c6a4:	48 8b 3d e5 e4 01 00 	mov    0x1e4e5(%rip),%rdi        # 2ab90 <mm_lock>
    c6ab:	e8 90 96 ff ff       	call   5d40 <sgx_mm_mutex_unlock>
    c6b0:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    c6b5:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    c6bc:	00 00 
    c6be:	75 17                	jne    c6d7 <mm_modify_type_internal+0xd7>
    c6c0:	48 83 c4 20          	add    $0x20,%rsp
    c6c4:	89 e8                	mov    %ebp,%eax
    c6c6:	5b                   	pop    %rbx
    c6c7:	5d                   	pop    %rbp
    c6c8:	41 5c                	pop    %r12
    c6ca:	c3                   	ret    
    c6cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    c6d0:	bd 16 00 00 00       	mov    $0x16,%ebp
    c6d5:	eb d9                	jmp    c6b0 <mm_modify_type_internal+0xb0>
    c6d7:	e8 24 47 00 00       	call   10e00 <__stack_chk_fail>
    c6dc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000c6e0 <sgx_mm_modify_type>:
    c6e0:	f3 0f 1e fa          	endbr64 
    c6e4:	55                   	push   %rbp
    c6e5:	53                   	push   %rbx
    c6e6:	bb 01 00 00 00       	mov    $0x1,%ebx
    c6eb:	48 83 ec 28          	sub    $0x28,%rsp
    c6ef:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c6f6:	00 00 
    c6f8:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    c6fd:	31 c0                	xor    %eax,%eax
    c6ff:	81 fa 00 01 00 00    	cmp    $0x100,%edx
    c705:	0f 85 85 00 00 00    	jne    c790 <sgx_mm_modify_type+0xb0>
    c70b:	48 81 fe 00 10 00 00 	cmp    $0x1000,%rsi
    c712:	0f 85 98 00 00 00    	jne    c7b0 <sgx_mm_modify_type+0xd0>
    c718:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    c71f:	00 00 
    c721:	48 89 fd             	mov    %rdi,%rbp
    c724:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    c72b:	00 00 
    c72d:	f7 c7 ff 0f 00 00    	test   $0xfff,%edi
    c733:	75 7b                	jne    c7b0 <sgx_mm_modify_type+0xd0>
    c735:	48 8b 3d 54 e4 01 00 	mov    0x1e454(%rip),%rdi        # 2ab90 <mm_lock>
    c73c:	bb 0e 00 00 00       	mov    $0xe,%ebx
    c741:	e8 da 95 ff ff       	call   5d20 <sgx_mm_mutex_lock>
    c746:	85 c0                	test   %eax,%eax
    c748:	75 46                	jne    c790 <sgx_mm_modify_type+0xb0>
    c74a:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    c74f:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    c754:	48 89 ee             	mov    %rbp,%rsi
    c757:	bb 16 00 00 00       	mov    $0x16,%ebx
    c75c:	48 8d 95 00 10 00 00 	lea    0x1000(%rbp),%rdx
    c763:	48 8d 3d 96 d8 00 00 	lea    0xd896(%rip),%rdi        # 1a000 <g_user_ema_root>
    c76a:	e8 61 d5 ff ff       	call   9cd0 <search_ema_range>
    c76f:	85 c0                	test   %eax,%eax
    c771:	78 0f                	js     c782 <sgx_mm_modify_type+0xa2>
    c773:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    c778:	48 89 ee             	mov    %rbp,%rsi
    c77b:	e8 40 e0 ff ff       	call   a7c0 <ema_change_to_tcs>
    c780:	89 c3                	mov    %eax,%ebx
    c782:	48 8b 3d 07 e4 01 00 	mov    0x1e407(%rip),%rdi        # 2ab90 <mm_lock>
    c789:	e8 b2 95 ff ff       	call   5d40 <sgx_mm_mutex_unlock>
    c78e:	66 90                	xchg   %ax,%ax
    c790:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    c795:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    c79c:	00 00 
    c79e:	75 17                	jne    c7b7 <sgx_mm_modify_type+0xd7>
    c7a0:	48 83 c4 28          	add    $0x28,%rsp
    c7a4:	89 d8                	mov    %ebx,%eax
    c7a6:	5b                   	pop    %rbx
    c7a7:	5d                   	pop    %rbp
    c7a8:	c3                   	ret    
    c7a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c7b0:	bb 16 00 00 00       	mov    $0x16,%ebx
    c7b5:	eb d9                	jmp    c790 <sgx_mm_modify_type+0xb0>
    c7b7:	e8 44 46 00 00       	call   10e00 <__stack_chk_fail>
    c7bc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000c7c0 <mm_modify_permissions_internal>:
    c7c0:	f3 0f 1e fa          	endbr64 
    c7c4:	41 56                	push   %r14
    c7c6:	41 55                	push   %r13
    c7c8:	41 54                	push   %r12
    c7ca:	41 bc 16 00 00 00    	mov    $0x16,%r12d
    c7d0:	55                   	push   %rbp
    c7d1:	53                   	push   %rbx
    c7d2:	48 83 ec 20          	sub    $0x20,%rsp
    c7d6:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c7dd:	00 00 
    c7df:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    c7e4:	31 c0                	xor    %eax,%eax
    c7e6:	48 85 f6             	test   %rsi,%rsi
    c7e9:	0f 84 9b 00 00 00    	je     c88a <mm_modify_permissions_internal+0xca>
    c7ef:	48 89 f8             	mov    %rdi,%rax
    c7f2:	48 89 fd             	mov    %rdi,%rbp
    c7f5:	48 89 f3             	mov    %rsi,%rbx
    c7f8:	48 09 f0             	or     %rsi,%rax
    c7fb:	a9 ff 0f 00 00       	test   $0xfff,%eax
    c800:	0f 85 84 00 00 00    	jne    c88a <mm_modify_permissions_internal+0xca>
    c806:	89 d0                	mov    %edx,%eax
    c808:	41 89 d6             	mov    %edx,%r14d
    c80b:	83 e0 05             	and    $0x5,%eax
    c80e:	83 f8 04             	cmp    $0x4,%eax
    c811:	74 77                	je     c88a <mm_modify_permissions_internal+0xca>
    c813:	48 8b 3d 76 e3 01 00 	mov    0x1e376(%rip),%rdi        # 2ab90 <mm_lock>
    c81a:	49 89 cd             	mov    %rcx,%r13
    c81d:	41 bc 0e 00 00 00    	mov    $0xe,%r12d
    c823:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    c82a:	00 00 
    c82c:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    c833:	00 00 
    c835:	e8 e6 94 ff ff       	call   5d20 <sgx_mm_mutex_lock>
    c83a:	85 c0                	test   %eax,%eax
    c83c:	75 4c                	jne    c88a <mm_modify_permissions_internal+0xca>
    c83e:	48 01 eb             	add    %rbp,%rbx
    c841:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    c846:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    c84b:	48 89 ee             	mov    %rbp,%rsi
    c84e:	48 89 da             	mov    %rbx,%rdx
    c851:	4c 89 ef             	mov    %r13,%rdi
    c854:	41 bc 16 00 00 00    	mov    $0x16,%r12d
    c85a:	e8 71 d4 ff ff       	call   9cd0 <search_ema_range>
    c85f:	85 c0                	test   %eax,%eax
    c861:	78 1b                	js     c87e <mm_modify_permissions_internal+0xbe>
    c863:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    c868:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    c86d:	45 89 f0             	mov    %r14d,%r8d
    c870:	48 89 d9             	mov    %rbx,%rcx
    c873:	48 89 ea             	mov    %rbp,%rdx
    c876:	e8 d5 e5 ff ff       	call   ae50 <ema_modify_permissions_loop>
    c87b:	41 89 c4             	mov    %eax,%r12d
    c87e:	48 8b 3d 0b e3 01 00 	mov    0x1e30b(%rip),%rdi        # 2ab90 <mm_lock>
    c885:	e8 b6 94 ff ff       	call   5d40 <sgx_mm_mutex_unlock>
    c88a:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    c88f:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    c896:	00 00 
    c898:	75 10                	jne    c8aa <mm_modify_permissions_internal+0xea>
    c89a:	48 83 c4 20          	add    $0x20,%rsp
    c89e:	44 89 e0             	mov    %r12d,%eax
    c8a1:	5b                   	pop    %rbx
    c8a2:	5d                   	pop    %rbp
    c8a3:	41 5c                	pop    %r12
    c8a5:	41 5d                	pop    %r13
    c8a7:	41 5e                	pop    %r14
    c8a9:	c3                   	ret    
    c8aa:	e8 51 45 00 00       	call   10e00 <__stack_chk_fail>
    c8af:	90                   	nop

000000000000c8b0 <sgx_mm_modify_permissions>:
    c8b0:	f3 0f 1e fa          	endbr64 
    c8b4:	48 8d 0d 45 d7 00 00 	lea    0xd745(%rip),%rcx        # 1a000 <g_user_ema_root>
    c8bb:	e9 00 ff ff ff       	jmp    c7c0 <mm_modify_permissions_internal>

000000000000c8c0 <sgx_mm_init>:
    c8c0:	f3 0f 1e fa          	endbr64 
    c8c4:	55                   	push   %rbp
    c8c5:	48 89 fd             	mov    %rdi,%rbp
    c8c8:	53                   	push   %rbx
    c8c9:	48 89 f3             	mov    %rsi,%rbx
    c8cc:	48 83 ec 08          	sub    $0x8,%rsp
    c8d0:	e8 0b 94 ff ff       	call   5ce0 <sgx_mm_mutex_create>
    c8d5:	48 89 05 b4 e2 01 00 	mov    %rax,0x1e2b4(%rip)        # 2ab90 <mm_lock>
    c8dc:	48 85 c0             	test   %rax,%rax
    c8df:	74 2f                	je     c910 <sgx_mm_init+0x50>
    c8e1:	48 8d 3d 98 f4 ff ff 	lea    -0xb68(%rip),%rdi        # bd80 <sgx_mm_enclave_pfhandler>
    c8e8:	48 89 2d 99 e2 01 00 	mov    %rbp,0x1e299(%rip)        # 2ab88 <mm_user_base>
    c8ef:	48 89 1d 8a e2 01 00 	mov    %rbx,0x1e28a(%rip)        # 2ab80 <mm_user_end>
    c8f6:	e8 85 93 ff ff       	call   5c80 <sgx_mm_register_pfhandler>
    c8fb:	84 c0                	test   %al,%al
    c8fd:	74 11                	je     c910 <sgx_mm_init+0x50>
    c8ff:	48 83 c4 08          	add    $0x8,%rsp
    c903:	31 c0                	xor    %eax,%eax
    c905:	5b                   	pop    %rbx
    c906:	5d                   	pop    %rbp
    c907:	c3                   	ret    
    c908:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    c90f:	00 
    c910:	48 83 c4 08          	add    $0x8,%rsp
    c914:	b8 0e 00 00 00       	mov    $0xe,%eax
    c919:	5b                   	pop    %rbx
    c91a:	5d                   	pop    %rbp
    c91b:	c3                   	ret    
    c91c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000c920 <alloca>:
    c920:	f3 0f 1e fa          	endbr64 
    c924:	5a                   	pop    %rdx
    c925:	48 89 e1             	mov    %rsp,%rcx
    c928:	48 83 c7 0f          	add    $0xf,%rdi
    c92c:	48 83 e7 f0          	and    $0xfffffffffffffff0,%rdi
    c930:	48 29 fc             	sub    %rdi,%rsp
    c933:	48 89 e0             	mov    %rsp,%rax
    c936:	3e ff e2             	notrack jmp *%rdx
    c939:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000c940 <heap_init>:
    c940:	f3 0f 1e fa          	endbr64 
    c944:	48 89 f8             	mov    %rdi,%rax
    c947:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    c94d:	48 85 ff             	test   %rdi,%rdi
    c950:	75 0e                	jne    c960 <heap_init+0x20>
    c952:	44 89 c0             	mov    %r8d,%eax
    c955:	c3                   	ret    
    c956:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    c95d:	00 00 00 
    c960:	48 89 f7             	mov    %rsi,%rdi
    c963:	49 89 c1             	mov    %rax,%r9
    c966:	48 09 d7             	or     %rdx,%rdi
    c969:	41 81 e1 ff 0f 00 00 	and    $0xfff,%r9d
    c970:	81 e7 ff 0f 00 00    	and    $0xfff,%edi
    c976:	48 0b 3d d3 b4 00 00 	or     0xb4d3(%rip),%rdi        # 17e50 <heap_base>
    c97d:	4c 09 cf             	or     %r9,%rdi
    c980:	75 d0                	jne    c952 <heap_init+0x12>
    c982:	45 31 c0             	xor    %r8d,%r8d
    c985:	48 89 05 c4 b4 00 00 	mov    %rax,0xb4c4(%rip)        # 17e50 <heap_base>
    c98c:	48 89 35 b5 b4 00 00 	mov    %rsi,0xb4b5(%rip)        # 17e48 <heap_size>
    c993:	44 89 c0             	mov    %r8d,%eax
    c996:	48 89 15 9b b4 00 00 	mov    %rdx,0xb49b(%rip)        # 17e38 <heap_min_size>
    c99d:	89 0d 9d b4 00 00    	mov    %ecx,0xb49d(%rip)        # 17e40 <is_edmm_supported>
    c9a3:	c3                   	ret    
    c9a4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    c9ab:	00 00 00 
    c9ae:	66 90                	xchg   %ax,%ax

000000000000c9b0 <sbrk>:
    c9b0:	f3 0f 1e fa          	endbr64 
    c9b4:	55                   	push   %rbp
    c9b5:	53                   	push   %rbx
    c9b6:	48 83 ec 08          	sub    $0x8,%rsp
    c9ba:	48 8b 05 8f b4 00 00 	mov    0xb48f(%rip),%rax        # 17e50 <heap_base>
    c9c1:	48 85 c0             	test   %rax,%rax
    c9c4:	0f 84 e6 00 00 00    	je     cab0 <sbrk+0x100>
    c9ca:	48 8b 1d c7 e1 01 00 	mov    0x1e1c7(%rip),%rbx        # 2ab98 <heap_used.0>
    c9d1:	48 85 ff             	test   %rdi,%rdi
    c9d4:	0f 88 86 00 00 00    	js     ca60 <sbrk+0xb0>
    c9da:	48 89 fa             	mov    %rdi,%rdx
    c9dd:	48 01 da             	add    %rbx,%rdx
    c9e0:	0f 82 ca 00 00 00    	jb     cab0 <sbrk+0x100>
    c9e6:	48 39 15 5b b4 00 00 	cmp    %rdx,0xb45b(%rip)        # 17e48 <heap_size>
    c9ed:	0f 82 bd 00 00 00    	jb     cab0 <sbrk+0x100>
    c9f3:	48 8d 2c 18          	lea    (%rax,%rbx,1),%rbp
    c9f7:	48 85 ff             	test   %rdi,%rdi
    c9fa:	74 53                	je     ca4f <sbrk+0x9f>
    c9fc:	48 8b 0d 9d e1 01 00 	mov    0x1e19d(%rip),%rcx        # 2aba0 <g_peak_heap_used>
    ca03:	48 89 15 8e e1 01 00 	mov    %rdx,0x1e18e(%rip)        # 2ab98 <heap_used.0>
    ca0a:	48 39 d1             	cmp    %rdx,%rcx
    ca0d:	48 0f 42 ca          	cmovb  %rdx,%rcx
    ca11:	48 89 0d 88 e1 01 00 	mov    %rcx,0x1e188(%rip)        # 2aba0 <g_peak_heap_used>
    ca18:	8b 0d 22 b4 00 00    	mov    0xb422(%rip),%ecx        # 17e40 <is_edmm_supported>
    ca1e:	85 c9                	test   %ecx,%ecx
    ca20:	74 2d                	je     ca4f <sbrk+0x9f>
    ca22:	48 8b 0d 0f b4 00 00 	mov    0xb40f(%rip),%rcx        # 17e38 <heap_min_size>
    ca29:	48 39 d1             	cmp    %rdx,%rcx
    ca2c:	73 21                	jae    ca4f <sbrk+0x9f>
    ca2e:	49 89 e8             	mov    %rbp,%r8
    ca31:	48 39 d9             	cmp    %rbx,%rcx
    ca34:	72 0a                	jb     ca40 <sbrk+0x90>
    ca36:	48 29 ca             	sub    %rcx,%rdx
    ca39:	4c 8d 04 08          	lea    (%rax,%rcx,1),%r8
    ca3d:	48 89 d7             	mov    %rdx,%rdi
    ca40:	48 89 fe             	mov    %rdi,%rsi
    ca43:	4c 89 c7             	mov    %r8,%rdi
    ca46:	e8 d5 f2 ff ff       	call   bd20 <mm_commit>
    ca4b:	85 c0                	test   %eax,%eax
    ca4d:	75 56                	jne    caa5 <sbrk+0xf5>
    ca4f:	48 83 c4 08          	add    $0x8,%rsp
    ca53:	48 89 e8             	mov    %rbp,%rax
    ca56:	5b                   	pop    %rbx
    ca57:	5d                   	pop    %rbp
    ca58:	c3                   	ret    
    ca59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    ca60:	48 89 fe             	mov    %rdi,%rsi
    ca63:	48 f7 de             	neg    %rsi
    ca66:	48 39 f3             	cmp    %rsi,%rbx
    ca69:	72 45                	jb     cab0 <sbrk+0x100>
    ca6b:	44 8b 05 ce b3 00 00 	mov    0xb3ce(%rip),%r8d        # 17e40 <is_edmm_supported>
    ca72:	48 01 df             	add    %rbx,%rdi
    ca75:	48 89 3d 1c e1 01 00 	mov    %rdi,0x1e11c(%rip)        # 2ab98 <heap_used.0>
    ca7c:	48 8d 2c 38          	lea    (%rax,%rdi,1),%rbp
    ca80:	45 85 c0             	test   %r8d,%r8d
    ca83:	74 ca                	je     ca4f <sbrk+0x9f>
    ca85:	48 8b 15 ac b3 00 00 	mov    0xb3ac(%rip),%rdx        # 17e38 <heap_min_size>
    ca8c:	48 39 da             	cmp    %rbx,%rdx
    ca8f:	73 be                	jae    ca4f <sbrk+0x9f>
    ca91:	48 89 e9             	mov    %rbp,%rcx
    ca94:	48 39 fa             	cmp    %rdi,%rdx
    ca97:	73 27                	jae    cac0 <sbrk+0x110>
    ca99:	48 89 cf             	mov    %rcx,%rdi
    ca9c:	e8 8f f2 ff ff       	call   bd30 <mm_uncommit>
    caa1:	85 c0                	test   %eax,%eax
    caa3:	74 aa                	je     ca4f <sbrk+0x9f>
    caa5:	48 89 1d ec e0 01 00 	mov    %rbx,0x1e0ec(%rip)        # 2ab98 <heap_used.0>
    caac:	0f 1f 40 00          	nopl   0x0(%rax)
    cab0:	48 c7 c5 ff ff ff ff 	mov    $0xffffffffffffffff,%rbp
    cab7:	eb 96                	jmp    ca4f <sbrk+0x9f>
    cab9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    cac0:	48 89 de             	mov    %rbx,%rsi
    cac3:	48 8d 0c 10          	lea    (%rax,%rdx,1),%rcx
    cac7:	48 29 d6             	sub    %rdx,%rsi
    caca:	eb cd                	jmp    ca99 <sbrk+0xe9>
    cacc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000cad0 <sgx_spin_lock>:
    cad0:	f3 0f 1e fa          	endbr64 
    cad4:	48 83 ec 18          	sub    $0x18,%rsp
    cad8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    cadf:	00 00 
    cae1:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    cae6:	b8 01 00 00 00       	mov    $0x1,%eax
    caeb:	f0 87 07             	lock xchg %eax,(%rdi)
    caee:	89 44 24 04          	mov    %eax,0x4(%rsp)
    caf2:	8b 54 24 04          	mov    0x4(%rsp),%edx
    caf6:	85 d2                	test   %edx,%edx
    caf8:	74 48                	je     cb42 <sgx_spin_lock+0x72>
    cafa:	48 89 f9             	mov    %rdi,%rcx
    cafd:	be 01 00 00 00       	mov    $0x1,%esi
    cb02:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    cb08:	ba 02 00 00 00       	mov    $0x2,%edx
    cb0d:	0f 1f 00             	nopl   (%rax)
    cb10:	85 d2                	test   %edx,%edx
    cb12:	7e 0d                	jle    cb21 <sgx_spin_lock+0x51>
    cb14:	31 c0                	xor    %eax,%eax
    cb16:	f3 90                	pause  
    cb18:	f3 90                	pause  
    cb1a:	83 c0 02             	add    $0x2,%eax
    cb1d:	39 c2                	cmp    %eax,%edx
    cb1f:	75 f5                	jne    cb16 <sgx_spin_lock+0x46>
    cb21:	b8 00 04 00 00       	mov    $0x400,%eax
    cb26:	01 d2                	add    %edx,%edx
    cb28:	39 c2                	cmp    %eax,%edx
    cb2a:	0f 4f d0             	cmovg  %eax,%edx
    cb2d:	8b 01                	mov    (%rcx),%eax
    cb2f:	85 c0                	test   %eax,%eax
    cb31:	75 dd                	jne    cb10 <sgx_spin_lock+0x40>
    cb33:	f0 87 31             	lock xchg %esi,(%rcx)
    cb36:	89 74 24 04          	mov    %esi,0x4(%rsp)
    cb3a:	8b 44 24 04          	mov    0x4(%rsp),%eax
    cb3e:	85 c0                	test   %eax,%eax
    cb40:	75 c6                	jne    cb08 <sgx_spin_lock+0x38>
    cb42:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    cb47:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    cb4e:	00 00 
    cb50:	75 07                	jne    cb59 <sgx_spin_lock+0x89>
    cb52:	31 c0                	xor    %eax,%eax
    cb54:	48 83 c4 18          	add    $0x18,%rsp
    cb58:	c3                   	ret    
    cb59:	e8 a2 42 00 00       	call   10e00 <__stack_chk_fail>
    cb5e:	66 90                	xchg   %ax,%ax

000000000000cb60 <sgx_spin_unlock>:
    cb60:	f3 0f 1e fa          	endbr64 
    cb64:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
    cb6a:	31 c0                	xor    %eax,%eax
    cb6c:	c3                   	ret    
    cb6d:	0f 1f 00             	nopl   (%rax)

000000000000cb70 <dispose_chunk>:
    cb70:	55                   	push   %rbp
    cb71:	48 89 f0             	mov    %rsi,%rax
    cb74:	48 01 d6             	add    %rdx,%rsi
    cb77:	53                   	push   %rbx
    cb78:	48 83 ec 08          	sub    $0x8,%rsp
    cb7c:	48 8b 48 08          	mov    0x8(%rax),%rcx
    cb80:	f6 c1 01             	test   $0x1,%cl
    cb83:	0f 85 f7 00 00 00    	jne    cc80 <dispose_chunk+0x110>
    cb89:	83 e1 03             	and    $0x3,%ecx
    cb8c:	4c 8b 08             	mov    (%rax),%r9
    cb8f:	0f 84 64 01 00 00    	je     ccf9 <dispose_chunk+0x189>
    cb95:	4c 8b 47 18          	mov    0x18(%rdi),%r8
    cb99:	4c 29 c8             	sub    %r9,%rax
    cb9c:	4c 01 ca             	add    %r9,%rdx
    cb9f:	4c 39 c0             	cmp    %r8,%rax
    cba2:	0f 82 38 03 00 00    	jb     cee0 <dispose_chunk+0x370>
    cba8:	48 39 47 20          	cmp    %rax,0x20(%rdi)
    cbac:	0f 84 2e 04 00 00    	je     cfe0 <dispose_chunk+0x470>
    cbb2:	4c 89 c9             	mov    %r9,%rcx
    cbb5:	48 c1 e9 03          	shr    $0x3,%rcx
    cbb9:	49 81 f9 ff 00 00 00 	cmp    $0xff,%r9
    cbc0:	0f 86 4a 03 00 00    	jbe    cf10 <dispose_chunk+0x3a0>
    cbc6:	4c 8b 50 18          	mov    0x18(%rax),%r10
    cbca:	48 8b 58 30          	mov    0x30(%rax),%rbx
    cbce:	49 39 c2             	cmp    %rax,%r10
    cbd1:	0f 84 89 05 00 00    	je     d160 <dispose_chunk+0x5f0>
    cbd7:	48 8b 48 10          	mov    0x10(%rax),%rcx
    cbdb:	4c 39 c1             	cmp    %r8,%rcx
    cbde:	0f 82 fc 02 00 00    	jb     cee0 <dispose_chunk+0x370>
    cbe4:	48 39 41 18          	cmp    %rax,0x18(%rcx)
    cbe8:	0f 85 f2 02 00 00    	jne    cee0 <dispose_chunk+0x370>
    cbee:	49 39 42 10          	cmp    %rax,0x10(%r10)
    cbf2:	0f 85 e8 02 00 00    	jne    cee0 <dispose_chunk+0x370>
    cbf8:	4c 89 51 18          	mov    %r10,0x18(%rcx)
    cbfc:	49 89 4a 10          	mov    %rcx,0x10(%r10)
    cc00:	48 85 db             	test   %rbx,%rbx
    cc03:	74 7f                	je     cc84 <dispose_chunk+0x114>
    cc05:	44 8b 48 38          	mov    0x38(%rax),%r9d
    cc09:	4c 89 c9             	mov    %r9,%rcx
    cc0c:	4d 8d 59 4a          	lea    0x4a(%r9),%r11
    cc10:	4a 39 84 cf 58 02 00 	cmp    %rax,0x258(%rdi,%r9,8)
    cc17:	00 
    cc18:	0f 84 32 06 00 00    	je     d250 <dispose_chunk+0x6e0>
    cc1e:	4c 39 c3             	cmp    %r8,%rbx
    cc21:	0f 82 b9 02 00 00    	jb     cee0 <dispose_chunk+0x370>
    cc27:	48 39 43 20          	cmp    %rax,0x20(%rbx)
    cc2b:	0f 84 9c 06 00 00    	je     d2cd <dispose_chunk+0x75d>
    cc31:	4c 89 53 28          	mov    %r10,0x28(%rbx)
    cc35:	4d 85 d2             	test   %r10,%r10
    cc38:	74 4a                	je     cc84 <dispose_chunk+0x114>
    cc3a:	4d 39 c2             	cmp    %r8,%r10
    cc3d:	0f 82 9d 02 00 00    	jb     cee0 <dispose_chunk+0x370>
    cc43:	48 8b 48 20          	mov    0x20(%rax),%rcx
    cc47:	49 89 5a 30          	mov    %rbx,0x30(%r10)
    cc4b:	48 85 c9             	test   %rcx,%rcx
    cc4e:	74 11                	je     cc61 <dispose_chunk+0xf1>
    cc50:	4c 39 c1             	cmp    %r8,%rcx
    cc53:	0f 82 87 02 00 00    	jb     cee0 <dispose_chunk+0x370>
    cc59:	49 89 4a 20          	mov    %rcx,0x20(%r10)
    cc5d:	4c 89 51 30          	mov    %r10,0x30(%rcx)
    cc61:	48 8b 48 28          	mov    0x28(%rax),%rcx
    cc65:	48 85 c9             	test   %rcx,%rcx
    cc68:	74 1a                	je     cc84 <dispose_chunk+0x114>
    cc6a:	4c 39 c1             	cmp    %r8,%rcx
    cc6d:	0f 82 6d 02 00 00    	jb     cee0 <dispose_chunk+0x370>
    cc73:	49 89 4a 28          	mov    %rcx,0x28(%r10)
    cc77:	4c 89 51 30          	mov    %r10,0x30(%rcx)
    cc7b:	eb 07                	jmp    cc84 <dispose_chunk+0x114>
    cc7d:	0f 1f 00             	nopl   (%rax)
    cc80:	4c 8b 47 18          	mov    0x18(%rdi),%r8
    cc84:	4c 39 c6             	cmp    %r8,%rsi
    cc87:	0f 82 53 02 00 00    	jb     cee0 <dispose_chunk+0x370>
    cc8d:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    cc91:	f6 c1 02             	test   $0x2,%cl
    cc94:	74 6a                	je     cd00 <dispose_chunk+0x190>
    cc96:	48 83 e1 fe          	and    $0xfffffffffffffffe,%rcx
    cc9a:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
    cc9e:	48 89 d1             	mov    %rdx,%rcx
    cca1:	48 83 c9 01          	or     $0x1,%rcx
    cca5:	48 89 48 08          	mov    %rcx,0x8(%rax)
    cca9:	48 89 14 10          	mov    %rdx,(%rax,%rdx,1)
    ccad:	48 89 d1             	mov    %rdx,%rcx
    ccb0:	48 c1 e9 03          	shr    $0x3,%rcx
    ccb4:	48 81 fa ff 00 00 00 	cmp    $0xff,%rdx
    ccbb:	0f 87 57 01 00 00    	ja     ce18 <dispose_chunk+0x2a8>
    ccc1:	8d 54 09 09          	lea    0x9(%rcx,%rcx,1),%edx
    ccc5:	44 8b 0f             	mov    (%rdi),%r9d
    ccc8:	48 8d 34 d7          	lea    (%rdi,%rdx,8),%rsi
    cccc:	ba 01 00 00 00       	mov    $0x1,%edx
    ccd1:	d3 e2                	shl    %cl,%edx
    ccd3:	41 85 d1             	test   %edx,%r9d
    ccd6:	0f 84 24 02 00 00    	je     cf00 <dispose_chunk+0x390>
    ccdc:	48 8b 56 10          	mov    0x10(%rsi),%rdx
    cce0:	4c 39 c2             	cmp    %r8,%rdx
    cce3:	0f 82 f7 01 00 00    	jb     cee0 <dispose_chunk+0x370>
    cce9:	48 89 46 10          	mov    %rax,0x10(%rsi)
    cced:	48 89 42 18          	mov    %rax,0x18(%rdx)
    ccf1:	48 89 50 10          	mov    %rdx,0x10(%rax)
    ccf5:	48 89 70 18          	mov    %rsi,0x18(%rax)
    ccf9:	48 83 c4 08          	add    $0x8,%rsp
    ccfd:	5b                   	pop    %rbx
    ccfe:	5d                   	pop    %rbp
    ccff:	c3                   	ret    
    cd00:	48 8b 5f 20          	mov    0x20(%rdi),%rbx
    cd04:	48 39 77 28          	cmp    %rsi,0x28(%rdi)
    cd08:	0f 84 22 03 00 00    	je     d030 <dispose_chunk+0x4c0>
    cd0e:	48 39 f3             	cmp    %rsi,%rbx
    cd11:	0f 84 89 03 00 00    	je     d0a0 <dispose_chunk+0x530>
    cd17:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    cd1b:	49 89 cb             	mov    %rcx,%r11
    cd1e:	48 01 ca             	add    %rcx,%rdx
    cd21:	49 c1 eb 03          	shr    $0x3,%r11
    cd25:	48 81 f9 f8 00 00 00 	cmp    $0xf8,%rcx
    cd2c:	0f 86 7e 01 00 00    	jbe    ceb0 <dispose_chunk+0x340>
    cd32:	4c 8b 56 18          	mov    0x18(%rsi),%r10
    cd36:	48 8b 6e 30          	mov    0x30(%rsi),%rbp
    cd3a:	49 39 f2             	cmp    %rsi,%r10
    cd3d:	0f 84 7d 03 00 00    	je     d0c0 <dispose_chunk+0x550>
    cd43:	48 8b 4e 10          	mov    0x10(%rsi),%rcx
    cd47:	4c 39 c1             	cmp    %r8,%rcx
    cd4a:	0f 82 90 01 00 00    	jb     cee0 <dispose_chunk+0x370>
    cd50:	48 39 71 18          	cmp    %rsi,0x18(%rcx)
    cd54:	0f 85 86 01 00 00    	jne    cee0 <dispose_chunk+0x370>
    cd5a:	49 39 72 10          	cmp    %rsi,0x10(%r10)
    cd5e:	0f 85 7c 01 00 00    	jne    cee0 <dispose_chunk+0x370>
    cd64:	4c 89 51 18          	mov    %r10,0x18(%rcx)
    cd68:	49 89 4a 10          	mov    %rcx,0x10(%r10)
    cd6c:	48 85 ed             	test   %rbp,%rbp
    cd6f:	74 7f                	je     cdf0 <dispose_chunk+0x280>
    cd71:	44 8b 4e 38          	mov    0x38(%rsi),%r9d
    cd75:	4c 89 c9             	mov    %r9,%rcx
    cd78:	4d 8d 59 4a          	lea    0x4a(%r9),%r11
    cd7c:	4a 39 b4 cf 58 02 00 	cmp    %rsi,0x258(%rdi,%r9,8)
    cd83:	00 
    cd84:	0f 84 76 04 00 00    	je     d200 <dispose_chunk+0x690>
    cd8a:	4c 39 c5             	cmp    %r8,%rbp
    cd8d:	0f 82 4d 01 00 00    	jb     cee0 <dispose_chunk+0x370>
    cd93:	48 39 75 20          	cmp    %rsi,0x20(%rbp)
    cd97:	0f 84 27 05 00 00    	je     d2c4 <dispose_chunk+0x754>
    cd9d:	4c 89 55 28          	mov    %r10,0x28(%rbp)
    cda1:	4d 85 d2             	test   %r10,%r10
    cda4:	74 4a                	je     cdf0 <dispose_chunk+0x280>
    cda6:	4d 39 c2             	cmp    %r8,%r10
    cda9:	0f 82 31 01 00 00    	jb     cee0 <dispose_chunk+0x370>
    cdaf:	48 8b 4e 20          	mov    0x20(%rsi),%rcx
    cdb3:	49 89 6a 30          	mov    %rbp,0x30(%r10)
    cdb7:	48 85 c9             	test   %rcx,%rcx
    cdba:	74 11                	je     cdcd <dispose_chunk+0x25d>
    cdbc:	4c 39 c1             	cmp    %r8,%rcx
    cdbf:	0f 82 1b 01 00 00    	jb     cee0 <dispose_chunk+0x370>
    cdc5:	49 89 4a 20          	mov    %rcx,0x20(%r10)
    cdc9:	4c 89 51 30          	mov    %r10,0x30(%rcx)
    cdcd:	48 8b 4e 28          	mov    0x28(%rsi),%rcx
    cdd1:	48 85 c9             	test   %rcx,%rcx
    cdd4:	74 1a                	je     cdf0 <dispose_chunk+0x280>
    cdd6:	4c 39 c1             	cmp    %r8,%rcx
    cdd9:	0f 82 01 01 00 00    	jb     cee0 <dispose_chunk+0x370>
    cddf:	49 89 4a 28          	mov    %rcx,0x28(%r10)
    cde3:	4c 89 51 30          	mov    %r10,0x30(%rcx)
    cde7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    cdee:	00 00 
    cdf0:	48 89 d1             	mov    %rdx,%rcx
    cdf3:	48 83 c9 01          	or     $0x1,%rcx
    cdf7:	48 89 48 08          	mov    %rcx,0x8(%rax)
    cdfb:	48 89 14 10          	mov    %rdx,(%rax,%rdx,1)
    cdff:	48 39 d8             	cmp    %rbx,%rax
    ce02:	0f 85 a5 fe ff ff    	jne    ccad <dispose_chunk+0x13d>
    ce08:	48 89 57 08          	mov    %rdx,0x8(%rdi)
    ce0c:	e9 e8 fe ff ff       	jmp    ccf9 <dispose_chunk+0x189>
    ce11:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    ce18:	48 89 d6             	mov    %rdx,%rsi
    ce1b:	48 c1 ee 08          	shr    $0x8,%rsi
    ce1f:	89 f1                	mov    %esi,%ecx
    ce21:	85 f6                	test   %esi,%esi
    ce23:	0f 84 bf 00 00 00    	je     cee8 <dispose_chunk+0x378>
    ce29:	81 fe ff ff 00 00    	cmp    $0xffff,%esi
    ce2f:	0f 87 e3 01 00 00    	ja     d018 <dispose_chunk+0x4a8>
    ce35:	0f bd f1             	bsr    %ecx,%esi
    ce38:	b9 26 00 00 00       	mov    $0x26,%ecx
    ce3d:	48 89 d3             	mov    %rdx,%rbx
    ce40:	41 b9 1f 00 00 00    	mov    $0x1f,%r9d
    ce46:	83 f6 1f             	xor    $0x1f,%esi
    ce49:	29 f1                	sub    %esi,%ecx
    ce4b:	41 29 f1             	sub    %esi,%r9d
    ce4e:	be 01 00 00 00       	mov    $0x1,%esi
    ce53:	48 d3 eb             	shr    %cl,%rbx
    ce56:	48 89 d9             	mov    %rbx,%rcx
    ce59:	83 e1 01             	and    $0x1,%ecx
    ce5c:	42 8d 0c 49          	lea    (%rcx,%r9,2),%ecx
    ce60:	44 8d 49 4b          	lea    0x4b(%rcx),%r9d
    ce64:	d3 e6                	shl    %cl,%esi
    ce66:	49 c1 e1 03          	shl    $0x3,%r9
    ce6a:	44 8b 57 04          	mov    0x4(%rdi),%r10d
    ce6e:	66 48 0f 6e c8       	movq   %rax,%xmm1
    ce73:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ce77:	89 48 38             	mov    %ecx,0x38(%rax)
    ce7a:	66 0f 6c c9          	punpcklqdq %xmm1,%xmm1
    ce7e:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    ce82:	44 85 d6             	test   %r10d,%esi
    ce85:	0f 85 c5 00 00 00    	jne    cf50 <dispose_chunk+0x3e0>
    ce8b:	44 09 d6             	or     %r10d,%esi
    ce8e:	49 01 f9             	add    %rdi,%r9
    ce91:	89 77 04             	mov    %esi,0x4(%rdi)
    ce94:	48 89 84 cf 58 02 00 	mov    %rax,0x258(%rdi,%rcx,8)
    ce9b:	00 
    ce9c:	4c 89 48 30          	mov    %r9,0x30(%rax)
    cea0:	0f 11 48 10          	movups %xmm1,0x10(%rax)
    cea4:	48 83 c4 08          	add    $0x8,%rsp
    cea8:	5b                   	pop    %rbx
    cea9:	5d                   	pop    %rbp
    ceaa:	c3                   	ret    
    ceab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    ceb0:	43 8d 4c 1b 09       	lea    0x9(%r11,%r11,1),%ecx
    ceb5:	4c 8b 4e 10          	mov    0x10(%rsi),%r9
    ceb9:	4c 8b 56 18          	mov    0x18(%rsi),%r10
    cebd:	48 8d 0c cf          	lea    (%rdi,%rcx,8),%rcx
    cec1:	4c 39 c9             	cmp    %r9,%rcx
    cec4:	0f 85 53 03 00 00    	jne    d21d <dispose_chunk+0x6ad>
    ceca:	4d 39 d1             	cmp    %r10,%r9
    cecd:	0f 84 75 02 00 00    	je     d148 <dispose_chunk+0x5d8>
    ced3:	4d 39 c2             	cmp    %r8,%r10
    ced6:	0f 83 aa 01 00 00    	jae    d086 <dispose_chunk+0x516>
    cedc:	0f 1f 40 00          	nopl   0x0(%rax)
    cee0:	e8 52 5a 00 00       	call   12937 <abort>
    cee5:	0f 1f 00             	nopl   (%rax)
    cee8:	be 01 00 00 00       	mov    $0x1,%esi
    ceed:	41 b9 58 02 00 00    	mov    $0x258,%r9d
    cef3:	e9 72 ff ff ff       	jmp    ce6a <dispose_chunk+0x2fa>
    cef8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    ceff:	00 
    cf00:	41 09 d1             	or     %edx,%r9d
    cf03:	48 89 f2             	mov    %rsi,%rdx
    cf06:	44 89 0f             	mov    %r9d,(%rdi)
    cf09:	e9 db fd ff ff       	jmp    cce9 <dispose_chunk+0x179>
    cf0e:	66 90                	xchg   %ax,%ax
    cf10:	44 8d 5c 09 09       	lea    0x9(%rcx,%rcx,1),%r11d
    cf15:	4c 8b 48 10          	mov    0x10(%rax),%r9
    cf19:	4c 8b 50 18          	mov    0x18(%rax),%r10
    cf1d:	4e 8d 1c df          	lea    (%rdi,%r11,8),%r11
    cf21:	4d 39 cb             	cmp    %r9,%r11
    cf24:	0f 85 46 03 00 00    	jne    d270 <dispose_chunk+0x700>
    cf2a:	4d 39 d1             	cmp    %r10,%r9
    cf2d:	0f 84 b5 02 00 00    	je     d1e8 <dispose_chunk+0x678>
    cf33:	4d 39 c2             	cmp    %r8,%r10
    cf36:	72 a8                	jb     cee0 <dispose_chunk+0x370>
    cf38:	49 39 42 10          	cmp    %rax,0x10(%r10)
    cf3c:	75 a2                	jne    cee0 <dispose_chunk+0x370>
    cf3e:	4d 89 51 18          	mov    %r10,0x18(%r9)
    cf42:	4d 89 4a 10          	mov    %r9,0x10(%r10)
    cf46:	e9 39 fd ff ff       	jmp    cc84 <dispose_chunk+0x114>
    cf4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    cf50:	89 ce                	mov    %ecx,%esi
    cf52:	48 8b b4 f7 58 02 00 	mov    0x258(%rdi,%rsi,8),%rsi
    cf59:	00 
    cf5a:	48 89 d7             	mov    %rdx,%rdi
    cf5d:	83 f9 1f             	cmp    $0x1f,%ecx
    cf60:	74 34                	je     cf96 <dispose_chunk+0x426>
    cf62:	89 cf                	mov    %ecx,%edi
    cf64:	b9 39 00 00 00       	mov    $0x39,%ecx
    cf69:	d1 ef                	shr    %edi
    cf6b:	29 f9                	sub    %edi,%ecx
    cf6d:	48 89 d7             	mov    %rdx,%rdi
    cf70:	48 d3 e7             	shl    %cl,%rdi
    cf73:	eb 21                	jmp    cf96 <dispose_chunk+0x426>
    cf75:	0f 1f 00             	nopl   (%rax)
    cf78:	48 89 f9             	mov    %rdi,%rcx
    cf7b:	48 01 ff             	add    %rdi,%rdi
    cf7e:	48 c1 e9 3f          	shr    $0x3f,%rcx
    cf82:	48 83 c1 04          	add    $0x4,%rcx
    cf86:	4c 8b 0c ce          	mov    (%rsi,%rcx,8),%r9
    cf8a:	4d 85 c9             	test   %r9,%r9
    cf8d:	0f 84 d5 00 00 00    	je     d068 <dispose_chunk+0x4f8>
    cf93:	4c 89 ce             	mov    %r9,%rsi
    cf96:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    cf9a:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    cf9e:	48 39 d1             	cmp    %rdx,%rcx
    cfa1:	75 d5                	jne    cf78 <dispose_chunk+0x408>
    cfa3:	48 8b 56 10          	mov    0x10(%rsi),%rdx
    cfa7:	66 48 0f 6e d6       	movq   %rsi,%xmm2
    cfac:	66 48 0f 6e c2       	movq   %rdx,%xmm0
    cfb1:	66 0f 6c c2          	punpcklqdq %xmm2,%xmm0
    cfb5:	4c 39 c6             	cmp    %r8,%rsi
    cfb8:	0f 82 22 ff ff ff    	jb     cee0 <dispose_chunk+0x370>
    cfbe:	4c 39 c2             	cmp    %r8,%rdx
    cfc1:	0f 82 19 ff ff ff    	jb     cee0 <dispose_chunk+0x370>
    cfc7:	48 89 42 18          	mov    %rax,0x18(%rdx)
    cfcb:	48 89 46 10          	mov    %rax,0x10(%rsi)
    cfcf:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
    cfd6:	00 
    cfd7:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    cfdb:	e9 19 fd ff ff       	jmp    ccf9 <dispose_chunk+0x189>
    cfe0:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    cfe4:	49 89 c9             	mov    %rcx,%r9
    cfe7:	49 f7 d1             	not    %r9
    cfea:	41 83 e1 03          	and    $0x3,%r9d
    cfee:	0f 85 90 fc ff ff    	jne    cc84 <dispose_chunk+0x114>
    cff4:	48 83 e1 fe          	and    $0xfffffffffffffffe,%rcx
    cff8:	48 89 57 08          	mov    %rdx,0x8(%rdi)
    cffc:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
    d000:	48 89 d1             	mov    %rdx,%rcx
    d003:	48 83 c9 01          	or     $0x1,%rcx
    d007:	48 89 48 08          	mov    %rcx,0x8(%rax)
    d00b:	48 89 16             	mov    %rdx,(%rsi)
    d00e:	e9 e6 fc ff ff       	jmp    ccf9 <dispose_chunk+0x189>
    d013:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    d018:	be 00 00 00 80       	mov    $0x80000000,%esi
    d01d:	41 b9 50 03 00 00    	mov    $0x350,%r9d
    d023:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    d028:	e9 3d fe ff ff       	jmp    ce6a <dispose_chunk+0x2fa>
    d02d:	0f 1f 00             	nopl   (%rax)
    d030:	48 03 57 10          	add    0x10(%rdi),%rdx
    d034:	48 89 47 28          	mov    %rax,0x28(%rdi)
    d038:	48 89 57 10          	mov    %rdx,0x10(%rdi)
    d03c:	48 83 ca 01          	or     $0x1,%rdx
    d040:	48 89 50 08          	mov    %rdx,0x8(%rax)
    d044:	48 39 d8             	cmp    %rbx,%rax
    d047:	0f 85 ac fc ff ff    	jne    ccf9 <dispose_chunk+0x189>
    d04d:	48 c7 47 20 00 00 00 	movq   $0x0,0x20(%rdi)
    d054:	00 
    d055:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
    d05c:	00 
    d05d:	e9 97 fc ff ff       	jmp    ccf9 <dispose_chunk+0x189>
    d062:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    d068:	48 8d 14 ce          	lea    (%rsi,%rcx,8),%rdx
    d06c:	4c 39 c2             	cmp    %r8,%rdx
    d06f:	0f 82 6b fe ff ff    	jb     cee0 <dispose_chunk+0x370>
    d075:	48 89 04 ce          	mov    %rax,(%rsi,%rcx,8)
    d079:	48 89 70 30          	mov    %rsi,0x30(%rax)
    d07d:	0f 11 48 10          	movups %xmm1,0x10(%rax)
    d081:	e9 73 fc ff ff       	jmp    ccf9 <dispose_chunk+0x189>
    d086:	49 39 72 10          	cmp    %rsi,0x10(%r10)
    d08a:	0f 85 50 fe ff ff    	jne    cee0 <dispose_chunk+0x370>
    d090:	4d 89 51 18          	mov    %r10,0x18(%r9)
    d094:	4d 89 4a 10          	mov    %r9,0x10(%r10)
    d098:	e9 53 fd ff ff       	jmp    cdf0 <dispose_chunk+0x280>
    d09d:	0f 1f 00             	nopl   (%rax)
    d0a0:	48 03 57 08          	add    0x8(%rdi),%rdx
    d0a4:	48 89 47 20          	mov    %rax,0x20(%rdi)
    d0a8:	48 89 d1             	mov    %rdx,%rcx
    d0ab:	48 89 57 08          	mov    %rdx,0x8(%rdi)
    d0af:	48 83 c9 01          	or     $0x1,%rcx
    d0b3:	48 89 48 08          	mov    %rcx,0x8(%rax)
    d0b7:	48 89 14 10          	mov    %rdx,(%rax,%rdx,1)
    d0bb:	e9 39 fc ff ff       	jmp    ccf9 <dispose_chunk+0x189>
    d0c0:	48 8b 4e 28          	mov    0x28(%rsi),%rcx
    d0c4:	4c 8d 4e 28          	lea    0x28(%rsi),%r9
    d0c8:	48 85 c9             	test   %rcx,%rcx
    d0cb:	0f 84 cf 01 00 00    	je     d2a0 <dispose_chunk+0x730>
    d0d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    d0d8:	4d 89 cb             	mov    %r9,%r11
    d0db:	49 89 ca             	mov    %rcx,%r10
    d0de:	4c 8d 49 28          	lea    0x28(%rcx),%r9
    d0e2:	48 8b 49 28          	mov    0x28(%rcx),%rcx
    d0e6:	48 85 c9             	test   %rcx,%rcx
    d0e9:	75 ed                	jne    d0d8 <dispose_chunk+0x568>
    d0eb:	49 8b 4a 20          	mov    0x20(%r10),%rcx
    d0ef:	4d 8d 4a 20          	lea    0x20(%r10),%r9
    d0f3:	48 85 c9             	test   %rcx,%rcx
    d0f6:	75 e0                	jne    d0d8 <dispose_chunk+0x568>
    d0f8:	4d 39 c3             	cmp    %r8,%r11
    d0fb:	0f 82 df fd ff ff    	jb     cee0 <dispose_chunk+0x370>
    d101:	49 c7 03 00 00 00 00 	movq   $0x0,(%r11)
    d108:	48 85 ed             	test   %rbp,%rbp
    d10b:	0f 84 df fc ff ff    	je     cdf0 <dispose_chunk+0x280>
    d111:	8b 4e 38             	mov    0x38(%rsi),%ecx
    d114:	4c 8d 49 4a          	lea    0x4a(%rcx),%r9
    d118:	48 39 b4 cf 58 02 00 	cmp    %rsi,0x258(%rdi,%rcx,8)
    d11f:	00 
    d120:	0f 84 b0 01 00 00    	je     d2d6 <dispose_chunk+0x766>
    d126:	4c 39 c5             	cmp    %r8,%rbp
    d129:	0f 82 b1 fd ff ff    	jb     cee0 <dispose_chunk+0x370>
    d12f:	48 39 75 20          	cmp    %rsi,0x20(%rbp)
    d133:	0f 84 b1 01 00 00    	je     d2ea <dispose_chunk+0x77a>
    d139:	4c 89 55 28          	mov    %r10,0x28(%rbp)
    d13d:	e9 64 fc ff ff       	jmp    cda6 <dispose_chunk+0x236>
    d142:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    d148:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    d14d:	44 89 d9             	mov    %r11d,%ecx
    d150:	d3 c6                	rol    %cl,%esi
    d152:	21 37                	and    %esi,(%rdi)
    d154:	e9 97 fc ff ff       	jmp    cdf0 <dispose_chunk+0x280>
    d159:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    d160:	48 8b 48 28          	mov    0x28(%rax),%rcx
    d164:	4c 8d 48 28          	lea    0x28(%rax),%r9
    d168:	48 85 c9             	test   %rcx,%rcx
    d16b:	0f 84 41 01 00 00    	je     d2b2 <dispose_chunk+0x742>
    d171:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    d178:	4d 89 cb             	mov    %r9,%r11
    d17b:	49 89 ca             	mov    %rcx,%r10
    d17e:	4c 8d 49 28          	lea    0x28(%rcx),%r9
    d182:	48 8b 49 28          	mov    0x28(%rcx),%rcx
    d186:	48 85 c9             	test   %rcx,%rcx
    d189:	75 ed                	jne    d178 <dispose_chunk+0x608>
    d18b:	49 8b 4a 20          	mov    0x20(%r10),%rcx
    d18f:	4d 8d 4a 20          	lea    0x20(%r10),%r9
    d193:	48 85 c9             	test   %rcx,%rcx
    d196:	75 e0                	jne    d178 <dispose_chunk+0x608>
    d198:	4d 39 c3             	cmp    %r8,%r11
    d19b:	0f 82 3f fd ff ff    	jb     cee0 <dispose_chunk+0x370>
    d1a1:	49 c7 03 00 00 00 00 	movq   $0x0,(%r11)
    d1a8:	48 85 db             	test   %rbx,%rbx
    d1ab:	0f 84 d3 fa ff ff    	je     cc84 <dispose_chunk+0x114>
    d1b1:	8b 48 38             	mov    0x38(%rax),%ecx
    d1b4:	4c 8d 49 4a          	lea    0x4a(%rcx),%r9
    d1b8:	48 39 84 cf 58 02 00 	cmp    %rax,0x258(%rdi,%rcx,8)
    d1bf:	00 
    d1c0:	0f 84 1a 01 00 00    	je     d2e0 <dispose_chunk+0x770>
    d1c6:	4c 39 c3             	cmp    %r8,%rbx
    d1c9:	0f 82 11 fd ff ff    	jb     cee0 <dispose_chunk+0x370>
    d1cf:	48 39 43 20          	cmp    %rax,0x20(%rbx)
    d1d3:	0f 84 1a 01 00 00    	je     d2f3 <dispose_chunk+0x783>
    d1d9:	4c 89 53 28          	mov    %r10,0x28(%rbx)
    d1dd:	e9 58 fa ff ff       	jmp    cc3a <dispose_chunk+0xca>
    d1e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    d1e8:	41 b9 fe ff ff ff    	mov    $0xfffffffe,%r9d
    d1ee:	41 d3 c1             	rol    %cl,%r9d
    d1f1:	44 21 0f             	and    %r9d,(%rdi)
    d1f4:	e9 8b fa ff ff       	jmp    cc84 <dispose_chunk+0x114>
    d1f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    d200:	4e 89 54 df 08       	mov    %r10,0x8(%rdi,%r11,8)
    d205:	4d 85 d2             	test   %r10,%r10
    d208:	0f 85 98 fb ff ff    	jne    cda6 <dispose_chunk+0x236>
    d20e:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    d213:	d3 c6                	rol    %cl,%esi
    d215:	21 77 04             	and    %esi,0x4(%rdi)
    d218:	e9 d3 fb ff ff       	jmp    cdf0 <dispose_chunk+0x280>
    d21d:	4d 39 c1             	cmp    %r8,%r9
    d220:	0f 82 ba fc ff ff    	jb     cee0 <dispose_chunk+0x370>
    d226:	49 39 71 18          	cmp    %rsi,0x18(%r9)
    d22a:	0f 85 b0 fc ff ff    	jne    cee0 <dispose_chunk+0x370>
    d230:	4d 39 d1             	cmp    %r10,%r9
    d233:	0f 84 0f ff ff ff    	je     d148 <dispose_chunk+0x5d8>
    d239:	4c 39 d1             	cmp    %r10,%rcx
    d23c:	0f 84 4e fe ff ff    	je     d090 <dispose_chunk+0x520>
    d242:	e9 8c fc ff ff       	jmp    ced3 <dispose_chunk+0x363>
    d247:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    d24e:	00 00 
    d250:	4e 89 54 df 08       	mov    %r10,0x8(%rdi,%r11,8)
    d255:	4d 85 d2             	test   %r10,%r10
    d258:	0f 85 dc f9 ff ff    	jne    cc3a <dispose_chunk+0xca>
    d25e:	41 b9 fe ff ff ff    	mov    $0xfffffffe,%r9d
    d264:	41 d3 c1             	rol    %cl,%r9d
    d267:	44 21 4f 04          	and    %r9d,0x4(%rdi)
    d26b:	e9 14 fa ff ff       	jmp    cc84 <dispose_chunk+0x114>
    d270:	4d 39 c1             	cmp    %r8,%r9
    d273:	0f 82 67 fc ff ff    	jb     cee0 <dispose_chunk+0x370>
    d279:	49 39 41 18          	cmp    %rax,0x18(%r9)
    d27d:	0f 85 5d fc ff ff    	jne    cee0 <dispose_chunk+0x370>
    d283:	4d 39 d1             	cmp    %r10,%r9
    d286:	0f 84 5c ff ff ff    	je     d1e8 <dispose_chunk+0x678>
    d28c:	4d 39 d3             	cmp    %r10,%r11
    d28f:	0f 84 a9 fc ff ff    	je     cf3e <dispose_chunk+0x3ce>
    d295:	e9 99 fc ff ff       	jmp    cf33 <dispose_chunk+0x3c3>
    d29a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    d2a0:	48 8b 4e 20          	mov    0x20(%rsi),%rcx
    d2a4:	48 85 c9             	test   %rcx,%rcx
    d2a7:	74 53                	je     d2fc <dispose_chunk+0x78c>
    d2a9:	4c 8d 4e 20          	lea    0x20(%rsi),%r9
    d2ad:	e9 26 fe ff ff       	jmp    d0d8 <dispose_chunk+0x568>
    d2b2:	48 8b 48 20          	mov    0x20(%rax),%rcx
    d2b6:	48 85 c9             	test   %rcx,%rcx
    d2b9:	74 75                	je     d330 <dispose_chunk+0x7c0>
    d2bb:	4c 8d 48 20          	lea    0x20(%rax),%r9
    d2bf:	e9 b4 fe ff ff       	jmp    d178 <dispose_chunk+0x608>
    d2c4:	4c 89 55 20          	mov    %r10,0x20(%rbp)
    d2c8:	e9 d4 fa ff ff       	jmp    cda1 <dispose_chunk+0x231>
    d2cd:	4c 89 53 20          	mov    %r10,0x20(%rbx)
    d2d1:	e9 5f f9 ff ff       	jmp    cc35 <dispose_chunk+0xc5>
    d2d6:	4e 89 54 cf 08       	mov    %r10,0x8(%rdi,%r9,8)
    d2db:	e9 c6 fa ff ff       	jmp    cda6 <dispose_chunk+0x236>
    d2e0:	4e 89 54 cf 08       	mov    %r10,0x8(%rdi,%r9,8)
    d2e5:	e9 50 f9 ff ff       	jmp    cc3a <dispose_chunk+0xca>
    d2ea:	4c 89 55 20          	mov    %r10,0x20(%rbp)
    d2ee:	e9 b3 fa ff ff       	jmp    cda6 <dispose_chunk+0x236>
    d2f3:	4c 89 53 20          	mov    %r10,0x20(%rbx)
    d2f7:	e9 3e f9 ff ff       	jmp    cc3a <dispose_chunk+0xca>
    d2fc:	48 85 ed             	test   %rbp,%rbp
    d2ff:	0f 84 eb fa ff ff    	je     cdf0 <dispose_chunk+0x280>
    d305:	44 8b 4e 38          	mov    0x38(%rsi),%r9d
    d309:	4c 89 c9             	mov    %r9,%rcx
    d30c:	4a 39 b4 cf 58 02 00 	cmp    %rsi,0x258(%rdi,%r9,8)
    d313:	00 
    d314:	74 4f                	je     d365 <dispose_chunk+0x7f5>
    d316:	4c 39 c5             	cmp    %r8,%rbp
    d319:	0f 82 c1 fb ff ff    	jb     cee0 <dispose_chunk+0x370>
    d31f:	48 39 75 20          	cmp    %rsi,0x20(%rbp)
    d323:	74 60                	je     d385 <dispose_chunk+0x815>
    d325:	31 c9                	xor    %ecx,%ecx
    d327:	48 89 4d 28          	mov    %rcx,0x28(%rbp)
    d32b:	e9 c0 fa ff ff       	jmp    cdf0 <dispose_chunk+0x280>
    d330:	48 85 db             	test   %rbx,%rbx
    d333:	0f 84 4b f9 ff ff    	je     cc84 <dispose_chunk+0x114>
    d339:	44 8b 48 38          	mov    0x38(%rax),%r9d
    d33d:	4c 89 c9             	mov    %r9,%rcx
    d340:	4a 39 84 cf 58 02 00 	cmp    %rax,0x258(%rdi,%r9,8)
    d347:	00 
    d348:	74 2b                	je     d375 <dispose_chunk+0x805>
    d34a:	4c 39 c3             	cmp    %r8,%rbx
    d34d:	0f 82 8d fb ff ff    	jb     cee0 <dispose_chunk+0x370>
    d353:	48 39 43 20          	cmp    %rax,0x20(%rbx)
    d357:	74 37                	je     d390 <dispose_chunk+0x820>
    d359:	45 31 db             	xor    %r11d,%r11d
    d35c:	4c 89 5b 28          	mov    %r11,0x28(%rbx)
    d360:	e9 1f f9 ff ff       	jmp    cc84 <dispose_chunk+0x114>
    d365:	45 31 d2             	xor    %r10d,%r10d
    d368:	4e 89 94 cf 58 02 00 	mov    %r10,0x258(%rdi,%r9,8)
    d36f:	00 
    d370:	e9 99 fe ff ff       	jmp    d20e <dispose_chunk+0x69e>
    d375:	45 31 d2             	xor    %r10d,%r10d
    d378:	4e 89 94 cf 58 02 00 	mov    %r10,0x258(%rdi,%r9,8)
    d37f:	00 
    d380:	e9 d9 fe ff ff       	jmp    d25e <dispose_chunk+0x6ee>
    d385:	31 f6                	xor    %esi,%esi
    d387:	48 89 75 20          	mov    %rsi,0x20(%rbp)
    d38b:	e9 60 fa ff ff       	jmp    cdf0 <dispose_chunk+0x280>
    d390:	31 ed                	xor    %ebp,%ebp
    d392:	48 89 6b 20          	mov    %rbp,0x20(%rbx)
    d396:	e9 e9 f8 ff ff       	jmp    cc84 <dispose_chunk+0x114>
    d39b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000d3a0 <init_mparams.isra.0>:
    d3a0:	48 83 ec 18          	sub    $0x18,%rsp
    d3a4:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    d3ab:	00 00 
    d3ad:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    d3b2:	b8 01 00 00 00       	mov    $0x1,%eax
    d3b7:	87 05 f3 db 01 00    	xchg   %eax,0x1dbf3(%rip)        # 2afb0 <malloc_global_mutex>
    d3bd:	85 c0                	test   %eax,%eax
    d3bf:	0f 85 8b 00 00 00    	jne    d450 <init_mparams.isra.0+0xb0>
    d3c5:	48 83 3d b3 db 01 00 	cmpq   $0x0,0x1dbb3(%rip)        # 2af80 <mparams>
    d3cc:	00 
    d3cd:	75 5d                	jne    d42c <init_mparams.isra.0+0x8c>
    d3cf:	66 0f 6f 05 a9 5e 00 	movdqa 0x5ea9(%rip),%xmm0        # 13280 <g_dyn_entry_table+0x80>
    d3d6:	00 
    d3d7:	48 89 e7             	mov    %rsp,%rdi
    d3da:	be 08 00 00 00       	mov    $0x8,%esi
    d3df:	c7 05 bf db 01 00 02 	movl   $0x2,0x1dbbf(%rip)        # 2afa8 <mparams+0x28>
    d3e6:	00 00 00 
    d3e9:	48 c7 05 3c db 01 00 	movq   $0x2,0x1db3c(%rip)        # 2af30 <_gm_+0x370>
    d3f0:	02 00 00 00 
    d3f4:	0f 11 05 8d db 01 00 	movups %xmm0,0x1db8d(%rip)        # 2af88 <mparams+0x8>
    d3fb:	66 0f 6f 05 8d 5e 00 	movdqa 0x5e8d(%rip),%xmm0        # 13290 <g_dyn_entry_table+0x90>
    d402:	00 
    d403:	0f 11 05 8e db 01 00 	movups %xmm0,0x1db8e(%rip)        # 2af98 <mparams+0x18>
    d40a:	e8 b1 8c ff ff       	call   60c0 <sgx_read_rand>
    d40f:	85 c0                	test   %eax,%eax
    d411:	75 69                	jne    d47c <init_mparams.isra.0+0xdc>
    d413:	48 8b 04 24          	mov    (%rsp),%rax
    d417:	48 35 55 55 55 55    	xor    $0x55555555,%rax
    d41d:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    d421:	48 83 c8 08          	or     $0x8,%rax
    d425:	48 89 05 54 db 01 00 	mov    %rax,0x1db54(%rip)        # 2af80 <mparams>
    d42c:	c7 05 7a db 01 00 00 	movl   $0x0,0x1db7a(%rip)        # 2afb0 <malloc_global_mutex>
    d433:	00 00 00 
    d436:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    d43b:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    d442:	00 00 
    d444:	75 31                	jne    d477 <init_mparams.isra.0+0xd7>
    d446:	48 83 c4 18          	add    $0x18,%rsp
    d44a:	c3                   	ret    
    d44b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    d450:	48 8d 15 59 db 01 00 	lea    0x1db59(%rip),%rdx        # 2afb0 <malloc_global_mutex>
    d457:	b9 01 00 00 00       	mov    $0x1,%ecx
    d45c:	0f 1f 40 00          	nopl   0x0(%rax)
    d460:	8b 02                	mov    (%rdx),%eax
    d462:	85 c0                	test   %eax,%eax
    d464:	75 fa                	jne    d460 <init_mparams.isra.0+0xc0>
    d466:	89 c8                	mov    %ecx,%eax
    d468:	87 05 42 db 01 00    	xchg   %eax,0x1db42(%rip)        # 2afb0 <malloc_global_mutex>
    d46e:	85 c0                	test   %eax,%eax
    d470:	75 ee                	jne    d460 <init_mparams.isra.0+0xc0>
    d472:	e9 4e ff ff ff       	jmp    d3c5 <init_mparams.isra.0+0x25>
    d477:	e8 84 39 00 00       	call   10e00 <__stack_chk_fail>
    d47c:	e8 b6 54 00 00       	call   12937 <abort>
    d481:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    d488:	00 00 00 
    d48b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000d490 <dlmalloc>:
    d490:	f3 0f 1e fa          	endbr64 
    d494:	41 57                	push   %r15
    d496:	41 56                	push   %r14
    d498:	41 55                	push   %r13
    d49a:	41 54                	push   %r12
    d49c:	55                   	push   %rbp
    d49d:	48 89 fd             	mov    %rdi,%rbp
    d4a0:	53                   	push   %rbx
    d4a1:	48 83 ec 18          	sub    $0x18,%rsp
    d4a5:	48 83 3d d3 da 01 00 	cmpq   $0x0,0x1dad3(%rip)        # 2af80 <mparams>
    d4ac:	00 
    d4ad:	0f 84 55 01 00 00    	je     d608 <dlmalloc+0x178>
    d4b3:	f6 05 76 da 01 00 02 	testb  $0x2,0x1da76(%rip)        # 2af30 <_gm_+0x370>
    d4ba:	0f 85 5a 01 00 00    	jne    d61a <dlmalloc+0x18a>
    d4c0:	48 81 fd e0 00 00 00 	cmp    $0xe0,%rbp
    d4c7:	0f 87 fb 00 00 00    	ja     d5c8 <dlmalloc+0x138>
    d4cd:	48 83 fd 0e          	cmp    $0xe,%rbp
    d4d1:	0f 87 d9 00 00 00    	ja     d5b0 <dlmalloc+0x120>
    d4d7:	b9 04 00 00 00       	mov    $0x4,%ecx
    d4dc:	41 bc 20 00 00 00    	mov    $0x20,%r12d
    d4e2:	8b 15 d8 d6 01 00    	mov    0x1d6d8(%rip),%edx        # 2abc0 <_gm_>
    d4e8:	4c 8d 2d d1 d6 01 00 	lea    0x1d6d1(%rip),%r13        # 2abc0 <_gm_>
    d4ef:	89 d0                	mov    %edx,%eax
    d4f1:	d3 e8                	shr    %cl,%eax
    d4f3:	a8 03                	test   $0x3,%al
    d4f5:	0f 84 d5 01 00 00    	je     d6d0 <dlmalloc+0x240>
    d4fb:	f7 d0                	not    %eax
    d4fd:	83 e0 01             	and    $0x1,%eax
    d500:	01 c1                	add    %eax,%ecx
    d502:	8d 44 09 09          	lea    0x9(%rcx,%rcx,1),%eax
    d506:	49 8d 74 c5 00       	lea    0x0(%r13,%rax,8),%rsi
    d50b:	48 8b 5e 10          	mov    0x10(%rsi),%rbx
    d50f:	48 8b 43 10          	mov    0x10(%rbx),%rax
    d513:	48 39 c6             	cmp    %rax,%rsi
    d516:	0f 84 a4 07 00 00    	je     dcc0 <dlmalloc+0x830>
    d51c:	48 3b 05 b5 d6 01 00 	cmp    0x1d6b5(%rip),%rax        # 2abd8 <_gm_+0x18>
    d523:	0f 82 c7 05 00 00    	jb     daf0 <dlmalloc+0x660>
    d529:	48 39 58 18          	cmp    %rbx,0x18(%rax)
    d52d:	0f 85 bd 05 00 00    	jne    daf0 <dlmalloc+0x660>
    d533:	48 89 70 18          	mov    %rsi,0x18(%rax)
    d537:	48 89 46 10          	mov    %rax,0x10(%rsi)
    d53b:	c1 e1 03             	shl    $0x3,%ecx
    d53e:	89 c8                	mov    %ecx,%eax
    d540:	83 c8 03             	or     $0x3,%eax
    d543:	48 89 43 08          	mov    %rax,0x8(%rbx)
    d547:	48 8d 04 0b          	lea    (%rbx,%rcx,1),%rax
    d54b:	48 83 c3 10          	add    $0x10,%rbx
    d54f:	48 83 48 08 01       	orq    $0x1,0x8(%rax)
    d554:	4c 33 2d 25 da 01 00 	xor    0x1da25(%rip),%r13        # 2af80 <mparams>
    d55b:	4c 89 28             	mov    %r13,(%rax)
    d55e:	48 85 db             	test   %rbx,%rbx
    d561:	0f 84 96 00 00 00    	je     d5fd <dlmalloc+0x16d>
    d567:	e8 74 a1 ff ff       	call   76e0 <get_heap_base>
    d56c:	48 39 c3             	cmp    %rax,%rbx
    d56f:	0f 82 7b 05 00 00    	jb     daf0 <dlmalloc+0x660>
    d575:	48 01 dd             	add    %rbx,%rbp
    d578:	0f 82 72 05 00 00    	jb     daf0 <dlmalloc+0x660>
    d57e:	31 ff                	xor    %edi,%edi
    d580:	e8 2b f4 ff ff       	call   c9b0 <sbrk>
    d585:	48 39 e8             	cmp    %rbp,%rax
    d588:	0f 82 62 05 00 00    	jb     daf0 <dlmalloc+0x660>
    d58e:	f6 05 9b d9 01 00 02 	testb  $0x2,0x1d99b(%rip)        # 2af30 <_gm_+0x370>
    d595:	0f 85 35 05 00 00    	jne    dad0 <dlmalloc+0x640>
    d59b:	48 83 c4 18          	add    $0x18,%rsp
    d59f:	48 89 d8             	mov    %rbx,%rax
    d5a2:	5b                   	pop    %rbx
    d5a3:	5d                   	pop    %rbp
    d5a4:	41 5c                	pop    %r12
    d5a6:	41 5d                	pop    %r13
    d5a8:	41 5e                	pop    %r14
    d5aa:	41 5f                	pop    %r15
    d5ac:	c3                   	ret    
    d5ad:	0f 1f 00             	nopl   (%rax)
    d5b0:	4c 8d 65 1f          	lea    0x1f(%rbp),%r12
    d5b4:	49 83 e4 f0          	and    $0xfffffffffffffff0,%r12
    d5b8:	4c 89 e1             	mov    %r12,%rcx
    d5bb:	48 c1 e9 03          	shr    $0x3,%rcx
    d5bf:	e9 1e ff ff ff       	jmp    d4e2 <dlmalloc+0x52>
    d5c4:	0f 1f 40 00          	nopl   0x0(%rax)
    d5c8:	4c 8b 05 f9 d5 01 00 	mov    0x1d5f9(%rip),%r8        # 2abc8 <_gm_+0x8>
    d5cf:	4c 8d 2d ea d5 01 00 	lea    0x1d5ea(%rip),%r13        # 2abc0 <_gm_>
    d5d6:	4c 89 c6             	mov    %r8,%rsi
    d5d9:	48 81 fd 7f ff ff ff 	cmp    $0xffffffffffffff7f,%rbp
    d5e0:	76 76                	jbe    d658 <dlmalloc+0x1c8>
    d5e2:	48 8b 05 97 d9 01 00 	mov    0x1d997(%rip),%rax        # 2af80 <mparams>
    d5e9:	49 83 f8 ff          	cmp    $0xffffffffffffffff,%r8
    d5ed:	0f 84 5d 02 00 00    	je     d850 <dlmalloc+0x3c0>
    d5f3:	48 85 c0             	test   %rax,%rax
    d5f6:	75 05                	jne    d5fd <dlmalloc+0x16d>
    d5f8:	e8 a3 fd ff ff       	call   d3a0 <init_mparams.isra.0>
    d5fd:	31 db                	xor    %ebx,%ebx
    d5ff:	eb 8d                	jmp    d58e <dlmalloc+0xfe>
    d601:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    d608:	e8 93 fd ff ff       	call   d3a0 <init_mparams.isra.0>
    d60d:	f6 05 1c d9 01 00 02 	testb  $0x2,0x1d91c(%rip)        # 2af30 <_gm_+0x370>
    d614:	0f 84 a6 fe ff ff    	je     d4c0 <dlmalloc+0x30>
    d61a:	b8 01 00 00 00       	mov    $0x1,%eax
    d61f:	87 05 0f d9 01 00    	xchg   %eax,0x1d90f(%rip)        # 2af34 <_gm_+0x374>
    d625:	85 c0                	test   %eax,%eax
    d627:	0f 84 93 fe ff ff    	je     d4c0 <dlmalloc+0x30>
    d62d:	ba 01 00 00 00       	mov    $0x1,%edx
    d632:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    d638:	8b 05 f6 d8 01 00    	mov    0x1d8f6(%rip),%eax        # 2af34 <_gm_+0x374>
    d63e:	85 c0                	test   %eax,%eax
    d640:	75 f6                	jne    d638 <dlmalloc+0x1a8>
    d642:	89 d0                	mov    %edx,%eax
    d644:	87 05 ea d8 01 00    	xchg   %eax,0x1d8ea(%rip)        # 2af34 <_gm_+0x374>
    d64a:	85 c0                	test   %eax,%eax
    d64c:	75 ea                	jne    d638 <dlmalloc+0x1a8>
    d64e:	e9 6d fe ff ff       	jmp    d4c0 <dlmalloc+0x30>
    d653:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    d658:	44 8b 0d 65 d5 01 00 	mov    0x1d565(%rip),%r9d        # 2abc4 <_gm_+0x4>
    d65f:	4c 8d 65 1f          	lea    0x1f(%rbp),%r12
    d663:	49 83 e4 f0          	and    $0xfffffffffffffff0,%r12
    d667:	45 85 c9             	test   %r9d,%r9d
    d66a:	0f 85 20 02 00 00    	jne    d890 <dlmalloc+0x400>
    d670:	4c 39 e6             	cmp    %r12,%rsi
    d673:	0f 83 7f 01 00 00    	jae    d7f8 <dlmalloc+0x368>
    d679:	48 8b 05 50 d5 01 00 	mov    0x1d550(%rip),%rax        # 2abd0 <_gm_+0x10>
    d680:	48 8b 15 f9 d8 01 00 	mov    0x1d8f9(%rip),%rdx        # 2af80 <mparams>
    d687:	49 39 c4             	cmp    %rax,%r12
    d68a:	0f 83 b0 06 00 00    	jae    dd40 <dlmalloc+0x8b0>
    d690:	48 8b 1d 51 d5 01 00 	mov    0x1d551(%rip),%rbx        # 2abe8 <_gm_+0x28>
    d697:	4c 29 e0             	sub    %r12,%rax
    d69a:	4c 31 ea             	xor    %r13,%rdx
    d69d:	48 89 05 2c d5 01 00 	mov    %rax,0x1d52c(%rip)        # 2abd0 <_gm_+0x10>
    d6a4:	48 83 c8 01          	or     $0x1,%rax
    d6a8:	4a 8d 0c 23          	lea    (%rbx,%r12,1),%rcx
    d6ac:	49 83 cc 03          	or     $0x3,%r12
    d6b0:	48 89 0d 31 d5 01 00 	mov    %rcx,0x1d531(%rip)        # 2abe8 <_gm_+0x28>
    d6b7:	48 89 41 08          	mov    %rax,0x8(%rcx)
    d6bb:	4c 89 63 08          	mov    %r12,0x8(%rbx)
    d6bf:	48 89 11             	mov    %rdx,(%rcx)
    d6c2:	48 83 c3 10          	add    $0x10,%rbx
    d6c6:	e9 93 fe ff ff       	jmp    d55e <dlmalloc+0xce>
    d6cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    d6d0:	48 8b 35 f1 d4 01 00 	mov    0x1d4f1(%rip),%rsi        # 2abc8 <_gm_+0x8>
    d6d7:	4c 39 e6             	cmp    %r12,%rsi
    d6da:	0f 83 18 01 00 00    	jae    d7f8 <dlmalloc+0x368>
    d6e0:	85 c0                	test   %eax,%eax
    d6e2:	0f 84 10 04 00 00    	je     daf8 <dlmalloc+0x668>
    d6e8:	bf 01 00 00 00       	mov    $0x1,%edi
    d6ed:	d3 e0                	shl    %cl,%eax
    d6ef:	41 89 f9             	mov    %edi,%r9d
    d6f2:	41 d3 e1             	shl    %cl,%r9d
    d6f5:	45 01 c9             	add    %r9d,%r9d
    d6f8:	45 89 c8             	mov    %r9d,%r8d
    d6fb:	41 f7 d8             	neg    %r8d
    d6fe:	45 09 c8             	or     %r9d,%r8d
    d701:	44 21 c0             	and    %r8d,%eax
    d704:	89 c1                	mov    %eax,%ecx
    d706:	f7 d9                	neg    %ecx
    d708:	21 c1                	and    %eax,%ecx
    d70a:	f3 0f bc c9          	tzcnt  %ecx,%ecx
    d70e:	8d 44 09 09          	lea    0x9(%rcx,%rcx,1),%eax
    d712:	4d 8d 44 c5 00       	lea    0x0(%r13,%rax,8),%r8
    d717:	49 8b 58 10          	mov    0x10(%r8),%rbx
    d71b:	48 8b 43 10          	mov    0x10(%rbx),%rax
    d71f:	49 39 c0             	cmp    %rax,%r8
    d722:	0f 84 d1 05 00 00    	je     dcf9 <dlmalloc+0x869>
    d728:	48 3b 05 a9 d4 01 00 	cmp    0x1d4a9(%rip),%rax        # 2abd8 <_gm_+0x18>
    d72f:	0f 82 bb 03 00 00    	jb     daf0 <dlmalloc+0x660>
    d735:	48 39 58 18          	cmp    %rbx,0x18(%rax)
    d739:	0f 85 b1 03 00 00    	jne    daf0 <dlmalloc+0x660>
    d73f:	4c 89 40 18          	mov    %r8,0x18(%rax)
    d743:	49 89 40 10          	mov    %rax,0x10(%r8)
    d747:	8d 04 cd 00 00 00 00 	lea    0x0(,%rcx,8),%eax
    d74e:	48 8b 3d 2b d8 01 00 	mov    0x1d82b(%rip),%rdi        # 2af80 <mparams>
    d755:	48 89 c2             	mov    %rax,%rdx
    d758:	48 89 c1             	mov    %rax,%rcx
    d75b:	48 01 d8             	add    %rbx,%rax
    d75e:	4c 29 e2             	sub    %r12,%rdx
    d761:	4c 31 ef             	xor    %r13,%rdi
    d764:	48 83 fa 1f          	cmp    $0x1f,%rdx
    d768:	0f 86 8d 0d 00 00    	jbe    e4fb <dlmalloc+0x106b>
    d76e:	4c 89 e1             	mov    %r12,%rcx
    d771:	49 01 dc             	add    %rbx,%r12
    d774:	48 83 c9 03          	or     $0x3,%rcx
    d778:	48 89 4b 08          	mov    %rcx,0x8(%rbx)
    d77c:	48 89 d1             	mov    %rdx,%rcx
    d77f:	48 83 c9 01          	or     $0x1,%rcx
    d783:	49 89 3c 24          	mov    %rdi,(%r12)
    d787:	49 89 4c 24 08       	mov    %rcx,0x8(%r12)
    d78c:	48 89 10             	mov    %rdx,(%rax)
    d78f:	48 85 f6             	test   %rsi,%rsi
    d792:	74 4d                	je     d7e1 <dlmalloc+0x351>
    d794:	48 c1 ee 03          	shr    $0x3,%rsi
    d798:	bf 01 00 00 00       	mov    $0x1,%edi
    d79d:	48 8b 05 3c d4 01 00 	mov    0x1d43c(%rip),%rax        # 2abe0 <_gm_+0x20>
    d7a4:	48 89 f1             	mov    %rsi,%rcx
    d7a7:	8d 74 36 09          	lea    0x9(%rsi,%rsi,1),%esi
    d7ab:	4d 8d 44 f5 00       	lea    0x0(%r13,%rsi,8),%r8
    d7b0:	8b 35 0a d4 01 00    	mov    0x1d40a(%rip),%esi        # 2abc0 <_gm_>
    d7b6:	d3 e7                	shl    %cl,%edi
    d7b8:	85 fe                	test   %edi,%esi
    d7ba:	0f 84 a9 10 00 00    	je     e869 <dlmalloc+0x13d9>
    d7c0:	49 8b 48 10          	mov    0x10(%r8),%rcx
    d7c4:	48 3b 0d 0d d4 01 00 	cmp    0x1d40d(%rip),%rcx        # 2abd8 <_gm_+0x18>
    d7cb:	0f 82 1f 03 00 00    	jb     daf0 <dlmalloc+0x660>
    d7d1:	49 89 40 10          	mov    %rax,0x10(%r8)
    d7d5:	48 89 41 18          	mov    %rax,0x18(%rcx)
    d7d9:	48 89 48 10          	mov    %rcx,0x10(%rax)
    d7dd:	4c 89 40 18          	mov    %r8,0x18(%rax)
    d7e1:	48 89 15 e0 d3 01 00 	mov    %rdx,0x1d3e0(%rip)        # 2abc8 <_gm_+0x8>
    d7e8:	4c 89 25 f1 d3 01 00 	mov    %r12,0x1d3f1(%rip)        # 2abe0 <_gm_+0x20>
    d7ef:	e9 ce fe ff ff       	jmp    d6c2 <dlmalloc+0x232>
    d7f4:	0f 1f 40 00          	nopl   0x0(%rax)
    d7f8:	48 8b 1d e1 d3 01 00 	mov    0x1d3e1(%rip),%rbx        # 2abe0 <_gm_+0x20>
    d7ff:	48 8b 3d 7a d7 01 00 	mov    0x1d77a(%rip),%rdi        # 2af80 <mparams>
    d806:	48 89 f2             	mov    %rsi,%rdx
    d809:	4c 29 e2             	sub    %r12,%rdx
    d80c:	48 8d 04 33          	lea    (%rbx,%rsi,1),%rax
    d810:	4c 31 ef             	xor    %r13,%rdi
    d813:	48 83 fa 1f          	cmp    $0x1f,%rdx
    d817:	0f 86 83 0a 00 00    	jbe    e2a0 <dlmalloc+0xe10>
    d81d:	48 89 d6             	mov    %rdx,%rsi
    d820:	4a 8d 0c 23          	lea    (%rbx,%r12,1),%rcx
    d824:	49 83 cc 03          	or     $0x3,%r12
    d828:	48 89 15 99 d3 01 00 	mov    %rdx,0x1d399(%rip)        # 2abc8 <_gm_+0x8>
    d82f:	48 83 ce 01          	or     $0x1,%rsi
    d833:	48 89 0d a6 d3 01 00 	mov    %rcx,0x1d3a6(%rip)        # 2abe0 <_gm_+0x20>
    d83a:	48 89 71 08          	mov    %rsi,0x8(%rcx)
    d83e:	48 89 10             	mov    %rdx,(%rax)
    d841:	4c 89 63 08          	mov    %r12,0x8(%rbx)
    d845:	48 89 39             	mov    %rdi,(%rcx)
    d848:	e9 75 fe ff ff       	jmp    d6c2 <dlmalloc+0x232>
    d84d:	0f 1f 00             	nopl   (%rax)
    d850:	48 8b 1d 89 d3 01 00 	mov    0x1d389(%rip),%rbx        # 2abe0 <_gm_+0x20>
    d857:	48 c7 c6 ff ff ff ff 	mov    $0xffffffffffffffff,%rsi
    d85e:	48 8d 43 ff          	lea    -0x1(%rbx),%rax
    d862:	48 c7 05 5b d3 01 00 	movq   $0x0,0x1d35b(%rip)        # 2abc8 <_gm_+0x8>
    d869:	00 00 00 00 
    d86d:	48 c7 05 68 d3 01 00 	movq   $0x0,0x1d368(%rip)        # 2abe0 <_gm_+0x20>
    d874:	00 00 00 00 
    d878:	48 89 73 08          	mov    %rsi,0x8(%rbx)
    d87c:	48 83 48 08 01       	orq    $0x1,0x8(%rax)
    d881:	4c 33 2d f8 d6 01 00 	xor    0x1d6f8(%rip),%r13        # 2af80 <mparams>
    d888:	4c 89 28             	mov    %r13,(%rax)
    d88b:	e9 32 fe ff ff       	jmp    d6c2 <dlmalloc+0x232>
    d890:	4c 89 e0             	mov    %r12,%rax
    d893:	4c 89 e7             	mov    %r12,%rdi
    d896:	48 c1 e8 08          	shr    $0x8,%rax
    d89a:	48 f7 df             	neg    %rdi
    d89d:	41 89 c2             	mov    %eax,%r10d
    d8a0:	85 c0                	test   %eax,%eax
    d8a2:	0f 85 28 04 00 00    	jne    dcd0 <dlmalloc+0x840>
    d8a8:	48 8b 15 69 d5 01 00 	mov    0x1d569(%rip),%rdx        # 2ae18 <_gm_+0x258>
    d8af:	b9 39 00 00 00       	mov    $0x39,%ecx
    d8b4:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    d8b9:	48 85 d2             	test   %rdx,%rdx
    d8bc:	0f 84 52 04 00 00    	je     dd14 <dlmalloc+0x884>
    d8c2:	4d 89 e3             	mov    %r12,%r11
    d8c5:	49 d3 e3             	shl    %cl,%r11
    d8c8:	31 c9                	xor    %ecx,%ecx
    d8ca:	31 db                	xor    %ebx,%ebx
    d8cc:	eb 05                	jmp    d8d3 <dlmalloc+0x443>
    d8ce:	66 90                	xchg   %ax,%ax
    d8d0:	4d 01 db             	add    %r11,%r11
    d8d3:	48 8b 42 08          	mov    0x8(%rdx),%rax
    d8d7:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    d8db:	4c 29 e0             	sub    %r12,%rax
    d8de:	48 39 f8             	cmp    %rdi,%rax
    d8e1:	73 0f                	jae    d8f2 <dlmalloc+0x462>
    d8e3:	48 85 c0             	test   %rax,%rax
    d8e6:	0f 84 c3 0b 00 00    	je     e4af <dlmalloc+0x101f>
    d8ec:	48 89 c7             	mov    %rax,%rdi
    d8ef:	48 89 d3             	mov    %rdx,%rbx
    d8f2:	48 8b 42 28          	mov    0x28(%rdx),%rax
    d8f6:	4d 89 de             	mov    %r11,%r14
    d8f9:	49 c1 ee 3f          	shr    $0x3f,%r14
    d8fd:	4a 8b 54 f2 20       	mov    0x20(%rdx,%r14,8),%rdx
    d902:	48 85 c0             	test   %rax,%rax
    d905:	74 07                	je     d90e <dlmalloc+0x47e>
    d907:	48 39 d0             	cmp    %rdx,%rax
    d90a:	48 0f 45 c8          	cmovne %rax,%rcx
    d90e:	48 85 d2             	test   %rdx,%rdx
    d911:	75 bd                	jne    d8d0 <dlmalloc+0x440>
    d913:	48 89 c8             	mov    %rcx,%rax
    d916:	48 09 d8             	or     %rbx,%rax
    d919:	0f 84 eb 03 00 00    	je     dd0a <dlmalloc+0x87a>
    d91f:	48 85 c9             	test   %rcx,%rcx
    d922:	75 0f                	jne    d933 <dlmalloc+0x4a3>
    d924:	eb 35                	jmp    d95b <dlmalloc+0x4cb>
    d926:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    d92d:	00 00 00 
    d930:	48 89 c1             	mov    %rax,%rcx
    d933:	48 8b 41 08          	mov    0x8(%rcx),%rax
    d937:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    d93b:	4c 29 e0             	sub    %r12,%rax
    d93e:	48 39 f8             	cmp    %rdi,%rax
    d941:	73 06                	jae    d949 <dlmalloc+0x4b9>
    d943:	48 89 c7             	mov    %rax,%rdi
    d946:	48 89 cb             	mov    %rcx,%rbx
    d949:	48 8b 41 20          	mov    0x20(%rcx),%rax
    d94d:	48 85 c0             	test   %rax,%rax
    d950:	75 de                	jne    d930 <dlmalloc+0x4a0>
    d952:	48 8b 41 28          	mov    0x28(%rcx),%rax
    d956:	48 85 c0             	test   %rax,%rax
    d959:	75 d5                	jne    d930 <dlmalloc+0x4a0>
    d95b:	48 85 db             	test   %rbx,%rbx
    d95e:	0f 84 0c fd ff ff    	je     d670 <dlmalloc+0x1e0>
    d964:	4c 89 c0             	mov    %r8,%rax
    d967:	4c 29 e0             	sub    %r12,%rax
    d96a:	48 39 c7             	cmp    %rax,%rdi
    d96d:	0f 83 fd fc ff ff    	jae    d670 <dlmalloc+0x1e0>
    d973:	4c 8b 1d 5e d2 01 00 	mov    0x1d25e(%rip),%r11        # 2abd8 <_gm_+0x18>
    d97a:	4c 39 db             	cmp    %r11,%rbx
    d97d:	0f 82 6d 01 00 00    	jb     daf0 <dlmalloc+0x660>
    d983:	4e 8d 14 23          	lea    (%rbx,%r12,1),%r10
    d987:	4c 39 d3             	cmp    %r10,%rbx
    d98a:	0f 83 60 01 00 00    	jae    daf0 <dlmalloc+0x660>
    d990:	4c 8b 73 18          	mov    0x18(%rbx),%r14
    d994:	4c 8b 7b 30          	mov    0x30(%rbx),%r15
    d998:	4c 39 f3             	cmp    %r14,%rbx
    d99b:	0f 84 2d 0d 00 00    	je     e6ce <dlmalloc+0x123e>
    d9a1:	48 8b 43 10          	mov    0x10(%rbx),%rax
    d9a5:	4c 39 d8             	cmp    %r11,%rax
    d9a8:	0f 82 42 01 00 00    	jb     daf0 <dlmalloc+0x660>
    d9ae:	48 3b 58 18          	cmp    0x18(%rax),%rbx
    d9b2:	0f 85 38 01 00 00    	jne    daf0 <dlmalloc+0x660>
    d9b8:	49 3b 5e 10          	cmp    0x10(%r14),%rbx
    d9bc:	0f 85 2e 01 00 00    	jne    daf0 <dlmalloc+0x660>
    d9c2:	4c 89 70 18          	mov    %r14,0x18(%rax)
    d9c6:	49 89 46 10          	mov    %rax,0x10(%r14)
    d9ca:	4d 85 ff             	test   %r15,%r15
    d9cd:	74 71                	je     da40 <dlmalloc+0x5b0>
    d9cf:	8b 53 38             	mov    0x38(%rbx),%edx
    d9d2:	48 89 d0             	mov    %rdx,%rax
    d9d5:	49 3b 9c d5 58 02 00 	cmp    0x258(%r13,%rdx,8),%rbx
    d9dc:	00 
    d9dd:	0f 84 ca 0f 00 00    	je     e9ad <dlmalloc+0x151d>
    d9e3:	4d 39 df             	cmp    %r11,%r15
    d9e6:	0f 82 04 01 00 00    	jb     daf0 <dlmalloc+0x660>
    d9ec:	49 3b 5f 20          	cmp    0x20(%r15),%rbx
    d9f0:	0f 84 3e 11 00 00    	je     eb34 <dlmalloc+0x16a4>
    d9f6:	4d 89 77 28          	mov    %r14,0x28(%r15)
    d9fa:	4d 85 f6             	test   %r14,%r14
    d9fd:	74 41                	je     da40 <dlmalloc+0x5b0>
    d9ff:	4d 39 de             	cmp    %r11,%r14
    da02:	0f 82 e8 00 00 00    	jb     daf0 <dlmalloc+0x660>
    da08:	48 8b 43 20          	mov    0x20(%rbx),%rax
    da0c:	4d 89 7e 30          	mov    %r15,0x30(%r14)
    da10:	48 85 c0             	test   %rax,%rax
    da13:	74 11                	je     da26 <dlmalloc+0x596>
    da15:	4c 39 d8             	cmp    %r11,%rax
    da18:	0f 82 d2 00 00 00    	jb     daf0 <dlmalloc+0x660>
    da1e:	49 89 46 20          	mov    %rax,0x20(%r14)
    da22:	4c 89 70 30          	mov    %r14,0x30(%rax)
    da26:	48 8b 43 28          	mov    0x28(%rbx),%rax
    da2a:	48 85 c0             	test   %rax,%rax
    da2d:	74 11                	je     da40 <dlmalloc+0x5b0>
    da2f:	4c 39 d8             	cmp    %r11,%rax
    da32:	0f 82 b8 00 00 00    	jb     daf0 <dlmalloc+0x660>
    da38:	49 89 46 28          	mov    %rax,0x28(%r14)
    da3c:	4c 89 70 30          	mov    %r14,0x30(%rax)
    da40:	48 8b 15 39 d5 01 00 	mov    0x1d539(%rip),%rdx        # 2af80 <mparams>
    da47:	4c 31 ea             	xor    %r13,%rdx
    da4a:	48 83 ff 1f          	cmp    $0x1f,%rdi
    da4e:	0f 86 fa 0c 00 00    	jbe    e74e <dlmalloc+0x12be>
    da54:	4c 89 e0             	mov    %r12,%rax
    da57:	48 89 f9             	mov    %rdi,%rcx
    da5a:	48 83 c8 03          	or     $0x3,%rax
    da5e:	48 c1 e9 03          	shr    $0x3,%rcx
    da62:	48 89 43 08          	mov    %rax,0x8(%rbx)
    da66:	48 89 f8             	mov    %rdi,%rax
    da69:	48 83 c8 01          	or     $0x1,%rax
    da6d:	49 89 12             	mov    %rdx,(%r10)
    da70:	49 89 42 08          	mov    %rax,0x8(%r10)
    da74:	49 89 3c 3a          	mov    %rdi,(%r10,%rdi,1)
    da78:	48 81 ff ff 00 00 00 	cmp    $0xff,%rdi
    da7f:	0f 87 e8 0c 00 00    	ja     e76d <dlmalloc+0x12dd>
    da85:	8d 44 09 09          	lea    0x9(%rcx,%rcx,1),%eax
    da89:	8b 35 31 d1 01 00    	mov    0x1d131(%rip),%esi        # 2abc0 <_gm_>
    da8f:	49 8d 54 c5 00       	lea    0x0(%r13,%rax,8),%rdx
    da94:	b8 01 00 00 00       	mov    $0x1,%eax
    da99:	d3 e0                	shl    %cl,%eax
    da9b:	85 c6                	test   %eax,%esi
    da9d:	0f 84 39 10 00 00    	je     eadc <dlmalloc+0x164c>
    daa3:	48 8b 42 10          	mov    0x10(%rdx),%rax
    daa7:	4c 39 d8             	cmp    %r11,%rax
    daaa:	72 44                	jb     daf0 <dlmalloc+0x660>
    daac:	4c 89 52 10          	mov    %r10,0x10(%rdx)
    dab0:	4c 89 50 18          	mov    %r10,0x18(%rax)
    dab4:	49 89 42 10          	mov    %rax,0x10(%r10)
    dab8:	49 89 52 18          	mov    %rdx,0x18(%r10)
    dabc:	48 83 c3 10          	add    $0x10,%rbx
    dac0:	4c 89 c6             	mov    %r8,%rsi
    dac3:	0f 85 9e fa ff ff    	jne    d567 <dlmalloc+0xd7>
    dac9:	e9 a2 fb ff ff       	jmp    d670 <dlmalloc+0x1e0>
    dace:	66 90                	xchg   %ax,%ax
    dad0:	c7 05 5a d4 01 00 00 	movl   $0x0,0x1d45a(%rip)        # 2af34 <_gm_+0x374>
    dad7:	00 00 00 
    dada:	e9 bc fa ff ff       	jmp    d59b <dlmalloc+0x10b>
    dadf:	48 8b 42 10          	mov    0x10(%rdx),%rax
    dae3:	48 3b 05 ee d0 01 00 	cmp    0x1d0ee(%rip),%rax        # 2abd8 <_gm_+0x18>
    daea:	0f 83 57 06 00 00    	jae    e147 <dlmalloc+0xcb7>
    daf0:	e8 42 4e 00 00       	call   12937 <abort>
    daf5:	0f 1f 00             	nopl   (%rax)
    daf8:	44 8b 0d c5 d0 01 00 	mov    0x1d0c5(%rip),%r9d        # 2abc4 <_gm_+0x4>
    daff:	45 85 c9             	test   %r9d,%r9d
    db02:	0f 84 71 fb ff ff    	je     d679 <dlmalloc+0x1e9>
    db08:	44 89 c8             	mov    %r9d,%eax
    db0b:	f7 d8                	neg    %eax
    db0d:	44 21 c8             	and    %r9d,%eax
    db10:	f3 0f bc c0          	tzcnt  %eax,%eax
    db14:	49 8b 84 c5 58 02 00 	mov    0x258(%r13,%rax,8),%rax
    db1b:	00 
    db1c:	48 8b 78 08          	mov    0x8(%rax),%rdi
    db20:	48 89 c3             	mov    %rax,%rbx
    db23:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    db27:	4c 29 e7             	sub    %r12,%rdi
    db2a:	eb 1d                	jmp    db49 <dlmalloc+0x6b9>
    db2c:	0f 1f 40 00          	nopl   0x0(%rax)
    db30:	48 8b 41 08          	mov    0x8(%rcx),%rax
    db34:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    db38:	4c 29 e0             	sub    %r12,%rax
    db3b:	48 39 f8             	cmp    %rdi,%rax
    db3e:	73 06                	jae    db46 <dlmalloc+0x6b6>
    db40:	48 89 c7             	mov    %rax,%rdi
    db43:	48 89 cb             	mov    %rcx,%rbx
    db46:	48 89 c8             	mov    %rcx,%rax
    db49:	48 8b 48 20          	mov    0x20(%rax),%rcx
    db4d:	48 85 c9             	test   %rcx,%rcx
    db50:	75 de                	jne    db30 <dlmalloc+0x6a0>
    db52:	48 8b 48 28          	mov    0x28(%rax),%rcx
    db56:	48 85 c9             	test   %rcx,%rcx
    db59:	75 d5                	jne    db30 <dlmalloc+0x6a0>
    db5b:	4c 8b 1d 76 d0 01 00 	mov    0x1d076(%rip),%r11        # 2abd8 <_gm_+0x18>
    db62:	4c 39 db             	cmp    %r11,%rbx
    db65:	72 89                	jb     daf0 <dlmalloc+0x660>
    db67:	4e 8d 14 23          	lea    (%rbx,%r12,1),%r10
    db6b:	4c 39 d3             	cmp    %r10,%rbx
    db6e:	73 80                	jae    daf0 <dlmalloc+0x660>
    db70:	4c 8b 43 18          	mov    0x18(%rbx),%r8
    db74:	4c 8b 73 30          	mov    0x30(%rbx),%r14
    db78:	49 39 d8             	cmp    %rbx,%r8
    db7b:	0f 84 36 0d 00 00    	je     e8b7 <dlmalloc+0x1427>
    db81:	48 8b 43 10          	mov    0x10(%rbx),%rax
    db85:	4c 39 d8             	cmp    %r11,%rax
    db88:	0f 82 62 ff ff ff    	jb     daf0 <dlmalloc+0x660>
    db8e:	48 39 58 18          	cmp    %rbx,0x18(%rax)
    db92:	0f 85 58 ff ff ff    	jne    daf0 <dlmalloc+0x660>
    db98:	49 39 58 10          	cmp    %rbx,0x10(%r8)
    db9c:	0f 85 4e ff ff ff    	jne    daf0 <dlmalloc+0x660>
    dba2:	4c 89 40 18          	mov    %r8,0x18(%rax)
    dba6:	49 89 40 10          	mov    %rax,0x10(%r8)
    dbaa:	4d 85 f6             	test   %r14,%r14
    dbad:	74 71                	je     dc20 <dlmalloc+0x790>
    dbaf:	8b 4b 38             	mov    0x38(%rbx),%ecx
    dbb2:	48 89 c8             	mov    %rcx,%rax
    dbb5:	49 39 9c cd 58 02 00 	cmp    %rbx,0x258(%r13,%rcx,8)
    dbbc:	00 
    dbbd:	0f 84 14 10 00 00    	je     ebd7 <dlmalloc+0x1747>
    dbc3:	4d 39 de             	cmp    %r11,%r14
    dbc6:	0f 82 24 ff ff ff    	jb     daf0 <dlmalloc+0x660>
    dbcc:	49 39 5e 20          	cmp    %rbx,0x20(%r14)
    dbd0:	0f 84 00 11 00 00    	je     ecd6 <dlmalloc+0x1846>
    dbd6:	4d 89 46 28          	mov    %r8,0x28(%r14)
    dbda:	4d 85 c0             	test   %r8,%r8
    dbdd:	74 41                	je     dc20 <dlmalloc+0x790>
    dbdf:	4d 39 d8             	cmp    %r11,%r8
    dbe2:	0f 82 08 ff ff ff    	jb     daf0 <dlmalloc+0x660>
    dbe8:	48 8b 43 20          	mov    0x20(%rbx),%rax
    dbec:	4d 89 70 30          	mov    %r14,0x30(%r8)
    dbf0:	48 85 c0             	test   %rax,%rax
    dbf3:	74 11                	je     dc06 <dlmalloc+0x776>
    dbf5:	4c 39 d8             	cmp    %r11,%rax
    dbf8:	0f 82 f2 fe ff ff    	jb     daf0 <dlmalloc+0x660>
    dbfe:	49 89 40 20          	mov    %rax,0x20(%r8)
    dc02:	4c 89 40 30          	mov    %r8,0x30(%rax)
    dc06:	48 8b 43 28          	mov    0x28(%rbx),%rax
    dc0a:	48 85 c0             	test   %rax,%rax
    dc0d:	74 11                	je     dc20 <dlmalloc+0x790>
    dc0f:	4c 39 d8             	cmp    %r11,%rax
    dc12:	0f 82 d8 fe ff ff    	jb     daf0 <dlmalloc+0x660>
    dc18:	49 89 40 28          	mov    %rax,0x28(%r8)
    dc1c:	4c 89 40 30          	mov    %r8,0x30(%rax)
    dc20:	48 8b 05 59 d3 01 00 	mov    0x1d359(%rip),%rax        # 2af80 <mparams>
    dc27:	4c 31 e8             	xor    %r13,%rax
    dc2a:	48 83 ff 1f          	cmp    $0x1f,%rdi
    dc2e:	0f 86 d2 0d 00 00    	jbe    ea06 <dlmalloc+0x1576>
    dc34:	4c 89 e1             	mov    %r12,%rcx
    dc37:	48 83 c9 03          	or     $0x3,%rcx
    dc3b:	48 89 4b 08          	mov    %rcx,0x8(%rbx)
    dc3f:	49 89 02             	mov    %rax,(%r10)
    dc42:	48 89 f8             	mov    %rdi,%rax
    dc45:	48 83 c8 01          	or     $0x1,%rax
    dc49:	49 89 42 08          	mov    %rax,0x8(%r10)
    dc4d:	49 89 3c 3a          	mov    %rdi,(%r10,%rdi,1)
    dc51:	48 85 f6             	test   %rsi,%rsi
    dc54:	74 46                	je     dc9c <dlmalloc+0x80c>
    dc56:	48 c1 ee 03          	shr    $0x3,%rsi
    dc5a:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    dc60:	48 8b 05 79 cf 01 00 	mov    0x1cf79(%rip),%rax        # 2abe0 <_gm_+0x20>
    dc67:	48 89 f1             	mov    %rsi,%rcx
    dc6a:	8d 74 36 09          	lea    0x9(%rsi,%rsi,1),%esi
    dc6e:	41 d3 e0             	shl    %cl,%r8d
    dc71:	4d 8d 4c f5 00       	lea    0x0(%r13,%rsi,8),%r9
    dc76:	44 85 c2             	test   %r8d,%edx
    dc79:	0f 84 79 0f 00 00    	je     ebf8 <dlmalloc+0x1768>
    dc7f:	49 8b 51 10          	mov    0x10(%r9),%rdx
    dc83:	4c 39 da             	cmp    %r11,%rdx
    dc86:	0f 82 64 fe ff ff    	jb     daf0 <dlmalloc+0x660>
    dc8c:	49 89 41 10          	mov    %rax,0x10(%r9)
    dc90:	48 89 42 18          	mov    %rax,0x18(%rdx)
    dc94:	48 89 50 10          	mov    %rdx,0x10(%rax)
    dc98:	4c 89 48 18          	mov    %r9,0x18(%rax)
    dc9c:	48 89 3d 25 cf 01 00 	mov    %rdi,0x1cf25(%rip)        # 2abc8 <_gm_+0x8>
    dca3:	4c 89 15 36 cf 01 00 	mov    %r10,0x1cf36(%rip)        # 2abe0 <_gm_+0x20>
    dcaa:	48 83 c3 10          	add    $0x10,%rbx
    dcae:	0f 85 b3 f8 ff ff    	jne    d567 <dlmalloc+0xd7>
    dcb4:	48 8b 35 0d cf 01 00 	mov    0x1cf0d(%rip),%rsi        # 2abc8 <_gm_+0x8>
    dcbb:	e9 b0 f9 ff ff       	jmp    d670 <dlmalloc+0x1e0>
    dcc0:	0f b3 ca             	btr    %ecx,%edx
    dcc3:	89 15 f7 ce 01 00    	mov    %edx,0x1cef7(%rip)        # 2abc0 <_gm_>
    dcc9:	e9 6d f8 ff ff       	jmp    d53b <dlmalloc+0xab>
    dcce:	66 90                	xchg   %ax,%ax
    dcd0:	3d ff ff 00 00       	cmp    $0xffff,%eax
    dcd5:	0f 86 85 07 00 00    	jbe    e460 <dlmalloc+0xfd0>
    dcdb:	48 8b 15 2e d2 01 00 	mov    0x1d22e(%rip),%rdx        # 2af10 <_gm_+0x350>
    dce2:	4d 89 e3             	mov    %r12,%r11
    dce5:	41 ba 1f 00 00 00    	mov    $0x1f,%r10d
    dceb:	48 85 d2             	test   %rdx,%rdx
    dcee:	0f 85 d4 fb ff ff    	jne    d8c8 <dlmalloc+0x438>
    dcf4:	e9 77 f9 ff ff       	jmp    d670 <dlmalloc+0x1e0>
    dcf9:	d3 e7                	shl    %cl,%edi
    dcfb:	f7 d7                	not    %edi
    dcfd:	21 d7                	and    %edx,%edi
    dcff:	89 3d bb ce 01 00    	mov    %edi,0x1cebb(%rip)        # 2abc0 <_gm_>
    dd05:	e9 3d fa ff ff       	jmp    d747 <dlmalloc+0x2b7>
    dd0a:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    dd0f:	44 89 d1             	mov    %r10d,%ecx
    dd12:	d3 e0                	shl    %cl,%eax
    dd14:	44 21 c8             	and    %r9d,%eax
    dd17:	0f 84 53 f9 ff ff    	je     d670 <dlmalloc+0x1e0>
    dd1d:	89 c2                	mov    %eax,%edx
    dd1f:	31 db                	xor    %ebx,%ebx
    dd21:	f7 da                	neg    %edx
    dd23:	21 d0                	and    %edx,%eax
    dd25:	f3 0f bc c0          	tzcnt  %eax,%eax
    dd29:	49 8b 8c c5 58 02 00 	mov    0x258(%r13,%rax,8),%rcx
    dd30:	00 
    dd31:	48 85 c9             	test   %rcx,%rcx
    dd34:	0f 85 f9 fb ff ff    	jne    d933 <dlmalloc+0x4a3>
    dd3a:	e9 31 f9 ff ff       	jmp    d670 <dlmalloc+0x1e0>
    dd3f:	90                   	nop
    dd40:	48 85 d2             	test   %rdx,%rdx
    dd43:	0f 84 74 12 00 00    	je     efbd <dlmalloc+0x1b2d>
    dd49:	48 8b 05 40 d2 01 00 	mov    0x1d240(%rip),%rax        # 2af90 <mparams+0x10>
    dd50:	49 8d 4c 04 5f       	lea    0x5f(%r12,%rax,1),%rcx
    dd55:	48 f7 d8             	neg    %rax
    dd58:	48 21 c1             	and    %rax,%rcx
    dd5b:	49 39 cc             	cmp    %rcx,%r12
    dd5e:	0f 83 99 f8 ff ff    	jae    d5fd <dlmalloc+0x16d>
    dd64:	48 8b 05 bd d1 01 00 	mov    0x1d1bd(%rip),%rax        # 2af28 <_gm_+0x368>
    dd6b:	48 85 c0             	test   %rax,%rax
    dd6e:	74 1d                	je     dd8d <dlmalloc+0x8fd>
    dd70:	48 8b 15 a1 d1 01 00 	mov    0x1d1a1(%rip),%rdx        # 2af18 <_gm_+0x358>
    dd77:	48 8d 34 11          	lea    (%rcx,%rdx,1),%rsi
    dd7b:	48 39 f2             	cmp    %rsi,%rdx
    dd7e:	0f 83 79 f8 ff ff    	jae    d5fd <dlmalloc+0x16d>
    dd84:	48 39 f0             	cmp    %rsi,%rax
    dd87:	0f 82 70 f8 ff ff    	jb     d5fd <dlmalloc+0x16d>
    dd8d:	f6 05 9c d1 01 00 04 	testb  $0x4,0x1d19c(%rip)        # 2af30 <_gm_+0x370>
    dd94:	0f 85 b9 00 00 00    	jne    de53 <dlmalloc+0x9c3>
    dd9a:	48 8b 15 47 ce 01 00 	mov    0x1ce47(%rip),%rdx        # 2abe8 <_gm_+0x28>
    dda1:	48 85 d2             	test   %rdx,%rdx
    dda4:	0f 84 b6 05 00 00    	je     e360 <dlmalloc+0xed0>
    ddaa:	4c 8d 35 87 d1 01 00 	lea    0x1d187(%rip),%r14        # 2af38 <_gm_+0x378>
    ddb1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    ddb8:	49 8b 06             	mov    (%r14),%rax
    ddbb:	48 39 c2             	cmp    %rax,%rdx
    ddbe:	72 0d                	jb     ddcd <dlmalloc+0x93d>
    ddc0:	49 03 46 08          	add    0x8(%r14),%rax
    ddc4:	48 39 c2             	cmp    %rax,%rdx
    ddc7:	0f 82 44 07 00 00    	jb     e511 <dlmalloc+0x1081>
    ddcd:	4d 8b 76 10          	mov    0x10(%r14),%r14
    ddd1:	4d 85 f6             	test   %r14,%r14
    ddd4:	75 e2                	jne    ddb8 <dlmalloc+0x928>
    ddd6:	b8 01 00 00 00       	mov    $0x1,%eax
    dddb:	87 05 cf d1 01 00    	xchg   %eax,0x1d1cf(%rip)        # 2afb0 <malloc_global_mutex>
    dde1:	85 c0                	test   %eax,%eax
    dde3:	0f 84 8a 05 00 00    	je     e373 <dlmalloc+0xee3>
    dde9:	45 31 f6             	xor    %r14d,%r14d
    ddec:	48 8d 15 bd d1 01 00 	lea    0x1d1bd(%rip),%rdx        # 2afb0 <malloc_global_mutex>
    ddf3:	be 01 00 00 00       	mov    $0x1,%esi
    ddf8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    ddff:	00 
    de00:	8b 02                	mov    (%rdx),%eax
    de02:	85 c0                	test   %eax,%eax
    de04:	75 fa                	jne    de00 <dlmalloc+0x970>
    de06:	89 f0                	mov    %esi,%eax
    de08:	87 05 a2 d1 01 00    	xchg   %eax,0x1d1a2(%rip)        # 2afb0 <malloc_global_mutex>
    de0e:	85 c0                	test   %eax,%eax
    de10:	75 ee                	jne    de00 <dlmalloc+0x970>
    de12:	4d 85 f6             	test   %r14,%r14
    de15:	0f 84 58 05 00 00    	je     e373 <dlmalloc+0xee3>
    de1b:	48 8b 05 6e d1 01 00 	mov    0x1d16e(%rip),%rax        # 2af90 <mparams+0x10>
    de22:	4c 8d 78 5f          	lea    0x5f(%rax),%r15
    de26:	4c 2b 3d a3 cd 01 00 	sub    0x1cda3(%rip),%r15        # 2abd0 <_gm_+0x10>
    de2d:	48 f7 d8             	neg    %rax
    de30:	4d 01 e7             	add    %r12,%r15
    de33:	49 21 c7             	and    %rax,%r15
    de36:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
    de3d:	ff ff 7f 
    de40:	4c 39 f8             	cmp    %r15,%rax
    de43:	0f 83 73 06 00 00    	jae    e4bc <dlmalloc+0x102c>
    de49:	c7 05 5d d1 01 00 00 	movl   $0x0,0x1d15d(%rip)        # 2afb0 <malloc_global_mutex>
    de50:	00 00 00 
    de53:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
    de5a:	ff ff 7f 
    de5d:	48 39 c8             	cmp    %rcx,%rax
    de60:	73 16                	jae    de78 <dlmalloc+0x9e8>
    de62:	e8 69 34 00 00       	call   112d0 <__errno_location>
    de67:	31 db                	xor    %ebx,%ebx
    de69:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
    de6f:	e9 1a f7 ff ff       	jmp    d58e <dlmalloc+0xfe>
    de74:	0f 1f 40 00          	nopl   0x0(%rax)
    de78:	b8 01 00 00 00       	mov    $0x1,%eax
    de7d:	87 05 2d d1 01 00    	xchg   %eax,0x1d12d(%rip)        # 2afb0 <malloc_global_mutex>
    de83:	48 8d 15 26 d1 01 00 	lea    0x1d126(%rip),%rdx        # 2afb0 <malloc_global_mutex>
    de8a:	be 01 00 00 00       	mov    $0x1,%esi
    de8f:	85 c0                	test   %eax,%eax
    de91:	0f 85 11 03 00 00    	jne    e1a8 <dlmalloc+0xd18>
    de97:	48 89 cf             	mov    %rcx,%rdi
    de9a:	e8 11 eb ff ff       	call   c9b0 <sbrk>
    de9f:	31 ff                	xor    %edi,%edi
    dea1:	48 89 c3             	mov    %rax,%rbx
    dea4:	e8 07 eb ff ff       	call   c9b0 <sbrk>
    dea9:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
    dead:	0f 95 c1             	setne  %cl
    deb0:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    deb4:	c7 05 f2 d0 01 00 00 	movl   $0x0,0x1d0f2(%rip)        # 2afb0 <malloc_global_mutex>
    debb:	00 00 00 
    debe:	0f 95 c2             	setne  %dl
    dec1:	84 d1                	test   %dl,%cl
    dec3:	74 9d                	je     de62 <dlmalloc+0x9d2>
    dec5:	48 39 c3             	cmp    %rax,%rbx
    dec8:	73 98                	jae    de62 <dlmalloc+0x9d2>
    deca:	48 29 d8             	sub    %rbx,%rax
    decd:	49 89 c7             	mov    %rax,%r15
    ded0:	49 8d 44 24 50       	lea    0x50(%r12),%rax
    ded5:	4c 39 f8             	cmp    %r15,%rax
    ded8:	73 88                	jae    de62 <dlmalloc+0x9d2>
    deda:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    dee0:	48 8b 05 31 d0 01 00 	mov    0x1d031(%rip),%rax        # 2af18 <_gm_+0x358>
    dee7:	4c 01 f8             	add    %r15,%rax
    deea:	48 39 05 2f d0 01 00 	cmp    %rax,0x1d02f(%rip)        # 2af20 <_gm_+0x360>
    def1:	48 89 05 20 d0 01 00 	mov    %rax,0x1d020(%rip)        # 2af18 <_gm_+0x358>
    def8:	73 07                	jae    df01 <dlmalloc+0xa71>
    defa:	48 89 05 1f d0 01 00 	mov    %rax,0x1d01f(%rip)        # 2af20 <_gm_+0x360>
    df01:	48 8b 35 e0 cc 01 00 	mov    0x1cce0(%rip),%rsi        # 2abe8 <_gm_+0x28>
    df08:	48 8d 05 29 d0 01 00 	lea    0x1d029(%rip),%rax        # 2af38 <_gm_+0x378>
    df0f:	48 85 f6             	test   %rsi,%rsi
    df12:	75 15                	jne    df29 <dlmalloc+0xa99>
    df14:	e9 a7 02 00 00       	jmp    e1c0 <dlmalloc+0xd30>
    df19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    df20:	48 8b 40 10          	mov    0x10(%rax),%rax
    df24:	48 85 c0             	test   %rax,%rax
    df27:	74 27                	je     df50 <dlmalloc+0xac0>
    df29:	48 8b 10             	mov    (%rax),%rdx
    df2c:	48 8b 48 08          	mov    0x8(%rax),%rcx
    df30:	48 8d 3c 0a          	lea    (%rdx,%rcx,1),%rdi
    df34:	48 39 fb             	cmp    %rdi,%rbx
    df37:	75 e7                	jne    df20 <dlmalloc+0xa90>
    df39:	f6 40 18 08          	testb  $0x8,0x18(%rax)
    df3d:	75 11                	jne    df50 <dlmalloc+0xac0>
    df3f:	48 39 d6             	cmp    %rdx,%rsi
    df42:	72 0c                	jb     df50 <dlmalloc+0xac0>
    df44:	48 39 de             	cmp    %rbx,%rsi
    df47:	0f 82 ed 09 00 00    	jb     e93a <dlmalloc+0x14aa>
    df4d:	0f 1f 00             	nopl   (%rax)
    df50:	48 3b 1d 81 cc 01 00 	cmp    0x1cc81(%rip),%rbx        # 2abd8 <_gm_+0x18>
    df57:	73 07                	jae    df60 <dlmalloc+0xad0>
    df59:	48 89 1d 78 cc 01 00 	mov    %rbx,0x1cc78(%rip)        # 2abd8 <_gm_+0x18>
    df60:	4a 8d 14 3b          	lea    (%rbx,%r15,1),%rdx
    df64:	48 8d 05 cd cf 01 00 	lea    0x1cfcd(%rip),%rax        # 2af38 <_gm_+0x378>
    df6b:	eb 10                	jmp    df7d <dlmalloc+0xaed>
    df6d:	0f 1f 00             	nopl   (%rax)
    df70:	48 8b 40 10          	mov    0x10(%rax),%rax
    df74:	48 85 c0             	test   %rax,%rax
    df77:	0f 84 b3 05 00 00    	je     e530 <dlmalloc+0x10a0>
    df7d:	48 39 10             	cmp    %rdx,(%rax)
    df80:	75 ee                	jne    df70 <dlmalloc+0xae0>
    df82:	44 8b 48 18          	mov    0x18(%rax),%r9d
    df86:	49 89 d8             	mov    %rbx,%r8
    df89:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
    df8d:	41 83 e0 0f          	and    $0xf,%r8d
    df91:	41 83 e1 08          	and    $0x8,%r9d
    df95:	0f 84 a5 05 00 00    	je     e540 <dlmalloc+0x10b0>
    df9b:	48 8d 05 96 cf 01 00 	lea    0x1cf96(%rip),%rax        # 2af38 <_gm_+0x378>
    dfa2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    dfa8:	48 8b 10             	mov    (%rax),%rdx
    dfab:	48 39 d6             	cmp    %rdx,%rsi
    dfae:	72 09                	jb     dfb9 <dlmalloc+0xb29>
    dfb0:	48 03 50 08          	add    0x8(%rax),%rdx
    dfb4:	48 39 d6             	cmp    %rdx,%rsi
    dfb7:	72 19                	jb     dfd2 <dlmalloc+0xb42>
    dfb9:	48 8b 40 10          	mov    0x10(%rax),%rax
    dfbd:	48 85 c0             	test   %rax,%rax
    dfc0:	75 e6                	jne    dfa8 <dlmalloc+0xb18>
    dfc2:	48 8b 14 25 08 00 00 	mov    0x8,%rdx
    dfc9:	00 
    dfca:	48 03 14 25 00 00 00 	add    0x0,%rdx
    dfd1:	00 
    dfd2:	48 8d 42 b1          	lea    -0x4f(%rdx),%rax
    dfd6:	48 c7 c1 a1 ff ff ff 	mov    $0xffffffffffffffa1,%rcx
    dfdd:	a8 0f                	test   $0xf,%al
    dfdf:	74 0a                	je     dfeb <dlmalloc+0xb5b>
    dfe1:	48 f7 d8             	neg    %rax
    dfe4:	83 e0 0f             	and    $0xf,%eax
    dfe7:	48 8d 48 a1          	lea    -0x5f(%rax),%rcx
    dfeb:	48 01 d1             	add    %rdx,%rcx
    dfee:	48 8d 46 20          	lea    0x20(%rsi),%rax
    dff2:	4d 8d 4f b0          	lea    -0x50(%r15),%r9
    dff6:	48 39 c1             	cmp    %rax,%rcx
    dff9:	48 0f 42 ce          	cmovb  %rsi,%rcx
    dffd:	4c 8d 51 10          	lea    0x10(%rcx),%r10
    e001:	4d 85 c0             	test   %r8,%r8
    e004:	0f 84 86 02 00 00    	je     e290 <dlmalloc+0xe00>
    e00a:	48 f7 df             	neg    %rdi
    e00d:	4c 89 c8             	mov    %r9,%rax
    e010:	83 e7 0f             	and    $0xf,%edi
    e013:	4c 8d 04 3b          	lea    (%rbx,%rdi,1),%r8
    e017:	48 29 f8             	sub    %rdi,%rax
    e01a:	48 89 05 af cb 01 00 	mov    %rax,0x1cbaf(%rip)        # 2abd0 <_gm_+0x10>
    e021:	48 83 c8 01          	or     $0x1,%rax
    e025:	f3 0f 6f 15 0b cf 01 	movdqu 0x1cf0b(%rip),%xmm2        # 2af38 <_gm_+0x378>
    e02c:	00 
    e02d:	4c 89 05 b4 cb 01 00 	mov    %r8,0x1cbb4(%rip)        # 2abe8 <_gm_+0x28>
    e034:	49 89 40 08          	mov    %rax,0x8(%r8)
    e038:	48 8b 05 61 cf 01 00 	mov    0x1cf61(%rip),%rax        # 2afa0 <mparams+0x20>
    e03f:	4a c7 44 0b 08 50 00 	movq   $0x50,0x8(%rbx,%r9,1)
    e046:	00 00 
    e048:	48 89 05 a1 cb 01 00 	mov    %rax,0x1cba1(%rip)        # 2abf0 <_gm_+0x30>
    e04f:	48 8b 05 2a cf 01 00 	mov    0x1cf2a(%rip),%rax        # 2af80 <mparams>
    e056:	0f 11 51 10          	movups %xmm2,0x10(%rcx)
    e05a:	f3 0f 6f 1d e6 ce 01 	movdqu 0x1cee6(%rip),%xmm3        # 2af48 <_gm_+0x388>
    e061:	00 
    e062:	4c 31 e8             	xor    %r13,%rax
    e065:	48 c7 41 08 33 00 00 	movq   $0x33,0x8(%rcx)
    e06c:	00 
    e06d:	48 89 41 30          	mov    %rax,0x30(%rcx)
    e071:	48 8d 41 38          	lea    0x38(%rcx),%rax
    e075:	48 89 c7             	mov    %rax,%rdi
    e078:	48 8d 41 40          	lea    0x40(%rcx),%rax
    e07c:	0f 11 59 20          	movups %xmm3,0x20(%rcx)
    e080:	48 f7 d7             	not    %rdi
    e083:	48 89 1d ae ce 01 00 	mov    %rbx,0x1ceae(%rip)        # 2af38 <_gm_+0x378>
    e08a:	48 01 d7             	add    %rdx,%rdi
    e08d:	4c 89 3d ac ce 01 00 	mov    %r15,0x1ceac(%rip)        # 2af40 <_gm_+0x380>
    e094:	48 c1 ef 03          	shr    $0x3,%rdi
    e098:	4c 89 15 a9 ce 01 00 	mov    %r10,0x1cea9(%rip)        # 2af48 <_gm_+0x388>
    e09f:	c7 05 a7 ce 01 00 00 	movl   $0x0,0x1cea7(%rip)        # 2af50 <_gm_+0x390>
    e0a6:	00 00 00 
    e0a9:	83 e7 01             	and    $0x1,%edi
    e0ac:	48 c7 41 38 0b 00 00 	movq   $0xb,0x38(%rcx)
    e0b3:	00 
    e0b4:	48 39 d0             	cmp    %rdx,%rax
    e0b7:	73 2f                	jae    e0e8 <dlmalloc+0xc58>
    e0b9:	48 85 ff             	test   %rdi,%rdi
    e0bc:	74 12                	je     e0d0 <dlmalloc+0xc40>
    e0be:	48 c7 00 0b 00 00 00 	movq   $0xb,(%rax)
    e0c5:	48 8d 41 48          	lea    0x48(%rcx),%rax
    e0c9:	48 39 d0             	cmp    %rdx,%rax
    e0cc:	73 1a                	jae    e0e8 <dlmalloc+0xc58>
    e0ce:	66 90                	xchg   %ax,%ax
    e0d0:	48 c7 00 0b 00 00 00 	movq   $0xb,(%rax)
    e0d7:	48 83 c0 10          	add    $0x10,%rax
    e0db:	48 c7 40 f8 0b 00 00 	movq   $0xb,-0x8(%rax)
    e0e2:	00 
    e0e3:	48 39 d0             	cmp    %rdx,%rax
    e0e6:	72 e8                	jb     e0d0 <dlmalloc+0xc40>
    e0e8:	48 39 ce             	cmp    %rcx,%rsi
    e0eb:	0f 84 5f 02 00 00    	je     e350 <dlmalloc+0xec0>
    e0f1:	48 89 ca             	mov    %rcx,%rdx
    e0f4:	48 83 61 08 fe       	andq   $0xfffffffffffffffe,0x8(%rcx)
    e0f9:	48 29 f2             	sub    %rsi,%rdx
    e0fc:	48 89 d0             	mov    %rdx,%rax
    e0ff:	48 83 c8 01          	or     $0x1,%rax
    e103:	48 89 46 08          	mov    %rax,0x8(%rsi)
    e107:	48 89 11             	mov    %rdx,(%rcx)
    e10a:	48 89 d1             	mov    %rdx,%rcx
    e10d:	48 c1 e9 03          	shr    $0x3,%rcx
    e111:	48 81 fa ff 00 00 00 	cmp    $0xff,%rdx
    e118:	0f 87 92 01 00 00    	ja     e2b0 <dlmalloc+0xe20>
    e11e:	8d 44 09 09          	lea    0x9(%rcx,%rcx,1),%eax
    e122:	8b 3d 98 ca 01 00    	mov    0x1ca98(%rip),%edi        # 2abc0 <_gm_>
    e128:	49 8d 54 c5 00       	lea    0x0(%r13,%rax,8),%rdx
    e12d:	b8 01 00 00 00       	mov    $0x1,%eax
    e132:	d3 e0                	shl    %cl,%eax
    e134:	85 c7                	test   %eax,%edi
    e136:	0f 85 a3 f9 ff ff    	jne    dadf <dlmalloc+0x64f>
    e13c:	09 c7                	or     %eax,%edi
    e13e:	48 89 d0             	mov    %rdx,%rax
    e141:	89 3d 79 ca 01 00    	mov    %edi,0x1ca79(%rip)        # 2abc0 <_gm_>
    e147:	48 89 72 10          	mov    %rsi,0x10(%rdx)
    e14b:	48 89 70 18          	mov    %rsi,0x18(%rax)
    e14f:	48 89 56 18          	mov    %rdx,0x18(%rsi)
    e153:	48 89 46 10          	mov    %rax,0x10(%rsi)
    e157:	48 8b 05 72 ca 01 00 	mov    0x1ca72(%rip),%rax        # 2abd0 <_gm_+0x10>
    e15e:	49 39 c4             	cmp    %rax,%r12
    e161:	0f 83 fb fc ff ff    	jae    de62 <dlmalloc+0x9d2>
    e167:	48 8b 1d 7a ca 01 00 	mov    0x1ca7a(%rip),%rbx        # 2abe8 <_gm_+0x28>
    e16e:	4c 29 e0             	sub    %r12,%rax
    e171:	4c 33 2d 08 ce 01 00 	xor    0x1ce08(%rip),%r13        # 2af80 <mparams>
    e178:	48 89 05 51 ca 01 00 	mov    %rax,0x1ca51(%rip)        # 2abd0 <_gm_+0x10>
    e17f:	48 83 c8 01          	or     $0x1,%rax
    e183:	4a 8d 14 23          	lea    (%rbx,%r12,1),%rdx
    e187:	49 83 cc 03          	or     $0x3,%r12
    e18b:	48 89 15 56 ca 01 00 	mov    %rdx,0x1ca56(%rip)        # 2abe8 <_gm_+0x28>
    e192:	48 89 42 08          	mov    %rax,0x8(%rdx)
    e196:	4c 89 63 08          	mov    %r12,0x8(%rbx)
    e19a:	4c 89 2a             	mov    %r13,(%rdx)
    e19d:	e9 20 f5 ff ff       	jmp    d6c2 <dlmalloc+0x232>
    e1a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    e1a8:	8b 02                	mov    (%rdx),%eax
    e1aa:	85 c0                	test   %eax,%eax
    e1ac:	75 fa                	jne    e1a8 <dlmalloc+0xd18>
    e1ae:	89 f0                	mov    %esi,%eax
    e1b0:	87 05 fa cd 01 00    	xchg   %eax,0x1cdfa(%rip)        # 2afb0 <malloc_global_mutex>
    e1b6:	85 c0                	test   %eax,%eax
    e1b8:	75 ee                	jne    e1a8 <dlmalloc+0xd18>
    e1ba:	e9 d8 fc ff ff       	jmp    de97 <dlmalloc+0xa07>
    e1bf:	90                   	nop
    e1c0:	48 8b 05 11 ca 01 00 	mov    0x1ca11(%rip),%rax        # 2abd8 <_gm_+0x18>
    e1c7:	48 85 c0             	test   %rax,%rax
    e1ca:	74 05                	je     e1d1 <dlmalloc+0xd41>
    e1cc:	48 39 c3             	cmp    %rax,%rbx
    e1cf:	73 07                	jae    e1d8 <dlmalloc+0xd48>
    e1d1:	48 89 1d 00 ca 01 00 	mov    %rbx,0x1ca00(%rip)        # 2abd8 <_gm_+0x18>
    e1d8:	48 8b 05 a1 cd 01 00 	mov    0x1cda1(%rip),%rax        # 2af80 <mparams>
    e1df:	48 89 1d 52 cd 01 00 	mov    %rbx,0x1cd52(%rip)        # 2af38 <_gm_+0x378>
    e1e6:	4c 89 3d 53 cd 01 00 	mov    %r15,0x1cd53(%rip)        # 2af40 <_gm_+0x380>
    e1ed:	c7 05 59 cd 01 00 00 	movl   $0x0,0x1cd59(%rip)        # 2af50 <_gm_+0x390>
    e1f4:	00 00 00 
    e1f7:	48 c7 05 f6 c9 01 00 	movq   $0xffffffffffffffff,0x1c9f6(%rip)        # 2abf8 <_gm_+0x38>
    e1fe:	ff ff ff ff 
    e202:	48 89 05 f7 c9 01 00 	mov    %rax,0x1c9f7(%rip)        # 2ac00 <_gm_+0x40>
    e209:	48 8d 05 f8 c9 01 00 	lea    0x1c9f8(%rip),%rax        # 2ac08 <_gm_+0x48>
    e210:	48 8d 90 00 02 00 00 	lea    0x200(%rax),%rdx
    e217:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    e21e:	00 00 
    e220:	66 48 0f 6e c0       	movq   %rax,%xmm0
    e225:	48 83 c0 10          	add    $0x10,%rax
    e229:	66 0f 6c c0          	punpcklqdq %xmm0,%xmm0
    e22d:	0f 11 00             	movups %xmm0,(%rax)
    e230:	48 39 d0             	cmp    %rdx,%rax
    e233:	75 eb                	jne    e220 <dlmalloc+0xd90>
    e235:	49 83 ef 50          	sub    $0x50,%r15
    e239:	48 8d 53 10          	lea    0x10(%rbx),%rdx
    e23d:	f6 c3 0f             	test   $0xf,%bl
    e240:	0f 84 aa 02 00 00    	je     e4f0 <dlmalloc+0x1060>
    e246:	48 f7 da             	neg    %rdx
    e249:	4c 89 f8             	mov    %r15,%rax
    e24c:	83 e2 0f             	and    $0xf,%edx
    e24f:	48 8d 0c 13          	lea    (%rbx,%rdx,1),%rcx
    e253:	48 29 d0             	sub    %rdx,%rax
    e256:	48 89 c2             	mov    %rax,%rdx
    e259:	48 89 0d 88 c9 01 00 	mov    %rcx,0x1c988(%rip)        # 2abe8 <_gm_+0x28>
    e260:	48 83 ca 01          	or     $0x1,%rdx
    e264:	48 89 05 65 c9 01 00 	mov    %rax,0x1c965(%rip)        # 2abd0 <_gm_+0x10>
    e26b:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    e26f:	48 8b 15 2a cd 01 00 	mov    0x1cd2a(%rip),%rdx        # 2afa0 <mparams+0x20>
    e276:	4a c7 44 3b 08 50 00 	movq   $0x50,0x8(%rbx,%r15,1)
    e27d:	00 00 
    e27f:	48 89 15 6a c9 01 00 	mov    %rdx,0x1c96a(%rip)        # 2abf0 <_gm_+0x30>
    e286:	e9 d3 fe ff ff       	jmp    e15e <dlmalloc+0xcce>
    e28b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    e290:	4c 89 c8             	mov    %r9,%rax
    e293:	49 89 d8             	mov    %rbx,%r8
    e296:	e9 7f fd ff ff       	jmp    e01a <dlmalloc+0xb8a>
    e29b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    e2a0:	48 83 ce 03          	or     $0x3,%rsi
    e2a4:	e9 b9 f5 ff ff       	jmp    d862 <dlmalloc+0x3d2>
    e2a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    e2b0:	48 89 d0             	mov    %rdx,%rax
    e2b3:	48 c1 e8 08          	shr    $0x8,%rax
    e2b7:	89 c1                	mov    %eax,%ecx
    e2b9:	85 c0                	test   %eax,%eax
    e2bb:	0f 84 60 03 00 00    	je     e621 <dlmalloc+0x1191>
    e2c1:	3d ff ff 00 00       	cmp    $0xffff,%eax
    e2c6:	0f 87 ad 05 00 00    	ja     e879 <dlmalloc+0x13e9>
    e2cc:	0f bd c1             	bsr    %ecx,%eax
    e2cf:	b9 26 00 00 00       	mov    $0x26,%ecx
    e2d4:	48 89 d3             	mov    %rdx,%rbx
    e2d7:	bf 1f 00 00 00       	mov    $0x1f,%edi
    e2dc:	83 f0 1f             	xor    $0x1f,%eax
    e2df:	29 c1                	sub    %eax,%ecx
    e2e1:	29 c7                	sub    %eax,%edi
    e2e3:	48 d3 eb             	shr    %cl,%rbx
    e2e6:	48 89 d9             	mov    %rbx,%rcx
    e2e9:	83 e1 01             	and    $0x1,%ecx
    e2ec:	8d 0c 79             	lea    (%rcx,%rdi,2),%ecx
    e2ef:	bf 01 00 00 00       	mov    $0x1,%edi
    e2f4:	44 8d 41 4b          	lea    0x4b(%rcx),%r8d
    e2f8:	d3 e7                	shl    %cl,%edi
    e2fa:	49 c1 e0 03          	shl    $0x3,%r8
    e2fe:	8b 05 c0 c8 01 00    	mov    0x1c8c0(%rip),%eax        # 2abc4 <_gm_+0x4>
    e304:	66 48 0f 6e ce       	movq   %rsi,%xmm1
    e309:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e30d:	89 4e 38             	mov    %ecx,0x38(%rsi)
    e310:	66 0f 6c c9          	punpcklqdq %xmm1,%xmm1
    e314:	0f 11 46 20          	movups %xmm0,0x20(%rsi)
    e318:	85 f8                	test   %edi,%eax
    e31a:	0f 85 11 03 00 00    	jne    e631 <dlmalloc+0x11a1>
    e320:	09 f8                	or     %edi,%eax
    e322:	4d 01 e8             	add    %r13,%r8
    e325:	49 89 b4 cd 58 02 00 	mov    %rsi,0x258(%r13,%rcx,8)
    e32c:	00 
    e32d:	89 05 91 c8 01 00    	mov    %eax,0x1c891(%rip)        # 2abc4 <_gm_+0x4>
    e333:	48 8b 05 96 c8 01 00 	mov    0x1c896(%rip),%rax        # 2abd0 <_gm_+0x10>
    e33a:	4c 89 46 30          	mov    %r8,0x30(%rsi)
    e33e:	0f 11 4e 10          	movups %xmm1,0x10(%rsi)
    e342:	e9 17 fe ff ff       	jmp    e15e <dlmalloc+0xcce>
    e347:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    e34e:	00 00 
    e350:	48 8b 05 79 c8 01 00 	mov    0x1c879(%rip),%rax        # 2abd0 <_gm_+0x10>
    e357:	e9 02 fe ff ff       	jmp    e15e <dlmalloc+0xcce>
    e35c:	0f 1f 40 00          	nopl   0x0(%rax)
    e360:	b8 01 00 00 00       	mov    $0x1,%eax
    e365:	87 05 45 cc 01 00    	xchg   %eax,0x1cc45(%rip)        # 2afb0 <malloc_global_mutex>
    e36b:	85 c0                	test   %eax,%eax
    e36d:	0f 85 76 fa ff ff    	jne    dde9 <dlmalloc+0x959>
    e373:	31 ff                	xor    %edi,%edi
    e375:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    e37a:	e8 31 e6 ff ff       	call   c9b0 <sbrk>
    e37f:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    e384:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    e388:	49 89 c6             	mov    %rax,%r14
    e38b:	0f 84 b8 fa ff ff    	je     de49 <dlmalloc+0x9b9>
    e391:	48 8b 15 f0 cb 01 00 	mov    0x1cbf0(%rip),%rdx        # 2af88 <mparams+0x8>
    e398:	49 89 cf             	mov    %rcx,%r15
    e39b:	48 8d 42 ff          	lea    -0x1(%rdx),%rax
    e39f:	49 85 c6             	test   %rax,%r14
    e3a2:	74 0f                	je     e3b3 <dlmalloc+0xf23>
    e3a4:	4c 01 f0             	add    %r14,%rax
    e3a7:	48 f7 da             	neg    %rdx
    e3aa:	4d 29 f7             	sub    %r14,%r15
    e3ad:	48 21 d0             	and    %rdx,%rax
    e3b0:	49 01 c7             	add    %rax,%r15
    e3b3:	48 8b 05 5e cb 01 00 	mov    0x1cb5e(%rip),%rax        # 2af18 <_gm_+0x358>
    e3ba:	4d 39 fc             	cmp    %r15,%r12
    e3bd:	0f 83 86 fa ff ff    	jae    de49 <dlmalloc+0x9b9>
    e3c3:	48 ba fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rdx
    e3ca:	ff ff 7f 
    e3cd:	4c 39 fa             	cmp    %r15,%rdx
    e3d0:	0f 82 73 fa ff ff    	jb     de49 <dlmalloc+0x9b9>
    e3d6:	48 8b 15 4b cb 01 00 	mov    0x1cb4b(%rip),%rdx        # 2af28 <_gm_+0x368>
    e3dd:	48 85 d2             	test   %rdx,%rdx
    e3e0:	74 16                	je     e3f8 <dlmalloc+0xf68>
    e3e2:	4a 8d 34 38          	lea    (%rax,%r15,1),%rsi
    e3e6:	48 39 f0             	cmp    %rsi,%rax
    e3e9:	0f 83 5a fa ff ff    	jae    de49 <dlmalloc+0x9b9>
    e3ef:	48 39 f2             	cmp    %rsi,%rdx
    e3f2:	0f 82 51 fa ff ff    	jb     de49 <dlmalloc+0x9b9>
    e3f8:	4c 89 ff             	mov    %r15,%rdi
    e3fb:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    e400:	e8 ab e5 ff ff       	call   c9b0 <sbrk>
    e405:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    e40a:	49 39 c6             	cmp    %rax,%r14
    e40d:	48 89 c3             	mov    %rax,%rbx
    e410:	74 3c                	je     e44e <dlmalloc+0xfbe>
    e412:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
    e416:	0f 84 2d fa ff ff    	je     de49 <dlmalloc+0x9b9>
    e41c:	49 8d 44 24 60       	lea    0x60(%r12),%rax
    e421:	49 39 c7             	cmp    %rax,%r15
    e424:	73 28                	jae    e44e <dlmalloc+0xfbe>
    e426:	48 8b 05 63 cb 01 00 	mov    0x1cb63(%rip),%rax        # 2af90 <mparams+0x10>
    e42d:	4d 8d 74 04 5f       	lea    0x5f(%r12,%rax,1),%r14
    e432:	48 f7 d8             	neg    %rax
    e435:	4d 29 fe             	sub    %r15,%r14
    e438:	49 21 c6             	and    %rax,%r14
    e43b:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
    e442:	ff ff 7f 
    e445:	4c 39 f0             	cmp    %r14,%rax
    e448:	0f 83 91 08 00 00    	jae    ecdf <dlmalloc+0x184f>
    e44e:	c7 05 58 cb 01 00 00 	movl   $0x0,0x1cb58(%rip)        # 2afb0 <malloc_global_mutex>
    e455:	00 00 00 
    e458:	e9 83 fa ff ff       	jmp    dee0 <dlmalloc+0xa50>
    e45d:	0f 1f 00             	nopl   (%rax)
    e460:	44 0f bd d0          	bsr    %eax,%r10d
    e464:	b9 26 00 00 00       	mov    $0x26,%ecx
    e469:	4c 89 e0             	mov    %r12,%rax
    e46c:	ba 1f 00 00 00       	mov    $0x1f,%edx
    e471:	41 83 f2 1f          	xor    $0x1f,%r10d
    e475:	44 29 d1             	sub    %r10d,%ecx
    e478:	44 29 d2             	sub    %r10d,%edx
    e47b:	48 d3 e8             	shr    %cl,%rax
    e47e:	83 e0 01             	and    $0x1,%eax
    e481:	8d 04 50             	lea    (%rax,%rdx,2),%eax
    e484:	49 8b 94 c5 58 02 00 	mov    0x258(%r13,%rax,8),%rdx
    e48b:	00 
    e48c:	49 89 c2             	mov    %rax,%r10
    e48f:	48 85 d2             	test   %rdx,%rdx
    e492:	0f 84 72 f8 ff ff    	je     dd0a <dlmalloc+0x87a>
    e498:	83 f8 1f             	cmp    $0x1f,%eax
    e49b:	0f 84 d4 09 00 00    	je     ee75 <dlmalloc+0x19e5>
    e4a1:	d1 e8                	shr    %eax
    e4a3:	b9 39 00 00 00       	mov    $0x39,%ecx
    e4a8:	29 c1                	sub    %eax,%ecx
    e4aa:	e9 13 f4 ff ff       	jmp    d8c2 <dlmalloc+0x432>
    e4af:	48 89 d3             	mov    %rdx,%rbx
    e4b2:	31 ff                	xor    %edi,%edi
    e4b4:	48 89 d1             	mov    %rdx,%rcx
    e4b7:	e9 77 f4 ff ff       	jmp    d933 <dlmalloc+0x4a3>
    e4bc:	4c 89 ff             	mov    %r15,%rdi
    e4bf:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    e4c4:	e8 e7 e4 ff ff       	call   c9b0 <sbrk>
    e4c9:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    e4ce:	48 89 c3             	mov    %rax,%rbx
    e4d1:	49 8b 46 08          	mov    0x8(%r14),%rax
    e4d5:	49 03 06             	add    (%r14),%rax
    e4d8:	48 39 c3             	cmp    %rax,%rbx
    e4db:	0f 85 31 ff ff ff    	jne    e412 <dlmalloc+0xf82>
    e4e1:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
    e4e5:	0f 85 63 ff ff ff    	jne    e44e <dlmalloc+0xfbe>
    e4eb:	e9 59 f9 ff ff       	jmp    de49 <dlmalloc+0x9b9>
    e4f0:	4c 89 f8             	mov    %r15,%rax
    e4f3:	48 89 d9             	mov    %rbx,%rcx
    e4f6:	e9 5b fd ff ff       	jmp    e256 <dlmalloc+0xdc6>
    e4fb:	83 c9 03             	or     $0x3,%ecx
    e4fe:	89 ce                	mov    %ecx,%esi
    e500:	48 89 73 08          	mov    %rsi,0x8(%rbx)
    e504:	48 89 38             	mov    %rdi,(%rax)
    e507:	48 83 48 08 01       	orq    $0x1,0x8(%rax)
    e50c:	e9 b1 f1 ff ff       	jmp    d6c2 <dlmalloc+0x232>
    e511:	b8 01 00 00 00       	mov    $0x1,%eax
    e516:	87 05 94 ca 01 00    	xchg   %eax,0x1ca94(%rip)        # 2afb0 <malloc_global_mutex>
    e51c:	85 c0                	test   %eax,%eax
    e51e:	0f 84 f7 f8 ff ff    	je     de1b <dlmalloc+0x98b>
    e524:	e9 c3 f8 ff ff       	jmp    ddec <dlmalloc+0x95c>
    e529:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    e530:	49 89 d8             	mov    %rbx,%r8
    e533:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
    e537:	41 83 e0 0f          	and    $0xf,%r8d
    e53b:	e9 5b fa ff ff       	jmp    df9b <dlmalloc+0xb0b>
    e540:	4c 01 78 08          	add    %r15,0x8(%rax)
    e544:	49 89 d2             	mov    %rdx,%r10
    e547:	48 89 18             	mov    %rbx,(%rax)
    e54a:	4d 85 c0             	test   %r8,%r8
    e54d:	74 09                	je     e558 <dlmalloc+0x10c8>
    e54f:	48 f7 df             	neg    %rdi
    e552:	83 e7 0f             	and    $0xf,%edi
    e555:	48 01 fb             	add    %rdi,%rbx
    e558:	48 8d 42 10          	lea    0x10(%rdx),%rax
    e55c:	f6 c2 0f             	test   $0xf,%dl
    e55f:	74 0a                	je     e56b <dlmalloc+0x10db>
    e561:	48 f7 d8             	neg    %rax
    e564:	83 e0 0f             	and    $0xf,%eax
    e567:	4c 8d 14 02          	lea    (%rdx,%rax,1),%r10
    e56b:	48 8b 0d 0e ca 01 00 	mov    0x1ca0e(%rip),%rcx        # 2af80 <mparams>
    e572:	4c 89 d0             	mov    %r10,%rax
    e575:	4a 8d 14 23          	lea    (%rbx,%r12,1),%rdx
    e579:	48 29 d8             	sub    %rbx,%rax
    e57c:	4c 29 e0             	sub    %r12,%rax
    e57f:	4c 31 e9             	xor    %r13,%rcx
    e582:	49 83 cc 03          	or     $0x3,%r12
    e586:	4c 89 63 08          	mov    %r12,0x8(%rbx)
    e58a:	48 89 0a             	mov    %rcx,(%rdx)
    e58d:	4c 39 d6             	cmp    %r10,%rsi
    e590:	0f 84 38 04 00 00    	je     e9ce <dlmalloc+0x153e>
    e596:	4c 39 15 43 c6 01 00 	cmp    %r10,0x1c643(%rip)        # 2abe0 <_gm_+0x20>
    e59d:	0f 84 49 05 00 00    	je     eaec <dlmalloc+0x165c>
    e5a3:	49 8b 72 08          	mov    0x8(%r10),%rsi
    e5a7:	4c 89 d1             	mov    %r10,%rcx
    e5aa:	48 89 f7             	mov    %rsi,%rdi
    e5ad:	83 e7 03             	and    $0x3,%edi
    e5b0:	48 83 ff 01          	cmp    $0x1,%rdi
    e5b4:	0f 84 a2 05 00 00    	je     eb5c <dlmalloc+0x16cc>
    e5ba:	48 83 e6 fe          	and    $0xfffffffffffffffe,%rsi
    e5be:	49 89 72 08          	mov    %rsi,0x8(%r10)
    e5c2:	48 89 c6             	mov    %rax,%rsi
    e5c5:	48 83 ce 01          	or     $0x1,%rsi
    e5c9:	48 89 72 08          	mov    %rsi,0x8(%rdx)
    e5cd:	48 89 01             	mov    %rax,(%rcx)
    e5d0:	48 89 c1             	mov    %rax,%rcx
    e5d3:	48 c1 e9 03          	shr    $0x3,%rcx
    e5d7:	48 3d ff 00 00 00    	cmp    $0xff,%rax
    e5dd:	0f 87 42 04 00 00    	ja     ea25 <dlmalloc+0x1595>
    e5e3:	bf 01 00 00 00       	mov    $0x1,%edi
    e5e8:	8b 35 d2 c5 01 00    	mov    0x1c5d2(%rip),%esi        # 2abc0 <_gm_>
    e5ee:	8d 44 09 09          	lea    0x9(%rcx,%rcx,1),%eax
    e5f2:	d3 e7                	shl    %cl,%edi
    e5f4:	49 8d 44 c5 00       	lea    0x0(%r13,%rax,8),%rax
    e5f9:	85 fe                	test   %edi,%esi
    e5fb:	0f 85 08 06 00 00    	jne    ec09 <dlmalloc+0x1779>
    e601:	09 fe                	or     %edi,%esi
    e603:	48 89 c1             	mov    %rax,%rcx
    e606:	89 35 b4 c5 01 00    	mov    %esi,0x1c5b4(%rip)        # 2abc0 <_gm_>
    e60c:	48 89 50 10          	mov    %rdx,0x10(%rax)
    e610:	48 89 51 18          	mov    %rdx,0x18(%rcx)
    e614:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
    e618:	48 89 42 18          	mov    %rax,0x18(%rdx)
    e61c:	e9 a1 f0 ff ff       	jmp    d6c2 <dlmalloc+0x232>
    e621:	bf 01 00 00 00       	mov    $0x1,%edi
    e626:	41 b8 58 02 00 00    	mov    $0x258,%r8d
    e62c:	e9 cd fc ff ff       	jmp    e2fe <dlmalloc+0xe6e>
    e631:	89 c8                	mov    %ecx,%eax
    e633:	49 89 d0             	mov    %rdx,%r8
    e636:	49 8b bc c5 58 02 00 	mov    0x258(%r13,%rax,8),%rdi
    e63d:	00 
    e63e:	83 f9 1f             	cmp    $0x1f,%ecx
    e641:	74 33                	je     e676 <dlmalloc+0x11e6>
    e643:	89 c8                	mov    %ecx,%eax
    e645:	b9 39 00 00 00       	mov    $0x39,%ecx
    e64a:	d1 e8                	shr    %eax
    e64c:	29 c1                	sub    %eax,%ecx
    e64e:	49 d3 e0             	shl    %cl,%r8
    e651:	eb 23                	jmp    e676 <dlmalloc+0x11e6>
    e653:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    e658:	4c 89 c0             	mov    %r8,%rax
    e65b:	4d 01 c0             	add    %r8,%r8
    e65e:	48 c1 e8 3f          	shr    $0x3f,%rax
    e662:	48 83 c0 04          	add    $0x4,%rax
    e666:	48 8b 0c c7          	mov    (%rdi,%rax,8),%rcx
    e66a:	48 85 c9             	test   %rcx,%rcx
    e66d:	0f 84 1b 02 00 00    	je     e88e <dlmalloc+0x13fe>
    e673:	48 89 cf             	mov    %rcx,%rdi
    e676:	48 8b 47 08          	mov    0x8(%rdi),%rax
    e67a:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    e67e:	48 39 c2             	cmp    %rax,%rdx
    e681:	75 d5                	jne    e658 <dlmalloc+0x11c8>
    e683:	48 8b 47 10          	mov    0x10(%rdi),%rax
    e687:	48 8b 15 4a c5 01 00 	mov    0x1c54a(%rip),%rdx        # 2abd8 <_gm_+0x18>
    e68e:	66 48 0f 6e e7       	movq   %rdi,%xmm4
    e693:	66 48 0f 6e c0       	movq   %rax,%xmm0
    e698:	66 0f 6c c4          	punpcklqdq %xmm4,%xmm0
    e69c:	48 39 d7             	cmp    %rdx,%rdi
    e69f:	0f 82 4b f4 ff ff    	jb     daf0 <dlmalloc+0x660>
    e6a5:	48 39 d0             	cmp    %rdx,%rax
    e6a8:	0f 82 42 f4 ff ff    	jb     daf0 <dlmalloc+0x660>
    e6ae:	48 89 70 18          	mov    %rsi,0x18(%rax)
    e6b2:	48 8b 05 17 c5 01 00 	mov    0x1c517(%rip),%rax        # 2abd0 <_gm_+0x10>
    e6b9:	48 89 77 10          	mov    %rsi,0x10(%rdi)
    e6bd:	48 c7 46 30 00 00 00 	movq   $0x0,0x30(%rsi)
    e6c4:	00 
    e6c5:	0f 11 46 10          	movups %xmm0,0x10(%rsi)
    e6c9:	e9 90 fa ff ff       	jmp    e15e <dlmalloc+0xcce>
    e6ce:	48 8b 43 28          	mov    0x28(%rbx),%rax
    e6d2:	48 8d 53 28          	lea    0x28(%rbx),%rdx
    e6d6:	48 85 c0             	test   %rax,%rax
    e6d9:	0f 84 11 03 00 00    	je     e9f0 <dlmalloc+0x1560>
    e6df:	90                   	nop
    e6e0:	48 89 d6             	mov    %rdx,%rsi
    e6e3:	48 89 c1             	mov    %rax,%rcx
    e6e6:	48 8d 50 28          	lea    0x28(%rax),%rdx
    e6ea:	48 8b 40 28          	mov    0x28(%rax),%rax
    e6ee:	48 85 c0             	test   %rax,%rax
    e6f1:	75 ed                	jne    e6e0 <dlmalloc+0x1250>
    e6f3:	48 8b 41 20          	mov    0x20(%rcx),%rax
    e6f7:	48 8d 51 20          	lea    0x20(%rcx),%rdx
    e6fb:	48 85 c0             	test   %rax,%rax
    e6fe:	75 e0                	jne    e6e0 <dlmalloc+0x1250>
    e700:	4c 39 de             	cmp    %r11,%rsi
    e703:	0f 82 e7 f3 ff ff    	jb     daf0 <dlmalloc+0x660>
    e709:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
    e710:	4d 85 ff             	test   %r15,%r15
    e713:	0f 84 27 f3 ff ff    	je     da40 <dlmalloc+0x5b0>
    e719:	41 8b 46 38          	mov    0x38(%r14),%eax
    e71d:	48 8d 50 4a          	lea    0x4a(%rax),%rdx
    e721:	4d 3b b4 c5 58 02 00 	cmp    0x258(%r13,%rax,8),%r14
    e728:	00 
    e729:	0f 84 9e 04 00 00    	je     ebcd <dlmalloc+0x173d>
    e72f:	4d 39 df             	cmp    %r11,%r15
    e732:	0f 82 b8 f3 ff ff    	jb     daf0 <dlmalloc+0x660>
    e738:	49 3b 5f 20          	cmp    0x20(%r15),%rbx
    e73c:	0f 84 cb 05 00 00    	je     ed0d <dlmalloc+0x187d>
    e742:	49 89 4f 28          	mov    %rcx,0x28(%r15)
    e746:	49 89 ce             	mov    %rcx,%r14
    e749:	e9 b1 f2 ff ff       	jmp    d9ff <dlmalloc+0x56f>
    e74e:	49 8d 04 3c          	lea    (%r12,%rdi,1),%rax
    e752:	48 89 c1             	mov    %rax,%rcx
    e755:	48 01 d8             	add    %rbx,%rax
    e758:	48 83 c9 03          	or     $0x3,%rcx
    e75c:	48 89 4b 08          	mov    %rcx,0x8(%rbx)
    e760:	48 83 48 08 01       	orq    $0x1,0x8(%rax)
    e765:	48 89 10             	mov    %rdx,(%rax)
    e768:	e9 4f f3 ff ff       	jmp    dabc <dlmalloc+0x62c>
    e76d:	48 89 fa             	mov    %rdi,%rdx
    e770:	48 c1 ea 08          	shr    $0x8,%rdx
    e774:	89 d0                	mov    %edx,%eax
    e776:	85 d2                	test   %edx,%edx
    e778:	0f 84 20 02 00 00    	je     e99e <dlmalloc+0x150e>
    e77e:	81 fa ff ff 00 00    	cmp    $0xffff,%edx
    e784:	0f 87 be 03 00 00    	ja     eb48 <dlmalloc+0x16b8>
    e78a:	0f bd c0             	bsr    %eax,%eax
    e78d:	b9 26 00 00 00       	mov    $0x26,%ecx
    e792:	48 89 fa             	mov    %rdi,%rdx
    e795:	83 f0 1f             	xor    $0x1f,%eax
    e798:	29 c1                	sub    %eax,%ecx
    e79a:	48 d3 ea             	shr    %cl,%rdx
    e79d:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    e7a2:	83 e2 01             	and    $0x1,%edx
    e7a5:	29 c1                	sub    %eax,%ecx
    e7a7:	8d 04 4a             	lea    (%rdx,%rcx,2),%eax
    e7aa:	ba 01 00 00 00       	mov    $0x1,%edx
    e7af:	89 c1                	mov    %eax,%ecx
    e7b1:	8d 70 4b             	lea    0x4b(%rax),%esi
    e7b4:	d3 e2                	shl    %cl,%edx
    e7b6:	48 c1 e6 03          	shl    $0x3,%rsi
    e7ba:	89 d1                	mov    %edx,%ecx
    e7bc:	8b 15 02 c4 01 00    	mov    0x1c402(%rip),%edx        # 2abc4 <_gm_+0x4>
    e7c2:	66 49 0f 6e ca       	movq   %r10,%xmm1
    e7c7:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e7cb:	41 89 42 38          	mov    %eax,0x38(%r10)
    e7cf:	66 0f 6c c9          	punpcklqdq %xmm1,%xmm1
    e7d3:	41 0f 11 42 20       	movups %xmm0,0x20(%r10)
    e7d8:	85 ca                	test   %ecx,%edx
    e7da:	0f 84 db 02 00 00    	je     eabb <dlmalloc+0x162b>
    e7e0:	89 c2                	mov    %eax,%edx
    e7e2:	48 89 fe             	mov    %rdi,%rsi
    e7e5:	49 8b 94 d5 58 02 00 	mov    0x258(%r13,%rdx,8),%rdx
    e7ec:	00 
    e7ed:	83 f8 1f             	cmp    $0x1f,%eax
    e7f0:	74 2c                	je     e81e <dlmalloc+0x138e>
    e7f2:	d1 e8                	shr    %eax
    e7f4:	b9 39 00 00 00       	mov    $0x39,%ecx
    e7f9:	29 c1                	sub    %eax,%ecx
    e7fb:	48 d3 e6             	shl    %cl,%rsi
    e7fe:	eb 1e                	jmp    e81e <dlmalloc+0x138e>
    e800:	48 89 f0             	mov    %rsi,%rax
    e803:	48 01 f6             	add    %rsi,%rsi
    e806:	48 c1 e8 3f          	shr    $0x3f,%rax
    e80a:	48 83 c0 04          	add    $0x4,%rax
    e80e:	48 8b 0c c2          	mov    (%rdx,%rax,8),%rcx
    e812:	48 85 c9             	test   %rcx,%rcx
    e815:	0f 84 fa 02 00 00    	je     eb15 <dlmalloc+0x1685>
    e81b:	48 89 ca             	mov    %rcx,%rdx
    e81e:	48 8b 42 08          	mov    0x8(%rdx),%rax
    e822:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    e826:	48 39 f8             	cmp    %rdi,%rax
    e829:	75 d5                	jne    e800 <dlmalloc+0x1370>
    e82b:	48 8b 42 10          	mov    0x10(%rdx),%rax
    e82f:	66 48 0f 6e ea       	movq   %rdx,%xmm5
    e834:	66 48 0f 6e c0       	movq   %rax,%xmm0
    e839:	66 0f 6c c5          	punpcklqdq %xmm5,%xmm0
    e83d:	4c 39 da             	cmp    %r11,%rdx
    e840:	0f 82 aa f2 ff ff    	jb     daf0 <dlmalloc+0x660>
    e846:	4c 39 d8             	cmp    %r11,%rax
    e849:	0f 82 a1 f2 ff ff    	jb     daf0 <dlmalloc+0x660>
    e84f:	4c 89 50 18          	mov    %r10,0x18(%rax)
    e853:	4c 89 52 10          	mov    %r10,0x10(%rdx)
    e857:	49 c7 42 30 00 00 00 	movq   $0x0,0x30(%r10)
    e85e:	00 
    e85f:	41 0f 11 42 10       	movups %xmm0,0x10(%r10)
    e864:	e9 53 f2 ff ff       	jmp    dabc <dlmalloc+0x62c>
    e869:	09 fe                	or     %edi,%esi
    e86b:	4c 89 c1             	mov    %r8,%rcx
    e86e:	89 35 4c c3 01 00    	mov    %esi,0x1c34c(%rip)        # 2abc0 <_gm_>
    e874:	e9 58 ef ff ff       	jmp    d7d1 <dlmalloc+0x341>
    e879:	bf 00 00 00 80       	mov    $0x80000000,%edi
    e87e:	41 b8 50 03 00 00    	mov    $0x350,%r8d
    e884:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    e889:	e9 70 fa ff ff       	jmp    e2fe <dlmalloc+0xe6e>
    e88e:	48 8d 14 c7          	lea    (%rdi,%rax,8),%rdx
    e892:	48 3b 15 3f c3 01 00 	cmp    0x1c33f(%rip),%rdx        # 2abd8 <_gm_+0x18>
    e899:	0f 82 51 f2 ff ff    	jb     daf0 <dlmalloc+0x660>
    e89f:	48 89 34 c7          	mov    %rsi,(%rdi,%rax,8)
    e8a3:	48 8b 05 26 c3 01 00 	mov    0x1c326(%rip),%rax        # 2abd0 <_gm_+0x10>
    e8aa:	48 89 7e 30          	mov    %rdi,0x30(%rsi)
    e8ae:	0f 11 4e 10          	movups %xmm1,0x10(%rsi)
    e8b2:	e9 a7 f8 ff ff       	jmp    e15e <dlmalloc+0xcce>
    e8b7:	48 8b 43 28          	mov    0x28(%rbx),%rax
    e8bb:	48 8d 4b 28          	lea    0x28(%rbx),%rcx
    e8bf:	48 85 c0             	test   %rax,%rax
    e8c2:	0f 84 f8 03 00 00    	je     ecc0 <dlmalloc+0x1830>
    e8c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    e8cf:	00 
    e8d0:	49 89 c9             	mov    %rcx,%r9
    e8d3:	49 89 c0             	mov    %rax,%r8
    e8d6:	48 8d 48 28          	lea    0x28(%rax),%rcx
    e8da:	48 8b 40 28          	mov    0x28(%rax),%rax
    e8de:	48 85 c0             	test   %rax,%rax
    e8e1:	75 ed                	jne    e8d0 <dlmalloc+0x1440>
    e8e3:	49 8b 40 20          	mov    0x20(%r8),%rax
    e8e7:	49 8d 48 20          	lea    0x20(%r8),%rcx
    e8eb:	48 85 c0             	test   %rax,%rax
    e8ee:	75 e0                	jne    e8d0 <dlmalloc+0x1440>
    e8f0:	4d 39 d9             	cmp    %r11,%r9
    e8f3:	0f 82 f7 f1 ff ff    	jb     daf0 <dlmalloc+0x660>
    e8f9:	49 c7 01 00 00 00 00 	movq   $0x0,(%r9)
    e900:	4d 85 f6             	test   %r14,%r14
    e903:	0f 84 17 f3 ff ff    	je     dc20 <dlmalloc+0x790>
    e909:	8b 43 38             	mov    0x38(%rbx),%eax
    e90c:	48 8d 48 4a          	lea    0x4a(%rax),%rcx
    e910:	49 3b 9c c5 58 02 00 	cmp    0x258(%r13,%rax,8),%rbx
    e917:	00 
    e918:	0f 84 0e 05 00 00    	je     ee2c <dlmalloc+0x199c>
    e91e:	4d 39 de             	cmp    %r11,%r14
    e921:	0f 82 c9 f1 ff ff    	jb     daf0 <dlmalloc+0x660>
    e927:	49 3b 5e 20          	cmp    0x20(%r14),%rbx
    e92b:	0f 84 3b 05 00 00    	je     ee6c <dlmalloc+0x19dc>
    e931:	4d 89 46 28          	mov    %r8,0x28(%r14)
    e935:	e9 a5 f2 ff ff       	jmp    dbdf <dlmalloc+0x74f>
    e93a:	4c 01 f9             	add    %r15,%rcx
    e93d:	4c 03 3d 8c c2 01 00 	add    0x1c28c(%rip),%r15        # 2abd0 <_gm_+0x10>
    e944:	48 89 48 08          	mov    %rcx,0x8(%rax)
    e948:	48 8d 46 10          	lea    0x10(%rsi),%rax
    e94c:	40 f6 c6 0f          	test   $0xf,%sil
    e950:	0f 84 e7 01 00 00    	je     eb3d <dlmalloc+0x16ad>
    e956:	48 f7 d8             	neg    %rax
    e959:	83 e0 0f             	and    $0xf,%eax
    e95c:	48 89 c2             	mov    %rax,%rdx
    e95f:	48 8d 0c 06          	lea    (%rsi,%rax,1),%rcx
    e963:	4c 89 f8             	mov    %r15,%rax
    e966:	48 29 d0             	sub    %rdx,%rax
    e969:	48 89 c2             	mov    %rax,%rdx
    e96c:	48 89 0d 75 c2 01 00 	mov    %rcx,0x1c275(%rip)        # 2abe8 <_gm_+0x28>
    e973:	48 83 ca 01          	or     $0x1,%rdx
    e977:	48 89 05 52 c2 01 00 	mov    %rax,0x1c252(%rip)        # 2abd0 <_gm_+0x10>
    e97e:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    e982:	48 8b 15 17 c6 01 00 	mov    0x1c617(%rip),%rdx        # 2afa0 <mparams+0x20>
    e989:	4a c7 44 3e 08 50 00 	movq   $0x50,0x8(%rsi,%r15,1)
    e990:	00 00 
    e992:	48 89 15 57 c2 01 00 	mov    %rdx,0x1c257(%rip)        # 2abf0 <_gm_+0x30>
    e999:	e9 c0 f7 ff ff       	jmp    e15e <dlmalloc+0xcce>
    e99e:	b9 01 00 00 00       	mov    $0x1,%ecx
    e9a3:	be 58 02 00 00       	mov    $0x258,%esi
    e9a8:	e9 0f fe ff ff       	jmp    e7bc <dlmalloc+0x132c>
    e9ad:	4d 89 b4 d5 58 02 00 	mov    %r14,0x258(%r13,%rdx,8)
    e9b4:	00 
    e9b5:	4d 85 f6             	test   %r14,%r14
    e9b8:	0f 85 41 f0 ff ff    	jne    d9ff <dlmalloc+0x56f>
    e9be:	41 0f b3 c1          	btr    %eax,%r9d
    e9c2:	44 89 0d fb c1 01 00 	mov    %r9d,0x1c1fb(%rip)        # 2abc4 <_gm_+0x4>
    e9c9:	e9 72 f0 ff ff       	jmp    da40 <dlmalloc+0x5b0>
    e9ce:	48 03 05 fb c1 01 00 	add    0x1c1fb(%rip),%rax        # 2abd0 <_gm_+0x10>
    e9d5:	48 89 15 0c c2 01 00 	mov    %rdx,0x1c20c(%rip)        # 2abe8 <_gm_+0x28>
    e9dc:	48 89 05 ed c1 01 00 	mov    %rax,0x1c1ed(%rip)        # 2abd0 <_gm_+0x10>
    e9e3:	48 83 c8 01          	or     $0x1,%rax
    e9e7:	48 89 42 08          	mov    %rax,0x8(%rdx)
    e9eb:	e9 d2 ec ff ff       	jmp    d6c2 <dlmalloc+0x232>
    e9f0:	48 8b 43 20          	mov    0x20(%rbx),%rax
    e9f4:	48 85 c0             	test   %rax,%rax
    e9f7:	0f 84 f0 03 00 00    	je     eded <dlmalloc+0x195d>
    e9fd:	48 8d 53 20          	lea    0x20(%rbx),%rdx
    ea01:	e9 da fc ff ff       	jmp    e6e0 <dlmalloc+0x1250>
    ea06:	49 8d 14 3c          	lea    (%r12,%rdi,1),%rdx
    ea0a:	48 89 d1             	mov    %rdx,%rcx
    ea0d:	48 01 da             	add    %rbx,%rdx
    ea10:	48 83 c9 03          	or     $0x3,%rcx
    ea14:	48 89 4b 08          	mov    %rcx,0x8(%rbx)
    ea18:	48 83 4a 08 01       	orq    $0x1,0x8(%rdx)
    ea1d:	48 89 02             	mov    %rax,(%rdx)
    ea20:	e9 85 f2 ff ff       	jmp    dcaa <dlmalloc+0x81a>
    ea25:	48 89 c6             	mov    %rax,%rsi
    ea28:	48 c1 ee 08          	shr    $0x8,%rsi
    ea2c:	89 f1                	mov    %esi,%ecx
    ea2e:	85 f6                	test   %esi,%esi
    ea30:	0f 84 7b 02 00 00    	je     ecb1 <dlmalloc+0x1821>
    ea36:	81 fe ff ff 00 00    	cmp    $0xffff,%esi
    ea3c:	0f 87 16 04 00 00    	ja     ee58 <dlmalloc+0x19c8>
    ea42:	0f bd c9             	bsr    %ecx,%ecx
    ea45:	48 89 c7             	mov    %rax,%rdi
    ea48:	89 ce                	mov    %ecx,%esi
    ea4a:	b9 26 00 00 00       	mov    $0x26,%ecx
    ea4f:	83 f6 1f             	xor    $0x1f,%esi
    ea52:	29 f1                	sub    %esi,%ecx
    ea54:	48 d3 ef             	shr    %cl,%rdi
    ea57:	48 89 f9             	mov    %rdi,%rcx
    ea5a:	bf 1f 00 00 00       	mov    $0x1f,%edi
    ea5f:	29 f7                	sub    %esi,%edi
    ea61:	83 e1 01             	and    $0x1,%ecx
    ea64:	8d 0c 79             	lea    (%rcx,%rdi,2),%ecx
    ea67:	bf 01 00 00 00       	mov    $0x1,%edi
    ea6c:	8d 71 4b             	lea    0x4b(%rcx),%esi
    ea6f:	d3 e7                	shl    %cl,%edi
    ea71:	48 c1 e6 03          	shl    $0x3,%rsi
    ea75:	44 8b 05 48 c1 01 00 	mov    0x1c148(%rip),%r8d        # 2abc4 <_gm_+0x4>
    ea7c:	66 48 0f 6e c2       	movq   %rdx,%xmm0
    ea81:	66 0f ef c9          	pxor   %xmm1,%xmm1
    ea85:	89 4a 38             	mov    %ecx,0x38(%rdx)
    ea88:	66 0f 6c c0          	punpcklqdq %xmm0,%xmm0
    ea8c:	0f 11 4a 20          	movups %xmm1,0x20(%rdx)
    ea90:	41 85 f8             	test   %edi,%r8d
    ea93:	0f 85 86 01 00 00    	jne    ec1f <dlmalloc+0x178f>
    ea99:	41 09 f8             	or     %edi,%r8d
    ea9c:	4c 01 ee             	add    %r13,%rsi
    ea9f:	49 89 94 cd 58 02 00 	mov    %rdx,0x258(%r13,%rcx,8)
    eaa6:	00 
    eaa7:	44 89 05 16 c1 01 00 	mov    %r8d,0x1c116(%rip)        # 2abc4 <_gm_+0x4>
    eaae:	48 89 72 30          	mov    %rsi,0x30(%rdx)
    eab2:	0f 11 42 10          	movups %xmm0,0x10(%rdx)
    eab6:	e9 07 ec ff ff       	jmp    d6c2 <dlmalloc+0x232>
    eabb:	09 ca                	or     %ecx,%edx
    eabd:	4c 01 ee             	add    %r13,%rsi
    eac0:	4d 89 94 c5 58 02 00 	mov    %r10,0x258(%r13,%rax,8)
    eac7:	00 
    eac8:	89 15 f6 c0 01 00    	mov    %edx,0x1c0f6(%rip)        # 2abc4 <_gm_+0x4>
    eace:	49 89 72 30          	mov    %rsi,0x30(%r10)
    ead2:	41 0f 11 4a 10       	movups %xmm1,0x10(%r10)
    ead7:	e9 e0 ef ff ff       	jmp    dabc <dlmalloc+0x62c>
    eadc:	09 c6                	or     %eax,%esi
    eade:	48 89 d0             	mov    %rdx,%rax
    eae1:	89 35 d9 c0 01 00    	mov    %esi,0x1c0d9(%rip)        # 2abc0 <_gm_>
    eae7:	e9 c0 ef ff ff       	jmp    daac <dlmalloc+0x61c>
    eaec:	48 03 05 d5 c0 01 00 	add    0x1c0d5(%rip),%rax        # 2abc8 <_gm_+0x8>
    eaf3:	48 89 15 e6 c0 01 00 	mov    %rdx,0x1c0e6(%rip)        # 2abe0 <_gm_+0x20>
    eafa:	48 89 c1             	mov    %rax,%rcx
    eafd:	48 89 05 c4 c0 01 00 	mov    %rax,0x1c0c4(%rip)        # 2abc8 <_gm_+0x8>
    eb04:	48 83 c9 01          	or     $0x1,%rcx
    eb08:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
    eb0c:	48 89 04 02          	mov    %rax,(%rdx,%rax,1)
    eb10:	e9 ad eb ff ff       	jmp    d6c2 <dlmalloc+0x232>
    eb15:	48 8d 0c c2          	lea    (%rdx,%rax,8),%rcx
    eb19:	4c 39 d9             	cmp    %r11,%rcx
    eb1c:	0f 82 ce ef ff ff    	jb     daf0 <dlmalloc+0x660>
    eb22:	4c 89 14 c2          	mov    %r10,(%rdx,%rax,8)
    eb26:	49 89 52 30          	mov    %rdx,0x30(%r10)
    eb2a:	41 0f 11 4a 10       	movups %xmm1,0x10(%r10)
    eb2f:	e9 88 ef ff ff       	jmp    dabc <dlmalloc+0x62c>
    eb34:	4d 89 77 20          	mov    %r14,0x20(%r15)
    eb38:	e9 bd ee ff ff       	jmp    d9fa <dlmalloc+0x56a>
    eb3d:	4c 89 f8             	mov    %r15,%rax
    eb40:	48 89 f1             	mov    %rsi,%rcx
    eb43:	e9 21 fe ff ff       	jmp    e969 <dlmalloc+0x14d9>
    eb48:	b9 00 00 00 80       	mov    $0x80000000,%ecx
    eb4d:	be 50 03 00 00       	mov    $0x350,%esi
    eb52:	b8 1f 00 00 00       	mov    $0x1f,%eax
    eb57:	e9 60 fc ff ff       	jmp    e7bc <dlmalloc+0x132c>
    eb5c:	49 89 f0             	mov    %rsi,%r8
    eb5f:	48 89 f1             	mov    %rsi,%rcx
    eb62:	49 83 e0 f8          	and    $0xfffffffffffffff8,%r8
    eb66:	48 c1 e9 03          	shr    $0x3,%rcx
    eb6a:	48 81 fe ff 00 00 00 	cmp    $0xff,%rsi
    eb71:	0f 87 9f 01 00 00    	ja     ed16 <dlmalloc+0x1886>
    eb77:	44 8d 5c 09 09       	lea    0x9(%rcx,%rcx,1),%r11d
    eb7c:	49 8b 7a 10          	mov    0x10(%r10),%rdi
    eb80:	49 8b 72 18          	mov    0x18(%r10),%rsi
    eb84:	4f 8d 5c dd 00       	lea    0x0(%r13,%r11,8),%r11
    eb89:	4c 39 df             	cmp    %r11,%rdi
    eb8c:	0f 85 84 03 00 00    	jne    ef16 <dlmalloc+0x1a86>
    eb92:	48 39 fe             	cmp    %rdi,%rsi
    eb95:	0f 84 69 03 00 00    	je     ef04 <dlmalloc+0x1a74>
    eb9b:	48 3b 35 36 c0 01 00 	cmp    0x1c036(%rip),%rsi        # 2abd8 <_gm_+0x18>
    eba2:	0f 82 48 ef ff ff    	jb     daf0 <dlmalloc+0x660>
    eba8:	4c 39 56 10          	cmp    %r10,0x10(%rsi)
    ebac:	0f 85 3e ef ff ff    	jne    daf0 <dlmalloc+0x660>
    ebb2:	48 89 77 18          	mov    %rsi,0x18(%rdi)
    ebb6:	48 89 7e 10          	mov    %rdi,0x10(%rsi)
    ebba:	4d 01 c2             	add    %r8,%r10
    ebbd:	4c 01 c0             	add    %r8,%rax
    ebc0:	49 8b 72 08          	mov    0x8(%r10),%rsi
    ebc4:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    ebc8:	e9 ed f9 ff ff       	jmp    e5ba <dlmalloc+0x112a>
    ebcd:	49 89 4c d5 08       	mov    %rcx,0x8(%r13,%rdx,8)
    ebd2:	e9 6f fb ff ff       	jmp    e746 <dlmalloc+0x12b6>
    ebd7:	4d 89 84 cd 58 02 00 	mov    %r8,0x258(%r13,%rcx,8)
    ebde:	00 
    ebdf:	4d 85 c0             	test   %r8,%r8
    ebe2:	0f 85 f7 ef ff ff    	jne    dbdf <dlmalloc+0x74f>
    ebe8:	41 0f b3 c1          	btr    %eax,%r9d
    ebec:	44 89 0d d1 bf 01 00 	mov    %r9d,0x1bfd1(%rip)        # 2abc4 <_gm_+0x4>
    ebf3:	e9 28 f0 ff ff       	jmp    dc20 <dlmalloc+0x790>
    ebf8:	44 09 c2             	or     %r8d,%edx
    ebfb:	89 15 bf bf 01 00    	mov    %edx,0x1bfbf(%rip)        # 2abc0 <_gm_>
    ec01:	4c 89 ca             	mov    %r9,%rdx
    ec04:	e9 83 f0 ff ff       	jmp    dc8c <dlmalloc+0x7fc>
    ec09:	48 8b 48 10          	mov    0x10(%rax),%rcx
    ec0d:	48 3b 0d c4 bf 01 00 	cmp    0x1bfc4(%rip),%rcx        # 2abd8 <_gm_+0x18>
    ec14:	0f 83 f2 f9 ff ff    	jae    e60c <dlmalloc+0x117c>
    ec1a:	e9 d1 ee ff ff       	jmp    daf0 <dlmalloc+0x660>
    ec1f:	89 ce                	mov    %ecx,%esi
    ec21:	49 8b b4 f5 58 02 00 	mov    0x258(%r13,%rsi,8),%rsi
    ec28:	00 
    ec29:	83 f9 1f             	cmp    $0x1f,%ecx
    ec2c:	74 0b                	je     ec39 <dlmalloc+0x17a9>
    ec2e:	d1 e9                	shr    %ecx
    ec30:	41 b9 39 00 00 00    	mov    $0x39,%r9d
    ec36:	41 29 c9             	sub    %ecx,%r9d
    ec39:	48 89 c7             	mov    %rax,%rdi
    ec3c:	44 89 c9             	mov    %r9d,%ecx
    ec3f:	48 d3 e7             	shl    %cl,%rdi
    ec42:	eb 1e                	jmp    ec62 <dlmalloc+0x17d2>
    ec44:	48 89 f9             	mov    %rdi,%rcx
    ec47:	48 01 ff             	add    %rdi,%rdi
    ec4a:	48 c1 e9 3f          	shr    $0x3f,%rcx
    ec4e:	48 83 c1 04          	add    $0x4,%rcx
    ec52:	4c 8b 04 ce          	mov    (%rsi,%rcx,8),%r8
    ec56:	4d 85 c0             	test   %r8,%r8
    ec59:	0f 84 d7 01 00 00    	je     ee36 <dlmalloc+0x19a6>
    ec5f:	4c 89 c6             	mov    %r8,%rsi
    ec62:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    ec66:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    ec6a:	48 39 c8             	cmp    %rcx,%rax
    ec6d:	75 d5                	jne    ec44 <dlmalloc+0x17b4>
    ec6f:	48 8b 46 10          	mov    0x10(%rsi),%rax
    ec73:	48 8b 0d 5e bf 01 00 	mov    0x1bf5e(%rip),%rcx        # 2abd8 <_gm_+0x18>
    ec7a:	66 48 0f 6e f6       	movq   %rsi,%xmm6
    ec7f:	66 48 0f 6e c0       	movq   %rax,%xmm0
    ec84:	66 0f 6c c6          	punpcklqdq %xmm6,%xmm0
    ec88:	48 39 c8             	cmp    %rcx,%rax
    ec8b:	0f 82 5f ee ff ff    	jb     daf0 <dlmalloc+0x660>
    ec91:	48 39 ce             	cmp    %rcx,%rsi
    ec94:	0f 82 56 ee ff ff    	jb     daf0 <dlmalloc+0x660>
    ec9a:	48 89 50 18          	mov    %rdx,0x18(%rax)
    ec9e:	31 c0                	xor    %eax,%eax
    eca0:	48 89 56 10          	mov    %rdx,0x10(%rsi)
    eca4:	48 89 42 30          	mov    %rax,0x30(%rdx)
    eca8:	0f 11 42 10          	movups %xmm0,0x10(%rdx)
    ecac:	e9 11 ea ff ff       	jmp    d6c2 <dlmalloc+0x232>
    ecb1:	bf 01 00 00 00       	mov    $0x1,%edi
    ecb6:	be 58 02 00 00       	mov    $0x258,%esi
    ecbb:	e9 b5 fd ff ff       	jmp    ea75 <dlmalloc+0x15e5>
    ecc0:	48 8b 43 20          	mov    0x20(%rbx),%rax
    ecc4:	48 85 c0             	test   %rax,%rax
    ecc7:	0f 84 b0 01 00 00    	je     ee7d <dlmalloc+0x19ed>
    eccd:	48 8d 4b 20          	lea    0x20(%rbx),%rcx
    ecd1:	e9 fa fb ff ff       	jmp    e8d0 <dlmalloc+0x1440>
    ecd6:	4d 89 46 20          	mov    %r8,0x20(%r14)
    ecda:	e9 fb ee ff ff       	jmp    dbda <dlmalloc+0x74a>
    ecdf:	4c 89 f7             	mov    %r14,%rdi
    ece2:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    ece7:	e8 c4 dc ff ff       	call   c9b0 <sbrk>
    ecec:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    ecf1:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    ecf5:	0f 84 5b 02 00 00    	je     ef56 <dlmalloc+0x1ac6>
    ecfb:	4d 01 f7             	add    %r14,%r15
    ecfe:	c7 05 a8 c2 01 00 00 	movl   $0x0,0x1c2a8(%rip)        # 2afb0 <malloc_global_mutex>
    ed05:	00 00 00 
    ed08:	e9 d3 f1 ff ff       	jmp    dee0 <dlmalloc+0xa50>
    ed0d:	49 89 4f 20          	mov    %rcx,0x20(%r15)
    ed11:	e9 30 fa ff ff       	jmp    e746 <dlmalloc+0x12b6>
    ed16:	49 8b 72 18          	mov    0x18(%r10),%rsi
    ed1a:	4d 8b 62 30          	mov    0x30(%r10),%r12
    ed1e:	4c 39 d6             	cmp    %r10,%rsi
    ed21:	0f 84 96 01 00 00    	je     eebd <dlmalloc+0x1a2d>
    ed27:	49 8b 4a 10          	mov    0x10(%r10),%rcx
    ed2b:	48 3b 0d a6 be 01 00 	cmp    0x1bea6(%rip),%rcx        # 2abd8 <_gm_+0x18>
    ed32:	0f 82 b8 ed ff ff    	jb     daf0 <dlmalloc+0x660>
    ed38:	4c 39 51 18          	cmp    %r10,0x18(%rcx)
    ed3c:	0f 85 ae ed ff ff    	jne    daf0 <dlmalloc+0x660>
    ed42:	4c 39 56 10          	cmp    %r10,0x10(%rsi)
    ed46:	0f 85 a4 ed ff ff    	jne    daf0 <dlmalloc+0x660>
    ed4c:	48 89 71 18          	mov    %rsi,0x18(%rcx)
    ed50:	48 89 4e 10          	mov    %rcx,0x10(%rsi)
    ed54:	4d 85 e4             	test   %r12,%r12
    ed57:	0f 84 5d fe ff ff    	je     ebba <dlmalloc+0x172a>
    ed5d:	41 8b 7a 38          	mov    0x38(%r10),%edi
    ed61:	48 89 f9             	mov    %rdi,%rcx
    ed64:	4c 8d 5f 4a          	lea    0x4a(%rdi),%r11
    ed68:	4d 39 94 fd 58 02 00 	cmp    %r10,0x258(%r13,%rdi,8)
    ed6f:	00 
    ed70:	0f 84 0e 02 00 00    	je     ef84 <dlmalloc+0x1af4>
    ed76:	4c 3b 25 5b be 01 00 	cmp    0x1be5b(%rip),%r12        # 2abd8 <_gm_+0x18>
    ed7d:	0f 82 6d ed ff ff    	jb     daf0 <dlmalloc+0x660>
    ed83:	4d 39 54 24 20       	cmp    %r10,0x20(%r12)
    ed88:	0f 84 ec 01 00 00    	je     ef7a <dlmalloc+0x1aea>
    ed8e:	49 89 74 24 28       	mov    %rsi,0x28(%r12)
    ed93:	48 85 f6             	test   %rsi,%rsi
    ed96:	0f 84 1e fe ff ff    	je     ebba <dlmalloc+0x172a>
    ed9c:	48 8b 3d 35 be 01 00 	mov    0x1be35(%rip),%rdi        # 2abd8 <_gm_+0x18>
    eda3:	48 39 fe             	cmp    %rdi,%rsi
    eda6:	0f 82 44 ed ff ff    	jb     daf0 <dlmalloc+0x660>
    edac:	49 8b 4a 20          	mov    0x20(%r10),%rcx
    edb0:	4c 89 66 30          	mov    %r12,0x30(%rsi)
    edb4:	48 85 c9             	test   %rcx,%rcx
    edb7:	74 11                	je     edca <dlmalloc+0x193a>
    edb9:	48 39 f9             	cmp    %rdi,%rcx
    edbc:	0f 82 2e ed ff ff    	jb     daf0 <dlmalloc+0x660>
    edc2:	48 89 4e 20          	mov    %rcx,0x20(%rsi)
    edc6:	48 89 71 30          	mov    %rsi,0x30(%rcx)
    edca:	49 8b 4a 28          	mov    0x28(%r10),%rcx
    edce:	48 85 c9             	test   %rcx,%rcx
    edd1:	0f 84 e3 fd ff ff    	je     ebba <dlmalloc+0x172a>
    edd7:	48 39 f9             	cmp    %rdi,%rcx
    edda:	0f 82 10 ed ff ff    	jb     daf0 <dlmalloc+0x660>
    ede0:	48 89 4e 28          	mov    %rcx,0x28(%rsi)
    ede4:	48 89 71 30          	mov    %rsi,0x30(%rcx)
    ede8:	e9 cd fd ff ff       	jmp    ebba <dlmalloc+0x172a>
    eded:	4d 85 ff             	test   %r15,%r15
    edf0:	0f 84 4a ec ff ff    	je     da40 <dlmalloc+0x5b0>
    edf6:	8b 53 38             	mov    0x38(%rbx),%edx
    edf9:	48 89 d0             	mov    %rdx,%rax
    edfc:	48 8d 4a 4a          	lea    0x4a(%rdx),%rcx
    ee00:	49 3b 9c d5 58 02 00 	cmp    0x258(%r13,%rdx,8),%rbx
    ee07:	00 
    ee08:	0f 84 a2 01 00 00    	je     efb0 <dlmalloc+0x1b20>
    ee0e:	4d 39 df             	cmp    %r11,%r15
    ee11:	0f 82 d9 ec ff ff    	jb     daf0 <dlmalloc+0x660>
    ee17:	4d 39 77 20          	cmp    %r14,0x20(%r15)
    ee1b:	0f 84 83 01 00 00    	je     efa4 <dlmalloc+0x1b14>
    ee21:	31 f6                	xor    %esi,%esi
    ee23:	49 89 77 28          	mov    %rsi,0x28(%r15)
    ee27:	e9 14 ec ff ff       	jmp    da40 <dlmalloc+0x5b0>
    ee2c:	4d 89 44 cd 08       	mov    %r8,0x8(%r13,%rcx,8)
    ee31:	e9 a9 ed ff ff       	jmp    dbdf <dlmalloc+0x74f>
    ee36:	48 8d 04 ce          	lea    (%rsi,%rcx,8),%rax
    ee3a:	48 3b 05 97 bd 01 00 	cmp    0x1bd97(%rip),%rax        # 2abd8 <_gm_+0x18>
    ee41:	0f 82 a9 ec ff ff    	jb     daf0 <dlmalloc+0x660>
    ee47:	48 89 14 ce          	mov    %rdx,(%rsi,%rcx,8)
    ee4b:	48 89 72 30          	mov    %rsi,0x30(%rdx)
    ee4f:	0f 11 42 10          	movups %xmm0,0x10(%rdx)
    ee53:	e9 6a e8 ff ff       	jmp    d6c2 <dlmalloc+0x232>
    ee58:	bf 00 00 00 80       	mov    $0x80000000,%edi
    ee5d:	be 50 03 00 00       	mov    $0x350,%esi
    ee62:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    ee67:	e9 09 fc ff ff       	jmp    ea75 <dlmalloc+0x15e5>
    ee6c:	4d 89 46 20          	mov    %r8,0x20(%r14)
    ee70:	e9 6a ed ff ff       	jmp    dbdf <dlmalloc+0x74f>
    ee75:	4d 89 e3             	mov    %r12,%r11
    ee78:	e9 4b ea ff ff       	jmp    d8c8 <dlmalloc+0x438>
    ee7d:	4d 85 f6             	test   %r14,%r14
    ee80:	0f 84 9a ed ff ff    	je     dc20 <dlmalloc+0x790>
    ee86:	8b 4b 38             	mov    0x38(%rbx),%ecx
    ee89:	48 89 c8             	mov    %rcx,%rax
    ee8c:	4c 8d 41 4a          	lea    0x4a(%rcx),%r8
    ee90:	49 3b 9c cd 58 02 00 	cmp    0x258(%r13,%rcx,8),%rbx
    ee97:	00 
    ee98:	0f 84 34 01 00 00    	je     efd2 <dlmalloc+0x1b42>
    ee9e:	4d 39 de             	cmp    %r11,%r14
    eea1:	0f 82 49 ec ff ff    	jb     daf0 <dlmalloc+0x660>
    eea7:	49 3b 5e 20          	cmp    0x20(%r14),%rbx
    eeab:	0f 84 16 01 00 00    	je     efc7 <dlmalloc+0x1b37>
    eeb1:	45 31 ff             	xor    %r15d,%r15d
    eeb4:	4d 89 7e 28          	mov    %r15,0x28(%r14)
    eeb8:	e9 63 ed ff ff       	jmp    dc20 <dlmalloc+0x790>
    eebd:	49 8b 72 28          	mov    0x28(%r10),%rsi
    eec1:	48 85 f6             	test   %rsi,%rsi
    eec4:	74 7a                	je     ef40 <dlmalloc+0x1ab0>
    eec6:	49 8d 7a 28          	lea    0x28(%r10),%rdi
    eeca:	48 89 f1             	mov    %rsi,%rcx
    eecd:	49 89 fb             	mov    %rdi,%r11
    eed0:	48 89 ce             	mov    %rcx,%rsi
    eed3:	48 8d 79 28          	lea    0x28(%rcx),%rdi
    eed7:	48 8b 49 28          	mov    0x28(%rcx),%rcx
    eedb:	48 85 c9             	test   %rcx,%rcx
    eede:	75 ed                	jne    eecd <dlmalloc+0x1a3d>
    eee0:	48 8b 4e 20          	mov    0x20(%rsi),%rcx
    eee4:	48 8d 7e 20          	lea    0x20(%rsi),%rdi
    eee8:	48 85 c9             	test   %rcx,%rcx
    eeeb:	75 e0                	jne    eecd <dlmalloc+0x1a3d>
    eeed:	4c 3b 1d e4 bc 01 00 	cmp    0x1bce4(%rip),%r11        # 2abd8 <_gm_+0x18>
    eef4:	0f 82 f6 eb ff ff    	jb     daf0 <dlmalloc+0x660>
    eefa:	31 c9                	xor    %ecx,%ecx
    eefc:	49 89 0b             	mov    %rcx,(%r11)
    eeff:	e9 50 fe ff ff       	jmp    ed54 <dlmalloc+0x18c4>
    ef04:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    ef09:	d3 c6                	rol    %cl,%esi
    ef0b:	21 35 af bc 01 00    	and    %esi,0x1bcaf(%rip)        # 2abc0 <_gm_>
    ef11:	e9 a4 fc ff ff       	jmp    ebba <dlmalloc+0x172a>
    ef16:	48 3b 3d bb bc 01 00 	cmp    0x1bcbb(%rip),%rdi        # 2abd8 <_gm_+0x18>
    ef1d:	0f 82 cd eb ff ff    	jb     daf0 <dlmalloc+0x660>
    ef23:	4c 39 57 18          	cmp    %r10,0x18(%rdi)
    ef27:	0f 85 c3 eb ff ff    	jne    daf0 <dlmalloc+0x660>
    ef2d:	48 39 f7             	cmp    %rsi,%rdi
    ef30:	74 d2                	je     ef04 <dlmalloc+0x1a74>
    ef32:	4c 39 de             	cmp    %r11,%rsi
    ef35:	0f 84 77 fc ff ff    	je     ebb2 <dlmalloc+0x1722>
    ef3b:	e9 5b fc ff ff       	jmp    eb9b <dlmalloc+0x170b>
    ef40:	49 8b 72 20          	mov    0x20(%r10),%rsi
    ef44:	48 85 f6             	test   %rsi,%rsi
    ef47:	0f 84 07 fe ff ff    	je     ed54 <dlmalloc+0x18c4>
    ef4d:	49 8d 7a 20          	lea    0x20(%r10),%rdi
    ef51:	e9 74 ff ff ff       	jmp    eeca <dlmalloc+0x1a3a>
    ef56:	4c 89 ff             	mov    %r15,%rdi
    ef59:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    ef5e:	48 f7 df             	neg    %rdi
    ef61:	e8 4a da ff ff       	call   c9b0 <sbrk>
    ef66:	c7 05 40 c0 01 00 00 	movl   $0x0,0x1c040(%rip)        # 2afb0 <malloc_global_mutex>
    ef6d:	00 00 00 
    ef70:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    ef75:	e9 d9 ee ff ff       	jmp    de53 <dlmalloc+0x9c3>
    ef7a:	49 89 74 24 20       	mov    %rsi,0x20(%r12)
    ef7f:	e9 0f fe ff ff       	jmp    ed93 <dlmalloc+0x1903>
    ef84:	4b 89 74 dd 08       	mov    %rsi,0x8(%r13,%r11,8)
    ef89:	48 85 f6             	test   %rsi,%rsi
    ef8c:	0f 85 0a fe ff ff    	jne    ed9c <dlmalloc+0x190c>
    ef92:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    ef97:	d3 c6                	rol    %cl,%esi
    ef99:	21 35 25 bc 01 00    	and    %esi,0x1bc25(%rip)        # 2abc4 <_gm_+0x4>
    ef9f:	e9 16 fc ff ff       	jmp    ebba <dlmalloc+0x172a>
    efa4:	45 31 c9             	xor    %r9d,%r9d
    efa7:	4d 89 4f 20          	mov    %r9,0x20(%r15)
    efab:	e9 90 ea ff ff       	jmp    da40 <dlmalloc+0x5b0>
    efb0:	45 31 f6             	xor    %r14d,%r14d
    efb3:	4d 89 74 cd 08       	mov    %r14,0x8(%r13,%rcx,8)
    efb8:	e9 01 fa ff ff       	jmp    e9be <dlmalloc+0x152e>
    efbd:	e8 de e3 ff ff       	call   d3a0 <init_mparams.isra.0>
    efc2:	e9 82 ed ff ff       	jmp    dd49 <dlmalloc+0x8b9>
    efc7:	31 c0                	xor    %eax,%eax
    efc9:	49 89 46 20          	mov    %rax,0x20(%r14)
    efcd:	e9 4e ec ff ff       	jmp    dc20 <dlmalloc+0x790>
    efd2:	31 c9                	xor    %ecx,%ecx
    efd4:	4b 89 4c c5 08       	mov    %rcx,0x8(%r13,%r8,8)
    efd9:	e9 0a fc ff ff       	jmp    ebe8 <dlmalloc+0x1758>
    efde:	66 90                	xchg   %ax,%ax

000000000000efe0 <internal_memalign.constprop.0>:
    efe0:	41 55                	push   %r13
    efe2:	41 54                	push   %r12
    efe4:	55                   	push   %rbp
    efe5:	53                   	push   %rbx
    efe6:	bb 20 00 00 00       	mov    $0x20,%ebx
    efeb:	48 83 ec 18          	sub    $0x18,%rsp
    efef:	48 39 df             	cmp    %rbx,%rdi
    eff2:	48 0f 43 df          	cmovae %rdi,%rbx
    eff6:	48 8d 43 ff          	lea    -0x1(%rbx),%rax
    effa:	48 85 d8             	test   %rbx,%rax
    effd:	74 49                	je     f048 <internal_memalign.constprop.0+0x68>
    efff:	48 83 ff 20          	cmp    $0x20,%rdi
    f003:	0f 86 17 02 00 00    	jbe    f220 <internal_memalign.constprop.0+0x240>
    f009:	b8 20 00 00 00       	mov    $0x20,%eax
    f00e:	66 90                	xchg   %ax,%ax
    f010:	48 01 c0             	add    %rax,%rax
    f013:	48 39 d8             	cmp    %rbx,%rax
    f016:	72 f8                	jb     f010 <internal_memalign.constprop.0+0x30>
    f018:	48 c7 c2 80 ff ff ff 	mov    $0xffffffffffffff80,%rdx
    f01f:	48 89 c3             	mov    %rax,%rbx
    f022:	48 29 c2             	sub    %rax,%rdx
    f025:	48 39 d6             	cmp    %rdx,%rsi
    f028:	72 2d                	jb     f057 <internal_memalign.constprop.0+0x77>
    f02a:	e8 a1 22 00 00       	call   112d0 <__errno_location>
    f02f:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
    f035:	48 83 c4 18          	add    $0x18,%rsp
    f039:	31 c0                	xor    %eax,%eax
    f03b:	5b                   	pop    %rbx
    f03c:	5d                   	pop    %rbp
    f03d:	41 5c                	pop    %r12
    f03f:	41 5d                	pop    %r13
    f041:	c3                   	ret    
    f042:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    f048:	48 c7 c2 80 ff ff ff 	mov    $0xffffffffffffff80,%rdx
    f04f:	48 29 da             	sub    %rbx,%rdx
    f052:	48 39 d6             	cmp    %rdx,%rsi
    f055:	73 d3                	jae    f02a <internal_memalign.constprop.0+0x4a>
    f057:	48 8d 46 1f          	lea    0x1f(%rsi),%rax
    f05b:	ba 20 00 00 00       	mov    $0x20,%edx
    f060:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
    f064:	48 83 fe 0e          	cmp    $0xe,%rsi
    f068:	48 0f 47 d0          	cmova  %rax,%rdx
    f06c:	48 8d 7c 13 10       	lea    0x10(%rbx,%rdx,1),%rdi
    f071:	49 89 d4             	mov    %rdx,%r12
    f074:	e8 17 e4 ff ff       	call   d490 <dlmalloc>
    f079:	48 85 c0             	test   %rax,%rax
    f07c:	74 b7                	je     f035 <internal_memalign.constprop.0+0x55>
    f07e:	44 8b 2d ab be 01 00 	mov    0x1beab(%rip),%r13d        # 2af30 <_gm_+0x370>
    f085:	48 8d 70 f0          	lea    -0x10(%rax),%rsi
    f089:	41 83 e5 02          	and    $0x2,%r13d
    f08d:	0f 85 9d 00 00 00    	jne    f130 <internal_memalign.constprop.0+0x150>
    f093:	48 8d 6b ff          	lea    -0x1(%rbx),%rbp
    f097:	48 85 e8             	test   %rbp,%rax
    f09a:	75 3c                	jne    f0d8 <internal_memalign.constprop.0+0xf8>
    f09c:	48 8b 50 f8          	mov    -0x8(%rax),%rdx
    f0a0:	48 89 f5             	mov    %rsi,%rbp
    f0a3:	f6 c2 03             	test   $0x3,%dl
    f0a6:	74 15                	je     f0bd <internal_memalign.constprop.0+0xdd>
    f0a8:	48 89 d1             	mov    %rdx,%rcx
    f0ab:	49 8d 74 24 20       	lea    0x20(%r12),%rsi
    f0b0:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    f0b4:	48 39 ce             	cmp    %rcx,%rsi
    f0b7:	0f 82 a3 00 00 00    	jb     f160 <internal_memalign.constprop.0+0x180>
    f0bd:	45 85 ed             	test   %r13d,%r13d
    f0c0:	0f 85 72 01 00 00    	jne    f238 <internal_memalign.constprop.0+0x258>
    f0c6:	48 83 c4 18          	add    $0x18,%rsp
    f0ca:	5b                   	pop    %rbx
    f0cb:	5d                   	pop    %rbp
    f0cc:	41 5c                	pop    %r12
    f0ce:	41 5d                	pop    %r13
    f0d0:	c3                   	ret    
    f0d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f0d8:	48 89 da             	mov    %rbx,%rdx
    f0db:	48 01 c5             	add    %rax,%rbp
    f0de:	48 f7 da             	neg    %rdx
    f0e1:	48 21 d5             	and    %rdx,%rbp
    f0e4:	48 83 ed 10          	sub    $0x10,%rbp
    f0e8:	48 89 e9             	mov    %rbp,%rcx
    f0eb:	48 29 f1             	sub    %rsi,%rcx
    f0ee:	48 83 f9 1f          	cmp    $0x1f,%rcx
    f0f2:	77 09                	ja     f0fd <internal_memalign.constprop.0+0x11d>
    f0f4:	48 01 dd             	add    %rbx,%rbp
    f0f7:	48 89 e9             	mov    %rbp,%rcx
    f0fa:	48 29 f1             	sub    %rsi,%rcx
    f0fd:	48 8b 78 f8          	mov    -0x8(%rax),%rdi
    f101:	48 8d 5d 10          	lea    0x10(%rbp),%rbx
    f105:	48 89 fa             	mov    %rdi,%rdx
    f108:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    f10c:	48 29 ca             	sub    %rcx,%rdx
    f10f:	83 e7 03             	and    $0x3,%edi
    f112:	0f 85 a8 00 00 00    	jne    f1c0 <internal_memalign.constprop.0+0x1e0>
    f118:	48 03 48 f0          	add    -0x10(%rax),%rcx
    f11c:	48 89 55 08          	mov    %rdx,0x8(%rbp)
    f120:	48 89 d8             	mov    %rbx,%rax
    f123:	48 89 4d 00          	mov    %rcx,0x0(%rbp)
    f127:	e9 77 ff ff ff       	jmp    f0a3 <internal_memalign.constprop.0+0xc3>
    f12c:	0f 1f 40 00          	nopl   0x0(%rax)
    f130:	ba 01 00 00 00       	mov    $0x1,%edx
    f135:	87 15 f9 bd 01 00    	xchg   %edx,0x1bdf9(%rip)        # 2af34 <_gm_+0x374>
    f13b:	85 d2                	test   %edx,%edx
    f13d:	0f 85 0d 01 00 00    	jne    f250 <internal_memalign.constprop.0+0x270>
    f143:	44 8b 2d e6 bd 01 00 	mov    0x1bde6(%rip),%r13d        # 2af30 <_gm_+0x370>
    f14a:	48 8d 6b ff          	lea    -0x1(%rbx),%rbp
    f14e:	41 83 e5 02          	and    $0x2,%r13d
    f152:	48 85 e8             	test   %rbp,%rax
    f155:	75 81                	jne    f0d8 <internal_memalign.constprop.0+0xf8>
    f157:	e9 40 ff ff ff       	jmp    f09c <internal_memalign.constprop.0+0xbc>
    f15c:	0f 1f 40 00          	nopl   0x0(%rax)
    f160:	83 e2 01             	and    $0x1,%edx
    f163:	49 89 c8             	mov    %rcx,%r8
    f166:	4a 8d 74 25 00       	lea    0x0(%rbp,%r12,1),%rsi
    f16b:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    f170:	4c 09 e2             	or     %r12,%rdx
    f173:	4d 29 e0             	sub    %r12,%r8
    f176:	48 8d 3d 43 ba 01 00 	lea    0x1ba43(%rip),%rdi        # 2abc0 <_gm_>
    f17d:	48 83 ca 02          	or     $0x2,%rdx
    f181:	4d 89 c1             	mov    %r8,%r9
    f184:	48 89 55 08          	mov    %rdx,0x8(%rbp)
    f188:	48 8b 15 f1 bd 01 00 	mov    0x1bdf1(%rip),%rdx        # 2af80 <mparams>
    f18f:	48 01 cd             	add    %rcx,%rbp
    f192:	49 83 c9 03          	or     $0x3,%r9
    f196:	4c 89 4e 08          	mov    %r9,0x8(%rsi)
    f19a:	48 31 fa             	xor    %rdi,%rdx
    f19d:	48 89 16             	mov    %rdx,(%rsi)
    f1a0:	48 83 4d 08 01       	orq    $0x1,0x8(%rbp)
    f1a5:	48 89 55 00          	mov    %rdx,0x0(%rbp)
    f1a9:	4c 89 c2             	mov    %r8,%rdx
    f1ac:	e8 bf d9 ff ff       	call   cb70 <dispose_chunk>
    f1b1:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    f1b6:	e9 02 ff ff ff       	jmp    f0bd <internal_memalign.constprop.0+0xdd>
    f1bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    f1c0:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
    f1c4:	4c 8b 05 b5 bd 01 00 	mov    0x1bdb5(%rip),%r8        # 2af80 <mparams>
    f1cb:	83 e7 01             	and    $0x1,%edi
    f1ce:	48 09 d7             	or     %rdx,%rdi
    f1d1:	48 01 ea             	add    %rbp,%rdx
    f1d4:	48 83 cf 02          	or     $0x2,%rdi
    f1d8:	48 89 7d 08          	mov    %rdi,0x8(%rbp)
    f1dc:	48 8d 3d dd b9 01 00 	lea    0x1b9dd(%rip),%rdi        # 2abc0 <_gm_>
    f1e3:	49 31 f8             	xor    %rdi,%r8
    f1e6:	48 83 4a 08 01       	orq    $0x1,0x8(%rdx)
    f1eb:	4c 89 02             	mov    %r8,(%rdx)
    f1ee:	48 8b 50 f8          	mov    -0x8(%rax),%rdx
    f1f2:	83 e2 01             	and    $0x1,%edx
    f1f5:	48 09 ca             	or     %rcx,%rdx
    f1f8:	48 83 ca 02          	or     $0x2,%rdx
    f1fc:	48 89 50 f8          	mov    %rdx,-0x8(%rax)
    f200:	48 89 ca             	mov    %rcx,%rdx
    f203:	48 83 4d 08 01       	orq    $0x1,0x8(%rbp)
    f208:	4c 89 45 00          	mov    %r8,0x0(%rbp)
    f20c:	e8 5f d9 ff ff       	call   cb70 <dispose_chunk>
    f211:	48 8b 55 08          	mov    0x8(%rbp),%rdx
    f215:	48 89 d8             	mov    %rbx,%rax
    f218:	e9 86 fe ff ff       	jmp    f0a3 <internal_memalign.constprop.0+0xc3>
    f21d:	0f 1f 00             	nopl   (%rax)
    f220:	48 c7 c2 60 ff ff ff 	mov    $0xffffffffffffff60,%rdx
    f227:	bb 20 00 00 00       	mov    $0x20,%ebx
    f22c:	e9 21 fe ff ff       	jmp    f052 <internal_memalign.constprop.0+0x72>
    f231:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f238:	c7 05 f2 bc 01 00 00 	movl   $0x0,0x1bcf2(%rip)        # 2af34 <_gm_+0x374>
    f23f:	00 00 00 
    f242:	48 83 c4 18          	add    $0x18,%rsp
    f246:	5b                   	pop    %rbx
    f247:	5d                   	pop    %rbp
    f248:	41 5c                	pop    %r12
    f24a:	41 5d                	pop    %r13
    f24c:	c3                   	ret    
    f24d:	0f 1f 00             	nopl   (%rax)
    f250:	b9 01 00 00 00       	mov    $0x1,%ecx
    f255:	0f 1f 00             	nopl   (%rax)
    f258:	8b 15 d6 bc 01 00    	mov    0x1bcd6(%rip),%edx        # 2af34 <_gm_+0x374>
    f25e:	85 d2                	test   %edx,%edx
    f260:	75 f6                	jne    f258 <internal_memalign.constprop.0+0x278>
    f262:	89 ca                	mov    %ecx,%edx
    f264:	87 15 ca bc 01 00    	xchg   %edx,0x1bcca(%rip)        # 2af34 <_gm_+0x374>
    f26a:	85 d2                	test   %edx,%edx
    f26c:	75 ea                	jne    f258 <internal_memalign.constprop.0+0x278>
    f26e:	e9 d0 fe ff ff       	jmp    f143 <internal_memalign.constprop.0+0x163>
    f273:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    f27a:	00 00 00 
    f27d:	0f 1f 00             	nopl   (%rax)

000000000000f280 <dlfree>:
    f280:	f3 0f 1e fa          	endbr64 
    f284:	48 85 ff             	test   %rdi,%rdi
    f287:	0f 84 db 01 00 00    	je     f468 <dlfree+0x1e8>
    f28d:	41 55                	push   %r13
    f28f:	48 89 f8             	mov    %rdi,%rax
    f292:	48 8d 57 f0          	lea    -0x10(%rdi),%rdx
    f296:	41 54                	push   %r12
    f298:	55                   	push   %rbp
    f299:	53                   	push   %rbx
    f29a:	48 83 ec 08          	sub    $0x8,%rsp
    f29e:	48 8b 4f f8          	mov    -0x8(%rdi),%rcx
    f2a2:	48 8b 35 d7 bc 01 00 	mov    0x1bcd7(%rip),%rsi        # 2af80 <mparams>
    f2a9:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    f2ad:	48 8b 5c 0f f0       	mov    -0x10(%rdi,%rcx,1),%rbx
    f2b2:	48 31 f3             	xor    %rsi,%rbx
    f2b5:	48 3b 73 40          	cmp    0x40(%rbx),%rsi
    f2b9:	0f 85 89 02 00 00    	jne    f548 <dlfree+0x2c8>
    f2bf:	f6 83 70 03 00 00 02 	testb  $0x2,0x370(%rbx)
    f2c6:	0f 85 54 01 00 00    	jne    f420 <dlfree+0x1a0>
    f2cc:	4c 8b 4b 18          	mov    0x18(%rbx),%r9
    f2d0:	4c 39 ca             	cmp    %r9,%rdx
    f2d3:	0f 82 87 01 00 00    	jb     f460 <dlfree+0x1e0>
    f2d9:	48 8b 48 f8          	mov    -0x8(%rax),%rcx
    f2dd:	49 89 c8             	mov    %rcx,%r8
    f2e0:	41 83 e0 03          	and    $0x3,%r8d
    f2e4:	49 83 f8 01          	cmp    $0x1,%r8
    f2e8:	0f 84 72 01 00 00    	je     f460 <dlfree+0x1e0>
    f2ee:	48 89 ce             	mov    %rcx,%rsi
    f2f1:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
    f2f5:	83 e1 01             	and    $0x1,%ecx
    f2f8:	48 8d 3c 32          	lea    (%rdx,%rsi,1),%rdi
    f2fc:	0f 84 9e 00 00 00    	je     f3a0 <dlfree+0x120>
    f302:	48 39 fa             	cmp    %rdi,%rdx
    f305:	0f 83 55 01 00 00    	jae    f460 <dlfree+0x1e0>
    f30b:	48 8b 47 08          	mov    0x8(%rdi),%rax
    f30f:	a8 01                	test   $0x1,%al
    f311:	0f 84 49 01 00 00    	je     f460 <dlfree+0x1e0>
    f317:	a8 02                	test   $0x2,%al
    f319:	0f 84 51 01 00 00    	je     f470 <dlfree+0x1f0>
    f31f:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    f323:	48 89 47 08          	mov    %rax,0x8(%rdi)
    f327:	48 89 f0             	mov    %rsi,%rax
    f32a:	48 83 c8 01          	or     $0x1,%rax
    f32e:	48 89 42 08          	mov    %rax,0x8(%rdx)
    f332:	48 89 34 32          	mov    %rsi,(%rdx,%rsi,1)
    f336:	48 89 f1             	mov    %rsi,%rcx
    f339:	48 c1 e9 03          	shr    $0x3,%rcx
    f33d:	48 81 fe ff 00 00 00 	cmp    $0xff,%rsi
    f344:	0f 87 ce 01 00 00    	ja     f518 <dlfree+0x298>
    f34a:	8d 44 09 09          	lea    0x9(%rcx,%rcx,1),%eax
    f34e:	8b 3b                	mov    (%rbx),%edi
    f350:	48 8d 34 c3          	lea    (%rbx,%rax,8),%rsi
    f354:	b8 01 00 00 00       	mov    $0x1,%eax
    f359:	d3 e0                	shl    %cl,%eax
    f35b:	85 c7                	test   %eax,%edi
    f35d:	0f 84 35 06 00 00    	je     f998 <dlfree+0x718>
    f363:	48 8b 46 10          	mov    0x10(%rsi),%rax
    f367:	4c 39 c8             	cmp    %r9,%rax
    f36a:	0f 82 d8 01 00 00    	jb     f548 <dlfree+0x2c8>
    f370:	48 89 56 10          	mov    %rdx,0x10(%rsi)
    f374:	48 89 50 18          	mov    %rdx,0x18(%rax)
    f378:	48 89 42 10          	mov    %rax,0x10(%rdx)
    f37c:	48 89 72 18          	mov    %rsi,0x18(%rdx)
    f380:	f6 83 70 03 00 00 02 	testb  $0x2,0x370(%rbx)
    f387:	0f 85 73 01 00 00    	jne    f500 <dlfree+0x280>
    f38d:	48 83 c4 08          	add    $0x8,%rsp
    f391:	5b                   	pop    %rbx
    f392:	5d                   	pop    %rbp
    f393:	41 5c                	pop    %r12
    f395:	41 5d                	pop    %r13
    f397:	c3                   	ret    
    f398:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    f39f:	00 
    f3a0:	48 8b 40 f0          	mov    -0x10(%rax),%rax
    f3a4:	4d 85 c0             	test   %r8,%r8
    f3a7:	74 d7                	je     f380 <dlfree+0x100>
    f3a9:	48 29 c2             	sub    %rax,%rdx
    f3ac:	48 01 c6             	add    %rax,%rsi
    f3af:	4c 39 ca             	cmp    %r9,%rdx
    f3b2:	0f 82 a8 00 00 00    	jb     f460 <dlfree+0x1e0>
    f3b8:	48 39 53 20          	cmp    %rdx,0x20(%rbx)
    f3bc:	0f 84 9e 05 00 00    	je     f960 <dlfree+0x6e0>
    f3c2:	48 89 c1             	mov    %rax,%rcx
    f3c5:	48 c1 e9 03          	shr    $0x3,%rcx
    f3c9:	48 3d ff 00 00 00    	cmp    $0xff,%rax
    f3cf:	0f 87 6b 02 00 00    	ja     f640 <dlfree+0x3c0>
    f3d5:	44 8d 54 09 09       	lea    0x9(%rcx,%rcx,1),%r10d
    f3da:	48 8b 42 10          	mov    0x10(%rdx),%rax
    f3de:	4c 8b 42 18          	mov    0x18(%rdx),%r8
    f3e2:	4e 8d 14 d3          	lea    (%rbx,%r10,8),%r10
    f3e6:	49 39 c2             	cmp    %rax,%r10
    f3e9:	0f 85 ae 07 00 00    	jne    fb9d <dlfree+0x91d>
    f3ef:	4c 39 c0             	cmp    %r8,%rax
    f3f2:	0f 84 28 05 00 00    	je     f920 <dlfree+0x6a0>
    f3f8:	4d 39 c8             	cmp    %r9,%r8
    f3fb:	0f 82 47 01 00 00    	jb     f548 <dlfree+0x2c8>
    f401:	49 39 50 10          	cmp    %rdx,0x10(%r8)
    f405:	0f 85 3d 01 00 00    	jne    f548 <dlfree+0x2c8>
    f40b:	4c 89 40 18          	mov    %r8,0x18(%rax)
    f40f:	49 89 40 10          	mov    %rax,0x10(%r8)
    f413:	e9 ea fe ff ff       	jmp    f302 <dlfree+0x82>
    f418:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    f41f:	00 
    f420:	48 8d b3 74 03 00 00 	lea    0x374(%rbx),%rsi
    f427:	b9 01 00 00 00       	mov    $0x1,%ecx
    f42c:	87 0e                	xchg   %ecx,(%rsi)
    f42e:	85 c9                	test   %ecx,%ecx
    f430:	0f 84 96 fe ff ff    	je     f2cc <dlfree+0x4c>
    f436:	bf 01 00 00 00       	mov    $0x1,%edi
    f43b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    f440:	8b 8b 74 03 00 00    	mov    0x374(%rbx),%ecx
    f446:	85 c9                	test   %ecx,%ecx
    f448:	75 f6                	jne    f440 <dlfree+0x1c0>
    f44a:	89 f9                	mov    %edi,%ecx
    f44c:	87 0e                	xchg   %ecx,(%rsi)
    f44e:	85 c9                	test   %ecx,%ecx
    f450:	75 ee                	jne    f440 <dlfree+0x1c0>
    f452:	e9 75 fe ff ff       	jmp    f2cc <dlfree+0x4c>
    f457:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    f45e:	00 00 
    f460:	e8 d2 34 00 00       	call   12937 <abort>
    f465:	0f 1f 00             	nopl   (%rax)
    f468:	c3                   	ret    
    f469:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f470:	4c 8b 5b 20          	mov    0x20(%rbx),%r11
    f474:	48 39 7b 28          	cmp    %rdi,0x28(%rbx)
    f478:	0f 84 72 05 00 00    	je     f9f0 <dlfree+0x770>
    f47e:	49 39 fb             	cmp    %rdi,%r11
    f481:	0f 84 91 06 00 00    	je     fb18 <dlfree+0x898>
    f487:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    f48b:	48 89 c1             	mov    %rax,%rcx
    f48e:	48 01 c6             	add    %rax,%rsi
    f491:	48 c1 e9 03          	shr    $0x3,%rcx
    f495:	48 3d f8 00 00 00    	cmp    $0xf8,%rax
    f49b:	0f 87 67 02 00 00    	ja     f708 <dlfree+0x488>
    f4a1:	44 8d 54 09 09       	lea    0x9(%rcx,%rcx,1),%r10d
    f4a6:	48 8b 47 10          	mov    0x10(%rdi),%rax
    f4aa:	4c 8b 47 18          	mov    0x18(%rdi),%r8
    f4ae:	4e 8d 14 d3          	lea    (%rbx,%r10,8),%r10
    f4b2:	49 39 c2             	cmp    %rax,%r10
    f4b5:	0f 85 73 04 00 00    	jne    f92e <dlfree+0x6ae>
    f4bb:	4c 39 c0             	cmp    %r8,%rax
    f4be:	0f 84 7c 06 00 00    	je     fb40 <dlfree+0x8c0>
    f4c4:	4d 39 c8             	cmp    %r9,%r8
    f4c7:	72 7f                	jb     f548 <dlfree+0x2c8>
    f4c9:	49 39 78 10          	cmp    %rdi,0x10(%r8)
    f4cd:	75 79                	jne    f548 <dlfree+0x2c8>
    f4cf:	4c 89 40 18          	mov    %r8,0x18(%rax)
    f4d3:	49 89 40 10          	mov    %rax,0x10(%r8)
    f4d7:	48 89 f0             	mov    %rsi,%rax
    f4da:	48 83 c8 01          	or     $0x1,%rax
    f4de:	48 89 42 08          	mov    %rax,0x8(%rdx)
    f4e2:	48 89 34 32          	mov    %rsi,(%rdx,%rsi,1)
    f4e6:	4c 39 da             	cmp    %r11,%rdx
    f4e9:	0f 85 47 fe ff ff    	jne    f336 <dlfree+0xb6>
    f4ef:	48 89 73 08          	mov    %rsi,0x8(%rbx)
    f4f3:	e9 88 fe ff ff       	jmp    f380 <dlfree+0x100>
    f4f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    f4ff:	00 
    f500:	c7 83 74 03 00 00 00 	movl   $0x0,0x374(%rbx)
    f507:	00 00 00 
    f50a:	48 83 c4 08          	add    $0x8,%rsp
    f50e:	5b                   	pop    %rbx
    f50f:	5d                   	pop    %rbp
    f510:	41 5c                	pop    %r12
    f512:	41 5d                	pop    %r13
    f514:	c3                   	ret    
    f515:	0f 1f 00             	nopl   (%rax)
    f518:	48 89 f0             	mov    %rsi,%rax
    f51b:	48 c1 e8 08          	shr    $0x8,%rax
    f51f:	89 c1                	mov    %eax,%ecx
    f521:	85 c0                	test   %eax,%eax
    f523:	74 2b                	je     f550 <dlfree+0x2d0>
    f525:	3d ff ff 00 00       	cmp    $0xffff,%eax
    f52a:	0f 86 a0 02 00 00    	jbe    f7d0 <dlfree+0x550>
    f530:	b8 00 00 00 80       	mov    $0x80000000,%eax
    f535:	bf 50 03 00 00       	mov    $0x350,%edi
    f53a:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    f53f:	eb 19                	jmp    f55a <dlfree+0x2da>
    f541:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f548:	e8 ea 33 00 00       	call   12937 <abort>
    f54d:	0f 1f 00             	nopl   (%rax)
    f550:	b8 01 00 00 00       	mov    $0x1,%eax
    f555:	bf 58 02 00 00       	mov    $0x258,%edi
    f55a:	44 8b 43 04          	mov    0x4(%rbx),%r8d
    f55e:	66 48 0f 6e ca       	movq   %rdx,%xmm1
    f563:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f567:	89 4a 38             	mov    %ecx,0x38(%rdx)
    f56a:	66 0f 6c c9          	punpcklqdq %xmm1,%xmm1
    f56e:	0f 11 42 20          	movups %xmm0,0x20(%rdx)
    f572:	44 85 c0             	test   %r8d,%eax
    f575:	0f 84 2d 04 00 00    	je     f9a8 <dlfree+0x728>
    f57b:	89 c8                	mov    %ecx,%eax
    f57d:	49 89 f0             	mov    %rsi,%r8
    f580:	48 8b bc c3 58 02 00 	mov    0x258(%rbx,%rax,8),%rdi
    f587:	00 
    f588:	83 f9 1f             	cmp    $0x1f,%ecx
    f58b:	74 31                	je     f5be <dlfree+0x33e>
    f58d:	89 c8                	mov    %ecx,%eax
    f58f:	b9 39 00 00 00       	mov    $0x39,%ecx
    f594:	d1 e8                	shr    %eax
    f596:	29 c1                	sub    %eax,%ecx
    f598:	49 d3 e0             	shl    %cl,%r8
    f59b:	eb 21                	jmp    f5be <dlfree+0x33e>
    f59d:	0f 1f 00             	nopl   (%rax)
    f5a0:	4c 89 c0             	mov    %r8,%rax
    f5a3:	4d 01 c0             	add    %r8,%r8
    f5a6:	48 c1 e8 3f          	shr    $0x3f,%rax
    f5aa:	48 83 c0 04          	add    $0x4,%rax
    f5ae:	48 8b 0c c7          	mov    (%rdi,%rax,8),%rcx
    f5b2:	48 85 c9             	test   %rcx,%rcx
    f5b5:	0f 84 15 04 00 00    	je     f9d0 <dlfree+0x750>
    f5bb:	48 89 cf             	mov    %rcx,%rdi
    f5be:	48 8b 47 08          	mov    0x8(%rdi),%rax
    f5c2:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    f5c6:	48 39 f0             	cmp    %rsi,%rax
    f5c9:	75 d5                	jne    f5a0 <dlfree+0x320>
    f5cb:	48 8b 47 10          	mov    0x10(%rdi),%rax
    f5cf:	66 48 0f 6e d7       	movq   %rdi,%xmm2
    f5d4:	66 48 0f 6e c0       	movq   %rax,%xmm0
    f5d9:	66 0f 6c c2          	punpcklqdq %xmm2,%xmm0
    f5dd:	4c 39 cf             	cmp    %r9,%rdi
    f5e0:	0f 82 62 ff ff ff    	jb     f548 <dlfree+0x2c8>
    f5e6:	4c 39 c8             	cmp    %r9,%rax
    f5e9:	0f 82 59 ff ff ff    	jb     f548 <dlfree+0x2c8>
    f5ef:	48 89 50 18          	mov    %rdx,0x18(%rax)
    f5f3:	48 89 57 10          	mov    %rdx,0x10(%rdi)
    f5f7:	48 c7 42 30 00 00 00 	movq   $0x0,0x30(%rdx)
    f5fe:	00 
    f5ff:	0f 11 42 10          	movups %xmm0,0x10(%rdx)
    f603:	48 83 6b 38 01       	subq   $0x1,0x38(%rbx)
    f608:	0f 85 72 fd ff ff    	jne    f380 <dlfree+0x100>
    f60e:	48 8b 83 88 03 00 00 	mov    0x388(%rbx),%rax
    f615:	48 85 c0             	test   %rax,%rax
    f618:	74 0f                	je     f629 <dlfree+0x3a9>
    f61a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    f620:	48 8b 40 10          	mov    0x10(%rax),%rax
    f624:	48 85 c0             	test   %rax,%rax
    f627:	75 f7                	jne    f620 <dlfree+0x3a0>
    f629:	48 c7 43 38 ff ff ff 	movq   $0xffffffffffffffff,0x38(%rbx)
    f630:	ff 
    f631:	e9 4a fd ff ff       	jmp    f380 <dlfree+0x100>
    f636:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    f63d:	00 00 00 
    f640:	4c 8b 42 18          	mov    0x18(%rdx),%r8
    f644:	4c 8b 5a 30          	mov    0x30(%rdx),%r11
    f648:	49 39 d0             	cmp    %rdx,%r8
    f64b:	0f 84 bf 01 00 00    	je     f810 <dlfree+0x590>
    f651:	48 8b 42 10          	mov    0x10(%rdx),%rax
    f655:	4c 39 c8             	cmp    %r9,%rax
    f658:	0f 82 ea fe ff ff    	jb     f548 <dlfree+0x2c8>
    f65e:	48 39 50 18          	cmp    %rdx,0x18(%rax)
    f662:	0f 85 e0 fe ff ff    	jne    f548 <dlfree+0x2c8>
    f668:	49 39 50 10          	cmp    %rdx,0x10(%r8)
    f66c:	0f 85 d6 fe ff ff    	jne    f548 <dlfree+0x2c8>
    f672:	4c 89 40 18          	mov    %r8,0x18(%rax)
    f676:	49 89 40 10          	mov    %rax,0x10(%r8)
    f67a:	4d 85 db             	test   %r11,%r11
    f67d:	0f 84 7f fc ff ff    	je     f302 <dlfree+0x82>
    f683:	8b 42 38             	mov    0x38(%rdx),%eax
    f686:	48 89 c1             	mov    %rax,%rcx
    f689:	4c 8d 50 4a          	lea    0x4a(%rax),%r10
    f68d:	48 39 94 c3 58 02 00 	cmp    %rdx,0x258(%rbx,%rax,8)
    f694:	00 
    f695:	0f 84 c8 04 00 00    	je     fb63 <dlfree+0x8e3>
    f69b:	4d 39 cb             	cmp    %r9,%r11
    f69e:	0f 82 a4 fe ff ff    	jb     f548 <dlfree+0x2c8>
    f6a4:	49 39 53 20          	cmp    %rdx,0x20(%r11)
    f6a8:	0f 84 4a 05 00 00    	je     fbf8 <dlfree+0x978>
    f6ae:	4d 89 43 28          	mov    %r8,0x28(%r11)
    f6b2:	4d 85 c0             	test   %r8,%r8
    f6b5:	0f 84 47 fc ff ff    	je     f302 <dlfree+0x82>
    f6bb:	4d 39 c8             	cmp    %r9,%r8
    f6be:	0f 82 84 fe ff ff    	jb     f548 <dlfree+0x2c8>
    f6c4:	48 8b 42 20          	mov    0x20(%rdx),%rax
    f6c8:	4d 89 58 30          	mov    %r11,0x30(%r8)
    f6cc:	48 85 c0             	test   %rax,%rax
    f6cf:	74 11                	je     f6e2 <dlfree+0x462>
    f6d1:	4c 39 c8             	cmp    %r9,%rax
    f6d4:	0f 82 6e fe ff ff    	jb     f548 <dlfree+0x2c8>
    f6da:	49 89 40 20          	mov    %rax,0x20(%r8)
    f6de:	4c 89 40 30          	mov    %r8,0x30(%rax)
    f6e2:	48 8b 42 28          	mov    0x28(%rdx),%rax
    f6e6:	48 85 c0             	test   %rax,%rax
    f6e9:	0f 84 13 fc ff ff    	je     f302 <dlfree+0x82>
    f6ef:	4c 39 c8             	cmp    %r9,%rax
    f6f2:	0f 82 50 fe ff ff    	jb     f548 <dlfree+0x2c8>
    f6f8:	49 89 40 28          	mov    %rax,0x28(%r8)
    f6fc:	4c 89 40 30          	mov    %r8,0x30(%rax)
    f700:	e9 fd fb ff ff       	jmp    f302 <dlfree+0x82>
    f705:	0f 1f 00             	nopl   (%rax)
    f708:	4c 8b 47 18          	mov    0x18(%rdi),%r8
    f70c:	48 8b 6f 30          	mov    0x30(%rdi),%rbp
    f710:	49 39 f8             	cmp    %rdi,%r8
    f713:	0f 84 7f 01 00 00    	je     f898 <dlfree+0x618>
    f719:	48 8b 47 10          	mov    0x10(%rdi),%rax
    f71d:	4c 39 c8             	cmp    %r9,%rax
    f720:	0f 82 22 fe ff ff    	jb     f548 <dlfree+0x2c8>
    f726:	48 39 78 18          	cmp    %rdi,0x18(%rax)
    f72a:	0f 85 18 fe ff ff    	jne    f548 <dlfree+0x2c8>
    f730:	49 39 78 10          	cmp    %rdi,0x10(%r8)
    f734:	0f 85 0e fe ff ff    	jne    f548 <dlfree+0x2c8>
    f73a:	4c 89 40 18          	mov    %r8,0x18(%rax)
    f73e:	49 89 40 10          	mov    %rax,0x10(%r8)
    f742:	48 85 ed             	test   %rbp,%rbp
    f745:	0f 84 8c fd ff ff    	je     f4d7 <dlfree+0x257>
    f74b:	8b 47 38             	mov    0x38(%rdi),%eax
    f74e:	48 89 c1             	mov    %rax,%rcx
    f751:	4c 8d 50 4a          	lea    0x4a(%rax),%r10
    f755:	48 39 bc c3 58 02 00 	cmp    %rdi,0x258(%rbx,%rax,8)
    f75c:	00 
    f75d:	0f 84 1d 04 00 00    	je     fb80 <dlfree+0x900>
    f763:	4c 39 cd             	cmp    %r9,%rbp
    f766:	0f 82 dc fd ff ff    	jb     f548 <dlfree+0x2c8>
    f76c:	48 39 7d 20          	cmp    %rdi,0x20(%rbp)
    f770:	0f 84 8b 04 00 00    	je     fc01 <dlfree+0x981>
    f776:	4c 89 45 28          	mov    %r8,0x28(%rbp)
    f77a:	4d 85 c0             	test   %r8,%r8
    f77d:	0f 84 54 fd ff ff    	je     f4d7 <dlfree+0x257>
    f783:	4d 39 c8             	cmp    %r9,%r8
    f786:	0f 82 bc fd ff ff    	jb     f548 <dlfree+0x2c8>
    f78c:	48 8b 47 20          	mov    0x20(%rdi),%rax
    f790:	49 89 68 30          	mov    %rbp,0x30(%r8)
    f794:	48 85 c0             	test   %rax,%rax
    f797:	74 11                	je     f7aa <dlfree+0x52a>
    f799:	4c 39 c8             	cmp    %r9,%rax
    f79c:	0f 82 a6 fd ff ff    	jb     f548 <dlfree+0x2c8>
    f7a2:	49 89 40 20          	mov    %rax,0x20(%r8)
    f7a6:	4c 89 40 30          	mov    %r8,0x30(%rax)
    f7aa:	48 8b 47 28          	mov    0x28(%rdi),%rax
    f7ae:	48 85 c0             	test   %rax,%rax
    f7b1:	0f 84 20 fd ff ff    	je     f4d7 <dlfree+0x257>
    f7b7:	4c 39 c8             	cmp    %r9,%rax
    f7ba:	0f 82 88 fd ff ff    	jb     f548 <dlfree+0x2c8>
    f7c0:	49 89 40 28          	mov    %rax,0x28(%r8)
    f7c4:	4c 89 40 30          	mov    %r8,0x30(%rax)
    f7c8:	e9 0a fd ff ff       	jmp    f4d7 <dlfree+0x257>
    f7cd:	0f 1f 00             	nopl   (%rax)
    f7d0:	0f bd c1             	bsr    %ecx,%eax
    f7d3:	b9 26 00 00 00       	mov    $0x26,%ecx
    f7d8:	48 89 f7             	mov    %rsi,%rdi
    f7db:	83 f0 1f             	xor    $0x1f,%eax
    f7de:	29 c1                	sub    %eax,%ecx
    f7e0:	48 d3 ef             	shr    %cl,%rdi
    f7e3:	48 89 f9             	mov    %rdi,%rcx
    f7e6:	bf 1f 00 00 00       	mov    $0x1f,%edi
    f7eb:	29 c7                	sub    %eax,%edi
    f7ed:	83 e1 01             	and    $0x1,%ecx
    f7f0:	b8 01 00 00 00       	mov    $0x1,%eax
    f7f5:	8d 0c 79             	lea    (%rcx,%rdi,2),%ecx
    f7f8:	8d 79 4b             	lea    0x4b(%rcx),%edi
    f7fb:	d3 e0                	shl    %cl,%eax
    f7fd:	48 c1 e7 03          	shl    $0x3,%rdi
    f801:	e9 54 fd ff ff       	jmp    f55a <dlfree+0x2da>
    f806:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    f80d:	00 00 00 
    f810:	48 8b 42 28          	mov    0x28(%rdx),%rax
    f814:	48 8d 4a 28          	lea    0x28(%rdx),%rcx
    f818:	48 85 c0             	test   %rax,%rax
    f81b:	0f 84 af 03 00 00    	je     fbd0 <dlfree+0x950>
    f821:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f828:	49 89 ca             	mov    %rcx,%r10
    f82b:	49 89 c0             	mov    %rax,%r8
    f82e:	48 8d 48 28          	lea    0x28(%rax),%rcx
    f832:	48 8b 40 28          	mov    0x28(%rax),%rax
    f836:	48 85 c0             	test   %rax,%rax
    f839:	75 ed                	jne    f828 <dlfree+0x5a8>
    f83b:	49 8b 40 20          	mov    0x20(%r8),%rax
    f83f:	49 8d 48 20          	lea    0x20(%r8),%rcx
    f843:	48 85 c0             	test   %rax,%rax
    f846:	75 e0                	jne    f828 <dlfree+0x5a8>
    f848:	4d 39 ca             	cmp    %r9,%r10
    f84b:	0f 82 f7 fc ff ff    	jb     f548 <dlfree+0x2c8>
    f851:	49 c7 02 00 00 00 00 	movq   $0x0,(%r10)
    f858:	4d 85 db             	test   %r11,%r11
    f85b:	0f 84 a1 fa ff ff    	je     f302 <dlfree+0x82>
    f861:	8b 42 38             	mov    0x38(%rdx),%eax
    f864:	48 8d 48 4a          	lea    0x4a(%rax),%rcx
    f868:	48 39 94 c3 58 02 00 	cmp    %rdx,0x258(%rbx,%rax,8)
    f86f:	00 
    f870:	0f 84 a2 03 00 00    	je     fc18 <dlfree+0x998>
    f876:	4d 39 cb             	cmp    %r9,%r11
    f879:	0f 82 c9 fc ff ff    	jb     f548 <dlfree+0x2c8>
    f87f:	49 39 53 20          	cmp    %rdx,0x20(%r11)
    f883:	0f 84 ac 03 00 00    	je     fc35 <dlfree+0x9b5>
    f889:	4d 89 43 28          	mov    %r8,0x28(%r11)
    f88d:	e9 29 fe ff ff       	jmp    f6bb <dlfree+0x43b>
    f892:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    f898:	48 8b 47 28          	mov    0x28(%rdi),%rax
    f89c:	48 8d 4f 28          	lea    0x28(%rdi),%rcx
    f8a0:	48 85 c0             	test   %rax,%rax
    f8a3:	0f 84 39 03 00 00    	je     fbe2 <dlfree+0x962>
    f8a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f8b0:	49 89 ca             	mov    %rcx,%r10
    f8b3:	49 89 c0             	mov    %rax,%r8
    f8b6:	48 8d 48 28          	lea    0x28(%rax),%rcx
    f8ba:	48 8b 40 28          	mov    0x28(%rax),%rax
    f8be:	48 85 c0             	test   %rax,%rax
    f8c1:	75 ed                	jne    f8b0 <dlfree+0x630>
    f8c3:	49 8b 40 20          	mov    0x20(%r8),%rax
    f8c7:	49 8d 48 20          	lea    0x20(%r8),%rcx
    f8cb:	48 85 c0             	test   %rax,%rax
    f8ce:	75 e0                	jne    f8b0 <dlfree+0x630>
    f8d0:	4d 39 ca             	cmp    %r9,%r10
    f8d3:	0f 82 6f fc ff ff    	jb     f548 <dlfree+0x2c8>
    f8d9:	49 c7 02 00 00 00 00 	movq   $0x0,(%r10)
    f8e0:	48 85 ed             	test   %rbp,%rbp
    f8e3:	0f 84 ee fb ff ff    	je     f4d7 <dlfree+0x257>
    f8e9:	8b 47 38             	mov    0x38(%rdi),%eax
    f8ec:	48 8d 48 4a          	lea    0x4a(%rax),%rcx
    f8f0:	48 39 bc c3 58 02 00 	cmp    %rdi,0x258(%rbx,%rax,8)
    f8f7:	00 
    f8f8:	0f 84 24 03 00 00    	je     fc22 <dlfree+0x9a2>
    f8fe:	4c 39 cd             	cmp    %r9,%rbp
    f901:	0f 82 41 fc ff ff    	jb     f548 <dlfree+0x2c8>
    f907:	48 39 7d 20          	cmp    %rdi,0x20(%rbp)
    f90b:	0f 84 1b 03 00 00    	je     fc2c <dlfree+0x9ac>
    f911:	4c 89 45 28          	mov    %r8,0x28(%rbp)
    f915:	e9 69 fe ff ff       	jmp    f783 <dlfree+0x503>
    f91a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    f920:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    f925:	d3 c0                	rol    %cl,%eax
    f927:	21 03                	and    %eax,(%rbx)
    f929:	e9 d4 f9 ff ff       	jmp    f302 <dlfree+0x82>
    f92e:	4c 39 c8             	cmp    %r9,%rax
    f931:	0f 82 11 fc ff ff    	jb     f548 <dlfree+0x2c8>
    f937:	48 39 78 18          	cmp    %rdi,0x18(%rax)
    f93b:	0f 85 07 fc ff ff    	jne    f548 <dlfree+0x2c8>
    f941:	4c 39 c0             	cmp    %r8,%rax
    f944:	0f 84 f6 01 00 00    	je     fb40 <dlfree+0x8c0>
    f94a:	4d 39 c2             	cmp    %r8,%r10
    f94d:	0f 84 7c fb ff ff    	je     f4cf <dlfree+0x24f>
    f953:	e9 6c fb ff ff       	jmp    f4c4 <dlfree+0x244>
    f958:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    f95f:	00 
    f960:	48 8b 47 08          	mov    0x8(%rdi),%rax
    f964:	48 89 c1             	mov    %rax,%rcx
    f967:	48 f7 d1             	not    %rcx
    f96a:	83 e1 03             	and    $0x3,%ecx
    f96d:	0f 85 8f f9 ff ff    	jne    f302 <dlfree+0x82>
    f973:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    f977:	48 89 73 08          	mov    %rsi,0x8(%rbx)
    f97b:	48 89 47 08          	mov    %rax,0x8(%rdi)
    f97f:	48 89 f0             	mov    %rsi,%rax
    f982:	48 83 c8 01          	or     $0x1,%rax
    f986:	48 89 42 08          	mov    %rax,0x8(%rdx)
    f98a:	48 89 37             	mov    %rsi,(%rdi)
    f98d:	e9 ee f9 ff ff       	jmp    f380 <dlfree+0x100>
    f992:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    f998:	09 c7                	or     %eax,%edi
    f99a:	48 89 f0             	mov    %rsi,%rax
    f99d:	89 3b                	mov    %edi,(%rbx)
    f99f:	e9 cc f9 ff ff       	jmp    f370 <dlfree+0xf0>
    f9a4:	0f 1f 40 00          	nopl   0x0(%rax)
    f9a8:	44 09 c0             	or     %r8d,%eax
    f9ab:	48 01 df             	add    %rbx,%rdi
    f9ae:	89 43 04             	mov    %eax,0x4(%rbx)
    f9b1:	48 89 94 cb 58 02 00 	mov    %rdx,0x258(%rbx,%rcx,8)
    f9b8:	00 
    f9b9:	48 89 7a 30          	mov    %rdi,0x30(%rdx)
    f9bd:	0f 11 4a 10          	movups %xmm1,0x10(%rdx)
    f9c1:	e9 3d fc ff ff       	jmp    f603 <dlfree+0x383>
    f9c6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    f9cd:	00 00 00 
    f9d0:	48 8d 0c c7          	lea    (%rdi,%rax,8),%rcx
    f9d4:	4c 39 c9             	cmp    %r9,%rcx
    f9d7:	0f 82 6b fb ff ff    	jb     f548 <dlfree+0x2c8>
    f9dd:	48 89 14 c7          	mov    %rdx,(%rdi,%rax,8)
    f9e1:	48 89 7a 30          	mov    %rdi,0x30(%rdx)
    f9e5:	0f 11 4a 10          	movups %xmm1,0x10(%rdx)
    f9e9:	e9 15 fc ff ff       	jmp    f603 <dlfree+0x383>
    f9ee:	66 90                	xchg   %ax,%ax
    f9f0:	48 03 73 10          	add    0x10(%rbx),%rsi
    f9f4:	48 89 53 28          	mov    %rdx,0x28(%rbx)
    f9f8:	48 89 f0             	mov    %rsi,%rax
    f9fb:	48 89 73 10          	mov    %rsi,0x10(%rbx)
    f9ff:	48 83 c8 01          	or     $0x1,%rax
    fa03:	48 89 42 08          	mov    %rax,0x8(%rdx)
    fa07:	4c 39 da             	cmp    %r11,%rdx
    fa0a:	0f 84 3e 01 00 00    	je     fb4e <dlfree+0x8ce>
    fa10:	48 39 73 30          	cmp    %rsi,0x30(%rbx)
    fa14:	0f 83 66 f9 ff ff    	jae    f380 <dlfree+0x100>
    fa1a:	48 83 3d 5e b5 01 00 	cmpq   $0x0,0x1b55e(%rip)        # 2af80 <mparams>
    fa21:	00 
    fa22:	0f 84 e2 01 00 00    	je     fc0a <dlfree+0x98a>
    fa28:	48 85 d2             	test   %rdx,%rdx
    fa2b:	0f 84 4f f9 ff ff    	je     f380 <dlfree+0x100>
    fa31:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
    fa35:	48 83 f9 50          	cmp    $0x50,%rcx
    fa39:	0f 86 a7 00 00 00    	jbe    fae6 <dlfree+0x866>
    fa3f:	48 8b 35 4a b5 01 00 	mov    0x1b54a(%rip),%rsi        # 2af90 <mparams+0x10>
    fa46:	48 8d ab 78 03 00 00 	lea    0x378(%rbx),%rbp
    fa4d:	0f 1f 00             	nopl   (%rax)
    fa50:	48 8b 45 00          	mov    0x0(%rbp),%rax
    fa54:	48 39 c2             	cmp    %rax,%rdx
    fa57:	72 09                	jb     fa62 <dlfree+0x7e2>
    fa59:	48 03 45 08          	add    0x8(%rbp),%rax
    fa5d:	48 39 c2             	cmp    %rax,%rdx
    fa60:	72 09                	jb     fa6b <dlfree+0x7eb>
    fa62:	48 8b 6d 10          	mov    0x10(%rbp),%rbp
    fa66:	48 85 ed             	test   %rbp,%rbp
    fa69:	75 e5                	jne    fa50 <dlfree+0x7d0>
    fa6b:	f6 45 18 08          	testb  $0x8,0x18(%rbp)
    fa6f:	75 75                	jne    fae6 <dlfree+0x866>
    fa71:	48 8d 44 31 af       	lea    -0x51(%rcx,%rsi,1),%rax
    fa76:	31 d2                	xor    %edx,%edx
    fa78:	48 f7 f6             	div    %rsi
    fa7b:	48 83 e8 01          	sub    $0x1,%rax
    fa7f:	48 0f af c6          	imul   %rsi,%rax
    fa83:	49 89 c4             	mov    %rax,%r12
    fa86:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
    fa8d:	ff ff 7f 
    fa90:	4c 39 e0             	cmp    %r12,%rax
    fa93:	73 0d                	jae    faa2 <dlfree+0x822>
    fa95:	49 bc 00 00 00 00 00 	movabs $0x8000000000000000,%r12
    fa9c:	00 00 80 
    fa9f:	49 29 f4             	sub    %rsi,%r12
    faa2:	b8 01 00 00 00       	mov    $0x1,%eax
    faa7:	87 05 03 b5 01 00    	xchg   %eax,0x1b503(%rip)        # 2afb0 <malloc_global_mutex>
    faad:	48 8d 15 fc b4 01 00 	lea    0x1b4fc(%rip),%rdx        # 2afb0 <malloc_global_mutex>
    fab4:	b9 01 00 00 00       	mov    $0x1,%ecx
    fab9:	85 c0                	test   %eax,%eax
    fabb:	75 40                	jne    fafd <dlfree+0x87d>
    fabd:	31 ff                	xor    %edi,%edi
    fabf:	e8 ec ce ff ff       	call   c9b0 <sbrk>
    fac4:	49 89 c5             	mov    %rax,%r13
    fac7:	48 8b 45 08          	mov    0x8(%rbp),%rax
    facb:	48 03 45 00          	add    0x0(%rbp),%rax
    facf:	49 39 c5             	cmp    %rax,%r13
    fad2:	0f 84 e5 01 00 00    	je     fcbd <dlfree+0xa3d>
    fad8:	c7 05 ce b4 01 00 00 	movl   $0x0,0x1b4ce(%rip)        # 2afb0 <malloc_global_mutex>
    fadf:	00 00 00 
    fae2:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
    fae6:	48 39 4b 30          	cmp    %rcx,0x30(%rbx)
    faea:	0f 83 90 f8 ff ff    	jae    f380 <dlfree+0x100>
    faf0:	48 c7 43 30 ff ff ff 	movq   $0xffffffffffffffff,0x30(%rbx)
    faf7:	ff 
    faf8:	e9 83 f8 ff ff       	jmp    f380 <dlfree+0x100>
    fafd:	8b 02                	mov    (%rdx),%eax
    faff:	85 c0                	test   %eax,%eax
    fb01:	75 fa                	jne    fafd <dlfree+0x87d>
    fb03:	89 c8                	mov    %ecx,%eax
    fb05:	87 05 a5 b4 01 00    	xchg   %eax,0x1b4a5(%rip)        # 2afb0 <malloc_global_mutex>
    fb0b:	85 c0                	test   %eax,%eax
    fb0d:	75 ee                	jne    fafd <dlfree+0x87d>
    fb0f:	eb ac                	jmp    fabd <dlfree+0x83d>
    fb11:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    fb18:	48 03 73 08          	add    0x8(%rbx),%rsi
    fb1c:	48 89 53 20          	mov    %rdx,0x20(%rbx)
    fb20:	48 89 f0             	mov    %rsi,%rax
    fb23:	48 89 73 08          	mov    %rsi,0x8(%rbx)
    fb27:	48 83 c8 01          	or     $0x1,%rax
    fb2b:	48 89 42 08          	mov    %rax,0x8(%rdx)
    fb2f:	48 89 34 32          	mov    %rsi,(%rdx,%rsi,1)
    fb33:	e9 48 f8 ff ff       	jmp    f380 <dlfree+0x100>
    fb38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    fb3f:	00 
    fb40:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    fb45:	d3 c0                	rol    %cl,%eax
    fb47:	21 03                	and    %eax,(%rbx)
    fb49:	e9 89 f9 ff ff       	jmp    f4d7 <dlfree+0x257>
    fb4e:	48 c7 43 20 00 00 00 	movq   $0x0,0x20(%rbx)
    fb55:	00 
    fb56:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
    fb5d:	00 
    fb5e:	e9 ad fe ff ff       	jmp    fa10 <dlfree+0x790>
    fb63:	4e 89 44 d3 08       	mov    %r8,0x8(%rbx,%r10,8)
    fb68:	4d 85 c0             	test   %r8,%r8
    fb6b:	0f 85 4a fb ff ff    	jne    f6bb <dlfree+0x43b>
    fb71:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    fb76:	d3 c0                	rol    %cl,%eax
    fb78:	21 43 04             	and    %eax,0x4(%rbx)
    fb7b:	e9 82 f7 ff ff       	jmp    f302 <dlfree+0x82>
    fb80:	4e 89 44 d3 08       	mov    %r8,0x8(%rbx,%r10,8)
    fb85:	4d 85 c0             	test   %r8,%r8
    fb88:	0f 85 f5 fb ff ff    	jne    f783 <dlfree+0x503>
    fb8e:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    fb93:	d3 c0                	rol    %cl,%eax
    fb95:	21 43 04             	and    %eax,0x4(%rbx)
    fb98:	e9 3a f9 ff ff       	jmp    f4d7 <dlfree+0x257>
    fb9d:	4c 39 c8             	cmp    %r9,%rax
    fba0:	0f 82 a2 f9 ff ff    	jb     f548 <dlfree+0x2c8>
    fba6:	48 39 50 18          	cmp    %rdx,0x18(%rax)
    fbaa:	0f 85 98 f9 ff ff    	jne    f548 <dlfree+0x2c8>
    fbb0:	4c 39 c0             	cmp    %r8,%rax
    fbb3:	0f 84 67 fd ff ff    	je     f920 <dlfree+0x6a0>
    fbb9:	4d 39 c2             	cmp    %r8,%r10
    fbbc:	0f 84 49 f8 ff ff    	je     f40b <dlfree+0x18b>
    fbc2:	e9 31 f8 ff ff       	jmp    f3f8 <dlfree+0x178>
    fbc7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    fbce:	00 00 
    fbd0:	48 8b 42 20          	mov    0x20(%rdx),%rax
    fbd4:	48 85 c0             	test   %rax,%rax
    fbd7:	74 65                	je     fc3e <dlfree+0x9be>
    fbd9:	48 8d 4a 20          	lea    0x20(%rdx),%rcx
    fbdd:	e9 46 fc ff ff       	jmp    f828 <dlfree+0x5a8>
    fbe2:	48 8b 47 20          	mov    0x20(%rdi),%rax
    fbe6:	48 85 c0             	test   %rax,%rax
    fbe9:	0f 84 8f 00 00 00    	je     fc7e <dlfree+0x9fe>
    fbef:	48 8d 4f 20          	lea    0x20(%rdi),%rcx
    fbf3:	e9 b8 fc ff ff       	jmp    f8b0 <dlfree+0x630>
    fbf8:	4d 89 43 20          	mov    %r8,0x20(%r11)
    fbfc:	e9 b1 fa ff ff       	jmp    f6b2 <dlfree+0x432>
    fc01:	4c 89 45 20          	mov    %r8,0x20(%rbp)
    fc05:	e9 70 fb ff ff       	jmp    f77a <dlfree+0x4fa>
    fc0a:	e8 91 d7 ff ff       	call   d3a0 <init_mparams.isra.0>
    fc0f:	48 8b 53 28          	mov    0x28(%rbx),%rdx
    fc13:	e9 10 fe ff ff       	jmp    fa28 <dlfree+0x7a8>
    fc18:	4c 89 44 cb 08       	mov    %r8,0x8(%rbx,%rcx,8)
    fc1d:	e9 99 fa ff ff       	jmp    f6bb <dlfree+0x43b>
    fc22:	4c 89 44 cb 08       	mov    %r8,0x8(%rbx,%rcx,8)
    fc27:	e9 57 fb ff ff       	jmp    f783 <dlfree+0x503>
    fc2c:	4c 89 45 20          	mov    %r8,0x20(%rbp)
    fc30:	e9 4e fb ff ff       	jmp    f783 <dlfree+0x503>
    fc35:	4d 89 43 20          	mov    %r8,0x20(%r11)
    fc39:	e9 7d fa ff ff       	jmp    f6bb <dlfree+0x43b>
    fc3e:	4d 85 db             	test   %r11,%r11
    fc41:	0f 84 bb f6 ff ff    	je     f302 <dlfree+0x82>
    fc47:	8b 42 38             	mov    0x38(%rdx),%eax
    fc4a:	48 89 c1             	mov    %rax,%rcx
    fc4d:	4c 8d 40 4a          	lea    0x4a(%rax),%r8
    fc51:	48 39 94 c3 58 02 00 	cmp    %rdx,0x258(%rbx,%rax,8)
    fc58:	00 
    fc59:	0f 84 fd 00 00 00    	je     fd5c <dlfree+0xadc>
    fc5f:	4d 39 cb             	cmp    %r9,%r11
    fc62:	0f 82 e0 f8 ff ff    	jb     f548 <dlfree+0x2c8>
    fc68:	49 3b 53 20          	cmp    0x20(%r11),%rdx
    fc6c:	0f 84 02 01 00 00    	je     fd74 <dlfree+0xaf4>
    fc72:	45 31 c0             	xor    %r8d,%r8d
    fc75:	4d 89 43 28          	mov    %r8,0x28(%r11)
    fc79:	e9 84 f6 ff ff       	jmp    f302 <dlfree+0x82>
    fc7e:	48 85 ed             	test   %rbp,%rbp
    fc81:	0f 84 50 f8 ff ff    	je     f4d7 <dlfree+0x257>
    fc87:	8b 47 38             	mov    0x38(%rdi),%eax
    fc8a:	48 89 c1             	mov    %rax,%rcx
    fc8d:	4c 8d 40 4a          	lea    0x4a(%rax),%r8
    fc91:	48 3b bc c3 58 02 00 	cmp    0x258(%rbx,%rax,8),%rdi
    fc98:	00 
    fc99:	0f 84 b1 00 00 00    	je     fd50 <dlfree+0xad0>
    fc9f:	4c 39 cd             	cmp    %r9,%rbp
    fca2:	0f 82 a0 f8 ff ff    	jb     f548 <dlfree+0x2c8>
    fca8:	48 39 7d 20          	cmp    %rdi,0x20(%rbp)
    fcac:	0f 84 b7 00 00 00    	je     fd69 <dlfree+0xae9>
    fcb2:	31 c0                	xor    %eax,%eax
    fcb4:	48 89 45 28          	mov    %rax,0x28(%rbp)
    fcb8:	e9 1a f8 ff ff       	jmp    f4d7 <dlfree+0x257>
    fcbd:	4c 89 e7             	mov    %r12,%rdi
    fcc0:	48 f7 df             	neg    %rdi
    fcc3:	e8 e8 cc ff ff       	call   c9b0 <sbrk>
    fcc8:	31 ff                	xor    %edi,%edi
    fcca:	49 89 c4             	mov    %rax,%r12
    fccd:	e8 de cc ff ff       	call   c9b0 <sbrk>
    fcd2:	49 83 c4 01          	add    $0x1,%r12
    fcd6:	0f 84 fc fd ff ff    	je     fad8 <dlfree+0x858>
    fcdc:	4c 39 e8             	cmp    %r13,%rax
    fcdf:	0f 83 f3 fd ff ff    	jae    fad8 <dlfree+0x858>
    fce5:	49 29 c5             	sub    %rax,%r13
    fce8:	c7 05 be b2 01 00 00 	movl   $0x0,0x1b2be(%rip)        # 2afb0 <malloc_global_mutex>
    fcef:	00 00 00 
    fcf2:	48 8b 43 28          	mov    0x28(%rbx),%rax
    fcf6:	48 8b 53 10          	mov    0x10(%rbx),%rdx
    fcfa:	4c 29 6d 08          	sub    %r13,0x8(%rbp)
    fcfe:	48 89 c6             	mov    %rax,%rsi
    fd01:	4c 29 ea             	sub    %r13,%rdx
    fd04:	48 8d 48 10          	lea    0x10(%rax),%rcx
    fd08:	4c 29 ab 58 03 00 00 	sub    %r13,0x358(%rbx)
    fd0f:	83 e6 0f             	and    $0xf,%esi
    fd12:	74 09                	je     fd1d <dlfree+0xa9d>
    fd14:	48 f7 d9             	neg    %rcx
    fd17:	48 89 ce             	mov    %rcx,%rsi
    fd1a:	83 e6 0f             	and    $0xf,%esi
    fd1d:	48 89 d1             	mov    %rdx,%rcx
    fd20:	48 8d 3c 30          	lea    (%rax,%rsi,1),%rdi
    fd24:	48 29 f1             	sub    %rsi,%rcx
    fd27:	48 89 7b 28          	mov    %rdi,0x28(%rbx)
    fd2b:	48 89 4b 10          	mov    %rcx,0x10(%rbx)
    fd2f:	48 83 c9 01          	or     $0x1,%rcx
    fd33:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
    fd37:	48 c7 44 10 08 50 00 	movq   $0x50,0x8(%rax,%rdx,1)
    fd3e:	00 00 
    fd40:	48 8b 05 59 b2 01 00 	mov    0x1b259(%rip),%rax        # 2afa0 <mparams+0x20>
    fd47:	48 89 43 30          	mov    %rax,0x30(%rbx)
    fd4b:	e9 30 f6 ff ff       	jmp    f380 <dlfree+0x100>
    fd50:	31 ff                	xor    %edi,%edi
    fd52:	4a 89 7c c3 08       	mov    %rdi,0x8(%rbx,%r8,8)
    fd57:	e9 32 fe ff ff       	jmp    fb8e <dlfree+0x90e>
    fd5c:	45 31 db             	xor    %r11d,%r11d
    fd5f:	4e 89 5c c3 08       	mov    %r11,0x8(%rbx,%r8,8)
    fd64:	e9 08 fe ff ff       	jmp    fb71 <dlfree+0x8f1>
    fd69:	31 c9                	xor    %ecx,%ecx
    fd6b:	48 89 4d 20          	mov    %rcx,0x20(%rbp)
    fd6f:	e9 63 f7 ff ff       	jmp    f4d7 <dlfree+0x257>
    fd74:	45 31 d2             	xor    %r10d,%r10d
    fd77:	4d 89 53 20          	mov    %r10,0x20(%r11)
    fd7b:	e9 82 f5 ff ff       	jmp    f302 <dlfree+0x82>

000000000000fd80 <calloc>:
    fd80:	f3 0f 1e fa          	endbr64 
    fd84:	55                   	push   %rbp
    fd85:	53                   	push   %rbx
    fd86:	48 89 fb             	mov    %rdi,%rbx
    fd89:	48 83 ec 08          	sub    $0x8,%rsp
    fd8d:	48 85 ff             	test   %rdi,%rdi
    fd90:	74 1b                	je     fdad <calloc+0x2d>
    fd92:	48 89 f8             	mov    %rdi,%rax
    fd95:	48 f7 e6             	mul    %rsi
    fd98:	0f 90 c2             	seto   %dl
    fd9b:	48 09 fe             	or     %rdi,%rsi
    fd9e:	48 89 c3             	mov    %rax,%rbx
    fda1:	0f b6 d2             	movzbl %dl,%edx
    fda4:	48 81 fe ff ff 00 00 	cmp    $0xffff,%rsi
    fdab:	77 2b                	ja     fdd8 <calloc+0x58>
    fdad:	48 89 df             	mov    %rbx,%rdi
    fdb0:	e8 db d6 ff ff       	call   d490 <dlmalloc>
    fdb5:	48 89 c5             	mov    %rax,%rbp
    fdb8:	48 85 c0             	test   %rax,%rax
    fdbb:	74 0d                	je     fdca <calloc+0x4a>
    fdbd:	48 89 da             	mov    %rbx,%rdx
    fdc0:	31 f6                	xor    %esi,%esi
    fdc2:	48 89 c7             	mov    %rax,%rdi
    fdc5:	e8 a6 0e 00 00       	call   10c70 <memset>
    fdca:	48 83 c4 08          	add    $0x8,%rsp
    fdce:	48 89 e8             	mov    %rbp,%rax
    fdd1:	5b                   	pop    %rbx
    fdd2:	5d                   	pop    %rbp
    fdd3:	c3                   	ret    
    fdd4:	0f 1f 40 00          	nopl   0x0(%rax)
    fdd8:	48 85 d2             	test   %rdx,%rdx
    fddb:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    fde2:	48 0f 45 d8          	cmovne %rax,%rbx
    fde6:	eb c5                	jmp    fdad <calloc+0x2d>
    fde8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    fdef:	00 

000000000000fdf0 <dlrealloc>:
    fdf0:	f3 0f 1e fa          	endbr64 
    fdf4:	41 57                	push   %r15
    fdf6:	41 56                	push   %r14
    fdf8:	41 55                	push   %r13
    fdfa:	41 54                	push   %r12
    fdfc:	55                   	push   %rbp
    fdfd:	53                   	push   %rbx
    fdfe:	48 89 f3             	mov    %rsi,%rbx
    fe01:	48 83 ec 08          	sub    $0x8,%rsp
    fe05:	48 85 ff             	test   %rdi,%rdi
    fe08:	0f 84 f2 01 00 00    	je     10000 <dlrealloc+0x210>
    fe0e:	48 81 fe 7f ff ff ff 	cmp    $0xffffffffffffff7f,%rsi
    fe15:	0f 87 05 02 00 00    	ja     10020 <dlrealloc+0x230>
    fe1b:	48 89 fd             	mov    %rdi,%rbp
    fe1e:	48 85 f6             	test   %rsi,%rsi
    fe21:	0f 84 11 02 00 00    	je     10038 <dlrealloc+0x248>
    fe27:	48 8d 46 1f          	lea    0x1f(%rsi),%rax
    fe2b:	ba 20 00 00 00       	mov    $0x20,%edx
    fe30:	4c 8d 6f f0          	lea    -0x10(%rdi),%r13
    fe34:	48 8b 0d 45 b1 01 00 	mov    0x1b145(%rip),%rcx        # 2af80 <mparams>
    fe3b:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
    fe3f:	48 83 fe 0e          	cmp    $0xe,%rsi
    fe43:	48 8b 77 f8          	mov    -0x8(%rdi),%rsi
    fe47:	48 0f 46 c2          	cmovbe %rdx,%rax
    fe4b:	48 89 f2             	mov    %rsi,%rdx
    fe4e:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    fe52:	49 8d 7c 15 00       	lea    0x0(%r13,%rdx,1),%rdi
    fe57:	4c 8b 27             	mov    (%rdi),%r12
    fe5a:	49 31 cc             	xor    %rcx,%r12
    fe5d:	49 3b 4c 24 40       	cmp    0x40(%r12),%rcx
    fe62:	0f 85 90 01 00 00    	jne    fff8 <dlrealloc+0x208>
    fe68:	41 f6 84 24 70 03 00 	testb  $0x2,0x370(%r12)
    fe6f:	00 02 
    fe71:	0f 85 89 00 00 00    	jne    ff00 <dlrealloc+0x110>
    fe77:	4d 8b 44 24 18       	mov    0x18(%r12),%r8
    fe7c:	4d 39 c5             	cmp    %r8,%r13
    fe7f:	0f 82 73 01 00 00    	jb     fff8 <dlrealloc+0x208>
    fe85:	48 89 f1             	mov    %rsi,%rcx
    fe88:	83 e1 03             	and    $0x3,%ecx
    fe8b:	48 83 f9 01          	cmp    $0x1,%rcx
    fe8f:	0f 84 63 01 00 00    	je     fff8 <dlrealloc+0x208>
    fe95:	49 39 fd             	cmp    %rdi,%r13
    fe98:	0f 83 5a 01 00 00    	jae    fff8 <dlrealloc+0x208>
    fe9e:	4c 8b 4f 08          	mov    0x8(%rdi),%r9
    fea2:	41 f6 c1 01          	test   $0x1,%r9b
    fea6:	0f 84 4c 01 00 00    	je     fff8 <dlrealloc+0x208>
    feac:	48 85 c9             	test   %rcx,%rcx
    feaf:	0f 84 8b 00 00 00    	je     ff40 <dlrealloc+0x150>
    feb5:	48 39 c2             	cmp    %rax,%rdx
    feb8:	0f 82 82 01 00 00    	jb     10040 <dlrealloc+0x250>
    febe:	48 29 c2             	sub    %rax,%rdx
    fec1:	49 89 d6             	mov    %rdx,%r14
    fec4:	48 83 fa 1f          	cmp    $0x1f,%rdx
    fec8:	0f 87 fa 02 00 00    	ja     101c8 <dlrealloc+0x3d8>
    fece:	41 8b 8c 24 70 03 00 	mov    0x370(%r12),%ecx
    fed5:	00 
    fed6:	83 e1 02             	and    $0x2,%ecx
    fed9:	0f 85 31 02 00 00    	jne    10110 <dlrealloc+0x320>
    fedf:	4d 85 ed             	test   %r13,%r13
    fee2:	0f 84 94 00 00 00    	je     ff7c <dlrealloc+0x18c>
    fee8:	49 89 ec             	mov    %rbp,%r12
    feeb:	48 83 c4 08          	add    $0x8,%rsp
    feef:	4c 89 e0             	mov    %r12,%rax
    fef2:	5b                   	pop    %rbx
    fef3:	5d                   	pop    %rbp
    fef4:	41 5c                	pop    %r12
    fef6:	41 5d                	pop    %r13
    fef8:	41 5e                	pop    %r14
    fefa:	41 5f                	pop    %r15
    fefc:	c3                   	ret    
    fefd:	0f 1f 00             	nopl   (%rax)
    ff00:	49 8d 8c 24 74 03 00 	lea    0x374(%r12),%rcx
    ff07:	00 
    ff08:	ba 01 00 00 00       	mov    $0x1,%edx
    ff0d:	87 11                	xchg   %edx,(%rcx)
    ff0f:	85 d2                	test   %edx,%edx
    ff11:	0f 85 b9 00 00 00    	jne    ffd0 <dlrealloc+0x1e0>
    ff17:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    ff1b:	4d 8b 44 24 18       	mov    0x18(%r12),%r8
    ff20:	48 89 f2             	mov    %rsi,%rdx
    ff23:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    ff27:	49 8d 7c 15 00       	lea    0x0(%r13,%rdx,1),%rdi
    ff2c:	4d 39 c5             	cmp    %r8,%r13
    ff2f:	0f 83 50 ff ff ff    	jae    fe85 <dlrealloc+0x95>
    ff35:	e9 be 00 00 00       	jmp    fff8 <dlrealloc+0x208>
    ff3a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    ff40:	41 8b 8c 24 70 03 00 	mov    0x370(%r12),%ecx
    ff47:	00 
    ff48:	89 ce                	mov    %ecx,%esi
    ff4a:	83 e6 02             	and    $0x2,%esi
    ff4d:	48 3d f8 00 00 00    	cmp    $0xf8,%rax
    ff53:	76 1f                	jbe    ff74 <dlrealloc+0x184>
    ff55:	48 8d 78 08          	lea    0x8(%rax),%rdi
    ff59:	48 39 fa             	cmp    %rdi,%rdx
    ff5c:	72 16                	jb     ff74 <dlrealloc+0x184>
    ff5e:	48 29 c2             	sub    %rax,%rdx
    ff61:	48 8b 05 28 b0 01 00 	mov    0x1b028(%rip),%rax        # 2af90 <mparams+0x10>
    ff68:	48 01 c0             	add    %rax,%rax
    ff6b:	48 39 d0             	cmp    %rdx,%rax
    ff6e:	0f 83 62 ff ff ff    	jae    fed6 <dlrealloc+0xe6>
    ff74:	85 f6                	test   %esi,%esi
    ff76:	0f 85 c4 01 00 00    	jne    10140 <dlrealloc+0x350>
    ff7c:	48 89 df             	mov    %rbx,%rdi
    ff7f:	e8 0c d5 ff ff       	call   d490 <dlmalloc>
    ff84:	49 89 c4             	mov    %rax,%r12
    ff87:	48 85 c0             	test   %rax,%rax
    ff8a:	0f 84 5b ff ff ff    	je     feeb <dlrealloc+0xfb>
    ff90:	4c 8b 6d f8          	mov    -0x8(%rbp),%r13
    ff94:	48 89 ee             	mov    %rbp,%rsi
    ff97:	48 89 c7             	mov    %rax,%rdi
    ff9a:	49 83 e5 f8          	and    $0xfffffffffffffff8,%r13
    ff9e:	49 83 ed 10          	sub    $0x10,%r13
    ffa2:	4c 39 eb             	cmp    %r13,%rbx
    ffa5:	49 0f 47 dd          	cmova  %r13,%rbx
    ffa9:	48 89 da             	mov    %rbx,%rdx
    ffac:	e8 7f 0a 00 00       	call   10a30 <memcpy>
    ffb1:	48 89 ef             	mov    %rbp,%rdi
    ffb4:	4c 89 ea             	mov    %r13,%rdx
    ffb7:	31 f6                	xor    %esi,%esi
    ffb9:	e8 b2 0c 00 00       	call   10c70 <memset>
    ffbe:	48 89 ef             	mov    %rbp,%rdi
    ffc1:	e8 ba f2 ff ff       	call   f280 <dlfree>
    ffc6:	e9 20 ff ff ff       	jmp    feeb <dlrealloc+0xfb>
    ffcb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    ffd0:	be 01 00 00 00       	mov    $0x1,%esi
    ffd5:	0f 1f 00             	nopl   (%rax)
    ffd8:	41 8b 94 24 74 03 00 	mov    0x374(%r12),%edx
    ffdf:	00 
    ffe0:	85 d2                	test   %edx,%edx
    ffe2:	75 f4                	jne    ffd8 <dlrealloc+0x1e8>
    ffe4:	89 f2                	mov    %esi,%edx
    ffe6:	87 11                	xchg   %edx,(%rcx)
    ffe8:	85 d2                	test   %edx,%edx
    ffea:	75 ec                	jne    ffd8 <dlrealloc+0x1e8>
    ffec:	e9 26 ff ff ff       	jmp    ff17 <dlrealloc+0x127>
    fff1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    fff8:	e8 3a 29 00 00       	call   12937 <abort>
    fffd:	0f 1f 00             	nopl   (%rax)
   10000:	48 83 c4 08          	add    $0x8,%rsp
   10004:	48 89 f7             	mov    %rsi,%rdi
   10007:	5b                   	pop    %rbx
   10008:	5d                   	pop    %rbp
   10009:	41 5c                	pop    %r12
   1000b:	41 5d                	pop    %r13
   1000d:	41 5e                	pop    %r14
   1000f:	41 5f                	pop    %r15
   10011:	e9 7a d4 ff ff       	jmp    d490 <dlmalloc>
   10016:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1001d:	00 00 00 
   10020:	e8 ab 12 00 00       	call   112d0 <__errno_location>
   10025:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   1002b:	45 31 e4             	xor    %r12d,%r12d
   1002e:	e9 b8 fe ff ff       	jmp    feeb <dlrealloc+0xfb>
   10033:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10038:	e8 43 f2 ff ff       	call   f280 <dlfree>
   1003d:	eb ec                	jmp    1002b <dlrealloc+0x23b>
   1003f:	90                   	nop
   10040:	49 39 7c 24 28       	cmp    %rdi,0x28(%r12)
   10045:	0f 84 d5 01 00 00    	je     10220 <dlrealloc+0x430>
   1004b:	49 39 7c 24 20       	cmp    %rdi,0x20(%r12)
   10050:	0f 84 02 01 00 00    	je     10158 <dlrealloc+0x368>
   10056:	41 f6 c1 02          	test   $0x2,%r9b
   1005a:	0f 85 c8 00 00 00    	jne    10128 <dlrealloc+0x338>
   10060:	49 83 e1 f8          	and    $0xfffffffffffffff8,%r9
   10064:	4e 8d 14 0a          	lea    (%rdx,%r9,1),%r10
   10068:	49 39 c2             	cmp    %rax,%r10
   1006b:	0f 82 b7 00 00 00    	jb     10128 <dlrealloc+0x338>
   10071:	4c 89 d2             	mov    %r10,%rdx
   10074:	4c 89 c9             	mov    %r9,%rcx
   10077:	48 29 c2             	sub    %rax,%rdx
   1007a:	48 c1 e9 03          	shr    $0x3,%rcx
   1007e:	49 81 f9 f8 00 00 00 	cmp    $0xf8,%r9
   10085:	0f 87 f2 01 00 00    	ja     1027d <dlrealloc+0x48d>
   1008b:	44 8d 74 09 09       	lea    0x9(%rcx,%rcx,1),%r14d
   10090:	4c 8b 4f 10          	mov    0x10(%rdi),%r9
   10094:	4c 8b 5f 18          	mov    0x18(%rdi),%r11
   10098:	4f 8d 34 f4          	lea    (%r12,%r14,8),%r14
   1009c:	4d 39 f1             	cmp    %r14,%r9
   1009f:	0f 85 c6 03 00 00    	jne    1046b <dlrealloc+0x67b>
   100a5:	4d 39 cb             	cmp    %r9,%r11
   100a8:	0f 84 7c 03 00 00    	je     1042a <dlrealloc+0x63a>
   100ae:	4d 39 c3             	cmp    %r8,%r11
   100b1:	0f 82 41 ff ff ff    	jb     fff8 <dlrealloc+0x208>
   100b7:	49 39 7b 10          	cmp    %rdi,0x10(%r11)
   100bb:	0f 85 37 ff ff ff    	jne    fff8 <dlrealloc+0x208>
   100c1:	4d 89 59 18          	mov    %r11,0x18(%r9)
   100c5:	4d 89 4b 10          	mov    %r9,0x10(%r11)
   100c9:	48 8b 3d b0 ae 01 00 	mov    0x1aeb0(%rip),%rdi        # 2af80 <mparams>
   100d0:	83 e6 01             	and    $0x1,%esi
   100d3:	4b 8d 4c 15 00       	lea    0x0(%r13,%r10,1),%rcx
   100d8:	4c 31 e7             	xor    %r12,%rdi
   100db:	48 83 fa 1f          	cmp    $0x1f,%rdx
   100df:	0f 87 88 02 00 00    	ja     1036d <dlrealloc+0x57d>
   100e5:	4c 89 d2             	mov    %r10,%rdx
   100e8:	48 09 f2             	or     %rsi,%rdx
   100eb:	48 83 ca 02          	or     $0x2,%rdx
   100ef:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
   100f3:	48 89 39             	mov    %rdi,(%rcx)
   100f6:	48 83 49 08 01       	orq    $0x1,0x8(%rcx)
   100fb:	41 8b 8c 24 70 03 00 	mov    0x370(%r12),%ecx
   10102:	00 
   10103:	e9 ce fd ff ff       	jmp    fed6 <dlrealloc+0xe6>
   10108:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1010f:	00 
   10110:	41 c7 84 24 74 03 00 	movl   $0x0,0x374(%r12)
   10117:	00 00 00 00 00 
   1011c:	e9 be fd ff ff       	jmp    fedf <dlrealloc+0xef>
   10121:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10128:	41 f6 84 24 70 03 00 	testb  $0x2,0x370(%r12)
   1012f:	00 02 
   10131:	0f 84 45 fe ff ff    	je     ff7c <dlrealloc+0x18c>
   10137:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1013e:	00 00 
   10140:	41 c7 84 24 74 03 00 	movl   $0x0,0x374(%r12)
   10147:	00 00 00 00 00 
   1014c:	e9 2b fe ff ff       	jmp    ff7c <dlrealloc+0x18c>
   10151:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10158:	49 03 54 24 08       	add    0x8(%r12),%rdx
   1015d:	41 8b 8c 24 70 03 00 	mov    0x370(%r12),%ecx
   10164:	00 
   10165:	48 39 c2             	cmp    %rax,%rdx
   10168:	0f 82 01 01 00 00    	jb     1026f <dlrealloc+0x47f>
   1016e:	4c 8b 05 0b ae 01 00 	mov    0x1ae0b(%rip),%r8        # 2af80 <mparams>
   10175:	49 89 d1             	mov    %rdx,%r9
   10178:	49 8d 7c 15 00       	lea    0x0(%r13,%rdx,1),%rdi
   1017d:	83 e6 01             	and    $0x1,%esi
   10180:	49 29 c1             	sub    %rax,%r9
   10183:	4d 31 e0             	xor    %r12,%r8
   10186:	49 83 f9 1f          	cmp    $0x1f,%r9
   1018a:	0f 86 b3 01 00 00    	jbe    10343 <dlrealloc+0x553>
   10190:	49 8d 54 05 00       	lea    0x0(%r13,%rax,1),%rdx
   10195:	48 09 c6             	or     %rax,%rsi
   10198:	4c 89 c8             	mov    %r9,%rax
   1019b:	48 83 ce 02          	or     $0x2,%rsi
   1019f:	48 83 c8 01          	or     $0x1,%rax
   101a3:	48 89 75 f8          	mov    %rsi,-0x8(%rbp)
   101a7:	4c 89 02             	mov    %r8,(%rdx)
   101aa:	48 89 42 08          	mov    %rax,0x8(%rdx)
   101ae:	4c 89 0f             	mov    %r9,(%rdi)
   101b1:	48 83 67 08 fe       	andq   $0xfffffffffffffffe,0x8(%rdi)
   101b6:	4d 89 4c 24 08       	mov    %r9,0x8(%r12)
   101bb:	49 89 54 24 20       	mov    %rdx,0x20(%r12)
   101c0:	e9 11 fd ff ff       	jmp    fed6 <dlrealloc+0xe6>
   101c5:	0f 1f 00             	nopl   (%rax)
   101c8:	83 e6 01             	and    $0x1,%esi
   101cb:	4d 8d 7c 05 00       	lea    0x0(%r13,%rax,1),%r15
   101d0:	48 83 ca 03          	or     $0x3,%rdx
   101d4:	48 09 c6             	or     %rax,%rsi
   101d7:	48 8b 05 a2 ad 01 00 	mov    0x1ada2(%rip),%rax        # 2af80 <mparams>
   101de:	48 83 ce 02          	or     $0x2,%rsi
   101e2:	4c 31 e0             	xor    %r12,%rax
   101e5:	48 89 75 f8          	mov    %rsi,-0x8(%rbp)
   101e9:	31 f6                	xor    %esi,%esi
   101eb:	49 89 57 08          	mov    %rdx,0x8(%r15)
   101ef:	49 8d 56 f0          	lea    -0x10(%r14),%rdx
   101f3:	49 89 07             	mov    %rax,(%r15)
   101f6:	48 83 4f 08 01       	orq    $0x1,0x8(%rdi)
   101fb:	48 89 07             	mov    %rax,(%rdi)
   101fe:	49 8d 7f 10          	lea    0x10(%r15),%rdi
   10202:	e8 69 0a 00 00       	call   10c70 <memset>
   10207:	4c 89 f2             	mov    %r14,%rdx
   1020a:	4c 89 fe             	mov    %r15,%rsi
   1020d:	4c 89 e7             	mov    %r12,%rdi
   10210:	e8 5b c9 ff ff       	call   cb70 <dispose_chunk>
   10215:	e9 b4 fc ff ff       	jmp    fece <dlrealloc+0xde>
   1021a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10220:	49 03 54 24 10       	add    0x10(%r12),%rdx
   10225:	41 8b 8c 24 70 03 00 	mov    0x370(%r12),%ecx
   1022c:	00 
   1022d:	48 39 d0             	cmp    %rdx,%rax
   10230:	73 3d                	jae    1026f <dlrealloc+0x47f>
   10232:	83 e6 01             	and    $0x1,%esi
   10235:	49 8d 7c 05 00       	lea    0x0(%r13,%rax,1),%rdi
   1023a:	48 29 c2             	sub    %rax,%rdx
   1023d:	48 09 c6             	or     %rax,%rsi
   10240:	48 8b 05 39 ad 01 00 	mov    0x1ad39(%rip),%rax        # 2af80 <mparams>
   10247:	48 83 ce 02          	or     $0x2,%rsi
   1024b:	4c 31 e0             	xor    %r12,%rax
   1024e:	48 89 75 f8          	mov    %rsi,-0x8(%rbp)
   10252:	48 89 07             	mov    %rax,(%rdi)
   10255:	48 89 d0             	mov    %rdx,%rax
   10258:	48 83 c8 01          	or     $0x1,%rax
   1025c:	48 89 47 08          	mov    %rax,0x8(%rdi)
   10260:	49 89 7c 24 28       	mov    %rdi,0x28(%r12)
   10265:	49 89 54 24 10       	mov    %rdx,0x10(%r12)
   1026a:	e9 67 fc ff ff       	jmp    fed6 <dlrealloc+0xe6>
   1026f:	83 e1 02             	and    $0x2,%ecx
   10272:	0f 84 04 fd ff ff    	je     ff7c <dlrealloc+0x18c>
   10278:	e9 c3 fe ff ff       	jmp    10140 <dlrealloc+0x350>
   1027d:	4c 8b 5f 18          	mov    0x18(%rdi),%r11
   10281:	4c 8b 7f 30          	mov    0x30(%rdi),%r15
   10285:	49 39 fb             	cmp    %rdi,%r11
   10288:	0f 84 1d 01 00 00    	je     103ab <dlrealloc+0x5bb>
   1028e:	48 8b 4f 10          	mov    0x10(%rdi),%rcx
   10292:	4c 39 c1             	cmp    %r8,%rcx
   10295:	0f 82 5d fd ff ff    	jb     fff8 <dlrealloc+0x208>
   1029b:	48 39 79 18          	cmp    %rdi,0x18(%rcx)
   1029f:	0f 85 53 fd ff ff    	jne    fff8 <dlrealloc+0x208>
   102a5:	49 39 7b 10          	cmp    %rdi,0x10(%r11)
   102a9:	0f 85 49 fd ff ff    	jne    fff8 <dlrealloc+0x208>
   102af:	4c 89 59 18          	mov    %r11,0x18(%rcx)
   102b3:	49 89 4b 10          	mov    %rcx,0x10(%r11)
   102b7:	4d 85 ff             	test   %r15,%r15
   102ba:	0f 84 09 fe ff ff    	je     100c9 <dlrealloc+0x2d9>
   102c0:	44 8b 4f 38          	mov    0x38(%rdi),%r9d
   102c4:	4c 89 c9             	mov    %r9,%rcx
   102c7:	4d 8d 71 4a          	lea    0x4a(%r9),%r14
   102cb:	4b 3b bc cc 58 02 00 	cmp    0x258(%r12,%r9,8),%rdi
   102d2:	00 
   102d3:	0f 84 61 01 00 00    	je     1043a <dlrealloc+0x64a>
   102d9:	4d 39 c7             	cmp    %r8,%r15
   102dc:	0f 82 16 fd ff ff    	jb     fff8 <dlrealloc+0x208>
   102e2:	49 3b 7f 20          	cmp    0x20(%r15),%rdi
   102e6:	0f 84 a5 01 00 00    	je     10491 <dlrealloc+0x6a1>
   102ec:	4d 89 5f 28          	mov    %r11,0x28(%r15)
   102f0:	4d 85 db             	test   %r11,%r11
   102f3:	0f 84 d0 fd ff ff    	je     100c9 <dlrealloc+0x2d9>
   102f9:	4d 39 c3             	cmp    %r8,%r11
   102fc:	0f 82 f6 fc ff ff    	jb     fff8 <dlrealloc+0x208>
   10302:	48 8b 4f 20          	mov    0x20(%rdi),%rcx
   10306:	4d 89 7b 30          	mov    %r15,0x30(%r11)
   1030a:	48 85 c9             	test   %rcx,%rcx
   1030d:	74 11                	je     10320 <dlrealloc+0x530>
   1030f:	4c 39 c1             	cmp    %r8,%rcx
   10312:	0f 82 e0 fc ff ff    	jb     fff8 <dlrealloc+0x208>
   10318:	49 89 4b 20          	mov    %rcx,0x20(%r11)
   1031c:	4c 89 59 30          	mov    %r11,0x30(%rcx)
   10320:	48 8b 4f 28          	mov    0x28(%rdi),%rcx
   10324:	48 85 c9             	test   %rcx,%rcx
   10327:	0f 84 9c fd ff ff    	je     100c9 <dlrealloc+0x2d9>
   1032d:	4c 39 c1             	cmp    %r8,%rcx
   10330:	0f 82 c2 fc ff ff    	jb     fff8 <dlrealloc+0x208>
   10336:	49 89 4b 28          	mov    %rcx,0x28(%r11)
   1033a:	4c 89 59 30          	mov    %r11,0x30(%rcx)
   1033e:	e9 86 fd ff ff       	jmp    100c9 <dlrealloc+0x2d9>
   10343:	48 09 f2             	or     %rsi,%rdx
   10346:	48 83 ca 02          	or     $0x2,%rdx
   1034a:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
   1034e:	4c 89 07             	mov    %r8,(%rdi)
   10351:	48 83 4f 08 01       	orq    $0x1,0x8(%rdi)
   10356:	49 c7 44 24 08 00 00 	movq   $0x0,0x8(%r12)
   1035d:	00 00 
   1035f:	49 c7 44 24 20 00 00 	movq   $0x0,0x20(%r12)
   10366:	00 00 
   10368:	e9 69 fb ff ff       	jmp    fed6 <dlrealloc+0xe6>
   1036d:	4d 8d 44 05 00       	lea    0x0(%r13,%rax,1),%r8
   10372:	48 09 f0             	or     %rsi,%rax
   10375:	48 83 c8 02          	or     $0x2,%rax
   10379:	4c 89 c6             	mov    %r8,%rsi
   1037c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   10380:	48 89 d0             	mov    %rdx,%rax
   10383:	48 83 c8 03          	or     $0x3,%rax
   10387:	49 89 38             	mov    %rdi,(%r8)
   1038a:	49 89 40 08          	mov    %rax,0x8(%r8)
   1038e:	48 83 49 08 01       	orq    $0x1,0x8(%rcx)
   10393:	48 89 39             	mov    %rdi,(%rcx)
   10396:	4c 89 e7             	mov    %r12,%rdi
   10399:	e8 d2 c7 ff ff       	call   cb70 <dispose_chunk>
   1039e:	41 8b 8c 24 70 03 00 	mov    0x370(%r12),%ecx
   103a5:	00 
   103a6:	e9 2b fb ff ff       	jmp    fed6 <dlrealloc+0xe6>
   103ab:	48 8b 4f 28          	mov    0x28(%rdi),%rcx
   103af:	4c 8d 4f 28          	lea    0x28(%rdi),%r9
   103b3:	48 85 c9             	test   %rcx,%rcx
   103b6:	0f 84 9d 00 00 00    	je     10459 <dlrealloc+0x669>
   103bc:	0f 1f 40 00          	nopl   0x0(%rax)
   103c0:	4d 89 ce             	mov    %r9,%r14
   103c3:	49 89 cb             	mov    %rcx,%r11
   103c6:	4c 8d 49 28          	lea    0x28(%rcx),%r9
   103ca:	48 8b 49 28          	mov    0x28(%rcx),%rcx
   103ce:	48 85 c9             	test   %rcx,%rcx
   103d1:	75 ed                	jne    103c0 <dlrealloc+0x5d0>
   103d3:	49 8b 4b 20          	mov    0x20(%r11),%rcx
   103d7:	4d 8d 4b 20          	lea    0x20(%r11),%r9
   103db:	48 85 c9             	test   %rcx,%rcx
   103de:	75 e0                	jne    103c0 <dlrealloc+0x5d0>
   103e0:	4d 39 c6             	cmp    %r8,%r14
   103e3:	0f 82 0f fc ff ff    	jb     fff8 <dlrealloc+0x208>
   103e9:	49 c7 06 00 00 00 00 	movq   $0x0,(%r14)
   103f0:	4d 85 ff             	test   %r15,%r15
   103f3:	0f 84 d0 fc ff ff    	je     100c9 <dlrealloc+0x2d9>
   103f9:	8b 4f 38             	mov    0x38(%rdi),%ecx
   103fc:	4c 8d 49 4a          	lea    0x4a(%rcx),%r9
   10400:	49 3b bc cc 58 02 00 	cmp    0x258(%r12,%rcx,8),%rdi
   10407:	00 
   10408:	0f 84 8c 00 00 00    	je     1049a <dlrealloc+0x6aa>
   1040e:	4d 39 c7             	cmp    %r8,%r15
   10411:	0f 82 e1 fb ff ff    	jb     fff8 <dlrealloc+0x208>
   10417:	49 3b 7f 20          	cmp    0x20(%r15),%rdi
   1041b:	0f 84 bb 00 00 00    	je     104dc <dlrealloc+0x6ec>
   10421:	4d 89 5f 28          	mov    %r11,0x28(%r15)
   10425:	e9 cf fe ff ff       	jmp    102f9 <dlrealloc+0x509>
   1042a:	bf fe ff ff ff       	mov    $0xfffffffe,%edi
   1042f:	d3 c7                	rol    %cl,%edi
   10431:	41 21 3c 24          	and    %edi,(%r12)
   10435:	e9 8f fc ff ff       	jmp    100c9 <dlrealloc+0x2d9>
   1043a:	4f 89 5c f4 08       	mov    %r11,0x8(%r12,%r14,8)
   1043f:	4d 85 db             	test   %r11,%r11
   10442:	0f 85 b1 fe ff ff    	jne    102f9 <dlrealloc+0x509>
   10448:	bf fe ff ff ff       	mov    $0xfffffffe,%edi
   1044d:	d3 c7                	rol    %cl,%edi
   1044f:	41 21 7c 24 04       	and    %edi,0x4(%r12)
   10454:	e9 70 fc ff ff       	jmp    100c9 <dlrealloc+0x2d9>
   10459:	48 8b 4f 20          	mov    0x20(%rdi),%rcx
   1045d:	48 85 c9             	test   %rcx,%rcx
   10460:	74 42                	je     104a4 <dlrealloc+0x6b4>
   10462:	4c 8d 4f 20          	lea    0x20(%rdi),%r9
   10466:	e9 55 ff ff ff       	jmp    103c0 <dlrealloc+0x5d0>
   1046b:	4d 39 c1             	cmp    %r8,%r9
   1046e:	0f 82 84 fb ff ff    	jb     fff8 <dlrealloc+0x208>
   10474:	49 39 79 18          	cmp    %rdi,0x18(%r9)
   10478:	0f 85 7a fb ff ff    	jne    fff8 <dlrealloc+0x208>
   1047e:	4d 39 d9             	cmp    %r11,%r9
   10481:	74 a7                	je     1042a <dlrealloc+0x63a>
   10483:	4d 39 f3             	cmp    %r14,%r11
   10486:	0f 84 35 fc ff ff    	je     100c1 <dlrealloc+0x2d1>
   1048c:	e9 1d fc ff ff       	jmp    100ae <dlrealloc+0x2be>
   10491:	4d 89 5f 20          	mov    %r11,0x20(%r15)
   10495:	e9 56 fe ff ff       	jmp    102f0 <dlrealloc+0x500>
   1049a:	4f 89 5c cc 08       	mov    %r11,0x8(%r12,%r9,8)
   1049f:	e9 55 fe ff ff       	jmp    102f9 <dlrealloc+0x509>
   104a4:	4d 85 ff             	test   %r15,%r15
   104a7:	0f 84 1c fc ff ff    	je     100c9 <dlrealloc+0x2d9>
   104ad:	44 8b 4f 38          	mov    0x38(%rdi),%r9d
   104b1:	4c 89 c9             	mov    %r9,%rcx
   104b4:	4d 8d 59 4a          	lea    0x4a(%r9),%r11
   104b8:	4b 3b bc cc 58 02 00 	cmp    0x258(%r12,%r9,8),%rdi
   104bf:	00 
   104c0:	74 2e                	je     104f0 <dlrealloc+0x700>
   104c2:	4d 39 c7             	cmp    %r8,%r15
   104c5:	0f 82 2d fb ff ff    	jb     fff8 <dlrealloc+0x208>
   104cb:	49 39 7f 20          	cmp    %rdi,0x20(%r15)
   104cf:	74 14                	je     104e5 <dlrealloc+0x6f5>
   104d1:	31 c9                	xor    %ecx,%ecx
   104d3:	49 89 4f 28          	mov    %rcx,0x28(%r15)
   104d7:	e9 ed fb ff ff       	jmp    100c9 <dlrealloc+0x2d9>
   104dc:	4d 89 5f 20          	mov    %r11,0x20(%r15)
   104e0:	e9 14 fe ff ff       	jmp    102f9 <dlrealloc+0x509>
   104e5:	31 ff                	xor    %edi,%edi
   104e7:	49 89 7f 20          	mov    %rdi,0x20(%r15)
   104eb:	e9 d9 fb ff ff       	jmp    100c9 <dlrealloc+0x2d9>
   104f0:	45 31 c0             	xor    %r8d,%r8d
   104f3:	4f 89 44 dc 08       	mov    %r8,0x8(%r12,%r11,8)
   104f8:	e9 4b ff ff ff       	jmp    10448 <dlrealloc+0x658>
   104fd:	0f 1f 00             	nopl   (%rax)

0000000000010500 <dlmemalign>:
   10500:	f3 0f 1e fa          	endbr64 
   10504:	48 83 ff 10          	cmp    $0x10,%rdi
   10508:	76 06                	jbe    10510 <dlmemalign+0x10>
   1050a:	e9 d1 ea ff ff       	jmp    efe0 <internal_memalign.constprop.0>
   1050f:	90                   	nop
   10510:	48 89 f7             	mov    %rsi,%rdi
   10513:	e9 78 cf ff ff       	jmp    d490 <dlmalloc>
   10518:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1051f:	00 

0000000000010520 <dlposix_memalign>:
   10520:	f3 0f 1e fa          	endbr64 
   10524:	53                   	push   %rbx
   10525:	48 89 fb             	mov    %rdi,%rbx
   10528:	48 89 f7             	mov    %rsi,%rdi
   1052b:	48 89 d6             	mov    %rdx,%rsi
   1052e:	48 83 ff 10          	cmp    $0x10,%rdi
   10532:	74 6c                	je     105a0 <dlposix_memalign+0x80>
   10534:	48 89 f9             	mov    %rdi,%rcx
   10537:	49 89 f8             	mov    %rdi,%r8
   1053a:	ba 16 00 00 00       	mov    $0x16,%edx
   1053f:	48 c1 e9 03          	shr    $0x3,%rcx
   10543:	41 83 e0 07          	and    $0x7,%r8d
   10547:	48 83 ff 07          	cmp    $0x7,%rdi
   1054b:	76 36                	jbe    10583 <dlposix_memalign+0x63>
   1054d:	48 8d 41 ff          	lea    -0x1(%rcx),%rax
   10551:	48 21 c8             	and    %rcx,%rax
   10554:	4c 09 c0             	or     %r8,%rax
   10557:	75 2a                	jne    10583 <dlposix_memalign+0x63>
   10559:	48 c7 c0 80 ff ff ff 	mov    $0xffffffffffffff80,%rax
   10560:	48 29 f8             	sub    %rdi,%rax
   10563:	48 39 f0             	cmp    %rsi,%rax
   10566:	72 28                	jb     10590 <dlposix_memalign+0x70>
   10568:	b8 20 00 00 00       	mov    $0x20,%eax
   1056d:	48 39 c7             	cmp    %rax,%rdi
   10570:	48 0f 42 f8          	cmovb  %rax,%rdi
   10574:	e8 67 ea ff ff       	call   efe0 <internal_memalign.constprop.0>
   10579:	48 85 c0             	test   %rax,%rax
   1057c:	74 12                	je     10590 <dlposix_memalign+0x70>
   1057e:	48 89 03             	mov    %rax,(%rbx)
   10581:	31 d2                	xor    %edx,%edx
   10583:	89 d0                	mov    %edx,%eax
   10585:	5b                   	pop    %rbx
   10586:	c3                   	ret    
   10587:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1058e:	00 00 
   10590:	ba 0c 00 00 00       	mov    $0xc,%edx
   10595:	5b                   	pop    %rbx
   10596:	89 d0                	mov    %edx,%eax
   10598:	c3                   	ret    
   10599:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   105a0:	48 89 d7             	mov    %rdx,%rdi
   105a3:	e8 e8 ce ff ff       	call   d490 <dlmalloc>
   105a8:	eb cf                	jmp    10579 <dlposix_memalign+0x59>
   105aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000105b0 <dlmallinfo>:
   105b0:	f3 0f 1e fa          	endbr64 
   105b4:	41 55                	push   %r13
   105b6:	41 54                	push   %r12
   105b8:	55                   	push   %rbp
   105b9:	53                   	push   %rbx
   105ba:	48 89 fb             	mov    %rdi,%rbx
   105bd:	48 83 ec 08          	sub    $0x8,%rsp
   105c1:	48 83 3d b7 a9 01 00 	cmpq   $0x0,0x1a9b7(%rip)        # 2af80 <mparams>
   105c8:	00 
   105c9:	0f 84 89 01 00 00    	je     10758 <dlmallinfo+0x1a8>
   105cf:	44 8b 1d 5a a9 01 00 	mov    0x1a95a(%rip),%r11d        # 2af30 <_gm_+0x370>
   105d6:	41 83 e3 02          	and    $0x2,%r11d
   105da:	0f 85 16 01 00 00    	jne    106f6 <dlmallinfo+0x146>
   105e0:	48 8b 3d 01 a6 01 00 	mov    0x1a601(%rip),%rdi        # 2abe8 <_gm_+0x28>
   105e7:	48 85 ff             	test   %rdi,%rdi
   105ea:	0f 84 f4 00 00 00    	je     106e4 <dlmallinfo+0x134>
   105f0:	48 8b 2d d9 a5 01 00 	mov    0x1a5d9(%rip),%rbp        # 2abd0 <_gm_+0x10>
   105f7:	41 b9 01 00 00 00    	mov    $0x1,%r9d
   105fd:	4c 8d 15 34 a9 01 00 	lea    0x1a934(%rip),%r10        # 2af38 <_gm_+0x378>
   10604:	4c 8d 45 50          	lea    0x50(%rbp),%r8
   10608:	4c 89 c1             	mov    %r8,%rcx
   1060b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10610:	49 8b 32             	mov    (%r10),%rsi
   10613:	48 8d 46 10          	lea    0x10(%rsi),%rax
   10617:	40 f6 c6 0f          	test   $0xf,%sil
   1061b:	0f 84 af 00 00 00    	je     106d0 <dlmallinfo+0x120>
   10621:	48 f7 d8             	neg    %rax
   10624:	83 e0 0f             	and    $0xf,%eax
   10627:	48 01 f0             	add    %rsi,%rax
   1062a:	72 4a                	jb     10676 <dlmallinfo+0xc6>
   1062c:	4d 8b 6a 08          	mov    0x8(%r10),%r13
   10630:	49 01 f5             	add    %rsi,%r13
   10633:	4c 39 e8             	cmp    %r13,%rax
   10636:	72 39                	jb     10671 <dlmallinfo+0xc1>
   10638:	eb 3c                	jmp    10676 <dlmallinfo+0xc6>
   1063a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10640:	48 8b 50 08          	mov    0x8(%rax),%rdx
   10644:	48 83 fa 0b          	cmp    $0xb,%rdx
   10648:	74 2c                	je     10676 <dlmallinfo+0xc6>
   1064a:	49 89 d4             	mov    %rdx,%r12
   1064d:	83 e2 03             	and    $0x3,%edx
   10650:	49 83 e4 f8          	and    $0xfffffffffffffff8,%r12
   10654:	4c 01 e1             	add    %r12,%rcx
   10657:	48 83 fa 01          	cmp    $0x1,%rdx
   1065b:	75 07                	jne    10664 <dlmallinfo+0xb4>
   1065d:	4d 01 e0             	add    %r12,%r8
   10660:	49 83 c1 01          	add    $0x1,%r9
   10664:	4c 01 e0             	add    %r12,%rax
   10667:	48 39 f0             	cmp    %rsi,%rax
   1066a:	72 0a                	jb     10676 <dlmallinfo+0xc6>
   1066c:	4c 39 e8             	cmp    %r13,%rax
   1066f:	73 05                	jae    10676 <dlmallinfo+0xc6>
   10671:	48 39 f8             	cmp    %rdi,%rax
   10674:	75 ca                	jne    10640 <dlmallinfo+0x90>
   10676:	4d 8b 52 10          	mov    0x10(%r10),%r10
   1067a:	4d 85 d2             	test   %r10,%r10
   1067d:	75 91                	jne    10610 <dlmallinfo+0x60>
   1067f:	48 8b 05 92 a8 01 00 	mov    0x1a892(%rip),%rax        # 2af18 <_gm_+0x358>
   10686:	89 ca                	mov    %ecx,%edx
   10688:	89 c6                	mov    %eax,%esi
   1068a:	44 29 c0             	sub    %r8d,%eax
   1068d:	29 ce                	sub    %ecx,%esi
   1068f:	8b 0d 8b a8 01 00    	mov    0x1a88b(%rip),%ecx        # 2af20 <_gm_+0x360>
   10695:	45 85 db             	test   %r11d,%r11d
   10698:	75 3e                	jne    106d8 <dlmallinfo+0x128>
   1069a:	89 43 1c             	mov    %eax,0x1c(%rbx)
   1069d:	48 89 d8             	mov    %rbx,%rax
   106a0:	89 13                	mov    %edx,(%rbx)
   106a2:	44 89 4b 04          	mov    %r9d,0x4(%rbx)
   106a6:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
   106ad:	00 
   106ae:	89 73 10             	mov    %esi,0x10(%rbx)
   106b1:	89 4b 14             	mov    %ecx,0x14(%rbx)
   106b4:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%rbx)
   106bb:	44 89 43 20          	mov    %r8d,0x20(%rbx)
   106bf:	89 6b 24             	mov    %ebp,0x24(%rbx)
   106c2:	48 83 c4 08          	add    $0x8,%rsp
   106c6:	5b                   	pop    %rbx
   106c7:	5d                   	pop    %rbp
   106c8:	41 5c                	pop    %r12
   106ca:	41 5d                	pop    %r13
   106cc:	c3                   	ret    
   106cd:	0f 1f 00             	nopl   (%rax)
   106d0:	48 89 f0             	mov    %rsi,%rax
   106d3:	e9 54 ff ff ff       	jmp    1062c <dlmallinfo+0x7c>
   106d8:	c7 05 52 a8 01 00 00 	movl   $0x0,0x1a852(%rip)        # 2af34 <_gm_+0x374>
   106df:	00 00 00 
   106e2:	eb b6                	jmp    1069a <dlmallinfo+0xea>
   106e4:	31 ed                	xor    %ebp,%ebp
   106e6:	45 31 c0             	xor    %r8d,%r8d
   106e9:	31 c0                	xor    %eax,%eax
   106eb:	31 c9                	xor    %ecx,%ecx
   106ed:	31 f6                	xor    %esi,%esi
   106ef:	45 31 c9             	xor    %r9d,%r9d
   106f2:	31 d2                	xor    %edx,%edx
   106f4:	eb a4                	jmp    1069a <dlmallinfo+0xea>
   106f6:	b8 01 00 00 00       	mov    $0x1,%eax
   106fb:	87 05 33 a8 01 00    	xchg   %eax,0x1a833(%rip)        # 2af34 <_gm_+0x374>
   10701:	ba 01 00 00 00       	mov    $0x1,%edx
   10706:	85 c0                	test   %eax,%eax
   10708:	75 36                	jne    10740 <dlmallinfo+0x190>
   1070a:	44 8b 1d 1f a8 01 00 	mov    0x1a81f(%rip),%r11d        # 2af30 <_gm_+0x370>
   10711:	48 8b 3d d0 a4 01 00 	mov    0x1a4d0(%rip),%rdi        # 2abe8 <_gm_+0x28>
   10718:	41 83 e3 02          	and    $0x2,%r11d
   1071c:	48 85 ff             	test   %rdi,%rdi
   1071f:	0f 85 cb fe ff ff    	jne    105f0 <dlmallinfo+0x40>
   10725:	31 ed                	xor    %ebp,%ebp
   10727:	45 31 c0             	xor    %r8d,%r8d
   1072a:	31 c0                	xor    %eax,%eax
   1072c:	31 c9                	xor    %ecx,%ecx
   1072e:	31 f6                	xor    %esi,%esi
   10730:	45 31 c9             	xor    %r9d,%r9d
   10733:	31 d2                	xor    %edx,%edx
   10735:	e9 5b ff ff ff       	jmp    10695 <dlmallinfo+0xe5>
   1073a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10740:	8b 05 ee a7 01 00    	mov    0x1a7ee(%rip),%eax        # 2af34 <_gm_+0x374>
   10746:	85 c0                	test   %eax,%eax
   10748:	75 f6                	jne    10740 <dlmallinfo+0x190>
   1074a:	89 d0                	mov    %edx,%eax
   1074c:	87 05 e2 a7 01 00    	xchg   %eax,0x1a7e2(%rip)        # 2af34 <_gm_+0x374>
   10752:	85 c0                	test   %eax,%eax
   10754:	75 ea                	jne    10740 <dlmallinfo+0x190>
   10756:	eb b2                	jmp    1070a <dlmallinfo+0x15a>
   10758:	e8 43 cc ff ff       	call   d3a0 <init_mparams.isra.0>
   1075d:	e9 6d fe ff ff       	jmp    105cf <dlmallinfo+0x1f>
   10762:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   10769:	00 00 00 
   1076c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000010770 <__memcpy.part.0>:
   10770:	48 89 f0             	mov    %rsi,%rax
   10773:	48 89 f1             	mov    %rsi,%rcx
   10776:	48 09 f8             	or     %rdi,%rax
   10779:	a8 07                	test   $0x7,%al
   1077b:	74 43                	je     107c0 <__memcpy.part.0+0x50>
   1077d:	48 89 f0             	mov    %rsi,%rax
   10780:	48 31 f8             	xor    %rdi,%rax
   10783:	a8 07                	test   $0x7,%al
   10785:	75 0a                	jne    10791 <__memcpy.part.0+0x21>
   10787:	48 83 fa 07          	cmp    $0x7,%rdx
   1078b:	0f 87 87 00 00 00    	ja     10818 <__memcpy.part.0+0xa8>
   10791:	45 31 c9             	xor    %r9d,%r9d
   10794:	45 31 c0             	xor    %r8d,%r8d
   10797:	45 31 d2             	xor    %r10d,%r10d
   1079a:	31 c0                	xor    %eax,%eax
   1079c:	0f 1f 40 00          	nopl   0x0(%rax)
   107a0:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
   107a4:	40 88 34 07          	mov    %sil,(%rdi,%rax,1)
   107a8:	48 83 c0 01          	add    $0x1,%rax
   107ac:	48 39 c2             	cmp    %rax,%rdx
   107af:	75 ef                	jne    107a0 <__memcpy.part.0+0x30>
   107b1:	48 01 d1             	add    %rdx,%rcx
   107b4:	48 01 d7             	add    %rdx,%rdi
   107b7:	4c 89 d2             	mov    %r10,%rdx
   107ba:	eb 12                	jmp    107ce <__memcpy.part.0+0x5e>
   107bc:	0f 1f 40 00          	nopl   0x0(%rax)
   107c0:	49 89 d0             	mov    %rdx,%r8
   107c3:	49 89 d1             	mov    %rdx,%r9
   107c6:	49 c1 e8 03          	shr    $0x3,%r8
   107ca:	41 83 e1 07          	and    $0x7,%r9d
   107ce:	48 83 fa 07          	cmp    $0x7,%rdx
   107d2:	76 23                	jbe    107f7 <__memcpy.part.0+0x87>
   107d4:	4a 8d 34 c5 00 00 00 	lea    0x0(,%r8,8),%rsi
   107db:	00 
   107dc:	31 c0                	xor    %eax,%eax
   107de:	66 90                	xchg   %ax,%ax
   107e0:	48 8b 14 01          	mov    (%rcx,%rax,1),%rdx
   107e4:	48 89 14 07          	mov    %rdx,(%rdi,%rax,1)
   107e8:	48 83 c0 08          	add    $0x8,%rax
   107ec:	48 39 f0             	cmp    %rsi,%rax
   107ef:	75 ef                	jne    107e0 <__memcpy.part.0+0x70>
   107f1:	48 01 c1             	add    %rax,%rcx
   107f4:	48 01 c7             	add    %rax,%rdi
   107f7:	4d 85 c9             	test   %r9,%r9
   107fa:	74 14                	je     10810 <__memcpy.part.0+0xa0>
   107fc:	31 c0                	xor    %eax,%eax
   107fe:	66 90                	xchg   %ax,%ax
   10800:	0f b6 14 01          	movzbl (%rcx,%rax,1),%edx
   10804:	88 14 07             	mov    %dl,(%rdi,%rax,1)
   10807:	48 83 c0 01          	add    $0x1,%rax
   1080b:	49 39 c1             	cmp    %rax,%r9
   1080e:	75 f0                	jne    10800 <__memcpy.part.0+0x90>
   10810:	c3                   	ret    
   10811:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10818:	48 89 f0             	mov    %rsi,%rax
   1081b:	83 e0 07             	and    $0x7,%eax
   1081e:	4c 8d 54 10 f8       	lea    -0x8(%rax,%rdx,1),%r10
   10823:	ba 08 00 00 00       	mov    $0x8,%edx
   10828:	4d 89 d0             	mov    %r10,%r8
   1082b:	4d 89 d1             	mov    %r10,%r9
   1082e:	48 29 c2             	sub    %rax,%rdx
   10831:	49 c1 e8 03          	shr    $0x3,%r8
   10835:	41 83 e1 07          	and    $0x7,%r9d
   10839:	e9 5c ff ff ff       	jmp    1079a <__memcpy.part.0+0x2a>
   1083e:	66 90                	xchg   %ax,%ax

0000000000010840 <__memcpy>:
   10840:	f3 0f 1e fa          	endbr64 
   10844:	49 89 fb             	mov    %rdi,%r11
   10847:	48 85 d2             	test   %rdx,%rdx
   1084a:	74 0a                	je     10856 <__memcpy+0x16>
   1084c:	48 39 f7             	cmp    %rsi,%rdi
   1084f:	74 05                	je     10856 <__memcpy+0x16>
   10851:	e8 1a ff ff ff       	call   10770 <__memcpy.part.0>
   10856:	4c 89 d8             	mov    %r11,%rax
   10859:	c3                   	ret    
   1085a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000010860 <memcpy_verw>:
   10860:	f3 0f 1e fa          	endbr64 
   10864:	41 56                	push   %r14
   10866:	41 55                	push   %r13
   10868:	49 89 fd             	mov    %rdi,%r13
   1086b:	41 54                	push   %r12
   1086d:	55                   	push   %rbp
   1086e:	53                   	push   %rbx
   1086f:	48 85 d2             	test   %rdx,%rdx
   10872:	0f 84 8f 00 00 00    	je     10907 <memcpy_verw+0xa7>
   10878:	48 89 f3             	mov    %rsi,%rbx
   1087b:	48 39 f7             	cmp    %rsi,%rdi
   1087e:	0f 84 83 00 00 00    	je     10907 <memcpy_verw+0xa7>
   10884:	49 89 d4             	mov    %rdx,%r12
   10887:	48 89 fd             	mov    %rdi,%rbp
   1088a:	48 83 fa 07          	cmp    $0x7,%rdx
   1088e:	77 25                	ja     108b5 <memcpy_verw+0x55>
   10890:	eb 5b                	jmp    108ed <memcpy_verw+0x8d>
   10892:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10898:	48 89 de             	mov    %rbx,%rsi
   1089b:	48 89 ef             	mov    %rbp,%rdi
   1089e:	49 83 ec 01          	sub    $0x1,%r12
   108a2:	48 83 c3 01          	add    $0x1,%rbx
   108a6:	e8 35 0a 00 00       	call   112e0 <__memcpy_verw>
   108ab:	48 83 c5 01          	add    $0x1,%rbp
   108af:	49 83 fc 07          	cmp    $0x7,%r12
   108b3:	76 33                	jbe    108e8 <memcpy_verw+0x88>
   108b5:	48 89 e8             	mov    %rbp,%rax
   108b8:	48 09 d8             	or     %rbx,%rax
   108bb:	a8 07                	test   $0x7,%al
   108bd:	75 d9                	jne    10898 <memcpy_verw+0x38>
   108bf:	4d 89 e3             	mov    %r12,%r11
   108c2:	49 83 e3 f8          	and    $0xfffffffffffffff8,%r11
   108c6:	48 39 dd             	cmp    %rbx,%rbp
   108c9:	74 0e                	je     108d9 <memcpy_verw+0x79>
   108cb:	4c 89 da             	mov    %r11,%rdx
   108ce:	48 89 de             	mov    %rbx,%rsi
   108d1:	48 89 ef             	mov    %rbp,%rdi
   108d4:	e8 97 fe ff ff       	call   10770 <__memcpy.part.0>
   108d9:	4d 29 dc             	sub    %r11,%r12
   108dc:	4c 01 db             	add    %r11,%rbx
   108df:	4c 01 dd             	add    %r11,%rbp
   108e2:	49 83 fc 07          	cmp    $0x7,%r12
   108e6:	77 cd                	ja     108b5 <memcpy_verw+0x55>
   108e8:	4d 85 e4             	test   %r12,%r12
   108eb:	74 1a                	je     10907 <memcpy_verw+0xa7>
   108ed:	45 31 f6             	xor    %r14d,%r14d
   108f0:	4a 8d 34 33          	lea    (%rbx,%r14,1),%rsi
   108f4:	4a 8d 7c 35 00       	lea    0x0(%rbp,%r14,1),%rdi
   108f9:	49 83 c6 01          	add    $0x1,%r14
   108fd:	e8 de 09 00 00       	call   112e0 <__memcpy_verw>
   10902:	4d 39 e6             	cmp    %r12,%r14
   10905:	72 e9                	jb     108f0 <memcpy_verw+0x90>
   10907:	5b                   	pop    %rbx
   10908:	4c 89 e8             	mov    %r13,%rax
   1090b:	5d                   	pop    %rbp
   1090c:	41 5c                	pop    %r12
   1090e:	41 5d                	pop    %r13
   10910:	41 5e                	pop    %r14
   10912:	c3                   	ret    
   10913:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1091a:	00 00 00 
   1091d:	0f 1f 00             	nopl   (%rax)

0000000000010920 <copy_external_memory>:
   10920:	41 57                	push   %r15
   10922:	66 0f ef c0          	pxor   %xmm0,%xmm0
   10926:	41 56                	push   %r14
   10928:	41 55                	push   %r13
   1092a:	41 54                	push   %r12
   1092c:	55                   	push   %rbp
   1092d:	53                   	push   %rbx
   1092e:	48 83 ec 38          	sub    $0x38,%rsp
   10932:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   10939:	00 00 
   1093b:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   10940:	31 c0                	xor    %eax,%eax
   10942:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   10947:	48 85 d2             	test   %rdx,%rdx
   1094a:	74 2d                	je     10979 <copy_external_memory+0x59>
   1094c:	41 89 f6             	mov    %esi,%r14d
   1094f:	49 89 fd             	mov    %rdi,%r13
   10952:	48 89 f3             	mov    %rsi,%rbx
   10955:	41 89 cc             	mov    %ecx,%r12d
   10958:	41 83 e6 07          	and    $0x7,%r14d
   1095c:	75 52                	jne    109b0 <copy_external_memory+0x90>
   1095e:	48 83 fa 08          	cmp    $0x8,%rdx
   10962:	75 4c                	jne    109b0 <copy_external_memory+0x90>
   10964:	45 84 e4             	test   %r12b,%r12b
   10967:	75 37                	jne    109a0 <copy_external_memory+0x80>
   10969:	4c 39 eb             	cmp    %r13,%rbx
   1096c:	74 0b                	je     10979 <copy_external_memory+0x59>
   1096e:	48 89 de             	mov    %rbx,%rsi
   10971:	4c 89 ef             	mov    %r13,%rdi
   10974:	e8 f7 fd ff ff       	call   10770 <__memcpy.part.0>
   10979:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   1097e:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
   10985:	00 00 
   10987:	75 7f                	jne    10a08 <copy_external_memory+0xe8>
   10989:	48 83 c4 38          	add    $0x38,%rsp
   1098d:	5b                   	pop    %rbx
   1098e:	5d                   	pop    %rbp
   1098f:	41 5c                	pop    %r12
   10991:	41 5d                	pop    %r13
   10993:	41 5e                	pop    %r14
   10995:	41 5f                	pop    %r15
   10997:	c3                   	ret    
   10998:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1099f:	00 
   109a0:	48 89 de             	mov    %rbx,%rsi
   109a3:	4c 89 ef             	mov    %r13,%rdi
   109a6:	e8 b5 fe ff ff       	call   10860 <memcpy_verw>
   109ab:	eb cc                	jmp    10979 <copy_external_memory+0x59>
   109ad:	0f 1f 00             	nopl   (%rax)
   109b0:	45 89 f7             	mov    %r14d,%r15d
   109b3:	48 89 de             	mov    %rbx,%rsi
   109b6:	48 8d 6c 24 10       	lea    0x10(%rsp),%rbp
   109bb:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   109c0:	4c 29 fe             	sub    %r15,%rsi
   109c3:	48 89 ef             	mov    %rbp,%rdi
   109c6:	e8 35 09 00 00       	call   11300 <__memcpy_8a>
   109cb:	45 85 f6             	test   %r14d,%r14d
   109ce:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   109d3:	74 0a                	je     109df <copy_external_memory+0xbf>
   109d5:	49 8d 04 17          	lea    (%r15,%rdx,1),%rax
   109d9:	48 83 f8 08          	cmp    $0x8,%rax
   109dd:	77 11                	ja     109f0 <copy_external_memory+0xd0>
   109df:	4a 8d 5c 3d 00       	lea    0x0(%rbp,%r15,1),%rbx
   109e4:	45 84 e4             	test   %r12b,%r12b
   109e7:	74 80                	je     10969 <copy_external_memory+0x49>
   109e9:	eb b5                	jmp    109a0 <copy_external_memory+0x80>
   109eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   109f0:	4c 29 fb             	sub    %r15,%rbx
   109f3:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   109f8:	48 8d 73 08          	lea    0x8(%rbx),%rsi
   109fc:	e8 ff 08 00 00       	call   11300 <__memcpy_8a>
   10a01:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   10a06:	eb d7                	jmp    109df <copy_external_memory+0xbf>
   10a08:	e8 f3 03 00 00       	call   10e00 <__stack_chk_fail>
   10a0d:	0f 1f 00             	nopl   (%rax)

0000000000010a10 <memcpy_nochecks>:
   10a10:	f3 0f 1e fa          	endbr64 
   10a14:	49 89 fb             	mov    %rdi,%r11
   10a17:	48 85 d2             	test   %rdx,%rdx
   10a1a:	74 0a                	je     10a26 <memcpy_nochecks+0x16>
   10a1c:	48 39 f7             	cmp    %rsi,%rdi
   10a1f:	74 05                	je     10a26 <memcpy_nochecks+0x16>
   10a21:	e8 4a fd ff ff       	call   10770 <__memcpy.part.0>
   10a26:	4c 89 d8             	mov    %r11,%rax
   10a29:	c3                   	ret    
   10a2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000010a30 <memcpy>:
   10a30:	f3 0f 1e fa          	endbr64 
   10a34:	41 57                	push   %r15
   10a36:	41 56                	push   %r14
   10a38:	41 55                	push   %r13
   10a3a:	49 89 fd             	mov    %rdi,%r13
   10a3d:	41 54                	push   %r12
   10a3f:	55                   	push   %rbp
   10a40:	53                   	push   %rbx
   10a41:	48 83 ec 18          	sub    $0x18,%rsp
   10a45:	48 85 d2             	test   %rdx,%rdx
   10a48:	0f 84 d4 00 00 00    	je     10b22 <memcpy+0xf2>
   10a4e:	48 89 f3             	mov    %rsi,%rbx
   10a51:	48 39 f7             	cmp    %rsi,%rdi
   10a54:	0f 84 c8 00 00 00    	je     10b22 <memcpy+0xf2>
   10a5a:	48 89 d6             	mov    %rdx,%rsi
   10a5d:	48 89 df             	mov    %rbx,%rdi
   10a60:	48 89 d5             	mov    %rdx,%rbp
   10a63:	e8 58 54 ff ff       	call   5ec0 <sgx_is_within_enclave>
   10a68:	48 89 ee             	mov    %rbp,%rsi
   10a6b:	4c 89 ef             	mov    %r13,%rdi
   10a6e:	41 89 c4             	mov    %eax,%r12d
   10a71:	e8 4a 54 ff ff       	call   5ec0 <sgx_is_within_enclave>
   10a76:	45 85 e4             	test   %r12d,%r12d
   10a79:	0f 85 b9 00 00 00    	jne    10b38 <memcpy+0x108>
   10a7f:	85 c0                	test   %eax,%eax
   10a81:	4d 89 ec             	mov    %r13,%r12
   10a84:	0f 94 c0             	sete   %al
   10a87:	0f b6 c0             	movzbl %al,%eax
   10a8a:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   10a8e:	48 83 fd 07          	cmp    $0x7,%rbp
   10a92:	77 38                	ja     10acc <memcpy+0x9c>
   10a94:	eb 7a                	jmp    10b10 <memcpy+0xe0>
   10a96:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   10a9d:	00 00 00 
   10aa0:	41 be 08 00 00 00    	mov    $0x8,%r14d
   10aa6:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
   10aaa:	48 89 de             	mov    %rbx,%rsi
   10aad:	4c 89 e7             	mov    %r12,%rdi
   10ab0:	4d 29 fe             	sub    %r15,%r14
   10ab3:	49 8d 6c 2f f8       	lea    -0x8(%r15,%rbp,1),%rbp
   10ab8:	4c 89 f2             	mov    %r14,%rdx
   10abb:	4c 01 f3             	add    %r14,%rbx
   10abe:	4d 01 f4             	add    %r14,%r12
   10ac1:	e8 5a fe ff ff       	call   10920 <copy_external_memory>
   10ac6:	48 83 fd 07          	cmp    $0x7,%rbp
   10aca:	76 44                	jbe    10b10 <memcpy+0xe0>
   10acc:	48 89 d8             	mov    %rbx,%rax
   10acf:	4d 89 e7             	mov    %r12,%r15
   10ad2:	4c 09 e0             	or     %r12,%rax
   10ad5:	41 83 e7 07          	and    $0x7,%r15d
   10ad9:	a8 07                	test   $0x7,%al
   10adb:	75 c3                	jne    10aa0 <memcpy+0x70>
   10add:	49 89 eb             	mov    %rbp,%r11
   10ae0:	49 83 e3 f8          	and    $0xfffffffffffffff8,%r11
   10ae4:	4c 39 e3             	cmp    %r12,%rbx
   10ae7:	74 0e                	je     10af7 <memcpy+0xc7>
   10ae9:	4c 89 da             	mov    %r11,%rdx
   10aec:	48 89 de             	mov    %rbx,%rsi
   10aef:	4c 89 e7             	mov    %r12,%rdi
   10af2:	e8 79 fc ff ff       	call   10770 <__memcpy.part.0>
   10af7:	4c 29 dd             	sub    %r11,%rbp
   10afa:	4c 01 db             	add    %r11,%rbx
   10afd:	4d 01 dc             	add    %r11,%r12
   10b00:	48 83 fd 07          	cmp    $0x7,%rbp
   10b04:	77 c6                	ja     10acc <memcpy+0x9c>
   10b06:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   10b0d:	00 00 00 
   10b10:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
   10b14:	48 89 ea             	mov    %rbp,%rdx
   10b17:	48 89 de             	mov    %rbx,%rsi
   10b1a:	4c 89 e7             	mov    %r12,%rdi
   10b1d:	e8 fe fd ff ff       	call   10920 <copy_external_memory>
   10b22:	48 83 c4 18          	add    $0x18,%rsp
   10b26:	4c 89 e8             	mov    %r13,%rax
   10b29:	5b                   	pop    %rbx
   10b2a:	5d                   	pop    %rbp
   10b2b:	41 5c                	pop    %r12
   10b2d:	41 5d                	pop    %r13
   10b2f:	41 5e                	pop    %r14
   10b31:	41 5f                	pop    %r15
   10b33:	c3                   	ret    
   10b34:	0f 1f 40 00          	nopl   0x0(%rax)
   10b38:	48 89 ea             	mov    %rbp,%rdx
   10b3b:	48 89 de             	mov    %rbx,%rsi
   10b3e:	4c 89 ef             	mov    %r13,%rdi
   10b41:	85 c0                	test   %eax,%eax
   10b43:	75 1b                	jne    10b60 <memcpy+0x130>
   10b45:	48 83 c4 18          	add    $0x18,%rsp
   10b49:	5b                   	pop    %rbx
   10b4a:	5d                   	pop    %rbp
   10b4b:	41 5c                	pop    %r12
   10b4d:	41 5d                	pop    %r13
   10b4f:	41 5e                	pop    %r14
   10b51:	41 5f                	pop    %r15
   10b53:	e9 08 fd ff ff       	jmp    10860 <memcpy_verw>
   10b58:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   10b5f:	00 
   10b60:	e8 0b fc ff ff       	call   10770 <__memcpy.part.0>
   10b65:	eb bb                	jmp    10b22 <memcpy+0xf2>
   10b67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   10b6e:	00 00 

0000000000010b70 <memset_verw>:
   10b70:	f3 0f 1e fa          	endbr64 
   10b74:	41 56                	push   %r14
   10b76:	41 55                	push   %r13
   10b78:	41 54                	push   %r12
   10b7a:	49 89 fc             	mov    %rdi,%r12
   10b7d:	55                   	push   %rbp
   10b7e:	53                   	push   %rbx
   10b7f:	48 83 ec 20          	sub    $0x20,%rsp
   10b83:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   10b8a:	00 00 
   10b8c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   10b91:	31 c0                	xor    %eax,%eax
   10b93:	48 85 d2             	test   %rdx,%rdx
   10b96:	0f 84 a0 00 00 00    	je     10c3c <memset_verw+0xcc>
   10b9c:	48 85 ff             	test   %rdi,%rdi
   10b9f:	0f 84 97 00 00 00    	je     10c3c <memset_verw+0xcc>
   10ba5:	4c 8d 6c 24 10       	lea    0x10(%rsp),%r13
   10baa:	48 89 d5             	mov    %rdx,%rbp
   10bad:	ba 08 00 00 00       	mov    $0x8,%edx
   10bb2:	4c 89 e3             	mov    %r12,%rbx
   10bb5:	4c 89 ef             	mov    %r13,%rdi
   10bb8:	40 88 74 24 0f       	mov    %sil,0xf(%rsp)
   10bbd:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   10bc4:	00 00 
   10bc6:	e8 45 07 00 00       	call   11310 <__memset>
   10bcb:	48 83 fd 07          	cmp    $0x7,%rbp
   10bcf:	76 4b                	jbe    10c1c <memset_verw+0xac>
   10bd1:	4c 8d 74 24 0f       	lea    0xf(%rsp),%r14
   10bd6:	eb 21                	jmp    10bf9 <memset_verw+0x89>
   10bd8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   10bdf:	00 
   10be0:	48 89 df             	mov    %rbx,%rdi
   10be3:	4c 89 ee             	mov    %r13,%rsi
   10be6:	48 83 ed 08          	sub    $0x8,%rbp
   10bea:	48 83 c3 08          	add    $0x8,%rbx
   10bee:	e8 0d 07 00 00       	call   11300 <__memcpy_8a>
   10bf3:	48 83 fd 07          	cmp    $0x7,%rbp
   10bf7:	76 1e                	jbe    10c17 <memset_verw+0xa7>
   10bf9:	f6 c3 07             	test   $0x7,%bl
   10bfc:	74 e2                	je     10be0 <memset_verw+0x70>
   10bfe:	48 89 df             	mov    %rbx,%rdi
   10c01:	4c 89 f6             	mov    %r14,%rsi
   10c04:	48 83 ed 01          	sub    $0x1,%rbp
   10c08:	48 83 c3 01          	add    $0x1,%rbx
   10c0c:	e8 cf 06 00 00       	call   112e0 <__memcpy_verw>
   10c11:	48 83 fd 07          	cmp    $0x7,%rbp
   10c15:	77 e2                	ja     10bf9 <memset_verw+0x89>
   10c17:	48 85 ed             	test   %rbp,%rbp
   10c1a:	74 20                	je     10c3c <memset_verw+0xcc>
   10c1c:	48 01 dd             	add    %rbx,%rbp
   10c1f:	4c 8d 6c 24 0f       	lea    0xf(%rsp),%r13
   10c24:	0f 1f 40 00          	nopl   0x0(%rax)
   10c28:	48 89 df             	mov    %rbx,%rdi
   10c2b:	4c 89 ee             	mov    %r13,%rsi
   10c2e:	48 83 c3 01          	add    $0x1,%rbx
   10c32:	e8 a9 06 00 00       	call   112e0 <__memcpy_verw>
   10c37:	48 39 eb             	cmp    %rbp,%rbx
   10c3a:	75 ec                	jne    10c28 <memset_verw+0xb8>
   10c3c:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   10c41:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
   10c48:	00 00 
   10c4a:	75 10                	jne    10c5c <memset_verw+0xec>
   10c4c:	48 83 c4 20          	add    $0x20,%rsp
   10c50:	4c 89 e0             	mov    %r12,%rax
   10c53:	5b                   	pop    %rbx
   10c54:	5d                   	pop    %rbp
   10c55:	41 5c                	pop    %r12
   10c57:	41 5d                	pop    %r13
   10c59:	41 5e                	pop    %r14
   10c5b:	c3                   	ret    
   10c5c:	e8 9f 01 00 00       	call   10e00 <__stack_chk_fail>
   10c61:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   10c68:	00 00 00 
   10c6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010c70 <memset>:
   10c70:	f3 0f 1e fa          	endbr64 
   10c74:	e9 97 06 00 00       	jmp    11310 <__memset>
   10c79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000010c80 <memset_s>:
   10c80:	f3 0f 1e fa          	endbr64 
   10c84:	53                   	push   %rbx
   10c85:	48 85 ff             	test   %rdi,%rdi
   10c88:	74 3e                	je     10cc8 <memset_s+0x48>
   10c8a:	48 89 f0             	mov    %rsi,%rax
   10c8d:	89 d6                	mov    %edx,%esi
   10c8f:	48 39 c8             	cmp    %rcx,%rax
   10c92:	73 1c                	jae    10cb0 <memset_s+0x30>
   10c94:	48 8b 0d bd 71 00 00 	mov    0x71bd(%rip),%rcx        # 17e58 <__memset_vp>
   10c9b:	48 89 c2             	mov    %rax,%rdx
   10c9e:	bb 4b 00 00 00       	mov    $0x4b,%ebx
   10ca3:	ff d1                	call   *%rcx
   10ca5:	e8 26 06 00 00       	call   112d0 <__errno_location>
   10caa:	89 18                	mov    %ebx,(%rax)
   10cac:	89 d8                	mov    %ebx,%eax
   10cae:	5b                   	pop    %rbx
   10caf:	c3                   	ret    
   10cb0:	31 db                	xor    %ebx,%ebx
   10cb2:	48 8b 05 9f 71 00 00 	mov    0x719f(%rip),%rax        # 17e58 <__memset_vp>
   10cb9:	48 89 ca             	mov    %rcx,%rdx
   10cbc:	ff d0                	call   *%rax
   10cbe:	89 d8                	mov    %ebx,%eax
   10cc0:	5b                   	pop    %rbx
   10cc1:	c3                   	ret    
   10cc2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10cc8:	bb 16 00 00 00       	mov    $0x16,%ebx
   10ccd:	eb d6                	jmp    10ca5 <memset_s+0x25>
   10ccf:	90                   	nop

0000000000010cd0 <memset_verw_s>:
   10cd0:	f3 0f 1e fa          	endbr64 
   10cd4:	53                   	push   %rbx
   10cd5:	48 85 ff             	test   %rdi,%rdi
   10cd8:	74 36                	je     10d10 <memset_verw_s+0x40>
   10cda:	48 89 f0             	mov    %rsi,%rax
   10cdd:	89 d6                	mov    %edx,%esi
   10cdf:	48 39 c8             	cmp    %rcx,%rax
   10ce2:	73 1c                	jae    10d00 <memset_verw_s+0x30>
   10ce4:	48 89 c2             	mov    %rax,%rdx
   10ce7:	bb 4b 00 00 00       	mov    $0x4b,%ebx
   10cec:	e8 7f fe ff ff       	call   10b70 <memset_verw>
   10cf1:	e8 da 05 00 00       	call   112d0 <__errno_location>
   10cf6:	89 18                	mov    %ebx,(%rax)
   10cf8:	89 d8                	mov    %ebx,%eax
   10cfa:	5b                   	pop    %rbx
   10cfb:	c3                   	ret    
   10cfc:	0f 1f 40 00          	nopl   0x0(%rax)
   10d00:	31 db                	xor    %ebx,%ebx
   10d02:	48 89 ca             	mov    %rcx,%rdx
   10d05:	e8 66 fe ff ff       	call   10b70 <memset_verw>
   10d0a:	89 d8                	mov    %ebx,%eax
   10d0c:	5b                   	pop    %rbx
   10d0d:	c3                   	ret    
   10d0e:	66 90                	xchg   %ax,%ax
   10d10:	bb 16 00 00 00       	mov    $0x16,%ebx
   10d15:	eb da                	jmp    10cf1 <memset_verw_s+0x21>
   10d17:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   10d1e:	00 00 

0000000000010d20 <sgx_init_string_lib>:
   10d20:	f3 0f 1e fa          	endbr64 
   10d24:	31 c0                	xor    %eax,%eax
   10d26:	c3                   	ret    
   10d27:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   10d2e:	00 00 

0000000000010d30 <strlen>:
   10d30:	f3 0f 1e fa          	endbr64 
   10d34:	e9 37 06 00 00       	jmp    11370 <_strlen>
   10d39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000010d40 <strncmp>:
   10d40:	f3 0f 1e fa          	endbr64 
   10d44:	31 c0                	xor    %eax,%eax
   10d46:	48 85 d2             	test   %rdx,%rdx
   10d49:	74 2f                	je     10d7a <strncmp+0x3a>
   10d4b:	31 c0                	xor    %eax,%eax
   10d4d:	eb 0e                	jmp    10d5d <strncmp+0x1d>
   10d4f:	90                   	nop
   10d50:	84 c9                	test   %cl,%cl
   10d52:	74 24                	je     10d78 <strncmp+0x38>
   10d54:	48 83 c0 01          	add    $0x1,%rax
   10d58:	48 39 c2             	cmp    %rax,%rdx
   10d5b:	74 1b                	je     10d78 <strncmp+0x38>
   10d5d:	0f b6 0c 07          	movzbl (%rdi,%rax,1),%ecx
   10d61:	44 0f b6 04 06       	movzbl (%rsi,%rax,1),%r8d
   10d66:	44 38 c1             	cmp    %r8b,%cl
   10d69:	74 e5                	je     10d50 <strncmp+0x10>
   10d6b:	0f b6 c1             	movzbl %cl,%eax
   10d6e:	44 29 c0             	sub    %r8d,%eax
   10d71:	c3                   	ret    
   10d72:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10d78:	31 c0                	xor    %eax,%eax
   10d7a:	c3                   	ret    
   10d7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010d80 <strncpy>:
   10d80:	f3 0f 1e fa          	endbr64 
   10d84:	48 89 f8             	mov    %rdi,%rax
   10d87:	48 85 d2             	test   %rdx,%rdx
   10d8a:	74 6c                	je     10df8 <strncpy+0x78>
   10d8c:	48 8d 3c 17          	lea    (%rdi,%rdx,1),%rdi
   10d90:	49 89 f0             	mov    %rsi,%r8
   10d93:	48 89 c1             	mov    %rax,%rcx
   10d96:	eb 0d                	jmp    10da5 <strncpy+0x25>
   10d98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   10d9f:	00 
   10da0:	48 39 f9             	cmp    %rdi,%rcx
   10da3:	74 53                	je     10df8 <strncpy+0x78>
   10da5:	45 0f b6 08          	movzbl (%r8),%r9d
   10da9:	49 83 c0 01          	add    $0x1,%r8
   10dad:	48 83 c1 01          	add    $0x1,%rcx
   10db1:	44 88 49 ff          	mov    %r9b,-0x1(%rcx)
   10db5:	45 84 c9             	test   %r9b,%r9b
   10db8:	75 e6                	jne    10da0 <strncpy+0x20>
   10dba:	4c 29 c6             	sub    %r8,%rsi
   10dbd:	48 01 d6             	add    %rdx,%rsi
   10dc0:	74 36                	je     10df8 <strncpy+0x78>
   10dc2:	48 8d 14 31          	lea    (%rcx,%rsi,1),%rdx
   10dc6:	83 e6 01             	and    $0x1,%esi
   10dc9:	74 15                	je     10de0 <strncpy+0x60>
   10dcb:	48 83 c1 01          	add    $0x1,%rcx
   10dcf:	c6 41 ff 00          	movb   $0x0,-0x1(%rcx)
   10dd3:	48 39 ca             	cmp    %rcx,%rdx
   10dd6:	74 21                	je     10df9 <strncpy+0x79>
   10dd8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   10ddf:	00 
   10de0:	c6 01 00             	movb   $0x0,(%rcx)
   10de3:	48 83 c1 02          	add    $0x2,%rcx
   10de7:	c6 41 ff 00          	movb   $0x0,-0x1(%rcx)
   10deb:	48 39 ca             	cmp    %rcx,%rdx
   10dee:	75 f0                	jne    10de0 <strncpy+0x60>
   10df0:	c3                   	ret    
   10df1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10df8:	c3                   	ret    
   10df9:	c3                   	ret    
   10dfa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000010e00 <__stack_chk_fail>:
   10e00:	f3 0f 1e fa          	endbr64 
   10e04:	50                   	push   %rax
   10e05:	58                   	pop    %rax
   10e06:	48 83 ec 08          	sub    $0x8,%rsp
   10e0a:	e8 28 1b 00 00       	call   12937 <abort>
   10e0f:	90                   	nop

0000000000010e10 <__stack_chk_fail_local>:
   10e10:	f3 0f 1e fa          	endbr64 
   10e14:	50                   	push   %rax
   10e15:	58                   	pop    %rax
   10e16:	48 83 ec 08          	sub    $0x8,%rsp
   10e1a:	e8 18 1b 00 00       	call   12937 <abort>
   10e1f:	90                   	nop

0000000000010e20 <__intel_security_check_cookie>:
   10e20:	f3 0f 1e fa          	endbr64 
   10e24:	48 39 3d dd 6f 00 00 	cmp    %rdi,0x6fdd(%rip)        # 17e08 <__intel_security_cookie>
   10e2b:	75 01                	jne    10e2e <__intel_security_check_cookie+0xe>
   10e2d:	c3                   	ret    
   10e2e:	50                   	push   %rax
   10e2f:	e8 03 1b 00 00       	call   12937 <abort>
   10e34:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   10e3b:	00 00 00 
   10e3e:	66 90                	xchg   %ax,%ax

0000000000010e40 <sgx_thread_spin_init>:
   10e40:	f3 0f 1e fa          	endbr64 
   10e44:	48 85 ff             	test   %rdi,%rdi
   10e47:	74 37                	je     10e80 <sgx_thread_spin_init+0x40>
   10e49:	53                   	push   %rbx
   10e4a:	be 18 00 00 00       	mov    $0x18,%esi
   10e4f:	48 89 fb             	mov    %rdi,%rbx
   10e52:	e8 69 50 ff ff       	call   5ec0 <sgx_is_within_enclave>
   10e57:	85 c0                	test   %eax,%eax
   10e59:	74 1d                	je     10e78 <sgx_thread_spin_init+0x38>
   10e5b:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   10e62:	31 c0                	xor    %eax,%eax
   10e64:	48 c7 43 10 00 00 00 	movq   $0x0,0x10(%rbx)
   10e6b:	00 
   10e6c:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%rbx)
   10e73:	5b                   	pop    %rbx
   10e74:	c3                   	ret    
   10e75:	0f 1f 00             	nopl   (%rax)
   10e78:	b8 16 00 00 00       	mov    $0x16,%eax
   10e7d:	5b                   	pop    %rbx
   10e7e:	c3                   	ret    
   10e7f:	90                   	nop
   10e80:	b8 16 00 00 00       	mov    $0x16,%eax
   10e85:	c3                   	ret    
   10e86:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   10e8d:	00 00 00 

0000000000010e90 <sgx_thread_spin_destroy>:
   10e90:	f3 0f 1e fa          	endbr64 
   10e94:	48 85 ff             	test   %rdi,%rdi
   10e97:	74 6f                	je     10f08 <sgx_thread_spin_destroy+0x78>
   10e99:	55                   	push   %rbp
   10e9a:	be 18 00 00 00       	mov    $0x18,%esi
   10e9f:	53                   	push   %rbx
   10ea0:	48 89 fb             	mov    %rdi,%rbx
   10ea3:	48 83 ec 08          	sub    $0x8,%rsp
   10ea7:	e8 14 50 ff ff       	call   5ec0 <sgx_is_within_enclave>
   10eac:	85 c0                	test   %eax,%eax
   10eae:	74 30                	je     10ee0 <sgx_thread_spin_destroy+0x50>
   10eb0:	48 8d 6b 08          	lea    0x8(%rbx),%rbp
   10eb4:	48 89 ef             	mov    %rbp,%rdi
   10eb7:	e8 14 bc ff ff       	call   cad0 <sgx_spin_lock>
   10ebc:	48 83 7b 10 00       	cmpq   $0x0,0x10(%rbx)
   10ec1:	75 2d                	jne    10ef0 <sgx_thread_spin_destroy+0x60>
   10ec3:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   10eca:	48 89 ef             	mov    %rbp,%rdi
   10ecd:	e8 8e bc ff ff       	call   cb60 <sgx_spin_unlock>
   10ed2:	48 83 c4 08          	add    $0x8,%rsp
   10ed6:	31 c0                	xor    %eax,%eax
   10ed8:	5b                   	pop    %rbx
   10ed9:	5d                   	pop    %rbp
   10eda:	c3                   	ret    
   10edb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10ee0:	48 83 c4 08          	add    $0x8,%rsp
   10ee4:	b8 16 00 00 00       	mov    $0x16,%eax
   10ee9:	5b                   	pop    %rbx
   10eea:	5d                   	pop    %rbp
   10eeb:	c3                   	ret    
   10eec:	0f 1f 40 00          	nopl   0x0(%rax)
   10ef0:	48 89 ef             	mov    %rbp,%rdi
   10ef3:	e8 68 bc ff ff       	call   cb60 <sgx_spin_unlock>
   10ef8:	48 83 c4 08          	add    $0x8,%rsp
   10efc:	b8 10 00 00 00       	mov    $0x10,%eax
   10f01:	5b                   	pop    %rbx
   10f02:	5d                   	pop    %rbp
   10f03:	c3                   	ret    
   10f04:	0f 1f 40 00          	nopl   0x0(%rax)
   10f08:	b8 16 00 00 00       	mov    $0x16,%eax
   10f0d:	c3                   	ret    
   10f0e:	66 90                	xchg   %ax,%ax

0000000000010f10 <sgx_thread_spin_trylock>:
   10f10:	f3 0f 1e fa          	endbr64 
   10f14:	48 85 ff             	test   %rdi,%rdi
   10f17:	74 7f                	je     10f98 <sgx_thread_spin_trylock+0x88>
   10f19:	41 54                	push   %r12
   10f1b:	be 18 00 00 00       	mov    $0x18,%esi
   10f20:	55                   	push   %rbp
   10f21:	53                   	push   %rbx
   10f22:	48 89 fb             	mov    %rdi,%rbx
   10f25:	e8 96 4f ff ff       	call   5ec0 <sgx_is_within_enclave>
   10f2a:	85 c0                	test   %eax,%eax
   10f2c:	74 42                	je     10f70 <sgx_thread_spin_trylock+0x60>
   10f2e:	e8 10 16 00 00       	call   12543 <get_thread_data>
   10f33:	4c 8d 63 08          	lea    0x8(%rbx),%r12
   10f37:	4c 89 e7             	mov    %r12,%rdi
   10f3a:	48 89 c5             	mov    %rax,%rbp
   10f3d:	e8 8e bb ff ff       	call   cad0 <sgx_spin_lock>
   10f42:	48 8b 43 10          	mov    0x10(%rbx),%rax
   10f46:	48 39 e8             	cmp    %rbp,%rax
   10f49:	74 09                	je     10f54 <sgx_thread_spin_trylock+0x44>
   10f4b:	48 85 c0             	test   %rax,%rax
   10f4e:	75 30                	jne    10f80 <sgx_thread_spin_trylock+0x70>
   10f50:	48 89 6b 10          	mov    %rbp,0x10(%rbx)
   10f54:	48 83 03 01          	addq   $0x1,(%rbx)
   10f58:	4c 89 e7             	mov    %r12,%rdi
   10f5b:	e8 00 bc ff ff       	call   cb60 <sgx_spin_unlock>
   10f60:	5b                   	pop    %rbx
   10f61:	31 c0                	xor    %eax,%eax
   10f63:	5d                   	pop    %rbp
   10f64:	41 5c                	pop    %r12
   10f66:	c3                   	ret    
   10f67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   10f6e:	00 00 
   10f70:	5b                   	pop    %rbx
   10f71:	b8 16 00 00 00       	mov    $0x16,%eax
   10f76:	5d                   	pop    %rbp
   10f77:	41 5c                	pop    %r12
   10f79:	c3                   	ret    
   10f7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10f80:	4c 89 e7             	mov    %r12,%rdi
   10f83:	e8 d8 bb ff ff       	call   cb60 <sgx_spin_unlock>
   10f88:	5b                   	pop    %rbx
   10f89:	b8 10 00 00 00       	mov    $0x10,%eax
   10f8e:	5d                   	pop    %rbp
   10f8f:	41 5c                	pop    %r12
   10f91:	c3                   	ret    
   10f92:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10f98:	b8 16 00 00 00       	mov    $0x16,%eax
   10f9d:	c3                   	ret    
   10f9e:	66 90                	xchg   %ax,%ax

0000000000010fa0 <sgx_thread_spin_unlock>:
   10fa0:	f3 0f 1e fa          	endbr64 
   10fa4:	48 85 ff             	test   %rdi,%rdi
   10fa7:	0f 84 8b 00 00 00    	je     11038 <sgx_thread_spin_unlock+0x98>
   10fad:	41 54                	push   %r12
   10faf:	be 18 00 00 00       	mov    $0x18,%esi
   10fb4:	55                   	push   %rbp
   10fb5:	53                   	push   %rbx
   10fb6:	48 89 fb             	mov    %rdi,%rbx
   10fb9:	e8 02 4f ff ff       	call   5ec0 <sgx_is_within_enclave>
   10fbe:	85 c0                	test   %eax,%eax
   10fc0:	74 56                	je     11018 <sgx_thread_spin_unlock+0x78>
   10fc2:	e8 7c 15 00 00       	call   12543 <get_thread_data>
   10fc7:	4c 8d 63 08          	lea    0x8(%rbx),%r12
   10fcb:	4c 89 e7             	mov    %r12,%rdi
   10fce:	48 89 c5             	mov    %rax,%rbp
   10fd1:	e8 fa ba ff ff       	call   cad0 <sgx_spin_lock>
   10fd6:	48 8b 43 10          	mov    0x10(%rbx),%rax
   10fda:	48 85 c0             	test   %rax,%rax
   10fdd:	74 21                	je     11000 <sgx_thread_spin_unlock+0x60>
   10fdf:	48 39 e8             	cmp    %rbp,%rax
   10fe2:	75 1c                	jne    11000 <sgx_thread_spin_unlock+0x60>
   10fe4:	48 83 2b 01          	subq   $0x1,(%rbx)
   10fe8:	74 3e                	je     11028 <sgx_thread_spin_unlock+0x88>
   10fea:	4c 89 e7             	mov    %r12,%rdi
   10fed:	e8 6e bb ff ff       	call   cb60 <sgx_spin_unlock>
   10ff2:	5b                   	pop    %rbx
   10ff3:	31 c0                	xor    %eax,%eax
   10ff5:	5d                   	pop    %rbp
   10ff6:	41 5c                	pop    %r12
   10ff8:	c3                   	ret    
   10ff9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   11000:	4c 89 e7             	mov    %r12,%rdi
   11003:	e8 58 bb ff ff       	call   cb60 <sgx_spin_unlock>
   11008:	5b                   	pop    %rbx
   11009:	b8 01 00 00 00       	mov    $0x1,%eax
   1100e:	5d                   	pop    %rbp
   1100f:	41 5c                	pop    %r12
   11011:	c3                   	ret    
   11012:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   11018:	5b                   	pop    %rbx
   11019:	b8 16 00 00 00       	mov    $0x16,%eax
   1101e:	5d                   	pop    %rbp
   1101f:	41 5c                	pop    %r12
   11021:	c3                   	ret    
   11022:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   11028:	48 c7 43 10 00 00 00 	movq   $0x0,0x10(%rbx)
   1102f:	00 
   11030:	eb b8                	jmp    10fea <sgx_thread_spin_unlock+0x4a>
   11032:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   11038:	b8 16 00 00 00       	mov    $0x16,%eax
   1103d:	c3                   	ret    
   1103e:	66 90                	xchg   %ax,%ax

0000000000011040 <memcpy_s>:
   11040:	f3 0f 1e fa          	endbr64 
   11044:	48 85 c9             	test   %rcx,%rcx
   11047:	74 4f                	je     11098 <memcpy_s+0x58>
   11049:	53                   	push   %rbx
   1104a:	48 85 ff             	test   %rdi,%rdi
   1104d:	74 51                	je     110a0 <memcpy_s+0x60>
   1104f:	48 89 d3             	mov    %rdx,%rbx
   11052:	48 85 d2             	test   %rdx,%rdx
   11055:	74 19                	je     11070 <memcpy_s+0x30>
   11057:	48 39 ce             	cmp    %rcx,%rsi
   1105a:	72 14                	jb     11070 <memcpy_s+0x30>
   1105c:	48 89 de             	mov    %rbx,%rsi
   1105f:	48 89 ca             	mov    %rcx,%rdx
   11062:	e8 c9 f9 ff ff       	call   10a30 <memcpy>
   11067:	31 c0                	xor    %eax,%eax
   11069:	5b                   	pop    %rbx
   1106a:	c3                   	ret    
   1106b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   11070:	48 89 f2             	mov    %rsi,%rdx
   11073:	31 f6                	xor    %esi,%esi
   11075:	e8 f6 fb ff ff       	call   10c70 <memset>
   1107a:	48 85 db             	test   %rbx,%rbx
   1107d:	74 21                	je     110a0 <memcpy_s+0x60>
   1107f:	e8 4c 02 00 00       	call   112d0 <__errno_location>
   11084:	c7 00 22 00 00 00    	movl   $0x22,(%rax)
   1108a:	b8 22 00 00 00       	mov    $0x22,%eax
   1108f:	5b                   	pop    %rbx
   11090:	c3                   	ret    
   11091:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   11098:	31 c0                	xor    %eax,%eax
   1109a:	c3                   	ret    
   1109b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   110a0:	e8 2b 02 00 00       	call   112d0 <__errno_location>
   110a5:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   110ab:	b8 16 00 00 00       	mov    $0x16,%eax
   110b0:	5b                   	pop    %rbx
   110b1:	c3                   	ret    
   110b2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   110b9:	00 00 00 
   110bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000110c0 <memcpy_verw_s>:
   110c0:	f3 0f 1e fa          	endbr64 
   110c4:	48 85 c9             	test   %rcx,%rcx
   110c7:	74 4f                	je     11118 <memcpy_verw_s+0x58>
   110c9:	53                   	push   %rbx
   110ca:	48 85 ff             	test   %rdi,%rdi
   110cd:	74 51                	je     11120 <memcpy_verw_s+0x60>
   110cf:	48 89 d3             	mov    %rdx,%rbx
   110d2:	48 85 d2             	test   %rdx,%rdx
   110d5:	74 19                	je     110f0 <memcpy_verw_s+0x30>
   110d7:	48 39 ce             	cmp    %rcx,%rsi
   110da:	72 14                	jb     110f0 <memcpy_verw_s+0x30>
   110dc:	48 89 de             	mov    %rbx,%rsi
   110df:	48 89 ca             	mov    %rcx,%rdx
   110e2:	e8 79 f7 ff ff       	call   10860 <memcpy_verw>
   110e7:	31 c0                	xor    %eax,%eax
   110e9:	5b                   	pop    %rbx
   110ea:	c3                   	ret    
   110eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   110f0:	48 89 f2             	mov    %rsi,%rdx
   110f3:	31 f6                	xor    %esi,%esi
   110f5:	e8 76 fa ff ff       	call   10b70 <memset_verw>
   110fa:	48 85 db             	test   %rbx,%rbx
   110fd:	74 21                	je     11120 <memcpy_verw_s+0x60>
   110ff:	e8 cc 01 00 00       	call   112d0 <__errno_location>
   11104:	c7 00 22 00 00 00    	movl   $0x22,(%rax)
   1110a:	b8 22 00 00 00       	mov    $0x22,%eax
   1110f:	5b                   	pop    %rbx
   11110:	c3                   	ret    
   11111:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   11118:	31 c0                	xor    %eax,%eax
   1111a:	c3                   	ret    
   1111b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   11120:	e8 ab 01 00 00       	call   112d0 <__errno_location>
   11125:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   1112b:	b8 16 00 00 00       	mov    $0x16,%eax
   11130:	5b                   	pop    %rbx
   11131:	c3                   	ret    

0000000000011132 <setjmp>:
   11132:	f3 0f 1e fa          	endbr64 
   11136:	50                   	push   %rax
   11137:	53                   	push   %rbx
   11138:	51                   	push   %rcx
   11139:	52                   	push   %rdx
   1113a:	56                   	push   %rsi
   1113b:	57                   	push   %rdi
   1113c:	41 50                	push   %r8
   1113e:	41 51                	push   %r9
   11140:	41 52                	push   %r10
   11142:	41 53                	push   %r11
   11144:	41 54                	push   %r12
   11146:	41 55                	push   %r13
   11148:	41 56                	push   %r14
   1114a:	41 57                	push   %r15
   1114c:	48 c7 c6 08 00 00 00 	mov    $0x8,%rsi
   11153:	e8 68 4d ff ff       	call   5ec0 <sgx_is_within_enclave>
   11158:	83 f8 00             	cmp    $0x0,%eax
   1115b:	74 60                	je     111bd <.crash>
   1115d:	41 5f                	pop    %r15
   1115f:	41 5e                	pop    %r14
   11161:	41 5d                	pop    %r13
   11163:	41 5c                	pop    %r12
   11165:	41 5b                	pop    %r11
   11167:	41 5a                	pop    %r10
   11169:	41 59                	pop    %r9
   1116b:	41 58                	pop    %r8
   1116d:	5f                   	pop    %rdi
   1116e:	5e                   	pop    %rsi
   1116f:	5a                   	pop    %rdx
   11170:	59                   	pop    %rcx
   11171:	5b                   	pop    %rbx
   11172:	58                   	pop    %rax
   11173:	4c 8b 1c 24          	mov    (%rsp),%r11
   11177:	48 89 1f             	mov    %rbx,(%rdi)
   1117a:	48 89 6f 08          	mov    %rbp,0x8(%rdi)
   1117e:	4c 89 67 10          	mov    %r12,0x10(%rdi)
   11182:	4c 89 6f 18          	mov    %r13,0x18(%rdi)
   11186:	4c 89 77 20          	mov    %r14,0x20(%rdi)
   1118a:	4c 89 7f 28          	mov    %r15,0x28(%rdi)
   1118e:	48 89 67 30          	mov    %rsp,0x30(%rdi)
   11192:	4c 89 5f 38          	mov    %r11,0x38(%rdi)
   11196:	e8 b6 13 00 00       	call   12551 <get_stack_guard>
   1119b:	48 31 07             	xor    %rax,(%rdi)
   1119e:	48 31 47 08          	xor    %rax,0x8(%rdi)
   111a2:	48 31 47 10          	xor    %rax,0x10(%rdi)
   111a6:	48 31 47 18          	xor    %rax,0x18(%rdi)
   111aa:	48 31 47 20          	xor    %rax,0x20(%rdi)
   111ae:	48 31 47 28          	xor    %rax,0x28(%rdi)
   111b2:	48 31 47 30          	xor    %rax,0x30(%rdi)
   111b6:	48 31 47 38          	xor    %rax,0x38(%rdi)
   111ba:	31 c0                	xor    %eax,%eax
   111bc:	c3                   	ret    

00000000000111bd <.crash>:
   111bd:	0f 0b                	ud2    

00000000000111bf <longjmp>:
   111bf:	f3 0f 1e fa          	endbr64 
   111c3:	50                   	push   %rax
   111c4:	53                   	push   %rbx
   111c5:	51                   	push   %rcx
   111c6:	52                   	push   %rdx
   111c7:	56                   	push   %rsi
   111c8:	57                   	push   %rdi
   111c9:	41 50                	push   %r8
   111cb:	41 51                	push   %r9
   111cd:	41 52                	push   %r10
   111cf:	41 53                	push   %r11
   111d1:	41 54                	push   %r12
   111d3:	41 55                	push   %r13
   111d5:	41 56                	push   %r14
   111d7:	41 57                	push   %r15
   111d9:	57                   	push   %rdi
   111da:	48 c7 c6 08 00 00 00 	mov    $0x8,%rsi
   111e1:	e8 da 4c ff ff       	call   5ec0 <sgx_is_within_enclave>
   111e6:	83 f8 00             	cmp    $0x0,%eax
   111e9:	74 d2                	je     111bd <.crash>
   111eb:	5f                   	pop    %rdi
   111ec:	48 8b 57 30          	mov    0x30(%rdi),%rdx
   111f0:	e8 5c 13 00 00       	call   12551 <get_stack_guard>
   111f5:	48 31 c2             	xor    %rax,%rdx
   111f8:	52                   	push   %rdx
   111f9:	5f                   	pop    %rdi
   111fa:	e8 f1 67 ff ff       	call   79f0 <is_valid_sp>
   111ff:	83 f8 00             	cmp    $0x0,%eax
   11202:	74 b9                	je     111bd <.crash>
   11204:	41 5f                	pop    %r15
   11206:	41 5e                	pop    %r14
   11208:	41 5d                	pop    %r13
   1120a:	41 5c                	pop    %r12
   1120c:	41 5b                	pop    %r11
   1120e:	41 5a                	pop    %r10
   11210:	41 59                	pop    %r9
   11212:	41 58                	pop    %r8
   11214:	5f                   	pop    %rdi
   11215:	5e                   	pop    %rsi
   11216:	5a                   	pop    %rdx
   11217:	59                   	pop    %rcx
   11218:	5b                   	pop    %rbx
   11219:	58                   	pop    %rax
   1121a:	89 f0                	mov    %esi,%eax
   1121c:	48 8b 1f             	mov    (%rdi),%rbx
   1121f:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   11223:	4c 8b 67 10          	mov    0x10(%rdi),%r12
   11227:	4c 8b 6f 18          	mov    0x18(%rdi),%r13
   1122b:	4c 8b 77 20          	mov    0x20(%rdi),%r14
   1122f:	4c 8b 7f 28          	mov    0x28(%rdi),%r15
   11233:	48 8b 57 30          	mov    0x30(%rdi),%rdx
   11237:	48 8b 4f 38          	mov    0x38(%rdi),%rcx
   1123b:	50                   	push   %rax
   1123c:	e8 10 13 00 00       	call   12551 <get_stack_guard>
   11241:	48 31 c3             	xor    %rax,%rbx
   11244:	48 31 c6             	xor    %rax,%rsi
   11247:	49 31 c4             	xor    %rax,%r12
   1124a:	49 31 c5             	xor    %rax,%r13
   1124d:	49 31 c6             	xor    %rax,%r14
   11250:	49 31 c7             	xor    %rax,%r15
   11253:	48 31 c2             	xor    %rax,%rdx
   11256:	48 31 c1             	xor    %rax,%rcx
   11259:	58                   	pop    %rax
   1125a:	48 89 f5             	mov    %rsi,%rbp
   1125d:	48 89 0a             	mov    %rcx,(%rdx)
   11260:	48 89 d4             	mov    %rdx,%rsp
   11263:	85 c0                	test   %eax,%eax
   11265:	75 02                	jne    11269 <longjmp+0xaa>
   11267:	ff c0                	inc    %eax
   11269:	c3                   	ret    
   1126a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000011270 <rsrv_mem_init>:
   11270:	f3 0f 1e fa          	endbr64 
   11274:	48 85 ff             	test   %rdi,%rdi
   11277:	74 47                	je     112c0 <rsrv_mem_init+0x50>
   11279:	48 89 f0             	mov    %rsi,%rax
   1127c:	b9 01 00 00 00       	mov    $0x1,%ecx
   11281:	48 09 d0             	or     %rdx,%rax
   11284:	48 09 f8             	or     %rdi,%rax
   11287:	a9 ff 0f 00 00       	test   $0xfff,%eax
   1128c:	74 0a                	je     11298 <rsrv_mem_init+0x28>
   1128e:	89 c8                	mov    %ecx,%eax
   11290:	c3                   	ret    
   11291:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   11298:	48 89 f0             	mov    %rsi,%rax
   1129b:	48 03 05 ce 6b 00 00 	add    0x6bce(%rip),%rax        # 17e70 <rsrv_mem_base>
   112a2:	72 ea                	jb     1128e <rsrv_mem_init+0x1e>
   112a4:	31 c9                	xor    %ecx,%ecx
   112a6:	48 89 3d c3 6b 00 00 	mov    %rdi,0x6bc3(%rip)        # 17e70 <rsrv_mem_base>
   112ad:	48 89 35 b4 6b 00 00 	mov    %rsi,0x6bb4(%rip)        # 17e68 <rsrv_mem_size>
   112b4:	89 c8                	mov    %ecx,%eax
   112b6:	48 89 15 a3 6b 00 00 	mov    %rdx,0x6ba3(%rip)        # 17e60 <rsrv_mem_min_size>
   112bd:	c3                   	ret    
   112be:	66 90                	xchg   %ax,%ax
   112c0:	b9 01 00 00 00       	mov    $0x1,%ecx
   112c5:	89 c8                	mov    %ecx,%eax
   112c7:	c3                   	ret    
   112c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   112cf:	00 

00000000000112d0 <__errno_location>:
   112d0:	f3 0f 1e fa          	endbr64 
   112d4:	e9 67 66 ff ff       	jmp    7940 <get_errno_addr>
   112d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000112e0 <__memcpy_verw>:
   112e0:	8a 06                	mov    (%rsi),%al
   112e2:	48 83 ec 08          	sub    $0x8,%rsp
   112e6:	8c 1c 24             	mov    %ds,(%rsp)
   112e9:	0f 00 2c 24          	verw   (%rsp)
   112ed:	88 07                	mov    %al,(%rdi)
   112ef:	0f ae f0             	mfence 
   112f2:	0f ae e8             	lfence 
   112f5:	48 83 c4 08          	add    $0x8,%rsp
   112f9:	48 89 f8             	mov    %rdi,%rax
   112fc:	c3                   	ret    
   112fd:	cc                   	int3   
   112fe:	cc                   	int3   
   112ff:	cc                   	int3   

0000000000011300 <__memcpy_8a>:
   11300:	48 8b 06             	mov    (%rsi),%rax
   11303:	48 89 07             	mov    %rax,(%rdi)
   11306:	48 89 f8             	mov    %rdi,%rax
   11309:	c3                   	ret    
   1130a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000011310 <__memset>:
   11310:	48 89 f0             	mov    %rsi,%rax
   11313:	48 25 ff 00 00 00    	and    $0xff,%rax
   11319:	48 89 d1             	mov    %rdx,%rcx
   1131c:	49 89 fb             	mov    %rdi,%r11
   1131f:	fc                   	cld    
   11320:	48 83 f9 0f          	cmp    $0xf,%rcx
   11324:	7e 38                	jle    1135e <L1>
   11326:	88 c4                	mov    %al,%ah
   11328:	89 c2                	mov    %eax,%edx
   1132a:	c1 e0 10             	shl    $0x10,%eax
   1132d:	09 d0                	or     %edx,%eax
   1132f:	89 c2                	mov    %eax,%edx
   11331:	48 c1 e0 20          	shl    $0x20,%rax
   11335:	48 09 d0             	or     %rdx,%rax
   11338:	48 89 fa             	mov    %rdi,%rdx
   1133b:	48 f7 da             	neg    %rdx
   1133e:	48 83 e2 07          	and    $0x7,%rdx
   11342:	49 89 c8             	mov    %rcx,%r8
   11345:	49 29 d0             	sub    %rdx,%r8
   11348:	48 89 d1             	mov    %rdx,%rcx
   1134b:	f3 aa                	rep stos %al,%es:(%rdi)
   1134d:	4c 89 c1             	mov    %r8,%rcx
   11350:	48 c1 e9 03          	shr    $0x3,%rcx
   11354:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   11357:	4c 89 c1             	mov    %r8,%rcx
   1135a:	48 83 e1 07          	and    $0x7,%rcx

000000000001135e <L1>:
   1135e:	f3 aa                	rep stos %al,%es:(%rdi)
   11360:	4c 89 d8             	mov    %r11,%rax
   11363:	c3                   	ret    
   11364:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1136b:	00 00 00 
   1136e:	66 90                	xchg   %ax,%ax

0000000000011370 <_strlen>:
   11370:	49 b8 01 01 01 01 01 	movabs $0x101010101010101,%r8
   11377:	01 01 01 
   1137a:	40 f6 c7 07          	test   $0x7,%dil
   1137e:	48 89 f8             	mov    %rdi,%rax
   11381:	49 b9 80 80 80 80 80 	movabs $0x8080808080808080,%r9
   11388:	80 80 80 
   1138b:	75 33                	jne    113c0 <_strlen+0x50>
   1138d:	0f 1f 00             	nopl   (%rax)
   11390:	48 8b 10             	mov    (%rax),%rdx
   11393:	48 83 c0 08          	add    $0x8,%rax
   11397:	48 89 d1             	mov    %rdx,%rcx
   1139a:	4c 29 c2             	sub    %r8,%rdx
   1139d:	48 f7 d1             	not    %rcx
   113a0:	4c 21 ca             	and    %r9,%rdx
   113a3:	74 eb                	je     11390 <_strlen+0x20>
   113a5:	48 21 ca             	and    %rcx,%rdx
   113a8:	74 e6                	je     11390 <_strlen+0x20>
   113aa:	48 29 f8             	sub    %rdi,%rax
   113ad:	48 0f bc d2          	bsf    %rdx,%rdx
   113b1:	48 c1 ea 03          	shr    $0x3,%rdx
   113b5:	48 8d 44 10 f8       	lea    -0x8(%rax,%rdx,1),%rax
   113ba:	c3                   	ret    
   113bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   113c0:	88 c1                	mov    %al,%cl
   113c2:	48 c7 c6 01 00 00 00 	mov    $0x1,%rsi
   113c9:	80 e1 07             	and    $0x7,%cl
   113cc:	24 f8                	and    $0xf8,%al
   113ce:	c0 e1 03             	shl    $0x3,%cl
   113d1:	48 8b 10             	mov    (%rax),%rdx
   113d4:	48 d3 e6             	shl    %cl,%rsi
   113d7:	48 ff ce             	dec    %rsi
   113da:	48 09 f2             	or     %rsi,%rdx
   113dd:	eb b4                	jmp    11393 <_strlen+0x23>
   113df:	90                   	nop

00000000000113e0 <sgx_init_crypto_lib>:
   113e0:	f3 0f 1e fa          	endbr64 
   113e4:	e9 07 00 00 00       	jmp    113f0 <init_ipp_cpuid>
   113e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000113f0 <init_ipp_cpuid>:
   113f0:	f3 0f 1e fa          	endbr64 
   113f4:	48 83 3d f4 6b 00 00 	cmpq   $0x0,0x6bf4(%rip)        # 17ff0 <ippcpSetCpuFeatures>
   113fb:	00 
   113fc:	0f 84 2e 02 00 00    	je     11630 <init_ipp_cpuid+0x240>
   11402:	48 89 f8             	mov    %rdi,%rax
   11405:	ba 02 00 00 00       	mov    $0x2,%edx
   1140a:	f6 c4 02             	test   $0x2,%ah
   1140d:	0f 84 1f 02 00 00    	je     11632 <init_ipp_cpuid+0x242>
   11413:	48 89 fa             	mov    %rdi,%rdx
   11416:	48 83 ec 08          	sub    $0x8,%rsp
   1141a:	48 b9 00 00 00 00 08 	movabs $0x800000000,%rcx
   11421:	00 00 00 
   11424:	81 e2 00 08 00 00    	and    $0x800,%edx
   1142a:	48 83 fa 01          	cmp    $0x1,%rdx
   1142e:	48 19 ff             	sbb    %rdi,%rdi
   11431:	48 83 e7 e0          	and    $0xffffffffffffffe0,%rdi
   11435:	48 83 c7 7f          	add    $0x7f,%rdi
   11439:	48 89 fa             	mov    %rdi,%rdx
   1143c:	80 ca 80             	or     $0x80,%dl
   1143f:	f6 c4 04             	test   $0x4,%ah
   11442:	48 0f 45 fa          	cmovne %rdx,%rdi
   11446:	48 89 fa             	mov    %rdi,%rdx
   11449:	80 ce 03             	or     $0x3,%dh
   1144c:	a9 00 00 01 00       	test   $0x10000,%eax
   11451:	48 0f 45 fa          	cmovne %rdx,%rdi
   11455:	48 89 fa             	mov    %rdi,%rdx
   11458:	80 ce 04             	or     $0x4,%dh
   1145b:	f6 c4 40             	test   $0x40,%ah
   1145e:	48 0f 45 fa          	cmovne %rdx,%rdi
   11462:	48 89 fa             	mov    %rdi,%rdx
   11465:	80 ce 08             	or     $0x8,%dh
   11468:	f6 c4 20             	test   $0x20,%ah
   1146b:	48 0f 45 fa          	cmovne %rdx,%rdi
   1146f:	48 89 fa             	mov    %rdi,%rdx
   11472:	80 ce 20             	or     $0x20,%dh
   11475:	a9 00 00 02 00       	test   $0x20000,%eax
   1147a:	48 0f 45 fa          	cmovne %rdx,%rdi
   1147e:	48 89 fa             	mov    %rdi,%rdx
   11481:	80 ce 40             	or     $0x40,%dh
   11484:	f6 c4 80             	test   $0x80,%ah
   11487:	48 0f 45 fa          	cmovne %rdx,%rdi
   1148b:	48 89 fa             	mov    %rdi,%rdx
   1148e:	80 ce 80             	or     $0x80,%dh
   11491:	a9 00 00 80 00       	test   $0x800000,%eax
   11496:	48 0f 45 fa          	cmovne %rdx,%rdi
   1149a:	48 89 fa             	mov    %rdi,%rdx
   1149d:	48 81 ca 00 00 01 00 	or     $0x10000,%rdx
   114a4:	a9 00 00 00 10       	test   $0x10000000,%eax
   114a9:	48 0f 45 fa          	cmovne %rdx,%rdi
   114ad:	48 89 fa             	mov    %rdi,%rdx
   114b0:	48 81 ca 00 00 02 00 	or     $0x20000,%rdx
   114b7:	a9 00 00 00 20       	test   $0x20000000,%eax
   114bc:	48 0f 45 fa          	cmovne %rdx,%rdi
   114c0:	48 89 fa             	mov    %rdi,%rdx
   114c3:	48 81 ca 00 00 08 00 	or     $0x80000,%rdx
   114ca:	48 85 c8             	test   %rcx,%rax
   114cd:	48 0f 45 fa          	cmovne %rdx,%rdi
   114d1:	a9 00 00 00 08       	test   $0x8000000,%eax
   114d6:	74 0d                	je     114e5 <init_ipp_cpuid+0xf5>
   114d8:	48 ba 00 00 10 00 02 	movabs $0x200100000,%rdx
   114df:	00 00 00 
   114e2:	48 09 d7             	or     %rdx,%rdi
   114e5:	48 b9 00 00 00 00 02 	movabs $0x200000000,%rcx
   114ec:	00 00 00 
   114ef:	48 89 fa             	mov    %rdi,%rdx
   114f2:	48 81 ca 00 00 80 00 	or     $0x800000,%rdx
   114f9:	48 85 c8             	test   %rcx,%rax
   114fc:	48 b9 00 00 00 00 01 	movabs $0x100000000,%rcx
   11503:	00 00 00 
   11506:	48 0f 45 fa          	cmovne %rdx,%rdi
   1150a:	48 89 fa             	mov    %rdi,%rdx
   1150d:	48 81 ca 00 00 40 00 	or     $0x400000,%rdx
   11514:	48 85 c8             	test   %rcx,%rax
   11517:	48 b9 00 00 00 00 04 	movabs $0x400000000,%rcx
   1151e:	00 00 00 
   11521:	48 0f 45 fa          	cmovne %rdx,%rdi
   11525:	48 89 fa             	mov    %rdi,%rdx
   11528:	48 81 ca 00 00 20 00 	or     $0x200000,%rdx
   1152f:	48 85 c8             	test   %rcx,%rax
   11532:	48 b9 00 00 00 00 20 	movabs $0x2000000000,%rcx
   11539:	00 00 00 
   1153c:	48 0f 45 fa          	cmovne %rdx,%rdi
   11540:	48 89 fa             	mov    %rdi,%rdx
   11543:	48 81 ca 00 00 00 02 	or     $0x2000000,%rdx
   1154a:	a9 00 00 00 01       	test   $0x1000000,%eax
   1154f:	48 0f 45 fa          	cmovne %rdx,%rdi
   11553:	48 89 fa             	mov    %rdi,%rdx
   11556:	48 81 ca 00 00 00 01 	or     $0x1000000,%rdx
   1155d:	48 85 c8             	test   %rcx,%rax
   11560:	48 b9 00 00 00 00 40 	movabs $0x4000000000,%rcx
   11567:	00 00 00 
   1156a:	48 0f 45 fa          	cmovne %rdx,%rdi
   1156e:	48 89 fa             	mov    %rdi,%rdx
   11571:	48 81 ca 00 00 00 04 	or     $0x4000000,%rdx
   11578:	48 85 c8             	test   %rcx,%rax
   1157b:	48 b9 00 00 00 00 80 	movabs $0x8000000000,%rcx
   11582:	00 00 00 
   11585:	48 0f 45 fa          	cmovne %rdx,%rdi
   11589:	48 89 fa             	mov    %rdi,%rdx
   1158c:	48 81 ca 00 00 00 08 	or     $0x8000000,%rdx
   11593:	48 85 c8             	test   %rcx,%rax
   11596:	48 b9 00 00 00 00 00 	movabs $0x20000000000,%rcx
   1159d:	02 00 00 
   115a0:	48 0f 45 fa          	cmovne %rdx,%rdi
   115a4:	48 89 fa             	mov    %rdi,%rdx
   115a7:	48 81 ca 00 00 00 40 	or     $0x40000000,%rdx
   115ae:	48 85 c8             	test   %rcx,%rax
   115b1:	48 b9 00 00 00 00 00 	movabs $0x10000000000,%rcx
   115b8:	01 00 00 
   115bb:	48 0f 45 fa          	cmovne %rdx,%rdi
   115bf:	48 89 fa             	mov    %rdi,%rdx
   115c2:	48 81 ca 00 00 00 20 	or     $0x20000000,%rdx
   115c9:	48 85 c8             	test   %rcx,%rax
   115cc:	48 0f 45 fa          	cmovne %rdx,%rdi
   115d0:	48 0f ba e0 2e       	bt     $0x2e,%rax
   115d5:	73 05                	jae    115dc <init_ipp_cpuid+0x1ec>
   115d7:	48 0f ba ef 23       	bts    $0x23,%rdi
   115dc:	a9 00 00 00 40       	test   $0x40000000,%eax
   115e1:	74 05                	je     115e8 <init_ipp_cpuid+0x1f8>
   115e3:	48 0f ba ef 20       	bts    $0x20,%rdi
   115e8:	48 0f ba e0 2d       	bt     $0x2d,%rax
   115ed:	73 05                	jae    115f4 <init_ipp_cpuid+0x204>
   115ef:	48 0f ba ef 22       	bts    $0x22,%rdi
   115f4:	48 0f ba e0 2c       	bt     $0x2c,%rax
   115f9:	73 05                	jae    11600 <init_ipp_cpuid+0x210>
   115fb:	48 0f ba ef 25       	bts    $0x25,%rdi
   11600:	48 0f ba e0 2f       	bt     $0x2f,%rax
   11605:	73 05                	jae    1160c <init_ipp_cpuid+0x21c>
   11607:	48 0f ba ef 24       	bts    $0x24,%rdi
   1160c:	48 0f ba ef 3f       	bts    $0x3f,%rdi
   11611:	e8 02 fa fe ff       	call   1018 <ippcpSetCpuFeatures@plt>
   11616:	31 d2                	xor    %edx,%edx
   11618:	85 c0                	test   %eax,%eax
   1161a:	0f 95 c2             	setne  %dl
   1161d:	48 83 c4 08          	add    $0x8,%rsp
   11621:	01 d2                	add    %edx,%edx
   11623:	89 d0                	mov    %edx,%eax
   11625:	c3                   	ret    
   11626:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1162d:	00 00 00 
   11630:	31 d2                	xor    %edx,%edx
   11632:	89 d0                	mov    %edx,%eax
   11634:	c3                   	ret    
   11635:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1163c:	00 00 00 
   1163f:	90                   	nop

0000000000011640 <sgx_create_report>:
   11640:	f3 0f 1e fa          	endbr64 
   11644:	55                   	push   %rbp
   11645:	48 89 e5             	mov    %rsp,%rbp
   11648:	41 57                	push   %r15
   1164a:	49 89 f7             	mov    %rsi,%r15
   1164d:	31 f6                	xor    %esi,%esi
   1164f:	41 56                	push   %r14
   11651:	41 55                	push   %r13
   11653:	49 89 fd             	mov    %rdi,%r13
   11656:	41 54                	push   %r12
   11658:	53                   	push   %rbx
   11659:	48 89 d3             	mov    %rdx,%rbx
   1165c:	ba 40 00 00 00       	mov    $0x40,%edx
   11661:	48 81 e4 00 fe ff ff 	and    $0xfffffffffffffe00,%rsp
   11668:	48 81 ec 00 08 00 00 	sub    $0x800,%rsp
   1166f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   11676:	00 00 
   11678:	48 89 84 24 f8 07 00 	mov    %rax,0x7f8(%rsp)
   1167f:	00 
   11680:	31 c0                	xor    %eax,%eax
   11682:	48 8d 84 24 80 01 00 	lea    0x180(%rsp),%rax
   11689:	00 
   1168a:	4c 8d b4 24 00 04 00 	lea    0x400(%rsp),%r14
   11691:	00 
   11692:	48 89 c7             	mov    %rax,%rdi
   11695:	48 89 84 24 78 01 00 	mov    %rax,0x178(%rsp)
   1169c:	00 
   1169d:	4c 8d a4 24 00 02 00 	lea    0x200(%rsp),%r12
   116a4:	00 
   116a5:	e8 66 fc ff ff       	call   11310 <__memset>
   116aa:	31 f6                	xor    %esi,%esi
   116ac:	ba 00 02 00 00       	mov    $0x200,%edx
   116b1:	4c 89 f7             	mov    %r14,%rdi
   116b4:	e8 57 fc ff ff       	call   11310 <__memset>
   116b9:	31 f6                	xor    %esi,%esi
   116bb:	ba b0 01 00 00       	mov    $0x1b0,%edx
   116c0:	4c 89 e7             	mov    %r12,%rdi
   116c3:	e8 48 fc ff ff       	call   11310 <__memset>
   116c8:	4d 85 ed             	test   %r13,%r13
   116cb:	74 23                	je     116f0 <sgx_create_report+0xb0>
   116cd:	be 00 02 00 00       	mov    $0x200,%esi
   116d2:	4c 89 ef             	mov    %r13,%rdi
   116d5:	e8 e6 47 ff ff       	call   5ec0 <sgx_is_within_enclave>
   116da:	85 c0                	test   %eax,%eax
   116dc:	0f 84 be 00 00 00    	je     117a0 <sgx_create_report+0x160>
   116e2:	b9 40 00 00 00       	mov    $0x40,%ecx
   116e7:	4c 89 f7             	mov    %r14,%rdi
   116ea:	4c 89 ee             	mov    %r13,%rsi
   116ed:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
   116f0:	4d 85 ff             	test   %r15,%r15
   116f3:	74 4c                	je     11741 <sgx_create_report+0x101>
   116f5:	be 40 00 00 00       	mov    $0x40,%esi
   116fa:	4c 89 ff             	mov    %r15,%rdi
   116fd:	e8 be 47 ff ff       	call   5ec0 <sgx_is_within_enclave>
   11702:	85 c0                	test   %eax,%eax
   11704:	0f 84 96 00 00 00    	je     117a0 <sgx_create_report+0x160>
   1170a:	f3 41 0f 6f 0f       	movdqu (%r15),%xmm1
   1170f:	f3 41 0f 6f 57 10    	movdqu 0x10(%r15),%xmm2
   11715:	f3 41 0f 6f 5f 20    	movdqu 0x20(%r15),%xmm3
   1171b:	f3 41 0f 6f 67 30    	movdqu 0x30(%r15),%xmm4
   11721:	0f 29 8c 24 80 01 00 	movaps %xmm1,0x180(%rsp)
   11728:	00 
   11729:	0f 29 94 24 90 01 00 	movaps %xmm2,0x190(%rsp)
   11730:	00 
   11731:	0f 29 9c 24 a0 01 00 	movaps %xmm3,0x1a0(%rsp)
   11738:	00 
   11739:	0f 29 a4 24 b0 01 00 	movaps %xmm4,0x1b0(%rsp)
   11740:	00 
   11741:	48 85 db             	test   %rbx,%rbx
   11744:	74 5a                	je     117a0 <sgx_create_report+0x160>
   11746:	be b0 01 00 00       	mov    $0x1b0,%esi
   1174b:	48 89 df             	mov    %rbx,%rdi
   1174e:	e8 6d 47 ff ff       	call   5ec0 <sgx_is_within_enclave>
   11753:	85 c0                	test   %eax,%eax
   11755:	74 49                	je     117a0 <sgx_create_report+0x160>
   11757:	48 8b b4 24 78 01 00 	mov    0x178(%rsp),%rsi
   1175e:	00 
   1175f:	4c 89 e2             	mov    %r12,%rdx
   11762:	4c 89 f7             	mov    %r14,%rdi
   11765:	e8 16 11 00 00       	call   12880 <do_ereport>
   1176a:	89 c2                	mov    %eax,%edx
   1176c:	b8 01 00 00 00       	mov    $0x1,%eax
   11771:	85 d2                	test   %edx,%edx
   11773:	75 30                	jne    117a5 <sgx_create_report+0x165>
   11775:	31 c0                	xor    %eax,%eax
   11777:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1177e:	00 00 
   11780:	66 41 0f 6f 04 04    	movdqa (%r12,%rax,1),%xmm0
   11786:	0f 11 04 03          	movups %xmm0,(%rbx,%rax,1)
   1178a:	48 83 c0 10          	add    $0x10,%rax
   1178e:	48 3d b0 01 00 00    	cmp    $0x1b0,%rax
   11794:	75 ea                	jne    11780 <sgx_create_report+0x140>
   11796:	31 c0                	xor    %eax,%eax
   11798:	eb 0b                	jmp    117a5 <sgx_create_report+0x165>
   1179a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   117a0:	b8 02 00 00 00       	mov    $0x2,%eax
   117a5:	48 8b 94 24 f8 07 00 	mov    0x7f8(%rsp),%rdx
   117ac:	00 
   117ad:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   117b4:	00 00 
   117b6:	75 0f                	jne    117c7 <sgx_create_report+0x187>
   117b8:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
   117bc:	5b                   	pop    %rbx
   117bd:	41 5c                	pop    %r12
   117bf:	41 5d                	pop    %r13
   117c1:	41 5e                	pop    %r14
   117c3:	41 5f                	pop    %r15
   117c5:	5d                   	pop    %rbp
   117c6:	c3                   	ret    
   117c7:	e8 34 f6 ff ff       	call   10e00 <__stack_chk_fail>
   117cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000117d0 <sgx_self_report>:
   117d0:	f3 0f 1e fa          	endbr64 
   117d4:	55                   	push   %rbp
   117d5:	53                   	push   %rbx
   117d6:	48 8d 1d 03 98 01 00 	lea    0x19803(%rip),%rbx        # 2afe0 <_ZZ15sgx_self_reportE7_report>
   117dd:	48 83 ec 08          	sub    $0x8,%rsp
   117e1:	48 83 3d 27 98 01 00 	cmpq   $0x0,0x19827(%rip)        # 2b010 <_ZZ15sgx_self_reportE7_report+0x30>
   117e8:	00 
   117e9:	74 0d                	je     117f8 <sgx_self_report+0x28>
   117eb:	48 83 c4 08          	add    $0x8,%rsp
   117ef:	48 89 d8             	mov    %rbx,%rax
   117f2:	5b                   	pop    %rbx
   117f3:	5d                   	pop    %rbp
   117f4:	c3                   	ret    
   117f5:	0f 1f 00             	nopl   (%rax)
   117f8:	48 8d 2d c1 97 01 00 	lea    0x197c1(%rip),%rbp        # 2afc0 <_ZZ15sgx_self_reportE11report_lock>
   117ff:	48 89 ef             	mov    %rbp,%rdi
   11802:	e8 c9 b2 ff ff       	call   cad0 <sgx_spin_lock>
   11807:	48 83 3d 01 98 01 00 	cmpq   $0x0,0x19801(%rip)        # 2b010 <_ZZ15sgx_self_reportE7_report+0x30>
   1180e:	00 
   1180f:	74 17                	je     11828 <sgx_self_report+0x58>
   11811:	48 89 ef             	mov    %rbp,%rdi
   11814:	e8 47 b3 ff ff       	call   cb60 <sgx_spin_unlock>
   11819:	48 83 c4 08          	add    $0x8,%rsp
   1181d:	48 89 d8             	mov    %rbx,%rax
   11820:	5b                   	pop    %rbx
   11821:	5d                   	pop    %rbp
   11822:	c3                   	ret    
   11823:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   11828:	48 89 da             	mov    %rbx,%rdx
   1182b:	31 f6                	xor    %esi,%esi
   1182d:	31 ff                	xor    %edi,%edi
   1182f:	e8 0c fe ff ff       	call   11640 <sgx_create_report>
   11834:	eb db                	jmp    11811 <sgx_self_report+0x41>

Disassembly of section .nipx:

0000000000011a00 <init_enclave>:
   11a00:	f3 0f 1e fa          	endbr64 
   11a04:	41 54                	push   %r12
   11a06:	55                   	push   %rbp
   11a07:	53                   	push   %rbx
   11a08:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
   11a0f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   11a16:	00 00 
   11a18:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
   11a1f:	00 
   11a20:	31 c0                	xor    %eax,%eax
   11a22:	48 85 ff             	test   %rdi,%rdi
   11a25:	0f 84 f5 02 00 00    	je     11d20 <init_enclave+0x320>
   11a2b:	48 89 f3             	mov    %rsi,%rbx
   11a2e:	48 85 f6             	test   %rsi,%rsi
   11a31:	0f 84 e9 02 00 00    	je     11d20 <init_enclave+0x320>
   11a37:	48 83 3d 91 65 00 00 	cmpq   $0x0,0x6591(%rip)        # 17fd0 <_Z9pcl_entryPvS_>
   11a3e:	00 
   11a3f:	48 89 fd             	mov    %rdi,%rbp
   11a42:	74 10                	je     11a54 <init_enclave+0x54>
   11a44:	0f ae e8             	lfence 
   11a47:	e8 c4 f5 fe ff       	call   1010 <_Z9pcl_entryPvS_@plt>
   11a4c:	85 c0                	test   %eax,%eax
   11a4e:	0f 85 cc 02 00 00    	jne    11d20 <init_enclave+0x320>
   11a54:	48 89 ef             	mov    %rbp,%rdi
   11a57:	e8 d4 6c ff ff       	call   8730 <relocate_enclave>
   11a5c:	89 c5                	mov    %eax,%ebp
   11a5e:	85 c0                	test   %eax,%eax
   11a60:	0f 85 ba 02 00 00    	jne    11d20 <init_enclave+0x320>
   11a66:	e8 8d 0a 00 00       	call   124f8 <get_enclave_base>
   11a6b:	48 8d 15 0e 19 00 00 	lea    0x190e(%rip),%rdx        # 13380 <g_global_data>
   11a72:	48 89 05 a7 63 00 00 	mov    %rax,0x63a7(%rip)        # 17e20 <g_enclave_base>
   11a79:	48 8b 8a d0 06 00 00 	mov    0x6d0(%rdx),%rcx
   11a80:	48 89 0d 91 63 00 00 	mov    %rcx,0x6391(%rip)        # 17e18 <g_enclave_size>
   11a87:	48 8b 8a c0 06 00 00 	mov    0x6c0(%rdx),%rcx
   11a8e:	48 85 c9             	test   %rcx,%rcx
   11a91:	74 1e                	je     11ab1 <init_enclave+0xb1>
   11a93:	48 8b 8a c0 06 00 00 	mov    0x6c0(%rdx),%rcx
   11a9a:	48 39 c8             	cmp    %rcx,%rax
   11a9d:	0f 85 84 02 00 00    	jne    11d27 <init_enclave+0x327>
   11aa3:	48 8b 82 c8 06 00 00 	mov    0x6c8(%rdx),%rax
   11aaa:	48 89 05 6f 63 00 00 	mov    %rax,0x636f(%rip)        # 17e20 <g_enclave_base>
   11ab1:	be b0 00 00 00       	mov    $0xb0,%esi
   11ab6:	48 89 df             	mov    %rbx,%rdi
   11ab9:	e8 62 44 ff ff       	call   5f20 <sgx_is_outside_enclave>
   11abe:	85 c0                	test   %eax,%eax
   11ac0:	0f 84 5a 02 00 00    	je     11d20 <init_enclave+0x320>
   11ac6:	0f ae e8             	lfence 
   11ac9:	f3 0f 6f 03          	movdqu (%rbx),%xmm0
   11acd:	f3 0f 6f 4b 10       	movdqu 0x10(%rbx),%xmm1
   11ad2:	f3 0f 6f 53 20       	movdqu 0x20(%rbx),%xmm2
   11ad7:	f3 0f 6f 5b 30       	movdqu 0x30(%rbx),%xmm3
   11adc:	f3 0f 6f 63 40       	movdqu 0x40(%rbx),%xmm4
   11ae1:	0f 29 04 24          	movaps %xmm0,(%rsp)
   11ae5:	f3 0f 6f 6b 50       	movdqu 0x50(%rbx),%xmm5
   11aea:	f3 0f 6f 73 60       	movdqu 0x60(%rbx),%xmm6
   11aef:	0f 29 4c 24 10       	movaps %xmm1,0x10(%rsp)
   11af4:	f3 0f 6f 7b 70       	movdqu 0x70(%rbx),%xmm7
   11af9:	f3 0f 6f 83 80 00 00 	movdqu 0x80(%rbx),%xmm0
   11b00:	00 
   11b01:	0f 29 54 24 20       	movaps %xmm2,0x20(%rsp)
   11b06:	f3 0f 6f 8b 90 00 00 	movdqu 0x90(%rbx),%xmm1
   11b0d:	00 
   11b0e:	f3 0f 6f 93 a0 00 00 	movdqu 0xa0(%rbx),%xmm2
   11b15:	00 
   11b16:	0f 29 5c 24 30       	movaps %xmm3,0x30(%rsp)
   11b1b:	0f 29 64 24 40       	movaps %xmm4,0x40(%rsp)
   11b20:	0f 29 6c 24 50       	movaps %xmm5,0x50(%rsp)
   11b25:	0f 29 74 24 60       	movaps %xmm6,0x60(%rsp)
   11b2a:	0f 29 7c 24 70       	movaps %xmm7,0x70(%rsp)
   11b2f:	0f 29 84 24 80 00 00 	movaps %xmm0,0x80(%rsp)
   11b36:	00 
   11b37:	0f 29 8c 24 90 00 00 	movaps %xmm1,0x90(%rsp)
   11b3e:	00 
   11b3f:	0f 29 94 24 a0 00 00 	movaps %xmm2,0xa0(%rsp)
   11b46:	00 
   11b47:	f6 44 24 13 40       	testb  $0x40,0x13(%rsp)
   11b4c:	0f 85 8e 01 00 00    	jne    11ce0 <init_enclave+0x2e0>
   11b52:	b9 14 00 00 00       	mov    $0x14,%ecx
   11b57:	b8 9c 00 00 00       	mov    $0x9c,%eax
   11b5c:	48 8d 14 04          	lea    (%rsp,%rax,1),%rdx
   11b60:	48 8d 41 ff          	lea    -0x1(%rcx),%rax
   11b64:	83 e0 01             	and    $0x1,%eax
   11b67:	c6 02 00             	movb   $0x0,(%rdx)
   11b6a:	48 89 c6             	mov    %rax,%rsi
   11b6d:	b8 01 00 00 00       	mov    $0x1,%eax
   11b72:	48 39 c8             	cmp    %rcx,%rax
   11b75:	73 2b                	jae    11ba2 <init_enclave+0x1a2>
   11b77:	48 85 f6             	test   %rsi,%rsi
   11b7a:	74 14                	je     11b90 <init_enclave+0x190>
   11b7c:	b8 02 00 00 00       	mov    $0x2,%eax
   11b81:	c6 42 01 00          	movb   $0x0,0x1(%rdx)
   11b85:	48 39 c8             	cmp    %rcx,%rax
   11b88:	73 18                	jae    11ba2 <init_enclave+0x1a2>
   11b8a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   11b90:	c6 04 02 00          	movb   $0x0,(%rdx,%rax,1)
   11b94:	48 83 c0 02          	add    $0x2,%rax
   11b98:	c6 44 10 ff 00       	movb   $0x0,-0x1(%rax,%rdx,1)
   11b9d:	48 39 c8             	cmp    %rcx,%rax
   11ba0:	72 ee                	jb     11b90 <init_enclave+0x190>
   11ba2:	8b 84 24 ac 00 00 00 	mov    0xac(%rsp),%eax
   11ba9:	48 8d 5c 24 0c       	lea    0xc(%rsp),%rbx
   11bae:	89 05 5c 62 00 00    	mov    %eax,0x625c(%rip)        # 17e10 <g_cpu_core_num>
   11bb4:	8b 44 24 08          	mov    0x8(%rsp),%eax
   11bb8:	89 05 6a 62 00 00    	mov    %eax,0x626a(%rip)        # 17e28 <g_sdk_version>
   11bbe:	85 c0                	test   %eax,%eax
   11bc0:	74 1a                	je     11bdc <init_enclave+0x1dc>
   11bc2:	83 f8 04             	cmp    $0x4,%eax
   11bc5:	0f 8e 55 01 00 00    	jle    11d20 <init_enclave+0x320>
   11bcb:	48 8d 5c 24 0c       	lea    0xc(%rsp),%rbx
   11bd0:	31 f6                	xor    %esi,%esi
   11bd2:	48 89 df             	mov    %rbx,%rdi
   11bd5:	e8 86 5d ff ff       	call   7960 <feature_supported>
   11bda:	89 c5                	mov    %eax,%ebp
   11bdc:	48 89 df             	mov    %rbx,%rdi
   11bdf:	be 01 00 00 00       	mov    $0x1,%esi
   11be4:	89 2d 42 62 00 00    	mov    %ebp,0x6242(%rip)        # 17e2c <EDMM_supported>
   11bea:	e8 71 5d ff ff       	call   7960 <feature_supported>
   11bef:	44 8b 25 36 62 00 00 	mov    0x6236(%rip),%r12d        # 17e2c <EDMM_supported>
   11bf6:	89 05 18 62 00 00    	mov    %eax,0x6218(%rip)        # 17e14 <g_aexnotify_supported>
   11bfc:	e8 6f 5b ff ff       	call   7770 <get_heap_min_size>
   11c01:	48 89 c5             	mov    %rax,%rbp
   11c04:	e8 f7 5a ff ff       	call   7700 <get_heap_size>
   11c09:	48 89 c3             	mov    %rax,%rbx
   11c0c:	e8 cf 5a ff ff       	call   76e0 <get_heap_base>
   11c11:	44 89 e1             	mov    %r12d,%ecx
   11c14:	48 89 ea             	mov    %rbp,%rdx
   11c17:	48 89 de             	mov    %rbx,%rsi
   11c1a:	48 89 c7             	mov    %rax,%rdi
   11c1d:	e8 1e ad ff ff       	call   c940 <heap_init>
   11c22:	85 c0                	test   %eax,%eax
   11c24:	0f 85 f6 00 00 00    	jne    11d20 <init_enclave+0x320>
   11c2a:	e8 81 68 ff ff       	call   84b0 <get_xfeature_state>
   11c2f:	48 8b 3c 24          	mov    (%rsp),%rdi
   11c33:	48 89 c2             	mov    %rax,%rdx
   11c36:	48 81 e7 ff e7 ff e1 	and    $0xffffffffe1ffe7ff,%rdi
   11c3d:	f6 44 24 13 40       	testb  $0x40,0x13(%rsp)
   11c42:	74 08                	je     11c4c <init_enclave+0x24c>
   11c44:	48 8b bc 24 a4 00 00 	mov    0xa4(%rsp),%rdi
   11c4b:	00 
   11c4c:	83 3d d5 61 00 00 01 	cmpl   $0x1,0x61d5(%rip)        # 17e28 <g_sdk_version>
   11c53:	7f 0f                	jg     11c64 <init_enclave+0x264>
   11c55:	48 83 bc 24 9c 00 00 	cmpq   $0x0,0x9c(%rsp)
   11c5c:	00 00 
   11c5e:	0f 84 a4 00 00 00    	je     11d08 <init_enclave+0x308>
   11c64:	48 8d 74 24 14       	lea    0x14(%rsp),%rsi
   11c69:	e8 32 41 ff ff       	call   5da0 <init_optimized_libs>
   11c6e:	85 c0                	test   %eax,%eax
   11c70:	0f 85 aa 00 00 00    	jne    11d20 <init_enclave+0x320>
   11c76:	e8 f5 5b ff ff       	call   7870 <get_rsrv_size>
   11c7b:	48 85 c0             	test   %rax,%rax
   11c7e:	74 27                	je     11ca7 <init_enclave+0x2a7>
   11c80:	e8 5b 5c ff ff       	call   78e0 <get_rsrv_min_size>
   11c85:	48 89 c5             	mov    %rax,%rbp
   11c88:	e8 e3 5b ff ff       	call   7870 <get_rsrv_size>
   11c8d:	48 89 c3             	mov    %rax,%rbx
   11c90:	e8 3b 5b ff ff       	call   77d0 <get_rsrv_base>
   11c95:	48 89 ea             	mov    %rbp,%rdx
   11c98:	48 89 de             	mov    %rbx,%rsi
   11c9b:	48 89 c7             	mov    %rax,%rdi
   11c9e:	e8 cd f5 ff ff       	call   11270 <rsrv_mem_init>
   11ca3:	85 c0                	test   %eax,%eax
   11ca5:	75 79                	jne    11d20 <init_enclave+0x320>
   11ca7:	be 08 00 00 00       	mov    $0x8,%esi
   11cac:	48 8d 3d 55 61 00 00 	lea    0x6155(%rip),%rdi        # 17e08 <__intel_security_cookie>
   11cb3:	e8 08 44 ff ff       	call   60c0 <sgx_read_rand>
   11cb8:	f7 d8                	neg    %eax
   11cba:	19 c0                	sbb    %eax,%eax
   11cbc:	48 8b 94 24 b8 00 00 	mov    0xb8(%rsp),%rdx
   11cc3:	00 
   11cc4:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   11ccb:	00 00 
   11ccd:	75 5d                	jne    11d2c <init_enclave+0x32c>
   11ccf:	48 81 c4 c0 00 00 00 	add    $0xc0,%rsp
   11cd6:	5b                   	pop    %rbx
   11cd7:	5d                   	pop    %rbp
   11cd8:	41 5c                	pop    %r12
   11cda:	c3                   	ret    
   11cdb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   11ce0:	48 8b 84 24 9c 00 00 	mov    0x9c(%rsp),%rax
   11ce7:	00 
   11ce8:	b9 b0 00 00 00       	mov    $0xb0,%ecx
   11ced:	48 29 c1             	sub    %rax,%rcx
   11cf0:	48 3d af 00 00 00    	cmp    $0xaf,%rax
   11cf6:	0f 86 60 fe ff ff    	jbe    11b5c <init_enclave+0x15c>
   11cfc:	e9 a1 fe ff ff       	jmp    11ba2 <init_enclave+0x1a2>
   11d01:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   11d08:	31 f6                	xor    %esi,%esi
   11d0a:	e8 91 40 ff ff       	call   5da0 <init_optimized_libs>
   11d0f:	85 c0                	test   %eax,%eax
   11d11:	0f 84 5f ff ff ff    	je     11c76 <init_enclave+0x276>
   11d17:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   11d1e:	00 00 
   11d20:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   11d25:	eb 95                	jmp    11cbc <init_enclave+0x2bc>
   11d27:	e8 0b 0c 00 00       	call   12937 <abort>
   11d2c:	e8 cf f0 ff ff       	call   10e00 <__stack_chk_fail>
   11d31:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   11d38:	00 00 00 00 
   11d3c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000011d40 <do_init_enclave>:
   11d40:	f3 0f 1e fa          	endbr64 
   11d44:	41 54                	push   %r12
   11d46:	49 89 f4             	mov    %rsi,%r12
   11d49:	55                   	push   %rbp
   11d4a:	48 89 fd             	mov    %rdi,%rbp
   11d4d:	53                   	push   %rbx
   11d4e:	e8 a5 07 00 00       	call   124f8 <get_enclave_base>
   11d53:	48 89 c3             	mov    %rax,%rbx
   11d56:	e8 c8 07 00 00       	call   12523 <lock_enclave>
   11d5b:	85 c0                	test   %eax,%eax
   11d5d:	74 11                	je     11d70 <do_init_enclave+0x30>
   11d5f:	bd 01 00 00 00       	mov    $0x1,%ebp
   11d64:	89 e8                	mov    %ebp,%eax
   11d66:	5b                   	pop    %rbx
   11d67:	5d                   	pop    %rbp
   11d68:	41 5c                	pop    %r12
   11d6a:	c3                   	ret    
   11d6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   11d70:	48 89 ee             	mov    %rbp,%rsi
   11d73:	48 89 df             	mov    %rbx,%rdi
   11d76:	e8 85 fc ff ff       	call   11a00 <init_enclave>
   11d7b:	85 c0                	test   %eax,%eax
   11d7d:	75 e0                	jne    11d5f <do_init_enclave+0x1f>
   11d7f:	be 01 00 00 00       	mov    $0x1,%esi
   11d84:	4c 89 e7             	mov    %r12,%rdi
   11d87:	e8 64 51 ff ff       	call   6ef0 <do_init_thread>
   11d8c:	89 c5                	mov    %eax,%ebp
   11d8e:	85 c0                	test   %eax,%eax
   11d90:	75 cd                	jne    11d5f <do_init_enclave+0x1f>
   11d92:	8b 15 94 60 00 00    	mov    0x6094(%rip),%edx        # 17e2c <EDMM_supported>
   11d98:	85 d2                	test   %edx,%edx
   11d9a:	0f 84 f0 00 00 00    	je     11e90 <do_init_enclave+0x150>
   11da0:	e8 cb 59 ff ff       	call   7770 <get_heap_min_size>
   11da5:	4c 8d 25 d4 15 00 00 	lea    0x15d4(%rip),%r12        # 13380 <g_global_data>
   11dac:	31 d2                	xor    %edx,%edx
   11dae:	48 89 c6             	mov    %rax,%rsi
   11db1:	48 89 c1             	mov    %rax,%rcx
   11db4:	49 8b 7c 24 10       	mov    0x10(%r12),%rdi
   11db9:	48 01 df             	add    %rbx,%rdi
   11dbc:	e8 bf ee ff ff       	call   10c80 <memset_s>
   11dc1:	48 8d 05 98 60 00 00 	lea    0x6098(%rip),%rax        # 17e60 <rsrv_mem_min_size>
   11dc8:	49 8b 7c 24 20       	mov    0x20(%r12),%rdi
   11dcd:	31 d2                	xor    %edx,%edx
   11dcf:	48 8b 30             	mov    (%rax),%rsi
   11dd2:	48 01 df             	add    %rbx,%rdi
   11dd5:	48 89 f1             	mov    %rsi,%rcx
   11dd8:	e8 a3 ee ff ff       	call   10c80 <memset_s>
   11ddd:	bf 02 00 00 00       	mov    $0x2,%edi
   11de2:	e8 2e 07 00 00       	call   12515 <set_enclave_state>
   11de7:	8b 05 3f 60 00 00    	mov    0x603f(%rip),%eax        # 17e2c <EDMM_supported>
   11ded:	85 c0                	test   %eax,%eax
   11def:	0f 84 6f ff ff ff    	je     11d64 <do_init_enclave+0x24>
   11df5:	41 8b 84 24 58 01 00 	mov    0x158(%r12),%eax
   11dfc:	00 
   11dfd:	49 8d ac 24 60 01 00 	lea    0x160(%r12),%rbp
   11e04:	00 
   11e05:	48 c1 e0 05          	shl    $0x5,%rax
   11e09:	48 01 e8             	add    %rbp,%rax
   11e0c:	48 39 c5             	cmp    %rax,%rbp
   11e0f:	72 10                	jb     11e21 <do_init_enclave+0xe1>
   11e11:	eb 15                	jmp    11e28 <do_init_enclave+0xe8>
   11e13:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   11e18:	48 83 c5 20          	add    $0x20,%rbp
   11e1c:	48 39 c5             	cmp    %rax,%rbp
   11e1f:	73 07                	jae    11e28 <do_init_enclave+0xe8>
   11e21:	66 83 7d 00 17       	cmpw   $0x17,0x0(%rbp)
   11e26:	75 f0                	jne    11e18 <do_init_enclave+0xd8>
   11e28:	48 39 e8             	cmp    %rbp,%rax
   11e2b:	0f 84 9f 00 00 00    	je     11ed0 <do_init_enclave+0x190>
   11e31:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
   11e35:	8b 75 04             	mov    0x4(%rbp),%esi
   11e38:	48 01 df             	add    %rbx,%rdi
   11e3b:	48 c1 e6 0c          	shl    $0xc,%rsi
   11e3f:	48 01 fe             	add    %rdi,%rsi
   11e42:	0f 82 17 ff ff ff    	jb     11d5f <do_init_enclave+0x1f>
   11e48:	e8 73 aa ff ff       	call   c8c0 <sgx_mm_init>
   11e4d:	85 c0                	test   %eax,%eax
   11e4f:	0f 85 0a ff ff ff    	jne    11d5f <do_init_enclave+0x1f>
   11e55:	49 8b bc 24 d8 06 00 	mov    0x6d8(%r12),%rdi
   11e5c:	00 
   11e5d:	e8 de 98 ff ff       	call   b740 <emalloc_init_with_reserved_mem>
   11e62:	85 c0                	test   %eax,%eax
   11e64:	0f 85 f5 fe ff ff    	jne    11d5f <do_init_enclave+0x1f>
   11e6a:	48 89 ea             	mov    %rbp,%rdx
   11e6d:	49 8d b4 24 60 01 00 	lea    0x160(%r12),%rsi
   11e74:	00 
   11e75:	48 89 df             	mov    %rbx,%rdi
   11e78:	31 ed                	xor    %ebp,%ebp
   11e7a:	e8 a1 3c ff ff       	call   5b20 <init_rts_emas>
   11e7f:	85 c0                	test   %eax,%eax
   11e81:	40 0f 95 c5          	setne  %bpl
   11e85:	e9 da fe ff ff       	jmp    11d64 <do_init_enclave+0x24>
   11e8a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   11e90:	4c 8d 25 e9 14 00 00 	lea    0x14e9(%rip),%r12        # 13380 <g_global_data>
   11e97:	31 d2                	xor    %edx,%edx
   11e99:	49 8b 4c 24 18       	mov    0x18(%r12),%rcx
   11e9e:	49 8b 74 24 18       	mov    0x18(%r12),%rsi
   11ea3:	49 8b 7c 24 10       	mov    0x10(%r12),%rdi
   11ea8:	48 01 df             	add    %rbx,%rdi
   11eab:	e8 d0 ed ff ff       	call   10c80 <memset_s>
   11eb0:	49 8b 4c 24 28       	mov    0x28(%r12),%rcx
   11eb5:	49 8b 74 24 28       	mov    0x28(%r12),%rsi
   11eba:	31 d2                	xor    %edx,%edx
   11ebc:	49 8b 7c 24 20       	mov    0x20(%r12),%rdi
   11ec1:	48 01 df             	add    %rbx,%rdi
   11ec4:	e8 b7 ed ff ff       	call   10c80 <memset_s>
   11ec9:	e9 0f ff ff ff       	jmp    11ddd <do_init_enclave+0x9d>
   11ece:	66 90                	xchg   %ax,%ax
   11ed0:	31 f6                	xor    %esi,%esi
   11ed2:	31 ff                	xor    %edi,%edi
   11ed4:	e9 6f ff ff ff       	jmp    11e48 <do_init_enclave+0x108>
   11ed9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000011ee0 <sgx_is_enclave_crashed>:
   11ee0:	f3 0f 1e fa          	endbr64 
   11ee4:	48 83 ec 08          	sub    $0x8,%rsp
   11ee8:	e8 17 06 00 00       	call   12504 <get_enclave_state>
   11eed:	83 f8 03             	cmp    $0x3,%eax
   11ef0:	0f 94 c0             	sete   %al
   11ef3:	48 83 c4 08          	add    $0x8,%rsp
   11ef7:	0f b6 c0             	movzbl %al,%eax
   11efa:	c3                   	ret    
   11efb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000011f00 <enter_enclave>:
   11f00:	f3 0f 1e fa          	endbr64 
   11f04:	41 55                	push   %r13
   11f06:	49 89 d5             	mov    %rdx,%r13
   11f09:	41 54                	push   %r12
   11f0b:	49 89 f4             	mov    %rsi,%r12
   11f0e:	55                   	push   %rbp
   11f0f:	89 cd                	mov    %ecx,%ebp
   11f11:	53                   	push   %rbx
   11f12:	89 fb                	mov    %edi,%ebx
   11f14:	48 83 ec 18          	sub    $0x18,%rsp
   11f18:	e8 c3 ff ff ff       	call   11ee0 <sgx_is_enclave_crashed>
   11f1d:	85 c0                	test   %eax,%eax
   11f1f:	75 67                	jne    11f88 <enter_enclave+0x88>
   11f21:	83 fb ff             	cmp    $0xffffffff,%ebx
   11f24:	75 2a                	jne    11f50 <enter_enclave+0x50>
   11f26:	85 ed                	test   %ebp,%ebp
   11f28:	75 34                	jne    11f5e <enter_enclave+0x5e>
   11f2a:	4c 89 ee             	mov    %r13,%rsi
   11f2d:	4c 89 e7             	mov    %r12,%rdi
   11f30:	e8 0b fe ff ff       	call   11d40 <do_init_enclave>
   11f35:	89 c3                	mov    %eax,%ebx
   11f37:	89 d8                	mov    %ebx,%eax
   11f39:	83 fb 01             	cmp    $0x1,%ebx
   11f3c:	74 29                	je     11f67 <enter_enclave+0x67>
   11f3e:	48 83 c4 18          	add    $0x18,%rsp
   11f42:	5b                   	pop    %rbx
   11f43:	5d                   	pop    %rbp
   11f44:	41 5c                	pop    %r12
   11f46:	41 5d                	pop    %r13
   11f48:	c3                   	ret    
   11f49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   11f50:	e8 af 05 00 00       	call   12504 <get_enclave_state>
   11f55:	83 f8 02             	cmp    $0x2,%eax
   11f58:	75 0d                	jne    11f67 <enter_enclave+0x67>
   11f5a:	85 ed                	test   %ebp,%ebp
   11f5c:	74 42                	je     11fa0 <enter_enclave+0xa0>
   11f5e:	83 fd 01             	cmp    $0x1,%ebp
   11f61:	0f 84 e9 00 00 00    	je     12050 <enter_enclave+0x150>
   11f67:	bf 03 00 00 00       	mov    $0x3,%edi
   11f6c:	e8 a4 05 00 00       	call   12515 <set_enclave_state>
   11f71:	b8 01 00 00 00       	mov    $0x1,%eax
   11f76:	48 83 c4 18          	add    $0x18,%rsp
   11f7a:	5b                   	pop    %rbx
   11f7b:	5d                   	pop    %rbp
   11f7c:	41 5c                	pop    %r12
   11f7e:	41 5d                	pop    %r13
   11f80:	c3                   	ret    
   11f81:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   11f88:	48 83 c4 18          	add    $0x18,%rsp
   11f8c:	b8 06 10 00 00       	mov    $0x1006,%eax
   11f91:	5b                   	pop    %rbx
   11f92:	5d                   	pop    %rbp
   11f93:	41 5c                	pop    %r12
   11f95:	41 5d                	pop    %r13
   11f97:	c3                   	ret    
   11f98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   11f9f:	00 
   11fa0:	85 db                	test   %ebx,%ebx
   11fa2:	79 2c                	jns    11fd0 <enter_enclave+0xd0>
   11fa4:	83 fb fa             	cmp    $0xfffffffa,%ebx
   11fa7:	74 27                	je     11fd0 <enter_enclave+0xd0>
   11fa9:	83 fb fe             	cmp    $0xfffffffe,%ebx
   11fac:	0f 84 ce 00 00 00    	je     12080 <enter_enclave+0x180>
   11fb2:	83 fb fc             	cmp    $0xfffffffc,%ebx
   11fb5:	0f 84 d5 00 00 00    	je     12090 <enter_enclave+0x190>
   11fbb:	83 fb fb             	cmp    $0xfffffffb,%ebx
   11fbe:	75 a7                	jne    11f67 <enter_enclave+0x67>
   11fc0:	4c 89 ef             	mov    %r13,%rdi
   11fc3:	e8 c8 54 ff ff       	call   7490 <do_uninit_enclave>
   11fc8:	89 c3                	mov    %eax,%ebx
   11fca:	e9 68 ff ff ff       	jmp    11f37 <enter_enclave+0x37>
   11fcf:	90                   	nop
   11fd0:	e8 6e 05 00 00       	call   12543 <get_thread_data>
   11fd5:	48 85 c0             	test   %rax,%rax
   11fd8:	0f 84 c2 00 00 00    	je     120a0 <enter_enclave+0x1a0>
   11fde:	48 8b 48 08          	mov    0x8(%rax),%rcx
   11fe2:	48 39 48 10          	cmp    %rcx,0x10(%rax)
   11fe6:	75 40                	jne    12028 <enter_enclave+0x128>
   11fe8:	48 8d 05 91 13 00 00 	lea    0x1391(%rip),%rax        # 13380 <g_global_data>
   11fef:	48 8b 50 38          	mov    0x38(%rax),%rdx
   11ff3:	48 85 d2             	test   %rdx,%rdx
   11ff6:	74 30                	je     12028 <enter_enclave+0x128>
   11ff8:	48 8b 68 50          	mov    0x50(%rax),%rbp
   11ffc:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   12001:	be 08 00 00 00       	mov    $0x8,%esi
   12006:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
   1200d:	00 00 
   1200f:	4c 01 ed             	add    %r13,%rbp
   12012:	e8 a9 40 ff ff       	call   60c0 <sgx_read_rand>
   12017:	85 c0                	test   %eax,%eax
   12019:	0f 85 8d 00 00 00    	jne    120ac <enter_enclave+0x1ac>
   1201f:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   12024:	48 89 45 28          	mov    %rax,0x28(%rbp)
   12028:	89 df                	mov    %ebx,%edi
   1202a:	4c 89 ea             	mov    %r13,%rdx
   1202d:	4c 89 e6             	mov    %r12,%rsi
   12030:	e8 1b 51 ff ff       	call   7150 <do_ecall>
   12035:	89 c3                	mov    %eax,%ebx
   12037:	89 d8                	mov    %ebx,%eax
   12039:	83 fb 01             	cmp    $0x1,%ebx
   1203c:	0f 85 fc fe ff ff    	jne    11f3e <enter_enclave+0x3e>
   12042:	e9 20 ff ff ff       	jmp    11f67 <enter_enclave+0x67>
   12047:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1204e:	00 00 
   12050:	4c 89 ef             	mov    %r13,%rdi
   12053:	e8 a8 60 ff ff       	call   8100 <trts_handle_exception>
   12058:	4c 89 ef             	mov    %r13,%rdi
   1205b:	89 c3                	mov    %eax,%ebx
   1205d:	e8 8e 41 ff ff       	call   61f0 <check_static_stack_canary>
   12062:	89 c2                	mov    %eax,%edx
   12064:	b8 09 10 00 00       	mov    $0x1009,%eax
   12069:	85 d2                	test   %edx,%edx
   1206b:	0f 85 05 ff ff ff    	jne    11f76 <enter_enclave+0x76>
   12071:	e9 c1 fe ff ff       	jmp    11f37 <enter_enclave+0x37>
   12076:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1207d:	00 00 00 
   12080:	4c 89 e7             	mov    %r12,%rdi
   12083:	e8 58 55 ff ff       	call   75e0 <do_oret>
   12088:	89 c3                	mov    %eax,%ebx
   1208a:	e9 a8 fe ff ff       	jmp    11f37 <enter_enclave+0x37>
   1208f:	90                   	nop
   12090:	4c 89 e7             	mov    %r12,%rdi
   12093:	e8 18 53 ff ff       	call   73b0 <do_ecall_add_thread>
   12098:	89 c3                	mov    %eax,%ebx
   1209a:	e9 98 fe ff ff       	jmp    11f37 <enter_enclave+0x37>
   1209f:	90                   	nop
   120a0:	48 8d 05 d9 12 00 00 	lea    0x12d9(%rip),%rax        # 13380 <g_global_data>
   120a7:	e9 4c ff ff ff       	jmp    11ff8 <enter_enclave+0xf8>
   120ac:	e8 86 08 00 00       	call   12937 <abort>

00000000000120b1 <restore_xregs>:
   120b1:	f3 0f 1e fa          	endbr64 
   120b5:	48 89 f9             	mov    %rdi,%rcx
   120b8:	48 8d 05 85 80 00 00 	lea    0x8085(%rip),%rax        # 1a144 <g_xsave_enabled>
   120bf:	8b 00                	mov    (%rax),%eax
   120c1:	83 f8 00             	cmp    $0x0,%eax
   120c4:	74 16                	je     120dc <restore_xregs+0x2b>
   120c6:	48 31 c0             	xor    %rax,%rax
   120c9:	48 31 d2             	xor    %rdx,%rdx
   120cc:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   120d1:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   120d6:	48 0f ae 29          	xrstor64 (%rcx)
   120da:	eb 04                	jmp    120e0 <restore_xregs+0x2f>
   120dc:	48 0f ae 09          	fxrstor64 (%rcx)
   120e0:	c3                   	ret    

00000000000120e1 <save_xregs>:
   120e1:	f3 0f 1e fa          	endbr64 
   120e5:	48 89 f9             	mov    %rdi,%rcx
   120e8:	48 8d 05 55 80 00 00 	lea    0x8055(%rip),%rax        # 1a144 <g_xsave_enabled>
   120ef:	9b                   	fwait
   120f0:	8b 00                	mov    (%rax),%eax
   120f2:	83 f8 00             	cmp    $0x0,%eax
   120f5:	74 16                	je     1210d <save_xregs+0x2c>
   120f7:	48 31 c0             	xor    %rax,%rax
   120fa:	48 31 d2             	xor    %rdx,%rdx
   120fd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   12102:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   12107:	48 0f c7 21          	xsavec64 (%rcx)
   1210b:	eb 04                	jmp    12111 <save_xregs+0x30>
   1210d:	48 0f ae 01          	fxsave64 (%rcx)
   12111:	c3                   	ret    

0000000000012112 <__x86_return_thunk>:
   12112:	c3                   	ret    

0000000000012113 <__x86_indirect_thunk_rax>:
   12113:	ff e0                	jmp    *%rax

0000000000012115 <__x86_indirect_thunk_rbx>:
   12115:	ff e3                	jmp    *%rbx

0000000000012117 <__x86_indirect_thunk_rcx>:
   12117:	ff e1                	jmp    *%rcx

0000000000012119 <__x86_indirect_thunk_rdx>:
   12119:	ff e2                	jmp    *%rdx

000000000001211b <__x86_indirect_thunk_rbp>:
   1211b:	ff e5                	jmp    *%rbp

000000000001211d <__x86_indirect_thunk_rsi>:
   1211d:	ff e6                	jmp    *%rsi

000000000001211f <__x86_indirect_thunk_rdi>:
   1211f:	ff e7                	jmp    *%rdi

0000000000012121 <__x86_indirect_thunk_r8>:
   12121:	41 ff e0             	jmp    *%r8

0000000000012124 <__x86_indirect_thunk_r9>:
   12124:	41 ff e1             	jmp    *%r9

0000000000012127 <__x86_indirect_thunk_r10>:
   12127:	41 ff e2             	jmp    *%r10

000000000001212a <__x86_indirect_thunk_r11>:
   1212a:	41 ff e3             	jmp    *%r11

000000000001212d <__x86_indirect_thunk_r12>:
   1212d:	41 ff e4             	jmp    *%r12

0000000000012130 <__x86_indirect_thunk_r13>:
   12130:	41 ff e5             	jmp    *%r13

0000000000012133 <__x86_indirect_thunk_r14>:
   12133:	41 ff e6             	jmp    *%r14

0000000000012136 <__x86_indirect_thunk_r15>:
   12136:	41 ff e7             	jmp    *%r15
   12139:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   12140:	00 00 00 
   12143:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1214a:	00 00 00 
   1214d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   12154:	00 00 00 
   12157:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1215e:	00 00 00 
   12161:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   12168:	00 00 00 
   1216b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   12172:	00 00 00 
   12175:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1217c:	00 00 00 
   1217f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   12186:	00 00 00 
   12189:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   12190:	00 00 00 
   12193:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1219a:	00 00 00 
   1219d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   121a4:	00 00 00 
   121a7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   121ae:	00 00 00 
   121b1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   121b8:	00 00 00 
   121bb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   121c2:	00 00 00 
   121c5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   121cc:	00 00 00 
   121cf:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   121d6:	00 00 00 
   121d9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   121e0:	00 00 00 
   121e3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   121ea:	00 00 00 
   121ed:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   121f4:	00 00 00 
   121f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   121fe:	00 00 

0000000000012200 <constant_time_apply_sgxstep_mitigation_and_continue_execution>:
   12200:	f3 0f 1e fa          	endbr64 
   12204:	48 8b 67 20          	mov    0x20(%rdi),%rsp
   12208:	48 8b 87 88 00 00 00 	mov    0x88(%rdi),%rax
   1220f:	49 89 c2             	mov    %rax,%r10
   12212:	80 38 c3             	cmpb   $0xc3,(%rax)
   12215:	48 0f 44 04 24       	cmove  (%rsp),%rax
   1221a:	48 89 e5             	mov    %rsp,%rbp
   1221d:	48 8d 5c 24 08       	lea    0x8(%rsp),%rbx
   12222:	48 0f 44 eb          	cmove  %rbx,%rbp
   12226:	48 8d 1d c3 02 00 00 	lea    0x2c3(%rip),%rbx        # 124f0 <__ct_mitigation_end>
   1222d:	48 29 c3             	sub    %rax,%rbx
   12230:	48 81 fb e6 00 00 00 	cmp    $0xe6,%rbx
   12237:	48 0f 42 e5          	cmovb  %rbp,%rsp
   1223b:	48 89 67 20          	mov    %rsp,0x20(%rdi)
   1223f:	4c 0f 42 94 24 78 ff 	cmovb  -0x88(%rsp),%r10
   12246:	ff ff 
   12248:	4c 89 94 24 78 ff ff 	mov    %r10,-0x88(%rsp)
   1224f:	ff 
   12250:	48 8b 87 80 00 00 00 	mov    0x80(%rdi),%rax
   12257:	48 89 84 24 38 ff ff 	mov    %rax,-0xc8(%rsp)
   1225e:	ff 
   1225f:	48 8b 44 24 f8       	mov    -0x8(%rsp),%rax
   12264:	48 0f 42 84 24 30 ff 	cmovb  -0xd0(%rsp),%rax
   1226b:	ff ff 
   1226d:	48 89 84 24 30 ff ff 	mov    %rax,-0xd0(%rsp)
   12274:	ff 
   12275:	48 89 b4 24 28 ff ff 	mov    %rsi,-0xd8(%rsp)
   1227c:	ff 
   1227d:	48 0f 42 94 24 20 ff 	cmovb  -0xe0(%rsp),%rdx
   12284:	ff ff 
   12286:	48 0f 42 8c 24 18 ff 	cmovb  -0xe8(%rsp),%rcx
   1228d:	ff ff 
   1228f:	4c 0f 42 84 24 10 ff 	cmovb  -0xf0(%rsp),%r8
   12296:	ff ff 
   12298:	4c 0f 42 8c 24 08 ff 	cmovb  -0xf8(%rsp),%r9
   1229f:	ff ff 
   122a1:	48 89 94 24 20 ff ff 	mov    %rdx,-0xe0(%rsp)
   122a8:	ff 
   122a9:	48 89 8c 24 18 ff ff 	mov    %rcx,-0xe8(%rsp)
   122b0:	ff 
   122b1:	4c 89 84 24 10 ff ff 	mov    %r8,-0xf0(%rsp)
   122b8:	ff 
   122b9:	4c 89 8c 24 08 ff ff 	mov    %r9,-0xf8(%rsp)
   122c0:	ff 
   122c1:	4c 8b 47 40          	mov    0x40(%rdi),%r8
   122c5:	4c 8b 4f 48          	mov    0x48(%rdi),%r9
   122c9:	4c 8b 57 50          	mov    0x50(%rdi),%r10
   122cd:	4c 8b 5f 58          	mov    0x58(%rdi),%r11
   122d1:	4c 8b 67 60          	mov    0x60(%rdi),%r12
   122d5:	4c 8b 6f 68          	mov    0x68(%rdi),%r13
   122d9:	4c 8b 77 70          	mov    0x70(%rdi),%r14
   122dd:	4c 8b 7f 78          	mov    0x78(%rdi),%r15
   122e1:	48 8b 07             	mov    (%rdi),%rax
   122e4:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
   122e8:	48 8b 57 10          	mov    0x10(%rdi),%rdx
   122ec:	48 8b 5f 18          	mov    0x18(%rdi),%rbx
   122f0:	48 8b 6f 28          	mov    0x28(%rdi),%rbp
   122f4:	48 8b 77 30          	mov    0x30(%rdi),%rsi
   122f8:	48 8b 7f 38          	mov    0x38(%rdi),%rdi
   122fc:	48 0f 42 84 24 70 ff 	cmovb  -0x90(%rsp),%rax
   12303:	ff ff 
   12305:	48 0f 42 8c 24 68 ff 	cmovb  -0x98(%rsp),%rcx
   1230c:	ff ff 
   1230e:	48 0f 42 94 24 60 ff 	cmovb  -0xa0(%rsp),%rdx
   12315:	ff ff 
   12317:	48 0f 42 9c 24 58 ff 	cmovb  -0xa8(%rsp),%rbx
   1231e:	ff ff 
   12320:	48 0f 42 ac 24 50 ff 	cmovb  -0xb0(%rsp),%rbp
   12327:	ff ff 
   12329:	48 0f 42 b4 24 48 ff 	cmovb  -0xb8(%rsp),%rsi
   12330:	ff ff 
   12332:	48 0f 42 bc 24 40 ff 	cmovb  -0xc0(%rsp),%rdi
   12339:	ff ff 
   1233b:	48 89 84 24 70 ff ff 	mov    %rax,-0x90(%rsp)
   12342:	ff 
   12343:	48 89 8c 24 68 ff ff 	mov    %rcx,-0x98(%rsp)
   1234a:	ff 
   1234b:	48 89 94 24 60 ff ff 	mov    %rdx,-0xa0(%rsp)
   12352:	ff 
   12353:	48 89 9c 24 58 ff ff 	mov    %rbx,-0xa8(%rsp)
   1235a:	ff 
   1235b:	48 89 ac 24 50 ff ff 	mov    %rbp,-0xb0(%rsp)
   12362:	ff 
   12363:	48 89 b4 24 48 ff ff 	mov    %rsi,-0xb8(%rsp)
   1236a:	ff 
   1236b:	48 89 bc 24 40 ff ff 	mov    %rdi,-0xc0(%rsp)
   12372:	ff 
   12373:	48 8b ac 24 20 ff ff 	mov    -0xe0(%rsp),%rbp
   1237a:	ff 
   1237b:	48 8b b4 24 18 ff ff 	mov    -0xe8(%rsp),%rsi
   12382:	ff 
   12383:	48 8b 94 24 10 ff ff 	mov    -0xf0(%rsp),%rdx
   1238a:	ff 
   1238b:	48 8b bc 24 08 ff ff 	mov    -0xf8(%rsp),%rdi
   12392:	ff 
   12393:	40 d0 ed             	shr    %bpl
   12396:	48 89 eb             	mov    %rbp,%rbx
   12399:	73 07                	jae    123a2 <.restore_flags>
   1239b:	48 81 eb 00 10 00 00 	sub    $0x1000,%rbx

00000000000123a2 <.restore_flags>:
   123a2:	48 8d 84 24 38 ff ff 	lea    -0xc8(%rsp),%rax
   123a9:	ff 
   123aa:	48 94                	xchg   %rax,%rsp
   123ac:	9d                   	popf   
   123ad:	48 94                	xchg   %rax,%rsp
   123af:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   123b6:	00 00 00 00 
   123ba:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   123c1:	00 00 00 00 
   123c5:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   123cc:	00 00 00 00 
   123d0:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   123d7:	00 00 00 00 
   123db:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   123e2:	00 00 00 00 
   123e6:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   123ed:	00 00 00 00 
   123f1:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   123f8:	00 00 00 00 
   123fc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000012400 <.ct_enable_aexnotify>:
   12400:	48 8b 84 24 28 ff ff 	mov    -0xd8(%rsp),%rax
   12407:	ff 
   12408:	c6 00 01             	movb   $0x1,(%rax)

000000000001240b <__ct_mitigation_begin>:
   1240b:	0f ae e8             	lfence 

000000000001240e <.ct_check_write>:
   1240e:	b9 3f 00 00 00       	mov    $0x3f,%ecx
   12413:	c4 e2 f1 f7 ce       	shlx   %rcx,%rsi,%rcx
   12418:	e3 08                	jrcxz  12422 <.ct_clear_low_bits_of_rdx>
   1241a:	48 8d 76 ff          	lea    -0x1(%rsi),%rsi
   1241e:	8a 02                	mov    (%rdx),%al
   12420:	88 02                	mov    %al,(%rdx)

0000000000012422 <.ct_clear_low_bits_of_rdx>:
   12422:	b9 0c 00 00 00       	mov    $0xc,%ecx
   12427:	c4 e2 f3 f7 d2       	shrx   %rcx,%rdx,%rdx
   1242c:	c4 e2 f1 f7 d2       	shlx   %rcx,%rdx,%rdx

0000000000012431 <.ct_check_execute>:
   12431:	ff d7                	call   *%rdi
   12433:	b9 00 10 00 00       	mov    $0x1000,%ecx
   12438:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1243f:	00 

0000000000012440 <.ct_warm_caches_and_tlbs>:
   12440:	67 8d 49 c0          	lea    -0x40(%ecx),%ecx
   12444:	8b 04 0e             	mov    (%rsi,%rcx,1),%eax
   12447:	8b 44 0d 00          	mov    0x0(%rbp,%rcx,1),%eax
   1244b:	8b 04 0b             	mov    (%rbx,%rcx,1),%eax
   1244e:	8b 04 0a             	mov    (%rdx,%rcx,1),%eax
   12451:	e3 02                	jrcxz  12455 <.ct_restore_state>
   12453:	eb eb                	jmp    12440 <.ct_warm_caches_and_tlbs>

0000000000012455 <.ct_restore_state>:
   12455:	40 0f b6 ce          	movzbl %sil,%ecx
   12459:	48 8b bc 24 30 ff ff 	mov    -0xd0(%rsp),%rdi
   12460:	ff 
   12461:	48 89 7c 24 f8       	mov    %rdi,-0x8(%rsp)
   12466:	48 8b bc 24 40 ff ff 	mov    -0xc0(%rsp),%rdi
   1246d:	ff 
   1246e:	48 8b b4 24 48 ff ff 	mov    -0xb8(%rsp),%rsi
   12475:	ff 
   12476:	48 8b ac 24 50 ff ff 	mov    -0xb0(%rsp),%rbp
   1247d:	ff 
   1247e:	48 8b 9c 24 58 ff ff 	mov    -0xa8(%rsp),%rbx
   12485:	ff 
   12486:	48 8b 94 24 60 ff ff 	mov    -0xa0(%rsp),%rdx
   1248d:	ff 
   1248e:	48 8b 84 24 70 ff ff 	mov    -0x90(%rsp),%rax
   12495:	ff 
   12496:	e3 50                	jrcxz  124e8 <.ct_restore_rcx>
   12498:	48 8d 24 24          	lea    (%rsp),%rsp
   1249c:	48 8d 24 24          	lea    (%rsp),%rsp
   124a0:	48 8d 24 24          	lea    (%rsp),%rsp
   124a4:	48 8d 24 24          	lea    (%rsp),%rsp
   124a8:	48 8d 24 24          	lea    (%rsp),%rsp
   124ac:	48 8d 24 24          	lea    (%rsp),%rsp
   124b0:	48 8d 24 24          	lea    (%rsp),%rsp
   124b4:	48 8d 24 24          	lea    (%rsp),%rsp
   124b8:	48 8d 24 24          	lea    (%rsp),%rsp
   124bc:	48 8d 24 24          	lea    (%rsp),%rsp
   124c0:	48 8d 24 24          	lea    (%rsp),%rsp
   124c4:	48 8d 24 24          	lea    (%rsp),%rsp
   124c8:	48 8d 24 24          	lea    (%rsp),%rsp
   124cc:	48 8d 24 24          	lea    (%rsp),%rsp
   124d0:	48 8d 24 24          	lea    (%rsp),%rsp
   124d4:	48 8d 24 24          	lea    (%rsp),%rsp
   124d8:	48 8d 24 24          	lea    (%rsp),%rsp
   124dc:	48 8d 24 24          	lea    (%rsp),%rsp
   124e0:	48 8d 24 24          	lea    (%rsp),%rsp
   124e4:	48 8d 24 24          	lea    (%rsp),%rsp

00000000000124e8 <.ct_restore_rcx>:
   124e8:	48 8b 8c 24 68 ff ff 	mov    -0x98(%rsp),%rcx
   124ef:	ff 

00000000000124f0 <__ct_mitigation_end>:
   124f0:	ff a4 24 78 ff ff ff 	jmp    *-0x88(%rsp)

00000000000124f7 <__ct_mitigation_ret>:
   124f7:	c3                   	ret    

00000000000124f8 <get_enclave_base>:
   124f8:	f3 0f 1e fa          	endbr64 
   124fc:	48 8d 05 fd da fe ff 	lea    -0x12503(%rip),%rax        # 0 <__ImageBase>
   12503:	c3                   	ret    

0000000000012504 <get_enclave_state>:
   12504:	f3 0f 1e fa          	endbr64 
   12508:	48 8d 0d 31 7c 00 00 	lea    0x7c31(%rip),%rcx        # 1a140 <g_enclave_state>
   1250f:	48 31 c0             	xor    %rax,%rax
   12512:	8b 01                	mov    (%rcx),%eax
   12514:	c3                   	ret    

0000000000012515 <set_enclave_state>:
   12515:	f3 0f 1e fa          	endbr64 
   12519:	48 8d 05 20 7c 00 00 	lea    0x7c20(%rip),%rax        # 1a140 <g_enclave_state>
   12520:	89 38                	mov    %edi,(%rax)
   12522:	c3                   	ret    

0000000000012523 <lock_enclave>:
   12523:	f3 0f 1e fa          	endbr64 
   12527:	48 8d 15 12 7c 00 00 	lea    0x7c12(%rip),%rdx        # 1a140 <g_enclave_state>
   1252e:	48 31 c0             	xor    %rax,%rax
   12531:	b8 00 00 00 00       	mov    $0x0,%eax
   12536:	48 31 c9             	xor    %rcx,%rcx
   12539:	b9 01 00 00 00       	mov    $0x1,%ecx
   1253e:	f0 0f b1 0a          	lock cmpxchg %ecx,(%rdx)
   12542:	c3                   	ret    

0000000000012543 <get_thread_data>:
   12543:	f3 0f 1e fa          	endbr64 
   12547:	65 48 8b 04 25 00 00 	mov    %gs:0x0,%rax
   1254e:	00 00 
   12550:	c3                   	ret    

0000000000012551 <get_stack_guard>:
   12551:	f3 0f 1e fa          	endbr64 
   12555:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
   1255c:	00 00 
   1255e:	c3                   	ret    

000000000001255f <enclave_entry>:
   1255f:	f3 0f 1e fa          	endbr64 
   12563:	48 31 d2             	xor    %rdx,%rdx
   12566:	48 01 d2             	add    %rdx,%rdx
   12569:	fc                   	cld    
   1256a:	4d 31 c0             	xor    %r8,%r8
   1256d:	4d 31 c9             	xor    %r9,%r9
   12570:	4d 31 d2             	xor    %r10,%r10
   12573:	4d 31 db             	xor    %r11,%r11
   12576:	4d 31 e4             	xor    %r12,%r12
   12579:	4d 31 ed             	xor    %r13,%r13
   1257c:	4d 31 f6             	xor    %r14,%r14
   1257f:	4d 31 ff             	xor    %r15,%r15
   12582:	48 83 f8 00          	cmp    $0x0,%rax
   12586:	0f 85 07 01 00 00    	jne    12693 <enclave_entry+0x134>
   1258c:	65 48 8b 04 25 08 00 	mov    %gs:0x8,%rax
   12593:	00 00 
   12595:	48 83 f8 00          	cmp    $0x0,%rax
   12599:	75 0f                	jne    125aa <enclave_entry+0x4b>
   1259b:	48 89 d8             	mov    %rbx,%rax
   1259e:	48 2d 00 00 01 00    	sub    $0x10000,%rax
   125a4:	48 2d 00 04 00 00    	sub    $0x400,%rax
   125aa:	48 94                	xchg   %rax,%rsp
   125ac:	51                   	push   %rcx
   125ad:	55                   	push   %rbp
   125ae:	48 89 e5             	mov    %rsp,%rbp
   125b1:	9c                   	pushf  
   125b2:	48 f7 14 24          	notq   (%rsp)
   125b6:	48 81 0c 24 00 00 04 	orq    $0x40000,(%rsp)
   125bd:	00 
   125be:	48 f7 14 24          	notq   (%rsp)
   125c2:	9d                   	popf   
   125c3:	48 83 ec 30          	sub    $0x30,%rsp
   125c7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   125cb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   125cf:	48 89 5d e0          	mov    %rbx,-0x20(%rbp)
   125d3:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
   125d7:	48 89 7d d0          	mov    %rdi,-0x30(%rbp)
   125db:	48 83 ec 20          	sub    $0x20,%rsp
   125df:	48 8d 3d 9a 14 00 00 	lea    0x149a(%rip),%rdi        # 13a80 <SYNTHETIC_STATE>
   125e6:	e8 c6 fa ff ff       	call   120b1 <restore_xregs>
   125eb:	0f ae e8             	lfence 
   125ee:	48 83 c4 20          	add    $0x20,%rsp
   125f2:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
   125f6:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
   125fa:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   125fe:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   12602:	e8 f9 f8 ff ff       	call   11f00 <enter_enclave>
   12607:	48 89 c3             	mov    %rax,%rbx
   1260a:	48 8d 3d 6f 14 00 00 	lea    0x146f(%rip),%rdi        # 13a80 <SYNTHETIC_STATE>
   12611:	e8 9b fa ff ff       	call   120b1 <restore_xregs>
   12616:	0f ae e8             	lfence 
   12619:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1261d:	48 83 f8 00          	cmp    $0x0,%rax
   12621:	75 2c                	jne    1264f <enclave_entry+0xf0>
   12623:	65 48 8b 04 25 00 00 	mov    %gs:0x0,%rax
   1262a:	00 00 
   1262c:	48 83 f8 00          	cmp    $0x0,%rax
   12630:	74 1d                	je     1264f <enclave_entry+0xf0>
   12632:	48 8b 50 20          	mov    0x20(%rax),%rdx
   12636:	8a 8a a7 00 00 00    	mov    0xa7(%rdx),%cl
   1263c:	80 f9 00             	cmp    $0x0,%cl
   1263f:	74 0e                	je     1264f <enclave_entry+0xf0>
   12641:	c6 82 a7 00 00 00 00 	movb   $0x0,0xa7(%rdx)
   12648:	c7 40 50 01 00 00 00 	movl   $0x1,0x50(%rax)
   1264f:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
   12656:	48 89 de             	mov    %rbx,%rsi
   12659:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1265d:	48 89 ec             	mov    %rbp,%rsp
   12660:	5d                   	pop    %rbp
   12661:	5b                   	pop    %rbx
   12662:	48 89 d4             	mov    %rdx,%rsp
   12665:	48 31 c9             	xor    %rcx,%rcx
   12668:	48 31 d2             	xor    %rdx,%rdx
   1266b:	4d 31 c0             	xor    %r8,%r8
   1266e:	4d 31 c9             	xor    %r9,%r9
   12671:	4d 31 d2             	xor    %r10,%r10
   12674:	4d 31 db             	xor    %r11,%r11
   12677:	4d 31 e4             	xor    %r12,%r12
   1267a:	4d 31 ed             	xor    %r13,%r13
   1267d:	4d 31 f6             	xor    %r14,%r14
   12680:	4d 31 ff             	xor    %r15,%r15
   12683:	48 01 d2             	add    %rdx,%rdx
   12686:	fc                   	cld    
   12687:	48 c7 c0 04 00 00 00 	mov    $0x4,%rax
   1268e:	0f 01 d7             	enclu  
   12691:	0f 0b                	ud2    
   12693:	48 89 c2             	mov    %rax,%rdx
   12696:	48 89 d8             	mov    %rbx,%rax
   12699:	48 2d 00 00 01 00    	sub    $0x10000,%rax
   1269f:	e9 06 ff ff ff       	jmp    125aa <enclave_entry+0x4b>
   126a4:	0f 0b                	ud2    

00000000000126a6 <do_ocall>:
   126a6:	f3 0f 1e fa          	endbr64 
   126aa:	55                   	push   %rbp
   126ab:	48 89 e5             	mov    %rsp,%rbp
   126ae:	48 89 7d 10          	mov    %rdi,0x10(%rbp)
   126b2:	48 89 75 18          	mov    %rsi,0x18(%rbp)
   126b6:	65 48 8b 04 25 38 00 	mov    %gs:0x38,%rax
   126bd:	00 00 
   126bf:	48 29 c4             	sub    %rax,%rsp
   126c2:	48 c7 c0 3f 00 00 00 	mov    $0x3f,%rax
   126c9:	48 f7 d0             	not    %rax
   126cc:	48 21 c4             	and    %rax,%rsp
   126cf:	48 89 e1             	mov    %rsp,%rcx
   126d2:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
   126d9:	48 89 8c 24 98 00 00 	mov    %rcx,0x98(%rsp)
   126e0:	00 
   126e1:	48 89 5c 24 70       	mov    %rbx,0x70(%rsp)
   126e6:	48 89 74 24 68       	mov    %rsi,0x68(%rsp)
   126eb:	48 89 7c 24 60       	mov    %rdi,0x60(%rsp)
   126f0:	48 89 6c 24 58       	mov    %rbp,0x58(%rsp)
   126f5:	4c 89 64 24 50       	mov    %r12,0x50(%rsp)
   126fa:	4c 89 6c 24 48       	mov    %r13,0x48(%rsp)
   126ff:	4c 89 74 24 40       	mov    %r14,0x40(%rsp)
   12704:	4c 89 7c 24 38       	mov    %r15,0x38(%rsp)
   12709:	48 8b bc 24 98 00 00 	mov    0x98(%rsp),%rdi
   12710:	00 
   12711:	65 48 8b 04 25 38 00 	mov    %gs:0x38,%rax
   12718:	00 00 
   1271a:	48 89 c1             	mov    %rax,%rcx
   1271d:	48 c1 e9 02          	shr    $0x2,%rcx
   12721:	48 31 c0             	xor    %rax,%rax
   12724:	fc                   	cld    
   12725:	f3 ab                	rep stos %eax,%es:(%rdi)
   12727:	48 8b bc 24 98 00 00 	mov    0x98(%rsp),%rdi
   1272e:	00 
   1272f:	48 89 3c 24          	mov    %rdi,(%rsp)
   12733:	e8 a9 f9 ff ff       	call   120e1 <save_xregs>
   12738:	48 8d 3d 41 13 00 00 	lea    0x1341(%rip),%rdi        # 13a80 <SYNTHETIC_STATE>
   1273f:	48 89 3c 24          	mov    %rdi,(%rsp)
   12743:	e8 69 f9 ff ff       	call   120b1 <restore_xregs>
   12748:	0f ae e8             	lfence 
   1274b:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
   12750:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   12755:	48 c7 c0 44 49 43 4f 	mov    $0x4f434944,%rax
   1275c:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   12761:	48 89 7c 24 28       	mov    %rdi,0x28(%rsp)
   12766:	65 48 8b 04 25 00 00 	mov    %gs:0x0,%rax
   1276d:	00 00 
   1276f:	48 89 c3             	mov    %rax,%rbx
   12772:	48 89 e7             	mov    %rsp,%rdi
   12775:	e8 26 4e ff ff       	call   75a0 <update_ocall_lastsp>
   1277a:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
   1277f:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   12784:	48 8b 53 20          	mov    0x20(%rbx),%rdx
   12788:	8a 8a a7 00 00 00    	mov    0xa7(%rdx),%cl
   1278e:	80 f9 00             	cmp    $0x0,%cl
   12791:	74 0e                	je     127a1 <do_ocall+0xfb>
   12793:	c6 82 a7 00 00 00 00 	movb   $0x0,0xa7(%rdx)
   1279a:	c7 43 50 01 00 00 00 	movl   $0x1,0x50(%rbx)
   127a1:	48 8b aa 98 00 00 00 	mov    0x98(%rdx),%rbp
   127a8:	48 8b a2 90 00 00 00 	mov    0x90(%rdx),%rsp
   127af:	48 8b 58 f8          	mov    -0x8(%rax),%rbx
   127b3:	48 c7 c0 04 00 00 00 	mov    $0x4,%rax
   127ba:	48 31 c9             	xor    %rcx,%rcx
   127bd:	48 31 d2             	xor    %rdx,%rdx
   127c0:	4d 31 c0             	xor    %r8,%r8
   127c3:	4d 31 c9             	xor    %r9,%r9
   127c6:	4d 31 d2             	xor    %r10,%r10
   127c9:	4d 31 db             	xor    %r11,%r11
   127cc:	4d 31 e4             	xor    %r12,%r12
   127cf:	4d 31 ed             	xor    %r13,%r13
   127d2:	4d 31 f6             	xor    %r14,%r14
   127d5:	4d 31 ff             	xor    %r15,%r15
   127d8:	48 01 d2             	add    %rdx,%rdx
   127db:	fc                   	cld    
   127dc:	0f 01 d7             	enclu  

00000000000127df <__morestack>:
   127df:	f3 0f 1e fa          	endbr64 
   127e3:	55                   	push   %rbp
   127e4:	48 89 e5             	mov    %rsp,%rbp
   127e7:	48 83 ec 20          	sub    $0x20,%rsp
   127eb:	e8 b6 fe ff ff       	call   126a6 <do_ocall>
   127f0:	c9                   	leave  
   127f1:	c3                   	ret    

00000000000127f2 <asm_oret>:
   127f2:	f3 0f 1e fa          	endbr64 
   127f6:	48 89 e3             	mov    %rsp,%rbx
   127f9:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   127fe:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   12803:	48 8b 63 08          	mov    0x8(%rbx),%rsp
   12807:	48 8b bc 24 98 00 00 	mov    0x98(%rsp),%rdi
   1280e:	00 
   1280f:	e8 9d f8 ff ff       	call   120b1 <restore_xregs>
   12814:	0f ae e8             	lfence 
   12817:	48 31 c0             	xor    %rax,%rax
   1281a:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
   1281f:	48 29 f9             	sub    %rdi,%rcx
   12822:	48 83 e9 08          	sub    $0x8,%rcx
   12826:	48 c1 e9 02          	shr    $0x2,%rcx
   1282a:	fc                   	cld    
   1282b:	f3 ab                	rep stos %eax,%es:(%rdi)
   1282d:	48 8b 43 10          	mov    0x10(%rbx),%rax
   12831:	4c 8b 7c 24 38       	mov    0x38(%rsp),%r15
   12836:	4c 8b 74 24 40       	mov    0x40(%rsp),%r14
   1283b:	4c 8b 6c 24 48       	mov    0x48(%rsp),%r13
   12840:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   12845:	48 8b 6c 24 58       	mov    0x58(%rsp),%rbp
   1284a:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
   1284f:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   12854:	48 8b 5c 24 70       	mov    0x70(%rsp),%rbx
   12859:	48 89 ec             	mov    %rbp,%rsp
   1285c:	5d                   	pop    %rbp
   1285d:	c3                   	ret    
   1285e:	0f 0b                	ud2    

0000000000012860 <do_egetkey>:
   12860:	f3 0f 1e fa          	endbr64 
   12864:	53                   	push   %rbx
   12865:	51                   	push   %rcx
   12866:	52                   	push   %rdx
   12867:	48 89 fb             	mov    %rdi,%rbx
   1286a:	48 89 f1             	mov    %rsi,%rcx
   1286d:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
   12874:	0f 01 d7             	enclu  
   12877:	74 03                	je     1287c <do_egetkey+0x1c>
   12879:	48 31 c0             	xor    %rax,%rax
   1287c:	5a                   	pop    %rdx
   1287d:	59                   	pop    %rcx
   1287e:	5b                   	pop    %rbx
   1287f:	c3                   	ret    

0000000000012880 <do_ereport>:
   12880:	f3 0f 1e fa          	endbr64 
   12884:	53                   	push   %rbx
   12885:	51                   	push   %rcx
   12886:	52                   	push   %rdx
   12887:	48 89 fb             	mov    %rdi,%rbx
   1288a:	48 89 f1             	mov    %rsi,%rcx
   1288d:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
   12894:	f8                   	clc    

0000000000012895 <Lereport_inst>:
   12895:	0f 01 d7             	enclu  
   12898:	0f 92 c0             	setb   %al
   1289b:	5a                   	pop    %rdx
   1289c:	59                   	pop    %rcx
   1289d:	5b                   	pop    %rbx
   1289e:	c3                   	ret    

000000000001289f <do_everifyreport2>:
   1289f:	f3 0f 1e fa          	endbr64 
   128a3:	53                   	push   %rbx
   128a4:	51                   	push   %rcx
   128a5:	52                   	push   %rdx
   128a6:	48 89 fb             	mov    %rdi,%rbx
   128a9:	48 89 f1             	mov    %rsi,%rcx
   128ac:	48 c7 c0 08 00 00 00 	mov    $0x8,%rax

00000000000128b3 <Leverifyreport2_inst>:
   128b3:	0f 01 d7             	enclu  
   128b6:	74 03                	je     128bb <Leverifyreport2_inst+0x8>
   128b8:	48 31 c0             	xor    %rax,%rax
   128bb:	5a                   	pop    %rdx
   128bc:	59                   	pop    %rcx
   128bd:	5b                   	pop    %rbx
   128be:	c3                   	ret    

00000000000128bf <do_eaccept>:
   128bf:	f3 0f 1e fa          	endbr64 
   128c3:	53                   	push   %rbx
   128c4:	51                   	push   %rcx
   128c5:	52                   	push   %rdx
   128c6:	48 89 fb             	mov    %rdi,%rbx
   128c9:	48 89 f1             	mov    %rsi,%rcx
   128cc:	b8 05 00 00 00       	mov    $0x5,%eax
   128d1:	0f 01 d7             	enclu  
   128d4:	83 f8 00             	cmp    $0x0,%eax
   128d7:	75 5e                	jne    12937 <abort>
   128d9:	5a                   	pop    %rdx
   128da:	59                   	pop    %rcx
   128db:	5b                   	pop    %rbx
   128dc:	c3                   	ret    

00000000000128dd <do_eacceptcopy>:
   128dd:	f3 0f 1e fa          	endbr64 
   128e1:	53                   	push   %rbx
   128e2:	51                   	push   %rcx
   128e3:	52                   	push   %rdx
   128e4:	48 89 fb             	mov    %rdi,%rbx
   128e7:	48 89 f1             	mov    %rsi,%rcx
   128ea:	b8 07 00 00 00       	mov    $0x7,%eax
   128ef:	0f 01 d7             	enclu  
   128f2:	83 f8 00             	cmp    $0x0,%eax
   128f5:	75 40                	jne    12937 <abort>
   128f7:	5a                   	pop    %rdx
   128f8:	59                   	pop    %rcx
   128f9:	5b                   	pop    %rbx
   128fa:	c3                   	ret    

00000000000128fb <do_emodpe>:
   128fb:	f3 0f 1e fa          	endbr64 
   128ff:	53                   	push   %rbx
   12900:	51                   	push   %rcx
   12901:	52                   	push   %rdx
   12902:	48 89 fb             	mov    %rdi,%rbx
   12905:	48 89 f1             	mov    %rsi,%rcx
   12908:	b8 06 00 00 00       	mov    $0x6,%eax
   1290d:	0f 01 d7             	enclu  
   12910:	5a                   	pop    %rdx
   12911:	59                   	pop    %rcx
   12912:	5b                   	pop    %rbx
   12913:	c3                   	ret    

0000000000012914 <do_rdrand>:
   12914:	f3 0f 1e fa          	endbr64 
   12918:	b9 0a 00 00 00       	mov    $0xa,%ecx
   1291d:	0f c7 f0             	rdrand %eax
   12920:	72 08                	jb     1292a <do_rdrand+0x16>
   12922:	ff c9                	dec    %ecx
   12924:	75 f7                	jne    1291d <do_rdrand+0x9>
   12926:	48 31 c0             	xor    %rax,%rax
   12929:	c3                   	ret    
   1292a:	48 89 f9             	mov    %rdi,%rcx
   1292d:	89 01                	mov    %eax,(%rcx)
   1292f:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
   12936:	c3                   	ret    

0000000000012937 <abort>:
   12937:	f3 0f 1e fa          	endbr64 
   1293b:	48 8d 05 fe 77 00 00 	lea    0x77fe(%rip),%rax        # 1a140 <g_enclave_state>
   12942:	c7 00 03 00 00 00    	movl   $0x3,(%rax)
   12948:	0f 0b                	ud2    

000000000001294a <continue_execution>:
   1294a:	f3 0f 1e fa          	endbr64 
   1294e:	48 89 f9             	mov    %rdi,%rcx
   12951:	48 8b 01             	mov    (%rcx),%rax
   12954:	50                   	push   %rax
   12955:	48 8b 41 08          	mov    0x8(%rcx),%rax
   12959:	50                   	push   %rax
   1295a:	48 8b 41 20          	mov    0x20(%rcx),%rax
   1295e:	48 2d 88 00 00 00    	sub    $0x88,%rax
   12964:	48 8b 51 10          	mov    0x10(%rcx),%rdx
   12968:	48 8b 59 18          	mov    0x18(%rcx),%rbx
   1296c:	48 8b 69 28          	mov    0x28(%rcx),%rbp
   12970:	48 8b 71 30          	mov    0x30(%rcx),%rsi
   12974:	48 8b 79 38          	mov    0x38(%rcx),%rdi
   12978:	4c 8b 41 40          	mov    0x40(%rcx),%r8
   1297c:	4c 8b 49 48          	mov    0x48(%rcx),%r9
   12980:	4c 8b 51 50          	mov    0x50(%rcx),%r10
   12984:	4c 8b 59 58          	mov    0x58(%rcx),%r11
   12988:	4c 8b 61 60          	mov    0x60(%rcx),%r12
   1298c:	4c 8b 69 68          	mov    0x68(%rcx),%r13
   12990:	4c 8b 71 70          	mov    0x70(%rcx),%r14
   12994:	4c 8b 79 78          	mov    0x78(%rcx),%r15
   12998:	ff b1 80 00 00 00    	push   0x80(%rcx)
   1299e:	9d                   	popf   
   1299f:	48 8b 89 88 00 00 00 	mov    0x88(%rcx),%rcx
   129a6:	48 89 08             	mov    %rcx,(%rax)
   129a9:	59                   	pop    %rcx
   129aa:	5c                   	pop    %rsp
   129ab:	48 94                	xchg   %rax,%rsp
   129ad:	c2 80 00             	ret    $0x80

00000000000129b0 <second_phase>:
   129b0:	f3 0f 1e fa          	endbr64 
   129b4:	48 89 f4             	mov    %rsi,%rsp
   129b7:	48 c7 c0 09 00 00 00 	mov    $0x9,%rax
   129be:	0f 01 d7             	enclu  
   129c1:	ff e2                	jmp    *%rdx

Disassembly of section .rodata:

0000000000013000 <g_dyn_entry_table-0x200>:
   13000:	5b                   	pop    %rbx
   13001:	45 6e                	rex.RB outsb %ds:(%rsi),(%dx)
   13003:	63 6c 61 76          	movsxd 0x76(%rcx,%riz,2),%ebp
   13007:	65 5d                	gs pop %rbp
   13009:	20 4d 61             	and    %cl,0x61(%rbp)
   1300c:	73 74                	jae    13082 <second_phase+0x6d2>
   1300e:	65 72 20             	gs jb  13031 <second_phase+0x681>
   13011:	70 61                	jo     13074 <second_phase+0x6c4>
   13013:	73 73                	jae    13088 <second_phase+0x6d8>
   13015:	77 6f                	ja     13086 <second_phase+0x6d6>
   13017:	72 64                	jb     1307d <second_phase+0x6cd>
   13019:	20 69 73             	and    %ch,0x73(%rcx)
   1301c:	20 61 6c             	and    %ah,0x6c(%rcx)
   1301f:	72 65                	jb     13086 <second_phase+0x6d6>
   13021:	61                   	(bad)  
   13022:	64 79 20             	fs jns 13045 <second_phase+0x695>
   13025:	73 65                	jae    1308c <second_phase+0x6dc>
   13027:	74 2e                	je     13057 <second_phase+0x6a7>
   13029:	20 49 6e             	and    %cl,0x6e(%rcx)
   1302c:	69 74 69 61 6c 69 7a 	imul   $0x617a696c,0x61(%rcx,%rbp,2),%esi
   13033:	61 
   13034:	74 69                	je     1309f <second_phase+0x6ef>
   13036:	6f                   	outsl  %ds:(%rsi),(%dx)
   13037:	6e                   	outsb  %ds:(%rsi),(%dx)
   13038:	20 64 65 6e          	and    %ah,0x6e(%rbp,%riz,2)
   1303c:	69 65 64 2e 00 5b 45 	imul   $0x455b002e,0x64(%rbp),%esp
   13043:	6e                   	outsb  %ds:(%rsi),(%dx)
   13044:	63 6c 61 76          	movsxd 0x76(%rcx,%riz,2),%ebp
   13048:	65 5d                	gs pop %rbp
   1304a:	20 4d 61             	and    %cl,0x61(%rbp)
   1304d:	73 74                	jae    130c3 <second_phase+0x713>
   1304f:	65 72 20             	gs jb  13072 <second_phase+0x6c2>
   13052:	70 61                	jo     130b5 <second_phase+0x705>
   13054:	73 73                	jae    130c9 <second_phase+0x719>
   13056:	77 6f                	ja     130c7 <second_phase+0x717>
   13058:	72 64                	jb     130be <second_phase+0x70e>
   1305a:	20 69 6e             	and    %ch,0x6e(%rcx)
   1305d:	69 74 69 61 6c 69 7a 	imul   $0x657a696c,0x61(%rcx,%rbp,2),%esi
   13064:	65 
   13065:	64 20 73 75          	and    %dh,%fs:0x75(%rbx)
   13069:	63 63 65             	movsxd 0x65(%rbx),%esp
   1306c:	73 73                	jae    130e1 <second_phase+0x731>
   1306e:	66 75 6c             	data16 jne 130dd <second_phase+0x72d>
   13071:	6c                   	insb   (%dx),%es:(%rdi)
   13072:	79 2e                	jns    130a2 <second_phase+0x6f2>
   13074:	00 5b 45             	add    %bl,0x45(%rbx)
   13077:	6e                   	outsb  %ds:(%rsi),(%dx)
   13078:	63 6c 61 76          	movsxd 0x76(%rcx,%riz,2),%ebp
   1307c:	65 5d                	gs pop %rbp
   1307e:	20 45 72             	and    %al,0x72(%rbp)
   13081:	72 6f                	jb     130f2 <second_phase+0x742>
   13083:	72 3a                	jb     130bf <second_phase+0x70f>
   13085:	20 4d 61             	and    %cl,0x61(%rbp)
   13088:	73 74                	jae    130fe <second_phase+0x74e>
   1308a:	65 72 20             	gs jb  130ad <second_phase+0x6fd>
   1308d:	70 61                	jo     130f0 <second_phase+0x740>
   1308f:	73 73                	jae    13104 <second_phase+0x754>
   13091:	77 6f                	ja     13102 <second_phase+0x752>
   13093:	72 64                	jb     130f9 <second_phase+0x749>
   13095:	20 69 6e             	and    %ch,0x6e(%rcx)
   13098:	63 6f 72             	movsxd 0x72(%rdi),%ebp
   1309b:	72 65                	jb     13102 <second_phase+0x752>
   1309d:	63 74 2e 20          	movsxd 0x20(%rsi,%rbp,1),%esi
   130a1:	41                   	rex.B
   130a2:	64 64 20 6f 70       	fs and %ch,%fs:0x70(%rdi)
   130a7:	65 72 61             	gs jb  1310b <second_phase+0x75b>
   130aa:	74 69                	je     13115 <second_phase+0x765>
   130ac:	6f                   	outsl  %ds:(%rsi),(%dx)
   130ad:	6e                   	outsb  %ds:(%rsi),(%dx)
   130ae:	20 64 65 6e          	and    %ah,0x6e(%rbp,%riz,2)
   130b2:	69 65 64 2e 00 73 75 	imul   $0x7573002e,0x64(%rbp),%esp
   130b9:	70 65                	jo     13120 <second_phase+0x770>
   130bb:	72 5f                	jb     1311c <second_phase+0x76c>
   130bd:	73 65                	jae    13124 <second_phase+0x774>
   130bf:	63 72 65             	movsxd 0x65(%rdx),%esi
   130c2:	74 00                	je     130c4 <second_phase+0x714>
   130c4:	52                   	push   %rdx
   130c5:	69 6b 6b 69 65 54 68 	imul   $0x68546569,0x6b(%rbx),%ebp
   130cc:	65 46 72 6f          	gs rex.RX jb 1313f <second_phase+0x78f>
   130d0:	67 00 53 74          	add    %dl,0x74(%ebx)
   130d4:	6f                   	outsl  %ds:(%rsi),(%dx)
   130d5:	72 65                	jb     1313c <second_phase+0x78c>
   130d7:	64 20 50 57          	and    %dl,%fs:0x57(%rax)
   130db:	20 31                	and    %dh,(%rcx)
   130dd:	00 53 61             	add    %dl,0x61(%rbx)
   130e0:	6d                   	insl   (%dx),%es:(%rdi)
   130e1:	6d                   	insl   (%dx),%es:(%rdi)
   130e2:	79 54                	jns    13138 <second_phase+0x788>
   130e4:	68 65 45 6c 65       	push   $0x656c4565
   130e9:	70 68                	jo     13153 <second_phase+0x7a3>
   130eb:	61                   	(bad)  
   130ec:	6e                   	outsb  %ds:(%rsi),(%dx)
   130ed:	74 00                	je     130ef <second_phase+0x73f>
   130ef:	53                   	push   %rbx
   130f0:	74 6f                	je     13161 <second_phase+0x7b1>
   130f2:	72 65                	jb     13159 <second_phase+0x7a9>
   130f4:	64 20 50 57          	and    %dl,%fs:0x57(%rax)
   130f8:	20 32                	and    %dh,(%rdx)
   130fa:	00 41 6c             	add    %al,0x6c(%rcx)
   130fd:	66 72 65             	data16 jb 13165 <second_phase+0x7b5>
   13100:	64 6f                	outsl  %fs:(%rsi),(%dx)
   13102:	54                   	push   %rsp
   13103:	68 65 53 68 65       	push   $0x65685365
   13108:	65 70 00             	gs jo  1310b <second_phase+0x75b>
   1310b:	53                   	push   %rbx
   1310c:	74 6f                	je     1317d <second_phase+0x7cd>
   1310e:	72 65                	jb     13175 <second_phase+0x7c5>
   13110:	64 20 50 57          	and    %dl,%fs:0x57(%rax)
   13114:	20 33                	and    %dh,(%rbx)
   13116:	00 5b 45             	add    %bl,0x45(%rbx)
   13119:	6e                   	outsb  %ds:(%rsi),(%dx)
   1311a:	63 6c 61 76          	movsxd 0x76(%rcx,%riz,2),%ebp
   1311e:	65 5d                	gs pop %rbp
   13120:	20 45 72             	and    %al,0x72(%rbp)
   13123:	72 6f                	jb     13194 <second_phase+0x7e4>
   13125:	72 3a                	jb     13161 <second_phase+0x7b1>
   13127:	20 4d 61             	and    %cl,0x61(%rbp)
   1312a:	73 74                	jae    131a0 <second_phase+0x7f0>
   1312c:	65 72 20             	gs jb  1314f <second_phase+0x79f>
   1312f:	70 61                	jo     13192 <second_phase+0x7e2>
   13131:	73 73                	jae    131a6 <second_phase+0x7f6>
   13133:	77 6f                	ja     131a4 <second_phase+0x7f4>
   13135:	72 64                	jb     1319b <second_phase+0x7eb>
   13137:	20 69 6e             	and    %ch,0x6e(%rcx)
   1313a:	63 6f 72             	movsxd 0x72(%rdi),%ebp
   1313d:	72 65                	jb     131a4 <second_phase+0x7f4>
   1313f:	63 74 2e 20          	movsxd 0x20(%rsi,%rbp,1),%esi
   13143:	52                   	push   %rdx
   13144:	65 74 72             	gs je  131b9 <second_phase+0x809>
   13147:	69 65 76 61 6c 20 64 	imul   $0x64206c61,0x76(%rbp),%esp
   1314e:	65 6e                	outsb  %gs:(%rsi),(%dx)
   13150:	69 65 64 2e 00 5b 45 	imul   $0x455b002e,0x64(%rbp),%esp
   13157:	6e                   	outsb  %ds:(%rsi),(%dx)
   13158:	63 6c 61 76          	movsxd 0x76(%rcx,%riz,2),%ebp
   1315c:	65 5d                	gs pop %rbp
   1315e:	20 45 72             	and    %al,0x72(%rbp)
   13161:	72 6f                	jb     131d2 <second_phase+0x822>
   13163:	72 3a                	jb     1319f <second_phase+0x7ef>
   13165:	20 4d 61             	and    %cl,0x61(%rbp)
   13168:	73 74                	jae    131de <second_phase+0x82e>
   1316a:	65 72 20             	gs jb  1318d <second_phase+0x7dd>
   1316d:	70 61                	jo     131d0 <second_phase+0x820>
   1316f:	73 73                	jae    131e4 <second_phase+0x834>
   13171:	77 6f                	ja     131e2 <second_phase+0x832>
   13173:	72 64                	jb     131d9 <second_phase+0x829>
   13175:	20 69 6e             	and    %ch,0x6e(%rcx)
   13178:	63 6f 72             	movsxd 0x72(%rdi),%ebp
   1317b:	72 65                	jb     131e2 <second_phase+0x832>
   1317d:	63 74 2e 20          	movsxd 0x20(%rsi,%rbp,1),%esi
   13181:	43 68 61 6e 67 65    	rex.XB push $0x65676e61
   13187:	20 64 65 6e          	and    %ah,0x6e(%rbp,%riz,2)
   1318b:	69 65 64 2e 00 5b 45 	imul   $0x455b002e,0x64(%rbp),%esp
   13192:	6e                   	outsb  %ds:(%rsi),(%dx)
   13193:	63 6c 61 76          	movsxd 0x76(%rcx,%riz,2),%ebp
   13197:	65 5d                	gs pop %rbp
   13199:	20 4d 61             	and    %cl,0x61(%rbp)
   1319c:	73 74                	jae    13212 <g_dyn_entry_table+0x12>
   1319e:	65 72 20             	gs jb  131c1 <second_phase+0x811>
   131a1:	70 61                	jo     13204 <g_dyn_entry_table+0x4>
   131a3:	73 73                	jae    13218 <g_dyn_entry_table+0x18>
   131a5:	77 6f                	ja     13216 <g_dyn_entry_table+0x16>
   131a7:	72 64                	jb     1320d <g_dyn_entry_table+0xd>
   131a9:	20 63 68             	and    %ah,0x68(%rbx)
   131ac:	61                   	(bad)  
   131ad:	6e                   	outsb  %ds:(%rsi),(%dx)
   131ae:	67 65 64 2e 00 5b 45 	gs fs add %bl,%fs:0x45(%ebx)
   131b5:	6e                   	outsb  %ds:(%rsi),(%dx)
   131b6:	63 6c 61 76          	movsxd 0x76(%rcx,%riz,2),%ebp
   131ba:	65 5d                	gs pop %rbp
   131bc:	20 45 72             	and    %al,0x72(%rbp)
   131bf:	72 6f                	jb     13230 <g_dyn_entry_table+0x30>
   131c1:	72 3a                	jb     131fd <second_phase+0x84d>
   131c3:	20 4d 61             	and    %cl,0x61(%rbp)
   131c6:	73 74                	jae    1323c <g_dyn_entry_table+0x3c>
   131c8:	65 72 20             	gs jb  131eb <second_phase+0x83b>
   131cb:	70 61                	jo     1322e <g_dyn_entry_table+0x2e>
   131cd:	73 73                	jae    13242 <g_dyn_entry_table+0x42>
   131cf:	77 6f                	ja     13240 <g_dyn_entry_table+0x40>
   131d1:	72 64                	jb     13237 <g_dyn_entry_table+0x37>
   131d3:	20 69 6e             	and    %ch,0x6e(%rcx)
   131d6:	63 6f 72             	movsxd 0x72(%rdi),%ebp
   131d9:	72 65                	jb     13240 <g_dyn_entry_table+0x40>
   131db:	63 74 2e 20          	movsxd 0x20(%rsi,%rbp,1),%esi
   131df:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
   131e1:	65 61                	gs (bad) 
   131e3:	72 20                	jb     13205 <g_dyn_entry_table+0x5>
   131e5:	6f                   	outsl  %ds:(%rsi),(%dx)
   131e6:	70 65                	jo     1324d <g_dyn_entry_table+0x4d>
   131e8:	72 61                	jb     1324b <g_dyn_entry_table+0x4b>
   131ea:	74 69                	je     13255 <g_dyn_entry_table+0x55>
   131ec:	6f                   	outsl  %ds:(%rsi),(%dx)
   131ed:	6e                   	outsb  %ds:(%rsi),(%dx)
   131ee:	20 64 65 6e          	and    %ah,0x6e(%rbp,%riz,2)
   131f2:	69 65 64 2e 00 00 00 	imul   $0x2e,0x64(%rbp),%esp
   131f9:	00 00                	add    %al,(%rax)
   131fb:	00 00                	add    %al,(%rax)
   131fd:	00 00                	add    %al,(%rax)
	...

0000000000013200 <g_dyn_entry_table>:
   13200:	01 00                	add    %eax,(%rax)
	...
   1320e:	00 00                	add    %al,(%rax)
   13210:	40                   	rex
   13211:	40                   	rex
   13212:	40                   	rex
   13213:	40                   	rex
   13214:	40                   	rex
   13215:	40                   	rex
   13216:	40                   	rex
   13217:	40 00 00             	rex add %al,(%rax)
   1321a:	00 00                	add    %al,(%rax)
   1321c:	00 00                	add    %al,(%rax)
   1321e:	00 00                	add    %al,(%rax)
   13220:	20 20                	and    %ah,(%rax)
   13222:	20 20                	and    %ah,(%rax)
   13224:	20 20                	and    %ah,(%rax)
   13226:	20 20                	and    %ah,(%rax)
	...
   13230:	30 30                	xor    %dh,(%rax)
   13232:	30 30                	xor    %dh,(%rax)
   13234:	30 30                	xor    %dh,(%rax)
   13236:	30 30                	xor    %dh,(%rax)
	...
   13240:	03 03                	add    (%rbx),%eax
   13242:	03 03                	add    (%rbx),%eax
   13244:	03 03                	add    (%rbx),%eax
   13246:	03 03                	add    (%rbx),%eax
	...
   13250:	01 01                	add    %eax,(%rcx)
   13252:	01 01                	add    %eax,(%rcx)
   13254:	01 01                	add    %eax,(%rcx)
   13256:	01 01                	add    %eax,(%rcx)
	...
   13260:	02 02                	add    (%rdx),%al
   13262:	02 02                	add    (%rdx),%al
   13264:	02 02                	add    (%rdx),%al
   13266:	02 02                	add    (%rdx),%al
	...
   13270:	20 00                	and    %al,(%rax)
   13272:	00 00                	add    %al,(%rax)
   13274:	00 00                	add    %al,(%rax)
   13276:	00 00                	add    %al,(%rax)
   13278:	e0 ff                	loopne 13279 <g_dyn_entry_table+0x79>
   1327a:	ff                   	(bad)  
   1327b:	ff                   	(bad)  
   1327c:	ff                   	(bad)  
   1327d:	ff                   	(bad)  
   1327e:	ff                   	(bad)  
   1327f:	ff 00                	incl   (%rax)
   13281:	10 00                	adc    %al,(%rax)
   13283:	00 00                	add    %al,(%rax)
   13285:	00 00                	add    %al,(%rax)
   13287:	00 00                	add    %al,(%rax)
   13289:	10 00                	adc    %al,(%rax)
   1328b:	00 00                	add    %al,(%rax)
   1328d:	00 00                	add    %al,(%rax)
   1328f:	00 ff                	add    %bh,%bh
   13291:	ff                   	(bad)  
   13292:	ff                   	(bad)  
   13293:	ff                   	(bad)  
   13294:	ff                   	(bad)  
   13295:	ff                   	(bad)  
   13296:	ff                   	(bad)  
   13297:	ff 00                	incl   (%rax)
   13299:	00 20                	add    %ah,(%rax)
   1329b:	00 00                	add    %al,(%rax)
   1329d:	00 00                	add    %al,(%rax)
   1329f:	00 b0 53 ff ff 80    	add    %dh,-0x7f0000ad(%rax)
   132a5:	53                   	push   %rbx
   132a6:	ff                   	(bad)  
   132a7:	ff 72 53             	push   0x53(%rdx)
   132aa:	ff                   	(bad)  
   132ab:	ff 72 53             	push   0x53(%rdx)
   132ae:	ff                   	(bad)  
   132af:	ff 72 53             	push   0x53(%rdx)
   132b2:	ff                   	(bad)  
   132b3:	ff 72 53             	push   0x53(%rdx)
   132b6:	ff                   	(bad)  
   132b7:	ff 80 53 ff ff 80    	incl   -0x7f0000ad(%rax)
   132bd:	53                   	push   %rbx
   132be:	ff                   	(bad)  
   132bf:	ff 10                	call   *(%rax)
   132c1:	54                   	push   %rsp
   132c2:	ff                   	(bad)  
   132c3:	ff 72 53             	push   0x53(%rdx)
   132c6:	ff                   	(bad)  
   132c7:	ff 72 53             	push   0x53(%rdx)
   132ca:	ff                   	(bad)  
   132cb:	ff 72 53             	push   0x53(%rdx)
   132ce:	ff                   	(bad)  
   132cf:	ff 72 53             	push   0x53(%rdx)
   132d2:	ff                   	(bad)  
   132d3:	ff 72 53             	push   0x53(%rdx)
   132d6:	ff                   	(bad)  
   132d7:	ff 72 53             	push   0x53(%rdx)
   132da:	ff                   	(bad)  
   132db:	ff 72 53             	push   0x53(%rdx)
   132de:	ff                   	(bad)  
   132df:	ff 00                	incl   (%rax)
   132e1:	54                   	push   %rsp
   132e2:	ff                   	(bad)  
   132e3:	ff d0                	call   *%rax
   132e5:	53                   	push   %rbx
   132e6:	ff                   	(bad)  
   132e7:	ff 00                	incl   (%rax)
   132e9:	53                   	push   %rbx
   132ea:	ff                   	(bad)  
   132eb:	ff 1c 55 ff ff 1c 55 	lcall  *0x551cffff(,%rdx,2)
   132f2:	ff                   	(bad)  
   132f3:	ff e4                	jmp    *%rsp
   132f5:	55                   	push   %rbp
   132f6:	ff                   	(bad)  
   132f7:	ff 1c 55 ff ff 1c 55 	lcall  *0x551cffff(,%rdx,2)
   132fe:	ff                   	(bad)  
   132ff:	ff 1c 55 ff ff 14 55 	lcall  *0x5514ffff(,%rdx,2)
   13306:	ff                   	(bad)  
   13307:	ff c4                	inc    %esp
   13309:	55                   	push   %rbp
   1330a:	ff                   	(bad)  
   1330b:	ff ac 55 ff ff 04 56 	ljmp   *0x5604ffff(%rbp,%rdx,2)
   13312:	ff                   	(bad)  
   13313:	ff 1c 55 ff ff 1c 55 	lcall  *0x551cffff(,%rdx,2)
   1331a:	ff                   	(bad)  
   1331b:	ff 1c 55 ff ff 1c 55 	lcall  *0x551cffff(,%rdx,2)
   13322:	ff                   	(bad)  
   13323:	ff 1c 55 ff ff 1c 55 	lcall  *0x551cffff(,%rdx,2)
   1332a:	ff                   	(bad)  
   1332b:	ff 1c 55 ff ff 1c 55 	lcall  *0x551cffff(,%rdx,2)
   13332:	ff                   	(bad)  
   13333:	ff 1c 55 ff ff 1c 55 	lcall  *0x551cffff(,%rdx,2)
   1333a:	ff                   	(bad)  
   1333b:	ff 1c 55 ff ff 1c 55 	lcall  *0x551cffff(,%rdx,2)
   13342:	ff                   	(bad)  
   13343:	ff 1c 55 ff ff 94 55 	lcall  *0x5594ffff(,%rdx,2)
   1334a:	ff                   	(bad)  
   1334b:	ff                   	.byte 0xff

Disassembly of section .niprod:

0000000000013380 <g_global_data>:
   13380:	64 00 17             	add    %dl,%fs:(%rdi)
   13383:	00 02                	add    %al,(%rdx)
   13385:	00 00                	add    %al,(%rax)
   13387:	00 01                	add    %al,(%rcx)
   13389:	00 00                	add    %al,(%rax)
   1338b:	00 00                	add    %al,(%rax)
   1338d:	00 00                	add    %al,(%rax)
   1338f:	00 02                	add    %al,(%rdx)
   13391:	00 00                	add    %al,(%rax)
   13393:	00 00                	add    %al,(%rax)
   13395:	00 00                	add    %al,(%rax)
   13397:	00 03                	add    %al,(%rbx)
   13399:	00 00                	add    %al,(%rax)
   1339b:	00 00                	add    %al,(%rax)
   1339d:	00 00                	add    %al,(%rax)
   1339f:	00 04 00             	add    %al,(%rax,%rax,1)
   133a2:	00 00                	add    %al,(%rax)
   133a4:	00 00                	add    %al,(%rax)
   133a6:	00 00                	add    %al,(%rax)
   133a8:	05 00 00 00 00       	add    $0x0,%eax
   133ad:	00 00                	add    %al,(%rax)
   133af:	00 06                	add    %al,(%rsi)
	...

0000000000013a80 <SYNTHETIC_STATE>:
   13a80:	7f 03                	jg     13a85 <SYNTHETIC_STATE+0x5>
	...
   13a96:	00 00                	add    %al,(%rax)
   13a98:	bf 1f 00 00 ff       	mov    $0xff00001f,%edi
   13a9d:	ff 00                	incl   (%rax)
	...
   13c7f:	00 02                	add    %al,(%rdx)
   13c81:	00 00                	add    %al,(%rax)
   13c83:	00 00                	add    %al,(%rax)
   13c85:	00 00                	add    %al,(%rax)
   13c87:	00 02                	add    %al,(%rdx)
   13c89:	00 00                	add    %al,(%rax)
   13c8b:	00 00                	add    %al,(%rax)
   13c8d:	00 00                	add    %al,(%rax)
   13c8f:	80 00 00             	addb   $0x0,(%rax)
	...

Disassembly of section .eh_frame_hdr:

0000000000013cc0 <__GNU_EH_FRAME_HDR>:
   13cc0:	01 1b                	add    %ebx,(%rbx)
   13cc2:	03 3b                	add    (%rbx),%edi
   13cc4:	5c                   	pop    %rsp
   13cc5:	08 00                	or     %al,(%rax)
   13cc7:	00 0a                	add    %cl,(%rdx)
   13cc9:	01 00                	add    %eax,(%rax)
   13ccb:	00 40 d3             	add    %al,-0x2d(%rax)
   13cce:	fe                   	(bad)  
   13ccf:	ff                   	(bad)  
   13cd0:	78 09                	js     13cdb <__GNU_EH_FRAME_HDR+0x1b>
   13cd2:	00 00                	add    %al,(%rax)
   13cd4:	50                   	push   %rax
   13cd5:	d3 fe                	sar    %cl,%esi
   13cd7:	ff a0 09 00 00 40    	jmp    *0x40000009(%rax)
   13cdd:	e3 fe                	jrcxz  13cdd <__GNU_EH_FRAME_HDR+0x1d>
   13cdf:	ff 30                	push   (%rax)
   13ce1:	0e                   	(bad)  
   13ce2:	00 00                	add    %al,(%rax)
   13ce4:	50                   	push   %rax
   13ce5:	e3 fe                	jrcxz  13ce5 <__GNU_EH_FRAME_HDR+0x25>
   13ce7:	ff 68 2e             	ljmp   *0x2e(%rax)
   13cea:	00 00                	add    %al,(%rax)
   13cec:	70 e3                	jo     13cd1 <__GNU_EH_FRAME_HDR+0x11>
   13cee:	fe                   	(bad)  
   13cef:	ff b0 30 00 00 90    	push   -0x6fffffd0(%rax)
   13cf5:	e3 fe                	jrcxz  13cf5 <__GNU_EH_FRAME_HDR+0x35>
   13cf7:	ff                   	(bad)  
   13cf8:	f8                   	clc    
   13cf9:	30 00                	xor    %al,(%rax)
   13cfb:	00 a3 e3 fe ff 78    	add    %ah,0x78fffee3(%rbx)
   13d01:	08 00                	or     %al,(%rax)
   13d03:	00 b9 e3 fe ff 94    	add    %bh,-0x6b00011d(%rcx)
   13d09:	08 00                	or     %al,(%rax)
   13d0b:	00 f1                	add    %dh,%cl
   13d0d:	e3 fe                	jrcxz  13d0d <__GNU_EH_FRAME_HDR+0x4d>
   13d0f:	ff ac 08 00 00 54 e4 	ljmp   *-0x1bac0000(%rax,%rcx,1)
   13d16:	fe                   	(bad)  
   13d17:	ff e0                	jmp    *%rax
   13d19:	08 00                	or     %al,(%rax)
   13d1b:	00 cf                	add    %cl,%bh
   13d1d:	e4 fe                	in     $0xfe,%al
   13d1f:	ff                   	(bad)  
   13d20:	fc                   	cld    
   13d21:	08 00                	or     %al,(%rax)
   13d23:	00 1f                	add    %bl,(%rdi)
   13d25:	e5 fe                	in     $0xfe,%eax
   13d27:	ff 30                	push   (%rax)
   13d29:	09 00                	or     %eax,(%rax)
   13d2b:	00 67 e5             	add    %ah,-0x1b(%rdi)
   13d2e:	fe                   	(bad)  
   13d2f:	ff 58 09             	lcall  *0x9(%rax)
   13d32:	00 00                	add    %al,(%rax)
   13d34:	46 03 ff             	rex.RX add %edi,%r15d
   13d37:	ff                   	(bad)  
   13d38:	b8 09 00 00 39       	mov    $0x39000009,%eax
   13d3d:	04 ff                	add    $0xff,%al
   13d3f:	ff f0                	push   %rax
   13d41:	09 00                	or     %eax,(%rax)
   13d43:	00 2c 05 ff ff 28 0a 	add    %ch,0xa28ffff(,%rax,1)
   13d4a:	00 00                	add    %al,(%rax)
   13d4c:	1f                   	(bad)  
   13d4d:	06                   	(bad)  
   13d4e:	ff                   	(bad)  
   13d4f:	ff 60 0a             	jmp    *0xa(%rax)
   13d52:	00 00                	add    %al,(%rax)
   13d54:	bd 07 ff ff a4       	mov    $0xa4ffff07,%ebp
   13d59:	0a 00                	or     (%rax),%al
   13d5b:	00 5b 09             	add    %bl,0x9(%rbx)
   13d5e:	ff                   	(bad)  
   13d5f:	ff                   	(bad)  
   13d60:	e8 0a 00 00 74       	call   74013d6f <_end+0x73fe8bdf>
   13d65:	09 ff                	or     %edi,%edi
   13d67:	ff 00                	incl   (%rax)
   13d69:	0b 00                	or     (%rax),%eax
   13d6b:	00 60 0a             	add    %ah,0xa(%rax)
   13d6e:	ff                   	(bad)  
   13d6f:	ff                   	(bad)  
   13d70:	38 0b                	cmp    %cl,(%rbx)
   13d72:	00 00                	add    %al,(%rax)
   13d74:	00 0b                	add    %cl,(%rbx)
   13d76:	ff                   	(bad)  
   13d77:	ff 4c 0b 00          	decl   0x0(%rbx,%rcx,1)
   13d7b:	00 50 1c             	add    %dl,0x1c(%rax)
   13d7e:	ff                   	(bad)  
   13d7f:	ff 80 0b 00 00 60    	incl   0x6000000b(%rax)
   13d85:	1e                   	(bad)  
   13d86:	ff                   	(bad)  
   13d87:	ff f0                	push   %rax
   13d89:	0b 00                	or     (%rax),%eax
   13d8b:	00 a0 1e ff ff 28    	add    %ah,0x28ffff1e(%rax)
   13d91:	0c 00                	or     $0x0,%al
   13d93:	00 30                	add    %dh,(%rax)
   13d95:	1f                   	(bad)  
   13d96:	ff                   	(bad)  
   13d97:	ff 74 0c 00          	push   0x0(%rsp,%rcx,1)
   13d9b:	00 c0                	add    %al,%al
   13d9d:	1f                   	(bad)  
   13d9e:	ff                   	(bad)  
   13d9f:	ff c0                	inc    %eax
   13da1:	0c 00                	or     $0x0,%al
   13da3:	00 f0                	add    %dh,%al
   13da5:	1f                   	(bad)  
   13da6:	ff                   	(bad)  
   13da7:	ff d4                	call   *%rsp
   13da9:	0c 00                	or     $0x0,%al
   13dab:	00 20                	add    %ah,(%rax)
   13dad:	20 ff                	and    %bh,%bh
   13daf:	ff                   	(bad)  
   13db0:	e8 0c 00 00 60       	call   60013dc1 <_end+0x5ffe8c31>
   13db5:	20 ff                	and    %bh,%bh
   13db7:	ff 00                	incl   (%rax)
   13db9:	0d 00 00 80 20       	or     $0x20800000,%eax
   13dbe:	ff                   	(bad)  
   13dbf:	ff 1c 0d 00 00 90 20 	lcall  *0x20900000(,%rcx,1)
   13dc6:	ff                   	(bad)  
   13dc7:	ff 30                	push   (%rax)
   13dc9:	0d 00 00 c0 20       	or     $0x20c00000,%eax
   13dce:	ff                   	(bad)  
   13dcf:	ff 58 0d             	lcall  *0xd(%rax)
   13dd2:	00 00                	add    %al,(%rax)
   13dd4:	e0 20                	loopne 13df6 <__GNU_EH_FRAME_HDR+0x136>
   13dd6:	ff                   	(bad)  
   13dd7:	ff                   	(bad)  
   13dd8:	d8 0d 00 00 00 22    	fmuls  0x22000000(%rip)        # 22013dde <_end+0x21fe8c4e>
   13dde:	ff                   	(bad)  
   13ddf:	ff 44 0e 00          	incl   0x0(%rsi,%rcx,1)
   13de3:	00 60 22             	add    %ah,0x22(%rax)
   13de6:	ff                   	(bad)  
   13de7:	ff 58 0e             	lcall  *0xe(%rax)
   13dea:	00 00                	add    %al,(%rax)
   13dec:	c0 22 ff             	shlb   $0xff,(%rdx)
   13def:	ff 6c 0e 00          	ljmp   *0x0(%rsi,%rcx,1)
   13df3:	00 a0 23 ff ff 8c    	add    %ah,-0x730000dd(%rax)
   13df9:	0e                   	(bad)  
   13dfa:	00 00                	add    %al,(%rax)
   13dfc:	00 24 ff             	add    %ah,(%rdi,%rdi,8)
   13dff:	ff a4 0e 00 00 30 25 	jmp    *0x25300000(%rsi,%rcx,1)
   13e06:	ff                   	(bad)  
   13e07:	ff e0                	jmp    *%rax
   13e09:	0e                   	(bad)  
   13e0a:	00 00                	add    %al,(%rax)
   13e0c:	50                   	push   %rax
   13e0d:	25 ff ff f4 0e       	and    $0xef4ffff,%eax
   13e12:	00 00                	add    %al,(%rax)
   13e14:	80 25 ff ff 10 0f 00 	andb   $0x0,0xf10ffff(%rip)        # f123e1a <_end+0xf0f8c8a>
   13e1b:	00 b0 25 ff ff 30    	add    %dh,0x30ffff25(%rax)
   13e21:	0f 00 00             	sldt   (%rax)
   13e24:	70 26                	jo     13e4c <__GNU_EH_FRAME_HDR+0x18c>
   13e26:	ff                   	(bad)  
   13e27:	ff 6c 0f 00          	ljmp   *0x0(%rdi,%rcx,1)
   13e2b:	00 50 28             	add    %dl,0x28(%rax)
   13e2e:	ff                   	(bad)  
   13e2f:	ff c4                	inc    %esp
   13e31:	0f 00 00             	sldt   (%rax)
   13e34:	b0 28                	mov    $0x28,%al
   13e36:	ff                   	(bad)  
   13e37:	ff                   	(bad)  
   13e38:	d8 0f                	fmuls  (%rdi)
   13e3a:	00 00                	add    %al,(%rax)
   13e3c:	10 29                	adc    %ch,(%rcx)
   13e3e:	ff                   	(bad)  
   13e3f:	ff f4                	push   %rsp
   13e41:	0f 00 00             	sldt   (%rax)
   13e44:	80 29 ff             	subb   $0xff,(%rcx)
   13e47:	ff 08                	decl   (%rax)
   13e49:	10 00                	adc    %al,(%rax)
   13e4b:	00 e0                	add    %ah,%al
   13e4d:	29 ff                	sub    %edi,%edi
   13e4f:	ff 1c 10             	lcall  *(%rax,%rdx,1)
   13e52:	00 00                	add    %al,(%rax)
   13e54:	a0 2b ff ff 60 10 00 	movabs 0x1060ffff2b,%al
   13e5b:	00 00 
   13e5d:	2c ff                	sub    $0xff,%al
   13e5f:	ff 94 10 00 00 d0 2c 	call   *0x2cd00000(%rax,%rdx,1)
   13e66:	ff                   	(bad)  
   13e67:	ff                   	(bad)  
   13e68:	d8 10                	fcoms  (%rax)
   13e6a:	00 00                	add    %al,(%rax)
   13e6c:	f0 2d ff ff 20 11    	lock sub $0x1120ffff,%eax
   13e72:	00 00                	add    %al,(%rax)
   13e74:	30 2e                	xor    %ch,(%rsi)
   13e76:	ff                   	(bad)  
   13e77:	ff 48 11             	decl   0x11(%rax)
   13e7a:	00 00                	add    %al,(%rax)
   13e7c:	40                   	rex
   13e7d:	2e ff                	cs (bad) 
   13e7f:	ff 5c 11 00          	lcall  *0x0(%rcx,%rdx,1)
   13e83:	00 10                	add    %dl,(%rax)
   13e85:	2f                   	(bad)  
   13e86:	ff                   	(bad)  
   13e87:	ff 88 11 00 00 f0    	decl   -0xfffffef(%rax)
   13e8d:	2f                   	(bad)  
   13e8e:	ff                   	(bad)  
   13e8f:	ff e0                	jmp    *%rax
   13e91:	11 00                	adc    %eax,(%rax)
   13e93:	00 b0 31 ff ff 40    	add    %dh,0x40ffff31(%rax)
   13e99:	12 00                	adc    (%rax),%al
   13e9b:	00 c0                	add    %al,%al
   13e9d:	31 ff                	xor    %edi,%edi
   13e9f:	ff 54 12 00          	call   *0x0(%rdx,%rdx,1)
   13ea3:	00 d0                	add    %dl,%al
   13ea5:	31 ff                	xor    %edi,%edi
   13ea7:	ff 68 12             	ljmp   *0x12(%rax)
   13eaa:	00 00                	add    %al,(%rax)
   13eac:	e0 31                	loopne 13edf <__GNU_EH_FRAME_HDR+0x21f>
   13eae:	ff                   	(bad)  
   13eaf:	ff                   	(bad)  
   13eb0:	7c 12                	jl     13ec4 <__GNU_EH_FRAME_HDR+0x204>
   13eb2:	00 00                	add    %al,(%rax)
   13eb4:	f0 31 ff             	lock xor %edi,%edi
   13eb7:	ff 90 12 00 00 00    	call   *0x12(%rax)
   13ebd:	32 ff                	xor    %bh,%bh
   13ebf:	ff a4 12 00 00 10 32 	jmp    *0x32100000(%rdx,%rdx,1)
   13ec6:	ff                   	(bad)  
   13ec7:	ff                   	(bad)  
   13ec8:	b8 12 00 00 20       	mov    $0x20000012,%eax
   13ecd:	32 ff                	xor    %bh,%bh
   13ecf:	ff cc                	dec    %esp
   13ed1:	12 00                	adc    (%rax),%al
   13ed3:	00 30                	add    %dh,(%rax)
   13ed5:	32 ff                	xor    %bh,%bh
   13ed7:	ff e0                	jmp    *%rax
   13ed9:	12 00                	adc    (%rax),%al
   13edb:	00 90 34 ff ff 2c    	add    %dl,0x2cffff34(%rax)
   13ee1:	13 00                	adc    (%rax),%eax
   13ee3:	00 f0                	add    %dh,%al
   13ee5:	36 ff                	ss (bad) 
   13ee7:	ff 50 13             	call   *0x13(%rax)
   13eea:	00 00                	add    %al,(%rax)
   13eec:	d0 37                	shlb   (%rdi)
   13eee:	ff                   	(bad)  
   13eef:	ff                   	(bad)  
   13ef0:	7c 13                	jl     13f05 <__GNU_EH_FRAME_HDR+0x245>
   13ef2:	00 00                	add    %al,(%rax)
   13ef4:	b0 38                	mov    $0x38,%al
   13ef6:	ff                   	(bad)  
   13ef7:	ff 18                	lcall  *(%rax)
   13ef9:	14 00                	adc    $0x0,%al
   13efb:	00 e0                	add    %ah,%al
   13efd:	38 ff                	cmp    %bh,%bh
   13eff:	ff 2c 14             	ljmp   *(%rsp,%rdx,1)
   13f02:	00 00                	add    %al,(%rax)
   13f04:	20 39                	and    %bh,(%rcx)
   13f06:	ff                   	(bad)  
   13f07:	ff 48 14             	decl   0x14(%rax)
   13f0a:	00 00                	add    %al,(%rax)
   13f0c:	e0 39                	loopne 13f47 <__GNU_EH_FRAME_HDR+0x287>
   13f0e:	ff                   	(bad)  
   13f0f:	ff                   	(bad)  
   13f10:	78 14                	js     13f26 <__GNU_EH_FRAME_HDR+0x266>
   13f12:	00 00                	add    %al,(%rax)
   13f14:	f0 39 ff             	lock cmp %edi,%edi
   13f17:	ff 8c 14 00 00 20 3a 	decl   0x3a200000(%rsp,%rdx,1)
   13f1e:	ff                   	(bad)  
   13f1f:	ff a4 14 00 00 40 3a 	jmp    *0x3a400000(%rsp,%rdx,1)
   13f26:	ff                   	(bad)  
   13f27:	ff                   	(bad)  
   13f28:	bc 14 00 00 b0       	mov    $0xb0000014,%esp
   13f2d:	3a ff                	cmp    %bh,%bh
   13f2f:	ff d0                	call   *%rax
   13f31:	14 00                	adc    $0x0,%al
   13f33:	00 10                	add    %dl,(%rax)
   13f35:	3b ff                	cmp    %edi,%edi
   13f37:	ff e4                	jmp    *%rsp
   13f39:	14 00                	adc    $0x0,%al
   13f3b:	00 30                	add    %dh,(%rax)
   13f3d:	3b ff                	cmp    %edi,%edi
   13f3f:	ff                   	(bad)  
   13f40:	fc                   	cld    
   13f41:	14 00                	adc    $0x0,%al
   13f43:	00 b0 3b ff ff 14    	add    %dh,0x14ffff3b(%rax)
   13f49:	15 00 00 20 3c       	adc    $0x3c200000,%eax
   13f4e:	ff                   	(bad)  
   13f4f:	ff 28                	ljmp   *(%rax)
   13f51:	15 00 00 80 3c       	adc    $0x3c800000,%eax
   13f56:	ff                   	(bad)  
   13f57:	ff                   	(bad)  
   13f58:	3c 15                	cmp    $0x15,%al
   13f5a:	00 00                	add    %al,(%rax)
   13f5c:	a0 3c ff ff 54 15 00 	movabs 0xf000001554ffff3c,%al
   13f63:	00 f0 
   13f65:	3c ff                	cmp    $0xff,%al
   13f67:	ff 68 15             	ljmp   *0x15(%rax)
   13f6a:	00 00                	add    %al,(%rax)
   13f6c:	30 3d ff ff 90 15    	xor    %bh,0x1590ffff(%rip)        # 15923f71 <_end+0x158f8de1>
   13f72:	00 00                	add    %al,(%rax)
   13f74:	60                   	(bad)  
   13f75:	3d ff ff ac 15       	cmp    $0x15acffff,%eax
   13f7a:	00 00                	add    %al,(%rax)
   13f7c:	90                   	nop
   13f7d:	3d ff ff c4 15       	cmp    $0x15c4ffff,%eax
   13f82:	00 00                	add    %al,(%rax)
   13f84:	c0 3d ff ff d8 15 00 	sarb   $0x0,0x15d8ffff(%rip)        # 15da3f8a <_end+0x15d78dfa>
   13f8b:	00 e0                	add    %ah,%al
   13f8d:	3d ff ff f0 15       	cmp    $0x15f0ffff,%eax
   13f92:	00 00                	add    %al,(%rax)
   13f94:	00 3e                	add    %bh,(%rsi)
   13f96:	ff                   	(bad)  
   13f97:	ff 04 16             	incl   (%rsi,%rdx,1)
   13f9a:	00 00                	add    %al,(%rax)
   13f9c:	20 3e                	and    %bh,(%rsi)
   13f9e:	ff                   	(bad)  
   13f9f:	ff 18                	lcall  *(%rax)
   13fa1:	16                   	(bad)  
   13fa2:	00 00                	add    %al,(%rax)
   13fa4:	50                   	push   %rax
   13fa5:	3e ff                	ds (bad) 
   13fa7:	ff                   	(bad)  
   13fa8:	38 16                	cmp    %dl,(%rsi)
   13faa:	00 00                	add    %al,(%rax)
   13fac:	40                   	rex
   13fad:	42 ff                	rex.X (bad) 
   13faf:	ff 5c 16 00          	lcall  *0x0(%rsi,%rdx,1)
   13fb3:	00 90 43 ff ff 98    	add    %dl,-0x670000bd(%rax)
   13fb9:	16                   	(bad)  
   13fba:	00 00                	add    %al,(%rax)
   13fbc:	40                   	rex
   13fbd:	44 ff                	rex.R (bad) 
   13fbf:	ff d4                	call   *%rsp
   13fc1:	16                   	(bad)  
   13fc2:	00 00                	add    %al,(%rax)
   13fc4:	f0 47 ff             	lock rex.RXB (bad) 
   13fc7:	ff 20                	jmp    *(%rax)
   13fc9:	17                   	(bad)  
   13fca:	00 00                	add    %al,(%rax)
   13fcc:	20 48 ff             	and    %cl,-0x1(%rax)
   13fcf:	ff                   	(bad)  
   13fd0:	38 17                	cmp    %dl,(%rdi)
   13fd2:	00 00                	add    %al,(%rax)
   13fd4:	90                   	nop
   13fd5:	48 ff                	rex.W (bad) 
   13fd7:	ff 4c 17 00          	decl   0x0(%rdi,%rdx,1)
   13fdb:	00 70 4a             	add    %dh,0x4a(%rax)
   13fde:	ff                   	(bad)  
   13fdf:	ff 84 17 00 00 a0 4c 	incl   0x4ca00000(%rdi,%rdx,1)
   13fe6:	ff                   	(bad)  
   13fe7:	ff 00                	incl   (%rax)
   13fe9:	18 00                	sbb    %al,(%rax)
   13feb:	00 40 4d             	add    %al,0x4d(%rax)
   13fee:	ff                   	(bad)  
   13fef:	ff 14 18             	call   *(%rax,%rbx,1)
   13ff2:	00 00                	add    %al,(%rax)
   13ff4:	30 4e ff             	xor    %cl,-0x1(%rsi)
   13ff7:	ff 28                	ljmp   *(%rax)
   13ff9:	18 00                	sbb    %al,(%rax)
   13ffb:	00 20                	add    %ah,(%rax)
   13ffd:	4f ff                	rex.WRXB (bad) 
   13fff:	ff                   	(bad)  
   14000:	3c 18                	cmp    $0x18,%al
   14002:	00 00                	add    %al,(%rax)
   14004:	00 51 ff             	add    %dl,-0x1(%rcx)
   14007:	ff 90 18 00 00 00    	call   *0x18(%rax)
   1400d:	52                   	push   %rdx
   1400e:	ff                   	(bad)  
   1400f:	ff e0                	jmp    *%rax
   14011:	18 00                	sbb    %al,(%rax)
   14013:	00 30                	add    %dh,(%rax)
   14015:	53                   	push   %rbx
   14016:	ff                   	(bad)  
   14017:	ff 1c 19             	lcall  *(%rcx,%rbx,1)
   1401a:	00 00                	add    %al,(%rax)
   1401c:	50                   	push   %rax
   1401d:	53                   	push   %rbx
   1401e:	ff                   	(bad)  
   1401f:	ff 30                	push   (%rax)
   14021:	19 00                	sbb    %eax,(%rax)
   14023:	00 f0                	add    %dh,%al
   14025:	53                   	push   %rbx
   14026:	ff                   	(bad)  
   14027:	ff 5c 19 00          	lcall  *0x0(%rcx,%rbx,1)
   1402b:	00 c0                	add    %al,%al
   1402d:	54                   	push   %rsp
   1402e:	ff                   	(bad)  
   1402f:	ff c8                	dec    %eax
   14031:	1a 00                	sbb    (%rax),%al
   14033:	00 e0                	add    %ah,%al
   14035:	54                   	push   %rsp
   14036:	ff                   	(bad)  
   14037:	ff 98 1b 00 00 60    	lcall  *0x6000001b(%rax)
   1403d:	55                   	push   %rbp
   1403e:	ff                   	(bad)  
   1403f:	ff c8                	dec    %eax
   14041:	1b 00                	sbb    (%rax),%eax
   14043:	00 90 55 ff ff e4    	add    %dl,-0x1b0000ab(%rax)
   14049:	1b 00                	sbb    (%rax),%eax
   1404b:	00 c0                	add    %al,%al
   1404d:	55                   	push   %rbp
   1404e:	ff                   	(bad)  
   1404f:	ff 00                	incl   (%rax)
   14051:	1c 00                	sbb    $0x0,%al
   14053:	00 e0                	add    %ah,%al
   14055:	55                   	push   %rbp
   14056:	ff                   	(bad)  
   14057:	ff 1c 1c             	lcall  *(%rsp,%rbx,1)
   1405a:	00 00                	add    %al,(%rax)
   1405c:	10 56 ff             	adc    %dl,-0x1(%rsi)
   1405f:	ff 30                	push   (%rax)
   14061:	1c 00                	sbb    $0x0,%al
   14063:	00 30                	add    %dh,(%rax)
   14065:	56                   	push   %rsi
   14066:	ff                   	(bad)  
   14067:	ff 44 1c 00          	incl   0x0(%rsp,%rbx,1)
   1406b:	00 f0                	add    %dh,%al
   1406d:	56                   	push   %rsi
   1406e:	ff                   	(bad)  
   1406f:	ff 58 1c             	lcall  *0x1c(%rax)
   14072:	00 00                	add    %al,(%rax)
   14074:	b0 57                	mov    $0x57,%al
   14076:	ff                   	(bad)  
   14077:	ff 6c 1c 00          	ljmp   *0x0(%rsp,%rbx,1)
   1407b:	00 d0                	add    %dl,%al
   1407d:	57                   	push   %rdi
   1407e:	ff                   	(bad)  
   1407f:	ff 80 1c 00 00 90    	incl   -0x6fffffe4(%rax)
   14085:	58                   	pop    %rax
   14086:	ff                   	(bad)  
   14087:	ff 94 1c 00 00 b0 58 	call   *0x58b00000(%rsp,%rbx,1)
   1408e:	ff                   	(bad)  
   1408f:	ff a8 1c 00 00 d0    	ljmp   *-0x2fffffe4(%rax)
   14095:	58                   	pop    %rax
   14096:	ff                   	(bad)  
   14097:	ff                   	(bad)  
   14098:	bc 1c 00 00 90       	mov    $0x9000001c,%esp
   1409d:	59                   	pop    %rcx
   1409e:	ff                   	(bad)  
   1409f:	ff d0                	call   *%rax
   140a1:	1c 00                	sbb    $0x0,%al
   140a3:	00 b0 59 ff ff e4    	add    %dh,-0x1b0000a7(%rax)
   140a9:	1c 00                	sbb    $0x0,%al
   140ab:	00 f0                	add    %dh,%al
   140ad:	59                   	pop    %rcx
   140ae:	ff                   	(bad)  
   140af:	ff 10                	call   *(%rax)
   140b1:	1d 00 00 30 5c       	sbb    $0x5c300000,%eax
   140b6:	ff                   	(bad)  
   140b7:	ff 60 1d             	jmp    *0x1d(%rax)
   140ba:	00 00                	add    %al,(%rax)
   140bc:	10 5e ff             	adc    %bl,-0x1(%rsi)
   140bf:	ff 90 1d 00 00 20    	call   *0x2000001d(%rax)
   140c5:	5e                   	pop    %rsi
   140c6:	ff                   	(bad)  
   140c7:	ff a4 1d 00 00 30 5e 	jmp    *0x5e300000(%rbp,%rbx,1)
   140ce:	ff                   	(bad)  
   140cf:	ff                   	(bad)  
   140d0:	b8 1d 00 00 50       	mov    $0x5000001d,%eax
   140d5:	5e                   	pop    %rsi
   140d6:	ff                   	(bad)  
   140d7:	ff cc                	dec    %esp
   140d9:	1d 00 00 90 5e       	sbb    $0x5e900000,%eax
   140de:	ff                   	(bad)  
   140df:	ff                   	(bad)  
   140e0:	ec                   	in     (%dx),%al
   140e1:	1d 00 00 d0 5e       	sbb    $0x5ed00000,%eax
   140e6:	ff                   	(bad)  
   140e7:	ff 0c 1e             	decl   (%rsi,%rbx,1)
   140ea:	00 00                	add    %al,(%rax)
   140ec:	50                   	push   %rax
   140ed:	5f                   	pop    %rdi
   140ee:	ff                   	(bad)  
   140ef:	ff 34 1e             	push   (%rsi,%rbx,1)
   140f2:	00 00                	add    %al,(%rax)
   140f4:	80 5f ff ff          	sbbb   $0xff,-0x1(%rdi)
   140f8:	48 1e                	rex.W (bad) 
   140fa:	00 00                	add    %al,(%rax)
   140fc:	b0 5f                	mov    $0x5f,%al
   140fe:	ff                   	(bad)  
   140ff:	ff 5c 1e 00          	lcall  *0x0(%rsi,%rbx,1)
   14103:	00 e0                	add    %ah,%al
   14105:	5f                   	pop    %rdi
   14106:	ff                   	(bad)  
   14107:	ff 70 1e             	push   0x1e(%rax)
   1410a:	00 00                	add    %al,(%rax)
   1410c:	10 60 ff             	adc    %ah,-0x1(%rax)
   1410f:	ff 84 1e 00 00 80 60 	incl   0x60800000(%rsi,%rbx,1)
   14116:	ff                   	(bad)  
   14117:	ff 98 1e 00 00 10    	lcall  *0x1000001e(%rax)
   1411d:	62                   	(bad)  
   1411e:	ff                   	(bad)  
   1411f:	ff                   	(bad)  
   14120:	dc 1e                	fcompl (%rsi)
   14122:	00 00                	add    %al,(%rax)
   14124:	d0 62 ff             	shlb   -0x1(%rdx)
   14127:	ff 10                	call   *(%rax)
   14129:	1f                   	(bad)  
   1412a:	00 00                	add    %al,(%rax)
   1412c:	e0 65                	loopne 14193 <__GNU_EH_FRAME_HDR+0x4d3>
   1412e:	ff                   	(bad)  
   1412f:	ff 74 1f 00          	push   0x0(%rdi,%rbx,1)
   14133:	00 c0                	add    %al,%al
   14135:	66 ff                	data16 (bad) 
   14137:	ff c4                	inc    %esp
   14139:	1f                   	(bad)  
   1413a:	00 00                	add    %al,(%rax)
   1413c:	d0 67 ff             	shlb   -0x1(%rdi)
   1413f:	ff                   	(bad)  
   14140:	e8 1f 00 00 20       	call   20014164 <_end+0x1ffe8fd4>
   14145:	68 ff ff 04 20       	push   $0x2004ffff
   1414a:	00 00                	add    %al,(%rax)
   1414c:	60                   	(bad)  
   1414d:	68 ff ff 2c 20       	push   $0x202cffff
   14152:	00 00                	add    %al,(%rax)
   14154:	40 69 ff ff 58 20 00 	rex imul $0x2058ff,%edi,%edi
   1415b:	00 30                	add    %dh,(%rax)
   1415d:	6a ff                	push   $0xffffffffffffffff
   1415f:	ff 84 20 00 00 00 6b 	incl   0x6b000000(%rax,%riz,1)
   14166:	ff                   	(bad)  
   14167:	ff e4                	jmp    *%rsp
   14169:	20 00                	and    %al,(%rax)
   1416b:	00 70 6c             	add    %dh,0x6c(%rax)
   1416e:	ff                   	(bad)  
   1416f:	ff 10                	call   *(%rax)
   14171:	21 00                	and    %eax,(%rax)
   14173:	00 b0 6e ff ff 40    	add    %dh,0x40ffff6e(%rax)
   14179:	21 00                	and    %eax,(%rax)
   1417b:	00 20                	add    %ah,(%rax)
   1417d:	6f                   	outsl  %ds:(%rsi),(%dx)
   1417e:	ff                   	(bad)  
   1417f:	ff 74 21 00          	push   0x0(%rcx,%riz,1)
   14183:	00 20                	add    %ah,(%rax)
   14185:	70 ff                	jo     14186 <__GNU_EH_FRAME_HDR+0x4c6>
   14187:	ff a8 21 00 00 70    	ljmp   *0x70000021(%rax)
   1418d:	70 ff                	jo     1418e <__GNU_EH_FRAME_HDR+0x4ce>
   1418f:	ff e0                	jmp    *%rax
   14191:	21 00                	and    %eax,(%rax)
   14193:	00 90 71 ff ff 58    	add    %dl,0x58ffff71(%rax)
   14199:	22 00                	and    (%rax),%al
   1419b:	00 a0 72 ff ff d4    	add    %ah,-0x2b00008e(%rax)
   141a1:	22 00                	and    (%rax),%al
   141a3:	00 90 73 ff ff 04    	add    %dl,0x4ffff73(%rax)
   141a9:	23 00                	and    (%rax),%eax
   141ab:	00 10                	add    %dl,(%rax)
   141ad:	75 ff                	jne    141ae <__GNU_EH_FRAME_HDR+0x4ee>
   141af:	ff 80 23 00 00 60    	incl   0x60000023(%rax)
   141b5:	76 ff                	jbe    141b6 <__GNU_EH_FRAME_HDR+0x4f6>
   141b7:	ff f0                	push   %rax
   141b9:	23 00                	and    (%rax),%eax
   141bb:	00 50 77             	add    %dl,0x77(%rax)
   141be:	ff                   	(bad)  
   141bf:	ff 30                	push   (%rax)
   141c1:	24 00                	and    $0x0,%al
   141c3:	00 90 78 ff ff 64    	add    %dl,0x64ffff78(%rax)
   141c9:	24 00                	and    $0x0,%al
   141cb:	00 10                	add    %dl,(%rax)
   141cd:	79 ff                	jns    141ce <__GNU_EH_FRAME_HDR+0x50e>
   141cf:	ff                   	(bad)  
   141d0:	78 24                	js     141f6 <__GNU_EH_FRAME_HDR+0x536>
   141d2:	00 00                	add    %al,(%rax)
   141d4:	90                   	nop
   141d5:	79 ff                	jns    141d6 <__GNU_EH_FRAME_HDR+0x516>
   141d7:	ff 8c 24 00 00 20 7a 	decl   0x7a200000(%rsp)
   141de:	ff                   	(bad)  
   141df:	ff a0 24 00 00 30    	jmp    *0x30000024(%rax)
   141e5:	7a ff                	jp     141e6 <__GNU_EH_FRAME_HDR+0x526>
   141e7:	ff b4 24 00 00 40 7a 	push   0x7a400000(%rsp)
   141ee:	ff                   	(bad)  
   141ef:	ff c8                	dec    %eax
   141f1:	24 00                	and    $0x0,%al
   141f3:	00 50 7a             	add    %dl,0x7a(%rax)
   141f6:	ff                   	(bad)  
   141f7:	ff                   	(bad)  
   141f8:	dc 24 00             	fsubl  (%rax,%rax,1)
   141fb:	00 60 7a             	add    %ah,0x7a(%rax)
   141fe:	ff                   	(bad)  
   141ff:	ff f0                	push   %rax
   14201:	24 00                	and    $0x0,%al
   14203:	00 80 7a ff ff 04    	add    %al,0x4ffff7a(%rax)
   14209:	25 00 00 c0 7a       	and    $0x7ac00000,%eax
   1420e:	ff                   	(bad)  
   1420f:	ff 24 25 00 00 f0 7c 	jmp    *0x7cf00000
   14216:	ff                   	(bad)  
   14217:	ff 58 25             	lcall  *0x25(%rax)
   1421a:	00 00                	add    %al,(%rax)
   1421c:	40 7d ff             	rex jge 1421e <__GNU_EH_FRAME_HDR+0x55e>
   1421f:	ff 6c 25 00          	ljmp   *0x0(%rbp,%riz,1)
   14223:	00 40 7f             	add    %al,0x7f(%rax)
   14226:	ff                   	(bad)  
   14227:	ff                   	(bad)  
   14228:	b8 25 00 00 40       	mov    $0x40000025,%eax
   1422d:	80 ff ff             	cmp    $0xff,%bh
   14230:	10 26                	adc    %ah,(%rsi)
   14232:	00 00                	add    %al,(%rax)
   14234:	60                   	(bad)  
   14235:	80 ff ff             	cmp    $0xff,%bh
   14238:	2c 26                	sub    $0x26,%al
   1423a:	00 00                	add    %al,(%rax)
   1423c:	70 80                	jo     141be <__GNU_EH_FRAME_HDR+0x4fe>
   1423e:	ff                   	(bad)  
   1423f:	ff 40 26             	incl   0x26(%rax)
   14242:	00 00                	add    %al,(%rax)
   14244:	80 80 ff ff 54 26 00 	addb   $0x0,0x2654ffff(%rax)
   1424b:	00 90 80 ff ff 68    	add    %dl,0x68ffff80(%rax)
   14251:	26 00 00             	es add %al,(%rax)
   14254:	a0 80 ff ff 7c 26 00 	movabs 0xb00000267cffff80,%al
   1425b:	00 b0 
   1425d:	80 ff ff             	cmp    $0xff,%bh
   14260:	90                   	nop
   14261:	26 00 00             	es add %al,(%rax)
   14264:	c0 80 ff ff a8 26 00 	rolb   $0x0,0x26a8ffff(%rax)
   1426b:	00 80 82 ff ff ec    	add    %al,-0x1300007e(%rax)
   14271:	26 00 00             	es add %al,(%rax)
   14274:	80 85 ff ff 5c 27 00 	addb   $0x0,0x275cffff(%rbp)
   1427b:	00 b0 85 ff ff 78    	add    %dh,0x78ffff85(%rax)
   14281:	27                   	(bad)  
   14282:	00 00                	add    %al,(%rax)
   14284:	70 86                	jo     1420c <__GNU_EH_FRAME_HDR+0x54c>
   14286:	ff                   	(bad)  
   14287:	ff b4 27 00 00 80 86 	push   -0x79800000(%rdi,%riz,1)
   1428e:	ff                   	(bad)  
   1428f:	ff c8                	dec    %eax
   14291:	27                   	(bad)  
   14292:	00 00                	add    %al,(%rax)
   14294:	40 87 ff             	rex xchg %edi,%edi
   14297:	ff 04 28             	incl   (%rax,%rbp,1)
   1429a:	00 00                	add    %al,(%rax)
   1429c:	50                   	push   %rax
   1429d:	87 ff                	xchg   %edi,%edi
   1429f:	ff 18                	lcall  *(%rax)
   142a1:	28 00                	sub    %al,(%rax)
   142a3:	00 10                	add    %dl,(%rax)
   142a5:	88 ff                	mov    %bh,%bh
   142a7:	ff 54 28 00          	call   *0x0(%rax,%rbp,1)
   142ab:	00 20                	add    %ah,(%rax)
   142ad:	88 ff                	mov    %bh,%bh
   142af:	ff 68 28             	ljmp   *0x28(%rax)
   142b2:	00 00                	add    %al,(%rax)
   142b4:	30 89 ff ff b4 28    	xor    %cl,0x28b4ffff(%rcx)
   142ba:	00 00                	add    %al,(%rax)
   142bc:	40 89 ff             	rex mov %edi,%edi
   142bf:	ff c8                	dec    %eax
   142c1:	28 00                	sub    %al,(%rax)
   142c3:	00 20                	add    %ah,(%rax)
   142c5:	8a ff                	mov    %bh,%bh
   142c7:	ff                   	(bad)  
   142c8:	fc                   	cld    
   142c9:	28 00                	sub    %al,(%rax)
   142cb:	00 00                	add    %al,(%rax)
   142cd:	8b ff                	mov    %edi,%edi
   142cf:	ff 28                	ljmp   *(%rax)
   142d1:	29 00                	sub    %eax,(%rax)
   142d3:	00 f0                	add    %dh,%al
   142d5:	8b ff                	mov    %edi,%edi
   142d7:	ff 6c 29 00          	ljmp   *0x0(%rcx,%rbp,1)
   142db:	00 00                	add    %al,(%rax)
   142dd:	8c ff                	mov    %?,%edi
   142df:	ff 80 29 00 00 80    	incl   -0x7fffffd7(%rax)
   142e5:	8c ff                	mov    %?,%edi
   142e7:	ff                   	(bad)  
   142e8:	b8 29 00 00 f0       	mov    $0xf0000029,%eax
   142ed:	8c ff                	mov    %?,%edi
   142ef:	ff cc                	dec    %esp
   142f1:	29 00                	sub    %eax,(%rax)
   142f3:	00 10                	add    %dl,(%rax)
   142f5:	8e ff                	mov    %edi,%?
   142f7:	ff                   	(bad)  
   142f8:	f8                   	clc    
   142f9:	29 00                	sub    %eax,(%rax)
   142fb:	00 a0 8e ff ff 14    	add    %ah,0x14ffff8e(%rax)
   14301:	2a 00                	sub    (%rax),%al
   14303:	00 b0 8e ff ff 28    	add    %dh,0x28ffff8e(%rax)
   14309:	2a 00                	sub    (%rax),%al
   1430b:	00 e0                	add    %ah,%al
   1430d:	96                   	xchg   %eax,%esi
   1430e:	ff                   	(bad)  
   1430f:	ff 64 2a 00          	jmp    *0x0(%rdx,%rbp,1)
   14313:	00 d0                	add    %dl,%al
   14315:	97                   	xchg   %eax,%edi
   14316:	ff                   	(bad)  
   14317:	ff 80 2a 00 00 20    	incl   0x2000002a(%rax)
   1431d:	b3 ff                	mov    $0xff,%bl
   1431f:	ff cc                	dec    %esp
   14321:	2a 00                	sub    (%rax),%al
   14323:	00 c0                	add    %al,%al
   14325:	b5 ff                	mov    $0xff,%ch
   14327:	ff 30                	push   (%rax)
   14329:	2b 00                	sub    (%rax),%eax
   1432b:	00 c0                	add    %al,%al
   1432d:	c0 ff ff             	sar    $0xff,%bh
   14330:	94                   	xchg   %eax,%esp
   14331:	2b 00                	sub    (%rax),%eax
   14333:	00 30                	add    %dh,(%rax)
   14335:	c1 ff ff             	sar    $0xff,%edi
   14338:	c0 2b 00             	shrb   $0x0,(%rbx)
   1433b:	00 40 c8             	add    %al,-0x38(%rax)
   1433e:	ff                   	(bad)  
   1433f:	ff 28                	ljmp   *(%rax)
   14341:	2c 00                	sub    $0x0,%al
   14343:	00 60 c8             	add    %ah,-0x38(%rax)
   14346:	ff                   	(bad)  
   14347:	ff                   	(bad)  
   14348:	3c 2c                	cmp    $0x2c,%al
   1434a:	00 00                	add    %al,(%rax)
   1434c:	f0 c8 ff ff 60       	lock enter $0xffff,$0x60
   14351:	2c 00                	sub    $0x0,%al
   14353:	00 b0 ca ff ff a0    	add    %dh,-0x5f000036(%rax)
   14359:	2c 00                	sub    $0x0,%al
   1435b:	00 80 cb ff ff b4    	add    %al,-0x4b000035(%rax)
   14361:	2c 00                	sub    $0x0,%al
   14363:	00 a0 cb ff ff c8    	add    %ah,-0x37000035(%rax)
   14369:	2c 00                	sub    $0x0,%al
   1436b:	00 60 cc             	add    %ah,-0x34(%rax)
   1436e:	ff                   	(bad)  
   1436f:	ff 04 2d 00 00 50 cd 	incl   -0x32b00000(,%rbp,1)
   14376:	ff                   	(bad)  
   14377:	ff 50 2d             	call   *0x2d(%rax)
   1437a:	00 00                	add    %al,(%rax)
   1437c:	70 cd                	jo     1434b <__GNU_EH_FRAME_HDR+0x68b>
   1437e:	ff                   	(bad)  
   1437f:	ff 64 2d 00          	jmp    *0x0(%rbp,%rbp,1)
   14383:	00 b0 ce ff ff c8    	add    %dh,-0x37000032(%rax)
   14389:	2d 00 00 b0 cf       	sub    $0xcfb00000,%eax
   1438e:	ff                   	(bad)  
   1438f:	ff 0c 2e             	decl   (%rsi,%rbp,1)
   14392:	00 00                	add    %al,(%rax)
   14394:	c0 cf ff             	ror    $0xff,%bh
   14397:	ff 20                	jmp    *(%rax)
   14399:	2e 00 00             	cs add %al,(%rax)
   1439c:	10 d0                	adc    %dl,%al
   1439e:	ff                   	(bad)  
   1439f:	ff 44 2e 00          	incl   0x0(%rsi,%rbp,1)
   143a3:	00 60 d0             	add    %ah,-0x30(%rax)
   143a6:	ff                   	(bad)  
   143a7:	ff                   	(bad)  
   143a8:	7c 2e                	jl     143d8 <__GNU_EH_FRAME_HDR+0x718>
   143aa:	00 00                	add    %al,(%rax)
   143ac:	70 d0                	jo     1437e <__GNU_EH_FRAME_HDR+0x6be>
   143ae:	ff                   	(bad)  
   143af:	ff 90 2e 00 00 80    	call   *-0x7fffffd2(%rax)
   143b5:	d0 ff                	sar    %bh
   143b7:	ff a8 2e 00 00 c0    	ljmp   *-0x3fffffd2(%rax)
   143bd:	d0 ff                	sar    %bh
   143bf:	ff c0                	inc    %eax
   143c1:	2e 00 00             	cs add %al,(%rax)
   143c4:	40 d1 ff             	rex sar %edi
   143c7:	ff                   	(bad)  
   143c8:	d8 2e                	fsubrs (%rsi)
   143ca:	00 00                	add    %al,(%rax)
   143cc:	50                   	push   %rax
   143cd:	d1 ff                	sar    %edi
   143cf:	ff f4                	push   %rsp
   143d1:	2e 00 00             	cs add %al,(%rax)
   143d4:	60                   	(bad)  
   143d5:	d1 ff                	sar    %edi
   143d7:	ff 10                	call   *(%rax)
   143d9:	2f                   	(bad)  
   143da:	00 00                	add    %al,(%rax)
   143dc:	80 d1 ff             	adc    $0xff,%cl
   143df:	ff 28                	ljmp   *(%rax)
   143e1:	2f                   	(bad)  
   143e2:	00 00                	add    %al,(%rax)
   143e4:	d0 d1                	rcl    %cl
   143e6:	ff                   	(bad)  
   143e7:	ff 4c 2f 00          	decl   0x0(%rdi,%rbp,1)
   143eb:	00 50 d2             	add    %dl,-0x2e(%rax)
   143ee:	ff                   	(bad)  
   143ef:	ff 90 2f 00 00 e0    	call   *-0x1fffffd1(%rax)
   143f5:	d2 ff                	sar    %cl,%bh
   143f7:	ff                   	(bad)  
   143f8:	d8 2f                	fsubrs (%rdi)
   143fa:	00 00                	add    %al,(%rax)
   143fc:	80 d3 ff             	adc    $0xff,%bl
   143ff:	ff 28                	ljmp   *(%rax)
   14401:	30 00                	xor    %al,(%rax)
   14403:	00 00                	add    %al,(%rax)
   14405:	d4                   	(bad)  
   14406:	ff                   	(bad)  
   14407:	ff 54 30 00          	call   *0x0(%rax,%rsi,1)
   1440b:	00 b0 d5 ff ff 80    	add    %dh,-0x7f00002b(%rax)
   14411:	30 00                	xor    %al,(%rax)
   14413:	00 10                	add    %dl,(%rax)
   14415:	d6                   	(bad)  
   14416:	ff                   	(bad)  
   14417:	ff 98 30 00 00 20    	lcall  *0x20000030(%rax)
   1441d:	d7                   	xlat   %ds:(%rbx)
   1441e:	ff                   	(bad)  
   1441f:	ff c4                	inc    %esp
   14421:	30 00                	xor    %al,(%rax)
   14423:	00 30                	add    %dh,(%rax)
   14425:	d7                   	xlat   %ds:(%rbx)
   14426:	ff                   	(bad)  
   14427:	ff                   	(bad)  
   14428:	d8 30                	fdivs  (%rax)
   1442a:	00 00                	add    %al,(%rax)
   1442c:	80 d9 ff             	sbb    $0xff,%cl
   1442f:	ff 0c 31             	decl   (%rcx,%rsi,1)
   14432:	00 00                	add    %al,(%rax)
   14434:	10 db                	adc    %bl,%bl
   14436:	ff                   	(bad)  
   14437:	ff                   	(bad)  
   14438:	3c 31                	cmp    $0x31,%al
   1443a:	00 00                	add    %al,(%rax)
   1443c:	40 dd ff             	rex (bad) 
   1443f:	ff 70 0d             	push   0xd(%rax)
   14442:	00 00                	add    %al,(%rax)
   14444:	80 e0 ff             	and    $0xff,%al
   14447:	ff a8 0d 00 00 20    	ljmp   *0x2000000d(%rax)
   1444d:	e2 ff                	loop   1444e <__GNU_EH_FRAME_HDR+0x78e>
   1444f:	ff 18                	lcall  *(%rax)
   14451:	0e                   	(bad)  
   14452:	00 00                	add    %al,(%rax)
   14454:	40 e2 ff             	rex loop 14456 <__GNU_EH_FRAME_HDR+0x796>
   14457:	ff                   	(bad)  
   14458:	b8 13 00 00 52       	mov    $0x52000013,%eax
   1445d:	e4 ff                	in     $0xff,%al
   1445f:	ff 88 19 00 00 53    	decl   0x53000019(%rax)
   14465:	e4 ff                	in     $0xff,%al
   14467:	ff 9c 19 00 00 55 e4 	lcall  *-0x1bab0000(%rcx,%rbx,1)
   1446e:	ff                   	(bad)  
   1446f:	ff b0 19 00 00 57    	push   0x57000019(%rax)
   14475:	e4 ff                	in     $0xff,%al
   14477:	ff c4                	inc    %esp
   14479:	19 00                	sbb    %eax,(%rax)
   1447b:	00 59 e4             	add    %bl,-0x1c(%rcx)
   1447e:	ff                   	(bad)  
   1447f:	ff                   	(bad)  
   14480:	d8 19                	fcomps (%rcx)
   14482:	00 00                	add    %al,(%rax)
   14484:	5b                   	pop    %rbx
   14485:	e4 ff                	in     $0xff,%al
   14487:	ff                   	(bad)  
   14488:	ec                   	in     (%dx),%al
   14489:	19 00                	sbb    %eax,(%rax)
   1448b:	00 5d e4             	add    %bl,-0x1c(%rbp)
   1448e:	ff                   	(bad)  
   1448f:	ff 00                	incl   (%rax)
   14491:	1a 00                	sbb    (%rax),%al
   14493:	00 5f e4             	add    %bl,-0x1c(%rdi)
   14496:	ff                   	(bad)  
   14497:	ff 14 1a             	call   *(%rdx,%rbx,1)
   1449a:	00 00                	add    %al,(%rax)
   1449c:	61                   	(bad)  
   1449d:	e4 ff                	in     $0xff,%al
   1449f:	ff 28                	ljmp   *(%rax)
   144a1:	1a 00                	sbb    (%rax),%al
   144a3:	00 64 e4 ff          	add    %ah,-0x1(%rsp,%riz,8)
   144a7:	ff                   	(bad)  
   144a8:	3c 1a                	cmp    $0x1a,%al
   144aa:	00 00                	add    %al,(%rax)
   144ac:	67 e4 ff             	addr32 in $0xff,%al
   144af:	ff 50 1a             	call   *0x1a(%rax)
   144b2:	00 00                	add    %al,(%rax)
   144b4:	6a e4                	push   $0xffffffffffffffe4
   144b6:	ff                   	(bad)  
   144b7:	ff 64 1a 00          	jmp    *0x0(%rdx,%rbx,1)
   144bb:	00 6d e4             	add    %ch,-0x1c(%rbp)
   144be:	ff                   	(bad)  
   144bf:	ff                   	(bad)  
   144c0:	78 1a                	js     144dc <__GNU_EH_FRAME_HDR+0x81c>
   144c2:	00 00                	add    %al,(%rax)
   144c4:	70 e4                	jo     144aa <__GNU_EH_FRAME_HDR+0x7ea>
   144c6:	ff                   	(bad)  
   144c7:	ff 8c 1a 00 00 73 e4 	decl   -0x1b8d0000(%rdx,%rbx,1)
   144ce:	ff                   	(bad)  
   144cf:	ff a0 1a 00 00 76    	jmp    *0x7600001a(%rax)
   144d5:	e4 ff                	in     $0xff,%al
   144d7:	ff b4 1a 00 00 a3 e8 	push   -0x175d0000(%rdx,%rbx,1)
   144de:	ff                   	(bad)  
   144df:	ff                   	(bad)  
   144e0:	e8 1a 00 00 23       	call   230144ff <_end+0x22fe936f>
   144e5:	eb ff                	jmp    144e6 <__GNU_EH_FRAME_HDR+0x826>
   144e7:	ff 04 1b             	incl   (%rbx,%rbx,1)
   144ea:	00 00                	add    %al,(%rax)
   144ec:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
   144ed:	eb ff                	jmp    144ee <__GNU_EH_FRAME_HDR+0x82e>
   144ef:	ff 20                	jmp    *(%rax)
   144f1:	1b 00                	sbb    (%rax),%eax
   144f3:	00 c4                	add    %al,%ah
   144f5:	eb ff                	jmp    144f6 <__GNU_EH_FRAME_HDR+0x836>
   144f7:	ff 34 1b             	push   (%rbx,%rbx,1)
   144fa:	00 00                	add    %al,(%rax)
   144fc:	e3 eb                	jrcxz  144e9 <__GNU_EH_FRAME_HDR+0x829>
   144fe:	ff                   	(bad)  
   144ff:	ff 48 1b             	decl   0x1b(%rax)
   14502:	00 00                	add    %al,(%rax)
   14504:	03 ec                	add    %esp,%ebp
   14506:	ff                   	(bad)  
   14507:	ff 5c 1b 00          	lcall  *0x0(%rbx,%rbx,1)
   1450b:	00 21                	add    %ah,(%rcx)
   1450d:	ec                   	in     (%dx),%al
   1450e:	ff                   	(bad)  
   1450f:	ff 70 1b             	push   0x1b(%rax)
   14512:	00 00                	add    %al,(%rax)
   14514:	3f                   	(bad)  
   14515:	ec                   	in     (%dx),%al
   14516:	ff                   	(bad)  
   14517:	ff                   	.byte 0xff
   14518:	84 1b                	test   %bl,(%rbx)
	...

Disassembly of section .eh_frame:

0000000000014520 <.eh_frame>:
   14520:	14 00                	adc    $0x0,%al
   14522:	00 00                	add    %al,(%rax)
   14524:	00 00                	add    %al,(%rax)
   14526:	00 00                	add    %al,(%rax)
   14528:	01 7a 52             	add    %edi,0x52(%rdx)
   1452b:	00 01                	add    %al,(%rcx)
   1452d:	78 10                	js     1453f <__GNU_EH_FRAME_HDR+0x87f>
   1452f:	01 1b                	add    %ebx,(%rbx)
   14531:	0c 07                	or     $0x7,%al
   14533:	08 90 01 00 00 18    	or     %dl,0x18000001(%rax)
   14539:	00 00                	add    %al,(%rax)
   1453b:	00 1c 00             	add    %bl,(%rax,%rax,1)
   1453e:	00 00                	add    %al,(%rax)
   14540:	23 db                	and    %ebx,%ebx
   14542:	fe                   	(bad)  
   14543:	ff 16                	call   *(%rsi)
   14545:	00 00                	add    %al,(%rax)
   14547:	00 00                	add    %al,(%rax)
   14549:	45 0e                	rex.RB (bad) 
   1454b:	10 83 02 4c 0e 08    	adc    %al,0x80e4c02(%rbx)
   14551:	00 00                	add    %al,(%rax)
   14553:	00 14 00             	add    %dl,(%rax,%rax,1)
   14556:	00 00                	add    %al,(%rax)
   14558:	38 00                	cmp    %al,(%rax)
   1455a:	00 00                	add    %al,(%rax)
   1455c:	1d db fe ff 38       	sbb    $0x38fffedb,%eax
   14561:	00 00                	add    %al,(%rax)
   14563:	00 00                	add    %al,(%rax)
   14565:	57                   	push   %rdi
   14566:	0e                   	(bad)  
   14567:	10 5c 0e 08          	adc    %bl,0x8(%rsi,%rcx,1)
   1456b:	00 30                	add    %dh,(%rax)
   1456d:	00 00                	add    %al,(%rax)
   1456f:	00 50 00             	add    %dl,0x0(%rax)
   14572:	00 00                	add    %al,(%rax)
   14574:	3d db fe ff 63       	cmp    $0x63fffedb,%eax
   14579:	00 00                	add    %al,(%rax)
   1457b:	00 00                	add    %al,(%rax)
   1457d:	45 0e                	rex.RB (bad) 
   1457f:	10 86 02 50 0e 18    	adc    %al,0x180e5002(%rsi)
   14585:	83 03 41             	addl   $0x41,(%rbx)
   14588:	0e                   	(bad)  
   14589:	20 4a 0a             	and    %cl,0xa(%rdx)
   1458c:	0e                   	(bad)  
   1458d:	18 48 0e             	sbb    %cl,0xe(%rax)
   14590:	10 41 0e             	adc    %al,0xe(%rcx)
   14593:	08 45 0b             	or     %al,0xb(%rbp)
   14596:	72 0e                	jb     145a6 <__GNU_EH_FRAME_HDR+0x8e6>
   14598:	18 41 0e             	sbb    %al,0xe(%rcx)
   1459b:	10 41 0e             	adc    %al,0xe(%rcx)
   1459e:	08 00                	or     %al,(%rax)
   145a0:	18 00                	sbb    %al,(%rax)
   145a2:	00 00                	add    %al,(%rax)
   145a4:	84 00                	test   %al,(%rax)
   145a6:	00 00                	add    %al,(%rax)
   145a8:	6c                   	insb   (%dx),%es:(%rdi)
   145a9:	db fe                	(bad)  
   145ab:	ff                   	(bad)  
   145ac:	7b 00                	jnp    145ae <__GNU_EH_FRAME_HDR+0x8ee>
   145ae:	00 00                	add    %al,(%rax)
   145b0:	00 45 0e             	add    %al,0xe(%rbp)
   145b3:	10 83 02 02 71 0e    	adc    %al,0xe710202(%rbx)
   145b9:	08 00                	or     %al,(%rax)
   145bb:	00 30                	add    %dh,(%rax)
   145bd:	00 00                	add    %al,(%rax)
   145bf:	00 a0 00 00 00 cb    	add    %ah,-0x35000000(%rax)
   145c5:	db fe                	(bad)  
   145c7:	ff 50 00             	call   *0x0(%rax)
   145ca:	00 00                	add    %al,(%rax)
   145cc:	00 45 0e             	add    %al,0xe(%rbp)
   145cf:	10 86 02 54 0e 18    	adc    %al,0x180e5402(%rsi)
   145d5:	83 03 41             	addl   $0x41,(%rbx)
   145d8:	0e                   	(bad)  
   145d9:	20 4c 0a 0e          	and    %cl,0xe(%rdx,%rcx,1)
   145dd:	18 48 0e             	sbb    %cl,0xe(%rax)
   145e0:	10 41 0e             	adc    %al,0xe(%rcx)
   145e3:	08 45 0b             	or     %al,0xb(%rbp)
   145e6:	59                   	pop    %rcx
   145e7:	0e                   	(bad)  
   145e8:	18 41 0e             	sbb    %al,0xe(%rcx)
   145eb:	10 41 0e             	adc    %al,0xe(%rcx)
   145ee:	08 00                	or     %al,(%rax)
   145f0:	24 00                	and    $0x0,%al
   145f2:	00 00                	add    %al,(%rax)
   145f4:	d4                   	(bad)  
   145f5:	00 00                	add    %al,(%rax)
   145f7:	00 e7                	add    %ah,%bh
   145f9:	db fe                	(bad)  
   145fb:	ff 48 00             	decl   0x0(%rax)
   145fe:	00 00                	add    %al,(%rax)
   14600:	00 45 0e             	add    %al,0xe(%rbp)
   14603:	10 86 02 48 0e 18    	adc    %al,0x180e4802(%rsi)
   14609:	83 03 47             	addl   $0x47,(%rbx)
   1460c:	0e                   	(bad)  
   1460d:	20 6d 0e             	and    %ch,0xe(%rbp)
   14610:	18 41 0e             	sbb    %al,0xe(%rcx)
   14613:	10 41 0e             	adc    %al,0xe(%rcx)
   14616:	08 00                	or     %al,(%rax)
   14618:	1c 00                	sbb    $0x0,%al
   1461a:	00 00                	add    %al,(%rax)
   1461c:	fc                   	cld    
   1461d:	00 00                	add    %al,(%rax)
   1461f:	00 07                	add    %al,(%rdi)
   14621:	dc fe                	fdivr  %st,%st(6)
   14623:	ff 61 00             	jmp    *0x0(%rcx)
   14626:	00 00                	add    %al,(%rax)
   14628:	00 45 0e             	add    %al,0xe(%rbp)
   1462b:	10 83 02 60 0a 0e    	adc    %al,0xe0a6002(%rbx)
   14631:	08 45 0b             	or     %al,0xb(%rbp)
   14634:	70 0e                	jo     14644 <__GNU_EH_FRAME_HDR+0x984>
   14636:	08 00                	or     %al,(%rax)
   14638:	24 00                	and    $0x0,%al
   1463a:	00 00                	add    %al,(%rax)
   1463c:	1c 01                	sbb    $0x1,%al
   1463e:	00 00                	add    %al,(%rax)
   14640:	c0 c9 fe             	ror    $0xfe,%cl
   14643:	ff 10                	call   *(%rax)
   14645:	00 00                	add    %al,(%rax)
   14647:	00 00                	add    %al,(%rax)
   14649:	0e                   	(bad)  
   1464a:	10 46 0e             	adc    %al,0xe(%rsi)
   1464d:	18 4a 0f             	sbb    %cl,0xf(%rdx)
   14650:	0b 77 08             	or     0x8(%rdi),%esi
   14653:	80 00 3f             	addb   $0x3f,(%rax)
   14656:	1a 3b                	sbb    (%rbx),%bh
   14658:	2a 33                	sub    (%rbx),%dh
   1465a:	24 22                	and    $0x22,%al
   1465c:	00 00                	add    %al,(%rax)
   1465e:	00 00                	add    %al,(%rax)
   14660:	14 00                	adc    $0x0,%al
   14662:	00 00                	add    %al,(%rax)
   14664:	44 01 00             	add    %r8d,(%rax)
   14667:	00 a8 c9 fe ff 10    	add    %ch,0x10fffec9(%rax)
	...
   14675:	00 00                	add    %al,(%rax)
   14677:	00 34 00             	add    %dh,(%rax,%rax,1)
   1467a:	00 00                	add    %al,(%rax)
   1467c:	5c                   	pop    %rsp
   1467d:	01 00                	add    %eax,(%rax)
   1467f:	00 86 f9 fe ff f3    	add    %al,-0xc000107(%rsi)
   14685:	00 00                	add    %al,(%rax)
   14687:	00 00                	add    %al,(%rax)
   14689:	46 0e                	rex.RX (bad) 
   1468b:	10 8d 02 42 0e 18    	adc    %cl,0x180e4202(%rbp)
   14691:	8c 03                	mov    %es,(%rbx)
   14693:	41 0e                	rex.B (bad) 
   14695:	20 86 04 41 0e 28    	and    %al,0x280e4104(%rsi)
   1469b:	83 05 44 0e 40 02 db 	addl   $0xffffffdb,0x2400e44(%rip)        # 24154e6 <_end+0x23ea356>
   146a2:	0e                   	(bad)  
   146a3:	28 44 0e 20          	sub    %al,0x20(%rsi,%rcx,1)
   146a7:	41 0e                	rex.B (bad) 
   146a9:	18 42 0e             	sbb    %al,0xe(%rdx)
   146ac:	10 42 0e             	adc    %al,0xe(%rdx)
   146af:	08 34 00             	or     %dh,(%rax,%rax,1)
   146b2:	00 00                	add    %al,(%rax)
   146b4:	94                   	xchg   %eax,%esp
   146b5:	01 00                	add    %eax,(%rax)
   146b7:	00 41 fa             	add    %al,-0x6(%rcx)
   146ba:	fe                   	(bad)  
   146bb:	ff f3                	push   %rbx
   146bd:	00 00                	add    %al,(%rax)
   146bf:	00 00                	add    %al,(%rax)
   146c1:	46 0e                	rex.RX (bad) 
   146c3:	10 8d 02 42 0e 18    	adc    %cl,0x180e4202(%rbp)
   146c9:	8c 03                	mov    %es,(%rbx)
   146cb:	41 0e                	rex.B (bad) 
   146cd:	20 86 04 41 0e 28    	and    %al,0x280e4104(%rsi)
   146d3:	83 05 44 0e 40 02 db 	addl   $0xffffffdb,0x2400e44(%rip)        # 241551e <_end+0x23ea38e>
   146da:	0e                   	(bad)  
   146db:	28 44 0e 20          	sub    %al,0x20(%rsi,%rcx,1)
   146df:	41 0e                	rex.B (bad) 
   146e1:	18 42 0e             	sbb    %al,0xe(%rdx)
   146e4:	10 42 0e             	adc    %al,0xe(%rdx)
   146e7:	08 34 00             	or     %dh,(%rax,%rax,1)
   146ea:	00 00                	add    %al,(%rax)
   146ec:	cc                   	int3   
   146ed:	01 00                	add    %eax,(%rax)
   146ef:	00 fc                	add    %bh,%ah
   146f1:	fa                   	cli    
   146f2:	fe                   	(bad)  
   146f3:	ff f3                	push   %rbx
   146f5:	00 00                	add    %al,(%rax)
   146f7:	00 00                	add    %al,(%rax)
   146f9:	46 0e                	rex.RX (bad) 
   146fb:	10 8d 02 42 0e 18    	adc    %cl,0x180e4202(%rbp)
   14701:	8c 03                	mov    %es,(%rbx)
   14703:	41 0e                	rex.B (bad) 
   14705:	20 86 04 41 0e 28    	and    %al,0x280e4104(%rsi)
   1470b:	83 05 44 0e 40 02 db 	addl   $0xffffffdb,0x2400e44(%rip)        # 2415556 <_end+0x23ea3c6>
   14712:	0e                   	(bad)  
   14713:	28 44 0e 20          	sub    %al,0x20(%rsi,%rcx,1)
   14717:	41 0e                	rex.B (bad) 
   14719:	18 42 0e             	sbb    %al,0xe(%rdx)
   1471c:	10 42 0e             	adc    %al,0xe(%rdx)
   1471f:	08 40 00             	or     %al,0x0(%rax)
   14722:	00 00                	add    %al,(%rax)
   14724:	04 02                	add    $0x2,%al
   14726:	00 00                	add    %al,(%rax)
   14728:	b7 fb                	mov    $0xfb,%bh
   1472a:	fe                   	(bad)  
   1472b:	ff 9e 01 00 00 00    	lcall  *0x1(%rsi)
   14731:	46 0e                	rex.RX (bad) 
   14733:	10 8e 02 42 0e 18    	adc    %cl,0x180e4202(%rsi)
   14739:	8d 03                	lea    (%rbx),%eax
   1473b:	42 0e                	rex.X (bad) 
   1473d:	20 8c 04 41 0e 28 86 	and    %cl,-0x79d7f1bf(%rsp,%rax,1)
   14744:	05 41 0e 30 83       	add    $0x83300e41,%eax
   14749:	06                   	(bad)  
   1474a:	44 0e                	rex.R (bad) 
   1474c:	50                   	push   %rax
   1474d:	03 82 01 0e 30 44    	add    0x44300e01(%rdx),%eax
   14753:	0e                   	(bad)  
   14754:	28 41 0e             	sub    %al,0xe(%rcx)
   14757:	20 42 0e             	and    %al,0xe(%rdx)
   1475a:	18 42 0e             	sbb    %al,0xe(%rdx)
   1475d:	10 42 0e             	adc    %al,0xe(%rdx)
   14760:	08 00                	or     %al,(%rax)
   14762:	00 00                	add    %al,(%rax)
   14764:	40 00 00             	rex add %al,(%rax)
   14767:	00 48 02             	add    %cl,0x2(%rax)
   1476a:	00 00                	add    %al,(%rax)
   1476c:	11 fd                	adc    %edi,%ebp
   1476e:	fe                   	(bad)  
   1476f:	ff 9e 01 00 00 00    	lcall  *0x1(%rsi)
   14775:	46 0e                	rex.RX (bad) 
   14777:	10 8e 02 42 0e 18    	adc    %cl,0x180e4202(%rsi)
   1477d:	8d 03                	lea    (%rbx),%eax
   1477f:	42 0e                	rex.X (bad) 
   14781:	20 8c 04 41 0e 28 86 	and    %cl,-0x79d7f1bf(%rsp,%rax,1)
   14788:	05 41 0e 30 83       	add    $0x83300e41,%eax
   1478d:	06                   	(bad)  
   1478e:	44 0e                	rex.R (bad) 
   14790:	50                   	push   %rax
   14791:	03 82 01 0e 30 44    	add    0x44300e01(%rdx),%eax
   14797:	0e                   	(bad)  
   14798:	28 41 0e             	sub    %al,0xe(%rcx)
   1479b:	20 42 0e             	and    %al,0xe(%rdx)
   1479e:	18 42 0e             	sbb    %al,0xe(%rdx)
   147a1:	10 42 0e             	adc    %al,0xe(%rdx)
   147a4:	08 00                	or     %al,(%rax)
   147a6:	00 00                	add    %al,(%rax)
   147a8:	14 00                	adc    $0x0,%al
   147aa:	00 00                	add    %al,(%rax)
   147ac:	8c 02                	mov    %es,(%rdx)
   147ae:	00 00                	add    %al,(%rax)
   147b0:	6b fe fe             	imul   $0xfffffffe,%esi,%edi
   147b3:	ff 19                	lcall  *(%rcx)
   147b5:	00 00                	add    %al,(%rax)
   147b7:	00 00                	add    %al,(%rax)
   147b9:	4a 0e                	rex.WX (bad) 
   147bb:	10 48 0e             	adc    %cl,0xe(%rax)
   147be:	08 00                	or     %al,(%rax)
   147c0:	34 00                	xor    $0x0,%al
   147c2:	00 00                	add    %al,(%rax)
   147c4:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
   147c5:	02 00                	add    (%rax),%al
   147c7:	00 6c fe fe          	add    %ch,-0x2(%rsi,%rdi,8)
   147cb:	ff                   	(bad)  
   147cc:	e9 00 00 00 00       	jmp    147d1 <__GNU_EH_FRAME_HDR+0xb11>
   147d1:	46 0e                	rex.RX (bad) 
   147d3:	10 8d 02 42 0e 18    	adc    %cl,0x180e4202(%rbp)
   147d9:	8c 03                	mov    %es,(%rbx)
   147db:	41 0e                	rex.B (bad) 
   147dd:	20 86 04 43 0e 28    	and    %al,0x280e4304(%rsi)
   147e3:	83 05 47 0e 50 02 cf 	addl   $0xffffffcf,0x2500e47(%rip)        # 2515631 <_end+0x24ea4a1>
   147ea:	0e                   	(bad)  
   147eb:	28 41 0e             	sub    %al,0xe(%rcx)
   147ee:	20 41 0e             	and    %al,0xe(%rcx)
   147f1:	18 42 0e             	sbb    %al,0xe(%rdx)
   147f4:	10 42 0e             	adc    %al,0xe(%rdx)
   147f7:	08 10                	or     %dl,(%rax)
   147f9:	00 00                	add    %al,(%rax)
   147fb:	00 dc                	add    %bl,%ah
   147fd:	02 00                	add    (%rax),%al
   147ff:	00 20                	add    %ah,(%rax)
   14801:	ff                   	(bad)  
   14802:	fe                   	(bad)  
   14803:	ff 94 00 00 00 00 00 	call   *0x0(%rax,%rax,1)
   1480a:	00 00                	add    %al,(%rax)
   1480c:	30 00                	xor    %al,(%rax)
   1480e:	00 00                	add    %al,(%rax)
   14810:	f0 02 00             	lock add (%rax),%al
   14813:	00 ac ff fe ff 50 11 	add    %ch,0x1150fffe(%rdi,%rdi,8)
   1481a:	00 00                	add    %al,(%rax)
   1481c:	00 45 0e             	add    %al,0xe(%rbp)
   1481f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
   14825:	54                   	push   %rsp
   14826:	8f 03                	pop    (%rbx)
   14828:	8e 04 8d 05 8c 06 83 	mov    -0x7cf973fb(,%rcx,4),%es
   1482f:	07                   	(bad)  
   14830:	03 30                	add    (%rax),%esi
   14832:	10 0a                	adc    %cl,(%rdx)
   14834:	0c 07                	or     $0x7,%al
   14836:	08 44 0b 00          	or     %al,0x0(%rbx,%rcx,1)
   1483a:	00 00                	add    %al,(%rax)
   1483c:	00 00                	add    %al,(%rax)
   1483e:	00 00                	add    %al,(%rax)
   14840:	6c                   	insb   (%dx),%es:(%rdi)
   14841:	00 00                	add    %al,(%rax)
   14843:	00 24 03             	add    %ah,(%rbx,%rax,1)
   14846:	00 00                	add    %al,(%rax)
   14848:	c8 10 ff ff          	enter  $0xff10,$0xff
   1484c:	03 02                	add    (%rdx),%eax
   1484e:	00 00                	add    %al,(%rax)
   14850:	00 4b 0e             	add    %cl,0xe(%rbx)
   14853:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   14859:	8e 03                	mov    (%rbx),%es
   1485b:	45 0e                	rex.RB (bad) 
   1485d:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
   14863:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff863156aa <_end+0xffffffff862ea51a>
   14869:	06                   	(bad)  
   1486a:	41 0e                	rex.B (bad) 
   1486c:	38 83 07 47 0e 40    	cmp    %al,0x400e4707(%rbx)
   14872:	02 a1 0a 0e 38 43    	add    0x43380e0a(%rcx),%ah
   14878:	0e                   	(bad)  
   14879:	30 41 0e             	xor    %al,0xe(%rcx)
   1487c:	28 42 0e             	sub    %al,0xe(%rdx)
   1487f:	20 42 0e             	and    %al,0xe(%rdx)
   14882:	18 42 0e             	sbb    %al,0xe(%rdx)
   14885:	10 42 0e             	adc    %al,0xe(%rdx)
   14888:	08 43 0b             	or     %al,0xb(%rbx)
   1488b:	65 0a 0e             	or     %gs:(%rsi),%cl
   1488e:	38 41 0e             	cmp    %al,0xe(%rcx)
   14891:	30 41 0e             	xor    %al,0xe(%rcx)
   14894:	28 42 0e             	sub    %al,0xe(%rdx)
   14897:	20 42 0e             	and    %al,0xe(%rdx)
   1489a:	18 42 0e             	sbb    %al,0xe(%rdx)
   1489d:	10 42 0e             	adc    %al,0xe(%rdx)
   148a0:	08 41 0b             	or     %al,0xb(%rcx)
   148a3:	03 00                	add    (%rax),%eax
   148a5:	01 0e                	add    %ecx,(%rsi)
   148a7:	08 c3                	or     %al,%bl
   148a9:	c6                   	(bad)  
   148aa:	cc                   	int3   
   148ab:	cd ce                	int    $0xce
   148ad:	cf                   	iret   
   148ae:	00 00                	add    %al,(%rax)
   148b0:	34 00                	xor    $0x0,%al
   148b2:	00 00                	add    %al,(%rax)
   148b4:	94                   	xchg   %eax,%esp
   148b5:	03 00                	add    (%rax),%eax
   148b7:	00 68 12             	add    %ch,0x12(%rax)
   148ba:	ff                   	(bad)  
   148bb:	ff 33                	push   (%rbx)
   148bd:	00 00                	add    %al,(%rax)
   148bf:	00 00                	add    %al,(%rax)
   148c1:	45 0e                	rex.RB (bad) 
   148c3:	10 86 02 44 0e 18    	adc    %al,0x180e4402(%rsi)
   148c9:	83 03 47             	addl   $0x47,(%rbx)
   148cc:	0e                   	(bad)  
   148cd:	20 4d 0a             	and    %cl,0xa(%rbp)
   148d0:	0e                   	(bad)  
   148d1:	18 41 0e             	sbb    %al,0xe(%rcx)
   148d4:	10 41 0e             	adc    %al,0xe(%rcx)
   148d7:	08 41 0b             	or     %al,0xb(%rcx)
   148da:	44 0e                	rex.R (bad) 
   148dc:	18 49 0e             	sbb    %cl,0xe(%rcx)
   148df:	10 41 0e             	adc    %al,0xe(%rcx)
   148e2:	08 00                	or     %al,(%rax)
   148e4:	00 00                	add    %al,(%rax)
   148e6:	00 00                	add    %al,(%rax)
   148e8:	48 00 00             	rex.W add %al,(%rax)
   148eb:	00 cc                	add    %cl,%ah
   148ed:	03 00                	add    (%rax),%eax
   148ef:	00 70 12             	add    %dh,0x12(%rax)
   148f2:	ff                   	(bad)  
   148f3:	ff 85 00 00 00 00    	incl   0x0(%rbp)
   148f9:	46 0e                	rex.RX (bad) 
   148fb:	10 8e 02 45 0e 18    	adc    %cl,0x180e4502(%rsi)
   14901:	8d 03                	lea    (%rbx),%eax
   14903:	4a 0e                	rex.WX (bad) 
   14905:	20 8c 04 44 0e 28 86 	and    %cl,-0x79d7f1bc(%rsp,%rax,1)
   1490c:	05 43 0e 30 83       	add    $0x83300e43,%eax
   14911:	06                   	(bad)  
   14912:	78 0a                	js     1491e <__GNU_EH_FRAME_HDR+0xc5e>
   14914:	0e                   	(bad)  
   14915:	28 43 0e             	sub    %al,0xe(%rbx)
   14918:	20 42 0e             	and    %al,0xe(%rdx)
   1491b:	18 42 0e             	sbb    %al,0xe(%rdx)
   1491e:	10 42 0e             	adc    %al,0xe(%rdx)
   14921:	08 43 0b             	or     %al,0xb(%rbx)
   14924:	5b                   	pop    %rbx
   14925:	0e                   	(bad)  
   14926:	28 43 0e             	sub    %al,0xe(%rbx)
   14929:	20 42 0e             	and    %al,0xe(%rdx)
   1492c:	18 42 0e             	sbb    %al,0xe(%rdx)
   1492f:	10 42 0e             	adc    %al,0xe(%rdx)
   14932:	08 00                	or     %al,(%rax)
   14934:	48 00 00             	rex.W add %al,(%rax)
   14937:	00 18                	add    %bl,(%rax)
   14939:	04 00                	add    $0x0,%al
   1493b:	00 b4 12 ff ff 85 00 	add    %dh,0x85ffff(%rdx,%rdx,1)
   14942:	00 00                	add    %al,(%rax)
   14944:	00 46 0e             	add    %al,0xe(%rsi)
   14947:	10 8e 02 45 0e 18    	adc    %cl,0x180e4502(%rsi)
   1494d:	8d 03                	lea    (%rbx),%eax
   1494f:	4a 0e                	rex.WX (bad) 
   14951:	20 8c 04 44 0e 28 86 	and    %cl,-0x79d7f1bc(%rsp,%rax,1)
   14958:	05 43 0e 30 83       	add    $0x83300e43,%eax
   1495d:	06                   	(bad)  
   1495e:	78 0a                	js     1496a <__GNU_EH_FRAME_HDR+0xcaa>
   14960:	0e                   	(bad)  
   14961:	28 43 0e             	sub    %al,0xe(%rbx)
   14964:	20 42 0e             	and    %al,0xe(%rdx)
   14967:	18 42 0e             	sbb    %al,0xe(%rdx)
   1496a:	10 42 0e             	adc    %al,0xe(%rdx)
   1496d:	08 43 0b             	or     %al,0xb(%rbx)
   14970:	5b                   	pop    %rbx
   14971:	0e                   	(bad)  
   14972:	28 43 0e             	sub    %al,0xe(%rbx)
   14975:	20 42 0e             	and    %al,0xe(%rdx)
   14978:	18 42 0e             	sbb    %al,0xe(%rdx)
   1497b:	10 42 0e             	adc    %al,0xe(%rdx)
   1497e:	08 00                	or     %al,(%rax)
   14980:	10 00                	adc    %al,(%rax)
   14982:	00 00                	add    %al,(%rax)
   14984:	64 04 00             	fs add $0x0,%al
   14987:	00 f8                	add    %bh,%al
   14989:	12 ff                	adc    %bh,%bh
   1498b:	ff 25 00 00 00 00    	jmp    *0x0(%rip)        # 14991 <__GNU_EH_FRAME_HDR+0xcd1>
   14991:	00 00                	add    %al,(%rax)
   14993:	00 10                	add    %dl,(%rax)
   14995:	00 00                	add    %al,(%rax)
   14997:	00 78 04             	add    %bh,0x4(%rax)
   1499a:	00 00                	add    %al,(%rax)
   1499c:	14 13                	adc    $0x13,%al
   1499e:	ff                   	(bad)  
   1499f:	ff 21                	jmp    *(%rcx)
   149a1:	00 00                	add    %al,(%rax)
   149a3:	00 00                	add    %al,(%rax)
   149a5:	00 00                	add    %al,(%rax)
   149a7:	00 14 00             	add    %dl,(%rax,%rax,1)
   149aa:	00 00                	add    %al,(%rax)
   149ac:	8c 04 00             	mov    %es,(%rax,%rax,1)
   149af:	00 30                	add    %dh,(%rax)
   149b1:	13 ff                	adc    %edi,%edi
   149b3:	ff 32                	push   (%rdx)
   149b5:	00 00                	add    %al,(%rax)
   149b7:	00 00                	add    %al,(%rax)
   149b9:	48 0e                	rex.W (bad) 
   149bb:	10 69 0e             	adc    %ch,0xe(%rcx)
   149be:	08 00                	or     %al,(%rax)
   149c0:	18 00                	sbb    %al,(%rax)
   149c2:	00 00                	add    %al,(%rax)
   149c4:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
   149c5:	04 00                	add    $0x0,%al
   149c7:	00 58 13             	add    %bl,0x13(%rax)
   149ca:	ff                   	(bad)  
   149cb:	ff 1e                	lcall  *(%rsi)
   149cd:	00 00                	add    %al,(%rax)
   149cf:	00 00                	add    %al,(%rax)
   149d1:	45 0e                	rex.RB (bad) 
   149d3:	10 83 02 58 0e 08    	adc    %al,0x80e5802(%rbx)
   149d9:	00 00                	add    %al,(%rax)
   149db:	00 10                	add    %dl,(%rax)
   149dd:	00 00                	add    %al,(%rax)
   149df:	00 c0                	add    %al,%al
   149e1:	04 00                	add    $0x0,%al
   149e3:	00 5c 13 ff          	add    %bl,-0x1(%rbx,%rdx,1)
   149e7:	ff 09                	decl   (%rcx)
   149e9:	00 00                	add    %al,(%rax)
   149eb:	00 00                	add    %al,(%rax)
   149ed:	00 00                	add    %al,(%rax)
   149ef:	00 24 00             	add    %ah,(%rax,%rax,1)
   149f2:	00 00                	add    %al,(%rax)
   149f4:	d4                   	(bad)  
   149f5:	04 00                	add    $0x0,%al
   149f7:	00 58 13             	add    %bl,0x13(%rax)
   149fa:	ff                   	(bad)  
   149fb:	ff 25 00 00 00 00    	jmp    *0x0(%rip)        # 14a01 <__GNU_EH_FRAME_HDR+0xd41>
   14a01:	45 0e                	rex.RB (bad) 
   14a03:	10 86 02 41 0e 18    	adc    %al,0x180e4102(%rsi)
   14a09:	83 03 47             	addl   $0x47,(%rbx)
   14a0c:	0e                   	(bad)  
   14a0d:	20 53 0e             	and    %dl,0xe(%rbx)
   14a10:	18 43 0e             	sbb    %al,0xe(%rbx)
   14a13:	10 41 0e             	adc    %al,0xe(%rcx)
   14a16:	08 00                	or     %al,(%rax)
   14a18:	14 00                	adc    $0x0,%al
   14a1a:	00 00                	add    %al,(%rax)
   14a1c:	fc                   	cld    
   14a1d:	04 00                	add    $0x0,%al
   14a1f:	00 60 13             	add    %ah,0x13(%rax)
   14a22:	ff                   	(bad)  
   14a23:	ff 17                	call   *(%rdi)
   14a25:	00 00                	add    %al,(%rax)
   14a27:	00 00                	add    %al,(%rax)
   14a29:	48 0e                	rex.W (bad) 
   14a2b:	10 4e 0e             	adc    %cl,0xe(%rsi)
   14a2e:	08 00                	or     %al,(%rax)
   14a30:	34 00                	xor    $0x0,%al
   14a32:	00 00                	add    %al,(%rax)
   14a34:	14 05                	adc    $0x5,%al
   14a36:	00 00                	add    %al,(%rax)
   14a38:	c8 cf ff ff          	enter  $0xffcf,$0xff
   14a3c:	31 03                	xor    %eax,(%rbx)
   14a3e:	00 00                	add    %al,(%rax)
   14a40:	00 46 0e             	add    %al,0xe(%rsi)
   14a43:	10 8c 02 41 0e 18 86 	adc    %cl,-0x79e7f1bf(%rdx,%rax,1)
   14a4a:	03 41 0e             	add    0xe(%rcx),%eax
   14a4d:	20 83 04 47 0e e0    	and    %al,-0x1ff1b8fc(%rbx)
   14a53:	01 03                	add    %eax,(%rbx)
   14a55:	c7 02 0a 0e 20 41    	movl   $0x41200e0a,(%rdx)
   14a5b:	0e                   	(bad)  
   14a5c:	18 41 0e             	sbb    %al,0xe(%rcx)
   14a5f:	10 42 0e             	adc    %al,0xe(%rdx)
   14a62:	08 46 0b             	or     %al,0xb(%rsi)
   14a65:	00 00                	add    %al,(%rax)
   14a67:	00 2c 00             	add    %ch,(%rax,%rax,1)
   14a6a:	00 00                	add    %al,(%rax)
   14a6c:	4c 05 00 00 d0 d2    	rex.WR add $0xffffffffd2d00000,%rax
   14a72:	ff                   	(bad)  
   14a73:	ff 99 01 00 00 00    	lcall  *0x1(%rcx)
   14a79:	46 0e                	rex.RX (bad) 
   14a7b:	10 8c 02 44 0e 18 86 	adc    %cl,-0x79e7f1bc(%rdx,%rax,1)
   14a82:	03 44 0e 20          	add    0x20(%rsi,%rcx,1),%eax
   14a86:	83 04 59 0a          	addl   $0xa,(%rcx,%rbx,2)
   14a8a:	0e                   	(bad)  
   14a8b:	18 41 0e             	sbb    %al,0xe(%rcx)
   14a8e:	10 42 0e             	adc    %al,0xe(%rdx)
   14a91:	08 46 0b             	or     %al,0xb(%rsi)
   14a94:	00 00                	add    %al,(%rax)
   14a96:	00 00                	add    %al,(%rax)
   14a98:	3c 00                	cmp    $0x0,%al
   14a9a:	00 00                	add    %al,(%rax)
   14a9c:	7c 05                	jl     14aa3 <__GNU_EH_FRAME_HDR+0xde3>
   14a9e:	00 00                	add    %al,(%rax)
   14aa0:	00 13                	add    %dl,(%rbx)
   14aa2:	ff                   	(bad)  
   14aa3:	ff 19                	lcall  *(%rcx)
   14aa5:	01 00                	add    %eax,(%rax)
   14aa7:	00 00                	add    %al,(%rax)
   14aa9:	46 0e                	rex.RX (bad) 
   14aab:	10 8c 02 44 0e 18 86 	adc    %cl,-0x79e7f1bc(%rdx,%rax,1)
   14ab2:	03 44 0e 20          	add    0x20(%rsi,%rcx,1),%eax
   14ab6:	83 04 02 cc          	addl   $0xffffffcc,(%rdx,%rax,1)
   14aba:	0a 0e                	or     (%rsi),%cl
   14abc:	18 41 0e             	sbb    %al,0xe(%rcx)
   14abf:	10 44 0e 08          	adc    %al,0x8(%rsi,%rcx,1)
   14ac3:	49 0b 4e 0a          	or     0xa(%r14),%rcx
   14ac7:	0e                   	(bad)  
   14ac8:	18 46 0e             	sbb    %al,0xe(%rsi)
   14acb:	10 42 0e             	adc    %al,0xe(%rdx)
   14ace:	08 42 0b             	or     %al,0xb(%rdx)
   14ad1:	00 00                	add    %al,(%rax)
   14ad3:	00 00                	add    %al,(%rax)
   14ad5:	00 00                	add    %al,(%rax)
   14ad7:	00 14 00             	add    %dl,(%rax,%rax,1)
   14ada:	00 00                	add    %al,(%rax)
   14adc:	bc 05 00 00 00       	mov    $0x5,%esp
   14ae1:	d4                   	(bad)  
   14ae2:	ff                   	(bad)  
   14ae3:	ff 1b                	lcall  *(%rbx)
   14ae5:	00 00                	add    %al,(%rax)
   14ae7:	00 00                	add    %al,(%rax)
   14ae9:	48 0e                	rex.W (bad) 
   14aeb:	10 4f 0e             	adc    %cl,0xe(%rdi)
   14aee:	08 00                	or     %al,(%rax)
   14af0:	10 00                	adc    %al,(%rax)
   14af2:	00 00                	add    %al,(%rax)
   14af4:	d4                   	(bad)  
   14af5:	05 00 00 08 d5       	add    $0xd5080000,%eax
   14afa:	fe                   	(bad)  
   14afb:	ff 0f                	decl   (%rdi)
   14afd:	00 00                	add    %al,(%rax)
   14aff:	00 00                	add    %al,(%rax)
   14b01:	00 00                	add    %al,(%rax)
   14b03:	00 10                	add    %dl,(%rax)
   14b05:	00 00                	add    %al,(%rax)
   14b07:	00 e8                	add    %ch,%al
   14b09:	05 00 00 b4 13       	add    $0x13b40000,%eax
   14b0e:	ff                   	(bad)  
   14b0f:	ff 52 00             	call   *0x0(%rdx)
   14b12:	00 00                	add    %al,(%rax)
   14b14:	00 00                	add    %al,(%rax)
   14b16:	00 00                	add    %al,(%rax)
   14b18:	10 00                	adc    %al,(%rax)
   14b1a:	00 00                	add    %al,(%rax)
   14b1c:	fc                   	cld    
   14b1d:	05 00 00 00 14       	add    $0x14000000,%eax
   14b22:	ff                   	(bad)  
   14b23:	ff 53 00             	call   *0x0(%rbx)
   14b26:	00 00                	add    %al,(%rax)
   14b28:	00 00                	add    %al,(%rax)
   14b2a:	00 00                	add    %al,(%rax)
   14b2c:	1c 00                	sbb    $0x0,%al
   14b2e:	00 00                	add    %al,(%rax)
   14b30:	10 06                	adc    %al,(%rsi)
   14b32:	00 00                	add    %al,(%rax)
   14b34:	4c 14 ff             	rex.WR adc $0xff,%al
   14b37:	ff d7                	call   *%rdi
   14b39:	00 00                	add    %al,(%rax)
   14b3b:	00 00                	add    %al,(%rax)
   14b3d:	45 0e                	rex.RB (bad) 
   14b3f:	10 83 02 47 0e 20    	adc    %al,0x200e4702(%rbx)
   14b45:	02 c6                	add    %dh,%al
   14b47:	0e                   	(bad)  
   14b48:	10 44 0e 08          	adc    %al,0x8(%rsi,%rcx,1)
   14b4c:	14 00                	adc    $0x0,%al
   14b4e:	00 00                	add    %al,(%rax)
   14b50:	30 06                	xor    %al,(%rsi)
   14b52:	00 00                	add    %al,(%rax)
   14b54:	0c 15                	or     $0x15,%al
   14b56:	ff                   	(bad)  
   14b57:	ff 5c 00 00          	lcall  *0x0(%rax,%rax,1)
   14b5b:	00 00                	add    %al,(%rax)
   14b5d:	48 0e                	rex.W (bad) 
   14b5f:	10 02                	adc    %al,(%rdx)
   14b61:	53                   	push   %rbx
   14b62:	0e                   	(bad)  
   14b63:	08 38                	or     %bh,(%rax)
   14b65:	00 00                	add    %al,(%rax)
   14b67:	00 48 06             	add    %cl,0x6(%rax)
   14b6a:	00 00                	add    %al,(%rax)
   14b6c:	54                   	push   %rsp
   14b6d:	15 ff ff 2f 01       	adc    $0x12fffff,%eax
   14b72:	00 00                	add    %al,(%rax)
   14b74:	00 46 0e             	add    %al,0xe(%rsi)
   14b77:	10 8d 02 42 0e 18    	adc    %cl,0x180e4202(%rbp)
   14b7d:	8c 03                	mov    %es,(%rbx)
   14b7f:	41 0e                	rex.B (bad) 
   14b81:	20 86 04 41 0e 28    	and    %al,0x280e4104(%rsi)
   14b87:	83 05 44 0e 40 02 8a 	addl   $0xffffff8a,0x2400e44(%rip)        # 24159d2 <_end+0x23ea842>
   14b8e:	0a 0e                	or     (%rsi),%cl
   14b90:	28 43 0e             	sub    %al,0xe(%rbx)
   14b93:	20 41 0e             	and    %al,0xe(%rcx)
   14b96:	18 42 0e             	sbb    %al,0xe(%rdx)
   14b99:	10 42 0e             	adc    %al,0xe(%rdx)
   14b9c:	08 48 0b             	or     %cl,0xb(%rax)
   14b9f:	00 10                	add    %dl,(%rax)
   14ba1:	00 00                	add    %al,(%rax)
   14ba3:	00 84 06 00 00 48 16 	add    %al,0x16480000(%rsi,%rax,1)
   14baa:	ff                   	(bad)  
   14bab:	ff 1e                	lcall  *(%rsi)
   14bad:	00 00                	add    %al,(%rax)
   14baf:	00 00                	add    %al,(%rax)
   14bb1:	00 00                	add    %al,(%rax)
   14bb3:	00 18                	add    %bl,(%rax)
   14bb5:	00 00                	add    %al,(%rax)
   14bb7:	00 98 06 00 00 54    	add    %bl,0x54000006(%rax)
   14bbd:	16                   	(bad)  
   14bbe:	ff                   	(bad)  
   14bbf:	ff 23                	jmp    *(%rbx)
   14bc1:	00 00                	add    %al,(%rax)
   14bc3:	00 00                	add    %al,(%rax)
   14bc5:	45 0e                	rex.RB (bad) 
   14bc7:	10 83 02 5d 0e 08    	adc    %al,0x80e5d02(%rbx)
   14bcd:	00 00                	add    %al,(%rax)
   14bcf:	00 1c 00             	add    %bl,(%rax,%rax,1)
   14bd2:	00 00                	add    %al,(%rax)
   14bd4:	b4 06                	mov    $0x6,%ah
   14bd6:	00 00                	add    %al,(%rax)
   14bd8:	68 16 ff ff 22       	push   $0x22ffff16
   14bdd:	00 00                	add    %al,(%rax)
   14bdf:	00 00                	add    %al,(%rax)
   14be1:	45 0e                	rex.RB (bad) 
   14be3:	10 83 02 5c 0e 08    	adc    %al,0x80e5c02(%rbx)
   14be9:	00 00                	add    %al,(%rax)
   14beb:	00 00                	add    %al,(%rax)
   14bed:	00 00                	add    %al,(%rax)
   14bef:	00 38                	add    %bh,(%rax)
   14bf1:	00 00                	add    %al,(%rax)
   14bf3:	00 d4                	add    %dl,%ah
   14bf5:	06                   	(bad)  
   14bf6:	00 00                	add    %al,(%rax)
   14bf8:	78 16                	js     14c10 <__GNU_EH_FRAME_HDR+0xf50>
   14bfa:	ff                   	(bad)  
   14bfb:	ff b7 00 00 00 00    	push   0x0(%rdi)
   14c01:	42 0e                	rex.X (bad) 
   14c03:	10 8d 02 45 0e 18    	adc    %cl,0x180e4502(%rbp)
   14c09:	8c 03                	mov    %es,(%rbx)
   14c0b:	41 0e                	rex.B (bad) 
   14c0d:	20 86 04 41 0e 28    	and    %al,0x280e4104(%rsi)
   14c13:	83 05 44 0e 30 02 9a 	addl   $0xffffff9a,0x2300e44(%rip)        # 2315a5e <_end+0x22ea8ce>
   14c1a:	0a 0e                	or     (%rsi),%cl
   14c1c:	28 41 0e             	sub    %al,0xe(%rcx)
   14c1f:	20 41 0e             	and    %al,0xe(%rcx)
   14c22:	18 42 0e             	sbb    %al,0xe(%rdx)
   14c25:	10 42 0e             	adc    %al,0xe(%rdx)
   14c28:	08 43 0b             	or     %al,0xb(%rbx)
   14c2b:	00 54 00 00          	add    %dl,0x0(%rax,%rax,1)
   14c2f:	00 10                	add    %dl,(%rax)
   14c31:	07                   	(bad)  
   14c32:	00 00                	add    %al,(%rax)
   14c34:	fc                   	cld    
   14c35:	16                   	(bad)  
   14c36:	ff                   	(bad)  
   14c37:	ff d6                	call   *%rsi
   14c39:	01 00                	add    %eax,(%rax)
   14c3b:	00 00                	add    %al,(%rax)
   14c3d:	4f 0e                	rex.WRXB (bad) 
   14c3f:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   14c45:	8e 03                	mov    (%rbx),%es
   14c47:	42 0e                	rex.X (bad) 
   14c49:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   14c4f:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff86315a99 <_end+0xffffffff862ea909>
   14c55:	06                   	(bad)  
   14c56:	44 0e                	rex.R (bad) 
   14c58:	38 83 07 47 0e 40    	cmp    %al,0x400e4707(%rbx)
   14c5e:	02 50 0a             	add    0xa(%rax),%dl
   14c61:	0e                   	(bad)  
   14c62:	38 41 0e             	cmp    %al,0xe(%rcx)
   14c65:	30 41 0e             	xor    %al,0xe(%rcx)
   14c68:	28 42 0e             	sub    %al,0xe(%rdx)
   14c6b:	20 42 0e             	and    %al,0xe(%rdx)
   14c6e:	18 42 0e             	sbb    %al,0xe(%rdx)
   14c71:	10 42 0e             	adc    %al,0xe(%rdx)
   14c74:	08 42 0b             	or     %al,0xb(%rdx)
   14c77:	03 50 01             	add    0x1(%rax),%edx
   14c7a:	0e                   	(bad)  
   14c7b:	08 c3                	or     %al,%bl
   14c7d:	c6                   	(bad)  
   14c7e:	cc                   	int3   
   14c7f:	cd ce                	int    $0xce
   14c81:	cf                   	iret   
   14c82:	00 00                	add    %al,(%rax)
   14c84:	10 00                	adc    %al,(%rax)
   14c86:	00 00                	add    %al,(%rax)
   14c88:	68 07 00 00 84       	push   $0xffffffff84000007
   14c8d:	18 ff                	sbb    %bh,%bh
   14c8f:	ff 53 00             	call   *0x0(%rbx)
   14c92:	00 00                	add    %al,(%rax)
   14c94:	00 00                	add    %al,(%rax)
   14c96:	00 00                	add    %al,(%rax)
   14c98:	18 00                	sbb    %al,(%rax)
   14c9a:	00 00                	add    %al,(%rax)
   14c9c:	7c 07                	jl     14ca5 <__GNU_EH_FRAME_HDR+0xfe5>
   14c9e:	00 00                	add    %al,(%rax)
   14ca0:	d0 18                	rcrb   (%rax)
   14ca2:	ff                   	(bad)  
   14ca3:	ff 5c 00 00          	lcall  *0x0(%rax,%rax,1)
   14ca7:	00 00                	add    %al,(%rax)
   14ca9:	48 0e                	rex.W (bad) 
   14cab:	30 79 0a             	xor    %bh,0xa(%rcx)
   14cae:	0e                   	(bad)  
   14caf:	08 47 0b             	or     %al,0xb(%rdi)
   14cb2:	00 00                	add    %al,(%rax)
   14cb4:	10 00                	adc    %al,(%rax)
   14cb6:	00 00                	add    %al,(%rax)
   14cb8:	98                   	cwtl   
   14cb9:	07                   	(bad)  
   14cba:	00 00                	add    %al,(%rax)
   14cbc:	14 19                	adc    $0x19,%al
   14cbe:	ff                   	(bad)  
   14cbf:	ff 6b 00             	ljmp   *0x0(%rbx)
   14cc2:	00 00                	add    %al,(%rax)
   14cc4:	00 00                	add    %al,(%rax)
   14cc6:	00 00                	add    %al,(%rax)
   14cc8:	10 00                	adc    %al,(%rax)
   14cca:	00 00                	add    %al,(%rax)
   14ccc:	ac                   	lods   %ds:(%rsi),%al
   14ccd:	07                   	(bad)  
   14cce:	00 00                	add    %al,(%rax)
   14cd0:	70 19                	jo     14ceb <__GNU_EH_FRAME_HDR+0x102b>
   14cd2:	ff                   	(bad)  
   14cd3:	ff 5b 00             	lcall  *0x0(%rbx)
   14cd6:	00 00                	add    %al,(%rax)
   14cd8:	00 00                	add    %al,(%rax)
   14cda:	00 00                	add    %al,(%rax)
   14cdc:	40 00 00             	rex add %al,(%rax)
   14cdf:	00 c0                	add    %al,%al
   14ce1:	07                   	(bad)  
   14ce2:	00 00                	add    %al,(%rax)
   14ce4:	bc 19 ff ff bd       	mov    $0xbdffff19,%esp
   14ce9:	01 00                	add    %eax,(%rax)
   14ceb:	00 00                	add    %al,(%rax)
   14ced:	46 0e                	rex.RX (bad) 
   14cef:	10 8e 02 42 0e 18    	adc    %cl,0x180e4202(%rsi)
   14cf5:	8d 03                	lea    (%rbx),%eax
   14cf7:	42 0e                	rex.X (bad) 
   14cf9:	20 8c 04 41 0e 28 86 	and    %cl,-0x79d7f1bf(%rsp,%rax,1)
   14d00:	05 41 0e 30 83       	add    $0x83300e41,%eax
   14d05:	06                   	(bad)  
   14d06:	47 0e                	rex.RXB (bad) 
   14d08:	40 02 b0 0a 0e 30 41 	add    0x41300e0a(%rax),%sil
   14d0f:	0e                   	(bad)  
   14d10:	28 41 0e             	sub    %al,0xe(%rcx)
   14d13:	20 42 0e             	and    %al,0xe(%rdx)
   14d16:	18 42 0e             	sbb    %al,0xe(%rdx)
   14d19:	10 42 0e             	adc    %al,0xe(%rdx)
   14d1c:	08 45 0b             	or     %al,0xb(%rbp)
   14d1f:	00 30                	add    %dh,(%rax)
   14d21:	00 00                	add    %al,(%rax)
   14d23:	00 04 08             	add    %al,(%rax,%rcx,1)
   14d26:	00 00                	add    %al,(%rax)
   14d28:	38 1b                	cmp    %bl,(%rbx)
   14d2a:	ff                   	(bad)  
   14d2b:	ff 5c 00 00          	lcall  *0x0(%rax,%rax,1)
   14d2f:	00 00                	add    %al,(%rax)
   14d31:	45 0e                	rex.RB (bad) 
   14d33:	10 86 02 43 0e 18    	adc    %al,0x180e4302(%rsi)
   14d39:	83 03 44             	addl   $0x44,(%rbx)
   14d3c:	0e                   	(bad)  
   14d3d:	20 7a 0a             	and    %bh,0xa(%rdx)
   14d40:	0e                   	(bad)  
   14d41:	18 43 0e             	sbb    %al,0xe(%rbx)
   14d44:	10 41 0e             	adc    %al,0xe(%rcx)
   14d47:	08 46 0b             	or     %al,0xb(%rsi)
   14d4a:	44 0e                	rex.R (bad) 
   14d4c:	18 46 0e             	sbb    %al,0xe(%rsi)
   14d4f:	10 41 0e             	adc    %al,0xe(%rcx)
   14d52:	08 00                	or     %al,(%rax)
   14d54:	40 00 00             	rex add %al,(%rax)
   14d57:	00 38                	add    %bh,(%rax)
   14d59:	08 00                	or     %al,(%rax)
   14d5b:	00 64 1b ff          	add    %ah,-0x1(%rbx,%rbx,1)
   14d5f:	ff ce                	dec    %esi
   14d61:	00 00                	add    %al,(%rax)
   14d63:	00 00                	add    %al,(%rax)
   14d65:	4f 0e                	rex.WRXB (bad) 
   14d67:	10 8d 02 47 0e 18    	adc    %cl,0x180e4702(%rbp)
   14d6d:	8c 03                	mov    %es,(%rbx)
   14d6f:	44 0e                	rex.R (bad) 
   14d71:	20 86 04 41 0e 28    	and    %al,0x280e4104(%rsi)
   14d77:	83 05 44 0e 30 73 0a 	addl   $0xa,0x73300e44(%rip)        # 73315bc2 <_end+0x732eaa32>
   14d7e:	0e                   	(bad)  
   14d7f:	28 41 0e             	sub    %al,0xe(%rcx)
   14d82:	20 41 0e             	and    %al,0xe(%rcx)
   14d85:	18 42 0e             	sbb    %al,0xe(%rdx)
   14d88:	10 42 0e             	adc    %al,0xe(%rdx)
   14d8b:	08 48 0b             	or     %cl,0xb(%rax)
   14d8e:	02 68 0e             	add    0xe(%rax),%ch
   14d91:	08 c3                	or     %al,%bl
   14d93:	c6                   	(bad)  
   14d94:	cc                   	int3   
   14d95:	cd 00                	int    $0x0
   14d97:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
   14d9b:	00 7c 08 00          	add    %bh,0x0(%rax,%rcx,1)
   14d9f:	00 f0                	add    %dh,%al
   14da1:	1b ff                	sbb    %edi,%edi
   14da3:	ff 19                	lcall  *(%rcx)
   14da5:	01 00                	add    %eax,(%rax)
   14da7:	00 00                	add    %al,(%rax)
   14da9:	46 0e                	rex.RX (bad) 
   14dab:	10 8c 02 41 0e 18 86 	adc    %cl,-0x79e7f1bf(%rdx,%rax,1)
   14db2:	03 41 0e             	add    0xe(%rcx),%eax
   14db5:	20 83 04 02 6c 0a    	and    %al,0xa6c0204(%rbx)
   14dbb:	0e                   	(bad)  
   14dbc:	18 41 0e             	sbb    %al,0xe(%rcx)
   14dbf:	10 42 0e             	adc    %al,0xe(%rdx)
   14dc2:	08 49 0b             	or     %cl,0xb(%rcx)
   14dc5:	02 5f 0a             	add    0xa(%rdi),%bl
   14dc8:	0e                   	(bad)  
   14dc9:	18 41 0e             	sbb    %al,0xe(%rcx)
   14dcc:	10 42 0e             	adc    %al,0xe(%rdx)
   14dcf:	08 46 0b             	or     %al,0xb(%rsi)
   14dd2:	57                   	push   %rdi
   14dd3:	0a 0e                	or     (%rsi),%cl
   14dd5:	18 41 0e             	sbb    %al,0xe(%rcx)
   14dd8:	10 45 0e             	adc    %al,0xe(%rbp)
   14ddb:	08 4b 0b             	or     %cl,0xb(%rbx)
   14dde:	00 00                	add    %al,(%rax)
   14de0:	24 00                	and    $0x0,%al
   14de2:	00 00                	add    %al,(%rax)
   14de4:	c4                   	(bad)  
   14de5:	08 00                	or     %al,(%rax)
   14de7:	00 c8                	add    %cl,%al
   14de9:	1c ff                	sbb    $0xff,%al
   14deb:	ff                   	(bad)  
   14dec:	3b 00                	cmp    (%rax),%eax
   14dee:	00 00                	add    %al,(%rax)
   14df0:	00 45 0e             	add    %al,0xe(%rbp)
   14df3:	10 86 02 44 0e 18    	adc    %al,0x180e4402(%rsi)
   14df9:	83 03 44             	addl   $0x44,(%rbx)
   14dfc:	0e                   	(bad)  
   14dfd:	20 69 0e             	and    %ch,0xe(%rcx)
   14e00:	18 43 0e             	sbb    %al,0xe(%rbx)
   14e03:	10 41 0e             	adc    %al,0xe(%rcx)
   14e06:	08 00                	or     %al,(%rax)
   14e08:	10 00                	adc    %al,(%rax)
   14e0a:	00 00                	add    %al,(%rax)
   14e0c:	ec                   	in     (%dx),%al
   14e0d:	08 00                	or     %al,(%rax)
   14e0f:	00 e0                	add    %ah,%al
   14e11:	1c ff                	sbb    $0xff,%al
   14e13:	ff 07                	incl   (%rdi)
   14e15:	00 00                	add    %al,(%rax)
   14e17:	00 00                	add    %al,(%rax)
   14e19:	00 00                	add    %al,(%rax)
   14e1b:	00 28                	add    %ch,(%rax)
   14e1d:	00 00                	add    %al,(%rax)
   14e1f:	00 00                	add    %al,(%rax)
   14e21:	09 00                	or     %eax,(%rax)
   14e23:	00 dc                	add    %bl,%ah
   14e25:	1c ff                	sbb    $0xff,%al
   14e27:	ff c7                	inc    %edi
   14e29:	00 00                	add    %al,(%rax)
   14e2b:	00 00                	add    %al,(%rax)
   14e2d:	41 0e                	rex.B (bad) 
   14e2f:	10 86 02 41 0e 18    	adc    %al,0x180e4102(%rsi)
   14e35:	83 03 47             	addl   $0x47,(%rbx)
   14e38:	0e                   	(bad)  
   14e39:	30 02                	xor    %al,(%rdx)
   14e3b:	5b                   	pop    %rbx
   14e3c:	0a 0e                	or     (%rsi),%cl
   14e3e:	18 41 0e             	sbb    %al,0xe(%rcx)
   14e41:	10 41 0e             	adc    %al,0xe(%rcx)
   14e44:	08 4a 0b             	or     %cl,0xb(%rdx)
   14e47:	00 54 00 00          	add    %dl,0x0(%rax,%rax,1)
   14e4b:	00 2c 09             	add    %ch,(%rcx,%rcx,1)
   14e4e:	00 00                	add    %al,(%rax)
   14e50:	80 1d ff ff db 00 00 	sbbb   $0x0,0xdbffff(%rip)        # dd4e56 <_end+0xda9cc6>
   14e57:	00 00                	add    %al,(%rax)
   14e59:	4b 0e                	rex.WXB (bad) 
   14e5b:	10 8e 02 42 0e 18    	adc    %cl,0x180e4202(%rsi)
   14e61:	8d 03                	lea    (%rbx),%eax
   14e63:	45 0e                	rex.RB (bad) 
   14e65:	20 8c 04 44 0e 28 86 	and    %cl,-0x79d7f1bc(%rsp,%rax,1)
   14e6c:	05 41 0e 30 83       	add    $0x83300e41,%eax
   14e71:	06                   	(bad)  
   14e72:	02 7a 0a             	add    0xa(%rdx),%bh
   14e75:	0e                   	(bad)  
   14e76:	28 41 0e             	sub    %al,0xe(%rcx)
   14e79:	20 42 0e             	and    %al,0xe(%rdx)
   14e7c:	18 42 0e             	sbb    %al,0xe(%rdx)
   14e7f:	10 42 0e             	adc    %al,0xe(%rdx)
   14e82:	08 48 0b             	or     %cl,0xb(%rax)
   14e85:	41 0a 0e             	or     (%r14),%cl
   14e88:	28 43 0e             	sub    %al,0xe(%rbx)
   14e8b:	20 42 0e             	and    %al,0xe(%rdx)
   14e8e:	18 42 0e             	sbb    %al,0xe(%rdx)
   14e91:	10 42 0e             	adc    %al,0xe(%rdx)
   14e94:	08 46 0b             	or     %al,0xb(%rsi)
   14e97:	68 0e 08 c3 c6       	push   $0xffffffffc6c3080e
   14e9c:	cc                   	int3   
   14e9d:	cd ce                	int    $0xce
   14e9f:	00 5c 00 00          	add    %bl,0x0(%rax,%rax,1)
   14ea3:	00 84 09 00 00 08 1e 	add    %al,0x1e080000(%rcx,%rcx,1)
   14eaa:	ff                   	(bad)  
   14eab:	ff                   	(bad)  
   14eac:	bc 01 00 00 00       	mov    $0x1,%esp
   14eb1:	46 0e                	rex.RX (bad) 
   14eb3:	10 8d 02 42 0e 18    	adc    %cl,0x180e4202(%rbp)
   14eb9:	8c 03                	mov    %es,(%rbx)
   14ebb:	41 0e                	rex.B (bad) 
   14ebd:	20 86 04 44 0e 28    	and    %al,0x280e4404(%rsi)
   14ec3:	83 05 46 0e 30 02 97 	addl   $0xffffff97,0x2300e46(%rip)        # 2315d10 <_end+0x22eab80>
   14eca:	0a 0e                	or     (%rsi),%cl
   14ecc:	28 44 0e 20          	sub    %al,0x20(%rsi,%rcx,1)
   14ed0:	41 0e                	rex.B (bad) 
   14ed2:	18 42 0e             	sbb    %al,0xe(%rdx)
   14ed5:	10 42 0e             	adc    %al,0xe(%rdx)
   14ed8:	08 45 0b             	or     %al,0xb(%rbp)
   14edb:	4e 0a 0e             	rex.WRX or (%rsi),%r9b
   14ede:	28 44 0e 20          	sub    %al,0x20(%rsi,%rcx,1)
   14ee2:	41 0e                	rex.B (bad) 
   14ee4:	18 42 0e             	sbb    %al,0xe(%rdx)
   14ee7:	10 42 0e             	adc    %al,0xe(%rdx)
   14eea:	08 49 0b             	or     %cl,0xb(%rcx)
   14eed:	53                   	push   %rbx
   14eee:	0a 0e                	or     (%rsi),%cl
   14ef0:	28 47 0e             	sub    %al,0xe(%rdi)
   14ef3:	20 44 0e 18          	and    %al,0x18(%rsi,%rcx,1)
   14ef7:	42 0e                	rex.X (bad) 
   14ef9:	10 42 0e             	adc    %al,0xe(%rdx)
   14efc:	08 46 0b             	or     %al,0xb(%rsi)
   14eff:	00 10                	add    %dl,(%rax)
   14f01:	00 00                	add    %al,(%rax)
   14f03:	00 e4                	add    %ah,%ah
   14f05:	09 00                	or     %eax,(%rax)
   14f07:	00 68 1f             	add    %ch,0x1f(%rax)
   14f0a:	ff                   	(bad)  
   14f0b:	ff 05 00 00 00 00    	incl   0x0(%rip)        # 14f11 <__GNU_EH_FRAME_HDR+0x1251>
   14f11:	00 00                	add    %al,(%rax)
   14f13:	00 10                	add    %dl,(%rax)
   14f15:	00 00                	add    %al,(%rax)
   14f17:	00 f8                	add    %bh,%al
   14f19:	09 00                	or     %eax,(%rax)
   14f1b:	00 64 1f ff          	add    %ah,-0x1(%rdi,%rbx,1)
   14f1f:	ff 07                	incl   (%rdi)
   14f21:	00 00                	add    %al,(%rax)
   14f23:	00 00                	add    %al,(%rax)
   14f25:	00 00                	add    %al,(%rax)
   14f27:	00 10                	add    %dl,(%rax)
   14f29:	00 00                	add    %al,(%rax)
   14f2b:	00 0c 0a             	add    %cl,(%rdx,%rcx,1)
   14f2e:	00 00                	add    %al,(%rax)
   14f30:	60                   	(bad)  
   14f31:	1f                   	(bad)  
   14f32:	ff                   	(bad)  
   14f33:	ff 05 00 00 00 00    	incl   0x0(%rip)        # 14f39 <__GNU_EH_FRAME_HDR+0x1279>
   14f39:	00 00                	add    %al,(%rax)
   14f3b:	00 10                	add    %dl,(%rax)
   14f3d:	00 00                	add    %al,(%rax)
   14f3f:	00 20                	add    %ah,(%rax)
   14f41:	0a 00                	or     (%rax),%al
   14f43:	00 5c 1f ff          	add    %bl,-0x1(%rdi,%rbx,1)
   14f47:	ff 07                	incl   (%rdi)
   14f49:	00 00                	add    %al,(%rax)
   14f4b:	00 00                	add    %al,(%rax)
   14f4d:	00 00                	add    %al,(%rax)
   14f4f:	00 10                	add    %dl,(%rax)
   14f51:	00 00                	add    %al,(%rax)
   14f53:	00 34 0a             	add    %dh,(%rdx,%rcx,1)
   14f56:	00 00                	add    %al,(%rax)
   14f58:	58                   	pop    %rax
   14f59:	1f                   	(bad)  
   14f5a:	ff                   	(bad)  
   14f5b:	ff 05 00 00 00 00    	incl   0x0(%rip)        # 14f61 <__GNU_EH_FRAME_HDR+0x12a1>
   14f61:	00 00                	add    %al,(%rax)
   14f63:	00 10                	add    %dl,(%rax)
   14f65:	00 00                	add    %al,(%rax)
   14f67:	00 48 0a             	add    %cl,0xa(%rax)
   14f6a:	00 00                	add    %al,(%rax)
   14f6c:	54                   	push   %rsp
   14f6d:	1f                   	(bad)  
   14f6e:	ff                   	(bad)  
   14f6f:	ff 05 00 00 00 00    	incl   0x0(%rip)        # 14f75 <__GNU_EH_FRAME_HDR+0x12b5>
   14f75:	00 00                	add    %al,(%rax)
   14f77:	00 10                	add    %dl,(%rax)
   14f79:	00 00                	add    %al,(%rax)
   14f7b:	00 5c 0a 00          	add    %bl,0x0(%rdx,%rcx,1)
   14f7f:	00 50 1f             	add    %dl,0x1f(%rax)
   14f82:	ff                   	(bad)  
   14f83:	ff 05 00 00 00 00    	incl   0x0(%rip)        # 14f89 <__GNU_EH_FRAME_HDR+0x12c9>
   14f89:	00 00                	add    %al,(%rax)
   14f8b:	00 10                	add    %dl,(%rax)
   14f8d:	00 00                	add    %al,(%rax)
   14f8f:	00 70 0a             	add    %dh,0xa(%rax)
   14f92:	00 00                	add    %al,(%rax)
   14f94:	4c 1f                	rex.WR (bad) 
   14f96:	ff                   	(bad)  
   14f97:	ff 05 00 00 00 00    	incl   0x0(%rip)        # 14f9d <__GNU_EH_FRAME_HDR+0x12dd>
   14f9d:	00 00                	add    %al,(%rax)
   14f9f:	00 48 00             	add    %cl,0x0(%rax)
   14fa2:	00 00                	add    %al,(%rax)
   14fa4:	84 0a                	test   %cl,(%rdx)
   14fa6:	00 00                	add    %al,(%rax)
   14fa8:	48 1f                	rex.W (bad) 
   14faa:	ff                   	(bad)  
   14fab:	ff 5f 02             	lcall  *0x2(%rdi)
   14fae:	00 00                	add    %al,(%rax)
   14fb0:	00 46 0e             	add    %al,0xe(%rsi)
   14fb3:	10 8f 02 4c 0e 18    	adc    %cl,0x180e4c02(%rdi)
   14fb9:	8e 03                	mov    (%rbx),%es
   14fbb:	46 0e                	rex.RX (bad) 
   14fbd:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   14fc3:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff86315e0d <_end+0xffffffff862eac7d>
   14fc9:	06                   	(bad)  
   14fca:	44 0e                	rex.R (bad) 
   14fcc:	38 83 07 44 0e 70    	cmp    %al,0x700e4407(%rbx)
   14fd2:	03 38                	add    (%rax),%edi
   14fd4:	01 0a                	add    %ecx,(%rdx)
   14fd6:	0e                   	(bad)  
   14fd7:	38 41 0e             	cmp    %al,0xe(%rcx)
   14fda:	30 41 0e             	xor    %al,0xe(%rcx)
   14fdd:	28 42 0e             	sub    %al,0xe(%rdx)
   14fe0:	20 42 0e             	and    %al,0xe(%rdx)
   14fe3:	18 42 0e             	sbb    %al,0xe(%rdx)
   14fe6:	10 42 0e             	adc    %al,0xe(%rdx)
   14fe9:	08 48 0b             	or     %cl,0xb(%rax)
   14fec:	20 00                	and    %al,(%rax)
   14fee:	00 00                	add    %al,(%rax)
   14ff0:	d0 0a                	rorb   (%rdx)
   14ff2:	00 00                	add    %al,(%rax)
   14ff4:	5c                   	pop    %rsp
   14ff5:	21 ff                	and    %edi,%edi
   14ff7:	ff 5b 02             	lcall  *0x2(%rbx)
   14ffa:	00 00                	add    %al,(%rax)
   14ffc:	00 45 0e             	add    %al,0xe(%rbp)
   14fff:	10 83 02 47 0e 90    	adc    %al,-0x6ff1b8fe(%rbx)
   15005:	01 02                	add    %eax,(%rdx)
   15007:	42 0a 0e             	rex.X or (%rsi),%cl
   1500a:	10 41 0e             	adc    %al,0xe(%rcx)
   1500d:	08 41 0b             	or     %al,0xb(%rcx)
   15010:	28 00                	sub    %al,(%rax)
   15012:	00 00                	add    %al,(%rax)
   15014:	f4                   	hlt    
   15015:	0a 00                	or     (%rax),%al
   15017:	00 98 23 ff ff df    	add    %bl,-0x200000dd(%rax)
   1501d:	00 00                	add    %al,(%rax)
   1501f:	00 00                	add    %al,(%rax)
   15021:	45 0e                	rex.RB (bad) 
   15023:	10 86 02 41 0e 18    	adc    %al,0x180e4102(%rsi)
   15029:	83 03 47             	addl   $0x47,(%rbx)
   1502c:	0e                   	(bad)  
   1502d:	20 02                	and    %al,(%rdx)
   1502f:	bc 0a 0e 18 43       	mov    $0x43180e0a,%esp
   15034:	0e                   	(bad)  
   15035:	10 41 0e             	adc    %al,0xe(%rcx)
   15038:	08 41 0b             	or     %al,0xb(%rcx)
   1503b:	00 38                	add    %bh,(%rax)
   1503d:	00 00                	add    %al,(%rax)
   1503f:	00 20                	add    %ah,(%rax)
   15041:	0b 00                	or     (%rax),%eax
   15043:	00 4c 24 ff          	add    %cl,-0x1(%rsp)
   15047:	ff                   	(bad)  
   15048:	df 00                	filds  (%rax)
   1504a:	00 00                	add    %al,(%rax)
   1504c:	00 4d 0e             	add    %cl,0xe(%rbp)
   1504f:	10 8c 02 41 0e 18 86 	adc    %cl,-0x79e7f1bf(%rdx,%rax,1)
   15056:	03 41 0e             	add    0xe(%rcx),%eax
   15059:	20 83 04 02 97 0a    	and    %al,0xa970204(%rbx)
   1505f:	0e                   	(bad)  
   15060:	18 43 0e             	sbb    %al,0xe(%rbx)
   15063:	10 42 0e             	adc    %al,0xe(%rdx)
   15066:	08 45 0b             	or     %al,0xb(%rbp)
   15069:	58                   	pop    %rax
   1506a:	0a 0e                	or     (%rsi),%cl
   1506c:	18 46 0e             	sbb    %al,0xe(%rsi)
   1506f:	10 42 0e             	adc    %al,0xe(%rdx)
   15072:	08 48 0b             	or     %cl,0xb(%rax)
   15075:	00 00                	add    %al,(%rax)
   15077:	00 5c 00 00          	add    %bl,0x0(%rax,%rax,1)
   1507b:	00 5c 0b 00          	add    %bl,0x0(%rbx,%rcx,1)
   1507f:	00 80 ce ff ff b1    	add    %al,-0x4e000032(%rax)
   15085:	01 00                	add    %eax,(%rax)
   15087:	00 00                	add    %al,(%rax)
   15089:	46 0e                	rex.RX (bad) 
   1508b:	10 8d 02 45 0e 18    	adc    %cl,0x180e4502(%rbp)
   15091:	8c 03                	mov    %es,(%rbx)
   15093:	44 0e                	rex.R (bad) 
   15095:	20 86 04 43 0e 28    	and    %al,0x280e4304(%rsi)
   1509b:	83 05 46 0e 40 6a 0a 	addl   $0xa,0x6a400e46(%rip)        # 6a415ee8 <_end+0x6a3ead58>
   150a2:	0e                   	(bad)  
   150a3:	28 41 0e             	sub    %al,0xe(%rcx)
   150a6:	20 41 0e             	and    %al,0xe(%rcx)
   150a9:	18 42 0e             	sbb    %al,0xe(%rdx)
   150ac:	10 42 0e             	adc    %al,0xe(%rdx)
   150af:	08 48 0b             	or     %cl,0xb(%rax)
   150b2:	6a 0a                	push   $0xa
   150b4:	0e                   	(bad)  
   150b5:	28 41 0e             	sub    %al,0xe(%rcx)
   150b8:	20 41 0e             	and    %al,0xe(%rcx)
   150bb:	18 42 0e             	sbb    %al,0xe(%rdx)
   150be:	10 42 0e             	adc    %al,0xe(%rdx)
   150c1:	08 48 0b             	or     %cl,0xb(%rax)
   150c4:	44 0a 0e             	or     (%rsi),%r9b
   150c7:	28 46 0e             	sub    %al,0xe(%rsi)
   150ca:	20 41 0e             	and    %al,0xe(%rcx)
   150cd:	18 42 0e             	sbb    %al,0xe(%rdx)
   150d0:	10 42 0e             	adc    %al,0xe(%rdx)
   150d3:	08 49 0b             	or     %cl,0xb(%rcx)
   150d6:	00 00                	add    %al,(%rax)
   150d8:	10 00                	adc    %al,(%rax)
   150da:	00 00                	add    %al,(%rax)
   150dc:	bc 0b 00 00 90       	mov    $0x9000000b,%esp
   150e1:	24 ff                	and    $0xff,%al
   150e3:	ff 2e                	ljmp   *(%rsi)
   150e5:	00 00                	add    %al,(%rax)
   150e7:	00 00                	add    %al,(%rax)
   150e9:	00 00                	add    %al,(%rax)
   150eb:	00 18                	add    %bl,(%rax)
   150ed:	00 00                	add    %al,(%rax)
   150ef:	00 d0                	add    %dl,%al
   150f1:	0b 00                	or     (%rax),%eax
   150f3:	00 ac 24 ff ff 3b 00 	add    %ch,0x3bffff(%rsp)
   150fa:	00 00                	add    %al,(%rax)
   150fc:	00 45 0e             	add    %al,0xe(%rbp)
   150ff:	10 83 02 75 0e 08    	adc    %al,0x80e7502(%rbx)
   15105:	00 00                	add    %al,(%rax)
   15107:	00 2c 00             	add    %ch,(%rax,%rax,1)
   1510a:	00 00                	add    %al,(%rax)
   1510c:	ec                   	in     (%dx),%al
   1510d:	0b 00                	or     (%rax),%eax
   1510f:	00 d0                	add    %dl,%al
   15111:	24 ff                	and    $0xff,%al
   15113:	ff                   	(bad)  
   15114:	bc 00 00 00 00       	mov    $0x0,%esp
   15119:	45 0e                	rex.RB (bad) 
   1511b:	10 86 02 44 0e 18    	adc    %al,0x180e4402(%rsi)
   15121:	83 03 44             	addl   $0x44,(%rbx)
   15124:	0e                   	(bad)  
   15125:	30 02                	xor    %al,(%rdx)
   15127:	43 0a 0e             	rex.XB or (%r14),%cl
   1512a:	18 46 0e             	sbb    %al,0xe(%rsi)
   1512d:	10 41 0e             	adc    %al,0xe(%rcx)
   15130:	08 49 0b             	or     %cl,0xb(%rcx)
   15133:	00 00                	add    %al,(%rax)
   15135:	00 00                	add    %al,(%rax)
   15137:	00 10                	add    %dl,(%rax)
   15139:	00 00                	add    %al,(%rax)
   1513b:	00 1c 0c             	add    %bl,(%rsp,%rcx,1)
   1513e:	00 00                	add    %al,(%rax)
   15140:	60                   	(bad)  
   15141:	25 ff ff 10 00       	and    $0x10ffff,%eax
   15146:	00 00                	add    %al,(%rax)
   15148:	00 00                	add    %al,(%rax)
   1514a:	00 00                	add    %al,(%rax)
   1514c:	14 00                	adc    $0x0,%al
   1514e:	00 00                	add    %al,(%rax)
   15150:	30 0c 00             	xor    %cl,(%rax,%rax,1)
   15153:	00 5c 25 ff          	add    %bl,-0x1(%rbp,%riz,1)
   15157:	ff 22                	jmp    *(%rdx)
   15159:	00 00                	add    %al,(%rax)
   1515b:	00 00                	add    %al,(%rax)
   1515d:	48 0e                	rex.W (bad) 
   1515f:	10 54 0e 08          	adc    %dl,0x8(%rsi,%rcx,1)
   15163:	00 14 00             	add    %dl,(%rax,%rax,1)
   15166:	00 00                	add    %al,(%rax)
   15168:	48 0c 00             	rex.W or $0x0,%al
   1516b:	00 74 25 ff          	add    %dh,-0x1(%rbp,%riz,1)
   1516f:	ff 20                	jmp    *(%rax)
   15171:	00 00                	add    %al,(%rax)
   15173:	00 00                	add    %al,(%rax)
   15175:	48 0e                	rex.W (bad) 
   15177:	10 54 0e 08          	adc    %dl,0x8(%rsi,%rcx,1)
   1517b:	00 10                	add    %dl,(%rax)
   1517d:	00 00                	add    %al,(%rax)
   1517f:	00 60 0c             	add    %ah,0xc(%rax)
   15182:	00 00                	add    %al,(%rax)
   15184:	7c 25                	jl     151ab <__GNU_EH_FRAME_HDR+0x14eb>
   15186:	ff                   	(bad)  
   15187:	ff 61 00             	jmp    *0x0(%rcx)
   1518a:	00 00                	add    %al,(%rax)
   1518c:	00 00                	add    %al,(%rax)
   1518e:	00 00                	add    %al,(%rax)
   15190:	10 00                	adc    %al,(%rax)
   15192:	00 00                	add    %al,(%rax)
   15194:	74 0c                	je     151a2 <__GNU_EH_FRAME_HDR+0x14e2>
   15196:	00 00                	add    %al,(%rax)
   15198:	d8 25 ff ff 53 00    	fsubs  0x53ffff(%rip)        # 55519d <_end+0x52a00d>
   1519e:	00 00                	add    %al,(%rax)
   151a0:	00 00                	add    %al,(%rax)
   151a2:	00 00                	add    %al,(%rax)
   151a4:	14 00                	adc    $0x0,%al
   151a6:	00 00                	add    %al,(%rax)
   151a8:	88 0c 00             	mov    %cl,(%rax,%rax,1)
   151ab:	00 24 26             	add    %ah,(%rsi,%riz,1)
   151ae:	ff                   	(bad)  
   151af:	ff 20                	jmp    *(%rax)
   151b1:	00 00                	add    %al,(%rax)
   151b3:	00 00                	add    %al,(%rax)
   151b5:	48 0e                	rex.W (bad) 
   151b7:	10 54 0e 08          	adc    %dl,0x8(%rsi,%rcx,1)
   151bb:	00 14 00             	add    %dl,(%rax,%rax,1)
   151be:	00 00                	add    %al,(%rax)
   151c0:	a0 0c 00 00 2c 26 ff 	movabs 0x78ffff262c00000c,%al
   151c7:	ff 78 
   151c9:	00 00                	add    %al,(%rax)
   151cb:	00 00                	add    %al,(%rax)
   151cd:	48 0e                	rex.W (bad) 
   151cf:	10 02                	adc    %al,(%rdx)
   151d1:	6c                   	insb   (%dx),%es:(%rdi)
   151d2:	0e                   	(bad)  
   151d3:	08 10                	or     %dl,(%rax)
   151d5:	00 00                	add    %al,(%rax)
   151d7:	00 b8 0c 00 00 94    	add    %bh,-0x6bfffff4(%rax)
   151dd:	26 ff                	es (bad) 
   151df:	ff 61 00             	jmp    *0x0(%rcx)
   151e2:	00 00                	add    %al,(%rax)
   151e4:	00 00                	add    %al,(%rax)
   151e6:	00 00                	add    %al,(%rax)
   151e8:	10 00                	adc    %al,(%rax)
   151ea:	00 00                	add    %al,(%rax)
   151ec:	cc                   	int3   
   151ed:	0c 00                	or     $0x0,%al
   151ef:	00 f0                	add    %dh,%al
   151f1:	26 ff                	es (bad) 
   151f3:	ff 53 00             	call   *0x0(%rbx)
   151f6:	00 00                	add    %al,(%rax)
   151f8:	00 00                	add    %al,(%rax)
   151fa:	00 00                	add    %al,(%rax)
   151fc:	14 00                	adc    $0x0,%al
   151fe:	00 00                	add    %al,(%rax)
   15200:	e0 0c                	loopne 1520e <__GNU_EH_FRAME_HDR+0x154e>
   15202:	00 00                	add    %al,(%rax)
   15204:	3c 27                	cmp    $0x27,%al
   15206:	ff                   	(bad)  
   15207:	ff 16                	call   *(%rsi)
   15209:	00 00                	add    %al,(%rax)
   1520b:	00 00                	add    %al,(%rax)
   1520d:	48 0e                	rex.W (bad) 
   1520f:	10 49 0e             	adc    %cl,0xe(%rcx)
   15212:	08 00                	or     %al,(%rax)
   15214:	10 00                	adc    %al,(%rax)
   15216:	00 00                	add    %al,(%rax)
   15218:	f8                   	clc    
   15219:	0c 00                	or     $0x0,%al
   1521b:	00 44 27 ff          	add    %al,-0x1(%rdi,%riz,1)
   1521f:	ff 43 00             	incl   0x0(%rbx)
   15222:	00 00                	add    %al,(%rax)
   15224:	00 00                	add    %al,(%rax)
   15226:	00 00                	add    %al,(%rax)
   15228:	24 00                	and    $0x0,%al
   1522a:	00 00                	add    %al,(%rax)
   1522c:	0c 0d                	or     $0xd,%al
   1522e:	00 00                	add    %al,(%rax)
   15230:	80 27 ff             	andb   $0xff,(%rdi)
   15233:	ff                   	(bad)  
   15234:	3f                   	(bad)  
   15235:	00 00                	add    %al,(%rax)
   15237:	00 00                	add    %al,(%rax)
   15239:	45 0e                	rex.RB (bad) 
   1523b:	10 86 02 44 0e 18    	adc    %al,0x180e4402(%rsi)
   15241:	83 03 47             	addl   $0x47,(%rbx)
   15244:	0e                   	(bad)  
   15245:	20 6a 0e             	and    %ch,0xe(%rdx)
   15248:	18 43 0e             	sbb    %al,0xe(%rbx)
   1524b:	10 41 0e             	adc    %al,0xe(%rcx)
   1524e:	08 00                	or     %al,(%rax)
   15250:	18 00                	sbb    %al,(%rax)
   15252:	00 00                	add    %al,(%rax)
   15254:	34 0d                	xor    $0xd,%al
   15256:	00 00                	add    %al,(%rax)
   15258:	98                   	cwtl   
   15259:	27                   	(bad)  
   1525a:	ff                   	(bad)  
   1525b:	ff 2e                	ljmp   *(%rsi)
   1525d:	00 00                	add    %al,(%rax)
   1525f:	00 00                	add    %al,(%rax)
   15261:	51                   	push   %rcx
   15262:	0e                   	(bad)  
   15263:	10 83 02 57 0e 08    	adc    %al,0x80e5702(%rbx)
   15269:	00 00                	add    %al,(%rax)
   1526b:	00 14 00             	add    %dl,(%rax,%rax,1)
   1526e:	00 00                	add    %al,(%rax)
   15270:	50                   	push   %rax
   15271:	0d 00 00 ac 27       	or     $0x27ac0000,%eax
   15276:	ff                   	(bad)  
   15277:	ff 22                	jmp    *(%rdx)
   15279:	00 00                	add    %al,(%rax)
   1527b:	00 00                	add    %al,(%rax)
   1527d:	48 0e                	rex.W (bad) 
   1527f:	10 59 0e             	adc    %bl,0xe(%rcx)
   15282:	08 00                	or     %al,(%rax)
   15284:	10 00                	adc    %al,(%rax)
   15286:	00 00                	add    %al,(%rax)
   15288:	68 0d 00 00 c4       	push   $0xffffffffc400000d
   1528d:	27                   	(bad)  
   1528e:	ff                   	(bad)  
   1528f:	ff 25 00 00 00 00    	jmp    *0x0(%rip)        # 15295 <__GNU_EH_FRAME_HDR+0x15d5>
   15295:	00 00                	add    %al,(%rax)
   15297:	00 14 00             	add    %dl,(%rax,%rax,1)
   1529a:	00 00                	add    %al,(%rax)
   1529c:	7c 0d                	jl     152ab <__GNU_EH_FRAME_HDR+0x15eb>
   1529e:	00 00                	add    %al,(%rax)
   152a0:	e0 27                	loopne 152c9 <__GNU_EH_FRAME_HDR+0x1609>
   152a2:	ff                   	(bad)  
   152a3:	ff 19                	lcall  *(%rcx)
   152a5:	00 00                	add    %al,(%rax)
   152a7:	00 00                	add    %al,(%rax)
   152a9:	48 0e                	rex.W (bad) 
   152ab:	10 49 0e             	adc    %cl,0xe(%rcx)
   152ae:	08 00                	or     %al,(%rax)
   152b0:	10 00                	adc    %al,(%rax)
   152b2:	00 00                	add    %al,(%rax)
   152b4:	94                   	xchg   %eax,%esp
   152b5:	0d 00 00 e8 27       	or     $0x27e80000,%eax
   152ba:	ff                   	(bad)  
   152bb:	ff 16                	call   *(%rsi)
   152bd:	00 00                	add    %al,(%rax)
   152bf:	00 00                	add    %al,(%rax)
   152c1:	00 00                	add    %al,(%rax)
   152c3:	00 10                	add    %dl,(%rax)
   152c5:	00 00                	add    %al,(%rax)
   152c7:	00 a8 0d 00 00 f4    	add    %ch,-0xbfffff3(%rax)
   152cd:	27                   	(bad)  
   152ce:	ff                   	(bad)  
   152cf:	ff 13                	call   *(%rbx)
   152d1:	00 00                	add    %al,(%rax)
   152d3:	00 00                	add    %al,(%rax)
   152d5:	00 00                	add    %al,(%rax)
   152d7:	00 1c 00             	add    %bl,(%rax,%rax,1)
   152da:	00 00                	add    %al,(%rax)
   152dc:	bc 0d 00 00 00       	mov    $0xd,%esp
   152e1:	28 ff                	sub    %bh,%bh
   152e3:	ff 2f                	ljmp   *(%rdi)
   152e5:	00 00                	add    %al,(%rax)
   152e7:	00 00                	add    %al,(%rax)
   152e9:	48 0e                	rex.W (bad) 
   152eb:	10 59 0a             	adc    %bl,0xa(%rcx)
   152ee:	0e                   	(bad)  
   152ef:	08 47 0b             	or     %al,0xb(%rdi)
   152f2:	46 0e                	rex.RX (bad) 
   152f4:	08 00                	or     %al,(%rax)
   152f6:	00 00                	add    %al,(%rax)
   152f8:	20 00                	and    %al,(%rax)
   152fa:	00 00                	add    %al,(%rax)
   152fc:	dc 0d 00 00 10 28    	fmull  0x28100000(%rip)        # 28115302 <_end+0x280ea172>
   15302:	ff                   	(bad)  
   15303:	ff                   	(bad)  
   15304:	ed                   	in     (%dx),%eax
   15305:	03 00                	add    (%rax),%eax
   15307:	00 00                	add    %al,(%rax)
   15309:	45 0e                	rex.RB (bad) 
   1530b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
   15311:	49 8f 03             	rex.WB pop (%r11)
   15314:	8e 04 8d 05 8c 06 83 	mov    -0x7cf973fb(,%rcx,4),%es
   1531b:	07                   	(bad)  
   1531c:	38 00                	cmp    %al,(%rax)
   1531e:	00 00                	add    %al,(%rax)
   15320:	00 0e                	add    %cl,(%rsi)
   15322:	00 00                	add    %al,(%rax)
   15324:	dc 2b                	fsubrl (%rbx)
   15326:	ff                   	(bad)  
   15327:	ff 4e 01             	decl   0x1(%rsi)
   1532a:	00 00                	add    %al,(%rax)
   1532c:	00 46 0e             	add    %al,0xe(%rsi)
   1532f:	10 8d 02 42 0e 18    	adc    %cl,0x180e4202(%rbp)
   15335:	8c 03                	mov    %es,(%rbx)
   15337:	44 0e                	rex.R (bad) 
   15339:	20 86 04 44 0e 28    	and    %al,0x280e4404(%rsi)
   1533f:	83 05 44 0e 40 02 bb 	addl   $0xffffffbb,0x2400e44(%rip)        # 241618a <_end+0x23eaffa>
   15346:	0a 0e                	or     (%rsi),%cl
   15348:	28 44 0e 20          	sub    %al,0x20(%rsi,%rcx,1)
   1534c:	41 0e                	rex.B (bad) 
   1534e:	18 42 0e             	sbb    %al,0xe(%rdx)
   15351:	10 42 0e             	adc    %al,0xe(%rdx)
   15354:	08 48 0b             	or     %cl,0xb(%rax)
   15357:	00 38                	add    %bh,(%rax)
   15359:	00 00                	add    %al,(%rax)
   1535b:	00 3c 0e             	add    %bh,(%rsi,%rcx,1)
   1535e:	00 00                	add    %al,(%rax)
   15360:	f0 2c ff             	lock sub $0xff,%al
   15363:	ff ab 00 00 00 00    	ljmp   *0x0(%rbx)
   15369:	4e 0e                	rex.WRX (bad) 
   1536b:	10 86 02 48 0e 18    	adc    %al,0x180e4802(%rsi)
   15371:	83 03 4a             	addl   $0x4a,(%rbx)
   15374:	0e                   	(bad)  
   15375:	20 7d 0a             	and    %bh,0xa(%rbp)
   15378:	0e                   	(bad)  
   15379:	18 43 0e             	sbb    %al,0xe(%rbx)
   1537c:	10 41 0e             	adc    %al,0xe(%rcx)
   1537f:	08 47 0b             	or     %al,0xb(%rdi)
   15382:	5c                   	pop    %rsp
   15383:	0a 0e                	or     (%rsi),%cl
   15385:	18 46 0e             	sbb    %al,0xe(%rsi)
   15388:	10 41 0e             	adc    %al,0xe(%rcx)
   1538b:	08 45 0b             	or     %al,0xb(%rbp)
   1538e:	58                   	pop    %rax
   1538f:	0e                   	(bad)  
   15390:	08 c3                	or     %al,%bl
   15392:	c6 00 48             	movb   $0x48,(%rax)
   15395:	00 00                	add    %al,(%rax)
   15397:	00 78 0e             	add    %bh,0xe(%rax)
   1539a:	00 00                	add    %al,(%rax)
   1539c:	64 2d ff ff af 03    	fs sub $0x3afffff,%eax
   153a2:	00 00                	add    %al,(%rax)
   153a4:	00 46 0e             	add    %al,0xe(%rsi)
   153a7:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   153ad:	8e 03                	mov    (%rbx),%es
   153af:	42 0e                	rex.X (bad) 
   153b1:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   153b7:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff863161fe <_end+0xffffffff862eb06e>
   153bd:	06                   	(bad)  
   153be:	41 0e                	rex.B (bad) 
   153c0:	38 83 07 47 0e 40    	cmp    %al,0x400e4707(%rbx)
   153c6:	02 5e 0a             	add    0xa(%rsi),%bl
   153c9:	0e                   	(bad)  
   153ca:	38 41 0e             	cmp    %al,0xe(%rcx)
   153cd:	30 41 0e             	xor    %al,0xe(%rcx)
   153d0:	28 42 0e             	sub    %al,0xe(%rdx)
   153d3:	20 42 0e             	and    %al,0xe(%rdx)
   153d6:	18 42 0e             	sbb    %al,0xe(%rdx)
   153d9:	10 42 0e             	adc    %al,0xe(%rdx)
   153dc:	08 43 0b             	or     %al,0xb(%rbx)
   153df:	00 14 00             	add    %dl,(%rax,%rax,1)
   153e2:	00 00                	add    %al,(%rax)
   153e4:	c4                   	(bad)  
   153e5:	0e                   	(bad)  
   153e6:	00 00                	add    %al,(%rax)
   153e8:	c8 30 ff ff          	enter  $0xff30,$0xff
   153ec:	25 00 00 00 00       	and    $0x0,%eax
   153f1:	48 0e                	rex.W (bad) 
   153f3:	10 5c 0e 08          	adc    %bl,0x8(%rsi,%rcx,1)
   153f7:	00 10                	add    %dl,(%rax)
   153f9:	00 00                	add    %al,(%rax)
   153fb:	00 dc                	add    %bl,%ah
   153fd:	0e                   	(bad)  
   153fe:	00 00                	add    %al,(%rax)
   15400:	e0 30                	loopne 15432 <__GNU_EH_FRAME_HDR+0x1772>
   15402:	ff                   	(bad)  
   15403:	ff 6e 00             	ljmp   *0x0(%rsi)
   15406:	00 00                	add    %al,(%rax)
   15408:	00 00                	add    %al,(%rax)
   1540a:	00 00                	add    %al,(%rax)
   1540c:	34 00                	xor    $0x0,%al
   1540e:	00 00                	add    %al,(%rax)
   15410:	f0 0e                	lock (bad) 
   15412:	00 00                	add    %al,(%rax)
   15414:	3c 31                	cmp    $0x31,%al
   15416:	ff                   	(bad)  
   15417:	ff                   	(bad)  
   15418:	d8 01                	fadds  (%rcx)
   1541a:	00 00                	add    %al,(%rax)
   1541c:	00 54 0e 10          	add    %dl,0x10(%rsi,%rcx,1)
   15420:	86 02                	xchg   %al,(%rdx)
   15422:	4d 0e                	rex.WRB (bad) 
   15424:	18 83 03 02 a7 0a    	sbb    %al,0xaa70203(%rbx)
   1542a:	0e                   	(bad)  
   1542b:	10 41 0e             	adc    %al,0xe(%rcx)
   1542e:	08 47 0b             	or     %al,0xb(%rdi)
   15431:	02 44 0a 0e          	add    0xe(%rdx,%rcx,1),%al
   15435:	10 41 0e             	adc    %al,0xe(%rcx)
   15438:	08 4b 0b             	or     %cl,0xb(%rbx)
   1543b:	02 b5 0e 08 c3 c6    	add    -0x393cf7f2(%rbp),%dh
   15441:	00 00                	add    %al,(%rax)
   15443:	00 78 00             	add    %bh,0x0(%rax)
   15446:	00 00                	add    %al,(%rax)
   15448:	28 0f                	sub    %cl,(%rdi)
   1544a:	00 00                	add    %al,(%rax)
   1544c:	e4 32                	in     $0x32,%al
   1544e:	ff                   	(bad)  
   1544f:	ff 21                	jmp    *(%rcx)
   15451:	02 00                	add    (%rax),%al
   15453:	00 00                	add    %al,(%rax)
   15455:	66 0e                	data16 (bad) 
   15457:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   1545d:	8e 03                	mov    (%rbx),%es
   1545f:	42 0e                	rex.X (bad) 
   15461:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   15467:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff863162ae <_end+0xffffffff862eb11e>
   1546d:	06                   	(bad)  
   1546e:	41 0e                	rex.B (bad) 
   15470:	38 83 07 47 0e 40    	cmp    %al,0x400e4707(%rbx)
   15476:	03 0b                	add    (%rbx),%ecx
   15478:	01 0a                	add    %ecx,(%rdx)
   1547a:	0e                   	(bad)  
   1547b:	38 46 0e             	cmp    %al,0xe(%rsi)
   1547e:	30 41 0e             	xor    %al,0xe(%rcx)
   15481:	28 42 0e             	sub    %al,0xe(%rdx)
   15484:	20 42 0e             	and    %al,0xe(%rdx)
   15487:	18 42 0e             	sbb    %al,0xe(%rdx)
   1548a:	10 42 0e             	adc    %al,0xe(%rdx)
   1548d:	08 41 0b             	or     %al,0xb(%rcx)
   15490:	02 90 0e 08 c3 c6    	add    -0x393cf7f2(%rax),%dl
   15496:	cc                   	int3   
   15497:	cd ce                	int    $0xce
   15499:	cf                   	iret   
   1549a:	50                   	push   %rax
   1549b:	0e                   	(bad)  
   1549c:	40 83 07 86          	rex addl $0xffffff86,(%rdi)
   154a0:	06                   	(bad)  
   154a1:	8c 05 8d 04 8e 03    	mov    %es,0x38e048d(%rip)        # 38f5934 <_end+0x38ca7a4>
   154a7:	8f 02                	pop    (%rdx)
   154a9:	64 0e                	fs (bad) 
   154ab:	38 43 0e             	cmp    %al,0xe(%rbx)
   154ae:	30 41 0e             	xor    %al,0xe(%rcx)
   154b1:	28 42 0e             	sub    %al,0xe(%rdx)
   154b4:	20 42 0e             	and    %al,0xe(%rdx)
   154b7:	18 42 0e             	sbb    %al,0xe(%rdx)
   154ba:	10 42 0e             	adc    %al,0xe(%rdx)
   154bd:	08 00                	or     %al,(%rax)
   154bf:	00 10                	add    %dl,(%rax)
   154c1:	00 00                	add    %al,(%rax)
   154c3:	00 a4 0f 00 00 98 34 	add    %ah,0x34980000(%rdi,%rcx,1)
   154ca:	ff                   	(bad)  
   154cb:	ff 96 00 00 00 00    	call   *0x0(%rsi)
   154d1:	00 00                	add    %al,(%rax)
   154d3:	00 10                	add    %dl,(%rax)
   154d5:	00 00                	add    %al,(%rax)
   154d7:	00 b8 0f 00 00 24    	add    %bh,0x2400000f(%rax)
   154dd:	35 ff ff e4 00       	xor    $0xe4ffff,%eax
   154e2:	00 00                	add    %al,(%rax)
   154e4:	00 00                	add    %al,(%rax)
   154e6:	00 00                	add    %al,(%rax)
   154e8:	10 00                	adc    %al,(%rax)
   154ea:	00 00                	add    %al,(%rax)
   154ec:	cc                   	int3   
   154ed:	0f 00 00             	sldt   (%rax)
   154f0:	00 36                	add    %dh,(%rsi)
   154f2:	ff                   	(bad)  
   154f3:	ff e4                	jmp    *%rsp
   154f5:	00 00                	add    %al,(%rax)
   154f7:	00 00                	add    %al,(%rax)
   154f9:	00 00                	add    %al,(%rax)
   154fb:	00 50 00             	add    %dl,0x0(%rax)
   154fe:	00 00                	add    %al,(%rax)
   15500:	e0 0f                	loopne 15511 <__GNU_EH_FRAME_HDR+0x1851>
   15502:	00 00                	add    %al,(%rax)
   15504:	dc 36                	fdivl  (%rsi)
   15506:	ff                   	(bad)  
   15507:	ff d1                	call   *%rcx
   15509:	01 00                	add    %eax,(%rax)
   1550b:	00 00                	add    %al,(%rax)
   1550d:	4f 0e                	rex.WRXB (bad) 
   1550f:	10 8e 02 42 0e 18    	adc    %cl,0x180e4202(%rsi)
   15515:	8d 03                	lea    (%rbx),%eax
   15517:	45 0e                	rex.RB (bad) 
   15519:	20 8c 04 41 0e 28 86 	and    %cl,-0x79d7f1bf(%rsp,%rax,1)
   15520:	05 41 0e 30 83       	add    $0x83300e41,%eax
   15525:	06                   	(bad)  
   15526:	02 ce                	add    %dh,%cl
   15528:	0a 0e                	or     (%rsi),%cl
   1552a:	28 41 0e             	sub    %al,0xe(%rcx)
   1552d:	20 42 0e             	and    %al,0xe(%rdx)
   15530:	18 42 0e             	sbb    %al,0xe(%rdx)
   15533:	10 42 0e             	adc    %al,0xe(%rdx)
   15536:	08 43 0b             	or     %al,0xb(%rbx)
   15539:	02 d1                	add    %cl,%dl
   1553b:	0e                   	(bad)  
   1553c:	28 43 0e             	sub    %al,0xe(%rbx)
   1553f:	20 42 0e             	and    %al,0xe(%rdx)
   15542:	18 42 0e             	sbb    %al,0xe(%rdx)
   15545:	10 42 0e             	adc    %al,0xe(%rdx)
   15548:	08 41 c3             	or     %al,-0x3d(%rcx)
   1554b:	c6                   	(bad)  
   1554c:	cc                   	int3   
   1554d:	cd ce                	int    $0xce
   1554f:	00 4c 00 00          	add    %cl,0x0(%rax,%rax,1)
   15553:	00 34 10             	add    %dh,(%rax,%rdx,1)
   15556:	00 00                	add    %al,(%rax)
   15558:	68 38 ff ff fb       	push   $0xfffffffffbffff38
   1555d:	00 00                	add    %al,(%rax)
   1555f:	00 00                	add    %al,(%rax)
   15561:	4f 0e                	rex.WRXB (bad) 
   15563:	10 8d 02 45 0e 18    	adc    %cl,0x180e4502(%rbp)
   15569:	8c 03                	mov    %es,(%rbx)
   1556b:	41 0e                	rex.B (bad) 
   1556d:	20 86 04 41 0e 28    	and    %al,0x280e4104(%rsi)
   15573:	83 05 44 0e 30 02 be 	addl   $0xffffffbe,0x2300e44(%rip)        # 23163be <_end+0x22eb22e>
   1557a:	0a 0e                	or     (%rsi),%cl
   1557c:	28 46 0e             	sub    %al,0xe(%rsi)
   1557f:	20 41 0e             	and    %al,0xe(%rcx)
   15582:	18 42 0e             	sbb    %al,0xe(%rdx)
   15585:	10 42 0e             	adc    %al,0xe(%rdx)
   15588:	08 45 0b             	or     %al,0xb(%rbp)
   1558b:	44 0e                	rex.R (bad) 
   1558d:	28 43 0e             	sub    %al,0xe(%rbx)
   15590:	20 41 0e             	and    %al,0xe(%rcx)
   15593:	18 42 0e             	sbb    %al,0xe(%rdx)
   15596:	10 42 0e             	adc    %al,0xe(%rdx)
   15599:	08 41 c3             	or     %al,-0x3d(%rcx)
   1559c:	c6                   	(bad)  
   1559d:	cc                   	int3   
   1559e:	cd 00                	int    $0x0
   155a0:	38 00                	cmp    %al,(%rax)
   155a2:	00 00                	add    %al,(%rax)
   155a4:	84 10                	test   %dl,(%rax)
   155a6:	00 00                	add    %al,(%rax)
   155a8:	18 39                	sbb    %bh,(%rcx)
   155aa:	ff                   	(bad)  
   155ab:	ff 26                	jmp    *(%rsi)
   155ad:	01 00                	add    %eax,(%rax)
   155af:	00 00                	add    %al,(%rax)
   155b1:	46 0e                	rex.RX (bad) 
   155b3:	10 8d 02 45 0e 18    	adc    %cl,0x180e4502(%rbp)
   155b9:	8c 03                	mov    %es,(%rbx)
   155bb:	44 0e                	rex.R (bad) 
   155bd:	20 86 04 44 0e 28    	and    %al,0x280e4404(%rsi)
   155c3:	83 05 44 0e 40 02 9d 	addl   $0xffffff9d,0x2400e44(%rip)        # 241640e <_end+0x23eb27e>
   155ca:	0a 0e                	or     (%rsi),%cl
   155cc:	28 41 0e             	sub    %al,0xe(%rcx)
   155cf:	20 41 0e             	and    %al,0xe(%rcx)
   155d2:	18 42 0e             	sbb    %al,0xe(%rdx)
   155d5:	10 42 0e             	adc    %al,0xe(%rdx)
   155d8:	08 46 0b             	or     %al,0xb(%rsi)
   155db:	00 10                	add    %dl,(%rax)
   155dd:	00 00                	add    %al,(%rax)
   155df:	00 c0                	add    %al,%al
   155e1:	10 00                	adc    %al,(%rax)
   155e3:	00 0c 3a             	add    %cl,(%rdx,%rdi,1)
   155e6:	ff                   	(bad)  
   155e7:	ff 12                	call   *(%rdx)
   155e9:	00 00                	add    %al,(%rax)
   155eb:	00 00                	add    %al,(%rax)
   155ed:	00 00                	add    %al,(%rax)
   155ef:	00 28                	add    %ch,(%rax)
   155f1:	00 00                	add    %al,(%rax)
   155f3:	00 d4                	add    %dl,%ah
   155f5:	10 00                	adc    %al,(%rax)
   155f7:	00 18                	add    %bl,(%rax)
   155f9:	3a ff                	cmp    %bh,%bh
   155fb:	ff 97 00 00 00 00    	call   *0x0(%rdi)
   15601:	45 0e                	rex.RB (bad) 
   15603:	10 86 02 41 0e 18    	adc    %al,0x180e4102(%rsi)
   15609:	83 03 44             	addl   $0x44,(%rbx)
   1560c:	0e                   	(bad)  
   1560d:	40 02 85 0a 0e 18 41 	rex add 0x41180e0a(%rbp),%al
   15614:	0e                   	(bad)  
   15615:	10 41 0e             	adc    %al,0xe(%rcx)
   15618:	08 41 0b             	or     %al,0xb(%rcx)
   1561b:	00 28                	add    %ch,(%rax)
   1561d:	00 00                	add    %al,(%rax)
   1561f:	00 00                	add    %al,(%rax)
   15621:	11 00                	adc    %eax,(%rax)
   15623:	00 8c 3a ff ff c7 00 	add    %cl,0xc7ffff(%rdx,%rdi,1)
   1562a:	00 00                	add    %al,(%rax)
   1562c:	00 45 0e             	add    %al,0xe(%rbp)
   1562f:	10 86 02 41 0e 18    	adc    %al,0x180e4102(%rsi)
   15635:	83 03 44             	addl   $0x44,(%rbx)
   15638:	0e                   	(bad)  
   15639:	40 02 b5 0a 0e 18 41 	add    0x41180e0a(%rbp),%sil
   15640:	0e                   	(bad)  
   15641:	10 41 0e             	adc    %al,0xe(%rcx)
   15644:	08 41 0b             	or     %al,0xb(%rcx)
   15647:	00 10                	add    %dl,(%rax)
   15649:	00 00                	add    %al,(%rax)
   1564b:	00 2c 11             	add    %ch,(%rcx,%rdx,1)
   1564e:	00 00                	add    %al,(%rax)
   15650:	c2 ca ff             	ret    $0xffca
   15653:	ff 01                	incl   (%rcx)
   15655:	00 00                	add    %al,(%rax)
   15657:	00 00                	add    %al,(%rax)
   15659:	00 00                	add    %al,(%rax)
   1565b:	00 10                	add    %dl,(%rax)
   1565d:	00 00                	add    %al,(%rax)
   1565f:	00 40 11             	add    %al,0x11(%rax)
   15662:	00 00                	add    %al,(%rax)
   15664:	af                   	scas   %es:(%rdi),%eax
   15665:	ca ff ff             	lret   $0xffff
   15668:	02 00                	add    (%rax),%al
   1566a:	00 00                	add    %al,(%rax)
   1566c:	00 00                	add    %al,(%rax)
   1566e:	00 00                	add    %al,(%rax)
   15670:	10 00                	adc    %al,(%rax)
   15672:	00 00                	add    %al,(%rax)
   15674:	54                   	push   %rsp
   15675:	11 00                	adc    %eax,(%rax)
   15677:	00 9d ca ff ff 02    	add    %bl,0x2ffffca(%rbp)
   1567d:	00 00                	add    %al,(%rax)
   1567f:	00 00                	add    %al,(%rax)
   15681:	00 00                	add    %al,(%rax)
   15683:	00 10                	add    %dl,(%rax)
   15685:	00 00                	add    %al,(%rax)
   15687:	00 68 11             	add    %ch,0x11(%rax)
   1568a:	00 00                	add    %al,(%rax)
   1568c:	8b ca                	mov    %edx,%ecx
   1568e:	ff                   	(bad)  
   1568f:	ff 02                	incl   (%rdx)
   15691:	00 00                	add    %al,(%rax)
   15693:	00 00                	add    %al,(%rax)
   15695:	00 00                	add    %al,(%rax)
   15697:	00 10                	add    %dl,(%rax)
   15699:	00 00                	add    %al,(%rax)
   1569b:	00 7c 11 00          	add    %bh,0x0(%rcx,%rdx,1)
   1569f:	00 79 ca             	add    %bh,-0x36(%rcx)
   156a2:	ff                   	(bad)  
   156a3:	ff 02                	incl   (%rdx)
   156a5:	00 00                	add    %al,(%rax)
   156a7:	00 00                	add    %al,(%rax)
   156a9:	00 00                	add    %al,(%rax)
   156ab:	00 10                	add    %dl,(%rax)
   156ad:	00 00                	add    %al,(%rax)
   156af:	00 90 11 00 00 67    	add    %dl,0x67000011(%rax)
   156b5:	ca ff ff             	lret   $0xffff
   156b8:	02 00                	add    (%rax),%al
   156ba:	00 00                	add    %al,(%rax)
   156bc:	00 00                	add    %al,(%rax)
   156be:	00 00                	add    %al,(%rax)
   156c0:	10 00                	adc    %al,(%rax)
   156c2:	00 00                	add    %al,(%rax)
   156c4:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
   156c5:	11 00                	adc    %eax,(%rax)
   156c7:	00 55 ca             	add    %dl,-0x36(%rbp)
   156ca:	ff                   	(bad)  
   156cb:	ff 02                	incl   (%rdx)
   156cd:	00 00                	add    %al,(%rax)
   156cf:	00 00                	add    %al,(%rax)
   156d1:	00 00                	add    %al,(%rax)
   156d3:	00 10                	add    %dl,(%rax)
   156d5:	00 00                	add    %al,(%rax)
   156d7:	00 b8 11 00 00 43    	add    %bh,0x43000011(%rax)
   156dd:	ca ff ff             	lret   $0xffff
   156e0:	02 00                	add    (%rax),%al
   156e2:	00 00                	add    %al,(%rax)
   156e4:	00 00                	add    %al,(%rax)
   156e6:	00 00                	add    %al,(%rax)
   156e8:	10 00                	adc    %al,(%rax)
   156ea:	00 00                	add    %al,(%rax)
   156ec:	cc                   	int3   
   156ed:	11 00                	adc    %eax,(%rax)
   156ef:	00 31                	add    %dh,(%rcx)
   156f1:	ca ff ff             	lret   $0xffff
   156f4:	03 00                	add    (%rax),%eax
   156f6:	00 00                	add    %al,(%rax)
   156f8:	00 00                	add    %al,(%rax)
   156fa:	00 00                	add    %al,(%rax)
   156fc:	10 00                	adc    %al,(%rax)
   156fe:	00 00                	add    %al,(%rax)
   15700:	e0 11                	loopne 15713 <__GNU_EH_FRAME_HDR+0x1a53>
   15702:	00 00                	add    %al,(%rax)
   15704:	20 ca                	and    %cl,%dl
   15706:	ff                   	(bad)  
   15707:	ff 03                	incl   (%rbx)
   15709:	00 00                	add    %al,(%rax)
   1570b:	00 00                	add    %al,(%rax)
   1570d:	00 00                	add    %al,(%rax)
   1570f:	00 10                	add    %dl,(%rax)
   15711:	00 00                	add    %al,(%rax)
   15713:	00 f4                	add    %dh,%ah
   15715:	11 00                	adc    %eax,(%rax)
   15717:	00 0f                	add    %cl,(%rdi)
   15719:	ca ff ff             	lret   $0xffff
   1571c:	03 00                	add    (%rax),%eax
   1571e:	00 00                	add    %al,(%rax)
   15720:	00 00                	add    %al,(%rax)
   15722:	00 00                	add    %al,(%rax)
   15724:	10 00                	adc    %al,(%rax)
   15726:	00 00                	add    %al,(%rax)
   15728:	08 12                	or     %dl,(%rdx)
   1572a:	00 00                	add    %al,(%rax)
   1572c:	fe c9                	dec    %cl
   1572e:	ff                   	(bad)  
   1572f:	ff 03                	incl   (%rbx)
   15731:	00 00                	add    %al,(%rax)
   15733:	00 00                	add    %al,(%rax)
   15735:	00 00                	add    %al,(%rax)
   15737:	00 10                	add    %dl,(%rax)
   15739:	00 00                	add    %al,(%rax)
   1573b:	00 1c 12             	add    %bl,(%rdx,%rdx,1)
   1573e:	00 00                	add    %al,(%rax)
   15740:	ed                   	in     (%dx),%eax
   15741:	c9                   	leave  
   15742:	ff                   	(bad)  
   15743:	ff 03                	incl   (%rbx)
   15745:	00 00                	add    %al,(%rax)
   15747:	00 00                	add    %al,(%rax)
   15749:	00 00                	add    %al,(%rax)
   1574b:	00 10                	add    %dl,(%rax)
   1574d:	00 00                	add    %al,(%rax)
   1574f:	00 30                	add    %dh,(%rax)
   15751:	12 00                	adc    (%rax),%al
   15753:	00 dc                	add    %bl,%ah
   15755:	c9                   	leave  
   15756:	ff                   	(bad)  
   15757:	ff 03                	incl   (%rbx)
   15759:	00 00                	add    %al,(%rax)
   1575b:	00 00                	add    %al,(%rax)
   1575d:	00 00                	add    %al,(%rax)
   1575f:	00 10                	add    %dl,(%rax)
   15761:	00 00                	add    %al,(%rax)
   15763:	00 44 12 00          	add    %al,0x0(%rdx,%rdx,1)
   15767:	00 cb                	add    %cl,%bl
   15769:	c9                   	leave  
   1576a:	ff                   	(bad)  
   1576b:	ff 03                	incl   (%rbx)
   1576d:	00 00                	add    %al,(%rax)
   1576f:	00 00                	add    %al,(%rax)
   15771:	00 00                	add    %al,(%rax)
   15773:	00 10                	add    %dl,(%rax)
   15775:	00 00                	add    %al,(%rax)
   15777:	00 58 12             	add    %bl,0x12(%rax)
   1577a:	00 00                	add    %al,(%rax)
   1577c:	ba c9 ff ff 03       	mov    $0x3ffffc9,%edx
   15781:	00 00                	add    %al,(%rax)
   15783:	00 00                	add    %al,(%rax)
   15785:	00 00                	add    %al,(%rax)
   15787:	00 1c 00             	add    %bl,(%rax,%rax,1)
   1578a:	00 00                	add    %al,(%rax)
   1578c:	6c                   	insb   (%dx),%es:(%rdi)
   1578d:	12 00                	adc    (%rax),%al
   1578f:	00 f0                	add    %dh,%al
   15791:	39 ff                	cmp    %edi,%edi
   15793:	ff 17                	call   *(%rdi)
   15795:	00 00                	add    %al,(%rax)
   15797:	00 00                	add    %al,(%rax)
   15799:	45 0e                	rex.RB (bad) 
   1579b:	10 83 02 51 0e 08    	adc    %al,0x80e5102(%rbx)
   157a1:	00 00                	add    %al,(%rax)
   157a3:	00 00                	add    %al,(%rax)
   157a5:	00 00                	add    %al,(%rax)
   157a7:	00 18                	add    %bl,(%rax)
   157a9:	00 00                	add    %al,(%rax)
   157ab:	00 8c 12 00 00 b3 cd 	add    %cl,-0x324d0000(%rdx,%rdx,1)
   157b2:	ff                   	(bad)  
   157b3:	ff 43 01             	incl   0x1(%rbx)
   157b6:	00 00                	add    %al,(%rax)
   157b8:	00 02                	add    %al,(%rdx)
   157ba:	4b 0e                	rex.WXB (bad) 
   157bc:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
   157c2:	00 00                	add    %al,(%rax)
   157c4:	18 00                	sbb    %al,(%rax)
   157c6:	00 00                	add    %al,(%rax)
   157c8:	a8 12                	test   $0x12,%al
   157ca:	00 00                	add    %al,(%rax)
   157cc:	17                   	(bad)  
   157cd:	d0 ff                	sar    %bh
   157cf:	ff 0f                	decl   (%rdi)
   157d1:	00 00                	add    %al,(%rax)
   157d3:	00 00                	add    %al,(%rax)
   157d5:	41 0e                	rex.B (bad) 
   157d7:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
   157dd:	00 00                	add    %al,(%rax)
   157df:	00 10                	add    %dl,(%rax)
   157e1:	00 00                	add    %al,(%rax)
   157e3:	00 c4                	add    %al,%ah
   157e5:	12 00                	adc    (%rax),%al
   157e7:	00 7c d0 ff          	add    %bh,-0x1(%rax,%rdx,8)
   157eb:	ff 1c 00             	lcall  *(%rax,%rax,1)
   157ee:	00 00                	add    %al,(%rax)
   157f0:	00 00                	add    %al,(%rax)
   157f2:	00 00                	add    %al,(%rax)
   157f4:	10 00                	adc    %al,(%rax)
   157f6:	00 00                	add    %al,(%rax)
   157f8:	d8 12                	fcoms  (%rdx)
   157fa:	00 00                	add    %al,(%rax)
   157fc:	88 d0                	mov    %dl,%al
   157fe:	ff                   	(bad)  
   157ff:	ff 1b                	lcall  *(%rbx)
   15801:	00 00                	add    %al,(%rax)
   15803:	00 00                	add    %al,(%rax)
   15805:	00 00                	add    %al,(%rax)
   15807:	00 10                	add    %dl,(%rax)
   15809:	00 00                	add    %al,(%rax)
   1580b:	00 ec                	add    %ch,%ah
   1580d:	12 00                	adc    (%rax),%al
   1580f:	00 93 d0 ff ff 1c    	add    %dl,0x1cffffd0(%rbx)
   15815:	00 00                	add    %al,(%rax)
   15817:	00 00                	add    %al,(%rax)
   15819:	00 00                	add    %al,(%rax)
   1581b:	00 10                	add    %dl,(%rax)
   1581d:	00 00                	add    %al,(%rax)
   1581f:	00 00                	add    %al,(%rax)
   15821:	13 00                	adc    (%rax),%eax
   15823:	00 9f d0 ff ff 1a    	add    %bl,0x1affffd0(%rdi)
   15829:	00 00                	add    %al,(%rax)
   1582b:	00 00                	add    %al,(%rax)
   1582d:	00 00                	add    %al,(%rax)
   1582f:	00 10                	add    %dl,(%rax)
   15831:	00 00                	add    %al,(%rax)
   15833:	00 14 13             	add    %dl,(%rbx,%rdx,1)
   15836:	00 00                	add    %al,(%rax)
   15838:	a9 d0 ff ff 1a       	test   $0x1affffd0,%eax
   1583d:	00 00                	add    %al,(%rax)
   1583f:	00 00                	add    %al,(%rax)
   15841:	00 00                	add    %al,(%rax)
   15843:	00 10                	add    %dl,(%rax)
   15845:	00 00                	add    %al,(%rax)
   15847:	00 28                	add    %ch,(%rax)
   15849:	13 00                	adc    (%rax),%eax
   1584b:	00 b3 d0 ff ff 15    	add    %dh,0x15ffffd0(%rbx)
   15851:	00 00                	add    %al,(%rax)
   15853:	00 00                	add    %al,(%rax)
   15855:	00 00                	add    %al,(%rax)
   15857:	00 2c 00             	add    %ch,(%rax,%rax,1)
   1585a:	00 00                	add    %al,(%rax)
   1585c:	3c 13                	cmp    $0x13,%al
   1585e:	00 00                	add    %al,(%rax)
   15860:	40 39 ff             	rex cmp %edi,%edi
   15863:	ff 74 00 00          	push   0x0(%rax,%rax,1)
   15867:	00 00                	add    %al,(%rax)
   15869:	46 0e                	rex.RX (bad) 
   1586b:	10 8c 02 41 0e 18 86 	adc    %cl,-0x79e7f1bf(%rdx,%rax,1)
   15872:	03 41 0e             	add    0xe(%rcx),%eax
   15875:	20 83 04 02 4d 0a    	and    %al,0xa4d0204(%rbx)
   1587b:	0e                   	(bad)  
   1587c:	18 41 0e             	sbb    %al,0xe(%rcx)
   1587f:	10 42 0e             	adc    %al,0xe(%rdx)
   15882:	08 48 0b             	or     %cl,0xb(%rax)
   15885:	00 00                	add    %al,(%rax)
   15887:	00 18                	add    %bl,(%rax)
   15889:	00 00                	add    %al,(%rax)
   1588b:	00 6c 13 00          	add    %ch,0x0(%rbx,%rdx,1)
   1588f:	00 90 39 ff ff 28    	add    %dl,0x28ffff39(%rax)
   15895:	00 00                	add    %al,(%rax)
   15897:	00 00                	add    %al,(%rax)
   15899:	45 0e                	rex.RB (bad) 
   1589b:	10 83 02 62 0e 08    	adc    %al,0x80e6202(%rbx)
   158a1:	00 00                	add    %al,(%rax)
   158a3:	00 18                	add    %bl,(%rax)
   158a5:	00 00                	add    %al,(%rax)
   158a7:	00 88 13 00 00 a4    	add    %cl,-0x5bffffed(%rax)
   158ad:	39 ff                	cmp    %edi,%edi
   158af:	ff 25 00 00 00 00    	jmp    *0x0(%rip)        # 158b5 <__GNU_EH_FRAME_HDR+0x1bf5>
   158b5:	45 0e                	rex.RB (bad) 
   158b7:	10 83 02 5f 0e 08    	adc    %al,0x80e5f02(%rbx)
   158bd:	00 00                	add    %al,(%rax)
   158bf:	00 18                	add    %bl,(%rax)
   158c1:	00 00                	add    %al,(%rax)
   158c3:	00 a4 13 00 00 b8 39 	add    %ah,0x39b80000(%rbx,%rdx,1)
   158ca:	ff                   	(bad)  
   158cb:	ff 1a                	lcall  *(%rdx)
   158cd:	00 00                	add    %al,(%rax)
   158cf:	00 00                	add    %al,(%rax)
   158d1:	45 0e                	rex.RB (bad) 
   158d3:	10 83 02 50 0e 08    	adc    %al,0x80e5002(%rbx)
   158d9:	00 00                	add    %al,(%rax)
   158db:	00 10                	add    %dl,(%rax)
   158dd:	00 00                	add    %al,(%rax)
   158df:	00 c0                	add    %al,%al
   158e1:	13 00                	adc    (%rax),%eax
   158e3:	00 bc 39 ff ff 23 00 	add    %bh,0x23ffff(%rcx,%rdi,1)
   158ea:	00 00                	add    %al,(%rax)
   158ec:	00 00                	add    %al,(%rax)
   158ee:	00 00                	add    %al,(%rax)
   158f0:	10 00                	adc    %al,(%rax)
   158f2:	00 00                	add    %al,(%rax)
   158f4:	d4                   	(bad)  
   158f5:	13 00                	adc    (%rax),%eax
   158f7:	00 d8                	add    %bl,%al
   158f9:	39 ff                	cmp    %edi,%edi
   158fb:	ff 15 00 00 00 00    	call   *0x0(%rip)        # 15901 <__GNU_EH_FRAME_HDR+0x1c41>
   15901:	00 00                	add    %al,(%rax)
   15903:	00 10                	add    %dl,(%rax)
   15905:	00 00                	add    %al,(%rax)
   15907:	00 e8                	add    %ch,%al
   15909:	13 00                	adc    (%rax),%eax
   1590b:	00 e4                	add    %ah,%ah
   1590d:	39 ff                	cmp    %edi,%edi
   1590f:	ff                   	(bad)  
   15910:	bd 00 00 00 00       	mov    $0x0,%ebp
   15915:	00 00                	add    %al,(%rax)
   15917:	00 10                	add    %dl,(%rax)
   15919:	00 00                	add    %al,(%rax)
   1591b:	00 fc                	add    %bh,%ah
   1591d:	13 00                	adc    (%rax),%eax
   1591f:	00 90 3a ff ff bd    	add    %dl,-0x420000c6(%rax)
   15925:	00 00                	add    %al,(%rax)
   15927:	00 00                	add    %al,(%rax)
   15929:	00 00                	add    %al,(%rax)
   1592b:	00 10                	add    %dl,(%rax)
   1592d:	00 00                	add    %al,(%rax)
   1592f:	00 10                	add    %dl,(%rax)
   15931:	14 00                	adc    $0x0,%al
   15933:	00 3c 3b             	add    %bh,(%rbx,%rdi,1)
   15936:	ff                   	(bad)  
   15937:	ff 1f                	lcall  *(%rdi)
   15939:	00 00                	add    %al,(%rax)
   1593b:	00 00                	add    %al,(%rax)
   1593d:	00 00                	add    %al,(%rax)
   1593f:	00 10                	add    %dl,(%rax)
   15941:	00 00                	add    %al,(%rax)
   15943:	00 24 14             	add    %ah,(%rsp,%rdx,1)
   15946:	00 00                	add    %al,(%rax)
   15948:	48 3b ff             	cmp    %rdi,%rdi
   1594b:	ff b5 00 00 00 00    	push   0x0(%rbp)
   15951:	00 00                	add    %al,(%rax)
   15953:	00 10                	add    %dl,(%rax)
   15955:	00 00                	add    %al,(%rax)
   15957:	00 38                	add    %bh,(%rax)
   15959:	14 00                	adc    $0x0,%al
   1595b:	00 f4                	add    %dh,%ah
   1595d:	3b ff                	cmp    %edi,%edi
   1595f:	ff 15 00 00 00 00    	call   *0x0(%rip)        # 15965 <__GNU_EH_FRAME_HDR+0x1ca5>
   15965:	00 00                	add    %al,(%rax)
   15967:	00 10                	add    %dl,(%rax)
   15969:	00 00                	add    %al,(%rax)
   1596b:	00 4c 14 00          	add    %cl,0x0(%rsp,%rdx,1)
   1596f:	00 00                	add    %al,(%rax)
   15971:	3c ff                	cmp    $0xff,%al
   15973:	ff 17                	call   *(%rdi)
   15975:	00 00                	add    %al,(%rax)
   15977:	00 00                	add    %al,(%rax)
   15979:	00 00                	add    %al,(%rax)
   1597b:	00 10                	add    %dl,(%rax)
   1597d:	00 00                	add    %al,(%rax)
   1597f:	00 60 14             	add    %ah,0x14(%rax)
   15982:	00 00                	add    %al,(%rax)
   15984:	0c 3c                	or     $0x3c,%al
   15986:	ff                   	(bad)  
   15987:	ff b5 00 00 00 00    	push   0x0(%rbp)
   1598d:	00 00                	add    %al,(%rax)
   1598f:	00 10                	add    %dl,(%rax)
   15991:	00 00                	add    %al,(%rax)
   15993:	00 74 14 00          	add    %dh,0x0(%rsp,%rdx,1)
   15997:	00 b8 3c ff ff 12    	add    %bh,0x12ffff3c(%rax)
   1599d:	00 00                	add    %al,(%rax)
   1599f:	00 00                	add    %al,(%rax)
   159a1:	00 00                	add    %al,(%rax)
   159a3:	00 28                	add    %ch,(%rax)
   159a5:	00 00                	add    %al,(%rax)
   159a7:	00 88 14 00 00 c4    	add    %cl,-0x3bffffec(%rax)
   159ad:	3c ff                	cmp    $0xff,%al
   159af:	ff 37                	push   (%rdi)
   159b1:	00 00                	add    %al,(%rax)
   159b3:	00 00                	add    %al,(%rax)
   159b5:	46 0e                	rex.RX (bad) 
   159b7:	10 8c 02 44 0e 18 86 	adc    %cl,-0x79e7f1bc(%rdx,%rax,1)
   159be:	03 44 0e 20          	add    0x20(%rsi,%rcx,1),%eax
   159c2:	83 04 65 0e 18 41 0e 	addl   $0x10,0xe41180e(,%riz,2)
   159c9:	10 
   159ca:	42 0e                	rex.X (bad) 
   159cc:	08 00                	or     %al,(%rax)
   159ce:	00 00                	add    %al,(%rax)
   159d0:	4c 00 00             	rex.WR add %r8b,(%rax)
   159d3:	00 b4 14 00 00 d8 3c 	add    %dh,0x3cd80000(%rsp,%rdx,1)
   159da:	ff                   	(bad)  
   159db:	ff 31                	push   (%rcx)
   159dd:	02 00                	add    (%rax),%al
   159df:	00 00                	add    %al,(%rax)
   159e1:	46 0e                	rex.RX (bad) 
   159e3:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   159e9:	8e 03                	mov    (%rbx),%es
   159eb:	42 0e                	rex.X (bad) 
   159ed:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   159f3:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff8631683a <_end+0xffffffff862eb6aa>
   159f9:	06                   	(bad)  
   159fa:	41 0e                	rex.B (bad) 
   159fc:	38 83 07 47 0e 70    	cmp    %al,0x700e4707(%rbx)
   15a02:	75 0a                	jne    15a0e <__GNU_EH_FRAME_HDR+0x1d4e>
   15a04:	0e                   	(bad)  
   15a05:	38 41 0e             	cmp    %al,0xe(%rcx)
   15a08:	30 41 0e             	xor    %al,0xe(%rcx)
   15a0b:	28 42 0e             	sub    %al,0xe(%rdx)
   15a0e:	20 42 0e             	and    %al,0xe(%rdx)
   15a11:	18 42 0e             	sbb    %al,0xe(%rdx)
   15a14:	10 42 0e             	adc    %al,0xe(%rdx)
   15a17:	08 44 0b 00          	or     %al,0x0(%rbx,%rcx,1)
   15a1b:	00 00                	add    %al,(%rax)
   15a1d:	00 00                	add    %al,(%rax)
   15a1f:	00 2c 00             	add    %ch,(%rax,%rax,1)
   15a22:	00 00                	add    %al,(%rax)
   15a24:	04 15                	add    $0x15,%al
   15a26:	00 00                	add    %al,(%rax)
   15a28:	c8 3e ff ff          	enter  $0xff3e,$0xff
   15a2c:	df 01                	filds  (%rcx)
   15a2e:	00 00                	add    %al,(%rax)
   15a30:	00 41 0e             	add    %al,0xe(%rcx)
   15a33:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
   15a39:	54                   	push   %rsp
   15a3a:	8f 03                	pop    (%rbx)
   15a3c:	8e 04 8d 05 8c 06 83 	mov    -0x7cf973fb(,%rcx,4),%es
   15a43:	07                   	(bad)  
   15a44:	03 ae 01 0a 0c 07    	add    0x70c0a01(%rsi),%ebp
   15a4a:	08 41 0b             	or     %al,0xb(%rcx)
   15a4d:	00 00                	add    %al,(%rax)
   15a4f:	00 10                	add    %dl,(%rax)
   15a51:	00 00                	add    %al,(%rax)
   15a53:	00 34 15 00 00 78 40 	add    %dh,0x40780000(,%rdx,1)
   15a5a:	ff                   	(bad)  
   15a5b:	ff 08                	decl   (%rax)
   15a5d:	00 00                	add    %al,(%rax)
   15a5f:	00 00                	add    %al,(%rax)
   15a61:	00 00                	add    %al,(%rax)
   15a63:	00 10                	add    %dl,(%rax)
   15a65:	00 00                	add    %al,(%rax)
   15a67:	00 48 15             	add    %cl,0x15(%rax)
   15a6a:	00 00                	add    %al,(%rax)
   15a6c:	74 40                	je     15aae <__GNU_EH_FRAME_HDR+0x1dee>
   15a6e:	ff                   	(bad)  
   15a6f:	ff 09                	decl   (%rcx)
   15a71:	00 00                	add    %al,(%rax)
   15a73:	00 00                	add    %al,(%rax)
   15a75:	00 00                	add    %al,(%rax)
   15a77:	00 10                	add    %dl,(%rax)
   15a79:	00 00                	add    %al,(%rax)
   15a7b:	00 5c 15 00          	add    %bl,0x0(%rbp,%rdx,1)
   15a7f:	00 70 40             	add    %dh,0x40(%rax)
   15a82:	ff                   	(bad)  
   15a83:	ff 15 00 00 00 00    	call   *0x0(%rip)        # 15a89 <__GNU_EH_FRAME_HDR+0x1dc9>
   15a89:	00 00                	add    %al,(%rax)
   15a8b:	00 1c 00             	add    %bl,(%rax,%rax,1)
   15a8e:	00 00                	add    %al,(%rax)
   15a90:	70 15                	jo     15aa7 <__GNU_EH_FRAME_HDR+0x1de7>
   15a92:	00 00                	add    %al,(%rax)
   15a94:	7c 40                	jl     15ad6 <__GNU_EH_FRAME_HDR+0x1e16>
   15a96:	ff                   	(bad)  
   15a97:	ff                   	(bad)  
   15a98:	3d 00 00 00 00       	cmp    $0x0,%eax
   15a9d:	45 0e                	rex.RB (bad) 
   15a9f:	10 83 02 54 0a 0e    	adc    %al,0xe0a5402(%rbx)
   15aa5:	08 47 0b             	or     %al,0xb(%rdi)
   15aa8:	5c                   	pop    %rsp
   15aa9:	0e                   	(bad)  
   15aaa:	08 00                	or     %al,(%rax)
   15aac:	1c 00                	sbb    $0x0,%al
   15aae:	00 00                	add    %al,(%rax)
   15ab0:	90                   	nop
   15ab1:	15 00 00 9c 40       	adc    $0x409c0000,%eax
   15ab6:	ff                   	(bad)  
   15ab7:	ff                   	(bad)  
   15ab8:	3d 00 00 00 00       	cmp    $0x0,%eax
   15abd:	45 0e                	rex.RB (bad) 
   15abf:	10 83 02 54 0a 0e    	adc    %al,0xe0a5402(%rbx)
   15ac5:	08 47 0b             	or     %al,0xb(%rdi)
   15ac8:	5c                   	pop    %rsp
   15ac9:	0e                   	(bad)  
   15aca:	08 00                	or     %al,(%rax)
   15acc:	24 00                	and    $0x0,%al
   15ace:	00 00                	add    %al,(%rax)
   15ad0:	b0 15                	mov    $0x15,%al
   15ad2:	00 00                	add    %al,(%rax)
   15ad4:	bc 40 ff ff 7e       	mov    $0x7effff40,%esp
   15ad9:	00 00                	add    %al,(%rax)
   15adb:	00 00                	add    %al,(%rax)
   15add:	4a 0e                	rex.WX (bad) 
   15adf:	10 86 02 47 0e 20    	adc    %al,0x200e4702(%rsi)
   15ae5:	68 0a 0e 10 41       	push   $0x41100e0a
   15aea:	0e                   	(bad)  
   15aeb:	08 46 0b             	or     %al,0xb(%rsi)
   15aee:	78 0e                	js     15afe <__GNU_EH_FRAME_HDR+0x1e3e>
   15af0:	08 c6                	or     %al,%dh
   15af2:	00 00                	add    %al,(%rax)
   15af4:	10 00                	adc    %al,(%rax)
   15af6:	00 00                	add    %al,(%rax)
   15af8:	d8 15 00 00 14 41    	fcoms  0x41140000(%rip)        # 41155afe <_end+0x4112a96e>
   15afe:	ff                   	(bad)  
   15aff:	ff 23                	jmp    *(%rbx)
   15b01:	00 00                	add    %al,(%rax)
   15b03:	00 00                	add    %al,(%rax)
   15b05:	00 00                	add    %al,(%rax)
   15b07:	00 10                	add    %dl,(%rax)
   15b09:	00 00                	add    %al,(%rax)
   15b0b:	00 ec                	add    %ch,%ah
   15b0d:	15 00 00 30 41       	adc    $0x41300000,%eax
   15b12:	ff                   	(bad)  
   15b13:	ff 2d 00 00 00 00    	ljmp   *0x0(%rip)        # 15b19 <__GNU_EH_FRAME_HDR+0x1e59>
   15b19:	00 00                	add    %al,(%rax)
   15b1b:	00 10                	add    %dl,(%rax)
   15b1d:	00 00                	add    %al,(%rax)
   15b1f:	00 00                	add    %al,(%rax)
   15b21:	16                   	(bad)  
   15b22:	00 00                	add    %al,(%rax)
   15b24:	4c                   	rex.WR
   15b25:	41 ff                	rex.B (bad) 
   15b27:	ff 26                	jmp    *(%rsi)
   15b29:	00 00                	add    %al,(%rax)
   15b2b:	00 00                	add    %al,(%rax)
   15b2d:	00 00                	add    %al,(%rax)
   15b2f:	00 10                	add    %dl,(%rax)
   15b31:	00 00                	add    %al,(%rax)
   15b33:	00 14 16             	add    %dl,(%rsi,%rdx,1)
   15b36:	00 00                	add    %al,(%rax)
   15b38:	68 41 ff ff 26       	push   $0x26ffff41
   15b3d:	00 00                	add    %al,(%rax)
   15b3f:	00 00                	add    %al,(%rax)
   15b41:	00 00                	add    %al,(%rax)
   15b43:	00 10                	add    %dl,(%rax)
   15b45:	00 00                	add    %al,(%rax)
   15b47:	00 28                	add    %ch,(%rax)
   15b49:	16                   	(bad)  
   15b4a:	00 00                	add    %al,(%rax)
   15b4c:	84 41 ff             	test   %al,-0x1(%rcx)
   15b4f:	ff 70 00             	push   0x0(%rax)
   15b52:	00 00                	add    %al,(%rax)
   15b54:	00 00                	add    %al,(%rax)
   15b56:	00 00                	add    %al,(%rax)
   15b58:	40 00 00             	rex add %al,(%rax)
   15b5b:	00 3c 16             	add    %bh,(%rsi,%rdx,1)
   15b5e:	00 00                	add    %al,(%rax)
   15b60:	e0 41                	loopne 15ba3 <__GNU_EH_FRAME_HDR+0x1ee3>
   15b62:	ff                   	(bad)  
   15b63:	ff 84 01 00 00 00 46 	incl   0x46000000(%rcx,%rax,1)
   15b6a:	0e                   	(bad)  
   15b6b:	10 8e 02 45 0e 18    	adc    %cl,0x180e4502(%rsi)
   15b71:	8d 03                	lea    (%rbx),%eax
   15b73:	45 0e                	rex.RB (bad) 
   15b75:	20 8c 04 44 0e 28 86 	and    %cl,-0x79d7f1bc(%rsp,%rax,1)
   15b7c:	05 41 0e 30 83       	add    $0x83300e41,%eax
   15b81:	06                   	(bad)  
   15b82:	4c 0e                	rex.WR (bad) 
   15b84:	60                   	(bad)  
   15b85:	02 fc                	add    %ah,%bh
   15b87:	0a 0e                	or     (%rsi),%cl
   15b89:	30 41 0e             	xor    %al,0xe(%rcx)
   15b8c:	28 41 0e             	sub    %al,0xe(%rcx)
   15b8f:	20 42 0e             	and    %al,0xe(%rdx)
   15b92:	18 42 0e             	sbb    %al,0xe(%rdx)
   15b95:	10 42 0e             	adc    %al,0xe(%rdx)
   15b98:	08 4b 0b             	or     %cl,0xb(%rbx)
   15b9b:	00 30                	add    %dh,(%rax)
   15b9d:	00 00                	add    %al,(%rax)
   15b9f:	00 80 16 00 00 2c    	add    %al,0x2c000016(%rax)
   15ba5:	43 ff                	rex.XB (bad) 
   15ba7:	ff b5 00 00 00 00    	push   0x0(%rbp)
   15bad:	46 0e                	rex.RX (bad) 
   15baf:	10 8c 02 44 0e 18 86 	adc    %cl,-0x79e7f1bc(%rdx,%rax,1)
   15bb6:	03 44 0e 20          	add    0x20(%rsi,%rcx,1),%eax
   15bba:	83 04 47 0e          	addl   $0xe,(%rdi,%rax,2)
   15bbe:	30 02                	xor    %al,(%rdx)
   15bc0:	44 0a 0e             	or     (%rsi),%r9b
   15bc3:	20 41 0e             	and    %al,0xe(%rcx)
   15bc6:	18 41 0e             	sbb    %al,0xe(%rcx)
   15bc9:	10 42 0e             	adc    %al,0xe(%rdx)
   15bcc:	08 43 0b             	or     %al,0xb(%rbx)
   15bcf:	00 60 00             	add    %ah,0x0(%rax)
   15bd2:	00 00                	add    %al,(%rax)
   15bd4:	b4 16                	mov    $0x16,%ah
   15bd6:	00 00                	add    %al,(%rax)
   15bd8:	b8 43 ff ff 0d       	mov    $0xdffff43,%eax
   15bdd:	03 00                	add    (%rax),%eax
   15bdf:	00 00                	add    %al,(%rax)
   15be1:	46 0e                	rex.RX (bad) 
   15be3:	10 8f 02 45 0e 18    	adc    %cl,0x180e4502(%rdi)
   15be9:	8e 03                	mov    (%rbx),%es
   15beb:	45 0e                	rex.RB (bad) 
   15bed:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
   15bf3:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff86316a3d <_end+0xffffffff862eb8ad>
   15bf9:	06                   	(bad)  
   15bfa:	44 0e                	rex.R (bad) 
   15bfc:	38 83 07 47 0e 50    	cmp    %al,0x500e4707(%rbx)
   15c02:	02 94 0a 0e 38 46 0e 	add    0xe46380e(%rdx,%rcx,1),%dl
   15c09:	30 41 0e             	xor    %al,0xe(%rcx)
   15c0c:	28 42 0e             	sub    %al,0xe(%rdx)
   15c0f:	20 42 0e             	and    %al,0xe(%rdx)
   15c12:	18 42 0e             	sbb    %al,0xe(%rdx)
   15c15:	10 42 0e             	adc    %al,0xe(%rdx)
   15c18:	08 49 0b             	or     %cl,0xb(%rcx)
   15c1b:	02 7e 0a             	add    0xa(%rsi),%bh
   15c1e:	0e                   	(bad)  
   15c1f:	38 41 0e             	cmp    %al,0xe(%rcx)
   15c22:	30 41 0e             	xor    %al,0xe(%rcx)
   15c25:	28 42 0e             	sub    %al,0xe(%rdx)
   15c28:	20 42 0e             	and    %al,0xe(%rdx)
   15c2b:	18 42 0e             	sbb    %al,0xe(%rdx)
   15c2e:	10 42 0e             	adc    %al,0xe(%rdx)
   15c31:	08 41 0b             	or     %al,0xb(%rcx)
   15c34:	4c 00 00             	rex.WR add %r8b,(%rax)
   15c37:	00 18                	add    %bl,(%rax)
   15c39:	17                   	(bad)  
   15c3a:	00 00                	add    %al,(%rax)
   15c3c:	64 46 ff             	fs rex.RX (bad) 
   15c3f:	ff                   	(bad)  
   15c40:	db 00                	fildl  (%rax)
   15c42:	00 00                	add    %al,(%rax)
   15c44:	00 46 0e             	add    %al,0xe(%rsi)
   15c47:	10 8d 02 45 0e 18    	adc    %cl,0x180e4502(%rbp)
   15c4d:	8c 03                	mov    %es,(%rbx)
   15c4f:	44 0e                	rex.R (bad) 
   15c51:	20 86 04 44 0e 28    	and    %al,0x280e4404(%rsi)
   15c57:	83 05 4d 0e 30 02 72 	addl   $0x72,0x2300e4d(%rip)        # 2316aab <_end+0x22eb91b>
   15c5e:	0a 0e                	or     (%rsi),%cl
   15c60:	28 41 0e             	sub    %al,0xe(%rcx)
   15c63:	20 41 0e             	and    %al,0xe(%rcx)
   15c66:	18 42 0e             	sbb    %al,0xe(%rdx)
   15c69:	10 42 0e             	adc    %al,0xe(%rdx)
   15c6c:	08 48 0b             	or     %cl,0xb(%rax)
   15c6f:	51                   	push   %rcx
   15c70:	0a 0e                	or     (%rsi),%cl
   15c72:	28 41 0e             	sub    %al,0xe(%rcx)
   15c75:	20 41 0e             	and    %al,0xe(%rcx)
   15c78:	18 42 0e             	sbb    %al,0xe(%rdx)
   15c7b:	10 42 0e             	adc    %al,0xe(%rdx)
   15c7e:	08 49 0b             	or     %cl,0xb(%rcx)
   15c81:	00 00                	add    %al,(%rax)
   15c83:	00 20                	add    %ah,(%rax)
   15c85:	00 00                	add    %al,(%rax)
   15c87:	00 68 17             	add    %ch,0x17(%rax)
   15c8a:	00 00                	add    %al,(%rax)
   15c8c:	f4                   	hlt    
   15c8d:	46 ff                	rex.RX (bad) 
   15c8f:	ff 02                	incl   (%rdx)
   15c91:	01 00                	add    %eax,(%rax)
   15c93:	00 00                	add    %al,(%rax)
   15c95:	45 0e                	rex.RB (bad) 
   15c97:	10 83 02 44 0e 60    	adc    %al,0x600e4402(%rbx)
   15c9d:	02 c6                	add    %dh,%al
   15c9f:	0a 0e                	or     (%rsi),%cl
   15ca1:	10 41 0e             	adc    %al,0xe(%rcx)
   15ca4:	08 48 0b             	or     %cl,0xb(%rax)
   15ca7:	00 18                	add    %bl,(%rax)
   15ca9:	00 00                	add    %al,(%rax)
   15cab:	00 8c 17 00 00 e0 47 	add    %cl,0x47e00000(%rdi,%rdx,1)
   15cb2:	ff                   	(bad)  
   15cb3:	ff 45 00             	incl   0x0(%rbp)
   15cb6:	00 00                	add    %al,(%rax)
   15cb8:	00 45 0e             	add    %al,0xe(%rbp)
   15cbb:	10 83 02 76 0a 0e    	adc    %al,0xe0a7602(%rbx)
   15cc1:	08 45 0b             	or     %al,0xb(%rbp)
   15cc4:	24 00                	and    $0x0,%al
   15cc6:	00 00                	add    %al,(%rax)
   15cc8:	a8 17                	test   $0x17,%al
   15cca:	00 00                	add    %al,(%rax)
   15ccc:	14 48                	adc    $0x48,%al
   15cce:	ff                   	(bad)  
   15ccf:	ff                   	(bad)  
   15cd0:	39 00                	cmp    %eax,(%rax)
   15cd2:	00 00                	add    %al,(%rax)
   15cd4:	00 45 0e             	add    %al,0xe(%rbp)
   15cd7:	10 86 02 41 0e 18    	adc    %al,0x180e4102(%rsi)
   15cdd:	83 03 44             	addl   $0x44,(%rbx)
   15ce0:	0e                   	(bad)  
   15ce1:	20 6c 0e 18          	and    %ch,0x18(%rsi,%rcx,1)
   15ce5:	41 0e                	rex.B (bad) 
   15ce7:	10 41 0e             	adc    %al,0xe(%rcx)
   15cea:	08 00                	or     %al,(%rax)
   15cec:	28 00                	sub    %al,(%rax)
   15cee:	00 00                	add    %al,(%rax)
   15cf0:	d0 17                	rclb   (%rdi)
   15cf2:	00 00                	add    %al,(%rax)
   15cf4:	2c 48                	sub    $0x48,%al
   15cf6:	ff                   	(bad)  
   15cf7:	ff d7                	call   *%rdi
   15cf9:	00 00                	add    %al,(%rax)
   15cfb:	00 00                	add    %al,(%rax)
   15cfd:	45 0e                	rex.RB (bad) 
   15cff:	10 86 02 4b 0d 06    	adc    %al,0x60d4b02(%rsi)
   15d05:	44 8d 03             	lea    (%rbx),%r8d
   15d08:	8c 04 44             	mov    %es,(%rsp,%rax,2)
   15d0b:	83 05 02 7f 0a 0c 07 	addl   $0x7,0xc0a7f02(%rip)        # c0bdc14 <_end+0xc092a84>
   15d12:	08 49 0b             	or     %cl,0xb(%rcx)
   15d15:	00 00                	add    %al,(%rax)
   15d17:	00 28                	add    %ch,(%rax)
   15d19:	00 00                	add    %al,(%rax)
   15d1b:	00 fc                	add    %bh,%ah
   15d1d:	17                   	(bad)  
   15d1e:	00 00                	add    %al,(%rax)
   15d20:	e0 48                	loopne 15d6a <__GNU_EH_FRAME_HDR+0x20aa>
   15d22:	ff                   	(bad)  
   15d23:	ff                   	(bad)  
   15d24:	ef                   	out    %eax,(%dx)
   15d25:	00 00                	add    %al,(%rax)
   15d27:	00 00                	add    %al,(%rax)
   15d29:	45 0e                	rex.RB (bad) 
   15d2b:	10 86 02 47 0d 06    	adc    %al,0x60d4702(%rsi)
   15d31:	51                   	push   %rcx
   15d32:	8f 03                	pop    (%rbx)
   15d34:	8e 04 8d 05 8c 06 83 	mov    -0x7cf973fb(,%rcx,4),%es
   15d3b:	07                   	(bad)  
   15d3c:	02 cc                	add    %ah,%cl
   15d3e:	0a 0c 07             	or     (%rdi,%rax,1),%cl
   15d41:	08 41 0b             	or     %al,0xb(%rcx)
   15d44:	5c                   	pop    %rsp
   15d45:	00 00                	add    %al,(%rax)
   15d47:	00 28                	add    %ch,(%rax)
   15d49:	18 00                	sbb    %al,(%rax)
   15d4b:	00 a4 49 ff ff c6 00 	add    %ah,0xc6ffff(%rcx,%rcx,2)
   15d52:	00 00                	add    %al,(%rax)
   15d54:	00 46 0e             	add    %al,0xe(%rsi)
   15d57:	10 8d 02 42 0e 18    	adc    %cl,0x180e4202(%rbp)
   15d5d:	8c 03                	mov    %es,(%rbx)
   15d5f:	41 0e                	rex.B (bad) 
   15d61:	20 86 04 41 0e 28    	and    %al,0x280e4104(%rsi)
   15d67:	83 05 47 0e 30 02 55 	addl   $0x55,0x2300e47(%rip)        # 2316bb5 <_end+0x22eba25>
   15d6e:	0a 0e                	or     (%rsi),%cl
   15d70:	28 41 0e             	sub    %al,0xe(%rcx)
   15d73:	20 41 0e             	and    %al,0xe(%rcx)
   15d76:	18 42 0e             	sbb    %al,0xe(%rdx)
   15d79:	10 42 0e             	adc    %al,0xe(%rdx)
   15d7c:	08 44 0b 44          	or     %al,0x44(%rbx,%rcx,1)
   15d80:	0a 0e                	or     (%rsi),%cl
   15d82:	28 46 0e             	sub    %al,0xe(%rsi)
   15d85:	20 41 0e             	and    %al,0xe(%rcx)
   15d88:	18 42 0e             	sbb    %al,0xe(%rdx)
   15d8b:	10 42 0e             	adc    %al,0xe(%rdx)
   15d8e:	08 41 0b             	or     %al,0xb(%rcx)
   15d91:	71 0a                	jno    15d9d <__GNU_EH_FRAME_HDR+0x20dd>
   15d93:	0e                   	(bad)  
   15d94:	28 41 0e             	sub    %al,0xe(%rcx)
   15d97:	20 41 0e             	and    %al,0xe(%rcx)
   15d9a:	18 42 0e             	sbb    %al,0xe(%rdx)
   15d9d:	10 42 0e             	adc    %al,0xe(%rdx)
   15da0:	08 41 0b             	or     %al,0xb(%rcx)
   15da3:	00 28                	add    %ch,(%rax)
   15da5:	00 00                	add    %al,(%rax)
   15da7:	00 88 18 00 00 14    	add    %cl,0x14000018(%rax)
   15dad:	4a ff                	rex.WX (bad) 
   15daf:	ff 64 01 00          	jmp    *0x0(%rcx,%rax,1)
   15db3:	00 00                	add    %al,(%rax)
   15db5:	45 0e                	rex.RB (bad) 
   15db7:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
   15dbd:	47 8e 03             	rex.RXB mov (%r11),%es
   15dc0:	8d 04 8c             	lea    (%rsp,%rcx,4),%eax
   15dc3:	05 83 06 02 93       	add    $0x93020683,%eax
   15dc8:	0a 0c 07             	or     (%rdi,%rax,1),%cl
   15dcb:	08 46 0b             	or     %al,0xb(%rsi)
   15dce:	00 00                	add    %al,(%rax)
   15dd0:	2c 00                	sub    $0x0,%al
   15dd2:	00 00                	add    %al,(%rax)
   15dd4:	b4 18                	mov    $0x18,%ah
   15dd6:	00 00                	add    %al,(%rax)
   15dd8:	58                   	pop    %rax
   15dd9:	4b ff                	rex.WXB (bad) 
   15ddb:	ff                   	(bad)  
   15ddc:	3d 02 00 00 00       	cmp    $0x2,%eax
   15de1:	45 0e                	rex.RB (bad) 
   15de3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
   15de9:	54                   	push   %rsp
   15dea:	8f 03                	pop    (%rbx)
   15dec:	8e 04 8d 05 8c 06 83 	mov    -0x7cf973fb(,%rcx,4),%es
   15df3:	07                   	(bad)  
   15df4:	03 32                	add    (%rdx),%esi
   15df6:	01 0a                	add    %ecx,(%rdx)
   15df8:	0c 07                	or     $0x7,%al
   15dfa:	08 42 0b             	or     %al,0xb(%rdx)
   15dfd:	00 00                	add    %al,(%rax)
   15dff:	00 30                	add    %dh,(%rax)
   15e01:	00 00                	add    %al,(%rax)
   15e03:	00 e4                	add    %ah,%ah
   15e05:	18 00                	sbb    %al,(%rax)
   15e07:	00 68 4d             	add    %ch,0x4d(%rax)
   15e0a:	ff                   	(bad)  
   15e0b:	ff 66 00             	jmp    *0x0(%rsi)
   15e0e:	00 00                	add    %al,(%rax)
   15e10:	00 46 0e             	add    %al,0xe(%rsi)
   15e13:	10 8d 02 45 0e 18    	adc    %cl,0x180e4502(%rbp)
   15e19:	8c 03                	mov    %es,(%rbx)
   15e1b:	41 0e                	rex.B (bad) 
   15e1d:	20 83 04 44 0e 30    	and    %al,0x300e4404(%rbx)
   15e23:	66 0a 0e             	data16 or (%rsi),%cl
   15e26:	20 4a 0e             	and    %cl,0xe(%rdx)
   15e29:	18 42 0e             	sbb    %al,0xe(%rdx)
   15e2c:	10 42 0e             	adc    %al,0xe(%rdx)
   15e2f:	08 4c 0b 00          	or     %cl,0x0(%rbx,%rcx,1)
   15e33:	00 30                	add    %dh,(%rax)
   15e35:	00 00                	add    %al,(%rax)
   15e37:	00 18                	add    %bl,(%rax)
   15e39:	19 00                	sbb    %eax,(%rax)
   15e3b:	00 a4 4d ff ff f5 00 	add    %ah,0xf5ffff(%rbp,%rcx,2)
   15e42:	00 00                	add    %al,(%rax)
   15e44:	00 46 0e             	add    %al,0xe(%rsi)
   15e47:	10 8c 02 44 0e 18 86 	adc    %cl,-0x79e7f1bc(%rdx,%rax,1)
   15e4e:	03 41 0e             	add    0xe(%rcx),%eax
   15e51:	20 83 04 47 0e 30    	and    %al,0x300e4704(%rbx)
   15e57:	02 a3 0a 0e 20 41    	add    0x41200e0a(%rbx),%ah
   15e5d:	0e                   	(bad)  
   15e5e:	18 41 0e             	sbb    %al,0xe(%rcx)
   15e61:	10 42 0e             	adc    %al,0xe(%rdx)
   15e64:	08 47 0b             	or     %al,0xb(%rdi)
   15e67:	00 34 00             	add    %dh,(%rax,%rax,1)
   15e6a:	00 00                	add    %al,(%rax)
   15e6c:	4c 19 00             	sbb    %r8,(%rax)
   15e6f:	00 70 4e             	add    %dh,0x4e(%rax)
   15e72:	ff                   	(bad)  
   15e73:	ff 48 00             	decl   0x0(%rax)
   15e76:	00 00                	add    %al,(%rax)
   15e78:	00 46 0e             	add    %al,0xe(%rsi)
   15e7b:	10 8d 02 45 0e 18    	adc    %cl,0x180e4502(%rbp)
   15e81:	8c 03                	mov    %es,(%rbx)
   15e83:	44 0e                	rex.R (bad) 
   15e85:	20 86 04 44 0e 28    	and    %al,0x280e4404(%rsi)
   15e8b:	83 05 44 0e 30 6a 0e 	addl   $0xe,0x6a300e44(%rip)        # 6a316cd6 <_end+0x6a2ebb46>
   15e92:	28 41 0e             	sub    %al,0xe(%rcx)
   15e95:	20 41 0e             	and    %al,0xe(%rcx)
   15e98:	18 42 0e             	sbb    %al,0xe(%rdx)
   15e9b:	10 42 0e             	adc    %al,0xe(%rdx)
   15e9e:	08 00                	or     %al,(%rax)
   15ea0:	74 00                	je     15ea2 <__GNU_EH_FRAME_HDR+0x21e2>
   15ea2:	00 00                	add    %al,(%rax)
   15ea4:	84 19                	test   %bl,(%rcx)
   15ea6:	00 00                	add    %al,(%rax)
   15ea8:	88 4e ff             	mov    %cl,-0x1(%rsi)
   15eab:	ff 1c 01             	lcall  *(%rcx,%rax,1)
   15eae:	00 00                	add    %al,(%rax)
   15eb0:	00 46 0e             	add    %al,0xe(%rsi)
   15eb3:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   15eb9:	8e 03                	mov    (%rbx),%es
   15ebb:	42 0e                	rex.X (bad) 
   15ebd:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   15ec3:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff86316d0d <_end+0xffffffff862ebb7d>
   15ec9:	06                   	(bad)  
   15eca:	44 0e                	rex.R (bad) 
   15ecc:	38 83 07 44 0e 50    	cmp    %al,0x500e4407(%rbx)
   15ed2:	7f 0a                	jg     15ede <__GNU_EH_FRAME_HDR+0x221e>
   15ed4:	0e                   	(bad)  
   15ed5:	38 41 0e             	cmp    %al,0xe(%rcx)
   15ed8:	30 41 0e             	xor    %al,0xe(%rcx)
   15edb:	28 42 0e             	sub    %al,0xe(%rdx)
   15ede:	20 42 0e             	and    %al,0xe(%rdx)
   15ee1:	18 42 0e             	sbb    %al,0xe(%rdx)
   15ee4:	10 42 0e             	adc    %al,0xe(%rdx)
   15ee7:	08 47 0b             	or     %al,0xb(%rdi)
   15eea:	44 0a 0e             	or     (%rsi),%r9b
   15eed:	38 46 0e             	cmp    %al,0xe(%rsi)
   15ef0:	30 41 0e             	xor    %al,0xe(%rcx)
   15ef3:	28 42 0e             	sub    %al,0xe(%rdx)
   15ef6:	20 42 0e             	and    %al,0xe(%rdx)
   15ef9:	18 42 0e             	sbb    %al,0xe(%rdx)
   15efc:	10 42 0e             	adc    %al,0xe(%rdx)
   15eff:	08 45 0b             	or     %al,0xb(%rbp)
   15f02:	02 8f 0e 38 43 0e    	add    0xe43380e(%rdi),%cl
   15f08:	30 41 0e             	xor    %al,0xe(%rcx)
   15f0b:	28 42 0e             	sub    %al,0xe(%rdx)
   15f0e:	20 42 0e             	and    %al,0xe(%rdx)
   15f11:	18 42 0e             	sbb    %al,0xe(%rdx)
   15f14:	10 42 0e             	adc    %al,0xe(%rdx)
   15f17:	08 78 00             	or     %bh,0x0(%rax)
   15f1a:	00 00                	add    %al,(%rax)
   15f1c:	fc                   	cld    
   15f1d:	19 00                	sbb    %eax,(%rax)
   15f1f:	00 30                	add    %dh,(%rax)
   15f21:	4f ff                	rex.WRXB (bad) 
   15f23:	ff 0b                	decl   (%rbx)
   15f25:	01 00                	add    %eax,(%rax)
   15f27:	00 00                	add    %al,(%rax)
   15f29:	46 0e                	rex.RX (bad) 
   15f2b:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   15f31:	8e 03                	mov    (%rbx),%es
   15f33:	42 0e                	rex.X (bad) 
   15f35:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   15f3b:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff86316d82 <_end+0xffffffff862ebbf2>
   15f41:	06                   	(bad)  
   15f42:	44 0e                	rex.R (bad) 
   15f44:	38 83 07 47 0e 40    	cmp    %al,0x400e4707(%rbx)
   15f4a:	02 85 0a 0e 38 41    	add    0x41380e0a(%rbp),%al
   15f50:	0e                   	(bad)  
   15f51:	30 41 0e             	xor    %al,0xe(%rcx)
   15f54:	28 42 0e             	sub    %al,0xe(%rdx)
   15f57:	20 42 0e             	and    %al,0xe(%rdx)
   15f5a:	18 42 0e             	sbb    %al,0xe(%rdx)
   15f5d:	10 42 0e             	adc    %al,0xe(%rdx)
   15f60:	08 49 0b             	or     %cl,0xb(%rcx)
   15f63:	44 0a 0e             	or     (%rsi),%r9b
   15f66:	38 46 0e             	cmp    %al,0xe(%rsi)
   15f69:	30 41 0e             	xor    %al,0xe(%rcx)
   15f6c:	28 42 0e             	sub    %al,0xe(%rdx)
   15f6f:	20 42 0e             	and    %al,0xe(%rdx)
   15f72:	18 42 0e             	sbb    %al,0xe(%rdx)
   15f75:	10 42 0e             	adc    %al,0xe(%rdx)
   15f78:	08 45 0b             	or     %al,0xb(%rbp)
   15f7b:	6f                   	outsl  %ds:(%rsi),(%dx)
   15f7c:	0a 0e                	or     (%rsi),%cl
   15f7e:	38 41 0e             	cmp    %al,0xe(%rcx)
   15f81:	30 41 0e             	xor    %al,0xe(%rcx)
   15f84:	28 42 0e             	sub    %al,0xe(%rdx)
   15f87:	20 42 0e             	and    %al,0xe(%rdx)
   15f8a:	18 42 0e             	sbb    %al,0xe(%rdx)
   15f8d:	10 42 0e             	adc    %al,0xe(%rdx)
   15f90:	08 41 0b             	or     %al,0xb(%rcx)
   15f93:	00 2c 00             	add    %ch,(%rax,%rax,1)
   15f96:	00 00                	add    %al,(%rax)
   15f98:	78 1a                	js     15fb4 <__GNU_EH_FRAME_HDR+0x22f4>
   15f9a:	00 00                	add    %al,(%rax)
   15f9c:	c4                   	(bad)  
   15f9d:	4f ff                	rex.WRXB (bad) 
   15f9f:	ff e7                	jmp    *%rdi
   15fa1:	00 00                	add    %al,(%rax)
   15fa3:	00 00                	add    %al,(%rax)
   15fa5:	45 0e                	rex.RB (bad) 
   15fa7:	10 86 02 51 0d 06    	adc    %al,0x60d5102(%rsi)
   15fad:	44 8f 03             	rex.R pop (%rbx)
   15fb0:	8e 04 47             	mov    (%rdi,%rax,2),%es
   15fb3:	8d 05 8c 06 4f 83    	lea    -0x7cb0f974(%rip),%eax        # ffffffff83506645 <_end+0xffffffff834db4b5>
   15fb9:	07                   	(bad)  
   15fba:	02 b1 0a 0c 07 08    	add    0x8070c0a(%rcx),%dh
   15fc0:	41 0b 00             	or     (%r8),%eax
   15fc3:	00 78 00             	add    %bh,0x0(%rax)
   15fc6:	00 00                	add    %al,(%rax)
   15fc8:	a8 1a                	test   $0x1a,%al
   15fca:	00 00                	add    %al,(%rax)
   15fcc:	84 50 ff             	test   %dl,-0x1(%rax)
   15fcf:	ff                   	(bad)  
   15fd0:	7f 01                	jg     15fd3 <__GNU_EH_FRAME_HDR+0x2313>
   15fd2:	00 00                	add    %al,(%rax)
   15fd4:	00 46 0e             	add    %al,0xe(%rsi)
   15fd7:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   15fdd:	8e 03                	mov    (%rbx),%es
   15fdf:	42 0e                	rex.X (bad) 
   15fe1:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   15fe7:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff86316e2e <_end+0xffffffff862ebc9e>
   15fed:	06                   	(bad)  
   15fee:	41 0e                	rex.B (bad) 
   15ff0:	38 83 07 47 0e 50    	cmp    %al,0x500e4707(%rbx)
   15ff6:	02 ad 0a 0e 38 41    	add    0x41380e0a(%rbp),%ch
   15ffc:	0e                   	(bad)  
   15ffd:	30 41 0e             	xor    %al,0xe(%rcx)
   16000:	28 42 0e             	sub    %al,0xe(%rdx)
   16003:	20 42 0e             	and    %al,0xe(%rdx)
   16006:	18 42 0e             	sbb    %al,0xe(%rdx)
   16009:	10 42 0e             	adc    %al,0xe(%rdx)
   1600c:	08 41 0b             	or     %al,0xb(%rcx)
   1600f:	4d 0a 0e             	rex.WRB or (%r14),%r9b
   16012:	38 46 0e             	cmp    %al,0xe(%rsi)
   16015:	30 41 0e             	xor    %al,0xe(%rcx)
   16018:	28 42 0e             	sub    %al,0xe(%rdx)
   1601b:	20 42 0e             	and    %al,0xe(%rdx)
   1601e:	18 42 0e             	sbb    %al,0xe(%rdx)
   16021:	10 42 0e             	adc    %al,0xe(%rdx)
   16024:	08 47 0b             	or     %al,0xb(%rdi)
   16027:	02 82 0e 38 43 0e    	add    0xe43380e(%rdx),%al
   1602d:	30 41 0e             	xor    %al,0xe(%rcx)
   16030:	28 42 0e             	sub    %al,0xe(%rdx)
   16033:	20 42 0e             	and    %al,0xe(%rdx)
   16036:	18 42 0e             	sbb    %al,0xe(%rdx)
   16039:	10 42 0e             	adc    %al,0xe(%rdx)
   1603c:	08 00                	or     %al,(%rax)
   1603e:	00 00                	add    %al,(%rax)
   16040:	6c                   	insb   (%dx),%es:(%rdi)
   16041:	00 00                	add    %al,(%rax)
   16043:	00 24 1b             	add    %ah,(%rbx,%rbx,1)
   16046:	00 00                	add    %al,(%rax)
   16048:	88 51 ff             	mov    %dl,-0x1(%rcx)
   1604b:	ff 49 01             	decl   0x1(%rcx)
   1604e:	00 00                	add    %al,(%rax)
   16050:	00 46 0e             	add    %al,0xe(%rsi)
   16053:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   16059:	8e 03                	mov    (%rbx),%es
   1605b:	42 0e                	rex.X (bad) 
   1605d:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
   16063:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff86316ead <_end+0xffffffff862ebd1d>
   16069:	06                   	(bad)  
   1606a:	44 0e                	rex.R (bad) 
   1606c:	38 83 07 47 0e 60    	cmp    %al,0x600e4707(%rbx)
   16072:	02 4b 0a             	add    0xa(%rbx),%cl
   16075:	0e                   	(bad)  
   16076:	38 43 0e             	cmp    %al,0xe(%rbx)
   16079:	30 41 0e             	xor    %al,0xe(%rcx)
   1607c:	28 42 0e             	sub    %al,0xe(%rdx)
   1607f:	20 42 0e             	and    %al,0xe(%rdx)
   16082:	18 42 0e             	sbb    %al,0xe(%rdx)
   16085:	10 42 0e             	adc    %al,0xe(%rdx)
   16088:	08 4b 0b             	or     %cl,0xb(%rbx)
   1608b:	02 45 0e             	add    0xe(%rbp),%al
   1608e:	68 47 0e 70 5c       	push   $0x5c700e47
   16093:	0e                   	(bad)  
   16094:	68 41 0e 60 44       	push   $0x44600e41
   16099:	0a 0e                	or     (%rsi),%cl
   1609b:	38 41 0e             	cmp    %al,0xe(%rcx)
   1609e:	30 41 0e             	xor    %al,0xe(%rcx)
   160a1:	28 42 0e             	sub    %al,0xe(%rdx)
   160a4:	20 42 0e             	and    %al,0xe(%rdx)
   160a7:	18 42 0e             	sbb    %al,0xe(%rdx)
   160aa:	10 42 0e             	adc    %al,0xe(%rdx)
   160ad:	08 41 0b             	or     %al,0xb(%rcx)
   160b0:	3c 00                	cmp    $0x0,%al
   160b2:	00 00                	add    %al,(%rax)
   160b4:	94                   	xchg   %eax,%esp
   160b5:	1b 00                	sbb    (%rax),%eax
   160b7:	00 68 52             	add    %ch,0x52(%rax)
   160ba:	ff                   	(bad)  
   160bb:	ff                   	(bad)  
   160bc:	ed                   	in     (%dx),%eax
   160bd:	00 00                	add    %al,(%rax)
   160bf:	00 00                	add    %al,(%rax)
   160c1:	46 0e                	rex.RX (bad) 
   160c3:	10 8d 02 42 0e 18    	adc    %cl,0x180e4202(%rbp)
   160c9:	8c 03                	mov    %es,(%rbx)
   160cb:	41 0e                	rex.B (bad) 
   160cd:	20 86 04 41 0e 28    	and    %al,0x280e4104(%rsi)
   160d3:	83 05 44 0e 30 4f 0a 	addl   $0xa,0x4f300e44(%rip)        # 4f316f1e <_end+0x4f2ebd8e>
   160da:	0e                   	(bad)  
   160db:	28 41 0e             	sub    %al,0xe(%rcx)
   160de:	20 41 0e             	and    %al,0xe(%rcx)
   160e1:	18 42 0e             	sbb    %al,0xe(%rdx)
   160e4:	10 42 0e             	adc    %al,0xe(%rdx)
   160e7:	08 45 0b             	or     %al,0xb(%rbp)
   160ea:	00 00                	add    %al,(%rax)
   160ec:	00 00                	add    %al,(%rax)
   160ee:	00 00                	add    %al,(%rax)
   160f0:	30 00                	xor    %al,(%rax)
   160f2:	00 00                	add    %al,(%rax)
   160f4:	d4                   	(bad)  
   160f5:	1b 00                	sbb    (%rax),%eax
   160f7:	00 18                	add    %bl,(%rax)
   160f9:	53                   	push   %rbx
   160fa:	ff                   	(bad)  
   160fb:	ff                   	(bad)  
   160fc:	3f                   	(bad)  
   160fd:	01 00                	add    %eax,(%rax)
   160ff:	00 00                	add    %al,(%rax)
   16101:	42 0e                	rex.X (bad) 
   16103:	10 8c 02 41 0e 18 86 	adc    %cl,-0x79e7f1bf(%rdx,%rax,1)
   1610a:	03 41 0e             	add    0xe(%rcx),%eax
   1610d:	20 83 04 46 0e 30    	and    %al,0x300e4604(%rbx)
   16113:	79 0a                	jns    1611f <__GNU_EH_FRAME_HDR+0x245f>
   16115:	0e                   	(bad)  
   16116:	20 43 0e             	and    %al,0xe(%rbx)
   16119:	18 41 0e             	sbb    %al,0xe(%rcx)
   1611c:	10 42 0e             	adc    %al,0xe(%rdx)
   1611f:	08 47 0b             	or     %al,0xb(%rdi)
   16122:	00 00                	add    %al,(%rax)
   16124:	10 00                	adc    %al,(%rax)
   16126:	00 00                	add    %al,(%rax)
   16128:	08 1c 00             	or     %bl,(%rax,%rax,1)
   1612b:	00 24 54             	add    %ah,(%rsp,%rdx,2)
   1612e:	ff                   	(bad)  
   1612f:	ff 73 00             	push   0x0(%rbx)
   16132:	00 00                	add    %al,(%rax)
   16134:	00 00                	add    %al,(%rax)
   16136:	00 00                	add    %al,(%rax)
   16138:	10 00                	adc    %al,(%rax)
   1613a:	00 00                	add    %al,(%rax)
   1613c:	1c 1c                	sbb    $0x1c,%al
   1613e:	00 00                	add    %al,(%rax)
   16140:	90                   	nop
   16141:	54                   	push   %rsp
   16142:	ff                   	(bad)  
   16143:	ff                   	(bad)  
   16144:	7b 00                	jnp    16146 <__GNU_EH_FRAME_HDR+0x2486>
   16146:	00 00                	add    %al,(%rax)
   16148:	00 00                	add    %al,(%rax)
   1614a:	00 00                	add    %al,(%rax)
   1614c:	10 00                	adc    %al,(%rax)
   1614e:	00 00                	add    %al,(%rax)
   16150:	30 1c 00             	xor    %bl,(%rax,%rax,1)
   16153:	00 fc                	add    %bh,%ah
   16155:	54                   	push   %rsp
   16156:	ff                   	(bad)  
   16157:	ff 85 00 00 00 00    	incl   0x0(%rbp)
   1615d:	00 00                	add    %al,(%rax)
   1615f:	00 10                	add    %dl,(%rax)
   16161:	00 00                	add    %al,(%rax)
   16163:	00 44 1c 00          	add    %al,0x0(%rsp,%rbx,1)
   16167:	00 78 55             	add    %bh,0x55(%rax)
   1616a:	ff                   	(bad)  
   1616b:	ff 0f                	decl   (%rdi)
   1616d:	00 00                	add    %al,(%rax)
   1616f:	00 00                	add    %al,(%rax)
   16171:	00 00                	add    %al,(%rax)
   16173:	00 10                	add    %dl,(%rax)
   16175:	00 00                	add    %al,(%rax)
   16177:	00 58 1c             	add    %bl,0x1c(%rax)
   1617a:	00 00                	add    %al,(%rax)
   1617c:	74 55                	je     161d3 <__GNU_EH_FRAME_HDR+0x2513>
   1617e:	ff                   	(bad)  
   1617f:	ff 09                	decl   (%rcx)
   16181:	00 00                	add    %al,(%rax)
   16183:	00 00                	add    %al,(%rax)
   16185:	00 00                	add    %al,(%rax)
   16187:	00 10                	add    %dl,(%rax)
   16189:	00 00                	add    %al,(%rax)
   1618b:	00 6c 1c 00          	add    %ch,0x0(%rsp,%rbx,1)
   1618f:	00 70 55             	add    %dh,0x55(%rax)
   16192:	ff                   	(bad)  
   16193:	ff 0b                	decl   (%rbx)
   16195:	00 00                	add    %al,(%rax)
   16197:	00 00                	add    %al,(%rax)
   16199:	00 00                	add    %al,(%rax)
   1619b:	00 10                	add    %dl,(%rax)
   1619d:	00 00                	add    %al,(%rax)
   1619f:	00 80 1c 00 00 6c    	add    %al,0x6c00001c(%rax)
   161a5:	55                   	push   %rbp
   161a6:	ff                   	(bad)  
   161a7:	ff 0f                	decl   (%rdi)
   161a9:	00 00                	add    %al,(%rax)
   161ab:	00 00                	add    %al,(%rax)
   161ad:	00 00                	add    %al,(%rax)
   161af:	00 10                	add    %dl,(%rax)
   161b1:	00 00                	add    %al,(%rax)
   161b3:	00 94 1c 00 00 68 55 	add    %dl,0x55680000(%rsp,%rbx,1)
   161ba:	ff                   	(bad)  
   161bb:	ff 12                	call   *(%rdx)
   161bd:	00 00                	add    %al,(%rax)
   161bf:	00 00                	add    %al,(%rax)
   161c1:	00 00                	add    %al,(%rax)
   161c3:	00 1c 00             	add    %bl,(%rax,%rax,1)
   161c6:	00 00                	add    %al,(%rax)
   161c8:	a8 1c                	test   $0x1c,%al
   161ca:	00 00                	add    %al,(%rax)
   161cc:	74 55                	je     16223 <__GNU_EH_FRAME_HDR+0x2563>
   161ce:	ff                   	(bad)  
   161cf:	ff 32                	push   (%rdx)
   161d1:	00 00                	add    %al,(%rax)
   161d3:	00 00                	add    %al,(%rax)
   161d5:	48 0e                	rex.W (bad) 
   161d7:	10 58 0a             	adc    %bl,0xa(%rax)
   161da:	0e                   	(bad)  
   161db:	08 48 0b             	or     %cl,0xb(%rax)
   161de:	49 0e                	rex.WB (bad) 
   161e0:	08 00                	or     %al,(%rax)
   161e2:	00 00                	add    %al,(%rax)
   161e4:	30 00                	xor    %al,(%rax)
   161e6:	00 00                	add    %al,(%rax)
   161e8:	c8 1c 00 00          	enter  $0x1c,$0x0
   161ec:	94                   	xchg   %eax,%esp
   161ed:	55                   	push   %rbp
   161ee:	ff                   	(bad)  
   161ef:	ff 30                	push   (%rax)
   161f1:	02 00                	add    (%rax),%al
   161f3:	00 00                	add    %al,(%rax)
   161f5:	4c 0e                	rex.WR (bad) 
   161f7:	10 83 02 02 53 0a    	adc    %al,0xa530202(%rbx)
   161fd:	0e                   	(bad)  
   161fe:	08 41 0b             	or     %al,0xb(%rcx)
   16201:	02 a3 0a 0e 08 45    	add    0x45080e0a(%rbx),%ah
   16207:	0b 02                	or     (%rdx),%eax
   16209:	59                   	pop    %rcx
   1620a:	0a 0e                	or     (%rsi),%cl
   1620c:	08 47 0b             	or     %al,0xb(%rdi)
   1620f:	02 4f 0a             	add    0xa(%rdi),%cl
   16212:	0e                   	(bad)  
   16213:	08 49 0b             	or     %cl,0xb(%rcx)
   16216:	00 00                	add    %al,(%rax)
   16218:	10 00                	adc    %al,(%rax)
   1621a:	00 00                	add    %al,(%rax)
   1621c:	fc                   	cld    
   1621d:	1c 00                	sbb    $0x0,%al
   1621f:	00 90 57 ff ff 43    	add    %dl,0x43ffff57(%rax)
   16225:	00 00                	add    %al,(%rax)
   16227:	00 00                	add    %al,(%rax)
   16229:	00 00                	add    %al,(%rax)
   1622b:	00 48 00             	add    %cl,0x0(%rax)
   1622e:	00 00                	add    %al,(%rax)
   16230:	10 1d 00 00 cc 57    	adc    %bl,0x57cc0000(%rip)        # 57cd6236 <_end+0x57cab0a6>
   16236:	ff                   	(bad)  
   16237:	ff                   	(bad)  
   16238:	ff 01                	incl   (%rcx)
   1623a:	00 00                	add    %al,(%rax)
   1623c:	00 4d 0e             	add    %cl,0xe(%rbp)
   1623f:	10 8c 02 48 0e 18 86 	adc    %cl,-0x79e7f1b8(%rdx,%rax,1)
   16246:	03 4b 0e             	add    0xe(%rbx),%ecx
   16249:	20 83 04 03 0a 01    	and    %al,0x10a0304(%rbx)
   1624f:	0a 0e                	or     (%rsi),%cl
   16251:	18 44 0e 10          	sbb    %al,0x10(%rsi,%rcx,1)
   16255:	42 0e                	rex.X (bad) 
   16257:	08 48 0b             	or     %cl,0xb(%rax)
   1625a:	4e 0a 0e             	rex.WRX or (%rsi),%r9b
   1625d:	18 41 0e             	sbb    %al,0xe(%rcx)
   16260:	10 42 0e             	adc    %al,0xe(%rdx)
   16263:	08 47 0b             	or     %al,0xb(%rdi)
   16266:	02 9b 0a 0e 18 41    	add    0x41180e0a(%rbx),%bl
   1626c:	0e                   	(bad)  
   1626d:	10 42 0e             	adc    %al,0xe(%rdx)
   16270:	08 41 0b             	or     %al,0xb(%rcx)
   16273:	00 00                	add    %al,(%rax)
   16275:	00 00                	add    %al,(%rax)
   16277:	00 54 00 00          	add    %dl,0x0(%rax,%rax,1)
   1627b:	00 5c 1d 00          	add    %bl,0x0(%rbp,%rbx,1)
   1627f:	00 80 59 ff ff f4    	add    %al,-0xb0000a7(%rax)
   16285:	00 00                	add    %al,(%rax)
   16287:	00 00                	add    %al,(%rax)
   16289:	46 0e                	rex.RX (bad) 
   1628b:	10 8f 02 45 0e 18    	adc    %cl,0x180e4502(%rdi)
   16291:	8e 03                	mov    (%rbx),%es
   16293:	45 0e                	rex.RB (bad) 
   16295:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
   1629b:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff863170e5 <_end+0xffffffff862ebf55>
   162a1:	06                   	(bad)  
   162a2:	44 0e                	rex.R (bad) 
   162a4:	38 83 07 47 0e 50    	cmp    %al,0x500e4707(%rbx)
   162aa:	02 58 0e             	add    0xe(%rax),%bl
   162ad:	58                   	pop    %rax
   162ae:	4e 0e                	rex.WRX (bad) 
   162b0:	60                   	(bad)  
   162b1:	5e                   	pop    %rsi
   162b2:	0e                   	(bad)  
   162b3:	58                   	pop    %rax
   162b4:	41 0e                	rex.B (bad) 
   162b6:	50                   	push   %rax
   162b7:	70 0a                	jo     162c3 <__GNU_EH_FRAME_HDR+0x2603>
   162b9:	0e                   	(bad)  
   162ba:	38 41 0e             	cmp    %al,0xe(%rcx)
   162bd:	30 41 0e             	xor    %al,0xe(%rcx)
   162c0:	28 42 0e             	sub    %al,0xe(%rdx)
   162c3:	20 42 0e             	and    %al,0xe(%rdx)
   162c6:	18 42 0e             	sbb    %al,0xe(%rdx)
   162c9:	10 42 0e             	adc    %al,0xe(%rdx)
   162cc:	08 45 0b             	or     %al,0xb(%rbp)
   162cf:	00 18                	add    %bl,(%rax)
   162d1:	00 00                	add    %al,(%rax)
   162d3:	00 b4 1d 00 00 28 5a 	add    %dh,0x5a280000(%rbp,%rbx,1)
   162da:	ff                   	(bad)  
   162db:	ff 1a                	lcall  *(%rdx)
   162dd:	00 00                	add    %al,(%rax)
   162df:	00 00                	add    %al,(%rax)
   162e1:	48 0e                	rex.W (bad) 
   162e3:	18 48 0e             	sbb    %cl,0xe(%rax)
   162e6:	20 49 0e             	and    %cl,0xe(%rcx)
   162e9:	08 00                	or     %al,(%rax)
   162eb:	00 10                	add    %dl,(%rax)
   162ed:	00 00                	add    %al,(%rax)
   162ef:	00 d0                	add    %dl,%al
   162f1:	1d 00 00 2c 5a       	sbb    $0x5a2c0000,%eax
   162f6:	ff                   	(bad)  
   162f7:	ff 10                	call   *(%rax)
   162f9:	00 00                	add    %al,(%rax)
   162fb:	00 00                	add    %al,(%rax)
   162fd:	00 00                	add    %al,(%rax)
   162ff:	00 10                	add    %dl,(%rax)
   16301:	00 00                	add    %al,(%rax)
   16303:	00 e4                	add    %ah,%ah
   16305:	1d 00 00 28 5a       	sbb    $0x5a280000,%eax
   1630a:	ff                   	(bad)  
   1630b:	ff 10                	call   *(%rax)
   1630d:	00 00                	add    %al,(%rax)
   1630f:	00 00                	add    %al,(%rax)
   16311:	00 00                	add    %al,(%rax)
   16313:	00 10                	add    %dl,(%rax)
   16315:	00 00                	add    %al,(%rax)
   16317:	00 f8                	add    %bh,%al
   16319:	1d 00 00 24 5a       	sbb    $0x5a240000,%eax
   1631e:	ff                   	(bad)  
   1631f:	ff 10                	call   *(%rax)
   16321:	00 00                	add    %al,(%rax)
   16323:	00 00                	add    %al,(%rax)
   16325:	00 00                	add    %al,(%rax)
   16327:	00 10                	add    %dl,(%rax)
   16329:	00 00                	add    %al,(%rax)
   1632b:	00 0c 1e             	add    %cl,(%rsi,%rbx,1)
   1632e:	00 00                	add    %al,(%rax)
   16330:	20 5a ff             	and    %bl,-0x1(%rdx)
   16333:	ff 10                	call   *(%rax)
   16335:	00 00                	add    %al,(%rax)
   16337:	00 00                	add    %al,(%rax)
   16339:	00 00                	add    %al,(%rax)
   1633b:	00 10                	add    %dl,(%rax)
   1633d:	00 00                	add    %al,(%rax)
   1633f:	00 20                	add    %ah,(%rax)
   16341:	1e                   	(bad)  
   16342:	00 00                	add    %al,(%rax)
   16344:	1c 5a                	sbb    $0x5a,%al
   16346:	ff                   	(bad)  
   16347:	ff 10                	call   *(%rax)
   16349:	00 00                	add    %al,(%rax)
   1634b:	00 00                	add    %al,(%rax)
   1634d:	00 00                	add    %al,(%rax)
   1634f:	00 14 00             	add    %dl,(%rax,%rax,1)
   16352:	00 00                	add    %al,(%rax)
   16354:	34 1e                	xor    $0x1e,%al
   16356:	00 00                	add    %al,(%rax)
   16358:	18 5a ff             	sbb    %bl,-0x1(%rdx)
   1635b:	ff 10                	call   *(%rax)
	...
   16365:	00 00                	add    %al,(%rax)
   16367:	00 40 00             	add    %al,0x0(%rax)
   1636a:	00 00                	add    %al,(%rax)
   1636c:	4c 1e                	rex.WR (bad) 
   1636e:	00 00                	add    %al,(%rax)
   16370:	10 5a ff             	adc    %bl,-0x1(%rdx)
   16373:	ff b2 01 00 00 00    	push   0x1(%rdx)
   16379:	46 0e                	rex.RX (bad) 
   1637b:	10 8e 02 42 0e 18    	adc    %cl,0x180e4202(%rsi)
   16381:	8d 03                	lea    (%rbx),%eax
   16383:	45 0e                	rex.RB (bad) 
   16385:	20 8c 04 41 0e 28 86 	and    %cl,-0x79d7f1bf(%rsp,%rax,1)
   1638c:	05 41 0e 30 83       	add    $0x83300e41,%eax
   16391:	06                   	(bad)  
   16392:	46 0e                	rex.RX (bad) 
   16394:	40 7b 0a             	rex jnp 163a1 <__GNU_EH_FRAME_HDR+0x26e1>
   16397:	0e                   	(bad)  
   16398:	30 43 0e             	xor    %al,0xe(%rbx)
   1639b:	28 41 0e             	sub    %al,0xe(%rcx)
   1639e:	20 42 0e             	and    %al,0xe(%rdx)
   163a1:	18 42 0e             	sbb    %al,0xe(%rdx)
   163a4:	10 42 0e             	adc    %al,0xe(%rdx)
   163a7:	08 46 0b             	or     %al,0xb(%rsi)
   163aa:	00 00                	add    %al,(%rax)
   163ac:	6c                   	insb   (%dx),%es:(%rdi)
   163ad:	00 00                	add    %al,(%rax)
   163af:	00 90 1e 00 00 8c    	add    %dl,-0x73ffffe2(%rax)
   163b5:	5b                   	pop    %rbx
   163b6:	ff                   	(bad)  
   163b7:	ff f7                	push   %rdi
   163b9:	02 00                	add    (%rax),%al
   163bb:	00 00                	add    %al,(%rax)
   163bd:	46 0e                	rex.RX (bad) 
   163bf:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   163c5:	8e 03                	mov    (%rbx),%es
   163c7:	42 0e                	rex.X (bad) 
   163c9:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   163cf:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff86317216 <_end+0xffffffff862ec086>
   163d5:	06                   	(bad)  
   163d6:	41 0e                	rex.B (bad) 
   163d8:	38 83 07 44 0e a0    	cmp    %al,-0x5ff1bbf9(%rbx)
   163de:	01 02                	add    %eax,(%rdx)
   163e0:	a3 0a 0e 38 43 0e 30 	movabs %eax,0xe41300e43380e0a
   163e7:	41 0e 
   163e9:	28 42 0e             	sub    %al,0xe(%rdx)
   163ec:	20 42 0e             	and    %al,0xe(%rdx)
   163ef:	18 42 0e             	sbb    %al,0xe(%rdx)
   163f2:	10 42 0e             	adc    %al,0xe(%rdx)
   163f5:	08 47 0b             	or     %al,0xb(%rdi)
   163f8:	02 b2 0e a8 01 4d    	add    0x4d01a80e(%rdx),%dh
   163fe:	0e                   	(bad)  
   163ff:	b0 01                	mov    $0x1,%al
   16401:	55                   	push   %rbp
   16402:	0e                   	(bad)  
   16403:	a8 01                	test   $0x1,%al
   16405:	41 0e                	rex.B (bad) 
   16407:	a0 01 02 94 0e a8 01 	movabs 0xe4401a80e940201,%al
   1640e:	44 0e 
   16410:	b0 01                	mov    $0x1,%al
   16412:	60                   	(bad)  
   16413:	0e                   	(bad)  
   16414:	a8 01                	test   $0x1,%al
   16416:	42 0e                	rex.X (bad) 
   16418:	a0 01 00 00 18 00 00 	movabs 0x18000001,%al
   1641f:	00 00 
   16421:	1f                   	(bad)  
   16422:	00 00                	add    %al,(%rax)
   16424:	1c 5e                	sbb    $0x5e,%al
   16426:	ff                   	(bad)  
   16427:	ff 26                	jmp    *(%rsi)
   16429:	00 00                	add    %al,(%rax)
   1642b:	00 00                	add    %al,(%rax)
   1642d:	4d 0e                	rex.WRB (bad) 
   1642f:	18 48 0e             	sbb    %cl,0xe(%rax)
   16432:	20 49 0e             	and    %cl,0xe(%rcx)
   16435:	08 00                	or     %al,(%rax)
   16437:	00 38                	add    %bh,(%rax)
   16439:	00 00                	add    %al,(%rax)
   1643b:	00 1c 1f             	add    %bl,(%rdi,%rbx,1)
   1643e:	00 00                	add    %al,(%rax)
   16440:	30 5e ff             	xor    %bl,-0x1(%rsi)
   16443:	ff b7 00 00 00 00    	push   0x0(%rdi)
   16449:	46 0e                	rex.RX (bad) 
   1644b:	10 8d 02 45 0e 18    	adc    %cl,0x180e4502(%rbp)
   16451:	8c 03                	mov    %es,(%rbx)
   16453:	44 0e                	rex.R (bad) 
   16455:	20 86 04 44 0e 28    	and    %al,0x280e4404(%rsi)
   1645b:	83 05 49 0e 50 02 8d 	addl   $0xffffff8d,0x2500e49(%rip)        # 25172ab <_end+0x24ec11b>
   16462:	0a 0e                	or     (%rsi),%cl
   16464:	28 43 0e             	sub    %al,0xe(%rbx)
   16467:	20 41 0e             	and    %al,0xe(%rcx)
   1646a:	18 42 0e             	sbb    %al,0xe(%rdx)
   1646d:	10 42 0e             	adc    %al,0xe(%rdx)
   16470:	08 41 0b             	or     %al,0xb(%rcx)
   16473:	00 10                	add    %dl,(%rax)
   16475:	00 00                	add    %al,(%rax)
   16477:	00 58 1f             	add    %bl,0x1f(%rax)
   1647a:	00 00                	add    %al,(%rax)
   1647c:	b4 5e                	mov    $0x5e,%ah
   1647e:	ff                   	(bad)  
   1647f:	ff 10                	call   *(%rax)
   16481:	00 00                	add    %al,(%rax)
   16483:	00 00                	add    %al,(%rax)
   16485:	00 00                	add    %al,(%rax)
   16487:	00 38                	add    %bh,(%rax)
   16489:	00 00                	add    %al,(%rax)
   1648b:	00 6c 1f 00          	add    %ch,0x0(%rdi,%rbx,1)
   1648f:	00 b0 5e ff ff b7    	add    %dh,-0x480000a2(%rax)
   16495:	00 00                	add    %al,(%rax)
   16497:	00 00                	add    %al,(%rax)
   16499:	46 0e                	rex.RX (bad) 
   1649b:	10 8d 02 45 0e 18    	adc    %cl,0x180e4502(%rbp)
   164a1:	8c 03                	mov    %es,(%rbx)
   164a3:	44 0e                	rex.R (bad) 
   164a5:	20 86 04 44 0e 28    	and    %al,0x280e4404(%rsi)
   164ab:	83 05 49 0e 50 02 8d 	addl   $0xffffff8d,0x2500e49(%rip)        # 25172fb <_end+0x24ec16b>
   164b2:	0a 0e                	or     (%rsi),%cl
   164b4:	28 43 0e             	sub    %al,0xe(%rbx)
   164b7:	20 41 0e             	and    %al,0xe(%rcx)
   164ba:	18 42 0e             	sbb    %al,0xe(%rdx)
   164bd:	10 42 0e             	adc    %al,0xe(%rdx)
   164c0:	08 41 0b             	or     %al,0xb(%rcx)
   164c3:	00 10                	add    %dl,(%rax)
   164c5:	00 00                	add    %al,(%rax)
   164c7:	00 a8 1f 00 00 34    	add    %ch,0x3400001f(%rax)
   164cd:	5f                   	pop    %rdi
   164ce:	ff                   	(bad)  
   164cf:	ff 10                	call   *(%rax)
   164d1:	00 00                	add    %al,(%rax)
   164d3:	00 00                	add    %al,(%rax)
   164d5:	00 00                	add    %al,(%rax)
   164d7:	00 38                	add    %bh,(%rax)
   164d9:	00 00                	add    %al,(%rax)
   164db:	00 bc 1f 00 00 30 5f 	add    %bh,0x5f300000(%rdi,%rbx,1)
   164e2:	ff                   	(bad)  
   164e3:	ff b7 00 00 00 00    	push   0x0(%rdi)
   164e9:	46 0e                	rex.RX (bad) 
   164eb:	10 8d 02 45 0e 18    	adc    %cl,0x180e4502(%rbp)
   164f1:	8c 03                	mov    %es,(%rbx)
   164f3:	44 0e                	rex.R (bad) 
   164f5:	20 86 04 44 0e 28    	and    %al,0x280e4404(%rsi)
   164fb:	83 05 49 0e 50 02 8d 	addl   $0xffffff8d,0x2500e49(%rip)        # 251734b <_end+0x24ec1bb>
   16502:	0a 0e                	or     (%rsi),%cl
   16504:	28 43 0e             	sub    %al,0xe(%rbx)
   16507:	20 41 0e             	and    %al,0xe(%rcx)
   1650a:	18 42 0e             	sbb    %al,0xe(%rdx)
   1650d:	10 42 0e             	adc    %al,0xe(%rdx)
   16510:	08 41 0b             	or     %al,0xb(%rcx)
   16513:	00 10                	add    %dl,(%rax)
   16515:	00 00                	add    %al,(%rax)
   16517:	00 f8                	add    %bh,%al
   16519:	1f                   	(bad)  
   1651a:	00 00                	add    %al,(%rax)
   1651c:	b4 5f                	mov    $0x5f,%ah
   1651e:	ff                   	(bad)  
   1651f:	ff 10                	call   *(%rax)
   16521:	00 00                	add    %al,(%rax)
   16523:	00 00                	add    %al,(%rax)
   16525:	00 00                	add    %al,(%rax)
   16527:	00 48 00             	add    %cl,0x0(%rax)
   1652a:	00 00                	add    %al,(%rax)
   1652c:	0c 20                	or     $0x20,%al
   1652e:	00 00                	add    %al,(%rax)
   16530:	b0 5f                	mov    $0x5f,%al
   16532:	ff                   	(bad)  
   16533:	ff 0d 01 00 00 00    	decl   0x1(%rip)        # 1653a <__GNU_EH_FRAME_HDR+0x287a>
   16539:	46 0e                	rex.RX (bad) 
   1653b:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   16541:	8e 03                	mov    (%rbx),%es
   16543:	42 0e                	rex.X (bad) 
   16545:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   1654b:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff86317392 <_end+0xffffffff862ec202>
   16551:	06                   	(bad)  
   16552:	41 0e                	rex.B (bad) 
   16554:	38 83 07 44 0e 60    	cmp    %al,0x600e4407(%rbx)
   1655a:	02 e8                	add    %al,%ch
   1655c:	0a 0e                	or     (%rsi),%cl
   1655e:	38 44 0e 30          	cmp    %al,0x30(%rsi,%rcx,1)
   16562:	41 0e                	rex.B (bad) 
   16564:	28 42 0e             	sub    %al,0xe(%rdx)
   16567:	20 42 0e             	and    %al,0xe(%rdx)
   1656a:	18 42 0e             	sbb    %al,0xe(%rdx)
   1656d:	10 42 0e             	adc    %al,0xe(%rdx)
   16570:	08 41 0b             	or     %al,0xb(%rcx)
   16573:	00 10                	add    %dl,(%rax)
   16575:	00 00                	add    %al,(%rax)
   16577:	00 58 20             	add    %bl,0x20(%rax)
   1657a:	00 00                	add    %al,(%rax)
   1657c:	74 60                	je     165de <__GNU_EH_FRAME_HDR+0x291e>
   1657e:	ff                   	(bad)  
   1657f:	ff 10                	call   *(%rax)
   16581:	00 00                	add    %al,(%rax)
   16583:	00 00                	add    %al,(%rax)
   16585:	00 00                	add    %al,(%rax)
   16587:	00 30                	add    %dh,(%rax)
   16589:	00 00                	add    %al,(%rax)
   1658b:	00 6c 20 00          	add    %ch,0x0(%rax,%riz,1)
   1658f:	00 70 60             	add    %dh,0x60(%rax)
   16592:	ff                   	(bad)  
   16593:	ff                   	(bad)  
   16594:	dc 00                	faddl  (%rax)
   16596:	00 00                	add    %al,(%rax)
   16598:	00 46 0e             	add    %al,0xe(%rsi)
   1659b:	10 8c 02 41 0e 18 86 	adc    %cl,-0x79e7f1bf(%rdx,%rax,1)
   165a2:	03 46 0e             	add    0xe(%rsi),%eax
   165a5:	20 83 04 44 0e 40    	and    %al,0x400e4404(%rbx)
   165ab:	02 b3 0a 0e 20 43    	add    0x43200e0a(%rbx),%dh
   165b1:	0e                   	(bad)  
   165b2:	18 41 0e             	sbb    %al,0xe(%rcx)
   165b5:	10 42 0e             	adc    %al,0xe(%rdx)
   165b8:	08 46 0b             	or     %al,0xb(%rsi)
   165bb:	00 28                	add    %ch,(%rax)
   165bd:	00 00                	add    %al,(%rax)
   165bf:	00 a0 20 00 00 1c    	add    %ah,0x1c000020(%rax)
   165c5:	61                   	(bad)  
   165c6:	ff                   	(bad)  
   165c7:	ff                   	(bad)  
   165c8:	dc 00                	faddl  (%rax)
   165ca:	00 00                	add    %al,(%rax)
   165cc:	00 45 0e             	add    %al,0xe(%rbp)
   165cf:	10 86 02 41 0e 18    	adc    %al,0x180e4102(%rsi)
   165d5:	83 03 49             	addl   $0x49,(%rbx)
   165d8:	0e                   	(bad)  
   165d9:	40 02 b5 0a 0e 18 43 	add    0x43180e0a(%rbp),%sil
   165e0:	0e                   	(bad)  
   165e1:	10 41 0e             	adc    %al,0xe(%rcx)
   165e4:	08 48 0b             	or     %cl,0xb(%rax)
   165e7:	00 40 00             	add    %al,0x0(%rax)
   165ea:	00 00                	add    %al,(%rax)
   165ec:	cc                   	int3   
   165ed:	20 00                	and    %al,(%rax)
   165ef:	00 d0                	add    %dl,%al
   165f1:	61                   	(bad)  
   165f2:	ff                   	(bad)  
   165f3:	ff                   	(bad)  
   165f4:	ef                   	out    %eax,(%dx)
   165f5:	00 00                	add    %al,(%rax)
   165f7:	00 00                	add    %al,(%rax)
   165f9:	46 0e                	rex.RX (bad) 
   165fb:	10 8e 02 42 0e 18    	adc    %cl,0x180e4202(%rsi)
   16601:	8d 03                	lea    (%rbx),%eax
   16603:	42 0e                	rex.X (bad) 
   16605:	20 8c 04 47 0e 28 86 	and    %cl,-0x79d7f1b9(%rsp,%rax,1)
   1660c:	05 41 0e 30 83       	add    $0x83300e41,%eax
   16611:	06                   	(bad)  
   16612:	44 0e                	rex.R (bad) 
   16614:	50                   	push   %rax
   16615:	02 c8                	add    %al,%cl
   16617:	0a 0e                	or     (%rsi),%cl
   16619:	30 44 0e 28          	xor    %al,0x28(%rsi,%rcx,1)
   1661d:	41 0e                	rex.B (bad) 
   1661f:	20 42 0e             	and    %al,0xe(%rdx)
   16622:	18 42 0e             	sbb    %al,0xe(%rdx)
   16625:	10 42 0e             	adc    %al,0xe(%rdx)
   16628:	08 41 0b             	or     %al,0xb(%rcx)
   1662b:	00 10                	add    %dl,(%rax)
   1662d:	00 00                	add    %al,(%rax)
   1662f:	00 10                	add    %dl,(%rax)
   16631:	21 00                	and    %eax,(%rax)
   16633:	00 7c 62 ff          	add    %bh,-0x1(%rdx,%riz,2)
   16637:	ff 10                	call   *(%rax)
   16639:	00 00                	add    %al,(%rax)
   1663b:	00 00                	add    %al,(%rax)
   1663d:	00 00                	add    %al,(%rax)
   1663f:	00 34 00             	add    %dh,(%rax,%rax,1)
   16642:	00 00                	add    %al,(%rax)
   16644:	24 21                	and    $0x21,%al
   16646:	00 00                	add    %al,(%rax)
   16648:	78 62                	js     166ac <__GNU_EH_FRAME_HDR+0x29ec>
   1664a:	ff                   	(bad)  
   1664b:	ff 5c 00 00          	lcall  *0x0(%rax,%rax,1)
   1664f:	00 00                	add    %al,(%rax)
   16651:	45 0e                	rex.RB (bad) 
   16653:	10 86 02 44 0e 18    	adc    %al,0x180e4402(%rsi)
   16659:	83 03 47             	addl   $0x47,(%rbx)
   1665c:	0e                   	(bad)  
   1665d:	20 73 0a             	and    %dh,0xa(%rbx)
   16660:	0e                   	(bad)  
   16661:	18 43 0e             	sbb    %al,0xe(%rbx)
   16664:	10 41 0e             	adc    %al,0xe(%rcx)
   16667:	08 49 0b             	or     %cl,0xb(%rcx)
   1666a:	44 0e                	rex.R (bad) 
   1666c:	18 46 0e             	sbb    %al,0xe(%rsi)
   1666f:	10 41 0e             	adc    %al,0xe(%rcx)
   16672:	08 00                	or     %al,(%rax)
   16674:	00 00                	add    %al,(%rax)
   16676:	00 00                	add    %al,(%rax)
   16678:	10 00                	adc    %al,(%rax)
   1667a:	00 00                	add    %al,(%rax)
   1667c:	5c                   	pop    %rsp
   1667d:	21 00                	and    %eax,(%rax)
   1667f:	00 c0                	add    %al,%al
   16681:	62                   	(bad)  
   16682:	ff                   	(bad)  
   16683:	ff 64 00 00          	jmp    *0x0(%rax,%rax,1)
   16687:	00 00                	add    %al,(%rax)
   16689:	00 00                	add    %al,(%rax)
   1668b:	00 28                	add    %ch,(%rax)
   1668d:	00 00                	add    %al,(%rax)
   1668f:	00 70 21             	add    %dh,0x21(%rax)
   16692:	00 00                	add    %al,(%rax)
   16694:	1c 63                	sbb    $0x63,%al
   16696:	ff                   	(bad)  
   16697:	ff 1c 01             	lcall  *(%rcx,%rax,1)
   1669a:	00 00                	add    %al,(%rax)
   1669c:	00 45 0e             	add    %al,0xe(%rbp)
   1669f:	10 86 02 41 0e 18    	adc    %al,0x180e4102(%rsi)
   166a5:	83 03 44             	addl   $0x44,(%rbx)
   166a8:	0e                   	(bad)  
   166a9:	20 02                	and    %al,(%rdx)
   166ab:	99                   	cltd   
   166ac:	0a 0e                	or     (%rsi),%cl
   166ae:	18 44 0e 10          	sbb    %al,0x10(%rsi,%rcx,1)
   166b2:	41 0e                	rex.B (bad) 
   166b4:	08 48 0b             	or     %cl,0xb(%rax)
   166b7:	00 18                	add    %bl,(%rax)
   166b9:	00 00                	add    %al,(%rax)
   166bb:	00 9c 21 00 00 10 64 	add    %bl,0x64100000(%rcx,%riz,1)
   166c2:	ff                   	(bad)  
   166c3:	ff 8e 00 00 00 00    	decl   0x0(%rsi)
   166c9:	48 0e                	rex.W (bad) 
   166cb:	20 02                	and    %al,(%rdx)
   166cd:	80 0a 0e             	orb    $0xe,(%rdx)
   166d0:	08 41 0b             	or     %al,0xb(%rcx)
   166d3:	00 10                	add    %dl,(%rax)
   166d5:	00 00                	add    %al,(%rax)
   166d7:	00 b8 21 00 00 84    	add    %bh,-0x7bffffdf(%rax)
   166dd:	64 ff                	fs (bad) 
   166df:	ff 0d 00 00 00 00    	decl   0x0(%rip)        # 166e5 <__GNU_EH_FRAME_HDR+0x2a25>
   166e5:	00 00                	add    %al,(%rax)
   166e7:	00 38                	add    %bh,(%rax)
   166e9:	00 00                	add    %al,(%rax)
   166eb:	00 cc                	add    %cl,%ah
   166ed:	21 00                	and    %eax,(%rax)
   166ef:	00 80 64 ff ff 2b    	add    %al,0x2bffff64(%rax)
   166f5:	08 00                	or     %al,(%rax)
   166f7:	00 00                	add    %al,(%rax)
   166f9:	41 0e                	rex.B (bad) 
   166fb:	10 86 02 47 0e 18    	adc    %al,0x180e4702(%rsi)
   16701:	83 03 44             	addl   $0x44,(%rbx)
   16704:	0e                   	(bad)  
   16705:	20 03                	and    %al,(%rbx)
   16707:	81 01 0a 0e 18 41    	addl   $0x41180e0a,(%rcx)
   1670d:	0e                   	(bad)  
   1670e:	10 41 0e             	adc    %al,0xe(%rcx)
   16711:	08 41 0b             	or     %al,0xb(%rcx)
   16714:	03 a8 01 0a 0e 18    	add    0x180e0a01(%rax),%ebp
   1671a:	41 0e                	rex.B (bad) 
   1671c:	10 41 0e             	adc    %al,0xe(%rcx)
   1671f:	08 46 0b             	or     %al,0xb(%rsi)
   16722:	00 00                	add    %al,(%rax)
   16724:	18 00                	sbb    %al,(%rax)
   16726:	00 00                	add    %al,(%rax)
   16728:	08 22                	or     %ah,(%rdx)
   1672a:	00 00                	add    %al,(%rax)
   1672c:	74 6c                	je     1679a <__GNU_EH_FRAME_HDR+0x2ada>
   1672e:	ff                   	(bad)  
   1672f:	ff e1                	jmp    *%rcx
   16731:	00 00                	add    %al,(%rax)
   16733:	00 00                	add    %al,(%rax)
   16735:	44 0e                	rex.R (bad) 
   16737:	20 02                	and    %al,(%rdx)
   16739:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
   1673a:	0a 0e                	or     (%rsi),%cl
   1673c:	08 46 0b             	or     %al,0xb(%rsi)
   1673f:	00 48 00             	add    %cl,0x0(%rax)
   16742:	00 00                	add    %al,(%rax)
   16744:	24 22                	and    $0x22,%al
   16746:	00 00                	add    %al,(%rax)
   16748:	48 6d                	rex.W insl (%dx),%es:(%rdi)
   1674a:	ff                   	(bad)  
   1674b:	ff 4e 1b             	decl   0x1b(%rsi)
   1674e:	00 00                	add    %al,(%rax)
   16750:	00 46 0e             	add    %al,0xe(%rsi)
   16753:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   16759:	8e 03                	mov    (%rbx),%es
   1675b:	42 0e                	rex.X (bad) 
   1675d:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   16763:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff863175aa <_end+0xffffffff862ec41a>
   16769:	06                   	(bad)  
   1676a:	44 0e                	rex.R (bad) 
   1676c:	38 83 07 44 0e 50    	cmp    %al,0x500e4407(%rbx)
   16772:	02 fa                	add    %dl,%bh
   16774:	0a 0e                	or     (%rsi),%cl
   16776:	38 44 0e 30          	cmp    %al,0x30(%rsi,%rcx,1)
   1677a:	41 0e                	rex.B (bad) 
   1677c:	28 42 0e             	sub    %al,0xe(%rdx)
   1677f:	20 42 0e             	and    %al,0xe(%rdx)
   16782:	18 42 0e             	sbb    %al,0xe(%rdx)
   16785:	10 42 0e             	adc    %al,0xe(%rdx)
   16788:	08 44 0b 00          	or     %al,0x0(%rbx,%rcx,1)
   1678c:	60                   	(bad)  
   1678d:	00 00                	add    %al,(%rax)
   1678f:	00 70 22             	add    %dh,0x22(%rax)
   16792:	00 00                	add    %al,(%rax)
   16794:	4c 88 ff             	rex.WR mov %r15b,%dil
   16797:	ff 93 02 00 00 00    	call   *0x2(%rbx)
   1679d:	42 0e                	rex.X (bad) 
   1679f:	10 8d 02 42 0e 18    	adc    %cl,0x180e4202(%rbp)
   167a5:	8c 03                	mov    %es,(%rbx)
   167a7:	41 0e                	rex.B (bad) 
   167a9:	20 86 04 41 0e 28    	and    %al,0x280e4104(%rsi)
   167af:	83 05 49 0e 40 02 4a 	addl   $0x4a,0x2400e49(%rip)        # 24175ff <_end+0x23ec46f>
   167b6:	0a 0e                	or     (%rsi),%cl
   167b8:	28 43 0e             	sub    %al,0xe(%rbx)
   167bb:	20 41 0e             	and    %al,0xe(%rcx)
   167be:	18 42 0e             	sbb    %al,0xe(%rdx)
   167c1:	10 42 0e             	adc    %al,0xe(%rdx)
   167c4:	08 47 0b             	or     %al,0xb(%rdi)
   167c7:	02 82 0a 0e 28 41    	add    0x41280e0a(%rdx),%al
   167cd:	0e                   	(bad)  
   167ce:	20 41 0e             	and    %al,0xe(%rcx)
   167d1:	18 42 0e             	sbb    %al,0xe(%rdx)
   167d4:	10 42 0e             	adc    %al,0xe(%rdx)
   167d7:	08 48 0b             	or     %cl,0xb(%rax)
   167da:	03 6e 01             	add    0x1(%rsi),%ebp
   167dd:	0a 0e                	or     (%rsi),%cl
   167df:	28 41 0e             	sub    %al,0xe(%rcx)
   167e2:	20 41 0e             	and    %al,0xe(%rcx)
   167e5:	18 42 0e             	sbb    %al,0xe(%rdx)
   167e8:	10 42 0e             	adc    %al,0xe(%rdx)
   167eb:	08 44 0b 00          	or     %al,0x0(%rbx,%rcx,1)
   167ef:	00 60 00             	add    %ah,0x0(%rax)
   167f2:	00 00                	add    %al,(%rax)
   167f4:	d4                   	(bad)  
   167f5:	22 00                	and    (%rax),%al
   167f7:	00 88 8a ff ff 00    	add    %cl,0xffff8a(%rax)
   167fd:	0b 00                	or     (%rax),%eax
   167ff:	00 00                	add    %al,(%rax)
   16801:	4f 0e                	rex.WRXB (bad) 
   16803:	10 8d 02 49 0e 18    	adc    %cl,0x180e4902(%rbp)
   16809:	8c 03                	mov    %es,(%rbx)
   1680b:	41 0e                	rex.B (bad) 
   1680d:	20 86 04 41 0e 28    	and    %al,0x280e4104(%rsi)
   16813:	83 05 44 0e 30 02 f3 	addl   $0xfffffff3,0x2300e44(%rip)        # 231765e <_end+0x22ec4ce>
   1681a:	0a 0e                	or     (%rsi),%cl
   1681c:	28 41 0e             	sub    %al,0xe(%rcx)
   1681f:	20 41 0e             	and    %al,0xe(%rcx)
   16822:	18 42 0e             	sbb    %al,0xe(%rdx)
   16825:	10 42 0e             	adc    %al,0xe(%rdx)
   16828:	08 49 0b             	or     %cl,0xb(%rcx)
   1682b:	02 c8                	add    %al,%cl
   1682d:	0e                   	(bad)  
   1682e:	08 c3                	or     %al,%bl
   16830:	c6                   	(bad)  
   16831:	cc                   	int3   
   16832:	cd 48                	int    $0x48
   16834:	0e                   	(bad)  
   16835:	30 83 05 86 04 8c    	xor    %al,-0x73fb79fb(%rbx)
   1683b:	03 8d 02 02 9e 0a    	add    0xa9e0202(%rbp),%ecx
   16841:	0e                   	(bad)  
   16842:	28 41 0e             	sub    %al,0xe(%rcx)
   16845:	20 41 0e             	and    %al,0xe(%rcx)
   16848:	18 42 0e             	sbb    %al,0xe(%rdx)
   1684b:	10 42 0e             	adc    %al,0xe(%rdx)
   1684e:	08 44 0b 00          	or     %al,0x0(%rbx,%rcx,1)
   16852:	00 00                	add    %al,(%rax)
   16854:	28 00                	sub    %al,(%rax)
   16856:	00 00                	add    %al,(%rax)
   16858:	38 23                	cmp    %ah,(%rbx)
   1685a:	00 00                	add    %al,(%rax)
   1685c:	24 95                	and    $0x95,%al
   1685e:	ff                   	(bad)  
   1685f:	ff 68 00             	ljmp   *0x0(%rax)
   16862:	00 00                	add    %al,(%rax)
   16864:	00 45 0e             	add    %al,0xe(%rbp)
   16867:	10 86 02 41 0e 18    	adc    %al,0x180e4102(%rsi)
   1686d:	83 03 47             	addl   $0x47,(%rbx)
   16870:	0e                   	(bad)  
   16871:	20 02                	and    %al,(%rdx)
   16873:	41 0a 0e             	or     (%r14),%cl
   16876:	18 44 0e 10          	sbb    %al,0x10(%rsi,%rcx,1)
   1687a:	41 0e                	rex.B (bad) 
   1687c:	08 45 0b             	or     %al,0xb(%rbp)
   1687f:	00 64 00 00          	add    %ah,0x0(%rax,%rax,1)
   16883:	00 64 23 00          	add    %ah,0x0(%rbx,%riz,1)
   16887:	00 68 95             	add    %ch,-0x6b(%rax)
   1688a:	ff                   	(bad)  
   1688b:	ff 0d 07 00 00 00    	decl   0x7(%rip)        # 16898 <__GNU_EH_FRAME_HDR+0x2bd8>
   16891:	46 0e                	rex.RX (bad) 
   16893:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   16899:	8e 03                	mov    (%rbx),%es
   1689b:	42 0e                	rex.X (bad) 
   1689d:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   168a3:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff863176ea <_end+0xffffffff862ec55a>
   168a9:	06                   	(bad)  
   168aa:	41 0e                	rex.B (bad) 
   168ac:	38 83 07 47 0e 40    	cmp    %al,0x400e4707(%rbx)
   168b2:	02 ea                	add    %dl,%ch
   168b4:	0a 0e                	or     (%rsi),%cl
   168b6:	38 44 0e 30          	cmp    %al,0x30(%rsi,%rcx,1)
   168ba:	41 0e                	rex.B (bad) 
   168bc:	28 42 0e             	sub    %al,0xe(%rdx)
   168bf:	20 42 0e             	and    %al,0xe(%rdx)
   168c2:	18 42 0e             	sbb    %al,0xe(%rdx)
   168c5:	10 42 0e             	adc    %al,0xe(%rdx)
   168c8:	08 44 0b 03          	or     %al,0x3(%rbx,%rcx,1)
   168cc:	04 01                	add    $0x1,%al
   168ce:	0a 0e                	or     (%rsi),%cl
   168d0:	38 44 0e 30          	cmp    %al,0x30(%rsi,%rcx,1)
   168d4:	41 0e                	rex.B (bad) 
   168d6:	28 42 0e             	sub    %al,0xe(%rdx)
   168d9:	20 42 0e             	and    %al,0xe(%rdx)
   168dc:	18 42 0e             	sbb    %al,0xe(%rdx)
   168df:	10 42 0e             	adc    %al,0xe(%rdx)
   168e2:	08 4f 0b             	or     %cl,0xb(%rdi)
   168e5:	00 00                	add    %al,(%rax)
   168e7:	00 10                	add    %dl,(%rax)
   168e9:	00 00                	add    %al,(%rax)
   168eb:	00 cc                	add    %cl,%ah
   168ed:	23 00                	and    (%rax),%eax
   168ef:	00 10                	add    %dl,(%rax)
   168f1:	9c                   	pushf  
   168f2:	ff                   	(bad)  
   168f3:	ff 18                	lcall  *(%rax)
   168f5:	00 00                	add    %al,(%rax)
   168f7:	00 00                	add    %al,(%rax)
   168f9:	00 00                	add    %al,(%rax)
   168fb:	00 20                	add    %ah,(%rax)
   168fd:	00 00                	add    %al,(%rax)
   168ff:	00 e0                	add    %ah,%al
   16901:	23 00                	and    (%rax),%eax
   16903:	00 1c 9c             	add    %bl,(%rsp,%rbx,4)
   16906:	ff                   	(bad)  
   16907:	ff 8a 00 00 00 00    	decl   0x0(%rdx)
   1690d:	45 0e                	rex.RB (bad) 
   1690f:	10 83 02 02 61 0a    	adc    %al,0xa610202(%rbx)
   16915:	0e                   	(bad)  
   16916:	08 4a 0b             	or     %cl,0xb(%rdx)
   16919:	46 0a 0e             	rex.RX or (%rsi),%r9b
   1691c:	08 4a 0b             	or     %cl,0xb(%rdx)
   1691f:	00 3c 00             	add    %bh,(%rax,%rax,1)
   16922:	00 00                	add    %al,(%rax)
   16924:	04 24                	add    $0x24,%al
   16926:	00 00                	add    %al,(%rax)
   16928:	88 9c ff ff b2 01 00 	mov    %bl,0x1b2ff(%rdi,%rdi,8)
   1692f:	00 00                	add    %al,(%rax)
   16931:	46 0e                	rex.RX (bad) 
   16933:	10 8d 02 42 0e 18    	adc    %cl,0x180e4202(%rbp)
   16939:	8c 03                	mov    %es,(%rbx)
   1693b:	41 0e                	rex.B (bad) 
   1693d:	20 86 04 41 0e 28    	and    %al,0x280e4104(%rsi)
   16943:	83 05 47 0e 30 03 05 	addl   $0x5,0x3300e47(%rip)        # 3317791 <_end+0x32ec601>
   1694a:	01 0a                	add    %ecx,(%rdx)
   1694c:	0e                   	(bad)  
   1694d:	28 41 0e             	sub    %al,0xe(%rcx)
   16950:	20 41 0e             	and    %al,0xe(%rcx)
   16953:	18 42 0e             	sbb    %al,0xe(%rdx)
   16956:	10 42 0e             	adc    %al,0xe(%rdx)
   16959:	08 44 0b 00          	or     %al,0x0(%rbx,%rcx,1)
   1695d:	00 00                	add    %al,(%rax)
   1695f:	00 10                	add    %dl,(%rax)
   16961:	00 00                	add    %al,(%rax)
   16963:	00 44 24 00          	add    %al,0x0(%rsp)
   16967:	00 08                	add    %cl,(%rax)
   16969:	9e                   	sahf   
   1696a:	ff                   	(bad)  
   1696b:	ff ce                	dec    %esi
   1696d:	00 00                	add    %al,(%rax)
   1696f:	00 00                	add    %al,(%rax)
   16971:	00 00                	add    %al,(%rax)
   16973:	00 10                	add    %dl,(%rax)
   16975:	00 00                	add    %al,(%rax)
   16977:	00 58 24             	add    %bl,0x24(%rax)
   1697a:	00 00                	add    %al,(%rax)
   1697c:	c4                   	(bad)  
   1697d:	9e                   	sahf   
   1697e:	ff                   	(bad)  
   1697f:	ff 1a                	lcall  *(%rdx)
   16981:	00 00                	add    %al,(%rax)
   16983:	00 00                	add    %al,(%rax)
   16985:	00 00                	add    %al,(%rax)
   16987:	00 38                	add    %bh,(%rax)
   16989:	00 00                	add    %al,(%rax)
   1698b:	00 6c 24 00          	add    %ch,0x0(%rsp)
   1698f:	00 d0                	add    %dl,%al
   16991:	9e                   	sahf   
   16992:	ff                   	(bad)  
   16993:	ff b3 00 00 00 00    	push   0x0(%rbx)
   16999:	46 0e                	rex.RX (bad) 
   1699b:	10 8e 02 42 0e 18    	adc    %cl,0x180e4202(%rsi)
   169a1:	8d 03                	lea    (%rbx),%eax
   169a3:	45 0e                	rex.RB (bad) 
   169a5:	20 8c 04 41 0e 28 86 	and    %cl,-0x79d7f1bf(%rsp,%rax,1)
   169ac:	05 41 0e 30 83       	add    $0x83300e41,%eax
   169b1:	06                   	(bad)  
   169b2:	02 99 0e 28 44 0e    	add    0xe44280e(%rcx),%bl
   169b8:	20 42 0e             	and    %al,0xe(%rdx)
   169bb:	18 42 0e             	sbb    %al,0xe(%rdx)
   169be:	10 42 0e             	adc    %al,0xe(%rdx)
   169c1:	08 00                	or     %al,(%rax)
   169c3:	00 48 00             	add    %cl,0x0(%rax)
   169c6:	00 00                	add    %al,(%rax)
   169c8:	a8 24                	test   $0x24,%al
   169ca:	00 00                	add    %al,(%rax)
   169cc:	54                   	push   %rsp
   169cd:	9f                   	lahf   
   169ce:	ff                   	(bad)  
   169cf:	ff                   	(bad)  
   169d0:	ed                   	in     (%dx),%eax
   169d1:	00 00                	add    %al,(%rax)
   169d3:	00 00                	add    %al,(%rax)
   169d5:	42 0e                	rex.X (bad) 
   169d7:	10 8f 02 46 0e 18    	adc    %cl,0x180e4602(%rdi)
   169dd:	8e 03                	mov    (%rbx),%es
   169df:	42 0e                	rex.X (bad) 
   169e1:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   169e7:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff8631782e <_end+0xffffffff862ec69e>
   169ed:	06                   	(bad)  
   169ee:	41 0e                	rex.B (bad) 
   169f0:	38 83 07 44 0e 70    	cmp    %al,0x700e4407(%rbx)
   169f6:	02 5b 0a             	add    0xa(%rbx),%bl
   169f9:	0e                   	(bad)  
   169fa:	38 41 0e             	cmp    %al,0xe(%rcx)
   169fd:	30 41 0e             	xor    %al,0xe(%rcx)
   16a00:	28 42 0e             	sub    %al,0xe(%rdx)
   16a03:	20 42 0e             	and    %al,0xe(%rdx)
   16a06:	18 42 0e             	sbb    %al,0xe(%rdx)
   16a09:	10 42 0e             	adc    %al,0xe(%rdx)
   16a0c:	08 49 0b             	or     %cl,0xb(%rcx)
   16a0f:	00 10                	add    %dl,(%rax)
   16a11:	00 00                	add    %al,(%rax)
   16a13:	00 f4                	add    %dh,%ah
   16a15:	24 00                	and    $0x0,%al
   16a17:	00 f8                	add    %bh,%al
   16a19:	9f                   	lahf   
   16a1a:	ff                   	(bad)  
   16a1b:	ff 1a                	lcall  *(%rdx)
   16a1d:	00 00                	add    %al,(%rax)
   16a1f:	00 00                	add    %al,(%rax)
   16a21:	00 00                	add    %al,(%rax)
   16a23:	00 60 00             	add    %ah,0x0(%rax)
   16a26:	00 00                	add    %al,(%rax)
   16a28:	08 25 00 00 04 a0    	or     %ah,-0x5ffc0000(%rip)        # ffffffffa0056a2e <_end+0xffffffffa002b89e>
   16a2e:	ff                   	(bad)  
   16a2f:	ff 37                	push   (%rdi)
   16a31:	01 00                	add    %eax,(%rax)
   16a33:	00 00                	add    %al,(%rax)
   16a35:	46 0e                	rex.RX (bad) 
   16a37:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   16a3d:	8e 03                	mov    (%rbx),%es
   16a3f:	42 0e                	rex.X (bad) 
   16a41:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
   16a47:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff8631788e <_end+0xffffffff862ec6fe>
   16a4d:	06                   	(bad)  
   16a4e:	41 0e                	rex.B (bad) 
   16a50:	38 83 07 44 0e 50    	cmp    %al,0x500e4407(%rbx)
   16a56:	02 e1                	add    %cl,%ah
   16a58:	0a 0e                	or     (%rsi),%cl
   16a5a:	38 44 0e 30          	cmp    %al,0x30(%rsi,%rcx,1)
   16a5e:	41 0e                	rex.B (bad) 
   16a60:	28 42 0e             	sub    %al,0xe(%rdx)
   16a63:	20 42 0e             	and    %al,0xe(%rdx)
   16a66:	18 42 0e             	sbb    %al,0xe(%rdx)
   16a69:	10 42 0e             	adc    %al,0xe(%rdx)
   16a6c:	08 45 0b             	or     %al,0xb(%rbp)
   16a6f:	51                   	push   %rcx
   16a70:	0a 0e                	or     (%rsi),%cl
   16a72:	38 41 0e             	cmp    %al,0xe(%rcx)
   16a75:	30 41 0e             	xor    %al,0xe(%rcx)
   16a78:	28 42 0e             	sub    %al,0xe(%rdx)
   16a7b:	20 42 0e             	and    %al,0xe(%rdx)
   16a7e:	18 42 0e             	sbb    %al,0xe(%rdx)
   16a81:	10 42 0e             	adc    %al,0xe(%rdx)
   16a84:	08 4d 0b             	or     %cl,0xb(%rbp)
   16a87:	00 40 00             	add    %al,0x0(%rax)
   16a8a:	00 00                	add    %al,(%rax)
   16a8c:	6c                   	insb   (%dx),%es:(%rdi)
   16a8d:	25 00 00 e0 a0       	and    $0xa0e00000,%eax
   16a92:	ff                   	(bad)  
   16a93:	ff f1                	push   %rcx
   16a95:	00 00                	add    %al,(%rax)
   16a97:	00 00                	add    %al,(%rax)
   16a99:	46 0e                	rex.RX (bad) 
   16a9b:	10 8e 02 42 0e 18    	adc    %cl,0x180e4202(%rsi)
   16aa1:	8d 03                	lea    (%rbx),%eax
   16aa3:	42 0e                	rex.X (bad) 
   16aa5:	20 8c 04 44 0e 28 86 	and    %cl,-0x79d7f1bc(%rsp,%rax,1)
   16aac:	05 41 0e 30 83       	add    $0x83300e41,%eax
   16ab1:	06                   	(bad)  
   16ab2:	44 0e                	rex.R (bad) 
   16ab4:	50                   	push   %rax
   16ab5:	02 cd                	add    %ch,%cl
   16ab7:	0a 0e                	or     (%rsi),%cl
   16ab9:	30 44 0e 28          	xor    %al,0x28(%rsi,%rcx,1)
   16abd:	41 0e                	rex.B (bad) 
   16abf:	20 42 0e             	and    %al,0xe(%rdx)
   16ac2:	18 42 0e             	sbb    %al,0xe(%rdx)
   16ac5:	10 42 0e             	adc    %al,0xe(%rdx)
   16ac8:	08 41 0b             	or     %al,0xb(%rcx)
   16acb:	00 10                	add    %dl,(%rax)
   16acd:	00 00                	add    %al,(%rax)
   16acf:	00 b0 25 00 00 9c    	add    %dh,-0x63ffffdb(%rax)
   16ad5:	a1 ff ff 09 00 00 00 	movabs 0x9ffff,%eax
   16adc:	00 00 
   16ade:	00 00                	add    %al,(%rax)
   16ae0:	20 00                	and    %al,(%rax)
   16ae2:	00 00                	add    %al,(%rax)
   16ae4:	c4                   	(bad)  
   16ae5:	25 00 00 98 a1       	and    $0xa1980000,%eax
   16aea:	ff                   	(bad)  
   16aeb:	ff 4f 00             	decl   0x0(%rdi)
   16aee:	00 00                	add    %al,(%rax)
   16af0:	00 45 0e             	add    %al,0xe(%rbp)
   16af3:	10 83 02 6a 0a 0e    	adc    %al,0xe0a6a02(%rbx)
   16af9:	08 41 0b             	or     %al,0xb(%rcx)
   16afc:	51                   	push   %rcx
   16afd:	0a 0e                	or     (%rsi),%cl
   16aff:	08 47 0b             	or     %al,0xb(%rdi)
   16b02:	00 00                	add    %al,(%rax)
   16b04:	20 00                	and    %al,(%rax)
   16b06:	00 00                	add    %al,(%rax)
   16b08:	e8 25 00 00 c4       	call   ffffffffc4016b32 <_end+0xffffffffc3feb9a2>
   16b0d:	a1 ff ff 47 00 00 00 	movabs 0x450000000047ffff,%eax
   16b14:	00 45 
   16b16:	0e                   	(bad)  
   16b17:	10 83 02 66 0a 0e    	adc    %al,0xe0a6602(%rbx)
   16b1d:	08 45 0b             	or     %al,0xb(%rbp)
   16b20:	4d 0a 0e             	rex.WRB or (%r14),%r9b
   16b23:	08 43 0b             	or     %al,0xb(%rbx)
   16b26:	00 00                	add    %al,(%rax)
   16b28:	10 00                	adc    %al,(%rax)
   16b2a:	00 00                	add    %al,(%rax)
   16b2c:	0c 26                	or     $0x26,%al
   16b2e:	00 00                	add    %al,(%rax)
   16b30:	e0 b4                	loopne 16ae6 <__GNU_EH_FRAME_HDR+0x2e26>
   16b32:	fe                   	(bad)  
   16b33:	ff 13                	call   *(%rbx)
   16b35:	00 00                	add    %al,(%rax)
   16b37:	00 00                	add    %al,(%rax)
   16b39:	00 00                	add    %al,(%rax)
   16b3b:	00 10                	add    %dl,(%rax)
   16b3d:	00 00                	add    %al,(%rax)
   16b3f:	00 20                	add    %ah,(%rax)
   16b41:	26 00 00             	es add %al,(%rax)
   16b44:	dc a1 ff ff 07 00    	fsubl  0x7ffff(%rcx)
   16b4a:	00 00                	add    %al,(%rax)
   16b4c:	00 00                	add    %al,(%rax)
   16b4e:	00 00                	add    %al,(%rax)
   16b50:	14 00                	adc    $0x0,%al
   16b52:	00 00                	add    %al,(%rax)
   16b54:	34 26                	xor    $0x26,%al
   16b56:	00 00                	add    %al,(%rax)
   16b58:	d8 a1 ff ff 09 00    	fsubs  0x9ffff(%rcx)
	...
   16b66:	00 00                	add    %al,(%rax)
   16b68:	14 00                	adc    $0x0,%al
   16b6a:	00 00                	add    %al,(%rax)
   16b6c:	4c                   	rex.WR
   16b6d:	26 00 00             	es add %al,(%rax)
   16b70:	d0 a1 ff ff 3b 00    	shlb   0x3bffff(%rcx)
	...
   16b7e:	00 00                	add    %al,(%rax)
   16b80:	14 00                	adc    $0x0,%al
   16b82:	00 00                	add    %al,(%rax)
   16b84:	64 26 00 00          	fs add %al,%fs:(%rax)
   16b88:	f8                   	clc    
   16b89:	a1 ff ff 7a 00 00 00 	movabs 0x7affff,%eax
   16b90:	00 00 
   16b92:	00 00                	add    %al,(%rax)
   16b94:	00 00                	add    %al,(%rax)
   16b96:	00 00                	add    %al,(%rax)
   16b98:	18 00                	sbb    %al,(%rax)
   16b9a:	00 00                	add    %al,(%rax)
   16b9c:	7c 26                	jl     16bc4 <__GNU_EH_FRAME_HDR+0x2f04>
   16b9e:	00 00                	add    %al,(%rax)
   16ba0:	60                   	(bad)  
   16ba1:	a2 ff ff 0f 00 00 00 	movabs %al,0x45000000000fffff
   16ba8:	00 45 
   16baa:	0e                   	(bad)  
   16bab:	10 41 0e             	adc    %al,0xe(%rcx)
   16bae:	08 44 0e 10          	or     %al,0x10(%rsi,%rcx,1)
   16bb2:	00 00                	add    %al,(%rax)
   16bb4:	18 00                	sbb    %al,(%rax)
   16bb6:	00 00                	add    %al,(%rax)
   16bb8:	98                   	cwtl   
   16bb9:	26 00 00             	es add %al,(%rax)
   16bbc:	54                   	push   %rsp
   16bbd:	a2 ff ff 0f 00 00 00 	movabs %al,0x45000000000fffff
   16bc4:	00 45 
   16bc6:	0e                   	(bad)  
   16bc7:	10 41 0e             	adc    %al,0xe(%rcx)
   16bca:	08 44 0e 10          	or     %al,0x10(%rsi,%rcx,1)
   16bce:	00 00                	add    %al,(%rax)
   16bd0:	14 00                	adc    $0x0,%al
   16bd2:	00 00                	add    %al,(%rax)
   16bd4:	b4 26                	mov    $0x26,%ah
   16bd6:	00 00                	add    %al,(%rax)
   16bd8:	48 a2 ff ff 14 00 00 	rex.W movabs %al,0x4f0000000014ffff
   16bdf:	00 00 4f 
   16be2:	0e                   	(bad)  
   16be3:	10 00                	adc    %al,(%rax)
   16be5:	00 00                	add    %al,(%rax)
   16be7:	00 20                	add    %ah,(%rax)
   16be9:	00 00                	add    %al,(%rax)
   16beb:	00 cc                	add    %cl,%ah
   16bed:	26 00 00             	es add %al,(%rax)
   16bf0:	50                   	push   %rax
   16bf1:	a2 ff ff 46 00 00 00 	movabs %al,0x4a0000000046ffff
   16bf8:	00 4a 
   16bfa:	0e                   	(bad)  
   16bfb:	10 83 02 6a 0a 0e    	adc    %al,0xe0a6a02(%rbx)
   16c01:	08 44 0b 46          	or     %al,0x46(%rbx,%rcx,1)
   16c05:	0e                   	(bad)  
   16c06:	08 42 c3             	or     %al,-0x3d(%rdx)
   16c09:	00 00                	add    %al,(%rax)
   16c0b:	00 40 00             	add    %al,0x0(%rax)
   16c0e:	00 00                	add    %al,(%rax)
   16c10:	f0 26 00 00          	lock es add %al,(%rax)
   16c14:	7c a2                	jl     16bb8 <__GNU_EH_FRAME_HDR+0x2ef8>
   16c16:	ff                   	(bad)  
   16c17:	ff                   	(bad)  
   16c18:	7e 00                	jle    16c1a <__GNU_EH_FRAME_HDR+0x2f5a>
   16c1a:	00 00                	add    %al,(%rax)
   16c1c:	00 4a 0e             	add    %cl,0xe(%rdx)
   16c1f:	10 86 02 46 0e 18    	adc    %al,0x180e4602(%rsi)
   16c25:	83 03 47             	addl   $0x47,(%rbx)
   16c28:	0e                   	(bad)  
   16c29:	20 6f 0a             	and    %ch,0xa(%rdi)
   16c2c:	0e                   	(bad)  
   16c2d:	18 43 0e             	sbb    %al,0xe(%rbx)
   16c30:	10 41 0e             	adc    %al,0xe(%rcx)
   16c33:	08 46 0b             	or     %al,0xb(%rsi)
   16c36:	44 0a 0e             	or     (%rsi),%r9b
   16c39:	18 46 0e             	sbb    %al,0xe(%rsi)
   16c3c:	10 41 0e             	adc    %al,0xe(%rcx)
   16c3f:	08 45 0b             	or     %al,0xb(%rbp)
   16c42:	4c 0e                	rex.WR (bad) 
   16c44:	18 46 0e             	sbb    %al,0xe(%rsi)
   16c47:	10 41 0e             	adc    %al,0xe(%rcx)
   16c4a:	08 45 c3             	or     %al,-0x3d(%rbp)
   16c4d:	c6 00 00             	movb   $0x0,(%rax)
   16c50:	44 00 00             	add    %r8b,(%rax)
   16c53:	00 34 27             	add    %dh,(%rdi,%riz,1)
   16c56:	00 00                	add    %al,(%rax)
   16c58:	b8 a2 ff ff 8e       	mov    $0x8effffa2,%eax
   16c5d:	00 00                	add    %al,(%rax)
   16c5f:	00 00                	add    %al,(%rax)
   16c61:	4b 0e                	rex.WXB (bad) 
   16c63:	10 8c 02 46 0e 18 86 	adc    %cl,-0x79e7f1ba(%rdx,%rax,1)
   16c6a:	03 41 0e             	add    0xe(%rcx),%eax
   16c6d:	20 83 04 7f 0a 0e    	and    %al,0xe0a7f04(%rbx)
   16c73:	18 43 0e             	sbb    %al,0xe(%rbx)
   16c76:	10 42 0e             	adc    %al,0xe(%rdx)
   16c79:	08 4a 0b             	or     %cl,0xb(%rdx)
   16c7c:	41 0a 0e             	or     (%r14),%cl
   16c7f:	18 46 0e             	sbb    %al,0xe(%rsi)
   16c82:	10 42 0e             	adc    %al,0xe(%rdx)
   16c85:	08 47 0b             	or     %al,0xb(%rdi)
   16c88:	49 0e                	rex.WB (bad) 
   16c8a:	18 46 0e             	sbb    %al,0xe(%rsi)
   16c8d:	10 42 0e             	adc    %al,0xe(%rdx)
   16c90:	08 47 c3             	or     %al,-0x3d(%rdi)
   16c93:	c6                   	(bad)  
   16c94:	cc                   	int3   
   16c95:	00 00                	add    %al,(%rax)
   16c97:	00 4c 00 00          	add    %cl,0x0(%rax,%rax,1)
   16c9b:	00 7c 27 00          	add    %bh,0x0(%rdi,%riz,1)
   16c9f:	00 00                	add    %al,(%rax)
   16ca1:	a3 ff ff 9e 00 00 00 	movabs %eax,0x4f000000009effff
   16ca8:	00 4f 
   16caa:	0e                   	(bad)  
   16cab:	10 8c 02 46 0e 18 86 	adc    %cl,-0x79e7f1ba(%rdx,%rax,1)
   16cb2:	03 41 0e             	add    0xe(%rcx),%eax
   16cb5:	20 83 04 7d 0a 0e    	and    %al,0xe0a7d04(%rbx)
   16cbb:	18 43 0e             	sbb    %al,0xe(%rbx)
   16cbe:	10 42 0e             	adc    %al,0xe(%rdx)
   16cc1:	08 48 0b             	or     %cl,0xb(%rax)
   16cc4:	49 0a 0e             	rex.WB or (%r14),%cl
   16cc7:	18 46 0e             	sbb    %al,0xe(%rsi)
   16cca:	10 42 0e             	adc    %al,0xe(%rdx)
   16ccd:	08 47 0b             	or     %al,0xb(%rdi)
   16cd0:	41 0a 0e             	or     (%r14),%cl
   16cd3:	18 46 0e             	sbb    %al,0xe(%rsi)
   16cd6:	10 42 0e             	adc    %al,0xe(%rdx)
   16cd9:	08 47 0b             	or     %al,0xb(%rdi)
   16cdc:	50                   	push   %rax
   16cdd:	0e                   	(bad)  
   16cde:	08 c3                	or     %al,%bl
   16ce0:	c6                   	(bad)  
   16ce1:	cc                   	int3   
   16ce2:	00 00                	add    %al,(%rax)
   16ce4:	00 00                	add    %al,(%rax)
   16ce6:	00 00                	add    %al,(%rax)
   16ce8:	28 00                	sub    %al,(%rax)
   16cea:	00 00                	add    %al,(%rax)
   16cec:	cc                   	int3   
   16ced:	27                   	(bad)  
   16cee:	00 00                	add    %al,(%rax)
   16cf0:	50                   	push   %rax
   16cf1:	a3 ff ff 72 00 00 00 	movabs %eax,0x4a0000000072ffff
   16cf8:	00 4a 
   16cfa:	0e                   	(bad)  
   16cfb:	10 83 02 60 0a 0e    	adc    %al,0xe0a6002(%rbx)
   16d01:	08 46 0b             	or     %al,0xb(%rsi)
   16d04:	60                   	(bad)  
   16d05:	0e                   	(bad)  
   16d06:	08 48 c3             	or     %cl,-0x3d(%rax)
   16d09:	48 0e                	rex.W (bad) 
   16d0b:	10 83 02 51 0e 08    	adc    %al,0x80e5102(%rbx)
   16d11:	00 00                	add    %al,(%rax)
   16d13:	00 28                	add    %ch,(%rax)
   16d15:	00 00                	add    %al,(%rax)
   16d17:	00 f8                	add    %bh,%al
   16d19:	27                   	(bad)  
   16d1a:	00 00                	add    %al,(%rax)
   16d1c:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
   16d1d:	a3 ff ff 72 00 00 00 	movabs %eax,0x4a0000000072ffff
   16d24:	00 4a 
   16d26:	0e                   	(bad)  
   16d27:	10 83 02 60 0a 0e    	adc    %al,0xe0a6002(%rbx)
   16d2d:	08 46 0b             	or     %al,0xb(%rsi)
   16d30:	60                   	(bad)  
   16d31:	0e                   	(bad)  
   16d32:	08 48 c3             	or     %cl,-0x3d(%rax)
   16d35:	48 0e                	rex.W (bad) 
   16d37:	10 83 02 51 0e 08    	adc    %al,0x80e5102(%rbx)
   16d3d:	00 00                	add    %al,(%rax)
   16d3f:	00 14 00             	add    %dl,(%rax,%rax,1)
   16d42:	00 00                	add    %al,(%rax)
   16d44:	24 28                	and    $0x28,%al
   16d46:	00 00                	add    %al,(%rax)
   16d48:	28 a5 ff ff 58 00    	sub    %ah,0x58ffff(%rbp)
	...
   16d56:	00 00                	add    %al,(%rax)
   16d58:	14 00                	adc    $0x0,%al
   16d5a:	00 00                	add    %al,(%rax)
   16d5c:	3c 28                	cmp    $0x28,%al
   16d5e:	00 00                	add    %al,(%rax)
   16d60:	70 a5                	jo     16d07 <__GNU_EH_FRAME_HDR+0x3047>
   16d62:	ff                   	(bad)  
   16d63:	ff 09                	decl   (%rcx)
	...
   16d6d:	00 00                	add    %al,(%rax)
   16d6f:	00 10                	add    %dl,(%rax)
   16d71:	00 00                	add    %al,(%rax)
   16d73:	00 54 28 00          	add    %dl,0x0(%rax,%rbp,1)
   16d77:	00 b8 b2 fe ff 13    	add    %bh,0x13fffeb2(%rax)
   16d7d:	00 00                	add    %al,(%rax)
   16d7f:	00 00                	add    %al,(%rax)
   16d81:	00 00                	add    %al,(%rax)
   16d83:	00 10                	add    %dl,(%rax)
   16d85:	00 00                	add    %al,(%rax)
   16d87:	00 68 28             	add    %ch,0x28(%rax)
   16d8a:	00 00                	add    %al,(%rax)
   16d8c:	54                   	push   %rsp
   16d8d:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
   16d8e:	ff                   	(bad)  
   16d8f:	ff 09                	decl   (%rcx)
   16d91:	00 00                	add    %al,(%rax)
   16d93:	00 00                	add    %al,(%rax)
   16d95:	00 00                	add    %al,(%rax)
   16d97:	00 1c 00             	add    %bl,(%rax,%rax,1)
   16d9a:	00 00                	add    %al,(%rax)
   16d9c:	7c 28                	jl     16dc6 <__GNU_EH_FRAME_HDR+0x3106>
   16d9e:	00 00                	add    %al,(%rax)
   16da0:	50                   	push   %rax
   16da1:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
   16da2:	ff                   	(bad)  
   16da3:	ff 45 02             	incl   0x2(%rbp)
   16da6:	00 00                	add    %al,(%rax)
   16da8:	00 6a 0e             	add    %ch,0xe(%rdx)
   16dab:	10 03                	adc    %al,(%rbx)
   16dad:	07                   	(bad)  
   16dae:	02 0e                	add    (%rsi),%cl
   16db0:	08 00                	or     %al,(%rax)
   16db2:	00 00                	add    %al,(%rax)
   16db4:	00 00                	add    %al,(%rax)
   16db6:	00 00                	add    %al,(%rax)
   16db8:	10 00                	adc    %al,(%rax)
   16dba:	00 00                	add    %al,(%rax)
   16dbc:	9c                   	pushf  
   16dbd:	28 00                	sub    %al,(%rax)
   16dbf:	00 90 b2 fe ff 13    	add    %dl,0x13fffeb2(%rax)
   16dc5:	00 00                	add    %al,(%rax)
   16dc7:	00 00                	add    %al,(%rax)
   16dc9:	00 00                	add    %al,(%rax)
   16dcb:	00 2c 00             	add    %ch,(%rax,%rax,1)
   16dce:	00 00                	add    %al,(%rax)
   16dd0:	b0 28                	mov    $0x28,%al
   16dd2:	00 00                	add    %al,(%rax)
   16dd4:	6c                   	insb   (%dx),%es:(%rdi)
   16dd5:	a8 ff                	test   $0xff,%al
   16dd7:	ff 8c 01 00 00 00 45 	decl   0x45000000(%rcx,%rax,1)
   16dde:	0e                   	(bad)  
   16ddf:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
   16de5:	42 8f 03             	rex.X pop (%rbx)
   16de8:	49 8e 04 8d 05 46 8c 	rex.WB mov 0x68c4605(,%rcx,4),%es
   16def:	06 
   16df0:	83 07 03             	addl   $0x3,(%rdi)
   16df3:	6d                   	insl   (%dx),%es:(%rdi)
   16df4:	01 0a                	add    %ecx,(%rdx)
   16df6:	0c 07                	or     $0x7,%al
   16df8:	08 41 0b             	or     %al,0xb(%rcx)
   16dfb:	00 34 00             	add    %dh,(%rax,%rax,1)
   16dfe:	00 00                	add    %al,(%rax)
   16e00:	e0 28                	loopne 16e2a <__GNU_EH_FRAME_HDR+0x316a>
   16e02:	00 00                	add    %al,(%rax)
   16e04:	cc                   	int3   
   16e05:	a9 ff ff 66 00       	test   $0x66ffff,%eax
   16e0a:	00 00                	add    %al,(%rax)
   16e0c:	00 45 0e             	add    %al,0xe(%rbp)
   16e0f:	10 86 02 41 0e 18    	adc    %al,0x180e4102(%rsi)
   16e15:	83 03 4b             	addl   $0x4b,(%rbx)
   16e18:	0e                   	(bad)  
   16e19:	20 4e 0a             	and    %cl,0xa(%rsi)
   16e1c:	0e                   	(bad)  
   16e1d:	18 44 0e 10          	sbb    %al,0x10(%rsi,%rcx,1)
   16e21:	41 0e                	rex.B (bad) 
   16e23:	08 44 0b 65          	or     %al,0x65(%rbx,%rcx,1)
   16e27:	0a 0e                	or     (%rsi),%cl
   16e29:	18 44 0e 10          	sbb    %al,0x10(%rsi,%rcx,1)
   16e2d:	41 0e                	rex.B (bad) 
   16e2f:	08 46 0b             	or     %al,0xb(%rsi)
	...

Disassembly of section .fini_array:

0000000000017d80 <.fini_array>:
   17d80:	00 20                	add    %ah,(%rax)
   17d82:	00 00                	add    %al,(%rax)
   17d84:	00 00                	add    %al,(%rax)
   17d86:	00 00                	add    %al,(%rax)
   17d88:	10 20                	adc    %ah,(%rax)
   17d8a:	00 00                	add    %al,(%rax)
   17d8c:	00 00                	add    %al,(%rax)
   17d8e:	00 00                	add    %al,(%rax)
   17d90:	30 20                	xor    %ah,(%rax)
   17d92:	00 00                	add    %al,(%rax)
   17d94:	00 00                	add    %al,(%rax)
   17d96:	00 00                	add    %al,(%rax)
   17d98:	50                   	push   %rax
   17d99:	20 00                	and    %al,(%rax)
   17d9b:	00 00                	add    %al,(%rax)
   17d9d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .data.rel.ro:

0000000000017da0 <g_ecall_table>:
   17da0:	06                   	(bad)  
   17da1:	00 00                	add    %al,(%rax)
   17da3:	00 00                	add    %al,(%rax)
   17da5:	00 00                	add    %al,(%rax)
   17da7:	00 1b                	add    %bl,(%rbx)
   17da9:	46 00 00             	rex.RX add %r8b,(%rax)
	...
   17db8:	7d 44                	jge    17dfe <g_ecall_table+0x5e>
	...
   17dc6:	00 00                	add    %al,(%rax)
   17dc8:	df 42 00             	filds  0x0(%rdx)
	...
   17dd7:	00 ec                	add    %ch,%ah
   17dd9:	41 00 00             	add    %al,(%r8)
	...
   17de8:	f9                   	stc    
   17de9:	40 00 00             	rex add %al,(%rax)
	...
   17df8:	06                   	(bad)  
   17df9:	40 00 00             	rex add %al,(%rax)
	...

0000000000017e08 <__intel_security_cookie>:
	...

0000000000017e10 <g_cpu_core_num>:
   17e10:	00 00                	add    %al,(%rax)
	...

0000000000017e14 <g_aexnotify_supported>:
   17e14:	00 00                	add    %al,(%rax)
	...

0000000000017e18 <g_enclave_size>:
	...

0000000000017e20 <g_enclave_base>:
	...

0000000000017e28 <g_sdk_version>:
   17e28:	00 00                	add    %al,(%rax)
	...

0000000000017e2c <EDMM_supported>:
   17e2c:	00 00                	add    %al,(%rax)
	...

0000000000017e30 <g_cpu_feature_indicator>:
	...

0000000000017e38 <heap_min_size>:
	...

0000000000017e40 <is_edmm_supported>:
	...

0000000000017e48 <heap_size>:
	...

0000000000017e50 <heap_base>:
	...

0000000000017e58 <__memset_vp>:
   17e58:	70 0c                	jo     17e66 <rsrv_mem_min_size+0x6>
   17e5a:	01 00                	add    %eax,(%rax)
   17e5c:	00 00                	add    %al,(%rax)
	...

0000000000017e60 <rsrv_mem_min_size>:
	...

0000000000017e68 <rsrv_mem_size>:
	...

0000000000017e70 <rsrv_mem_base>:
	...

Disassembly of section .dynamic:

0000000000017e78 <_DYNAMIC>:
   17e78:	1a 00                	sbb    (%rax),%al
   17e7a:	00 00                	add    %al,(%rax)
   17e7c:	00 00                	add    %al,(%rax)
   17e7e:	00 00                	add    %al,(%rax)
   17e80:	80 7d 01 00          	cmpb   $0x0,0x1(%rbp)
   17e84:	00 00                	add    %al,(%rax)
   17e86:	00 00                	add    %al,(%rax)
   17e88:	1c 00                	sbb    $0x0,%al
   17e8a:	00 00                	add    %al,(%rax)
   17e8c:	00 00                	add    %al,(%rax)
   17e8e:	00 00                	add    %al,(%rax)
   17e90:	20 00                	and    %al,(%rax)
   17e92:	00 00                	add    %al,(%rax)
   17e94:	00 00                	add    %al,(%rax)
   17e96:	00 00                	add    %al,(%rax)
   17e98:	f5                   	cmc    
   17e99:	fe                   	(bad)  
   17e9a:	ff 6f 00             	ljmp   *0x0(%rdi)
   17e9d:	00 00                	add    %al,(%rax)
   17e9f:	00 90 03 00 00 00    	add    %dl,0x3(%rax)
   17ea5:	00 00                	add    %al,(%rax)
   17ea7:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 17ead <_DYNAMIC+0x35>
   17ead:	00 00                	add    %al,(%rax)
   17eaf:	00 08                	add    %cl,(%rax)
   17eb1:	08 00                	or     %al,(%rax)
   17eb3:	00 00                	add    %al,(%rax)
   17eb5:	00 00                	add    %al,(%rax)
   17eb7:	00 06                	add    %al,(%rsi)
   17eb9:	00 00                	add    %al,(%rax)
   17ebb:	00 00                	add    %al,(%rax)
   17ebd:	00 00                	add    %al,(%rax)
   17ebf:	00 90 04 00 00 00    	add    %dl,0x4(%rax)
   17ec5:	00 00                	add    %al,(%rax)
   17ec7:	00 0a                	add    %cl,(%rdx)
   17ec9:	00 00                	add    %al,(%rax)
   17ecb:	00 00                	add    %al,(%rax)
   17ecd:	00 00                	add    %al,(%rax)
   17ecf:	00 ec                	add    %ch,%ah
   17ed1:	01 00                	add    %eax,(%rax)
   17ed3:	00 00                	add    %al,(%rax)
   17ed5:	00 00                	add    %al,(%rax)
   17ed7:	00 0b                	add    %cl,(%rbx)
   17ed9:	00 00                	add    %al,(%rax)
   17edb:	00 00                	add    %al,(%rax)
   17edd:	00 00                	add    %al,(%rax)
   17edf:	00 18                	add    %bl,(%rax)
   17ee1:	00 00                	add    %al,(%rax)
   17ee3:	00 00                	add    %al,(%rax)
   17ee5:	00 00                	add    %al,(%rax)
   17ee7:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 17eed <_DYNAMIC+0x75>
	...
   17ef5:	00 00                	add    %al,(%rax)
   17ef7:	00 03                	add    %al,(%rbx)
   17ef9:	00 00                	add    %al,(%rax)
   17efb:	00 00                	add    %al,(%rax)
   17efd:	00 00                	add    %al,(%rax)
   17eff:	00 b8 7f 01 00 00    	add    %bh,0x17f(%rax)
   17f05:	00 00                	add    %al,(%rax)
   17f07:	00 07                	add    %al,(%rdi)
   17f09:	00 00                	add    %al,(%rax)
   17f0b:	00 00                	add    %al,(%rax)
   17f0d:	00 00                	add    %al,(%rax)
   17f0f:	00 f8                	add    %bh,%al
   17f11:	09 00                	or     %eax,(%rax)
   17f13:	00 00                	add    %al,(%rax)
   17f15:	00 00                	add    %al,(%rax)
   17f17:	00 08                	add    %cl,(%rax)
   17f19:	00 00                	add    %al,(%rax)
   17f1b:	00 00                	add    %al,(%rax)
   17f1d:	00 00                	add    %al,(%rax)
   17f1f:	00 28                	add    %ch,(%rax)
   17f21:	02 00                	add    (%rax),%al
   17f23:	00 00                	add    %al,(%rax)
   17f25:	00 00                	add    %al,(%rax)
   17f27:	00 09                	add    %cl,(%rcx)
   17f29:	00 00                	add    %al,(%rax)
   17f2b:	00 00                	add    %al,(%rax)
   17f2d:	00 00                	add    %al,(%rax)
   17f2f:	00 18                	add    %bl,(%rax)
   17f31:	00 00                	add    %al,(%rax)
   17f33:	00 00                	add    %al,(%rax)
   17f35:	00 00                	add    %al,(%rax)
   17f37:	00 1e                	add    %bl,(%rsi)
   17f39:	00 00                	add    %al,(%rax)
   17f3b:	00 00                	add    %al,(%rax)
   17f3d:	00 00                	add    %al,(%rax)
   17f3f:	00 08                	add    %cl,(%rax)
   17f41:	00 00                	add    %al,(%rax)
   17f43:	00 00                	add    %al,(%rax)
   17f45:	00 00                	add    %al,(%rax)
   17f47:	00 fb                	add    %bh,%bl
   17f49:	ff                   	(bad)  
   17f4a:	ff 6f 00             	ljmp   *0x0(%rdi)
   17f4d:	00 00                	add    %al,(%rax)
   17f4f:	00 01                	add    %al,(%rcx)
   17f51:	00 00                	add    %al,(%rax)
   17f53:	08 00                	or     %al,(%rax)
   17f55:	00 00                	add    %al,(%rax)
   17f57:	00 f9                	add    %bh,%cl
   17f59:	ff                   	(bad)  
   17f5a:	ff 6f 00             	ljmp   *0x0(%rdi)
   17f5d:	00 00                	add    %al,(%rax)
   17f5f:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 17f65 <_DYNAMIC+0xed>
	...

Disassembly of section .got:

0000000000017fb8 <_GLOBAL_OFFSET_TABLE_>:
   17fb8:	78 7e                	js     18038 <extended+0x18>
   17fba:	01 00                	add    %eax,(%rax)
	...
   17fd8:	b3 28                	mov    $0x28,%bl
   17fda:	01 00                	add    %eax,(%rax)
   17fdc:	00 00                	add    %al,(%rax)
   17fde:	00 00                	add    %al,(%rax)
   17fe0:	95                   	xchg   %eax,%ebp
   17fe1:	28 01                	sub    %al,(%rcx)
   17fe3:	00 00                	add    %al,(%rax)
   17fe5:	00 00                	add    %al,(%rax)
   17fe7:	00 00                	add    %al,(%rax)
   17fe9:	90                   	nop
   17fea:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .data:

0000000000018000 <extension_2op_table>:
   18000:	5a                   	pop    %rdx
   18001:	05 00 a9 08 00       	add    $0x8a900,%eax
   18006:	5a                   	pop    %rdx
   18007:	50                   	push   %rax
   18008:	96                   	xchg   %eax,%esi
   18009:	40 55                	rex push %rbp
	...

0000000000018020 <extended>:
   18020:	c1 d8 90             	rcr    $0x90,%eax
   18023:	90                   	nop
   18024:	80 80 80 80 80 80 80 	addb   $0x80,-0x7f7f7f80(%rax)
   1802b:	80 80 90 80 93 94 a4 	addb   $0xa4,-0x6b6c7f70(%rax)
   18032:	93                   	xchg   %eax,%ebx
   18033:	a3 94 94 93 a3 e8 82 	movabs %eax,0x645482e8a3939494
   1803a:	54 64 
   1803c:	82                   	(bad)  
   1803d:	82                   	(bad)  
   1803e:	82                   	(bad)  
   1803f:	82                   	(bad)  
   18040:	80 80 80 80 80 80 80 	addb   $0x80,-0x7f7f7f80(%rax)
   18047:	80 94 a4 93 a4 93 93 	adcb   $0x92,-0x6c6c5b6d(%rsp,%riz,4)
   1804e:	92 
   1804f:	92                   	xchg   %eax,%edx
   18050:	80 80 80 80 80 80 80 	addb   $0x80,-0x7f7f7f80(%rax)
   18057:	80 80 80 80 80 80 80 	addb   $0x80,-0x7f7f7f80(%rax)
   1805e:	80 80 92 92 92 92 92 	addb   $0x92,-0x6d6d6d6e(%rax)
   18065:	92                   	xchg   %eax,%edx
   18066:	92                   	xchg   %eax,%edx
   18067:	92                   	xchg   %eax,%edx
   18068:	92                   	xchg   %eax,%edx
   18069:	92                   	xchg   %eax,%edx
   1806a:	92                   	xchg   %eax,%edx
   1806b:	92                   	xchg   %eax,%edx
   1806c:	92                   	xchg   %eax,%edx
   1806d:	92                   	xchg   %eax,%edx
   1806e:	92                   	xchg   %eax,%edx
   1806f:	92                   	xchg   %eax,%edx
   18070:	80 94 94 94 94 94 94 	adcb   $0x94,-0x6b6b6b6c(%rsp,%rdx,4)
   18077:	94 
   18078:	94                   	xchg   %eax,%esp
   18079:	94                   	xchg   %eax,%esp
   1807a:	93                   	xchg   %eax,%ebx
   1807b:	94                   	xchg   %eax,%esp
   1807c:	94                   	xchg   %eax,%esp
   1807d:	94                   	xchg   %eax,%esp
   1807e:	94                   	xchg   %eax,%esp
   1807f:	94                   	xchg   %eax,%esp
   18080:	92                   	xchg   %eax,%edx
   18081:	92                   	xchg   %eax,%edx
   18082:	92                   	xchg   %eax,%edx
   18083:	93                   	xchg   %eax,%ebx
   18084:	93                   	xchg   %eax,%ebx
   18085:	93                   	xchg   %eax,%ebx
   18086:	93                   	xchg   %eax,%ebx
   18087:	93                   	xchg   %eax,%ebx
   18088:	93                   	xchg   %eax,%ebx
   18089:	93                   	xchg   %eax,%ebx
   1808a:	93                   	xchg   %eax,%ebx
   1808b:	93                   	xchg   %eax,%ebx
   1808c:	94                   	xchg   %eax,%esp
   1808d:	94                   	xchg   %eax,%esp
   1808e:	92                   	xchg   %eax,%edx
   1808f:	93                   	xchg   %eax,%ebx
   18090:	94                   	xchg   %eax,%esp
   18091:	80 80 80 93 93 93 80 	addb   $0x80,-0x6c6c6c80(%rax)
   18098:	80 80 40 80 94 94 42 	addb   $0x42,-0x6b6b7fc0(%rax)
   1809f:	a3 80 80 80 80 80 80 	movabs %eax,0x8080808080808080
   180a6:	80 80 
   180a8:	80 80 80 80 80 80 80 	addb   $0x80,-0x7f7f7f80(%rax)
   180af:	80 a0 a0 a0 a0 a0 a0 	andb   $0xa0,-0x5f5f5f60(%rax)
   180b6:	a0 a0 a0 a0 a0 a0 a0 	movabs 0xa0a0a0a0a0a0a0a0,%al
   180bd:	a0 a0 
   180bf:	a0 80 80 80 92 a2 a2 	movabs 0x8080a2a292808080,%al
   180c6:	80 80 
   180c8:	80 80 80 a2 a2 a2 e0 	addb   $0xe0,-0x5d5d5d80(%rax)
   180cf:	92                   	xchg   %eax,%edx
   180d0:	a0 a2 92 a2 92 92 90 	movabs 0x9291909292a292a2,%al
   180d7:	91 92 
   180d9:	80 ca a2             	or     $0xa2,%dl
   180dc:	92                   	xchg   %eax,%edx
   180dd:	92                   	xchg   %eax,%edx
   180de:	90                   	nop
   180df:	91                   	xchg   %eax,%ecx
   180e0:	a0 a2 94 a3 91 80 94 	movabs 0x80d3948091a394a2,%al
   180e7:	d3 80 
   180e9:	80 80 80 80 80 80 80 	addb   $0x80,-0x7f7f7f80(%rax)
   180f0:	94                   	xchg   %eax,%esp
   180f1:	93                   	xchg   %eax,%ebx
   180f2:	93                   	xchg   %eax,%ebx
   180f3:	93                   	xchg   %eax,%ebx
   180f4:	93                   	xchg   %eax,%ebx
   180f5:	93                   	xchg   %eax,%ebx
   180f6:	a3 80 93 93 93 93 93 	movabs %eax,0x9393939393939380
   180fd:	93 93 
   180ff:	93                   	xchg   %eax,%ebx
   18100:	93                   	xchg   %eax,%ebx
   18101:	93                   	xchg   %eax,%ebx
   18102:	93                   	xchg   %eax,%ebx
   18103:	93                   	xchg   %eax,%ebx
   18104:	93                   	xchg   %eax,%ebx
   18105:	93                   	xchg   %eax,%ebx
   18106:	94                   	xchg   %eax,%esp
   18107:	a3 93 93 93 93 93 93 	movabs %eax,0x9393939393939393
   1810e:	93 93 
   18110:	94                   	xchg   %eax,%esp
   18111:	93                   	xchg   %eax,%ebx
   18112:	93                   	xchg   %eax,%ebx
   18113:	93                   	xchg   %eax,%ebx
   18114:	93                   	xchg   %eax,%ebx
   18115:	93                   	xchg   %eax,%ebx
   18116:	93                   	xchg   %eax,%ebx
   18117:	80 93 93 93 93 93 93 	adcb   $0x93,-0x6c6c6c6d(%rbx)
   1811e:	93                   	xchg   %eax,%ebx
   1811f:	80       	sbbb   $0x90,-0x6f696b66(%rax)

0000000000018120 <standard>:
   18120:	98                   	cwtl   
   18121:	9a                   	(bad)  
   18122:	94                   	xchg   %eax,%esp
   18123:	96                   	xchg   %eax,%esi
   18124:	90                   	nop
   18125:	90                   	nop
   18126:	90                   	nop
   18127:	90                   	nop
   18128:	98                   	cwtl   
   18129:	9a                   	(bad)  
   1812a:	94                   	xchg   %eax,%esp
   1812b:	96                   	xchg   %eax,%esi
   1812c:	90                   	nop
   1812d:	90                   	nop
   1812e:	90                   	nop
   1812f:	80 98 9a 94 96 90 90 	sbbb   $0x90,-0x6f696b66(%rax)
   18136:	90                   	nop
   18137:	90                   	nop
   18138:	98                   	cwtl   
   18139:	9a                   	(bad)  
   1813a:	94                   	xchg   %eax,%esp
   1813b:	96                   	xchg   %eax,%esi
   1813c:	90                   	nop
   1813d:	90                   	nop
   1813e:	90                   	nop
   1813f:	90                   	nop
   18140:	98                   	cwtl   
   18141:	9a                   	(bad)  
   18142:	94                   	xchg   %eax,%esp
   18143:	96                   	xchg   %eax,%esi
   18144:	90                   	nop
   18145:	90                   	nop
   18146:	13 90 98 9a 94 96    	adc    -0x696b6568(%rax),%edx
   1814c:	90                   	nop
   1814d:	90                   	nop
   1814e:	10 90 98 9a 94 96    	adc    %dl,-0x696b6568(%rax)
   18154:	90                   	nop
   18155:	90                   	nop
   18156:	11 90 94 96 94 96    	adc    %edx,-0x696b696c(%rax)
   1815c:	90                   	nop
   1815d:	90                   	nop
   1815e:	12 90 40 40 40 40    	adc    0x40404040(%rax),%dl
   18164:	40                   	rex
   18165:	40                   	rex
   18166:	40                   	rex
   18167:	40                   	rex
   18168:	40                   	rex
   18169:	40                   	rex
   1816a:	40                   	rex
   1816b:	40                   	rex
   1816c:	40                   	rex
   1816d:	40                   	rex
   1816e:	40                   	rex
   1816f:	40 b0 b0             	rex mov $0xb0,%al
   18172:	b0 b0                	mov    $0xb0,%al
   18174:	b0 b0                	mov    $0xb0,%al
   18176:	b0 b0                	mov    $0xb0,%al
   18178:	90                   	nop
   18179:	90                   	nop
   1817a:	90                   	nop
   1817b:	90                   	nop
   1817c:	90                   	nop
   1817d:	90                   	nop
   1817e:	90                   	nop
   1817f:	90                   	nop
   18180:	b0 90                	mov    $0x90,%al
   18182:	90                   	nop
   18183:	95                   	xchg   %eax,%ebp
   18184:	14 15                	adc    $0x15,%al
   18186:	20 30                	and    %dh,(%rax)
   18188:	b0 96                	mov    $0x96,%al
   1818a:	b0 96                	mov    $0x96,%al
   1818c:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1818d:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1818e:	a0 a0 90 90 90 90 90 	movabs 0x90909090909090a0,%al
   18195:	90 90 
   18197:	90                   	nop
   18198:	90                   	nop
   18199:	90                   	nop
   1819a:	90                   	nop
   1819b:	90                   	nop
   1819c:	90                   	nop
   1819d:	90                   	nop
   1819e:	90                   	nop
   1819f:	90                   	nop
   181a0:	c4                   	(bad)  
   181a1:	c6 c4 c6             	mov    $0xc6,%ah
   181a4:	94                   	xchg   %eax,%esp
   181a5:	96                   	xchg   %eax,%esi
   181a6:	94                   	xchg   %eax,%esp
   181a7:	96                   	xchg   %eax,%esi
   181a8:	98                   	cwtl   
   181a9:	9a                   	(bad)  
   181aa:	94                   	xchg   %eax,%esp
   181ab:	96                   	xchg   %eax,%esi
   181ac:	99                   	cltd   
   181ad:	90                   	nop
   181ae:	95                   	xchg   %eax,%ebp
   181af:	9a                   	(bad)  
   181b0:	90                   	nop
   181b1:	90                   	nop
   181b2:	90                   	nop
   181b3:	90                   	nop
   181b4:	90                   	nop
   181b5:	90                   	nop
   181b6:	90                   	nop
   181b7:	90                   	nop
   181b8:	90                   	nop
   181b9:	90                   	nop
   181ba:	b0 90                	mov    $0x90,%al
   181bc:	b0 90                	mov    $0x90,%al
   181be:	90                   	nop
   181bf:	90                   	nop
   181c0:	90                   	nop
   181c1:	90                   	nop
   181c2:	90                   	nop
   181c3:	90                   	nop
   181c4:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   181c5:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   181c6:	a0 a0 90 90 a5 a5 a0 	movabs 0xa4a0a0a5a59090a0,%al
   181cd:	a0 a4 
   181cf:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
   181d0:	90                   	nop
   181d1:	90                   	nop
   181d2:	90                   	nop
   181d3:	90                   	nop
   181d4:	90                   	nop
   181d5:	90                   	nop
   181d6:	90                   	nop
   181d7:	90                   	nop
   181d8:	90                   	nop
   181d9:	90                   	nop
   181da:	90                   	nop
   181db:	90                   	nop
   181dc:	90                   	nop
   181dd:	90                   	nop
   181de:	90                   	nop
   181df:	90                   	nop
   181e0:	d8 da                	fcomp  %st(2)
   181e2:	90                   	nop
   181e3:	90                   	nop
   181e4:	90                   	nop
   181e5:	90                   	nop
   181e6:	f8                   	clc    
   181e7:	fa                   	cli    
   181e8:	90                   	nop
   181e9:	90                   	nop
   181ea:	90                   	nop
   181eb:	90                   	nop
   181ec:	90                   	nop
   181ed:	90                   	nop
   181ee:	90                   	nop
   181ef:	90                   	nop
   181f0:	d8 da                	fcomp  %st(2)
   181f2:	d8 da                	fcomp  %st(2)
   181f4:	90                   	nop
   181f5:	90                   	nop
   181f6:	90                   	nop
   181f7:	90                   	nop
   181f8:	90                   	nop
   181f9:	90                   	nop
   181fa:	90                   	nop
   181fb:	90                   	nop
   181fc:	90                   	nop
   181fd:	90                   	nop
   181fe:	90                   	nop
   181ff:	90                   	nop
   18200:	90                   	nop
   18201:	90                   	nop
   18202:	90                   	nop
   18203:	90                   	nop
   18204:	90                   	nop
   18205:	90                   	nop
   18206:	90                   	nop
   18207:	90                   	nop
   18208:	b0 90                	mov    $0x90,%al
   1820a:	90                   	nop
   1820b:	90                   	nop
   1820c:	90                   	nop
   1820d:	90                   	nop
   1820e:	90                   	nop
   1820f:	90                   	nop
   18210:	03 90 01 02 90 90    	add    -0x6f6ffdff(%rax),%edx
   18216:	e4 e6                	in     $0xe6,%al
   18218:	90                   	nop
   18219:	90                   	nop
   1821a:	90                   	nop
   1821b:	90                   	nop
   1821c:	90                   	nop
   1821d:	90                   	nop
   1821e:	f8                   	clc    
   1821f:	f6               	testb  $0x0,(%rcx)

0000000000018220 <_ZL16g_is_first_ecall>:
   18220:	01 00                	add    %eax,(%rax)
	...

0000000000018230 <sgx_trts_version>:
   18230:	53                   	push   %rbx
   18231:	47 58                	rex.RXB pop %r8
   18233:	5f                   	pop    %rdi
   18234:	54                   	push   %rsp
   18235:	52                   	push   %rdx
   18236:	54                   	push   %rsp
   18237:	53                   	push   %rbx
   18238:	5f                   	pop    %rdi
   18239:	56                   	push   %rsi
   1823a:	45 52                	rex.RB push %r10
   1823c:	53                   	push   %rbx
   1823d:	49                   	rex.WB
   1823e:	4f                   	rex.WRXB
   1823f:	4e 5f                	rex.WRX pop %rdi
   18241:	32 2e                	xor    (%rsi),%ch
   18243:	32 33                	xor    (%rbx),%dh
   18245:	2e 31 30             	cs xor %esi,(%rax)
   18248:	30 2e                	xor    %ch,(%rsi)
   1824a:	32 00                	xor    (%rax),%al
   1824c:	00 00                	add    %al,(%rax)
	...

0000000000018250 <__dso_handle>:
   18250:	50                   	push   %rax
   18251:	82                   	(bad)  
   18252:	01 00                	add    %eax,(%rax)
	...

0000000000019000 <aex_notify_c3_cache>:
	...

000000000001a000 <g_user_ema_root>:
   1a000:	20 a0 01 00 00 00    	and    %ah,0x1(%rax)
	...

000000000001a020 <user_ema_guard>:
	...
   1a058:	20 a0 01 00 00 00    	and    %ah,0x1(%rax)
   1a05e:	00 00                	add    %al,(%rax)
   1a060:	20 a0 01 00 00 00    	and    %ah,0x1(%rax)
	...

000000000001a068 <g_rts_ema_root>:
   1a068:	80 a0 01 00 00 00 00 	andb   $0x0,0x1(%rax)
	...

000000000001a080 <rts_ema_guard>:
	...
   1a0b8:	80 a0 01 00 00 00 00 	andb   $0x0,0x1(%rax)
   1a0bf:	00 80 a0 01 00 00    	add    %al,0x1a0(%rax)
   1a0c5:	00 00                	add    %al,(%rax)
	...

000000000001a0c8 <reserve_size_increment>:
   1a0c8:	00 00                	add    %al,(%rax)
   1a0ca:	01 00                	add    %eax,(%rax)
   1a0cc:	00 00                	add    %al,(%rax)
	...

000000000001a0d0 <size_mask>:
   1a0d0:	f8                   	clc    
   1a0d1:	ff                   	(bad)  
   1a0d2:	ff                   	(bad)  
   1a0d3:	ff                   	(bad)  
   1a0d4:	ff                   	(bad)  
   1a0d5:	ff                   	(bad)  
   1a0d6:	ff                   	(bad)  
   1a0d7:	ff                 	decl   (%rax)

000000000001a0d8 <header_size>:
   1a0d8:	08 00                	or     %al,(%rax)
   1a0da:	00 00                	add    %al,(%rax)
   1a0dc:	00 00                	add    %al,(%rax)
	...

000000000001a0e0 <sgx_tstdc_version>:
   1a0e0:	53                   	push   %rbx
   1a0e1:	47 58                	rex.RXB pop %r8
   1a0e3:	5f                   	pop    %rdi
   1a0e4:	54                   	push   %rsp
   1a0e5:	53                   	push   %rbx
   1a0e6:	54                   	push   %rsp
   1a0e7:	44                   	rex.R
   1a0e8:	43 5f                	rex.XB pop %r15
   1a0ea:	56                   	push   %rsi
   1a0eb:	45 52                	rex.RB push %r10
   1a0ed:	53                   	push   %rbx
   1a0ee:	49                   	rex.WB
   1a0ef:	4f                   	rex.WRXB
   1a0f0:	4e 5f                	rex.WRX pop %rdi
   1a0f2:	32 2e                	xor    (%rsi),%ch
   1a0f4:	32 33                	xor    (%rbx),%dh
   1a0f6:	2e 31 30             	cs xor %esi,(%rax)
   1a0f9:	30 2e                	xor    %ch,(%rsi)
   1a0fb:	32 00                	xor    (%rax),%al
   1a0fd:	00 00                	add    %al,(%rax)
	...

000000000001a100 <sgx_tcrypto_version>:
   1a100:	53                   	push   %rbx
   1a101:	47 58                	rex.RXB pop %r8
   1a103:	5f                   	pop    %rdi
   1a104:	54                   	push   %rsp
   1a105:	43 52                	rex.XB push %r10
   1a107:	59                   	pop    %rcx
   1a108:	50                   	push   %rax
   1a109:	54                   	push   %rsp
   1a10a:	4f 5f                	rex.WRXB pop %r15
   1a10c:	56                   	push   %rsi
   1a10d:	45 52                	rex.RB push %r10
   1a10f:	53                   	push   %rbx
   1a110:	49                   	rex.WB
   1a111:	4f                   	rex.WRXB
   1a112:	4e 5f                	rex.WRX pop %rdi
   1a114:	32 2e                	xor    (%rsi),%ch
   1a116:	32 33                	xor    (%rbx),%dh
   1a118:	2e 31 30             	cs xor %esi,(%rax)
   1a11b:	30 2e                	xor    %ch,(%rsi)
   1a11d:	32 00                	xor    (%rax),%al
	...

000000000001a120 <sgx_tservice_version>:
   1a120:	53                   	push   %rbx
   1a121:	47 58                	rex.RXB pop %r8
   1a123:	5f                   	pop    %rdi
   1a124:	54                   	push   %rsp
   1a125:	53                   	push   %rbx
   1a126:	45 52                	rex.RB push %r10
   1a128:	56                   	push   %rsi
   1a129:	49                   	rex.WB
   1a12a:	43                   	rex.XB
   1a12b:	45 5f                	rex.RB pop %r15
   1a12d:	56                   	push   %rsi
   1a12e:	45 52                	rex.RB push %r10
   1a130:	53                   	push   %rbx
   1a131:	49                   	rex.WB
   1a132:	4f                   	rex.WRXB
   1a133:	4e 5f                	rex.WRX pop %rdi
   1a135:	32 2e                	xor    (%rsi),%ch
   1a137:	32 33                	xor    (%rbx),%dh
   1a139:	2e 31 30             	cs xor %esi,(%rax)
   1a13c:	30 2e                	xor    %ch,(%rsi)
   1a13e:	32 00                	xor    (%rax),%al

Disassembly of section .nipd:

000000000001a140 <g_enclave_state>:
   1a140:	00 00                	add    %al,(%rax)
	...

000000000001a144 <g_xsave_enabled>:
   1a144:	00 00                	add    %al,(%rax)
	...

Disassembly of section .bss:

000000000001a160 <current_masterpw>:
	...

000000000001a180 <pw_count>:
	...

000000000001a1a0 <stored_passwords>:
	...

000000000001a2e0 <g_uninit_flag>:
   1a2e0:	00 00                	add    %al,(%rax)
	...

000000000001a2e4 <_ZL10g_ife_lock>:
   1a2e4:	00 00                	add    %al,(%rax)
	...

000000000001a2e8 <_ZL12g_tcs_cookie>:
	...

000000000001a2f0 <_ZL10g_tcs_node>:
	...

000000000001a2f8 <g_mm_pfhandler>:
	...

000000000001a300 <_ZL12g_veh_cookie>:
	...

000000000001a308 <_ZL14g_handler_lock>:
	...

000000000001a310 <_ZL12g_first_node>:
	...

000000000001a318 <g_exit_function_cookie>:
	...

000000000001a320 <g_exit_function_lock>:
	...

000000000001a328 <g_exit_function>:
	...

000000000001a330 <adding_reserve>:
	...

000000000001a338 <reserve_list>:
	...

000000000001a340 <large_block_list>:
	...

000000000001a360 <exact_block_list>:
	...

000000000001ab60 <meta_used>:
	...

000000000001ab80 <meta_reserve>:
	...

000000000002ab80 <mm_user_end>:
	...

000000000002ab88 <mm_user_base>:
	...

000000000002ab90 <mm_lock>:
	...

000000000002ab98 <heap_used.0>:
	...

000000000002aba0 <g_peak_heap_used>:
	...

000000000002abc0 <_gm_>:
	...

000000000002af80 <mparams>:
	...

000000000002afb0 <malloc_global_mutex>:
	...

000000000002afb8 <g_peak_rsrv_mem_committed>:
	...

000000000002afc0 <_ZZ15sgx_self_reportE11report_lock>:
	...

000000000002afe0 <_ZZ15sgx_self_reportE7_report>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <__ImageBase+0x78>
   a:	74 75                	je     81 <__ImageBase+0x81>
   c:	20 31                	and    %dh,(%rcx)
   e:	33 2e                	xor    (%rsi),%ebp
  10:	33 2e                	xor    (%rsi),%ebp
  12:	30 2d 36 75 62 75    	xor    %ch,0x75627536(%rip)        # 7562754e <_end+0x755fc3be>
  18:	6e                   	outsb  %ds:(%rsi),(%dx)
  19:	74 75                	je     90 <__ImageBase+0x90>
  1b:	32 7e 32             	xor    0x32(%rsi),%bh
  1e:	34 2e                	xor    $0x2e,%al
  20:	30 34 29             	xor    %dh,(%rcx,%rbp,1)
  23:	20 31                	and    %dh,(%rcx)
  25:	33 2e                	xor    (%rsi),%ebp
  27:	33 2e                	xor    (%rsi),%ebp
  29:	30 00                	xor    %al,(%rax)

Disassembly of section .note.sgxmeta:

0000000000000000 <.note.sgxmeta>:
       0:	0d 00 00 00 00       	or     $0x0,%eax
       5:	50                   	push   %rax
       6:	00 00                	add    %al,(%rax)
       8:	01 00                	add    %eax,(%rax)
       a:	00 00                	add    %al,(%rax)
       c:	73 67                	jae    75 <__ImageBase+0x75>
       e:	78 5f                	js     6f <__ImageBase+0x6f>
      10:	6d                   	insl   (%dx),%es:(%rdi)
      11:	65 74 61             	gs je  75 <__ImageBase+0x75>
      14:	64 61                	fs (bad) 
      16:	74 61                	je     79 <__ImageBase+0x79>
      18:	00 4c 0e 5d          	add    %cl,0x5d(%rsi,%rcx,1)
      1c:	63 94 02 a8 86 04 00 	movsxd 0x486a8(%rdx,%rax,1),%edx
      23:	00 00                	add    %al,(%rax)
      25:	01 00                	add    %eax,(%rax)
      27:	00 00                	add    %al,(%rax)
      29:	70 10                	jo     3b <__ImageBase+0x3b>
      2b:	00 00                	add    %al,(%rax)
      2d:	01 00                	add    %eax,(%rax)
      2f:	00 00                	add    %al,(%rax)
      31:	01 00                	add    %eax,(%rax)
      33:	00 00                	add    %al,(%rax)
      35:	80 0a 00             	orb    $0x0,(%rdx)
      38:	00 00                	add    %al,(%rax)
      3a:	00 00                	add    %al,(%rax)
      3c:	00 01                	add    %al,(%rcx)
      3e:	00 00                	add    %al,(%rax)
      40:	00 00                	add    %al,(%rax)
      42:	00 40 00             	add    %al,0x0(%rax)
      45:	00 00                	add    %al,(%rax)
      47:	00 00                	add    %al,(%rax)
      49:	04 00                	add    $0x0,%al
      4b:	00 00                	add    %al,(%rax)
      4d:	00 00                	add    %al,(%rax)
      4f:	00 00                	add    %al,(%rax)
      51:	e7 00                	out    %eax,$0x0
      53:	00 00                	add    %al,(%rax)
      55:	00 00                	add    %al,(%rax)
      57:	00 00                	add    %al,(%rax)
      59:	06                   	(bad)  
      5a:	00 00                	add    %al,(%rax)
      5c:	00 e1                	add    %ah,%cl
      5e:	00 00                	add    %al,(%rax)
      60:	00 00                	add    %al,(%rax)
      62:	00 01                	add    %al,(%rcx)
	...
      6c:	00 25 04 25 20 01    	add    %ah,0x1202504(%rip)        # 1202576 <_end+0x11d73e6>
      72:	01 00                	add    %eax,(%rax)
      74:	00 60 00             	add    %ah,0x0(%rax)
      77:	00 00                	add    %al,(%rax)
      79:	60                   	(bad)  
      7a:	00 00                	add    %al,(%rax)
      7c:	00 01                	add    %al,(%rcx)
	...
      d6:	00 00                	add    %al,(%rax)
      d8:	00 0d 5b d0 bf de    	add    %cl,-0x21402fa5(%rip)        # ffffffffdebfd139 <_end+0xffffffffdebd1fa9>
      de:	b1 3e                	mov    $0x3e,%cl
      e0:	f1                   	icebp  
      e1:	59                   	pop    %rcx
      e2:	2e 09 75 a3          	cs or  %esi,-0x5d(%rbp)
      e6:	2e ec                	cs in  (%dx),%al
      e8:	5c                   	pop    %rsp
      e9:	3e ee                	ds out %al,(%dx)
      eb:	c6                   	(bad)  
      ec:	77 a8                	ja     96 <__ImageBase+0x96>
      ee:	df e3                	(bad)  
      f0:	bf d3 03 c3 81       	mov    $0x81c303d3,%edi
      f5:	90                   	nop
      f6:	6e                   	outsb  %ds:(%rsi),(%dx)
      f7:	c2 8e bd             	ret    $0xbd8e
      fa:	07                   	(bad)  
      fb:	29 46 ec             	sub    %eax,-0x14(%rsi)
      fe:	f2 c3                	bnd ret 
     100:	b6 0d                	mov    $0xd,%dh
     102:	9e                   	sahf   
     103:	dc 3a                	fdivrl (%rdx)
     105:	f2 07                	repnz (bad) 
     107:	b6 23                	mov    $0x23,%dh
     109:	22 78 46             	and    0x46(%rax),%bh
     10c:	72 25                	jb     133 <__ImageBase+0x133>
     10e:	48 3b ea             	cmp    %rdx,%rbp
     111:	1d f4 d6 f4 c1       	sbb    $0xc1f4d6f4,%eax
     116:	f4                   	hlt    
     117:	5c                   	pop    %rsp
     118:	b5 c7                	mov    $0xc7,%ch
     11a:	b4 56                	mov    $0x56,%ah
     11c:	e2 8b                	loop   a9 <__ImageBase+0xa9>
     11e:	3c b7                	cmp    $0xb7,%al
     120:	55                   	push   %rbp
     121:	5d                   	pop    %rbp
     122:	ae                   	scas   %es:(%rdi),%al
     123:	7f 6f                	jg     194 <__ImageBase+0x194>
     125:	b9 54 42 89 fb       	mov    $0xfb894254,%ecx
     12a:	ed                   	in     (%dx),%eax
     12b:	f7 e7                	mul    %edi
     12d:	ba e2 50 26 95       	mov    $0x952650e2,%edx
     132:	b6 88                	mov    $0x88,%dh
     134:	1e                   	(bad)  
     135:	7e f6                	jle    12d <__ImageBase+0x12d>
     137:	0a df                	or     %bh,%bl
     139:	5e                   	pop    %rsi
     13a:	8d                   	(bad)  
     13b:	f9                   	stc    
     13c:	f2 a4                	repnz movsb %ds:(%rsi),%es:(%rdi)
     13e:	e5 5a                	in     $0x5a,%eax
     140:	aa                   	stos   %al,%es:(%rdi)
     141:	82                   	(bad)  
     142:	8d 42 e0             	lea    -0x20(%rdx),%eax
     145:	e8 88 66 77 c0       	call   ffffffffc07767d2 <_end+0xffffffffc074b642>
     14a:	1a a7 8f 64 66 35    	sbb    0x3566648f(%rdi),%ah
     150:	e6 ee                	out    %al,$0xee
     152:	88 80 7c 2c 87 6a    	mov    %al,0x6a872c7c(%rax)
     158:	6c                   	insb   (%dx),%es:(%rdi)
     159:	37                   	(bad)  
     15a:	d5                   	(bad)  
     15b:	71 58                	jno    1b5 <__ImageBase+0x1b5>
     15d:	e1 e9                	loope  148 <__ImageBase+0x148>
     15f:	26 d8 39             	es fdivrs (%rcx)
     162:	2a 36                	sub    (%rsi),%dh
     164:	df 7a 25             	fistpll 0x25(%rdx)
     167:	38 6b 25             	cmp    %ch,0x25(%rbx)
     16a:	2e 76 4f             	jbe,pn 1bc <__ImageBase+0x1bc>
     16d:	53                   	push   %rbx
     16e:	35 0f 80 ab 5b       	xor    $0x5bab800f,%eax
     173:	dd 0f                	fisttpll (%rdi)
     175:	8a bc 43 91 bf 2a 27 	mov    0x272abf91(%rbx,%rax,2),%bh
     17c:	3c 19                	cmp    $0x19,%al
     17e:	dd 3e                	fnstsw (%rsi)
     180:	ad                   	lods   %ds:(%rsi),%eax
     181:	97                   	xchg   %eax,%edi
     182:	11 a2 0e b3 73 d9    	adc    %esp,-0x268c4cf2(%rdx)
     188:	75 b3                	jne    13d <__ImageBase+0x13d>
     18a:	42 63 ef             	rex.X movsxd %edi,%ebp
     18d:	21 89 45 24 c6 cc    	and    %ecx,-0x3339dbbb(%rcx)
     193:	cb                   	lret   
     194:	eb 30                	jmp    1c6 <__ImageBase+0x1c6>
     196:	dd 76 ae             	fnsave -0x52(%rsi)
     199:	f1                   	icebp  
     19a:	ee                   	out    %al,(%dx)
     19b:	34 25                	xor    $0x25,%al
     19d:	1b 00                	sbb    (%rax),%eax
     19f:	50                   	push   %rax
     1a0:	7d 49                	jge    1eb <__ImageBase+0x1eb>
     1a2:	77 a5                	ja     149 <__ImageBase+0x149>
     1a4:	24 90                	and    $0x90,%al
     1a6:	7b 92                	jnp    13a <__ImageBase+0x13a>
     1a8:	24 96                	and    $0x96,%al
     1aa:	1b e6                	sbb    %esi,%esp
     1ac:	98                   	cwtl   
     1ad:	d6                   	(bad)  
     1ae:	42                   	rex.X
     1af:	36 3c 44             	ss cmp $0x44,%al
     1b2:	0c 6f                	or     $0x6f,%al
     1b4:	01 63 06             	add    %esp,0x6(%rbx)
     1b7:	17                   	(bad)  
     1b8:	8d 42 ac             	lea    -0x54(%rdx),%eax
     1bb:	7b 8b                	jnp    148 <__ImageBase+0x148>
     1bd:	a9 6d eb 67 dc       	test   $0xdc67eb6d,%eax
     1c2:	e7 ee                	out    %eax,$0xee
     1c4:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
     1c5:	ea                   	(bad)  
     1c6:	7e 59                	jle    221 <__ImageBase+0x221>
     1c8:	5e                   	pop    %rsi
     1c9:	05 96 f8 3d 2b       	add    $0x2b3df896,%eax
     1ce:	88 6d ee             	mov    %ch,-0x12(%rbp)
     1d1:	cd b6                	int    $0xb6
     1d3:	8b c0                	mov    %eax,%eax
     1d5:	10 da                	adc    %bl,%dl
     1d7:	bf 59 bb a0 ed       	mov    $0xeda0bb59,%edi
     1dc:	87 d3                	xchg   %edx,%ebx
     1de:	48                   	rex.W
     1df:	43 f1                	rex.XB icebp 
     1e1:	69 32 c8 06 7c 5c    	imul   $0x5c7c06c8,(%rdx),%esi
     1e7:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
     1e8:	c5 1a a9             	(bad)
     1eb:	e9 e1 00 20 a9       	jmp    ffffffffa92002d1 <_end+0xffffffffa91d5141>
     1f0:	8d                   	(bad)  
     1f1:	e1 42                	loope  235 <__ImageBase+0x235>
     1f3:	9d                   	popf   
     1f4:	2b 71 4a             	sub    0x4a(%rcx),%esi
     1f7:	ff cb                	dec    %ebx
     1f9:	b6 d2                	mov    $0xd2,%dh
     1fb:	ac                   	lods   %ds:(%rsi),%al
     1fc:	c5 95 69 dd          	vpunpckhwd %ymm5,%ymm13,%ymm3
     200:	fa                   	cli    
     201:	ff 81 f2 06 b8 41    	incl   0x41b806f2(%rcx)
     207:	08 66 18             	or     %ah,0x18(%rsi)
     20a:	a3 bd a5 69 74 74 d9 	movabs %eax,0x8051d9747469a5bd
     211:	51 80 
     213:	ea                   	(bad)  
     214:	ac                   	lods   %ds:(%rsi),%al
     215:	87 23                	xchg   %esp,(%rbx)
     217:	0c 35                	or     $0x35,%al
     219:	cf                   	iret   
     21a:	05 ea db b0 b7       	add    $0xb7b0dbea,%eax
     21f:	e6 f8                	out    %al,$0xf8
     221:	5c                   	pop    %rsp
     222:	b5 05                	mov    $0x5,%ch
     224:	ff                   	(bad)  
     225:	7b 39                	jnp    260 <__ImageBase+0x260>
     227:	54                   	push   %rsp
     228:	a2 c3 73 4b d4 e3 c7 	movabs %al,0x2a18c7e3d44b73c3
     22f:	18 2a 
     231:	bb f1 76 d9 1c       	mov    $0x1cd976f1,%ebx
     236:	8d 57 1b             	lea    0x1b(%rdi),%edx
     239:	a1 36 85 7a e6 8d 65 	movabs 0xf30b658de67a8536,%eax
     240:	0b f3 
     242:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
     243:	8c 5b 93             	mov    %ds,-0x6d(%rbx)
     246:	9f                   	lahf   
     247:	b7 78                	mov    $0x78,%bh
     249:	6d                   	insl   (%dx),%es:(%rdi)
     24a:	1d ba 6e d7 93       	sbb    $0x93d76eba,%eax
     24f:	17                   	(bad)  
     250:	9f                   	lahf   
     251:	99                   	cltd   
     252:	09 d2                	or     %edx,%edx
     254:	02 fb                	add    %bl,%bh
     256:	38 0b                	cmp    %cl,(%rbx)
     258:	98                   	cwtl   
     259:	03 00                	add    (%rax),%eax
     25b:	00 00                	add    %al,(%rax)
     25d:	fc                   	cld    
     25e:	9b                   	fwait
     25f:	24 43                	and    $0x43,%al
     261:	28 b7 1f 09 6c 3f    	sub    %dh,0x3f6c091f(%rdi)
     267:	dd 68 a1             	(bad)  -0x5f(%rax)
     26a:	c9                   	leave  
     26b:	b6 b9                	mov    $0xb9,%dh
     26d:	bf a2 c1 0a 1c       	mov    $0x1c0ac1a2,%edi
     272:	41 f8                	rex.B clc 
     274:	9a                   	(bad)  
     275:	17                   	(bad)  
     276:	e6 e4                	out    %al,$0xe4
     278:	70 35                	jo     2af <__ImageBase+0x2af>
     27a:	9e                   	sahf   
     27b:	23 f7                	and    %edi,%esi
     27d:	79 82                	jns    201 <__ImageBase+0x201>
     27f:	41 15 52 dc a3 5a    	rex.B adc $0x5aa3dc52,%eax
     285:	78 11                	js     298 <__ImageBase+0x298>
     287:	14 af                	adc    $0xaf,%al
     289:	1b be ac 87 4d 17    	sbb    0x174d87ac(%rsi),%edi
     28f:	ca 2d 31             	lret   $0x312d
     292:	ef                   	out    %eax,(%dx)
     293:	10 1d 1c 6f 76 61    	adc    %bl,0x61766f1c(%rip)        # 617671b5 <_end+0x6173c025>
     299:	eb 06                	jmp    2a1 <__ImageBase+0x2a1>
     29b:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
     29c:	3c 98                	cmp    $0x98,%al
     29e:	90                   	nop
     29f:	63 ab 66 26 ff 1d    	movsxd 0x1dff2666(%rbx),%ebp
     2a5:	57                   	push   %rdi
     2a6:	61                   	(bad)  
     2a7:	46 91                	rex.RX xchg %eax,%ecx
     2a9:	08 41 e7             	or     %al,-0x19(%rcx)
     2ac:	c6                   	(bad)  
     2ad:	5d                   	pop    %rbp
     2ae:	86 31                	xchg   %dh,(%rcx)
     2b0:	f0 b7 af             	lock mov $0xaf,%bh
     2b3:	70 9e                	jo     253 <__ImageBase+0x253>
     2b5:	72 a4                	jb     25b <__ImageBase+0x25b>
     2b7:	ff                   	(bad)  
     2b8:	fd                   	std    
     2b9:	ca db ba             	lret   $0xbadb
     2bc:	23 15 fb bc 2c f4    	and    -0xbd34305(%rip),%edx        # fffffffff42cbfbd <_end+0xfffffffff42a0e2d>
     2c2:	7c 86                	jl     24a <__ImageBase+0x24a>
     2c4:	ff                   	(bad)  
     2c5:	39 70 38             	cmp    %esi,0x38(%rax)
     2c8:	b8 3a 40 4b 91       	mov    $0x914b403a,%eax
     2cd:	76 d7                	jbe    2a6 <__ImageBase+0x2a6>
     2cf:	7a ac                	jp     27d <__ImageBase+0x27d>
     2d1:	92                   	xchg   %eax,%edx
     2d2:	6d                   	insl   (%dx),%es:(%rdi)
     2d3:	ed                   	in     (%dx),%eax
     2d4:	92                   	xchg   %eax,%edx
     2d5:	5b                   	pop    %rbx
     2d6:	69 a0 58 01 35 cd bf 	imul   $0xb1e1b9bf,-0x32cafea8(%rax),%esp
     2dd:	b9 e1 b1 
     2e0:	f3 54                	repz push %rsp
     2e2:	48 f9                	rex.W stc 
     2e4:	c3                   	ret    
     2e5:	44 92                	rex.R xchg %eax,%edx
     2e7:	43 f5                	rex.XB cmc 
     2e9:	cf                   	iret   
     2ea:	b8 ad b7 c5 19       	mov    $0x19c5b7ad,%eax
     2ef:	16                   	(bad)  
     2f0:	30 1d df a0 2b bb    	xor    %bl,-0x44d45f21(%rip)        # ffffffffbb2ba3d5 <_end+0xffffffffbb28f245>
     2f6:	51                   	push   %rcx
     2f7:	df 7d db             	fistpll -0x25(%rbp)
     2fa:	77 7b                	ja     377 <__ImageBase+0x377>
     2fc:	69 b1 38 da 36 9c 4b 	imul   $0xc7fdcf4b,-0x63c925c8(%rcx),%esi
     303:	cf fd c7 
     306:	da 07                	fiaddl (%rdi)
     308:	49 e0 e2             	rex.WB loopne 2ed <__ImageBase+0x2ed>
     30b:	37                   	(bad)  
     30c:	3f                   	(bad)  
     30d:	d3 6a 4d             	shrl   %cl,0x4d(%rdx)
     310:	d0 23                	shlb   (%rbx)
     312:	79 58                	jns    36c <__ImageBase+0x36c>
     314:	31 98 cf 6a 9e 72    	xor    %ebx,0x729e6acf(%rax)
     31a:	89 0c f1             	mov    %ecx,(%rcx,%rsi,8)
     31d:	c7                   	(bad)  
     31e:	8c ea                	mov    %gs,%edx
     320:	de 73 c6             	fidivs -0x3a(%rbx)
     323:	89 2d 88 15 6c d3    	mov    %ebp,-0x2c93ea78(%rip)        # ffffffffd36c18b1 <_end+0xffffffffd3696721>
     329:	bb 14 32 02 45       	mov    $0x45023214,%ebx
     32e:	e2 96                	loop   2c6 <__ImageBase+0x2c6>
     330:	47 bc 71 bb 68 98    	rex.RXB mov $0x9868bb71,%r12d
     336:	07                   	(bad)  
     337:	1a ce                	sbb    %dh,%cl
     339:	6d                   	insl   (%dx),%es:(%rdi)
     33a:	fe                   	(bad)  
     33b:	e2 87                	loop   2c4 <__ImageBase+0x2c4>
     33d:	4b 83 d3 98          	rex.WXB adc $0xffffffffffffff98,%r11
     341:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
     342:	49 7c 94             	rex.WB jl 2d9 <__ImageBase+0x2d9>
     345:	21 78 fa             	and    %edi,-0x6(%rax)
     348:	f9                   	stc    
     349:	01 0f                	add    %ecx,(%rdi)
     34b:	32 0d 2b bd 2c 31    	xor    0x312cbd2b(%rip),%cl        # 312cc07c <_end+0x312a0eec>
     351:	4f                   	rex.WRXB
     352:	4d                   	rex.WRB
     353:	41                   	rex.B
     354:	48 89 f9             	mov    %rdi,%rcx
     357:	fe                   	(bad)  
     358:	78 3d                	js     397 <__ImageBase+0x397>
     35a:	db e9                	fucomi %st(1),%st
     35c:	89 aa db e0 1d 4e    	mov    %ebp,0x4e1de0db(%rdx)
     362:	7e fd                	jle    361 <__ImageBase+0x361>
     364:	d7                   	xlat   %ds:(%rbx)
     365:	d5                   	(bad)  
     366:	a3 3c 9d 78 7e 1d 32 	movabs %eax,0xd59c321d7e789d3c
     36d:	9c d5 
     36f:	5d                   	pop    %rbp
     370:	42 e5 2a             	rex.X in $0x2a,%eax
     373:	b2 8b                	mov    $0x8b,%dl
     375:	aa                   	stos   %al,%es:(%rdi)
     376:	99                   	cltd   
     377:	8b 7a cd             	mov    -0x33(%rdx),%edi
     37a:	46 ea                	rex.RX (bad) 
     37c:	18 c0                	sbb    %al,%al
     37e:	b9 c9 ac 41 09       	mov    $0x941acc9,%ecx
     383:	88 41 48             	mov    %al,0x48(%rcx)
     386:	60                   	(bad)  
     387:	9a                   	(bad)  
     388:	7d 88                	jge    312 <__ImageBase+0x312>
     38a:	07                   	(bad)  
     38b:	ae                   	scas   %es:(%rdi),%al
     38c:	ff 6b 0b             	ljmp   *0xb(%rbx)
     38f:	4b 91                	rex.WXB xchg %rax,%r9
     391:	ee                   	out    %al,(%dx)
     392:	08 a5 4c 1b d1 fc    	or     %ah,-0x32ee4b4(%rbp)
     398:	79 86                	jns    320 <__ImageBase+0x320>
     39a:	48                   	rex.W
     39b:	42 31 d7             	rex.X xor %edx,%edi
     39e:	71 97                	jno    337 <__ImageBase+0x337>
     3a0:	da 0d 79 c7 6a 76    	fimull 0x766ac779(%rip)        # 766acb1f <_end+0x7668198f>
     3a6:	11 55 a5             	adc    %edx,-0x5b(%rbp)
     3a9:	e9 7b fa 63 73       	jmp    7363fe29 <_end+0x73614c99>
     3ae:	e4 56                	in     $0x56,%al
     3b0:	38 70 de             	cmp    %dh,-0x22(%rax)
     3b3:	12 bd e8 db 36 56    	adc    0x5636dbe8(%rbp),%bh
     3b9:	13 61 18             	adc    0x18(%rcx),%esp
     3bc:	54                   	push   %rsp
     3bd:	5a                   	pop    %rdx
     3be:	cd 88                	int    $0x88
     3c0:	38 66 6f             	cmp    %ah,0x6f(%rsi)
     3c3:	df 3c d1             	fistpll (%rcx,%rdx,8)
     3c6:	94                   	xchg   %eax,%esp
     3c7:	c1 49 a4 63          	rorl   $0x63,-0x5c(%rcx)
     3cb:	00 9f e2 ec 2c 56    	add    %bl,0x562cece2(%rdi)
     3d1:	28 56 e8             	sub    %dl,-0x18(%rsi)
     3d4:	69 36 6d 65 06 5a    	imul   $0x5a06656d,(%rsi),%esi
     3da:	8c a9 30 00 00 00    	mov    %gs,0x30(%rcx)
     3e0:	00 ff                	add    %bh,%bh
     3e2:	ff                   	(bad)  
     3e3:	ff                   	(bad)  
     3e4:	ff 00                	incl   (%rax)
	...
     3f6:	00 00                	add    %al,(%rax)
     3f8:	00 04 00             	add    %al,(%rax,%rax,1)
     3fb:	00 00                	add    %al,(%rax)
     3fd:	00 00                	add    %al,(%rax)
     3ff:	00 00                	add    %al,(%rax)
     401:	03 00                	add    (%rax),%eax
     403:	00 00                	add    %al,(%rax)
     405:	00 00                	add    %al,(%rax)
     407:	00 00                	add    %al,(%rax)
     409:	fd                   	std    
     40a:	ff                   	(bad)  
     40b:	ff                   	(bad)  
     40c:	ff                   	(bad)  
     40d:	ff                   	(bad)  
     40e:	ff 00                	incl   (%rax)
     410:	ff 1b                	lcall  *(%rbx)
     412:	ff                   	(bad)  
     413:	ff                   	(bad)  
     414:	ff                   	(bad)  
     415:	ff                   	(bad)  
     416:	ff                   	(bad)  
     417:	ff                   	(bad)  
     418:	ff 23                	jmp    *(%rbx)
     41a:	34 1d                	xor    $0x1d,%al
     41c:	62                   	(bad)  
     41d:	07                   	(bad)  
     41e:	ad                   	lods   %ds:(%rsi),%eax
     41f:	3c ec                	cmp    $0xec,%al
     421:	08 ca                	or     %cl,%dl
     423:	1d f2 46 cc 9e       	sbb    $0x9ecc46f2,%eax
     428:	c2 19 5b             	ret    $0x5b19
     42b:	c0 88 28 2c 6c 7c c3 	rorb   $0xc3,0x7c6c2c28(%rax)
     432:	b4 a2                	mov    $0xa2,%ah
     434:	95                   	xchg   %eax,%ebp
     435:	5c                   	pop    %rsp
     436:	f1                   	icebp  
     437:	1e                   	(bad)  
     438:	08 00                	or     %al,(%rax)
	...
     466:	00 00                	add    %al,(%rax)
     468:	00 34 d6             	add    %dh,(%rsi,%rdx,8)
     46b:	a0 a7 04 2b d6 da 32 	movabs 0x681a32dad62b04a7,%al
     472:	1a 68 
     474:	21 31                	and    %esi,(%rcx)
     476:	e4 c4                	in     $0xc4,%al
     478:	77 2c                	ja     4a6 <__ImageBase+0x4a6>
     47a:	6b 5f f8 df          	imul   $0xffffffdf,-0x8(%rdi),%ebx
     47e:	38 2f                	cmp    %ch,(%rdi)
     480:	ca 52 f3             	lret   $0xf352
     483:	a8 14                	test   $0x14,%al
     485:	55                   	push   %rbp
     486:	18 9b a0 00 01 ed    	sbb    %bl,-0x12feff60(%rbx)
     48c:	d1 0f                	rorl   (%rdi)
     48e:	89 aa a1 a9 20 87    	mov    %ebp,-0x78df565f(%rdx)
     494:	ba a6 4c f3 4a       	mov    $0x4af34ca6,%edx
     499:	40 54                	rex push %rsp
     49b:	df dc                	(bad)  
     49d:	6f                   	outsl  %ds:(%rsi),(%dx)
     49e:	73 61                	jae    501 <__ImageBase+0x501>
     4a0:	dd 21                	frstor (%rcx)
     4a2:	d9 10                	fsts   (%rax)
     4a4:	36 a6                	cmpsb  %es:(%rdi),%ds:(%rsi)
     4a6:	15 dd ff e6 7e       	adc    $0x7ee6ffdd,%eax
     4ab:	1e                   	(bad)  
     4ac:	30 78 d5             	xor    %bh,-0x2b(%rax)
     4af:	99                   	cltd   
     4b0:	30 02                	xor    %al,(%rdx)
     4b2:	76 c0                	jbe    474 <__ImageBase+0x474>
     4b4:	90                   	nop
     4b5:	50                   	push   %rax
     4b6:	96                   	xchg   %eax,%esi
     4b7:	59                   	pop    %rcx
     4b8:	87 6d 9d             	xchg   %ebp,-0x63(%rbp)
     4bb:	84 2f                	test   %ch,(%rdi)
     4bd:	72 40                	jb     4ff <__ImageBase+0x4ff>
     4bf:	2d 4a 3c 52 65       	sub    $0x65523c4a,%eax
     4c4:	cd 2d                	int    $0x2d
     4c6:	a1 ab cd 6c ee 40 d8 	movabs 0xbf9fd840ee6ccdab,%eax
     4cd:	9f bf 
     4cf:	50                   	push   %rax
     4d0:	c4                   	(bad)  
     4d1:	2c 7a                	sub    $0x7a,%al
     4d3:	fd                   	std    
     4d4:	f5                   	cmc    
     4d5:	fb                   	sti    
     4d6:	d0 e9                	shr    %cl
     4d8:	bf 48 16 26 7d       	mov    $0x7d261648,%edi
     4dd:	27                   	(bad)  
     4de:	66 af                	scas   %es:(%rdi),%ax
     4e0:	62                   	(bad)  
     4e1:	aa                   	stos   %al,%es:(%rdi)
     4e2:	50                   	push   %rax
     4e3:	8b d4                	mov    %esp,%edx
     4e5:	a0 1e 46 28 a2 a9 b3 	movabs 0xcf68b3a9a228461e,%al
     4ec:	68 cf 
     4ee:	7b 12                	jnp    502 <__ImageBase+0x502>
     4f0:	8d                   	(bad)  
     4f1:	d7                   	xlat   %ds:(%rbx)
     4f2:	0c 2e                	or     $0x2e,%al
     4f4:	82                   	(bad)  
     4f5:	4c 0e                	rex.WR (bad) 
     4f7:	7c c3                	jl     4bc <__ImageBase+0x4bc>
     4f9:	b3 5c                	mov    $0x5c,%bl
     4fb:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
     4fc:	80 47 e4 8e          	addb   $0x8e,-0x1c(%rdi)
     500:	b5 7e                	mov    $0x7e,%ch
     502:	b6 4e                	mov    $0x4e,%dh
     504:	e7 6a                	out    %eax,$0x6a
     506:	3a 34 63             	cmp    (%rbx,%riz,2),%dh
     509:	6e                   	outsb  %ds:(%rsi),(%dx)
     50a:	92                   	xchg   %eax,%edx
     50b:	eb 99                	jmp    4a6 <__ImageBase+0x4a6>
     50d:	05 e9 fb 57 72       	add    $0x7257fbe9,%eax
     512:	60                   	(bad)  
     513:	e5 2b                	in     $0x2b,%eax
     515:	2b 94 fb af d2 51 45 	sub    0x4551d2af(%rbx,%rdi,8),%edx
     51c:	83 56 a2 c6          	adcl   $0xffffffc6,-0x5e(%rsi)
     520:	bd 13 7e 17 95       	mov    $0x95177e13,%ebp
     525:	1b 00                	sbb    (%rax),%eax
     527:	b2 21                	mov    $0x21,%dl
     529:	52                   	push   %rdx
     52a:	7a 67                	jp     593 <__ImageBase+0x593>
     52c:	c5 e6 14             	(bad)
     52f:	59                   	pop    %rcx
     530:	18 9e 27 f5 74 e6    	sbb    %bl,-0x198b0ad9(%rsi)
     536:	5e                   	pop    %rsi
     537:	df 08                	fisttps (%rax)
     539:	ea                   	(bad)  
     53a:	21 e3                	and    %esp,%ebx
     53c:	cb                   	lret   
     53d:	c0 8b 5f 5f 52 2e 62 	rorb   $0x62,0x2e525f5f(%rbx)
     544:	46 8e 1d 89 83 9e 29 	rex.RX mov 0x299e8389(%rip),%ds        # 299e88d4 <_end+0x299bd744>
     54b:	61                   	(bad)  
     54c:	b6 1a                	mov    $0x1a,%dh
     54e:	15 71 f4 b0 1e       	adc    $0x1eb0f471,%eax
     553:	23 41 23             	and    0x23(%rcx),%eax
     556:	fe                   	(bad)  
     557:	61                   	(bad)  
     558:	26 c5 21 76 41 e4    	es vpcmpeqd -0x1c(%rcx),%xmm11,%xmm8
     55e:	57                   	push   %rdi
     55f:	0e                   	(bad)  
     560:	b3 ec                	mov    $0xec,%bl
     562:	df 31                	fbstp  (%rcx)
     564:	98                   	cwtl   
     565:	c6                   	(bad)  
     566:	a8 a9                	test   $0xa9,%al
     568:	9f                   	lahf   
     569:	1f                   	(bad)  
     56a:	c0 39 6d             	sarb   $0x6d,(%rcx)
     56d:	94                   	xchg   %eax,%esp
     56e:	40 3f                	rex (bad) 
     570:	97                   	xchg   %eax,%edi
     571:	09 2c cc             	or     %ebp,(%rsp,%rcx,8)
     574:	85 68 0a             	test   %ebp,0xa(%rax)
     577:	0c b2                	or     $0xb2,%al
     579:	8e 12                	mov    (%rdx),%ss
     57b:	17                   	(bad)  
     57c:	62                   	(bad)  
     57d:	f0 44 cd 08          	lock rex.R int $0x8
     581:	2c 9a                	sub    $0x9a,%al
     583:	dd de                	fstp   %st(6)
     585:	5a                   	pop    %rdx
     586:	74 83                	je     50b <__ImageBase+0x50b>
     588:	66 14 91             	data16 adc $0x91,%al
     58b:	48 dd 10             	rex.W fstl (%rax)
     58e:	29 de                	sub    %ebx,%esi
     590:	fe                   	(bad)  
     591:	dd 58 1c             	fstpl  0x1c(%rax)
     594:	3d d3 10 c7 01       	cmp    $0x1c710d3,%eax
     599:	e8 17 44 19 01       	call   11949b5 <_end+0x1169825>
     59e:	0f d5 db             	pmullw %mm3,%mm3
     5a1:	c0 41 26 78          	rolb   $0x78,0x26(%rcx)
     5a5:	fa                   	cli    
     5a6:	e2 ea                	loop   592 <__ImageBase+0x592>
     5a8:	0b b4 93 6f 6c 8e 4c 	or     0x4c8e6c6f(%rbx,%rdx,4),%esi
     5af:	ed                   	in     (%dx),%eax
     5b0:	b2 63                	mov    $0x63,%dl
     5b2:	74 c5                	je     579 <__ImageBase+0x579>
     5b4:	5e                   	pop    %rsi
     5b5:	0a d1                	or     %cl,%dl
     5b7:	12 03                	adc    (%rbx),%al
     5b9:	48 ef                	rex.W out %eax,(%dx)
     5bb:	e3 94                	jrcxz  551 <__ImageBase+0x551>
     5bd:	a1 0e 6e e2 5d 36 04 	movabs 0xb2e304365de26e0e,%eax
     5c4:	e3 b2 
     5c6:	da d9                	fcmovu %st(1),%st
     5c8:	68 25 47 2f 3b       	push   $0x3b2f4725
     5cd:	43 ab                	rex.XB stos %eax,%es:(%rdi)
     5cf:	db ff                	(bad)  
     5d1:	7e 29                	jle    5fc <__ImageBase+0x5fc>
     5d3:	ae                   	scas   %es:(%rdi),%al
     5d4:	3d 0e c9 85 36       	cmp    $0x3685c90e,%eax
     5d9:	1f                   	(bad)  
     5da:	8c d6                	mov    %ss,%esi
     5dc:	6f                   	outsl  %ds:(%rsi),(%dx)
     5dd:	84 df                	test   %bl,%bh
     5df:	3f                   	(bad)  
     5e0:	a9 cc 34 26 fc       	test   $0xfc2634cc,%eax
     5e5:	ce                   	(bad)  
     5e6:	17                   	(bad)  
     5e7:	93                   	xchg   %eax,%ebx
     5e8:	0f 39                	(bad)  
     5ea:	f9                   	stc    
     5eb:	49                   	rex.WB
     5ec:	43 98                	rex.XB cwtl 
     5ee:	41                   	rex.B
     5ef:	4f 94                	rex.WRXB xchg %rax,%r12
     5f1:	91                   	xchg   %eax,%ecx
     5f2:	0e                   	(bad)  
     5f3:	fc                   	cld    
     5f4:	b0 1d                	mov    $0x1d,%al
     5f6:	77 18                	ja     610 <__ImageBase+0x610>
     5f8:	9d                   	popf   
     5f9:	f9                   	stc    
     5fa:	46 63 13             	rex.RX movsxd (%rbx),%r10d
     5fd:	ab                   	stos   %eax,%es:(%rdi)
     5fe:	bc c5 f5 84 6f       	mov    $0x6f84f5c5,%esp
     603:	f4                   	hlt    
     604:	04 c6                	add    $0xc6,%al
     606:	ef                   	out    %eax,(%dx)
     607:	d9 ed                	fldln2 
     609:	58                   	pop    %rax
     60a:	6c                   	insb   (%dx),%es:(%rdi)
     60b:	20 bb e8 37 c8 89    	and    %bh,-0x7637c818(%rbx)
     611:	40 6b 27 74          	rex imul $0x74,(%rdi),%esp
     615:	8c 80 73 3c 15 51    	mov    %es,0x51153c73(%rax)
     61b:	68 86 dc 11 02       	push   $0x211dc86
     620:	50                   	push   %rax
     621:	e3 0e                	jrcxz  631 <__ImageBase+0x631>
     623:	a9 a8 ca d0 3d       	test   $0x3dd0caa8,%eax
     628:	ae                   	scas   %es:(%rdi),%al
     629:	09 db                	or     %ebx,%ebx
     62b:	c2 d8 0b             	ret    $0xbd8
     62e:	93                   	xchg   %eax,%ebx
     62f:	9d                   	popf   
     630:	f7 18                	negl   (%rax)
     632:	27                   	(bad)  
     633:	04 af                	add    $0xaf,%al
     635:	dd 4b e4             	fisttpll -0x1c(%rbx)
     638:	9d                   	popf   
     639:	98                   	cwtl   
     63a:	06                   	(bad)  
     63b:	fd                   	std    
     63c:	64 11 7c 7f c2       	adc    %edi,%fs:-0x3e(%rdi,%rdi,2)
     641:	c2 e9 21             	ret    $0x21e9
     644:	0b 8c 34 2d 22 e1 b1 	or     -0x4e1eddd3(%rsp,%rsi,1),%ecx
     64b:	c8 22 2f 56          	enter  $0x2f22,$0x56
     64f:	cd ef                	int    $0xef
     651:	e0 33                	loopne 686 <__ImageBase+0x686>
     653:	83 e1 23             	and    $0x23,%ecx
     656:	e3 38                	jrcxz  690 <__ImageBase+0x690>
     658:	6a 09                	push   $0x9
     65a:	a2 e3 f3 f1 4d 1e cf 	movabs %al,0xe36fcf1e4df1f3e3
     661:	6f e3 
     663:	26 59                	es pop %rcx
     665:	1c 58                	sbb    $0x58,%al
     667:	0f e3 55 55          	pavgw  0x55(%rbp),%mm2
     66b:	79 f5                	jns    662 <__ImageBase+0x662>
     66d:	4a 57                	rex.WX push %rdi
     66f:	cb                   	lret   
     670:	70 26                	jo     698 <__ImageBase+0x698>
     672:	f6 4b 66 57          	testb  $0x57,0x66(%rbx)
     676:	fe 42 07             	incb   0x7(%rdx)
     679:	74 9f                	je     61a <__ImageBase+0x61a>
     67b:	94                   	xchg   %eax,%esp
     67c:	b5 8c                	mov    $0x8c,%ch
     67e:	52                   	push   %rdx
     67f:	79 fe                	jns    67f <__ImageBase+0x67f>
     681:	16                   	(bad)  
     682:	69 e2 0e cf 5c 5f    	imul   $0x5f5ccf0e,%edx,%esp
     688:	54                   	push   %rsp
     689:	85 a4 b5 94 2c 23 e7 	test   %esp,-0x18dcd36c(%rbp,%rsi,4)
     690:	5e                   	pop    %rsi
     691:	5a                   	pop    %rdx
     692:	0c 4b                	or     $0x4b,%al
     694:	96                   	xchg   %eax,%esi
     695:	ea                   	(bad)  
     696:	f2 8c 06             	repnz mov %es,(%rsi)
     699:	a9 35 5e b8 f9       	test   $0xf9b85e35,%eax
     69e:	c9                   	leave  
     69f:	fd                   	std    
     6a0:	74 0c                	je     6ae <__ImageBase+0x6ae>
     6a2:	e6 59                	out    %al,$0x59
     6a4:	78 ec                	js     692 <__ImageBase+0x692>
     6a6:	4a 12 f8             	rex.WX adc %al,%dil
     6a9:	15 06 28 17 c9       	adc    $0xc9172806,%eax
     6ae:	74 b8                	je     668 <__ImageBase+0x668>
     6b0:	2c 9f                	sub    $0x9f,%al
     6b2:	a3 3d 6e fe 91 43 35 	movabs %eax,0xa2e354391fe6e3d
     6b9:	2e 0a 
     6bb:	3d 5a c9 61 1e       	cmp    $0x1e61c95a,%eax
     6c0:	8d 98 61 0a 2f 93    	lea    -0x6cd0f59f(%rax),%ebx
     6c6:	38 b2 1f 55 c3 ba    	cmp    %dh,-0x453caae1(%rdx)
     6cc:	a3 e0 1e 41 74 98 76 	movabs %eax,0xcb6b769874411ee0
     6d3:	6b cb 
     6d5:	af                   	scas   %es:(%rdi),%eax
     6d6:	d6                   	(bad)  
     6d7:	06                   	(bad)  
     6d8:	29 00                	sub    %eax,(%rax)
     6da:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
     6db:	60                   	(bad)  
     6dc:	3a 71 8a             	cmp    -0x76(%rcx),%dh
     6df:	de 5b b2             	ficomps -0x4e(%rbx)
     6e2:	4f a3 9e 22 36 08 9e 	rex.WRXB movabs %rax,0x6c20a99e0836229e
     6e9:	a9 20 6c 
     6ec:	c1 d3 29             	rcl    $0x29,%ebx
     6ef:	8c 43 e6             	mov    %es,-0x1a(%rbx)
     6f2:	d8 a1 6f 89 e6 4e    	fsubs  0x4ee6896f(%rcx)
     6f8:	9f                   	lahf   
     6f9:	c3                   	ret    
     6fa:	a3 32 7a 71 7d a4 8d 	movabs %eax,0x20a58da47d717a32
     701:	a5 20 
     703:	b4 28                	mov    $0x28,%ah
     705:	69 9d 39 b4 58 72 ff 	imul   $0x20a1afff,0x7258b439(%rbp),%ebx
     70c:	af a1 20 
     70f:	06                   	(bad)  
     710:	71 fa                	jno    70c <__ImageBase+0x70c>
     712:	e5 72                	in     $0x72,%eax
     714:	cc                   	int3   
     715:	47 69 0e 3b 2c 1c b9 	rex.RXB imul $0xb91c2c3b,(%r14),%r9d
     71c:	9e                   	sahf   
     71d:	fe                   	(bad)  
     71e:	34 a8                	xor    $0xa8,%al
     720:	59                   	pop    %rcx
     721:	0c f0                	or     $0xf0,%al
     723:	7a 35                	jp     75a <__ImageBase+0x75a>
     725:	8a 30                	mov    (%rax),%dh
     727:	e4 35                	in     $0x35,%al
     729:	59                   	pop    %rcx
     72a:	1f                   	(bad)  
     72b:	91                   	xchg   %eax,%ecx
     72c:	a2 06 06 7c a3 4f 83 	movabs %al,0x3941834fa37c0606
     733:	41 39 
     735:	59                   	pop    %rcx
     736:	cc                   	int3   
     737:	0a b3 70 b8 aa da    	or     -0x25554790(%rbx),%dh
     73d:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
     73e:	1e                   	(bad)  
     73f:	3b 1c 9b             	cmp    (%rbx,%rbx,4),%ebx
     742:	28 81 0d 0b bc 33    	sub    %al,0x33bc0b0d(%rcx)
     748:	90                   	nop
     749:	70 91                	jo     6dc <__ImageBase+0x6dc>
     74b:	68 f1 ae 28 a8       	push   $0xffffffffa828aef1
     750:	28 34 c1             	sub    %dh,(%rcx,%rax,8)
     753:	2a 6e 8a             	sub    -0x76(%rsi),%ch
     756:	8a cf                	mov    %bh,%cl
     758:	f4                   	hlt    
     759:	26 21 38             	es and %edi,(%rax)
     75c:	58                   	pop    %rax
     75d:	16                   	(bad)  
     75e:	e8 fb 54 e9 51       	call   51e95c5e <_end+0x51e6aace>
     763:	47 ab                	rex.RXB stos %eax,%es:(%rdi)
     765:	bb 73 c9 08 90       	mov    $0x9008c973,%ebx
     76a:	0e                   	(bad)  
     76b:	00 00                	add    %al,(%rax)
     76d:	80 00 00             	addb   $0x0,(%rax)
     770:	00 10                	add    %dl,(%rax)
     772:	0f 00 00             	sldt   (%rax)
     775:	60                   	(bad)  
     776:	01 00                	add    %eax,(%rax)
	...
     788:	00 00                	add    %al,(%rax)
     78a:	10 00                	adc    %al,(%rax)
	...
     794:	00 02                	add    %al,(%rdx)
     796:	00 00                	add    %al,(%rax)
     798:	00 5f 25             	add    %bl,0x25(%rdi)
     79b:	01 00                	add    %eax,(%rax)
	...
     7a9:	00 30                	add    %dh,(%rax)
     7ab:	01 00                	add    %eax,(%rax)
     7ad:	00 00                	add    %al,(%rax)
     7af:	00 00                	add    %al,(%rax)
     7b1:	00 30                	add    %dh,(%rax)
     7b3:	01 00                	add    %eax,(%rax)
     7b5:	00 00                	add    %al,(%rax)
     7b7:	00 00                	add    %al,(%rax)
     7b9:	ff                   	(bad)  
     7ba:	ff                   	(bad)  
     7bb:	ff                   	(bad)  
     7bc:	ff                   	(bad)  
     7bd:	ff                   	(bad)  
     7be:	ff                   	(bad)  
     7bf:	ff                   	(bad)  
     7c0:	ff 00                	incl   (%rax)
	...
     7ca:	00 40 00             	add    %al,0x0(%rax)
     7cd:	00 00                	add    %al,(%rax)
     7cf:	00 00                	add    %al,(%rax)
     7d1:	00 c0                	add    %al,%al
     7d3:	02 00                	add    (%rax),%al
     7d5:	00 00                	add    %al,(%rax)
     7d7:	00 00                	add    %al,(%rax)
     7d9:	00 00                	add    %al,(%rax)
     7db:	10 00                	adc    %al,(%rax)
	...
     7f9:	01 00                	add    %eax,(%rax)
     7fb:	00 00                	add    %al,(%rax)
     7fd:	00 00                	add    %al,(%rax)
     7ff:	00 00                	add    %al,(%rax)
     801:	02 00                	add    (%rax),%al
     803:	00 00                	add    %al,(%rax)
     805:	00 00                	add    %al,(%rax)
     807:	00 00                	add    %al,(%rax)
     809:	02 00                	add    (%rax),%al
     80b:	00 00                	add    %al,(%rax)
     80d:	00 00                	add    %al,(%rax)
     80f:	00 00                	add    %al,(%rax)
     811:	00 30                	add    %dh,(%rax)
     813:	01 00                	add    %eax,(%rax)
     815:	00 00                	add    %al,(%rax)
     817:	00 00                	add    %al,(%rax)
     819:	00 00                	add    %al,(%rax)
     81b:	ff                   	(bad)  
     81c:	ff                   	(bad)  
     81d:	ff                   	(bad)  
     81e:	ff                   	(bad)  
     81f:	ff                   	(bad)  
     820:	ff 00                	incl   (%rax)
     822:	00 ff                	add    %bh,%bh
     824:	ff                   	(bad)  
     825:	ff                   	(bad)  
     826:	ff                   	(bad)  
     827:	ff                   	(bad)  
     828:	ff 00                	incl   (%rax)
     82a:	00 fb                	add    %bh,%bl
     82c:	ff                   	(bad)  
     82d:	ff                   	(bad)  
     82e:	ff                   	(bad)  
     82f:	ff                   	(bad)  
     830:	ff 48 1f             	decl   0x1f(%rax)
	...
     847:	00 00                	add    %al,(%rax)
     849:	80 0a 00             	orb    $0x0,(%rdx)
	...
     868:	00 00                	add    %al,(%rax)
     86a:	10 00                	adc    %al,(%rax)
	...
     878:	00 00                	add    %al,(%rax)
     87a:	30 01                	xor    %al,(%rcx)
     87c:	00 00                	add    %al,(%rax)
     87e:	00 00                	add    %al,(%rax)
     880:	00 68 30             	add    %ch,0x30(%rax)
     883:	01 00                	add    %eax,(%rax)
	...
     8e1:	00 10                	add    %dl,(%rax)
	...
     8eb:	00 00                	add    %al,(%rax)
     8ed:	02 00                	add    (%rax),%al
     8ef:	00 00                	add    %al,(%rax)
     8f1:	5f                   	pop    %rdi
     8f2:	25 01 00 00 00       	and    $0x1,%eax
	...
     8ff:	00 00                	add    %al,(%rax)
     901:	00 30                	add    %dh,(%rax)
     903:	01 00                	add    %eax,(%rax)
     905:	00 00                	add    %al,(%rax)
     907:	00 00                	add    %al,(%rax)
     909:	00 30                	add    %dh,(%rax)
     90b:	01 00                	add    %eax,(%rax)
     90d:	00 00                	add    %al,(%rax)
     90f:	00 00                	add    %al,(%rax)
     911:	ff                   	(bad)  
     912:	ff                   	(bad)  
     913:	ff                   	(bad)  
     914:	ff                   	(bad)  
     915:	ff                   	(bad)  
     916:	ff                   	(bad)  
     917:	ff                   	(bad)  
     918:	ff 13                	call   *(%rbx)
     91a:	00 00                	add    %al,(%rax)
     91c:	00 00                	add    %al,(%rax)
     91e:	00 00                	add    %al,(%rax)
     920:	00 01                	add    %al,(%rcx)
     922:	00 01                	add    %al,(%rcx)
     924:	00 01                	add    %al,(%rcx)
     926:	00 00                	add    %al,(%rax)
     928:	00 00                	add    %al,(%rax)
     92a:	c0 02 00             	rolb   $0x0,(%rdx)
	...
     939:	03 02                	add    (%rdx),%eax
     93b:	00 00                	add    %al,(%rax)
     93d:	00 00                	add    %al,(%rax)
     93f:	00 00                	add    %al,(%rax)
     941:	02 00                	add    (%rax),%al
     943:	19 00                	sbb    %eax,(%rax)
     945:	ff 00                	incl   (%rax)
     947:	00 00                	add    %al,(%rax)
     949:	00 d0                	add    %dl,%al
     94b:	02 00                	add    (%rax),%al
	...
     959:	03 02                	add    (%rdx),%eax
     95b:	00 00                	add    %al,(%rax)
     95d:	00 00                	add    %al,(%rax)
     95f:	00 00                	add    %al,(%rax)
     961:	0a 00                	or     (%rax),%al
     963:	00 00                	add    %al,(%rax)
     965:	10 00                	adc    %al,(%rax)
     967:	00 00                	add    %al,(%rax)
     969:	00 c0                	add    %al,%al
     96b:	12 00                	adc    (%rax),%al
	...
     981:	07                   	(bad)  
     982:	00 5b 00             	add    %bl,0x0(%rbx)
     985:	3e 00 00             	ds add %al,(%rax)
     988:	00 00                	add    %al,(%rax)
     98a:	c0 13 00             	rclb   $0x0,(%rbx)
     98d:	00 00                	add    %al,(%rax)
     98f:	00 00                	add    %al,(%rax)
     991:	cc                   	int3   
     992:	cc                   	int3   
     993:	cc                   	int3   
     994:	cc                   	int3   
     995:	00 00                	add    %al,(%rax)
     997:	00 00                	add    %al,(%rax)
     999:	03 02                	add    (%rdx),%eax
     99b:	00 00                	add    %al,(%rax)
     99d:	00 00                	add    %al,(%rax)
     99f:	00 00                	add    %al,(%rax)
     9a1:	08 00                	or     %al,(%rax)
     9a3:	03 00                	add    (%rax),%eax
     9a5:	02 00                	add    (%rax),%al
     9a7:	00 00                	add    %al,(%rax)
     9a9:	00 a0 17 00 00 00    	add    %ah,0x17(%rax)
     9af:	00 00                	add    %al,(%rax)
     9b1:	cc                   	int3   
     9b2:	cc                   	int3   
     9b3:	cc                   	int3   
     9b4:	cc                   	int3   
     9b5:	00 00                	add    %al,(%rax)
     9b7:	00 00                	add    %al,(%rax)
     9b9:	03 02                	add    (%rdx),%eax
     9bb:	00 00                	add    %al,(%rax)
     9bd:	00 00                	add    %al,(%rax)
     9bf:	00 00                	add    %al,(%rax)
     9c1:	0a 00                	or     (%rax),%al
     9c3:	00 00                	add    %al,(%rax)
     9c5:	10 00                	adc    %al,(%rax)
     9c7:	00 00                	add    %al,(%rax)
     9c9:	00 c0                	add    %al,%al
     9cb:	17                   	(bad)  
	...
     9e0:	00 04 00             	add    %al,(%rax,%rax,1)
     9e3:	03 00                	add    (%rax),%eax
     9e5:	01 00                	add    %eax,(%rax)
     9e7:	00 00                	add    %al,(%rax)
     9e9:	00 c0                	add    %al,%al
     9eb:	18 00                	sbb    %al,(%rax)
     9ed:	00 00                	add    %al,(%rax)
     9ef:	00 00                	add    %al,(%rax)
     9f1:	48 00 00             	rex.W add %al,(%rax)
     9f4:	00 60 07             	add    %ah,0x7(%rax)
     9f7:	00 00                	add    %al,(%rax)
     9f9:	00 01                	add    %al,(%rcx)
     9fb:	00 00                	add    %al,(%rax)
     9fd:	00 00                	add    %al,(%rax)
     9ff:	00 00                	add    %al,(%rax)
     a01:	06                   	(bad)  
     a02:	00 03                	add    %al,(%rbx)
     a04:	00 02                	add    %al,(%rdx)
     a06:	00 00                	add    %al,(%rax)
     a08:	00 00                	add    %al,(%rax)
     a0a:	d0 18                	rcrb   (%rax)
	...
     a18:	00 03                	add    %al,(%rbx)
     a1a:	02 00                	add    (%rax),%al
     a1c:	00 00                	add    %al,(%rax)
     a1e:	00 00                	add    %al,(%rax)
     a20:	00 0a                	add    %cl,(%rdx)
     a22:	00 00                	add    %al,(%rax)
     a24:	00 10                	add    %dl,(%rax)
     a26:	00 00                	add    %al,(%rax)
     a28:	00 00                	add    %al,(%rax)
     a2a:	f0 18 00             	lock sbb %al,(%rax)
	...
     a41:	05 00 03 00 01       	add    $0x1000300,%eax
     a46:	00 00                	add    %al,(%rax)
     a48:	00 00                	add    %al,(%rax)
     a4a:	f0 19 00             	lock sbb %eax,(%rax)
	...
     a59:	03 02                	add    (%rdx),%eax
     a5b:	00 00                	add    %al,(%rax)
     a5d:	00 00                	add    %al,(%rax)
     a5f:	00 00                	add    %al,(%rax)
     a61:	0a 00                	or     (%rax),%al
     a63:	00 00                	add    %al,(%rax)
     a65:	10 00                	adc    %al,(%rax)
     a67:	00 00                	add    %al,(%rax)
     a69:	00 00                	add    %al,(%rax)
     a6b:	1a 00                	sbb    (%rax),%al
	...
     a81:	07                   	(bad)  
     a82:	00 43 00             	add    %al,0x0(%rbx)
     a85:	3e 00 00             	ds add %al,(%rax)
     a88:	00 00                	add    %al,(%rax)
     a8a:	00 1b                	add    %bl,(%rbx)
     a8c:	00 00                	add    %al,(%rax)
     a8e:	00 00                	add    %al,(%rax)
     a90:	00 cc                	add    %cl,%ah
     a92:	cc                   	int3   
     a93:	cc                   	int3   
     a94:	cc                   	int3   
     a95:	00 00                	add    %al,(%rax)
     a97:	00 00                	add    %al,(%rax)
     a99:	03 02                	add    (%rdx),%eax
     a9b:	00 00                	add    %al,(%rax)
     a9d:	00 00                	add    %al,(%rax)
     a9f:	00 00                	add    %al,(%rax)
     aa1:	08 00                	or     %al,(%rax)
     aa3:	03 00                	add    (%rax),%eax
     aa5:	02 00                	add    (%rax),%al
     aa7:	00 00                	add    %al,(%rax)
     aa9:	00 e0                	add    %ah,%al
     aab:	1e                   	(bad)  
     aac:	00 00                	add    %al,(%rax)
     aae:	00 00                	add    %al,(%rax)
     ab0:	00 cc                	add    %cl,%ah
     ab2:	cc                   	int3   
     ab3:	cc                   	int3   
     ab4:	cc                   	int3   
     ab5:	00 00                	add    %al,(%rax)
     ab7:	00 00                	add    %al,(%rax)
     ab9:	03 02                	add    (%rdx),%eax
     abb:	00 00                	add    %al,(%rax)
     abd:	00 00                	add    %al,(%rax)
     abf:	00 00                	add    %al,(%rax)
     ac1:	0a 00                	or     (%rax),%al
     ac3:	00 00                	add    %al,(%rax)
     ac5:	10 00                	adc    %al,(%rax)
     ac7:	00 00                	add    %al,(%rax)
     ac9:	00 00                	add    %al,(%rax)
     acb:	1f                   	(bad)  
	...
     ae0:	00 04 00             	add    %al,(%rax,%rax,1)
     ae3:	03 00                	add    (%rax),%eax
     ae5:	01 00                	add    %eax,(%rax)
     ae7:	00 00                	add    %al,(%rax)
     ae9:	00 00                	add    %al,(%rax)
     aeb:	20 00                	and    %al,(%rax)
     aed:	00 00                	add    %al,(%rax)
     aef:	00 00                	add    %al,(%rax)
     af1:	48 00 00             	rex.W add %al,(%rax)
     af4:	00 60 07             	add    %ah,0x7(%rax)
     af7:	00 00                	add    %al,(%rax)
     af9:	00 01                	add    %al,(%rcx)
     afb:	00 00                	add    %al,(%rax)
     afd:	00 00                	add    %al,(%rax)
     aff:	00 00                	add    %al,(%rax)
     b01:	06                   	(bad)  
     b02:	00 03                	add    %al,(%rbx)
     b04:	00 02                	add    %al,(%rdx)
     b06:	00 00                	add    %al,(%rax)
     b08:	00 00                	add    %al,(%rax)
     b0a:	10 20                	adc    %ah,(%rax)
	...
     b18:	00 03                	add    %al,(%rbx)
     b1a:	02 00                	add    (%rax),%al
     b1c:	00 00                	add    %al,(%rax)
     b1e:	00 00                	add    %al,(%rax)
     b20:	00 0a                	add    %cl,(%rdx)
     b22:	00 00                	add    %al,(%rax)
     b24:	00 10                	add    %dl,(%rax)
     b26:	00 00                	add    %al,(%rax)
     b28:	00 00                	add    %al,(%rax)
     b2a:	30 20                	xor    %ah,(%rax)
	...
     b40:	00 05 00 03 00 01    	add    %al,0x1000300(%rip)        # 1000e46 <_end+0xfd5cb6>
     b46:	00 00                	add    %al,(%rax)
     b48:	00 00                	add    %al,(%rax)
     b4a:	30 21                	xor    %ah,(%rcx)
	...
     b58:	00 03                	add    %al,(%rbx)
     b5a:	02 00                	add    (%rax),%al
     b5c:	00 00                	add    %al,(%rax)
     b5e:	00 00                	add    %al,(%rax)
     b60:	00 0a                	add    %cl,(%rdx)
     b62:	00 00                	add    %al,(%rax)
     b64:	00 ec                	add    %ch,%ah
     b66:	01 00                	add    %eax,(%rax)
     b68:	00 00                	add    %al,(%rax)
     b6a:	40 21 00             	rex and %eax,(%rax)
	...
     e91:	00 00                	add    %al,(%rax)
     e93:	40 00 00             	rex add %al,(%rax)
	...
     ea6:	00 00                	add    %al,(%rax)
     ea8:	00 80 33 01 00 00    	add    %al,0x133(%rax)
     eae:	00 00                	add    %al,(%rax)
     eb0:	00 a8 07 00 00 e0    	add    %ch,-0x1ffffff9(%rax)
     eb6:	06                   	(bad)  
	...
     ec7:	00 00                	add    %al,(%rax)
     ec9:	3c 00                	cmp    $0x0,%al
     ecb:	00 00                	add    %al,(%rax)
     ecd:	00 00                	add    %al,(%rax)
     ecf:	00 00                	add    %al,(%rax)
     ed1:	88 0e                	mov    %cl,(%rsi)
     ed3:	00 00                	add    %al,(%rax)
     ed5:	02 00                	add    (%rax),%al
	...
     ee7:	00 00                	add    %al,(%rax)
     ee9:	28 00                	sub    %al,(%rax)
     eeb:	00 00                	add    %al,(%rax)
     eed:	00 00                	add    %al,(%rax)
     eef:	00 00                	add    %al,(%rax)
     ef1:	88 0e                	mov    %cl,(%rsi)
     ef3:	00 00                	add    %al,(%rax)
     ef5:	08 00                	or     %al,(%rax)
	...
     f07:	00 00                	add    %al,(%rax)
     f09:	3e 00 00             	ds add %al,(%rax)
     f0c:	00 00                	add    %al,(%rax)
     f0e:	00 00                	add    %al,(%rax)
     f10:	00 88 0e 00 00 02    	add    %cl,0x200000e(%rax)
	...
     f26:	00 00                	add    %al,(%rax)
     f28:	00 01                	add    %al,(%rcx)
     f2a:	00 01                	add    %al,(%rcx)
     f2c:	00 01                	add    %al,(%rcx)
     f2e:	00 00                	add    %al,(%rax)
     f30:	00 00                	add    %al,(%rax)
     f32:	c0 02 00             	rolb   $0x0,(%rdx)
	...
     f41:	03 02                	add    (%rdx),%eax
     f43:	00 00                	add    %al,(%rax)
     f45:	00 00                	add    %al,(%rax)
     f47:	00 00                	add    %al,(%rax)
     f49:	02 00                	add    (%rax),%al
     f4b:	11 00                	adc    %eax,(%rax)
     f4d:	ff 00                	incl   (%rax)
     f4f:	00 00                	add    %al,(%rax)
     f51:	00 d0                	add    %dl,%al
     f53:	02 00                	add    (%rax),%al
	...
     f61:	03 02                	add    (%rdx),%eax
     f63:	00 00                	add    %al,(%rax)
     f65:	00 00                	add    %al,(%rax)
     f67:	00 00                	add    %al,(%rax)
     f69:	0a 00                	or     (%rax),%al
     f6b:	00 00                	add    %al,(%rax)
     f6d:	10 00                	adc    %al,(%rax)
     f6f:	00 00                	add    %al,(%rax)
     f71:	00 c0                	add    %al,%al
     f73:	12 00                	adc    (%rax),%al
	...
     f89:	07                   	(bad)  
     f8a:	00 53 00             	add    %dl,0x0(%rbx)
     f8d:	3e 00 00             	ds add %al,(%rax)
     f90:	00 00                	add    %al,(%rax)
     f92:	c0 13 00             	rclb   $0x0,(%rbx)
     f95:	00 00                	add    %al,(%rax)
     f97:	00 00                	add    %al,(%rax)
     f99:	cc                   	int3   
     f9a:	cc                   	int3   
     f9b:	cc                   	int3   
     f9c:	cc                   	int3   
     f9d:	00 00                	add    %al,(%rax)
     f9f:	00 00                	add    %al,(%rax)
     fa1:	03 02                	add    (%rdx),%eax
     fa3:	00 00                	add    %al,(%rax)
     fa5:	00 00                	add    %al,(%rax)
     fa7:	00 00                	add    %al,(%rax)
     fa9:	08 00                	or     %al,(%rax)
     fab:	03 00                	add    (%rax),%eax
     fad:	02 00                	add    (%rax),%al
     faf:	00 00                	add    %al,(%rax)
     fb1:	00 a0 17 00 00 00    	add    %ah,0x17(%rax)
     fb7:	00 00                	add    %al,(%rax)
     fb9:	cc                   	int3   
     fba:	cc                   	int3   
     fbb:	cc                   	int3   
     fbc:	cc                   	int3   
     fbd:	00 00                	add    %al,(%rax)
     fbf:	00 00                	add    %al,(%rax)
     fc1:	03 02                	add    (%rdx),%eax
     fc3:	00 00                	add    %al,(%rax)
     fc5:	00 00                	add    %al,(%rax)
     fc7:	00 00                	add    %al,(%rax)
     fc9:	0a 00                	or     (%rax),%al
     fcb:	00 00                	add    %al,(%rax)
     fcd:	10 00                	adc    %al,(%rax)
     fcf:	00 00                	add    %al,(%rax)
     fd1:	00 c0                	add    %al,%al
     fd3:	17                   	(bad)  
	...
     fe8:	00 04 00             	add    %al,(%rax,%rax,1)
     feb:	03 00                	add    (%rax),%eax
     fed:	01 00                	add    %eax,(%rax)
     fef:	00 00                	add    %al,(%rax)
     ff1:	00 c0                	add    %al,%al
     ff3:	18 00                	sbb    %al,(%rax)
     ff5:	00 00                	add    %al,(%rax)
     ff7:	00 00                	add    %al,(%rax)
     ff9:	48 00 00             	rex.W add %al,(%rax)
     ffc:	00 60 07             	add    %ah,0x7(%rax)
     fff:	00 00                	add    %al,(%rax)
    1001:	00 01                	add    %al,(%rcx)
    1003:	00 00                	add    %al,(%rax)
    1005:	00 00                	add    %al,(%rax)
    1007:	00 00                	add    %al,(%rax)
    1009:	06                   	(bad)  
    100a:	00 03                	add    %al,(%rbx)
    100c:	00 02                	add    %al,(%rdx)
    100e:	00 00                	add    %al,(%rax)
    1010:	00 00                	add    %al,(%rax)
    1012:	d0 18                	rcrb   (%rax)
	...
    1020:	00 03                	add    %al,(%rbx)
    1022:	02 00                	add    (%rax),%al
    1024:	00 00                	add    %al,(%rax)
    1026:	00 00                	add    %al,(%rax)
    1028:	00 0a                	add    %cl,(%rdx)
    102a:	00 00                	add    %al,(%rax)
    102c:	00 10                	add    %dl,(%rax)
    102e:	00 00                	add    %al,(%rax)
    1030:	00 00                	add    %al,(%rax)
    1032:	f0 18 00             	lock sbb %al,(%rax)
	...
    1049:	05 00 03 00 01       	add    $0x1000300,%eax
    104e:	00 00                	add    %al,(%rax)
    1050:	00 00                	add    %al,(%rax)
    1052:	f0 19 00             	lock sbb %eax,(%rax)
	...
    1061:	03 02                	add    (%rdx),%eax
    1063:	00 00                	add    %al,(%rax)
    1065:	00 00                	add    %al,(%rax)
    1067:	00 00                	add    %al,(%rax)
    1069:	09 10                	or     %edx,(%rax)
    106b:	08 00                	or     %al,(%rax)
    106d:	01 00                	add    %eax,(%rax)
    106f:	00 00                	add    %al,(%rax)
    1071:	00 40 07             	add    %al,0x7(%rax)
	...

Disassembly of section .debug_aranges:

0000000000000000 <.debug_aranges>:
   0:	2c 00                	sub    $0x0,%al
   2:	00 00                	add    %al,(%rax)
   4:	02 00                	add    (%rax),%al
   6:	00 00                	add    %al,(%rax)
   8:	00 00                	add    %al,(%rax)
   a:	08 00                	or     %al,(%rax)
   c:	00 00                	add    %al,(%rax)
   e:	00 00                	add    %al,(%rax)
  10:	63 20                	movsxd (%rax),%esp
  12:	00 00                	add    %al,(%rax)
  14:	00 00                	add    %al,(%rax)
  16:	00 00                	add    %al,(%rax)
  18:	25 02 00 00 00       	and    $0x2,%eax
	...
  2d:	00 00                	add    %al,(%rax)
  2f:	00 2c 00             	add    %ch,(%rax,%rax,1)
  32:	00 00                	add    %al,(%rax)
  34:	02 00                	add    (%rax),%al
  36:	d1 08                	rorl   (%rax)
  38:	00 00                	add    %al,(%rax)
  3a:	08 00                	or     %al,(%rax)
  3c:	00 00                	add    %al,(%rax)
  3e:	00 00                	add    %al,(%rax)
  40:	00 30                	add    %dh,(%rax)
  42:	00 00                	add    %al,(%rax)
  44:	00 00                	add    %al,(%rax)
  46:	00 00                	add    %al,(%rax)
  48:	06                   	(bad)  
  49:	10 00                	adc    %al,(%rax)
	...
  5f:	00 2c 00             	add    %ch,(%rax,%rax,1)
  62:	00 00                	add    %al,(%rax)
  64:	02 00                	add    (%rax),%al
  66:	fa                   	cli    
  67:	08 00                	or     %al,(%rax)
  69:	00 08                	add    %cl,(%rax)
  6b:	00 00                	add    %al,(%rax)
  6d:	00 00                	add    %al,(%rax)
  6f:	00 06                	add    %al,(%rsi)
  71:	40 00 00             	rex add %al,(%rax)
  74:	00 00                	add    %al,(%rax)
  76:	00 00                	add    %al,(%rax)
  78:	17                   	(bad)  
  79:	07                   	(bad)  
	...

Disassembly of section .debug_info:

0000000000000000 <.debug_info>:
       0:	cd 08                	int    $0x8
       2:	00 00                	add    %al,(%rax)
       4:	05 00 01 08 00       	add    $0x80100,%eax
       9:	00 00                	add    %al,(%rax)
       b:	00 17                	add    %dl,(%rdi)
       d:	1d 03 00 00 1d       	sbb    $0x1d000003,%eax
      12:	00 00                	add    %al,(%rax)
      14:	00 00                	add    %al,(%rax)
      16:	07                   	(bad)  
      17:	00 00                	add    %al,(%rax)
      19:	00 63 20             	add    %ah,0x20(%rbx)
      1c:	00 00                	add    %al,(%rax)
      1e:	00 00                	add    %al,(%rax)
      20:	00 00                	add    %al,(%rax)
      22:	25 02 00 00 00       	and    $0x2,%eax
      27:	00 00                	add    %al,(%rax)
      29:	00 00                	add    %al,(%rax)
      2b:	00 00                	add    %al,(%rax)
      2d:	00 04 01             	add    %al,(%rcx,%rax,1)
      30:	06                   	(bad)  
      31:	40 06                	rex (bad) 
      33:	00 00                	add    %al,(%rax)
      35:	04 01                	add    $0x1,%al
      37:	08 3e                	or     %bh,(%rsi)
      39:	06                   	(bad)  
      3a:	00 00                	add    %al,(%rax)
      3c:	04 02                	add    $0x2,%al
      3e:	05 87 06 00 00       	add    $0x687,%eax
      43:	04 02                	add    $0x2,%al
      45:	07                   	(bad)  
      46:	f0 02 00             	lock add (%rax),%al
      49:	00 18                	add    %bl,(%rax)
      4b:	04 05                	add    $0x5,%al
      4d:	69 6e 74 00 04 04 07 	imul   $0x7040400,0x74(%rsi),%ebp
      54:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
      55:	02 00                	add    (%rax),%al
      57:	00 04 08             	add    %al,(%rax,%rcx,1)
      5a:	05 eb 00 00 00       	add    $0xeb,%eax
      5f:	04 08                	add    $0x8,%al
      61:	07                   	(bad)  
      62:	a0 02 00 00 0c 60 02 	movabs 0x2600c000002,%al
      69:	00 00 
      6b:	02 66 1d             	add    0x1d(%rsi),%ah
      6e:	5f                   	pop    %rdi
      6f:	00 00                	add    %al,(%rax)
      71:	00 04 08             	add    %al,(%rax,%rcx,1)
      74:	04 ed                	add    $0xed,%al
      76:	01 00                	add    %eax,(%rax)
      78:	00 04 04             	add    %al,(%rsp,%rax,1)
      7b:	04 f9                	add    $0xf9,%al
      7d:	05 00 00 19 08       	add    $0x8190000,%eax
      82:	04 01                	add    $0x1,%al
      84:	06                   	(bad)  
      85:	47 06                	rex.RXB (bad) 
      87:	00 00                	add    %al,(%rax)
      89:	1a 82 00 00 00 0c    	sbb    0xc000000(%rdx),%al
      8f:	62 02                	(bad)  
      91:	00 00                	add    %al,(%rax)
      93:	03 5e 15             	add    0x15(%rsi),%ebx
      96:	66 00 00             	data16 add %al,(%rax)
      99:	00 1b                	add    %bl,(%rbx)
      9b:	ef                   	out    %eax,(%dx)
      9c:	05 00 00 07 04       	add    $0x4070000,%eax
      a1:	51                   	push   %rcx
      a2:	00 00                	add    %al,(%rax)
      a4:	00 04 25 0e a3 02 00 	add    %al,0x2a30e
      ab:	00 06                	add    %al,(%rsi)
      ad:	ff 05 00 00 00 06    	incl   0x6000000(%rip)        # 60000b3 <_end+0x5fd4f23>
      b3:	00 00                	add    %al,(%rax)
      b5:	00 00                	add    %al,(%rax)
      b7:	01 06                	add    %eax,(%rsi)
      b9:	22 06                	and    (%rsi),%al
      bb:	00 00                	add    %al,(%rax)
      bd:	02 06                	add    (%rsi),%al
      bf:	3c 09                	cmp    $0x9,%al
      c1:	00 00                	add    %al,(%rax)
      c3:	03 06                	add    (%rsi),%eax
      c5:	70 06                	jo     cd <__ImageBase+0xcd>
      c7:	00 00                	add    %al,(%rax)
      c9:	04 06                	add    $0x6,%al
      cb:	8f 05 00 00 05 06    	pop    0x6050000(%rip)        # 60500d1 <_end+0x6024f41>
      d1:	35 07 00 00 08       	xor    $0x8000007,%eax
      d6:	06                   	(bad)  
      d7:	31 00                	xor    %eax,(%rax)
      d9:	00 00                	add    %al,(%rax)
      db:	09 06                	or     %eax,(%rsi)
      dd:	d0 01                	rolb   (%rcx)
      df:	00 00                	add    %al,(%rax)
      e1:	0a 01                	or     (%rcx),%al
      e3:	ff 06                	incl   (%rsi)
      e5:	00 00                	add    %al,(%rax)
      e7:	01 10                	add    %edx,(%rax)
      e9:	01 51 01             	add    %edx,0x1(%rcx)
      ec:	00 00                	add    %al,(%rax)
      ee:	03 10                	add    (%rax),%edx
      f0:	01 a7 05 00 00 06    	add    %esp,0x6000005(%rdi)
      f6:	10 01                	adc    %al,(%rcx)
      f8:	29 02                	sub    %eax,(%rdx)
      fa:	00 00                	add    %al,(%rax)
      fc:	07                   	(bad)  
      fd:	10 01                	adc    %al,(%rcx)
      ff:	a8 07                	test   $0x7,%al
     101:	00 00                	add    %al,(%rax)
     103:	08 10                	or     %dl,(%rax)
     105:	01 75 08             	add    %esi,0x8(%rbp)
     108:	00 00                	add    %al,(%rax)
     10a:	09 10                	or     %edx,(%rax)
     10c:	01 f4                	add    %esi,%esp
     10e:	01 00                	add    %eax,(%rax)
     110:	00 00                	add    %al,(%rax)
     112:	20 01                	and    %al,(%rcx)
     114:	0f 02 00             	lar    (%rax),%eax
     117:	00 01                	add    %al,(%rcx)
     119:	20 01                	and    %al,(%rcx)
     11b:	72 00                	jb     11d <__ImageBase+0x11d>
     11d:	00 00                	add    %al,(%rax)
     11f:	02 20                	add    (%rax),%ah
     121:	01 8f 00 00 00 03    	add    %ecx,0x3000000(%rdi)
     127:	20 01                	and    %al,(%rcx)
     129:	55                   	push   %rbp
     12a:	08 00                	or     %al,(%rax)
     12c:	00 04 20             	add    %al,(%rax,%riz,1)
     12f:	01 d7                	add    %edx,%edi
     131:	05 00 00 05 20       	add    $0x20050000,%eax
     136:	01 de                	add    %ebx,%esi
     138:	07                   	(bad)  
     139:	00 00                	add    %al,(%rax)
     13b:	06                   	(bad)  
     13c:	20 01                	and    %al,(%rcx)
     13e:	1e                   	(bad)  
     13f:	09 00                	or     %eax,(%rax)
     141:	00 07                	add    %al,(%rdi)
     143:	20 01                	and    %al,(%rcx)
     145:	45 02 00             	add    (%r8),%r8b
     148:	00 09                	add    %cl,(%rcx)
     14a:	20 01                	and    %al,(%rcx)
     14c:	c1 05 00 00 0c 20 01 	roll   $0x1,0x200c0000(%rip)        # 200c0153 <_end+0x20094fc3>
     153:	e5 06                	in     $0x6,%eax
     155:	00 00                	add    %al,(%rax)
     157:	0d 20 01 15 00       	or     $0x150120,%eax
     15c:	00 00                	add    %al,(%rax)
     15e:	0e                   	(bad)  
     15f:	20 01                	and    %al,(%rcx)
     161:	c8 00 00 00          	enter  $0x0,$0x0
     165:	0f 20 01             	mov    %cr0,%rcx
     168:	55                   	push   %rbp
     169:	07                   	(bad)  
     16a:	00 00                	add    %al,(%rax)
     16c:	10 20                	adc    %ah,(%rax)
     16e:	01 c6                	add    %eax,%esi
     170:	06                   	(bad)  
     171:	00 00                	add    %al,(%rax)
     173:	11 20                	adc    %esp,(%rax)
     175:	01 24 08             	add    %esp,(%rax,%rcx,1)
     178:	00 00                	add    %al,(%rax)
     17a:	01 30                	add    %esi,(%rax)
     17c:	01 17                	add    %edx,(%rdi)
     17e:	05 00 00 02 30       	add    $0x30020000,%eax
     183:	01 d7                	add    %edx,%edi
     185:	02 00                	add    (%rax),%al
     187:	00 03                	add    %al,(%rbx)
     189:	30 01                	xor    %al,(%rcx)
     18b:	66 01 00             	add    %ax,(%rax)
     18e:	00 04 30             	add    %al,(%rax,%rsi,1)
     191:	01 c4                	add    %eax,%esp
     193:	07                   	(bad)  
     194:	00 00                	add    %al,(%rax)
     196:	05 30 01 68 04       	add    $0x4680130,%eax
     19b:	00 00                	add    %al,(%rax)
     19d:	01 40 01             	add    %eax,0x1(%rax)
     1a0:	86 02                	xchg   %al,(%rdx)
     1a2:	00 00                	add    %al,(%rax)
     1a4:	02 40 01             	add    0x1(%rax),%al
     1a7:	cb                   	lret   
     1a8:	04 00                	add    $0x0,%al
     1aa:	00 03                	add    %al,(%rbx)
     1ac:	40 01 a2 06 00 00 04 	rex add %esp,0x4000006(%rdx)
     1b3:	40 01 2b             	rex add %ebp,(%rbx)
     1b6:	04 00                	add    $0x0,%al
     1b8:	00 05 40 01 06 09    	add    %al,0x9060140(%rip)        # 90602fe <_end+0x903516e>
     1be:	00 00                	add    %al,(%rax)
     1c0:	06                   	(bad)  
     1c1:	40 01 3b             	rex add %edi,(%rbx)
     1c4:	08 00                	or     %al,(%rax)
     1c6:	00 07                	add    %al,(%rdi)
     1c8:	40 01 72 05          	rex add %esi,0x5(%rdx)
     1cc:	00 00                	add    %al,(%rax)
     1ce:	08 40 01             	or     %al,0x1(%rax)
     1d1:	fe 03                	incb   (%rbx)
     1d3:	00 00                	add    %al,(%rax)
     1d5:	0a 40 01             	or     0x1(%rax),%al
     1d8:	42 00 00             	rex.X add %al,(%rax)
     1db:	00 0c 40             	add    %cl,(%rax,%rax,2)
     1de:	01 69 02             	add    %ebp,0x2(%rcx)
     1e1:	00 00                	add    %al,(%rax)
     1e3:	0d 40 01 0f 08       	or     $0x80f0140,%eax
     1e8:	00 00                	add    %al,(%rax)
     1ea:	0e                   	(bad)  
     1eb:	40 01 13             	rex add %edx,(%rbx)
     1ee:	04 00                	add    $0x0,%al
     1f0:	00 0f                	add    %cl,(%rdi)
     1f2:	40 01 6c 07 00       	rex add %ebp,0x0(%rdi,%rax,1)
     1f7:	00 11                	add    %dl,(%rcx)
     1f9:	40 01 c2             	rex add %eax,%edx
     1fc:	03 00                	add    (%rax),%eax
     1fe:	00 12                	add    %dl,(%rdx)
     200:	40 01 ab 00 00 00 13 	rex add %ebp,0x13000000(%rbx)
     207:	40 01 0b             	rex add %ecx,(%rbx)
     20a:	06                   	(bad)  
     20b:	00 00                	add    %al,(%rax)
     20d:	02 50 01             	add    0x1(%rax),%dl
     210:	5a                   	pop    %rdx
     211:	05 00 00 01 60       	add    $0x60010000,%eax
     216:	01 af 04 00 00 02    	add    %ebp,0x2000004(%rdi)
     21c:	60                   	(bad)  
     21d:	01 1a                	add    %ebx,(%rdx)
     21f:	07                   	(bad)  
     220:	00 00                	add    %al,(%rax)
     222:	03 60 01             	add    0x1(%rax),%esp
     225:	bc 02 00 00 04       	mov    $0x4000002,%esp
     22a:	60                   	(bad)  
     22b:	01 4c 06 00          	add    %ecx,0x0(%rsi,%rax,1)
     22f:	00 05 60 01 03 03    	add    %al,0x3030160(%rip)        # 3030395 <_end+0x3005205>
     235:	00 00                	add    %al,(%rax)
     237:	01 70 01             	add    %esi,0x1(%rax)
     23a:	10 01                	adc    %al,(%rcx)
     23c:	00 00                	add    %al,(%rax)
     23e:	02 70 01             	add    0x1(%rax),%dh
     241:	f2 07                	repnz (bad) 
     243:	00 00                	add    %al,(%rax)
     245:	03 70 01             	add    0x1(%rax),%esi
     248:	f4                   	hlt    
     249:	00 00                	add    %al,(%rax)
     24b:	00 04 70             	add    %al,(%rax,%rsi,2)
     24e:	01 33                	add    %esi,(%rbx)
     250:	05 00 00 05 70       	add    $0x70050000,%eax
     255:	01 29                	add    %ebp,(%rcx)
     257:	01 00                	add    %eax,(%rax)
     259:	00 06                	add    %al,(%rsi)
     25b:	70 01                	jo     25e <__ImageBase+0x25e>
     25d:	49 04 00             	rex.WB add $0x0,%al
     260:	00 07                	add    %al,(%rdi)
     262:	70 01                	jo     265 <__ImageBase+0x265>
     264:	e2 03                	loop   269 <__ImageBase+0x269>
     266:	00 00                	add    %al,(%rax)
     268:	08 70 01             	or     %dh,0x1(%rax)
     26b:	a3 01 00 00 09 70 01 	movabs %eax,0x8bd017009000001
     272:	bd 08 
     274:	00 00                	add    %al,(%rax)
     276:	01 80 01 de 08 00    	add    %eax,0x8de01(%rax)
     27c:	00 02                	add    %al,(%rdx)
     27e:	80 01 8f             	addb   $0x8f,(%rcx)
     281:	04 00                	add    $0x0,%al
     283:	00 03                	add    %al,(%rbx)
     285:	80 01 8d             	addb   $0x8d,(%rcx)
     288:	08 00                	or     %al,(%rax)
     28a:	00 04 80             	add    %al,(%rax,%rax,4)
     28d:	01 7f 01             	add    %edi,0x1(%rdi)
     290:	00 00                	add    %al,(%rax)
     292:	05 80 01 83 07       	add    $0x7830180,%eax
     297:	00 00                	add    %al,(%rax)
     299:	01 90 01 e9 04 00    	add    %edx,0x4e901(%rax)
     29f:	00 01                	add    %al,(%rcx)
     2a1:	f0 00 0c ec          	lock add %cl,(%rsp,%rbp,8)
     2a5:	05 00 00 04 7e       	add    $0x7e040000,%eax
     2aa:	03 9a 00 00 00 04    	add    0x4000000(%rdx),%ebx
     2b0:	08 05 e6 00 00 00    	or     %al,0xe6(%rip)        # 39c <__ImageBase+0x39c>
     2b6:	10 82 00 00 00 cc    	adc    %al,-0x34000000(%rdx)
     2bc:	02 00                	add    (%rax),%al
     2be:	00 0d 5f 00 00 00    	add    %cl,0x5f(%rip)        # 323 <__ImageBase+0x323>
     2c4:	09 0d 5f 00 00 00    	or     %ecx,0x5f(%rip)        # 329 <__ImageBase+0x329>
     2ca:	1f                   	(bad)  
     2cb:	00 0e                	add    %cl,(%rsi)
     2cd:	61                   	(bad)  
     2ce:	00 00                	add    %al,(%rax)
     2d0:	00 0b                	add    %cl,(%rbx)
     2d2:	06                   	(bad)  
     2d3:	b6 02                	mov    $0x2,%dh
     2d5:	00 00                	add    %al,(%rax)
     2d7:	09 03                	or     %eax,(%rbx)
     2d9:	a0 a1 01 00 00 00 00 	movabs 0xe000000000001a1,%al
     2e0:	00 0e 
     2e2:	86 04 00             	xchg   %al,(%rax,%rax,1)
     2e5:	00 0c 05 4a 00 00 00 	add    %cl,0x4a(,%rax,1)
     2ec:	09 03                	or     %eax,(%rbx)
     2ee:	80 a1 01 00 00 00 00 	andb   $0x0,0x1(%rcx)
     2f5:	00 10                	add    %dl,(%rax)
     2f7:	82                   	(bad)  
     2f8:	00 00                	add    %al,(%rax)
     2fa:	00 06                	add    %al,(%rsi)
     2fc:	03 00                	add    (%rax),%eax
     2fe:	00 0d 5f 00 00 00    	add    %cl,0x5f(%rip)        # 363 <__ImageBase+0x363>
     304:	1f                   	(bad)  
     305:	00 0e                	add    %cl,(%rsi)
     307:	91                   	xchg   %eax,%ecx
     308:	06                   	(bad)  
     309:	00 00                	add    %al,(%rax)
     30b:	0d 06 f6 02 00       	or     $0x2f606,%eax
     310:	00 09                	add    %cl,(%rcx)
     312:	03 60 a1             	add    -0x5f(%rax),%esp
     315:	01 00                	add    %eax,(%rax)
     317:	00 00                	add    %al,(%rax)
     319:	00 00                	add    %al,(%rax)
     31b:	0b 6e 08             	or     0x8(%rsi),%ebp
     31e:	00 00                	add    %al,(%rax)
     320:	05 44 16 80 00       	add    $0x801644,%eax
     325:	00 00                	add    %al,(%rax)
     327:	3b 03                	cmp    (%rbx),%eax
     329:	00 00                	add    %al,(%rax)
     32b:	05 80 00 00 00       	add    $0x80,%eax
     330:	05 4a 00 00 00       	add    $0x4a,%eax
     335:	05 8e 00 00 00       	add    $0x8e,%eax
     33a:	00 0b                	add    %cl,(%rbx)
     33c:	68 06 00 00 05       	push   $0x5000006
     341:	4d 16                	rex.WRB (bad) 
     343:	4a 00 00             	rex.WX add %al,(%rax)
     346:	00 5b 03             	add    %bl,0x3(%rbx)
     349:	00 00                	add    %al,(%rax)
     34b:	05 5b 03 00 00       	add    $0x35b,%eax
     350:	05 5b 03 00 00       	add    $0x35b,%eax
     355:	05 8e 00 00 00       	add    $0x8e,%eax
     35a:	00 11                	add    %dl,(%rcx)
     35c:	89 00                	mov    %eax,(%rax)
     35e:	00 00                	add    %al,(%rax)
     360:	0b 59 00             	or     0x0(%rcx),%ebx
     363:	00 00                	add    %al,(%rax)
     365:	05 4e 16 80 03       	add    $0x380164e,%eax
     36a:	00 00                	add    %al,(%rax)
     36c:	80 03 00             	addb   $0x0,(%rbx)
     36f:	00 05 80 03 00 00    	add    %al,0x380(%rip)        # 6f5 <__ImageBase+0x6f5>
     375:	05 5b 03 00 00       	add    $0x35b,%eax
     37a:	05 8e 00 00 00       	add    $0x8e,%eax
     37f:	00 11                	add    %dl,(%rcx)
     381:	82                   	(bad)  
     382:	00 00                	add    %al,(%rax)
     384:	00 0b                	add    %cl,(%rbx)
     386:	b1 08                	mov    $0x8,%cl
     388:	00 00                	add    %al,(%rax)
     38a:	06                   	(bad)  
     38b:	19 18                	sbb    %ebx,(%rax)
     38d:	a3 02 00 00 9b 03 00 	movabs %eax,0x50000039b000002
     394:	00 05 
     396:	5b                   	pop    %rbx
     397:	03 00                	add    (%rax),%eax
     399:	00 00                	add    %al,(%rax)
     39b:	08 8c 0a 00 00 54 27 	or     %cl,0x27540000(%rdx,%rcx,1)
     3a2:	22 00                	and    (%rax),%al
     3a4:	00 00                	add    %al,(%rax)
     3a6:	00 00                	add    %al,(%rax)
     3a8:	00 61 00             	add    %ah,0x0(%rcx)
     3ab:	00 00                	add    %al,(%rax)
     3ad:	00 00                	add    %al,(%rax)
     3af:	00 00                	add    %al,(%rax)
     3b1:	01 9c 31 04 00 00 09 	add    %ebx,0x9000004(%rcx,%rsi,1)
     3b8:	01 0b                	add    %ecx,(%rbx)
     3ba:	00 00                	add    %al,(%rax)
     3bc:	54                   	push   %rsp
     3bd:	22 5b 03             	and    0x3(%rbx),%bl
     3c0:	00 00                	add    %al,(%rax)
     3c2:	10 00                	adc    %al,(%rax)
     3c4:	00 00                	add    %al,(%rax)
     3c6:	0c 00                	or     $0x0,%al
     3c8:	00 00                	add    %al,(%rax)
     3ca:	12 62 22             	adc    0x22(%rdx),%ah
     3cd:	00 00                	add    %al,(%rax)
     3cf:	00 00                	add    %al,(%rax)
     3d1:	00 00                	add    %al,(%rax)
     3d3:	1c 00                	sbb    $0x0,%al
     3d5:	00 00                	add    %al,(%rax)
     3d7:	00 00                	add    %al,(%rax)
     3d9:	00 00                	add    %al,(%rax)
     3db:	f0 03 00             	lock add (%rax),%eax
     3de:	00 13                	add    %dl,(%rbx)
     3e0:	69 00 5c 4a 00 00    	imul   $0x4a5c,(%rax),%eax
     3e6:	00 2a                	add    %ch,(%rdx)
     3e8:	00 00                	add    %al,(%rax)
     3ea:	00 22                	add    %ah,(%rdx)
     3ec:	00 00                	add    %al,(%rax)
     3ee:	00 00                	add    %al,(%rax)
     3f0:	03 40 22             	add    0x22(%rax),%eax
     3f3:	00 00                	add    %al,(%rax)
     3f5:	00 00                	add    %al,(%rax)
     3f7:	00 00                	add    %al,(%rax)
     3f9:	3b 03                	cmp    (%rbx),%eax
     3fb:	00 00                	add    %al,(%rax)
     3fd:	15 04 00 00 02       	adc    $0x2000004,%eax
     402:	01 55 03             	add    %edx,0x3(%rbp)
     405:	a3 01 55 02 01 54 02 	movabs %eax,0x73025401025501
     40c:	73 00 
     40e:	02 01                	add    (%rcx),%al
     410:	51                   	push   %rcx
     411:	02 08                	add    (%rax),%cl
     413:	20 00                	and    %al,(%rax)
     415:	0a 51 22             	or     0x22(%rcx),%dl
     418:	00 00                	add    %al,(%rax)
     41a:	00 00                	add    %al,(%rax)
     41c:	00 00                	add    %al,(%rax)
     41e:	85 03                	test   %eax,(%rbx)
     420:	00 00                	add    %al,(%rax)
     422:	02 01                	add    (%rcx),%al
     424:	55                   	push   %rbp
     425:	09 03                	or     %eax,(%rbx)
     427:	b3 31                	mov    $0x31,%bl
     429:	01 00                	add    %eax,(%rax)
     42b:	00 00                	add    %al,(%rax)
     42d:	00 00                	add    %al,(%rax)
     42f:	00 00                	add    %al,(%rax)
     431:	08 38                	or     %bh,(%rax)
     433:	0a 00                	or     (%rax),%al
     435:	00 49 df             	add    %cl,-0x21(%rcx)
     438:	21 00                	and    %eax,(%rax)
     43a:	00 00                	add    %al,(%rax)
     43c:	00 00                	add    %al,(%rax)
     43e:	00 48 00             	add    %cl,0x0(%rax)
     441:	00 00                	add    %al,(%rax)
     443:	00 00                	add    %al,(%rax)
     445:	00 00                	add    %al,(%rax)
     447:	01 9c c9 04 00 00 09 	add    %ebx,0x9000004(%rcx,%rcx,8)
     44e:	fd                   	std    
     44f:	0a 00                	or     (%rax),%al
     451:	00 49 2f             	add    %cl,0x2f(%rcx)
     454:	5b                   	pop    %rbx
     455:	03 00                	add    (%rax),%eax
     457:	00 76 00             	add    %dh,0x0(%rsi)
     45a:	00 00                	add    %al,(%rax)
     45c:	72 00                	jb     45e <__ImageBase+0x45e>
     45e:	00 00                	add    %al,(%rax)
     460:	09 da                	or     %ebx,%edx
     462:	0c 00                	or     $0x0,%al
     464:	00 49 49             	add    %cl,0x49(%rcx)
     467:	5b                   	pop    %rbx
     468:	03 00                	add    (%rax),%eax
     46a:	00 8e 00 00 00 88    	add    %cl,-0x78000000(%rsi)
     470:	00 00                	add    %al,(%rax)
     472:	00 03                	add    %al,(%rbx)
     474:	fd                   	std    
     475:	21 00                	and    %eax,(%rax)
     477:	00 00                	add    %al,(%rax)
     479:	00 00                	add    %al,(%rax)
     47b:	00 3b                	add    %bh,(%rbx)
     47d:	03 00                	add    (%rax),%eax
     47f:	00 98 04 00 00 02    	add    %bl,0x2000004(%rax)
     485:	01 55 03             	add    %edx,0x3(%rbp)
     488:	a3 01 55 02 01 54 02 	movabs %eax,0x76025401025501
     48f:	76 00 
     491:	02 01                	add    (%rcx),%al
     493:	51                   	push   %rcx
     494:	02 08                	add    (%rax),%cl
     496:	20 00                	and    %al,(%rax)
     498:	03 18                	add    (%rax),%ebx
     49a:	22 00                	and    (%rax),%al
     49c:	00 00                	add    %al,(%rax)
     49e:	00 00                	add    %al,(%rax)
     4a0:	00 60 03             	add    %ah,0x3(%rax)
     4a3:	00 00                	add    %al,(%rax)
     4a5:	bb 04 00 00 02       	mov    $0x2000004,%ebx
     4aa:	01 55 02             	add    %edx,0x2(%rbp)
     4ad:	76 00                	jbe    4af <__ImageBase+0x4af>
     4af:	02 01                	add    (%rcx),%al
     4b1:	54                   	push   %rsp
     4b2:	02 73 00             	add    0x0(%rbx),%dh
     4b5:	02 01                	add    (%rcx),%al
     4b7:	51                   	push   %rcx
     4b8:	01 4f 00             	add    %ecx,0x0(%rdi)
     4bb:	14 27                	adc    $0x27,%al
     4bd:	22 00                	and    (%rax),%al
     4bf:	00 00                	add    %al,(%rax)
     4c1:	00 00                	add    %al,(%rax)
     4c3:	00 85 03 00 00 00    	add    %al,0x3(%rbp)
     4c9:	08 35 0c 00 00 3d    	or     %dh,0x3d00000c(%rip)        # 3d0004db <_end+0x3cfd534b>
     4cf:	8f                   	(bad)  
     4d0:	21 00                	and    %eax,(%rax)
     4d2:	00 00                	add    %al,(%rax)
     4d4:	00 00                	add    %al,(%rax)
     4d6:	00 50 00             	add    %dl,0x0(%rax)
     4d9:	00 00                	add    %al,(%rax)
     4db:	00 00                	add    %al,(%rax)
     4dd:	00 00                	add    %al,(%rax)
     4df:	01 9c 7a 05 00 00 09 	add    %ebx,0x9000005(%rdx,%rdi,2)
     4e6:	01 0b                	add    %ecx,(%rbx)
     4e8:	00 00                	add    %al,(%rax)
     4ea:	3d 26 5b 03 00       	cmp    $0x35b26,%eax
     4ef:	00 ab 00 00 00 a7    	add    %ch,-0x59000000(%rbx)
     4f5:	00 00                	add    %al,(%rax)
     4f7:	00 12                	add    %dl,(%rdx)
     4f9:	c3                   	ret    
     4fa:	21 00                	and    %eax,(%rax)
     4fc:	00 00                	add    %al,(%rax)
     4fe:	00 00                	add    %al,(%rax)
     500:	00 18                	add    %bl,(%rax)
     502:	00 00                	add    %al,(%rax)
     504:	00 00                	add    %al,(%rax)
     506:	00 00                	add    %al,(%rax)
     508:	00 32                	add    %dh,(%rdx)
     50a:	05 00 00 13 69       	add    $0x69130000,%eax
     50f:	00 43 4a             	add    %al,0x4a(%rbx)
     512:	00 00                	add    %al,(%rax)
     514:	00 c3                	add    %al,%bl
     516:	00 00                	add    %al,(%rax)
     518:	00 bd 00 00 00 15    	add    %bh,0x15000000(%rbp)
     51e:	d9 21                	fldenv (%rcx)
     520:	00 00                	add    %al,(%rax)
     522:	00 00                	add    %al,(%rax)
     524:	00 00                	add    %al,(%rax)
     526:	85 03                	test   %eax,(%rbx)
     528:	00 00                	add    %al,(%rax)
     52a:	02 01                	add    (%rcx),%al
     52c:	55                   	push   %rbp
     52d:	02 76 60             	add    0x60(%rsi),%dh
     530:	00 00                	add    %al,(%rax)
     532:	03 ae 21 00 00 00    	add    0x21(%rsi),%ebp
     538:	00 00                	add    %al,(%rax)
     53a:	00 3b                	add    %bh,(%rbx)
     53c:	03 00                	add    (%rax),%eax
     53e:	00 5e 05             	add    %bl,0x5(%rsi)
     541:	00 00                	add    %al,(%rax)
     543:	02 01                	add    (%rcx),%al
     545:	55                   	push   %rbp
     546:	03 a3 01 55 02 01    	add    0x1025501(%rbx),%esp
     54c:	54                   	push   %rsp
     54d:	09 03                	or     %eax,(%rbx)
     54f:	60                   	(bad)  
     550:	a1 01 00 00 00 00 00 	movabs 0x102000000000001,%eax
     557:	02 01 
     559:	51                   	push   %rcx
     55a:	02 08                	add    (%rax),%cl
     55c:	20 00                	and    %al,(%rax)
     55e:	0a c3                	or     %bl,%al
     560:	21 00                	and    %eax,(%rax)
     562:	00 00                	add    %al,(%rax)
     564:	00 00                	add    %al,(%rax)
     566:	00 85 03 00 00 02    	add    %al,0x2000003(%rbp)
     56c:	01 55 09             	add    %edx,0x9(%rbp)
     56f:	03 17                	add    (%rdi),%edx
     571:	31 01                	xor    %eax,(%rcx)
     573:	00 00                	add    %al,(%rax)
     575:	00 00                	add    %al,(%rax)
     577:	00 00                	add    %al,(%rax)
     579:	00 16                	add    %dl,(%rsi)
     57b:	0e                   	(bad)  
     57c:	0b 00                	or     (%rax),%eax
     57e:	00 30                	add    %dh,(%rax)
     580:	9b                   	fwait
     581:	05 00 00 0f 01       	add    $0x10f0000,%eax
     586:	0b 00                	or     (%rax),%eax
     588:	00 30                	add    %dh,(%rax)
     58a:	25 5b 03 00 00       	and    $0x35b,%eax
     58f:	0f 27                	(bad)  
     591:	0a 00                	or     (%rax),%al
     593:	00 30                	add    %dh,(%rax)
     595:	3b 5b 03             	cmp    0x3(%rbx),%ebx
     598:	00 00                	add    %al,(%rax)
     59a:	00 08                	add    %cl,(%rax)
     59c:	c9                   	leave  
     59d:	0c 00                	or     $0x0,%al
     59f:	00 21                	add    %ah,(%rcx)
     5a1:	14 21                	adc    $0x21,%al
     5a3:	00 00                	add    %al,(%rax)
     5a5:	00 00                	add    %al,(%rax)
     5a7:	00 00                	add    %al,(%rax)
     5a9:	7b 00                	jnp    5ab <__ImageBase+0x5ab>
     5ab:	00 00                	add    %al,(%rax)
     5ad:	00 00                	add    %al,(%rax)
     5af:	00 00                	add    %al,(%rax)
     5b1:	01 9c d6 06 00 00 1c 	add    %ebx,0x1c000006(%rsi,%rdx,8)
     5b8:	bf 01 00 00 01       	mov    $0x1000001,%edi
     5bd:	22 11                	and    (%rcx),%dl
     5bf:	5b                   	pop    %rbx
     5c0:	03 00                	add    (%rax),%eax
     5c2:	00 0a                	add    %cl,(%rdx)
     5c4:	03 b7 30 01 00 00    	add    0x130(%rdi),%esi
     5ca:	00 00                	add    %al,(%rax)
     5cc:	00 9f 03 28 21 00    	add    %bl,0x212803(%rdi)
     5d2:	00 00                	add    %al,(%rax)
     5d4:	00 00                	add    %al,(%rax)
     5d6:	00 d6                	add    %dl,%dh
     5d8:	06                   	(bad)  
     5d9:	00 00                	add    %al,(%rax)
     5db:	e6 05                	out    %al,$0x5
     5dd:	00 00                	add    %al,(%rax)
     5df:	02 01                	add    (%rcx),%al
     5e1:	55                   	push   %rbp
     5e2:	02 73 00             	add    0x0(%rbx),%dh
     5e5:	00 03                	add    %al,(%rbx)
     5e7:	37                   	(bad)  
     5e8:	21 00                	and    %eax,(%rax)
     5ea:	00 00                	add    %al,(%rax)
     5ec:	00 00                	add    %al,(%rax)
     5ee:	00 7a 05             	add    %bh,0x5(%rdx)
     5f1:	00 00                	add    %al,(%rax)
     5f3:	0b 06                	or     (%rsi),%eax
     5f5:	00 00                	add    %al,(%rax)
     5f7:	02 01                	add    (%rcx),%al
     5f9:	55                   	push   %rbp
     5fa:	02 73 00             	add    0x0(%rbx),%dh
     5fd:	02 01                	add    (%rcx),%al
     5ff:	54                   	push   %rsp
     600:	09 03                	or     %eax,(%rbx)
     602:	c4                   	(bad)  
     603:	30 01                	xor    %al,(%rcx)
     605:	00 00                	add    %al,(%rax)
     607:	00 00                	add    %al,(%rax)
     609:	00 00                	add    %al,(%rax)
     60b:	03 4a 21             	add    0x21(%rdx),%ecx
     60e:	00 00                	add    %al,(%rax)
     610:	00 00                	add    %al,(%rax)
     612:	00 00                	add    %al,(%rax)
     614:	ec                   	in     (%dx),%al
     615:	06                   	(bad)  
     616:	00 00                	add    %al,(%rax)
     618:	37                   	(bad)  
     619:	06                   	(bad)  
     61a:	00 00                	add    %al,(%rax)
     61c:	02 01                	add    (%rcx),%al
     61e:	55                   	push   %rbp
     61f:	09 03                	or     %eax,(%rbx)
     621:	d2 30                	shlb   %cl,(%rax)
     623:	01 00                	add    %eax,(%rax)
     625:	00 00                	add    %al,(%rax)
     627:	00 00                	add    %al,(%rax)
     629:	02 01                	add    (%rcx),%al
     62b:	54                   	push   %rsp
     62c:	09 03                	or     %eax,(%rbx)
     62e:	a0 a1 01 00 00 00 00 	movabs 0x1a1,%al
     635:	00 00 
     637:	03 59 21             	add    0x21(%rcx),%ebx
     63a:	00 00                	add    %al,(%rax)
     63c:	00 00                	add    %al,(%rax)
     63e:	00 00                	add    %al,(%rax)
     640:	7a 05                	jp     647 <__ImageBase+0x647>
     642:	00 00                	add    %al,(%rax)
     644:	5c                   	pop    %rsp
     645:	06                   	(bad)  
     646:	00 00                	add    %al,(%rax)
     648:	02 01                	add    (%rcx),%al
     64a:	55                   	push   %rbp
     64b:	02 73 00             	add    0x0(%rbx),%dh
     64e:	02 01                	add    (%rcx),%al
     650:	54                   	push   %rsp
     651:	09 03                	or     %eax,(%rbx)
     653:	de 30                	fidivs (%rax)
     655:	01 00                	add    %eax,(%rax)
     657:	00 00                	add    %al,(%rax)
     659:	00 00                	add    %al,(%rax)
     65b:	00 03                	add    %al,(%rbx)
     65d:	6c                   	insb   (%dx),%es:(%rdi)
     65e:	21 00                	and    %eax,(%rax)
     660:	00 00                	add    %al,(%rax)
     662:	00 00                	add    %al,(%rax)
     664:	00 ec                	add    %ch,%ah
     666:	06                   	(bad)  
     667:	00 00                	add    %al,(%rax)
     669:	88 06                	mov    %al,(%rsi)
     66b:	00 00                	add    %al,(%rax)
     66d:	02 01                	add    (%rcx),%al
     66f:	55                   	push   %rbp
     670:	09 03                	or     %eax,(%rbx)
     672:	ef                   	out    %eax,(%dx)
     673:	30 01                	xor    %al,(%rcx)
     675:	00 00                	add    %al,(%rax)
     677:	00 00                	add    %al,(%rax)
     679:	00 02                	add    %al,(%rdx)
     67b:	01 54 09 03          	add    %edx,0x3(%rcx,%rcx,1)
     67f:	c0 a1 01 00 00 00 00 	shlb   $0x0,0x1(%rcx)
     686:	00 00                	add    %al,(%rax)
     688:	03 7b 21             	add    0x21(%rbx),%edi
     68b:	00 00                	add    %al,(%rax)
     68d:	00 00                	add    %al,(%rax)
     68f:	00 00                	add    %al,(%rax)
     691:	7a 05                	jp     698 <__ImageBase+0x698>
     693:	00 00                	add    %al,(%rax)
     695:	ad                   	lods   %ds:(%rsi),%eax
     696:	06                   	(bad)  
     697:	00 00                	add    %al,(%rax)
     699:	02 01                	add    (%rcx),%al
     69b:	55                   	push   %rbp
     69c:	02 73 00             	add    0x0(%rbx),%dh
     69f:	02 01                	add    (%rcx),%al
     6a1:	54                   	push   %rsp
     6a2:	09 03                	or     %eax,(%rbx)
     6a4:	fb                   	sti    
     6a5:	30 01                	xor    %al,(%rcx)
     6a7:	00 00                	add    %al,(%rax)
     6a9:	00 00                	add    %al,(%rax)
     6ab:	00 00                	add    %al,(%rax)
     6ad:	0a 8f 21 00 00 00    	or     0x21(%rdi),%cl
     6b3:	00 00                	add    %al,(%rax)
     6b5:	00 ec                	add    %ch,%ah
     6b7:	06                   	(bad)  
     6b8:	00 00                	add    %al,(%rax)
     6ba:	02 01                	add    (%rcx),%al
     6bc:	55                   	push   %rbp
     6bd:	09 03                	or     %eax,(%rbx)
     6bf:	0b 31                	or     (%rcx),%esi
     6c1:	01 00                	add    %eax,(%rax)
     6c3:	00 00                	add    %al,(%rax)
     6c5:	00 00                	add    %al,(%rax)
     6c7:	02 01                	add    (%rcx),%al
     6c9:	54                   	push   %rsp
     6ca:	09 03                	or     %eax,(%rbx)
     6cc:	e0 a1                	loopne 66f <__ImageBase+0x66f>
     6ce:	01 00                	add    %eax,(%rax)
     6d0:	00 00                	add    %al,(%rax)
     6d2:	00 00                	add    %al,(%rax)
     6d4:	00 00                	add    %al,(%rax)
     6d6:	16                   	(bad)  
     6d7:	8b 0c 00             	mov    (%rax,%rax,1),%ecx
     6da:	00 16                	add    %dl,(%rsi)
     6dc:	ec                   	in     (%dx),%al
     6dd:	06                   	(bad)  
     6de:	00 00                	add    %al,(%rax)
     6e0:	0f da 0c 00          	pminub (%rax,%rax,1),%mm1
     6e4:	00 16                	add    %dl,(%rsi)
     6e6:	2d 5b 03 00 00       	sub    $0x35b,%eax
     6eb:	00 08                	add    %cl,(%rax)
     6ed:	b2 02                	mov    $0x2,%dl
     6ef:	00 00                	add    %al,(%rax)
     6f1:	10 63 20             	adc    %ah,0x20(%rbx)
     6f4:	00 00                	add    %al,(%rax)
     6f6:	00 00                	add    %al,(%rax)
     6f8:	00 00                	add    %al,(%rax)
     6fa:	16                   	(bad)  
     6fb:	00 00                	add    %al,(%rax)
     6fd:	00 00                	add    %al,(%rax)
     6ff:	00 00                	add    %al,(%rax)
     701:	00 01                	add    %al,(%rcx)
     703:	9c                   	pushf  
     704:	5e                   	pop    %rsi
     705:	07                   	(bad)  
     706:	00 00                	add    %al,(%rax)
     708:	09 0d 04 00 00 10    	or     %ecx,0x10000004(%rip)        # 10000712 <_end+0xffd5582>
     70e:	1c 5b                	sbb    $0x5b,%al
     710:	03 00                	add    (%rax),%eax
     712:	00 df                	add    %bl,%bh
     714:	00 00                	add    %al,(%rax)
     716:	00 db                	add    %bl,%bl
     718:	00 00                	add    %al,(%rax)
     71a:	00 1d 73 74 72 00    	add    %bl,0x727473(%rip)        # 727b93 <_end+0x6fca03>
     720:	01 10                	add    %edx,(%rax)
     722:	2f                   	(bad)  
     723:	5b                   	pop    %rbx
     724:	03 00                	add    (%rax),%eax
     726:	00 f5                	add    %dh,%ch
     728:	00 00                	add    %al,(%rax)
     72a:	00 ed                	add    %ch,%ch
     72c:	00 00                	add    %al,(%rax)
     72e:	00 03                	add    %al,(%rbx)
     730:	70 20                	jo     752 <__ImageBase+0x752>
     732:	00 00                	add    %al,(%rax)
     734:	00 00                	add    %al,(%rax)
     736:	00 00                	add    %al,(%rax)
     738:	85 03                	test   %eax,(%rbx)
     73a:	00 00                	add    %al,(%rax)
     73c:	48 07                	rex.W (bad) 
     73e:	00 00                	add    %al,(%rax)
     740:	02 01                	add    (%rcx),%al
     742:	55                   	push   %rbp
     743:	03 a3 01 55 00 0a    	add    0xa005501(%rbx),%esp
     749:	79 20                	jns    76b <__ImageBase+0x76b>
     74b:	00 00                	add    %al,(%rax)
     74d:	00 00                	add    %al,(%rax)
     74f:	00 00                	add    %al,(%rax)
     751:	85 03                	test   %eax,(%rbx)
     753:	00 00                	add    %al,(%rax)
     755:	02 01                	add    (%rcx),%al
     757:	55                   	push   %rbp
     758:	03 a3 01 54 00 00    	add    0x5401(%rbx),%esp
     75e:	1e                   	(bad)  
     75f:	d6                   	(bad)  
     760:	06                   	(bad)  
     761:	00 00                	add    %al,(%rax)
     763:	79 20                	jns    785 <__ImageBase+0x785>
     765:	00 00                	add    %al,(%rax)
     767:	00 00                	add    %al,(%rax)
     769:	00 00                	add    %al,(%rax)
     76b:	38 00                	cmp    %al,(%rax)
     76d:	00 00                	add    %al,(%rax)
     76f:	00 00                	add    %al,(%rax)
     771:	00 00                	add    %al,(%rax)
     773:	01 9c f2 07 00 00 07 	add    %ebx,0x7000007(%rdx,%rsi,8)
     77a:	e0 06                	loopne 782 <__ImageBase+0x782>
     77c:	00 00                	add    %al,(%rax)
     77e:	17                   	(bad)  
     77f:	01 00                	add    %eax,(%rax)
     781:	00 0d 01 00 00 1f    	add    %cl,0x1f000001(%rip)        # 1f000788 <_end+0x1efd55f8>
     787:	d6                   	(bad)  
     788:	06                   	(bad)  
     789:	00 00                	add    %al,(%rax)
     78b:	86 20                	xchg   %ah,(%rax)
     78d:	00 00                	add    %al,(%rax)
     78f:	00 00                	add    %al,(%rax)
     791:	00 00                	add    %al,(%rax)
     793:	00 86 20 00 00 00    	add    %al,0x20(%rsi)
     799:	00 00                	add    %al,(%rax)
     79b:	00 09                	add    %cl,(%rcx)
     79d:	00 00                	add    %al,(%rax)
     79f:	00 00                	add    %al,(%rax)
     7a1:	00 00                	add    %al,(%rax)
     7a3:	00 01                	add    %al,(%rcx)
     7a5:	16                   	(bad)  
     7a6:	06                   	(bad)  
     7a7:	b9 07 00 00 07       	mov    $0x7000007,%ecx
     7ac:	e0 06                	loopne 7b4 <__ImageBase+0x7b4>
     7ae:	00 00                	add    %al,(%rax)
     7b0:	3b 01                	cmp    (%rcx),%eax
     7b2:	00 00                	add    %al,(%rax)
     7b4:	37                   	(bad)  
     7b5:	01 00                	add    %eax,(%rax)
     7b7:	00 00                	add    %al,(%rax)
     7b9:	03 a4 20 00 00 00 00 	add    0x0(%rax,%riz,1),%esp
     7c0:	00 00                	add    %al,(%rax)
     7c2:	60                   	(bad)  
     7c3:	03 00                	add    (%rax),%eax
     7c5:	00 e4                	add    %ah,%ah
     7c7:	07                   	(bad)  
     7c8:	00 00                	add    %al,(%rax)
     7ca:	02 01                	add    (%rcx),%al
     7cc:	55                   	push   %rbp
     7cd:	09 03                	or     %eax,(%rbx)
     7cf:	60                   	(bad)  
     7d0:	a1 01 00 00 00 00 00 	movabs 0x102000000000001,%eax
     7d7:	02 01 
     7d9:	54                   	push   %rsp
     7da:	03 a3 01 55 02 01    	add    0x1025501(%rbx),%esp
     7e0:	51                   	push   %rcx
     7e1:	01 4f 00             	add    %ecx,0x0(%rdi)
     7e4:	14 b1                	adc    $0xb1,%al
     7e6:	20 00                	and    %al,(%rax)
     7e8:	00 00                	add    %al,(%rax)
     7ea:	00 00                	add    %al,(%rax)
     7ec:	00 85 03 00 00 00    	add    %al,0x3(%rbp)
     7f2:	20 7a 05             	and    %bh,0x5(%rdx)
     7f5:	00 00                	add    %al,(%rax)
     7f7:	b1 20                	mov    $0x20,%cl
     7f9:	00 00                	add    %al,(%rax)
     7fb:	00 00                	add    %al,(%rax)
     7fd:	00 00                	add    %al,(%rax)
     7ff:	63 00                	movsxd (%rax),%eax
     801:	00 00                	add    %al,(%rax)
     803:	00 00                	add    %al,(%rax)
     805:	00 00                	add    %al,(%rax)
     807:	01 9c 07 84 05 00 00 	add    %ebx,0x584(%rdi,%rax,1)
     80e:	4d 01 00             	add    %r8,(%r8)
     811:	00 49 01             	add    %cl,0x1(%rcx)
     814:	00 00                	add    %al,(%rax)
     816:	07                   	(bad)  
     817:	8f 05 00 00 66 01    	pop    0x1660000(%rip)        # 166081d <_end+0x163568d>
     81d:	00 00                	add    %al,(%rax)
     81f:	5c                   	pop    %rsp
     820:	01 00                	add    %eax,(%rax)
     822:	00 21                	add    %ah,(%rcx)
     824:	7a 05                	jp     82b <__ImageBase+0x82b>
     826:	00 00                	add    %al,(%rax)
     828:	d0 20                	shlb   (%rax)
     82a:	00 00                	add    %al,(%rax)
     82c:	00 00                	add    %al,(%rax)
     82e:	00 00                	add    %al,(%rax)
     830:	00 0c 00             	add    %cl,(%rax,%rax,1)
     833:	00 00                	add    %al,(%rax)
     835:	01 30                	add    %esi,(%rax)
     837:	06                   	(bad)  
     838:	72 08                	jb     842 <__ImageBase+0x842>
     83a:	00 00                	add    %al,(%rax)
     83c:	07                   	(bad)  
     83d:	84 05 00 00 8b 01    	test   %al,0x18b0000(%rip)        # 18b0843 <_end+0x18856b3>
     843:	00 00                	add    %al,(%rax)
     845:	89 01                	mov    %eax,(%rcx)
     847:	00 00                	add    %al,(%rax)
     849:	07                   	(bad)  
     84a:	8f 05 00 00 98 01    	pop    0x1980000(%rip)        # 1980850 <_end+0x19556c0>
     850:	00 00                	add    %al,(%rax)
     852:	94                   	xchg   %eax,%esp
     853:	01 00                	add    %eax,(%rax)
     855:	00 0a                	add    %cl,(%rdx)
     857:	df 20                	fbld   (%rax)
     859:	00 00                	add    %al,(%rax)
     85b:	00 00                	add    %al,(%rax)
     85d:	00 00                	add    %al,(%rax)
     85f:	85 03                	test   %eax,(%rbx)
     861:	00 00                	add    %al,(%rax)
     863:	02 01                	add    (%rcx),%al
     865:	55                   	push   %rbp
     866:	09 03                	or     %eax,(%rbx)
     868:	75 30                	jne    89a <__ImageBase+0x89a>
     86a:	01 00                	add    %eax,(%rax)
     86c:	00 00                	add    %al,(%rax)
     86e:	00 00                	add    %al,(%rax)
     870:	00 00                	add    %al,(%rax)
     872:	03 cc                	add    %esp,%ecx
     874:	20 00                	and    %al,(%rax)
     876:	00 00                	add    %al,(%rax)
     878:	00 00                	add    %al,(%rax)
     87a:	00 3b                	add    %bh,(%rbx)
     87c:	03 00                	add    (%rax),%eax
     87e:	00 9e 08 00 00 02    	add    %bl,0x2000008(%rsi)
     884:	01 55 03             	add    %edx,0x3(%rbp)
     887:	a3 01 55 02 01 54 09 	movabs %eax,0x6003095401025501
     88e:	03 60 
     890:	a1 01 00 00 00 00 00 	movabs 0x102000000000001,%eax
     897:	02 01 
     899:	51                   	push   %rcx
     89a:	02 08                	add    (%rax),%cl
     89c:	20 00                	and    %al,(%rax)
     89e:	15 0a 21 00 00       	adc    $0x210a,%eax
     8a3:	00 00                	add    %al,(%rax)
     8a5:	00 00                	add    %al,(%rax)
     8a7:	60                   	(bad)  
     8a8:	03 00                	add    (%rax),%eax
     8aa:	00 02                	add    %al,(%rdx)
     8ac:	01 55 14             	add    %edx,0x14(%rbp)
     8af:	73 7f                	jae    930 <__ImageBase+0x930>
     8b1:	08 20                	or     %ah,(%rax)
     8b3:	24 08                	and    $0x8,%al
     8b5:	20 26                	and    %ah,(%rsi)
     8b7:	35 24 03 a0 a1       	xor    $0xa1a00324,%eax
     8bc:	01 00                	add    %eax,(%rax)
     8be:	00 00                	add    %al,(%rax)
     8c0:	00 00                	add    %al,(%rax)
     8c2:	22 02                	and    (%rdx),%al
     8c4:	01 54 02 76          	add    %edx,0x76(%rdx,%rax,1)
     8c8:	00 02                	add    %al,(%rdx)
     8ca:	01 51 01             	add    %edx,0x1(%rcx)
     8cd:	4f 00 00             	rex.WRXB add %r8b,(%r8)
     8d0:	00 25 00 00 00 05    	add    %ah,0x5000000(%rip)        # 50008d6 <_end+0x4fd5746>
     8d6:	00 01                	add    %al,(%rcx)
     8d8:	08 eb                	or     %ch,%bl
     8da:	01 00                	add    %eax,(%rax)
     8dc:	00 01                	add    %al,(%rcx)
     8de:	49 02 00             	rex.WB add (%r8),%al
     8e1:	00 00                	add    %al,(%rax)
     8e3:	30 00                	xor    %al,(%rax)
     8e5:	00 00                	add    %al,(%rax)
     8e7:	00 00                	add    %al,(%rax)
     8e9:	00 86 20 54 09 00    	add    %al,0x95420(%rsi)
     8ef:	00 5a 09             	add    %bl,0x9(%rdx)
     8f2:	00 00                	add    %al,(%rax)
     8f4:	7c 09                	jl     8ff <__ImageBase+0x8ff>
     8f6:	00 00                	add    %al,(%rax)
     8f8:	01 80 09 12 00 00    	add    %eax,0x1209(%rax)
     8fe:	05 00 01 08 ff       	add    $0xff080100,%eax
     903:	01 00                	add    %eax,(%rax)
     905:	00 22                	add    %ah,(%rdx)
     907:	1d 03 00 00 1d       	sbb    $0x1d000003,%eax
     90c:	bc 00 00 00 07       	mov    $0x7000000,%esp
     911:	00 00                	add    %al,(%rax)
     913:	00 06                	add    %al,(%rsi)
     915:	40 00 00             	rex add %al,(%rax)
     918:	00 00                	add    %al,(%rax)
     91a:	00 00                	add    %al,(%rax)
     91c:	17                   	(bad)  
     91d:	07                   	(bad)  
     91e:	00 00                	add    %al,(%rax)
     920:	00 00                	add    %al,(%rax)
     922:	00 00                	add    %al,(%rax)
     924:	92                   	xchg   %eax,%edx
     925:	02 00                	add    (%rax),%al
     927:	00 08                	add    %cl,(%rax)
     929:	01 06                	add    %eax,(%rsi)
     92b:	40 06                	rex (bad) 
     92d:	00 00                	add    %al,(%rax)
     92f:	06                   	(bad)  
     930:	a8 09                	test   $0x9,%al
     932:	00 00                	add    %al,(%rax)
     934:	02 28                	add    (%rax),%ch
     936:	1d 41 00 00 00       	sbb    $0x41,%eax
     93b:	08 01                	or     %al,(%rcx)
     93d:	08 3e                	or     %bh,(%rsi)
     93f:	06                   	(bad)  
     940:	00 00                	add    %al,(%rax)
     942:	08 02                	or     %al,(%rdx)
     944:	05 87 06 00 00       	add    $0x687,%eax
     949:	08 02                	or     %al,(%rdx)
     94b:	07                   	(bad)  
     94c:	f0 02 00             	lock add (%rax),%al
     94f:	00 23                	add    %ah,(%rbx)
     951:	04 05                	add    $0x5,%al
     953:	69 6e 74 00 08 04 07 	imul   $0x7040800,0x74(%rsi),%ebp
     95a:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
     95b:	02 00                	add    (%rax),%al
     95d:	00 11                	add    %dl,(%rcx)
     95f:	5d                   	pop    %rbp
     960:	00 00                	add    %al,(%rax)
     962:	00 08                	add    %cl,(%rax)
     964:	08 05 eb 00 00 00    	or     %al,0xeb(%rip)        # a55 <__ImageBase+0xa55>
     96a:	06                   	(bad)  
     96b:	3d 0b 00 00 02       	cmp    $0x200000b,%eax
     970:	2f                   	(bad)  
     971:	1d 7c 00 00 00       	sbb    $0x7c,%eax
     976:	08 08                	or     %cl,(%rax)
     978:	07                   	(bad)  
     979:	a0 02 00 00 06 d7 0b 	movabs 0xbd706000002,%al
     980:	00 00 
     982:	02 62 1d             	add    0x1d(%rdx),%ah
     985:	70 00                	jo     987 <__ImageBase+0x987>
     987:	00 00                	add    %al,(%rax)
     989:	06                   	(bad)  
     98a:	60                   	(bad)  
     98b:	02 00                	add    (%rax),%al
     98d:	00 02                	add    %al,(%rdx)
     98f:	66 1d 7c 00          	sbb    $0x7c,%ax
     993:	00 00                	add    %al,(%rax)
     995:	08 08                	or     %cl,(%rax)
     997:	04 ed                	add    $0xed,%al
     999:	01 00                	add    %eax,(%rax)
     99b:	00 08                	add    %cl,(%rax)
     99d:	04 04                	add    $0x4,%al
     99f:	f9                   	stc    
     9a0:	05 00 00 24 08       	add    $0x8240000,%eax
     9a5:	08 01                	or     %al,(%rcx)
     9a7:	06                   	(bad)  
     9a8:	47 06                	rex.RXB (bad) 
     9aa:	00 00                	add    %al,(%rax)
     9ac:	11 ab 00 00 00 06    	adc    %ebp,0x6000000(%rbx)
     9b2:	aa                   	stos   %al,%es:(%rdi)
     9b3:	09 00                	or     %eax,(%rax)
     9b5:	00 03                	add    %al,(%rbx)
     9b7:	21 19                	and    %ebx,(%rcx)
     9b9:	35 00 00 00 06       	xor    $0x6000000,%eax
     9be:	d9 0b                	(bad)  (%rbx)
     9c0:	00 00                	add    %al,(%rax)
     9c2:	03 5e 19             	add    0x19(%rsi),%ebx
     9c5:	83 00 00             	addl   $0x0,(%rax)
     9c8:	00 06                	add    %al,(%rsi)
     9ca:	62 02                	(bad)  
     9cc:	00 00                	add    %al,(%rax)
     9ce:	04 5e                	add    $0x5e,%al
     9d0:	15 8f 00 00 00       	adc    $0x8f,%eax
     9d5:	25 ef 05 00 00       	and    $0x5ef,%eax
     9da:	07                   	(bad)  
     9db:	04 5d                	add    $0x5d,%al
     9dd:	00 00                	add    %al,(%rax)
     9df:	00 05 25 0e e4 02    	add    %al,0x2e40e25(%rip)        # 2e4180a <_end+0x2e1667a>
     9e5:	00 00                	add    %al,(%rax)
     9e7:	0a ff                	or     %bh,%bh
     9e9:	05 00 00 00 0a       	add    $0xa000000,%eax
     9ee:	00 00                	add    %al,(%rax)
     9f0:	00 00                	add    %al,(%rax)
     9f2:	01 0a                	add    %ecx,(%rdx)
     9f4:	22 06                	and    (%rsi),%al
     9f6:	00 00                	add    %al,(%rax)
     9f8:	02 0a                	add    (%rdx),%cl
     9fa:	3c 09                	cmp    $0x9,%al
     9fc:	00 00                	add    %al,(%rax)
     9fe:	03 0a                	add    (%rdx),%ecx
     a00:	70 06                	jo     a08 <__ImageBase+0xa08>
     a02:	00 00                	add    %al,(%rax)
     a04:	04 0a                	add    $0xa,%al
     a06:	8f 05 00 00 05 0a    	pop    0xa050000(%rip)        # a050a0c <_end+0xa02587c>
     a0c:	35 07 00 00 08       	xor    $0x8000007,%eax
     a11:	0a 31                	or     (%rcx),%dh
     a13:	00 00                	add    %al,(%rax)
     a15:	00 09                	add    %cl,(%rcx)
     a17:	0a d0                	or     %al,%dl
     a19:	01 00                	add    %eax,(%rax)
     a1b:	00 0a                	add    %cl,(%rdx)
     a1d:	02 ff                	add    %bh,%bh
     a1f:	06                   	(bad)  
     a20:	00 00                	add    %al,(%rax)
     a22:	01 10                	add    %edx,(%rax)
     a24:	02 51 01             	add    0x1(%rcx),%dl
     a27:	00 00                	add    %al,(%rax)
     a29:	03 10                	add    (%rax),%edx
     a2b:	02 a7 05 00 00 06    	add    0x6000005(%rdi),%ah
     a31:	10 02                	adc    %al,(%rdx)
     a33:	29 02                	sub    %eax,(%rdx)
     a35:	00 00                	add    %al,(%rax)
     a37:	07                   	(bad)  
     a38:	10 02                	adc    %al,(%rdx)
     a3a:	a8 07                	test   $0x7,%al
     a3c:	00 00                	add    %al,(%rax)
     a3e:	08 10                	or     %dl,(%rax)
     a40:	02 75 08             	add    0x8(%rbp),%dh
     a43:	00 00                	add    %al,(%rax)
     a45:	09 10                	or     %edx,(%rax)
     a47:	02 f4                	add    %ah,%dh
     a49:	01 00                	add    %eax,(%rax)
     a4b:	00 00                	add    %al,(%rax)
     a4d:	20 02                	and    %al,(%rdx)
     a4f:	0f 02 00             	lar    (%rax),%eax
     a52:	00 01                	add    %al,(%rcx)
     a54:	20 02                	and    %al,(%rdx)
     a56:	72 00                	jb     a58 <__ImageBase+0xa58>
     a58:	00 00                	add    %al,(%rax)
     a5a:	02 20                	add    (%rax),%ah
     a5c:	02 8f 00 00 00 03    	add    0x3000000(%rdi),%cl
     a62:	20 02                	and    %al,(%rdx)
     a64:	55                   	push   %rbp
     a65:	08 00                	or     %al,(%rax)
     a67:	00 04 20             	add    %al,(%rax,%riz,1)
     a6a:	02 d7                	add    %bh,%dl
     a6c:	05 00 00 05 20       	add    $0x20050000,%eax
     a71:	02 de                	add    %dh,%bl
     a73:	07                   	(bad)  
     a74:	00 00                	add    %al,(%rax)
     a76:	06                   	(bad)  
     a77:	20 02                	and    %al,(%rdx)
     a79:	1e                   	(bad)  
     a7a:	09 00                	or     %eax,(%rax)
     a7c:	00 07                	add    %al,(%rdi)
     a7e:	20 02                	and    %al,(%rdx)
     a80:	45 02 00             	add    (%r8),%r8b
     a83:	00 09                	add    %cl,(%rcx)
     a85:	20 02                	and    %al,(%rdx)
     a87:	c1 05 00 00 0c 20 02 	roll   $0x2,0x200c0000(%rip)        # 200c0a8e <_end+0x200958fe>
     a8e:	e5 06                	in     $0x6,%eax
     a90:	00 00                	add    %al,(%rax)
     a92:	0d 20 02 15 00       	or     $0x150220,%eax
     a97:	00 00                	add    %al,(%rax)
     a99:	0e                   	(bad)  
     a9a:	20 02                	and    %al,(%rdx)
     a9c:	c8 00 00 00          	enter  $0x0,$0x0
     aa0:	0f 20 02             	mov    %cr0,%rdx
     aa3:	55                   	push   %rbp
     aa4:	07                   	(bad)  
     aa5:	00 00                	add    %al,(%rax)
     aa7:	10 20                	adc    %ah,(%rax)
     aa9:	02 c6                	add    %dh,%al
     aab:	06                   	(bad)  
     aac:	00 00                	add    %al,(%rax)
     aae:	11 20                	adc    %esp,(%rax)
     ab0:	02 24 08             	add    (%rax,%rcx,1),%ah
     ab3:	00 00                	add    %al,(%rax)
     ab5:	01 30                	add    %esi,(%rax)
     ab7:	02 17                	add    (%rdi),%dl
     ab9:	05 00 00 02 30       	add    $0x30020000,%eax
     abe:	02 d7                	add    %bh,%dl
     ac0:	02 00                	add    (%rax),%al
     ac2:	00 03                	add    %al,(%rbx)
     ac4:	30 02                	xor    %al,(%rdx)
     ac6:	66 01 00             	add    %ax,(%rax)
     ac9:	00 04 30             	add    %al,(%rax,%rsi,1)
     acc:	02 c4                	add    %ah,%al
     ace:	07                   	(bad)  
     acf:	00 00                	add    %al,(%rax)
     ad1:	05 30 02 68 04       	add    $0x4680230,%eax
     ad6:	00 00                	add    %al,(%rax)
     ad8:	01 40 02             	add    %eax,0x2(%rax)
     adb:	86 02                	xchg   %al,(%rdx)
     add:	00 00                	add    %al,(%rax)
     adf:	02 40 02             	add    0x2(%rax),%al
     ae2:	cb                   	lret   
     ae3:	04 00                	add    $0x0,%al
     ae5:	00 03                	add    %al,(%rbx)
     ae7:	40 02 a2 06 00 00 04 	add    0x4000006(%rdx),%spl
     aee:	40 02 2b             	add    (%rbx),%bpl
     af1:	04 00                	add    $0x0,%al
     af3:	00 05 40 02 06 09    	add    %al,0x9060240(%rip)        # 9060d39 <_end+0x9035ba9>
     af9:	00 00                	add    %al,(%rax)
     afb:	06                   	(bad)  
     afc:	40 02 3b             	add    (%rbx),%dil
     aff:	08 00                	or     %al,(%rax)
     b01:	00 07                	add    %al,(%rdi)
     b03:	40 02 72 05          	add    0x5(%rdx),%sil
     b07:	00 00                	add    %al,(%rax)
     b09:	08 40 02             	or     %al,0x2(%rax)
     b0c:	fe 03                	incb   (%rbx)
     b0e:	00 00                	add    %al,(%rax)
     b10:	0a 40 02             	or     0x2(%rax),%al
     b13:	42 00 00             	rex.X add %al,(%rax)
     b16:	00 0c 40             	add    %cl,(%rax,%rax,2)
     b19:	02 69 02             	add    0x2(%rcx),%ch
     b1c:	00 00                	add    %al,(%rax)
     b1e:	0d 40 02 0f 08       	or     $0x80f0240,%eax
     b23:	00 00                	add    %al,(%rax)
     b25:	0e                   	(bad)  
     b26:	40 02 13             	rex add (%rbx),%dl
     b29:	04 00                	add    $0x0,%al
     b2b:	00 0f                	add    %cl,(%rdi)
     b2d:	40 02 6c 07 00       	add    0x0(%rdi,%rax,1),%bpl
     b32:	00 11                	add    %dl,(%rcx)
     b34:	40 02 c2             	rex add %dl,%al
     b37:	03 00                	add    (%rax),%eax
     b39:	00 12                	add    %dl,(%rdx)
     b3b:	40 02 ab 00 00 00 13 	add    0x13000000(%rbx),%bpl
     b42:	40 02 0b             	rex add (%rbx),%cl
     b45:	06                   	(bad)  
     b46:	00 00                	add    %al,(%rax)
     b48:	02 50 02             	add    0x2(%rax),%dl
     b4b:	5a                   	pop    %rdx
     b4c:	05 00 00 01 60       	add    $0x60010000,%eax
     b51:	02 af 04 00 00 02    	add    0x2000004(%rdi),%ch
     b57:	60                   	(bad)  
     b58:	02 1a                	add    (%rdx),%bl
     b5a:	07                   	(bad)  
     b5b:	00 00                	add    %al,(%rax)
     b5d:	03 60 02             	add    0x2(%rax),%esp
     b60:	bc 02 00 00 04       	mov    $0x4000002,%esp
     b65:	60                   	(bad)  
     b66:	02 4c 06 00          	add    0x0(%rsi,%rax,1),%cl
     b6a:	00 05 60 02 03 03    	add    %al,0x3030260(%rip)        # 3030dd0 <_end+0x3005c40>
     b70:	00 00                	add    %al,(%rax)
     b72:	01 70 02             	add    %esi,0x2(%rax)
     b75:	10 01                	adc    %al,(%rcx)
     b77:	00 00                	add    %al,(%rax)
     b79:	02 70 02             	add    0x2(%rax),%dh
     b7c:	f2 07                	repnz (bad) 
     b7e:	00 00                	add    %al,(%rax)
     b80:	03 70 02             	add    0x2(%rax),%esi
     b83:	f4                   	hlt    
     b84:	00 00                	add    %al,(%rax)
     b86:	00 04 70             	add    %al,(%rax,%rsi,2)
     b89:	02 33                	add    (%rbx),%dh
     b8b:	05 00 00 05 70       	add    $0x70050000,%eax
     b90:	02 29                	add    (%rcx),%ch
     b92:	01 00                	add    %eax,(%rax)
     b94:	00 06                	add    %al,(%rsi)
     b96:	70 02                	jo     b9a <__ImageBase+0xb9a>
     b98:	49 04 00             	rex.WB add $0x0,%al
     b9b:	00 07                	add    %al,(%rdi)
     b9d:	70 02                	jo     ba1 <__ImageBase+0xba1>
     b9f:	e2 03                	loop   ba4 <__ImageBase+0xba4>
     ba1:	00 00                	add    %al,(%rax)
     ba3:	08 70 02             	or     %dh,0x2(%rax)
     ba6:	a3 01 00 00 09 70 02 	movabs %eax,0x8bd027009000001
     bad:	bd 08 
     baf:	00 00                	add    %al,(%rax)
     bb1:	01 80 02 de 08 00    	add    %eax,0x8de02(%rax)
     bb7:	00 02                	add    %al,(%rdx)
     bb9:	80 02 8f             	addb   $0x8f,(%rdx)
     bbc:	04 00                	add    $0x0,%al
     bbe:	00 03                	add    %al,(%rbx)
     bc0:	80 02 8d             	addb   $0x8d,(%rdx)
     bc3:	08 00                	or     %al,(%rax)
     bc5:	00 04 80             	add    %al,(%rax,%rax,4)
     bc8:	02 7f 01             	add    0x1(%rdi),%bh
     bcb:	00 00                	add    %al,(%rax)
     bcd:	05 80 02 83 07       	add    $0x7830280,%eax
     bd2:	00 00                	add    %al,(%rax)
     bd4:	01 90 02 e9 04 00    	add    %edx,0x4e902(%rax)
     bda:	00 01                	add    %al,(%rcx)
     bdc:	f0 00 06             	lock add %al,(%rsi)
     bdf:	ec                   	in     (%dx),%al
     be0:	05 00 00 05 7e       	add    $0x7e050000,%eax
     be5:	03 db                	add    %ebx,%ebx
     be7:	00 00                	add    %al,(%rax)
     be9:	00 08                	add    %cl,(%rax)
     beb:	08 05 e6 00 00 00    	or     %al,0xe6(%rip)        # cd7 <__ImageBase+0xcd7>
     bf1:	06                   	(bad)  
     bf2:	48 0b 00             	or     (%rax),%rax
     bf5:	00 06                	add    %al,(%rsi)
     bf7:	30 0d 56 00 00 00    	xor    %cl,0x56(%rip)        # c53 <__ImageBase+0xc53>
     bfd:	0e                   	(bad)  
     bfe:	e0 0a                	loopne c0a <__ImageBase+0xc0a>
     c00:	00 00                	add    %al,(%rax)
     c02:	20 1e                	and    %bl,(%rsi)
     c04:	3f                   	(bad)  
     c05:	03 00                	add    (%rax),%eax
     c07:	00 07                	add    %al,(%rdi)
     c09:	57                   	push   %rdi
     c0a:	0c 00                	or     $0x0,%al
     c0c:	00 1f                	add    %bl,(%rdi)
     c0e:	0e                   	(bad)  
     c0f:	3f                   	(bad)  
     c10:	03 00                	add    (%rax),%eax
     c12:	00 00                	add    %al,(%rax)
     c14:	07                   	(bad)  
     c15:	5b                   	pop    %rbx
     c16:	0b 00                	or     (%rax),%eax
     c18:	00 20                	add    %ah,(%rax)
     c1a:	09 cf                	or     %ecx,%edi
     c1c:	00 00                	add    %al,(%rax)
     c1e:	00 08                	add    %cl,(%rax)
     c20:	07                   	(bad)  
     c21:	89 0b                	mov    %ecx,(%rbx)
     c23:	00 00                	add    %al,(%rax)
     c25:	21 0e                	and    %ecx,(%rsi)
     c27:	3f                   	(bad)  
     c28:	03 00                	add    (%rax),%eax
     c2a:	00 10                	add    %dl,(%rax)
     c2c:	07                   	(bad)  
     c2d:	c4                   	(bad)  
     c2e:	0a 00                	or     (%rax),%al
     c30:	00 22                	add    %ah,(%rdx)
     c32:	09 cf                	or     %ecx,%edi
     c34:	00 00                	add    %al,(%rax)
     c36:	00 18                	add    %bl,(%rax)
     c38:	00 0b                	add    %cl,(%rbx)
     c3a:	b2 00                	mov    $0x0,%dl
     c3c:	00 00                	add    %al,(%rax)
     c3e:	06                   	(bad)  
     c3f:	e0 0a                	loopne c4b <__ImageBase+0xc4b>
     c41:	00 00                	add    %al,(%rax)
     c43:	01 23                	add    %esp,(%rbx)
     c45:	03 03                	add    (%rbx),%eax
     c47:	03 00                	add    (%rax),%eax
     c49:	00 0e                	add    %cl,(%rsi)
     c4b:	0f 0c                	(bad)  
     c4d:	00 00                	add    %al,(%rax)
     c4f:	20 25 8c 03 00 00    	and    %ah,0x38c(%rip)        # fe1 <__ImageBase+0xfe1>
     c55:	07                   	(bad)  
     c56:	6b 0b 00             	imul   $0x0,(%rbx),%ecx
     c59:	00 26                	add    %ah,(%rsi)
     c5b:	0e                   	(bad)  
     c5c:	3f                   	(bad)  
     c5d:	03 00                	add    (%rax),%eax
     c5f:	00 00                	add    %al,(%rax)
     c61:	07                   	(bad)  
     c62:	9c                   	pushf  
     c63:	0a 00                	or     (%rax),%al
     c65:	00 27                	add    %ah,(%rdi)
     c67:	09 cf                	or     %ecx,%edi
     c69:	00 00                	add    %al,(%rax)
     c6b:	00 08                	add    %cl,(%rax)
     c6d:	07                   	(bad)  
     c6e:	68 0a 00 00 28       	push   $0x2800000a
     c73:	0e                   	(bad)  
     c74:	3f                   	(bad)  
     c75:	03 00                	add    (%rax),%eax
     c77:	00 10                	add    %dl,(%rax)
     c79:	07                   	(bad)  
     c7a:	b0 0a                	mov    $0xa,%al
     c7c:	00 00                	add    %al,(%rax)
     c7e:	29 09                	sub    %ecx,(%rcx)
     c80:	cf                   	iret   
     c81:	00 00                	add    %al,(%rax)
     c83:	00 18                	add    %bl,(%rax)
     c85:	00 06                	add    %al,(%rsi)
     c87:	0f 0c                	(bad)  
     c89:	00 00                	add    %al,(%rax)
     c8b:	01 2a                	add    %ebp,(%rdx)
     c8d:	03 50 03             	add    0x3(%rax),%edx
     c90:	00 00                	add    %al,(%rax)
     c92:	0e                   	(bad)  
     c93:	e7 0c                	out    %eax,$0xc
     c95:	00 00                	add    %al,(%rax)
     c97:	10 2c bc             	adc    %ch,(%rsp,%rdi,4)
     c9a:	03 00                	add    (%rax),%eax
     c9c:	00 07                	add    %al,(%rdi)
     c9e:	57                   	push   %rdi
     c9f:	0c 00                	or     $0x0,%al
     ca1:	00 2d 0e 3f 03 00    	add    %ch,0x33f0e(%rip)        # 34bb5 <_end+0x9a25>
     ca7:	00 00                	add    %al,(%rax)
     ca9:	07                   	(bad)  
     caa:	5b                   	pop    %rbx
     cab:	0b 00                	or     (%rax),%eax
     cad:	00 2e                	add    %ch,(%rsi)
     caf:	09 cf                	or     %ecx,%edi
     cb1:	00 00                	add    %al,(%rax)
     cb3:	00 08                	add    %cl,(%rax)
     cb5:	00 06                	add    %al,(%rsi)
     cb7:	e7 0c                	out    %eax,$0xc
     cb9:	00 00                	add    %al,(%rax)
     cbb:	01 2f                	add    %ebp,(%rdi)
     cbd:	03 98 03 00 00 0e    	add    0xe000003(%rax),%ebx
     cc3:	b2 09                	mov    $0x9,%dl
     cc5:	00 00                	add    %al,(%rax)
     cc7:	10 31                	adc    %dh,(%rcx)
     cc9:	ec                   	in     (%dx),%al
     cca:	03 00                	add    (%rax),%eax
     ccc:	00 07                	add    %al,(%rdi)
     cce:	57                   	push   %rdi
     ccf:	0c 00                	or     $0x0,%al
     cd1:	00 32                	add    %dh,(%rdx)
     cd3:	0e                   	(bad)  
     cd4:	3f                   	(bad)  
     cd5:	03 00                	add    (%rax),%eax
     cd7:	00 00                	add    %al,(%rax)
     cd9:	07                   	(bad)  
     cda:	5b                   	pop    %rbx
     cdb:	0b 00                	or     (%rax),%eax
     cdd:	00 33                	add    %dh,(%rbx)
     cdf:	09 cf                	or     %ecx,%edi
     ce1:	00 00                	add    %al,(%rax)
     ce3:	00 08                	add    %cl,(%rax)
     ce5:	00 06                	add    %al,(%rsi)
     ce7:	b2 09                	mov    $0x9,%dl
     ce9:	00 00                	add    %al,(%rax)
     ceb:	01 34 03             	add    %esi,(%rbx,%rax,1)
     cee:	c8 03 00 00          	enter  $0x3,$0x0
     cf2:	0e                   	(bad)  
     cf3:	26 0d 00 00 10 36    	es or  $0x36100000,%eax
     cf9:	1c 04                	sbb    $0x4,%al
     cfb:	00 00                	add    %al,(%rax)
     cfd:	07                   	(bad)  
     cfe:	57                   	push   %rdi
     cff:	0c 00                	or     $0x0,%al
     d01:	00 37                	add    %dh,(%rdi)
     d03:	0e                   	(bad)  
     d04:	3f                   	(bad)  
     d05:	03 00                	add    (%rax),%eax
     d07:	00 00                	add    %al,(%rax)
     d09:	07                   	(bad)  
     d0a:	5b                   	pop    %rbx
     d0b:	0b 00                	or     (%rax),%eax
     d0d:	00 38                	add    %bh,(%rax)
     d0f:	09 cf                	or     %ecx,%edi
     d11:	00 00                	add    %al,(%rax)
     d13:	00 08                	add    %cl,(%rax)
     d15:	00 06                	add    %al,(%rsi)
     d17:	26 0d 00 00 01 39    	es or  $0x39010000,%eax
     d1d:	03 f8                	add    %eax,%edi
     d1f:	03 00                	add    (%rax),%eax
     d21:	00 0e                	add    %cl,(%rsi)
     d23:	af                   	scas   %es:(%rdi),%eax
     d24:	0b 00                	or     (%rax),%eax
     d26:	00 08                	add    %cl,(%rax)
     d28:	3b 40 04             	cmp    0x4(%rax),%eax
     d2b:	00 00                	add    %al,(%rax)
     d2d:	07                   	(bad)  
     d2e:	d2 09                	rorb   %cl,(%rcx)
     d30:	00 00                	add    %al,(%rax)
     d32:	3c 0e                	cmp    $0xe,%al
     d34:	3f                   	(bad)  
     d35:	03 00                	add    (%rax),%eax
     d37:	00 00                	add    %al,(%rax)
     d39:	00 06                	add    %al,(%rsi)
     d3b:	af                   	scas   %es:(%rdi),%eax
     d3c:	0b 00                	or     (%rax),%eax
     d3e:	00 01                	add    %al,(%rcx)
     d40:	3d 03 28 04 00       	cmp    $0x42803,%eax
     d45:	00 13                	add    %dl,(%rbx)
     d47:	10 73 01             	adc    %dh,0x1(%rbx)
     d4a:	02 7d 04             	add    0x4(%rbp),%bh
     d4d:	00 00                	add    %al,(%rax)
     d4f:	0d eb 0b 00 00       	or     $0xbeb,%eax
     d54:	73 01                	jae    d57 <__ImageBase+0xd57>
     d56:	10 a9 00 00 00 00    	adc    %ch,0x0(%rcx)
     d5c:	0d e3 0b 00 00       	or     $0xbe3,%eax
     d61:	73 01                	jae    d64 <__ImageBase+0xd64>
     d63:	24 b7                	and    $0xb7,%al
     d65:	00 00                	add    %al,(%rax)
     d67:	00 08                	add    %cl,(%rax)
     d69:	0d 7b 0b 00 00       	or     $0xb7b,%eax
     d6e:	73 01                	jae    d71 <__ImageBase+0xd71>
     d70:	35 b7 00 00 00       	xor    $0xb7,%eax
     d75:	09 00                	or     %eax,(%rax)
     d77:	13 68 71             	adc    0x71(%rax),%ebp
     d7a:	01 13                	add    %edx,(%rbx)
     d7c:	a1 04 00 00 0d 78 0a 	movabs 0xa780d000004,%eax
     d83:	00 00 
     d85:	72 01                	jb     d88 <__ImageBase+0xd88>
     d87:	09 cf                	or     %ecx,%edi
     d89:	00 00                	add    %al,(%rax)
     d8b:	00 00                	add    %al,(%rax)
     d8d:	0d a8 0c 00 00       	or     $0xca8,%eax
     d92:	73 01                	jae    d95 <__ImageBase+0xd95>
     d94:	45 a6                	rex.RB cmpsb %es:(%rdi),%ds:(%rsi)
     d96:	04 00                	add    $0x0,%al
     d98:	00 08                	add    %cl,(%rax)
     d9a:	00 11                	add    %dl,(%rcx)
     d9c:	7d 04                	jge    da2 <__ImageBase+0xda2>
     d9e:	00 00                	add    %al,(%rax)
     da0:	1e                   	(bad)  
     da1:	4c 04 00             	rex.WR add $0x0,%al
     da4:	00 b6 04 00 00 14    	add    %dh,0x14000004(%rsi)
     daa:	7c 00                	jl     dac <__ImageBase+0xdac>
     dac:	00 00                	add    %al,(%rax)
     dae:	05 00 1f a6 0c       	add    $0xca61f00,%eax
     db3:	00 00                	add    %al,(%rax)
     db5:	74 01                	je     db8 <__ImageBase+0xdb8>
     db7:	a1 04 00 00 09 03 a0 	movabs 0x17da00309000004,%eax
     dbe:	7d 01 
     dc0:	00 00                	add    %al,(%rax)
     dc2:	00 00                	add    %al,(%rax)
     dc4:	00 13                	add    %dl,(%rbx)
     dc6:	10 80 01 13 ef 04    	adc    %al,0x4ef1301(%rax)
     dcc:	00 00                	add    %al,(%rax)
     dce:	0d 0c 0d 00 00       	or     $0xd0c,%eax
     dd3:	81 01 09 cf 00 00    	addl   $0xcf09,(%rcx)
     dd9:	00 00                	add    %al,(%rax)
     ddb:	0d 03 0c 00 00       	or     $0xc03,%eax
     de0:	82                   	(bad)  
     de1:	01 0a                	add    %ecx,(%rdx)
     de3:	f4                   	hlt    
     de4:	04 00                	add    $0x0,%al
     de6:	00 08                	add    %cl,(%rax)
     de8:	00 11                	add    %dl,(%rcx)
     dea:	cb                   	lret   
     deb:	04 00                	add    $0x0,%al
     ded:	00 1e                	add    %bl,(%rsi)
     def:	b7 00                	mov    $0x0,%bh
     df1:	00 00                	add    %al,(%rax)
     df3:	0a 05 00 00 14 7c    	or     0x7c140000(%rip),%al        # 7c140df9 <_end+0x7c115c69>
     df9:	00 00                	add    %al,(%rax)
     dfb:	00 00                	add    %al,(%rax)
     dfd:	14 7c                	adc    $0x7c,%al
     dff:	00 00                	add    %al,(%rax)
     e01:	00 05 00 1f fd 0b    	add    %al,0xbfd1f00(%rip)        # bfd2d07 <_end+0xbfa7b77>
     e07:	00 00                	add    %al,(%rax)
     e09:	83 01 ef             	addl   $0xffffffef,(%rcx)
     e0c:	04 00                	add    $0x0,%al
     e0e:	00 09                	add    %cl,(%rcx)
     e10:	03 00                	add    (%rax),%eax
     e12:	32 01                	xor    (%rcx),%al
     e14:	00 00                	add    %al,(%rax)
     e16:	00 00                	add    %al,(%rax)
     e18:	00 0c d8             	add    %cl,(%rax,%rbx,8)
     e1b:	09 00                	or     %eax,(%rax)
     e1d:	00 07                	add    %al,(%rdi)
     e1f:	68 15 e4 02 00       	push   $0x2e415
     e24:	00 3a                	add    %bh,(%rdx)
     e26:	05 00 00 04 64       	add    $0x64040000,%eax
     e2b:	00 00                	add    %al,(%rax)
     e2d:	00 04 a9             	add    %al,(%rcx,%rbp,4)
     e30:	00 00                	add    %al,(%rax)
     e32:	00 00                	add    %al,(%rax)
     e34:	0c 2f                	or     $0x2f,%al
     e36:	0b 00                	or     (%rax),%eax
     e38:	00 08                	add    %cl,(%rax)
     e3a:	4d 10 f7             	rex.WRB adc %r14b,%r15b
     e3d:	02 00                	add    (%rax),%al
     e3f:	00 5f 05             	add    %bl,0x5(%rdi)
     e42:	00 00                	add    %al,(%rax)
     e44:	04 a9                	add    $0xa9,%al
     e46:	00 00                	add    %al,(%rax)
     e48:	00 04 cf             	add    %al,(%rdi,%rcx,8)
     e4b:	00 00                	add    %al,(%rax)
     e4d:	00 04 5f             	add    %al,(%rdi,%rbx,2)
     e50:	05 00 00 04 cf       	add    $0xcf040000,%eax
     e55:	00 00                	add    %al,(%rax)
     e57:	00 00                	add    %al,(%rax)
     e59:	0b 64 05 00          	or     0x0(%rbp,%rax,1),%esp
     e5d:	00 26                	add    %ah,(%rsi)
     e5f:	15 50 0b 00 00       	adc    $0xb50,%eax
     e64:	07                   	(bad)  
     e65:	4d 0d 0c 00 0d 00    	rex.WRB or $0xd000c,%rax
     e6b:	00 07                	add    %al,(%rdi)
     e6d:	45 0e                	rex.RB (bad) 
     e6f:	a9 00 00 00 83       	test   $0x83000000,%eax
     e74:	05 00 00 04 cf       	add    $0xcf040000,%eax
     e79:	00 00                	add    %al,(%rax)
     e7b:	00 00                	add    %al,(%rax)
     e7d:	0c 0c                	or     $0xc,%al
     e7f:	0a 00                	or     (%rax),%al
     e81:	00 09                	add    %cl,(%rcx)
     e83:	35 0c 56 00 00       	xor    $0x560c,%eax
     e88:	00 9e 05 00 00 04    	add    %bl,0x4000005(%rsi)
     e8e:	5f                   	pop    %rdi
     e8f:	05 00 00 04 cf       	add    $0xcf040000,%eax
     e94:	00 00                	add    %al,(%rax)
     e96:	00 00                	add    %al,(%rax)
     e98:	15 c9 0c 00 00       	adc    $0xcc9,%eax
     e9d:	0a 12                	or     (%rdx),%dl
     e9f:	06                   	(bad)  
     ea0:	0f 0e                	femms  
     ea2:	0b 00                	or     (%rax),%eax
     ea4:	00 0a                	add    %cl,(%rdx)
     ea6:	13 06                	adc    (%rsi),%eax
     ea8:	bd 05 00 00 04       	mov    $0x4000005,%ebp
     ead:	3f                   	(bad)  
     eae:	03 00                	add    (%rax),%eax
     eb0:	00 04 3f             	add    %al,(%rdi,%rdi,1)
     eb3:	03 00                	add    (%rax),%eax
     eb5:	00 00                	add    %al,(%rax)
     eb7:	0f 38 0a 00          	psignd (%rax),%mm0
     ebb:	00 0a                	add    %cl,(%rdx)
     ebd:	14 06                	adc    $0x6,%al
     ebf:	d4                   	(bad)  
     ec0:	05 00 00 04 3f       	add    $0x3f040000,%eax
     ec5:	03 00                	add    (%rax),%eax
     ec7:	00 04 3f             	add    %al,(%rdi,%rdi,1)
     eca:	03 00                	add    (%rax),%eax
     ecc:	00 00                	add    %al,(%rax)
     ece:	0f 35                	sysexit 
     ed0:	0c 00                	or     $0x0,%al
     ed2:	00 0a                	add    %cl,(%rdx)
     ed4:	15 06 e6 05 00       	adc    $0x5e606,%eax
     ed9:	00 04 3f             	add    %al,(%rdi,%rdi,1)
     edc:	03 00                	add    (%rax),%eax
     ede:	00 00                	add    %al,(%rax)
     ee0:	0f 8b 0c 00 00 0a    	jnp    a000ef2 <_end+0x9fd5d62>
     ee6:	16                   	(bad)  
     ee7:	06                   	(bad)  
     ee8:	f8                   	clc    
     ee9:	05 00 00 04 3f       	add    $0x3f040000,%eax
     eee:	03 00                	add    (%rax),%eax
     ef0:	00 00                	add    %al,(%rax)
     ef2:	0f 56 0b             	orps   (%rbx),%xmm1
     ef5:	00 00                	add    %al,(%rax)
     ef7:	0b 61 17             	or     0x17(%rcx),%esp
     efa:	0a 06                	or     (%rsi),%al
     efc:	00 00                	add    %al,(%rax)
     efe:	04 a9                	add    $0xa9,%al
     f00:	00 00                	add    %al,(%rax)
     f02:	00 00                	add    %al,(%rax)
     f04:	0f 8c 0a 00 00 0a    	jl     a000f14 <_end+0x9fd5d84>
     f0a:	17                   	(bad)  
     f0b:	06                   	(bad)  
     f0c:	1c 06                	sbb    $0x6,%al
     f0e:	00 00                	add    %al,(%rax)
     f10:	04 3f                	add    $0x3f,%al
     f12:	03 00                	add    (%rax),%eax
     f14:	00 00                	add    %al,(%rax)
     f16:	0c 81                	or     $0x81,%al
     f18:	0a 00                	or     (%rax),%al
     f1a:	00 06                	add    %al,(%rsi)
     f1c:	4b 16                	rex.WXB (bad) 
     f1e:	cf                   	iret   
     f1f:	00 00                	add    %al,(%rax)
     f21:	00 32                	add    %dh,(%rdx)
     f23:	06                   	(bad)  
     f24:	00 00                	add    %al,(%rax)
     f26:	04 3f                	add    $0x3f,%al
     f28:	03 00                	add    (%rax),%eax
     f2a:	00 00                	add    %al,(%rax)
     f2c:	0c f6                	or     $0xf6,%al
     f2e:	0b 00                	or     (%rax),%eax
     f30:	00 0b                	add    %cl,(%rbx)
     f32:	64 17                	fs (bad) 
     f34:	a9 00 00 00 48       	test   $0x48000000,%eax
     f39:	06                   	(bad)  
     f3a:	00 00                	add    %al,(%rax)
     f3c:	04 cf                	add    $0xcf,%al
     f3e:	00 00                	add    %al,(%rax)
     f40:	00 00                	add    %al,(%rax)
     f42:	0c f4                	or     $0xf4,%al
     f44:	09 00                	or     %eax,(%rax)
     f46:	00 08                	add    %cl,(%rax)
     f48:	4c 10 f7             	rex.WR adc %r14b,%dil
     f4b:	02 00                	add    (%rax),%al
     f4d:	00 6d 06             	add    %ch,0x6(%rbp)
     f50:	00 00                	add    %al,(%rax)
     f52:	04 a9                	add    $0xa9,%al
     f54:	00 00                	add    %al,(%rax)
     f56:	00 04 cf             	add    %al,(%rdi,%rcx,8)
     f59:	00 00                	add    %al,(%rax)
     f5b:	00 04 5f             	add    %al,(%rdi,%rbx,2)
     f5e:	05 00 00 04 cf       	add    $0xcf040000,%eax
     f63:	00 00                	add    %al,(%rax)
     f65:	00 00                	add    %al,(%rax)
     f67:	15 99 0b 00 00       	adc    $0xb99,%eax
     f6c:	0c 29                	or     $0x29,%al
     f6e:	0d 0c c0 0b 00       	or     $0xbc00c,%eax
     f73:	00 09                	add    %cl,(%rcx)
     f75:	40 0c 56             	rex or $0x56,%al
     f78:	00 00                	add    %al,(%rax)
     f7a:	00 90 06 00 00 04    	add    %dl,0x4000006(%rax)
     f80:	5f                   	pop    %rdi
     f81:	05 00 00 04 cf       	add    $0xcf040000,%eax
     f86:	00 00                	add    %al,(%rax)
     f88:	00 00                	add    %al,(%rax)
     f8a:	27                   	(bad)  
     f8b:	b1 08                	mov    $0x8,%cl
     f8d:	00 00                	add    %al,(%rax)
     f8f:	01 8b 01 18 e4 02    	add    %ecx,0x2e41801(%rbx)
     f95:	00 00                	add    %al,(%rax)
     f97:	34 46                	xor    $0x46,%al
     f99:	00 00                	add    %al,(%rax)
     f9b:	00 00                	add    %al,(%rax)
     f9d:	00 00                	add    %al,(%rax)
     f9f:	e9 00 00 00 00       	jmp    fa4 <__ImageBase+0xfa4>
     fa4:	00 00                	add    %al,(%rax)
     fa6:	00 01                	add    %al,(%rcx)
     fa8:	9c                   	pushf  
     fa9:	ef                   	out    %eax,(%dx)
     faa:	07                   	(bad)  
     fab:	00 00                	add    %al,(%rax)
     fad:	16                   	(bad)  
     fae:	70 77                	jo     1027 <ippcpSetCpuFeatures@plt+0xf>
     fb0:	00 8b 01 30 3f 03    	add    %cl,0x33f3001(%rbx)
     fb6:	00 00                	add    %al,(%rax)
     fb8:	b8 01 00 00 b2       	mov    $0xb2000001,%eax
     fbd:	01 00                	add    %eax,(%rax)
     fbf:	00 09                	add    %cl,(%rcx)
     fc1:	05 0a 00 00 8d       	add    $0x8d00000a,%eax
     fc6:	01 0f                	add    %ecx,(%rdi)
     fc8:	e4 02                	in     $0x2,%al
     fca:	00 00                	add    %al,(%rax)
     fcc:	d7                   	xlat   %ds:(%rbx)
     fcd:	01 00                	add    %eax,(%rax)
     fcf:	00 d1                	add    %dl,%cl
     fd1:	01 00                	add    %eax,(%rax)
     fd3:	00 28                	add    %ch,(%rax)
     fd5:	fd                   	std    
     fd6:	09 00                	or     %eax,(%rax)
     fd8:	00 01                	add    %al,(%rcx)
     fda:	8e 01                	mov    (%rcx),%es
     fdc:	09 cf                	or     %ecx,%edi
     fde:	00 00                	add    %al,(%rax)
     fe0:	00 17                	add    %dl,(%rdi)
     fe2:	6d                   	insl   (%dx),%es:(%rdi)
     fe3:	73 00                	jae    fe5 <__ImageBase+0xfe5>
     fe5:	90                   	nop
     fe6:	01 14 ef             	add    %edx,(%rdi,%rbp,8)
     fe9:	07                   	(bad)  
     fea:	00 00                	add    %al,(%rax)
     fec:	f8                   	clc    
     fed:	01 00                	add    %eax,(%rax)
     fef:	00 f0                	add    %dh,%al
     ff1:	01 00                	add    %eax,(%rax)
     ff3:	00 09                	add    %cl,(%rcx)
     ff5:	9b                   	fwait
     ff6:	09 00                	or     %eax,(%rax)
     ff8:	00 91 01 09 cf 00    	add    %dl,0xcf0901(%rcx)
     ffe:	00 00                	add    %al,(%rax)
    1000:	21 02                	and    %eax,(%rdx)
    1002:	00 00                	add    %al,(%rax)
    1004:	17                   	(bad)  
    1005:	02 00                	add    (%rax),%al
    1007:	00 18                	add    %bl,(%rax)
    1009:	62                   	(bad)  
    100a:	0a 00                	or     (%rax),%al
    100c:	00 92 01 08 a9 00    	add    %dl,0xa90801(%rdx)
    1012:	00 00                	add    %al,(%rax)
    1014:	02 91 48 03 51 46    	add    0x46510348(%rcx),%dl
    101a:	00 00                	add    %al,(%rax)
    101c:	00 00                	add    %al,(%rax)
    101e:	00 00                	add    %al,(%rax)
    1020:	1c 06                	sbb    $0x6,%al
    1022:	00 00                	add    %al,(%rax)
    1024:	35 07 00 00 01       	xor    $0x1000007,%eax
    1029:	01 55 02             	add    %edx,0x2(%rbp)
    102c:	73 00                	jae    102e <ippcpSetCpuFeatures@plt+0x16>
    102e:	00 03                	add    %al,(%rbx)
    1030:	6f                   	outsl  %ds:(%rsi),(%dx)
    1031:	46 00 00             	rex.RX add %r8b,(%rax)
    1034:	00 00                	add    %al,(%rax)
    1036:	00 00                	add    %al,(%rax)
    1038:	83 05 00 00 53 07 00 	addl   $0x0,0x7530000(%rip)        # 753103f <_end+0x7505eaf>
    103f:	00 01                	add    %al,(%rcx)
    1041:	01 55 02             	add    %edx,0x2(%rbp)
    1044:	73 00                	jae    1046 <ippcpSetCpuFeatures@plt+0x2e>
    1046:	01 01                	add    %eax,(%rcx)
    1048:	54                   	push   %rsp
    1049:	02 76 00             	add    0x0(%rsi),%dh
    104c:	00 03                	add    %al,(%rbx)
    104e:	93                   	xchg   %eax,%ebx
    104f:	46 00 00             	rex.RX add %r8b,(%rax)
    1052:	00 00                	add    %al,(%rax)
    1054:	00 00                	add    %al,(%rax)
    1056:	6d                   	insl   (%dx),%es:(%rdi)
    1057:	05 00 00 6b 07       	add    $0x76b0000,%eax
    105c:	00 00                	add    %al,(%rax)
    105e:	01 01                	add    %eax,(%rcx)
    1060:	55                   	push   %rbp
    1061:	02 7d 08             	add    0x8(%rbp),%bh
    1064:	00 19                	add    %bl,(%rcx)
    1066:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
    1067:	46 00 00             	rex.RX add %r8b,(%rax)
    106a:	00 00                	add    %al,(%rax)
    106c:	00 00                	add    %al,(%rax)
    106e:	65 05 00 00 03 d3    	gs add $0xd3030000,%eax
    1074:	46 00 00             	rex.RX add %r8b,(%rax)
    1077:	00 00                	add    %al,(%rax)
    1079:	00 00                	add    %al,(%rax)
    107b:	3a 05 00 00 a0 07    	cmp    0x7a00000(%rip),%al        # 7a01081 <_end+0x79d5ef1>
    1081:	00 00                	add    %al,(%rax)
    1083:	01 01                	add    %eax,(%rcx)
    1085:	55                   	push   %rbp
    1086:	02 7c 00 01          	add    0x1(%rax,%rax,1),%bh
    108a:	01 54 01 38          	add    %edx,0x38(%rcx,%rax,1)
    108e:	01 01                	add    %eax,(%rcx)
    1090:	51                   	push   %rcx
    1091:	02 91 48 01 01 52    	add    0x52010148(%rcx),%dl
    1097:	01 38                	add    %edi,(%rax)
    1099:	00 03                	add    %al,(%rbx)
    109b:	ea                   	(bad)  
    109c:	46 00 00             	rex.RX add %r8b,(%rax)
    109f:	00 00                	add    %al,(%rax)
    10a1:	00 00                	add    %al,(%rax)
    10a3:	3a 05 00 00 c4 07    	cmp    0x7c40000(%rip),%al        # 7c410a9 <_end+0x7c15f19>
    10a9:	00 00                	add    %al,(%rax)
    10ab:	01 01                	add    %eax,(%rcx)
    10ad:	54                   	push   %rsp
    10ae:	02 7d 00             	add    0x0(%rbp),%bh
    10b1:	01 01                	add    %eax,(%rcx)
    10b3:	51                   	push   %rcx
    10b4:	02 73 00             	add    0x0(%rbx),%dh
    10b7:	01 01                	add    %eax,(%rcx)
    10b9:	52                   	push   %rdx
    10ba:	02 76 00             	add    0x0(%rsi),%dh
    10bd:	00 03                	add    %al,(%rbx)
    10bf:	05 47 00 00 00       	add    $0x47,%eax
    10c4:	00 00                	add    %al,(%rax)
    10c6:	00 1f                	add    %bl,(%rdi)
    10c8:	05 00 00 e1 07       	add    $0x7e10000,%eax
    10cd:	00 00                	add    %al,(%rax)
    10cf:	01 01                	add    %eax,(%rcx)
    10d1:	55                   	push   %rbp
    10d2:	01 30                	add    %esi,(%rax)
    10d4:	01 01                	add    %eax,(%rcx)
    10d6:	54                   	push   %rsp
    10d7:	02 7c 00 00          	add    0x0(%rax,%rax,1),%bh
    10db:	19 0e                	sbb    %ecx,(%rsi)
    10dd:	47 00 00             	rex.RXB add %r8b,(%r8)
    10e0:	00 00                	add    %al,(%rax)
    10e2:	00 00                	add    %al,(%rax)
    10e4:	65 05 00 00 00 0b    	gs add $0xb000000,%eax
    10ea:	40 04 00             	rex add $0x0,%al
    10ed:	00 20                	add    %ah,(%rax)
    10ef:	88 0a                	mov    %cl,(%rdx)
    10f1:	00 00                	add    %al,(%rax)
    10f3:	3f                   	(bad)  
    10f4:	01 e4                	add    %esp,%esp
    10f6:	02 00                	add    (%rax),%al
    10f8:	00 06                	add    %al,(%rsi)
    10fa:	40 00 00             	rex add %al,(%rax)
    10fd:	00 00                	add    %al,(%rax)
    10ff:	00 00                	add    %al,(%rax)
    1101:	f3 00 00             	repz add %al,(%rax)
    1104:	00 00                	add    %al,(%rax)
    1106:	00 00                	add    %al,(%rax)
    1108:	00 01                	add    %al,(%rcx)
    110a:	9c                   	pushf  
    110b:	94                   	xchg   %eax,%esp
    110c:	09 00                	or     %eax,(%rax)
    110e:	00 16                	add    %dl,(%rsi)
    1110:	70 6d                	jo     117f <ippcpSetCpuFeatures@plt+0x167>
    1112:	73 00                	jae    1114 <ippcpSetCpuFeatures@plt+0xfc>
    1114:	3f                   	(bad)  
    1115:	01 39                	add    %edi,(%rcx)
    1117:	a9 00 00 00 59       	test   $0x59000000,%eax
    111c:	02 00                	add    (%rax),%al
    111e:	00 4b 02             	add    %cl,0x2(%rbx)
    1121:	00 00                	add    %al,(%rax)
    1123:	17                   	(bad)  
    1124:	6d                   	insl   (%dx),%es:(%rdi)
    1125:	73 00                	jae    1127 <ippcpSetCpuFeatures@plt+0x10f>
    1127:	46 01 18             	rex.RX add %r11d,(%rax)
    112a:	94                   	xchg   %eax,%esp
    112b:	09 00                	or     %eax,(%rax)
    112d:	00 91 02 00 00 89    	add    %dl,-0x76fffffe(%rcx)
    1133:	02 00                	add    (%rax),%al
    1135:	00 18                	add    %bl,(%rax)
    1137:	d8 0a                	fmuls  (%rdx)
    1139:	00 00                	add    %al,(%rax)
    113b:	47 01 17             	rex.RXB add %r10d,(%r15)
    113e:	1c 04                	sbb    $0x4,%al
    1140:	00 00                	add    %al,(%rax)
    1142:	02 91 40 09 05 0a    	add    0xa050940(%rcx),%dl
    1148:	00 00                	add    %al,(%rax)
    114a:	4b 01 0f             	rex.WXB add %rcx,(%r15)
    114d:	e4 02                	in     $0x2,%al
    114f:	00 00                	add    %al,(%rax)
    1151:	b1 02                	mov    $0x2,%cl
    1153:	00 00                	add    %al,(%rax)
    1155:	af                   	scas   %es:(%rdi),%eax
    1156:	02 00                	add    (%rax),%al
    1158:	00 09                	add    %cl,(%rcx)
    115a:	21 0b                	and    %ecx,(%rbx)
    115c:	00 00                	add    %al,(%rax)
    115e:	4c 01 0e             	add    %r9,(%rsi)
    1161:	3f                   	(bad)  
    1162:	03 00                	add    (%rax),%eax
    1164:	00 bb 02 00 00 b9    	add    %bh,-0x46fffffe(%rbx)
    116a:	02 00                	add    (%rax),%al
    116c:	00 09                	add    %cl,(%rcx)
    116e:	49 0c 00             	rex.WB or $0x0,%al
    1171:	00 4d 01             	add    %cl,0x1(%rbp)
    1174:	09 cf                	or     %ecx,%edi
    1176:	00 00                	add    %al,(%rax)
    1178:	00 c4                	add    %al,%ah
    117a:	02 00                	add    (%rax),%al
    117c:	00 c2                	add    %al,%dl
    117e:	02 00                	add    (%rax),%al
    1180:	00 09                	add    %cl,(%rcx)
    1182:	55                   	push   %rbp
    1183:	0a 00                	or     (%rax),%al
    1185:	00 4e 01             	add    %cl,0x1(%rsi)
    1188:	08 99 09 00 00 d1    	or     %bl,-0x2efffff7(%rcx)
    118e:	02 00                	add    (%rax),%al
    1190:	00 cb                	add    %cl,%bl
    1192:	02 00                	add    (%rax),%al
    1194:	00 1a                	add    %bl,(%rdx)
    1196:	65 72 72             	gs jb  120b <ippcpSetCpuFeatures@plt+0x1f3>
    1199:	00 6c 01 de          	add    %ch,-0x22(%rcx,%rax,1)
    119d:	40 00 00             	rex add %al,(%rax)
    11a0:	00 00                	add    %al,(%rax)
    11a2:	00 00                	add    %al,(%rax)
    11a4:	03 31                	add    (%rcx),%esi
    11a6:	40 00 00             	rex add %al,(%rax)
    11a9:	00 00                	add    %al,(%rax)
    11ab:	00 00                	add    %al,(%rax)
    11ad:	75 06                	jne    11b5 <ippcpSetCpuFeatures@plt+0x19d>
    11af:	00 00                	add    %al,(%rax)
    11b1:	c7                   	(bad)  
    11b2:	08 00                	or     %al,(%rax)
    11b4:	00 01                	add    %al,(%rcx)
    11b6:	01 55 02             	add    %edx,0x2(%rbp)
    11b9:	73 00                	jae    11bb <ippcpSetCpuFeatures@plt+0x1a3>
    11bb:	01 01                	add    %eax,(%rcx)
    11bd:	54                   	push   %rsp
    11be:	01 40 00             	add    %eax,0x0(%rax)
    11c1:	03 53 40             	add    0x40(%rbx),%edx
    11c4:	00 00                	add    %al,(%rax)
    11c6:	00 00                	add    %al,(%rax)
    11c8:	00 00                	add    %al,(%rax)
    11ca:	48 06                	rex.W (bad) 
    11cc:	00 00                	add    %al,(%rax)
    11ce:	ef                   	out    %eax,(%dx)
    11cf:	08 00                	or     %al,(%rax)
    11d1:	00 01                	add    %al,(%rcx)
    11d3:	01 55 02             	add    %edx,0x2(%rbp)
    11d6:	91                   	xchg   %eax,%ecx
    11d7:	40 01 01             	rex add %eax,(%rcx)
    11da:	54                   	push   %rsp
    11db:	01 40 01             	add    %eax,0x1(%rax)
    11de:	01 51 02             	add    %edx,0x2(%rcx)
    11e1:	73 00                	jae    11e3 <ippcpSetCpuFeatures@plt+0x1cb>
    11e3:	01 01                	add    %eax,(%rcx)
    11e5:	52                   	push   %rdx
    11e6:	01 40 00             	add    %eax,0x0(%rax)
    11e9:	03 85 40 00 00 00    	add    0x40(%rbp),%eax
    11ef:	00 00                	add    %al,(%rax)
    11f1:	00 75 06             	add    %dh,0x6(%rbp)
    11f4:	00 00                	add    %al,(%rax)
    11f6:	0d 09 00 00 01       	or     $0x1000009,%eax
    11fb:	01 55 02             	add    %edx,0x2(%rbp)
    11fe:	7d 00                	jge    1200 <ippcpSetCpuFeatures@plt+0x1e8>
    1200:	01 01                	add    %eax,(%rcx)
    1202:	54                   	push   %rsp
    1203:	02 76 00             	add    0x0(%rsi),%dh
    1206:	00 03                	add    %al,(%rbx)
    1208:	99                   	cltd   
    1209:	40 00 00             	rex add %al,(%rax)
    120c:	00 00                	add    %al,(%rax)
    120e:	00 00                	add    %al,(%rax)
    1210:	32 06                	xor    (%rsi),%al
    1212:	00 00                	add    %al,(%rax)
    1214:	25 09 00 00 01       	and    $0x1000009,%eax
    1219:	01 55 02             	add    %edx,0x2(%rbp)
    121c:	76 00                	jbe    121e <ippcpSetCpuFeatures@plt+0x206>
    121e:	00 03                	add    %al,(%rbx)
    1220:	b2 40                	mov    $0x40,%dl
    1222:	00 00                	add    %al,(%rax)
    1224:	00 00                	add    %al,(%rax)
    1226:	00 00                	add    %al,(%rax)
    1228:	48 06                	rex.W (bad) 
    122a:	00 00                	add    %al,(%rax)
    122c:	4f 09 00             	rex.WRXB or %r8,(%r8)
    122f:	00 01                	add    %al,(%rcx)
    1231:	01 55 02             	add    %edx,0x2(%rbp)
    1234:	73 00                	jae    1236 <ippcpSetCpuFeatures@plt+0x21e>
    1236:	01 01                	add    %eax,(%rcx)
    1238:	54                   	push   %rsp
    1239:	02 76 00             	add    0x0(%rsi),%dh
    123c:	01 01                	add    %eax,(%rcx)
    123e:	51                   	push   %rcx
    123f:	02 7d 00             	add    0x0(%rbp),%bh
    1242:	01 01                	add    %eax,(%rcx)
    1244:	52                   	push   %rdx
    1245:	02 76 00             	add    0x0(%rsi),%dh
    1248:	00 03                	add    %al,(%rbx)
    124a:	c3                   	ret    
    124b:	40 00 00             	rex add %al,(%rax)
    124e:	00 00                	add    %al,(%rax)
    1250:	00 00                	add    %al,(%rax)
    1252:	1c 06                	sbb    $0x6,%al
    1254:	00 00                	add    %al,(%rax)
    1256:	67 09 00             	or     %eax,(%eax)
    1259:	00 01                	add    %al,(%rcx)
    125b:	01 55 02             	add    %edx,0x2(%rbp)
    125e:	73 00                	jae    1260 <ippcpSetCpuFeatures@plt+0x248>
    1260:	00 03                	add    %al,(%rbx)
    1262:	de 40 00             	fiadds 0x0(%rax)
    1265:	00 00                	add    %al,(%rax)
    1267:	00 00                	add    %al,(%rax)
    1269:	00 0a                	add    %cl,(%rdx)
    126b:	06                   	(bad)  
    126c:	00 00                	add    %al,(%rax)
    126e:	7f 09                	jg     1279 <ippcpSetCpuFeatures@plt+0x261>
    1270:	00 00                	add    %al,(%rax)
    1272:	01 01                	add    %eax,(%rcx)
    1274:	55                   	push   %rbp
    1275:	02 73 00             	add    0x0(%rbx),%dh
    1278:	00 10                	add    %dl,(%rax)
    127a:	eb 40                	jmp    12bc <ippcpSetCpuFeatures@plt+0x2a4>
    127c:	00 00                	add    %al,(%rax)
    127e:	00 00                	add    %al,(%rax)
    1280:	00 00                	add    %al,(%rax)
    1282:	f8                   	clc    
    1283:	05 00 00 01 01       	add    $0x1010000,%eax
    1288:	55                   	push   %rbp
    1289:	02 73 00             	add    0x0(%rbx),%dh
    128c:	00 00                	add    %al,(%rax)
    128e:	0b 1c 04             	or     (%rsp,%rax,1),%ebx
    1291:	00 00                	add    %al,(%rax)
    1293:	0b ab 00 00 00 20    	or     0x20000000(%rbx),%ebp
    1299:	87 0c 00             	xchg   %ecx,(%rax,%rax,1)
    129c:	00 0d 01 e4 02 00    	add    %cl,0x2e401(%rip)        # 2f6a3 <_end+0x4513>
    12a2:	00 f9                	add    %bh,%cl
    12a4:	40 00 00             	rex add %al,(%rax)
    12a7:	00 00                	add    %al,(%rax)
    12a9:	00 00                	add    %al,(%rax)
    12ab:	f3 00 00             	repz add %al,(%rax)
    12ae:	00 00                	add    %al,(%rax)
    12b0:	00 00                	add    %al,(%rax)
    12b2:	00 01                	add    %al,(%rcx)
    12b4:	9c                   	pushf  
    12b5:	3e 0b 00             	ds or  (%rax),%eax
    12b8:	00 16                	add    %dl,(%rsi)
    12ba:	70 6d                	jo     1329 <ippcpSetCpuFeatures@plt+0x311>
    12bc:	73 00                	jae    12be <ippcpSetCpuFeatures@plt+0x2a6>
    12be:	0d 01 44 a9 00       	or     $0xa94401,%eax
    12c3:	00 00                	add    %al,(%rax)
    12c5:	f5                   	cmc    
    12c6:	02 00                	add    (%rax),%al
    12c8:	00 e7                	add    %ah,%bh
    12ca:	02 00                	add    (%rax),%al
    12cc:	00 17                	add    %dl,(%rdi)
    12ce:	6d                   	insl   (%dx),%es:(%rdi)
    12cf:	73 00                	jae    12d1 <ippcpSetCpuFeatures@plt+0x2b9>
    12d1:	14 01                	adc    $0x1,%al
    12d3:	23 3e                	and    (%rsi),%edi
    12d5:	0b 00                	or     (%rax),%eax
    12d7:	00 38                	add    %bh,(%rax)
    12d9:	03 00                	add    (%rax),%eax
    12db:	00 30                	add    %dh,(%rax)
    12dd:	03 00                	add    (%rax),%eax
    12df:	00 18                	add    %bl,(%rax)
    12e1:	d8 0a                	fmuls  (%rdx)
    12e3:	00 00                	add    %al,(%rax)
    12e5:	15 01 22 ec 03       	adc    $0x3ec2201,%eax
    12ea:	00 00                	add    %al,(%rax)
    12ec:	02 91 40 09 05 0a    	add    0xa050940(%rcx),%dl
    12f2:	00 00                	add    %al,(%rax)
    12f4:	19 01                	sbb    %eax,(%rcx)
    12f6:	0f e4 02             	pmulhuw (%rdx),%mm0
    12f9:	00 00                	add    %al,(%rax)
    12fb:	5d                   	pop    %rbp
    12fc:	03 00                	add    (%rax),%eax
    12fe:	00 5b 03             	add    %bl,0x3(%rbx)
    1301:	00 00                	add    %al,(%rax)
    1303:	09 21                	or     %esp,(%rcx)
    1305:	0b 00                	or     (%rax),%eax
    1307:	00 1a                	add    %bl,(%rdx)
    1309:	01 0e                	add    %ecx,(%rsi)
    130b:	3f                   	(bad)  
    130c:	03 00                	add    (%rax),%eax
    130e:	00 68 03             	add    %ch,0x3(%rax)
    1311:	00 00                	add    %al,(%rax)
    1313:	66 03 00             	add    (%rax),%ax
    1316:	00 09                	add    %cl,(%rcx)
    1318:	49 0c 00             	rex.WB or $0x0,%al
    131b:	00 1b                	add    %bl,(%rbx)
    131d:	01 09                	add    %ecx,(%rcx)
    131f:	cf                   	iret   
    1320:	00 00                	add    %al,(%rax)
    1322:	00 72 03             	add    %dh,0x3(%rdx)
    1325:	00 00                	add    %al,(%rax)
    1327:	70 03                	jo     132c <ippcpSetCpuFeatures@plt+0x314>
    1329:	00 00                	add    %al,(%rax)
    132b:	09 55 0a             	or     %edx,0xa(%rbp)
    132e:	00 00                	add    %al,(%rax)
    1330:	1c 01                	sbb    $0x1,%al
    1332:	08 99 09 00 00 80    	or     %bl,-0x7ffffff7(%rcx)
    1338:	03 00                	add    (%rax),%eax
    133a:	00 7a 03             	add    %bh,0x3(%rdx)
    133d:	00 00                	add    %al,(%rax)
    133f:	1a 65 72             	sbb    0x72(%rbp),%ah
    1342:	72 00                	jb     1344 <ippcpSetCpuFeatures@plt+0x32c>
    1344:	3a 01                	cmp    (%rcx),%al
    1346:	d1 41 00             	roll   0x0(%rcx)
    1349:	00 00                	add    %al,(%rax)
    134b:	00 00                	add    %al,(%rax)
    134d:	00 03                	add    %al,(%rbx)
    134f:	24 41                	and    $0x41,%al
    1351:	00 00                	add    %al,(%rax)
    1353:	00 00                	add    %al,(%rax)
    1355:	00 00                	add    %al,(%rax)
    1357:	75 06                	jne    135f <ippcpSetCpuFeatures@plt+0x347>
    1359:	00 00                	add    %al,(%rax)
    135b:	71 0a                	jno    1367 <ippcpSetCpuFeatures@plt+0x34f>
    135d:	00 00                	add    %al,(%rax)
    135f:	01 01                	add    %eax,(%rcx)
    1361:	55                   	push   %rbp
    1362:	02 73 00             	add    0x0(%rbx),%dh
    1365:	01 01                	add    %eax,(%rcx)
    1367:	54                   	push   %rsp
    1368:	01 40 00             	add    %eax,0x0(%rax)
    136b:	03 46 41             	add    0x41(%rsi),%eax
    136e:	00 00                	add    %al,(%rax)
    1370:	00 00                	add    %al,(%rax)
    1372:	00 00                	add    %al,(%rax)
    1374:	48 06                	rex.W (bad) 
    1376:	00 00                	add    %al,(%rax)
    1378:	99                   	cltd   
    1379:	0a 00                	or     (%rax),%al
    137b:	00 01                	add    %al,(%rcx)
    137d:	01 55 02             	add    %edx,0x2(%rbp)
    1380:	91                   	xchg   %eax,%ecx
    1381:	40 01 01             	rex add %eax,(%rcx)
    1384:	54                   	push   %rsp
    1385:	01 40 01             	add    %eax,0x1(%rax)
    1388:	01 51 02             	add    %edx,0x2(%rcx)
    138b:	73 00                	jae    138d <ippcpSetCpuFeatures@plt+0x375>
    138d:	01 01                	add    %eax,(%rcx)
    138f:	52                   	push   %rdx
    1390:	01 40 00             	add    %eax,0x0(%rax)
    1393:	03 78 41             	add    0x41(%rax),%edi
    1396:	00 00                	add    %al,(%rax)
    1398:	00 00                	add    %al,(%rax)
    139a:	00 00                	add    %al,(%rax)
    139c:	75 06                	jne    13a4 <ippcpSetCpuFeatures@plt+0x38c>
    139e:	00 00                	add    %al,(%rax)
    13a0:	b7 0a                	mov    $0xa,%bh
    13a2:	00 00                	add    %al,(%rax)
    13a4:	01 01                	add    %eax,(%rcx)
    13a6:	55                   	push   %rbp
    13a7:	02 7d 00             	add    0x0(%rbp),%bh
    13aa:	01 01                	add    %eax,(%rcx)
    13ac:	54                   	push   %rsp
    13ad:	02 76 00             	add    0x0(%rsi),%dh
    13b0:	00 03                	add    %al,(%rbx)
    13b2:	8c 41 00             	mov    %es,0x0(%rcx)
    13b5:	00 00                	add    %al,(%rax)
    13b7:	00 00                	add    %al,(%rax)
    13b9:	00 32                	add    %dh,(%rdx)
    13bb:	06                   	(bad)  
    13bc:	00 00                	add    %al,(%rax)
    13be:	cf                   	iret   
    13bf:	0a 00                	or     (%rax),%al
    13c1:	00 01                	add    %al,(%rcx)
    13c3:	01 55 02             	add    %edx,0x2(%rbp)
    13c6:	76 00                	jbe    13c8 <ippcpSetCpuFeatures@plt+0x3b0>
    13c8:	00 03                	add    %al,(%rbx)
    13ca:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    13cb:	41 00 00             	add    %al,(%r8)
    13ce:	00 00                	add    %al,(%rax)
    13d0:	00 00                	add    %al,(%rax)
    13d2:	48 06                	rex.W (bad) 
    13d4:	00 00                	add    %al,(%rax)
    13d6:	f9                   	stc    
    13d7:	0a 00                	or     (%rax),%al
    13d9:	00 01                	add    %al,(%rcx)
    13db:	01 55 02             	add    %edx,0x2(%rbp)
    13de:	73 00                	jae    13e0 <ippcpSetCpuFeatures@plt+0x3c8>
    13e0:	01 01                	add    %eax,(%rcx)
    13e2:	54                   	push   %rsp
    13e3:	02 76 00             	add    0x0(%rsi),%dh
    13e6:	01 01                	add    %eax,(%rcx)
    13e8:	51                   	push   %rcx
    13e9:	02 7d 00             	add    0x0(%rbp),%bh
    13ec:	01 01                	add    %eax,(%rcx)
    13ee:	52                   	push   %rdx
    13ef:	02 76 00             	add    0x0(%rsi),%dh
    13f2:	00 03                	add    %al,(%rbx)
    13f4:	b6 41                	mov    $0x41,%dh
    13f6:	00 00                	add    %al,(%rax)
    13f8:	00 00                	add    %al,(%rax)
    13fa:	00 00                	add    %al,(%rax)
    13fc:	1c 06                	sbb    $0x6,%al
    13fe:	00 00                	add    %al,(%rax)
    1400:	11 0b                	adc    %ecx,(%rbx)
    1402:	00 00                	add    %al,(%rax)
    1404:	01 01                	add    %eax,(%rcx)
    1406:	55                   	push   %rbp
    1407:	02 73 00             	add    0x0(%rbx),%dh
    140a:	00 03                	add    %al,(%rbx)
    140c:	d1 41 00             	roll   0x0(%rcx)
    140f:	00 00                	add    %al,(%rax)
    1411:	00 00                	add    %al,(%rax)
    1413:	00 e6                	add    %ah,%dh
    1415:	05 00 00 29 0b       	add    $0xb290000,%eax
    141a:	00 00                	add    %al,(%rax)
    141c:	01 01                	add    %eax,(%rcx)
    141e:	55                   	push   %rbp
    141f:	02 73 00             	add    0x0(%rbx),%dh
    1422:	00 10                	add    %dl,(%rax)
    1424:	de 41 00             	fiadds 0x0(%rcx)
    1427:	00 00                	add    %al,(%rax)
    1429:	00 00                	add    %al,(%rax)
    142b:	00 f8                	add    %bh,%al
    142d:	05 00 00 01 01       	add    $0x1010000,%eax
    1432:	55                   	push   %rbp
    1433:	02 73 00             	add    0x0(%rbx),%dh
    1436:	00 00                	add    %al,(%rax)
    1438:	0b ec                	or     %esp,%ebp
    143a:	03 00                	add    (%rax),%eax
    143c:	00 1b                	add    %bl,(%rbx)
    143e:	31 0c 00             	xor    %ecx,(%rax,%rax,1)
    1441:	00 db                	add    %bl,%bl
    1443:	e4 02                	in     $0x2,%al
    1445:	00 00                	add    %al,(%rax)
    1447:	ec                   	in     (%dx),%al
    1448:	41 00 00             	add    %al,(%r8)
    144b:	00 00                	add    %al,(%rax)
    144d:	00 00                	add    %al,(%rax)
    144f:	f3 00 00             	repz add %al,(%rax)
    1452:	00 00                	add    %al,(%rax)
    1454:	00 00                	add    %al,(%rax)
    1456:	00 01                	add    %al,(%rcx)
    1458:	9c                   	pushf  
    1459:	db 0c 00             	fisttpl (%rax,%rax,1)
    145c:	00 12                	add    %dl,(%rdx)
    145e:	70 6d                	jo     14cd <ippcpSetCpuFeatures@plt+0x4b5>
    1460:	73 00                	jae    1462 <ippcpSetCpuFeatures@plt+0x44a>
    1462:	db 3d a9 00 00 00    	fstpt  0xa9(%rip)        # 1511 <ippcpSetCpuFeatures@plt+0x4f9>
    1468:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    1469:	03 00                	add    (%rax),%eax
    146b:	00 97 03 00 00 1c    	add    %dl,0x1c000003(%rdi)
    1471:	6d                   	insl   (%dx),%es:(%rdi)
    1472:	73 00                	jae    1474 <ippcpSetCpuFeatures@plt+0x45c>
    1474:	e2 1c                	loop   1492 <ippcpSetCpuFeatures@plt+0x47a>
    1476:	db 0c 00             	fisttpl (%rax,%rax,1)
    1479:	00 e8                	add    %ch,%al
    147b:	03 00                	add    (%rax),%eax
    147d:	00 e0                	add    %ah,%al
    147f:	03 00                	add    (%rax),%eax
    1481:	00 1d d8 0a 00 00    	add    %bl,0xad8(%rip)        # 1f5f <ippcpSetCpuFeatures@plt+0xf47>
    1487:	e3 1b                	jrcxz  14a4 <ippcpSetCpuFeatures@plt+0x48c>
    1489:	bc 03 00 00 02       	mov    $0x2000003,%esp
    148e:	91                   	xchg   %eax,%ecx
    148f:	40 05 05 0a 00 00    	rex add $0xa05,%eax
    1495:	e7 0f                	out    %eax,$0xf
    1497:	e4 02                	in     $0x2,%al
    1499:	00 00                	add    %al,(%rax)
    149b:	0d 04 00 00 0b       	or     $0xb000004,%eax
    14a0:	04 00                	add    $0x0,%al
    14a2:	00 05 21 0b 00 00    	add    %al,0xb21(%rip)        # 1fc9 <ippcpSetCpuFeatures@plt+0xfb1>
    14a8:	e8 0e 3f 03 00       	call   353bb <_end+0xa22b>
    14ad:	00 18                	add    %bl,(%rax)
    14af:	04 00                	add    $0x0,%al
    14b1:	00 16                	add    %dl,(%rsi)
    14b3:	04 00                	add    $0x0,%al
    14b5:	00 05 49 0c 00 00    	add    %al,0xc49(%rip)        # 2104 <ecall_add_password+0x53>
    14bb:	e9 09 cf 00 00       	jmp    e3c9 <dlmalloc+0xf39>
    14c0:	00 22                	add    %ah,(%rdx)
    14c2:	04 00                	add    $0x0,%al
    14c4:	00 20                	add    %ah,(%rax)
    14c6:	04 00                	add    $0x0,%al
    14c8:	00 05 55 0a 00 00    	add    %al,0xa55(%rip)        # 1f23 <ippcpSetCpuFeatures@plt+0xf0b>
    14ce:	ea                   	(bad)  
    14cf:	08 99 09 00 00 30    	or     %bl,0x30000009(%rcx)
    14d5:	04 00                	add    $0x0,%al
    14d7:	00 2a                	add    %ch,(%rdx)
    14d9:	04 00                	add    $0x0,%al
    14db:	00 1a                	add    %bl,(%rdx)
    14dd:	65 72 72             	gs jb  1552 <ippcpSetCpuFeatures@plt+0x53a>
    14e0:	00 08                	add    %cl,(%rax)
    14e2:	01 c4                	add    %eax,%esp
    14e4:	42 00 00             	rex.X add %al,(%rax)
    14e7:	00 00                	add    %al,(%rax)
    14e9:	00 00                	add    %al,(%rax)
    14eb:	03 17                	add    (%rdi),%edx
    14ed:	42 00 00             	rex.X add %al,(%rax)
    14f0:	00 00                	add    %al,(%rax)
    14f2:	00 00                	add    %al,(%rax)
    14f4:	75 06                	jne    14fc <ippcpSetCpuFeatures@plt+0x4e4>
    14f6:	00 00                	add    %al,(%rax)
    14f8:	0e                   	(bad)  
    14f9:	0c 00                	or     $0x0,%al
    14fb:	00 01                	add    %al,(%rcx)
    14fd:	01 55 02             	add    %edx,0x2(%rbp)
    1500:	73 00                	jae    1502 <ippcpSetCpuFeatures@plt+0x4ea>
    1502:	01 01                	add    %eax,(%rcx)
    1504:	54                   	push   %rsp
    1505:	01 40 00             	add    %eax,0x0(%rax)
    1508:	03 39                	add    (%rcx),%edi
    150a:	42 00 00             	rex.X add %al,(%rax)
    150d:	00 00                	add    %al,(%rax)
    150f:	00 00                	add    %al,(%rax)
    1511:	48 06                	rex.W (bad) 
    1513:	00 00                	add    %al,(%rax)
    1515:	36 0c 00             	ss or  $0x0,%al
    1518:	00 01                	add    %al,(%rcx)
    151a:	01 55 02             	add    %edx,0x2(%rbp)
    151d:	91                   	xchg   %eax,%ecx
    151e:	40 01 01             	rex add %eax,(%rcx)
    1521:	54                   	push   %rsp
    1522:	01 40 01             	add    %eax,0x1(%rax)
    1525:	01 51 02             	add    %edx,0x2(%rcx)
    1528:	73 00                	jae    152a <ippcpSetCpuFeatures@plt+0x512>
    152a:	01 01                	add    %eax,(%rcx)
    152c:	52                   	push   %rdx
    152d:	01 40 00             	add    %eax,0x0(%rax)
    1530:	03 6b 42             	add    0x42(%rbx),%ebp
    1533:	00 00                	add    %al,(%rax)
    1535:	00 00                	add    %al,(%rax)
    1537:	00 00                	add    %al,(%rax)
    1539:	75 06                	jne    1541 <ippcpSetCpuFeatures@plt+0x529>
    153b:	00 00                	add    %al,(%rax)
    153d:	54                   	push   %rsp
    153e:	0c 00                	or     $0x0,%al
    1540:	00 01                	add    %al,(%rcx)
    1542:	01 55 02             	add    %edx,0x2(%rbp)
    1545:	7d 00                	jge    1547 <ippcpSetCpuFeatures@plt+0x52f>
    1547:	01 01                	add    %eax,(%rcx)
    1549:	54                   	push   %rsp
    154a:	02 76 00             	add    0x0(%rsi),%dh
    154d:	00 03                	add    %al,(%rbx)
    154f:	7f 42                	jg     1593 <ippcpSetCpuFeatures@plt+0x57b>
    1551:	00 00                	add    %al,(%rax)
    1553:	00 00                	add    %al,(%rax)
    1555:	00 00                	add    %al,(%rax)
    1557:	32 06                	xor    (%rsi),%al
    1559:	00 00                	add    %al,(%rax)
    155b:	6c                   	insb   (%dx),%es:(%rdi)
    155c:	0c 00                	or     $0x0,%al
    155e:	00 01                	add    %al,(%rcx)
    1560:	01 55 02             	add    %edx,0x2(%rbp)
    1563:	76 00                	jbe    1565 <ippcpSetCpuFeatures@plt+0x54d>
    1565:	00 03                	add    %al,(%rbx)
    1567:	98                   	cwtl   
    1568:	42 00 00             	rex.X add %al,(%rax)
    156b:	00 00                	add    %al,(%rax)
    156d:	00 00                	add    %al,(%rax)
    156f:	48 06                	rex.W (bad) 
    1571:	00 00                	add    %al,(%rax)
    1573:	96                   	xchg   %eax,%esi
    1574:	0c 00                	or     $0x0,%al
    1576:	00 01                	add    %al,(%rcx)
    1578:	01 55 02             	add    %edx,0x2(%rbp)
    157b:	73 00                	jae    157d <ippcpSetCpuFeatures@plt+0x565>
    157d:	01 01                	add    %eax,(%rcx)
    157f:	54                   	push   %rsp
    1580:	02 76 00             	add    0x0(%rsi),%dh
    1583:	01 01                	add    %eax,(%rcx)
    1585:	51                   	push   %rcx
    1586:	02 7d 00             	add    0x0(%rbp),%bh
    1589:	01 01                	add    %eax,(%rcx)
    158b:	52                   	push   %rdx
    158c:	02 76 00             	add    0x0(%rsi),%dh
    158f:	00 03                	add    %al,(%rbx)
    1591:	a9 42 00 00 00       	test   $0x42,%eax
    1596:	00 00                	add    %al,(%rax)
    1598:	00 1c 06             	add    %bl,(%rsi,%rax,1)
    159b:	00 00                	add    %al,(%rax)
    159d:	ae                   	scas   %es:(%rdi),%al
    159e:	0c 00                	or     $0x0,%al
    15a0:	00 01                	add    %al,(%rcx)
    15a2:	01 55 02             	add    %edx,0x2(%rbp)
    15a5:	73 00                	jae    15a7 <ippcpSetCpuFeatures@plt+0x58f>
    15a7:	00 03                	add    %al,(%rbx)
    15a9:	c4 42 00 00          	(bad)
    15ad:	00 00                	add    %al,(%rax)
    15af:	00 00                	add    %al,(%rax)
    15b1:	d4                   	(bad)  
    15b2:	05 00 00 c6 0c       	add    $0xcc60000,%eax
    15b7:	00 00                	add    %al,(%rax)
    15b9:	01 01                	add    %eax,(%rcx)
    15bb:	55                   	push   %rbp
    15bc:	02 73 00             	add    0x0(%rbx),%dh
    15bf:	00 10                	add    %dl,(%rax)
    15c1:	d1 42 00             	roll   0x0(%rdx)
    15c4:	00 00                	add    %al,(%rax)
    15c6:	00 00                	add    %al,(%rax)
    15c8:	00 f8                	add    %bh,%al
    15ca:	05 00 00 01 01       	add    $0x1010000,%eax
    15cf:	55                   	push   %rbp
    15d0:	02 73 00             	add    0x0(%rbx),%dh
    15d3:	00 00                	add    %al,(%rax)
    15d5:	0b bc 03 00 00 1b 34 	or     0x341b0000(%rbx,%rax,1),%edi
    15dc:	0a 00                	or     (%rax),%al
    15de:	00 91 e4 02 00 00    	add    %dl,0x2e4(%rcx)
    15e4:	df 42 00             	filds  0x0(%rdx)
    15e7:	00 00                	add    %al,(%rax)
    15e9:	00 00                	add    %al,(%rax)
    15eb:	00 9e 01 00 00 00    	add    %bl,0x1(%rsi)
    15f1:	00 00                	add    %al,(%rax)
    15f3:	00 01                	add    %al,(%rcx)
    15f5:	9c                   	pushf  
    15f6:	4b 0f 00 00          	rex.WXB sldt (%r8)
    15fa:	12 70 6d             	adc    0x6d(%rax),%dh
    15fd:	73 00                	jae    15ff <ippcpSetCpuFeatures@plt+0x5e7>
    15ff:	91                   	xchg   %eax,%ecx
    1600:	46 a9 00 00 00 55    	rex.RX test $0x55000000,%eax
    1606:	04 00                	add    $0x0,%al
    1608:	00 47 04             	add    %al,0x4(%rdi)
    160b:	00 00                	add    %al,(%rax)
    160d:	1c 6d                	sbb    $0x6d,%al
    160f:	73 00                	jae    1611 <ippcpSetCpuFeatures@plt+0x5f9>
    1611:	98                   	cwtl   
    1612:	25 4b 0f 00 00       	and    $0xf4b,%eax
    1617:	98                   	cwtl   
    1618:	04 00                	add    $0x0,%al
    161a:	00 90 04 00 00 1d    	add    %dl,0x1d000004(%rax)
    1620:	d8 0a                	fmuls  (%rdx)
    1622:	00 00                	add    %al,(%rax)
    1624:	99                   	cltd   
    1625:	24 8c                	and    $0x8c,%al
    1627:	03 00                	add    (%rax),%eax
    1629:	00 03                	add    %al,(%rbx)
    162b:	91                   	xchg   %eax,%ecx
    162c:	b0 7f                	mov    $0x7f,%al
    162e:	05 05 0a 00 00       	add    $0xa05,%eax
    1633:	9d                   	popf   
    1634:	0f e4 02             	pmulhuw (%rdx),%mm0
    1637:	00 00                	add    %al,(%rax)
    1639:	c3                   	ret    
    163a:	04 00                	add    $0x0,%al
    163c:	00 bb 04 00 00 05    	add    %bh,0x5000004(%rbx)
    1642:	63 0c 00             	movsxd (%rax,%rax,1),%ecx
    1645:	00 9e 0e 3f 03 00    	add    %bl,0x33f0e(%rsi)
    164b:	00 e5                	add    %ah,%ch
    164d:	04 00                	add    $0x0,%al
    164f:	00 e3                	add    %ah,%bl
    1651:	04 00                	add    $0x0,%al
    1653:	00 05 f8 0a 00 00    	add    %al,0xaf8(%rip)        # 2151 <ecall_setup+0x3d>
    1659:	9f                   	lahf   
    165a:	09 cf                	or     %ecx,%edi
    165c:	00 00                	add    %al,(%rax)
    165e:	00 f3                	add    %dh,%bl
    1660:	04 00                	add    $0x0,%al
    1662:	00 ed                	add    %ch,%ch
    1664:	04 00                	add    $0x0,%al
    1666:	00 05 8a 09 00 00    	add    %al,0x98a(%rip)        # 1ff6 <ippcpSetCpuFeatures@plt+0xfde>
    166c:	a0 08 99 09 00 00 11 	movabs 0x5110000099908,%al
    1673:	05 00 
    1675:	00 09                	add    %cl,(%rcx)
    1677:	05 00 00 05 e2       	add    $0xe2050000,%eax
    167c:	09 00                	or     %eax,(%rax)
    167e:	00 a1 0e 3f 03 00    	add    %ah,0x33f0e(%rcx)
    1684:	00 31                	add    %dh,(%rcx)
    1686:	05 00 00 2f 05       	add    $0x52f0000,%eax
    168b:	00 00                	add    %al,(%rax)
    168d:	05 d5 0c 00 00       	add    $0xcd5,%eax
    1692:	a2 09 cf 00 00 00 43 	movabs %al,0x543000000cf09
    1699:	05 00 
    169b:	00 39                	add    %bh,(%rcx)
    169d:	05 00 00 05 b4       	add    $0xb4050000,%eax
    16a2:	0c 00                	or     $0x0,%al
    16a4:	00 a3 08 99 09 00    	add    %ah,0x99908(%rbx)
    16aa:	00 7b 05             	add    %bh,0x5(%rbx)
    16ad:	00 00                	add    %al,(%rax)
    16af:	67 05 00 00 21 65    	addr32 add $0x65210000,%eax
    16b5:	72 72                	jb     1729 <ippcpSetCpuFeatures@plt+0x711>
    16b7:	00 d5                	add    %dl,%ch
    16b9:	27                   	(bad)  
    16ba:	44 00 00             	add    %r8b,(%rax)
    16bd:	00 00                	add    %al,(%rax)
    16bf:	00 00                	add    %al,(%rax)
    16c1:	03 0c 43             	add    (%rbx,%rax,2),%ecx
    16c4:	00 00                	add    %al,(%rax)
    16c6:	00 00                	add    %al,(%rax)
    16c8:	00 00                	add    %al,(%rax)
    16ca:	75 06                	jne    16d2 <ippcpSetCpuFeatures@plt+0x6ba>
    16cc:	00 00                	add    %al,(%rax)
    16ce:	e5 0d                	in     $0xd,%eax
    16d0:	00 00                	add    %al,(%rax)
    16d2:	01 01                	add    %eax,(%rcx)
    16d4:	55                   	push   %rbp
    16d5:	02 73 00             	add    0x0(%rbx),%dh
    16d8:	01 01                	add    %eax,(%rcx)
    16da:	54                   	push   %rsp
    16db:	02 08                	add    (%rax),%cl
    16dd:	20 00                	and    %al,(%rax)
    16df:	03 2e                	add    (%rsi),%ebp
    16e1:	43 00 00             	rex.XB add %al,(%r8)
    16e4:	00 00                	add    %al,(%rax)
    16e6:	00 00                	add    %al,(%rax)
    16e8:	48 06                	rex.W (bad) 
    16ea:	00 00                	add    %al,(%rax)
    16ec:	10 0e                	adc    %cl,(%rsi)
    16ee:	00 00                	add    %al,(%rax)
    16f0:	01 01                	add    %eax,(%rcx)
    16f2:	55                   	push   %rbp
    16f3:	03 91 b0 7f 01 01    	add    0x1017fb0(%rcx),%edx
    16f9:	54                   	push   %rsp
    16fa:	02 08                	add    (%rax),%cl
    16fc:	20 01                	and    %al,(%rcx)
    16fe:	01 51 02             	add    %edx,0x2(%rcx)
    1701:	73 00                	jae    1703 <ippcpSetCpuFeatures@plt+0x6eb>
    1703:	01 01                	add    %eax,(%rcx)
    1705:	52                   	push   %rdx
    1706:	02 08                	add    (%rax),%cl
    1708:	20 00                	and    %al,(%rax)
    170a:	03 60 43             	add    0x43(%rax),%esp
    170d:	00 00                	add    %al,(%rax)
    170f:	00 00                	add    %al,(%rax)
    1711:	00 00                	add    %al,(%rax)
    1713:	75 06                	jne    171b <ippcpSetCpuFeatures@plt+0x703>
    1715:	00 00                	add    %al,(%rax)
    1717:	2e 0e                	cs (bad) 
    1719:	00 00                	add    %al,(%rax)
    171b:	01 01                	add    %eax,(%rcx)
    171d:	55                   	push   %rbp
    171e:	02 7e 00             	add    0x0(%rsi),%bh
    1721:	01 01                	add    %eax,(%rcx)
    1723:	54                   	push   %rsp
    1724:	02 76 00             	add    0x0(%rsi),%dh
    1727:	00 03                	add    %al,(%rbx)
    1729:	71 43                	jno    176e <ippcpSetCpuFeatures@plt+0x756>
    172b:	00 00                	add    %al,(%rax)
    172d:	00 00                	add    %al,(%rax)
    172f:	00 00                	add    %al,(%rax)
    1731:	75 06                	jne    1739 <ippcpSetCpuFeatures@plt+0x721>
    1733:	00 00                	add    %al,(%rax)
    1735:	4c 0e                	rex.WR (bad) 
    1737:	00 00                	add    %al,(%rax)
    1739:	01 01                	add    %eax,(%rcx)
    173b:	55                   	push   %rbp
    173c:	02 7d 00             	add    0x0(%rbp),%bh
    173f:	01 01                	add    %eax,(%rcx)
    1741:	54                   	push   %rsp
    1742:	02 7c 00 00          	add    0x0(%rax,%rax,1),%bh
    1746:	03 92 43 00 00 00    	add    0x43(%rdx),%edx
    174c:	00 00                	add    %al,(%rax)
    174e:	00 32                	add    %dh,(%rdx)
    1750:	06                   	(bad)  
    1751:	00 00                	add    %al,(%rax)
    1753:	64 0e                	fs (bad) 
    1755:	00 00                	add    %al,(%rax)
    1757:	01 01                	add    %eax,(%rcx)
    1759:	55                   	push   %rbp
    175a:	02 76 00             	add    0x0(%rsi),%dh
    175d:	00 03                	add    %al,(%rbx)
    175f:	af                   	scas   %es:(%rdi),%eax
    1760:	43 00 00             	rex.XB add %al,(%r8)
    1763:	00 00                	add    %al,(%rax)
    1765:	00 00                	add    %al,(%rax)
    1767:	48 06                	rex.W (bad) 
    1769:	00 00                	add    %al,(%rax)
    176b:	8e 0e                	mov    (%rsi),%cs
    176d:	00 00                	add    %al,(%rax)
    176f:	01 01                	add    %eax,(%rcx)
    1771:	55                   	push   %rbp
    1772:	02 73 00             	add    0x0(%rbx),%dh
    1775:	01 01                	add    %eax,(%rcx)
    1777:	54                   	push   %rsp
    1778:	02 76 00             	add    0x0(%rsi),%dh
    177b:	01 01                	add    %eax,(%rcx)
    177d:	51                   	push   %rcx
    177e:	02 7e 00             	add    0x0(%rsi),%bh
    1781:	01 01                	add    %eax,(%rcx)
    1783:	52                   	push   %rdx
    1784:	02 76 00             	add    0x0(%rsi),%dh
    1787:	00 03                	add    %al,(%rbx)
    1789:	c4 43 00 00          	(bad)
    178d:	00 00                	add    %al,(%rax)
    178f:	00 00                	add    %al,(%rax)
    1791:	1c 06                	sbb    $0x6,%al
    1793:	00 00                	add    %al,(%rax)
    1795:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
    1796:	0e                   	(bad)  
    1797:	00 00                	add    %al,(%rax)
    1799:	01 01                	add    %eax,(%rcx)
    179b:	55                   	push   %rbp
    179c:	02 73 00             	add    0x0(%rbx),%dh
    179f:	00 03                	add    %al,(%rbx)
    17a1:	e2 43                	loop   17e6 <ippcpSetCpuFeatures@plt+0x7ce>
    17a3:	00 00                	add    %al,(%rax)
    17a5:	00 00                	add    %al,(%rax)
    17a7:	00 00                	add    %al,(%rax)
    17a9:	32 06                	xor    (%rsi),%al
    17ab:	00 00                	add    %al,(%rax)
    17ad:	be 0e 00 00 01       	mov    $0x100000e,%esi
    17b2:	01 55 02             	add    %edx,0x2(%rbp)
    17b5:	7c 00                	jl     17b7 <ippcpSetCpuFeatures@plt+0x79f>
    17b7:	00 03                	add    %al,(%rbx)
    17b9:	fb                   	sti    
    17ba:	43 00 00             	rex.XB add %al,(%r8)
    17bd:	00 00                	add    %al,(%rax)
    17bf:	00 00                	add    %al,(%rax)
    17c1:	48 06                	rex.W (bad) 
    17c3:	00 00                	add    %al,(%rax)
    17c5:	e8 0e 00 00 01       	call   10017d8 <_end+0xfd6648>
    17ca:	01 55 02             	add    %edx,0x2(%rbp)
    17cd:	76 00                	jbe    17cf <ippcpSetCpuFeatures@plt+0x7b7>
    17cf:	01 01                	add    %eax,(%rcx)
    17d1:	54                   	push   %rsp
    17d2:	02 7c 00 01          	add    0x1(%rax,%rax,1),%bh
    17d6:	01 51 02             	add    %edx,0x2(%rcx)
    17d9:	7d 00                	jge    17db <ippcpSetCpuFeatures@plt+0x7c3>
    17db:	01 01                	add    %eax,(%rcx)
    17dd:	52                   	push   %rdx
    17de:	02 7c 00 00          	add    0x0(%rax,%rax,1),%bh
    17e2:	03 0d 44 00 00 00    	add    0x44(%rip),%ecx        # 182c <ippcpSetCpuFeatures@plt+0x814>
    17e8:	00 00                	add    %al,(%rax)
    17ea:	00 1c 06             	add    %bl,(%rsi,%rax,1)
    17ed:	00 00                	add    %al,(%rax)
    17ef:	00 0f                	add    %cl,(%rdi)
    17f1:	00 00                	add    %al,(%rax)
    17f3:	01 01                	add    %eax,(%rcx)
    17f5:	55                   	push   %rbp
    17f6:	02 76 00             	add    0x0(%rsi),%dh
    17f9:	00 03                	add    %al,(%rbx)
    17fb:	27                   	(bad)  
    17fc:	44 00 00             	add    %r8b,(%rax)
    17ff:	00 00                	add    %al,(%rax)
    1801:	00 00                	add    %al,(%rax)
    1803:	bd 05 00 00 1e       	mov    $0x1e000005,%ebp
    1808:	0f 00 00             	sldt   (%rax)
    180b:	01 01                	add    %eax,(%rcx)
    180d:	55                   	push   %rbp
    180e:	02 73 00             	add    0x0(%rbx),%dh
    1811:	01 01                	add    %eax,(%rcx)
    1813:	54                   	push   %rsp
    1814:	02 76 00             	add    0x0(%rsi),%dh
    1817:	00 03                	add    %al,(%rbx)
    1819:	41                   	rex.B
    181a:	44 00 00             	add    %r8b,(%rax)
    181d:	00 00                	add    %al,(%rax)
    181f:	00 00                	add    %al,(%rax)
    1821:	f8                   	clc    
    1822:	05 00 00 36 0f       	add    $0xf360000,%eax
    1827:	00 00                	add    %al,(%rax)
    1829:	01 01                	add    %eax,(%rcx)
    182b:	55                   	push   %rbp
    182c:	02 73 00             	add    0x0(%rbx),%dh
    182f:	00 10                	add    %dl,(%rax)
    1831:	4e                   	rex.WRX
    1832:	44 00 00             	add    %r8b,(%rax)
    1835:	00 00                	add    %al,(%rax)
    1837:	00 00                	add    %al,(%rax)
    1839:	f8                   	clc    
    183a:	05 00 00 01 01       	add    $0x1010000,%eax
    183f:	55                   	push   %rbp
    1840:	02 76 00             	add    0x0(%rsi),%dh
    1843:	00 00                	add    %al,(%rax)
    1845:	0b 8c 03 00 00 1b 0a 	or     0xa1b0000(%rbx,%rax,1),%ecx
    184c:	0b 00                	or     (%rax),%eax
    184e:	00 47 e4             	add    %al,-0x1c(%rdi)
    1851:	02 00                	add    (%rax),%al
    1853:	00 7d 44             	add    %bh,0x44(%rbp)
    1856:	00 00                	add    %al,(%rax)
    1858:	00 00                	add    %al,(%rax)
    185a:	00 00                	add    %al,(%rax)
    185c:	9e                   	sahf   
    185d:	01 00                	add    %eax,(%rax)
    185f:	00 00                	add    %al,(%rax)
    1861:	00 00                	add    %al,(%rax)
    1863:	00 01                	add    %al,(%rcx)
    1865:	9c                   	pushf  
    1866:	bb 11 00 00 12       	mov    $0x12000011,%ebx
    186b:	70 6d                	jo     18da <ippcpSetCpuFeatures@plt+0x8c2>
    186d:	73 00                	jae    186f <ippcpSetCpuFeatures@plt+0x857>
    186f:	47 3c a9             	rex.RXB cmp $0xa9,%al
    1872:	00 00                	add    %al,(%rax)
    1874:	00 d5                	add    %dl,%ch
    1876:	05 00 00 c7 05       	add    $0x5c70000,%eax
    187b:	00 00                	add    %al,(%rax)
    187d:	1c 6d                	sbb    $0x6d,%al
    187f:	73 00                	jae    1881 <ippcpSetCpuFeatures@plt+0x869>
    1881:	4e 1b bb 11 00 00 18 	rex.WRX sbb 0x18000011(%rbx),%r15
    1888:	06                   	(bad)  
    1889:	00 00                	add    %al,(%rax)
    188b:	10 06                	adc    %al,(%rsi)
    188d:	00 00                	add    %al,(%rax)
    188f:	1d d8 0a 00 00       	sbb    $0xad8,%eax
    1894:	4f 1a 44 03 00       	rex.WRXB sbb 0x0(%r11,%r8,1),%r8b
    1899:	00 03                	add    %al,(%rbx)
    189b:	91                   	xchg   %eax,%ecx
    189c:	b0 7f                	mov    $0x7f,%al
    189e:	05 05 0a 00 00       	add    $0xa05,%eax
    18a3:	53                   	push   %rbx
    18a4:	0f e4 02             	pmulhuw (%rdx),%mm0
    18a7:	00 00                	add    %al,(%rax)
    18a9:	43 06                	rex.XB (bad) 
    18ab:	00 00                	add    %al,(%rax)
    18ad:	3b 06                	cmp    (%rsi),%eax
    18af:	00 00                	add    %al,(%rax)
    18b1:	05 21 0b 00 00       	add    $0xb21,%eax
    18b6:	54                   	push   %rsp
    18b7:	0e                   	(bad)  
    18b8:	3f                   	(bad)  
    18b9:	03 00                	add    (%rax),%eax
    18bb:	00 65 06             	add    %ah,0x6(%rbp)
    18be:	00 00                	add    %al,(%rax)
    18c0:	63 06                	movsxd (%rsi),%eax
    18c2:	00 00                	add    %al,(%rax)
    18c4:	05 49 0c 00 00       	add    $0xc49,%eax
    18c9:	55                   	push   %rbp
    18ca:	09 cf                	or     %ecx,%edi
    18cc:	00 00                	add    %al,(%rax)
    18ce:	00 73 06             	add    %dh,0x6(%rbx)
    18d1:	00 00                	add    %al,(%rax)
    18d3:	6d                   	insl   (%dx),%es:(%rdi)
    18d4:	06                   	(bad)  
    18d5:	00 00                	add    %al,(%rax)
    18d7:	05 55 0a 00 00       	add    $0xa55,%eax
    18dc:	56                   	push   %rsi
    18dd:	08 99 09 00 00 91    	or     %bl,-0x6efffff7(%rcx)
    18e3:	06                   	(bad)  
    18e4:	00 00                	add    %al,(%rax)
    18e6:	89 06                	mov    %eax,(%rsi)
    18e8:	00 00                	add    %al,(%rax)
    18ea:	05 75 0c 00 00       	add    $0xc75,%eax
    18ef:	57                   	push   %rdi
    18f0:	0e                   	(bad)  
    18f1:	3f                   	(bad)  
    18f2:	03 00                	add    (%rax),%eax
    18f4:	00 b1 06 00 00 af    	add    %dh,-0x50fffffa(%rcx)
    18fa:	06                   	(bad)  
    18fb:	00 00                	add    %al,(%rax)
    18fd:	05 22 0a 00 00       	add    $0xa22,%eax
    1902:	58                   	pop    %rax
    1903:	09 cf                	or     %ecx,%edi
    1905:	00 00                	add    %al,(%rax)
    1907:	00 c3                	add    %al,%bl
    1909:	06                   	(bad)  
    190a:	00 00                	add    %al,(%rax)
    190c:	b9 06 00 00 05       	mov    $0x5000006,%ecx
    1911:	15 0d 00 00 59       	adc    $0x5900000d,%eax
    1916:	08 99 09 00 00 fb    	or     %bl,-0x4fffff7(%rcx)
    191c:	06                   	(bad)  
    191d:	00 00                	add    %al,(%rax)
    191f:	e7 06                	out    %eax,$0x6
    1921:	00 00                	add    %al,(%rax)
    1923:	21 65 72             	and    %esp,0x72(%rbp)
    1926:	72 00                	jb     1928 <ippcpSetCpuFeatures@plt+0x910>
    1928:	8b c5                	mov    %ebp,%eax
    192a:	45 00 00             	add    %r8b,(%r8)
    192d:	00 00                	add    %al,(%rax)
    192f:	00 00                	add    %al,(%rax)
    1931:	03 aa 44 00 00 00    	add    0x44(%rdx),%ebp
    1937:	00 00                	add    %al,(%rax)
    1939:	00 75 06             	add    %dh,0x6(%rbp)
    193c:	00 00                	add    %al,(%rax)
    193e:	55                   	push   %rbp
    193f:	10 00                	adc    %al,(%rax)
    1941:	00 01                	add    %al,(%rcx)
    1943:	01 55 02             	add    %edx,0x2(%rbp)
    1946:	73 00                	jae    1948 <ippcpSetCpuFeatures@plt+0x930>
    1948:	01 01                	add    %eax,(%rcx)
    194a:	54                   	push   %rsp
    194b:	02 08                	add    (%rax),%cl
    194d:	20 00                	and    %al,(%rax)
    194f:	03 cc                	add    %esp,%ecx
    1951:	44 00 00             	add    %r8b,(%rax)
    1954:	00 00                	add    %al,(%rax)
    1956:	00 00                	add    %al,(%rax)
    1958:	48 06                	rex.W (bad) 
    195a:	00 00                	add    %al,(%rax)
    195c:	80 10 00             	adcb   $0x0,(%rax)
    195f:	00 01                	add    %al,(%rcx)
    1961:	01 55 03             	add    %edx,0x3(%rbp)
    1964:	91                   	xchg   %eax,%ecx
    1965:	b0 7f                	mov    $0x7f,%al
    1967:	01 01                	add    %eax,(%rcx)
    1969:	54                   	push   %rsp
    196a:	02 08                	add    (%rax),%cl
    196c:	20 01                	and    %al,(%rcx)
    196e:	01 51 02             	add    %edx,0x2(%rcx)
    1971:	73 00                	jae    1973 <ippcpSetCpuFeatures@plt+0x95b>
    1973:	01 01                	add    %eax,(%rcx)
    1975:	52                   	push   %rdx
    1976:	02 08                	add    (%rax),%cl
    1978:	20 00                	and    %al,(%rax)
    197a:	03 fe                	add    %esi,%edi
    197c:	44 00 00             	add    %r8b,(%rax)
    197f:	00 00                	add    %al,(%rax)
    1981:	00 00                	add    %al,(%rax)
    1983:	75 06                	jne    198b <ippcpSetCpuFeatures@plt+0x973>
    1985:	00 00                	add    %al,(%rax)
    1987:	9e                   	sahf   
    1988:	10 00                	adc    %al,(%rax)
    198a:	00 01                	add    %al,(%rcx)
    198c:	01 55 02             	add    %edx,0x2(%rbp)
    198f:	7e 00                	jle    1991 <ippcpSetCpuFeatures@plt+0x979>
    1991:	01 01                	add    %eax,(%rcx)
    1993:	54                   	push   %rsp
    1994:	02 76 00             	add    0x0(%rsi),%dh
    1997:	00 03                	add    %al,(%rbx)
    1999:	0f 45 00             	cmovne (%rax),%eax
    199c:	00 00                	add    %al,(%rax)
    199e:	00 00                	add    %al,(%rax)
    19a0:	00 75 06             	add    %dh,0x6(%rbp)
    19a3:	00 00                	add    %al,(%rax)
    19a5:	bc 10 00 00 01       	mov    $0x1000010,%esp
    19aa:	01 55 02             	add    %edx,0x2(%rbp)
    19ad:	7d 00                	jge    19af <ippcpSetCpuFeatures@plt+0x997>
    19af:	01 01                	add    %eax,(%rcx)
    19b1:	54                   	push   %rsp
    19b2:	02 7c 00 00          	add    0x0(%rax,%rax,1),%bh
    19b6:	03 30                	add    (%rax),%esi
    19b8:	45 00 00             	add    %r8b,(%r8)
    19bb:	00 00                	add    %al,(%rax)
    19bd:	00 00                	add    %al,(%rax)
    19bf:	32 06                	xor    (%rsi),%al
    19c1:	00 00                	add    %al,(%rax)
    19c3:	d4                   	(bad)  
    19c4:	10 00                	adc    %al,(%rax)
    19c6:	00 01                	add    %al,(%rcx)
    19c8:	01 55 02             	add    %edx,0x2(%rbp)
    19cb:	76 00                	jbe    19cd <ippcpSetCpuFeatures@plt+0x9b5>
    19cd:	00 03                	add    %al,(%rbx)
    19cf:	4d                   	rex.WRB
    19d0:	45 00 00             	add    %r8b,(%r8)
    19d3:	00 00                	add    %al,(%rax)
    19d5:	00 00                	add    %al,(%rax)
    19d7:	48 06                	rex.W (bad) 
    19d9:	00 00                	add    %al,(%rax)
    19db:	fe                   	(bad)  
    19dc:	10 00                	adc    %al,(%rax)
    19de:	00 01                	add    %al,(%rcx)
    19e0:	01 55 02             	add    %edx,0x2(%rbp)
    19e3:	73 00                	jae    19e5 <ippcpSetCpuFeatures@plt+0x9cd>
    19e5:	01 01                	add    %eax,(%rcx)
    19e7:	54                   	push   %rsp
    19e8:	02 76 00             	add    0x0(%rsi),%dh
    19eb:	01 01                	add    %eax,(%rcx)
    19ed:	51                   	push   %rcx
    19ee:	02 7e 00             	add    0x0(%rsi),%bh
    19f1:	01 01                	add    %eax,(%rcx)
    19f3:	52                   	push   %rdx
    19f4:	02 76 00             	add    0x0(%rsi),%dh
    19f7:	00 03                	add    %al,(%rbx)
    19f9:	62                   	(bad)  
    19fa:	45 00 00             	add    %r8b,(%r8)
    19fd:	00 00                	add    %al,(%rax)
    19ff:	00 00                	add    %al,(%rax)
    1a01:	1c 06                	sbb    $0x6,%al
    1a03:	00 00                	add    %al,(%rax)
    1a05:	16                   	(bad)  
    1a06:	11 00                	adc    %eax,(%rax)
    1a08:	00 01                	add    %al,(%rcx)
    1a0a:	01 55 02             	add    %edx,0x2(%rbp)
    1a0d:	73 00                	jae    1a0f <ippcpSetCpuFeatures@plt+0x9f7>
    1a0f:	00 03                	add    %al,(%rbx)
    1a11:	80 45 00 00          	addb   $0x0,0x0(%rbp)
    1a15:	00 00                	add    %al,(%rax)
    1a17:	00 00                	add    %al,(%rax)
    1a19:	32 06                	xor    (%rsi),%al
    1a1b:	00 00                	add    %al,(%rax)
    1a1d:	2e 11 00             	cs adc %eax,(%rax)
    1a20:	00 01                	add    %al,(%rcx)
    1a22:	01 55 02             	add    %edx,0x2(%rbp)
    1a25:	7c 00                	jl     1a27 <ippcpSetCpuFeatures@plt+0xa0f>
    1a27:	00 03                	add    %al,(%rbx)
    1a29:	99                   	cltd   
    1a2a:	45 00 00             	add    %r8b,(%r8)
    1a2d:	00 00                	add    %al,(%rax)
    1a2f:	00 00                	add    %al,(%rax)
    1a31:	48 06                	rex.W (bad) 
    1a33:	00 00                	add    %al,(%rax)
    1a35:	58                   	pop    %rax
    1a36:	11 00                	adc    %eax,(%rax)
    1a38:	00 01                	add    %al,(%rcx)
    1a3a:	01 55 02             	add    %edx,0x2(%rbp)
    1a3d:	76 00                	jbe    1a3f <ippcpSetCpuFeatures@plt+0xa27>
    1a3f:	01 01                	add    %eax,(%rcx)
    1a41:	54                   	push   %rsp
    1a42:	02 7c 00 01          	add    0x1(%rax,%rax,1),%bh
    1a46:	01 51 02             	add    %edx,0x2(%rcx)
    1a49:	7d 00                	jge    1a4b <ippcpSetCpuFeatures@plt+0xa33>
    1a4b:	01 01                	add    %eax,(%rcx)
    1a4d:	52                   	push   %rdx
    1a4e:	02 7c 00 00          	add    0x0(%rax,%rax,1),%bh
    1a52:	03 ab 45 00 00 00    	add    0x45(%rbx),%ebp
    1a58:	00 00                	add    %al,(%rax)
    1a5a:	00 1c 06             	add    %bl,(%rsi,%rax,1)
    1a5d:	00 00                	add    %al,(%rax)
    1a5f:	70 11                	jo     1a72 <ippcpSetCpuFeatures@plt+0xa5a>
    1a61:	00 00                	add    %al,(%rax)
    1a63:	01 01                	add    %eax,(%rcx)
    1a65:	55                   	push   %rbp
    1a66:	02 76 00             	add    0x0(%rsi),%dh
    1a69:	00 03                	add    %al,(%rbx)
    1a6b:	c5 45 00             	(bad)
    1a6e:	00 00                	add    %al,(%rax)
    1a70:	00 00                	add    %al,(%rax)
    1a72:	00 a6 05 00 00 8e    	add    %ah,-0x71fffffb(%rsi)
    1a78:	11 00                	adc    %eax,(%rax)
    1a7a:	00 01                	add    %al,(%rcx)
    1a7c:	01 55 02             	add    %edx,0x2(%rbp)
    1a7f:	73 00                	jae    1a81 <ippcpSetCpuFeatures@plt+0xa69>
    1a81:	01 01                	add    %eax,(%rcx)
    1a83:	54                   	push   %rsp
    1a84:	02 76 00             	add    0x0(%rsi),%dh
    1a87:	00 03                	add    %al,(%rbx)
    1a89:	df 45 00             	filds  0x0(%rbp)
    1a8c:	00 00                	add    %al,(%rax)
    1a8e:	00 00                	add    %al,(%rax)
    1a90:	00 f8                	add    %bh,%al
    1a92:	05 00 00 a6 11       	add    $0x11a60000,%eax
    1a97:	00 00                	add    %al,(%rax)
    1a99:	01 01                	add    %eax,(%rcx)
    1a9b:	55                   	push   %rbp
    1a9c:	02 73 00             	add    0x0(%rbx),%dh
    1a9f:	00 10                	add    %dl,(%rax)
    1aa1:	ec                   	in     (%dx),%al
    1aa2:	45 00 00             	add    %r8b,(%r8)
    1aa5:	00 00                	add    %al,(%rax)
    1aa7:	00 00                	add    %al,(%rax)
    1aa9:	f8                   	clc    
    1aaa:	05 00 00 01 01       	add    $0x1010000,%eax
    1aaf:	55                   	push   %rbp
    1ab0:	02 76 00             	add    0x0(%rsi),%dh
    1ab3:	00 00                	add    %al,(%rax)
    1ab5:	0b 44 03 00          	or     0x0(%rbx,%rax,1),%eax
    1ab9:	00 29                	add    %ch,(%rcx)
    1abb:	c5 0c 00             	(bad)
    1abe:	00 01                	add    %al,(%rcx)
    1ac0:	3f                   	(bad)  
    1ac1:	1f                   	(bad)  
    1ac2:	e4 02                	in     $0x2,%al
    1ac4:	00 00                	add    %al,(%rax)
    1ac6:	1b 46 00             	sbb    0x0(%rsi),%eax
    1ac9:	00 00                	add    %al,(%rax)
    1acb:	00 00                	add    %al,(%rax)
    1acd:	00 19                	add    %bl,(%rcx)
    1acf:	00 00                	add    %al,(%rax)
    1ad1:	00 00                	add    %al,(%rax)
    1ad3:	00 00                	add    %al,(%rax)
    1ad5:	00 01                	add    %al,(%rcx)
    1ad7:	9c                   	pushf  
    1ad8:	12 70 6d             	adc    0x6d(%rax),%dh
    1adb:	73 00                	jae    1add <ippcpSetCpuFeatures@plt+0xac5>
    1add:	3f                   	(bad)  
    1ade:	35 a9 00 00 00       	xor    $0xa9,%eax
    1ae3:	4d 07                	rex.WRB (bad) 
    1ae5:	00 00                	add    %al,(%rax)
    1ae7:	47 07                	rex.RXB (bad) 
    1ae9:	00 00                	add    %al,(%rax)
    1aeb:	2a 05 0a 00 00 01    	sub    0x100000a(%rip),%al        # 1001afb <_end+0xfd696b>
    1af1:	41 0f e4 02          	pmulhuw (%r10),%mm0
    1af5:	00 00                	add    %al,(%rax)
    1af7:	00 19                	add    %bl,(%rcx)
    1af9:	2a 46 00             	sub    0x0(%rsi),%al
    1afc:	00 00                	add    %al,(%rax)
    1afe:	00 00                	add    %al,(%rax)
    1b00:	00 9e 05 00 00 00    	add    %bl,0x5(%rsi)
	...

Disassembly of section .debug_abbrev:

0000000000000000 <.debug_abbrev>:
   0:	01 28                	add    %ebp,(%rax)
   2:	00 03                	add    %al,(%rbx)
   4:	0e                   	(bad)  
   5:	1c 05                	sbb    $0x5,%al
   7:	00 00                	add    %al,(%rax)
   9:	02 49 00             	add    0x0(%rcx),%cl
   c:	02 18                	add    (%rax),%bl
   e:	7e 18                	jle    28 <__ImageBase+0x28>
  10:	00 00                	add    %al,(%rax)
  12:	03 48 01             	add    0x1(%rax),%ecx
  15:	7d 01                	jge    18 <__ImageBase+0x18>
  17:	7f 13                	jg     2c <__ImageBase+0x2c>
  19:	01 13                	add    %edx,(%rbx)
  1b:	00 00                	add    %al,(%rax)
  1d:	04 24                	add    $0x24,%al
  1f:	00 0b                	add    %cl,(%rbx)
  21:	0b 3e                	or     (%rsi),%edi
  23:	0b 03                	or     (%rbx),%eax
  25:	0e                   	(bad)  
  26:	00 00                	add    %al,(%rax)
  28:	05 05 00 49 13       	add    $0x13490005,%eax
  2d:	00 00                	add    %al,(%rax)
  2f:	06                   	(bad)  
  30:	28 00                	sub    %al,(%rax)
  32:	03 0e                	add    (%rsi),%ecx
  34:	1c 0b                	sbb    $0xb,%al
  36:	00 00                	add    %al,(%rax)
  38:	07                   	(bad)  
  39:	05 00 31 13 02       	add    $0x2133100,%eax
  3e:	17                   	(bad)  
  3f:	b7 42                	mov    $0x42,%bh
  41:	17                   	(bad)  
  42:	00 00                	add    %al,(%rax)
  44:	08 2e                	or     %ch,(%rsi)
  46:	01 3f                	add    %edi,(%rdi)
  48:	19 03                	sbb    %eax,(%rbx)
  4a:	0e                   	(bad)  
  4b:	3a 21                	cmp    (%rcx),%ah
  4d:	01 3b                	add    %edi,(%rbx)
  4f:	0b 39                	or     (%rcx),%edi
  51:	21 06                	and    %eax,(%rsi)
  53:	27                   	(bad)  
  54:	19 11                	sbb    %edx,(%rcx)
  56:	01 12                	add    %edx,(%rdx)
  58:	07                   	(bad)  
  59:	40 18 7a 19          	sbb    %dil,0x19(%rdx)
  5d:	01 13                	add    %edx,(%rbx)
  5f:	00 00                	add    %al,(%rax)
  61:	09 05 00 03 0e 3a    	or     %eax,0x3a0e0300(%rip)        # 3a0e0367 <_end+0x3a0b51d7>
  67:	21 01                	and    %eax,(%rcx)
  69:	3b 0b                	cmp    (%rbx),%ecx
  6b:	39 0b                	cmp    %ecx,(%rbx)
  6d:	49 13 02             	adc    (%r10),%rax
  70:	17                   	(bad)  
  71:	b7 42                	mov    $0x42,%bh
  73:	17                   	(bad)  
  74:	00 00                	add    %al,(%rax)
  76:	0a 48 01             	or     0x1(%rax),%cl
  79:	7d 01                	jge    7c <__ImageBase+0x7c>
  7b:	82                   	(bad)  
  7c:	01 19                	add    %ebx,(%rcx)
  7e:	7f 13                	jg     93 <__ImageBase+0x93>
  80:	00 00                	add    %al,(%rax)
  82:	0b 2e                	or     (%rsi),%ebp
  84:	01 3f                	add    %edi,(%rdi)
  86:	19 03                	sbb    %eax,(%rbx)
  88:	0e                   	(bad)  
  89:	3a 0b                	cmp    (%rbx),%cl
  8b:	3b 0b                	cmp    (%rbx),%ecx
  8d:	39 0b                	cmp    %ecx,(%rbx)
  8f:	27                   	(bad)  
  90:	19 49 13             	sbb    %ecx,0x13(%rcx)
  93:	3c 19                	cmp    $0x19,%al
  95:	01 13                	add    %edx,(%rbx)
  97:	00 00                	add    %al,(%rax)
  99:	0c 16                	or     $0x16,%al
  9b:	00 03                	add    %al,(%rbx)
  9d:	0e                   	(bad)  
  9e:	3a 0b                	cmp    (%rbx),%cl
  a0:	3b 0b                	cmp    (%rbx),%ecx
  a2:	39 0b                	cmp    %ecx,(%rbx)
  a4:	49 13 00             	adc    (%r8),%rax
  a7:	00 0d 21 00 49 13    	add    %cl,0x13490021(%rip)        # 134900ce <_end+0x13464f3e>
  ad:	2f                   	(bad)  
  ae:	0b 00                	or     (%rax),%eax
  b0:	00 0e                	add    %cl,(%rsi)
  b2:	34 00                	xor    $0x0,%al
  b4:	03 0e                	add    (%rsi),%ecx
  b6:	3a 21                	cmp    (%rcx),%ah
  b8:	01 3b                	add    %edi,(%rbx)
  ba:	0b 39                	or     (%rcx),%edi
  bc:	0b 49 13             	or     0x13(%rcx),%ecx
  bf:	3f                   	(bad)  
  c0:	19 02                	sbb    %eax,(%rdx)
  c2:	18 00                	sbb    %al,(%rax)
  c4:	00 0f                	add    %cl,(%rdi)
  c6:	05 00 03 0e 3a       	add    $0x3a0e0300,%eax
  cb:	21 01                	and    %eax,(%rcx)
  cd:	3b 0b                	cmp    (%rbx),%ecx
  cf:	39 0b                	cmp    %ecx,(%rbx)
  d1:	49 13 00             	adc    (%r8),%rax
  d4:	00 10                	add    %dl,(%rax)
  d6:	01 01                	add    %eax,(%rcx)
  d8:	49 13 01             	adc    (%r9),%rax
  db:	13 00                	adc    (%rax),%eax
  dd:	00 11                	add    %dl,(%rcx)
  df:	0f 00 0b             	str    (%rbx)
  e2:	21 08                	and    %ecx,(%rax)
  e4:	49 13 00             	adc    (%r8),%rax
  e7:	00 12                	add    %dl,(%rdx)
  e9:	0b 01                	or     (%rcx),%eax
  eb:	11 01                	adc    %eax,(%rcx)
  ed:	12 07                	adc    (%rdi),%al
  ef:	01 13                	add    %edx,(%rbx)
  f1:	00 00                	add    %al,(%rax)
  f3:	13 34 00             	adc    (%rax,%rax,1),%esi
  f6:	03 08                	add    (%rax),%ecx
  f8:	3a 21                	cmp    (%rcx),%ah
  fa:	01 3b                	add    %edi,(%rbx)
  fc:	0b 39                	or     (%rcx),%edi
  fe:	21 0e                	and    %ecx,(%rsi)
 100:	49 13 02             	adc    (%r10),%rax
 103:	17                   	(bad)  
 104:	b7 42                	mov    $0x42,%bh
 106:	17                   	(bad)  
 107:	00 00                	add    %al,(%rax)
 109:	14 48                	adc    $0x48,%al
 10b:	00 7d 01             	add    %bh,0x1(%rbp)
 10e:	82                   	(bad)  
 10f:	01 19                	add    %ebx,(%rcx)
 111:	7f 13                	jg     126 <__ImageBase+0x126>
 113:	00 00                	add    %al,(%rax)
 115:	15 48 01 7d 01       	adc    $0x17d0148,%eax
 11a:	7f 13                	jg     12f <__ImageBase+0x12f>
 11c:	00 00                	add    %al,(%rax)
 11e:	16                   	(bad)  
 11f:	2e 01 3f             	cs add %edi,(%rdi)
 122:	19 03                	sbb    %eax,(%rbx)
 124:	0e                   	(bad)  
 125:	3a 21                	cmp    (%rcx),%ah
 127:	01 3b                	add    %edi,(%rbx)
 129:	0b 39                	or     (%rcx),%edi
 12b:	21 06                	and    %eax,(%rsi)
 12d:	27                   	(bad)  
 12e:	19 20                	sbb    %esp,(%rax)
 130:	21 01                	and    %eax,(%rcx)
 132:	01 13                	add    %edx,(%rbx)
 134:	00 00                	add    %al,(%rax)
 136:	17                   	(bad)  
 137:	11 01                	adc    %eax,(%rcx)
 139:	25 0e 13 0b 03       	and    $0x30b130e,%eax
 13e:	1f                   	(bad)  
 13f:	1b 1f                	sbb    (%rdi),%ebx
 141:	11 01                	adc    %eax,(%rcx)
 143:	12 07                	adc    (%rdi),%al
 145:	10 17                	adc    %dl,(%rdi)
 147:	00 00                	add    %al,(%rax)
 149:	18 24 00             	sbb    %ah,(%rax,%rax,1)
 14c:	0b 0b                	or     (%rbx),%ecx
 14e:	3e 0b 03             	ds or  (%rbx),%eax
 151:	08 00                	or     %al,(%rax)
 153:	00 19                	add    %bl,(%rcx)
 155:	0f 00 0b             	str    (%rbx)
 158:	0b 00                	or     (%rax),%eax
 15a:	00 1a                	add    %bl,(%rdx)
 15c:	26 00 49 13          	es add %cl,0x13(%rcx)
 160:	00 00                	add    %al,(%rax)
 162:	1b 04 01             	sbb    (%rcx,%rax,1),%eax
 165:	03 0e                	add    (%rsi),%ecx
 167:	3e 0b 0b             	ds or  (%rbx),%ecx
 16a:	0b 49 13             	or     0x13(%rcx),%ecx
 16d:	3a 0b                	cmp    (%rbx),%cl
 16f:	3b 0b                	cmp    (%rbx),%ecx
 171:	39 0b                	cmp    %ecx,(%rbx)
 173:	01 13                	add    %edx,(%rbx)
 175:	00 00                	add    %al,(%rax)
 177:	1c 34                	sbb    $0x34,%al
 179:	00 03                	add    %al,(%rbx)
 17b:	0e                   	(bad)  
 17c:	3a 0b                	cmp    (%rbx),%cl
 17e:	3b 0b                	cmp    (%rbx),%ecx
 180:	39 0b                	cmp    %ecx,(%rbx)
 182:	49 13 02             	adc    (%r10),%rax
 185:	18 00                	sbb    %al,(%rax)
 187:	00 1d 05 00 03 08    	add    %bl,0x8030005(%rip)        # 8030192 <_end+0x8005002>
 18d:	3a 0b                	cmp    (%rbx),%cl
 18f:	3b 0b                	cmp    (%rbx),%ecx
 191:	39 0b                	cmp    %ecx,(%rbx)
 193:	49 13 02             	adc    (%r10),%rax
 196:	17                   	(bad)  
 197:	b7 42                	mov    $0x42,%bh
 199:	17                   	(bad)  
 19a:	00 00                	add    %al,(%rax)
 19c:	1e                   	(bad)  
 19d:	2e 01 31             	cs add %esi,(%rcx)
 1a0:	13 11                	adc    (%rcx),%edx
 1a2:	01 12                	add    %edx,(%rdx)
 1a4:	07                   	(bad)  
 1a5:	40 18 7a 19          	sbb    %dil,0x19(%rdx)
 1a9:	01 13                	add    %edx,(%rbx)
 1ab:	00 00                	add    %al,(%rax)
 1ad:	1f                   	(bad)  
 1ae:	1d 01 31 13 52       	sbb    $0x52133101,%eax
 1b3:	01 b8 42 0b 11 01    	add    %edi,0x1110b42(%rax)
 1b9:	12 07                	adc    (%rdi),%al
 1bb:	58                   	pop    %rax
 1bc:	0b 59 0b             	or     0xb(%rcx),%ebx
 1bf:	57                   	push   %rdi
 1c0:	0b 01                	or     (%rcx),%eax
 1c2:	13 00                	adc    (%rax),%eax
 1c4:	00 20                	add    %ah,(%rax)
 1c6:	2e 01 31             	cs add %esi,(%rcx)
 1c9:	13 11                	adc    (%rcx),%edx
 1cb:	01 12                	add    %edx,(%rdx)
 1cd:	07                   	(bad)  
 1ce:	40 18 7a 19          	sbb    %dil,0x19(%rdx)
 1d2:	00 00                	add    %al,(%rax)
 1d4:	21 1d 01 31 13 52    	and    %ebx,0x52133101(%rip)        # 521332db <_end+0x5210814b>
 1da:	01 b8 42 0b 55 17    	add    %edi,0x17550b42(%rax)
 1e0:	58                   	pop    %rax
 1e1:	0b 59 0b             	or     0xb(%rcx),%ebx
 1e4:	57                   	push   %rdi
 1e5:	0b 01                	or     (%rcx),%eax
 1e7:	13 00                	adc    (%rax),%eax
 1e9:	00 00                	add    %al,(%rax)
 1eb:	01 11                	add    %edx,(%rcx)
 1ed:	00 10                	add    %dl,(%rax)
 1ef:	17                   	(bad)  
 1f0:	11 01                	adc    %eax,(%rcx)
 1f2:	12 0f                	adc    (%rdi),%cl
 1f4:	03 0e                	add    (%rsi),%ecx
 1f6:	1b 0e                	sbb    (%rsi),%ecx
 1f8:	25 0e 13 05 00       	and    $0x5130e,%eax
 1fd:	00 00                	add    %al,(%rax)
 1ff:	01 49 00             	add    %ecx,0x0(%rcx)
 202:	02 18                	add    (%rax),%bl
 204:	7e 18                	jle    21e <__ImageBase+0x21e>
 206:	00 00                	add    %al,(%rax)
 208:	02 28                	add    (%rax),%ch
 20a:	00 03                	add    %al,(%rbx)
 20c:	0e                   	(bad)  
 20d:	1c 05                	sbb    $0x5,%al
 20f:	00 00                	add    %al,(%rax)
 211:	03 48 01             	add    0x1(%rax),%ecx
 214:	7d 01                	jge    217 <__ImageBase+0x217>
 216:	7f 13                	jg     22b <__ImageBase+0x22b>
 218:	01 13                	add    %edx,(%rbx)
 21a:	00 00                	add    %al,(%rax)
 21c:	04 05                	add    $0x5,%al
 21e:	00 49 13             	add    %cl,0x13(%rcx)
 221:	00 00                	add    %al,(%rax)
 223:	05 34 00 03 0e       	add    $0xe030034,%eax
 228:	3a 21                	cmp    (%rcx),%ah
 22a:	01 3b                	add    %edi,(%rbx)
 22c:	0b 39                	or     (%rcx),%edi
 22e:	0b 49 13             	or     0x13(%rcx),%ecx
 231:	02 17                	add    (%rdi),%dl
 233:	b7 42                	mov    $0x42,%bh
 235:	17                   	(bad)  
 236:	00 00                	add    %al,(%rax)
 238:	06                   	(bad)  
 239:	16                   	(bad)  
 23a:	00 03                	add    %al,(%rbx)
 23c:	0e                   	(bad)  
 23d:	3a 0b                	cmp    (%rbx),%cl
 23f:	3b 0b                	cmp    (%rbx),%ecx
 241:	39 0b                	cmp    %ecx,(%rbx)
 243:	49 13 00             	adc    (%r8),%rax
 246:	00 07                	add    %al,(%rdi)
 248:	0d 00 03 0e 3a       	or     $0x3a0e0300,%eax
 24d:	21 01                	and    %eax,(%rcx)
 24f:	3b 0b                	cmp    (%rbx),%ecx
 251:	39 0b                	cmp    %ecx,(%rbx)
 253:	49 13 38             	adc    (%r8),%rdi
 256:	0b 00                	or     (%rax),%eax
 258:	00 08                	add    %cl,(%rax)
 25a:	24 00                	and    $0x0,%al
 25c:	0b 0b                	or     (%rbx),%ecx
 25e:	3e 0b 03             	ds or  (%rbx),%eax
 261:	0e                   	(bad)  
 262:	00 00                	add    %al,(%rax)
 264:	09 34 00             	or     %esi,(%rax,%rax,1)
 267:	03 0e                	add    (%rsi),%ecx
 269:	3a 21                	cmp    (%rcx),%ah
 26b:	01 3b                	add    %edi,(%rbx)
 26d:	05 39 0b 49 13       	add    $0x13490b39,%eax
 272:	02 17                	add    (%rdi),%dl
 274:	b7 42                	mov    $0x42,%bh
 276:	17                   	(bad)  
 277:	00 00                	add    %al,(%rax)
 279:	0a 28                	or     (%rax),%ch
 27b:	00 03                	add    %al,(%rbx)
 27d:	0e                   	(bad)  
 27e:	1c 0b                	sbb    $0xb,%al
 280:	00 00                	add    %al,(%rax)
 282:	0b 0f                	or     (%rdi),%ecx
 284:	00 0b                	add    %cl,(%rbx)
 286:	21 08                	and    %ecx,(%rax)
 288:	49 13 00             	adc    (%r8),%rax
 28b:	00 0c 2e             	add    %cl,(%rsi,%rbp,1)
 28e:	01 3f                	add    %edi,(%rdi)
 290:	19 03                	sbb    %eax,(%rbx)
 292:	0e                   	(bad)  
 293:	3a 0b                	cmp    (%rbx),%cl
 295:	3b 0b                	cmp    (%rbx),%ecx
 297:	39 0b                	cmp    %ecx,(%rbx)
 299:	27                   	(bad)  
 29a:	19 49 13             	sbb    %ecx,0x13(%rcx)
 29d:	3c 19                	cmp    $0x19,%al
 29f:	01 13                	add    %edx,(%rbx)
 2a1:	00 00                	add    %al,(%rax)
 2a3:	0d 0d 00 03 0e       	or     $0xe03000d,%eax
 2a8:	3a 21                	cmp    (%rcx),%ah
 2aa:	01 3b                	add    %edi,(%rbx)
 2ac:	05 39 0b 49 13       	add    $0x13490b39,%eax
 2b1:	38 0b                	cmp    %cl,(%rbx)
 2b3:	00 00                	add    %al,(%rax)
 2b5:	0e                   	(bad)  
 2b6:	13 01                	adc    (%rcx),%eax
 2b8:	03 0e                	add    (%rsi),%ecx
 2ba:	0b 0b                	or     (%rbx),%ecx
 2bc:	3a 21                	cmp    (%rcx),%ah
 2be:	01 3b                	add    %edi,(%rbx)
 2c0:	0b 39                	or     (%rcx),%edi
 2c2:	21 10                	and    %edx,(%rax)
 2c4:	01 13                	add    %edx,(%rbx)
 2c6:	00 00                	add    %al,(%rax)
 2c8:	0f 2e 01             	ucomiss (%rcx),%xmm0
 2cb:	3f                   	(bad)  
 2cc:	19 03                	sbb    %eax,(%rbx)
 2ce:	0e                   	(bad)  
 2cf:	3a 0b                	cmp    (%rbx),%cl
 2d1:	3b 0b                	cmp    (%rbx),%ecx
 2d3:	39 0b                	cmp    %ecx,(%rbx)
 2d5:	27                   	(bad)  
 2d6:	19 3c 19             	sbb    %edi,(%rcx,%rbx,1)
 2d9:	01 13                	add    %edx,(%rbx)
 2db:	00 00                	add    %al,(%rax)
 2dd:	10 48 01             	adc    %cl,0x1(%rax)
 2e0:	7d 01                	jge    2e3 <__ImageBase+0x2e3>
 2e2:	7f 13                	jg     2f7 <__ImageBase+0x2f7>
 2e4:	00 00                	add    %al,(%rax)
 2e6:	11 26                	adc    %esp,(%rsi)
 2e8:	00 49 13             	add    %cl,0x13(%rcx)
 2eb:	00 00                	add    %al,(%rax)
 2ed:	12 05 00 03 08 3a    	adc    0x3a080300(%rip),%al        # 3a0805f3 <_end+0x3a055463>
 2f3:	21 01                	and    %eax,(%rcx)
 2f5:	3b 0b                	cmp    (%rbx),%ecx
 2f7:	39 0b                	cmp    %ecx,(%rbx)
 2f9:	49 13 02             	adc    (%r10),%rax
 2fc:	17                   	(bad)  
 2fd:	b7 42                	mov    $0x42,%bh
 2ff:	17                   	(bad)  
 300:	00 00                	add    %al,(%rax)
 302:	13 13                	adc    (%rbx),%edx
 304:	01 0b                	add    %ecx,(%rbx)
 306:	0b 3a                	or     (%rdx),%edi
 308:	21 01                	and    %eax,(%rcx)
 30a:	3b 05 39 0b 01 13    	cmp    0x13010b39(%rip),%eax        # 13010e49 <_end+0x12fe5cb9>
 310:	00 00                	add    %al,(%rax)
 312:	14 21                	adc    $0x21,%al
 314:	00 49 13             	add    %cl,0x13(%rcx)
 317:	2f                   	(bad)  
 318:	0b 00                	or     (%rax),%eax
 31a:	00 15 2e 00 3f 19    	add    %dl,0x193f002e(%rip)        # 193f034e <_end+0x193c51be>
 320:	03 0e                	add    (%rsi),%ecx
 322:	3a 0b                	cmp    (%rbx),%cl
 324:	3b 0b                	cmp    (%rbx),%ecx
 326:	39 0b                	cmp    %ecx,(%rbx)
 328:	27                   	(bad)  
 329:	19 3c 19             	sbb    %edi,(%rcx,%rbx,1)
 32c:	00 00                	add    %al,(%rax)
 32e:	16                   	(bad)  
 32f:	05 00 03 08 3a       	add    $0x3a080300,%eax
 334:	21 01                	and    %eax,(%rcx)
 336:	3b 05 39 0b 49 13    	cmp    0x13490b39(%rip),%eax        # 13490e75 <_end+0x13465ce5>
 33c:	02 17                	add    (%rdi),%dl
 33e:	b7 42                	mov    $0x42,%bh
 340:	17                   	(bad)  
 341:	00 00                	add    %al,(%rax)
 343:	17                   	(bad)  
 344:	34 00                	xor    $0x0,%al
 346:	03 08                	add    (%rax),%ecx
 348:	3a 21                	cmp    (%rcx),%ah
 34a:	01 3b                	add    %edi,(%rbx)
 34c:	05 39 0b 49 13       	add    $0x13490b39,%eax
 351:	02 17                	add    (%rdi),%dl
 353:	b7 42                	mov    $0x42,%bh
 355:	17                   	(bad)  
 356:	00 00                	add    %al,(%rax)
 358:	18 34 00             	sbb    %dh,(%rax,%rax,1)
 35b:	03 0e                	add    (%rsi),%ecx
 35d:	3a 21                	cmp    (%rcx),%ah
 35f:	01 3b                	add    %edi,(%rbx)
 361:	05 39 0b 49 13       	add    $0x13490b39,%eax
 366:	02 18                	add    (%rax),%bl
 368:	00 00                	add    %al,(%rax)
 36a:	19 48 00             	sbb    %ecx,0x0(%rax)
 36d:	7d 01                	jge    370 <__ImageBase+0x370>
 36f:	7f 13                	jg     384 <__ImageBase+0x384>
 371:	00 00                	add    %al,(%rax)
 373:	1a 0a                	sbb    (%rdx),%cl
 375:	00 03                	add    %al,(%rbx)
 377:	08 3a                	or     %bh,(%rdx)
 379:	21 01                	and    %eax,(%rcx)
 37b:	3b 05 39 21 01 11    	cmp    0x11012139(%rip),%eax        # 110124ba <_end+0x10fe732a>
 381:	01 00                	add    %eax,(%rax)
 383:	00 1b                	add    %bl,(%rbx)
 385:	2e 01 03             	cs add %eax,(%rbx)
 388:	0e                   	(bad)  
 389:	3a 21                	cmp    (%rcx),%ah
 38b:	01 3b                	add    %edi,(%rbx)
 38d:	0b 39                	or     (%rcx),%edi
 38f:	21 1f                	and    %ebx,(%rdi)
 391:	27                   	(bad)  
 392:	19 49 13             	sbb    %ecx,0x13(%rcx)
 395:	11 01                	adc    %eax,(%rcx)
 397:	12 07                	adc    (%rdi),%al
 399:	40 18 7a 19          	sbb    %dil,0x19(%rdx)
 39d:	01 13                	add    %edx,(%rbx)
 39f:	00 00                	add    %al,(%rax)
 3a1:	1c 34                	sbb    $0x34,%al
 3a3:	00 03                	add    %al,(%rbx)
 3a5:	08 3a                	or     %bh,(%rdx)
 3a7:	21 01                	and    %eax,(%rcx)
 3a9:	3b 0b                	cmp    (%rbx),%ecx
 3ab:	39 0b                	cmp    %ecx,(%rbx)
 3ad:	49 13 02             	adc    (%r10),%rax
 3b0:	17                   	(bad)  
 3b1:	b7 42                	mov    $0x42,%bh
 3b3:	17                   	(bad)  
 3b4:	00 00                	add    %al,(%rax)
 3b6:	1d 34 00 03 0e       	sbb    $0xe030034,%eax
 3bb:	3a 21                	cmp    (%rcx),%ah
 3bd:	01 3b                	add    %edi,(%rbx)
 3bf:	0b 39                	or     (%rcx),%edi
 3c1:	0b 49 13             	or     0x13(%rcx),%ecx
 3c4:	02 18                	add    (%rax),%bl
 3c6:	00 00                	add    %al,(%rax)
 3c8:	1e                   	(bad)  
 3c9:	01 01                	add    %eax,(%rcx)
 3cb:	49 13 01             	adc    (%r9),%rax
 3ce:	13 00                	adc    (%rax),%eax
 3d0:	00 1f                	add    %bl,(%rdi)
 3d2:	34 00                	xor    $0x0,%al
 3d4:	03 0e                	add    (%rsi),%ecx
 3d6:	3a 21                	cmp    (%rcx),%ah
 3d8:	01 3b                	add    %edi,(%rbx)
 3da:	05 39 21 03 49       	add    $0x49032139,%eax
 3df:	13 3f                	adc    (%rdi),%edi
 3e1:	19 02                	sbb    %eax,(%rdx)
 3e3:	18 00                	sbb    %al,(%rax)
 3e5:	00 20                	add    %ah,(%rax)
 3e7:	2e 01 03             	cs add %eax,(%rbx)
 3ea:	0e                   	(bad)  
 3eb:	3a 21                	cmp    (%rcx),%ah
 3ed:	01 3b                	add    %edi,(%rbx)
 3ef:	05 39 21 1f 27       	add    $0x271f2139,%eax
 3f4:	19 49 13             	sbb    %ecx,0x13(%rcx)
 3f7:	11 01                	adc    %eax,(%rcx)
 3f9:	12 07                	adc    (%rdi),%al
 3fb:	40 18 7a 19          	sbb    %dil,0x19(%rdx)
 3ff:	01 13                	add    %edx,(%rbx)
 401:	00 00                	add    %al,(%rax)
 403:	21 0a                	and    %ecx,(%rdx)
 405:	00 03                	add    %al,(%rbx)
 407:	08 3a                	or     %bh,(%rdx)
 409:	21 01                	and    %eax,(%rcx)
 40b:	3b 0b                	cmp    (%rbx),%ecx
 40d:	39 21                	cmp    %esp,(%rcx)
 40f:	01 11                	add    %edx,(%rcx)
 411:	01 00                	add    %eax,(%rax)
 413:	00 22                	add    %ah,(%rdx)
 415:	11 01                	adc    %eax,(%rcx)
 417:	25 0e 13 0b 03       	and    $0x30b130e,%eax
 41c:	1f                   	(bad)  
 41d:	1b 1f                	sbb    (%rdi),%ebx
 41f:	11 01                	adc    %eax,(%rcx)
 421:	12 07                	adc    (%rdi),%al
 423:	10 17                	adc    %dl,(%rdi)
 425:	00 00                	add    %al,(%rax)
 427:	23 24 00             	and    (%rax,%rax,1),%esp
 42a:	0b 0b                	or     (%rbx),%ecx
 42c:	3e 0b 03             	ds or  (%rbx),%eax
 42f:	08 00                	or     %al,(%rax)
 431:	00 24 0f             	add    %ah,(%rdi,%rcx,1)
 434:	00 0b                	add    %cl,(%rbx)
 436:	0b 00                	or     (%rax),%eax
 438:	00 25 04 01 03 0e    	add    %ah,0xe030104(%rip)        # e030542 <_end+0xe0053b2>
 43e:	3e 0b 0b             	ds or  (%rbx),%ecx
 441:	0b 49 13             	or     0x13(%rcx),%ecx
 444:	3a 0b                	cmp    (%rbx),%cl
 446:	3b 0b                	cmp    (%rbx),%ecx
 448:	39 0b                	cmp    %ecx,(%rbx)
 44a:	01 13                	add    %edx,(%rbx)
 44c:	00 00                	add    %al,(%rax)
 44e:	26 26 00 00          	es es add %al,(%rax)
 452:	00 27                	add    %ah,(%rdi)
 454:	2e 01 3f             	cs add %edi,(%rdi)
 457:	19 03                	sbb    %eax,(%rbx)
 459:	0e                   	(bad)  
 45a:	3a 0b                	cmp    (%rbx),%cl
 45c:	3b 05 39 0b 27 19    	cmp    0x19270b39(%rip),%eax        # 19270f9b <_end+0x19245e0b>
 462:	49 13 11             	adc    (%r9),%rdx
 465:	01 12                	add    %edx,(%rdx)
 467:	07                   	(bad)  
 468:	40 18 7a 19          	sbb    %dil,0x19(%rdx)
 46c:	01 13                	add    %edx,(%rbx)
 46e:	00 00                	add    %al,(%rax)
 470:	28 34 00             	sub    %dh,(%rax,%rax,1)
 473:	03 0e                	add    (%rsi),%ecx
 475:	3a 0b                	cmp    (%rbx),%cl
 477:	3b 05 39 0b 49 13    	cmp    0x13490b39(%rip),%eax        # 13490fb6 <_end+0x13465e26>
 47d:	00 00                	add    %al,(%rax)
 47f:	29 2e                	sub    %ebp,(%rsi)
 481:	01 03                	add    %eax,(%rbx)
 483:	0e                   	(bad)  
 484:	3a 0b                	cmp    (%rbx),%cl
 486:	3b 0b                	cmp    (%rbx),%ecx
 488:	39 0b                	cmp    %ecx,(%rbx)
 48a:	27                   	(bad)  
 48b:	19 49 13             	sbb    %ecx,0x13(%rcx)
 48e:	11 01                	adc    %eax,(%rcx)
 490:	12 07                	adc    (%rdi),%al
 492:	40 18 7a 19          	sbb    %dil,0x19(%rdx)
 496:	00 00                	add    %al,(%rax)
 498:	2a 34 00             	sub    (%rax,%rax,1),%dh
 49b:	03 0e                	add    (%rsi),%ecx
 49d:	3a 0b                	cmp    (%rbx),%cl
 49f:	3b 0b                	cmp    (%rbx),%ecx
 4a1:	39 0b                	cmp    %ecx,(%rbx)
 4a3:	49 13 1c 0b          	adc    (%r11,%rcx,1),%rbx
 4a7:	00 00                	add    %al,(%rax)
	...

Disassembly of section .debug_line:

0000000000000000 <.debug_line>:
   0:	45 02 00             	add    (%r8),%r8b
   3:	00 05 00 08 00 4f    	add    %al,0x4f000800(%rip)        # 4f000809 <_end+0x4efd5679>
   9:	00 00                	add    %al,(%rax)
   b:	00 01                	add    %al,(%rcx)
   d:	01 01                	add    %eax,(%rcx)
   f:	fb                   	sti    
  10:	0e                   	(bad)  
  11:	0d 00 01 01 01       	or     $0x1010100,%eax
  16:	01 00                	add    %eax,(%rax)
  18:	00 00                	add    %al,(%rax)
  1a:	01 00                	add    %eax,(%rax)
  1c:	00 01                	add    %al,(%rcx)
  1e:	01 01                	add    %eax,(%rcx)
  20:	1f                   	(bad)  
  21:	04 07                	add    $0x7,%al
  23:	00 00                	add    %al,(%rax)
  25:	00 29                	add    %ch,(%rcx)
  27:	00 00                	add    %al,(%rax)
  29:	00 4d 00             	add    %cl,0x0(%rbp)
  2c:	00 00                	add    %al,(%rax)
  2e:	6d                   	insl   (%dx),%es:(%rdi)
  2f:	00 00                	add    %al,(%rax)
  31:	00 02                	add    %al,(%rdx)
  33:	01 1f                	add    %ebx,(%rdi)
  35:	02 0f                	add    (%rdi),%cl
  37:	07                   	(bad)  
	...
  40:	00 00                	add    %al,(%rax)
  42:	87 00                	xchg   %eax,(%rax)
  44:	00 00                	add    %al,(%rax)
  46:	01 90 00 00 00 02    	add    %edx,0x2000000(%rax)
  4c:	98                   	cwtl   
  4d:	00 00                	add    %al,(%rax)
  4f:	00 03                	add    %al,(%rbx)
  51:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
  52:	00 00                	add    %al,(%rax)
  54:	00 02                	add    %al,(%rdx)
  56:	ad                   	lods   %ds:(%rsi),%eax
  57:	00 00                	add    %al,(%rax)
  59:	00 00                	add    %al,(%rax)
  5b:	05 34 00 09 02       	add    $0x2090034,%eax
  60:	63 20                	movsxd (%rax),%esp
  62:	00 00                	add    %al,(%rax)
  64:	00 00                	add    %al,(%rax)
  66:	00 00                	add    %al,(%rax)
  68:	03 0f                	add    (%rdi),%ecx
  6a:	01 06                	add    %eax,(%rsi)
  6c:	01 05 05 06 4b 05    	add    %eax,0x54b0605(%rip)        # 54b0677 <_end+0x54854e7>
  72:	34 06                	xor    $0x6,%al
  74:	11 20                	adc    %esp,(%rax)
  76:	05 05 3d 06 59       	add    $0x59063d05,%eax
  7b:	05 01 06 3d 05       	add    $0x53d0601,%eax
  80:	05 1f 58 05 3b       	add    $0x3b05581f,%eax
  85:	06                   	(bad)  
  86:	00 09                	add    %cl,(%rcx)
  88:	02 79 20             	add    0x20(%rcx),%bh
  8b:	00 00                	add    %al,(%rax)
  8d:	00 00                	add    %al,(%rax)
  8f:	00 00                	add    %al,(%rax)
  91:	16                   	(bad)  
  92:	06                   	(bad)  
  93:	01 05 05 06 4b 05    	add    %eax,0x54b0605(%rip)        # 54b069e <_end+0x548550e>
  99:	08 06                	or     %al,(%rsi)
  9b:	01 05 06 06 8f 05    	add    %eax,0x58f0606(%rip)        # 58f06a7 <_end+0x58c5517>
  a1:	09 14 06             	or     %edx,(%rsi,%rax,1)
  a4:	74 2e                	je     d4 <__ImageBase+0xd4>
  a6:	05 3b 10 05 05       	add    $0x505103b,%eax
  ab:	06                   	(bad)  
  ac:	50                   	push   %rax
  ad:	06                   	(bad)  
  ae:	ba 06 59 05 01       	mov    $0x1055906,%edx
  b3:	06                   	(bad)  
  b4:	75 05                	jne    bb <__ImageBase+0xbb>
  b6:	05 1f 05 49 06       	add    $0x649051f,%eax
  bb:	03 13                	add    (%rbx),%edx
  bd:	58                   	pop    %rax
  be:	06                   	(bad)  
  bf:	01 05 05 06 4b 05    	add    %eax,0x54b0605(%rip)        # 54b06ca <_end+0x548553a>
  c5:	49 06                	rex.WB (bad) 
  c7:	11 05 09 4b 05 49    	adc    %eax,0x49054b09(%rip)        # 49054bd6 <_end+0x49029a46>
  cd:	b9 05 09 2f 05       	mov    $0x52f0905,%ecx
  d2:	08 00                	or     %al,(%rax)
  d4:	02 04 01             	add    (%rcx,%rax,1),%al
  d7:	58                   	pop    %rax
  d8:	05 06 06 49 05       	add    $0x5490606,%eax
  dd:	09 14 05 01 06 1a 05 	or     %edx,0x51a0601(,%rax,1)
  e4:	09 03                	or     %eax,(%rbx)
  e6:	78 20                	js     108 <__ImageBase+0x108>
  e8:	05 01 7c 05 09       	add    $0x9057c01,%eax
  ed:	03 78 2e             	add    0x2e(%rax),%edi
  f0:	58                   	pop    %rax
  f1:	05 05 06 16 05       	add    $0x5160605,%eax
  f6:	12 06                	adc    (%rsi),%al
  f8:	01 05 08 66 05 05    	add    %eax,0x5056608(%rip)        # 5056706 <_end+0x502b576>
  fe:	06                   	(bad)  
  ff:	5a                   	pop    %rdx
 100:	05 1d 06 01 05       	add    $0x501061d,%eax
 105:	05 9e 05 0d 3d       	add    $0x3d0d059e,%eax
 10a:	05 1d 2d 05 05       	add    $0x5052d1d,%eax
 10f:	4a 05 1d 58 05 05    	rex.WX add $0x505581d,%rax
 115:	3c 06                	cmp    $0x6,%al
 117:	59                   	pop    %rcx
 118:	05 0d 06 01 05       	add    $0x501060d,%eax
 11d:	01 67 3c             	add    %esp,0x3c(%rdi)
 120:	05 14 06 03 67       	add    $0x67030614,%eax
 125:	20 05 05 4b 13 05    	and    %al,0x5134b05(%rip)        # 5134c30 <_end+0x5109aa0>
 12b:	14 06                	adc    $0x6,%al
 12d:	10 05 05 22 06 e6    	adc    %al,-0x19f9ddfb(%rip)        # ffffffffe6062338 <_end+0xffffffffe60371a8>
 133:	e5 08                	in     $0x8,%eax
 135:	30 e5                	xor    %ah,%ch
 137:	08 30                	or     %dh,(%rax)
 139:	e5 05                	in     $0x5,%eax
 13b:	01 06                	add    %eax,(%rsi)
 13d:	d7                   	xlat   %ds:(%rbx)
 13e:	05 05 1f 05 30       	add    $0x30051f05,%eax
 143:	06                   	(bad)  
 144:	03 11                	add    (%rcx),%edx
 146:	58                   	pop    %rax
 147:	06                   	(bad)  
 148:	01 05 05 06 4b 05    	add    %eax,0x54b0605(%rip)        # 54b0753 <_end+0x54855c3>
 14e:	30 06                	xor    %al,(%rsi)
 150:	11 05 09 21 05 30    	adc    %eax,0x30052109(%rip)        # 3005225f <_end+0x300270cf>
 156:	08 2d 05 09 2f 58    	or     %ch,0x582f0905(%rip)        # 582f0a61 <_end+0x582c58d1>
 15c:	05 08 00 02 04       	add    $0x4020008,%eax
 161:	01 2e                	add    %ebp,(%rsi)
 163:	05 09 06 4b 05       	add    $0x54b0609,%eax
 168:	01 06                	add    %eax,(%rsi)
 16a:	19 05 09 03 79 20    	sbb    %eax,0x20790309(%rip)        # 20790479 <_end+0x207652e9>
 170:	05 01 7b 05 09       	add    $0x9057b01,%eax
 175:	03 79 2e             	add    0x2e(%rcx),%edi
 178:	05 17 00 02 04       	add    $0x4020017,%eax
 17d:	01 06                	add    %eax,(%rsi)
 17f:	5c                   	pop    %rsp
 180:	05 09 83 05 23       	add    $0x23058309,%eax
 185:	00 02                	add    %al,(%rdx)
 187:	04 03                	add    $0x3,%al
 189:	06                   	(bad)  
 18a:	3b 00                	cmp    (%rax),%eax
 18c:	02 04 03             	add    (%rbx,%rax,1),%al
 18f:	2e 05 09 4b 05 23    	cs add $0x23054b09,%eax
 195:	00 02                	add    %al,(%rdx)
 197:	04 03                	add    $0x3,%al
 199:	06                   	(bad)  
 19a:	57                   	push   %rdi
 19b:	00 02                	add    %al,(%rdx)
 19d:	04 03                	add    $0x3,%al
 19f:	06                   	(bad)  
 1a0:	01 00                	add    %eax,(%rax)
 1a2:	02 04 03             	add    (%rbx,%rax,1),%al
 1a5:	2e 05 01 15 2e 05    	cs add $0x52e1501,%eax
 1ab:	57                   	push   %rdi
 1ac:	06                   	(bad)  
 1ad:	31 06                	xor    %eax,(%rsi)
 1af:	01 05 05 06 4b 05    	add    %eax,0x54b0605(%rip)        # 54b07ba <_end+0x548562a>
 1b5:	57                   	push   %rdi
 1b6:	06                   	(bad)  
 1b7:	11 05 09 21 05 57    	adc    %eax,0x57052109(%rip)        # 570522c6 <_end+0x57027136>
 1bd:	73 05                	jae    1c4 <__ImageBase+0x1c4>
 1bf:	09 4b 05             	or     %ecx,0x5(%rbx)
 1c2:	57                   	push   %rdi
 1c3:	3b 05 09 21 9f 05    	cmp    0x59f2109(%rip),%eax        # 59f22d2 <_end+0x59c7142>
 1c9:	08 00                	or     %al,(%rax)
 1cb:	02 04 01             	add    (%rcx,%rax,1),%al
 1ce:	73 05                	jae    1d5 <__ImageBase+0x1d5>
 1d0:	05 06 4f f3 05       	add    $0x5f34f06,%eax
 1d5:	01 06                	add    %eax,(%rsi)
 1d7:	75 2e                	jne    207 <__ImageBase+0x207>
 1d9:	05 05 1f 05 2c       	add    $0x2c051f05,%eax
 1de:	06                   	(bad)  
 1df:	5c                   	pop    %rsp
 1e0:	06                   	(bad)  
 1e1:	01 05 05 06 4b 05    	add    %eax,0x54b0605(%rip)        # 54b07ec <_end+0x548565c>
 1e7:	2c 06                	sub    $0x6,%al
 1e9:	11 05 09 21 05 08    	adc    %eax,0x8052109(%rip)        # 80522f8 <_end+0x8027168>
 1ef:	00 02                	add    %al,(%rdx)
 1f1:	04 01                	add    $0x1,%al
 1f3:	08 3c 05 09 06 4b 05 	or     %bh,0x54b0609(,%rax,1)
 1fa:	01 06                	add    %eax,(%rsi)
 1fc:	03 0b                	add    (%rbx),%ecx
 1fe:	74 05                	je     205 <__ImageBase+0x205>
 200:	09 03                	or     %eax,(%rbx)
 202:	75 20                	jne    224 <__ImageBase+0x224>
 204:	05 05 06 5c 08       	add    $0x85c0605,%eax
 209:	14 05                	adc    $0x5,%al
 20b:	0a 01                	or     (%rcx),%al
 20d:	05 17 00 02 04       	add    $0x4020017,%eax
 212:	01 01                	add    %eax,(%rcx)
 214:	05 09 06 75 06       	add    $0x6750609,%eax
 219:	2e 05 17 00 02 04    	cs add $0x4020017,%eax
 21f:	01 06                	add    %eax,(%rsi)
 221:	81 05 09 4b 05 28 00 	addl   $0x3040200,0x28054b09(%rip)        # 28054d34 <_end+0x28029ba4>
 228:	02 04 03 
 22b:	06                   	(bad)  
 22c:	2d 05 17 00 02       	sub    $0x2001705,%eax
 231:	04 01                	add    $0x1,%al
 233:	01 05 05 5b 05 0e    	add    %eax,0xe055b05(%rip)        # e055d3e <_end+0xe02abae>
 239:	06                   	(bad)  
 23a:	01 05 01 30 05 0e    	add    %eax,0xe053001(%rip)        # e053241 <_end+0xe0280b1>
 240:	1e                   	(bad)  
 241:	05 01 68 02 01       	add    $0x1026801,%eax
 246:	00 01                	add    %al,(%rcx)
 248:	01 45 00             	add    %eax,0x0(%rbp)
 24b:	00 00                	add    %al,(%rax)
 24d:	05 00 08 00 2a       	add    $0x2a000800,%eax
 252:	00 00                	add    %al,(%rax)
 254:	00 01                	add    %al,(%rcx)
 256:	01 01                	add    %eax,(%rcx)
 258:	fb                   	sti    
 259:	0e                   	(bad)  
 25a:	0d 00 01 01 01       	or     $0x1010100,%eax
 25f:	01 00                	add    %eax,(%rax)
 261:	00 00                	add    %al,(%rax)
 263:	01 00                	add    %eax,(%rax)
 265:	00 01                	add    %al,(%rcx)
 267:	01 01                	add    %eax,(%rcx)
 269:	1f                   	(bad)  
 26a:	01 07                	add    %eax,(%rdi)
 26c:	00 00                	add    %al,(%rax)
 26e:	00 02                	add    %al,(%rdx)
 270:	01 1f                	add    %ebx,(%rdi)
 272:	02 0f                	add    (%rdi),%cl
 274:	02 b6 00 00 00 00    	add    0x0(%rsi),%dh
 27a:	b6 00                	mov    $0x0,%dh
 27c:	00 00                	add    %al,(%rax)
 27e:	00 00                	add    %al,(%rax)
 280:	09 02                	or     %eax,(%rdx)
 282:	00 30                	add    %dh,(%rax)
 284:	00 00                	add    %al,(%rax)
 286:	00 00                	add    %al,(%rax)
 288:	00 00                	add    %al,(%rax)
 28a:	16                   	(bad)  
 28b:	59                   	pop    %rcx
 28c:	02 81 20 00 01 01    	add    0x1010020(%rcx),%al
 292:	a2 06 00 00 05 00 08 	movabs %al,0x6d00080005000006
 299:	00 6d 
 29b:	00 00                	add    %al,(%rax)
 29d:	00 01                	add    %al,(%rcx)
 29f:	01 01                	add    %eax,(%rcx)
 2a1:	fb                   	sti    
 2a2:	0e                   	(bad)  
 2a3:	0d 00 01 01 01       	or     $0x1010100,%eax
 2a8:	01 00                	add    %eax,(%rax)
 2aa:	00 00                	add    %al,(%rax)
 2ac:	01 00                	add    %eax,(%rax)
 2ae:	00 01                	add    %al,(%rcx)
 2b0:	01 01                	add    %eax,(%rcx)
 2b2:	1f                   	(bad)  
 2b3:	04 07                	add    $0x7,%al
 2b5:	00 00                	add    %al,(%rax)
 2b7:	00 29                	add    %ch,(%rcx)
 2b9:	00 00                	add    %al,(%rax)
 2bb:	00 4d 00             	add    %cl,0x0(%rbp)
 2be:	00 00                	add    %al,(%rax)
 2c0:	6d                   	insl   (%dx),%es:(%rdi)
 2c1:	00 00                	add    %al,(%rax)
 2c3:	00 02                	add    %al,(%rdx)
 2c5:	01 1f                	add    %ebx,(%rdi)
 2c7:	02 0f                	add    (%rdi),%cl
 2c9:	0d bc 00 00 00       	or     $0xbc,%eax
 2ce:	00 bc 00 00 00 00 87 	add    %bh,-0x79000000(%rax,%rax,1)
 2d5:	00 00                	add    %al,(%rax)
 2d7:	00 01                	add    %al,(%rcx)
 2d9:	c5 00 00             	(bad)
 2dc:	00 01                	add    %al,(%rcx)
 2de:	90                   	nop
 2df:	00 00                	add    %al,(%rax)
 2e1:	00 02                	add    %al,(%rdx)
 2e3:	98                   	cwtl   
 2e4:	00 00                	add    %al,(%rax)
 2e6:	00 03                	add    %al,(%rbx)
 2e8:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
 2e9:	00 00                	add    %al,(%rax)
 2eb:	00 02                	add    %al,(%rdx)
 2ed:	ce                   	(bad)  
 2ee:	00 00                	add    %al,(%rax)
 2f0:	00 03                	add    %al,(%rbx)
 2f2:	dc 00                	faddl  (%rax)
 2f4:	00 00                	add    %al,(%rax)
 2f6:	02 e9                	add    %cl,%ch
 2f8:	00 00                	add    %al,(%rax)
 2fa:	00 03                	add    %al,(%rbx)
 2fc:	ad                   	lods   %ds:(%rsi),%eax
 2fd:	00 00                	add    %al,(%rax)
 2ff:	00 00                	add    %al,(%rax)
 301:	f4                   	hlt    
 302:	00 00                	add    %al,(%rax)
 304:	00 02                	add    %al,(%rdx)
 306:	fd                   	std    
 307:	00 00                	add    %al,(%rax)
 309:	00 03                	add    %al,(%rbx)
 30b:	05 01 00 09 02       	add    $0x2090001,%eax
 310:	06                   	(bad)  
 311:	40 00 00             	rex add %al,(%rax)
 314:	00 00                	add    %al,(%rax)
 316:	00 00                	add    %al,(%rax)
 318:	03 bf 02 01 06 01    	add    0x1060102(%rdi),%edi
 31e:	05 02 06 4b 01       	add    $0x14b0602,%eax
 323:	05 01 06 11 05       	add    $0x5110601,%eax
 328:	02 9f 00 02 04 03    	add    0x3040200(%rdi),%bl
 32e:	58                   	pop    %rax
 32f:	00 02                	add    %al,(%rdx)
 331:	04 02                	add    $0x2,%al
 333:	ac                   	lods   %ds:(%rsi),%al
 334:	00 02                	add    %al,(%rdx)
 336:	04 01                	add    $0x1,%al
 338:	c8 00 02 04          	enter  $0x200,$0x4
 33c:	04 06                	add    $0x6,%al
 33e:	4a 16                	rex.WX (bad) 
 340:	3d 13 13 05 06       	cmp    $0x6051313,%eax
 345:	06                   	(bad)  
 346:	01 05 0a f3 05 06    	add    %eax,0x605f30a(%rip)        # 605f656 <_end+0x60344c6>
 34c:	65 05 05 00 02 04    	gs add $0x4020005,%eax
 352:	01 58 05             	add    %ebx,0x5(%rax)
 355:	02 06                	add    (%rsi),%al
 357:	85 13                	test   %edx,(%rbx)
 359:	05 0e 06 01 05       	add    $0x501060e,%eax
 35e:	02 06                	add    (%rsi),%al
 360:	4b 05 09 06 01 05    	rex.WXB add $0x5010609,%rax
 366:	02 06                	add    (%rsi),%al
 368:	59                   	pop    %rcx
 369:	14 01                	adc    $0x1,%al
 36b:	00 02                	add    %al,(%rdx)
 36d:	04 04                	add    $0x4,%al
 36f:	58                   	pop    %rax
 370:	17                   	(bad)  
 371:	3e 05 05 06 01 05    	ds add $0x5010605,%eax
 377:	08 03                	or     %al,(%rbx)
 379:	77 9e                	ja     319 <__ImageBase+0x319>
 37b:	2e 05 02 00 02 04    	cs add $0x4020002,%eax
 381:	01 30                	add    %esi,(%rax)
 383:	05 03 06 08 1a       	add    $0x1a080603,%eax
 388:	05 19 06 01 05       	add    $0x5010619,%eax
 38d:	0b 3e                	or     (%rsi),%edi
 38f:	05 19 64 05 03       	add    $0x3056419,%eax
 394:	06                   	(bad)  
 395:	83 05 06 06 01 05 03 	addl   $0x3,0x5010606(%rip)        # 50109a2 <_end+0x4fe5812>
 39c:	06                   	(bad)  
 39d:	5d                   	pop    %rbp
 39e:	05 07 06 01 05       	add    $0x5010607,%eax
 3a3:	06                   	(bad)  
 3a4:	00 02                	add    %al,(%rdx)
 3a6:	04 01                	add    $0x1,%al
 3a8:	08 12                	or     %dl,(%rdx)
 3aa:	05 03 06 4f 05       	add    $0x54f0603,%eax
 3af:	23 06                	and    (%rsi),%eax
 3b1:	01 05 03 06 59 05    	add    %eax,0x5590603(%rip)        # 55909ba <_end+0x556582a>
 3b7:	18 06                	sbb    %al,(%rsi)
 3b9:	01 05 2d 00 02 04    	add    %eax,0x402002d(%rip)        # 40203ec <_end+0x3ff525c>
 3bf:	01 82 05 06 00 02    	add    %eax,0x2000605(%rdx)
 3c5:	04 01                	add    $0x1,%al
 3c7:	3c 05                	cmp    $0x5,%al
 3c9:	0b 5a 05             	or     0x5(%rdx),%ebx
 3cc:	02 06                	add    (%rsi),%al
 3ce:	86 af 05 05 06 01    	xchg   %ch,0x1060505(%rdi)
 3d4:	05 14 00 02 04       	add    $0x4020014,%eax
 3d9:	01 06                	add    %eax,(%rsi)
 3db:	58                   	pop    %rax
 3dc:	05 01 06 84 06       	add    $0x6840601,%eax
 3e1:	03 9f 7f d6 06 01    	add    0x106d67f(%rdi),%ebx
 3e7:	05 02 06 4b 01       	add    $0x14b0602,%eax
 3ec:	05 01 06 11 05       	add    $0x5110601,%eax
 3f1:	02 9f 00 02 04 03    	add    0x3040200(%rdi),%bl
 3f7:	58                   	pop    %rax
 3f8:	00 02                	add    %al,(%rdx)
 3fa:	04 02                	add    $0x2,%al
 3fc:	ac                   	lods   %ds:(%rsi),%al
 3fd:	00 02                	add    %al,(%rdx)
 3ff:	04 01                	add    $0x1,%al
 401:	c8 00 02 04          	enter  $0x200,$0x4
 405:	04 06                	add    $0x6,%al
 407:	4a 16                	rex.WX (bad) 
 409:	3d 13 13 05 06       	cmp    $0x6051313,%eax
 40e:	06                   	(bad)  
 40f:	01 05 0a f3 05 06    	add    %eax,0x605f30a(%rip)        # 605f71f <_end+0x603458f>
 415:	65 05 05 00 02 04    	gs add $0x4020005,%eax
 41b:	01 58 05             	add    %ebx,0x5(%rax)
 41e:	02 06                	add    (%rsi),%al
 420:	85 13                	test   %edx,(%rbx)
 422:	05 0e 06 01 05       	add    $0x501060e,%eax
 427:	02 06                	add    (%rsi),%al
 429:	4b 05 09 06 01 05    	rex.WXB add $0x5010609,%rax
 42f:	02 06                	add    (%rsi),%al
 431:	59                   	pop    %rcx
 432:	14 01                	adc    $0x1,%al
 434:	00 02                	add    %al,(%rdx)
 436:	04 04                	add    $0x4,%al
 438:	58                   	pop    %rax
 439:	17                   	(bad)  
 43a:	3e 05 05 06 01 05    	ds add $0x5010605,%eax
 440:	08 03                	or     %al,(%rbx)
 442:	77 9e                	ja     3e2 <__ImageBase+0x3e2>
 444:	2e 05 02 00 02 04    	cs add $0x4020002,%eax
 44a:	01 30                	add    %esi,(%rax)
 44c:	05 03 06 08 1a       	add    $0x1a080603,%eax
 451:	05 19 06 01 05       	add    $0x5010619,%eax
 456:	0b 3e                	or     (%rsi),%edi
 458:	05 19 64 05 03       	add    $0x3056419,%eax
 45d:	06                   	(bad)  
 45e:	83 05 06 06 01 05 03 	addl   $0x3,0x5010606(%rip)        # 5010a6b <_end+0x4fe58db>
 465:	06                   	(bad)  
 466:	5d                   	pop    %rbp
 467:	05 07 06 01 05       	add    $0x5010607,%eax
 46c:	06                   	(bad)  
 46d:	00 02                	add    %al,(%rdx)
 46f:	04 01                	add    $0x1,%al
 471:	08 12                	or     %dl,(%rdx)
 473:	05 03 06 4f 05       	add    $0x54f0603,%eax
 478:	23 06                	and    (%rsi),%eax
 47a:	01 05 03 06 59 05    	add    %eax,0x5590603(%rip)        # 5590a83 <_end+0x55658f3>
 480:	18 06                	sbb    %al,(%rsi)
 482:	01 05 2d 00 02 04    	add    %eax,0x402002d(%rip)        # 40204b5 <_end+0x3ff5325>
 488:	01 82 05 06 00 02    	add    %eax,0x2000605(%rdx)
 48e:	04 01                	add    $0x1,%al
 490:	3c 05                	cmp    $0x5,%al
 492:	0b 5a 05             	or     0x5(%rdx),%ebx
 495:	02 06                	add    (%rsi),%al
 497:	86 af 05 05 06 01    	xchg   %ch,0x1060505(%rdi)
 49d:	05 14 00 02 04       	add    $0x4020014,%eax
 4a2:	01 06                	add    %eax,(%rsi)
 4a4:	58                   	pop    %rax
 4a5:	05 01 06 84 06       	add    $0x6840601,%eax
 4aa:	03 9f 7f d6 06 01    	add    0x106d67f(%rdi),%ebx
 4b0:	05 02 06 4b 01       	add    $0x14b0602,%eax
 4b5:	05 01 06 11 05       	add    $0x5110601,%eax
 4ba:	02 9f 00 02 04 03    	add    0x3040200(%rdi),%bl
 4c0:	58                   	pop    %rax
 4c1:	00 02                	add    %al,(%rdx)
 4c3:	04 02                	add    $0x2,%al
 4c5:	ac                   	lods   %ds:(%rsi),%al
 4c6:	00 02                	add    %al,(%rdx)
 4c8:	04 01                	add    $0x1,%al
 4ca:	c8 00 02 04          	enter  $0x200,$0x4
 4ce:	04 06                	add    $0x6,%al
 4d0:	4a 16                	rex.WX (bad) 
 4d2:	3d 13 13 05 06       	cmp    $0x6051313,%eax
 4d7:	06                   	(bad)  
 4d8:	01 05 0a f3 05 06    	add    %eax,0x605f30a(%rip)        # 605f7e8 <_end+0x6034658>
 4de:	65 05 05 00 02 04    	gs add $0x4020005,%eax
 4e4:	01 58 05             	add    %ebx,0x5(%rax)
 4e7:	02 06                	add    (%rsi),%al
 4e9:	85 13                	test   %edx,(%rbx)
 4eb:	05 0e 06 01 05       	add    $0x501060e,%eax
 4f0:	02 06                	add    (%rsi),%al
 4f2:	4b 05 09 06 01 05    	rex.WXB add $0x5010609,%rax
 4f8:	02 06                	add    (%rsi),%al
 4fa:	59                   	pop    %rcx
 4fb:	14 01                	adc    $0x1,%al
 4fd:	00 02                	add    %al,(%rdx)
 4ff:	04 04                	add    $0x4,%al
 501:	58                   	pop    %rax
 502:	17                   	(bad)  
 503:	3e 05 05 06 01 05    	ds add $0x5010605,%eax
 509:	08 03                	or     %al,(%rbx)
 50b:	77 9e                	ja     4ab <__ImageBase+0x4ab>
 50d:	2e 05 02 00 02 04    	cs add $0x4020002,%eax
 513:	01 30                	add    %esi,(%rax)
 515:	05 03 06 08 1a       	add    $0x1a080603,%eax
 51a:	05 19 06 01 05       	add    $0x5010619,%eax
 51f:	0b 3e                	or     (%rsi),%edi
 521:	05 19 64 05 03       	add    $0x3056419,%eax
 526:	06                   	(bad)  
 527:	83 05 06 06 01 05 03 	addl   $0x3,0x5010606(%rip)        # 5010b34 <_end+0x4fe59a4>
 52e:	06                   	(bad)  
 52f:	5d                   	pop    %rbp
 530:	05 07 06 01 05       	add    $0x5010607,%eax
 535:	06                   	(bad)  
 536:	00 02                	add    %al,(%rdx)
 538:	04 01                	add    $0x1,%al
 53a:	08 12                	or     %dl,(%rdx)
 53c:	05 03 06 4f 05       	add    $0x54f0603,%eax
 541:	23 06                	and    (%rsi),%eax
 543:	01 05 03 06 59 05    	add    %eax,0x5590603(%rip)        # 5590b4c <_end+0x55659bc>
 549:	18 06                	sbb    %al,(%rsi)
 54b:	01 05 2d 00 02 04    	add    %eax,0x402002d(%rip)        # 402057e <_end+0x3ff53ee>
 551:	01 82 05 06 00 02    	add    %eax,0x2000605(%rdx)
 557:	04 01                	add    $0x1,%al
 559:	3c 05                	cmp    $0x5,%al
 55b:	0b 5a 05             	or     0x5(%rdx),%ebx
 55e:	02 06                	add    (%rsi),%al
 560:	86 af 05 05 06 01    	xchg   %ch,0x1060505(%rdi)
 566:	05 14 00 02 04       	add    $0x4020014,%eax
 56b:	01 06                	add    %eax,(%rsi)
 56d:	58                   	pop    %rax
 56e:	05 01 06 84 06       	add    $0x6840601,%eax
 573:	03 87 7f d6 06 01    	add    0x106d67f(%rdi),%eax
 579:	05 02 06 4b 01       	add    $0x14b0602,%eax
 57e:	05 01 06 11 05       	add    $0x5110601,%eax
 583:	02 bb 00 02 04 03    	add    0x3040200(%rbx),%bh
 589:	58                   	pop    %rax
 58a:	00 02                	add    %al,(%rdx)
 58c:	04 02                	add    $0x2,%al
 58e:	ac                   	lods   %ds:(%rsi),%al
 58f:	00 02                	add    %al,(%rdx)
 591:	04 01                	add    $0x1,%al
 593:	c8 00 02 04          	enter  $0x200,$0x4
 597:	04 06                	add    $0x6,%al
 599:	4a 16                	rex.WX (bad) 
 59b:	3d 13 13 05 06       	cmp    $0x6051313,%eax
 5a0:	06                   	(bad)  
 5a1:	01 05 0a f3 05 06    	add    %eax,0x605f30a(%rip)        # 605f8b1 <_end+0x6034721>
 5a7:	65 05 05 00 02 04    	gs add $0x4020005,%eax
 5ad:	01 58 05             	add    %ebx,0x5(%rax)
 5b0:	02 06                	add    (%rsi),%al
 5b2:	85 13                	test   %edx,(%rbx)
 5b4:	05 0e 06 01 05       	add    $0x501060e,%eax
 5b9:	02 06                	add    (%rsi),%al
 5bb:	4b 05 09 06 01 05    	rex.WXB add $0x5010609,%rax
 5c1:	02 06                	add    (%rsi),%al
 5c3:	59                   	pop    %rcx
 5c4:	13 05 0e 06 01 05    	adc    0x501060e(%rip),%eax        # 5010bd8 <_end+0x4fe5a48>
 5ca:	02 06                	add    (%rsi),%al
 5cc:	59                   	pop    %rcx
 5cd:	05 09 06 01 05       	add    $0x5010609,%eax
 5d2:	02 06                	add    (%rsi),%al
 5d4:	59                   	pop    %rcx
 5d5:	14 01                	adc    $0x1,%al
 5d7:	00 02                	add    %al,(%rdx)
 5d9:	04 04                	add    $0x4,%al
 5db:	58                   	pop    %rax
 5dc:	13 01                	adc    (%rcx),%eax
 5de:	00 02                	add    %al,(%rdx)
 5e0:	04 01                	add    $0x1,%al
 5e2:	06                   	(bad)  
 5e3:	73 00                	jae    5e5 <__ImageBase+0x5e5>
 5e5:	02 04 01             	add    (%rcx,%rax,1),%al
 5e8:	08 13                	or     %dl,(%rbx)
 5ea:	00 02                	add    %al,(%rdx)
 5ec:	04 04                	add    $0x4,%al
 5ee:	06                   	(bad)  
 5ef:	08 2e                	or     %ch,(%rsi)
 5f1:	17                   	(bad)  
 5f2:	3e 05 05 06 01 05    	ds add $0x5010605,%eax
 5f8:	08 03                	or     %al,(%rbx)
 5fa:	73 9e                	jae    59a <__ImageBase+0x59a>
 5fc:	2e 05 03 06 03 0e    	cs add $0xe030603,%eax
 602:	2e 05 1d 06 01 05    	cs add $0x501061d,%eax
 608:	03 06                	add    (%rsi),%eax
 60a:	ad                   	lods   %ds:(%rsi),%eax
 60b:	05 06 06 01 05       	add    $0x5010606,%eax
 610:	03 06                	add    (%rsi),%eax
 612:	95                   	xchg   %eax,%ebp
 613:	05 07 06 01 05       	add    $0x5010607,%eax
 618:	06                   	(bad)  
 619:	00 02                	add    %al,(%rdx)
 61b:	04 01                	add    $0x1,%al
 61d:	08 12                	or     %dl,(%rdx)
 61f:	05 03 06 87 05       	add    $0x5870603,%eax
 624:	2b 06                	sub    (%rsi),%eax
 626:	01 05 03 06 59 05    	add    %eax,0x5590603(%rip)        # 5590c2f <_end+0x5565a9f>
 62c:	1c 06                	sbb    $0x6,%al
 62e:	01 05 35 00 02 04    	add    %eax,0x4020035(%rip)        # 4020669 <_end+0x3ff54d9>
 634:	01 82 05 06 00 02    	add    %eax,0x2000605(%rdx)
 63a:	04 01                	add    $0x1,%al
 63c:	3c 05                	cmp    $0x5,%al
 63e:	02 06                	add    (%rsi),%al
 640:	96                   	xchg   %eax,%esi
 641:	05 05 06 01 05       	add    $0x5010605,%eax
 646:	03 06                	add    (%rsi),%eax
 648:	9f                   	lahf   
 649:	05 1d 06 01 05       	add    $0x501061d,%eax
 64e:	03 06                	add    (%rsi),%eax
 650:	ad                   	lods   %ds:(%rsi),%eax
 651:	05 06 06 01 05       	add    $0x5010606,%eax
 656:	03 06                	add    (%rsi),%eax
 658:	5d                   	pop    %rbp
 659:	05 07 06 01 05       	add    $0x5010607,%eax
 65e:	06                   	(bad)  
 65f:	00 02                	add    %al,(%rdx)
 661:	04 01                	add    $0x1,%al
 663:	08 12                	or     %dl,(%rdx)
 665:	05 03 06 4f 05       	add    $0x54f0603,%eax
 66a:	2b 06                	sub    (%rsi),%eax
 66c:	01 05 03 06 67 05    	add    %eax,0x5670603(%rip)        # 5670c75 <_end+0x5645ae5>
 672:	1c 06                	sbb    $0x6,%al
 674:	01 05 35 00 02 04    	add    %eax,0x4020035(%rip)        # 40206af <_end+0x3ff551f>
 67a:	01 82 05 06 00 02    	add    %eax,0x2000605(%rdx)
 680:	04 01                	add    $0x1,%al
 682:	3c 05                	cmp    $0x5,%al
 684:	08 03                	or     %al,(%rbx)
 686:	56                   	push   %rsi
 687:	74 05                	je     68e <__ImageBase+0x68e>
 689:	02 06                	add    (%rsi),%al
 68b:	03 30                	add    (%rax),%esi
 68d:	2e 06                	cs (bad) 
 68f:	90                   	nop
 690:	06                   	(bad)  
 691:	5b                   	pop    %rbx
 692:	05 05 06 01 05       	add    $0x5010605,%eax
 697:	02 06                	add    (%rsi),%al
 699:	74 05                	je     6a0 <__ImageBase+0x6a0>
 69b:	05 06 01 05 0b       	add    $0xb050106,%eax
 6a0:	03 6d 58             	add    0x58(%rbp),%ebp
 6a3:	05 18 00 02 04       	add    $0x4020018,%eax
 6a8:	01 06                	add    %eax,(%rsi)
 6aa:	03 13                	add    (%rbx),%edx
 6ac:	66 05 02 83          	add    $0x8302,%ax
 6b0:	05 05 06 01 05       	add    $0x5010605,%eax
 6b5:	18 00                	sbb    %al,(%rax)
 6b7:	02 04 01             	add    (%rcx,%rax,1),%al
 6ba:	06                   	(bad)  
 6bb:	58                   	pop    %rax
 6bc:	05 02 9d 06 2e       	add    $0x2e069d02,%eax
 6c1:	06                   	(bad)  
 6c2:	82                   	(bad)  
 6c3:	05 05 06 01 66       	add    $0x66010605,%eax
 6c8:	05 0b 03 6d 74       	add    $0x746d030b,%eax
 6cd:	05 01 03 16 66       	add    $0x66160301,%eax
 6d2:	06                   	(bad)  
 6d3:	03 ef                	add    %edi,%ebp
 6d5:	7e f2                	jle    6c9 <__ImageBase+0x6c9>
 6d7:	06                   	(bad)  
 6d8:	01 05 02 06 4b 01    	add    %eax,0x14b0602(%rip)        # 14b0ce0 <_end+0x1485b50>
 6de:	05 01 06 11 05       	add    $0x5110601,%eax
 6e3:	02 bb 00 02 04 03    	add    0x3040200(%rbx),%bh
 6e9:	58                   	pop    %rax
 6ea:	00 02                	add    %al,(%rdx)
 6ec:	04 02                	add    $0x2,%al
 6ee:	ac                   	lods   %ds:(%rsi),%al
 6ef:	00 02                	add    %al,(%rdx)
 6f1:	04 01                	add    $0x1,%al
 6f3:	c8 00 02 04          	enter  $0x200,$0x4
 6f7:	04 06                	add    $0x6,%al
 6f9:	4a 16                	rex.WX (bad) 
 6fb:	3d 13 13 05 06       	cmp    $0x6051313,%eax
 700:	06                   	(bad)  
 701:	01 05 0a f3 05 06    	add    %eax,0x605f30a(%rip)        # 605fa11 <_end+0x6034881>
 707:	65 05 05 00 02 04    	gs add $0x4020005,%eax
 70d:	01 58 05             	add    %ebx,0x5(%rax)
 710:	02 06                	add    (%rsi),%al
 712:	85 13                	test   %edx,(%rbx)
 714:	05 0e 06 01 05       	add    $0x501060e,%eax
 719:	02 06                	add    (%rsi),%al
 71b:	4b 05 09 06 01 05    	rex.WXB add $0x5010609,%rax
 721:	02 06                	add    (%rsi),%al
 723:	59                   	pop    %rcx
 724:	13 05 0e 06 01 05    	adc    0x501060e(%rip),%eax        # 5010d38 <_end+0x4fe5ba8>
 72a:	02 06                	add    (%rsi),%al
 72c:	59                   	pop    %rcx
 72d:	05 09 06 01 05       	add    $0x5010609,%eax
 732:	02 06                	add    (%rsi),%al
 734:	59                   	pop    %rcx
 735:	14 01                	adc    $0x1,%al
 737:	00 02                	add    %al,(%rdx)
 739:	04 04                	add    $0x4,%al
 73b:	58                   	pop    %rax
 73c:	13 01                	adc    (%rcx),%eax
 73e:	00 02                	add    %al,(%rdx)
 740:	04 01                	add    $0x1,%al
 742:	06                   	(bad)  
 743:	73 00                	jae    745 <__ImageBase+0x745>
 745:	02 04 01             	add    (%rcx,%rax,1),%al
 748:	08 13                	or     %dl,(%rbx)
 74a:	00 02                	add    %al,(%rdx)
 74c:	04 04                	add    $0x4,%al
 74e:	06                   	(bad)  
 74f:	08 2e                	or     %ch,(%rsi)
 751:	17                   	(bad)  
 752:	3e 05 05 06 01 05    	ds add $0x5010605,%eax
 758:	08 03                	or     %al,(%rbx)
 75a:	73 9e                	jae    6fa <__ImageBase+0x6fa>
 75c:	2e 05 03 06 03 0e    	cs add $0xe030603,%eax
 762:	2e 05 19 06 01 05    	cs add $0x5010619,%eax
 768:	03 06                	add    (%rsi),%eax
 76a:	ad                   	lods   %ds:(%rsi),%eax
 76b:	05 06 06 01 05       	add    $0x5010606,%eax
 770:	03 06                	add    (%rsi),%eax
 772:	95                   	xchg   %eax,%ebp
 773:	05 07 06 01 05       	add    $0x5010607,%eax
 778:	06                   	(bad)  
 779:	00 02                	add    %al,(%rdx)
 77b:	04 01                	add    $0x1,%al
 77d:	08 12                	or     %dl,(%rdx)
 77f:	05 03 06 87 05       	add    $0x5870603,%eax
 784:	23 06                	and    (%rsi),%eax
 786:	01 05 03 06 59 05    	add    %eax,0x5590603(%rip)        # 5590d8f <_end+0x5565bff>
 78c:	18 06                	sbb    %al,(%rsi)
 78e:	01 05 2d 00 02 04    	add    %eax,0x402002d(%rip)        # 40207c1 <_end+0x3ff5631>
 794:	01 82 05 06 00 02    	add    %eax,0x2000605(%rdx)
 79a:	04 01                	add    $0x1,%al
 79c:	3c 05                	cmp    $0x5,%al
 79e:	02 06                	add    (%rsi),%al
 7a0:	96                   	xchg   %eax,%esi
 7a1:	05 05 06 01 05       	add    $0x5010605,%eax
 7a6:	03 06                	add    (%rsi),%eax
 7a8:	9f                   	lahf   
 7a9:	05 1d 06 01 05       	add    $0x501061d,%eax
 7ae:	03 06                	add    (%rsi),%eax
 7b0:	ad                   	lods   %ds:(%rsi),%eax
 7b1:	05 06 06 01 05       	add    $0x5010606,%eax
 7b6:	03 06                	add    (%rsi),%eax
 7b8:	5d                   	pop    %rbp
 7b9:	05 07 06 01 05       	add    $0x5010607,%eax
 7be:	06                   	(bad)  
 7bf:	00 02                	add    %al,(%rdx)
 7c1:	04 01                	add    $0x1,%al
 7c3:	08 12                	or     %dl,(%rdx)
 7c5:	05 03 06 4f 05       	add    $0x54f0603,%eax
 7ca:	2b 06                	sub    (%rsi),%eax
 7cc:	01 05 03 06 67 05    	add    %eax,0x5670603(%rip)        # 5670dd5 <_end+0x5645c45>
 7d2:	1c 06                	sbb    $0x6,%al
 7d4:	01 05 35 00 02 04    	add    %eax,0x4020035(%rip)        # 402080f <_end+0x3ff567f>
 7da:	01 82 05 06 00 02    	add    %eax,0x2000605(%rdx)
 7e0:	04 01                	add    $0x1,%al
 7e2:	3c 05                	cmp    $0x5,%al
 7e4:	08 03                	or     %al,(%rbx)
 7e6:	56                   	push   %rsi
 7e7:	74 05                	je     7ee <__ImageBase+0x7ee>
 7e9:	02 06                	add    (%rsi),%al
 7eb:	03 30                	add    (%rax),%esi
 7ed:	2e 06                	cs (bad) 
 7ef:	90                   	nop
 7f0:	06                   	(bad)  
 7f1:	5b                   	pop    %rbx
 7f2:	05 05 06 01 05       	add    $0x5010605,%eax
 7f7:	02 06                	add    (%rsi),%al
 7f9:	74 05                	je     800 <__ImageBase+0x800>
 7fb:	05 06 01 05 0b       	add    $0xb050106,%eax
 800:	03 6d 58             	add    0x58(%rbp),%ebp
 803:	05 14 00 02 04       	add    $0x4020014,%eax
 808:	01 06                	add    %eax,(%rsi)
 80a:	03 13                	add    (%rbx),%edx
 80c:	66 05 02 83          	add    $0x8302,%ax
 810:	05 05 06 01 05       	add    $0x5010605,%eax
 815:	18 00                	sbb    %al,(%rax)
 817:	02 04 01             	add    (%rcx,%rax,1),%al
 81a:	06                   	(bad)  
 81b:	58                   	pop    %rax
 81c:	05 02 9d 06 2e       	add    $0x2e069d02,%eax
 821:	06                   	(bad)  
 822:	82                   	(bad)  
 823:	05 05 06 01 66       	add    $0x66010605,%eax
 828:	05 0b 03 6d 74       	add    $0x746d030b,%eax
 82d:	05 01 03 16 66       	add    $0x66160301,%eax
 832:	06                   	(bad)  
 833:	03 b1 7f f2 06 01    	add    0x106f27f(%rcx),%esi
 839:	05 02 06 4b 13       	add    $0x134b0602,%eax
 83e:	05 05 06 01 05       	add    $0x5010605,%eax
 843:	02 06                	add    (%rsi),%al
 845:	59                   	pop    %rcx
 846:	05 01 06 0f 05       	add    $0x50f0601,%eax
 84b:	02 23                	add    (%rbx),%ah
 84d:	06                   	(bad)  
 84e:	59                   	pop    %rcx
 84f:	05 09 06 01 05       	add    $0x5010609,%eax
 854:	01 2f                	add    %ebp,(%rdi)
 856:	2e 06                	cs (bad) 
 858:	03 c7                	add    %edi,%eax
 85a:	02 66 06             	add    0x6(%rsi),%ah
 85d:	01 05 02 06 4b 13    	add    %eax,0x134b0602(%rip)        # 134b0e65 <_end+0x13485cd5>
 863:	05 01 06 10 05       	add    $0x5100601,%eax
 868:	27                   	(bad)  
 869:	e6 05                	out    %al,$0x5
 86b:	18 00                	sbb    %al,(%rax)
 86d:	02 04 01             	add    (%rcx,%rax,1),%al
 870:	58                   	pop    %rax
 871:	05 27 00 02 04       	add    $0x4020027,%eax
 876:	01 58 05             	add    %ebx,0x5(%rax)
 879:	02 06                	add    (%rsi),%al
 87b:	4c 13 13             	adc    (%rbx),%r10
 87e:	05 08 06 01 05       	add    $0x5010608,%eax
 883:	02 06                	add    (%rsi),%al
 885:	77 01                	ja     888 <__ImageBase+0x888>
 887:	00 02                	add    %al,(%rdx)
 889:	04 01                	add    $0x1,%al
 88b:	06                   	(bad)  
 88c:	58                   	pop    %rax
 88d:	05 06 00 02 04       	add    $0x4020006,%eax
 892:	01 68 05             	add    %ebp,0x5(%rax)
 895:	02 00                	add    (%rax),%al
 897:	02 04 01             	add    (%rcx,%rax,1),%al
 89a:	3a 00                	cmp    (%rax),%al
 89c:	02 04 03             	add    (%rbx,%rax,1),%al
 89f:	90                   	nop
 8a0:	05 06 00 02 04       	add    $0x4020006,%eax
 8a5:	02 a0 00 02 04 04    	add    0x4040200(%rax),%ah
 8ab:	3c 05                	cmp    $0x5,%al
 8ad:	05 00 02 04 08       	add    $0x8040200,%eax
 8b2:	4a 05 02 06 a1 05    	rex.WX add $0x5a10602,%rax
 8b8:	0a 06                	or     (%rsi),%al
 8ba:	01 58 05             	add    %ebx,0x5(%rax)
 8bd:	02 06                	add    (%rsi),%al
 8bf:	3d 05 05 06 01       	cmp    $0x1060505,%eax
 8c4:	05 08 00 02 04       	add    $0x4020008,%eax
 8c9:	01 57 05             	add    %edx,0x5(%rdi)
 8cc:	03 06                	add    (%rsi),%eax
 8ce:	76 59                	jbe    929 <__ImageBase+0x929>
 8d0:	05 0a 06 01 05       	add    $0x501060a,%eax
 8d5:	02 06                	add    (%rsi),%al
 8d7:	76 13                	jbe    8ec <__ImageBase+0x8ec>
 8d9:	05 21 06 01 4a       	add    $0x4a010621,%eax
 8de:	05 02 06 59 14       	add    $0x14590602,%eax
 8e3:	05 05 06 01 05       	add    $0x5010605,%eax
 8e8:	03 06                	add    (%rsi),%eax
 8ea:	59                   	pop    %rcx
 8eb:	05 07 06 01 05       	add    $0x5010607,%eax
 8f0:	06                   	(bad)  
 8f1:	00 02                	add    %al,(%rdx)
 8f3:	04 01                	add    $0x1,%al
 8f5:	08 66 05             	or     %ah,0x5(%rsi)
 8f8:	03 06                	add    (%rsi),%eax
 8fa:	4e 16                	rex.WRX (bad) 
 8fc:	05 07 06 01 05       	add    $0x5010607,%eax
 901:	06                   	(bad)  
 902:	00 02                	add    %al,(%rdx)
 904:	04 01                	add    $0x1,%al
 906:	08 2e                	or     %ch,(%rsi)
 908:	05 03 06 4e 05       	add    $0x54e0603,%eax
 90d:	22 06                	and    (%rsi),%al
 90f:	01 05 03 06 59 06    	add    %eax,0x6590603(%rip)        # 6590f18 <_end+0x6565d88>
 915:	01 06                	add    %eax,(%rsi)
 917:	30 05 0d 06 01 05    	xor    %al,0x501060d(%rip)        # 5010f2a <_end+0x4fe5d9a>
 91d:	02 06                	add    (%rsi),%al
 91f:	69 05 0b 06 01 05 02 	imul   $0x13d80602,0x501060b(%rip),%eax        # 5010f34 <_end+0x4fe5da4>
 926:	06 d8 13 
 929:	13 06                	adc    (%rsi),%eax
 92b:	58                   	pop    %rax
 92c:	06                   	(bad)  
 92d:	4b 05 01 06 13 58    	rex.WXB add $0x58130601,%rax
 933:	02 06                	add    (%rsi),%al
 935:	00 01                	add    %al,(%rcx)
 937:	01                   	.byte 0x1

Disassembly of section .debug_str:

0000000000000000 <.debug_str>:
   0:	53                   	push   %rbx
   1:	47 58                	rex.RXB pop %r8
   3:	5f                   	pop    %rdi
   4:	45 52                	rex.RB push %r10
   6:	52                   	push   %rdx
   7:	4f 52                	rex.WRXB push %r10
   9:	5f                   	pop    %rdi
   a:	55                   	push   %rbp
   b:	4e                   	rex.WRX
   c:	45 58                	rex.RB pop %r8
   e:	50                   	push   %rax
   f:	45                   	rex.RB
  10:	43 54                	rex.XB push %r12
  12:	45                   	rex.RB
  13:	44 00 53 47          	add    %r10b,0x47(%rbx)
  17:	58                   	pop    %rax
  18:	5f                   	pop    %rdi
  19:	45 52                	rex.RB push %r10
  1b:	52                   	push   %rdx
  1c:	4f 52                	rex.WRXB push %r10
  1e:	5f                   	pop    %rdi
  1f:	4d                   	rex.WRB
  20:	4f                   	rex.WRXB
  21:	44                   	rex.R
  22:	45 5f                	rex.RB pop %r15
  24:	49                   	rex.WB
  25:	4e                   	rex.WRX
  26:	43                   	rex.XB
  27:	4f                   	rex.WRXB
  28:	4d 50                	rex.WRB push %r8
  2a:	41 54                	push   %r12
  2c:	49                   	rex.WB
  2d:	42                   	rex.X
  2e:	4c                   	rex.WR
  2f:	45 00 53 47          	add    %r10b,0x47(%r11)
  33:	58                   	pop    %rax
  34:	5f                   	pop    %rdi
  35:	50                   	push   %rax
  36:	54                   	push   %rsp
  37:	48 52                	rex.W push %rdx
  39:	45                   	rex.RB
  3a:	41                   	rex.B
  3b:	44 5f                	rex.R pop %rdi
  3d:	45 58                	rex.RB pop %r8
  3f:	49 54                	rex.WB push %r12
  41:	00 53 47             	add    %dl,0x47(%rbx)
  44:	58                   	pop    %rax
  45:	5f                   	pop    %rdi
  46:	45 52                	rex.RB push %r10
  48:	52                   	push   %rdx
  49:	4f 52                	rex.WRXB push %r10
  4b:	5f                   	pop    %rdi
  4c:	4d                   	rex.WRB
  4d:	43 5f                	rex.XB pop %r15
  4f:	4e                   	rex.WRX
  50:	4f 54                	rex.WRXB push %r12
  52:	5f                   	pop    %rdi
  53:	46                   	rex.RX
  54:	4f 55                	rex.WRXB push %r13
  56:	4e                   	rex.WRX
  57:	44 00 73 74          	add    %r14b,0x74(%rbx)
  5b:	72 6e                	jb     cb <__ImageBase+0xcb>
  5d:	63 70 79             	movsxd 0x79(%rax),%esi
  60:	00 73 74             	add    %dh,0x74(%rbx)
  63:	6f                   	outsl  %ds:(%rsi),(%dx)
  64:	72 65                	jb     cb <__ImageBase+0xcb>
  66:	64 5f                	fs pop %rdi
  68:	70 61                	jo     cb <__ImageBase+0xcb>
  6a:	73 73                	jae    df <__ImageBase+0xdf>
  6c:	77 6f                	ja     dd <__ImageBase+0xdd>
  6e:	72 64                	jb     d4 <__ImageBase+0xd4>
  70:	73 00                	jae    72 <__ImageBase+0x72>
  72:	53                   	push   %rbx
  73:	47 58                	rex.RXB pop %r8
  75:	5f                   	pop    %rdi
  76:	45 52                	rex.RB push %r10
  78:	52                   	push   %rdx
  79:	4f 52                	rex.WRXB push %r10
  7b:	5f                   	pop    %rdi
  7c:	49                   	rex.WB
  7d:	4e 56                	rex.WRX push %rsi
  7f:	41                   	rex.B
  80:	4c                   	rex.WR
  81:	49                   	rex.WB
  82:	44 5f                	rex.R pop %rdi
  84:	45                   	rex.RB
  85:	4e                   	rex.WRX
  86:	43                   	rex.XB
  87:	4c                   	rex.WR
  88:	41 56                	push   %r14
  8a:	45 5f                	rex.RB pop %r15
  8c:	49                   	rex.WB
  8d:	44 00 53 47          	add    %r10b,0x47(%rbx)
  91:	58                   	pop    %rax
  92:	5f                   	pop    %rdi
  93:	45 52                	rex.RB push %r10
  95:	52                   	push   %rdx
  96:	4f 52                	rex.WRXB push %r10
  98:	5f                   	pop    %rdi
  99:	49                   	rex.WB
  9a:	4e 56                	rex.WRX push %rsi
  9c:	41                   	rex.B
  9d:	4c                   	rex.WR
  9e:	49                   	rex.WB
  9f:	44 5f                	rex.R pop %rdi
  a1:	53                   	push   %rbx
  a2:	49                   	rex.WB
  a3:	47                   	rex.RXB
  a4:	4e                   	rex.WRX
  a5:	41 54                	push   %r12
  a7:	55                   	push   %rbp
  a8:	52                   	push   %rdx
  a9:	45 00 53 47          	add    %r10b,0x47(%r11)
  ad:	58                   	pop    %rax
  ae:	5f                   	pop    %rdi
  af:	45 52                	rex.RB push %r10
  b1:	52                   	push   %rdx
  b2:	4f 52                	rex.WRXB push %r10
  b4:	5f                   	pop    %rdi
  b5:	55                   	push   %rbp
  b6:	4e 53                	rex.WRX push %rbx
  b8:	55                   	push   %rbp
  b9:	50                   	push   %rax
  ba:	50                   	push   %rax
  bb:	4f 52                	rex.WRXB push %r10
  bd:	54                   	push   %rsp
  be:	45                   	rex.RB
  bf:	44 5f                	rex.R pop %rdi
  c1:	43                   	rex.XB
  c2:	4f                   	rex.WRXB
  c3:	4e                   	rex.WRX
  c4:	46                   	rex.RX
  c5:	49                   	rex.WB
  c6:	47 00 53 47          	rex.RXB add %r10b,0x47(%r11)
  ca:	58                   	pop    %rax
  cb:	5f                   	pop    %rdi
  cc:	45 52                	rex.RB push %r10
  ce:	52                   	push   %rdx
  cf:	4f 52                	rex.WRXB push %r10
  d1:	5f                   	pop    %rdi
  d2:	45                   	rex.RB
  d3:	4e                   	rex.WRX
  d4:	43                   	rex.XB
  d5:	4c                   	rex.WR
  d6:	41 56                	push   %r14
  d8:	45 5f                	rex.RB pop %r15
  da:	46                   	rex.RX
  db:	49                   	rex.WB
  dc:	4c                   	rex.WR
  dd:	45 5f                	rex.RB pop %r15
  df:	41                   	rex.B
  e0:	43                   	rex.XB
  e1:	43                   	rex.XB
  e2:	45 53                	rex.RB push %r11
  e4:	53                   	push   %rbx
  e5:	00 6c 6f 6e          	add    %ch,0x6e(%rdi,%rbp,2)
  e9:	67 20 6c 6f 6e       	and    %ch,0x6e(%edi,%ebp,2)
  ee:	67 20 69 6e          	and    %ch,0x6e(%ecx)
  f2:	74 00                	je     f4 <__ImageBase+0xf4>
  f4:	53                   	push   %rbx
  f5:	47 58                	rex.RXB pop %r8
  f7:	5f                   	pop    %rdi
  f8:	45 52                	rex.RB push %r10
  fa:	52                   	push   %rdx
  fb:	4f 52                	rex.WRXB push %r10
  fd:	5f                   	pop    %rdi
  fe:	46                   	rex.RX
  ff:	49                   	rex.WB
 100:	4c                   	rex.WR
 101:	45 5f                	rex.RB pop %r15
 103:	4e                   	rex.WRX
 104:	4f 54                	rex.WRXB push %r12
 106:	5f                   	pop    %rdi
 107:	53                   	push   %rbx
 108:	47 58                	rex.RXB pop %r8
 10a:	5f                   	pop    %rdi
 10b:	46                   	rex.RX
 10c:	49                   	rex.WB
 10d:	4c                   	rex.WR
 10e:	45 00 53 47          	add    %r10b,0x47(%r11)
 112:	58                   	pop    %rax
 113:	5f                   	pop    %rdi
 114:	45 52                	rex.RB push %r10
 116:	52                   	push   %rdx
 117:	4f 52                	rex.WRXB push %r10
 119:	5f                   	pop    %rdi
 11a:	46                   	rex.RX
 11b:	49                   	rex.WB
 11c:	4c                   	rex.WR
 11d:	45 5f                	rex.RB pop %r15
 11f:	4e                   	rex.WRX
 120:	4f 5f                	rex.WRXB pop %r15
 122:	4b                   	rex.WXB
 123:	45 59                	rex.RB pop %r9
 125:	5f                   	pop    %rdi
 126:	49                   	rex.WB
 127:	44 00 53 47          	add    %r10b,0x47(%rbx)
 12b:	58                   	pop    %rax
 12c:	5f                   	pop    %rdi
 12d:	45 52                	rex.RB push %r10
 12f:	52                   	push   %rdx
 130:	4f 52                	rex.WRXB push %r10
 132:	5f                   	pop    %rdi
 133:	46                   	rex.RX
 134:	49                   	rex.WB
 135:	4c                   	rex.WR
 136:	45 5f                	rex.RB pop %r15
 138:	43                   	rex.XB
 139:	41                   	rex.B
 13a:	4e 54                	rex.WRX push %rsp
 13c:	5f                   	pop    %rdi
 13d:	57                   	push   %rdi
 13e:	52                   	push   %rdx
 13f:	49 54                	rex.WB push %r12
 141:	45 5f                	rex.RB pop %r15
 143:	52                   	push   %rdx
 144:	45                   	rex.RB
 145:	43                   	rex.XB
 146:	4f 56                	rex.WRXB push %r14
 148:	45 52                	rex.RB push %r10
 14a:	59                   	pop    %rcx
 14b:	5f                   	pop    %rdi
 14c:	46                   	rex.RX
 14d:	49                   	rex.WB
 14e:	4c                   	rex.WR
 14f:	45 00 53 47          	add    %r10b,0x47(%r11)
 153:	58                   	pop    %rax
 154:	5f                   	pop    %rdi
 155:	45 52                	rex.RB push %r10
 157:	52                   	push   %rdx
 158:	4f 52                	rex.WRXB push %r10
 15a:	5f                   	pop    %rdi
 15b:	4f 55                	rex.WRXB push %r13
 15d:	54                   	push   %rsp
 15e:	5f                   	pop    %rdi
 15f:	4f                   	rex.WRXB
 160:	46 5f                	rex.RX pop %rdi
 162:	54                   	push   %rsp
 163:	43 53                	rex.XB push %r11
 165:	00 53 47             	add    %dl,0x47(%rbx)
 168:	58                   	pop    %rax
 169:	5f                   	pop    %rdi
 16a:	45 52                	rex.RB push %r10
 16c:	52                   	push   %rdx
 16d:	4f 52                	rex.WRXB push %r10
 16f:	5f                   	pop    %rdi
 170:	49                   	rex.WB
 171:	4e 56                	rex.WRX push %rsi
 173:	41                   	rex.B
 174:	4c                   	rex.WR
 175:	49                   	rex.WB
 176:	44 5f                	rex.R pop %rdi
 178:	49 53                	rex.WB push %r11
 17a:	56                   	push   %rsi
 17b:	53                   	push   %rbx
 17c:	56                   	push   %rsi
 17d:	4e 00 53 47          	rex.WRX add %r10b,0x47(%rbx)
 181:	58                   	pop    %rax
 182:	5f                   	pop    %rdi
 183:	45 52                	rex.RB push %r10
 185:	52                   	push   %rdx
 186:	4f 52                	rex.WRXB push %r10
 188:	5f                   	pop    %rdi
 189:	50                   	push   %rax
 18a:	4c                   	rex.WR
 18b:	41 54                	push   %r12
 18d:	46                   	rex.RX
 18e:	4f 52                	rex.WRXB push %r10
 190:	4d 5f                	rex.WRB pop %r15
 192:	43                   	rex.XB
 193:	45 52                	rex.RB push %r10
 195:	54                   	push   %rsp
 196:	5f                   	pop    %rdi
 197:	55                   	push   %rbp
 198:	4e                   	rex.WRX
 199:	41 56                	push   %r14
 19b:	41                   	rex.B
 19c:	49                   	rex.WB
 19d:	4c                   	rex.WR
 19e:	41                   	rex.B
 19f:	42                   	rex.X
 1a0:	4c                   	rex.WR
 1a1:	45 00 53 47          	add    %r10b,0x47(%r11)
 1a5:	58                   	pop    %rax
 1a6:	5f                   	pop    %rdi
 1a7:	45 52                	rex.RB push %r10
 1a9:	52                   	push   %rdx
 1aa:	4f 52                	rex.WRXB push %r10
 1ac:	5f                   	pop    %rdi
 1ad:	46                   	rex.RX
 1ae:	49                   	rex.WB
 1af:	4c                   	rex.WR
 1b0:	45 5f                	rex.RB pop %r15
 1b2:	43                   	rex.XB
 1b3:	4c                   	rex.WR
 1b4:	4f 53                	rex.WRXB push %r11
 1b6:	45 5f                	rex.RB pop %r15
 1b8:	46                   	rex.RX
 1b9:	41                   	rex.B
 1ba:	49                   	rex.WB
 1bb:	4c                   	rex.WR
 1bc:	45                   	rex.RB
 1bd:	44 00 69 6e          	add    %r13b,0x6e(%rcx)
 1c1:	69 74 69 61 6c 5f 6d 	imul   $0x616d5f6c,0x61(%rcx,%rbp,2),%esi
 1c8:	61 
 1c9:	73 74                	jae    23f <__ImageBase+0x23f>
 1cb:	65 72 70             	gs jb  23e <__ImageBase+0x23e>
 1ce:	77 00                	ja     1d0 <__ImageBase+0x1d0>
 1d0:	53                   	push   %rbx
 1d1:	47 58                	rex.RXB pop %r8
 1d3:	5f                   	pop    %rdi
 1d4:	45 52                	rex.RB push %r10
 1d6:	52                   	push   %rdx
 1d7:	4f 52                	rex.WRXB push %r10
 1d9:	5f                   	pop    %rdi
 1da:	4d                   	rex.WRB
 1db:	45                   	rex.RB
 1dc:	4d                   	rex.WRB
 1dd:	4f 52                	rex.WRXB push %r10
 1df:	59                   	pop    %rcx
 1e0:	5f                   	pop    %rdi
 1e1:	4d                   	rex.WRB
 1e2:	41 50                	push   %r8
 1e4:	5f                   	pop    %rdi
 1e5:	46                   	rex.RX
 1e6:	41                   	rex.B
 1e7:	49                   	rex.WB
 1e8:	4c 55                	rex.WR push %rbp
 1ea:	52                   	push   %rdx
 1eb:	45 00 64 6f 75       	add    %r12b,0x75(%r15,%rbp,2)
 1f0:	62                   	(bad)  
 1f1:	6c                   	insb   (%dx),%es:(%rdi)
 1f2:	65 00 53 47          	add    %dl,%gs:0x47(%rbx)
 1f6:	58                   	pop    %rax
 1f7:	5f                   	pop    %rdi
 1f8:	45 52                	rex.RB push %r10
 1fa:	52                   	push   %rdx
 1fb:	4f 52                	rex.WRXB push %r10
 1fd:	5f                   	pop    %rdi
 1fe:	55                   	push   %rbp
 1ff:	4e                   	rex.WRX
 200:	44                   	rex.R
 201:	45                   	rex.RB
 202:	46                   	rex.RX
 203:	49                   	rex.WB
 204:	4e                   	rex.WRX
 205:	45                   	rex.RB
 206:	44 5f                	rex.R pop %rdi
 208:	53                   	push   %rbx
 209:	59                   	pop    %rcx
 20a:	4d                   	rex.WRB
 20b:	42                   	rex.X
 20c:	4f                   	rex.WRXB
 20d:	4c 00 53 47          	rex.WR add %r10b,0x47(%rbx)
 211:	58                   	pop    %rax
 212:	5f                   	pop    %rdi
 213:	45 52                	rex.RB push %r10
 215:	52                   	push   %rdx
 216:	4f 52                	rex.WRXB push %r10
 218:	5f                   	pop    %rdi
 219:	49                   	rex.WB
 21a:	4e 56                	rex.WRX push %rsi
 21c:	41                   	rex.B
 21d:	4c                   	rex.WR
 21e:	49                   	rex.WB
 21f:	44 5f                	rex.R pop %rdi
 221:	45                   	rex.RB
 222:	4e                   	rex.WRX
 223:	43                   	rex.XB
 224:	4c                   	rex.WR
 225:	41 56                	push   %r14
 227:	45 00 53 47          	add    %r10b,0x47(%r11)
 22b:	58                   	pop    %rax
 22c:	5f                   	pop    %rdi
 22d:	45 52                	rex.RB push %r10
 22f:	52                   	push   %rdx
 230:	4f 52                	rex.WRXB push %r10
 232:	5f                   	pop    %rdi
 233:	45                   	rex.RB
 234:	43                   	rex.XB
 235:	41                   	rex.B
 236:	4c                   	rex.WR
 237:	4c 5f                	rex.WR pop %rdi
 239:	4e                   	rex.WRX
 23a:	4f 54                	rex.WRXB push %r12
 23c:	5f                   	pop    %rdi
 23d:	41                   	rex.B
 23e:	4c                   	rex.WR
 23f:	4c                   	rex.WR
 240:	4f 57                	rex.WRXB push %r15
 242:	45                   	rex.RB
 243:	44 00 53 47          	add    %r10b,0x47(%rbx)
 247:	58                   	pop    %rax
 248:	5f                   	pop    %rdi
 249:	45 52                	rex.RB push %r10
 24b:	52                   	push   %rdx
 24c:	4f 52                	rex.WRXB push %r10
 24e:	5f                   	pop    %rdi
 24f:	49                   	rex.WB
 250:	4e 56                	rex.WRX push %rsi
 252:	41                   	rex.B
 253:	4c                   	rex.WR
 254:	49                   	rex.WB
 255:	44 5f                	rex.R pop %rdi
 257:	4d                   	rex.WRB
 258:	45 54                	rex.RB push %r12
 25a:	41                   	rex.B
 25b:	44                   	rex.R
 25c:	41 54                	push   %r12
 25e:	41 00 5f 5f          	add    %bl,0x5f(%r15)
 262:	73 69                	jae    2cd <__ImageBase+0x2cd>
 264:	7a 65                	jp     2cb <__ImageBase+0x2cb>
 266:	5f                   	pop    %rdi
 267:	74 00                	je     269 <__ImageBase+0x269>
 269:	53                   	push   %rbx
 26a:	47 58                	rex.RXB pop %r8
 26c:	5f                   	pop    %rdi
 26d:	45 52                	rex.RB push %r10
 26f:	52                   	push   %rdx
 270:	4f 52                	rex.WRXB push %r10
 272:	5f                   	pop    %rdi
 273:	4d                   	rex.WRB
 274:	43 5f                	rex.XB pop %r15
 276:	4e                   	rex.WRX
 277:	4f 5f                	rex.WRXB pop %r15
 279:	41                   	rex.B
 27a:	43                   	rex.XB
 27b:	43                   	rex.XB
 27c:	45 53                	rex.RB push %r11
 27e:	53                   	push   %rbx
 27f:	5f                   	pop    %rdi
 280:	52                   	push   %rdx
 281:	49                   	rex.WB
 282:	47                   	rex.RXB
 283:	48 54                	rex.W push %rsp
 285:	00 53 47             	add    %dl,0x47(%rbx)
 288:	58                   	pop    %rax
 289:	5f                   	pop    %rdi
 28a:	45 52                	rex.RB push %r10
 28c:	52                   	push   %rdx
 28d:	4f 52                	rex.WRXB push %r10
 28f:	5f                   	pop    %rdi
 290:	53                   	push   %rbx
 291:	45 52                	rex.RB push %r10
 293:	56                   	push   %rsi
 294:	49                   	rex.WB
 295:	43                   	rex.XB
 296:	45 5f                	rex.RB pop %r15
 298:	54                   	push   %rsp
 299:	49                   	rex.WB
 29a:	4d                   	rex.WRB
 29b:	45                   	rex.RB
 29c:	4f 55                	rex.WRXB push %r13
 29e:	54                   	push   %rsp
 29f:	00 6c 6f 6e          	add    %ch,0x6e(%rdi,%rbp,2)
 2a3:	67 20 75 6e          	and    %dh,0x6e(%ebp)
 2a7:	73 69                	jae    312 <__ImageBase+0x312>
 2a9:	67 6e                	outsb  %ds:(%esi),(%dx)
 2ab:	65 64 20 69 6e       	gs and %ch,%fs:0x6e(%rcx)
 2b0:	74 00                	je     2b2 <__ImageBase+0x2b2>
 2b2:	70 72                	jo     326 <__ImageBase+0x326>
 2b4:	69 6e 74 5f 73 74 72 	imul   $0x7274735f,0x74(%rsi),%ebp
 2bb:	00 53 47             	add    %dl,0x47(%rbx)
 2be:	58                   	pop    %rax
 2bf:	5f                   	pop    %rdi
 2c0:	45 52                	rex.RB push %r10
 2c2:	52                   	push   %rdx
 2c3:	4f 52                	rex.WRXB push %r10
 2c5:	5f                   	pop    %rdi
 2c6:	50                   	push   %rax
 2c7:	43                   	rex.XB
 2c8:	4c 5f                	rex.WR pop %rdi
 2ca:	53                   	push   %rbx
 2cb:	48                   	rex.W
 2cc:	41 5f                	pop    %r15
 2ce:	4d                   	rex.WRB
 2cf:	49 53                	rex.WB push %r11
 2d1:	4d                   	rex.WRB
 2d2:	41 54                	push   %r12
 2d4:	43                   	rex.XB
 2d5:	48 00 53 47          	rex.W add %dl,0x47(%rbx)
 2d9:	58                   	pop    %rax
 2da:	5f                   	pop    %rdi
 2db:	45 52                	rex.RB push %r10
 2dd:	52                   	push   %rdx
 2de:	4f 52                	rex.WRXB push %r10
 2e0:	5f                   	pop    %rdi
 2e1:	49                   	rex.WB
 2e2:	4e 56                	rex.WRX push %rsi
 2e4:	41                   	rex.B
 2e5:	4c                   	rex.WR
 2e6:	49                   	rex.WB
 2e7:	44 5f                	rex.R pop %rdi
 2e9:	43 50                	rex.XB push %r8
 2eb:	55                   	push   %rbp
 2ec:	53                   	push   %rbx
 2ed:	56                   	push   %rsi
 2ee:	4e 00 73 68          	rex.WRX add %r14b,0x68(%rbx)
 2f2:	6f                   	outsl  %ds:(%rsi),(%dx)
 2f3:	72 74                	jb     369 <__ImageBase+0x369>
 2f5:	20 75 6e             	and    %dh,0x6e(%rbp)
 2f8:	73 69                	jae    363 <__ImageBase+0x363>
 2fa:	67 6e                	outsb  %ds:(%esi),(%dx)
 2fc:	65 64 20 69 6e       	gs and %ch,%fs:0x6e(%rcx)
 301:	74 00                	je     303 <__ImageBase+0x303>
 303:	53                   	push   %rbx
 304:	47 58                	rex.RXB pop %r8
 306:	5f                   	pop    %rdi
 307:	45 52                	rex.RB push %r10
 309:	52                   	push   %rdx
 30a:	4f 52                	rex.WRXB push %r10
 30c:	5f                   	pop    %rdi
 30d:	46                   	rex.RX
 30e:	49                   	rex.WB
 30f:	4c                   	rex.WR
 310:	45 5f                	rex.RB pop %r15
 312:	42                   	rex.X
 313:	41                   	rex.B
 314:	44 5f                	rex.R pop %rdi
 316:	53                   	push   %rbx
 317:	54                   	push   %rsp
 318:	41 54                	push   %r12
 31a:	55                   	push   %rbp
 31b:	53                   	push   %rbx
 31c:	00 47 4e             	add    %al,0x4e(%rdi)
 31f:	55                   	push   %rbp
 320:	20 43 31             	and    %al,0x31(%rbx)
 323:	37                   	(bad)  
 324:	20 31                	and    %dh,(%rcx)
 326:	33 2e                	xor    (%rsi),%ebp
 328:	33 2e                	xor    (%rsi),%ebp
 32a:	30 20                	xor    %ah,(%rax)
 32c:	2d 6d 74 75 6e       	sub    $0x6e75746d,%eax
 331:	65 3d 67 65 6e 65    	gs cmp $0x656e6567,%eax
 337:	72 69                	jb     3a2 <__ImageBase+0x3a2>
 339:	63 20                	movsxd (%rax),%esp
 33b:	2d 6d 61 72 63       	sub    $0x6372616d,%eax
 340:	68 3d 78 38 36       	push   $0x3638783d
 345:	2d 36 34 20 2d       	sub    $0x2d203436,%eax
 34a:	67 20 2d 4f 73 20 2d 	and    %ch,0x2d20734f(%eip)        # 2d2076a0 <_end+0x2d1dc510>
 351:	66 76 69             	data16 jbe 3bd <__ImageBase+0x3bd>
 354:	73 69                	jae    3bf <__ImageBase+0x3bf>
 356:	62                   	(bad)  
 357:	69 6c 69 74 79 3d 68 	imul   $0x69683d79,0x74(%rcx,%rbp,2),%ebp
 35e:	69 
 35f:	64 64 65 6e          	fs fs outsb %gs:(%rsi),(%dx)
 363:	20 2d 66 70 69 65    	and    %ch,0x65697066(%rip)        # 656973cf <_end+0x6566c23f>
 369:	20 2d 66 73 74 61    	and    %ch,0x61747366(%rip)        # 617476d5 <_end+0x6171c545>
 36f:	63 6b 2d             	movsxd 0x2d(%rbx),%ebp
 372:	70 72                	jo     3e6 <__ImageBase+0x3e6>
 374:	6f                   	outsl  %ds:(%rsi),(%dx)
 375:	74 65                	je     3dc <__ImageBase+0x3dc>
 377:	63 74 6f 72          	movsxd 0x72(%rdi,%rbp,2),%esi
 37b:	20 2d 66 61 73 79    	and    %ch,0x79736166(%rip)        # 797364e7 <_end+0x7970b357>
 381:	6e                   	outsb  %ds:(%rsi),(%dx)
 382:	63 68 72             	movsxd 0x72(%rax),%ebp
 385:	6f                   	outsl  %ds:(%rsi),(%dx)
 386:	6e                   	outsb  %ds:(%rsi),(%dx)
 387:	6f                   	outsl  %ds:(%rsi),(%dx)
 388:	75 73                	jne    3fd <__ImageBase+0x3fd>
 38a:	2d 75 6e 77 69       	sub    $0x69776e75,%eax
 38f:	6e                   	outsb  %ds:(%rsi),(%dx)
 390:	64 2d 74 61 62 6c    	fs sub $0x6c626174,%eax
 396:	65 73 20             	gs jae 3b9 <__ImageBase+0x3b9>
 399:	2d 66 73 74 61       	sub    $0x61747366,%eax
 39e:	63 6b 2d             	movsxd 0x2d(%rbx),%ebp
 3a1:	63 6c 61 73          	movsxd 0x73(%rcx,%riz,2),%ebp
 3a5:	68 2d 70 72 6f       	push   $0x6f72702d
 3aa:	74 65                	je     411 <__ImageBase+0x411>
 3ac:	63 74 69 6f          	movsxd 0x6f(%rcx,%rbp,2),%esi
 3b0:	6e                   	outsb  %ds:(%rsi),(%dx)
 3b1:	20 2d 66 63 66 2d    	and    %ch,0x2d666366(%rip)        # 2d66671d <_end+0x2d63b58d>
 3b7:	70 72                	jo     42b <__ImageBase+0x42b>
 3b9:	6f                   	outsl  %ds:(%rsi),(%dx)
 3ba:	74 65                	je     421 <__ImageBase+0x421>
 3bc:	63 74 69 6f          	movsxd 0x6f(%rcx,%rbp,2),%esi
 3c0:	6e                   	outsb  %ds:(%rsi),(%dx)
 3c1:	00 53 47             	add    %dl,0x47(%rbx)
 3c4:	58                   	pop    %rax
 3c5:	5f                   	pop    %rdi
 3c6:	45 52                	rex.RB push %r10
 3c8:	52                   	push   %rdx
 3c9:	4f 52                	rex.WRXB push %r10
 3cb:	5f                   	pop    %rdi
 3cc:	55                   	push   %rbp
 3cd:	4e 52                	rex.WRX push %rdx
 3cf:	45                   	rex.RB
 3d0:	43                   	rex.XB
 3d1:	4f                   	rex.WRXB
 3d2:	47                   	rex.RXB
 3d3:	4e                   	rex.WRX
 3d4:	49 5a                	rex.WB pop %r10
 3d6:	45                   	rex.RB
 3d7:	44 5f                	rex.R pop %rdi
 3d9:	50                   	push   %rax
 3da:	4c                   	rex.WR
 3db:	41 54                	push   %r12
 3dd:	46                   	rex.RX
 3de:	4f 52                	rex.WRXB push %r10
 3e0:	4d 00 53 47          	rex.WRB add %r10b,0x47(%r11)
 3e4:	58                   	pop    %rax
 3e5:	5f                   	pop    %rdi
 3e6:	45 52                	rex.RB push %r10
 3e8:	52                   	push   %rdx
 3e9:	4f 52                	rex.WRXB push %r10
 3eb:	5f                   	pop    %rdi
 3ec:	46                   	rex.RX
 3ed:	49                   	rex.WB
 3ee:	4c                   	rex.WR
 3ef:	45 5f                	rex.RB pop %r15
 3f1:	46                   	rex.RX
 3f2:	4c 55                	rex.WR push %rbp
 3f4:	53                   	push   %rbx
 3f5:	48 5f                	rex.W pop %rdi
 3f7:	46                   	rex.RX
 3f8:	41                   	rex.B
 3f9:	49                   	rex.WB
 3fa:	4c                   	rex.WR
 3fb:	45                   	rex.RB
 3fc:	44 00 53 47          	add    %r10b,0x47(%rbx)
 400:	58                   	pop    %rax
 401:	5f                   	pop    %rdi
 402:	45 52                	rex.RB push %r10
 404:	52                   	push   %rdx
 405:	4f 52                	rex.WRXB push %r10
 407:	5f                   	pop    %rdi
 408:	42 55                	rex.X push %rbp
 40a:	53                   	push   %rbx
 40b:	59                   	pop    %rcx
 40c:	00 6c 61 62          	add    %ch,0x62(%rcx,%riz,2)
 410:	65 6c                	gs insb (%dx),%es:(%rdi)
 412:	00 53 47             	add    %dl,0x47(%rbx)
 415:	58                   	pop    %rax
 416:	5f                   	pop    %rdi
 417:	45 52                	rex.RB push %r10
 419:	52                   	push   %rdx
 41a:	4f 52                	rex.WRXB push %r10
 41c:	5f                   	pop    %rdi
 41d:	4d                   	rex.WRB
 41e:	43 5f                	rex.XB pop %r15
 420:	4f 56                	rex.WRXB push %r14
 422:	45 52                	rex.RB push %r10
 424:	5f                   	pop    %rdi
 425:	51                   	push   %rcx
 426:	55                   	push   %rbp
 427:	4f 54                	rex.WRXB push %r12
 429:	41 00 53 47          	add    %dl,0x47(%r11)
 42d:	58                   	pop    %rax
 42e:	5f                   	pop    %rdi
 42f:	45 52                	rex.RB push %r10
 431:	52                   	push   %rdx
 432:	4f 52                	rex.WRXB push %r10
 434:	5f                   	pop    %rdi
 435:	45 50                	rex.RB push %r8
 437:	49                   	rex.WB
 438:	44 5f                	rex.R pop %rdi
 43a:	4d                   	rex.WRB
 43b:	45                   	rex.RB
 43c:	4d                   	rex.WRB
 43d:	42                   	rex.X
 43e:	45 52                	rex.RB push %r10
 440:	5f                   	pop    %rdi
 441:	52                   	push   %rdx
 442:	45 56                	rex.RB push %r14
 444:	4f                   	rex.WRXB
 445:	4b                   	rex.WXB
 446:	45                   	rex.RB
 447:	44 00 53 47          	add    %r10b,0x47(%rbx)
 44b:	58                   	pop    %rax
 44c:	5f                   	pop    %rdi
 44d:	45 52                	rex.RB push %r10
 44f:	52                   	push   %rdx
 450:	4f 52                	rex.WRXB push %r10
 452:	5f                   	pop    %rdi
 453:	46                   	rex.RX
 454:	49                   	rex.WB
 455:	4c                   	rex.WR
 456:	45 5f                	rex.RB pop %r15
 458:	52                   	push   %rdx
 459:	45                   	rex.RB
 45a:	43                   	rex.XB
 45b:	4f 56                	rex.WRXB push %r14
 45d:	45 52                	rex.RB push %r10
 45f:	59                   	pop    %rcx
 460:	5f                   	pop    %rdi
 461:	4e                   	rex.WRX
 462:	45                   	rex.RB
 463:	45                   	rex.RB
 464:	44                   	rex.R
 465:	45                   	rex.RB
 466:	44 00 53 47          	add    %r10b,0x47(%rbx)
 46a:	58                   	pop    %rax
 46b:	5f                   	pop    %rdi
 46c:	45 52                	rex.RB push %r10
 46e:	52                   	push   %rdx
 46f:	4f 52                	rex.WRXB push %r10
 471:	5f                   	pop    %rdi
 472:	53                   	push   %rbx
 473:	45 52                	rex.RB push %r10
 475:	56                   	push   %rsi
 476:	49                   	rex.WB
 477:	43                   	rex.XB
 478:	45 5f                	rex.RB pop %r15
 47a:	55                   	push   %rbp
 47b:	4e                   	rex.WRX
 47c:	41 56                	push   %r14
 47e:	41                   	rex.B
 47f:	49                   	rex.WB
 480:	4c                   	rex.WR
 481:	41                   	rex.B
 482:	42                   	rex.X
 483:	4c                   	rex.WR
 484:	45 00 70 77          	add    %r14b,0x77(%r8)
 488:	5f                   	pop    %rdi
 489:	63 6f 75             	movsxd 0x75(%rdi),%ebp
 48c:	6e                   	outsb  %ds:(%rsi),(%dx)
 48d:	74 00                	je     48f <__ImageBase+0x48f>
 48f:	53                   	push   %rbx
 490:	47 58                	rex.RXB pop %r8
 492:	5f                   	pop    %rdi
 493:	45 52                	rex.RB push %r10
 495:	52                   	push   %rdx
 496:	4f 52                	rex.WRXB push %r10
 498:	5f                   	pop    %rdi
 499:	41 54                	push   %r12
 49b:	54                   	push   %rsp
 49c:	5f                   	pop    %rdi
 49d:	4b                   	rex.WXB
 49e:	45 59                	rex.RB pop %r9
 4a0:	5f                   	pop    %rdi
 4a1:	55                   	push   %rbp
 4a2:	4e                   	rex.WRX
 4a3:	49                   	rex.WB
 4a4:	4e                   	rex.WRX
 4a5:	49 54                	rex.WB push %r12
 4a7:	49                   	rex.WB
 4a8:	41                   	rex.B
 4a9:	4c                   	rex.WR
 4aa:	49 5a                	rex.WB pop %r10
 4ac:	45                   	rex.RB
 4ad:	44 00 53 47          	add    %r10b,0x47(%rbx)
 4b1:	58                   	pop    %rax
 4b2:	5f                   	pop    %rdi
 4b3:	45 52                	rex.RB push %r10
 4b5:	52                   	push   %rdx
 4b6:	4f 52                	rex.WRXB push %r10
 4b8:	5f                   	pop    %rdi
 4b9:	50                   	push   %rax
 4ba:	43                   	rex.XB
 4bb:	4c 5f                	rex.WR pop %rdi
 4bd:	4e                   	rex.WRX
 4be:	4f 54                	rex.WRXB push %r12
 4c0:	5f                   	pop    %rdi
 4c1:	45                   	rex.RB
 4c2:	4e                   	rex.WRX
 4c3:	43 52                	rex.XB push %r10
 4c5:	59                   	pop    %rcx
 4c6:	50                   	push   %rax
 4c7:	54                   	push   %rsp
 4c8:	45                   	rex.RB
 4c9:	44 00 53 47          	add    %r10b,0x47(%rbx)
 4cd:	58                   	pop    %rax
 4ce:	5f                   	pop    %rdi
 4cf:	45 52                	rex.RB push %r10
 4d1:	52                   	push   %rdx
 4d2:	4f 52                	rex.WRXB push %r10
 4d4:	5f                   	pop    %rdi
 4d5:	41                   	rex.B
 4d6:	45 5f                	rex.RB pop %r15
 4d8:	49                   	rex.WB
 4d9:	4e 56                	rex.WRX push %rsi
 4db:	41                   	rex.B
 4dc:	4c                   	rex.WR
 4dd:	49                   	rex.WB
 4de:	44 5f                	rex.R pop %rdi
 4e0:	45 50                	rex.RB push %r8
 4e2:	49                   	rex.WB
 4e3:	44                   	rex.R
 4e4:	42                   	rex.X
 4e5:	4c                   	rex.WR
 4e6:	4f                   	rex.WRXB
 4e7:	42 00 53 47          	rex.X add %dl,0x47(%rbx)
 4eb:	58                   	pop    %rax
 4ec:	5f                   	pop    %rdi
 4ed:	49                   	rex.WB
 4ee:	4e 54                	rex.WRX push %rsp
 4f0:	45 52                	rex.RB push %r10
 4f2:	4e                   	rex.WRX
 4f3:	41                   	rex.B
 4f4:	4c 5f                	rex.WR pop %rdi
 4f6:	45 52                	rex.RB push %r10
 4f8:	52                   	push   %rdx
 4f9:	4f 52                	rex.WRXB push %r10
 4fb:	5f                   	pop    %rdi
 4fc:	45                   	rex.RB
 4fd:	4e                   	rex.WRX
 4fe:	43                   	rex.XB
 4ff:	4c                   	rex.WR
 500:	41 56                	push   %r14
 502:	45 5f                	rex.RB pop %r15
 504:	43 52                	rex.XB push %r10
 506:	45                   	rex.RB
 507:	41 54                	push   %r12
 509:	45 5f                	rex.RB pop %r15
 50b:	49                   	rex.WB
 50c:	4e 54                	rex.WRX push %rsp
 50e:	45 52                	rex.RB push %r10
 510:	52                   	push   %rdx
 511:	55                   	push   %rbp
 512:	50                   	push   %rax
 513:	54                   	push   %rsp
 514:	45                   	rex.RB
 515:	44 00 53 47          	add    %r10b,0x47(%rbx)
 519:	58                   	pop    %rax
 51a:	5f                   	pop    %rdi
 51b:	45 52                	rex.RB push %r10
 51d:	52                   	push   %rdx
 51e:	4f 52                	rex.WRXB push %r10
 520:	5f                   	pop    %rdi
 521:	49                   	rex.WB
 522:	4e 56                	rex.WRX push %rsi
 524:	41                   	rex.B
 525:	4c                   	rex.WR
 526:	49                   	rex.WB
 527:	44 5f                	rex.R pop %rdi
 529:	41 54                	push   %r12
 52b:	54                   	push   %rsp
 52c:	52                   	push   %rdx
 52d:	49                   	rex.WB
 52e:	42 55                	rex.X push %rbp
 530:	54                   	push   %rsp
 531:	45 00 53 47          	add    %r10b,0x47(%r11)
 535:	58                   	pop    %rax
 536:	5f                   	pop    %rdi
 537:	45 52                	rex.RB push %r10
 539:	52                   	push   %rdx
 53a:	4f 52                	rex.WRXB push %r10
 53c:	5f                   	pop    %rdi
 53d:	46                   	rex.RX
 53e:	49                   	rex.WB
 53f:	4c                   	rex.WR
 540:	45 5f                	rex.RB pop %r15
 542:	43                   	rex.XB
 543:	41                   	rex.B
 544:	4e 54                	rex.WRX push %rsp
 546:	5f                   	pop    %rdi
 547:	4f 50                	rex.WRXB push %r8
 549:	45                   	rex.RB
 54a:	4e 5f                	rex.WRX pop %rdi
 54c:	52                   	push   %rdx
 54d:	45                   	rex.RB
 54e:	43                   	rex.XB
 54f:	4f 56                	rex.WRXB push %r14
 551:	45 52                	rex.RB push %r10
 553:	59                   	pop    %rcx
 554:	5f                   	pop    %rdi
 555:	46                   	rex.RX
 556:	49                   	rex.WB
 557:	4c                   	rex.WR
 558:	45 00 53 47          	add    %r10b,0x47(%r11)
 55c:	58                   	pop    %rax
 55d:	5f                   	pop    %rdi
 55e:	45 52                	rex.RB push %r10
 560:	52                   	push   %rdx
 561:	4f 52                	rex.WRXB push %r10
 563:	5f                   	pop    %rdi
 564:	50                   	push   %rax
 565:	43                   	rex.XB
 566:	4c 5f                	rex.WR pop %rdi
 568:	45                   	rex.RB
 569:	4e                   	rex.WRX
 56a:	43 52                	rex.XB push %r10
 56c:	59                   	pop    %rcx
 56d:	50                   	push   %rax
 56e:	54                   	push   %rsp
 56f:	45                   	rex.RB
 570:	44 00 53 47          	add    %r10b,0x47(%rbx)
 574:	58                   	pop    %rax
 575:	5f                   	pop    %rdi
 576:	45 52                	rex.RB push %r10
 578:	52                   	push   %rdx
 579:	4f 52                	rex.WRXB push %r10
 57b:	5f                   	pop    %rdi
 57c:	41                   	rex.B
 57d:	45 5f                	rex.RB pop %r15
 57f:	53                   	push   %rbx
 580:	45 53                	rex.RB push %r11
 582:	53                   	push   %rbx
 583:	49                   	rex.WB
 584:	4f                   	rex.WRXB
 585:	4e 5f                	rex.WRX pop %rdi
 587:	49                   	rex.WB
 588:	4e 56                	rex.WRX push %rsi
 58a:	41                   	rex.B
 58b:	4c                   	rex.WR
 58c:	49                   	rex.WB
 58d:	44 00 53 47          	add    %r10b,0x47(%rbx)
 591:	58                   	pop    %rax
 592:	5f                   	pop    %rdi
 593:	45 52                	rex.RB push %r10
 595:	52                   	push   %rdx
 596:	4f 52                	rex.WRXB push %r10
 598:	5f                   	pop    %rdi
 599:	49                   	rex.WB
 59a:	4e 56                	rex.WRX push %rsi
 59c:	41                   	rex.B
 59d:	4c                   	rex.WR
 59e:	49                   	rex.WB
 59f:	44 5f                	rex.R pop %rdi
 5a1:	53                   	push   %rbx
 5a2:	54                   	push   %rsp
 5a3:	41 54                	push   %r12
 5a5:	45 00 53 47          	add    %r10b,0x47(%r11)
 5a9:	58                   	pop    %rax
 5aa:	5f                   	pop    %rdi
 5ab:	45 52                	rex.RB push %r10
 5ad:	52                   	push   %rdx
 5ae:	4f 52                	rex.WRXB push %r10
 5b0:	5f                   	pop    %rdi
 5b1:	45                   	rex.RB
 5b2:	4e                   	rex.WRX
 5b3:	43                   	rex.XB
 5b4:	4c                   	rex.WR
 5b5:	41 56                	push   %r14
 5b7:	45 5f                	rex.RB pop %r15
 5b9:	43 52                	rex.XB push %r10
 5bb:	41 53                	push   %r11
 5bd:	48                   	rex.W
 5be:	45                   	rex.RB
 5bf:	44 00 53 47          	add    %r10b,0x47(%rbx)
 5c3:	58                   	pop    %rax
 5c4:	5f                   	pop    %rdi
 5c5:	45 52                	rex.RB push %r10
 5c7:	52                   	push   %rdx
 5c8:	4f 52                	rex.WRXB push %r10
 5ca:	5f                   	pop    %rdi
 5cb:	44                   	rex.R
 5cc:	45 56                	rex.RB push %r14
 5ce:	49                   	rex.WB
 5cf:	43                   	rex.XB
 5d0:	45 5f                	rex.RB pop %r15
 5d2:	42 55                	rex.X push %rbp
 5d4:	53                   	push   %rbx
 5d5:	59                   	pop    %rcx
 5d6:	00 53 47             	add    %dl,0x47(%rbx)
 5d9:	58                   	pop    %rax
 5da:	5f                   	pop    %rdi
 5db:	45 52                	rex.RB push %r10
 5dd:	52                   	push   %rdx
 5de:	4f 52                	rex.WRXB push %r10
 5e0:	5f                   	pop    %rdi
 5e1:	4f 55                	rex.WRXB push %r13
 5e3:	54                   	push   %rsp
 5e4:	5f                   	pop    %rdi
 5e5:	4f                   	rex.WRXB
 5e6:	46 5f                	rex.RX pop %rdi
 5e8:	45 50                	rex.RB push %r8
 5ea:	43 00 73 67          	rex.XB add %sil,0x67(%r11)
 5ee:	78 5f                	js     64f <__ImageBase+0x64f>
 5f0:	73 74                	jae    666 <__ImageBase+0x666>
 5f2:	61                   	(bad)  
 5f3:	74 75                	je     66a <__ImageBase+0x66a>
 5f5:	73 5f                	jae    656 <__ImageBase+0x656>
 5f7:	74 00                	je     5f9 <__ImageBase+0x5f9>
 5f9:	66 6c                	data16 insb (%dx),%es:(%rdi)
 5fb:	6f                   	outsl  %ds:(%rsi),(%dx)
 5fc:	61                   	(bad)  
 5fd:	74 00                	je     5ff <__ImageBase+0x5ff>
 5ff:	53                   	push   %rbx
 600:	47 58                	rex.RXB pop %r8
 602:	5f                   	pop    %rdi
 603:	53                   	push   %rbx
 604:	55                   	push   %rbp
 605:	43                   	rex.XB
 606:	43                   	rex.XB
 607:	45 53                	rex.RB push %r11
 609:	53                   	push   %rbx
 60a:	00 53 47             	add    %dl,0x47(%rbx)
 60d:	58                   	pop    %rax
 60e:	5f                   	pop    %rdi
 60f:	45 52                	rex.RB push %r10
 611:	52                   	push   %rdx
 612:	4f 52                	rex.WRXB push %r10
 614:	5f                   	pop    %rdi
 615:	4e                   	rex.WRX
 616:	4f 5f                	rex.WRXB pop %r15
 618:	50                   	push   %rax
 619:	52                   	push   %rdx
 61a:	49 56                	rex.WB push %r14
 61c:	49                   	rex.WB
 61d:	4c                   	rex.WR
 61e:	45                   	rex.RB
 61f:	47                   	rex.RXB
 620:	45 00 53 47          	add    %r10b,0x47(%r11)
 624:	58                   	pop    %rax
 625:	5f                   	pop    %rdi
 626:	45 52                	rex.RB push %r10
 628:	52                   	push   %rdx
 629:	4f 52                	rex.WRXB push %r10
 62b:	5f                   	pop    %rdi
 62c:	49                   	rex.WB
 62d:	4e 56                	rex.WRX push %rsi
 62f:	41                   	rex.B
 630:	4c                   	rex.WR
 631:	49                   	rex.WB
 632:	44 5f                	rex.R pop %rdi
 634:	50                   	push   %rax
 635:	41 52                	push   %r10
 637:	41                   	rex.B
 638:	4d                   	rex.WRB
 639:	45 54                	rex.RB push %r12
 63b:	45 52                	rex.RB push %r10
 63d:	00 75 6e             	add    %dh,0x6e(%rbp)
 640:	73 69                	jae    6ab <__ImageBase+0x6ab>
 642:	67 6e                	outsb  %ds:(%esi),(%dx)
 644:	65 64 20 63 68       	gs and %ah,%fs:0x68(%rbx)
 649:	61                   	(bad)  
 64a:	72 00                	jb     64c <__ImageBase+0x64c>
 64c:	53                   	push   %rbx
 64d:	47 58                	rex.RXB pop %r8
 64f:	5f                   	pop    %rdi
 650:	45 52                	rex.RB push %r10
 652:	52                   	push   %rdx
 653:	4f 52                	rex.WRXB push %r10
 655:	5f                   	pop    %rdi
 656:	50                   	push   %rax
 657:	43                   	rex.XB
 658:	4c 5f                	rex.WR pop %rdi
 65a:	47 55                	rex.RXB push %r13
 65c:	49                   	rex.WB
 65d:	44 5f                	rex.R pop %rdi
 65f:	4d                   	rex.WRB
 660:	49 53                	rex.WB push %r11
 662:	4d                   	rex.WRB
 663:	41 54                	push   %r12
 665:	43                   	rex.XB
 666:	48 00 73 74          	rex.W add %sil,0x74(%rbx)
 66a:	72 6e                	jb     6da <__ImageBase+0x6da>
 66c:	63 6d 70             	movsxd 0x70(%rbp),%ebp
 66f:	00 53 47             	add    %dl,0x47(%rbx)
 672:	58                   	pop    %rax
 673:	5f                   	pop    %rdi
 674:	45 52                	rex.RB push %r10
 676:	52                   	push   %rdx
 677:	4f 52                	rex.WRXB push %r10
 679:	5f                   	pop    %rdi
 67a:	45                   	rex.RB
 67b:	4e                   	rex.WRX
 67c:	43                   	rex.XB
 67d:	4c                   	rex.WR
 67e:	41 56                	push   %r14
 680:	45 5f                	rex.RB pop %r15
 682:	4c                   	rex.WR
 683:	4f 53                	rex.WRXB push %r11
 685:	54                   	push   %rsp
 686:	00 73 68             	add    %dh,0x68(%rbx)
 689:	6f                   	outsl  %ds:(%rsi),(%dx)
 68a:	72 74                	jb     700 <__ImageBase+0x700>
 68c:	20 69 6e             	and    %ch,0x6e(%rcx)
 68f:	74 00                	je     691 <__ImageBase+0x691>
 691:	63 75 72             	movsxd 0x72(%rbp),%esi
 694:	72 65                	jb     6fb <__ImageBase+0x6fb>
 696:	6e                   	outsb  %ds:(%rsi),(%dx)
 697:	74 5f                	je     6f8 <__ImageBase+0x6f8>
 699:	6d                   	insl   (%dx),%es:(%rdi)
 69a:	61                   	(bad)  
 69b:	73 74                	jae    711 <__ImageBase+0x711>
 69d:	65 72 70             	gs jb  710 <__ImageBase+0x710>
 6a0:	77 00                	ja     6a2 <__ImageBase+0x6a2>
 6a2:	53                   	push   %rbx
 6a3:	47 58                	rex.RXB pop %r8
 6a5:	5f                   	pop    %rdi
 6a6:	45 52                	rex.RB push %r10
 6a8:	52                   	push   %rdx
 6a9:	4f 52                	rex.WRXB push %r10
 6ab:	5f                   	pop    %rdi
 6ac:	53                   	push   %rbx
 6ad:	45 52                	rex.RB push %r10
 6af:	56                   	push   %rsi
 6b0:	49                   	rex.WB
 6b1:	43                   	rex.XB
 6b2:	45 5f                	rex.RB pop %r15
 6b4:	49                   	rex.WB
 6b5:	4e 56                	rex.WRX push %rsi
 6b7:	41                   	rex.B
 6b8:	4c                   	rex.WR
 6b9:	49                   	rex.WB
 6ba:	44 5f                	rex.R pop %rdi
 6bc:	50                   	push   %rax
 6bd:	52                   	push   %rdx
 6be:	49 56                	rex.WB push %r14
 6c0:	49                   	rex.WB
 6c1:	4c                   	rex.WR
 6c2:	45                   	rex.RB
 6c3:	47                   	rex.RXB
 6c4:	45 00 53 47          	add    %r10b,0x47(%r11)
 6c8:	58                   	pop    %rax
 6c9:	5f                   	pop    %rdi
 6ca:	45 52                	rex.RB push %r10
 6cc:	52                   	push   %rdx
 6cd:	4f 52                	rex.WRXB push %r10
 6cf:	5f                   	pop    %rdi
 6d0:	49                   	rex.WB
 6d1:	4e 56                	rex.WRX push %rsi
 6d3:	41                   	rex.B
 6d4:	4c                   	rex.WR
 6d5:	49                   	rex.WB
 6d6:	44 5f                	rex.R pop %rdi
 6d8:	4c                   	rex.WR
 6d9:	41 55                	push   %r13
 6db:	4e                   	rex.WRX
 6dc:	43                   	rex.XB
 6dd:	48 5f                	rex.W pop %rdi
 6df:	54                   	push   %rsp
 6e0:	4f                   	rex.WRXB
 6e1:	4b                   	rex.WXB
 6e2:	45                   	rex.RB
 6e3:	4e 00 53 47          	rex.WRX add %r10b,0x47(%rbx)
 6e7:	58                   	pop    %rax
 6e8:	5f                   	pop    %rdi
 6e9:	45 52                	rex.RB push %r10
 6eb:	52                   	push   %rdx
 6ec:	4f 52                	rex.WRXB push %r10
 6ee:	5f                   	pop    %rdi
 6ef:	49                   	rex.WB
 6f0:	4e 56                	rex.WRX push %rsi
 6f2:	41                   	rex.B
 6f3:	4c                   	rex.WR
 6f4:	49                   	rex.WB
 6f5:	44 5f                	rex.R pop %rdi
 6f7:	56                   	push   %rsi
 6f8:	45 52                	rex.RB push %r10
 6fa:	53                   	push   %rbx
 6fb:	49                   	rex.WB
 6fc:	4f                   	rex.WRXB
 6fd:	4e 00 53 47          	rex.WRX add %r10b,0x47(%rbx)
 701:	58                   	pop    %rax
 702:	5f                   	pop    %rdi
 703:	45 52                	rex.RB push %r10
 705:	52                   	push   %rdx
 706:	4f 52                	rex.WRXB push %r10
 708:	5f                   	pop    %rdi
 709:	49                   	rex.WB
 70a:	4e 56                	rex.WRX push %rsi
 70c:	41                   	rex.B
 70d:	4c                   	rex.WR
 70e:	49                   	rex.WB
 70f:	44 5f                	rex.R pop %rdi
 711:	46 55                	rex.RX push %rbp
 713:	4e                   	rex.WRX
 714:	43 54                	rex.XB push %r12
 716:	49                   	rex.WB
 717:	4f                   	rex.WRXB
 718:	4e 00 53 47          	rex.WRX add %r10b,0x47(%rbx)
 71c:	58                   	pop    %rax
 71d:	5f                   	pop    %rdi
 71e:	45 52                	rex.RB push %r10
 720:	52                   	push   %rdx
 721:	4f 52                	rex.WRXB push %r10
 723:	5f                   	pop    %rdi
 724:	50                   	push   %rax
 725:	43                   	rex.XB
 726:	4c 5f                	rex.WR pop %rdi
 728:	4d                   	rex.WRB
 729:	41                   	rex.B
 72a:	43 5f                	rex.XB pop %r15
 72c:	4d                   	rex.WRB
 72d:	49 53                	rex.WB push %r11
 72f:	4d                   	rex.WRB
 730:	41 54                	push   %r12
 732:	43                   	rex.XB
 733:	48 00 53 47          	rex.W add %dl,0x47(%rbx)
 737:	58                   	pop    %rax
 738:	5f                   	pop    %rdi
 739:	45 52                	rex.RB push %r10
 73b:	52                   	push   %rdx
 73c:	4f 52                	rex.WRXB push %r10
 73e:	5f                   	pop    %rdi
 73f:	46                   	rex.RX
 740:	45                   	rex.RB
 741:	41 54                	push   %r12
 743:	55                   	push   %rbp
 744:	52                   	push   %rdx
 745:	45 5f                	rex.RB pop %r15
 747:	4e                   	rex.WRX
 748:	4f 54                	rex.WRXB push %r12
 74a:	5f                   	pop    %rdi
 74b:	53                   	push   %rbx
 74c:	55                   	push   %rbp
 74d:	50                   	push   %rax
 74e:	50                   	push   %rax
 74f:	4f 52                	rex.WRXB push %r10
 751:	54                   	push   %rsp
 752:	45                   	rex.RB
 753:	44 00 53 47          	add    %r10b,0x47(%rbx)
 757:	58                   	pop    %rax
 758:	5f                   	pop    %rdi
 759:	45 52                	rex.RB push %r10
 75b:	52                   	push   %rdx
 75c:	4f 52                	rex.WRXB push %r10
 75e:	5f                   	pop    %rdi
 75f:	49                   	rex.WB
 760:	4e 56                	rex.WRX push %rsi
 762:	41                   	rex.B
 763:	4c                   	rex.WR
 764:	49                   	rex.WB
 765:	44 5f                	rex.R pop %rdi
 767:	4d                   	rex.WRB
 768:	49 53                	rex.WB push %r11
 76a:	43 00 53 47          	rex.XB add %dl,0x47(%r11)
 76e:	58                   	pop    %rax
 76f:	5f                   	pop    %rdi
 770:	45 52                	rex.RB push %r10
 772:	52                   	push   %rdx
 773:	4f 52                	rex.WRXB push %r10
 775:	5f                   	pop    %rdi
 776:	4b                   	rex.WXB
 777:	44                   	rex.R
 778:	46 5f                	rex.RX pop %rdi
 77a:	4d                   	rex.WRB
 77b:	49 53                	rex.WB push %r11
 77d:	4d                   	rex.WRB
 77e:	41 54                	push   %r12
 780:	43                   	rex.XB
 781:	48 00 53 47          	rex.W add %dl,0x47(%rbx)
 785:	58                   	pop    %rax
 786:	5f                   	pop    %rdi
 787:	45 52                	rex.RB push %r10
 789:	52                   	push   %rdx
 78a:	4f 52                	rex.WRXB push %r10
 78c:	5f                   	pop    %rdi
 78d:	54                   	push   %rsp
 78e:	4c 53                	rex.WR push %rbx
 790:	5f                   	pop    %rdi
 791:	58                   	pop    %rax
 792:	35 30 39 5f 49       	xor    $0x495f3930,%eax
 797:	4e 56                	rex.WRX push %rsi
 799:	41                   	rex.B
 79a:	4c                   	rex.WR
 79b:	49                   	rex.WB
 79c:	44 5f                	rex.R pop %rdi
 79e:	45 58                	rex.RB pop %r8
 7a0:	54                   	push   %rsp
 7a1:	45                   	rex.RB
 7a2:	4e 53                	rex.WRX push %rbx
 7a4:	49                   	rex.WB
 7a5:	4f                   	rex.WRXB
 7a6:	4e 00 53 47          	rex.WRX add %r10b,0x47(%rbx)
 7aa:	58                   	pop    %rax
 7ab:	5f                   	pop    %rdi
 7ac:	45 52                	rex.RB push %r10
 7ae:	52                   	push   %rdx
 7af:	4f 52                	rex.WRXB push %r10
 7b1:	5f                   	pop    %rdi
 7b2:	4f                   	rex.WRXB
 7b3:	43                   	rex.XB
 7b4:	41                   	rex.B
 7b5:	4c                   	rex.WR
 7b6:	4c 5f                	rex.WR pop %rdi
 7b8:	4e                   	rex.WRX
 7b9:	4f 54                	rex.WRXB push %r12
 7bb:	5f                   	pop    %rdi
 7bc:	41                   	rex.B
 7bd:	4c                   	rex.WR
 7be:	4c                   	rex.WR
 7bf:	4f 57                	rex.WRXB push %r15
 7c1:	45                   	rex.RB
 7c2:	44 00 53 47          	add    %r10b,0x47(%rbx)
 7c6:	58                   	pop    %rax
 7c7:	5f                   	pop    %rdi
 7c8:	45 52                	rex.RB push %r10
 7ca:	52                   	push   %rdx
 7cb:	4f 52                	rex.WRXB push %r10
 7cd:	5f                   	pop    %rdi
 7ce:	49                   	rex.WB
 7cf:	4e 56                	rex.WRX push %rsi
 7d1:	41                   	rex.B
 7d2:	4c                   	rex.WR
 7d3:	49                   	rex.WB
 7d4:	44 5f                	rex.R pop %rdi
 7d6:	4b                   	rex.WXB
 7d7:	45 59                	rex.RB pop %r9
 7d9:	4e                   	rex.WRX
 7da:	41                   	rex.B
 7db:	4d                   	rex.WRB
 7dc:	45 00 53 47          	add    %r10b,0x47(%r11)
 7e0:	58                   	pop    %rax
 7e1:	5f                   	pop    %rdi
 7e2:	45 52                	rex.RB push %r10
 7e4:	52                   	push   %rdx
 7e5:	4f 52                	rex.WRXB push %r10
 7e7:	5f                   	pop    %rdi
 7e8:	4e                   	rex.WRX
 7e9:	4f 5f                	rex.WRXB pop %r15
 7eb:	44                   	rex.R
 7ec:	45 56                	rex.RB push %r14
 7ee:	49                   	rex.WB
 7ef:	43                   	rex.XB
 7f0:	45 00 53 47          	add    %r10b,0x47(%r11)
 7f4:	58                   	pop    %rax
 7f5:	5f                   	pop    %rdi
 7f6:	45 52                	rex.RB push %r10
 7f8:	52                   	push   %rdx
 7f9:	4f 52                	rex.WRXB push %r10
 7fb:	5f                   	pop    %rdi
 7fc:	46                   	rex.RX
 7fd:	49                   	rex.WB
 7fe:	4c                   	rex.WR
 7ff:	45 5f                	rex.RB pop %r15
 801:	4e                   	rex.WRX
 802:	41                   	rex.B
 803:	4d                   	rex.WRB
 804:	45 5f                	rex.RB pop %r15
 806:	4d                   	rex.WRB
 807:	49 53                	rex.WB push %r11
 809:	4d                   	rex.WRB
 80a:	41 54                	push   %r12
 80c:	43                   	rex.XB
 80d:	48 00 53 47          	rex.W add %dl,0x47(%rbx)
 811:	58                   	pop    %rax
 812:	5f                   	pop    %rdi
 813:	45 52                	rex.RB push %r10
 815:	52                   	push   %rdx
 816:	4f 52                	rex.WRXB push %r10
 818:	5f                   	pop    %rdi
 819:	4d                   	rex.WRB
 81a:	43 5f                	rex.XB pop %r15
 81c:	55                   	push   %rbp
 81d:	53                   	push   %rbx
 81e:	45                   	rex.RB
 81f:	44 5f                	rex.R pop %rdi
 821:	55                   	push   %rbp
 822:	50                   	push   %rax
 823:	00 53 47             	add    %dl,0x47(%rbx)
 826:	58                   	pop    %rax
 827:	5f                   	pop    %rdi
 828:	45 52                	rex.RB push %r10
 82a:	52                   	push   %rdx
 82b:	4f 52                	rex.WRXB push %r10
 82d:	5f                   	pop    %rdi
 82e:	4d                   	rex.WRB
 82f:	41                   	rex.B
 830:	43 5f                	rex.XB pop %r15
 832:	4d                   	rex.WRB
 833:	49 53                	rex.WB push %r11
 835:	4d                   	rex.WRB
 836:	41 54                	push   %r12
 838:	43                   	rex.XB
 839:	48 00 53 47          	rex.W add %dl,0x47(%rbx)
 83d:	58                   	pop    %rax
 83e:	5f                   	pop    %rdi
 83f:	45 52                	rex.RB push %r10
 841:	52                   	push   %rdx
 842:	4f 52                	rex.WRXB push %r10
 844:	5f                   	pop    %rdi
 845:	4e                   	rex.WRX
 846:	45 54                	rex.RB push %r12
 848:	57                   	push   %rdi
 849:	4f 52                	rex.WRXB push %r10
 84b:	4b 5f                	rex.WXB pop %r15
 84d:	46                   	rex.RX
 84e:	41                   	rex.B
 84f:	49                   	rex.WB
 850:	4c 55                	rex.WR push %rbp
 852:	52                   	push   %rdx
 853:	45 00 53 47          	add    %r10b,0x47(%r11)
 857:	58                   	pop    %rax
 858:	5f                   	pop    %rdi
 859:	45 52                	rex.RB push %r10
 85b:	52                   	push   %rdx
 85c:	4f 52                	rex.WRXB push %r10
 85e:	5f                   	pop    %rdi
 85f:	4e                   	rex.WRX
 860:	44                   	rex.R
 861:	45                   	rex.RB
 862:	42 55                	rex.X push %rbp
 864:	47 5f                	rex.RXB pop %r15
 866:	45                   	rex.RB
 867:	4e                   	rex.WRX
 868:	43                   	rex.XB
 869:	4c                   	rex.WR
 86a:	41 56                	push   %r14
 86c:	45 00 6d 65          	add    %r13b,0x65(%r13)
 870:	6d                   	insl   (%dx),%es:(%rdi)
 871:	73 65                	jae    8d8 <__ImageBase+0x8d8>
 873:	74 00                	je     875 <__ImageBase+0x875>
 875:	53                   	push   %rbx
 876:	47 58                	rex.RXB pop %r8
 878:	5f                   	pop    %rdi
 879:	45 52                	rex.RB push %r10
 87b:	52                   	push   %rdx
 87c:	4f 52                	rex.WRXB push %r10
 87e:	5f                   	pop    %rdi
 87f:	53                   	push   %rbx
 880:	54                   	push   %rsp
 881:	41                   	rex.B
 882:	43                   	rex.XB
 883:	4b 5f                	rex.WXB pop %r15
 885:	4f 56                	rex.WRXB push %r14
 887:	45 52                	rex.RB push %r10
 889:	52                   	push   %rdx
 88a:	55                   	push   %rbp
 88b:	4e 00 53 47          	rex.WRX add %r10b,0x47(%rbx)
 88f:	58                   	pop    %rax
 890:	5f                   	pop    %rdi
 891:	45 52                	rex.RB push %r10
 893:	52                   	push   %rdx
 894:	4f 52                	rex.WRXB push %r10
 896:	5f                   	pop    %rdi
 897:	49                   	rex.WB
 898:	4e 56                	rex.WRX push %rsi
 89a:	41                   	rex.B
 89b:	4c                   	rex.WR
 89c:	49                   	rex.WB
 89d:	44 5f                	rex.R pop %rdi
 89f:	41 54                	push   %r12
 8a1:	54                   	push   %rsp
 8a2:	5f                   	pop    %rdi
 8a3:	4b                   	rex.WXB
 8a4:	45 59                	rex.RB pop %r9
 8a6:	5f                   	pop    %rdi
 8a7:	43                   	rex.XB
 8a8:	45 52                	rex.RB push %r10
 8aa:	54                   	push   %rsp
 8ab:	5f                   	pop    %rdi
 8ac:	44                   	rex.R
 8ad:	41 54                	push   %r12
 8af:	41 00 6f 63          	add    %bpl,0x63(%r15)
 8b3:	61                   	(bad)  
 8b4:	6c                   	insb   (%dx),%es:(%rdi)
 8b5:	6c                   	insb   (%dx),%es:(%rdi)
 8b6:	5f                   	pop    %rdi
 8b7:	70 72                	jo     92b <__ImageBase+0x92b>
 8b9:	69 6e 74 00 53 47 58 	imul   $0x58475300,0x74(%rsi),%ebp
 8c0:	5f                   	pop    %rdi
 8c1:	45 52                	rex.RB push %r10
 8c3:	52                   	push   %rdx
 8c4:	4f 52                	rex.WRXB push %r10
 8c6:	5f                   	pop    %rdi
 8c7:	55                   	push   %rbp
 8c8:	4e 53                	rex.WRX push %rbx
 8ca:	55                   	push   %rbp
 8cb:	50                   	push   %rax
 8cc:	50                   	push   %rax
 8cd:	4f 52                	rex.WRXB push %r10
 8cf:	54                   	push   %rsp
 8d0:	45                   	rex.RB
 8d1:	44 5f                	rex.R pop %rdi
 8d3:	41 54                	push   %r12
 8d5:	54                   	push   %rsp
 8d6:	5f                   	pop    %rdi
 8d7:	4b                   	rex.WXB
 8d8:	45 59                	rex.RB pop %r9
 8da:	5f                   	pop    %rdi
 8db:	49                   	rex.WB
 8dc:	44 00 53 47          	add    %r10b,0x47(%rbx)
 8e0:	58                   	pop    %rax
 8e1:	5f                   	pop    %rdi
 8e2:	45 52                	rex.RB push %r10
 8e4:	52                   	push   %rdx
 8e5:	4f 52                	rex.WRXB push %r10
 8e7:	5f                   	pop    %rdi
 8e8:	41 54                	push   %r12
 8ea:	54                   	push   %rsp
 8eb:	5f                   	pop    %rdi
 8ec:	4b                   	rex.WXB
 8ed:	45 59                	rex.RB pop %r9
 8ef:	5f                   	pop    %rdi
 8f0:	43                   	rex.XB
 8f1:	45 52                	rex.RB push %r10
 8f3:	54                   	push   %rsp
 8f4:	49                   	rex.WB
 8f5:	46                   	rex.RX
 8f6:	49                   	rex.WB
 8f7:	43                   	rex.XB
 8f8:	41 54                	push   %r12
 8fa:	49                   	rex.WB
 8fb:	4f                   	rex.WRXB
 8fc:	4e 5f                	rex.WRX pop %rdi
 8fe:	46                   	rex.RX
 8ff:	41                   	rex.B
 900:	49                   	rex.WB
 901:	4c 55                	rex.WR push %rbp
 903:	52                   	push   %rdx
 904:	45 00 53 47          	add    %r10b,0x47(%r11)
 908:	58                   	pop    %rax
 909:	5f                   	pop    %rdi
 90a:	45 52                	rex.RB push %r10
 90c:	52                   	push   %rdx
 90d:	4f 52                	rex.WRXB push %r10
 90f:	5f                   	pop    %rdi
 910:	55                   	push   %rbp
 911:	50                   	push   %rax
 912:	44                   	rex.R
 913:	41 54                	push   %r12
 915:	45 5f                	rex.RB pop %r15
 917:	4e                   	rex.WRX
 918:	45                   	rex.RB
 919:	45                   	rex.RB
 91a:	44                   	rex.R
 91b:	45                   	rex.RB
 91c:	44 00 53 47          	add    %r10b,0x47(%rbx)
 920:	58                   	pop    %rax
 921:	5f                   	pop    %rdi
 922:	45 52                	rex.RB push %r10
 924:	52                   	push   %rdx
 925:	4f 52                	rex.WRXB push %r10
 927:	5f                   	pop    %rdi
 928:	4d                   	rex.WRB
 929:	45                   	rex.RB
 92a:	4d                   	rex.WRB
 92b:	4f 52                	rex.WRXB push %r10
 92d:	59                   	pop    %rcx
 92e:	5f                   	pop    %rdi
 92f:	4d                   	rex.WRB
 930:	41 50                	push   %r8
 932:	5f                   	pop    %rdi
 933:	43                   	rex.XB
 934:	4f                   	rex.WRXB
 935:	4e                   	rex.WRX
 936:	46                   	rex.RX
 937:	4c                   	rex.WR
 938:	49                   	rex.WB
 939:	43 54                	rex.XB push %r12
 93b:	00 53 47             	add    %dl,0x47(%rbx)
 93e:	58                   	pop    %rax
 93f:	5f                   	pop    %rdi
 940:	45 52                	rex.RB push %r10
 942:	52                   	push   %rdx
 943:	4f 52                	rex.WRXB push %r10
 945:	5f                   	pop    %rdi
 946:	4f 55                	rex.WRXB push %r13
 948:	54                   	push   %rsp
 949:	5f                   	pop    %rdi
 94a:	4f                   	rex.WRXB
 94b:	46 5f                	rex.RX pop %rdi
 94d:	4d                   	rex.WRB
 94e:	45                   	rex.RB
 94f:	4d                   	rex.WRB
 950:	4f 52                	rex.WRXB push %r10
 952:	59                   	pop    %rcx
 953:	00 61 73             	add    %ah,0x73(%rcx)
 956:	6d                   	insl   (%dx),%es:(%rdi)
 957:	2e 53                	cs push %rbx
 959:	00 2f                	add    %ch,(%rdi)
 95b:	68 6f 6d 65 2f       	push   $0x2f656d6f
 960:	6a 61                	push   $0x61
 962:	6e                   	outsb  %ds:(%rsi),(%dx)
 963:	2f                   	(bad)  
 964:	70 77                	jo     9dd <__ImageBase+0x9dd>
 966:	6d                   	insl   (%dx),%es:(%rdi)
 967:	61                   	(bad)  
 968:	6e                   	outsb  %ds:(%rsi),(%dx)
 969:	61                   	(bad)  
 96a:	67 65 72 2d          	addr32 gs jb 99b <__ImageBase+0x99b>
 96e:	75 6e                	jne    9de <__ImageBase+0x9de>
 970:	65 6e                	outsb  %gs:(%rsi),(%dx)
 972:	63 2f                	movsxd (%rdi),%ebp
 974:	45 6e                	rex.RB outsb %ds:(%rsi),(%dx)
 976:	63 6c 61 76          	movsxd 0x76(%rcx,%riz,2),%ebp
 97a:	65 00 47 4e          	add    %al,%gs:0x4e(%rdi)
 97e:	55                   	push   %rbp
 97f:	20 41 53             	and    %al,0x53(%rcx)
 982:	20 32                	and    %dh,(%rdx)
 984:	2e 33 36             	cs xor (%rsi),%esi
 987:	2e 31 00             	cs xor %eax,(%rax)
 98a:	5f                   	pop    %rdi
 98b:	69 6e 5f 6f 6c 64 5f 	imul   $0x5f646c6f,0x5f(%rsi),%ebp
 992:	6d                   	insl   (%dx),%es:(%rdi)
 993:	61                   	(bad)  
 994:	73 74                	jae    a0a <__ImageBase+0xa0a>
 996:	65 72 70             	gs jb  a09 <__ImageBase+0xa09>
 999:	77 00                	ja     99b <__ImageBase+0x99b>
 99b:	6f                   	outsl  %ds:(%rsi),(%dx)
 99c:	63 61 6c             	movsxd 0x6c(%rcx),%esp
 99f:	6c                   	insb   (%dx),%es:(%rdi)
 9a0:	6f                   	outsl  %ds:(%rsi),(%dx)
 9a1:	63 5f 73             	movsxd 0x73(%rdi),%ebx
 9a4:	69 7a 65 00 5f 5f 75 	imul   $0x755f5f00,0x65(%rdx),%edi
 9ab:	69 6e 74 38 5f 74 00 	imul   $0x745f38,0x74(%rsi),%ebp
 9b2:	6d                   	insl   (%dx),%es:(%rdi)
 9b3:	73 5f                	jae    a14 <__ImageBase+0xa14>
 9b5:	65 63 61 6c          	movsxd %gs:0x6c(%rcx),%esp
 9b9:	6c                   	insb   (%dx),%es:(%rdi)
 9ba:	5f                   	pop    %rdi
 9bb:	69 6e 69 74 5f 6d 61 	imul   $0x616d5f74,0x69(%rsi),%ebp
 9c2:	73 74                	jae    a38 <__ImageBase+0xa38>
 9c4:	65 72 5f             	gs jb  a26 <__ImageBase+0xa26>
 9c7:	70 61                	jo     a2a <__ImageBase+0xa2a>
 9c9:	73 73                	jae    a3e <__ImageBase+0xa3e>
 9cb:	77 6f                	ja     a3c <__ImageBase+0xa3c>
 9cd:	72 64                	jb     a33 <__ImageBase+0xa33>
 9cf:	5f                   	pop    %rdi
 9d0:	74 00                	je     9d2 <__ImageBase+0x9d2>
 9d2:	6d                   	insl   (%dx),%es:(%rdi)
 9d3:	73 5f                	jae    a34 <__ImageBase+0xa34>
 9d5:	70 77                	jo     a4e <__ImageBase+0xa4e>
 9d7:	00 73 67             	add    %dh,0x67(%rbx)
 9da:	78 5f                	js     a3b <__ImageBase+0xa3b>
 9dc:	6f                   	outsl  %ds:(%rsi),(%dx)
 9dd:	63 61 6c             	movsxd 0x6c(%rcx),%esp
 9e0:	6c                   	insb   (%dx),%es:(%rdi)
 9e1:	00 5f 74             	add    %bl,0x74(%rdi)
 9e4:	6d                   	insl   (%dx),%es:(%rdi)
 9e5:	70 5f                	jo     a46 <__ImageBase+0xa46>
 9e7:	6e                   	outsb  %ds:(%rsi),(%dx)
 9e8:	65 77 5f             	gs ja  a4a <__ImageBase+0xa4a>
 9eb:	6d                   	insl   (%dx),%es:(%rdi)
 9ec:	61                   	(bad)  
 9ed:	73 74                	jae    a63 <__ImageBase+0xa63>
 9ef:	65 72 70             	gs jb  a62 <__ImageBase+0xa62>
 9f2:	77 00                	ja     9f4 <__ImageBase+0x9f4>
 9f4:	6d                   	insl   (%dx),%es:(%rdi)
 9f5:	65 6d                	gs insl (%dx),%es:(%rdi)
 9f7:	63 70 79             	movsxd 0x79(%rax),%esi
 9fa:	5f                   	pop    %rdi
 9fb:	73 00                	jae    9fd <__ImageBase+0x9fd>
 9fd:	5f                   	pop    %rdi
 9fe:	6c                   	insb   (%dx),%es:(%rdi)
 9ff:	65 6e                	outsb  %gs:(%rsi),(%dx)
 a01:	5f                   	pop    %rdi
 a02:	70 77                	jo     a7b <__ImageBase+0xa7b>
 a04:	00 73 74             	add    %dh,0x74(%rbx)
 a07:	61                   	(bad)  
 a08:	74 75                	je     a7f <__ImageBase+0xa7f>
 a0a:	73 00                	jae    a0c <__ImageBase+0xa0c>
 a0c:	73 67                	jae    a75 <__ImageBase+0xa75>
 a0e:	78 5f                	js     a6f <__ImageBase+0xa6f>
 a10:	69 73 5f 77 69 74 68 	imul   $0x68746977,0x5f(%rbx),%esi
 a17:	69 6e 5f 65 6e 63 6c 	imul   $0x6c636e65,0x5f(%rsi),%ebp
 a1e:	61                   	(bad)  
 a1f:	76 65                	jbe    a86 <__ImageBase+0xa86>
 a21:	00 5f 6c             	add    %bl,0x6c(%rdi)
 a24:	65 6e                	outsb  %gs:(%rsi),(%dx)
 a26:	5f                   	pop    %rdi
 a27:	70 6c                	jo     a95 <__ImageBase+0xa95>
 a29:	61                   	(bad)  
 a2a:	69 6e 74 65 78 74 5f 	imul   $0x5f747865,0x74(%rsi),%ebp
 a31:	70 77                	jo     aaa <__ImageBase+0xaaa>
 a33:	00 73 67             	add    %dh,0x67(%rbx)
 a36:	78 5f                	js     a97 <__ImageBase+0xa97>
 a38:	65 63 61 6c          	movsxd %gs:0x6c(%rcx),%esp
 a3c:	6c                   	insb   (%dx),%es:(%rdi)
 a3d:	5f                   	pop    %rdi
 a3e:	63 68 61             	movsxd 0x61(%rax),%ebp
 a41:	6e                   	outsb  %ds:(%rsi),(%dx)
 a42:	67 65 5f             	addr32 gs pop %rdi
 a45:	6d                   	insl   (%dx),%es:(%rdi)
 a46:	61                   	(bad)  
 a47:	73 74                	jae    abd <__ImageBase+0xabd>
 a49:	65 72 5f             	gs jb  aab <__ImageBase+0xaab>
 a4c:	70 61                	jo     aaf <__ImageBase+0xaaf>
 a4e:	73 73                	jae    ac3 <__ImageBase+0xac3>
 a50:	77 6f                	ja     ac1 <__ImageBase+0xac1>
 a52:	72 64                	jb     ab8 <__ImageBase+0xab8>
 a54:	00 5f 69             	add    %bl,0x69(%rdi)
 a57:	6e                   	outsb  %ds:(%rsi),(%dx)
 a58:	5f                   	pop    %rdi
 a59:	6d                   	insl   (%dx),%es:(%rdi)
 a5a:	61                   	(bad)  
 a5b:	73 74                	jae    ad1 <__ImageBase+0xad1>
 a5d:	65 72 70             	gs jb  ad0 <__ImageBase+0xad0>
 a60:	77 00                	ja     a62 <__ImageBase+0xa62>
 a62:	5f                   	pop    %rdi
 a63:	5f                   	pop    %rdi
 a64:	74 6d                	je     ad3 <__ImageBase+0xad3>
 a66:	70 00                	jo     a68 <__ImageBase+0xa68>
 a68:	6d                   	insl   (%dx),%es:(%rdi)
 a69:	73 5f                	jae    aca <__ImageBase+0xaca>
 a6b:	6e                   	outsb  %ds:(%rsi),(%dx)
 a6c:	65 77 5f             	gs ja  ace <__ImageBase+0xace>
 a6f:	6d                   	insl   (%dx),%es:(%rdi)
 a70:	61                   	(bad)  
 a71:	73 74                	jae    ae7 <__ImageBase+0xae7>
 a73:	65 72 70             	gs jb  ae6 <__ImageBase+0xae6>
 a76:	77 00                	ja     a78 <__ImageBase+0xa78>
 a78:	6e                   	outsb  %ds:(%rsi),(%dx)
 a79:	72 5f                	jb     ada <__ImageBase+0xada>
 a7b:	65 63 61 6c          	movsxd %gs:0x6c(%rcx),%esp
 a7f:	6c                   	insb   (%dx),%es:(%rdi)
 a80:	00 73 74             	add    %dh,0x74(%rbx)
 a83:	72 6c                	jb     af1 <__ImageBase+0xaf1>
 a85:	65 6e                	outsb  %gs:(%rsi),(%dx)
 a87:	00 73 67             	add    %dh,0x67(%rbx)
 a8a:	78 5f                	js     aeb <__ImageBase+0xaeb>
 a8c:	65 63 61 6c          	movsxd %gs:0x6c(%rcx),%esp
 a90:	6c                   	insb   (%dx),%es:(%rdi)
 a91:	5f                   	pop    %rdi
 a92:	63 6c 65 61          	movsxd 0x61(%rbp,%riz,2),%ebp
 a96:	72 5f                	jb     af7 <__ImageBase+0xaf7>
 a98:	61                   	(bad)  
 a99:	6c                   	insb   (%dx),%es:(%rdi)
 a9a:	6c                   	insb   (%dx),%es:(%rdi)
 a9b:	00 6d 73             	add    %ch,0x73(%rbp)
 a9e:	5f                   	pop    %rdi
 a9f:	6f                   	outsl  %ds:(%rsi),(%dx)
 aa0:	6c                   	insb   (%dx),%es:(%rdi)
 aa1:	64 5f                	fs pop %rdi
 aa3:	6d                   	insl   (%dx),%es:(%rdi)
 aa4:	61                   	(bad)  
 aa5:	73 74                	jae    b1b <__ImageBase+0xb1b>
 aa7:	65 72 70             	gs jb  b1a <__ImageBase+0xb1a>
 aaa:	77 5f                	ja     b0b <__ImageBase+0xb0b>
 aac:	6c                   	insb   (%dx),%es:(%rdi)
 aad:	65 6e                	outsb  %gs:(%rsi),(%dx)
 aaf:	00 6d 73             	add    %ch,0x73(%rbp)
 ab2:	5f                   	pop    %rdi
 ab3:	6e                   	outsb  %ds:(%rsi),(%dx)
 ab4:	65 77 5f             	gs ja  b16 <__ImageBase+0xb16>
 ab7:	6d                   	insl   (%dx),%es:(%rdi)
 ab8:	61                   	(bad)  
 ab9:	73 74                	jae    b2f <__ImageBase+0xb2f>
 abb:	65 72 70             	gs jb  b2e <__ImageBase+0xb2e>
 abe:	77 5f                	ja     b1f <__ImageBase+0xb1f>
 ac0:	6c                   	insb   (%dx),%es:(%rdi)
 ac1:	65 6e                	outsb  %gs:(%rsi),(%dx)
 ac3:	00 6d 73             	add    %ch,0x73(%rbp)
 ac6:	5f                   	pop    %rdi
 ac7:	70 6c                	jo     b35 <__ImageBase+0xb35>
 ac9:	61                   	(bad)  
 aca:	69 6e 74 65 78 74 5f 	imul   $0x5f747865,0x74(%rsi),%ebp
 ad1:	70 77                	jo     b4a <__ImageBase+0xb4a>
 ad3:	5f                   	pop    %rdi
 ad4:	6c                   	insb   (%dx),%es:(%rdi)
 ad5:	65 6e                	outsb  %gs:(%rsi),(%dx)
 ad7:	00 5f 5f             	add    %bl,0x5f(%rdi)
 ada:	69 6e 5f 6d 73 00 6d 	imul   $0x6d00736d,0x5f(%rsi),%ebp
 ae1:	73 5f                	jae    b42 <__ImageBase+0xb42>
 ae3:	65 63 61 6c          	movsxd %gs:0x6c(%rcx),%esp
 ae7:	6c                   	insb   (%dx),%es:(%rdi)
 ae8:	5f                   	pop    %rdi
 ae9:	61                   	(bad)  
 aea:	64 64 5f             	fs fs pop %rdi
 aed:	70 61                	jo     b50 <__ImageBase+0xb50>
 aef:	73 73                	jae    b64 <__ImageBase+0xb64>
 af1:	77 6f                	ja     b62 <__ImageBase+0xb62>
 af3:	72 64                	jb     b59 <__ImageBase+0xb59>
 af5:	5f                   	pop    %rdi
 af6:	74 00                	je     af8 <__ImageBase+0xaf8>
 af8:	5f                   	pop    %rdi
 af9:	6c                   	insb   (%dx),%es:(%rdi)
 afa:	65 6e                	outsb  %gs:(%rsi),(%dx)
 afc:	5f                   	pop    %rdi
 afd:	6f                   	outsl  %ds:(%rsi),(%dx)
 afe:	6c                   	insb   (%dx),%es:(%rdi)
 aff:	64 5f                	fs pop %rdi
 b01:	6d                   	insl   (%dx),%es:(%rdi)
 b02:	61                   	(bad)  
 b03:	73 74                	jae    b79 <__ImageBase+0xb79>
 b05:	65 72 70             	gs jb  b78 <__ImageBase+0xb78>
 b08:	77 00                	ja     b0a <__ImageBase+0xb0a>
 b0a:	73 67                	jae    b73 <__ImageBase+0xb73>
 b0c:	78 5f                	js     b6d <__ImageBase+0xb6d>
 b0e:	65 63 61 6c          	movsxd %gs:0x6c(%rcx),%esp
 b12:	6c                   	insb   (%dx),%es:(%rdi)
 b13:	5f                   	pop    %rdi
 b14:	61                   	(bad)  
 b15:	64 64 5f             	fs fs pop %rdi
 b18:	70 61                	jo     b7b <__ImageBase+0xb7b>
 b1a:	73 73                	jae    b8f <__ImageBase+0xb8f>
 b1c:	77 6f                	ja     b8d <__ImageBase+0xb8d>
 b1e:	72 64                	jb     b84 <__ImageBase+0xb84>
 b20:	00 5f 74             	add    %bl,0x74(%rdi)
 b23:	6d                   	insl   (%dx),%es:(%rdi)
 b24:	70 5f                	jo     b85 <__ImageBase+0xb85>
 b26:	6d                   	insl   (%dx),%es:(%rdi)
 b27:	61                   	(bad)  
 b28:	73 74                	jae    b9e <__ImageBase+0xb9e>
 b2a:	65 72 70             	gs jb  b9d <__ImageBase+0xb9d>
 b2d:	77 00                	ja     b2f <__ImageBase+0xb2f>
 b2f:	6d                   	insl   (%dx),%es:(%rdi)
 b30:	65 6d                	gs insl (%dx),%es:(%rdi)
 b32:	63 70 79             	movsxd 0x79(%rax),%esi
 b35:	5f                   	pop    %rdi
 b36:	76 65                	jbe    b9d <__ImageBase+0xb9d>
 b38:	72 77                	jb     bb1 <__ImageBase+0xbb1>
 b3a:	5f                   	pop    %rdi
 b3b:	73 00                	jae    b3d <__ImageBase+0xb3d>
 b3d:	5f                   	pop    %rdi
 b3e:	5f                   	pop    %rdi
 b3f:	75 69                	jne    baa <__ImageBase+0xbaa>
 b41:	6e                   	outsb  %ds:(%rsi),(%dx)
 b42:	74 36                	je     b7a <__ImageBase+0xb7a>
 b44:	34 5f                	xor    $0x5f,%al
 b46:	74 00                	je     b48 <__ImageBase+0xb48>
 b48:	65 72 72             	gs jb  bbd <__ImageBase+0xbbd>
 b4b:	6e                   	outsb  %ds:(%rsi),(%dx)
 b4c:	6f                   	outsl  %ds:(%rsi),(%dx)
 b4d:	5f                   	pop    %rdi
 b4e:	74 00                	je     b50 <__ImageBase+0xb50>
 b50:	73 67                	jae    bb9 <__ImageBase+0xbb9>
 b52:	78 5f                	js     bb3 <__ImageBase+0xbb3>
 b54:	6f                   	outsl  %ds:(%rsi),(%dx)
 b55:	63 66 72             	movsxd 0x72(%rsi),%esp
 b58:	65 65 00 6d 73       	gs add %ch,%gs:0x73(%rbp)
 b5d:	5f                   	pop    %rdi
 b5e:	6d                   	insl   (%dx),%es:(%rdi)
 b5f:	61                   	(bad)  
 b60:	73 74                	jae    bd6 <__ImageBase+0xbd6>
 b62:	65 72 70             	gs jb  bd5 <__ImageBase+0xbd5>
 b65:	77 5f                	ja     bc6 <__ImageBase+0xbc6>
 b67:	6c                   	insb   (%dx),%es:(%rdi)
 b68:	65 6e                	outsb  %gs:(%rsi),(%dx)
 b6a:	00 6d 73             	add    %ch,0x73(%rbp)
 b6d:	5f                   	pop    %rdi
 b6e:	6f                   	outsl  %ds:(%rsi),(%dx)
 b6f:	6c                   	insb   (%dx),%es:(%rdi)
 b70:	64 5f                	fs pop %rdi
 b72:	6d                   	insl   (%dx),%es:(%rdi)
 b73:	61                   	(bad)  
 b74:	73 74                	jae    bea <__ImageBase+0xbea>
 b76:	65 72 70             	gs jb  be9 <__ImageBase+0xbe9>
 b79:	77 00                	ja     b7b <__ImageBase+0xb7b>
 b7b:	69 73 5f 73 77 69 74 	imul   $0x74697773,0x5f(%rbx),%esi
 b82:	63 68 6c             	movsxd 0x6c(%rax),%ebp
 b85:	65 73 73             	gs jae bfb <__ImageBase+0xbfb>
 b88:	00 6d 73             	add    %ch,0x73(%rbp)
 b8b:	5f                   	pop    %rdi
 b8c:	70 6c                	jo     bfa <__ImageBase+0xbfa>
 b8e:	61                   	(bad)  
 b8f:	69 6e 74 65 78 74 5f 	imul   $0x5f747865,0x74(%rsi),%ebp
 b96:	70 77                	jo     c0f <__ImageBase+0xc0f>
 b98:	00 5f 5f             	add    %bl,0x5f(%rdi)
 b9b:	62                   	(bad)  
 b9c:	75 69                	jne    c07 <__ImageBase+0xc07>
 b9e:	6c                   	insb   (%dx),%es:(%rdi)
 b9f:	74 69                	je     c0a <__ImageBase+0xc0a>
 ba1:	6e                   	outsb  %ds:(%rsi),(%dx)
 ba2:	5f                   	pop    %rdi
 ba3:	69 61 33 32 5f 6c 66 	imul   $0x666c5f32,0x33(%rcx),%esp
 baa:	65 6e                	outsb  %gs:(%rsi),(%dx)
 bac:	63 65 00             	movsxd 0x0(%rbp),%esp
 baf:	6d                   	insl   (%dx),%es:(%rdi)
 bb0:	73 5f                	jae    c11 <__ImageBase+0xc11>
 bb2:	6f                   	outsl  %ds:(%rsi),(%dx)
 bb3:	63 61 6c             	movsxd 0x6c(%rcx),%esp
 bb6:	6c                   	insb   (%dx),%es:(%rdi)
 bb7:	5f                   	pop    %rdi
 bb8:	70 72                	jo     c2c <__ImageBase+0xc2c>
 bba:	69 6e 74 5f 74 00 73 	imul   $0x7300745f,0x74(%rsi),%ebp
 bc1:	67 78 5f             	addr32 js c23 <__ImageBase+0xc23>
 bc4:	69 73 5f 6f 75 74 73 	imul   $0x7374756f,0x5f(%rbx),%esi
 bcb:	69 64 65 5f 65 6e 63 	imul   $0x6c636e65,0x5f(%rbp,%riz,2),%esp
 bd2:	6c 
 bd3:	61                   	(bad)  
 bd4:	76 65                	jbe    c3b <__ImageBase+0xc3b>
 bd6:	00 5f 5f             	add    %bl,0x5f(%rdi)
 bd9:	75 69                	jne    c44 <__ImageBase+0xc44>
 bdb:	6e                   	outsb  %ds:(%rsi),(%dx)
 bdc:	74 70                	je     c4e <__ImageBase+0xc4e>
 bde:	74 72                	je     c52 <__ImageBase+0xc52>
 be0:	5f                   	pop    %rdi
 be1:	74 00                	je     be3 <__ImageBase+0xbe3>
 be3:	69 73 5f 70 72 69 76 	imul   $0x76697270,0x5f(%rbx),%esi
 bea:	00 65 63             	add    %ah,0x63(%rbp)
 bed:	61                   	(bad)  
 bee:	6c                   	insb   (%dx),%es:(%rdi)
 bef:	6c                   	insb   (%dx),%es:(%rdi)
 bf0:	5f                   	pop    %rdi
 bf1:	61                   	(bad)  
 bf2:	64 64 72 00          	fs fs jb bf6 <__ImageBase+0xbf6>
 bf6:	6d                   	insl   (%dx),%es:(%rdi)
 bf7:	61                   	(bad)  
 bf8:	6c                   	insb   (%dx),%es:(%rdi)
 bf9:	6c                   	insb   (%dx),%es:(%rdi)
 bfa:	6f                   	outsl  %ds:(%rsi),(%dx)
 bfb:	63 00                	movsxd (%rax),%eax
 bfd:	67 5f                	addr32 pop %rdi
 bff:	64 79 6e             	fs jns c70 <__ImageBase+0xc70>
 c02:	5f                   	pop    %rdi
 c03:	65 6e                	outsb  %gs:(%rsi),(%dx)
 c05:	74 72                	je     c79 <__ImageBase+0xc79>
 c07:	79 5f                	jns    c68 <__ImageBase+0xc68>
 c09:	74 61                	je     c6c <__ImageBase+0xc6c>
 c0b:	62                   	(bad)  
 c0c:	6c                   	insb   (%dx),%es:(%rdi)
 c0d:	65 00 6d 73          	add    %ch,%gs:0x73(%rbp)
 c11:	5f                   	pop    %rdi
 c12:	65 63 61 6c          	movsxd %gs:0x6c(%rcx),%esp
 c16:	6c                   	insb   (%dx),%es:(%rdi)
 c17:	5f                   	pop    %rdi
 c18:	63 68 61             	movsxd 0x61(%rax),%ebp
 c1b:	6e                   	outsb  %ds:(%rsi),(%dx)
 c1c:	67 65 5f             	addr32 gs pop %rdi
 c1f:	6d                   	insl   (%dx),%es:(%rdi)
 c20:	61                   	(bad)  
 c21:	73 74                	jae    c97 <__ImageBase+0xc97>
 c23:	65 72 5f             	gs jb  c85 <__ImageBase+0xc85>
 c26:	70 61                	jo     c89 <__ImageBase+0xc89>
 c28:	73 73                	jae    c9d <__ImageBase+0xc9d>
 c2a:	77 6f                	ja     c9b <__ImageBase+0xc9b>
 c2c:	72 64                	jb     c92 <__ImageBase+0xc92>
 c2e:	5f                   	pop    %rdi
 c2f:	74 00                	je     c31 <__ImageBase+0xc31>
 c31:	73 67                	jae    c9a <__ImageBase+0xc9a>
 c33:	78 5f                	js     c94 <__ImageBase+0xc94>
 c35:	65 63 61 6c          	movsxd %gs:0x6c(%rcx),%esp
 c39:	6c                   	insb   (%dx),%es:(%rdi)
 c3a:	5f                   	pop    %rdi
 c3b:	67 65 74 5f          	addr32 gs je c9e <__ImageBase+0xc9e>
 c3f:	70 61                	jo     ca2 <__ImageBase+0xca2>
 c41:	73 73                	jae    cb6 <__ImageBase+0xcb6>
 c43:	77 6f                	ja     cb4 <__ImageBase+0xcb4>
 c45:	72 64                	jb     cab <__ImageBase+0xcab>
 c47:	73 00                	jae    c49 <__ImageBase+0xc49>
 c49:	5f                   	pop    %rdi
 c4a:	6c                   	insb   (%dx),%es:(%rdi)
 c4b:	65 6e                	outsb  %gs:(%rsi),(%dx)
 c4d:	5f                   	pop    %rdi
 c4e:	6d                   	insl   (%dx),%es:(%rdi)
 c4f:	61                   	(bad)  
 c50:	73 74                	jae    cc6 <__ImageBase+0xcc6>
 c52:	65 72 70             	gs jb  cc5 <__ImageBase+0xcc5>
 c55:	77 00                	ja     c57 <__ImageBase+0xc57>
 c57:	6d                   	insl   (%dx),%es:(%rdi)
 c58:	73 5f                	jae    cb9 <__ImageBase+0xcb9>
 c5a:	6d                   	insl   (%dx),%es:(%rdi)
 c5b:	61                   	(bad)  
 c5c:	73 74                	jae    cd2 <__ImageBase+0xcd2>
 c5e:	65 72 70             	gs jb  cd1 <__ImageBase+0xcd1>
 c61:	77 00                	ja     c63 <__ImageBase+0xc63>
 c63:	5f                   	pop    %rdi
 c64:	74 6d                	je     cd3 <__ImageBase+0xcd3>
 c66:	70 5f                	jo     cc7 <__ImageBase+0xcc7>
 c68:	6f                   	outsl  %ds:(%rsi),(%dx)
 c69:	6c                   	insb   (%dx),%es:(%rdi)
 c6a:	64 5f                	fs pop %rdi
 c6c:	6d                   	insl   (%dx),%es:(%rdi)
 c6d:	61                   	(bad)  
 c6e:	73 74                	jae    ce4 <__ImageBase+0xce4>
 c70:	65 72 70             	gs jb  ce3 <__ImageBase+0xce3>
 c73:	77 00                	ja     c75 <__ImageBase+0xc75>
 c75:	5f                   	pop    %rdi
 c76:	74 6d                	je     ce5 <__ImageBase+0xce5>
 c78:	70 5f                	jo     cd9 <__ImageBase+0xcd9>
 c7a:	70 6c                	jo     ce8 <__ImageBase+0xce8>
 c7c:	61                   	(bad)  
 c7d:	69 6e 74 65 78 74 5f 	imul   $0x5f747865,0x74(%rsi),%ebp
 c84:	70 77                	jo     cfd <__ImageBase+0xcfd>
 c86:	00 73 67             	add    %dh,0x67(%rbx)
 c89:	78 5f                	js     cea <__ImageBase+0xcea>
 c8b:	65 63 61 6c          	movsxd %gs:0x6c(%rcx),%esp
 c8f:	6c                   	insb   (%dx),%es:(%rdi)
 c90:	5f                   	pop    %rdi
 c91:	69 6e 69 74 5f 6d 61 	imul   $0x616d5f74,0x69(%rsi),%ebp
 c98:	73 74                	jae    d0e <__ImageBase+0xd0e>
 c9a:	65 72 5f             	gs jb  cfc <__ImageBase+0xcfc>
 c9d:	70 61                	jo     d00 <__ImageBase+0xd00>
 c9f:	73 73                	jae    d14 <__ImageBase+0xd14>
 ca1:	77 6f                	ja     d12 <__ImageBase+0xd12>
 ca3:	72 64                	jb     d09 <__ImageBase+0xd09>
 ca5:	00 67 5f             	add    %ah,0x5f(%rdi)
 ca8:	65 63 61 6c          	movsxd %gs:0x6c(%rcx),%esp
 cac:	6c                   	insb   (%dx),%es:(%rdi)
 cad:	5f                   	pop    %rdi
 cae:	74 61                	je     d11 <__ImageBase+0xd11>
 cb0:	62                   	(bad)  
 cb1:	6c                   	insb   (%dx),%es:(%rdi)
 cb2:	65 00 5f 69          	add    %bl,%gs:0x69(%rdi)
 cb6:	6e                   	outsb  %ds:(%rsi),(%dx)
 cb7:	5f                   	pop    %rdi
 cb8:	6e                   	outsb  %ds:(%rsi),(%dx)
 cb9:	65 77 5f             	gs ja  d1b <__ImageBase+0xd1b>
 cbc:	6d                   	insl   (%dx),%es:(%rdi)
 cbd:	61                   	(bad)  
 cbe:	73 74                	jae    d34 <__ImageBase+0xd34>
 cc0:	65 72 70             	gs jb  d33 <__ImageBase+0xd33>
 cc3:	77 00                	ja     cc5 <__ImageBase+0xcc5>
 cc5:	73 67                	jae    d2e <__ImageBase+0xd2e>
 cc7:	78 5f                	js     d28 <__ImageBase+0xd28>
 cc9:	65 63 61 6c          	movsxd %gs:0x6c(%rcx),%esp
 ccd:	6c                   	insb   (%dx),%es:(%rdi)
 cce:	5f                   	pop    %rdi
 ccf:	73 65                	jae    d36 <__ImageBase+0xd36>
 cd1:	74 75                	je     d48 <__ImageBase+0xd48>
 cd3:	70 00                	jo     cd5 <__ImageBase+0xcd5>
 cd5:	5f                   	pop    %rdi
 cd6:	6c                   	insb   (%dx),%es:(%rdi)
 cd7:	65 6e                	outsb  %gs:(%rsi),(%dx)
 cd9:	5f                   	pop    %rdi
 cda:	6e                   	outsb  %ds:(%rsi),(%dx)
 cdb:	65 77 5f             	gs ja  d3d <__ImageBase+0xd3d>
 cde:	6d                   	insl   (%dx),%es:(%rdi)
 cdf:	61                   	(bad)  
 ce0:	73 74                	jae    d56 <__ImageBase+0xd56>
 ce2:	65 72 70             	gs jb  d55 <__ImageBase+0xd55>
 ce5:	77 00                	ja     ce7 <__ImageBase+0xce7>
 ce7:	6d                   	insl   (%dx),%es:(%rdi)
 ce8:	73 5f                	jae    d49 <__ImageBase+0xd49>
 cea:	65 63 61 6c          	movsxd %gs:0x6c(%rcx),%esp
 cee:	6c                   	insb   (%dx),%es:(%rdi)
 cef:	5f                   	pop    %rdi
 cf0:	67 65 74 5f          	addr32 gs je d53 <__ImageBase+0xd53>
 cf4:	70 61                	jo     d57 <__ImageBase+0xd57>
 cf6:	73 73                	jae    d6b <__ImageBase+0xd6b>
 cf8:	77 6f                	ja     d69 <__ImageBase+0xd69>
 cfa:	72 64                	jb     d60 <__ImageBase+0xd60>
 cfc:	73 5f                	jae    d5d <__ImageBase+0xd5d>
 cfe:	74 00                	je     d00 <__ImageBase+0xd00>
 d00:	73 67                	jae    d69 <__ImageBase+0xd69>
 d02:	78 5f                	js     d63 <__ImageBase+0xd63>
 d04:	6f                   	outsl  %ds:(%rsi),(%dx)
 d05:	63 61 6c             	movsxd 0x6c(%rcx),%esp
 d08:	6c                   	insb   (%dx),%es:(%rdi)
 d09:	6f                   	outsl  %ds:(%rsi),(%dx)
 d0a:	63 00                	movsxd (%rax),%eax
 d0c:	6e                   	outsb  %ds:(%rsi),(%dx)
 d0d:	72 5f                	jb     d6e <__ImageBase+0xd6e>
 d0f:	6f                   	outsl  %ds:(%rsi),(%dx)
 d10:	63 61 6c             	movsxd 0x6c(%rcx),%esp
 d13:	6c                   	insb   (%dx),%es:(%rdi)
 d14:	00 5f 69             	add    %bl,0x69(%rdi)
 d17:	6e                   	outsb  %ds:(%rsi),(%dx)
 d18:	5f                   	pop    %rdi
 d19:	70 6c                	jo     d87 <__ImageBase+0xd87>
 d1b:	61                   	(bad)  
 d1c:	69 6e 74 65 78 74 5f 	imul   $0x5f747865,0x74(%rsi),%ebp
 d23:	70 77                	jo     d9c <__ImageBase+0xd9c>
 d25:	00 6d 73             	add    %ch,0x73(%rbp)
 d28:	5f                   	pop    %rdi
 d29:	65 63 61 6c          	movsxd %gs:0x6c(%rcx),%esp
 d2d:	6c                   	insb   (%dx),%es:(%rdi)
 d2e:	5f                   	pop    %rdi
 d2f:	63 6c 65 61          	movsxd 0x61(%rbp,%riz,2),%ebp
 d33:	72 5f                	jb     d94 <__ImageBase+0xd94>
 d35:	61                   	(bad)  
 d36:	6c                   	insb   (%dx),%es:(%rdi)
 d37:	6c                   	insb   (%dx),%es:(%rdi)
 d38:	5f                   	pop    %rdi
 d39:	74 00                	je     d3b <__ImageBase+0xd3b>

Disassembly of section .debug_line_str:

0000000000000000 <.debug_line_str>:
   0:	65 6e                	outsb  %gs:(%rsi),(%dx)
   2:	63 6c 2e 63          	movsxd 0x63(%rsi,%rbp,1),%ebp
   6:	00 2f                	add    %ch,(%rdi)
   8:	68 6f 6d 65 2f       	push   $0x2f656d6f
   d:	6a 61                	push   $0x61
   f:	6e                   	outsb  %ds:(%rsi),(%dx)
  10:	2f                   	(bad)  
  11:	70 77                	jo     8a <__ImageBase+0x8a>
  13:	6d                   	insl   (%dx),%es:(%rdi)
  14:	61                   	(bad)  
  15:	6e                   	outsb  %ds:(%rsi),(%dx)
  16:	61                   	(bad)  
  17:	67 65 72 2d          	addr32 gs jb 48 <__ImageBase+0x48>
  1b:	75 6e                	jne    8b <__ImageBase+0x8b>
  1d:	65 6e                	outsb  %gs:(%rsi),(%dx)
  1f:	63 2f                	movsxd (%rdi),%ebp
  21:	45 6e                	rex.RB outsb %ds:(%rsi),(%dx)
  23:	63 6c 61 76          	movsxd 0x76(%rcx,%riz,2),%ebp
  27:	65 00 2f             	add    %ch,%gs:(%rdi)
  2a:	6f                   	outsl  %ds:(%rsi),(%dx)
  2b:	70 74                	jo     a1 <__ImageBase+0xa1>
  2d:	2f                   	(bad)  
  2e:	69 6e 74 65 6c 2f 73 	imul   $0x732f6c65,0x74(%rsi),%ebp
  35:	67 78 73             	addr32 js ab <__ImageBase+0xab>
  38:	64 6b 2f 69          	imul   $0x69,%fs:(%rdi),%ebp
  3c:	6e                   	outsb  %ds:(%rsi),(%dx)
  3d:	63 6c 75 64          	movsxd 0x64(%rbp,%rsi,2),%ebp
  41:	65 2f                	gs (bad) 
  43:	74 6c                	je     b1 <__ImageBase+0xb1>
  45:	69 62 63 2f 73 79 73 	imul   $0x7379732f,0x63(%rdx),%esp
  4c:	00 2f                	add    %ch,(%rdi)
  4e:	6f                   	outsl  %ds:(%rsi),(%dx)
  4f:	70 74                	jo     c5 <__ImageBase+0xc5>
  51:	2f                   	(bad)  
  52:	69 6e 74 65 6c 2f 73 	imul   $0x732f6c65,0x74(%rsi),%ebp
  59:	67 78 73             	addr32 js cf <__ImageBase+0xcf>
  5c:	64 6b 2f 69          	imul   $0x69,%fs:(%rdi),%ebp
  60:	6e                   	outsb  %ds:(%rsi),(%dx)
  61:	63 6c 75 64          	movsxd 0x64(%rbp,%rsi,2),%ebp
  65:	65 2f                	gs (bad) 
  67:	74 6c                	je     d5 <__ImageBase+0xd5>
  69:	69 62 63 00 2f 6f 70 	imul   $0x706f2f00,0x63(%rdx),%esp
  70:	74 2f                	je     a1 <__ImageBase+0xa1>
  72:	69 6e 74 65 6c 2f 73 	imul   $0x732f6c65,0x74(%rsi),%ebp
  79:	67 78 73             	addr32 js ef <__ImageBase+0xef>
  7c:	64 6b 2f 69          	imul   $0x69,%fs:(%rdi),%ebp
  80:	6e                   	outsb  %ds:(%rsi),(%dx)
  81:	63 6c 75 64          	movsxd 0x64(%rbp,%rsi,2),%ebp
  85:	65 00 5f 74          	add    %bl,%gs:0x74(%rdi)
  89:	79 70                	jns    fb <__ImageBase+0xfb>
  8b:	65 73 2e             	gs jae bc <__ImageBase+0xbc>
  8e:	68 00 77 63 68       	push   $0x68637700
  93:	61                   	(bad)  
  94:	72 2e                	jb     c4 <__ImageBase+0xc4>
  96:	68 00 73 67 78       	push   $0x78677300
  9b:	5f                   	pop    %rdi
  9c:	65 72 72             	gs jb  111 <__ImageBase+0x111>
  9f:	6f                   	outsl  %ds:(%rsi),(%dx)
  a0:	72 2e                	jb     d0 <__ImageBase+0xd0>
  a2:	68 00 73 74 72       	push   $0x72747300
  a7:	69 6e 67 2e 68 00 65 	imul   $0x6500682e,0x67(%rsi),%ebp
  ae:	6e                   	outsb  %ds:(%rsi),(%dx)
  af:	63 6c 5f 74          	movsxd 0x74(%rdi,%rbx,2),%ebp
  b3:	2e 68 00 61 73 6d    	cs push $0x6d736100
  b9:	2e 53                	cs push %rbx
  bb:	00 65 6e             	add    %ah,0x6e(%rbp)
  be:	63 6c 5f 74          	movsxd 0x74(%rdi,%rbx,2),%ebp
  c2:	2e 63 00             	cs movsxd (%rax),%eax
  c5:	73 74                	jae    13b <__ImageBase+0x13b>
  c7:	64 69 6e 74 2e 68 00 	imul   $0x7300682e,%fs:0x74(%rsi),%ebp
  ce:	73 
  cf:	67 78 5f             	addr32 js 131 <__ImageBase+0x131>
  d2:	65 64 67 65 72 38    	gs fs addr32 gs jb 110 <__ImageBase+0x110>
  d8:	72 2e                	jb     108 <__ImageBase+0x108>
  da:	68 00 6d 62 75       	push   $0x75626d00
  df:	73 61                	jae    142 <__ImageBase+0x142>
  e1:	66 65 63 72 74       	movsxd %gs:0x74(%rdx),%si
  e6:	2e 68 00 73 67 78    	cs push $0x78677300
  ec:	5f                   	pop    %rdi
  ed:	74 72                	je     161 <__ImageBase+0x161>
  ef:	74 73                	je     164 <__ImageBase+0x164>
  f1:	2e 68 00 73 74 64    	cs push $0x64747300
  f7:	6c                   	insb   (%dx),%es:(%rdi)
  f8:	69 62 2e 68 00 73 67 	imul   $0x67730068,0x2e(%rdx),%esp
  ff:	78 5f                	js     160 <__ImageBase+0x160>
 101:	6c                   	insb   (%dx),%es:(%rdi)
 102:	66 65 6e             	data16 outsb %gs:(%rsi),(%dx)
 105:	63 65 2e             	movsxd 0x2e(%rbp),%esp
 108:	68                   	.byte 0x68
	...

Disassembly of section .debug_loclists:

0000000000000000 <.debug_loclists>:
   0:	a2 01 00 00 05 00 08 	movabs %al,0x80005000001
   7:	00 00 
   9:	00 00                	add    %al,(%rax)
   b:	00 00                	add    %al,(%rax)
   d:	00 00                	add    %al,(%rax)
   f:	00 04 c4             	add    %al,(%rsp,%rax,8)
  12:	03 dc                	add    %esp,%ebx
  14:	03 01                	add    (%rcx),%eax
  16:	55                   	push   %rbp
  17:	04 dc                	add    $0xdc,%al
  19:	03 a5 04 04 a3 01    	add    0x1a30404(%rbp),%esp
  1f:	55                   	push   %rbp
  20:	9f                   	lahf   
  21:	00 02                	add    %al,(%rdx)
  23:	00 00                	add    %al,(%rax)
  25:	00 00                	add    %al,(%rax)
  27:	00 00                	add    %al,(%rax)
  29:	01 04 ff             	add    %eax,(%rdi,%rdi,8)
  2c:	03 88 04 02 30 9f    	add    -0x60cffdfc(%rax),%ecx
  32:	04 88                	add    $0x88,%al
  34:	04 94                	add    $0x94,%al
  36:	04 0f                	add    $0xf,%al
  38:	71 00                	jno    3a <__ImageBase+0x3a>
  3a:	03 a0 a1 01 00 00    	add    0x1a1(%rax),%esp
  40:	00 00                	add    %al,(%rax)
  42:	00 1c 35 25 9f 04 94 	add    %bl,-0x6bfb60db(,%rsi,1)
  49:	04 96                	add    $0x96,%al
  4b:	04 0f                	add    $0xf,%al
  4d:	75 00                	jne    4f <__ImageBase+0x4f>
  4f:	03 a0 a1 01 00 00    	add    0x1a1(%rax),%esp
  55:	00 00                	add    %al,(%rax)
  57:	00 1c 35 25 9f 04 96 	add    %bl,-0x69fb60db(,%rsi,1)
  5e:	04 96                	add    $0x96,%al
  60:	04 0f                	add    $0xf,%al
  62:	71 00                	jno    64 <__ImageBase+0x64>
  64:	03 c0                	add    %eax,%eax
  66:	a1 01 00 00 00 00 00 	movabs 0x351c000000000001,%eax
  6d:	1c 35 
  6f:	25 9f 00 00 00       	and    $0x9f,%eax
  74:	00 00                	add    %al,(%rax)
  76:	04 fc                	add    $0xfc,%al
  78:	02 99 03 01 55 04    	add    0x4550103(%rcx),%bl
  7e:	99                   	cltd   
  7f:	03 c4                	add    %esp,%eax
  81:	03 04 a3             	add    (%rbx,%riz,4),%eax
  84:	01 55 9f             	add    %edx,-0x61(%rbp)
  87:	00 00                	add    %al,(%rax)
  89:	00 00                	add    %al,(%rax)
  8b:	00 00                	add    %al,(%rax)
  8d:	00 04 fc             	add    %al,(%rsp,%rdi,8)
  90:	02 8f 03 01 54 04    	add    0x4540103(%rdi),%cl
  96:	8f 03                	pop    (%rbx)
  98:	be 03 01 53 04       	mov    $0x4530103,%esi
  9d:	be 03 c4 03 04       	mov    $0x403c403,%esi
  a2:	a3 01 54 9f 00 00 00 	movabs %eax,0x9f5401
  a9:	00 00 
  ab:	04 ac                	add    $0xac,%al
  ad:	02 ca                	add    %dl,%cl
  af:	02 01                	add    (%rcx),%al
  b1:	55                   	push   %rbp
  b2:	04 ca                	add    $0xca,%al
  b4:	02 fc                	add    %ah,%bh
  b6:	02 04 a3             	add    (%rbx,%riz,4),%al
  b9:	01 55 9f             	add    %edx,-0x61(%rbp)
  bc:	00 00                	add    %al,(%rax)
  be:	00 00                	add    %al,(%rax)
  c0:	01 01                	add    %eax,(%rcx)
  c2:	00 04 e0             	add    %al,(%rax,%riz,8)
  c5:	02 ed                	add    %ch,%ch
  c7:	02 01                	add    (%rcx),%al
  c9:	53                   	push   %rbx
  ca:	04 ed                	add    $0xed,%al
  cc:	02 f6                	add    %dh,%dh
  ce:	02 03                	add    (%rbx),%al
  d0:	73 7f                	jae    151 <__ImageBase+0x151>
  d2:	9f                   	lahf   
  d3:	04 f6                	add    $0xf6,%al
  d5:	02 fa                	add    %dl,%bh
  d7:	02 01                	add    (%rcx),%al
  d9:	53                   	push   %rbx
  da:	00 00                	add    %al,(%rax)
  dc:	00 00                	add    %al,(%rax)
  de:	00 04 00             	add    %al,(%rax,%rax,1)
  e1:	0c 01                	or     $0x1,%al
  e3:	55                   	push   %rbp
  e4:	04 0c                	add    $0xc,%al
  e6:	16                   	(bad)  
  e7:	04 a3                	add    $0xa3,%al
  e9:	01 55 9f             	add    %edx,-0x61(%rbp)
	...
  f4:	00 04 00             	add    %al,(%rax,%rax,1)
  f7:	0c 01                	or     $0x1,%al
  f9:	54                   	push   %rsp
  fa:	04 0c                	add    $0xc,%al
  fc:	11 01                	adc    %eax,(%rcx)
  fe:	53                   	push   %rbx
  ff:	04 11                	add    $0x11,%al
 101:	15 01 55 04 15       	adc    $0x15045501,%eax
 106:	16                   	(bad)  
 107:	04 a3                	add    $0xa3,%al
 109:	01 54 9f 00          	add    %edx,0x0(%rdi,%rbx,4)
	...
 115:	00 00                	add    %al,(%rax)
 117:	04 16                	add    $0x16,%al
 119:	2a 01                	sub    (%rcx),%al
 11b:	55                   	push   %rbp
 11c:	04 2a                	add    $0x2a,%al
 11e:	2c 04                	sub    $0x4,%al
 120:	a3 01 55 9f 04 2c 3c 	movabs %eax,0x55013c2c049f5501
 127:	01 55 
 129:	04 3c                	add    $0x3c,%al
 12b:	40 01 54 04 40       	rex add %edx,0x40(%rsp,%rax,1)
 130:	4e 04 a3             	rex.WRX add $0xa3,%al
 133:	01 55 9f             	add    %edx,-0x61(%rbp)
 136:	00 01                	add    %al,(%rcx)
 138:	00 00                	add    %al,(%rax)
 13a:	00 04 23             	add    %al,(%rbx,%riz,1)
 13d:	2a 01                	sub    (%rcx),%al
 13f:	55                   	push   %rbp
 140:	04 2a                	add    $0x2a,%al
 142:	2c 04                	sub    $0x4,%al
 144:	a3 01 55 9f 00 00 00 	movabs %eax,0x9f5501
 14b:	00 00 
 14d:	04 4e                	add    $0x4e,%al
 14f:	68 01 55 04 68       	push   $0x68045501
 154:	b1 01                	mov    $0x1,%cl
 156:	04 a3                	add    $0xa3,%al
 158:	01 55 9f             	add    %edx,-0x61(%rbp)
	...
 163:	00 00                	add    %al,(%rax)
 165:	00 04 4e             	add    %al,(%rsi,%rcx,2)
 168:	62 01 54 04 62       	(bad)
 16d:	77 01                	ja     170 <__ImageBase+0x170>
 16f:	56                   	push   %rsi
 170:	04 77                	add    $0x77,%al
 172:	7c 04                	jl     178 <__ImageBase+0x178>
 174:	a3 01 54 9f 04 7c b0 	movabs %eax,0x101b07c049f5401
 17b:	01 01 
 17d:	56                   	push   %rsi
 17e:	04 b0                	add    $0xb0,%al
 180:	01 b1 01 04 a3 01    	add    %esi,0x1a30401(%rcx)
 186:	54                   	push   %rsp
 187:	9f                   	lahf   
 188:	00 01                	add    %al,(%rcx)
 18a:	00 04 6d 7c 04 a3 01 	add    %al,0x1a3047c(,%rbp,2)
 191:	55                   	push   %rbp
 192:	9f                   	lahf   
 193:	00 01                	add    %al,(%rcx)
 195:	00 00                	add    %al,(%rax)
 197:	00 04 6d 77 01 56 04 	add    %al,0x4560177(,%rbp,2)
 19e:	77 7c                	ja     21c <__ImageBase+0x21c>
 1a0:	04 a3                	add    $0xa3,%al
 1a2:	01 54 9f 00          	add    %edx,0x0(%rdi,%rbx,4)
 1a6:	bc 05 00 00 05       	mov    $0x5000005,%esp
 1ab:	00 08                	add    %cl,(%rax)
	...
 1b5:	00 00                	add    %al,(%rax)
 1b7:	00 04 ae             	add    %al,(%rsi,%rbp,4)
 1ba:	0c ca                	or     $0xca,%al
 1bc:	0c 01                	or     $0x1,%al
 1be:	55                   	push   %rbp
 1bf:	04 ca                	add    $0xca,%al
 1c1:	0c 91                	or     $0x91,%al
 1c3:	0e                   	(bad)  
 1c4:	01 53 04             	add    %edx,0x4(%rbx)
 1c7:	91                   	xchg   %eax,%ecx
 1c8:	0e                   	(bad)  
 1c9:	97                   	xchg   %eax,%edi
 1ca:	0e                   	(bad)  
 1cb:	04 a3                	add    $0xa3,%al
 1cd:	01 55 9f             	add    %edx,-0x61(%rbp)
 1d0:	00 01                	add    %al,(%rcx)
 1d2:	00 00                	add    %al,(%rax)
 1d4:	00 00                	add    %al,(%rax)
 1d6:	01 04 b2             	add    %eax,(%rdx,%rsi,4)
 1d9:	0c 83                	or     $0x83,%al
 1db:	0e                   	(bad)  
 1dc:	02 30                	add    (%rax),%dh
 1de:	9f                   	lahf   
 1df:	04 83                	add    $0x83,%al
 1e1:	0e                   	(bad)  
 1e2:	87 0e                	xchg   %ecx,(%rsi)
 1e4:	01 50 04             	add    %edx,0x4(%rax)
 1e7:	87 0e                	xchg   %ecx,(%rsi)
 1e9:	8c 0e                	mov    %cs,(%rsi)
 1eb:	03 91 bc 7f 00 01    	add    0x1007fbc(%rcx),%edx
 1f1:	00 00                	add    %al,(%rax)
 1f3:	01 01                	add    %eax,(%rcx)
 1f5:	00 00                	add    %al,(%rax)
 1f7:	01 04 cf             	add    %eax,(%rdi,%rcx,8)
 1fa:	0c 9c                	or     $0x9c,%al
 1fc:	0d 02 30 9f 04       	or     $0x49f3002,%eax
 201:	a8 0d                	test   $0xd,%al
 203:	a8 0d                	test   $0xd,%al
 205:	02 30                	add    (%rax),%dh
 207:	9f                   	lahf   
 208:	04 a8                	add    $0xa8,%al
 20a:	0d ac 0d 01 50       	or     $0x50010dac,%eax
 20f:	04 ac                	add    $0xac,%al
 211:	0d 8c 0e 01 5c       	or     $0x5c010e8c,%eax
 216:	00 02                	add    %al,(%rdx)
	...
 220:	01 04 cf             	add    %eax,(%rdi,%rcx,8)
 223:	0c ed                	or     $0xed,%al
 225:	0c 02                	or     $0x2,%al
 227:	38 9f 04 f7 0c fe    	cmp    %bl,-0x1f308fc(%rdi)
 22d:	0c 02                	or     $0x2,%al
 22f:	38 9f 04 fe 0c 8c    	cmp    %bl,-0x73f301fc(%rdi)
 235:	0d 01 55 04 8c       	or     $0x8c045501,%eax
 23a:	0d 9c 0d 03 7d       	or     $0x7d030d9c,%eax
 23f:	08 9f 04 a8 0d b1    	or     %bl,-0x4ef257fc(%rdi)
 245:	0d 03 7d 08 9f       	or     $0x9f087d03,%eax
	...
 256:	00 00                	add    %al,(%rax)
 258:	00 04 00             	add    %al,(%rax,%rax,1)
 25b:	13 01                	adc    (%rcx),%eax
 25d:	55                   	push   %rbp
 25e:	04 13                	add    $0x13,%al
 260:	1e                   	(bad)  
 261:	04 a3                	add    $0xa3,%al
 263:	01 55 9f             	add    %edx,-0x61(%rbp)
 266:	04 1e                	add    $0x1e,%al
 268:	2a 01                	sub    (%rcx),%al
 26a:	55                   	push   %rbp
 26b:	04 2a                	add    $0x2a,%al
 26d:	72 01                	jb     270 <__ImageBase+0x270>
 26f:	53                   	push   %rbx
 270:	04 72                	add    $0x72,%al
 272:	74 04                	je     278 <__ImageBase+0x278>
 274:	a3 01 55 9f 04 74 96 	movabs %eax,0x1019674049f5501
 27b:	01 01 
 27d:	53                   	push   %rbx
 27e:	04 96                	add    $0x96,%al
 280:	01 f3                	add    %esi,%ebx
 282:	01 04 a3             	add    %eax,(%rbx,%riz,4)
 285:	01 55 9f             	add    %edx,-0x61(%rbp)
 288:	00 01                	add    %al,(%rcx)
 28a:	00 00                	add    %al,(%rax)
 28c:	00 00                	add    %al,(%rax)
 28e:	00 00                	add    %al,(%rax)
 290:	00 04 32             	add    %al,(%rdx,%rsi,1)
 293:	72 01                	jb     296 <__ImageBase+0x296>
 295:	53                   	push   %rbx
 296:	04 72                	add    $0x72,%al
 298:	74 04                	je     29e <__ImageBase+0x29e>
 29a:	a3 01 55 9f 04 74 96 	movabs %eax,0x1019674049f5501
 2a1:	01 01 
 2a3:	53                   	push   %rbx
 2a4:	04 96                	add    $0x96,%al
 2a6:	01 e5                	add    %esp,%ebp
 2a8:	01 04 a3             	add    %eax,(%rbx,%riz,4)
 2ab:	01 55 9f             	add    %edx,-0x61(%rbp)
 2ae:	00 01                	add    %al,(%rcx)
 2b0:	00 04 55 dd 01 02 30 	add    %al,0x300201dd(,%rdx,2)
 2b7:	9f                   	lahf   
 2b8:	00 00                	add    %al,(%rax)
 2ba:	00 04 59             	add    %al,(%rcx,%rbx,2)
 2bd:	e5 01                	in     $0x1,%eax
 2bf:	01 5d 00             	add    %ebx,0x0(%rbp)
 2c2:	00 00                	add    %al,(%rax)
 2c4:	04 5e                	add    $0x5e,%al
 2c6:	e5 01                	in     $0x1,%eax
 2c8:	01 56 00             	add    %edx,0x0(%rsi)
 2cb:	01 00                	add    %eax,(%rax)
 2cd:	00 00                	add    %al,(%rax)
 2cf:	00 00                	add    %al,(%rax)
 2d1:	04 5e                	add    $0x5e,%al
 2d3:	96                   	xchg   %eax,%esi
 2d4:	01 02                	add    %eax,(%rdx)
 2d6:	30 9f 04 96 01 ab    	xor    %bl,-0x54fe69fc(%rdi)
 2dc:	01 01                	add    %eax,(%rcx)
 2de:	50                   	push   %rax
 2df:	04 ab                	add    $0xab,%al
 2e1:	01 dd                	add    %ebx,%ebp
 2e3:	01 01                	add    %eax,(%rcx)
 2e5:	53                   	push   %rbx
	...
 2f2:	00 00                	add    %al,(%rax)
 2f4:	00 04 f3             	add    %al,(%rbx,%rsi,8)
 2f7:	01 86 02 01 55 04    	add    %eax,0x4550102(%rsi)
 2fd:	86 02                	xchg   %al,(%rdx)
 2ff:	91                   	xchg   %eax,%ecx
 300:	02 04 a3             	add    (%rbx,%riz,4),%al
 303:	01 55 9f             	add    %edx,-0x61(%rbp)
 306:	04 91                	add    $0x91,%al
 308:	02 9d 02 01 55 04    	add    0x4550102(%rbp),%bl
 30e:	9d                   	popf   
 30f:	02 e5                	add    %ch,%ah
 311:	02 01                	add    (%rcx),%al
 313:	53                   	push   %rbx
 314:	04 e5                	add    $0xe5,%al
 316:	02 e7                	add    %bh,%ah
 318:	02 04 a3             	add    (%rbx,%riz,4),%al
 31b:	01 55 9f             	add    %edx,-0x61(%rbp)
 31e:	04 e7                	add    $0xe7,%al
 320:	02 89 03 01 53 04    	add    0x4530103(%rcx),%cl
 326:	89 03                	mov    %eax,(%rbx)
 328:	e6 03                	out    %al,$0x3
 32a:	04 a3                	add    $0xa3,%al
 32c:	01 55 9f             	add    %edx,-0x61(%rbp)
 32f:	00 01                	add    %al,(%rcx)
 331:	00 00                	add    %al,(%rax)
 333:	00 00                	add    %al,(%rax)
 335:	00 00                	add    %al,(%rax)
 337:	00 04 a5 02 e5 02 01 	add    %al,0x102e502(,%riz,4)
 33e:	53                   	push   %rbx
 33f:	04 e5                	add    $0xe5,%al
 341:	02 e7                	add    %bh,%ah
 343:	02 04 a3             	add    (%rbx,%riz,4),%al
 346:	01 55 9f             	add    %edx,-0x61(%rbp)
 349:	04 e7                	add    $0xe7,%al
 34b:	02 89 03 01 53 04    	add    0x4530103(%rcx),%cl
 351:	89 03                	mov    %eax,(%rbx)
 353:	d8 03                	fadds  (%rbx)
 355:	04 a3                	add    $0xa3,%al
 357:	01 55 9f             	add    %edx,-0x61(%rbp)
 35a:	00 01                	add    %al,(%rcx)
 35c:	00 04 c8             	add    %al,(%rax,%rcx,8)
 35f:	02 d0                	add    %al,%dl
 361:	03 02                	add    (%rdx),%eax
 363:	30 9f 00 00 00 04    	xor    %bl,0x4000000(%rdi)
 369:	cc                   	int3   
 36a:	02 d8                	add    %al,%bl
 36c:	03 01                	add    (%rcx),%eax
 36e:	5d                   	pop    %rbp
 36f:	00 00                	add    %al,(%rax)
 371:	00 04 d1             	add    %al,(%rcx,%rdx,8)
 374:	02 d8                	add    %al,%bl
 376:	03 01                	add    (%rcx),%eax
 378:	56                   	push   %rsi
 379:	00 01                	add    %al,(%rcx)
 37b:	00 00                	add    %al,(%rax)
 37d:	00 00                	add    %al,(%rax)
 37f:	00 04 d1             	add    %al,(%rcx,%rdx,8)
 382:	02 89 03 02 30 9f    	add    -0x60cffdfd(%rcx),%cl
 388:	04 89                	add    $0x89,%al
 38a:	03 9e 03 01 50 04    	add    0x4500103(%rsi),%ebx
 390:	9e                   	sahf   
 391:	03 d0                	add    %eax,%edx
 393:	03 01                	add    (%rcx),%eax
 395:	53                   	push   %rbx
	...
 3a2:	00 00                	add    %al,(%rax)
 3a4:	00 04 e6             	add    %al,(%rsi,%riz,8)
 3a7:	03 f9                	add    %ecx,%edi
 3a9:	03 01                	add    (%rcx),%eax
 3ab:	55                   	push   %rbp
 3ac:	04 f9                	add    $0xf9,%al
 3ae:	03 84 04 04 a3 01 55 	add    0x5501a304(%rsp,%rax,1),%eax
 3b5:	9f                   	lahf   
 3b6:	04 84                	add    $0x84,%al
 3b8:	04 90                	add    $0x90,%al
 3ba:	04 01                	add    $0x1,%al
 3bc:	55                   	push   %rbp
 3bd:	04 90                	add    $0x90,%al
 3bf:	04 d8                	add    $0xd8,%al
 3c1:	04 01                	add    $0x1,%al
 3c3:	53                   	push   %rbx
 3c4:	04 d8                	add    $0xd8,%al
 3c6:	04 da                	add    $0xda,%al
 3c8:	04 04                	add    $0x4,%al
 3ca:	a3 01 55 9f 04 da 04 	movabs %eax,0x4fc04da049f5501
 3d1:	fc 04 
 3d3:	01 53 04             	add    %edx,0x4(%rbx)
 3d6:	fc                   	cld    
 3d7:	04 d9                	add    $0xd9,%al
 3d9:	05 04 a3 01 55       	add    $0x5501a304,%eax
 3de:	9f                   	lahf   
 3df:	00 01                	add    %al,(%rcx)
 3e1:	00 00                	add    %al,(%rax)
 3e3:	00 00                	add    %al,(%rax)
 3e5:	00 00                	add    %al,(%rax)
 3e7:	00 04 98             	add    %al,(%rax,%rbx,4)
 3ea:	04 d8                	add    $0xd8,%al
 3ec:	04 01                	add    $0x1,%al
 3ee:	53                   	push   %rbx
 3ef:	04 d8                	add    $0xd8,%al
 3f1:	04 da                	add    $0xda,%al
 3f3:	04 04                	add    $0x4,%al
 3f5:	a3 01 55 9f 04 da 04 	movabs %eax,0x4fc04da049f5501
 3fc:	fc 04 
 3fe:	01 53 04             	add    %edx,0x4(%rbx)
 401:	fc                   	cld    
 402:	04 cb                	add    $0xcb,%al
 404:	05 04 a3 01 55       	add    $0x5501a304,%eax
 409:	9f                   	lahf   
 40a:	00 01                	add    %al,(%rcx)
 40c:	00 04 bb             	add    %al,(%rbx,%rdi,4)
 40f:	04 c3                	add    $0xc3,%al
 411:	05 02 30 9f 00       	add    $0x9f3002,%eax
 416:	00 00                	add    %al,(%rax)
 418:	04 bf                	add    $0xbf,%al
 41a:	04 cb                	add    $0xcb,%al
 41c:	05 01 5d 00 00       	add    $0x5d01,%eax
 421:	00 04 c4             	add    %al,(%rsp,%rax,8)
 424:	04 cb                	add    $0xcb,%al
 426:	05 01 56 00 01       	add    $0x1005601,%eax
 42b:	00 00                	add    %al,(%rax)
 42d:	00 00                	add    %al,(%rax)
 42f:	00 04 c4             	add    %al,(%rsp,%rax,8)
 432:	04 fc                	add    $0xfc,%al
 434:	04 02                	add    $0x2,%al
 436:	30 9f 04 fc 04 91    	xor    %bl,-0x6efb03fc(%rdi)
 43c:	05 01 50 04 91       	add    $0x91045001,%eax
 441:	05 c3 05 01 53       	add    $0x530105c3,%eax
	...
 452:	00 00                	add    %al,(%rax)
 454:	00 04 d9             	add    %al,(%rcx,%rbx,8)
 457:	05 ee 05 01 55       	add    $0x550105ee,%eax
 45c:	04 ee                	add    $0xee,%al
 45e:	05 f9 05 04 a3       	add    $0xa30405f9,%eax
 463:	01 55 9f             	add    %edx,-0x61(%rbp)
 466:	04 f9                	add    $0xf9,%al
 468:	05 85 06 01 55       	add    $0x55010685,%eax
 46d:	04 85                	add    $0x85,%al
 46f:	06                   	(bad)  
 470:	82                   	(bad)  
 471:	07                   	(bad)  
 472:	01 53 04             	add    %edx,0x4(%rbx)
 475:	82                   	(bad)  
 476:	07                   	(bad)  
 477:	84 07                	test   %al,(%rdi)
 479:	04 a3                	add    $0xa3,%al
 47b:	01 55 9f             	add    %edx,-0x61(%rbp)
 47e:	04 84                	add    $0x84,%al
 480:	07                   	(bad)  
 481:	8f 07                	pop    (%rdi)
 483:	01 53 04             	add    %edx,0x4(%rbx)
 486:	8f 07                	pop    (%rdi)
 488:	f7 08 04 a3 01 55    	testl  $0x5501a304,(%rax)
 48e:	9f                   	lahf   
 48f:	00 01                	add    %al,(%rcx)
 491:	00 00                	add    %al,(%rax)
 493:	00 00                	add    %al,(%rax)
 495:	00 00                	add    %al,(%rax)
 497:	00 04 8d 06 82 07 01 	add    %al,0x1078206(,%rcx,4)
 49e:	53                   	push   %rbx
 49f:	04 82                	add    $0x82,%al
 4a1:	07                   	(bad)  
 4a2:	84 07                	test   %al,(%rdi)
 4a4:	04 a3                	add    $0xa3,%al
 4a6:	01 55 9f             	add    %edx,-0x61(%rbp)
 4a9:	04 84                	add    $0x84,%al
 4ab:	07                   	(bad)  
 4ac:	8f 07                	pop    (%rdi)
 4ae:	01 53 04             	add    %edx,0x4(%rbx)
 4b1:	8f 07                	pop    (%rdi)
 4b3:	e7 08                	out    %eax,$0x8
 4b5:	04 a3                	add    $0xa3,%al
 4b7:	01 55 9f             	add    %edx,-0x61(%rbp)
 4ba:	00 01                	add    %al,(%rcx)
 4bc:	00 00                	add    %al,(%rax)
 4be:	00 00                	add    %al,(%rax)
 4c0:	00 00                	add    %al,(%rax)
 4c2:	00 04 b0             	add    %al,(%rax,%rsi,4)
 4c5:	06                   	(bad)  
 4c6:	a8 08                	test   $0x8,%al
 4c8:	02 30                	add    (%rax),%dh
 4ca:	9f                   	lahf   
 4cb:	04 a8                	add    $0xa8,%al
 4cd:	08 b3 08 02 33 9f    	or     %dh,-0x60ccfdf8(%rbx)
 4d3:	04 b3                	add    $0xb3,%al
 4d5:	08 bb 08 01 5c 04    	or     %bh,0x45c0108(%rbx)
 4db:	ca 08 e1             	lret   $0xe108
 4de:	08 02                	or     %al,(%rdx)
 4e0:	31 9f 00 00 00 04    	xor    %ebx,0x4000000(%rdi)
 4e6:	b4 06                	mov    $0x6,%ah
 4e8:	e7 08                	out    %eax,$0x8
 4ea:	01 5e 00             	add    %ebx,0x0(%rsi)
 4ed:	00 00                	add    %al,(%rax)
 4ef:	00 00                	add    %al,(%rax)
 4f1:	00 00                	add    %al,(%rax)
 4f3:	04 b9                	add    $0xb9,%al
 4f5:	06                   	(bad)  
 4f6:	df 07                	filds  (%rdi)
 4f8:	01 56 04             	add    %edx,0x4(%rsi)
 4fb:	91                   	xchg   %eax,%ecx
 4fc:	08 93 08 01 56 04    	or     %dl,0x4560108(%rbx)
 502:	ca 08 cc             	lret   $0xcc08
 505:	08 01                	or     %al,(%rcx)
 507:	56                   	push   %rsi
 508:	00 01                	add    %al,(%rcx)
 50a:	00 00                	add    %al,(%rax)
 50c:	00 00                	add    %al,(%rax)
 50e:	00 00                	add    %al,(%rax)
 510:	00 04 b9             	add    %al,(%rcx,%rdi,4)
 513:	06                   	(bad)  
 514:	8f 07                	pop    (%rdi)
 516:	02 30                	add    (%rax),%dh
 518:	9f                   	lahf   
 519:	04 8f                	add    $0x8f,%al
 51b:	07                   	(bad)  
 51c:	a8 07                	test   $0x7,%al
 51e:	01 50 04             	add    %edx,0x4(%rax)
 521:	a8 07                	test   $0x7,%al
 523:	bb 08 01 53 04       	mov    $0x4530108,%ebx
 528:	ca 08 e7             	lret   $0xe708
 52b:	08 01                	or     %al,(%rcx)
 52d:	53                   	push   %rbx
 52e:	00 00                	add    %al,(%rax)
 530:	00 04 be             	add    %al,(%rsi,%rdi,4)
 533:	06                   	(bad)  
 534:	e7 08                	out    %eax,$0x8
 536:	01 5d 00             	add    %ebx,0x0(%rbp)
	...
 541:	00 00                	add    %al,(%rax)
 543:	04 c3                	add    $0xc3,%al
 545:	06                   	(bad)  
 546:	9c                   	pushf  
 547:	08 01                	or     %al,(%rcx)
 549:	5c                   	pop    %rsp
 54a:	04 a8                	add    $0xa8,%al
 54c:	08 b3 08 01 5c 04    	or     %dh,0x45c0108(%rbx)
 552:	ca 08 cc             	lret   $0xcc08
 555:	08 01                	or     %al,(%rcx)
 557:	5c                   	pop    %rsp
 558:	04 d4                	add    $0xd4,%al
 55a:	08 da                	or     %bl,%dl
 55c:	08 01                	or     %al,(%rcx)
 55e:	5c                   	pop    %rsp
 55f:	04 e1                	add    $0xe1,%al
 561:	08 e7                	or     %ah,%bh
 563:	08 01                	or     %al,(%rcx)
 565:	5c                   	pop    %rsp
 566:	00 01                	add    %al,(%rcx)
	...
 578:	00 00                	add    %al,(%rax)
 57a:	00 04 c3             	add    %al,(%rbx,%rax,8)
 57d:	06                   	(bad)  
 57e:	df 07                	filds  (%rdi)
 580:	02 30                	add    (%rax),%dh
 582:	9f                   	lahf   
 583:	04 df                	add    $0xdf,%al
 585:	07                   	(bad)  
 586:	f4                   	hlt    
 587:	07                   	(bad)  
 588:	01 50 04             	add    %edx,0x4(%rax)
 58b:	f4                   	hlt    
 58c:	07                   	(bad)  
 58d:	91                   	xchg   %eax,%ecx
 58e:	08 01                	or     %al,(%rcx)
 590:	56                   	push   %rsi
 591:	04 91                	add    $0x91,%al
 593:	08 93 08 02 30 9f    	or     %dl,-0x60cffdf8(%rbx)
 599:	04 93                	add    $0x93,%al
 59b:	08 a8 08 01 56 04    	or     %ch,0x4560108(%rax)
 5a1:	a8 08                	test   $0x8,%al
 5a3:	b3 08                	mov    $0x8,%bl
 5a5:	02 30                	add    (%rax),%dh
 5a7:	9f                   	lahf   
 5a8:	04 b3                	add    $0xb3,%al
 5aa:	08 bb 08 01 56 04    	or     %bh,0x4560108(%rbx)
 5b0:	ca 08 cc             	lret   $0xcc08
 5b3:	08 02                	or     %al,(%rdx)
 5b5:	30 9f 04 d4 08 e1    	xor    %bl,-0x1ef72bfc(%rdi)
 5bb:	08 01                	or     %al,(%rcx)
 5bd:	56                   	push   %rsi
 5be:	04 e1                	add    $0xe1,%al
 5c0:	08 e7                	or     %ah,%bh
 5c2:	08 02                	or     %al,(%rdx)
 5c4:	30 9f 00 00 00 00    	xor    %bl,0x0(%rdi)
	...
 5d2:	00 00                	add    %al,(%rax)
 5d4:	00 04 f7             	add    %al,(%rdi,%rsi,8)
 5d7:	08 8c 09 01 55 04 8c 	or     %cl,-0x73fbaaff(%rcx,%rcx,1)
 5de:	09 97 09 04 a3 01    	or     %edx,0x1a30409(%rdi)
 5e4:	55                   	push   %rbp
 5e5:	9f                   	lahf   
 5e6:	04 97                	add    $0x97,%al
 5e8:	09 a3 09 01 55 04    	or     %esp,0x4550109(%rbx)
 5ee:	a3 09 a0 0a 01 53 04 	movabs %eax,0xaa00453010aa009
 5f5:	a0 0a 
 5f7:	a2 0a 04 a3 01 55 9f 	movabs %al,0xa2049f5501a3040a
 5fe:	04 a2 
 600:	0a ad 0a 01 53 04    	or     0x453010a(%rbp),%ch
 606:	ad                   	lods   %ds:(%rsi),%eax
 607:	0a 95 0c 04 a3 01    	or     0x1a3040c(%rbp),%dl
 60d:	55                   	push   %rbp
 60e:	9f                   	lahf   
 60f:	00 01                	add    %al,(%rcx)
 611:	00 00                	add    %al,(%rax)
 613:	00 00                	add    %al,(%rax)
 615:	00 00                	add    %al,(%rax)
 617:	00 04 ab             	add    %al,(%rbx,%rbp,4)
 61a:	09 a0 0a 01 53 04    	or     %esp,0x453010a(%rax)
 620:	a0 0a a2 0a 04 a3 01 	movabs 0x9f5501a3040aa20a,%al
 627:	55 9f 
 629:	04 a2                	add    $0xa2,%al
 62b:	0a ad 0a 01 53 04    	or     0x453010a(%rbp),%ch
 631:	ad                   	lods   %ds:(%rsi),%eax
 632:	0a 85 0c 04 a3 01    	or     0x1a3040c(%rbp),%al
 638:	55                   	push   %rbp
 639:	9f                   	lahf   
 63a:	00 01                	add    %al,(%rcx)
 63c:	00 00                	add    %al,(%rax)
 63e:	00 00                	add    %al,(%rax)
 640:	00 00                	add    %al,(%rax)
 642:	00 04 ce             	add    %al,(%rsi,%rcx,8)
 645:	09 c6                	or     %eax,%esi
 647:	0b 02                	or     (%rdx),%eax
 649:	30 9f 04 c6 0b d1    	xor    %bl,-0x2ef439fc(%rdi)
 64f:	0b 02                	or     (%rdx),%eax
 651:	33 9f 04 d1 0b d9    	xor    -0x26f42efc(%rdi),%ebx
 657:	0b 01                	or     (%rcx),%eax
 659:	5c                   	pop    %rsp
 65a:	04 e8                	add    $0xe8,%al
 65c:	0b ff                	or     %edi,%edi
 65e:	0b 02                	or     (%rdx),%eax
 660:	31 9f 00 00 00 04    	xor    %ebx,0x4000000(%rdi)
 666:	d2 09                	rorb   %cl,(%rcx)
 668:	85 0c 01             	test   %ecx,(%rcx,%rax,1)
 66b:	5e                   	pop    %rsi
 66c:	00 00                	add    %al,(%rax)
 66e:	00 00                	add    %al,(%rax)
 670:	00 00                	add    %al,(%rax)
 672:	00 04 d7             	add    %al,(%rdi,%rdx,8)
 675:	09 fd                	or     %edi,%ebp
 677:	0a 01                	or     (%rcx),%al
 679:	56                   	push   %rsi
 67a:	04 af                	add    $0xaf,%al
 67c:	0b b1 0b 01 56 04    	or     0x456010b(%rcx),%esi
 682:	e8 0b ea 0b 01       	call   10bf092 <_end+0x1093f02>
 687:	56                   	push   %rsi
 688:	00 01                	add    %al,(%rcx)
 68a:	00 00                	add    %al,(%rax)
 68c:	00 00                	add    %al,(%rax)
 68e:	00 00                	add    %al,(%rax)
 690:	00 04 d7             	add    %al,(%rdi,%rdx,8)
 693:	09 ad 0a 02 30 9f    	or     %ebp,-0x60cffdf6(%rbp)
 699:	04 ad                	add    $0xad,%al
 69b:	0a c6                	or     %dh,%al
 69d:	0a 01                	or     (%rcx),%al
 69f:	50                   	push   %rax
 6a0:	04 c6                	add    $0xc6,%al
 6a2:	0a d9                	or     %cl,%bl
 6a4:	0b 01                	or     (%rcx),%eax
 6a6:	53                   	push   %rbx
 6a7:	04 e8                	add    $0xe8,%al
 6a9:	0b 85 0c 01 53 00    	or     0x53010c(%rbp),%eax
 6af:	00 00                	add    %al,(%rax)
 6b1:	04 dc                	add    $0xdc,%al
 6b3:	09 85 0c 01 5d 00    	or     %eax,0x5d010c(%rbp)
	...
 6c1:	00 00                	add    %al,(%rax)
 6c3:	04 e1                	add    $0xe1,%al
 6c5:	09 ba 0b 01 5c 04    	or     %edi,0x45c010b(%rdx)
 6cb:	c6                   	(bad)  
 6cc:	0b d1                	or     %ecx,%edx
 6ce:	0b 01                	or     (%rcx),%eax
 6d0:	5c                   	pop    %rsp
 6d1:	04 e8                	add    $0xe8,%al
 6d3:	0b ea                	or     %edx,%ebp
 6d5:	0b 01                	or     (%rcx),%eax
 6d7:	5c                   	pop    %rsp
 6d8:	04 f2                	add    $0xf2,%al
 6da:	0b f8                	or     %eax,%edi
 6dc:	0b 01                	or     (%rcx),%eax
 6de:	5c                   	pop    %rsp
 6df:	04 ff                	add    $0xff,%al
 6e1:	0b 85 0c 01 5c 00    	or     0x5c010c(%rbp),%eax
 6e7:	01 00                	add    %eax,(%rax)
	...
 6f9:	00 00                	add    %al,(%rax)
 6fb:	04 e1                	add    $0xe1,%al
 6fd:	09 fd                	or     %edi,%ebp
 6ff:	0a 02                	or     (%rdx),%al
 701:	30 9f 04 fd 0a 92    	xor    %bl,-0x6df502fc(%rdi)
 707:	0b 01                	or     (%rcx),%eax
 709:	50                   	push   %rax
 70a:	04 92                	add    $0x92,%al
 70c:	0b af 0b 01 56 04    	or     0x456010b(%rdi),%ebp
 712:	af                   	scas   %es:(%rdi),%eax
 713:	0b b1 0b 02 30 9f    	or     -0x60cffdf5(%rcx),%esi
 719:	04 b1                	add    $0xb1,%al
 71b:	0b c6                	or     %esi,%eax
 71d:	0b 01                	or     (%rcx),%eax
 71f:	56                   	push   %rsi
 720:	04 c6                	add    $0xc6,%al
 722:	0b d1                	or     %ecx,%edx
 724:	0b 02                	or     (%rdx),%eax
 726:	30 9f 04 d1 0b d9    	xor    %bl,-0x26f42efc(%rdi)
 72c:	0b 01                	or     (%rcx),%eax
 72e:	56                   	push   %rsi
 72f:	04 e8                	add    $0xe8,%al
 731:	0b ea                	or     %edx,%ebp
 733:	0b 02                	or     (%rdx),%eax
 735:	30 9f 04 f2 0b ff    	xor    %bl,-0xf40dfc(%rdi)
 73b:	0b 01                	or     (%rcx),%eax
 73d:	56                   	push   %rsi
 73e:	04 ff                	add    $0xff,%al
 740:	0b 85 0c 02 30 9f    	or     -0x60cffdf4(%rbp),%eax
 746:	00 00                	add    %al,(%rax)
 748:	00 00                	add    %al,(%rax)
 74a:	00 00                	add    %al,(%rax)
 74c:	00 04 95 0c a3 0c 01 	add    %al,0x10ca30c(,%rdx,4)
 753:	55                   	push   %rbp
 754:	04 a3                	add    $0xa3,%al
 756:	0c a8                	or     $0xa8,%al
 758:	0c 04                	or     $0x4,%al
 75a:	a3 01 55 9f 04 a8 0c 	movabs %eax,0xcae0ca8049f5501
 761:	ae 0c 
 763:	01 55 00             	add    %edx,0x0(%rbp)

Disassembly of section .debug_rnglists:

0000000000000000 <.debug_rnglists>:
   0:	12 00                	adc    (%rax),%al
   2:	00 00                	add    %al,(%rax)
   4:	05 00 08 00 00       	add    $0x800,%eax
   9:	00 00                	add    %al,(%rax)
   b:	00 04 6d 6d 04 6e 75 	add    %al,0x756e046d(,%rbp,2)
  12:	04 77                	add    $0x77,%al
  14:	7c 00                	jl     16 <__ImageBase+0x16>
