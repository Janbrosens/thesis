
Enclave/encl.so:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000318 <.interp>:
 318:	2f                   	(bad)  
 319:	6c                   	insb   (%dx),%es:(%rdi)
 31a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 321:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 326:	78 2d                	js     355 <__ImageBase+0x355>
 328:	78 38                	js     362 <__ImageBase+0x362>
 32a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 330:	6f                   	outsl  %ds:(%rsi),(%dx)
 331:	2e 32 00             	cs xor (%rax),%al

Disassembly of section .note.gnu.property:

0000000000000338 <.note.gnu.property>:
 338:	04 00                	add    $0x0,%al
 33a:	00 00                	add    %al,(%rax)
 33c:	20 00                	and    %al,(%rax)
 33e:	00 00                	add    %al,(%rax)
 340:	05 00 00 00 47       	add    $0x47000000,%eax
 345:	4e 55                	rex.WRX push %rbp
 347:	00 01                	add    %al,(%rcx)
 349:	00 01                	add    %al,(%rcx)
 34b:	c0 04 00 00          	rolb   $0x0,(%rax,%rax,1)
 34f:	00 3b                	add    %bh,(%rbx)
 351:	00 00                	add    %al,(%rax)
 353:	00 00                	add    %al,(%rax)
 355:	00 00                	add    %al,(%rax)
 357:	00 02                	add    %al,(%rdx)
 359:	00 01                	add    %al,(%rcx)
 35b:	c0 04 00 00          	rolb   $0x0,(%rax,%rax,1)
 35f:	00 0d 00 00 00 00    	add    %cl,0x0(%rip)        # 365 <__ImageBase+0x365>
 365:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000000368 <.note.gnu.build-id>:
 368:	04 00                	add    $0x0,%al
 36a:	00 00                	add    %al,(%rax)
 36c:	14 00                	adc    $0x0,%al
 36e:	00 00                	add    %al,(%rax)
 370:	03 00                	add    (%rax),%eax
 372:	00 00                	add    %al,(%rax)
 374:	47                   	rex.RXB
 375:	4e 55                	rex.WRX push %rbp
 377:	00 66 2c             	add    %ah,0x2c(%rsi)
 37a:	ab                   	stos   %eax,%es:(%rdi)
 37b:	65 17                	gs (bad) 
 37d:	7f 76                	jg     3f5 <__ImageBase+0x3f5>
 37f:	ac                   	lods   %ds:(%rsi),%al
 380:	7a 4c                	jp     3ce <__ImageBase+0x3ce>
 382:	46 95                	rex.RX xchg %eax,%ebp
 384:	bd fd 1b 08 f3       	mov    $0xf3081bfd,%ebp
 389:	5a                   	pop    %rdx
 38a:	d0 2b                	shrb   (%rbx)

Disassembly of section .gnu.hash:

0000000000000390 <.gnu.hash>:
 390:	11 00                	adc    %eax,(%rax)
 392:	00 00                	add    %al,(%rax)
 394:	03 00                	add    (%rax),%eax
 396:	00 00                	add    %al,(%rax)
 398:	04 00                	add    $0x0,%al
 39a:	00 00                	add    %al,(%rax)
 39c:	08 00                	or     %al,(%rax)
 39e:	00 00                	add    %al,(%rax)
 3a0:	02 00                	add    (%rax),%al
 3a2:	12 00                	adc    (%rax),%al
 3a4:	08 12                	or     %dl,(%rdx)
 3a6:	12 02                	adc    (%rdx),%al
 3a8:	28 10                	sub    %dl,(%rax)
 3aa:	04 e1                	add    $0xe1,%al
 3ac:	00 80 63 59 42 41    	add    %al,0x41425963(%rax)
 3b2:	81 18 4b 01 40 0b    	sbbl   $0xb40014b,(%rax)
 3b8:	84 31                	test   %dh,(%rcx)
 3ba:	17                   	(bad)  
 3bb:	91                   	xchg   %eax,%ecx
 3bc:	40 00 16             	rex add %dl,(%rsi)
 3bf:	30 03                	xor    %al,(%rbx)
 3c1:	00 00                	add    %al,(%rax)
 3c3:	00 06                	add    %al,(%rsi)
 3c5:	00 00                	add    %al,(%rax)
 3c7:	00 0a                	add    %cl,(%rdx)
 3c9:	00 00                	add    %al,(%rax)
 3cb:	00 0c 00             	add    %cl,(%rax,%rax,1)
 3ce:	00 00                	add    %al,(%rax)
 3d0:	0f 00 00             	sldt   (%rax)
 3d3:	00 11                	add    %dl,(%rcx)
 3d5:	00 00                	add    %al,(%rax)
 3d7:	00 13                	add    %dl,(%rbx)
 3d9:	00 00                	add    %al,(%rax)
 3db:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 3e1 <__ImageBase+0x3e1>
 3e1:	00 00                	add    %al,(%rax)
 3e3:	00 19                	add    %bl,(%rcx)
 3e5:	00 00                	add    %al,(%rax)
 3e7:	00 1c 00             	add    %bl,(%rax,%rax,1)
 3ea:	00 00                	add    %al,(%rax)
 3ec:	00 00                	add    %al,(%rax)
 3ee:	00 00                	add    %al,(%rax)
 3f0:	1d 00 00 00 21       	sbb    $0x21000000,%eax
	...
 3fd:	00 00                	add    %al,(%rax)
 3ff:	00 24 00             	add    %ah,(%rax,%rax,1)
 402:	00 00                	add    %al,(%rax)
 404:	6e                   	outsb  %ds:(%rsi),(%dx)
 405:	4c 0d 59 de 72 46    	rex.WR or $0x4672de59,%rax
 40b:	9a                   	(bad)  
 40c:	8f 88 a1 be          	(bad)
 410:	58                   	pop    %rax
 411:	5d                   	pop    %rbp
 412:	85 1b                	test   %ebx,(%rbx)
 414:	9a                   	(bad)  
 415:	5c                   	pop    %rsp
 416:	a0 ac 70 de 02 f2 f1 	movabs 0xac94f1f202de70ac,%al
 41d:	94 ac 
 41f:	67 00 a9 9e da fd 8d 	add    %ch,-0x72022562(%ecx)
 426:	23 fd                	and    %ebp,%edi
 428:	e6 42                	out    %al,$0x42
 42a:	5b                   	pop    %rbx
 42b:	6d                   	insl   (%dx),%es:(%rdi)
 42c:	d8 71 58             	fdivs  0x58(%rcx)
 42f:	1c 75                	sbb    $0x75,%al
 431:	36 20 04 ba          	ss and %al,(%rdx,%rdi,4)
 435:	e3 92                	jrcxz  3c9 <__ImageBase+0x3c9>
 437:	7c 97                	jl     3d0 <__ImageBase+0x3d0>
 439:	81 42 a8 7c b0 3e 88 	addl   $0x883eb07c,-0x58(%rdx)
 440:	23 71 91             	and    -0x6f(%rcx),%esi
 443:	45 d0 0c 74          	rex.RB rorb (%r12,%rsi,2)
 447:	e7 b7                	out    %eax,$0xb7
 449:	39 0d 80 f4 7c 90    	cmp    %ecx,-0x6f830b80(%rip)        # ffffffff907cf8cf <_end+0xffffffff907a48bf>
 44f:	5a                   	pop    %rdx
 450:	b8 a1 15 31 42       	mov    $0x423115a1,%eax
 455:	45 d5                	rex.RB (bad) 
 457:	ec                   	in     (%dx),%al
 458:	01 23                	add    %esp,(%rbx)
 45a:	f9                   	stc    
 45b:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
 45c:	9a                   	(bad)  
 45d:	28 c1                	sub    %al,%cl
 45f:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
 460:	90                   	nop
 461:	c6                   	(bad)  
 462:	fa                   	cli    
 463:	fa                   	cli    
 464:	6f                   	outsl  %ds:(%rsi),(%dx)
 465:	bb 9e 0c 39 54       	mov    $0x54390c9e,%ebx
 46a:	bc 04 5e f8 8c       	mov    $0x8cf85e04,%esp
 46f:	8d 10                	lea    (%rax),%edx
 471:	b4 59                	mov    $0x59,%ah
 473:	31 a0 a6 66 1a dd    	xor    %esp,-0x22e5995a(%rax)
 479:	df 50 a9             	fists  -0x57(%rax)
 47c:	52                   	push   %rdx
 47d:	3e e3 cb             	jrcxz,pt 44b <__ImageBase+0x44b>
 480:	2c 6c                	sub    $0x6c,%al
 482:	67 40 c9             	addr32 rex leave 
 485:	91                   	xchg   %eax,%ecx
 486:	b6 fb                	mov    $0xfb,%dh
 488:	c7                   	(bad)  
 489:	d2                   	.byte 0xd2
 48a:	91                   	xchg   %eax,%ecx
 48b:	c1                   	.byte 0xc1

Disassembly of section .dynsym:

0000000000000490 <.dynsym>:
	...
 4a8:	db 00                	fildl  (%rax)
 4aa:	00 00                	add    %al,(%rax)
 4ac:	20 00                	and    %al,(%rax)
	...
 4be:	00 00                	add    %al,(%rax)
 4c0:	d8 01                	fadds  (%rcx)
 4c2:	00 00                	add    %al,(%rax)
 4c4:	20 00                	and    %al,(%rax)
	...
 4d6:	00 00                	add    %al,(%rax)
 4d8:	50                   	push   %rax
 4d9:	00 00                	add    %al,(%rax)
 4db:	00 21                	add    %ah,(%rcx)
 4dd:	00 11                	add    %dl,(%rcx)
 4df:	00 08                	add    %cl,(%rax)
 4e1:	7e 01                	jle    4e4 <__ImageBase+0x4e4>
 4e3:	00 00                	add    %al,(%rax)
 4e5:	00 00                	add    %al,(%rax)
 4e7:	00 08                	add    %cl,(%rax)
 4e9:	00 00                	add    %al,(%rax)
 4eb:	00 00                	add    %al,(%rax)
 4ed:	00 00                	add    %al,(%rax)
 4ef:	00 c7                	add    %al,%bh
 4f1:	00 00                	add    %al,(%rax)
 4f3:	00 12                	add    %dl,(%rdx)
 4f5:	00 0b                	add    %cl,(%rbx)
 4f7:	00 f2                	add    %dh,%dl
 4f9:	23 01                	and    (%rcx),%eax
	...
 507:	00 1a                	add    %bl,(%rdx)
 509:	01 00                	add    %eax,(%rax)
 50b:	00 12                	add    %dl,(%rdx)
 50d:	00 0a                	add    %cl,(%rdx)
 50f:	00 10                	add    %dl,(%rax)
 511:	10 01                	adc    %al,(%rcx)
 513:	00 00                	add    %al,(%rax)
 515:	00 00                	add    %al,(%rax)
 517:	00 54 00 00          	add    %dl,0x0(%rax,%rax,1)
 51b:	00 00                	add    %al,(%rax)
 51d:	00 00                	add    %al,(%rax)
 51f:	00 8d 01 00 00 12    	add    %cl,0x12000001(%rbp)
 525:	00 0a                	add    %cl,(%rdx)
 527:	00 32                	add    %dh,(%rdx)
 529:	0e                   	(bad)  
 52a:	01 00                	add    %eax,(%rax)
	...
 538:	18 00                	sbb    %al,(%rax)
 53a:	00 00                	add    %al,(%rax)
 53c:	22 00                	and    (%rax),%al
 53e:	0a 00                	or     (%rax),%al
 540:	bf 0e 01 00 00       	mov    $0x10e,%edi
	...
 54d:	00 00                	add    %al,(%rax)
 54f:	00 21                	add    %ah,(%rcx)
 551:	00 00                	add    %al,(%rax)
 553:	00 12                	add    %dl,(%rdx)
 555:	00 0a                	add    %cl,(%rdx)
 557:	00 60 c6             	add    %ah,-0x3a(%rax)
	...
 566:	00 00                	add    %al,(%rax)
 568:	90                   	nop
 569:	00 00                	add    %al,(%rax)
 56b:	00 12                	add    %dl,(%rdx)
 56d:	00 0b                	add    %cl,(%rbx)
 56f:	00 fb                	add    %bh,%bl
 571:	24 01                	and    $0x1,%al
	...
 57f:	00 0c 00             	add    %cl,(%rax,%rax,1)
 582:	00 00                	add    %al,(%rax)
 584:	10 00                	adc    %al,(%rax)
 586:	f1                   	icebp  
 587:	ff 00                	incl   (%rax)
	...
 595:	00 00                	add    %al,(%rax)
 597:	00 68 00             	add    %ch,0x0(%rax)
 59a:	00 00                	add    %al,(%rax)
 59c:	11 00                	adc    %eax,(%rax)
 59e:	14 00                	adc    $0x0,%al
 5a0:	e0 a0                	loopne 542 <__ImageBase+0x542>
 5a2:	01 00                	add    %eax,(%rax)
 5a4:	00 00                	add    %al,(%rax)
 5a6:	00 00                	add    %al,(%rax)
 5a8:	1d 00 00 00 00       	sbb    $0x0,%eax
 5ad:	00 00                	add    %al,(%rax)
 5af:	00 ec                	add    %ch,%ah
 5b1:	00 00                	add    %al,(%rax)
 5b3:	00 12                	add    %dl,(%rdx)
 5b5:	00 0a                	add    %cl,(%rdx)
 5b7:	00 00                	add    %al,(%rax)
 5b9:	10 01                	adc    %al,(%rcx)
 5bb:	00 00                	add    %al,(%rax)
 5bd:	00 00                	add    %al,(%rax)
 5bf:	00 0a                	add    %cl,(%rdx)
 5c1:	00 00                	add    %al,(%rax)
 5c3:	00 00                	add    %al,(%rax)
 5c5:	00 00                	add    %al,(%rax)
 5c7:	00 23                	add    %ah,(%rbx)
 5c9:	01 00                	add    %eax,(%rax)
 5cb:	00 10                	add    %dl,(%rax)
 5cd:	00 16                	add    %dl,(%rsi)
 5cf:	00 60 a1             	add    %ah,-0x5f(%rax)
 5d2:	01 00                	add    %eax,(%rax)
	...
 5e0:	2f                   	(bad)  
 5e1:	01 00                	add    %eax,(%rax)
 5e3:	00 11                	add    %dl,(%rcx)
 5e5:	00 0d 00 80 31 01    	add    %cl,0x1318000(%rip)        # 13185eb <_end+0x12ed5db>
 5eb:	00 00                	add    %al,(%rax)
 5ed:	00 00                	add    %al,(%rax)
 5ef:	00 e0                	add    %ah,%al
 5f1:	06                   	(bad)  
 5f2:	00 00                	add    %al,(%rax)
 5f4:	00 00                	add    %al,(%rax)
 5f6:	00 00                	add    %al,(%rax)
 5f8:	6e                   	outsb  %ds:(%rsi),(%dx)
 5f9:	01 00                	add    %eax,(%rax)
 5fb:	00 10                	add    %dl,(%rax)
 5fd:	00 16                	add    %dl,(%rsi)
 5ff:	00 10                	add    %dl,(%rax)
 601:	b0 02                	mov    $0x2,%al
	...
 60f:	00 8c 01 00 00 22 00 	add    %cl,0x220000(%rcx,%rax,1)
 616:	0a 00                	or     (%rax),%al
 618:	32 0e                	xor    (%rsi),%cl
 61a:	01 00                	add    %eax,(%rax)
	...
 628:	19 00                	sbb    %eax,(%rax)
 62a:	00 00                	add    %al,(%rax)
 62c:	12 00                	adc    (%rax),%al
 62e:	0a 00                	or     (%rax),%al
 630:	bf 0e 01 00 00       	mov    $0x10e,%edi
	...
 63d:	00 00                	add    %al,(%rax)
 63f:	00 b3 01 00 00 10    	add    %dh,0x10000001(%rbx)
 645:	00 14 00             	add    %dl,(%rax,%rax,1)
 648:	00 90 01 00 00 00    	add    %dl,0x1(%rax)
	...
 656:	00 00                	add    %al,(%rax)
 658:	01 00                	add    %eax,(%rax)
 65a:	00 00                	add    %al,(%rax)
 65c:	10 00                	adc    %al,(%rax)
 65e:	0a 00                	or     (%rax),%al
 660:	00 30                	add    %dh,(%rax)
	...
 66e:	00 00                	add    %al,(%rax)
 670:	3d 01 00 00 10       	cmp    $0x10000001,%eax
 675:	00 0b                	add    %cl,(%rbx)
 677:	00 b3 24 01 00 00    	add    %dh,0x124(%rbx)
	...
 685:	00 00                	add    %al,(%rax)
 687:	00 28                	add    %ch,(%rax)
 689:	00 00                	add    %al,(%rax)
 68b:	00 12                	add    %dl,(%rdx)
 68d:	00 0b                	add    %cl,(%rbx)
 68f:	00 5f 21             	add    %bl,0x21(%rdi)
 692:	01 00                	add    %eax,(%rax)
	...
 6a0:	f8                   	clc    
 6a1:	00 00                	add    %al,(%rax)
 6a3:	00 10                	add    %dl,(%rax)
 6a5:	00 0b                	add    %cl,(%rbx)
 6a7:	00 f7                	add    %dh,%bh
 6a9:	20 01                	and    %al,(%rcx)
	...
 6b7:	00 52 01             	add    %dl,0x1(%rdx)
 6ba:	00 00                	add    %al,(%rax)
 6bc:	10 00                	adc    %al,(%rax)
 6be:	15 00 48 a1 01       	adc    $0x1a14800,%eax
	...
 6cf:	00 73 01             	add    %dh,0x1(%rbx)
 6d2:	00 00                	add    %al,(%rax)
 6d4:	22 00                	and    (%rax),%al
 6d6:	0a 00                	or     (%rax),%al
 6d8:	d0 0f                	rorb   (%rdi)
 6da:	01 00                	add    %eax,(%rax)
 6dc:	00 00                	add    %al,(%rax)
 6de:	00 00                	add    %al,(%rax)
 6e0:	09 00                	or     %eax,(%rax)
 6e2:	00 00                	add    %al,(%rax)
 6e4:	00 00                	add    %al,(%rax)
 6e6:	00 00                	add    %al,(%rax)
 6e8:	36 00 00             	ss add %al,(%rax)
 6eb:	00 11                	add    %dl,(%rcx)
 6ed:	00 16                	add    %dl,(%rsi)
 6ef:	00 38                	add    %bh,(%rax)
 6f1:	ae                   	scas   %es:(%rdi),%al
 6f2:	02 00                	add    (%rax),%al
 6f4:	00 00                	add    %al,(%rax)
 6f6:	00 00                	add    %al,(%rax)
 6f8:	08 00                	or     %al,(%rax)
 6fa:	00 00                	add    %al,(%rax)
 6fc:	00 00                	add    %al,(%rax)
 6fe:	00 00                	add    %al,(%rax)
 700:	9a                   	(bad)  
 701:	00 00                	add    %al,(%rax)
 703:	00 11                	add    %dl,(%rcx)
 705:	00 14 00             	add    %dl,(%rax,%rax,1)
 708:	00 a1 01 00 00 00    	add    %ah,0x1(%rcx)
 70e:	00 00                	add    %al,(%rax)
 710:	1f                   	(bad)  
 711:	00 00                	add    %al,(%rax)
 713:	00 00                	add    %al,(%rax)
 715:	00 00                	add    %al,(%rax)
 717:	00 a5 01 00 00 10    	add    %ah,0x10000001(%rbp)
 71d:	00 0b                	add    %cl,(%rbx)
 71f:	00 95 24 01 00 00    	add    %dl,0x124(%rbp)
	...
 72d:	00 00                	add    %al,(%rax)
 72f:	00 c7                	add    %al,%bh
 731:	01 00                	add    %eax,(%rax)
 733:	00 11                	add    %dl,(%rcx)
 735:	00 16                	add    %dl,(%rsi)
 737:	00 20                	add    %ah,(%rax)
 739:	aa                   	stos   %al,%es:(%rdi)
 73a:	02 00                	add    (%rax),%al
 73c:	00 00                	add    %al,(%rax)
 73e:	00 00                	add    %al,(%rax)
 740:	08 00                	or     %al,(%rax)
 742:	00 00                	add    %al,(%rax)
 744:	00 00                	add    %al,(%rax)
 746:	00 00                	add    %al,(%rax)
 748:	ae                   	scas   %es:(%rdi),%al
 749:	00 00                	add    %al,(%rax)
 74b:	00 12                	add    %dl,(%rdx)
 74d:	00 0a                	add    %cl,(%rdx)
 74f:	00 00                	add    %al,(%rax)
 751:	45 00 00             	add    %r8b,(%r8)
 754:	00 00                	add    %al,(%rax)
 756:	00 00                	add    %al,(%rax)
 758:	50                   	push   %rax
 759:	11 00                	adc    %eax,(%rax)
 75b:	00 00                	add    %al,(%rax)
 75d:	00 00                	add    %al,(%rax)
 75f:	00 0c 01             	add    %cl,(%rcx,%rax,1)
 762:	00 00                	add    %al,(%rax)
 764:	12 00                	adc    (%rax),%al
 766:	0a 00                	or     (%rax),%al
 768:	e0 0f                	loopne 779 <__ImageBase+0x779>
 76a:	01 00                	add    %eax,(%rax)
 76c:	00 00                	add    %al,(%rax)
 76e:	00 00                	add    %al,(%rax)
 770:	1d 00 00 00 00       	sbb    $0x0,%eax
 775:	00 00                	add    %al,(%rax)
 777:	00 59 01             	add    %bl,0x1(%rcx)
 77a:	00 00                	add    %al,(%rax)
 77c:	11 00                	adc    %eax,(%rax)
 77e:	14 00                	adc    $0x0,%al
 780:	20 a1 01 00 00 00    	and    %ah,0x1(%rcx)
 786:	00 00                	add    %al,(%rax)
 788:	20 00                	and    %al,(%rax)
 78a:	00 00                	add    %al,(%rax)
 78c:	00 00                	add    %al,(%rax)
 78e:	00 00                	add    %al,(%rax)
 790:	84 01                	test   %al,(%rcx)
 792:	00 00                	add    %al,(%rax)
 794:	12 00                	adc    (%rax),%al
 796:	0a 00                	or     (%rax),%al
 798:	70 10                	jo     7aa <__ImageBase+0x7aa>
 79a:	01 00                	add    %eax,(%rax)
 79c:	00 00                	add    %al,(%rax)
 79e:	00 00                	add    %al,(%rax)
 7a0:	6f                   	outsl  %ds:(%rsi),(%dx)
 7a1:	00 00                	add    %al,(%rax)
 7a3:	00 00                	add    %al,(%rax)
 7a5:	00 00                	add    %al,(%rax)
 7a7:	00 7a 00             	add    %bh,0x0(%rdx)
 7aa:	00 00                	add    %al,(%rax)
 7ac:	10 00                	adc    %al,(%rax)
 7ae:	0b 00                	or     (%rax),%eax
 7b0:	0b 20                	or     (%rax),%esp
 7b2:	01 00                	add    %eax,(%rax)
	...
 7c0:	d0 00                	rolb   (%rax)
 7c2:	00 00                	add    %al,(%rax)
 7c4:	12 00                	adc    (%rax),%al
 7c6:	0b 00                	or     (%rax),%eax
 7c8:	bf 24 01 00 00       	mov    $0x124,%edi
	...
 7d5:	00 00                	add    %al,(%rax)
 7d7:	00 94 01 00 00 11 00 	add    %dl,0x110000(%rcx,%rax,1)
 7de:	14 00                	adc    $0x0,%al
 7e0:	30 82 01 00 00 00    	xor    %al,0x1(%rdx)
 7e6:	00 00                	add    %al,(%rax)
 7e8:	1c 00                	sbb    $0x0,%al
 7ea:	00 00                	add    %al,(%rax)
 7ec:	00 00                	add    %al,(%rax)
 7ee:	00 00                	add    %al,(%rax)
 7f0:	b8 00 00 00 12       	mov    $0x12000000,%eax
 7f5:	00 0b                	add    %cl,(%rbx)
 7f7:	00 dd                	add    %bl,%ch
 7f9:	24 01                	and    $0x1,%al
	...

Disassembly of section .dynstr:

0000000000000808 <.dynstr>:
 808:	00 74 65 73          	add    %dh,0x73(%rbp,%riz,2)
 80c:	74 5f                	je     86d <__ImageBase+0x86d>
 80e:	64 75 6d             	fs jne 87e <__ImageBase+0x87e>
 811:	6d                   	insl   (%dx),%es:(%rdi)
 812:	79 00                	jns    814 <__ImageBase+0x814>
 814:	5f                   	pop    %rdi
 815:	5f                   	pop    %rdi
 816:	49 6d                	rex.WB insl (%dx),%es:(%rdi)
 818:	61                   	(bad)  
 819:	67 65 42 61          	addr32 gs rex.X (bad) 
 81d:	73 65                	jae    884 <__ImageBase+0x884>
 81f:	00 5f 6c             	add    %bl,0x6c(%rdi)
 822:	6f                   	outsl  %ds:(%rsi),(%dx)
 823:	6e                   	outsb  %ds:(%rsi),(%dx)
 824:	67 6a 6d             	addr32 push $0x6d
 827:	70 00                	jo     829 <__ImageBase+0x829>
 829:	61                   	(bad)  
 82a:	6c                   	insb   (%dx),%es:(%rdi)
 82b:	6c                   	insb   (%dx),%es:(%rdi)
 82c:	6f                   	outsl  %ds:(%rsi),(%dx)
 82d:	63 61 00             	movsxd 0x0(%rcx),%esp
 830:	65 6e                	outsb  %gs:(%rsi),(%dx)
 832:	63 6c 61 76          	movsxd 0x76(%rcx,%riz,2),%ebp
 836:	65 5f                	gs pop %rdi
 838:	65 6e                	outsb  %gs:(%rsi),(%dx)
 83a:	74 72                	je     8ae <__ImageBase+0x8ae>
 83c:	79 00                	jns    83e <__ImageBase+0x83e>
 83e:	67 5f                	addr32 pop %rdi
 840:	70 65                	jo     8a7 <__ImageBase+0x8a7>
 842:	61                   	(bad)  
 843:	6b 5f 72 73          	imul   $0x73,0x72(%rdi),%ebx
 847:	72 76                	jb     8bf <__ImageBase+0x8bf>
 849:	5f                   	pop    %rdi
 84a:	6d                   	insl   (%dx),%es:(%rdi)
 84b:	65 6d                	gs insl (%dx),%es:(%rdi)
 84d:	5f                   	pop    %rdi
 84e:	63 6f 6d             	movsxd 0x6d(%rdi),%ebp
 851:	6d                   	insl   (%dx),%es:(%rdi)
 852:	69 74 74 65 64 00 5f 	imul   $0x5f5f0064,0x65(%rsp,%rsi,2),%esi
 859:	5f 
 85a:	69 6e 74 65 6c 5f 73 	imul   $0x735f6c65,0x74(%rsi),%ebp
 861:	65 63 75 72          	movsxd %gs:0x72(%rbp),%esi
 865:	69 74 79 5f 63 6f 6f 	imul   $0x6b6f6f63,0x5f(%rcx,%rdi,2),%esi
 86c:	6b 
 86d:	69 65 00 73 67 78 5f 	imul   $0x5f786773,0x0(%rbp),%esp
 874:	74 73                	je     8e9 <__ImageBase+0x8e9>
 876:	74 64                	je     8dc <__ImageBase+0x8dc>
 878:	63 5f 76             	movsxd 0x76(%rdi),%ebx
 87b:	65 72 73             	gs jb  8f1 <__ImageBase+0x8f1>
 87e:	69 6f 6e 00 5f 5f 63 	imul   $0x635f5f00,0x6e(%rdi),%ebp
 885:	74 5f                	je     8e6 <__ImageBase+0x8e6>
 887:	6d                   	insl   (%dx),%es:(%rdi)
 888:	69 74 69 67 61 74 69 	imul   $0x6f697461,0x67(%rcx,%rbp,2),%esi
 88f:	6f 
 890:	6e                   	outsb  %ds:(%rsi),(%dx)
 891:	5f                   	pop    %rdi
 892:	62                   	(bad)  
 893:	65 67 69 6e 00 64 6f 	imul   $0x655f6f64,%gs:0x0(%esi),%ebp
 89a:	5f 65 
 89c:	6d                   	insl   (%dx),%es:(%rdi)
 89d:	6f                   	outsl  %ds:(%rsi),(%dx)
 89e:	64 70 65             	fs jo  906 <__ImageBase+0x906>
 8a1:	00 73 67             	add    %dh,0x67(%rbx)
 8a4:	78 5f                	js     905 <__ImageBase+0x905>
 8a6:	74 63                	je     90b <__ImageBase+0x90b>
 8a8:	72 79                	jb     923 <__ImageBase+0x923>
 8aa:	70 74                	jo     920 <__ImageBase+0x920>
 8ac:	6f                   	outsl  %ds:(%rsi),(%dx)
 8ad:	5f                   	pop    %rdi
 8ae:	76 65                	jbe    915 <__ImageBase+0x915>
 8b0:	72 73                	jb     925 <__ImageBase+0x925>
 8b2:	69 6f 6e 00 63 74 5f 	imul   $0x5f746300,0x6e(%rdi),%ebp
 8b9:	64 65 63 6f 64       	fs movsxd %gs:0x64(%rdi),%ebp
 8be:	65 00 64 6f 5f       	add    %ah,%gs:0x5f(%rdi,%rbp,2)
 8c3:	65 61                	gs (bad) 
 8c5:	63 63 65             	movsxd 0x65(%rbx),%esp
 8c8:	70 74                	jo     93e <__ImageBase+0x93e>
 8ca:	63 6f 70             	movsxd 0x70(%rdi),%ebp
 8cd:	79 00                	jns    8cf <__ImageBase+0x8cf>
 8cf:	61                   	(bad)  
 8d0:	73 6d                	jae    93f <__ImageBase+0x93f>
 8d2:	5f                   	pop    %rdi
 8d3:	6f                   	outsl  %ds:(%rsi),(%dx)
 8d4:	72 65                	jb     93b <__ImageBase+0x93b>
 8d6:	74 00                	je     8d8 <__ImageBase+0x8d8>
 8d8:	64 6f                	outsl  %fs:(%rsi),(%dx)
 8da:	5f                   	pop    %rdi
 8db:	65 61                	gs (bad) 
 8dd:	63 63 65             	movsxd 0x65(%rbx),%esp
 8e0:	70 74                	jo     956 <__ImageBase+0x956>
 8e2:	00 5f 5a             	add    %bl,0x5a(%rdi)
 8e5:	39 70 63             	cmp    %esi,0x63(%rax)
 8e8:	6c                   	insb   (%dx),%es:(%rdi)
 8e9:	5f                   	pop    %rdi
 8ea:	65 6e                	outsb  %gs:(%rsi),(%dx)
 8ec:	74 72                	je     960 <__ImageBase+0x960>
 8ee:	79 50                	jns    940 <__ImageBase+0x940>
 8f0:	76 53                	jbe    945 <__ImageBase+0x945>
 8f2:	5f                   	pop    %rdi
 8f3:	00 5f 5f             	add    %bl,0x5f(%rdi)
 8f6:	6d                   	insl   (%dx),%es:(%rdi)
 8f7:	65 6d                	gs insl (%dx),%es:(%rdi)
 8f9:	63 70 79             	movsxd 0x79(%rax),%esi
 8fc:	5f                   	pop    %rdi
 8fd:	38 61 00             	cmp    %ah,0x0(%rcx)
 900:	5f                   	pop    %rdi
 901:	5f                   	pop    %rdi
 902:	63 74 5f 6d          	movsxd 0x6d(%rdi,%rbx,2),%esi
 906:	69 74 69 67 61 74 69 	imul   $0x6f697461,0x67(%rcx,%rbp,2),%esi
 90d:	6f 
 90e:	6e                   	outsb  %ds:(%rsi),(%dx)
 90f:	5f                   	pop    %rdi
 910:	72 65                	jb     977 <__ImageBase+0x977>
 912:	74 00                	je     914 <__ImageBase+0x914>
 914:	5f                   	pop    %rdi
 915:	5f                   	pop    %rdi
 916:	6d                   	insl   (%dx),%es:(%rdi)
 917:	65 6d                	gs insl (%dx),%es:(%rdi)
 919:	63 70 79             	movsxd 0x79(%rax),%esi
 91c:	5f                   	pop    %rdi
 91d:	76 65                	jbe    984 <__ImageBase+0x984>
 91f:	72 77                	jb     998 <__ImageBase+0x998>
 921:	00 5f 5f             	add    %bl,0x5f(%rdi)
 924:	6d                   	insl   (%dx),%es:(%rdi)
 925:	65 6d                	gs insl (%dx),%es:(%rdi)
 927:	73 65                	jae    98e <__ImageBase+0x98e>
 929:	74 00                	je     92b <__ImageBase+0x92b>
 92b:	5f                   	pop    %rdi
 92c:	5f                   	pop    %rdi
 92d:	62 73                	(bad)  
 92f:	73 5f                	jae    990 <__ImageBase+0x990>
 931:	73 74                	jae    9a7 <__ImageBase+0x9a7>
 933:	61                   	(bad)  
 934:	72 74                	jb     9aa <__ImageBase+0x9aa>
 936:	00 67 5f             	add    %ah,0x5f(%rdi)
 939:	67 6c                	insb   (%dx),%es:(%edi)
 93b:	6f                   	outsl  %ds:(%rsi),(%dx)
 93c:	62 61 6c 5f 64       	(bad)
 941:	61                   	(bad)  
 942:	74 61                	je     9a5 <__ImageBase+0x9a5>
 944:	00 4c 65 76          	add    %cl,0x76(%rbp,%riz,2)
 948:	65 72 69             	gs jb  9b4 <__ImageBase+0x9b4>
 94b:	66 79 72             	data16 jns 9c0 <__ImageBase+0x9c0>
 94e:	65 70 6f             	gs jo  9c0 <__ImageBase+0x9c0>
 951:	72 74                	jb     9c7 <__ImageBase+0x9c7>
 953:	32 5f 69             	xor    0x69(%rdi),%bl
 956:	6e                   	outsb  %ds:(%rsi),(%dx)
 957:	73 74                	jae    9cd <__ImageBase+0x9cd>
 959:	00 5f 65             	add    %bl,0x65(%rdi)
 95c:	64 61                	fs (bad) 
 95e:	74 61                	je     9c1 <__ImageBase+0x9c1>
 960:	00 73 67             	add    %dh,0x67(%rbx)
 963:	78 5f                	js     9c4 <__ImageBase+0x9c4>
 965:	74 73                	je     9da <__ImageBase+0x9da>
 967:	65 72 76             	gs jb  9e0 <__ImageBase+0x9e0>
 96a:	69 63 65 5f 76 65 72 	imul   $0x7265765f,0x65(%rbx),%esp
 971:	73 69                	jae    9dc <__ImageBase+0x9dc>
 973:	6f                   	outsl  %ds:(%rsi),(%dx)
 974:	6e                   	outsb  %ds:(%rsi),(%dx)
 975:	00 5f 65             	add    %bl,0x65(%rdi)
 978:	6e                   	outsb  %ds:(%rsi),(%dx)
 979:	64 00 5f 5f          	add    %bl,%fs:0x5f(%rdi)
 97d:	65 72 72             	gs jb  9f2 <__ImageBase+0x9f2>
 980:	6e                   	outsb  %ds:(%rsi),(%dx)
 981:	6f                   	outsl  %ds:(%rsi),(%dx)
 982:	5f                   	pop    %rdi
 983:	6c                   	insb   (%dx),%es:(%rdi)
 984:	6f                   	outsl  %ds:(%rsi),(%dx)
 985:	63 61 74             	movsxd 0x74(%rcx),%esp
 988:	69 6f 6e 00 5f 73 74 	imul   $0x74735f00,0x6e(%rdi),%ebp
 98f:	72 6c                	jb     9fd <__ImageBase+0x9fd>
 991:	65 6e                	outsb  %gs:(%rsi),(%dx)
 993:	00 5f 73             	add    %bl,0x73(%rdi)
 996:	65 74 6a             	gs je  a03 <__ImageBase+0xa03>
 999:	6d                   	insl   (%dx),%es:(%rdi)
 99a:	70 00                	jo     99c <__ImageBase+0x99c>
 99c:	73 67                	jae    a05 <__ImageBase+0xa05>
 99e:	78 5f                	js     9ff <__ImageBase+0x9ff>
 9a0:	74 72                	je     a14 <__ImageBase+0xa14>
 9a2:	74 73                	je     a17 <__ImageBase+0xa17>
 9a4:	5f                   	pop    %rdi
 9a5:	76 65                	jbe    a0c <__ImageBase+0xa0c>
 9a7:	72 73                	jb     a1c <__ImageBase+0xa1c>
 9a9:	69 6f 6e 00 4c 65 72 	imul   $0x72654c00,0x6e(%rdi),%ebp
 9b0:	65 70 6f             	gs jo  a22 <__ImageBase+0xa22>
 9b3:	72 74                	jb     a29 <__ImageBase+0xa29>
 9b5:	5f                   	pop    %rdi
 9b6:	69 6e 73 74 00 61 65 	imul   $0x65610074,0x73(%rsi),%ebp
 9bd:	78 5f                	js     a1e <__ImageBase+0xa1e>
 9bf:	6e                   	outsb  %ds:(%rsi),(%dx)
 9c0:	6f                   	outsl  %ds:(%rsi),(%dx)
 9c1:	74 69                	je     a2c <__ImageBase+0xa2c>
 9c3:	66 79 5f             	data16 jns a25 <__ImageBase+0xa25>
 9c6:	63 33                	movsxd (%rbx),%esi
 9c8:	5f                   	pop    %rdi
 9c9:	63 61 63             	movsxd 0x63(%rcx),%esp
 9cc:	68 65 00 67 5f       	push   $0x5f670065
 9d1:	70 65                	jo     a38 <__ImageBase+0xa38>
 9d3:	61                   	(bad)  
 9d4:	6b 5f 68 65          	imul   $0x65,0x68(%rdi),%ebx
 9d8:	61                   	(bad)  
 9d9:	70 5f                	jo     a3a <__ImageBase+0xa3a>
 9db:	75 73                	jne    a50 <__ImageBase+0xa50>
 9dd:	65 64 00 69 70       	gs add %ch,%fs:0x70(%rcx)
 9e2:	70 63                	jo     a47 <__ImageBase+0xa47>
 9e4:	70 53                	jo     a39 <__ImageBase+0xa39>
 9e6:	65 74 43             	gs je  a2c <__ImageBase+0xa2c>
 9e9:	70 75                	jo     a60 <__ImageBase+0xa60>
 9eb:	46                   	rex.RX
 9ec:	65 61                	gs (bad) 
 9ee:	74 75                	je     a65 <__ImageBase+0xa65>
 9f0:	72 65                	jb     a57 <__ImageBase+0xa57>
 9f2:	73 00                	jae    9f4 <__ImageBase+0x9f4>

Disassembly of section .rela.dyn:

00000000000009f8 <.rela.dyn>:
 9f8:	a0 7d 01 00 00 00 00 	movabs 0x80000000000017d,%al
 9ff:	00 08 
	...
 a09:	20 00                	and    %al,(%rax)
 a0b:	00 00                	add    %al,(%rax)
 a0d:	00 00                	add    %al,(%rax)
 a0f:	00 a8 7d 01 00 00    	add    %ch,0x17d(%rax)
 a15:	00 00                	add    %al,(%rax)
 a17:	00 08                	add    %cl,(%rax)
 a19:	00 00                	add    %al,(%rax)
 a1b:	00 00                	add    %al,(%rax)
 a1d:	00 00                	add    %al,(%rax)
 a1f:	00 10                	add    %dl,(%rax)
 a21:	20 00                	and    %al,(%rax)
 a23:	00 00                	add    %al,(%rax)
 a25:	00 00                	add    %al,(%rax)
 a27:	00 b0 7d 01 00 00    	add    %dh,0x17d(%rax)
 a2d:	00 00                	add    %al,(%rax)
 a2f:	00 08                	add    %cl,(%rax)
 a31:	00 00                	add    %al,(%rax)
 a33:	00 00                	add    %al,(%rax)
 a35:	00 00                	add    %al,(%rax)
 a37:	00 30                	add    %dh,(%rax)
 a39:	20 00                	and    %al,(%rax)
 a3b:	00 00                	add    %al,(%rax)
 a3d:	00 00                	add    %al,(%rax)
 a3f:	00 b8 7d 01 00 00    	add    %bh,0x17d(%rax)
 a45:	00 00                	add    %al,(%rax)
 a47:	00 08                	add    %cl,(%rax)
 a49:	00 00                	add    %al,(%rax)
 a4b:	00 00                	add    %al,(%rax)
 a4d:	00 00                	add    %al,(%rax)
 a4f:	00 50 20             	add    %dl,0x20(%rax)
 a52:	00 00                	add    %al,(%rax)
 a54:	00 00                	add    %al,(%rax)
 a56:	00 00                	add    %al,(%rax)
 a58:	c8 7d 01 00          	enter  $0x17d,$0x0
 a5c:	00 00                	add    %al,(%rax)
 a5e:	00 00                	add    %al,(%rax)
 a60:	08 00                	or     %al,(%rax)
 a62:	00 00                	add    %al,(%rax)
 a64:	00 00                	add    %al,(%rax)
 a66:	00 00                	add    %al,(%rax)
 a68:	0e                   	(bad)  
 a69:	41 00 00             	add    %al,(%r8)
 a6c:	00 00                	add    %al,(%rax)
 a6e:	00 00                	add    %al,(%rax)
 a70:	d8 7d 01             	fdivrs 0x1(%rbp)
 a73:	00 00                	add    %al,(%rax)
 a75:	00 00                	add    %al,(%rax)
 a77:	00 08                	add    %cl,(%rax)
 a79:	00 00                	add    %al,(%rax)
 a7b:	00 00                	add    %al,(%rax)
 a7d:	00 00                	add    %al,(%rax)
 a7f:	00 fc                	add    %bh,%ah
 a81:	41 00 00             	add    %al,(%r8)
 a84:	00 00                	add    %al,(%rax)
 a86:	00 00                	add    %al,(%rax)
 a88:	e8 7d 01 00 00       	call   c0a <__ImageBase+0xc0a>
 a8d:	00 00                	add    %al,(%rax)
 a8f:	00 08                	add    %cl,(%rax)
 a91:	00 00                	add    %al,(%rax)
 a93:	00 00                	add    %al,(%rax)
 a95:	00 00                	add    %al,(%rax)
 a97:	00 f5                	add    %dh,%ch
 a99:	40 00 00             	rex add %al,(%rax)
 a9c:	00 00                	add    %al,(%rax)
 a9e:	00 00                	add    %al,(%rax)
 aa0:	f8                   	clc    
 aa1:	7d 01                	jge    aa4 <__ImageBase+0xaa4>
 aa3:	00 00                	add    %al,(%rax)
 aa5:	00 00                	add    %al,(%rax)
 aa7:	00 08                	add    %cl,(%rax)
 aa9:	00 00                	add    %al,(%rax)
 aab:	00 00                	add    %al,(%rax)
 aad:	00 00                	add    %al,(%rax)
 aaf:	00 06                	add    %al,(%rsi)
 ab1:	40 00 00             	rex add %al,(%rax)
 ab4:	00 00                	add    %al,(%rax)
 ab6:	00 00                	add    %al,(%rax)
 ab8:	58                   	pop    %rax
 ab9:	7e 01                	jle    abc <__ImageBase+0xabc>
 abb:	00 00                	add    %al,(%rax)
 abd:	00 00                	add    %al,(%rax)
 abf:	00 08                	add    %cl,(%rax)
 ac1:	00 00                	add    %al,(%rax)
 ac3:	00 00                	add    %al,(%rax)
 ac5:	00 00                	add    %al,(%rax)
 ac7:	00 b0 09 01 00 00    	add    %dh,0x109(%rax)
 acd:	00 00                	add    %al,(%rax)
 acf:	00 d8                	add    %bl,%al
 ad1:	7f 01                	jg     ad4 <__ImageBase+0xad4>
 ad3:	00 00                	add    %al,(%rax)
 ad5:	00 00                	add    %al,(%rax)
 ad7:	00 08                	add    %cl,(%rax)
 ad9:	00 00                	add    %al,(%rax)
 adb:	00 00                	add    %al,(%rax)
 add:	00 00                	add    %al,(%rax)
 adf:	00 b3 24 01 00 00    	add    %dh,0x124(%rbx)
 ae5:	00 00                	add    %al,(%rax)
 ae7:	00 e0                	add    %ah,%al
 ae9:	7f 01                	jg     aec <__ImageBase+0xaec>
 aeb:	00 00                	add    %al,(%rax)
 aed:	00 00                	add    %al,(%rax)
 aef:	00 08                	add    %cl,(%rax)
 af1:	00 00                	add    %al,(%rax)
 af3:	00 00                	add    %al,(%rax)
 af5:	00 00                	add    %al,(%rax)
 af7:	00 95 24 01 00 00    	add    %dl,0x124(%rbp)
 afd:	00 00                	add    %al,(%rax)
 aff:	00 e8                	add    %ch,%al
 b01:	7f 01                	jg     b04 <__ImageBase+0xb04>
 b03:	00 00                	add    %al,(%rax)
 b05:	00 00                	add    %al,(%rax)
 b07:	00 08                	add    %cl,(%rax)
	...
 b11:	90                   	nop
 b12:	01 00                	add    %eax,(%rax)
 b14:	00 00                	add    %al,(%rax)
 b16:	00 00                	add    %al,(%rax)
 b18:	08 80 01 00 00 00    	or     %al,0x1(%rax)
 b1e:	00 00                	add    %al,(%rax)
 b20:	08 00                	or     %al,(%rax)
 b22:	00 00                	add    %al,(%rax)
 b24:	00 00                	add    %al,(%rax)
 b26:	00 00                	add    %al,(%rax)
 b28:	1c 30                	sbb    $0x30,%al
 b2a:	01 00                	add    %eax,(%rax)
 b2c:	00 00                	add    %al,(%rax)
 b2e:	00 00                	add    %al,(%rax)
 b30:	50                   	push   %rax
 b31:	82                   	(bad)  
 b32:	01 00                	add    %eax,(%rax)
 b34:	00 00                	add    %al,(%rax)
 b36:	00 00                	add    %al,(%rax)
 b38:	08 00                	or     %al,(%rax)
 b3a:	00 00                	add    %al,(%rax)
 b3c:	00 00                	add    %al,(%rax)
 b3e:	00 00                	add    %al,(%rax)
 b40:	50                   	push   %rax
 b41:	82                   	(bad)  
 b42:	01 00                	add    %eax,(%rax)
 b44:	00 00                	add    %al,(%rax)
 b46:	00 00                	add    %al,(%rax)
 b48:	00 a0 01 00 00 00    	add    %ah,0x1(%rax)
 b4e:	00 00                	add    %al,(%rax)
 b50:	08 00                	or     %al,(%rax)
 b52:	00 00                	add    %al,(%rax)
 b54:	00 00                	add    %al,(%rax)
 b56:	00 00                	add    %al,(%rax)
 b58:	20 a0 01 00 00 00    	and    %ah,0x1(%rax)
 b5e:	00 00                	add    %al,(%rax)
 b60:	58                   	pop    %rax
 b61:	a0 01 00 00 00 00 00 	movabs 0x8000000000001,%al
 b68:	08 00 
 b6a:	00 00                	add    %al,(%rax)
 b6c:	00 00                	add    %al,(%rax)
 b6e:	00 00                	add    %al,(%rax)
 b70:	20 a0 01 00 00 00    	and    %ah,0x1(%rax)
 b76:	00 00                	add    %al,(%rax)
 b78:	60                   	(bad)  
 b79:	a0 01 00 00 00 00 00 	movabs 0x8000000000001,%al
 b80:	08 00 
 b82:	00 00                	add    %al,(%rax)
 b84:	00 00                	add    %al,(%rax)
 b86:	00 00                	add    %al,(%rax)
 b88:	20 a0 01 00 00 00    	and    %ah,0x1(%rax)
 b8e:	00 00                	add    %al,(%rax)
 b90:	68 a0 01 00 00       	push   $0x1a0
 b95:	00 00                	add    %al,(%rax)
 b97:	00 08                	add    %cl,(%rax)
 b99:	00 00                	add    %al,(%rax)
 b9b:	00 00                	add    %al,(%rax)
 b9d:	00 00                	add    %al,(%rax)
 b9f:	00 80 a0 01 00 00    	add    %al,0x1a0(%rax)
 ba5:	00 00                	add    %al,(%rax)
 ba7:	00 b8 a0 01 00 00    	add    %bh,0x1a0(%rax)
 bad:	00 00                	add    %al,(%rax)
 baf:	00 08                	add    %cl,(%rax)
 bb1:	00 00                	add    %al,(%rax)
 bb3:	00 00                	add    %al,(%rax)
 bb5:	00 00                	add    %al,(%rax)
 bb7:	00 80 a0 01 00 00    	add    %al,0x1a0(%rax)
 bbd:	00 00                	add    %al,(%rax)
 bbf:	00 c0                	add    %al,%al
 bc1:	a0 01 00 00 00 00 00 	movabs 0x8000000000001,%al
 bc8:	08 00 
 bca:	00 00                	add    %al,(%rax)
 bcc:	00 00                	add    %al,(%rax)
 bce:	00 00                	add    %al,(%rax)
 bd0:	80 a0 01 00 00 00 00 	andb   $0x0,0x1(%rax)
 bd7:	00 d0                	add    %dl,%al
 bd9:	7f 01                	jg     bdc <__ImageBase+0xbdc>
 bdb:	00 00                	add    %al,(%rax)
 bdd:	00 00                	add    %al,(%rax)
 bdf:	00 06                	add    %al,(%rsi)
 be1:	00 00                	add    %al,(%rax)
 be3:	00 01                	add    %al,(%rcx)
	...
 bed:	00 00                	add    %al,(%rax)
 bef:	00 f0                	add    %dh,%al
 bf1:	7f 01                	jg     bf4 <__ImageBase+0xbf4>
 bf3:	00 00                	add    %al,(%rax)
 bf5:	00 00                	add    %al,(%rax)
 bf7:	00 06                	add    %al,(%rsi)
 bf9:	00 00                	add    %al,(%rax)
 bfb:	00 02                	add    %al,(%rdx)
	...

Disassembly of section .plt:

0000000000001000 <.plt>:
    1000:	ff 35 ba 6f 01 00    	push   0x16fba(%rip)        # 17fc0 <_GLOBAL_OFFSET_TABLE_+0x8>
    1006:	ff 25 bc 6f 01 00    	jmp    *0x16fbc(%rip)        # 17fc8 <_GLOBAL_OFFSET_TABLE_+0x10>
    100c:	0f 1f 40 00          	nopl   0x0(%rax)

Disassembly of section .plt.got:

0000000000001010 <_Z9pcl_entryPvS_@plt>:
    1010:	ff 25 ba 6f 01 00    	jmp    *0x16fba(%rip)        # 17fd0 <_Z9pcl_entryPvS_>
    1016:	66 90                	xchg   %ax,%ax

0000000000001018 <ippcpSetCpuFeatures@plt>:
    1018:	ff 25 d2 6f 01 00    	jmp    *0x16fd2(%rip)        # 17ff0 <ippcpSetCpuFeatures>
    101e:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000002000 <trts_access_version_dummy1>:
    2000:	f3 0f 1e fa          	endbr64 
    2004:	48 8d 05 25 62 01 00 	lea    0x16225(%rip),%rax        # 18230 <sgx_trts_version>
    200b:	c6 00 73             	movb   $0x73,(%rax)
    200e:	c3                   	ret    
    200f:	90                   	nop

0000000000002010 <tstdc_access_version_dummy1>:
    2010:	f3 0f 1e fa          	endbr64 
    2014:	c6 05 c5 80 01 00 73 	movb   $0x73,0x180c5(%rip)        # 1a0e0 <sgx_tstdc_version>
    201b:	48 8d 05 be 80 01 00 	lea    0x180be(%rip),%rax        # 1a0e0 <sgx_tstdc_version>
    2022:	c3                   	ret    
    2023:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    202a:	00 00 00 
    202d:	0f 1f 00             	nopl   (%rax)

0000000000002030 <tcrypto_access_version_dummy1>:
    2030:	f3 0f 1e fa          	endbr64 
    2034:	c6 05 c5 80 01 00 73 	movb   $0x73,0x180c5(%rip)        # 1a100 <sgx_tcrypto_version>
    203b:	48 8d 05 be 80 01 00 	lea    0x180be(%rip),%rax        # 1a100 <sgx_tcrypto_version>
    2042:	c3                   	ret    
    2043:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    204a:	00 00 00 
    204d:	0f 1f 00             	nopl   (%rax)

0000000000002050 <tservice_access_version_dummy1>:
    2050:	f3 0f 1e fa          	endbr64 
    2054:	c6 05 c5 80 01 00 73 	movb   $0x73,0x180c5(%rip)        # 1a120 <sgx_tservice_version>
    205b:	48 8d 05 be 80 01 00 	lea    0x180be(%rip),%rax        # 1a120 <sgx_tservice_version>
    2062:	c3                   	ret    

0000000000002063 <ecall_update_response_loc>:
    2063:	f3 0f 1e fa          	endbr64 
    2067:	51                   	push   %rcx
    2068:	0f 10 07             	movups (%rdi),%xmm0
    206b:	be 04 00 00 00       	mov    $0x4,%esi
    2070:	66 48 0f 7e c7       	movq   %xmm0,%rdi
    2075:	0f 29 05 e4 80 01 00 	movaps %xmm0,0x180e4(%rip)        # 1a160 <msp>
    207c:	e8 df 3b 00 00       	call   5c60 <sgx_is_outside_enclave>
    2081:	85 c0                	test   %eax,%eax
    2083:	75 12                	jne    2097 <ecall_update_response_loc+0x34>
    2085:	31 d2                	xor    %edx,%edx
    2087:	48 89 15 d2 80 01 00 	mov    %rdx,0x180d2(%rip)        # 1a160 <msp>
    208e:	48 89 15 d3 80 01 00 	mov    %rdx,0x180d3(%rip)        # 1a168 <msp+0x8>
    2095:	eb 15                	jmp    20ac <ecall_update_response_loc+0x49>
    2097:	48 8b 3d ca 80 01 00 	mov    0x180ca(%rip),%rdi        # 1a168 <msp+0x8>
    209e:	be 04 00 00 00       	mov    $0x4,%esi
    20a3:	e8 b8 3b 00 00       	call   5c60 <sgx_is_outside_enclave>
    20a8:	85 c0                	test   %eax,%eax
    20aa:	74 d9                	je     2085 <ecall_update_response_loc+0x22>
    20ac:	58                   	pop    %rax
    20ad:	c3                   	ret    

00000000000020ae <ecall_compute_response>:
    20ae:	f3 0f 1e fa          	endbr64 
    20b2:	48 8b 15 a7 80 01 00 	mov    0x180a7(%rip),%rdx        # 1a160 <msp>
    20b9:	48 85 d2             	test   %rdx,%rdx
    20bc:	74 16                	je     20d4 <ecall_compute_response+0x26>
    20be:	48 8b 05 a3 80 01 00 	mov    0x180a3(%rip),%rax        # 1a168 <msp+0x8>
    20c5:	48 85 c0             	test   %rax,%rax
    20c8:	74 0a                	je     20d4 <ecall_compute_response+0x26>
    20ca:	8d 0c 37             	lea    (%rdi,%rsi,1),%ecx
    20cd:	0f af fe             	imul   %esi,%edi
    20d0:	89 0a                	mov    %ecx,(%rdx)
    20d2:	89 38                	mov    %edi,(%rax)
    20d4:	c3                   	ret    

00000000000020d5 <ecall_get_response>:
    20d5:	f3 0f 1e fa          	endbr64 
    20d9:	50                   	push   %rax
    20da:	48 8b 05 7f 80 01 00 	mov    0x1807f(%rip),%rax        # 1a160 <msp>
    20e1:	48 8d 3d 18 0f 01 00 	lea    0x10f18(%rip),%rdi        # 13000 <second_phase+0xa50>
    20e8:	48 63 30             	movslq (%rax),%rsi
    20eb:	31 c0                	xor    %eax,%eax
    20ed:	e8 59 22 00 00       	call   434b <ocall_print_address>
    20f2:	48 8b 05 6f 80 01 00 	mov    0x1806f(%rip),%rax        # 1a168 <msp+0x8>
    20f9:	48 8d 3d 05 0f 01 00 	lea    0x10f05(%rip),%rdi        # 13005 <second_phase+0xa55>
    2100:	48 63 30             	movslq (%rax),%rsi
    2103:	31 c0                	xor    %eax,%eax
    2105:	5a                   	pop    %rdx
    2106:	e9 40 22 00 00       	jmp    434b <ocall_print_address>

000000000000210b <ecall_get_secret>:
    210b:	f3 0f 1e fa          	endbr64 
    210f:	53                   	push   %rbx
    2110:	48 89 d3             	mov    %rdx,%rbx
    2113:	48 ff ca             	dec    %rdx
    2116:	39 3d e4 5e 01 00    	cmp    %edi,0x15ee4(%rip)        # 18000 <pincode>
    211c:	48 89 f1             	mov    %rsi,%rcx
    211f:	48 8b 35 e2 5e 01 00 	mov    0x15ee2(%rip),%rsi        # 18008 <secret>
    2126:	74 07                	je     212f <ecall_get_secret+0x24>
    2128:	48 8d 35 dc 0e 01 00 	lea    0x10edc(%rip),%rsi        # 1300b <second_phase+0xa5b>
    212f:	48 89 cf             	mov    %rcx,%rdi
    2132:	e8 49 e9 00 00       	call   10a80 <strncpy>
    2137:	c6 44 18 ff 00       	movb   $0x0,-0x1(%rax,%rbx,1)
    213c:	5b                   	pop    %rbx
    213d:	c3                   	ret    
    213e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2145:	00 00 00 
    2148:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    214f:	00 00 00 
    2152:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2159:	00 00 00 
    215c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2163:	00 00 00 
    2166:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    216d:	00 00 00 
    2170:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2177:	00 00 00 
    217a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2181:	00 00 00 
    2184:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    218b:	00 00 00 
    218e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2195:	00 00 00 
    2198:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    219f:	00 00 00 
    21a2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21a9:	00 00 00 
    21ac:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21b3:	00 00 00 
    21b6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21bd:	00 00 00 
    21c0:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21c7:	00 00 00 
    21ca:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21d1:	00 00 00 
    21d4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21db:	00 00 00 
    21de:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21e5:	00 00 00 
    21e8:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21ef:	00 00 00 
    21f2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21f9:	00 00 00 
    21fc:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2203:	00 00 00 
    2206:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    220d:	00 00 00 
    2210:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2217:	00 00 00 
    221a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2221:	00 00 00 
    2224:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    222b:	00 00 00 
    222e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2235:	00 00 00 
    2238:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    223f:	00 00 00 
    2242:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2249:	00 00 00 
    224c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2253:	00 00 00 
    2256:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    225d:	00 00 00 
    2260:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2267:	00 00 00 
    226a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2271:	00 00 00 
    2274:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    227b:	00 00 00 
    227e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2285:	00 00 00 
    2288:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    228f:	00 00 00 
    2292:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2299:	00 00 00 
    229c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22a3:	00 00 00 
    22a6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22ad:	00 00 00 
    22b0:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22b7:	00 00 00 
    22ba:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22c1:	00 00 00 
    22c4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22cb:	00 00 00 
    22ce:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22d5:	00 00 00 
    22d8:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22df:	00 00 00 
    22e2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22e9:	00 00 00 
    22ec:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22f3:	00 00 00 
    22f6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22fd:	00 00 00 
    2300:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2307:	00 00 00 
    230a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2311:	00 00 00 
    2314:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    231b:	00 00 00 
    231e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2325:	00 00 00 
    2328:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    232f:	00 00 00 
    2332:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2339:	00 00 00 
    233c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2343:	00 00 00 
    2346:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    234d:	00 00 00 
    2350:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2357:	00 00 00 
    235a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2361:	00 00 00 
    2364:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    236b:	00 00 00 
    236e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2375:	00 00 00 
    2378:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    237f:	00 00 00 
    2382:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2389:	00 00 00 
    238c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2393:	00 00 00 
    2396:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    239d:	00 00 00 
    23a0:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23a7:	00 00 00 
    23aa:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23b1:	00 00 00 
    23b4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23bb:	00 00 00 
    23be:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23c5:	00 00 00 
    23c8:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23cf:	00 00 00 
    23d2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23d9:	00 00 00 
    23dc:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23e3:	00 00 00 
    23e6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23ed:	00 00 00 
    23f0:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23f7:	00 00 00 
    23fa:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2401:	00 00 00 
    2404:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    240b:	00 00 00 
    240e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2415:	00 00 00 
    2418:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    241f:	00 00 00 
    2422:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2429:	00 00 00 
    242c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2433:	00 00 00 
    2436:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    243d:	00 00 00 
    2440:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2447:	00 00 00 
    244a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2451:	00 00 00 
    2454:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    245b:	00 00 00 
    245e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2465:	00 00 00 
    2468:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    246f:	00 00 00 
    2472:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2479:	00 00 00 
    247c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2483:	00 00 00 
    2486:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    248d:	00 00 00 
    2490:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2497:	00 00 00 
    249a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24a1:	00 00 00 
    24a4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24ab:	00 00 00 
    24ae:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24b5:	00 00 00 
    24b8:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24bf:	00 00 00 
    24c2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24c9:	00 00 00 
    24cc:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24d3:	00 00 00 
    24d6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24dd:	00 00 00 
    24e0:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24e7:	00 00 00 
    24ea:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24f1:	00 00 00 
    24f4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24fb:	00 00 00 
    24fe:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2505:	00 00 00 
    2508:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    250f:	00 00 00 
    2512:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2519:	00 00 00 
    251c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2523:	00 00 00 
    2526:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    252d:	00 00 00 
    2530:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2537:	00 00 00 
    253a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2541:	00 00 00 
    2544:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    254b:	00 00 00 
    254e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2555:	00 00 00 
    2558:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    255f:	00 00 00 
    2562:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2569:	00 00 00 
    256c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2573:	00 00 00 
    2576:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    257d:	00 00 00 
    2580:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2587:	00 00 00 
    258a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2591:	00 00 00 
    2594:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    259b:	00 00 00 
    259e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25a5:	00 00 00 
    25a8:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25af:	00 00 00 
    25b2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25b9:	00 00 00 
    25bc:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25c3:	00 00 00 
    25c6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25cd:	00 00 00 
    25d0:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25d7:	00 00 00 
    25da:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25e1:	00 00 00 
    25e4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25eb:	00 00 00 
    25ee:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25f5:	00 00 00 
    25f8:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25ff:	00 00 00 
    2602:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2609:	00 00 00 
    260c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2613:	00 00 00 
    2616:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    261d:	00 00 00 
    2620:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2627:	00 00 00 
    262a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2631:	00 00 00 
    2634:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    263b:	00 00 00 
    263e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2645:	00 00 00 
    2648:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    264f:	00 00 00 
    2652:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2659:	00 00 00 
    265c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2663:	00 00 00 
    2666:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    266d:	00 00 00 
    2670:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2677:	00 00 00 
    267a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2681:	00 00 00 
    2684:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    268b:	00 00 00 
    268e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2695:	00 00 00 
    2698:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    269f:	00 00 00 
    26a2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26a9:	00 00 00 
    26ac:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26b3:	00 00 00 
    26b6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26bd:	00 00 00 
    26c0:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26c7:	00 00 00 
    26ca:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26d1:	00 00 00 
    26d4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26db:	00 00 00 
    26de:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26e5:	00 00 00 
    26e8:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26ef:	00 00 00 
    26f2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26f9:	00 00 00 
    26fc:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2703:	00 00 00 
    2706:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    270d:	00 00 00 
    2710:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2717:	00 00 00 
    271a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2721:	00 00 00 
    2724:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    272b:	00 00 00 
    272e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2735:	00 00 00 
    2738:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    273f:	00 00 00 
    2742:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2749:	00 00 00 
    274c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2753:	00 00 00 
    2756:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    275d:	00 00 00 
    2760:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2767:	00 00 00 
    276a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2771:	00 00 00 
    2774:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    277b:	00 00 00 
    277e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2785:	00 00 00 
    2788:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    278f:	00 00 00 
    2792:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2799:	00 00 00 
    279c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27a3:	00 00 00 
    27a6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27ad:	00 00 00 
    27b0:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27b7:	00 00 00 
    27ba:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27c1:	00 00 00 
    27c4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27cb:	00 00 00 
    27ce:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27d5:	00 00 00 
    27d8:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27df:	00 00 00 
    27e2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27e9:	00 00 00 
    27ec:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27f3:	00 00 00 
    27f6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27fd:	00 00 00 
    2800:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2807:	00 00 00 
    280a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2811:	00 00 00 
    2814:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    281b:	00 00 00 
    281e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2825:	00 00 00 
    2828:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    282f:	00 00 00 
    2832:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2839:	00 00 00 
    283c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2843:	00 00 00 
    2846:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    284d:	00 00 00 
    2850:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2857:	00 00 00 
    285a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2861:	00 00 00 
    2864:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    286b:	00 00 00 
    286e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2875:	00 00 00 
    2878:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    287f:	00 00 00 
    2882:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2889:	00 00 00 
    288c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2893:	00 00 00 
    2896:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    289d:	00 00 00 
    28a0:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28a7:	00 00 00 
    28aa:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28b1:	00 00 00 
    28b4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28bb:	00 00 00 
    28be:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28c5:	00 00 00 
    28c8:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28cf:	00 00 00 
    28d2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28d9:	00 00 00 
    28dc:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28e3:	00 00 00 
    28e6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28ed:	00 00 00 
    28f0:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28f7:	00 00 00 
    28fa:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2901:	00 00 00 
    2904:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    290b:	00 00 00 
    290e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2915:	00 00 00 
    2918:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    291f:	00 00 00 
    2922:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2929:	00 00 00 
    292c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2933:	00 00 00 
    2936:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    293d:	00 00 00 
    2940:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2947:	00 00 00 
    294a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2951:	00 00 00 
    2954:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    295b:	00 00 00 
    295e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2965:	00 00 00 
    2968:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    296f:	00 00 00 
    2972:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2979:	00 00 00 
    297c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2983:	00 00 00 
    2986:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    298d:	00 00 00 
    2990:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2997:	00 00 00 
    299a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29a1:	00 00 00 
    29a4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29ab:	00 00 00 
    29ae:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29b5:	00 00 00 
    29b8:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29bf:	00 00 00 
    29c2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29c9:	00 00 00 
    29cc:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29d3:	00 00 00 
    29d6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29dd:	00 00 00 
    29e0:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29e7:	00 00 00 
    29ea:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29f1:	00 00 00 
    29f4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29fb:	00 00 00 
    29fe:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a05:	00 00 00 
    2a08:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a0f:	00 00 00 
    2a12:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a19:	00 00 00 
    2a1c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a23:	00 00 00 
    2a26:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a2d:	00 00 00 
    2a30:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a37:	00 00 00 
    2a3a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a41:	00 00 00 
    2a44:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a4b:	00 00 00 
    2a4e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a55:	00 00 00 
    2a58:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a5f:	00 00 00 
    2a62:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a69:	00 00 00 
    2a6c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a73:	00 00 00 
    2a76:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a7d:	00 00 00 
    2a80:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a87:	00 00 00 
    2a8a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a91:	00 00 00 
    2a94:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a9b:	00 00 00 
    2a9e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2aa5:	00 00 00 
    2aa8:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2aaf:	00 00 00 
    2ab2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ab9:	00 00 00 
    2abc:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ac3:	00 00 00 
    2ac6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2acd:	00 00 00 
    2ad0:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ad7:	00 00 00 
    2ada:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ae1:	00 00 00 
    2ae4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2aeb:	00 00 00 
    2aee:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2af5:	00 00 00 
    2af8:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2aff:	00 00 00 
    2b02:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b09:	00 00 00 
    2b0c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b13:	00 00 00 
    2b16:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b1d:	00 00 00 
    2b20:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b27:	00 00 00 
    2b2a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b31:	00 00 00 
    2b34:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b3b:	00 00 00 
    2b3e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b45:	00 00 00 
    2b48:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b4f:	00 00 00 
    2b52:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b59:	00 00 00 
    2b5c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b63:	00 00 00 
    2b66:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b6d:	00 00 00 
    2b70:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b77:	00 00 00 
    2b7a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b81:	00 00 00 
    2b84:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b8b:	00 00 00 
    2b8e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b95:	00 00 00 
    2b98:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b9f:	00 00 00 
    2ba2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ba9:	00 00 00 
    2bac:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2bb3:	00 00 00 
    2bb6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2bbd:	00 00 00 
    2bc0:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2bc7:	00 00 00 
    2bca:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2bd1:	00 00 00 
    2bd4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2bdb:	00 00 00 
    2bde:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2be5:	00 00 00 
    2be8:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2bef:	00 00 00 
    2bf2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2bf9:	00 00 00 
    2bfc:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c03:	00 00 00 
    2c06:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c0d:	00 00 00 
    2c10:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c17:	00 00 00 
    2c1a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c21:	00 00 00 
    2c24:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c2b:	00 00 00 
    2c2e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c35:	00 00 00 
    2c38:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c3f:	00 00 00 
    2c42:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c49:	00 00 00 
    2c4c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c53:	00 00 00 
    2c56:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c5d:	00 00 00 
    2c60:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c67:	00 00 00 
    2c6a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c71:	00 00 00 
    2c74:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c7b:	00 00 00 
    2c7e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c85:	00 00 00 
    2c88:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c8f:	00 00 00 
    2c92:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c99:	00 00 00 
    2c9c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ca3:	00 00 00 
    2ca6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2cad:	00 00 00 
    2cb0:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2cb7:	00 00 00 
    2cba:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2cc1:	00 00 00 
    2cc4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ccb:	00 00 00 
    2cce:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2cd5:	00 00 00 
    2cd8:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2cdf:	00 00 00 
    2ce2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ce9:	00 00 00 
    2cec:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2cf3:	00 00 00 
    2cf6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2cfd:	00 00 00 
    2d00:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d07:	00 00 00 
    2d0a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d11:	00 00 00 
    2d14:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d1b:	00 00 00 
    2d1e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d25:	00 00 00 
    2d28:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d2f:	00 00 00 
    2d32:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d39:	00 00 00 
    2d3c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d43:	00 00 00 
    2d46:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d4d:	00 00 00 
    2d50:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d57:	00 00 00 
    2d5a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d61:	00 00 00 
    2d64:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d6b:	00 00 00 
    2d6e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d75:	00 00 00 
    2d78:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d7f:	00 00 00 
    2d82:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d89:	00 00 00 
    2d8c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d93:	00 00 00 
    2d96:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d9d:	00 00 00 
    2da0:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2da7:	00 00 00 
    2daa:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2db1:	00 00 00 
    2db4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2dbb:	00 00 00 
    2dbe:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2dc5:	00 00 00 
    2dc8:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2dcf:	00 00 00 
    2dd2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2dd9:	00 00 00 
    2ddc:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2de3:	00 00 00 
    2de6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ded:	00 00 00 
    2df0:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2df7:	00 00 00 
    2dfa:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e01:	00 00 00 
    2e04:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e0b:	00 00 00 
    2e0e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e15:	00 00 00 
    2e18:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e1f:	00 00 00 
    2e22:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e29:	00 00 00 
    2e2c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e33:	00 00 00 
    2e36:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e3d:	00 00 00 
    2e40:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e47:	00 00 00 
    2e4a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e51:	00 00 00 
    2e54:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e5b:	00 00 00 
    2e5e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e65:	00 00 00 
    2e68:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e6f:	00 00 00 
    2e72:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e79:	00 00 00 
    2e7c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e83:	00 00 00 
    2e86:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e8d:	00 00 00 
    2e90:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e97:	00 00 00 
    2e9a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ea1:	00 00 00 
    2ea4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2eab:	00 00 00 
    2eae:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2eb5:	00 00 00 
    2eb8:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ebf:	00 00 00 
    2ec2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ec9:	00 00 00 
    2ecc:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ed3:	00 00 00 
    2ed6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2edd:	00 00 00 
    2ee0:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ee7:	00 00 00 
    2eea:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ef1:	00 00 00 
    2ef4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2efb:	00 00 00 
    2efe:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f05:	00 00 00 
    2f08:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f0f:	00 00 00 
    2f12:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f19:	00 00 00 
    2f1c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f23:	00 00 00 
    2f26:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f2d:	00 00 00 
    2f30:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f37:	00 00 00 
    2f3a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f41:	00 00 00 
    2f44:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f4b:	00 00 00 
    2f4e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f55:	00 00 00 
    2f58:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f5f:	00 00 00 
    2f62:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f69:	00 00 00 
    2f6c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f73:	00 00 00 
    2f76:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f7d:	00 00 00 
    2f80:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f87:	00 00 00 
    2f8a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f91:	00 00 00 
    2f94:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f9b:	00 00 00 
    2f9e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2fa5:	00 00 00 
    2fa8:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2faf:	00 00 00 
    2fb2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2fb9:	00 00 00 
    2fbc:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2fc3:	00 00 00 
    2fc6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2fcd:	00 00 00 
    2fd0:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2fd7:	00 00 00 
    2fda:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2fe1:	00 00 00 
    2fe4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2feb:	00 00 00 
    2fee:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ff5:	00 00 00 
    2ff8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    2fff:	00 

0000000000003000 <test_dummy>:
    3000:	b8 00 00 00 00       	mov    $0x0,%eax
    3005:	c3                   	ret    
	...

0000000000004006 <sgx_ecall_get_secret>:
    4006:	f3 0f 1e fa          	endbr64 
    400a:	41 55                	push   %r13
    400c:	41 54                	push   %r12
    400e:	55                   	push   %rbp
    400f:	53                   	push   %rbx
    4010:	48 83 ec 28          	sub    $0x28,%rsp
    4014:	48 85 ff             	test   %rdi,%rdi
    4017:	75 0b                	jne    4024 <sgx_ecall_get_secret+0x1e>
    4019:	41 bc 02 00 00 00    	mov    $0x2,%r12d
    401f:	e9 c3 00 00 00       	jmp    40e7 <sgx_ecall_get_secret+0xe1>
    4024:	be 18 00 00 00       	mov    $0x18,%esi
    4029:	48 89 fb             	mov    %rdi,%rbx
    402c:	e8 2f 1c 00 00       	call   5c60 <sgx_is_outside_enclave>
    4031:	85 c0                	test   %eax,%eax
    4033:	74 e4                	je     4019 <sgx_ecall_get_secret+0x13>
    4035:	0f ae e8             	lfence 
    4038:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    403d:	b9 18 00 00 00       	mov    $0x18,%ecx
    4042:	48 89 da             	mov    %rbx,%rdx
    4045:	be 18 00 00 00       	mov    $0x18,%esi
    404a:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    4050:	e8 eb cc 00 00       	call   10d40 <memcpy_s>
    4055:	85 c0                	test   %eax,%eax
    4057:	0f 85 8a 00 00 00    	jne    40e7 <sgx_ecall_get_secret+0xe1>
    405d:	4c 8b 6c 24 10       	mov    0x10(%rsp),%r13
    4062:	48 8b 6c 24 18       	mov    0x18(%rsp),%rbp
    4067:	4d 85 ed             	test   %r13,%r13
    406a:	75 11                	jne    407d <sgx_ecall_get_secret+0x77>
    406c:	0f ae e8             	lfence 
    406f:	4d 85 ed             	test   %r13,%r13
    4072:	74 05                	je     4079 <sgx_ecall_get_secret+0x73>
    4074:	48 85 ed             	test   %rbp,%rbp
    4077:	75 15                	jne    408e <sgx_ecall_get_secret+0x88>
    4079:	31 db                	xor    %ebx,%ebx
    407b:	eb 31                	jmp    40ae <sgx_ecall_get_secret+0xa8>
    407d:	48 89 ee             	mov    %rbp,%rsi
    4080:	4c 89 ef             	mov    %r13,%rdi
    4083:	e8 d8 1b 00 00       	call   5c60 <sgx_is_outside_enclave>
    4088:	85 c0                	test   %eax,%eax
    408a:	75 e0                	jne    406c <sgx_ecall_get_secret+0x66>
    408c:	eb 8b                	jmp    4019 <sgx_ecall_get_secret+0x13>
    408e:	48 89 ef             	mov    %rbp,%rdi
    4091:	41 bc 03 00 00 00    	mov    $0x3,%r12d
    4097:	e8 34 91 00 00       	call   d1d0 <dlmalloc>
    409c:	48 89 c3             	mov    %rax,%rbx
    409f:	48 85 c0             	test   %rax,%rax
    40a2:	74 43                	je     40e7 <sgx_ecall_get_secret+0xe1>
    40a4:	31 c0                	xor    %eax,%eax
    40a6:	48 89 df             	mov    %rbx,%rdi
    40a9:	48 89 e9             	mov    %rbp,%rcx
    40ac:	f3 aa                	rep stos %al,%es:(%rdi)
    40ae:	8b 7c 24 08          	mov    0x8(%rsp),%edi
    40b2:	48 89 ea             	mov    %rbp,%rdx
    40b5:	48 89 de             	mov    %rbx,%rsi
    40b8:	45 31 e4             	xor    %r12d,%r12d
    40bb:	e8 4b e0 ff ff       	call   210b <ecall_get_secret>
    40c0:	48 85 db             	test   %rbx,%rbx
    40c3:	74 22                	je     40e7 <sgx_ecall_get_secret+0xe1>
    40c5:	4c 89 ef             	mov    %r13,%rdi
    40c8:	48 89 e9             	mov    %rbp,%rcx
    40cb:	48 89 da             	mov    %rbx,%rdx
    40ce:	48 89 ee             	mov    %rbp,%rsi
    40d1:	e8 ea cc 00 00       	call   10dc0 <memcpy_verw_s>
    40d6:	45 31 e4             	xor    %r12d,%r12d
    40d9:	48 89 df             	mov    %rbx,%rdi
    40dc:	85 c0                	test   %eax,%eax
    40de:	41 0f 95 c4          	setne  %r12b
    40e2:	e8 d9 ae 00 00       	call   efc0 <dlfree>
    40e7:	48 83 c4 28          	add    $0x28,%rsp
    40eb:	44 89 e0             	mov    %r12d,%eax
    40ee:	5b                   	pop    %rbx
    40ef:	5d                   	pop    %rbp
    40f0:	41 5c                	pop    %r12
    40f2:	41 5d                	pop    %r13
    40f4:	c3                   	ret    

00000000000040f5 <sgx_ecall_get_response>:
    40f5:	f3 0f 1e fa          	endbr64 
    40f9:	48 85 ff             	test   %rdi,%rdi
    40fc:	75 0a                	jne    4108 <sgx_ecall_get_response+0x13>
    40fe:	50                   	push   %rax
    40ff:	e8 d1 df ff ff       	call   20d5 <ecall_get_response>
    4104:	31 c0                	xor    %eax,%eax
    4106:	5a                   	pop    %rdx
    4107:	c3                   	ret    
    4108:	b8 02 00 00 00       	mov    $0x2,%eax
    410d:	c3                   	ret    

000000000000410e <sgx_ecall_update_response_loc>:
    410e:	f3 0f 1e fa          	endbr64 
    4112:	41 54                	push   %r12
    4114:	55                   	push   %rbp
    4115:	53                   	push   %rbx
    4116:	48 83 ec 10          	sub    $0x10,%rsp
    411a:	48 85 ff             	test   %rdi,%rdi
    411d:	75 0a                	jne    4129 <sgx_ecall_update_response_loc+0x1b>
    411f:	bd 02 00 00 00       	mov    $0x2,%ebp
    4124:	e9 c8 00 00 00       	jmp    41f1 <sgx_ecall_update_response_loc+0xe3>
    4129:	be 08 00 00 00       	mov    $0x8,%esi
    412e:	48 89 fb             	mov    %rdi,%rbx
    4131:	e8 2a 1b 00 00       	call   5c60 <sgx_is_outside_enclave>
    4136:	85 c0                	test   %eax,%eax
    4138:	74 e5                	je     411f <sgx_ecall_update_response_loc+0x11>
    413a:	0f ae e8             	lfence 
    413d:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    4142:	b9 08 00 00 00       	mov    $0x8,%ecx
    4147:	48 89 da             	mov    %rbx,%rdx
    414a:	be 08 00 00 00       	mov    $0x8,%esi
    414f:	bd 01 00 00 00       	mov    $0x1,%ebp
    4154:	e8 e7 cb 00 00       	call   10d40 <memcpy_s>
    4159:	85 c0                	test   %eax,%eax
    415b:	0f 85 90 00 00 00    	jne    41f1 <sgx_ecall_update_response_loc+0xe3>
    4161:	4c 8b 64 24 08       	mov    0x8(%rsp),%r12
    4166:	4d 85 e4             	test   %r12,%r12
    4169:	75 07                	jne    4172 <sgx_ecall_update_response_loc+0x64>
    416b:	0f ae e8             	lfence 
    416e:	31 db                	xor    %ebx,%ebx
    4170:	eb 44                	jmp    41b6 <sgx_ecall_update_response_loc+0xa8>
    4172:	be 10 00 00 00       	mov    $0x10,%esi
    4177:	4c 89 e7             	mov    %r12,%rdi
    417a:	e8 e1 1a 00 00       	call   5c60 <sgx_is_outside_enclave>
    417f:	85 c0                	test   %eax,%eax
    4181:	74 9c                	je     411f <sgx_ecall_update_response_loc+0x11>
    4183:	0f ae e8             	lfence 
    4186:	bf 10 00 00 00       	mov    $0x10,%edi
    418b:	bd 03 00 00 00       	mov    $0x3,%ebp
    4190:	e8 3b 90 00 00       	call   d1d0 <dlmalloc>
    4195:	48 89 c3             	mov    %rax,%rbx
    4198:	48 85 c0             	test   %rax,%rax
    419b:	74 54                	je     41f1 <sgx_ecall_update_response_loc+0xe3>
    419d:	b9 10 00 00 00       	mov    $0x10,%ecx
    41a2:	4c 89 e2             	mov    %r12,%rdx
    41a5:	be 10 00 00 00       	mov    $0x10,%esi
    41aa:	48 89 c7             	mov    %rax,%rdi
    41ad:	e8 8e cb 00 00       	call   10d40 <memcpy_s>
    41b2:	85 c0                	test   %eax,%eax
    41b4:	75 2e                	jne    41e4 <sgx_ecall_update_response_loc+0xd6>
    41b6:	48 89 df             	mov    %rbx,%rdi
    41b9:	31 ed                	xor    %ebp,%ebp
    41bb:	e8 a3 de ff ff       	call   2063 <ecall_update_response_loc>
    41c0:	48 85 db             	test   %rbx,%rbx
    41c3:	74 2c                	je     41f1 <sgx_ecall_update_response_loc+0xe3>
    41c5:	b9 10 00 00 00       	mov    $0x10,%ecx
    41ca:	48 89 da             	mov    %rbx,%rdx
    41cd:	be 10 00 00 00       	mov    $0x10,%esi
    41d2:	4c 89 e7             	mov    %r12,%rdi
    41d5:	e8 e6 cb 00 00       	call   10dc0 <memcpy_verw_s>
    41da:	31 ed                	xor    %ebp,%ebp
    41dc:	85 c0                	test   %eax,%eax
    41de:	40 0f 95 c5          	setne  %bpl
    41e2:	eb 05                	jmp    41e9 <sgx_ecall_update_response_loc+0xdb>
    41e4:	bd 01 00 00 00       	mov    $0x1,%ebp
    41e9:	48 89 df             	mov    %rbx,%rdi
    41ec:	e8 cf ad 00 00       	call   efc0 <dlfree>
    41f1:	48 83 c4 10          	add    $0x10,%rsp
    41f5:	89 e8                	mov    %ebp,%eax
    41f7:	5b                   	pop    %rbx
    41f8:	5d                   	pop    %rbp
    41f9:	41 5c                	pop    %r12
    41fb:	c3                   	ret    

00000000000041fc <sgx_ecall_compute_response>:
    41fc:	f3 0f 1e fa          	endbr64 
    4200:	48 85 ff             	test   %rdi,%rdi
    4203:	74 57                	je     425c <sgx_ecall_compute_response+0x60>
    4205:	53                   	push   %rbx
    4206:	be 08 00 00 00       	mov    $0x8,%esi
    420b:	48 89 fb             	mov    %rdi,%rbx
    420e:	48 83 ec 10          	sub    $0x10,%rsp
    4212:	e8 49 1a 00 00       	call   5c60 <sgx_is_outside_enclave>
    4217:	85 c0                	test   %eax,%eax
    4219:	75 07                	jne    4222 <sgx_ecall_compute_response+0x26>
    421b:	b8 02 00 00 00       	mov    $0x2,%eax
    4220:	eb 34                	jmp    4256 <sgx_ecall_compute_response+0x5a>
    4222:	0f ae e8             	lfence 
    4225:	48 89 da             	mov    %rbx,%rdx
    4228:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    422d:	b9 08 00 00 00       	mov    $0x8,%ecx
    4232:	be 08 00 00 00       	mov    $0x8,%esi
    4237:	e8 04 cb 00 00       	call   10d40 <memcpy_s>
    423c:	89 c2                	mov    %eax,%edx
    423e:	b8 01 00 00 00       	mov    $0x1,%eax
    4243:	85 d2                	test   %edx,%edx
    4245:	75 0f                	jne    4256 <sgx_ecall_compute_response+0x5a>
    4247:	8b 74 24 0c          	mov    0xc(%rsp),%esi
    424b:	8b 7c 24 08          	mov    0x8(%rsp),%edi
    424f:	e8 5a de ff ff       	call   20ae <ecall_compute_response>
    4254:	31 c0                	xor    %eax,%eax
    4256:	48 83 c4 10          	add    $0x10,%rsp
    425a:	5b                   	pop    %rbx
    425b:	c3                   	ret    
    425c:	b8 02 00 00 00       	mov    $0x2,%eax
    4261:	c3                   	ret    

0000000000004262 <ocall_print>:
    4262:	f3 0f 1e fa          	endbr64 
    4266:	41 55                	push   %r13
    4268:	41 54                	push   %r12
    426a:	55                   	push   %rbp
    426b:	31 ed                	xor    %ebp,%ebp
    426d:	53                   	push   %rbx
    426e:	48 89 fb             	mov    %rdi,%rbx
    4271:	48 83 ec 28          	sub    $0x28,%rsp
    4275:	48 85 ff             	test   %rdi,%rdi
    4278:	74 09                	je     4283 <ocall_print+0x21>
    427a:	e8 f1 c7 00 00       	call   10a70 <strlen>
    427f:	48 8d 68 01          	lea    0x1(%rax),%rbp
    4283:	31 c9                	xor    %ecx,%ecx
    4285:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
    428a:	48 85 db             	test   %rbx,%rbx
    428d:	74 1c                	je     42ab <ocall_print+0x49>
    428f:	48 89 ee             	mov    %rbp,%rsi
    4292:	48 89 df             	mov    %rbx,%rdi
    4295:	49 89 ed             	mov    %rbp,%r13
    4298:	e8 63 19 00 00       	call   5c00 <sgx_is_within_enclave>
    429d:	85 c0                	test   %eax,%eax
    429f:	75 0d                	jne    42ae <ocall_print+0x4c>
    42a1:	b8 02 00 00 00       	mov    $0x2,%eax
    42a6:	e9 95 00 00 00       	jmp    4340 <ocall_print+0xde>
    42ab:	45 31 ed             	xor    %r13d,%r13d
    42ae:	49 8d 7d 08          	lea    0x8(%r13),%rdi
    42b2:	48 39 ef             	cmp    %rbp,%rdi
    42b5:	73 05                	jae    42bc <ocall_print+0x5a>
    42b7:	48 85 db             	test   %rbx,%rbx
    42ba:	75 e5                	jne    42a1 <ocall_print+0x3f>
    42bc:	e8 ff 19 00 00       	call   5cc0 <sgx_ocalloc>
    42c1:	49 89 c4             	mov    %rax,%r12
    42c4:	48 85 c0             	test   %rax,%rax
    42c7:	75 13                	jne    42dc <ocall_print+0x7a>
    42c9:	31 d2                	xor    %edx,%edx
    42cb:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
    42d0:	e8 cb 1a 00 00       	call   5da0 <sgx_ocfree>
    42d5:	b8 01 00 00 00       	mov    $0x1,%eax
    42da:	eb 64                	jmp    4340 <ocall_print+0xde>
    42dc:	48 8d 40 08          	lea    0x8(%rax),%rax
    42e0:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    42e5:	48 85 db             	test   %rbx,%rbx
    42e8:	74 39                	je     4323 <ocall_print+0xc1>
    42ea:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
    42ef:	b9 08 00 00 00       	mov    $0x8,%ecx
    42f4:	be 08 00 00 00       	mov    $0x8,%esi
    42f9:	4c 89 e7             	mov    %r12,%rdi
    42fc:	e8 bf ca 00 00       	call   10dc0 <memcpy_verw_s>
    4301:	85 c0                	test   %eax,%eax
    4303:	75 cb                	jne    42d0 <ocall_print+0x6e>
    4305:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    430a:	48 89 e9             	mov    %rbp,%rcx
    430d:	48 89 da             	mov    %rbx,%rdx
    4310:	4c 89 ee             	mov    %r13,%rsi
    4313:	e8 a8 ca 00 00       	call   10dc0 <memcpy_verw_s>
    4318:	85 c0                	test   %eax,%eax
    431a:	75 b4                	jne    42d0 <ocall_print+0x6e>
    431c:	48 01 6c 24 18       	add    %rbp,0x18(%rsp)
    4321:	eb 06                	jmp    4329 <ocall_print+0xc7>
    4323:	31 c0                	xor    %eax,%eax
    4325:	49 89 04 24          	mov    %rax,(%r12)
    4329:	4c 89 e6             	mov    %r12,%rsi
    432c:	31 ff                	xor    %edi,%edi
    432e:	e8 7d 2f 00 00       	call   72b0 <sgx_ocall>
    4333:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    4337:	e8 64 1a 00 00       	call   5da0 <sgx_ocfree>
    433c:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    4340:	48 83 c4 28          	add    $0x28,%rsp
    4344:	5b                   	pop    %rbx
    4345:	5d                   	pop    %rbp
    4346:	41 5c                	pop    %r12
    4348:	41 5d                	pop    %r13
    434a:	c3                   	ret    

000000000000434b <ocall_print_address>:
    434b:	f3 0f 1e fa          	endbr64 
    434f:	41 55                	push   %r13
    4351:	41 54                	push   %r12
    4353:	45 31 e4             	xor    %r12d,%r12d
    4356:	55                   	push   %rbp
    4357:	53                   	push   %rbx
    4358:	48 89 fb             	mov    %rdi,%rbx
    435b:	48 83 ec 28          	sub    $0x28,%rsp
    435f:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    4364:	48 85 ff             	test   %rdi,%rdi
    4367:	74 09                	je     4372 <ocall_print_address+0x27>
    4369:	e8 02 c7 00 00       	call   10a70 <strlen>
    436e:	4c 8d 60 01          	lea    0x1(%rax),%r12
    4372:	31 c9                	xor    %ecx,%ecx
    4374:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
    4379:	48 85 db             	test   %rbx,%rbx
    437c:	74 1c                	je     439a <ocall_print_address+0x4f>
    437e:	4c 89 e6             	mov    %r12,%rsi
    4381:	48 89 df             	mov    %rbx,%rdi
    4384:	4d 89 e5             	mov    %r12,%r13
    4387:	e8 74 18 00 00       	call   5c00 <sgx_is_within_enclave>
    438c:	85 c0                	test   %eax,%eax
    438e:	75 0d                	jne    439d <ocall_print_address+0x52>
    4390:	b8 02 00 00 00       	mov    $0x2,%eax
    4395:	e9 b7 00 00 00       	jmp    4451 <ocall_print_address+0x106>
    439a:	45 31 ed             	xor    %r13d,%r13d
    439d:	49 8d 7d 10          	lea    0x10(%r13),%rdi
    43a1:	4c 39 e7             	cmp    %r12,%rdi
    43a4:	73 05                	jae    43ab <ocall_print_address+0x60>
    43a6:	48 85 db             	test   %rbx,%rbx
    43a9:	75 e5                	jne    4390 <ocall_print_address+0x45>
    43ab:	e8 10 19 00 00       	call   5cc0 <sgx_ocalloc>
    43b0:	48 89 c5             	mov    %rax,%rbp
    43b3:	48 85 c0             	test   %rax,%rax
    43b6:	75 16                	jne    43ce <ocall_print_address+0x83>
    43b8:	31 d2                	xor    %edx,%edx
    43ba:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
    43bf:	e8 dc 19 00 00       	call   5da0 <sgx_ocfree>
    43c4:	b8 01 00 00 00       	mov    $0x1,%eax
    43c9:	e9 83 00 00 00       	jmp    4451 <ocall_print_address+0x106>
    43ce:	48 8d 40 10          	lea    0x10(%rax),%rax
    43d2:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    43d7:	48 85 db             	test   %rbx,%rbx
    43da:	74 39                	je     4415 <ocall_print_address+0xca>
    43dc:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
    43e1:	b9 08 00 00 00       	mov    $0x8,%ecx
    43e6:	be 08 00 00 00       	mov    $0x8,%esi
    43eb:	48 89 ef             	mov    %rbp,%rdi
    43ee:	e8 cd c9 00 00       	call   10dc0 <memcpy_verw_s>
    43f3:	85 c0                	test   %eax,%eax
    43f5:	75 c8                	jne    43bf <ocall_print_address+0x74>
    43f7:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    43fc:	4c 89 e1             	mov    %r12,%rcx
    43ff:	48 89 da             	mov    %rbx,%rdx
    4402:	4c 89 ee             	mov    %r13,%rsi
    4405:	e8 b6 c9 00 00       	call   10dc0 <memcpy_verw_s>
    440a:	85 c0                	test   %eax,%eax
    440c:	75 b1                	jne    43bf <ocall_print_address+0x74>
    440e:	4c 01 64 24 18       	add    %r12,0x18(%rsp)
    4413:	eb 06                	jmp    441b <ocall_print_address+0xd0>
    4415:	31 c0                	xor    %eax,%eax
    4417:	48 89 45 00          	mov    %rax,0x0(%rbp)
    441b:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
    4420:	48 8d 7d 08          	lea    0x8(%rbp),%rdi
    4424:	b9 08 00 00 00       	mov    $0x8,%ecx
    4429:	be 08 00 00 00       	mov    $0x8,%esi
    442e:	e8 8d c9 00 00       	call   10dc0 <memcpy_verw_s>
    4433:	85 c0                	test   %eax,%eax
    4435:	75 88                	jne    43bf <ocall_print_address+0x74>
    4437:	48 89 ee             	mov    %rbp,%rsi
    443a:	bf 01 00 00 00       	mov    $0x1,%edi
    443f:	e8 6c 2e 00 00       	call   72b0 <sgx_ocall>
    4444:	89 44 24 04          	mov    %eax,0x4(%rsp)
    4448:	e8 53 19 00 00       	call   5da0 <sgx_ocfree>
    444d:	8b 44 24 04          	mov    0x4(%rsp),%eax
    4451:	48 83 c4 28          	add    $0x28,%rsp
    4455:	5b                   	pop    %rbx
    4456:	5d                   	pop    %rbp
    4457:	41 5c                	pop    %r12
    4459:	41 5d                	pop    %r13
    445b:	c3                   	ret    
    445c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000004460 <register_value_select>:
    4460:	89 f1                	mov    %esi,%ecx
    4462:	31 c0                	xor    %eax,%eax
    4464:	48 83 f9 00          	cmp    $0x0,%rcx
    4468:	48 0f 44 07          	cmove  (%rdi),%rax
    446c:	48 83 f9 01          	cmp    $0x1,%rcx
    4470:	48 0f 44 47 08       	cmove  0x8(%rdi),%rax
    4475:	48 83 f9 02          	cmp    $0x2,%rcx
    4479:	48 0f 44 47 10       	cmove  0x10(%rdi),%rax
    447e:	48 83 f9 03          	cmp    $0x3,%rcx
    4482:	48 0f 44 47 18       	cmove  0x18(%rdi),%rax
    4487:	48 83 f9 04          	cmp    $0x4,%rcx
    448b:	48 0f 44 47 20       	cmove  0x20(%rdi),%rax
    4490:	48 83 f9 05          	cmp    $0x5,%rcx
    4494:	48 0f 44 47 28       	cmove  0x28(%rdi),%rax
    4499:	48 83 f9 06          	cmp    $0x6,%rcx
    449d:	48 0f 44 47 30       	cmove  0x30(%rdi),%rax
    44a2:	48 83 f9 07          	cmp    $0x7,%rcx
    44a6:	48 0f 44 47 38       	cmove  0x38(%rdi),%rax
    44ab:	48 83 f9 08          	cmp    $0x8,%rcx
    44af:	48 0f 44 47 40       	cmove  0x40(%rdi),%rax
    44b4:	48 83 f9 09          	cmp    $0x9,%rcx
    44b8:	48 0f 44 47 48       	cmove  0x48(%rdi),%rax
    44bd:	48 83 f9 0a          	cmp    $0xa,%rcx
    44c1:	48 0f 44 47 50       	cmove  0x50(%rdi),%rax
    44c6:	48 83 f9 0b          	cmp    $0xb,%rcx
    44ca:	48 0f 44 47 58       	cmove  0x58(%rdi),%rax
    44cf:	48 83 f9 0c          	cmp    $0xc,%rcx
    44d3:	48 0f 44 47 60       	cmove  0x60(%rdi),%rax
    44d8:	48 83 f9 0d          	cmp    $0xd,%rcx
    44dc:	48 0f 44 47 68       	cmove  0x68(%rdi),%rax
    44e1:	48 83 f9 0e          	cmp    $0xe,%rcx
    44e5:	48 0f 44 47 70       	cmove  0x70(%rdi),%rax
    44ea:	48 83 f9 0f          	cmp    $0xf,%rcx
    44ee:	48 0f 44 47 78       	cmove  0x78(%rdi),%rax
    44f3:	c3                   	ret    
    44f4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    44fb:	00 00 00 
    44fe:	66 90                	xchg   %ax,%ax

0000000000004500 <ct_decode>:
    4500:	f3 0f 1e fa          	endbr64 
    4504:	55                   	push   %rbp
    4505:	48 89 e5             	mov    %rsp,%rbp
    4508:	41 57                	push   %r15
    450a:	41 56                	push   %r14
    450c:	41 55                	push   %r13
    450e:	41 54                	push   %r12
    4510:	53                   	push   %rbx
    4511:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    4515:	48 81 ec 40 05 00 00 	sub    $0x540,%rsp
    451c:	48 89 7c 24 78       	mov    %rdi,0x78(%rsp)
    4521:	48 89 74 24 50       	mov    %rsi,0x50(%rsp)
    4526:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    452d:	00 00 
    452f:	48 89 84 24 38 05 00 	mov    %rax,0x538(%rsp)
    4536:	00 
    4537:	31 c0                	xor    %eax,%eax
    4539:	48 8d 84 24 00 01 00 	lea    0x100(%rsp),%rax
    4540:	00 
    4541:	f6 05 eb 38 01 00 08 	testb  $0x8,0x138eb(%rip)        # 17e33 <g_cpu_feature_indicator+0x3>
    4548:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    454d:	0f 84 fd 0f 00 00    	je     5550 <ct_decode+0x1050>
    4553:	62 f1 7c 48 29 00    	vmovaps %zmm0,(%rax)
    4559:	62 f1 7c 48 29 48 01 	vmovaps %zmm1,0x40(%rax)
    4560:	62 f1 7c 48 29 50 02 	vmovaps %zmm2,0x80(%rax)
    4567:	62 f1 7c 48 29 58 03 	vmovaps %zmm3,0xc0(%rax)
    456e:	62 f1 7c 48 29 60 04 	vmovaps %zmm4,0x100(%rax)
    4575:	62 f1 7c 48 29 68 05 	vmovaps %zmm5,0x140(%rax)
    457c:	62 f1 7c 48 29 70 06 	vmovaps %zmm6,0x180(%rax)
    4583:	62 f1 7c 48 29 78 07 	vmovaps %zmm7,0x1c0(%rax)
    458a:	62 71 7c 48 29 40 08 	vmovaps %zmm8,0x200(%rax)
    4591:	62 71 7c 48 29 48 09 	vmovaps %zmm9,0x240(%rax)
    4598:	62 71 7c 48 29 50 0a 	vmovaps %zmm10,0x280(%rax)
    459f:	62 71 7c 48 29 58 0b 	vmovaps %zmm11,0x2c0(%rax)
    45a6:	62 71 7c 48 29 60 0c 	vmovaps %zmm12,0x300(%rax)
    45ad:	62 71 7c 48 29 68 0d 	vmovaps %zmm13,0x340(%rax)
    45b4:	62 71 7c 48 29 70 0e 	vmovaps %zmm14,0x380(%rax)
    45bb:	62 71 7c 48 29 78 0f 	vmovaps %zmm15,0x3c0(%rax)
    45c2:	48 8b 7c 24 78       	mov    0x78(%rsp),%rdi
    45c7:	31 c9                	xor    %ecx,%ecx
    45c9:	ba f0 0f 00 00       	mov    $0xff0,%edx
    45ce:	48 be f0 f0 f0 f0 f0 	movabs $0xf0f0f0f0f0f0f0f0,%rsi
    45d5:	f0 f0 f0 
    45d8:	c4 e1 f9 6e c6       	vmovq  %rsi,%xmm0
    45dd:	c5 f9 6f 25 3b 3b 01 	vmovdqa 0x13b3b(%rip),%xmm4        # 18120 <standard>
    45e4:	00 
    45e5:	49 bb 80 80 80 80 80 	movabs $0x8080808080808080,%r11
    45ec:	80 80 80 
    45ef:	c4 e3 5d 38 25 27 3a 	vinserti128 $0x1,0x13a27(%rip),%ymm4,%ymm4        # 18020 <extended>
    45f6:	01 00 01 
    45f9:	4c 8b b7 88 00 00 00 	mov    0x88(%rdi),%r14
    4600:	c4 e2 7d 59 c0       	vpbroadcastq %xmm0,%ymm0
    4605:	c5 79 6f 2d 33 3b 01 	vmovdqa 0x13b33(%rip),%xmm13        # 18140 <standard+0x20>
    460c:	00 
    460d:	48 bf ff ff ff ff ff 	movabs $0xffffffffffff,%rdi
    4614:	ff 00 00 
    4617:	c4 63 15 38 2d 1f 3a 	vinserti128 $0x1,0x13a1f(%rip),%ymm13,%ymm13        # 18040 <extended+0x20>
    461e:	01 00 01 
    4621:	c5 79 6f 25 47 3b 01 	vmovdqa 0x13b47(%rip),%xmm12        # 18170 <standard+0x50>
    4628:	00 
    4629:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    462f:	41 b8 03 00 00 00    	mov    $0x3,%r8d
    4635:	4c 89 f0             	mov    %r14,%rax
    4638:	c5 79 6f 1d 40 3b 01 	vmovdqa 0x13b40(%rip),%xmm11        # 18180 <standard+0x60>
    463f:	00 
    4640:	c4 63 1d 38 25 26 3a 	vinserti128 $0x1,0x13a26(%rip),%ymm12,%ymm12        # 18070 <extended+0x50>
    4647:	01 00 01 
    464a:	4c 89 74 24 68       	mov    %r14,0x68(%rsp)
    464f:	25 ff 0f 00 00       	and    $0xfff,%eax
    4654:	c5 79 6f 15 34 3b 01 	vmovdqa 0x13b34(%rip),%xmm10        # 18190 <standard+0x70>
    465b:	00 
    465c:	c4 63 25 38 1d 1a 3a 	vinserti128 $0x1,0x13a1a(%rip),%ymm11,%ymm11        # 18080 <extended+0x60>
    4663:	01 00 01 
    4666:	48 3d f0 0f 00 00    	cmp    $0xff0,%rax
    466c:	c5 79 6f 0d 2c 3b 01 	vmovdqa 0x13b2c(%rip),%xmm9        # 181a0 <standard+0x80>
    4673:	00 
    4674:	c4 63 2d 38 15 12 3a 	vinserti128 $0x1,0x13a12(%rip),%ymm10,%ymm10        # 18090 <extended+0x70>
    467b:	01 00 01 
    467e:	0f 96 c1             	setbe  %cl
    4681:	c5 79 6f 05 27 3b 01 	vmovdqa 0x13b27(%rip),%xmm8        # 181b0 <standard+0x90>
    4688:	00 
    4689:	c4 63 35 38 0d 0d 3a 	vinserti128 $0x1,0x13a0d(%rip),%ymm9,%ymm9        # 180a0 <extended+0x80>
    4690:	01 00 01 
    4693:	48 83 f9 00          	cmp    $0x0,%rcx
    4697:	48 0f 45 d0          	cmovne %rax,%rdx
    469b:	31 c9                	xor    %ecx,%ecx
    469d:	48 3d f0 0f 00 00    	cmp    $0xff0,%rax
    46a3:	c4 63 3d 38 05 03 3a 	vinserti128 $0x1,0x13a03(%rip),%ymm8,%ymm8        # 180b0 <extended+0x90>
    46aa:	01 00 01 
    46ad:	c5 79 6f 3d 2b 3b 01 	vmovdqa 0x13b2b(%rip),%xmm15        # 181e0 <standard+0xc0>
    46b4:	00 
    46b5:	0f 97 c1             	seta   %cl
    46b8:	45 31 e4             	xor    %r12d,%r12d
    46bb:	2d f0 0f 00 00       	sub    $0xff0,%eax
    46c0:	44 89 e3             	mov    %r12d,%ebx
    46c3:	45 89 e7             	mov    %r12d,%r15d
    46c6:	48 83 f9 00          	cmp    $0x0,%rcx
    46ca:	0f 45 d8             	cmovne %eax,%ebx
    46cd:	4c 89 f0             	mov    %r14,%rax
    46d0:	89 5c 24 4c          	mov    %ebx,0x4c(%rsp)
    46d4:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    46da:	48 09 d0             	or     %rdx,%rax
    46dd:	c5 fa 6f 28          	vmovdqu (%rax),%xmm5
    46e1:	48 63 c3             	movslq %ebx,%rax
    46e4:	bb 02 00 00 00       	mov    $0x2,%ebx
    46e9:	c4 e1 f9 6e f8       	vmovq  %rax,%xmm7
    46ee:	b8 10 00 00 00       	mov    $0x10,%eax
    46f3:	41 89 de             	mov    %ebx,%r14d
    46f6:	c5 d1 f3 ef          	vpsllq %xmm7,%xmm5,%xmm5
    46fa:	c4 c1 f9 6e fb       	vmovq  %r11,%xmm7
    46ff:	c4 e2 7d 59 df       	vpbroadcastq %xmm7,%ymm3
    4704:	c4 e2 7d 59 cd       	vpbroadcastq %xmm5,%ymm1
    4709:	c4 e1 f9 7e ea       	vmovq  %xmm5,%rdx
    470e:	c5 fd df d1          	vpandn %ymm1,%ymm0,%ymm2
    4712:	c5 f5 db c8          	vpand  %ymm0,%ymm1,%ymm1
    4716:	c5 f9 ef c0          	vpxor  %xmm0,%xmm0,%xmm0
    471a:	49 89 d2             	mov    %rdx,%r10
    471d:	c5 f5 74 c0          	vpcmpeqb %ymm0,%ymm1,%ymm0
    4721:	c5 fd df c3          	vpandn %ymm3,%ymm0,%ymm0
    4725:	c5 fd eb c2          	vpor   %ymm2,%ymm0,%ymm0
    4729:	c4 62 5d 00 f0       	vpshufb %ymm0,%ymm4,%ymm14
    472e:	c5 f9 6e c0          	vmovd  %eax,%xmm0
    4732:	c5 f9 6f 25 f6 39 01 	vmovdqa 0x139f6(%rip),%xmm4        # 18130 <standard+0x10>
    4739:	00 
    473a:	c4 e3 5d 38 25 ec 38 	vinserti128 $0x1,0x138ec(%rip),%ymm4,%ymm4        # 18030 <extended+0x10>
    4741:	01 00 01 
    4744:	c4 e2 7d 78 c0       	vpbroadcastb %xmm0,%ymm0
    4749:	b8 20 00 00 00       	mov    $0x20,%eax
    474e:	c5 7d 7f b4 24 a0 00 	vmovdqa %ymm14,0xa0(%rsp)
    4755:	00 00 
    4757:	c5 f5 74 c0          	vpcmpeqb %ymm0,%ymm1,%ymm0
    475b:	c5 fd df c3          	vpandn %ymm3,%ymm0,%ymm0
    475f:	c5 fd eb c2          	vpor   %ymm2,%ymm0,%ymm0
    4763:	c4 e2 5d 00 f8       	vpshufb %ymm0,%ymm4,%ymm7
    4768:	c5 f9 6e c0          	vmovd  %eax,%xmm0
    476c:	b8 30 00 00 00       	mov    $0x30,%eax
    4771:	c5 f9 6f 25 d7 39 01 	vmovdqa 0x139d7(%rip),%xmm4        # 18150 <standard+0x30>
    4778:	00 
    4779:	c4 e3 5d 38 25 cd 38 	vinserti128 $0x1,0x138cd(%rip),%ymm4,%ymm4        # 18050 <extended+0x30>
    4780:	01 00 01 
    4783:	c4 e2 7d 78 c0       	vpbroadcastb %xmm0,%ymm0
    4788:	c5 fd 7f bc 24 e0 00 	vmovdqa %ymm7,0xe0(%rsp)
    478f:	00 00 
    4791:	c5 f9 6f 3d 27 3a 01 	vmovdqa 0x13a27(%rip),%xmm7        # 181c0 <standard+0xa0>
    4798:	00 
    4799:	c4 e3 45 38 3d 1d 39 	vinserti128 $0x1,0x1391d(%rip),%ymm7,%ymm7        # 180c0 <extended+0xa0>
    47a0:	01 00 01 
    47a3:	c5 f5 74 c0          	vpcmpeqb %ymm0,%ymm1,%ymm0
    47a7:	c5 fd df c3          	vpandn %ymm3,%ymm0,%ymm0
    47ab:	c5 fd eb c2          	vpor   %ymm2,%ymm0,%ymm0
    47af:	c4 62 15 00 e8       	vpshufb %ymm0,%ymm13,%ymm13
    47b4:	c5 f9 6e c0          	vmovd  %eax,%xmm0
    47b8:	b8 40 00 00 00       	mov    $0x40,%eax
    47bd:	c4 e2 7d 78 c0       	vpbroadcastb %xmm0,%ymm0
    47c2:	c5 f9 6e f0          	vmovd  %eax,%xmm6
    47c6:	b8 50 00 00 00       	mov    $0x50,%eax
    47cb:	c5 f5 74 c0          	vpcmpeqb %ymm0,%ymm1,%ymm0
    47cf:	c4 e2 7d 78 f6       	vpbroadcastb %xmm6,%ymm6
    47d4:	c5 f5 74 f6          	vpcmpeqb %ymm6,%ymm1,%ymm6
    47d8:	c5 fd df c3          	vpandn %ymm3,%ymm0,%ymm0
    47dc:	c5 fd eb c2          	vpor   %ymm2,%ymm0,%ymm0
    47e0:	c5 cd df f3          	vpandn %ymm3,%ymm6,%ymm6
    47e4:	c4 e2 5d 00 e0       	vpshufb %ymm0,%ymm4,%ymm4
    47e9:	c5 f9 6f 05 6f 39 01 	vmovdqa 0x1396f(%rip),%xmm0        # 18160 <standard+0x40>
    47f0:	00 
    47f1:	c5 cd eb f2          	vpor   %ymm2,%ymm6,%ymm6
    47f5:	c4 e3 7d 38 05 61 38 	vinserti128 $0x1,0x13861(%rip),%ymm0,%ymm0        # 18060 <extended+0x40>
    47fc:	01 00 01 
    47ff:	c4 e1 f9 7e e1       	vmovq  %xmm4,%rcx
    4804:	c4 e3 7d 39 e4 01    	vextracti128 $0x1,%ymm4,%xmm4
    480a:	c4 e2 7d 00 c6       	vpshufb %ymm6,%ymm0,%ymm0
    480f:	c5 f9 6e f0          	vmovd  %eax,%xmm6
    4813:	b8 60 00 00 00       	mov    $0x60,%eax
    4818:	c4 e2 7d 78 f6       	vpbroadcastb %xmm6,%ymm6
    481d:	c5 f5 74 f6          	vpcmpeqb %ymm6,%ymm1,%ymm6
    4821:	c5 cd df f3          	vpandn %ymm3,%ymm6,%ymm6
    4825:	c5 cd eb f2          	vpor   %ymm2,%ymm6,%ymm6
    4829:	c4 62 1d 00 e6       	vpshufb %ymm6,%ymm12,%ymm12
    482e:	c5 f9 6e f0          	vmovd  %eax,%xmm6
    4832:	b8 70 00 00 00       	mov    $0x70,%eax
    4837:	c4 e2 7d 78 f6       	vpbroadcastb %xmm6,%ymm6
    483c:	c5 f5 74 f6          	vpcmpeqb %ymm6,%ymm1,%ymm6
    4840:	c5 cd df f3          	vpandn %ymm3,%ymm6,%ymm6
    4844:	c5 cd eb f2          	vpor   %ymm2,%ymm6,%ymm6
    4848:	c4 62 25 00 de       	vpshufb %ymm6,%ymm11,%ymm11
    484d:	c5 f9 6e f0          	vmovd  %eax,%xmm6
    4851:	b8 80 ff ff ff       	mov    $0xffffff80,%eax
    4856:	c4 e2 7d 78 f6       	vpbroadcastb %xmm6,%ymm6
    485b:	c5 f5 74 f6          	vpcmpeqb %ymm6,%ymm1,%ymm6
    485f:	c5 cd df f3          	vpandn %ymm3,%ymm6,%ymm6
    4863:	c5 cd eb f2          	vpor   %ymm2,%ymm6,%ymm6
    4867:	c4 62 2d 00 d6       	vpshufb %ymm6,%ymm10,%ymm10
    486c:	c5 f9 6e f0          	vmovd  %eax,%xmm6
    4870:	b8 90 ff ff ff       	mov    $0xffffff90,%eax
    4875:	c4 e2 7d 78 f6       	vpbroadcastb %xmm6,%ymm6
    487a:	c5 f5 74 f6          	vpcmpeqb %ymm6,%ymm1,%ymm6
    487e:	c5 cd df f3          	vpandn %ymm3,%ymm6,%ymm6
    4882:	c5 cd eb f2          	vpor   %ymm2,%ymm6,%ymm6
    4886:	c4 62 35 00 ce       	vpshufb %ymm6,%ymm9,%ymm9
    488b:	c5 f9 6e f0          	vmovd  %eax,%xmm6
    488f:	b8 a0 ff ff ff       	mov    $0xffffffa0,%eax
    4894:	c4 e2 7d 78 f6       	vpbroadcastb %xmm6,%ymm6
    4899:	c5 f5 74 f6          	vpcmpeqb %ymm6,%ymm1,%ymm6
    489d:	c5 cd df f3          	vpandn %ymm3,%ymm6,%ymm6
    48a1:	c5 cd eb f2          	vpor   %ymm2,%ymm6,%ymm6
    48a5:	c4 62 3d 00 c6       	vpshufb %ymm6,%ymm8,%ymm8
    48aa:	c5 f9 6e f0          	vmovd  %eax,%xmm6
    48ae:	b8 b0 ff ff ff       	mov    $0xffffffb0,%eax
    48b3:	c4 e2 7d 78 f6       	vpbroadcastb %xmm6,%ymm6
    48b8:	c5 79 6e f0          	vmovd  %eax,%xmm14
    48bc:	b8 c0 ff ff ff       	mov    $0xffffffc0,%eax
    48c1:	c5 f5 74 f6          	vpcmpeqb %ymm6,%ymm1,%ymm6
    48c5:	c4 42 7d 78 f6       	vpbroadcastb %xmm14,%ymm14
    48ca:	c4 41 75 74 f6       	vpcmpeqb %ymm14,%ymm1,%ymm14
    48cf:	c5 cd df f3          	vpandn %ymm3,%ymm6,%ymm6
    48d3:	c5 cd eb f2          	vpor   %ymm2,%ymm6,%ymm6
    48d7:	c5 0d df f3          	vpandn %ymm3,%ymm14,%ymm14
    48db:	c4 e2 45 00 fe       	vpshufb %ymm6,%ymm7,%ymm7
    48e0:	c5 f9 6f 35 e8 38 01 	vmovdqa 0x138e8(%rip),%xmm6        # 181d0 <standard+0xb0>
    48e7:	00 
    48e8:	c5 0d eb f2          	vpor   %ymm2,%ymm14,%ymm14
    48ec:	c4 e3 4d 38 35 da 37 	vinserti128 $0x1,0x137da(%rip),%ymm6,%ymm6        # 180d0 <extended+0xb0>
    48f3:	01 00 01 
    48f6:	c4 63 05 38 3d e0 37 	vinserti128 $0x1,0x137e0(%rip),%ymm15,%ymm15        # 180e0 <extended+0xc0>
    48fd:	01 00 01 
    4900:	c4 c2 4d 00 f6       	vpshufb %ymm14,%ymm6,%ymm6
    4905:	c5 79 6e f0          	vmovd  %eax,%xmm14
    4909:	b8 d0 ff ff ff       	mov    $0xffffffd0,%eax
    490e:	c4 42 7d 78 f6       	vpbroadcastb %xmm14,%ymm14
    4913:	c4 41 75 74 f6       	vpcmpeqb %ymm14,%ymm1,%ymm14
    4918:	c5 0d df f3          	vpandn %ymm3,%ymm14,%ymm14
    491c:	c5 0d eb f2          	vpor   %ymm2,%ymm14,%ymm14
    4920:	c4 42 05 00 fe       	vpshufb %ymm14,%ymm15,%ymm15
    4925:	c5 79 6e f0          	vmovd  %eax,%xmm14
    4929:	b8 e0 ff ff ff       	mov    $0xffffffe0,%eax
    492e:	c5 7d 7f bc 24 c0 00 	vmovdqa %ymm15,0xc0(%rsp)
    4935:	00 00 
    4937:	c4 42 7d 78 f6       	vpbroadcastb %xmm14,%ymm14
    493c:	c5 79 6f 3d ac 38 01 	vmovdqa 0x138ac(%rip),%xmm15        # 181f0 <standard+0xd0>
    4943:	00 
    4944:	c4 63 05 38 3d a2 37 	vinserti128 $0x1,0x137a2(%rip),%ymm15,%ymm15        # 180f0 <extended+0xd0>
    494b:	01 00 01 
    494e:	c4 41 75 74 f6       	vpcmpeqb %ymm14,%ymm1,%ymm14
    4953:	c5 0d df f3          	vpandn %ymm3,%ymm14,%ymm14
    4957:	c5 0d eb f2          	vpor   %ymm2,%ymm14,%ymm14
    495b:	c4 42 05 00 fe       	vpshufb %ymm14,%ymm15,%ymm15
    4960:	c5 79 6e f0          	vmovd  %eax,%xmm14
    4964:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
    4969:	c5 7d 7f bc 24 80 00 	vmovdqa %ymm15,0x80(%rsp)
    4970:	00 00 
    4972:	c4 42 7d 78 f6       	vpbroadcastb %xmm14,%ymm14
    4977:	c5 79 6f 3d 81 38 01 	vmovdqa 0x13881(%rip),%xmm15        # 18200 <standard+0xe0>
    497e:	00 
    497f:	c4 63 05 38 3d 77 37 	vinserti128 $0x1,0x13777(%rip),%ymm15,%ymm15        # 18100 <extended+0xe0>
    4986:	01 00 01 
    4989:	c4 41 75 74 f6       	vpcmpeqb %ymm14,%ymm1,%ymm14
    498e:	c5 0d df f3          	vpandn %ymm3,%ymm14,%ymm14
    4992:	c5 0d eb f2          	vpor   %ymm2,%ymm14,%ymm14
    4996:	c4 42 05 00 fe       	vpshufb %ymm14,%ymm15,%ymm15
    499b:	c5 79 6e f0          	vmovd  %eax,%xmm14
    499f:	c4 61 f9 7e e8       	vmovq  %xmm13,%rax
    49a4:	48 09 c8             	or     %rcx,%rax
    49a7:	c4 42 7d 78 f6       	vpbroadcastb %xmm14,%ymm14
    49ac:	c4 e1 f9 7e c1       	vmovq  %xmm0,%rcx
    49b1:	48 09 c8             	or     %rcx,%rax
    49b4:	c4 c1 75 74 ce       	vpcmpeqb %ymm14,%ymm1,%ymm1
    49b9:	c4 61 f9 7e e1       	vmovq  %xmm12,%rcx
    49be:	c5 7d 6f b4 24 a0 00 	vmovdqa 0xa0(%rsp),%ymm14
    49c5:	00 00 
    49c7:	48 09 c8             	or     %rcx,%rax
    49ca:	c4 61 f9 7e d9       	vmovq  %xmm11,%rcx
    49cf:	c4 43 7d 39 ed 01    	vextracti128 $0x1,%ymm13,%xmm13
    49d5:	48 09 c8             	or     %rcx,%rax
    49d8:	c4 61 f9 7e d1       	vmovq  %xmm10,%rcx
    49dd:	c5 91 eb e4          	vpor   %xmm4,%xmm13,%xmm4
    49e1:	48 09 c8             	or     %rcx,%rax
    49e4:	c5 f5 df cb          	vpandn %ymm3,%ymm1,%ymm1
    49e8:	c4 61 f9 7e c9       	vmovq  %xmm9,%rcx
    49ed:	c5 f9 6f 1d 1b 38 01 	vmovdqa 0x1381b(%rip),%xmm3        # 18210 <standard+0xf0>
    49f4:	00 
    49f5:	c5 f5 eb ca          	vpor   %ymm2,%ymm1,%ymm1
    49f9:	48 09 c8             	or     %rcx,%rax
    49fc:	c4 61 f9 7e c1       	vmovq  %xmm8,%rcx
    4a01:	48 09 c8             	or     %rcx,%rax
    4a04:	c4 e1 f9 7e f9       	vmovq  %xmm7,%rcx
    4a09:	c4 e3 65 38 1d fd 36 	vinserti128 $0x1,0x136fd(%rip),%ymm3,%ymm3        # 18110 <extended+0xf0>
    4a10:	01 00 01 
    4a13:	48 09 c8             	or     %rcx,%rax
    4a16:	c4 e1 f9 7e f1       	vmovq  %xmm6,%rcx
    4a1b:	c4 61 f9 7e f6       	vmovq  %xmm14,%rsi
    4a20:	c4 e2 65 00 d9       	vpshufb %ymm1,%ymm3,%ymm3
    4a25:	48 09 c8             	or     %rcx,%rax
    4a28:	c5 f9 6f 8c 24 c0 00 	vmovdqa 0xc0(%rsp),%xmm1
    4a2f:	00 00 
    4a31:	c4 e3 7d 39 c0 01    	vextracti128 $0x1,%ymm0,%xmm0
    4a37:	c5 d9 eb c0          	vpor   %xmm0,%xmm4,%xmm0
    4a3b:	c4 43 7d 39 e4 01    	vextracti128 $0x1,%ymm12,%xmm12
    4a41:	c4 43 7d 39 db 01    	vextracti128 $0x1,%ymm11,%xmm11
    4a47:	c5 fd 6f a4 24 c0 00 	vmovdqa 0xc0(%rsp),%ymm4
    4a4e:	00 00 
    4a50:	c4 e1 f9 7e c9       	vmovq  %xmm1,%rcx
    4a55:	c4 c1 79 eb c4       	vpor   %xmm12,%xmm0,%xmm0
    4a5a:	c5 f9 6f 8c 24 80 00 	vmovdqa 0x80(%rsp),%xmm1
    4a61:	00 00 
    4a63:	c4 43 7d 39 d2 01    	vextracti128 $0x1,%ymm10,%xmm10
    4a69:	48 09 c8             	or     %rcx,%rax
    4a6c:	c4 c1 79 eb c3       	vpor   %xmm11,%xmm0,%xmm0
    4a71:	c4 43 7d 39 c9 01    	vextracti128 $0x1,%ymm9,%xmm9
    4a77:	c4 e1 f9 7e c9       	vmovq  %xmm1,%rcx
    4a7c:	c4 c1 79 eb c2       	vpor   %xmm10,%xmm0,%xmm0
    4a81:	c5 f9 6f 8c 24 e0 00 	vmovdqa 0xe0(%rsp),%xmm1
    4a88:	00 00 
    4a8a:	c4 43 7d 39 c0 01    	vextracti128 $0x1,%ymm8,%xmm8
    4a90:	48 09 c8             	or     %rcx,%rax
    4a93:	c4 61 f9 7e f9       	vmovq  %xmm15,%rcx
    4a98:	c4 c1 79 eb c1       	vpor   %xmm9,%xmm0,%xmm0
    4a9d:	48 09 c8             	or     %rcx,%rax
    4aa0:	c4 e1 f9 7e d9       	vmovq  %xmm3,%rcx
    4aa5:	c4 c1 79 eb c0       	vpor   %xmm8,%xmm0,%xmm0
    4aaa:	48 09 c8             	or     %rcx,%rax
    4aad:	c4 e1 f9 7e c9       	vmovq  %xmm1,%rcx
    4ab2:	c4 e3 7d 39 ff 01    	vextracti128 $0x1,%ymm7,%xmm7
    4ab8:	48 09 f1             	or     %rsi,%rcx
    4abb:	be 0f 00 00 00       	mov    $0xf,%esi
    4ac0:	c5 f9 eb c7          	vpor   %xmm7,%xmm0,%xmm0
    4ac4:	c5 fd 6f bc 24 e0 00 	vmovdqa 0xe0(%rsp),%ymm7
    4acb:	00 00 
    4acd:	48 09 c8             	or     %rcx,%rax
    4ad0:	c4 e3 7d 39 f6 01    	vextracti128 $0x1,%ymm6,%xmm6
    4ad6:	c4 43 7d 39 ff 01    	vextracti128 $0x1,%ymm15,%xmm15
    4adc:	48 21 c7             	and    %rax,%rdi
    4adf:	25 c0 00 00 00       	and    $0xc0,%eax
    4ae4:	c5 f9 eb c6          	vpor   %xmm6,%xmm0,%xmm0
    4ae8:	48 83 f8 7f          	cmp    $0x7f,%rax
    4aec:	49 89 f9             	mov    %rdi,%r9
    4aef:	c4 e3 7d 39 db 01    	vextracti128 $0x1,%ymm3,%xmm3
    4af5:	0f 97 c0             	seta   %al
    4af8:	0f b6 c0             	movzbl %al,%eax
    4afb:	48 83 f8 00          	cmp    $0x0,%rax
    4aff:	41 0f 45 f4          	cmovne %r12d,%esi
    4b03:	48 89 f8             	mov    %rdi,%rax
    4b06:	89 f1                	mov    %esi,%ecx
    4b08:	48 c1 e8 08          	shr    $0x8,%rax
    4b0c:	25 c0 00 00 00       	and    $0xc0,%eax
    4b11:	48 83 f8 7f          	cmp    $0x7f,%rax
    4b15:	0f 97 c0             	seta   %al
    4b18:	c1 e1 08             	shl    $0x8,%ecx
    4b1b:	0f b6 c0             	movzbl %al,%eax
    4b1e:	09 c8                	or     %ecx,%eax
    4b20:	3d 01 0f 00 00       	cmp    $0xf01,%eax
    4b25:	0f 94 c0             	sete   %al
    4b28:	0f b6 c0             	movzbl %al,%eax
    4b2b:	48 83 f8 00          	cmp    $0x0,%rax
    4b2f:	41 0f 45 f5          	cmovne %r13d,%esi
    4b33:	48 89 f8             	mov    %rdi,%rax
    4b36:	89 f1                	mov    %esi,%ecx
    4b38:	48 c1 e8 10          	shr    $0x10,%rax
    4b3c:	25 c0 00 00 00       	and    $0xc0,%eax
    4b41:	48 83 f8 7f          	cmp    $0x7f,%rax
    4b45:	0f 97 c0             	seta   %al
    4b48:	c1 e1 08             	shl    $0x8,%ecx
    4b4b:	0f b6 c0             	movzbl %al,%eax
    4b4e:	09 c8                	or     %ecx,%eax
    4b50:	3d 01 0f 00 00       	cmp    $0xf01,%eax
    4b55:	0f 94 c0             	sete   %al
    4b58:	0f b6 c0             	movzbl %al,%eax
    4b5b:	48 83 f8 00          	cmp    $0x0,%rax
    4b5f:	0f 45 f3             	cmovne %ebx,%esi
    4b62:	48 89 f8             	mov    %rdi,%rax
    4b65:	89 f1                	mov    %esi,%ecx
    4b67:	bb 04 00 00 00       	mov    $0x4,%ebx
    4b6c:	48 c1 e8 18          	shr    $0x18,%rax
    4b70:	25 c0 00 00 00       	and    $0xc0,%eax
    4b75:	48 83 f8 7f          	cmp    $0x7f,%rax
    4b79:	0f 97 c0             	seta   %al
    4b7c:	c1 e1 08             	shl    $0x8,%ecx
    4b7f:	0f b6 c0             	movzbl %al,%eax
    4b82:	09 c8                	or     %ecx,%eax
    4b84:	3d 01 0f 00 00       	cmp    $0xf01,%eax
    4b89:	0f 94 c0             	sete   %al
    4b8c:	0f b6 c0             	movzbl %al,%eax
    4b8f:	48 83 f8 00          	cmp    $0x0,%rax
    4b93:	41 0f 45 f0          	cmovne %r8d,%esi
    4b97:	48 89 f8             	mov    %rdi,%rax
    4b9a:	89 f1                	mov    %esi,%ecx
    4b9c:	48 c1 e8 20          	shr    $0x20,%rax
    4ba0:	25 c0 00 00 00       	and    $0xc0,%eax
    4ba5:	48 83 f8 7f          	cmp    $0x7f,%rax
    4ba9:	0f 97 c0             	seta   %al
    4bac:	c1 e1 08             	shl    $0x8,%ecx
    4baf:	0f b6 c0             	movzbl %al,%eax
    4bb2:	09 c8                	or     %ecx,%eax
    4bb4:	3d 01 0f 00 00       	cmp    $0xf01,%eax
    4bb9:	0f 94 c0             	sete   %al
    4bbc:	0f b6 c0             	movzbl %al,%eax
    4bbf:	48 83 f8 00          	cmp    $0x0,%rax
    4bc3:	0f 45 f3             	cmovne %ebx,%esi
    4bc6:	48 89 f8             	mov    %rdi,%rax
    4bc9:	89 f1                	mov    %esi,%ecx
    4bcb:	48 c1 e8 28          	shr    $0x28,%rax
    4bcf:	25 c0 00 00 00       	and    $0xc0,%eax
    4bd4:	48 83 f8 7f          	cmp    $0x7f,%rax
    4bd8:	0f 97 c0             	seta   %al
    4bdb:	c1 e1 08             	shl    $0x8,%ecx
    4bde:	0f b6 c0             	movzbl %al,%eax
    4be1:	09 c8                	or     %ecx,%eax
    4be3:	31 c9                	xor    %ecx,%ecx
    4be5:	3d 01 0f 00 00       	cmp    $0xf01,%eax
    4bea:	b8 05 00 00 00       	mov    $0x5,%eax
    4bef:	0f 94 c1             	sete   %cl
    4bf2:	48 83 f9 00          	cmp    $0x0,%rcx
    4bf6:	0f 45 f0             	cmovne %eax,%esi
    4bf9:	8d 0c f5 00 00 00 00 	lea    0x0(,%rsi,8),%ecx
    4c00:	49 d3 e9             	shr    %cl,%r9
    4c03:	49 d3 ea             	shr    %cl,%r10
    4c06:	4c 89 d1             	mov    %r10,%rcx
    4c09:	45 89 ca             	mov    %r9d,%r10d
    4c0c:	4c 89 cb             	mov    %r9,%rbx
    4c0f:	48 89 4c 24 70       	mov    %rcx,0x70(%rsp)
    4c14:	41 c0 ea 02          	shr    $0x2,%r10b
    4c18:	31 c9                	xor    %ecx,%ecx
    4c1a:	80 7c 24 70 0f       	cmpb   $0xf,0x70(%rsp)
    4c1f:	0f 94 c1             	sete   %cl
    4c22:	44 88 94 24 a0 00 00 	mov    %r10b,0xa0(%rsp)
    4c29:	00 
    4c2a:	45 89 e2             	mov    %r12d,%r10d
    4c2d:	48 83 f9 00          	cmp    $0x0,%rcx
    4c31:	45 0f 45 fd          	cmovne %r13d,%r15d
    4c35:	44 89 c9             	mov    %r9d,%ecx
    4c38:	45 31 c9             	xor    %r9d,%r9d
    4c3b:	83 e1 f0             	and    $0xfffffff0,%ecx
    4c3e:	80 f9 a0             	cmp    $0xa0,%cl
    4c41:	41 0f 94 c1          	sete   %r9b
    4c45:	49 83 f9 00          	cmp    $0x0,%r9
    4c49:	45 0f 45 d5          	cmovne %r13d,%r10d
    4c4d:	80 f9 b0             	cmp    $0xb0,%cl
    4c50:	45 89 e1             	mov    %r12d,%r9d
    4c53:	44 89 54 24 48       	mov    %r10d,0x48(%rsp)
    4c58:	0f 94 c1             	sete   %cl
    4c5b:	29 f0                	sub    %esi,%eax
    4c5d:	45 31 d2             	xor    %r10d,%r10d
    4c60:	0f b6 c9             	movzbl %cl,%ecx
    4c63:	48 83 f9 00          	cmp    $0x0,%rcx
    4c67:	45 0f 45 cd          	cmovne %r13d,%r9d
    4c6b:	8d 0c c5 00 00 00 00 	lea    0x0(,%rax,8),%ecx
    4c72:	44 89 4c 24 3c       	mov    %r9d,0x3c(%rsp)
    4c77:	48 b8 ff ff ff ff ff 	movabs $0xffffffffff,%rax
    4c7e:	00 00 00 
    4c81:	48 d3 f8             	sar    %cl,%rax
    4c84:	8d 0c f5 f8 ff ff ff 	lea    -0x8(,%rsi,8),%ecx
    4c8b:	48 21 f8             	and    %rdi,%rax
    4c8e:	49 89 c1             	mov    %rax,%r9
    4c91:	c4 e1 f9 6e d0       	vmovq  %rax,%xmm2
    4c96:	49 d3 e9             	shr    %cl,%r9
    4c99:	c4 c1 f9 6e c9       	vmovq  %r9,%xmm1
    4c9e:	49 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%r9
    4ca5:	c4 c3 f1 22 c9 01    	vpinsrq $0x1,%r9,%xmm1,%xmm1
    4cab:	c5 f1 74 0d 8d e3 00 	vpcmpeqb 0xe38d(%rip),%xmm1,%xmm1        # 13040 <g_dyn_entry_table+0x10>
    4cb2:	00 
    4cb3:	c4 e1 f9 7e cf       	vmovq  %xmm1,%rdi
    4cb8:	c4 c3 e9 22 c9 01    	vpinsrq $0x1,%r9,%xmm2,%xmm1
    4cbe:	45 89 e9             	mov    %r13d,%r9d
    4cc1:	c5 f1 74 15 87 e3 00 	vpcmpeqb 0xe387(%rip),%xmm1,%xmm2        # 13050 <g_dyn_entry_table+0x20>
    4cc8:	00 
    4cc9:	48 85 ff             	test   %rdi,%rdi
    4ccc:	44 89 ef             	mov    %r13d,%edi
    4ccf:	41 0f 94 c2          	sete   %r10b
    4cd3:	48 d3 ea             	shr    %cl,%rdx
    4cd6:	44 89 e1             	mov    %r12d,%ecx
    4cd9:	49 83 fa 00          	cmp    $0x0,%r10
    4cdd:	41 0f 45 fc          	cmovne %r12d,%edi
    4ce1:	c4 e1 f9 7e d0       	vmovq  %xmm2,%rax
    4ce6:	c5 f1 74 15 72 e3 00 	vpcmpeqb 0xe372(%rip),%xmm1,%xmm2        # 13060 <g_dyn_entry_table+0x30>
    4ced:	00 
    4cee:	83 e2 4f             	and    $0x4f,%edx
    4cf1:	89 ff                	mov    %edi,%edi
    4cf3:	48 83 ff 00          	cmp    $0x0,%rdi
    4cf7:	0f 45 ca             	cmovne %edx,%ecx
    4cfa:	31 d2                	xor    %edx,%edx
    4cfc:	48 85 c0             	test   %rax,%rax
    4cff:	44 89 e8             	mov    %r13d,%eax
    4d02:	89 4c 24 38          	mov    %ecx,0x38(%rsp)
    4d06:	0f 94 c2             	sete   %dl
    4d09:	44 89 e9             	mov    %r13d,%ecx
    4d0c:	48 83 fa 00          	cmp    $0x0,%rdx
    4d10:	41 0f 45 c4          	cmovne %r12d,%eax
    4d14:	89 c2                	mov    %eax,%edx
    4d16:	44 89 e0             	mov    %r12d,%eax
    4d19:	48 83 fa 00          	cmp    $0x0,%rdx
    4d1d:	41 0f 45 c5          	cmovne %r13d,%eax
    4d21:	c4 e1 f9 7e d2       	vmovq  %xmm2,%rdx
    4d26:	c5 f1 74 15 42 e3 00 	vpcmpeqb 0xe342(%rip),%xmm1,%xmm2        # 13070 <g_dyn_entry_table+0x40>
    4d2d:	00 
    4d2e:	48 85 d2             	test   %rdx,%rdx
    4d31:	0f 94 c2             	sete   %dl
    4d34:	0f b6 d2             	movzbl %dl,%edx
    4d37:	48 83 fa 00          	cmp    $0x0,%rdx
    4d3b:	45 0f 45 cc          	cmovne %r12d,%r9d
    4d3f:	c4 e1 f9 7e d2       	vmovq  %xmm2,%rdx
    4d44:	c5 f1 74 15 34 e3 00 	vpcmpeqb 0xe334(%rip),%xmm1,%xmm2        # 13080 <g_dyn_entry_table+0x50>
    4d4b:	00 
    4d4c:	44 89 4c 24 34       	mov    %r9d,0x34(%rsp)
    4d51:	49 b9 00 80 80 80 80 	movabs $0x8080808080808000,%r9
    4d58:	80 80 80 
    4d5b:	48 85 d2             	test   %rdx,%rdx
    4d5e:	c5 f1 74 0d 2a e3 00 	vpcmpeqb 0xe32a(%rip),%xmm1,%xmm1        # 13090 <g_dyn_entry_table+0x60>
    4d65:	00 
    4d66:	0f 94 c2             	sete   %dl
    4d69:	0f b6 d2             	movzbl %dl,%edx
    4d6c:	48 83 fa 00          	cmp    $0x0,%rdx
    4d70:	41 0f 45 cc          	cmovne %r12d,%ecx
    4d74:	c4 e1 f9 7e d2       	vmovq  %xmm2,%rdx
    4d79:	89 4c 24 30          	mov    %ecx,0x30(%rsp)
    4d7d:	31 c9                	xor    %ecx,%ecx
    4d7f:	c4 63 7d 39 f2 01    	vextracti128 $0x1,%ymm14,%xmm2
    4d85:	48 85 d2             	test   %rdx,%rdx
    4d88:	44 89 ea             	mov    %r13d,%edx
    4d8b:	0f 94 c1             	sete   %cl
    4d8e:	48 83 f9 00          	cmp    $0x0,%rcx
    4d92:	41 0f 45 d4          	cmovne %r12d,%edx
    4d96:	89 d2                	mov    %edx,%edx
    4d98:	31 c9                	xor    %ecx,%ecx
    4d9a:	48 83 fa 00          	cmp    $0x0,%rdx
    4d9e:	41 0f 45 c0          	cmovne %r8d,%eax
    4da2:	c4 e1 f9 7e ca       	vmovq  %xmm1,%rdx
    4da7:	c4 e3 7d 39 e1 01    	vextracti128 $0x1,%ymm4,%xmm1
    4dad:	41 89 c0             	mov    %eax,%r8d
    4db0:	c5 fd 6f a4 24 80 00 	vmovdqa 0x80(%rsp),%ymm4
    4db7:	00 00 
    4db9:	c5 f9 eb c1          	vpor   %xmm1,%xmm0,%xmm0
    4dbd:	48 85 d2             	test   %rdx,%rdx
    4dc0:	44 89 ea             	mov    %r13d,%edx
    4dc3:	c4 e3 7d 39 e1 01    	vextracti128 $0x1,%ymm4,%xmm1
    4dc9:	0f 94 c1             	sete   %cl
    4dcc:	c5 f9 eb c1          	vpor   %xmm1,%xmm0,%xmm0
    4dd0:	c4 e3 7d 39 f9 01    	vextracti128 $0x1,%ymm7,%xmm1
    4dd6:	c4 c1 79 eb c7       	vpor   %xmm15,%xmm0,%xmm0
    4ddb:	c5 f1 eb ca          	vpor   %xmm2,%xmm1,%xmm1
    4ddf:	c5 f9 eb c3          	vpor   %xmm3,%xmm0,%xmm0
    4de3:	c5 f9 eb c1          	vpor   %xmm1,%xmm0,%xmm0
    4de7:	48 83 f9 00          	cmp    $0x0,%rcx
    4deb:	41 0f 45 d4          	cmovne %r12d,%edx
    4def:	c4 e1 f9 7e c0       	vmovq  %xmm0,%rax
    4df4:	8d 0c f5 08 00 00 00 	lea    0x8(,%rsi,8),%ecx
    4dfb:	89 d2                	mov    %edx,%edx
    4dfd:	44 01 fe             	add    %r15d,%esi
    4e00:	48 d3 f8             	sar    %cl,%rax
    4e03:	44 89 f9             	mov    %r15d,%ecx
    4e06:	48 83 fa 00          	cmp    $0x0,%rdx
    4e0a:	45 0f 45 c6          	cmovne %r14d,%r8d
    4e0e:	89 c2                	mov    %eax,%edx
    4e10:	44 89 44 24 5c       	mov    %r8d,0x5c(%rsp)
    4e15:	41 89 f0             	mov    %esi,%r8d
    4e18:	45 89 e6             	mov    %r12d,%r14d
    4e1b:	c0 ea 04             	shr    $0x4,%dl
    4e1e:	41 89 d2             	mov    %edx,%r10d
    4e21:	8b 94 24 a0 00 00 00 	mov    0xa0(%rsp),%edx
    4e28:	89 b4 24 e0 00 00 00 	mov    %esi,0xe0(%rsp)
    4e2f:	41 83 e2 03          	and    $0x3,%r10d
    4e33:	48 89 5c 24 40       	mov    %rbx,0x40(%rsp)
    4e38:	83 e2 03             	and    $0x3,%edx
    4e3b:	48 83 f9 00          	cmp    $0x0,%rcx
    4e3f:	41 0f 45 d2          	cmovne %r10d,%edx
    4e43:	41 8d 48 01          	lea    0x1(%r8),%ecx
    4e47:	0f b6 c9             	movzbl %cl,%ecx
    4e4a:	4c 09 c9             	or     %r9,%rcx
    4e4d:	c4 e1 f9 6e f9       	vmovq  %rcx,%xmm7
    4e52:	c4 c3 c1 22 c3 01    	vpinsrq $0x1,%r11,%xmm7,%xmm0
    4e58:	c4 e2 51 00 c0       	vpshufb %xmm0,%xmm5,%xmm0
    4e5d:	c4 e1 f9 7e c1       	vmovq  %xmm0,%rcx
    4e62:	89 ce                	mov    %ecx,%esi
    4e64:	41 89 c8             	mov    %ecx,%r8d
    4e67:	40 c0 ee 03          	shr    $0x3,%sil
    4e6b:	41 c0 e8 06          	shr    $0x6,%r8b
    4e6f:	89 f7                	mov    %esi,%edi
    4e71:	44 88 44 24 64       	mov    %r8b,0x64(%rsp)
    4e76:	83 e7 07             	and    $0x7,%edi
    4e79:	40 88 7c 24 60       	mov    %dil,0x60(%rsp)
    4e7e:	89 cf                	mov    %ecx,%edi
    4e80:	83 e1 c7             	and    $0xffffffc7,%ecx
    4e83:	88 8c 24 c0 00 00 00 	mov    %cl,0xc0(%rsp)
    4e8a:	83 e7 07             	and    $0x7,%edi
    4e8d:	31 c9                	xor    %ecx,%ecx
    4e8f:	41 80 f8 03          	cmp    $0x3,%r8b
    4e93:	41 89 d8             	mov    %ebx,%r8d
    4e96:	0f 95 c1             	setne  %cl
    4e99:	40 88 bc 24 80 00 00 	mov    %dil,0x80(%rsp)
    4ea0:	00 
    4ea1:	83 e6 07             	and    $0x7,%esi
    4ea4:	41 83 e0 30          	and    $0x30,%r8d
    4ea8:	01 f6                	add    %esi,%esi
    4eaa:	48 83 f9 00          	cmp    $0x0,%rcx
    4eae:	45 0f 45 f5          	cmovne %r13d,%r14d
    4eb2:	44 89 c1             	mov    %r8d,%ecx
    4eb5:	41 89 d8             	mov    %ebx,%r8d
    4eb8:	31 db                	xor    %ebx,%ebx
    4eba:	41 c0 e8 06          	shr    $0x6,%r8b
    4ebe:	41 0f b6 f8          	movzbl %r8b,%edi
    4ec2:	49 b8 aa 6a aa aa a5 	movabs $0x155a55a5aaaa6aaa,%r8
    4ec9:	55 5a 15 
    4ecc:	40 80 ff 03          	cmp    $0x3,%dil
    4ed0:	0f 94 c3             	sete   %bl
    4ed3:	01 f1                	add    %esi,%ecx
    4ed5:	49 d3 e8             	shr    %cl,%r8
    4ed8:	0f b6 4c 24 60       	movzbl 0x60(%rsp),%ecx
    4edd:	41 83 e0 03          	and    $0x3,%r8d
    4ee1:	48 83 fb 00          	cmp    $0x0,%rbx
    4ee5:	41 0f 45 d0          	cmovne %r8d,%edx
    4ee9:	41 b8 4c 00 00 00    	mov    $0x4c,%r8d
    4eef:	44 89 e3             	mov    %r12d,%ebx
    4ef2:	49 d3 e8             	shr    %cl,%r8
    4ef5:	0f b6 4c 24 70       	movzbl 0x70(%rsp),%ecx
    4efa:	41 83 e0 01          	and    $0x1,%r8d
    4efe:	c1 e1 04             	shl    $0x4,%ecx
    4f01:	49 83 f8 00          	cmp    $0x0,%r8
    4f05:	41 0f 45 dd          	cmovne %r13d,%ebx
    4f09:	01 df                	add    %ebx,%edi
    4f0b:	45 89 e0             	mov    %r12d,%r8d
    4f0e:	09 f9                	or     %edi,%ecx
    4f10:	89 c7                	mov    %eax,%edi
    4f12:	81 f9 f4 0f 00 00    	cmp    $0xff4,%ecx
    4f18:	0f 94 c1             	sete   %cl
    4f1b:	40 c0 ef 06          	shr    $0x6,%dil
    4f1f:	31 db                	xor    %ebx,%ebx
    4f21:	0f b6 c9             	movzbl %cl,%ecx
    4f24:	40 0f b6 ff          	movzbl %dil,%edi
    4f28:	48 83 f9 00          	cmp    $0x0,%rcx
    4f2c:	45 0f 45 c5          	cmovne %r13d,%r8d
    4f30:	44 89 44 24 2c       	mov    %r8d,0x2c(%rsp)
    4f35:	45 89 f8             	mov    %r15d,%r8d
    4f38:	0f b6 4c 24 5c       	movzbl 0x5c(%rsp),%ecx
    4f3d:	41 c1 e0 04          	shl    $0x4,%r8d
    4f41:	c5 fb f0 0d c7 30 01 	vlddqu 0x130c7(%rip),%xmm1        # 18010 <extension_2op_table>
    4f48:	00 
    4f49:	41 09 f8             	or     %edi,%r8d
    4f4c:	41 83 f8 11          	cmp    $0x11,%r8d
    4f50:	0f 94 c3             	sete   %bl
    4f53:	01 c9                	add    %ecx,%ecx
    4f55:	c0 e8 03             	shr    $0x3,%al
    4f58:	42 8d 0c d1          	lea    (%rcx,%r10,8),%ecx
    4f5c:	41 ba 1a 05 0a 00    	mov    $0xa051a,%r10d
    4f62:	83 e0 07             	and    $0x7,%eax
    4f65:	41 d3 ea             	shr    %cl,%r10d
    4f68:	41 83 e2 03          	and    $0x3,%r10d
    4f6c:	48 83 fb 00          	cmp    $0x0,%rbx
    4f70:	41 0f 45 d2          	cmovne %r10d,%edx
    4f74:	44 8d 14 00          	lea    (%rax,%rax,1),%r10d
    4f78:	41 8d 4a 01          	lea    0x1(%r10),%ecx
    4f7c:	c1 e1 08             	shl    $0x8,%ecx
    4f7f:	44 09 d1             	or     %r10d,%ecx
    4f82:	41 83 f8 13          	cmp    $0x13,%r8d
    4f86:	c5 f9 6e f9          	vmovd  %ecx,%xmm7
    4f8a:	89 f1                	mov    %esi,%ecx
    4f8c:	0f b6 74 24 64       	movzbl 0x64(%rsp),%esi
    4f91:	41 0f 94 c0          	sete   %r8b
    4f95:	41 c1 e7 0c          	shl    $0xc,%r15d
    4f99:	c5 f9 70 c7 00       	vpshufd $0x0,%xmm7,%xmm0
    4f9e:	45 0f b6 c0          	movzbl %r8b,%r8d
    4fa2:	c1 e7 08             	shl    $0x8,%edi
    4fa5:	c4 e2 71 00 c0       	vpshufb %xmm0,%xmm1,%xmm0
    4faa:	89 74 24 64          	mov    %esi,0x64(%rsp)
    4fae:	c4 c1 f9 7e c2       	vmovq  %xmm0,%r10
    4fb3:	41 d3 ea             	shr    %cl,%r10d
    4fb6:	41 83 e2 03          	and    $0x3,%r10d
    4fba:	49 83 f8 00          	cmp    $0x0,%r8
    4fbe:	41 0f 45 d2          	cmovne %r10d,%edx
    4fc2:	41 89 f0             	mov    %esi,%r8d
    4fc5:	c1 e6 04             	shl    $0x4,%esi
    4fc8:	44 8b 94 24 e0 00 00 	mov    0xe0(%rsp),%r10d
    4fcf:	00 
    4fd0:	41 09 f7             	or     %esi,%r15d
    4fd3:	89 74 24 60          	mov    %esi,0x60(%rsp)
    4fd7:	41 09 c7             	or     %eax,%r15d
    4fda:	31 c0                	xor    %eax,%eax
    4fdc:	41 09 ff             	or     %edi,%r15d
    4fdf:	41 81 ff 32 13 00 00 	cmp    $0x1332,%r15d
    4fe6:	44 0f b6 bc 24 c0 00 	movzbl 0xc0(%rsp),%r15d
    4fed:	00 00 
    4fef:	0f 97 c0             	seta   %al
    4ff2:	48 83 f8 00          	cmp    $0x0,%rax
    4ff6:	41 0f 45 d4          	cmovne %r12d,%edx
    4ffa:	31 c0                	xor    %eax,%eax
    4ffc:	41 80 f8 03          	cmp    $0x3,%r8b
    5000:	0f 94 c0             	sete   %al
    5003:	48 83 f8 00          	cmp    $0x0,%rax
    5007:	41 0f 45 d4          	cmovne %r12d,%edx
    500b:	89 54 24 28          	mov    %edx,0x28(%rsp)
    500f:	44 89 d2             	mov    %r10d,%edx
    5012:	8d 42 02             	lea    0x2(%rdx),%eax
    5015:	0f b6 c0             	movzbl %al,%eax
    5018:	48 89 c2             	mov    %rax,%rdx
    501b:	48 8d 48 01          	lea    0x1(%rax),%rcx
    501f:	4c 09 ca             	or     %r9,%rdx
    5022:	48 c1 e1 08          	shl    $0x8,%rcx
    5026:	c4 e1 f9 6e c2       	vmovq  %rdx,%xmm0
    502b:	48 8d 50 03          	lea    0x3(%rax),%rdx
    502f:	48 c1 e2 18          	shl    $0x18,%rdx
    5033:	c4 c3 f9 22 c3 01    	vpinsrq $0x1,%r11,%xmm0,%xmm0
    5039:	48 09 ca             	or     %rcx,%rdx
    503c:	c4 e2 51 00 c0       	vpshufb %xmm0,%xmm5,%xmm0
    5041:	48 b9 00 00 00 00 80 	movabs $0x8080808000000000,%rcx
    5048:	80 80 80 
    504b:	48 09 c2             	or     %rax,%rdx
    504e:	48 83 c0 02          	add    $0x2,%rax
    5052:	c4 c1 f9 7e c0       	vmovq  %xmm0,%r8
    5057:	48 c1 e0 10          	shl    $0x10,%rax
    505b:	48 09 d0             	or     %rdx,%rax
    505e:	44 89 d2             	mov    %r10d,%edx
    5061:	83 c2 03             	add    $0x3,%edx
    5064:	48 09 c8             	or     %rcx,%rax
    5067:	0f b6 d2             	movzbl %dl,%edx
    506a:	c4 e1 f9 6e e0       	vmovq  %rax,%xmm4
    506f:	48 8d 72 01          	lea    0x1(%rdx),%rsi
    5073:	48 8d 42 03          	lea    0x3(%rdx),%rax
    5077:	c4 c3 d9 22 c3 01    	vpinsrq $0x1,%r11,%xmm4,%xmm0
    507d:	48 c1 e6 08          	shl    $0x8,%rsi
    5081:	48 c1 e0 18          	shl    $0x18,%rax
    5085:	c4 e2 51 00 c0       	vpshufb %xmm0,%xmm5,%xmm0
    508a:	48 09 f0             	or     %rsi,%rax
    508d:	48 8d 72 02          	lea    0x2(%rdx),%rsi
    5091:	c4 e1 f9 7e c3       	vmovq  %xmm0,%rbx
    5096:	48 09 d0             	or     %rdx,%rax
    5099:	48 c1 e6 10          	shl    $0x10,%rsi
    509d:	4c 09 ca             	or     %r9,%rdx
    50a0:	48 89 5c 24 70       	mov    %rbx,0x70(%rsp)
    50a5:	48 09 f0             	or     %rsi,%rax
    50a8:	c4 e1 f9 6e e2       	vmovq  %rdx,%xmm4
    50ad:	bb 04 00 00 00       	mov    $0x4,%ebx
    50b2:	44 89 e2             	mov    %r12d,%edx
    50b5:	48 09 c8             	or     %rcx,%rax
    50b8:	31 c9                	xor    %ecx,%ecx
    50ba:	41 80 ff 05          	cmp    $0x5,%r15b
    50be:	44 89 e6             	mov    %r12d,%esi
    50c1:	c4 e1 f9 6e f8       	vmovq  %rax,%xmm7
    50c6:	0f 94 c1             	sete   %cl
    50c9:	45 89 c1             	mov    %r8d,%r9d
    50cc:	45 31 d2             	xor    %r10d,%r10d
    50cf:	c4 c3 c1 22 c3 01    	vpinsrq $0x1,%r11,%xmm7,%xmm0
    50d5:	c4 e2 51 00 c0       	vpshufb %xmm0,%xmm5,%xmm0
    50da:	c4 e1 f9 7e c0       	vmovq  %xmm0,%rax
    50df:	c4 c3 d9 22 c3 01    	vpinsrq $0x1,%r11,%xmm4,%xmm0
    50e5:	45 89 f3             	mov    %r14d,%r11d
    50e8:	48 83 f9 00          	cmp    $0x0,%rcx
    50ec:	0f 45 54 24 70       	cmovne 0x70(%rsp),%edx
    50f1:	48 83 f9 00          	cmp    $0x0,%rcx
    50f5:	0f 45 f3             	cmovne %ebx,%esi
    50f8:	0f b6 8c 24 80 00 00 	movzbl 0x80(%rsp),%ecx
    50ff:	00 
    5100:	41 c1 e3 08          	shl    $0x8,%r11d
    5104:	c4 e2 51 00 e8       	vpshufb %xmm0,%xmm5,%xmm5
    5109:	89 4c 24 5c          	mov    %ecx,0x5c(%rsp)
    510d:	44 09 d9             	or     %r11d,%ecx
    5110:	81 f9 04 01 00 00    	cmp    $0x104,%ecx
    5116:	41 0f 94 c2          	sete   %r10b
    511a:	41 c0 e9 06          	shr    $0x6,%r9b
    511e:	41 0f b6 c9          	movzbl %r9b,%ecx
    5122:	41 b9 ff 00 00 00    	mov    $0xff,%r9d
    5128:	41 c1 e6 10          	shl    $0x10,%r14d
    512c:	44 89 cf             	mov    %r9d,%edi
    512f:	49 83 fa 00          	cmp    $0x0,%r10
    5133:	0f 45 f9             	cmovne %ecx,%edi
    5136:	44 89 e1             	mov    %r12d,%ecx
    5139:	89 7c 24 24          	mov    %edi,0x24(%rsp)
    513d:	8b 7c 24 38          	mov    0x38(%rsp),%edi
    5141:	49 83 fa 00          	cmp    $0x0,%r10
    5145:	41 0f 45 cd          	cmovne %r13d,%ecx
    5149:	8d 74 0e 01          	lea    0x1(%rsi,%rcx,1),%esi
    514d:	89 74 24 58          	mov    %esi,0x58(%rsp)
    5151:	44 89 c6             	mov    %r8d,%esi
    5154:	40 c0 ee 03          	shr    $0x3,%sil
    5158:	89 f1                	mov    %esi,%ecx
    515a:	8d 34 bd 00 00 00 00 	lea    0x0(,%rdi,4),%esi
    5161:	83 e6 08             	and    $0x8,%esi
    5164:	83 e1 07             	and    $0x7,%ecx
    5167:	09 f1                	or     %esi,%ecx
    5169:	44 89 ce             	mov    %r9d,%esi
    516c:	49 83 fa 00          	cmp    $0x0,%r10
    5170:	0f 45 f1             	cmovne %ecx,%esi
    5173:	8d 0c fd 00 00 00 00 	lea    0x0(,%rdi,8),%ecx
    517a:	44 89 c7             	mov    %r8d,%edi
    517d:	89 74 24 38          	mov    %esi,0x38(%rsp)
    5181:	45 0f b6 c0          	movzbl %r8b,%r8d
    5185:	83 e7 07             	and    $0x7,%edi
    5188:	83 e1 08             	and    $0x8,%ecx
    518b:	89 fe                	mov    %edi,%esi
    518d:	44 89 e7             	mov    %r12d,%edi
    5190:	09 ce                	or     %ecx,%esi
    5192:	49 83 fa 00          	cmp    $0x0,%r10
    5196:	0f 45 fe             	cmovne %esi,%edi
    5199:	89 fe                	mov    %edi,%esi
    519b:	41 0f b6 ff          	movzbl %r15b,%edi
    519f:	41 89 f7             	mov    %esi,%r15d
    51a2:	89 74 24 20          	mov    %esi,0x20(%rsp)
    51a6:	41 c1 e7 08          	shl    $0x8,%r15d
    51aa:	44 89 fe             	mov    %r15d,%esi
    51ad:	45 31 ff             	xor    %r15d,%r15d
    51b0:	81 e6 00 07 00 00    	and    $0x700,%esi
    51b6:	44 09 f6             	or     %r14d,%esi
    51b9:	09 fe                	or     %edi,%esi
    51bb:	81 fe 04 05 01 00    	cmp    $0x10504,%esi
    51c1:	44 89 e6             	mov    %r12d,%esi
    51c4:	41 0f 94 c7          	sete   %r15b
    51c8:	41 09 fb             	or     %edi,%r11d
    51cb:	44 89 e7             	mov    %r12d,%edi
    51ce:	49 83 ff 00          	cmp    $0x0,%r15
    51d2:	0f 45 f3             	cmovne %ebx,%esi
    51d5:	49 83 ff 00          	cmp    $0x0,%r15
    51d9:	0f 45 d0             	cmovne %eax,%edx
    51dc:	44 8b 7c 24 58       	mov    0x58(%rsp),%r15d
    51e1:	41 01 f7             	add    %esi,%r15d
    51e4:	c4 e1 f9 7e ee       	vmovq  %xmm5,%rsi
    51e9:	44 89 fb             	mov    %r15d,%ebx
    51ec:	45 31 ff             	xor    %r15d,%r15d
    51ef:	41 81 fb 44 01 00 00 	cmp    $0x144,%r11d
    51f6:	40 0f b6 f6          	movzbl %sil,%esi
    51fa:	41 0f 94 c7          	sete   %r15b
    51fe:	49 83 ff 00          	cmp    $0x0,%r15
    5202:	0f 45 fe             	cmovne %esi,%edi
    5205:	44 89 e6             	mov    %r12d,%esi
    5208:	49 83 ff 00          	cmp    $0x0,%r15
    520c:	41 0f 45 f5          	cmovne %r13d,%esi
    5210:	01 de                	add    %ebx,%esi
    5212:	41 81 fb 84 01 00 00 	cmp    $0x184,%r11d
    5219:	41 bf 04 00 00 00    	mov    $0x4,%r15d
    521f:	8b 5c 24 5c          	mov    0x5c(%rsp),%ebx
    5223:	41 0f 94 c3          	sete   %r11b
    5227:	45 0f b6 db          	movzbl %r11b,%r11d
    522b:	49 83 fb 00          	cmp    $0x0,%r11
    522f:	0f 45 d0             	cmovne %eax,%edx
    5232:	44 89 e0             	mov    %r12d,%eax
    5235:	49 83 fb 00          	cmp    $0x0,%r11
    5239:	41 0f 45 c7          	cmovne %r15d,%eax
    523d:	45 31 db             	xor    %r11d,%r11d
    5240:	01 c6                	add    %eax,%esi
    5242:	80 bc 24 80 00 00 00 	cmpb   $0x4,0x80(%rsp)
    5249:	04 
    524a:	44 89 e0             	mov    %r12d,%eax
    524d:	41 0f 95 c3          	setne  %r11b
    5251:	49 83 fb 00          	cmp    $0x0,%r11
    5255:	41 0f 45 c5          	cmovne %r13d,%eax
    5259:	44 8b 5c 24 64       	mov    0x64(%rsp),%r11d
    525e:	c1 e0 08             	shl    $0x8,%eax
    5261:	44 09 f0             	or     %r14d,%eax
    5264:	44 09 d8             	or     %r11d,%eax
    5267:	45 31 db             	xor    %r11d,%r11d
    526a:	3d 01 01 01 00       	cmp    $0x10101,%eax
    526f:	41 0f 94 c3          	sete   %r11b
    5273:	49 83 fb 00          	cmp    $0x0,%r11
    5277:	41 0f 45 f8          	cmovne %r8d,%edi
    527b:	45 89 e0             	mov    %r12d,%r8d
    527e:	49 83 fb 00          	cmp    $0x0,%r11
    5282:	45 0f 45 c5          	cmovne %r13d,%r8d
    5286:	41 01 f0             	add    %esi,%r8d
    5289:	3d 02 01 01 00       	cmp    $0x10102,%eax
    528e:	4c 0f be df          	movsbq %dil,%r11
    5292:	44 89 e6             	mov    %r12d,%esi
    5295:	0f 94 c0             	sete   %al
    5298:	09 d9                	or     %ebx,%ecx
    529a:	0f b6 c0             	movzbl %al,%eax
    529d:	49 83 fa 00          	cmp    $0x0,%r10
    52a1:	41 0f 45 cf          	cmovne %r15d,%ecx
    52a5:	48 83 f8 00          	cmp    $0x0,%rax
    52a9:	41 0f 45 f7          	cmovne %r15d,%esi
    52ad:	48 83 f8 00          	cmp    $0x0,%rax
    52b1:	0f 45 54 24 70       	cmovne 0x70(%rsp),%edx
    52b6:	41 01 f0             	add    %esi,%r8d
    52b9:	31 c0                	xor    %eax,%eax
    52bb:	8b 74 24 20          	mov    0x20(%rsp),%esi
    52bf:	4d 85 db             	test   %r11,%r11
    52c2:	0f 94 c0             	sete   %al
    52c5:	89 d2                	mov    %edx,%edx
    52c7:	41 89 da             	mov    %ebx,%r10d
    52ca:	48 83 f8 00          	cmp    $0x0,%rax
    52ce:	4c 0f 45 da          	cmovne %rdx,%r11
    52d2:	31 d2                	xor    %edx,%edx
    52d4:	80 bc 24 c0 00 00 00 	cmpb   $0x4,0xc0(%rsp)
    52db:	04 
    52dc:	0f b6 c1             	movzbl %cl,%eax
    52df:	44 8b 7c 24 60       	mov    0x60(%rsp),%r15d
    52e4:	0f 94 c2             	sete   %dl
    52e7:	48 8b 7c 24 78       	mov    0x78(%rsp),%rdi
    52ec:	48 83 fa 00          	cmp    $0x0,%rdx
    52f0:	41 0f 45 c1          	cmovne %r9d,%eax
    52f4:	89 f2                	mov    %esi,%edx
    52f6:	83 e2 07             	and    $0x7,%edx
    52f9:	44 09 fa             	or     %r15d,%edx
    52fc:	83 fa 05             	cmp    $0x5,%edx
    52ff:	0f 94 c2             	sete   %dl
    5302:	0f b6 d2             	movzbl %dl,%edx
    5305:	48 83 fa 00          	cmp    $0x0,%rdx
    5309:	41 0f 45 f1          	cmovne %r9d,%esi
    530d:	31 d2                	xor    %edx,%edx
    530f:	80 f9 04             	cmp    $0x4,%cl
    5312:	0f 94 c2             	sete   %dl
    5315:	45 09 fa             	or     %r15d,%r10d
    5318:	48 83 fa 00          	cmp    $0x0,%rdx
    531c:	0f 45 c6             	cmovne %esi,%eax
    531f:	31 d2                	xor    %edx,%edx
    5321:	41 83 fa 05          	cmp    $0x5,%r10d
    5325:	89 c6                	mov    %eax,%esi
    5327:	b8 10 00 00 00       	mov    $0x10,%eax
    532c:	0f 94 c2             	sete   %dl
    532f:	31 db                	xor    %ebx,%ebx
    5331:	48 83 fa 00          	cmp    $0x0,%rdx
    5335:	0f 45 f0             	cmovne %eax,%esi
    5338:	e8 23 f1 ff ff       	call   4460 <register_value_select>
    533d:	89 f1                	mov    %esi,%ecx
    533f:	8b 74 24 38          	mov    0x38(%rsp),%esi
    5343:	4c 8b 74 24 68       	mov    0x68(%rsp),%r14
    5348:	44 8b 54 24 34       	mov    0x34(%rsp),%r10d
    534d:	48 89 c2             	mov    %rax,%rdx
    5350:	31 c0                	xor    %eax,%eax
    5352:	48 83 f9 10          	cmp    $0x10,%rcx
    5356:	49 0f 44 d6          	cmove  %r14,%rdx
    535a:	48 81 f9 ff 00 00 00 	cmp    $0xff,%rcx
    5361:	48 0f 44 d3          	cmove  %rbx,%rdx
    5365:	89 d1                	mov    %edx,%ecx
    5367:	49 83 fa 01          	cmp    $0x1,%r10
    536b:	48 0f 44 d1          	cmove  %rcx,%rdx
    536f:	83 fe 04             	cmp    $0x4,%esi
    5372:	0f 94 c0             	sete   %al
    5375:	48 83 f8 00          	cmp    $0x0,%rax
    5379:	41 0f 45 f1          	cmovne %r9d,%esi
    537d:	e8 de f0 ff ff       	call   4460 <register_value_select>
    5382:	44 8b 4c 24 28       	mov    0x28(%rsp),%r9d
    5387:	89 f6                	mov    %esi,%esi
    5389:	48 83 fe 10          	cmp    $0x10,%rsi
    538d:	49 0f 44 c6          	cmove  %r14,%rax
    5391:	48 81 fe ff 00 00 00 	cmp    $0xff,%rsi
    5398:	48 0f 44 c3          	cmove  %rbx,%rax
    539c:	89 c1                	mov    %eax,%ecx
    539e:	41 be 02 00 00 00    	mov    $0x2,%r14d
    53a4:	49 83 fa 01          	cmp    $0x1,%r10
    53a8:	48 0f 44 c1          	cmove  %rcx,%rax
    53ac:	45 85 c9             	test   %r9d,%r9d
    53af:	44 89 e9             	mov    %r13d,%ecx
    53b2:	40 0f 94 c6          	sete   %sil
    53b6:	40 0f b6 f6          	movzbl %sil,%esi
    53ba:	48 83 fe 00          	cmp    $0x0,%rsi
    53be:	41 0f 45 cc          	cmovne %r12d,%ecx
    53c2:	41 01 c8             	add    %ecx,%r8d
    53c5:	0f b6 4c 24 24       	movzbl 0x24(%rsp),%ecx
    53ca:	44 89 ee             	mov    %r13d,%esi
    53cd:	d3 e6                	shl    %cl,%esi
    53cf:	48 63 ce             	movslq %esi,%rcx
    53d2:	48 0f af c1          	imul   %rcx,%rax
    53d6:	48 01 c2             	add    %rax,%rdx
    53d9:	8b 84 24 a0 00 00 00 	mov    0xa0(%rsp),%eax
    53e0:	4c 01 da             	add    %r11,%rdx
    53e3:	83 e0 0f             	and    $0xf,%eax
    53e6:	8d 70 06             	lea    0x6(%rax),%esi
    53e9:	e8 72 f0 ff ff       	call   4460 <register_value_select>
    53ee:	8b 74 24 40          	mov    0x40(%rsp),%esi
    53f2:	44 8b 7c 24 3c       	mov    0x3c(%rsp),%r15d
    53f7:	48 89 c1             	mov    %rax,%rcx
    53fa:	8b 44 24 48          	mov    0x48(%rsp),%eax
    53fe:	44 8b 64 24 2c       	mov    0x2c(%rsp),%r12d
    5403:	83 e6 03             	and    $0x3,%esi
    5406:	48 83 f8 01          	cmp    $0x1,%rax
    540a:	48 0f 44 d1          	cmove  %rcx,%rdx
    540e:	89 f1                	mov    %esi,%ecx
    5410:	49 89 c3             	mov    %rax,%r11
    5413:	be 04 00 00 00       	mov    $0x4,%esi
    5418:	83 c1 01             	add    $0x1,%ecx
    541b:	48 83 f8 00          	cmp    $0x0,%rax
    541f:	44 0f 45 c9          	cmovne %ecx,%r9d
    5423:	44 89 f8             	mov    %r15d,%eax
    5426:	44 09 e0             	or     %r12d,%eax
    5429:	49 89 c2             	mov    %rax,%r10
    542c:	48 83 f8 00          	cmp    $0x0,%rax
    5430:	45 0f 45 ce          	cmovne %r14d,%r9d
    5434:	e8 27 f0 ff ff       	call   4460 <register_value_select>
    5439:	8b 4c 24 30          	mov    0x30(%rsp),%ecx
    543d:	8b 5c 24 4c          	mov    0x4c(%rsp),%ebx
    5441:	49 83 fa 01          	cmp    $0x1,%r10
    5445:	48 0f 44 d0          	cmove  %rax,%rdx
    5449:	42 8d 04 09          	lea    (%rcx,%r9,1),%eax
    544d:	31 c9                	xor    %ecx,%ecx
    544f:	44 8b 94 24 e0 00 00 	mov    0xe0(%rsp),%r10d
    5456:	00 
    5457:	83 f8 02             	cmp    $0x2,%eax
    545a:	44 89 c8             	mov    %r9d,%eax
    545d:	0f 97 c1             	seta   %cl
    5460:	48 83 f9 00          	cmp    $0x0,%rcx
    5464:	41 0f 45 c5          	cmovne %r13d,%eax
    5468:	44 89 f9             	mov    %r15d,%ecx
    546b:	44 09 d9             	or     %r11d,%ecx
    546e:	48 83 f9 00          	cmp    $0x0,%rcx
    5472:	45 0f 45 c5          	cmovne %r13d,%r8d
    5476:	44 89 e1             	mov    %r12d,%ecx
    5479:	48 83 f9 00          	cmp    $0x0,%rcx
    547d:	45 0f 45 c6          	cmovne %r14d,%r8d
    5481:	42 8d 0c 03          	lea    (%rbx,%r8,1),%ecx
    5485:	48 8b 5c 24 50       	mov    0x50(%rsp),%rbx
    548a:	44 01 d1             	add    %r10d,%ecx
    548d:	83 f9 10             	cmp    $0x10,%ecx
    5490:	48 89 13             	mov    %rdx,(%rbx)
    5493:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
    5498:	0f 96 c1             	setbe  %cl
    549b:	0f b6 c9             	movzbl %cl,%ecx
    549e:	48 21 c1             	and    %rax,%rcx
    54a1:	48 83 f9 00          	cmp    $0x0,%rcx
    54a5:	0f 45 c0             	cmovne %eax,%eax
    54a8:	f6 05 84 29 01 00 08 	testb  $0x8,0x12984(%rip)        # 17e33 <g_cpu_feature_indicator+0x3>
    54af:	0f 84 1b 01 00 00    	je     55d0 <ct_decode+0x10d0>
    54b5:	62 f1 7c 48 28 03    	vmovaps (%rbx),%zmm0
    54bb:	62 f1 7c 48 28 4b 01 	vmovaps 0x40(%rbx),%zmm1
    54c2:	62 f1 7c 48 28 53 02 	vmovaps 0x80(%rbx),%zmm2
    54c9:	62 f1 7c 48 28 5b 03 	vmovaps 0xc0(%rbx),%zmm3
    54d0:	62 f1 7c 48 28 63 04 	vmovaps 0x100(%rbx),%zmm4
    54d7:	62 f1 7c 48 28 6b 05 	vmovaps 0x140(%rbx),%zmm5
    54de:	62 f1 7c 48 28 73 06 	vmovaps 0x180(%rbx),%zmm6
    54e5:	62 f1 7c 48 28 7b 07 	vmovaps 0x1c0(%rbx),%zmm7
    54ec:	62 71 7c 48 28 43 08 	vmovaps 0x200(%rbx),%zmm8
    54f3:	62 71 7c 48 28 4b 09 	vmovaps 0x240(%rbx),%zmm9
    54fa:	62 71 7c 48 28 53 0a 	vmovaps 0x280(%rbx),%zmm10
    5501:	62 71 7c 48 28 5b 0b 	vmovaps 0x2c0(%rbx),%zmm11
    5508:	62 71 7c 48 28 63 0c 	vmovaps 0x300(%rbx),%zmm12
    550f:	62 71 7c 48 28 6b 0d 	vmovaps 0x340(%rbx),%zmm13
    5516:	62 71 7c 48 28 73 0e 	vmovaps 0x380(%rbx),%zmm14
    551d:	62 71 7c 48 28 7b 0f 	vmovaps 0x3c0(%rbx),%zmm15
    5524:	48 8b 94 24 38 05 00 	mov    0x538(%rsp),%rdx
    552b:	00 
    552c:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    5533:	00 00 
    5535:	0f 85 0d 01 00 00    	jne    5648 <ct_decode+0x1148>
    553b:	c5 f8 77             	vzeroupper 
    553e:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    5542:	5b                   	pop    %rbx
    5543:	41 5c                	pop    %r12
    5545:	41 5d                	pop    %r13
    5547:	41 5e                	pop    %r14
    5549:	41 5f                	pop    %r15
    554b:	5d                   	pop    %rbp
    554c:	c3                   	ret    
    554d:	0f 1f 00             	nopl   (%rax)
    5550:	c5 fc 29 00          	vmovaps %ymm0,(%rax)
    5554:	c5 fc 29 48 20       	vmovaps %ymm1,0x20(%rax)
    5559:	c5 fc 29 50 40       	vmovaps %ymm2,0x40(%rax)
    555e:	c5 fc 29 58 60       	vmovaps %ymm3,0x60(%rax)
    5563:	c5 fc 29 a0 80 00 00 	vmovaps %ymm4,0x80(%rax)
    556a:	00 
    556b:	c5 fc 29 a8 a0 00 00 	vmovaps %ymm5,0xa0(%rax)
    5572:	00 
    5573:	c5 fc 29 b0 c0 00 00 	vmovaps %ymm6,0xc0(%rax)
    557a:	00 
    557b:	c5 fc 29 b8 e0 00 00 	vmovaps %ymm7,0xe0(%rax)
    5582:	00 
    5583:	c5 7c 29 80 00 01 00 	vmovaps %ymm8,0x100(%rax)
    558a:	00 
    558b:	c5 7c 29 88 20 01 00 	vmovaps %ymm9,0x120(%rax)
    5592:	00 
    5593:	c5 7c 29 90 40 01 00 	vmovaps %ymm10,0x140(%rax)
    559a:	00 
    559b:	c5 7c 29 98 60 01 00 	vmovaps %ymm11,0x160(%rax)
    55a2:	00 
    55a3:	c5 7c 29 a0 80 01 00 	vmovaps %ymm12,0x180(%rax)
    55aa:	00 
    55ab:	c5 7c 29 a8 a0 01 00 	vmovaps %ymm13,0x1a0(%rax)
    55b2:	00 
    55b3:	c5 7c 29 b0 c0 01 00 	vmovaps %ymm14,0x1c0(%rax)
    55ba:	00 
    55bb:	c5 7c 29 b8 e0 01 00 	vmovaps %ymm15,0x1e0(%rax)
    55c2:	00 
    55c3:	e9 fa ef ff ff       	jmp    45c2 <ct_decode+0xc2>
    55c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    55cf:	00 
    55d0:	c5 fc 28 03          	vmovaps (%rbx),%ymm0
    55d4:	c5 fc 28 4b 20       	vmovaps 0x20(%rbx),%ymm1
    55d9:	c5 fc 28 53 40       	vmovaps 0x40(%rbx),%ymm2
    55de:	c5 fc 28 5b 60       	vmovaps 0x60(%rbx),%ymm3
    55e3:	c5 fc 28 a3 80 00 00 	vmovaps 0x80(%rbx),%ymm4
    55ea:	00 
    55eb:	c5 fc 28 ab a0 00 00 	vmovaps 0xa0(%rbx),%ymm5
    55f2:	00 
    55f3:	c5 fc 28 b3 c0 00 00 	vmovaps 0xc0(%rbx),%ymm6
    55fa:	00 
    55fb:	c5 fc 28 bb e0 00 00 	vmovaps 0xe0(%rbx),%ymm7
    5602:	00 
    5603:	c5 7c 28 83 00 01 00 	vmovaps 0x100(%rbx),%ymm8
    560a:	00 
    560b:	c5 7c 28 8b 20 01 00 	vmovaps 0x120(%rbx),%ymm9
    5612:	00 
    5613:	c5 7c 28 93 40 01 00 	vmovaps 0x140(%rbx),%ymm10
    561a:	00 
    561b:	c5 7c 28 9b 60 01 00 	vmovaps 0x160(%rbx),%ymm11
    5622:	00 
    5623:	c5 7c 28 a3 80 01 00 	vmovaps 0x180(%rbx),%ymm12
    562a:	00 
    562b:	c5 7c 28 ab a0 01 00 	vmovaps 0x1a0(%rbx),%ymm13
    5632:	00 
    5633:	c5 7c 28 b3 c0 01 00 	vmovaps 0x1c0(%rbx),%ymm14
    563a:	00 
    563b:	c5 7c 28 bb e0 01 00 	vmovaps 0x1e0(%rbx),%ymm15
    5642:	00 
    5643:	e9 dc fe ff ff       	jmp    5524 <ct_decode+0x1024>
    5648:	c5 f8 77             	vzeroupper 
    564b:	e8 b0 b4 00 00       	call   10b00 <__stack_chk_fail>

0000000000005650 <_ZL22init_rts_contexts_emasP9_layout_tS0_m>:
    5650:	48 39 f7             	cmp    %rsi,%rdi
    5653:	0f 83 f7 01 00 00    	jae    5850 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x200>
    5659:	41 57                	push   %r15
    565b:	41 56                	push   %r14
    565d:	49 89 d6             	mov    %rdx,%r14
    5660:	41 55                	push   %r13
    5662:	49 89 f5             	mov    %rsi,%r13
    5665:	41 54                	push   %r12
    5667:	55                   	push   %rbp
    5668:	53                   	push   %rbx
    5669:	48 89 fb             	mov    %rdi,%rbx
    566c:	48 83 ec 08          	sub    $0x8,%rsp
    5670:	66 f7 03 00 10       	testw  $0x1000,(%rbx)
    5675:	0f 85 d5 00 00 00    	jne    5750 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x100>
    567b:	48 8b 6b 08          	mov    0x8(%rbx),%rbp
    567f:	e8 74 ca 00 00       	call   120f8 <get_enclave_base>
    5684:	44 8b 63 04          	mov    0x4(%rbx),%r12d
    5688:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
    568c:	4c 01 f5             	add    %r14,%rbp
    568f:	48 01 c5             	add    %rax,%rbp
    5692:	49 c1 e4 0c          	shl    $0xc,%r12
    5696:	48 85 c9             	test   %rcx,%rcx
    5699:	0f 84 81 00 00 00    	je     5720 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xd0>
    569f:	0f b7 43 02          	movzwl 0x2(%rbx),%eax
    56a3:	a8 04                	test   $0x4,%al
    56a5:	75 79                	jne    5720 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xd0>
    56a7:	89 c2                	mov    %eax,%edx
    56a9:	41 89 c7             	mov    %eax,%r15d
    56ac:	83 e2 10             	and    $0x10,%edx
    56af:	41 83 e7 08          	and    $0x8,%r15d
    56b3:	a8 01                	test   $0x1,%al
    56b5:	0f 84 e5 00 00 00    	je     57a0 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x150>
    56bb:	66 85 d2             	test   %dx,%dx
    56be:	0f 85 3c 01 00 00    	jne    5800 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x1b0>
    56c4:	0f b7 03             	movzwl (%rbx),%eax
    56c7:	66 45 85 ff          	test   %r15w,%r15w
    56cb:	0f 85 e1 00 00 00    	jne    57b2 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x162>
    56d1:	66 83 f8 04          	cmp    $0x4,%ax
    56d5:	0f 84 65 01 00 00    	je     5840 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x1f0>
    56db:	83 e1 07             	and    $0x7,%ecx
    56de:	ba 80 02 00 00       	mov    $0x280,%edx
    56e3:	45 31 c9             	xor    %r9d,%r9d
    56e6:	45 31 c0             	xor    %r8d,%r8d
    56e9:	4c 89 e6             	mov    %r12,%rsi
    56ec:	48 89 ef             	mov    %rbp,%rdi
    56ef:	e8 4c 62 00 00       	call   b940 <mm_init_ema>
    56f4:	85 c0                	test   %eax,%eax
    56f6:	75 44                	jne    573c <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xec>
    56f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    56ff:	00 
    5700:	48 83 c3 20          	add    $0x20,%rbx
    5704:	4c 39 eb             	cmp    %r13,%rbx
    5707:	0f 82 63 ff ff ff    	jb     5670 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x20>
    570d:	48 83 c4 08          	add    $0x8,%rsp
    5711:	31 c0                	xor    %eax,%eax
    5713:	5b                   	pop    %rbx
    5714:	5d                   	pop    %rbp
    5715:	41 5c                	pop    %r12
    5717:	41 5d                	pop    %r13
    5719:	41 5e                	pop    %r14
    571b:	41 5f                	pop    %r15
    571d:	c3                   	ret    
    571e:	66 90                	xchg   %ax,%ax
    5720:	45 31 c9             	xor    %r9d,%r9d
    5723:	45 31 c0             	xor    %r8d,%r8d
    5726:	31 c9                	xor    %ecx,%ecx
    5728:	ba 81 00 00 00       	mov    $0x81,%edx
    572d:	4c 89 e6             	mov    %r12,%rsi
    5730:	48 89 ef             	mov    %rbp,%rdi
    5733:	e8 08 62 00 00       	call   b940 <mm_init_ema>
    5738:	85 c0                	test   %eax,%eax
    573a:	74 c4                	je     5700 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xb0>
    573c:	b8 01 00 00 00       	mov    $0x1,%eax
    5741:	48 83 c4 08          	add    $0x8,%rsp
    5745:	5b                   	pop    %rbx
    5746:	5d                   	pop    %rbp
    5747:	41 5c                	pop    %r12
    5749:	41 5d                	pop    %r13
    574b:	41 5e                	pop    %r14
    574d:	41 5f                	pop    %r15
    574f:	c3                   	ret    
    5750:	8b 43 04             	mov    0x4(%rbx),%eax
    5753:	31 ed                	xor    %ebp,%ebp
    5755:	45 31 e4             	xor    %r12d,%r12d
    5758:	85 c0                	test   %eax,%eax
    575a:	74 a4                	je     5700 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xb0>
    575c:	0f b7 7b 02          	movzwl 0x2(%rbx),%edi
    5760:	4c 03 63 08          	add    0x8(%rbx),%r12
    5764:	48 89 de             	mov    %rbx,%rsi
    5767:	4c 89 e2             	mov    %r12,%rdx
    576a:	f7 df                	neg    %edi
    576c:	48 63 ff             	movslq %edi,%rdi
    576f:	48 c1 e7 05          	shl    $0x5,%rdi
    5773:	48 01 df             	add    %rbx,%rdi
    5776:	e8 d5 fe ff ff       	call   5650 <_ZL22init_rts_contexts_emasP9_layout_tS0_m>
    577b:	85 c0                	test   %eax,%eax
    577d:	75 c2                	jne    5741 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xf1>
    577f:	83 c5 01             	add    $0x1,%ebp
    5782:	3b 6b 04             	cmp    0x4(%rbx),%ebp
    5785:	72 d5                	jb     575c <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x10c>
    5787:	48 83 c3 20          	add    $0x20,%rbx
    578b:	4c 39 eb             	cmp    %r13,%rbx
    578e:	0f 82 dc fe ff ff    	jb     5670 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x20>
    5794:	e9 74 ff ff ff       	jmp    570d <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xbd>
    5799:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    57a0:	66 85 d2             	test   %dx,%dx
    57a3:	75 5b                	jne    5800 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x1b0>
    57a5:	66 45 85 ff          	test   %r15w,%r15w
    57a9:	0f 84 51 ff ff ff    	je     5700 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xb0>
    57af:	0f b7 03             	movzwl (%rbx),%eax
    57b2:	8d 50 ef             	lea    -0x11(%rax),%edx
    57b5:	66 83 fa 01          	cmp    $0x1,%dx
    57b9:	76 0b                	jbe    57c6 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x176>
    57bb:	ba e4 02 00 00       	mov    $0x2e4,%edx
    57c0:	66 83 f8 07          	cmp    $0x7,%ax
    57c4:	75 05                	jne    57cb <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x17b>
    57c6:	ba d4 02 00 00       	mov    $0x2d4,%edx
    57cb:	45 31 c9             	xor    %r9d,%r9d
    57ce:	45 31 c0             	xor    %r8d,%r8d
    57d1:	31 c9                	xor    %ecx,%ecx
    57d3:	4c 89 e6             	mov    %r12,%rsi
    57d6:	48 89 ef             	mov    %rbp,%rdi
    57d9:	e8 62 62 00 00       	call   ba40 <mm_alloc>
    57de:	85 c0                	test   %eax,%eax
    57e0:	0f 85 56 ff ff ff    	jne    573c <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xec>
    57e6:	48 83 c3 20          	add    $0x20,%rbx
    57ea:	4c 39 eb             	cmp    %r13,%rbx
    57ed:	0f 82 7d fe ff ff    	jb     5670 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x20>
    57f3:	e9 15 ff ff ff       	jmp    570d <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xbd>
    57f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    57ff:	00 
    5800:	45 31 c9             	xor    %r9d,%r9d
    5803:	45 31 c0             	xor    %r8d,%r8d
    5806:	b9 03 00 00 00       	mov    $0x3,%ecx
    580b:	ba 80 00 00 00       	mov    $0x80,%edx
    5810:	4c 89 e6             	mov    %r12,%rsi
    5813:	48 89 ef             	mov    %rbp,%rdi
    5816:	e8 25 61 00 00       	call   b940 <mm_init_ema>
    581b:	85 c0                	test   %eax,%eax
    581d:	0f 85 19 ff ff ff    	jne    573c <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xec>
    5823:	4c 89 e6             	mov    %r12,%rsi
    5826:	48 89 ef             	mov    %rbp,%rdi
    5829:	e8 52 62 00 00       	call   ba80 <mm_dealloc>
    582e:	85 c0                	test   %eax,%eax
    5830:	0f 84 6f ff ff ff    	je     57a5 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x155>
    5836:	e9 01 ff ff ff       	jmp    573c <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xec>
    583b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5840:	ba 80 01 00 00       	mov    $0x180,%edx
    5845:	31 c9                	xor    %ecx,%ecx
    5847:	e9 97 fe ff ff       	jmp    56e3 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x93>
    584c:	0f 1f 40 00          	nopl   0x0(%rax)
    5850:	31 c0                	xor    %eax,%eax
    5852:	c3                   	ret    
    5853:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    585a:	00 00 00 
    585d:	0f 1f 00             	nopl   (%rax)

0000000000005860 <init_rts_emas>:
    5860:	f3 0f 1e fa          	endbr64 
    5864:	55                   	push   %rbp
    5865:	48 89 d5             	mov    %rdx,%rbp
    5868:	53                   	push   %rbx
    5869:	48 89 f3             	mov    %rsi,%rbx
    586c:	48 83 ec 08          	sub    $0x8,%rsp
    5870:	e8 8b 32 00 00       	call   8b00 <init_segment_emas>
    5875:	85 c0                	test   %eax,%eax
    5877:	74 07                	je     5880 <init_rts_emas+0x20>
    5879:	48 83 c4 08          	add    $0x8,%rsp
    587d:	5b                   	pop    %rbx
    587e:	5d                   	pop    %rbp
    587f:	c3                   	ret    
    5880:	48 83 c4 08          	add    $0x8,%rsp
    5884:	48 89 ee             	mov    %rbp,%rsi
    5887:	48 89 df             	mov    %rbx,%rdi
    588a:	31 d2                	xor    %edx,%edx
    588c:	5b                   	pop    %rbx
    588d:	5d                   	pop    %rbp
    588e:	e9 bd fd ff ff       	jmp    5650 <_ZL22init_rts_contexts_emasP9_layout_tS0_m>
    5893:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    589a:	00 00 00 
    589d:	0f 1f 00             	nopl   (%rax)

00000000000058a0 <sgx_mm_alloc_ocall>:
    58a0:	f3 0f 1e fa          	endbr64 
    58a4:	41 56                	push   %r14
    58a6:	41 89 ce             	mov    %ecx,%r14d
    58a9:	41 55                	push   %r13
    58ab:	49 89 fd             	mov    %rdi,%r13
    58ae:	bf 20 00 00 00       	mov    $0x20,%edi
    58b3:	41 54                	push   %r12
    58b5:	49 89 f4             	mov    %rsi,%r12
    58b8:	55                   	push   %rbp
    58b9:	89 d5                	mov    %edx,%ebp
    58bb:	53                   	push   %rbx
    58bc:	e8 ff 03 00 00       	call   5cc0 <sgx_ocalloc>
    58c1:	48 85 c0             	test   %rax,%rax
    58c4:	74 4a                	je     5910 <sgx_mm_alloc_ocall+0x70>
    58c6:	89 68 18             	mov    %ebp,0x18(%rax)
    58c9:	48 89 c6             	mov    %rax,%rsi
    58cc:	bf fa ff ff ff       	mov    $0xfffffffa,%edi
    58d1:	48 89 c3             	mov    %rax,%rbx
    58d4:	4c 89 68 08          	mov    %r13,0x8(%rax)
    58d8:	bd 0e 00 00 00       	mov    $0xe,%ebp
    58dd:	4c 89 60 10          	mov    %r12,0x10(%rax)
    58e1:	44 89 70 1c          	mov    %r14d,0x1c(%rax)
    58e5:	e8 c6 19 00 00       	call   72b0 <sgx_ocall>
    58ea:	85 c0                	test   %eax,%eax
    58ec:	74 12                	je     5900 <sgx_mm_alloc_ocall+0x60>
    58ee:	e8 ad 04 00 00       	call   5da0 <sgx_ocfree>
    58f3:	5b                   	pop    %rbx
    58f4:	89 e8                	mov    %ebp,%eax
    58f6:	5d                   	pop    %rbp
    58f7:	41 5c                	pop    %r12
    58f9:	41 5d                	pop    %r13
    58fb:	41 5e                	pop    %r14
    58fd:	c3                   	ret    
    58fe:	66 90                	xchg   %ax,%ax
    5900:	8b 03                	mov    (%rbx),%eax
    5902:	f7 d8                	neg    %eax
    5904:	19 ed                	sbb    %ebp,%ebp
    5906:	83 e5 0e             	and    $0xe,%ebp
    5909:	eb e3                	jmp    58ee <sgx_mm_alloc_ocall+0x4e>
    590b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5910:	e8 8b 04 00 00       	call   5da0 <sgx_ocfree>
    5915:	bd 01 00 00 00       	mov    $0x1,%ebp
    591a:	5b                   	pop    %rbx
    591b:	89 e8                	mov    %ebp,%eax
    591d:	5d                   	pop    %rbp
    591e:	41 5c                	pop    %r12
    5920:	41 5d                	pop    %r13
    5922:	41 5e                	pop    %r14
    5924:	c3                   	ret    
    5925:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    592c:	00 00 00 
    592f:	90                   	nop

0000000000005930 <sgx_mm_modify_ocall>:
    5930:	f3 0f 1e fa          	endbr64 
    5934:	41 56                	push   %r14
    5936:	41 89 ce             	mov    %ecx,%r14d
    5939:	41 55                	push   %r13
    593b:	49 89 fd             	mov    %rdi,%r13
    593e:	bf 20 00 00 00       	mov    $0x20,%edi
    5943:	41 54                	push   %r12
    5945:	49 89 f4             	mov    %rsi,%r12
    5948:	55                   	push   %rbp
    5949:	89 d5                	mov    %edx,%ebp
    594b:	53                   	push   %rbx
    594c:	e8 6f 03 00 00       	call   5cc0 <sgx_ocalloc>
    5951:	48 85 c0             	test   %rax,%rax
    5954:	74 4a                	je     59a0 <sgx_mm_modify_ocall+0x70>
    5956:	89 68 18             	mov    %ebp,0x18(%rax)
    5959:	48 89 c6             	mov    %rax,%rsi
    595c:	bf f9 ff ff ff       	mov    $0xfffffff9,%edi
    5961:	48 89 c3             	mov    %rax,%rbx
    5964:	4c 89 68 08          	mov    %r13,0x8(%rax)
    5968:	bd 0e 00 00 00       	mov    $0xe,%ebp
    596d:	4c 89 60 10          	mov    %r12,0x10(%rax)
    5971:	44 89 70 1c          	mov    %r14d,0x1c(%rax)
    5975:	e8 36 19 00 00       	call   72b0 <sgx_ocall>
    597a:	85 c0                	test   %eax,%eax
    597c:	74 12                	je     5990 <sgx_mm_modify_ocall+0x60>
    597e:	e8 1d 04 00 00       	call   5da0 <sgx_ocfree>
    5983:	5b                   	pop    %rbx
    5984:	89 e8                	mov    %ebp,%eax
    5986:	5d                   	pop    %rbp
    5987:	41 5c                	pop    %r12
    5989:	41 5d                	pop    %r13
    598b:	41 5e                	pop    %r14
    598d:	c3                   	ret    
    598e:	66 90                	xchg   %ax,%ax
    5990:	8b 03                	mov    (%rbx),%eax
    5992:	f7 d8                	neg    %eax
    5994:	19 ed                	sbb    %ebp,%ebp
    5996:	83 e5 0e             	and    $0xe,%ebp
    5999:	eb e3                	jmp    597e <sgx_mm_modify_ocall+0x4e>
    599b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    59a0:	e8 fb 03 00 00       	call   5da0 <sgx_ocfree>
    59a5:	bd 01 00 00 00       	mov    $0x1,%ebp
    59aa:	5b                   	pop    %rbx
    59ab:	89 e8                	mov    %ebp,%eax
    59ad:	5d                   	pop    %rbp
    59ae:	41 5c                	pop    %r12
    59b0:	41 5d                	pop    %r13
    59b2:	41 5e                	pop    %r14
    59b4:	c3                   	ret    
    59b5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    59bc:	00 00 00 
    59bf:	90                   	nop

00000000000059c0 <sgx_mm_register_pfhandler>:
    59c0:	f3 0f 1e fa          	endbr64 
    59c4:	31 c0                	xor    %eax,%eax
    59c6:	48 83 3d ba 47 01 00 	cmpq   $0x0,0x147ba(%rip)        # 1a188 <g_mm_pfhandler>
    59cd:	00 
    59ce:	74 08                	je     59d8 <sgx_mm_register_pfhandler+0x18>
    59d0:	c3                   	ret    
    59d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    59d8:	48 89 3d a9 47 01 00 	mov    %rdi,0x147a9(%rip)        # 1a188 <g_mm_pfhandler>
    59df:	b8 01 00 00 00       	mov    $0x1,%eax
    59e4:	c3                   	ret    
    59e5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    59ec:	00 00 00 
    59ef:	90                   	nop

00000000000059f0 <sgx_mm_unregister_pfhandler>:
    59f0:	f3 0f 1e fa          	endbr64 
    59f4:	31 c0                	xor    %eax,%eax
    59f6:	48 39 3d 8b 47 01 00 	cmp    %rdi,0x1478b(%rip)        # 1a188 <g_mm_pfhandler>
    59fd:	74 01                	je     5a00 <sgx_mm_unregister_pfhandler+0x10>
    59ff:	c3                   	ret    
    5a00:	48 c7 05 7d 47 01 00 	movq   $0x0,0x1477d(%rip)        # 1a188 <g_mm_pfhandler>
    5a07:	00 00 00 00 
    5a0b:	b8 01 00 00 00       	mov    $0x1,%eax
    5a10:	c3                   	ret    
    5a11:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5a18:	00 00 00 
    5a1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000005a20 <sgx_mm_mutex_create>:
    5a20:	f3 0f 1e fa          	endbr64 
    5a24:	48 83 ec 08          	sub    $0x8,%rsp
    5a28:	bf 18 00 00 00       	mov    $0x18,%edi
    5a2d:	e8 9e 77 00 00       	call   d1d0 <dlmalloc>
    5a32:	48 85 c0             	test   %rax,%rax
    5a35:	74 16                	je     5a4d <sgx_mm_mutex_create+0x2d>
    5a37:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    5a3e:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
    5a45:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    5a4c:	00 
    5a4d:	48 83 c4 08          	add    $0x8,%rsp
    5a51:	c3                   	ret    
    5a52:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5a59:	00 00 00 
    5a5c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005a60 <sgx_mm_mutex_lock>:
    5a60:	f3 0f 1e fa          	endbr64 
    5a64:	53                   	push   %rbx
    5a65:	48 89 fb             	mov    %rdi,%rbx
    5a68:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    5a6f:	00 
    5a70:	48 89 df             	mov    %rbx,%rdi
    5a73:	e8 98 b1 00 00       	call   10c10 <sgx_thread_spin_trylock>
    5a78:	85 c0                	test   %eax,%eax
    5a7a:	75 f4                	jne    5a70 <sgx_mm_mutex_lock+0x10>
    5a7c:	5b                   	pop    %rbx
    5a7d:	c3                   	ret    
    5a7e:	66 90                	xchg   %ax,%ax

0000000000005a80 <sgx_mm_mutex_unlock>:
    5a80:	f3 0f 1e fa          	endbr64 
    5a84:	e9 17 b2 00 00       	jmp    10ca0 <sgx_thread_spin_unlock>
    5a89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000005a90 <sgx_mm_mutex_destroy>:
    5a90:	f3 0f 1e fa          	endbr64 
    5a94:	55                   	push   %rbp
    5a95:	53                   	push   %rbx
    5a96:	48 89 fb             	mov    %rdi,%rbx
    5a99:	48 83 ec 08          	sub    $0x8,%rsp
    5a9d:	e8 ee b0 00 00       	call   10b90 <sgx_thread_spin_destroy>
    5aa2:	48 89 df             	mov    %rbx,%rdi
    5aa5:	89 c5                	mov    %eax,%ebp
    5aa7:	e8 14 95 00 00       	call   efc0 <dlfree>
    5aac:	48 83 c4 08          	add    $0x8,%rsp
    5ab0:	89 e8                	mov    %ebp,%eax
    5ab2:	5b                   	pop    %rbx
    5ab3:	5d                   	pop    %rbp
    5ab4:	c3                   	ret    
    5ab5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5abc:	00 00 00 
    5abf:	90                   	nop

0000000000005ac0 <sgx_mm_is_within_enclave>:
    5ac0:	f3 0f 1e fa          	endbr64 
    5ac4:	48 83 ec 08          	sub    $0x8,%rsp
    5ac8:	e8 33 01 00 00       	call   5c00 <sgx_is_within_enclave>
    5acd:	85 c0                	test   %eax,%eax
    5acf:	0f 95 c0             	setne  %al
    5ad2:	48 83 c4 08          	add    $0x8,%rsp
    5ad6:	c3                   	ret    
    5ad7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    5ade:	00 00 

0000000000005ae0 <init_optimized_libs>:
    5ae0:	f3 0f 1e fa          	endbr64 
    5ae4:	41 54                	push   %r12
    5ae6:	49 89 d4             	mov    %rdx,%r12
    5ae9:	55                   	push   %rbp
    5aea:	48 89 f5             	mov    %rsi,%rbp
    5aed:	53                   	push   %rbx
    5aee:	48 89 fb             	mov    %rdi,%rbx
    5af1:	e8 0e c6 00 00       	call   12104 <get_enclave_state>
    5af6:	83 f8 01             	cmp    $0x1,%eax
    5af9:	0f 85 d6 00 00 00    	jne    5bd5 <init_optimized_libs+0xf5>
    5aff:	48 b8 ff ff ff ff ff 	movabs $0xffffffffffffff,%rax
    5b06:	ff ff 00 
    5b09:	48 89 da             	mov    %rbx,%rdx
    5b0c:	48 21 c2             	and    %rax,%rdx
    5b0f:	48 39 d8             	cmp    %rbx,%rax
    5b12:	48 0f 42 da          	cmovb  %rdx,%rbx
    5b16:	48 81 fb ff 01 00 00 	cmp    $0x1ff,%rbx
    5b1d:	0f 86 b2 00 00 00    	jbe    5bd5 <init_optimized_libs+0xf5>
    5b23:	f6 c3 20             	test   $0x20,%bl
    5b26:	74 0e                	je     5b36 <init_optimized_libs+0x56>
    5b28:	48 89 d8             	mov    %rbx,%rax
    5b2b:	48 f7 d0             	not    %rax
    5b2e:	a8 1f                	test   $0x1f,%al
    5b30:	0f 85 9f 00 00 00    	jne    5bd5 <init_optimized_libs+0xf5>
    5b36:	f6 c3 40             	test   $0x40,%bl
    5b39:	74 0e                	je     5b49 <init_optimized_libs+0x69>
    5b3b:	48 89 d8             	mov    %rbx,%rax
    5b3e:	48 f7 d0             	not    %rax
    5b41:	a8 3f                	test   $0x3f,%al
    5b43:	0f 85 8c 00 00 00    	jne    5bd5 <init_optimized_libs+0xf5>
    5b49:	f6 c3 80             	test   $0x80,%bl
    5b4c:	74 0a                	je     5b58 <init_optimized_libs+0x78>
    5b4e:	48 89 d8             	mov    %rbx,%rax
    5b51:	48 f7 d0             	not    %rax
    5b54:	a8 7f                	test   $0x7f,%al
    5b56:	75 7d                	jne    5bd5 <init_optimized_libs+0xf5>
    5b58:	f6 c7 01             	test   $0x1,%bh
    5b5b:	74 0b                	je     5b68 <init_optimized_libs+0x88>
    5b5d:	0f b6 c3             	movzbl %bl,%eax
    5b60:	48 3d ff 00 00 00    	cmp    $0xff,%rax
    5b66:	75 6d                	jne    5bd5 <init_optimized_libs+0xf5>
    5b68:	f6 c7 02             	test   $0x2,%bh
    5b6b:	74 0d                	je     5b7a <init_optimized_libs+0x9a>
    5b6d:	48 89 d8             	mov    %rbx,%rax
    5b70:	48 f7 d0             	not    %rax
    5b73:	a9 ff 01 00 00       	test   $0x1ff,%eax
    5b78:	75 5b                	jne    5bd5 <init_optimized_libs+0xf5>
    5b7a:	f6 c7 04             	test   $0x4,%bh
    5b7d:	75 49                	jne    5bc8 <init_optimized_libs+0xe8>
    5b7f:	4c 89 e0             	mov    %r12,%rax
    5b82:	48 f7 d0             	not    %rax
    5b85:	a8 06                	test   $0x6,%al
    5b87:	74 57                	je     5be0 <init_optimized_libs+0x100>
    5b89:	48 b8 ff 7f 12 86 08 	movabs $0xfffe200886127fff,%rax
    5b90:	20 fe ff 
    5b93:	48 21 c3             	and    %rax,%rbx
    5b96:	4c 8d 25 93 22 01 00 	lea    0x12293(%rip),%r12        # 17e30 <g_cpu_feature_indicator>
    5b9d:	48 89 df             	mov    %rbx,%rdi
    5ba0:	49 89 1c 24          	mov    %rbx,(%r12)
    5ba4:	e8 b7 ae 00 00       	call   10a60 <sgx_init_string_lib>
    5ba9:	85 c0                	test   %eax,%eax
    5bab:	75 28                	jne    5bd5 <init_optimized_libs+0xf5>
    5bad:	49 8b 3c 24          	mov    (%r12),%rdi
    5bb1:	48 89 ee             	mov    %rbp,%rsi
    5bb4:	e8 27 b5 00 00       	call   110e0 <sgx_init_crypto_lib>
    5bb9:	5b                   	pop    %rbx
    5bba:	5d                   	pop    %rbp
    5bbb:	f7 d8                	neg    %eax
    5bbd:	41 5c                	pop    %r12
    5bbf:	19 c0                	sbb    %eax,%eax
    5bc1:	c3                   	ret    
    5bc2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5bc8:	48 89 d8             	mov    %rbx,%rax
    5bcb:	48 f7 d0             	not    %rax
    5bce:	a9 ff 03 00 00       	test   $0x3ff,%eax
    5bd3:	74 aa                	je     5b7f <init_optimized_libs+0x9f>
    5bd5:	5b                   	pop    %rbx
    5bd6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    5bdb:	5d                   	pop    %rbp
    5bdc:	41 5c                	pop    %r12
    5bde:	c3                   	ret    
    5bdf:	90                   	nop
    5be0:	4c 89 e0             	mov    %r12,%rax
    5be3:	48 f7 d0             	not    %rax
    5be6:	a8 e0                	test   $0xe0,%al
    5be8:	74 ac                	je     5b96 <init_optimized_libs+0xb6>
    5bea:	48 b8 ff ff ff b6 18 	movabs $0xfffee018b6ffffff,%rax
    5bf1:	e0 fe ff 
    5bf4:	48 21 c3             	and    %rax,%rbx
    5bf7:	eb 9d                	jmp    5b96 <init_optimized_libs+0xb6>
    5bf9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000005c00 <sgx_is_within_enclave>:
    5c00:	f3 0f 1e fa          	endbr64 
    5c04:	48 8d 05 15 22 01 00 	lea    0x12215(%rip),%rax        # 17e20 <g_enclave_base>
    5c0b:	48 8b 10             	mov    (%rax),%rdx
    5c0e:	48 8d 05 03 22 01 00 	lea    0x12203(%rip),%rax        # 17e18 <g_enclave_size>
    5c15:	48 8b 08             	mov    (%rax),%rcx
    5c18:	48 01 d1             	add    %rdx,%rcx
    5c1b:	48 89 c8             	mov    %rcx,%rax
    5c1e:	48 83 e8 01          	sub    $0x1,%rax
    5c22:	48 85 f6             	test   %rsi,%rsi
    5c25:	74 21                	je     5c48 <sgx_is_within_enclave+0x48>
    5c27:	48 83 ee 01          	sub    $0x1,%rsi
    5c2b:	48 01 fe             	add    %rdi,%rsi
    5c2e:	0f 93 c1             	setae  %cl
    5c31:	48 39 d7             	cmp    %rdx,%rdi
    5c34:	0f 93 c2             	setae  %dl
    5c37:	21 ca                	and    %ecx,%edx
    5c39:	48 39 f0             	cmp    %rsi,%rax
    5c3c:	0f 93 c0             	setae  %al
    5c3f:	0f b6 c0             	movzbl %al,%eax
    5c42:	21 d0                	and    %edx,%eax
    5c44:	c3                   	ret    
    5c45:	0f 1f 00             	nopl   (%rax)
    5c48:	48 89 fe             	mov    %rdi,%rsi
    5c4b:	b9 01 00 00 00       	mov    $0x1,%ecx
    5c50:	eb df                	jmp    5c31 <sgx_is_within_enclave+0x31>
    5c52:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5c59:	00 00 00 
    5c5c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005c60 <sgx_is_outside_enclave>:
    5c60:	f3 0f 1e fa          	endbr64 
    5c64:	48 85 f6             	test   %rsi,%rsi
    5c67:	74 17                	je     5c80 <sgx_is_outside_enclave+0x20>
    5c69:	48 83 ee 01          	sub    $0x1,%rsi
    5c6d:	b8 00 00 00 00       	mov    $0x0,%eax
    5c72:	48 01 fe             	add    %rdi,%rsi
    5c75:	73 0c                	jae    5c83 <sgx_is_outside_enclave+0x23>
    5c77:	c3                   	ret    
    5c78:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    5c7f:	00 
    5c80:	48 89 fe             	mov    %rdi,%rsi
    5c83:	48 8d 05 96 21 01 00 	lea    0x12196(%rip),%rax        # 17e20 <g_enclave_base>
    5c8a:	48 8b 10             	mov    (%rax),%rdx
    5c8d:	48 8d 05 84 21 01 00 	lea    0x12184(%rip),%rax        # 17e18 <g_enclave_size>
    5c94:	48 8b 08             	mov    (%rax),%rcx
    5c97:	48 01 d1             	add    %rdx,%rcx
    5c9a:	48 89 c8             	mov    %rcx,%rax
    5c9d:	48 83 e8 01          	sub    $0x1,%rax
    5ca1:	48 39 f8             	cmp    %rdi,%rax
    5ca4:	0f 92 c0             	setb   %al
    5ca7:	48 39 d6             	cmp    %rdx,%rsi
    5caa:	0f 92 c2             	setb   %dl
    5cad:	09 d0                	or     %edx,%eax
    5caf:	0f b6 c0             	movzbl %al,%eax
    5cb2:	c3                   	ret    
    5cb3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5cba:	00 00 00 
    5cbd:	0f 1f 00             	nopl   (%rax)

0000000000005cc0 <sgx_ocalloc>:
    5cc0:	f3 0f 1e fa          	endbr64 
    5cc4:	53                   	push   %rbx
    5cc5:	48 89 fb             	mov    %rdi,%rbx
    5cc8:	48 83 ec 10          	sub    $0x10,%rsp
    5ccc:	e8 72 c4 00 00       	call   12143 <get_thread_data>
    5cd1:	48 8d 15 48 21 01 00 	lea    0x12148(%rip),%rdx        # 17e20 <g_enclave_base>
    5cd8:	48 8b 70 20          	mov    0x20(%rax),%rsi
    5cdc:	48 8b 3a             	mov    (%rdx),%rdi
    5cdf:	48 8d 15 32 21 01 00 	lea    0x12132(%rip),%rdx        # 17e18 <g_enclave_size>
    5ce6:	48 8b 86 90 00 00 00 	mov    0x90(%rsi),%rax
    5ced:	48 8b 0a             	mov    (%rdx),%rcx
    5cf0:	48 89 c2             	mov    %rax,%rdx
    5cf3:	48 83 c2 07          	add    $0x7,%rdx
    5cf7:	72 33                	jb     5d2c <sgx_ocalloc+0x6c>
    5cf9:	4c 8d 44 0f ff       	lea    -0x1(%rdi,%rcx,1),%r8
    5cfe:	48 39 fa             	cmp    %rdi,%rdx
    5d01:	72 05                	jb     5d08 <sgx_ocalloc+0x48>
    5d03:	49 39 c0             	cmp    %rax,%r8
    5d06:	73 24                	jae    5d2c <sgx_ocalloc+0x6c>
    5d08:	48 39 d8             	cmp    %rbx,%rax
    5d0b:	72 1f                	jb     5d2c <sgx_ocalloc+0x6c>
    5d0d:	48 89 c2             	mov    %rax,%rdx
    5d10:	48 29 da             	sub    %rbx,%rdx
    5d13:	48 89 d1             	mov    %rdx,%rcx
    5d16:	48 83 e1 f0          	and    $0xfffffffffffffff0,%rcx
    5d1a:	48 85 db             	test   %rbx,%rbx
    5d1d:	75 19                	jne    5d38 <sgx_ocalloc+0x78>
    5d1f:	48 89 cb             	mov    %rcx,%rbx
    5d22:	48 39 fb             	cmp    %rdi,%rbx
    5d25:	72 21                	jb     5d48 <sgx_ocalloc+0x88>
    5d27:	49 39 c8             	cmp    %rcx,%r8
    5d2a:	72 1c                	jb     5d48 <sgx_ocalloc+0x88>
    5d2c:	e8 06 c8 00 00       	call   12537 <abort>
    5d31:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5d38:	48 83 eb 01          	sub    $0x1,%rbx
    5d3c:	48 01 cb             	add    %rcx,%rbx
    5d3f:	72 eb                	jb     5d2c <sgx_ocalloc+0x6c>
    5d41:	eb df                	jmp    5d22 <sgx_ocalloc+0x62>
    5d43:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5d48:	48 83 e8 01          	sub    $0x1,%rax
    5d4c:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    5d52:	48 81 e2 00 f0 ff ff 	and    $0xfffffffffffff000,%rdx
    5d59:	75 1d                	jne    5d78 <sgx_ocalloc+0xb8>
    5d5b:	eb cf                	jmp    5d2c <sgx_ocalloc+0x6c>
    5d5d:	0f 1f 00             	nopl   (%rax)
    5d60:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    5d65:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    5d6a:	c6 00 00             	movb   $0x0,(%rax)
    5d6d:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    5d72:	48 2d 00 10 00 00    	sub    $0x1000,%rax
    5d78:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    5d7d:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    5d82:	48 39 d0             	cmp    %rdx,%rax
    5d85:	73 d9                	jae    5d60 <sgx_ocalloc+0xa0>
    5d87:	48 89 8e 90 00 00 00 	mov    %rcx,0x90(%rsi)
    5d8e:	48 83 c4 10          	add    $0x10,%rsp
    5d92:	48 89 c8             	mov    %rcx,%rax
    5d95:	5b                   	pop    %rbx
    5d96:	c3                   	ret    
    5d97:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    5d9e:	00 00 

0000000000005da0 <sgx_ocfree>:
    5da0:	f3 0f 1e fa          	endbr64 
    5da4:	48 83 ec 08          	sub    $0x8,%rsp
    5da8:	e8 96 c3 00 00       	call   12143 <get_thread_data>
    5dad:	48 8d 15 6c 20 01 00 	lea    0x1206c(%rip),%rdx        # 17e20 <g_enclave_base>
    5db4:	48 8d 0d 5d 20 01 00 	lea    0x1205d(%rip),%rcx        # 17e18 <g_enclave_size>
    5dbb:	48 8b 70 20          	mov    0x20(%rax),%rsi
    5dbf:	48 8b 40 08          	mov    0x8(%rax),%rax
    5dc3:	48 8b 12             	mov    (%rdx),%rdx
    5dc6:	48 8b 09             	mov    (%rcx),%rcx
    5dc9:	48 8b 40 e8          	mov    -0x18(%rax),%rax
    5dcd:	48 89 c7             	mov    %rax,%rdi
    5dd0:	48 83 c7 07          	add    $0x7,%rdi
    5dd4:	72 0f                	jb     5de5 <sgx_ocfree+0x45>
    5dd6:	48 8d 4c 0a ff       	lea    -0x1(%rdx,%rcx,1),%rcx
    5ddb:	48 39 c1             	cmp    %rax,%rcx
    5dde:	72 10                	jb     5df0 <sgx_ocfree+0x50>
    5de0:	48 39 d7             	cmp    %rdx,%rdi
    5de3:	72 0b                	jb     5df0 <sgx_ocfree+0x50>
    5de5:	e8 4d c7 00 00       	call   12537 <abort>
    5dea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5df0:	48 89 86 90 00 00 00 	mov    %rax,0x90(%rsi)
    5df7:	48 83 c4 08          	add    $0x8,%rsp
    5dfb:	c3                   	ret    
    5dfc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005e00 <sgx_read_rand>:
    5e00:	f3 0f 1e fa          	endbr64 
    5e04:	41 55                	push   %r13
    5e06:	41 54                	push   %r12
    5e08:	55                   	push   %rbp
    5e09:	53                   	push   %rbx
    5e0a:	48 83 ec 18          	sub    $0x18,%rsp
    5e0e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    5e15:	00 00 
    5e17:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    5e1c:	31 c0                	xor    %eax,%eax
    5e1e:	48 85 ff             	test   %rdi,%rdi
    5e21:	0f 84 f9 00 00 00    	je     5f20 <sgx_read_rand+0x120>
    5e27:	48 89 f3             	mov    %rsi,%rbx
    5e2a:	48 85 f6             	test   %rsi,%rsi
    5e2d:	0f 84 ed 00 00 00    	je     5f20 <sgx_read_rand+0x120>
    5e33:	48 8d 05 e6 1f 01 00 	lea    0x11fe6(%rip),%rax        # 17e20 <g_enclave_base>
    5e3a:	48 89 fd             	mov    %rdi,%rbp
    5e3d:	31 ff                	xor    %edi,%edi
    5e3f:	48 8b 08             	mov    (%rax),%rcx
    5e42:	48 8d 05 cf 1f 01 00 	lea    0x11fcf(%rip),%rax        # 17e18 <g_enclave_size>
    5e49:	48 8b 10             	mov    (%rax),%rdx
    5e4c:	48 8d 46 ff          	lea    -0x1(%rsi),%rax
    5e50:	48 01 ca             	add    %rcx,%rdx
    5e53:	48 83 ea 01          	sub    $0x1,%rdx
    5e57:	48 01 e8             	add    %rbp,%rax
    5e5a:	40 0f 92 c7          	setb   %dil
    5e5e:	48 39 c2             	cmp    %rax,%rdx
    5e61:	41 0f 93 c0          	setae  %r8b
    5e65:	48 85 ff             	test   %rdi,%rdi
    5e68:	40 0f 94 c6          	sete   %sil
    5e6c:	41 84 f0             	test   %sil,%r8b
    5e6f:	74 05                	je     5e76 <sgx_read_rand+0x76>
    5e71:	48 39 cd             	cmp    %rcx,%rbp
    5e74:	73 42                	jae    5eb8 <sgx_read_rand+0xb8>
    5e76:	be 02 00 00 00       	mov    $0x2,%esi
    5e7b:	48 85 ff             	test   %rdi,%rdi
    5e7e:	74 28                	je     5ea8 <sgx_read_rand+0xa8>
    5e80:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    5e85:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    5e8c:	00 00 
    5e8e:	0f 85 96 00 00 00    	jne    5f2a <sgx_read_rand+0x12a>
    5e94:	48 83 c4 18          	add    $0x18,%rsp
    5e98:	89 f0                	mov    %esi,%eax
    5e9a:	5b                   	pop    %rbx
    5e9b:	5d                   	pop    %rbp
    5e9c:	41 5c                	pop    %r12
    5e9e:	41 5d                	pop    %r13
    5ea0:	c3                   	ret    
    5ea1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5ea8:	48 39 c8             	cmp    %rcx,%rax
    5eab:	72 0b                	jb     5eb8 <sgx_read_rand+0xb8>
    5ead:	48 39 d5             	cmp    %rdx,%rbp
    5eb0:	76 ce                	jbe    5e80 <sgx_read_rand+0x80>
    5eb2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5eb8:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
    5ebf:	00 
    5ec0:	4c 8d 6c 24 04       	lea    0x4(%rsp),%r13
    5ec5:	4c 89 ef             	mov    %r13,%rdi
    5ec8:	e8 47 c6 00 00       	call   12514 <do_rdrand>
    5ecd:	85 c0                	test   %eax,%eax
    5ecf:	74 3f                	je     5f10 <sgx_read_rand+0x110>
    5ed1:	41 bc 04 00 00 00    	mov    $0x4,%r12d
    5ed7:	48 89 ef             	mov    %rbp,%rdi
    5eda:	4c 89 ee             	mov    %r13,%rsi
    5edd:	4c 39 e3             	cmp    %r12,%rbx
    5ee0:	4c 0f 46 e3          	cmovbe %rbx,%r12
    5ee4:	4c 89 e2             	mov    %r12,%rdx
    5ee7:	4c 01 e5             	add    %r12,%rbp
    5eea:	e8 81 a8 00 00       	call   10770 <memcpy>
    5eef:	4c 29 e3             	sub    %r12,%rbx
    5ef2:	75 d1                	jne    5ec5 <sgx_read_rand+0xc5>
    5ef4:	be 04 00 00 00       	mov    $0x4,%esi
    5ef9:	b9 04 00 00 00       	mov    $0x4,%ecx
    5efe:	31 d2                	xor    %edx,%edx
    5f00:	4c 89 ef             	mov    %r13,%rdi
    5f03:	e8 b8 aa 00 00       	call   109c0 <memset_s>
    5f08:	31 f6                	xor    %esi,%esi
    5f0a:	e9 71 ff ff ff       	jmp    5e80 <sgx_read_rand+0x80>
    5f0f:	90                   	nop
    5f10:	be 01 00 00 00       	mov    $0x1,%esi
    5f15:	e9 66 ff ff ff       	jmp    5e80 <sgx_read_rand+0x80>
    5f1a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5f20:	be 02 00 00 00       	mov    $0x2,%esi
    5f25:	e9 56 ff ff ff       	jmp    5e80 <sgx_read_rand+0x80>
    5f2a:	e8 d1 ab 00 00       	call   10b00 <__stack_chk_fail>
    5f2f:	90                   	nop

0000000000005f30 <check_static_stack_canary>:
    5f30:	f3 0f 1e fa          	endbr64 
    5f34:	48 8d 05 cd 1e 01 00 	lea    0x11ecd(%rip),%rax        # 17e08 <__intel_security_cookie>
    5f3b:	48 8b 00             	mov    (%rax),%rax
    5f3e:	48 39 87 08 fc fe ff 	cmp    %rax,-0x103f8(%rdi)
    5f45:	0f 95 c0             	setne  %al
    5f48:	0f b6 c0             	movzbl %al,%eax
    5f4b:	f7 d8                	neg    %eax
    5f4d:	c3                   	ret    
    5f4e:	66 90                	xchg   %ax,%ax

0000000000005f50 <sgx_rdpkru>:
    5f50:	f3 0f 1e fa          	endbr64 
    5f54:	53                   	push   %rbx
    5f55:	48 89 fb             	mov    %rdi,%rbx
    5f58:	e8 63 18 00 00       	call   77c0 <is_pkru_enabled>
    5f5d:	89 c2                	mov    %eax,%edx
    5f5f:	31 c0                	xor    %eax,%eax
    5f61:	84 d2                	test   %dl,%dl
    5f63:	74 0c                	je     5f71 <sgx_rdpkru+0x21>
    5f65:	89 c1                	mov    %eax,%ecx
    5f67:	0f 01 ee             	rdpkru 
    5f6a:	89 03                	mov    %eax,(%rbx)
    5f6c:	b8 01 00 00 00       	mov    $0x1,%eax
    5f71:	5b                   	pop    %rbx
    5f72:	c3                   	ret    
    5f73:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5f7a:	00 00 00 
    5f7d:	0f 1f 00             	nopl   (%rax)

0000000000005f80 <sgx_wrpkru>:
    5f80:	f3 0f 1e fa          	endbr64 
    5f84:	53                   	push   %rbx
    5f85:	89 fb                	mov    %edi,%ebx
    5f87:	e8 34 18 00 00       	call   77c0 <is_pkru_enabled>
    5f8c:	31 d2                	xor    %edx,%edx
    5f8e:	84 c0                	test   %al,%al
    5f90:	74 0c                	je     5f9e <sgx_wrpkru+0x1e>
    5f92:	89 d8                	mov    %ebx,%eax
    5f94:	89 d1                	mov    %edx,%ecx
    5f96:	0f 01 ef             	wrpkru 
    5f99:	ba 01 00 00 00       	mov    $0x1,%edx
    5f9e:	89 d0                	mov    %edx,%eax
    5fa0:	5b                   	pop    %rbx
    5fa1:	c3                   	ret    
    5fa2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5fa9:	00 00 00 
    5fac:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005fb0 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0>:
    5fb0:	41 55                	push   %r13
    5fb2:	49 89 cd             	mov    %rcx,%r13
    5fb5:	41 54                	push   %r12
    5fb7:	55                   	push   %rbp
    5fb8:	53                   	push   %rbx
    5fb9:	48 83 ec 08          	sub    $0x8,%rsp
    5fbd:	48 8d 0d bc d1 00 00 	lea    0xd1bc(%rip),%rcx        # 13180 <g_global_data>
    5fc4:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    5fca:	85 c0                	test   %eax,%eax
    5fcc:	0f 84 8e 00 00 00    	je     6060 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0xb0>
    5fd2:	48 89 d3             	mov    %rdx,%rbx
    5fd5:	49 89 fc             	mov    %rdi,%r12
    5fd8:	31 d2                	xor    %edx,%edx
    5fda:	eb 11                	jmp    5fed <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0x3d>
    5fdc:	0f 1f 40 00          	nopl   0x0(%rax)
    5fe0:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    5fe6:	83 c2 01             	add    $0x1,%edx
    5fe9:	39 c2                	cmp    %eax,%edx
    5feb:	73 73                	jae    6060 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0xb0>
    5fed:	89 d0                	mov    %edx,%eax
    5fef:	48 83 c0 0b          	add    $0xb,%rax
    5ff3:	48 c1 e0 05          	shl    $0x5,%rax
    5ff7:	48 01 c8             	add    %rcx,%rax
    5ffa:	0f b7 00             	movzwl (%rax),%eax
    5ffd:	66 39 c6             	cmp    %ax,%si
    6000:	75 de                	jne    5fe0 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0x30>
    6002:	8d 42 0b             	lea    0xb(%rdx),%eax
    6005:	48 c1 e0 05          	shl    $0x5,%rax
    6009:	48 01 c1             	add    %rax,%rcx
    600c:	48 89 cd             	mov    %rcx,%rbp
    600f:	74 4f                	je     6060 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0xb0>
    6011:	e8 e2 c0 00 00       	call   120f8 <get_enclave_base>
    6016:	48 8b 55 08          	mov    0x8(%rbp),%rdx
    601a:	48 01 da             	add    %rbx,%rdx
    601d:	48 01 d0             	add    %rdx,%rax
    6020:	8b 55 04             	mov    0x4(%rbp),%edx
    6023:	49 39 c4             	cmp    %rax,%r12
    6026:	72 38                	jb     6060 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0xb0>
    6028:	48 c1 e2 0c          	shl    $0xc,%rdx
    602c:	49 81 c4 00 10 00 00 	add    $0x1000,%r12
    6033:	48 01 c2             	add    %rax,%rdx
    6036:	4c 39 e2             	cmp    %r12,%rdx
    6039:	72 25                	jb     6060 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0xb0>
    603b:	4d 85 ed             	test   %r13,%r13
    603e:	74 11                	je     6051 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0xa1>
    6040:	48 8b 45 18          	mov    0x18(%rbp),%rax
    6044:	49 89 45 00          	mov    %rax,0x0(%r13)
    6048:	0f b7 45 02          	movzwl 0x2(%rbp),%eax
    604c:	66 41 89 45 08       	mov    %ax,0x8(%r13)
    6051:	31 c0                	xor    %eax,%eax
    6053:	48 83 c4 08          	add    $0x8,%rsp
    6057:	5b                   	pop    %rbx
    6058:	5d                   	pop    %rbp
    6059:	41 5c                	pop    %r12
    605b:	41 5d                	pop    %r13
    605d:	c3                   	ret    
    605e:	66 90                	xchg   %ax,%ax
    6060:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    6065:	eb ec                	jmp    6053 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0xa3>
    6067:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    606e:	00 00 

0000000000006070 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0>:
    6070:	48 81 ff ff ef ff ff 	cmp    $0xffffffffffffefff,%rdi
    6077:	0f 87 c3 01 00 00    	ja     6240 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x1d0>
    607d:	41 57                	push   %r15
    607f:	41 56                	push   %r14
    6081:	41 55                	push   %r13
    6083:	41 54                	push   %r12
    6085:	49 89 f4             	mov    %rsi,%r12
    6088:	55                   	push   %rbp
    6089:	48 89 d5             	mov    %rdx,%rbp
    608c:	53                   	push   %rbx
    608d:	48 89 fb             	mov    %rdi,%rbx
    6090:	48 83 ec 08          	sub    $0x8,%rsp
    6094:	e8 87 13 00 00       	call   7420 <get_heap_base>
    6099:	49 89 c5             	mov    %rax,%r13
    609c:	e8 0f 14 00 00       	call   74b0 <get_heap_min_size>
    60a1:	49 01 c5             	add    %rax,%r13
    60a4:	e8 97 13 00 00       	call   7440 <get_heap_size>
    60a9:	49 89 c6             	mov    %rax,%r14
    60ac:	e8 ff 13 00 00       	call   74b0 <get_heap_min_size>
    60b1:	49 29 c6             	sub    %rax,%r14
    60b4:	4c 39 eb             	cmp    %r13,%rbx
    60b7:	72 37                	jb     60f0 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x80>
    60b9:	48 8d 83 00 10 00 00 	lea    0x1000(%rbx),%rax
    60c0:	4d 01 f5             	add    %r14,%r13
    60c3:	49 39 c5             	cmp    %rax,%r13
    60c6:	72 28                	jb     60f0 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x80>
    60c8:	48 85 ed             	test   %rbp,%rbp
    60cb:	74 11                	je     60de <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x6e>
    60cd:	b8 08 00 00 00       	mov    $0x8,%eax
    60d2:	48 c7 45 00 03 02 00 	movq   $0x203,0x0(%rbp)
    60d9:	00 
    60da:	66 89 45 08          	mov    %ax,0x8(%rbp)
    60de:	31 c0                	xor    %eax,%eax
    60e0:	48 83 c4 08          	add    $0x8,%rsp
    60e4:	5b                   	pop    %rbx
    60e5:	5d                   	pop    %rbp
    60e6:	41 5c                	pop    %r12
    60e8:	41 5d                	pop    %r13
    60ea:	41 5e                	pop    %r14
    60ec:	41 5f                	pop    %r15
    60ee:	c3                   	ret    
    60ef:	90                   	nop
    60f0:	31 d2                	xor    %edx,%edx
    60f2:	48 89 e9             	mov    %rbp,%rcx
    60f5:	be 07 00 00 00       	mov    $0x7,%esi
    60fa:	48 89 df             	mov    %rbx,%rdi
    60fd:	e8 ae fe ff ff       	call   5fb0 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0>
    6102:	85 c0                	test   %eax,%eax
    6104:	74 d8                	je     60de <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x6e>
    6106:	48 8d 15 5b 1d 01 00 	lea    0x11d5b(%rip),%rdx        # 17e68 <rsrv_mem_size>
    610d:	48 8d 05 5c 1d 01 00 	lea    0x11d5c(%rip),%rax        # 17e70 <rsrv_mem_base>
    6114:	48 8b 0a             	mov    (%rdx),%rcx
    6117:	48 8d 15 42 1d 01 00 	lea    0x11d42(%rip),%rdx        # 17e60 <rsrv_mem_min_size>
    611e:	48 8b 00             	mov    (%rax),%rax
    6121:	48 8b 32             	mov    (%rdx),%rsi
    6124:	48 01 c6             	add    %rax,%rsi
    6127:	48 39 f3             	cmp    %rsi,%rbx
    612a:	72 0f                	jb     613b <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0xcb>
    612c:	48 8d 93 00 10 00 00 	lea    0x1000(%rbx),%rdx
    6133:	48 01 c8             	add    %rcx,%rax
    6136:	48 39 d0             	cmp    %rdx,%rax
    6139:	73 8d                	jae    60c8 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x58>
    613b:	48 8d 0d 3e d0 00 00 	lea    0xd03e(%rip),%rcx        # 13180 <g_global_data>
    6142:	31 d2                	xor    %edx,%edx
    6144:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    614a:	85 c0                	test   %eax,%eax
    614c:	74 25                	je     6173 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x103>
    614e:	66 90                	xchg   %ax,%ax
    6150:	89 d0                	mov    %edx,%eax
    6152:	48 83 c0 0b          	add    $0xb,%rax
    6156:	48 c1 e0 05          	shl    $0x5,%rax
    615a:	48 01 c8             	add    %rcx,%rax
    615d:	0f b7 00             	movzwl (%rax),%eax
    6160:	66 3d 13 10          	cmp    $0x1013,%ax
    6164:	74 42                	je     61a8 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x138>
    6166:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    616c:	83 c2 01             	add    $0x1,%edx
    616f:	39 c2                	cmp    %eax,%edx
    6171:	72 dd                	jb     6150 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0xe0>
    6173:	41 bd 0e 00 00 00    	mov    $0xe,%r13d
    6179:	31 d2                	xor    %edx,%edx
    617b:	48 89 e9             	mov    %rbp,%rcx
    617e:	44 89 ee             	mov    %r13d,%esi
    6181:	48 89 df             	mov    %rbx,%rdi
    6184:	e8 27 fe ff ff       	call   5fb0 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0>
    6189:	85 c0                	test   %eax,%eax
    618b:	0f 84 96 00 00 00    	je     6227 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x1b7>
    6191:	41 83 c5 01          	add    $0x1,%r13d
    6195:	41 83 fd 13          	cmp    $0x13,%r13d
    6199:	75 de                	jne    6179 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x109>
    619b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    61a0:	e9 3b ff ff ff       	jmp    60e0 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x70>
    61a5:	0f 1f 00             	nopl   (%rax)
    61a8:	8d 42 0b             	lea    0xb(%rdx),%eax
    61ab:	41 bd 0e 00 00 00    	mov    $0xe,%r13d
    61b1:	48 c1 e0 05          	shl    $0x5,%rax
    61b5:	48 01 c1             	add    %rax,%rcx
    61b8:	49 89 ce             	mov    %rcx,%r14
    61bb:	74 bc                	je     6179 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x109>
    61bd:	41 8b 46 04          	mov    0x4(%r14),%eax
    61c1:	45 31 ff             	xor    %r15d,%r15d
    61c4:	83 f8 ff             	cmp    $0xffffffff,%eax
    61c7:	75 17                	jne    61e0 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x170>
    61c9:	eb 4d                	jmp    6218 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x1a8>
    61cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    61d0:	41 8b 46 04          	mov    0x4(%r14),%eax
    61d4:	49 83 c7 01          	add    $0x1,%r15
    61d8:	83 c0 01             	add    $0x1,%eax
    61db:	41 39 c7             	cmp    %eax,%r15d
    61de:	73 38                	jae    6218 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x1a8>
    61e0:	49 8b 56 08          	mov    0x8(%r14),%rdx
    61e4:	48 89 e9             	mov    %rbp,%rcx
    61e7:	44 89 ee             	mov    %r13d,%esi
    61ea:	48 89 df             	mov    %rbx,%rdi
    61ed:	49 0f af d7          	imul   %r15,%rdx
    61f1:	e8 ba fd ff ff       	call   5fb0 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0>
    61f6:	85 c0                	test   %eax,%eax
    61f8:	75 d6                	jne    61d0 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x160>
    61fa:	4d 85 e4             	test   %r12,%r12
    61fd:	0f 84 db fe ff ff    	je     60de <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x6e>
    6203:	49 8b 46 08          	mov    0x8(%r14),%rax
    6207:	49 0f af c7          	imul   %r15,%rax
    620b:	49 89 04 24          	mov    %rax,(%r12)
    620f:	e9 ca fe ff ff       	jmp    60de <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x6e>
    6214:	0f 1f 40 00          	nopl   0x0(%rax)
    6218:	41 83 c5 01          	add    $0x1,%r13d
    621c:	41 83 fd 13          	cmp    $0x13,%r13d
    6220:	75 9b                	jne    61bd <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x14d>
    6222:	e9 74 ff ff ff       	jmp    619b <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x12b>
    6227:	4d 85 e4             	test   %r12,%r12
    622a:	0f 84 ae fe ff ff    	je     60de <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x6e>
    6230:	49 c7 04 24 00 00 00 	movq   $0x0,(%r12)
    6237:	00 
    6238:	e9 a1 fe ff ff       	jmp    60de <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x6e>
    623d:	0f 1f 00             	nopl   (%rax)
    6240:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    6245:	c3                   	ret    
    6246:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    624d:	00 00 00 

0000000000006250 <_Z24get_dynamic_layout_by_idt>:
    6250:	f3 0f 1e fa          	endbr64 
    6254:	48 8d 05 25 cf 00 00 	lea    0xcf25(%rip),%rax        # 13180 <g_global_data>
    625b:	8b 90 58 01 00 00    	mov    0x158(%rax),%edx
    6261:	85 d2                	test   %edx,%edx
    6263:	74 3b                	je     62a0 <_Z24get_dynamic_layout_by_idt+0x50>
    6265:	31 c9                	xor    %ecx,%ecx
    6267:	eb 14                	jmp    627d <_Z24get_dynamic_layout_by_idt+0x2d>
    6269:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6270:	8b 90 58 01 00 00    	mov    0x158(%rax),%edx
    6276:	83 c1 01             	add    $0x1,%ecx
    6279:	39 d1                	cmp    %edx,%ecx
    627b:	73 23                	jae    62a0 <_Z24get_dynamic_layout_by_idt+0x50>
    627d:	89 ca                	mov    %ecx,%edx
    627f:	48 83 c2 0b          	add    $0xb,%rdx
    6283:	48 c1 e2 05          	shl    $0x5,%rdx
    6287:	48 01 c2             	add    %rax,%rdx
    628a:	0f b7 12             	movzwl (%rdx),%edx
    628d:	66 39 fa             	cmp    %di,%dx
    6290:	75 de                	jne    6270 <_Z24get_dynamic_layout_by_idt+0x20>
    6292:	8d 51 0b             	lea    0xb(%rcx),%edx
    6295:	48 c1 e2 05          	shl    $0x5,%rdx
    6299:	48 01 d0             	add    %rdx,%rax
    629c:	c3                   	ret    
    629d:	0f 1f 00             	nopl   (%rax)
    62a0:	31 c0                	xor    %eax,%eax
    62a2:	c3                   	ret    
    62a3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    62aa:	00 00 00 
    62ad:	0f 1f 00             	nopl   (%rax)

00000000000062b0 <is_dynamic_thread>:
    62b0:	f3 0f 1e fa          	endbr64 
    62b4:	48 83 ec 28          	sub    $0x28,%rsp
    62b8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    62bf:	00 00 
    62c1:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    62c6:	31 c0                	xor    %eax,%eax
    62c8:	48 85 ff             	test   %rdi,%rdi
    62cb:	74 0e                	je     62db <is_dynamic_thread+0x2b>
    62cd:	31 f6                	xor    %esi,%esi
    62cf:	48 89 e2             	mov    %rsp,%rdx
    62d2:	e8 99 fd ff ff       	call   6070 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0>
    62d7:	85 c0                	test   %eax,%eax
    62d9:	74 1d                	je     62f8 <is_dynamic_thread+0x48>
    62db:	31 c0                	xor    %eax,%eax
    62dd:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    62e2:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    62e9:	00 00 
    62eb:	75 1a                	jne    6307 <is_dynamic_thread+0x57>
    62ed:	48 83 c4 28          	add    $0x28,%rsp
    62f1:	c3                   	ret    
    62f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    62f8:	31 c0                	xor    %eax,%eax
    62fa:	48 81 3c 24 00 01 00 	cmpq   $0x100,(%rsp)
    6301:	00 
    6302:	0f 94 c0             	sete   %al
    6305:	eb d6                	jmp    62dd <is_dynamic_thread+0x2d>
    6307:	e8 f4 a7 00 00       	call   10b00 <__stack_chk_fail>
    630c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000006310 <is_dynamic_thread_exist>:
    6310:	f3 0f 1e fa          	endbr64 
    6314:	48 8d 05 11 1b 01 00 	lea    0x11b11(%rip),%rax        # 17e2c <EDMM_supported>
    631b:	8b 00                	mov    (%rax),%eax
    631d:	85 c0                	test   %eax,%eax
    631f:	74 59                	je     637a <is_dynamic_thread_exist+0x6a>
    6321:	48 8d 0d 58 ce 00 00 	lea    0xce58(%rip),%rcx        # 13180 <g_global_data>
    6328:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    632e:	85 c0                	test   %eax,%eax
    6330:	74 46                	je     6378 <is_dynamic_thread_exist+0x68>
    6332:	31 d2                	xor    %edx,%edx
    6334:	eb 17                	jmp    634d <is_dynamic_thread_exist+0x3d>
    6336:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    633d:	00 00 00 
    6340:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    6346:	83 c2 01             	add    $0x1,%edx
    6349:	39 c2                	cmp    %eax,%edx
    634b:	73 2b                	jae    6378 <is_dynamic_thread_exist+0x68>
    634d:	89 d0                	mov    %edx,%eax
    634f:	48 83 c0 0b          	add    $0xb,%rax
    6353:	48 c1 e0 05          	shl    $0x5,%rax
    6357:	48 01 c8             	add    %rcx,%rax
    635a:	0f b7 00             	movzwl (%rax),%eax
    635d:	66 83 f8 12          	cmp    $0x12,%ax
    6361:	75 dd                	jne    6340 <is_dynamic_thread_exist+0x30>
    6363:	8d 42 0b             	lea    0xb(%rdx),%eax
    6366:	48 c1 e0 05          	shl    $0x5,%rax
    636a:	48 01 c1             	add    %rax,%rcx
    636d:	0f 95 c0             	setne  %al
    6370:	0f b6 c0             	movzbl %al,%eax
    6373:	c3                   	ret    
    6374:	0f 1f 40 00          	nopl   0x0(%rax)
    6378:	31 c0                	xor    %eax,%eax
    637a:	c3                   	ret    
    637b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000006380 <get_dynamic_stack_max_page>:
    6380:	f3 0f 1e fa          	endbr64 
    6384:	48 8d 0d f5 cd 00 00 	lea    0xcdf5(%rip),%rcx        # 13180 <g_global_data>
    638b:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    6391:	85 c0                	test   %eax,%eax
    6393:	74 45                	je     63da <get_dynamic_stack_max_page+0x5a>
    6395:	31 d2                	xor    %edx,%edx
    6397:	eb 14                	jmp    63ad <get_dynamic_stack_max_page+0x2d>
    6399:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    63a0:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    63a6:	83 c2 01             	add    $0x1,%edx
    63a9:	39 c2                	cmp    %eax,%edx
    63ab:	73 2b                	jae    63d8 <get_dynamic_stack_max_page+0x58>
    63ad:	89 d0                	mov    %edx,%eax
    63af:	48 83 c0 0b          	add    $0xb,%rax
    63b3:	48 c1 e0 05          	shl    $0x5,%rax
    63b7:	48 01 c8             	add    %rcx,%rax
    63ba:	0f b7 00             	movzwl (%rax),%eax
    63bd:	66 83 f8 07          	cmp    $0x7,%ax
    63c1:	75 dd                	jne    63a0 <get_dynamic_stack_max_page+0x20>
    63c3:	8d 42 0b             	lea    0xb(%rdx),%eax
    63c6:	48 c1 e0 05          	shl    $0x5,%rax
    63ca:	48 01 c1             	add    %rax,%rcx
    63cd:	74 09                	je     63d8 <get_dynamic_stack_max_page+0x58>
    63cf:	8b 41 04             	mov    0x4(%rcx),%eax
    63d2:	c3                   	ret    
    63d3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    63d8:	31 c0                	xor    %eax,%eax
    63da:	c3                   	ret    
    63db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000063e0 <do_add_thread>:
    63e0:	f3 0f 1e fa          	endbr64 
    63e4:	41 56                	push   %r14
    63e6:	41 55                	push   %r13
    63e8:	41 54                	push   %r12
    63ea:	55                   	push   %rbp
    63eb:	53                   	push   %rbx
    63ec:	48 89 fb             	mov    %rdi,%rbx
    63ef:	48 83 ec 10          	sub    $0x10,%rsp
    63f3:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    63fa:	00 00 
    63fc:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    6401:	31 c0                	xor    %eax,%eax
    6403:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    640a:	00 
    640b:	e8 e8 bc 00 00       	call   120f8 <get_enclave_base>
    6410:	31 d2                	xor    %edx,%edx
    6412:	48 89 e6             	mov    %rsp,%rsi
    6415:	48 89 df             	mov    %rbx,%rdi
    6418:	48 89 c5             	mov    %rax,%rbp
    641b:	e8 50 fc ff ff       	call   6070 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0>
    6420:	85 c0                	test   %eax,%eax
    6422:	75 62                	jne    6486 <do_add_thread+0xa6>
    6424:	4c 8d 25 55 cd 00 00 	lea    0xcd55(%rip),%r12        # 13180 <g_global_data>
    642b:	41 8b 84 24 58 01 00 	mov    0x158(%r12),%eax
    6432:	00 
    6433:	85 c0                	test   %eax,%eax
    6435:	74 4f                	je     6486 <do_add_thread+0xa6>
    6437:	31 d2                	xor    %edx,%edx
    6439:	eb 14                	jmp    644f <do_add_thread+0x6f>
    643b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6440:	41 8b 84 24 58 01 00 	mov    0x158(%r12),%eax
    6447:	00 
    6448:	83 c2 01             	add    $0x1,%edx
    644b:	39 c2                	cmp    %eax,%edx
    644d:	73 37                	jae    6486 <do_add_thread+0xa6>
    644f:	89 d0                	mov    %edx,%eax
    6451:	48 83 c0 0b          	add    $0xb,%rax
    6455:	48 c1 e0 05          	shl    $0x5,%rax
    6459:	4c 01 e0             	add    %r12,%rax
    645c:	44 0f b7 28          	movzwl (%rax),%r13d
    6460:	66 41 83 fd 0e       	cmp    $0xe,%r13w
    6465:	75 d9                	jne    6440 <do_add_thread+0x60>
    6467:	8d 42 0b             	lea    0xb(%rdx),%eax
    646a:	48 c1 e0 05          	shl    $0x5,%rax
    646e:	4c 01 e0             	add    %r12,%rax
    6471:	74 13                	je     6486 <do_add_thread+0xa6>
    6473:	4c 8b 34 24          	mov    (%rsp),%r14
    6477:	48 8b 40 08          	mov    0x8(%rax),%rax
    647b:	49 01 ee             	add    %rbp,%r14
    647e:	4c 01 f0             	add    %r14,%rax
    6481:	48 39 d8             	cmp    %rbx,%rax
    6484:	74 4e                	je     64d4 <do_add_thread+0xf4>
    6486:	b8 01 00 00 00       	mov    $0x1,%eax
    648b:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    6490:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    6497:	00 00 
    6499:	0f 85 f9 00 00 00    	jne    6598 <do_add_thread+0x1b8>
    649f:	48 83 c4 10          	add    $0x10,%rsp
    64a3:	5b                   	pop    %rbx
    64a4:	5d                   	pop    %rbp
    64a5:	41 5c                	pop    %r12
    64a7:	41 5d                	pop    %r13
    64a9:	41 5e                	pop    %r14
    64ab:	c3                   	ret    
    64ac:	0f 1f 40 00          	nopl   0x0(%rax)
    64b0:	8d 42 0b             	lea    0xb(%rdx),%eax
    64b3:	48 c1 e0 05          	shl    $0x5,%rax
    64b7:	4c 01 e0             	add    %r12,%rax
    64ba:	74 0d                	je     64c9 <do_add_thread+0xe9>
    64bc:	0f b7 50 02          	movzwl 0x2(%rax),%edx
    64c0:	83 e2 20             	and    $0x20,%edx
    64c3:	0f 85 af 00 00 00    	jne    6578 <do_add_thread+0x198>
    64c9:	41 83 c5 01          	add    $0x1,%r13d
    64cd:	66 41 83 fd 13       	cmp    $0x13,%r13w
    64d2:	74 3c                	je     6510 <do_add_thread+0x130>
    64d4:	41 8b 84 24 58 01 00 	mov    0x158(%r12),%eax
    64db:	00 
    64dc:	31 d2                	xor    %edx,%edx
    64de:	85 c0                	test   %eax,%eax
    64e0:	75 15                	jne    64f7 <do_add_thread+0x117>
    64e2:	eb e5                	jmp    64c9 <do_add_thread+0xe9>
    64e4:	0f 1f 40 00          	nopl   0x0(%rax)
    64e8:	41 8b 84 24 58 01 00 	mov    0x158(%r12),%eax
    64ef:	00 
    64f0:	83 c2 01             	add    $0x1,%edx
    64f3:	39 c2                	cmp    %eax,%edx
    64f5:	73 d2                	jae    64c9 <do_add_thread+0xe9>
    64f7:	89 d0                	mov    %edx,%eax
    64f9:	48 83 c0 0b          	add    $0xb,%rax
    64fd:	48 c1 e0 05          	shl    $0x5,%rax
    6501:	4c 01 e0             	add    %r12,%rax
    6504:	0f b7 00             	movzwl (%rax),%eax
    6507:	66 44 39 e8          	cmp    %r13w,%ax
    650b:	75 db                	jne    64e8 <do_add_thread+0x108>
    650d:	eb a1                	jmp    64b0 <do_add_thread+0xd0>
    650f:	90                   	nop
    6510:	ba 48 00 00 00       	mov    $0x48,%edx
    6515:	49 8d b4 24 10 01 00 	lea    0x110(%r12),%rsi
    651c:	00 
    651d:	48 89 df             	mov    %rbx,%rdi
    6520:	e8 4b a2 00 00       	call   10770 <memcpy>
    6525:	f3 0f 6f 4b 30       	movdqu 0x30(%rbx),%xmm1
    652a:	48 89 d8             	mov    %rbx,%rax
    652d:	48 89 df             	mov    %rbx,%rdi
    6530:	66 48 0f 6e c3       	movq   %rbx,%xmm0
    6535:	48 29 e8             	sub    %rbp,%rax
    6538:	48 01 43 10          	add    %rax,0x10(%rbx)
    653c:	ba 00 01 00 00       	mov    $0x100,%edx
    6541:	66 0f 6c c0          	punpcklqdq %xmm0,%xmm0
    6545:	be 00 10 00 00       	mov    $0x1000,%esi
    654a:	66 0f d4 c8          	paddq  %xmm0,%xmm1
    654e:	66 48 0f 6e c5       	movq   %rbp,%xmm0
    6553:	66 0f 6c c0          	punpcklqdq %xmm0,%xmm0
    6557:	66 0f fb c8          	psubq  %xmm0,%xmm1
    655b:	0f 11 4b 30          	movups %xmm1,0x30(%rbx)
    655f:	e8 3c 55 00 00       	call   baa0 <mm_modify_type>
    6564:	85 c0                	test   %eax,%eax
    6566:	0f 95 c0             	setne  %al
    6569:	0f b6 c0             	movzbl %al,%eax
    656c:	e9 1a ff ff ff       	jmp    648b <do_add_thread+0xab>
    6571:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6578:	8b 70 04             	mov    0x4(%rax),%esi
    657b:	48 8b 78 08          	mov    0x8(%rax),%rdi
    657f:	48 c1 e6 0c          	shl    $0xc,%rsi
    6583:	4c 01 f7             	add    %r14,%rdi
    6586:	e8 d5 54 00 00       	call   ba60 <mm_commit>
    658b:	85 c0                	test   %eax,%eax
    658d:	0f 84 36 ff ff ff    	je     64c9 <do_add_thread+0xe9>
    6593:	e9 ee fe ff ff       	jmp    6486 <do_add_thread+0xa6>
    6598:	e8 63 a5 00 00       	call   10b00 <__stack_chk_fail>
    659d:	0f 1f 00             	nopl   (%rax)

00000000000065a0 <sgx_set_ssa_aexnotify>:
    65a0:	f3 0f 1e fa          	endbr64 
    65a4:	55                   	push   %rbp
    65a5:	89 fd                	mov    %edi,%ebp
    65a7:	53                   	push   %rbx
    65a8:	48 83 ec 08          	sub    $0x8,%rsp
    65ac:	e8 92 bb 00 00       	call   12143 <get_thread_data>
    65b1:	48 85 c0             	test   %rax,%rax
    65b4:	74 3a                	je     65f0 <sgx_set_ssa_aexnotify+0x50>
    65b6:	48 89 c3             	mov    %rax,%rbx
    65b9:	e8 12 af 00 00       	call   114d0 <sgx_self_report>
    65be:	f6 40 31 04          	testb  $0x4,0x31(%rax)
    65c2:	74 2c                	je     65f0 <sgx_set_ssa_aexnotify+0x50>
    65c4:	48 8b 53 20          	mov    0x20(%rbx),%rdx
    65c8:	0f b6 82 a7 00 00 00 	movzbl 0xa7(%rdx),%eax
    65cf:	89 c1                	mov    %eax,%ecx
    65d1:	83 c8 01             	or     $0x1,%eax
    65d4:	83 e1 fe             	and    $0xfffffffe,%ecx
    65d7:	85 ed                	test   %ebp,%ebp
    65d9:	0f 44 c1             	cmove  %ecx,%eax
    65dc:	88 82 a7 00 00 00    	mov    %al,0xa7(%rdx)
    65e2:	48 83 c4 08          	add    $0x8,%rsp
    65e6:	31 c0                	xor    %eax,%eax
    65e8:	5b                   	pop    %rbx
    65e9:	5d                   	pop    %rbp
    65ea:	c3                   	ret    
    65eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    65f0:	48 83 c4 08          	add    $0x8,%rsp
    65f4:	b8 01 00 00 00       	mov    $0x1,%eax
    65f9:	5b                   	pop    %rbx
    65fa:	5d                   	pop    %rbp
    65fb:	c3                   	ret    
    65fc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000006600 <sgx_register_aex_handler>:
    6600:	f3 0f 1e fa          	endbr64 
    6604:	48 85 ff             	test   %rdi,%rdi
    6607:	0f 84 bb 00 00 00    	je     66c8 <sgx_register_aex_handler+0xc8>
    660d:	41 55                	push   %r13
    660f:	b8 02 00 00 00       	mov    $0x2,%eax
    6614:	41 54                	push   %r12
    6616:	49 89 f4             	mov    %rsi,%r12
    6619:	55                   	push   %rbp
    661a:	53                   	push   %rbx
    661b:	48 83 ec 08          	sub    $0x8,%rsp
    661f:	48 85 f6             	test   %rsi,%rsi
    6622:	74 2a                	je     664e <sgx_register_aex_handler+0x4e>
    6624:	48 89 fb             	mov    %rdi,%rbx
    6627:	48 89 d5             	mov    %rdx,%rbp
    662a:	e8 f1 11 00 00       	call   7820 <get_ssa_aexnotify>
    662f:	85 c0                	test   %eax,%eax
    6631:	75 2d                	jne    6660 <sgx_register_aex_handler+0x60>
    6633:	e8 0b bb 00 00       	call   12143 <get_thread_data>
    6638:	66 48 0f 6e c5       	movq   %rbp,%xmm0
    663d:	0f 16 40 48          	movhps 0x48(%rax),%xmm0
    6641:	4c 89 23             	mov    %r12,(%rbx)
    6644:	0f 11 43 08          	movups %xmm0,0x8(%rbx)
    6648:	48 89 58 48          	mov    %rbx,0x48(%rax)
    664c:	31 c0                	xor    %eax,%eax
    664e:	48 83 c4 08          	add    $0x8,%rsp
    6652:	5b                   	pop    %rbx
    6653:	5d                   	pop    %rbp
    6654:	41 5c                	pop    %r12
    6656:	41 5d                	pop    %r13
    6658:	c3                   	ret    
    6659:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6660:	e8 de ba 00 00       	call   12143 <get_thread_data>
    6665:	49 89 c5             	mov    %rax,%r13
    6668:	48 85 c0             	test   %rax,%rax
    666b:	74 16                	je     6683 <sgx_register_aex_handler+0x83>
    666d:	e8 5e ae 00 00       	call   114d0 <sgx_self_report>
    6672:	f6 40 31 04          	testb  $0x4,0x31(%rax)
    6676:	74 0b                	je     6683 <sgx_register_aex_handler+0x83>
    6678:	49 8b 45 20          	mov    0x20(%r13),%rax
    667c:	80 a0 a7 00 00 00 fe 	andb   $0xfe,0xa7(%rax)
    6683:	e8 bb ba 00 00       	call   12143 <get_thread_data>
    6688:	66 48 0f 6e c5       	movq   %rbp,%xmm0
    668d:	0f 16 40 48          	movhps 0x48(%rax),%xmm0
    6691:	4c 89 23             	mov    %r12,(%rbx)
    6694:	0f 11 43 08          	movups %xmm0,0x8(%rbx)
    6698:	48 89 58 48          	mov    %rbx,0x48(%rax)
    669c:	e8 a2 ba 00 00       	call   12143 <get_thread_data>
    66a1:	48 89 c3             	mov    %rax,%rbx
    66a4:	48 85 c0             	test   %rax,%rax
    66a7:	74 a3                	je     664c <sgx_register_aex_handler+0x4c>
    66a9:	e8 22 ae 00 00       	call   114d0 <sgx_self_report>
    66ae:	f6 40 31 04          	testb  $0x4,0x31(%rax)
    66b2:	74 98                	je     664c <sgx_register_aex_handler+0x4c>
    66b4:	48 8b 43 20          	mov    0x20(%rbx),%rax
    66b8:	80 88 a7 00 00 00 01 	orb    $0x1,0xa7(%rax)
    66bf:	31 c0                	xor    %eax,%eax
    66c1:	eb 8b                	jmp    664e <sgx_register_aex_handler+0x4e>
    66c3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    66c8:	b8 02 00 00 00       	mov    $0x2,%eax
    66cd:	c3                   	ret    
    66ce:	66 90                	xchg   %ax,%ax

00000000000066d0 <sgx_unregister_aex_handler>:
    66d0:	f3 0f 1e fa          	endbr64 
    66d4:	41 54                	push   %r12
    66d6:	55                   	push   %rbp
    66d7:	53                   	push   %rbx
    66d8:	48 85 ff             	test   %rdi,%rdi
    66db:	0f 84 e7 00 00 00    	je     67c8 <sgx_unregister_aex_handler+0xf8>
    66e1:	48 89 fd             	mov    %rdi,%rbp
    66e4:	e8 37 11 00 00       	call   7820 <get_ssa_aexnotify>
    66e9:	89 c3                	mov    %eax,%ebx
    66eb:	85 c0                	test   %eax,%eax
    66ed:	75 61                	jne    6750 <sgx_unregister_aex_handler+0x80>
    66ef:	e8 4f ba 00 00       	call   12143 <get_thread_data>
    66f4:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    66fa:	48 8b 50 48          	mov    0x48(%rax),%rdx
    66fe:	48 85 d2             	test   %rdx,%rdx
    6701:	74 3d                	je     6740 <sgx_unregister_aex_handler+0x70>
    6703:	31 f6                	xor    %esi,%esi
    6705:	eb 1c                	jmp    6723 <sgx_unregister_aex_handler+0x53>
    6707:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    670e:	00 00 
    6710:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
    6714:	48 89 d6             	mov    %rdx,%rsi
    6717:	48 85 c9             	test   %rcx,%rcx
    671a:	0f 84 98 00 00 00    	je     67b8 <sgx_unregister_aex_handler+0xe8>
    6720:	48 89 ca             	mov    %rcx,%rdx
    6723:	48 39 2a             	cmp    %rbp,(%rdx)
    6726:	75 e8                	jne    6710 <sgx_unregister_aex_handler+0x40>
    6728:	48 8b 52 10          	mov    0x10(%rdx),%rdx
    672c:	48 85 f6             	test   %rsi,%rsi
    672f:	0f 84 ab 00 00 00    	je     67e0 <sgx_unregister_aex_handler+0x110>
    6735:	48 89 56 10          	mov    %rdx,0x10(%rsi)
    6739:	45 31 e4             	xor    %r12d,%r12d
    673c:	85 db                	test   %ebx,%ebx
    673e:	75 48                	jne    6788 <sgx_unregister_aex_handler+0xb8>
    6740:	44 89 e0             	mov    %r12d,%eax
    6743:	5b                   	pop    %rbx
    6744:	5d                   	pop    %rbp
    6745:	41 5c                	pop    %r12
    6747:	c3                   	ret    
    6748:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    674f:	00 
    6750:	e8 ee b9 00 00       	call   12143 <get_thread_data>
    6755:	49 89 c4             	mov    %rax,%r12
    6758:	48 85 c0             	test   %rax,%rax
    675b:	74 17                	je     6774 <sgx_unregister_aex_handler+0xa4>
    675d:	e8 6e ad 00 00       	call   114d0 <sgx_self_report>
    6762:	f6 40 31 04          	testb  $0x4,0x31(%rax)
    6766:	74 0c                	je     6774 <sgx_unregister_aex_handler+0xa4>
    6768:	49 8b 44 24 20       	mov    0x20(%r12),%rax
    676d:	80 a0 a7 00 00 00 fe 	andb   $0xfe,0xa7(%rax)
    6774:	e8 ca b9 00 00       	call   12143 <get_thread_data>
    6779:	48 8b 50 48          	mov    0x48(%rax),%rdx
    677d:	48 85 d2             	test   %rdx,%rdx
    6780:	75 81                	jne    6703 <sgx_unregister_aex_handler+0x33>
    6782:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    6788:	e8 b6 b9 00 00       	call   12143 <get_thread_data>
    678d:	48 89 c3             	mov    %rax,%rbx
    6790:	48 85 c0             	test   %rax,%rax
    6793:	74 ab                	je     6740 <sgx_unregister_aex_handler+0x70>
    6795:	e8 36 ad 00 00       	call   114d0 <sgx_self_report>
    679a:	f6 40 31 04          	testb  $0x4,0x31(%rax)
    679e:	74 a0                	je     6740 <sgx_unregister_aex_handler+0x70>
    67a0:	48 8b 43 20          	mov    0x20(%rbx),%rax
    67a4:	80 88 a7 00 00 00 01 	orb    $0x1,0xa7(%rax)
    67ab:	44 89 e0             	mov    %r12d,%eax
    67ae:	5b                   	pop    %rbx
    67af:	5d                   	pop    %rbp
    67b0:	41 5c                	pop    %r12
    67b2:	c3                   	ret    
    67b3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    67b8:	41 bc 02 00 00 00    	mov    $0x2,%r12d
    67be:	e9 79 ff ff ff       	jmp    673c <sgx_unregister_aex_handler+0x6c>
    67c3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    67c8:	41 bc 02 00 00 00    	mov    $0x2,%r12d
    67ce:	5b                   	pop    %rbx
    67cf:	5d                   	pop    %rbp
    67d0:	44 89 e0             	mov    %r12d,%eax
    67d3:	41 5c                	pop    %r12
    67d5:	c3                   	ret    
    67d6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    67dd:	00 00 00 
    67e0:	48 89 50 48          	mov    %rdx,0x48(%rax)
    67e4:	e9 50 ff ff ff       	jmp    6739 <sgx_unregister_aex_handler+0x69>
    67e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000067f0 <sgx_apply_mitigations>:
    67f0:	f3 0f 1e fa          	endbr64 
    67f4:	55                   	push   %rbp
    67f5:	48 89 fd             	mov    %rdi,%rbp
    67f8:	53                   	push   %rbx
    67f9:	48 83 ec 08          	sub    $0x8,%rsp
    67fd:	e8 41 b9 00 00       	call   12143 <get_thread_data>
    6802:	48 8b 58 48          	mov    0x48(%rax),%rbx
    6806:	48 85 db             	test   %rbx,%rbx
    6809:	74 17                	je     6822 <sgx_apply_mitigations+0x32>
    680b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6810:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    6814:	48 89 ef             	mov    %rbp,%rdi
    6817:	ff 13                	call   *(%rbx)
    6819:	48 8b 5b 10          	mov    0x10(%rbx),%rbx
    681d:	48 85 db             	test   %rbx,%rbx
    6820:	75 ee                	jne    6810 <sgx_apply_mitigations+0x20>
    6822:	48 83 c4 08          	add    $0x8,%rsp
    6826:	31 c0                	xor    %eax,%eax
    6828:	5b                   	pop    %rbx
    6829:	5d                   	pop    %rbp
    682a:	c3                   	ret    
    682b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000006830 <_pthread_thread_run>:
    6830:	f3 0f 1e fa          	endbr64 
    6834:	31 c0                	xor    %eax,%eax
    6836:	c3                   	ret    
    6837:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    683e:	00 00 

0000000000006840 <_ZL11do_save_tcsPv>:
    6840:	55                   	push   %rbp
    6841:	53                   	push   %rbx
    6842:	48 89 fb             	mov    %rdi,%rbx
    6845:	48 83 ec 18          	sub    $0x18,%rsp
    6849:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    6850:	00 00 
    6852:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    6857:	31 c0                	xor    %eax,%eax
    6859:	48 83 3d 17 39 01 00 	cmpq   $0x0,0x13917(%rip)        # 1a178 <_ZL12g_tcs_cookie>
    6860:	00 
    6861:	74 4d                	je     68b0 <_ZL11do_save_tcsPv+0x70>
    6863:	bf 10 00 00 00       	mov    $0x10,%edi
    6868:	e8 63 69 00 00       	call   d1d0 <dlmalloc>
    686d:	48 85 c0             	test   %rax,%rax
    6870:	74 68                	je     68da <_ZL11do_save_tcsPv+0x9a>
    6872:	48 8b 15 07 39 01 00 	mov    0x13907(%rip),%rdx        # 1a180 <_ZL10g_tcs_node>
    6879:	48 33 1d f8 38 01 00 	xor    0x138f8(%rip),%rbx        # 1a178 <_ZL12g_tcs_cookie>
    6880:	48 89 05 f9 38 01 00 	mov    %rax,0x138f9(%rip)        # 1a180 <_ZL10g_tcs_node>
    6887:	48 89 18             	mov    %rbx,(%rax)
    688a:	48 89 50 08          	mov    %rdx,0x8(%rax)
    688e:	31 c0                	xor    %eax,%eax
    6890:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    6895:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    689c:	00 00 
    689e:	75 62                	jne    6902 <_ZL11do_save_tcsPv+0xc2>
    68a0:	48 83 c4 18          	add    $0x18,%rsp
    68a4:	5b                   	pop    %rbx
    68a5:	5d                   	pop    %rbp
    68a6:	c3                   	ret    
    68a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    68ae:	00 00 
    68b0:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    68b7:	00 
    68b8:	48 89 e5             	mov    %rsp,%rbp
    68bb:	eb 0c                	jmp    68c9 <_ZL11do_save_tcsPv+0x89>
    68bd:	0f 1f 00             	nopl   (%rax)
    68c0:	48 8b 04 24          	mov    (%rsp),%rax
    68c4:	48 85 c0             	test   %rax,%rax
    68c7:	75 1f                	jne    68e8 <_ZL11do_save_tcsPv+0xa8>
    68c9:	be 08 00 00 00       	mov    $0x8,%esi
    68ce:	48 89 ef             	mov    %rbp,%rdi
    68d1:	e8 2a f5 ff ff       	call   5e00 <sgx_read_rand>
    68d6:	85 c0                	test   %eax,%eax
    68d8:	74 e6                	je     68c0 <_ZL11do_save_tcsPv+0x80>
    68da:	b8 01 00 00 00       	mov    $0x1,%eax
    68df:	eb af                	jmp    6890 <_ZL11do_save_tcsPv+0x50>
    68e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    68e8:	48 83 3d 88 38 01 00 	cmpq   $0x0,0x13888(%rip)        # 1a178 <_ZL12g_tcs_cookie>
    68ef:	00 
    68f0:	0f 85 6d ff ff ff    	jne    6863 <_ZL11do_save_tcsPv+0x23>
    68f6:	48 89 05 7b 38 01 00 	mov    %rax,0x1387b(%rip)        # 1a178 <_ZL12g_tcs_cookie>
    68fd:	e9 61 ff ff ff       	jmp    6863 <_ZL11do_save_tcsPv+0x23>
    6902:	e8 f9 a1 00 00       	call   10b00 <__stack_chk_fail>
    6907:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    690e:	00 00 

0000000000006910 <_ZL18add_static_threadsPVK9_layout_tS1_m>:
    6910:	48 39 f7             	cmp    %rsi,%rdi
    6913:	0f 83 cf 00 00 00    	jae    69e8 <_ZL18add_static_threadsPVK9_layout_tS1_m+0xd8>
    6919:	41 56                	push   %r14
    691b:	41 55                	push   %r13
    691d:	49 89 f5             	mov    %rsi,%r13
    6920:	41 54                	push   %r12
    6922:	49 89 d4             	mov    %rdx,%r12
    6925:	55                   	push   %rbp
    6926:	53                   	push   %rbx
    6927:	48 89 fb             	mov    %rdi,%rbx
    692a:	eb 0d                	jmp    6939 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x29>
    692c:	0f 1f 40 00          	nopl   0x0(%rax)
    6930:	48 83 c3 20          	add    $0x20,%rbx
    6934:	4c 39 eb             	cmp    %r13,%rbx
    6937:	73 77                	jae    69b0 <_ZL18add_static_threadsPVK9_layout_tS1_m+0xa0>
    6939:	0f b7 03             	movzwl (%rbx),%eax
    693c:	f6 c4 10             	test   $0x10,%ah
    693f:	75 13                	jne    6954 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x44>
    6941:	48 8b 43 18          	mov    0x18(%rbx),%rax
    6945:	f6 c4 01             	test   $0x1,%ah
    6948:	74 0a                	je     6954 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x44>
    694a:	0f b7 43 02          	movzwl 0x2(%rbx),%eax
    694e:	66 83 f8 03          	cmp    $0x3,%ax
    6952:	74 6c                	je     69c0 <_ZL18add_static_threadsPVK9_layout_tS1_m+0xb0>
    6954:	0f b7 03             	movzwl (%rbx),%eax
    6957:	f6 c4 10             	test   $0x10,%ah
    695a:	74 d4                	je     6930 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x20>
    695c:	8b 43 04             	mov    0x4(%rbx),%eax
    695f:	85 c0                	test   %eax,%eax
    6961:	74 cd                	je     6930 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x20>
    6963:	31 ed                	xor    %ebp,%ebp
    6965:	45 31 f6             	xor    %r14d,%r14d
    6968:	eb 10                	jmp    697a <_ZL18add_static_threadsPVK9_layout_tS1_m+0x6a>
    696a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6970:	8b 43 04             	mov    0x4(%rbx),%eax
    6973:	83 c5 01             	add    $0x1,%ebp
    6976:	39 c5                	cmp    %eax,%ebp
    6978:	73 b6                	jae    6930 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x20>
    697a:	48 8b 43 08          	mov    0x8(%rbx),%rax
    697e:	0f b7 7b 02          	movzwl 0x2(%rbx),%edi
    6982:	48 89 de             	mov    %rbx,%rsi
    6985:	f7 df                	neg    %edi
    6987:	49 01 c6             	add    %rax,%r14
    698a:	48 63 ff             	movslq %edi,%rdi
    698d:	4c 89 f2             	mov    %r14,%rdx
    6990:	48 c1 e7 05          	shl    $0x5,%rdi
    6994:	48 01 df             	add    %rbx,%rdi
    6997:	e8 74 ff ff ff       	call   6910 <_ZL18add_static_threadsPVK9_layout_tS1_m>
    699c:	85 c0                	test   %eax,%eax
    699e:	74 d0                	je     6970 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x60>
    69a0:	5b                   	pop    %rbx
    69a1:	5d                   	pop    %rbp
    69a2:	41 5c                	pop    %r12
    69a4:	41 5d                	pop    %r13
    69a6:	41 5e                	pop    %r14
    69a8:	c3                   	ret    
    69a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    69b0:	5b                   	pop    %rbx
    69b1:	31 c0                	xor    %eax,%eax
    69b3:	5d                   	pop    %rbp
    69b4:	41 5c                	pop    %r12
    69b6:	41 5d                	pop    %r13
    69b8:	41 5e                	pop    %r14
    69ba:	c3                   	ret    
    69bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    69c0:	48 8b 6b 08          	mov    0x8(%rbx),%rbp
    69c4:	e8 2f b7 00 00       	call   120f8 <get_enclave_base>
    69c9:	4c 01 e5             	add    %r12,%rbp
    69cc:	48 8d 3c 28          	lea    (%rax,%rbp,1),%rdi
    69d0:	e8 6b fe ff ff       	call   6840 <_ZL11do_save_tcsPv>
    69d5:	85 c0                	test   %eax,%eax
    69d7:	0f 84 53 ff ff ff    	je     6930 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x20>
    69dd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    69e2:	eb bc                	jmp    69a0 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x90>
    69e4:	0f 1f 40 00          	nopl   0x0(%rax)
    69e8:	31 c0                	xor    %eax,%eax
    69ea:	c3                   	ret    
    69eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000069f0 <_ZL10trts_ecalljPv>:
    69f0:	f3 0f 1e fa          	endbr64 
    69f4:	41 55                	push   %r13
    69f6:	41 54                	push   %r12
    69f8:	55                   	push   %rbp
    69f9:	48 89 f5             	mov    %rsi,%rbp
    69fc:	53                   	push   %rbx
    69fd:	89 fb                	mov    %edi,%ebx
    69ff:	48 83 ec 08          	sub    $0x8,%rsp
    6a03:	0f b6 05 16 18 01 00 	movzbl 0x11816(%rip),%eax        # 18220 <_ZL16g_is_first_ecall>
    6a0a:	84 c0                	test   %al,%al
    6a0c:	0f 85 b6 00 00 00    	jne    6ac8 <_ZL10trts_ecalljPv+0xd8>
    6a12:	83 fb fa             	cmp    $0xfffffffa,%ebx
    6a15:	0f 84 8d 00 00 00    	je     6aa8 <_ZL10trts_ecalljPv+0xb8>
    6a1b:	4c 8d 25 9e 13 01 00 	lea    0x1139e(%rip),%r12        # 17dc0 <g_ecall_table>
    6a22:	49 3b 1c 24          	cmp    (%r12),%rbx
    6a26:	73 68                	jae    6a90 <_ZL10trts_ecalljPv+0xa0>
    6a28:	e8 16 b7 00 00       	call   12143 <get_thread_data>
    6a2d:	0f ae e8             	lfence 
    6a30:	48 8b 50 08          	mov    0x8(%rax),%rdx
    6a34:	48 3b 50 10          	cmp    0x10(%rax),%rdx
    6a38:	0f 84 b2 00 00 00    	je     6af0 <_ZL10trts_ecalljPv+0x100>
    6a3e:	48 81 7a 20 44 49 43 	cmpq   $0x4f434944,0x20(%rdx)
    6a45:	4f 
    6a46:	0f 85 5b 01 00 00    	jne    6ba7 <_ZL10trts_ecalljPv+0x1b7>
    6a4c:	48 8d 05 dd c5 00 00 	lea    0xc5dd(%rip),%rax        # 13030 <g_dyn_entry_table>
    6a53:	48 8b 52 28          	mov    0x28(%rdx),%rdx
    6a57:	48 3b 10             	cmp    (%rax),%rdx
    6a5a:	73 34                	jae    6a90 <_ZL10trts_ecalljPv+0xa0>
    6a5c:	49 0f af 14 24       	imul   (%r12),%rdx
    6a61:	48 01 d8             	add    %rbx,%rax
    6a64:	80 7c 02 08 00       	cmpb   $0x0,0x8(%rdx,%rax,1)
    6a69:	74 6c                	je     6ad7 <_ZL10trts_ecalljPv+0xe7>
    6a6b:	48 c1 e3 04          	shl    $0x4,%rbx
    6a6f:	31 f6                	xor    %esi,%esi
    6a71:	49 8b 5c 1c 08       	mov    0x8(%r12,%rbx,1),%rbx
    6a76:	48 89 df             	mov    %rbx,%rdi
    6a79:	e8 82 f1 ff ff       	call   5c00 <sgx_is_within_enclave>
    6a7e:	85 c0                	test   %eax,%eax
    6a80:	0f 84 8a 00 00 00    	je     6b10 <_ZL10trts_ecalljPv+0x120>
    6a86:	48 89 d8             	mov    %rbx,%rax
    6a89:	eb 24                	jmp    6aaf <_ZL10trts_ecalljPv+0xbf>
    6a8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6a90:	41 bc 01 10 00 00    	mov    $0x1001,%r12d
    6a96:	48 83 c4 08          	add    $0x8,%rsp
    6a9a:	44 89 e0             	mov    %r12d,%eax
    6a9d:	5b                   	pop    %rbx
    6a9e:	5d                   	pop    %rbp
    6a9f:	41 5c                	pop    %r12
    6aa1:	41 5d                	pop    %r13
    6aa3:	c3                   	ret    
    6aa4:	0f 1f 40 00          	nopl   0x0(%rax)
    6aa8:	48 8d 05 81 fd ff ff 	lea    -0x27f(%rip),%rax        # 6830 <_pthread_thread_run>
    6aaf:	0f ae e8             	lfence 
    6ab2:	48 83 c4 08          	add    $0x8,%rsp
    6ab6:	48 89 ef             	mov    %rbp,%rdi
    6ab9:	5b                   	pop    %rbx
    6aba:	5d                   	pop    %rbp
    6abb:	41 5c                	pop    %r12
    6abd:	41 5d                	pop    %r13
    6abf:	ff e0                	jmp    *%rax
    6ac1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6ac8:	e8 76 b6 00 00       	call   12143 <get_thread_data>
    6acd:	48 8b 48 10          	mov    0x10(%rax),%rcx
    6ad1:	48 39 48 08          	cmp    %rcx,0x8(%rax)
    6ad5:	74 49                	je     6b20 <_ZL10trts_ecalljPv+0x130>
    6ad7:	48 83 c4 08          	add    $0x8,%rsp
    6adb:	41 bc 07 10 00 00    	mov    $0x1007,%r12d
    6ae1:	5b                   	pop    %rbx
    6ae2:	44 89 e0             	mov    %r12d,%eax
    6ae5:	5d                   	pop    %rbp
    6ae6:	41 5c                	pop    %r12
    6ae8:	41 5d                	pop    %r13
    6aea:	c3                   	ret    
    6aeb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6af0:	48 89 d8             	mov    %rbx,%rax
    6af3:	48 c1 e0 04          	shl    $0x4,%rax
    6af7:	41 80 7c 04 10 00    	cmpb   $0x0,0x10(%r12,%rax,1)
    6afd:	0f 84 68 ff ff ff    	je     6a6b <_ZL10trts_ecalljPv+0x7b>
    6b03:	eb d2                	jmp    6ad7 <_ZL10trts_ecalljPv+0xe7>
    6b05:	4c 89 ef             	mov    %r13,%rdi
    6b08:	e8 93 5d 00 00       	call   c8a0 <sgx_spin_unlock>
    6b0d:	0f 1f 00             	nopl   (%rax)
    6b10:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    6b16:	e9 7b ff ff ff       	jmp    6a96 <_ZL10trts_ecalljPv+0xa6>
    6b1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6b20:	4c 8d 2d 4d 36 01 00 	lea    0x1364d(%rip),%r13        # 1a174 <_ZL10g_ife_lock>
    6b27:	4c 89 ef             	mov    %r13,%rdi
    6b2a:	e8 e1 5c 00 00       	call   c810 <sgx_spin_lock>
    6b2f:	0f b6 05 ea 16 01 00 	movzbl 0x116ea(%rip),%eax        # 18220 <_ZL16g_is_first_ecall>
    6b36:	84 c0                	test   %al,%al
    6b38:	74 53                	je     6b8d <_ZL10trts_ecalljPv+0x19d>
    6b3a:	48 8d 05 eb 12 01 00 	lea    0x112eb(%rip),%rax        # 17e2c <EDMM_supported>
    6b41:	8b 00                	mov    (%rax),%eax
    6b43:	85 c0                	test   %eax,%eax
    6b45:	74 3a                	je     6b81 <_ZL10trts_ecalljPv+0x191>
    6b47:	48 8d 05 32 c6 00 00 	lea    0xc632(%rip),%rax        # 13180 <g_global_data>
    6b4e:	31 d2                	xor    %edx,%edx
    6b50:	8b b0 58 01 00 00    	mov    0x158(%rax),%esi
    6b56:	48 8d b8 60 01 00 00 	lea    0x160(%rax),%rdi
    6b5d:	48 c1 e6 05          	shl    $0x5,%rsi
    6b61:	48 01 fe             	add    %rdi,%rsi
    6b64:	e8 a7 fd ff ff       	call   6910 <_ZL18add_static_threadsPVK9_layout_tS1_m>
    6b69:	85 c0                	test   %eax,%eax
    6b6b:	75 98                	jne    6b05 <_ZL10trts_ecalljPv+0x115>
    6b6d:	e8 86 b5 00 00       	call   120f8 <get_enclave_base>
    6b72:	48 89 c7             	mov    %rax,%rdi
    6b75:	e8 a6 1d 00 00       	call   8920 <change_protection>
    6b7a:	41 89 c4             	mov    %eax,%r12d
    6b7d:	85 c0                	test   %eax,%eax
    6b7f:	75 19                	jne    6b9a <_ZL10trts_ecalljPv+0x1aa>
    6b81:	e8 ca 21 00 00       	call   8d50 <init_global_object>
    6b86:	c6 05 93 16 01 00 00 	movb   $0x0,0x11693(%rip)        # 18220 <_ZL16g_is_first_ecall>
    6b8d:	4c 89 ef             	mov    %r13,%rdi
    6b90:	e8 0b 5d 00 00       	call   c8a0 <sgx_spin_unlock>
    6b95:	e9 78 fe ff ff       	jmp    6a12 <_ZL10trts_ecalljPv+0x22>
    6b9a:	4c 89 ef             	mov    %r13,%rdi
    6b9d:	e8 fe 5c 00 00       	call   c8a0 <sgx_spin_unlock>
    6ba2:	e9 ef fe ff ff       	jmp    6a96 <_ZL10trts_ecalljPv+0xa6>
    6ba7:	e8 8b b9 00 00       	call   12537 <abort>
    6bac:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000006bb0 <_Z30_random_stack_noinline_wrapperI9_status_tJjPvEJRiRS1_EET_PFS4_DpT0_EDpOT1_.constprop.0.isra.0>:
    6bb0:	e9 3b fe ff ff       	jmp    69f0 <_ZL10trts_ecalljPv>
    6bb5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6bbc:	00 00 00 
    6bbf:	90                   	nop

0000000000006bc0 <_Z16_pthread_enabledv>:
    6bc0:	f3 0f 1e fa          	endbr64 
    6bc4:	31 c0                	xor    %eax,%eax
    6bc6:	c3                   	ret    
    6bc7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    6bce:	00 00 

0000000000006bd0 <_Z24_pthread_tls_store_state9_status_t>:
    6bd0:	f3 0f 1e fa          	endbr64 
    6bd4:	c3                   	ret    
    6bd5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6bdc:	00 00 00 
    6bdf:	90                   	nop

0000000000006be0 <_Z22_pthread_tls_get_statev>:
    6be0:	f3 0f 1e fa          	endbr64 
    6be4:	31 c0                	xor    %eax,%eax
    6be6:	c3                   	ret    
    6be7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    6bee:	00 00 

0000000000006bf0 <_Z26_pthread_tls_store_contextPv>:
    6bf0:	f3 0f 1e fa          	endbr64 
    6bf4:	c3                   	ret    
    6bf5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6bfc:	00 00 00 
    6bff:	90                   	nop

0000000000006c00 <_Z20_pthread_wakeup_joinPv>:
    6c00:	f3 0f 1e fa          	endbr64 
    6c04:	c3                   	ret    
    6c05:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6c0c:	00 00 00 
    6c0f:	90                   	nop

0000000000006c10 <_Z24_pthread_tls_destructorsv>:
    6c10:	f3 0f 1e fa          	endbr64 
    6c14:	c3                   	ret    
    6c15:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6c1c:	00 00 00 
    6c1f:	90                   	nop

0000000000006c20 <tc_set_idle>:
    6c20:	f3 0f 1e fa          	endbr64 
    6c24:	c3                   	ret    
    6c25:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6c2c:	00 00 00 
    6c2f:	90                   	nop

0000000000006c30 <do_init_thread>:
    6c30:	f3 0f 1e fa          	endbr64 
    6c34:	41 57                	push   %r15
    6c36:	66 48 0f 6e d7       	movq   %rdi,%xmm2
    6c3b:	ba c0 00 00 00       	mov    $0xc0,%edx
    6c40:	41 56                	push   %r14
    6c42:	66 0f 6c d2          	punpcklqdq %xmm2,%xmm2
    6c46:	41 55                	push   %r13
    6c48:	41 54                	push   %r12
    6c4a:	41 89 f4             	mov    %esi,%r12d
    6c4d:	55                   	push   %rbp
    6c4e:	48 89 fd             	mov    %rdi,%rbp
    6c51:	53                   	push   %rbx
    6c52:	48 83 ec 38          	sub    $0x38,%rsp
    6c56:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    6c5d:	00 00 
    6c5f:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    6c64:	48 8d 05 15 c5 00 00 	lea    0xc515(%rip),%rax        # 13180 <g_global_data>
    6c6b:	0f 29 14 24          	movaps %xmm2,(%rsp)
    6c6f:	48 8b 58 50          	mov    0x50(%rax),%rbx
    6c73:	48 8d 70 50          	lea    0x50(%rax),%rsi
    6c77:	48 01 fb             	add    %rdi,%rbx
    6c7a:	48 89 df             	mov    %rbx,%rdi
    6c7d:	4c 8b 7b 28          	mov    0x28(%rbx),%r15
    6c81:	4c 8b 73 30          	mov    0x30(%rbx),%r14
    6c85:	4c 8b ab b0 00 00 00 	mov    0xb0(%rbx),%r13
    6c8c:	e8 df 9a 00 00       	call   10770 <memcpy>
    6c91:	48 8d 85 00 fc ff ff 	lea    -0x400(%rbp),%rax
    6c98:	f3 0f 6f 1b          	movdqu (%rbx),%xmm3
    6c9c:	f3 0f 6f 6b 10       	movdqu 0x10(%rbx),%xmm5
    6ca1:	66 48 0f 6e c0       	movq   %rax,%xmm0
    6ca6:	48 8b 43 18          	mov    0x18(%rbx),%rax
    6caa:	f3 0f 6f 73 68       	movdqu 0x68(%rbx),%xmm6
    6caf:	66 48 0f 6e cd       	movq   %rbp,%xmm1
    6cb4:	66 0f 6f 14 24       	movdqa (%rsp),%xmm2
    6cb9:	66 48 0f 6e e5       	movq   %rbp,%xmm4
    6cbe:	66 0f 6c c8          	punpcklqdq %xmm0,%xmm1
    6cc2:	48 01 6b 20          	add    %rbp,0x20(%rbx)
    6cc6:	48 01 e8             	add    %rbp,%rax
    6cc9:	66 0f 6c c4          	punpcklqdq %xmm4,%xmm0
    6ccd:	66 0f d4 cb          	paddq  %xmm3,%xmm1
    6cd1:	48 01 6b 58          	add    %rbp,0x58(%rbx)
    6cd5:	48 89 83 b0 00 00 00 	mov    %rax,0xb0(%rbx)
    6cdc:	48 8d 05 25 11 01 00 	lea    0x11125(%rip),%rax        # 17e08 <__intel_security_cookie>
    6ce3:	66 0f d4 c5          	paddq  %xmm5,%xmm0
    6ce7:	66 0f d4 d6          	paddq  %xmm6,%xmm2
    6ceb:	4c 89 7b 28          	mov    %r15,0x28(%rbx)
    6cef:	48 8b 00             	mov    (%rax),%rax
    6cf2:	4c 89 73 30          	mov    %r14,0x30(%rbx)
    6cf6:	0f 11 53 68          	movups %xmm2,0x68(%rbx)
    6cfa:	0f 11 0b             	movups %xmm1,(%rbx)
    6cfd:	0f 11 43 10          	movups %xmm0,0x10(%rbx)
    6d01:	48 89 85 08 fc fe ff 	mov    %rax,-0x103f8(%rbp)
    6d08:	48 8d 05 1d 11 01 00 	lea    0x1111d(%rip),%rax        # 17e2c <EDMM_supported>
    6d0f:	8b 00                	mov    (%rax),%eax
    6d11:	85 c0                	test   %eax,%eax
    6d13:	48 8d 05 fa 10 01 00 	lea    0x110fa(%rip),%rax        # 17e14 <g_aexnotify_supported>
    6d1a:	0f 85 f0 00 00 00    	jne    6e10 <do_init_thread+0x1e0>
    6d20:	83 38 01             	cmpl   $0x1,(%rax)
    6d23:	0f 84 17 01 00 00    	je     6e40 <do_init_thread+0x210>
    6d29:	4d 85 ed             	test   %r13,%r13
    6d2c:	0f 85 c8 00 00 00    	jne    6dfa <do_init_thread+0x1ca>
    6d32:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6d38:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
    6d3f:	00 00 
    6d41:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    6d48:	00 00 
    6d4a:	e8 a9 b3 00 00       	call   120f8 <get_enclave_base>
    6d4f:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
    6d54:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
    6d59:	48 89 c7             	mov    %rax,%rdi
    6d5c:	e8 3f 19 00 00       	call   86a0 <elf_tls_info>
    6d61:	89 c2                	mov    %eax,%edx
    6d63:	b8 01 00 00 00       	mov    $0x1,%eax
    6d68:	85 d2                	test   %edx,%edx
    6d6a:	75 0a                	jne    6d76 <do_init_thread+0x146>
    6d6c:	48 83 7c 24 18 00    	cmpq   $0x0,0x18(%rsp)
    6d72:	75 2c                	jne    6da0 <do_init_thread+0x170>
    6d74:	31 c0                	xor    %eax,%eax
    6d76:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    6d7b:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    6d82:	00 00 
    6d84:	0f 85 00 01 00 00    	jne    6e8a <do_init_thread+0x25a>
    6d8a:	48 83 c4 38          	add    $0x38,%rsp
    6d8e:	5b                   	pop    %rbx
    6d8f:	5d                   	pop    %rbp
    6d90:	41 5c                	pop    %r12
    6d92:	41 5d                	pop    %r13
    6d94:	41 5e                	pop    %r14
    6d96:	41 5f                	pop    %r15
    6d98:	c3                   	ret    
    6d99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6da0:	48 8b 03             	mov    (%rbx),%rax
    6da3:	48 8b 7b 68          	mov    0x68(%rbx),%rdi
    6da7:	31 f6                	xor    %esi,%esi
    6da9:	48 8d 90 ff 0f 00 00 	lea    0xfff(%rax),%rdx
    6db0:	48 29 fa             	sub    %rdi,%rdx
    6db3:	48 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%rdi
    6dba:	48 81 e2 00 f0 ff ff 	and    $0xfffffffffffff000,%rdx
    6dc1:	e8 ea 9b 00 00       	call   109b0 <memset>
    6dc6:	48 8b 7b 68          	mov    0x68(%rbx),%rdi
    6dca:	48 8b 03             	mov    (%rbx),%rax
    6dcd:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
    6dd2:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    6dd7:	48 29 f8             	sub    %rdi,%rax
    6dda:	48 39 d0             	cmp    %rdx,%rax
    6ddd:	72 95                	jb     6d74 <do_init_thread+0x144>
    6ddf:	e8 8c 99 00 00       	call   10770 <memcpy>
    6de4:	eb 8e                	jmp    6d74 <do_init_thread+0x144>
    6de6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6ded:	00 00 00 
    6df0:	83 f8 01             	cmp    $0x1,%eax
    6df3:	74 7b                	je     6e70 <do_init_thread+0x240>
    6df5:	4d 85 ed             	test   %r13,%r13
    6df8:	74 5e                	je     6e58 <do_init_thread+0x228>
    6dfa:	4c 89 ab b0 00 00 00 	mov    %r13,0xb0(%rbx)
    6e01:	e9 32 ff ff ff       	jmp    6d38 <do_init_thread+0x108>
    6e06:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6e0d:	00 00 00 
    6e10:	8b 00                	mov    (%rax),%eax
    6e12:	45 84 e4             	test   %r12b,%r12b
    6e15:	74 d9                	je     6df0 <do_init_thread+0x1c0>
    6e17:	48 c7 43 30 01 00 00 	movq   $0x1,0x30(%rbx)
    6e1e:	00 
    6e1f:	83 f8 01             	cmp    $0x1,%eax
    6e22:	74 5c                	je     6e80 <do_init_thread+0x250>
    6e24:	4d 85 ed             	test   %r13,%r13
    6e27:	75 d1                	jne    6dfa <do_init_thread+0x1ca>
    6e29:	e8 52 f5 ff ff       	call   6380 <get_dynamic_stack_max_page>
    6e2e:	89 c0                	mov    %eax,%eax
    6e30:	48 c1 e0 0c          	shl    $0xc,%rax
    6e34:	48 01 83 b0 00 00 00 	add    %rax,0xb0(%rbx)
    6e3b:	e9 f8 fe ff ff       	jmp    6d38 <do_init_thread+0x108>
    6e40:	48 c7 43 50 01 00 00 	movq   $0x1,0x50(%rbx)
    6e47:	00 
    6e48:	4d 85 ed             	test   %r13,%r13
    6e4b:	75 ad                	jne    6dfa <do_init_thread+0x1ca>
    6e4d:	e9 e6 fe ff ff       	jmp    6d38 <do_init_thread+0x108>
    6e52:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6e58:	48 89 ef             	mov    %rbp,%rdi
    6e5b:	e8 50 f4 ff ff       	call   62b0 <is_dynamic_thread>
    6e60:	85 c0                	test   %eax,%eax
    6e62:	75 c5                	jne    6e29 <do_init_thread+0x1f9>
    6e64:	e9 cf fe ff ff       	jmp    6d38 <do_init_thread+0x108>
    6e69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6e70:	48 c7 43 50 01 00 00 	movq   $0x1,0x50(%rbx)
    6e77:	00 
    6e78:	e9 78 ff ff ff       	jmp    6df5 <do_init_thread+0x1c5>
    6e7d:	0f 1f 00             	nopl   (%rax)
    6e80:	48 c7 43 50 01 00 00 	movq   $0x1,0x50(%rbx)
    6e87:	00 
    6e88:	eb 9a                	jmp    6e24 <do_init_thread+0x1f4>
    6e8a:	e8 71 9c 00 00       	call   10b00 <__stack_chk_fail>
    6e8f:	90                   	nop

0000000000006e90 <do_ecall>:
    6e90:	f3 0f 1e fa          	endbr64 
    6e94:	53                   	push   %rbx
    6e95:	48 89 d3             	mov    %rdx,%rbx
    6e98:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    6e9c:	89 7c 24 20          	mov    %edi,0x20(%rsp)
    6ea0:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    6ea5:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    6eac:	00 00 
    6eae:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    6eb3:	31 c0                	xor    %eax,%eax
    6eb5:	e8 4a b2 00 00       	call   12104 <get_enclave_state>
    6eba:	89 c2                	mov    %eax,%edx
    6ebc:	b8 01 00 00 00       	mov    $0x1,%eax
    6ec1:	83 fa 02             	cmp    $0x2,%edx
    6ec4:	74 1a                	je     6ee0 <do_ecall+0x50>
    6ec6:	48 8b 54 24 78       	mov    0x78(%rsp),%rdx
    6ecb:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    6ed2:	00 00 
    6ed4:	0f 85 0c 02 00 00    	jne    70e6 <do_ecall+0x256>
    6eda:	48 83 ec 80          	sub    $0xffffffffffffff80,%rsp
    6ede:	5b                   	pop    %rbx
    6edf:	c3                   	ret    
    6ee0:	e8 5e b2 00 00       	call   12143 <get_thread_data>
    6ee5:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    6eea:	48 85 c0             	test   %rax,%rax
    6eed:	0f 84 31 01 00 00    	je     7024 <do_ecall+0x194>
    6ef3:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    6ef8:	48 8b 48 08          	mov    0x8(%rax),%rcx
    6efc:	48 39 48 10          	cmp    %rcx,0x10(%rax)
    6f00:	0f 84 0a 01 00 00    	je     7010 <do_ecall+0x180>
    6f06:	e8 38 b2 00 00       	call   12143 <get_thread_data>
    6f0b:	48 83 78 50 01       	cmpq   $0x1,0x50(%rax)
    6f10:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    6f15:	0f 84 25 01 00 00    	je     7040 <do_ecall+0x1b0>
    6f1b:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    6f20:	48 8b 48 08          	mov    0x8(%rax),%rcx
    6f24:	48 39 48 10          	cmp    %rcx,0x10(%rax)
    6f28:	74 56                	je     6f80 <do_ecall+0xf0>
    6f2a:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    6f2f:	8b 7c 24 20          	mov    0x20(%rsp),%edi
    6f33:	e8 b8 fa ff ff       	call   69f0 <_ZL10trts_ecalljPv>
    6f38:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
    6f3d:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
    6f42:	48 8d 15 37 c2 00 00 	lea    0xc237(%rip),%rdx        # 13180 <g_global_data>
    6f49:	48 8b 52 38          	mov    0x38(%rdx),%rdx
    6f4d:	48 85 d2             	test   %rdx,%rdx
    6f50:	0f 84 70 ff ff ff    	je     6ec6 <do_ecall+0x36>
    6f56:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    6f5b:	48 8b 59 08          	mov    0x8(%rcx),%rbx
    6f5f:	48 39 59 10          	cmp    %rbx,0x10(%rcx)
    6f63:	0f 85 5d ff ff ff    	jne    6ec6 <do_ecall+0x36>
    6f69:	89 44 24 2c          	mov    %eax,0x2c(%rsp)
    6f6d:	e8 ae fc ff ff       	call   6c20 <tc_set_idle>
    6f72:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
    6f76:	e9 4b ff ff ff       	jmp    6ec6 <do_ecall+0x36>
    6f7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6f80:	31 ff                	xor    %edi,%edi
    6f82:	e8 f9 ef ff ff       	call   5f80 <sgx_wrpkru>
    6f87:	e8 34 fc ff ff       	call   6bc0 <_Z16_pthread_enabledv>
    6f8c:	84 c0                	test   %al,%al
    6f8e:	0f 84 0c 01 00 00    	je     70a0 <do_ecall+0x210>
    6f94:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    6f99:	66 0f ef c0          	pxor   %xmm0,%xmm0
    6f9d:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
    6fa2:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
    6fa7:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    6fac:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
    6fb1:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
    6fb6:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
    6fbb:	e8 72 9e 00 00       	call   10e32 <setjmp>
    6fc0:	f3 0f 1e fa          	endbr64 
    6fc4:	85 c0                	test   %eax,%eax
    6fc6:	0f 84 94 00 00 00    	je     7060 <do_ecall+0x1d0>
    6fcc:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    6fd1:	48 8b 41 10          	mov    0x10(%rcx),%rax
    6fd5:	48 89 41 08          	mov    %rax,0x8(%rcx)
    6fd9:	b8 09 00 00 00       	mov    $0x9,%eax
    6fde:	bf 09 00 00 00       	mov    $0x9,%edi
    6fe3:	89 44 24 28          	mov    %eax,0x28(%rsp)
    6fe7:	e8 e4 fb ff ff       	call   6bd0 <_Z24_pthread_tls_store_state9_status_t>
    6fec:	8b 44 24 28          	mov    0x28(%rsp),%eax
    6ff0:	89 44 24 24          	mov    %eax,0x24(%rsp)
    6ff4:	e8 17 fc ff ff       	call   6c10 <_Z24_pthread_tls_destructorsv>
    6ff9:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    6ffe:	e8 fd fb ff ff       	call   6c00 <_Z20_pthread_wakeup_joinPv>
    7003:	8b 44 24 24          	mov    0x24(%rsp),%eax
    7007:	e9 36 ff ff ff       	jmp    6f42 <do_ecall+0xb2>
    700c:	0f 1f 40 00          	nopl   0x0(%rax)
    7010:	48 8d 05 69 c1 00 00 	lea    0xc169(%rip),%rax        # 13180 <g_global_data>
    7017:	48 8b 40 38          	mov    0x38(%rax),%rax
    701b:	48 85 c0             	test   %rax,%rax
    701e:	0f 84 a4 00 00 00    	je     70c8 <do_ecall+0x238>
    7024:	31 f6                	xor    %esi,%esi
    7026:	48 89 df             	mov    %rbx,%rdi
    7029:	e8 02 fc ff ff       	call   6c30 <do_init_thread>
    702e:	85 c0                	test   %eax,%eax
    7030:	0f 84 d0 fe ff ff    	je     6f06 <do_ecall+0x76>
    7036:	e9 8b fe ff ff       	jmp    6ec6 <do_ecall+0x36>
    703b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7040:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    7045:	bf 01 00 00 00       	mov    $0x1,%edi
    704a:	48 c7 40 50 00 00 00 	movq   $0x0,0x50(%rax)
    7051:	00 
    7052:	e8 49 f5 ff ff       	call   65a0 <sgx_set_ssa_aexnotify>
    7057:	e9 bf fe ff ff       	jmp    6f1b <do_ecall+0x8b>
    705c:	0f 1f 40 00          	nopl   0x0(%rax)
    7060:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
    7065:	e8 86 fb ff ff       	call   6bf0 <_Z26_pthread_tls_store_contextPv>
    706a:	0f c7 f0             	rdrand %eax
    706d:	73 fb                	jae    706a <do_ecall+0x1da>
    706f:	8b 5c 24 20          	mov    0x20(%rsp),%ebx
    7073:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    7078:	89 df                	mov    %ebx,%edi
    707a:	e8 31 fb ff ff       	call   6bb0 <_Z30_random_stack_noinline_wrapperI9_status_tJjPvEJRiRS1_EET_PFS4_DpT0_EDpOT1_.constprop.0.isra.0>
    707f:	83 fb fa             	cmp    $0xfffffffa,%ebx
    7082:	0f 84 56 ff ff ff    	je     6fde <do_ecall+0x14e>
    7088:	83 f8 09             	cmp    $0x9,%eax
    708b:	0f 85 5f ff ff ff    	jne    6ff0 <do_ecall+0x160>
    7091:	e9 43 ff ff ff       	jmp    6fd9 <do_ecall+0x149>
    7096:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    709d:	00 00 00 
    70a0:	0f c7 f0             	rdrand %eax
    70a3:	73 fb                	jae    70a0 <do_ecall+0x210>
    70a5:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    70aa:	8b 7c 24 20          	mov    0x20(%rsp),%edi
    70ae:	e8 fd fa ff ff       	call   6bb0 <_Z30_random_stack_noinline_wrapperI9_status_tJjPvEJRiRS1_EET_PFS4_DpT0_EDpOT1_.constprop.0.isra.0>
    70b3:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    70b8:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    70bd:	e9 80 fe ff ff       	jmp    6f42 <do_ecall+0xb2>
    70c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    70c8:	e8 13 fb ff ff       	call   6be0 <_Z22_pthread_tls_get_statev>
    70cd:	83 7c 24 20 fa       	cmpl   $0xfffffffa,0x20(%rsp)
    70d2:	0f 84 4c ff ff ff    	je     7024 <do_ecall+0x194>
    70d8:	83 f8 09             	cmp    $0x9,%eax
    70db:	0f 85 25 fe ff ff    	jne    6f06 <do_ecall+0x76>
    70e1:	e9 3e ff ff ff       	jmp    7024 <do_ecall+0x194>
    70e6:	e8 15 9a 00 00       	call   10b00 <__stack_chk_fail>
    70eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000070f0 <do_ecall_add_thread>:
    70f0:	f3 0f 1e fa          	endbr64 
    70f4:	55                   	push   %rbp
    70f5:	53                   	push   %rbx
    70f6:	48 89 fb             	mov    %rdi,%rbx
    70f9:	48 83 ec 08          	sub    $0x8,%rsp
    70fd:	e8 5e 06 00 00       	call   7760 <is_utility_thread>
    7102:	48 85 db             	test   %rbx,%rbx
    7105:	0f 84 a5 00 00 00    	je     71b0 <do_ecall_add_thread+0xc0>
    710b:	3c 01                	cmp    $0x1,%al
    710d:	0f 85 9d 00 00 00    	jne    71b0 <do_ecall_add_thread+0xc0>
    7113:	be 08 00 00 00       	mov    $0x8,%esi
    7118:	48 89 df             	mov    %rbx,%rdi
    711b:	e8 40 eb ff ff       	call   5c60 <sgx_is_outside_enclave>
    7120:	85 c0                	test   %eax,%eax
    7122:	0f 84 88 00 00 00    	je     71b0 <do_ecall_add_thread+0xc0>
    7128:	0f ae e8             	lfence 
    712b:	48 8b 2b             	mov    (%rbx),%rbp
    712e:	48 85 ed             	test   %rbp,%rbp
    7131:	74 7d                	je     71b0 <do_ecall_add_thread+0xc0>
    7133:	0f ae e8             	lfence 
    7136:	48 89 ef             	mov    %rbp,%rdi
    7139:	e8 02 f7 ff ff       	call   6840 <_ZL11do_save_tcsPv>
    713e:	89 c3                	mov    %eax,%ebx
    7140:	85 c0                	test   %eax,%eax
    7142:	75 71                	jne    71b5 <do_ecall_add_thread+0xc5>
    7144:	48 89 ef             	mov    %rbp,%rdi
    7147:	e8 94 f2 ff ff       	call   63e0 <do_add_thread>
    714c:	89 c3                	mov    %eax,%ebx
    714e:	85 c0                	test   %eax,%eax
    7150:	74 63                	je     71b5 <do_ecall_add_thread+0xc5>
    7152:	e8 09 06 00 00       	call   7760 <is_utility_thread>
    7157:	84 c0                	test   %al,%al
    7159:	74 5a                	je     71b5 <do_ecall_add_thread+0xc5>
    715b:	48 8b 0d 1e 30 01 00 	mov    0x1301e(%rip),%rcx        # 1a180 <_ZL10g_tcs_node>
    7162:	48 85 c9             	test   %rcx,%rcx
    7165:	74 4e                	je     71b5 <do_ecall_add_thread+0xc5>
    7167:	48 8b 35 0a 30 01 00 	mov    0x1300a(%rip),%rsi        # 1a178 <_ZL12g_tcs_cookie>
    716e:	48 8b 01             	mov    (%rcx),%rax
    7171:	48 8b 79 08          	mov    0x8(%rcx),%rdi
    7175:	48 31 f0             	xor    %rsi,%rax
    7178:	48 39 c5             	cmp    %rax,%rbp
    717b:	74 41                	je     71be <do_ecall_add_thread+0xce>
    717d:	48 85 ff             	test   %rdi,%rdi
    7180:	75 11                	jne    7193 <do_ecall_add_thread+0xa3>
    7182:	eb 31                	jmp    71b5 <do_ecall_add_thread+0xc5>
    7184:	0f 1f 40 00          	nopl   0x0(%rax)
    7188:	48 89 f9             	mov    %rdi,%rcx
    718b:	48 85 c0             	test   %rax,%rax
    718e:	74 25                	je     71b5 <do_ecall_add_thread+0xc5>
    7190:	48 89 c7             	mov    %rax,%rdi
    7193:	48 8b 17             	mov    (%rdi),%rdx
    7196:	48 8b 47 08          	mov    0x8(%rdi),%rax
    719a:	48 31 f2             	xor    %rsi,%rdx
    719d:	48 39 d5             	cmp    %rdx,%rbp
    71a0:	75 e6                	jne    7188 <do_ecall_add_thread+0x98>
    71a2:	48 89 41 08          	mov    %rax,0x8(%rcx)
    71a6:	e8 15 7e 00 00       	call   efc0 <dlfree>
    71ab:	eb 08                	jmp    71b5 <do_ecall_add_thread+0xc5>
    71ad:	0f 1f 00             	nopl   (%rax)
    71b0:	bb 01 00 00 00       	mov    $0x1,%ebx
    71b5:	48 83 c4 08          	add    $0x8,%rsp
    71b9:	89 d8                	mov    %ebx,%eax
    71bb:	5b                   	pop    %rbx
    71bc:	5d                   	pop    %rbp
    71bd:	c3                   	ret    
    71be:	48 89 3d bb 2f 01 00 	mov    %rdi,0x12fbb(%rip)        # 1a180 <_ZL10g_tcs_node>
    71c5:	48 89 cf             	mov    %rcx,%rdi
    71c8:	e8 f3 7d 00 00       	call   efc0 <dlfree>
    71cd:	eb e6                	jmp    71b5 <do_ecall_add_thread+0xc5>
    71cf:	90                   	nop

00000000000071d0 <do_uninit_enclave>:
    71d0:	f3 0f 1e fa          	endbr64 
    71d4:	48 8d 05 51 0c 01 00 	lea    0x10c51(%rip),%rax        # 17e2c <EDMM_supported>
    71db:	41 54                	push   %r12
    71dd:	55                   	push   %rbp
    71de:	53                   	push   %rbx
    71df:	8b 00                	mov    (%rax),%eax
    71e1:	85 c0                	test   %eax,%eax
    71e3:	0f 84 a4 00 00 00    	je     728d <do_uninit_enclave+0xbd>
    71e9:	49 89 fc             	mov    %rdi,%r12
    71ec:	e8 6f 05 00 00       	call   7760 <is_utility_thread>
    71f1:	84 c0                	test   %al,%al
    71f3:	0f 84 87 00 00 00    	je     7280 <do_uninit_enclave+0xb0>
    71f9:	f0 83 0d 6f 2f 01 00 	lock orl $0x1,0x12f6f(%rip)        # 1a170 <g_uninit_flag>
    7200:	01 
    7201:	48 8b 1d 78 2f 01 00 	mov    0x12f78(%rip),%rbx        # 1a180 <_ZL10g_tcs_node>
    7208:	48 c7 05 6d 2f 01 00 	movq   $0x0,0x12f6d(%rip)        # 1a180 <_ZL10g_tcs_node>
    720f:	00 00 00 00 
    7213:	eb 2f                	jmp    7244 <do_uninit_enclave+0x74>
    7215:	0f 1f 00             	nopl   (%rax)
    7218:	48 8b 3b             	mov    (%rbx),%rdi
    721b:	48 33 3d 56 2f 01 00 	xor    0x12f56(%rip),%rdi        # 1a178 <_ZL12g_tcs_cookie>
    7222:	4c 39 e7             	cmp    %r12,%rdi
    7225:	74 0e                	je     7235 <do_uninit_enclave+0x65>
    7227:	be 00 10 00 00       	mov    $0x1000,%esi
    722c:	e8 4f 48 00 00       	call   ba80 <mm_dealloc>
    7231:	85 c0                	test   %eax,%eax
    7233:	75 58                	jne    728d <do_uninit_enclave+0xbd>
    7235:	48 8b 6b 08          	mov    0x8(%rbx),%rbp
    7239:	48 89 df             	mov    %rbx,%rdi
    723c:	e8 7f 7d 00 00       	call   efc0 <dlfree>
    7241:	48 89 eb             	mov    %rbp,%rbx
    7244:	48 85 db             	test   %rbx,%rbx
    7247:	75 cf                	jne    7218 <do_uninit_enclave+0x48>
    7249:	48 8d 1d 24 2f 01 00 	lea    0x12f24(%rip),%rbx        # 1a174 <_ZL10g_ife_lock>
    7250:	48 89 df             	mov    %rbx,%rdi
    7253:	e8 b8 55 00 00       	call   c810 <sgx_spin_lock>
    7258:	0f b6 05 c1 0f 01 00 	movzbl 0x10fc1(%rip),%eax        # 18220 <_ZL16g_is_first_ecall>
    725f:	84 c0                	test   %al,%al
    7261:	74 45                	je     72a8 <do_uninit_enclave+0xd8>
    7263:	48 89 df             	mov    %rbx,%rdi
    7266:	e8 35 56 00 00       	call   c8a0 <sgx_spin_unlock>
    726b:	bf 03 00 00 00       	mov    $0x3,%edi
    7270:	e8 a0 ae 00 00       	call   12115 <set_enclave_state>
    7275:	5b                   	pop    %rbx
    7276:	31 c0                	xor    %eax,%eax
    7278:	5d                   	pop    %rbp
    7279:	41 5c                	pop    %r12
    727b:	c3                   	ret    
    727c:	0f 1f 40 00          	nopl   0x0(%rax)
    7280:	e8 8b f0 ff ff       	call   6310 <is_dynamic_thread_exist>
    7285:	85 c0                	test   %eax,%eax
    7287:	0f 84 6c ff ff ff    	je     71f9 <do_uninit_enclave+0x29>
    728d:	bf 03 00 00 00       	mov    $0x3,%edi
    7292:	e8 7e ae 00 00       	call   12115 <set_enclave_state>
    7297:	5b                   	pop    %rbx
    7298:	b8 01 00 00 00       	mov    $0x1,%eax
    729d:	5d                   	pop    %rbp
    729e:	41 5c                	pop    %r12
    72a0:	c3                   	ret    
    72a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    72a8:	e8 43 1b 00 00       	call   8df0 <uninit_global_object>
    72ad:	eb b4                	jmp    7263 <do_uninit_enclave+0x93>
    72af:	90                   	nop

00000000000072b0 <sgx_ocall>:
    72b0:	f3 0f 1e fa          	endbr64 
    72b4:	8d 47 07             	lea    0x7(%rdi),%eax
    72b7:	83 f8 05             	cmp    $0x5,%eax
    72ba:	76 12                	jbe    72ce <sgx_ocall+0x1e>
    72bc:	85 ff                	test   %edi,%edi
    72be:	74 0e                	je     72ce <sgx_ocall+0x1e>
    72c0:	48 8d 15 69 bd 00 00 	lea    0xbd69(%rip),%rdx        # 13030 <g_dyn_entry_table>
    72c7:	89 f8                	mov    %edi,%eax
    72c9:	48 3b 02             	cmp    (%rdx),%rax
    72cc:	73 0a                	jae    72d8 <sgx_ocall+0x28>
    72ce:	e9 0c b1 00 00       	jmp    123df <__morestack>
    72d3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    72d8:	b8 01 10 00 00       	mov    $0x1001,%eax
    72dd:	c3                   	ret    
    72de:	66 90                	xchg   %ax,%ax

00000000000072e0 <update_ocall_lastsp>:
    72e0:	f3 0f 1e fa          	endbr64 
    72e4:	53                   	push   %rbx
    72e5:	48 89 fb             	mov    %rdi,%rbx
    72e8:	e8 56 ae 00 00       	call   12143 <get_thread_data>
    72ed:	b9 01 00 00 00       	mov    $0x1,%ecx
    72f2:	48 8b 50 08          	mov    0x8(%rax),%rdx
    72f6:	48 89 53 30          	mov    %rdx,0x30(%rbx)
    72fa:	48 39 50 10          	cmp    %rdx,0x10(%rax)
    72fe:	74 0b                	je     730b <update_ocall_lastsp+0x2b>
    7300:	48 8b b2 90 00 00 00 	mov    0x90(%rdx),%rsi
    7307:	48 8d 4e 01          	lea    0x1(%rsi),%rcx
    730b:	48 89 8b 90 00 00 00 	mov    %rcx,0x90(%rbx)
    7312:	48 89 58 08          	mov    %rbx,0x8(%rax)
    7316:	48 89 d0             	mov    %rdx,%rax
    7319:	5b                   	pop    %rbx
    731a:	c3                   	ret    
    731b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000007320 <do_oret>:
    7320:	f3 0f 1e fa          	endbr64 
    7324:	55                   	push   %rbp
    7325:	48 89 fd             	mov    %rdi,%rbp
    7328:	53                   	push   %rbx
    7329:	48 83 ec 18          	sub    $0x18,%rsp
    732d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    7334:	00 00 
    7336:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    733b:	31 c0                	xor    %eax,%eax
    733d:	e8 01 ae 00 00       	call   12143 <get_thread_data>
    7342:	48 83 78 50 01       	cmpq   $0x1,0x50(%rax)
    7347:	48 89 c3             	mov    %rax,%rbx
    734a:	74 74                	je     73c0 <do_oret+0xa0>
    734c:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    7350:	48 89 e0             	mov    %rsp,%rax
    7353:	48 89 3c 24          	mov    %rdi,(%rsp)
    7357:	48 39 f8             	cmp    %rdi,%rax
    735a:	72 24                	jb     7380 <do_oret+0x60>
    735c:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    7361:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    7368:	00 00 
    736a:	75 6b                	jne    73d7 <do_oret+0xb7>
    736c:	48 83 c4 18          	add    $0x18,%rsp
    7370:	b8 01 00 00 00       	mov    $0x1,%eax
    7375:	5b                   	pop    %rbx
    7376:	5d                   	pop    %rbp
    7377:	c3                   	ret    
    7378:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    737f:	00 
    7380:	48 8b 43 10          	mov    0x10(%rbx),%rax
    7384:	48 8d 90 10 ff ff ff 	lea    -0xf0(%rax),%rdx
    738b:	48 39 fa             	cmp    %rdi,%rdx
    738e:	72 cc                	jb     735c <do_oret+0x3c>
    7390:	48 81 7f 20 44 49 43 	cmpq   $0x4f434944,0x20(%rdi)
    7397:	4f 
    7398:	75 c2                	jne    735c <do_oret+0x3c>
    739a:	48 8b 57 30          	mov    0x30(%rdi),%rdx
    739e:	48 39 d7             	cmp    %rdx,%rdi
    73a1:	73 b9                	jae    735c <do_oret+0x3c>
    73a3:	48 39 d0             	cmp    %rdx,%rax
    73a6:	72 b4                	jb     735c <do_oret+0x3c>
    73a8:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    73ac:	48 89 ee             	mov    %rbp,%rsi
    73af:	e8 3e b0 00 00       	call   123f2 <asm_oret>
    73b4:	eb a6                	jmp    735c <do_oret+0x3c>
    73b6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    73bd:	00 00 00 
    73c0:	48 c7 40 50 00 00 00 	movq   $0x0,0x50(%rax)
    73c7:	00 
    73c8:	bf 01 00 00 00       	mov    $0x1,%edi
    73cd:	e8 ce f1 ff ff       	call   65a0 <sgx_set_ssa_aexnotify>
    73d2:	e9 75 ff ff ff       	jmp    734c <do_oret+0x2c>
    73d7:	e8 24 97 00 00       	call   10b00 <__stack_chk_fail>
    73dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000073e0 <get_enclave_size>:
    73e0:	f3 0f 1e fa          	endbr64 
    73e4:	48 8d 05 95 bd 00 00 	lea    0xbd95(%rip),%rax        # 13180 <g_global_data>
    73eb:	48 8b 40 08          	mov    0x8(%rax),%rax
    73ef:	c3                   	ret    

00000000000073f0 <get_enclave_end>:
    73f0:	f3 0f 1e fa          	endbr64 
    73f4:	48 83 ec 08          	sub    $0x8,%rsp
    73f8:	e8 fb ac 00 00       	call   120f8 <get_enclave_base>
    73fd:	48 8d 15 7c bd 00 00 	lea    0xbd7c(%rip),%rdx        # 13180 <g_global_data>
    7404:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    7408:	48 83 c4 08          	add    $0x8,%rsp
    740c:	48 8d 44 02 ff       	lea    -0x1(%rdx,%rax,1),%rax
    7411:	c3                   	ret    
    7412:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    7419:	00 00 00 
    741c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000007420 <get_heap_base>:
    7420:	f3 0f 1e fa          	endbr64 
    7424:	48 83 ec 08          	sub    $0x8,%rsp
    7428:	e8 cb ac 00 00       	call   120f8 <get_enclave_base>
    742d:	48 8d 15 4c bd 00 00 	lea    0xbd4c(%rip),%rdx        # 13180 <g_global_data>
    7434:	48 8b 52 10          	mov    0x10(%rdx),%rdx
    7438:	48 83 c4 08          	add    $0x8,%rsp
    743c:	48 01 d0             	add    %rdx,%rax
    743f:	c3                   	ret    

0000000000007440 <get_heap_size>:
    7440:	f3 0f 1e fa          	endbr64 
    7444:	48 8d 05 e1 09 01 00 	lea    0x109e1(%rip),%rax        # 17e2c <EDMM_supported>
    744b:	48 8d 0d 2e bd 00 00 	lea    0xbd2e(%rip),%rcx        # 13180 <g_global_data>
    7452:	8b 00                	mov    (%rax),%eax
    7454:	48 8b 79 18          	mov    0x18(%rcx),%rdi
    7458:	85 c0                	test   %eax,%eax
    745a:	74 41                	je     749d <get_heap_size+0x5d>
    745c:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    7462:	85 c0                	test   %eax,%eax
    7464:	74 37                	je     749d <get_heap_size+0x5d>
    7466:	31 d2                	xor    %edx,%edx
    7468:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    746f:	00 
    7470:	89 d0                	mov    %edx,%eax
    7472:	48 83 c0 0b          	add    $0xb,%rax
    7476:	48 c1 e0 05          	shl    $0x5,%rax
    747a:	48 01 c8             	add    %rcx,%rax
    747d:	0f b7 30             	movzwl (%rax),%esi
    7480:	66 83 fe 03          	cmp    $0x3,%si
    7484:	75 0a                	jne    7490 <get_heap_size+0x50>
    7486:	8b 40 04             	mov    0x4(%rax),%eax
    7489:	48 c1 e0 0c          	shl    $0xc,%rax
    748d:	48 01 c7             	add    %rax,%rdi
    7490:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    7496:	83 c2 01             	add    $0x1,%edx
    7499:	39 c2                	cmp    %eax,%edx
    749b:	72 d3                	jb     7470 <get_heap_size+0x30>
    749d:	48 89 f8             	mov    %rdi,%rax
    74a0:	c3                   	ret    
    74a1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    74a8:	00 00 00 
    74ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000074b0 <get_heap_min_size>:
    74b0:	f3 0f 1e fa          	endbr64 
    74b4:	48 8d 0d c5 bc 00 00 	lea    0xbcc5(%rip),%rcx        # 13180 <g_global_data>
    74bb:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    74c1:	85 c0                	test   %eax,%eax
    74c3:	74 3b                	je     7500 <get_heap_min_size+0x50>
    74c5:	31 d2                	xor    %edx,%edx
    74c7:	eb 14                	jmp    74dd <get_heap_min_size+0x2d>
    74c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    74d0:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    74d6:	83 c2 01             	add    $0x1,%edx
    74d9:	39 c2                	cmp    %eax,%edx
    74db:	73 23                	jae    7500 <get_heap_min_size+0x50>
    74dd:	89 d0                	mov    %edx,%eax
    74df:	48 83 c0 0b          	add    $0xb,%rax
    74e3:	48 c1 e0 05          	shl    $0x5,%rax
    74e7:	48 01 c8             	add    %rcx,%rax
    74ea:	0f b7 30             	movzwl (%rax),%esi
    74ed:	66 83 fe 01          	cmp    $0x1,%si
    74f1:	75 dd                	jne    74d0 <get_heap_min_size+0x20>
    74f3:	8b 40 04             	mov    0x4(%rax),%eax
    74f6:	48 c1 e0 0c          	shl    $0xc,%rax
    74fa:	c3                   	ret    
    74fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7500:	31 c0                	xor    %eax,%eax
    7502:	c3                   	ret    
    7503:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    750a:	00 00 00 
    750d:	0f 1f 00             	nopl   (%rax)

0000000000007510 <get_rsrv_base>:
    7510:	f3 0f 1e fa          	endbr64 
    7514:	48 83 ec 08          	sub    $0x8,%rsp
    7518:	e8 db ab 00 00       	call   120f8 <get_enclave_base>
    751d:	48 8d 15 5c bc 00 00 	lea    0xbc5c(%rip),%rdx        # 13180 <g_global_data>
    7524:	48 8b 52 20          	mov    0x20(%rdx),%rdx
    7528:	48 83 c4 08          	add    $0x8,%rsp
    752c:	48 01 d0             	add    %rdx,%rax
    752f:	c3                   	ret    

0000000000007530 <get_rsrv_end>:
    7530:	f3 0f 1e fa          	endbr64 
    7534:	48 83 ec 08          	sub    $0x8,%rsp
    7538:	e8 bb ab 00 00       	call   120f8 <get_enclave_base>
    753d:	48 8d 35 3c bc 00 00 	lea    0xbc3c(%rip),%rsi        # 13180 <g_global_data>
    7544:	48 8d 15 e1 08 01 00 	lea    0x108e1(%rip),%rdx        # 17e2c <EDMM_supported>
    754b:	4c 8b 4e 20          	mov    0x20(%rsi),%r9
    754f:	8b 12                	mov    (%rdx),%edx
    7551:	4c 8b 46 28          	mov    0x28(%rsi),%r8
    7555:	49 83 e9 01          	sub    $0x1,%r9
    7559:	85 d2                	test   %edx,%edx
    755b:	74 40                	je     759d <get_rsrv_end+0x6d>
    755d:	8b 96 58 01 00 00    	mov    0x158(%rsi),%edx
    7563:	85 d2                	test   %edx,%edx
    7565:	74 36                	je     759d <get_rsrv_end+0x6d>
    7567:	31 c9                	xor    %ecx,%ecx
    7569:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7570:	89 ca                	mov    %ecx,%edx
    7572:	48 83 c2 0b          	add    $0xb,%rdx
    7576:	48 c1 e2 05          	shl    $0x5,%rdx
    757a:	48 01 f2             	add    %rsi,%rdx
    757d:	0f b7 3a             	movzwl (%rdx),%edi
    7580:	66 83 ff 16          	cmp    $0x16,%di
    7584:	75 0a                	jne    7590 <get_rsrv_end+0x60>
    7586:	8b 52 04             	mov    0x4(%rdx),%edx
    7589:	48 c1 e2 0c          	shl    $0xc,%rdx
    758d:	49 01 d0             	add    %rdx,%r8
    7590:	8b 96 58 01 00 00    	mov    0x158(%rsi),%edx
    7596:	83 c1 01             	add    $0x1,%ecx
    7599:	39 d1                	cmp    %edx,%ecx
    759b:	72 d3                	jb     7570 <get_rsrv_end+0x40>
    759d:	4c 01 c8             	add    %r9,%rax
    75a0:	48 83 c4 08          	add    $0x8,%rsp
    75a4:	4c 01 c0             	add    %r8,%rax
    75a7:	c3                   	ret    
    75a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    75af:	00 

00000000000075b0 <get_rsrv_size>:
    75b0:	f3 0f 1e fa          	endbr64 
    75b4:	48 8d 05 71 08 01 00 	lea    0x10871(%rip),%rax        # 17e2c <EDMM_supported>
    75bb:	48 8d 0d be bb 00 00 	lea    0xbbbe(%rip),%rcx        # 13180 <g_global_data>
    75c2:	8b 00                	mov    (%rax),%eax
    75c4:	48 8b 79 28          	mov    0x28(%rcx),%rdi
    75c8:	85 c0                	test   %eax,%eax
    75ca:	74 41                	je     760d <get_rsrv_size+0x5d>
    75cc:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    75d2:	85 c0                	test   %eax,%eax
    75d4:	74 37                	je     760d <get_rsrv_size+0x5d>
    75d6:	31 d2                	xor    %edx,%edx
    75d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    75df:	00 
    75e0:	89 d0                	mov    %edx,%eax
    75e2:	48 83 c0 0b          	add    $0xb,%rax
    75e6:	48 c1 e0 05          	shl    $0x5,%rax
    75ea:	48 01 c8             	add    %rcx,%rax
    75ed:	0f b7 30             	movzwl (%rax),%esi
    75f0:	66 83 fe 16          	cmp    $0x16,%si
    75f4:	75 0a                	jne    7600 <get_rsrv_size+0x50>
    75f6:	8b 40 04             	mov    0x4(%rax),%eax
    75f9:	48 c1 e0 0c          	shl    $0xc,%rax
    75fd:	48 01 c7             	add    %rax,%rdi
    7600:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    7606:	83 c2 01             	add    $0x1,%edx
    7609:	39 c2                	cmp    %eax,%edx
    760b:	72 d3                	jb     75e0 <get_rsrv_size+0x30>
    760d:	48 89 f8             	mov    %rdi,%rax
    7610:	c3                   	ret    
    7611:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    7618:	00 00 00 
    761b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000007620 <get_rsrv_min_size>:
    7620:	f3 0f 1e fa          	endbr64 
    7624:	48 8d 0d 55 bb 00 00 	lea    0xbb55(%rip),%rcx        # 13180 <g_global_data>
    762b:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    7631:	85 c0                	test   %eax,%eax
    7633:	74 3b                	je     7670 <get_rsrv_min_size+0x50>
    7635:	31 d2                	xor    %edx,%edx
    7637:	eb 14                	jmp    764d <get_rsrv_min_size+0x2d>
    7639:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7640:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    7646:	83 c2 01             	add    $0x1,%edx
    7649:	39 c2                	cmp    %eax,%edx
    764b:	73 23                	jae    7670 <get_rsrv_min_size+0x50>
    764d:	89 d0                	mov    %edx,%eax
    764f:	48 83 c0 0b          	add    $0xb,%rax
    7653:	48 c1 e0 05          	shl    $0x5,%rax
    7657:	48 01 c8             	add    %rcx,%rax
    765a:	0f b7 30             	movzwl (%rax),%esi
    765d:	66 83 fe 14          	cmp    $0x14,%si
    7661:	75 dd                	jne    7640 <get_rsrv_min_size+0x20>
    7663:	8b 40 04             	mov    0x4(%rax),%eax
    7666:	48 c1 e0 0c          	shl    $0xc,%rax
    766a:	c3                   	ret    
    766b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7670:	31 c0                	xor    %eax,%eax
    7672:	c3                   	ret    
    7673:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    767a:	00 00 00 
    767d:	0f 1f 00             	nopl   (%rax)

0000000000007680 <get_errno_addr>:
    7680:	f3 0f 1e fa          	endbr64 
    7684:	48 83 ec 08          	sub    $0x8,%rsp
    7688:	e8 b6 aa 00 00       	call   12143 <get_thread_data>
    768d:	48 83 c4 08          	add    $0x8,%rsp
    7691:	48 83 c0 40          	add    $0x40,%rax
    7695:	c3                   	ret    
    7696:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    769d:	00 00 00 

00000000000076a0 <feature_supported>:
    76a0:	f3 0f 1e fa          	endbr64 
    76a4:	48 85 ff             	test   %rdi,%rdi
    76a7:	74 37                	je     76e0 <feature_supported+0x40>
    76a9:	31 d2                	xor    %edx,%edx
    76ab:	eb 08                	jmp    76b5 <feature_supported+0x15>
    76ad:	0f 1f 00             	nopl   (%rax)
    76b0:	48 85 c0             	test   %rax,%rax
    76b3:	78 2b                	js     76e0 <feature_supported+0x40>
    76b5:	89 d0                	mov    %edx,%eax
    76b7:	83 c2 01             	add    $0x1,%edx
    76ba:	41 89 d1             	mov    %edx,%r9d
    76bd:	49 89 c0             	mov    %rax,%r8
    76c0:	48 8b 04 c7          	mov    (%rdi,%rax,8),%rax
    76c4:	41 c1 e1 06          	shl    $0x6,%r9d
    76c8:	44 39 ce             	cmp    %r9d,%esi
    76cb:	73 e3                	jae    76b0 <feature_supported+0x10>
    76cd:	41 c1 e0 06          	shl    $0x6,%r8d
    76d1:	44 29 c6             	sub    %r8d,%esi
    76d4:	89 f1                	mov    %esi,%ecx
    76d6:	48 d3 e8             	shr    %cl,%rax
    76d9:	83 e0 01             	and    $0x1,%eax
    76dc:	c3                   	ret    
    76dd:	0f 1f 00             	nopl   (%rax)
    76e0:	31 c0                	xor    %eax,%eax
    76e2:	c3                   	ret    
    76e3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    76ea:	00 00 00 
    76ed:	0f 1f 00             	nopl   (%rax)

00000000000076f0 <is_stack_addr>:
    76f0:	f3 0f 1e fa          	endbr64 
    76f4:	55                   	push   %rbp
    76f5:	48 89 f5             	mov    %rsi,%rbp
    76f8:	53                   	push   %rbx
    76f9:	48 89 fb             	mov    %rdi,%rbx
    76fc:	48 83 ec 08          	sub    $0x8,%rsp
    7700:	e8 3e aa 00 00       	call   12143 <get_thread_data>
    7705:	31 c9                	xor    %ecx,%ecx
    7707:	48 01 dd             	add    %rbx,%rbp
    770a:	48 89 c2             	mov    %rax,%rdx
    770d:	0f 92 c1             	setb   %cl
    7710:	48 39 68 10          	cmp    %rbp,0x10(%rax)
    7714:	0f 93 c0             	setae  %al
    7717:	48 3b 5a 18          	cmp    0x18(%rdx),%rbx
    771b:	0f 93 c2             	setae  %dl
    771e:	21 d0                	and    %edx,%eax
    7720:	48 85 c9             	test   %rcx,%rcx
    7723:	0f 94 c2             	sete   %dl
    7726:	48 83 c4 08          	add    $0x8,%rsp
    772a:	21 d0                	and    %edx,%eax
    772c:	5b                   	pop    %rbx
    772d:	5d                   	pop    %rbp
    772e:	c3                   	ret    
    772f:	90                   	nop

0000000000007730 <is_valid_sp>:
    7730:	f3 0f 1e fa          	endbr64 
    7734:	40 f6 c7 07          	test   $0x7,%dil
    7738:	74 06                	je     7740 <is_valid_sp+0x10>
    773a:	31 c0                	xor    %eax,%eax
    773c:	c3                   	ret    
    773d:	0f 1f 00             	nopl   (%rax)
    7740:	53                   	push   %rbx
    7741:	48 89 fb             	mov    %rdi,%rbx
    7744:	e8 fa a9 00 00       	call   12143 <get_thread_data>
    7749:	48 89 c2             	mov    %rax,%rdx
    774c:	48 3b 58 18          	cmp    0x18(%rax),%rbx
    7750:	0f 93 c0             	setae  %al
    7753:	48 39 5a 10          	cmp    %rbx,0x10(%rdx)
    7757:	5b                   	pop    %rbx
    7758:	0f 93 c2             	setae  %dl
    775b:	21 d0                	and    %edx,%eax
    775d:	c3                   	ret    
    775e:	66 90                	xchg   %ax,%ax

0000000000007760 <is_utility_thread>:
    7760:	f3 0f 1e fa          	endbr64 
    7764:	48 83 ec 08          	sub    $0x8,%rsp
    7768:	e8 d6 a9 00 00       	call   12143 <get_thread_data>
    776d:	31 d2                	xor    %edx,%edx
    776f:	48 85 c0             	test   %rax,%rax
    7772:	74 07                	je     777b <is_utility_thread+0x1b>
    7774:	48 8b 50 30          	mov    0x30(%rax),%rdx
    7778:	83 e2 01             	and    $0x1,%edx
    777b:	89 d0                	mov    %edx,%eax
    777d:	48 83 c4 08          	add    $0x8,%rsp
    7781:	c3                   	ret    
    7782:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    7789:	00 00 00 
    778c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000007790 <get_max_tcs_num>:
    7790:	f3 0f 1e fa          	endbr64 
    7794:	48 8d 05 91 06 01 00 	lea    0x10691(%rip),%rax        # 17e2c <EDMM_supported>
    779b:	83 38 01             	cmpl   $0x1,(%rax)
    779e:	48 8d 05 db b9 00 00 	lea    0xb9db(%rip),%rax        # 13180 <g_global_data>
    77a5:	74 09                	je     77b0 <get_max_tcs_num+0x20>
    77a7:	48 8b 40 48          	mov    0x48(%rax),%rax
    77ab:	c3                   	ret    
    77ac:	0f 1f 40 00          	nopl   0x0(%rax)
    77b0:	48 8b 40 40          	mov    0x40(%rax),%rax
    77b4:	c3                   	ret    
    77b5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    77bc:	00 00 00 
    77bf:	90                   	nop

00000000000077c0 <is_pkru_enabled>:
    77c0:	f3 0f 1e fa          	endbr64 
    77c4:	48 83 ec 08          	sub    $0x8,%rsp
    77c8:	e8 23 0a 00 00       	call   81f0 <get_xfeature_state>
    77cd:	48 83 c4 08          	add    $0x8,%rsp
    77d1:	48 c1 e8 09          	shr    $0x9,%rax
    77d5:	83 e0 01             	and    $0x1,%eax
    77d8:	c3                   	ret    
    77d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000077e0 <is_tcs_binding_mode>:
    77e0:	f3 0f 1e fa          	endbr64 
    77e4:	48 8d 05 95 b9 00 00 	lea    0xb995(%rip),%rax        # 13180 <g_global_data>
    77eb:	48 8b 40 38          	mov    0x38(%rax),%rax
    77ef:	48 85 c0             	test   %rax,%rax
    77f2:	0f 94 c0             	sete   %al
    77f5:	c3                   	ret    
    77f6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    77fd:	00 00 00 

0000000000007800 <get_xsave_size>:
    7800:	f3 0f 1e fa          	endbr64 
    7804:	48 8d 05 75 b9 00 00 	lea    0xb975(%rip),%rax        # 13180 <g_global_data>
    780b:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
    7812:	c3                   	ret    
    7813:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    781a:	00 00 00 
    781d:	0f 1f 00             	nopl   (%rax)

0000000000007820 <get_ssa_aexnotify>:
    7820:	f3 0f 1e fa          	endbr64 
    7824:	48 83 ec 08          	sub    $0x8,%rsp
    7828:	e8 16 a9 00 00       	call   12143 <get_thread_data>
    782d:	48 85 c0             	test   %rax,%rax
    7830:	74 16                	je     7848 <get_ssa_aexnotify+0x28>
    7832:	48 8b 40 20          	mov    0x20(%rax),%rax
    7836:	0f b6 80 a7 00 00 00 	movzbl 0xa7(%rax),%eax
    783d:	48 83 c4 08          	add    $0x8,%rsp
    7841:	83 e0 01             	and    $0x1,%eax
    7844:	c3                   	ret    
    7845:	0f 1f 00             	nopl   (%rax)
    7848:	31 c0                	xor    %eax,%eax
    784a:	48 83 c4 08          	add    $0x8,%rsp
    784e:	c3                   	ret    
    784f:	90                   	nop

0000000000007850 <internal_handle_exception>:
    7850:	f3 0f 1e fa          	endbr64 
    7854:	55                   	push   %rbp
    7855:	48 89 e5             	mov    %rsp,%rbp
    7858:	41 57                	push   %r15
    785a:	41 56                	push   %r14
    785c:	41 55                	push   %r13
    785e:	41 54                	push   %r12
    7860:	53                   	push   %rbx
    7861:	48 89 fb             	mov    %rdi,%rbx
    7864:	48 83 ec 38          	sub    $0x38,%rsp
    7868:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    786f:	00 00 
    7871:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    7875:	31 c0                	xor    %eax,%eax
    7877:	e8 c7 a8 00 00       	call   12143 <get_thread_data>
    787c:	4c 8b 60 20          	mov    0x20(%rax),%r12
    7880:	49 89 c5             	mov    %rax,%r13
    7883:	e8 78 ff ff ff       	call   7800 <get_xsave_size>
    7888:	48 85 db             	test   %rbx,%rbx
    788b:	0f 84 4f 01 00 00    	je     79e0 <internal_handle_exception+0x190>
    7891:	49 8d b4 24 ff 0f 00 	lea    0xfff(%r12),%rsi
    7898:	00 
    7899:	48 05 b7 10 00 00    	add    $0x10b7,%rax
    789f:	48 8b 93 b0 00 00 00 	mov    0xb0(%rbx),%rdx
    78a6:	4c 8d b3 c0 00 00 00 	lea    0xc0(%rbx),%r14
    78ad:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    78b3:	48 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%rsi
    78ba:	4c 89 f7             	mov    %r14,%rdi
    78bd:	48 29 c6             	sub    %rax,%rsi
    78c0:	e8 ab 8e 00 00       	call   10770 <memcpy>
    78c5:	8b 83 a8 00 00 00    	mov    0xa8(%rbx),%eax
    78cb:	85 c0                	test   %eax,%eax
    78cd:	0f 84 2e 01 00 00    	je     7a01 <internal_handle_exception+0x1b1>
    78d3:	49 8b 45 78          	mov    0x78(%r13),%rax
    78d7:	48 85 c0             	test   %rax,%rax
    78da:	0f 88 00 01 00 00    	js     79e0 <internal_handle_exception+0x190>
    78e0:	48 8d 50 01          	lea    0x1(%rax),%rdx
    78e4:	83 bb 90 00 00 00 0e 	cmpl   $0xe,0x90(%rbx)
    78eb:	49 89 55 78          	mov    %rdx,0x78(%r13)
    78ef:	75 27                	jne    7918 <internal_handle_exception+0xc8>
    78f1:	48 8b 15 90 28 01 00 	mov    0x12890(%rip),%rdx        # 1a188 <g_mm_pfhandler>
    78f8:	48 85 d2             	test   %rdx,%rdx
    78fb:	74 1b                	je     7918 <internal_handle_exception+0xc8>
    78fd:	49 89 45 78          	mov    %rax,0x78(%r13)
    7901:	48 8d bb 98 00 00 00 	lea    0x98(%rbx),%rdi
    7908:	ff d2                	call   *%rdx
    790a:	83 c0 01             	add    $0x1,%eax
    790d:	0f 84 ee 00 00 00    	je     7a01 <internal_handle_exception+0x1b1>
    7913:	49 83 45 78 01       	addq   $0x1,0x78(%r13)
    7918:	48 8d 3d 79 28 01 00 	lea    0x12879(%rip),%rdi        # 1a198 <_ZL14g_handler_lock>
    791f:	e8 ec 4e 00 00       	call   c810 <sgx_spin_lock>
    7924:	48 8b 05 75 28 01 00 	mov    0x12875(%rip),%rax        # 1a1a0 <_ZL12g_first_node>
    792b:	48 85 c0             	test   %rax,%rax
    792e:	0f 84 b9 00 00 00    	je     79ed <internal_handle_exception+0x19d>
    7934:	45 31 ff             	xor    %r15d,%r15d
    7937:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    793e:	00 00 
    7940:	48 8b 40 08          	mov    0x8(%rax),%rax
    7944:	49 83 c7 08          	add    $0x8,%r15
    7948:	48 85 c0             	test   %rax,%rax
    794b:	75 f3                	jne    7940 <internal_handle_exception+0xf0>
    794d:	4d 85 ff             	test   %r15,%r15
    7950:	0f 84 97 00 00 00    	je     79ed <internal_handle_exception+0x19d>
    7956:	4c 89 ff             	mov    %r15,%rdi
    7959:	e8 02 4d 00 00       	call   c660 <alloca>
    795e:	49 89 c4             	mov    %rax,%r12
    7961:	48 85 c0             	test   %rax,%rax
    7964:	0f 84 a9 02 00 00    	je     7c13 <internal_handle_exception+0x3c3>
    796a:	48 8b 05 2f 28 01 00 	mov    0x1282f(%rip),%rax        # 1a1a0 <_ZL12g_first_node>
    7971:	4c 89 e1             	mov    %r12,%rcx
    7974:	48 85 c0             	test   %rax,%rax
    7977:	74 1b                	je     7994 <internal_handle_exception+0x144>
    7979:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7980:	48 8b 30             	mov    (%rax),%rsi
    7983:	48 8b 40 08          	mov    0x8(%rax),%rax
    7987:	48 83 c1 08          	add    $0x8,%rcx
    798b:	48 89 71 f8          	mov    %rsi,-0x8(%rcx)
    798f:	48 85 c0             	test   %rax,%rax
    7992:	75 ec                	jne    7980 <internal_handle_exception+0x130>
    7994:	48 8d 3d fd 27 01 00 	lea    0x127fd(%rip),%rdi        # 1a198 <_ZL14g_handler_lock>
    799b:	4d 01 e7             	add    %r12,%r15
    799e:	e8 fd 4e 00 00       	call   c8a0 <sgx_spin_unlock>
    79a3:	49 83 6d 78 01       	subq   $0x1,0x78(%r13)
    79a8:	eb 13                	jmp    79bd <internal_handle_exception+0x16d>
    79aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    79b0:	49 83 c4 08          	add    $0x8,%r12
    79b4:	4d 39 fc             	cmp    %r15,%r12
    79b7:	0f 84 e7 01 00 00    	je     7ba4 <internal_handle_exception+0x354>
    79bd:	49 8b 04 24          	mov    (%r12),%rax
    79c1:	48 89 df             	mov    %rbx,%rdi
    79c4:	48 33 05 c5 27 01 00 	xor    0x127c5(%rip),%rax        # 1a190 <_ZL12g_veh_cookie>
    79cb:	ff d0                	call   *%rax
    79cd:	83 f8 ff             	cmp    $0xffffffff,%eax
    79d0:	75 de                	jne    79b0 <internal_handle_exception+0x160>
    79d2:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    79d6:	e8 55 fd ff ff       	call   7730 <is_valid_sp>
    79db:	84 c0                	test   %al,%al
    79dd:	75 22                	jne    7a01 <internal_handle_exception+0x1b1>
    79df:	90                   	nop
    79e0:	49 c7 45 78 ff ff ff 	movq   $0xffffffffffffffff,0x78(%r13)
    79e7:	ff 
    79e8:	e8 4a ab 00 00       	call   12537 <abort>
    79ed:	48 8d 3d a4 27 01 00 	lea    0x127a4(%rip),%rdi        # 1a198 <_ZL14g_handler_lock>
    79f4:	e8 a7 4e 00 00       	call   c8a0 <sgx_spin_unlock>
    79f9:	49 c7 45 78 ff ff ff 	movq   $0xffffffffffffffff,0x78(%r13)
    7a00:	ff 
    7a01:	83 bb ac 00 00 00 01 	cmpl   $0x1,0xac(%rbx)
    7a08:	74 12                	je     7a1c <internal_handle_exception+0x1cc>
    7a0a:	4c 89 f7             	mov    %r14,%rdi
    7a0d:	e8 9f a2 00 00       	call   11cb1 <restore_xregs>
    7a12:	48 89 df             	mov    %rbx,%rdi
    7a15:	e8 30 ab 00 00       	call   1254a <continue_execution>
    7a1a:	eb c4                	jmp    79e0 <internal_handle_exception+0x190>
    7a1c:	48 89 df             	mov    %rbx,%rdi
    7a1f:	e8 cc ed ff ff       	call   67f0 <sgx_apply_mitigations>
    7a24:	4c 89 f7             	mov    %r14,%rdi
    7a27:	e8 85 a2 00 00       	call   11cb1 <restore_xregs>
    7a2c:	e8 12 a7 00 00       	call   12143 <get_thread_data>
    7a31:	49 89 c6             	mov    %rax,%r14
    7a34:	48 8b 40 10          	mov    0x10(%rax),%rax
    7a38:	49 89 c4             	mov    %rax,%r12
    7a3b:	49 81 e4 00 f0 ff ff 	and    $0xfffffffffffff000,%r12
    7a42:	48 3d ff 0f 00 00    	cmp    $0xfff,%rax
    7a48:	77 07                	ja     7a51 <internal_handle_exception+0x201>
    7a4a:	4c 8d a0 00 f0 ff ff 	lea    -0x1000(%rax),%r12
    7a51:	48 89 d8             	mov    %rbx,%rax
    7a54:	49 8b 4e 18          	mov    0x18(%r14),%rcx
    7a58:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    7a5e:	4c 39 e0             	cmp    %r12,%rax
    7a61:	0f 84 93 01 00 00    	je     7bfa <internal_handle_exception+0x3aa>
    7a67:	48 05 00 10 00 00    	add    $0x1000,%rax
    7a6d:	48 83 c8 01          	or     $0x1,%rax
    7a71:	49 89 c4             	mov    %rax,%r12
    7a74:	48 8b 83 88 00 00 00 	mov    0x88(%rbx),%rax
    7a7b:	49 89 c7             	mov    %rax,%r15
    7a7e:	48 c1 e8 0b          	shr    $0xb,%rax
    7a82:	48 89 c1             	mov    %rax,%rcx
    7a85:	49 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%r15
    7a8c:	81 e1 fe 0f 00 00    	and    $0xffe,%ecx
    7a92:	48 03 0d 4f 05 01 00 	add    0x1054f(%rip),%rcx        # 17fe8 <_GLOBAL_OFFSET_TABLE_+0x30>
    7a99:	44 0f b7 09          	movzwl (%rcx),%r9d
    7a9d:	4b 8d 14 39          	lea    (%r9,%r15,1),%rdx
    7aa1:	80 3a c3             	cmpb   $0xc3,(%rdx)
    7aa4:	74 3b                	je     7ae1 <internal_handle_exception+0x291>
    7aa6:	4d 89 f9             	mov    %r15,%r9
    7aa9:	49 8d 87 00 10 00 00 	lea    0x1000(%r15),%rax
    7ab0:	eb 13                	jmp    7ac5 <internal_handle_exception+0x275>
    7ab2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7ab8:	49 83 c1 01          	add    $0x1,%r9
    7abc:	4c 39 c8             	cmp    %r9,%rax
    7abf:	0f 84 5f 01 00 00    	je     7c24 <internal_handle_exception+0x3d4>
    7ac5:	41 80 39 c3          	cmpb   $0xc3,(%r9)
    7ac9:	75 ed                	jne    7ab8 <internal_handle_exception+0x268>
    7acb:	4c 39 c8             	cmp    %r9,%rax
    7ace:	0f 84 50 01 00 00    	je     7c24 <internal_handle_exception+0x3d4>
    7ad4:	44 89 c8             	mov    %r9d,%eax
    7ad7:	4c 89 ca             	mov    %r9,%rdx
    7ada:	66 25 ff 0f          	and    $0xfff,%ax
    7ade:	66 89 01             	mov    %ax,(%rcx)
    7ae1:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
    7ae5:	48 89 df             	mov    %rbx,%rdi
    7ae8:	48 89 55 a0          	mov    %rdx,-0x60(%rbp)
    7aec:	e8 0f ca ff ff       	call   4500 <ct_decode>
    7af1:	4d 89 e0             	mov    %r12,%r8
    7af4:	be 01 00 00 00       	mov    $0x1,%esi
    7af9:	49 83 e0 fe          	and    $0xfffffffffffffffe,%r8
    7afd:	4c 63 c8             	movslq %eax,%r9
    7b00:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    7b04:	4c 89 c1             	mov    %r8,%rcx
    7b07:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
    7b0b:	49 83 f9 01          	cmp    $0x1,%r9
    7b0f:	48 0f 44 c8          	cmove  %rax,%rcx
    7b13:	49 83 f9 02          	cmp    $0x2,%r9
    7b17:	48 0f 44 c8          	cmove  %rax,%rcx
    7b1b:	48 89 cf             	mov    %rcx,%rdi
    7b1e:	4c 89 4d b0          	mov    %r9,-0x50(%rbp)
    7b22:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
    7b26:	e8 d5 e0 ff ff       	call   5c00 <sgx_is_within_enclave>
    7b2b:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
    7b2f:	4c 8b 45 a8          	mov    -0x58(%rbp),%r8
    7b33:	85 c0                	test   %eax,%eax
    7b35:	4c 8b 4d b0          	mov    -0x50(%rbp),%r9
    7b39:	48 98                	cltq   
    7b3b:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
    7b3f:	4c 0f 45 c1          	cmovne %rcx,%r8
    7b43:	4c 89 f9             	mov    %r15,%rcx
    7b46:	48 83 c9 01          	or     $0x1,%rcx
    7b4a:	49 83 f9 02          	cmp    $0x2,%r9
    7b4e:	4c 0f 44 f9          	cmove  %rcx,%r15
    7b52:	4c 89 fe             	mov    %r15,%rsi
    7b55:	48 83 e6 fe          	and    $0xfffffffffffffffe,%rsi
    7b59:	48 83 f8 01          	cmp    $0x1,%rax
    7b5d:	49 0f 44 f7          	cmove  %r15,%rsi
    7b61:	41 83 ae bc 00 00 00 	subl   $0x1,0xbc(%r14)
    7b68:	01 
    7b69:	78 57                	js     7bc2 <internal_handle_exception+0x372>
    7b6b:	41 8b 8e b8 00 00 00 	mov    0xb8(%r14),%ecx
    7b72:	49 89 d1             	mov    %rdx,%r9
    7b75:	48 89 df             	mov    %rbx,%rdi
    7b78:	4c 89 e2             	mov    %r12,%rdx
    7b7b:	89 c8                	mov    %ecx,%eax
    7b7d:	c1 e1 04             	shl    $0x4,%ecx
    7b80:	d1 e8                	shr    %eax
    7b82:	83 e1 10             	and    $0x10,%ecx
    7b85:	48 09 f1             	or     %rsi,%rcx
    7b88:	41 89 86 b8 00 00 00 	mov    %eax,0xb8(%r14)
    7b8f:	49 8b 76 20          	mov    0x20(%r14),%rsi
    7b93:	48 81 c6 a7 00 00 00 	add    $0xa7,%rsi
    7b9a:	e8 61 a2 00 00       	call   11e00 <constant_time_apply_sgxstep_mitigation_and_continue_execution>
    7b9f:	e9 3c fe ff ff       	jmp    79e0 <internal_handle_exception+0x190>
    7ba4:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    7ba8:	e8 83 fb ff ff       	call   7730 <is_valid_sp>
    7bad:	84 c0                	test   %al,%al
    7baf:	0f 84 2b fe ff ff    	je     79e0 <internal_handle_exception+0x190>
    7bb5:	49 c7 45 78 ff ff ff 	movq   $0xffffffffffffffff,0x78(%r13)
    7bbc:	ff 
    7bbd:	e9 3f fe ff ff       	jmp    7a01 <internal_handle_exception+0x1b1>
    7bc2:	49 8d be b8 00 00 00 	lea    0xb8(%r14),%rdi
    7bc9:	48 89 75 a8          	mov    %rsi,-0x58(%rbp)
    7bcd:	4c 89 45 b0          	mov    %r8,-0x50(%rbp)
    7bd1:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    7bd5:	e8 3a a9 00 00       	call   12514 <do_rdrand>
    7bda:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    7bde:	4c 8b 45 b0          	mov    -0x50(%rbp),%r8
    7be2:	85 c0                	test   %eax,%eax
    7be4:	48 8b 75 a8          	mov    -0x58(%rbp),%rsi
    7be8:	74 46                	je     7c30 <internal_handle_exception+0x3e0>
    7bea:	41 c7 86 bc 00 00 00 	movl   $0x1f,0xbc(%r14)
    7bf1:	1f 00 00 00 
    7bf5:	e9 71 ff ff ff       	jmp    7b6b <internal_handle_exception+0x31b>
    7bfa:	48 81 e1 00 f0 ff ff 	and    $0xfffffffffffff000,%rcx
    7c01:	4c 39 e1             	cmp    %r12,%rcx
    7c04:	0f 84 6a fe ff ff    	je     7a74 <internal_handle_exception+0x224>
    7c0a:	49 83 cc 01          	or     $0x1,%r12
    7c0e:	e9 61 fe ff ff       	jmp    7a74 <internal_handle_exception+0x224>
    7c13:	48 8d 3d 7e 25 01 00 	lea    0x1257e(%rip),%rdi        # 1a198 <_ZL14g_handler_lock>
    7c1a:	e8 81 4c 00 00       	call   c8a0 <sgx_spin_unlock>
    7c1f:	e9 bc fd ff ff       	jmp    79e0 <internal_handle_exception+0x190>
    7c24:	48 8d 15 cc a4 00 00 	lea    0xa4cc(%rip),%rdx        # 120f7 <__ct_mitigation_ret>
    7c2b:	e9 b1 fe ff ff       	jmp    7ae1 <internal_handle_exception+0x291>
    7c30:	49 c7 46 78 ff ff ff 	movq   $0xffffffffffffffff,0x78(%r14)
    7c37:	ff 
    7c38:	e8 fa a8 00 00       	call   12537 <abort>
    7c3d:	0f 1f 00             	nopl   (%rax)

0000000000007c40 <sgx_register_exception_handler>:
    7c40:	f3 0f 1e fa          	endbr64 
    7c44:	41 55                	push   %r13
    7c46:	41 54                	push   %r12
    7c48:	41 89 fc             	mov    %edi,%r12d
    7c4b:	55                   	push   %rbp
    7c4c:	48 89 f5             	mov    %rsi,%rbp
    7c4f:	53                   	push   %rbx
    7c50:	48 83 ec 18          	sub    $0x18,%rsp
    7c54:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    7c5b:	00 00 
    7c5d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    7c62:	31 c0                	xor    %eax,%eax
    7c64:	48 83 3d 24 25 01 00 	cmpq   $0x0,0x12524(%rip)        # 1a190 <_ZL12g_veh_cookie>
    7c6b:	00 
    7c6c:	0f 84 ae 00 00 00    	je     7d20 <sgx_register_exception_handler+0xe0>
    7c72:	31 f6                	xor    %esi,%esi
    7c74:	48 89 ef             	mov    %rbp,%rdi
    7c77:	e8 84 df ff ff       	call   5c00 <sgx_is_within_enclave>
    7c7c:	85 c0                	test   %eax,%eax
    7c7e:	0f 84 cc 00 00 00    	je     7d50 <sgx_register_exception_handler+0x110>
    7c84:	bf 10 00 00 00       	mov    $0x10,%edi
    7c89:	e8 42 55 00 00       	call   d1d0 <dlmalloc>
    7c8e:	48 89 c3             	mov    %rax,%rbx
    7c91:	48 85 c0             	test   %rax,%rax
    7c94:	0f 84 b6 00 00 00    	je     7d50 <sgx_register_exception_handler+0x110>
    7c9a:	48 33 2d ef 24 01 00 	xor    0x124ef(%rip),%rbp        # 1a190 <_ZL12g_veh_cookie>
    7ca1:	4c 8d 2d f0 24 01 00 	lea    0x124f0(%rip),%r13        # 1a198 <_ZL14g_handler_lock>
    7ca8:	48 89 28             	mov    %rbp,(%rax)
    7cab:	4c 89 ef             	mov    %r13,%rdi
    7cae:	e8 5d 4b 00 00       	call   c810 <sgx_spin_lock>
    7cb3:	48 8b 15 e6 24 01 00 	mov    0x124e6(%rip),%rdx        # 1a1a0 <_ZL12g_first_node>
    7cba:	45 85 e4             	test   %r12d,%r12d
    7cbd:	75 29                	jne    7ce8 <sgx_register_exception_handler+0xa8>
    7cbf:	48 85 d2             	test   %rdx,%rdx
    7cc2:	74 24                	je     7ce8 <sgx_register_exception_handler+0xa8>
    7cc4:	0f 1f 40 00          	nopl   0x0(%rax)
    7cc8:	48 89 d0             	mov    %rdx,%rax
    7ccb:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    7ccf:	48 85 d2             	test   %rdx,%rdx
    7cd2:	75 f4                	jne    7cc8 <sgx_register_exception_handler+0x88>
    7cd4:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
    7cdb:	00 
    7cdc:	48 89 58 08          	mov    %rbx,0x8(%rax)
    7ce0:	eb 11                	jmp    7cf3 <sgx_register_exception_handler+0xb3>
    7ce2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7ce8:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    7cec:	48 89 1d ad 24 01 00 	mov    %rbx,0x124ad(%rip)        # 1a1a0 <_ZL12g_first_node>
    7cf3:	4c 89 ef             	mov    %r13,%rdi
    7cf6:	e8 a5 4b 00 00       	call   c8a0 <sgx_spin_unlock>
    7cfb:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    7d00:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    7d07:	00 00 
    7d09:	75 7e                	jne    7d89 <sgx_register_exception_handler+0x149>
    7d0b:	48 83 c4 18          	add    $0x18,%rsp
    7d0f:	48 89 d8             	mov    %rbx,%rax
    7d12:	5b                   	pop    %rbx
    7d13:	5d                   	pop    %rbp
    7d14:	41 5c                	pop    %r12
    7d16:	41 5d                	pop    %r13
    7d18:	c3                   	ret    
    7d19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7d20:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    7d27:	00 
    7d28:	48 89 e3             	mov    %rsp,%rbx
    7d2b:	eb 0a                	jmp    7d37 <sgx_register_exception_handler+0xf7>
    7d2d:	0f 1f 00             	nopl   (%rax)
    7d30:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
    7d35:	75 21                	jne    7d58 <sgx_register_exception_handler+0x118>
    7d37:	be 08 00 00 00       	mov    $0x8,%esi
    7d3c:	48 89 df             	mov    %rbx,%rdi
    7d3f:	e8 bc e0 ff ff       	call   5e00 <sgx_read_rand>
    7d44:	85 c0                	test   %eax,%eax
    7d46:	74 e8                	je     7d30 <sgx_register_exception_handler+0xf0>
    7d48:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    7d4f:	00 
    7d50:	31 db                	xor    %ebx,%ebx
    7d52:	eb a7                	jmp    7cfb <sgx_register_exception_handler+0xbb>
    7d54:	0f 1f 40 00          	nopl   0x0(%rax)
    7d58:	4c 8d 2d 39 24 01 00 	lea    0x12439(%rip),%r13        # 1a198 <_ZL14g_handler_lock>
    7d5f:	4c 89 ef             	mov    %r13,%rdi
    7d62:	e8 a9 4a 00 00       	call   c810 <sgx_spin_lock>
    7d67:	48 83 3d 21 24 01 00 	cmpq   $0x0,0x12421(%rip)        # 1a190 <_ZL12g_veh_cookie>
    7d6e:	00 
    7d6f:	75 0b                	jne    7d7c <sgx_register_exception_handler+0x13c>
    7d71:	48 8b 04 24          	mov    (%rsp),%rax
    7d75:	48 89 05 14 24 01 00 	mov    %rax,0x12414(%rip)        # 1a190 <_ZL12g_veh_cookie>
    7d7c:	4c 89 ef             	mov    %r13,%rdi
    7d7f:	e8 1c 4b 00 00       	call   c8a0 <sgx_spin_unlock>
    7d84:	e9 e9 fe ff ff       	jmp    7c72 <sgx_register_exception_handler+0x32>
    7d89:	e8 72 8d 00 00       	call   10b00 <__stack_chk_fail>
    7d8e:	66 90                	xchg   %ax,%ax

0000000000007d90 <sgx_unregister_exception_handler>:
    7d90:	f3 0f 1e fa          	endbr64 
    7d94:	48 85 ff             	test   %rdi,%rdi
    7d97:	0f 84 9b 00 00 00    	je     7e38 <sgx_unregister_exception_handler+0xa8>
    7d9d:	55                   	push   %rbp
    7d9e:	48 8d 2d f3 23 01 00 	lea    0x123f3(%rip),%rbp        # 1a198 <_ZL14g_handler_lock>
    7da5:	53                   	push   %rbx
    7da6:	48 89 fb             	mov    %rdi,%rbx
    7da9:	48 89 ef             	mov    %rbp,%rdi
    7dac:	48 83 ec 08          	sub    $0x8,%rsp
    7db0:	e8 5b 4a 00 00       	call   c810 <sgx_spin_lock>
    7db5:	48 8b 05 e4 23 01 00 	mov    0x123e4(%rip),%rax        # 1a1a0 <_ZL12g_first_node>
    7dbc:	48 85 c0             	test   %rax,%rax
    7dbf:	74 20                	je     7de1 <sgx_unregister_exception_handler+0x51>
    7dc1:	48 39 d8             	cmp    %rbx,%rax
    7dc4:	75 0f                	jne    7dd5 <sgx_unregister_exception_handler+0x45>
    7dc6:	eb 58                	jmp    7e20 <sgx_unregister_exception_handler+0x90>
    7dc8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    7dcf:	00 
    7dd0:	48 39 d8             	cmp    %rbx,%rax
    7dd3:	74 23                	je     7df8 <sgx_unregister_exception_handler+0x68>
    7dd5:	48 89 c2             	mov    %rax,%rdx
    7dd8:	48 8b 40 08          	mov    0x8(%rax),%rax
    7ddc:	48 85 c0             	test   %rax,%rax
    7ddf:	75 ef                	jne    7dd0 <sgx_unregister_exception_handler+0x40>
    7de1:	48 89 ef             	mov    %rbp,%rdi
    7de4:	e8 b7 4a 00 00       	call   c8a0 <sgx_spin_unlock>
    7de9:	48 83 c4 08          	add    $0x8,%rsp
    7ded:	31 c0                	xor    %eax,%eax
    7def:	5b                   	pop    %rbx
    7df0:	5d                   	pop    %rbp
    7df1:	c3                   	ret    
    7df2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7df8:	48 8b 43 08          	mov    0x8(%rbx),%rax
    7dfc:	48 89 ef             	mov    %rbp,%rdi
    7dff:	48 89 42 08          	mov    %rax,0x8(%rdx)
    7e03:	e8 98 4a 00 00       	call   c8a0 <sgx_spin_unlock>
    7e08:	48 89 df             	mov    %rbx,%rdi
    7e0b:	e8 b0 71 00 00       	call   efc0 <dlfree>
    7e10:	48 83 c4 08          	add    $0x8,%rsp
    7e14:	b8 01 00 00 00       	mov    $0x1,%eax
    7e19:	5b                   	pop    %rbx
    7e1a:	5d                   	pop    %rbp
    7e1b:	c3                   	ret    
    7e1c:	0f 1f 40 00          	nopl   0x0(%rax)
    7e20:	48 8b 43 08          	mov    0x8(%rbx),%rax
    7e24:	48 89 ef             	mov    %rbp,%rdi
    7e27:	48 89 05 72 23 01 00 	mov    %rax,0x12372(%rip)        # 1a1a0 <_ZL12g_first_node>
    7e2e:	e8 6d 4a 00 00       	call   c8a0 <sgx_spin_unlock>
    7e33:	eb d3                	jmp    7e08 <sgx_unregister_exception_handler+0x78>
    7e35:	0f 1f 00             	nopl   (%rax)
    7e38:	31 c0                	xor    %eax,%eax
    7e3a:	c3                   	ret    
    7e3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000007e40 <trts_handle_exception>:
    7e40:	f3 0f 1e fa          	endbr64 
    7e44:	41 57                	push   %r15
    7e46:	41 56                	push   %r14
    7e48:	41 55                	push   %r13
    7e4a:	41 54                	push   %r12
    7e4c:	55                   	push   %rbp
    7e4d:	53                   	push   %rbx
    7e4e:	48 89 fb             	mov    %rdi,%rbx
    7e51:	48 83 ec 08          	sub    $0x8,%rsp
    7e55:	e8 e9 a2 00 00       	call   12143 <get_thread_data>
    7e5a:	48 85 c0             	test   %rax,%rax
    7e5d:	48 89 c5             	mov    %rax,%rbp
    7e60:	0f 94 c2             	sete   %dl
    7e63:	48 85 db             	test   %rbx,%rbx
    7e66:	0f 94 c0             	sete   %al
    7e69:	08 c2                	or     %al,%dl
    7e6b:	75 33                	jne    7ea0 <trts_handle_exception+0x60>
    7e6d:	48 89 df             	mov    %rbx,%rdi
    7e70:	41 89 d4             	mov    %edx,%r12d
    7e73:	e8 b8 e0 ff ff       	call   5f30 <check_static_stack_canary>
    7e78:	85 c0                	test   %eax,%eax
    7e7a:	75 24                	jne    7ea0 <trts_handle_exception+0x60>
    7e7c:	e8 83 a2 00 00       	call   12104 <get_enclave_state>
    7e81:	83 f8 02             	cmp    $0x2,%eax
    7e84:	75 1a                	jne    7ea0 <trts_handle_exception+0x60>
    7e86:	48 83 7d 78 ff       	cmpq   $0xffffffffffffffff,0x78(%rbp)
    7e8b:	74 13                	je     7ea0 <trts_handle_exception+0x60>
    7e8d:	48 8b 45 10          	mov    0x10(%rbp),%rax
    7e91:	48 05 00 04 01 00    	add    $0x10400,%rax
    7e97:	48 39 c3             	cmp    %rax,%rbx
    7e9a:	74 24                	je     7ec0 <trts_handle_exception+0x80>
    7e9c:	0f 1f 40 00          	nopl   0x0(%rax)
    7ea0:	bf 03 00 00 00       	mov    $0x3,%edi
    7ea5:	e8 6b a2 00 00       	call   12115 <set_enclave_state>
    7eaa:	b8 06 10 00 00       	mov    $0x1006,%eax
    7eaf:	48 83 c4 08          	add    $0x8,%rsp
    7eb3:	5b                   	pop    %rbx
    7eb4:	5d                   	pop    %rbp
    7eb5:	41 5c                	pop    %r12
    7eb7:	41 5d                	pop    %r13
    7eb9:	41 5e                	pop    %r14
    7ebb:	41 5f                	pop    %r15
    7ebd:	c3                   	ret    
    7ebe:	66 90                	xchg   %ax,%ax
    7ec0:	4c 8b 6d 20          	mov    0x20(%rbp),%r13
    7ec4:	e8 37 f9 ff ff       	call   7800 <get_xsave_size>
    7ec9:	48 05 b7 10 00 00    	add    $0x10b7,%rax
    7ecf:	49 81 e5 00 f0 ff ff 	and    $0xfffffffffffff000,%r13
    7ed6:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    7edc:	49 29 c5             	sub    %rax,%r13
    7edf:	4c 39 eb             	cmp    %r13,%rbx
    7ee2:	75 bc                	jne    7ea0 <trts_handle_exception+0x60>
    7ee4:	4c 8b 6d 20          	mov    0x20(%rbp),%r13
    7ee8:	be 08 00 00 00       	mov    $0x8,%esi
    7eed:	4d 8b b5 90 00 00 00 	mov    0x90(%r13),%r14
    7ef4:	4c 89 f7             	mov    %r14,%rdi
    7ef7:	e8 64 dd ff ff       	call   5c60 <sgx_is_outside_enclave>
    7efc:	85 c0                	test   %eax,%eax
    7efe:	0f 84 ec 01 00 00    	je     80f0 <trts_handle_exception+0x2b0>
    7f04:	49 8b 5d 20          	mov    0x20(%r13),%rbx
    7f08:	49 39 de             	cmp    %rbx,%r14
    7f0b:	0f 84 df 01 00 00    	je     80f0 <trts_handle_exception+0x2b0>
    7f11:	31 f6                	xor    %esi,%esi
    7f13:	48 89 df             	mov    %rbx,%rdi
    7f16:	e8 d5 f7 ff ff       	call   76f0 <is_stack_addr>
    7f1b:	84 c0                	test   %al,%al
    7f1d:	0f 84 cd 01 00 00    	je     80f0 <trts_handle_exception+0x2b0>
    7f23:	48 8b 45 38          	mov    0x38(%rbp),%rax
    7f27:	48 8d b0 b8 01 00 00 	lea    0x1b8(%rax),%rsi
    7f2e:	48 29 f3             	sub    %rsi,%rbx
    7f31:	48 83 e3 c0          	and    $0xffffffffffffffc0,%rbx
    7f35:	48 89 df             	mov    %rbx,%rdi
    7f38:	e8 b3 f7 ff ff       	call   76f0 <is_stack_addr>
    7f3d:	84 c0                	test   %al,%al
    7f3f:	0f 84 ab 01 00 00    	je     80f0 <trts_handle_exception+0x2b0>
    7f45:	4c 8d 7b f8          	lea    -0x8(%rbx),%r15
    7f49:	be 08 00 00 00       	mov    $0x8,%esi
    7f4e:	4c 89 ff             	mov    %r15,%rdi
    7f51:	e8 9a f7 ff ff       	call   76f0 <is_stack_addr>
    7f56:	41 89 c6             	mov    %eax,%r14d
    7f59:	84 c0                	test   %al,%al
    7f5b:	0f 84 8f 01 00 00    	je     80f0 <trts_handle_exception+0x2b0>
    7f61:	48 8b bd b0 00 00 00 	mov    0xb0(%rbp),%rdi
    7f68:	49 39 ff             	cmp    %rdi,%r15
    7f6b:	0f 83 93 01 00 00    	jae    8104 <trts_handle_exception+0x2c4>
    7f71:	4c 8d a7 ff 0f 00 00 	lea    0xfff(%rdi),%r12
    7f78:	4d 29 fc             	sub    %r15,%r12
    7f7b:	49 81 e4 00 f0 ff ff 	and    $0xfffffffffffff000,%r12
    7f82:	49 39 fc             	cmp    %rdi,%r12
    7f85:	0f 83 65 01 00 00    	jae    80f0 <trts_handle_exception+0x2b0>
    7f8b:	4c 29 e7             	sub    %r12,%rdi
    7f8e:	48 3b 7d 18          	cmp    0x18(%rbp),%rdi
    7f92:	0f 82 58 01 00 00    	jb     80f0 <trts_handle_exception+0x2b0>
    7f98:	4d 85 e4             	test   %r12,%r12
    7f9b:	0f 84 4f 01 00 00    	je     80f0 <trts_handle_exception+0x2b0>
    7fa1:	4c 89 e6             	mov    %r12,%rsi
    7fa4:	e8 b7 3a 00 00       	call   ba60 <mm_commit>
    7fa9:	85 c0                	test   %eax,%eax
    7fab:	0f 85 3f 01 00 00    	jne    80f0 <trts_handle_exception+0x2b0>
    7fb1:	48 8d 05 5c fe 00 00 	lea    0xfe5c(%rip),%rax        # 17e14 <g_aexnotify_supported>
    7fb8:	4c 29 a5 b0 00 00 00 	sub    %r12,0xb0(%rbp)
    7fbf:	45 89 f4             	mov    %r14d,%r12d
    7fc2:	8b 08                	mov    (%rax),%ecx
    7fc4:	31 c0                	xor    %eax,%eax
    7fc6:	89 83 a8 00 00 00    	mov    %eax,0xa8(%rbx)
    7fcc:	41 0f b6 85 a0 00 00 	movzbl 0xa0(%r13),%eax
    7fd3:	00 
    7fd4:	89 83 90 00 00 00    	mov    %eax,0x90(%rbx)
    7fda:	41 0f b6 95 a1 00 00 	movzbl 0xa1(%r13),%edx
    7fe1:	00 
    7fe2:	83 e8 0d             	sub    $0xd,%eax
    7fe5:	83 e2 07             	and    $0x7,%edx
    7fe8:	89 93 94 00 00 00    	mov    %edx,0x94(%rbx)
    7fee:	48 8b 55 38          	mov    0x38(%rbp),%rdx
    7ff2:	48 89 93 b0 00 00 00 	mov    %rdx,0xb0(%rbx)
    7ff9:	49 8b 55 00          	mov    0x0(%r13),%rdx
    7ffd:	48 89 13             	mov    %rdx,(%rbx)
    8000:	49 8b 55 08          	mov    0x8(%r13),%rdx
    8004:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    8008:	49 8b 55 10          	mov    0x10(%r13),%rdx
    800c:	48 89 53 10          	mov    %rdx,0x10(%rbx)
    8010:	49 8b 55 18          	mov    0x18(%r13),%rdx
    8014:	48 89 53 18          	mov    %rdx,0x18(%rbx)
    8018:	49 8b 55 20          	mov    0x20(%r13),%rdx
    801c:	48 89 53 20          	mov    %rdx,0x20(%rbx)
    8020:	49 8b 55 28          	mov    0x28(%r13),%rdx
    8024:	48 89 53 28          	mov    %rdx,0x28(%rbx)
    8028:	49 8b 55 30          	mov    0x30(%r13),%rdx
    802c:	48 89 53 30          	mov    %rdx,0x30(%rbx)
    8030:	49 8b 55 38          	mov    0x38(%r13),%rdx
    8034:	48 89 53 38          	mov    %rdx,0x38(%rbx)
    8038:	49 8b 95 80 00 00 00 	mov    0x80(%r13),%rdx
    803f:	48 89 93 80 00 00 00 	mov    %rdx,0x80(%rbx)
    8046:	49 8b 95 88 00 00 00 	mov    0x88(%r13),%rdx
    804d:	48 89 93 88 00 00 00 	mov    %rdx,0x88(%rbx)
    8054:	49 8b 75 40          	mov    0x40(%r13),%rsi
    8058:	48 89 73 40          	mov    %rsi,0x40(%rbx)
    805c:	49 8b 75 48          	mov    0x48(%r13),%rsi
    8060:	48 89 73 48          	mov    %rsi,0x48(%rbx)
    8064:	49 8b 75 50          	mov    0x50(%r13),%rsi
    8068:	48 89 73 50          	mov    %rsi,0x50(%rbx)
    806c:	49 8b 75 58          	mov    0x58(%r13),%rsi
    8070:	48 89 73 58          	mov    %rsi,0x58(%rbx)
    8074:	49 8b 75 60          	mov    0x60(%r13),%rsi
    8078:	48 89 73 60          	mov    %rsi,0x60(%rbx)
    807c:	49 8b 75 68          	mov    0x68(%r13),%rsi
    8080:	48 89 73 68          	mov    %rsi,0x68(%rbx)
    8084:	49 8b 75 70          	mov    0x70(%r13),%rsi
    8088:	48 89 73 70          	mov    %rsi,0x70(%rbx)
    808c:	49 8b 75 78          	mov    0x78(%r13),%rsi
    8090:	48 89 73 78          	mov    %rsi,0x78(%rbx)
    8094:	83 f8 01             	cmp    $0x1,%eax
    8097:	77 15                	ja     80ae <trts_handle_exception+0x26e>
    8099:	49 8b 45 f0          	mov    -0x10(%r13),%rax
    809d:	48 89 83 98 00 00 00 	mov    %rax,0x98(%rbx)
    80a4:	41 8b 45 f8          	mov    -0x8(%r13),%eax
    80a8:	89 83 a0 00 00 00    	mov    %eax,0xa0(%rbx)
    80ae:	85 c9                	test   %ecx,%ecx
    80b0:	0f 85 99 00 00 00    	jne    814f <trts_handle_exception+0x30f>
    80b6:	45 84 e4             	test   %r12b,%r12b
    80b9:	0f 85 ec 00 00 00    	jne    81ab <trts_handle_exception+0x36b>
    80bf:	48 8d 05 8a f7 ff ff 	lea    -0x876(%rip),%rax        # 7850 <internal_handle_exception>
    80c6:	4d 89 7d 20          	mov    %r15,0x20(%r13)
    80ca:	49 89 85 88 00 00 00 	mov    %rax,0x88(%r13)
    80d1:	49 89 5d 00          	mov    %rbx,0x0(%r13)
    80d5:	49 89 5d 38          	mov    %rbx,0x38(%r13)
    80d9:	48 8b 83 88 00 00 00 	mov    0x88(%rbx),%rax
    80e0:	48 89 43 f8          	mov    %rax,-0x8(%rbx)
    80e4:	31 c0                	xor    %eax,%eax
    80e6:	e9 c4 fd ff ff       	jmp    7eaf <trts_handle_exception+0x6f>
    80eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    80f0:	bf 03 00 00 00       	mov    $0x3,%edi
    80f5:	e8 1b a0 00 00       	call   12115 <set_enclave_state>
    80fa:	b8 09 10 00 00       	mov    $0x1009,%eax
    80ff:	e9 ab fd ff ff       	jmp    7eaf <trts_handle_exception+0x6f>
    8104:	48 8d 15 09 fd 00 00 	lea    0xfd09(%rip),%rdx        # 17e14 <g_aexnotify_supported>
    810b:	49 8b 85 88 00 00 00 	mov    0x88(%r13),%rax
    8112:	48 3b 05 c7 fe 00 00 	cmp    0xfec7(%rip),%rax        # 17fe0 <_GLOBAL_OFFSET_TABLE_+0x28>
    8119:	8b 0a                	mov    (%rdx),%ecx
    811b:	74 6a                	je     8187 <trts_handle_exception+0x347>
    811d:	48 3b 05 b4 fe 00 00 	cmp    0xfeb4(%rip),%rax        # 17fd8 <_GLOBAL_OFFSET_TABLE_+0x20>
    8124:	0f 84 8c 00 00 00    	je     81b6 <trts_handle_exception+0x376>
    812a:	85 c9                	test   %ecx,%ecx
    812c:	75 0e                	jne    813c <trts_handle_exception+0x2fc>
    812e:	41 80 bd a3 00 00 00 	cmpb   $0x0,0xa3(%r13)
    8135:	00 
    8136:	0f 89 64 fd ff ff    	jns    7ea0 <trts_handle_exception+0x60>
    813c:	41 0f b6 85 a3 00 00 	movzbl 0xa3(%r13),%eax
    8143:	00 
    8144:	c0 e8 07             	shr    $0x7,%al
    8147:	0f b6 c0             	movzbl %al,%eax
    814a:	e9 77 fe ff ff       	jmp    7fc6 <trts_handle_exception+0x186>
    814f:	48 89 53 f8          	mov    %rdx,-0x8(%rbx)
    8153:	e8 c8 f6 ff ff       	call   7820 <get_ssa_aexnotify>
    8158:	48 8b 7d 58          	mov    0x58(%rbp),%rdi
    815c:	89 83 ac 00 00 00    	mov    %eax,0xac(%rbx)
    8162:	e8 4a 9b 00 00       	call   11cb1 <restore_xregs>
    8167:	83 bb ac 00 00 00 01 	cmpl   $0x1,0xac(%rbx)
    816e:	74 76                	je     81e6 <trts_handle_exception+0x3a6>
    8170:	48 8d 15 d9 f6 ff ff 	lea    -0x927(%rip),%rdx        # 7850 <internal_handle_exception>
    8177:	4c 89 fe             	mov    %r15,%rsi
    817a:	48 89 df             	mov    %rbx,%rdi
    817d:	e8 2e a4 00 00       	call   125b0 <second_phase>
    8182:	e9 19 fd ff ff       	jmp    7ea0 <trts_handle_exception+0x60>
    8187:	49 83 7d 00 00       	cmpq   $0x0,0x0(%r13)
    818c:	75 8f                	jne    811d <trts_handle_exception+0x2dd>
    818e:	48 83 c0 03          	add    $0x3,%rax
    8192:	49 83 8d 80 00 00 00 	orq    $0x1,0x80(%r13)
    8199:	01 
    819a:	45 89 f4             	mov    %r14d,%r12d
    819d:	49 89 85 88 00 00 00 	mov    %rax,0x88(%r13)
    81a4:	31 c0                	xor    %eax,%eax
    81a6:	e9 1b fe ff ff       	jmp    7fc6 <trts_handle_exception+0x186>
    81ab:	48 89 53 f8          	mov    %rdx,-0x8(%rbx)
    81af:	31 c0                	xor    %eax,%eax
    81b1:	e9 f9 fc ff ff       	jmp    7eaf <trts_handle_exception+0x6f>
    81b6:	49 83 7d 00 08       	cmpq   $0x8,0x0(%r13)
    81bb:	0f 85 69 ff ff ff    	jne    812a <trts_handle_exception+0x2ea>
    81c1:	48 83 c0 03          	add    $0x3,%rax
    81c5:	49 83 8d 80 00 00 00 	orq    $0x40,0x80(%r13)
    81cc:	40 
    81cd:	45 89 f4             	mov    %r14d,%r12d
    81d0:	49 89 85 88 00 00 00 	mov    %rax,0x88(%r13)
    81d7:	31 c0                	xor    %eax,%eax
    81d9:	49 c7 45 00 01 00 00 	movq   $0x1,0x0(%r13)
    81e0:	00 
    81e1:	e9 e0 fd ff ff       	jmp    7fc6 <trts_handle_exception+0x186>
    81e6:	31 ff                	xor    %edi,%edi
    81e8:	e8 b3 e3 ff ff       	call   65a0 <sgx_set_ssa_aexnotify>
    81ed:	eb 81                	jmp    8170 <trts_handle_exception+0x330>
    81ef:	90                   	nop

00000000000081f0 <get_xfeature_state>:
    81f0:	f3 0f 1e fa          	endbr64 
    81f4:	48 83 ec 08          	sub    $0x8,%rsp
    81f8:	e8 d3 92 00 00       	call   114d0 <sgx_self_report>
    81fd:	31 d2                	xor    %edx,%edx
    81ff:	48 8b 40 38          	mov    0x38(%rax),%rax
    8203:	48 83 f8 03          	cmp    $0x3,%rax
    8207:	0f 95 c2             	setne  %dl
    820a:	89 15 34 1f 01 00    	mov    %edx,0x11f34(%rip)        # 1a144 <g_xsave_enabled>
    8210:	48 83 c4 08          	add    $0x8,%rsp
    8214:	c3                   	ret    
    8215:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    821c:	00 00 00 
    821f:	90                   	nop

0000000000008220 <has_text_relo>:
    8220:	85 d2                	test   %edx,%edx
    8222:	74 5b                	je     827f <has_text_relo+0x5f>
    8224:	89 d2                	mov    %edx,%edx
    8226:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax
    822d:	00 
    822e:	48 29 d0             	sub    %rdx,%rax
    8231:	48 8d 04 c6          	lea    (%rsi,%rax,8),%rax
    8235:	eb 12                	jmp    8249 <has_text_relo+0x29>
    8237:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    823e:	00 00 
    8240:	48 83 c6 38          	add    $0x38,%rsi
    8244:	48 39 c6             	cmp    %rax,%rsi
    8247:	74 36                	je     827f <has_text_relo+0x5f>
    8249:	83 3e 02             	cmpl   $0x2,(%rsi)
    824c:	75 f2                	jne    8240 <has_text_relo+0x20>
    824e:	48 8b 56 20          	mov    0x20(%rsi),%rdx
    8252:	48 03 7e 18          	add    0x18(%rsi),%rdi
    8256:	48 c1 ea 04          	shr    $0x4,%rdx
    825a:	74 23                	je     827f <has_text_relo+0x5f>
    825c:	48 c1 e2 04          	shl    $0x4,%rdx
    8260:	48 01 fa             	add    %rdi,%rdx
    8263:	eb 12                	jmp    8277 <has_text_relo+0x57>
    8265:	0f 1f 00             	nopl   (%rax)
    8268:	48 83 f8 16          	cmp    $0x16,%rax
    826c:	74 1a                	je     8288 <has_text_relo+0x68>
    826e:	48 83 c7 10          	add    $0x10,%rdi
    8272:	48 39 fa             	cmp    %rdi,%rdx
    8275:	74 08                	je     827f <has_text_relo+0x5f>
    8277:	48 8b 07             	mov    (%rdi),%rax
    827a:	48 85 c0             	test   %rax,%rax
    827d:	75 e9                	jne    8268 <has_text_relo+0x48>
    827f:	31 c0                	xor    %eax,%eax
    8281:	c3                   	ret    
    8282:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8288:	b8 01 00 00 00       	mov    $0x1,%eax
    828d:	c3                   	ret    
    828e:	66 90                	xchg   %ax,%ax

0000000000008290 <do_relocs>:
    8290:	49 89 d3             	mov    %rdx,%r11
    8293:	48 8d 14 37          	lea    (%rdi,%rsi,1),%rdx
    8297:	49 01 fb             	add    %rdi,%r11
    829a:	48 85 c9             	test   %rcx,%rcx
    829d:	0f 84 c2 01 00 00    	je     8465 <do_relocs+0x1d5>
    82a3:	55                   	push   %rbp
    82a4:	49 89 c9             	mov    %rcx,%r9
    82a7:	31 f6                	xor    %esi,%esi
    82a9:	4c 8d 05 20 ae 00 00 	lea    0xae20(%rip),%r8        # 130d0 <g_dyn_entry_table+0xa0>
    82b0:	53                   	push   %rbx
    82b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    82b8:	4c 8b 12             	mov    (%rdx),%r10
    82bb:	48 8b 42 08          	mov    0x8(%rdx),%rax
    82bf:	49 01 fa             	add    %rdi,%r10
    82c2:	89 c1                	mov    %eax,%ecx
    82c4:	83 f8 12             	cmp    $0x12,%eax
    82c7:	0f 87 85 00 00 00    	ja     8352 <do_relocs+0xc2>
    82cd:	49 63 0c 88          	movslq (%r8,%rcx,4),%rcx
    82d1:	4c 01 c1             	add    %r8,%rcx
    82d4:	3e ff e1             	notrack jmp *%rcx
    82d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    82de:	00 00 
    82e0:	48 c1 e8 20          	shr    $0x20,%rax
    82e4:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
    82e8:	49 8d 1c c3          	lea    (%r11,%rax,8),%rbx
    82ec:	0f b6 43 04          	movzbl 0x4(%rbx),%eax
    82f0:	c0 e8 04             	shr    $0x4,%al
    82f3:	3c 02                	cmp    $0x2,%al
    82f5:	0f 84 05 01 00 00    	je     8400 <do_relocs+0x170>
    82fb:	48 85 db             	test   %rbx,%rbx
    82fe:	0f 84 8c 00 00 00    	je     8390 <do_relocs+0x100>
    8304:	48 85 ff             	test   %rdi,%rdi
    8307:	74 49                	je     8352 <do_relocs+0xc2>
    8309:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    830f:	75 41                	jne    8352 <do_relocs+0xc2>
    8311:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    8316:	75 3a                	jne    8352 <do_relocs+0xc2>
    8318:	48 89 f8             	mov    %rdi,%rax
    831b:	48 03 47 20          	add    0x20(%rdi),%rax
    831f:	74 31                	je     8352 <do_relocs+0xc2>
    8321:	0f b7 6f 38          	movzwl 0x38(%rdi),%ebp
    8325:	66 85 ed             	test   %bp,%bp
    8328:	74 28                	je     8352 <do_relocs+0xc2>
    832a:	83 ed 01             	sub    $0x1,%ebp
    832d:	48 8d 0c ed 00 00 00 	lea    0x0(,%rbp,8),%rcx
    8334:	00 
    8335:	48 29 e9             	sub    %rbp,%rcx
    8338:	48 8d 4c c8 38       	lea    0x38(%rax,%rcx,8),%rcx
    833d:	0f 1f 00             	nopl   (%rax)
    8340:	83 38 07             	cmpl   $0x7,(%rax)
    8343:	0f 84 e7 00 00 00    	je     8430 <do_relocs+0x1a0>
    8349:	48 83 c0 38          	add    $0x38,%rax
    834d:	48 39 c8             	cmp    %rcx,%rax
    8350:	75 ee                	jne    8340 <do_relocs+0xb0>
    8352:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8357:	5b                   	pop    %rbx
    8358:	5d                   	pop    %rbp
    8359:	c3                   	ret    
    835a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8360:	48 c1 e8 20          	shr    $0x20,%rax
    8364:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
    8368:	49 8d 0c c3          	lea    (%r11,%rax,8),%rcx
    836c:	0f b6 41 04          	movzbl 0x4(%rcx),%eax
    8370:	c0 e8 04             	shr    $0x4,%al
    8373:	3c 02                	cmp    $0x2,%al
    8375:	0f 84 95 00 00 00    	je     8410 <do_relocs+0x180>
    837b:	48 85 c9             	test   %rcx,%rcx
    837e:	74 10                	je     8390 <do_relocs+0x100>
    8380:	48 8b 42 10          	mov    0x10(%rdx),%rax
    8384:	48 01 f8             	add    %rdi,%rax
    8387:	48 03 41 08          	add    0x8(%rcx),%rax
    838b:	49 89 02             	mov    %rax,(%r10)
    838e:	66 90                	xchg   %ax,%ax
    8390:	48 83 c6 01          	add    $0x1,%rsi
    8394:	48 83 c2 18          	add    $0x18,%rdx
    8398:	49 39 f1             	cmp    %rsi,%r9
    839b:	0f 85 17 ff ff ff    	jne    82b8 <do_relocs+0x28>
    83a1:	31 c0                	xor    %eax,%eax
    83a3:	5b                   	pop    %rbx
    83a4:	5d                   	pop    %rbp
    83a5:	c3                   	ret    
    83a6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    83ad:	00 00 00 
    83b0:	48 c1 e8 20          	shr    $0x20,%rax
    83b4:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
    83b8:	49 8d 0c c3          	lea    (%r11,%rax,8),%rcx
    83bc:	0f b6 41 04          	movzbl 0x4(%rcx),%eax
    83c0:	c0 e8 04             	shr    $0x4,%al
    83c3:	3c 02                	cmp    $0x2,%al
    83c5:	74 59                	je     8420 <do_relocs+0x190>
    83c7:	48 85 c9             	test   %rcx,%rcx
    83ca:	74 c4                	je     8390 <do_relocs+0x100>
    83cc:	48 8b 42 10          	mov    0x10(%rdx),%rax
    83d0:	48 03 41 08          	add    0x8(%rcx),%rax
    83d4:	49 89 02             	mov    %rax,(%r10)
    83d7:	eb b7                	jmp    8390 <do_relocs+0x100>
    83d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    83e0:	49 c7 02 01 00 00 00 	movq   $0x1,(%r10)
    83e7:	eb a7                	jmp    8390 <do_relocs+0x100>
    83e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    83f0:	48 8b 42 10          	mov    0x10(%rdx),%rax
    83f4:	48 01 f8             	add    %rdi,%rax
    83f7:	49 89 02             	mov    %rax,(%r10)
    83fa:	eb 94                	jmp    8390 <do_relocs+0x100>
    83fc:	0f 1f 40 00          	nopl   0x0(%rax)
    8400:	48 83 7b 08 00       	cmpq   $0x0,0x8(%rbx)
    8405:	0f 85 f0 fe ff ff    	jne    82fb <do_relocs+0x6b>
    840b:	eb 83                	jmp    8390 <do_relocs+0x100>
    840d:	0f 1f 00             	nopl   (%rax)
    8410:	48 83 79 08 00       	cmpq   $0x0,0x8(%rcx)
    8415:	0f 85 60 ff ff ff    	jne    837b <do_relocs+0xeb>
    841b:	e9 70 ff ff ff       	jmp    8390 <do_relocs+0x100>
    8420:	48 83 79 08 00       	cmpq   $0x0,0x8(%rcx)
    8425:	75 a0                	jne    83c7 <do_relocs+0x137>
    8427:	e9 64 ff ff ff       	jmp    8390 <do_relocs+0x100>
    842c:	0f 1f 40 00          	nopl   0x0(%rax)
    8430:	48 8b 48 28          	mov    0x28(%rax),%rcx
    8434:	48 8b 40 30          	mov    0x30(%rax),%rax
    8438:	48 83 f8 01          	cmp    $0x1,%rax
    843c:	76 0b                	jbe    8449 <do_relocs+0x1b9>
    843e:	48 8d 4c 01 ff       	lea    -0x1(%rcx,%rax,1),%rcx
    8443:	48 f7 d8             	neg    %rax
    8446:	48 21 c1             	and    %rax,%rcx
    8449:	48 85 c9             	test   %rcx,%rcx
    844c:	0f 84 00 ff ff ff    	je     8352 <do_relocs+0xc2>
    8452:	48 8b 42 10          	mov    0x10(%rdx),%rax
    8456:	48 03 43 08          	add    0x8(%rbx),%rax
    845a:	48 29 c8             	sub    %rcx,%rax
    845d:	49 89 02             	mov    %rax,(%r10)
    8460:	e9 2b ff ff ff       	jmp    8390 <do_relocs+0x100>
    8465:	31 c0                	xor    %eax,%eax
    8467:	c3                   	ret    
    8468:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    846f:	00 

0000000000008470 <relocate_enclave>:
    8470:	f3 0f 1e fa          	endbr64 
    8474:	48 85 ff             	test   %rdi,%rdi
    8477:	0f 84 d3 01 00 00    	je     8650 <relocate_enclave+0x1e0>
    847d:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    8483:	0f 85 c7 01 00 00    	jne    8650 <relocate_enclave+0x1e0>
    8489:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    848e:	0f 85 bc 01 00 00    	jne    8650 <relocate_enclave+0x1e0>
    8494:	41 57                	push   %r15
    8496:	41 56                	push   %r14
    8498:	41 55                	push   %r13
    849a:	41 54                	push   %r12
    849c:	55                   	push   %rbp
    849d:	53                   	push   %rbx
    849e:	48 89 fb             	mov    %rdi,%rbx
    84a1:	48 83 ec 08          	sub    $0x8,%rsp
    84a5:	48 03 5f 20          	add    0x20(%rdi),%rbx
    84a9:	0f 84 fd 00 00 00    	je     85ac <relocate_enclave+0x13c>
    84af:	0f b7 57 38          	movzwl 0x38(%rdi),%edx
    84b3:	66 85 d2             	test   %dx,%dx
    84b6:	0f 84 c4 01 00 00    	je     8680 <relocate_enclave+0x210>
    84bc:	83 ea 01             	sub    $0x1,%edx
    84bf:	48 8d 2d 56 ac 00 00 	lea    0xac56(%rip),%rbp        # 1311c <g_dyn_entry_table+0xec>
    84c6:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax
    84cd:	00 
    84ce:	48 29 d0             	sub    %rdx,%rax
    84d1:	4c 8d 64 c3 38       	lea    0x38(%rbx,%rax,8),%r12
    84d6:	eb 15                	jmp    84ed <relocate_enclave+0x7d>
    84d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    84df:	00 
    84e0:	48 83 c3 38          	add    $0x38,%rbx
    84e4:	49 39 dc             	cmp    %rbx,%r12
    84e7:	0f 84 93 01 00 00    	je     8680 <relocate_enclave+0x210>
    84ed:	83 3b 02             	cmpl   $0x2,(%rbx)
    84f0:	75 ee                	jne    84e0 <relocate_enclave+0x70>
    84f2:	48 8b 53 18          	mov    0x18(%rbx),%rdx
    84f6:	4c 8b 53 20          	mov    0x20(%rbx),%r10
    84fa:	48 01 fa             	add    %rdi,%rdx
    84fd:	49 c1 ea 04          	shr    $0x4,%r10
    8501:	74 dd                	je     84e0 <relocate_enclave+0x70>
    8503:	49 c1 e2 04          	shl    $0x4,%r10
    8507:	45 31 f6             	xor    %r14d,%r14d
    850a:	45 31 ed             	xor    %r13d,%r13d
    850d:	31 c0                	xor    %eax,%eax
    850f:	49 01 d2             	add    %rdx,%r10
    8512:	45 31 ff             	xor    %r15d,%r15d
    8515:	45 31 c9             	xor    %r9d,%r9d
    8518:	45 31 c0             	xor    %r8d,%r8d
    851b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8520:	48 8b 32             	mov    (%rdx),%rsi
    8523:	48 85 f6             	test   %rsi,%rsi
    8526:	74 30                	je     8558 <relocate_enclave+0xe8>
    8528:	48 83 fe 17          	cmp    $0x17,%rsi
    852c:	77 1a                	ja     8548 <relocate_enclave+0xd8>
    852e:	48 63 74 b5 00       	movslq 0x0(%rbp,%rsi,4),%rsi
    8533:	48 01 ee             	add    %rbp,%rsi
    8536:	3e ff e6             	notrack jmp *%rsi
    8539:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8540:	4c 8b 42 08          	mov    0x8(%rdx),%r8
    8544:	0f 1f 40 00          	nopl   0x0(%rax)
    8548:	48 83 c2 10          	add    $0x10,%rdx
    854c:	49 39 d2             	cmp    %rdx,%r10
    854f:	75 cf                	jne    8520 <relocate_enclave+0xb0>
    8551:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8558:	4d 85 c9             	test   %r9,%r9
    855b:	0f 84 ff 00 00 00    	je     8660 <relocate_enclave+0x1f0>
    8561:	4d 85 ed             	test   %r13,%r13
    8564:	74 46                	je     85ac <relocate_enclave+0x13c>
    8566:	31 d2                	xor    %edx,%edx
    8568:	4c 89 ce             	mov    %r9,%rsi
    856b:	4c 89 04 24          	mov    %r8,(%rsp)
    856f:	49 f7 f5             	div    %r13
    8572:	4c 89 c2             	mov    %r8,%rdx
    8575:	48 89 c1             	mov    %rax,%rcx
    8578:	e8 13 fd ff ff       	call   8290 <do_relocs>
    857d:	85 c0                	test   %eax,%eax
    857f:	75 2b                	jne    85ac <relocate_enclave+0x13c>
    8581:	4d 85 ff             	test   %r15,%r15
    8584:	4c 8b 04 24          	mov    (%rsp),%r8
    8588:	0f 84 52 ff ff ff    	je     84e0 <relocate_enclave+0x70>
    858e:	31 d2                	xor    %edx,%edx
    8590:	4c 89 f0             	mov    %r14,%rax
    8593:	4c 89 fe             	mov    %r15,%rsi
    8596:	49 f7 f5             	div    %r13
    8599:	4c 89 c2             	mov    %r8,%rdx
    859c:	48 89 c1             	mov    %rax,%rcx
    859f:	e8 ec fc ff ff       	call   8290 <do_relocs>
    85a4:	85 c0                	test   %eax,%eax
    85a6:	0f 84 34 ff ff ff    	je     84e0 <relocate_enclave+0x70>
    85ac:	48 83 c4 08          	add    $0x8,%rsp
    85b0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    85b5:	5b                   	pop    %rbx
    85b6:	5d                   	pop    %rbp
    85b7:	41 5c                	pop    %r12
    85b9:	41 5d                	pop    %r13
    85bb:	41 5e                	pop    %r14
    85bd:	41 5f                	pop    %r15
    85bf:	c3                   	ret    
    85c0:	4c 8b 7a 08          	mov    0x8(%rdx),%r15
    85c4:	48 83 c2 10          	add    $0x10,%rdx
    85c8:	49 39 d2             	cmp    %rdx,%r10
    85cb:	0f 85 4f ff ff ff    	jne    8520 <relocate_enclave+0xb0>
    85d1:	eb 85                	jmp    8558 <relocate_enclave+0xe8>
    85d3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    85d8:	48 8b 42 08          	mov    0x8(%rdx),%rax
    85dc:	48 83 c2 10          	add    $0x10,%rdx
    85e0:	49 39 d2             	cmp    %rdx,%r10
    85e3:	0f 85 37 ff ff ff    	jne    8520 <relocate_enclave+0xb0>
    85e9:	e9 6a ff ff ff       	jmp    8558 <relocate_enclave+0xe8>
    85ee:	66 90                	xchg   %ax,%ax
    85f0:	4c 8b 4a 08          	mov    0x8(%rdx),%r9
    85f4:	48 83 c2 10          	add    $0x10,%rdx
    85f8:	49 39 d2             	cmp    %rdx,%r10
    85fb:	0f 85 1f ff ff ff    	jne    8520 <relocate_enclave+0xb0>
    8601:	e9 52 ff ff ff       	jmp    8558 <relocate_enclave+0xe8>
    8606:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    860d:	00 00 00 
    8610:	4c 8b 72 08          	mov    0x8(%rdx),%r14
    8614:	48 83 c2 10          	add    $0x10,%rdx
    8618:	49 39 d2             	cmp    %rdx,%r10
    861b:	0f 85 ff fe ff ff    	jne    8520 <relocate_enclave+0xb0>
    8621:	e9 32 ff ff ff       	jmp    8558 <relocate_enclave+0xe8>
    8626:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    862d:	00 00 00 
    8630:	4c 8b 6a 08          	mov    0x8(%rdx),%r13
    8634:	48 83 c2 10          	add    $0x10,%rdx
    8638:	49 39 d2             	cmp    %rdx,%r10
    863b:	0f 85 df fe ff ff    	jne    8520 <relocate_enclave+0xb0>
    8641:	e9 12 ff ff ff       	jmp    8558 <relocate_enclave+0xe8>
    8646:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    864d:	00 00 00 
    8650:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8655:	c3                   	ret    
    8656:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    865d:	00 00 00 
    8660:	4d 85 ff             	test   %r15,%r15
    8663:	0f 84 77 fe ff ff    	je     84e0 <relocate_enclave+0x70>
    8669:	4d 85 ed             	test   %r13,%r13
    866c:	0f 84 3a ff ff ff    	je     85ac <relocate_enclave+0x13c>
    8672:	e9 17 ff ff ff       	jmp    858e <relocate_enclave+0x11e>
    8677:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    867e:	00 00 
    8680:	48 83 c4 08          	add    $0x8,%rsp
    8684:	31 c0                	xor    %eax,%eax
    8686:	5b                   	pop    %rbx
    8687:	5d                   	pop    %rbp
    8688:	41 5c                	pop    %r12
    868a:	41 5d                	pop    %r13
    868c:	41 5e                	pop    %r14
    868e:	41 5f                	pop    %r15
    8690:	c3                   	ret    
    8691:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8698:	00 00 00 
    869b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000086a0 <elf_tls_info>:
    86a0:	f3 0f 1e fa          	endbr64 
    86a4:	49 89 f0             	mov    %rsi,%r8
    86a7:	48 89 f9             	mov    %rdi,%rcx
    86aa:	48 89 d6             	mov    %rdx,%rsi
    86ad:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    86b2:	48 85 ff             	test   %rdi,%rdi
    86b5:	74 7e                	je     8735 <elf_tls_info+0x95>
    86b7:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    86bd:	75 75                	jne    8734 <elf_tls_info+0x94>
    86bf:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    86c4:	75 6e                	jne    8734 <elf_tls_info+0x94>
    86c6:	48 8b 47 20          	mov    0x20(%rdi),%rax
    86ca:	48 01 f8             	add    %rdi,%rax
    86cd:	4d 85 c0             	test   %r8,%r8
    86d0:	0f 94 c2             	sete   %dl
    86d3:	48 85 f6             	test   %rsi,%rsi
    86d6:	40 0f 94 c7          	sete   %dil
    86da:	40 08 fa             	or     %dil,%dl
    86dd:	75 50                	jne    872f <elf_tls_info+0x8f>
    86df:	48 85 c0             	test   %rax,%rax
    86e2:	74 4b                	je     872f <elf_tls_info+0x8f>
    86e4:	0f b7 79 38          	movzwl 0x38(%rcx),%edi
    86e8:	49 c7 00 00 00 00 00 	movq   $0x0,(%r8)
    86ef:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
    86f6:	66 85 ff             	test   %di,%di
    86f9:	74 31                	je     872c <elf_tls_info+0x8c>
    86fb:	83 ef 01             	sub    $0x1,%edi
    86fe:	48 8d 14 fd 00 00 00 	lea    0x0(,%rdi,8),%rdx
    8705:	00 
    8706:	48 29 fa             	sub    %rdi,%rdx
    8709:	48 8d 54 d0 38       	lea    0x38(%rax,%rdx,8),%rdx
    870e:	eb 09                	jmp    8719 <elf_tls_info+0x79>
    8710:	48 83 c0 38          	add    $0x38,%rax
    8714:	48 39 d0             	cmp    %rdx,%rax
    8717:	74 13                	je     872c <elf_tls_info+0x8c>
    8719:	83 38 07             	cmpl   $0x7,(%rax)
    871c:	75 f2                	jne    8710 <elf_tls_info+0x70>
    871e:	48 03 48 10          	add    0x10(%rax),%rcx
    8722:	49 89 08             	mov    %rcx,(%r8)
    8725:	48 8b 40 20          	mov    0x20(%rax),%rax
    8729:	48 89 06             	mov    %rax,(%rsi)
    872c:	31 c0                	xor    %eax,%eax
    872e:	c3                   	ret    
    872f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8734:	c3                   	ret    
    8735:	c3                   	ret    
    8736:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    873d:	00 00 00 

0000000000008740 <elf_get_init_array>:
    8740:	f3 0f 1e fa          	endbr64 
    8744:	49 89 f8             	mov    %rdi,%r8
    8747:	49 89 f1             	mov    %rsi,%r9
    874a:	49 89 d2             	mov    %rdx,%r10
    874d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8752:	48 85 ff             	test   %rdi,%rdi
    8755:	0f 84 c8 00 00 00    	je     8823 <elf_get_init_array+0xe3>
    875b:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    8761:	0f 85 b6 00 00 00    	jne    881d <elf_get_init_array+0xdd>
    8767:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    876c:	0f 85 ab 00 00 00    	jne    881d <elf_get_init_array+0xdd>
    8772:	48 8b 57 20          	mov    0x20(%rdi),%rdx
    8776:	48 01 fa             	add    %rdi,%rdx
    8779:	48 85 f6             	test   %rsi,%rsi
    877c:	0f 94 c0             	sete   %al
    877f:	4d 85 d2             	test   %r10,%r10
    8782:	0f 94 c1             	sete   %cl
    8785:	08 c8                	or     %cl,%al
    8787:	0f 85 8b 00 00 00    	jne    8818 <elf_get_init_array+0xd8>
    878d:	48 85 d2             	test   %rdx,%rdx
    8790:	0f 84 82 00 00 00    	je     8818 <elf_get_init_array+0xd8>
    8796:	0f b7 4f 38          	movzwl 0x38(%rdi),%ecx
    879a:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
    87a1:	49 c7 02 00 00 00 00 	movq   $0x0,(%r10)
    87a8:	66 85 c9             	test   %cx,%cx
    87ab:	74 73                	je     8820 <elf_get_init_array+0xe0>
    87ad:	83 e9 01             	sub    $0x1,%ecx
    87b0:	48 8d 04 cd 00 00 00 	lea    0x0(,%rcx,8),%rax
    87b7:	00 
    87b8:	48 29 c8             	sub    %rcx,%rax
    87bb:	48 8d 7c c2 38       	lea    0x38(%rdx,%rax,8),%rdi
    87c0:	eb 0f                	jmp    87d1 <elf_get_init_array+0x91>
    87c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    87c8:	48 83 c2 38          	add    $0x38,%rdx
    87cc:	48 39 fa             	cmp    %rdi,%rdx
    87cf:	74 4f                	je     8820 <elf_get_init_array+0xe0>
    87d1:	83 3a 02             	cmpl   $0x2,(%rdx)
    87d4:	75 f2                	jne    87c8 <elf_get_init_array+0x88>
    87d6:	48 8b 42 18          	mov    0x18(%rdx),%rax
    87da:	48 8b 72 20          	mov    0x20(%rdx),%rsi
    87de:	4c 01 c0             	add    %r8,%rax
    87e1:	48 c1 ee 04          	shr    $0x4,%rsi
    87e5:	74 e1                	je     87c8 <elf_get_init_array+0x88>
    87e7:	48 c1 e6 04          	shl    $0x4,%rsi
    87eb:	48 01 c6             	add    %rax,%rsi
    87ee:	eb 16                	jmp    8806 <elf_get_init_array+0xc6>
    87f0:	48 83 f9 1b          	cmp    $0x1b,%rcx
    87f4:	75 07                	jne    87fd <elf_get_init_array+0xbd>
    87f6:	48 8b 48 08          	mov    0x8(%rax),%rcx
    87fa:	49 89 0a             	mov    %rcx,(%r10)
    87fd:	48 83 c0 10          	add    $0x10,%rax
    8801:	48 39 c6             	cmp    %rax,%rsi
    8804:	74 c2                	je     87c8 <elf_get_init_array+0x88>
    8806:	48 8b 08             	mov    (%rax),%rcx
    8809:	48 83 f9 19          	cmp    $0x19,%rcx
    880d:	75 e1                	jne    87f0 <elf_get_init_array+0xb0>
    880f:	48 8b 48 08          	mov    0x8(%rax),%rcx
    8813:	49 89 09             	mov    %rcx,(%r9)
    8816:	eb e5                	jmp    87fd <elf_get_init_array+0xbd>
    8818:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    881d:	c3                   	ret    
    881e:	66 90                	xchg   %ax,%ax
    8820:	31 c0                	xor    %eax,%eax
    8822:	c3                   	ret    
    8823:	c3                   	ret    
    8824:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    882b:	00 00 00 
    882e:	66 90                	xchg   %ax,%ax

0000000000008830 <elf_get_uninit_array>:
    8830:	f3 0f 1e fa          	endbr64 
    8834:	49 89 f8             	mov    %rdi,%r8
    8837:	49 89 f1             	mov    %rsi,%r9
    883a:	49 89 d2             	mov    %rdx,%r10
    883d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8842:	48 85 ff             	test   %rdi,%rdi
    8845:	0f 84 c8 00 00 00    	je     8913 <elf_get_uninit_array+0xe3>
    884b:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    8851:	0f 85 b6 00 00 00    	jne    890d <elf_get_uninit_array+0xdd>
    8857:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    885c:	0f 85 ab 00 00 00    	jne    890d <elf_get_uninit_array+0xdd>
    8862:	48 8b 57 20          	mov    0x20(%rdi),%rdx
    8866:	48 01 fa             	add    %rdi,%rdx
    8869:	48 85 f6             	test   %rsi,%rsi
    886c:	0f 94 c0             	sete   %al
    886f:	4d 85 d2             	test   %r10,%r10
    8872:	0f 94 c1             	sete   %cl
    8875:	08 c8                	or     %cl,%al
    8877:	0f 85 8b 00 00 00    	jne    8908 <elf_get_uninit_array+0xd8>
    887d:	48 85 d2             	test   %rdx,%rdx
    8880:	0f 84 82 00 00 00    	je     8908 <elf_get_uninit_array+0xd8>
    8886:	0f b7 4f 38          	movzwl 0x38(%rdi),%ecx
    888a:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
    8891:	49 c7 02 00 00 00 00 	movq   $0x0,(%r10)
    8898:	66 85 c9             	test   %cx,%cx
    889b:	74 73                	je     8910 <elf_get_uninit_array+0xe0>
    889d:	83 e9 01             	sub    $0x1,%ecx
    88a0:	48 8d 04 cd 00 00 00 	lea    0x0(,%rcx,8),%rax
    88a7:	00 
    88a8:	48 29 c8             	sub    %rcx,%rax
    88ab:	48 8d 7c c2 38       	lea    0x38(%rdx,%rax,8),%rdi
    88b0:	eb 0f                	jmp    88c1 <elf_get_uninit_array+0x91>
    88b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    88b8:	48 83 c2 38          	add    $0x38,%rdx
    88bc:	48 39 fa             	cmp    %rdi,%rdx
    88bf:	74 4f                	je     8910 <elf_get_uninit_array+0xe0>
    88c1:	83 3a 02             	cmpl   $0x2,(%rdx)
    88c4:	75 f2                	jne    88b8 <elf_get_uninit_array+0x88>
    88c6:	48 8b 42 18          	mov    0x18(%rdx),%rax
    88ca:	48 8b 72 20          	mov    0x20(%rdx),%rsi
    88ce:	4c 01 c0             	add    %r8,%rax
    88d1:	48 c1 ee 04          	shr    $0x4,%rsi
    88d5:	74 e1                	je     88b8 <elf_get_uninit_array+0x88>
    88d7:	48 c1 e6 04          	shl    $0x4,%rsi
    88db:	48 01 c6             	add    %rax,%rsi
    88de:	eb 16                	jmp    88f6 <elf_get_uninit_array+0xc6>
    88e0:	48 83 f9 1c          	cmp    $0x1c,%rcx
    88e4:	75 07                	jne    88ed <elf_get_uninit_array+0xbd>
    88e6:	48 8b 48 08          	mov    0x8(%rax),%rcx
    88ea:	49 89 0a             	mov    %rcx,(%r10)
    88ed:	48 83 c0 10          	add    $0x10,%rax
    88f1:	48 39 c6             	cmp    %rax,%rsi
    88f4:	74 c2                	je     88b8 <elf_get_uninit_array+0x88>
    88f6:	48 8b 08             	mov    (%rax),%rcx
    88f9:	48 83 f9 1a          	cmp    $0x1a,%rcx
    88fd:	75 e1                	jne    88e0 <elf_get_uninit_array+0xb0>
    88ff:	48 8b 48 08          	mov    0x8(%rax),%rcx
    8903:	49 89 09             	mov    %rcx,(%r9)
    8906:	eb e5                	jmp    88ed <elf_get_uninit_array+0xbd>
    8908:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    890d:	c3                   	ret    
    890e:	66 90                	xchg   %ax,%ax
    8910:	31 c0                	xor    %eax,%eax
    8912:	c3                   	ret    
    8913:	c3                   	ret    
    8914:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    891b:	00 00 00 
    891e:	66 90                	xchg   %ax,%ax

0000000000008920 <change_protection>:
    8920:	f3 0f 1e fa          	endbr64 
    8924:	48 85 ff             	test   %rdi,%rdi
    8927:	0f 84 be 01 00 00    	je     8aeb <change_protection+0x1cb>
    892d:	41 56                	push   %r14
    892f:	41 55                	push   %r13
    8931:	49 89 fd             	mov    %rdi,%r13
    8934:	41 54                	push   %r12
    8936:	55                   	push   %rbp
    8937:	53                   	push   %rbx
    8938:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    893e:	0f 85 bc 00 00 00    	jne    8a00 <change_protection+0xe0>
    8944:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    8949:	0f 85 b1 00 00 00    	jne    8a00 <change_protection+0xe0>
    894f:	48 89 fb             	mov    %rdi,%rbx
    8952:	48 03 5f 20          	add    0x20(%rdi),%rbx
    8956:	0f 84 a4 00 00 00    	je     8a00 <change_protection+0xe0>
    895c:	0f b7 57 38          	movzwl 0x38(%rdi),%edx
    8960:	48 89 de             	mov    %rbx,%rsi
    8963:	89 d1                	mov    %edx,%ecx
    8965:	e8 b6 f8 ff ff       	call   8220 <has_text_relo>
    896a:	41 89 c6             	mov    %eax,%r14d
    896d:	66 85 c9             	test   %cx,%cx
    8970:	0f 84 ea 00 00 00    	je     8a60 <change_protection+0x140>
    8976:	49 bc ff ff ff ff 02 	movabs $0x2ffffffff,%r12
    897d:	00 00 00 
    8980:	31 ed                	xor    %ebp,%ebp
    8982:	eb 18                	jmp    899c <change_protection+0x7c>
    8984:	0f 1f 40 00          	nopl   0x0(%rax)
    8988:	41 0f b7 45 38       	movzwl 0x38(%r13),%eax
    898d:	83 c5 01             	add    $0x1,%ebp
    8990:	48 83 c3 38          	add    $0x38,%rbx
    8994:	39 c5                	cmp    %eax,%ebp
    8996:	0f 83 c4 00 00 00    	jae    8a60 <change_protection+0x140>
    899c:	45 85 f6             	test   %r14d,%r14d
    899f:	74 0c                	je     89ad <change_protection+0x8d>
    89a1:	48 8b 03             	mov    (%rbx),%rax
    89a4:	4c 21 e0             	and    %r12,%rax
    89a7:	48 83 f8 01          	cmp    $0x1,%rax
    89ab:	74 63                	je     8a10 <change_protection+0xf0>
    89ad:	81 3b 52 e5 74 64    	cmpl   $0x6474e552,(%rbx)
    89b3:	75 d3                	jne    8988 <change_protection+0x68>
    89b5:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    89b9:	48 8b 73 28          	mov    0x28(%rbx),%rsi
    89bd:	48 01 fe             	add    %rdi,%rsi
    89c0:	48 89 f8             	mov    %rdi,%rax
    89c3:	48 81 c6 ff 0f 00 00 	add    $0xfff,%rsi
    89ca:	48 31 f0             	xor    %rsi,%rax
    89cd:	48 3d ff 0f 00 00    	cmp    $0xfff,%rax
    89d3:	76 b3                	jbe    8988 <change_protection+0x68>
    89d5:	48 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%rdi
    89dc:	48 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%rsi
    89e3:	ba 01 00 00 00       	mov    $0x1,%edx
    89e8:	48 29 fe             	sub    %rdi,%rsi
    89eb:	4c 01 ef             	add    %r13,%rdi
    89ee:	e8 bd 30 00 00       	call   bab0 <mm_modify_permissions>
    89f3:	85 c0                	test   %eax,%eax
    89f5:	74 91                	je     8988 <change_protection+0x68>
    89f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    89fe:	00 00 
    8a00:	b8 01 00 00 00       	mov    $0x1,%eax
    8a05:	5b                   	pop    %rbx
    8a06:	5d                   	pop    %rbp
    8a07:	41 5c                	pop    %r12
    8a09:	41 5d                	pop    %r13
    8a0b:	41 5e                	pop    %r14
    8a0d:	c3                   	ret    
    8a0e:	66 90                	xchg   %ax,%ax
    8a10:	48 8b 43 10          	mov    0x10(%rbx),%rax
    8a14:	8b 4b 04             	mov    0x4(%rbx),%ecx
    8a17:	48 89 c7             	mov    %rax,%rdi
    8a1a:	89 ca                	mov    %ecx,%edx
    8a1c:	48 03 43 28          	add    0x28(%rbx),%rax
    8a20:	c1 e9 02             	shr    $0x2,%ecx
    8a23:	83 e2 01             	and    $0x1,%edx
    8a26:	48 8d b0 ff 0f 00 00 	lea    0xfff(%rax),%rsi
    8a2d:	48 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%rdi
    8a34:	83 e1 01             	and    $0x1,%ecx
    8a37:	48 c1 e2 02          	shl    $0x2,%rdx
    8a3b:	48 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%rsi
    8a42:	48 29 fe             	sub    %rdi,%rsi
    8a45:	09 ca                	or     %ecx,%edx
    8a47:	4c 01 ef             	add    %r13,%rdi
    8a4a:	e8 61 30 00 00       	call   bab0 <mm_modify_permissions>
    8a4f:	85 c0                	test   %eax,%eax
    8a51:	0f 84 56 ff ff ff    	je     89ad <change_protection+0x8d>
    8a57:	eb a7                	jmp    8a00 <change_protection+0xe0>
    8a59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8a60:	8b 05 72 a8 00 00    	mov    0xa872(%rip),%eax        # 132d8 <g_global_data+0x158>
    8a66:	85 c0                	test   %eax,%eax
    8a68:	74 9b                	je     8a05 <change_protection+0xe5>
    8a6a:	31 d2                	xor    %edx,%edx
    8a6c:	48 8d 3d 0d a7 00 00 	lea    0xa70d(%rip),%rdi        # 13180 <g_global_data>
    8a73:	eb 10                	jmp    8a85 <change_protection+0x165>
    8a75:	0f 1f 00             	nopl   (%rax)
    8a78:	8b 05 5a a8 00 00    	mov    0xa85a(%rip),%eax        # 132d8 <g_global_data+0x158>
    8a7e:	83 c2 01             	add    $0x1,%edx
    8a81:	39 c2                	cmp    %eax,%edx
    8a83:	73 5b                	jae    8ae0 <change_protection+0x1c0>
    8a85:	89 d1                	mov    %edx,%ecx
    8a87:	48 8d 41 0b          	lea    0xb(%rcx),%rax
    8a8b:	48 c1 e0 05          	shl    $0x5,%rax
    8a8f:	48 01 f8             	add    %rdi,%rax
    8a92:	0f b7 30             	movzwl (%rax),%esi
    8a95:	66 83 fe 14          	cmp    $0x14,%si
    8a99:	75 dd                	jne    8a78 <change_protection+0x158>
    8a9b:	48 c1 e1 05          	shl    $0x5,%rcx
    8a9f:	48 01 f9             	add    %rdi,%rcx
    8aa2:	48 8b 89 78 01 00 00 	mov    0x178(%rcx),%rcx
    8aa9:	48 81 f9 07 02 00 00 	cmp    $0x207,%rcx
    8ab0:	75 c6                	jne    8a78 <change_protection+0x158>
    8ab2:	8b 48 04             	mov    0x4(%rax),%ecx
    8ab5:	85 c9                	test   %ecx,%ecx
    8ab7:	74 bf                	je     8a78 <change_protection+0x158>
    8ab9:	8b 70 04             	mov    0x4(%rax),%esi
    8abc:	48 8b 40 08          	mov    0x8(%rax),%rax
    8ac0:	ba 03 00 00 00       	mov    $0x3,%edx
    8ac5:	48 c1 e6 0c          	shl    $0xc,%rsi
    8ac9:	49 8d 7c 05 00       	lea    0x0(%r13,%rax,1),%rdi
    8ace:	e8 dd 2f 00 00       	call   bab0 <mm_modify_permissions>
    8ad3:	85 c0                	test   %eax,%eax
    8ad5:	0f 95 c0             	setne  %al
    8ad8:	0f b6 c0             	movzbl %al,%eax
    8adb:	e9 25 ff ff ff       	jmp    8a05 <change_protection+0xe5>
    8ae0:	5b                   	pop    %rbx
    8ae1:	31 c0                	xor    %eax,%eax
    8ae3:	5d                   	pop    %rbp
    8ae4:	41 5c                	pop    %r12
    8ae6:	41 5d                	pop    %r13
    8ae8:	41 5e                	pop    %r14
    8aea:	c3                   	ret    
    8aeb:	b8 01 00 00 00       	mov    $0x1,%eax
    8af0:	c3                   	ret    
    8af1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8af8:	00 00 00 
    8afb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000008b00 <init_segment_emas>:
    8b00:	f3 0f 1e fa          	endbr64 
    8b04:	48 85 ff             	test   %rdi,%rdi
    8b07:	0f 84 e8 00 00 00    	je     8bf5 <init_segment_emas+0xf5>
    8b0d:	41 55                	push   %r13
    8b0f:	49 89 fd             	mov    %rdi,%r13
    8b12:	41 54                	push   %r12
    8b14:	55                   	push   %rbp
    8b15:	53                   	push   %rbx
    8b16:	48 83 ec 08          	sub    $0x8,%rsp
    8b1a:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    8b20:	0f 85 ae 00 00 00    	jne    8bd4 <init_segment_emas+0xd4>
    8b26:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    8b2b:	0f 85 a3 00 00 00    	jne    8bd4 <init_segment_emas+0xd4>
    8b31:	48 89 fb             	mov    %rdi,%rbx
    8b34:	48 03 5f 20          	add    0x20(%rdi),%rbx
    8b38:	0f 84 96 00 00 00    	je     8bd4 <init_segment_emas+0xd4>
    8b3e:	0f b7 57 38          	movzwl 0x38(%rdi),%edx
    8b42:	48 89 de             	mov    %rbx,%rsi
    8b45:	45 31 e4             	xor    %r12d,%r12d
    8b48:	89 d1                	mov    %edx,%ecx
    8b4a:	e8 d1 f6 ff ff       	call   8220 <has_text_relo>
    8b4f:	89 c5                	mov    %eax,%ebp
    8b51:	66 85 c9             	test   %cx,%cx
    8b54:	75 1c                	jne    8b72 <init_segment_emas+0x72>
    8b56:	e9 8d 00 00 00       	jmp    8be8 <init_segment_emas+0xe8>
    8b5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8b60:	41 0f b7 45 38       	movzwl 0x38(%r13),%eax
    8b65:	41 83 c4 01          	add    $0x1,%r12d
    8b69:	48 83 c3 38          	add    $0x38,%rbx
    8b6d:	41 39 c4             	cmp    %eax,%r12d
    8b70:	73 76                	jae    8be8 <init_segment_emas+0xe8>
    8b72:	83 3b 01             	cmpl   $0x1,(%rbx)
    8b75:	75 e9                	jne    8b60 <init_segment_emas+0x60>
    8b77:	8b 4b 04             	mov    0x4(%rbx),%ecx
    8b7a:	48 8b 73 10          	mov    0x10(%rbx),%rsi
    8b7e:	89 c8                	mov    %ecx,%eax
    8b80:	48 89 f2             	mov    %rsi,%rdx
    8b83:	48 03 73 28          	add    0x28(%rbx),%rsi
    8b87:	83 e0 02             	and    $0x2,%eax
    8b8a:	48 81 c6 ff 0f 00 00 	add    $0xfff,%rsi
    8b91:	48 81 e2 00 f0 ff ff 	and    $0xfffffffffffff000,%rdx
    8b98:	09 e8                	or     %ebp,%eax
    8b9a:	48 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%rsi
    8ba1:	49 8d 7c 15 00       	lea    0x0(%r13,%rdx,1),%rdi
    8ba6:	83 f8 01             	cmp    $0x1,%eax
    8ba9:	48 19 c0             	sbb    %rax,%rax
    8bac:	83 e1 01             	and    $0x1,%ecx
    8baf:	48 29 d6             	sub    %rdx,%rsi
    8bb2:	45 31 c9             	xor    %r9d,%r9d
    8bb5:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    8bb9:	48 c1 e1 02          	shl    $0x2,%rcx
    8bbd:	45 31 c0             	xor    %r8d,%r8d
    8bc0:	ba 80 02 00 00       	mov    $0x280,%edx
    8bc5:	48 83 c0 03          	add    $0x3,%rax
    8bc9:	09 c1                	or     %eax,%ecx
    8bcb:	e8 70 2d 00 00       	call   b940 <mm_init_ema>
    8bd0:	85 c0                	test   %eax,%eax
    8bd2:	74 8c                	je     8b60 <init_segment_emas+0x60>
    8bd4:	48 83 c4 08          	add    $0x8,%rsp
    8bd8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8bdd:	5b                   	pop    %rbx
    8bde:	5d                   	pop    %rbp
    8bdf:	41 5c                	pop    %r12
    8be1:	41 5d                	pop    %r13
    8be3:	c3                   	ret    
    8be4:	0f 1f 40 00          	nopl   0x0(%rax)
    8be8:	48 83 c4 08          	add    $0x8,%rsp
    8bec:	31 c0                	xor    %eax,%eax
    8bee:	5b                   	pop    %rbx
    8bef:	5d                   	pop    %rbp
    8bf0:	41 5c                	pop    %r12
    8bf2:	41 5d                	pop    %r13
    8bf4:	c3                   	ret    
    8bf5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8bfa:	c3                   	ret    
    8bfb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000008c00 <__cxa_atexit>:
    8c00:	f3 0f 1e fa          	endbr64 
    8c04:	41 55                	push   %r13
    8c06:	49 89 d5             	mov    %rdx,%r13
    8c09:	41 54                	push   %r12
    8c0b:	49 89 f4             	mov    %rsi,%r12
    8c0e:	55                   	push   %rbp
    8c0f:	48 89 fd             	mov    %rdi,%rbp
    8c12:	53                   	push   %rbx
    8c13:	48 83 ec 18          	sub    $0x18,%rsp
    8c17:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    8c1e:	00 00 
    8c20:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    8c25:	31 c0                	xor    %eax,%eax
    8c27:	48 83 3d 79 15 01 00 	cmpq   $0x0,0x11579(%rip)        # 1a1a8 <g_exit_function_cookie>
    8c2e:	00 
    8c2f:	0f 84 8b 00 00 00    	je     8cc0 <__cxa_atexit+0xc0>
    8c35:	31 f6                	xor    %esi,%esi
    8c37:	48 89 ef             	mov    %rbp,%rdi
    8c3a:	e8 c1 cf ff ff       	call   5c00 <sgx_is_within_enclave>
    8c3f:	85 c0                	test   %eax,%eax
    8c41:	0f 84 a1 00 00 00    	je     8ce8 <__cxa_atexit+0xe8>
    8c47:	bf 20 00 00 00       	mov    $0x20,%edi
    8c4c:	e8 7f 45 00 00       	call   d1d0 <dlmalloc>
    8c51:	48 89 c3             	mov    %rax,%rbx
    8c54:	48 85 c0             	test   %rax,%rax
    8c57:	0f 84 8b 00 00 00    	je     8ce8 <__cxa_atexit+0xe8>
    8c5d:	48 8b 05 44 15 01 00 	mov    0x11544(%rip),%rax        # 1a1a8 <g_exit_function_cookie>
    8c64:	4c 89 6b 10          	mov    %r13,0x10(%rbx)
    8c68:	48 31 c5             	xor    %rax,%rbp
    8c6b:	49 31 c4             	xor    %rax,%r12
    8c6e:	48 89 2b             	mov    %rbp,(%rbx)
    8c71:	48 8d 2d 38 15 01 00 	lea    0x11538(%rip),%rbp        # 1a1b0 <g_exit_function_lock>
    8c78:	4c 89 63 08          	mov    %r12,0x8(%rbx)
    8c7c:	48 89 ef             	mov    %rbp,%rdi
    8c7f:	e8 8c 3b 00 00       	call   c810 <sgx_spin_lock>
    8c84:	48 8b 05 2d 15 01 00 	mov    0x1152d(%rip),%rax        # 1a1b8 <g_exit_function>
    8c8b:	48 89 ef             	mov    %rbp,%rdi
    8c8e:	48 89 1d 23 15 01 00 	mov    %rbx,0x11523(%rip)        # 1a1b8 <g_exit_function>
    8c95:	48 89 43 18          	mov    %rax,0x18(%rbx)
    8c99:	e8 02 3c 00 00       	call   c8a0 <sgx_spin_unlock>
    8c9e:	31 c0                	xor    %eax,%eax
    8ca0:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    8ca5:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    8cac:	00 00 
    8cae:	75 71                	jne    8d21 <__cxa_atexit+0x121>
    8cb0:	48 83 c4 18          	add    $0x18,%rsp
    8cb4:	5b                   	pop    %rbx
    8cb5:	5d                   	pop    %rbp
    8cb6:	41 5c                	pop    %r12
    8cb8:	41 5d                	pop    %r13
    8cba:	c3                   	ret    
    8cbb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8cc0:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    8cc7:	00 
    8cc8:	48 89 e3             	mov    %rsp,%rbx
    8ccb:	eb 0a                	jmp    8cd7 <__cxa_atexit+0xd7>
    8ccd:	0f 1f 00             	nopl   (%rax)
    8cd0:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
    8cd5:	75 19                	jne    8cf0 <__cxa_atexit+0xf0>
    8cd7:	be 08 00 00 00       	mov    $0x8,%esi
    8cdc:	48 89 df             	mov    %rbx,%rdi
    8cdf:	e8 1c d1 ff ff       	call   5e00 <sgx_read_rand>
    8ce4:	85 c0                	test   %eax,%eax
    8ce6:	74 e8                	je     8cd0 <__cxa_atexit+0xd0>
    8ce8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8ced:	eb b1                	jmp    8ca0 <__cxa_atexit+0xa0>
    8cef:	90                   	nop
    8cf0:	48 8d 1d b9 14 01 00 	lea    0x114b9(%rip),%rbx        # 1a1b0 <g_exit_function_lock>
    8cf7:	48 89 df             	mov    %rbx,%rdi
    8cfa:	e8 11 3b 00 00       	call   c810 <sgx_spin_lock>
    8cff:	48 83 3d a1 14 01 00 	cmpq   $0x0,0x114a1(%rip)        # 1a1a8 <g_exit_function_cookie>
    8d06:	00 
    8d07:	75 0b                	jne    8d14 <__cxa_atexit+0x114>
    8d09:	48 8b 04 24          	mov    (%rsp),%rax
    8d0d:	48 89 05 94 14 01 00 	mov    %rax,0x11494(%rip)        # 1a1a8 <g_exit_function_cookie>
    8d14:	48 89 df             	mov    %rbx,%rdi
    8d17:	e8 84 3b 00 00       	call   c8a0 <sgx_spin_unlock>
    8d1c:	e9 14 ff ff ff       	jmp    8c35 <__cxa_atexit+0x35>
    8d21:	e8 da 7d 00 00       	call   10b00 <__stack_chk_fail>
    8d26:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8d2d:	00 00 00 

0000000000008d30 <atexit>:
    8d30:	f3 0f 1e fa          	endbr64 
    8d34:	48 8b 15 15 f5 00 00 	mov    0xf515(%rip),%rdx        # 18250 <__dso_handle>
    8d3b:	31 f6                	xor    %esi,%esi
    8d3d:	e9 be fe ff ff       	jmp    8c00 <__cxa_atexit>
    8d42:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8d49:	00 00 00 
    8d4c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000008d50 <init_global_object>:
    8d50:	f3 0f 1e fa          	endbr64 
    8d54:	55                   	push   %rbp
    8d55:	53                   	push   %rbx
    8d56:	48 83 ec 28          	sub    $0x28,%rsp
    8d5a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    8d61:	00 00 
    8d63:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    8d68:	31 c0                	xor    %eax,%eax
    8d6a:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    8d71:	00 00 
    8d73:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    8d7a:	00 00 
    8d7c:	e8 77 93 00 00       	call   120f8 <get_enclave_base>
    8d81:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    8d86:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
    8d8b:	48 89 c7             	mov    %rax,%rdi
    8d8e:	48 89 c3             	mov    %rax,%rbx
    8d91:	e8 aa f9 ff ff       	call   8740 <elf_get_init_array>
    8d96:	85 c0                	test   %eax,%eax
    8d98:	75 31                	jne    8dcb <init_global_object+0x7b>
    8d9a:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    8d9f:	48 85 c0             	test   %rax,%rax
    8da2:	74 27                	je     8dcb <init_global_object+0x7b>
    8da4:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
    8da9:	48 85 ed             	test   %rbp,%rbp
    8dac:	74 1d                	je     8dcb <init_global_object+0x7b>
    8dae:	48 01 c3             	add    %rax,%rbx
    8db1:	48 83 e5 f8          	and    $0xfffffffffffffff8,%rbp
    8db5:	48 01 dd             	add    %rbx,%rbp
    8db8:	48 39 eb             	cmp    %rbp,%rbx
    8dbb:	73 0e                	jae    8dcb <init_global_object+0x7b>
    8dbd:	0f 1f 00             	nopl   (%rax)
    8dc0:	ff 13                	call   *(%rbx)
    8dc2:	48 83 c3 08          	add    $0x8,%rbx
    8dc6:	48 39 eb             	cmp    %rbp,%rbx
    8dc9:	72 f5                	jb     8dc0 <init_global_object+0x70>
    8dcb:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    8dd0:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    8dd7:	00 00 
    8dd9:	75 07                	jne    8de2 <init_global_object+0x92>
    8ddb:	48 83 c4 28          	add    $0x28,%rsp
    8ddf:	5b                   	pop    %rbx
    8de0:	5d                   	pop    %rbp
    8de1:	c3                   	ret    
    8de2:	e8 19 7d 00 00       	call   10b00 <__stack_chk_fail>
    8de7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    8dee:	00 00 

0000000000008df0 <uninit_global_object>:
    8df0:	f3 0f 1e fa          	endbr64 
    8df4:	55                   	push   %rbp
    8df5:	53                   	push   %rbx
    8df6:	48 83 ec 28          	sub    $0x28,%rsp
    8dfa:	48 8b 1d b7 13 01 00 	mov    0x113b7(%rip),%rbx        # 1a1b8 <g_exit_function>
    8e01:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    8e08:	00 00 
    8e0a:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    8e0f:	31 c0                	xor    %eax,%eax
    8e11:	48 c7 05 9c 13 01 00 	movq   $0x0,0x1139c(%rip)        # 1a1b8 <g_exit_function>
    8e18:	00 00 00 00 
    8e1c:	48 85 db             	test   %rbx,%rbx
    8e1f:	74 2b                	je     8e4c <uninit_global_object+0x5c>
    8e21:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8e28:	48 8b 05 79 13 01 00 	mov    0x11379(%rip),%rax        # 1a1a8 <g_exit_function_cookie>
    8e2f:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    8e33:	48 31 c7             	xor    %rax,%rdi
    8e36:	48 33 03             	xor    (%rbx),%rax
    8e39:	ff d0                	call   *%rax
    8e3b:	48 89 df             	mov    %rbx,%rdi
    8e3e:	48 8b 5b 18          	mov    0x18(%rbx),%rbx
    8e42:	e8 79 61 00 00       	call   efc0 <dlfree>
    8e47:	48 85 db             	test   %rbx,%rbx
    8e4a:	75 dc                	jne    8e28 <uninit_global_object+0x38>
    8e4c:	e8 a7 92 00 00       	call   120f8 <get_enclave_base>
    8e51:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    8e56:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
    8e5b:	48 89 c7             	mov    %rax,%rdi
    8e5e:	48 89 c5             	mov    %rax,%rbp
    8e61:	e8 ca f9 ff ff       	call   8830 <elf_get_uninit_array>
    8e66:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    8e6b:	48 85 d2             	test   %rdx,%rdx
    8e6e:	74 2b                	je     8e9b <uninit_global_object+0xab>
    8e70:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    8e75:	48 85 c0             	test   %rax,%rax
    8e78:	74 21                	je     8e9b <uninit_global_object+0xab>
    8e7a:	48 01 d5             	add    %rdx,%rbp
    8e7d:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    8e81:	48 8d 5c 05 f8       	lea    -0x8(%rbp,%rax,1),%rbx
    8e86:	48 39 eb             	cmp    %rbp,%rbx
    8e89:	72 10                	jb     8e9b <uninit_global_object+0xab>
    8e8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8e90:	ff 13                	call   *(%rbx)
    8e92:	48 83 eb 08          	sub    $0x8,%rbx
    8e96:	48 39 eb             	cmp    %rbp,%rbx
    8e99:	73 f5                	jae    8e90 <uninit_global_object+0xa0>
    8e9b:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    8ea0:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    8ea7:	00 00 
    8ea9:	75 07                	jne    8eb2 <uninit_global_object+0xc2>
    8eab:	48 83 c4 28          	add    $0x28,%rsp
    8eaf:	5b                   	pop    %rbx
    8eb0:	5d                   	pop    %rbp
    8eb1:	c3                   	ret    
    8eb2:	e8 49 7c 00 00       	call   10b00 <__stack_chk_fail>
    8eb7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    8ebe:	00 00 

0000000000008ec0 <__tls_get_addr>:
    8ec0:	f3 0f 1e fa          	endbr64 
    8ec4:	53                   	push   %rbx
    8ec5:	48 89 fb             	mov    %rdi,%rbx
    8ec8:	e8 76 92 00 00       	call   12143 <get_thread_data>
    8ecd:	48 8b 40 68          	mov    0x68(%rax),%rax
    8ed1:	48 03 43 08          	add    0x8(%rbx),%rax
    8ed5:	5b                   	pop    %rbx
    8ed6:	c3                   	ret    
    8ed7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    8ede:	00 00 

0000000000008ee0 <bit_array_new>:
    8ee0:	f3 0f 1e fa          	endbr64 
    8ee4:	41 54                	push   %r12
    8ee6:	55                   	push   %rbp
    8ee7:	53                   	push   %rbx
    8ee8:	48 85 ff             	test   %rdi,%rdi
    8eeb:	74 63                	je     8f50 <bit_array_new+0x70>
    8eed:	48 8d 47 07          	lea    0x7(%rdi),%rax
    8ef1:	48 89 fb             	mov    %rdi,%rbx
    8ef4:	48 89 c2             	mov    %rax,%rdx
    8ef7:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    8efb:	48 39 fa             	cmp    %rdi,%rdx
    8efe:	72 50                	jb     8f50 <bit_array_new+0x70>
    8f00:	48 c1 e8 03          	shr    $0x3,%rax
    8f04:	bf 18 00 00 00       	mov    $0x18,%edi
    8f09:	49 89 c4             	mov    %rax,%r12
    8f0c:	e8 af 25 00 00       	call   b4c0 <emalloc>
    8f11:	48 89 c5             	mov    %rax,%rbp
    8f14:	48 85 c0             	test   %rax,%rax
    8f17:	74 37                	je     8f50 <bit_array_new+0x70>
    8f19:	4c 89 20             	mov    %r12,(%rax)
    8f1c:	4c 89 e7             	mov    %r12,%rdi
    8f1f:	48 89 58 08          	mov    %rbx,0x8(%rax)
    8f23:	e8 98 25 00 00       	call   b4c0 <emalloc>
    8f28:	48 89 45 10          	mov    %rax,0x10(%rbp)
    8f2c:	48 85 c0             	test   %rax,%rax
    8f2f:	74 0f                	je     8f40 <bit_array_new+0x60>
    8f31:	48 89 e8             	mov    %rbp,%rax
    8f34:	5b                   	pop    %rbx
    8f35:	5d                   	pop    %rbp
    8f36:	41 5c                	pop    %r12
    8f38:	c3                   	ret    
    8f39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8f40:	48 89 ef             	mov    %rbp,%rdi
    8f43:	e8 f8 27 00 00       	call   b740 <efree>
    8f48:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    8f4f:	00 
    8f50:	31 ed                	xor    %ebp,%ebp
    8f52:	eb dd                	jmp    8f31 <bit_array_new+0x51>
    8f54:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8f5b:	00 00 00 
    8f5e:	66 90                	xchg   %ax,%ax

0000000000008f60 <bit_array_new_set>:
    8f60:	f3 0f 1e fa          	endbr64 
    8f64:	53                   	push   %rbx
    8f65:	e8 76 ff ff ff       	call   8ee0 <bit_array_new>
    8f6a:	48 89 c3             	mov    %rax,%rbx
    8f6d:	48 85 c0             	test   %rax,%rax
    8f70:	74 11                	je     8f83 <bit_array_new_set+0x23>
    8f72:	48 8b 10             	mov    (%rax),%rdx
    8f75:	48 8b 78 10          	mov    0x10(%rax),%rdi
    8f79:	be ff 00 00 00       	mov    $0xff,%esi
    8f7e:	e8 2d 7a 00 00       	call   109b0 <memset>
    8f83:	48 89 d8             	mov    %rbx,%rax
    8f86:	5b                   	pop    %rbx
    8f87:	c3                   	ret    
    8f88:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    8f8f:	00 

0000000000008f90 <bit_array_new_reset>:
    8f90:	f3 0f 1e fa          	endbr64 
    8f94:	53                   	push   %rbx
    8f95:	e8 46 ff ff ff       	call   8ee0 <bit_array_new>
    8f9a:	48 89 c3             	mov    %rax,%rbx
    8f9d:	48 85 c0             	test   %rax,%rax
    8fa0:	74 0e                	je     8fb0 <bit_array_new_reset+0x20>
    8fa2:	48 8b 10             	mov    (%rax),%rdx
    8fa5:	48 8b 78 10          	mov    0x10(%rax),%rdi
    8fa9:	31 f6                	xor    %esi,%esi
    8fab:	e8 00 7a 00 00       	call   109b0 <memset>
    8fb0:	48 89 d8             	mov    %rbx,%rax
    8fb3:	5b                   	pop    %rbx
    8fb4:	c3                   	ret    
    8fb5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8fbc:	00 00 00 
    8fbf:	90                   	nop

0000000000008fc0 <bit_array_delete>:
    8fc0:	f3 0f 1e fa          	endbr64 
    8fc4:	53                   	push   %rbx
    8fc5:	48 89 fb             	mov    %rdi,%rbx
    8fc8:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    8fcc:	e8 6f 27 00 00       	call   b740 <efree>
    8fd1:	48 89 df             	mov    %rbx,%rdi
    8fd4:	5b                   	pop    %rbx
    8fd5:	e9 66 27 00 00       	jmp    b740 <efree>
    8fda:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000008fe0 <bit_array_test>:
    8fe0:	f3 0f 1e fa          	endbr64 
    8fe4:	48 89 f1             	mov    %rsi,%rcx
    8fe7:	48 89 f2             	mov    %rsi,%rdx
    8fea:	48 8b 77 10          	mov    0x10(%rdi),%rsi
    8fee:	b8 01 00 00 00       	mov    $0x1,%eax
    8ff3:	83 e1 07             	and    $0x7,%ecx
    8ff6:	48 c1 ea 03          	shr    $0x3,%rdx
    8ffa:	d3 e0                	shl    %cl,%eax
    8ffc:	84 04 16             	test   %al,(%rsi,%rdx,1)
    8fff:	0f 95 c0             	setne  %al
    9002:	c3                   	ret    
    9003:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    900a:	00 00 00 
    900d:	0f 1f 00             	nopl   (%rax)

0000000000009010 <set_mask>:
    9010:	f3 0f 1e fa          	endbr64 
    9014:	89 f1                	mov    %esi,%ecx
    9016:	b8 01 00 00 00       	mov    $0x1,%eax
    901b:	d3 e0                	shl    %cl,%eax
    901d:	89 f9                	mov    %edi,%ecx
    901f:	83 e8 01             	sub    $0x1,%eax
    9022:	d3 e0                	shl    %cl,%eax
    9024:	c3                   	ret    
    9025:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    902c:	00 00 00 
    902f:	90                   	nop

0000000000009030 <bit_array_test_range>:
    9030:	f3 0f 1e fa          	endbr64 
    9034:	48 89 f0             	mov    %rsi,%rax
    9037:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    903b:	83 e6 07             	and    $0x7,%esi
    903e:	b9 08 00 00 00       	mov    $0x8,%ecx
    9043:	48 c1 e8 03          	shr    $0x3,%rax
    9047:	48 29 f1             	sub    %rsi,%rcx
    904a:	44 0f b6 0c 07       	movzbl (%rdi,%rax,1),%r9d
    904f:	48 39 d1             	cmp    %rdx,%rcx
    9052:	72 24                	jb     9078 <bit_array_test_range+0x48>
    9054:	89 d1                	mov    %edx,%ecx
    9056:	b8 01 00 00 00       	mov    $0x1,%eax
    905b:	41 f7 d1             	not    %r9d
    905e:	d3 e0                	shl    %cl,%eax
    9060:	89 f1                	mov    %esi,%ecx
    9062:	83 e8 01             	sub    $0x1,%eax
    9065:	d3 e0                	shl    %cl,%eax
    9067:	41 84 c1             	test   %al,%r9b
    906a:	41 0f 94 c2          	sete   %r10b
    906e:	44 89 d0             	mov    %r10d,%eax
    9071:	c3                   	ret    
    9072:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9078:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    907e:	41 f7 d1             	not    %r9d
    9081:	45 31 d2             	xor    %r10d,%r10d
    9084:	41 d3 e0             	shl    %cl,%r8d
    9087:	89 f1                	mov    %esi,%ecx
    9089:	41 83 e8 01          	sub    $0x1,%r8d
    908d:	41 d3 e0             	shl    %cl,%r8d
    9090:	45 84 c1             	test   %r8b,%r9b
    9093:	75 d9                	jne    906e <bit_array_test_range+0x3e>
    9095:	48 8d 4c 16 f8       	lea    -0x8(%rsi,%rdx,1),%rcx
    909a:	48 83 f9 07          	cmp    $0x7,%rcx
    909e:	77 12                	ja     90b2 <bit_array_test_range+0x82>
    90a0:	eb 26                	jmp    90c8 <bit_array_test_range+0x98>
    90a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    90a8:	48 83 e9 08          	sub    $0x8,%rcx
    90ac:	48 83 f9 07          	cmp    $0x7,%rcx
    90b0:	76 16                	jbe    90c8 <bit_array_test_range+0x98>
    90b2:	48 83 c0 01          	add    $0x1,%rax
    90b6:	80 3c 07 ff          	cmpb   $0xff,(%rdi,%rax,1)
    90ba:	74 ec                	je     90a8 <bit_array_test_range+0x78>
    90bc:	45 31 d2             	xor    %r10d,%r10d
    90bf:	44 89 d0             	mov    %r10d,%eax
    90c2:	c3                   	ret    
    90c3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    90c8:	41 ba 01 00 00 00    	mov    $0x1,%r10d
    90ce:	48 85 c9             	test   %rcx,%rcx
    90d1:	74 9b                	je     906e <bit_array_test_range+0x3e>
    90d3:	ba 01 00 00 00       	mov    $0x1,%edx
    90d8:	0f b6 74 07 01       	movzbl 0x1(%rdi,%rax,1),%esi
    90dd:	d3 e2                	shl    %cl,%edx
    90df:	83 ea 01             	sub    $0x1,%edx
    90e2:	21 d6                	and    %edx,%esi
    90e4:	40 38 d6             	cmp    %dl,%sil
    90e7:	41 0f 94 c2          	sete   %r10b
    90eb:	eb 81                	jmp    906e <bit_array_test_range+0x3e>
    90ed:	0f 1f 00             	nopl   (%rax)

00000000000090f0 <bit_array_test_range_any>:
    90f0:	f3 0f 1e fa          	endbr64 
    90f4:	49 89 f8             	mov    %rdi,%r8
    90f7:	48 89 f0             	mov    %rsi,%rax
    90fa:	48 89 d7             	mov    %rdx,%rdi
    90fd:	83 e6 07             	and    $0x7,%esi
    9100:	49 8b 50 10          	mov    0x10(%r8),%rdx
    9104:	b9 08 00 00 00       	mov    $0x8,%ecx
    9109:	48 c1 e8 03          	shr    $0x3,%rax
    910d:	48 29 f1             	sub    %rsi,%rcx
    9110:	44 0f b6 0c 02       	movzbl (%rdx,%rax,1),%r9d
    9115:	48 39 f9             	cmp    %rdi,%rcx
    9118:	72 1e                	jb     9138 <bit_array_test_range_any+0x48>
    911a:	89 f9                	mov    %edi,%ecx
    911c:	b8 01 00 00 00       	mov    $0x1,%eax
    9121:	d3 e0                	shl    %cl,%eax
    9123:	89 f1                	mov    %esi,%ecx
    9125:	83 e8 01             	sub    $0x1,%eax
    9128:	d3 e0                	shl    %cl,%eax
    912a:	41 84 c1             	test   %al,%r9b
    912d:	41 0f 95 c2          	setne  %r10b
    9131:	44 89 d0             	mov    %r10d,%eax
    9134:	c3                   	ret    
    9135:	0f 1f 00             	nopl   (%rax)
    9138:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    913e:	41 ba 01 00 00 00    	mov    $0x1,%r10d
    9144:	41 d3 e0             	shl    %cl,%r8d
    9147:	89 f1                	mov    %esi,%ecx
    9149:	41 83 e8 01          	sub    $0x1,%r8d
    914d:	41 d3 e0             	shl    %cl,%r8d
    9150:	45 84 c1             	test   %r8b,%r9b
    9153:	75 dc                	jne    9131 <bit_array_test_range_any+0x41>
    9155:	48 8d 4c 3e f8       	lea    -0x8(%rsi,%rdi,1),%rcx
    915a:	48 83 f9 07          	cmp    $0x7,%rcx
    915e:	77 12                	ja     9172 <bit_array_test_range_any+0x82>
    9160:	eb 2e                	jmp    9190 <bit_array_test_range_any+0xa0>
    9162:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9168:	48 83 e9 08          	sub    $0x8,%rcx
    916c:	48 83 f9 07          	cmp    $0x7,%rcx
    9170:	76 1e                	jbe    9190 <bit_array_test_range_any+0xa0>
    9172:	48 83 c0 01          	add    $0x1,%rax
    9176:	80 3c 02 00          	cmpb   $0x0,(%rdx,%rax,1)
    917a:	74 ec                	je     9168 <bit_array_test_range_any+0x78>
    917c:	41 ba 01 00 00 00    	mov    $0x1,%r10d
    9182:	44 89 d0             	mov    %r10d,%eax
    9185:	c3                   	ret    
    9186:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    918d:	00 00 00 
    9190:	45 31 d2             	xor    %r10d,%r10d
    9193:	48 85 c9             	test   %rcx,%rcx
    9196:	74 99                	je     9131 <bit_array_test_range_any+0x41>
    9198:	be 01 00 00 00       	mov    $0x1,%esi
    919d:	d3 e6                	shl    %cl,%esi
    919f:	83 ee 01             	sub    $0x1,%esi
    91a2:	40 84 74 02 01       	test   %sil,0x1(%rdx,%rax,1)
    91a7:	41 0f 95 c2          	setne  %r10b
    91ab:	eb 84                	jmp    9131 <bit_array_test_range_any+0x41>
    91ad:	0f 1f 00             	nopl   (%rax)

00000000000091b0 <bit_array_set>:
    91b0:	f3 0f 1e fa          	endbr64 
    91b4:	48 89 f1             	mov    %rsi,%rcx
    91b7:	48 89 f0             	mov    %rsi,%rax
    91ba:	ba 01 00 00 00       	mov    $0x1,%edx
    91bf:	48 c1 e8 03          	shr    $0x3,%rax
    91c3:	83 e1 07             	and    $0x7,%ecx
    91c6:	48 03 47 10          	add    0x10(%rdi),%rax
    91ca:	d3 e2                	shl    %cl,%edx
    91cc:	08 10                	or     %dl,(%rax)
    91ce:	c3                   	ret    
    91cf:	90                   	nop

00000000000091d0 <bit_array_set_range>:
    91d0:	f3 0f 1e fa          	endbr64 
    91d4:	48 89 f0             	mov    %rsi,%rax
    91d7:	4c 8b 4f 10          	mov    0x10(%rdi),%r9
    91db:	83 e6 07             	and    $0x7,%esi
    91de:	b9 08 00 00 00       	mov    $0x8,%ecx
    91e3:	48 c1 e8 03          	shr    $0x3,%rax
    91e7:	48 29 f1             	sub    %rsi,%rcx
    91ea:	49 89 d0             	mov    %rdx,%r8
    91ed:	49 01 c1             	add    %rax,%r9
    91f0:	45 0f b6 11          	movzbl (%r9),%r10d
    91f4:	48 39 d1             	cmp    %rdx,%rcx
    91f7:	73 67                	jae    9260 <bit_array_set_range+0x90>
    91f9:	ba 01 00 00 00       	mov    $0x1,%edx
    91fe:	d3 e2                	shl    %cl,%edx
    9200:	89 f1                	mov    %esi,%ecx
    9202:	83 ea 01             	sub    $0x1,%edx
    9205:	d3 e2                	shl    %cl,%edx
    9207:	4a 8d 4c 06 f8       	lea    -0x8(%rsi,%r8,1),%rcx
    920c:	41 09 d2             	or     %edx,%r10d
    920f:	45 88 11             	mov    %r10b,(%r9)
    9212:	48 83 f9 07          	cmp    $0x7,%rcx
    9216:	76 68                	jbe    9280 <bit_array_set_range+0xb0>
    9218:	48 8d 51 f8          	lea    -0x8(%rcx),%rdx
    921c:	48 83 c0 01          	add    $0x1,%rax
    9220:	48 c1 ea 03          	shr    $0x3,%rdx
    9224:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
    9228:	eb 0a                	jmp    9234 <bit_array_set_range+0x64>
    922a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9230:	48 83 c0 01          	add    $0x1,%rax
    9234:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    9238:	c6 04 02 ff          	movb   $0xff,(%rdx,%rax,1)
    923c:	48 39 f0             	cmp    %rsi,%rax
    923f:	75 ef                	jne    9230 <bit_array_set_range+0x60>
    9241:	83 e1 07             	and    $0x7,%ecx
    9244:	48 85 c9             	test   %rcx,%rcx
    9247:	74 12                	je     925b <bit_array_set_range+0x8b>
    9249:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    924d:	b8 01 00 00 00       	mov    $0x1,%eax
    9252:	d3 e0                	shl    %cl,%eax
    9254:	83 e8 01             	sub    $0x1,%eax
    9257:	08 44 32 01          	or     %al,0x1(%rdx,%rsi,1)
    925b:	c3                   	ret    
    925c:	0f 1f 40 00          	nopl   0x0(%rax)
    9260:	89 d1                	mov    %edx,%ecx
    9262:	b8 01 00 00 00       	mov    $0x1,%eax
    9267:	d3 e0                	shl    %cl,%eax
    9269:	89 f1                	mov    %esi,%ecx
    926b:	83 e8 01             	sub    $0x1,%eax
    926e:	d3 e0                	shl    %cl,%eax
    9270:	44 09 d0             	or     %r10d,%eax
    9273:	41 88 01             	mov    %al,(%r9)
    9276:	c3                   	ret    
    9277:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    927e:	00 00 
    9280:	48 89 c6             	mov    %rax,%rsi
    9283:	eb bf                	jmp    9244 <bit_array_set_range+0x74>
    9285:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    928c:	00 00 00 
    928f:	90                   	nop

0000000000009290 <bit_array_set_all>:
    9290:	f3 0f 1e fa          	endbr64 
    9294:	48 8b 17             	mov    (%rdi),%rdx
    9297:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    929b:	be ff 00 00 00       	mov    $0xff,%esi
    92a0:	e9 0b 77 00 00       	jmp    109b0 <memset>
    92a5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    92ac:	00 00 00 
    92af:	90                   	nop

00000000000092b0 <clear_mask>:
    92b0:	f3 0f 1e fa          	endbr64 
    92b4:	89 f1                	mov    %esi,%ecx
    92b6:	b8 01 00 00 00       	mov    $0x1,%eax
    92bb:	d3 e0                	shl    %cl,%eax
    92bd:	89 f9                	mov    %edi,%ecx
    92bf:	83 e8 01             	sub    $0x1,%eax
    92c2:	d3 e0                	shl    %cl,%eax
    92c4:	f7 d0                	not    %eax
    92c6:	c3                   	ret    
    92c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    92ce:	00 00 

00000000000092d0 <bit_array_reset_range>:
    92d0:	f3 0f 1e fa          	endbr64 
    92d4:	48 89 f0             	mov    %rsi,%rax
    92d7:	4c 8b 4f 10          	mov    0x10(%rdi),%r9
    92db:	83 e6 07             	and    $0x7,%esi
    92de:	b9 08 00 00 00       	mov    $0x8,%ecx
    92e3:	48 c1 e8 03          	shr    $0x3,%rax
    92e7:	48 29 f1             	sub    %rsi,%rcx
    92ea:	49 89 d0             	mov    %rdx,%r8
    92ed:	49 01 c1             	add    %rax,%r9
    92f0:	45 0f b6 11          	movzbl (%r9),%r10d
    92f4:	48 39 d1             	cmp    %rdx,%rcx
    92f7:	73 67                	jae    9360 <bit_array_reset_range+0x90>
    92f9:	ba 01 00 00 00       	mov    $0x1,%edx
    92fe:	d3 e2                	shl    %cl,%edx
    9300:	89 f1                	mov    %esi,%ecx
    9302:	83 ea 01             	sub    $0x1,%edx
    9305:	d3 e2                	shl    %cl,%edx
    9307:	4a 8d 4c 06 f8       	lea    -0x8(%rsi,%r8,1),%rcx
    930c:	f7 d2                	not    %edx
    930e:	44 21 d2             	and    %r10d,%edx
    9311:	41 88 11             	mov    %dl,(%r9)
    9314:	48 83 f9 07          	cmp    $0x7,%rcx
    9318:	76 66                	jbe    9380 <bit_array_reset_range+0xb0>
    931a:	48 8d 51 f8          	lea    -0x8(%rcx),%rdx
    931e:	48 83 c0 01          	add    $0x1,%rax
    9322:	48 c1 ea 03          	shr    $0x3,%rdx
    9326:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
    932a:	eb 08                	jmp    9334 <bit_array_reset_range+0x64>
    932c:	0f 1f 40 00          	nopl   0x0(%rax)
    9330:	48 83 c0 01          	add    $0x1,%rax
    9334:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    9338:	c6 04 02 00          	movb   $0x0,(%rdx,%rax,1)
    933c:	48 39 f0             	cmp    %rsi,%rax
    933f:	75 ef                	jne    9330 <bit_array_reset_range+0x60>
    9341:	83 e1 07             	and    $0x7,%ecx
    9344:	48 85 c9             	test   %rcx,%rcx
    9347:	74 0f                	je     9358 <bit_array_reset_range+0x88>
    9349:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    934d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    9352:	d3 e0                	shl    %cl,%eax
    9354:	20 44 32 01          	and    %al,0x1(%rdx,%rsi,1)
    9358:	c3                   	ret    
    9359:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9360:	89 d1                	mov    %edx,%ecx
    9362:	b8 01 00 00 00       	mov    $0x1,%eax
    9367:	d3 e0                	shl    %cl,%eax
    9369:	89 f1                	mov    %esi,%ecx
    936b:	83 e8 01             	sub    $0x1,%eax
    936e:	d3 e0                	shl    %cl,%eax
    9370:	f7 d0                	not    %eax
    9372:	44 21 d0             	and    %r10d,%eax
    9375:	41 88 01             	mov    %al,(%r9)
    9378:	c3                   	ret    
    9379:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9380:	48 89 c6             	mov    %rax,%rsi
    9383:	eb bf                	jmp    9344 <bit_array_reset_range+0x74>
    9385:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    938c:	00 00 00 
    938f:	90                   	nop

0000000000009390 <bit_array_reset_all>:
    9390:	f3 0f 1e fa          	endbr64 
    9394:	48 8b 17             	mov    (%rdi),%rdx
    9397:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    939b:	31 f6                	xor    %esi,%esi
    939d:	e9 0e 76 00 00       	jmp    109b0 <memset>
    93a2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    93a9:	00 00 00 
    93ac:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000093b0 <bit_array_reattach>:
    93b0:	f3 0f 1e fa          	endbr64 
    93b4:	41 54                	push   %r12
    93b6:	49 89 d4             	mov    %rdx,%r12
    93b9:	55                   	push   %rbp
    93ba:	48 89 f5             	mov    %rsi,%rbp
    93bd:	53                   	push   %rbx
    93be:	48 89 fb             	mov    %rdi,%rbx
    93c1:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    93c5:	48 85 ff             	test   %rdi,%rdi
    93c8:	74 05                	je     93cf <bit_array_reattach+0x1f>
    93ca:	e8 71 23 00 00       	call   b740 <efree>
    93cf:	48 8d 45 07          	lea    0x7(%rbp),%rax
    93d3:	48 89 6b 08          	mov    %rbp,0x8(%rbx)
    93d7:	48 c1 e8 03          	shr    $0x3,%rax
    93db:	4c 89 63 10          	mov    %r12,0x10(%rbx)
    93df:	48 89 03             	mov    %rax,(%rbx)
    93e2:	5b                   	pop    %rbx
    93e3:	5d                   	pop    %rbp
    93e4:	41 5c                	pop    %r12
    93e6:	c3                   	ret    
    93e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    93ee:	00 00 

00000000000093f0 <bit_array_split>:
    93f0:	f3 0f 1e fa          	endbr64 
    93f4:	41 57                	push   %r15
    93f6:	41 56                	push   %r14
    93f8:	41 55                	push   %r13
    93fa:	41 54                	push   %r12
    93fc:	55                   	push   %rbp
    93fd:	53                   	push   %rbx
    93fe:	48 89 fb             	mov    %rdi,%rbx
    9401:	48 83 ec 38          	sub    $0x38,%rsp
    9405:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    940a:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    940f:	48 85 f6             	test   %rsi,%rsi
    9412:	0f 84 88 01 00 00    	je     95a0 <bit_array_split+0x1b0>
    9418:	4c 8b 77 08          	mov    0x8(%rdi),%r14
    941c:	45 31 e4             	xor    %r12d,%r12d
    941f:	4c 39 f6             	cmp    %r14,%rsi
    9422:	72 24                	jb     9448 <bit_array_split+0x58>
    9424:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    9429:	48 89 18             	mov    %rbx,(%rax)
    942c:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    9431:	4c 89 20             	mov    %r12,(%rax)
    9434:	31 c0                	xor    %eax,%eax
    9436:	48 83 c4 38          	add    $0x38,%rsp
    943a:	5b                   	pop    %rbx
    943b:	5d                   	pop    %rbp
    943c:	41 5c                	pop    %r12
    943e:	41 5d                	pop    %r13
    9440:	41 5e                	pop    %r14
    9442:	41 5f                	pop    %r15
    9444:	c3                   	ret    
    9445:	0f 1f 00             	nopl   (%rax)
    9448:	48 8d 46 07          	lea    0x7(%rsi),%rax
    944c:	48 89 f5             	mov    %rsi,%rbp
    944f:	41 89 f7             	mov    %esi,%r15d
    9452:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
    9457:	48 c1 e8 03          	shr    $0x3,%rax
    945b:	49 29 f6             	sub    %rsi,%r14
    945e:	48 c1 ed 03          	shr    $0x3,%rbp
    9462:	41 83 e7 07          	and    $0x7,%r15d
    9466:	48 89 c7             	mov    %rax,%rdi
    9469:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    946e:	e8 4d 20 00 00       	call   b4c0 <emalloc>
    9473:	49 89 c5             	mov    %rax,%r13
    9476:	48 85 c0             	test   %rax,%rax
    9479:	0f 84 98 01 00 00    	je     9617 <bit_array_split+0x227>
    947f:	48 85 ed             	test   %rbp,%rbp
    9482:	0f 84 80 01 00 00    	je     9608 <bit_array_split+0x218>
    9488:	31 c0                	xor    %eax,%eax
    948a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9490:	48 8b 53 10          	mov    0x10(%rbx),%rdx
    9494:	0f b6 14 02          	movzbl (%rdx,%rax,1),%edx
    9498:	41 88 54 05 00       	mov    %dl,0x0(%r13,%rax,1)
    949d:	48 83 c0 01          	add    $0x1,%rax
    94a1:	48 39 c5             	cmp    %rax,%rbp
    94a4:	75 ea                	jne    9490 <bit_array_split+0xa0>
    94a6:	48 89 ea             	mov    %rbp,%rdx
    94a9:	45 84 ff             	test   %r15b,%r15b
    94ac:	0f 85 fe 00 00 00    	jne    95b0 <bit_array_split+0x1c0>
    94b2:	4c 89 f7             	mov    %r14,%rdi
    94b5:	e8 26 fa ff ff       	call   8ee0 <bit_array_new>
    94ba:	49 89 c4             	mov    %rax,%r12
    94bd:	48 85 c0             	test   %rax,%rax
    94c0:	0f 84 49 01 00 00    	je     960f <bit_array_split+0x21f>
    94c6:	49 89 ea             	mov    %rbp,%r10
    94c9:	31 d2                	xor    %edx,%edx
    94cb:	49 83 fe 07          	cmp    $0x7,%r14
    94cf:	76 78                	jbe    9549 <bit_array_split+0x159>
    94d1:	49 8d 46 f8          	lea    -0x8(%r14),%rax
    94d5:	45 0f b6 df          	movzbl %r15b,%r11d
    94d9:	41 b9 08 00 00 00    	mov    $0x8,%r9d
    94df:	31 ff                	xor    %edi,%edi
    94e1:	48 c1 e8 03          	shr    $0x3,%rax
    94e5:	48 8d 55 01          	lea    0x1(%rbp),%rdx
    94e9:	44 88 7c 24 2f       	mov    %r15b,0x2f(%rsp)
    94ee:	45 29 d9             	sub    %r11d,%r9d
    94f1:	48 89 c6             	mov    %rax,%rsi
    94f4:	4c 8d 14 02          	lea    (%rdx,%rax,1),%r10
    94f8:	eb 0a                	jmp    9504 <bit_array_split+0x114>
    94fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9500:	48 83 c2 01          	add    $0x1,%rdx
    9504:	4c 8b 43 10          	mov    0x10(%rbx),%r8
    9508:	48 89 e8             	mov    %rbp,%rax
    950b:	44 89 d9             	mov    %r11d,%ecx
    950e:	49 89 ff             	mov    %rdi,%r15
    9511:	48 89 d5             	mov    %rdx,%rbp
    9514:	48 83 c7 01          	add    $0x1,%rdi
    9518:	41 0f b6 04 00       	movzbl (%r8,%rax,1),%eax
    951d:	45 0f b6 04 10       	movzbl (%r8,%rdx,1),%r8d
    9522:	d3 f8                	sar    %cl,%eax
    9524:	44 89 c9             	mov    %r9d,%ecx
    9527:	41 d3 e0             	shl    %cl,%r8d
    952a:	49 8b 4c 24 10       	mov    0x10(%r12),%rcx
    952f:	44 09 c0             	or     %r8d,%eax
    9532:	42 88 04 39          	mov    %al,(%rcx,%r15,1)
    9536:	4c 39 d2             	cmp    %r10,%rdx
    9539:	75 c5                	jne    9500 <bit_array_split+0x110>
    953b:	44 0f b6 7c 24 2f    	movzbl 0x2f(%rsp),%r15d
    9541:	48 8d 56 01          	lea    0x1(%rsi),%rdx
    9545:	41 83 e6 07          	and    $0x7,%r14d
    9549:	b8 08 00 00 00       	mov    $0x8,%eax
    954e:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    9552:	44 29 f8             	sub    %r15d,%eax
    9555:	48 0f be c0          	movsbq %al,%rax
    9559:	4c 39 f0             	cmp    %r14,%rax
    955c:	72 72                	jb     95d0 <bit_array_split+0x1e0>
    955e:	4d 85 f6             	test   %r14,%r14
    9561:	74 16                	je     9579 <bit_array_split+0x189>
    9563:	42 0f b6 04 17       	movzbl (%rdi,%r10,1),%eax
    9568:	49 8b 74 24 10       	mov    0x10(%r12),%rsi
    956d:	44 89 f9             	mov    %r15d,%ecx
    9570:	d3 f8                	sar    %cl,%eax
    9572:	88 04 16             	mov    %al,(%rsi,%rdx,1)
    9575:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    9579:	48 85 ff             	test   %rdi,%rdi
    957c:	74 05                	je     9583 <bit_array_split+0x193>
    957e:	e8 bd 21 00 00       	call   b740 <efree>
    9583:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    9588:	4c 89 6b 10          	mov    %r13,0x10(%rbx)
    958c:	48 89 03             	mov    %rax,(%rbx)
    958f:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    9594:	48 89 43 08          	mov    %rax,0x8(%rbx)
    9598:	e9 87 fe ff ff       	jmp    9424 <bit_array_split+0x34>
    959d:	0f 1f 00             	nopl   (%rax)
    95a0:	49 89 fc             	mov    %rdi,%r12
    95a3:	31 db                	xor    %ebx,%ebx
    95a5:	e9 7a fe ff ff       	jmp    9424 <bit_array_split+0x34>
    95aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    95b0:	48 8b 73 10          	mov    0x10(%rbx),%rsi
    95b4:	b8 01 00 00 00       	mov    $0x1,%eax
    95b9:	44 89 f9             	mov    %r15d,%ecx
    95bc:	d3 e0                	shl    %cl,%eax
    95be:	83 e8 01             	sub    $0x1,%eax
    95c1:	22 04 16             	and    (%rsi,%rdx,1),%al
    95c4:	41 88 44 15 00       	mov    %al,0x0(%r13,%rdx,1)
    95c9:	e9 e4 fe ff ff       	jmp    94b2 <bit_array_split+0xc2>
    95ce:	66 90                	xchg   %ax,%ax
    95d0:	42 0f b6 44 17 01    	movzbl 0x1(%rdi,%r10,1),%eax
    95d6:	45 0f b6 c7          	movzbl %r15b,%r8d
    95da:	b9 08 00 00 00       	mov    $0x8,%ecx
    95df:	42 0f b6 3c 17       	movzbl (%rdi,%r10,1),%edi
    95e4:	44 29 c1             	sub    %r8d,%ecx
    95e7:	49 8b 74 24 10       	mov    0x10(%r12),%rsi
    95ec:	d3 e0                	shl    %cl,%eax
    95ee:	44 89 f9             	mov    %r15d,%ecx
    95f1:	d3 ff                	sar    %cl,%edi
    95f3:	09 f8                	or     %edi,%eax
    95f5:	88 04 16             	mov    %al,(%rsi,%rdx,1)
    95f8:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    95fc:	e9 78 ff ff ff       	jmp    9579 <bit_array_split+0x189>
    9601:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9608:	31 d2                	xor    %edx,%edx
    960a:	e9 9a fe ff ff       	jmp    94a9 <bit_array_split+0xb9>
    960f:	4c 89 ef             	mov    %r13,%rdi
    9612:	e8 29 21 00 00       	call   b740 <efree>
    9617:	b8 0c 00 00 00       	mov    $0xc,%eax
    961c:	e9 15 fe ff ff       	jmp    9436 <bit_array_split+0x46>
    9621:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    9628:	00 00 00 
    962b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000009630 <ema_do_uncommit_real>:
    9630:	55                   	push   %rbp
    9631:	48 89 e5             	mov    %rsp,%rbp
    9634:	41 57                	push   %r15
    9636:	41 56                	push   %r14
    9638:	41 55                	push   %r13
    963a:	41 54                	push   %r12
    963c:	53                   	push   %rbx
    963d:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    9641:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
    9648:	89 4c 24 28          	mov    %ecx,0x28(%rsp)
    964c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    9653:	00 00 
    9655:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
    965c:	00 
    965d:	48 8b 47 18          	mov    0x18(%rdi),%rax
    9661:	f6 47 10 01          	testb  $0x1,0x10(%rdi)
    9665:	0f 85 68 01 00 00    	jne    97d3 <ema_do_uncommit_real+0x1a3>
    966b:	25 00 ff 00 00       	and    $0xff00,%eax
    9670:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9674:	48 89 fb             	mov    %rdi,%rbx
    9677:	49 89 f7             	mov    %rsi,%r15
    967a:	89 44 24 24          	mov    %eax,0x24(%rsp)
    967e:	8b 44 24 28          	mov    0x28(%rsp),%eax
    9682:	49 89 d4             	mov    %rdx,%r12
    9685:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
    968c:	00 00 
    968e:	80 cc 04             	or     $0x4,%ah
    9691:	0f 11 44 24 48       	movups %xmm0,0x48(%rsp)
    9696:	48 c7 44 24 40 10 04 	movq   $0x410,0x40(%rsp)
    969d:	00 00 
    969f:	89 44 24 2c          	mov    %eax,0x2c(%rsp)
    96a3:	0f 11 44 24 58       	movups %xmm0,0x58(%rsp)
    96a8:	0f 11 44 24 68       	movups %xmm0,0x68(%rsp)
    96ad:	0f 1f 00             	nopl   (%rax)
    96b0:	4d 39 e7             	cmp    %r12,%r15
    96b3:	72 17                	jb     96cc <ema_do_uncommit_real+0x9c>
    96b5:	e9 19 01 00 00       	jmp    97d3 <ema_do_uncommit_real+0x1a3>
    96ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    96c0:	49 81 c7 00 10 00 00 	add    $0x1000,%r15
    96c7:	4d 39 e7             	cmp    %r12,%r15
    96ca:	73 17                	jae    96e3 <ema_do_uncommit_real+0xb3>
    96cc:	4c 89 fe             	mov    %r15,%rsi
    96cf:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    96d3:	48 2b 33             	sub    (%rbx),%rsi
    96d6:	48 c1 ee 0c          	shr    $0xc,%rsi
    96da:	e8 01 f9 ff ff       	call   8fe0 <bit_array_test>
    96df:	84 c0                	test   %al,%al
    96e1:	74 dd                	je     96c0 <ema_do_uncommit_real+0x90>
    96e3:	4c 89 7c 24 38       	mov    %r15,0x38(%rsp)
    96e8:	4d 39 fc             	cmp    %r15,%r12
    96eb:	0f 84 e2 00 00 00    	je     97d3 <ema_do_uncommit_real+0x1a3>
    96f1:	49 81 c7 00 10 00 00 	add    $0x1000,%r15
    96f8:	4d 39 e7             	cmp    %r12,%r15
    96fb:	72 17                	jb     9714 <ema_do_uncommit_real+0xe4>
    96fd:	e9 f5 00 00 00       	jmp    97f7 <ema_do_uncommit_real+0x1c7>
    9702:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9708:	49 81 c7 00 10 00 00 	add    $0x1000,%r15
    970f:	4d 39 e7             	cmp    %r12,%r15
    9712:	73 17                	jae    972b <ema_do_uncommit_real+0xfb>
    9714:	4c 89 fe             	mov    %r15,%rsi
    9717:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    971b:	48 2b 33             	sub    (%rbx),%rsi
    971e:	48 c1 ee 0c          	shr    $0xc,%rsi
    9722:	e8 b9 f8 ff ff       	call   8fe0 <bit_array_test>
    9727:	84 c0                	test   %al,%al
    9729:	75 dd                	jne    9708 <ema_do_uncommit_real+0xd8>
    972b:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
    9730:	4c 89 f8             	mov    %r15,%rax
    9733:	48 29 c8             	sub    %rcx,%rax
    9736:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    973b:	8b 54 24 24          	mov    0x24(%rsp),%edx
    973f:	8b 44 24 28          	mov    0x28(%rsp),%eax
    9743:	8b 4c 24 2c          	mov    0x2c(%rsp),%ecx
    9747:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
    974c:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
    9751:	09 c2                	or     %eax,%edx
    9753:	e8 d8 c1 ff ff       	call   5930 <sgx_mm_modify_ocall>
    9758:	85 c0                	test   %eax,%eax
    975a:	75 70                	jne    97cc <ema_do_uncommit_real+0x19c>
    975c:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    9761:	4c 8d 6c 24 40       	lea    0x40(%rsp),%r13
    9766:	49 89 c6             	mov    %rax,%r14
    9769:	4c 39 f8             	cmp    %r15,%rax
    976c:	73 21                	jae    978f <ema_do_uncommit_real+0x15f>
    976e:	66 90                	xchg   %ax,%ax
    9770:	4c 89 f6             	mov    %r14,%rsi
    9773:	4c 89 ef             	mov    %r13,%rdi
    9776:	e8 44 8d 00 00       	call   124bf <do_eaccept>
    977b:	85 c0                	test   %eax,%eax
    977d:	0f 85 82 00 00 00    	jne    9805 <ema_do_uncommit_real+0x1d5>
    9783:	49 81 c6 00 10 00 00 	add    $0x1000,%r14
    978a:	4d 39 fe             	cmp    %r15,%r14
    978d:	72 e1                	jb     9770 <ema_do_uncommit_real+0x140>
    978f:	4c 8b 74 24 30       	mov    0x30(%rsp),%r14
    9794:	4c 8b 6c 24 38       	mov    0x38(%rsp),%r13
    9799:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    979d:	4c 89 f2             	mov    %r14,%rdx
    97a0:	4c 89 ee             	mov    %r13,%rsi
    97a3:	48 2b 33             	sub    (%rbx),%rsi
    97a6:	48 c1 ea 0c          	shr    $0xc,%rdx
    97aa:	48 c1 ee 0c          	shr    $0xc,%rsi
    97ae:	e8 1d fb ff ff       	call   92d0 <bit_array_reset_range>
    97b3:	8b 4c 24 2c          	mov    0x2c(%rsp),%ecx
    97b7:	4c 89 f6             	mov    %r14,%rsi
    97ba:	4c 89 ef             	mov    %r13,%rdi
    97bd:	89 ca                	mov    %ecx,%edx
    97bf:	e8 6c c1 ff ff       	call   5930 <sgx_mm_modify_ocall>
    97c4:	85 c0                	test   %eax,%eax
    97c6:	0f 84 e4 fe ff ff    	je     96b0 <ema_do_uncommit_real+0x80>
    97cc:	b8 0e 00 00 00       	mov    $0xe,%eax
    97d1:	eb 02                	jmp    97d5 <ema_do_uncommit_real+0x1a5>
    97d3:	31 c0                	xor    %eax,%eax
    97d5:	48 8b 94 24 b8 00 00 	mov    0xb8(%rsp),%rdx
    97dc:	00 
    97dd:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    97e4:	00 00 
    97e6:	75 22                	jne    980a <ema_do_uncommit_real+0x1da>
    97e8:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    97ec:	5b                   	pop    %rbx
    97ed:	41 5c                	pop    %r12
    97ef:	41 5d                	pop    %r13
    97f1:	41 5e                	pop    %r14
    97f3:	41 5f                	pop    %r15
    97f5:	5d                   	pop    %rbp
    97f6:	c3                   	ret    
    97f7:	48 c7 44 24 30 00 10 	movq   $0x1000,0x30(%rsp)
    97fe:	00 00 
    9800:	e9 36 ff ff ff       	jmp    973b <ema_do_uncommit_real+0x10b>
    9805:	e8 2d 8d 00 00       	call   12537 <abort>
    980a:	e8 f1 72 00 00       	call   10b00 <__stack_chk_fail>
    980f:	90                   	nop

0000000000009810 <get_ema_alloc_flags>:
    9810:	f3 0f 1e fa          	endbr64 
    9814:	8b 47 10             	mov    0x10(%rdi),%eax
    9817:	c3                   	ret    
    9818:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    981f:	00 

0000000000009820 <get_ema_si_flags>:
    9820:	f3 0f 1e fa          	endbr64 
    9824:	48 8b 47 18          	mov    0x18(%rdi),%rax
    9828:	c3                   	ret    
    9829:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000009830 <ema_fault_handler>:
    9830:	f3 0f 1e fa          	endbr64 
    9834:	48 85 f6             	test   %rsi,%rsi
    9837:	74 07                	je     9840 <ema_fault_handler+0x10>
    9839:	48 8b 47 30          	mov    0x30(%rdi),%rax
    983d:	48 89 06             	mov    %rax,(%rsi)
    9840:	48 8b 47 28          	mov    0x28(%rdi),%rax
    9844:	c3                   	ret    
    9845:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    984c:	00 00 00 
    984f:	90                   	nop

0000000000009850 <ema_set_eaccept_full>:
    9850:	f3 0f 1e fa          	endbr64 
    9854:	53                   	push   %rbx
    9855:	48 89 fb             	mov    %rdi,%rbx
    9858:	48 8b 7f 20          	mov    0x20(%rdi),%rdi
    985c:	48 85 ff             	test   %rdi,%rdi
    985f:	74 0f                	je     9870 <ema_set_eaccept_full+0x20>
    9861:	e8 2a fa ff ff       	call   9290 <bit_array_set_all>
    9866:	31 c0                	xor    %eax,%eax
    9868:	5b                   	pop    %rbx
    9869:	c3                   	ret    
    986a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9870:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    9874:	48 c1 ef 0c          	shr    $0xc,%rdi
    9878:	e8 e3 f6 ff ff       	call   8f60 <bit_array_new_set>
    987d:	48 89 43 20          	mov    %rax,0x20(%rbx)
    9881:	48 85 c0             	test   %rax,%rax
    9884:	75 e0                	jne    9866 <ema_set_eaccept_full+0x16>
    9886:	b8 0c 00 00 00       	mov    $0xc,%eax
    988b:	5b                   	pop    %rbx
    988c:	c3                   	ret    
    988d:	0f 1f 00             	nopl   (%rax)

0000000000009890 <ema_clear_eaccept_full>:
    9890:	f3 0f 1e fa          	endbr64 
    9894:	53                   	push   %rbx
    9895:	48 89 fb             	mov    %rdi,%rbx
    9898:	48 8b 7f 20          	mov    0x20(%rdi),%rdi
    989c:	48 85 ff             	test   %rdi,%rdi
    989f:	74 0f                	je     98b0 <ema_clear_eaccept_full+0x20>
    98a1:	e8 ea fa ff ff       	call   9390 <bit_array_reset_all>
    98a6:	31 c0                	xor    %eax,%eax
    98a8:	5b                   	pop    %rbx
    98a9:	c3                   	ret    
    98aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    98b0:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    98b4:	48 c1 ef 0c          	shr    $0xc,%rdi
    98b8:	e8 d3 f6 ff ff       	call   8f90 <bit_array_new_reset>
    98bd:	48 89 43 20          	mov    %rax,0x20(%rbx)
    98c1:	48 85 c0             	test   %rax,%rax
    98c4:	75 e0                	jne    98a6 <ema_clear_eaccept_full+0x16>
    98c6:	b8 0c 00 00 00       	mov    $0xc,%eax
    98cb:	5b                   	pop    %rbx
    98cc:	c3                   	ret    
    98cd:	0f 1f 00             	nopl   (%rax)

00000000000098d0 <ema_set_eaccept>:
    98d0:	f3 0f 1e fa          	endbr64 
    98d4:	48 85 ff             	test   %rdi,%rdi
    98d7:	74 6f                	je     9948 <ema_set_eaccept+0x78>
    98d9:	55                   	push   %rbp
    98da:	48 89 fd             	mov    %rdi,%rbp
    98dd:	48 83 ec 10          	sub    $0x10,%rsp
    98e1:	48 8b 07             	mov    (%rdi),%rax
    98e4:	48 8b 7f 20          	mov    0x20(%rdi),%rdi
    98e8:	48 29 c6             	sub    %rax,%rsi
    98eb:	48 29 c2             	sub    %rax,%rdx
    98ee:	48 c1 ee 0c          	shr    $0xc,%rsi
    98f2:	48 c1 ea 0c          	shr    $0xc,%rdx
    98f6:	48 85 ff             	test   %rdi,%rdi
    98f9:	74 15                	je     9910 <ema_set_eaccept+0x40>
    98fb:	48 29 f2             	sub    %rsi,%rdx
    98fe:	e8 cd f8 ff ff       	call   91d0 <bit_array_set_range>
    9903:	31 c0                	xor    %eax,%eax
    9905:	48 83 c4 10          	add    $0x10,%rsp
    9909:	5d                   	pop    %rbp
    990a:	c3                   	ret    
    990b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9910:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
    9914:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    9919:	48 89 34 24          	mov    %rsi,(%rsp)
    991d:	48 c1 ef 0c          	shr    $0xc,%rdi
    9921:	e8 6a f6 ff ff       	call   8f90 <bit_array_new_reset>
    9926:	48 8b 34 24          	mov    (%rsp),%rsi
    992a:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    992f:	48 85 c0             	test   %rax,%rax
    9932:	48 89 45 20          	mov    %rax,0x20(%rbp)
    9936:	48 89 c7             	mov    %rax,%rdi
    9939:	75 c0                	jne    98fb <ema_set_eaccept+0x2b>
    993b:	b8 0c 00 00 00       	mov    $0xc,%eax
    9940:	eb c3                	jmp    9905 <ema_set_eaccept+0x35>
    9942:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9948:	b8 16 00 00 00       	mov    $0x16,%eax
    994d:	c3                   	ret    
    994e:	66 90                	xchg   %ax,%ax

0000000000009950 <ema_page_committed>:
    9950:	f3 0f 1e fa          	endbr64 
    9954:	48 8b 47 20          	mov    0x20(%rdi),%rax
    9958:	48 85 c0             	test   %rax,%rax
    995b:	74 13                	je     9970 <ema_page_committed+0x20>
    995d:	48 2b 37             	sub    (%rdi),%rsi
    9960:	48 89 c7             	mov    %rax,%rdi
    9963:	48 c1 ee 0c          	shr    $0xc,%rsi
    9967:	e9 74 f6 ff ff       	jmp    8fe0 <bit_array_test>
    996c:	0f 1f 40 00          	nopl   0x0(%rax)
    9970:	31 c0                	xor    %eax,%eax
    9972:	c3                   	ret    
    9973:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    997a:	00 00 00 
    997d:	0f 1f 00             	nopl   (%rax)

0000000000009980 <search_ema>:
    9980:	f3 0f 1e fa          	endbr64 
    9984:	48 8b 0f             	mov    (%rdi),%rcx
    9987:	48 8b 41 38          	mov    0x38(%rcx),%rax
    998b:	48 39 c1             	cmp    %rax,%rcx
    998e:	74 1a                	je     99aa <search_ema+0x2a>
    9990:	48 8b 10             	mov    (%rax),%rdx
    9993:	48 39 d6             	cmp    %rdx,%rsi
    9996:	72 09                	jb     99a1 <search_ema+0x21>
    9998:	48 03 50 08          	add    0x8(%rax),%rdx
    999c:	48 39 d6             	cmp    %rdx,%rsi
    999f:	72 0b                	jb     99ac <search_ema+0x2c>
    99a1:	48 8b 40 38          	mov    0x38(%rax),%rax
    99a5:	48 39 c1             	cmp    %rax,%rcx
    99a8:	75 e6                	jne    9990 <search_ema+0x10>
    99aa:	31 c0                	xor    %eax,%eax
    99ac:	c3                   	ret    
    99ad:	0f 1f 00             	nopl   (%rax)

00000000000099b0 <insert_ema>:
    99b0:	f3 0f 1e fa          	endbr64 
    99b4:	48 8b 56 40          	mov    0x40(%rsi),%rdx
    99b8:	66 48 0f 6e c6       	movq   %rsi,%xmm0
    99bd:	48 89 f8             	mov    %rdi,%rax
    99c0:	66 48 0f 6e ca       	movq   %rdx,%xmm1
    99c5:	66 0f 6c c1          	punpcklqdq %xmm1,%xmm0
    99c9:	0f 11 47 38          	movups %xmm0,0x38(%rdi)
    99cd:	48 89 7a 38          	mov    %rdi,0x38(%rdx)
    99d1:	48 89 7e 40          	mov    %rdi,0x40(%rsi)
    99d5:	c3                   	ret    
    99d6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    99dd:	00 00 00 

00000000000099e0 <push_back_ema>:
    99e0:	f3 0f 1e fa          	endbr64 
    99e4:	48 8b 07             	mov    (%rdi),%rax
    99e7:	48 8b 50 40          	mov    0x40(%rax),%rdx
    99eb:	66 48 0f 6e c0       	movq   %rax,%xmm0
    99f0:	66 48 0f 6e ca       	movq   %rdx,%xmm1
    99f5:	66 0f 6c c1          	punpcklqdq %xmm1,%xmm0
    99f9:	0f 11 46 38          	movups %xmm0,0x38(%rsi)
    99fd:	48 89 72 38          	mov    %rsi,0x38(%rdx)
    9a01:	48 89 70 40          	mov    %rsi,0x40(%rax)
    9a05:	c3                   	ret    
    9a06:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    9a0d:	00 00 00 

0000000000009a10 <search_ema_range>:
    9a10:	f3 0f 1e fa          	endbr64 
    9a14:	4c 8b 0f             	mov    (%rdi),%r9
    9a17:	49 89 fa             	mov    %rdi,%r10
    9a1a:	49 8b 41 38          	mov    0x38(%r9),%rax
    9a1e:	49 39 c1             	cmp    %rax,%r9
    9a21:	75 0e                	jne    9a31 <search_ema_range+0x21>
    9a23:	eb 4b                	jmp    9a70 <search_ema_range+0x60>
    9a25:	0f 1f 00             	nopl   (%rax)
    9a28:	48 8b 40 38          	mov    0x38(%rax),%rax
    9a2c:	49 39 c1             	cmp    %rax,%r9
    9a2f:	74 3f                	je     9a70 <search_ema_range+0x60>
    9a31:	48 8b 38             	mov    (%rax),%rdi
    9a34:	48 03 78 08          	add    0x8(%rax),%rdi
    9a38:	48 39 fe             	cmp    %rdi,%rsi
    9a3b:	73 eb                	jae    9a28 <search_ema_range+0x18>
    9a3d:	49 39 c1             	cmp    %rax,%r9
    9a40:	74 2e                	je     9a70 <search_ema_range+0x60>
    9a42:	48 39 10             	cmp    %rdx,(%rax)
    9a45:	73 29                	jae    9a70 <search_ema_range+0x60>
    9a47:	48 89 01             	mov    %rax,(%rcx)
    9a4a:	49 8b 0a             	mov    (%r10),%rcx
    9a4d:	48 39 c1             	cmp    %rax,%rcx
    9a50:	74 14                	je     9a66 <search_ema_range+0x56>
    9a52:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9a58:	48 8b 40 38          	mov    0x38(%rax),%rax
    9a5c:	48 39 c1             	cmp    %rax,%rcx
    9a5f:	74 05                	je     9a66 <search_ema_range+0x56>
    9a61:	48 39 10             	cmp    %rdx,(%rax)
    9a64:	72 f2                	jb     9a58 <search_ema_range+0x48>
    9a66:	31 d2                	xor    %edx,%edx
    9a68:	49 89 00             	mov    %rax,(%r8)
    9a6b:	89 d0                	mov    %edx,%eax
    9a6d:	c3                   	ret    
    9a6e:	66 90                	xchg   %ax,%ax
    9a70:	48 c7 01 00 00 00 00 	movq   $0x0,(%rcx)
    9a77:	31 c0                	xor    %eax,%eax
    9a79:	ba ff ff ff ff       	mov    $0xffffffff,%edx
    9a7e:	eb e8                	jmp    9a68 <search_ema_range+0x58>

0000000000009a80 <ema_split>:
    9a80:	f3 0f 1e fa          	endbr64 
    9a84:	41 56                	push   %r14
    9a86:	41 89 d6             	mov    %edx,%r14d
    9a89:	41 55                	push   %r13
    9a8b:	49 89 cd             	mov    %rcx,%r13
    9a8e:	41 54                	push   %r12
    9a90:	49 89 f4             	mov    %rsi,%r12
    9a93:	55                   	push   %rbp
    9a94:	53                   	push   %rbx
    9a95:	48 89 fb             	mov    %rdi,%rbx
    9a98:	bf 48 00 00 00       	mov    $0x48,%edi
    9a9d:	48 83 ec 30          	sub    $0x30,%rsp
    9aa1:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    9aa8:	00 00 
    9aaa:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    9aaf:	31 c0                	xor    %eax,%eax
    9ab1:	e8 0a 1a 00 00       	call   b4c0 <emalloc>
    9ab6:	48 85 c0             	test   %rax,%rax
    9ab9:	0f 84 39 01 00 00    	je     9bf8 <ema_split+0x178>
    9abf:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
    9ac6:	00 00 
    9ac8:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    9acc:	48 89 c5             	mov    %rax,%rbp
    9acf:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    9ad6:	00 00 
    9ad8:	48 85 ff             	test   %rdi,%rdi
    9adb:	74 21                	je     9afe <ema_split+0x7e>
    9add:	4c 89 e6             	mov    %r12,%rsi
    9ae0:	48 8d 4c 24 20       	lea    0x20(%rsp),%rcx
    9ae5:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
    9aea:	48 2b 33             	sub    (%rbx),%rsi
    9aed:	48 c1 ee 0c          	shr    $0xc,%rsi
    9af1:	e8 fa f8 ff ff       	call   93f0 <bit_array_split>
    9af6:	85 c0                	test   %eax,%eax
    9af8:	0f 85 e2 00 00 00    	jne    9be0 <ema_split+0x160>
    9afe:	ba 48 00 00 00       	mov    $0x48,%edx
    9b03:	48 89 de             	mov    %rbx,%rsi
    9b06:	48 89 ef             	mov    %rbp,%rdi
    9b09:	e8 62 6c 00 00       	call   10770 <memcpy>
    9b0e:	45 84 f6             	test   %r14b,%r14b
    9b11:	0f 85 99 00 00 00    	jne    9bb0 <ema_split+0x130>
    9b17:	48 8b 43 38          	mov    0x38(%rbx),%rax
    9b1b:	48 89 d9             	mov    %rbx,%rcx
    9b1e:	48 8b 50 40          	mov    0x40(%rax),%rdx
    9b22:	66 48 0f 6e c0       	movq   %rax,%xmm0
    9b27:	66 48 0f 6e da       	movq   %rdx,%xmm3
    9b2c:	66 0f 6c c3          	punpcklqdq %xmm3,%xmm0
    9b30:	0f 11 45 38          	movups %xmm0,0x38(%rbp)
    9b34:	48 89 6a 38          	mov    %rbp,0x38(%rdx)
    9b38:	48 89 ea             	mov    %rbp,%rdx
    9b3b:	48 89 68 40          	mov    %rbp,0x40(%rax)
    9b3f:	48 8b 03             	mov    (%rbx),%rax
    9b42:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    9b46:	4c 89 e7             	mov    %r12,%rdi
    9b49:	48 29 c7             	sub    %rax,%rdi
    9b4c:	66 48 0f 6e c0       	movq   %rax,%xmm0
    9b51:	48 01 f0             	add    %rsi,%rax
    9b54:	66 48 0f 6e cf       	movq   %rdi,%xmm1
    9b59:	4c 29 e0             	sub    %r12,%rax
    9b5c:	48 83 7b 20 00       	cmpq   $0x0,0x20(%rbx)
    9b61:	66 0f 6c c1          	punpcklqdq %xmm1,%xmm0
    9b65:	0f 11 01             	movups %xmm0,(%rcx)
    9b68:	4c 89 22             	mov    %r12,(%rdx)
    9b6b:	48 89 42 08          	mov    %rax,0x8(%rdx)
    9b6f:	74 12                	je     9b83 <ema_split+0x103>
    9b71:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    9b76:	48 89 41 20          	mov    %rax,0x20(%rcx)
    9b7a:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    9b7f:	48 89 42 20          	mov    %rax,0x20(%rdx)
    9b83:	49 89 6d 00          	mov    %rbp,0x0(%r13)
    9b87:	31 c0                	xor    %eax,%eax
    9b89:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    9b8e:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    9b95:	00 00 
    9b97:	75 66                	jne    9bff <ema_split+0x17f>
    9b99:	48 83 c4 30          	add    $0x30,%rsp
    9b9d:	5b                   	pop    %rbx
    9b9e:	5d                   	pop    %rbp
    9b9f:	41 5c                	pop    %r12
    9ba1:	41 5d                	pop    %r13
    9ba3:	41 5e                	pop    %r14
    9ba5:	c3                   	ret    
    9ba6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    9bad:	00 00 00 
    9bb0:	48 8b 43 40          	mov    0x40(%rbx),%rax
    9bb4:	66 48 0f 6e c3       	movq   %rbx,%xmm0
    9bb9:	48 89 da             	mov    %rbx,%rdx
    9bbc:	48 89 e9             	mov    %rbp,%rcx
    9bbf:	66 48 0f 6e d0       	movq   %rax,%xmm2
    9bc4:	66 0f 6c c2          	punpcklqdq %xmm2,%xmm0
    9bc8:	0f 11 45 38          	movups %xmm0,0x38(%rbp)
    9bcc:	48 89 68 38          	mov    %rbp,0x38(%rax)
    9bd0:	48 89 6b 40          	mov    %rbp,0x40(%rbx)
    9bd4:	e9 66 ff ff ff       	jmp    9b3f <ema_split+0xbf>
    9bd9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9be0:	48 89 ef             	mov    %rbp,%rdi
    9be3:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    9be7:	e8 54 1b 00 00       	call   b740 <efree>
    9bec:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    9bf0:	eb 97                	jmp    9b89 <ema_split+0x109>
    9bf2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9bf8:	b8 0c 00 00 00       	mov    $0xc,%eax
    9bfd:	eb 8a                	jmp    9b89 <ema_split+0x109>
    9bff:	e8 fc 6e 00 00       	call   10b00 <__stack_chk_fail>
    9c04:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    9c0b:	00 00 00 
    9c0e:	66 90                	xchg   %ax,%ax

0000000000009c10 <ema_split_ex>:
    9c10:	f3 0f 1e fa          	endbr64 
    9c14:	41 54                	push   %r12
    9c16:	49 89 cc             	mov    %rcx,%r12
    9c19:	55                   	push   %rbp
    9c1a:	48 89 d5             	mov    %rdx,%rbp
    9c1d:	53                   	push   %rbx
    9c1e:	48 89 fb             	mov    %rdi,%rbx
    9c21:	48 83 ec 10          	sub    $0x10,%rsp
    9c25:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    9c2c:	00 00 
    9c2e:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    9c33:	48 8b 07             	mov    (%rdi),%rax
    9c36:	48 39 f0             	cmp    %rsi,%rax
    9c39:	72 35                	jb     9c70 <ema_split_ex+0x60>
    9c3b:	48 03 43 08          	add    0x8(%rbx),%rax
    9c3f:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    9c46:	00 
    9c47:	48 39 c5             	cmp    %rax,%rbp
    9c4a:	72 44                	jb     9c90 <ema_split_ex+0x80>
    9c4c:	48 89 d8             	mov    %rbx,%rax
    9c4f:	49 89 04 24          	mov    %rax,(%r12)
    9c53:	31 c0                	xor    %eax,%eax
    9c55:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    9c5a:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    9c61:	00 00 
    9c63:	75 5b                	jne    9cc0 <ema_split_ex+0xb0>
    9c65:	48 83 c4 10          	add    $0x10,%rsp
    9c69:	5b                   	pop    %rbx
    9c6a:	5d                   	pop    %rbp
    9c6b:	41 5c                	pop    %r12
    9c6d:	c3                   	ret    
    9c6e:	66 90                	xchg   %ax,%ax
    9c70:	31 d2                	xor    %edx,%edx
    9c72:	48 89 e1             	mov    %rsp,%rcx
    9c75:	e8 06 fe ff ff       	call   9a80 <ema_split>
    9c7a:	85 c0                	test   %eax,%eax
    9c7c:	75 d7                	jne    9c55 <ema_split_ex+0x45>
    9c7e:	48 8b 14 24          	mov    (%rsp),%rdx
    9c82:	48 85 d2             	test   %rdx,%rdx
    9c85:	74 31                	je     9cb8 <ema_split_ex+0xa8>
    9c87:	48 8b 02             	mov    (%rdx),%rax
    9c8a:	48 89 d3             	mov    %rdx,%rbx
    9c8d:	eb ac                	jmp    9c3b <ema_split_ex+0x2b>
    9c8f:	90                   	nop
    9c90:	48 89 e1             	mov    %rsp,%rcx
    9c93:	ba 01 00 00 00       	mov    $0x1,%edx
    9c98:	48 89 ee             	mov    %rbp,%rsi
    9c9b:	48 89 df             	mov    %rbx,%rdi
    9c9e:	e8 dd fd ff ff       	call   9a80 <ema_split>
    9ca3:	85 c0                	test   %eax,%eax
    9ca5:	75 ae                	jne    9c55 <ema_split_ex+0x45>
    9ca7:	48 8b 04 24          	mov    (%rsp),%rax
    9cab:	48 85 c0             	test   %rax,%rax
    9cae:	75 9f                	jne    9c4f <ema_split_ex+0x3f>
    9cb0:	eb 9a                	jmp    9c4c <ema_split_ex+0x3c>
    9cb2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9cb8:	48 8b 03             	mov    (%rbx),%rax
    9cbb:	e9 7b ff ff ff       	jmp    9c3b <ema_split_ex+0x2b>
    9cc0:	e8 3b 6e 00 00       	call   10b00 <__stack_chk_fail>
    9cc5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    9ccc:	00 00 00 
    9ccf:	90                   	nop

0000000000009cd0 <find_free_region>:
    9cd0:	f3 0f 1e fa          	endbr64 
    9cd4:	41 57                	push   %r15
    9cd6:	49 89 cf             	mov    %rcx,%r15
    9cd9:	41 56                	push   %r14
    9cdb:	49 89 fe             	mov    %rdi,%r14
    9cde:	41 55                	push   %r13
    9ce0:	49 89 d5             	mov    %rdx,%r13
    9ce3:	41 54                	push   %r12
    9ce5:	49 f7 dd             	neg    %r13
    9ce8:	55                   	push   %rbp
    9ce9:	48 89 f5             	mov    %rsi,%rbp
    9cec:	53                   	push   %rbx
    9ced:	48 89 d3             	mov    %rdx,%rbx
    9cf0:	48 83 ec 18          	sub    $0x18,%rsp
    9cf4:	4c 8b 27             	mov    (%rdi),%r12
    9cf7:	49 8b 4c 24 38       	mov    0x38(%r12),%rcx
    9cfc:	49 c7 00 00 00 00 00 	movq   $0x0,(%r8)
    9d03:	49 c7 07 00 00 00 00 	movq   $0x0,(%r15)
    9d0a:	49 39 cc             	cmp    %rcx,%r12
    9d0d:	0f 84 a5 00 00 00    	je     9db8 <find_free_region+0xe8>
    9d13:	48 8b 51 38          	mov    0x38(%rcx),%rdx
    9d17:	4c 8b 11             	mov    (%rcx),%r10
    9d1a:	48 8d 73 ff          	lea    -0x1(%rbx),%rsi
    9d1e:	49 39 d4             	cmp    %rdx,%r12
    9d21:	0f 84 02 01 00 00    	je     9e29 <find_free_region+0x159>
    9d27:	4c 8b 0d d2 0c 02 00 	mov    0x20cd2(%rip),%r9        # 2aa00 <mm_user_end>
    9d2e:	48 89 c8             	mov    %rcx,%rax
    9d31:	48 8d 3d 30 03 01 00 	lea    0x10330(%rip),%rdi        # 1a068 <g_rts_ema_root>
    9d38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    9d3f:	00 
    9d40:	48 8b 58 08          	mov    0x8(%rax),%rbx
    9d44:	48 01 f3             	add    %rsi,%rbx
    9d47:	48 89 d8             	mov    %rbx,%rax
    9d4a:	4c 01 d0             	add    %r10,%rax
    9d4d:	4c 8b 12             	mov    (%rdx),%r10
    9d50:	4c 21 e8             	and    %r13,%rax
    9d53:	49 39 c2             	cmp    %rax,%r10
    9d56:	72 48                	jb     9da0 <find_free_region+0xd0>
    9d58:	4d 89 d3             	mov    %r10,%r11
    9d5b:	49 29 c3             	sub    %rax,%r11
    9d5e:	49 39 eb             	cmp    %rbp,%r11
    9d61:	72 3d                	jb     9da0 <find_free_region+0xd0>
    9d63:	49 39 fe             	cmp    %rdi,%r14
    9d66:	75 16                	jne    9d7e <find_free_region+0xae>
    9d68:	49 89 eb             	mov    %rbp,%r11
    9d6b:	49 01 c3             	add    %rax,%r11
    9d6e:	72 30                	jb     9da0 <find_free_region+0xd0>
    9d70:	4c 39 c8             	cmp    %r9,%rax
    9d73:	73 09                	jae    9d7e <find_free_region+0xae>
    9d75:	4c 39 1d 8c 0c 02 00 	cmp    %r11,0x20c8c(%rip)        # 2aa08 <mm_user_base>
    9d7c:	72 22                	jb     9da0 <find_free_region+0xd0>
    9d7e:	49 89 10             	mov    %rdx,(%r8)
    9d81:	49 89 07             	mov    %rax,(%r15)
    9d84:	48 83 c4 18          	add    $0x18,%rsp
    9d88:	b8 01 00 00 00       	mov    $0x1,%eax
    9d8d:	5b                   	pop    %rbx
    9d8e:	5d                   	pop    %rbp
    9d8f:	41 5c                	pop    %r12
    9d91:	41 5d                	pop    %r13
    9d93:	41 5e                	pop    %r14
    9d95:	41 5f                	pop    %r15
    9d97:	c3                   	ret    
    9d98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    9d9f:	00 
    9da0:	48 8b 5a 38          	mov    0x38(%rdx),%rbx
    9da4:	48 89 d0             	mov    %rdx,%rax
    9da7:	49 39 dc             	cmp    %rbx,%r12
    9daa:	0f 84 80 00 00 00    	je     9e30 <find_free_region+0x160>
    9db0:	48 89 da             	mov    %rbx,%rdx
    9db3:	eb 8b                	jmp    9d40 <find_free_region+0x70>
    9db5:	0f 1f 00             	nopl   (%rax)
    9db8:	48 8d 05 a9 02 01 00 	lea    0x102a9(%rip),%rax        # 1a068 <g_rts_ema_root>
    9dbf:	48 8b 15 42 0c 02 00 	mov    0x20c42(%rip),%rdx        # 2aa08 <mm_user_base>
    9dc6:	48 39 c7             	cmp    %rax,%rdi
    9dc9:	74 25                	je     9df0 <find_free_region+0x120>
    9dcb:	48 8d 44 1a ff       	lea    -0x1(%rdx,%rbx,1),%rax
    9dd0:	4c 21 e8             	and    %r13,%rax
    9dd3:	48 01 c5             	add    %rax,%rbp
    9dd6:	72 40                	jb     9e18 <find_free_region+0x148>
    9dd8:	48 39 d0             	cmp    %rdx,%rax
    9ddb:	72 3b                	jb     9e18 <find_free_region+0x148>
    9ddd:	48 39 2d 1c 0c 02 00 	cmp    %rbp,0x20c1c(%rip)        # 2aa00 <mm_user_end>
    9de4:	72 32                	jb     9e18 <find_free_region+0x148>
    9de6:	49 89 07             	mov    %rax,(%r15)
    9de9:	4d 89 20             	mov    %r12,(%r8)
    9dec:	eb 96                	jmp    9d84 <find_free_region+0xb4>
    9dee:	66 90                	xchg   %ax,%ax
    9df0:	48 39 f2             	cmp    %rsi,%rdx
    9df3:	0f 83 be 01 00 00    	jae    9fb7 <find_free_region+0x2e7>
    9df9:	48 8b 05 00 0c 02 00 	mov    0x20c00(%rip),%rax        # 2aa00 <mm_user_end>
    9e00:	4c 8d 74 03 ff       	lea    -0x1(%rbx,%rax,1),%r14
    9e05:	48 89 e8             	mov    %rbp,%rax
    9e08:	4d 21 ee             	and    %r13,%r14
    9e0b:	4c 01 f0             	add    %r14,%rax
    9e0e:	0f 83 e4 00 00 00    	jae    9ef8 <find_free_region+0x228>
    9e14:	0f 1f 40 00          	nopl   0x0(%rax)
    9e18:	31 c0                	xor    %eax,%eax
    9e1a:	48 83 c4 18          	add    $0x18,%rsp
    9e1e:	5b                   	pop    %rbx
    9e1f:	5d                   	pop    %rbp
    9e20:	41 5c                	pop    %r12
    9e22:	41 5d                	pop    %r13
    9e24:	41 5e                	pop    %r14
    9e26:	41 5f                	pop    %r15
    9e28:	c3                   	ret    
    9e29:	48 89 d3             	mov    %rdx,%rbx
    9e2c:	48 89 ca             	mov    %rcx,%rdx
    9e2f:	90                   	nop
    9e30:	4d 8d 24 32          	lea    (%r10,%rsi,1),%r12
    9e34:	4c 03 62 08          	add    0x8(%rdx),%r12
    9e38:	48 89 ee             	mov    %rbp,%rsi
    9e3b:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    9e40:	4d 21 ec             	and    %r13,%r12
    9e43:	48 89 0c 24          	mov    %rcx,(%rsp)
    9e47:	4c 89 e7             	mov    %r12,%rdi
    9e4a:	e8 71 bc ff ff       	call   5ac0 <sgx_mm_is_within_enclave>
    9e4f:	48 8b 0c 24          	mov    (%rsp),%rcx
    9e53:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
    9e58:	84 c0                	test   %al,%al
    9e5a:	74 4c                	je     9ea8 <find_free_region+0x1d8>
    9e5c:	48 89 ee             	mov    %rbp,%rsi
    9e5f:	31 d2                	xor    %edx,%edx
    9e61:	48 8d 05 00 02 01 00 	lea    0x10200(%rip),%rax        # 1a068 <g_rts_ema_root>
    9e68:	4c 01 e6             	add    %r12,%rsi
    9e6b:	0f 92 c2             	setb   %dl
    9e6e:	49 39 c6             	cmp    %rax,%r14
    9e71:	0f 84 a7 00 00 00    	je     9f1e <find_free_region+0x24e>
    9e77:	48 85 d2             	test   %rdx,%rdx
    9e7a:	0f 85 20 01 00 00    	jne    9fa0 <find_free_region+0x2d0>
    9e80:	4c 3b 25 81 0b 02 00 	cmp    0x20b81(%rip),%r12        # 2aa08 <mm_user_base>
    9e87:	0f 82 13 01 00 00    	jb     9fa0 <find_free_region+0x2d0>
    9e8d:	48 39 35 6c 0b 02 00 	cmp    %rsi,0x20b6c(%rip)        # 2aa00 <mm_user_end>
    9e94:	0f 82 06 01 00 00    	jb     9fa0 <find_free_region+0x2d0>
    9e9a:	49 89 18             	mov    %rbx,(%r8)
    9e9d:	4d 89 27             	mov    %r12,(%r15)
    9ea0:	e9 df fe ff ff       	jmp    9d84 <find_free_region+0xb4>
    9ea5:	0f 1f 00             	nopl   (%rax)
    9ea8:	48 8b 19             	mov    (%rcx),%rbx
    9eab:	48 39 eb             	cmp    %rbp,%rbx
    9eae:	0f 82 64 ff ff ff    	jb     9e18 <find_free_region+0x148>
    9eb4:	48 29 eb             	sub    %rbp,%rbx
    9eb7:	48 8d 05 aa 01 01 00 	lea    0x101aa(%rip),%rax        # 1a068 <g_rts_ema_root>
    9ebe:	4c 21 eb             	and    %r13,%rbx
    9ec1:	49 39 c6             	cmp    %rax,%r14
    9ec4:	0f 84 85 00 00 00    	je     9f4f <find_free_region+0x27f>
    9eca:	48 01 dd             	add    %rbx,%rbp
    9ecd:	0f 82 45 ff ff ff    	jb     9e18 <find_free_region+0x148>
    9ed3:	48 3b 1d 2e 0b 02 00 	cmp    0x20b2e(%rip),%rbx        # 2aa08 <mm_user_base>
    9eda:	0f 82 38 ff ff ff    	jb     9e18 <find_free_region+0x148>
    9ee0:	48 39 2d 19 0b 02 00 	cmp    %rbp,0x20b19(%rip)        # 2aa00 <mm_user_end>
    9ee7:	0f 82 2b ff ff ff    	jb     9e18 <find_free_region+0x148>
    9eed:	49 89 1f             	mov    %rbx,(%r15)
    9ef0:	49 89 08             	mov    %rcx,(%r8)
    9ef3:	e9 8c fe ff ff       	jmp    9d84 <find_free_region+0xb4>
    9ef8:	48 89 ee             	mov    %rbp,%rsi
    9efb:	4c 89 f7             	mov    %r14,%rdi
    9efe:	4c 89 04 24          	mov    %r8,(%rsp)
    9f02:	e8 b9 bb ff ff       	call   5ac0 <sgx_mm_is_within_enclave>
    9f07:	4c 8b 04 24          	mov    (%rsp),%r8
    9f0b:	84 c0                	test   %al,%al
    9f0d:	0f 84 05 ff ff ff    	je     9e18 <find_free_region+0x148>
    9f13:	4d 89 37             	mov    %r14,(%r15)
    9f16:	4d 89 20             	mov    %r12,(%r8)
    9f19:	e9 66 fe ff ff       	jmp    9d84 <find_free_region+0xb4>
    9f1e:	48 85 d2             	test   %rdx,%rdx
    9f21:	75 1a                	jne    9f3d <find_free_region+0x26d>
    9f23:	4c 3b 25 d6 0a 02 00 	cmp    0x20ad6(%rip),%r12        # 2aa00 <mm_user_end>
    9f2a:	0f 83 6a ff ff ff    	jae    9e9a <find_free_region+0x1ca>
    9f30:	48 39 35 d1 0a 02 00 	cmp    %rsi,0x20ad1(%rip)        # 2aa08 <mm_user_base>
    9f37:	0f 83 5d ff ff ff    	jae    9e9a <find_free_region+0x1ca>
    9f3d:	48 8b 19             	mov    (%rcx),%rbx
    9f40:	48 39 eb             	cmp    %rbp,%rbx
    9f43:	0f 82 cf fe ff ff    	jb     9e18 <find_free_region+0x148>
    9f49:	48 29 eb             	sub    %rbp,%rbx
    9f4c:	4c 21 eb             	and    %r13,%rbx
    9f4f:	48 89 ee             	mov    %rbp,%rsi
    9f52:	48 89 df             	mov    %rbx,%rdi
    9f55:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    9f5a:	48 89 0c 24          	mov    %rcx,(%rsp)
    9f5e:	e8 5d bb ff ff       	call   5ac0 <sgx_mm_is_within_enclave>
    9f63:	84 c0                	test   %al,%al
    9f65:	0f 84 ad fe ff ff    	je     9e18 <find_free_region+0x148>
    9f6b:	48 01 dd             	add    %rbx,%rbp
    9f6e:	0f 82 a4 fe ff ff    	jb     9e18 <find_free_region+0x148>
    9f74:	48 3b 1d 85 0a 02 00 	cmp    0x20a85(%rip),%rbx        # 2aa00 <mm_user_end>
    9f7b:	48 8b 0c 24          	mov    (%rsp),%rcx
    9f7f:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
    9f84:	0f 83 63 ff ff ff    	jae    9eed <find_free_region+0x21d>
    9f8a:	48 39 2d 77 0a 02 00 	cmp    %rbp,0x20a77(%rip)        # 2aa08 <mm_user_base>
    9f91:	0f 83 56 ff ff ff    	jae    9eed <find_free_region+0x21d>
    9f97:	31 c0                	xor    %eax,%eax
    9f99:	e9 7c fe ff ff       	jmp    9e1a <find_free_region+0x14a>
    9f9e:	66 90                	xchg   %ax,%ax
    9fa0:	48 8b 19             	mov    (%rcx),%rbx
    9fa3:	48 39 eb             	cmp    %rbp,%rbx
    9fa6:	0f 82 6c fe ff ff    	jb     9e18 <find_free_region+0x148>
    9fac:	48 29 eb             	sub    %rbp,%rbx
    9faf:	4c 21 eb             	and    %r13,%rbx
    9fb2:	e9 13 ff ff ff       	jmp    9eca <find_free_region+0x1fa>
    9fb7:	48 29 f2             	sub    %rsi,%rdx
    9fba:	4c 89 04 24          	mov    %r8,(%rsp)
    9fbe:	4c 21 ea             	and    %r13,%rdx
    9fc1:	48 89 d7             	mov    %rdx,%rdi
    9fc4:	49 89 d6             	mov    %rdx,%r14
    9fc7:	e8 f4 ba ff ff       	call   5ac0 <sgx_mm_is_within_enclave>
    9fcc:	4c 8b 04 24          	mov    (%rsp),%r8
    9fd0:	84 c0                	test   %al,%al
    9fd2:	0f 85 3b ff ff ff    	jne    9f13 <find_free_region+0x243>
    9fd8:	e9 1c fe ff ff       	jmp    9df9 <find_free_region+0x129>
    9fdd:	0f 1f 00             	nopl   (%rax)

0000000000009fe0 <find_free_region_at>:
    9fe0:	f3 0f 1e fa          	endbr64 
    9fe4:	41 55                	push   %r13
    9fe6:	49 89 cd             	mov    %rcx,%r13
    9fe9:	41 54                	push   %r12
    9feb:	49 89 fc             	mov    %rdi,%r12
    9fee:	55                   	push   %rbp
    9fef:	48 89 d5             	mov    %rdx,%rbp
    9ff2:	53                   	push   %rbx
    9ff3:	48 89 f3             	mov    %rsi,%rbx
    9ff6:	48 89 d6             	mov    %rdx,%rsi
    9ff9:	48 89 df             	mov    %rbx,%rdi
    9ffc:	48 83 ec 08          	sub    $0x8,%rsp
    a000:	e8 bb ba ff ff       	call   5ac0 <sgx_mm_is_within_enclave>
    a005:	31 c9                	xor    %ecx,%ecx
    a007:	84 c0                	test   %al,%al
    a009:	74 5f                	je     a06a <find_free_region_at+0x8a>
    a00b:	31 f6                	xor    %esi,%esi
    a00d:	48 8d 15 54 00 01 00 	lea    0x10054(%rip),%rdx        # 1a068 <g_rts_ema_root>
    a014:	48 01 dd             	add    %rbx,%rbp
    a017:	40 0f 92 c6          	setb   %sil
    a01b:	49 39 d4             	cmp    %rdx,%r12
    a01e:	0f 84 7c 00 00 00    	je     a0a0 <find_free_region_at+0xc0>
    a024:	48 85 f6             	test   %rsi,%rsi
    a027:	75 5e                	jne    a087 <find_free_region_at+0xa7>
    a029:	48 3b 1d d8 09 02 00 	cmp    0x209d8(%rip),%rbx        # 2aa08 <mm_user_base>
    a030:	72 55                	jb     a087 <find_free_region_at+0xa7>
    a032:	48 39 2d c7 09 02 00 	cmp    %rbp,0x209c7(%rip)        # 2aa00 <mm_user_end>
    a039:	72 4c                	jb     a087 <find_free_region_at+0xa7>
    a03b:	49 8b 14 24          	mov    (%r12),%rdx
    a03f:	48 8b 4a 38          	mov    0x38(%rdx),%rcx
    a043:	48 39 ca             	cmp    %rcx,%rdx
    a046:	75 1a                	jne    a062 <find_free_region_at+0x82>
    a048:	eb 20                	jmp    a06a <find_free_region_at+0x8a>
    a04a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a050:	48 03 71 08          	add    0x8(%rcx),%rsi
    a054:	48 39 f3             	cmp    %rsi,%rbx
    a057:	72 27                	jb     a080 <find_free_region_at+0xa0>
    a059:	48 8b 49 38          	mov    0x38(%rcx),%rcx
    a05d:	48 39 ca             	cmp    %rcx,%rdx
    a060:	74 08                	je     a06a <find_free_region_at+0x8a>
    a062:	48 8b 31             	mov    (%rcx),%rsi
    a065:	48 39 ee             	cmp    %rbp,%rsi
    a068:	72 e6                	jb     a050 <find_free_region_at+0x70>
    a06a:	49 89 4d 00          	mov    %rcx,0x0(%r13)
    a06e:	48 83 c4 08          	add    $0x8,%rsp
    a072:	5b                   	pop    %rbx
    a073:	5d                   	pop    %rbp
    a074:	41 5c                	pop    %r12
    a076:	41 5d                	pop    %r13
    a078:	c3                   	ret    
    a079:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a080:	48 39 ca             	cmp    %rcx,%rdx
    a083:	74 e5                	je     a06a <find_free_region_at+0x8a>
    a085:	31 c9                	xor    %ecx,%ecx
    a087:	31 c0                	xor    %eax,%eax
    a089:	49 89 4d 00          	mov    %rcx,0x0(%r13)
    a08d:	48 83 c4 08          	add    $0x8,%rsp
    a091:	5b                   	pop    %rbx
    a092:	5d                   	pop    %rbp
    a093:	41 5c                	pop    %r12
    a095:	41 5d                	pop    %r13
    a097:	c3                   	ret    
    a098:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a09f:	00 
    a0a0:	48 85 f6             	test   %rsi,%rsi
    a0a3:	75 e2                	jne    a087 <find_free_region_at+0xa7>
    a0a5:	48 3b 1d 54 09 02 00 	cmp    0x20954(%rip),%rbx        # 2aa00 <mm_user_end>
    a0ac:	73 8d                	jae    a03b <find_free_region_at+0x5b>
    a0ae:	48 39 2d 53 09 02 00 	cmp    %rbp,0x20953(%rip)        # 2aa08 <mm_user_base>
    a0b5:	73 84                	jae    a03b <find_free_region_at+0x5b>
    a0b7:	31 c0                	xor    %eax,%eax
    a0b9:	eb ce                	jmp    a089 <find_free_region_at+0xa9>
    a0bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000a0c0 <ema_new>:
    a0c0:	f3 0f 1e fa          	endbr64 
    a0c4:	53                   	push   %rbx
    a0c5:	48 83 ec 50          	sub    $0x50,%rsp
    a0c9:	64 4c 8b 14 25 28 00 	mov    %fs:0x28,%r10
    a0d0:	00 00 
    a0d2:	4c 89 54 24 48       	mov    %r10,0x48(%rsp)
    a0d7:	45 31 d2             	xor    %r10d,%r10d
    a0da:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
    a0df:	89 54 24 10          	mov    %edx,0x10(%rsp)
    a0e3:	48 89 e3             	mov    %rsp,%rbx
    a0e6:	48 89 3c 24          	mov    %rdi,(%rsp)
    a0ea:	bf 48 00 00 00       	mov    $0x48,%edi
    a0ef:	48 8b 50 40          	mov    0x40(%rax),%rdx
    a0f3:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    a0f8:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    a0fd:	48 89 54 24 40       	mov    %rdx,0x40(%rsp)
    a102:	48 89 5a 38          	mov    %rbx,0x38(%rdx)
    a106:	48 89 58 40          	mov    %rbx,0x40(%rax)
    a10a:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
    a10f:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    a116:	00 00 
    a118:	4c 89 44 24 28       	mov    %r8,0x28(%rsp)
    a11d:	4c 89 4c 24 30       	mov    %r9,0x30(%rsp)
    a122:	e8 99 13 00 00       	call   b4c0 <emalloc>
    a127:	48 85 c0             	test   %rax,%rax
    a12a:	74 6c                	je     a198 <ema_new+0xd8>
    a12c:	66 0f 6f 0c 24       	movdqa (%rsp),%xmm1
    a131:	0f 11 08             	movups %xmm1,(%rax)
    a134:	66 0f 6f 54 24 10    	movdqa 0x10(%rsp),%xmm2
    a13a:	0f 11 50 10          	movups %xmm2,0x10(%rax)
    a13e:	66 0f 6f 5c 24 20    	movdqa 0x20(%rsp),%xmm3
    a144:	0f 11 58 20          	movups %xmm3,0x20(%rax)
    a148:	66 0f 6f 64 24 30    	movdqa 0x30(%rsp),%xmm4
    a14e:	0f 11 60 30          	movups %xmm4,0x30(%rax)
    a152:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
    a157:	48 89 50 40          	mov    %rdx,0x40(%rax)
    a15b:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
    a160:	48 89 42 38          	mov    %rax,0x38(%rdx)
    a164:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
    a169:	48 89 42 40          	mov    %rax,0x40(%rdx)
    a16d:	66 48 0f 6e c2       	movq   %rdx,%xmm0
    a172:	0f 16 44 24 40       	movhps 0x40(%rsp),%xmm0
    a177:	0f 11 40 38          	movups %xmm0,0x38(%rax)
    a17b:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
    a180:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    a187:	00 00 
    a189:	75 2d                	jne    a1b8 <ema_new+0xf8>
    a18b:	48 83 c4 50          	add    $0x50,%rsp
    a18f:	5b                   	pop    %rbx
    a190:	c3                   	ret    
    a191:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a198:	48 8b 4c 24 40       	mov    0x40(%rsp),%rcx
    a19d:	48 39 59 38          	cmp    %rbx,0x38(%rcx)
    a1a1:	75 1a                	jne    a1bd <ema_new+0xfd>
    a1a3:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
    a1a8:	48 39 5a 40          	cmp    %rbx,0x40(%rdx)
    a1ac:	75 0f                	jne    a1bd <ema_new+0xfd>
    a1ae:	48 89 51 38          	mov    %rdx,0x38(%rcx)
    a1b2:	48 89 4a 40          	mov    %rcx,0x40(%rdx)
    a1b6:	eb c3                	jmp    a17b <ema_new+0xbb>
    a1b8:	e8 43 69 00 00       	call   10b00 <__stack_chk_fail>
    a1bd:	e8 75 83 00 00       	call   12537 <abort>
    a1c2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a1c9:	00 00 00 
    a1cc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000a1d0 <ema_destroy>:
    a1d0:	f3 0f 1e fa          	endbr64 
    a1d4:	53                   	push   %rbx
    a1d5:	48 89 fb             	mov    %rdi,%rbx
    a1d8:	48 85 ff             	test   %rdi,%rdi
    a1db:	74 1c                	je     a1f9 <ema_destroy+0x29>
    a1dd:	48 8b 47 40          	mov    0x40(%rdi),%rax
    a1e1:	48 3b 78 38          	cmp    0x38(%rax),%rdi
    a1e5:	75 29                	jne    a210 <ema_destroy+0x40>
    a1e7:	48 8b 57 38          	mov    0x38(%rdi),%rdx
    a1eb:	48 3b 7a 40          	cmp    0x40(%rdx),%rdi
    a1ef:	75 1f                	jne    a210 <ema_destroy+0x40>
    a1f1:	48 89 50 38          	mov    %rdx,0x38(%rax)
    a1f5:	48 89 42 40          	mov    %rax,0x40(%rdx)
    a1f9:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    a1fd:	48 85 ff             	test   %rdi,%rdi
    a200:	74 05                	je     a207 <ema_destroy+0x37>
    a202:	e8 b9 ed ff ff       	call   8fc0 <bit_array_delete>
    a207:	48 89 df             	mov    %rbx,%rdi
    a20a:	5b                   	pop    %rbx
    a20b:	e9 30 15 00 00       	jmp    b740 <efree>
    a210:	e8 22 83 00 00       	call   12537 <abort>
    a215:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a21c:	00 00 00 
    a21f:	90                   	nop

000000000000a220 <destroy_ema_root>:
    a220:	f3 0f 1e fa          	endbr64 
    a224:	55                   	push   %rbp
    a225:	53                   	push   %rbx
    a226:	48 83 ec 08          	sub    $0x8,%rsp
    a22a:	48 8b 07             	mov    (%rdi),%rax
    a22d:	48 8b 58 38          	mov    0x38(%rax),%rbx
    a231:	48 39 d8             	cmp    %rbx,%rax
    a234:	74 1c                	je     a252 <destroy_ema_root+0x32>
    a236:	48 89 fd             	mov    %rdi,%rbp
    a239:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a240:	48 89 df             	mov    %rbx,%rdi
    a243:	48 8b 5b 38          	mov    0x38(%rbx),%rbx
    a247:	e8 84 ff ff ff       	call   a1d0 <ema_destroy>
    a24c:	48 39 5d 00          	cmp    %rbx,0x0(%rbp)
    a250:	75 ee                	jne    a240 <destroy_ema_root+0x20>
    a252:	48 83 c4 08          	add    $0x8,%rsp
    a256:	5b                   	pop    %rbx
    a257:	5d                   	pop    %rbp
    a258:	c3                   	ret    
    a259:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000a260 <do_commit>:
    a260:	f3 0f 1e fa          	endbr64 
    a264:	55                   	push   %rbp
    a265:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a269:	48 83 ca 08          	or     $0x8,%rdx
    a26d:	48 89 e5             	mov    %rsp,%rbp
    a270:	41 55                	push   %r13
    a272:	41 54                	push   %r12
    a274:	49 89 fc             	mov    %rdi,%r12
    a277:	53                   	push   %rbx
    a278:	48 8d 1c 37          	lea    (%rdi,%rsi,1),%rbx
    a27c:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    a280:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    a284:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a28b:	00 00 
    a28d:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    a292:	31 c0                	xor    %eax,%eax
    a294:	48 89 14 24          	mov    %rdx,(%rsp)
    a298:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    a29f:	00 00 
    a2a1:	0f 11 44 24 08       	movups %xmm0,0x8(%rsp)
    a2a6:	0f 11 44 24 18       	movups %xmm0,0x18(%rsp)
    a2ab:	0f 11 44 24 28       	movups %xmm0,0x28(%rsp)
    a2b0:	84 c9                	test   %cl,%cl
    a2b2:	74 4c                	je     a300 <do_commit+0xa0>
    a2b4:	49 89 e5             	mov    %rsp,%r13
    a2b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    a2be:	00 00 
    a2c0:	48 81 eb 00 10 00 00 	sub    $0x1000,%rbx
    a2c7:	4c 89 ef             	mov    %r13,%rdi
    a2ca:	48 89 de             	mov    %rbx,%rsi
    a2cd:	e8 ed 81 00 00       	call   124bf <do_eaccept>
    a2d2:	85 c0                	test   %eax,%eax
    a2d4:	75 57                	jne    a32d <do_commit+0xcd>
    a2d6:	49 39 dc             	cmp    %rbx,%r12
    a2d9:	72 e5                	jb     a2c0 <do_commit+0x60>
    a2db:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    a2e0:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    a2e7:	00 00 
    a2e9:	75 47                	jne    a332 <do_commit+0xd2>
    a2eb:	48 8d 65 e8          	lea    -0x18(%rbp),%rsp
    a2ef:	31 c0                	xor    %eax,%eax
    a2f1:	5b                   	pop    %rbx
    a2f2:	41 5c                	pop    %r12
    a2f4:	41 5d                	pop    %r13
    a2f6:	5d                   	pop    %rbp
    a2f7:	c3                   	ret    
    a2f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a2ff:	00 
    a300:	48 39 df             	cmp    %rbx,%rdi
    a303:	73 d6                	jae    a2db <do_commit+0x7b>
    a305:	49 89 e5             	mov    %rsp,%r13
    a308:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a30f:	00 
    a310:	4c 89 e6             	mov    %r12,%rsi
    a313:	4c 89 ef             	mov    %r13,%rdi
    a316:	e8 a4 81 00 00       	call   124bf <do_eaccept>
    a31b:	85 c0                	test   %eax,%eax
    a31d:	75 0e                	jne    a32d <do_commit+0xcd>
    a31f:	49 81 c4 00 10 00 00 	add    $0x1000,%r12
    a326:	49 39 dc             	cmp    %rbx,%r12
    a329:	72 e5                	jb     a310 <do_commit+0xb0>
    a32b:	eb ae                	jmp    a2db <do_commit+0x7b>
    a32d:	e8 05 82 00 00       	call   12537 <abort>
    a332:	e8 c9 67 00 00       	call   10b00 <__stack_chk_fail>
    a337:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    a33e:	00 00 

000000000000a340 <ema_do_commit>:
    a340:	f3 0f 1e fa          	endbr64 
    a344:	55                   	push   %rbp
    a345:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a349:	48 89 e5             	mov    %rsp,%rbp
    a34c:	41 57                	push   %r15
    a34e:	41 56                	push   %r14
    a350:	41 55                	push   %r13
    a352:	41 54                	push   %r12
    a354:	53                   	push   %rbx
    a355:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    a359:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    a35d:	4c 8b 77 08          	mov    0x8(%rdi),%r14
    a361:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a368:	00 00 
    a36a:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    a36f:	48 8b 07             	mov    (%rdi),%rax
    a372:	48 c7 04 24 0b 02 00 	movq   $0x20b,(%rsp)
    a379:	00 
    a37a:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    a381:	00 00 
    a383:	0f 11 44 24 08       	movups %xmm0,0x8(%rsp)
    a388:	0f 11 44 24 18       	movups %xmm0,0x18(%rsp)
    a38d:	0f 11 44 24 28       	movups %xmm0,0x28(%rsp)
    a392:	48 39 f0             	cmp    %rsi,%rax
    a395:	48 0f 43 f0          	cmovae %rax,%rsi
    a399:	49 01 c6             	add    %rax,%r14
    a39c:	49 39 d6             	cmp    %rdx,%r14
    a39f:	4c 0f 47 f2          	cmova  %rdx,%r14
    a3a3:	4c 39 f6             	cmp    %r14,%rsi
    a3a6:	73 61                	jae    a409 <ema_do_commit+0xc9>
    a3a8:	49 89 fd             	mov    %rdi,%r13
    a3ab:	48 89 f3             	mov    %rsi,%rbx
    a3ae:	49 89 e7             	mov    %rsp,%r15
    a3b1:	eb 15                	jmp    a3c8 <ema_do_commit+0x88>
    a3b3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a3b8:	48 81 c3 00 10 00 00 	add    $0x1000,%rbx
    a3bf:	4c 39 f3             	cmp    %r14,%rbx
    a3c2:	73 45                	jae    a409 <ema_do_commit+0xc9>
    a3c4:	49 8b 45 00          	mov    0x0(%r13),%rax
    a3c8:	49 89 dc             	mov    %rbx,%r12
    a3cb:	49 8b 7d 20          	mov    0x20(%r13),%rdi
    a3cf:	49 29 c4             	sub    %rax,%r12
    a3d2:	49 c1 ec 0c          	shr    $0xc,%r12
    a3d6:	4c 89 e6             	mov    %r12,%rsi
    a3d9:	e8 02 ec ff ff       	call   8fe0 <bit_array_test>
    a3de:	84 c0                	test   %al,%al
    a3e0:	75 d6                	jne    a3b8 <ema_do_commit+0x78>
    a3e2:	48 89 de             	mov    %rbx,%rsi
    a3e5:	4c 89 ff             	mov    %r15,%rdi
    a3e8:	e8 d2 80 00 00       	call   124bf <do_eaccept>
    a3ed:	85 c0                	test   %eax,%eax
    a3ef:	75 1a                	jne    a40b <ema_do_commit+0xcb>
    a3f1:	49 8b 7d 20          	mov    0x20(%r13),%rdi
    a3f5:	4c 89 e6             	mov    %r12,%rsi
    a3f8:	48 81 c3 00 10 00 00 	add    $0x1000,%rbx
    a3ff:	e8 ac ed ff ff       	call   91b0 <bit_array_set>
    a404:	4c 39 f3             	cmp    %r14,%rbx
    a407:	72 bb                	jb     a3c4 <ema_do_commit+0x84>
    a409:	31 c0                	xor    %eax,%eax
    a40b:	48 8b 54 24 78       	mov    0x78(%rsp),%rdx
    a410:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    a417:	00 00 
    a419:	75 0f                	jne    a42a <ema_do_commit+0xea>
    a41b:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    a41f:	5b                   	pop    %rbx
    a420:	41 5c                	pop    %r12
    a422:	41 5d                	pop    %r13
    a424:	41 5e                	pop    %r14
    a426:	41 5f                	pop    %r15
    a428:	5d                   	pop    %rbp
    a429:	c3                   	ret    
    a42a:	e8 d1 66 00 00       	call   10b00 <__stack_chk_fail>
    a42f:	90                   	nop

000000000000a430 <ema_do_commit_loop>:
    a430:	f3 0f 1e fa          	endbr64 
    a434:	41 55                	push   %r13
    a436:	41 54                	push   %r12
    a438:	55                   	push   %rbp
    a439:	53                   	push   %rbx
    a43a:	48 89 cb             	mov    %rcx,%rbx
    a43d:	48 83 ec 08          	sub    $0x8,%rsp
    a441:	48 8b 0f             	mov    (%rdi),%rcx
    a444:	48 39 f7             	cmp    %rsi,%rdi
    a447:	0f 84 9b 00 00 00    	je     a4e8 <ema_do_commit_loop+0xb8>
    a44d:	49 89 f5             	mov    %rsi,%r13
    a450:	48 89 d5             	mov    %rdx,%rbp
    a453:	48 89 f8             	mov    %rdi,%rax
    a456:	eb 26                	jmp    a47e <ema_do_commit_loop+0x4e>
    a458:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a45f:	00 
    a460:	f6 40 10 01          	testb  $0x1,0x10(%rax)
    a464:	75 27                	jne    a48d <ema_do_commit_loop+0x5d>
    a466:	48 03 48 08          	add    0x8(%rax),%rcx
    a46a:	48 8b 40 38          	mov    0x38(%rax),%rax
    a46e:	48 89 ca             	mov    %rcx,%rdx
    a471:	49 39 c5             	cmp    %rax,%r13
    a474:	74 3a                	je     a4b0 <ema_do_commit_loop+0x80>
    a476:	48 8b 08             	mov    (%rax),%rcx
    a479:	48 39 d1             	cmp    %rdx,%rcx
    a47c:	75 22                	jne    a4a0 <ema_do_commit_loop+0x70>
    a47e:	48 8b 50 18          	mov    0x18(%rax),%rdx
    a482:	48 f7 d2             	not    %rdx
    a485:	f7 c2 02 02 00 00    	test   $0x202,%edx
    a48b:	74 d3                	je     a460 <ema_do_commit_loop+0x30>
    a48d:	b8 0d 00 00 00       	mov    $0xd,%eax
    a492:	48 83 c4 08          	add    $0x8,%rsp
    a496:	5b                   	pop    %rbx
    a497:	5d                   	pop    %rbp
    a498:	41 5c                	pop    %r12
    a49a:	41 5d                	pop    %r13
    a49c:	c3                   	ret    
    a49d:	0f 1f 00             	nopl   (%rax)
    a4a0:	48 83 c4 08          	add    $0x8,%rsp
    a4a4:	b8 16 00 00 00       	mov    $0x16,%eax
    a4a9:	5b                   	pop    %rbx
    a4aa:	5d                   	pop    %rbp
    a4ab:	41 5c                	pop    %r12
    a4ad:	41 5d                	pop    %r13
    a4af:	c3                   	ret    
    a4b0:	b8 16 00 00 00       	mov    $0x16,%eax
    a4b5:	48 39 d9             	cmp    %rbx,%rcx
    a4b8:	73 1c                	jae    a4d6 <ema_do_commit_loop+0xa6>
    a4ba:	eb d6                	jmp    a492 <ema_do_commit_loop+0x62>
    a4bc:	0f 1f 40 00          	nopl   0x0(%rax)
    a4c0:	48 89 da             	mov    %rbx,%rdx
    a4c3:	48 89 ee             	mov    %rbp,%rsi
    a4c6:	4c 8b 67 38          	mov    0x38(%rdi),%r12
    a4ca:	e8 71 fe ff ff       	call   a340 <ema_do_commit>
    a4cf:	85 c0                	test   %eax,%eax
    a4d1:	75 bf                	jne    a492 <ema_do_commit_loop+0x62>
    a4d3:	4c 89 e7             	mov    %r12,%rdi
    a4d6:	4c 39 ef             	cmp    %r13,%rdi
    a4d9:	75 e5                	jne    a4c0 <ema_do_commit_loop+0x90>
    a4db:	31 c0                	xor    %eax,%eax
    a4dd:	48 83 c4 08          	add    $0x8,%rsp
    a4e1:	5b                   	pop    %rbx
    a4e2:	5d                   	pop    %rbp
    a4e3:	41 5c                	pop    %r12
    a4e5:	41 5d                	pop    %r13
    a4e7:	c3                   	ret    
    a4e8:	b8 16 00 00 00       	mov    $0x16,%eax
    a4ed:	48 39 d9             	cmp    %rbx,%rcx
    a4f0:	72 a0                	jb     a492 <ema_do_commit_loop+0x62>
    a4f2:	31 c0                	xor    %eax,%eax
    a4f4:	eb e7                	jmp    a4dd <ema_do_commit_loop+0xad>
    a4f6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a4fd:	00 00 00 

000000000000a500 <ema_change_to_tcs>:
    a500:	f3 0f 1e fa          	endbr64 
    a504:	55                   	push   %rbp
    a505:	48 89 e5             	mov    %rsp,%rbp
    a508:	41 56                	push   %r14
    a50a:	41 55                	push   %r13
    a50c:	41 54                	push   %r12
    a50e:	53                   	push   %rbx
    a50f:	48 89 fb             	mov    %rdi,%rbx
    a512:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    a516:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
    a51d:	4c 8b 6f 18          	mov    0x18(%rdi),%r13
    a521:	48 8b 7f 20          	mov    0x20(%rdi),%rdi
    a525:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a52c:	00 00 
    a52e:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
    a535:	00 
    a536:	31 c0                	xor    %eax,%eax
    a538:	45 89 ee             	mov    %r13d,%r14d
    a53b:	41 81 e6 00 ff 00 00 	and    $0xff00,%r14d
    a542:	48 85 ff             	test   %rdi,%rdi
    a545:	74 33                	je     a57a <ema_change_to_tcs+0x7a>
    a547:	49 89 f4             	mov    %rsi,%r12
    a54a:	48 2b 33             	sub    (%rbx),%rsi
    a54d:	48 c1 ee 0c          	shr    $0xc,%rsi
    a551:	e8 8a ea ff ff       	call   8fe0 <bit_array_test>
    a556:	84 c0                	test   %al,%al
    a558:	74 20                	je     a57a <ema_change_to_tcs+0x7a>
    a55a:	41 81 fe 00 01 00 00 	cmp    $0x100,%r14d
    a561:	0f 84 e1 00 00 00    	je     a648 <ema_change_to_tcs+0x148>
    a567:	41 83 e5 07          	and    $0x7,%r13d
    a56b:	41 83 fd 03          	cmp    $0x3,%r13d
    a56f:	75 09                	jne    a57a <ema_change_to_tcs+0x7a>
    a571:	41 81 fe 00 02 00 00 	cmp    $0x200,%r14d
    a578:	74 2e                	je     a5a8 <ema_change_to_tcs+0xa8>
    a57a:	b8 0d 00 00 00       	mov    $0xd,%eax
    a57f:	48 8b 94 24 b8 00 00 	mov    0xb8(%rsp),%rdx
    a586:	00 
    a587:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    a58e:	00 00 
    a590:	0f 85 c4 00 00 00    	jne    a65a <ema_change_to_tcs+0x15a>
    a596:	48 8d 65 e0          	lea    -0x20(%rbp),%rsp
    a59a:	5b                   	pop    %rbx
    a59b:	41 5c                	pop    %r12
    a59d:	41 5d                	pop    %r13
    a59f:	41 5e                	pop    %r14
    a5a1:	5d                   	pop    %rbp
    a5a2:	c3                   	ret    
    a5a3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a5a8:	b9 03 01 00 00       	mov    $0x103,%ecx
    a5ad:	ba 03 02 00 00       	mov    $0x203,%edx
    a5b2:	be 00 10 00 00       	mov    $0x1000,%esi
    a5b7:	4c 89 e7             	mov    %r12,%rdi
    a5ba:	e8 71 b3 ff ff       	call   5930 <sgx_mm_modify_ocall>
    a5bf:	85 c0                	test   %eax,%eax
    a5c1:	0f 85 89 00 00 00    	jne    a650 <ema_change_to_tcs+0x150>
    a5c7:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a5cb:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
    a5d0:	4c 89 e6             	mov    %r12,%rsi
    a5d3:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
    a5da:	00 00 
    a5dc:	48 c7 44 24 40 10 01 	movq   $0x110,0x40(%rsp)
    a5e3:	00 00 
    a5e5:	0f 11 44 24 48       	movups %xmm0,0x48(%rsp)
    a5ea:	0f 11 44 24 58       	movups %xmm0,0x58(%rsp)
    a5ef:	0f 11 44 24 68       	movups %xmm0,0x68(%rsp)
    a5f4:	e8 c6 7e 00 00       	call   124bf <do_eaccept>
    a5f9:	85 c0                	test   %eax,%eax
    a5fb:	75 62                	jne    a65f <ema_change_to_tcs+0x15f>
    a5fd:	48 8d 4c 24 38       	lea    0x38(%rsp),%rcx
    a602:	49 8d 94 24 00 10 00 	lea    0x1000(%r12),%rdx
    a609:	00 
    a60a:	4c 89 e6             	mov    %r12,%rsi
    a60d:	48 89 df             	mov    %rbx,%rdi
    a610:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    a617:	00 00 
    a619:	e8 f2 f5 ff ff       	call   9c10 <ema_split_ex>
    a61e:	85 c0                	test   %eax,%eax
    a620:	0f 85 59 ff ff ff    	jne    a57f <ema_change_to_tcs+0x7f>
    a626:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
    a62b:	48 8b 51 18          	mov    0x18(%rcx),%rdx
    a62f:	48 81 e2 f8 00 ff ff 	and    $0xffffffffffff00f8,%rdx
    a636:	80 ce 01             	or     $0x1,%dh
    a639:	48 89 51 18          	mov    %rdx,0x18(%rcx)
    a63d:	e9 3d ff ff ff       	jmp    a57f <ema_change_to_tcs+0x7f>
    a642:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a648:	31 c0                	xor    %eax,%eax
    a64a:	e9 30 ff ff ff       	jmp    a57f <ema_change_to_tcs+0x7f>
    a64f:	90                   	nop
    a650:	b8 0e 00 00 00       	mov    $0xe,%eax
    a655:	e9 25 ff ff ff       	jmp    a57f <ema_change_to_tcs+0x7f>
    a65a:	e8 a1 64 00 00       	call   10b00 <__stack_chk_fail>
    a65f:	e8 d3 7e 00 00       	call   12537 <abort>
    a664:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a66b:	00 00 00 
    a66e:	66 90                	xchg   %ax,%ax

000000000000a670 <ema_modify_permissions>:
    a670:	f3 0f 1e fa          	endbr64 
    a674:	55                   	push   %rbp
    a675:	48 89 e5             	mov    %rsp,%rbp
    a678:	41 57                	push   %r15
    a67a:	41 56                	push   %r14
    a67c:	41 55                	push   %r13
    a67e:	41 54                	push   %r12
    a680:	53                   	push   %rbx
    a681:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    a685:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
    a68c:	89 4c 24 20          	mov    %ecx,0x20(%rsp)
    a690:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a697:	00 00 
    a699:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
    a6a0:	00 
    a6a1:	48 8b 47 18          	mov    0x18(%rdi),%rax
    a6a5:	41 89 c4             	mov    %eax,%r12d
    a6a8:	41 83 e4 07          	and    $0x7,%r12d
    a6ac:	41 39 cc             	cmp    %ecx,%r12d
    a6af:	0f 84 e2 00 00 00    	je     a797 <ema_modify_permissions+0x127>
    a6b5:	49 89 fd             	mov    %rdi,%r13
    a6b8:	89 c7                	mov    %eax,%edi
    a6ba:	49 89 f7             	mov    %rsi,%r15
    a6bd:	44 8b 74 24 20       	mov    0x20(%rsp),%r14d
    a6c2:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    a6c6:	81 e7 00 ff 00 00    	and    $0xff00,%edi
    a6cc:	44 89 f1             	mov    %r14d,%ecx
    a6cf:	89 7c 24 0c          	mov    %edi,0xc(%rsp)
    a6d3:	48 39 f3             	cmp    %rsi,%rbx
    a6d6:	4c 0f 43 fb          	cmovae %rbx,%r15
    a6da:	49 03 5d 08          	add    0x8(%r13),%rbx
    a6de:	48 39 d3             	cmp    %rdx,%rbx
    a6e1:	48 0f 47 da          	cmova  %rdx,%rbx
    a6e5:	89 c2                	mov    %eax,%edx
    a6e7:	09 f9                	or     %edi,%ecx
    a6e9:	4c 89 ff             	mov    %r15,%rdi
    a6ec:	81 e2 07 ff 00 00    	and    $0xff07,%edx
    a6f2:	4c 89 7c 24 18       	mov    %r15,0x18(%rsp)
    a6f7:	48 89 de             	mov    %rbx,%rsi
    a6fa:	4c 29 fe             	sub    %r15,%rsi
    a6fd:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    a702:	e8 29 b2 ff ff       	call   5930 <sgx_mm_modify_ocall>
    a707:	85 c0                	test   %eax,%eax
    a709:	0f 85 21 01 00 00    	jne    a830 <ema_modify_permissions+0x1c0>
    a70f:	44 89 f0             	mov    %r14d,%eax
    a712:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a716:	48 8d 54 24 40       	lea    0x40(%rsp),%rdx
    a71b:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
    a722:	00 00 
    a724:	0d 20 02 00 00       	or     $0x220,%eax
    a729:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
    a72e:	48 98                	cltq   
    a730:	0f 11 44 24 48       	movups %xmm0,0x48(%rsp)
    a735:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    a73a:	44 89 f0             	mov    %r14d,%eax
    a73d:	45 09 e6             	or     %r12d,%r14d
    a740:	83 e0 06             	and    $0x6,%eax
    a743:	0f 11 44 24 58       	movups %xmm0,0x58(%rsp)
    a748:	89 44 24 24          	mov    %eax,0x24(%rsp)
    a74c:	0f 11 44 24 68       	movups %xmm0,0x68(%rsp)
    a751:	49 39 df             	cmp    %rbx,%r15
    a754:	72 76                	jb     a7cc <ema_modify_permissions+0x15c>
    a756:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a75d:	00 00 00 
    a760:	49 8b 45 00          	mov    0x0(%r13),%rax
    a764:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    a769:	48 39 d0             	cmp    %rdx,%rax
    a76c:	0f 82 ce 00 00 00    	jb     a840 <ema_modify_permissions+0x1d0>
    a772:	49 03 45 08          	add    0x8(%r13),%rax
    a776:	48 39 c3             	cmp    %rax,%rbx
    a779:	0f 82 f9 00 00 00    	jb     a878 <ema_modify_permissions+0x208>
    a77f:	49 8b 45 18          	mov    0x18(%r13),%rax
    a783:	48 63 54 24 20       	movslq 0x20(%rsp),%rdx
    a788:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    a78c:	48 09 d0             	or     %rdx,%rax
    a78f:	49 89 45 18          	mov    %rax,0x18(%r13)
    a793:	85 d2                	test   %edx,%edx
    a795:	74 79                	je     a810 <ema_modify_permissions+0x1a0>
    a797:	31 c0                	xor    %eax,%eax
    a799:	48 8b 94 24 b8 00 00 	mov    0xb8(%rsp),%rdx
    a7a0:	00 
    a7a1:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    a7a8:	00 00 
    a7aa:	0f 85 f8 00 00 00    	jne    a8a8 <ema_modify_permissions+0x238>
    a7b0:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    a7b4:	5b                   	pop    %rbx
    a7b5:	41 5c                	pop    %r12
    a7b7:	41 5d                	pop    %r13
    a7b9:	41 5e                	pop    %r14
    a7bb:	41 5f                	pop    %r15
    a7bd:	5d                   	pop    %rbp
    a7be:	c3                   	ret    
    a7bf:	90                   	nop
    a7c0:	49 81 c7 00 10 00 00 	add    $0x1000,%r15
    a7c7:	49 39 df             	cmp    %rbx,%r15
    a7ca:	73 94                	jae    a760 <ema_modify_permissions+0xf0>
    a7cc:	45 39 f4             	cmp    %r14d,%r12d
    a7cf:	74 0d                	je     a7de <ema_modify_permissions+0x16e>
    a7d1:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
    a7d6:	4c 89 fe             	mov    %r15,%rsi
    a7d9:	e8 1d 7d 00 00       	call   124fb <do_emodpe>
    a7de:	83 7c 24 24 06       	cmpl   $0x6,0x24(%rsp)
    a7e3:	74 db                	je     a7c0 <ema_modify_permissions+0x150>
    a7e5:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
    a7ea:	4c 89 fe             	mov    %r15,%rsi
    a7ed:	e8 cd 7c 00 00       	call   124bf <do_eaccept>
    a7f2:	85 c0                	test   %eax,%eax
    a7f4:	75 a3                	jne    a799 <ema_modify_permissions+0x129>
    a7f6:	49 81 c7 00 10 00 00 	add    $0x1000,%r15
    a7fd:	49 39 df             	cmp    %rbx,%r15
    a800:	0f 83 5a ff ff ff    	jae    a760 <ema_modify_permissions+0xf0>
    a806:	45 39 f4             	cmp    %r14d,%r12d
    a809:	74 da                	je     a7e5 <ema_modify_permissions+0x175>
    a80b:	eb c4                	jmp    a7d1 <ema_modify_permissions+0x161>
    a80d:	0f 1f 00             	nopl   (%rax)
    a810:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
    a814:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    a819:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    a81e:	89 ca                	mov    %ecx,%edx
    a820:	e8 0b b1 ff ff       	call   5930 <sgx_mm_modify_ocall>
    a825:	85 c0                	test   %eax,%eax
    a827:	0f 84 6a ff ff ff    	je     a797 <ema_modify_permissions+0x127>
    a82d:	0f 1f 00             	nopl   (%rax)
    a830:	b8 0e 00 00 00       	mov    $0xe,%eax
    a835:	e9 5f ff ff ff       	jmp    a799 <ema_modify_permissions+0x129>
    a83a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a840:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    a845:	31 d2                	xor    %edx,%edx
    a847:	48 8d 4c 24 38       	lea    0x38(%rsp),%rcx
    a84c:	4c 89 ef             	mov    %r13,%rdi
    a84f:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    a856:	00 00 
    a858:	e8 23 f2 ff ff       	call   9a80 <ema_split>
    a85d:	85 c0                	test   %eax,%eax
    a85f:	0f 85 34 ff ff ff    	jne    a799 <ema_modify_permissions+0x129>
    a865:	4c 8b 6c 24 38       	mov    0x38(%rsp),%r13
    a86a:	49 8b 45 00          	mov    0x0(%r13),%rax
    a86e:	e9 ff fe ff ff       	jmp    a772 <ema_modify_permissions+0x102>
    a873:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a878:	4c 89 ef             	mov    %r13,%rdi
    a87b:	48 8d 4c 24 38       	lea    0x38(%rsp),%rcx
    a880:	ba 01 00 00 00       	mov    $0x1,%edx
    a885:	48 89 de             	mov    %rbx,%rsi
    a888:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    a88f:	00 00 
    a891:	e8 ea f1 ff ff       	call   9a80 <ema_split>
    a896:	4c 8b 6c 24 38       	mov    0x38(%rsp),%r13
    a89b:	85 c0                	test   %eax,%eax
    a89d:	0f 84 dc fe ff ff    	je     a77f <ema_modify_permissions+0x10f>
    a8a3:	e9 f1 fe ff ff       	jmp    a799 <ema_modify_permissions+0x129>
    a8a8:	e8 53 62 00 00       	call   10b00 <__stack_chk_fail>
    a8ad:	0f 1f 00             	nopl   (%rax)

000000000000a8b0 <ema_do_uncommit>:
    a8b0:	f3 0f 1e fa          	endbr64 
    a8b4:	41 55                	push   %r13
    a8b6:	49 89 f5             	mov    %rsi,%r13
    a8b9:	41 54                	push   %r12
    a8bb:	53                   	push   %rbx
    a8bc:	48 83 ec 10          	sub    $0x10,%rsp
    a8c0:	48 8b 07             	mov    (%rdi),%rax
    a8c3:	44 8b 67 18          	mov    0x18(%rdi),%r12d
    a8c7:	48 39 f0             	cmp    %rsi,%rax
    a8ca:	4c 0f 43 e8          	cmovae %rax,%r13
    a8ce:	48 03 47 08          	add    0x8(%rdi),%rax
    a8d2:	48 39 d0             	cmp    %rdx,%rax
    a8d5:	48 0f 47 c2          	cmova  %rdx,%rax
    a8d9:	48 89 c3             	mov    %rax,%rbx
    a8dc:	41 83 e4 07          	and    $0x7,%r12d
    a8e0:	74 1e                	je     a900 <ema_do_uncommit+0x50>
    a8e2:	48 83 c4 10          	add    $0x10,%rsp
    a8e6:	44 89 e1             	mov    %r12d,%ecx
    a8e9:	48 89 da             	mov    %rbx,%rdx
    a8ec:	4c 89 ee             	mov    %r13,%rsi
    a8ef:	5b                   	pop    %rbx
    a8f0:	41 5c                	pop    %r12
    a8f2:	41 5d                	pop    %r13
    a8f4:	e9 37 ed ff ff       	jmp    9630 <ema_do_uncommit_real>
    a8f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a900:	b9 01 00 00 00       	mov    $0x1,%ecx
    a905:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    a90a:	e8 61 fd ff ff       	call   a670 <ema_modify_permissions>
    a90f:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    a914:	eb cc                	jmp    a8e2 <ema_do_uncommit+0x32>
    a916:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a91d:	00 00 00 

000000000000a920 <ema_do_dealloc>:
    a920:	f3 0f 1e fa          	endbr64 
    a924:	41 54                	push   %r12
    a926:	49 89 f4             	mov    %rsi,%r12
    a929:	55                   	push   %rbp
    a92a:	53                   	push   %rbx
    a92b:	48 89 fb             	mov    %rdi,%rbx
    a92e:	48 83 ec 10          	sub    $0x10,%rsp
    a932:	48 8b 6f 08          	mov    0x8(%rdi),%rbp
    a936:	48 8b 4f 18          	mov    0x18(%rdi),%rcx
    a93a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a941:	00 00 
    a943:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    a948:	48 8b 07             	mov    (%rdi),%rax
    a94b:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    a952:	00 
    a953:	48 39 f0             	cmp    %rsi,%rax
    a956:	4c 0f 43 e0          	cmovae %rax,%r12
    a95a:	48 01 c5             	add    %rax,%rbp
    a95d:	48 39 d5             	cmp    %rdx,%rbp
    a960:	48 0f 47 ea          	cmova  %rdx,%rbp
    a964:	f6 47 10 01          	testb  $0x1,0x10(%rdi)
    a968:	75 1c                	jne    a986 <ema_do_dealloc+0x66>
    a96a:	83 e1 07             	and    $0x7,%ecx
    a96d:	74 71                	je     a9e0 <ema_do_dealloc+0xc0>
    a96f:	31 c9                	xor    %ecx,%ecx
    a971:	48 89 ea             	mov    %rbp,%rdx
    a974:	4c 89 e6             	mov    %r12,%rsi
    a977:	48 89 df             	mov    %rbx,%rdi
    a97a:	e8 b1 ec ff ff       	call   9630 <ema_do_uncommit_real>
    a97f:	85 c0                	test   %eax,%eax
    a981:	75 3e                	jne    a9c1 <ema_do_dealloc+0xa1>
    a983:	48 8b 03             	mov    (%rbx),%rax
    a986:	4c 39 e0             	cmp    %r12,%rax
    a989:	72 65                	jb     a9f0 <ema_do_dealloc+0xd0>
    a98b:	48 03 43 08          	add    0x8(%rbx),%rax
    a98f:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    a996:	00 
    a997:	48 39 c5             	cmp    %rax,%rbp
    a99a:	73 1b                	jae    a9b7 <ema_do_dealloc+0x97>
    a99c:	48 89 e1             	mov    %rsp,%rcx
    a99f:	ba 01 00 00 00       	mov    $0x1,%edx
    a9a4:	48 89 ee             	mov    %rbp,%rsi
    a9a7:	48 89 df             	mov    %rbx,%rdi
    a9aa:	e8 d1 f0 ff ff       	call   9a80 <ema_split>
    a9af:	85 c0                	test   %eax,%eax
    a9b1:	75 0e                	jne    a9c1 <ema_do_dealloc+0xa1>
    a9b3:	48 8b 1c 24          	mov    (%rsp),%rbx
    a9b7:	48 89 df             	mov    %rbx,%rdi
    a9ba:	e8 11 f8 ff ff       	call   a1d0 <ema_destroy>
    a9bf:	31 c0                	xor    %eax,%eax
    a9c1:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    a9c6:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    a9cd:	00 00 
    a9cf:	75 3f                	jne    aa10 <ema_do_dealloc+0xf0>
    a9d1:	48 83 c4 10          	add    $0x10,%rsp
    a9d5:	5b                   	pop    %rbx
    a9d6:	5d                   	pop    %rbp
    a9d7:	41 5c                	pop    %r12
    a9d9:	c3                   	ret    
    a9da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a9e0:	b9 01 00 00 00       	mov    $0x1,%ecx
    a9e5:	e8 86 fc ff ff       	call   a670 <ema_modify_permissions>
    a9ea:	eb 83                	jmp    a96f <ema_do_dealloc+0x4f>
    a9ec:	0f 1f 40 00          	nopl   0x0(%rax)
    a9f0:	31 d2                	xor    %edx,%edx
    a9f2:	48 89 e1             	mov    %rsp,%rcx
    a9f5:	4c 89 e6             	mov    %r12,%rsi
    a9f8:	48 89 df             	mov    %rbx,%rdi
    a9fb:	e8 80 f0 ff ff       	call   9a80 <ema_split>
    aa00:	85 c0                	test   %eax,%eax
    aa02:	75 bd                	jne    a9c1 <ema_do_dealloc+0xa1>
    aa04:	48 8b 1c 24          	mov    (%rsp),%rbx
    aa08:	48 8b 03             	mov    (%rbx),%rax
    aa0b:	e9 7b ff ff ff       	jmp    a98b <ema_do_dealloc+0x6b>
    aa10:	e8 eb 60 00 00       	call   10b00 <__stack_chk_fail>
    aa15:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    aa1c:	00 00 00 
    aa1f:	90                   	nop

000000000000aa20 <ema_do_dealloc_loop>:
    aa20:	f3 0f 1e fa          	endbr64 
    aa24:	41 55                	push   %r13
    aa26:	49 89 d5             	mov    %rdx,%r13
    aa29:	41 54                	push   %r12
    aa2b:	49 89 cc             	mov    %rcx,%r12
    aa2e:	55                   	push   %rbp
    aa2f:	48 89 f5             	mov    %rsi,%rbp
    aa32:	53                   	push   %rbx
    aa33:	48 83 ec 08          	sub    $0x8,%rsp
    aa37:	eb 1d                	jmp    aa56 <ema_do_dealloc_loop+0x36>
    aa39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    aa40:	4c 89 e2             	mov    %r12,%rdx
    aa43:	4c 89 ee             	mov    %r13,%rsi
    aa46:	48 8b 5f 38          	mov    0x38(%rdi),%rbx
    aa4a:	e8 d1 fe ff ff       	call   a920 <ema_do_dealloc>
    aa4f:	85 c0                	test   %eax,%eax
    aa51:	75 0a                	jne    aa5d <ema_do_dealloc_loop+0x3d>
    aa53:	48 89 df             	mov    %rbx,%rdi
    aa56:	48 39 ef             	cmp    %rbp,%rdi
    aa59:	75 e5                	jne    aa40 <ema_do_dealloc_loop+0x20>
    aa5b:	31 c0                	xor    %eax,%eax
    aa5d:	48 83 c4 08          	add    $0x8,%rsp
    aa61:	5b                   	pop    %rbx
    aa62:	5d                   	pop    %rbp
    aa63:	41 5c                	pop    %r12
    aa65:	41 5d                	pop    %r13
    aa67:	c3                   	ret    
    aa68:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    aa6f:	00 

000000000000aa70 <ema_do_uncommit_loop>:
    aa70:	f3 0f 1e fa          	endbr64 
    aa74:	41 57                	push   %r15
    aa76:	41 56                	push   %r14
    aa78:	41 55                	push   %r13
    aa7a:	41 54                	push   %r12
    aa7c:	49 89 d4             	mov    %rdx,%r12
    aa7f:	55                   	push   %rbp
    aa80:	48 89 cd             	mov    %rcx,%rbp
    aa83:	53                   	push   %rbx
    aa84:	48 83 ec 18          	sub    $0x18,%rsp
    aa88:	48 8b 17             	mov    (%rdi),%rdx
    aa8b:	48 39 f7             	cmp    %rsi,%rdi
    aa8e:	0f 84 d9 00 00 00    	je     ab6d <ema_do_uncommit_loop+0xfd>
    aa94:	49 89 ff             	mov    %rdi,%r15
    aa97:	48 89 f3             	mov    %rsi,%rbx
    aa9a:	48 89 f8             	mov    %rdi,%rax
    aa9d:	0f 1f 00             	nopl   (%rax)
    aaa0:	f6 40 10 01          	testb  $0x1,0x10(%rax)
    aaa4:	75 32                	jne    aad8 <ema_do_uncommit_loop+0x68>
    aaa6:	48 8b 48 08          	mov    0x8(%rax),%rcx
    aaaa:	48 8b 40 38          	mov    0x38(%rax),%rax
    aaae:	48 01 d1             	add    %rdx,%rcx
    aab1:	48 39 c3             	cmp    %rax,%rbx
    aab4:	74 3a                	je     aaf0 <ema_do_uncommit_loop+0x80>
    aab6:	48 8b 10             	mov    (%rax),%rdx
    aab9:	48 39 ca             	cmp    %rcx,%rdx
    aabc:	74 e2                	je     aaa0 <ema_do_uncommit_loop+0x30>
    aabe:	b8 16 00 00 00       	mov    $0x16,%eax
    aac3:	48 83 c4 18          	add    $0x18,%rsp
    aac7:	5b                   	pop    %rbx
    aac8:	5d                   	pop    %rbp
    aac9:	41 5c                	pop    %r12
    aacb:	41 5d                	pop    %r13
    aacd:	41 5e                	pop    %r14
    aacf:	41 5f                	pop    %r15
    aad1:	c3                   	ret    
    aad2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    aad8:	48 83 c4 18          	add    $0x18,%rsp
    aadc:	b8 0d 00 00 00       	mov    $0xd,%eax
    aae1:	5b                   	pop    %rbx
    aae2:	5d                   	pop    %rbp
    aae3:	41 5c                	pop    %r12
    aae5:	41 5d                	pop    %r13
    aae7:	41 5e                	pop    %r14
    aae9:	41 5f                	pop    %r15
    aaeb:	c3                   	ret    
    aaec:	0f 1f 40 00          	nopl   0x0(%rax)
    aaf0:	b8 16 00 00 00       	mov    $0x16,%eax
    aaf5:	48 39 e9             	cmp    %rbp,%rcx
    aaf8:	73 1e                	jae    ab18 <ema_do_uncommit_loop+0xa8>
    aafa:	eb c7                	jmp    aac3 <ema_do_uncommit_loop+0x53>
    aafc:	0f 1f 40 00          	nopl   0x0(%rax)
    ab00:	44 89 c1             	mov    %r8d,%ecx
    ab03:	4c 89 f2             	mov    %r14,%rdx
    ab06:	4c 89 ce             	mov    %r9,%rsi
    ab09:	4c 89 ff             	mov    %r15,%rdi
    ab0c:	e8 1f eb ff ff       	call   9630 <ema_do_uncommit_real>
    ab11:	85 c0                	test   %eax,%eax
    ab13:	75 ae                	jne    aac3 <ema_do_uncommit_loop+0x53>
    ab15:	4d 89 ef             	mov    %r13,%r15
    ab18:	49 39 df             	cmp    %rbx,%r15
    ab1b:	74 5e                	je     ab7b <ema_do_uncommit_loop+0x10b>
    ab1d:	49 8b 07             	mov    (%r15),%rax
    ab20:	45 8b 47 18          	mov    0x18(%r15),%r8d
    ab24:	4d 8b 6f 38          	mov    0x38(%r15),%r13
    ab28:	49 39 c4             	cmp    %rax,%r12
    ab2b:	49 89 c1             	mov    %rax,%r9
    ab2e:	4d 0f 43 cc          	cmovae %r12,%r9
    ab32:	49 03 47 08          	add    0x8(%r15),%rax
    ab36:	48 39 e8             	cmp    %rbp,%rax
    ab39:	48 0f 47 c5          	cmova  %rbp,%rax
    ab3d:	49 89 c6             	mov    %rax,%r14
    ab40:	41 83 e0 07          	and    $0x7,%r8d
    ab44:	75 ba                	jne    ab00 <ema_do_uncommit_loop+0x90>
    ab46:	b9 01 00 00 00       	mov    $0x1,%ecx
    ab4b:	48 89 ea             	mov    %rbp,%rdx
    ab4e:	4c 89 e6             	mov    %r12,%rsi
    ab51:	4c 89 ff             	mov    %r15,%rdi
    ab54:	44 89 44 24 0c       	mov    %r8d,0xc(%rsp)
    ab59:	4c 89 0c 24          	mov    %r9,(%rsp)
    ab5d:	e8 0e fb ff ff       	call   a670 <ema_modify_permissions>
    ab62:	44 8b 44 24 0c       	mov    0xc(%rsp),%r8d
    ab67:	4c 8b 0c 24          	mov    (%rsp),%r9
    ab6b:	eb 93                	jmp    ab00 <ema_do_uncommit_loop+0x90>
    ab6d:	b8 16 00 00 00       	mov    $0x16,%eax
    ab72:	48 39 ca             	cmp    %rcx,%rdx
    ab75:	0f 82 48 ff ff ff    	jb     aac3 <ema_do_uncommit_loop+0x53>
    ab7b:	48 83 c4 18          	add    $0x18,%rsp
    ab7f:	31 c0                	xor    %eax,%eax
    ab81:	5b                   	pop    %rbx
    ab82:	5d                   	pop    %rbp
    ab83:	41 5c                	pop    %r12
    ab85:	41 5d                	pop    %r13
    ab87:	41 5e                	pop    %r14
    ab89:	41 5f                	pop    %r15
    ab8b:	c3                   	ret    
    ab8c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000ab90 <ema_modify_permissions_loop>:
    ab90:	f3 0f 1e fa          	endbr64 
    ab94:	41 57                	push   %r15
    ab96:	41 56                	push   %r14
    ab98:	41 55                	push   %r13
    ab9a:	41 54                	push   %r12
    ab9c:	55                   	push   %rbp
    ab9d:	48 89 d5             	mov    %rdx,%rbp
    aba0:	53                   	push   %rbx
    aba1:	48 89 cb             	mov    %rcx,%rbx
    aba4:	48 83 ec 08          	sub    $0x8,%rsp
    aba8:	48 8b 17             	mov    (%rdi),%rdx
    abab:	48 39 f7             	cmp    %rsi,%rdi
    abae:	0f 84 de 00 00 00    	je     ac92 <ema_modify_permissions_loop+0x102>
    abb4:	49 89 fe             	mov    %rdi,%r14
    abb7:	49 89 f4             	mov    %rsi,%r12
    abba:	45 89 c5             	mov    %r8d,%r13d
    abbd:	49 89 ff             	mov    %rdi,%r15
    abc0:	41 f6 47 19 02       	testb  $0x2,0x19(%r15)
    abc5:	74 79                	je     ac40 <ema_modify_permissions_loop+0xb0>
    abc7:	41 f6 47 10 01       	testb  $0x1,0x10(%r15)
    abcc:	75 72                	jne    ac40 <ema_modify_permissions_loop+0xb0>
    abce:	48 39 d5             	cmp    %rdx,%rbp
    abd1:	48 89 d6             	mov    %rdx,%rsi
    abd4:	49 8b 47 08          	mov    0x8(%r15),%rax
    abd8:	49 8b 7f 20          	mov    0x20(%r15),%rdi
    abdc:	48 0f 43 f5          	cmovae %rbp,%rsi
    abe0:	48 01 d0             	add    %rdx,%rax
    abe3:	48 29 d6             	sub    %rdx,%rsi
    abe6:	48 c1 ee 0c          	shr    $0xc,%rsi
    abea:	48 39 d8             	cmp    %rbx,%rax
    abed:	48 0f 47 c3          	cmova  %rbx,%rax
    abf1:	48 29 d0             	sub    %rdx,%rax
    abf4:	48 c1 e8 0c          	shr    $0xc,%rax
    abf8:	48 85 ff             	test   %rdi,%rdi
    abfb:	74 27                	je     ac24 <ema_modify_permissions_loop+0x94>
    abfd:	48 29 f0             	sub    %rsi,%rax
    ac00:	48 89 c2             	mov    %rax,%rdx
    ac03:	e8 28 e4 ff ff       	call   9030 <bit_array_test_range>
    ac08:	84 c0                	test   %al,%al
    ac0a:	74 18                	je     ac24 <ema_modify_permissions_loop+0x94>
    ac0c:	49 8b 47 08          	mov    0x8(%r15),%rax
    ac10:	49 03 07             	add    (%r15),%rax
    ac13:	4d 8b 7f 38          	mov    0x38(%r15),%r15
    ac17:	4d 39 fc             	cmp    %r15,%r12
    ac1a:	74 3c                	je     ac58 <ema_modify_permissions_loop+0xc8>
    ac1c:	49 8b 17             	mov    (%r15),%rdx
    ac1f:	48 39 d0             	cmp    %rdx,%rax
    ac22:	74 9c                	je     abc0 <ema_modify_permissions_loop+0x30>
    ac24:	b8 16 00 00 00       	mov    $0x16,%eax
    ac29:	48 83 c4 08          	add    $0x8,%rsp
    ac2d:	5b                   	pop    %rbx
    ac2e:	5d                   	pop    %rbp
    ac2f:	41 5c                	pop    %r12
    ac31:	41 5d                	pop    %r13
    ac33:	41 5e                	pop    %r14
    ac35:	41 5f                	pop    %r15
    ac37:	c3                   	ret    
    ac38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    ac3f:	00 
    ac40:	48 83 c4 08          	add    $0x8,%rsp
    ac44:	b8 0d 00 00 00       	mov    $0xd,%eax
    ac49:	5b                   	pop    %rbx
    ac4a:	5d                   	pop    %rbp
    ac4b:	41 5c                	pop    %r12
    ac4d:	41 5d                	pop    %r13
    ac4f:	41 5e                	pop    %r14
    ac51:	41 5f                	pop    %r15
    ac53:	c3                   	ret    
    ac54:	0f 1f 40 00          	nopl   0x0(%rax)
    ac58:	48 39 d8             	cmp    %rbx,%rax
    ac5b:	73 1f                	jae    ac7c <ema_modify_permissions_loop+0xec>
    ac5d:	eb c5                	jmp    ac24 <ema_modify_permissions_loop+0x94>
    ac5f:	90                   	nop
    ac60:	44 89 e9             	mov    %r13d,%ecx
    ac63:	48 89 da             	mov    %rbx,%rdx
    ac66:	48 89 ee             	mov    %rbp,%rsi
    ac69:	4c 89 f7             	mov    %r14,%rdi
    ac6c:	4d 8b 7e 38          	mov    0x38(%r14),%r15
    ac70:	e8 fb f9 ff ff       	call   a670 <ema_modify_permissions>
    ac75:	85 c0                	test   %eax,%eax
    ac77:	75 b0                	jne    ac29 <ema_modify_permissions_loop+0x99>
    ac79:	4d 89 fe             	mov    %r15,%r14
    ac7c:	4d 39 f4             	cmp    %r14,%r12
    ac7f:	75 df                	jne    ac60 <ema_modify_permissions_loop+0xd0>
    ac81:	31 c0                	xor    %eax,%eax
    ac83:	48 83 c4 08          	add    $0x8,%rsp
    ac87:	5b                   	pop    %rbx
    ac88:	5d                   	pop    %rbp
    ac89:	41 5c                	pop    %r12
    ac8b:	41 5d                	pop    %r13
    ac8d:	41 5e                	pop    %r14
    ac8f:	41 5f                	pop    %r15
    ac91:	c3                   	ret    
    ac92:	48 39 ca             	cmp    %rcx,%rdx
    ac95:	72 8d                	jb     ac24 <ema_modify_permissions_loop+0x94>
    ac97:	31 c0                	xor    %eax,%eax
    ac99:	eb e8                	jmp    ac83 <ema_modify_permissions_loop+0xf3>
    ac9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000aca0 <ema_do_commit_data>:
    aca0:	f3 0f 1e fa          	endbr64 
    aca4:	55                   	push   %rbp
    aca5:	41 81 c8 00 02 00 00 	or     $0x200,%r8d
    acac:	66 0f ef c0          	pxor   %xmm0,%xmm0
    acb0:	4d 63 c0             	movslq %r8d,%r8
    acb3:	48 89 e5             	mov    %rsp,%rbp
    acb6:	41 57                	push   %r15
    acb8:	41 56                	push   %r14
    acba:	49 89 f6             	mov    %rsi,%r14
    acbd:	41 55                	push   %r13
    acbf:	41 54                	push   %r12
    acc1:	49 89 d4             	mov    %rdx,%r12
    acc4:	53                   	push   %rbx
    acc5:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    acc9:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
    acd0:	48 89 7c 24 38       	mov    %rdi,0x38(%rsp)
    acd5:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    acdc:	00 00 
    acde:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
    ace5:	00 
    ace6:	31 c0                	xor    %eax,%eax
    ace8:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
    aced:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
    acf4:	00 00 
    acf6:	0f 11 44 24 48       	movups %xmm0,0x48(%rsp)
    acfb:	0f 11 44 24 58       	movups %xmm0,0x58(%rsp)
    ad00:	0f 11 44 24 68       	movups %xmm0,0x68(%rsp)
    ad05:	48 39 d6             	cmp    %rdx,%rsi
    ad08:	73 46                	jae    ad50 <ema_do_commit_data+0xb0>
    ad0a:	48 29 f1             	sub    %rsi,%rcx
    ad0d:	49 89 f7             	mov    %rsi,%r15
    ad10:	4c 8d 6c 24 40       	lea    0x40(%rsp),%r13
    ad15:	48 89 cb             	mov    %rcx,%rbx
    ad18:	eb 12                	jmp    ad2c <ema_do_commit_data+0x8c>
    ad1a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    ad20:	49 81 c7 00 10 00 00 	add    $0x1000,%r15
    ad27:	4d 39 e7             	cmp    %r12,%r15
    ad2a:	73 24                	jae    ad50 <ema_do_commit_data+0xb0>
    ad2c:	4a 8d 14 3b          	lea    (%rbx,%r15,1),%rdx
    ad30:	4c 89 fe             	mov    %r15,%rsi
    ad33:	4c 89 ef             	mov    %r13,%rdi
    ad36:	e8 a2 77 00 00       	call   124dd <do_eacceptcopy>
    ad3b:	85 c0                	test   %eax,%eax
    ad3d:	74 e1                	je     ad20 <ema_do_commit_data+0x80>
    ad3f:	b8 0e 00 00 00       	mov    $0xe,%eax
    ad44:	eb 1a                	jmp    ad60 <ema_do_commit_data+0xc0>
    ad46:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    ad4d:	00 00 00 
    ad50:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
    ad55:	4c 89 e2             	mov    %r12,%rdx
    ad58:	4c 89 f6             	mov    %r14,%rsi
    ad5b:	e8 70 eb ff ff       	call   98d0 <ema_set_eaccept>
    ad60:	48 8b 94 24 b8 00 00 	mov    0xb8(%rsp),%rdx
    ad67:	00 
    ad68:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    ad6f:	00 00 
    ad71:	75 0f                	jne    ad82 <ema_do_commit_data+0xe2>
    ad73:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    ad77:	5b                   	pop    %rbx
    ad78:	41 5c                	pop    %r12
    ad7a:	41 5d                	pop    %r13
    ad7c:	41 5e                	pop    %r14
    ad7e:	41 5f                	pop    %r15
    ad80:	5d                   	pop    %rbp
    ad81:	c3                   	ret    
    ad82:	e8 79 5d 00 00       	call   10b00 <__stack_chk_fail>
    ad87:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    ad8e:	00 00 

000000000000ad90 <ema_do_commit_data_loop>:
    ad90:	f3 0f 1e fa          	endbr64 
    ad94:	41 57                	push   %r15
    ad96:	41 56                	push   %r14
    ad98:	41 55                	push   %r13
    ad9a:	41 54                	push   %r12
    ad9c:	55                   	push   %rbp
    ad9d:	53                   	push   %rbx
    ad9e:	48 89 cb             	mov    %rcx,%rbx
    ada1:	48 83 ec 18          	sub    $0x18,%rsp
    ada5:	48 8b 0f             	mov    (%rdi),%rcx
    ada8:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    adad:	44 89 4c 24 04       	mov    %r9d,0x4(%rsp)
    adb2:	48 39 f7             	cmp    %rsi,%rdi
    adb5:	0f 84 a2 00 00 00    	je     ae5d <ema_do_commit_data_loop+0xcd>
    adbb:	48 89 fd             	mov    %rdi,%rbp
    adbe:	49 89 f4             	mov    %rsi,%r12
    adc1:	49 89 d7             	mov    %rdx,%r15
    adc4:	49 89 fd             	mov    %rdi,%r13
    adc7:	eb 72                	jmp    ae3b <ema_do_commit_data_loop+0xab>
    adc9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    add0:	41 8b 45 10          	mov    0x10(%r13),%eax
    add4:	a8 01                	test   $0x1,%al
    add6:	75 71                	jne    ae49 <ema_do_commit_data_loop+0xb9>
    add8:	a8 04                	test   $0x4,%al
    adda:	0f 84 86 00 00 00    	je     ae66 <ema_do_commit_data_loop+0xd6>
    ade0:	49 8b 7d 20          	mov    0x20(%r13),%rdi
    ade4:	49 8b 45 08          	mov    0x8(%r13),%rax
    ade8:	48 85 ff             	test   %rdi,%rdi
    adeb:	74 39                	je     ae26 <ema_do_commit_data_loop+0x96>
    aded:	49 39 cf             	cmp    %rcx,%r15
    adf0:	48 89 ce             	mov    %rcx,%rsi
    adf3:	49 0f 43 f7          	cmovae %r15,%rsi
    adf7:	48 01 c8             	add    %rcx,%rax
    adfa:	48 29 ce             	sub    %rcx,%rsi
    adfd:	48 c1 ee 0c          	shr    $0xc,%rsi
    ae01:	48 39 d8             	cmp    %rbx,%rax
    ae04:	48 0f 47 c3          	cmova  %rbx,%rax
    ae08:	48 89 c2             	mov    %rax,%rdx
    ae0b:	48 29 ca             	sub    %rcx,%rdx
    ae0e:	48 c1 ea 0c          	shr    $0xc,%rdx
    ae12:	48 29 f2             	sub    %rsi,%rdx
    ae15:	e8 d6 e2 ff ff       	call   90f0 <bit_array_test_range_any>
    ae1a:	84 c0                	test   %al,%al
    ae1c:	75 2b                	jne    ae49 <ema_do_commit_data_loop+0xb9>
    ae1e:	49 8b 4d 00          	mov    0x0(%r13),%rcx
    ae22:	49 8b 45 08          	mov    0x8(%r13),%rax
    ae26:	4d 8b 6d 38          	mov    0x38(%r13),%r13
    ae2a:	48 01 c8             	add    %rcx,%rax
    ae2d:	4d 39 ec             	cmp    %r13,%r12
    ae30:	74 4e                	je     ae80 <ema_do_commit_data_loop+0xf0>
    ae32:	49 8b 4d 00          	mov    0x0(%r13),%rcx
    ae36:	48 39 c8             	cmp    %rcx,%rax
    ae39:	75 2b                	jne    ae66 <ema_do_commit_data_loop+0xd6>
    ae3b:	49 8b 45 18          	mov    0x18(%r13),%rax
    ae3f:	48 f7 d0             	not    %rax
    ae42:	a9 02 02 00 00       	test   $0x202,%eax
    ae47:	74 87                	je     add0 <ema_do_commit_data_loop+0x40>
    ae49:	b8 0d 00 00 00       	mov    $0xd,%eax
    ae4e:	48 83 c4 18          	add    $0x18,%rsp
    ae52:	5b                   	pop    %rbx
    ae53:	5d                   	pop    %rbp
    ae54:	41 5c                	pop    %r12
    ae56:	41 5d                	pop    %r13
    ae58:	41 5e                	pop    %r14
    ae5a:	41 5f                	pop    %r15
    ae5c:	c3                   	ret    
    ae5d:	48 39 d9             	cmp    %rbx,%rcx
    ae60:	0f 83 98 00 00 00    	jae    aefe <ema_do_commit_data_loop+0x16e>
    ae66:	48 83 c4 18          	add    $0x18,%rsp
    ae6a:	b8 16 00 00 00       	mov    $0x16,%eax
    ae6f:	5b                   	pop    %rbx
    ae70:	5d                   	pop    %rbp
    ae71:	41 5c                	pop    %r12
    ae73:	41 5d                	pop    %r13
    ae75:	41 5e                	pop    %r14
    ae77:	41 5f                	pop    %r15
    ae79:	c3                   	ret    
    ae7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    ae80:	48 39 d8             	cmp    %rbx,%rax
    ae83:	72 e1                	jb     ae66 <ema_do_commit_data_loop+0xd6>
    ae85:	49 89 ee             	mov    %rbp,%r14
    ae88:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    ae8f:	00 
    ae90:	49 8b 16             	mov    (%r14),%rdx
    ae93:	4c 89 fe             	mov    %r15,%rsi
    ae96:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    ae9b:	4c 89 f7             	mov    %r14,%rdi
    ae9e:	44 8b 44 24 04       	mov    0x4(%rsp),%r8d
    aea3:	4c 39 fa             	cmp    %r15,%rdx
    aea6:	48 0f 43 f2          	cmovae %rdx,%rsi
    aeaa:	49 03 56 08          	add    0x8(%r14),%rdx
    aeae:	48 89 f1             	mov    %rsi,%rcx
    aeb1:	4c 29 f9             	sub    %r15,%rcx
    aeb4:	48 01 c1             	add    %rax,%rcx
    aeb7:	48 39 da             	cmp    %rbx,%rdx
    aeba:	48 0f 47 d3          	cmova  %rbx,%rdx
    aebe:	e8 dd fd ff ff       	call   aca0 <ema_do_commit_data>
    aec3:	85 c0                	test   %eax,%eax
    aec5:	75 87                	jne    ae4e <ema_do_commit_data_loop+0xbe>
    aec7:	4d 8b 76 38          	mov    0x38(%r14),%r14
    aecb:	4d 39 ee             	cmp    %r13,%r14
    aece:	75 c0                	jne    ae90 <ema_do_commit_data_loop+0x100>
    aed0:	49 39 ec             	cmp    %rbp,%r12
    aed3:	74 29                	je     aefe <ema_do_commit_data_loop+0x16e>
    aed5:	0f 1f 00             	nopl   (%rax)
    aed8:	8b 4c 24 04          	mov    0x4(%rsp),%ecx
    aedc:	48 89 da             	mov    %rbx,%rdx
    aedf:	4c 89 fe             	mov    %r15,%rsi
    aee2:	48 89 ef             	mov    %rbp,%rdi
    aee5:	4c 8b 75 38          	mov    0x38(%rbp),%r14
    aee9:	e8 82 f7 ff ff       	call   a670 <ema_modify_permissions>
    aeee:	85 c0                	test   %eax,%eax
    aef0:	0f 85 58 ff ff ff    	jne    ae4e <ema_do_commit_data_loop+0xbe>
    aef6:	4c 89 f5             	mov    %r14,%rbp
    aef9:	49 39 ec             	cmp    %rbp,%r12
    aefc:	75 da                	jne    aed8 <ema_do_commit_data_loop+0x148>
    aefe:	48 83 c4 18          	add    $0x18,%rsp
    af02:	31 c0                	xor    %eax,%eax
    af04:	5b                   	pop    %rbx
    af05:	5d                   	pop    %rbp
    af06:	41 5c                	pop    %r12
    af08:	41 5d                	pop    %r13
    af0a:	41 5e                	pop    %r14
    af0c:	41 5f                	pop    %r15
    af0e:	c3                   	ret    
    af0f:	90                   	nop

000000000000af10 <ema_realloc_from_reserve_range>:
    af10:	f3 0f 1e fa          	endbr64 
    af14:	41 57                	push   %r15
    af16:	41 56                	push   %r14
    af18:	41 55                	push   %r13
    af1a:	49 89 d5             	mov    %rdx,%r13
    af1d:	41 54                	push   %r12
    af1f:	49 89 cc             	mov    %rcx,%r12
    af22:	55                   	push   %rbp
    af23:	48 89 fd             	mov    %rdi,%rbp
    af26:	53                   	push   %rbx
    af27:	48 89 f3             	mov    %rsi,%rbx
    af2a:	48 83 ec 28          	sub    $0x28,%rsp
    af2e:	4c 8b 37             	mov    (%rdi),%r14
    af31:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
    af36:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    af3b:	44 89 44 24 04       	mov    %r8d,0x4(%rsp)
    af40:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    af45:	48 39 f7             	cmp    %rsi,%rdi
    af48:	74 4a                	je     af94 <ema_realloc_from_reserve_range+0x84>
    af4a:	49 89 ff             	mov    %rdi,%r15
    af4d:	eb 1a                	jmp    af69 <ema_realloc_from_reserve_range+0x59>
    af4f:	90                   	nop
    af50:	4d 39 37             	cmp    %r14,(%r15)
    af53:	75 20                	jne    af75 <ema_realloc_from_reserve_range+0x65>
    af55:	41 f6 47 10 01       	testb  $0x1,0x10(%r15)
    af5a:	74 19                	je     af75 <ema_realloc_from_reserve_range+0x65>
    af5c:	4d 03 77 08          	add    0x8(%r15),%r14
    af60:	4d 8b 7f 38          	mov    0x38(%r15),%r15
    af64:	49 39 df             	cmp    %rbx,%r15
    af67:	74 27                	je     af90 <ema_realloc_from_reserve_range+0x80>
    af69:	4c 89 ff             	mov    %r15,%rdi
    af6c:	e8 7f 07 00 00       	call   b6f0 <can_erealloc>
    af71:	85 c0                	test   %eax,%eax
    af73:	75 db                	jne    af50 <ema_realloc_from_reserve_range+0x40>
    af75:	48 83 c4 28          	add    $0x28,%rsp
    af79:	31 c0                	xor    %eax,%eax
    af7b:	5b                   	pop    %rbx
    af7c:	5d                   	pop    %rbp
    af7d:	41 5c                	pop    %r12
    af7f:	41 5d                	pop    %r13
    af81:	41 5e                	pop    %r14
    af83:	41 5f                	pop    %r15
    af85:	c3                   	ret    
    af86:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    af8d:	00 00 00 
    af90:	4c 8b 75 00          	mov    0x0(%rbp),%r14
    af94:	48 8b 5b 40          	mov    0x40(%rbx),%rbx
    af98:	4d 39 ee             	cmp    %r13,%r14
    af9b:	72 6b                	jb     b008 <ema_realloc_from_reserve_range+0xf8>
    af9d:	48 8b 43 08          	mov    0x8(%rbx),%rax
    afa1:	48 03 03             	add    (%rbx),%rax
    afa4:	49 39 c4             	cmp    %rax,%r12
    afa7:	0f 82 88 00 00 00    	jb     b035 <ema_realloc_from_reserve_range+0x125>
    afad:	48 8b 6b 38          	mov    0x38(%rbx),%rbp
    afb1:	48 89 6c 24 10       	mov    %rbp,0x10(%rsp)
    afb6:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
    afbb:	48 39 dd             	cmp    %rbx,%rbp
    afbe:	74 11                	je     afd1 <ema_realloc_from_reserve_range+0xc1>
    afc0:	48 89 df             	mov    %rbx,%rdi
    afc3:	48 8b 5b 38          	mov    0x38(%rbx),%rbx
    afc7:	e8 04 f2 ff ff       	call   a1d0 <ema_destroy>
    afcc:	48 39 dd             	cmp    %rbx,%rbp
    afcf:	75 ef                	jne    afc0 <ema_realloc_from_reserve_range+0xb0>
    afd1:	48 83 ec 08          	sub    $0x8,%rsp
    afd5:	4c 89 e6             	mov    %r12,%rsi
    afd8:	4c 89 ef             	mov    %r13,%rdi
    afdb:	55                   	push   %rbp
    afdc:	4c 8b 4c 24 78       	mov    0x78(%rsp),%r9
    afe1:	4c 29 ee             	sub    %r13,%rsi
    afe4:	4c 8b 44 24 70       	mov    0x70(%rsp),%r8
    afe9:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    afee:	8b 54 24 14          	mov    0x14(%rsp),%edx
    aff2:	e8 c9 f0 ff ff       	call   a0c0 <ema_new>
    aff7:	5a                   	pop    %rdx
    aff8:	59                   	pop    %rcx
    aff9:	48 83 c4 28          	add    $0x28,%rsp
    affd:	5b                   	pop    %rbx
    affe:	5d                   	pop    %rbp
    afff:	41 5c                	pop    %r12
    b001:	41 5d                	pop    %r13
    b003:	41 5e                	pop    %r14
    b005:	41 5f                	pop    %r15
    b007:	c3                   	ret    
    b008:	31 d2                	xor    %edx,%edx
    b00a:	48 8d 4c 24 18       	lea    0x18(%rsp),%rcx
    b00f:	4c 89 ee             	mov    %r13,%rsi
    b012:	48 89 ef             	mov    %rbp,%rdi
    b015:	e8 66 ea ff ff       	call   9a80 <ema_split>
    b01a:	85 c0                	test   %eax,%eax
    b01c:	0f 85 53 ff ff ff    	jne    af75 <ema_realloc_from_reserve_range+0x65>
    b022:	48 39 dd             	cmp    %rbx,%rbp
    b025:	0f 85 72 ff ff ff    	jne    af9d <ema_realloc_from_reserve_range+0x8d>
    b02b:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
    b030:	e9 68 ff ff ff       	jmp    af9d <ema_realloc_from_reserve_range+0x8d>
    b035:	31 d2                	xor    %edx,%edx
    b037:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
    b03c:	4c 89 e6             	mov    %r12,%rsi
    b03f:	48 89 df             	mov    %rbx,%rdi
    b042:	e8 39 ea ff ff       	call   9a80 <ema_split>
    b047:	85 c0                	test   %eax,%eax
    b049:	0f 85 26 ff ff ff    	jne    af75 <ema_realloc_from_reserve_range+0x65>
    b04f:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
    b054:	e9 5d ff ff ff       	jmp    afb6 <ema_realloc_from_reserve_range+0xa6>
    b059:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000b060 <ema_do_alloc>:
    b060:	f3 0f 1e fa          	endbr64 
    b064:	41 55                	push   %r13
    b066:	41 54                	push   %r12
    b068:	55                   	push   %rbp
    b069:	53                   	push   %rbx
    b06a:	48 83 ec 08          	sub    $0x8,%rsp
    b06e:	8b 6f 10             	mov    0x10(%rdi),%ebp
    b071:	40 f6 c5 01          	test   $0x1,%bpl
    b075:	74 11                	je     b088 <ema_do_alloc+0x28>
    b077:	31 c0                	xor    %eax,%eax
    b079:	48 83 c4 08          	add    $0x8,%rsp
    b07d:	5b                   	pop    %rbx
    b07e:	5d                   	pop    %rbp
    b07f:	41 5c                	pop    %r12
    b081:	41 5d                	pop    %r13
    b083:	c3                   	ret    
    b084:	0f 1f 40 00          	nopl   0x0(%rax)
    b088:	4c 8b 6f 08          	mov    0x8(%rdi),%r13
    b08c:	8b 57 18             	mov    0x18(%rdi),%edx
    b08f:	48 89 fb             	mov    %rdi,%rbx
    b092:	89 e9                	mov    %ebp,%ecx
    b094:	4c 8b 27             	mov    (%rdi),%r12
    b097:	81 e2 00 ff 00 00    	and    $0xff00,%edx
    b09d:	4c 89 ee             	mov    %r13,%rsi
    b0a0:	4c 89 e7             	mov    %r12,%rdi
    b0a3:	e8 f8 a7 ff ff       	call   58a0 <sgx_mm_alloc_ocall>
    b0a8:	89 c2                	mov    %eax,%edx
    b0aa:	b8 0e 00 00 00       	mov    $0xe,%eax
    b0af:	85 d2                	test   %edx,%edx
    b0b1:	75 c6                	jne    b079 <ema_do_alloc+0x19>
    b0b3:	40 f6 c5 02          	test   $0x2,%bpl
    b0b7:	74 37                	je     b0f0 <ema_do_alloc+0x90>
    b0b9:	89 e9                	mov    %ebp,%ecx
    b0bb:	48 8b 53 18          	mov    0x18(%rbx),%rdx
    b0bf:	4c 89 ee             	mov    %r13,%rsi
    b0c2:	4c 89 e7             	mov    %r12,%rdi
    b0c5:	c1 e9 04             	shr    $0x4,%ecx
    b0c8:	83 f1 01             	xor    $0x1,%ecx
    b0cb:	83 e1 01             	and    $0x1,%ecx
    b0ce:	e8 8d f1 ff ff       	call   a260 <do_commit>
    b0d3:	85 c0                	test   %eax,%eax
    b0d5:	75 a2                	jne    b079 <ema_do_alloc+0x19>
    b0d7:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    b0db:	48 85 ff             	test   %rdi,%rdi
    b0de:	74 50                	je     b130 <ema_do_alloc+0xd0>
    b0e0:	e8 ab e1 ff ff       	call   9290 <bit_array_set_all>
    b0e5:	31 c0                	xor    %eax,%eax
    b0e7:	eb 90                	jmp    b079 <ema_do_alloc+0x19>
    b0e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b0f0:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    b0f4:	48 85 ff             	test   %rdi,%rdi
    b0f7:	74 0f                	je     b108 <ema_do_alloc+0xa8>
    b0f9:	e8 92 e2 ff ff       	call   9390 <bit_array_reset_all>
    b0fe:	31 c0                	xor    %eax,%eax
    b100:	e9 74 ff ff ff       	jmp    b079 <ema_do_alloc+0x19>
    b105:	0f 1f 00             	nopl   (%rax)
    b108:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    b10c:	48 c1 ef 0c          	shr    $0xc,%rdi
    b110:	e8 7b de ff ff       	call   8f90 <bit_array_new_reset>
    b115:	48 89 43 20          	mov    %rax,0x20(%rbx)
    b119:	48 85 c0             	test   %rax,%rax
    b11c:	0f 85 55 ff ff ff    	jne    b077 <ema_do_alloc+0x17>
    b122:	b8 0c 00 00 00       	mov    $0xc,%eax
    b127:	e9 4d ff ff ff       	jmp    b079 <ema_do_alloc+0x19>
    b12c:	0f 1f 40 00          	nopl   0x0(%rax)
    b130:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    b134:	48 c1 ef 0c          	shr    $0xc,%rdi
    b138:	e8 23 de ff ff       	call   8f60 <bit_array_new_set>
    b13d:	48 89 43 20          	mov    %rax,0x20(%rbx)
    b141:	48 85 c0             	test   %rax,%rax
    b144:	74 dc                	je     b122 <ema_do_alloc+0xc2>
    b146:	31 c0                	xor    %eax,%eax
    b148:	e9 2c ff ff ff       	jmp    b079 <ema_do_alloc+0x19>
    b14d:	0f 1f 00             	nopl   (%rax)

000000000000b150 <add_reserve>:
    b150:	41 54                	push   %r12
    b152:	55                   	push   %rbp
    b153:	53                   	push   %rbx
    b154:	31 db                	xor    %ebx,%ebx
    b156:	48 83 ec 10          	sub    $0x10,%rsp
    b15a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    b161:	00 00 
    b163:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    b168:	31 c0                	xor    %eax,%eax
    b16a:	80 3d 4f f0 00 00 00 	cmpb   $0x0,0xf04f(%rip)        # 1a1c0 <adding_reserve>
    b171:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    b178:	00 
    b179:	74 25                	je     b1a0 <add_reserve+0x50>
    b17b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    b180:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    b187:	00 00 
    b189:	0f 85 fb 00 00 00    	jne    b28a <add_reserve+0x13a>
    b18f:	48 83 c4 10          	add    $0x10,%rsp
    b193:	89 d8                	mov    %ebx,%eax
    b195:	5b                   	pop    %rbx
    b196:	5d                   	pop    %rbp
    b197:	41 5c                	pop    %r12
    b199:	c3                   	ret    
    b19a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b1a0:	48 8b 35 21 ef 00 00 	mov    0xef21(%rip),%rsi        # 1a0c8 <reserve_size_increment>
    b1a7:	49 89 e4             	mov    %rsp,%r12
    b1aa:	48 89 fd             	mov    %rdi,%rbp
    b1ad:	ba 01 00 00 00       	mov    $0x1,%edx
    b1b2:	4d 89 e1             	mov    %r12,%r9
    b1b5:	c6 05 04 f0 00 00 01 	movb   $0x1,0xf004(%rip)        # 1a1c0 <adding_reserve>
    b1bc:	48 39 f7             	cmp    %rsi,%rdi
    b1bf:	48 0f 43 f7          	cmovae %rdi,%rsi
    b1c3:	45 31 c0             	xor    %r8d,%r8d
    b1c6:	31 c9                	xor    %ecx,%ecx
    b1c8:	31 ff                	xor    %edi,%edi
    b1ca:	48 89 35 f7 ee 00 00 	mov    %rsi,0xeef7(%rip)        # 1a0c8 <reserve_size_increment>
    b1d1:	48 81 c6 00 00 01 00 	add    $0x10000,%rsi
    b1d8:	e8 a3 0d 00 00       	call   bf80 <sgx_mm_alloc>
    b1dd:	89 c3                	mov    %eax,%ebx
    b1df:	85 c0                	test   %eax,%eax
    b1e1:	75 2a                	jne    b20d <add_reserve+0xbd>
    b1e3:	48 8b 04 24          	mov    (%rsp),%rax
    b1e7:	48 8b 35 da ee 00 00 	mov    0xeeda(%rip),%rsi        # 1a0c8 <reserve_size_increment>
    b1ee:	4d 89 e1             	mov    %r12,%r9
    b1f1:	31 c9                	xor    %ecx,%ecx
    b1f3:	45 31 c0             	xor    %r8d,%r8d
    b1f6:	ba 44 00 00 00       	mov    $0x44,%edx
    b1fb:	48 8d b8 00 80 00 00 	lea    0x8000(%rax),%rdi
    b202:	e8 79 0d 00 00       	call   bf80 <sgx_mm_alloc>
    b207:	89 c3                	mov    %eax,%ebx
    b209:	85 c0                	test   %eax,%eax
    b20b:	74 13                	je     b220 <add_reserve+0xd0>
    b20d:	c6 05 ac ef 00 00 00 	movb   $0x0,0xefac(%rip)        # 1a1c0 <adding_reserve>
    b214:	e9 62 ff ff ff       	jmp    b17b <add_reserve+0x2b>
    b219:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b220:	48 8b 3c 24          	mov    (%rsp),%rdi
    b224:	48 89 ee             	mov    %rbp,%rsi
    b227:	e8 44 0e 00 00       	call   c070 <sgx_mm_commit>
    b22c:	48 8b 04 24          	mov    (%rsp),%rax
    b230:	48 8b 15 91 ef 00 00 	mov    0xef91(%rip),%rdx        # 1a1c8 <reserve_list>
    b237:	c6 05 82 ef 00 00 00 	movb   $0x0,0xef82(%rip)        # 1a1c0 <adding_reserve>
    b23e:	66 48 0f 6e c0       	movq   %rax,%xmm0
    b243:	48 89 50 18          	mov    %rdx,0x18(%rax)
    b247:	ba 00 00 00 10       	mov    $0x10000000,%edx
    b24c:	0f 16 05 75 ee 00 00 	movhps 0xee75(%rip),%xmm0        # 1a0c8 <reserve_size_increment>
    b253:	66 0f d4 05 45 7e 00 	paddq  0x7e45(%rip),%xmm0        # 130a0 <g_dyn_entry_table+0x70>
    b25a:	00 
    b25b:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    b262:	00 
    b263:	48 89 05 5e ef 00 00 	mov    %rax,0xef5e(%rip)        # 1a1c8 <reserve_list>
    b26a:	0f 11 00             	movups %xmm0,(%rax)
    b26d:	48 8b 05 54 ee 00 00 	mov    0xee54(%rip),%rax        # 1a0c8 <reserve_size_increment>
    b274:	48 01 c0             	add    %rax,%rax
    b277:	48 39 d0             	cmp    %rdx,%rax
    b27a:	48 0f 47 c2          	cmova  %rdx,%rax
    b27e:	48 89 05 43 ee 00 00 	mov    %rax,0xee43(%rip)        # 1a0c8 <reserve_size_increment>
    b285:	e9 f1 fe ff ff       	jmp    b17b <add_reserve+0x2b>
    b28a:	e8 71 58 00 00       	call   10b00 <__stack_chk_fail>
    b28f:	90                   	nop

000000000000b290 <remove_from_list>:
    b290:	48 8b 07             	mov    (%rdi),%rax
    b293:	48 23 05 36 ee 00 00 	and    0xee36(%rip),%rax        # 1a0d0 <size_mask>
    b29a:	48 89 c2             	mov    %rax,%rdx
    b29d:	48 8b 06             	mov    (%rsi),%rax
    b2a0:	48 39 f8             	cmp    %rdi,%rax
    b2a3:	74 43                	je     b2e8 <remove_from_list+0x58>
    b2a5:	48 83 fa 10          	cmp    $0x10,%rdx
    b2a9:	76 25                	jbe    b2d0 <remove_from_list+0x40>
    b2ab:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    b2af:	48 8b 47 08          	mov    0x8(%rdi),%rax
    b2b3:	48 85 d2             	test   %rdx,%rdx
    b2b6:	74 04                	je     b2bc <remove_from_list+0x2c>
    b2b8:	48 89 42 08          	mov    %rax,0x8(%rdx)
    b2bc:	48 85 c0             	test   %rax,%rax
    b2bf:	74 23                	je     b2e4 <remove_from_list+0x54>
    b2c1:	48 89 50 10          	mov    %rdx,0x10(%rax)
    b2c5:	c3                   	ret    
    b2c6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b2cd:	00 00 00 
    b2d0:	48 89 c2             	mov    %rax,%rdx
    b2d3:	48 8b 40 08          	mov    0x8(%rax),%rax
    b2d7:	48 39 f8             	cmp    %rdi,%rax
    b2da:	75 f4                	jne    b2d0 <remove_from_list+0x40>
    b2dc:	48 8b 40 08          	mov    0x8(%rax),%rax
    b2e0:	48 89 42 08          	mov    %rax,0x8(%rdx)
    b2e4:	c3                   	ret    
    b2e5:	0f 1f 00             	nopl   (%rax)
    b2e8:	48 8b 40 08          	mov    0x8(%rax),%rax
    b2ec:	48 89 06             	mov    %rax,(%rsi)
    b2ef:	48 85 c0             	test   %rax,%rax
    b2f2:	74 f0                	je     b2e4 <remove_from_list+0x54>
    b2f4:	48 83 fa 10          	cmp    $0x10,%rdx
    b2f8:	76 ea                	jbe    b2e4 <remove_from_list+0x54>
    b2fa:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    b301:	00 
    b302:	c3                   	ret    
    b303:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b30a:	00 00 00 
    b30d:	0f 1f 00             	nopl   (%rax)

000000000000b310 <put_free_block>:
    b310:	48 8b 05 b9 ed 00 00 	mov    0xedb9(%rip),%rax        # 1a0d0 <size_mask>
    b317:	48 8b 17             	mov    (%rdi),%rdx
    b31a:	48 21 c2             	and    %rax,%rdx
    b31d:	48 81 fa 08 08 00 00 	cmp    $0x808,%rdx
    b324:	76 2a                	jbe    b350 <put_free_block+0x40>
    b326:	48 8b 15 a3 ee 00 00 	mov    0xeea3(%rip),%rdx        # 1a1d0 <large_block_list>
    b32d:	48 89 57 08          	mov    %rdx,0x8(%rdi)
    b331:	48 85 d2             	test   %rdx,%rdx
    b334:	74 0d                	je     b343 <put_free_block+0x33>
    b336:	48 23 02             	and    (%rdx),%rax
    b339:	48 83 f8 10          	cmp    $0x10,%rax
    b33d:	76 04                	jbe    b343 <put_free_block+0x33>
    b33f:	48 89 7a 10          	mov    %rdi,0x10(%rdx)
    b343:	48 89 3d 86 ee 00 00 	mov    %rdi,0xee86(%rip)        # 1a1d0 <large_block_list>
    b34a:	c3                   	ret    
    b34b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b350:	48 8d 4a f0          	lea    -0x10(%rdx),%rcx
    b354:	48 8d 35 85 ee 00 00 	lea    0xee85(%rip),%rsi        # 1a1e0 <exact_block_list>
    b35b:	48 c1 e9 03          	shr    $0x3,%rcx
    b35f:	48 83 fa 0f          	cmp    $0xf,%rdx
    b363:	ba 00 00 00 00       	mov    $0x0,%edx
    b368:	48 0f 47 d1          	cmova  %rcx,%rdx
    b36c:	48 8b 0c d6          	mov    (%rsi,%rdx,8),%rcx
    b370:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
    b374:	48 85 c9             	test   %rcx,%rcx
    b377:	74 0d                	je     b386 <put_free_block+0x76>
    b379:	48 23 01             	and    (%rcx),%rax
    b37c:	48 83 f8 10          	cmp    $0x10,%rax
    b380:	76 04                	jbe    b386 <put_free_block+0x76>
    b382:	48 89 79 10          	mov    %rdi,0x10(%rcx)
    b386:	48 89 3c d6          	mov    %rdi,(%rsi,%rdx,8)
    b38a:	c3                   	ret    
    b38b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000b390 <neighbor_right>:
    b390:	4c 8b 05 39 ed 00 00 	mov    0xed39(%rip),%r8        # 1a0d0 <size_mask>
    b397:	4c 89 c2             	mov    %r8,%rdx
    b39a:	48 23 17             	and    (%rdi),%rdx
    b39d:	48 8d 04 17          	lea    (%rdi,%rdx,1),%rax
    b3a1:	74 2f                	je     b3d2 <neighbor_right+0x42>
    b3a3:	48 8b 0d 1e ee 00 00 	mov    0xee1e(%rip),%rcx        # 1a1c8 <reserve_list>
    b3aa:	48 85 c9             	test   %rcx,%rcx
    b3ad:	74 23                	je     b3d2 <neighbor_right+0x42>
    b3af:	48 89 ca             	mov    %rcx,%rdx
    b3b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b3b8:	48 8b 32             	mov    (%rdx),%rsi
    b3bb:	48 39 f7             	cmp    %rsi,%rdi
    b3be:	72 09                	jb     b3c9 <neighbor_right+0x39>
    b3c0:	48 03 72 10          	add    0x10(%rdx),%rsi
    b3c4:	48 39 c6             	cmp    %rax,%rsi
    b3c7:	73 0f                	jae    b3d8 <neighbor_right+0x48>
    b3c9:	48 8b 52 18          	mov    0x18(%rdx),%rdx
    b3cd:	48 85 d2             	test   %rdx,%rdx
    b3d0:	75 e6                	jne    b3b8 <neighbor_right+0x28>
    b3d2:	31 c0                	xor    %eax,%eax
    b3d4:	c3                   	ret    
    b3d5:	0f 1f 00             	nopl   (%rax)
    b3d8:	74 f8                	je     b3d2 <neighbor_right+0x42>
    b3da:	4c 23 00             	and    (%rax),%r8
    b3dd:	74 f3                	je     b3d2 <neighbor_right+0x42>
    b3df:	4a 8d 3c 00          	lea    (%rax,%r8,1),%rdi
    b3e3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b3e8:	48 8b 31             	mov    (%rcx),%rsi
    b3eb:	48 39 f0             	cmp    %rsi,%rax
    b3ee:	72 09                	jb     b3f9 <neighbor_right+0x69>
    b3f0:	48 03 71 10          	add    0x10(%rcx),%rsi
    b3f4:	48 39 fe             	cmp    %rdi,%rsi
    b3f7:	73 0f                	jae    b408 <neighbor_right+0x78>
    b3f9:	48 8b 49 18          	mov    0x18(%rcx),%rcx
    b3fd:	48 85 c9             	test   %rcx,%rcx
    b400:	75 e6                	jne    b3e8 <neighbor_right+0x58>
    b402:	31 c0                	xor    %eax,%eax
    b404:	c3                   	ret    
    b405:	0f 1f 00             	nopl   (%rax)
    b408:	48 39 d1             	cmp    %rdx,%rcx
    b40b:	ba 00 00 00 00       	mov    $0x0,%edx
    b410:	48 0f 45 c2          	cmovne %rdx,%rax
    b414:	c3                   	ret    
    b415:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b41c:	00 00 00 
    b41f:	90                   	nop

000000000000b420 <payload_to_block>:
    b420:	f3 0f 1e fa          	endbr64 
    b424:	48 89 f8             	mov    %rdi,%rax
    b427:	48 2b 05 aa ec 00 00 	sub    0xecaa(%rip),%rax        # 1a0d8 <header_size>
    b42e:	c3                   	ret    
    b42f:	90                   	nop

000000000000b430 <block_to_payload>:
    b430:	f3 0f 1e fa          	endbr64 
    b434:	48 8d 47 08          	lea    0x8(%rdi),%rax
    b438:	c3                   	ret    
    b439:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000b440 <is_alloced>:
    b440:	f3 0f 1e fa          	endbr64 
    b444:	48 8b 07             	mov    (%rdi),%rax
    b447:	83 e0 01             	and    $0x1,%eax
    b44a:	c3                   	ret    
    b44b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000b450 <block_size>:
    b450:	f3 0f 1e fa          	endbr64 
    b454:	48 8b 07             	mov    (%rdi),%rax
    b457:	48 23 05 72 ec 00 00 	and    0xec72(%rip),%rax        # 1a0d0 <size_mask>
    b45e:	c3                   	ret    
    b45f:	90                   	nop

000000000000b460 <block_end>:
    b460:	f3 0f 1e fa          	endbr64 
    b464:	48 8b 07             	mov    (%rdi),%rax
    b467:	48 23 05 62 ec 00 00 	and    0xec62(%rip),%rax        # 1a0d0 <size_mask>
    b46e:	48 01 f8             	add    %rdi,%rax
    b471:	c3                   	ret    
    b472:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b479:	00 00 00 
    b47c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000b480 <emalloc_init_with_reserved_mem>:
    b480:	f3 0f 1e fa          	endbr64 
    b484:	48 83 ec 08          	sub    $0x8,%rsp
    b488:	e8 c3 fc ff ff       	call   b150 <add_reserve>
    b48d:	85 c0                	test   %eax,%eax
    b48f:	75 17                	jne    b4a8 <emalloc_init_with_reserved_mem+0x28>
    b491:	48 c7 05 2c ec 00 00 	movq   $0x10000,0xec2c(%rip)        # 1a0c8 <reserve_size_increment>
    b498:	00 00 01 00 
    b49c:	48 83 c4 08          	add    $0x8,%rsp
    b4a0:	c3                   	ret    
    b4a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b4a8:	b8 0c 00 00 00       	mov    $0xc,%eax
    b4ad:	48 83 c4 08          	add    $0x8,%rsp
    b4b1:	c3                   	ret    
    b4b2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b4b9:	00 00 00 
    b4bc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000b4c0 <emalloc>:
    b4c0:	f3 0f 1e fa          	endbr64 
    b4c4:	48 8b 05 0d ec 00 00 	mov    0xec0d(%rip),%rax        # 1a0d8 <header_size>
    b4cb:	53                   	push   %rbx
    b4cc:	bb 10 00 00 00       	mov    $0x10,%ebx
    b4d1:	48 8d 44 38 07       	lea    0x7(%rax,%rdi,1),%rax
    b4d6:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    b4da:	48 39 d8             	cmp    %rbx,%rax
    b4dd:	48 0f 43 d8          	cmovae %rax,%rbx
    b4e1:	80 3d d8 ec 00 00 00 	cmpb   $0x0,0xecd8(%rip)        # 1a1c0 <adding_reserve>
    b4e8:	74 36                	je     b520 <emalloc+0x60>
    b4ea:	48 8b 05 ef f4 00 00 	mov    0xf4ef(%rip),%rax        # 1a9e0 <meta_used>
    b4f1:	48 8d 14 03          	lea    (%rbx,%rax,1),%rdx
    b4f5:	48 81 fa 00 00 01 00 	cmp    $0x10000,%rdx
    b4fc:	0f 87 1c 01 00 00    	ja     b61e <emalloc+0x15e>
    b502:	48 8d 0d f7 f4 00 00 	lea    0xf4f7(%rip),%rcx        # 1aa00 <meta_reserve>
    b509:	48 83 cb 01          	or     $0x1,%rbx
    b50d:	48 89 15 cc f4 00 00 	mov    %rdx,0xf4cc(%rip)        # 1a9e0 <meta_used>
    b514:	48 01 c8             	add    %rcx,%rax
    b517:	48 89 18             	mov    %rbx,(%rax)
    b51a:	48 83 c0 08          	add    $0x8,%rax
    b51e:	5b                   	pop    %rbx
    b51f:	c3                   	ret    
    b520:	48 3d 08 08 00 00    	cmp    $0x808,%rax
    b526:	0f 86 74 01 00 00    	jbe    b6a0 <emalloc+0x1e0>
    b52c:	48 8b 05 9d ec 00 00 	mov    0xec9d(%rip),%rax        # 1a1d0 <large_block_list>
    b533:	48 85 c0             	test   %rax,%rax
    b536:	0f 84 ec 00 00 00    	je     b628 <emalloc+0x168>
    b53c:	45 31 c0             	xor    %r8d,%r8d
    b53f:	90                   	nop
    b540:	48 8b 10             	mov    (%rax),%rdx
    b543:	48 39 da             	cmp    %rbx,%rdx
    b546:	72 3e                	jb     b586 <emalloc+0xc6>
    b548:	4d 85 c0             	test   %r8,%r8
    b54b:	74 7b                	je     b5c8 <emalloc+0x108>
    b54d:	49 3b 10             	cmp    (%r8),%rdx
    b550:	48 8b 48 08          	mov    0x8(%rax),%rcx
    b554:	73 20                	jae    b576 <emalloc+0xb6>
    b556:	48 85 c9             	test   %rcx,%rcx
    b559:	0f 84 89 01 00 00    	je     b6e8 <emalloc+0x228>
    b55f:	48 8b 11             	mov    (%rcx),%rdx
    b562:	49 89 c0             	mov    %rax,%r8
    b565:	48 39 da             	cmp    %rbx,%rdx
    b568:	72 19                	jb     b583 <emalloc+0xc3>
    b56a:	48 89 c8             	mov    %rcx,%rax
    b56d:	49 3b 10             	cmp    (%r8),%rdx
    b570:	48 8b 48 08          	mov    0x8(%rax),%rcx
    b574:	72 e0                	jb     b556 <emalloc+0x96>
    b576:	48 85 c9             	test   %rcx,%rcx
    b579:	74 14                	je     b58f <emalloc+0xcf>
    b57b:	48 8b 11             	mov    (%rcx),%rdx
    b57e:	48 39 da             	cmp    %rbx,%rdx
    b581:	73 e7                	jae    b56a <emalloc+0xaa>
    b583:	48 89 c8             	mov    %rcx,%rax
    b586:	48 8b 40 08          	mov    0x8(%rax),%rax
    b58a:	48 85 c0             	test   %rax,%rax
    b58d:	75 b1                	jne    b540 <emalloc+0x80>
    b58f:	4d 85 c0             	test   %r8,%r8
    b592:	0f 84 90 00 00 00    	je     b628 <emalloc+0x168>
    b598:	48 8d 35 31 ec 00 00 	lea    0xec31(%rip),%rsi        # 1a1d0 <large_block_list>
    b59f:	4c 89 c7             	mov    %r8,%rdi
    b5a2:	e8 e9 fc ff ff       	call   b290 <remove_from_list>
    b5a7:	49 8b 00             	mov    (%r8),%rax
    b5aa:	48 8d 53 10          	lea    0x10(%rbx),%rdx
    b5ae:	48 39 d0             	cmp    %rdx,%rax
    b5b1:	0f 83 c9 00 00 00    	jae    b680 <emalloc+0x1c0>
    b5b7:	48 83 cb 01          	or     $0x1,%rbx
    b5bb:	49 8d 40 08          	lea    0x8(%r8),%rax
    b5bf:	49 89 18             	mov    %rbx,(%r8)
    b5c2:	5b                   	pop    %rbx
    b5c3:	c3                   	ret    
    b5c4:	0f 1f 40 00          	nopl   0x0(%rax)
    b5c8:	49 89 c0             	mov    %rax,%r8
    b5cb:	eb b9                	jmp    b586 <emalloc+0xc6>
    b5cd:	0f 1f 00             	nopl   (%rax)
    b5d0:	48 8d bb 1f 00 01 00 	lea    0x1001f(%rbx),%rdi
    b5d7:	66 31 ff             	xor    %di,%di
    b5da:	e8 71 fb ff ff       	call   b150 <add_reserve>
    b5df:	85 c0                	test   %eax,%eax
    b5e1:	75 3b                	jne    b61e <emalloc+0x15e>
    b5e3:	48 8b 15 de eb 00 00 	mov    0xebde(%rip),%rdx        # 1a1c8 <reserve_list>
    b5ea:	48 85 d2             	test   %rdx,%rdx
    b5ed:	75 12                	jne    b601 <emalloc+0x141>
    b5ef:	eb 2d                	jmp    b61e <emalloc+0x15e>
    b5f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b5f8:	48 8b 52 18          	mov    0x18(%rdx),%rdx
    b5fc:	48 85 d2             	test   %rdx,%rdx
    b5ff:	74 1d                	je     b61e <emalloc+0x15e>
    b601:	48 8b 42 10          	mov    0x10(%rdx),%rax
    b605:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
    b609:	48 29 c1             	sub    %rax,%rcx
    b60c:	48 39 d9             	cmp    %rbx,%rcx
    b60f:	72 e7                	jb     b5f8 <emalloc+0x138>
    b611:	48 8d 0c 03          	lea    (%rbx,%rax,1),%rcx
    b615:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
    b619:	48 03 02             	add    (%rdx),%rax
    b61c:	75 4c                	jne    b66a <emalloc+0x1aa>
    b61e:	31 c0                	xor    %eax,%eax
    b620:	5b                   	pop    %rbx
    b621:	c3                   	ret    
    b622:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b628:	48 8b 15 99 eb 00 00 	mov    0xeb99(%rip),%rdx        # 1a1c8 <reserve_list>
    b62f:	48 85 d2             	test   %rdx,%rdx
    b632:	75 15                	jne    b649 <emalloc+0x189>
    b634:	eb 9a                	jmp    b5d0 <emalloc+0x110>
    b636:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b63d:	00 00 00 
    b640:	48 8b 52 18          	mov    0x18(%rdx),%rdx
    b644:	48 85 d2             	test   %rdx,%rdx
    b647:	74 87                	je     b5d0 <emalloc+0x110>
    b649:	48 8b 42 10          	mov    0x10(%rdx),%rax
    b64d:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
    b651:	48 29 c1             	sub    %rax,%rcx
    b654:	48 39 d9             	cmp    %rbx,%rcx
    b657:	72 e7                	jb     b640 <emalloc+0x180>
    b659:	48 8d 0c 03          	lea    (%rbx,%rax,1),%rcx
    b65d:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
    b661:	48 03 02             	add    (%rdx),%rax
    b664:	0f 84 66 ff ff ff    	je     b5d0 <emalloc+0x110>
    b66a:	48 83 cb 01          	or     $0x1,%rbx
    b66e:	48 83 c0 08          	add    $0x8,%rax
    b672:	48 89 58 f8          	mov    %rbx,-0x8(%rax)
    b676:	5b                   	pop    %rbx
    b677:	c3                   	ret    
    b678:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    b67f:	00 
    b680:	49 8d 3c 18          	lea    (%r8,%rbx,1),%rdi
    b684:	48 29 d8             	sub    %rbx,%rax
    b687:	49 89 18             	mov    %rbx,(%r8)
    b68a:	48 89 07             	mov    %rax,(%rdi)
    b68d:	e8 7e fc ff ff       	call   b310 <put_free_block>
    b692:	e9 20 ff ff ff       	jmp    b5b7 <emalloc+0xf7>
    b697:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    b69e:	00 00 
    b6a0:	48 8d 43 f0          	lea    -0x10(%rbx),%rax
    b6a4:	48 8d 15 35 eb 00 00 	lea    0xeb35(%rip),%rdx        # 1a1e0 <exact_block_list>
    b6ab:	48 c1 e8 03          	shr    $0x3,%rax
    b6af:	4c 8b 04 c2          	mov    (%rdx,%rax,8),%r8
    b6b3:	4d 85 c0             	test   %r8,%r8
    b6b6:	0f 84 6c ff ff ff    	je     b628 <emalloc+0x168>
    b6bc:	49 8b 48 08          	mov    0x8(%r8),%rcx
    b6c0:	48 89 0c c2          	mov    %rcx,(%rdx,%rax,8)
    b6c4:	48 85 c9             	test   %rcx,%rcx
    b6c7:	0f 84 ea fe ff ff    	je     b5b7 <emalloc+0xf7>
    b6cd:	48 85 c0             	test   %rax,%rax
    b6d0:	0f 84 e1 fe ff ff    	je     b5b7 <emalloc+0xf7>
    b6d6:	48 c7 41 10 00 00 00 	movq   $0x0,0x10(%rcx)
    b6dd:	00 
    b6de:	e9 d4 fe ff ff       	jmp    b5b7 <emalloc+0xf7>
    b6e3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b6e8:	49 89 c0             	mov    %rax,%r8
    b6eb:	e9 9f fe ff ff       	jmp    b58f <emalloc+0xcf>

000000000000b6f0 <can_erealloc>:
    b6f0:	f3 0f 1e fa          	endbr64 
    b6f4:	80 3d c5 ea 00 00 00 	cmpb   $0x0,0xeac5(%rip)        # 1a1c0 <adding_reserve>
    b6fb:	b8 01 00 00 00       	mov    $0x1,%eax
    b700:	75 30                	jne    b732 <can_erealloc+0x42>
    b702:	48 2b 3d cf e9 00 00 	sub    0xe9cf(%rip),%rdi        # 1a0d8 <header_size>
    b709:	48 8d 15 f0 f2 01 00 	lea    0x1f2f0(%rip),%rdx        # 2aa00 <mm_user_end>
    b710:	48 39 d7             	cmp    %rdx,%rdi
    b713:	73 1d                	jae    b732 <can_erealloc+0x42>
    b715:	48 8b 05 b4 e9 00 00 	mov    0xe9b4(%rip),%rax        # 1a0d0 <size_mask>
    b71c:	48 23 07             	and    (%rdi),%rax
    b71f:	48 01 c7             	add    %rax,%rdi
    b722:	48 8d 82 00 00 ff ff 	lea    -0x10000(%rdx),%rax
    b729:	48 39 f8             	cmp    %rdi,%rax
    b72c:	0f 93 c0             	setae  %al
    b72f:	0f b6 c0             	movzbl %al,%eax
    b732:	c3                   	ret    
    b733:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b73a:	00 00 00 
    b73d:	0f 1f 00             	nopl   (%rax)

000000000000b740 <efree>:
    b740:	f3 0f 1e fa          	endbr64 
    b744:	48 2b 3d 8d e9 00 00 	sub    0xe98d(%rip),%rdi        # 1a0d8 <header_size>
    b74b:	41 54                	push   %r12
    b74d:	48 8d 05 ac f2 01 00 	lea    0x1f2ac(%rip),%rax        # 2aa00 <mm_user_end>
    b754:	55                   	push   %rbp
    b755:	4c 8b 1d 74 e9 00 00 	mov    0xe974(%rip),%r11        # 1a0d0 <size_mask>
    b75c:	49 89 fc             	mov    %rdi,%r12
    b75f:	53                   	push   %rbx
    b760:	4c 8b 0f             	mov    (%rdi),%r9
    b763:	4d 21 d9             	and    %r11,%r9
    b766:	48 39 c7             	cmp    %rax,%rdi
    b769:	73 14                	jae    b77f <efree+0x3f>
    b76b:	49 8d 04 39          	lea    (%r9,%rdi,1),%rax
    b76f:	48 8d 15 8a f2 00 00 	lea    0xf28a(%rip),%rdx        # 1aa00 <meta_reserve>
    b776:	48 39 c2             	cmp    %rax,%rdx
    b779:	0f 82 f9 00 00 00    	jb     b878 <efree+0x138>
    b77f:	4d 85 c9             	test   %r9,%r9
    b782:	74 2e                	je     b7b2 <efree+0x72>
    b784:	4c 8b 15 3d ea 00 00 	mov    0xea3d(%rip),%r10        # 1a1c8 <reserve_list>
    b78b:	4d 85 d2             	test   %r10,%r10
    b78e:	74 22                	je     b7b2 <efree+0x72>
    b790:	4b 8d 14 21          	lea    (%r9,%r12,1),%rdx
    b794:	0f 1f 40 00          	nopl   0x0(%rax)
    b798:	49 8b 02             	mov    (%r10),%rax
    b79b:	49 39 c4             	cmp    %rax,%r12
    b79e:	72 09                	jb     b7a9 <efree+0x69>
    b7a0:	49 03 42 10          	add    0x10(%r10),%rax
    b7a4:	48 39 d0             	cmp    %rdx,%rax
    b7a7:	73 17                	jae    b7c0 <efree+0x80>
    b7a9:	4d 8b 52 18          	mov    0x18(%r10),%r10
    b7ad:	4d 85 d2             	test   %r10,%r10
    b7b0:	75 e6                	jne    b798 <efree+0x58>
    b7b2:	e8 80 6d 00 00       	call   12537 <abort>
    b7b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    b7be:	00 00 
    b7c0:	4d 89 0c 24          	mov    %r9,(%r12)
    b7c4:	49 c7 44 24 08 00 00 	movq   $0x0,0x8(%r12)
    b7cb:	00 00 
    b7cd:	49 83 f9 10          	cmp    $0x10,%r9
    b7d1:	0f 87 b9 00 00 00    	ja     b890 <efree+0x150>
    b7d7:	4c 89 e7             	mov    %r12,%rdi
    b7da:	48 8d 1d ff e9 00 00 	lea    0xe9ff(%rip),%rbx        # 1a1e0 <exact_block_list>
    b7e1:	48 8d 2d e8 e9 00 00 	lea    0xe9e8(%rip),%rbp        # 1a1d0 <large_block_list>
    b7e8:	e8 a3 fb ff ff       	call   b390 <neighbor_right>
    b7ed:	48 89 c7             	mov    %rax,%rdi
    b7f0:	48 85 c0             	test   %rax,%rax
    b7f3:	75 3c                	jne    b831 <efree+0xf1>
    b7f5:	e9 3d 01 00 00       	jmp    b937 <efree+0x1f7>
    b7fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b800:	48 89 de             	mov    %rbx,%rsi
    b803:	48 83 f9 0f          	cmp    $0xf,%rcx
    b807:	76 0b                	jbe    b814 <efree+0xd4>
    b809:	48 8d 71 f0          	lea    -0x10(%rcx),%rsi
    b80d:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
    b811:	48 01 de             	add    %rbx,%rsi
    b814:	e8 77 fa ff ff       	call   b290 <remove_from_list>
    b819:	49 03 0c 24          	add    (%r12),%rcx
    b81d:	49 89 0c 24          	mov    %rcx,(%r12)
    b821:	49 89 c9             	mov    %rcx,%r9
    b824:	e8 67 fb ff ff       	call   b390 <neighbor_right>
    b829:	48 89 c7             	mov    %rax,%rdi
    b82c:	48 85 c0             	test   %rax,%rax
    b82f:	74 23                	je     b854 <efree+0x114>
    b831:	48 8b 0f             	mov    (%rdi),%rcx
    b834:	f6 c1 01             	test   $0x1,%cl
    b837:	75 17                	jne    b850 <efree+0x110>
    b839:	4c 21 d9             	and    %r11,%rcx
    b83c:	48 81 f9 08 08 00 00 	cmp    $0x808,%rcx
    b843:	76 bb                	jbe    b800 <efree+0xc0>
    b845:	48 89 ee             	mov    %rbp,%rsi
    b848:	e8 43 fa ff ff       	call   b290 <remove_from_list>
    b84d:	eb ca                	jmp    b819 <efree+0xd9>
    b84f:	90                   	nop
    b850:	4d 8b 0c 24          	mov    (%r12),%r9
    b854:	4d 21 cb             	and    %r9,%r11
    b857:	49 8b 1a             	mov    (%r10),%rbx
    b85a:	4c 89 e0             	mov    %r12,%rax
    b85d:	48 29 d8             	sub    %rbx,%rax
    b860:	49 01 c3             	add    %rax,%r11
    b863:	4d 3b 5a 10          	cmp    0x10(%r10),%r11
    b867:	74 37                	je     b8a0 <efree+0x160>
    b869:	5b                   	pop    %rbx
    b86a:	4c 89 e7             	mov    %r12,%rdi
    b86d:	5d                   	pop    %rbp
    b86e:	41 5c                	pop    %r12
    b870:	e9 9b fa ff ff       	jmp    b310 <put_free_block>
    b875:	0f 1f 00             	nopl   (%rax)
    b878:	80 3d 41 e9 00 00 00 	cmpb   $0x0,0xe941(%rip)        # 1a1c0 <adding_reserve>
    b87f:	0f 84 2d ff ff ff    	je     b7b2 <efree+0x72>
    b885:	5b                   	pop    %rbx
    b886:	5d                   	pop    %rbp
    b887:	41 5c                	pop    %r12
    b889:	c3                   	ret    
    b88a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b890:	49 c7 44 24 10 00 00 	movq   $0x0,0x10(%r12)
    b897:	00 00 
    b899:	e9 39 ff ff ff       	jmp    b7d7 <efree+0x97>
    b89e:	66 90                	xchg   %ax,%ax
    b8a0:	48 8b 0d 29 e9 00 00 	mov    0xe929(%rip),%rcx        # 1a1d0 <large_block_list>
    b8a7:	4d 29 cb             	sub    %r9,%r11
    b8aa:	4d 89 5a 10          	mov    %r11,0x10(%r10)
    b8ae:	4e 8d 04 1b          	lea    (%rbx,%r11,1),%r8
    b8b2:	48 85 c9             	test   %rcx,%rcx
    b8b5:	75 12                	jne    b8c9 <efree+0x189>
    b8b7:	eb 6d                	jmp    b926 <efree+0x1e6>
    b8b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b8c0:	48 8b 49 08          	mov    0x8(%rcx),%rcx
    b8c4:	48 85 c9             	test   %rcx,%rcx
    b8c7:	74 5d                	je     b926 <efree+0x1e6>
    b8c9:	48 8b 01             	mov    (%rcx),%rax
    b8cc:	48 01 c8             	add    %rcx,%rax
    b8cf:	49 39 c0             	cmp    %rax,%r8
    b8d2:	75 ec                	jne    b8c0 <efree+0x180>
    b8d4:	48 8d 35 f5 e8 00 00 	lea    0xe8f5(%rip),%rsi        # 1a1d0 <large_block_list>
    b8db:	48 89 cf             	mov    %rcx,%rdi
    b8de:	e8 ad f9 ff ff       	call   b290 <remove_from_list>
    b8e3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b8e8:	4c 2b 01             	sub    (%rcx),%r8
    b8eb:	48 8b 0d de e8 00 00 	mov    0xe8de(%rip),%rcx        # 1a1d0 <large_block_list>
    b8f2:	48 85 c9             	test   %rcx,%rcx
    b8f5:	75 12                	jne    b909 <efree+0x1c9>
    b8f7:	eb 36                	jmp    b92f <efree+0x1ef>
    b8f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b900:	48 8b 49 08          	mov    0x8(%rcx),%rcx
    b904:	48 85 c9             	test   %rcx,%rcx
    b907:	74 17                	je     b920 <efree+0x1e0>
    b909:	48 8b 01             	mov    (%rcx),%rax
    b90c:	48 01 c8             	add    %rcx,%rax
    b90f:	49 39 c0             	cmp    %rax,%r8
    b912:	75 ec                	jne    b900 <efree+0x1c0>
    b914:	48 89 cf             	mov    %rcx,%rdi
    b917:	e8 74 f9 ff ff       	call   b290 <remove_from_list>
    b91c:	eb ca                	jmp    b8e8 <efree+0x1a8>
    b91e:	66 90                	xchg   %ax,%ax
    b920:	4d 89 c3             	mov    %r8,%r11
    b923:	49 29 db             	sub    %rbx,%r11
    b926:	4d 89 5a 10          	mov    %r11,0x10(%r10)
    b92a:	5b                   	pop    %rbx
    b92b:	5d                   	pop    %rbp
    b92c:	41 5c                	pop    %r12
    b92e:	c3                   	ret    
    b92f:	49 29 d8             	sub    %rbx,%r8
    b932:	4d 89 c3             	mov    %r8,%r11
    b935:	eb ef                	jmp    b926 <efree+0x1e6>
    b937:	4d 89 cb             	mov    %r9,%r11
    b93a:	e9 18 ff ff ff       	jmp    b857 <efree+0x117>
    b93f:	90                   	nop

000000000000b940 <mm_init_ema>:
    b940:	f3 0f 1e fa          	endbr64 
    b944:	41 57                	push   %r15
    b946:	4d 89 cf             	mov    %r9,%r15
    b949:	41 56                	push   %r14
    b94b:	4d 89 c6             	mov    %r8,%r14
    b94e:	41 55                	push   %r13
    b950:	41 89 cd             	mov    %ecx,%r13d
    b953:	41 54                	push   %r12
    b955:	41 89 d4             	mov    %edx,%r12d
    b958:	55                   	push   %rbp
    b959:	48 89 f5             	mov    %rsi,%rbp
    b95c:	53                   	push   %rbx
    b95d:	48 89 fb             	mov    %rdi,%rbx
    b960:	48 83 ec 18          	sub    $0x18,%rsp
    b964:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    b96b:	00 00 
    b96d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    b972:	31 c0                	xor    %eax,%eax
    b974:	e8 47 a1 ff ff       	call   5ac0 <sgx_mm_is_within_enclave>
    b979:	89 c2                	mov    %eax,%edx
    b97b:	b8 0d 00 00 00       	mov    $0xd,%eax
    b980:	84 d2                	test   %dl,%dl
    b982:	0f 84 7d 00 00 00    	je     ba05 <mm_init_ema+0xc5>
    b988:	41 f7 c4 7e f8 ff ff 	test   $0xfffff87e,%r12d
    b98f:	75 6f                	jne    ba00 <mm_init_ema+0xc0>
    b991:	41 83 fd 07          	cmp    $0x7,%r13d
    b995:	77 69                	ja     ba00 <mm_init_ema+0xc0>
    b997:	48 89 e1             	mov    %rsp,%rcx
    b99a:	48 89 ea             	mov    %rbp,%rdx
    b99d:	48 8d 3d c4 e6 00 00 	lea    0xe6c4(%rip),%rdi        # 1a068 <g_rts_ema_root>
    b9a4:	48 89 de             	mov    %rbx,%rsi
    b9a7:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    b9ae:	00 
    b9af:	e8 2c e6 ff ff       	call   9fe0 <find_free_region_at>
    b9b4:	84 c0                	test   %al,%al
    b9b6:	74 48                	je     ba00 <mm_init_ema+0xc0>
    b9b8:	48 83 ec 08          	sub    $0x8,%rsp
    b9bc:	44 89 e1             	mov    %r12d,%ecx
    b9bf:	41 0f b6 d4          	movzbl %r12b,%edx
    b9c3:	48 89 df             	mov    %rbx,%rdi
    b9c6:	ff 74 24 08          	push   0x8(%rsp)
    b9ca:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    b9d0:	4d 89 f9             	mov    %r15,%r9
    b9d3:	4d 89 f0             	mov    %r14,%r8
    b9d6:	44 09 e9             	or     %r13d,%ecx
    b9d9:	48 89 ee             	mov    %rbp,%rsi
    b9dc:	48 63 c9             	movslq %ecx,%rcx
    b9df:	e8 dc e6 ff ff       	call   a0c0 <ema_new>
    b9e4:	48 89 c7             	mov    %rax,%rdi
    b9e7:	58                   	pop    %rax
    b9e8:	5a                   	pop    %rdx
    b9e9:	48 85 ff             	test   %rdi,%rdi
    b9ec:	74 3a                	je     ba28 <mm_init_ema+0xe8>
    b9ee:	31 c0                	xor    %eax,%eax
    b9f0:	41 83 e4 01          	and    $0x1,%r12d
    b9f4:	75 0f                	jne    ba05 <mm_init_ema+0xc5>
    b9f6:	e8 55 de ff ff       	call   9850 <ema_set_eaccept_full>
    b9fb:	eb 08                	jmp    ba05 <mm_init_ema+0xc5>
    b9fd:	0f 1f 00             	nopl   (%rax)
    ba00:	b8 16 00 00 00       	mov    $0x16,%eax
    ba05:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    ba0a:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    ba11:	00 00 
    ba13:	75 1a                	jne    ba2f <mm_init_ema+0xef>
    ba15:	48 83 c4 18          	add    $0x18,%rsp
    ba19:	5b                   	pop    %rbx
    ba1a:	5d                   	pop    %rbp
    ba1b:	41 5c                	pop    %r12
    ba1d:	41 5d                	pop    %r13
    ba1f:	41 5e                	pop    %r14
    ba21:	41 5f                	pop    %r15
    ba23:	c3                   	ret    
    ba24:	0f 1f 40 00          	nopl   0x0(%rax)
    ba28:	b8 0c 00 00 00       	mov    $0xc,%eax
    ba2d:	eb d6                	jmp    ba05 <mm_init_ema+0xc5>
    ba2f:	e8 cc 50 00 00       	call   10b00 <__stack_chk_fail>
    ba34:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    ba3b:	00 00 00 
    ba3e:	66 90                	xchg   %ax,%ax

000000000000ba40 <mm_alloc>:
    ba40:	f3 0f 1e fa          	endbr64 
    ba44:	48 83 ec 10          	sub    $0x10,%rsp
    ba48:	48 8d 05 19 e6 00 00 	lea    0xe619(%rip),%rax        # 1a068 <g_rts_ema_root>
    ba4f:	50                   	push   %rax
    ba50:	e8 2b 02 00 00       	call   bc80 <mm_alloc_internal>
    ba55:	48 83 c4 18          	add    $0x18,%rsp
    ba59:	c3                   	ret    
    ba5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000ba60 <mm_commit>:
    ba60:	f3 0f 1e fa          	endbr64 
    ba64:	48 8d 15 fd e5 00 00 	lea    0xe5fd(%rip),%rdx        # 1a068 <g_rts_ema_root>
    ba6b:	e9 40 05 00 00       	jmp    bfb0 <mm_commit_internal>

000000000000ba70 <mm_uncommit>:
    ba70:	f3 0f 1e fa          	endbr64 
    ba74:	48 8d 15 ed e5 00 00 	lea    0xe5ed(%rip),%rdx        # 1a068 <g_rts_ema_root>
    ba7b:	e9 00 06 00 00       	jmp    c080 <mm_uncommit_internal>

000000000000ba80 <mm_dealloc>:
    ba80:	f3 0f 1e fa          	endbr64 
    ba84:	48 8d 15 dd e5 00 00 	lea    0xe5dd(%rip),%rdx        # 1a068 <g_rts_ema_root>
    ba8b:	e9 c0 06 00 00       	jmp    c150 <mm_dealloc_internal>

000000000000ba90 <mm_commit_data>:
    ba90:	f3 0f 1e fa          	endbr64 
    ba94:	4c 8d 05 cd e5 00 00 	lea    0xe5cd(%rip),%r8        # 1a068 <g_rts_ema_root>
    ba9b:	e9 80 07 00 00       	jmp    c220 <mm_commit_data_internal>

000000000000baa0 <mm_modify_type>:
    baa0:	f3 0f 1e fa          	endbr64 
    baa4:	48 8d 0d bd e5 00 00 	lea    0xe5bd(%rip),%rcx        # 1a068 <g_rts_ema_root>
    baab:	e9 90 08 00 00       	jmp    c340 <mm_modify_type_internal>

000000000000bab0 <mm_modify_permissions>:
    bab0:	f3 0f 1e fa          	endbr64 
    bab4:	48 8d 0d ad e5 00 00 	lea    0xe5ad(%rip),%rcx        # 1a068 <g_rts_ema_root>
    babb:	e9 40 0a 00 00       	jmp    c500 <mm_modify_permissions_internal>

000000000000bac0 <sgx_mm_enclave_pfhandler>:
    bac0:	f3 0f 1e fa          	endbr64 
    bac4:	41 56                	push   %r14
    bac6:	41 55                	push   %r13
    bac8:	49 89 fd             	mov    %rdi,%r13
    bacb:	41 54                	push   %r12
    bacd:	55                   	push   %rbp
    bace:	53                   	push   %rbx
    bacf:	31 db                	xor    %ebx,%ebx
    bad1:	48 83 ec 10          	sub    $0x10,%rsp
    bad5:	4c 8b 37             	mov    (%rdi),%r14
    bad8:	48 8b 3d 31 ef 01 00 	mov    0x1ef31(%rip),%rdi        # 2aa10 <mm_lock>
    badf:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    bae6:	00 00 
    bae8:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    baed:	31 c0                	xor    %eax,%eax
    baef:	e8 6c 9f ff ff       	call   5a60 <sgx_mm_mutex_lock>
    baf4:	85 c0                	test   %eax,%eax
    baf6:	74 28                	je     bb20 <sgx_mm_enclave_pfhandler+0x60>
    baf8:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    bafd:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    bb04:	00 00 
    bb06:	0f 85 50 01 00 00    	jne    bc5c <sgx_mm_enclave_pfhandler+0x19c>
    bb0c:	48 83 c4 10          	add    $0x10,%rsp
    bb10:	89 d8                	mov    %ebx,%eax
    bb12:	5b                   	pop    %rbx
    bb13:	5d                   	pop    %rbp
    bb14:	41 5c                	pop    %r12
    bb16:	41 5d                	pop    %r13
    bb18:	41 5e                	pop    %r14
    bb1a:	c3                   	ret    
    bb1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    bb20:	49 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%r14
    bb27:	48 8d 3d d2 e4 00 00 	lea    0xe4d2(%rip),%rdi        # 1a000 <g_user_ema_root>
    bb2e:	89 c3                	mov    %eax,%ebx
    bb30:	4c 89 f6             	mov    %r14,%rsi
    bb33:	e8 48 de ff ff       	call   9980 <search_ema>
    bb38:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    bb3f:	00 
    bb40:	48 89 c5             	mov    %rax,%rbp
    bb43:	48 85 c0             	test   %rax,%rax
    bb46:	0f 84 b4 00 00 00    	je     bc00 <sgx_mm_enclave_pfhandler+0x140>
    bb4c:	48 89 e6             	mov    %rsp,%rsi
    bb4f:	48 89 ef             	mov    %rbp,%rdi
    bb52:	e8 d9 dc ff ff       	call   9830 <ema_fault_handler>
    bb57:	49 89 c4             	mov    %rax,%r12
    bb5a:	48 85 c0             	test   %rax,%rax
    bb5d:	74 21                	je     bb80 <sgx_mm_enclave_pfhandler+0xc0>
    bb5f:	48 8b 3d aa ee 01 00 	mov    0x1eeaa(%rip),%rdi        # 2aa10 <mm_lock>
    bb66:	e8 15 9f ff ff       	call   5a80 <sgx_mm_mutex_unlock>
    bb6b:	48 8b 34 24          	mov    (%rsp),%rsi
    bb6f:	4c 89 ef             	mov    %r13,%rdi
    bb72:	41 ff d4             	call   *%r12
    bb75:	89 c3                	mov    %eax,%ebx
    bb77:	e9 7c ff ff ff       	jmp    baf8 <sgx_mm_enclave_pfhandler+0x38>
    bb7c:	0f 1f 40 00          	nopl   0x0(%rax)
    bb80:	4c 89 f6             	mov    %r14,%rsi
    bb83:	48 89 ef             	mov    %rbp,%rdi
    bb86:	e8 c5 dd ff ff       	call   9950 <ema_page_committed>
    bb8b:	84 c0                	test   %al,%al
    bb8d:	74 31                	je     bbc0 <sgx_mm_enclave_pfhandler+0x100>
    bb8f:	41 f6 45 08 02       	testb  $0x2,0x8(%r13)
    bb94:	0f 84 86 00 00 00    	je     bc20 <sgx_mm_enclave_pfhandler+0x160>
    bb9a:	48 89 ef             	mov    %rbp,%rdi
    bb9d:	e8 7e dc ff ff       	call   9820 <get_ema_si_flags>
    bba2:	48 d1 e8             	shr    %rax
    bba5:	48 89 c3             	mov    %rax,%rbx
    bba8:	83 e3 01             	and    $0x1,%ebx
    bbab:	f7 db                	neg    %ebx
    bbad:	48 8b 3d 5c ee 01 00 	mov    0x1ee5c(%rip),%rdi        # 2aa10 <mm_lock>
    bbb4:	e8 c7 9e ff ff       	call   5a80 <sgx_mm_mutex_unlock>
    bbb9:	e9 3a ff ff ff       	jmp    baf8 <sgx_mm_enclave_pfhandler+0x38>
    bbbe:	66 90                	xchg   %ax,%ax
    bbc0:	48 89 ef             	mov    %rbp,%rdi
    bbc3:	e8 48 dc ff ff       	call   9810 <get_ema_alloc_flags>
    bbc8:	a8 04                	test   $0x4,%al
    bbca:	0f 84 91 00 00 00    	je     bc61 <sgx_mm_enclave_pfhandler+0x1a1>
    bbd0:	41 f6 45 08 02       	testb  $0x2,0x8(%r13)
    bbd5:	74 69                	je     bc40 <sgx_mm_enclave_pfhandler+0x180>
    bbd7:	48 89 ef             	mov    %rbp,%rdi
    bbda:	e8 41 dc ff ff       	call   9820 <get_ema_si_flags>
    bbdf:	a8 02                	test   $0x2,%al
    bbe1:	74 ca                	je     bbad <sgx_mm_enclave_pfhandler+0xed>
    bbe3:	49 8d 96 00 10 00 00 	lea    0x1000(%r14),%rdx
    bbea:	4c 89 f6             	mov    %r14,%rsi
    bbed:	48 89 ef             	mov    %rbp,%rdi
    bbf0:	e8 4b e7 ff ff       	call   a340 <ema_do_commit>
    bbf5:	85 c0                	test   %eax,%eax
    bbf7:	75 68                	jne    bc61 <sgx_mm_enclave_pfhandler+0x1a1>
    bbf9:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
    bbfe:	eb ad                	jmp    bbad <sgx_mm_enclave_pfhandler+0xed>
    bc00:	4c 89 f6             	mov    %r14,%rsi
    bc03:	48 8d 3d 5e e4 00 00 	lea    0xe45e(%rip),%rdi        # 1a068 <g_rts_ema_root>
    bc0a:	e8 71 dd ff ff       	call   9980 <search_ema>
    bc0f:	48 89 c5             	mov    %rax,%rbp
    bc12:	48 85 c0             	test   %rax,%rax
    bc15:	0f 85 31 ff ff ff    	jne    bb4c <sgx_mm_enclave_pfhandler+0x8c>
    bc1b:	eb 90                	jmp    bbad <sgx_mm_enclave_pfhandler+0xed>
    bc1d:	0f 1f 00             	nopl   (%rax)
    bc20:	48 89 ef             	mov    %rbp,%rdi
    bc23:	e8 f8 db ff ff       	call   9820 <get_ema_si_flags>
    bc28:	a8 01                	test   $0x1,%al
    bc2a:	0f 84 7d ff ff ff    	je     bbad <sgx_mm_enclave_pfhandler+0xed>
    bc30:	41 f6 45 08 02       	testb  $0x2,0x8(%r13)
    bc35:	74 c2                	je     bbf9 <sgx_mm_enclave_pfhandler+0x139>
    bc37:	e9 5e ff ff ff       	jmp    bb9a <sgx_mm_enclave_pfhandler+0xda>
    bc3c:	0f 1f 40 00          	nopl   0x0(%rax)
    bc40:	48 89 ef             	mov    %rbp,%rdi
    bc43:	e8 d8 db ff ff       	call   9820 <get_ema_si_flags>
    bc48:	a8 01                	test   $0x1,%al
    bc4a:	0f 84 5d ff ff ff    	je     bbad <sgx_mm_enclave_pfhandler+0xed>
    bc50:	41 f6 45 08 02       	testb  $0x2,0x8(%r13)
    bc55:	74 8c                	je     bbe3 <sgx_mm_enclave_pfhandler+0x123>
    bc57:	e9 7b ff ff ff       	jmp    bbd7 <sgx_mm_enclave_pfhandler+0x117>
    bc5c:	e8 9f 4e 00 00       	call   10b00 <__stack_chk_fail>
    bc61:	48 8b 3d a8 ed 01 00 	mov    0x1eda8(%rip),%rdi        # 2aa10 <mm_lock>
    bc68:	e8 13 9e ff ff       	call   5a80 <sgx_mm_mutex_unlock>
    bc6d:	e8 c5 68 00 00       	call   12537 <abort>
    bc72:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    bc79:	00 00 00 
    bc7c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000bc80 <mm_alloc_internal>:
    bc80:	f3 0f 1e fa          	endbr64 
    bc84:	41 57                	push   %r15
    bc86:	41 56                	push   %r14
    bc88:	41 55                	push   %r13
    bc8a:	41 54                	push   %r12
    bc8c:	55                   	push   %rbp
    bc8d:	53                   	push   %rbx
    bc8e:	48 83 ec 68          	sub    $0x68,%rsp
    bc92:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    bc99:	00 00 
    bc9b:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    bca0:	31 c0                	xor    %eax,%eax
    bca2:	4c 8b b4 24 a0 00 00 	mov    0xa0(%rsp),%r14
    bca9:	00 
    bcaa:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
    bcb1:	00 00 
    bcb3:	f6 c2 07             	test   $0x7,%dl
    bcb6:	74 60                	je     bd18 <mm_alloc_internal+0x98>
    bcb8:	4c 89 c5             	mov    %r8,%rbp
    bcbb:	89 d0                	mov    %edx,%eax
    bcbd:	41 89 d0             	mov    %edx,%r8d
    bcc0:	25 00 ff 00 00       	and    $0xff00,%eax
    bcc5:	41 81 e0 00 ff 00 00 	and    $0xff00,%r8d
    bccc:	f6 c6 f8             	test   $0xf8,%dh
    bccf:	75 47                	jne    bd18 <mm_alloc_internal+0x98>
    bcd1:	85 c0                	test   %eax,%eax
    bcd3:	b8 00 02 00 00       	mov    $0x200,%eax
    bcd8:	49 89 f7             	mov    %rsi,%r15
    bcdb:	4c 0f 44 c0          	cmove  %rax,%r8
    bcdf:	f7 c6 ff 0f 00 00    	test   $0xfff,%esi
    bce5:	75 31                	jne    bd18 <mm_alloc_internal+0x98>
    bce7:	48 89 cb             	mov    %rcx,%rbx
    bcea:	89 d1                	mov    %edx,%ecx
    bcec:	4d 89 cc             	mov    %r9,%r12
    bcef:	c1 e9 18             	shr    $0x18,%ecx
    bcf2:	74 54                	je     bd48 <mm_alloc_internal+0xc8>
    bcf4:	83 f9 0b             	cmp    $0xb,%ecx
    bcf7:	76 1f                	jbe    bd18 <mm_alloc_internal+0x98>
    bcf9:	b8 01 00 00 00       	mov    $0x1,%eax
    bcfe:	49 c7 c5 ff ff ff ff 	mov    $0xffffffffffffffff,%r13
    bd05:	48 d3 e0             	shl    %cl,%rax
    bd08:	49 d3 e5             	shl    %cl,%r13
    bd0b:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    bd10:	49 f7 d5             	not    %r13
    bd13:	eb 42                	jmp    bd57 <mm_alloc_internal+0xd7>
    bd15:	0f 1f 00             	nopl   (%rax)
    bd18:	b9 16 00 00 00       	mov    $0x16,%ecx
    bd1d:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
    bd22:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    bd29:	00 00 
    bd2b:	0f 85 41 02 00 00    	jne    bf72 <mm_alloc_internal+0x2f2>
    bd31:	48 83 c4 68          	add    $0x68,%rsp
    bd35:	89 c8                	mov    %ecx,%eax
    bd37:	5b                   	pop    %rbx
    bd38:	5d                   	pop    %rbp
    bd39:	41 5c                	pop    %r12
    bd3b:	41 5d                	pop    %r13
    bd3d:	41 5e                	pop    %r14
    bd3f:	41 5f                	pop    %r15
    bd41:	c3                   	ret    
    bd42:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    bd48:	48 c7 44 24 08 00 10 	movq   $0x1000,0x8(%rsp)
    bd4f:	00 00 
    bd51:	41 bd ff 0f 00 00    	mov    $0xfff,%r13d
    bd57:	48 89 7c 24 38       	mov    %rdi,0x38(%rsp)
    bd5c:	49 21 fd             	and    %rdi,%r13
    bd5f:	75 b7                	jne    bd18 <mm_alloc_internal+0x98>
    bd61:	48 85 ff             	test   %rdi,%rdi
    bd64:	74 23                	je     bd89 <mm_alloc_internal+0x109>
    bd66:	4c 89 fe             	mov    %r15,%rsi
    bd69:	89 54 24 1c          	mov    %edx,0x1c(%rsp)
    bd6d:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
    bd72:	e8 49 9d ff ff       	call   5ac0 <sgx_mm_is_within_enclave>
    bd77:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
    bd7c:	8b 54 24 1c          	mov    0x1c(%rsp),%edx
    bd80:	b9 0d 00 00 00       	mov    $0xd,%ecx
    bd85:	84 c0                	test   %al,%al
    bd87:	74 94                	je     bd1d <mm_alloc_internal+0x9d>
    bd89:	48 8b 3d 80 ec 01 00 	mov    0x1ec80(%rip),%rdi        # 2aa10 <mm_lock>
    bd90:	89 54 24 1c          	mov    %edx,0x1c(%rsp)
    bd94:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
    bd99:	e8 c2 9c ff ff       	call   5a60 <sgx_mm_mutex_lock>
    bd9e:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
    bda3:	8b 54 24 1c          	mov    0x1c(%rsp),%edx
    bda7:	b9 0e 00 00 00       	mov    $0xe,%ecx
    bdac:	85 c0                	test   %eax,%eax
    bdae:	0f 85 69 ff ff ff    	jne    bd1d <mm_alloc_internal+0x9d>
    bdb4:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
    bdb9:	49 83 c8 03          	or     $0x3,%r8
    bdbd:	0f b6 c2             	movzbl %dl,%eax
    bdc0:	f6 c2 01             	test   $0x1,%dl
    bdc3:	89 44 24 10          	mov    %eax,0x10(%rsp)
    bdc7:	4d 0f 44 e8          	cmove  %r8,%r13
    bdcb:	48 85 f6             	test   %rsi,%rsi
    bdce:	0f 85 9c 00 00 00    	jne    be70 <mm_alloc_internal+0x1f0>
    bdd4:	4c 8d 44 24 40       	lea    0x40(%rsp),%r8
    bdd9:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    bdde:	48 8d 4c 24 38       	lea    0x38(%rsp),%rcx
    bde3:	4c 89 fe             	mov    %r15,%rsi
    bde6:	4c 89 f7             	mov    %r14,%rdi
    bde9:	e8 e2 de ff ff       	call   9cd0 <find_free_region>
    bdee:	84 c0                	test   %al,%al
    bdf0:	0f 84 0a 01 00 00    	je     bf00 <mm_alloc_internal+0x280>
    bdf6:	48 83 ec 08          	sub    $0x8,%rsp
    bdfa:	49 89 e9             	mov    %rbp,%r9
    bdfd:	49 89 d8             	mov    %rbx,%r8
    be00:	4c 89 e9             	mov    %r13,%rcx
    be03:	ff 74 24 48          	push   0x48(%rsp)
    be07:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
    be0c:	4c 89 fe             	mov    %r15,%rsi
    be0f:	8b 54 24 20          	mov    0x20(%rsp),%edx
    be13:	e8 a8 e2 ff ff       	call   a0c0 <ema_new>
    be18:	48 89 c7             	mov    %rax,%rdi
    be1b:	58                   	pop    %rax
    be1c:	5a                   	pop    %rdx
    be1d:	48 85 ff             	test   %rdi,%rdi
    be20:	0f 84 da 00 00 00    	je     bf00 <mm_alloc_internal+0x280>
    be26:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    be2b:	e8 30 f2 ff ff       	call   b060 <ema_do_alloc>
    be30:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    be35:	85 c0                	test   %eax,%eax
    be37:	89 c1                	mov    %eax,%ecx
    be39:	0f 85 21 01 00 00    	jne    bf60 <mm_alloc_internal+0x2e0>
    be3f:	4d 85 e4             	test   %r12,%r12
    be42:	74 09                	je     be4d <mm_alloc_internal+0x1cd>
    be44:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    be49:	49 89 04 24          	mov    %rax,(%r12)
    be4d:	48 8b 3d bc eb 01 00 	mov    0x1ebbc(%rip),%rdi        # 2aa10 <mm_lock>
    be54:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
    be58:	e8 23 9c ff ff       	call   5a80 <sgx_mm_mutex_unlock>
    be5d:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
    be61:	e9 b7 fe ff ff       	jmp    bd1d <mm_alloc_internal+0x9d>
    be66:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    be6d:	00 00 00 
    be70:	83 e2 40             	and    $0x40,%edx
    be73:	4a 8d 04 3e          	lea    (%rsi,%r15,1),%rax
    be77:	48 8d 4c 24 48       	lea    0x48(%rsp),%rcx
    be7c:	4c 89 f7             	mov    %r14,%rdi
    be7f:	89 54 24 1c          	mov    %edx,0x1c(%rsp)
    be83:	4c 8d 44 24 50       	lea    0x50(%rsp),%r8
    be88:	48 89 c2             	mov    %rax,%rdx
    be8b:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
    be92:	00 00 
    be94:	48 c7 44 24 50 00 00 	movq   $0x0,0x50(%rsp)
    be9b:	00 00 
    be9d:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    bea2:	48 89 74 24 28       	mov    %rsi,0x28(%rsp)
    bea7:	e8 64 db ff ff       	call   9a10 <search_ema_range>
    beac:	85 c0                	test   %eax,%eax
    beae:	75 60                	jne    bf10 <mm_alloc_internal+0x290>
    beb0:	55                   	push   %rbp
    beb1:	4d 89 e9             	mov    %r13,%r9
    beb4:	53                   	push   %rbx
    beb5:	48 8b 7c 24 58       	mov    0x58(%rsp),%rdi
    beba:	44 8b 44 24 20       	mov    0x20(%rsp),%r8d
    bebf:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
    bec4:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
    bec9:	48 8b 74 24 60       	mov    0x60(%rsp),%rsi
    bece:	e8 3d f0 ff ff       	call   af10 <ema_realloc_from_reserve_range>
    bed3:	41 58                	pop    %r8
    bed5:	41 59                	pop    %r9
    bed7:	48 89 c7             	mov    %rax,%rdi
    beda:	48 85 c0             	test   %rax,%rax
    bedd:	0f 85 43 ff ff ff    	jne    be26 <mm_alloc_internal+0x1a6>
    bee3:	8b 7c 24 1c          	mov    0x1c(%rsp),%edi
    bee7:	b9 11 00 00 00       	mov    $0x11,%ecx
    beec:	85 ff                	test   %edi,%edi
    beee:	0f 84 e0 fe ff ff    	je     bdd4 <mm_alloc_internal+0x154>
    bef4:	e9 54 ff ff ff       	jmp    be4d <mm_alloc_internal+0x1cd>
    bef9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    bf00:	b9 0c 00 00 00       	mov    $0xc,%ecx
    bf05:	e9 43 ff ff ff       	jmp    be4d <mm_alloc_internal+0x1cd>
    bf0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    bf10:	4c 8d 44 24 40       	lea    0x40(%rsp),%r8
    bf15:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
    bf1a:	4c 89 fa             	mov    %r15,%rdx
    bf1d:	4c 89 f7             	mov    %r14,%rdi
    bf20:	4c 89 c1             	mov    %r8,%rcx
    bf23:	4c 89 44 24 20       	mov    %r8,0x20(%rsp)
    bf28:	e8 b3 e0 ff ff       	call   9fe0 <find_free_region_at>
    bf2d:	3c 01                	cmp    $0x1,%al
    bf2f:	0f 84 c1 fe ff ff    	je     bdf6 <mm_alloc_internal+0x176>
    bf35:	8b 74 24 1c          	mov    0x1c(%rsp),%esi
    bf39:	b9 01 00 00 00       	mov    $0x1,%ecx
    bf3e:	85 f6                	test   %esi,%esi
    bf40:	0f 85 07 ff ff ff    	jne    be4d <mm_alloc_internal+0x1cd>
    bf46:	84 c0                	test   %al,%al
    bf48:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
    bf4d:	0f 84 86 fe ff ff    	je     bdd9 <mm_alloc_internal+0x159>
    bf53:	e9 9e fe ff ff       	jmp    bdf6 <mm_alloc_internal+0x176>
    bf58:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    bf5f:	00 
    bf60:	89 44 24 08          	mov    %eax,0x8(%rsp)
    bf64:	e8 67 e2 ff ff       	call   a1d0 <ema_destroy>
    bf69:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
    bf6d:	e9 db fe ff ff       	jmp    be4d <mm_alloc_internal+0x1cd>
    bf72:	e8 89 4b 00 00       	call   10b00 <__stack_chk_fail>
    bf77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    bf7e:	00 00 

000000000000bf80 <sgx_mm_alloc>:
    bf80:	f3 0f 1e fa          	endbr64 
    bf84:	f6 c2 80             	test   $0x80,%dl
    bf87:	75 17                	jne    bfa0 <sgx_mm_alloc+0x20>
    bf89:	48 83 ec 10          	sub    $0x10,%rsp
    bf8d:	48 8d 05 6c e0 00 00 	lea    0xe06c(%rip),%rax        # 1a000 <g_user_ema_root>
    bf94:	50                   	push   %rax
    bf95:	e8 e6 fc ff ff       	call   bc80 <mm_alloc_internal>
    bf9a:	48 83 c4 18          	add    $0x18,%rsp
    bf9e:	c3                   	ret    
    bf9f:	90                   	nop
    bfa0:	b8 16 00 00 00       	mov    $0x16,%eax
    bfa5:	c3                   	ret    
    bfa6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    bfad:	00 00 00 

000000000000bfb0 <mm_commit_internal>:
    bfb0:	f3 0f 1e fa          	endbr64 
    bfb4:	41 55                	push   %r13
    bfb6:	49 89 d5             	mov    %rdx,%r13
    bfb9:	41 54                	push   %r12
    bfbb:	49 89 fc             	mov    %rdi,%r12
    bfbe:	55                   	push   %rbp
    bfbf:	48 89 f5             	mov    %rsi,%rbp
    bfc2:	53                   	push   %rbx
    bfc3:	bb 0e 00 00 00       	mov    $0xe,%ebx
    bfc8:	48 83 ec 28          	sub    $0x28,%rsp
    bfcc:	48 8b 3d 3d ea 01 00 	mov    0x1ea3d(%rip),%rdi        # 2aa10 <mm_lock>
    bfd3:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    bfda:	00 00 
    bfdc:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    bfe1:	31 c0                	xor    %eax,%eax
    bfe3:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    bfea:	00 00 
    bfec:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    bff3:	00 00 
    bff5:	e8 66 9a ff ff       	call   5a60 <sgx_mm_mutex_lock>
    bffa:	85 c0                	test   %eax,%eax
    bffc:	75 47                	jne    c045 <mm_commit_internal+0x95>
    bffe:	4c 01 e5             	add    %r12,%rbp
    c001:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    c006:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    c00b:	4c 89 e6             	mov    %r12,%rsi
    c00e:	48 89 ea             	mov    %rbp,%rdx
    c011:	4c 89 ef             	mov    %r13,%rdi
    c014:	bb 16 00 00 00       	mov    $0x16,%ebx
    c019:	e8 f2 d9 ff ff       	call   9a10 <search_ema_range>
    c01e:	85 c0                	test   %eax,%eax
    c020:	78 17                	js     c039 <mm_commit_internal+0x89>
    c022:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    c027:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    c02c:	48 89 e9             	mov    %rbp,%rcx
    c02f:	4c 89 e2             	mov    %r12,%rdx
    c032:	e8 f9 e3 ff ff       	call   a430 <ema_do_commit_loop>
    c037:	89 c3                	mov    %eax,%ebx
    c039:	48 8b 3d d0 e9 01 00 	mov    0x1e9d0(%rip),%rdi        # 2aa10 <mm_lock>
    c040:	e8 3b 9a ff ff       	call   5a80 <sgx_mm_mutex_unlock>
    c045:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    c04a:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    c051:	00 00 
    c053:	75 0d                	jne    c062 <mm_commit_internal+0xb2>
    c055:	48 83 c4 28          	add    $0x28,%rsp
    c059:	89 d8                	mov    %ebx,%eax
    c05b:	5b                   	pop    %rbx
    c05c:	5d                   	pop    %rbp
    c05d:	41 5c                	pop    %r12
    c05f:	41 5d                	pop    %r13
    c061:	c3                   	ret    
    c062:	e8 99 4a 00 00       	call   10b00 <__stack_chk_fail>
    c067:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    c06e:	00 00 

000000000000c070 <sgx_mm_commit>:
    c070:	f3 0f 1e fa          	endbr64 
    c074:	48 8d 15 85 df 00 00 	lea    0xdf85(%rip),%rdx        # 1a000 <g_user_ema_root>
    c07b:	e9 30 ff ff ff       	jmp    bfb0 <mm_commit_internal>

000000000000c080 <mm_uncommit_internal>:
    c080:	f3 0f 1e fa          	endbr64 
    c084:	41 55                	push   %r13
    c086:	49 89 d5             	mov    %rdx,%r13
    c089:	41 54                	push   %r12
    c08b:	49 89 fc             	mov    %rdi,%r12
    c08e:	55                   	push   %rbp
    c08f:	48 89 f5             	mov    %rsi,%rbp
    c092:	53                   	push   %rbx
    c093:	bb 0e 00 00 00       	mov    $0xe,%ebx
    c098:	48 83 ec 28          	sub    $0x28,%rsp
    c09c:	48 8b 3d 6d e9 01 00 	mov    0x1e96d(%rip),%rdi        # 2aa10 <mm_lock>
    c0a3:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c0aa:	00 00 
    c0ac:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    c0b1:	31 c0                	xor    %eax,%eax
    c0b3:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    c0ba:	00 00 
    c0bc:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    c0c3:	00 00 
    c0c5:	e8 96 99 ff ff       	call   5a60 <sgx_mm_mutex_lock>
    c0ca:	85 c0                	test   %eax,%eax
    c0cc:	75 47                	jne    c115 <mm_uncommit_internal+0x95>
    c0ce:	4c 01 e5             	add    %r12,%rbp
    c0d1:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    c0d6:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    c0db:	4c 89 e6             	mov    %r12,%rsi
    c0de:	48 89 ea             	mov    %rbp,%rdx
    c0e1:	4c 89 ef             	mov    %r13,%rdi
    c0e4:	bb 16 00 00 00       	mov    $0x16,%ebx
    c0e9:	e8 22 d9 ff ff       	call   9a10 <search_ema_range>
    c0ee:	85 c0                	test   %eax,%eax
    c0f0:	78 17                	js     c109 <mm_uncommit_internal+0x89>
    c0f2:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    c0f7:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    c0fc:	48 89 e9             	mov    %rbp,%rcx
    c0ff:	4c 89 e2             	mov    %r12,%rdx
    c102:	e8 69 e9 ff ff       	call   aa70 <ema_do_uncommit_loop>
    c107:	89 c3                	mov    %eax,%ebx
    c109:	48 8b 3d 00 e9 01 00 	mov    0x1e900(%rip),%rdi        # 2aa10 <mm_lock>
    c110:	e8 6b 99 ff ff       	call   5a80 <sgx_mm_mutex_unlock>
    c115:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    c11a:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    c121:	00 00 
    c123:	75 0d                	jne    c132 <mm_uncommit_internal+0xb2>
    c125:	48 83 c4 28          	add    $0x28,%rsp
    c129:	89 d8                	mov    %ebx,%eax
    c12b:	5b                   	pop    %rbx
    c12c:	5d                   	pop    %rbp
    c12d:	41 5c                	pop    %r12
    c12f:	41 5d                	pop    %r13
    c131:	c3                   	ret    
    c132:	e8 c9 49 00 00       	call   10b00 <__stack_chk_fail>
    c137:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    c13e:	00 00 

000000000000c140 <sgx_mm_uncommit>:
    c140:	f3 0f 1e fa          	endbr64 
    c144:	48 8d 15 b5 de 00 00 	lea    0xdeb5(%rip),%rdx        # 1a000 <g_user_ema_root>
    c14b:	e9 30 ff ff ff       	jmp    c080 <mm_uncommit_internal>

000000000000c150 <mm_dealloc_internal>:
    c150:	f3 0f 1e fa          	endbr64 
    c154:	41 55                	push   %r13
    c156:	49 89 d5             	mov    %rdx,%r13
    c159:	41 54                	push   %r12
    c15b:	49 89 fc             	mov    %rdi,%r12
    c15e:	55                   	push   %rbp
    c15f:	48 89 f5             	mov    %rsi,%rbp
    c162:	53                   	push   %rbx
    c163:	bb 0e 00 00 00       	mov    $0xe,%ebx
    c168:	48 83 ec 28          	sub    $0x28,%rsp
    c16c:	48 8b 3d 9d e8 01 00 	mov    0x1e89d(%rip),%rdi        # 2aa10 <mm_lock>
    c173:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c17a:	00 00 
    c17c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    c181:	31 c0                	xor    %eax,%eax
    c183:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    c18a:	00 00 
    c18c:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    c193:	00 00 
    c195:	e8 c6 98 ff ff       	call   5a60 <sgx_mm_mutex_lock>
    c19a:	85 c0                	test   %eax,%eax
    c19c:	75 47                	jne    c1e5 <mm_dealloc_internal+0x95>
    c19e:	4c 01 e5             	add    %r12,%rbp
    c1a1:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    c1a6:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    c1ab:	4c 89 e6             	mov    %r12,%rsi
    c1ae:	48 89 ea             	mov    %rbp,%rdx
    c1b1:	4c 89 ef             	mov    %r13,%rdi
    c1b4:	bb 16 00 00 00       	mov    $0x16,%ebx
    c1b9:	e8 52 d8 ff ff       	call   9a10 <search_ema_range>
    c1be:	85 c0                	test   %eax,%eax
    c1c0:	78 17                	js     c1d9 <mm_dealloc_internal+0x89>
    c1c2:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    c1c7:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    c1cc:	48 89 e9             	mov    %rbp,%rcx
    c1cf:	4c 89 e2             	mov    %r12,%rdx
    c1d2:	e8 49 e8 ff ff       	call   aa20 <ema_do_dealloc_loop>
    c1d7:	89 c3                	mov    %eax,%ebx
    c1d9:	48 8b 3d 30 e8 01 00 	mov    0x1e830(%rip),%rdi        # 2aa10 <mm_lock>
    c1e0:	e8 9b 98 ff ff       	call   5a80 <sgx_mm_mutex_unlock>
    c1e5:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    c1ea:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    c1f1:	00 00 
    c1f3:	75 0d                	jne    c202 <mm_dealloc_internal+0xb2>
    c1f5:	48 83 c4 28          	add    $0x28,%rsp
    c1f9:	89 d8                	mov    %ebx,%eax
    c1fb:	5b                   	pop    %rbx
    c1fc:	5d                   	pop    %rbp
    c1fd:	41 5c                	pop    %r12
    c1ff:	41 5d                	pop    %r13
    c201:	c3                   	ret    
    c202:	e8 f9 48 00 00       	call   10b00 <__stack_chk_fail>
    c207:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    c20e:	00 00 

000000000000c210 <sgx_mm_dealloc>:
    c210:	f3 0f 1e fa          	endbr64 
    c214:	48 8d 15 e5 dd 00 00 	lea    0xdde5(%rip),%rdx        # 1a000 <g_user_ema_root>
    c21b:	e9 30 ff ff ff       	jmp    c150 <mm_dealloc_internal>

000000000000c220 <mm_commit_data_internal>:
    c220:	f3 0f 1e fa          	endbr64 
    c224:	41 57                	push   %r15
    c226:	41 56                	push   %r14
    c228:	41 55                	push   %r13
    c22a:	41 54                	push   %r12
    c22c:	55                   	push   %rbp
    c22d:	53                   	push   %rbx
    c22e:	48 83 ec 28          	sub    $0x28,%rsp
    c232:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c239:	00 00 
    c23b:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    c240:	31 c0                	xor    %eax,%eax
    c242:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    c249:	00 00 
    c24b:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    c252:	00 00 
    c254:	48 85 f6             	test   %rsi,%rsi
    c257:	0f 84 a3 00 00 00    	je     c300 <mm_commit_data_internal+0xe0>
    c25d:	48 89 d0             	mov    %rdx,%rax
    c260:	49 89 fc             	mov    %rdi,%r12
    c263:	48 89 f3             	mov    %rsi,%rbx
    c266:	48 89 d5             	mov    %rdx,%rbp
    c269:	48 09 f0             	or     %rsi,%rax
    c26c:	48 09 f8             	or     %rdi,%rax
    c26f:	a9 ff 0f 00 00       	test   $0xfff,%eax
    c274:	0f 85 86 00 00 00    	jne    c300 <mm_commit_data_internal+0xe0>
    c27a:	41 89 cf             	mov    %ecx,%r15d
    c27d:	83 f9 07             	cmp    $0x7,%ecx
    c280:	77 7e                	ja     c300 <mm_commit_data_internal+0xe0>
    c282:	48 89 d7             	mov    %rdx,%rdi
    c285:	4d 89 c6             	mov    %r8,%r14
    c288:	e8 33 98 ff ff       	call   5ac0 <sgx_mm_is_within_enclave>
    c28d:	84 c0                	test   %al,%al
    c28f:	74 6f                	je     c300 <mm_commit_data_internal+0xe0>
    c291:	48 8b 3d 78 e7 01 00 	mov    0x1e778(%rip),%rdi        # 2aa10 <mm_lock>
    c298:	41 bd 0e 00 00 00    	mov    $0xe,%r13d
    c29e:	e8 bd 97 ff ff       	call   5a60 <sgx_mm_mutex_lock>
    c2a3:	85 c0                	test   %eax,%eax
    c2a5:	75 5f                	jne    c306 <mm_commit_data_internal+0xe6>
    c2a7:	4c 01 e3             	add    %r12,%rbx
    c2aa:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    c2af:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    c2b4:	4c 89 e6             	mov    %r12,%rsi
    c2b7:	48 89 da             	mov    %rbx,%rdx
    c2ba:	4c 89 f7             	mov    %r14,%rdi
    c2bd:	41 bd 16 00 00 00    	mov    $0x16,%r13d
    c2c3:	e8 48 d7 ff ff       	call   9a10 <search_ema_range>
    c2c8:	85 c0                	test   %eax,%eax
    c2ca:	78 1e                	js     c2ea <mm_commit_data_internal+0xca>
    c2cc:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    c2d1:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    c2d6:	45 89 f9             	mov    %r15d,%r9d
    c2d9:	49 89 e8             	mov    %rbp,%r8
    c2dc:	48 89 d9             	mov    %rbx,%rcx
    c2df:	4c 89 e2             	mov    %r12,%rdx
    c2e2:	e8 a9 ea ff ff       	call   ad90 <ema_do_commit_data_loop>
    c2e7:	41 89 c5             	mov    %eax,%r13d
    c2ea:	48 8b 3d 1f e7 01 00 	mov    0x1e71f(%rip),%rdi        # 2aa10 <mm_lock>
    c2f1:	e8 8a 97 ff ff       	call   5a80 <sgx_mm_mutex_unlock>
    c2f6:	eb 0e                	jmp    c306 <mm_commit_data_internal+0xe6>
    c2f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    c2ff:	00 
    c300:	41 bd 16 00 00 00    	mov    $0x16,%r13d
    c306:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    c30b:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    c312:	00 00 
    c314:	75 12                	jne    c328 <mm_commit_data_internal+0x108>
    c316:	48 83 c4 28          	add    $0x28,%rsp
    c31a:	44 89 e8             	mov    %r13d,%eax
    c31d:	5b                   	pop    %rbx
    c31e:	5d                   	pop    %rbp
    c31f:	41 5c                	pop    %r12
    c321:	41 5d                	pop    %r13
    c323:	41 5e                	pop    %r14
    c325:	41 5f                	pop    %r15
    c327:	c3                   	ret    
    c328:	e8 d3 47 00 00       	call   10b00 <__stack_chk_fail>
    c32d:	0f 1f 00             	nopl   (%rax)

000000000000c330 <sgx_mm_commit_data>:
    c330:	f3 0f 1e fa          	endbr64 
    c334:	4c 8d 05 c5 dc 00 00 	lea    0xdcc5(%rip),%r8        # 1a000 <g_user_ema_root>
    c33b:	e9 e0 fe ff ff       	jmp    c220 <mm_commit_data_internal>

000000000000c340 <mm_modify_type_internal>:
    c340:	f3 0f 1e fa          	endbr64 
    c344:	41 54                	push   %r12
    c346:	55                   	push   %rbp
    c347:	bd 01 00 00 00       	mov    $0x1,%ebp
    c34c:	53                   	push   %rbx
    c34d:	48 83 ec 20          	sub    $0x20,%rsp
    c351:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c358:	00 00 
    c35a:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    c35f:	31 c0                	xor    %eax,%eax
    c361:	81 fa 00 01 00 00    	cmp    $0x100,%edx
    c367:	0f 85 83 00 00 00    	jne    c3f0 <mm_modify_type_internal+0xb0>
    c36d:	48 81 fe 00 10 00 00 	cmp    $0x1000,%rsi
    c374:	0f 85 96 00 00 00    	jne    c410 <mm_modify_type_internal+0xd0>
    c37a:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    c381:	00 00 
    c383:	49 89 fc             	mov    %rdi,%r12
    c386:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    c38d:	00 00 
    c38f:	f7 c7 ff 0f 00 00    	test   $0xfff,%edi
    c395:	75 79                	jne    c410 <mm_modify_type_internal+0xd0>
    c397:	48 8b 3d 72 e6 01 00 	mov    0x1e672(%rip),%rdi        # 2aa10 <mm_lock>
    c39e:	48 89 cb             	mov    %rcx,%rbx
    c3a1:	bd 0e 00 00 00       	mov    $0xe,%ebp
    c3a6:	e8 b5 96 ff ff       	call   5a60 <sgx_mm_mutex_lock>
    c3ab:	85 c0                	test   %eax,%eax
    c3ad:	75 41                	jne    c3f0 <mm_modify_type_internal+0xb0>
    c3af:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    c3b4:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    c3b9:	4c 89 e6             	mov    %r12,%rsi
    c3bc:	48 89 df             	mov    %rbx,%rdi
    c3bf:	49 8d 94 24 00 10 00 	lea    0x1000(%r12),%rdx
    c3c6:	00 
    c3c7:	bd 16 00 00 00       	mov    $0x16,%ebp
    c3cc:	e8 3f d6 ff ff       	call   9a10 <search_ema_range>
    c3d1:	85 c0                	test   %eax,%eax
    c3d3:	78 0f                	js     c3e4 <mm_modify_type_internal+0xa4>
    c3d5:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    c3da:	4c 89 e6             	mov    %r12,%rsi
    c3dd:	e8 1e e1 ff ff       	call   a500 <ema_change_to_tcs>
    c3e2:	89 c5                	mov    %eax,%ebp
    c3e4:	48 8b 3d 25 e6 01 00 	mov    0x1e625(%rip),%rdi        # 2aa10 <mm_lock>
    c3eb:	e8 90 96 ff ff       	call   5a80 <sgx_mm_mutex_unlock>
    c3f0:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    c3f5:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    c3fc:	00 00 
    c3fe:	75 17                	jne    c417 <mm_modify_type_internal+0xd7>
    c400:	48 83 c4 20          	add    $0x20,%rsp
    c404:	89 e8                	mov    %ebp,%eax
    c406:	5b                   	pop    %rbx
    c407:	5d                   	pop    %rbp
    c408:	41 5c                	pop    %r12
    c40a:	c3                   	ret    
    c40b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    c410:	bd 16 00 00 00       	mov    $0x16,%ebp
    c415:	eb d9                	jmp    c3f0 <mm_modify_type_internal+0xb0>
    c417:	e8 e4 46 00 00       	call   10b00 <__stack_chk_fail>
    c41c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000c420 <sgx_mm_modify_type>:
    c420:	f3 0f 1e fa          	endbr64 
    c424:	55                   	push   %rbp
    c425:	53                   	push   %rbx
    c426:	bb 01 00 00 00       	mov    $0x1,%ebx
    c42b:	48 83 ec 28          	sub    $0x28,%rsp
    c42f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c436:	00 00 
    c438:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    c43d:	31 c0                	xor    %eax,%eax
    c43f:	81 fa 00 01 00 00    	cmp    $0x100,%edx
    c445:	0f 85 85 00 00 00    	jne    c4d0 <sgx_mm_modify_type+0xb0>
    c44b:	48 81 fe 00 10 00 00 	cmp    $0x1000,%rsi
    c452:	0f 85 98 00 00 00    	jne    c4f0 <sgx_mm_modify_type+0xd0>
    c458:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    c45f:	00 00 
    c461:	48 89 fd             	mov    %rdi,%rbp
    c464:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    c46b:	00 00 
    c46d:	f7 c7 ff 0f 00 00    	test   $0xfff,%edi
    c473:	75 7b                	jne    c4f0 <sgx_mm_modify_type+0xd0>
    c475:	48 8b 3d 94 e5 01 00 	mov    0x1e594(%rip),%rdi        # 2aa10 <mm_lock>
    c47c:	bb 0e 00 00 00       	mov    $0xe,%ebx
    c481:	e8 da 95 ff ff       	call   5a60 <sgx_mm_mutex_lock>
    c486:	85 c0                	test   %eax,%eax
    c488:	75 46                	jne    c4d0 <sgx_mm_modify_type+0xb0>
    c48a:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    c48f:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    c494:	48 89 ee             	mov    %rbp,%rsi
    c497:	bb 16 00 00 00       	mov    $0x16,%ebx
    c49c:	48 8d 95 00 10 00 00 	lea    0x1000(%rbp),%rdx
    c4a3:	48 8d 3d 56 db 00 00 	lea    0xdb56(%rip),%rdi        # 1a000 <g_user_ema_root>
    c4aa:	e8 61 d5 ff ff       	call   9a10 <search_ema_range>
    c4af:	85 c0                	test   %eax,%eax
    c4b1:	78 0f                	js     c4c2 <sgx_mm_modify_type+0xa2>
    c4b3:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    c4b8:	48 89 ee             	mov    %rbp,%rsi
    c4bb:	e8 40 e0 ff ff       	call   a500 <ema_change_to_tcs>
    c4c0:	89 c3                	mov    %eax,%ebx
    c4c2:	48 8b 3d 47 e5 01 00 	mov    0x1e547(%rip),%rdi        # 2aa10 <mm_lock>
    c4c9:	e8 b2 95 ff ff       	call   5a80 <sgx_mm_mutex_unlock>
    c4ce:	66 90                	xchg   %ax,%ax
    c4d0:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    c4d5:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    c4dc:	00 00 
    c4de:	75 17                	jne    c4f7 <sgx_mm_modify_type+0xd7>
    c4e0:	48 83 c4 28          	add    $0x28,%rsp
    c4e4:	89 d8                	mov    %ebx,%eax
    c4e6:	5b                   	pop    %rbx
    c4e7:	5d                   	pop    %rbp
    c4e8:	c3                   	ret    
    c4e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c4f0:	bb 16 00 00 00       	mov    $0x16,%ebx
    c4f5:	eb d9                	jmp    c4d0 <sgx_mm_modify_type+0xb0>
    c4f7:	e8 04 46 00 00       	call   10b00 <__stack_chk_fail>
    c4fc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000c500 <mm_modify_permissions_internal>:
    c500:	f3 0f 1e fa          	endbr64 
    c504:	41 56                	push   %r14
    c506:	41 55                	push   %r13
    c508:	41 54                	push   %r12
    c50a:	41 bc 16 00 00 00    	mov    $0x16,%r12d
    c510:	55                   	push   %rbp
    c511:	53                   	push   %rbx
    c512:	48 83 ec 20          	sub    $0x20,%rsp
    c516:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c51d:	00 00 
    c51f:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    c524:	31 c0                	xor    %eax,%eax
    c526:	48 85 f6             	test   %rsi,%rsi
    c529:	0f 84 9b 00 00 00    	je     c5ca <mm_modify_permissions_internal+0xca>
    c52f:	48 89 f8             	mov    %rdi,%rax
    c532:	48 89 fd             	mov    %rdi,%rbp
    c535:	48 89 f3             	mov    %rsi,%rbx
    c538:	48 09 f0             	or     %rsi,%rax
    c53b:	a9 ff 0f 00 00       	test   $0xfff,%eax
    c540:	0f 85 84 00 00 00    	jne    c5ca <mm_modify_permissions_internal+0xca>
    c546:	89 d0                	mov    %edx,%eax
    c548:	41 89 d6             	mov    %edx,%r14d
    c54b:	83 e0 05             	and    $0x5,%eax
    c54e:	83 f8 04             	cmp    $0x4,%eax
    c551:	74 77                	je     c5ca <mm_modify_permissions_internal+0xca>
    c553:	48 8b 3d b6 e4 01 00 	mov    0x1e4b6(%rip),%rdi        # 2aa10 <mm_lock>
    c55a:	49 89 cd             	mov    %rcx,%r13
    c55d:	41 bc 0e 00 00 00    	mov    $0xe,%r12d
    c563:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    c56a:	00 00 
    c56c:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    c573:	00 00 
    c575:	e8 e6 94 ff ff       	call   5a60 <sgx_mm_mutex_lock>
    c57a:	85 c0                	test   %eax,%eax
    c57c:	75 4c                	jne    c5ca <mm_modify_permissions_internal+0xca>
    c57e:	48 01 eb             	add    %rbp,%rbx
    c581:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    c586:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    c58b:	48 89 ee             	mov    %rbp,%rsi
    c58e:	48 89 da             	mov    %rbx,%rdx
    c591:	4c 89 ef             	mov    %r13,%rdi
    c594:	41 bc 16 00 00 00    	mov    $0x16,%r12d
    c59a:	e8 71 d4 ff ff       	call   9a10 <search_ema_range>
    c59f:	85 c0                	test   %eax,%eax
    c5a1:	78 1b                	js     c5be <mm_modify_permissions_internal+0xbe>
    c5a3:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    c5a8:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    c5ad:	45 89 f0             	mov    %r14d,%r8d
    c5b0:	48 89 d9             	mov    %rbx,%rcx
    c5b3:	48 89 ea             	mov    %rbp,%rdx
    c5b6:	e8 d5 e5 ff ff       	call   ab90 <ema_modify_permissions_loop>
    c5bb:	41 89 c4             	mov    %eax,%r12d
    c5be:	48 8b 3d 4b e4 01 00 	mov    0x1e44b(%rip),%rdi        # 2aa10 <mm_lock>
    c5c5:	e8 b6 94 ff ff       	call   5a80 <sgx_mm_mutex_unlock>
    c5ca:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    c5cf:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    c5d6:	00 00 
    c5d8:	75 10                	jne    c5ea <mm_modify_permissions_internal+0xea>
    c5da:	48 83 c4 20          	add    $0x20,%rsp
    c5de:	44 89 e0             	mov    %r12d,%eax
    c5e1:	5b                   	pop    %rbx
    c5e2:	5d                   	pop    %rbp
    c5e3:	41 5c                	pop    %r12
    c5e5:	41 5d                	pop    %r13
    c5e7:	41 5e                	pop    %r14
    c5e9:	c3                   	ret    
    c5ea:	e8 11 45 00 00       	call   10b00 <__stack_chk_fail>
    c5ef:	90                   	nop

000000000000c5f0 <sgx_mm_modify_permissions>:
    c5f0:	f3 0f 1e fa          	endbr64 
    c5f4:	48 8d 0d 05 da 00 00 	lea    0xda05(%rip),%rcx        # 1a000 <g_user_ema_root>
    c5fb:	e9 00 ff ff ff       	jmp    c500 <mm_modify_permissions_internal>

000000000000c600 <sgx_mm_init>:
    c600:	f3 0f 1e fa          	endbr64 
    c604:	55                   	push   %rbp
    c605:	48 89 fd             	mov    %rdi,%rbp
    c608:	53                   	push   %rbx
    c609:	48 89 f3             	mov    %rsi,%rbx
    c60c:	48 83 ec 08          	sub    $0x8,%rsp
    c610:	e8 0b 94 ff ff       	call   5a20 <sgx_mm_mutex_create>
    c615:	48 89 05 f4 e3 01 00 	mov    %rax,0x1e3f4(%rip)        # 2aa10 <mm_lock>
    c61c:	48 85 c0             	test   %rax,%rax
    c61f:	74 2f                	je     c650 <sgx_mm_init+0x50>
    c621:	48 8d 3d 98 f4 ff ff 	lea    -0xb68(%rip),%rdi        # bac0 <sgx_mm_enclave_pfhandler>
    c628:	48 89 2d d9 e3 01 00 	mov    %rbp,0x1e3d9(%rip)        # 2aa08 <mm_user_base>
    c62f:	48 89 1d ca e3 01 00 	mov    %rbx,0x1e3ca(%rip)        # 2aa00 <mm_user_end>
    c636:	e8 85 93 ff ff       	call   59c0 <sgx_mm_register_pfhandler>
    c63b:	84 c0                	test   %al,%al
    c63d:	74 11                	je     c650 <sgx_mm_init+0x50>
    c63f:	48 83 c4 08          	add    $0x8,%rsp
    c643:	31 c0                	xor    %eax,%eax
    c645:	5b                   	pop    %rbx
    c646:	5d                   	pop    %rbp
    c647:	c3                   	ret    
    c648:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    c64f:	00 
    c650:	48 83 c4 08          	add    $0x8,%rsp
    c654:	b8 0e 00 00 00       	mov    $0xe,%eax
    c659:	5b                   	pop    %rbx
    c65a:	5d                   	pop    %rbp
    c65b:	c3                   	ret    
    c65c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000c660 <alloca>:
    c660:	f3 0f 1e fa          	endbr64 
    c664:	5a                   	pop    %rdx
    c665:	48 89 e1             	mov    %rsp,%rcx
    c668:	48 83 c7 0f          	add    $0xf,%rdi
    c66c:	48 83 e7 f0          	and    $0xfffffffffffffff0,%rdi
    c670:	48 29 fc             	sub    %rdi,%rsp
    c673:	48 89 e0             	mov    %rsp,%rax
    c676:	3e ff e2             	notrack jmp *%rdx
    c679:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000c680 <heap_init>:
    c680:	f3 0f 1e fa          	endbr64 
    c684:	48 89 f8             	mov    %rdi,%rax
    c687:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    c68d:	48 85 ff             	test   %rdi,%rdi
    c690:	75 0e                	jne    c6a0 <heap_init+0x20>
    c692:	44 89 c0             	mov    %r8d,%eax
    c695:	c3                   	ret    
    c696:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    c69d:	00 00 00 
    c6a0:	48 89 f7             	mov    %rsi,%rdi
    c6a3:	49 89 c1             	mov    %rax,%r9
    c6a6:	48 09 d7             	or     %rdx,%rdi
    c6a9:	41 81 e1 ff 0f 00 00 	and    $0xfff,%r9d
    c6b0:	81 e7 ff 0f 00 00    	and    $0xfff,%edi
    c6b6:	48 0b 3d 93 b7 00 00 	or     0xb793(%rip),%rdi        # 17e50 <heap_base>
    c6bd:	4c 09 cf             	or     %r9,%rdi
    c6c0:	75 d0                	jne    c692 <heap_init+0x12>
    c6c2:	45 31 c0             	xor    %r8d,%r8d
    c6c5:	48 89 05 84 b7 00 00 	mov    %rax,0xb784(%rip)        # 17e50 <heap_base>
    c6cc:	48 89 35 75 b7 00 00 	mov    %rsi,0xb775(%rip)        # 17e48 <heap_size>
    c6d3:	44 89 c0             	mov    %r8d,%eax
    c6d6:	48 89 15 5b b7 00 00 	mov    %rdx,0xb75b(%rip)        # 17e38 <heap_min_size>
    c6dd:	89 0d 5d b7 00 00    	mov    %ecx,0xb75d(%rip)        # 17e40 <is_edmm_supported>
    c6e3:	c3                   	ret    
    c6e4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    c6eb:	00 00 00 
    c6ee:	66 90                	xchg   %ax,%ax

000000000000c6f0 <sbrk>:
    c6f0:	f3 0f 1e fa          	endbr64 
    c6f4:	55                   	push   %rbp
    c6f5:	53                   	push   %rbx
    c6f6:	48 83 ec 08          	sub    $0x8,%rsp
    c6fa:	48 8b 05 4f b7 00 00 	mov    0xb74f(%rip),%rax        # 17e50 <heap_base>
    c701:	48 85 c0             	test   %rax,%rax
    c704:	0f 84 e6 00 00 00    	je     c7f0 <sbrk+0x100>
    c70a:	48 8b 1d 07 e3 01 00 	mov    0x1e307(%rip),%rbx        # 2aa18 <heap_used.0>
    c711:	48 85 ff             	test   %rdi,%rdi
    c714:	0f 88 86 00 00 00    	js     c7a0 <sbrk+0xb0>
    c71a:	48 89 fa             	mov    %rdi,%rdx
    c71d:	48 01 da             	add    %rbx,%rdx
    c720:	0f 82 ca 00 00 00    	jb     c7f0 <sbrk+0x100>
    c726:	48 39 15 1b b7 00 00 	cmp    %rdx,0xb71b(%rip)        # 17e48 <heap_size>
    c72d:	0f 82 bd 00 00 00    	jb     c7f0 <sbrk+0x100>
    c733:	48 8d 2c 18          	lea    (%rax,%rbx,1),%rbp
    c737:	48 85 ff             	test   %rdi,%rdi
    c73a:	74 53                	je     c78f <sbrk+0x9f>
    c73c:	48 8b 0d dd e2 01 00 	mov    0x1e2dd(%rip),%rcx        # 2aa20 <g_peak_heap_used>
    c743:	48 89 15 ce e2 01 00 	mov    %rdx,0x1e2ce(%rip)        # 2aa18 <heap_used.0>
    c74a:	48 39 d1             	cmp    %rdx,%rcx
    c74d:	48 0f 42 ca          	cmovb  %rdx,%rcx
    c751:	48 89 0d c8 e2 01 00 	mov    %rcx,0x1e2c8(%rip)        # 2aa20 <g_peak_heap_used>
    c758:	8b 0d e2 b6 00 00    	mov    0xb6e2(%rip),%ecx        # 17e40 <is_edmm_supported>
    c75e:	85 c9                	test   %ecx,%ecx
    c760:	74 2d                	je     c78f <sbrk+0x9f>
    c762:	48 8b 0d cf b6 00 00 	mov    0xb6cf(%rip),%rcx        # 17e38 <heap_min_size>
    c769:	48 39 d1             	cmp    %rdx,%rcx
    c76c:	73 21                	jae    c78f <sbrk+0x9f>
    c76e:	49 89 e8             	mov    %rbp,%r8
    c771:	48 39 d9             	cmp    %rbx,%rcx
    c774:	72 0a                	jb     c780 <sbrk+0x90>
    c776:	48 29 ca             	sub    %rcx,%rdx
    c779:	4c 8d 04 08          	lea    (%rax,%rcx,1),%r8
    c77d:	48 89 d7             	mov    %rdx,%rdi
    c780:	48 89 fe             	mov    %rdi,%rsi
    c783:	4c 89 c7             	mov    %r8,%rdi
    c786:	e8 d5 f2 ff ff       	call   ba60 <mm_commit>
    c78b:	85 c0                	test   %eax,%eax
    c78d:	75 56                	jne    c7e5 <sbrk+0xf5>
    c78f:	48 83 c4 08          	add    $0x8,%rsp
    c793:	48 89 e8             	mov    %rbp,%rax
    c796:	5b                   	pop    %rbx
    c797:	5d                   	pop    %rbp
    c798:	c3                   	ret    
    c799:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c7a0:	48 89 fe             	mov    %rdi,%rsi
    c7a3:	48 f7 de             	neg    %rsi
    c7a6:	48 39 f3             	cmp    %rsi,%rbx
    c7a9:	72 45                	jb     c7f0 <sbrk+0x100>
    c7ab:	44 8b 05 8e b6 00 00 	mov    0xb68e(%rip),%r8d        # 17e40 <is_edmm_supported>
    c7b2:	48 01 df             	add    %rbx,%rdi
    c7b5:	48 89 3d 5c e2 01 00 	mov    %rdi,0x1e25c(%rip)        # 2aa18 <heap_used.0>
    c7bc:	48 8d 2c 38          	lea    (%rax,%rdi,1),%rbp
    c7c0:	45 85 c0             	test   %r8d,%r8d
    c7c3:	74 ca                	je     c78f <sbrk+0x9f>
    c7c5:	48 8b 15 6c b6 00 00 	mov    0xb66c(%rip),%rdx        # 17e38 <heap_min_size>
    c7cc:	48 39 da             	cmp    %rbx,%rdx
    c7cf:	73 be                	jae    c78f <sbrk+0x9f>
    c7d1:	48 89 e9             	mov    %rbp,%rcx
    c7d4:	48 39 fa             	cmp    %rdi,%rdx
    c7d7:	73 27                	jae    c800 <sbrk+0x110>
    c7d9:	48 89 cf             	mov    %rcx,%rdi
    c7dc:	e8 8f f2 ff ff       	call   ba70 <mm_uncommit>
    c7e1:	85 c0                	test   %eax,%eax
    c7e3:	74 aa                	je     c78f <sbrk+0x9f>
    c7e5:	48 89 1d 2c e2 01 00 	mov    %rbx,0x1e22c(%rip)        # 2aa18 <heap_used.0>
    c7ec:	0f 1f 40 00          	nopl   0x0(%rax)
    c7f0:	48 c7 c5 ff ff ff ff 	mov    $0xffffffffffffffff,%rbp
    c7f7:	eb 96                	jmp    c78f <sbrk+0x9f>
    c7f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c800:	48 89 de             	mov    %rbx,%rsi
    c803:	48 8d 0c 10          	lea    (%rax,%rdx,1),%rcx
    c807:	48 29 d6             	sub    %rdx,%rsi
    c80a:	eb cd                	jmp    c7d9 <sbrk+0xe9>
    c80c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000c810 <sgx_spin_lock>:
    c810:	f3 0f 1e fa          	endbr64 
    c814:	48 83 ec 18          	sub    $0x18,%rsp
    c818:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c81f:	00 00 
    c821:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    c826:	b8 01 00 00 00       	mov    $0x1,%eax
    c82b:	f0 87 07             	lock xchg %eax,(%rdi)
    c82e:	89 44 24 04          	mov    %eax,0x4(%rsp)
    c832:	8b 54 24 04          	mov    0x4(%rsp),%edx
    c836:	85 d2                	test   %edx,%edx
    c838:	74 48                	je     c882 <sgx_spin_lock+0x72>
    c83a:	48 89 f9             	mov    %rdi,%rcx
    c83d:	be 01 00 00 00       	mov    $0x1,%esi
    c842:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    c848:	ba 02 00 00 00       	mov    $0x2,%edx
    c84d:	0f 1f 00             	nopl   (%rax)
    c850:	85 d2                	test   %edx,%edx
    c852:	7e 0d                	jle    c861 <sgx_spin_lock+0x51>
    c854:	31 c0                	xor    %eax,%eax
    c856:	f3 90                	pause  
    c858:	f3 90                	pause  
    c85a:	83 c0 02             	add    $0x2,%eax
    c85d:	39 c2                	cmp    %eax,%edx
    c85f:	75 f5                	jne    c856 <sgx_spin_lock+0x46>
    c861:	b8 00 04 00 00       	mov    $0x400,%eax
    c866:	01 d2                	add    %edx,%edx
    c868:	39 c2                	cmp    %eax,%edx
    c86a:	0f 4f d0             	cmovg  %eax,%edx
    c86d:	8b 01                	mov    (%rcx),%eax
    c86f:	85 c0                	test   %eax,%eax
    c871:	75 dd                	jne    c850 <sgx_spin_lock+0x40>
    c873:	f0 87 31             	lock xchg %esi,(%rcx)
    c876:	89 74 24 04          	mov    %esi,0x4(%rsp)
    c87a:	8b 44 24 04          	mov    0x4(%rsp),%eax
    c87e:	85 c0                	test   %eax,%eax
    c880:	75 c6                	jne    c848 <sgx_spin_lock+0x38>
    c882:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    c887:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    c88e:	00 00 
    c890:	75 07                	jne    c899 <sgx_spin_lock+0x89>
    c892:	31 c0                	xor    %eax,%eax
    c894:	48 83 c4 18          	add    $0x18,%rsp
    c898:	c3                   	ret    
    c899:	e8 62 42 00 00       	call   10b00 <__stack_chk_fail>
    c89e:	66 90                	xchg   %ax,%ax

000000000000c8a0 <sgx_spin_unlock>:
    c8a0:	f3 0f 1e fa          	endbr64 
    c8a4:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
    c8aa:	31 c0                	xor    %eax,%eax
    c8ac:	c3                   	ret    
    c8ad:	0f 1f 00             	nopl   (%rax)

000000000000c8b0 <dispose_chunk>:
    c8b0:	55                   	push   %rbp
    c8b1:	48 89 f0             	mov    %rsi,%rax
    c8b4:	48 01 d6             	add    %rdx,%rsi
    c8b7:	53                   	push   %rbx
    c8b8:	48 83 ec 08          	sub    $0x8,%rsp
    c8bc:	48 8b 48 08          	mov    0x8(%rax),%rcx
    c8c0:	f6 c1 01             	test   $0x1,%cl
    c8c3:	0f 85 f7 00 00 00    	jne    c9c0 <dispose_chunk+0x110>
    c8c9:	83 e1 03             	and    $0x3,%ecx
    c8cc:	4c 8b 08             	mov    (%rax),%r9
    c8cf:	0f 84 64 01 00 00    	je     ca39 <dispose_chunk+0x189>
    c8d5:	4c 8b 47 18          	mov    0x18(%rdi),%r8
    c8d9:	4c 29 c8             	sub    %r9,%rax
    c8dc:	4c 01 ca             	add    %r9,%rdx
    c8df:	4c 39 c0             	cmp    %r8,%rax
    c8e2:	0f 82 38 03 00 00    	jb     cc20 <dispose_chunk+0x370>
    c8e8:	48 39 47 20          	cmp    %rax,0x20(%rdi)
    c8ec:	0f 84 2e 04 00 00    	je     cd20 <dispose_chunk+0x470>
    c8f2:	4c 89 c9             	mov    %r9,%rcx
    c8f5:	48 c1 e9 03          	shr    $0x3,%rcx
    c8f9:	49 81 f9 ff 00 00 00 	cmp    $0xff,%r9
    c900:	0f 86 4a 03 00 00    	jbe    cc50 <dispose_chunk+0x3a0>
    c906:	4c 8b 50 18          	mov    0x18(%rax),%r10
    c90a:	48 8b 58 30          	mov    0x30(%rax),%rbx
    c90e:	49 39 c2             	cmp    %rax,%r10
    c911:	0f 84 89 05 00 00    	je     cea0 <dispose_chunk+0x5f0>
    c917:	48 8b 48 10          	mov    0x10(%rax),%rcx
    c91b:	4c 39 c1             	cmp    %r8,%rcx
    c91e:	0f 82 fc 02 00 00    	jb     cc20 <dispose_chunk+0x370>
    c924:	48 39 41 18          	cmp    %rax,0x18(%rcx)
    c928:	0f 85 f2 02 00 00    	jne    cc20 <dispose_chunk+0x370>
    c92e:	49 39 42 10          	cmp    %rax,0x10(%r10)
    c932:	0f 85 e8 02 00 00    	jne    cc20 <dispose_chunk+0x370>
    c938:	4c 89 51 18          	mov    %r10,0x18(%rcx)
    c93c:	49 89 4a 10          	mov    %rcx,0x10(%r10)
    c940:	48 85 db             	test   %rbx,%rbx
    c943:	74 7f                	je     c9c4 <dispose_chunk+0x114>
    c945:	44 8b 48 38          	mov    0x38(%rax),%r9d
    c949:	4c 89 c9             	mov    %r9,%rcx
    c94c:	4d 8d 59 4a          	lea    0x4a(%r9),%r11
    c950:	4a 39 84 cf 58 02 00 	cmp    %rax,0x258(%rdi,%r9,8)
    c957:	00 
    c958:	0f 84 32 06 00 00    	je     cf90 <dispose_chunk+0x6e0>
    c95e:	4c 39 c3             	cmp    %r8,%rbx
    c961:	0f 82 b9 02 00 00    	jb     cc20 <dispose_chunk+0x370>
    c967:	48 39 43 20          	cmp    %rax,0x20(%rbx)
    c96b:	0f 84 9c 06 00 00    	je     d00d <dispose_chunk+0x75d>
    c971:	4c 89 53 28          	mov    %r10,0x28(%rbx)
    c975:	4d 85 d2             	test   %r10,%r10
    c978:	74 4a                	je     c9c4 <dispose_chunk+0x114>
    c97a:	4d 39 c2             	cmp    %r8,%r10
    c97d:	0f 82 9d 02 00 00    	jb     cc20 <dispose_chunk+0x370>
    c983:	48 8b 48 20          	mov    0x20(%rax),%rcx
    c987:	49 89 5a 30          	mov    %rbx,0x30(%r10)
    c98b:	48 85 c9             	test   %rcx,%rcx
    c98e:	74 11                	je     c9a1 <dispose_chunk+0xf1>
    c990:	4c 39 c1             	cmp    %r8,%rcx
    c993:	0f 82 87 02 00 00    	jb     cc20 <dispose_chunk+0x370>
    c999:	49 89 4a 20          	mov    %rcx,0x20(%r10)
    c99d:	4c 89 51 30          	mov    %r10,0x30(%rcx)
    c9a1:	48 8b 48 28          	mov    0x28(%rax),%rcx
    c9a5:	48 85 c9             	test   %rcx,%rcx
    c9a8:	74 1a                	je     c9c4 <dispose_chunk+0x114>
    c9aa:	4c 39 c1             	cmp    %r8,%rcx
    c9ad:	0f 82 6d 02 00 00    	jb     cc20 <dispose_chunk+0x370>
    c9b3:	49 89 4a 28          	mov    %rcx,0x28(%r10)
    c9b7:	4c 89 51 30          	mov    %r10,0x30(%rcx)
    c9bb:	eb 07                	jmp    c9c4 <dispose_chunk+0x114>
    c9bd:	0f 1f 00             	nopl   (%rax)
    c9c0:	4c 8b 47 18          	mov    0x18(%rdi),%r8
    c9c4:	4c 39 c6             	cmp    %r8,%rsi
    c9c7:	0f 82 53 02 00 00    	jb     cc20 <dispose_chunk+0x370>
    c9cd:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    c9d1:	f6 c1 02             	test   $0x2,%cl
    c9d4:	74 6a                	je     ca40 <dispose_chunk+0x190>
    c9d6:	48 83 e1 fe          	and    $0xfffffffffffffffe,%rcx
    c9da:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
    c9de:	48 89 d1             	mov    %rdx,%rcx
    c9e1:	48 83 c9 01          	or     $0x1,%rcx
    c9e5:	48 89 48 08          	mov    %rcx,0x8(%rax)
    c9e9:	48 89 14 10          	mov    %rdx,(%rax,%rdx,1)
    c9ed:	48 89 d1             	mov    %rdx,%rcx
    c9f0:	48 c1 e9 03          	shr    $0x3,%rcx
    c9f4:	48 81 fa ff 00 00 00 	cmp    $0xff,%rdx
    c9fb:	0f 87 57 01 00 00    	ja     cb58 <dispose_chunk+0x2a8>
    ca01:	8d 54 09 09          	lea    0x9(%rcx,%rcx,1),%edx
    ca05:	44 8b 0f             	mov    (%rdi),%r9d
    ca08:	48 8d 34 d7          	lea    (%rdi,%rdx,8),%rsi
    ca0c:	ba 01 00 00 00       	mov    $0x1,%edx
    ca11:	d3 e2                	shl    %cl,%edx
    ca13:	41 85 d1             	test   %edx,%r9d
    ca16:	0f 84 24 02 00 00    	je     cc40 <dispose_chunk+0x390>
    ca1c:	48 8b 56 10          	mov    0x10(%rsi),%rdx
    ca20:	4c 39 c2             	cmp    %r8,%rdx
    ca23:	0f 82 f7 01 00 00    	jb     cc20 <dispose_chunk+0x370>
    ca29:	48 89 46 10          	mov    %rax,0x10(%rsi)
    ca2d:	48 89 42 18          	mov    %rax,0x18(%rdx)
    ca31:	48 89 50 10          	mov    %rdx,0x10(%rax)
    ca35:	48 89 70 18          	mov    %rsi,0x18(%rax)
    ca39:	48 83 c4 08          	add    $0x8,%rsp
    ca3d:	5b                   	pop    %rbx
    ca3e:	5d                   	pop    %rbp
    ca3f:	c3                   	ret    
    ca40:	48 8b 5f 20          	mov    0x20(%rdi),%rbx
    ca44:	48 39 77 28          	cmp    %rsi,0x28(%rdi)
    ca48:	0f 84 22 03 00 00    	je     cd70 <dispose_chunk+0x4c0>
    ca4e:	48 39 f3             	cmp    %rsi,%rbx
    ca51:	0f 84 89 03 00 00    	je     cde0 <dispose_chunk+0x530>
    ca57:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    ca5b:	49 89 cb             	mov    %rcx,%r11
    ca5e:	48 01 ca             	add    %rcx,%rdx
    ca61:	49 c1 eb 03          	shr    $0x3,%r11
    ca65:	48 81 f9 f8 00 00 00 	cmp    $0xf8,%rcx
    ca6c:	0f 86 7e 01 00 00    	jbe    cbf0 <dispose_chunk+0x340>
    ca72:	4c 8b 56 18          	mov    0x18(%rsi),%r10
    ca76:	48 8b 6e 30          	mov    0x30(%rsi),%rbp
    ca7a:	49 39 f2             	cmp    %rsi,%r10
    ca7d:	0f 84 7d 03 00 00    	je     ce00 <dispose_chunk+0x550>
    ca83:	48 8b 4e 10          	mov    0x10(%rsi),%rcx
    ca87:	4c 39 c1             	cmp    %r8,%rcx
    ca8a:	0f 82 90 01 00 00    	jb     cc20 <dispose_chunk+0x370>
    ca90:	48 39 71 18          	cmp    %rsi,0x18(%rcx)
    ca94:	0f 85 86 01 00 00    	jne    cc20 <dispose_chunk+0x370>
    ca9a:	49 39 72 10          	cmp    %rsi,0x10(%r10)
    ca9e:	0f 85 7c 01 00 00    	jne    cc20 <dispose_chunk+0x370>
    caa4:	4c 89 51 18          	mov    %r10,0x18(%rcx)
    caa8:	49 89 4a 10          	mov    %rcx,0x10(%r10)
    caac:	48 85 ed             	test   %rbp,%rbp
    caaf:	74 7f                	je     cb30 <dispose_chunk+0x280>
    cab1:	44 8b 4e 38          	mov    0x38(%rsi),%r9d
    cab5:	4c 89 c9             	mov    %r9,%rcx
    cab8:	4d 8d 59 4a          	lea    0x4a(%r9),%r11
    cabc:	4a 39 b4 cf 58 02 00 	cmp    %rsi,0x258(%rdi,%r9,8)
    cac3:	00 
    cac4:	0f 84 76 04 00 00    	je     cf40 <dispose_chunk+0x690>
    caca:	4c 39 c5             	cmp    %r8,%rbp
    cacd:	0f 82 4d 01 00 00    	jb     cc20 <dispose_chunk+0x370>
    cad3:	48 39 75 20          	cmp    %rsi,0x20(%rbp)
    cad7:	0f 84 27 05 00 00    	je     d004 <dispose_chunk+0x754>
    cadd:	4c 89 55 28          	mov    %r10,0x28(%rbp)
    cae1:	4d 85 d2             	test   %r10,%r10
    cae4:	74 4a                	je     cb30 <dispose_chunk+0x280>
    cae6:	4d 39 c2             	cmp    %r8,%r10
    cae9:	0f 82 31 01 00 00    	jb     cc20 <dispose_chunk+0x370>
    caef:	48 8b 4e 20          	mov    0x20(%rsi),%rcx
    caf3:	49 89 6a 30          	mov    %rbp,0x30(%r10)
    caf7:	48 85 c9             	test   %rcx,%rcx
    cafa:	74 11                	je     cb0d <dispose_chunk+0x25d>
    cafc:	4c 39 c1             	cmp    %r8,%rcx
    caff:	0f 82 1b 01 00 00    	jb     cc20 <dispose_chunk+0x370>
    cb05:	49 89 4a 20          	mov    %rcx,0x20(%r10)
    cb09:	4c 89 51 30          	mov    %r10,0x30(%rcx)
    cb0d:	48 8b 4e 28          	mov    0x28(%rsi),%rcx
    cb11:	48 85 c9             	test   %rcx,%rcx
    cb14:	74 1a                	je     cb30 <dispose_chunk+0x280>
    cb16:	4c 39 c1             	cmp    %r8,%rcx
    cb19:	0f 82 01 01 00 00    	jb     cc20 <dispose_chunk+0x370>
    cb1f:	49 89 4a 28          	mov    %rcx,0x28(%r10)
    cb23:	4c 89 51 30          	mov    %r10,0x30(%rcx)
    cb27:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    cb2e:	00 00 
    cb30:	48 89 d1             	mov    %rdx,%rcx
    cb33:	48 83 c9 01          	or     $0x1,%rcx
    cb37:	48 89 48 08          	mov    %rcx,0x8(%rax)
    cb3b:	48 89 14 10          	mov    %rdx,(%rax,%rdx,1)
    cb3f:	48 39 d8             	cmp    %rbx,%rax
    cb42:	0f 85 a5 fe ff ff    	jne    c9ed <dispose_chunk+0x13d>
    cb48:	48 89 57 08          	mov    %rdx,0x8(%rdi)
    cb4c:	e9 e8 fe ff ff       	jmp    ca39 <dispose_chunk+0x189>
    cb51:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    cb58:	48 89 d6             	mov    %rdx,%rsi
    cb5b:	48 c1 ee 08          	shr    $0x8,%rsi
    cb5f:	89 f1                	mov    %esi,%ecx
    cb61:	85 f6                	test   %esi,%esi
    cb63:	0f 84 bf 00 00 00    	je     cc28 <dispose_chunk+0x378>
    cb69:	81 fe ff ff 00 00    	cmp    $0xffff,%esi
    cb6f:	0f 87 e3 01 00 00    	ja     cd58 <dispose_chunk+0x4a8>
    cb75:	0f bd f1             	bsr    %ecx,%esi
    cb78:	b9 26 00 00 00       	mov    $0x26,%ecx
    cb7d:	48 89 d3             	mov    %rdx,%rbx
    cb80:	41 b9 1f 00 00 00    	mov    $0x1f,%r9d
    cb86:	83 f6 1f             	xor    $0x1f,%esi
    cb89:	29 f1                	sub    %esi,%ecx
    cb8b:	41 29 f1             	sub    %esi,%r9d
    cb8e:	be 01 00 00 00       	mov    $0x1,%esi
    cb93:	48 d3 eb             	shr    %cl,%rbx
    cb96:	48 89 d9             	mov    %rbx,%rcx
    cb99:	83 e1 01             	and    $0x1,%ecx
    cb9c:	42 8d 0c 49          	lea    (%rcx,%r9,2),%ecx
    cba0:	44 8d 49 4b          	lea    0x4b(%rcx),%r9d
    cba4:	d3 e6                	shl    %cl,%esi
    cba6:	49 c1 e1 03          	shl    $0x3,%r9
    cbaa:	44 8b 57 04          	mov    0x4(%rdi),%r10d
    cbae:	66 48 0f 6e c8       	movq   %rax,%xmm1
    cbb3:	66 0f ef c0          	pxor   %xmm0,%xmm0
    cbb7:	89 48 38             	mov    %ecx,0x38(%rax)
    cbba:	66 0f 6c c9          	punpcklqdq %xmm1,%xmm1
    cbbe:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    cbc2:	44 85 d6             	test   %r10d,%esi
    cbc5:	0f 85 c5 00 00 00    	jne    cc90 <dispose_chunk+0x3e0>
    cbcb:	44 09 d6             	or     %r10d,%esi
    cbce:	49 01 f9             	add    %rdi,%r9
    cbd1:	89 77 04             	mov    %esi,0x4(%rdi)
    cbd4:	48 89 84 cf 58 02 00 	mov    %rax,0x258(%rdi,%rcx,8)
    cbdb:	00 
    cbdc:	4c 89 48 30          	mov    %r9,0x30(%rax)
    cbe0:	0f 11 48 10          	movups %xmm1,0x10(%rax)
    cbe4:	48 83 c4 08          	add    $0x8,%rsp
    cbe8:	5b                   	pop    %rbx
    cbe9:	5d                   	pop    %rbp
    cbea:	c3                   	ret    
    cbeb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    cbf0:	43 8d 4c 1b 09       	lea    0x9(%r11,%r11,1),%ecx
    cbf5:	4c 8b 4e 10          	mov    0x10(%rsi),%r9
    cbf9:	4c 8b 56 18          	mov    0x18(%rsi),%r10
    cbfd:	48 8d 0c cf          	lea    (%rdi,%rcx,8),%rcx
    cc01:	4c 39 c9             	cmp    %r9,%rcx
    cc04:	0f 85 53 03 00 00    	jne    cf5d <dispose_chunk+0x6ad>
    cc0a:	4d 39 d1             	cmp    %r10,%r9
    cc0d:	0f 84 75 02 00 00    	je     ce88 <dispose_chunk+0x5d8>
    cc13:	4d 39 c2             	cmp    %r8,%r10
    cc16:	0f 83 aa 01 00 00    	jae    cdc6 <dispose_chunk+0x516>
    cc1c:	0f 1f 40 00          	nopl   0x0(%rax)
    cc20:	e8 12 59 00 00       	call   12537 <abort>
    cc25:	0f 1f 00             	nopl   (%rax)
    cc28:	be 01 00 00 00       	mov    $0x1,%esi
    cc2d:	41 b9 58 02 00 00    	mov    $0x258,%r9d
    cc33:	e9 72 ff ff ff       	jmp    cbaa <dispose_chunk+0x2fa>
    cc38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    cc3f:	00 
    cc40:	41 09 d1             	or     %edx,%r9d
    cc43:	48 89 f2             	mov    %rsi,%rdx
    cc46:	44 89 0f             	mov    %r9d,(%rdi)
    cc49:	e9 db fd ff ff       	jmp    ca29 <dispose_chunk+0x179>
    cc4e:	66 90                	xchg   %ax,%ax
    cc50:	44 8d 5c 09 09       	lea    0x9(%rcx,%rcx,1),%r11d
    cc55:	4c 8b 48 10          	mov    0x10(%rax),%r9
    cc59:	4c 8b 50 18          	mov    0x18(%rax),%r10
    cc5d:	4e 8d 1c df          	lea    (%rdi,%r11,8),%r11
    cc61:	4d 39 cb             	cmp    %r9,%r11
    cc64:	0f 85 46 03 00 00    	jne    cfb0 <dispose_chunk+0x700>
    cc6a:	4d 39 d1             	cmp    %r10,%r9
    cc6d:	0f 84 b5 02 00 00    	je     cf28 <dispose_chunk+0x678>
    cc73:	4d 39 c2             	cmp    %r8,%r10
    cc76:	72 a8                	jb     cc20 <dispose_chunk+0x370>
    cc78:	49 39 42 10          	cmp    %rax,0x10(%r10)
    cc7c:	75 a2                	jne    cc20 <dispose_chunk+0x370>
    cc7e:	4d 89 51 18          	mov    %r10,0x18(%r9)
    cc82:	4d 89 4a 10          	mov    %r9,0x10(%r10)
    cc86:	e9 39 fd ff ff       	jmp    c9c4 <dispose_chunk+0x114>
    cc8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    cc90:	89 ce                	mov    %ecx,%esi
    cc92:	48 8b b4 f7 58 02 00 	mov    0x258(%rdi,%rsi,8),%rsi
    cc99:	00 
    cc9a:	48 89 d7             	mov    %rdx,%rdi
    cc9d:	83 f9 1f             	cmp    $0x1f,%ecx
    cca0:	74 34                	je     ccd6 <dispose_chunk+0x426>
    cca2:	89 cf                	mov    %ecx,%edi
    cca4:	b9 39 00 00 00       	mov    $0x39,%ecx
    cca9:	d1 ef                	shr    %edi
    ccab:	29 f9                	sub    %edi,%ecx
    ccad:	48 89 d7             	mov    %rdx,%rdi
    ccb0:	48 d3 e7             	shl    %cl,%rdi
    ccb3:	eb 21                	jmp    ccd6 <dispose_chunk+0x426>
    ccb5:	0f 1f 00             	nopl   (%rax)
    ccb8:	48 89 f9             	mov    %rdi,%rcx
    ccbb:	48 01 ff             	add    %rdi,%rdi
    ccbe:	48 c1 e9 3f          	shr    $0x3f,%rcx
    ccc2:	48 83 c1 04          	add    $0x4,%rcx
    ccc6:	4c 8b 0c ce          	mov    (%rsi,%rcx,8),%r9
    ccca:	4d 85 c9             	test   %r9,%r9
    cccd:	0f 84 d5 00 00 00    	je     cda8 <dispose_chunk+0x4f8>
    ccd3:	4c 89 ce             	mov    %r9,%rsi
    ccd6:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    ccda:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    ccde:	48 39 d1             	cmp    %rdx,%rcx
    cce1:	75 d5                	jne    ccb8 <dispose_chunk+0x408>
    cce3:	48 8b 56 10          	mov    0x10(%rsi),%rdx
    cce7:	66 48 0f 6e d6       	movq   %rsi,%xmm2
    ccec:	66 48 0f 6e c2       	movq   %rdx,%xmm0
    ccf1:	66 0f 6c c2          	punpcklqdq %xmm2,%xmm0
    ccf5:	4c 39 c6             	cmp    %r8,%rsi
    ccf8:	0f 82 22 ff ff ff    	jb     cc20 <dispose_chunk+0x370>
    ccfe:	4c 39 c2             	cmp    %r8,%rdx
    cd01:	0f 82 19 ff ff ff    	jb     cc20 <dispose_chunk+0x370>
    cd07:	48 89 42 18          	mov    %rax,0x18(%rdx)
    cd0b:	48 89 46 10          	mov    %rax,0x10(%rsi)
    cd0f:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
    cd16:	00 
    cd17:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    cd1b:	e9 19 fd ff ff       	jmp    ca39 <dispose_chunk+0x189>
    cd20:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    cd24:	49 89 c9             	mov    %rcx,%r9
    cd27:	49 f7 d1             	not    %r9
    cd2a:	41 83 e1 03          	and    $0x3,%r9d
    cd2e:	0f 85 90 fc ff ff    	jne    c9c4 <dispose_chunk+0x114>
    cd34:	48 83 e1 fe          	and    $0xfffffffffffffffe,%rcx
    cd38:	48 89 57 08          	mov    %rdx,0x8(%rdi)
    cd3c:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
    cd40:	48 89 d1             	mov    %rdx,%rcx
    cd43:	48 83 c9 01          	or     $0x1,%rcx
    cd47:	48 89 48 08          	mov    %rcx,0x8(%rax)
    cd4b:	48 89 16             	mov    %rdx,(%rsi)
    cd4e:	e9 e6 fc ff ff       	jmp    ca39 <dispose_chunk+0x189>
    cd53:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    cd58:	be 00 00 00 80       	mov    $0x80000000,%esi
    cd5d:	41 b9 50 03 00 00    	mov    $0x350,%r9d
    cd63:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    cd68:	e9 3d fe ff ff       	jmp    cbaa <dispose_chunk+0x2fa>
    cd6d:	0f 1f 00             	nopl   (%rax)
    cd70:	48 03 57 10          	add    0x10(%rdi),%rdx
    cd74:	48 89 47 28          	mov    %rax,0x28(%rdi)
    cd78:	48 89 57 10          	mov    %rdx,0x10(%rdi)
    cd7c:	48 83 ca 01          	or     $0x1,%rdx
    cd80:	48 89 50 08          	mov    %rdx,0x8(%rax)
    cd84:	48 39 d8             	cmp    %rbx,%rax
    cd87:	0f 85 ac fc ff ff    	jne    ca39 <dispose_chunk+0x189>
    cd8d:	48 c7 47 20 00 00 00 	movq   $0x0,0x20(%rdi)
    cd94:	00 
    cd95:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
    cd9c:	00 
    cd9d:	e9 97 fc ff ff       	jmp    ca39 <dispose_chunk+0x189>
    cda2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    cda8:	48 8d 14 ce          	lea    (%rsi,%rcx,8),%rdx
    cdac:	4c 39 c2             	cmp    %r8,%rdx
    cdaf:	0f 82 6b fe ff ff    	jb     cc20 <dispose_chunk+0x370>
    cdb5:	48 89 04 ce          	mov    %rax,(%rsi,%rcx,8)
    cdb9:	48 89 70 30          	mov    %rsi,0x30(%rax)
    cdbd:	0f 11 48 10          	movups %xmm1,0x10(%rax)
    cdc1:	e9 73 fc ff ff       	jmp    ca39 <dispose_chunk+0x189>
    cdc6:	49 39 72 10          	cmp    %rsi,0x10(%r10)
    cdca:	0f 85 50 fe ff ff    	jne    cc20 <dispose_chunk+0x370>
    cdd0:	4d 89 51 18          	mov    %r10,0x18(%r9)
    cdd4:	4d 89 4a 10          	mov    %r9,0x10(%r10)
    cdd8:	e9 53 fd ff ff       	jmp    cb30 <dispose_chunk+0x280>
    cddd:	0f 1f 00             	nopl   (%rax)
    cde0:	48 03 57 08          	add    0x8(%rdi),%rdx
    cde4:	48 89 47 20          	mov    %rax,0x20(%rdi)
    cde8:	48 89 d1             	mov    %rdx,%rcx
    cdeb:	48 89 57 08          	mov    %rdx,0x8(%rdi)
    cdef:	48 83 c9 01          	or     $0x1,%rcx
    cdf3:	48 89 48 08          	mov    %rcx,0x8(%rax)
    cdf7:	48 89 14 10          	mov    %rdx,(%rax,%rdx,1)
    cdfb:	e9 39 fc ff ff       	jmp    ca39 <dispose_chunk+0x189>
    ce00:	48 8b 4e 28          	mov    0x28(%rsi),%rcx
    ce04:	4c 8d 4e 28          	lea    0x28(%rsi),%r9
    ce08:	48 85 c9             	test   %rcx,%rcx
    ce0b:	0f 84 cf 01 00 00    	je     cfe0 <dispose_chunk+0x730>
    ce11:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    ce18:	4d 89 cb             	mov    %r9,%r11
    ce1b:	49 89 ca             	mov    %rcx,%r10
    ce1e:	4c 8d 49 28          	lea    0x28(%rcx),%r9
    ce22:	48 8b 49 28          	mov    0x28(%rcx),%rcx
    ce26:	48 85 c9             	test   %rcx,%rcx
    ce29:	75 ed                	jne    ce18 <dispose_chunk+0x568>
    ce2b:	49 8b 4a 20          	mov    0x20(%r10),%rcx
    ce2f:	4d 8d 4a 20          	lea    0x20(%r10),%r9
    ce33:	48 85 c9             	test   %rcx,%rcx
    ce36:	75 e0                	jne    ce18 <dispose_chunk+0x568>
    ce38:	4d 39 c3             	cmp    %r8,%r11
    ce3b:	0f 82 df fd ff ff    	jb     cc20 <dispose_chunk+0x370>
    ce41:	49 c7 03 00 00 00 00 	movq   $0x0,(%r11)
    ce48:	48 85 ed             	test   %rbp,%rbp
    ce4b:	0f 84 df fc ff ff    	je     cb30 <dispose_chunk+0x280>
    ce51:	8b 4e 38             	mov    0x38(%rsi),%ecx
    ce54:	4c 8d 49 4a          	lea    0x4a(%rcx),%r9
    ce58:	48 39 b4 cf 58 02 00 	cmp    %rsi,0x258(%rdi,%rcx,8)
    ce5f:	00 
    ce60:	0f 84 b0 01 00 00    	je     d016 <dispose_chunk+0x766>
    ce66:	4c 39 c5             	cmp    %r8,%rbp
    ce69:	0f 82 b1 fd ff ff    	jb     cc20 <dispose_chunk+0x370>
    ce6f:	48 39 75 20          	cmp    %rsi,0x20(%rbp)
    ce73:	0f 84 b1 01 00 00    	je     d02a <dispose_chunk+0x77a>
    ce79:	4c 89 55 28          	mov    %r10,0x28(%rbp)
    ce7d:	e9 64 fc ff ff       	jmp    cae6 <dispose_chunk+0x236>
    ce82:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    ce88:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    ce8d:	44 89 d9             	mov    %r11d,%ecx
    ce90:	d3 c6                	rol    %cl,%esi
    ce92:	21 37                	and    %esi,(%rdi)
    ce94:	e9 97 fc ff ff       	jmp    cb30 <dispose_chunk+0x280>
    ce99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    cea0:	48 8b 48 28          	mov    0x28(%rax),%rcx
    cea4:	4c 8d 48 28          	lea    0x28(%rax),%r9
    cea8:	48 85 c9             	test   %rcx,%rcx
    ceab:	0f 84 41 01 00 00    	je     cff2 <dispose_chunk+0x742>
    ceb1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    ceb8:	4d 89 cb             	mov    %r9,%r11
    cebb:	49 89 ca             	mov    %rcx,%r10
    cebe:	4c 8d 49 28          	lea    0x28(%rcx),%r9
    cec2:	48 8b 49 28          	mov    0x28(%rcx),%rcx
    cec6:	48 85 c9             	test   %rcx,%rcx
    cec9:	75 ed                	jne    ceb8 <dispose_chunk+0x608>
    cecb:	49 8b 4a 20          	mov    0x20(%r10),%rcx
    cecf:	4d 8d 4a 20          	lea    0x20(%r10),%r9
    ced3:	48 85 c9             	test   %rcx,%rcx
    ced6:	75 e0                	jne    ceb8 <dispose_chunk+0x608>
    ced8:	4d 39 c3             	cmp    %r8,%r11
    cedb:	0f 82 3f fd ff ff    	jb     cc20 <dispose_chunk+0x370>
    cee1:	49 c7 03 00 00 00 00 	movq   $0x0,(%r11)
    cee8:	48 85 db             	test   %rbx,%rbx
    ceeb:	0f 84 d3 fa ff ff    	je     c9c4 <dispose_chunk+0x114>
    cef1:	8b 48 38             	mov    0x38(%rax),%ecx
    cef4:	4c 8d 49 4a          	lea    0x4a(%rcx),%r9
    cef8:	48 39 84 cf 58 02 00 	cmp    %rax,0x258(%rdi,%rcx,8)
    ceff:	00 
    cf00:	0f 84 1a 01 00 00    	je     d020 <dispose_chunk+0x770>
    cf06:	4c 39 c3             	cmp    %r8,%rbx
    cf09:	0f 82 11 fd ff ff    	jb     cc20 <dispose_chunk+0x370>
    cf0f:	48 39 43 20          	cmp    %rax,0x20(%rbx)
    cf13:	0f 84 1a 01 00 00    	je     d033 <dispose_chunk+0x783>
    cf19:	4c 89 53 28          	mov    %r10,0x28(%rbx)
    cf1d:	e9 58 fa ff ff       	jmp    c97a <dispose_chunk+0xca>
    cf22:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    cf28:	41 b9 fe ff ff ff    	mov    $0xfffffffe,%r9d
    cf2e:	41 d3 c1             	rol    %cl,%r9d
    cf31:	44 21 0f             	and    %r9d,(%rdi)
    cf34:	e9 8b fa ff ff       	jmp    c9c4 <dispose_chunk+0x114>
    cf39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    cf40:	4e 89 54 df 08       	mov    %r10,0x8(%rdi,%r11,8)
    cf45:	4d 85 d2             	test   %r10,%r10
    cf48:	0f 85 98 fb ff ff    	jne    cae6 <dispose_chunk+0x236>
    cf4e:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    cf53:	d3 c6                	rol    %cl,%esi
    cf55:	21 77 04             	and    %esi,0x4(%rdi)
    cf58:	e9 d3 fb ff ff       	jmp    cb30 <dispose_chunk+0x280>
    cf5d:	4d 39 c1             	cmp    %r8,%r9
    cf60:	0f 82 ba fc ff ff    	jb     cc20 <dispose_chunk+0x370>
    cf66:	49 39 71 18          	cmp    %rsi,0x18(%r9)
    cf6a:	0f 85 b0 fc ff ff    	jne    cc20 <dispose_chunk+0x370>
    cf70:	4d 39 d1             	cmp    %r10,%r9
    cf73:	0f 84 0f ff ff ff    	je     ce88 <dispose_chunk+0x5d8>
    cf79:	4c 39 d1             	cmp    %r10,%rcx
    cf7c:	0f 84 4e fe ff ff    	je     cdd0 <dispose_chunk+0x520>
    cf82:	e9 8c fc ff ff       	jmp    cc13 <dispose_chunk+0x363>
    cf87:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    cf8e:	00 00 
    cf90:	4e 89 54 df 08       	mov    %r10,0x8(%rdi,%r11,8)
    cf95:	4d 85 d2             	test   %r10,%r10
    cf98:	0f 85 dc f9 ff ff    	jne    c97a <dispose_chunk+0xca>
    cf9e:	41 b9 fe ff ff ff    	mov    $0xfffffffe,%r9d
    cfa4:	41 d3 c1             	rol    %cl,%r9d
    cfa7:	44 21 4f 04          	and    %r9d,0x4(%rdi)
    cfab:	e9 14 fa ff ff       	jmp    c9c4 <dispose_chunk+0x114>
    cfb0:	4d 39 c1             	cmp    %r8,%r9
    cfb3:	0f 82 67 fc ff ff    	jb     cc20 <dispose_chunk+0x370>
    cfb9:	49 39 41 18          	cmp    %rax,0x18(%r9)
    cfbd:	0f 85 5d fc ff ff    	jne    cc20 <dispose_chunk+0x370>
    cfc3:	4d 39 d1             	cmp    %r10,%r9
    cfc6:	0f 84 5c ff ff ff    	je     cf28 <dispose_chunk+0x678>
    cfcc:	4d 39 d3             	cmp    %r10,%r11
    cfcf:	0f 84 a9 fc ff ff    	je     cc7e <dispose_chunk+0x3ce>
    cfd5:	e9 99 fc ff ff       	jmp    cc73 <dispose_chunk+0x3c3>
    cfda:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    cfe0:	48 8b 4e 20          	mov    0x20(%rsi),%rcx
    cfe4:	48 85 c9             	test   %rcx,%rcx
    cfe7:	74 53                	je     d03c <dispose_chunk+0x78c>
    cfe9:	4c 8d 4e 20          	lea    0x20(%rsi),%r9
    cfed:	e9 26 fe ff ff       	jmp    ce18 <dispose_chunk+0x568>
    cff2:	48 8b 48 20          	mov    0x20(%rax),%rcx
    cff6:	48 85 c9             	test   %rcx,%rcx
    cff9:	74 75                	je     d070 <dispose_chunk+0x7c0>
    cffb:	4c 8d 48 20          	lea    0x20(%rax),%r9
    cfff:	e9 b4 fe ff ff       	jmp    ceb8 <dispose_chunk+0x608>
    d004:	4c 89 55 20          	mov    %r10,0x20(%rbp)
    d008:	e9 d4 fa ff ff       	jmp    cae1 <dispose_chunk+0x231>
    d00d:	4c 89 53 20          	mov    %r10,0x20(%rbx)
    d011:	e9 5f f9 ff ff       	jmp    c975 <dispose_chunk+0xc5>
    d016:	4e 89 54 cf 08       	mov    %r10,0x8(%rdi,%r9,8)
    d01b:	e9 c6 fa ff ff       	jmp    cae6 <dispose_chunk+0x236>
    d020:	4e 89 54 cf 08       	mov    %r10,0x8(%rdi,%r9,8)
    d025:	e9 50 f9 ff ff       	jmp    c97a <dispose_chunk+0xca>
    d02a:	4c 89 55 20          	mov    %r10,0x20(%rbp)
    d02e:	e9 b3 fa ff ff       	jmp    cae6 <dispose_chunk+0x236>
    d033:	4c 89 53 20          	mov    %r10,0x20(%rbx)
    d037:	e9 3e f9 ff ff       	jmp    c97a <dispose_chunk+0xca>
    d03c:	48 85 ed             	test   %rbp,%rbp
    d03f:	0f 84 eb fa ff ff    	je     cb30 <dispose_chunk+0x280>
    d045:	44 8b 4e 38          	mov    0x38(%rsi),%r9d
    d049:	4c 89 c9             	mov    %r9,%rcx
    d04c:	4a 39 b4 cf 58 02 00 	cmp    %rsi,0x258(%rdi,%r9,8)
    d053:	00 
    d054:	74 4f                	je     d0a5 <dispose_chunk+0x7f5>
    d056:	4c 39 c5             	cmp    %r8,%rbp
    d059:	0f 82 c1 fb ff ff    	jb     cc20 <dispose_chunk+0x370>
    d05f:	48 39 75 20          	cmp    %rsi,0x20(%rbp)
    d063:	74 60                	je     d0c5 <dispose_chunk+0x815>
    d065:	31 c9                	xor    %ecx,%ecx
    d067:	48 89 4d 28          	mov    %rcx,0x28(%rbp)
    d06b:	e9 c0 fa ff ff       	jmp    cb30 <dispose_chunk+0x280>
    d070:	48 85 db             	test   %rbx,%rbx
    d073:	0f 84 4b f9 ff ff    	je     c9c4 <dispose_chunk+0x114>
    d079:	44 8b 48 38          	mov    0x38(%rax),%r9d
    d07d:	4c 89 c9             	mov    %r9,%rcx
    d080:	4a 39 84 cf 58 02 00 	cmp    %rax,0x258(%rdi,%r9,8)
    d087:	00 
    d088:	74 2b                	je     d0b5 <dispose_chunk+0x805>
    d08a:	4c 39 c3             	cmp    %r8,%rbx
    d08d:	0f 82 8d fb ff ff    	jb     cc20 <dispose_chunk+0x370>
    d093:	48 39 43 20          	cmp    %rax,0x20(%rbx)
    d097:	74 37                	je     d0d0 <dispose_chunk+0x820>
    d099:	45 31 db             	xor    %r11d,%r11d
    d09c:	4c 89 5b 28          	mov    %r11,0x28(%rbx)
    d0a0:	e9 1f f9 ff ff       	jmp    c9c4 <dispose_chunk+0x114>
    d0a5:	45 31 d2             	xor    %r10d,%r10d
    d0a8:	4e 89 94 cf 58 02 00 	mov    %r10,0x258(%rdi,%r9,8)
    d0af:	00 
    d0b0:	e9 99 fe ff ff       	jmp    cf4e <dispose_chunk+0x69e>
    d0b5:	45 31 d2             	xor    %r10d,%r10d
    d0b8:	4e 89 94 cf 58 02 00 	mov    %r10,0x258(%rdi,%r9,8)
    d0bf:	00 
    d0c0:	e9 d9 fe ff ff       	jmp    cf9e <dispose_chunk+0x6ee>
    d0c5:	31 f6                	xor    %esi,%esi
    d0c7:	48 89 75 20          	mov    %rsi,0x20(%rbp)
    d0cb:	e9 60 fa ff ff       	jmp    cb30 <dispose_chunk+0x280>
    d0d0:	31 ed                	xor    %ebp,%ebp
    d0d2:	48 89 6b 20          	mov    %rbp,0x20(%rbx)
    d0d6:	e9 e9 f8 ff ff       	jmp    c9c4 <dispose_chunk+0x114>
    d0db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000d0e0 <init_mparams.isra.0>:
    d0e0:	48 83 ec 18          	sub    $0x18,%rsp
    d0e4:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    d0eb:	00 00 
    d0ed:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    d0f2:	b8 01 00 00 00       	mov    $0x1,%eax
    d0f7:	87 05 33 dd 01 00    	xchg   %eax,0x1dd33(%rip)        # 2ae30 <malloc_global_mutex>
    d0fd:	85 c0                	test   %eax,%eax
    d0ff:	0f 85 8b 00 00 00    	jne    d190 <init_mparams.isra.0+0xb0>
    d105:	48 83 3d f3 dc 01 00 	cmpq   $0x0,0x1dcf3(%rip)        # 2ae00 <mparams>
    d10c:	00 
    d10d:	75 5d                	jne    d16c <init_mparams.isra.0+0x8c>
    d10f:	66 0f 6f 05 99 5f 00 	movdqa 0x5f99(%rip),%xmm0        # 130b0 <g_dyn_entry_table+0x80>
    d116:	00 
    d117:	48 89 e7             	mov    %rsp,%rdi
    d11a:	be 08 00 00 00       	mov    $0x8,%esi
    d11f:	c7 05 ff dc 01 00 02 	movl   $0x2,0x1dcff(%rip)        # 2ae28 <mparams+0x28>
    d126:	00 00 00 
    d129:	48 c7 05 7c dc 01 00 	movq   $0x2,0x1dc7c(%rip)        # 2adb0 <_gm_+0x370>
    d130:	02 00 00 00 
    d134:	0f 11 05 cd dc 01 00 	movups %xmm0,0x1dccd(%rip)        # 2ae08 <mparams+0x8>
    d13b:	66 0f 6f 05 7d 5f 00 	movdqa 0x5f7d(%rip),%xmm0        # 130c0 <g_dyn_entry_table+0x90>
    d142:	00 
    d143:	0f 11 05 ce dc 01 00 	movups %xmm0,0x1dcce(%rip)        # 2ae18 <mparams+0x18>
    d14a:	e8 b1 8c ff ff       	call   5e00 <sgx_read_rand>
    d14f:	85 c0                	test   %eax,%eax
    d151:	75 69                	jne    d1bc <init_mparams.isra.0+0xdc>
    d153:	48 8b 04 24          	mov    (%rsp),%rax
    d157:	48 35 55 55 55 55    	xor    $0x55555555,%rax
    d15d:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    d161:	48 83 c8 08          	or     $0x8,%rax
    d165:	48 89 05 94 dc 01 00 	mov    %rax,0x1dc94(%rip)        # 2ae00 <mparams>
    d16c:	c7 05 ba dc 01 00 00 	movl   $0x0,0x1dcba(%rip)        # 2ae30 <malloc_global_mutex>
    d173:	00 00 00 
    d176:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    d17b:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    d182:	00 00 
    d184:	75 31                	jne    d1b7 <init_mparams.isra.0+0xd7>
    d186:	48 83 c4 18          	add    $0x18,%rsp
    d18a:	c3                   	ret    
    d18b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    d190:	48 8d 15 99 dc 01 00 	lea    0x1dc99(%rip),%rdx        # 2ae30 <malloc_global_mutex>
    d197:	b9 01 00 00 00       	mov    $0x1,%ecx
    d19c:	0f 1f 40 00          	nopl   0x0(%rax)
    d1a0:	8b 02                	mov    (%rdx),%eax
    d1a2:	85 c0                	test   %eax,%eax
    d1a4:	75 fa                	jne    d1a0 <init_mparams.isra.0+0xc0>
    d1a6:	89 c8                	mov    %ecx,%eax
    d1a8:	87 05 82 dc 01 00    	xchg   %eax,0x1dc82(%rip)        # 2ae30 <malloc_global_mutex>
    d1ae:	85 c0                	test   %eax,%eax
    d1b0:	75 ee                	jne    d1a0 <init_mparams.isra.0+0xc0>
    d1b2:	e9 4e ff ff ff       	jmp    d105 <init_mparams.isra.0+0x25>
    d1b7:	e8 44 39 00 00       	call   10b00 <__stack_chk_fail>
    d1bc:	e8 76 53 00 00       	call   12537 <abort>
    d1c1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    d1c8:	00 00 00 
    d1cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000d1d0 <dlmalloc>:
    d1d0:	f3 0f 1e fa          	endbr64 
    d1d4:	41 57                	push   %r15
    d1d6:	41 56                	push   %r14
    d1d8:	41 55                	push   %r13
    d1da:	41 54                	push   %r12
    d1dc:	55                   	push   %rbp
    d1dd:	48 89 fd             	mov    %rdi,%rbp
    d1e0:	53                   	push   %rbx
    d1e1:	48 83 ec 18          	sub    $0x18,%rsp
    d1e5:	48 83 3d 13 dc 01 00 	cmpq   $0x0,0x1dc13(%rip)        # 2ae00 <mparams>
    d1ec:	00 
    d1ed:	0f 84 55 01 00 00    	je     d348 <dlmalloc+0x178>
    d1f3:	f6 05 b6 db 01 00 02 	testb  $0x2,0x1dbb6(%rip)        # 2adb0 <_gm_+0x370>
    d1fa:	0f 85 5a 01 00 00    	jne    d35a <dlmalloc+0x18a>
    d200:	48 81 fd e0 00 00 00 	cmp    $0xe0,%rbp
    d207:	0f 87 fb 00 00 00    	ja     d308 <dlmalloc+0x138>
    d20d:	48 83 fd 0e          	cmp    $0xe,%rbp
    d211:	0f 87 d9 00 00 00    	ja     d2f0 <dlmalloc+0x120>
    d217:	b9 04 00 00 00       	mov    $0x4,%ecx
    d21c:	41 bc 20 00 00 00    	mov    $0x20,%r12d
    d222:	8b 15 18 d8 01 00    	mov    0x1d818(%rip),%edx        # 2aa40 <_gm_>
    d228:	4c 8d 2d 11 d8 01 00 	lea    0x1d811(%rip),%r13        # 2aa40 <_gm_>
    d22f:	89 d0                	mov    %edx,%eax
    d231:	d3 e8                	shr    %cl,%eax
    d233:	a8 03                	test   $0x3,%al
    d235:	0f 84 d5 01 00 00    	je     d410 <dlmalloc+0x240>
    d23b:	f7 d0                	not    %eax
    d23d:	83 e0 01             	and    $0x1,%eax
    d240:	01 c1                	add    %eax,%ecx
    d242:	8d 44 09 09          	lea    0x9(%rcx,%rcx,1),%eax
    d246:	49 8d 74 c5 00       	lea    0x0(%r13,%rax,8),%rsi
    d24b:	48 8b 5e 10          	mov    0x10(%rsi),%rbx
    d24f:	48 8b 43 10          	mov    0x10(%rbx),%rax
    d253:	48 39 c6             	cmp    %rax,%rsi
    d256:	0f 84 a4 07 00 00    	je     da00 <dlmalloc+0x830>
    d25c:	48 3b 05 f5 d7 01 00 	cmp    0x1d7f5(%rip),%rax        # 2aa58 <_gm_+0x18>
    d263:	0f 82 c7 05 00 00    	jb     d830 <dlmalloc+0x660>
    d269:	48 39 58 18          	cmp    %rbx,0x18(%rax)
    d26d:	0f 85 bd 05 00 00    	jne    d830 <dlmalloc+0x660>
    d273:	48 89 70 18          	mov    %rsi,0x18(%rax)
    d277:	48 89 46 10          	mov    %rax,0x10(%rsi)
    d27b:	c1 e1 03             	shl    $0x3,%ecx
    d27e:	89 c8                	mov    %ecx,%eax
    d280:	83 c8 03             	or     $0x3,%eax
    d283:	48 89 43 08          	mov    %rax,0x8(%rbx)
    d287:	48 8d 04 0b          	lea    (%rbx,%rcx,1),%rax
    d28b:	48 83 c3 10          	add    $0x10,%rbx
    d28f:	48 83 48 08 01       	orq    $0x1,0x8(%rax)
    d294:	4c 33 2d 65 db 01 00 	xor    0x1db65(%rip),%r13        # 2ae00 <mparams>
    d29b:	4c 89 28             	mov    %r13,(%rax)
    d29e:	48 85 db             	test   %rbx,%rbx
    d2a1:	0f 84 96 00 00 00    	je     d33d <dlmalloc+0x16d>
    d2a7:	e8 74 a1 ff ff       	call   7420 <get_heap_base>
    d2ac:	48 39 c3             	cmp    %rax,%rbx
    d2af:	0f 82 7b 05 00 00    	jb     d830 <dlmalloc+0x660>
    d2b5:	48 01 dd             	add    %rbx,%rbp
    d2b8:	0f 82 72 05 00 00    	jb     d830 <dlmalloc+0x660>
    d2be:	31 ff                	xor    %edi,%edi
    d2c0:	e8 2b f4 ff ff       	call   c6f0 <sbrk>
    d2c5:	48 39 e8             	cmp    %rbp,%rax
    d2c8:	0f 82 62 05 00 00    	jb     d830 <dlmalloc+0x660>
    d2ce:	f6 05 db da 01 00 02 	testb  $0x2,0x1dadb(%rip)        # 2adb0 <_gm_+0x370>
    d2d5:	0f 85 35 05 00 00    	jne    d810 <dlmalloc+0x640>
    d2db:	48 83 c4 18          	add    $0x18,%rsp
    d2df:	48 89 d8             	mov    %rbx,%rax
    d2e2:	5b                   	pop    %rbx
    d2e3:	5d                   	pop    %rbp
    d2e4:	41 5c                	pop    %r12
    d2e6:	41 5d                	pop    %r13
    d2e8:	41 5e                	pop    %r14
    d2ea:	41 5f                	pop    %r15
    d2ec:	c3                   	ret    
    d2ed:	0f 1f 00             	nopl   (%rax)
    d2f0:	4c 8d 65 1f          	lea    0x1f(%rbp),%r12
    d2f4:	49 83 e4 f0          	and    $0xfffffffffffffff0,%r12
    d2f8:	4c 89 e1             	mov    %r12,%rcx
    d2fb:	48 c1 e9 03          	shr    $0x3,%rcx
    d2ff:	e9 1e ff ff ff       	jmp    d222 <dlmalloc+0x52>
    d304:	0f 1f 40 00          	nopl   0x0(%rax)
    d308:	4c 8b 05 39 d7 01 00 	mov    0x1d739(%rip),%r8        # 2aa48 <_gm_+0x8>
    d30f:	4c 8d 2d 2a d7 01 00 	lea    0x1d72a(%rip),%r13        # 2aa40 <_gm_>
    d316:	4c 89 c6             	mov    %r8,%rsi
    d319:	48 81 fd 7f ff ff ff 	cmp    $0xffffffffffffff7f,%rbp
    d320:	76 76                	jbe    d398 <dlmalloc+0x1c8>
    d322:	48 8b 05 d7 da 01 00 	mov    0x1dad7(%rip),%rax        # 2ae00 <mparams>
    d329:	49 83 f8 ff          	cmp    $0xffffffffffffffff,%r8
    d32d:	0f 84 5d 02 00 00    	je     d590 <dlmalloc+0x3c0>
    d333:	48 85 c0             	test   %rax,%rax
    d336:	75 05                	jne    d33d <dlmalloc+0x16d>
    d338:	e8 a3 fd ff ff       	call   d0e0 <init_mparams.isra.0>
    d33d:	31 db                	xor    %ebx,%ebx
    d33f:	eb 8d                	jmp    d2ce <dlmalloc+0xfe>
    d341:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    d348:	e8 93 fd ff ff       	call   d0e0 <init_mparams.isra.0>
    d34d:	f6 05 5c da 01 00 02 	testb  $0x2,0x1da5c(%rip)        # 2adb0 <_gm_+0x370>
    d354:	0f 84 a6 fe ff ff    	je     d200 <dlmalloc+0x30>
    d35a:	b8 01 00 00 00       	mov    $0x1,%eax
    d35f:	87 05 4f da 01 00    	xchg   %eax,0x1da4f(%rip)        # 2adb4 <_gm_+0x374>
    d365:	85 c0                	test   %eax,%eax
    d367:	0f 84 93 fe ff ff    	je     d200 <dlmalloc+0x30>
    d36d:	ba 01 00 00 00       	mov    $0x1,%edx
    d372:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    d378:	8b 05 36 da 01 00    	mov    0x1da36(%rip),%eax        # 2adb4 <_gm_+0x374>
    d37e:	85 c0                	test   %eax,%eax
    d380:	75 f6                	jne    d378 <dlmalloc+0x1a8>
    d382:	89 d0                	mov    %edx,%eax
    d384:	87 05 2a da 01 00    	xchg   %eax,0x1da2a(%rip)        # 2adb4 <_gm_+0x374>
    d38a:	85 c0                	test   %eax,%eax
    d38c:	75 ea                	jne    d378 <dlmalloc+0x1a8>
    d38e:	e9 6d fe ff ff       	jmp    d200 <dlmalloc+0x30>
    d393:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    d398:	44 8b 0d a5 d6 01 00 	mov    0x1d6a5(%rip),%r9d        # 2aa44 <_gm_+0x4>
    d39f:	4c 8d 65 1f          	lea    0x1f(%rbp),%r12
    d3a3:	49 83 e4 f0          	and    $0xfffffffffffffff0,%r12
    d3a7:	45 85 c9             	test   %r9d,%r9d
    d3aa:	0f 85 20 02 00 00    	jne    d5d0 <dlmalloc+0x400>
    d3b0:	4c 39 e6             	cmp    %r12,%rsi
    d3b3:	0f 83 7f 01 00 00    	jae    d538 <dlmalloc+0x368>
    d3b9:	48 8b 05 90 d6 01 00 	mov    0x1d690(%rip),%rax        # 2aa50 <_gm_+0x10>
    d3c0:	48 8b 15 39 da 01 00 	mov    0x1da39(%rip),%rdx        # 2ae00 <mparams>
    d3c7:	49 39 c4             	cmp    %rax,%r12
    d3ca:	0f 83 b0 06 00 00    	jae    da80 <dlmalloc+0x8b0>
    d3d0:	48 8b 1d 91 d6 01 00 	mov    0x1d691(%rip),%rbx        # 2aa68 <_gm_+0x28>
    d3d7:	4c 29 e0             	sub    %r12,%rax
    d3da:	4c 31 ea             	xor    %r13,%rdx
    d3dd:	48 89 05 6c d6 01 00 	mov    %rax,0x1d66c(%rip)        # 2aa50 <_gm_+0x10>
    d3e4:	48 83 c8 01          	or     $0x1,%rax
    d3e8:	4a 8d 0c 23          	lea    (%rbx,%r12,1),%rcx
    d3ec:	49 83 cc 03          	or     $0x3,%r12
    d3f0:	48 89 0d 71 d6 01 00 	mov    %rcx,0x1d671(%rip)        # 2aa68 <_gm_+0x28>
    d3f7:	48 89 41 08          	mov    %rax,0x8(%rcx)
    d3fb:	4c 89 63 08          	mov    %r12,0x8(%rbx)
    d3ff:	48 89 11             	mov    %rdx,(%rcx)
    d402:	48 83 c3 10          	add    $0x10,%rbx
    d406:	e9 93 fe ff ff       	jmp    d29e <dlmalloc+0xce>
    d40b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    d410:	48 8b 35 31 d6 01 00 	mov    0x1d631(%rip),%rsi        # 2aa48 <_gm_+0x8>
    d417:	4c 39 e6             	cmp    %r12,%rsi
    d41a:	0f 83 18 01 00 00    	jae    d538 <dlmalloc+0x368>
    d420:	85 c0                	test   %eax,%eax
    d422:	0f 84 10 04 00 00    	je     d838 <dlmalloc+0x668>
    d428:	bf 01 00 00 00       	mov    $0x1,%edi
    d42d:	d3 e0                	shl    %cl,%eax
    d42f:	41 89 f9             	mov    %edi,%r9d
    d432:	41 d3 e1             	shl    %cl,%r9d
    d435:	45 01 c9             	add    %r9d,%r9d
    d438:	45 89 c8             	mov    %r9d,%r8d
    d43b:	41 f7 d8             	neg    %r8d
    d43e:	45 09 c8             	or     %r9d,%r8d
    d441:	44 21 c0             	and    %r8d,%eax
    d444:	89 c1                	mov    %eax,%ecx
    d446:	f7 d9                	neg    %ecx
    d448:	21 c1                	and    %eax,%ecx
    d44a:	f3 0f bc c9          	tzcnt  %ecx,%ecx
    d44e:	8d 44 09 09          	lea    0x9(%rcx,%rcx,1),%eax
    d452:	4d 8d 44 c5 00       	lea    0x0(%r13,%rax,8),%r8
    d457:	49 8b 58 10          	mov    0x10(%r8),%rbx
    d45b:	48 8b 43 10          	mov    0x10(%rbx),%rax
    d45f:	49 39 c0             	cmp    %rax,%r8
    d462:	0f 84 d1 05 00 00    	je     da39 <dlmalloc+0x869>
    d468:	48 3b 05 e9 d5 01 00 	cmp    0x1d5e9(%rip),%rax        # 2aa58 <_gm_+0x18>
    d46f:	0f 82 bb 03 00 00    	jb     d830 <dlmalloc+0x660>
    d475:	48 39 58 18          	cmp    %rbx,0x18(%rax)
    d479:	0f 85 b1 03 00 00    	jne    d830 <dlmalloc+0x660>
    d47f:	4c 89 40 18          	mov    %r8,0x18(%rax)
    d483:	49 89 40 10          	mov    %rax,0x10(%r8)
    d487:	8d 04 cd 00 00 00 00 	lea    0x0(,%rcx,8),%eax
    d48e:	48 8b 3d 6b d9 01 00 	mov    0x1d96b(%rip),%rdi        # 2ae00 <mparams>
    d495:	48 89 c2             	mov    %rax,%rdx
    d498:	48 89 c1             	mov    %rax,%rcx
    d49b:	48 01 d8             	add    %rbx,%rax
    d49e:	4c 29 e2             	sub    %r12,%rdx
    d4a1:	4c 31 ef             	xor    %r13,%rdi
    d4a4:	48 83 fa 1f          	cmp    $0x1f,%rdx
    d4a8:	0f 86 8d 0d 00 00    	jbe    e23b <dlmalloc+0x106b>
    d4ae:	4c 89 e1             	mov    %r12,%rcx
    d4b1:	49 01 dc             	add    %rbx,%r12
    d4b4:	48 83 c9 03          	or     $0x3,%rcx
    d4b8:	48 89 4b 08          	mov    %rcx,0x8(%rbx)
    d4bc:	48 89 d1             	mov    %rdx,%rcx
    d4bf:	48 83 c9 01          	or     $0x1,%rcx
    d4c3:	49 89 3c 24          	mov    %rdi,(%r12)
    d4c7:	49 89 4c 24 08       	mov    %rcx,0x8(%r12)
    d4cc:	48 89 10             	mov    %rdx,(%rax)
    d4cf:	48 85 f6             	test   %rsi,%rsi
    d4d2:	74 4d                	je     d521 <dlmalloc+0x351>
    d4d4:	48 c1 ee 03          	shr    $0x3,%rsi
    d4d8:	bf 01 00 00 00       	mov    $0x1,%edi
    d4dd:	48 8b 05 7c d5 01 00 	mov    0x1d57c(%rip),%rax        # 2aa60 <_gm_+0x20>
    d4e4:	48 89 f1             	mov    %rsi,%rcx
    d4e7:	8d 74 36 09          	lea    0x9(%rsi,%rsi,1),%esi
    d4eb:	4d 8d 44 f5 00       	lea    0x0(%r13,%rsi,8),%r8
    d4f0:	8b 35 4a d5 01 00    	mov    0x1d54a(%rip),%esi        # 2aa40 <_gm_>
    d4f6:	d3 e7                	shl    %cl,%edi
    d4f8:	85 fe                	test   %edi,%esi
    d4fa:	0f 84 a9 10 00 00    	je     e5a9 <dlmalloc+0x13d9>
    d500:	49 8b 48 10          	mov    0x10(%r8),%rcx
    d504:	48 3b 0d 4d d5 01 00 	cmp    0x1d54d(%rip),%rcx        # 2aa58 <_gm_+0x18>
    d50b:	0f 82 1f 03 00 00    	jb     d830 <dlmalloc+0x660>
    d511:	49 89 40 10          	mov    %rax,0x10(%r8)
    d515:	48 89 41 18          	mov    %rax,0x18(%rcx)
    d519:	48 89 48 10          	mov    %rcx,0x10(%rax)
    d51d:	4c 89 40 18          	mov    %r8,0x18(%rax)
    d521:	48 89 15 20 d5 01 00 	mov    %rdx,0x1d520(%rip)        # 2aa48 <_gm_+0x8>
    d528:	4c 89 25 31 d5 01 00 	mov    %r12,0x1d531(%rip)        # 2aa60 <_gm_+0x20>
    d52f:	e9 ce fe ff ff       	jmp    d402 <dlmalloc+0x232>
    d534:	0f 1f 40 00          	nopl   0x0(%rax)
    d538:	48 8b 1d 21 d5 01 00 	mov    0x1d521(%rip),%rbx        # 2aa60 <_gm_+0x20>
    d53f:	48 8b 3d ba d8 01 00 	mov    0x1d8ba(%rip),%rdi        # 2ae00 <mparams>
    d546:	48 89 f2             	mov    %rsi,%rdx
    d549:	4c 29 e2             	sub    %r12,%rdx
    d54c:	48 8d 04 33          	lea    (%rbx,%rsi,1),%rax
    d550:	4c 31 ef             	xor    %r13,%rdi
    d553:	48 83 fa 1f          	cmp    $0x1f,%rdx
    d557:	0f 86 83 0a 00 00    	jbe    dfe0 <dlmalloc+0xe10>
    d55d:	48 89 d6             	mov    %rdx,%rsi
    d560:	4a 8d 0c 23          	lea    (%rbx,%r12,1),%rcx
    d564:	49 83 cc 03          	or     $0x3,%r12
    d568:	48 89 15 d9 d4 01 00 	mov    %rdx,0x1d4d9(%rip)        # 2aa48 <_gm_+0x8>
    d56f:	48 83 ce 01          	or     $0x1,%rsi
    d573:	48 89 0d e6 d4 01 00 	mov    %rcx,0x1d4e6(%rip)        # 2aa60 <_gm_+0x20>
    d57a:	48 89 71 08          	mov    %rsi,0x8(%rcx)
    d57e:	48 89 10             	mov    %rdx,(%rax)
    d581:	4c 89 63 08          	mov    %r12,0x8(%rbx)
    d585:	48 89 39             	mov    %rdi,(%rcx)
    d588:	e9 75 fe ff ff       	jmp    d402 <dlmalloc+0x232>
    d58d:	0f 1f 00             	nopl   (%rax)
    d590:	48 8b 1d c9 d4 01 00 	mov    0x1d4c9(%rip),%rbx        # 2aa60 <_gm_+0x20>
    d597:	48 c7 c6 ff ff ff ff 	mov    $0xffffffffffffffff,%rsi
    d59e:	48 8d 43 ff          	lea    -0x1(%rbx),%rax
    d5a2:	48 c7 05 9b d4 01 00 	movq   $0x0,0x1d49b(%rip)        # 2aa48 <_gm_+0x8>
    d5a9:	00 00 00 00 
    d5ad:	48 c7 05 a8 d4 01 00 	movq   $0x0,0x1d4a8(%rip)        # 2aa60 <_gm_+0x20>
    d5b4:	00 00 00 00 
    d5b8:	48 89 73 08          	mov    %rsi,0x8(%rbx)
    d5bc:	48 83 48 08 01       	orq    $0x1,0x8(%rax)
    d5c1:	4c 33 2d 38 d8 01 00 	xor    0x1d838(%rip),%r13        # 2ae00 <mparams>
    d5c8:	4c 89 28             	mov    %r13,(%rax)
    d5cb:	e9 32 fe ff ff       	jmp    d402 <dlmalloc+0x232>
    d5d0:	4c 89 e0             	mov    %r12,%rax
    d5d3:	4c 89 e7             	mov    %r12,%rdi
    d5d6:	48 c1 e8 08          	shr    $0x8,%rax
    d5da:	48 f7 df             	neg    %rdi
    d5dd:	41 89 c2             	mov    %eax,%r10d
    d5e0:	85 c0                	test   %eax,%eax
    d5e2:	0f 85 28 04 00 00    	jne    da10 <dlmalloc+0x840>
    d5e8:	48 8b 15 a9 d6 01 00 	mov    0x1d6a9(%rip),%rdx        # 2ac98 <_gm_+0x258>
    d5ef:	b9 39 00 00 00       	mov    $0x39,%ecx
    d5f4:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    d5f9:	48 85 d2             	test   %rdx,%rdx
    d5fc:	0f 84 52 04 00 00    	je     da54 <dlmalloc+0x884>
    d602:	4d 89 e3             	mov    %r12,%r11
    d605:	49 d3 e3             	shl    %cl,%r11
    d608:	31 c9                	xor    %ecx,%ecx
    d60a:	31 db                	xor    %ebx,%ebx
    d60c:	eb 05                	jmp    d613 <dlmalloc+0x443>
    d60e:	66 90                	xchg   %ax,%ax
    d610:	4d 01 db             	add    %r11,%r11
    d613:	48 8b 42 08          	mov    0x8(%rdx),%rax
    d617:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    d61b:	4c 29 e0             	sub    %r12,%rax
    d61e:	48 39 f8             	cmp    %rdi,%rax
    d621:	73 0f                	jae    d632 <dlmalloc+0x462>
    d623:	48 85 c0             	test   %rax,%rax
    d626:	0f 84 c3 0b 00 00    	je     e1ef <dlmalloc+0x101f>
    d62c:	48 89 c7             	mov    %rax,%rdi
    d62f:	48 89 d3             	mov    %rdx,%rbx
    d632:	48 8b 42 28          	mov    0x28(%rdx),%rax
    d636:	4d 89 de             	mov    %r11,%r14
    d639:	49 c1 ee 3f          	shr    $0x3f,%r14
    d63d:	4a 8b 54 f2 20       	mov    0x20(%rdx,%r14,8),%rdx
    d642:	48 85 c0             	test   %rax,%rax
    d645:	74 07                	je     d64e <dlmalloc+0x47e>
    d647:	48 39 d0             	cmp    %rdx,%rax
    d64a:	48 0f 45 c8          	cmovne %rax,%rcx
    d64e:	48 85 d2             	test   %rdx,%rdx
    d651:	75 bd                	jne    d610 <dlmalloc+0x440>
    d653:	48 89 c8             	mov    %rcx,%rax
    d656:	48 09 d8             	or     %rbx,%rax
    d659:	0f 84 eb 03 00 00    	je     da4a <dlmalloc+0x87a>
    d65f:	48 85 c9             	test   %rcx,%rcx
    d662:	75 0f                	jne    d673 <dlmalloc+0x4a3>
    d664:	eb 35                	jmp    d69b <dlmalloc+0x4cb>
    d666:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    d66d:	00 00 00 
    d670:	48 89 c1             	mov    %rax,%rcx
    d673:	48 8b 41 08          	mov    0x8(%rcx),%rax
    d677:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    d67b:	4c 29 e0             	sub    %r12,%rax
    d67e:	48 39 f8             	cmp    %rdi,%rax
    d681:	73 06                	jae    d689 <dlmalloc+0x4b9>
    d683:	48 89 c7             	mov    %rax,%rdi
    d686:	48 89 cb             	mov    %rcx,%rbx
    d689:	48 8b 41 20          	mov    0x20(%rcx),%rax
    d68d:	48 85 c0             	test   %rax,%rax
    d690:	75 de                	jne    d670 <dlmalloc+0x4a0>
    d692:	48 8b 41 28          	mov    0x28(%rcx),%rax
    d696:	48 85 c0             	test   %rax,%rax
    d699:	75 d5                	jne    d670 <dlmalloc+0x4a0>
    d69b:	48 85 db             	test   %rbx,%rbx
    d69e:	0f 84 0c fd ff ff    	je     d3b0 <dlmalloc+0x1e0>
    d6a4:	4c 89 c0             	mov    %r8,%rax
    d6a7:	4c 29 e0             	sub    %r12,%rax
    d6aa:	48 39 c7             	cmp    %rax,%rdi
    d6ad:	0f 83 fd fc ff ff    	jae    d3b0 <dlmalloc+0x1e0>
    d6b3:	4c 8b 1d 9e d3 01 00 	mov    0x1d39e(%rip),%r11        # 2aa58 <_gm_+0x18>
    d6ba:	4c 39 db             	cmp    %r11,%rbx
    d6bd:	0f 82 6d 01 00 00    	jb     d830 <dlmalloc+0x660>
    d6c3:	4e 8d 14 23          	lea    (%rbx,%r12,1),%r10
    d6c7:	4c 39 d3             	cmp    %r10,%rbx
    d6ca:	0f 83 60 01 00 00    	jae    d830 <dlmalloc+0x660>
    d6d0:	4c 8b 73 18          	mov    0x18(%rbx),%r14
    d6d4:	4c 8b 7b 30          	mov    0x30(%rbx),%r15
    d6d8:	4c 39 f3             	cmp    %r14,%rbx
    d6db:	0f 84 2d 0d 00 00    	je     e40e <dlmalloc+0x123e>
    d6e1:	48 8b 43 10          	mov    0x10(%rbx),%rax
    d6e5:	4c 39 d8             	cmp    %r11,%rax
    d6e8:	0f 82 42 01 00 00    	jb     d830 <dlmalloc+0x660>
    d6ee:	48 3b 58 18          	cmp    0x18(%rax),%rbx
    d6f2:	0f 85 38 01 00 00    	jne    d830 <dlmalloc+0x660>
    d6f8:	49 3b 5e 10          	cmp    0x10(%r14),%rbx
    d6fc:	0f 85 2e 01 00 00    	jne    d830 <dlmalloc+0x660>
    d702:	4c 89 70 18          	mov    %r14,0x18(%rax)
    d706:	49 89 46 10          	mov    %rax,0x10(%r14)
    d70a:	4d 85 ff             	test   %r15,%r15
    d70d:	74 71                	je     d780 <dlmalloc+0x5b0>
    d70f:	8b 53 38             	mov    0x38(%rbx),%edx
    d712:	48 89 d0             	mov    %rdx,%rax
    d715:	49 3b 9c d5 58 02 00 	cmp    0x258(%r13,%rdx,8),%rbx
    d71c:	00 
    d71d:	0f 84 ca 0f 00 00    	je     e6ed <dlmalloc+0x151d>
    d723:	4d 39 df             	cmp    %r11,%r15
    d726:	0f 82 04 01 00 00    	jb     d830 <dlmalloc+0x660>
    d72c:	49 3b 5f 20          	cmp    0x20(%r15),%rbx
    d730:	0f 84 3e 11 00 00    	je     e874 <dlmalloc+0x16a4>
    d736:	4d 89 77 28          	mov    %r14,0x28(%r15)
    d73a:	4d 85 f6             	test   %r14,%r14
    d73d:	74 41                	je     d780 <dlmalloc+0x5b0>
    d73f:	4d 39 de             	cmp    %r11,%r14
    d742:	0f 82 e8 00 00 00    	jb     d830 <dlmalloc+0x660>
    d748:	48 8b 43 20          	mov    0x20(%rbx),%rax
    d74c:	4d 89 7e 30          	mov    %r15,0x30(%r14)
    d750:	48 85 c0             	test   %rax,%rax
    d753:	74 11                	je     d766 <dlmalloc+0x596>
    d755:	4c 39 d8             	cmp    %r11,%rax
    d758:	0f 82 d2 00 00 00    	jb     d830 <dlmalloc+0x660>
    d75e:	49 89 46 20          	mov    %rax,0x20(%r14)
    d762:	4c 89 70 30          	mov    %r14,0x30(%rax)
    d766:	48 8b 43 28          	mov    0x28(%rbx),%rax
    d76a:	48 85 c0             	test   %rax,%rax
    d76d:	74 11                	je     d780 <dlmalloc+0x5b0>
    d76f:	4c 39 d8             	cmp    %r11,%rax
    d772:	0f 82 b8 00 00 00    	jb     d830 <dlmalloc+0x660>
    d778:	49 89 46 28          	mov    %rax,0x28(%r14)
    d77c:	4c 89 70 30          	mov    %r14,0x30(%rax)
    d780:	48 8b 15 79 d6 01 00 	mov    0x1d679(%rip),%rdx        # 2ae00 <mparams>
    d787:	4c 31 ea             	xor    %r13,%rdx
    d78a:	48 83 ff 1f          	cmp    $0x1f,%rdi
    d78e:	0f 86 fa 0c 00 00    	jbe    e48e <dlmalloc+0x12be>
    d794:	4c 89 e0             	mov    %r12,%rax
    d797:	48 89 f9             	mov    %rdi,%rcx
    d79a:	48 83 c8 03          	or     $0x3,%rax
    d79e:	48 c1 e9 03          	shr    $0x3,%rcx
    d7a2:	48 89 43 08          	mov    %rax,0x8(%rbx)
    d7a6:	48 89 f8             	mov    %rdi,%rax
    d7a9:	48 83 c8 01          	or     $0x1,%rax
    d7ad:	49 89 12             	mov    %rdx,(%r10)
    d7b0:	49 89 42 08          	mov    %rax,0x8(%r10)
    d7b4:	49 89 3c 3a          	mov    %rdi,(%r10,%rdi,1)
    d7b8:	48 81 ff ff 00 00 00 	cmp    $0xff,%rdi
    d7bf:	0f 87 e8 0c 00 00    	ja     e4ad <dlmalloc+0x12dd>
    d7c5:	8d 44 09 09          	lea    0x9(%rcx,%rcx,1),%eax
    d7c9:	8b 35 71 d2 01 00    	mov    0x1d271(%rip),%esi        # 2aa40 <_gm_>
    d7cf:	49 8d 54 c5 00       	lea    0x0(%r13,%rax,8),%rdx
    d7d4:	b8 01 00 00 00       	mov    $0x1,%eax
    d7d9:	d3 e0                	shl    %cl,%eax
    d7db:	85 c6                	test   %eax,%esi
    d7dd:	0f 84 39 10 00 00    	je     e81c <dlmalloc+0x164c>
    d7e3:	48 8b 42 10          	mov    0x10(%rdx),%rax
    d7e7:	4c 39 d8             	cmp    %r11,%rax
    d7ea:	72 44                	jb     d830 <dlmalloc+0x660>
    d7ec:	4c 89 52 10          	mov    %r10,0x10(%rdx)
    d7f0:	4c 89 50 18          	mov    %r10,0x18(%rax)
    d7f4:	49 89 42 10          	mov    %rax,0x10(%r10)
    d7f8:	49 89 52 18          	mov    %rdx,0x18(%r10)
    d7fc:	48 83 c3 10          	add    $0x10,%rbx
    d800:	4c 89 c6             	mov    %r8,%rsi
    d803:	0f 85 9e fa ff ff    	jne    d2a7 <dlmalloc+0xd7>
    d809:	e9 a2 fb ff ff       	jmp    d3b0 <dlmalloc+0x1e0>
    d80e:	66 90                	xchg   %ax,%ax
    d810:	c7 05 9a d5 01 00 00 	movl   $0x0,0x1d59a(%rip)        # 2adb4 <_gm_+0x374>
    d817:	00 00 00 
    d81a:	e9 bc fa ff ff       	jmp    d2db <dlmalloc+0x10b>
    d81f:	48 8b 42 10          	mov    0x10(%rdx),%rax
    d823:	48 3b 05 2e d2 01 00 	cmp    0x1d22e(%rip),%rax        # 2aa58 <_gm_+0x18>
    d82a:	0f 83 57 06 00 00    	jae    de87 <dlmalloc+0xcb7>
    d830:	e8 02 4d 00 00       	call   12537 <abort>
    d835:	0f 1f 00             	nopl   (%rax)
    d838:	44 8b 0d 05 d2 01 00 	mov    0x1d205(%rip),%r9d        # 2aa44 <_gm_+0x4>
    d83f:	45 85 c9             	test   %r9d,%r9d
    d842:	0f 84 71 fb ff ff    	je     d3b9 <dlmalloc+0x1e9>
    d848:	44 89 c8             	mov    %r9d,%eax
    d84b:	f7 d8                	neg    %eax
    d84d:	44 21 c8             	and    %r9d,%eax
    d850:	f3 0f bc c0          	tzcnt  %eax,%eax
    d854:	49 8b 84 c5 58 02 00 	mov    0x258(%r13,%rax,8),%rax
    d85b:	00 
    d85c:	48 8b 78 08          	mov    0x8(%rax),%rdi
    d860:	48 89 c3             	mov    %rax,%rbx
    d863:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    d867:	4c 29 e7             	sub    %r12,%rdi
    d86a:	eb 1d                	jmp    d889 <dlmalloc+0x6b9>
    d86c:	0f 1f 40 00          	nopl   0x0(%rax)
    d870:	48 8b 41 08          	mov    0x8(%rcx),%rax
    d874:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    d878:	4c 29 e0             	sub    %r12,%rax
    d87b:	48 39 f8             	cmp    %rdi,%rax
    d87e:	73 06                	jae    d886 <dlmalloc+0x6b6>
    d880:	48 89 c7             	mov    %rax,%rdi
    d883:	48 89 cb             	mov    %rcx,%rbx
    d886:	48 89 c8             	mov    %rcx,%rax
    d889:	48 8b 48 20          	mov    0x20(%rax),%rcx
    d88d:	48 85 c9             	test   %rcx,%rcx
    d890:	75 de                	jne    d870 <dlmalloc+0x6a0>
    d892:	48 8b 48 28          	mov    0x28(%rax),%rcx
    d896:	48 85 c9             	test   %rcx,%rcx
    d899:	75 d5                	jne    d870 <dlmalloc+0x6a0>
    d89b:	4c 8b 1d b6 d1 01 00 	mov    0x1d1b6(%rip),%r11        # 2aa58 <_gm_+0x18>
    d8a2:	4c 39 db             	cmp    %r11,%rbx
    d8a5:	72 89                	jb     d830 <dlmalloc+0x660>
    d8a7:	4e 8d 14 23          	lea    (%rbx,%r12,1),%r10
    d8ab:	4c 39 d3             	cmp    %r10,%rbx
    d8ae:	73 80                	jae    d830 <dlmalloc+0x660>
    d8b0:	4c 8b 43 18          	mov    0x18(%rbx),%r8
    d8b4:	4c 8b 73 30          	mov    0x30(%rbx),%r14
    d8b8:	49 39 d8             	cmp    %rbx,%r8
    d8bb:	0f 84 36 0d 00 00    	je     e5f7 <dlmalloc+0x1427>
    d8c1:	48 8b 43 10          	mov    0x10(%rbx),%rax
    d8c5:	4c 39 d8             	cmp    %r11,%rax
    d8c8:	0f 82 62 ff ff ff    	jb     d830 <dlmalloc+0x660>
    d8ce:	48 39 58 18          	cmp    %rbx,0x18(%rax)
    d8d2:	0f 85 58 ff ff ff    	jne    d830 <dlmalloc+0x660>
    d8d8:	49 39 58 10          	cmp    %rbx,0x10(%r8)
    d8dc:	0f 85 4e ff ff ff    	jne    d830 <dlmalloc+0x660>
    d8e2:	4c 89 40 18          	mov    %r8,0x18(%rax)
    d8e6:	49 89 40 10          	mov    %rax,0x10(%r8)
    d8ea:	4d 85 f6             	test   %r14,%r14
    d8ed:	74 71                	je     d960 <dlmalloc+0x790>
    d8ef:	8b 4b 38             	mov    0x38(%rbx),%ecx
    d8f2:	48 89 c8             	mov    %rcx,%rax
    d8f5:	49 39 9c cd 58 02 00 	cmp    %rbx,0x258(%r13,%rcx,8)
    d8fc:	00 
    d8fd:	0f 84 14 10 00 00    	je     e917 <dlmalloc+0x1747>
    d903:	4d 39 de             	cmp    %r11,%r14
    d906:	0f 82 24 ff ff ff    	jb     d830 <dlmalloc+0x660>
    d90c:	49 39 5e 20          	cmp    %rbx,0x20(%r14)
    d910:	0f 84 00 11 00 00    	je     ea16 <dlmalloc+0x1846>
    d916:	4d 89 46 28          	mov    %r8,0x28(%r14)
    d91a:	4d 85 c0             	test   %r8,%r8
    d91d:	74 41                	je     d960 <dlmalloc+0x790>
    d91f:	4d 39 d8             	cmp    %r11,%r8
    d922:	0f 82 08 ff ff ff    	jb     d830 <dlmalloc+0x660>
    d928:	48 8b 43 20          	mov    0x20(%rbx),%rax
    d92c:	4d 89 70 30          	mov    %r14,0x30(%r8)
    d930:	48 85 c0             	test   %rax,%rax
    d933:	74 11                	je     d946 <dlmalloc+0x776>
    d935:	4c 39 d8             	cmp    %r11,%rax
    d938:	0f 82 f2 fe ff ff    	jb     d830 <dlmalloc+0x660>
    d93e:	49 89 40 20          	mov    %rax,0x20(%r8)
    d942:	4c 89 40 30          	mov    %r8,0x30(%rax)
    d946:	48 8b 43 28          	mov    0x28(%rbx),%rax
    d94a:	48 85 c0             	test   %rax,%rax
    d94d:	74 11                	je     d960 <dlmalloc+0x790>
    d94f:	4c 39 d8             	cmp    %r11,%rax
    d952:	0f 82 d8 fe ff ff    	jb     d830 <dlmalloc+0x660>
    d958:	49 89 40 28          	mov    %rax,0x28(%r8)
    d95c:	4c 89 40 30          	mov    %r8,0x30(%rax)
    d960:	48 8b 05 99 d4 01 00 	mov    0x1d499(%rip),%rax        # 2ae00 <mparams>
    d967:	4c 31 e8             	xor    %r13,%rax
    d96a:	48 83 ff 1f          	cmp    $0x1f,%rdi
    d96e:	0f 86 d2 0d 00 00    	jbe    e746 <dlmalloc+0x1576>
    d974:	4c 89 e1             	mov    %r12,%rcx
    d977:	48 83 c9 03          	or     $0x3,%rcx
    d97b:	48 89 4b 08          	mov    %rcx,0x8(%rbx)
    d97f:	49 89 02             	mov    %rax,(%r10)
    d982:	48 89 f8             	mov    %rdi,%rax
    d985:	48 83 c8 01          	or     $0x1,%rax
    d989:	49 89 42 08          	mov    %rax,0x8(%r10)
    d98d:	49 89 3c 3a          	mov    %rdi,(%r10,%rdi,1)
    d991:	48 85 f6             	test   %rsi,%rsi
    d994:	74 46                	je     d9dc <dlmalloc+0x80c>
    d996:	48 c1 ee 03          	shr    $0x3,%rsi
    d99a:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    d9a0:	48 8b 05 b9 d0 01 00 	mov    0x1d0b9(%rip),%rax        # 2aa60 <_gm_+0x20>
    d9a7:	48 89 f1             	mov    %rsi,%rcx
    d9aa:	8d 74 36 09          	lea    0x9(%rsi,%rsi,1),%esi
    d9ae:	41 d3 e0             	shl    %cl,%r8d
    d9b1:	4d 8d 4c f5 00       	lea    0x0(%r13,%rsi,8),%r9
    d9b6:	44 85 c2             	test   %r8d,%edx
    d9b9:	0f 84 79 0f 00 00    	je     e938 <dlmalloc+0x1768>
    d9bf:	49 8b 51 10          	mov    0x10(%r9),%rdx
    d9c3:	4c 39 da             	cmp    %r11,%rdx
    d9c6:	0f 82 64 fe ff ff    	jb     d830 <dlmalloc+0x660>
    d9cc:	49 89 41 10          	mov    %rax,0x10(%r9)
    d9d0:	48 89 42 18          	mov    %rax,0x18(%rdx)
    d9d4:	48 89 50 10          	mov    %rdx,0x10(%rax)
    d9d8:	4c 89 48 18          	mov    %r9,0x18(%rax)
    d9dc:	48 89 3d 65 d0 01 00 	mov    %rdi,0x1d065(%rip)        # 2aa48 <_gm_+0x8>
    d9e3:	4c 89 15 76 d0 01 00 	mov    %r10,0x1d076(%rip)        # 2aa60 <_gm_+0x20>
    d9ea:	48 83 c3 10          	add    $0x10,%rbx
    d9ee:	0f 85 b3 f8 ff ff    	jne    d2a7 <dlmalloc+0xd7>
    d9f4:	48 8b 35 4d d0 01 00 	mov    0x1d04d(%rip),%rsi        # 2aa48 <_gm_+0x8>
    d9fb:	e9 b0 f9 ff ff       	jmp    d3b0 <dlmalloc+0x1e0>
    da00:	0f b3 ca             	btr    %ecx,%edx
    da03:	89 15 37 d0 01 00    	mov    %edx,0x1d037(%rip)        # 2aa40 <_gm_>
    da09:	e9 6d f8 ff ff       	jmp    d27b <dlmalloc+0xab>
    da0e:	66 90                	xchg   %ax,%ax
    da10:	3d ff ff 00 00       	cmp    $0xffff,%eax
    da15:	0f 86 85 07 00 00    	jbe    e1a0 <dlmalloc+0xfd0>
    da1b:	48 8b 15 6e d3 01 00 	mov    0x1d36e(%rip),%rdx        # 2ad90 <_gm_+0x350>
    da22:	4d 89 e3             	mov    %r12,%r11
    da25:	41 ba 1f 00 00 00    	mov    $0x1f,%r10d
    da2b:	48 85 d2             	test   %rdx,%rdx
    da2e:	0f 85 d4 fb ff ff    	jne    d608 <dlmalloc+0x438>
    da34:	e9 77 f9 ff ff       	jmp    d3b0 <dlmalloc+0x1e0>
    da39:	d3 e7                	shl    %cl,%edi
    da3b:	f7 d7                	not    %edi
    da3d:	21 d7                	and    %edx,%edi
    da3f:	89 3d fb cf 01 00    	mov    %edi,0x1cffb(%rip)        # 2aa40 <_gm_>
    da45:	e9 3d fa ff ff       	jmp    d487 <dlmalloc+0x2b7>
    da4a:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    da4f:	44 89 d1             	mov    %r10d,%ecx
    da52:	d3 e0                	shl    %cl,%eax
    da54:	44 21 c8             	and    %r9d,%eax
    da57:	0f 84 53 f9 ff ff    	je     d3b0 <dlmalloc+0x1e0>
    da5d:	89 c2                	mov    %eax,%edx
    da5f:	31 db                	xor    %ebx,%ebx
    da61:	f7 da                	neg    %edx
    da63:	21 d0                	and    %edx,%eax
    da65:	f3 0f bc c0          	tzcnt  %eax,%eax
    da69:	49 8b 8c c5 58 02 00 	mov    0x258(%r13,%rax,8),%rcx
    da70:	00 
    da71:	48 85 c9             	test   %rcx,%rcx
    da74:	0f 85 f9 fb ff ff    	jne    d673 <dlmalloc+0x4a3>
    da7a:	e9 31 f9 ff ff       	jmp    d3b0 <dlmalloc+0x1e0>
    da7f:	90                   	nop
    da80:	48 85 d2             	test   %rdx,%rdx
    da83:	0f 84 74 12 00 00    	je     ecfd <dlmalloc+0x1b2d>
    da89:	48 8b 05 80 d3 01 00 	mov    0x1d380(%rip),%rax        # 2ae10 <mparams+0x10>
    da90:	49 8d 4c 04 5f       	lea    0x5f(%r12,%rax,1),%rcx
    da95:	48 f7 d8             	neg    %rax
    da98:	48 21 c1             	and    %rax,%rcx
    da9b:	49 39 cc             	cmp    %rcx,%r12
    da9e:	0f 83 99 f8 ff ff    	jae    d33d <dlmalloc+0x16d>
    daa4:	48 8b 05 fd d2 01 00 	mov    0x1d2fd(%rip),%rax        # 2ada8 <_gm_+0x368>
    daab:	48 85 c0             	test   %rax,%rax
    daae:	74 1d                	je     dacd <dlmalloc+0x8fd>
    dab0:	48 8b 15 e1 d2 01 00 	mov    0x1d2e1(%rip),%rdx        # 2ad98 <_gm_+0x358>
    dab7:	48 8d 34 11          	lea    (%rcx,%rdx,1),%rsi
    dabb:	48 39 f2             	cmp    %rsi,%rdx
    dabe:	0f 83 79 f8 ff ff    	jae    d33d <dlmalloc+0x16d>
    dac4:	48 39 f0             	cmp    %rsi,%rax
    dac7:	0f 82 70 f8 ff ff    	jb     d33d <dlmalloc+0x16d>
    dacd:	f6 05 dc d2 01 00 04 	testb  $0x4,0x1d2dc(%rip)        # 2adb0 <_gm_+0x370>
    dad4:	0f 85 b9 00 00 00    	jne    db93 <dlmalloc+0x9c3>
    dada:	48 8b 15 87 cf 01 00 	mov    0x1cf87(%rip),%rdx        # 2aa68 <_gm_+0x28>
    dae1:	48 85 d2             	test   %rdx,%rdx
    dae4:	0f 84 b6 05 00 00    	je     e0a0 <dlmalloc+0xed0>
    daea:	4c 8d 35 c7 d2 01 00 	lea    0x1d2c7(%rip),%r14        # 2adb8 <_gm_+0x378>
    daf1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    daf8:	49 8b 06             	mov    (%r14),%rax
    dafb:	48 39 c2             	cmp    %rax,%rdx
    dafe:	72 0d                	jb     db0d <dlmalloc+0x93d>
    db00:	49 03 46 08          	add    0x8(%r14),%rax
    db04:	48 39 c2             	cmp    %rax,%rdx
    db07:	0f 82 44 07 00 00    	jb     e251 <dlmalloc+0x1081>
    db0d:	4d 8b 76 10          	mov    0x10(%r14),%r14
    db11:	4d 85 f6             	test   %r14,%r14
    db14:	75 e2                	jne    daf8 <dlmalloc+0x928>
    db16:	b8 01 00 00 00       	mov    $0x1,%eax
    db1b:	87 05 0f d3 01 00    	xchg   %eax,0x1d30f(%rip)        # 2ae30 <malloc_global_mutex>
    db21:	85 c0                	test   %eax,%eax
    db23:	0f 84 8a 05 00 00    	je     e0b3 <dlmalloc+0xee3>
    db29:	45 31 f6             	xor    %r14d,%r14d
    db2c:	48 8d 15 fd d2 01 00 	lea    0x1d2fd(%rip),%rdx        # 2ae30 <malloc_global_mutex>
    db33:	be 01 00 00 00       	mov    $0x1,%esi
    db38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    db3f:	00 
    db40:	8b 02                	mov    (%rdx),%eax
    db42:	85 c0                	test   %eax,%eax
    db44:	75 fa                	jne    db40 <dlmalloc+0x970>
    db46:	89 f0                	mov    %esi,%eax
    db48:	87 05 e2 d2 01 00    	xchg   %eax,0x1d2e2(%rip)        # 2ae30 <malloc_global_mutex>
    db4e:	85 c0                	test   %eax,%eax
    db50:	75 ee                	jne    db40 <dlmalloc+0x970>
    db52:	4d 85 f6             	test   %r14,%r14
    db55:	0f 84 58 05 00 00    	je     e0b3 <dlmalloc+0xee3>
    db5b:	48 8b 05 ae d2 01 00 	mov    0x1d2ae(%rip),%rax        # 2ae10 <mparams+0x10>
    db62:	4c 8d 78 5f          	lea    0x5f(%rax),%r15
    db66:	4c 2b 3d e3 ce 01 00 	sub    0x1cee3(%rip),%r15        # 2aa50 <_gm_+0x10>
    db6d:	48 f7 d8             	neg    %rax
    db70:	4d 01 e7             	add    %r12,%r15
    db73:	49 21 c7             	and    %rax,%r15
    db76:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
    db7d:	ff ff 7f 
    db80:	4c 39 f8             	cmp    %r15,%rax
    db83:	0f 83 73 06 00 00    	jae    e1fc <dlmalloc+0x102c>
    db89:	c7 05 9d d2 01 00 00 	movl   $0x0,0x1d29d(%rip)        # 2ae30 <malloc_global_mutex>
    db90:	00 00 00 
    db93:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
    db9a:	ff ff 7f 
    db9d:	48 39 c8             	cmp    %rcx,%rax
    dba0:	73 16                	jae    dbb8 <dlmalloc+0x9e8>
    dba2:	e8 29 34 00 00       	call   10fd0 <__errno_location>
    dba7:	31 db                	xor    %ebx,%ebx
    dba9:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
    dbaf:	e9 1a f7 ff ff       	jmp    d2ce <dlmalloc+0xfe>
    dbb4:	0f 1f 40 00          	nopl   0x0(%rax)
    dbb8:	b8 01 00 00 00       	mov    $0x1,%eax
    dbbd:	87 05 6d d2 01 00    	xchg   %eax,0x1d26d(%rip)        # 2ae30 <malloc_global_mutex>
    dbc3:	48 8d 15 66 d2 01 00 	lea    0x1d266(%rip),%rdx        # 2ae30 <malloc_global_mutex>
    dbca:	be 01 00 00 00       	mov    $0x1,%esi
    dbcf:	85 c0                	test   %eax,%eax
    dbd1:	0f 85 11 03 00 00    	jne    dee8 <dlmalloc+0xd18>
    dbd7:	48 89 cf             	mov    %rcx,%rdi
    dbda:	e8 11 eb ff ff       	call   c6f0 <sbrk>
    dbdf:	31 ff                	xor    %edi,%edi
    dbe1:	48 89 c3             	mov    %rax,%rbx
    dbe4:	e8 07 eb ff ff       	call   c6f0 <sbrk>
    dbe9:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
    dbed:	0f 95 c1             	setne  %cl
    dbf0:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    dbf4:	c7 05 32 d2 01 00 00 	movl   $0x0,0x1d232(%rip)        # 2ae30 <malloc_global_mutex>
    dbfb:	00 00 00 
    dbfe:	0f 95 c2             	setne  %dl
    dc01:	84 d1                	test   %dl,%cl
    dc03:	74 9d                	je     dba2 <dlmalloc+0x9d2>
    dc05:	48 39 c3             	cmp    %rax,%rbx
    dc08:	73 98                	jae    dba2 <dlmalloc+0x9d2>
    dc0a:	48 29 d8             	sub    %rbx,%rax
    dc0d:	49 89 c7             	mov    %rax,%r15
    dc10:	49 8d 44 24 50       	lea    0x50(%r12),%rax
    dc15:	4c 39 f8             	cmp    %r15,%rax
    dc18:	73 88                	jae    dba2 <dlmalloc+0x9d2>
    dc1a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    dc20:	48 8b 05 71 d1 01 00 	mov    0x1d171(%rip),%rax        # 2ad98 <_gm_+0x358>
    dc27:	4c 01 f8             	add    %r15,%rax
    dc2a:	48 39 05 6f d1 01 00 	cmp    %rax,0x1d16f(%rip)        # 2ada0 <_gm_+0x360>
    dc31:	48 89 05 60 d1 01 00 	mov    %rax,0x1d160(%rip)        # 2ad98 <_gm_+0x358>
    dc38:	73 07                	jae    dc41 <dlmalloc+0xa71>
    dc3a:	48 89 05 5f d1 01 00 	mov    %rax,0x1d15f(%rip)        # 2ada0 <_gm_+0x360>
    dc41:	48 8b 35 20 ce 01 00 	mov    0x1ce20(%rip),%rsi        # 2aa68 <_gm_+0x28>
    dc48:	48 8d 05 69 d1 01 00 	lea    0x1d169(%rip),%rax        # 2adb8 <_gm_+0x378>
    dc4f:	48 85 f6             	test   %rsi,%rsi
    dc52:	75 15                	jne    dc69 <dlmalloc+0xa99>
    dc54:	e9 a7 02 00 00       	jmp    df00 <dlmalloc+0xd30>
    dc59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    dc60:	48 8b 40 10          	mov    0x10(%rax),%rax
    dc64:	48 85 c0             	test   %rax,%rax
    dc67:	74 27                	je     dc90 <dlmalloc+0xac0>
    dc69:	48 8b 10             	mov    (%rax),%rdx
    dc6c:	48 8b 48 08          	mov    0x8(%rax),%rcx
    dc70:	48 8d 3c 0a          	lea    (%rdx,%rcx,1),%rdi
    dc74:	48 39 fb             	cmp    %rdi,%rbx
    dc77:	75 e7                	jne    dc60 <dlmalloc+0xa90>
    dc79:	f6 40 18 08          	testb  $0x8,0x18(%rax)
    dc7d:	75 11                	jne    dc90 <dlmalloc+0xac0>
    dc7f:	48 39 d6             	cmp    %rdx,%rsi
    dc82:	72 0c                	jb     dc90 <dlmalloc+0xac0>
    dc84:	48 39 de             	cmp    %rbx,%rsi
    dc87:	0f 82 ed 09 00 00    	jb     e67a <dlmalloc+0x14aa>
    dc8d:	0f 1f 00             	nopl   (%rax)
    dc90:	48 3b 1d c1 cd 01 00 	cmp    0x1cdc1(%rip),%rbx        # 2aa58 <_gm_+0x18>
    dc97:	73 07                	jae    dca0 <dlmalloc+0xad0>
    dc99:	48 89 1d b8 cd 01 00 	mov    %rbx,0x1cdb8(%rip)        # 2aa58 <_gm_+0x18>
    dca0:	4a 8d 14 3b          	lea    (%rbx,%r15,1),%rdx
    dca4:	48 8d 05 0d d1 01 00 	lea    0x1d10d(%rip),%rax        # 2adb8 <_gm_+0x378>
    dcab:	eb 10                	jmp    dcbd <dlmalloc+0xaed>
    dcad:	0f 1f 00             	nopl   (%rax)
    dcb0:	48 8b 40 10          	mov    0x10(%rax),%rax
    dcb4:	48 85 c0             	test   %rax,%rax
    dcb7:	0f 84 b3 05 00 00    	je     e270 <dlmalloc+0x10a0>
    dcbd:	48 39 10             	cmp    %rdx,(%rax)
    dcc0:	75 ee                	jne    dcb0 <dlmalloc+0xae0>
    dcc2:	44 8b 48 18          	mov    0x18(%rax),%r9d
    dcc6:	49 89 d8             	mov    %rbx,%r8
    dcc9:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
    dccd:	41 83 e0 0f          	and    $0xf,%r8d
    dcd1:	41 83 e1 08          	and    $0x8,%r9d
    dcd5:	0f 84 a5 05 00 00    	je     e280 <dlmalloc+0x10b0>
    dcdb:	48 8d 05 d6 d0 01 00 	lea    0x1d0d6(%rip),%rax        # 2adb8 <_gm_+0x378>
    dce2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    dce8:	48 8b 10             	mov    (%rax),%rdx
    dceb:	48 39 d6             	cmp    %rdx,%rsi
    dcee:	72 09                	jb     dcf9 <dlmalloc+0xb29>
    dcf0:	48 03 50 08          	add    0x8(%rax),%rdx
    dcf4:	48 39 d6             	cmp    %rdx,%rsi
    dcf7:	72 19                	jb     dd12 <dlmalloc+0xb42>
    dcf9:	48 8b 40 10          	mov    0x10(%rax),%rax
    dcfd:	48 85 c0             	test   %rax,%rax
    dd00:	75 e6                	jne    dce8 <dlmalloc+0xb18>
    dd02:	48 8b 14 25 08 00 00 	mov    0x8,%rdx
    dd09:	00 
    dd0a:	48 03 14 25 00 00 00 	add    0x0,%rdx
    dd11:	00 
    dd12:	48 8d 42 b1          	lea    -0x4f(%rdx),%rax
    dd16:	48 c7 c1 a1 ff ff ff 	mov    $0xffffffffffffffa1,%rcx
    dd1d:	a8 0f                	test   $0xf,%al
    dd1f:	74 0a                	je     dd2b <dlmalloc+0xb5b>
    dd21:	48 f7 d8             	neg    %rax
    dd24:	83 e0 0f             	and    $0xf,%eax
    dd27:	48 8d 48 a1          	lea    -0x5f(%rax),%rcx
    dd2b:	48 01 d1             	add    %rdx,%rcx
    dd2e:	48 8d 46 20          	lea    0x20(%rsi),%rax
    dd32:	4d 8d 4f b0          	lea    -0x50(%r15),%r9
    dd36:	48 39 c1             	cmp    %rax,%rcx
    dd39:	48 0f 42 ce          	cmovb  %rsi,%rcx
    dd3d:	4c 8d 51 10          	lea    0x10(%rcx),%r10
    dd41:	4d 85 c0             	test   %r8,%r8
    dd44:	0f 84 86 02 00 00    	je     dfd0 <dlmalloc+0xe00>
    dd4a:	48 f7 df             	neg    %rdi
    dd4d:	4c 89 c8             	mov    %r9,%rax
    dd50:	83 e7 0f             	and    $0xf,%edi
    dd53:	4c 8d 04 3b          	lea    (%rbx,%rdi,1),%r8
    dd57:	48 29 f8             	sub    %rdi,%rax
    dd5a:	48 89 05 ef cc 01 00 	mov    %rax,0x1ccef(%rip)        # 2aa50 <_gm_+0x10>
    dd61:	48 83 c8 01          	or     $0x1,%rax
    dd65:	f3 0f 6f 15 4b d0 01 	movdqu 0x1d04b(%rip),%xmm2        # 2adb8 <_gm_+0x378>
    dd6c:	00 
    dd6d:	4c 89 05 f4 cc 01 00 	mov    %r8,0x1ccf4(%rip)        # 2aa68 <_gm_+0x28>
    dd74:	49 89 40 08          	mov    %rax,0x8(%r8)
    dd78:	48 8b 05 a1 d0 01 00 	mov    0x1d0a1(%rip),%rax        # 2ae20 <mparams+0x20>
    dd7f:	4a c7 44 0b 08 50 00 	movq   $0x50,0x8(%rbx,%r9,1)
    dd86:	00 00 
    dd88:	48 89 05 e1 cc 01 00 	mov    %rax,0x1cce1(%rip)        # 2aa70 <_gm_+0x30>
    dd8f:	48 8b 05 6a d0 01 00 	mov    0x1d06a(%rip),%rax        # 2ae00 <mparams>
    dd96:	0f 11 51 10          	movups %xmm2,0x10(%rcx)
    dd9a:	f3 0f 6f 1d 26 d0 01 	movdqu 0x1d026(%rip),%xmm3        # 2adc8 <_gm_+0x388>
    dda1:	00 
    dda2:	4c 31 e8             	xor    %r13,%rax
    dda5:	48 c7 41 08 33 00 00 	movq   $0x33,0x8(%rcx)
    ddac:	00 
    ddad:	48 89 41 30          	mov    %rax,0x30(%rcx)
    ddb1:	48 8d 41 38          	lea    0x38(%rcx),%rax
    ddb5:	48 89 c7             	mov    %rax,%rdi
    ddb8:	48 8d 41 40          	lea    0x40(%rcx),%rax
    ddbc:	0f 11 59 20          	movups %xmm3,0x20(%rcx)
    ddc0:	48 f7 d7             	not    %rdi
    ddc3:	48 89 1d ee cf 01 00 	mov    %rbx,0x1cfee(%rip)        # 2adb8 <_gm_+0x378>
    ddca:	48 01 d7             	add    %rdx,%rdi
    ddcd:	4c 89 3d ec cf 01 00 	mov    %r15,0x1cfec(%rip)        # 2adc0 <_gm_+0x380>
    ddd4:	48 c1 ef 03          	shr    $0x3,%rdi
    ddd8:	4c 89 15 e9 cf 01 00 	mov    %r10,0x1cfe9(%rip)        # 2adc8 <_gm_+0x388>
    dddf:	c7 05 e7 cf 01 00 00 	movl   $0x0,0x1cfe7(%rip)        # 2add0 <_gm_+0x390>
    dde6:	00 00 00 
    dde9:	83 e7 01             	and    $0x1,%edi
    ddec:	48 c7 41 38 0b 00 00 	movq   $0xb,0x38(%rcx)
    ddf3:	00 
    ddf4:	48 39 d0             	cmp    %rdx,%rax
    ddf7:	73 2f                	jae    de28 <dlmalloc+0xc58>
    ddf9:	48 85 ff             	test   %rdi,%rdi
    ddfc:	74 12                	je     de10 <dlmalloc+0xc40>
    ddfe:	48 c7 00 0b 00 00 00 	movq   $0xb,(%rax)
    de05:	48 8d 41 48          	lea    0x48(%rcx),%rax
    de09:	48 39 d0             	cmp    %rdx,%rax
    de0c:	73 1a                	jae    de28 <dlmalloc+0xc58>
    de0e:	66 90                	xchg   %ax,%ax
    de10:	48 c7 00 0b 00 00 00 	movq   $0xb,(%rax)
    de17:	48 83 c0 10          	add    $0x10,%rax
    de1b:	48 c7 40 f8 0b 00 00 	movq   $0xb,-0x8(%rax)
    de22:	00 
    de23:	48 39 d0             	cmp    %rdx,%rax
    de26:	72 e8                	jb     de10 <dlmalloc+0xc40>
    de28:	48 39 ce             	cmp    %rcx,%rsi
    de2b:	0f 84 5f 02 00 00    	je     e090 <dlmalloc+0xec0>
    de31:	48 89 ca             	mov    %rcx,%rdx
    de34:	48 83 61 08 fe       	andq   $0xfffffffffffffffe,0x8(%rcx)
    de39:	48 29 f2             	sub    %rsi,%rdx
    de3c:	48 89 d0             	mov    %rdx,%rax
    de3f:	48 83 c8 01          	or     $0x1,%rax
    de43:	48 89 46 08          	mov    %rax,0x8(%rsi)
    de47:	48 89 11             	mov    %rdx,(%rcx)
    de4a:	48 89 d1             	mov    %rdx,%rcx
    de4d:	48 c1 e9 03          	shr    $0x3,%rcx
    de51:	48 81 fa ff 00 00 00 	cmp    $0xff,%rdx
    de58:	0f 87 92 01 00 00    	ja     dff0 <dlmalloc+0xe20>
    de5e:	8d 44 09 09          	lea    0x9(%rcx,%rcx,1),%eax
    de62:	8b 3d d8 cb 01 00    	mov    0x1cbd8(%rip),%edi        # 2aa40 <_gm_>
    de68:	49 8d 54 c5 00       	lea    0x0(%r13,%rax,8),%rdx
    de6d:	b8 01 00 00 00       	mov    $0x1,%eax
    de72:	d3 e0                	shl    %cl,%eax
    de74:	85 c7                	test   %eax,%edi
    de76:	0f 85 a3 f9 ff ff    	jne    d81f <dlmalloc+0x64f>
    de7c:	09 c7                	or     %eax,%edi
    de7e:	48 89 d0             	mov    %rdx,%rax
    de81:	89 3d b9 cb 01 00    	mov    %edi,0x1cbb9(%rip)        # 2aa40 <_gm_>
    de87:	48 89 72 10          	mov    %rsi,0x10(%rdx)
    de8b:	48 89 70 18          	mov    %rsi,0x18(%rax)
    de8f:	48 89 56 18          	mov    %rdx,0x18(%rsi)
    de93:	48 89 46 10          	mov    %rax,0x10(%rsi)
    de97:	48 8b 05 b2 cb 01 00 	mov    0x1cbb2(%rip),%rax        # 2aa50 <_gm_+0x10>
    de9e:	49 39 c4             	cmp    %rax,%r12
    dea1:	0f 83 fb fc ff ff    	jae    dba2 <dlmalloc+0x9d2>
    dea7:	48 8b 1d ba cb 01 00 	mov    0x1cbba(%rip),%rbx        # 2aa68 <_gm_+0x28>
    deae:	4c 29 e0             	sub    %r12,%rax
    deb1:	4c 33 2d 48 cf 01 00 	xor    0x1cf48(%rip),%r13        # 2ae00 <mparams>
    deb8:	48 89 05 91 cb 01 00 	mov    %rax,0x1cb91(%rip)        # 2aa50 <_gm_+0x10>
    debf:	48 83 c8 01          	or     $0x1,%rax
    dec3:	4a 8d 14 23          	lea    (%rbx,%r12,1),%rdx
    dec7:	49 83 cc 03          	or     $0x3,%r12
    decb:	48 89 15 96 cb 01 00 	mov    %rdx,0x1cb96(%rip)        # 2aa68 <_gm_+0x28>
    ded2:	48 89 42 08          	mov    %rax,0x8(%rdx)
    ded6:	4c 89 63 08          	mov    %r12,0x8(%rbx)
    deda:	4c 89 2a             	mov    %r13,(%rdx)
    dedd:	e9 20 f5 ff ff       	jmp    d402 <dlmalloc+0x232>
    dee2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    dee8:	8b 02                	mov    (%rdx),%eax
    deea:	85 c0                	test   %eax,%eax
    deec:	75 fa                	jne    dee8 <dlmalloc+0xd18>
    deee:	89 f0                	mov    %esi,%eax
    def0:	87 05 3a cf 01 00    	xchg   %eax,0x1cf3a(%rip)        # 2ae30 <malloc_global_mutex>
    def6:	85 c0                	test   %eax,%eax
    def8:	75 ee                	jne    dee8 <dlmalloc+0xd18>
    defa:	e9 d8 fc ff ff       	jmp    dbd7 <dlmalloc+0xa07>
    deff:	90                   	nop
    df00:	48 8b 05 51 cb 01 00 	mov    0x1cb51(%rip),%rax        # 2aa58 <_gm_+0x18>
    df07:	48 85 c0             	test   %rax,%rax
    df0a:	74 05                	je     df11 <dlmalloc+0xd41>
    df0c:	48 39 c3             	cmp    %rax,%rbx
    df0f:	73 07                	jae    df18 <dlmalloc+0xd48>
    df11:	48 89 1d 40 cb 01 00 	mov    %rbx,0x1cb40(%rip)        # 2aa58 <_gm_+0x18>
    df18:	48 8b 05 e1 ce 01 00 	mov    0x1cee1(%rip),%rax        # 2ae00 <mparams>
    df1f:	48 89 1d 92 ce 01 00 	mov    %rbx,0x1ce92(%rip)        # 2adb8 <_gm_+0x378>
    df26:	4c 89 3d 93 ce 01 00 	mov    %r15,0x1ce93(%rip)        # 2adc0 <_gm_+0x380>
    df2d:	c7 05 99 ce 01 00 00 	movl   $0x0,0x1ce99(%rip)        # 2add0 <_gm_+0x390>
    df34:	00 00 00 
    df37:	48 c7 05 36 cb 01 00 	movq   $0xffffffffffffffff,0x1cb36(%rip)        # 2aa78 <_gm_+0x38>
    df3e:	ff ff ff ff 
    df42:	48 89 05 37 cb 01 00 	mov    %rax,0x1cb37(%rip)        # 2aa80 <_gm_+0x40>
    df49:	48 8d 05 38 cb 01 00 	lea    0x1cb38(%rip),%rax        # 2aa88 <_gm_+0x48>
    df50:	48 8d 90 00 02 00 00 	lea    0x200(%rax),%rdx
    df57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    df5e:	00 00 
    df60:	66 48 0f 6e c0       	movq   %rax,%xmm0
    df65:	48 83 c0 10          	add    $0x10,%rax
    df69:	66 0f 6c c0          	punpcklqdq %xmm0,%xmm0
    df6d:	0f 11 00             	movups %xmm0,(%rax)
    df70:	48 39 d0             	cmp    %rdx,%rax
    df73:	75 eb                	jne    df60 <dlmalloc+0xd90>
    df75:	49 83 ef 50          	sub    $0x50,%r15
    df79:	48 8d 53 10          	lea    0x10(%rbx),%rdx
    df7d:	f6 c3 0f             	test   $0xf,%bl
    df80:	0f 84 aa 02 00 00    	je     e230 <dlmalloc+0x1060>
    df86:	48 f7 da             	neg    %rdx
    df89:	4c 89 f8             	mov    %r15,%rax
    df8c:	83 e2 0f             	and    $0xf,%edx
    df8f:	48 8d 0c 13          	lea    (%rbx,%rdx,1),%rcx
    df93:	48 29 d0             	sub    %rdx,%rax
    df96:	48 89 c2             	mov    %rax,%rdx
    df99:	48 89 0d c8 ca 01 00 	mov    %rcx,0x1cac8(%rip)        # 2aa68 <_gm_+0x28>
    dfa0:	48 83 ca 01          	or     $0x1,%rdx
    dfa4:	48 89 05 a5 ca 01 00 	mov    %rax,0x1caa5(%rip)        # 2aa50 <_gm_+0x10>
    dfab:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    dfaf:	48 8b 15 6a ce 01 00 	mov    0x1ce6a(%rip),%rdx        # 2ae20 <mparams+0x20>
    dfb6:	4a c7 44 3b 08 50 00 	movq   $0x50,0x8(%rbx,%r15,1)
    dfbd:	00 00 
    dfbf:	48 89 15 aa ca 01 00 	mov    %rdx,0x1caaa(%rip)        # 2aa70 <_gm_+0x30>
    dfc6:	e9 d3 fe ff ff       	jmp    de9e <dlmalloc+0xcce>
    dfcb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    dfd0:	4c 89 c8             	mov    %r9,%rax
    dfd3:	49 89 d8             	mov    %rbx,%r8
    dfd6:	e9 7f fd ff ff       	jmp    dd5a <dlmalloc+0xb8a>
    dfdb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    dfe0:	48 83 ce 03          	or     $0x3,%rsi
    dfe4:	e9 b9 f5 ff ff       	jmp    d5a2 <dlmalloc+0x3d2>
    dfe9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    dff0:	48 89 d0             	mov    %rdx,%rax
    dff3:	48 c1 e8 08          	shr    $0x8,%rax
    dff7:	89 c1                	mov    %eax,%ecx
    dff9:	85 c0                	test   %eax,%eax
    dffb:	0f 84 60 03 00 00    	je     e361 <dlmalloc+0x1191>
    e001:	3d ff ff 00 00       	cmp    $0xffff,%eax
    e006:	0f 87 ad 05 00 00    	ja     e5b9 <dlmalloc+0x13e9>
    e00c:	0f bd c1             	bsr    %ecx,%eax
    e00f:	b9 26 00 00 00       	mov    $0x26,%ecx
    e014:	48 89 d3             	mov    %rdx,%rbx
    e017:	bf 1f 00 00 00       	mov    $0x1f,%edi
    e01c:	83 f0 1f             	xor    $0x1f,%eax
    e01f:	29 c1                	sub    %eax,%ecx
    e021:	29 c7                	sub    %eax,%edi
    e023:	48 d3 eb             	shr    %cl,%rbx
    e026:	48 89 d9             	mov    %rbx,%rcx
    e029:	83 e1 01             	and    $0x1,%ecx
    e02c:	8d 0c 79             	lea    (%rcx,%rdi,2),%ecx
    e02f:	bf 01 00 00 00       	mov    $0x1,%edi
    e034:	44 8d 41 4b          	lea    0x4b(%rcx),%r8d
    e038:	d3 e7                	shl    %cl,%edi
    e03a:	49 c1 e0 03          	shl    $0x3,%r8
    e03e:	8b 05 00 ca 01 00    	mov    0x1ca00(%rip),%eax        # 2aa44 <_gm_+0x4>
    e044:	66 48 0f 6e ce       	movq   %rsi,%xmm1
    e049:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e04d:	89 4e 38             	mov    %ecx,0x38(%rsi)
    e050:	66 0f 6c c9          	punpcklqdq %xmm1,%xmm1
    e054:	0f 11 46 20          	movups %xmm0,0x20(%rsi)
    e058:	85 f8                	test   %edi,%eax
    e05a:	0f 85 11 03 00 00    	jne    e371 <dlmalloc+0x11a1>
    e060:	09 f8                	or     %edi,%eax
    e062:	4d 01 e8             	add    %r13,%r8
    e065:	49 89 b4 cd 58 02 00 	mov    %rsi,0x258(%r13,%rcx,8)
    e06c:	00 
    e06d:	89 05 d1 c9 01 00    	mov    %eax,0x1c9d1(%rip)        # 2aa44 <_gm_+0x4>
    e073:	48 8b 05 d6 c9 01 00 	mov    0x1c9d6(%rip),%rax        # 2aa50 <_gm_+0x10>
    e07a:	4c 89 46 30          	mov    %r8,0x30(%rsi)
    e07e:	0f 11 4e 10          	movups %xmm1,0x10(%rsi)
    e082:	e9 17 fe ff ff       	jmp    de9e <dlmalloc+0xcce>
    e087:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    e08e:	00 00 
    e090:	48 8b 05 b9 c9 01 00 	mov    0x1c9b9(%rip),%rax        # 2aa50 <_gm_+0x10>
    e097:	e9 02 fe ff ff       	jmp    de9e <dlmalloc+0xcce>
    e09c:	0f 1f 40 00          	nopl   0x0(%rax)
    e0a0:	b8 01 00 00 00       	mov    $0x1,%eax
    e0a5:	87 05 85 cd 01 00    	xchg   %eax,0x1cd85(%rip)        # 2ae30 <malloc_global_mutex>
    e0ab:	85 c0                	test   %eax,%eax
    e0ad:	0f 85 76 fa ff ff    	jne    db29 <dlmalloc+0x959>
    e0b3:	31 ff                	xor    %edi,%edi
    e0b5:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    e0ba:	e8 31 e6 ff ff       	call   c6f0 <sbrk>
    e0bf:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    e0c4:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    e0c8:	49 89 c6             	mov    %rax,%r14
    e0cb:	0f 84 b8 fa ff ff    	je     db89 <dlmalloc+0x9b9>
    e0d1:	48 8b 15 30 cd 01 00 	mov    0x1cd30(%rip),%rdx        # 2ae08 <mparams+0x8>
    e0d8:	49 89 cf             	mov    %rcx,%r15
    e0db:	48 8d 42 ff          	lea    -0x1(%rdx),%rax
    e0df:	49 85 c6             	test   %rax,%r14
    e0e2:	74 0f                	je     e0f3 <dlmalloc+0xf23>
    e0e4:	4c 01 f0             	add    %r14,%rax
    e0e7:	48 f7 da             	neg    %rdx
    e0ea:	4d 29 f7             	sub    %r14,%r15
    e0ed:	48 21 d0             	and    %rdx,%rax
    e0f0:	49 01 c7             	add    %rax,%r15
    e0f3:	48 8b 05 9e cc 01 00 	mov    0x1cc9e(%rip),%rax        # 2ad98 <_gm_+0x358>
    e0fa:	4d 39 fc             	cmp    %r15,%r12
    e0fd:	0f 83 86 fa ff ff    	jae    db89 <dlmalloc+0x9b9>
    e103:	48 ba fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rdx
    e10a:	ff ff 7f 
    e10d:	4c 39 fa             	cmp    %r15,%rdx
    e110:	0f 82 73 fa ff ff    	jb     db89 <dlmalloc+0x9b9>
    e116:	48 8b 15 8b cc 01 00 	mov    0x1cc8b(%rip),%rdx        # 2ada8 <_gm_+0x368>
    e11d:	48 85 d2             	test   %rdx,%rdx
    e120:	74 16                	je     e138 <dlmalloc+0xf68>
    e122:	4a 8d 34 38          	lea    (%rax,%r15,1),%rsi
    e126:	48 39 f0             	cmp    %rsi,%rax
    e129:	0f 83 5a fa ff ff    	jae    db89 <dlmalloc+0x9b9>
    e12f:	48 39 f2             	cmp    %rsi,%rdx
    e132:	0f 82 51 fa ff ff    	jb     db89 <dlmalloc+0x9b9>
    e138:	4c 89 ff             	mov    %r15,%rdi
    e13b:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    e140:	e8 ab e5 ff ff       	call   c6f0 <sbrk>
    e145:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    e14a:	49 39 c6             	cmp    %rax,%r14
    e14d:	48 89 c3             	mov    %rax,%rbx
    e150:	74 3c                	je     e18e <dlmalloc+0xfbe>
    e152:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
    e156:	0f 84 2d fa ff ff    	je     db89 <dlmalloc+0x9b9>
    e15c:	49 8d 44 24 60       	lea    0x60(%r12),%rax
    e161:	49 39 c7             	cmp    %rax,%r15
    e164:	73 28                	jae    e18e <dlmalloc+0xfbe>
    e166:	48 8b 05 a3 cc 01 00 	mov    0x1cca3(%rip),%rax        # 2ae10 <mparams+0x10>
    e16d:	4d 8d 74 04 5f       	lea    0x5f(%r12,%rax,1),%r14
    e172:	48 f7 d8             	neg    %rax
    e175:	4d 29 fe             	sub    %r15,%r14
    e178:	49 21 c6             	and    %rax,%r14
    e17b:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
    e182:	ff ff 7f 
    e185:	4c 39 f0             	cmp    %r14,%rax
    e188:	0f 83 91 08 00 00    	jae    ea1f <dlmalloc+0x184f>
    e18e:	c7 05 98 cc 01 00 00 	movl   $0x0,0x1cc98(%rip)        # 2ae30 <malloc_global_mutex>
    e195:	00 00 00 
    e198:	e9 83 fa ff ff       	jmp    dc20 <dlmalloc+0xa50>
    e19d:	0f 1f 00             	nopl   (%rax)
    e1a0:	44 0f bd d0          	bsr    %eax,%r10d
    e1a4:	b9 26 00 00 00       	mov    $0x26,%ecx
    e1a9:	4c 89 e0             	mov    %r12,%rax
    e1ac:	ba 1f 00 00 00       	mov    $0x1f,%edx
    e1b1:	41 83 f2 1f          	xor    $0x1f,%r10d
    e1b5:	44 29 d1             	sub    %r10d,%ecx
    e1b8:	44 29 d2             	sub    %r10d,%edx
    e1bb:	48 d3 e8             	shr    %cl,%rax
    e1be:	83 e0 01             	and    $0x1,%eax
    e1c1:	8d 04 50             	lea    (%rax,%rdx,2),%eax
    e1c4:	49 8b 94 c5 58 02 00 	mov    0x258(%r13,%rax,8),%rdx
    e1cb:	00 
    e1cc:	49 89 c2             	mov    %rax,%r10
    e1cf:	48 85 d2             	test   %rdx,%rdx
    e1d2:	0f 84 72 f8 ff ff    	je     da4a <dlmalloc+0x87a>
    e1d8:	83 f8 1f             	cmp    $0x1f,%eax
    e1db:	0f 84 d4 09 00 00    	je     ebb5 <dlmalloc+0x19e5>
    e1e1:	d1 e8                	shr    %eax
    e1e3:	b9 39 00 00 00       	mov    $0x39,%ecx
    e1e8:	29 c1                	sub    %eax,%ecx
    e1ea:	e9 13 f4 ff ff       	jmp    d602 <dlmalloc+0x432>
    e1ef:	48 89 d3             	mov    %rdx,%rbx
    e1f2:	31 ff                	xor    %edi,%edi
    e1f4:	48 89 d1             	mov    %rdx,%rcx
    e1f7:	e9 77 f4 ff ff       	jmp    d673 <dlmalloc+0x4a3>
    e1fc:	4c 89 ff             	mov    %r15,%rdi
    e1ff:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    e204:	e8 e7 e4 ff ff       	call   c6f0 <sbrk>
    e209:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    e20e:	48 89 c3             	mov    %rax,%rbx
    e211:	49 8b 46 08          	mov    0x8(%r14),%rax
    e215:	49 03 06             	add    (%r14),%rax
    e218:	48 39 c3             	cmp    %rax,%rbx
    e21b:	0f 85 31 ff ff ff    	jne    e152 <dlmalloc+0xf82>
    e221:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
    e225:	0f 85 63 ff ff ff    	jne    e18e <dlmalloc+0xfbe>
    e22b:	e9 59 f9 ff ff       	jmp    db89 <dlmalloc+0x9b9>
    e230:	4c 89 f8             	mov    %r15,%rax
    e233:	48 89 d9             	mov    %rbx,%rcx
    e236:	e9 5b fd ff ff       	jmp    df96 <dlmalloc+0xdc6>
    e23b:	83 c9 03             	or     $0x3,%ecx
    e23e:	89 ce                	mov    %ecx,%esi
    e240:	48 89 73 08          	mov    %rsi,0x8(%rbx)
    e244:	48 89 38             	mov    %rdi,(%rax)
    e247:	48 83 48 08 01       	orq    $0x1,0x8(%rax)
    e24c:	e9 b1 f1 ff ff       	jmp    d402 <dlmalloc+0x232>
    e251:	b8 01 00 00 00       	mov    $0x1,%eax
    e256:	87 05 d4 cb 01 00    	xchg   %eax,0x1cbd4(%rip)        # 2ae30 <malloc_global_mutex>
    e25c:	85 c0                	test   %eax,%eax
    e25e:	0f 84 f7 f8 ff ff    	je     db5b <dlmalloc+0x98b>
    e264:	e9 c3 f8 ff ff       	jmp    db2c <dlmalloc+0x95c>
    e269:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    e270:	49 89 d8             	mov    %rbx,%r8
    e273:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
    e277:	41 83 e0 0f          	and    $0xf,%r8d
    e27b:	e9 5b fa ff ff       	jmp    dcdb <dlmalloc+0xb0b>
    e280:	4c 01 78 08          	add    %r15,0x8(%rax)
    e284:	49 89 d2             	mov    %rdx,%r10
    e287:	48 89 18             	mov    %rbx,(%rax)
    e28a:	4d 85 c0             	test   %r8,%r8
    e28d:	74 09                	je     e298 <dlmalloc+0x10c8>
    e28f:	48 f7 df             	neg    %rdi
    e292:	83 e7 0f             	and    $0xf,%edi
    e295:	48 01 fb             	add    %rdi,%rbx
    e298:	48 8d 42 10          	lea    0x10(%rdx),%rax
    e29c:	f6 c2 0f             	test   $0xf,%dl
    e29f:	74 0a                	je     e2ab <dlmalloc+0x10db>
    e2a1:	48 f7 d8             	neg    %rax
    e2a4:	83 e0 0f             	and    $0xf,%eax
    e2a7:	4c 8d 14 02          	lea    (%rdx,%rax,1),%r10
    e2ab:	48 8b 0d 4e cb 01 00 	mov    0x1cb4e(%rip),%rcx        # 2ae00 <mparams>
    e2b2:	4c 89 d0             	mov    %r10,%rax
    e2b5:	4a 8d 14 23          	lea    (%rbx,%r12,1),%rdx
    e2b9:	48 29 d8             	sub    %rbx,%rax
    e2bc:	4c 29 e0             	sub    %r12,%rax
    e2bf:	4c 31 e9             	xor    %r13,%rcx
    e2c2:	49 83 cc 03          	or     $0x3,%r12
    e2c6:	4c 89 63 08          	mov    %r12,0x8(%rbx)
    e2ca:	48 89 0a             	mov    %rcx,(%rdx)
    e2cd:	4c 39 d6             	cmp    %r10,%rsi
    e2d0:	0f 84 38 04 00 00    	je     e70e <dlmalloc+0x153e>
    e2d6:	4c 39 15 83 c7 01 00 	cmp    %r10,0x1c783(%rip)        # 2aa60 <_gm_+0x20>
    e2dd:	0f 84 49 05 00 00    	je     e82c <dlmalloc+0x165c>
    e2e3:	49 8b 72 08          	mov    0x8(%r10),%rsi
    e2e7:	4c 89 d1             	mov    %r10,%rcx
    e2ea:	48 89 f7             	mov    %rsi,%rdi
    e2ed:	83 e7 03             	and    $0x3,%edi
    e2f0:	48 83 ff 01          	cmp    $0x1,%rdi
    e2f4:	0f 84 a2 05 00 00    	je     e89c <dlmalloc+0x16cc>
    e2fa:	48 83 e6 fe          	and    $0xfffffffffffffffe,%rsi
    e2fe:	49 89 72 08          	mov    %rsi,0x8(%r10)
    e302:	48 89 c6             	mov    %rax,%rsi
    e305:	48 83 ce 01          	or     $0x1,%rsi
    e309:	48 89 72 08          	mov    %rsi,0x8(%rdx)
    e30d:	48 89 01             	mov    %rax,(%rcx)
    e310:	48 89 c1             	mov    %rax,%rcx
    e313:	48 c1 e9 03          	shr    $0x3,%rcx
    e317:	48 3d ff 00 00 00    	cmp    $0xff,%rax
    e31d:	0f 87 42 04 00 00    	ja     e765 <dlmalloc+0x1595>
    e323:	bf 01 00 00 00       	mov    $0x1,%edi
    e328:	8b 35 12 c7 01 00    	mov    0x1c712(%rip),%esi        # 2aa40 <_gm_>
    e32e:	8d 44 09 09          	lea    0x9(%rcx,%rcx,1),%eax
    e332:	d3 e7                	shl    %cl,%edi
    e334:	49 8d 44 c5 00       	lea    0x0(%r13,%rax,8),%rax
    e339:	85 fe                	test   %edi,%esi
    e33b:	0f 85 08 06 00 00    	jne    e949 <dlmalloc+0x1779>
    e341:	09 fe                	or     %edi,%esi
    e343:	48 89 c1             	mov    %rax,%rcx
    e346:	89 35 f4 c6 01 00    	mov    %esi,0x1c6f4(%rip)        # 2aa40 <_gm_>
    e34c:	48 89 50 10          	mov    %rdx,0x10(%rax)
    e350:	48 89 51 18          	mov    %rdx,0x18(%rcx)
    e354:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
    e358:	48 89 42 18          	mov    %rax,0x18(%rdx)
    e35c:	e9 a1 f0 ff ff       	jmp    d402 <dlmalloc+0x232>
    e361:	bf 01 00 00 00       	mov    $0x1,%edi
    e366:	41 b8 58 02 00 00    	mov    $0x258,%r8d
    e36c:	e9 cd fc ff ff       	jmp    e03e <dlmalloc+0xe6e>
    e371:	89 c8                	mov    %ecx,%eax
    e373:	49 89 d0             	mov    %rdx,%r8
    e376:	49 8b bc c5 58 02 00 	mov    0x258(%r13,%rax,8),%rdi
    e37d:	00 
    e37e:	83 f9 1f             	cmp    $0x1f,%ecx
    e381:	74 33                	je     e3b6 <dlmalloc+0x11e6>
    e383:	89 c8                	mov    %ecx,%eax
    e385:	b9 39 00 00 00       	mov    $0x39,%ecx
    e38a:	d1 e8                	shr    %eax
    e38c:	29 c1                	sub    %eax,%ecx
    e38e:	49 d3 e0             	shl    %cl,%r8
    e391:	eb 23                	jmp    e3b6 <dlmalloc+0x11e6>
    e393:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    e398:	4c 89 c0             	mov    %r8,%rax
    e39b:	4d 01 c0             	add    %r8,%r8
    e39e:	48 c1 e8 3f          	shr    $0x3f,%rax
    e3a2:	48 83 c0 04          	add    $0x4,%rax
    e3a6:	48 8b 0c c7          	mov    (%rdi,%rax,8),%rcx
    e3aa:	48 85 c9             	test   %rcx,%rcx
    e3ad:	0f 84 1b 02 00 00    	je     e5ce <dlmalloc+0x13fe>
    e3b3:	48 89 cf             	mov    %rcx,%rdi
    e3b6:	48 8b 47 08          	mov    0x8(%rdi),%rax
    e3ba:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    e3be:	48 39 c2             	cmp    %rax,%rdx
    e3c1:	75 d5                	jne    e398 <dlmalloc+0x11c8>
    e3c3:	48 8b 47 10          	mov    0x10(%rdi),%rax
    e3c7:	48 8b 15 8a c6 01 00 	mov    0x1c68a(%rip),%rdx        # 2aa58 <_gm_+0x18>
    e3ce:	66 48 0f 6e e7       	movq   %rdi,%xmm4
    e3d3:	66 48 0f 6e c0       	movq   %rax,%xmm0
    e3d8:	66 0f 6c c4          	punpcklqdq %xmm4,%xmm0
    e3dc:	48 39 d7             	cmp    %rdx,%rdi
    e3df:	0f 82 4b f4 ff ff    	jb     d830 <dlmalloc+0x660>
    e3e5:	48 39 d0             	cmp    %rdx,%rax
    e3e8:	0f 82 42 f4 ff ff    	jb     d830 <dlmalloc+0x660>
    e3ee:	48 89 70 18          	mov    %rsi,0x18(%rax)
    e3f2:	48 8b 05 57 c6 01 00 	mov    0x1c657(%rip),%rax        # 2aa50 <_gm_+0x10>
    e3f9:	48 89 77 10          	mov    %rsi,0x10(%rdi)
    e3fd:	48 c7 46 30 00 00 00 	movq   $0x0,0x30(%rsi)
    e404:	00 
    e405:	0f 11 46 10          	movups %xmm0,0x10(%rsi)
    e409:	e9 90 fa ff ff       	jmp    de9e <dlmalloc+0xcce>
    e40e:	48 8b 43 28          	mov    0x28(%rbx),%rax
    e412:	48 8d 53 28          	lea    0x28(%rbx),%rdx
    e416:	48 85 c0             	test   %rax,%rax
    e419:	0f 84 11 03 00 00    	je     e730 <dlmalloc+0x1560>
    e41f:	90                   	nop
    e420:	48 89 d6             	mov    %rdx,%rsi
    e423:	48 89 c1             	mov    %rax,%rcx
    e426:	48 8d 50 28          	lea    0x28(%rax),%rdx
    e42a:	48 8b 40 28          	mov    0x28(%rax),%rax
    e42e:	48 85 c0             	test   %rax,%rax
    e431:	75 ed                	jne    e420 <dlmalloc+0x1250>
    e433:	48 8b 41 20          	mov    0x20(%rcx),%rax
    e437:	48 8d 51 20          	lea    0x20(%rcx),%rdx
    e43b:	48 85 c0             	test   %rax,%rax
    e43e:	75 e0                	jne    e420 <dlmalloc+0x1250>
    e440:	4c 39 de             	cmp    %r11,%rsi
    e443:	0f 82 e7 f3 ff ff    	jb     d830 <dlmalloc+0x660>
    e449:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
    e450:	4d 85 ff             	test   %r15,%r15
    e453:	0f 84 27 f3 ff ff    	je     d780 <dlmalloc+0x5b0>
    e459:	41 8b 46 38          	mov    0x38(%r14),%eax
    e45d:	48 8d 50 4a          	lea    0x4a(%rax),%rdx
    e461:	4d 3b b4 c5 58 02 00 	cmp    0x258(%r13,%rax,8),%r14
    e468:	00 
    e469:	0f 84 9e 04 00 00    	je     e90d <dlmalloc+0x173d>
    e46f:	4d 39 df             	cmp    %r11,%r15
    e472:	0f 82 b8 f3 ff ff    	jb     d830 <dlmalloc+0x660>
    e478:	49 3b 5f 20          	cmp    0x20(%r15),%rbx
    e47c:	0f 84 cb 05 00 00    	je     ea4d <dlmalloc+0x187d>
    e482:	49 89 4f 28          	mov    %rcx,0x28(%r15)
    e486:	49 89 ce             	mov    %rcx,%r14
    e489:	e9 b1 f2 ff ff       	jmp    d73f <dlmalloc+0x56f>
    e48e:	49 8d 04 3c          	lea    (%r12,%rdi,1),%rax
    e492:	48 89 c1             	mov    %rax,%rcx
    e495:	48 01 d8             	add    %rbx,%rax
    e498:	48 83 c9 03          	or     $0x3,%rcx
    e49c:	48 89 4b 08          	mov    %rcx,0x8(%rbx)
    e4a0:	48 83 48 08 01       	orq    $0x1,0x8(%rax)
    e4a5:	48 89 10             	mov    %rdx,(%rax)
    e4a8:	e9 4f f3 ff ff       	jmp    d7fc <dlmalloc+0x62c>
    e4ad:	48 89 fa             	mov    %rdi,%rdx
    e4b0:	48 c1 ea 08          	shr    $0x8,%rdx
    e4b4:	89 d0                	mov    %edx,%eax
    e4b6:	85 d2                	test   %edx,%edx
    e4b8:	0f 84 20 02 00 00    	je     e6de <dlmalloc+0x150e>
    e4be:	81 fa ff ff 00 00    	cmp    $0xffff,%edx
    e4c4:	0f 87 be 03 00 00    	ja     e888 <dlmalloc+0x16b8>
    e4ca:	0f bd c0             	bsr    %eax,%eax
    e4cd:	b9 26 00 00 00       	mov    $0x26,%ecx
    e4d2:	48 89 fa             	mov    %rdi,%rdx
    e4d5:	83 f0 1f             	xor    $0x1f,%eax
    e4d8:	29 c1                	sub    %eax,%ecx
    e4da:	48 d3 ea             	shr    %cl,%rdx
    e4dd:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    e4e2:	83 e2 01             	and    $0x1,%edx
    e4e5:	29 c1                	sub    %eax,%ecx
    e4e7:	8d 04 4a             	lea    (%rdx,%rcx,2),%eax
    e4ea:	ba 01 00 00 00       	mov    $0x1,%edx
    e4ef:	89 c1                	mov    %eax,%ecx
    e4f1:	8d 70 4b             	lea    0x4b(%rax),%esi
    e4f4:	d3 e2                	shl    %cl,%edx
    e4f6:	48 c1 e6 03          	shl    $0x3,%rsi
    e4fa:	89 d1                	mov    %edx,%ecx
    e4fc:	8b 15 42 c5 01 00    	mov    0x1c542(%rip),%edx        # 2aa44 <_gm_+0x4>
    e502:	66 49 0f 6e ca       	movq   %r10,%xmm1
    e507:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e50b:	41 89 42 38          	mov    %eax,0x38(%r10)
    e50f:	66 0f 6c c9          	punpcklqdq %xmm1,%xmm1
    e513:	41 0f 11 42 20       	movups %xmm0,0x20(%r10)
    e518:	85 ca                	test   %ecx,%edx
    e51a:	0f 84 db 02 00 00    	je     e7fb <dlmalloc+0x162b>
    e520:	89 c2                	mov    %eax,%edx
    e522:	48 89 fe             	mov    %rdi,%rsi
    e525:	49 8b 94 d5 58 02 00 	mov    0x258(%r13,%rdx,8),%rdx
    e52c:	00 
    e52d:	83 f8 1f             	cmp    $0x1f,%eax
    e530:	74 2c                	je     e55e <dlmalloc+0x138e>
    e532:	d1 e8                	shr    %eax
    e534:	b9 39 00 00 00       	mov    $0x39,%ecx
    e539:	29 c1                	sub    %eax,%ecx
    e53b:	48 d3 e6             	shl    %cl,%rsi
    e53e:	eb 1e                	jmp    e55e <dlmalloc+0x138e>
    e540:	48 89 f0             	mov    %rsi,%rax
    e543:	48 01 f6             	add    %rsi,%rsi
    e546:	48 c1 e8 3f          	shr    $0x3f,%rax
    e54a:	48 83 c0 04          	add    $0x4,%rax
    e54e:	48 8b 0c c2          	mov    (%rdx,%rax,8),%rcx
    e552:	48 85 c9             	test   %rcx,%rcx
    e555:	0f 84 fa 02 00 00    	je     e855 <dlmalloc+0x1685>
    e55b:	48 89 ca             	mov    %rcx,%rdx
    e55e:	48 8b 42 08          	mov    0x8(%rdx),%rax
    e562:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    e566:	48 39 f8             	cmp    %rdi,%rax
    e569:	75 d5                	jne    e540 <dlmalloc+0x1370>
    e56b:	48 8b 42 10          	mov    0x10(%rdx),%rax
    e56f:	66 48 0f 6e ea       	movq   %rdx,%xmm5
    e574:	66 48 0f 6e c0       	movq   %rax,%xmm0
    e579:	66 0f 6c c5          	punpcklqdq %xmm5,%xmm0
    e57d:	4c 39 da             	cmp    %r11,%rdx
    e580:	0f 82 aa f2 ff ff    	jb     d830 <dlmalloc+0x660>
    e586:	4c 39 d8             	cmp    %r11,%rax
    e589:	0f 82 a1 f2 ff ff    	jb     d830 <dlmalloc+0x660>
    e58f:	4c 89 50 18          	mov    %r10,0x18(%rax)
    e593:	4c 89 52 10          	mov    %r10,0x10(%rdx)
    e597:	49 c7 42 30 00 00 00 	movq   $0x0,0x30(%r10)
    e59e:	00 
    e59f:	41 0f 11 42 10       	movups %xmm0,0x10(%r10)
    e5a4:	e9 53 f2 ff ff       	jmp    d7fc <dlmalloc+0x62c>
    e5a9:	09 fe                	or     %edi,%esi
    e5ab:	4c 89 c1             	mov    %r8,%rcx
    e5ae:	89 35 8c c4 01 00    	mov    %esi,0x1c48c(%rip)        # 2aa40 <_gm_>
    e5b4:	e9 58 ef ff ff       	jmp    d511 <dlmalloc+0x341>
    e5b9:	bf 00 00 00 80       	mov    $0x80000000,%edi
    e5be:	41 b8 50 03 00 00    	mov    $0x350,%r8d
    e5c4:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    e5c9:	e9 70 fa ff ff       	jmp    e03e <dlmalloc+0xe6e>
    e5ce:	48 8d 14 c7          	lea    (%rdi,%rax,8),%rdx
    e5d2:	48 3b 15 7f c4 01 00 	cmp    0x1c47f(%rip),%rdx        # 2aa58 <_gm_+0x18>
    e5d9:	0f 82 51 f2 ff ff    	jb     d830 <dlmalloc+0x660>
    e5df:	48 89 34 c7          	mov    %rsi,(%rdi,%rax,8)
    e5e3:	48 8b 05 66 c4 01 00 	mov    0x1c466(%rip),%rax        # 2aa50 <_gm_+0x10>
    e5ea:	48 89 7e 30          	mov    %rdi,0x30(%rsi)
    e5ee:	0f 11 4e 10          	movups %xmm1,0x10(%rsi)
    e5f2:	e9 a7 f8 ff ff       	jmp    de9e <dlmalloc+0xcce>
    e5f7:	48 8b 43 28          	mov    0x28(%rbx),%rax
    e5fb:	48 8d 4b 28          	lea    0x28(%rbx),%rcx
    e5ff:	48 85 c0             	test   %rax,%rax
    e602:	0f 84 f8 03 00 00    	je     ea00 <dlmalloc+0x1830>
    e608:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    e60f:	00 
    e610:	49 89 c9             	mov    %rcx,%r9
    e613:	49 89 c0             	mov    %rax,%r8
    e616:	48 8d 48 28          	lea    0x28(%rax),%rcx
    e61a:	48 8b 40 28          	mov    0x28(%rax),%rax
    e61e:	48 85 c0             	test   %rax,%rax
    e621:	75 ed                	jne    e610 <dlmalloc+0x1440>
    e623:	49 8b 40 20          	mov    0x20(%r8),%rax
    e627:	49 8d 48 20          	lea    0x20(%r8),%rcx
    e62b:	48 85 c0             	test   %rax,%rax
    e62e:	75 e0                	jne    e610 <dlmalloc+0x1440>
    e630:	4d 39 d9             	cmp    %r11,%r9
    e633:	0f 82 f7 f1 ff ff    	jb     d830 <dlmalloc+0x660>
    e639:	49 c7 01 00 00 00 00 	movq   $0x0,(%r9)
    e640:	4d 85 f6             	test   %r14,%r14
    e643:	0f 84 17 f3 ff ff    	je     d960 <dlmalloc+0x790>
    e649:	8b 43 38             	mov    0x38(%rbx),%eax
    e64c:	48 8d 48 4a          	lea    0x4a(%rax),%rcx
    e650:	49 3b 9c c5 58 02 00 	cmp    0x258(%r13,%rax,8),%rbx
    e657:	00 
    e658:	0f 84 0e 05 00 00    	je     eb6c <dlmalloc+0x199c>
    e65e:	4d 39 de             	cmp    %r11,%r14
    e661:	0f 82 c9 f1 ff ff    	jb     d830 <dlmalloc+0x660>
    e667:	49 3b 5e 20          	cmp    0x20(%r14),%rbx
    e66b:	0f 84 3b 05 00 00    	je     ebac <dlmalloc+0x19dc>
    e671:	4d 89 46 28          	mov    %r8,0x28(%r14)
    e675:	e9 a5 f2 ff ff       	jmp    d91f <dlmalloc+0x74f>
    e67a:	4c 01 f9             	add    %r15,%rcx
    e67d:	4c 03 3d cc c3 01 00 	add    0x1c3cc(%rip),%r15        # 2aa50 <_gm_+0x10>
    e684:	48 89 48 08          	mov    %rcx,0x8(%rax)
    e688:	48 8d 46 10          	lea    0x10(%rsi),%rax
    e68c:	40 f6 c6 0f          	test   $0xf,%sil
    e690:	0f 84 e7 01 00 00    	je     e87d <dlmalloc+0x16ad>
    e696:	48 f7 d8             	neg    %rax
    e699:	83 e0 0f             	and    $0xf,%eax
    e69c:	48 89 c2             	mov    %rax,%rdx
    e69f:	48 8d 0c 06          	lea    (%rsi,%rax,1),%rcx
    e6a3:	4c 89 f8             	mov    %r15,%rax
    e6a6:	48 29 d0             	sub    %rdx,%rax
    e6a9:	48 89 c2             	mov    %rax,%rdx
    e6ac:	48 89 0d b5 c3 01 00 	mov    %rcx,0x1c3b5(%rip)        # 2aa68 <_gm_+0x28>
    e6b3:	48 83 ca 01          	or     $0x1,%rdx
    e6b7:	48 89 05 92 c3 01 00 	mov    %rax,0x1c392(%rip)        # 2aa50 <_gm_+0x10>
    e6be:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    e6c2:	48 8b 15 57 c7 01 00 	mov    0x1c757(%rip),%rdx        # 2ae20 <mparams+0x20>
    e6c9:	4a c7 44 3e 08 50 00 	movq   $0x50,0x8(%rsi,%r15,1)
    e6d0:	00 00 
    e6d2:	48 89 15 97 c3 01 00 	mov    %rdx,0x1c397(%rip)        # 2aa70 <_gm_+0x30>
    e6d9:	e9 c0 f7 ff ff       	jmp    de9e <dlmalloc+0xcce>
    e6de:	b9 01 00 00 00       	mov    $0x1,%ecx
    e6e3:	be 58 02 00 00       	mov    $0x258,%esi
    e6e8:	e9 0f fe ff ff       	jmp    e4fc <dlmalloc+0x132c>
    e6ed:	4d 89 b4 d5 58 02 00 	mov    %r14,0x258(%r13,%rdx,8)
    e6f4:	00 
    e6f5:	4d 85 f6             	test   %r14,%r14
    e6f8:	0f 85 41 f0 ff ff    	jne    d73f <dlmalloc+0x56f>
    e6fe:	41 0f b3 c1          	btr    %eax,%r9d
    e702:	44 89 0d 3b c3 01 00 	mov    %r9d,0x1c33b(%rip)        # 2aa44 <_gm_+0x4>
    e709:	e9 72 f0 ff ff       	jmp    d780 <dlmalloc+0x5b0>
    e70e:	48 03 05 3b c3 01 00 	add    0x1c33b(%rip),%rax        # 2aa50 <_gm_+0x10>
    e715:	48 89 15 4c c3 01 00 	mov    %rdx,0x1c34c(%rip)        # 2aa68 <_gm_+0x28>
    e71c:	48 89 05 2d c3 01 00 	mov    %rax,0x1c32d(%rip)        # 2aa50 <_gm_+0x10>
    e723:	48 83 c8 01          	or     $0x1,%rax
    e727:	48 89 42 08          	mov    %rax,0x8(%rdx)
    e72b:	e9 d2 ec ff ff       	jmp    d402 <dlmalloc+0x232>
    e730:	48 8b 43 20          	mov    0x20(%rbx),%rax
    e734:	48 85 c0             	test   %rax,%rax
    e737:	0f 84 f0 03 00 00    	je     eb2d <dlmalloc+0x195d>
    e73d:	48 8d 53 20          	lea    0x20(%rbx),%rdx
    e741:	e9 da fc ff ff       	jmp    e420 <dlmalloc+0x1250>
    e746:	49 8d 14 3c          	lea    (%r12,%rdi,1),%rdx
    e74a:	48 89 d1             	mov    %rdx,%rcx
    e74d:	48 01 da             	add    %rbx,%rdx
    e750:	48 83 c9 03          	or     $0x3,%rcx
    e754:	48 89 4b 08          	mov    %rcx,0x8(%rbx)
    e758:	48 83 4a 08 01       	orq    $0x1,0x8(%rdx)
    e75d:	48 89 02             	mov    %rax,(%rdx)
    e760:	e9 85 f2 ff ff       	jmp    d9ea <dlmalloc+0x81a>
    e765:	48 89 c6             	mov    %rax,%rsi
    e768:	48 c1 ee 08          	shr    $0x8,%rsi
    e76c:	89 f1                	mov    %esi,%ecx
    e76e:	85 f6                	test   %esi,%esi
    e770:	0f 84 7b 02 00 00    	je     e9f1 <dlmalloc+0x1821>
    e776:	81 fe ff ff 00 00    	cmp    $0xffff,%esi
    e77c:	0f 87 16 04 00 00    	ja     eb98 <dlmalloc+0x19c8>
    e782:	0f bd c9             	bsr    %ecx,%ecx
    e785:	48 89 c7             	mov    %rax,%rdi
    e788:	89 ce                	mov    %ecx,%esi
    e78a:	b9 26 00 00 00       	mov    $0x26,%ecx
    e78f:	83 f6 1f             	xor    $0x1f,%esi
    e792:	29 f1                	sub    %esi,%ecx
    e794:	48 d3 ef             	shr    %cl,%rdi
    e797:	48 89 f9             	mov    %rdi,%rcx
    e79a:	bf 1f 00 00 00       	mov    $0x1f,%edi
    e79f:	29 f7                	sub    %esi,%edi
    e7a1:	83 e1 01             	and    $0x1,%ecx
    e7a4:	8d 0c 79             	lea    (%rcx,%rdi,2),%ecx
    e7a7:	bf 01 00 00 00       	mov    $0x1,%edi
    e7ac:	8d 71 4b             	lea    0x4b(%rcx),%esi
    e7af:	d3 e7                	shl    %cl,%edi
    e7b1:	48 c1 e6 03          	shl    $0x3,%rsi
    e7b5:	44 8b 05 88 c2 01 00 	mov    0x1c288(%rip),%r8d        # 2aa44 <_gm_+0x4>
    e7bc:	66 48 0f 6e c2       	movq   %rdx,%xmm0
    e7c1:	66 0f ef c9          	pxor   %xmm1,%xmm1
    e7c5:	89 4a 38             	mov    %ecx,0x38(%rdx)
    e7c8:	66 0f 6c c0          	punpcklqdq %xmm0,%xmm0
    e7cc:	0f 11 4a 20          	movups %xmm1,0x20(%rdx)
    e7d0:	41 85 f8             	test   %edi,%r8d
    e7d3:	0f 85 86 01 00 00    	jne    e95f <dlmalloc+0x178f>
    e7d9:	41 09 f8             	or     %edi,%r8d
    e7dc:	4c 01 ee             	add    %r13,%rsi
    e7df:	49 89 94 cd 58 02 00 	mov    %rdx,0x258(%r13,%rcx,8)
    e7e6:	00 
    e7e7:	44 89 05 56 c2 01 00 	mov    %r8d,0x1c256(%rip)        # 2aa44 <_gm_+0x4>
    e7ee:	48 89 72 30          	mov    %rsi,0x30(%rdx)
    e7f2:	0f 11 42 10          	movups %xmm0,0x10(%rdx)
    e7f6:	e9 07 ec ff ff       	jmp    d402 <dlmalloc+0x232>
    e7fb:	09 ca                	or     %ecx,%edx
    e7fd:	4c 01 ee             	add    %r13,%rsi
    e800:	4d 89 94 c5 58 02 00 	mov    %r10,0x258(%r13,%rax,8)
    e807:	00 
    e808:	89 15 36 c2 01 00    	mov    %edx,0x1c236(%rip)        # 2aa44 <_gm_+0x4>
    e80e:	49 89 72 30          	mov    %rsi,0x30(%r10)
    e812:	41 0f 11 4a 10       	movups %xmm1,0x10(%r10)
    e817:	e9 e0 ef ff ff       	jmp    d7fc <dlmalloc+0x62c>
    e81c:	09 c6                	or     %eax,%esi
    e81e:	48 89 d0             	mov    %rdx,%rax
    e821:	89 35 19 c2 01 00    	mov    %esi,0x1c219(%rip)        # 2aa40 <_gm_>
    e827:	e9 c0 ef ff ff       	jmp    d7ec <dlmalloc+0x61c>
    e82c:	48 03 05 15 c2 01 00 	add    0x1c215(%rip),%rax        # 2aa48 <_gm_+0x8>
    e833:	48 89 15 26 c2 01 00 	mov    %rdx,0x1c226(%rip)        # 2aa60 <_gm_+0x20>
    e83a:	48 89 c1             	mov    %rax,%rcx
    e83d:	48 89 05 04 c2 01 00 	mov    %rax,0x1c204(%rip)        # 2aa48 <_gm_+0x8>
    e844:	48 83 c9 01          	or     $0x1,%rcx
    e848:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
    e84c:	48 89 04 02          	mov    %rax,(%rdx,%rax,1)
    e850:	e9 ad eb ff ff       	jmp    d402 <dlmalloc+0x232>
    e855:	48 8d 0c c2          	lea    (%rdx,%rax,8),%rcx
    e859:	4c 39 d9             	cmp    %r11,%rcx
    e85c:	0f 82 ce ef ff ff    	jb     d830 <dlmalloc+0x660>
    e862:	4c 89 14 c2          	mov    %r10,(%rdx,%rax,8)
    e866:	49 89 52 30          	mov    %rdx,0x30(%r10)
    e86a:	41 0f 11 4a 10       	movups %xmm1,0x10(%r10)
    e86f:	e9 88 ef ff ff       	jmp    d7fc <dlmalloc+0x62c>
    e874:	4d 89 77 20          	mov    %r14,0x20(%r15)
    e878:	e9 bd ee ff ff       	jmp    d73a <dlmalloc+0x56a>
    e87d:	4c 89 f8             	mov    %r15,%rax
    e880:	48 89 f1             	mov    %rsi,%rcx
    e883:	e9 21 fe ff ff       	jmp    e6a9 <dlmalloc+0x14d9>
    e888:	b9 00 00 00 80       	mov    $0x80000000,%ecx
    e88d:	be 50 03 00 00       	mov    $0x350,%esi
    e892:	b8 1f 00 00 00       	mov    $0x1f,%eax
    e897:	e9 60 fc ff ff       	jmp    e4fc <dlmalloc+0x132c>
    e89c:	49 89 f0             	mov    %rsi,%r8
    e89f:	48 89 f1             	mov    %rsi,%rcx
    e8a2:	49 83 e0 f8          	and    $0xfffffffffffffff8,%r8
    e8a6:	48 c1 e9 03          	shr    $0x3,%rcx
    e8aa:	48 81 fe ff 00 00 00 	cmp    $0xff,%rsi
    e8b1:	0f 87 9f 01 00 00    	ja     ea56 <dlmalloc+0x1886>
    e8b7:	44 8d 5c 09 09       	lea    0x9(%rcx,%rcx,1),%r11d
    e8bc:	49 8b 7a 10          	mov    0x10(%r10),%rdi
    e8c0:	49 8b 72 18          	mov    0x18(%r10),%rsi
    e8c4:	4f 8d 5c dd 00       	lea    0x0(%r13,%r11,8),%r11
    e8c9:	4c 39 df             	cmp    %r11,%rdi
    e8cc:	0f 85 84 03 00 00    	jne    ec56 <dlmalloc+0x1a86>
    e8d2:	48 39 fe             	cmp    %rdi,%rsi
    e8d5:	0f 84 69 03 00 00    	je     ec44 <dlmalloc+0x1a74>
    e8db:	48 3b 35 76 c1 01 00 	cmp    0x1c176(%rip),%rsi        # 2aa58 <_gm_+0x18>
    e8e2:	0f 82 48 ef ff ff    	jb     d830 <dlmalloc+0x660>
    e8e8:	4c 39 56 10          	cmp    %r10,0x10(%rsi)
    e8ec:	0f 85 3e ef ff ff    	jne    d830 <dlmalloc+0x660>
    e8f2:	48 89 77 18          	mov    %rsi,0x18(%rdi)
    e8f6:	48 89 7e 10          	mov    %rdi,0x10(%rsi)
    e8fa:	4d 01 c2             	add    %r8,%r10
    e8fd:	4c 01 c0             	add    %r8,%rax
    e900:	49 8b 72 08          	mov    0x8(%r10),%rsi
    e904:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    e908:	e9 ed f9 ff ff       	jmp    e2fa <dlmalloc+0x112a>
    e90d:	49 89 4c d5 08       	mov    %rcx,0x8(%r13,%rdx,8)
    e912:	e9 6f fb ff ff       	jmp    e486 <dlmalloc+0x12b6>
    e917:	4d 89 84 cd 58 02 00 	mov    %r8,0x258(%r13,%rcx,8)
    e91e:	00 
    e91f:	4d 85 c0             	test   %r8,%r8
    e922:	0f 85 f7 ef ff ff    	jne    d91f <dlmalloc+0x74f>
    e928:	41 0f b3 c1          	btr    %eax,%r9d
    e92c:	44 89 0d 11 c1 01 00 	mov    %r9d,0x1c111(%rip)        # 2aa44 <_gm_+0x4>
    e933:	e9 28 f0 ff ff       	jmp    d960 <dlmalloc+0x790>
    e938:	44 09 c2             	or     %r8d,%edx
    e93b:	89 15 ff c0 01 00    	mov    %edx,0x1c0ff(%rip)        # 2aa40 <_gm_>
    e941:	4c 89 ca             	mov    %r9,%rdx
    e944:	e9 83 f0 ff ff       	jmp    d9cc <dlmalloc+0x7fc>
    e949:	48 8b 48 10          	mov    0x10(%rax),%rcx
    e94d:	48 3b 0d 04 c1 01 00 	cmp    0x1c104(%rip),%rcx        # 2aa58 <_gm_+0x18>
    e954:	0f 83 f2 f9 ff ff    	jae    e34c <dlmalloc+0x117c>
    e95a:	e9 d1 ee ff ff       	jmp    d830 <dlmalloc+0x660>
    e95f:	89 ce                	mov    %ecx,%esi
    e961:	49 8b b4 f5 58 02 00 	mov    0x258(%r13,%rsi,8),%rsi
    e968:	00 
    e969:	83 f9 1f             	cmp    $0x1f,%ecx
    e96c:	74 0b                	je     e979 <dlmalloc+0x17a9>
    e96e:	d1 e9                	shr    %ecx
    e970:	41 b9 39 00 00 00    	mov    $0x39,%r9d
    e976:	41 29 c9             	sub    %ecx,%r9d
    e979:	48 89 c7             	mov    %rax,%rdi
    e97c:	44 89 c9             	mov    %r9d,%ecx
    e97f:	48 d3 e7             	shl    %cl,%rdi
    e982:	eb 1e                	jmp    e9a2 <dlmalloc+0x17d2>
    e984:	48 89 f9             	mov    %rdi,%rcx
    e987:	48 01 ff             	add    %rdi,%rdi
    e98a:	48 c1 e9 3f          	shr    $0x3f,%rcx
    e98e:	48 83 c1 04          	add    $0x4,%rcx
    e992:	4c 8b 04 ce          	mov    (%rsi,%rcx,8),%r8
    e996:	4d 85 c0             	test   %r8,%r8
    e999:	0f 84 d7 01 00 00    	je     eb76 <dlmalloc+0x19a6>
    e99f:	4c 89 c6             	mov    %r8,%rsi
    e9a2:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    e9a6:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    e9aa:	48 39 c8             	cmp    %rcx,%rax
    e9ad:	75 d5                	jne    e984 <dlmalloc+0x17b4>
    e9af:	48 8b 46 10          	mov    0x10(%rsi),%rax
    e9b3:	48 8b 0d 9e c0 01 00 	mov    0x1c09e(%rip),%rcx        # 2aa58 <_gm_+0x18>
    e9ba:	66 48 0f 6e f6       	movq   %rsi,%xmm6
    e9bf:	66 48 0f 6e c0       	movq   %rax,%xmm0
    e9c4:	66 0f 6c c6          	punpcklqdq %xmm6,%xmm0
    e9c8:	48 39 c8             	cmp    %rcx,%rax
    e9cb:	0f 82 5f ee ff ff    	jb     d830 <dlmalloc+0x660>
    e9d1:	48 39 ce             	cmp    %rcx,%rsi
    e9d4:	0f 82 56 ee ff ff    	jb     d830 <dlmalloc+0x660>
    e9da:	48 89 50 18          	mov    %rdx,0x18(%rax)
    e9de:	31 c0                	xor    %eax,%eax
    e9e0:	48 89 56 10          	mov    %rdx,0x10(%rsi)
    e9e4:	48 89 42 30          	mov    %rax,0x30(%rdx)
    e9e8:	0f 11 42 10          	movups %xmm0,0x10(%rdx)
    e9ec:	e9 11 ea ff ff       	jmp    d402 <dlmalloc+0x232>
    e9f1:	bf 01 00 00 00       	mov    $0x1,%edi
    e9f6:	be 58 02 00 00       	mov    $0x258,%esi
    e9fb:	e9 b5 fd ff ff       	jmp    e7b5 <dlmalloc+0x15e5>
    ea00:	48 8b 43 20          	mov    0x20(%rbx),%rax
    ea04:	48 85 c0             	test   %rax,%rax
    ea07:	0f 84 b0 01 00 00    	je     ebbd <dlmalloc+0x19ed>
    ea0d:	48 8d 4b 20          	lea    0x20(%rbx),%rcx
    ea11:	e9 fa fb ff ff       	jmp    e610 <dlmalloc+0x1440>
    ea16:	4d 89 46 20          	mov    %r8,0x20(%r14)
    ea1a:	e9 fb ee ff ff       	jmp    d91a <dlmalloc+0x74a>
    ea1f:	4c 89 f7             	mov    %r14,%rdi
    ea22:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    ea27:	e8 c4 dc ff ff       	call   c6f0 <sbrk>
    ea2c:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    ea31:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    ea35:	0f 84 5b 02 00 00    	je     ec96 <dlmalloc+0x1ac6>
    ea3b:	4d 01 f7             	add    %r14,%r15
    ea3e:	c7 05 e8 c3 01 00 00 	movl   $0x0,0x1c3e8(%rip)        # 2ae30 <malloc_global_mutex>
    ea45:	00 00 00 
    ea48:	e9 d3 f1 ff ff       	jmp    dc20 <dlmalloc+0xa50>
    ea4d:	49 89 4f 20          	mov    %rcx,0x20(%r15)
    ea51:	e9 30 fa ff ff       	jmp    e486 <dlmalloc+0x12b6>
    ea56:	49 8b 72 18          	mov    0x18(%r10),%rsi
    ea5a:	4d 8b 62 30          	mov    0x30(%r10),%r12
    ea5e:	4c 39 d6             	cmp    %r10,%rsi
    ea61:	0f 84 96 01 00 00    	je     ebfd <dlmalloc+0x1a2d>
    ea67:	49 8b 4a 10          	mov    0x10(%r10),%rcx
    ea6b:	48 3b 0d e6 bf 01 00 	cmp    0x1bfe6(%rip),%rcx        # 2aa58 <_gm_+0x18>
    ea72:	0f 82 b8 ed ff ff    	jb     d830 <dlmalloc+0x660>
    ea78:	4c 39 51 18          	cmp    %r10,0x18(%rcx)
    ea7c:	0f 85 ae ed ff ff    	jne    d830 <dlmalloc+0x660>
    ea82:	4c 39 56 10          	cmp    %r10,0x10(%rsi)
    ea86:	0f 85 a4 ed ff ff    	jne    d830 <dlmalloc+0x660>
    ea8c:	48 89 71 18          	mov    %rsi,0x18(%rcx)
    ea90:	48 89 4e 10          	mov    %rcx,0x10(%rsi)
    ea94:	4d 85 e4             	test   %r12,%r12
    ea97:	0f 84 5d fe ff ff    	je     e8fa <dlmalloc+0x172a>
    ea9d:	41 8b 7a 38          	mov    0x38(%r10),%edi
    eaa1:	48 89 f9             	mov    %rdi,%rcx
    eaa4:	4c 8d 5f 4a          	lea    0x4a(%rdi),%r11
    eaa8:	4d 39 94 fd 58 02 00 	cmp    %r10,0x258(%r13,%rdi,8)
    eaaf:	00 
    eab0:	0f 84 0e 02 00 00    	je     ecc4 <dlmalloc+0x1af4>
    eab6:	4c 3b 25 9b bf 01 00 	cmp    0x1bf9b(%rip),%r12        # 2aa58 <_gm_+0x18>
    eabd:	0f 82 6d ed ff ff    	jb     d830 <dlmalloc+0x660>
    eac3:	4d 39 54 24 20       	cmp    %r10,0x20(%r12)
    eac8:	0f 84 ec 01 00 00    	je     ecba <dlmalloc+0x1aea>
    eace:	49 89 74 24 28       	mov    %rsi,0x28(%r12)
    ead3:	48 85 f6             	test   %rsi,%rsi
    ead6:	0f 84 1e fe ff ff    	je     e8fa <dlmalloc+0x172a>
    eadc:	48 8b 3d 75 bf 01 00 	mov    0x1bf75(%rip),%rdi        # 2aa58 <_gm_+0x18>
    eae3:	48 39 fe             	cmp    %rdi,%rsi
    eae6:	0f 82 44 ed ff ff    	jb     d830 <dlmalloc+0x660>
    eaec:	49 8b 4a 20          	mov    0x20(%r10),%rcx
    eaf0:	4c 89 66 30          	mov    %r12,0x30(%rsi)
    eaf4:	48 85 c9             	test   %rcx,%rcx
    eaf7:	74 11                	je     eb0a <dlmalloc+0x193a>
    eaf9:	48 39 f9             	cmp    %rdi,%rcx
    eafc:	0f 82 2e ed ff ff    	jb     d830 <dlmalloc+0x660>
    eb02:	48 89 4e 20          	mov    %rcx,0x20(%rsi)
    eb06:	48 89 71 30          	mov    %rsi,0x30(%rcx)
    eb0a:	49 8b 4a 28          	mov    0x28(%r10),%rcx
    eb0e:	48 85 c9             	test   %rcx,%rcx
    eb11:	0f 84 e3 fd ff ff    	je     e8fa <dlmalloc+0x172a>
    eb17:	48 39 f9             	cmp    %rdi,%rcx
    eb1a:	0f 82 10 ed ff ff    	jb     d830 <dlmalloc+0x660>
    eb20:	48 89 4e 28          	mov    %rcx,0x28(%rsi)
    eb24:	48 89 71 30          	mov    %rsi,0x30(%rcx)
    eb28:	e9 cd fd ff ff       	jmp    e8fa <dlmalloc+0x172a>
    eb2d:	4d 85 ff             	test   %r15,%r15
    eb30:	0f 84 4a ec ff ff    	je     d780 <dlmalloc+0x5b0>
    eb36:	8b 53 38             	mov    0x38(%rbx),%edx
    eb39:	48 89 d0             	mov    %rdx,%rax
    eb3c:	48 8d 4a 4a          	lea    0x4a(%rdx),%rcx
    eb40:	49 3b 9c d5 58 02 00 	cmp    0x258(%r13,%rdx,8),%rbx
    eb47:	00 
    eb48:	0f 84 a2 01 00 00    	je     ecf0 <dlmalloc+0x1b20>
    eb4e:	4d 39 df             	cmp    %r11,%r15
    eb51:	0f 82 d9 ec ff ff    	jb     d830 <dlmalloc+0x660>
    eb57:	4d 39 77 20          	cmp    %r14,0x20(%r15)
    eb5b:	0f 84 83 01 00 00    	je     ece4 <dlmalloc+0x1b14>
    eb61:	31 f6                	xor    %esi,%esi
    eb63:	49 89 77 28          	mov    %rsi,0x28(%r15)
    eb67:	e9 14 ec ff ff       	jmp    d780 <dlmalloc+0x5b0>
    eb6c:	4d 89 44 cd 08       	mov    %r8,0x8(%r13,%rcx,8)
    eb71:	e9 a9 ed ff ff       	jmp    d91f <dlmalloc+0x74f>
    eb76:	48 8d 04 ce          	lea    (%rsi,%rcx,8),%rax
    eb7a:	48 3b 05 d7 be 01 00 	cmp    0x1bed7(%rip),%rax        # 2aa58 <_gm_+0x18>
    eb81:	0f 82 a9 ec ff ff    	jb     d830 <dlmalloc+0x660>
    eb87:	48 89 14 ce          	mov    %rdx,(%rsi,%rcx,8)
    eb8b:	48 89 72 30          	mov    %rsi,0x30(%rdx)
    eb8f:	0f 11 42 10          	movups %xmm0,0x10(%rdx)
    eb93:	e9 6a e8 ff ff       	jmp    d402 <dlmalloc+0x232>
    eb98:	bf 00 00 00 80       	mov    $0x80000000,%edi
    eb9d:	be 50 03 00 00       	mov    $0x350,%esi
    eba2:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    eba7:	e9 09 fc ff ff       	jmp    e7b5 <dlmalloc+0x15e5>
    ebac:	4d 89 46 20          	mov    %r8,0x20(%r14)
    ebb0:	e9 6a ed ff ff       	jmp    d91f <dlmalloc+0x74f>
    ebb5:	4d 89 e3             	mov    %r12,%r11
    ebb8:	e9 4b ea ff ff       	jmp    d608 <dlmalloc+0x438>
    ebbd:	4d 85 f6             	test   %r14,%r14
    ebc0:	0f 84 9a ed ff ff    	je     d960 <dlmalloc+0x790>
    ebc6:	8b 4b 38             	mov    0x38(%rbx),%ecx
    ebc9:	48 89 c8             	mov    %rcx,%rax
    ebcc:	4c 8d 41 4a          	lea    0x4a(%rcx),%r8
    ebd0:	49 3b 9c cd 58 02 00 	cmp    0x258(%r13,%rcx,8),%rbx
    ebd7:	00 
    ebd8:	0f 84 34 01 00 00    	je     ed12 <dlmalloc+0x1b42>
    ebde:	4d 39 de             	cmp    %r11,%r14
    ebe1:	0f 82 49 ec ff ff    	jb     d830 <dlmalloc+0x660>
    ebe7:	49 3b 5e 20          	cmp    0x20(%r14),%rbx
    ebeb:	0f 84 16 01 00 00    	je     ed07 <dlmalloc+0x1b37>
    ebf1:	45 31 ff             	xor    %r15d,%r15d
    ebf4:	4d 89 7e 28          	mov    %r15,0x28(%r14)
    ebf8:	e9 63 ed ff ff       	jmp    d960 <dlmalloc+0x790>
    ebfd:	49 8b 72 28          	mov    0x28(%r10),%rsi
    ec01:	48 85 f6             	test   %rsi,%rsi
    ec04:	74 7a                	je     ec80 <dlmalloc+0x1ab0>
    ec06:	49 8d 7a 28          	lea    0x28(%r10),%rdi
    ec0a:	48 89 f1             	mov    %rsi,%rcx
    ec0d:	49 89 fb             	mov    %rdi,%r11
    ec10:	48 89 ce             	mov    %rcx,%rsi
    ec13:	48 8d 79 28          	lea    0x28(%rcx),%rdi
    ec17:	48 8b 49 28          	mov    0x28(%rcx),%rcx
    ec1b:	48 85 c9             	test   %rcx,%rcx
    ec1e:	75 ed                	jne    ec0d <dlmalloc+0x1a3d>
    ec20:	48 8b 4e 20          	mov    0x20(%rsi),%rcx
    ec24:	48 8d 7e 20          	lea    0x20(%rsi),%rdi
    ec28:	48 85 c9             	test   %rcx,%rcx
    ec2b:	75 e0                	jne    ec0d <dlmalloc+0x1a3d>
    ec2d:	4c 3b 1d 24 be 01 00 	cmp    0x1be24(%rip),%r11        # 2aa58 <_gm_+0x18>
    ec34:	0f 82 f6 eb ff ff    	jb     d830 <dlmalloc+0x660>
    ec3a:	31 c9                	xor    %ecx,%ecx
    ec3c:	49 89 0b             	mov    %rcx,(%r11)
    ec3f:	e9 50 fe ff ff       	jmp    ea94 <dlmalloc+0x18c4>
    ec44:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    ec49:	d3 c6                	rol    %cl,%esi
    ec4b:	21 35 ef bd 01 00    	and    %esi,0x1bdef(%rip)        # 2aa40 <_gm_>
    ec51:	e9 a4 fc ff ff       	jmp    e8fa <dlmalloc+0x172a>
    ec56:	48 3b 3d fb bd 01 00 	cmp    0x1bdfb(%rip),%rdi        # 2aa58 <_gm_+0x18>
    ec5d:	0f 82 cd eb ff ff    	jb     d830 <dlmalloc+0x660>
    ec63:	4c 39 57 18          	cmp    %r10,0x18(%rdi)
    ec67:	0f 85 c3 eb ff ff    	jne    d830 <dlmalloc+0x660>
    ec6d:	48 39 f7             	cmp    %rsi,%rdi
    ec70:	74 d2                	je     ec44 <dlmalloc+0x1a74>
    ec72:	4c 39 de             	cmp    %r11,%rsi
    ec75:	0f 84 77 fc ff ff    	je     e8f2 <dlmalloc+0x1722>
    ec7b:	e9 5b fc ff ff       	jmp    e8db <dlmalloc+0x170b>
    ec80:	49 8b 72 20          	mov    0x20(%r10),%rsi
    ec84:	48 85 f6             	test   %rsi,%rsi
    ec87:	0f 84 07 fe ff ff    	je     ea94 <dlmalloc+0x18c4>
    ec8d:	49 8d 7a 20          	lea    0x20(%r10),%rdi
    ec91:	e9 74 ff ff ff       	jmp    ec0a <dlmalloc+0x1a3a>
    ec96:	4c 89 ff             	mov    %r15,%rdi
    ec99:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    ec9e:	48 f7 df             	neg    %rdi
    eca1:	e8 4a da ff ff       	call   c6f0 <sbrk>
    eca6:	c7 05 80 c1 01 00 00 	movl   $0x0,0x1c180(%rip)        # 2ae30 <malloc_global_mutex>
    ecad:	00 00 00 
    ecb0:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    ecb5:	e9 d9 ee ff ff       	jmp    db93 <dlmalloc+0x9c3>
    ecba:	49 89 74 24 20       	mov    %rsi,0x20(%r12)
    ecbf:	e9 0f fe ff ff       	jmp    ead3 <dlmalloc+0x1903>
    ecc4:	4b 89 74 dd 08       	mov    %rsi,0x8(%r13,%r11,8)
    ecc9:	48 85 f6             	test   %rsi,%rsi
    eccc:	0f 85 0a fe ff ff    	jne    eadc <dlmalloc+0x190c>
    ecd2:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    ecd7:	d3 c6                	rol    %cl,%esi
    ecd9:	21 35 65 bd 01 00    	and    %esi,0x1bd65(%rip)        # 2aa44 <_gm_+0x4>
    ecdf:	e9 16 fc ff ff       	jmp    e8fa <dlmalloc+0x172a>
    ece4:	45 31 c9             	xor    %r9d,%r9d
    ece7:	4d 89 4f 20          	mov    %r9,0x20(%r15)
    eceb:	e9 90 ea ff ff       	jmp    d780 <dlmalloc+0x5b0>
    ecf0:	45 31 f6             	xor    %r14d,%r14d
    ecf3:	4d 89 74 cd 08       	mov    %r14,0x8(%r13,%rcx,8)
    ecf8:	e9 01 fa ff ff       	jmp    e6fe <dlmalloc+0x152e>
    ecfd:	e8 de e3 ff ff       	call   d0e0 <init_mparams.isra.0>
    ed02:	e9 82 ed ff ff       	jmp    da89 <dlmalloc+0x8b9>
    ed07:	31 c0                	xor    %eax,%eax
    ed09:	49 89 46 20          	mov    %rax,0x20(%r14)
    ed0d:	e9 4e ec ff ff       	jmp    d960 <dlmalloc+0x790>
    ed12:	31 c9                	xor    %ecx,%ecx
    ed14:	4b 89 4c c5 08       	mov    %rcx,0x8(%r13,%r8,8)
    ed19:	e9 0a fc ff ff       	jmp    e928 <dlmalloc+0x1758>
    ed1e:	66 90                	xchg   %ax,%ax

000000000000ed20 <internal_memalign.constprop.0>:
    ed20:	41 55                	push   %r13
    ed22:	41 54                	push   %r12
    ed24:	55                   	push   %rbp
    ed25:	53                   	push   %rbx
    ed26:	bb 20 00 00 00       	mov    $0x20,%ebx
    ed2b:	48 83 ec 18          	sub    $0x18,%rsp
    ed2f:	48 39 df             	cmp    %rbx,%rdi
    ed32:	48 0f 43 df          	cmovae %rdi,%rbx
    ed36:	48 8d 43 ff          	lea    -0x1(%rbx),%rax
    ed3a:	48 85 d8             	test   %rbx,%rax
    ed3d:	74 49                	je     ed88 <internal_memalign.constprop.0+0x68>
    ed3f:	48 83 ff 20          	cmp    $0x20,%rdi
    ed43:	0f 86 17 02 00 00    	jbe    ef60 <internal_memalign.constprop.0+0x240>
    ed49:	b8 20 00 00 00       	mov    $0x20,%eax
    ed4e:	66 90                	xchg   %ax,%ax
    ed50:	48 01 c0             	add    %rax,%rax
    ed53:	48 39 d8             	cmp    %rbx,%rax
    ed56:	72 f8                	jb     ed50 <internal_memalign.constprop.0+0x30>
    ed58:	48 c7 c2 80 ff ff ff 	mov    $0xffffffffffffff80,%rdx
    ed5f:	48 89 c3             	mov    %rax,%rbx
    ed62:	48 29 c2             	sub    %rax,%rdx
    ed65:	48 39 d6             	cmp    %rdx,%rsi
    ed68:	72 2d                	jb     ed97 <internal_memalign.constprop.0+0x77>
    ed6a:	e8 61 22 00 00       	call   10fd0 <__errno_location>
    ed6f:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
    ed75:	48 83 c4 18          	add    $0x18,%rsp
    ed79:	31 c0                	xor    %eax,%eax
    ed7b:	5b                   	pop    %rbx
    ed7c:	5d                   	pop    %rbp
    ed7d:	41 5c                	pop    %r12
    ed7f:	41 5d                	pop    %r13
    ed81:	c3                   	ret    
    ed82:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    ed88:	48 c7 c2 80 ff ff ff 	mov    $0xffffffffffffff80,%rdx
    ed8f:	48 29 da             	sub    %rbx,%rdx
    ed92:	48 39 d6             	cmp    %rdx,%rsi
    ed95:	73 d3                	jae    ed6a <internal_memalign.constprop.0+0x4a>
    ed97:	48 8d 46 1f          	lea    0x1f(%rsi),%rax
    ed9b:	ba 20 00 00 00       	mov    $0x20,%edx
    eda0:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
    eda4:	48 83 fe 0e          	cmp    $0xe,%rsi
    eda8:	48 0f 47 d0          	cmova  %rax,%rdx
    edac:	48 8d 7c 13 10       	lea    0x10(%rbx,%rdx,1),%rdi
    edb1:	49 89 d4             	mov    %rdx,%r12
    edb4:	e8 17 e4 ff ff       	call   d1d0 <dlmalloc>
    edb9:	48 85 c0             	test   %rax,%rax
    edbc:	74 b7                	je     ed75 <internal_memalign.constprop.0+0x55>
    edbe:	44 8b 2d eb bf 01 00 	mov    0x1bfeb(%rip),%r13d        # 2adb0 <_gm_+0x370>
    edc5:	48 8d 70 f0          	lea    -0x10(%rax),%rsi
    edc9:	41 83 e5 02          	and    $0x2,%r13d
    edcd:	0f 85 9d 00 00 00    	jne    ee70 <internal_memalign.constprop.0+0x150>
    edd3:	48 8d 6b ff          	lea    -0x1(%rbx),%rbp
    edd7:	48 85 e8             	test   %rbp,%rax
    edda:	75 3c                	jne    ee18 <internal_memalign.constprop.0+0xf8>
    eddc:	48 8b 50 f8          	mov    -0x8(%rax),%rdx
    ede0:	48 89 f5             	mov    %rsi,%rbp
    ede3:	f6 c2 03             	test   $0x3,%dl
    ede6:	74 15                	je     edfd <internal_memalign.constprop.0+0xdd>
    ede8:	48 89 d1             	mov    %rdx,%rcx
    edeb:	49 8d 74 24 20       	lea    0x20(%r12),%rsi
    edf0:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    edf4:	48 39 ce             	cmp    %rcx,%rsi
    edf7:	0f 82 a3 00 00 00    	jb     eea0 <internal_memalign.constprop.0+0x180>
    edfd:	45 85 ed             	test   %r13d,%r13d
    ee00:	0f 85 72 01 00 00    	jne    ef78 <internal_memalign.constprop.0+0x258>
    ee06:	48 83 c4 18          	add    $0x18,%rsp
    ee0a:	5b                   	pop    %rbx
    ee0b:	5d                   	pop    %rbp
    ee0c:	41 5c                	pop    %r12
    ee0e:	41 5d                	pop    %r13
    ee10:	c3                   	ret    
    ee11:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    ee18:	48 89 da             	mov    %rbx,%rdx
    ee1b:	48 01 c5             	add    %rax,%rbp
    ee1e:	48 f7 da             	neg    %rdx
    ee21:	48 21 d5             	and    %rdx,%rbp
    ee24:	48 83 ed 10          	sub    $0x10,%rbp
    ee28:	48 89 e9             	mov    %rbp,%rcx
    ee2b:	48 29 f1             	sub    %rsi,%rcx
    ee2e:	48 83 f9 1f          	cmp    $0x1f,%rcx
    ee32:	77 09                	ja     ee3d <internal_memalign.constprop.0+0x11d>
    ee34:	48 01 dd             	add    %rbx,%rbp
    ee37:	48 89 e9             	mov    %rbp,%rcx
    ee3a:	48 29 f1             	sub    %rsi,%rcx
    ee3d:	48 8b 78 f8          	mov    -0x8(%rax),%rdi
    ee41:	48 8d 5d 10          	lea    0x10(%rbp),%rbx
    ee45:	48 89 fa             	mov    %rdi,%rdx
    ee48:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    ee4c:	48 29 ca             	sub    %rcx,%rdx
    ee4f:	83 e7 03             	and    $0x3,%edi
    ee52:	0f 85 a8 00 00 00    	jne    ef00 <internal_memalign.constprop.0+0x1e0>
    ee58:	48 03 48 f0          	add    -0x10(%rax),%rcx
    ee5c:	48 89 55 08          	mov    %rdx,0x8(%rbp)
    ee60:	48 89 d8             	mov    %rbx,%rax
    ee63:	48 89 4d 00          	mov    %rcx,0x0(%rbp)
    ee67:	e9 77 ff ff ff       	jmp    ede3 <internal_memalign.constprop.0+0xc3>
    ee6c:	0f 1f 40 00          	nopl   0x0(%rax)
    ee70:	ba 01 00 00 00       	mov    $0x1,%edx
    ee75:	87 15 39 bf 01 00    	xchg   %edx,0x1bf39(%rip)        # 2adb4 <_gm_+0x374>
    ee7b:	85 d2                	test   %edx,%edx
    ee7d:	0f 85 0d 01 00 00    	jne    ef90 <internal_memalign.constprop.0+0x270>
    ee83:	44 8b 2d 26 bf 01 00 	mov    0x1bf26(%rip),%r13d        # 2adb0 <_gm_+0x370>
    ee8a:	48 8d 6b ff          	lea    -0x1(%rbx),%rbp
    ee8e:	41 83 e5 02          	and    $0x2,%r13d
    ee92:	48 85 e8             	test   %rbp,%rax
    ee95:	75 81                	jne    ee18 <internal_memalign.constprop.0+0xf8>
    ee97:	e9 40 ff ff ff       	jmp    eddc <internal_memalign.constprop.0+0xbc>
    ee9c:	0f 1f 40 00          	nopl   0x0(%rax)
    eea0:	83 e2 01             	and    $0x1,%edx
    eea3:	49 89 c8             	mov    %rcx,%r8
    eea6:	4a 8d 74 25 00       	lea    0x0(%rbp,%r12,1),%rsi
    eeab:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    eeb0:	4c 09 e2             	or     %r12,%rdx
    eeb3:	4d 29 e0             	sub    %r12,%r8
    eeb6:	48 8d 3d 83 bb 01 00 	lea    0x1bb83(%rip),%rdi        # 2aa40 <_gm_>
    eebd:	48 83 ca 02          	or     $0x2,%rdx
    eec1:	4d 89 c1             	mov    %r8,%r9
    eec4:	48 89 55 08          	mov    %rdx,0x8(%rbp)
    eec8:	48 8b 15 31 bf 01 00 	mov    0x1bf31(%rip),%rdx        # 2ae00 <mparams>
    eecf:	48 01 cd             	add    %rcx,%rbp
    eed2:	49 83 c9 03          	or     $0x3,%r9
    eed6:	4c 89 4e 08          	mov    %r9,0x8(%rsi)
    eeda:	48 31 fa             	xor    %rdi,%rdx
    eedd:	48 89 16             	mov    %rdx,(%rsi)
    eee0:	48 83 4d 08 01       	orq    $0x1,0x8(%rbp)
    eee5:	48 89 55 00          	mov    %rdx,0x0(%rbp)
    eee9:	4c 89 c2             	mov    %r8,%rdx
    eeec:	e8 bf d9 ff ff       	call   c8b0 <dispose_chunk>
    eef1:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    eef6:	e9 02 ff ff ff       	jmp    edfd <internal_memalign.constprop.0+0xdd>
    eefb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    ef00:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
    ef04:	4c 8b 05 f5 be 01 00 	mov    0x1bef5(%rip),%r8        # 2ae00 <mparams>
    ef0b:	83 e7 01             	and    $0x1,%edi
    ef0e:	48 09 d7             	or     %rdx,%rdi
    ef11:	48 01 ea             	add    %rbp,%rdx
    ef14:	48 83 cf 02          	or     $0x2,%rdi
    ef18:	48 89 7d 08          	mov    %rdi,0x8(%rbp)
    ef1c:	48 8d 3d 1d bb 01 00 	lea    0x1bb1d(%rip),%rdi        # 2aa40 <_gm_>
    ef23:	49 31 f8             	xor    %rdi,%r8
    ef26:	48 83 4a 08 01       	orq    $0x1,0x8(%rdx)
    ef2b:	4c 89 02             	mov    %r8,(%rdx)
    ef2e:	48 8b 50 f8          	mov    -0x8(%rax),%rdx
    ef32:	83 e2 01             	and    $0x1,%edx
    ef35:	48 09 ca             	or     %rcx,%rdx
    ef38:	48 83 ca 02          	or     $0x2,%rdx
    ef3c:	48 89 50 f8          	mov    %rdx,-0x8(%rax)
    ef40:	48 89 ca             	mov    %rcx,%rdx
    ef43:	48 83 4d 08 01       	orq    $0x1,0x8(%rbp)
    ef48:	4c 89 45 00          	mov    %r8,0x0(%rbp)
    ef4c:	e8 5f d9 ff ff       	call   c8b0 <dispose_chunk>
    ef51:	48 8b 55 08          	mov    0x8(%rbp),%rdx
    ef55:	48 89 d8             	mov    %rbx,%rax
    ef58:	e9 86 fe ff ff       	jmp    ede3 <internal_memalign.constprop.0+0xc3>
    ef5d:	0f 1f 00             	nopl   (%rax)
    ef60:	48 c7 c2 60 ff ff ff 	mov    $0xffffffffffffff60,%rdx
    ef67:	bb 20 00 00 00       	mov    $0x20,%ebx
    ef6c:	e9 21 fe ff ff       	jmp    ed92 <internal_memalign.constprop.0+0x72>
    ef71:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    ef78:	c7 05 32 be 01 00 00 	movl   $0x0,0x1be32(%rip)        # 2adb4 <_gm_+0x374>
    ef7f:	00 00 00 
    ef82:	48 83 c4 18          	add    $0x18,%rsp
    ef86:	5b                   	pop    %rbx
    ef87:	5d                   	pop    %rbp
    ef88:	41 5c                	pop    %r12
    ef8a:	41 5d                	pop    %r13
    ef8c:	c3                   	ret    
    ef8d:	0f 1f 00             	nopl   (%rax)
    ef90:	b9 01 00 00 00       	mov    $0x1,%ecx
    ef95:	0f 1f 00             	nopl   (%rax)
    ef98:	8b 15 16 be 01 00    	mov    0x1be16(%rip),%edx        # 2adb4 <_gm_+0x374>
    ef9e:	85 d2                	test   %edx,%edx
    efa0:	75 f6                	jne    ef98 <internal_memalign.constprop.0+0x278>
    efa2:	89 ca                	mov    %ecx,%edx
    efa4:	87 15 0a be 01 00    	xchg   %edx,0x1be0a(%rip)        # 2adb4 <_gm_+0x374>
    efaa:	85 d2                	test   %edx,%edx
    efac:	75 ea                	jne    ef98 <internal_memalign.constprop.0+0x278>
    efae:	e9 d0 fe ff ff       	jmp    ee83 <internal_memalign.constprop.0+0x163>
    efb3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    efba:	00 00 00 
    efbd:	0f 1f 00             	nopl   (%rax)

000000000000efc0 <dlfree>:
    efc0:	f3 0f 1e fa          	endbr64 
    efc4:	48 85 ff             	test   %rdi,%rdi
    efc7:	0f 84 db 01 00 00    	je     f1a8 <dlfree+0x1e8>
    efcd:	41 55                	push   %r13
    efcf:	48 89 f8             	mov    %rdi,%rax
    efd2:	48 8d 57 f0          	lea    -0x10(%rdi),%rdx
    efd6:	41 54                	push   %r12
    efd8:	55                   	push   %rbp
    efd9:	53                   	push   %rbx
    efda:	48 83 ec 08          	sub    $0x8,%rsp
    efde:	48 8b 4f f8          	mov    -0x8(%rdi),%rcx
    efe2:	48 8b 35 17 be 01 00 	mov    0x1be17(%rip),%rsi        # 2ae00 <mparams>
    efe9:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    efed:	48 8b 5c 0f f0       	mov    -0x10(%rdi,%rcx,1),%rbx
    eff2:	48 31 f3             	xor    %rsi,%rbx
    eff5:	48 3b 73 40          	cmp    0x40(%rbx),%rsi
    eff9:	0f 85 89 02 00 00    	jne    f288 <dlfree+0x2c8>
    efff:	f6 83 70 03 00 00 02 	testb  $0x2,0x370(%rbx)
    f006:	0f 85 54 01 00 00    	jne    f160 <dlfree+0x1a0>
    f00c:	4c 8b 4b 18          	mov    0x18(%rbx),%r9
    f010:	4c 39 ca             	cmp    %r9,%rdx
    f013:	0f 82 87 01 00 00    	jb     f1a0 <dlfree+0x1e0>
    f019:	48 8b 48 f8          	mov    -0x8(%rax),%rcx
    f01d:	49 89 c8             	mov    %rcx,%r8
    f020:	41 83 e0 03          	and    $0x3,%r8d
    f024:	49 83 f8 01          	cmp    $0x1,%r8
    f028:	0f 84 72 01 00 00    	je     f1a0 <dlfree+0x1e0>
    f02e:	48 89 ce             	mov    %rcx,%rsi
    f031:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
    f035:	83 e1 01             	and    $0x1,%ecx
    f038:	48 8d 3c 32          	lea    (%rdx,%rsi,1),%rdi
    f03c:	0f 84 9e 00 00 00    	je     f0e0 <dlfree+0x120>
    f042:	48 39 fa             	cmp    %rdi,%rdx
    f045:	0f 83 55 01 00 00    	jae    f1a0 <dlfree+0x1e0>
    f04b:	48 8b 47 08          	mov    0x8(%rdi),%rax
    f04f:	a8 01                	test   $0x1,%al
    f051:	0f 84 49 01 00 00    	je     f1a0 <dlfree+0x1e0>
    f057:	a8 02                	test   $0x2,%al
    f059:	0f 84 51 01 00 00    	je     f1b0 <dlfree+0x1f0>
    f05f:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    f063:	48 89 47 08          	mov    %rax,0x8(%rdi)
    f067:	48 89 f0             	mov    %rsi,%rax
    f06a:	48 83 c8 01          	or     $0x1,%rax
    f06e:	48 89 42 08          	mov    %rax,0x8(%rdx)
    f072:	48 89 34 32          	mov    %rsi,(%rdx,%rsi,1)
    f076:	48 89 f1             	mov    %rsi,%rcx
    f079:	48 c1 e9 03          	shr    $0x3,%rcx
    f07d:	48 81 fe ff 00 00 00 	cmp    $0xff,%rsi
    f084:	0f 87 ce 01 00 00    	ja     f258 <dlfree+0x298>
    f08a:	8d 44 09 09          	lea    0x9(%rcx,%rcx,1),%eax
    f08e:	8b 3b                	mov    (%rbx),%edi
    f090:	48 8d 34 c3          	lea    (%rbx,%rax,8),%rsi
    f094:	b8 01 00 00 00       	mov    $0x1,%eax
    f099:	d3 e0                	shl    %cl,%eax
    f09b:	85 c7                	test   %eax,%edi
    f09d:	0f 84 35 06 00 00    	je     f6d8 <dlfree+0x718>
    f0a3:	48 8b 46 10          	mov    0x10(%rsi),%rax
    f0a7:	4c 39 c8             	cmp    %r9,%rax
    f0aa:	0f 82 d8 01 00 00    	jb     f288 <dlfree+0x2c8>
    f0b0:	48 89 56 10          	mov    %rdx,0x10(%rsi)
    f0b4:	48 89 50 18          	mov    %rdx,0x18(%rax)
    f0b8:	48 89 42 10          	mov    %rax,0x10(%rdx)
    f0bc:	48 89 72 18          	mov    %rsi,0x18(%rdx)
    f0c0:	f6 83 70 03 00 00 02 	testb  $0x2,0x370(%rbx)
    f0c7:	0f 85 73 01 00 00    	jne    f240 <dlfree+0x280>
    f0cd:	48 83 c4 08          	add    $0x8,%rsp
    f0d1:	5b                   	pop    %rbx
    f0d2:	5d                   	pop    %rbp
    f0d3:	41 5c                	pop    %r12
    f0d5:	41 5d                	pop    %r13
    f0d7:	c3                   	ret    
    f0d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    f0df:	00 
    f0e0:	48 8b 40 f0          	mov    -0x10(%rax),%rax
    f0e4:	4d 85 c0             	test   %r8,%r8
    f0e7:	74 d7                	je     f0c0 <dlfree+0x100>
    f0e9:	48 29 c2             	sub    %rax,%rdx
    f0ec:	48 01 c6             	add    %rax,%rsi
    f0ef:	4c 39 ca             	cmp    %r9,%rdx
    f0f2:	0f 82 a8 00 00 00    	jb     f1a0 <dlfree+0x1e0>
    f0f8:	48 39 53 20          	cmp    %rdx,0x20(%rbx)
    f0fc:	0f 84 9e 05 00 00    	je     f6a0 <dlfree+0x6e0>
    f102:	48 89 c1             	mov    %rax,%rcx
    f105:	48 c1 e9 03          	shr    $0x3,%rcx
    f109:	48 3d ff 00 00 00    	cmp    $0xff,%rax
    f10f:	0f 87 6b 02 00 00    	ja     f380 <dlfree+0x3c0>
    f115:	44 8d 54 09 09       	lea    0x9(%rcx,%rcx,1),%r10d
    f11a:	48 8b 42 10          	mov    0x10(%rdx),%rax
    f11e:	4c 8b 42 18          	mov    0x18(%rdx),%r8
    f122:	4e 8d 14 d3          	lea    (%rbx,%r10,8),%r10
    f126:	49 39 c2             	cmp    %rax,%r10
    f129:	0f 85 ae 07 00 00    	jne    f8dd <dlfree+0x91d>
    f12f:	4c 39 c0             	cmp    %r8,%rax
    f132:	0f 84 28 05 00 00    	je     f660 <dlfree+0x6a0>
    f138:	4d 39 c8             	cmp    %r9,%r8
    f13b:	0f 82 47 01 00 00    	jb     f288 <dlfree+0x2c8>
    f141:	49 39 50 10          	cmp    %rdx,0x10(%r8)
    f145:	0f 85 3d 01 00 00    	jne    f288 <dlfree+0x2c8>
    f14b:	4c 89 40 18          	mov    %r8,0x18(%rax)
    f14f:	49 89 40 10          	mov    %rax,0x10(%r8)
    f153:	e9 ea fe ff ff       	jmp    f042 <dlfree+0x82>
    f158:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    f15f:	00 
    f160:	48 8d b3 74 03 00 00 	lea    0x374(%rbx),%rsi
    f167:	b9 01 00 00 00       	mov    $0x1,%ecx
    f16c:	87 0e                	xchg   %ecx,(%rsi)
    f16e:	85 c9                	test   %ecx,%ecx
    f170:	0f 84 96 fe ff ff    	je     f00c <dlfree+0x4c>
    f176:	bf 01 00 00 00       	mov    $0x1,%edi
    f17b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    f180:	8b 8b 74 03 00 00    	mov    0x374(%rbx),%ecx
    f186:	85 c9                	test   %ecx,%ecx
    f188:	75 f6                	jne    f180 <dlfree+0x1c0>
    f18a:	89 f9                	mov    %edi,%ecx
    f18c:	87 0e                	xchg   %ecx,(%rsi)
    f18e:	85 c9                	test   %ecx,%ecx
    f190:	75 ee                	jne    f180 <dlfree+0x1c0>
    f192:	e9 75 fe ff ff       	jmp    f00c <dlfree+0x4c>
    f197:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    f19e:	00 00 
    f1a0:	e8 92 33 00 00       	call   12537 <abort>
    f1a5:	0f 1f 00             	nopl   (%rax)
    f1a8:	c3                   	ret    
    f1a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f1b0:	4c 8b 5b 20          	mov    0x20(%rbx),%r11
    f1b4:	48 39 7b 28          	cmp    %rdi,0x28(%rbx)
    f1b8:	0f 84 72 05 00 00    	je     f730 <dlfree+0x770>
    f1be:	49 39 fb             	cmp    %rdi,%r11
    f1c1:	0f 84 91 06 00 00    	je     f858 <dlfree+0x898>
    f1c7:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    f1cb:	48 89 c1             	mov    %rax,%rcx
    f1ce:	48 01 c6             	add    %rax,%rsi
    f1d1:	48 c1 e9 03          	shr    $0x3,%rcx
    f1d5:	48 3d f8 00 00 00    	cmp    $0xf8,%rax
    f1db:	0f 87 67 02 00 00    	ja     f448 <dlfree+0x488>
    f1e1:	44 8d 54 09 09       	lea    0x9(%rcx,%rcx,1),%r10d
    f1e6:	48 8b 47 10          	mov    0x10(%rdi),%rax
    f1ea:	4c 8b 47 18          	mov    0x18(%rdi),%r8
    f1ee:	4e 8d 14 d3          	lea    (%rbx,%r10,8),%r10
    f1f2:	49 39 c2             	cmp    %rax,%r10
    f1f5:	0f 85 73 04 00 00    	jne    f66e <dlfree+0x6ae>
    f1fb:	4c 39 c0             	cmp    %r8,%rax
    f1fe:	0f 84 7c 06 00 00    	je     f880 <dlfree+0x8c0>
    f204:	4d 39 c8             	cmp    %r9,%r8
    f207:	72 7f                	jb     f288 <dlfree+0x2c8>
    f209:	49 39 78 10          	cmp    %rdi,0x10(%r8)
    f20d:	75 79                	jne    f288 <dlfree+0x2c8>
    f20f:	4c 89 40 18          	mov    %r8,0x18(%rax)
    f213:	49 89 40 10          	mov    %rax,0x10(%r8)
    f217:	48 89 f0             	mov    %rsi,%rax
    f21a:	48 83 c8 01          	or     $0x1,%rax
    f21e:	48 89 42 08          	mov    %rax,0x8(%rdx)
    f222:	48 89 34 32          	mov    %rsi,(%rdx,%rsi,1)
    f226:	4c 39 da             	cmp    %r11,%rdx
    f229:	0f 85 47 fe ff ff    	jne    f076 <dlfree+0xb6>
    f22f:	48 89 73 08          	mov    %rsi,0x8(%rbx)
    f233:	e9 88 fe ff ff       	jmp    f0c0 <dlfree+0x100>
    f238:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    f23f:	00 
    f240:	c7 83 74 03 00 00 00 	movl   $0x0,0x374(%rbx)
    f247:	00 00 00 
    f24a:	48 83 c4 08          	add    $0x8,%rsp
    f24e:	5b                   	pop    %rbx
    f24f:	5d                   	pop    %rbp
    f250:	41 5c                	pop    %r12
    f252:	41 5d                	pop    %r13
    f254:	c3                   	ret    
    f255:	0f 1f 00             	nopl   (%rax)
    f258:	48 89 f0             	mov    %rsi,%rax
    f25b:	48 c1 e8 08          	shr    $0x8,%rax
    f25f:	89 c1                	mov    %eax,%ecx
    f261:	85 c0                	test   %eax,%eax
    f263:	74 2b                	je     f290 <dlfree+0x2d0>
    f265:	3d ff ff 00 00       	cmp    $0xffff,%eax
    f26a:	0f 86 a0 02 00 00    	jbe    f510 <dlfree+0x550>
    f270:	b8 00 00 00 80       	mov    $0x80000000,%eax
    f275:	bf 50 03 00 00       	mov    $0x350,%edi
    f27a:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    f27f:	eb 19                	jmp    f29a <dlfree+0x2da>
    f281:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f288:	e8 aa 32 00 00       	call   12537 <abort>
    f28d:	0f 1f 00             	nopl   (%rax)
    f290:	b8 01 00 00 00       	mov    $0x1,%eax
    f295:	bf 58 02 00 00       	mov    $0x258,%edi
    f29a:	44 8b 43 04          	mov    0x4(%rbx),%r8d
    f29e:	66 48 0f 6e ca       	movq   %rdx,%xmm1
    f2a3:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f2a7:	89 4a 38             	mov    %ecx,0x38(%rdx)
    f2aa:	66 0f 6c c9          	punpcklqdq %xmm1,%xmm1
    f2ae:	0f 11 42 20          	movups %xmm0,0x20(%rdx)
    f2b2:	44 85 c0             	test   %r8d,%eax
    f2b5:	0f 84 2d 04 00 00    	je     f6e8 <dlfree+0x728>
    f2bb:	89 c8                	mov    %ecx,%eax
    f2bd:	49 89 f0             	mov    %rsi,%r8
    f2c0:	48 8b bc c3 58 02 00 	mov    0x258(%rbx,%rax,8),%rdi
    f2c7:	00 
    f2c8:	83 f9 1f             	cmp    $0x1f,%ecx
    f2cb:	74 31                	je     f2fe <dlfree+0x33e>
    f2cd:	89 c8                	mov    %ecx,%eax
    f2cf:	b9 39 00 00 00       	mov    $0x39,%ecx
    f2d4:	d1 e8                	shr    %eax
    f2d6:	29 c1                	sub    %eax,%ecx
    f2d8:	49 d3 e0             	shl    %cl,%r8
    f2db:	eb 21                	jmp    f2fe <dlfree+0x33e>
    f2dd:	0f 1f 00             	nopl   (%rax)
    f2e0:	4c 89 c0             	mov    %r8,%rax
    f2e3:	4d 01 c0             	add    %r8,%r8
    f2e6:	48 c1 e8 3f          	shr    $0x3f,%rax
    f2ea:	48 83 c0 04          	add    $0x4,%rax
    f2ee:	48 8b 0c c7          	mov    (%rdi,%rax,8),%rcx
    f2f2:	48 85 c9             	test   %rcx,%rcx
    f2f5:	0f 84 15 04 00 00    	je     f710 <dlfree+0x750>
    f2fb:	48 89 cf             	mov    %rcx,%rdi
    f2fe:	48 8b 47 08          	mov    0x8(%rdi),%rax
    f302:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    f306:	48 39 f0             	cmp    %rsi,%rax
    f309:	75 d5                	jne    f2e0 <dlfree+0x320>
    f30b:	48 8b 47 10          	mov    0x10(%rdi),%rax
    f30f:	66 48 0f 6e d7       	movq   %rdi,%xmm2
    f314:	66 48 0f 6e c0       	movq   %rax,%xmm0
    f319:	66 0f 6c c2          	punpcklqdq %xmm2,%xmm0
    f31d:	4c 39 cf             	cmp    %r9,%rdi
    f320:	0f 82 62 ff ff ff    	jb     f288 <dlfree+0x2c8>
    f326:	4c 39 c8             	cmp    %r9,%rax
    f329:	0f 82 59 ff ff ff    	jb     f288 <dlfree+0x2c8>
    f32f:	48 89 50 18          	mov    %rdx,0x18(%rax)
    f333:	48 89 57 10          	mov    %rdx,0x10(%rdi)
    f337:	48 c7 42 30 00 00 00 	movq   $0x0,0x30(%rdx)
    f33e:	00 
    f33f:	0f 11 42 10          	movups %xmm0,0x10(%rdx)
    f343:	48 83 6b 38 01       	subq   $0x1,0x38(%rbx)
    f348:	0f 85 72 fd ff ff    	jne    f0c0 <dlfree+0x100>
    f34e:	48 8b 83 88 03 00 00 	mov    0x388(%rbx),%rax
    f355:	48 85 c0             	test   %rax,%rax
    f358:	74 0f                	je     f369 <dlfree+0x3a9>
    f35a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    f360:	48 8b 40 10          	mov    0x10(%rax),%rax
    f364:	48 85 c0             	test   %rax,%rax
    f367:	75 f7                	jne    f360 <dlfree+0x3a0>
    f369:	48 c7 43 38 ff ff ff 	movq   $0xffffffffffffffff,0x38(%rbx)
    f370:	ff 
    f371:	e9 4a fd ff ff       	jmp    f0c0 <dlfree+0x100>
    f376:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    f37d:	00 00 00 
    f380:	4c 8b 42 18          	mov    0x18(%rdx),%r8
    f384:	4c 8b 5a 30          	mov    0x30(%rdx),%r11
    f388:	49 39 d0             	cmp    %rdx,%r8
    f38b:	0f 84 bf 01 00 00    	je     f550 <dlfree+0x590>
    f391:	48 8b 42 10          	mov    0x10(%rdx),%rax
    f395:	4c 39 c8             	cmp    %r9,%rax
    f398:	0f 82 ea fe ff ff    	jb     f288 <dlfree+0x2c8>
    f39e:	48 39 50 18          	cmp    %rdx,0x18(%rax)
    f3a2:	0f 85 e0 fe ff ff    	jne    f288 <dlfree+0x2c8>
    f3a8:	49 39 50 10          	cmp    %rdx,0x10(%r8)
    f3ac:	0f 85 d6 fe ff ff    	jne    f288 <dlfree+0x2c8>
    f3b2:	4c 89 40 18          	mov    %r8,0x18(%rax)
    f3b6:	49 89 40 10          	mov    %rax,0x10(%r8)
    f3ba:	4d 85 db             	test   %r11,%r11
    f3bd:	0f 84 7f fc ff ff    	je     f042 <dlfree+0x82>
    f3c3:	8b 42 38             	mov    0x38(%rdx),%eax
    f3c6:	48 89 c1             	mov    %rax,%rcx
    f3c9:	4c 8d 50 4a          	lea    0x4a(%rax),%r10
    f3cd:	48 39 94 c3 58 02 00 	cmp    %rdx,0x258(%rbx,%rax,8)
    f3d4:	00 
    f3d5:	0f 84 c8 04 00 00    	je     f8a3 <dlfree+0x8e3>
    f3db:	4d 39 cb             	cmp    %r9,%r11
    f3de:	0f 82 a4 fe ff ff    	jb     f288 <dlfree+0x2c8>
    f3e4:	49 39 53 20          	cmp    %rdx,0x20(%r11)
    f3e8:	0f 84 4a 05 00 00    	je     f938 <dlfree+0x978>
    f3ee:	4d 89 43 28          	mov    %r8,0x28(%r11)
    f3f2:	4d 85 c0             	test   %r8,%r8
    f3f5:	0f 84 47 fc ff ff    	je     f042 <dlfree+0x82>
    f3fb:	4d 39 c8             	cmp    %r9,%r8
    f3fe:	0f 82 84 fe ff ff    	jb     f288 <dlfree+0x2c8>
    f404:	48 8b 42 20          	mov    0x20(%rdx),%rax
    f408:	4d 89 58 30          	mov    %r11,0x30(%r8)
    f40c:	48 85 c0             	test   %rax,%rax
    f40f:	74 11                	je     f422 <dlfree+0x462>
    f411:	4c 39 c8             	cmp    %r9,%rax
    f414:	0f 82 6e fe ff ff    	jb     f288 <dlfree+0x2c8>
    f41a:	49 89 40 20          	mov    %rax,0x20(%r8)
    f41e:	4c 89 40 30          	mov    %r8,0x30(%rax)
    f422:	48 8b 42 28          	mov    0x28(%rdx),%rax
    f426:	48 85 c0             	test   %rax,%rax
    f429:	0f 84 13 fc ff ff    	je     f042 <dlfree+0x82>
    f42f:	4c 39 c8             	cmp    %r9,%rax
    f432:	0f 82 50 fe ff ff    	jb     f288 <dlfree+0x2c8>
    f438:	49 89 40 28          	mov    %rax,0x28(%r8)
    f43c:	4c 89 40 30          	mov    %r8,0x30(%rax)
    f440:	e9 fd fb ff ff       	jmp    f042 <dlfree+0x82>
    f445:	0f 1f 00             	nopl   (%rax)
    f448:	4c 8b 47 18          	mov    0x18(%rdi),%r8
    f44c:	48 8b 6f 30          	mov    0x30(%rdi),%rbp
    f450:	49 39 f8             	cmp    %rdi,%r8
    f453:	0f 84 7f 01 00 00    	je     f5d8 <dlfree+0x618>
    f459:	48 8b 47 10          	mov    0x10(%rdi),%rax
    f45d:	4c 39 c8             	cmp    %r9,%rax
    f460:	0f 82 22 fe ff ff    	jb     f288 <dlfree+0x2c8>
    f466:	48 39 78 18          	cmp    %rdi,0x18(%rax)
    f46a:	0f 85 18 fe ff ff    	jne    f288 <dlfree+0x2c8>
    f470:	49 39 78 10          	cmp    %rdi,0x10(%r8)
    f474:	0f 85 0e fe ff ff    	jne    f288 <dlfree+0x2c8>
    f47a:	4c 89 40 18          	mov    %r8,0x18(%rax)
    f47e:	49 89 40 10          	mov    %rax,0x10(%r8)
    f482:	48 85 ed             	test   %rbp,%rbp
    f485:	0f 84 8c fd ff ff    	je     f217 <dlfree+0x257>
    f48b:	8b 47 38             	mov    0x38(%rdi),%eax
    f48e:	48 89 c1             	mov    %rax,%rcx
    f491:	4c 8d 50 4a          	lea    0x4a(%rax),%r10
    f495:	48 39 bc c3 58 02 00 	cmp    %rdi,0x258(%rbx,%rax,8)
    f49c:	00 
    f49d:	0f 84 1d 04 00 00    	je     f8c0 <dlfree+0x900>
    f4a3:	4c 39 cd             	cmp    %r9,%rbp
    f4a6:	0f 82 dc fd ff ff    	jb     f288 <dlfree+0x2c8>
    f4ac:	48 39 7d 20          	cmp    %rdi,0x20(%rbp)
    f4b0:	0f 84 8b 04 00 00    	je     f941 <dlfree+0x981>
    f4b6:	4c 89 45 28          	mov    %r8,0x28(%rbp)
    f4ba:	4d 85 c0             	test   %r8,%r8
    f4bd:	0f 84 54 fd ff ff    	je     f217 <dlfree+0x257>
    f4c3:	4d 39 c8             	cmp    %r9,%r8
    f4c6:	0f 82 bc fd ff ff    	jb     f288 <dlfree+0x2c8>
    f4cc:	48 8b 47 20          	mov    0x20(%rdi),%rax
    f4d0:	49 89 68 30          	mov    %rbp,0x30(%r8)
    f4d4:	48 85 c0             	test   %rax,%rax
    f4d7:	74 11                	je     f4ea <dlfree+0x52a>
    f4d9:	4c 39 c8             	cmp    %r9,%rax
    f4dc:	0f 82 a6 fd ff ff    	jb     f288 <dlfree+0x2c8>
    f4e2:	49 89 40 20          	mov    %rax,0x20(%r8)
    f4e6:	4c 89 40 30          	mov    %r8,0x30(%rax)
    f4ea:	48 8b 47 28          	mov    0x28(%rdi),%rax
    f4ee:	48 85 c0             	test   %rax,%rax
    f4f1:	0f 84 20 fd ff ff    	je     f217 <dlfree+0x257>
    f4f7:	4c 39 c8             	cmp    %r9,%rax
    f4fa:	0f 82 88 fd ff ff    	jb     f288 <dlfree+0x2c8>
    f500:	49 89 40 28          	mov    %rax,0x28(%r8)
    f504:	4c 89 40 30          	mov    %r8,0x30(%rax)
    f508:	e9 0a fd ff ff       	jmp    f217 <dlfree+0x257>
    f50d:	0f 1f 00             	nopl   (%rax)
    f510:	0f bd c1             	bsr    %ecx,%eax
    f513:	b9 26 00 00 00       	mov    $0x26,%ecx
    f518:	48 89 f7             	mov    %rsi,%rdi
    f51b:	83 f0 1f             	xor    $0x1f,%eax
    f51e:	29 c1                	sub    %eax,%ecx
    f520:	48 d3 ef             	shr    %cl,%rdi
    f523:	48 89 f9             	mov    %rdi,%rcx
    f526:	bf 1f 00 00 00       	mov    $0x1f,%edi
    f52b:	29 c7                	sub    %eax,%edi
    f52d:	83 e1 01             	and    $0x1,%ecx
    f530:	b8 01 00 00 00       	mov    $0x1,%eax
    f535:	8d 0c 79             	lea    (%rcx,%rdi,2),%ecx
    f538:	8d 79 4b             	lea    0x4b(%rcx),%edi
    f53b:	d3 e0                	shl    %cl,%eax
    f53d:	48 c1 e7 03          	shl    $0x3,%rdi
    f541:	e9 54 fd ff ff       	jmp    f29a <dlfree+0x2da>
    f546:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    f54d:	00 00 00 
    f550:	48 8b 42 28          	mov    0x28(%rdx),%rax
    f554:	48 8d 4a 28          	lea    0x28(%rdx),%rcx
    f558:	48 85 c0             	test   %rax,%rax
    f55b:	0f 84 af 03 00 00    	je     f910 <dlfree+0x950>
    f561:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f568:	49 89 ca             	mov    %rcx,%r10
    f56b:	49 89 c0             	mov    %rax,%r8
    f56e:	48 8d 48 28          	lea    0x28(%rax),%rcx
    f572:	48 8b 40 28          	mov    0x28(%rax),%rax
    f576:	48 85 c0             	test   %rax,%rax
    f579:	75 ed                	jne    f568 <dlfree+0x5a8>
    f57b:	49 8b 40 20          	mov    0x20(%r8),%rax
    f57f:	49 8d 48 20          	lea    0x20(%r8),%rcx
    f583:	48 85 c0             	test   %rax,%rax
    f586:	75 e0                	jne    f568 <dlfree+0x5a8>
    f588:	4d 39 ca             	cmp    %r9,%r10
    f58b:	0f 82 f7 fc ff ff    	jb     f288 <dlfree+0x2c8>
    f591:	49 c7 02 00 00 00 00 	movq   $0x0,(%r10)
    f598:	4d 85 db             	test   %r11,%r11
    f59b:	0f 84 a1 fa ff ff    	je     f042 <dlfree+0x82>
    f5a1:	8b 42 38             	mov    0x38(%rdx),%eax
    f5a4:	48 8d 48 4a          	lea    0x4a(%rax),%rcx
    f5a8:	48 39 94 c3 58 02 00 	cmp    %rdx,0x258(%rbx,%rax,8)
    f5af:	00 
    f5b0:	0f 84 a2 03 00 00    	je     f958 <dlfree+0x998>
    f5b6:	4d 39 cb             	cmp    %r9,%r11
    f5b9:	0f 82 c9 fc ff ff    	jb     f288 <dlfree+0x2c8>
    f5bf:	49 39 53 20          	cmp    %rdx,0x20(%r11)
    f5c3:	0f 84 ac 03 00 00    	je     f975 <dlfree+0x9b5>
    f5c9:	4d 89 43 28          	mov    %r8,0x28(%r11)
    f5cd:	e9 29 fe ff ff       	jmp    f3fb <dlfree+0x43b>
    f5d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    f5d8:	48 8b 47 28          	mov    0x28(%rdi),%rax
    f5dc:	48 8d 4f 28          	lea    0x28(%rdi),%rcx
    f5e0:	48 85 c0             	test   %rax,%rax
    f5e3:	0f 84 39 03 00 00    	je     f922 <dlfree+0x962>
    f5e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f5f0:	49 89 ca             	mov    %rcx,%r10
    f5f3:	49 89 c0             	mov    %rax,%r8
    f5f6:	48 8d 48 28          	lea    0x28(%rax),%rcx
    f5fa:	48 8b 40 28          	mov    0x28(%rax),%rax
    f5fe:	48 85 c0             	test   %rax,%rax
    f601:	75 ed                	jne    f5f0 <dlfree+0x630>
    f603:	49 8b 40 20          	mov    0x20(%r8),%rax
    f607:	49 8d 48 20          	lea    0x20(%r8),%rcx
    f60b:	48 85 c0             	test   %rax,%rax
    f60e:	75 e0                	jne    f5f0 <dlfree+0x630>
    f610:	4d 39 ca             	cmp    %r9,%r10
    f613:	0f 82 6f fc ff ff    	jb     f288 <dlfree+0x2c8>
    f619:	49 c7 02 00 00 00 00 	movq   $0x0,(%r10)
    f620:	48 85 ed             	test   %rbp,%rbp
    f623:	0f 84 ee fb ff ff    	je     f217 <dlfree+0x257>
    f629:	8b 47 38             	mov    0x38(%rdi),%eax
    f62c:	48 8d 48 4a          	lea    0x4a(%rax),%rcx
    f630:	48 39 bc c3 58 02 00 	cmp    %rdi,0x258(%rbx,%rax,8)
    f637:	00 
    f638:	0f 84 24 03 00 00    	je     f962 <dlfree+0x9a2>
    f63e:	4c 39 cd             	cmp    %r9,%rbp
    f641:	0f 82 41 fc ff ff    	jb     f288 <dlfree+0x2c8>
    f647:	48 39 7d 20          	cmp    %rdi,0x20(%rbp)
    f64b:	0f 84 1b 03 00 00    	je     f96c <dlfree+0x9ac>
    f651:	4c 89 45 28          	mov    %r8,0x28(%rbp)
    f655:	e9 69 fe ff ff       	jmp    f4c3 <dlfree+0x503>
    f65a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    f660:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    f665:	d3 c0                	rol    %cl,%eax
    f667:	21 03                	and    %eax,(%rbx)
    f669:	e9 d4 f9 ff ff       	jmp    f042 <dlfree+0x82>
    f66e:	4c 39 c8             	cmp    %r9,%rax
    f671:	0f 82 11 fc ff ff    	jb     f288 <dlfree+0x2c8>
    f677:	48 39 78 18          	cmp    %rdi,0x18(%rax)
    f67b:	0f 85 07 fc ff ff    	jne    f288 <dlfree+0x2c8>
    f681:	4c 39 c0             	cmp    %r8,%rax
    f684:	0f 84 f6 01 00 00    	je     f880 <dlfree+0x8c0>
    f68a:	4d 39 c2             	cmp    %r8,%r10
    f68d:	0f 84 7c fb ff ff    	je     f20f <dlfree+0x24f>
    f693:	e9 6c fb ff ff       	jmp    f204 <dlfree+0x244>
    f698:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    f69f:	00 
    f6a0:	48 8b 47 08          	mov    0x8(%rdi),%rax
    f6a4:	48 89 c1             	mov    %rax,%rcx
    f6a7:	48 f7 d1             	not    %rcx
    f6aa:	83 e1 03             	and    $0x3,%ecx
    f6ad:	0f 85 8f f9 ff ff    	jne    f042 <dlfree+0x82>
    f6b3:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    f6b7:	48 89 73 08          	mov    %rsi,0x8(%rbx)
    f6bb:	48 89 47 08          	mov    %rax,0x8(%rdi)
    f6bf:	48 89 f0             	mov    %rsi,%rax
    f6c2:	48 83 c8 01          	or     $0x1,%rax
    f6c6:	48 89 42 08          	mov    %rax,0x8(%rdx)
    f6ca:	48 89 37             	mov    %rsi,(%rdi)
    f6cd:	e9 ee f9 ff ff       	jmp    f0c0 <dlfree+0x100>
    f6d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    f6d8:	09 c7                	or     %eax,%edi
    f6da:	48 89 f0             	mov    %rsi,%rax
    f6dd:	89 3b                	mov    %edi,(%rbx)
    f6df:	e9 cc f9 ff ff       	jmp    f0b0 <dlfree+0xf0>
    f6e4:	0f 1f 40 00          	nopl   0x0(%rax)
    f6e8:	44 09 c0             	or     %r8d,%eax
    f6eb:	48 01 df             	add    %rbx,%rdi
    f6ee:	89 43 04             	mov    %eax,0x4(%rbx)
    f6f1:	48 89 94 cb 58 02 00 	mov    %rdx,0x258(%rbx,%rcx,8)
    f6f8:	00 
    f6f9:	48 89 7a 30          	mov    %rdi,0x30(%rdx)
    f6fd:	0f 11 4a 10          	movups %xmm1,0x10(%rdx)
    f701:	e9 3d fc ff ff       	jmp    f343 <dlfree+0x383>
    f706:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    f70d:	00 00 00 
    f710:	48 8d 0c c7          	lea    (%rdi,%rax,8),%rcx
    f714:	4c 39 c9             	cmp    %r9,%rcx
    f717:	0f 82 6b fb ff ff    	jb     f288 <dlfree+0x2c8>
    f71d:	48 89 14 c7          	mov    %rdx,(%rdi,%rax,8)
    f721:	48 89 7a 30          	mov    %rdi,0x30(%rdx)
    f725:	0f 11 4a 10          	movups %xmm1,0x10(%rdx)
    f729:	e9 15 fc ff ff       	jmp    f343 <dlfree+0x383>
    f72e:	66 90                	xchg   %ax,%ax
    f730:	48 03 73 10          	add    0x10(%rbx),%rsi
    f734:	48 89 53 28          	mov    %rdx,0x28(%rbx)
    f738:	48 89 f0             	mov    %rsi,%rax
    f73b:	48 89 73 10          	mov    %rsi,0x10(%rbx)
    f73f:	48 83 c8 01          	or     $0x1,%rax
    f743:	48 89 42 08          	mov    %rax,0x8(%rdx)
    f747:	4c 39 da             	cmp    %r11,%rdx
    f74a:	0f 84 3e 01 00 00    	je     f88e <dlfree+0x8ce>
    f750:	48 39 73 30          	cmp    %rsi,0x30(%rbx)
    f754:	0f 83 66 f9 ff ff    	jae    f0c0 <dlfree+0x100>
    f75a:	48 83 3d 9e b6 01 00 	cmpq   $0x0,0x1b69e(%rip)        # 2ae00 <mparams>
    f761:	00 
    f762:	0f 84 e2 01 00 00    	je     f94a <dlfree+0x98a>
    f768:	48 85 d2             	test   %rdx,%rdx
    f76b:	0f 84 4f f9 ff ff    	je     f0c0 <dlfree+0x100>
    f771:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
    f775:	48 83 f9 50          	cmp    $0x50,%rcx
    f779:	0f 86 a7 00 00 00    	jbe    f826 <dlfree+0x866>
    f77f:	48 8b 35 8a b6 01 00 	mov    0x1b68a(%rip),%rsi        # 2ae10 <mparams+0x10>
    f786:	48 8d ab 78 03 00 00 	lea    0x378(%rbx),%rbp
    f78d:	0f 1f 00             	nopl   (%rax)
    f790:	48 8b 45 00          	mov    0x0(%rbp),%rax
    f794:	48 39 c2             	cmp    %rax,%rdx
    f797:	72 09                	jb     f7a2 <dlfree+0x7e2>
    f799:	48 03 45 08          	add    0x8(%rbp),%rax
    f79d:	48 39 c2             	cmp    %rax,%rdx
    f7a0:	72 09                	jb     f7ab <dlfree+0x7eb>
    f7a2:	48 8b 6d 10          	mov    0x10(%rbp),%rbp
    f7a6:	48 85 ed             	test   %rbp,%rbp
    f7a9:	75 e5                	jne    f790 <dlfree+0x7d0>
    f7ab:	f6 45 18 08          	testb  $0x8,0x18(%rbp)
    f7af:	75 75                	jne    f826 <dlfree+0x866>
    f7b1:	48 8d 44 31 af       	lea    -0x51(%rcx,%rsi,1),%rax
    f7b6:	31 d2                	xor    %edx,%edx
    f7b8:	48 f7 f6             	div    %rsi
    f7bb:	48 83 e8 01          	sub    $0x1,%rax
    f7bf:	48 0f af c6          	imul   %rsi,%rax
    f7c3:	49 89 c4             	mov    %rax,%r12
    f7c6:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
    f7cd:	ff ff 7f 
    f7d0:	4c 39 e0             	cmp    %r12,%rax
    f7d3:	73 0d                	jae    f7e2 <dlfree+0x822>
    f7d5:	49 bc 00 00 00 00 00 	movabs $0x8000000000000000,%r12
    f7dc:	00 00 80 
    f7df:	49 29 f4             	sub    %rsi,%r12
    f7e2:	b8 01 00 00 00       	mov    $0x1,%eax
    f7e7:	87 05 43 b6 01 00    	xchg   %eax,0x1b643(%rip)        # 2ae30 <malloc_global_mutex>
    f7ed:	48 8d 15 3c b6 01 00 	lea    0x1b63c(%rip),%rdx        # 2ae30 <malloc_global_mutex>
    f7f4:	b9 01 00 00 00       	mov    $0x1,%ecx
    f7f9:	85 c0                	test   %eax,%eax
    f7fb:	75 40                	jne    f83d <dlfree+0x87d>
    f7fd:	31 ff                	xor    %edi,%edi
    f7ff:	e8 ec ce ff ff       	call   c6f0 <sbrk>
    f804:	49 89 c5             	mov    %rax,%r13
    f807:	48 8b 45 08          	mov    0x8(%rbp),%rax
    f80b:	48 03 45 00          	add    0x0(%rbp),%rax
    f80f:	49 39 c5             	cmp    %rax,%r13
    f812:	0f 84 e5 01 00 00    	je     f9fd <dlfree+0xa3d>
    f818:	c7 05 0e b6 01 00 00 	movl   $0x0,0x1b60e(%rip)        # 2ae30 <malloc_global_mutex>
    f81f:	00 00 00 
    f822:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
    f826:	48 39 4b 30          	cmp    %rcx,0x30(%rbx)
    f82a:	0f 83 90 f8 ff ff    	jae    f0c0 <dlfree+0x100>
    f830:	48 c7 43 30 ff ff ff 	movq   $0xffffffffffffffff,0x30(%rbx)
    f837:	ff 
    f838:	e9 83 f8 ff ff       	jmp    f0c0 <dlfree+0x100>
    f83d:	8b 02                	mov    (%rdx),%eax
    f83f:	85 c0                	test   %eax,%eax
    f841:	75 fa                	jne    f83d <dlfree+0x87d>
    f843:	89 c8                	mov    %ecx,%eax
    f845:	87 05 e5 b5 01 00    	xchg   %eax,0x1b5e5(%rip)        # 2ae30 <malloc_global_mutex>
    f84b:	85 c0                	test   %eax,%eax
    f84d:	75 ee                	jne    f83d <dlfree+0x87d>
    f84f:	eb ac                	jmp    f7fd <dlfree+0x83d>
    f851:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f858:	48 03 73 08          	add    0x8(%rbx),%rsi
    f85c:	48 89 53 20          	mov    %rdx,0x20(%rbx)
    f860:	48 89 f0             	mov    %rsi,%rax
    f863:	48 89 73 08          	mov    %rsi,0x8(%rbx)
    f867:	48 83 c8 01          	or     $0x1,%rax
    f86b:	48 89 42 08          	mov    %rax,0x8(%rdx)
    f86f:	48 89 34 32          	mov    %rsi,(%rdx,%rsi,1)
    f873:	e9 48 f8 ff ff       	jmp    f0c0 <dlfree+0x100>
    f878:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    f87f:	00 
    f880:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    f885:	d3 c0                	rol    %cl,%eax
    f887:	21 03                	and    %eax,(%rbx)
    f889:	e9 89 f9 ff ff       	jmp    f217 <dlfree+0x257>
    f88e:	48 c7 43 20 00 00 00 	movq   $0x0,0x20(%rbx)
    f895:	00 
    f896:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
    f89d:	00 
    f89e:	e9 ad fe ff ff       	jmp    f750 <dlfree+0x790>
    f8a3:	4e 89 44 d3 08       	mov    %r8,0x8(%rbx,%r10,8)
    f8a8:	4d 85 c0             	test   %r8,%r8
    f8ab:	0f 85 4a fb ff ff    	jne    f3fb <dlfree+0x43b>
    f8b1:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    f8b6:	d3 c0                	rol    %cl,%eax
    f8b8:	21 43 04             	and    %eax,0x4(%rbx)
    f8bb:	e9 82 f7 ff ff       	jmp    f042 <dlfree+0x82>
    f8c0:	4e 89 44 d3 08       	mov    %r8,0x8(%rbx,%r10,8)
    f8c5:	4d 85 c0             	test   %r8,%r8
    f8c8:	0f 85 f5 fb ff ff    	jne    f4c3 <dlfree+0x503>
    f8ce:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    f8d3:	d3 c0                	rol    %cl,%eax
    f8d5:	21 43 04             	and    %eax,0x4(%rbx)
    f8d8:	e9 3a f9 ff ff       	jmp    f217 <dlfree+0x257>
    f8dd:	4c 39 c8             	cmp    %r9,%rax
    f8e0:	0f 82 a2 f9 ff ff    	jb     f288 <dlfree+0x2c8>
    f8e6:	48 39 50 18          	cmp    %rdx,0x18(%rax)
    f8ea:	0f 85 98 f9 ff ff    	jne    f288 <dlfree+0x2c8>
    f8f0:	4c 39 c0             	cmp    %r8,%rax
    f8f3:	0f 84 67 fd ff ff    	je     f660 <dlfree+0x6a0>
    f8f9:	4d 39 c2             	cmp    %r8,%r10
    f8fc:	0f 84 49 f8 ff ff    	je     f14b <dlfree+0x18b>
    f902:	e9 31 f8 ff ff       	jmp    f138 <dlfree+0x178>
    f907:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    f90e:	00 00 
    f910:	48 8b 42 20          	mov    0x20(%rdx),%rax
    f914:	48 85 c0             	test   %rax,%rax
    f917:	74 65                	je     f97e <dlfree+0x9be>
    f919:	48 8d 4a 20          	lea    0x20(%rdx),%rcx
    f91d:	e9 46 fc ff ff       	jmp    f568 <dlfree+0x5a8>
    f922:	48 8b 47 20          	mov    0x20(%rdi),%rax
    f926:	48 85 c0             	test   %rax,%rax
    f929:	0f 84 8f 00 00 00    	je     f9be <dlfree+0x9fe>
    f92f:	48 8d 4f 20          	lea    0x20(%rdi),%rcx
    f933:	e9 b8 fc ff ff       	jmp    f5f0 <dlfree+0x630>
    f938:	4d 89 43 20          	mov    %r8,0x20(%r11)
    f93c:	e9 b1 fa ff ff       	jmp    f3f2 <dlfree+0x432>
    f941:	4c 89 45 20          	mov    %r8,0x20(%rbp)
    f945:	e9 70 fb ff ff       	jmp    f4ba <dlfree+0x4fa>
    f94a:	e8 91 d7 ff ff       	call   d0e0 <init_mparams.isra.0>
    f94f:	48 8b 53 28          	mov    0x28(%rbx),%rdx
    f953:	e9 10 fe ff ff       	jmp    f768 <dlfree+0x7a8>
    f958:	4c 89 44 cb 08       	mov    %r8,0x8(%rbx,%rcx,8)
    f95d:	e9 99 fa ff ff       	jmp    f3fb <dlfree+0x43b>
    f962:	4c 89 44 cb 08       	mov    %r8,0x8(%rbx,%rcx,8)
    f967:	e9 57 fb ff ff       	jmp    f4c3 <dlfree+0x503>
    f96c:	4c 89 45 20          	mov    %r8,0x20(%rbp)
    f970:	e9 4e fb ff ff       	jmp    f4c3 <dlfree+0x503>
    f975:	4d 89 43 20          	mov    %r8,0x20(%r11)
    f979:	e9 7d fa ff ff       	jmp    f3fb <dlfree+0x43b>
    f97e:	4d 85 db             	test   %r11,%r11
    f981:	0f 84 bb f6 ff ff    	je     f042 <dlfree+0x82>
    f987:	8b 42 38             	mov    0x38(%rdx),%eax
    f98a:	48 89 c1             	mov    %rax,%rcx
    f98d:	4c 8d 40 4a          	lea    0x4a(%rax),%r8
    f991:	48 39 94 c3 58 02 00 	cmp    %rdx,0x258(%rbx,%rax,8)
    f998:	00 
    f999:	0f 84 fd 00 00 00    	je     fa9c <dlfree+0xadc>
    f99f:	4d 39 cb             	cmp    %r9,%r11
    f9a2:	0f 82 e0 f8 ff ff    	jb     f288 <dlfree+0x2c8>
    f9a8:	49 3b 53 20          	cmp    0x20(%r11),%rdx
    f9ac:	0f 84 02 01 00 00    	je     fab4 <dlfree+0xaf4>
    f9b2:	45 31 c0             	xor    %r8d,%r8d
    f9b5:	4d 89 43 28          	mov    %r8,0x28(%r11)
    f9b9:	e9 84 f6 ff ff       	jmp    f042 <dlfree+0x82>
    f9be:	48 85 ed             	test   %rbp,%rbp
    f9c1:	0f 84 50 f8 ff ff    	je     f217 <dlfree+0x257>
    f9c7:	8b 47 38             	mov    0x38(%rdi),%eax
    f9ca:	48 89 c1             	mov    %rax,%rcx
    f9cd:	4c 8d 40 4a          	lea    0x4a(%rax),%r8
    f9d1:	48 3b bc c3 58 02 00 	cmp    0x258(%rbx,%rax,8),%rdi
    f9d8:	00 
    f9d9:	0f 84 b1 00 00 00    	je     fa90 <dlfree+0xad0>
    f9df:	4c 39 cd             	cmp    %r9,%rbp
    f9e2:	0f 82 a0 f8 ff ff    	jb     f288 <dlfree+0x2c8>
    f9e8:	48 39 7d 20          	cmp    %rdi,0x20(%rbp)
    f9ec:	0f 84 b7 00 00 00    	je     faa9 <dlfree+0xae9>
    f9f2:	31 c0                	xor    %eax,%eax
    f9f4:	48 89 45 28          	mov    %rax,0x28(%rbp)
    f9f8:	e9 1a f8 ff ff       	jmp    f217 <dlfree+0x257>
    f9fd:	4c 89 e7             	mov    %r12,%rdi
    fa00:	48 f7 df             	neg    %rdi
    fa03:	e8 e8 cc ff ff       	call   c6f0 <sbrk>
    fa08:	31 ff                	xor    %edi,%edi
    fa0a:	49 89 c4             	mov    %rax,%r12
    fa0d:	e8 de cc ff ff       	call   c6f0 <sbrk>
    fa12:	49 83 c4 01          	add    $0x1,%r12
    fa16:	0f 84 fc fd ff ff    	je     f818 <dlfree+0x858>
    fa1c:	4c 39 e8             	cmp    %r13,%rax
    fa1f:	0f 83 f3 fd ff ff    	jae    f818 <dlfree+0x858>
    fa25:	49 29 c5             	sub    %rax,%r13
    fa28:	c7 05 fe b3 01 00 00 	movl   $0x0,0x1b3fe(%rip)        # 2ae30 <malloc_global_mutex>
    fa2f:	00 00 00 
    fa32:	48 8b 43 28          	mov    0x28(%rbx),%rax
    fa36:	48 8b 53 10          	mov    0x10(%rbx),%rdx
    fa3a:	4c 29 6d 08          	sub    %r13,0x8(%rbp)
    fa3e:	48 89 c6             	mov    %rax,%rsi
    fa41:	4c 29 ea             	sub    %r13,%rdx
    fa44:	48 8d 48 10          	lea    0x10(%rax),%rcx
    fa48:	4c 29 ab 58 03 00 00 	sub    %r13,0x358(%rbx)
    fa4f:	83 e6 0f             	and    $0xf,%esi
    fa52:	74 09                	je     fa5d <dlfree+0xa9d>
    fa54:	48 f7 d9             	neg    %rcx
    fa57:	48 89 ce             	mov    %rcx,%rsi
    fa5a:	83 e6 0f             	and    $0xf,%esi
    fa5d:	48 89 d1             	mov    %rdx,%rcx
    fa60:	48 8d 3c 30          	lea    (%rax,%rsi,1),%rdi
    fa64:	48 29 f1             	sub    %rsi,%rcx
    fa67:	48 89 7b 28          	mov    %rdi,0x28(%rbx)
    fa6b:	48 89 4b 10          	mov    %rcx,0x10(%rbx)
    fa6f:	48 83 c9 01          	or     $0x1,%rcx
    fa73:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
    fa77:	48 c7 44 10 08 50 00 	movq   $0x50,0x8(%rax,%rdx,1)
    fa7e:	00 00 
    fa80:	48 8b 05 99 b3 01 00 	mov    0x1b399(%rip),%rax        # 2ae20 <mparams+0x20>
    fa87:	48 89 43 30          	mov    %rax,0x30(%rbx)
    fa8b:	e9 30 f6 ff ff       	jmp    f0c0 <dlfree+0x100>
    fa90:	31 ff                	xor    %edi,%edi
    fa92:	4a 89 7c c3 08       	mov    %rdi,0x8(%rbx,%r8,8)
    fa97:	e9 32 fe ff ff       	jmp    f8ce <dlfree+0x90e>
    fa9c:	45 31 db             	xor    %r11d,%r11d
    fa9f:	4e 89 5c c3 08       	mov    %r11,0x8(%rbx,%r8,8)
    faa4:	e9 08 fe ff ff       	jmp    f8b1 <dlfree+0x8f1>
    faa9:	31 c9                	xor    %ecx,%ecx
    faab:	48 89 4d 20          	mov    %rcx,0x20(%rbp)
    faaf:	e9 63 f7 ff ff       	jmp    f217 <dlfree+0x257>
    fab4:	45 31 d2             	xor    %r10d,%r10d
    fab7:	4d 89 53 20          	mov    %r10,0x20(%r11)
    fabb:	e9 82 f5 ff ff       	jmp    f042 <dlfree+0x82>

000000000000fac0 <calloc>:
    fac0:	f3 0f 1e fa          	endbr64 
    fac4:	55                   	push   %rbp
    fac5:	53                   	push   %rbx
    fac6:	48 89 fb             	mov    %rdi,%rbx
    fac9:	48 83 ec 08          	sub    $0x8,%rsp
    facd:	48 85 ff             	test   %rdi,%rdi
    fad0:	74 1b                	je     faed <calloc+0x2d>
    fad2:	48 89 f8             	mov    %rdi,%rax
    fad5:	48 f7 e6             	mul    %rsi
    fad8:	0f 90 c2             	seto   %dl
    fadb:	48 09 fe             	or     %rdi,%rsi
    fade:	48 89 c3             	mov    %rax,%rbx
    fae1:	0f b6 d2             	movzbl %dl,%edx
    fae4:	48 81 fe ff ff 00 00 	cmp    $0xffff,%rsi
    faeb:	77 2b                	ja     fb18 <calloc+0x58>
    faed:	48 89 df             	mov    %rbx,%rdi
    faf0:	e8 db d6 ff ff       	call   d1d0 <dlmalloc>
    faf5:	48 89 c5             	mov    %rax,%rbp
    faf8:	48 85 c0             	test   %rax,%rax
    fafb:	74 0d                	je     fb0a <calloc+0x4a>
    fafd:	48 89 da             	mov    %rbx,%rdx
    fb00:	31 f6                	xor    %esi,%esi
    fb02:	48 89 c7             	mov    %rax,%rdi
    fb05:	e8 a6 0e 00 00       	call   109b0 <memset>
    fb0a:	48 83 c4 08          	add    $0x8,%rsp
    fb0e:	48 89 e8             	mov    %rbp,%rax
    fb11:	5b                   	pop    %rbx
    fb12:	5d                   	pop    %rbp
    fb13:	c3                   	ret    
    fb14:	0f 1f 40 00          	nopl   0x0(%rax)
    fb18:	48 85 d2             	test   %rdx,%rdx
    fb1b:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    fb22:	48 0f 45 d8          	cmovne %rax,%rbx
    fb26:	eb c5                	jmp    faed <calloc+0x2d>
    fb28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    fb2f:	00 

000000000000fb30 <dlrealloc>:
    fb30:	f3 0f 1e fa          	endbr64 
    fb34:	41 57                	push   %r15
    fb36:	41 56                	push   %r14
    fb38:	41 55                	push   %r13
    fb3a:	41 54                	push   %r12
    fb3c:	55                   	push   %rbp
    fb3d:	53                   	push   %rbx
    fb3e:	48 89 f3             	mov    %rsi,%rbx
    fb41:	48 83 ec 08          	sub    $0x8,%rsp
    fb45:	48 85 ff             	test   %rdi,%rdi
    fb48:	0f 84 f2 01 00 00    	je     fd40 <dlrealloc+0x210>
    fb4e:	48 81 fe 7f ff ff ff 	cmp    $0xffffffffffffff7f,%rsi
    fb55:	0f 87 05 02 00 00    	ja     fd60 <dlrealloc+0x230>
    fb5b:	48 89 fd             	mov    %rdi,%rbp
    fb5e:	48 85 f6             	test   %rsi,%rsi
    fb61:	0f 84 11 02 00 00    	je     fd78 <dlrealloc+0x248>
    fb67:	48 8d 46 1f          	lea    0x1f(%rsi),%rax
    fb6b:	ba 20 00 00 00       	mov    $0x20,%edx
    fb70:	4c 8d 6f f0          	lea    -0x10(%rdi),%r13
    fb74:	48 8b 0d 85 b2 01 00 	mov    0x1b285(%rip),%rcx        # 2ae00 <mparams>
    fb7b:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
    fb7f:	48 83 fe 0e          	cmp    $0xe,%rsi
    fb83:	48 8b 77 f8          	mov    -0x8(%rdi),%rsi
    fb87:	48 0f 46 c2          	cmovbe %rdx,%rax
    fb8b:	48 89 f2             	mov    %rsi,%rdx
    fb8e:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    fb92:	49 8d 7c 15 00       	lea    0x0(%r13,%rdx,1),%rdi
    fb97:	4c 8b 27             	mov    (%rdi),%r12
    fb9a:	49 31 cc             	xor    %rcx,%r12
    fb9d:	49 3b 4c 24 40       	cmp    0x40(%r12),%rcx
    fba2:	0f 85 90 01 00 00    	jne    fd38 <dlrealloc+0x208>
    fba8:	41 f6 84 24 70 03 00 	testb  $0x2,0x370(%r12)
    fbaf:	00 02 
    fbb1:	0f 85 89 00 00 00    	jne    fc40 <dlrealloc+0x110>
    fbb7:	4d 8b 44 24 18       	mov    0x18(%r12),%r8
    fbbc:	4d 39 c5             	cmp    %r8,%r13
    fbbf:	0f 82 73 01 00 00    	jb     fd38 <dlrealloc+0x208>
    fbc5:	48 89 f1             	mov    %rsi,%rcx
    fbc8:	83 e1 03             	and    $0x3,%ecx
    fbcb:	48 83 f9 01          	cmp    $0x1,%rcx
    fbcf:	0f 84 63 01 00 00    	je     fd38 <dlrealloc+0x208>
    fbd5:	49 39 fd             	cmp    %rdi,%r13
    fbd8:	0f 83 5a 01 00 00    	jae    fd38 <dlrealloc+0x208>
    fbde:	4c 8b 4f 08          	mov    0x8(%rdi),%r9
    fbe2:	41 f6 c1 01          	test   $0x1,%r9b
    fbe6:	0f 84 4c 01 00 00    	je     fd38 <dlrealloc+0x208>
    fbec:	48 85 c9             	test   %rcx,%rcx
    fbef:	0f 84 8b 00 00 00    	je     fc80 <dlrealloc+0x150>
    fbf5:	48 39 c2             	cmp    %rax,%rdx
    fbf8:	0f 82 82 01 00 00    	jb     fd80 <dlrealloc+0x250>
    fbfe:	48 29 c2             	sub    %rax,%rdx
    fc01:	49 89 d6             	mov    %rdx,%r14
    fc04:	48 83 fa 1f          	cmp    $0x1f,%rdx
    fc08:	0f 87 fa 02 00 00    	ja     ff08 <dlrealloc+0x3d8>
    fc0e:	41 8b 8c 24 70 03 00 	mov    0x370(%r12),%ecx
    fc15:	00 
    fc16:	83 e1 02             	and    $0x2,%ecx
    fc19:	0f 85 31 02 00 00    	jne    fe50 <dlrealloc+0x320>
    fc1f:	4d 85 ed             	test   %r13,%r13
    fc22:	0f 84 94 00 00 00    	je     fcbc <dlrealloc+0x18c>
    fc28:	49 89 ec             	mov    %rbp,%r12
    fc2b:	48 83 c4 08          	add    $0x8,%rsp
    fc2f:	4c 89 e0             	mov    %r12,%rax
    fc32:	5b                   	pop    %rbx
    fc33:	5d                   	pop    %rbp
    fc34:	41 5c                	pop    %r12
    fc36:	41 5d                	pop    %r13
    fc38:	41 5e                	pop    %r14
    fc3a:	41 5f                	pop    %r15
    fc3c:	c3                   	ret    
    fc3d:	0f 1f 00             	nopl   (%rax)
    fc40:	49 8d 8c 24 74 03 00 	lea    0x374(%r12),%rcx
    fc47:	00 
    fc48:	ba 01 00 00 00       	mov    $0x1,%edx
    fc4d:	87 11                	xchg   %edx,(%rcx)
    fc4f:	85 d2                	test   %edx,%edx
    fc51:	0f 85 b9 00 00 00    	jne    fd10 <dlrealloc+0x1e0>
    fc57:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    fc5b:	4d 8b 44 24 18       	mov    0x18(%r12),%r8
    fc60:	48 89 f2             	mov    %rsi,%rdx
    fc63:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    fc67:	49 8d 7c 15 00       	lea    0x0(%r13,%rdx,1),%rdi
    fc6c:	4d 39 c5             	cmp    %r8,%r13
    fc6f:	0f 83 50 ff ff ff    	jae    fbc5 <dlrealloc+0x95>
    fc75:	e9 be 00 00 00       	jmp    fd38 <dlrealloc+0x208>
    fc7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    fc80:	41 8b 8c 24 70 03 00 	mov    0x370(%r12),%ecx
    fc87:	00 
    fc88:	89 ce                	mov    %ecx,%esi
    fc8a:	83 e6 02             	and    $0x2,%esi
    fc8d:	48 3d f8 00 00 00    	cmp    $0xf8,%rax
    fc93:	76 1f                	jbe    fcb4 <dlrealloc+0x184>
    fc95:	48 8d 78 08          	lea    0x8(%rax),%rdi
    fc99:	48 39 fa             	cmp    %rdi,%rdx
    fc9c:	72 16                	jb     fcb4 <dlrealloc+0x184>
    fc9e:	48 29 c2             	sub    %rax,%rdx
    fca1:	48 8b 05 68 b1 01 00 	mov    0x1b168(%rip),%rax        # 2ae10 <mparams+0x10>
    fca8:	48 01 c0             	add    %rax,%rax
    fcab:	48 39 d0             	cmp    %rdx,%rax
    fcae:	0f 83 62 ff ff ff    	jae    fc16 <dlrealloc+0xe6>
    fcb4:	85 f6                	test   %esi,%esi
    fcb6:	0f 85 c4 01 00 00    	jne    fe80 <dlrealloc+0x350>
    fcbc:	48 89 df             	mov    %rbx,%rdi
    fcbf:	e8 0c d5 ff ff       	call   d1d0 <dlmalloc>
    fcc4:	49 89 c4             	mov    %rax,%r12
    fcc7:	48 85 c0             	test   %rax,%rax
    fcca:	0f 84 5b ff ff ff    	je     fc2b <dlrealloc+0xfb>
    fcd0:	4c 8b 6d f8          	mov    -0x8(%rbp),%r13
    fcd4:	48 89 ee             	mov    %rbp,%rsi
    fcd7:	48 89 c7             	mov    %rax,%rdi
    fcda:	49 83 e5 f8          	and    $0xfffffffffffffff8,%r13
    fcde:	49 83 ed 10          	sub    $0x10,%r13
    fce2:	4c 39 eb             	cmp    %r13,%rbx
    fce5:	49 0f 47 dd          	cmova  %r13,%rbx
    fce9:	48 89 da             	mov    %rbx,%rdx
    fcec:	e8 7f 0a 00 00       	call   10770 <memcpy>
    fcf1:	48 89 ef             	mov    %rbp,%rdi
    fcf4:	4c 89 ea             	mov    %r13,%rdx
    fcf7:	31 f6                	xor    %esi,%esi
    fcf9:	e8 b2 0c 00 00       	call   109b0 <memset>
    fcfe:	48 89 ef             	mov    %rbp,%rdi
    fd01:	e8 ba f2 ff ff       	call   efc0 <dlfree>
    fd06:	e9 20 ff ff ff       	jmp    fc2b <dlrealloc+0xfb>
    fd0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    fd10:	be 01 00 00 00       	mov    $0x1,%esi
    fd15:	0f 1f 00             	nopl   (%rax)
    fd18:	41 8b 94 24 74 03 00 	mov    0x374(%r12),%edx
    fd1f:	00 
    fd20:	85 d2                	test   %edx,%edx
    fd22:	75 f4                	jne    fd18 <dlrealloc+0x1e8>
    fd24:	89 f2                	mov    %esi,%edx
    fd26:	87 11                	xchg   %edx,(%rcx)
    fd28:	85 d2                	test   %edx,%edx
    fd2a:	75 ec                	jne    fd18 <dlrealloc+0x1e8>
    fd2c:	e9 26 ff ff ff       	jmp    fc57 <dlrealloc+0x127>
    fd31:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    fd38:	e8 fa 27 00 00       	call   12537 <abort>
    fd3d:	0f 1f 00             	nopl   (%rax)
    fd40:	48 83 c4 08          	add    $0x8,%rsp
    fd44:	48 89 f7             	mov    %rsi,%rdi
    fd47:	5b                   	pop    %rbx
    fd48:	5d                   	pop    %rbp
    fd49:	41 5c                	pop    %r12
    fd4b:	41 5d                	pop    %r13
    fd4d:	41 5e                	pop    %r14
    fd4f:	41 5f                	pop    %r15
    fd51:	e9 7a d4 ff ff       	jmp    d1d0 <dlmalloc>
    fd56:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    fd5d:	00 00 00 
    fd60:	e8 6b 12 00 00       	call   10fd0 <__errno_location>
    fd65:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
    fd6b:	45 31 e4             	xor    %r12d,%r12d
    fd6e:	e9 b8 fe ff ff       	jmp    fc2b <dlrealloc+0xfb>
    fd73:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    fd78:	e8 43 f2 ff ff       	call   efc0 <dlfree>
    fd7d:	eb ec                	jmp    fd6b <dlrealloc+0x23b>
    fd7f:	90                   	nop
    fd80:	49 39 7c 24 28       	cmp    %rdi,0x28(%r12)
    fd85:	0f 84 d5 01 00 00    	je     ff60 <dlrealloc+0x430>
    fd8b:	49 39 7c 24 20       	cmp    %rdi,0x20(%r12)
    fd90:	0f 84 02 01 00 00    	je     fe98 <dlrealloc+0x368>
    fd96:	41 f6 c1 02          	test   $0x2,%r9b
    fd9a:	0f 85 c8 00 00 00    	jne    fe68 <dlrealloc+0x338>
    fda0:	49 83 e1 f8          	and    $0xfffffffffffffff8,%r9
    fda4:	4e 8d 14 0a          	lea    (%rdx,%r9,1),%r10
    fda8:	49 39 c2             	cmp    %rax,%r10
    fdab:	0f 82 b7 00 00 00    	jb     fe68 <dlrealloc+0x338>
    fdb1:	4c 89 d2             	mov    %r10,%rdx
    fdb4:	4c 89 c9             	mov    %r9,%rcx
    fdb7:	48 29 c2             	sub    %rax,%rdx
    fdba:	48 c1 e9 03          	shr    $0x3,%rcx
    fdbe:	49 81 f9 f8 00 00 00 	cmp    $0xf8,%r9
    fdc5:	0f 87 f2 01 00 00    	ja     ffbd <dlrealloc+0x48d>
    fdcb:	44 8d 74 09 09       	lea    0x9(%rcx,%rcx,1),%r14d
    fdd0:	4c 8b 4f 10          	mov    0x10(%rdi),%r9
    fdd4:	4c 8b 5f 18          	mov    0x18(%rdi),%r11
    fdd8:	4f 8d 34 f4          	lea    (%r12,%r14,8),%r14
    fddc:	4d 39 f1             	cmp    %r14,%r9
    fddf:	0f 85 c6 03 00 00    	jne    101ab <dlrealloc+0x67b>
    fde5:	4d 39 cb             	cmp    %r9,%r11
    fde8:	0f 84 7c 03 00 00    	je     1016a <dlrealloc+0x63a>
    fdee:	4d 39 c3             	cmp    %r8,%r11
    fdf1:	0f 82 41 ff ff ff    	jb     fd38 <dlrealloc+0x208>
    fdf7:	49 39 7b 10          	cmp    %rdi,0x10(%r11)
    fdfb:	0f 85 37 ff ff ff    	jne    fd38 <dlrealloc+0x208>
    fe01:	4d 89 59 18          	mov    %r11,0x18(%r9)
    fe05:	4d 89 4b 10          	mov    %r9,0x10(%r11)
    fe09:	48 8b 3d f0 af 01 00 	mov    0x1aff0(%rip),%rdi        # 2ae00 <mparams>
    fe10:	83 e6 01             	and    $0x1,%esi
    fe13:	4b 8d 4c 15 00       	lea    0x0(%r13,%r10,1),%rcx
    fe18:	4c 31 e7             	xor    %r12,%rdi
    fe1b:	48 83 fa 1f          	cmp    $0x1f,%rdx
    fe1f:	0f 87 88 02 00 00    	ja     100ad <dlrealloc+0x57d>
    fe25:	4c 89 d2             	mov    %r10,%rdx
    fe28:	48 09 f2             	or     %rsi,%rdx
    fe2b:	48 83 ca 02          	or     $0x2,%rdx
    fe2f:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
    fe33:	48 89 39             	mov    %rdi,(%rcx)
    fe36:	48 83 49 08 01       	orq    $0x1,0x8(%rcx)
    fe3b:	41 8b 8c 24 70 03 00 	mov    0x370(%r12),%ecx
    fe42:	00 
    fe43:	e9 ce fd ff ff       	jmp    fc16 <dlrealloc+0xe6>
    fe48:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    fe4f:	00 
    fe50:	41 c7 84 24 74 03 00 	movl   $0x0,0x374(%r12)
    fe57:	00 00 00 00 00 
    fe5c:	e9 be fd ff ff       	jmp    fc1f <dlrealloc+0xef>
    fe61:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    fe68:	41 f6 84 24 70 03 00 	testb  $0x2,0x370(%r12)
    fe6f:	00 02 
    fe71:	0f 84 45 fe ff ff    	je     fcbc <dlrealloc+0x18c>
    fe77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    fe7e:	00 00 
    fe80:	41 c7 84 24 74 03 00 	movl   $0x0,0x374(%r12)
    fe87:	00 00 00 00 00 
    fe8c:	e9 2b fe ff ff       	jmp    fcbc <dlrealloc+0x18c>
    fe91:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    fe98:	49 03 54 24 08       	add    0x8(%r12),%rdx
    fe9d:	41 8b 8c 24 70 03 00 	mov    0x370(%r12),%ecx
    fea4:	00 
    fea5:	48 39 c2             	cmp    %rax,%rdx
    fea8:	0f 82 01 01 00 00    	jb     ffaf <dlrealloc+0x47f>
    feae:	4c 8b 05 4b af 01 00 	mov    0x1af4b(%rip),%r8        # 2ae00 <mparams>
    feb5:	49 89 d1             	mov    %rdx,%r9
    feb8:	49 8d 7c 15 00       	lea    0x0(%r13,%rdx,1),%rdi
    febd:	83 e6 01             	and    $0x1,%esi
    fec0:	49 29 c1             	sub    %rax,%r9
    fec3:	4d 31 e0             	xor    %r12,%r8
    fec6:	49 83 f9 1f          	cmp    $0x1f,%r9
    feca:	0f 86 b3 01 00 00    	jbe    10083 <dlrealloc+0x553>
    fed0:	49 8d 54 05 00       	lea    0x0(%r13,%rax,1),%rdx
    fed5:	48 09 c6             	or     %rax,%rsi
    fed8:	4c 89 c8             	mov    %r9,%rax
    fedb:	48 83 ce 02          	or     $0x2,%rsi
    fedf:	48 83 c8 01          	or     $0x1,%rax
    fee3:	48 89 75 f8          	mov    %rsi,-0x8(%rbp)
    fee7:	4c 89 02             	mov    %r8,(%rdx)
    feea:	48 89 42 08          	mov    %rax,0x8(%rdx)
    feee:	4c 89 0f             	mov    %r9,(%rdi)
    fef1:	48 83 67 08 fe       	andq   $0xfffffffffffffffe,0x8(%rdi)
    fef6:	4d 89 4c 24 08       	mov    %r9,0x8(%r12)
    fefb:	49 89 54 24 20       	mov    %rdx,0x20(%r12)
    ff00:	e9 11 fd ff ff       	jmp    fc16 <dlrealloc+0xe6>
    ff05:	0f 1f 00             	nopl   (%rax)
    ff08:	83 e6 01             	and    $0x1,%esi
    ff0b:	4d 8d 7c 05 00       	lea    0x0(%r13,%rax,1),%r15
    ff10:	48 83 ca 03          	or     $0x3,%rdx
    ff14:	48 09 c6             	or     %rax,%rsi
    ff17:	48 8b 05 e2 ae 01 00 	mov    0x1aee2(%rip),%rax        # 2ae00 <mparams>
    ff1e:	48 83 ce 02          	or     $0x2,%rsi
    ff22:	4c 31 e0             	xor    %r12,%rax
    ff25:	48 89 75 f8          	mov    %rsi,-0x8(%rbp)
    ff29:	31 f6                	xor    %esi,%esi
    ff2b:	49 89 57 08          	mov    %rdx,0x8(%r15)
    ff2f:	49 8d 56 f0          	lea    -0x10(%r14),%rdx
    ff33:	49 89 07             	mov    %rax,(%r15)
    ff36:	48 83 4f 08 01       	orq    $0x1,0x8(%rdi)
    ff3b:	48 89 07             	mov    %rax,(%rdi)
    ff3e:	49 8d 7f 10          	lea    0x10(%r15),%rdi
    ff42:	e8 69 0a 00 00       	call   109b0 <memset>
    ff47:	4c 89 f2             	mov    %r14,%rdx
    ff4a:	4c 89 fe             	mov    %r15,%rsi
    ff4d:	4c 89 e7             	mov    %r12,%rdi
    ff50:	e8 5b c9 ff ff       	call   c8b0 <dispose_chunk>
    ff55:	e9 b4 fc ff ff       	jmp    fc0e <dlrealloc+0xde>
    ff5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    ff60:	49 03 54 24 10       	add    0x10(%r12),%rdx
    ff65:	41 8b 8c 24 70 03 00 	mov    0x370(%r12),%ecx
    ff6c:	00 
    ff6d:	48 39 d0             	cmp    %rdx,%rax
    ff70:	73 3d                	jae    ffaf <dlrealloc+0x47f>
    ff72:	83 e6 01             	and    $0x1,%esi
    ff75:	49 8d 7c 05 00       	lea    0x0(%r13,%rax,1),%rdi
    ff7a:	48 29 c2             	sub    %rax,%rdx
    ff7d:	48 09 c6             	or     %rax,%rsi
    ff80:	48 8b 05 79 ae 01 00 	mov    0x1ae79(%rip),%rax        # 2ae00 <mparams>
    ff87:	48 83 ce 02          	or     $0x2,%rsi
    ff8b:	4c 31 e0             	xor    %r12,%rax
    ff8e:	48 89 75 f8          	mov    %rsi,-0x8(%rbp)
    ff92:	48 89 07             	mov    %rax,(%rdi)
    ff95:	48 89 d0             	mov    %rdx,%rax
    ff98:	48 83 c8 01          	or     $0x1,%rax
    ff9c:	48 89 47 08          	mov    %rax,0x8(%rdi)
    ffa0:	49 89 7c 24 28       	mov    %rdi,0x28(%r12)
    ffa5:	49 89 54 24 10       	mov    %rdx,0x10(%r12)
    ffaa:	e9 67 fc ff ff       	jmp    fc16 <dlrealloc+0xe6>
    ffaf:	83 e1 02             	and    $0x2,%ecx
    ffb2:	0f 84 04 fd ff ff    	je     fcbc <dlrealloc+0x18c>
    ffb8:	e9 c3 fe ff ff       	jmp    fe80 <dlrealloc+0x350>
    ffbd:	4c 8b 5f 18          	mov    0x18(%rdi),%r11
    ffc1:	4c 8b 7f 30          	mov    0x30(%rdi),%r15
    ffc5:	49 39 fb             	cmp    %rdi,%r11
    ffc8:	0f 84 1d 01 00 00    	je     100eb <dlrealloc+0x5bb>
    ffce:	48 8b 4f 10          	mov    0x10(%rdi),%rcx
    ffd2:	4c 39 c1             	cmp    %r8,%rcx
    ffd5:	0f 82 5d fd ff ff    	jb     fd38 <dlrealloc+0x208>
    ffdb:	48 39 79 18          	cmp    %rdi,0x18(%rcx)
    ffdf:	0f 85 53 fd ff ff    	jne    fd38 <dlrealloc+0x208>
    ffe5:	49 39 7b 10          	cmp    %rdi,0x10(%r11)
    ffe9:	0f 85 49 fd ff ff    	jne    fd38 <dlrealloc+0x208>
    ffef:	4c 89 59 18          	mov    %r11,0x18(%rcx)
    fff3:	49 89 4b 10          	mov    %rcx,0x10(%r11)
    fff7:	4d 85 ff             	test   %r15,%r15
    fffa:	0f 84 09 fe ff ff    	je     fe09 <dlrealloc+0x2d9>
   10000:	44 8b 4f 38          	mov    0x38(%rdi),%r9d
   10004:	4c 89 c9             	mov    %r9,%rcx
   10007:	4d 8d 71 4a          	lea    0x4a(%r9),%r14
   1000b:	4b 3b bc cc 58 02 00 	cmp    0x258(%r12,%r9,8),%rdi
   10012:	00 
   10013:	0f 84 61 01 00 00    	je     1017a <dlrealloc+0x64a>
   10019:	4d 39 c7             	cmp    %r8,%r15
   1001c:	0f 82 16 fd ff ff    	jb     fd38 <dlrealloc+0x208>
   10022:	49 3b 7f 20          	cmp    0x20(%r15),%rdi
   10026:	0f 84 a5 01 00 00    	je     101d1 <dlrealloc+0x6a1>
   1002c:	4d 89 5f 28          	mov    %r11,0x28(%r15)
   10030:	4d 85 db             	test   %r11,%r11
   10033:	0f 84 d0 fd ff ff    	je     fe09 <dlrealloc+0x2d9>
   10039:	4d 39 c3             	cmp    %r8,%r11
   1003c:	0f 82 f6 fc ff ff    	jb     fd38 <dlrealloc+0x208>
   10042:	48 8b 4f 20          	mov    0x20(%rdi),%rcx
   10046:	4d 89 7b 30          	mov    %r15,0x30(%r11)
   1004a:	48 85 c9             	test   %rcx,%rcx
   1004d:	74 11                	je     10060 <dlrealloc+0x530>
   1004f:	4c 39 c1             	cmp    %r8,%rcx
   10052:	0f 82 e0 fc ff ff    	jb     fd38 <dlrealloc+0x208>
   10058:	49 89 4b 20          	mov    %rcx,0x20(%r11)
   1005c:	4c 89 59 30          	mov    %r11,0x30(%rcx)
   10060:	48 8b 4f 28          	mov    0x28(%rdi),%rcx
   10064:	48 85 c9             	test   %rcx,%rcx
   10067:	0f 84 9c fd ff ff    	je     fe09 <dlrealloc+0x2d9>
   1006d:	4c 39 c1             	cmp    %r8,%rcx
   10070:	0f 82 c2 fc ff ff    	jb     fd38 <dlrealloc+0x208>
   10076:	49 89 4b 28          	mov    %rcx,0x28(%r11)
   1007a:	4c 89 59 30          	mov    %r11,0x30(%rcx)
   1007e:	e9 86 fd ff ff       	jmp    fe09 <dlrealloc+0x2d9>
   10083:	48 09 f2             	or     %rsi,%rdx
   10086:	48 83 ca 02          	or     $0x2,%rdx
   1008a:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
   1008e:	4c 89 07             	mov    %r8,(%rdi)
   10091:	48 83 4f 08 01       	orq    $0x1,0x8(%rdi)
   10096:	49 c7 44 24 08 00 00 	movq   $0x0,0x8(%r12)
   1009d:	00 00 
   1009f:	49 c7 44 24 20 00 00 	movq   $0x0,0x20(%r12)
   100a6:	00 00 
   100a8:	e9 69 fb ff ff       	jmp    fc16 <dlrealloc+0xe6>
   100ad:	4d 8d 44 05 00       	lea    0x0(%r13,%rax,1),%r8
   100b2:	48 09 f0             	or     %rsi,%rax
   100b5:	48 83 c8 02          	or     $0x2,%rax
   100b9:	4c 89 c6             	mov    %r8,%rsi
   100bc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   100c0:	48 89 d0             	mov    %rdx,%rax
   100c3:	48 83 c8 03          	or     $0x3,%rax
   100c7:	49 89 38             	mov    %rdi,(%r8)
   100ca:	49 89 40 08          	mov    %rax,0x8(%r8)
   100ce:	48 83 49 08 01       	orq    $0x1,0x8(%rcx)
   100d3:	48 89 39             	mov    %rdi,(%rcx)
   100d6:	4c 89 e7             	mov    %r12,%rdi
   100d9:	e8 d2 c7 ff ff       	call   c8b0 <dispose_chunk>
   100de:	41 8b 8c 24 70 03 00 	mov    0x370(%r12),%ecx
   100e5:	00 
   100e6:	e9 2b fb ff ff       	jmp    fc16 <dlrealloc+0xe6>
   100eb:	48 8b 4f 28          	mov    0x28(%rdi),%rcx
   100ef:	4c 8d 4f 28          	lea    0x28(%rdi),%r9
   100f3:	48 85 c9             	test   %rcx,%rcx
   100f6:	0f 84 9d 00 00 00    	je     10199 <dlrealloc+0x669>
   100fc:	0f 1f 40 00          	nopl   0x0(%rax)
   10100:	4d 89 ce             	mov    %r9,%r14
   10103:	49 89 cb             	mov    %rcx,%r11
   10106:	4c 8d 49 28          	lea    0x28(%rcx),%r9
   1010a:	48 8b 49 28          	mov    0x28(%rcx),%rcx
   1010e:	48 85 c9             	test   %rcx,%rcx
   10111:	75 ed                	jne    10100 <dlrealloc+0x5d0>
   10113:	49 8b 4b 20          	mov    0x20(%r11),%rcx
   10117:	4d 8d 4b 20          	lea    0x20(%r11),%r9
   1011b:	48 85 c9             	test   %rcx,%rcx
   1011e:	75 e0                	jne    10100 <dlrealloc+0x5d0>
   10120:	4d 39 c6             	cmp    %r8,%r14
   10123:	0f 82 0f fc ff ff    	jb     fd38 <dlrealloc+0x208>
   10129:	49 c7 06 00 00 00 00 	movq   $0x0,(%r14)
   10130:	4d 85 ff             	test   %r15,%r15
   10133:	0f 84 d0 fc ff ff    	je     fe09 <dlrealloc+0x2d9>
   10139:	8b 4f 38             	mov    0x38(%rdi),%ecx
   1013c:	4c 8d 49 4a          	lea    0x4a(%rcx),%r9
   10140:	49 3b bc cc 58 02 00 	cmp    0x258(%r12,%rcx,8),%rdi
   10147:	00 
   10148:	0f 84 8c 00 00 00    	je     101da <dlrealloc+0x6aa>
   1014e:	4d 39 c7             	cmp    %r8,%r15
   10151:	0f 82 e1 fb ff ff    	jb     fd38 <dlrealloc+0x208>
   10157:	49 3b 7f 20          	cmp    0x20(%r15),%rdi
   1015b:	0f 84 bb 00 00 00    	je     1021c <dlrealloc+0x6ec>
   10161:	4d 89 5f 28          	mov    %r11,0x28(%r15)
   10165:	e9 cf fe ff ff       	jmp    10039 <dlrealloc+0x509>
   1016a:	bf fe ff ff ff       	mov    $0xfffffffe,%edi
   1016f:	d3 c7                	rol    %cl,%edi
   10171:	41 21 3c 24          	and    %edi,(%r12)
   10175:	e9 8f fc ff ff       	jmp    fe09 <dlrealloc+0x2d9>
   1017a:	4f 89 5c f4 08       	mov    %r11,0x8(%r12,%r14,8)
   1017f:	4d 85 db             	test   %r11,%r11
   10182:	0f 85 b1 fe ff ff    	jne    10039 <dlrealloc+0x509>
   10188:	bf fe ff ff ff       	mov    $0xfffffffe,%edi
   1018d:	d3 c7                	rol    %cl,%edi
   1018f:	41 21 7c 24 04       	and    %edi,0x4(%r12)
   10194:	e9 70 fc ff ff       	jmp    fe09 <dlrealloc+0x2d9>
   10199:	48 8b 4f 20          	mov    0x20(%rdi),%rcx
   1019d:	48 85 c9             	test   %rcx,%rcx
   101a0:	74 42                	je     101e4 <dlrealloc+0x6b4>
   101a2:	4c 8d 4f 20          	lea    0x20(%rdi),%r9
   101a6:	e9 55 ff ff ff       	jmp    10100 <dlrealloc+0x5d0>
   101ab:	4d 39 c1             	cmp    %r8,%r9
   101ae:	0f 82 84 fb ff ff    	jb     fd38 <dlrealloc+0x208>
   101b4:	49 39 79 18          	cmp    %rdi,0x18(%r9)
   101b8:	0f 85 7a fb ff ff    	jne    fd38 <dlrealloc+0x208>
   101be:	4d 39 d9             	cmp    %r11,%r9
   101c1:	74 a7                	je     1016a <dlrealloc+0x63a>
   101c3:	4d 39 f3             	cmp    %r14,%r11
   101c6:	0f 84 35 fc ff ff    	je     fe01 <dlrealloc+0x2d1>
   101cc:	e9 1d fc ff ff       	jmp    fdee <dlrealloc+0x2be>
   101d1:	4d 89 5f 20          	mov    %r11,0x20(%r15)
   101d5:	e9 56 fe ff ff       	jmp    10030 <dlrealloc+0x500>
   101da:	4f 89 5c cc 08       	mov    %r11,0x8(%r12,%r9,8)
   101df:	e9 55 fe ff ff       	jmp    10039 <dlrealloc+0x509>
   101e4:	4d 85 ff             	test   %r15,%r15
   101e7:	0f 84 1c fc ff ff    	je     fe09 <dlrealloc+0x2d9>
   101ed:	44 8b 4f 38          	mov    0x38(%rdi),%r9d
   101f1:	4c 89 c9             	mov    %r9,%rcx
   101f4:	4d 8d 59 4a          	lea    0x4a(%r9),%r11
   101f8:	4b 3b bc cc 58 02 00 	cmp    0x258(%r12,%r9,8),%rdi
   101ff:	00 
   10200:	74 2e                	je     10230 <dlrealloc+0x700>
   10202:	4d 39 c7             	cmp    %r8,%r15
   10205:	0f 82 2d fb ff ff    	jb     fd38 <dlrealloc+0x208>
   1020b:	49 39 7f 20          	cmp    %rdi,0x20(%r15)
   1020f:	74 14                	je     10225 <dlrealloc+0x6f5>
   10211:	31 c9                	xor    %ecx,%ecx
   10213:	49 89 4f 28          	mov    %rcx,0x28(%r15)
   10217:	e9 ed fb ff ff       	jmp    fe09 <dlrealloc+0x2d9>
   1021c:	4d 89 5f 20          	mov    %r11,0x20(%r15)
   10220:	e9 14 fe ff ff       	jmp    10039 <dlrealloc+0x509>
   10225:	31 ff                	xor    %edi,%edi
   10227:	49 89 7f 20          	mov    %rdi,0x20(%r15)
   1022b:	e9 d9 fb ff ff       	jmp    fe09 <dlrealloc+0x2d9>
   10230:	45 31 c0             	xor    %r8d,%r8d
   10233:	4f 89 44 dc 08       	mov    %r8,0x8(%r12,%r11,8)
   10238:	e9 4b ff ff ff       	jmp    10188 <dlrealloc+0x658>
   1023d:	0f 1f 00             	nopl   (%rax)

0000000000010240 <dlmemalign>:
   10240:	f3 0f 1e fa          	endbr64 
   10244:	48 83 ff 10          	cmp    $0x10,%rdi
   10248:	76 06                	jbe    10250 <dlmemalign+0x10>
   1024a:	e9 d1 ea ff ff       	jmp    ed20 <internal_memalign.constprop.0>
   1024f:	90                   	nop
   10250:	48 89 f7             	mov    %rsi,%rdi
   10253:	e9 78 cf ff ff       	jmp    d1d0 <dlmalloc>
   10258:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1025f:	00 

0000000000010260 <dlposix_memalign>:
   10260:	f3 0f 1e fa          	endbr64 
   10264:	53                   	push   %rbx
   10265:	48 89 fb             	mov    %rdi,%rbx
   10268:	48 89 f7             	mov    %rsi,%rdi
   1026b:	48 89 d6             	mov    %rdx,%rsi
   1026e:	48 83 ff 10          	cmp    $0x10,%rdi
   10272:	74 6c                	je     102e0 <dlposix_memalign+0x80>
   10274:	48 89 f9             	mov    %rdi,%rcx
   10277:	49 89 f8             	mov    %rdi,%r8
   1027a:	ba 16 00 00 00       	mov    $0x16,%edx
   1027f:	48 c1 e9 03          	shr    $0x3,%rcx
   10283:	41 83 e0 07          	and    $0x7,%r8d
   10287:	48 83 ff 07          	cmp    $0x7,%rdi
   1028b:	76 36                	jbe    102c3 <dlposix_memalign+0x63>
   1028d:	48 8d 41 ff          	lea    -0x1(%rcx),%rax
   10291:	48 21 c8             	and    %rcx,%rax
   10294:	4c 09 c0             	or     %r8,%rax
   10297:	75 2a                	jne    102c3 <dlposix_memalign+0x63>
   10299:	48 c7 c0 80 ff ff ff 	mov    $0xffffffffffffff80,%rax
   102a0:	48 29 f8             	sub    %rdi,%rax
   102a3:	48 39 f0             	cmp    %rsi,%rax
   102a6:	72 28                	jb     102d0 <dlposix_memalign+0x70>
   102a8:	b8 20 00 00 00       	mov    $0x20,%eax
   102ad:	48 39 c7             	cmp    %rax,%rdi
   102b0:	48 0f 42 f8          	cmovb  %rax,%rdi
   102b4:	e8 67 ea ff ff       	call   ed20 <internal_memalign.constprop.0>
   102b9:	48 85 c0             	test   %rax,%rax
   102bc:	74 12                	je     102d0 <dlposix_memalign+0x70>
   102be:	48 89 03             	mov    %rax,(%rbx)
   102c1:	31 d2                	xor    %edx,%edx
   102c3:	89 d0                	mov    %edx,%eax
   102c5:	5b                   	pop    %rbx
   102c6:	c3                   	ret    
   102c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   102ce:	00 00 
   102d0:	ba 0c 00 00 00       	mov    $0xc,%edx
   102d5:	5b                   	pop    %rbx
   102d6:	89 d0                	mov    %edx,%eax
   102d8:	c3                   	ret    
   102d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   102e0:	48 89 d7             	mov    %rdx,%rdi
   102e3:	e8 e8 ce ff ff       	call   d1d0 <dlmalloc>
   102e8:	eb cf                	jmp    102b9 <dlposix_memalign+0x59>
   102ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000102f0 <dlmallinfo>:
   102f0:	f3 0f 1e fa          	endbr64 
   102f4:	41 55                	push   %r13
   102f6:	41 54                	push   %r12
   102f8:	55                   	push   %rbp
   102f9:	53                   	push   %rbx
   102fa:	48 89 fb             	mov    %rdi,%rbx
   102fd:	48 83 ec 08          	sub    $0x8,%rsp
   10301:	48 83 3d f7 aa 01 00 	cmpq   $0x0,0x1aaf7(%rip)        # 2ae00 <mparams>
   10308:	00 
   10309:	0f 84 89 01 00 00    	je     10498 <dlmallinfo+0x1a8>
   1030f:	44 8b 1d 9a aa 01 00 	mov    0x1aa9a(%rip),%r11d        # 2adb0 <_gm_+0x370>
   10316:	41 83 e3 02          	and    $0x2,%r11d
   1031a:	0f 85 16 01 00 00    	jne    10436 <dlmallinfo+0x146>
   10320:	48 8b 3d 41 a7 01 00 	mov    0x1a741(%rip),%rdi        # 2aa68 <_gm_+0x28>
   10327:	48 85 ff             	test   %rdi,%rdi
   1032a:	0f 84 f4 00 00 00    	je     10424 <dlmallinfo+0x134>
   10330:	48 8b 2d 19 a7 01 00 	mov    0x1a719(%rip),%rbp        # 2aa50 <_gm_+0x10>
   10337:	41 b9 01 00 00 00    	mov    $0x1,%r9d
   1033d:	4c 8d 15 74 aa 01 00 	lea    0x1aa74(%rip),%r10        # 2adb8 <_gm_+0x378>
   10344:	4c 8d 45 50          	lea    0x50(%rbp),%r8
   10348:	4c 89 c1             	mov    %r8,%rcx
   1034b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10350:	49 8b 32             	mov    (%r10),%rsi
   10353:	48 8d 46 10          	lea    0x10(%rsi),%rax
   10357:	40 f6 c6 0f          	test   $0xf,%sil
   1035b:	0f 84 af 00 00 00    	je     10410 <dlmallinfo+0x120>
   10361:	48 f7 d8             	neg    %rax
   10364:	83 e0 0f             	and    $0xf,%eax
   10367:	48 01 f0             	add    %rsi,%rax
   1036a:	72 4a                	jb     103b6 <dlmallinfo+0xc6>
   1036c:	4d 8b 6a 08          	mov    0x8(%r10),%r13
   10370:	49 01 f5             	add    %rsi,%r13
   10373:	4c 39 e8             	cmp    %r13,%rax
   10376:	72 39                	jb     103b1 <dlmallinfo+0xc1>
   10378:	eb 3c                	jmp    103b6 <dlmallinfo+0xc6>
   1037a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10380:	48 8b 50 08          	mov    0x8(%rax),%rdx
   10384:	48 83 fa 0b          	cmp    $0xb,%rdx
   10388:	74 2c                	je     103b6 <dlmallinfo+0xc6>
   1038a:	49 89 d4             	mov    %rdx,%r12
   1038d:	83 e2 03             	and    $0x3,%edx
   10390:	49 83 e4 f8          	and    $0xfffffffffffffff8,%r12
   10394:	4c 01 e1             	add    %r12,%rcx
   10397:	48 83 fa 01          	cmp    $0x1,%rdx
   1039b:	75 07                	jne    103a4 <dlmallinfo+0xb4>
   1039d:	4d 01 e0             	add    %r12,%r8
   103a0:	49 83 c1 01          	add    $0x1,%r9
   103a4:	4c 01 e0             	add    %r12,%rax
   103a7:	48 39 f0             	cmp    %rsi,%rax
   103aa:	72 0a                	jb     103b6 <dlmallinfo+0xc6>
   103ac:	4c 39 e8             	cmp    %r13,%rax
   103af:	73 05                	jae    103b6 <dlmallinfo+0xc6>
   103b1:	48 39 f8             	cmp    %rdi,%rax
   103b4:	75 ca                	jne    10380 <dlmallinfo+0x90>
   103b6:	4d 8b 52 10          	mov    0x10(%r10),%r10
   103ba:	4d 85 d2             	test   %r10,%r10
   103bd:	75 91                	jne    10350 <dlmallinfo+0x60>
   103bf:	48 8b 05 d2 a9 01 00 	mov    0x1a9d2(%rip),%rax        # 2ad98 <_gm_+0x358>
   103c6:	89 ca                	mov    %ecx,%edx
   103c8:	89 c6                	mov    %eax,%esi
   103ca:	44 29 c0             	sub    %r8d,%eax
   103cd:	29 ce                	sub    %ecx,%esi
   103cf:	8b 0d cb a9 01 00    	mov    0x1a9cb(%rip),%ecx        # 2ada0 <_gm_+0x360>
   103d5:	45 85 db             	test   %r11d,%r11d
   103d8:	75 3e                	jne    10418 <dlmallinfo+0x128>
   103da:	89 43 1c             	mov    %eax,0x1c(%rbx)
   103dd:	48 89 d8             	mov    %rbx,%rax
   103e0:	89 13                	mov    %edx,(%rbx)
   103e2:	44 89 4b 04          	mov    %r9d,0x4(%rbx)
   103e6:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
   103ed:	00 
   103ee:	89 73 10             	mov    %esi,0x10(%rbx)
   103f1:	89 4b 14             	mov    %ecx,0x14(%rbx)
   103f4:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%rbx)
   103fb:	44 89 43 20          	mov    %r8d,0x20(%rbx)
   103ff:	89 6b 24             	mov    %ebp,0x24(%rbx)
   10402:	48 83 c4 08          	add    $0x8,%rsp
   10406:	5b                   	pop    %rbx
   10407:	5d                   	pop    %rbp
   10408:	41 5c                	pop    %r12
   1040a:	41 5d                	pop    %r13
   1040c:	c3                   	ret    
   1040d:	0f 1f 00             	nopl   (%rax)
   10410:	48 89 f0             	mov    %rsi,%rax
   10413:	e9 54 ff ff ff       	jmp    1036c <dlmallinfo+0x7c>
   10418:	c7 05 92 a9 01 00 00 	movl   $0x0,0x1a992(%rip)        # 2adb4 <_gm_+0x374>
   1041f:	00 00 00 
   10422:	eb b6                	jmp    103da <dlmallinfo+0xea>
   10424:	31 ed                	xor    %ebp,%ebp
   10426:	45 31 c0             	xor    %r8d,%r8d
   10429:	31 c0                	xor    %eax,%eax
   1042b:	31 c9                	xor    %ecx,%ecx
   1042d:	31 f6                	xor    %esi,%esi
   1042f:	45 31 c9             	xor    %r9d,%r9d
   10432:	31 d2                	xor    %edx,%edx
   10434:	eb a4                	jmp    103da <dlmallinfo+0xea>
   10436:	b8 01 00 00 00       	mov    $0x1,%eax
   1043b:	87 05 73 a9 01 00    	xchg   %eax,0x1a973(%rip)        # 2adb4 <_gm_+0x374>
   10441:	ba 01 00 00 00       	mov    $0x1,%edx
   10446:	85 c0                	test   %eax,%eax
   10448:	75 36                	jne    10480 <dlmallinfo+0x190>
   1044a:	44 8b 1d 5f a9 01 00 	mov    0x1a95f(%rip),%r11d        # 2adb0 <_gm_+0x370>
   10451:	48 8b 3d 10 a6 01 00 	mov    0x1a610(%rip),%rdi        # 2aa68 <_gm_+0x28>
   10458:	41 83 e3 02          	and    $0x2,%r11d
   1045c:	48 85 ff             	test   %rdi,%rdi
   1045f:	0f 85 cb fe ff ff    	jne    10330 <dlmallinfo+0x40>
   10465:	31 ed                	xor    %ebp,%ebp
   10467:	45 31 c0             	xor    %r8d,%r8d
   1046a:	31 c0                	xor    %eax,%eax
   1046c:	31 c9                	xor    %ecx,%ecx
   1046e:	31 f6                	xor    %esi,%esi
   10470:	45 31 c9             	xor    %r9d,%r9d
   10473:	31 d2                	xor    %edx,%edx
   10475:	e9 5b ff ff ff       	jmp    103d5 <dlmallinfo+0xe5>
   1047a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10480:	8b 05 2e a9 01 00    	mov    0x1a92e(%rip),%eax        # 2adb4 <_gm_+0x374>
   10486:	85 c0                	test   %eax,%eax
   10488:	75 f6                	jne    10480 <dlmallinfo+0x190>
   1048a:	89 d0                	mov    %edx,%eax
   1048c:	87 05 22 a9 01 00    	xchg   %eax,0x1a922(%rip)        # 2adb4 <_gm_+0x374>
   10492:	85 c0                	test   %eax,%eax
   10494:	75 ea                	jne    10480 <dlmallinfo+0x190>
   10496:	eb b2                	jmp    1044a <dlmallinfo+0x15a>
   10498:	e8 43 cc ff ff       	call   d0e0 <init_mparams.isra.0>
   1049d:	e9 6d fe ff ff       	jmp    1030f <dlmallinfo+0x1f>
   104a2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   104a9:	00 00 00 
   104ac:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000104b0 <__memcpy.part.0>:
   104b0:	48 89 f0             	mov    %rsi,%rax
   104b3:	48 89 f1             	mov    %rsi,%rcx
   104b6:	48 09 f8             	or     %rdi,%rax
   104b9:	a8 07                	test   $0x7,%al
   104bb:	74 43                	je     10500 <__memcpy.part.0+0x50>
   104bd:	48 89 f0             	mov    %rsi,%rax
   104c0:	48 31 f8             	xor    %rdi,%rax
   104c3:	a8 07                	test   $0x7,%al
   104c5:	75 0a                	jne    104d1 <__memcpy.part.0+0x21>
   104c7:	48 83 fa 07          	cmp    $0x7,%rdx
   104cb:	0f 87 87 00 00 00    	ja     10558 <__memcpy.part.0+0xa8>
   104d1:	45 31 c9             	xor    %r9d,%r9d
   104d4:	45 31 c0             	xor    %r8d,%r8d
   104d7:	45 31 d2             	xor    %r10d,%r10d
   104da:	31 c0                	xor    %eax,%eax
   104dc:	0f 1f 40 00          	nopl   0x0(%rax)
   104e0:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
   104e4:	40 88 34 07          	mov    %sil,(%rdi,%rax,1)
   104e8:	48 83 c0 01          	add    $0x1,%rax
   104ec:	48 39 c2             	cmp    %rax,%rdx
   104ef:	75 ef                	jne    104e0 <__memcpy.part.0+0x30>
   104f1:	48 01 d1             	add    %rdx,%rcx
   104f4:	48 01 d7             	add    %rdx,%rdi
   104f7:	4c 89 d2             	mov    %r10,%rdx
   104fa:	eb 12                	jmp    1050e <__memcpy.part.0+0x5e>
   104fc:	0f 1f 40 00          	nopl   0x0(%rax)
   10500:	49 89 d0             	mov    %rdx,%r8
   10503:	49 89 d1             	mov    %rdx,%r9
   10506:	49 c1 e8 03          	shr    $0x3,%r8
   1050a:	41 83 e1 07          	and    $0x7,%r9d
   1050e:	48 83 fa 07          	cmp    $0x7,%rdx
   10512:	76 23                	jbe    10537 <__memcpy.part.0+0x87>
   10514:	4a 8d 34 c5 00 00 00 	lea    0x0(,%r8,8),%rsi
   1051b:	00 
   1051c:	31 c0                	xor    %eax,%eax
   1051e:	66 90                	xchg   %ax,%ax
   10520:	48 8b 14 01          	mov    (%rcx,%rax,1),%rdx
   10524:	48 89 14 07          	mov    %rdx,(%rdi,%rax,1)
   10528:	48 83 c0 08          	add    $0x8,%rax
   1052c:	48 39 f0             	cmp    %rsi,%rax
   1052f:	75 ef                	jne    10520 <__memcpy.part.0+0x70>
   10531:	48 01 c1             	add    %rax,%rcx
   10534:	48 01 c7             	add    %rax,%rdi
   10537:	4d 85 c9             	test   %r9,%r9
   1053a:	74 14                	je     10550 <__memcpy.part.0+0xa0>
   1053c:	31 c0                	xor    %eax,%eax
   1053e:	66 90                	xchg   %ax,%ax
   10540:	0f b6 14 01          	movzbl (%rcx,%rax,1),%edx
   10544:	88 14 07             	mov    %dl,(%rdi,%rax,1)
   10547:	48 83 c0 01          	add    $0x1,%rax
   1054b:	49 39 c1             	cmp    %rax,%r9
   1054e:	75 f0                	jne    10540 <__memcpy.part.0+0x90>
   10550:	c3                   	ret    
   10551:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10558:	48 89 f0             	mov    %rsi,%rax
   1055b:	83 e0 07             	and    $0x7,%eax
   1055e:	4c 8d 54 10 f8       	lea    -0x8(%rax,%rdx,1),%r10
   10563:	ba 08 00 00 00       	mov    $0x8,%edx
   10568:	4d 89 d0             	mov    %r10,%r8
   1056b:	4d 89 d1             	mov    %r10,%r9
   1056e:	48 29 c2             	sub    %rax,%rdx
   10571:	49 c1 e8 03          	shr    $0x3,%r8
   10575:	41 83 e1 07          	and    $0x7,%r9d
   10579:	e9 5c ff ff ff       	jmp    104da <__memcpy.part.0+0x2a>
   1057e:	66 90                	xchg   %ax,%ax

0000000000010580 <__memcpy>:
   10580:	f3 0f 1e fa          	endbr64 
   10584:	49 89 fb             	mov    %rdi,%r11
   10587:	48 85 d2             	test   %rdx,%rdx
   1058a:	74 0a                	je     10596 <__memcpy+0x16>
   1058c:	48 39 f7             	cmp    %rsi,%rdi
   1058f:	74 05                	je     10596 <__memcpy+0x16>
   10591:	e8 1a ff ff ff       	call   104b0 <__memcpy.part.0>
   10596:	4c 89 d8             	mov    %r11,%rax
   10599:	c3                   	ret    
   1059a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000105a0 <memcpy_verw>:
   105a0:	f3 0f 1e fa          	endbr64 
   105a4:	41 56                	push   %r14
   105a6:	41 55                	push   %r13
   105a8:	49 89 fd             	mov    %rdi,%r13
   105ab:	41 54                	push   %r12
   105ad:	55                   	push   %rbp
   105ae:	53                   	push   %rbx
   105af:	48 85 d2             	test   %rdx,%rdx
   105b2:	0f 84 8f 00 00 00    	je     10647 <memcpy_verw+0xa7>
   105b8:	48 89 f3             	mov    %rsi,%rbx
   105bb:	48 39 f7             	cmp    %rsi,%rdi
   105be:	0f 84 83 00 00 00    	je     10647 <memcpy_verw+0xa7>
   105c4:	49 89 d4             	mov    %rdx,%r12
   105c7:	48 89 fd             	mov    %rdi,%rbp
   105ca:	48 83 fa 07          	cmp    $0x7,%rdx
   105ce:	77 25                	ja     105f5 <memcpy_verw+0x55>
   105d0:	eb 5b                	jmp    1062d <memcpy_verw+0x8d>
   105d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   105d8:	48 89 de             	mov    %rbx,%rsi
   105db:	48 89 ef             	mov    %rbp,%rdi
   105de:	49 83 ec 01          	sub    $0x1,%r12
   105e2:	48 83 c3 01          	add    $0x1,%rbx
   105e6:	e8 f5 09 00 00       	call   10fe0 <__memcpy_verw>
   105eb:	48 83 c5 01          	add    $0x1,%rbp
   105ef:	49 83 fc 07          	cmp    $0x7,%r12
   105f3:	76 33                	jbe    10628 <memcpy_verw+0x88>
   105f5:	48 89 e8             	mov    %rbp,%rax
   105f8:	48 09 d8             	or     %rbx,%rax
   105fb:	a8 07                	test   $0x7,%al
   105fd:	75 d9                	jne    105d8 <memcpy_verw+0x38>
   105ff:	4d 89 e3             	mov    %r12,%r11
   10602:	49 83 e3 f8          	and    $0xfffffffffffffff8,%r11
   10606:	48 39 dd             	cmp    %rbx,%rbp
   10609:	74 0e                	je     10619 <memcpy_verw+0x79>
   1060b:	4c 89 da             	mov    %r11,%rdx
   1060e:	48 89 de             	mov    %rbx,%rsi
   10611:	48 89 ef             	mov    %rbp,%rdi
   10614:	e8 97 fe ff ff       	call   104b0 <__memcpy.part.0>
   10619:	4d 29 dc             	sub    %r11,%r12
   1061c:	4c 01 db             	add    %r11,%rbx
   1061f:	4c 01 dd             	add    %r11,%rbp
   10622:	49 83 fc 07          	cmp    $0x7,%r12
   10626:	77 cd                	ja     105f5 <memcpy_verw+0x55>
   10628:	4d 85 e4             	test   %r12,%r12
   1062b:	74 1a                	je     10647 <memcpy_verw+0xa7>
   1062d:	45 31 f6             	xor    %r14d,%r14d
   10630:	4a 8d 34 33          	lea    (%rbx,%r14,1),%rsi
   10634:	4a 8d 7c 35 00       	lea    0x0(%rbp,%r14,1),%rdi
   10639:	49 83 c6 01          	add    $0x1,%r14
   1063d:	e8 9e 09 00 00       	call   10fe0 <__memcpy_verw>
   10642:	4d 39 e6             	cmp    %r12,%r14
   10645:	72 e9                	jb     10630 <memcpy_verw+0x90>
   10647:	5b                   	pop    %rbx
   10648:	4c 89 e8             	mov    %r13,%rax
   1064b:	5d                   	pop    %rbp
   1064c:	41 5c                	pop    %r12
   1064e:	41 5d                	pop    %r13
   10650:	41 5e                	pop    %r14
   10652:	c3                   	ret    
   10653:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1065a:	00 00 00 
   1065d:	0f 1f 00             	nopl   (%rax)

0000000000010660 <copy_external_memory>:
   10660:	41 57                	push   %r15
   10662:	66 0f ef c0          	pxor   %xmm0,%xmm0
   10666:	41 56                	push   %r14
   10668:	41 55                	push   %r13
   1066a:	41 54                	push   %r12
   1066c:	55                   	push   %rbp
   1066d:	53                   	push   %rbx
   1066e:	48 83 ec 38          	sub    $0x38,%rsp
   10672:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   10679:	00 00 
   1067b:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   10680:	31 c0                	xor    %eax,%eax
   10682:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   10687:	48 85 d2             	test   %rdx,%rdx
   1068a:	74 2d                	je     106b9 <copy_external_memory+0x59>
   1068c:	41 89 f6             	mov    %esi,%r14d
   1068f:	49 89 fd             	mov    %rdi,%r13
   10692:	48 89 f3             	mov    %rsi,%rbx
   10695:	41 89 cc             	mov    %ecx,%r12d
   10698:	41 83 e6 07          	and    $0x7,%r14d
   1069c:	75 52                	jne    106f0 <copy_external_memory+0x90>
   1069e:	48 83 fa 08          	cmp    $0x8,%rdx
   106a2:	75 4c                	jne    106f0 <copy_external_memory+0x90>
   106a4:	45 84 e4             	test   %r12b,%r12b
   106a7:	75 37                	jne    106e0 <copy_external_memory+0x80>
   106a9:	4c 39 eb             	cmp    %r13,%rbx
   106ac:	74 0b                	je     106b9 <copy_external_memory+0x59>
   106ae:	48 89 de             	mov    %rbx,%rsi
   106b1:	4c 89 ef             	mov    %r13,%rdi
   106b4:	e8 f7 fd ff ff       	call   104b0 <__memcpy.part.0>
   106b9:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   106be:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
   106c5:	00 00 
   106c7:	75 7f                	jne    10748 <copy_external_memory+0xe8>
   106c9:	48 83 c4 38          	add    $0x38,%rsp
   106cd:	5b                   	pop    %rbx
   106ce:	5d                   	pop    %rbp
   106cf:	41 5c                	pop    %r12
   106d1:	41 5d                	pop    %r13
   106d3:	41 5e                	pop    %r14
   106d5:	41 5f                	pop    %r15
   106d7:	c3                   	ret    
   106d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   106df:	00 
   106e0:	48 89 de             	mov    %rbx,%rsi
   106e3:	4c 89 ef             	mov    %r13,%rdi
   106e6:	e8 b5 fe ff ff       	call   105a0 <memcpy_verw>
   106eb:	eb cc                	jmp    106b9 <copy_external_memory+0x59>
   106ed:	0f 1f 00             	nopl   (%rax)
   106f0:	45 89 f7             	mov    %r14d,%r15d
   106f3:	48 89 de             	mov    %rbx,%rsi
   106f6:	48 8d 6c 24 10       	lea    0x10(%rsp),%rbp
   106fb:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   10700:	4c 29 fe             	sub    %r15,%rsi
   10703:	48 89 ef             	mov    %rbp,%rdi
   10706:	e8 f5 08 00 00       	call   11000 <__memcpy_8a>
   1070b:	45 85 f6             	test   %r14d,%r14d
   1070e:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   10713:	74 0a                	je     1071f <copy_external_memory+0xbf>
   10715:	49 8d 04 17          	lea    (%r15,%rdx,1),%rax
   10719:	48 83 f8 08          	cmp    $0x8,%rax
   1071d:	77 11                	ja     10730 <copy_external_memory+0xd0>
   1071f:	4a 8d 5c 3d 00       	lea    0x0(%rbp,%r15,1),%rbx
   10724:	45 84 e4             	test   %r12b,%r12b
   10727:	74 80                	je     106a9 <copy_external_memory+0x49>
   10729:	eb b5                	jmp    106e0 <copy_external_memory+0x80>
   1072b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10730:	4c 29 fb             	sub    %r15,%rbx
   10733:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   10738:	48 8d 73 08          	lea    0x8(%rbx),%rsi
   1073c:	e8 bf 08 00 00       	call   11000 <__memcpy_8a>
   10741:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   10746:	eb d7                	jmp    1071f <copy_external_memory+0xbf>
   10748:	e8 b3 03 00 00       	call   10b00 <__stack_chk_fail>
   1074d:	0f 1f 00             	nopl   (%rax)

0000000000010750 <memcpy_nochecks>:
   10750:	f3 0f 1e fa          	endbr64 
   10754:	49 89 fb             	mov    %rdi,%r11
   10757:	48 85 d2             	test   %rdx,%rdx
   1075a:	74 0a                	je     10766 <memcpy_nochecks+0x16>
   1075c:	48 39 f7             	cmp    %rsi,%rdi
   1075f:	74 05                	je     10766 <memcpy_nochecks+0x16>
   10761:	e8 4a fd ff ff       	call   104b0 <__memcpy.part.0>
   10766:	4c 89 d8             	mov    %r11,%rax
   10769:	c3                   	ret    
   1076a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000010770 <memcpy>:
   10770:	f3 0f 1e fa          	endbr64 
   10774:	41 57                	push   %r15
   10776:	41 56                	push   %r14
   10778:	41 55                	push   %r13
   1077a:	49 89 fd             	mov    %rdi,%r13
   1077d:	41 54                	push   %r12
   1077f:	55                   	push   %rbp
   10780:	53                   	push   %rbx
   10781:	48 83 ec 18          	sub    $0x18,%rsp
   10785:	48 85 d2             	test   %rdx,%rdx
   10788:	0f 84 d4 00 00 00    	je     10862 <memcpy+0xf2>
   1078e:	48 89 f3             	mov    %rsi,%rbx
   10791:	48 39 f7             	cmp    %rsi,%rdi
   10794:	0f 84 c8 00 00 00    	je     10862 <memcpy+0xf2>
   1079a:	48 89 d6             	mov    %rdx,%rsi
   1079d:	48 89 df             	mov    %rbx,%rdi
   107a0:	48 89 d5             	mov    %rdx,%rbp
   107a3:	e8 58 54 ff ff       	call   5c00 <sgx_is_within_enclave>
   107a8:	48 89 ee             	mov    %rbp,%rsi
   107ab:	4c 89 ef             	mov    %r13,%rdi
   107ae:	41 89 c4             	mov    %eax,%r12d
   107b1:	e8 4a 54 ff ff       	call   5c00 <sgx_is_within_enclave>
   107b6:	45 85 e4             	test   %r12d,%r12d
   107b9:	0f 85 b9 00 00 00    	jne    10878 <memcpy+0x108>
   107bf:	85 c0                	test   %eax,%eax
   107c1:	4d 89 ec             	mov    %r13,%r12
   107c4:	0f 94 c0             	sete   %al
   107c7:	0f b6 c0             	movzbl %al,%eax
   107ca:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   107ce:	48 83 fd 07          	cmp    $0x7,%rbp
   107d2:	77 38                	ja     1080c <memcpy+0x9c>
   107d4:	eb 7a                	jmp    10850 <memcpy+0xe0>
   107d6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   107dd:	00 00 00 
   107e0:	41 be 08 00 00 00    	mov    $0x8,%r14d
   107e6:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
   107ea:	48 89 de             	mov    %rbx,%rsi
   107ed:	4c 89 e7             	mov    %r12,%rdi
   107f0:	4d 29 fe             	sub    %r15,%r14
   107f3:	49 8d 6c 2f f8       	lea    -0x8(%r15,%rbp,1),%rbp
   107f8:	4c 89 f2             	mov    %r14,%rdx
   107fb:	4c 01 f3             	add    %r14,%rbx
   107fe:	4d 01 f4             	add    %r14,%r12
   10801:	e8 5a fe ff ff       	call   10660 <copy_external_memory>
   10806:	48 83 fd 07          	cmp    $0x7,%rbp
   1080a:	76 44                	jbe    10850 <memcpy+0xe0>
   1080c:	48 89 d8             	mov    %rbx,%rax
   1080f:	4d 89 e7             	mov    %r12,%r15
   10812:	4c 09 e0             	or     %r12,%rax
   10815:	41 83 e7 07          	and    $0x7,%r15d
   10819:	a8 07                	test   $0x7,%al
   1081b:	75 c3                	jne    107e0 <memcpy+0x70>
   1081d:	49 89 eb             	mov    %rbp,%r11
   10820:	49 83 e3 f8          	and    $0xfffffffffffffff8,%r11
   10824:	4c 39 e3             	cmp    %r12,%rbx
   10827:	74 0e                	je     10837 <memcpy+0xc7>
   10829:	4c 89 da             	mov    %r11,%rdx
   1082c:	48 89 de             	mov    %rbx,%rsi
   1082f:	4c 89 e7             	mov    %r12,%rdi
   10832:	e8 79 fc ff ff       	call   104b0 <__memcpy.part.0>
   10837:	4c 29 dd             	sub    %r11,%rbp
   1083a:	4c 01 db             	add    %r11,%rbx
   1083d:	4d 01 dc             	add    %r11,%r12
   10840:	48 83 fd 07          	cmp    $0x7,%rbp
   10844:	77 c6                	ja     1080c <memcpy+0x9c>
   10846:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1084d:	00 00 00 
   10850:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
   10854:	48 89 ea             	mov    %rbp,%rdx
   10857:	48 89 de             	mov    %rbx,%rsi
   1085a:	4c 89 e7             	mov    %r12,%rdi
   1085d:	e8 fe fd ff ff       	call   10660 <copy_external_memory>
   10862:	48 83 c4 18          	add    $0x18,%rsp
   10866:	4c 89 e8             	mov    %r13,%rax
   10869:	5b                   	pop    %rbx
   1086a:	5d                   	pop    %rbp
   1086b:	41 5c                	pop    %r12
   1086d:	41 5d                	pop    %r13
   1086f:	41 5e                	pop    %r14
   10871:	41 5f                	pop    %r15
   10873:	c3                   	ret    
   10874:	0f 1f 40 00          	nopl   0x0(%rax)
   10878:	48 89 ea             	mov    %rbp,%rdx
   1087b:	48 89 de             	mov    %rbx,%rsi
   1087e:	4c 89 ef             	mov    %r13,%rdi
   10881:	85 c0                	test   %eax,%eax
   10883:	75 1b                	jne    108a0 <memcpy+0x130>
   10885:	48 83 c4 18          	add    $0x18,%rsp
   10889:	5b                   	pop    %rbx
   1088a:	5d                   	pop    %rbp
   1088b:	41 5c                	pop    %r12
   1088d:	41 5d                	pop    %r13
   1088f:	41 5e                	pop    %r14
   10891:	41 5f                	pop    %r15
   10893:	e9 08 fd ff ff       	jmp    105a0 <memcpy_verw>
   10898:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1089f:	00 
   108a0:	e8 0b fc ff ff       	call   104b0 <__memcpy.part.0>
   108a5:	eb bb                	jmp    10862 <memcpy+0xf2>
   108a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   108ae:	00 00 

00000000000108b0 <memset_verw>:
   108b0:	f3 0f 1e fa          	endbr64 
   108b4:	41 56                	push   %r14
   108b6:	41 55                	push   %r13
   108b8:	41 54                	push   %r12
   108ba:	49 89 fc             	mov    %rdi,%r12
   108bd:	55                   	push   %rbp
   108be:	53                   	push   %rbx
   108bf:	48 83 ec 20          	sub    $0x20,%rsp
   108c3:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   108ca:	00 00 
   108cc:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   108d1:	31 c0                	xor    %eax,%eax
   108d3:	48 85 d2             	test   %rdx,%rdx
   108d6:	0f 84 a0 00 00 00    	je     1097c <memset_verw+0xcc>
   108dc:	48 85 ff             	test   %rdi,%rdi
   108df:	0f 84 97 00 00 00    	je     1097c <memset_verw+0xcc>
   108e5:	4c 8d 6c 24 10       	lea    0x10(%rsp),%r13
   108ea:	48 89 d5             	mov    %rdx,%rbp
   108ed:	ba 08 00 00 00       	mov    $0x8,%edx
   108f2:	4c 89 e3             	mov    %r12,%rbx
   108f5:	4c 89 ef             	mov    %r13,%rdi
   108f8:	40 88 74 24 0f       	mov    %sil,0xf(%rsp)
   108fd:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   10904:	00 00 
   10906:	e8 05 07 00 00       	call   11010 <__memset>
   1090b:	48 83 fd 07          	cmp    $0x7,%rbp
   1090f:	76 4b                	jbe    1095c <memset_verw+0xac>
   10911:	4c 8d 74 24 0f       	lea    0xf(%rsp),%r14
   10916:	eb 21                	jmp    10939 <memset_verw+0x89>
   10918:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1091f:	00 
   10920:	48 89 df             	mov    %rbx,%rdi
   10923:	4c 89 ee             	mov    %r13,%rsi
   10926:	48 83 ed 08          	sub    $0x8,%rbp
   1092a:	48 83 c3 08          	add    $0x8,%rbx
   1092e:	e8 cd 06 00 00       	call   11000 <__memcpy_8a>
   10933:	48 83 fd 07          	cmp    $0x7,%rbp
   10937:	76 1e                	jbe    10957 <memset_verw+0xa7>
   10939:	f6 c3 07             	test   $0x7,%bl
   1093c:	74 e2                	je     10920 <memset_verw+0x70>
   1093e:	48 89 df             	mov    %rbx,%rdi
   10941:	4c 89 f6             	mov    %r14,%rsi
   10944:	48 83 ed 01          	sub    $0x1,%rbp
   10948:	48 83 c3 01          	add    $0x1,%rbx
   1094c:	e8 8f 06 00 00       	call   10fe0 <__memcpy_verw>
   10951:	48 83 fd 07          	cmp    $0x7,%rbp
   10955:	77 e2                	ja     10939 <memset_verw+0x89>
   10957:	48 85 ed             	test   %rbp,%rbp
   1095a:	74 20                	je     1097c <memset_verw+0xcc>
   1095c:	48 01 dd             	add    %rbx,%rbp
   1095f:	4c 8d 6c 24 0f       	lea    0xf(%rsp),%r13
   10964:	0f 1f 40 00          	nopl   0x0(%rax)
   10968:	48 89 df             	mov    %rbx,%rdi
   1096b:	4c 89 ee             	mov    %r13,%rsi
   1096e:	48 83 c3 01          	add    $0x1,%rbx
   10972:	e8 69 06 00 00       	call   10fe0 <__memcpy_verw>
   10977:	48 39 eb             	cmp    %rbp,%rbx
   1097a:	75 ec                	jne    10968 <memset_verw+0xb8>
   1097c:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   10981:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
   10988:	00 00 
   1098a:	75 10                	jne    1099c <memset_verw+0xec>
   1098c:	48 83 c4 20          	add    $0x20,%rsp
   10990:	4c 89 e0             	mov    %r12,%rax
   10993:	5b                   	pop    %rbx
   10994:	5d                   	pop    %rbp
   10995:	41 5c                	pop    %r12
   10997:	41 5d                	pop    %r13
   10999:	41 5e                	pop    %r14
   1099b:	c3                   	ret    
   1099c:	e8 5f 01 00 00       	call   10b00 <__stack_chk_fail>
   109a1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   109a8:	00 00 00 
   109ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000109b0 <memset>:
   109b0:	f3 0f 1e fa          	endbr64 
   109b4:	e9 57 06 00 00       	jmp    11010 <__memset>
   109b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000109c0 <memset_s>:
   109c0:	f3 0f 1e fa          	endbr64 
   109c4:	53                   	push   %rbx
   109c5:	48 85 ff             	test   %rdi,%rdi
   109c8:	74 3e                	je     10a08 <memset_s+0x48>
   109ca:	48 89 f0             	mov    %rsi,%rax
   109cd:	89 d6                	mov    %edx,%esi
   109cf:	48 39 c8             	cmp    %rcx,%rax
   109d2:	73 1c                	jae    109f0 <memset_s+0x30>
   109d4:	48 8b 0d 7d 74 00 00 	mov    0x747d(%rip),%rcx        # 17e58 <__memset_vp>
   109db:	48 89 c2             	mov    %rax,%rdx
   109de:	bb 4b 00 00 00       	mov    $0x4b,%ebx
   109e3:	ff d1                	call   *%rcx
   109e5:	e8 e6 05 00 00       	call   10fd0 <__errno_location>
   109ea:	89 18                	mov    %ebx,(%rax)
   109ec:	89 d8                	mov    %ebx,%eax
   109ee:	5b                   	pop    %rbx
   109ef:	c3                   	ret    
   109f0:	31 db                	xor    %ebx,%ebx
   109f2:	48 8b 05 5f 74 00 00 	mov    0x745f(%rip),%rax        # 17e58 <__memset_vp>
   109f9:	48 89 ca             	mov    %rcx,%rdx
   109fc:	ff d0                	call   *%rax
   109fe:	89 d8                	mov    %ebx,%eax
   10a00:	5b                   	pop    %rbx
   10a01:	c3                   	ret    
   10a02:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10a08:	bb 16 00 00 00       	mov    $0x16,%ebx
   10a0d:	eb d6                	jmp    109e5 <memset_s+0x25>
   10a0f:	90                   	nop

0000000000010a10 <memset_verw_s>:
   10a10:	f3 0f 1e fa          	endbr64 
   10a14:	53                   	push   %rbx
   10a15:	48 85 ff             	test   %rdi,%rdi
   10a18:	74 36                	je     10a50 <memset_verw_s+0x40>
   10a1a:	48 89 f0             	mov    %rsi,%rax
   10a1d:	89 d6                	mov    %edx,%esi
   10a1f:	48 39 c8             	cmp    %rcx,%rax
   10a22:	73 1c                	jae    10a40 <memset_verw_s+0x30>
   10a24:	48 89 c2             	mov    %rax,%rdx
   10a27:	bb 4b 00 00 00       	mov    $0x4b,%ebx
   10a2c:	e8 7f fe ff ff       	call   108b0 <memset_verw>
   10a31:	e8 9a 05 00 00       	call   10fd0 <__errno_location>
   10a36:	89 18                	mov    %ebx,(%rax)
   10a38:	89 d8                	mov    %ebx,%eax
   10a3a:	5b                   	pop    %rbx
   10a3b:	c3                   	ret    
   10a3c:	0f 1f 40 00          	nopl   0x0(%rax)
   10a40:	31 db                	xor    %ebx,%ebx
   10a42:	48 89 ca             	mov    %rcx,%rdx
   10a45:	e8 66 fe ff ff       	call   108b0 <memset_verw>
   10a4a:	89 d8                	mov    %ebx,%eax
   10a4c:	5b                   	pop    %rbx
   10a4d:	c3                   	ret    
   10a4e:	66 90                	xchg   %ax,%ax
   10a50:	bb 16 00 00 00       	mov    $0x16,%ebx
   10a55:	eb da                	jmp    10a31 <memset_verw_s+0x21>
   10a57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   10a5e:	00 00 

0000000000010a60 <sgx_init_string_lib>:
   10a60:	f3 0f 1e fa          	endbr64 
   10a64:	31 c0                	xor    %eax,%eax
   10a66:	c3                   	ret    
   10a67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   10a6e:	00 00 

0000000000010a70 <strlen>:
   10a70:	f3 0f 1e fa          	endbr64 
   10a74:	e9 f7 05 00 00       	jmp    11070 <_strlen>
   10a79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000010a80 <strncpy>:
   10a80:	f3 0f 1e fa          	endbr64 
   10a84:	48 89 f8             	mov    %rdi,%rax
   10a87:	48 85 d2             	test   %rdx,%rdx
   10a8a:	74 6c                	je     10af8 <strncpy+0x78>
   10a8c:	48 8d 3c 17          	lea    (%rdi,%rdx,1),%rdi
   10a90:	49 89 f0             	mov    %rsi,%r8
   10a93:	48 89 c1             	mov    %rax,%rcx
   10a96:	eb 0d                	jmp    10aa5 <strncpy+0x25>
   10a98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   10a9f:	00 
   10aa0:	48 39 f9             	cmp    %rdi,%rcx
   10aa3:	74 53                	je     10af8 <strncpy+0x78>
   10aa5:	45 0f b6 08          	movzbl (%r8),%r9d
   10aa9:	49 83 c0 01          	add    $0x1,%r8
   10aad:	48 83 c1 01          	add    $0x1,%rcx
   10ab1:	44 88 49 ff          	mov    %r9b,-0x1(%rcx)
   10ab5:	45 84 c9             	test   %r9b,%r9b
   10ab8:	75 e6                	jne    10aa0 <strncpy+0x20>
   10aba:	4c 29 c6             	sub    %r8,%rsi
   10abd:	48 01 d6             	add    %rdx,%rsi
   10ac0:	74 36                	je     10af8 <strncpy+0x78>
   10ac2:	48 8d 14 31          	lea    (%rcx,%rsi,1),%rdx
   10ac6:	83 e6 01             	and    $0x1,%esi
   10ac9:	74 15                	je     10ae0 <strncpy+0x60>
   10acb:	48 83 c1 01          	add    $0x1,%rcx
   10acf:	c6 41 ff 00          	movb   $0x0,-0x1(%rcx)
   10ad3:	48 39 ca             	cmp    %rcx,%rdx
   10ad6:	74 21                	je     10af9 <strncpy+0x79>
   10ad8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   10adf:	00 
   10ae0:	c6 01 00             	movb   $0x0,(%rcx)
   10ae3:	48 83 c1 02          	add    $0x2,%rcx
   10ae7:	c6 41 ff 00          	movb   $0x0,-0x1(%rcx)
   10aeb:	48 39 ca             	cmp    %rcx,%rdx
   10aee:	75 f0                	jne    10ae0 <strncpy+0x60>
   10af0:	c3                   	ret    
   10af1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10af8:	c3                   	ret    
   10af9:	c3                   	ret    
   10afa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000010b00 <__stack_chk_fail>:
   10b00:	f3 0f 1e fa          	endbr64 
   10b04:	50                   	push   %rax
   10b05:	58                   	pop    %rax
   10b06:	48 83 ec 08          	sub    $0x8,%rsp
   10b0a:	e8 28 1a 00 00       	call   12537 <abort>
   10b0f:	90                   	nop

0000000000010b10 <__stack_chk_fail_local>:
   10b10:	f3 0f 1e fa          	endbr64 
   10b14:	50                   	push   %rax
   10b15:	58                   	pop    %rax
   10b16:	48 83 ec 08          	sub    $0x8,%rsp
   10b1a:	e8 18 1a 00 00       	call   12537 <abort>
   10b1f:	90                   	nop

0000000000010b20 <__intel_security_check_cookie>:
   10b20:	f3 0f 1e fa          	endbr64 
   10b24:	48 39 3d dd 72 00 00 	cmp    %rdi,0x72dd(%rip)        # 17e08 <__intel_security_cookie>
   10b2b:	75 01                	jne    10b2e <__intel_security_check_cookie+0xe>
   10b2d:	c3                   	ret    
   10b2e:	50                   	push   %rax
   10b2f:	e8 03 1a 00 00       	call   12537 <abort>
   10b34:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   10b3b:	00 00 00 
   10b3e:	66 90                	xchg   %ax,%ax

0000000000010b40 <sgx_thread_spin_init>:
   10b40:	f3 0f 1e fa          	endbr64 
   10b44:	48 85 ff             	test   %rdi,%rdi
   10b47:	74 37                	je     10b80 <sgx_thread_spin_init+0x40>
   10b49:	53                   	push   %rbx
   10b4a:	be 18 00 00 00       	mov    $0x18,%esi
   10b4f:	48 89 fb             	mov    %rdi,%rbx
   10b52:	e8 a9 50 ff ff       	call   5c00 <sgx_is_within_enclave>
   10b57:	85 c0                	test   %eax,%eax
   10b59:	74 1d                	je     10b78 <sgx_thread_spin_init+0x38>
   10b5b:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   10b62:	31 c0                	xor    %eax,%eax
   10b64:	48 c7 43 10 00 00 00 	movq   $0x0,0x10(%rbx)
   10b6b:	00 
   10b6c:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%rbx)
   10b73:	5b                   	pop    %rbx
   10b74:	c3                   	ret    
   10b75:	0f 1f 00             	nopl   (%rax)
   10b78:	b8 16 00 00 00       	mov    $0x16,%eax
   10b7d:	5b                   	pop    %rbx
   10b7e:	c3                   	ret    
   10b7f:	90                   	nop
   10b80:	b8 16 00 00 00       	mov    $0x16,%eax
   10b85:	c3                   	ret    
   10b86:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   10b8d:	00 00 00 

0000000000010b90 <sgx_thread_spin_destroy>:
   10b90:	f3 0f 1e fa          	endbr64 
   10b94:	48 85 ff             	test   %rdi,%rdi
   10b97:	74 6f                	je     10c08 <sgx_thread_spin_destroy+0x78>
   10b99:	55                   	push   %rbp
   10b9a:	be 18 00 00 00       	mov    $0x18,%esi
   10b9f:	53                   	push   %rbx
   10ba0:	48 89 fb             	mov    %rdi,%rbx
   10ba3:	48 83 ec 08          	sub    $0x8,%rsp
   10ba7:	e8 54 50 ff ff       	call   5c00 <sgx_is_within_enclave>
   10bac:	85 c0                	test   %eax,%eax
   10bae:	74 30                	je     10be0 <sgx_thread_spin_destroy+0x50>
   10bb0:	48 8d 6b 08          	lea    0x8(%rbx),%rbp
   10bb4:	48 89 ef             	mov    %rbp,%rdi
   10bb7:	e8 54 bc ff ff       	call   c810 <sgx_spin_lock>
   10bbc:	48 83 7b 10 00       	cmpq   $0x0,0x10(%rbx)
   10bc1:	75 2d                	jne    10bf0 <sgx_thread_spin_destroy+0x60>
   10bc3:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   10bca:	48 89 ef             	mov    %rbp,%rdi
   10bcd:	e8 ce bc ff ff       	call   c8a0 <sgx_spin_unlock>
   10bd2:	48 83 c4 08          	add    $0x8,%rsp
   10bd6:	31 c0                	xor    %eax,%eax
   10bd8:	5b                   	pop    %rbx
   10bd9:	5d                   	pop    %rbp
   10bda:	c3                   	ret    
   10bdb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10be0:	48 83 c4 08          	add    $0x8,%rsp
   10be4:	b8 16 00 00 00       	mov    $0x16,%eax
   10be9:	5b                   	pop    %rbx
   10bea:	5d                   	pop    %rbp
   10beb:	c3                   	ret    
   10bec:	0f 1f 40 00          	nopl   0x0(%rax)
   10bf0:	48 89 ef             	mov    %rbp,%rdi
   10bf3:	e8 a8 bc ff ff       	call   c8a0 <sgx_spin_unlock>
   10bf8:	48 83 c4 08          	add    $0x8,%rsp
   10bfc:	b8 10 00 00 00       	mov    $0x10,%eax
   10c01:	5b                   	pop    %rbx
   10c02:	5d                   	pop    %rbp
   10c03:	c3                   	ret    
   10c04:	0f 1f 40 00          	nopl   0x0(%rax)
   10c08:	b8 16 00 00 00       	mov    $0x16,%eax
   10c0d:	c3                   	ret    
   10c0e:	66 90                	xchg   %ax,%ax

0000000000010c10 <sgx_thread_spin_trylock>:
   10c10:	f3 0f 1e fa          	endbr64 
   10c14:	48 85 ff             	test   %rdi,%rdi
   10c17:	74 7f                	je     10c98 <sgx_thread_spin_trylock+0x88>
   10c19:	41 54                	push   %r12
   10c1b:	be 18 00 00 00       	mov    $0x18,%esi
   10c20:	55                   	push   %rbp
   10c21:	53                   	push   %rbx
   10c22:	48 89 fb             	mov    %rdi,%rbx
   10c25:	e8 d6 4f ff ff       	call   5c00 <sgx_is_within_enclave>
   10c2a:	85 c0                	test   %eax,%eax
   10c2c:	74 42                	je     10c70 <sgx_thread_spin_trylock+0x60>
   10c2e:	e8 10 15 00 00       	call   12143 <get_thread_data>
   10c33:	4c 8d 63 08          	lea    0x8(%rbx),%r12
   10c37:	4c 89 e7             	mov    %r12,%rdi
   10c3a:	48 89 c5             	mov    %rax,%rbp
   10c3d:	e8 ce bb ff ff       	call   c810 <sgx_spin_lock>
   10c42:	48 8b 43 10          	mov    0x10(%rbx),%rax
   10c46:	48 39 e8             	cmp    %rbp,%rax
   10c49:	74 09                	je     10c54 <sgx_thread_spin_trylock+0x44>
   10c4b:	48 85 c0             	test   %rax,%rax
   10c4e:	75 30                	jne    10c80 <sgx_thread_spin_trylock+0x70>
   10c50:	48 89 6b 10          	mov    %rbp,0x10(%rbx)
   10c54:	48 83 03 01          	addq   $0x1,(%rbx)
   10c58:	4c 89 e7             	mov    %r12,%rdi
   10c5b:	e8 40 bc ff ff       	call   c8a0 <sgx_spin_unlock>
   10c60:	5b                   	pop    %rbx
   10c61:	31 c0                	xor    %eax,%eax
   10c63:	5d                   	pop    %rbp
   10c64:	41 5c                	pop    %r12
   10c66:	c3                   	ret    
   10c67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   10c6e:	00 00 
   10c70:	5b                   	pop    %rbx
   10c71:	b8 16 00 00 00       	mov    $0x16,%eax
   10c76:	5d                   	pop    %rbp
   10c77:	41 5c                	pop    %r12
   10c79:	c3                   	ret    
   10c7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10c80:	4c 89 e7             	mov    %r12,%rdi
   10c83:	e8 18 bc ff ff       	call   c8a0 <sgx_spin_unlock>
   10c88:	5b                   	pop    %rbx
   10c89:	b8 10 00 00 00       	mov    $0x10,%eax
   10c8e:	5d                   	pop    %rbp
   10c8f:	41 5c                	pop    %r12
   10c91:	c3                   	ret    
   10c92:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10c98:	b8 16 00 00 00       	mov    $0x16,%eax
   10c9d:	c3                   	ret    
   10c9e:	66 90                	xchg   %ax,%ax

0000000000010ca0 <sgx_thread_spin_unlock>:
   10ca0:	f3 0f 1e fa          	endbr64 
   10ca4:	48 85 ff             	test   %rdi,%rdi
   10ca7:	0f 84 8b 00 00 00    	je     10d38 <sgx_thread_spin_unlock+0x98>
   10cad:	41 54                	push   %r12
   10caf:	be 18 00 00 00       	mov    $0x18,%esi
   10cb4:	55                   	push   %rbp
   10cb5:	53                   	push   %rbx
   10cb6:	48 89 fb             	mov    %rdi,%rbx
   10cb9:	e8 42 4f ff ff       	call   5c00 <sgx_is_within_enclave>
   10cbe:	85 c0                	test   %eax,%eax
   10cc0:	74 56                	je     10d18 <sgx_thread_spin_unlock+0x78>
   10cc2:	e8 7c 14 00 00       	call   12143 <get_thread_data>
   10cc7:	4c 8d 63 08          	lea    0x8(%rbx),%r12
   10ccb:	4c 89 e7             	mov    %r12,%rdi
   10cce:	48 89 c5             	mov    %rax,%rbp
   10cd1:	e8 3a bb ff ff       	call   c810 <sgx_spin_lock>
   10cd6:	48 8b 43 10          	mov    0x10(%rbx),%rax
   10cda:	48 85 c0             	test   %rax,%rax
   10cdd:	74 21                	je     10d00 <sgx_thread_spin_unlock+0x60>
   10cdf:	48 39 e8             	cmp    %rbp,%rax
   10ce2:	75 1c                	jne    10d00 <sgx_thread_spin_unlock+0x60>
   10ce4:	48 83 2b 01          	subq   $0x1,(%rbx)
   10ce8:	74 3e                	je     10d28 <sgx_thread_spin_unlock+0x88>
   10cea:	4c 89 e7             	mov    %r12,%rdi
   10ced:	e8 ae bb ff ff       	call   c8a0 <sgx_spin_unlock>
   10cf2:	5b                   	pop    %rbx
   10cf3:	31 c0                	xor    %eax,%eax
   10cf5:	5d                   	pop    %rbp
   10cf6:	41 5c                	pop    %r12
   10cf8:	c3                   	ret    
   10cf9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10d00:	4c 89 e7             	mov    %r12,%rdi
   10d03:	e8 98 bb ff ff       	call   c8a0 <sgx_spin_unlock>
   10d08:	5b                   	pop    %rbx
   10d09:	b8 01 00 00 00       	mov    $0x1,%eax
   10d0e:	5d                   	pop    %rbp
   10d0f:	41 5c                	pop    %r12
   10d11:	c3                   	ret    
   10d12:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10d18:	5b                   	pop    %rbx
   10d19:	b8 16 00 00 00       	mov    $0x16,%eax
   10d1e:	5d                   	pop    %rbp
   10d1f:	41 5c                	pop    %r12
   10d21:	c3                   	ret    
   10d22:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10d28:	48 c7 43 10 00 00 00 	movq   $0x0,0x10(%rbx)
   10d2f:	00 
   10d30:	eb b8                	jmp    10cea <sgx_thread_spin_unlock+0x4a>
   10d32:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10d38:	b8 16 00 00 00       	mov    $0x16,%eax
   10d3d:	c3                   	ret    
   10d3e:	66 90                	xchg   %ax,%ax

0000000000010d40 <memcpy_s>:
   10d40:	f3 0f 1e fa          	endbr64 
   10d44:	48 85 c9             	test   %rcx,%rcx
   10d47:	74 4f                	je     10d98 <memcpy_s+0x58>
   10d49:	53                   	push   %rbx
   10d4a:	48 85 ff             	test   %rdi,%rdi
   10d4d:	74 51                	je     10da0 <memcpy_s+0x60>
   10d4f:	48 89 d3             	mov    %rdx,%rbx
   10d52:	48 85 d2             	test   %rdx,%rdx
   10d55:	74 19                	je     10d70 <memcpy_s+0x30>
   10d57:	48 39 ce             	cmp    %rcx,%rsi
   10d5a:	72 14                	jb     10d70 <memcpy_s+0x30>
   10d5c:	48 89 de             	mov    %rbx,%rsi
   10d5f:	48 89 ca             	mov    %rcx,%rdx
   10d62:	e8 09 fa ff ff       	call   10770 <memcpy>
   10d67:	31 c0                	xor    %eax,%eax
   10d69:	5b                   	pop    %rbx
   10d6a:	c3                   	ret    
   10d6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10d70:	48 89 f2             	mov    %rsi,%rdx
   10d73:	31 f6                	xor    %esi,%esi
   10d75:	e8 36 fc ff ff       	call   109b0 <memset>
   10d7a:	48 85 db             	test   %rbx,%rbx
   10d7d:	74 21                	je     10da0 <memcpy_s+0x60>
   10d7f:	e8 4c 02 00 00       	call   10fd0 <__errno_location>
   10d84:	c7 00 22 00 00 00    	movl   $0x22,(%rax)
   10d8a:	b8 22 00 00 00       	mov    $0x22,%eax
   10d8f:	5b                   	pop    %rbx
   10d90:	c3                   	ret    
   10d91:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10d98:	31 c0                	xor    %eax,%eax
   10d9a:	c3                   	ret    
   10d9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10da0:	e8 2b 02 00 00       	call   10fd0 <__errno_location>
   10da5:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   10dab:	b8 16 00 00 00       	mov    $0x16,%eax
   10db0:	5b                   	pop    %rbx
   10db1:	c3                   	ret    
   10db2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   10db9:	00 00 00 
   10dbc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000010dc0 <memcpy_verw_s>:
   10dc0:	f3 0f 1e fa          	endbr64 
   10dc4:	48 85 c9             	test   %rcx,%rcx
   10dc7:	74 4f                	je     10e18 <memcpy_verw_s+0x58>
   10dc9:	53                   	push   %rbx
   10dca:	48 85 ff             	test   %rdi,%rdi
   10dcd:	74 51                	je     10e20 <memcpy_verw_s+0x60>
   10dcf:	48 89 d3             	mov    %rdx,%rbx
   10dd2:	48 85 d2             	test   %rdx,%rdx
   10dd5:	74 19                	je     10df0 <memcpy_verw_s+0x30>
   10dd7:	48 39 ce             	cmp    %rcx,%rsi
   10dda:	72 14                	jb     10df0 <memcpy_verw_s+0x30>
   10ddc:	48 89 de             	mov    %rbx,%rsi
   10ddf:	48 89 ca             	mov    %rcx,%rdx
   10de2:	e8 b9 f7 ff ff       	call   105a0 <memcpy_verw>
   10de7:	31 c0                	xor    %eax,%eax
   10de9:	5b                   	pop    %rbx
   10dea:	c3                   	ret    
   10deb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10df0:	48 89 f2             	mov    %rsi,%rdx
   10df3:	31 f6                	xor    %esi,%esi
   10df5:	e8 b6 fa ff ff       	call   108b0 <memset_verw>
   10dfa:	48 85 db             	test   %rbx,%rbx
   10dfd:	74 21                	je     10e20 <memcpy_verw_s+0x60>
   10dff:	e8 cc 01 00 00       	call   10fd0 <__errno_location>
   10e04:	c7 00 22 00 00 00    	movl   $0x22,(%rax)
   10e0a:	b8 22 00 00 00       	mov    $0x22,%eax
   10e0f:	5b                   	pop    %rbx
   10e10:	c3                   	ret    
   10e11:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10e18:	31 c0                	xor    %eax,%eax
   10e1a:	c3                   	ret    
   10e1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10e20:	e8 ab 01 00 00       	call   10fd0 <__errno_location>
   10e25:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   10e2b:	b8 16 00 00 00       	mov    $0x16,%eax
   10e30:	5b                   	pop    %rbx
   10e31:	c3                   	ret    

0000000000010e32 <setjmp>:
   10e32:	f3 0f 1e fa          	endbr64 
   10e36:	50                   	push   %rax
   10e37:	53                   	push   %rbx
   10e38:	51                   	push   %rcx
   10e39:	52                   	push   %rdx
   10e3a:	56                   	push   %rsi
   10e3b:	57                   	push   %rdi
   10e3c:	41 50                	push   %r8
   10e3e:	41 51                	push   %r9
   10e40:	41 52                	push   %r10
   10e42:	41 53                	push   %r11
   10e44:	41 54                	push   %r12
   10e46:	41 55                	push   %r13
   10e48:	41 56                	push   %r14
   10e4a:	41 57                	push   %r15
   10e4c:	48 c7 c6 08 00 00 00 	mov    $0x8,%rsi
   10e53:	e8 a8 4d ff ff       	call   5c00 <sgx_is_within_enclave>
   10e58:	83 f8 00             	cmp    $0x0,%eax
   10e5b:	74 60                	je     10ebd <.crash>
   10e5d:	41 5f                	pop    %r15
   10e5f:	41 5e                	pop    %r14
   10e61:	41 5d                	pop    %r13
   10e63:	41 5c                	pop    %r12
   10e65:	41 5b                	pop    %r11
   10e67:	41 5a                	pop    %r10
   10e69:	41 59                	pop    %r9
   10e6b:	41 58                	pop    %r8
   10e6d:	5f                   	pop    %rdi
   10e6e:	5e                   	pop    %rsi
   10e6f:	5a                   	pop    %rdx
   10e70:	59                   	pop    %rcx
   10e71:	5b                   	pop    %rbx
   10e72:	58                   	pop    %rax
   10e73:	4c 8b 1c 24          	mov    (%rsp),%r11
   10e77:	48 89 1f             	mov    %rbx,(%rdi)
   10e7a:	48 89 6f 08          	mov    %rbp,0x8(%rdi)
   10e7e:	4c 89 67 10          	mov    %r12,0x10(%rdi)
   10e82:	4c 89 6f 18          	mov    %r13,0x18(%rdi)
   10e86:	4c 89 77 20          	mov    %r14,0x20(%rdi)
   10e8a:	4c 89 7f 28          	mov    %r15,0x28(%rdi)
   10e8e:	48 89 67 30          	mov    %rsp,0x30(%rdi)
   10e92:	4c 89 5f 38          	mov    %r11,0x38(%rdi)
   10e96:	e8 b6 12 00 00       	call   12151 <get_stack_guard>
   10e9b:	48 31 07             	xor    %rax,(%rdi)
   10e9e:	48 31 47 08          	xor    %rax,0x8(%rdi)
   10ea2:	48 31 47 10          	xor    %rax,0x10(%rdi)
   10ea6:	48 31 47 18          	xor    %rax,0x18(%rdi)
   10eaa:	48 31 47 20          	xor    %rax,0x20(%rdi)
   10eae:	48 31 47 28          	xor    %rax,0x28(%rdi)
   10eb2:	48 31 47 30          	xor    %rax,0x30(%rdi)
   10eb6:	48 31 47 38          	xor    %rax,0x38(%rdi)
   10eba:	31 c0                	xor    %eax,%eax
   10ebc:	c3                   	ret    

0000000000010ebd <.crash>:
   10ebd:	0f 0b                	ud2    

0000000000010ebf <longjmp>:
   10ebf:	f3 0f 1e fa          	endbr64 
   10ec3:	50                   	push   %rax
   10ec4:	53                   	push   %rbx
   10ec5:	51                   	push   %rcx
   10ec6:	52                   	push   %rdx
   10ec7:	56                   	push   %rsi
   10ec8:	57                   	push   %rdi
   10ec9:	41 50                	push   %r8
   10ecb:	41 51                	push   %r9
   10ecd:	41 52                	push   %r10
   10ecf:	41 53                	push   %r11
   10ed1:	41 54                	push   %r12
   10ed3:	41 55                	push   %r13
   10ed5:	41 56                	push   %r14
   10ed7:	41 57                	push   %r15
   10ed9:	57                   	push   %rdi
   10eda:	48 c7 c6 08 00 00 00 	mov    $0x8,%rsi
   10ee1:	e8 1a 4d ff ff       	call   5c00 <sgx_is_within_enclave>
   10ee6:	83 f8 00             	cmp    $0x0,%eax
   10ee9:	74 d2                	je     10ebd <.crash>
   10eeb:	5f                   	pop    %rdi
   10eec:	48 8b 57 30          	mov    0x30(%rdi),%rdx
   10ef0:	e8 5c 12 00 00       	call   12151 <get_stack_guard>
   10ef5:	48 31 c2             	xor    %rax,%rdx
   10ef8:	52                   	push   %rdx
   10ef9:	5f                   	pop    %rdi
   10efa:	e8 31 68 ff ff       	call   7730 <is_valid_sp>
   10eff:	83 f8 00             	cmp    $0x0,%eax
   10f02:	74 b9                	je     10ebd <.crash>
   10f04:	41 5f                	pop    %r15
   10f06:	41 5e                	pop    %r14
   10f08:	41 5d                	pop    %r13
   10f0a:	41 5c                	pop    %r12
   10f0c:	41 5b                	pop    %r11
   10f0e:	41 5a                	pop    %r10
   10f10:	41 59                	pop    %r9
   10f12:	41 58                	pop    %r8
   10f14:	5f                   	pop    %rdi
   10f15:	5e                   	pop    %rsi
   10f16:	5a                   	pop    %rdx
   10f17:	59                   	pop    %rcx
   10f18:	5b                   	pop    %rbx
   10f19:	58                   	pop    %rax
   10f1a:	89 f0                	mov    %esi,%eax
   10f1c:	48 8b 1f             	mov    (%rdi),%rbx
   10f1f:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   10f23:	4c 8b 67 10          	mov    0x10(%rdi),%r12
   10f27:	4c 8b 6f 18          	mov    0x18(%rdi),%r13
   10f2b:	4c 8b 77 20          	mov    0x20(%rdi),%r14
   10f2f:	4c 8b 7f 28          	mov    0x28(%rdi),%r15
   10f33:	48 8b 57 30          	mov    0x30(%rdi),%rdx
   10f37:	48 8b 4f 38          	mov    0x38(%rdi),%rcx
   10f3b:	50                   	push   %rax
   10f3c:	e8 10 12 00 00       	call   12151 <get_stack_guard>
   10f41:	48 31 c3             	xor    %rax,%rbx
   10f44:	48 31 c6             	xor    %rax,%rsi
   10f47:	49 31 c4             	xor    %rax,%r12
   10f4a:	49 31 c5             	xor    %rax,%r13
   10f4d:	49 31 c6             	xor    %rax,%r14
   10f50:	49 31 c7             	xor    %rax,%r15
   10f53:	48 31 c2             	xor    %rax,%rdx
   10f56:	48 31 c1             	xor    %rax,%rcx
   10f59:	58                   	pop    %rax
   10f5a:	48 89 f5             	mov    %rsi,%rbp
   10f5d:	48 89 0a             	mov    %rcx,(%rdx)
   10f60:	48 89 d4             	mov    %rdx,%rsp
   10f63:	85 c0                	test   %eax,%eax
   10f65:	75 02                	jne    10f69 <longjmp+0xaa>
   10f67:	ff c0                	inc    %eax
   10f69:	c3                   	ret    
   10f6a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000010f70 <rsrv_mem_init>:
   10f70:	f3 0f 1e fa          	endbr64 
   10f74:	48 85 ff             	test   %rdi,%rdi
   10f77:	74 47                	je     10fc0 <rsrv_mem_init+0x50>
   10f79:	48 89 f0             	mov    %rsi,%rax
   10f7c:	b9 01 00 00 00       	mov    $0x1,%ecx
   10f81:	48 09 d0             	or     %rdx,%rax
   10f84:	48 09 f8             	or     %rdi,%rax
   10f87:	a9 ff 0f 00 00       	test   $0xfff,%eax
   10f8c:	74 0a                	je     10f98 <rsrv_mem_init+0x28>
   10f8e:	89 c8                	mov    %ecx,%eax
   10f90:	c3                   	ret    
   10f91:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10f98:	48 89 f0             	mov    %rsi,%rax
   10f9b:	48 03 05 ce 6e 00 00 	add    0x6ece(%rip),%rax        # 17e70 <rsrv_mem_base>
   10fa2:	72 ea                	jb     10f8e <rsrv_mem_init+0x1e>
   10fa4:	31 c9                	xor    %ecx,%ecx
   10fa6:	48 89 3d c3 6e 00 00 	mov    %rdi,0x6ec3(%rip)        # 17e70 <rsrv_mem_base>
   10fad:	48 89 35 b4 6e 00 00 	mov    %rsi,0x6eb4(%rip)        # 17e68 <rsrv_mem_size>
   10fb4:	89 c8                	mov    %ecx,%eax
   10fb6:	48 89 15 a3 6e 00 00 	mov    %rdx,0x6ea3(%rip)        # 17e60 <rsrv_mem_min_size>
   10fbd:	c3                   	ret    
   10fbe:	66 90                	xchg   %ax,%ax
   10fc0:	b9 01 00 00 00       	mov    $0x1,%ecx
   10fc5:	89 c8                	mov    %ecx,%eax
   10fc7:	c3                   	ret    
   10fc8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   10fcf:	00 

0000000000010fd0 <__errno_location>:
   10fd0:	f3 0f 1e fa          	endbr64 
   10fd4:	e9 a7 66 ff ff       	jmp    7680 <get_errno_addr>
   10fd9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000010fe0 <__memcpy_verw>:
   10fe0:	8a 06                	mov    (%rsi),%al
   10fe2:	48 83 ec 08          	sub    $0x8,%rsp
   10fe6:	8c 1c 24             	mov    %ds,(%rsp)
   10fe9:	0f 00 2c 24          	verw   (%rsp)
   10fed:	88 07                	mov    %al,(%rdi)
   10fef:	0f ae f0             	mfence 
   10ff2:	0f ae e8             	lfence 
   10ff5:	48 83 c4 08          	add    $0x8,%rsp
   10ff9:	48 89 f8             	mov    %rdi,%rax
   10ffc:	c3                   	ret    
   10ffd:	cc                   	int3   
   10ffe:	cc                   	int3   
   10fff:	cc                   	int3   

0000000000011000 <__memcpy_8a>:
   11000:	48 8b 06             	mov    (%rsi),%rax
   11003:	48 89 07             	mov    %rax,(%rdi)
   11006:	48 89 f8             	mov    %rdi,%rax
   11009:	c3                   	ret    
   1100a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000011010 <__memset>:
   11010:	48 89 f0             	mov    %rsi,%rax
   11013:	48 25 ff 00 00 00    	and    $0xff,%rax
   11019:	48 89 d1             	mov    %rdx,%rcx
   1101c:	49 89 fb             	mov    %rdi,%r11
   1101f:	fc                   	cld    
   11020:	48 83 f9 0f          	cmp    $0xf,%rcx
   11024:	7e 38                	jle    1105e <L1>
   11026:	88 c4                	mov    %al,%ah
   11028:	89 c2                	mov    %eax,%edx
   1102a:	c1 e0 10             	shl    $0x10,%eax
   1102d:	09 d0                	or     %edx,%eax
   1102f:	89 c2                	mov    %eax,%edx
   11031:	48 c1 e0 20          	shl    $0x20,%rax
   11035:	48 09 d0             	or     %rdx,%rax
   11038:	48 89 fa             	mov    %rdi,%rdx
   1103b:	48 f7 da             	neg    %rdx
   1103e:	48 83 e2 07          	and    $0x7,%rdx
   11042:	49 89 c8             	mov    %rcx,%r8
   11045:	49 29 d0             	sub    %rdx,%r8
   11048:	48 89 d1             	mov    %rdx,%rcx
   1104b:	f3 aa                	rep stos %al,%es:(%rdi)
   1104d:	4c 89 c1             	mov    %r8,%rcx
   11050:	48 c1 e9 03          	shr    $0x3,%rcx
   11054:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   11057:	4c 89 c1             	mov    %r8,%rcx
   1105a:	48 83 e1 07          	and    $0x7,%rcx

000000000001105e <L1>:
   1105e:	f3 aa                	rep stos %al,%es:(%rdi)
   11060:	4c 89 d8             	mov    %r11,%rax
   11063:	c3                   	ret    
   11064:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1106b:	00 00 00 
   1106e:	66 90                	xchg   %ax,%ax

0000000000011070 <_strlen>:
   11070:	49 b8 01 01 01 01 01 	movabs $0x101010101010101,%r8
   11077:	01 01 01 
   1107a:	40 f6 c7 07          	test   $0x7,%dil
   1107e:	48 89 f8             	mov    %rdi,%rax
   11081:	49 b9 80 80 80 80 80 	movabs $0x8080808080808080,%r9
   11088:	80 80 80 
   1108b:	75 33                	jne    110c0 <_strlen+0x50>
   1108d:	0f 1f 00             	nopl   (%rax)
   11090:	48 8b 10             	mov    (%rax),%rdx
   11093:	48 83 c0 08          	add    $0x8,%rax
   11097:	48 89 d1             	mov    %rdx,%rcx
   1109a:	4c 29 c2             	sub    %r8,%rdx
   1109d:	48 f7 d1             	not    %rcx
   110a0:	4c 21 ca             	and    %r9,%rdx
   110a3:	74 eb                	je     11090 <_strlen+0x20>
   110a5:	48 21 ca             	and    %rcx,%rdx
   110a8:	74 e6                	je     11090 <_strlen+0x20>
   110aa:	48 29 f8             	sub    %rdi,%rax
   110ad:	48 0f bc d2          	bsf    %rdx,%rdx
   110b1:	48 c1 ea 03          	shr    $0x3,%rdx
   110b5:	48 8d 44 10 f8       	lea    -0x8(%rax,%rdx,1),%rax
   110ba:	c3                   	ret    
   110bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   110c0:	88 c1                	mov    %al,%cl
   110c2:	48 c7 c6 01 00 00 00 	mov    $0x1,%rsi
   110c9:	80 e1 07             	and    $0x7,%cl
   110cc:	24 f8                	and    $0xf8,%al
   110ce:	c0 e1 03             	shl    $0x3,%cl
   110d1:	48 8b 10             	mov    (%rax),%rdx
   110d4:	48 d3 e6             	shl    %cl,%rsi
   110d7:	48 ff ce             	dec    %rsi
   110da:	48 09 f2             	or     %rsi,%rdx
   110dd:	eb b4                	jmp    11093 <_strlen+0x23>
   110df:	90                   	nop

00000000000110e0 <sgx_init_crypto_lib>:
   110e0:	f3 0f 1e fa          	endbr64 
   110e4:	e9 07 00 00 00       	jmp    110f0 <init_ipp_cpuid>
   110e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000110f0 <init_ipp_cpuid>:
   110f0:	f3 0f 1e fa          	endbr64 
   110f4:	48 83 3d f4 6e 00 00 	cmpq   $0x0,0x6ef4(%rip)        # 17ff0 <ippcpSetCpuFeatures>
   110fb:	00 
   110fc:	0f 84 2e 02 00 00    	je     11330 <init_ipp_cpuid+0x240>
   11102:	48 89 f8             	mov    %rdi,%rax
   11105:	ba 02 00 00 00       	mov    $0x2,%edx
   1110a:	f6 c4 02             	test   $0x2,%ah
   1110d:	0f 84 1f 02 00 00    	je     11332 <init_ipp_cpuid+0x242>
   11113:	48 89 fa             	mov    %rdi,%rdx
   11116:	48 83 ec 08          	sub    $0x8,%rsp
   1111a:	48 b9 00 00 00 00 08 	movabs $0x800000000,%rcx
   11121:	00 00 00 
   11124:	81 e2 00 08 00 00    	and    $0x800,%edx
   1112a:	48 83 fa 01          	cmp    $0x1,%rdx
   1112e:	48 19 ff             	sbb    %rdi,%rdi
   11131:	48 83 e7 e0          	and    $0xffffffffffffffe0,%rdi
   11135:	48 83 c7 7f          	add    $0x7f,%rdi
   11139:	48 89 fa             	mov    %rdi,%rdx
   1113c:	80 ca 80             	or     $0x80,%dl
   1113f:	f6 c4 04             	test   $0x4,%ah
   11142:	48 0f 45 fa          	cmovne %rdx,%rdi
   11146:	48 89 fa             	mov    %rdi,%rdx
   11149:	80 ce 03             	or     $0x3,%dh
   1114c:	a9 00 00 01 00       	test   $0x10000,%eax
   11151:	48 0f 45 fa          	cmovne %rdx,%rdi
   11155:	48 89 fa             	mov    %rdi,%rdx
   11158:	80 ce 04             	or     $0x4,%dh
   1115b:	f6 c4 40             	test   $0x40,%ah
   1115e:	48 0f 45 fa          	cmovne %rdx,%rdi
   11162:	48 89 fa             	mov    %rdi,%rdx
   11165:	80 ce 08             	or     $0x8,%dh
   11168:	f6 c4 20             	test   $0x20,%ah
   1116b:	48 0f 45 fa          	cmovne %rdx,%rdi
   1116f:	48 89 fa             	mov    %rdi,%rdx
   11172:	80 ce 20             	or     $0x20,%dh
   11175:	a9 00 00 02 00       	test   $0x20000,%eax
   1117a:	48 0f 45 fa          	cmovne %rdx,%rdi
   1117e:	48 89 fa             	mov    %rdi,%rdx
   11181:	80 ce 40             	or     $0x40,%dh
   11184:	f6 c4 80             	test   $0x80,%ah
   11187:	48 0f 45 fa          	cmovne %rdx,%rdi
   1118b:	48 89 fa             	mov    %rdi,%rdx
   1118e:	80 ce 80             	or     $0x80,%dh
   11191:	a9 00 00 80 00       	test   $0x800000,%eax
   11196:	48 0f 45 fa          	cmovne %rdx,%rdi
   1119a:	48 89 fa             	mov    %rdi,%rdx
   1119d:	48 81 ca 00 00 01 00 	or     $0x10000,%rdx
   111a4:	a9 00 00 00 10       	test   $0x10000000,%eax
   111a9:	48 0f 45 fa          	cmovne %rdx,%rdi
   111ad:	48 89 fa             	mov    %rdi,%rdx
   111b0:	48 81 ca 00 00 02 00 	or     $0x20000,%rdx
   111b7:	a9 00 00 00 20       	test   $0x20000000,%eax
   111bc:	48 0f 45 fa          	cmovne %rdx,%rdi
   111c0:	48 89 fa             	mov    %rdi,%rdx
   111c3:	48 81 ca 00 00 08 00 	or     $0x80000,%rdx
   111ca:	48 85 c8             	test   %rcx,%rax
   111cd:	48 0f 45 fa          	cmovne %rdx,%rdi
   111d1:	a9 00 00 00 08       	test   $0x8000000,%eax
   111d6:	74 0d                	je     111e5 <init_ipp_cpuid+0xf5>
   111d8:	48 ba 00 00 10 00 02 	movabs $0x200100000,%rdx
   111df:	00 00 00 
   111e2:	48 09 d7             	or     %rdx,%rdi
   111e5:	48 b9 00 00 00 00 02 	movabs $0x200000000,%rcx
   111ec:	00 00 00 
   111ef:	48 89 fa             	mov    %rdi,%rdx
   111f2:	48 81 ca 00 00 80 00 	or     $0x800000,%rdx
   111f9:	48 85 c8             	test   %rcx,%rax
   111fc:	48 b9 00 00 00 00 01 	movabs $0x100000000,%rcx
   11203:	00 00 00 
   11206:	48 0f 45 fa          	cmovne %rdx,%rdi
   1120a:	48 89 fa             	mov    %rdi,%rdx
   1120d:	48 81 ca 00 00 40 00 	or     $0x400000,%rdx
   11214:	48 85 c8             	test   %rcx,%rax
   11217:	48 b9 00 00 00 00 04 	movabs $0x400000000,%rcx
   1121e:	00 00 00 
   11221:	48 0f 45 fa          	cmovne %rdx,%rdi
   11225:	48 89 fa             	mov    %rdi,%rdx
   11228:	48 81 ca 00 00 20 00 	or     $0x200000,%rdx
   1122f:	48 85 c8             	test   %rcx,%rax
   11232:	48 b9 00 00 00 00 20 	movabs $0x2000000000,%rcx
   11239:	00 00 00 
   1123c:	48 0f 45 fa          	cmovne %rdx,%rdi
   11240:	48 89 fa             	mov    %rdi,%rdx
   11243:	48 81 ca 00 00 00 02 	or     $0x2000000,%rdx
   1124a:	a9 00 00 00 01       	test   $0x1000000,%eax
   1124f:	48 0f 45 fa          	cmovne %rdx,%rdi
   11253:	48 89 fa             	mov    %rdi,%rdx
   11256:	48 81 ca 00 00 00 01 	or     $0x1000000,%rdx
   1125d:	48 85 c8             	test   %rcx,%rax
   11260:	48 b9 00 00 00 00 40 	movabs $0x4000000000,%rcx
   11267:	00 00 00 
   1126a:	48 0f 45 fa          	cmovne %rdx,%rdi
   1126e:	48 89 fa             	mov    %rdi,%rdx
   11271:	48 81 ca 00 00 00 04 	or     $0x4000000,%rdx
   11278:	48 85 c8             	test   %rcx,%rax
   1127b:	48 b9 00 00 00 00 80 	movabs $0x8000000000,%rcx
   11282:	00 00 00 
   11285:	48 0f 45 fa          	cmovne %rdx,%rdi
   11289:	48 89 fa             	mov    %rdi,%rdx
   1128c:	48 81 ca 00 00 00 08 	or     $0x8000000,%rdx
   11293:	48 85 c8             	test   %rcx,%rax
   11296:	48 b9 00 00 00 00 00 	movabs $0x20000000000,%rcx
   1129d:	02 00 00 
   112a0:	48 0f 45 fa          	cmovne %rdx,%rdi
   112a4:	48 89 fa             	mov    %rdi,%rdx
   112a7:	48 81 ca 00 00 00 40 	or     $0x40000000,%rdx
   112ae:	48 85 c8             	test   %rcx,%rax
   112b1:	48 b9 00 00 00 00 00 	movabs $0x10000000000,%rcx
   112b8:	01 00 00 
   112bb:	48 0f 45 fa          	cmovne %rdx,%rdi
   112bf:	48 89 fa             	mov    %rdi,%rdx
   112c2:	48 81 ca 00 00 00 20 	or     $0x20000000,%rdx
   112c9:	48 85 c8             	test   %rcx,%rax
   112cc:	48 0f 45 fa          	cmovne %rdx,%rdi
   112d0:	48 0f ba e0 2e       	bt     $0x2e,%rax
   112d5:	73 05                	jae    112dc <init_ipp_cpuid+0x1ec>
   112d7:	48 0f ba ef 23       	bts    $0x23,%rdi
   112dc:	a9 00 00 00 40       	test   $0x40000000,%eax
   112e1:	74 05                	je     112e8 <init_ipp_cpuid+0x1f8>
   112e3:	48 0f ba ef 20       	bts    $0x20,%rdi
   112e8:	48 0f ba e0 2d       	bt     $0x2d,%rax
   112ed:	73 05                	jae    112f4 <init_ipp_cpuid+0x204>
   112ef:	48 0f ba ef 22       	bts    $0x22,%rdi
   112f4:	48 0f ba e0 2c       	bt     $0x2c,%rax
   112f9:	73 05                	jae    11300 <init_ipp_cpuid+0x210>
   112fb:	48 0f ba ef 25       	bts    $0x25,%rdi
   11300:	48 0f ba e0 2f       	bt     $0x2f,%rax
   11305:	73 05                	jae    1130c <init_ipp_cpuid+0x21c>
   11307:	48 0f ba ef 24       	bts    $0x24,%rdi
   1130c:	48 0f ba ef 3f       	bts    $0x3f,%rdi
   11311:	e8 02 fd fe ff       	call   1018 <ippcpSetCpuFeatures@plt>
   11316:	31 d2                	xor    %edx,%edx
   11318:	85 c0                	test   %eax,%eax
   1131a:	0f 95 c2             	setne  %dl
   1131d:	48 83 c4 08          	add    $0x8,%rsp
   11321:	01 d2                	add    %edx,%edx
   11323:	89 d0                	mov    %edx,%eax
   11325:	c3                   	ret    
   11326:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1132d:	00 00 00 
   11330:	31 d2                	xor    %edx,%edx
   11332:	89 d0                	mov    %edx,%eax
   11334:	c3                   	ret    
   11335:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1133c:	00 00 00 
   1133f:	90                   	nop

0000000000011340 <sgx_create_report>:
   11340:	f3 0f 1e fa          	endbr64 
   11344:	55                   	push   %rbp
   11345:	48 89 e5             	mov    %rsp,%rbp
   11348:	41 57                	push   %r15
   1134a:	49 89 f7             	mov    %rsi,%r15
   1134d:	31 f6                	xor    %esi,%esi
   1134f:	41 56                	push   %r14
   11351:	41 55                	push   %r13
   11353:	49 89 fd             	mov    %rdi,%r13
   11356:	41 54                	push   %r12
   11358:	53                   	push   %rbx
   11359:	48 89 d3             	mov    %rdx,%rbx
   1135c:	ba 40 00 00 00       	mov    $0x40,%edx
   11361:	48 81 e4 00 fe ff ff 	and    $0xfffffffffffffe00,%rsp
   11368:	48 81 ec 00 08 00 00 	sub    $0x800,%rsp
   1136f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   11376:	00 00 
   11378:	48 89 84 24 f8 07 00 	mov    %rax,0x7f8(%rsp)
   1137f:	00 
   11380:	31 c0                	xor    %eax,%eax
   11382:	48 8d 84 24 80 01 00 	lea    0x180(%rsp),%rax
   11389:	00 
   1138a:	4c 8d b4 24 00 04 00 	lea    0x400(%rsp),%r14
   11391:	00 
   11392:	48 89 c7             	mov    %rax,%rdi
   11395:	48 89 84 24 78 01 00 	mov    %rax,0x178(%rsp)
   1139c:	00 
   1139d:	4c 8d a4 24 00 02 00 	lea    0x200(%rsp),%r12
   113a4:	00 
   113a5:	e8 66 fc ff ff       	call   11010 <__memset>
   113aa:	31 f6                	xor    %esi,%esi
   113ac:	ba 00 02 00 00       	mov    $0x200,%edx
   113b1:	4c 89 f7             	mov    %r14,%rdi
   113b4:	e8 57 fc ff ff       	call   11010 <__memset>
   113b9:	31 f6                	xor    %esi,%esi
   113bb:	ba b0 01 00 00       	mov    $0x1b0,%edx
   113c0:	4c 89 e7             	mov    %r12,%rdi
   113c3:	e8 48 fc ff ff       	call   11010 <__memset>
   113c8:	4d 85 ed             	test   %r13,%r13
   113cb:	74 23                	je     113f0 <sgx_create_report+0xb0>
   113cd:	be 00 02 00 00       	mov    $0x200,%esi
   113d2:	4c 89 ef             	mov    %r13,%rdi
   113d5:	e8 26 48 ff ff       	call   5c00 <sgx_is_within_enclave>
   113da:	85 c0                	test   %eax,%eax
   113dc:	0f 84 be 00 00 00    	je     114a0 <sgx_create_report+0x160>
   113e2:	b9 40 00 00 00       	mov    $0x40,%ecx
   113e7:	4c 89 f7             	mov    %r14,%rdi
   113ea:	4c 89 ee             	mov    %r13,%rsi
   113ed:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
   113f0:	4d 85 ff             	test   %r15,%r15
   113f3:	74 4c                	je     11441 <sgx_create_report+0x101>
   113f5:	be 40 00 00 00       	mov    $0x40,%esi
   113fa:	4c 89 ff             	mov    %r15,%rdi
   113fd:	e8 fe 47 ff ff       	call   5c00 <sgx_is_within_enclave>
   11402:	85 c0                	test   %eax,%eax
   11404:	0f 84 96 00 00 00    	je     114a0 <sgx_create_report+0x160>
   1140a:	f3 41 0f 6f 0f       	movdqu (%r15),%xmm1
   1140f:	f3 41 0f 6f 57 10    	movdqu 0x10(%r15),%xmm2
   11415:	f3 41 0f 6f 5f 20    	movdqu 0x20(%r15),%xmm3
   1141b:	f3 41 0f 6f 67 30    	movdqu 0x30(%r15),%xmm4
   11421:	0f 29 8c 24 80 01 00 	movaps %xmm1,0x180(%rsp)
   11428:	00 
   11429:	0f 29 94 24 90 01 00 	movaps %xmm2,0x190(%rsp)
   11430:	00 
   11431:	0f 29 9c 24 a0 01 00 	movaps %xmm3,0x1a0(%rsp)
   11438:	00 
   11439:	0f 29 a4 24 b0 01 00 	movaps %xmm4,0x1b0(%rsp)
   11440:	00 
   11441:	48 85 db             	test   %rbx,%rbx
   11444:	74 5a                	je     114a0 <sgx_create_report+0x160>
   11446:	be b0 01 00 00       	mov    $0x1b0,%esi
   1144b:	48 89 df             	mov    %rbx,%rdi
   1144e:	e8 ad 47 ff ff       	call   5c00 <sgx_is_within_enclave>
   11453:	85 c0                	test   %eax,%eax
   11455:	74 49                	je     114a0 <sgx_create_report+0x160>
   11457:	48 8b b4 24 78 01 00 	mov    0x178(%rsp),%rsi
   1145e:	00 
   1145f:	4c 89 e2             	mov    %r12,%rdx
   11462:	4c 89 f7             	mov    %r14,%rdi
   11465:	e8 16 10 00 00       	call   12480 <do_ereport>
   1146a:	89 c2                	mov    %eax,%edx
   1146c:	b8 01 00 00 00       	mov    $0x1,%eax
   11471:	85 d2                	test   %edx,%edx
   11473:	75 30                	jne    114a5 <sgx_create_report+0x165>
   11475:	31 c0                	xor    %eax,%eax
   11477:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1147e:	00 00 
   11480:	66 41 0f 6f 04 04    	movdqa (%r12,%rax,1),%xmm0
   11486:	0f 11 04 03          	movups %xmm0,(%rbx,%rax,1)
   1148a:	48 83 c0 10          	add    $0x10,%rax
   1148e:	48 3d b0 01 00 00    	cmp    $0x1b0,%rax
   11494:	75 ea                	jne    11480 <sgx_create_report+0x140>
   11496:	31 c0                	xor    %eax,%eax
   11498:	eb 0b                	jmp    114a5 <sgx_create_report+0x165>
   1149a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   114a0:	b8 02 00 00 00       	mov    $0x2,%eax
   114a5:	48 8b 94 24 f8 07 00 	mov    0x7f8(%rsp),%rdx
   114ac:	00 
   114ad:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   114b4:	00 00 
   114b6:	75 0f                	jne    114c7 <sgx_create_report+0x187>
   114b8:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
   114bc:	5b                   	pop    %rbx
   114bd:	41 5c                	pop    %r12
   114bf:	41 5d                	pop    %r13
   114c1:	41 5e                	pop    %r14
   114c3:	41 5f                	pop    %r15
   114c5:	5d                   	pop    %rbp
   114c6:	c3                   	ret    
   114c7:	e8 34 f6 ff ff       	call   10b00 <__stack_chk_fail>
   114cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000114d0 <sgx_self_report>:
   114d0:	f3 0f 1e fa          	endbr64 
   114d4:	55                   	push   %rbp
   114d5:	53                   	push   %rbx
   114d6:	48 8d 1d 83 99 01 00 	lea    0x19983(%rip),%rbx        # 2ae60 <_ZZ15sgx_self_reportE7_report>
   114dd:	48 83 ec 08          	sub    $0x8,%rsp
   114e1:	48 83 3d a7 99 01 00 	cmpq   $0x0,0x199a7(%rip)        # 2ae90 <_ZZ15sgx_self_reportE7_report+0x30>
   114e8:	00 
   114e9:	74 0d                	je     114f8 <sgx_self_report+0x28>
   114eb:	48 83 c4 08          	add    $0x8,%rsp
   114ef:	48 89 d8             	mov    %rbx,%rax
   114f2:	5b                   	pop    %rbx
   114f3:	5d                   	pop    %rbp
   114f4:	c3                   	ret    
   114f5:	0f 1f 00             	nopl   (%rax)
   114f8:	48 8d 2d 41 99 01 00 	lea    0x19941(%rip),%rbp        # 2ae40 <_ZZ15sgx_self_reportE11report_lock>
   114ff:	48 89 ef             	mov    %rbp,%rdi
   11502:	e8 09 b3 ff ff       	call   c810 <sgx_spin_lock>
   11507:	48 83 3d 81 99 01 00 	cmpq   $0x0,0x19981(%rip)        # 2ae90 <_ZZ15sgx_self_reportE7_report+0x30>
   1150e:	00 
   1150f:	74 17                	je     11528 <sgx_self_report+0x58>
   11511:	48 89 ef             	mov    %rbp,%rdi
   11514:	e8 87 b3 ff ff       	call   c8a0 <sgx_spin_unlock>
   11519:	48 83 c4 08          	add    $0x8,%rsp
   1151d:	48 89 d8             	mov    %rbx,%rax
   11520:	5b                   	pop    %rbx
   11521:	5d                   	pop    %rbp
   11522:	c3                   	ret    
   11523:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   11528:	48 89 da             	mov    %rbx,%rdx
   1152b:	31 f6                	xor    %esi,%esi
   1152d:	31 ff                	xor    %edi,%edi
   1152f:	e8 0c fe ff ff       	call   11340 <sgx_create_report>
   11534:	eb db                	jmp    11511 <sgx_self_report+0x41>

Disassembly of section .nipx:

0000000000011600 <init_enclave>:
   11600:	f3 0f 1e fa          	endbr64 
   11604:	41 54                	push   %r12
   11606:	55                   	push   %rbp
   11607:	53                   	push   %rbx
   11608:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
   1160f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   11616:	00 00 
   11618:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
   1161f:	00 
   11620:	31 c0                	xor    %eax,%eax
   11622:	48 85 ff             	test   %rdi,%rdi
   11625:	0f 84 f5 02 00 00    	je     11920 <init_enclave+0x320>
   1162b:	48 89 f3             	mov    %rsi,%rbx
   1162e:	48 85 f6             	test   %rsi,%rsi
   11631:	0f 84 e9 02 00 00    	je     11920 <init_enclave+0x320>
   11637:	48 83 3d 91 69 00 00 	cmpq   $0x0,0x6991(%rip)        # 17fd0 <_Z9pcl_entryPvS_>
   1163e:	00 
   1163f:	48 89 fd             	mov    %rdi,%rbp
   11642:	74 10                	je     11654 <init_enclave+0x54>
   11644:	0f ae e8             	lfence 
   11647:	e8 c4 f9 fe ff       	call   1010 <_Z9pcl_entryPvS_@plt>
   1164c:	85 c0                	test   %eax,%eax
   1164e:	0f 85 cc 02 00 00    	jne    11920 <init_enclave+0x320>
   11654:	48 89 ef             	mov    %rbp,%rdi
   11657:	e8 14 6e ff ff       	call   8470 <relocate_enclave>
   1165c:	89 c5                	mov    %eax,%ebp
   1165e:	85 c0                	test   %eax,%eax
   11660:	0f 85 ba 02 00 00    	jne    11920 <init_enclave+0x320>
   11666:	e8 8d 0a 00 00       	call   120f8 <get_enclave_base>
   1166b:	48 8d 15 0e 1b 00 00 	lea    0x1b0e(%rip),%rdx        # 13180 <g_global_data>
   11672:	48 89 05 a7 67 00 00 	mov    %rax,0x67a7(%rip)        # 17e20 <g_enclave_base>
   11679:	48 8b 8a d0 06 00 00 	mov    0x6d0(%rdx),%rcx
   11680:	48 89 0d 91 67 00 00 	mov    %rcx,0x6791(%rip)        # 17e18 <g_enclave_size>
   11687:	48 8b 8a c0 06 00 00 	mov    0x6c0(%rdx),%rcx
   1168e:	48 85 c9             	test   %rcx,%rcx
   11691:	74 1e                	je     116b1 <init_enclave+0xb1>
   11693:	48 8b 8a c0 06 00 00 	mov    0x6c0(%rdx),%rcx
   1169a:	48 39 c8             	cmp    %rcx,%rax
   1169d:	0f 85 84 02 00 00    	jne    11927 <init_enclave+0x327>
   116a3:	48 8b 82 c8 06 00 00 	mov    0x6c8(%rdx),%rax
   116aa:	48 89 05 6f 67 00 00 	mov    %rax,0x676f(%rip)        # 17e20 <g_enclave_base>
   116b1:	be b0 00 00 00       	mov    $0xb0,%esi
   116b6:	48 89 df             	mov    %rbx,%rdi
   116b9:	e8 a2 45 ff ff       	call   5c60 <sgx_is_outside_enclave>
   116be:	85 c0                	test   %eax,%eax
   116c0:	0f 84 5a 02 00 00    	je     11920 <init_enclave+0x320>
   116c6:	0f ae e8             	lfence 
   116c9:	f3 0f 6f 03          	movdqu (%rbx),%xmm0
   116cd:	f3 0f 6f 4b 10       	movdqu 0x10(%rbx),%xmm1
   116d2:	f3 0f 6f 53 20       	movdqu 0x20(%rbx),%xmm2
   116d7:	f3 0f 6f 5b 30       	movdqu 0x30(%rbx),%xmm3
   116dc:	f3 0f 6f 63 40       	movdqu 0x40(%rbx),%xmm4
   116e1:	0f 29 04 24          	movaps %xmm0,(%rsp)
   116e5:	f3 0f 6f 6b 50       	movdqu 0x50(%rbx),%xmm5
   116ea:	f3 0f 6f 73 60       	movdqu 0x60(%rbx),%xmm6
   116ef:	0f 29 4c 24 10       	movaps %xmm1,0x10(%rsp)
   116f4:	f3 0f 6f 7b 70       	movdqu 0x70(%rbx),%xmm7
   116f9:	f3 0f 6f 83 80 00 00 	movdqu 0x80(%rbx),%xmm0
   11700:	00 
   11701:	0f 29 54 24 20       	movaps %xmm2,0x20(%rsp)
   11706:	f3 0f 6f 8b 90 00 00 	movdqu 0x90(%rbx),%xmm1
   1170d:	00 
   1170e:	f3 0f 6f 93 a0 00 00 	movdqu 0xa0(%rbx),%xmm2
   11715:	00 
   11716:	0f 29 5c 24 30       	movaps %xmm3,0x30(%rsp)
   1171b:	0f 29 64 24 40       	movaps %xmm4,0x40(%rsp)
   11720:	0f 29 6c 24 50       	movaps %xmm5,0x50(%rsp)
   11725:	0f 29 74 24 60       	movaps %xmm6,0x60(%rsp)
   1172a:	0f 29 7c 24 70       	movaps %xmm7,0x70(%rsp)
   1172f:	0f 29 84 24 80 00 00 	movaps %xmm0,0x80(%rsp)
   11736:	00 
   11737:	0f 29 8c 24 90 00 00 	movaps %xmm1,0x90(%rsp)
   1173e:	00 
   1173f:	0f 29 94 24 a0 00 00 	movaps %xmm2,0xa0(%rsp)
   11746:	00 
   11747:	f6 44 24 13 40       	testb  $0x40,0x13(%rsp)
   1174c:	0f 85 8e 01 00 00    	jne    118e0 <init_enclave+0x2e0>
   11752:	b9 14 00 00 00       	mov    $0x14,%ecx
   11757:	b8 9c 00 00 00       	mov    $0x9c,%eax
   1175c:	48 8d 14 04          	lea    (%rsp,%rax,1),%rdx
   11760:	48 8d 41 ff          	lea    -0x1(%rcx),%rax
   11764:	83 e0 01             	and    $0x1,%eax
   11767:	c6 02 00             	movb   $0x0,(%rdx)
   1176a:	48 89 c6             	mov    %rax,%rsi
   1176d:	b8 01 00 00 00       	mov    $0x1,%eax
   11772:	48 39 c8             	cmp    %rcx,%rax
   11775:	73 2b                	jae    117a2 <init_enclave+0x1a2>
   11777:	48 85 f6             	test   %rsi,%rsi
   1177a:	74 14                	je     11790 <init_enclave+0x190>
   1177c:	b8 02 00 00 00       	mov    $0x2,%eax
   11781:	c6 42 01 00          	movb   $0x0,0x1(%rdx)
   11785:	48 39 c8             	cmp    %rcx,%rax
   11788:	73 18                	jae    117a2 <init_enclave+0x1a2>
   1178a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   11790:	c6 04 02 00          	movb   $0x0,(%rdx,%rax,1)
   11794:	48 83 c0 02          	add    $0x2,%rax
   11798:	c6 44 10 ff 00       	movb   $0x0,-0x1(%rax,%rdx,1)
   1179d:	48 39 c8             	cmp    %rcx,%rax
   117a0:	72 ee                	jb     11790 <init_enclave+0x190>
   117a2:	8b 84 24 ac 00 00 00 	mov    0xac(%rsp),%eax
   117a9:	48 8d 5c 24 0c       	lea    0xc(%rsp),%rbx
   117ae:	89 05 5c 66 00 00    	mov    %eax,0x665c(%rip)        # 17e10 <g_cpu_core_num>
   117b4:	8b 44 24 08          	mov    0x8(%rsp),%eax
   117b8:	89 05 6a 66 00 00    	mov    %eax,0x666a(%rip)        # 17e28 <g_sdk_version>
   117be:	85 c0                	test   %eax,%eax
   117c0:	74 1a                	je     117dc <init_enclave+0x1dc>
   117c2:	83 f8 04             	cmp    $0x4,%eax
   117c5:	0f 8e 55 01 00 00    	jle    11920 <init_enclave+0x320>
   117cb:	48 8d 5c 24 0c       	lea    0xc(%rsp),%rbx
   117d0:	31 f6                	xor    %esi,%esi
   117d2:	48 89 df             	mov    %rbx,%rdi
   117d5:	e8 c6 5e ff ff       	call   76a0 <feature_supported>
   117da:	89 c5                	mov    %eax,%ebp
   117dc:	48 89 df             	mov    %rbx,%rdi
   117df:	be 01 00 00 00       	mov    $0x1,%esi
   117e4:	89 2d 42 66 00 00    	mov    %ebp,0x6642(%rip)        # 17e2c <EDMM_supported>
   117ea:	e8 b1 5e ff ff       	call   76a0 <feature_supported>
   117ef:	44 8b 25 36 66 00 00 	mov    0x6636(%rip),%r12d        # 17e2c <EDMM_supported>
   117f6:	89 05 18 66 00 00    	mov    %eax,0x6618(%rip)        # 17e14 <g_aexnotify_supported>
   117fc:	e8 af 5c ff ff       	call   74b0 <get_heap_min_size>
   11801:	48 89 c5             	mov    %rax,%rbp
   11804:	e8 37 5c ff ff       	call   7440 <get_heap_size>
   11809:	48 89 c3             	mov    %rax,%rbx
   1180c:	e8 0f 5c ff ff       	call   7420 <get_heap_base>
   11811:	44 89 e1             	mov    %r12d,%ecx
   11814:	48 89 ea             	mov    %rbp,%rdx
   11817:	48 89 de             	mov    %rbx,%rsi
   1181a:	48 89 c7             	mov    %rax,%rdi
   1181d:	e8 5e ae ff ff       	call   c680 <heap_init>
   11822:	85 c0                	test   %eax,%eax
   11824:	0f 85 f6 00 00 00    	jne    11920 <init_enclave+0x320>
   1182a:	e8 c1 69 ff ff       	call   81f0 <get_xfeature_state>
   1182f:	48 8b 3c 24          	mov    (%rsp),%rdi
   11833:	48 89 c2             	mov    %rax,%rdx
   11836:	48 81 e7 ff e7 ff e1 	and    $0xffffffffe1ffe7ff,%rdi
   1183d:	f6 44 24 13 40       	testb  $0x40,0x13(%rsp)
   11842:	74 08                	je     1184c <init_enclave+0x24c>
   11844:	48 8b bc 24 a4 00 00 	mov    0xa4(%rsp),%rdi
   1184b:	00 
   1184c:	83 3d d5 65 00 00 01 	cmpl   $0x1,0x65d5(%rip)        # 17e28 <g_sdk_version>
   11853:	7f 0f                	jg     11864 <init_enclave+0x264>
   11855:	48 83 bc 24 9c 00 00 	cmpq   $0x0,0x9c(%rsp)
   1185c:	00 00 
   1185e:	0f 84 a4 00 00 00    	je     11908 <init_enclave+0x308>
   11864:	48 8d 74 24 14       	lea    0x14(%rsp),%rsi
   11869:	e8 72 42 ff ff       	call   5ae0 <init_optimized_libs>
   1186e:	85 c0                	test   %eax,%eax
   11870:	0f 85 aa 00 00 00    	jne    11920 <init_enclave+0x320>
   11876:	e8 35 5d ff ff       	call   75b0 <get_rsrv_size>
   1187b:	48 85 c0             	test   %rax,%rax
   1187e:	74 27                	je     118a7 <init_enclave+0x2a7>
   11880:	e8 9b 5d ff ff       	call   7620 <get_rsrv_min_size>
   11885:	48 89 c5             	mov    %rax,%rbp
   11888:	e8 23 5d ff ff       	call   75b0 <get_rsrv_size>
   1188d:	48 89 c3             	mov    %rax,%rbx
   11890:	e8 7b 5c ff ff       	call   7510 <get_rsrv_base>
   11895:	48 89 ea             	mov    %rbp,%rdx
   11898:	48 89 de             	mov    %rbx,%rsi
   1189b:	48 89 c7             	mov    %rax,%rdi
   1189e:	e8 cd f6 ff ff       	call   10f70 <rsrv_mem_init>
   118a3:	85 c0                	test   %eax,%eax
   118a5:	75 79                	jne    11920 <init_enclave+0x320>
   118a7:	be 08 00 00 00       	mov    $0x8,%esi
   118ac:	48 8d 3d 55 65 00 00 	lea    0x6555(%rip),%rdi        # 17e08 <__intel_security_cookie>
   118b3:	e8 48 45 ff ff       	call   5e00 <sgx_read_rand>
   118b8:	f7 d8                	neg    %eax
   118ba:	19 c0                	sbb    %eax,%eax
   118bc:	48 8b 94 24 b8 00 00 	mov    0xb8(%rsp),%rdx
   118c3:	00 
   118c4:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   118cb:	00 00 
   118cd:	75 5d                	jne    1192c <init_enclave+0x32c>
   118cf:	48 81 c4 c0 00 00 00 	add    $0xc0,%rsp
   118d6:	5b                   	pop    %rbx
   118d7:	5d                   	pop    %rbp
   118d8:	41 5c                	pop    %r12
   118da:	c3                   	ret    
   118db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   118e0:	48 8b 84 24 9c 00 00 	mov    0x9c(%rsp),%rax
   118e7:	00 
   118e8:	b9 b0 00 00 00       	mov    $0xb0,%ecx
   118ed:	48 29 c1             	sub    %rax,%rcx
   118f0:	48 3d af 00 00 00    	cmp    $0xaf,%rax
   118f6:	0f 86 60 fe ff ff    	jbe    1175c <init_enclave+0x15c>
   118fc:	e9 a1 fe ff ff       	jmp    117a2 <init_enclave+0x1a2>
   11901:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   11908:	31 f6                	xor    %esi,%esi
   1190a:	e8 d1 41 ff ff       	call   5ae0 <init_optimized_libs>
   1190f:	85 c0                	test   %eax,%eax
   11911:	0f 84 5f ff ff ff    	je     11876 <init_enclave+0x276>
   11917:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1191e:	00 00 
   11920:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   11925:	eb 95                	jmp    118bc <init_enclave+0x2bc>
   11927:	e8 0b 0c 00 00       	call   12537 <abort>
   1192c:	e8 cf f1 ff ff       	call   10b00 <__stack_chk_fail>
   11931:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   11938:	00 00 00 00 
   1193c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000011940 <do_init_enclave>:
   11940:	f3 0f 1e fa          	endbr64 
   11944:	41 54                	push   %r12
   11946:	49 89 f4             	mov    %rsi,%r12
   11949:	55                   	push   %rbp
   1194a:	48 89 fd             	mov    %rdi,%rbp
   1194d:	53                   	push   %rbx
   1194e:	e8 a5 07 00 00       	call   120f8 <get_enclave_base>
   11953:	48 89 c3             	mov    %rax,%rbx
   11956:	e8 c8 07 00 00       	call   12123 <lock_enclave>
   1195b:	85 c0                	test   %eax,%eax
   1195d:	74 11                	je     11970 <do_init_enclave+0x30>
   1195f:	bd 01 00 00 00       	mov    $0x1,%ebp
   11964:	89 e8                	mov    %ebp,%eax
   11966:	5b                   	pop    %rbx
   11967:	5d                   	pop    %rbp
   11968:	41 5c                	pop    %r12
   1196a:	c3                   	ret    
   1196b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   11970:	48 89 ee             	mov    %rbp,%rsi
   11973:	48 89 df             	mov    %rbx,%rdi
   11976:	e8 85 fc ff ff       	call   11600 <init_enclave>
   1197b:	85 c0                	test   %eax,%eax
   1197d:	75 e0                	jne    1195f <do_init_enclave+0x1f>
   1197f:	be 01 00 00 00       	mov    $0x1,%esi
   11984:	4c 89 e7             	mov    %r12,%rdi
   11987:	e8 a4 52 ff ff       	call   6c30 <do_init_thread>
   1198c:	89 c5                	mov    %eax,%ebp
   1198e:	85 c0                	test   %eax,%eax
   11990:	75 cd                	jne    1195f <do_init_enclave+0x1f>
   11992:	8b 15 94 64 00 00    	mov    0x6494(%rip),%edx        # 17e2c <EDMM_supported>
   11998:	85 d2                	test   %edx,%edx
   1199a:	0f 84 f0 00 00 00    	je     11a90 <do_init_enclave+0x150>
   119a0:	e8 0b 5b ff ff       	call   74b0 <get_heap_min_size>
   119a5:	4c 8d 25 d4 17 00 00 	lea    0x17d4(%rip),%r12        # 13180 <g_global_data>
   119ac:	31 d2                	xor    %edx,%edx
   119ae:	48 89 c6             	mov    %rax,%rsi
   119b1:	48 89 c1             	mov    %rax,%rcx
   119b4:	49 8b 7c 24 10       	mov    0x10(%r12),%rdi
   119b9:	48 01 df             	add    %rbx,%rdi
   119bc:	e8 ff ef ff ff       	call   109c0 <memset_s>
   119c1:	48 8d 05 98 64 00 00 	lea    0x6498(%rip),%rax        # 17e60 <rsrv_mem_min_size>
   119c8:	49 8b 7c 24 20       	mov    0x20(%r12),%rdi
   119cd:	31 d2                	xor    %edx,%edx
   119cf:	48 8b 30             	mov    (%rax),%rsi
   119d2:	48 01 df             	add    %rbx,%rdi
   119d5:	48 89 f1             	mov    %rsi,%rcx
   119d8:	e8 e3 ef ff ff       	call   109c0 <memset_s>
   119dd:	bf 02 00 00 00       	mov    $0x2,%edi
   119e2:	e8 2e 07 00 00       	call   12115 <set_enclave_state>
   119e7:	8b 05 3f 64 00 00    	mov    0x643f(%rip),%eax        # 17e2c <EDMM_supported>
   119ed:	85 c0                	test   %eax,%eax
   119ef:	0f 84 6f ff ff ff    	je     11964 <do_init_enclave+0x24>
   119f5:	41 8b 84 24 58 01 00 	mov    0x158(%r12),%eax
   119fc:	00 
   119fd:	49 8d ac 24 60 01 00 	lea    0x160(%r12),%rbp
   11a04:	00 
   11a05:	48 c1 e0 05          	shl    $0x5,%rax
   11a09:	48 01 e8             	add    %rbp,%rax
   11a0c:	48 39 c5             	cmp    %rax,%rbp
   11a0f:	72 10                	jb     11a21 <do_init_enclave+0xe1>
   11a11:	eb 15                	jmp    11a28 <do_init_enclave+0xe8>
   11a13:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   11a18:	48 83 c5 20          	add    $0x20,%rbp
   11a1c:	48 39 c5             	cmp    %rax,%rbp
   11a1f:	73 07                	jae    11a28 <do_init_enclave+0xe8>
   11a21:	66 83 7d 00 17       	cmpw   $0x17,0x0(%rbp)
   11a26:	75 f0                	jne    11a18 <do_init_enclave+0xd8>
   11a28:	48 39 e8             	cmp    %rbp,%rax
   11a2b:	0f 84 9f 00 00 00    	je     11ad0 <do_init_enclave+0x190>
   11a31:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
   11a35:	8b 75 04             	mov    0x4(%rbp),%esi
   11a38:	48 01 df             	add    %rbx,%rdi
   11a3b:	48 c1 e6 0c          	shl    $0xc,%rsi
   11a3f:	48 01 fe             	add    %rdi,%rsi
   11a42:	0f 82 17 ff ff ff    	jb     1195f <do_init_enclave+0x1f>
   11a48:	e8 b3 ab ff ff       	call   c600 <sgx_mm_init>
   11a4d:	85 c0                	test   %eax,%eax
   11a4f:	0f 85 0a ff ff ff    	jne    1195f <do_init_enclave+0x1f>
   11a55:	49 8b bc 24 d8 06 00 	mov    0x6d8(%r12),%rdi
   11a5c:	00 
   11a5d:	e8 1e 9a ff ff       	call   b480 <emalloc_init_with_reserved_mem>
   11a62:	85 c0                	test   %eax,%eax
   11a64:	0f 85 f5 fe ff ff    	jne    1195f <do_init_enclave+0x1f>
   11a6a:	48 89 ea             	mov    %rbp,%rdx
   11a6d:	49 8d b4 24 60 01 00 	lea    0x160(%r12),%rsi
   11a74:	00 
   11a75:	48 89 df             	mov    %rbx,%rdi
   11a78:	31 ed                	xor    %ebp,%ebp
   11a7a:	e8 e1 3d ff ff       	call   5860 <init_rts_emas>
   11a7f:	85 c0                	test   %eax,%eax
   11a81:	40 0f 95 c5          	setne  %bpl
   11a85:	e9 da fe ff ff       	jmp    11964 <do_init_enclave+0x24>
   11a8a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   11a90:	4c 8d 25 e9 16 00 00 	lea    0x16e9(%rip),%r12        # 13180 <g_global_data>
   11a97:	31 d2                	xor    %edx,%edx
   11a99:	49 8b 4c 24 18       	mov    0x18(%r12),%rcx
   11a9e:	49 8b 74 24 18       	mov    0x18(%r12),%rsi
   11aa3:	49 8b 7c 24 10       	mov    0x10(%r12),%rdi
   11aa8:	48 01 df             	add    %rbx,%rdi
   11aab:	e8 10 ef ff ff       	call   109c0 <memset_s>
   11ab0:	49 8b 4c 24 28       	mov    0x28(%r12),%rcx
   11ab5:	49 8b 74 24 28       	mov    0x28(%r12),%rsi
   11aba:	31 d2                	xor    %edx,%edx
   11abc:	49 8b 7c 24 20       	mov    0x20(%r12),%rdi
   11ac1:	48 01 df             	add    %rbx,%rdi
   11ac4:	e8 f7 ee ff ff       	call   109c0 <memset_s>
   11ac9:	e9 0f ff ff ff       	jmp    119dd <do_init_enclave+0x9d>
   11ace:	66 90                	xchg   %ax,%ax
   11ad0:	31 f6                	xor    %esi,%esi
   11ad2:	31 ff                	xor    %edi,%edi
   11ad4:	e9 6f ff ff ff       	jmp    11a48 <do_init_enclave+0x108>
   11ad9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000011ae0 <sgx_is_enclave_crashed>:
   11ae0:	f3 0f 1e fa          	endbr64 
   11ae4:	48 83 ec 08          	sub    $0x8,%rsp
   11ae8:	e8 17 06 00 00       	call   12104 <get_enclave_state>
   11aed:	83 f8 03             	cmp    $0x3,%eax
   11af0:	0f 94 c0             	sete   %al
   11af3:	48 83 c4 08          	add    $0x8,%rsp
   11af7:	0f b6 c0             	movzbl %al,%eax
   11afa:	c3                   	ret    
   11afb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000011b00 <enter_enclave>:
   11b00:	f3 0f 1e fa          	endbr64 
   11b04:	41 55                	push   %r13
   11b06:	49 89 d5             	mov    %rdx,%r13
   11b09:	41 54                	push   %r12
   11b0b:	49 89 f4             	mov    %rsi,%r12
   11b0e:	55                   	push   %rbp
   11b0f:	89 cd                	mov    %ecx,%ebp
   11b11:	53                   	push   %rbx
   11b12:	89 fb                	mov    %edi,%ebx
   11b14:	48 83 ec 18          	sub    $0x18,%rsp
   11b18:	e8 c3 ff ff ff       	call   11ae0 <sgx_is_enclave_crashed>
   11b1d:	85 c0                	test   %eax,%eax
   11b1f:	75 67                	jne    11b88 <enter_enclave+0x88>
   11b21:	83 fb ff             	cmp    $0xffffffff,%ebx
   11b24:	75 2a                	jne    11b50 <enter_enclave+0x50>
   11b26:	85 ed                	test   %ebp,%ebp
   11b28:	75 34                	jne    11b5e <enter_enclave+0x5e>
   11b2a:	4c 89 ee             	mov    %r13,%rsi
   11b2d:	4c 89 e7             	mov    %r12,%rdi
   11b30:	e8 0b fe ff ff       	call   11940 <do_init_enclave>
   11b35:	89 c3                	mov    %eax,%ebx
   11b37:	89 d8                	mov    %ebx,%eax
   11b39:	83 fb 01             	cmp    $0x1,%ebx
   11b3c:	74 29                	je     11b67 <enter_enclave+0x67>
   11b3e:	48 83 c4 18          	add    $0x18,%rsp
   11b42:	5b                   	pop    %rbx
   11b43:	5d                   	pop    %rbp
   11b44:	41 5c                	pop    %r12
   11b46:	41 5d                	pop    %r13
   11b48:	c3                   	ret    
   11b49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   11b50:	e8 af 05 00 00       	call   12104 <get_enclave_state>
   11b55:	83 f8 02             	cmp    $0x2,%eax
   11b58:	75 0d                	jne    11b67 <enter_enclave+0x67>
   11b5a:	85 ed                	test   %ebp,%ebp
   11b5c:	74 42                	je     11ba0 <enter_enclave+0xa0>
   11b5e:	83 fd 01             	cmp    $0x1,%ebp
   11b61:	0f 84 e9 00 00 00    	je     11c50 <enter_enclave+0x150>
   11b67:	bf 03 00 00 00       	mov    $0x3,%edi
   11b6c:	e8 a4 05 00 00       	call   12115 <set_enclave_state>
   11b71:	b8 01 00 00 00       	mov    $0x1,%eax
   11b76:	48 83 c4 18          	add    $0x18,%rsp
   11b7a:	5b                   	pop    %rbx
   11b7b:	5d                   	pop    %rbp
   11b7c:	41 5c                	pop    %r12
   11b7e:	41 5d                	pop    %r13
   11b80:	c3                   	ret    
   11b81:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   11b88:	48 83 c4 18          	add    $0x18,%rsp
   11b8c:	b8 06 10 00 00       	mov    $0x1006,%eax
   11b91:	5b                   	pop    %rbx
   11b92:	5d                   	pop    %rbp
   11b93:	41 5c                	pop    %r12
   11b95:	41 5d                	pop    %r13
   11b97:	c3                   	ret    
   11b98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   11b9f:	00 
   11ba0:	85 db                	test   %ebx,%ebx
   11ba2:	79 2c                	jns    11bd0 <enter_enclave+0xd0>
   11ba4:	83 fb fa             	cmp    $0xfffffffa,%ebx
   11ba7:	74 27                	je     11bd0 <enter_enclave+0xd0>
   11ba9:	83 fb fe             	cmp    $0xfffffffe,%ebx
   11bac:	0f 84 ce 00 00 00    	je     11c80 <enter_enclave+0x180>
   11bb2:	83 fb fc             	cmp    $0xfffffffc,%ebx
   11bb5:	0f 84 d5 00 00 00    	je     11c90 <enter_enclave+0x190>
   11bbb:	83 fb fb             	cmp    $0xfffffffb,%ebx
   11bbe:	75 a7                	jne    11b67 <enter_enclave+0x67>
   11bc0:	4c 89 ef             	mov    %r13,%rdi
   11bc3:	e8 08 56 ff ff       	call   71d0 <do_uninit_enclave>
   11bc8:	89 c3                	mov    %eax,%ebx
   11bca:	e9 68 ff ff ff       	jmp    11b37 <enter_enclave+0x37>
   11bcf:	90                   	nop
   11bd0:	e8 6e 05 00 00       	call   12143 <get_thread_data>
   11bd5:	48 85 c0             	test   %rax,%rax
   11bd8:	0f 84 c2 00 00 00    	je     11ca0 <enter_enclave+0x1a0>
   11bde:	48 8b 48 08          	mov    0x8(%rax),%rcx
   11be2:	48 39 48 10          	cmp    %rcx,0x10(%rax)
   11be6:	75 40                	jne    11c28 <enter_enclave+0x128>
   11be8:	48 8d 05 91 15 00 00 	lea    0x1591(%rip),%rax        # 13180 <g_global_data>
   11bef:	48 8b 50 38          	mov    0x38(%rax),%rdx
   11bf3:	48 85 d2             	test   %rdx,%rdx
   11bf6:	74 30                	je     11c28 <enter_enclave+0x128>
   11bf8:	48 8b 68 50          	mov    0x50(%rax),%rbp
   11bfc:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   11c01:	be 08 00 00 00       	mov    $0x8,%esi
   11c06:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
   11c0d:	00 00 
   11c0f:	4c 01 ed             	add    %r13,%rbp
   11c12:	e8 e9 41 ff ff       	call   5e00 <sgx_read_rand>
   11c17:	85 c0                	test   %eax,%eax
   11c19:	0f 85 8d 00 00 00    	jne    11cac <enter_enclave+0x1ac>
   11c1f:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   11c24:	48 89 45 28          	mov    %rax,0x28(%rbp)
   11c28:	89 df                	mov    %ebx,%edi
   11c2a:	4c 89 ea             	mov    %r13,%rdx
   11c2d:	4c 89 e6             	mov    %r12,%rsi
   11c30:	e8 5b 52 ff ff       	call   6e90 <do_ecall>
   11c35:	89 c3                	mov    %eax,%ebx
   11c37:	89 d8                	mov    %ebx,%eax
   11c39:	83 fb 01             	cmp    $0x1,%ebx
   11c3c:	0f 85 fc fe ff ff    	jne    11b3e <enter_enclave+0x3e>
   11c42:	e9 20 ff ff ff       	jmp    11b67 <enter_enclave+0x67>
   11c47:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   11c4e:	00 00 
   11c50:	4c 89 ef             	mov    %r13,%rdi
   11c53:	e8 e8 61 ff ff       	call   7e40 <trts_handle_exception>
   11c58:	4c 89 ef             	mov    %r13,%rdi
   11c5b:	89 c3                	mov    %eax,%ebx
   11c5d:	e8 ce 42 ff ff       	call   5f30 <check_static_stack_canary>
   11c62:	89 c2                	mov    %eax,%edx
   11c64:	b8 09 10 00 00       	mov    $0x1009,%eax
   11c69:	85 d2                	test   %edx,%edx
   11c6b:	0f 85 05 ff ff ff    	jne    11b76 <enter_enclave+0x76>
   11c71:	e9 c1 fe ff ff       	jmp    11b37 <enter_enclave+0x37>
   11c76:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11c7d:	00 00 00 
   11c80:	4c 89 e7             	mov    %r12,%rdi
   11c83:	e8 98 56 ff ff       	call   7320 <do_oret>
   11c88:	89 c3                	mov    %eax,%ebx
   11c8a:	e9 a8 fe ff ff       	jmp    11b37 <enter_enclave+0x37>
   11c8f:	90                   	nop
   11c90:	4c 89 e7             	mov    %r12,%rdi
   11c93:	e8 58 54 ff ff       	call   70f0 <do_ecall_add_thread>
   11c98:	89 c3                	mov    %eax,%ebx
   11c9a:	e9 98 fe ff ff       	jmp    11b37 <enter_enclave+0x37>
   11c9f:	90                   	nop
   11ca0:	48 8d 05 d9 14 00 00 	lea    0x14d9(%rip),%rax        # 13180 <g_global_data>
   11ca7:	e9 4c ff ff ff       	jmp    11bf8 <enter_enclave+0xf8>
   11cac:	e8 86 08 00 00       	call   12537 <abort>

0000000000011cb1 <restore_xregs>:
   11cb1:	f3 0f 1e fa          	endbr64 
   11cb5:	48 89 f9             	mov    %rdi,%rcx
   11cb8:	48 8d 05 85 84 00 00 	lea    0x8485(%rip),%rax        # 1a144 <g_xsave_enabled>
   11cbf:	8b 00                	mov    (%rax),%eax
   11cc1:	83 f8 00             	cmp    $0x0,%eax
   11cc4:	74 16                	je     11cdc <restore_xregs+0x2b>
   11cc6:	48 31 c0             	xor    %rax,%rax
   11cc9:	48 31 d2             	xor    %rdx,%rdx
   11ccc:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   11cd1:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   11cd6:	48 0f ae 29          	xrstor64 (%rcx)
   11cda:	eb 04                	jmp    11ce0 <restore_xregs+0x2f>
   11cdc:	48 0f ae 09          	fxrstor64 (%rcx)
   11ce0:	c3                   	ret    

0000000000011ce1 <save_xregs>:
   11ce1:	f3 0f 1e fa          	endbr64 
   11ce5:	48 89 f9             	mov    %rdi,%rcx
   11ce8:	48 8d 05 55 84 00 00 	lea    0x8455(%rip),%rax        # 1a144 <g_xsave_enabled>
   11cef:	9b                   	fwait
   11cf0:	8b 00                	mov    (%rax),%eax
   11cf2:	83 f8 00             	cmp    $0x0,%eax
   11cf5:	74 16                	je     11d0d <save_xregs+0x2c>
   11cf7:	48 31 c0             	xor    %rax,%rax
   11cfa:	48 31 d2             	xor    %rdx,%rdx
   11cfd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   11d02:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   11d07:	48 0f c7 21          	xsavec64 (%rcx)
   11d0b:	eb 04                	jmp    11d11 <save_xregs+0x30>
   11d0d:	48 0f ae 01          	fxsave64 (%rcx)
   11d11:	c3                   	ret    

0000000000011d12 <__x86_return_thunk>:
   11d12:	c3                   	ret    

0000000000011d13 <__x86_indirect_thunk_rax>:
   11d13:	ff e0                	jmp    *%rax

0000000000011d15 <__x86_indirect_thunk_rbx>:
   11d15:	ff e3                	jmp    *%rbx

0000000000011d17 <__x86_indirect_thunk_rcx>:
   11d17:	ff e1                	jmp    *%rcx

0000000000011d19 <__x86_indirect_thunk_rdx>:
   11d19:	ff e2                	jmp    *%rdx

0000000000011d1b <__x86_indirect_thunk_rbp>:
   11d1b:	ff e5                	jmp    *%rbp

0000000000011d1d <__x86_indirect_thunk_rsi>:
   11d1d:	ff e6                	jmp    *%rsi

0000000000011d1f <__x86_indirect_thunk_rdi>:
   11d1f:	ff e7                	jmp    *%rdi

0000000000011d21 <__x86_indirect_thunk_r8>:
   11d21:	41 ff e0             	jmp    *%r8

0000000000011d24 <__x86_indirect_thunk_r9>:
   11d24:	41 ff e1             	jmp    *%r9

0000000000011d27 <__x86_indirect_thunk_r10>:
   11d27:	41 ff e2             	jmp    *%r10

0000000000011d2a <__x86_indirect_thunk_r11>:
   11d2a:	41 ff e3             	jmp    *%r11

0000000000011d2d <__x86_indirect_thunk_r12>:
   11d2d:	41 ff e4             	jmp    *%r12

0000000000011d30 <__x86_indirect_thunk_r13>:
   11d30:	41 ff e5             	jmp    *%r13

0000000000011d33 <__x86_indirect_thunk_r14>:
   11d33:	41 ff e6             	jmp    *%r14

0000000000011d36 <__x86_indirect_thunk_r15>:
   11d36:	41 ff e7             	jmp    *%r15
   11d39:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11d40:	00 00 00 
   11d43:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11d4a:	00 00 00 
   11d4d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11d54:	00 00 00 
   11d57:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11d5e:	00 00 00 
   11d61:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11d68:	00 00 00 
   11d6b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11d72:	00 00 00 
   11d75:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11d7c:	00 00 00 
   11d7f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11d86:	00 00 00 
   11d89:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11d90:	00 00 00 
   11d93:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11d9a:	00 00 00 
   11d9d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11da4:	00 00 00 
   11da7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11dae:	00 00 00 
   11db1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11db8:	00 00 00 
   11dbb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11dc2:	00 00 00 
   11dc5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11dcc:	00 00 00 
   11dcf:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11dd6:	00 00 00 
   11dd9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11de0:	00 00 00 
   11de3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11dea:	00 00 00 
   11ded:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11df4:	00 00 00 
   11df7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   11dfe:	00 00 

0000000000011e00 <constant_time_apply_sgxstep_mitigation_and_continue_execution>:
   11e00:	f3 0f 1e fa          	endbr64 
   11e04:	48 8b 67 20          	mov    0x20(%rdi),%rsp
   11e08:	48 8b 87 88 00 00 00 	mov    0x88(%rdi),%rax
   11e0f:	49 89 c2             	mov    %rax,%r10
   11e12:	80 38 c3             	cmpb   $0xc3,(%rax)
   11e15:	48 0f 44 04 24       	cmove  (%rsp),%rax
   11e1a:	48 89 e5             	mov    %rsp,%rbp
   11e1d:	48 8d 5c 24 08       	lea    0x8(%rsp),%rbx
   11e22:	48 0f 44 eb          	cmove  %rbx,%rbp
   11e26:	48 8d 1d c3 02 00 00 	lea    0x2c3(%rip),%rbx        # 120f0 <__ct_mitigation_end>
   11e2d:	48 29 c3             	sub    %rax,%rbx
   11e30:	48 81 fb e6 00 00 00 	cmp    $0xe6,%rbx
   11e37:	48 0f 42 e5          	cmovb  %rbp,%rsp
   11e3b:	48 89 67 20          	mov    %rsp,0x20(%rdi)
   11e3f:	4c 0f 42 94 24 78 ff 	cmovb  -0x88(%rsp),%r10
   11e46:	ff ff 
   11e48:	4c 89 94 24 78 ff ff 	mov    %r10,-0x88(%rsp)
   11e4f:	ff 
   11e50:	48 8b 87 80 00 00 00 	mov    0x80(%rdi),%rax
   11e57:	48 89 84 24 38 ff ff 	mov    %rax,-0xc8(%rsp)
   11e5e:	ff 
   11e5f:	48 8b 44 24 f8       	mov    -0x8(%rsp),%rax
   11e64:	48 0f 42 84 24 30 ff 	cmovb  -0xd0(%rsp),%rax
   11e6b:	ff ff 
   11e6d:	48 89 84 24 30 ff ff 	mov    %rax,-0xd0(%rsp)
   11e74:	ff 
   11e75:	48 89 b4 24 28 ff ff 	mov    %rsi,-0xd8(%rsp)
   11e7c:	ff 
   11e7d:	48 0f 42 94 24 20 ff 	cmovb  -0xe0(%rsp),%rdx
   11e84:	ff ff 
   11e86:	48 0f 42 8c 24 18 ff 	cmovb  -0xe8(%rsp),%rcx
   11e8d:	ff ff 
   11e8f:	4c 0f 42 84 24 10 ff 	cmovb  -0xf0(%rsp),%r8
   11e96:	ff ff 
   11e98:	4c 0f 42 8c 24 08 ff 	cmovb  -0xf8(%rsp),%r9
   11e9f:	ff ff 
   11ea1:	48 89 94 24 20 ff ff 	mov    %rdx,-0xe0(%rsp)
   11ea8:	ff 
   11ea9:	48 89 8c 24 18 ff ff 	mov    %rcx,-0xe8(%rsp)
   11eb0:	ff 
   11eb1:	4c 89 84 24 10 ff ff 	mov    %r8,-0xf0(%rsp)
   11eb8:	ff 
   11eb9:	4c 89 8c 24 08 ff ff 	mov    %r9,-0xf8(%rsp)
   11ec0:	ff 
   11ec1:	4c 8b 47 40          	mov    0x40(%rdi),%r8
   11ec5:	4c 8b 4f 48          	mov    0x48(%rdi),%r9
   11ec9:	4c 8b 57 50          	mov    0x50(%rdi),%r10
   11ecd:	4c 8b 5f 58          	mov    0x58(%rdi),%r11
   11ed1:	4c 8b 67 60          	mov    0x60(%rdi),%r12
   11ed5:	4c 8b 6f 68          	mov    0x68(%rdi),%r13
   11ed9:	4c 8b 77 70          	mov    0x70(%rdi),%r14
   11edd:	4c 8b 7f 78          	mov    0x78(%rdi),%r15
   11ee1:	48 8b 07             	mov    (%rdi),%rax
   11ee4:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
   11ee8:	48 8b 57 10          	mov    0x10(%rdi),%rdx
   11eec:	48 8b 5f 18          	mov    0x18(%rdi),%rbx
   11ef0:	48 8b 6f 28          	mov    0x28(%rdi),%rbp
   11ef4:	48 8b 77 30          	mov    0x30(%rdi),%rsi
   11ef8:	48 8b 7f 38          	mov    0x38(%rdi),%rdi
   11efc:	48 0f 42 84 24 70 ff 	cmovb  -0x90(%rsp),%rax
   11f03:	ff ff 
   11f05:	48 0f 42 8c 24 68 ff 	cmovb  -0x98(%rsp),%rcx
   11f0c:	ff ff 
   11f0e:	48 0f 42 94 24 60 ff 	cmovb  -0xa0(%rsp),%rdx
   11f15:	ff ff 
   11f17:	48 0f 42 9c 24 58 ff 	cmovb  -0xa8(%rsp),%rbx
   11f1e:	ff ff 
   11f20:	48 0f 42 ac 24 50 ff 	cmovb  -0xb0(%rsp),%rbp
   11f27:	ff ff 
   11f29:	48 0f 42 b4 24 48 ff 	cmovb  -0xb8(%rsp),%rsi
   11f30:	ff ff 
   11f32:	48 0f 42 bc 24 40 ff 	cmovb  -0xc0(%rsp),%rdi
   11f39:	ff ff 
   11f3b:	48 89 84 24 70 ff ff 	mov    %rax,-0x90(%rsp)
   11f42:	ff 
   11f43:	48 89 8c 24 68 ff ff 	mov    %rcx,-0x98(%rsp)
   11f4a:	ff 
   11f4b:	48 89 94 24 60 ff ff 	mov    %rdx,-0xa0(%rsp)
   11f52:	ff 
   11f53:	48 89 9c 24 58 ff ff 	mov    %rbx,-0xa8(%rsp)
   11f5a:	ff 
   11f5b:	48 89 ac 24 50 ff ff 	mov    %rbp,-0xb0(%rsp)
   11f62:	ff 
   11f63:	48 89 b4 24 48 ff ff 	mov    %rsi,-0xb8(%rsp)
   11f6a:	ff 
   11f6b:	48 89 bc 24 40 ff ff 	mov    %rdi,-0xc0(%rsp)
   11f72:	ff 
   11f73:	48 8b ac 24 20 ff ff 	mov    -0xe0(%rsp),%rbp
   11f7a:	ff 
   11f7b:	48 8b b4 24 18 ff ff 	mov    -0xe8(%rsp),%rsi
   11f82:	ff 
   11f83:	48 8b 94 24 10 ff ff 	mov    -0xf0(%rsp),%rdx
   11f8a:	ff 
   11f8b:	48 8b bc 24 08 ff ff 	mov    -0xf8(%rsp),%rdi
   11f92:	ff 
   11f93:	40 d0 ed             	shr    %bpl
   11f96:	48 89 eb             	mov    %rbp,%rbx
   11f99:	73 07                	jae    11fa2 <.restore_flags>
   11f9b:	48 81 eb 00 10 00 00 	sub    $0x1000,%rbx

0000000000011fa2 <.restore_flags>:
   11fa2:	48 8d 84 24 38 ff ff 	lea    -0xc8(%rsp),%rax
   11fa9:	ff 
   11faa:	48 94                	xchg   %rax,%rsp
   11fac:	9d                   	popf   
   11fad:	48 94                	xchg   %rax,%rsp
   11faf:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   11fb6:	00 00 00 00 
   11fba:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   11fc1:	00 00 00 00 
   11fc5:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   11fcc:	00 00 00 00 
   11fd0:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   11fd7:	00 00 00 00 
   11fdb:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   11fe2:	00 00 00 00 
   11fe6:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   11fed:	00 00 00 00 
   11ff1:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   11ff8:	00 00 00 00 
   11ffc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000012000 <.ct_enable_aexnotify>:
   12000:	48 8b 84 24 28 ff ff 	mov    -0xd8(%rsp),%rax
   12007:	ff 
   12008:	c6 00 01             	movb   $0x1,(%rax)

000000000001200b <__ct_mitigation_begin>:
   1200b:	0f ae e8             	lfence 

000000000001200e <.ct_check_write>:
   1200e:	b9 3f 00 00 00       	mov    $0x3f,%ecx
   12013:	c4 e2 f1 f7 ce       	shlx   %rcx,%rsi,%rcx
   12018:	e3 08                	jrcxz  12022 <.ct_clear_low_bits_of_rdx>
   1201a:	48 8d 76 ff          	lea    -0x1(%rsi),%rsi
   1201e:	8a 02                	mov    (%rdx),%al
   12020:	88 02                	mov    %al,(%rdx)

0000000000012022 <.ct_clear_low_bits_of_rdx>:
   12022:	b9 0c 00 00 00       	mov    $0xc,%ecx
   12027:	c4 e2 f3 f7 d2       	shrx   %rcx,%rdx,%rdx
   1202c:	c4 e2 f1 f7 d2       	shlx   %rcx,%rdx,%rdx

0000000000012031 <.ct_check_execute>:
   12031:	ff d7                	call   *%rdi
   12033:	b9 00 10 00 00       	mov    $0x1000,%ecx
   12038:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1203f:	00 

0000000000012040 <.ct_warm_caches_and_tlbs>:
   12040:	67 8d 49 c0          	lea    -0x40(%ecx),%ecx
   12044:	8b 04 0e             	mov    (%rsi,%rcx,1),%eax
   12047:	8b 44 0d 00          	mov    0x0(%rbp,%rcx,1),%eax
   1204b:	8b 04 0b             	mov    (%rbx,%rcx,1),%eax
   1204e:	8b 04 0a             	mov    (%rdx,%rcx,1),%eax
   12051:	e3 02                	jrcxz  12055 <.ct_restore_state>
   12053:	eb eb                	jmp    12040 <.ct_warm_caches_and_tlbs>

0000000000012055 <.ct_restore_state>:
   12055:	40 0f b6 ce          	movzbl %sil,%ecx
   12059:	48 8b bc 24 30 ff ff 	mov    -0xd0(%rsp),%rdi
   12060:	ff 
   12061:	48 89 7c 24 f8       	mov    %rdi,-0x8(%rsp)
   12066:	48 8b bc 24 40 ff ff 	mov    -0xc0(%rsp),%rdi
   1206d:	ff 
   1206e:	48 8b b4 24 48 ff ff 	mov    -0xb8(%rsp),%rsi
   12075:	ff 
   12076:	48 8b ac 24 50 ff ff 	mov    -0xb0(%rsp),%rbp
   1207d:	ff 
   1207e:	48 8b 9c 24 58 ff ff 	mov    -0xa8(%rsp),%rbx
   12085:	ff 
   12086:	48 8b 94 24 60 ff ff 	mov    -0xa0(%rsp),%rdx
   1208d:	ff 
   1208e:	48 8b 84 24 70 ff ff 	mov    -0x90(%rsp),%rax
   12095:	ff 
   12096:	e3 50                	jrcxz  120e8 <.ct_restore_rcx>
   12098:	48 8d 24 24          	lea    (%rsp),%rsp
   1209c:	48 8d 24 24          	lea    (%rsp),%rsp
   120a0:	48 8d 24 24          	lea    (%rsp),%rsp
   120a4:	48 8d 24 24          	lea    (%rsp),%rsp
   120a8:	48 8d 24 24          	lea    (%rsp),%rsp
   120ac:	48 8d 24 24          	lea    (%rsp),%rsp
   120b0:	48 8d 24 24          	lea    (%rsp),%rsp
   120b4:	48 8d 24 24          	lea    (%rsp),%rsp
   120b8:	48 8d 24 24          	lea    (%rsp),%rsp
   120bc:	48 8d 24 24          	lea    (%rsp),%rsp
   120c0:	48 8d 24 24          	lea    (%rsp),%rsp
   120c4:	48 8d 24 24          	lea    (%rsp),%rsp
   120c8:	48 8d 24 24          	lea    (%rsp),%rsp
   120cc:	48 8d 24 24          	lea    (%rsp),%rsp
   120d0:	48 8d 24 24          	lea    (%rsp),%rsp
   120d4:	48 8d 24 24          	lea    (%rsp),%rsp
   120d8:	48 8d 24 24          	lea    (%rsp),%rsp
   120dc:	48 8d 24 24          	lea    (%rsp),%rsp
   120e0:	48 8d 24 24          	lea    (%rsp),%rsp
   120e4:	48 8d 24 24          	lea    (%rsp),%rsp

00000000000120e8 <.ct_restore_rcx>:
   120e8:	48 8b 8c 24 68 ff ff 	mov    -0x98(%rsp),%rcx
   120ef:	ff 

00000000000120f0 <__ct_mitigation_end>:
   120f0:	ff a4 24 78 ff ff ff 	jmp    *-0x88(%rsp)

00000000000120f7 <__ct_mitigation_ret>:
   120f7:	c3                   	ret    

00000000000120f8 <get_enclave_base>:
   120f8:	f3 0f 1e fa          	endbr64 
   120fc:	48 8d 05 fd de fe ff 	lea    -0x12103(%rip),%rax        # 0 <__ImageBase>
   12103:	c3                   	ret    

0000000000012104 <get_enclave_state>:
   12104:	f3 0f 1e fa          	endbr64 
   12108:	48 8d 0d 31 80 00 00 	lea    0x8031(%rip),%rcx        # 1a140 <g_enclave_state>
   1210f:	48 31 c0             	xor    %rax,%rax
   12112:	8b 01                	mov    (%rcx),%eax
   12114:	c3                   	ret    

0000000000012115 <set_enclave_state>:
   12115:	f3 0f 1e fa          	endbr64 
   12119:	48 8d 05 20 80 00 00 	lea    0x8020(%rip),%rax        # 1a140 <g_enclave_state>
   12120:	89 38                	mov    %edi,(%rax)
   12122:	c3                   	ret    

0000000000012123 <lock_enclave>:
   12123:	f3 0f 1e fa          	endbr64 
   12127:	48 8d 15 12 80 00 00 	lea    0x8012(%rip),%rdx        # 1a140 <g_enclave_state>
   1212e:	48 31 c0             	xor    %rax,%rax
   12131:	b8 00 00 00 00       	mov    $0x0,%eax
   12136:	48 31 c9             	xor    %rcx,%rcx
   12139:	b9 01 00 00 00       	mov    $0x1,%ecx
   1213e:	f0 0f b1 0a          	lock cmpxchg %ecx,(%rdx)
   12142:	c3                   	ret    

0000000000012143 <get_thread_data>:
   12143:	f3 0f 1e fa          	endbr64 
   12147:	65 48 8b 04 25 00 00 	mov    %gs:0x0,%rax
   1214e:	00 00 
   12150:	c3                   	ret    

0000000000012151 <get_stack_guard>:
   12151:	f3 0f 1e fa          	endbr64 
   12155:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
   1215c:	00 00 
   1215e:	c3                   	ret    

000000000001215f <enclave_entry>:
   1215f:	f3 0f 1e fa          	endbr64 
   12163:	48 31 d2             	xor    %rdx,%rdx
   12166:	48 01 d2             	add    %rdx,%rdx
   12169:	fc                   	cld    
   1216a:	4d 31 c0             	xor    %r8,%r8
   1216d:	4d 31 c9             	xor    %r9,%r9
   12170:	4d 31 d2             	xor    %r10,%r10
   12173:	4d 31 db             	xor    %r11,%r11
   12176:	4d 31 e4             	xor    %r12,%r12
   12179:	4d 31 ed             	xor    %r13,%r13
   1217c:	4d 31 f6             	xor    %r14,%r14
   1217f:	4d 31 ff             	xor    %r15,%r15
   12182:	48 83 f8 00          	cmp    $0x0,%rax
   12186:	0f 85 07 01 00 00    	jne    12293 <enclave_entry+0x134>
   1218c:	65 48 8b 04 25 08 00 	mov    %gs:0x8,%rax
   12193:	00 00 
   12195:	48 83 f8 00          	cmp    $0x0,%rax
   12199:	75 0f                	jne    121aa <enclave_entry+0x4b>
   1219b:	48 89 d8             	mov    %rbx,%rax
   1219e:	48 2d 00 00 01 00    	sub    $0x10000,%rax
   121a4:	48 2d 00 04 00 00    	sub    $0x400,%rax
   121aa:	48 94                	xchg   %rax,%rsp
   121ac:	51                   	push   %rcx
   121ad:	55                   	push   %rbp
   121ae:	48 89 e5             	mov    %rsp,%rbp
   121b1:	9c                   	pushf  
   121b2:	48 f7 14 24          	notq   (%rsp)
   121b6:	48 81 0c 24 00 00 04 	orq    $0x40000,(%rsp)
   121bd:	00 
   121be:	48 f7 14 24          	notq   (%rsp)
   121c2:	9d                   	popf   
   121c3:	48 83 ec 30          	sub    $0x30,%rsp
   121c7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   121cb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   121cf:	48 89 5d e0          	mov    %rbx,-0x20(%rbp)
   121d3:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
   121d7:	48 89 7d d0          	mov    %rdi,-0x30(%rbp)
   121db:	48 83 ec 20          	sub    $0x20,%rsp
   121df:	48 8d 3d 9a 16 00 00 	lea    0x169a(%rip),%rdi        # 13880 <SYNTHETIC_STATE>
   121e6:	e8 c6 fa ff ff       	call   11cb1 <restore_xregs>
   121eb:	0f ae e8             	lfence 
   121ee:	48 83 c4 20          	add    $0x20,%rsp
   121f2:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
   121f6:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
   121fa:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   121fe:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   12202:	e8 f9 f8 ff ff       	call   11b00 <enter_enclave>
   12207:	48 89 c3             	mov    %rax,%rbx
   1220a:	48 8d 3d 6f 16 00 00 	lea    0x166f(%rip),%rdi        # 13880 <SYNTHETIC_STATE>
   12211:	e8 9b fa ff ff       	call   11cb1 <restore_xregs>
   12216:	0f ae e8             	lfence 
   12219:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1221d:	48 83 f8 00          	cmp    $0x0,%rax
   12221:	75 2c                	jne    1224f <enclave_entry+0xf0>
   12223:	65 48 8b 04 25 00 00 	mov    %gs:0x0,%rax
   1222a:	00 00 
   1222c:	48 83 f8 00          	cmp    $0x0,%rax
   12230:	74 1d                	je     1224f <enclave_entry+0xf0>
   12232:	48 8b 50 20          	mov    0x20(%rax),%rdx
   12236:	8a 8a a7 00 00 00    	mov    0xa7(%rdx),%cl
   1223c:	80 f9 00             	cmp    $0x0,%cl
   1223f:	74 0e                	je     1224f <enclave_entry+0xf0>
   12241:	c6 82 a7 00 00 00 00 	movb   $0x0,0xa7(%rdx)
   12248:	c7 40 50 01 00 00 00 	movl   $0x1,0x50(%rax)
   1224f:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
   12256:	48 89 de             	mov    %rbx,%rsi
   12259:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1225d:	48 89 ec             	mov    %rbp,%rsp
   12260:	5d                   	pop    %rbp
   12261:	5b                   	pop    %rbx
   12262:	48 89 d4             	mov    %rdx,%rsp
   12265:	48 31 c9             	xor    %rcx,%rcx
   12268:	48 31 d2             	xor    %rdx,%rdx
   1226b:	4d 31 c0             	xor    %r8,%r8
   1226e:	4d 31 c9             	xor    %r9,%r9
   12271:	4d 31 d2             	xor    %r10,%r10
   12274:	4d 31 db             	xor    %r11,%r11
   12277:	4d 31 e4             	xor    %r12,%r12
   1227a:	4d 31 ed             	xor    %r13,%r13
   1227d:	4d 31 f6             	xor    %r14,%r14
   12280:	4d 31 ff             	xor    %r15,%r15
   12283:	48 01 d2             	add    %rdx,%rdx
   12286:	fc                   	cld    
   12287:	48 c7 c0 04 00 00 00 	mov    $0x4,%rax
   1228e:	0f 01 d7             	enclu  
   12291:	0f 0b                	ud2    
   12293:	48 89 c2             	mov    %rax,%rdx
   12296:	48 89 d8             	mov    %rbx,%rax
   12299:	48 2d 00 00 01 00    	sub    $0x10000,%rax
   1229f:	e9 06 ff ff ff       	jmp    121aa <enclave_entry+0x4b>
   122a4:	0f 0b                	ud2    

00000000000122a6 <do_ocall>:
   122a6:	f3 0f 1e fa          	endbr64 
   122aa:	55                   	push   %rbp
   122ab:	48 89 e5             	mov    %rsp,%rbp
   122ae:	48 89 7d 10          	mov    %rdi,0x10(%rbp)
   122b2:	48 89 75 18          	mov    %rsi,0x18(%rbp)
   122b6:	65 48 8b 04 25 38 00 	mov    %gs:0x38,%rax
   122bd:	00 00 
   122bf:	48 29 c4             	sub    %rax,%rsp
   122c2:	48 c7 c0 3f 00 00 00 	mov    $0x3f,%rax
   122c9:	48 f7 d0             	not    %rax
   122cc:	48 21 c4             	and    %rax,%rsp
   122cf:	48 89 e1             	mov    %rsp,%rcx
   122d2:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
   122d9:	48 89 8c 24 98 00 00 	mov    %rcx,0x98(%rsp)
   122e0:	00 
   122e1:	48 89 5c 24 70       	mov    %rbx,0x70(%rsp)
   122e6:	48 89 74 24 68       	mov    %rsi,0x68(%rsp)
   122eb:	48 89 7c 24 60       	mov    %rdi,0x60(%rsp)
   122f0:	48 89 6c 24 58       	mov    %rbp,0x58(%rsp)
   122f5:	4c 89 64 24 50       	mov    %r12,0x50(%rsp)
   122fa:	4c 89 6c 24 48       	mov    %r13,0x48(%rsp)
   122ff:	4c 89 74 24 40       	mov    %r14,0x40(%rsp)
   12304:	4c 89 7c 24 38       	mov    %r15,0x38(%rsp)
   12309:	48 8b bc 24 98 00 00 	mov    0x98(%rsp),%rdi
   12310:	00 
   12311:	65 48 8b 04 25 38 00 	mov    %gs:0x38,%rax
   12318:	00 00 
   1231a:	48 89 c1             	mov    %rax,%rcx
   1231d:	48 c1 e9 02          	shr    $0x2,%rcx
   12321:	48 31 c0             	xor    %rax,%rax
   12324:	fc                   	cld    
   12325:	f3 ab                	rep stos %eax,%es:(%rdi)
   12327:	48 8b bc 24 98 00 00 	mov    0x98(%rsp),%rdi
   1232e:	00 
   1232f:	48 89 3c 24          	mov    %rdi,(%rsp)
   12333:	e8 a9 f9 ff ff       	call   11ce1 <save_xregs>
   12338:	48 8d 3d 41 15 00 00 	lea    0x1541(%rip),%rdi        # 13880 <SYNTHETIC_STATE>
   1233f:	48 89 3c 24          	mov    %rdi,(%rsp)
   12343:	e8 69 f9 ff ff       	call   11cb1 <restore_xregs>
   12348:	0f ae e8             	lfence 
   1234b:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
   12350:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   12355:	48 c7 c0 44 49 43 4f 	mov    $0x4f434944,%rax
   1235c:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   12361:	48 89 7c 24 28       	mov    %rdi,0x28(%rsp)
   12366:	65 48 8b 04 25 00 00 	mov    %gs:0x0,%rax
   1236d:	00 00 
   1236f:	48 89 c3             	mov    %rax,%rbx
   12372:	48 89 e7             	mov    %rsp,%rdi
   12375:	e8 66 4f ff ff       	call   72e0 <update_ocall_lastsp>
   1237a:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
   1237f:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   12384:	48 8b 53 20          	mov    0x20(%rbx),%rdx
   12388:	8a 8a a7 00 00 00    	mov    0xa7(%rdx),%cl
   1238e:	80 f9 00             	cmp    $0x0,%cl
   12391:	74 0e                	je     123a1 <do_ocall+0xfb>
   12393:	c6 82 a7 00 00 00 00 	movb   $0x0,0xa7(%rdx)
   1239a:	c7 43 50 01 00 00 00 	movl   $0x1,0x50(%rbx)
   123a1:	48 8b aa 98 00 00 00 	mov    0x98(%rdx),%rbp
   123a8:	48 8b a2 90 00 00 00 	mov    0x90(%rdx),%rsp
   123af:	48 8b 58 f8          	mov    -0x8(%rax),%rbx
   123b3:	48 c7 c0 04 00 00 00 	mov    $0x4,%rax
   123ba:	48 31 c9             	xor    %rcx,%rcx
   123bd:	48 31 d2             	xor    %rdx,%rdx
   123c0:	4d 31 c0             	xor    %r8,%r8
   123c3:	4d 31 c9             	xor    %r9,%r9
   123c6:	4d 31 d2             	xor    %r10,%r10
   123c9:	4d 31 db             	xor    %r11,%r11
   123cc:	4d 31 e4             	xor    %r12,%r12
   123cf:	4d 31 ed             	xor    %r13,%r13
   123d2:	4d 31 f6             	xor    %r14,%r14
   123d5:	4d 31 ff             	xor    %r15,%r15
   123d8:	48 01 d2             	add    %rdx,%rdx
   123db:	fc                   	cld    
   123dc:	0f 01 d7             	enclu  

00000000000123df <__morestack>:
   123df:	f3 0f 1e fa          	endbr64 
   123e3:	55                   	push   %rbp
   123e4:	48 89 e5             	mov    %rsp,%rbp
   123e7:	48 83 ec 20          	sub    $0x20,%rsp
   123eb:	e8 b6 fe ff ff       	call   122a6 <do_ocall>
   123f0:	c9                   	leave  
   123f1:	c3                   	ret    

00000000000123f2 <asm_oret>:
   123f2:	f3 0f 1e fa          	endbr64 
   123f6:	48 89 e3             	mov    %rsp,%rbx
   123f9:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   123fe:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   12403:	48 8b 63 08          	mov    0x8(%rbx),%rsp
   12407:	48 8b bc 24 98 00 00 	mov    0x98(%rsp),%rdi
   1240e:	00 
   1240f:	e8 9d f8 ff ff       	call   11cb1 <restore_xregs>
   12414:	0f ae e8             	lfence 
   12417:	48 31 c0             	xor    %rax,%rax
   1241a:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
   1241f:	48 29 f9             	sub    %rdi,%rcx
   12422:	48 83 e9 08          	sub    $0x8,%rcx
   12426:	48 c1 e9 02          	shr    $0x2,%rcx
   1242a:	fc                   	cld    
   1242b:	f3 ab                	rep stos %eax,%es:(%rdi)
   1242d:	48 8b 43 10          	mov    0x10(%rbx),%rax
   12431:	4c 8b 7c 24 38       	mov    0x38(%rsp),%r15
   12436:	4c 8b 74 24 40       	mov    0x40(%rsp),%r14
   1243b:	4c 8b 6c 24 48       	mov    0x48(%rsp),%r13
   12440:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   12445:	48 8b 6c 24 58       	mov    0x58(%rsp),%rbp
   1244a:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
   1244f:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   12454:	48 8b 5c 24 70       	mov    0x70(%rsp),%rbx
   12459:	48 89 ec             	mov    %rbp,%rsp
   1245c:	5d                   	pop    %rbp
   1245d:	c3                   	ret    
   1245e:	0f 0b                	ud2    

0000000000012460 <do_egetkey>:
   12460:	f3 0f 1e fa          	endbr64 
   12464:	53                   	push   %rbx
   12465:	51                   	push   %rcx
   12466:	52                   	push   %rdx
   12467:	48 89 fb             	mov    %rdi,%rbx
   1246a:	48 89 f1             	mov    %rsi,%rcx
   1246d:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
   12474:	0f 01 d7             	enclu  
   12477:	74 03                	je     1247c <do_egetkey+0x1c>
   12479:	48 31 c0             	xor    %rax,%rax
   1247c:	5a                   	pop    %rdx
   1247d:	59                   	pop    %rcx
   1247e:	5b                   	pop    %rbx
   1247f:	c3                   	ret    

0000000000012480 <do_ereport>:
   12480:	f3 0f 1e fa          	endbr64 
   12484:	53                   	push   %rbx
   12485:	51                   	push   %rcx
   12486:	52                   	push   %rdx
   12487:	48 89 fb             	mov    %rdi,%rbx
   1248a:	48 89 f1             	mov    %rsi,%rcx
   1248d:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
   12494:	f8                   	clc    

0000000000012495 <Lereport_inst>:
   12495:	0f 01 d7             	enclu  
   12498:	0f 92 c0             	setb   %al
   1249b:	5a                   	pop    %rdx
   1249c:	59                   	pop    %rcx
   1249d:	5b                   	pop    %rbx
   1249e:	c3                   	ret    

000000000001249f <do_everifyreport2>:
   1249f:	f3 0f 1e fa          	endbr64 
   124a3:	53                   	push   %rbx
   124a4:	51                   	push   %rcx
   124a5:	52                   	push   %rdx
   124a6:	48 89 fb             	mov    %rdi,%rbx
   124a9:	48 89 f1             	mov    %rsi,%rcx
   124ac:	48 c7 c0 08 00 00 00 	mov    $0x8,%rax

00000000000124b3 <Leverifyreport2_inst>:
   124b3:	0f 01 d7             	enclu  
   124b6:	74 03                	je     124bb <Leverifyreport2_inst+0x8>
   124b8:	48 31 c0             	xor    %rax,%rax
   124bb:	5a                   	pop    %rdx
   124bc:	59                   	pop    %rcx
   124bd:	5b                   	pop    %rbx
   124be:	c3                   	ret    

00000000000124bf <do_eaccept>:
   124bf:	f3 0f 1e fa          	endbr64 
   124c3:	53                   	push   %rbx
   124c4:	51                   	push   %rcx
   124c5:	52                   	push   %rdx
   124c6:	48 89 fb             	mov    %rdi,%rbx
   124c9:	48 89 f1             	mov    %rsi,%rcx
   124cc:	b8 05 00 00 00       	mov    $0x5,%eax
   124d1:	0f 01 d7             	enclu  
   124d4:	83 f8 00             	cmp    $0x0,%eax
   124d7:	75 5e                	jne    12537 <abort>
   124d9:	5a                   	pop    %rdx
   124da:	59                   	pop    %rcx
   124db:	5b                   	pop    %rbx
   124dc:	c3                   	ret    

00000000000124dd <do_eacceptcopy>:
   124dd:	f3 0f 1e fa          	endbr64 
   124e1:	53                   	push   %rbx
   124e2:	51                   	push   %rcx
   124e3:	52                   	push   %rdx
   124e4:	48 89 fb             	mov    %rdi,%rbx
   124e7:	48 89 f1             	mov    %rsi,%rcx
   124ea:	b8 07 00 00 00       	mov    $0x7,%eax
   124ef:	0f 01 d7             	enclu  
   124f2:	83 f8 00             	cmp    $0x0,%eax
   124f5:	75 40                	jne    12537 <abort>
   124f7:	5a                   	pop    %rdx
   124f8:	59                   	pop    %rcx
   124f9:	5b                   	pop    %rbx
   124fa:	c3                   	ret    

00000000000124fb <do_emodpe>:
   124fb:	f3 0f 1e fa          	endbr64 
   124ff:	53                   	push   %rbx
   12500:	51                   	push   %rcx
   12501:	52                   	push   %rdx
   12502:	48 89 fb             	mov    %rdi,%rbx
   12505:	48 89 f1             	mov    %rsi,%rcx
   12508:	b8 06 00 00 00       	mov    $0x6,%eax
   1250d:	0f 01 d7             	enclu  
   12510:	5a                   	pop    %rdx
   12511:	59                   	pop    %rcx
   12512:	5b                   	pop    %rbx
   12513:	c3                   	ret    

0000000000012514 <do_rdrand>:
   12514:	f3 0f 1e fa          	endbr64 
   12518:	b9 0a 00 00 00       	mov    $0xa,%ecx
   1251d:	0f c7 f0             	rdrand %eax
   12520:	72 08                	jb     1252a <do_rdrand+0x16>
   12522:	ff c9                	dec    %ecx
   12524:	75 f7                	jne    1251d <do_rdrand+0x9>
   12526:	48 31 c0             	xor    %rax,%rax
   12529:	c3                   	ret    
   1252a:	48 89 f9             	mov    %rdi,%rcx
   1252d:	89 01                	mov    %eax,(%rcx)
   1252f:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
   12536:	c3                   	ret    

0000000000012537 <abort>:
   12537:	f3 0f 1e fa          	endbr64 
   1253b:	48 8d 05 fe 7b 00 00 	lea    0x7bfe(%rip),%rax        # 1a140 <g_enclave_state>
   12542:	c7 00 03 00 00 00    	movl   $0x3,(%rax)
   12548:	0f 0b                	ud2    

000000000001254a <continue_execution>:
   1254a:	f3 0f 1e fa          	endbr64 
   1254e:	48 89 f9             	mov    %rdi,%rcx
   12551:	48 8b 01             	mov    (%rcx),%rax
   12554:	50                   	push   %rax
   12555:	48 8b 41 08          	mov    0x8(%rcx),%rax
   12559:	50                   	push   %rax
   1255a:	48 8b 41 20          	mov    0x20(%rcx),%rax
   1255e:	48 2d 88 00 00 00    	sub    $0x88,%rax
   12564:	48 8b 51 10          	mov    0x10(%rcx),%rdx
   12568:	48 8b 59 18          	mov    0x18(%rcx),%rbx
   1256c:	48 8b 69 28          	mov    0x28(%rcx),%rbp
   12570:	48 8b 71 30          	mov    0x30(%rcx),%rsi
   12574:	48 8b 79 38          	mov    0x38(%rcx),%rdi
   12578:	4c 8b 41 40          	mov    0x40(%rcx),%r8
   1257c:	4c 8b 49 48          	mov    0x48(%rcx),%r9
   12580:	4c 8b 51 50          	mov    0x50(%rcx),%r10
   12584:	4c 8b 59 58          	mov    0x58(%rcx),%r11
   12588:	4c 8b 61 60          	mov    0x60(%rcx),%r12
   1258c:	4c 8b 69 68          	mov    0x68(%rcx),%r13
   12590:	4c 8b 71 70          	mov    0x70(%rcx),%r14
   12594:	4c 8b 79 78          	mov    0x78(%rcx),%r15
   12598:	ff b1 80 00 00 00    	push   0x80(%rcx)
   1259e:	9d                   	popf   
   1259f:	48 8b 89 88 00 00 00 	mov    0x88(%rcx),%rcx
   125a6:	48 89 08             	mov    %rcx,(%rax)
   125a9:	59                   	pop    %rcx
   125aa:	5c                   	pop    %rsp
   125ab:	48 94                	xchg   %rax,%rsp
   125ad:	c2 80 00             	ret    $0x80

00000000000125b0 <second_phase>:
   125b0:	f3 0f 1e fa          	endbr64 
   125b4:	48 89 f4             	mov    %rsi,%rsp
   125b7:	48 c7 c0 09 00 00 00 	mov    $0x9,%rax
   125be:	0f 01 d7             	enclu  
   125c1:	ff e2                	jmp    *%rdx

Disassembly of section .rodata:

0000000000013000 <g_dyn_entry_table-0x30>:
   13000:	73 75                	jae    13077 <g_dyn_entry_table+0x47>
   13002:	6d                   	insl   (%dx),%es:(%rdi)
   13003:	70 00                	jo     13005 <second_phase+0xa55>
   13005:	70 72                	jo     13079 <g_dyn_entry_table+0x49>
   13007:	6f                   	outsl  %ds:(%rsi),(%dx)
   13008:	64 70 00             	fs jo  1300b <second_phase+0xa5b>
   1300b:	50                   	push   %rax
   1300c:	69 6e 63 6f 64 65 20 	imul   $0x2065646f,0x63(%rsi),%ebp
   13013:	69 73 20 77 72 6f 6e 	imul   $0x6e6f7277,0x20(%rbx),%esi
   1301a:	67 00 73 75          	add    %dh,0x75(%ebx)
   1301e:	70 65                	jo     13085 <g_dyn_entry_table+0x55>
   13020:	72 5f                	jb     13081 <g_dyn_entry_table+0x51>
   13022:	73 65                	jae    13089 <g_dyn_entry_table+0x59>
   13024:	63 72 65             	movsxd 0x65(%rdx),%esi
   13027:	74 00                	je     13029 <second_phase+0xa79>
   13029:	00 00                	add    %al,(%rax)
   1302b:	00 00                	add    %al,(%rax)
   1302d:	00 00                	add    %al,(%rax)
	...

0000000000013030 <g_dyn_entry_table>:
   13030:	02 00                	add    (%rax),%al
	...
   1303e:	00 00                	add    %al,(%rax)
   13040:	40                   	rex
   13041:	40                   	rex
   13042:	40                   	rex
   13043:	40                   	rex
   13044:	40                   	rex
   13045:	40                   	rex
   13046:	40                   	rex
   13047:	40 00 00             	rex add %al,(%rax)
   1304a:	00 00                	add    %al,(%rax)
   1304c:	00 00                	add    %al,(%rax)
   1304e:	00 00                	add    %al,(%rax)
   13050:	20 20                	and    %ah,(%rax)
   13052:	20 20                	and    %ah,(%rax)
   13054:	20 20                	and    %ah,(%rax)
   13056:	20 20                	and    %ah,(%rax)
	...
   13060:	30 30                	xor    %dh,(%rax)
   13062:	30 30                	xor    %dh,(%rax)
   13064:	30 30                	xor    %dh,(%rax)
   13066:	30 30                	xor    %dh,(%rax)
	...
   13070:	03 03                	add    (%rbx),%eax
   13072:	03 03                	add    (%rbx),%eax
   13074:	03 03                	add    (%rbx),%eax
   13076:	03 03                	add    (%rbx),%eax
	...
   13080:	01 01                	add    %eax,(%rcx)
   13082:	01 01                	add    %eax,(%rcx)
   13084:	01 01                	add    %eax,(%rcx)
   13086:	01 01                	add    %eax,(%rcx)
	...
   13090:	02 02                	add    (%rdx),%al
   13092:	02 02                	add    (%rdx),%al
   13094:	02 02                	add    (%rdx),%al
   13096:	02 02                	add    (%rdx),%al
	...
   130a0:	20 00                	and    %al,(%rax)
   130a2:	00 00                	add    %al,(%rax)
   130a4:	00 00                	add    %al,(%rax)
   130a6:	00 00                	add    %al,(%rax)
   130a8:	e0 ff                	loopne 130a9 <g_dyn_entry_table+0x79>
   130aa:	ff                   	(bad)  
   130ab:	ff                   	(bad)  
   130ac:	ff                   	(bad)  
   130ad:	ff                   	(bad)  
   130ae:	ff                   	(bad)  
   130af:	ff 00                	incl   (%rax)
   130b1:	10 00                	adc    %al,(%rax)
   130b3:	00 00                	add    %al,(%rax)
   130b5:	00 00                	add    %al,(%rax)
   130b7:	00 00                	add    %al,(%rax)
   130b9:	10 00                	adc    %al,(%rax)
   130bb:	00 00                	add    %al,(%rax)
   130bd:	00 00                	add    %al,(%rax)
   130bf:	00 ff                	add    %bh,%bh
   130c1:	ff                   	(bad)  
   130c2:	ff                   	(bad)  
   130c3:	ff                   	(bad)  
   130c4:	ff                   	(bad)  
   130c5:	ff                   	(bad)  
   130c6:	ff                   	(bad)  
   130c7:	ff 00                	incl   (%rax)
   130c9:	00 20                	add    %ah,(%rax)
   130cb:	00 00                	add    %al,(%rax)
   130cd:	00 00                	add    %al,(%rax)
   130cf:	00 c0                	add    %al,%al
   130d1:	52                   	push   %rdx
   130d2:	ff                   	(bad)  
   130d3:	ff 90 52 ff ff 82    	call   *-0x7d0000ae(%rax)
   130d9:	52                   	push   %rdx
   130da:	ff                   	(bad)  
   130db:	ff 82 52 ff ff 82    	incl   -0x7d0000ae(%rdx)
   130e1:	52                   	push   %rdx
   130e2:	ff                   	(bad)  
   130e3:	ff 82 52 ff ff 90    	incl   -0x6f0000ae(%rdx)
   130e9:	52                   	push   %rdx
   130ea:	ff                   	(bad)  
   130eb:	ff 90 52 ff ff 20    	call   *0x20ffff52(%rax)
   130f1:	53                   	push   %rbx
   130f2:	ff                   	(bad)  
   130f3:	ff 82 52 ff ff 82    	incl   -0x7d0000ae(%rdx)
   130f9:	52                   	push   %rdx
   130fa:	ff                   	(bad)  
   130fb:	ff 82 52 ff ff 82    	incl   -0x7d0000ae(%rdx)
   13101:	52                   	push   %rdx
   13102:	ff                   	(bad)  
   13103:	ff 82 52 ff ff 82    	incl   -0x7d0000ae(%rdx)
   13109:	52                   	push   %rdx
   1310a:	ff                   	(bad)  
   1310b:	ff 82 52 ff ff 10    	incl   0x10ffff52(%rdx)
   13111:	53                   	push   %rbx
   13112:	ff                   	(bad)  
   13113:	ff e0                	jmp    *%rax
   13115:	52                   	push   %rdx
   13116:	ff                   	(bad)  
   13117:	ff 10                	call   *(%rax)
   13119:	52                   	push   %rdx
   1311a:	ff                   	(bad)  
   1311b:	ff 2c 54             	ljmp   *(%rsp,%rdx,2)
   1311e:	ff                   	(bad)  
   1311f:	ff 2c 54             	ljmp   *(%rsp,%rdx,2)
   13122:	ff                   	(bad)  
   13123:	ff f4                	push   %rsp
   13125:	54                   	push   %rsp
   13126:	ff                   	(bad)  
   13127:	ff 2c 54             	ljmp   *(%rsp,%rdx,2)
   1312a:	ff                   	(bad)  
   1312b:	ff 2c 54             	ljmp   *(%rsp,%rdx,2)
   1312e:	ff                   	(bad)  
   1312f:	ff 2c 54             	ljmp   *(%rsp,%rdx,2)
   13132:	ff                   	(bad)  
   13133:	ff 24 54             	jmp    *(%rsp,%rdx,2)
   13136:	ff                   	(bad)  
   13137:	ff d4                	call   *%rsp
   13139:	54                   	push   %rsp
   1313a:	ff                   	(bad)  
   1313b:	ff                   	(bad)  
   1313c:	bc 54 ff ff 14       	mov    $0x14ffff54,%esp
   13141:	55                   	push   %rbp
   13142:	ff                   	(bad)  
   13143:	ff 2c 54             	ljmp   *(%rsp,%rdx,2)
   13146:	ff                   	(bad)  
   13147:	ff 2c 54             	ljmp   *(%rsp,%rdx,2)
   1314a:	ff                   	(bad)  
   1314b:	ff 2c 54             	ljmp   *(%rsp,%rdx,2)
   1314e:	ff                   	(bad)  
   1314f:	ff 2c 54             	ljmp   *(%rsp,%rdx,2)
   13152:	ff                   	(bad)  
   13153:	ff 2c 54             	ljmp   *(%rsp,%rdx,2)
   13156:	ff                   	(bad)  
   13157:	ff 2c 54             	ljmp   *(%rsp,%rdx,2)
   1315a:	ff                   	(bad)  
   1315b:	ff 2c 54             	ljmp   *(%rsp,%rdx,2)
   1315e:	ff                   	(bad)  
   1315f:	ff 2c 54             	ljmp   *(%rsp,%rdx,2)
   13162:	ff                   	(bad)  
   13163:	ff 2c 54             	ljmp   *(%rsp,%rdx,2)
   13166:	ff                   	(bad)  
   13167:	ff 2c 54             	ljmp   *(%rsp,%rdx,2)
   1316a:	ff                   	(bad)  
   1316b:	ff 2c 54             	ljmp   *(%rsp,%rdx,2)
   1316e:	ff                   	(bad)  
   1316f:	ff 2c 54             	ljmp   *(%rsp,%rdx,2)
   13172:	ff                   	(bad)  
   13173:	ff 2c 54             	ljmp   *(%rsp,%rdx,2)
   13176:	ff                   	(bad)  
   13177:	ff                   	.byte 0xff
   13178:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
   13179:	54                   	push   %rsp
   1317a:	ff                   	(bad)  
   1317b:	ff                   	.byte 0xff

Disassembly of section .niprod:

0000000000013180 <g_global_data>:
   13180:	64 00 17             	add    %dl,%fs:(%rdi)
   13183:	00 02                	add    %al,(%rdx)
   13185:	00 00                	add    %al,(%rax)
   13187:	00 01                	add    %al,(%rcx)
   13189:	00 00                	add    %al,(%rax)
   1318b:	00 00                	add    %al,(%rax)
   1318d:	00 00                	add    %al,(%rax)
   1318f:	00 02                	add    %al,(%rdx)
   13191:	00 00                	add    %al,(%rax)
   13193:	00 00                	add    %al,(%rax)
   13195:	00 00                	add    %al,(%rax)
   13197:	00 03                	add    %al,(%rbx)
   13199:	00 00                	add    %al,(%rax)
   1319b:	00 00                	add    %al,(%rax)
   1319d:	00 00                	add    %al,(%rax)
   1319f:	00 04 00             	add    %al,(%rax,%rax,1)
   131a2:	00 00                	add    %al,(%rax)
   131a4:	00 00                	add    %al,(%rax)
   131a6:	00 00                	add    %al,(%rax)
   131a8:	05 00 00 00 00       	add    $0x0,%eax
   131ad:	00 00                	add    %al,(%rax)
   131af:	00 06                	add    %al,(%rsi)
	...

0000000000013880 <SYNTHETIC_STATE>:
   13880:	7f 03                	jg     13885 <SYNTHETIC_STATE+0x5>
	...
   13896:	00 00                	add    %al,(%rax)
   13898:	bf 1f 00 00 ff       	mov    $0xff00001f,%edi
   1389d:	ff 00                	incl   (%rax)
	...
   13a7f:	00 02                	add    %al,(%rdx)
   13a81:	00 00                	add    %al,(%rax)
   13a83:	00 00                	add    %al,(%rax)
   13a85:	00 00                	add    %al,(%rax)
   13a87:	00 02                	add    %al,(%rdx)
   13a89:	00 00                	add    %al,(%rax)
   13a8b:	00 00                	add    %al,(%rax)
   13a8d:	00 00                	add    %al,(%rax)
   13a8f:	80 00 00             	addb   $0x0,(%rax)
	...

Disassembly of section .eh_frame_hdr:

0000000000013ac0 <__GNU_EH_FRAME_HDR>:
   13ac0:	01 1b                	add    %ebx,(%rbx)
   13ac2:	03 3b                	add    (%rbx),%edi
   13ac4:	34 08                	xor    $0x8,%al
   13ac6:	00 00                	add    %al,(%rax)
   13ac8:	05 01 00 00 40       	add    $0x40000001,%eax
   13acd:	d5                   	(bad)  
   13ace:	fe                   	(bad)  
   13acf:	ff b0 08 00 00 50    	push   0x50000008(%rax)
   13ad5:	d5                   	(bad)  
   13ad6:	fe                   	(bad)  
   13ad7:	ff                   	(bad)  
   13ad8:	d8 08                	fmuls  (%rax)
   13ada:	00 00                	add    %al,(%rax)
   13adc:	40 e5 fe             	rex in $0xfe,%eax
   13adf:	ff 00                	incl   (%rax)
   13ae1:	0d 00 00 50 e5       	or     $0xe5500000,%eax
   13ae6:	fe                   	(bad)  
   13ae7:	ff                   	(bad)  
   13ae8:	38 2d 00 00 70 e5    	cmp    %ch,-0x1a900000(%rip)        # ffffffffe5713aee <_end+0xffffffffe56e8ade>
   13aee:	fe                   	(bad)  
   13aef:	ff 68 2f             	ljmp   *0x2f(%rax)
   13af2:	00 00                	add    %al,(%rax)
   13af4:	90                   	nop
   13af5:	e5 fe                	in     $0xfe,%eax
   13af7:	ff b0 2f 00 00 a3    	push   -0x5cffffd1(%rax)
   13afd:	e5 fe                	in     $0xfe,%eax
   13aff:	ff 50 08             	call   *0x8(%rax)
   13b02:	00 00                	add    %al,(%rax)
   13b04:	ee                   	out    %al,(%dx)
   13b05:	e5 fe                	in     $0xfe,%eax
   13b07:	ff 68 08             	ljmp   *0x8(%rax)
   13b0a:	00 00                	add    %al,(%rax)
   13b0c:	15 e6 fe ff 7c       	adc    $0x7cfffee6,%eax
   13b11:	08 00                	or     %al,(%rax)
   13b13:	00 4b e6             	add    %cl,-0x1a(%rbx)
   13b16:	fe                   	(bad)  
   13b17:	ff 94 08 00 00 46 05 	call   *0x5460000(%rax,%rcx,1)
   13b1e:	ff                   	(bad)  
   13b1f:	ff f0                	push   %rax
   13b21:	08 00                	or     %al,(%rax)
   13b23:	00 35 06 ff ff 28    	add    %dh,0x28ffff06(%rip)        # 29013a2f <_end+0x28fe8a1f>
   13b29:	09 00                	or     %eax,(%rax)
   13b2b:	00 4e 06             	add    %cl,0x6(%rsi)
   13b2e:	ff                   	(bad)  
   13b2f:	ff 40 09             	incl   0x9(%rax)
   13b32:	00 00                	add    %al,(%rax)
   13b34:	3c 07                	cmp    $0x7,%al
   13b36:	ff                   	(bad)  
   13b37:	ff 70 09             	push   0x9(%rax)
   13b3a:	00 00                	add    %al,(%rax)
   13b3c:	a2 07 ff ff 94 09 00 	movabs %al,0x8b00000994ffff07
   13b43:	00 8b 
   13b45:	08 ff                	or     %bh,%bh
   13b47:	ff cc                	dec    %esp
   13b49:	09 00                	or     %eax,(%rax)
   13b4b:	00 a0 09 ff ff 08    	add    %ah,0x8ffff09(%rax)
   13b51:	0a 00                	or     (%rax),%al
   13b53:	00 40 0a             	add    %al,0xa(%rax)
   13b56:	ff                   	(bad)  
   13b57:	ff 1c 0a             	lcall  *(%rdx,%rcx,1)
   13b5a:	00 00                	add    %al,(%rax)
   13b5c:	90                   	nop
   13b5d:	1b ff                	sbb    %edi,%edi
   13b5f:	ff 50 0a             	call   *0xa(%rax)
   13b62:	00 00                	add    %al,(%rax)
   13b64:	a0 1d ff ff c0 0a 00 	movabs 0xe000000ac0ffff1d,%al
   13b6b:	00 e0 
   13b6d:	1d ff ff f8 0a       	sbb    $0xaf8ffff,%eax
   13b72:	00 00                	add    %al,(%rax)
   13b74:	70 1e                	jo     13b94 <__GNU_EH_FRAME_HDR+0xd4>
   13b76:	ff                   	(bad)  
   13b77:	ff 44 0b 00          	incl   0x0(%rbx,%rcx,1)
   13b7b:	00 00                	add    %al,(%rax)
   13b7d:	1f                   	(bad)  
   13b7e:	ff                   	(bad)  
   13b7f:	ff 90 0b 00 00 30    	call   *0x3000000b(%rax)
   13b85:	1f                   	(bad)  
   13b86:	ff                   	(bad)  
   13b87:	ff a4 0b 00 00 60 1f 	jmp    *0x1f600000(%rbx,%rcx,1)
   13b8e:	ff                   	(bad)  
   13b8f:	ff                   	(bad)  
   13b90:	b8 0b 00 00 a0       	mov    $0xa000000b,%eax
   13b95:	1f                   	(bad)  
   13b96:	ff                   	(bad)  
   13b97:	ff d0                	call   *%rax
   13b99:	0b 00                	or     (%rax),%eax
   13b9b:	00 c0                	add    %al,%al
   13b9d:	1f                   	(bad)  
   13b9e:	ff                   	(bad)  
   13b9f:	ff                   	(bad)  
   13ba0:	ec                   	in     (%dx),%al
   13ba1:	0b 00                	or     (%rax),%eax
   13ba3:	00 d0                	add    %dl,%al
   13ba5:	1f                   	(bad)  
   13ba6:	ff                   	(bad)  
   13ba7:	ff 00                	incl   (%rax)
   13ba9:	0c 00                	or     $0x0,%al
   13bab:	00 00                	add    %al,(%rax)
   13bad:	20 ff                	and    %bh,%bh
   13baf:	ff 28                	ljmp   *(%rax)
   13bb1:	0c 00                	or     $0x0,%al
   13bb3:	00 20                	add    %ah,(%rax)
   13bb5:	20 ff                	and    %bh,%bh
   13bb7:	ff a8 0c 00 00 40    	ljmp   *0x4000000c(%rax)
   13bbd:	21 ff                	and    %edi,%edi
   13bbf:	ff 14 0d 00 00 a0 21 	call   *0x21a00000(,%rcx,1)
   13bc6:	ff                   	(bad)  
   13bc7:	ff 28                	ljmp   *(%rax)
   13bc9:	0d 00 00 00 22       	or     $0x22000000,%eax
   13bce:	ff                   	(bad)  
   13bcf:	ff                   	(bad)  
   13bd0:	3c 0d                	cmp    $0xd,%al
   13bd2:	00 00                	add    %al,(%rax)
   13bd4:	e0 22                	loopne 13bf8 <__GNU_EH_FRAME_HDR+0x138>
   13bd6:	ff                   	(bad)  
   13bd7:	ff 5c 0d 00          	lcall  *0x0(%rbp,%rcx,1)
   13bdb:	00 40 23             	add    %al,0x23(%rax)
   13bde:	ff                   	(bad)  
   13bdf:	ff 74 0d 00          	push   0x0(%rbp,%rcx,1)
   13be3:	00 70 24             	add    %dh,0x24(%rax)
   13be6:	ff                   	(bad)  
   13be7:	ff b0 0d 00 00 90    	push   -0x6ffffff3(%rax)
   13bed:	24 ff                	and    $0xff,%al
   13bef:	ff c4                	inc    %esp
   13bf1:	0d 00 00 c0 24       	or     $0x24c00000,%eax
   13bf6:	ff                   	(bad)  
   13bf7:	ff e0                	jmp    *%rax
   13bf9:	0d 00 00 f0 24       	or     $0x24f00000,%eax
   13bfe:	ff                   	(bad)  
   13bff:	ff 00                	incl   (%rax)
   13c01:	0e                   	(bad)  
   13c02:	00 00                	add    %al,(%rax)
   13c04:	b0 25                	mov    $0x25,%al
   13c06:	ff                   	(bad)  
   13c07:	ff                   	(bad)  
   13c08:	3c 0e                	cmp    $0xe,%al
   13c0a:	00 00                	add    %al,(%rax)
   13c0c:	90                   	nop
   13c0d:	27                   	(bad)  
   13c0e:	ff                   	(bad)  
   13c0f:	ff 94 0e 00 00 f0 27 	call   *0x27f00000(%rsi,%rcx,1)
   13c16:	ff                   	(bad)  
   13c17:	ff a8 0e 00 00 50    	ljmp   *0x5000000e(%rax)
   13c1d:	28 ff                	sub    %bh,%bh
   13c1f:	ff c4                	inc    %esp
   13c21:	0e                   	(bad)  
   13c22:	00 00                	add    %al,(%rax)
   13c24:	c0 28 ff             	shrb   $0xff,(%rax)
   13c27:	ff                   	(bad)  
   13c28:	d8 0e                	fmuls  (%rsi)
   13c2a:	00 00                	add    %al,(%rax)
   13c2c:	20 29                	and    %ch,(%rcx)
   13c2e:	ff                   	(bad)  
   13c2f:	ff                   	(bad)  
   13c30:	ec                   	in     (%dx),%al
   13c31:	0e                   	(bad)  
   13c32:	00 00                	add    %al,(%rax)
   13c34:	e0 2a                	loopne 13c60 <__GNU_EH_FRAME_HDR+0x1a0>
   13c36:	ff                   	(bad)  
   13c37:	ff 30                	push   (%rax)
   13c39:	0f 00 00             	sldt   (%rax)
   13c3c:	40 2b ff             	rex sub %edi,%edi
   13c3f:	ff 64 0f 00          	jmp    *0x0(%rdi,%rcx,1)
   13c43:	00 10                	add    %dl,(%rax)
   13c45:	2c ff                	sub    $0xff,%al
   13c47:	ff a8 0f 00 00 30    	ljmp   *0x3000000f(%rax)
   13c4d:	2d ff ff f0 0f       	sub    $0xff0ffff,%eax
   13c52:	00 00                	add    %al,(%rax)
   13c54:	70 2d                	jo     13c83 <__GNU_EH_FRAME_HDR+0x1c3>
   13c56:	ff                   	(bad)  
   13c57:	ff 18                	lcall  *(%rax)
   13c59:	10 00                	adc    %al,(%rax)
   13c5b:	00 80 2d ff ff 2c    	add    %al,0x2cffff2d(%rax)
   13c61:	10 00                	adc    %al,(%rax)
   13c63:	00 50 2e             	add    %dl,0x2e(%rax)
   13c66:	ff                   	(bad)  
   13c67:	ff 58 10             	lcall  *0x10(%rax)
   13c6a:	00 00                	add    %al,(%rax)
   13c6c:	30 2f                	xor    %ch,(%rdi)
   13c6e:	ff                   	(bad)  
   13c6f:	ff b0 10 00 00 f0    	push   -0xffffff0(%rax)
   13c75:	30 ff                	xor    %bh,%bh
   13c77:	ff 10                	call   *(%rax)
   13c79:	11 00                	adc    %eax,(%rax)
   13c7b:	00 00                	add    %al,(%rax)
   13c7d:	31 ff                	xor    %edi,%edi
   13c7f:	ff 24 11             	jmp    *(%rcx,%rdx,1)
   13c82:	00 00                	add    %al,(%rax)
   13c84:	10 31                	adc    %dh,(%rcx)
   13c86:	ff                   	(bad)  
   13c87:	ff                   	(bad)  
   13c88:	38 11                	cmp    %dl,(%rcx)
   13c8a:	00 00                	add    %al,(%rax)
   13c8c:	20 31                	and    %dh,(%rcx)
   13c8e:	ff                   	(bad)  
   13c8f:	ff 4c 11 00          	decl   0x0(%rcx,%rdx,1)
   13c93:	00 30                	add    %dh,(%rax)
   13c95:	31 ff                	xor    %edi,%edi
   13c97:	ff 60 11             	jmp    *0x11(%rax)
   13c9a:	00 00                	add    %al,(%rax)
   13c9c:	40 31 ff             	rex xor %edi,%edi
   13c9f:	ff 74 11 00          	push   0x0(%rcx,%rdx,1)
   13ca3:	00 50 31             	add    %dl,0x31(%rax)
   13ca6:	ff                   	(bad)  
   13ca7:	ff 88 11 00 00 60    	decl   0x60000011(%rax)
   13cad:	31 ff                	xor    %edi,%edi
   13caf:	ff 9c 11 00 00 70 31 	lcall  *0x31700000(%rcx,%rdx,1)
   13cb6:	ff                   	(bad)  
   13cb7:	ff b0 11 00 00 d0    	push   -0x2fffffef(%rax)
   13cbd:	33 ff                	xor    %edi,%edi
   13cbf:	ff                   	(bad)  
   13cc0:	fc                   	cld    
   13cc1:	11 00                	adc    %eax,(%rax)
   13cc3:	00 30                	add    %dh,(%rax)
   13cc5:	36 ff                	ss (bad) 
   13cc7:	ff 20                	jmp    *(%rax)
   13cc9:	12 00                	adc    (%rax),%al
   13ccb:	00 10                	add    %dl,(%rax)
   13ccd:	37                   	(bad)  
   13cce:	ff                   	(bad)  
   13ccf:	ff 4c 12 00          	decl   0x0(%rdx,%rdx,1)
   13cd3:	00 f0                	add    %dh,%al
   13cd5:	37                   	(bad)  
   13cd6:	ff                   	(bad)  
   13cd7:	ff                   	(bad)  
   13cd8:	e8 12 00 00 20       	call   20013cef <_end+0x1ffe8cdf>
   13cdd:	38 ff                	cmp    %bh,%bh
   13cdf:	ff                   	(bad)  
   13ce0:	fc                   	cld    
   13ce1:	12 00                	adc    (%rax),%al
   13ce3:	00 60 38             	add    %ah,0x38(%rax)
   13ce6:	ff                   	(bad)  
   13ce7:	ff 18                	lcall  *(%rax)
   13ce9:	13 00                	adc    (%rax),%eax
   13ceb:	00 20                	add    %ah,(%rax)
   13ced:	39 ff                	cmp    %edi,%edi
   13cef:	ff 48 13             	decl   0x13(%rax)
   13cf2:	00 00                	add    %al,(%rax)
   13cf4:	30 39                	xor    %bh,(%rcx)
   13cf6:	ff                   	(bad)  
   13cf7:	ff 5c 13 00          	lcall  *0x0(%rbx,%rdx,1)
   13cfb:	00 60 39             	add    %ah,0x39(%rax)
   13cfe:	ff                   	(bad)  
   13cff:	ff 74 13 00          	push   0x0(%rbx,%rdx,1)
   13d03:	00 80 39 ff ff 8c    	add    %al,-0x730000c7(%rax)
   13d09:	13 00                	adc    (%rax),%eax
   13d0b:	00 f0                	add    %dh,%al
   13d0d:	39 ff                	cmp    %edi,%edi
   13d0f:	ff a0 13 00 00 50    	jmp    *0x50000013(%rax)
   13d15:	3a ff                	cmp    %bh,%bh
   13d17:	ff b4 13 00 00 70 3a 	push   0x3a700000(%rbx,%rdx,1)
   13d1e:	ff                   	(bad)  
   13d1f:	ff cc                	dec    %esp
   13d21:	13 00                	adc    (%rax),%eax
   13d23:	00 f0                	add    %dh,%al
   13d25:	3a ff                	cmp    %bh,%bh
   13d27:	ff e4                	jmp    *%rsp
   13d29:	13 00                	adc    (%rax),%eax
   13d2b:	00 60 3b             	add    %ah,0x3b(%rax)
   13d2e:	ff                   	(bad)  
   13d2f:	ff                   	(bad)  
   13d30:	f8                   	clc    
   13d31:	13 00                	adc    (%rax),%eax
   13d33:	00 c0                	add    %al,%al
   13d35:	3b ff                	cmp    %edi,%edi
   13d37:	ff 0c 14             	decl   (%rsp,%rdx,1)
   13d3a:	00 00                	add    %al,(%rax)
   13d3c:	e0 3b                	loopne 13d79 <__GNU_EH_FRAME_HDR+0x2b9>
   13d3e:	ff                   	(bad)  
   13d3f:	ff 24 14             	jmp    *(%rsp,%rdx,1)
   13d42:	00 00                	add    %al,(%rax)
   13d44:	30 3c ff             	xor    %bh,(%rdi,%rdi,8)
   13d47:	ff                   	(bad)  
   13d48:	38 14 00             	cmp    %dl,(%rax,%rax,1)
   13d4b:	00 70 3c             	add    %dh,0x3c(%rax)
   13d4e:	ff                   	(bad)  
   13d4f:	ff 60 14             	jmp    *0x14(%rax)
   13d52:	00 00                	add    %al,(%rax)
   13d54:	a0 3c ff ff 7c 14 00 	movabs 0xd00000147cffff3c,%al
   13d5b:	00 d0 
   13d5d:	3c ff                	cmp    $0xff,%al
   13d5f:	ff 94 14 00 00 00 3d 	call   *0x3d000000(%rsp,%rdx,1)
   13d66:	ff                   	(bad)  
   13d67:	ff a8 14 00 00 20    	ljmp   *0x20000014(%rax)
   13d6d:	3d ff ff c0 14       	cmp    $0x14c0ffff,%eax
   13d72:	00 00                	add    %al,(%rax)
   13d74:	40 3d ff ff d4 14    	rex cmp $0x14d4ffff,%eax
   13d7a:	00 00                	add    %al,(%rax)
   13d7c:	60                   	(bad)  
   13d7d:	3d ff ff e8 14       	cmp    $0x14e8ffff,%eax
   13d82:	00 00                	add    %al,(%rax)
   13d84:	90                   	nop
   13d85:	3d ff ff 08 15       	cmp    $0x1508ffff,%eax
   13d8a:	00 00                	add    %al,(%rax)
   13d8c:	80 41 ff ff          	addb   $0xff,-0x1(%rcx)
   13d90:	2c 15                	sub    $0x15,%al
   13d92:	00 00                	add    %al,(%rax)
   13d94:	d0 42 ff             	rolb   -0x1(%rdx)
   13d97:	ff 68 15             	ljmp   *0x15(%rax)
   13d9a:	00 00                	add    %al,(%rax)
   13d9c:	80 43 ff ff          	addb   $0xff,-0x1(%rbx)
   13da0:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
   13da1:	15 00 00 30 47       	adc    $0x47300000,%eax
   13da6:	ff                   	(bad)  
   13da7:	ff f0                	push   %rax
   13da9:	15 00 00 60 47       	adc    $0x47600000,%eax
   13dae:	ff                   	(bad)  
   13daf:	ff 08                	decl   (%rax)
   13db1:	16                   	(bad)  
   13db2:	00 00                	add    %al,(%rax)
   13db4:	d0 47 ff             	rolb   -0x1(%rdi)
   13db7:	ff 1c 16             	lcall  *(%rsi,%rdx,1)
   13dba:	00 00                	add    %al,(%rax)
   13dbc:	b0 49                	mov    $0x49,%al
   13dbe:	ff                   	(bad)  
   13dbf:	ff 54 16 00          	call   *0x0(%rsi,%rdx,1)
   13dc3:	00 e0                	add    %ah,%al
   13dc5:	4b ff                	rex.WXB (bad) 
   13dc7:	ff d0                	call   *%rax
   13dc9:	16                   	(bad)  
   13dca:	00 00                	add    %al,(%rax)
   13dcc:	80 4c ff ff e4       	orb    $0xe4,-0x1(%rdi,%rdi,8)
   13dd1:	16                   	(bad)  
   13dd2:	00 00                	add    %al,(%rax)
   13dd4:	70 4d                	jo     13e23 <__GNU_EH_FRAME_HDR+0x363>
   13dd6:	ff                   	(bad)  
   13dd7:	ff                   	(bad)  
   13dd8:	f8                   	clc    
   13dd9:	16                   	(bad)  
   13dda:	00 00                	add    %al,(%rax)
   13ddc:	60                   	(bad)  
   13ddd:	4e ff                	rex.WRX (bad) 
   13ddf:	ff 0c 17             	decl   (%rdi,%rdx,1)
   13de2:	00 00                	add    %al,(%rax)
   13de4:	40 50                	rex push %rax
   13de6:	ff                   	(bad)  
   13de7:	ff 60 17             	jmp    *0x17(%rax)
   13dea:	00 00                	add    %al,(%rax)
   13dec:	40 51                	rex push %rcx
   13dee:	ff                   	(bad)  
   13def:	ff b0 17 00 00 70    	push   0x70000017(%rax)
   13df5:	52                   	push   %rdx
   13df6:	ff                   	(bad)  
   13df7:	ff                   	(bad)  
   13df8:	ec                   	in     (%dx),%al
   13df9:	17                   	(bad)  
   13dfa:	00 00                	add    %al,(%rax)
   13dfc:	90                   	nop
   13dfd:	52                   	push   %rdx
   13dfe:	ff                   	(bad)  
   13dff:	ff 00                	incl   (%rax)
   13e01:	18 00                	sbb    %al,(%rax)
   13e03:	00 30                	add    %dh,(%rax)
   13e05:	53                   	push   %rbx
   13e06:	ff                   	(bad)  
   13e07:	ff 2c 18             	ljmp   *(%rax,%rbx,1)
   13e0a:	00 00                	add    %al,(%rax)
   13e0c:	00 54 ff ff          	add    %dl,-0x1(%rdi,%rdi,8)
   13e10:	98                   	cwtl   
   13e11:	19 00                	sbb    %eax,(%rax)
   13e13:	00 20                	add    %ah,(%rax)
   13e15:	54                   	push   %rsp
   13e16:	ff                   	(bad)  
   13e17:	ff 68 1a             	ljmp   *0x1a(%rax)
   13e1a:	00 00                	add    %al,(%rax)
   13e1c:	a0 54 ff ff 98 1a 00 	movabs 0xd000001a98ffff54,%al
   13e23:	00 d0 
   13e25:	54                   	push   %rsp
   13e26:	ff                   	(bad)  
   13e27:	ff b4 1a 00 00 00 55 	push   0x55000000(%rdx,%rbx,1)
   13e2e:	ff                   	(bad)  
   13e2f:	ff d0                	call   *%rax
   13e31:	1a 00                	sbb    (%rax),%al
   13e33:	00 20                	add    %ah,(%rax)
   13e35:	55                   	push   %rbp
   13e36:	ff                   	(bad)  
   13e37:	ff                   	(bad)  
   13e38:	ec                   	in     (%dx),%al
   13e39:	1a 00                	sbb    (%rax),%al
   13e3b:	00 50 55             	add    %dl,0x55(%rax)
   13e3e:	ff                   	(bad)  
   13e3f:	ff 00                	incl   (%rax)
   13e41:	1b 00                	sbb    (%rax),%eax
   13e43:	00 70 55             	add    %dh,0x55(%rax)
   13e46:	ff                   	(bad)  
   13e47:	ff 14 1b             	call   *(%rbx,%rbx,1)
   13e4a:	00 00                	add    %al,(%rax)
   13e4c:	30 56 ff             	xor    %dl,-0x1(%rsi)
   13e4f:	ff 28                	ljmp   *(%rax)
   13e51:	1b 00                	sbb    (%rax),%eax
   13e53:	00 f0                	add    %dh,%al
   13e55:	56                   	push   %rsi
   13e56:	ff                   	(bad)  
   13e57:	ff                   	(bad)  
   13e58:	3c 1b                	cmp    $0x1b,%al
   13e5a:	00 00                	add    %al,(%rax)
   13e5c:	10 57 ff             	adc    %dl,-0x1(%rdi)
   13e5f:	ff 50 1b             	call   *0x1b(%rax)
   13e62:	00 00                	add    %al,(%rax)
   13e64:	d0 57 ff             	rclb   -0x1(%rdi)
   13e67:	ff 64 1b 00          	jmp    *0x0(%rbx,%rbx,1)
   13e6b:	00 f0                	add    %dh,%al
   13e6d:	57                   	push   %rdi
   13e6e:	ff                   	(bad)  
   13e6f:	ff                   	(bad)  
   13e70:	78 1b                	js     13e8d <__GNU_EH_FRAME_HDR+0x3cd>
   13e72:	00 00                	add    %al,(%rax)
   13e74:	10 58 ff             	adc    %bl,-0x1(%rax)
   13e77:	ff 8c 1b 00 00 d0 58 	decl   0x58d00000(%rbx,%rbx,1)
   13e7e:	ff                   	(bad)  
   13e7f:	ff a0 1b 00 00 f0    	jmp    *-0xfffffe5(%rax)
   13e85:	58                   	pop    %rax
   13e86:	ff                   	(bad)  
   13e87:	ff b4 1b 00 00 30 59 	push   0x59300000(%rbx,%rbx,1)
   13e8e:	ff                   	(bad)  
   13e8f:	ff e0                	jmp    *%rax
   13e91:	1b 00                	sbb    (%rax),%eax
   13e93:	00 70 5b             	add    %dh,0x5b(%rax)
   13e96:	ff                   	(bad)  
   13e97:	ff 30                	push   (%rax)
   13e99:	1c 00                	sbb    $0x0,%al
   13e9b:	00 50 5d             	add    %dl,0x5d(%rax)
   13e9e:	ff                   	(bad)  
   13e9f:	ff 60 1c             	jmp    *0x1c(%rax)
   13ea2:	00 00                	add    %al,(%rax)
   13ea4:	60                   	(bad)  
   13ea5:	5d                   	pop    %rbp
   13ea6:	ff                   	(bad)  
   13ea7:	ff 74 1c 00          	push   0x0(%rsp,%rbx,1)
   13eab:	00 70 5d             	add    %dh,0x5d(%rax)
   13eae:	ff                   	(bad)  
   13eaf:	ff 88 1c 00 00 90    	decl   -0x6fffffe4(%rax)
   13eb5:	5d                   	pop    %rbp
   13eb6:	ff                   	(bad)  
   13eb7:	ff 9c 1c 00 00 d0 5d 	lcall  *0x5dd00000(%rsp,%rbx,1)
   13ebe:	ff                   	(bad)  
   13ebf:	ff                   	(bad)  
   13ec0:	bc 1c 00 00 10       	mov    $0x1000001c,%esp
   13ec5:	5e                   	pop    %rsi
   13ec6:	ff                   	(bad)  
   13ec7:	ff                   	(bad)  
   13ec8:	dc 1c 00             	fcompl (%rax,%rax,1)
   13ecb:	00 90 5e ff ff 04    	add    %dl,0x4ffff5e(%rax)
   13ed1:	1d 00 00 c0 5e       	sbb    $0x5ec00000,%eax
   13ed6:	ff                   	(bad)  
   13ed7:	ff 18                	lcall  *(%rax)
   13ed9:	1d 00 00 f0 5e       	sbb    $0x5ef00000,%eax
   13ede:	ff                   	(bad)  
   13edf:	ff 2c 1d 00 00 20 5f 	ljmp   *0x5f200000(,%rbx,1)
   13ee6:	ff                   	(bad)  
   13ee7:	ff 40 1d             	incl   0x1d(%rax)
   13eea:	00 00                	add    %al,(%rax)
   13eec:	50                   	push   %rax
   13eed:	5f                   	pop    %rdi
   13eee:	ff                   	(bad)  
   13eef:	ff 54 1d 00          	call   *0x0(%rbp,%rbx,1)
   13ef3:	00 c0                	add    %al,%al
   13ef5:	5f                   	pop    %rdi
   13ef6:	ff                   	(bad)  
   13ef7:	ff 68 1d             	ljmp   *0x1d(%rax)
   13efa:	00 00                	add    %al,(%rax)
   13efc:	50                   	push   %rax
   13efd:	61                   	(bad)  
   13efe:	ff                   	(bad)  
   13eff:	ff ac 1d 00 00 10 62 	ljmp   *0x62100000(%rbp,%rbx,1)
   13f06:	ff                   	(bad)  
   13f07:	ff e0                	jmp    *%rax
   13f09:	1d 00 00 20 65       	sbb    $0x65200000,%eax
   13f0e:	ff                   	(bad)  
   13f0f:	ff 44 1e 00          	incl   0x0(%rsi,%rbx,1)
   13f13:	00 00                	add    %al,(%rax)
   13f15:	66 ff                	data16 (bad) 
   13f17:	ff 94 1e 00 00 10 67 	call   *0x67100000(%rsi,%rbx,1)
   13f1e:	ff                   	(bad)  
   13f1f:	ff                   	(bad)  
   13f20:	b8 1e 00 00 60       	mov    $0x6000001e,%eax
   13f25:	67 ff                	addr32 (bad) 
   13f27:	ff d4                	call   *%rsp
   13f29:	1e                   	(bad)  
   13f2a:	00 00                	add    %al,(%rax)
   13f2c:	a0 67 ff ff fc 1e 00 	movabs 0x8000001efcffff67,%al
   13f33:	00 80 
   13f35:	68 ff ff 28 1f       	push   $0x1f28ffff
   13f3a:	00 00                	add    %al,(%rax)
   13f3c:	70 69                	jo     13fa7 <__GNU_EH_FRAME_HDR+0x4e7>
   13f3e:	ff                   	(bad)  
   13f3f:	ff 54 1f 00          	call   *0x0(%rdi,%rbx,1)
   13f43:	00 40 6a             	add    %al,0x6a(%rax)
   13f46:	ff                   	(bad)  
   13f47:	ff b4 1f 00 00 b0 6b 	push   0x6bb00000(%rdi,%rbx,1)
   13f4e:	ff                   	(bad)  
   13f4f:	ff e0                	jmp    *%rax
   13f51:	1f                   	(bad)  
   13f52:	00 00                	add    %al,(%rax)
   13f54:	f0 6d                	lock insl (%dx),%es:(%rdi)
   13f56:	ff                   	(bad)  
   13f57:	ff 10                	call   *(%rax)
   13f59:	20 00                	and    %al,(%rax)
   13f5b:	00 60 6e             	add    %ah,0x6e(%rax)
   13f5e:	ff                   	(bad)  
   13f5f:	ff 44 20 00          	incl   0x0(%rax,%riz,1)
   13f63:	00 60 6f             	add    %ah,0x6f(%rax)
   13f66:	ff                   	(bad)  
   13f67:	ff                   	(bad)  
   13f68:	78 20                	js     13f8a <__GNU_EH_FRAME_HDR+0x4ca>
   13f6a:	00 00                	add    %al,(%rax)
   13f6c:	b0 6f                	mov    $0x6f,%al
   13f6e:	ff                   	(bad)  
   13f6f:	ff b0 20 00 00 d0    	push   -0x2fffffe0(%rax)
   13f75:	70 ff                	jo     13f76 <__GNU_EH_FRAME_HDR+0x4b6>
   13f77:	ff 28                	ljmp   *(%rax)
   13f79:	21 00                	and    %eax,(%rax)
   13f7b:	00 e0                	add    %ah,%al
   13f7d:	71 ff                	jno    13f7e <__GNU_EH_FRAME_HDR+0x4be>
   13f7f:	ff a4 21 00 00 d0 72 	jmp    *0x72d00000(%rcx,%riz,1)
   13f86:	ff                   	(bad)  
   13f87:	ff d4                	call   *%rsp
   13f89:	21 00                	and    %eax,(%rax)
   13f8b:	00 50 74             	add    %dl,0x74(%rax)
   13f8e:	ff                   	(bad)  
   13f8f:	ff 50 22             	call   *0x22(%rax)
   13f92:	00 00                	add    %al,(%rax)
   13f94:	a0 75 ff ff c0 22 00 	movabs 0x90000022c0ffff75,%al
   13f9b:	00 90 
   13f9d:	76 ff                	jbe    13f9e <__GNU_EH_FRAME_HDR+0x4de>
   13f9f:	ff 00                	incl   (%rax)
   13fa1:	23 00                	and    (%rax),%eax
   13fa3:	00 d0                	add    %dl,%al
   13fa5:	77 ff                	ja     13fa6 <__GNU_EH_FRAME_HDR+0x4e6>
   13fa7:	ff 34 23             	push   (%rbx,%riz,1)
   13faa:	00 00                	add    %al,(%rax)
   13fac:	50                   	push   %rax
   13fad:	78 ff                	js     13fae <__GNU_EH_FRAME_HDR+0x4ee>
   13faf:	ff 48 23             	decl   0x23(%rax)
   13fb2:	00 00                	add    %al,(%rax)
   13fb4:	d0 78 ff             	sarb   -0x1(%rax)
   13fb7:	ff 5c 23 00          	lcall  *0x0(%rbx,%riz,1)
   13fbb:	00 60 79             	add    %ah,0x79(%rax)
   13fbe:	ff                   	(bad)  
   13fbf:	ff 70 23             	push   0x23(%rax)
   13fc2:	00 00                	add    %al,(%rax)
   13fc4:	70 79                	jo     1403f <__GNU_EH_FRAME_HDR+0x57f>
   13fc6:	ff                   	(bad)  
   13fc7:	ff 84 23 00 00 80 79 	incl   0x79800000(%rbx,%riz,1)
   13fce:	ff                   	(bad)  
   13fcf:	ff 98 23 00 00 90    	lcall  *-0x6fffffdd(%rax)
   13fd5:	79 ff                	jns    13fd6 <__GNU_EH_FRAME_HDR+0x516>
   13fd7:	ff ac 23 00 00 a0 79 	ljmp   *0x79a00000(%rbx,%riz,1)
   13fde:	ff                   	(bad)  
   13fdf:	ff c0                	inc    %eax
   13fe1:	23 00                	and    (%rax),%eax
   13fe3:	00 c0                	add    %al,%al
   13fe5:	79 ff                	jns    13fe6 <__GNU_EH_FRAME_HDR+0x526>
   13fe7:	ff d4                	call   *%rsp
   13fe9:	23 00                	and    (%rax),%eax
   13feb:	00 00                	add    %al,(%rax)
   13fed:	7a ff                	jp     13fee <__GNU_EH_FRAME_HDR+0x52e>
   13fef:	ff f4                	push   %rsp
   13ff1:	23 00                	and    (%rax),%eax
   13ff3:	00 30                	add    %dh,(%rax)
   13ff5:	7c ff                	jl     13ff6 <__GNU_EH_FRAME_HDR+0x536>
   13ff7:	ff 28                	ljmp   *(%rax)
   13ff9:	24 00                	and    $0x0,%al
   13ffb:	00 80 7c ff ff 3c    	add    %al,0x3cffff7c(%rax)
   14001:	24 00                	and    $0x0,%al
   14003:	00 80 7e ff ff 88    	add    %al,-0x77000082(%rax)
   14009:	24 00                	and    $0x0,%al
   1400b:	00 80 7f ff ff e0    	add    %al,-0x1f000081(%rax)
   14011:	24 00                	and    $0x0,%al
   14013:	00 a0 7f ff ff fc    	add    %ah,-0x3000081(%rax)
   14019:	24 00                	and    $0x0,%al
   1401b:	00 b0 7f ff ff 10    	add    %dh,0x10ffff7f(%rax)
   14021:	25 00 00 c0 7f       	and    $0x7fc00000,%eax
   14026:	ff                   	(bad)  
   14027:	ff 24 25 00 00 d0 7f 	jmp    *0x7fd00000
   1402e:	ff                   	(bad)  
   1402f:	ff                   	(bad)  
   14030:	38 25 00 00 e0 7f    	cmp    %ah,0x7fe00000(%rip)        # 7fe14036 <_end+0x7fde9026>
   14036:	ff                   	(bad)  
   14037:	ff 4c 25 00          	decl   0x0(%rbp,%riz,1)
   1403b:	00 f0                	add    %dh,%al
   1403d:	7f ff                	jg     1403e <__GNU_EH_FRAME_HDR+0x57e>
   1403f:	ff 60 25             	jmp    *0x25(%rax)
   14042:	00 00                	add    %al,(%rax)
   14044:	00 80 ff ff 78 25    	add    %al,0x2578ffff(%rax)
   1404a:	00 00                	add    %al,(%rax)
   1404c:	c0 81 ff ff bc 25 00 	rolb   $0x0,0x25bcffff(%rcx)
   14053:	00 c0                	add    %al,%al
   14055:	84 ff                	test   %bh,%bh
   14057:	ff 2c 26             	ljmp   *(%rsi,%riz,1)
   1405a:	00 00                	add    %al,(%rax)
   1405c:	f0 84 ff             	lock test %bh,%bh
   1405f:	ff 48 26             	decl   0x26(%rax)
   14062:	00 00                	add    %al,(%rax)
   14064:	b0 85                	mov    $0x85,%al
   14066:	ff                   	(bad)  
   14067:	ff 84 26 00 00 c0 85 	incl   -0x7a400000(%rsi,%riz,1)
   1406e:	ff                   	(bad)  
   1406f:	ff 98 26 00 00 80    	lcall  *-0x7fffffda(%rax)
   14075:	86 ff                	xchg   %bh,%bh
   14077:	ff d4                	call   *%rsp
   14079:	26 00 00             	es add %al,(%rax)
   1407c:	90                   	nop
   1407d:	86 ff                	xchg   %bh,%bh
   1407f:	ff                   	(bad)  
   14080:	e8 26 00 00 50       	call   500140ab <_end+0x4ffe909b>
   14085:	87 ff                	xchg   %edi,%edi
   14087:	ff 24 27             	jmp    *(%rdi,%riz,1)
   1408a:	00 00                	add    %al,(%rax)
   1408c:	60                   	(bad)  
   1408d:	87 ff                	xchg   %edi,%edi
   1408f:	ff                   	(bad)  
   14090:	38 27                	cmp    %ah,(%rdi)
   14092:	00 00                	add    %al,(%rax)
   14094:	70 88                	jo     1401e <__GNU_EH_FRAME_HDR+0x55e>
   14096:	ff                   	(bad)  
   14097:	ff 84 27 00 00 80 88 	incl   -0x77800000(%rdi,%riz,1)
   1409e:	ff                   	(bad)  
   1409f:	ff 98 27 00 00 60    	lcall  *0x60000027(%rax)
   140a5:	89 ff                	mov    %edi,%edi
   140a7:	ff cc                	dec    %esp
   140a9:	27                   	(bad)  
   140aa:	00 00                	add    %al,(%rax)
   140ac:	40 8a ff             	mov    %dil,%dil
   140af:	ff                   	(bad)  
   140b0:	f8                   	clc    
   140b1:	27                   	(bad)  
   140b2:	00 00                	add    %al,(%rax)
   140b4:	30 8b ff ff 3c 28    	xor    %cl,0x283cffff(%rbx)
   140ba:	00 00                	add    %al,(%rax)
   140bc:	40 8b ff             	rex mov %edi,%edi
   140bf:	ff 50 28             	call   *0x28(%rax)
   140c2:	00 00                	add    %al,(%rax)
   140c4:	c0 8b ff ff 88 28 00 	rorb   $0x0,0x2888ffff(%rbx)
   140cb:	00 30                	add    %dh,(%rax)
   140cd:	8c ff                	mov    %?,%edi
   140cf:	ff 9c 28 00 00 50 8d 	lcall  *-0x72b00000(%rax,%rbp,1)
   140d6:	ff                   	(bad)  
   140d7:	ff c8                	dec    %eax
   140d9:	28 00                	sub    %al,(%rax)
   140db:	00 e0                	add    %ah,%al
   140dd:	8d                   	(bad)  
   140de:	ff                   	(bad)  
   140df:	ff e4                	jmp    *%rsp
   140e1:	28 00                	sub    %al,(%rax)
   140e3:	00 f0                	add    %dh,%al
   140e5:	8d                   	(bad)  
   140e6:	ff                   	(bad)  
   140e7:	ff                   	(bad)  
   140e8:	f8                   	clc    
   140e9:	28 00                	sub    %al,(%rax)
   140eb:	00 20                	add    %ah,(%rax)
   140ed:	96                   	xchg   %eax,%esi
   140ee:	ff                   	(bad)  
   140ef:	ff 34 29             	push   (%rcx,%rbp,1)
   140f2:	00 00                	add    %al,(%rax)
   140f4:	10 97 ff ff 50 29    	adc    %dl,0x2950ffff(%rdi)
   140fa:	00 00                	add    %al,(%rax)
   140fc:	60                   	(bad)  
   140fd:	b2 ff                	mov    $0xff,%dl
   140ff:	ff 9c 29 00 00 00 b5 	lcall  *-0x4b000000(%rcx,%rbp,1)
   14106:	ff                   	(bad)  
   14107:	ff 00                	incl   (%rax)
   14109:	2a 00                	sub    (%rax),%al
   1410b:	00 00                	add    %al,(%rax)
   1410d:	c0 ff ff             	sar    $0xff,%bh
   14110:	64 2a 00             	sub    %fs:(%rax),%al
   14113:	00 70 c0             	add    %dh,-0x40(%rax)
   14116:	ff                   	(bad)  
   14117:	ff 90 2a 00 00 80    	call   *-0x7fffffd6(%rax)
   1411d:	c7                   	(bad)  
   1411e:	ff                   	(bad)  
   1411f:	ff                   	(bad)  
   14120:	f8                   	clc    
   14121:	2a 00                	sub    (%rax),%al
   14123:	00 a0 c7 ff ff 0c    	add    %ah,0xcffffc7(%rax)
   14129:	2b 00                	sub    (%rax),%eax
   1412b:	00 30                	add    %dh,(%rax)
   1412d:	c8 ff ff 30          	enter  $0xffff,$0x30
   14131:	2b 00                	sub    (%rax),%eax
   14133:	00 f0                	add    %dh,%al
   14135:	c9                   	leave  
   14136:	ff                   	(bad)  
   14137:	ff 70 2b             	push   0x2b(%rax)
   1413a:	00 00                	add    %al,(%rax)
   1413c:	c0 ca ff             	ror    $0xff,%dl
   1413f:	ff 84 2b 00 00 e0 ca 	incl   -0x35200000(%rbx,%rbp,1)
   14146:	ff                   	(bad)  
   14147:	ff 98 2b 00 00 a0    	lcall  *-0x5fffffd5(%rax)
   1414d:	cb                   	lret   
   1414e:	ff                   	(bad)  
   1414f:	ff d4                	call   *%rsp
   14151:	2b 00                	sub    (%rax),%eax
   14153:	00 90 cc ff ff 20    	add    %dl,0x20ffffcc(%rax)
   14159:	2c 00                	sub    $0x0,%al
   1415b:	00 b0 cc ff ff 34    	add    %dh,0x34ffffcc(%rax)
   14161:	2c 00                	sub    $0x0,%al
   14163:	00 f0                	add    %dh,%al
   14165:	cd ff                	int    $0xff
   14167:	ff 98 2c 00 00 f0    	lcall  *-0xfffffd4(%rax)
   1416d:	ce                   	(bad)  
   1416e:	ff                   	(bad)  
   1416f:	ff                   	(bad)  
   14170:	dc 2c 00             	fsubrl (%rax,%rax,1)
   14173:	00 00                	add    %al,(%rax)
   14175:	cf                   	iret   
   14176:	ff                   	(bad)  
   14177:	ff f0                	push   %rax
   14179:	2c 00                	sub    $0x0,%al
   1417b:	00 50 cf             	add    %dl,-0x31(%rax)
   1417e:	ff                   	(bad)  
   1417f:	ff 14 2d 00 00 a0 cf 	call   *-0x30600000(,%rbp,1)
   14186:	ff                   	(bad)  
   14187:	ff 4c 2d 00          	decl   0x0(%rbp,%rbp,1)
   1418b:	00 b0 cf ff ff 60    	add    %dh,0x60ffffcf(%rax)
   14191:	2d 00 00 c0 cf       	sub    $0xcfc00000,%eax
   14196:	ff                   	(bad)  
   14197:	ff                   	(bad)  
   14198:	78 2d                	js     141c7 <__GNU_EH_FRAME_HDR+0x707>
   1419a:	00 00                	add    %al,(%rax)
   1419c:	40 d0 ff             	sar    %dil
   1419f:	ff 90 2d 00 00 50    	call   *0x5000002d(%rax)
   141a5:	d0 ff                	sar    %bh
   141a7:	ff ac 2d 00 00 60 d0 	ljmp   *-0x2fa00000(%rbp,%rbp,1)
   141ae:	ff                   	(bad)  
   141af:	ff c8                	dec    %eax
   141b1:	2d 00 00 80 d0       	sub    $0xd0800000,%eax
   141b6:	ff                   	(bad)  
   141b7:	ff e0                	jmp    *%rax
   141b9:	2d 00 00 d0 d0       	sub    $0xd0d00000,%eax
   141be:	ff                   	(bad)  
   141bf:	ff 04 2e             	incl   (%rsi,%rbp,1)
   141c2:	00 00                	add    %al,(%rax)
   141c4:	50                   	push   %rax
   141c5:	d1 ff                	sar    %edi
   141c7:	ff 48 2e             	decl   0x2e(%rax)
   141ca:	00 00                	add    %al,(%rax)
   141cc:	e0 d1                	loopne 1419f <__GNU_EH_FRAME_HDR+0x6df>
   141ce:	ff                   	(bad)  
   141cf:	ff 90 2e 00 00 80    	call   *-0x7fffffd2(%rax)
   141d5:	d2 ff                	sar    %cl,%bh
   141d7:	ff e0                	jmp    *%rax
   141d9:	2e 00 00             	cs add %al,(%rax)
   141dc:	00 d3                	add    %dl,%bl
   141de:	ff                   	(bad)  
   141df:	ff 0c 2f             	decl   (%rdi,%rbp,1)
   141e2:	00 00                	add    %al,(%rax)
   141e4:	b0 d4                	mov    $0xd4,%al
   141e6:	ff                   	(bad)  
   141e7:	ff                   	(bad)  
   141e8:	38 2f                	cmp    %ch,(%rdi)
   141ea:	00 00                	add    %al,(%rax)
   141ec:	10 d5                	adc    %dl,%ch
   141ee:	ff                   	(bad)  
   141ef:	ff 50 2f             	call   *0x2f(%rax)
   141f2:	00 00                	add    %al,(%rax)
   141f4:	20 d6                	and    %dl,%dh
   141f6:	ff                   	(bad)  
   141f7:	ff                   	(bad)  
   141f8:	7c 2f                	jl     14229 <__GNU_EH_FRAME_HDR+0x769>
   141fa:	00 00                	add    %al,(%rax)
   141fc:	30 d6                	xor    %dl,%dh
   141fe:	ff                   	(bad)  
   141ff:	ff 90 2f 00 00 80    	call   *-0x7fffffd1(%rax)
   14205:	d8 ff                	fdivr  %st(7),%st
   14207:	ff c4                	inc    %esp
   14209:	2f                   	(bad)  
   1420a:	00 00                	add    %al,(%rax)
   1420c:	10 da                	adc    %bl,%dl
   1420e:	ff                   	(bad)  
   1420f:	ff f4                	push   %rsp
   14211:	2f                   	(bad)  
   14212:	00 00                	add    %al,(%rax)
   14214:	40 db ff             	rex (bad) 
   14217:	ff 40 0c             	incl   0xc(%rax)
   1421a:	00 00                	add    %al,(%rax)
   1421c:	80 de ff             	sbb    $0xff,%dh
   1421f:	ff                   	(bad)  
   14220:	78 0c                	js     1422e <__GNU_EH_FRAME_HDR+0x76e>
   14222:	00 00                	add    %al,(%rax)
   14224:	20 e0                	and    %ah,%al
   14226:	ff                   	(bad)  
   14227:	ff                   	(bad)  
   14228:	e8 0c 00 00 40       	call   40014239 <_end+0x3ffe9229>
   1422d:	e0 ff                	loopne 1422e <__GNU_EH_FRAME_HDR+0x76e>
   1422f:	ff 88 12 00 00 52    	decl   0x52000012(%rax)
   14235:	e2 ff                	loop   14236 <__GNU_EH_FRAME_HDR+0x776>
   14237:	ff 58 18             	lcall  *0x18(%rax)
   1423a:	00 00                	add    %al,(%rax)
   1423c:	53                   	push   %rbx
   1423d:	e2 ff                	loop   1423e <__GNU_EH_FRAME_HDR+0x77e>
   1423f:	ff 6c 18 00          	ljmp   *0x0(%rax,%rbx,1)
   14243:	00 55 e2             	add    %dl,-0x1e(%rbp)
   14246:	ff                   	(bad)  
   14247:	ff 80 18 00 00 57    	incl   0x57000018(%rax)
   1424d:	e2 ff                	loop   1424e <__GNU_EH_FRAME_HDR+0x78e>
   1424f:	ff 94 18 00 00 59 e2 	call   *-0x1da70000(%rax,%rbx,1)
   14256:	ff                   	(bad)  
   14257:	ff a8 18 00 00 5b    	ljmp   *0x5b000018(%rax)
   1425d:	e2 ff                	loop   1425e <__GNU_EH_FRAME_HDR+0x79e>
   1425f:	ff                   	(bad)  
   14260:	bc 18 00 00 5d       	mov    $0x5d000018,%esp
   14265:	e2 ff                	loop   14266 <__GNU_EH_FRAME_HDR+0x7a6>
   14267:	ff d0                	call   *%rax
   14269:	18 00                	sbb    %al,(%rax)
   1426b:	00 5f e2             	add    %bl,-0x1e(%rdi)
   1426e:	ff                   	(bad)  
   1426f:	ff e4                	jmp    *%rsp
   14271:	18 00                	sbb    %al,(%rax)
   14273:	00 61 e2             	add    %ah,-0x1e(%rcx)
   14276:	ff                   	(bad)  
   14277:	ff                   	(bad)  
   14278:	f8                   	clc    
   14279:	18 00                	sbb    %al,(%rax)
   1427b:	00 64 e2 ff          	add    %ah,-0x1(%rdx,%riz,8)
   1427f:	ff 0c 19             	decl   (%rcx,%rbx,1)
   14282:	00 00                	add    %al,(%rax)
   14284:	67 e2 ff             	loopl  14286 <__GNU_EH_FRAME_HDR+0x7c6>
   14287:	ff 20                	jmp    *(%rax)
   14289:	19 00                	sbb    %eax,(%rax)
   1428b:	00 6a e2             	add    %ch,-0x1e(%rdx)
   1428e:	ff                   	(bad)  
   1428f:	ff 34 19             	push   (%rcx,%rbx,1)
   14292:	00 00                	add    %al,(%rax)
   14294:	6d                   	insl   (%dx),%es:(%rdi)
   14295:	e2 ff                	loop   14296 <__GNU_EH_FRAME_HDR+0x7d6>
   14297:	ff 48 19             	decl   0x19(%rax)
   1429a:	00 00                	add    %al,(%rax)
   1429c:	70 e2                	jo     14280 <__GNU_EH_FRAME_HDR+0x7c0>
   1429e:	ff                   	(bad)  
   1429f:	ff 5c 19 00          	lcall  *0x0(%rcx,%rbx,1)
   142a3:	00 73 e2             	add    %dh,-0x1e(%rbx)
   142a6:	ff                   	(bad)  
   142a7:	ff 70 19             	push   0x19(%rax)
   142aa:	00 00                	add    %al,(%rax)
   142ac:	76 e2                	jbe    14290 <__GNU_EH_FRAME_HDR+0x7d0>
   142ae:	ff                   	(bad)  
   142af:	ff 84 19 00 00 a3 e6 	incl   -0x195d0000(%rcx,%rbx,1)
   142b6:	ff                   	(bad)  
   142b7:	ff                   	(bad)  
   142b8:	b8 19 00 00 23       	mov    $0x23000019,%eax
   142bd:	e9 ff ff d4 19       	jmp    19d642c1 <_end+0x19d392b1>
   142c2:	00 00                	add    %al,(%rax)
   142c4:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
   142c5:	e9 ff ff f0 19       	jmp    19f242c9 <_end+0x19ef92b9>
   142ca:	00 00                	add    %al,(%rax)
   142cc:	c4                   	(bad)  
   142cd:	e9 ff ff 04 1a       	jmp    1a0642d1 <_end+0x1a0392c1>
   142d2:	00 00                	add    %al,(%rax)
   142d4:	e3 e9                	jrcxz  142bf <__GNU_EH_FRAME_HDR+0x7ff>
   142d6:	ff                   	(bad)  
   142d7:	ff 18                	lcall  *(%rax)
   142d9:	1a 00                	sbb    (%rax),%al
   142db:	00 03                	add    %al,(%rbx)
   142dd:	ea                   	(bad)  
   142de:	ff                   	(bad)  
   142df:	ff 2c 1a             	ljmp   *(%rdx,%rbx,1)
   142e2:	00 00                	add    %al,(%rax)
   142e4:	21 ea                	and    %ebp,%edx
   142e6:	ff                   	(bad)  
   142e7:	ff 40 1a             	incl   0x1a(%rax)
   142ea:	00 00                	add    %al,(%rax)
   142ec:	3f                   	(bad)  
   142ed:	ea                   	(bad)  
   142ee:	ff                   	(bad)  
   142ef:	ff 54 1a 00          	call   *0x0(%rdx,%rbx,1)
	...

Disassembly of section .eh_frame:

00000000000142f8 <.eh_frame>:
   142f8:	14 00                	adc    $0x0,%al
   142fa:	00 00                	add    %al,(%rax)
   142fc:	00 00                	add    %al,(%rax)
   142fe:	00 00                	add    %al,(%rax)
   14300:	01 7a 52             	add    %edi,0x52(%rdx)
   14303:	00 01                	add    %al,(%rcx)
   14305:	78 10                	js     14317 <__GNU_EH_FRAME_HDR+0x857>
   14307:	01 1b                	add    %ebx,(%rbx)
   14309:	0c 07                	or     $0x7,%al
   1430b:	08 90 01 00 00 14    	or     %dl,0x14000001(%rax)
   14311:	00 00                	add    %al,(%rax)
   14313:	00 1c 00             	add    %bl,(%rax,%rax,1)
   14316:	00 00                	add    %al,(%rax)
   14318:	4b dd fe             	rex.WXB (bad) 
   1431b:	ff 4b 00             	decl   0x0(%rbx)
   1431e:	00 00                	add    %al,(%rax)
   14320:	00 45 0e             	add    %al,0xe(%rbp)
   14323:	10 02                	adc    %al,(%rdx)
   14325:	45 0e                	rex.RB (bad) 
   14327:	08 10                	or     %dl,(%rax)
   14329:	00 00                	add    %al,(%rax)
   1432b:	00 34 00             	add    %dh,(%rax,%rax,1)
   1432e:	00 00                	add    %al,(%rax)
   14330:	7e dd                	jle    1430f <__GNU_EH_FRAME_HDR+0x84f>
   14332:	fe                   	(bad)  
   14333:	ff 27                	jmp    *(%rdi)
   14335:	00 00                	add    %al,(%rax)
   14337:	00 00                	add    %al,(%rax)
   14339:	00 00                	add    %al,(%rax)
   1433b:	00 14 00             	add    %dl,(%rax,%rax,1)
   1433e:	00 00                	add    %al,(%rax)
   14340:	48 00 00             	rex.W add %al,(%rax)
   14343:	00 91 dd fe ff 36    	add    %dl,0x36fffedd(%rcx)
   14349:	00 00                	add    %al,(%rax)
   1434b:	00 00                	add    %al,(%rax)
   1434d:	45 0e                	rex.RB (bad) 
   1434f:	10 6c 0e 08          	adc    %ch,0x8(%rsi,%rcx,1)
   14353:	00 18                	add    %bl,(%rax)
   14355:	00 00                	add    %al,(%rax)
   14357:	00 60 00             	add    %ah,0x0(%rax)
   1435a:	00 00                	add    %al,(%rax)
   1435c:	af                   	scas   %es:(%rdi),%eax
   1435d:	dd fe                	(bad)  
   1435f:	ff 33                	push   (%rbx)
   14361:	00 00                	add    %al,(%rax)
   14363:	00 00                	add    %al,(%rax)
   14365:	45 0e                	rex.RB (bad) 
   14367:	10 83 02 6d 0e 08    	adc    %al,0x80e6d02(%rbx)
   1436d:	00 00                	add    %al,(%rax)
   1436f:	00 24 00             	add    %ah,(%rax,%rax,1)
   14372:	00 00                	add    %al,(%rax)
   14374:	7c 00                	jl     14376 <__GNU_EH_FRAME_HDR+0x8b6>
   14376:	00 00                	add    %al,(%rax)
   14378:	88 cc                	mov    %cl,%ah
   1437a:	fe                   	(bad)  
   1437b:	ff 10                	call   *(%rax)
   1437d:	00 00                	add    %al,(%rax)
   1437f:	00 00                	add    %al,(%rax)
   14381:	0e                   	(bad)  
   14382:	10 46 0e             	adc    %al,0xe(%rsi)
   14385:	18 4a 0f             	sbb    %cl,0xf(%rdx)
   14388:	0b 77 08             	or     0x8(%rdi),%esi
   1438b:	80 00 3f             	addb   $0x3f,(%rax)
   1438e:	1a 3b                	sbb    (%rbx),%bh
   14390:	2a 33                	sub    (%rbx),%dh
   14392:	24 22                	and    $0x22,%al
   14394:	00 00                	add    %al,(%rax)
   14396:	00 00                	add    %al,(%rax)
   14398:	14 00                	adc    $0x0,%al
   1439a:	00 00                	add    %al,(%rax)
   1439c:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
   1439d:	00 00                	add    %al,(%rax)
   1439f:	00 70 cc             	add    %dh,-0x34(%rax)
   143a2:	fe                   	(bad)  
   143a3:	ff 10                	call   *(%rax)
	...
   143ad:	00 00                	add    %al,(%rax)
   143af:	00 34 00             	add    %dh,(%rax,%rax,1)
   143b2:	00 00                	add    %al,(%rax)
   143b4:	bc 00 00 00 4e       	mov    $0x4e000000,%esp
   143b9:	fc                   	cld    
   143ba:	fe                   	(bad)  
   143bb:	ff                   	(bad)  
   143bc:	ef                   	out    %eax,(%dx)
   143bd:	00 00                	add    %al,(%rax)
   143bf:	00 00                	add    %al,(%rax)
   143c1:	46 0e                	rex.RX (bad) 
   143c3:	10 8d 02 42 0e 18    	adc    %cl,0x180e4202(%rbp)
   143c9:	8c 03                	mov    %es,(%rbx)
   143cb:	41 0e                	rex.B (bad) 
   143cd:	20 86 04 41 0e 28    	and    %al,0x280e4104(%rsi)
   143d3:	83 05 44 0e 50 02 d7 	addl   $0xffffffd7,0x2500e44(%rip)        # 251521e <_end+0x24ea20e>
   143da:	0e                   	(bad)  
   143db:	28 44 0e 20          	sub    %al,0x20(%rsi,%rcx,1)
   143df:	41 0e                	rex.B (bad) 
   143e1:	18 42 0e             	sbb    %al,0xe(%rdx)
   143e4:	10 42 0e             	adc    %al,0xe(%rdx)
   143e7:	08 14 00             	or     %dl,(%rax,%rax,1)
   143ea:	00 00                	add    %al,(%rax)
   143ec:	f4                   	hlt    
   143ed:	00 00                	add    %al,(%rax)
   143ef:	00 05 fd fe ff 19    	add    %al,0x19fffefd(%rip)        # 1a0142f2 <_end+0x19fe92e2>
   143f5:	00 00                	add    %al,(%rax)
   143f7:	00 00                	add    %al,(%rax)
   143f9:	4a 0e                	rex.WX (bad) 
   143fb:	10 48 0e             	adc    %cl,0xe(%rax)
   143fe:	08 00                	or     %al,(%rax)
   14400:	2c 00                	sub    $0x0,%al
   14402:	00 00                	add    %al,(%rax)
   14404:	0c 01                	or     $0x1,%al
   14406:	00 00                	add    %al,(%rax)
   14408:	06                   	(bad)  
   14409:	fd                   	std    
   1440a:	fe                   	(bad)  
   1440b:	ff                   	(bad)  
   1440c:	ee                   	out    %al,(%dx)
   1440d:	00 00                	add    %al,(%rax)
   1440f:	00 00                	add    %al,(%rax)
   14411:	46 0e                	rex.RX (bad) 
   14413:	10 8c 02 41 0e 18 86 	adc    %cl,-0x79e7f1bf(%rdx,%rax,1)
   1441a:	03 41 0e             	add    0xe(%rcx),%eax
   1441d:	20 83 04 44 0e 30    	and    %al,0x300e4404(%rbx)
   14423:	02 db                	add    %bl,%bl
   14425:	0e                   	(bad)  
   14426:	20 43 0e             	and    %al,0xe(%rbx)
   14429:	18 41 0e             	sbb    %al,0xe(%rcx)
   1442c:	10 42 0e             	adc    %al,0xe(%rdx)
   1442f:	08 20                	or     %ah,(%rax)
   14431:	00 00                	add    %al,(%rax)
   14433:	00 3c 01             	add    %bh,(%rcx,%rax,1)
   14436:	00 00                	add    %al,(%rax)
   14438:	c4                   	(bad)  
   14439:	fd                   	std    
   1443a:	fe                   	(bad)  
   1443b:	ff 66 00             	jmp    *0x0(%rsi)
   1443e:	00 00                	add    %al,(%rax)
   14440:	00 4a 0e             	add    %cl,0xe(%rdx)
   14443:	10 83 02 4c 0e 20    	adc    %al,0x200e4c02(%rbx)
   14449:	02 48 0e             	add    0xe(%rax),%cl
   1444c:	10 41 0e             	adc    %al,0xe(%rcx)
   1444f:	08 41 c3             	or     %al,-0x3d(%rcx)
   14452:	00 00                	add    %al,(%rax)
   14454:	34 00                	xor    $0x0,%al
   14456:	00 00                	add    %al,(%rax)
   14458:	60                   	(bad)  
   14459:	01 00                	add    %eax,(%rax)
   1445b:	00 06                	add    %al,(%rsi)
   1445d:	fe                   	(bad)  
   1445e:	fe                   	(bad)  
   1445f:	ff                   	(bad)  
   14460:	e9 00 00 00 00       	jmp    14465 <__GNU_EH_FRAME_HDR+0x9a5>
   14465:	46 0e                	rex.RX (bad) 
   14467:	10 8d 02 42 0e 18    	adc    %cl,0x180e4202(%rbp)
   1446d:	8c 03                	mov    %es,(%rbx)
   1446f:	41 0e                	rex.B (bad) 
   14471:	20 86 04 43 0e 28    	and    %al,0x280e4304(%rsi)
   14477:	83 05 47 0e 50 02 cf 	addl   $0xffffffcf,0x2500e47(%rip)        # 25152c5 <_end+0x24ea2b5>
   1447e:	0e                   	(bad)  
   1447f:	28 41 0e             	sub    %al,0xe(%rcx)
   14482:	20 41 0e             	and    %al,0xe(%rcx)
   14485:	18 42 0e             	sbb    %al,0xe(%rdx)
   14488:	10 42 0e             	adc    %al,0xe(%rdx)
   1448b:	08 38                	or     %bh,(%rax)
   1448d:	00 00                	add    %al,(%rax)
   1448f:	00 98 01 00 00 b7    	add    %bl,-0x48ffffff(%rax)
   14495:	fe                   	(bad)  
   14496:	fe                   	(bad)  
   14497:	ff 11                	call   *(%rcx)
   14499:	01 00                	add    %eax,(%rax)
   1449b:	00 00                	add    %al,(%rax)
   1449d:	46 0e                	rex.RX (bad) 
   1449f:	10 8d 02 42 0e 18    	adc    %cl,0x180e4202(%rbp)
   144a5:	8c 03                	mov    %es,(%rbx)
   144a7:	44 0e                	rex.R (bad) 
   144a9:	20 86 04 41 0e 28    	and    %al,0x280e4104(%rsi)
   144af:	83 05 47 0e 50 02 f6 	addl   $0xfffffff6,0x2500e47(%rip)        # 25152fd <_end+0x24ea2ed>
   144b6:	0e                   	(bad)  
   144b7:	28 41 0e             	sub    %al,0xe(%rcx)
   144ba:	20 41 0e             	and    %al,0xe(%rcx)
   144bd:	18 42 0e             	sbb    %al,0xe(%rdx)
   144c0:	10 42 0e             	adc    %al,0xe(%rdx)
   144c3:	08 00                	or     %al,(%rax)
   144c5:	00 00                	add    %al,(%rax)
   144c7:	00 10                	add    %dl,(%rax)
   144c9:	00 00                	add    %al,(%rax)
   144cb:	00 d4                	add    %dl,%ah
   144cd:	01 00                	add    %eax,(%rax)
   144cf:	00 90 ff fe ff 94    	add    %dl,-0x6b000101(%rax)
   144d5:	00 00                	add    %al,(%rax)
   144d7:	00 00                	add    %al,(%rax)
   144d9:	00 00                	add    %al,(%rax)
   144db:	00 30                	add    %dh,(%rax)
   144dd:	00 00                	add    %al,(%rax)
   144df:	00 e8                	add    %ch,%al
   144e1:	01 00                	add    %eax,(%rax)
   144e3:	00 1c 00             	add    %bl,(%rax,%rax,1)
   144e6:	ff                   	(bad)  
   144e7:	ff 50 11             	call   *0x11(%rax)
   144ea:	00 00                	add    %al,(%rax)
   144ec:	00 45 0e             	add    %al,0xe(%rbp)
   144ef:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
   144f5:	54                   	push   %rsp
   144f6:	8f 03                	pop    (%rbx)
   144f8:	8e 04 8d 05 8c 06 83 	mov    -0x7cf973fb(,%rcx,4),%es
   144ff:	07                   	(bad)  
   14500:	03 30                	add    (%rax),%esi
   14502:	10 0a                	adc    %cl,(%rdx)
   14504:	0c 07                	or     $0x7,%al
   14506:	08 44 0b 00          	or     %al,0x0(%rbx,%rcx,1)
   1450a:	00 00                	add    %al,(%rax)
   1450c:	00 00                	add    %al,(%rax)
   1450e:	00 00                	add    %al,(%rax)
   14510:	6c                   	insb   (%dx),%es:(%rdi)
   14511:	00 00                	add    %al,(%rax)
   14513:	00 1c 02             	add    %bl,(%rdx,%rax,1)
   14516:	00 00                	add    %al,(%rax)
   14518:	38 11                	cmp    %dl,(%rcx)
   1451a:	ff                   	(bad)  
   1451b:	ff 03                	incl   (%rbx)
   1451d:	02 00                	add    (%rax),%al
   1451f:	00 00                	add    %al,(%rax)
   14521:	4b 0e                	rex.WXB (bad) 
   14523:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   14529:	8e 03                	mov    (%rbx),%es
   1452b:	45 0e                	rex.RB (bad) 
   1452d:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
   14533:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff8631537a <_end+0xffffffff862ea36a>
   14539:	06                   	(bad)  
   1453a:	41 0e                	rex.B (bad) 
   1453c:	38 83 07 47 0e 40    	cmp    %al,0x400e4707(%rbx)
   14542:	02 a1 0a 0e 38 43    	add    0x43380e0a(%rcx),%ah
   14548:	0e                   	(bad)  
   14549:	30 41 0e             	xor    %al,0xe(%rcx)
   1454c:	28 42 0e             	sub    %al,0xe(%rdx)
   1454f:	20 42 0e             	and    %al,0xe(%rdx)
   14552:	18 42 0e             	sbb    %al,0xe(%rdx)
   14555:	10 42 0e             	adc    %al,0xe(%rdx)
   14558:	08 43 0b             	or     %al,0xb(%rbx)
   1455b:	65 0a 0e             	or     %gs:(%rsi),%cl
   1455e:	38 41 0e             	cmp    %al,0xe(%rcx)
   14561:	30 41 0e             	xor    %al,0xe(%rcx)
   14564:	28 42 0e             	sub    %al,0xe(%rdx)
   14567:	20 42 0e             	and    %al,0xe(%rdx)
   1456a:	18 42 0e             	sbb    %al,0xe(%rdx)
   1456d:	10 42 0e             	adc    %al,0xe(%rdx)
   14570:	08 41 0b             	or     %al,0xb(%rcx)
   14573:	03 00                	add    (%rax),%eax
   14575:	01 0e                	add    %ecx,(%rsi)
   14577:	08 c3                	or     %al,%bl
   14579:	c6                   	(bad)  
   1457a:	cc                   	int3   
   1457b:	cd ce                	int    $0xce
   1457d:	cf                   	iret   
   1457e:	00 00                	add    %al,(%rax)
   14580:	34 00                	xor    $0x0,%al
   14582:	00 00                	add    %al,(%rax)
   14584:	8c 02                	mov    %es,(%rdx)
   14586:	00 00                	add    %al,(%rax)
   14588:	d8 12                	fcoms  (%rdx)
   1458a:	ff                   	(bad)  
   1458b:	ff 33                	push   (%rbx)
   1458d:	00 00                	add    %al,(%rax)
   1458f:	00 00                	add    %al,(%rax)
   14591:	45 0e                	rex.RB (bad) 
   14593:	10 86 02 44 0e 18    	adc    %al,0x180e4402(%rsi)
   14599:	83 03 47             	addl   $0x47,(%rbx)
   1459c:	0e                   	(bad)  
   1459d:	20 4d 0a             	and    %cl,0xa(%rbp)
   145a0:	0e                   	(bad)  
   145a1:	18 41 0e             	sbb    %al,0xe(%rcx)
   145a4:	10 41 0e             	adc    %al,0xe(%rcx)
   145a7:	08 41 0b             	or     %al,0xb(%rcx)
   145aa:	44 0e                	rex.R (bad) 
   145ac:	18 49 0e             	sbb    %cl,0xe(%rcx)
   145af:	10 41 0e             	adc    %al,0xe(%rcx)
   145b2:	08 00                	or     %al,(%rax)
   145b4:	00 00                	add    %al,(%rax)
   145b6:	00 00                	add    %al,(%rax)
   145b8:	48 00 00             	rex.W add %al,(%rax)
   145bb:	00 c4                	add    %al,%ah
   145bd:	02 00                	add    (%rax),%al
   145bf:	00 e0                	add    %ah,%al
   145c1:	12 ff                	adc    %bh,%bh
   145c3:	ff 85 00 00 00 00    	incl   0x0(%rbp)
   145c9:	46 0e                	rex.RX (bad) 
   145cb:	10 8e 02 45 0e 18    	adc    %cl,0x180e4502(%rsi)
   145d1:	8d 03                	lea    (%rbx),%eax
   145d3:	4a 0e                	rex.WX (bad) 
   145d5:	20 8c 04 44 0e 28 86 	and    %cl,-0x79d7f1bc(%rsp,%rax,1)
   145dc:	05 43 0e 30 83       	add    $0x83300e43,%eax
   145e1:	06                   	(bad)  
   145e2:	78 0a                	js     145ee <__GNU_EH_FRAME_HDR+0xb2e>
   145e4:	0e                   	(bad)  
   145e5:	28 43 0e             	sub    %al,0xe(%rbx)
   145e8:	20 42 0e             	and    %al,0xe(%rdx)
   145eb:	18 42 0e             	sbb    %al,0xe(%rdx)
   145ee:	10 42 0e             	adc    %al,0xe(%rdx)
   145f1:	08 43 0b             	or     %al,0xb(%rbx)
   145f4:	5b                   	pop    %rbx
   145f5:	0e                   	(bad)  
   145f6:	28 43 0e             	sub    %al,0xe(%rbx)
   145f9:	20 42 0e             	and    %al,0xe(%rdx)
   145fc:	18 42 0e             	sbb    %al,0xe(%rdx)
   145ff:	10 42 0e             	adc    %al,0xe(%rdx)
   14602:	08 00                	or     %al,(%rax)
   14604:	48 00 00             	rex.W add %al,(%rax)
   14607:	00 10                	add    %dl,(%rax)
   14609:	03 00                	add    (%rax),%eax
   1460b:	00 24 13             	add    %ah,(%rbx,%rdx,1)
   1460e:	ff                   	(bad)  
   1460f:	ff 85 00 00 00 00    	incl   0x0(%rbp)
   14615:	46 0e                	rex.RX (bad) 
   14617:	10 8e 02 45 0e 18    	adc    %cl,0x180e4502(%rsi)
   1461d:	8d 03                	lea    (%rbx),%eax
   1461f:	4a 0e                	rex.WX (bad) 
   14621:	20 8c 04 44 0e 28 86 	and    %cl,-0x79d7f1bc(%rsp,%rax,1)
   14628:	05 43 0e 30 83       	add    $0x83300e43,%eax
   1462d:	06                   	(bad)  
   1462e:	78 0a                	js     1463a <__GNU_EH_FRAME_HDR+0xb7a>
   14630:	0e                   	(bad)  
   14631:	28 43 0e             	sub    %al,0xe(%rbx)
   14634:	20 42 0e             	and    %al,0xe(%rdx)
   14637:	18 42 0e             	sbb    %al,0xe(%rdx)
   1463a:	10 42 0e             	adc    %al,0xe(%rdx)
   1463d:	08 43 0b             	or     %al,0xb(%rbx)
   14640:	5b                   	pop    %rbx
   14641:	0e                   	(bad)  
   14642:	28 43 0e             	sub    %al,0xe(%rbx)
   14645:	20 42 0e             	and    %al,0xe(%rdx)
   14648:	18 42 0e             	sbb    %al,0xe(%rdx)
   1464b:	10 42 0e             	adc    %al,0xe(%rdx)
   1464e:	08 00                	or     %al,(%rax)
   14650:	10 00                	adc    %al,(%rax)
   14652:	00 00                	add    %al,(%rax)
   14654:	5c                   	pop    %rsp
   14655:	03 00                	add    (%rax),%eax
   14657:	00 68 13             	add    %ch,0x13(%rax)
   1465a:	ff                   	(bad)  
   1465b:	ff 25 00 00 00 00    	jmp    *0x0(%rip)        # 14661 <__GNU_EH_FRAME_HDR+0xba1>
   14661:	00 00                	add    %al,(%rax)
   14663:	00 10                	add    %dl,(%rax)
   14665:	00 00                	add    %al,(%rax)
   14667:	00 70 03             	add    %dh,0x3(%rax)
   1466a:	00 00                	add    %al,(%rax)
   1466c:	84 13                	test   %dl,(%rbx)
   1466e:	ff                   	(bad)  
   1466f:	ff 21                	jmp    *(%rcx)
   14671:	00 00                	add    %al,(%rax)
   14673:	00 00                	add    %al,(%rax)
   14675:	00 00                	add    %al,(%rax)
   14677:	00 14 00             	add    %dl,(%rax,%rax,1)
   1467a:	00 00                	add    %al,(%rax)
   1467c:	84 03                	test   %al,(%rbx)
   1467e:	00 00                	add    %al,(%rax)
   14680:	a0 13 ff ff 32 00 00 	movabs 0x32ffff13,%al
   14687:	00 00 
   14689:	48 0e                	rex.W (bad) 
   1468b:	10 69 0e             	adc    %ch,0xe(%rcx)
   1468e:	08 00                	or     %al,(%rax)
   14690:	18 00                	sbb    %al,(%rax)
   14692:	00 00                	add    %al,(%rax)
   14694:	9c                   	pushf  
   14695:	03 00                	add    (%rax),%eax
   14697:	00 c8                	add    %cl,%al
   14699:	13 ff                	adc    %edi,%edi
   1469b:	ff 1e                	lcall  *(%rsi)
   1469d:	00 00                	add    %al,(%rax)
   1469f:	00 00                	add    %al,(%rax)
   146a1:	45 0e                	rex.RB (bad) 
   146a3:	10 83 02 58 0e 08    	adc    %al,0x80e5802(%rbx)
   146a9:	00 00                	add    %al,(%rax)
   146ab:	00 10                	add    %dl,(%rax)
   146ad:	00 00                	add    %al,(%rax)
   146af:	00 b8 03 00 00 cc    	add    %bh,-0x33fffffd(%rax)
   146b5:	13 ff                	adc    %edi,%edi
   146b7:	ff 09                	decl   (%rcx)
   146b9:	00 00                	add    %al,(%rax)
   146bb:	00 00                	add    %al,(%rax)
   146bd:	00 00                	add    %al,(%rax)
   146bf:	00 24 00             	add    %ah,(%rax,%rax,1)
   146c2:	00 00                	add    %al,(%rax)
   146c4:	cc                   	int3   
   146c5:	03 00                	add    (%rax),%eax
   146c7:	00 c8                	add    %cl,%al
   146c9:	13 ff                	adc    %edi,%edi
   146cb:	ff 25 00 00 00 00    	jmp    *0x0(%rip)        # 146d1 <__GNU_EH_FRAME_HDR+0xc11>
   146d1:	45 0e                	rex.RB (bad) 
   146d3:	10 86 02 41 0e 18    	adc    %al,0x180e4102(%rsi)
   146d9:	83 03 47             	addl   $0x47,(%rbx)
   146dc:	0e                   	(bad)  
   146dd:	20 53 0e             	and    %dl,0xe(%rbx)
   146e0:	18 43 0e             	sbb    %al,0xe(%rbx)
   146e3:	10 41 0e             	adc    %al,0xe(%rcx)
   146e6:	08 00                	or     %al,(%rax)
   146e8:	14 00                	adc    $0x0,%al
   146ea:	00 00                	add    %al,(%rax)
   146ec:	f4                   	hlt    
   146ed:	03 00                	add    (%rax),%eax
   146ef:	00 d0                	add    %dl,%al
   146f1:	13 ff                	adc    %edi,%edi
   146f3:	ff 17                	call   *(%rdi)
   146f5:	00 00                	add    %al,(%rax)
   146f7:	00 00                	add    %al,(%rax)
   146f9:	48 0e                	rex.W (bad) 
   146fb:	10 4e 0e             	adc    %cl,0xe(%rsi)
   146fe:	08 00                	or     %al,(%rax)
   14700:	34 00                	xor    $0x0,%al
   14702:	00 00                	add    %al,(%rax)
   14704:	0c 04                	or     $0x4,%al
   14706:	00 00                	add    %al,(%rax)
   14708:	f8                   	clc    
   14709:	ce                   	(bad)  
   1470a:	ff                   	(bad)  
   1470b:	ff 31                	push   (%rcx)
   1470d:	03 00                	add    (%rax),%eax
   1470f:	00 00                	add    %al,(%rax)
   14711:	46 0e                	rex.RX (bad) 
   14713:	10 8c 02 41 0e 18 86 	adc    %cl,-0x79e7f1bf(%rdx,%rax,1)
   1471a:	03 41 0e             	add    0xe(%rcx),%eax
   1471d:	20 83 04 47 0e e0    	and    %al,-0x1ff1b8fc(%rbx)
   14723:	01 03                	add    %eax,(%rbx)
   14725:	c7 02 0a 0e 20 41    	movl   $0x41200e0a,(%rdx)
   1472b:	0e                   	(bad)  
   1472c:	18 41 0e             	sbb    %al,0xe(%rcx)
   1472f:	10 42 0e             	adc    %al,0xe(%rdx)
   14732:	08 46 0b             	or     %al,0xb(%rsi)
   14735:	00 00                	add    %al,(%rax)
   14737:	00 2c 00             	add    %ch,(%rax,%rax,1)
   1473a:	00 00                	add    %al,(%rax)
   1473c:	44 04 00             	rex.R add $0x0,%al
   1473f:	00 00                	add    %al,(%rax)
   14741:	d2 ff                	sar    %cl,%bh
   14743:	ff 99 01 00 00 00    	lcall  *0x1(%rcx)
   14749:	46 0e                	rex.RX (bad) 
   1474b:	10 8c 02 44 0e 18 86 	adc    %cl,-0x79e7f1bc(%rdx,%rax,1)
   14752:	03 44 0e 20          	add    0x20(%rsi,%rcx,1),%eax
   14756:	83 04 59 0a          	addl   $0xa,(%rcx,%rbx,2)
   1475a:	0e                   	(bad)  
   1475b:	18 41 0e             	sbb    %al,0xe(%rcx)
   1475e:	10 42 0e             	adc    %al,0xe(%rdx)
   14761:	08 46 0b             	or     %al,0xb(%rsi)
   14764:	00 00                	add    %al,(%rax)
   14766:	00 00                	add    %al,(%rax)
   14768:	3c 00                	cmp    $0x0,%al
   1476a:	00 00                	add    %al,(%rax)
   1476c:	74 04                	je     14772 <__GNU_EH_FRAME_HDR+0xcb2>
   1476e:	00 00                	add    %al,(%rax)
   14770:	70 13                	jo     14785 <__GNU_EH_FRAME_HDR+0xcc5>
   14772:	ff                   	(bad)  
   14773:	ff 19                	lcall  *(%rcx)
   14775:	01 00                	add    %eax,(%rax)
   14777:	00 00                	add    %al,(%rax)
   14779:	46 0e                	rex.RX (bad) 
   1477b:	10 8c 02 44 0e 18 86 	adc    %cl,-0x79e7f1bc(%rdx,%rax,1)
   14782:	03 44 0e 20          	add    0x20(%rsi,%rcx,1),%eax
   14786:	83 04 02 cc          	addl   $0xffffffcc,(%rdx,%rax,1)
   1478a:	0a 0e                	or     (%rsi),%cl
   1478c:	18 41 0e             	sbb    %al,0xe(%rcx)
   1478f:	10 44 0e 08          	adc    %al,0x8(%rsi,%rcx,1)
   14793:	49 0b 4e 0a          	or     0xa(%r14),%rcx
   14797:	0e                   	(bad)  
   14798:	18 46 0e             	sbb    %al,0xe(%rsi)
   1479b:	10 42 0e             	adc    %al,0xe(%rdx)
   1479e:	08 42 0b             	or     %al,0xb(%rdx)
   147a1:	00 00                	add    %al,(%rax)
   147a3:	00 00                	add    %al,(%rax)
   147a5:	00 00                	add    %al,(%rax)
   147a7:	00 14 00             	add    %dl,(%rax,%rax,1)
   147aa:	00 00                	add    %al,(%rax)
   147ac:	b4 04                	mov    $0x4,%ah
   147ae:	00 00                	add    %al,(%rax)
   147b0:	30 d3                	xor    %dl,%bl
   147b2:	ff                   	(bad)  
   147b3:	ff 1b                	lcall  *(%rbx)
   147b5:	00 00                	add    %al,(%rax)
   147b7:	00 00                	add    %al,(%rax)
   147b9:	48 0e                	rex.W (bad) 
   147bb:	10 4f 0e             	adc    %cl,0xe(%rdi)
   147be:	08 00                	or     %al,(%rax)
   147c0:	10 00                	adc    %al,(%rax)
   147c2:	00 00                	add    %al,(%rax)
   147c4:	cc                   	int3   
   147c5:	04 00                	add    $0x0,%al
   147c7:	00 38                	add    %bh,(%rax)
   147c9:	d8 fe                	fdivr  %st(6),%st
   147cb:	ff 0f                	decl   (%rdi)
   147cd:	00 00                	add    %al,(%rax)
   147cf:	00 00                	add    %al,(%rax)
   147d1:	00 00                	add    %al,(%rax)
   147d3:	00 10                	add    %dl,(%rax)
   147d5:	00 00                	add    %al,(%rax)
   147d7:	00 e0                	add    %ah,%al
   147d9:	04 00                	add    $0x0,%al
   147db:	00 24 14             	add    %ah,(%rsp,%rdx,1)
   147de:	ff                   	(bad)  
   147df:	ff 52 00             	call   *0x0(%rdx)
   147e2:	00 00                	add    %al,(%rax)
   147e4:	00 00                	add    %al,(%rax)
   147e6:	00 00                	add    %al,(%rax)
   147e8:	10 00                	adc    %al,(%rax)
   147ea:	00 00                	add    %al,(%rax)
   147ec:	f4                   	hlt    
   147ed:	04 00                	add    $0x0,%al
   147ef:	00 70 14             	add    %dh,0x14(%rax)
   147f2:	ff                   	(bad)  
   147f3:	ff 53 00             	call   *0x0(%rbx)
   147f6:	00 00                	add    %al,(%rax)
   147f8:	00 00                	add    %al,(%rax)
   147fa:	00 00                	add    %al,(%rax)
   147fc:	1c 00                	sbb    $0x0,%al
   147fe:	00 00                	add    %al,(%rax)
   14800:	08 05 00 00 bc 14    	or     %al,0x14bc0000(%rip)        # 14bd4806 <_end+0x14ba97f6>
   14806:	ff                   	(bad)  
   14807:	ff d7                	call   *%rdi
   14809:	00 00                	add    %al,(%rax)
   1480b:	00 00                	add    %al,(%rax)
   1480d:	45 0e                	rex.RB (bad) 
   1480f:	10 83 02 47 0e 20    	adc    %al,0x200e4702(%rbx)
   14815:	02 c6                	add    %dh,%al
   14817:	0e                   	(bad)  
   14818:	10 44 0e 08          	adc    %al,0x8(%rsi,%rcx,1)
   1481c:	14 00                	adc    $0x0,%al
   1481e:	00 00                	add    %al,(%rax)
   14820:	28 05 00 00 7c 15    	sub    %al,0x157c0000(%rip)        # 157d4826 <_end+0x157a9816>
   14826:	ff                   	(bad)  
   14827:	ff 5c 00 00          	lcall  *0x0(%rax,%rax,1)
   1482b:	00 00                	add    %al,(%rax)
   1482d:	48 0e                	rex.W (bad) 
   1482f:	10 02                	adc    %al,(%rdx)
   14831:	53                   	push   %rbx
   14832:	0e                   	(bad)  
   14833:	08 38                	or     %bh,(%rax)
   14835:	00 00                	add    %al,(%rax)
   14837:	00 40 05             	add    %al,0x5(%rax)
   1483a:	00 00                	add    %al,(%rax)
   1483c:	c4                   	(bad)  
   1483d:	15 ff ff 2f 01       	adc    $0x12fffff,%eax
   14842:	00 00                	add    %al,(%rax)
   14844:	00 46 0e             	add    %al,0xe(%rsi)
   14847:	10 8d 02 42 0e 18    	adc    %cl,0x180e4202(%rbp)
   1484d:	8c 03                	mov    %es,(%rbx)
   1484f:	41 0e                	rex.B (bad) 
   14851:	20 86 04 41 0e 28    	and    %al,0x280e4104(%rsi)
   14857:	83 05 44 0e 40 02 8a 	addl   $0xffffff8a,0x2400e44(%rip)        # 24156a2 <_end+0x23ea692>
   1485e:	0a 0e                	or     (%rsi),%cl
   14860:	28 43 0e             	sub    %al,0xe(%rbx)
   14863:	20 41 0e             	and    %al,0xe(%rcx)
   14866:	18 42 0e             	sbb    %al,0xe(%rdx)
   14869:	10 42 0e             	adc    %al,0xe(%rdx)
   1486c:	08 48 0b             	or     %cl,0xb(%rax)
   1486f:	00 10                	add    %dl,(%rax)
   14871:	00 00                	add    %al,(%rax)
   14873:	00 7c 05 00          	add    %bh,0x0(%rbp,%rax,1)
   14877:	00 b8 16 ff ff 1e    	add    %bh,0x1effff16(%rax)
   1487d:	00 00                	add    %al,(%rax)
   1487f:	00 00                	add    %al,(%rax)
   14881:	00 00                	add    %al,(%rax)
   14883:	00 18                	add    %bl,(%rax)
   14885:	00 00                	add    %al,(%rax)
   14887:	00 90 05 00 00 c4    	add    %dl,-0x3bfffffb(%rax)
   1488d:	16                   	(bad)  
   1488e:	ff                   	(bad)  
   1488f:	ff 23                	jmp    *(%rbx)
   14891:	00 00                	add    %al,(%rax)
   14893:	00 00                	add    %al,(%rax)
   14895:	45 0e                	rex.RB (bad) 
   14897:	10 83 02 5d 0e 08    	adc    %al,0x80e5d02(%rbx)
   1489d:	00 00                	add    %al,(%rax)
   1489f:	00 1c 00             	add    %bl,(%rax,%rax,1)
   148a2:	00 00                	add    %al,(%rax)
   148a4:	ac                   	lods   %ds:(%rsi),%al
   148a5:	05 00 00 d8 16       	add    $0x16d80000,%eax
   148aa:	ff                   	(bad)  
   148ab:	ff 22                	jmp    *(%rdx)
   148ad:	00 00                	add    %al,(%rax)
   148af:	00 00                	add    %al,(%rax)
   148b1:	45 0e                	rex.RB (bad) 
   148b3:	10 83 02 5c 0e 08    	adc    %al,0x80e5c02(%rbx)
   148b9:	00 00                	add    %al,(%rax)
   148bb:	00 00                	add    %al,(%rax)
   148bd:	00 00                	add    %al,(%rax)
   148bf:	00 38                	add    %bh,(%rax)
   148c1:	00 00                	add    %al,(%rax)
   148c3:	00 cc                	add    %cl,%ah
   148c5:	05 00 00 e8 16       	add    $0x16e80000,%eax
   148ca:	ff                   	(bad)  
   148cb:	ff b7 00 00 00 00    	push   0x0(%rdi)
   148d1:	42 0e                	rex.X (bad) 
   148d3:	10 8d 02 45 0e 18    	adc    %cl,0x180e4502(%rbp)
   148d9:	8c 03                	mov    %es,(%rbx)
   148db:	41 0e                	rex.B (bad) 
   148dd:	20 86 04 41 0e 28    	and    %al,0x280e4104(%rsi)
   148e3:	83 05 44 0e 30 02 9a 	addl   $0xffffff9a,0x2300e44(%rip)        # 231572e <_end+0x22ea71e>
   148ea:	0a 0e                	or     (%rsi),%cl
   148ec:	28 41 0e             	sub    %al,0xe(%rcx)
   148ef:	20 41 0e             	and    %al,0xe(%rcx)
   148f2:	18 42 0e             	sbb    %al,0xe(%rdx)
   148f5:	10 42 0e             	adc    %al,0xe(%rdx)
   148f8:	08 43 0b             	or     %al,0xb(%rbx)
   148fb:	00 54 00 00          	add    %dl,0x0(%rax,%rax,1)
   148ff:	00 08                	add    %cl,(%rax)
   14901:	06                   	(bad)  
   14902:	00 00                	add    %al,(%rax)
   14904:	6c                   	insb   (%dx),%es:(%rdi)
   14905:	17                   	(bad)  
   14906:	ff                   	(bad)  
   14907:	ff d6                	call   *%rsi
   14909:	01 00                	add    %eax,(%rax)
   1490b:	00 00                	add    %al,(%rax)
   1490d:	4f 0e                	rex.WRXB (bad) 
   1490f:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   14915:	8e 03                	mov    (%rbx),%es
   14917:	42 0e                	rex.X (bad) 
   14919:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   1491f:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff86315769 <_end+0xffffffff862ea759>
   14925:	06                   	(bad)  
   14926:	44 0e                	rex.R (bad) 
   14928:	38 83 07 47 0e 40    	cmp    %al,0x400e4707(%rbx)
   1492e:	02 50 0a             	add    0xa(%rax),%dl
   14931:	0e                   	(bad)  
   14932:	38 41 0e             	cmp    %al,0xe(%rcx)
   14935:	30 41 0e             	xor    %al,0xe(%rcx)
   14938:	28 42 0e             	sub    %al,0xe(%rdx)
   1493b:	20 42 0e             	and    %al,0xe(%rdx)
   1493e:	18 42 0e             	sbb    %al,0xe(%rdx)
   14941:	10 42 0e             	adc    %al,0xe(%rdx)
   14944:	08 42 0b             	or     %al,0xb(%rdx)
   14947:	03 50 01             	add    0x1(%rax),%edx
   1494a:	0e                   	(bad)  
   1494b:	08 c3                	or     %al,%bl
   1494d:	c6                   	(bad)  
   1494e:	cc                   	int3   
   1494f:	cd ce                	int    $0xce
   14951:	cf                   	iret   
   14952:	00 00                	add    %al,(%rax)
   14954:	10 00                	adc    %al,(%rax)
   14956:	00 00                	add    %al,(%rax)
   14958:	60                   	(bad)  
   14959:	06                   	(bad)  
   1495a:	00 00                	add    %al,(%rax)
   1495c:	f4                   	hlt    
   1495d:	18 ff                	sbb    %bh,%bh
   1495f:	ff 53 00             	call   *0x0(%rbx)
   14962:	00 00                	add    %al,(%rax)
   14964:	00 00                	add    %al,(%rax)
   14966:	00 00                	add    %al,(%rax)
   14968:	18 00                	sbb    %al,(%rax)
   1496a:	00 00                	add    %al,(%rax)
   1496c:	74 06                	je     14974 <__GNU_EH_FRAME_HDR+0xeb4>
   1496e:	00 00                	add    %al,(%rax)
   14970:	40 19 ff             	rex sbb %edi,%edi
   14973:	ff 5c 00 00          	lcall  *0x0(%rax,%rax,1)
   14977:	00 00                	add    %al,(%rax)
   14979:	48 0e                	rex.W (bad) 
   1497b:	30 79 0a             	xor    %bh,0xa(%rcx)
   1497e:	0e                   	(bad)  
   1497f:	08 47 0b             	or     %al,0xb(%rdi)
   14982:	00 00                	add    %al,(%rax)
   14984:	10 00                	adc    %al,(%rax)
   14986:	00 00                	add    %al,(%rax)
   14988:	90                   	nop
   14989:	06                   	(bad)  
   1498a:	00 00                	add    %al,(%rax)
   1498c:	84 19                	test   %bl,(%rcx)
   1498e:	ff                   	(bad)  
   1498f:	ff 6b 00             	ljmp   *0x0(%rbx)
   14992:	00 00                	add    %al,(%rax)
   14994:	00 00                	add    %al,(%rax)
   14996:	00 00                	add    %al,(%rax)
   14998:	10 00                	adc    %al,(%rax)
   1499a:	00 00                	add    %al,(%rax)
   1499c:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
   1499d:	06                   	(bad)  
   1499e:	00 00                	add    %al,(%rax)
   149a0:	e0 19                	loopne 149bb <__GNU_EH_FRAME_HDR+0xefb>
   149a2:	ff                   	(bad)  
   149a3:	ff 5b 00             	lcall  *0x0(%rbx)
   149a6:	00 00                	add    %al,(%rax)
   149a8:	00 00                	add    %al,(%rax)
   149aa:	00 00                	add    %al,(%rax)
   149ac:	40 00 00             	rex add %al,(%rax)
   149af:	00 b8 06 00 00 2c    	add    %bh,0x2c000006(%rax)
   149b5:	1a ff                	sbb    %bh,%bh
   149b7:	ff                   	(bad)  
   149b8:	bd 01 00 00 00       	mov    $0x1,%ebp
   149bd:	46 0e                	rex.RX (bad) 
   149bf:	10 8e 02 42 0e 18    	adc    %cl,0x180e4202(%rsi)
   149c5:	8d 03                	lea    (%rbx),%eax
   149c7:	42 0e                	rex.X (bad) 
   149c9:	20 8c 04 41 0e 28 86 	and    %cl,-0x79d7f1bf(%rsp,%rax,1)
   149d0:	05 41 0e 30 83       	add    $0x83300e41,%eax
   149d5:	06                   	(bad)  
   149d6:	47 0e                	rex.RXB (bad) 
   149d8:	40 02 b0 0a 0e 30 41 	add    0x41300e0a(%rax),%sil
   149df:	0e                   	(bad)  
   149e0:	28 41 0e             	sub    %al,0xe(%rcx)
   149e3:	20 42 0e             	and    %al,0xe(%rdx)
   149e6:	18 42 0e             	sbb    %al,0xe(%rdx)
   149e9:	10 42 0e             	adc    %al,0xe(%rdx)
   149ec:	08 45 0b             	or     %al,0xb(%rbp)
   149ef:	00 30                	add    %dh,(%rax)
   149f1:	00 00                	add    %al,(%rax)
   149f3:	00 fc                	add    %bh,%ah
   149f5:	06                   	(bad)  
   149f6:	00 00                	add    %al,(%rax)
   149f8:	a8 1b                	test   $0x1b,%al
   149fa:	ff                   	(bad)  
   149fb:	ff 5c 00 00          	lcall  *0x0(%rax,%rax,1)
   149ff:	00 00                	add    %al,(%rax)
   14a01:	45 0e                	rex.RB (bad) 
   14a03:	10 86 02 43 0e 18    	adc    %al,0x180e4302(%rsi)
   14a09:	83 03 44             	addl   $0x44,(%rbx)
   14a0c:	0e                   	(bad)  
   14a0d:	20 7a 0a             	and    %bh,0xa(%rdx)
   14a10:	0e                   	(bad)  
   14a11:	18 43 0e             	sbb    %al,0xe(%rbx)
   14a14:	10 41 0e             	adc    %al,0xe(%rcx)
   14a17:	08 46 0b             	or     %al,0xb(%rsi)
   14a1a:	44 0e                	rex.R (bad) 
   14a1c:	18 46 0e             	sbb    %al,0xe(%rsi)
   14a1f:	10 41 0e             	adc    %al,0xe(%rcx)
   14a22:	08 00                	or     %al,(%rax)
   14a24:	40 00 00             	rex add %al,(%rax)
   14a27:	00 30                	add    %dh,(%rax)
   14a29:	07                   	(bad)  
   14a2a:	00 00                	add    %al,(%rax)
   14a2c:	d4                   	(bad)  
   14a2d:	1b ff                	sbb    %edi,%edi
   14a2f:	ff ce                	dec    %esi
   14a31:	00 00                	add    %al,(%rax)
   14a33:	00 00                	add    %al,(%rax)
   14a35:	4f 0e                	rex.WRXB (bad) 
   14a37:	10 8d 02 47 0e 18    	adc    %cl,0x180e4702(%rbp)
   14a3d:	8c 03                	mov    %es,(%rbx)
   14a3f:	44 0e                	rex.R (bad) 
   14a41:	20 86 04 41 0e 28    	and    %al,0x280e4104(%rsi)
   14a47:	83 05 44 0e 30 73 0a 	addl   $0xa,0x73300e44(%rip)        # 73315892 <_end+0x732ea882>
   14a4e:	0e                   	(bad)  
   14a4f:	28 41 0e             	sub    %al,0xe(%rcx)
   14a52:	20 41 0e             	and    %al,0xe(%rcx)
   14a55:	18 42 0e             	sbb    %al,0xe(%rdx)
   14a58:	10 42 0e             	adc    %al,0xe(%rdx)
   14a5b:	08 48 0b             	or     %cl,0xb(%rax)
   14a5e:	02 68 0e             	add    0xe(%rax),%ch
   14a61:	08 c3                	or     %al,%bl
   14a63:	c6                   	(bad)  
   14a64:	cc                   	int3   
   14a65:	cd 00                	int    $0x0
   14a67:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
   14a6b:	00 74 07 00          	add    %dh,0x0(%rdi,%rax,1)
   14a6f:	00 60 1c             	add    %ah,0x1c(%rax)
   14a72:	ff                   	(bad)  
   14a73:	ff 19                	lcall  *(%rcx)
   14a75:	01 00                	add    %eax,(%rax)
   14a77:	00 00                	add    %al,(%rax)
   14a79:	46 0e                	rex.RX (bad) 
   14a7b:	10 8c 02 41 0e 18 86 	adc    %cl,-0x79e7f1bf(%rdx,%rax,1)
   14a82:	03 41 0e             	add    0xe(%rcx),%eax
   14a85:	20 83 04 02 6c 0a    	and    %al,0xa6c0204(%rbx)
   14a8b:	0e                   	(bad)  
   14a8c:	18 41 0e             	sbb    %al,0xe(%rcx)
   14a8f:	10 42 0e             	adc    %al,0xe(%rdx)
   14a92:	08 49 0b             	or     %cl,0xb(%rcx)
   14a95:	02 5f 0a             	add    0xa(%rdi),%bl
   14a98:	0e                   	(bad)  
   14a99:	18 41 0e             	sbb    %al,0xe(%rcx)
   14a9c:	10 42 0e             	adc    %al,0xe(%rdx)
   14a9f:	08 46 0b             	or     %al,0xb(%rsi)
   14aa2:	57                   	push   %rdi
   14aa3:	0a 0e                	or     (%rsi),%cl
   14aa5:	18 41 0e             	sbb    %al,0xe(%rcx)
   14aa8:	10 45 0e             	adc    %al,0xe(%rbp)
   14aab:	08 4b 0b             	or     %cl,0xb(%rbx)
   14aae:	00 00                	add    %al,(%rax)
   14ab0:	24 00                	and    $0x0,%al
   14ab2:	00 00                	add    %al,(%rax)
   14ab4:	bc 07 00 00 38       	mov    $0x38000007,%esp
   14ab9:	1d ff ff 3b 00       	sbb    $0x3bffff,%eax
   14abe:	00 00                	add    %al,(%rax)
   14ac0:	00 45 0e             	add    %al,0xe(%rbp)
   14ac3:	10 86 02 44 0e 18    	adc    %al,0x180e4402(%rsi)
   14ac9:	83 03 44             	addl   $0x44,(%rbx)
   14acc:	0e                   	(bad)  
   14acd:	20 69 0e             	and    %ch,0xe(%rcx)
   14ad0:	18 43 0e             	sbb    %al,0xe(%rbx)
   14ad3:	10 41 0e             	adc    %al,0xe(%rcx)
   14ad6:	08 00                	or     %al,(%rax)
   14ad8:	10 00                	adc    %al,(%rax)
   14ada:	00 00                	add    %al,(%rax)
   14adc:	e4 07                	in     $0x7,%al
   14ade:	00 00                	add    %al,(%rax)
   14ae0:	50                   	push   %rax
   14ae1:	1d ff ff 07 00       	sbb    $0x7ffff,%eax
   14ae6:	00 00                	add    %al,(%rax)
   14ae8:	00 00                	add    %al,(%rax)
   14aea:	00 00                	add    %al,(%rax)
   14aec:	28 00                	sub    %al,(%rax)
   14aee:	00 00                	add    %al,(%rax)
   14af0:	f8                   	clc    
   14af1:	07                   	(bad)  
   14af2:	00 00                	add    %al,(%rax)
   14af4:	4c 1d ff ff c7 00    	rex.WR sbb $0xc7ffff,%rax
   14afa:	00 00                	add    %al,(%rax)
   14afc:	00 41 0e             	add    %al,0xe(%rcx)
   14aff:	10 86 02 41 0e 18    	adc    %al,0x180e4102(%rsi)
   14b05:	83 03 47             	addl   $0x47,(%rbx)
   14b08:	0e                   	(bad)  
   14b09:	30 02                	xor    %al,(%rdx)
   14b0b:	5b                   	pop    %rbx
   14b0c:	0a 0e                	or     (%rsi),%cl
   14b0e:	18 41 0e             	sbb    %al,0xe(%rcx)
   14b11:	10 41 0e             	adc    %al,0xe(%rcx)
   14b14:	08 4a 0b             	or     %cl,0xb(%rdx)
   14b17:	00 54 00 00          	add    %dl,0x0(%rax,%rax,1)
   14b1b:	00 24 08             	add    %ah,(%rax,%rcx,1)
   14b1e:	00 00                	add    %al,(%rax)
   14b20:	f0 1d ff ff db 00    	lock sbb $0xdbffff,%eax
   14b26:	00 00                	add    %al,(%rax)
   14b28:	00 4b 0e             	add    %cl,0xe(%rbx)
   14b2b:	10 8e 02 42 0e 18    	adc    %cl,0x180e4202(%rsi)
   14b31:	8d 03                	lea    (%rbx),%eax
   14b33:	45 0e                	rex.RB (bad) 
   14b35:	20 8c 04 44 0e 28 86 	and    %cl,-0x79d7f1bc(%rsp,%rax,1)
   14b3c:	05 41 0e 30 83       	add    $0x83300e41,%eax
   14b41:	06                   	(bad)  
   14b42:	02 7a 0a             	add    0xa(%rdx),%bh
   14b45:	0e                   	(bad)  
   14b46:	28 41 0e             	sub    %al,0xe(%rcx)
   14b49:	20 42 0e             	and    %al,0xe(%rdx)
   14b4c:	18 42 0e             	sbb    %al,0xe(%rdx)
   14b4f:	10 42 0e             	adc    %al,0xe(%rdx)
   14b52:	08 48 0b             	or     %cl,0xb(%rax)
   14b55:	41 0a 0e             	or     (%r14),%cl
   14b58:	28 43 0e             	sub    %al,0xe(%rbx)
   14b5b:	20 42 0e             	and    %al,0xe(%rdx)
   14b5e:	18 42 0e             	sbb    %al,0xe(%rdx)
   14b61:	10 42 0e             	adc    %al,0xe(%rdx)
   14b64:	08 46 0b             	or     %al,0xb(%rsi)
   14b67:	68 0e 08 c3 c6       	push   $0xffffffffc6c3080e
   14b6c:	cc                   	int3   
   14b6d:	cd ce                	int    $0xce
   14b6f:	00 5c 00 00          	add    %bl,0x0(%rax,%rax,1)
   14b73:	00 7c 08 00          	add    %bh,0x0(%rax,%rcx,1)
   14b77:	00 78 1e             	add    %bh,0x1e(%rax)
   14b7a:	ff                   	(bad)  
   14b7b:	ff                   	(bad)  
   14b7c:	bc 01 00 00 00       	mov    $0x1,%esp
   14b81:	46 0e                	rex.RX (bad) 
   14b83:	10 8d 02 42 0e 18    	adc    %cl,0x180e4202(%rbp)
   14b89:	8c 03                	mov    %es,(%rbx)
   14b8b:	41 0e                	rex.B (bad) 
   14b8d:	20 86 04 44 0e 28    	and    %al,0x280e4404(%rsi)
   14b93:	83 05 46 0e 30 02 97 	addl   $0xffffff97,0x2300e46(%rip)        # 23159e0 <_end+0x22ea9d0>
   14b9a:	0a 0e                	or     (%rsi),%cl
   14b9c:	28 44 0e 20          	sub    %al,0x20(%rsi,%rcx,1)
   14ba0:	41 0e                	rex.B (bad) 
   14ba2:	18 42 0e             	sbb    %al,0xe(%rdx)
   14ba5:	10 42 0e             	adc    %al,0xe(%rdx)
   14ba8:	08 45 0b             	or     %al,0xb(%rbp)
   14bab:	4e 0a 0e             	rex.WRX or (%rsi),%r9b
   14bae:	28 44 0e 20          	sub    %al,0x20(%rsi,%rcx,1)
   14bb2:	41 0e                	rex.B (bad) 
   14bb4:	18 42 0e             	sbb    %al,0xe(%rdx)
   14bb7:	10 42 0e             	adc    %al,0xe(%rdx)
   14bba:	08 49 0b             	or     %cl,0xb(%rcx)
   14bbd:	53                   	push   %rbx
   14bbe:	0a 0e                	or     (%rsi),%cl
   14bc0:	28 47 0e             	sub    %al,0xe(%rdi)
   14bc3:	20 44 0e 18          	and    %al,0x18(%rsi,%rcx,1)
   14bc7:	42 0e                	rex.X (bad) 
   14bc9:	10 42 0e             	adc    %al,0xe(%rdx)
   14bcc:	08 46 0b             	or     %al,0xb(%rsi)
   14bcf:	00 10                	add    %dl,(%rax)
   14bd1:	00 00                	add    %al,(%rax)
   14bd3:	00 dc                	add    %bl,%ah
   14bd5:	08 00                	or     %al,(%rax)
   14bd7:	00 d8                	add    %bl,%al
   14bd9:	1f                   	(bad)  
   14bda:	ff                   	(bad)  
   14bdb:	ff 05 00 00 00 00    	incl   0x0(%rip)        # 14be1 <__GNU_EH_FRAME_HDR+0x1121>
   14be1:	00 00                	add    %al,(%rax)
   14be3:	00 10                	add    %dl,(%rax)
   14be5:	00 00                	add    %al,(%rax)
   14be7:	00 f0                	add    %dh,%al
   14be9:	08 00                	or     %al,(%rax)
   14beb:	00 d4                	add    %dl,%ah
   14bed:	1f                   	(bad)  
   14bee:	ff                   	(bad)  
   14bef:	ff 07                	incl   (%rdi)
   14bf1:	00 00                	add    %al,(%rax)
   14bf3:	00 00                	add    %al,(%rax)
   14bf5:	00 00                	add    %al,(%rax)
   14bf7:	00 10                	add    %dl,(%rax)
   14bf9:	00 00                	add    %al,(%rax)
   14bfb:	00 04 09             	add    %al,(%rcx,%rcx,1)
   14bfe:	00 00                	add    %al,(%rax)
   14c00:	d0 1f                	rcrb   (%rdi)
   14c02:	ff                   	(bad)  
   14c03:	ff 05 00 00 00 00    	incl   0x0(%rip)        # 14c09 <__GNU_EH_FRAME_HDR+0x1149>
   14c09:	00 00                	add    %al,(%rax)
   14c0b:	00 10                	add    %dl,(%rax)
   14c0d:	00 00                	add    %al,(%rax)
   14c0f:	00 18                	add    %bl,(%rax)
   14c11:	09 00                	or     %eax,(%rax)
   14c13:	00 cc                	add    %cl,%ah
   14c15:	1f                   	(bad)  
   14c16:	ff                   	(bad)  
   14c17:	ff 07                	incl   (%rdi)
   14c19:	00 00                	add    %al,(%rax)
   14c1b:	00 00                	add    %al,(%rax)
   14c1d:	00 00                	add    %al,(%rax)
   14c1f:	00 10                	add    %dl,(%rax)
   14c21:	00 00                	add    %al,(%rax)
   14c23:	00 2c 09             	add    %ch,(%rcx,%rcx,1)
   14c26:	00 00                	add    %al,(%rax)
   14c28:	c8 1f ff ff          	enter  $0xff1f,$0xff
   14c2c:	05 00 00 00 00       	add    $0x0,%eax
   14c31:	00 00                	add    %al,(%rax)
   14c33:	00 10                	add    %dl,(%rax)
   14c35:	00 00                	add    %al,(%rax)
   14c37:	00 40 09             	add    %al,0x9(%rax)
   14c3a:	00 00                	add    %al,(%rax)
   14c3c:	c4                   	(bad)  
   14c3d:	1f                   	(bad)  
   14c3e:	ff                   	(bad)  
   14c3f:	ff 05 00 00 00 00    	incl   0x0(%rip)        # 14c45 <__GNU_EH_FRAME_HDR+0x1185>
   14c45:	00 00                	add    %al,(%rax)
   14c47:	00 10                	add    %dl,(%rax)
   14c49:	00 00                	add    %al,(%rax)
   14c4b:	00 54 09 00          	add    %dl,0x0(%rcx,%rcx,1)
   14c4f:	00 c0                	add    %al,%al
   14c51:	1f                   	(bad)  
   14c52:	ff                   	(bad)  
   14c53:	ff 05 00 00 00 00    	incl   0x0(%rip)        # 14c59 <__GNU_EH_FRAME_HDR+0x1199>
   14c59:	00 00                	add    %al,(%rax)
   14c5b:	00 10                	add    %dl,(%rax)
   14c5d:	00 00                	add    %al,(%rax)
   14c5f:	00 68 09             	add    %ch,0x9(%rax)
   14c62:	00 00                	add    %al,(%rax)
   14c64:	bc 1f ff ff 05       	mov    $0x5ffff1f,%esp
   14c69:	00 00                	add    %al,(%rax)
   14c6b:	00 00                	add    %al,(%rax)
   14c6d:	00 00                	add    %al,(%rax)
   14c6f:	00 48 00             	add    %cl,0x0(%rax)
   14c72:	00 00                	add    %al,(%rax)
   14c74:	7c 09                	jl     14c7f <__GNU_EH_FRAME_HDR+0x11bf>
   14c76:	00 00                	add    %al,(%rax)
   14c78:	b8 1f ff ff 5f       	mov    $0x5fffff1f,%eax
   14c7d:	02 00                	add    (%rax),%al
   14c7f:	00 00                	add    %al,(%rax)
   14c81:	46 0e                	rex.RX (bad) 
   14c83:	10 8f 02 4c 0e 18    	adc    %cl,0x180e4c02(%rdi)
   14c89:	8e 03                	mov    (%rbx),%es
   14c8b:	46 0e                	rex.RX (bad) 
   14c8d:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   14c93:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff86315add <_end+0xffffffff862eaacd>
   14c99:	06                   	(bad)  
   14c9a:	44 0e                	rex.R (bad) 
   14c9c:	38 83 07 44 0e 70    	cmp    %al,0x700e4407(%rbx)
   14ca2:	03 38                	add    (%rax),%edi
   14ca4:	01 0a                	add    %ecx,(%rdx)
   14ca6:	0e                   	(bad)  
   14ca7:	38 41 0e             	cmp    %al,0xe(%rcx)
   14caa:	30 41 0e             	xor    %al,0xe(%rcx)
   14cad:	28 42 0e             	sub    %al,0xe(%rdx)
   14cb0:	20 42 0e             	and    %al,0xe(%rdx)
   14cb3:	18 42 0e             	sbb    %al,0xe(%rdx)
   14cb6:	10 42 0e             	adc    %al,0xe(%rdx)
   14cb9:	08 48 0b             	or     %cl,0xb(%rax)
   14cbc:	20 00                	and    %al,(%rax)
   14cbe:	00 00                	add    %al,(%rax)
   14cc0:	c8 09 00 00          	enter  $0x9,$0x0
   14cc4:	cc                   	int3   
   14cc5:	21 ff                	and    %edi,%edi
   14cc7:	ff 5b 02             	lcall  *0x2(%rbx)
   14cca:	00 00                	add    %al,(%rax)
   14ccc:	00 45 0e             	add    %al,0xe(%rbp)
   14ccf:	10 83 02 47 0e 90    	adc    %al,-0x6ff1b8fe(%rbx)
   14cd5:	01 02                	add    %eax,(%rdx)
   14cd7:	42 0a 0e             	rex.X or (%rsi),%cl
   14cda:	10 41 0e             	adc    %al,0xe(%rcx)
   14cdd:	08 41 0b             	or     %al,0xb(%rcx)
   14ce0:	28 00                	sub    %al,(%rax)
   14ce2:	00 00                	add    %al,(%rax)
   14ce4:	ec                   	in     (%dx),%al
   14ce5:	09 00                	or     %eax,(%rax)
   14ce7:	00 08                	add    %cl,(%rax)
   14ce9:	24 ff                	and    $0xff,%al
   14ceb:	ff                   	(bad)  
   14cec:	df 00                	filds  (%rax)
   14cee:	00 00                	add    %al,(%rax)
   14cf0:	00 45 0e             	add    %al,0xe(%rbp)
   14cf3:	10 86 02 41 0e 18    	adc    %al,0x180e4102(%rsi)
   14cf9:	83 03 47             	addl   $0x47,(%rbx)
   14cfc:	0e                   	(bad)  
   14cfd:	20 02                	and    %al,(%rdx)
   14cff:	bc 0a 0e 18 43       	mov    $0x43180e0a,%esp
   14d04:	0e                   	(bad)  
   14d05:	10 41 0e             	adc    %al,0xe(%rcx)
   14d08:	08 41 0b             	or     %al,0xb(%rcx)
   14d0b:	00 38                	add    %bh,(%rax)
   14d0d:	00 00                	add    %al,(%rax)
   14d0f:	00 18                	add    %bl,(%rax)
   14d11:	0a 00                	or     (%rax),%al
   14d13:	00 bc 24 ff ff df 00 	add    %bh,0xdfffff(%rsp)
   14d1a:	00 00                	add    %al,(%rax)
   14d1c:	00 4d 0e             	add    %cl,0xe(%rbp)
   14d1f:	10 8c 02 41 0e 18 86 	adc    %cl,-0x79e7f1bf(%rdx,%rax,1)
   14d26:	03 41 0e             	add    0xe(%rcx),%eax
   14d29:	20 83 04 02 97 0a    	and    %al,0xa970204(%rbx)
   14d2f:	0e                   	(bad)  
   14d30:	18 43 0e             	sbb    %al,0xe(%rbx)
   14d33:	10 42 0e             	adc    %al,0xe(%rdx)
   14d36:	08 45 0b             	or     %al,0xb(%rbp)
   14d39:	58                   	pop    %rax
   14d3a:	0a 0e                	or     (%rsi),%cl
   14d3c:	18 46 0e             	sbb    %al,0xe(%rsi)
   14d3f:	10 42 0e             	adc    %al,0xe(%rdx)
   14d42:	08 48 0b             	or     %cl,0xb(%rax)
   14d45:	00 00                	add    %al,(%rax)
   14d47:	00 5c 00 00          	add    %bl,0x0(%rax,%rax,1)
   14d4b:	00 54 0a 00          	add    %dl,0x0(%rdx,%rcx,1)
   14d4f:	00 b0 cd ff ff b1    	add    %dh,-0x4e000033(%rax)
   14d55:	01 00                	add    %eax,(%rax)
   14d57:	00 00                	add    %al,(%rax)
   14d59:	46 0e                	rex.RX (bad) 
   14d5b:	10 8d 02 45 0e 18    	adc    %cl,0x180e4502(%rbp)
   14d61:	8c 03                	mov    %es,(%rbx)
   14d63:	44 0e                	rex.R (bad) 
   14d65:	20 86 04 43 0e 28    	and    %al,0x280e4304(%rsi)
   14d6b:	83 05 46 0e 40 6a 0a 	addl   $0xa,0x6a400e46(%rip)        # 6a415bb8 <_end+0x6a3eaba8>
   14d72:	0e                   	(bad)  
   14d73:	28 41 0e             	sub    %al,0xe(%rcx)
   14d76:	20 41 0e             	and    %al,0xe(%rcx)
   14d79:	18 42 0e             	sbb    %al,0xe(%rdx)
   14d7c:	10 42 0e             	adc    %al,0xe(%rdx)
   14d7f:	08 48 0b             	or     %cl,0xb(%rax)
   14d82:	6a 0a                	push   $0xa
   14d84:	0e                   	(bad)  
   14d85:	28 41 0e             	sub    %al,0xe(%rcx)
   14d88:	20 41 0e             	and    %al,0xe(%rcx)
   14d8b:	18 42 0e             	sbb    %al,0xe(%rdx)
   14d8e:	10 42 0e             	adc    %al,0xe(%rdx)
   14d91:	08 48 0b             	or     %cl,0xb(%rax)
   14d94:	44 0a 0e             	or     (%rsi),%r9b
   14d97:	28 46 0e             	sub    %al,0xe(%rsi)
   14d9a:	20 41 0e             	and    %al,0xe(%rcx)
   14d9d:	18 42 0e             	sbb    %al,0xe(%rdx)
   14da0:	10 42 0e             	adc    %al,0xe(%rdx)
   14da3:	08 49 0b             	or     %cl,0xb(%rcx)
   14da6:	00 00                	add    %al,(%rax)
   14da8:	10 00                	adc    %al,(%rax)
   14daa:	00 00                	add    %al,(%rax)
   14dac:	b4 0a                	mov    $0xa,%ah
   14dae:	00 00                	add    %al,(%rax)
   14db0:	00 25 ff ff 2e 00    	add    %ah,0x2effff(%rip)        # 304db5 <_end+0x2d9da5>
   14db6:	00 00                	add    %al,(%rax)
   14db8:	00 00                	add    %al,(%rax)
   14dba:	00 00                	add    %al,(%rax)
   14dbc:	18 00                	sbb    %al,(%rax)
   14dbe:	00 00                	add    %al,(%rax)
   14dc0:	c8 0a 00 00          	enter  $0xa,$0x0
   14dc4:	1c 25                	sbb    $0x25,%al
   14dc6:	ff                   	(bad)  
   14dc7:	ff                   	(bad)  
   14dc8:	3b 00                	cmp    (%rax),%eax
   14dca:	00 00                	add    %al,(%rax)
   14dcc:	00 45 0e             	add    %al,0xe(%rbp)
   14dcf:	10 83 02 75 0e 08    	adc    %al,0x80e7502(%rbx)
   14dd5:	00 00                	add    %al,(%rax)
   14dd7:	00 2c 00             	add    %ch,(%rax,%rax,1)
   14dda:	00 00                	add    %al,(%rax)
   14ddc:	e4 0a                	in     $0xa,%al
   14dde:	00 00                	add    %al,(%rax)
   14de0:	40 25 ff ff bc 00    	rex and $0xbcffff,%eax
   14de6:	00 00                	add    %al,(%rax)
   14de8:	00 45 0e             	add    %al,0xe(%rbp)
   14deb:	10 86 02 44 0e 18    	adc    %al,0x180e4402(%rsi)
   14df1:	83 03 44             	addl   $0x44,(%rbx)
   14df4:	0e                   	(bad)  
   14df5:	30 02                	xor    %al,(%rdx)
   14df7:	43 0a 0e             	rex.XB or (%r14),%cl
   14dfa:	18 46 0e             	sbb    %al,0xe(%rsi)
   14dfd:	10 41 0e             	adc    %al,0xe(%rcx)
   14e00:	08 49 0b             	or     %cl,0xb(%rcx)
   14e03:	00 00                	add    %al,(%rax)
   14e05:	00 00                	add    %al,(%rax)
   14e07:	00 10                	add    %dl,(%rax)
   14e09:	00 00                	add    %al,(%rax)
   14e0b:	00 14 0b             	add    %dl,(%rbx,%rcx,1)
   14e0e:	00 00                	add    %al,(%rax)
   14e10:	d0 25 ff ff 10 00    	shlb   0x10ffff(%rip)        # 124e15 <_end+0xf9e05>
   14e16:	00 00                	add    %al,(%rax)
   14e18:	00 00                	add    %al,(%rax)
   14e1a:	00 00                	add    %al,(%rax)
   14e1c:	14 00                	adc    $0x0,%al
   14e1e:	00 00                	add    %al,(%rax)
   14e20:	28 0b                	sub    %cl,(%rbx)
   14e22:	00 00                	add    %al,(%rax)
   14e24:	cc                   	int3   
   14e25:	25 ff ff 22 00       	and    $0x22ffff,%eax
   14e2a:	00 00                	add    %al,(%rax)
   14e2c:	00 48 0e             	add    %cl,0xe(%rax)
   14e2f:	10 54 0e 08          	adc    %dl,0x8(%rsi,%rcx,1)
   14e33:	00 14 00             	add    %dl,(%rax,%rax,1)
   14e36:	00 00                	add    %al,(%rax)
   14e38:	40 0b 00             	rex or (%rax),%eax
   14e3b:	00 e4                	add    %ah,%ah
   14e3d:	25 ff ff 20 00       	and    $0x20ffff,%eax
   14e42:	00 00                	add    %al,(%rax)
   14e44:	00 48 0e             	add    %cl,0xe(%rax)
   14e47:	10 54 0e 08          	adc    %dl,0x8(%rsi,%rcx,1)
   14e4b:	00 10                	add    %dl,(%rax)
   14e4d:	00 00                	add    %al,(%rax)
   14e4f:	00 58 0b             	add    %bl,0xb(%rax)
   14e52:	00 00                	add    %al,(%rax)
   14e54:	ec                   	in     (%dx),%al
   14e55:	25 ff ff 61 00       	and    $0x61ffff,%eax
   14e5a:	00 00                	add    %al,(%rax)
   14e5c:	00 00                	add    %al,(%rax)
   14e5e:	00 00                	add    %al,(%rax)
   14e60:	10 00                	adc    %al,(%rax)
   14e62:	00 00                	add    %al,(%rax)
   14e64:	6c                   	insb   (%dx),%es:(%rdi)
   14e65:	0b 00                	or     (%rax),%eax
   14e67:	00 48 26             	add    %cl,0x26(%rax)
   14e6a:	ff                   	(bad)  
   14e6b:	ff 53 00             	call   *0x0(%rbx)
   14e6e:	00 00                	add    %al,(%rax)
   14e70:	00 00                	add    %al,(%rax)
   14e72:	00 00                	add    %al,(%rax)
   14e74:	14 00                	adc    $0x0,%al
   14e76:	00 00                	add    %al,(%rax)
   14e78:	80 0b 00             	orb    $0x0,(%rbx)
   14e7b:	00 94 26 ff ff 20 00 	add    %dl,0x20ffff(%rsi,%riz,1)
   14e82:	00 00                	add    %al,(%rax)
   14e84:	00 48 0e             	add    %cl,0xe(%rax)
   14e87:	10 54 0e 08          	adc    %dl,0x8(%rsi,%rcx,1)
   14e8b:	00 14 00             	add    %dl,(%rax,%rax,1)
   14e8e:	00 00                	add    %al,(%rax)
   14e90:	98                   	cwtl   
   14e91:	0b 00                	or     (%rax),%eax
   14e93:	00 9c 26 ff ff 78 00 	add    %bl,0x78ffff(%rsi,%riz,1)
   14e9a:	00 00                	add    %al,(%rax)
   14e9c:	00 48 0e             	add    %cl,0xe(%rax)
   14e9f:	10 02                	adc    %al,(%rdx)
   14ea1:	6c                   	insb   (%dx),%es:(%rdi)
   14ea2:	0e                   	(bad)  
   14ea3:	08 10                	or     %dl,(%rax)
   14ea5:	00 00                	add    %al,(%rax)
   14ea7:	00 b0 0b 00 00 04    	add    %dh,0x400000b(%rax)
   14ead:	27                   	(bad)  
   14eae:	ff                   	(bad)  
   14eaf:	ff 61 00             	jmp    *0x0(%rcx)
   14eb2:	00 00                	add    %al,(%rax)
   14eb4:	00 00                	add    %al,(%rax)
   14eb6:	00 00                	add    %al,(%rax)
   14eb8:	10 00                	adc    %al,(%rax)
   14eba:	00 00                	add    %al,(%rax)
   14ebc:	c4                   	(bad)  
   14ebd:	0b 00                	or     (%rax),%eax
   14ebf:	00 60 27             	add    %ah,0x27(%rax)
   14ec2:	ff                   	(bad)  
   14ec3:	ff 53 00             	call   *0x0(%rbx)
   14ec6:	00 00                	add    %al,(%rax)
   14ec8:	00 00                	add    %al,(%rax)
   14eca:	00 00                	add    %al,(%rax)
   14ecc:	14 00                	adc    $0x0,%al
   14ece:	00 00                	add    %al,(%rax)
   14ed0:	d8 0b                	fmuls  (%rbx)
   14ed2:	00 00                	add    %al,(%rax)
   14ed4:	ac                   	lods   %ds:(%rsi),%al
   14ed5:	27                   	(bad)  
   14ed6:	ff                   	(bad)  
   14ed7:	ff 16                	call   *(%rsi)
   14ed9:	00 00                	add    %al,(%rax)
   14edb:	00 00                	add    %al,(%rax)
   14edd:	48 0e                	rex.W (bad) 
   14edf:	10 49 0e             	adc    %cl,0xe(%rcx)
   14ee2:	08 00                	or     %al,(%rax)
   14ee4:	10 00                	adc    %al,(%rax)
   14ee6:	00 00                	add    %al,(%rax)
   14ee8:	f0 0b 00             	lock or (%rax),%eax
   14eeb:	00 b4 27 ff ff 43 00 	add    %dh,0x43ffff(%rdi,%riz,1)
   14ef2:	00 00                	add    %al,(%rax)
   14ef4:	00 00                	add    %al,(%rax)
   14ef6:	00 00                	add    %al,(%rax)
   14ef8:	24 00                	and    $0x0,%al
   14efa:	00 00                	add    %al,(%rax)
   14efc:	04 0c                	add    $0xc,%al
   14efe:	00 00                	add    %al,(%rax)
   14f00:	f0 27                	lock (bad) 
   14f02:	ff                   	(bad)  
   14f03:	ff                   	(bad)  
   14f04:	3f                   	(bad)  
   14f05:	00 00                	add    %al,(%rax)
   14f07:	00 00                	add    %al,(%rax)
   14f09:	45 0e                	rex.RB (bad) 
   14f0b:	10 86 02 44 0e 18    	adc    %al,0x180e4402(%rsi)
   14f11:	83 03 47             	addl   $0x47,(%rbx)
   14f14:	0e                   	(bad)  
   14f15:	20 6a 0e             	and    %ch,0xe(%rdx)
   14f18:	18 43 0e             	sbb    %al,0xe(%rbx)
   14f1b:	10 41 0e             	adc    %al,0xe(%rcx)
   14f1e:	08 00                	or     %al,(%rax)
   14f20:	18 00                	sbb    %al,(%rax)
   14f22:	00 00                	add    %al,(%rax)
   14f24:	2c 0c                	sub    $0xc,%al
   14f26:	00 00                	add    %al,(%rax)
   14f28:	08 28                	or     %ch,(%rax)
   14f2a:	ff                   	(bad)  
   14f2b:	ff 2e                	ljmp   *(%rsi)
   14f2d:	00 00                	add    %al,(%rax)
   14f2f:	00 00                	add    %al,(%rax)
   14f31:	51                   	push   %rcx
   14f32:	0e                   	(bad)  
   14f33:	10 83 02 57 0e 08    	adc    %al,0x80e5702(%rbx)
   14f39:	00 00                	add    %al,(%rax)
   14f3b:	00 14 00             	add    %dl,(%rax,%rax,1)
   14f3e:	00 00                	add    %al,(%rax)
   14f40:	48 0c 00             	rex.W or $0x0,%al
   14f43:	00 1c 28             	add    %bl,(%rax,%rbp,1)
   14f46:	ff                   	(bad)  
   14f47:	ff 22                	jmp    *(%rdx)
   14f49:	00 00                	add    %al,(%rax)
   14f4b:	00 00                	add    %al,(%rax)
   14f4d:	48 0e                	rex.W (bad) 
   14f4f:	10 59 0e             	adc    %bl,0xe(%rcx)
   14f52:	08 00                	or     %al,(%rax)
   14f54:	10 00                	adc    %al,(%rax)
   14f56:	00 00                	add    %al,(%rax)
   14f58:	60                   	(bad)  
   14f59:	0c 00                	or     $0x0,%al
   14f5b:	00 34 28             	add    %dh,(%rax,%rbp,1)
   14f5e:	ff                   	(bad)  
   14f5f:	ff 25 00 00 00 00    	jmp    *0x0(%rip)        # 14f65 <__GNU_EH_FRAME_HDR+0x14a5>
   14f65:	00 00                	add    %al,(%rax)
   14f67:	00 14 00             	add    %dl,(%rax,%rax,1)
   14f6a:	00 00                	add    %al,(%rax)
   14f6c:	74 0c                	je     14f7a <__GNU_EH_FRAME_HDR+0x14ba>
   14f6e:	00 00                	add    %al,(%rax)
   14f70:	50                   	push   %rax
   14f71:	28 ff                	sub    %bh,%bh
   14f73:	ff 19                	lcall  *(%rcx)
   14f75:	00 00                	add    %al,(%rax)
   14f77:	00 00                	add    %al,(%rax)
   14f79:	48 0e                	rex.W (bad) 
   14f7b:	10 49 0e             	adc    %cl,0xe(%rcx)
   14f7e:	08 00                	or     %al,(%rax)
   14f80:	10 00                	adc    %al,(%rax)
   14f82:	00 00                	add    %al,(%rax)
   14f84:	8c 0c 00             	mov    %cs,(%rax,%rax,1)
   14f87:	00 58 28             	add    %bl,0x28(%rax)
   14f8a:	ff                   	(bad)  
   14f8b:	ff 16                	call   *(%rsi)
   14f8d:	00 00                	add    %al,(%rax)
   14f8f:	00 00                	add    %al,(%rax)
   14f91:	00 00                	add    %al,(%rax)
   14f93:	00 10                	add    %dl,(%rax)
   14f95:	00 00                	add    %al,(%rax)
   14f97:	00 a0 0c 00 00 64    	add    %ah,0x6400000c(%rax)
   14f9d:	28 ff                	sub    %bh,%bh
   14f9f:	ff 13                	call   *(%rbx)
   14fa1:	00 00                	add    %al,(%rax)
   14fa3:	00 00                	add    %al,(%rax)
   14fa5:	00 00                	add    %al,(%rax)
   14fa7:	00 1c 00             	add    %bl,(%rax,%rax,1)
   14faa:	00 00                	add    %al,(%rax)
   14fac:	b4 0c                	mov    $0xc,%ah
   14fae:	00 00                	add    %al,(%rax)
   14fb0:	70 28                	jo     14fda <__GNU_EH_FRAME_HDR+0x151a>
   14fb2:	ff                   	(bad)  
   14fb3:	ff 2f                	ljmp   *(%rdi)
   14fb5:	00 00                	add    %al,(%rax)
   14fb7:	00 00                	add    %al,(%rax)
   14fb9:	48 0e                	rex.W (bad) 
   14fbb:	10 59 0a             	adc    %bl,0xa(%rcx)
   14fbe:	0e                   	(bad)  
   14fbf:	08 47 0b             	or     %al,0xb(%rdi)
   14fc2:	46 0e                	rex.RX (bad) 
   14fc4:	08 00                	or     %al,(%rax)
   14fc6:	00 00                	add    %al,(%rax)
   14fc8:	20 00                	and    %al,(%rax)
   14fca:	00 00                	add    %al,(%rax)
   14fcc:	d4                   	(bad)  
   14fcd:	0c 00                	or     $0x0,%al
   14fcf:	00 80 28 ff ff ed    	add    %al,-0x120000d8(%rax)
   14fd5:	03 00                	add    (%rax),%eax
   14fd7:	00 00                	add    %al,(%rax)
   14fd9:	45 0e                	rex.RB (bad) 
   14fdb:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
   14fe1:	49 8f 03             	rex.WB pop (%r11)
   14fe4:	8e 04 8d 05 8c 06 83 	mov    -0x7cf973fb(,%rcx,4),%es
   14feb:	07                   	(bad)  
   14fec:	38 00                	cmp    %al,(%rax)
   14fee:	00 00                	add    %al,(%rax)
   14ff0:	f8                   	clc    
   14ff1:	0c 00                	or     $0x0,%al
   14ff3:	00 4c 2c ff          	add    %cl,-0x1(%rsp,%rbp,1)
   14ff7:	ff 4e 01             	decl   0x1(%rsi)
   14ffa:	00 00                	add    %al,(%rax)
   14ffc:	00 46 0e             	add    %al,0xe(%rsi)
   14fff:	10 8d 02 42 0e 18    	adc    %cl,0x180e4202(%rbp)
   15005:	8c 03                	mov    %es,(%rbx)
   15007:	44 0e                	rex.R (bad) 
   15009:	20 86 04 44 0e 28    	and    %al,0x280e4404(%rsi)
   1500f:	83 05 44 0e 40 02 bb 	addl   $0xffffffbb,0x2400e44(%rip)        # 2415e5a <_end+0x23eae4a>
   15016:	0a 0e                	or     (%rsi),%cl
   15018:	28 44 0e 20          	sub    %al,0x20(%rsi,%rcx,1)
   1501c:	41 0e                	rex.B (bad) 
   1501e:	18 42 0e             	sbb    %al,0xe(%rdx)
   15021:	10 42 0e             	adc    %al,0xe(%rdx)
   15024:	08 48 0b             	or     %cl,0xb(%rax)
   15027:	00 38                	add    %bh,(%rax)
   15029:	00 00                	add    %al,(%rax)
   1502b:	00 34 0d 00 00 60 2d 	add    %dh,0x2d600000(,%rcx,1)
   15032:	ff                   	(bad)  
   15033:	ff ab 00 00 00 00    	ljmp   *0x0(%rbx)
   15039:	4e 0e                	rex.WRX (bad) 
   1503b:	10 86 02 48 0e 18    	adc    %al,0x180e4802(%rsi)
   15041:	83 03 4a             	addl   $0x4a,(%rbx)
   15044:	0e                   	(bad)  
   15045:	20 7d 0a             	and    %bh,0xa(%rbp)
   15048:	0e                   	(bad)  
   15049:	18 43 0e             	sbb    %al,0xe(%rbx)
   1504c:	10 41 0e             	adc    %al,0xe(%rcx)
   1504f:	08 47 0b             	or     %al,0xb(%rdi)
   15052:	5c                   	pop    %rsp
   15053:	0a 0e                	or     (%rsi),%cl
   15055:	18 46 0e             	sbb    %al,0xe(%rsi)
   15058:	10 41 0e             	adc    %al,0xe(%rcx)
   1505b:	08 45 0b             	or     %al,0xb(%rbp)
   1505e:	58                   	pop    %rax
   1505f:	0e                   	(bad)  
   15060:	08 c3                	or     %al,%bl
   15062:	c6 00 48             	movb   $0x48,(%rax)
   15065:	00 00                	add    %al,(%rax)
   15067:	00 70 0d             	add    %dh,0xd(%rax)
   1506a:	00 00                	add    %al,(%rax)
   1506c:	d4                   	(bad)  
   1506d:	2d ff ff af 03       	sub    $0x3afffff,%eax
   15072:	00 00                	add    %al,(%rax)
   15074:	00 46 0e             	add    %al,0xe(%rsi)
   15077:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   1507d:	8e 03                	mov    (%rbx),%es
   1507f:	42 0e                	rex.X (bad) 
   15081:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   15087:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff86315ece <_end+0xffffffff862eaebe>
   1508d:	06                   	(bad)  
   1508e:	41 0e                	rex.B (bad) 
   15090:	38 83 07 47 0e 40    	cmp    %al,0x400e4707(%rbx)
   15096:	02 5e 0a             	add    0xa(%rsi),%bl
   15099:	0e                   	(bad)  
   1509a:	38 41 0e             	cmp    %al,0xe(%rcx)
   1509d:	30 41 0e             	xor    %al,0xe(%rcx)
   150a0:	28 42 0e             	sub    %al,0xe(%rdx)
   150a3:	20 42 0e             	and    %al,0xe(%rdx)
   150a6:	18 42 0e             	sbb    %al,0xe(%rdx)
   150a9:	10 42 0e             	adc    %al,0xe(%rdx)
   150ac:	08 43 0b             	or     %al,0xb(%rbx)
   150af:	00 14 00             	add    %dl,(%rax,%rax,1)
   150b2:	00 00                	add    %al,(%rax)
   150b4:	bc 0d 00 00 38       	mov    $0x3800000d,%esp
   150b9:	31 ff                	xor    %edi,%edi
   150bb:	ff 25 00 00 00 00    	jmp    *0x0(%rip)        # 150c1 <__GNU_EH_FRAME_HDR+0x1601>
   150c1:	48 0e                	rex.W (bad) 
   150c3:	10 5c 0e 08          	adc    %bl,0x8(%rsi,%rcx,1)
   150c7:	00 10                	add    %dl,(%rax)
   150c9:	00 00                	add    %al,(%rax)
   150cb:	00 d4                	add    %dl,%ah
   150cd:	0d 00 00 50 31       	or     $0x31500000,%eax
   150d2:	ff                   	(bad)  
   150d3:	ff 6e 00             	ljmp   *0x0(%rsi)
   150d6:	00 00                	add    %al,(%rax)
   150d8:	00 00                	add    %al,(%rax)
   150da:	00 00                	add    %al,(%rax)
   150dc:	34 00                	xor    $0x0,%al
   150de:	00 00                	add    %al,(%rax)
   150e0:	e8 0d 00 00 ac       	call   ffffffffac0150f2 <_end+0xffffffffabfea0e2>
   150e5:	31 ff                	xor    %edi,%edi
   150e7:	ff                   	(bad)  
   150e8:	d8 01                	fadds  (%rcx)
   150ea:	00 00                	add    %al,(%rax)
   150ec:	00 54 0e 10          	add    %dl,0x10(%rsi,%rcx,1)
   150f0:	86 02                	xchg   %al,(%rdx)
   150f2:	4d 0e                	rex.WRB (bad) 
   150f4:	18 83 03 02 a7 0a    	sbb    %al,0xaa70203(%rbx)
   150fa:	0e                   	(bad)  
   150fb:	10 41 0e             	adc    %al,0xe(%rcx)
   150fe:	08 47 0b             	or     %al,0xb(%rdi)
   15101:	02 44 0a 0e          	add    0xe(%rdx,%rcx,1),%al
   15105:	10 41 0e             	adc    %al,0xe(%rcx)
   15108:	08 4b 0b             	or     %cl,0xb(%rbx)
   1510b:	02 b5 0e 08 c3 c6    	add    -0x393cf7f2(%rbp),%dh
   15111:	00 00                	add    %al,(%rax)
   15113:	00 78 00             	add    %bh,0x0(%rax)
   15116:	00 00                	add    %al,(%rax)
   15118:	20 0e                	and    %cl,(%rsi)
   1511a:	00 00                	add    %al,(%rax)
   1511c:	54                   	push   %rsp
   1511d:	33 ff                	xor    %edi,%edi
   1511f:	ff 21                	jmp    *(%rcx)
   15121:	02 00                	add    (%rax),%al
   15123:	00 00                	add    %al,(%rax)
   15125:	66 0e                	data16 (bad) 
   15127:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   1512d:	8e 03                	mov    (%rbx),%es
   1512f:	42 0e                	rex.X (bad) 
   15131:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   15137:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff86315f7e <_end+0xffffffff862eaf6e>
   1513d:	06                   	(bad)  
   1513e:	41 0e                	rex.B (bad) 
   15140:	38 83 07 47 0e 40    	cmp    %al,0x400e4707(%rbx)
   15146:	03 0b                	add    (%rbx),%ecx
   15148:	01 0a                	add    %ecx,(%rdx)
   1514a:	0e                   	(bad)  
   1514b:	38 46 0e             	cmp    %al,0xe(%rsi)
   1514e:	30 41 0e             	xor    %al,0xe(%rcx)
   15151:	28 42 0e             	sub    %al,0xe(%rdx)
   15154:	20 42 0e             	and    %al,0xe(%rdx)
   15157:	18 42 0e             	sbb    %al,0xe(%rdx)
   1515a:	10 42 0e             	adc    %al,0xe(%rdx)
   1515d:	08 41 0b             	or     %al,0xb(%rcx)
   15160:	02 90 0e 08 c3 c6    	add    -0x393cf7f2(%rax),%dl
   15166:	cc                   	int3   
   15167:	cd ce                	int    $0xce
   15169:	cf                   	iret   
   1516a:	50                   	push   %rax
   1516b:	0e                   	(bad)  
   1516c:	40 83 07 86          	rex addl $0xffffff86,(%rdi)
   15170:	06                   	(bad)  
   15171:	8c 05 8d 04 8e 03    	mov    %es,0x38e048d(%rip)        # 38f5604 <_end+0x38ca5f4>
   15177:	8f 02                	pop    (%rdx)
   15179:	64 0e                	fs (bad) 
   1517b:	38 43 0e             	cmp    %al,0xe(%rbx)
   1517e:	30 41 0e             	xor    %al,0xe(%rcx)
   15181:	28 42 0e             	sub    %al,0xe(%rdx)
   15184:	20 42 0e             	and    %al,0xe(%rdx)
   15187:	18 42 0e             	sbb    %al,0xe(%rdx)
   1518a:	10 42 0e             	adc    %al,0xe(%rdx)
   1518d:	08 00                	or     %al,(%rax)
   1518f:	00 10                	add    %dl,(%rax)
   15191:	00 00                	add    %al,(%rax)
   15193:	00 9c 0e 00 00 08 35 	add    %bl,0x35080000(%rsi,%rcx,1)
   1519a:	ff                   	(bad)  
   1519b:	ff 96 00 00 00 00    	call   *0x0(%rsi)
   151a1:	00 00                	add    %al,(%rax)
   151a3:	00 10                	add    %dl,(%rax)
   151a5:	00 00                	add    %al,(%rax)
   151a7:	00 b0 0e 00 00 94    	add    %dh,-0x6bfffff2(%rax)
   151ad:	35 ff ff e4 00       	xor    $0xe4ffff,%eax
   151b2:	00 00                	add    %al,(%rax)
   151b4:	00 00                	add    %al,(%rax)
   151b6:	00 00                	add    %al,(%rax)
   151b8:	10 00                	adc    %al,(%rax)
   151ba:	00 00                	add    %al,(%rax)
   151bc:	c4                   	(bad)  
   151bd:	0e                   	(bad)  
   151be:	00 00                	add    %al,(%rax)
   151c0:	70 36                	jo     151f8 <__GNU_EH_FRAME_HDR+0x1738>
   151c2:	ff                   	(bad)  
   151c3:	ff e4                	jmp    *%rsp
   151c5:	00 00                	add    %al,(%rax)
   151c7:	00 00                	add    %al,(%rax)
   151c9:	00 00                	add    %al,(%rax)
   151cb:	00 50 00             	add    %dl,0x0(%rax)
   151ce:	00 00                	add    %al,(%rax)
   151d0:	d8 0e                	fmuls  (%rsi)
   151d2:	00 00                	add    %al,(%rax)
   151d4:	4c 37                	rex.WR (bad) 
   151d6:	ff                   	(bad)  
   151d7:	ff d1                	call   *%rcx
   151d9:	01 00                	add    %eax,(%rax)
   151db:	00 00                	add    %al,(%rax)
   151dd:	4f 0e                	rex.WRXB (bad) 
   151df:	10 8e 02 42 0e 18    	adc    %cl,0x180e4202(%rsi)
   151e5:	8d 03                	lea    (%rbx),%eax
   151e7:	45 0e                	rex.RB (bad) 
   151e9:	20 8c 04 41 0e 28 86 	and    %cl,-0x79d7f1bf(%rsp,%rax,1)
   151f0:	05 41 0e 30 83       	add    $0x83300e41,%eax
   151f5:	06                   	(bad)  
   151f6:	02 ce                	add    %dh,%cl
   151f8:	0a 0e                	or     (%rsi),%cl
   151fa:	28 41 0e             	sub    %al,0xe(%rcx)
   151fd:	20 42 0e             	and    %al,0xe(%rdx)
   15200:	18 42 0e             	sbb    %al,0xe(%rdx)
   15203:	10 42 0e             	adc    %al,0xe(%rdx)
   15206:	08 43 0b             	or     %al,0xb(%rbx)
   15209:	02 d1                	add    %cl,%dl
   1520b:	0e                   	(bad)  
   1520c:	28 43 0e             	sub    %al,0xe(%rbx)
   1520f:	20 42 0e             	and    %al,0xe(%rdx)
   15212:	18 42 0e             	sbb    %al,0xe(%rdx)
   15215:	10 42 0e             	adc    %al,0xe(%rdx)
   15218:	08 41 c3             	or     %al,-0x3d(%rcx)
   1521b:	c6                   	(bad)  
   1521c:	cc                   	int3   
   1521d:	cd ce                	int    $0xce
   1521f:	00 4c 00 00          	add    %cl,0x0(%rax,%rax,1)
   15223:	00 2c 0f             	add    %ch,(%rdi,%rcx,1)
   15226:	00 00                	add    %al,(%rax)
   15228:	d8 38                	fdivrs (%rax)
   1522a:	ff                   	(bad)  
   1522b:	ff                   	(bad)  
   1522c:	fb                   	sti    
   1522d:	00 00                	add    %al,(%rax)
   1522f:	00 00                	add    %al,(%rax)
   15231:	4f 0e                	rex.WRXB (bad) 
   15233:	10 8d 02 45 0e 18    	adc    %cl,0x180e4502(%rbp)
   15239:	8c 03                	mov    %es,(%rbx)
   1523b:	41 0e                	rex.B (bad) 
   1523d:	20 86 04 41 0e 28    	and    %al,0x280e4104(%rsi)
   15243:	83 05 44 0e 30 02 be 	addl   $0xffffffbe,0x2300e44(%rip)        # 231608e <_end+0x22eb07e>
   1524a:	0a 0e                	or     (%rsi),%cl
   1524c:	28 46 0e             	sub    %al,0xe(%rsi)
   1524f:	20 41 0e             	and    %al,0xe(%rcx)
   15252:	18 42 0e             	sbb    %al,0xe(%rdx)
   15255:	10 42 0e             	adc    %al,0xe(%rdx)
   15258:	08 45 0b             	or     %al,0xb(%rbp)
   1525b:	44 0e                	rex.R (bad) 
   1525d:	28 43 0e             	sub    %al,0xe(%rbx)
   15260:	20 41 0e             	and    %al,0xe(%rcx)
   15263:	18 42 0e             	sbb    %al,0xe(%rdx)
   15266:	10 42 0e             	adc    %al,0xe(%rdx)
   15269:	08 41 c3             	or     %al,-0x3d(%rcx)
   1526c:	c6                   	(bad)  
   1526d:	cc                   	int3   
   1526e:	cd 00                	int    $0x0
   15270:	38 00                	cmp    %al,(%rax)
   15272:	00 00                	add    %al,(%rax)
   15274:	7c 0f                	jl     15285 <__GNU_EH_FRAME_HDR+0x17c5>
   15276:	00 00                	add    %al,(%rax)
   15278:	88 39                	mov    %bh,(%rcx)
   1527a:	ff                   	(bad)  
   1527b:	ff 26                	jmp    *(%rsi)
   1527d:	01 00                	add    %eax,(%rax)
   1527f:	00 00                	add    %al,(%rax)
   15281:	46 0e                	rex.RX (bad) 
   15283:	10 8d 02 45 0e 18    	adc    %cl,0x180e4502(%rbp)
   15289:	8c 03                	mov    %es,(%rbx)
   1528b:	44 0e                	rex.R (bad) 
   1528d:	20 86 04 44 0e 28    	and    %al,0x280e4404(%rsi)
   15293:	83 05 44 0e 40 02 9d 	addl   $0xffffff9d,0x2400e44(%rip)        # 24160de <_end+0x23eb0ce>
   1529a:	0a 0e                	or     (%rsi),%cl
   1529c:	28 41 0e             	sub    %al,0xe(%rcx)
   1529f:	20 41 0e             	and    %al,0xe(%rcx)
   152a2:	18 42 0e             	sbb    %al,0xe(%rdx)
   152a5:	10 42 0e             	adc    %al,0xe(%rdx)
   152a8:	08 46 0b             	or     %al,0xb(%rsi)
   152ab:	00 10                	add    %dl,(%rax)
   152ad:	00 00                	add    %al,(%rax)
   152af:	00 b8 0f 00 00 7c    	add    %bh,0x7c00000f(%rax)
   152b5:	3a ff                	cmp    %bh,%bh
   152b7:	ff 12                	call   *(%rdx)
   152b9:	00 00                	add    %al,(%rax)
   152bb:	00 00                	add    %al,(%rax)
   152bd:	00 00                	add    %al,(%rax)
   152bf:	00 28                	add    %ch,(%rax)
   152c1:	00 00                	add    %al,(%rax)
   152c3:	00 cc                	add    %cl,%ah
   152c5:	0f 00 00             	sldt   (%rax)
   152c8:	88 3a                	mov    %bh,(%rdx)
   152ca:	ff                   	(bad)  
   152cb:	ff 97 00 00 00 00    	call   *0x0(%rdi)
   152d1:	45 0e                	rex.RB (bad) 
   152d3:	10 86 02 41 0e 18    	adc    %al,0x180e4102(%rsi)
   152d9:	83 03 44             	addl   $0x44,(%rbx)
   152dc:	0e                   	(bad)  
   152dd:	40 02 85 0a 0e 18 41 	rex add 0x41180e0a(%rbp),%al
   152e4:	0e                   	(bad)  
   152e5:	10 41 0e             	adc    %al,0xe(%rcx)
   152e8:	08 41 0b             	or     %al,0xb(%rcx)
   152eb:	00 28                	add    %ch,(%rax)
   152ed:	00 00                	add    %al,(%rax)
   152ef:	00 f8                	add    %bh,%al
   152f1:	0f 00 00             	sldt   (%rax)
   152f4:	fc                   	cld    
   152f5:	3a ff                	cmp    %bh,%bh
   152f7:	ff c7                	inc    %edi
   152f9:	00 00                	add    %al,(%rax)
   152fb:	00 00                	add    %al,(%rax)
   152fd:	45 0e                	rex.RB (bad) 
   152ff:	10 86 02 41 0e 18    	adc    %al,0x180e4102(%rsi)
   15305:	83 03 44             	addl   $0x44,(%rbx)
   15308:	0e                   	(bad)  
   15309:	40 02 b5 0a 0e 18 41 	add    0x41180e0a(%rbp),%sil
   15310:	0e                   	(bad)  
   15311:	10 41 0e             	adc    %al,0xe(%rcx)
   15314:	08 41 0b             	or     %al,0xb(%rcx)
   15317:	00 10                	add    %dl,(%rax)
   15319:	00 00                	add    %al,(%rax)
   1531b:	00 24 10             	add    %ah,(%rax,%rdx,1)
   1531e:	00 00                	add    %al,(%rax)
   15320:	f2 c9                	repnz leave 
   15322:	ff                   	(bad)  
   15323:	ff 01                	incl   (%rcx)
   15325:	00 00                	add    %al,(%rax)
   15327:	00 00                	add    %al,(%rax)
   15329:	00 00                	add    %al,(%rax)
   1532b:	00 10                	add    %dl,(%rax)
   1532d:	00 00                	add    %al,(%rax)
   1532f:	00 38                	add    %bh,(%rax)
   15331:	10 00                	adc    %al,(%rax)
   15333:	00 df                	add    %bl,%bh
   15335:	c9                   	leave  
   15336:	ff                   	(bad)  
   15337:	ff 02                	incl   (%rdx)
   15339:	00 00                	add    %al,(%rax)
   1533b:	00 00                	add    %al,(%rax)
   1533d:	00 00                	add    %al,(%rax)
   1533f:	00 10                	add    %dl,(%rax)
   15341:	00 00                	add    %al,(%rax)
   15343:	00 4c 10 00          	add    %cl,0x0(%rax,%rdx,1)
   15347:	00 cd                	add    %cl,%ch
   15349:	c9                   	leave  
   1534a:	ff                   	(bad)  
   1534b:	ff 02                	incl   (%rdx)
   1534d:	00 00                	add    %al,(%rax)
   1534f:	00 00                	add    %al,(%rax)
   15351:	00 00                	add    %al,(%rax)
   15353:	00 10                	add    %dl,(%rax)
   15355:	00 00                	add    %al,(%rax)
   15357:	00 60 10             	add    %ah,0x10(%rax)
   1535a:	00 00                	add    %al,(%rax)
   1535c:	bb c9 ff ff 02       	mov    $0x2ffffc9,%ebx
   15361:	00 00                	add    %al,(%rax)
   15363:	00 00                	add    %al,(%rax)
   15365:	00 00                	add    %al,(%rax)
   15367:	00 10                	add    %dl,(%rax)
   15369:	00 00                	add    %al,(%rax)
   1536b:	00 74 10 00          	add    %dh,0x0(%rax,%rdx,1)
   1536f:	00 a9 c9 ff ff 02    	add    %ch,0x2ffffc9(%rcx)
   15375:	00 00                	add    %al,(%rax)
   15377:	00 00                	add    %al,(%rax)
   15379:	00 00                	add    %al,(%rax)
   1537b:	00 10                	add    %dl,(%rax)
   1537d:	00 00                	add    %al,(%rax)
   1537f:	00 88 10 00 00 97    	add    %cl,-0x68fffff0(%rax)
   15385:	c9                   	leave  
   15386:	ff                   	(bad)  
   15387:	ff 02                	incl   (%rdx)
   15389:	00 00                	add    %al,(%rax)
   1538b:	00 00                	add    %al,(%rax)
   1538d:	00 00                	add    %al,(%rax)
   1538f:	00 10                	add    %dl,(%rax)
   15391:	00 00                	add    %al,(%rax)
   15393:	00 9c 10 00 00 85 c9 	add    %bl,-0x367b0000(%rax,%rdx,1)
   1539a:	ff                   	(bad)  
   1539b:	ff 02                	incl   (%rdx)
   1539d:	00 00                	add    %al,(%rax)
   1539f:	00 00                	add    %al,(%rax)
   153a1:	00 00                	add    %al,(%rax)
   153a3:	00 10                	add    %dl,(%rax)
   153a5:	00 00                	add    %al,(%rax)
   153a7:	00 b0 10 00 00 73    	add    %dh,0x73000010(%rax)
   153ad:	c9                   	leave  
   153ae:	ff                   	(bad)  
   153af:	ff 02                	incl   (%rdx)
   153b1:	00 00                	add    %al,(%rax)
   153b3:	00 00                	add    %al,(%rax)
   153b5:	00 00                	add    %al,(%rax)
   153b7:	00 10                	add    %dl,(%rax)
   153b9:	00 00                	add    %al,(%rax)
   153bb:	00 c4                	add    %al,%ah
   153bd:	10 00                	adc    %al,(%rax)
   153bf:	00 61 c9             	add    %ah,-0x37(%rcx)
   153c2:	ff                   	(bad)  
   153c3:	ff 03                	incl   (%rbx)
   153c5:	00 00                	add    %al,(%rax)
   153c7:	00 00                	add    %al,(%rax)
   153c9:	00 00                	add    %al,(%rax)
   153cb:	00 10                	add    %dl,(%rax)
   153cd:	00 00                	add    %al,(%rax)
   153cf:	00 d8                	add    %bl,%al
   153d1:	10 00                	adc    %al,(%rax)
   153d3:	00 50 c9             	add    %dl,-0x37(%rax)
   153d6:	ff                   	(bad)  
   153d7:	ff 03                	incl   (%rbx)
   153d9:	00 00                	add    %al,(%rax)
   153db:	00 00                	add    %al,(%rax)
   153dd:	00 00                	add    %al,(%rax)
   153df:	00 10                	add    %dl,(%rax)
   153e1:	00 00                	add    %al,(%rax)
   153e3:	00 ec                	add    %ch,%ah
   153e5:	10 00                	adc    %al,(%rax)
   153e7:	00 3f                	add    %bh,(%rdi)
   153e9:	c9                   	leave  
   153ea:	ff                   	(bad)  
   153eb:	ff 03                	incl   (%rbx)
   153ed:	00 00                	add    %al,(%rax)
   153ef:	00 00                	add    %al,(%rax)
   153f1:	00 00                	add    %al,(%rax)
   153f3:	00 10                	add    %dl,(%rax)
   153f5:	00 00                	add    %al,(%rax)
   153f7:	00 00                	add    %al,(%rax)
   153f9:	11 00                	adc    %eax,(%rax)
   153fb:	00 2e                	add    %ch,(%rsi)
   153fd:	c9                   	leave  
   153fe:	ff                   	(bad)  
   153ff:	ff 03                	incl   (%rbx)
   15401:	00 00                	add    %al,(%rax)
   15403:	00 00                	add    %al,(%rax)
   15405:	00 00                	add    %al,(%rax)
   15407:	00 10                	add    %dl,(%rax)
   15409:	00 00                	add    %al,(%rax)
   1540b:	00 14 11             	add    %dl,(%rcx,%rdx,1)
   1540e:	00 00                	add    %al,(%rax)
   15410:	1d c9 ff ff 03       	sbb    $0x3ffffc9,%eax
   15415:	00 00                	add    %al,(%rax)
   15417:	00 00                	add    %al,(%rax)
   15419:	00 00                	add    %al,(%rax)
   1541b:	00 10                	add    %dl,(%rax)
   1541d:	00 00                	add    %al,(%rax)
   1541f:	00 28                	add    %ch,(%rax)
   15421:	11 00                	adc    %eax,(%rax)
   15423:	00 0c c9             	add    %cl,(%rcx,%rcx,8)
   15426:	ff                   	(bad)  
   15427:	ff 03                	incl   (%rbx)
   15429:	00 00                	add    %al,(%rax)
   1542b:	00 00                	add    %al,(%rax)
   1542d:	00 00                	add    %al,(%rax)
   1542f:	00 10                	add    %dl,(%rax)
   15431:	00 00                	add    %al,(%rax)
   15433:	00 3c 11             	add    %bh,(%rcx,%rdx,1)
   15436:	00 00                	add    %al,(%rax)
   15438:	fb                   	sti    
   15439:	c8 ff ff 03          	enter  $0xffff,$0x3
   1543d:	00 00                	add    %al,(%rax)
   1543f:	00 00                	add    %al,(%rax)
   15441:	00 00                	add    %al,(%rax)
   15443:	00 10                	add    %dl,(%rax)
   15445:	00 00                	add    %al,(%rax)
   15447:	00 50 11             	add    %dl,0x11(%rax)
   1544a:	00 00                	add    %al,(%rax)
   1544c:	ea                   	(bad)  
   1544d:	c8 ff ff 03          	enter  $0xffff,$0x3
   15451:	00 00                	add    %al,(%rax)
   15453:	00 00                	add    %al,(%rax)
   15455:	00 00                	add    %al,(%rax)
   15457:	00 1c 00             	add    %bl,(%rax,%rax,1)
   1545a:	00 00                	add    %al,(%rax)
   1545c:	64 11 00             	adc    %eax,%fs:(%rax)
   1545f:	00 60 3a             	add    %ah,0x3a(%rax)
   15462:	ff                   	(bad)  
   15463:	ff 17                	call   *(%rdi)
   15465:	00 00                	add    %al,(%rax)
   15467:	00 00                	add    %al,(%rax)
   15469:	45 0e                	rex.RB (bad) 
   1546b:	10 83 02 51 0e 08    	adc    %al,0x80e5102(%rbx)
   15471:	00 00                	add    %al,(%rax)
   15473:	00 00                	add    %al,(%rax)
   15475:	00 00                	add    %al,(%rax)
   15477:	00 18                	add    %bl,(%rax)
   15479:	00 00                	add    %al,(%rax)
   1547b:	00 84 11 00 00 e3 cc 	add    %al,-0x331d0000(%rcx,%rdx,1)
   15482:	ff                   	(bad)  
   15483:	ff 43 01             	incl   0x1(%rbx)
   15486:	00 00                	add    %al,(%rax)
   15488:	00 02                	add    %al,(%rdx)
   1548a:	4b 0e                	rex.WXB (bad) 
   1548c:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
   15492:	00 00                	add    %al,(%rax)
   15494:	18 00                	sbb    %al,(%rax)
   15496:	00 00                	add    %al,(%rax)
   15498:	a0 11 00 00 47 cf ff 	movabs 0xfffffcf47000011,%al
   1549f:	ff 0f 
   154a1:	00 00                	add    %al,(%rax)
   154a3:	00 00                	add    %al,(%rax)
   154a5:	41 0e                	rex.B (bad) 
   154a7:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
   154ad:	00 00                	add    %al,(%rax)
   154af:	00 10                	add    %dl,(%rax)
   154b1:	00 00                	add    %al,(%rax)
   154b3:	00 bc 11 00 00 ac cf 	add    %bh,-0x30540000(%rcx,%rdx,1)
   154ba:	ff                   	(bad)  
   154bb:	ff 1c 00             	lcall  *(%rax,%rax,1)
   154be:	00 00                	add    %al,(%rax)
   154c0:	00 00                	add    %al,(%rax)
   154c2:	00 00                	add    %al,(%rax)
   154c4:	10 00                	adc    %al,(%rax)
   154c6:	00 00                	add    %al,(%rax)
   154c8:	d0 11                	rclb   (%rcx)
   154ca:	00 00                	add    %al,(%rax)
   154cc:	b8 cf ff ff 1b       	mov    $0x1bffffcf,%eax
   154d1:	00 00                	add    %al,(%rax)
   154d3:	00 00                	add    %al,(%rax)
   154d5:	00 00                	add    %al,(%rax)
   154d7:	00 10                	add    %dl,(%rax)
   154d9:	00 00                	add    %al,(%rax)
   154db:	00 e4                	add    %ah,%ah
   154dd:	11 00                	adc    %eax,(%rax)
   154df:	00 c3                	add    %al,%bl
   154e1:	cf                   	iret   
   154e2:	ff                   	(bad)  
   154e3:	ff 1c 00             	lcall  *(%rax,%rax,1)
   154e6:	00 00                	add    %al,(%rax)
   154e8:	00 00                	add    %al,(%rax)
   154ea:	00 00                	add    %al,(%rax)
   154ec:	10 00                	adc    %al,(%rax)
   154ee:	00 00                	add    %al,(%rax)
   154f0:	f8                   	clc    
   154f1:	11 00                	adc    %eax,(%rax)
   154f3:	00 cf                	add    %cl,%bh
   154f5:	cf                   	iret   
   154f6:	ff                   	(bad)  
   154f7:	ff 1a                	lcall  *(%rdx)
   154f9:	00 00                	add    %al,(%rax)
   154fb:	00 00                	add    %al,(%rax)
   154fd:	00 00                	add    %al,(%rax)
   154ff:	00 10                	add    %dl,(%rax)
   15501:	00 00                	add    %al,(%rax)
   15503:	00 0c 12             	add    %cl,(%rdx,%rdx,1)
   15506:	00 00                	add    %al,(%rax)
   15508:	d9 cf                	fxch   %st(7)
   1550a:	ff                   	(bad)  
   1550b:	ff 1a                	lcall  *(%rdx)
   1550d:	00 00                	add    %al,(%rax)
   1550f:	00 00                	add    %al,(%rax)
   15511:	00 00                	add    %al,(%rax)
   15513:	00 10                	add    %dl,(%rax)
   15515:	00 00                	add    %al,(%rax)
   15517:	00 20                	add    %ah,(%rax)
   15519:	12 00                	adc    (%rax),%al
   1551b:	00 e3                	add    %ah,%bl
   1551d:	cf                   	iret   
   1551e:	ff                   	(bad)  
   1551f:	ff 15 00 00 00 00    	call   *0x0(%rip)        # 15525 <__GNU_EH_FRAME_HDR+0x1a65>
   15525:	00 00                	add    %al,(%rax)
   15527:	00 2c 00             	add    %ch,(%rax,%rax,1)
   1552a:	00 00                	add    %al,(%rax)
   1552c:	34 12                	xor    $0x12,%al
   1552e:	00 00                	add    %al,(%rax)
   15530:	b0 39                	mov    $0x39,%al
   15532:	ff                   	(bad)  
   15533:	ff 74 00 00          	push   0x0(%rax,%rax,1)
   15537:	00 00                	add    %al,(%rax)
   15539:	46 0e                	rex.RX (bad) 
   1553b:	10 8c 02 41 0e 18 86 	adc    %cl,-0x79e7f1bf(%rdx,%rax,1)
   15542:	03 41 0e             	add    0xe(%rcx),%eax
   15545:	20 83 04 02 4d 0a    	and    %al,0xa4d0204(%rbx)
   1554b:	0e                   	(bad)  
   1554c:	18 41 0e             	sbb    %al,0xe(%rcx)
   1554f:	10 42 0e             	adc    %al,0xe(%rdx)
   15552:	08 48 0b             	or     %cl,0xb(%rax)
   15555:	00 00                	add    %al,(%rax)
   15557:	00 18                	add    %bl,(%rax)
   15559:	00 00                	add    %al,(%rax)
   1555b:	00 64 12 00          	add    %ah,0x0(%rdx,%rdx,1)
   1555f:	00 00                	add    %al,(%rax)
   15561:	3a ff                	cmp    %bh,%bh
   15563:	ff 28                	ljmp   *(%rax)
   15565:	00 00                	add    %al,(%rax)
   15567:	00 00                	add    %al,(%rax)
   15569:	45 0e                	rex.RB (bad) 
   1556b:	10 83 02 62 0e 08    	adc    %al,0x80e6202(%rbx)
   15571:	00 00                	add    %al,(%rax)
   15573:	00 18                	add    %bl,(%rax)
   15575:	00 00                	add    %al,(%rax)
   15577:	00 80 12 00 00 14    	add    %al,0x14000012(%rax)
   1557d:	3a ff                	cmp    %bh,%bh
   1557f:	ff 25 00 00 00 00    	jmp    *0x0(%rip)        # 15585 <__GNU_EH_FRAME_HDR+0x1ac5>
   15585:	45 0e                	rex.RB (bad) 
   15587:	10 83 02 5f 0e 08    	adc    %al,0x80e5f02(%rbx)
   1558d:	00 00                	add    %al,(%rax)
   1558f:	00 18                	add    %bl,(%rax)
   15591:	00 00                	add    %al,(%rax)
   15593:	00 9c 12 00 00 28 3a 	add    %bl,0x3a280000(%rdx,%rdx,1)
   1559a:	ff                   	(bad)  
   1559b:	ff 1a                	lcall  *(%rdx)
   1559d:	00 00                	add    %al,(%rax)
   1559f:	00 00                	add    %al,(%rax)
   155a1:	45 0e                	rex.RB (bad) 
   155a3:	10 83 02 50 0e 08    	adc    %al,0x80e5002(%rbx)
   155a9:	00 00                	add    %al,(%rax)
   155ab:	00 10                	add    %dl,(%rax)
   155ad:	00 00                	add    %al,(%rax)
   155af:	00 b8 12 00 00 2c    	add    %bh,0x2c000012(%rax)
   155b5:	3a ff                	cmp    %bh,%bh
   155b7:	ff 23                	jmp    *(%rbx)
   155b9:	00 00                	add    %al,(%rax)
   155bb:	00 00                	add    %al,(%rax)
   155bd:	00 00                	add    %al,(%rax)
   155bf:	00 10                	add    %dl,(%rax)
   155c1:	00 00                	add    %al,(%rax)
   155c3:	00 cc                	add    %cl,%ah
   155c5:	12 00                	adc    (%rax),%al
   155c7:	00 48 3a             	add    %cl,0x3a(%rax)
   155ca:	ff                   	(bad)  
   155cb:	ff 15 00 00 00 00    	call   *0x0(%rip)        # 155d1 <__GNU_EH_FRAME_HDR+0x1b11>
   155d1:	00 00                	add    %al,(%rax)
   155d3:	00 10                	add    %dl,(%rax)
   155d5:	00 00                	add    %al,(%rax)
   155d7:	00 e0                	add    %ah,%al
   155d9:	12 00                	adc    (%rax),%al
   155db:	00 54 3a ff          	add    %dl,-0x1(%rdx,%rdi,1)
   155df:	ff                   	(bad)  
   155e0:	bd 00 00 00 00       	mov    $0x0,%ebp
   155e5:	00 00                	add    %al,(%rax)
   155e7:	00 10                	add    %dl,(%rax)
   155e9:	00 00                	add    %al,(%rax)
   155eb:	00 f4                	add    %dh,%ah
   155ed:	12 00                	adc    (%rax),%al
   155ef:	00 00                	add    %al,(%rax)
   155f1:	3b ff                	cmp    %edi,%edi
   155f3:	ff                   	(bad)  
   155f4:	bd 00 00 00 00       	mov    $0x0,%ebp
   155f9:	00 00                	add    %al,(%rax)
   155fb:	00 10                	add    %dl,(%rax)
   155fd:	00 00                	add    %al,(%rax)
   155ff:	00 08                	add    %cl,(%rax)
   15601:	13 00                	adc    (%rax),%eax
   15603:	00 ac 3b ff ff 1f 00 	add    %ch,0x1fffff(%rbx,%rdi,1)
   1560a:	00 00                	add    %al,(%rax)
   1560c:	00 00                	add    %al,(%rax)
   1560e:	00 00                	add    %al,(%rax)
   15610:	10 00                	adc    %al,(%rax)
   15612:	00 00                	add    %al,(%rax)
   15614:	1c 13                	sbb    $0x13,%al
   15616:	00 00                	add    %al,(%rax)
   15618:	b8 3b ff ff b5       	mov    $0xb5ffff3b,%eax
   1561d:	00 00                	add    %al,(%rax)
   1561f:	00 00                	add    %al,(%rax)
   15621:	00 00                	add    %al,(%rax)
   15623:	00 10                	add    %dl,(%rax)
   15625:	00 00                	add    %al,(%rax)
   15627:	00 30                	add    %dh,(%rax)
   15629:	13 00                	adc    (%rax),%eax
   1562b:	00 64 3c ff          	add    %ah,-0x1(%rsp,%rdi,1)
   1562f:	ff 15 00 00 00 00    	call   *0x0(%rip)        # 15635 <__GNU_EH_FRAME_HDR+0x1b75>
   15635:	00 00                	add    %al,(%rax)
   15637:	00 10                	add    %dl,(%rax)
   15639:	00 00                	add    %al,(%rax)
   1563b:	00 44 13 00          	add    %al,0x0(%rbx,%rdx,1)
   1563f:	00 70 3c             	add    %dh,0x3c(%rax)
   15642:	ff                   	(bad)  
   15643:	ff 17                	call   *(%rdi)
   15645:	00 00                	add    %al,(%rax)
   15647:	00 00                	add    %al,(%rax)
   15649:	00 00                	add    %al,(%rax)
   1564b:	00 10                	add    %dl,(%rax)
   1564d:	00 00                	add    %al,(%rax)
   1564f:	00 58 13             	add    %bl,0x13(%rax)
   15652:	00 00                	add    %al,(%rax)
   15654:	7c 3c                	jl     15692 <__GNU_EH_FRAME_HDR+0x1bd2>
   15656:	ff                   	(bad)  
   15657:	ff b5 00 00 00 00    	push   0x0(%rbp)
   1565d:	00 00                	add    %al,(%rax)
   1565f:	00 10                	add    %dl,(%rax)
   15661:	00 00                	add    %al,(%rax)
   15663:	00 6c 13 00          	add    %ch,0x0(%rbx,%rdx,1)
   15667:	00 28                	add    %ch,(%rax)
   15669:	3d ff ff 12 00       	cmp    $0x12ffff,%eax
   1566e:	00 00                	add    %al,(%rax)
   15670:	00 00                	add    %al,(%rax)
   15672:	00 00                	add    %al,(%rax)
   15674:	28 00                	sub    %al,(%rax)
   15676:	00 00                	add    %al,(%rax)
   15678:	80 13 00             	adcb   $0x0,(%rbx)
   1567b:	00 34 3d ff ff 37 00 	add    %dh,0x37ffff(,%rdi,1)
   15682:	00 00                	add    %al,(%rax)
   15684:	00 46 0e             	add    %al,0xe(%rsi)
   15687:	10 8c 02 44 0e 18 86 	adc    %cl,-0x79e7f1bc(%rdx,%rax,1)
   1568e:	03 44 0e 20          	add    0x20(%rsi,%rcx,1),%eax
   15692:	83 04 65 0e 18 41 0e 	addl   $0x10,0xe41180e(,%riz,2)
   15699:	10 
   1569a:	42 0e                	rex.X (bad) 
   1569c:	08 00                	or     %al,(%rax)
   1569e:	00 00                	add    %al,(%rax)
   156a0:	4c 00 00             	rex.WR add %r8b,(%rax)
   156a3:	00 ac 13 00 00 48 3d 	add    %ch,0x3d480000(%rbx,%rdx,1)
   156aa:	ff                   	(bad)  
   156ab:	ff 31                	push   (%rcx)
   156ad:	02 00                	add    (%rax),%al
   156af:	00 00                	add    %al,(%rax)
   156b1:	46 0e                	rex.RX (bad) 
   156b3:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   156b9:	8e 03                	mov    (%rbx),%es
   156bb:	42 0e                	rex.X (bad) 
   156bd:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   156c3:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff8631650a <_end+0xffffffff862eb4fa>
   156c9:	06                   	(bad)  
   156ca:	41 0e                	rex.B (bad) 
   156cc:	38 83 07 47 0e 70    	cmp    %al,0x700e4707(%rbx)
   156d2:	75 0a                	jne    156de <__GNU_EH_FRAME_HDR+0x1c1e>
   156d4:	0e                   	(bad)  
   156d5:	38 41 0e             	cmp    %al,0xe(%rcx)
   156d8:	30 41 0e             	xor    %al,0xe(%rcx)
   156db:	28 42 0e             	sub    %al,0xe(%rdx)
   156de:	20 42 0e             	and    %al,0xe(%rdx)
   156e1:	18 42 0e             	sbb    %al,0xe(%rdx)
   156e4:	10 42 0e             	adc    %al,0xe(%rdx)
   156e7:	08 44 0b 00          	or     %al,0x0(%rbx,%rcx,1)
   156eb:	00 00                	add    %al,(%rax)
   156ed:	00 00                	add    %al,(%rax)
   156ef:	00 2c 00             	add    %ch,(%rax,%rax,1)
   156f2:	00 00                	add    %al,(%rax)
   156f4:	fc                   	cld    
   156f5:	13 00                	adc    (%rax),%eax
   156f7:	00 38                	add    %bh,(%rax)
   156f9:	3f                   	(bad)  
   156fa:	ff                   	(bad)  
   156fb:	ff                   	(bad)  
   156fc:	df 01                	filds  (%rcx)
   156fe:	00 00                	add    %al,(%rax)
   15700:	00 41 0e             	add    %al,0xe(%rcx)
   15703:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
   15709:	54                   	push   %rsp
   1570a:	8f 03                	pop    (%rbx)
   1570c:	8e 04 8d 05 8c 06 83 	mov    -0x7cf973fb(,%rcx,4),%es
   15713:	07                   	(bad)  
   15714:	03 ae 01 0a 0c 07    	add    0x70c0a01(%rsi),%ebp
   1571a:	08 41 0b             	or     %al,0xb(%rcx)
   1571d:	00 00                	add    %al,(%rax)
   1571f:	00 10                	add    %dl,(%rax)
   15721:	00 00                	add    %al,(%rax)
   15723:	00 2c 14             	add    %ch,(%rsp,%rdx,1)
   15726:	00 00                	add    %al,(%rax)
   15728:	e8 40 ff ff 08       	call   901566d <_end+0x8fea65d>
   1572d:	00 00                	add    %al,(%rax)
   1572f:	00 00                	add    %al,(%rax)
   15731:	00 00                	add    %al,(%rax)
   15733:	00 10                	add    %dl,(%rax)
   15735:	00 00                	add    %al,(%rax)
   15737:	00 40 14             	add    %al,0x14(%rax)
   1573a:	00 00                	add    %al,(%rax)
   1573c:	e4 40                	in     $0x40,%al
   1573e:	ff                   	(bad)  
   1573f:	ff 09                	decl   (%rcx)
   15741:	00 00                	add    %al,(%rax)
   15743:	00 00                	add    %al,(%rax)
   15745:	00 00                	add    %al,(%rax)
   15747:	00 10                	add    %dl,(%rax)
   15749:	00 00                	add    %al,(%rax)
   1574b:	00 54 14 00          	add    %dl,0x0(%rsp,%rdx,1)
   1574f:	00 e0                	add    %ah,%al
   15751:	40 ff                	rex (bad) 
   15753:	ff 15 00 00 00 00    	call   *0x0(%rip)        # 15759 <__GNU_EH_FRAME_HDR+0x1c99>
   15759:	00 00                	add    %al,(%rax)
   1575b:	00 1c 00             	add    %bl,(%rax,%rax,1)
   1575e:	00 00                	add    %al,(%rax)
   15760:	68 14 00 00 ec       	push   $0xffffffffec000014
   15765:	40 ff                	rex (bad) 
   15767:	ff                   	(bad)  
   15768:	3d 00 00 00 00       	cmp    $0x0,%eax
   1576d:	45 0e                	rex.RB (bad) 
   1576f:	10 83 02 54 0a 0e    	adc    %al,0xe0a5402(%rbx)
   15775:	08 47 0b             	or     %al,0xb(%rdi)
   15778:	5c                   	pop    %rsp
   15779:	0e                   	(bad)  
   1577a:	08 00                	or     %al,(%rax)
   1577c:	1c 00                	sbb    $0x0,%al
   1577e:	00 00                	add    %al,(%rax)
   15780:	88 14 00             	mov    %dl,(%rax,%rax,1)
   15783:	00 0c 41             	add    %cl,(%rcx,%rax,2)
   15786:	ff                   	(bad)  
   15787:	ff                   	(bad)  
   15788:	3d 00 00 00 00       	cmp    $0x0,%eax
   1578d:	45 0e                	rex.RB (bad) 
   1578f:	10 83 02 54 0a 0e    	adc    %al,0xe0a5402(%rbx)
   15795:	08 47 0b             	or     %al,0xb(%rdi)
   15798:	5c                   	pop    %rsp
   15799:	0e                   	(bad)  
   1579a:	08 00                	or     %al,(%rax)
   1579c:	24 00                	and    $0x0,%al
   1579e:	00 00                	add    %al,(%rax)
   157a0:	a8 14                	test   $0x14,%al
   157a2:	00 00                	add    %al,(%rax)
   157a4:	2c 41                	sub    $0x41,%al
   157a6:	ff                   	(bad)  
   157a7:	ff                   	(bad)  
   157a8:	7e 00                	jle    157aa <__GNU_EH_FRAME_HDR+0x1cea>
   157aa:	00 00                	add    %al,(%rax)
   157ac:	00 4a 0e             	add    %cl,0xe(%rdx)
   157af:	10 86 02 47 0e 20    	adc    %al,0x200e4702(%rsi)
   157b5:	68 0a 0e 10 41       	push   $0x41100e0a
   157ba:	0e                   	(bad)  
   157bb:	08 46 0b             	or     %al,0xb(%rsi)
   157be:	78 0e                	js     157ce <__GNU_EH_FRAME_HDR+0x1d0e>
   157c0:	08 c6                	or     %al,%dh
   157c2:	00 00                	add    %al,(%rax)
   157c4:	10 00                	adc    %al,(%rax)
   157c6:	00 00                	add    %al,(%rax)
   157c8:	d0 14 00             	rclb   (%rax,%rax,1)
   157cb:	00 84 41 ff ff 23 00 	add    %al,0x23ffff(%rcx,%rax,2)
   157d2:	00 00                	add    %al,(%rax)
   157d4:	00 00                	add    %al,(%rax)
   157d6:	00 00                	add    %al,(%rax)
   157d8:	10 00                	adc    %al,(%rax)
   157da:	00 00                	add    %al,(%rax)
   157dc:	e4 14                	in     $0x14,%al
   157de:	00 00                	add    %al,(%rax)
   157e0:	a0 41 ff ff 2d 00 00 	movabs 0x2dffff41,%al
   157e7:	00 00 
   157e9:	00 00                	add    %al,(%rax)
   157eb:	00 10                	add    %dl,(%rax)
   157ed:	00 00                	add    %al,(%rax)
   157ef:	00 f8                	add    %bh,%al
   157f1:	14 00                	adc    $0x0,%al
   157f3:	00 bc 41 ff ff 26 00 	add    %bh,0x26ffff(%rcx,%rax,2)
   157fa:	00 00                	add    %al,(%rax)
   157fc:	00 00                	add    %al,(%rax)
   157fe:	00 00                	add    %al,(%rax)
   15800:	10 00                	adc    %al,(%rax)
   15802:	00 00                	add    %al,(%rax)
   15804:	0c 15                	or     $0x15,%al
   15806:	00 00                	add    %al,(%rax)
   15808:	d8 41 ff             	fadds  -0x1(%rcx)
   1580b:	ff 26                	jmp    *(%rsi)
   1580d:	00 00                	add    %al,(%rax)
   1580f:	00 00                	add    %al,(%rax)
   15811:	00 00                	add    %al,(%rax)
   15813:	00 10                	add    %dl,(%rax)
   15815:	00 00                	add    %al,(%rax)
   15817:	00 20                	add    %ah,(%rax)
   15819:	15 00 00 f4 41       	adc    $0x41f40000,%eax
   1581e:	ff                   	(bad)  
   1581f:	ff 70 00             	push   0x0(%rax)
   15822:	00 00                	add    %al,(%rax)
   15824:	00 00                	add    %al,(%rax)
   15826:	00 00                	add    %al,(%rax)
   15828:	40 00 00             	rex add %al,(%rax)
   1582b:	00 34 15 00 00 50 42 	add    %dh,0x42500000(,%rdx,1)
   15832:	ff                   	(bad)  
   15833:	ff 84 01 00 00 00 46 	incl   0x46000000(%rcx,%rax,1)
   1583a:	0e                   	(bad)  
   1583b:	10 8e 02 45 0e 18    	adc    %cl,0x180e4502(%rsi)
   15841:	8d 03                	lea    (%rbx),%eax
   15843:	45 0e                	rex.RB (bad) 
   15845:	20 8c 04 44 0e 28 86 	and    %cl,-0x79d7f1bc(%rsp,%rax,1)
   1584c:	05 41 0e 30 83       	add    $0x83300e41,%eax
   15851:	06                   	(bad)  
   15852:	4c 0e                	rex.WR (bad) 
   15854:	60                   	(bad)  
   15855:	02 fc                	add    %ah,%bh
   15857:	0a 0e                	or     (%rsi),%cl
   15859:	30 41 0e             	xor    %al,0xe(%rcx)
   1585c:	28 41 0e             	sub    %al,0xe(%rcx)
   1585f:	20 42 0e             	and    %al,0xe(%rdx)
   15862:	18 42 0e             	sbb    %al,0xe(%rdx)
   15865:	10 42 0e             	adc    %al,0xe(%rdx)
   15868:	08 4b 0b             	or     %cl,0xb(%rbx)
   1586b:	00 30                	add    %dh,(%rax)
   1586d:	00 00                	add    %al,(%rax)
   1586f:	00 78 15             	add    %bh,0x15(%rax)
   15872:	00 00                	add    %al,(%rax)
   15874:	9c                   	pushf  
   15875:	43 ff                	rex.XB (bad) 
   15877:	ff b5 00 00 00 00    	push   0x0(%rbp)
   1587d:	46 0e                	rex.RX (bad) 
   1587f:	10 8c 02 44 0e 18 86 	adc    %cl,-0x79e7f1bc(%rdx,%rax,1)
   15886:	03 44 0e 20          	add    0x20(%rsi,%rcx,1),%eax
   1588a:	83 04 47 0e          	addl   $0xe,(%rdi,%rax,2)
   1588e:	30 02                	xor    %al,(%rdx)
   15890:	44 0a 0e             	or     (%rsi),%r9b
   15893:	20 41 0e             	and    %al,0xe(%rcx)
   15896:	18 41 0e             	sbb    %al,0xe(%rcx)
   15899:	10 42 0e             	adc    %al,0xe(%rdx)
   1589c:	08 43 0b             	or     %al,0xb(%rbx)
   1589f:	00 60 00             	add    %ah,0x0(%rax)
   158a2:	00 00                	add    %al,(%rax)
   158a4:	ac                   	lods   %ds:(%rsi),%al
   158a5:	15 00 00 28 44       	adc    $0x44280000,%eax
   158aa:	ff                   	(bad)  
   158ab:	ff 0d 03 00 00 00    	decl   0x3(%rip)        # 158b4 <__GNU_EH_FRAME_HDR+0x1df4>
   158b1:	46 0e                	rex.RX (bad) 
   158b3:	10 8f 02 45 0e 18    	adc    %cl,0x180e4502(%rdi)
   158b9:	8e 03                	mov    (%rbx),%es
   158bb:	45 0e                	rex.RB (bad) 
   158bd:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
   158c3:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff8631670d <_end+0xffffffff862eb6fd>
   158c9:	06                   	(bad)  
   158ca:	44 0e                	rex.R (bad) 
   158cc:	38 83 07 47 0e 50    	cmp    %al,0x500e4707(%rbx)
   158d2:	02 94 0a 0e 38 46 0e 	add    0xe46380e(%rdx,%rcx,1),%dl
   158d9:	30 41 0e             	xor    %al,0xe(%rcx)
   158dc:	28 42 0e             	sub    %al,0xe(%rdx)
   158df:	20 42 0e             	and    %al,0xe(%rdx)
   158e2:	18 42 0e             	sbb    %al,0xe(%rdx)
   158e5:	10 42 0e             	adc    %al,0xe(%rdx)
   158e8:	08 49 0b             	or     %cl,0xb(%rcx)
   158eb:	02 7e 0a             	add    0xa(%rsi),%bh
   158ee:	0e                   	(bad)  
   158ef:	38 41 0e             	cmp    %al,0xe(%rcx)
   158f2:	30 41 0e             	xor    %al,0xe(%rcx)
   158f5:	28 42 0e             	sub    %al,0xe(%rdx)
   158f8:	20 42 0e             	and    %al,0xe(%rdx)
   158fb:	18 42 0e             	sbb    %al,0xe(%rdx)
   158fe:	10 42 0e             	adc    %al,0xe(%rdx)
   15901:	08 41 0b             	or     %al,0xb(%rcx)
   15904:	4c 00 00             	rex.WR add %r8b,(%rax)
   15907:	00 10                	add    %dl,(%rax)
   15909:	16                   	(bad)  
   1590a:	00 00                	add    %al,(%rax)
   1590c:	d4                   	(bad)  
   1590d:	46 ff                	rex.RX (bad) 
   1590f:	ff                   	(bad)  
   15910:	db 00                	fildl  (%rax)
   15912:	00 00                	add    %al,(%rax)
   15914:	00 46 0e             	add    %al,0xe(%rsi)
   15917:	10 8d 02 45 0e 18    	adc    %cl,0x180e4502(%rbp)
   1591d:	8c 03                	mov    %es,(%rbx)
   1591f:	44 0e                	rex.R (bad) 
   15921:	20 86 04 44 0e 28    	and    %al,0x280e4404(%rsi)
   15927:	83 05 4d 0e 30 02 72 	addl   $0x72,0x2300e4d(%rip)        # 231677b <_end+0x22eb76b>
   1592e:	0a 0e                	or     (%rsi),%cl
   15930:	28 41 0e             	sub    %al,0xe(%rcx)
   15933:	20 41 0e             	and    %al,0xe(%rcx)
   15936:	18 42 0e             	sbb    %al,0xe(%rdx)
   15939:	10 42 0e             	adc    %al,0xe(%rdx)
   1593c:	08 48 0b             	or     %cl,0xb(%rax)
   1593f:	51                   	push   %rcx
   15940:	0a 0e                	or     (%rsi),%cl
   15942:	28 41 0e             	sub    %al,0xe(%rcx)
   15945:	20 41 0e             	and    %al,0xe(%rcx)
   15948:	18 42 0e             	sbb    %al,0xe(%rdx)
   1594b:	10 42 0e             	adc    %al,0xe(%rdx)
   1594e:	08 49 0b             	or     %cl,0xb(%rcx)
   15951:	00 00                	add    %al,(%rax)
   15953:	00 20                	add    %ah,(%rax)
   15955:	00 00                	add    %al,(%rax)
   15957:	00 60 16             	add    %ah,0x16(%rax)
   1595a:	00 00                	add    %al,(%rax)
   1595c:	64 47 ff             	fs rex.RXB (bad) 
   1595f:	ff 02                	incl   (%rdx)
   15961:	01 00                	add    %eax,(%rax)
   15963:	00 00                	add    %al,(%rax)
   15965:	45 0e                	rex.RB (bad) 
   15967:	10 83 02 44 0e 60    	adc    %al,0x600e4402(%rbx)
   1596d:	02 c6                	add    %dh,%al
   1596f:	0a 0e                	or     (%rsi),%cl
   15971:	10 41 0e             	adc    %al,0xe(%rcx)
   15974:	08 48 0b             	or     %cl,0xb(%rax)
   15977:	00 18                	add    %bl,(%rax)
   15979:	00 00                	add    %al,(%rax)
   1597b:	00 84 16 00 00 50 48 	add    %al,0x48500000(%rsi,%rdx,1)
   15982:	ff                   	(bad)  
   15983:	ff 45 00             	incl   0x0(%rbp)
   15986:	00 00                	add    %al,(%rax)
   15988:	00 45 0e             	add    %al,0xe(%rbp)
   1598b:	10 83 02 76 0a 0e    	adc    %al,0xe0a7602(%rbx)
   15991:	08 45 0b             	or     %al,0xb(%rbp)
   15994:	24 00                	and    $0x0,%al
   15996:	00 00                	add    %al,(%rax)
   15998:	a0 16 00 00 84 48 ff 	movabs 0x39ffff4884000016,%al
   1599f:	ff 39 
   159a1:	00 00                	add    %al,(%rax)
   159a3:	00 00                	add    %al,(%rax)
   159a5:	45 0e                	rex.RB (bad) 
   159a7:	10 86 02 41 0e 18    	adc    %al,0x180e4102(%rsi)
   159ad:	83 03 44             	addl   $0x44,(%rbx)
   159b0:	0e                   	(bad)  
   159b1:	20 6c 0e 18          	and    %ch,0x18(%rsi,%rcx,1)
   159b5:	41 0e                	rex.B (bad) 
   159b7:	10 41 0e             	adc    %al,0xe(%rcx)
   159ba:	08 00                	or     %al,(%rax)
   159bc:	28 00                	sub    %al,(%rax)
   159be:	00 00                	add    %al,(%rax)
   159c0:	c8 16 00 00          	enter  $0x16,$0x0
   159c4:	9c                   	pushf  
   159c5:	48 ff                	rex.W (bad) 
   159c7:	ff d7                	call   *%rdi
   159c9:	00 00                	add    %al,(%rax)
   159cb:	00 00                	add    %al,(%rax)
   159cd:	45 0e                	rex.RB (bad) 
   159cf:	10 86 02 4b 0d 06    	adc    %al,0x60d4b02(%rsi)
   159d5:	44 8d 03             	lea    (%rbx),%r8d
   159d8:	8c 04 44             	mov    %es,(%rsp,%rax,2)
   159db:	83 05 02 7f 0a 0c 07 	addl   $0x7,0xc0a7f02(%rip)        # c0bd8e4 <_end+0xc0928d4>
   159e2:	08 49 0b             	or     %cl,0xb(%rcx)
   159e5:	00 00                	add    %al,(%rax)
   159e7:	00 28                	add    %ch,(%rax)
   159e9:	00 00                	add    %al,(%rax)
   159eb:	00 f4                	add    %dh,%ah
   159ed:	16                   	(bad)  
   159ee:	00 00                	add    %al,(%rax)
   159f0:	50                   	push   %rax
   159f1:	49 ff                	rex.WB (bad) 
   159f3:	ff                   	(bad)  
   159f4:	ef                   	out    %eax,(%dx)
   159f5:	00 00                	add    %al,(%rax)
   159f7:	00 00                	add    %al,(%rax)
   159f9:	45 0e                	rex.RB (bad) 
   159fb:	10 86 02 47 0d 06    	adc    %al,0x60d4702(%rsi)
   15a01:	51                   	push   %rcx
   15a02:	8f 03                	pop    (%rbx)
   15a04:	8e 04 8d 05 8c 06 83 	mov    -0x7cf973fb(,%rcx,4),%es
   15a0b:	07                   	(bad)  
   15a0c:	02 cc                	add    %ah,%cl
   15a0e:	0a 0c 07             	or     (%rdi,%rax,1),%cl
   15a11:	08 41 0b             	or     %al,0xb(%rcx)
   15a14:	5c                   	pop    %rsp
   15a15:	00 00                	add    %al,(%rax)
   15a17:	00 20                	add    %ah,(%rax)
   15a19:	17                   	(bad)  
   15a1a:	00 00                	add    %al,(%rax)
   15a1c:	14 4a                	adc    $0x4a,%al
   15a1e:	ff                   	(bad)  
   15a1f:	ff c6                	inc    %esi
   15a21:	00 00                	add    %al,(%rax)
   15a23:	00 00                	add    %al,(%rax)
   15a25:	46 0e                	rex.RX (bad) 
   15a27:	10 8d 02 42 0e 18    	adc    %cl,0x180e4202(%rbp)
   15a2d:	8c 03                	mov    %es,(%rbx)
   15a2f:	41 0e                	rex.B (bad) 
   15a31:	20 86 04 41 0e 28    	and    %al,0x280e4104(%rsi)
   15a37:	83 05 47 0e 30 02 55 	addl   $0x55,0x2300e47(%rip)        # 2316885 <_end+0x22eb875>
   15a3e:	0a 0e                	or     (%rsi),%cl
   15a40:	28 41 0e             	sub    %al,0xe(%rcx)
   15a43:	20 41 0e             	and    %al,0xe(%rcx)
   15a46:	18 42 0e             	sbb    %al,0xe(%rdx)
   15a49:	10 42 0e             	adc    %al,0xe(%rdx)
   15a4c:	08 44 0b 44          	or     %al,0x44(%rbx,%rcx,1)
   15a50:	0a 0e                	or     (%rsi),%cl
   15a52:	28 46 0e             	sub    %al,0xe(%rsi)
   15a55:	20 41 0e             	and    %al,0xe(%rcx)
   15a58:	18 42 0e             	sbb    %al,0xe(%rdx)
   15a5b:	10 42 0e             	adc    %al,0xe(%rdx)
   15a5e:	08 41 0b             	or     %al,0xb(%rcx)
   15a61:	71 0a                	jno    15a6d <__GNU_EH_FRAME_HDR+0x1fad>
   15a63:	0e                   	(bad)  
   15a64:	28 41 0e             	sub    %al,0xe(%rcx)
   15a67:	20 41 0e             	and    %al,0xe(%rcx)
   15a6a:	18 42 0e             	sbb    %al,0xe(%rdx)
   15a6d:	10 42 0e             	adc    %al,0xe(%rdx)
   15a70:	08 41 0b             	or     %al,0xb(%rcx)
   15a73:	00 28                	add    %ch,(%rax)
   15a75:	00 00                	add    %al,(%rax)
   15a77:	00 80 17 00 00 84    	add    %al,-0x7bffffe9(%rax)
   15a7d:	4a ff                	rex.WX (bad) 
   15a7f:	ff 64 01 00          	jmp    *0x0(%rcx,%rax,1)
   15a83:	00 00                	add    %al,(%rax)
   15a85:	45 0e                	rex.RB (bad) 
   15a87:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
   15a8d:	47 8e 03             	rex.RXB mov (%r11),%es
   15a90:	8d 04 8c             	lea    (%rsp,%rcx,4),%eax
   15a93:	05 83 06 02 93       	add    $0x93020683,%eax
   15a98:	0a 0c 07             	or     (%rdi,%rax,1),%cl
   15a9b:	08 46 0b             	or     %al,0xb(%rsi)
   15a9e:	00 00                	add    %al,(%rax)
   15aa0:	2c 00                	sub    $0x0,%al
   15aa2:	00 00                	add    %al,(%rax)
   15aa4:	ac                   	lods   %ds:(%rsi),%al
   15aa5:	17                   	(bad)  
   15aa6:	00 00                	add    %al,(%rax)
   15aa8:	c8 4b ff ff          	enter  $0xff4b,$0xff
   15aac:	3d 02 00 00 00       	cmp    $0x2,%eax
   15ab1:	45 0e                	rex.RB (bad) 
   15ab3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
   15ab9:	54                   	push   %rsp
   15aba:	8f 03                	pop    (%rbx)
   15abc:	8e 04 8d 05 8c 06 83 	mov    -0x7cf973fb(,%rcx,4),%es
   15ac3:	07                   	(bad)  
   15ac4:	03 32                	add    (%rdx),%esi
   15ac6:	01 0a                	add    %ecx,(%rdx)
   15ac8:	0c 07                	or     $0x7,%al
   15aca:	08 42 0b             	or     %al,0xb(%rdx)
   15acd:	00 00                	add    %al,(%rax)
   15acf:	00 30                	add    %dh,(%rax)
   15ad1:	00 00                	add    %al,(%rax)
   15ad3:	00 dc                	add    %bl,%ah
   15ad5:	17                   	(bad)  
   15ad6:	00 00                	add    %al,(%rax)
   15ad8:	d8 4d ff             	fmuls  -0x1(%rbp)
   15adb:	ff 66 00             	jmp    *0x0(%rsi)
   15ade:	00 00                	add    %al,(%rax)
   15ae0:	00 46 0e             	add    %al,0xe(%rsi)
   15ae3:	10 8d 02 45 0e 18    	adc    %cl,0x180e4502(%rbp)
   15ae9:	8c 03                	mov    %es,(%rbx)
   15aeb:	41 0e                	rex.B (bad) 
   15aed:	20 83 04 44 0e 30    	and    %al,0x300e4404(%rbx)
   15af3:	66 0a 0e             	data16 or (%rsi),%cl
   15af6:	20 4a 0e             	and    %cl,0xe(%rdx)
   15af9:	18 42 0e             	sbb    %al,0xe(%rdx)
   15afc:	10 42 0e             	adc    %al,0xe(%rdx)
   15aff:	08 4c 0b 00          	or     %cl,0x0(%rbx,%rcx,1)
   15b03:	00 30                	add    %dh,(%rax)
   15b05:	00 00                	add    %al,(%rax)
   15b07:	00 10                	add    %dl,(%rax)
   15b09:	18 00                	sbb    %al,(%rax)
   15b0b:	00 14 4e             	add    %dl,(%rsi,%rcx,2)
   15b0e:	ff                   	(bad)  
   15b0f:	ff f5                	push   %rbp
   15b11:	00 00                	add    %al,(%rax)
   15b13:	00 00                	add    %al,(%rax)
   15b15:	46 0e                	rex.RX (bad) 
   15b17:	10 8c 02 44 0e 18 86 	adc    %cl,-0x79e7f1bc(%rdx,%rax,1)
   15b1e:	03 41 0e             	add    0xe(%rcx),%eax
   15b21:	20 83 04 47 0e 30    	and    %al,0x300e4704(%rbx)
   15b27:	02 a3 0a 0e 20 41    	add    0x41200e0a(%rbx),%ah
   15b2d:	0e                   	(bad)  
   15b2e:	18 41 0e             	sbb    %al,0xe(%rcx)
   15b31:	10 42 0e             	adc    %al,0xe(%rdx)
   15b34:	08 47 0b             	or     %al,0xb(%rdi)
   15b37:	00 34 00             	add    %dh,(%rax,%rax,1)
   15b3a:	00 00                	add    %al,(%rax)
   15b3c:	44 18 00             	sbb    %r8b,(%rax)
   15b3f:	00 e0                	add    %ah,%al
   15b41:	4e ff                	rex.WRX (bad) 
   15b43:	ff 48 00             	decl   0x0(%rax)
   15b46:	00 00                	add    %al,(%rax)
   15b48:	00 46 0e             	add    %al,0xe(%rsi)
   15b4b:	10 8d 02 45 0e 18    	adc    %cl,0x180e4502(%rbp)
   15b51:	8c 03                	mov    %es,(%rbx)
   15b53:	44 0e                	rex.R (bad) 
   15b55:	20 86 04 44 0e 28    	and    %al,0x280e4404(%rsi)
   15b5b:	83 05 44 0e 30 6a 0e 	addl   $0xe,0x6a300e44(%rip)        # 6a3169a6 <_end+0x6a2eb996>
   15b62:	28 41 0e             	sub    %al,0xe(%rcx)
   15b65:	20 41 0e             	and    %al,0xe(%rcx)
   15b68:	18 42 0e             	sbb    %al,0xe(%rdx)
   15b6b:	10 42 0e             	adc    %al,0xe(%rdx)
   15b6e:	08 00                	or     %al,(%rax)
   15b70:	74 00                	je     15b72 <__GNU_EH_FRAME_HDR+0x20b2>
   15b72:	00 00                	add    %al,(%rax)
   15b74:	7c 18                	jl     15b8e <__GNU_EH_FRAME_HDR+0x20ce>
   15b76:	00 00                	add    %al,(%rax)
   15b78:	f8                   	clc    
   15b79:	4e ff                	rex.WRX (bad) 
   15b7b:	ff 1c 01             	lcall  *(%rcx,%rax,1)
   15b7e:	00 00                	add    %al,(%rax)
   15b80:	00 46 0e             	add    %al,0xe(%rsi)
   15b83:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   15b89:	8e 03                	mov    (%rbx),%es
   15b8b:	42 0e                	rex.X (bad) 
   15b8d:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   15b93:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff863169dd <_end+0xffffffff862eb9cd>
   15b99:	06                   	(bad)  
   15b9a:	44 0e                	rex.R (bad) 
   15b9c:	38 83 07 44 0e 50    	cmp    %al,0x500e4407(%rbx)
   15ba2:	7f 0a                	jg     15bae <__GNU_EH_FRAME_HDR+0x20ee>
   15ba4:	0e                   	(bad)  
   15ba5:	38 41 0e             	cmp    %al,0xe(%rcx)
   15ba8:	30 41 0e             	xor    %al,0xe(%rcx)
   15bab:	28 42 0e             	sub    %al,0xe(%rdx)
   15bae:	20 42 0e             	and    %al,0xe(%rdx)
   15bb1:	18 42 0e             	sbb    %al,0xe(%rdx)
   15bb4:	10 42 0e             	adc    %al,0xe(%rdx)
   15bb7:	08 47 0b             	or     %al,0xb(%rdi)
   15bba:	44 0a 0e             	or     (%rsi),%r9b
   15bbd:	38 46 0e             	cmp    %al,0xe(%rsi)
   15bc0:	30 41 0e             	xor    %al,0xe(%rcx)
   15bc3:	28 42 0e             	sub    %al,0xe(%rdx)
   15bc6:	20 42 0e             	and    %al,0xe(%rdx)
   15bc9:	18 42 0e             	sbb    %al,0xe(%rdx)
   15bcc:	10 42 0e             	adc    %al,0xe(%rdx)
   15bcf:	08 45 0b             	or     %al,0xb(%rbp)
   15bd2:	02 8f 0e 38 43 0e    	add    0xe43380e(%rdi),%cl
   15bd8:	30 41 0e             	xor    %al,0xe(%rcx)
   15bdb:	28 42 0e             	sub    %al,0xe(%rdx)
   15bde:	20 42 0e             	and    %al,0xe(%rdx)
   15be1:	18 42 0e             	sbb    %al,0xe(%rdx)
   15be4:	10 42 0e             	adc    %al,0xe(%rdx)
   15be7:	08 78 00             	or     %bh,0x0(%rax)
   15bea:	00 00                	add    %al,(%rax)
   15bec:	f4                   	hlt    
   15bed:	18 00                	sbb    %al,(%rax)
   15bef:	00 a0 4f ff ff 0b    	add    %ah,0xbffff4f(%rax)
   15bf5:	01 00                	add    %eax,(%rax)
   15bf7:	00 00                	add    %al,(%rax)
   15bf9:	46 0e                	rex.RX (bad) 
   15bfb:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   15c01:	8e 03                	mov    (%rbx),%es
   15c03:	42 0e                	rex.X (bad) 
   15c05:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   15c0b:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff86316a52 <_end+0xffffffff862eba42>
   15c11:	06                   	(bad)  
   15c12:	44 0e                	rex.R (bad) 
   15c14:	38 83 07 47 0e 40    	cmp    %al,0x400e4707(%rbx)
   15c1a:	02 85 0a 0e 38 41    	add    0x41380e0a(%rbp),%al
   15c20:	0e                   	(bad)  
   15c21:	30 41 0e             	xor    %al,0xe(%rcx)
   15c24:	28 42 0e             	sub    %al,0xe(%rdx)
   15c27:	20 42 0e             	and    %al,0xe(%rdx)
   15c2a:	18 42 0e             	sbb    %al,0xe(%rdx)
   15c2d:	10 42 0e             	adc    %al,0xe(%rdx)
   15c30:	08 49 0b             	or     %cl,0xb(%rcx)
   15c33:	44 0a 0e             	or     (%rsi),%r9b
   15c36:	38 46 0e             	cmp    %al,0xe(%rsi)
   15c39:	30 41 0e             	xor    %al,0xe(%rcx)
   15c3c:	28 42 0e             	sub    %al,0xe(%rdx)
   15c3f:	20 42 0e             	and    %al,0xe(%rdx)
   15c42:	18 42 0e             	sbb    %al,0xe(%rdx)
   15c45:	10 42 0e             	adc    %al,0xe(%rdx)
   15c48:	08 45 0b             	or     %al,0xb(%rbp)
   15c4b:	6f                   	outsl  %ds:(%rsi),(%dx)
   15c4c:	0a 0e                	or     (%rsi),%cl
   15c4e:	38 41 0e             	cmp    %al,0xe(%rcx)
   15c51:	30 41 0e             	xor    %al,0xe(%rcx)
   15c54:	28 42 0e             	sub    %al,0xe(%rdx)
   15c57:	20 42 0e             	and    %al,0xe(%rdx)
   15c5a:	18 42 0e             	sbb    %al,0xe(%rdx)
   15c5d:	10 42 0e             	adc    %al,0xe(%rdx)
   15c60:	08 41 0b             	or     %al,0xb(%rcx)
   15c63:	00 2c 00             	add    %ch,(%rax,%rax,1)
   15c66:	00 00                	add    %al,(%rax)
   15c68:	70 19                	jo     15c83 <__GNU_EH_FRAME_HDR+0x21c3>
   15c6a:	00 00                	add    %al,(%rax)
   15c6c:	34 50                	xor    $0x50,%al
   15c6e:	ff                   	(bad)  
   15c6f:	ff e7                	jmp    *%rdi
   15c71:	00 00                	add    %al,(%rax)
   15c73:	00 00                	add    %al,(%rax)
   15c75:	45 0e                	rex.RB (bad) 
   15c77:	10 86 02 51 0d 06    	adc    %al,0x60d5102(%rsi)
   15c7d:	44 8f 03             	rex.R pop (%rbx)
   15c80:	8e 04 47             	mov    (%rdi,%rax,2),%es
   15c83:	8d 05 8c 06 4f 83    	lea    -0x7cb0f974(%rip),%eax        # ffffffff83506315 <_end+0xffffffff834db305>
   15c89:	07                   	(bad)  
   15c8a:	02 b1 0a 0c 07 08    	add    0x8070c0a(%rcx),%dh
   15c90:	41 0b 00             	or     (%r8),%eax
   15c93:	00 78 00             	add    %bh,0x0(%rax)
   15c96:	00 00                	add    %al,(%rax)
   15c98:	a0 19 00 00 f4 50 ff 	movabs 0x7fffff50f4000019,%al
   15c9f:	ff 7f 
   15ca1:	01 00                	add    %eax,(%rax)
   15ca3:	00 00                	add    %al,(%rax)
   15ca5:	46 0e                	rex.RX (bad) 
   15ca7:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   15cad:	8e 03                	mov    (%rbx),%es
   15caf:	42 0e                	rex.X (bad) 
   15cb1:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   15cb7:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff86316afe <_end+0xffffffff862ebaee>
   15cbd:	06                   	(bad)  
   15cbe:	41 0e                	rex.B (bad) 
   15cc0:	38 83 07 47 0e 50    	cmp    %al,0x500e4707(%rbx)
   15cc6:	02 ad 0a 0e 38 41    	add    0x41380e0a(%rbp),%ch
   15ccc:	0e                   	(bad)  
   15ccd:	30 41 0e             	xor    %al,0xe(%rcx)
   15cd0:	28 42 0e             	sub    %al,0xe(%rdx)
   15cd3:	20 42 0e             	and    %al,0xe(%rdx)
   15cd6:	18 42 0e             	sbb    %al,0xe(%rdx)
   15cd9:	10 42 0e             	adc    %al,0xe(%rdx)
   15cdc:	08 41 0b             	or     %al,0xb(%rcx)
   15cdf:	4d 0a 0e             	rex.WRB or (%r14),%r9b
   15ce2:	38 46 0e             	cmp    %al,0xe(%rsi)
   15ce5:	30 41 0e             	xor    %al,0xe(%rcx)
   15ce8:	28 42 0e             	sub    %al,0xe(%rdx)
   15ceb:	20 42 0e             	and    %al,0xe(%rdx)
   15cee:	18 42 0e             	sbb    %al,0xe(%rdx)
   15cf1:	10 42 0e             	adc    %al,0xe(%rdx)
   15cf4:	08 47 0b             	or     %al,0xb(%rdi)
   15cf7:	02 82 0e 38 43 0e    	add    0xe43380e(%rdx),%al
   15cfd:	30 41 0e             	xor    %al,0xe(%rcx)
   15d00:	28 42 0e             	sub    %al,0xe(%rdx)
   15d03:	20 42 0e             	and    %al,0xe(%rdx)
   15d06:	18 42 0e             	sbb    %al,0xe(%rdx)
   15d09:	10 42 0e             	adc    %al,0xe(%rdx)
   15d0c:	08 00                	or     %al,(%rax)
   15d0e:	00 00                	add    %al,(%rax)
   15d10:	6c                   	insb   (%dx),%es:(%rdi)
   15d11:	00 00                	add    %al,(%rax)
   15d13:	00 1c 1a             	add    %bl,(%rdx,%rbx,1)
   15d16:	00 00                	add    %al,(%rax)
   15d18:	f8                   	clc    
   15d19:	51                   	push   %rcx
   15d1a:	ff                   	(bad)  
   15d1b:	ff 49 01             	decl   0x1(%rcx)
   15d1e:	00 00                	add    %al,(%rax)
   15d20:	00 46 0e             	add    %al,0xe(%rsi)
   15d23:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   15d29:	8e 03                	mov    (%rbx),%es
   15d2b:	42 0e                	rex.X (bad) 
   15d2d:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
   15d33:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff86316b7d <_end+0xffffffff862ebb6d>
   15d39:	06                   	(bad)  
   15d3a:	44 0e                	rex.R (bad) 
   15d3c:	38 83 07 47 0e 60    	cmp    %al,0x600e4707(%rbx)
   15d42:	02 4b 0a             	add    0xa(%rbx),%cl
   15d45:	0e                   	(bad)  
   15d46:	38 43 0e             	cmp    %al,0xe(%rbx)
   15d49:	30 41 0e             	xor    %al,0xe(%rcx)
   15d4c:	28 42 0e             	sub    %al,0xe(%rdx)
   15d4f:	20 42 0e             	and    %al,0xe(%rdx)
   15d52:	18 42 0e             	sbb    %al,0xe(%rdx)
   15d55:	10 42 0e             	adc    %al,0xe(%rdx)
   15d58:	08 4b 0b             	or     %cl,0xb(%rbx)
   15d5b:	02 45 0e             	add    0xe(%rbp),%al
   15d5e:	68 47 0e 70 5c       	push   $0x5c700e47
   15d63:	0e                   	(bad)  
   15d64:	68 41 0e 60 44       	push   $0x44600e41
   15d69:	0a 0e                	or     (%rsi),%cl
   15d6b:	38 41 0e             	cmp    %al,0xe(%rcx)
   15d6e:	30 41 0e             	xor    %al,0xe(%rcx)
   15d71:	28 42 0e             	sub    %al,0xe(%rdx)
   15d74:	20 42 0e             	and    %al,0xe(%rdx)
   15d77:	18 42 0e             	sbb    %al,0xe(%rdx)
   15d7a:	10 42 0e             	adc    %al,0xe(%rdx)
   15d7d:	08 41 0b             	or     %al,0xb(%rcx)
   15d80:	3c 00                	cmp    $0x0,%al
   15d82:	00 00                	add    %al,(%rax)
   15d84:	8c 1a                	mov    %ds,(%rdx)
   15d86:	00 00                	add    %al,(%rax)
   15d88:	d8 52 ff             	fcoms  -0x1(%rdx)
   15d8b:	ff                   	(bad)  
   15d8c:	ed                   	in     (%dx),%eax
   15d8d:	00 00                	add    %al,(%rax)
   15d8f:	00 00                	add    %al,(%rax)
   15d91:	46 0e                	rex.RX (bad) 
   15d93:	10 8d 02 42 0e 18    	adc    %cl,0x180e4202(%rbp)
   15d99:	8c 03                	mov    %es,(%rbx)
   15d9b:	41 0e                	rex.B (bad) 
   15d9d:	20 86 04 41 0e 28    	and    %al,0x280e4104(%rsi)
   15da3:	83 05 44 0e 30 4f 0a 	addl   $0xa,0x4f300e44(%rip)        # 4f316bee <_end+0x4f2ebbde>
   15daa:	0e                   	(bad)  
   15dab:	28 41 0e             	sub    %al,0xe(%rcx)
   15dae:	20 41 0e             	and    %al,0xe(%rcx)
   15db1:	18 42 0e             	sbb    %al,0xe(%rdx)
   15db4:	10 42 0e             	adc    %al,0xe(%rdx)
   15db7:	08 45 0b             	or     %al,0xb(%rbp)
   15dba:	00 00                	add    %al,(%rax)
   15dbc:	00 00                	add    %al,(%rax)
   15dbe:	00 00                	add    %al,(%rax)
   15dc0:	30 00                	xor    %al,(%rax)
   15dc2:	00 00                	add    %al,(%rax)
   15dc4:	cc                   	int3   
   15dc5:	1a 00                	sbb    (%rax),%al
   15dc7:	00 88 53 ff ff 3f    	add    %cl,0x3fffff53(%rax)
   15dcd:	01 00                	add    %eax,(%rax)
   15dcf:	00 00                	add    %al,(%rax)
   15dd1:	42 0e                	rex.X (bad) 
   15dd3:	10 8c 02 41 0e 18 86 	adc    %cl,-0x79e7f1bf(%rdx,%rax,1)
   15dda:	03 41 0e             	add    0xe(%rcx),%eax
   15ddd:	20 83 04 46 0e 30    	and    %al,0x300e4604(%rbx)
   15de3:	79 0a                	jns    15def <__GNU_EH_FRAME_HDR+0x232f>
   15de5:	0e                   	(bad)  
   15de6:	20 43 0e             	and    %al,0xe(%rbx)
   15de9:	18 41 0e             	sbb    %al,0xe(%rcx)
   15dec:	10 42 0e             	adc    %al,0xe(%rdx)
   15def:	08 47 0b             	or     %al,0xb(%rdi)
   15df2:	00 00                	add    %al,(%rax)
   15df4:	10 00                	adc    %al,(%rax)
   15df6:	00 00                	add    %al,(%rax)
   15df8:	00 1b                	add    %bl,(%rbx)
   15dfa:	00 00                	add    %al,(%rax)
   15dfc:	94                   	xchg   %eax,%esp
   15dfd:	54                   	push   %rsp
   15dfe:	ff                   	(bad)  
   15dff:	ff 73 00             	push   0x0(%rbx)
   15e02:	00 00                	add    %al,(%rax)
   15e04:	00 00                	add    %al,(%rax)
   15e06:	00 00                	add    %al,(%rax)
   15e08:	10 00                	adc    %al,(%rax)
   15e0a:	00 00                	add    %al,(%rax)
   15e0c:	14 1b                	adc    $0x1b,%al
   15e0e:	00 00                	add    %al,(%rax)
   15e10:	00 55 ff             	add    %dl,-0x1(%rbp)
   15e13:	ff                   	(bad)  
   15e14:	7b 00                	jnp    15e16 <__GNU_EH_FRAME_HDR+0x2356>
   15e16:	00 00                	add    %al,(%rax)
   15e18:	00 00                	add    %al,(%rax)
   15e1a:	00 00                	add    %al,(%rax)
   15e1c:	10 00                	adc    %al,(%rax)
   15e1e:	00 00                	add    %al,(%rax)
   15e20:	28 1b                	sub    %bl,(%rbx)
   15e22:	00 00                	add    %al,(%rax)
   15e24:	6c                   	insb   (%dx),%es:(%rdi)
   15e25:	55                   	push   %rbp
   15e26:	ff                   	(bad)  
   15e27:	ff 85 00 00 00 00    	incl   0x0(%rbp)
   15e2d:	00 00                	add    %al,(%rax)
   15e2f:	00 10                	add    %dl,(%rax)
   15e31:	00 00                	add    %al,(%rax)
   15e33:	00 3c 1b             	add    %bh,(%rbx,%rbx,1)
   15e36:	00 00                	add    %al,(%rax)
   15e38:	e8 55 ff ff 0f       	call   10015d92 <_end+0xffead82>
   15e3d:	00 00                	add    %al,(%rax)
   15e3f:	00 00                	add    %al,(%rax)
   15e41:	00 00                	add    %al,(%rax)
   15e43:	00 10                	add    %dl,(%rax)
   15e45:	00 00                	add    %al,(%rax)
   15e47:	00 50 1b             	add    %dl,0x1b(%rax)
   15e4a:	00 00                	add    %al,(%rax)
   15e4c:	e4 55                	in     $0x55,%al
   15e4e:	ff                   	(bad)  
   15e4f:	ff 09                	decl   (%rcx)
   15e51:	00 00                	add    %al,(%rax)
   15e53:	00 00                	add    %al,(%rax)
   15e55:	00 00                	add    %al,(%rax)
   15e57:	00 10                	add    %dl,(%rax)
   15e59:	00 00                	add    %al,(%rax)
   15e5b:	00 64 1b 00          	add    %ah,0x0(%rbx,%rbx,1)
   15e5f:	00 e0                	add    %ah,%al
   15e61:	55                   	push   %rbp
   15e62:	ff                   	(bad)  
   15e63:	ff 0b                	decl   (%rbx)
   15e65:	00 00                	add    %al,(%rax)
   15e67:	00 00                	add    %al,(%rax)
   15e69:	00 00                	add    %al,(%rax)
   15e6b:	00 10                	add    %dl,(%rax)
   15e6d:	00 00                	add    %al,(%rax)
   15e6f:	00 78 1b             	add    %bh,0x1b(%rax)
   15e72:	00 00                	add    %al,(%rax)
   15e74:	dc 55 ff             	fcoml  -0x1(%rbp)
   15e77:	ff 0f                	decl   (%rdi)
   15e79:	00 00                	add    %al,(%rax)
   15e7b:	00 00                	add    %al,(%rax)
   15e7d:	00 00                	add    %al,(%rax)
   15e7f:	00 10                	add    %dl,(%rax)
   15e81:	00 00                	add    %al,(%rax)
   15e83:	00 8c 1b 00 00 d8 55 	add    %cl,0x55d80000(%rbx,%rbx,1)
   15e8a:	ff                   	(bad)  
   15e8b:	ff 12                	call   *(%rdx)
   15e8d:	00 00                	add    %al,(%rax)
   15e8f:	00 00                	add    %al,(%rax)
   15e91:	00 00                	add    %al,(%rax)
   15e93:	00 1c 00             	add    %bl,(%rax,%rax,1)
   15e96:	00 00                	add    %al,(%rax)
   15e98:	a0 1b 00 00 e4 55 ff 	movabs 0x32ffff55e400001b,%al
   15e9f:	ff 32 
   15ea1:	00 00                	add    %al,(%rax)
   15ea3:	00 00                	add    %al,(%rax)
   15ea5:	48 0e                	rex.W (bad) 
   15ea7:	10 58 0a             	adc    %bl,0xa(%rax)
   15eaa:	0e                   	(bad)  
   15eab:	08 48 0b             	or     %cl,0xb(%rax)
   15eae:	49 0e                	rex.WB (bad) 
   15eb0:	08 00                	or     %al,(%rax)
   15eb2:	00 00                	add    %al,(%rax)
   15eb4:	30 00                	xor    %al,(%rax)
   15eb6:	00 00                	add    %al,(%rax)
   15eb8:	c0 1b 00             	rcrb   $0x0,(%rbx)
   15ebb:	00 04 56             	add    %al,(%rsi,%rdx,2)
   15ebe:	ff                   	(bad)  
   15ebf:	ff 30                	push   (%rax)
   15ec1:	02 00                	add    (%rax),%al
   15ec3:	00 00                	add    %al,(%rax)
   15ec5:	4c 0e                	rex.WR (bad) 
   15ec7:	10 83 02 02 53 0a    	adc    %al,0xa530202(%rbx)
   15ecd:	0e                   	(bad)  
   15ece:	08 41 0b             	or     %al,0xb(%rcx)
   15ed1:	02 a3 0a 0e 08 45    	add    0x45080e0a(%rbx),%ah
   15ed7:	0b 02                	or     (%rdx),%eax
   15ed9:	59                   	pop    %rcx
   15eda:	0a 0e                	or     (%rsi),%cl
   15edc:	08 47 0b             	or     %al,0xb(%rdi)
   15edf:	02 4f 0a             	add    0xa(%rdi),%cl
   15ee2:	0e                   	(bad)  
   15ee3:	08 49 0b             	or     %cl,0xb(%rcx)
   15ee6:	00 00                	add    %al,(%rax)
   15ee8:	10 00                	adc    %al,(%rax)
   15eea:	00 00                	add    %al,(%rax)
   15eec:	f4                   	hlt    
   15eed:	1b 00                	sbb    (%rax),%eax
   15eef:	00 00                	add    %al,(%rax)
   15ef1:	58                   	pop    %rax
   15ef2:	ff                   	(bad)  
   15ef3:	ff 43 00             	incl   0x0(%rbx)
   15ef6:	00 00                	add    %al,(%rax)
   15ef8:	00 00                	add    %al,(%rax)
   15efa:	00 00                	add    %al,(%rax)
   15efc:	48 00 00             	rex.W add %al,(%rax)
   15eff:	00 08                	add    %cl,(%rax)
   15f01:	1c 00                	sbb    $0x0,%al
   15f03:	00 3c 58             	add    %bh,(%rax,%rbx,2)
   15f06:	ff                   	(bad)  
   15f07:	ff                   	(bad)  
   15f08:	ff 01                	incl   (%rcx)
   15f0a:	00 00                	add    %al,(%rax)
   15f0c:	00 4d 0e             	add    %cl,0xe(%rbp)
   15f0f:	10 8c 02 48 0e 18 86 	adc    %cl,-0x79e7f1b8(%rdx,%rax,1)
   15f16:	03 4b 0e             	add    0xe(%rbx),%ecx
   15f19:	20 83 04 03 0a 01    	and    %al,0x10a0304(%rbx)
   15f1f:	0a 0e                	or     (%rsi),%cl
   15f21:	18 44 0e 10          	sbb    %al,0x10(%rsi,%rcx,1)
   15f25:	42 0e                	rex.X (bad) 
   15f27:	08 48 0b             	or     %cl,0xb(%rax)
   15f2a:	4e 0a 0e             	rex.WRX or (%rsi),%r9b
   15f2d:	18 41 0e             	sbb    %al,0xe(%rcx)
   15f30:	10 42 0e             	adc    %al,0xe(%rdx)
   15f33:	08 47 0b             	or     %al,0xb(%rdi)
   15f36:	02 9b 0a 0e 18 41    	add    0x41180e0a(%rbx),%bl
   15f3c:	0e                   	(bad)  
   15f3d:	10 42 0e             	adc    %al,0xe(%rdx)
   15f40:	08 41 0b             	or     %al,0xb(%rcx)
   15f43:	00 00                	add    %al,(%rax)
   15f45:	00 00                	add    %al,(%rax)
   15f47:	00 54 00 00          	add    %dl,0x0(%rax,%rax,1)
   15f4b:	00 54 1c 00          	add    %dl,0x0(%rsp,%rbx,1)
   15f4f:	00 f0                	add    %dh,%al
   15f51:	59                   	pop    %rcx
   15f52:	ff                   	(bad)  
   15f53:	ff f4                	push   %rsp
   15f55:	00 00                	add    %al,(%rax)
   15f57:	00 00                	add    %al,(%rax)
   15f59:	46 0e                	rex.RX (bad) 
   15f5b:	10 8f 02 45 0e 18    	adc    %cl,0x180e4502(%rdi)
   15f61:	8e 03                	mov    (%rbx),%es
   15f63:	45 0e                	rex.RB (bad) 
   15f65:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
   15f6b:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff86316db5 <_end+0xffffffff862ebda5>
   15f71:	06                   	(bad)  
   15f72:	44 0e                	rex.R (bad) 
   15f74:	38 83 07 47 0e 50    	cmp    %al,0x500e4707(%rbx)
   15f7a:	02 58 0e             	add    0xe(%rax),%bl
   15f7d:	58                   	pop    %rax
   15f7e:	4e 0e                	rex.WRX (bad) 
   15f80:	60                   	(bad)  
   15f81:	5e                   	pop    %rsi
   15f82:	0e                   	(bad)  
   15f83:	58                   	pop    %rax
   15f84:	41 0e                	rex.B (bad) 
   15f86:	50                   	push   %rax
   15f87:	70 0a                	jo     15f93 <__GNU_EH_FRAME_HDR+0x24d3>
   15f89:	0e                   	(bad)  
   15f8a:	38 41 0e             	cmp    %al,0xe(%rcx)
   15f8d:	30 41 0e             	xor    %al,0xe(%rcx)
   15f90:	28 42 0e             	sub    %al,0xe(%rdx)
   15f93:	20 42 0e             	and    %al,0xe(%rdx)
   15f96:	18 42 0e             	sbb    %al,0xe(%rdx)
   15f99:	10 42 0e             	adc    %al,0xe(%rdx)
   15f9c:	08 45 0b             	or     %al,0xb(%rbp)
   15f9f:	00 18                	add    %bl,(%rax)
   15fa1:	00 00                	add    %al,(%rax)
   15fa3:	00 ac 1c 00 00 98 5a 	add    %ch,0x5a980000(%rsp,%rbx,1)
   15faa:	ff                   	(bad)  
   15fab:	ff 1a                	lcall  *(%rdx)
   15fad:	00 00                	add    %al,(%rax)
   15faf:	00 00                	add    %al,(%rax)
   15fb1:	48 0e                	rex.W (bad) 
   15fb3:	18 48 0e             	sbb    %cl,0xe(%rax)
   15fb6:	20 49 0e             	and    %cl,0xe(%rcx)
   15fb9:	08 00                	or     %al,(%rax)
   15fbb:	00 10                	add    %dl,(%rax)
   15fbd:	00 00                	add    %al,(%rax)
   15fbf:	00 c8                	add    %cl,%al
   15fc1:	1c 00                	sbb    $0x0,%al
   15fc3:	00 9c 5a ff ff 10 00 	add    %bl,0x10ffff(%rdx,%rbx,2)
   15fca:	00 00                	add    %al,(%rax)
   15fcc:	00 00                	add    %al,(%rax)
   15fce:	00 00                	add    %al,(%rax)
   15fd0:	10 00                	adc    %al,(%rax)
   15fd2:	00 00                	add    %al,(%rax)
   15fd4:	dc 1c 00             	fcompl (%rax,%rax,1)
   15fd7:	00 98 5a ff ff 10    	add    %bl,0x10ffff5a(%rax)
   15fdd:	00 00                	add    %al,(%rax)
   15fdf:	00 00                	add    %al,(%rax)
   15fe1:	00 00                	add    %al,(%rax)
   15fe3:	00 10                	add    %dl,(%rax)
   15fe5:	00 00                	add    %al,(%rax)
   15fe7:	00 f0                	add    %dh,%al
   15fe9:	1c 00                	sbb    $0x0,%al
   15feb:	00 94 5a ff ff 10 00 	add    %dl,0x10ffff(%rdx,%rbx,2)
   15ff2:	00 00                	add    %al,(%rax)
   15ff4:	00 00                	add    %al,(%rax)
   15ff6:	00 00                	add    %al,(%rax)
   15ff8:	10 00                	adc    %al,(%rax)
   15ffa:	00 00                	add    %al,(%rax)
   15ffc:	04 1d                	add    $0x1d,%al
   15ffe:	00 00                	add    %al,(%rax)
   16000:	90                   	nop
   16001:	5a                   	pop    %rdx
   16002:	ff                   	(bad)  
   16003:	ff 10                	call   *(%rax)
   16005:	00 00                	add    %al,(%rax)
   16007:	00 00                	add    %al,(%rax)
   16009:	00 00                	add    %al,(%rax)
   1600b:	00 10                	add    %dl,(%rax)
   1600d:	00 00                	add    %al,(%rax)
   1600f:	00 18                	add    %bl,(%rax)
   16011:	1d 00 00 8c 5a       	sbb    $0x5a8c0000,%eax
   16016:	ff                   	(bad)  
   16017:	ff 10                	call   *(%rax)
   16019:	00 00                	add    %al,(%rax)
   1601b:	00 00                	add    %al,(%rax)
   1601d:	00 00                	add    %al,(%rax)
   1601f:	00 14 00             	add    %dl,(%rax,%rax,1)
   16022:	00 00                	add    %al,(%rax)
   16024:	2c 1d                	sub    $0x1d,%al
   16026:	00 00                	add    %al,(%rax)
   16028:	88 5a ff             	mov    %bl,-0x1(%rdx)
   1602b:	ff 10                	call   *(%rax)
	...
   16035:	00 00                	add    %al,(%rax)
   16037:	00 40 00             	add    %al,0x0(%rax)
   1603a:	00 00                	add    %al,(%rax)
   1603c:	44 1d 00 00 80 5a    	rex.R sbb $0x5a800000,%eax
   16042:	ff                   	(bad)  
   16043:	ff b2 01 00 00 00    	push   0x1(%rdx)
   16049:	46 0e                	rex.RX (bad) 
   1604b:	10 8e 02 42 0e 18    	adc    %cl,0x180e4202(%rsi)
   16051:	8d 03                	lea    (%rbx),%eax
   16053:	45 0e                	rex.RB (bad) 
   16055:	20 8c 04 41 0e 28 86 	and    %cl,-0x79d7f1bf(%rsp,%rax,1)
   1605c:	05 41 0e 30 83       	add    $0x83300e41,%eax
   16061:	06                   	(bad)  
   16062:	46 0e                	rex.RX (bad) 
   16064:	40 7b 0a             	rex jnp 16071 <__GNU_EH_FRAME_HDR+0x25b1>
   16067:	0e                   	(bad)  
   16068:	30 43 0e             	xor    %al,0xe(%rbx)
   1606b:	28 41 0e             	sub    %al,0xe(%rcx)
   1606e:	20 42 0e             	and    %al,0xe(%rdx)
   16071:	18 42 0e             	sbb    %al,0xe(%rdx)
   16074:	10 42 0e             	adc    %al,0xe(%rdx)
   16077:	08 46 0b             	or     %al,0xb(%rsi)
   1607a:	00 00                	add    %al,(%rax)
   1607c:	6c                   	insb   (%dx),%es:(%rdi)
   1607d:	00 00                	add    %al,(%rax)
   1607f:	00 88 1d 00 00 fc    	add    %cl,-0x3ffffe3(%rax)
   16085:	5b                   	pop    %rbx
   16086:	ff                   	(bad)  
   16087:	ff f7                	push   %rdi
   16089:	02 00                	add    (%rax),%al
   1608b:	00 00                	add    %al,(%rax)
   1608d:	46 0e                	rex.RX (bad) 
   1608f:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   16095:	8e 03                	mov    (%rbx),%es
   16097:	42 0e                	rex.X (bad) 
   16099:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   1609f:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff86316ee6 <_end+0xffffffff862ebed6>
   160a5:	06                   	(bad)  
   160a6:	41 0e                	rex.B (bad) 
   160a8:	38 83 07 44 0e a0    	cmp    %al,-0x5ff1bbf9(%rbx)
   160ae:	01 02                	add    %eax,(%rdx)
   160b0:	a3 0a 0e 38 43 0e 30 	movabs %eax,0xe41300e43380e0a
   160b7:	41 0e 
   160b9:	28 42 0e             	sub    %al,0xe(%rdx)
   160bc:	20 42 0e             	and    %al,0xe(%rdx)
   160bf:	18 42 0e             	sbb    %al,0xe(%rdx)
   160c2:	10 42 0e             	adc    %al,0xe(%rdx)
   160c5:	08 47 0b             	or     %al,0xb(%rdi)
   160c8:	02 b2 0e a8 01 4d    	add    0x4d01a80e(%rdx),%dh
   160ce:	0e                   	(bad)  
   160cf:	b0 01                	mov    $0x1,%al
   160d1:	55                   	push   %rbp
   160d2:	0e                   	(bad)  
   160d3:	a8 01                	test   $0x1,%al
   160d5:	41 0e                	rex.B (bad) 
   160d7:	a0 01 02 94 0e a8 01 	movabs 0xe4401a80e940201,%al
   160de:	44 0e 
   160e0:	b0 01                	mov    $0x1,%al
   160e2:	60                   	(bad)  
   160e3:	0e                   	(bad)  
   160e4:	a8 01                	test   $0x1,%al
   160e6:	42 0e                	rex.X (bad) 
   160e8:	a0 01 00 00 18 00 00 	movabs 0xf800000018000001,%al
   160ef:	00 f8 
   160f1:	1d 00 00 8c 5e       	sbb    $0x5e8c0000,%eax
   160f6:	ff                   	(bad)  
   160f7:	ff 26                	jmp    *(%rsi)
   160f9:	00 00                	add    %al,(%rax)
   160fb:	00 00                	add    %al,(%rax)
   160fd:	4d 0e                	rex.WRB (bad) 
   160ff:	18 48 0e             	sbb    %cl,0xe(%rax)
   16102:	20 49 0e             	and    %cl,0xe(%rcx)
   16105:	08 00                	or     %al,(%rax)
   16107:	00 38                	add    %bh,(%rax)
   16109:	00 00                	add    %al,(%rax)
   1610b:	00 14 1e             	add    %dl,(%rsi,%rbx,1)
   1610e:	00 00                	add    %al,(%rax)
   16110:	a0 5e ff ff b7 00 00 	movabs 0xb7ffff5e,%al
   16117:	00 00 
   16119:	46 0e                	rex.RX (bad) 
   1611b:	10 8d 02 45 0e 18    	adc    %cl,0x180e4502(%rbp)
   16121:	8c 03                	mov    %es,(%rbx)
   16123:	44 0e                	rex.R (bad) 
   16125:	20 86 04 44 0e 28    	and    %al,0x280e4404(%rsi)
   1612b:	83 05 49 0e 50 02 8d 	addl   $0xffffff8d,0x2500e49(%rip)        # 2516f7b <_end+0x24ebf6b>
   16132:	0a 0e                	or     (%rsi),%cl
   16134:	28 43 0e             	sub    %al,0xe(%rbx)
   16137:	20 41 0e             	and    %al,0xe(%rcx)
   1613a:	18 42 0e             	sbb    %al,0xe(%rdx)
   1613d:	10 42 0e             	adc    %al,0xe(%rdx)
   16140:	08 41 0b             	or     %al,0xb(%rcx)
   16143:	00 10                	add    %dl,(%rax)
   16145:	00 00                	add    %al,(%rax)
   16147:	00 50 1e             	add    %dl,0x1e(%rax)
   1614a:	00 00                	add    %al,(%rax)
   1614c:	24 5f                	and    $0x5f,%al
   1614e:	ff                   	(bad)  
   1614f:	ff 10                	call   *(%rax)
   16151:	00 00                	add    %al,(%rax)
   16153:	00 00                	add    %al,(%rax)
   16155:	00 00                	add    %al,(%rax)
   16157:	00 38                	add    %bh,(%rax)
   16159:	00 00                	add    %al,(%rax)
   1615b:	00 64 1e 00          	add    %ah,0x0(%rsi,%rbx,1)
   1615f:	00 20                	add    %ah,(%rax)
   16161:	5f                   	pop    %rdi
   16162:	ff                   	(bad)  
   16163:	ff b7 00 00 00 00    	push   0x0(%rdi)
   16169:	46 0e                	rex.RX (bad) 
   1616b:	10 8d 02 45 0e 18    	adc    %cl,0x180e4502(%rbp)
   16171:	8c 03                	mov    %es,(%rbx)
   16173:	44 0e                	rex.R (bad) 
   16175:	20 86 04 44 0e 28    	and    %al,0x280e4404(%rsi)
   1617b:	83 05 49 0e 50 02 8d 	addl   $0xffffff8d,0x2500e49(%rip)        # 2516fcb <_end+0x24ebfbb>
   16182:	0a 0e                	or     (%rsi),%cl
   16184:	28 43 0e             	sub    %al,0xe(%rbx)
   16187:	20 41 0e             	and    %al,0xe(%rcx)
   1618a:	18 42 0e             	sbb    %al,0xe(%rdx)
   1618d:	10 42 0e             	adc    %al,0xe(%rdx)
   16190:	08 41 0b             	or     %al,0xb(%rcx)
   16193:	00 10                	add    %dl,(%rax)
   16195:	00 00                	add    %al,(%rax)
   16197:	00 a0 1e 00 00 a4    	add    %ah,-0x5bffffe2(%rax)
   1619d:	5f                   	pop    %rdi
   1619e:	ff                   	(bad)  
   1619f:	ff 10                	call   *(%rax)
   161a1:	00 00                	add    %al,(%rax)
   161a3:	00 00                	add    %al,(%rax)
   161a5:	00 00                	add    %al,(%rax)
   161a7:	00 38                	add    %bh,(%rax)
   161a9:	00 00                	add    %al,(%rax)
   161ab:	00 b4 1e 00 00 a0 5f 	add    %dh,0x5fa00000(%rsi,%rbx,1)
   161b2:	ff                   	(bad)  
   161b3:	ff b7 00 00 00 00    	push   0x0(%rdi)
   161b9:	46 0e                	rex.RX (bad) 
   161bb:	10 8d 02 45 0e 18    	adc    %cl,0x180e4502(%rbp)
   161c1:	8c 03                	mov    %es,(%rbx)
   161c3:	44 0e                	rex.R (bad) 
   161c5:	20 86 04 44 0e 28    	and    %al,0x280e4404(%rsi)
   161cb:	83 05 49 0e 50 02 8d 	addl   $0xffffff8d,0x2500e49(%rip)        # 251701b <_end+0x24ec00b>
   161d2:	0a 0e                	or     (%rsi),%cl
   161d4:	28 43 0e             	sub    %al,0xe(%rbx)
   161d7:	20 41 0e             	and    %al,0xe(%rcx)
   161da:	18 42 0e             	sbb    %al,0xe(%rdx)
   161dd:	10 42 0e             	adc    %al,0xe(%rdx)
   161e0:	08 41 0b             	or     %al,0xb(%rcx)
   161e3:	00 10                	add    %dl,(%rax)
   161e5:	00 00                	add    %al,(%rax)
   161e7:	00 f0                	add    %dh,%al
   161e9:	1e                   	(bad)  
   161ea:	00 00                	add    %al,(%rax)
   161ec:	24 60                	and    $0x60,%al
   161ee:	ff                   	(bad)  
   161ef:	ff 10                	call   *(%rax)
   161f1:	00 00                	add    %al,(%rax)
   161f3:	00 00                	add    %al,(%rax)
   161f5:	00 00                	add    %al,(%rax)
   161f7:	00 48 00             	add    %cl,0x0(%rax)
   161fa:	00 00                	add    %al,(%rax)
   161fc:	04 1f                	add    $0x1f,%al
   161fe:	00 00                	add    %al,(%rax)
   16200:	20 60 ff             	and    %ah,-0x1(%rax)
   16203:	ff 0d 01 00 00 00    	decl   0x1(%rip)        # 1620a <__GNU_EH_FRAME_HDR+0x274a>
   16209:	46 0e                	rex.RX (bad) 
   1620b:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   16211:	8e 03                	mov    (%rbx),%es
   16213:	42 0e                	rex.X (bad) 
   16215:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   1621b:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff86317062 <_end+0xffffffff862ec052>
   16221:	06                   	(bad)  
   16222:	41 0e                	rex.B (bad) 
   16224:	38 83 07 44 0e 60    	cmp    %al,0x600e4407(%rbx)
   1622a:	02 e8                	add    %al,%ch
   1622c:	0a 0e                	or     (%rsi),%cl
   1622e:	38 44 0e 30          	cmp    %al,0x30(%rsi,%rcx,1)
   16232:	41 0e                	rex.B (bad) 
   16234:	28 42 0e             	sub    %al,0xe(%rdx)
   16237:	20 42 0e             	and    %al,0xe(%rdx)
   1623a:	18 42 0e             	sbb    %al,0xe(%rdx)
   1623d:	10 42 0e             	adc    %al,0xe(%rdx)
   16240:	08 41 0b             	or     %al,0xb(%rcx)
   16243:	00 10                	add    %dl,(%rax)
   16245:	00 00                	add    %al,(%rax)
   16247:	00 50 1f             	add    %dl,0x1f(%rax)
   1624a:	00 00                	add    %al,(%rax)
   1624c:	e4 60                	in     $0x60,%al
   1624e:	ff                   	(bad)  
   1624f:	ff 10                	call   *(%rax)
   16251:	00 00                	add    %al,(%rax)
   16253:	00 00                	add    %al,(%rax)
   16255:	00 00                	add    %al,(%rax)
   16257:	00 30                	add    %dh,(%rax)
   16259:	00 00                	add    %al,(%rax)
   1625b:	00 64 1f 00          	add    %ah,0x0(%rdi,%rbx,1)
   1625f:	00 e0                	add    %ah,%al
   16261:	60                   	(bad)  
   16262:	ff                   	(bad)  
   16263:	ff                   	(bad)  
   16264:	dc 00                	faddl  (%rax)
   16266:	00 00                	add    %al,(%rax)
   16268:	00 46 0e             	add    %al,0xe(%rsi)
   1626b:	10 8c 02 41 0e 18 86 	adc    %cl,-0x79e7f1bf(%rdx,%rax,1)
   16272:	03 46 0e             	add    0xe(%rsi),%eax
   16275:	20 83 04 44 0e 40    	and    %al,0x400e4404(%rbx)
   1627b:	02 b3 0a 0e 20 43    	add    0x43200e0a(%rbx),%dh
   16281:	0e                   	(bad)  
   16282:	18 41 0e             	sbb    %al,0xe(%rcx)
   16285:	10 42 0e             	adc    %al,0xe(%rdx)
   16288:	08 46 0b             	or     %al,0xb(%rsi)
   1628b:	00 28                	add    %ch,(%rax)
   1628d:	00 00                	add    %al,(%rax)
   1628f:	00 98 1f 00 00 8c    	add    %bl,-0x73ffffe1(%rax)
   16295:	61                   	(bad)  
   16296:	ff                   	(bad)  
   16297:	ff                   	(bad)  
   16298:	dc 00                	faddl  (%rax)
   1629a:	00 00                	add    %al,(%rax)
   1629c:	00 45 0e             	add    %al,0xe(%rbp)
   1629f:	10 86 02 41 0e 18    	adc    %al,0x180e4102(%rsi)
   162a5:	83 03 49             	addl   $0x49,(%rbx)
   162a8:	0e                   	(bad)  
   162a9:	40 02 b5 0a 0e 18 43 	add    0x43180e0a(%rbp),%sil
   162b0:	0e                   	(bad)  
   162b1:	10 41 0e             	adc    %al,0xe(%rcx)
   162b4:	08 48 0b             	or     %cl,0xb(%rax)
   162b7:	00 40 00             	add    %al,0x0(%rax)
   162ba:	00 00                	add    %al,(%rax)
   162bc:	c4                   	(bad)  
   162bd:	1f                   	(bad)  
   162be:	00 00                	add    %al,(%rax)
   162c0:	40 62                	(bad)  
   162c2:	ff                   	(bad)  
   162c3:	ff                   	(bad)  
   162c4:	ef                   	out    %eax,(%dx)
   162c5:	00 00                	add    %al,(%rax)
   162c7:	00 00                	add    %al,(%rax)
   162c9:	46 0e                	rex.RX (bad) 
   162cb:	10 8e 02 42 0e 18    	adc    %cl,0x180e4202(%rsi)
   162d1:	8d 03                	lea    (%rbx),%eax
   162d3:	42 0e                	rex.X (bad) 
   162d5:	20 8c 04 47 0e 28 86 	and    %cl,-0x79d7f1b9(%rsp,%rax,1)
   162dc:	05 41 0e 30 83       	add    $0x83300e41,%eax
   162e1:	06                   	(bad)  
   162e2:	44 0e                	rex.R (bad) 
   162e4:	50                   	push   %rax
   162e5:	02 c8                	add    %al,%cl
   162e7:	0a 0e                	or     (%rsi),%cl
   162e9:	30 44 0e 28          	xor    %al,0x28(%rsi,%rcx,1)
   162ed:	41 0e                	rex.B (bad) 
   162ef:	20 42 0e             	and    %al,0xe(%rdx)
   162f2:	18 42 0e             	sbb    %al,0xe(%rdx)
   162f5:	10 42 0e             	adc    %al,0xe(%rdx)
   162f8:	08 41 0b             	or     %al,0xb(%rcx)
   162fb:	00 10                	add    %dl,(%rax)
   162fd:	00 00                	add    %al,(%rax)
   162ff:	00 08                	add    %cl,(%rax)
   16301:	20 00                	and    %al,(%rax)
   16303:	00 ec                	add    %ch,%ah
   16305:	62                   	(bad)  
   16306:	ff                   	(bad)  
   16307:	ff 10                	call   *(%rax)
   16309:	00 00                	add    %al,(%rax)
   1630b:	00 00                	add    %al,(%rax)
   1630d:	00 00                	add    %al,(%rax)
   1630f:	00 34 00             	add    %dh,(%rax,%rax,1)
   16312:	00 00                	add    %al,(%rax)
   16314:	1c 20                	sbb    $0x20,%al
   16316:	00 00                	add    %al,(%rax)
   16318:	e8 62 ff ff 5c       	call   5d01627f <_end+0x5cfeb26f>
   1631d:	00 00                	add    %al,(%rax)
   1631f:	00 00                	add    %al,(%rax)
   16321:	45 0e                	rex.RB (bad) 
   16323:	10 86 02 44 0e 18    	adc    %al,0x180e4402(%rsi)
   16329:	83 03 47             	addl   $0x47,(%rbx)
   1632c:	0e                   	(bad)  
   1632d:	20 73 0a             	and    %dh,0xa(%rbx)
   16330:	0e                   	(bad)  
   16331:	18 43 0e             	sbb    %al,0xe(%rbx)
   16334:	10 41 0e             	adc    %al,0xe(%rcx)
   16337:	08 49 0b             	or     %cl,0xb(%rcx)
   1633a:	44 0e                	rex.R (bad) 
   1633c:	18 46 0e             	sbb    %al,0xe(%rsi)
   1633f:	10 41 0e             	adc    %al,0xe(%rcx)
   16342:	08 00                	or     %al,(%rax)
   16344:	00 00                	add    %al,(%rax)
   16346:	00 00                	add    %al,(%rax)
   16348:	10 00                	adc    %al,(%rax)
   1634a:	00 00                	add    %al,(%rax)
   1634c:	54                   	push   %rsp
   1634d:	20 00                	and    %al,(%rax)
   1634f:	00 30                	add    %dh,(%rax)
   16351:	63 ff                	movsxd %edi,%edi
   16353:	ff 64 00 00          	jmp    *0x0(%rax,%rax,1)
   16357:	00 00                	add    %al,(%rax)
   16359:	00 00                	add    %al,(%rax)
   1635b:	00 28                	add    %ch,(%rax)
   1635d:	00 00                	add    %al,(%rax)
   1635f:	00 68 20             	add    %ch,0x20(%rax)
   16362:	00 00                	add    %al,(%rax)
   16364:	8c 63 ff             	mov    %fs,-0x1(%rbx)
   16367:	ff 1c 01             	lcall  *(%rcx,%rax,1)
   1636a:	00 00                	add    %al,(%rax)
   1636c:	00 45 0e             	add    %al,0xe(%rbp)
   1636f:	10 86 02 41 0e 18    	adc    %al,0x180e4102(%rsi)
   16375:	83 03 44             	addl   $0x44,(%rbx)
   16378:	0e                   	(bad)  
   16379:	20 02                	and    %al,(%rdx)
   1637b:	99                   	cltd   
   1637c:	0a 0e                	or     (%rsi),%cl
   1637e:	18 44 0e 10          	sbb    %al,0x10(%rsi,%rcx,1)
   16382:	41 0e                	rex.B (bad) 
   16384:	08 48 0b             	or     %cl,0xb(%rax)
   16387:	00 18                	add    %bl,(%rax)
   16389:	00 00                	add    %al,(%rax)
   1638b:	00 94 20 00 00 80 64 	add    %dl,0x64800000(%rax,%riz,1)
   16392:	ff                   	(bad)  
   16393:	ff 8e 00 00 00 00    	decl   0x0(%rsi)
   16399:	48 0e                	rex.W (bad) 
   1639b:	20 02                	and    %al,(%rdx)
   1639d:	80 0a 0e             	orb    $0xe,(%rdx)
   163a0:	08 41 0b             	or     %al,0xb(%rcx)
   163a3:	00 10                	add    %dl,(%rax)
   163a5:	00 00                	add    %al,(%rax)
   163a7:	00 b0 20 00 00 f4    	add    %dh,-0xbffffe0(%rax)
   163ad:	64 ff                	fs (bad) 
   163af:	ff 0d 00 00 00 00    	decl   0x0(%rip)        # 163b5 <__GNU_EH_FRAME_HDR+0x28f5>
   163b5:	00 00                	add    %al,(%rax)
   163b7:	00 38                	add    %bh,(%rax)
   163b9:	00 00                	add    %al,(%rax)
   163bb:	00 c4                	add    %al,%ah
   163bd:	20 00                	and    %al,(%rax)
   163bf:	00 f0                	add    %dh,%al
   163c1:	64 ff                	fs (bad) 
   163c3:	ff 2b                	ljmp   *(%rbx)
   163c5:	08 00                	or     %al,(%rax)
   163c7:	00 00                	add    %al,(%rax)
   163c9:	41 0e                	rex.B (bad) 
   163cb:	10 86 02 47 0e 18    	adc    %al,0x180e4702(%rsi)
   163d1:	83 03 44             	addl   $0x44,(%rbx)
   163d4:	0e                   	(bad)  
   163d5:	20 03                	and    %al,(%rbx)
   163d7:	81 01 0a 0e 18 41    	addl   $0x41180e0a,(%rcx)
   163dd:	0e                   	(bad)  
   163de:	10 41 0e             	adc    %al,0xe(%rcx)
   163e1:	08 41 0b             	or     %al,0xb(%rcx)
   163e4:	03 a8 01 0a 0e 18    	add    0x180e0a01(%rax),%ebp
   163ea:	41 0e                	rex.B (bad) 
   163ec:	10 41 0e             	adc    %al,0xe(%rcx)
   163ef:	08 46 0b             	or     %al,0xb(%rsi)
   163f2:	00 00                	add    %al,(%rax)
   163f4:	18 00                	sbb    %al,(%rax)
   163f6:	00 00                	add    %al,(%rax)
   163f8:	00 21                	add    %ah,(%rcx)
   163fa:	00 00                	add    %al,(%rax)
   163fc:	e4 6c                	in     $0x6c,%al
   163fe:	ff                   	(bad)  
   163ff:	ff e1                	jmp    *%rcx
   16401:	00 00                	add    %al,(%rax)
   16403:	00 00                	add    %al,(%rax)
   16405:	44 0e                	rex.R (bad) 
   16407:	20 02                	and    %al,(%rdx)
   16409:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
   1640a:	0a 0e                	or     (%rsi),%cl
   1640c:	08 46 0b             	or     %al,0xb(%rsi)
   1640f:	00 48 00             	add    %cl,0x0(%rax)
   16412:	00 00                	add    %al,(%rax)
   16414:	1c 21                	sbb    $0x21,%al
   16416:	00 00                	add    %al,(%rax)
   16418:	b8 6d ff ff 4e       	mov    $0x4effff6d,%eax
   1641d:	1b 00                	sbb    (%rax),%eax
   1641f:	00 00                	add    %al,(%rax)
   16421:	46 0e                	rex.RX (bad) 
   16423:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   16429:	8e 03                	mov    (%rbx),%es
   1642b:	42 0e                	rex.X (bad) 
   1642d:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   16433:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff8631727a <_end+0xffffffff862ec26a>
   16439:	06                   	(bad)  
   1643a:	44 0e                	rex.R (bad) 
   1643c:	38 83 07 44 0e 50    	cmp    %al,0x500e4407(%rbx)
   16442:	02 fa                	add    %dl,%bh
   16444:	0a 0e                	or     (%rsi),%cl
   16446:	38 44 0e 30          	cmp    %al,0x30(%rsi,%rcx,1)
   1644a:	41 0e                	rex.B (bad) 
   1644c:	28 42 0e             	sub    %al,0xe(%rdx)
   1644f:	20 42 0e             	and    %al,0xe(%rdx)
   16452:	18 42 0e             	sbb    %al,0xe(%rdx)
   16455:	10 42 0e             	adc    %al,0xe(%rdx)
   16458:	08 44 0b 00          	or     %al,0x0(%rbx,%rcx,1)
   1645c:	60                   	(bad)  
   1645d:	00 00                	add    %al,(%rax)
   1645f:	00 68 21             	add    %ch,0x21(%rax)
   16462:	00 00                	add    %al,(%rax)
   16464:	bc 88 ff ff 93       	mov    $0x93ffff88,%esp
   16469:	02 00                	add    (%rax),%al
   1646b:	00 00                	add    %al,(%rax)
   1646d:	42 0e                	rex.X (bad) 
   1646f:	10 8d 02 42 0e 18    	adc    %cl,0x180e4202(%rbp)
   16475:	8c 03                	mov    %es,(%rbx)
   16477:	41 0e                	rex.B (bad) 
   16479:	20 86 04 41 0e 28    	and    %al,0x280e4104(%rsi)
   1647f:	83 05 49 0e 40 02 4a 	addl   $0x4a,0x2400e49(%rip)        # 24172cf <_end+0x23ec2bf>
   16486:	0a 0e                	or     (%rsi),%cl
   16488:	28 43 0e             	sub    %al,0xe(%rbx)
   1648b:	20 41 0e             	and    %al,0xe(%rcx)
   1648e:	18 42 0e             	sbb    %al,0xe(%rdx)
   16491:	10 42 0e             	adc    %al,0xe(%rdx)
   16494:	08 47 0b             	or     %al,0xb(%rdi)
   16497:	02 82 0a 0e 28 41    	add    0x41280e0a(%rdx),%al
   1649d:	0e                   	(bad)  
   1649e:	20 41 0e             	and    %al,0xe(%rcx)
   164a1:	18 42 0e             	sbb    %al,0xe(%rdx)
   164a4:	10 42 0e             	adc    %al,0xe(%rdx)
   164a7:	08 48 0b             	or     %cl,0xb(%rax)
   164aa:	03 6e 01             	add    0x1(%rsi),%ebp
   164ad:	0a 0e                	or     (%rsi),%cl
   164af:	28 41 0e             	sub    %al,0xe(%rcx)
   164b2:	20 41 0e             	and    %al,0xe(%rcx)
   164b5:	18 42 0e             	sbb    %al,0xe(%rdx)
   164b8:	10 42 0e             	adc    %al,0xe(%rdx)
   164bb:	08 44 0b 00          	or     %al,0x0(%rbx,%rcx,1)
   164bf:	00 60 00             	add    %ah,0x0(%rax)
   164c2:	00 00                	add    %al,(%rax)
   164c4:	cc                   	int3   
   164c5:	21 00                	and    %eax,(%rax)
   164c7:	00 f8                	add    %bh,%al
   164c9:	8a ff                	mov    %bh,%bh
   164cb:	ff 00                	incl   (%rax)
   164cd:	0b 00                	or     (%rax),%eax
   164cf:	00 00                	add    %al,(%rax)
   164d1:	4f 0e                	rex.WRXB (bad) 
   164d3:	10 8d 02 49 0e 18    	adc    %cl,0x180e4902(%rbp)
   164d9:	8c 03                	mov    %es,(%rbx)
   164db:	41 0e                	rex.B (bad) 
   164dd:	20 86 04 41 0e 28    	and    %al,0x280e4104(%rsi)
   164e3:	83 05 44 0e 30 02 f3 	addl   $0xfffffff3,0x2300e44(%rip)        # 231732e <_end+0x22ec31e>
   164ea:	0a 0e                	or     (%rsi),%cl
   164ec:	28 41 0e             	sub    %al,0xe(%rcx)
   164ef:	20 41 0e             	and    %al,0xe(%rcx)
   164f2:	18 42 0e             	sbb    %al,0xe(%rdx)
   164f5:	10 42 0e             	adc    %al,0xe(%rdx)
   164f8:	08 49 0b             	or     %cl,0xb(%rcx)
   164fb:	02 c8                	add    %al,%cl
   164fd:	0e                   	(bad)  
   164fe:	08 c3                	or     %al,%bl
   16500:	c6                   	(bad)  
   16501:	cc                   	int3   
   16502:	cd 48                	int    $0x48
   16504:	0e                   	(bad)  
   16505:	30 83 05 86 04 8c    	xor    %al,-0x73fb79fb(%rbx)
   1650b:	03 8d 02 02 9e 0a    	add    0xa9e0202(%rbp),%ecx
   16511:	0e                   	(bad)  
   16512:	28 41 0e             	sub    %al,0xe(%rcx)
   16515:	20 41 0e             	and    %al,0xe(%rcx)
   16518:	18 42 0e             	sbb    %al,0xe(%rdx)
   1651b:	10 42 0e             	adc    %al,0xe(%rdx)
   1651e:	08 44 0b 00          	or     %al,0x0(%rbx,%rcx,1)
   16522:	00 00                	add    %al,(%rax)
   16524:	28 00                	sub    %al,(%rax)
   16526:	00 00                	add    %al,(%rax)
   16528:	30 22                	xor    %ah,(%rdx)
   1652a:	00 00                	add    %al,(%rax)
   1652c:	94                   	xchg   %eax,%esp
   1652d:	95                   	xchg   %eax,%ebp
   1652e:	ff                   	(bad)  
   1652f:	ff 68 00             	ljmp   *0x0(%rax)
   16532:	00 00                	add    %al,(%rax)
   16534:	00 45 0e             	add    %al,0xe(%rbp)
   16537:	10 86 02 41 0e 18    	adc    %al,0x180e4102(%rsi)
   1653d:	83 03 47             	addl   $0x47,(%rbx)
   16540:	0e                   	(bad)  
   16541:	20 02                	and    %al,(%rdx)
   16543:	41 0a 0e             	or     (%r14),%cl
   16546:	18 44 0e 10          	sbb    %al,0x10(%rsi,%rcx,1)
   1654a:	41 0e                	rex.B (bad) 
   1654c:	08 45 0b             	or     %al,0xb(%rbp)
   1654f:	00 64 00 00          	add    %ah,0x0(%rax,%rax,1)
   16553:	00 5c 22 00          	add    %bl,0x0(%rdx,%riz,1)
   16557:	00 d8                	add    %bl,%al
   16559:	95                   	xchg   %eax,%ebp
   1655a:	ff                   	(bad)  
   1655b:	ff 0d 07 00 00 00    	decl   0x7(%rip)        # 16568 <__GNU_EH_FRAME_HDR+0x2aa8>
   16561:	46 0e                	rex.RX (bad) 
   16563:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   16569:	8e 03                	mov    (%rbx),%es
   1656b:	42 0e                	rex.X (bad) 
   1656d:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   16573:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff863173ba <_end+0xffffffff862ec3aa>
   16579:	06                   	(bad)  
   1657a:	41 0e                	rex.B (bad) 
   1657c:	38 83 07 47 0e 40    	cmp    %al,0x400e4707(%rbx)
   16582:	02 ea                	add    %dl,%ch
   16584:	0a 0e                	or     (%rsi),%cl
   16586:	38 44 0e 30          	cmp    %al,0x30(%rsi,%rcx,1)
   1658a:	41 0e                	rex.B (bad) 
   1658c:	28 42 0e             	sub    %al,0xe(%rdx)
   1658f:	20 42 0e             	and    %al,0xe(%rdx)
   16592:	18 42 0e             	sbb    %al,0xe(%rdx)
   16595:	10 42 0e             	adc    %al,0xe(%rdx)
   16598:	08 44 0b 03          	or     %al,0x3(%rbx,%rcx,1)
   1659c:	04 01                	add    $0x1,%al
   1659e:	0a 0e                	or     (%rsi),%cl
   165a0:	38 44 0e 30          	cmp    %al,0x30(%rsi,%rcx,1)
   165a4:	41 0e                	rex.B (bad) 
   165a6:	28 42 0e             	sub    %al,0xe(%rdx)
   165a9:	20 42 0e             	and    %al,0xe(%rdx)
   165ac:	18 42 0e             	sbb    %al,0xe(%rdx)
   165af:	10 42 0e             	adc    %al,0xe(%rdx)
   165b2:	08 4f 0b             	or     %cl,0xb(%rdi)
   165b5:	00 00                	add    %al,(%rax)
   165b7:	00 10                	add    %dl,(%rax)
   165b9:	00 00                	add    %al,(%rax)
   165bb:	00 c4                	add    %al,%ah
   165bd:	22 00                	and    (%rax),%al
   165bf:	00 80 9c ff ff 18    	add    %al,0x18ffff9c(%rax)
   165c5:	00 00                	add    %al,(%rax)
   165c7:	00 00                	add    %al,(%rax)
   165c9:	00 00                	add    %al,(%rax)
   165cb:	00 20                	add    %ah,(%rax)
   165cd:	00 00                	add    %al,(%rax)
   165cf:	00 d8                	add    %bl,%al
   165d1:	22 00                	and    (%rax),%al
   165d3:	00 8c 9c ff ff 8a 00 	add    %cl,0x8affff(%rsp,%rbx,4)
   165da:	00 00                	add    %al,(%rax)
   165dc:	00 45 0e             	add    %al,0xe(%rbp)
   165df:	10 83 02 02 61 0a    	adc    %al,0xa610202(%rbx)
   165e5:	0e                   	(bad)  
   165e6:	08 4a 0b             	or     %cl,0xb(%rdx)
   165e9:	46 0a 0e             	rex.RX or (%rsi),%r9b
   165ec:	08 4a 0b             	or     %cl,0xb(%rdx)
   165ef:	00 3c 00             	add    %bh,(%rax,%rax,1)
   165f2:	00 00                	add    %al,(%rax)
   165f4:	fc                   	cld    
   165f5:	22 00                	and    (%rax),%al
   165f7:	00 f8                	add    %bh,%al
   165f9:	9c                   	pushf  
   165fa:	ff                   	(bad)  
   165fb:	ff b2 01 00 00 00    	push   0x1(%rdx)
   16601:	46 0e                	rex.RX (bad) 
   16603:	10 8d 02 42 0e 18    	adc    %cl,0x180e4202(%rbp)
   16609:	8c 03                	mov    %es,(%rbx)
   1660b:	41 0e                	rex.B (bad) 
   1660d:	20 86 04 41 0e 28    	and    %al,0x280e4104(%rsi)
   16613:	83 05 47 0e 30 03 05 	addl   $0x5,0x3300e47(%rip)        # 3317461 <_end+0x32ec451>
   1661a:	01 0a                	add    %ecx,(%rdx)
   1661c:	0e                   	(bad)  
   1661d:	28 41 0e             	sub    %al,0xe(%rcx)
   16620:	20 41 0e             	and    %al,0xe(%rcx)
   16623:	18 42 0e             	sbb    %al,0xe(%rdx)
   16626:	10 42 0e             	adc    %al,0xe(%rdx)
   16629:	08 44 0b 00          	or     %al,0x0(%rbx,%rcx,1)
   1662d:	00 00                	add    %al,(%rax)
   1662f:	00 10                	add    %dl,(%rax)
   16631:	00 00                	add    %al,(%rax)
   16633:	00 3c 23             	add    %bh,(%rbx,%riz,1)
   16636:	00 00                	add    %al,(%rax)
   16638:	78 9e                	js     165d8 <__GNU_EH_FRAME_HDR+0x2b18>
   1663a:	ff                   	(bad)  
   1663b:	ff ce                	dec    %esi
   1663d:	00 00                	add    %al,(%rax)
   1663f:	00 00                	add    %al,(%rax)
   16641:	00 00                	add    %al,(%rax)
   16643:	00 10                	add    %dl,(%rax)
   16645:	00 00                	add    %al,(%rax)
   16647:	00 50 23             	add    %dl,0x23(%rax)
   1664a:	00 00                	add    %al,(%rax)
   1664c:	34 9f                	xor    $0x9f,%al
   1664e:	ff                   	(bad)  
   1664f:	ff 1a                	lcall  *(%rdx)
   16651:	00 00                	add    %al,(%rax)
   16653:	00 00                	add    %al,(%rax)
   16655:	00 00                	add    %al,(%rax)
   16657:	00 38                	add    %bh,(%rax)
   16659:	00 00                	add    %al,(%rax)
   1665b:	00 64 23 00          	add    %ah,0x0(%rbx,%riz,1)
   1665f:	00 40 9f             	add    %al,-0x61(%rax)
   16662:	ff                   	(bad)  
   16663:	ff b3 00 00 00 00    	push   0x0(%rbx)
   16669:	46 0e                	rex.RX (bad) 
   1666b:	10 8e 02 42 0e 18    	adc    %cl,0x180e4202(%rsi)
   16671:	8d 03                	lea    (%rbx),%eax
   16673:	45 0e                	rex.RB (bad) 
   16675:	20 8c 04 41 0e 28 86 	and    %cl,-0x79d7f1bf(%rsp,%rax,1)
   1667c:	05 41 0e 30 83       	add    $0x83300e41,%eax
   16681:	06                   	(bad)  
   16682:	02 99 0e 28 44 0e    	add    0xe44280e(%rcx),%bl
   16688:	20 42 0e             	and    %al,0xe(%rdx)
   1668b:	18 42 0e             	sbb    %al,0xe(%rdx)
   1668e:	10 42 0e             	adc    %al,0xe(%rdx)
   16691:	08 00                	or     %al,(%rax)
   16693:	00 48 00             	add    %cl,0x0(%rax)
   16696:	00 00                	add    %al,(%rax)
   16698:	a0 23 00 00 c4 9f ff 	movabs 0xedffff9fc4000023,%al
   1669f:	ff ed 
   166a1:	00 00                	add    %al,(%rax)
   166a3:	00 00                	add    %al,(%rax)
   166a5:	42 0e                	rex.X (bad) 
   166a7:	10 8f 02 46 0e 18    	adc    %cl,0x180e4602(%rdi)
   166ad:	8e 03                	mov    (%rbx),%es
   166af:	42 0e                	rex.X (bad) 
   166b1:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   166b7:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff863174fe <_end+0xffffffff862ec4ee>
   166bd:	06                   	(bad)  
   166be:	41 0e                	rex.B (bad) 
   166c0:	38 83 07 44 0e 70    	cmp    %al,0x700e4407(%rbx)
   166c6:	02 5b 0a             	add    0xa(%rbx),%bl
   166c9:	0e                   	(bad)  
   166ca:	38 41 0e             	cmp    %al,0xe(%rcx)
   166cd:	30 41 0e             	xor    %al,0xe(%rcx)
   166d0:	28 42 0e             	sub    %al,0xe(%rdx)
   166d3:	20 42 0e             	and    %al,0xe(%rdx)
   166d6:	18 42 0e             	sbb    %al,0xe(%rdx)
   166d9:	10 42 0e             	adc    %al,0xe(%rdx)
   166dc:	08 49 0b             	or     %cl,0xb(%rcx)
   166df:	00 10                	add    %dl,(%rax)
   166e1:	00 00                	add    %al,(%rax)
   166e3:	00 ec                	add    %ch,%ah
   166e5:	23 00                	and    (%rax),%eax
   166e7:	00 68 a0             	add    %ch,-0x60(%rax)
   166ea:	ff                   	(bad)  
   166eb:	ff 1a                	lcall  *(%rdx)
   166ed:	00 00                	add    %al,(%rax)
   166ef:	00 00                	add    %al,(%rax)
   166f1:	00 00                	add    %al,(%rax)
   166f3:	00 60 00             	add    %ah,0x0(%rax)
   166f6:	00 00                	add    %al,(%rax)
   166f8:	00 24 00             	add    %ah,(%rax,%rax,1)
   166fb:	00 74 a0 ff          	add    %dh,-0x1(%rax,%riz,4)
   166ff:	ff 37                	push   (%rdi)
   16701:	01 00                	add    %eax,(%rax)
   16703:	00 00                	add    %al,(%rax)
   16705:	46 0e                	rex.RX (bad) 
   16707:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   1670d:	8e 03                	mov    (%rbx),%es
   1670f:	42 0e                	rex.X (bad) 
   16711:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
   16717:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff8631755e <_end+0xffffffff862ec54e>
   1671d:	06                   	(bad)  
   1671e:	41 0e                	rex.B (bad) 
   16720:	38 83 07 44 0e 50    	cmp    %al,0x500e4407(%rbx)
   16726:	02 e1                	add    %cl,%ah
   16728:	0a 0e                	or     (%rsi),%cl
   1672a:	38 44 0e 30          	cmp    %al,0x30(%rsi,%rcx,1)
   1672e:	41 0e                	rex.B (bad) 
   16730:	28 42 0e             	sub    %al,0xe(%rdx)
   16733:	20 42 0e             	and    %al,0xe(%rdx)
   16736:	18 42 0e             	sbb    %al,0xe(%rdx)
   16739:	10 42 0e             	adc    %al,0xe(%rdx)
   1673c:	08 45 0b             	or     %al,0xb(%rbp)
   1673f:	51                   	push   %rcx
   16740:	0a 0e                	or     (%rsi),%cl
   16742:	38 41 0e             	cmp    %al,0xe(%rcx)
   16745:	30 41 0e             	xor    %al,0xe(%rcx)
   16748:	28 42 0e             	sub    %al,0xe(%rdx)
   1674b:	20 42 0e             	and    %al,0xe(%rdx)
   1674e:	18 42 0e             	sbb    %al,0xe(%rdx)
   16751:	10 42 0e             	adc    %al,0xe(%rdx)
   16754:	08 4d 0b             	or     %cl,0xb(%rbp)
   16757:	00 40 00             	add    %al,0x0(%rax)
   1675a:	00 00                	add    %al,(%rax)
   1675c:	64 24 00             	fs and $0x0,%al
   1675f:	00 50 a1             	add    %dl,-0x5f(%rax)
   16762:	ff                   	(bad)  
   16763:	ff f1                	push   %rcx
   16765:	00 00                	add    %al,(%rax)
   16767:	00 00                	add    %al,(%rax)
   16769:	46 0e                	rex.RX (bad) 
   1676b:	10 8e 02 42 0e 18    	adc    %cl,0x180e4202(%rsi)
   16771:	8d 03                	lea    (%rbx),%eax
   16773:	42 0e                	rex.X (bad) 
   16775:	20 8c 04 44 0e 28 86 	and    %cl,-0x79d7f1bc(%rsp,%rax,1)
   1677c:	05 41 0e 30 83       	add    $0x83300e41,%eax
   16781:	06                   	(bad)  
   16782:	44 0e                	rex.R (bad) 
   16784:	50                   	push   %rax
   16785:	02 cd                	add    %ch,%cl
   16787:	0a 0e                	or     (%rsi),%cl
   16789:	30 44 0e 28          	xor    %al,0x28(%rsi,%rcx,1)
   1678d:	41 0e                	rex.B (bad) 
   1678f:	20 42 0e             	and    %al,0xe(%rdx)
   16792:	18 42 0e             	sbb    %al,0xe(%rdx)
   16795:	10 42 0e             	adc    %al,0xe(%rdx)
   16798:	08 41 0b             	or     %al,0xb(%rcx)
   1679b:	00 10                	add    %dl,(%rax)
   1679d:	00 00                	add    %al,(%rax)
   1679f:	00 a8 24 00 00 0c    	add    %ch,0xc000024(%rax)
   167a5:	a2 ff ff 09 00 00 00 	movabs %al,0x9ffff
   167ac:	00 00 
   167ae:	00 00                	add    %al,(%rax)
   167b0:	20 00                	and    %al,(%rax)
   167b2:	00 00                	add    %al,(%rax)
   167b4:	bc 24 00 00 08       	mov    $0x8000024,%esp
   167b9:	a2 ff ff 4f 00 00 00 	movabs %al,0x45000000004fffff
   167c0:	00 45 
   167c2:	0e                   	(bad)  
   167c3:	10 83 02 6a 0a 0e    	adc    %al,0xe0a6a02(%rbx)
   167c9:	08 41 0b             	or     %al,0xb(%rcx)
   167cc:	51                   	push   %rcx
   167cd:	0a 0e                	or     (%rsi),%cl
   167cf:	08 47 0b             	or     %al,0xb(%rdi)
   167d2:	00 00                	add    %al,(%rax)
   167d4:	20 00                	and    %al,(%rax)
   167d6:	00 00                	add    %al,(%rax)
   167d8:	e0 24                	loopne 167fe <__GNU_EH_FRAME_HDR+0x2d3e>
   167da:	00 00                	add    %al,(%rax)
   167dc:	34 a2                	xor    $0xa2,%al
   167de:	ff                   	(bad)  
   167df:	ff 47 00             	incl   0x0(%rdi)
   167e2:	00 00                	add    %al,(%rax)
   167e4:	00 45 0e             	add    %al,0xe(%rbp)
   167e7:	10 83 02 66 0a 0e    	adc    %al,0xe0a6602(%rbx)
   167ed:	08 45 0b             	or     %al,0xb(%rbp)
   167f0:	4d 0a 0e             	rex.WRB or (%r14),%r9b
   167f3:	08 43 0b             	or     %al,0xb(%rbx)
   167f6:	00 00                	add    %al,(%rax)
   167f8:	10 00                	adc    %al,(%rax)
   167fa:	00 00                	add    %al,(%rax)
   167fc:	04 25                	add    $0x25,%al
   167fe:	00 00                	add    %al,(%rax)
   16800:	10 b8 fe ff 13 00    	adc    %bh,0x13fffe(%rax)
   16806:	00 00                	add    %al,(%rax)
   16808:	00 00                	add    %al,(%rax)
   1680a:	00 00                	add    %al,(%rax)
   1680c:	10 00                	adc    %al,(%rax)
   1680e:	00 00                	add    %al,(%rax)
   16810:	18 25 00 00 4c a2    	sbb    %ah,-0x5db40000(%rip)        # ffffffffa24d6816 <_end+0xffffffffa24ab806>
   16816:	ff                   	(bad)  
   16817:	ff 07                	incl   (%rdi)
   16819:	00 00                	add    %al,(%rax)
   1681b:	00 00                	add    %al,(%rax)
   1681d:	00 00                	add    %al,(%rax)
   1681f:	00 14 00             	add    %dl,(%rax,%rax,1)
   16822:	00 00                	add    %al,(%rax)
   16824:	2c 25                	sub    $0x25,%al
   16826:	00 00                	add    %al,(%rax)
   16828:	48 a2 ff ff 09 00 00 	rex.W movabs %al,0x9ffff
   1682f:	00 00 00 
   16832:	00 00                	add    %al,(%rax)
   16834:	00 00                	add    %al,(%rax)
   16836:	00 00                	add    %al,(%rax)
   16838:	14 00                	adc    $0x0,%al
   1683a:	00 00                	add    %al,(%rax)
   1683c:	44 25 00 00 40 a2    	rex.R and $0xa2400000,%eax
   16842:	ff                   	(bad)  
   16843:	ff                   	(bad)  
   16844:	7a 00                	jp     16846 <__GNU_EH_FRAME_HDR+0x2d86>
	...
   1684e:	00 00                	add    %al,(%rax)
   16850:	18 00                	sbb    %al,(%rax)
   16852:	00 00                	add    %al,(%rax)
   16854:	5c                   	pop    %rsp
   16855:	25 00 00 a8 a2       	and    $0xa2a80000,%eax
   1685a:	ff                   	(bad)  
   1685b:	ff 0f                	decl   (%rdi)
   1685d:	00 00                	add    %al,(%rax)
   1685f:	00 00                	add    %al,(%rax)
   16861:	45 0e                	rex.RB (bad) 
   16863:	10 41 0e             	adc    %al,0xe(%rcx)
   16866:	08 44 0e 10          	or     %al,0x10(%rsi,%rcx,1)
   1686a:	00 00                	add    %al,(%rax)
   1686c:	18 00                	sbb    %al,(%rax)
   1686e:	00 00                	add    %al,(%rax)
   16870:	78 25                	js     16897 <__GNU_EH_FRAME_HDR+0x2dd7>
   16872:	00 00                	add    %al,(%rax)
   16874:	9c                   	pushf  
   16875:	a2 ff ff 0f 00 00 00 	movabs %al,0x45000000000fffff
   1687c:	00 45 
   1687e:	0e                   	(bad)  
   1687f:	10 41 0e             	adc    %al,0xe(%rcx)
   16882:	08 44 0e 10          	or     %al,0x10(%rsi,%rcx,1)
   16886:	00 00                	add    %al,(%rax)
   16888:	14 00                	adc    $0x0,%al
   1688a:	00 00                	add    %al,(%rax)
   1688c:	94                   	xchg   %eax,%esp
   1688d:	25 00 00 90 a2       	and    $0xa2900000,%eax
   16892:	ff                   	(bad)  
   16893:	ff 14 00             	call   *(%rax,%rax,1)
   16896:	00 00                	add    %al,(%rax)
   16898:	00 4f 0e             	add    %cl,0xe(%rdi)
   1689b:	10 00                	adc    %al,(%rax)
   1689d:	00 00                	add    %al,(%rax)
   1689f:	00 20                	add    %ah,(%rax)
   168a1:	00 00                	add    %al,(%rax)
   168a3:	00 ac 25 00 00 98 a2 	add    %ch,-0x5d680000(%rbp,%riz,1)
   168aa:	ff                   	(bad)  
   168ab:	ff 46 00             	incl   0x0(%rsi)
   168ae:	00 00                	add    %al,(%rax)
   168b0:	00 4a 0e             	add    %cl,0xe(%rdx)
   168b3:	10 83 02 6a 0a 0e    	adc    %al,0xe0a6a02(%rbx)
   168b9:	08 44 0b 46          	or     %al,0x46(%rbx,%rcx,1)
   168bd:	0e                   	(bad)  
   168be:	08 42 c3             	or     %al,-0x3d(%rdx)
   168c1:	00 00                	add    %al,(%rax)
   168c3:	00 40 00             	add    %al,0x0(%rax)
   168c6:	00 00                	add    %al,(%rax)
   168c8:	d0 25 00 00 c4 a2    	shlb   -0x5d3c0000(%rip)        # ffffffffa2c568ce <_end+0xffffffffa2c2b8be>
   168ce:	ff                   	(bad)  
   168cf:	ff                   	(bad)  
   168d0:	7e 00                	jle    168d2 <__GNU_EH_FRAME_HDR+0x2e12>
   168d2:	00 00                	add    %al,(%rax)
   168d4:	00 4a 0e             	add    %cl,0xe(%rdx)
   168d7:	10 86 02 46 0e 18    	adc    %al,0x180e4602(%rsi)
   168dd:	83 03 47             	addl   $0x47,(%rbx)
   168e0:	0e                   	(bad)  
   168e1:	20 6f 0a             	and    %ch,0xa(%rdi)
   168e4:	0e                   	(bad)  
   168e5:	18 43 0e             	sbb    %al,0xe(%rbx)
   168e8:	10 41 0e             	adc    %al,0xe(%rcx)
   168eb:	08 46 0b             	or     %al,0xb(%rsi)
   168ee:	44 0a 0e             	or     (%rsi),%r9b
   168f1:	18 46 0e             	sbb    %al,0xe(%rsi)
   168f4:	10 41 0e             	adc    %al,0xe(%rcx)
   168f7:	08 45 0b             	or     %al,0xb(%rbp)
   168fa:	4c 0e                	rex.WR (bad) 
   168fc:	18 46 0e             	sbb    %al,0xe(%rsi)
   168ff:	10 41 0e             	adc    %al,0xe(%rcx)
   16902:	08 45 c3             	or     %al,-0x3d(%rbp)
   16905:	c6 00 00             	movb   $0x0,(%rax)
   16908:	44 00 00             	add    %r8b,(%rax)
   1690b:	00 14 26             	add    %dl,(%rsi,%riz,1)
   1690e:	00 00                	add    %al,(%rax)
   16910:	00 a3 ff ff 8e 00    	add    %ah,0x8effff(%rbx)
   16916:	00 00                	add    %al,(%rax)
   16918:	00 4b 0e             	add    %cl,0xe(%rbx)
   1691b:	10 8c 02 46 0e 18 86 	adc    %cl,-0x79e7f1ba(%rdx,%rax,1)
   16922:	03 41 0e             	add    0xe(%rcx),%eax
   16925:	20 83 04 7f 0a 0e    	and    %al,0xe0a7f04(%rbx)
   1692b:	18 43 0e             	sbb    %al,0xe(%rbx)
   1692e:	10 42 0e             	adc    %al,0xe(%rdx)
   16931:	08 4a 0b             	or     %cl,0xb(%rdx)
   16934:	41 0a 0e             	or     (%r14),%cl
   16937:	18 46 0e             	sbb    %al,0xe(%rsi)
   1693a:	10 42 0e             	adc    %al,0xe(%rdx)
   1693d:	08 47 0b             	or     %al,0xb(%rdi)
   16940:	49 0e                	rex.WB (bad) 
   16942:	18 46 0e             	sbb    %al,0xe(%rsi)
   16945:	10 42 0e             	adc    %al,0xe(%rdx)
   16948:	08 47 c3             	or     %al,-0x3d(%rdi)
   1694b:	c6                   	(bad)  
   1694c:	cc                   	int3   
   1694d:	00 00                	add    %al,(%rax)
   1694f:	00 4c 00 00          	add    %cl,0x0(%rax,%rax,1)
   16953:	00 5c 26 00          	add    %bl,0x0(%rsi,%riz,1)
   16957:	00 48 a3             	add    %cl,-0x5d(%rax)
   1695a:	ff                   	(bad)  
   1695b:	ff 9e 00 00 00 00    	lcall  *0x0(%rsi)
   16961:	4f 0e                	rex.WRXB (bad) 
   16963:	10 8c 02 46 0e 18 86 	adc    %cl,-0x79e7f1ba(%rdx,%rax,1)
   1696a:	03 41 0e             	add    0xe(%rcx),%eax
   1696d:	20 83 04 7d 0a 0e    	and    %al,0xe0a7d04(%rbx)
   16973:	18 43 0e             	sbb    %al,0xe(%rbx)
   16976:	10 42 0e             	adc    %al,0xe(%rdx)
   16979:	08 48 0b             	or     %cl,0xb(%rax)
   1697c:	49 0a 0e             	rex.WB or (%r14),%cl
   1697f:	18 46 0e             	sbb    %al,0xe(%rsi)
   16982:	10 42 0e             	adc    %al,0xe(%rdx)
   16985:	08 47 0b             	or     %al,0xb(%rdi)
   16988:	41 0a 0e             	or     (%r14),%cl
   1698b:	18 46 0e             	sbb    %al,0xe(%rsi)
   1698e:	10 42 0e             	adc    %al,0xe(%rdx)
   16991:	08 47 0b             	or     %al,0xb(%rdi)
   16994:	50                   	push   %rax
   16995:	0e                   	(bad)  
   16996:	08 c3                	or     %al,%bl
   16998:	c6                   	(bad)  
   16999:	cc                   	int3   
   1699a:	00 00                	add    %al,(%rax)
   1699c:	00 00                	add    %al,(%rax)
   1699e:	00 00                	add    %al,(%rax)
   169a0:	28 00                	sub    %al,(%rax)
   169a2:	00 00                	add    %al,(%rax)
   169a4:	ac                   	lods   %ds:(%rsi),%al
   169a5:	26 00 00             	es add %al,(%rax)
   169a8:	98                   	cwtl   
   169a9:	a3 ff ff 72 00 00 00 	movabs %eax,0x4a0000000072ffff
   169b0:	00 4a 
   169b2:	0e                   	(bad)  
   169b3:	10 83 02 60 0a 0e    	adc    %al,0xe0a6002(%rbx)
   169b9:	08 46 0b             	or     %al,0xb(%rsi)
   169bc:	60                   	(bad)  
   169bd:	0e                   	(bad)  
   169be:	08 48 c3             	or     %cl,-0x3d(%rax)
   169c1:	48 0e                	rex.W (bad) 
   169c3:	10 83 02 51 0e 08    	adc    %al,0x80e5102(%rbx)
   169c9:	00 00                	add    %al,(%rax)
   169cb:	00 28                	add    %ch,(%rax)
   169cd:	00 00                	add    %al,(%rax)
   169cf:	00 d8                	add    %bl,%al
   169d1:	26 00 00             	es add %al,(%rax)
   169d4:	ec                   	in     (%dx),%al
   169d5:	a3 ff ff 72 00 00 00 	movabs %eax,0x4a0000000072ffff
   169dc:	00 4a 
   169de:	0e                   	(bad)  
   169df:	10 83 02 60 0a 0e    	adc    %al,0xe0a6002(%rbx)
   169e5:	08 46 0b             	or     %al,0xb(%rsi)
   169e8:	60                   	(bad)  
   169e9:	0e                   	(bad)  
   169ea:	08 48 c3             	or     %cl,-0x3d(%rax)
   169ed:	48 0e                	rex.W (bad) 
   169ef:	10 83 02 51 0e 08    	adc    %al,0x80e5102(%rbx)
   169f5:	00 00                	add    %al,(%rax)
   169f7:	00 14 00             	add    %dl,(%rax,%rax,1)
   169fa:	00 00                	add    %al,(%rax)
   169fc:	04 27                	add    $0x27,%al
   169fe:	00 00                	add    %al,(%rax)
   16a00:	70 a5                	jo     169a7 <__GNU_EH_FRAME_HDR+0x2ee7>
   16a02:	ff                   	(bad)  
   16a03:	ff 58 00             	lcall  *0x0(%rax)
	...
   16a0e:	00 00                	add    %al,(%rax)
   16a10:	14 00                	adc    $0x0,%al
   16a12:	00 00                	add    %al,(%rax)
   16a14:	1c 27                	sbb    $0x27,%al
   16a16:	00 00                	add    %al,(%rax)
   16a18:	b8 a5 ff ff 09       	mov    $0x9ffffa5,%eax
	...
   16a25:	00 00                	add    %al,(%rax)
   16a27:	00 10                	add    %dl,(%rax)
   16a29:	00 00                	add    %al,(%rax)
   16a2b:	00 34 27             	add    %dh,(%rdi,%riz,1)
   16a2e:	00 00                	add    %al,(%rax)
   16a30:	00 b6 fe ff 13 00    	add    %dh,0x13fffe(%rsi)
   16a36:	00 00                	add    %al,(%rax)
   16a38:	00 00                	add    %al,(%rax)
   16a3a:	00 00                	add    %al,(%rax)
   16a3c:	10 00                	adc    %al,(%rax)
   16a3e:	00 00                	add    %al,(%rax)
   16a40:	48 27                	rex.W (bad) 
   16a42:	00 00                	add    %al,(%rax)
   16a44:	9c                   	pushf  
   16a45:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
   16a46:	ff                   	(bad)  
   16a47:	ff 09                	decl   (%rcx)
   16a49:	00 00                	add    %al,(%rax)
   16a4b:	00 00                	add    %al,(%rax)
   16a4d:	00 00                	add    %al,(%rax)
   16a4f:	00 1c 00             	add    %bl,(%rax,%rax,1)
   16a52:	00 00                	add    %al,(%rax)
   16a54:	5c                   	pop    %rsp
   16a55:	27                   	(bad)  
   16a56:	00 00                	add    %al,(%rax)
   16a58:	98                   	cwtl   
   16a59:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
   16a5a:	ff                   	(bad)  
   16a5b:	ff 45 02             	incl   0x2(%rbp)
   16a5e:	00 00                	add    %al,(%rax)
   16a60:	00 6a 0e             	add    %ch,0xe(%rdx)
   16a63:	10 03                	adc    %al,(%rbx)
   16a65:	07                   	(bad)  
   16a66:	02 0e                	add    (%rsi),%cl
   16a68:	08 00                	or     %al,(%rax)
   16a6a:	00 00                	add    %al,(%rax)
   16a6c:	00 00                	add    %al,(%rax)
   16a6e:	00 00                	add    %al,(%rax)
   16a70:	10 00                	adc    %al,(%rax)
   16a72:	00 00                	add    %al,(%rax)
   16a74:	7c 27                	jl     16a9d <__GNU_EH_FRAME_HDR+0x2fdd>
   16a76:	00 00                	add    %al,(%rax)
   16a78:	d8 b5 fe ff 13 00    	fdivs  0x13fffe(%rbp)
   16a7e:	00 00                	add    %al,(%rax)
   16a80:	00 00                	add    %al,(%rax)
   16a82:	00 00                	add    %al,(%rax)
   16a84:	2c 00                	sub    $0x0,%al
   16a86:	00 00                	add    %al,(%rax)
   16a88:	90                   	nop
   16a89:	27                   	(bad)  
   16a8a:	00 00                	add    %al,(%rax)
   16a8c:	b4 a8                	mov    $0xa8,%ah
   16a8e:	ff                   	(bad)  
   16a8f:	ff 8c 01 00 00 00 45 	decl   0x45000000(%rcx,%rax,1)
   16a96:	0e                   	(bad)  
   16a97:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
   16a9d:	42 8f 03             	rex.X pop (%rbx)
   16aa0:	49 8e 04 8d 05 46 8c 	rex.WB mov 0x68c4605(,%rcx,4),%es
   16aa7:	06 
   16aa8:	83 07 03             	addl   $0x3,(%rdi)
   16aab:	6d                   	insl   (%dx),%es:(%rdi)
   16aac:	01 0a                	add    %ecx,(%rdx)
   16aae:	0c 07                	or     $0x7,%al
   16ab0:	08 41 0b             	or     %al,0xb(%rcx)
   16ab3:	00 34 00             	add    %dh,(%rax,%rax,1)
   16ab6:	00 00                	add    %al,(%rax)
   16ab8:	c0 27 00             	shlb   $0x0,(%rdi)
   16abb:	00 14 aa             	add    %dl,(%rdx,%rbp,4)
   16abe:	ff                   	(bad)  
   16abf:	ff 66 00             	jmp    *0x0(%rsi)
   16ac2:	00 00                	add    %al,(%rax)
   16ac4:	00 45 0e             	add    %al,0xe(%rbp)
   16ac7:	10 86 02 41 0e 18    	adc    %al,0x180e4102(%rsi)
   16acd:	83 03 4b             	addl   $0x4b,(%rbx)
   16ad0:	0e                   	(bad)  
   16ad1:	20 4e 0a             	and    %cl,0xa(%rsi)
   16ad4:	0e                   	(bad)  
   16ad5:	18 44 0e 10          	sbb    %al,0x10(%rsi,%rcx,1)
   16ad9:	41 0e                	rex.B (bad) 
   16adb:	08 44 0b 65          	or     %al,0x65(%rbx,%rcx,1)
   16adf:	0a 0e                	or     (%rsi),%cl
   16ae1:	18 44 0e 10          	sbb    %al,0x10(%rsi,%rcx,1)
   16ae5:	41 0e                	rex.B (bad) 
   16ae7:	08 46 0b             	or     %al,0xb(%rsi)
	...

Disassembly of section .fini_array:

0000000000017da0 <.fini_array>:
   17da0:	00 20                	add    %ah,(%rax)
   17da2:	00 00                	add    %al,(%rax)
   17da4:	00 00                	add    %al,(%rax)
   17da6:	00 00                	add    %al,(%rax)
   17da8:	10 20                	adc    %ah,(%rax)
   17daa:	00 00                	add    %al,(%rax)
   17dac:	00 00                	add    %al,(%rax)
   17dae:	00 00                	add    %al,(%rax)
   17db0:	30 20                	xor    %ah,(%rax)
   17db2:	00 00                	add    %al,(%rax)
   17db4:	00 00                	add    %al,(%rax)
   17db6:	00 00                	add    %al,(%rax)
   17db8:	50                   	push   %rax
   17db9:	20 00                	and    %al,(%rax)
   17dbb:	00 00                	add    %al,(%rax)
   17dbd:	00 00                	add    %al,(%rax)
	...

Disassembly of section .data.rel.ro:

0000000000017dc0 <g_ecall_table>:
   17dc0:	04 00                	add    $0x0,%al
   17dc2:	00 00                	add    %al,(%rax)
   17dc4:	00 00                	add    %al,(%rax)
   17dc6:	00 00                	add    %al,(%rax)
   17dc8:	0e                   	(bad)  
   17dc9:	41 00 00             	add    %al,(%r8)
	...
   17dd8:	fc                   	cld    
   17dd9:	41 00 00             	add    %al,(%r8)
	...
   17de8:	f5                   	cmc    
   17de9:	40 00 00             	rex add %al,(%rax)
	...
   17df8:	06                   	(bad)  
   17df9:	40 00 00             	rex add %al,(%rax)
	...

0000000000017e08 <__intel_security_cookie>:
	...

0000000000017e10 <g_cpu_core_num>:
   17e10:	00 00                	add    %al,(%rax)
	...

0000000000017e14 <g_aexnotify_supported>:
   17e14:	00 00                	add    %al,(%rax)
	...

0000000000017e18 <g_enclave_size>:
	...

0000000000017e20 <g_enclave_base>:
	...

0000000000017e28 <g_sdk_version>:
   17e28:	00 00                	add    %al,(%rax)
	...

0000000000017e2c <EDMM_supported>:
   17e2c:	00 00                	add    %al,(%rax)
	...

0000000000017e30 <g_cpu_feature_indicator>:
	...

0000000000017e38 <heap_min_size>:
	...

0000000000017e40 <is_edmm_supported>:
	...

0000000000017e48 <heap_size>:
	...

0000000000017e50 <heap_base>:
	...

0000000000017e58 <__memset_vp>:
   17e58:	b0 09                	mov    $0x9,%al
   17e5a:	01 00                	add    %eax,(%rax)
   17e5c:	00 00                	add    %al,(%rax)
	...

0000000000017e60 <rsrv_mem_min_size>:
	...

0000000000017e68 <rsrv_mem_size>:
	...

0000000000017e70 <rsrv_mem_base>:
	...

Disassembly of section .dynamic:

0000000000017e78 <_DYNAMIC>:
   17e78:	1a 00                	sbb    (%rax),%al
   17e7a:	00 00                	add    %al,(%rax)
   17e7c:	00 00                	add    %al,(%rax)
   17e7e:	00 00                	add    %al,(%rax)
   17e80:	a0 7d 01 00 00 00 00 	movabs 0x1c0000000000017d,%al
   17e87:	00 1c 
   17e89:	00 00                	add    %al,(%rax)
   17e8b:	00 00                	add    %al,(%rax)
   17e8d:	00 00                	add    %al,(%rax)
   17e8f:	00 20                	add    %ah,(%rax)
   17e91:	00 00                	add    %al,(%rax)
   17e93:	00 00                	add    %al,(%rax)
   17e95:	00 00                	add    %al,(%rax)
   17e97:	00 f5                	add    %dh,%ch
   17e99:	fe                   	(bad)  
   17e9a:	ff 6f 00             	ljmp   *0x0(%rdi)
   17e9d:	00 00                	add    %al,(%rax)
   17e9f:	00 90 03 00 00 00    	add    %dl,0x3(%rax)
   17ea5:	00 00                	add    %al,(%rax)
   17ea7:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 17ead <_DYNAMIC+0x35>
   17ead:	00 00                	add    %al,(%rax)
   17eaf:	00 08                	add    %cl,(%rax)
   17eb1:	08 00                	or     %al,(%rax)
   17eb3:	00 00                	add    %al,(%rax)
   17eb5:	00 00                	add    %al,(%rax)
   17eb7:	00 06                	add    %al,(%rsi)
   17eb9:	00 00                	add    %al,(%rax)
   17ebb:	00 00                	add    %al,(%rax)
   17ebd:	00 00                	add    %al,(%rax)
   17ebf:	00 90 04 00 00 00    	add    %dl,0x4(%rax)
   17ec5:	00 00                	add    %al,(%rax)
   17ec7:	00 0a                	add    %cl,(%rdx)
   17ec9:	00 00                	add    %al,(%rax)
   17ecb:	00 00                	add    %al,(%rax)
   17ecd:	00 00                	add    %al,(%rax)
   17ecf:	00 ec                	add    %ch,%ah
   17ed1:	01 00                	add    %eax,(%rax)
   17ed3:	00 00                	add    %al,(%rax)
   17ed5:	00 00                	add    %al,(%rax)
   17ed7:	00 0b                	add    %cl,(%rbx)
   17ed9:	00 00                	add    %al,(%rax)
   17edb:	00 00                	add    %al,(%rax)
   17edd:	00 00                	add    %al,(%rax)
   17edf:	00 18                	add    %bl,(%rax)
   17ee1:	00 00                	add    %al,(%rax)
   17ee3:	00 00                	add    %al,(%rax)
   17ee5:	00 00                	add    %al,(%rax)
   17ee7:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 17eed <_DYNAMIC+0x75>
	...
   17ef5:	00 00                	add    %al,(%rax)
   17ef7:	00 03                	add    %al,(%rbx)
   17ef9:	00 00                	add    %al,(%rax)
   17efb:	00 00                	add    %al,(%rax)
   17efd:	00 00                	add    %al,(%rax)
   17eff:	00 b8 7f 01 00 00    	add    %bh,0x17f(%rax)
   17f05:	00 00                	add    %al,(%rax)
   17f07:	00 07                	add    %al,(%rdi)
   17f09:	00 00                	add    %al,(%rax)
   17f0b:	00 00                	add    %al,(%rax)
   17f0d:	00 00                	add    %al,(%rax)
   17f0f:	00 f8                	add    %bh,%al
   17f11:	09 00                	or     %eax,(%rax)
   17f13:	00 00                	add    %al,(%rax)
   17f15:	00 00                	add    %al,(%rax)
   17f17:	00 08                	add    %cl,(%rax)
   17f19:	00 00                	add    %al,(%rax)
   17f1b:	00 00                	add    %al,(%rax)
   17f1d:	00 00                	add    %al,(%rax)
   17f1f:	00 10                	add    %dl,(%rax)
   17f21:	02 00                	add    (%rax),%al
   17f23:	00 00                	add    %al,(%rax)
   17f25:	00 00                	add    %al,(%rax)
   17f27:	00 09                	add    %cl,(%rcx)
   17f29:	00 00                	add    %al,(%rax)
   17f2b:	00 00                	add    %al,(%rax)
   17f2d:	00 00                	add    %al,(%rax)
   17f2f:	00 18                	add    %bl,(%rax)
   17f31:	00 00                	add    %al,(%rax)
   17f33:	00 00                	add    %al,(%rax)
   17f35:	00 00                	add    %al,(%rax)
   17f37:	00 1e                	add    %bl,(%rsi)
   17f39:	00 00                	add    %al,(%rax)
   17f3b:	00 00                	add    %al,(%rax)
   17f3d:	00 00                	add    %al,(%rax)
   17f3f:	00 08                	add    %cl,(%rax)
   17f41:	00 00                	add    %al,(%rax)
   17f43:	00 00                	add    %al,(%rax)
   17f45:	00 00                	add    %al,(%rax)
   17f47:	00 fb                	add    %bh,%bl
   17f49:	ff                   	(bad)  
   17f4a:	ff 6f 00             	ljmp   *0x0(%rdi)
   17f4d:	00 00                	add    %al,(%rax)
   17f4f:	00 01                	add    %al,(%rcx)
   17f51:	00 00                	add    %al,(%rax)
   17f53:	08 00                	or     %al,(%rax)
   17f55:	00 00                	add    %al,(%rax)
   17f57:	00 f9                	add    %bh,%cl
   17f59:	ff                   	(bad)  
   17f5a:	ff 6f 00             	ljmp   *0x0(%rdi)
   17f5d:	00 00                	add    %al,(%rax)
   17f5f:	00 14 00             	add    %dl,(%rax,%rax,1)
	...

Disassembly of section .got:

0000000000017fb8 <_GLOBAL_OFFSET_TABLE_>:
   17fb8:	78 7e                	js     18038 <extended+0x18>
   17fba:	01 00                	add    %eax,(%rax)
	...
   17fd8:	b3 24                	mov    $0x24,%bl
   17fda:	01 00                	add    %eax,(%rax)
   17fdc:	00 00                	add    %al,(%rax)
   17fde:	00 00                	add    %al,(%rax)
   17fe0:	95                   	xchg   %eax,%ebp
   17fe1:	24 01                	and    $0x1,%al
   17fe3:	00 00                	add    %al,(%rax)
   17fe5:	00 00                	add    %al,(%rax)
   17fe7:	00 00                	add    %al,(%rax)
   17fe9:	90                   	nop
   17fea:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .data:

0000000000018000 <pincode>:
   18000:	d2 04 00             	rolb   %cl,(%rax,%rax,1)
   18003:	00 00                	add    %al,(%rax)
   18005:	00 00                	add    %al,(%rax)
	...

0000000000018008 <secret>:
   18008:	1c 30                	sbb    $0x30,%al
   1800a:	01 00                	add    %eax,(%rax)
   1800c:	00 00                	add    %al,(%rax)
	...

0000000000018010 <extension_2op_table>:
   18010:	5a                   	pop    %rdx
   18011:	05 00 a9 08 00       	add    $0x8a900,%eax
   18016:	5a                   	pop    %rdx
   18017:	50                   	push   %rax
   18018:	96                   	xchg   %eax,%esi
   18019:	40 55                	rex push %rbp
   1801b:	00 00                	add    %al,(%rax)
   1801d:	00 00                	add    %al,(%rax)
	...

0000000000018020 <extended>:
   18020:	c1 d8 90             	rcr    $0x90,%eax
   18023:	90                   	nop
   18024:	80 80 80 80 80 80 80 	addb   $0x80,-0x7f7f7f80(%rax)
   1802b:	80 80 90 80 93 94 a4 	addb   $0xa4,-0x6b6c7f70(%rax)
   18032:	93                   	xchg   %eax,%ebx
   18033:	a3 94 94 93 a3 e8 82 	movabs %eax,0x645482e8a3939494
   1803a:	54 64 
   1803c:	82                   	(bad)  
   1803d:	82                   	(bad)  
   1803e:	82                   	(bad)  
   1803f:	82                   	(bad)  
   18040:	80 80 80 80 80 80 80 	addb   $0x80,-0x7f7f7f80(%rax)
   18047:	80 94 a4 93 a4 93 93 	adcb   $0x92,-0x6c6c5b6d(%rsp,%riz,4)
   1804e:	92 
   1804f:	92                   	xchg   %eax,%edx
   18050:	80 80 80 80 80 80 80 	addb   $0x80,-0x7f7f7f80(%rax)
   18057:	80 80 80 80 80 80 80 	addb   $0x80,-0x7f7f7f80(%rax)
   1805e:	80 80 92 92 92 92 92 	addb   $0x92,-0x6d6d6d6e(%rax)
   18065:	92                   	xchg   %eax,%edx
   18066:	92                   	xchg   %eax,%edx
   18067:	92                   	xchg   %eax,%edx
   18068:	92                   	xchg   %eax,%edx
   18069:	92                   	xchg   %eax,%edx
   1806a:	92                   	xchg   %eax,%edx
   1806b:	92                   	xchg   %eax,%edx
   1806c:	92                   	xchg   %eax,%edx
   1806d:	92                   	xchg   %eax,%edx
   1806e:	92                   	xchg   %eax,%edx
   1806f:	92                   	xchg   %eax,%edx
   18070:	80 94 94 94 94 94 94 	adcb   $0x94,-0x6b6b6b6c(%rsp,%rdx,4)
   18077:	94 
   18078:	94                   	xchg   %eax,%esp
   18079:	94                   	xchg   %eax,%esp
   1807a:	93                   	xchg   %eax,%ebx
   1807b:	94                   	xchg   %eax,%esp
   1807c:	94                   	xchg   %eax,%esp
   1807d:	94                   	xchg   %eax,%esp
   1807e:	94                   	xchg   %eax,%esp
   1807f:	94                   	xchg   %eax,%esp
   18080:	92                   	xchg   %eax,%edx
   18081:	92                   	xchg   %eax,%edx
   18082:	92                   	xchg   %eax,%edx
   18083:	93                   	xchg   %eax,%ebx
   18084:	93                   	xchg   %eax,%ebx
   18085:	93                   	xchg   %eax,%ebx
   18086:	93                   	xchg   %eax,%ebx
   18087:	93                   	xchg   %eax,%ebx
   18088:	93                   	xchg   %eax,%ebx
   18089:	93                   	xchg   %eax,%ebx
   1808a:	93                   	xchg   %eax,%ebx
   1808b:	93                   	xchg   %eax,%ebx
   1808c:	94                   	xchg   %eax,%esp
   1808d:	94                   	xchg   %eax,%esp
   1808e:	92                   	xchg   %eax,%edx
   1808f:	93                   	xchg   %eax,%ebx
   18090:	94                   	xchg   %eax,%esp
   18091:	80 80 80 93 93 93 80 	addb   $0x80,-0x6c6c6c80(%rax)
   18098:	80 80 40 80 94 94 42 	addb   $0x42,-0x6b6b7fc0(%rax)
   1809f:	a3 80 80 80 80 80 80 	movabs %eax,0x8080808080808080
   180a6:	80 80 
   180a8:	80 80 80 80 80 80 80 	addb   $0x80,-0x7f7f7f80(%rax)
   180af:	80 a0 a0 a0 a0 a0 a0 	andb   $0xa0,-0x5f5f5f60(%rax)
   180b6:	a0 a0 a0 a0 a0 a0 a0 	movabs 0xa0a0a0a0a0a0a0a0,%al
   180bd:	a0 a0 
   180bf:	a0 80 80 80 92 a2 a2 	movabs 0x8080a2a292808080,%al
   180c6:	80 80 
   180c8:	80 80 80 a2 a2 a2 e0 	addb   $0xe0,-0x5d5d5d80(%rax)
   180cf:	92                   	xchg   %eax,%edx
   180d0:	a0 a2 92 a2 92 92 90 	movabs 0x9291909292a292a2,%al
   180d7:	91 92 
   180d9:	80 ca a2             	or     $0xa2,%dl
   180dc:	92                   	xchg   %eax,%edx
   180dd:	92                   	xchg   %eax,%edx
   180de:	90                   	nop
   180df:	91                   	xchg   %eax,%ecx
   180e0:	a0 a2 94 a3 91 80 94 	movabs 0x80d3948091a394a2,%al
   180e7:	d3 80 
   180e9:	80 80 80 80 80 80 80 	addb   $0x80,-0x7f7f7f80(%rax)
   180f0:	94                   	xchg   %eax,%esp
   180f1:	93                   	xchg   %eax,%ebx
   180f2:	93                   	xchg   %eax,%ebx
   180f3:	93                   	xchg   %eax,%ebx
   180f4:	93                   	xchg   %eax,%ebx
   180f5:	93                   	xchg   %eax,%ebx
   180f6:	a3 80 93 93 93 93 93 	movabs %eax,0x9393939393939380
   180fd:	93 93 
   180ff:	93                   	xchg   %eax,%ebx
   18100:	93                   	xchg   %eax,%ebx
   18101:	93                   	xchg   %eax,%ebx
   18102:	93                   	xchg   %eax,%ebx
   18103:	93                   	xchg   %eax,%ebx
   18104:	93                   	xchg   %eax,%ebx
   18105:	93                   	xchg   %eax,%ebx
   18106:	94                   	xchg   %eax,%esp
   18107:	a3 93 93 93 93 93 93 	movabs %eax,0x9393939393939393
   1810e:	93 93 
   18110:	94                   	xchg   %eax,%esp
   18111:	93                   	xchg   %eax,%ebx
   18112:	93                   	xchg   %eax,%ebx
   18113:	93                   	xchg   %eax,%ebx
   18114:	93                   	xchg   %eax,%ebx
   18115:	93                   	xchg   %eax,%ebx
   18116:	93                   	xchg   %eax,%ebx
   18117:	80 93 93 93 93 93 93 	adcb   $0x93,-0x6c6c6c6d(%rbx)
   1811e:	93                   	xchg   %eax,%ebx
   1811f:	80       	sbbb   $0x90,-0x6f696b66(%rax)

0000000000018120 <standard>:
   18120:	98                   	cwtl   
   18121:	9a                   	(bad)  
   18122:	94                   	xchg   %eax,%esp
   18123:	96                   	xchg   %eax,%esi
   18124:	90                   	nop
   18125:	90                   	nop
   18126:	90                   	nop
   18127:	90                   	nop
   18128:	98                   	cwtl   
   18129:	9a                   	(bad)  
   1812a:	94                   	xchg   %eax,%esp
   1812b:	96                   	xchg   %eax,%esi
   1812c:	90                   	nop
   1812d:	90                   	nop
   1812e:	90                   	nop
   1812f:	80 98 9a 94 96 90 90 	sbbb   $0x90,-0x6f696b66(%rax)
   18136:	90                   	nop
   18137:	90                   	nop
   18138:	98                   	cwtl   
   18139:	9a                   	(bad)  
   1813a:	94                   	xchg   %eax,%esp
   1813b:	96                   	xchg   %eax,%esi
   1813c:	90                   	nop
   1813d:	90                   	nop
   1813e:	90                   	nop
   1813f:	90                   	nop
   18140:	98                   	cwtl   
   18141:	9a                   	(bad)  
   18142:	94                   	xchg   %eax,%esp
   18143:	96                   	xchg   %eax,%esi
   18144:	90                   	nop
   18145:	90                   	nop
   18146:	13 90 98 9a 94 96    	adc    -0x696b6568(%rax),%edx
   1814c:	90                   	nop
   1814d:	90                   	nop
   1814e:	10 90 98 9a 94 96    	adc    %dl,-0x696b6568(%rax)
   18154:	90                   	nop
   18155:	90                   	nop
   18156:	11 90 94 96 94 96    	adc    %edx,-0x696b696c(%rax)
   1815c:	90                   	nop
   1815d:	90                   	nop
   1815e:	12 90 40 40 40 40    	adc    0x40404040(%rax),%dl
   18164:	40                   	rex
   18165:	40                   	rex
   18166:	40                   	rex
   18167:	40                   	rex
   18168:	40                   	rex
   18169:	40                   	rex
   1816a:	40                   	rex
   1816b:	40                   	rex
   1816c:	40                   	rex
   1816d:	40                   	rex
   1816e:	40                   	rex
   1816f:	40 b0 b0             	rex mov $0xb0,%al
   18172:	b0 b0                	mov    $0xb0,%al
   18174:	b0 b0                	mov    $0xb0,%al
   18176:	b0 b0                	mov    $0xb0,%al
   18178:	90                   	nop
   18179:	90                   	nop
   1817a:	90                   	nop
   1817b:	90                   	nop
   1817c:	90                   	nop
   1817d:	90                   	nop
   1817e:	90                   	nop
   1817f:	90                   	nop
   18180:	b0 90                	mov    $0x90,%al
   18182:	90                   	nop
   18183:	95                   	xchg   %eax,%ebp
   18184:	14 15                	adc    $0x15,%al
   18186:	20 30                	and    %dh,(%rax)
   18188:	b0 96                	mov    $0x96,%al
   1818a:	b0 96                	mov    $0x96,%al
   1818c:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1818d:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1818e:	a0 a0 90 90 90 90 90 	movabs 0x90909090909090a0,%al
   18195:	90 90 
   18197:	90                   	nop
   18198:	90                   	nop
   18199:	90                   	nop
   1819a:	90                   	nop
   1819b:	90                   	nop
   1819c:	90                   	nop
   1819d:	90                   	nop
   1819e:	90                   	nop
   1819f:	90                   	nop
   181a0:	c4                   	(bad)  
   181a1:	c6 c4 c6             	mov    $0xc6,%ah
   181a4:	94                   	xchg   %eax,%esp
   181a5:	96                   	xchg   %eax,%esi
   181a6:	94                   	xchg   %eax,%esp
   181a7:	96                   	xchg   %eax,%esi
   181a8:	98                   	cwtl   
   181a9:	9a                   	(bad)  
   181aa:	94                   	xchg   %eax,%esp
   181ab:	96                   	xchg   %eax,%esi
   181ac:	99                   	cltd   
   181ad:	90                   	nop
   181ae:	95                   	xchg   %eax,%ebp
   181af:	9a                   	(bad)  
   181b0:	90                   	nop
   181b1:	90                   	nop
   181b2:	90                   	nop
   181b3:	90                   	nop
   181b4:	90                   	nop
   181b5:	90                   	nop
   181b6:	90                   	nop
   181b7:	90                   	nop
   181b8:	90                   	nop
   181b9:	90                   	nop
   181ba:	b0 90                	mov    $0x90,%al
   181bc:	b0 90                	mov    $0x90,%al
   181be:	90                   	nop
   181bf:	90                   	nop
   181c0:	90                   	nop
   181c1:	90                   	nop
   181c2:	90                   	nop
   181c3:	90                   	nop
   181c4:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   181c5:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   181c6:	a0 a0 90 90 a5 a5 a0 	movabs 0xa4a0a0a5a59090a0,%al
   181cd:	a0 a4 
   181cf:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
   181d0:	90                   	nop
   181d1:	90                   	nop
   181d2:	90                   	nop
   181d3:	90                   	nop
   181d4:	90                   	nop
   181d5:	90                   	nop
   181d6:	90                   	nop
   181d7:	90                   	nop
   181d8:	90                   	nop
   181d9:	90                   	nop
   181da:	90                   	nop
   181db:	90                   	nop
   181dc:	90                   	nop
   181dd:	90                   	nop
   181de:	90                   	nop
   181df:	90                   	nop
   181e0:	d8 da                	fcomp  %st(2)
   181e2:	90                   	nop
   181e3:	90                   	nop
   181e4:	90                   	nop
   181e5:	90                   	nop
   181e6:	f8                   	clc    
   181e7:	fa                   	cli    
   181e8:	90                   	nop
   181e9:	90                   	nop
   181ea:	90                   	nop
   181eb:	90                   	nop
   181ec:	90                   	nop
   181ed:	90                   	nop
   181ee:	90                   	nop
   181ef:	90                   	nop
   181f0:	d8 da                	fcomp  %st(2)
   181f2:	d8 da                	fcomp  %st(2)
   181f4:	90                   	nop
   181f5:	90                   	nop
   181f6:	90                   	nop
   181f7:	90                   	nop
   181f8:	90                   	nop
   181f9:	90                   	nop
   181fa:	90                   	nop
   181fb:	90                   	nop
   181fc:	90                   	nop
   181fd:	90                   	nop
   181fe:	90                   	nop
   181ff:	90                   	nop
   18200:	90                   	nop
   18201:	90                   	nop
   18202:	90                   	nop
   18203:	90                   	nop
   18204:	90                   	nop
   18205:	90                   	nop
   18206:	90                   	nop
   18207:	90                   	nop
   18208:	b0 90                	mov    $0x90,%al
   1820a:	90                   	nop
   1820b:	90                   	nop
   1820c:	90                   	nop
   1820d:	90                   	nop
   1820e:	90                   	nop
   1820f:	90                   	nop
   18210:	03 90 01 02 90 90    	add    -0x6f6ffdff(%rax),%edx
   18216:	e4 e6                	in     $0xe6,%al
   18218:	90                   	nop
   18219:	90                   	nop
   1821a:	90                   	nop
   1821b:	90                   	nop
   1821c:	90                   	nop
   1821d:	90                   	nop
   1821e:	f8                   	clc    
   1821f:	f6               	testb  $0x0,(%rcx)

0000000000018220 <_ZL16g_is_first_ecall>:
   18220:	01 00                	add    %eax,(%rax)
	...

0000000000018230 <sgx_trts_version>:
   18230:	53                   	push   %rbx
   18231:	47 58                	rex.RXB pop %r8
   18233:	5f                   	pop    %rdi
   18234:	54                   	push   %rsp
   18235:	52                   	push   %rdx
   18236:	54                   	push   %rsp
   18237:	53                   	push   %rbx
   18238:	5f                   	pop    %rdi
   18239:	56                   	push   %rsi
   1823a:	45 52                	rex.RB push %r10
   1823c:	53                   	push   %rbx
   1823d:	49                   	rex.WB
   1823e:	4f                   	rex.WRXB
   1823f:	4e 5f                	rex.WRX pop %rdi
   18241:	32 2e                	xor    (%rsi),%ch
   18243:	32 33                	xor    (%rbx),%dh
   18245:	2e 31 30             	cs xor %esi,(%rax)
   18248:	30 2e                	xor    %ch,(%rsi)
   1824a:	32 00                	xor    (%rax),%al
   1824c:	00 00                	add    %al,(%rax)
	...

0000000000018250 <__dso_handle>:
   18250:	50                   	push   %rax
   18251:	82                   	(bad)  
   18252:	01 00                	add    %eax,(%rax)
	...

0000000000019000 <aex_notify_c3_cache>:
	...

000000000001a000 <g_user_ema_root>:
   1a000:	20 a0 01 00 00 00    	and    %ah,0x1(%rax)
	...

000000000001a020 <user_ema_guard>:
	...
   1a058:	20 a0 01 00 00 00    	and    %ah,0x1(%rax)
   1a05e:	00 00                	add    %al,(%rax)
   1a060:	20 a0 01 00 00 00    	and    %ah,0x1(%rax)
	...

000000000001a068 <g_rts_ema_root>:
   1a068:	80 a0 01 00 00 00 00 	andb   $0x0,0x1(%rax)
	...

000000000001a080 <rts_ema_guard>:
	...
   1a0b8:	80 a0 01 00 00 00 00 	andb   $0x0,0x1(%rax)
   1a0bf:	00 80 a0 01 00 00    	add    %al,0x1a0(%rax)
   1a0c5:	00 00                	add    %al,(%rax)
	...

000000000001a0c8 <reserve_size_increment>:
   1a0c8:	00 00                	add    %al,(%rax)
   1a0ca:	01 00                	add    %eax,(%rax)
   1a0cc:	00 00                	add    %al,(%rax)
	...

000000000001a0d0 <size_mask>:
   1a0d0:	f8                   	clc    
   1a0d1:	ff                   	(bad)  
   1a0d2:	ff                   	(bad)  
   1a0d3:	ff                   	(bad)  
   1a0d4:	ff                   	(bad)  
   1a0d5:	ff                   	(bad)  
   1a0d6:	ff                   	(bad)  
   1a0d7:	ff                 	decl   (%rax)

000000000001a0d8 <header_size>:
   1a0d8:	08 00                	or     %al,(%rax)
   1a0da:	00 00                	add    %al,(%rax)
   1a0dc:	00 00                	add    %al,(%rax)
	...

000000000001a0e0 <sgx_tstdc_version>:
   1a0e0:	53                   	push   %rbx
   1a0e1:	47 58                	rex.RXB pop %r8
   1a0e3:	5f                   	pop    %rdi
   1a0e4:	54                   	push   %rsp
   1a0e5:	53                   	push   %rbx
   1a0e6:	54                   	push   %rsp
   1a0e7:	44                   	rex.R
   1a0e8:	43 5f                	rex.XB pop %r15
   1a0ea:	56                   	push   %rsi
   1a0eb:	45 52                	rex.RB push %r10
   1a0ed:	53                   	push   %rbx
   1a0ee:	49                   	rex.WB
   1a0ef:	4f                   	rex.WRXB
   1a0f0:	4e 5f                	rex.WRX pop %rdi
   1a0f2:	32 2e                	xor    (%rsi),%ch
   1a0f4:	32 33                	xor    (%rbx),%dh
   1a0f6:	2e 31 30             	cs xor %esi,(%rax)
   1a0f9:	30 2e                	xor    %ch,(%rsi)
   1a0fb:	32 00                	xor    (%rax),%al
   1a0fd:	00 00                	add    %al,(%rax)
	...

000000000001a100 <sgx_tcrypto_version>:
   1a100:	53                   	push   %rbx
   1a101:	47 58                	rex.RXB pop %r8
   1a103:	5f                   	pop    %rdi
   1a104:	54                   	push   %rsp
   1a105:	43 52                	rex.XB push %r10
   1a107:	59                   	pop    %rcx
   1a108:	50                   	push   %rax
   1a109:	54                   	push   %rsp
   1a10a:	4f 5f                	rex.WRXB pop %r15
   1a10c:	56                   	push   %rsi
   1a10d:	45 52                	rex.RB push %r10
   1a10f:	53                   	push   %rbx
   1a110:	49                   	rex.WB
   1a111:	4f                   	rex.WRXB
   1a112:	4e 5f                	rex.WRX pop %rdi
   1a114:	32 2e                	xor    (%rsi),%ch
   1a116:	32 33                	xor    (%rbx),%dh
   1a118:	2e 31 30             	cs xor %esi,(%rax)
   1a11b:	30 2e                	xor    %ch,(%rsi)
   1a11d:	32 00                	xor    (%rax),%al
	...

000000000001a120 <sgx_tservice_version>:
   1a120:	53                   	push   %rbx
   1a121:	47 58                	rex.RXB pop %r8
   1a123:	5f                   	pop    %rdi
   1a124:	54                   	push   %rsp
   1a125:	53                   	push   %rbx
   1a126:	45 52                	rex.RB push %r10
   1a128:	56                   	push   %rsi
   1a129:	49                   	rex.WB
   1a12a:	43                   	rex.XB
   1a12b:	45 5f                	rex.RB pop %r15
   1a12d:	56                   	push   %rsi
   1a12e:	45 52                	rex.RB push %r10
   1a130:	53                   	push   %rbx
   1a131:	49                   	rex.WB
   1a132:	4f                   	rex.WRXB
   1a133:	4e 5f                	rex.WRX pop %rdi
   1a135:	32 2e                	xor    (%rsi),%ch
   1a137:	32 33                	xor    (%rbx),%dh
   1a139:	2e 31 30             	cs xor %esi,(%rax)
   1a13c:	30 2e                	xor    %ch,(%rsi)
   1a13e:	32 00                	xor    (%rax),%al

Disassembly of section .nipd:

000000000001a140 <g_enclave_state>:
   1a140:	00 00                	add    %al,(%rax)
	...

000000000001a144 <g_xsave_enabled>:
   1a144:	00 00                	add    %al,(%rax)
	...

Disassembly of section .bss:

000000000001a160 <msp>:
	...

000000000001a170 <g_uninit_flag>:
   1a170:	00 00                	add    %al,(%rax)
	...

000000000001a174 <_ZL10g_ife_lock>:
   1a174:	00 00                	add    %al,(%rax)
	...

000000000001a178 <_ZL12g_tcs_cookie>:
	...

000000000001a180 <_ZL10g_tcs_node>:
	...

000000000001a188 <g_mm_pfhandler>:
	...

000000000001a190 <_ZL12g_veh_cookie>:
	...

000000000001a198 <_ZL14g_handler_lock>:
	...

000000000001a1a0 <_ZL12g_first_node>:
	...

000000000001a1a8 <g_exit_function_cookie>:
	...

000000000001a1b0 <g_exit_function_lock>:
	...

000000000001a1b8 <g_exit_function>:
	...

000000000001a1c0 <adding_reserve>:
	...

000000000001a1c8 <reserve_list>:
	...

000000000001a1d0 <large_block_list>:
	...

000000000001a1e0 <exact_block_list>:
	...

000000000001a9e0 <meta_used>:
	...

000000000001aa00 <meta_reserve>:
	...

000000000002aa00 <mm_user_end>:
	...

000000000002aa08 <mm_user_base>:
	...

000000000002aa10 <mm_lock>:
	...

000000000002aa18 <heap_used.0>:
	...

000000000002aa20 <g_peak_heap_used>:
	...

000000000002aa40 <_gm_>:
	...

000000000002ae00 <mparams>:
	...

000000000002ae30 <malloc_global_mutex>:
	...

000000000002ae38 <g_peak_rsrv_mem_committed>:
	...

000000000002ae40 <_ZZ15sgx_self_reportE11report_lock>:
	...

000000000002ae60 <_ZZ15sgx_self_reportE7_report>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <__ImageBase+0x78>
   a:	74 75                	je     81 <__ImageBase+0x81>
   c:	20 31                	and    %dh,(%rcx)
   e:	33 2e                	xor    (%rsi),%ebp
  10:	33 2e                	xor    (%rsi),%ebp
  12:	30 2d 36 75 62 75    	xor    %ch,0x75627536(%rip)        # 7562754e <_end+0x755fc53e>
  18:	6e                   	outsb  %ds:(%rsi),(%dx)
  19:	74 75                	je     90 <__ImageBase+0x90>
  1b:	32 7e 32             	xor    0x32(%rsi),%bh
  1e:	34 2e                	xor    $0x2e,%al
  20:	30 34 29             	xor    %dh,(%rcx,%rbp,1)
  23:	20 31                	and    %dh,(%rcx)
  25:	33 2e                	xor    (%rsi),%ebp
  27:	33 2e                	xor    (%rsi),%ebp
  29:	30 00                	xor    %al,(%rax)

Disassembly of section .note.sgxmeta:

0000000000000000 <.note.sgxmeta>:
       0:	0d 00 00 00 00       	or     $0x0,%eax
       5:	50                   	push   %rax
       6:	00 00                	add    %al,(%rax)
       8:	01 00                	add    %eax,(%rax)
       a:	00 00                	add    %al,(%rax)
       c:	73 67                	jae    75 <__ImageBase+0x75>
       e:	78 5f                	js     6f <__ImageBase+0x6f>
      10:	6d                   	insl   (%dx),%es:(%rdi)
      11:	65 74 61             	gs je  75 <__ImageBase+0x75>
      14:	64 61                	fs (bad) 
      16:	74 61                	je     79 <__ImageBase+0x79>
      18:	00 4c 0e 5d          	add    %cl,0x5d(%rsi,%rcx,1)
      1c:	63 94 02 a8 86 04 00 	movsxd 0x486a8(%rdx,%rax,1),%edx
      23:	00 00                	add    %al,(%rax)
      25:	01 00                	add    %eax,(%rax)
      27:	00 00                	add    %al,(%rax)
      29:	70 10                	jo     3b <__ImageBase+0x3b>
      2b:	00 00                	add    %al,(%rax)
      2d:	01 00                	add    %eax,(%rax)
      2f:	00 00                	add    %al,(%rax)
      31:	01 00                	add    %eax,(%rax)
      33:	00 00                	add    %al,(%rax)
      35:	80 0a 00             	orb    $0x0,(%rdx)
      38:	00 00                	add    %al,(%rax)
      3a:	00 00                	add    %al,(%rax)
      3c:	00 01                	add    %al,(%rcx)
      3e:	00 00                	add    %al,(%rax)
      40:	00 00                	add    %al,(%rax)
      42:	00 40 00             	add    %al,0x0(%rax)
      45:	00 00                	add    %al,(%rax)
      47:	00 00                	add    %al,(%rax)
      49:	04 00                	add    $0x0,%al
      4b:	00 00                	add    %al,(%rax)
      4d:	00 00                	add    %al,(%rax)
      4f:	00 00                	add    %al,(%rax)
      51:	e7 00                	out    %eax,$0x0
      53:	00 00                	add    %al,(%rax)
      55:	00 00                	add    %al,(%rax)
      57:	00 00                	add    %al,(%rax)
      59:	06                   	(bad)  
      5a:	00 00                	add    %al,(%rax)
      5c:	00 e1                	add    %ah,%cl
      5e:	00 00                	add    %al,(%rax)
      60:	00 00                	add    %al,(%rax)
      62:	00 01                	add    %al,(%rcx)
	...
      6c:	00 17                	add    %dl,(%rdi)
      6e:	05 25 20 01 01       	add    $0x1012025,%eax
      73:	00 00                	add    %al,(%rax)
      75:	60                   	(bad)  
      76:	00 00                	add    %al,(%rax)
      78:	00 60 00             	add    %ah,0x0(%rax)
      7b:	00 00                	add    %al,(%rax)
      7d:	01 00                	add    %eax,(%rax)
	...
      d7:	00 00                	add    %al,(%rax)
      d9:	0d 5b d0 bf de       	or     $0xdebfd05b,%eax
      de:	b1 3e                	mov    $0x3e,%cl
      e0:	f1                   	icebp  
      e1:	59                   	pop    %rcx
      e2:	2e 09 75 a3          	cs or  %esi,-0x5d(%rbp)
      e6:	2e ec                	cs in  (%dx),%al
      e8:	5c                   	pop    %rsp
      e9:	3e ee                	ds out %al,(%dx)
      eb:	c6                   	(bad)  
      ec:	77 a8                	ja     96 <__ImageBase+0x96>
      ee:	df e3                	(bad)  
      f0:	bf d3 03 c3 81       	mov    $0x81c303d3,%edi
      f5:	90                   	nop
      f6:	6e                   	outsb  %ds:(%rsi),(%dx)
      f7:	c2 8e bd             	ret    $0xbd8e
      fa:	07                   	(bad)  
      fb:	29 46 ec             	sub    %eax,-0x14(%rsi)
      fe:	f2 c3                	bnd ret 
     100:	b6 0d                	mov    $0xd,%dh
     102:	9e                   	sahf   
     103:	dc 3a                	fdivrl (%rdx)
     105:	f2 07                	repnz (bad) 
     107:	b6 23                	mov    $0x23,%dh
     109:	22 78 46             	and    0x46(%rax),%bh
     10c:	72 25                	jb     133 <__ImageBase+0x133>
     10e:	48 3b ea             	cmp    %rdx,%rbp
     111:	1d f4 d6 f4 c1       	sbb    $0xc1f4d6f4,%eax
     116:	f4                   	hlt    
     117:	5c                   	pop    %rsp
     118:	b5 c7                	mov    $0xc7,%ch
     11a:	b4 56                	mov    $0x56,%ah
     11c:	e2 8b                	loop   a9 <__ImageBase+0xa9>
     11e:	3c b7                	cmp    $0xb7,%al
     120:	55                   	push   %rbp
     121:	5d                   	pop    %rbp
     122:	ae                   	scas   %es:(%rdi),%al
     123:	7f 6f                	jg     194 <__ImageBase+0x194>
     125:	b9 54 42 89 fb       	mov    $0xfb894254,%ecx
     12a:	ed                   	in     (%dx),%eax
     12b:	f7 e7                	mul    %edi
     12d:	ba e2 50 26 95       	mov    $0x952650e2,%edx
     132:	b6 88                	mov    $0x88,%dh
     134:	1e                   	(bad)  
     135:	7e f6                	jle    12d <__ImageBase+0x12d>
     137:	0a df                	or     %bh,%bl
     139:	5e                   	pop    %rsi
     13a:	8d                   	(bad)  
     13b:	f9                   	stc    
     13c:	f2 a4                	repnz movsb %ds:(%rsi),%es:(%rdi)
     13e:	e5 5a                	in     $0x5a,%eax
     140:	aa                   	stos   %al,%es:(%rdi)
     141:	82                   	(bad)  
     142:	8d 42 e0             	lea    -0x20(%rdx),%eax
     145:	e8 88 66 77 c0       	call   ffffffffc07767d2 <_end+0xffffffffc074b7c2>
     14a:	1a a7 8f 64 66 35    	sbb    0x3566648f(%rdi),%ah
     150:	e6 ee                	out    %al,$0xee
     152:	88 80 7c 2c 87 6a    	mov    %al,0x6a872c7c(%rax)
     158:	6c                   	insb   (%dx),%es:(%rdi)
     159:	37                   	(bad)  
     15a:	d5                   	(bad)  
     15b:	71 58                	jno    1b5 <__ImageBase+0x1b5>
     15d:	e1 e9                	loope  148 <__ImageBase+0x148>
     15f:	26 d8 39             	es fdivrs (%rcx)
     162:	2a 36                	sub    (%rsi),%dh
     164:	df 7a 25             	fistpll 0x25(%rdx)
     167:	38 6b 25             	cmp    %ch,0x25(%rbx)
     16a:	2e 76 4f             	jbe,pn 1bc <__ImageBase+0x1bc>
     16d:	53                   	push   %rbx
     16e:	35 0f 80 ab 5b       	xor    $0x5bab800f,%eax
     173:	dd 0f                	fisttpll (%rdi)
     175:	8a bc 43 91 bf 2a 27 	mov    0x272abf91(%rbx,%rax,2),%bh
     17c:	3c 19                	cmp    $0x19,%al
     17e:	dd 3e                	fnstsw (%rsi)
     180:	ad                   	lods   %ds:(%rsi),%eax
     181:	97                   	xchg   %eax,%edi
     182:	11 a2 0e b3 73 d9    	adc    %esp,-0x268c4cf2(%rdx)
     188:	75 b3                	jne    13d <__ImageBase+0x13d>
     18a:	42 63 ef             	rex.X movsxd %edi,%ebp
     18d:	21 89 45 24 c6 cc    	and    %ecx,-0x3339dbbb(%rcx)
     193:	cb                   	lret   
     194:	eb 30                	jmp    1c6 <__ImageBase+0x1c6>
     196:	dd 76 ae             	fnsave -0x52(%rsi)
     199:	f1                   	icebp  
     19a:	ee                   	out    %al,(%dx)
     19b:	34 25                	xor    $0x25,%al
     19d:	1b 00                	sbb    (%rax),%eax
     19f:	50                   	push   %rax
     1a0:	7d 49                	jge    1eb <__ImageBase+0x1eb>
     1a2:	77 a5                	ja     149 <__ImageBase+0x149>
     1a4:	24 90                	and    $0x90,%al
     1a6:	7b 92                	jnp    13a <__ImageBase+0x13a>
     1a8:	24 96                	and    $0x96,%al
     1aa:	1b e6                	sbb    %esi,%esp
     1ac:	98                   	cwtl   
     1ad:	d6                   	(bad)  
     1ae:	42                   	rex.X
     1af:	36 3c 44             	ss cmp $0x44,%al
     1b2:	0c 6f                	or     $0x6f,%al
     1b4:	01 63 06             	add    %esp,0x6(%rbx)
     1b7:	17                   	(bad)  
     1b8:	8d 42 ac             	lea    -0x54(%rdx),%eax
     1bb:	7b 8b                	jnp    148 <__ImageBase+0x148>
     1bd:	a9 6d eb 67 dc       	test   $0xdc67eb6d,%eax
     1c2:	e7 ee                	out    %eax,$0xee
     1c4:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
     1c5:	ea                   	(bad)  
     1c6:	7e 59                	jle    221 <__ImageBase+0x221>
     1c8:	5e                   	pop    %rsi
     1c9:	05 96 f8 3d 2b       	add    $0x2b3df896,%eax
     1ce:	88 6d ee             	mov    %ch,-0x12(%rbp)
     1d1:	cd b6                	int    $0xb6
     1d3:	8b c0                	mov    %eax,%eax
     1d5:	10 da                	adc    %bl,%dl
     1d7:	bf 59 bb a0 ed       	mov    $0xeda0bb59,%edi
     1dc:	87 d3                	xchg   %edx,%ebx
     1de:	48                   	rex.W
     1df:	43 f1                	rex.XB icebp 
     1e1:	69 32 c8 06 7c 5c    	imul   $0x5c7c06c8,(%rdx),%esi
     1e7:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
     1e8:	c5 1a a9             	(bad)
     1eb:	e9 e1 00 20 a9       	jmp    ffffffffa92002d1 <_end+0xffffffffa91d52c1>
     1f0:	8d                   	(bad)  
     1f1:	e1 42                	loope  235 <__ImageBase+0x235>
     1f3:	9d                   	popf   
     1f4:	2b 71 4a             	sub    0x4a(%rcx),%esi
     1f7:	ff cb                	dec    %ebx
     1f9:	b6 d2                	mov    $0xd2,%dh
     1fb:	ac                   	lods   %ds:(%rsi),%al
     1fc:	c5 95 69 dd          	vpunpckhwd %ymm5,%ymm13,%ymm3
     200:	fa                   	cli    
     201:	ff 81 f2 06 b8 41    	incl   0x41b806f2(%rcx)
     207:	08 66 18             	or     %ah,0x18(%rsi)
     20a:	a3 bd a5 69 74 74 d9 	movabs %eax,0x8051d9747469a5bd
     211:	51 80 
     213:	ea                   	(bad)  
     214:	ac                   	lods   %ds:(%rsi),%al
     215:	87 23                	xchg   %esp,(%rbx)
     217:	0c 35                	or     $0x35,%al
     219:	cf                   	iret   
     21a:	05 ea db b0 b7       	add    $0xb7b0dbea,%eax
     21f:	e6 f8                	out    %al,$0xf8
     221:	5c                   	pop    %rsp
     222:	b5 05                	mov    $0x5,%ch
     224:	ff                   	(bad)  
     225:	7b 39                	jnp    260 <__ImageBase+0x260>
     227:	54                   	push   %rsp
     228:	a2 c3 73 4b d4 e3 c7 	movabs %al,0x2a18c7e3d44b73c3
     22f:	18 2a 
     231:	bb f1 76 d9 1c       	mov    $0x1cd976f1,%ebx
     236:	8d 57 1b             	lea    0x1b(%rdi),%edx
     239:	a1 36 85 7a e6 8d 65 	movabs 0xf30b658de67a8536,%eax
     240:	0b f3 
     242:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
     243:	8c 5b 93             	mov    %ds,-0x6d(%rbx)
     246:	9f                   	lahf   
     247:	b7 78                	mov    $0x78,%bh
     249:	6d                   	insl   (%dx),%es:(%rdi)
     24a:	1d ba 6e d7 93       	sbb    $0x93d76eba,%eax
     24f:	17                   	(bad)  
     250:	9f                   	lahf   
     251:	99                   	cltd   
     252:	09 d2                	or     %edx,%edx
     254:	02 fb                	add    %bl,%bh
     256:	38 0b                	cmp    %cl,(%rbx)
     258:	98                   	cwtl   
     259:	03 00                	add    (%rax),%eax
     25b:	00 00                	add    %al,(%rax)
     25d:	65 fd                	gs std 
     25f:	56                   	push   %rsi
     260:	3d e8 89 52 95       	cmp    $0x955289e8,%eax
     265:	37                   	(bad)  
     266:	dc a7 c4 6a 94 d9    	fsubl  -0x266b953c(%rdi)
     26c:	88 4e ba             	mov    %cl,-0x46(%rsi)
     26f:	67 7a 29             	addr32 jp 29b <__ImageBase+0x29b>
     272:	1b d9                	sbb    %ecx,%ebx
     274:	46 e9 c8 30 ec 24    	rex.RX jmp 24ec3342 <_end+0x24e98332>
     27a:	11 ed                	adc    %ebp,%ebp
     27c:	ce                   	(bad)  
     27d:	95                   	xchg   %eax,%ebp
     27e:	ea                   	(bad)  
     27f:	9d                   	popf   
     280:	ac                   	lods   %ds:(%rsi),%al
     281:	56                   	push   %rsi
     282:	56                   	push   %rsi
     283:	6f                   	outsl  %ds:(%rsi),(%dx)
     284:	ff 61 71             	jmp    *0x71(%rcx)
     287:	57                   	push   %rdi
     288:	9b                   	fwait
     289:	ed                   	in     (%dx),%eax
     28a:	9f                   	lahf   
     28b:	51                   	push   %rcx
     28c:	73 14                	jae    2a2 <__ImageBase+0x2a2>
     28e:	e8 aa 51 d5 7a       	call   7ad5543d <_end+0x7ad2a42d>
     293:	a0 fc 6d 6b 49 f6 23 	movabs 0x4da723f6496b6dfc,%al
     29a:	a7 4d 
     29c:	83 40 db 2b          	addl   $0x2b,-0x25(%rax)
     2a0:	a8 e0                	test   $0xe0,%al
     2a2:	b7 67                	mov    $0x67,%bh
     2a4:	29 68 03             	sub    %ebp,0x3(%rax)
     2a7:	04 06                	add    $0x6,%al
     2a9:	82                   	(bad)  
     2aa:	83 64 71 c1 d3       	andl   $0xffffffd3,-0x3f(%rcx,%rsi,2)
     2af:	61                   	(bad)  
     2b0:	60                   	(bad)  
     2b1:	00 92 3d b6 9c 3a    	add    %dl,0x3a9cb63d(%rdx)
     2b7:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
     2b8:	5f                   	pop    %rdi
     2b9:	ba c4 4e 29 c1       	mov    $0xc1294ec4,%edx
     2be:	97                   	xchg   %eax,%edi
     2bf:	15 5e 38 eb ff       	adc    $0xffeb385e,%eax
     2c4:	fe                   	(bad)  
     2c5:	fd                   	std    
     2c6:	e0 ca                	loopne 292 <__ImageBase+0x292>
     2c8:	e3 3c                	jrcxz  306 <__ImageBase+0x306>
     2ca:	6c                   	insb   (%dx),%es:(%rdi)
     2cb:	83 47 b9 dc          	addl   $0xffffffdc,-0x47(%rdi)
     2cf:	18 0e                	sbb    %cl,(%rsi)
     2d1:	9e                   	sahf   
     2d2:	f4                   	hlt    
     2d3:	bf 68 59 f5 da       	mov    $0xdaf55968,%edi
     2d8:	05 9a ee ae e4       	add    $0xe4aeee9a,%eax
     2dd:	a2 54 c2 ce 7b 25 ca 	movabs %al,0xb7fdca257bcec254
     2e4:	fd b7 
     2e6:	6d                   	insl   (%dx),%es:(%rdi)
     2e7:	c6 44 45 03 bd       	movb   $0xbd,0x3(%rbp,%rax,2)
     2ec:	39 c1                	cmp    %eax,%ecx
     2ee:	cc                   	int3   
     2ef:	3e 52                	ds push %rdx
     2f1:	06                   	(bad)  
     2f2:	99                   	cltd   
     2f3:	5d                   	pop    %rbp
     2f4:	e2 ea                	loop   2e0 <__ImageBase+0x2e0>
     2f6:	64 b3 92             	fs mov $0x92,%bl
     2f9:	41 05 d2 41 79 f6    	rex.B add $0xf67941d2,%eax
     2ff:	35 9f 89 db 4c       	xor    $0x4cdb899f,%eax
     304:	dd 21                	frstor (%rcx)
     306:	49 9d                	rex.WB popf 
     308:	2d 44 76 dd 24       	sub    $0x24dd7644,%eax
     30d:	7a e7                	jp     2f6 <__ImageBase+0x2f6>
     30f:	21 3b                	and    %edi,(%rbx)
     311:	58                   	pop    %rax
     312:	4d 51                	rex.WRB push %r9
     314:	9b                   	fwait
     315:	b5 14                	mov    $0x14,%ch
     317:	09 c1                	or     %eax,%ecx
     319:	0d 5a 91 07 a5       	or     $0xa507915a,%eax
     31e:	89 57 4c             	mov    %edx,0x4c(%rdi)
     321:	b3 13                	mov    $0x13,%bl
     323:	6e                   	outsb  %ds:(%rsi),(%dx)
     324:	5b                   	pop    %rbx
     325:	04 20                	add    $0x20,%al
     327:	9c                   	pushf  
     328:	f3 4a e5 12          	repz rex.WX in $0x12,%eax
     32c:	01 b2 b9 52 cd 11    	add    %esi,0x11cd52b9(%rdx)
     332:	7e 0e                	jle    342 <__ImageBase+0x342>
     334:	59                   	pop    %rcx
     335:	8e 4f 06             	mov    0x6(%rdi),%cs
     338:	33 55 78             	xor    0x78(%rbp),%edx
     33b:	24 16                	and    $0x16,%al
     33d:	eb 2e                	jmp    36d <__ImageBase+0x36d>
     33f:	80 cb bf             	or     $0xbf,%bl
     342:	33 fa                	xor    %edx,%edi
     344:	75 c3                	jne    309 <__ImageBase+0x309>
     346:	81 03 47 d4 dc f8    	addl   $0xf8dcd447,(%rbx)
     34c:	24 34                	and    $0x34,%al
     34e:	c5 41 62 0d ba 65 5f 	vpunpckldq -0xa09a46(%rip),%xmm7,%xmm9        # ffffffffff5f6910 <_end+0xffffffffff5cb900>
     355:	ff 
     356:	12 68 a8             	adc    -0x58(%rax),%ch
     359:	f6 c4 81             	test   $0x81,%ah
     35c:	23 3e                	and    (%rsi),%edi
     35e:	34 eb                	xor    $0xeb,%al
     360:	7a fb                	jp     35d <__ImageBase+0x35d>
     362:	e8 76 50 85 f5       	call   fffffffff58553dd <_end+0xfffffffff582a3cd>
     367:	d0 61 31             	shlb   0x31(%rcx)
     36a:	c9                   	leave  
     36b:	d8 ed                	fsubr  %st(5),%st
     36d:	cf                   	iret   
     36e:	e2 3c                	loop   3ac <__ImageBase+0x3ac>
     370:	2d bf da 41 e4       	sub    $0xe441dabf,%eax
     375:	aa                   	stos   %al,%es:(%rdi)
     376:	fb                   	sti    
     377:	25 f3 fc 8b b7       	and    $0xb78bfcf3,%eax
     37c:	e6 26                	out    %al,$0x26
     37e:	4d c2 d3 4c          	rex.WRB ret $0x4cd3
     382:	fe 80 96 eb 76 0c    	incb   0xc76eb96(%rax)
     388:	1e                   	(bad)  
     389:	2d ba 39 7b ad       	sub    $0xad7b39ba,%eax
     38e:	9c                   	pushf  
     38f:	84 f6                	test   %dh,%dh
     391:	da 5e e7             	ficompl -0x19(%rsi)
     394:	95                   	xchg   %eax,%ebp
     395:	c6                   	(bad)  
     396:	e8 5b b0 5e 7f       	call   7f5eb3f6 <_end+0x7f5c03e6>
     39b:	45                   	rex.RB
     39c:	2e 4b                	cs rex.WXB
     39e:	f0 0d c4 e7 b7 5b    	lock or $0x5bb7e7c4,%eax
     3a4:	44 50                	rex.R push %rax
     3a6:	fd                   	std    
     3a7:	f7 57 5c             	notl   0x5c(%rdi)
     3aa:	1c 44                	sbb    $0x44,%al
     3ac:	dc 51 2b             	fcoml  0x2b(%rcx)
     3af:	53                   	push   %rbx
     3b0:	15 cd af df cd       	adc    $0xcddfafcd,%eax
     3b5:	f5                   	cmc    
     3b6:	d4                   	(bad)  
     3b7:	c2 47 3c             	ret    $0x3c47
     3ba:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
     3bb:	a3 87 b3 2d 13 7d c5 	movabs %eax,0x1027c57d132db387
     3c2:	27 10 
     3c4:	1a b2 33 72 8d 95    	sbb    -0x6a728dcd(%rdx),%dh
     3ca:	95                   	xchg   %eax,%ebp
     3cb:	25 f4 9e 89 41       	and    $0x41899ef4,%eax
     3d0:	20 67 83             	and    %ah,-0x7d(%rdi)
     3d3:	0f 9c da             	setl   %dl
     3d6:	f3 e0 92             	repz loopne 36b <__ImageBase+0x36b>
     3d9:	fd                   	std    
     3da:	19 6e 6f             	sbb    %ebp,0x6f(%rsi)
     3dd:	00 00                	add    %al,(%rax)
     3df:	00 00                	add    %al,(%rax)
     3e1:	ff                   	(bad)  
     3e2:	ff                   	(bad)  
     3e3:	ff                   	(bad)  
     3e4:	ff 00                	incl   (%rax)
	...
     3f6:	00 00                	add    %al,(%rax)
     3f8:	00 04 00             	add    %al,(%rax,%rax,1)
     3fb:	00 00                	add    %al,(%rax)
     3fd:	00 00                	add    %al,(%rax)
     3ff:	00 00                	add    %al,(%rax)
     401:	03 00                	add    (%rax),%eax
     403:	00 00                	add    %al,(%rax)
     405:	00 00                	add    %al,(%rax)
     407:	00 00                	add    %al,(%rax)
     409:	fd                   	std    
     40a:	ff                   	(bad)  
     40b:	ff                   	(bad)  
     40c:	ff                   	(bad)  
     40d:	ff                   	(bad)  
     40e:	ff 00                	incl   (%rax)
     410:	ff 1b                	lcall  *(%rbx)
     412:	ff                   	(bad)  
     413:	ff                   	(bad)  
     414:	ff                   	(bad)  
     415:	ff                   	(bad)  
     416:	ff                   	(bad)  
     417:	ff                   	(bad)  
     418:	ff 01                	incl   (%rcx)
     41a:	08 22                	or     %ah,(%rdx)
     41c:	17                   	(bad)  
     41d:	ae                   	scas   %es:(%rdi),%al
     41e:	47 3d 14 c3 6e 35    	rex.RXB cmp $0x356ec314,%eax
     424:	92                   	xchg   %eax,%edx
     425:	ae                   	scas   %es:(%rdi),%al
     426:	38 06                	cmp    %al,(%rsi)
     428:	4c 01 bf c5 d8 d3 a0 	add    %r15,-0x5f2c273b(%rdi)
     42f:	ae                   	scas   %es:(%rdi),%al
     430:	d6                   	(bad)  
     431:	2e 3f                	cs (bad) 
     433:	f1                   	icebp  
     434:	10 3e                	adc    %bh,(%rsi)
     436:	2e 5c                	cs pop %rsp
     438:	33 00                	xor    (%rax),%eax
	...
     466:	00 00                	add    %al,(%rax)
     468:	00 6d 90             	add    %ch,-0x70(%rbp)
     46b:	87 8f 06 39 75 0a    	xchg   %ecx,0xa753906(%rdi)
     471:	d5                   	(bad)  
     472:	86 f7                	xchg   %dh,%bh
     474:	00 9e 3b 20 91 77    	add    %bl,0x7791203b(%rsi)
     47a:	63 ba 1f 87 79 4b    	movsxd 0x4b79871f(%rdx),%edi
     480:	08 ee                	or     %ch,%dh
     482:	78 16                	js     49a <__ImageBase+0x49a>
     484:	b0 6a                	mov    $0x6a,%al
     486:	d2 bf 9f fb 69 c8    	sarb   %cl,-0x37960461(%rdi)
     48c:	4f                   	rex.WRXB
     48d:	4e 9e                	rex.WRX sahf 
     48f:	e7 4d                	out    %eax,$0x4d
     491:	32 ee                	xor    %dh,%ch
     493:	22 55 61             	and    0x61(%rbp),%dl
     496:	c9                   	leave  
     497:	a2 71 40 e4 6a e3 55 	movabs %al,0x3fc955e36ae44071
     49e:	c9 3f 
     4a0:	3f                   	(bad)  
     4a1:	66 85 35 78 2c d3 fc 	test   %si,-0x32cd388(%rip)        # fffffffffcd33120 <_end+0xfffffffffcd08110>
     4a8:	b6 ce                	mov    $0xce,%dh
     4aa:	51                   	push   %rcx
     4ab:	fb                   	sti    
     4ac:	14 b2                	adc    $0xb2,%al
     4ae:	ce                   	(bad)  
     4af:	c7                   	(bad)  
     4b0:	26 d6                	es (bad) 
     4b2:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
     4b3:	20 d1                	and    %dl,%cl
     4b5:	4d 1f                	rex.WRB (bad) 
     4b7:	44 3a d7             	cmp    %dil,%r10b
     4ba:	02 df                	add    %bh,%bl
     4bc:	42 32 23             	rex.X xor (%rbx),%spl
     4bf:	a0 9e 75 6c 47 63 ec 	movabs 0x3868ec63476c759e,%al
     4c6:	68 38 
     4c8:	d7                   	xlat   %ds:(%rbx)
     4c9:	48 d5                	rex.W (bad) 
     4cb:	74 1b                	je     4e8 <__ImageBase+0x4e8>
     4cd:	e2 ef                	loop   4be <__ImageBase+0x4be>
     4cf:	c1 cf 61             	ror    $0x61,%edi
     4d2:	3d 52 7e b2 65       	cmp    $0x65b27e52,%eax
     4d7:	9d                   	popf   
     4d8:	6a 90                	push   $0xffffffffffffff90
     4da:	76 06                	jbe    4e2 <__ImageBase+0x4e2>
     4dc:	9b                   	fwait
     4dd:	88 76 d2             	mov    %dh,-0x2e(%rsi)
     4e0:	70 d5                	jo     4b7 <__ImageBase+0x4b7>
     4e2:	a8 e9                	test   $0xe9,%al
     4e4:	06                   	(bad)  
     4e5:	ca 27 28             	lret   $0x2827
     4e8:	b9 be 72 90 60       	mov    $0x609072be,%ecx
     4ed:	21 33                	and    %esi,(%rbx)
     4ef:	b4 c5                	mov    $0xc5,%ah
     4f1:	2a d4                	sub    %ah,%dl
     4f3:	4f d5                	rex.WRXB (bad) 
     4f5:	f4                   	hlt    
     4f6:	1a 1a                	sbb    (%rdx),%bl
     4f8:	60                   	(bad)  
     4f9:	aa                   	stos   %al,%es:(%rdi)
     4fa:	29 59 92             	sub    %ebx,-0x6e(%rcx)
     4fd:	52                   	push   %rdx
     4fe:	31 99 73 25 ca 95    	xor    %ebx,-0x6a35da8d(%rcx)
     504:	f3 db 57 69          	repz fistl 0x69(%rdi)
     508:	65 1b 7d 8d          	sbb    %gs:-0x73(%rbp),%edi
     50c:	2a 92 12 d2 17 09    	sub    0x917d212(%rdx),%dl
     512:	d4                   	(bad)  
     513:	eb 89                	jmp    49e <__ImageBase+0x49e>
     515:	2c b8                	sub    $0xb8,%al
     517:	b9 0e 4b c0 05       	mov    $0x5c04b0e,%ecx
     51c:	24 6e                	and    $0x6e,%al
     51e:	c0 fa 7d             	sar    $0x7d,%dl
     521:	a8 a7                	test   $0xa7,%al
     523:	c0 20 4a             	shlb   $0x4a,(%rax)
     526:	1d 7b ac 8d ac       	sbb    $0xac8dac7b,%eax
     52b:	bb 1a bd 88 8f       	mov    $0x8f88bd1a,%ebx
     530:	c0 33 2e             	shlb   $0x2e,(%rbx)
     533:	19 39                	sbb    %edi,(%rcx)
     535:	50                   	push   %rax
     536:	81 5a bc 48 9d cb 8c 	sbbl   $0x8ccb9d48,-0x44(%rdx)
     53d:	30 8c 7a ca ce 71 57 	xor    %cl,0x5771ceca(%rdx,%rdi,2)
     544:	5a                   	pop    %rdx
     545:	cc                   	int3   
     546:	ed                   	in     (%dx),%eax
     547:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
     548:	41 bd 3e 68 9c e1    	mov    $0xe19c683e,%r13d
     54e:	49 21 93 3c 41 6a 83 	and    %rdx,-0x7c95bec4(%r11)
     555:	2f                   	(bad)  
     556:	53                   	push   %rbx
     557:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
     558:	27                   	(bad)  
     559:	b9 49 52 e7 ca       	mov    $0xcae75249,%ecx
     55e:	88 27                	mov    %ah,(%rdi)
     560:	e1 03                	loope  565 <__ImageBase+0x565>
     562:	c7                   	(bad)  
     563:	fb                   	sti    
     564:	8c 54 f8 cc          	mov    %ss,-0x34(%rax,%rdi,8)
     568:	46 d6                	rex.RX (bad) 
     56a:	8f 01                	pop    (%rcx)
     56c:	d1 9a 90 6c 94 f4    	rcrl   -0xb6b9370(%rdx)
     572:	c9                   	leave  
     573:	94                   	xchg   %eax,%esp
     574:	d9 f5                	fprem1 
     576:	7f cd                	jg     545 <__ImageBase+0x545>
     578:	0b b1 7f 7a f5 d7    	or     -0x280a8581(%rcx),%esi
     57e:	4b bd 64 80 2a ec 2c 	rex.WXB movabs $0x8cc9c62cec2a8064,%r13
     585:	c6 c9 8c 
     588:	7b e4                	jnp    56e <__ImageBase+0x56e>
     58a:	38 29                	cmp    %ch,(%rcx)
     58c:	d0 38                	sarb   (%rax)
     58e:	0f b3 5f 30          	btr    %ebx,0x30(%rdi)
     592:	3b c1                	cmp    %ecx,%eax
     594:	64 1a 09             	sbb    %fs:(%rcx),%cl
     597:	03 de                	add    %esi,%ebx
     599:	05 82 a3 21 41       	add    $0x4121a382,%eax
     59e:	00 ae 69 f4 a8 61    	add    %ch,0x61a8f469(%rsi)
     5a4:	8d a5 e6 92 63 3b    	lea    0x3b6392e6(%rbp),%esp
     5aa:	74 e7                	je     593 <__ImageBase+0x593>
     5ac:	8a fe                	mov    %dh,%bh
     5ae:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
     5af:	ad                   	lods   %ds:(%rsi),%eax
     5b0:	16                   	(bad)  
     5b1:	8d                   	(bad)  
     5b2:	ed                   	in     (%dx),%eax
     5b3:	93                   	xchg   %eax,%ebx
     5b4:	a2 ce 8b 9e cd a9 1a 	movabs %al,0xea11aa9cd9e8bce
     5bb:	a1 0e 
     5bd:	2c 90                	sub    $0x90,%al
     5bf:	1e                   	(bad)  
     5c0:	02 80 31 e1 72 ee    	add    -0x118d1ecf(%rax),%al
     5c6:	c3                   	ret    
     5c7:	49 62 d2             	rex.WB (bad) 
     5ca:	21 c1                	and    %eax,%ecx
     5cc:	2d 92 76 74 68       	sub    $0x68747692,%eax
     5d1:	08 8e 9f b1 8f 89    	or     %cl,-0x76704e61(%rsi)
     5d7:	5a                   	pop    %rdx
     5d8:	66 ad                	lods   %ds:(%rsi),%ax
     5da:	45                   	rex.RB
     5db:	f0 c8 7c dd 90       	lock enter $0xdd7c,$0x90
     5e0:	2c 7b                	sub    $0x7b,%al
     5e2:	f0 c3                	lock ret 
     5e4:	00 fd                	add    %bh,%ch
     5e6:	3e aa                	ds stos %al,%es:(%rdi)
     5e8:	51                   	push   %rcx
     5e9:	09 f9                	or     %edi,%ecx
     5eb:	88 25 cf 45 44 3f    	mov    %ah,0x3f4445cf(%rip)        # 3f444bc0 <_end+0x3f419bb0>
     5f1:	e3 28                	jrcxz  61b <__ImageBase+0x61b>
     5f3:	3b 30                	cmp    (%rax),%esi
     5f5:	d2 bb fb 49 f5 35    	sarb   %cl,0x35f549fb(%rbx)
     5fb:	cd d5                	int    $0xd5
     5fd:	00 27                	add    %ah,(%rdi)
     5ff:	b3 e9                	mov    $0xe9,%bl
     601:	bc c1 60 9e a0       	mov    $0xa09e60c1,%esp
     606:	93                   	xchg   %eax,%ebx
     607:	9b                   	fwait
     608:	48 3a 05 4e d0 ff fb 	rex.W cmp -0x4002fb2(%rip),%al        # fffffffffbffd65d <_end+0xfffffffffbfd264d>
     60f:	54                   	push   %rsp
     610:	e1 45                	loope  657 <__ImageBase+0x657>
     612:	42 5a                	rex.X pop %rdx
     614:	29 b1 10 f7 39 38    	sub    %esi,0x3839f710(%rcx)
     61a:	a3 42 cf 28 f2 7b a9 	movabs %eax,0x5aafa97bf228cf42
     621:	af 5a 
     623:	f3 20 4f 46          	repz and %cl,0x46(%rdi)
     627:	b1 65                	mov    $0x65,%cl
     629:	d0 36                	shlb   (%rsi)
     62b:	7a 68                	jp     695 <__ImageBase+0x695>
     62d:	69 a8 89 6d f7 d0 29 	imul   $0x1bd75829,-0x2f089277(%rax),%ebp
     634:	58 d7 1b 
     637:	54                   	push   %rsp
     638:	06                   	(bad)  
     639:	ef                   	out    %eax,(%dx)
     63a:	66 94                	xchg   %ax,%sp
     63c:	0d 0e 8d f1 ee       	or     $0xeef18d0e,%eax
     641:	82                   	(bad)  
     642:	81 c9 ba a3 70 81    	or     $0x8170a3ba,%ecx
     648:	89 f2                	mov    %esi,%edx
     64a:	55                   	push   %rbp
     64b:	02 2e                	add    (%rsi),%ch
     64d:	d8 53 e4             	fcoms  -0x1c(%rbx)
     650:	aa                   	stos   %al,%es:(%rdi)
     651:	82                   	(bad)  
     652:	1d 33 b7 36 f2       	sbb    $0xf236b733,%eax
     657:	19 f0                	sbb    %esi,%eax
     659:	20 9e f6 27 be d4    	and    %bl,-0x2b41d80a(%rsi)
     65f:	05 7e 9f 02 b5       	add    $0xb5029f7e,%eax
     664:	2b 1b                	sub    (%rbx),%ebx
     666:	16                   	(bad)  
     667:	5e                   	pop    %rsi
     668:	91                   	xchg   %eax,%ecx
     669:	7d 83                	jge    5ee <__ImageBase+0x5ee>
     66b:	2f                   	(bad)  
     66c:	cd 51                	int    $0x51
     66e:	cb                   	lret   
     66f:	26 2c d4             	es sub $0xd4,%al
     672:	0f d8 c7             	psubusb %mm7,%mm0
     675:	17                   	(bad)  
     676:	b5 ab                	mov    $0xab,%ch
     678:	73 6b                	jae    6e5 <__ImageBase+0x6e5>
     67a:	99                   	cltd   
     67b:	92                   	xchg   %eax,%edx
     67c:	b3 ad                	mov    $0xad,%bl
     67e:	d0 9e ca 7c f2 6b    	rcrb   0x6bf27cca(%rsi)
     684:	dc 0e                	fmull  (%rsi)
     686:	6e                   	outsb  %ds:(%rsi),(%dx)
     687:	7f 69                	jg     6f2 <__ImageBase+0x6f2>
     689:	2f                   	(bad)  
     68a:	b7 a2                	mov    $0xa2,%bh
     68c:	36 78 80             	ss js  60f <__ImageBase+0x60f>
     68f:	19 ba 32 be f5 f0    	sbb    %edi,-0xf0a41ce(%rdx)
     695:	f1                   	icebp  
     696:	4f 1e                	rex.WRXB (bad) 
     698:	25 2a dd f0 d7       	and    $0xd7f0dd2a,%eax
     69d:	c8 9f 75 74          	enter  $0x759f,$0x74
     6a1:	3e d0 91 df bb 57 19 	ds rclb 0x1957bbdf(%rcx)
     6a8:	42 a2 e7 78 96 d0 7c 	rex.X movabs %al,0xd9252f7cd09678e7
     6af:	2f 25 d9 
     6b2:	04 12                	add    $0x12,%al
     6b4:	24 03                	and    $0x3,%al
     6b6:	e4 60                	in     $0x60,%al
     6b8:	b6 89                	mov    $0x89,%dh
     6ba:	f3 df 23             	repz fbld (%rbx)
     6bd:	8a 1f                	mov    (%rdi),%bl
     6bf:	f0 b5 76             	lock mov $0x76,%ch
     6c2:	8a d7                	mov    %bh,%dl
     6c4:	c5 a5 7f             	(bad)
     6c7:	60                   	(bad)  
     6c8:	26 da 94 e2 18 72 32 	es ficoml 0xe327218(%rdx,%riz,8)
     6cf:	0e 
     6d0:	9b                   	fwait
     6d1:	93                   	xchg   %eax,%ebx
     6d2:	00 a9 18 e0 84 9f    	add    %ch,-0x607b1fe8(%rcx)
     6d8:	62 43 76 70 d0       	(bad)
     6dd:	a3 16 b3 4d 06 54 d7 	movabs %eax,0x8e45d754064db316
     6e4:	45 8e 
     6e6:	73 e0                	jae    6c8 <__ImageBase+0x6c8>
     6e8:	6f                   	outsl  %ds:(%rsi),(%dx)
     6e9:	e7 20                	out    %eax,$0x20
     6eb:	da 60 65             	fisubl 0x65(%rax)
     6ee:	d2 92 ff 9b b4 e5    	rclb   %cl,-0x1a4b6401(%rdx)
     6f4:	f3 dc 77 c1          	repz fdivl -0x3f(%rdi)
     6f8:	21 7f c4             	and    %edi,-0x3c(%rdi)
     6fb:	8c 98 f2 55 57 8b    	mov    %ds,-0x74a8aa0e(%rax)
     701:	e8 34 91 b8 5b       	call   5bb8983a <_end+0x5bb5e82a>
     706:	58                   	pop    %rax
     707:	9e                   	sahf   
     708:	c5 fb 9a             	(bad)  
     70b:	be fd 91 08 b9       	mov    $0xb90891fd,%esi
     710:	98                   	cwtl   
     711:	07                   	(bad)  
     712:	45 17                	rex.RB (bad) 
     714:	08 cb                	or     %cl,%bl
     716:	3f                   	(bad)  
     717:	c4                   	(bad)  
     718:	5c                   	pop    %rsp
     719:	5f                   	pop    %rdi
     71a:	9d                   	popf   
     71b:	13 06                	adc    (%rsi),%eax
     71d:	f7 47 28 ca 65 ff b2 	testl  $0xb2ff65ca,0x28(%rdi)
     724:	2c ca                	sub    $0xca,%al
     726:	f0 4b 17             	lock rex.WXB (bad) 
     729:	b5 3c                	mov    $0x3c,%ch
     72b:	b7 2e                	mov    $0x2e,%bh
     72d:	ba 9b ad 2a 24       	mov    $0x242aad9b,%edx
     732:	87 00                	xchg   %eax,(%rax)
     734:	76 db                	jbe    711 <__ImageBase+0x711>
     736:	bd aa d6 b2 39       	mov    $0x39b2d6aa,%ebp
     73b:	95                   	xchg   %eax,%ebp
     73c:	5e                   	pop    %rsi
     73d:	05 76 1d cf be       	add    $0xbecf1d76,%eax
     742:	42 7d 84             	rex.X jge 6c9 <__ImageBase+0x6c9>
     745:	ef                   	out    %eax,(%dx)
     746:	36 9e                	ss sahf 
     748:	8c f8                	mov    %?,%eax
     74a:	ec                   	in     (%dx),%al
     74b:	76 2b                	jbe    778 <__ImageBase+0x778>
     74d:	7a cb                	jp     71a <__ImageBase+0x71a>
     74f:	01 cf                	add    %ecx,%edi
     751:	ff a0 af 17 46 10    	jmp    *0x104617af(%rax)
     757:	b5 d7                	mov    $0xd7,%ch
     759:	c8 96 f5 73          	enter  $0xf596,$0x73
     75d:	4c a3 8a 4d 29 74 d0 	rex.WR movabs %rax,0x9e9980d074294d8a
     764:	80 99 9e 
     767:	29 3a                	sub    %edi,(%rdx)
     769:	90                   	nop
     76a:	0e                   	(bad)  
     76b:	00 00                	add    %al,(%rax)
     76d:	80 00 00             	addb   $0x0,(%rax)
     770:	00 10                	add    %dl,(%rax)
     772:	0f 00 00             	sldt   (%rax)
     775:	60                   	(bad)  
     776:	01 00                	add    %eax,(%rax)
	...
     788:	00 00                	add    %al,(%rax)
     78a:	10 00                	adc    %al,(%rax)
	...
     794:	00 02                	add    %al,(%rdx)
     796:	00 00                	add    %al,(%rax)
     798:	00 5f 21             	add    %bl,0x21(%rdi)
     79b:	01 00                	add    %eax,(%rax)
	...
     7a9:	00 30                	add    %dh,(%rax)
     7ab:	01 00                	add    %eax,(%rax)
     7ad:	00 00                	add    %al,(%rax)
     7af:	00 00                	add    %al,(%rax)
     7b1:	00 30                	add    %dh,(%rax)
     7b3:	01 00                	add    %eax,(%rax)
     7b5:	00 00                	add    %al,(%rax)
     7b7:	00 00                	add    %al,(%rax)
     7b9:	ff                   	(bad)  
     7ba:	ff                   	(bad)  
     7bb:	ff                   	(bad)  
     7bc:	ff                   	(bad)  
     7bd:	ff                   	(bad)  
     7be:	ff                   	(bad)  
     7bf:	ff                   	(bad)  
     7c0:	ff 00                	incl   (%rax)
	...
     7ca:	00 40 00             	add    %al,0x0(%rax)
     7cd:	00 00                	add    %al,(%rax)
     7cf:	00 00                	add    %al,(%rax)
     7d1:	00 c0                	add    %al,%al
     7d3:	02 00                	add    (%rax),%al
     7d5:	00 00                	add    %al,(%rax)
     7d7:	00 00                	add    %al,(%rax)
     7d9:	00 00                	add    %al,(%rax)
     7db:	10 00                	adc    %al,(%rax)
	...
     7f9:	01 00                	add    %eax,(%rax)
     7fb:	00 00                	add    %al,(%rax)
     7fd:	00 00                	add    %al,(%rax)
     7ff:	00 00                	add    %al,(%rax)
     801:	02 00                	add    (%rax),%al
     803:	00 00                	add    %al,(%rax)
     805:	00 00                	add    %al,(%rax)
     807:	00 00                	add    %al,(%rax)
     809:	02 00                	add    (%rax),%al
     80b:	00 00                	add    %al,(%rax)
     80d:	00 00                	add    %al,(%rax)
     80f:	00 00                	add    %al,(%rax)
     811:	00 30                	add    %dh,(%rax)
     813:	01 00                	add    %eax,(%rax)
     815:	00 00                	add    %al,(%rax)
     817:	00 00                	add    %al,(%rax)
     819:	00 00                	add    %al,(%rax)
     81b:	ff                   	(bad)  
     81c:	ff                   	(bad)  
     81d:	ff                   	(bad)  
     81e:	ff                   	(bad)  
     81f:	ff                   	(bad)  
     820:	ff 00                	incl   (%rax)
     822:	00 ff                	add    %bh,%bh
     824:	ff                   	(bad)  
     825:	ff                   	(bad)  
     826:	ff                   	(bad)  
     827:	ff                   	(bad)  
     828:	ff 00                	incl   (%rax)
     82a:	00 fb                	add    %bh,%bl
     82c:	ff                   	(bad)  
     82d:	ff                   	(bad)  
     82e:	ff                   	(bad)  
     82f:	ff                   	(bad)  
     830:	ff 48 1f             	decl   0x1f(%rax)
	...
     847:	00 00                	add    %al,(%rax)
     849:	80 0a 00             	orb    $0x0,(%rdx)
	...
     868:	00 00                	add    %al,(%rax)
     86a:	10 00                	adc    %al,(%rax)
	...
     878:	00 00                	add    %al,(%rax)
     87a:	30 01                	xor    %al,(%rcx)
     87c:	00 00                	add    %al,(%rax)
     87e:	00 00                	add    %al,(%rax)
     880:	00 68 30             	add    %ch,0x30(%rax)
     883:	01 00                	add    %eax,(%rax)
	...
     8e1:	00 10                	add    %dl,(%rax)
	...
     8eb:	00 00                	add    %al,(%rax)
     8ed:	02 00                	add    (%rax),%al
     8ef:	00 00                	add    %al,(%rax)
     8f1:	5f                   	pop    %rdi
     8f2:	21 01                	and    %eax,(%rcx)
	...
     900:	00 00                	add    %al,(%rax)
     902:	30 01                	xor    %al,(%rcx)
     904:	00 00                	add    %al,(%rax)
     906:	00 00                	add    %al,(%rax)
     908:	00 00                	add    %al,(%rax)
     90a:	30 01                	xor    %al,(%rcx)
     90c:	00 00                	add    %al,(%rax)
     90e:	00 00                	add    %al,(%rax)
     910:	00 ff                	add    %bh,%bh
     912:	ff                   	(bad)  
     913:	ff                   	(bad)  
     914:	ff                   	(bad)  
     915:	ff                   	(bad)  
     916:	ff                   	(bad)  
     917:	ff                   	(bad)  
     918:	ff 13                	call   *(%rbx)
     91a:	00 00                	add    %al,(%rax)
     91c:	00 00                	add    %al,(%rax)
     91e:	00 00                	add    %al,(%rax)
     920:	00 01                	add    %al,(%rcx)
     922:	00 01                	add    %al,(%rcx)
     924:	00 01                	add    %al,(%rcx)
     926:	00 00                	add    %al,(%rax)
     928:	00 00                	add    %al,(%rax)
     92a:	c0 02 00             	rolb   $0x0,(%rdx)
	...
     939:	03 02                	add    (%rdx),%eax
     93b:	00 00                	add    %al,(%rax)
     93d:	00 00                	add    %al,(%rax)
     93f:	00 00                	add    %al,(%rax)
     941:	02 00                	add    (%rax),%al
     943:	19 00                	sbb    %eax,(%rax)
     945:	ff 00                	incl   (%rax)
     947:	00 00                	add    %al,(%rax)
     949:	00 d0                	add    %dl,%al
     94b:	02 00                	add    (%rax),%al
	...
     959:	03 02                	add    (%rdx),%eax
     95b:	00 00                	add    %al,(%rax)
     95d:	00 00                	add    %al,(%rax)
     95f:	00 00                	add    %al,(%rax)
     961:	0a 00                	or     (%rax),%al
     963:	00 00                	add    %al,(%rax)
     965:	10 00                	adc    %al,(%rax)
     967:	00 00                	add    %al,(%rax)
     969:	00 c0                	add    %al,%al
     96b:	12 00                	adc    (%rax),%al
	...
     981:	07                   	(bad)  
     982:	00 5b 00             	add    %bl,0x0(%rbx)
     985:	3e 00 00             	ds add %al,(%rax)
     988:	00 00                	add    %al,(%rax)
     98a:	c0 13 00             	rclb   $0x0,(%rbx)
     98d:	00 00                	add    %al,(%rax)
     98f:	00 00                	add    %al,(%rax)
     991:	cc                   	int3   
     992:	cc                   	int3   
     993:	cc                   	int3   
     994:	cc                   	int3   
     995:	00 00                	add    %al,(%rax)
     997:	00 00                	add    %al,(%rax)
     999:	03 02                	add    (%rdx),%eax
     99b:	00 00                	add    %al,(%rax)
     99d:	00 00                	add    %al,(%rax)
     99f:	00 00                	add    %al,(%rax)
     9a1:	08 00                	or     %al,(%rax)
     9a3:	03 00                	add    (%rax),%eax
     9a5:	02 00                	add    (%rax),%al
     9a7:	00 00                	add    %al,(%rax)
     9a9:	00 a0 17 00 00 00    	add    %ah,0x17(%rax)
     9af:	00 00                	add    %al,(%rax)
     9b1:	cc                   	int3   
     9b2:	cc                   	int3   
     9b3:	cc                   	int3   
     9b4:	cc                   	int3   
     9b5:	00 00                	add    %al,(%rax)
     9b7:	00 00                	add    %al,(%rax)
     9b9:	03 02                	add    (%rdx),%eax
     9bb:	00 00                	add    %al,(%rax)
     9bd:	00 00                	add    %al,(%rax)
     9bf:	00 00                	add    %al,(%rax)
     9c1:	0a 00                	or     (%rax),%al
     9c3:	00 00                	add    %al,(%rax)
     9c5:	10 00                	adc    %al,(%rax)
     9c7:	00 00                	add    %al,(%rax)
     9c9:	00 c0                	add    %al,%al
     9cb:	17                   	(bad)  
	...
     9e0:	00 04 00             	add    %al,(%rax,%rax,1)
     9e3:	03 00                	add    (%rax),%eax
     9e5:	01 00                	add    %eax,(%rax)
     9e7:	00 00                	add    %al,(%rax)
     9e9:	00 c0                	add    %al,%al
     9eb:	18 00                	sbb    %al,(%rax)
     9ed:	00 00                	add    %al,(%rax)
     9ef:	00 00                	add    %al,(%rax)
     9f1:	48 00 00             	rex.W add %al,(%rax)
     9f4:	00 60 07             	add    %ah,0x7(%rax)
     9f7:	00 00                	add    %al,(%rax)
     9f9:	00 01                	add    %al,(%rcx)
     9fb:	00 00                	add    %al,(%rax)
     9fd:	00 00                	add    %al,(%rax)
     9ff:	00 00                	add    %al,(%rax)
     a01:	06                   	(bad)  
     a02:	00 03                	add    %al,(%rbx)
     a04:	00 02                	add    %al,(%rdx)
     a06:	00 00                	add    %al,(%rax)
     a08:	00 00                	add    %al,(%rax)
     a0a:	d0 18                	rcrb   (%rax)
	...
     a18:	00 03                	add    %al,(%rbx)
     a1a:	02 00                	add    (%rax),%al
     a1c:	00 00                	add    %al,(%rax)
     a1e:	00 00                	add    %al,(%rax)
     a20:	00 0a                	add    %cl,(%rdx)
     a22:	00 00                	add    %al,(%rax)
     a24:	00 10                	add    %dl,(%rax)
     a26:	00 00                	add    %al,(%rax)
     a28:	00 00                	add    %al,(%rax)
     a2a:	f0 18 00             	lock sbb %al,(%rax)
	...
     a41:	05 00 03 00 01       	add    $0x1000300,%eax
     a46:	00 00                	add    %al,(%rax)
     a48:	00 00                	add    %al,(%rax)
     a4a:	f0 19 00             	lock sbb %eax,(%rax)
	...
     a59:	03 02                	add    (%rdx),%eax
     a5b:	00 00                	add    %al,(%rax)
     a5d:	00 00                	add    %al,(%rax)
     a5f:	00 00                	add    %al,(%rax)
     a61:	0a 00                	or     (%rax),%al
     a63:	00 00                	add    %al,(%rax)
     a65:	10 00                	adc    %al,(%rax)
     a67:	00 00                	add    %al,(%rax)
     a69:	00 00                	add    %al,(%rax)
     a6b:	1a 00                	sbb    (%rax),%al
	...
     a81:	07                   	(bad)  
     a82:	00 43 00             	add    %al,0x0(%rbx)
     a85:	3e 00 00             	ds add %al,(%rax)
     a88:	00 00                	add    %al,(%rax)
     a8a:	00 1b                	add    %bl,(%rbx)
     a8c:	00 00                	add    %al,(%rax)
     a8e:	00 00                	add    %al,(%rax)
     a90:	00 cc                	add    %cl,%ah
     a92:	cc                   	int3   
     a93:	cc                   	int3   
     a94:	cc                   	int3   
     a95:	00 00                	add    %al,(%rax)
     a97:	00 00                	add    %al,(%rax)
     a99:	03 02                	add    (%rdx),%eax
     a9b:	00 00                	add    %al,(%rax)
     a9d:	00 00                	add    %al,(%rax)
     a9f:	00 00                	add    %al,(%rax)
     aa1:	08 00                	or     %al,(%rax)
     aa3:	03 00                	add    (%rax),%eax
     aa5:	02 00                	add    (%rax),%al
     aa7:	00 00                	add    %al,(%rax)
     aa9:	00 e0                	add    %ah,%al
     aab:	1e                   	(bad)  
     aac:	00 00                	add    %al,(%rax)
     aae:	00 00                	add    %al,(%rax)
     ab0:	00 cc                	add    %cl,%ah
     ab2:	cc                   	int3   
     ab3:	cc                   	int3   
     ab4:	cc                   	int3   
     ab5:	00 00                	add    %al,(%rax)
     ab7:	00 00                	add    %al,(%rax)
     ab9:	03 02                	add    (%rdx),%eax
     abb:	00 00                	add    %al,(%rax)
     abd:	00 00                	add    %al,(%rax)
     abf:	00 00                	add    %al,(%rax)
     ac1:	0a 00                	or     (%rax),%al
     ac3:	00 00                	add    %al,(%rax)
     ac5:	10 00                	adc    %al,(%rax)
     ac7:	00 00                	add    %al,(%rax)
     ac9:	00 00                	add    %al,(%rax)
     acb:	1f                   	(bad)  
	...
     ae0:	00 04 00             	add    %al,(%rax,%rax,1)
     ae3:	03 00                	add    (%rax),%eax
     ae5:	01 00                	add    %eax,(%rax)
     ae7:	00 00                	add    %al,(%rax)
     ae9:	00 00                	add    %al,(%rax)
     aeb:	20 00                	and    %al,(%rax)
     aed:	00 00                	add    %al,(%rax)
     aef:	00 00                	add    %al,(%rax)
     af1:	48 00 00             	rex.W add %al,(%rax)
     af4:	00 60 07             	add    %ah,0x7(%rax)
     af7:	00 00                	add    %al,(%rax)
     af9:	00 01                	add    %al,(%rcx)
     afb:	00 00                	add    %al,(%rax)
     afd:	00 00                	add    %al,(%rax)
     aff:	00 00                	add    %al,(%rax)
     b01:	06                   	(bad)  
     b02:	00 03                	add    %al,(%rbx)
     b04:	00 02                	add    %al,(%rdx)
     b06:	00 00                	add    %al,(%rax)
     b08:	00 00                	add    %al,(%rax)
     b0a:	10 20                	adc    %ah,(%rax)
	...
     b18:	00 03                	add    %al,(%rbx)
     b1a:	02 00                	add    (%rax),%al
     b1c:	00 00                	add    %al,(%rax)
     b1e:	00 00                	add    %al,(%rax)
     b20:	00 0a                	add    %cl,(%rdx)
     b22:	00 00                	add    %al,(%rax)
     b24:	00 10                	add    %dl,(%rax)
     b26:	00 00                	add    %al,(%rax)
     b28:	00 00                	add    %al,(%rax)
     b2a:	30 20                	xor    %ah,(%rax)
	...
     b40:	00 05 00 03 00 01    	add    %al,0x1000300(%rip)        # 1000e46 <_end+0xfd5e36>
     b46:	00 00                	add    %al,(%rax)
     b48:	00 00                	add    %al,(%rax)
     b4a:	30 21                	xor    %ah,(%rcx)
	...
     b58:	00 03                	add    %al,(%rbx)
     b5a:	02 00                	add    (%rax),%al
     b5c:	00 00                	add    %al,(%rax)
     b5e:	00 00                	add    %al,(%rax)
     b60:	00 0a                	add    %cl,(%rdx)
     b62:	00 00                	add    %al,(%rax)
     b64:	00 ec                	add    %ch,%ah
     b66:	01 00                	add    %eax,(%rax)
     b68:	00 00                	add    %al,(%rax)
     b6a:	40 21 00             	rex and %eax,(%rax)
	...
     e91:	00 00                	add    %al,(%rax)
     e93:	40 00 00             	rex add %al,(%rax)
	...
     ea6:	00 00                	add    %al,(%rax)
     ea8:	00 80 31 01 00 00    	add    %al,0x131(%rax)
     eae:	00 00                	add    %al,(%rax)
     eb0:	00 a8 07 00 00 e0    	add    %ch,-0x1ffffff9(%rax)
     eb6:	06                   	(bad)  
	...
     ec7:	00 00                	add    %al,(%rax)
     ec9:	3c 00                	cmp    $0x0,%al
     ecb:	00 00                	add    %al,(%rax)
     ecd:	00 00                	add    %al,(%rax)
     ecf:	00 00                	add    %al,(%rax)
     ed1:	88 0e                	mov    %cl,(%rsi)
     ed3:	00 00                	add    %al,(%rax)
     ed5:	02 00                	add    (%rax),%al
	...
     ee7:	00 00                	add    %al,(%rax)
     ee9:	28 00                	sub    %al,(%rax)
     eeb:	00 00                	add    %al,(%rax)
     eed:	00 00                	add    %al,(%rax)
     eef:	00 00                	add    %al,(%rax)
     ef1:	88 0e                	mov    %cl,(%rsi)
     ef3:	00 00                	add    %al,(%rax)
     ef5:	08 00                	or     %al,(%rax)
	...
     f07:	00 00                	add    %al,(%rax)
     f09:	3e 00 00             	ds add %al,(%rax)
     f0c:	00 00                	add    %al,(%rax)
     f0e:	00 00                	add    %al,(%rax)
     f10:	00 88 0e 00 00 02    	add    %cl,0x200000e(%rax)
	...
     f26:	00 00                	add    %al,(%rax)
     f28:	00 01                	add    %al,(%rcx)
     f2a:	00 01                	add    %al,(%rcx)
     f2c:	00 01                	add    %al,(%rcx)
     f2e:	00 00                	add    %al,(%rax)
     f30:	00 00                	add    %al,(%rax)
     f32:	c0 02 00             	rolb   $0x0,(%rdx)
	...
     f41:	03 02                	add    (%rdx),%eax
     f43:	00 00                	add    %al,(%rax)
     f45:	00 00                	add    %al,(%rax)
     f47:	00 00                	add    %al,(%rax)
     f49:	02 00                	add    (%rax),%al
     f4b:	11 00                	adc    %eax,(%rax)
     f4d:	ff 00                	incl   (%rax)
     f4f:	00 00                	add    %al,(%rax)
     f51:	00 d0                	add    %dl,%al
     f53:	02 00                	add    (%rax),%al
	...
     f61:	03 02                	add    (%rdx),%eax
     f63:	00 00                	add    %al,(%rax)
     f65:	00 00                	add    %al,(%rax)
     f67:	00 00                	add    %al,(%rax)
     f69:	0a 00                	or     (%rax),%al
     f6b:	00 00                	add    %al,(%rax)
     f6d:	10 00                	adc    %al,(%rax)
     f6f:	00 00                	add    %al,(%rax)
     f71:	00 c0                	add    %al,%al
     f73:	12 00                	adc    (%rax),%al
	...
     f89:	07                   	(bad)  
     f8a:	00 53 00             	add    %dl,0x0(%rbx)
     f8d:	3e 00 00             	ds add %al,(%rax)
     f90:	00 00                	add    %al,(%rax)
     f92:	c0 13 00             	rclb   $0x0,(%rbx)
     f95:	00 00                	add    %al,(%rax)
     f97:	00 00                	add    %al,(%rax)
     f99:	cc                   	int3   
     f9a:	cc                   	int3   
     f9b:	cc                   	int3   
     f9c:	cc                   	int3   
     f9d:	00 00                	add    %al,(%rax)
     f9f:	00 00                	add    %al,(%rax)
     fa1:	03 02                	add    (%rdx),%eax
     fa3:	00 00                	add    %al,(%rax)
     fa5:	00 00                	add    %al,(%rax)
     fa7:	00 00                	add    %al,(%rax)
     fa9:	08 00                	or     %al,(%rax)
     fab:	03 00                	add    (%rax),%eax
     fad:	02 00                	add    (%rax),%al
     faf:	00 00                	add    %al,(%rax)
     fb1:	00 a0 17 00 00 00    	add    %ah,0x17(%rax)
     fb7:	00 00                	add    %al,(%rax)
     fb9:	cc                   	int3   
     fba:	cc                   	int3   
     fbb:	cc                   	int3   
     fbc:	cc                   	int3   
     fbd:	00 00                	add    %al,(%rax)
     fbf:	00 00                	add    %al,(%rax)
     fc1:	03 02                	add    (%rdx),%eax
     fc3:	00 00                	add    %al,(%rax)
     fc5:	00 00                	add    %al,(%rax)
     fc7:	00 00                	add    %al,(%rax)
     fc9:	0a 00                	or     (%rax),%al
     fcb:	00 00                	add    %al,(%rax)
     fcd:	10 00                	adc    %al,(%rax)
     fcf:	00 00                	add    %al,(%rax)
     fd1:	00 c0                	add    %al,%al
     fd3:	17                   	(bad)  
	...
     fe8:	00 04 00             	add    %al,(%rax,%rax,1)
     feb:	03 00                	add    (%rax),%eax
     fed:	01 00                	add    %eax,(%rax)
     fef:	00 00                	add    %al,(%rax)
     ff1:	00 c0                	add    %al,%al
     ff3:	18 00                	sbb    %al,(%rax)
     ff5:	00 00                	add    %al,(%rax)
     ff7:	00 00                	add    %al,(%rax)
     ff9:	48 00 00             	rex.W add %al,(%rax)
     ffc:	00 60 07             	add    %ah,0x7(%rax)
     fff:	00 00                	add    %al,(%rax)
    1001:	00 01                	add    %al,(%rcx)
    1003:	00 00                	add    %al,(%rax)
    1005:	00 00                	add    %al,(%rax)
    1007:	00 00                	add    %al,(%rax)
    1009:	06                   	(bad)  
    100a:	00 03                	add    %al,(%rbx)
    100c:	00 02                	add    %al,(%rdx)
    100e:	00 00                	add    %al,(%rax)
    1010:	00 00                	add    %al,(%rax)
    1012:	d0 18                	rcrb   (%rax)
	...
    1020:	00 03                	add    %al,(%rbx)
    1022:	02 00                	add    (%rax),%al
    1024:	00 00                	add    %al,(%rax)
    1026:	00 00                	add    %al,(%rax)
    1028:	00 0a                	add    %cl,(%rdx)
    102a:	00 00                	add    %al,(%rax)
    102c:	00 10                	add    %dl,(%rax)
    102e:	00 00                	add    %al,(%rax)
    1030:	00 00                	add    %al,(%rax)
    1032:	f0 18 00             	lock sbb %al,(%rax)
	...
    1049:	05 00 03 00 01       	add    $0x1000300,%eax
    104e:	00 00                	add    %al,(%rax)
    1050:	00 00                	add    %al,(%rax)
    1052:	f0 19 00             	lock sbb %eax,(%rax)
	...
    1061:	03 02                	add    (%rdx),%eax
    1063:	00 00                	add    %al,(%rax)
    1065:	00 00                	add    %al,(%rax)
    1067:	00 00                	add    %al,(%rax)
    1069:	09 10                	or     %edx,(%rax)
    106b:	08 00                	or     %al,(%rax)
    106d:	01 00                	add    %eax,(%rax)
    106f:	00 00                	add    %al,(%rax)
    1071:	00 40 07             	add    %al,0x7(%rax)
	...

Disassembly of section .debug_aranges:

0000000000000000 <.debug_aranges>:
   0:	2c 00                	sub    $0x0,%al
   2:	00 00                	add    %al,(%rax)
   4:	02 00                	add    (%rax),%al
   6:	00 00                	add    %al,(%rax)
   8:	00 00                	add    %al,(%rax)
   a:	08 00                	or     %al,(%rax)
   c:	00 00                	add    %al,(%rax)
   e:	00 00                	add    %al,(%rax)
  10:	63 20                	movsxd (%rax),%esp
  12:	00 00                	add    %al,(%rax)
  14:	00 00                	add    %al,(%rax)
  16:	00 00                	add    %al,(%rax)
  18:	db 00                	fildl  (%rax)
	...
  2e:	00 00                	add    %al,(%rax)
  30:	2c 00                	sub    $0x0,%al
  32:	00 00                	add    %al,(%rax)
  34:	02 00                	add    (%rax),%al
  36:	e7 02                	out    %eax,$0x2
  38:	00 00                	add    %al,(%rax)
  3a:	08 00                	or     %al,(%rax)
  3c:	00 00                	add    %al,(%rax)
  3e:	00 00                	add    %al,(%rax)
  40:	00 30                	add    %dh,(%rax)
  42:	00 00                	add    %al,(%rax)
  44:	00 00                	add    %al,(%rax)
  46:	00 00                	add    %al,(%rax)
  48:	06                   	(bad)  
  49:	10 00                	adc    %al,(%rax)
	...
  5f:	00 2c 00             	add    %ch,(%rax,%rax,1)
  62:	00 00                	add    %al,(%rax)
  64:	02 00                	add    (%rax),%al
  66:	10 03                	adc    %al,(%rbx)
  68:	00 00                	add    %al,(%rax)
  6a:	08 00                	or     %al,(%rax)
  6c:	00 00                	add    %al,(%rax)
  6e:	00 00                	add    %al,(%rax)
  70:	06                   	(bad)  
  71:	40 00 00             	rex add %al,(%rax)
  74:	00 00                	add    %al,(%rax)
  76:	00 00                	add    %al,(%rax)
  78:	56                   	push   %rsi
  79:	04 00                	add    $0x0,%al
	...

Disassembly of section .debug_info:

0000000000000000 <.debug_info>:
       0:	e3 02                	jrcxz  4 <__ImageBase+0x4>
       2:	00 00                	add    %al,(%rax)
       4:	05 00 01 08 00       	add    $0x80100,%eax
       9:	00 00                	add    %al,(%rax)
       b:	00 10                	add    %dl,(%rax)
       d:	2c 00                	sub    $0x0,%al
       f:	00 00                	add    %al,(%rax)
      11:	1d 00 00 00 00       	sbb    $0x0,%eax
      16:	07                   	(bad)  
      17:	00 00                	add    %al,(%rax)
      19:	00 63 20             	add    %ah,0x20(%rbx)
      1c:	00 00                	add    %al,(%rax)
      1e:	00 00                	add    %al,(%rax)
      20:	00 00                	add    %al,(%rax)
      22:	db 00                	fildl  (%rax)
	...
      2c:	00 00                	add    %al,(%rax)
      2e:	01 01                	add    %eax,(%rcx)
      30:	06                   	(bad)  
      31:	d3 00                	roll   %cl,(%rax)
      33:	00 00                	add    %al,(%rax)
      35:	01 01                	add    %eax,(%rcx)
      37:	08 d1                	or     %dl,%cl
      39:	00 00                	add    %al,(%rax)
      3b:	00 01                	add    %al,(%rcx)
      3d:	02 05 2c 01 00 00    	add    0x12c(%rip),%al        # 16f <__ImageBase+0x16f>
      43:	01 02                	add    %eax,(%rdx)
      45:	07                   	(bad)  
      46:	f1                   	icebp  
      47:	00 00                	add    %al,(%rax)
      49:	00 11                	add    %dl,(%rcx)
      4b:	04 05                	add    $0x5,%al
      4d:	69 6e 74 00 01 04 07 	imul   $0x7040100,0x74(%rsi),%ebp
      54:	e4 00                	in     $0x0,%al
      56:	00 00                	add    %al,(%rax)
      58:	01 08                	add    %ecx,(%rax)
      5a:	05 23 01 00 00       	add    $0x123,%eax
      5f:	05 36 01 00 00       	add    $0x136,%eax
      64:	02 2f                	add    (%rdi),%ch
      66:	1d 6b 00 00 00       	sbb    $0x6b,%eax
      6b:	01 08                	add    %ecx,(%rax)
      6d:	07                   	(bad)  
      6e:	df 00                	filds  (%rax)
      70:	00 00                	add    %al,(%rax)
      72:	05 41 01 00 00       	add    $0x141,%eax
      77:	02 66 1d             	add    0x1d(%rsi),%ah
      7a:	6b 00 00             	imul   $0x0,(%rax),%eax
      7d:	00 01                	add    %al,(%rcx)
      7f:	08 04 0c             	or     %al,(%rsp,%rcx,1)
      82:	01 00                	add    %eax,(%rax)
      84:	00 01                	add    %al,(%rcx)
      86:	04 04                	add    $0x4,%al
      88:	1e                   	(bad)  
      89:	00 00                	add    %al,(%rax)
      8b:	00 02                	add    %al,(%rdx)
      8d:	4a 00 00             	rex.WX add %al,(%rax)
      90:	00 01                	add    %al,(%rcx)
      92:	01 06                	add    %eax,(%rsi)
      94:	da 00                	fiaddl (%rax)
      96:	00 00                	add    %al,(%rax)
      98:	12 91 00 00 00 05    	adc    0x5000000(%rcx),%dl
      9e:	38 01                	cmp    %al,(%rcx)
      a0:	00 00                	add    %al,(%rax)
      a2:	03 3f                	add    (%rdi),%edi
      a4:	19 5f 00             	sbb    %ebx,0x0(%rdi)
      a7:	00 00                	add    %al,(%rax)
      a9:	05 43 01 00 00       	add    $0x143,%eax
      ae:	04 2a                	add    $0x2a,%al
      b0:	15 72 00 00 00       	adc    $0x72,%eax
      b5:	01 08                	add    %ecx,(%rax)
      b7:	05 1e 01 00 00       	add    $0x11e,%eax
      bc:	13 14 00             	adc    (%rax,%rax,1),%edx
      bf:	00 00                	add    %al,(%rax)
      c1:	10 05 03 08 e0 00    	adc    %al,0xe00803(%rip)        # e008ca <_end+0xdd58ba>
      c7:	00 00                	add    %al,(%rax)
      c9:	08 19                	or     %bl,(%rcx)
      cb:	01 00                	add    %eax,(%rax)
      cd:	00 04 8c             	add    %al,(%rsp,%rcx,4)
      d0:	00 00                	add    %al,(%rax)
      d2:	00 00                	add    %al,(%rax)
      d4:	08 13                	or     %dl,(%rbx)
      d6:	01 00                	add    %eax,(%rax)
      d8:	00 05 8c 00 00 00    	add    %al,0x8c(%rip)        # 16a <__ImageBase+0x16a>
      de:	08 00                	or     %al,(%rax)
      e0:	09 ca                	or     %ecx,%edx
      e2:	08 00                	or     %al,(%rax)
      e4:	00 08                	add    %cl,(%rax)
      e6:	07                   	(bad)  
      e7:	f5                   	cmc    
      e8:	00 00                	add    %al,(%rax)
      ea:	00 09                	add    %cl,(%rcx)
      ec:	03 08                	add    (%rax),%ecx
      ee:	80 01 00             	addb   $0x0,(%rcx)
      f1:	00 00                	add    %al,(%rax)
      f3:	00 00                	add    %al,(%rax)
      f5:	02 91 00 00 00 09    	add    0x9000000(%rcx),%dl
      fb:	24 00                	and    $0x0,%al
      fd:	00 00                	add    %al,(%rax)
      ff:	09 05 4a 00 00 00    	or     %eax,0x4a(%rip)        # 14f <__ImageBase+0x14f>
     105:	09 03                	or     %eax,(%rbx)
     107:	00 80 01 00 00 00    	add    %al,0x1(%rax)
     10d:	00 00                	add    %al,(%rax)
     10f:	14 6d                	adc    $0x6d,%al
     111:	73 70                	jae    183 <__ImageBase+0x183>
     113:	00 01                	add    %al,(%rcx)
     115:	0b 12                	or     (%rdx),%edx
     117:	bc 00 00 00 09       	mov    $0x9000000,%esp
     11c:	03 60 a1             	add    -0x5f(%rax),%esp
     11f:	01 00                	add    %eax,(%rax)
     121:	00 00                	add    %al,(%rax)
     123:	00 00                	add    %al,(%rax)
     125:	0a 04 01             	or     (%rcx,%rax,1),%al
     128:	00 00                	add    %al,(%rax)
     12a:	04 4e                	add    $0x4e,%al
     12c:	16                   	(bad)  
     12d:	f5                   	cmc    
     12e:	00 00                	add    %al,(%rax)
     130:	00 45 01             	add    %al,0x1(%rbp)
     133:	00 00                	add    %al,(%rax)
     135:	03 f5                	add    %ebp,%esi
     137:	00 00                	add    %al,(%rax)
     139:	00 03                	add    %al,(%rbx)
     13b:	45 01 00             	add    %r8d,(%r8)
     13e:	00 03                	add    %al,(%rbx)
     140:	a9 00 00 00 00       	test   $0x0,%eax
     145:	02 98 00 00 00 0b    	add    0xb000000(%rax),%bl
     14b:	00 00                	add    %al,(%rax)
     14d:	00 00                	add    %al,(%rax)
     14f:	4a 00 00             	rex.WX add %al,(%rax)
     152:	00 59 01             	add    %bl,0x1(%rcx)
     155:	00 00                	add    %al,(%rax)
     157:	0c 00                	or     $0x0,%al
     159:	0a 4a 01             	or     0x1(%rdx),%cl
     15c:	00 00                	add    %al,(%rax)
     15e:	06                   	(bad)  
     15f:	40 0c 4a             	rex or $0x4a,%al
     162:	00 00                	add    %al,(%rax)
     164:	00 74 01 00          	add    %dh,0x0(%rcx,%rax,1)
     168:	00 03                	add    %al,(%rbx)
     16a:	74 01                	je     16d <__ImageBase+0x16d>
     16c:	00 00                	add    %al,(%rax)
     16e:	03 a9 00 00 00 00    	add    0x0(%rcx),%ebp
     174:	02 79 01             	add    0x1(%rcx),%bh
     177:	00 00                	add    %al,(%rax)
     179:	15 06 c0 08 00       	adc    $0x8c006,%eax
     17e:	00 27                	add    %ah,(%rdi)
     180:	0b 21                	or     (%rcx),%esp
     182:	00 00                	add    %al,(%rax)
     184:	00 00                	add    %al,(%rax)
     186:	00 00                	add    %al,(%rax)
     188:	33 00                	xor    (%rax),%eax
     18a:	00 00                	add    %al,(%rax)
     18c:	00 00                	add    %al,(%rax)
     18e:	00 00                	add    %al,(%rax)
     190:	01 9c e5 01 00 00 0d 	add    %ebx,0xd000001(%rbp,%riz,8)
     197:	70 69                	jo     202 <__ImageBase+0x202>
     199:	6e                   	outsb  %ds:(%rsi),(%dx)
     19a:	00 27                	add    %ah,(%rdi)
     19c:	1b 4a 00             	sbb    0x0(%rdx),%ecx
     19f:	00 00                	add    %al,(%rax)
     1a1:	10 00                	adc    %al,(%rax)
     1a3:	00 00                	add    %al,(%rax)
     1a5:	0c 00                	or     $0x0,%al
     1a7:	00 00                	add    %al,(%rax)
     1a9:	07                   	(bad)  
     1aa:	1e                   	(bad)  
     1ab:	04 00                	add    $0x0,%al
     1ad:	00 27                	add    %ah,(%rdi)
     1af:	26 f5                	es cmc 
     1b1:	00 00                	add    %al,(%rax)
     1b3:	00 28                	add    %ch,(%rax)
     1b5:	00 00                	add    %al,(%rax)
     1b7:	00 22                	add    %ah,(%rdx)
     1b9:	00 00                	add    %al,(%rax)
     1bb:	00 07                	add    %al,(%rdi)
     1bd:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
     1be:	0a 00                	or     (%rax),%al
     1c0:	00 27                	add    %ah,(%rdi)
     1c2:	36 a9 00 00 00 47    	ss test $0x47000000,%eax
     1c8:	00 00                	add    %al,(%rax)
     1ca:	00 41 00             	add    %al,0x0(%rcx)
     1cd:	00 00                	add    %al,(%rax)
     1cf:	0e                   	(bad)  
     1d0:	37                   	(bad)  
     1d1:	21 00                	and    %eax,(%rax)
     1d3:	00 00                	add    %al,(%rax)
     1d5:	00 00                	add    %al,(%rax)
     1d7:	00 25 01 00 00 04    	add    %ah,0x4000001(%rip)        # 40001de <_end+0x3fd51ce>
     1dd:	01 55 03             	add    %edx,0x3(%rbp)
     1e0:	a3 01 54 00 00 16 0e 	movabs %eax,0x90e1600005401
     1e7:	09 00 
     1e9:	00 01                	add    %al,(%rcx)
     1eb:	20 06                	and    %al,(%rsi)
     1ed:	d5                   	(bad)  
     1ee:	20 00                	and    %al,(%rax)
     1f0:	00 00                	add    %al,(%rax)
     1f2:	00 00                	add    %al,(%rax)
     1f4:	00 36                	add    %dh,(%rsi)
     1f6:	00 00                	add    %al,(%rax)
     1f8:	00 00                	add    %al,(%rax)
     1fa:	00 00                	add    %al,(%rax)
     1fc:	00 01                	add    %al,(%rcx)
     1fe:	9c                   	pushf  
     1ff:	4d 02 00             	rex.WRB add (%r8),%r8b
     202:	00 0b                	add    %cl,(%rbx)
     204:	00 00                	add    %al,(%rax)
     206:	00 00                	add    %al,(%rax)
     208:	4a 00 00             	rex.WX add %al,(%rax)
     20b:	00 12                	add    %dl,(%rdx)
     20d:	02 00                	add    (%rax),%al
     20f:	00 0c 00             	add    %cl,(%rax,%rax,1)
     212:	0f f2 20             	pslld  (%rax),%mm4
     215:	00 00                	add    %al,(%rax)
     217:	00 00                	add    %al,(%rax)
     219:	00 00                	add    %al,(%rax)
     21b:	4a 01 00             	rex.WX add %rax,(%rax)
     21e:	00 31                	add    %dh,(%rcx)
     220:	02 00                	add    (%rax),%al
     222:	00 04 01             	add    %al,(%rcx,%rax,1)
     225:	55                   	push   %rbp
     226:	09 03                	or     %eax,(%rbx)
     228:	00 30                	add    %dh,(%rax)
     22a:	01 00                	add    %eax,(%rax)
     22c:	00 00                	add    %al,(%rax)
     22e:	00 00                	add    %al,(%rax)
     230:	00 17                	add    %dl,(%rdi)
     232:	0b 21                	or     (%rcx),%esp
     234:	00 00                	add    %al,(%rax)
     236:	00 00                	add    %al,(%rax)
     238:	00 00                	add    %al,(%rax)
     23a:	4a 01 00             	rex.WX add %rax,(%rax)
     23d:	00 04 01             	add    %al,(%rcx,%rax,1)
     240:	55                   	push   %rbp
     241:	09 03                	or     %eax,(%rbx)
     243:	05 30 01 00 00       	add    $0x130,%eax
     248:	00 00                	add    %al,(%rax)
     24a:	00 00                	add    %al,(%rax)
     24c:	00 06                	add    %al,(%rsi)
     24e:	ad                   	lods   %ds:(%rsi),%eax
     24f:	03 00                	add    (%rax),%eax
     251:	00 19                	add    %bl,(%rcx)
     253:	ae                   	scas   %es:(%rdi),%al
     254:	20 00                	and    %al,(%rax)
     256:	00 00                	add    %al,(%rax)
     258:	00 00                	add    %al,(%rax)
     25a:	00 27                	add    %ah,(%rdi)
     25c:	00 00                	add    %al,(%rax)
     25e:	00 00                	add    %al,(%rax)
     260:	00 00                	add    %al,(%rax)
     262:	00 01                	add    %al,(%rcx)
     264:	9c                   	pushf  
     265:	87 02                	xchg   %eax,(%rdx)
     267:	00 00                	add    %al,(%rax)
     269:	0d 69 00 19 21       	or     $0x21190069,%eax
     26e:	4a 00 00             	rex.WX add %al,(%rax)
     271:	00 64 00 00          	add    %ah,0x0(%rax,%rax,1)
     275:	00 60 00             	add    %ah,0x0(%rax)
     278:	00 00                	add    %al,(%rax)
     27a:	18 6a 00             	sbb    %ch,0x0(%rdx)
     27d:	01 19                	add    %ebx,(%rcx)
     27f:	28 4a 00             	sub    %cl,0x0(%rdx)
     282:	00 00                	add    %al,(%rax)
     284:	01 54 00 06          	add    %edx,0x6(%rax,%rax,1)
     288:	fc                   	cld    
     289:	07                   	(bad)  
     28a:	00 00                	add    %al,(%rax)
     28c:	0d 63 20 00 00       	or     $0x2063,%eax
     291:	00 00                	add    %al,(%rax)
     293:	00 00                	add    %al,(%rax)
     295:	4b 00 00             	rex.WXB add %al,(%r8)
     298:	00 00                	add    %al,(%rax)
     29a:	00 00                	add    %al,(%rax)
     29c:	00 01                	add    %al,(%rcx)
     29e:	9c                   	pushf  
     29f:	e1 02                	loope  2a3 <__ImageBase+0x2a3>
     2a1:	00 00                	add    %al,(%rax)
     2a3:	07                   	(bad)  
     2a4:	3c 07                	cmp    $0x7,%al
     2a6:	00 00                	add    %al,(%rax)
     2a8:	0d 32 e1 02 00       	or     $0x2e132,%eax
     2ad:	00 76 00             	add    %dh,0x0(%rsi)
     2b0:	00 00                	add    %al,(%rax)
     2b2:	72 00                	jb     2b4 <__ImageBase+0x2b4>
     2b4:	00 00                	add    %al,(%rax)
     2b6:	0f 81 20 00 00 00    	jno    2dc <__ImageBase+0x2dc>
     2bc:	00 00                	add    %al,(%rax)
     2be:	00 59 01             	add    %bl,0x1(%rcx)
     2c1:	00 00                	add    %al,(%rax)
     2c3:	cd 02                	int    $0x2
     2c5:	00 00                	add    %al,(%rax)
     2c7:	04 01                	add    $0x1,%al
     2c9:	54                   	push   %rsp
     2ca:	01 34 00             	add    %esi,(%rax,%rax,1)
     2cd:	0e                   	(bad)  
     2ce:	a8 20                	test   $0x20,%al
     2d0:	00 00                	add    %al,(%rax)
     2d2:	00 00                	add    %al,(%rax)
     2d4:	00 00                	add    %al,(%rax)
     2d6:	59                   	pop    %rcx
     2d7:	01 00                	add    %eax,(%rax)
     2d9:	00 04 01             	add    %al,(%rcx,%rax,1)
     2dc:	54                   	push   %rsp
     2dd:	01 34 00             	add    %esi,(%rax,%rax,1)
     2e0:	00 02                	add    %al,(%rdx)
     2e2:	bc 00 00 00 00       	mov    $0x0,%esp
     2e7:	25 00 00 00 05       	and    $0x5000000,%eax
     2ec:	00 01                	add    %al,(%rcx)
     2ee:	08 6f 01             	or     %ch,0x1(%rdi)
     2f1:	00 00                	add    %al,(%rax)
     2f3:	01 33                	add    %esi,(%rbx)
     2f5:	01 00                	add    %eax,(%rax)
     2f7:	00 00                	add    %al,(%rax)
     2f9:	30 00                	xor    %al,(%rax)
     2fb:	00 00                	add    %al,(%rax)
     2fd:	00 00                	add    %al,(%rax)
     2ff:	00 86 20 61 01 00    	add    %al,0x16120(%rsi)
     305:	00 67 01             	add    %ah,0x1(%rdi)
     308:	00 00                	add    %al,(%rax)
     30a:	83 01 00             	addl   $0x0,(%rcx)
     30d:	00 01                	add    %al,(%rcx)
     30f:	80 24 0e 00          	andb   $0x0,(%rsi,%rcx,1)
     313:	00 05 00 01 08 83    	add    %al,-0x7cf7ff00(%rip)        # ffffffff83080419 <_end+0xffffffff83055409>
     319:	01 00                	add    %eax,(%rax)
     31b:	00 21                	add    %ah,(%rcx)
     31d:	2c 00                	sub    $0x0,%al
     31f:	00 00                	add    %al,(%rax)
     321:	1d bb 00 00 00       	sbb    $0xbb,%eax
     326:	07                   	(bad)  
     327:	00 00                	add    %al,(%rax)
     329:	00 06                	add    %al,(%rsi)
     32b:	40 00 00             	rex add %al,(%rax)
     32e:	00 00                	add    %al,(%rax)
     330:	00 00                	add    %al,(%rax)
     332:	56                   	push   %rsi
     333:	04 00                	add    $0x0,%al
     335:	00 00                	add    %al,(%rax)
     337:	00 00                	add    %al,(%rax)
     339:	00 7c 01 00          	add    %bh,0x0(%rcx,%rax,1)
     33d:	00 07                	add    %al,(%rdi)
     33f:	01 06                	add    %eax,(%rsi)
     341:	d3 00                	roll   %cl,(%rax)
     343:	00 00                	add    %al,(%rax)
     345:	06                   	(bad)  
     346:	e0 01                	loopne 349 <__ImageBase+0x349>
     348:	00 00                	add    %al,(%rax)
     34a:	02 28                	add    (%rax),%ch
     34c:	1d 41 00 00 00       	sbb    $0x41,%eax
     351:	07                   	(bad)  
     352:	01 08                	add    %ecx,(%rax)
     354:	d1 00                	roll   (%rax)
     356:	00 00                	add    %al,(%rax)
     358:	07                   	(bad)  
     359:	02 05 2c 01 00 00    	add    0x12c(%rip),%al        # 48b <__ImageBase+0x48b>
     35f:	07                   	(bad)  
     360:	02 07                	add    (%rdi),%al
     362:	f1                   	icebp  
     363:	00 00                	add    %al,(%rax)
     365:	00 22                	add    %ah,(%rdx)
     367:	04 05                	add    $0x5,%al
     369:	69 6e 74 00 07 04 07 	imul   $0x7040700,0x74(%rsi),%ebp
     370:	e4 00                	in     $0x0,%al
     372:	00 00                	add    %al,(%rax)
     374:	0e                   	(bad)  
     375:	5d                   	pop    %rbp
     376:	00 00                	add    %al,(%rax)
     378:	00 07                	add    %al,(%rdi)
     37a:	08 05 23 01 00 00    	or     %al,0x123(%rip)        # 4a3 <__ImageBase+0x4a3>
     380:	06                   	(bad)  
     381:	36 01 00             	ss add %eax,(%rax)
     384:	00 02                	add    %al,(%rdx)
     386:	2f                   	(bad)  
     387:	1d 7c 00 00 00       	sbb    $0x7c,%eax
     38c:	07                   	(bad)  
     38d:	08 07                	or     %al,(%rdi)
     38f:	df 00                	filds  (%rax)
     391:	00 00                	add    %al,(%rax)
     393:	06                   	(bad)  
     394:	d1 08                	rorl   (%rax)
     396:	00 00                	add    %al,(%rax)
     398:	02 62 1d             	add    0x1d(%rdx),%ah
     39b:	70 00                	jo     39d <__ImageBase+0x39d>
     39d:	00 00                	add    %al,(%rax)
     39f:	06                   	(bad)  
     3a0:	41 01 00             	add    %eax,(%r8)
     3a3:	00 02                	add    %al,(%rdx)
     3a5:	66 1d 7c 00          	sbb    $0x7c,%ax
     3a9:	00 00                	add    %al,(%rax)
     3ab:	07                   	(bad)  
     3ac:	08 04 0c             	or     %al,(%rsp,%rcx,1)
     3af:	01 00                	add    %eax,(%rax)
     3b1:	00 07                	add    %al,(%rdi)
     3b3:	04 04                	add    $0x4,%al
     3b5:	1e                   	(bad)  
     3b6:	00 00                	add    %al,(%rax)
     3b8:	00 23                	add    %ah,(%rbx)
     3ba:	08 09                	or     %cl,(%rcx)
     3bc:	56                   	push   %rsi
     3bd:	00 00                	add    %al,(%rax)
     3bf:	00 07                	add    %al,(%rdi)
     3c1:	01 06                	add    %eax,(%rsi)
     3c3:	da 00                	fiaddl (%rax)
     3c5:	00 00                	add    %al,(%rax)
     3c7:	0e                   	(bad)  
     3c8:	b0 00                	mov    $0x0,%al
     3ca:	00 00                	add    %al,(%rax)
     3cc:	06                   	(bad)  
     3cd:	e2 01                	loop   3d0 <__ImageBase+0x3d0>
     3cf:	00 00                	add    %al,(%rax)
     3d1:	03 21                	add    (%rcx),%esp
     3d3:	19 35 00 00 00 06    	sbb    %esi,0x6000000(%rip)        # 60003d9 <_end+0x5fd53c9>
     3d9:	38 01                	cmp    %al,(%rcx)
     3db:	00 00                	add    %al,(%rax)
     3dd:	03 3f                	add    (%rdi),%edi
     3df:	19 70 00             	sbb    %esi,0x0(%rax)
     3e2:	00 00                	add    %al,(%rax)
     3e4:	06                   	(bad)  
     3e5:	d3 08                	rorl   %cl,(%rax)
     3e7:	00 00                	add    %al,(%rax)
     3e9:	03 5e 19             	add    0x19(%rsi),%ebx
     3ec:	83 00 00             	addl   $0x0,(%rax)
     3ef:	00 06                	add    %al,(%rsi)
     3f1:	43 01 00             	rex.XB add %eax,(%r8)
     3f4:	00 04 5e             	add    %al,(%rsi,%rbx,2)
     3f7:	15 8f 00 00 00       	adc    $0x8f,%eax
     3fc:	24 aa                	and    $0xaa,%al
     3fe:	07                   	(bad)  
     3ff:	00 00                	add    %al,(%rax)
     401:	07                   	(bad)  
     402:	04 5d                	add    $0x5d,%al
     404:	00 00                	add    %al,(%rax)
     406:	00 05 25 0e f5 02    	add    %al,0x2f50e25(%rip)        # 2f51231 <_end+0x2f26221>
     40c:	00 00                	add    %al,(%rax)
     40e:	0a c2                	or     %dl,%al
     410:	07                   	(bad)  
     411:	00 00                	add    %al,(%rax)
     413:	00 0a                	add    %cl,(%rdx)
     415:	91                   	xchg   %eax,%ecx
     416:	01 00                	add    %eax,(%rax)
     418:	00 01                	add    %al,(%rcx)
     41a:	0a 22                	or     (%rdx),%ah
     41c:	08 00                	or     %al,(%rax)
     41e:	00 02                	add    %al,(%rdx)
     420:	0a fd                	or     %ch,%bh
     422:	0b 00                	or     (%rax),%eax
     424:	00 03                	add    %al,(%rbx)
     426:	0a 94 08 00 00 04 0a 	or     0xa040000(%rax,%rcx,1),%dl
     42d:	4a 07                	rex.WX (bad) 
     42f:	00 00                	add    %al,(%rax)
     431:	05 0a a2 09 00       	add    $0x9a20a,%eax
     436:	00 08                	add    %cl,(%rax)
     438:	0a c2                	or     %dl,%al
     43a:	01 00                	add    %eax,(%rax)
     43c:	00 09                	add    %cl,(%rcx)
     43e:	0a 8c 03 00 00 0a 02 	or     0x20a0000(%rbx,%rax,1),%cl
     445:	6c                   	insb   (%dx),%es:(%rdi)
     446:	09 00                	or     %eax,(%rax)
     448:	00 01                	add    %al,(%rcx)
     44a:	10 02                	adc    %al,(%rdx)
     44c:	1e                   	(bad)  
     44d:	03 00                	add    (%rax),%eax
     44f:	00 03                	add    %al,(%rbx)
     451:	10 02                	adc    %al,(%rdx)
     453:	62                   	(bad)  
     454:	07                   	(bad)  
     455:	00 00                	add    %al,(%rax)
     457:	06                   	(bad)  
     458:	10 02                	adc    %al,(%rdx)
     45a:	26 04 00             	es add $0x0,%al
     45d:	00 07                	add    %al,(%rdi)
     45f:	10 02                	adc    %al,(%rdx)
     461:	15 0a 00 00 08       	adc    $0x800000a,%eax
     466:	10 02                	adc    %al,(%rdx)
     468:	fd                   	std    
     469:	0a 00                	or     (%rax),%al
     46b:	00 09                	add    %cl,(%rcx)
     46d:	10 02                	adc    %al,(%rdx)
     46f:	dd 03                	fldl   (%rbx)
     471:	00 00                	add    %al,(%rax)
     473:	00 20                	add    %ah,(%rax)
     475:	02 ff                	add    %bh,%bh
     477:	03 00                	add    (%rax),%eax
     479:	00 01                	add    %al,(%rcx)
     47b:	20 02                	and    %al,(%rdx)
     47d:	08 02                	or     %al,(%rdx)
     47f:	00 00                	add    %al,(%rax)
     481:	02 20                	add    (%rax),%ah
     483:	02 25 02 00 00 03    	add    0x3000002(%rip),%ah        # 300048b <_end+0x2fd547b>
     489:	20 02                	and    %al,(%rdx)
     48b:	dd 0a                	fisttpll (%rdx)
     48d:	00 00                	add    %al,(%rax)
     48f:	04 20                	add    $0x20,%al
     491:	02 92 07 00 00 05    	add    0x5000007(%rdx),%dl
     497:	20 02                	and    %al,(%rdx)
     499:	4b 0a 00             	rex.WXB or (%r8),%al
     49c:	00 06                	add    %al,(%rsi)
     49e:	20 02                	and    %al,(%rdx)
     4a0:	d4                   	(bad)  
     4a1:	0b 00                	or     (%rax),%eax
     4a3:	00 07                	add    %al,(%rdi)
     4a5:	20 02                	and    %al,(%rdx)
     4a7:	48 04 00             	rex.W add $0x0,%al
     4aa:	00 09                	add    %cl,(%rcx)
     4ac:	20 02                	and    %al,(%rdx)
     4ae:	7c 07                	jl     4b7 <__ImageBase+0x4b7>
     4b0:	00 00                	add    %al,(%rax)
     4b2:	0c 20                	or     $0x20,%al
     4b4:	02 40 09             	add    0x9(%rax),%al
     4b7:	00 00                	add    %al,(%rax)
     4b9:	0d 20 02 a6 01       	or     $0x1a60220,%eax
     4be:	00 00                	add    %al,(%rax)
     4c0:	0e                   	(bad)  
     4c1:	20 02                	and    %al,(%rdx)
     4c3:	68 02 00 00 0f       	push   $0xf000002
     4c8:	20 02                	and    %al,(%rdx)
     4ca:	c2 09 00             	ret    $0x9
     4cd:	00 10                	add    %dl,(%rax)
     4cf:	20 02                	and    %al,(%rdx)
     4d1:	21 09                	and    %ecx,(%rcx)
     4d3:	00 00                	add    %al,(%rax)
     4d5:	11 20                	adc    %esp,(%rax)
     4d7:	02 ac 0a 00 00 01 30 	add    0x30010000(%rdx,%rcx,1),%ch
     4de:	02 bf 06 00 00 02    	add    0x2000006(%rdi),%bh
     4e4:	30 02                	xor    %al,(%rdx)
     4e6:	ca 04 00             	lret   $0x4
     4e9:	00 03                	add    %al,(%rbx)
     4eb:	30 02                	xor    %al,(%rdx)
     4ed:	33 03                	xor    (%rbx),%eax
     4ef:	00 00                	add    %al,(%rax)
     4f1:	04 30                	add    $0x30,%al
     4f3:	02 31                	add    (%rcx),%dh
     4f5:	0a 00                	or     (%rax),%al
     4f7:	00 05 30 02 fb 05    	add    %al,0x5fb0230(%rip)        # 5fb072d <_end+0x5f8571d>
     4fd:	00 00                	add    %al,(%rax)
     4ff:	01 40 02             	add    %eax,0x2(%rax)
     502:	80 04 00 00          	addb   $0x0,(%rax,%rax,1)
     506:	02 40 02             	add    0x2(%rax),%al
     509:	73 06                	jae    511 <__ImageBase+0x511>
     50b:	00 00                	add    %al,(%rax)
     50d:	03 40 02             	add    0x2(%rax),%eax
     510:	46 05 00 00 04 40    	rex.RX add $0x40040000,%eax
     516:	02 b6 05 00 00 05    	add    0x5000005(%rsi),%dh
     51c:	40 02 aa 0b 00 00 06 	add    0x600000b(%rdx),%bpl
     523:	40 02 c3             	rex add %bl,%al
     526:	0a 00                	or     (%rax),%al
     528:	00 07                	add    %al,(%rdi)
     52a:	40 02 1a             	rex add (%rdx),%bl
     52d:	07                   	(bad)  
     52e:	00 00                	add    %al,(%rax)
     530:	08 40 02             	or     %al,0x2(%rax)
     533:	8f 05 00 00 0a 40    	pop    0x400a0000(%rip)        # 400a0539 <_end+0x40075529>
     539:	02 ea                	add    %dl,%ch
     53b:	01 00                	add    %eax,(%rax)
     53d:	00 0c 40             	add    %cl,(%rax,%rax,2)
     540:	02 63 04             	add    0x4(%rbx),%ah
     543:	00 00                	add    %al,(%rax)
     545:	0d 40 02 7c 0a       	or     $0xa7c0240,%eax
     54a:	00 00                	add    %al,(%rax)
     54c:	0e                   	(bad)  
     54d:	40 02 9e 05 00 00 0f 	rex add 0xf000005(%rsi),%bl
     554:	40 02 d9             	rex add %cl,%bl
     557:	09 00                	or     %eax,(%rax)
     559:	00 11                	add    %dl,(%rcx)
     55b:	40 02 26             	add    (%rsi),%spl
     55e:	05 00 00 12 40       	add    $0x40120000,%eax
     563:	02 4b 02             	add    0x2(%rbx),%cl
     566:	00 00                	add    %al,(%rax)
     568:	13 40 02             	adc    0x2(%rax),%eax
     56b:	e1 07                	loope  574 <__ImageBase+0x574>
     56d:	00 00                	add    %al,(%rax)
     56f:	02 50 02             	add    0x2(%rax),%dl
     572:	02 07                	add    (%rdi),%al
     574:	00 00                	add    %al,(%rax)
     576:	01 60 02             	add    %esp,0x2(%rax)
     579:	4a 06                	rex.WX (bad) 
     57b:	00 00                	add    %al,(%rax)
     57d:	02 60 02             	add    0x2(%rax),%ah
     580:	87 09                	xchg   %ecx,(%rcx)
     582:	00 00                	add    %al,(%rax)
     584:	03 60 02             	add    0x2(%rax),%esp
     587:	aa                   	stos   %al,%es:(%rdi)
     588:	04 00                	add    $0x0,%al
     58a:	00 04 60             	add    %al,(%rax,%riz,2)
     58d:	02 4c 08 00          	add    0x0(%rax,%rcx,1),%cl
     591:	00 05 60 02 ed 04    	add    %al,0x4ed0260(%rip)        # 4ed07f7 <_end+0x4ea57e7>
     597:	00 00                	add    %al,(%rax)
     599:	01 70 02             	add    %esi,0x2(%rax)
     59c:	dd 02                	fldl   (%rdx)
     59e:	00 00                	add    %al,(%rax)
     5a0:	02 70 02             	add    0x2(%rax),%dh
     5a3:	5f                   	pop    %rdi
     5a4:	0a 00                	or     (%rax),%al
     5a6:	00 03                	add    %al,(%rbx)
     5a8:	70 02                	jo     5ac <__ImageBase+0x5ac>
     5aa:	8f 02                	pop    (%rdx)
     5ac:	00 00                	add    %al,(%rax)
     5ae:	04 70                	add    $0x70,%al
     5b0:	02 db                	add    %bl,%bl
     5b2:	06                   	(bad)  
     5b3:	00 00                	add    %al,(%rax)
     5b5:	05 70 02 f6 02       	add    $0x2f60270,%eax
     5ba:	00 00                	add    %al,(%rax)
     5bc:	06                   	(bad)  
     5bd:	70 02                	jo     5c1 <__ImageBase+0x5c1>
     5bf:	d4                   	(bad)  
     5c0:	05 00 00 07 70       	add    $0x70070000,%eax
     5c5:	02 6a 05             	add    0x5(%rdx),%ch
     5c8:	00 00                	add    %al,(%rax)
     5ca:	08 70 02             	or     %dh,0x2(%rax)
     5cd:	70 03                	jo     5d2 <__ImageBase+0x5d2>
     5cf:	00 00                	add    %al,(%rax)
     5d1:	09 70 02             	or     %esi,0x2(%rax)
     5d4:	58                   	pop    %rax
     5d5:	0b 00                	or     (%rax),%eax
     5d7:	00 01                	add    %al,(%rcx)
     5d9:	80 02 82             	addb   $0x82,(%rdx)
     5dc:	0b 00                	or     (%rax),%eax
     5de:	00 02                	add    %al,(%rdx)
     5e0:	80 02 2a             	addb   $0x2a,(%rdx)
     5e3:	06                   	(bad)  
     5e4:	00 00                	add    %al,(%rax)
     5e6:	03 80 02 28 0b 00    	add    0xb2802(%rax),%eax
     5ec:	00 04 80             	add    %al,(%rax,%rax,4)
     5ef:	02 4c 03 00          	add    0x0(%rbx,%rax,1),%cl
     5f3:	00 05 80 02 f0 09    	add    %al,0x9f00280(%rip)        # 9f00879 <_end+0x9ed5869>
     5f9:	00 00                	add    %al,(%rax)
     5fb:	01 90 02 91 06 00    	add    %edx,0x69102(%rax)
     601:	00 01                	add    %al,(%rcx)
     603:	f0 00 06             	lock add %al,(%rsi)
     606:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
     607:	07                   	(bad)  
     608:	00 00                	add    %al,(%rax)
     60a:	05 7e 03 ec 00       	add    $0xec037e,%eax
     60f:	00 00                	add    %al,(%rax)
     611:	07                   	(bad)  
     612:	08 05 1e 01 00 00    	or     %al,0x11e(%rip)        # 736 <__ImageBase+0x736>
     618:	0c 14                	or     $0x14,%al
     61a:	00 00                	add    %al,(%rax)
     61c:	00 10                	add    %dl,(%rax)
     61e:	06                   	(bad)  
     61f:	14 2f                	adc    $0x2f,%al
     621:	03 00                	add    (%rax),%eax
     623:	00 05 19 01 00 00    	add    %al,0x119(%rip)        # 742 <__ImageBase+0x742>
     629:	06                   	(bad)  
     62a:	15 07 ab 00 00       	adc    $0xab07,%eax
     62f:	00 00                	add    %al,(%rax)
     631:	05 13 01 00 00       	add    $0x113,%eax
     636:	06                   	(bad)  
     637:	16                   	(bad)  
     638:	07                   	(bad)  
     639:	ab                   	stos   %eax,%es:(%rdi)
     63a:	00 00                	add    %al,(%rax)
     63c:	00 08                	add    %cl,(%rax)
     63e:	00 06                	add    %al,(%rsi)
     640:	ce                   	(bad)  
     641:	07                   	(bad)  
     642:	00 00                	add    %al,(%rax)
     644:	07                   	(bad)  
     645:	30 0d 56 00 00 00    	xor    %cl,0x56(%rip)        # 6a1 <__ImageBase+0x6a1>
     64b:	0c 07                	or     $0x7,%al
     64d:	05 00 00 08 01       	add    $0x1080000,%eax
     652:	1e                   	(bad)  
     653:	55                   	push   %rbp
     654:	03 00                	add    (%rax),%eax
     656:	00 05 19 06 00 00    	add    %al,0x619(%rip)        # c75 <__ImageBase+0xc75>
     65c:	01 1f                	add    %ebx,(%rdi)
     65e:	14 55                	adc    $0x55,%al
     660:	03 00                	add    (%rax),%eax
     662:	00 00                	add    %al,(%rax)
     664:	00 09                	add    %cl,(%rcx)
     666:	08 03                	or     %al,(%rbx)
     668:	00 00                	add    %al,(%rax)
     66a:	06                   	(bad)  
     66b:	07                   	(bad)  
     66c:	05 00 00 01 20       	add    $0x20010000,%eax
     671:	03 3b                	add    (%rbx),%edi
     673:	03 00                	add    (%rax),%eax
     675:	00 0c ab             	add    %cl,(%rbx,%rbp,4)
     678:	02 00                	add    (%rax),%al
     67a:	00 08                	add    %cl,(%rax)
     67c:	01 22                	add    %esp,(%rdx)
     67e:	8d 03                	lea    (%rbx),%eax
     680:	00 00                	add    %al,(%rax)
     682:	05 e3 04 00 00       	add    $0x4e3,%eax
     687:	01 23                	add    %esp,(%rbx)
     689:	06                   	(bad)  
     68a:	56                   	push   %rsi
     68b:	00 00                	add    %al,(%rax)
     68d:	00 00                	add    %al,(%rax)
     68f:	05 e8 04 00 00       	add    $0x4e8,%eax
     694:	01 24 06             	add    %esp,(%rsi,%rax,1)
     697:	56                   	push   %rsi
     698:	00 00                	add    %al,(%rax)
     69a:	00 04 00             	add    %al,(%rax,%rax,1)
     69d:	06                   	(bad)  
     69e:	ab                   	stos   %eax,%es:(%rdi)
     69f:	02 00                	add    (%rax),%al
     6a1:	00 01                	add    %al,(%rcx)
     6a3:	25 03 66 03 00       	and    $0x36603,%eax
     6a8:	00 0c 7e             	add    %cl,(%rsi,%rdi,2)
     6ab:	08 00                	or     %al,(%rax)
     6ad:	00 18                	add    %bl,(%rax)
     6af:	01 27                	add    %esp,(%rdi)
     6b1:	cd 03                	int    $0x3
     6b3:	00 00                	add    %al,(%rax)
     6b5:	05 f8 03 00 00       	add    $0x3f8,%eax
     6ba:	01 28                	add    %ebp,(%rax)
     6bc:	06                   	(bad)  
     6bd:	56                   	push   %rsi
     6be:	00 00                	add    %al,(%rax)
     6c0:	00 00                	add    %al,(%rax)
     6c2:	05 f2 0b 00 00       	add    $0xbf2,%eax
     6c7:	01 29                	add    %ebp,(%rcx)
     6c9:	08 cd                	or     %cl,%ch
     6cb:	03 00                	add    (%rax),%eax
     6cd:	00 08                	add    %cl,(%rax)
     6cf:	05 15 0c 00 00       	add    $0xc15,%eax
     6d4:	01 2a                	add    %ebp,(%rdx)
     6d6:	09 e0                	or     %esp,%eax
     6d8:	00 00                	add    %al,(%rax)
     6da:	00 10                	add    %dl,(%rax)
     6dc:	00 09                	add    %cl,(%rcx)
     6de:	b0 00                	mov    $0x0,%al
     6e0:	00 00                	add    %al,(%rax)
     6e2:	06                   	(bad)  
     6e3:	7e 08                	jle    6ed <__ImageBase+0x6ed>
     6e5:	00 00                	add    %al,(%rax)
     6e7:	01 2b                	add    %ebp,(%rbx)
     6e9:	03 99 03 00 00 0c    	add    0xc000003(%rcx),%ebx
     6ef:	ab                   	stos   %eax,%es:(%rdi)
     6f0:	08 00                	or     %al,(%rax)
     6f2:	00 08                	add    %cl,(%rax)
     6f4:	01 2d f8 03 00 00    	add    %ebp,0x3f8(%rip)        # af2 <__ImageBase+0xaf2>
     6fa:	05 01 02 00 00       	add    $0x201,%eax
     6ff:	01 2e                	add    %ebp,(%rsi)
     701:	0e                   	(bad)  
     702:	f8                   	clc    
     703:	03 00                	add    (%rax),%eax
     705:	00 00                	add    %al,(%rax)
     707:	00 09                	add    %cl,(%rcx)
     709:	b7 00                	mov    $0x0,%bh
     70b:	00 00                	add    %al,(%rax)
     70d:	06                   	(bad)  
     70e:	ab                   	stos   %eax,%es:(%rdi)
     70f:	08 00                	or     %al,(%rax)
     711:	00 01                	add    %al,(%rcx)
     713:	2f                   	(bad)  
     714:	03 de                	add    %esi,%ebx
     716:	03 00                	add    (%rax),%eax
     718:	00 0c c4             	add    %cl,(%rsp,%rax,8)
     71b:	03 00                	add    (%rax),%eax
     71d:	00 10                	add    %dl,(%rax)
     71f:	01 31                	add    %esi,(%rcx)
     721:	30 04 00             	xor    %al,(%rax,%rax,1)
     724:	00 05 01 02 00 00    	add    %al,0x201(%rip)        # 92b <__ImageBase+0x92b>
     72a:	01 32                	add    %esi,(%rdx)
     72c:	0e                   	(bad)  
     72d:	f8                   	clc    
     72e:	03 00                	add    (%rax),%eax
     730:	00 00                	add    %al,(%rax)
     732:	05 c5 04 00 00       	add    $0x4c5,%eax
     737:	01 33                	add    %esi,(%rbx)
     739:	0b c8                	or     %eax,%ecx
     73b:	00 00                	add    %al,(%rax)
     73d:	00 08                	add    %cl,(%rax)
     73f:	00 06                	add    %al,(%rsi)
     741:	c4 03 00 00          	(bad)
     745:	01 34 03             	add    %esi,(%rbx,%rax,1)
     748:	09 04 00             	or     %eax,(%rax,%rax,1)
     74b:	00 11                	add    %dl,(%rcx)
     74d:	10 ba 02 6c 04 00    	adc    %bh,0x46c02(%rdx)
     753:	00 05 f8 08 00 00    	add    %al,0x8f8(%rip)        # 1051 <ippcpSetCpuFeatures@plt+0x39>
     759:	01 ba 10 a9 00 00    	add    %edi,0xa910(%rdx)
     75f:	00 00                	add    %al,(%rax)
     761:	05 f0 08 00 00       	add    $0x8f0,%eax
     766:	01 ba 24 bc 00 00    	add    %edi,0xbc24(%rdx)
     76c:	00 08                	add    %cl,(%rax)
     76e:	05 3e 08 00 00       	add    $0x83e,%eax
     773:	01 ba 35 bc 00 00    	add    %edi,0xbc35(%rdx)
     779:	00 09                	add    %cl,(%rcx)
     77b:	00 11                	add    %dl,(%rcx)
     77d:	48 b8 13 8f 04 00 00 	movabs $0x49a050000048f13,%rax
     784:	05 9a 04 
     787:	00 00                	add    %al,(%rax)
     789:	01 b9 09 e0 00 00    	add    %edi,0xe009(%rcx)
     78f:	00 00                	add    %al,(%rax)
     791:	05 93 0a 00 00       	add    $0xa93,%eax
     796:	01 ba 45 94 04 00    	add    %edi,0x49445(%rdx)
     79c:	00 08                	add    %cl,(%rax)
     79e:	00 0e                	add    %cl,(%rsi)
     7a0:	6c                   	insb   (%dx),%es:(%rdi)
     7a1:	04 00                	add    $0x0,%al
     7a3:	00 1a                	add    %bl,(%rdx)
     7a5:	3c 04                	cmp    $0x4,%al
     7a7:	00 00                	add    %al,(%rax)
     7a9:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
     7aa:	04 00                	add    $0x0,%al
     7ac:	00 12                	add    %dl,(%rdx)
     7ae:	7c 00                	jl     7b0 <__ImageBase+0x7b0>
     7b0:	00 00                	add    %al,(%rax)
     7b2:	03 00                	add    (%rax),%eax
     7b4:	1b 91 0a 00 00 bb    	sbb    -0x44fffff6(%rcx),%edx
     7ba:	8f 04 00             	pop    (%rax,%rax,1)
     7bd:	00 09                	add    %cl,(%rcx)
     7bf:	03 c0                	add    %eax,%eax
     7c1:	7d 01                	jge    7c4 <__ImageBase+0x7c4>
     7c3:	00 00                	add    %al,(%rax)
     7c5:	00 00                	add    %al,(%rax)
     7c7:	00 11                	add    %dl,(%rcx)
     7c9:	10 c5                	adc    %al,%ch
     7cb:	13 db                	adc    %ebx,%ebx
     7cd:	04 00                	add    $0x0,%al
     7cf:	00 05 79 0b 00 00    	add    %al,0xb79(%rip)        # 134e <ippcpSetCpuFeatures@plt+0x336>
     7d5:	01 c6                	add    %eax,%esi
     7d7:	09 e0                	or     %esp,%eax
     7d9:	00 00                	add    %al,(%rax)
     7db:	00 00                	add    %al,(%rax)
     7dd:	05 60 09 00 00       	add    $0x960,%eax
     7e2:	01 c7                	add    %eax,%edi
     7e4:	0a e0                	or     %al,%ah
     7e6:	04 00                	add    $0x0,%al
     7e8:	00 08                	add    %cl,(%rax)
     7ea:	00 0e                	add    %cl,(%rsi)
     7ec:	b8 04 00 00 1a       	mov    $0x1a000004,%eax
     7f1:	bc 00 00 00 f6       	mov    $0xf6000000,%esp
     7f6:	04 00                	add    $0x0,%al
     7f8:	00 12                	add    %dl,(%rdx)
     7fa:	7c 00                	jl     7fc <__ImageBase+0x7fc>
     7fc:	00 00                	add    %al,(%rax)
     7fe:	01 12                	add    %edx,(%rdx)
     800:	7c 00                	jl     802 <__ImageBase+0x802>
     802:	00 00                	add    %al,(%rax)
     804:	03 00                	add    (%rax),%eax
     806:	1b 5a 09             	sbb    0x9(%rdx),%ebx
     809:	00 00                	add    %al,(%rax)
     80b:	c8 db 04 00          	enter  $0x4db,$0x0
     80f:	00 09                	add    %cl,(%rcx)
     811:	03 30                	add    (%rax),%esi
     813:	30 01                	xor    %al,(%rcx)
     815:	00 00                	add    %al,(%rax)
     817:	00 00                	add    %al,(%rax)
     819:	00 0b                	add    %cl,(%rbx)
     81b:	41 02 00             	add    (%r8),%al
     81e:	00 08                	add    %cl,(%rax)
     820:	68 15 f5 02 00       	push   $0x2f515
     825:	00 25 05 00 00 03    	add    %ah,0x3000005(%rip)        # 3000830 <_end+0x2fd5820>
     82b:	64 00 00             	add    %al,%fs:(%rax)
     82e:	00 03                	add    %al,(%rbx)
     830:	a9 00 00 00 00       	test   $0x0,%eax
     835:	13 d6                	adc    %esi,%edx
     837:	07                   	(bad)  
     838:	00 00                	add    %al,(%rax)
     83a:	08 4d 0d             	or     %cl,0xd(%rbp)
     83d:	0b 1c 0b             	or     (%rbx,%rcx,1),%ebx
     840:	00 00                	add    %al,(%rax)
     842:	08 45 0e             	or     %al,0xe(%rbp)
     845:	a9 00 00 00 43       	test   $0x43000000,%eax
     84a:	05 00 00 03 e0       	add    $0xe0030000,%eax
     84f:	00 00                	add    %al,(%rax)
     851:	00 00                	add    %al,(%rax)
     853:	0b c7                	or     %edi,%eax
     855:	02 00                	add    (%rax),%al
     857:	00 09                	add    %cl,(%rcx)
     859:	35 0c 56 00 00       	xor    $0x560c,%eax
     85e:	00 5e 05             	add    %bl,0x5(%rsi)
     861:	00 00                	add    %al,(%rax)
     863:	03 5e 05             	add    0x5(%rsi),%ebx
     866:	00 00                	add    %al,(%rax)
     868:	03 e0                	add    %eax,%esp
     86a:	00 00                	add    %al,(%rax)
     86c:	00 00                	add    %al,(%rax)
     86e:	09 63 05             	or     %esp,0x5(%rbx)
     871:	00 00                	add    %al,(%rax)
     873:	25 0b a3 04 00       	and    $0x4a30b,%eax
     878:	00 07                	add    %al,(%rdi)
     87a:	4b 16                	rex.WXB (bad) 
     87c:	e0 00                	loopne 87e <__ImageBase+0x87e>
     87e:	00 00                	add    %al,(%rax)
     880:	7a 05                	jp     887 <__ImageBase+0x887>
     882:	00 00                	add    %al,(%rax)
     884:	03 f8                	add    %eax,%edi
     886:	03 00                	add    (%rax),%eax
     888:	00 00                	add    %al,(%rax)
     88a:	0f fc 07             	paddb  (%rdi),%mm0
     88d:	00 00                	add    %al,(%rax)
     88f:	06                   	(bad)  
     890:	1a 06                	sbb    (%rsi),%al
     892:	8c 05 00 00 03 55    	mov    %es,0x55030000(%rip)        # 55030898 <_end+0x55005888>
     898:	03 00                	add    (%rax),%eax
     89a:	00 00                	add    %al,(%rax)
     89c:	0f ad 03             	shrd   %cl,%eax,(%rbx)
     89f:	00 00                	add    %al,(%rax)
     8a1:	06                   	(bad)  
     8a2:	1b 06                	sbb    (%rsi),%eax
     8a4:	a3 05 00 00 03 56 00 	movabs %eax,0x5603000005
     8ab:	00 00 
     8ad:	03 56 00             	add    0x0(%rsi),%edx
     8b0:	00 00                	add    %al,(%rax)
     8b2:	00 13                	add    %dl,(%rbx)
     8b4:	0e                   	(bad)  
     8b5:	09 00                	or     %eax,(%rax)
     8b7:	00 06                	add    %al,(%rsi)
     8b9:	1c 06                	sbb    $0x6,%al
     8bb:	0f dc 07             	paddusb (%rdi),%mm0
     8be:	00 00                	add    %al,(%rax)
     8c0:	0a 61 17             	or     0x17(%rcx),%ah
     8c3:	bd 05 00 00 03       	mov    $0x3000005,%ebp
     8c8:	a9 00 00 00 00       	test   $0x0,%eax
     8cd:	0b b4 07 00 00 0b 4d 	or     0x4d0b0000(%rdi,%rax,1),%esi
     8d4:	10 2f                	adc    %ch,(%rdi)
     8d6:	03 00                	add    (%rax),%eax
     8d8:	00 e2                	add    %ah,%dl
     8da:	05 00 00 03 a9       	add    $0xa9030000,%eax
     8df:	00 00                	add    %al,(%rax)
     8e1:	00 03                	add    %al,(%rbx)
     8e3:	e0 00                	loopne 8e5 <__ImageBase+0x8e5>
     8e5:	00 00                	add    %al,(%rax)
     8e7:	03 5e 05             	add    0x5(%rsi),%ebx
     8ea:	00 00                	add    %al,(%rax)
     8ec:	03 e0                	add    %eax,%esp
     8ee:	00 00                	add    %al,(%rax)
     8f0:	00 00                	add    %al,(%rax)
     8f2:	0f c0 08             	xadd   %cl,(%rax)
     8f5:	00 00                	add    %al,(%rax)
     8f7:	06                   	(bad)  
     8f8:	1d 06 fe 05 00       	sbb    $0x5fe06,%eax
     8fd:	00 03                	add    %al,(%rbx)
     8ff:	56                   	push   %rsi
     900:	00 00                	add    %al,(%rax)
     902:	00 03                	add    %al,(%rbx)
     904:	cd 03                	int    $0x3
     906:	00 00                	add    %al,(%rax)
     908:	03 e0                	add    %eax,%esp
     90a:	00 00                	add    %al,(%rax)
     90c:	00 00                	add    %al,(%rax)
     90e:	0b f6                	or     %esi,%esi
     910:	0a 00                	or     (%rax),%al
     912:	00 07                	add    %al,(%rdi)
     914:	44 16                	rex.R (bad) 
     916:	a9 00 00 00 1e       	test   $0x1e000000,%eax
     91b:	06                   	(bad)  
     91c:	00 00                	add    %al,(%rax)
     91e:	03 a9 00 00 00 03    	add    0x3000000(%rcx),%ebp
     924:	56                   	push   %rsi
     925:	00 00                	add    %al,(%rax)
     927:	00 03                	add    %al,(%rbx)
     929:	e0 00                	loopne 92b <__ImageBase+0x92b>
     92b:	00 00                	add    %al,(%rax)
     92d:	00 0b                	add    %cl,(%rbx)
     92f:	03 09                	add    (%rcx),%ecx
     931:	00 00                	add    %al,(%rax)
     933:	0a 64 17 a9          	or     -0x57(%rdi,%rdx,1),%ah
     937:	00 00                	add    %al,(%rax)
     939:	00 34 06             	add    %dh,(%rsi,%rax,1)
     93c:	00 00                	add    %al,(%rax)
     93e:	03 e0                	add    %eax,%esp
     940:	00 00                	add    %al,(%rax)
     942:	00 00                	add    %al,(%rax)
     944:	0b 86 02 00 00 0b    	or     0xb000002(%rsi),%eax
     94a:	4c 10 2f             	rex.WR adc %r13b,(%rdi)
     94d:	03 00                	add    (%rax),%eax
     94f:	00 59 06             	add    %bl,0x6(%rcx)
     952:	00 00                	add    %al,(%rax)
     954:	03 a9 00 00 00 03    	add    0x3000000(%rcx),%ebp
     95a:	e0 00                	loopne 95c <__ImageBase+0x95c>
     95c:	00 00                	add    %al,(%rax)
     95e:	03 5e 05             	add    0x5(%rsi),%ebx
     961:	00 00                	add    %al,(%rax)
     963:	03 e0                	add    %eax,%esp
     965:	00 00                	add    %al,(%rax)
     967:	00 00                	add    %al,(%rax)
     969:	13 68 08             	adc    0x8(%rax),%ebp
     96c:	00 00                	add    %al,(%rax)
     96e:	0c 29                	or     $0x29,%al
     970:	0d 0b 4a 01 00       	or     $0x14a0b,%eax
     975:	00 09                	add    %cl,(%rcx)
     977:	40 0c 56             	rex or $0x56,%al
     97a:	00 00                	add    %al,(%rax)
     97c:	00 7c 06 00          	add    %bh,0x0(%rsi,%rax,1)
     980:	00 03                	add    %al,(%rbx)
     982:	5e                   	pop    %rsi
     983:	05 00 00 03 e0       	add    $0xe0030000,%eax
     988:	00 00                	add    %al,(%rax)
     98a:	00 00                	add    %al,(%rax)
     98c:	26 00 00             	es add %al,(%rax)
     98f:	00 00                	add    %al,(%rax)
     991:	01 04 01             	add    %eax,(%rcx,%rax,1)
     994:	18 f5                	sbb    %dh,%ch
     996:	02 00                	add    (%rax),%al
     998:	00 4b 43             	add    %cl,0x43(%rbx)
     99b:	00 00                	add    %al,(%rax)
     99d:	00 00                	add    %al,(%rax)
     99f:	00 00                	add    %al,(%rax)
     9a1:	11 01                	adc    %eax,(%rcx)
     9a3:	00 00                	add    %al,(%rax)
     9a5:	00 00                	add    %al,(%rax)
     9a7:	00 00                	add    %al,(%rax)
     9a9:	01 9c 15 08 00 00 1c 	add    %ebx,0x1c000008(%rbp,%rdx,1)
     9b0:	73 74                	jae    a26 <__ImageBase+0xa26>
     9b2:	72 00                	jb     9b4 <__ImageBase+0x9b4>
     9b4:	38 f8                	cmp    %bh,%al
     9b6:	03 00                	add    (%rax),%eax
     9b8:	00 96 00 00 00 90    	add    %dl,-0x70000000(%rsi)
     9be:	00 00                	add    %al,(%rax)
     9c0:	00 1c 61             	add    %bl,(%rcx,%riz,2)
     9c3:	00 46 c8             	add    %al,-0x38(%rsi)
     9c6:	00 00                	add    %al,(%rax)
     9c8:	00 b1 00 00 00 af    	add    %dh,-0x51000000(%rcx)
     9ce:	00 00                	add    %al,(%rax)
     9d0:	00 1d 15 0b 00 00    	add    %bl,0xb15(%rip)        # 14eb <ippcpSetCpuFeatures@plt+0x4d3>
     9d6:	06                   	(bad)  
     9d7:	01 0f                	add    %ecx,(%rdi)
     9d9:	f5                   	cmc    
     9da:	02 00                	add    (%rax),%al
     9dc:	00 bf 00 00 00 b9    	add    %bh,-0x47000000(%rdi)
     9e2:	00 00                	add    %al,(%rax)
     9e4:	00 27                	add    %ah,(%rdi)
     9e6:	86 05 00 00 01 07    	xchg   %al,0x7010000(%rip)        # 70109ec <_end+0x6fe59dc>
     9ec:	01 09                	add    %ecx,(%rcx)
     9ee:	e0 00                	loopne 9f0 <__ImageBase+0x9f0>
     9f0:	00 00                	add    %al,(%rax)
     9f2:	28 6d 73             	sub    %ch,0x73(%rbp)
     9f5:	00 01                	add    %al,(%rcx)
     9f7:	09 01                	or     %eax,(%rcx)
     9f9:	1c 15                	sbb    $0x15,%al
     9fb:	08 00                	or     %al,(%rax)
     9fd:	00 e0                	add    %ah,%al
     9ff:	00 00                	add    %al,(%rax)
     a01:	00 d8                	add    %bl,%al
     a03:	00 00                	add    %al,(%rax)
     a05:	00 1d d3 01 00 00    	add    %bl,0x1d3(%rip)        # bde <__ImageBase+0xbde>
     a0b:	0a 01                	or     (%rcx),%al
     a0d:	09 e0                	or     %esp,%eax
     a0f:	00 00                	add    %al,(%rax)
     a11:	00 09                	add    %cl,(%rcx)
     a13:	01 00                	add    %eax,(%rax)
     a15:	00 ff                	add    %bh,%bh
     a17:	00 00                	add    %al,(%rax)
     a19:	00 29                	add    %ch,(%rcx)
     a1b:	42 04 00             	rex.X add $0x0,%al
     a1e:	00 01                	add    %al,(%rcx)
     a20:	0b 01                	or     (%rcx),%eax
     a22:	08 a9 00 00 00 02    	or     %ch,0x2000000(%rcx)
     a28:	91                   	xchg   %eax,%ecx
     a29:	48 04 6e             	rex.W add $0x6e,%al
     a2c:	43 00 00             	rex.XB add %al,(%r8)
     a2f:	00 00                	add    %al,(%rax)
     a31:	00 00                	add    %al,(%rax)
     a33:	64 05 00 00 32 07    	fs add $0x7320000,%eax
     a39:	00 00                	add    %al,(%rax)
     a3b:	01 01                	add    %eax,(%rcx)
     a3d:	55                   	push   %rbp
     a3e:	02 73 00             	add    0x0(%rbx),%dh
     a41:	00 04 8c             	add    %al,(%rsp,%rcx,4)
     a44:	43 00 00             	rex.XB add %al,(%r8)
     a47:	00 00                	add    %al,(%rax)
     a49:	00 00                	add    %al,(%rax)
     a4b:	43 05 00 00 50 07    	rex.XB add $0x7500000,%eax
     a51:	00 00                	add    %al,(%rax)
     a53:	01 01                	add    %eax,(%rcx)
     a55:	55                   	push   %rbp
     a56:	02 73 00             	add    0x0(%rbx),%dh
     a59:	01 01                	add    %eax,(%rcx)
     a5b:	54                   	push   %rsp
     a5c:	02 7c 00 00          	add    0x0(%rax,%rax,1),%bh
     a60:	04 b0                	add    $0xb0,%al
     a62:	43 00 00             	rex.XB add %al,(%r8)
     a65:	00 00                	add    %al,(%rax)
     a67:	00 00                	add    %al,(%rax)
     a69:	2d 05 00 00 68       	sub    $0x68000005,%eax
     a6e:	07                   	(bad)  
     a6f:	00 00                	add    %al,(%rax)
     a71:	01 01                	add    %eax,(%rcx)
     a73:	55                   	push   %rbp
     a74:	02 7d 10             	add    0x10(%rbp),%bh
     a77:	00 0d c4 43 00 00    	add    %cl,0x43c4(%rip)        # 4e41 <ct_decode+0x941>
     a7d:	00 00                	add    %al,(%rax)
     a7f:	00 00                	add    %al,(%rax)
     a81:	25 05 00 00 04       	and    $0x4000005,%eax
     a86:	f3 43 00 00          	repz rex.XB add %al,(%r8)
     a8a:	00 00                	add    %al,(%rax)
     a8c:	00 00                	add    %al,(%rax)
     a8e:	bd 05 00 00 9d       	mov    $0x9d000005,%ebp
     a93:	07                   	(bad)  
     a94:	00 00                	add    %al,(%rax)
     a96:	01 01                	add    %eax,(%rcx)
     a98:	55                   	push   %rbp
     a99:	02 76 00             	add    0x0(%rsi),%dh
     a9c:	01 01                	add    %eax,(%rcx)
     a9e:	54                   	push   %rsp
     a9f:	01 38                	add    %edi,(%rax)
     aa1:	01 01                	add    %eax,(%rcx)
     aa3:	51                   	push   %rcx
     aa4:	02 91 48 01 01 52    	add    0x52010148(%rcx),%dl
     aaa:	01 38                	add    %edi,(%rax)
     aac:	00 04 0a             	add    %al,(%rdx,%rcx,1)
     aaf:	44 00 00             	add    %r8b,(%rax)
     ab2:	00 00                	add    %al,(%rax)
     ab4:	00 00                	add    %al,(%rax)
     ab6:	bd 05 00 00 c1       	mov    $0xc1000005,%ebp
     abb:	07                   	(bad)  
     abc:	00 00                	add    %al,(%rax)
     abe:	01 01                	add    %eax,(%rcx)
     ac0:	54                   	push   %rsp
     ac1:	02 7d 00             	add    0x0(%rbp),%bh
     ac4:	01 01                	add    %eax,(%rcx)
     ac6:	51                   	push   %rcx
     ac7:	02 73 00             	add    0x0(%rbx),%dh
     aca:	01 01                	add    %eax,(%rcx)
     acc:	52                   	push   %rdx
     acd:	02 7c 00 00          	add    0x0(%rax,%rax,1),%bh
     ad1:	04 33                	add    $0x33,%al
     ad3:	44 00 00             	add    %r8b,(%rax)
     ad6:	00 00                	add    %al,(%rax)
     ad8:	00 00                	add    %al,(%rax)
     ada:	bd 05 00 00 ea       	mov    $0xea000005,%ebp
     adf:	07                   	(bad)  
     ae0:	00 00                	add    %al,(%rax)
     ae2:	01 01                	add    %eax,(%rcx)
     ae4:	55                   	push   %rbp
     ae5:	02 76 08             	add    0x8(%rsi),%dh
     ae8:	01 01                	add    %eax,(%rcx)
     aea:	54                   	push   %rsp
     aeb:	01 38                	add    %edi,(%rax)
     aed:	01 01                	add    %eax,(%rcx)
     aef:	51                   	push   %rcx
     af0:	03 91 b8 7f 01 01    	add    0x1017fb8(%rcx),%edx
     af6:	52                   	push   %rdx
     af7:	01 38                	add    %edi,(%rax)
     af9:	00 04 44             	add    %al,(%rsp,%rax,2)
     afc:	44 00 00             	add    %r8b,(%rax)
     aff:	00 00                	add    %al,(%rax)
     b01:	00 00                	add    %al,(%rax)
     b03:	0a 05 00 00 07 08    	or     0x8070000(%rip),%al        # 8070b09 <_end+0x8045af9>
     b09:	00 00                	add    %al,(%rax)
     b0b:	01 01                	add    %eax,(%rcx)
     b0d:	55                   	push   %rbp
     b0e:	01 31                	add    %esi,(%rcx)
     b10:	01 01                	add    %eax,(%rcx)
     b12:	54                   	push   %rsp
     b13:	02 76 00             	add    0x0(%rsi),%dh
     b16:	00 0d 4d 44 00 00    	add    %cl,0x444d(%rip)        # 4f69 <ct_decode+0xa69>
     b1c:	00 00                	add    %al,(%rax)
     b1e:	00 00                	add    %al,(%rax)
     b20:	25 05 00 00 00       	and    $0x5,%eax
     b25:	09 30                	or     %esi,(%rax)
     b27:	04 00                	add    $0x0,%al
     b29:	00 2a                	add    %ch,(%rdx)
     b2b:	4c 0b 00             	or     (%rax),%r8
     b2e:	00 01                	add    %al,(%rcx)
     b30:	d1 18                	rcrl   (%rax)
     b32:	f5                   	cmc    
     b33:	02 00                	add    (%rax),%al
     b35:	00 62 42             	add    %ah,0x42(%rdx)
     b38:	00 00                	add    %al,(%rax)
     b3a:	00 00                	add    %al,(%rax)
     b3c:	00 00                	add    %al,(%rax)
     b3e:	e9 00 00 00 00       	jmp    b43 <__ImageBase+0xb43>
     b43:	00 00                	add    %al,(%rax)
     b45:	00 01                	add    %al,(%rcx)
     b47:	9c                   	pushf  
     b48:	72 09                	jb     b53 <__ImageBase+0xb53>
     b4a:	00 00                	add    %al,(%rax)
     b4c:	10 73 74             	adc    %dh,0x74(%rbx)
     b4f:	72 00                	jb     b51 <__ImageBase+0xb51>
     b51:	d1 30                	shll   (%rax)
     b53:	f8                   	clc    
     b54:	03 00                	add    (%rax),%eax
     b56:	00 39                	add    %bh,(%rcx)
     b58:	01 00                	add    %eax,(%rax)
     b5a:	00 33                	add    %dh,(%rbx)
     b5c:	01 00                	add    %eax,(%rax)
     b5e:	00 08                	add    %cl,(%rax)
     b60:	15 0b 00 00 d3       	adc    $0xd300000b,%eax
     b65:	0f f5 02             	pmaddwd (%rdx),%mm0
     b68:	00 00                	add    %al,(%rax)
     b6a:	58                   	pop    %rax
     b6b:	01 00                	add    %eax,(%rax)
     b6d:	00 52 01             	add    %dl,0x1(%rdx)
     b70:	00 00                	add    %al,(%rax)
     b72:	14 86                	adc    $0x86,%al
     b74:	05 00 00 d4 09       	add    $0x9d40000,%eax
     b79:	e0 00                	loopne b7b <__ImageBase+0xb7b>
     b7b:	00 00                	add    %al,(%rax)
     b7d:	15 6d 73 00 d6       	adc    $0xd600736d,%eax
     b82:	14 72                	adc    $0x72,%al
     b84:	09 00                	or     %eax,(%rax)
     b86:	00 79 01             	add    %bh,0x1(%rcx)
     b89:	00 00                	add    %al,(%rax)
     b8b:	71 01                	jno    b8e <__ImageBase+0xb8e>
     b8d:	00 00                	add    %al,(%rax)
     b8f:	08 d3                	or     %dl,%bl
     b91:	01 00                	add    %eax,(%rax)
     b93:	00 d7                	add    %dl,%bh
     b95:	09 e0                	or     %esp,%eax
     b97:	00 00                	add    %al,(%rax)
     b99:	00 a2 01 00 00 98    	add    %ah,-0x67ffffff(%rdx)
     b9f:	01 00                	add    %eax,(%rax)
     ba1:	00 16                	add    %dl,(%rsi)
     ba3:	42 04 00             	rex.X add $0x0,%al
     ba6:	00 d8                	add    %bl,%al
     ba8:	08 a9 00 00 00 02    	or     %ch,0x2000000(%rcx)
     bae:	91                   	xchg   %eax,%ecx
     baf:	48 04 7f             	rex.W add $0x7f,%al
     bb2:	42 00 00             	rex.X add %al,(%rax)
     bb5:	00 00                	add    %al,(%rax)
     bb7:	00 00                	add    %al,(%rax)
     bb9:	64 05 00 00 b8 08    	fs add $0x8b80000,%eax
     bbf:	00 00                	add    %al,(%rax)
     bc1:	01 01                	add    %eax,(%rcx)
     bc3:	55                   	push   %rbp
     bc4:	02 73 00             	add    0x0(%rbx),%dh
     bc7:	00 04 9d 42 00 00 00 	add    %al,0x42(,%rbx,4)
     bce:	00 00                	add    %al,(%rax)
     bd0:	00 43 05             	add    %al,0x5(%rbx)
     bd3:	00 00                	add    %al,(%rax)
     bd5:	d6                   	(bad)  
     bd6:	08 00                	or     %al,(%rax)
     bd8:	00 01                	add    %al,(%rcx)
     bda:	01 55 02             	add    %edx,0x2(%rbp)
     bdd:	73 00                	jae    bdf <__ImageBase+0xbdf>
     bdf:	01 01                	add    %eax,(%rcx)
     be1:	54                   	push   %rsp
     be2:	02 76 00             	add    0x0(%rsi),%dh
     be5:	00 04 c1             	add    %al,(%rcx,%rax,8)
     be8:	42 00 00             	rex.X add %al,(%rax)
     beb:	00 00                	add    %al,(%rax)
     bed:	00 00                	add    %al,(%rax)
     bef:	2d 05 00 00 ee       	sub    $0xee000005,%eax
     bf4:	08 00                	or     %al,(%rax)
     bf6:	00 01                	add    %al,(%rcx)
     bf8:	01 55 02             	add    %edx,0x2(%rbp)
     bfb:	7d 08                	jge    c05 <__ImageBase+0xc05>
     bfd:	00 0d d5 42 00 00    	add    %cl,0x42d5(%rip)        # 4ed8 <ct_decode+0x9d8>
     c03:	00 00                	add    %al,(%rax)
     c05:	00 00                	add    %al,(%rax)
     c07:	25 05 00 00 04       	and    $0x4000005,%eax
     c0c:	01 43 00             	add    %eax,0x0(%rbx)
     c0f:	00 00                	add    %al,(%rax)
     c11:	00 00                	add    %al,(%rax)
     c13:	00 bd 05 00 00 23    	add    %bh,0x23000005(%rbp)
     c19:	09 00                	or     %eax,(%rax)
     c1b:	00 01                	add    %al,(%rcx)
     c1d:	01 55 02             	add    %edx,0x2(%rbp)
     c20:	7c 00                	jl     c22 <__ImageBase+0xc22>
     c22:	01 01                	add    %eax,(%rcx)
     c24:	54                   	push   %rsp
     c25:	01 38                	add    %edi,(%rax)
     c27:	01 01                	add    %eax,(%rcx)
     c29:	51                   	push   %rcx
     c2a:	02 91 48 01 01 52    	add    0x52010148(%rcx),%dl
     c30:	01 38                	add    %edi,(%rax)
     c32:	00 04 18             	add    %al,(%rax,%rbx,1)
     c35:	43 00 00             	rex.XB add %al,(%r8)
     c38:	00 00                	add    %al,(%rax)
     c3a:	00 00                	add    %al,(%rax)
     c3c:	bd 05 00 00 47       	mov    $0x47000005,%ebp
     c41:	09 00                	or     %eax,(%rax)
     c43:	00 01                	add    %al,(%rcx)
     c45:	01 54 02 7d          	add    %edx,0x7d(%rdx,%rax,1)
     c49:	00 01                	add    %al,(%rcx)
     c4b:	01 51 02             	add    %edx,0x2(%rcx)
     c4e:	73 00                	jae    c50 <__ImageBase+0xc50>
     c50:	01 01                	add    %eax,(%rcx)
     c52:	52                   	push   %rdx
     c53:	02 76 00             	add    0x0(%rsi),%dh
     c56:	00 04 33             	add    %al,(%rbx,%rsi,1)
     c59:	43 00 00             	rex.XB add %al,(%r8)
     c5c:	00 00                	add    %al,(%rax)
     c5e:	00 00                	add    %al,(%rax)
     c60:	0a 05 00 00 64 09    	or     0x9640000(%rip),%al        # 9640c66 <_end+0x9615c56>
     c66:	00 00                	add    %al,(%rax)
     c68:	01 01                	add    %eax,(%rcx)
     c6a:	55                   	push   %rbp
     c6b:	01 30                	add    %esi,(%rax)
     c6d:	01 01                	add    %eax,(%rcx)
     c6f:	54                   	push   %rsp
     c70:	02 7c 00 00          	add    0x0(%rax,%rax,1),%bh
     c74:	0d 3c 43 00 00       	or     $0x433c,%eax
     c79:	00 00                	add    %al,(%rax)
     c7b:	00 00                	add    %al,(%rax)
     c7d:	25 05 00 00 00       	and    $0x5,%eax
     c82:	09 fd                	or     %edi,%ebp
     c84:	03 00                	add    (%rax),%eax
     c86:	00 17                	add    %dl,(%rdi)
     c88:	bc 08 00 00 85       	mov    $0x85000008,%esp
     c8d:	f5                   	cmc    
     c8e:	02 00                	add    (%rax),%al
     c90:	00 06                	add    %al,(%rsi)
     c92:	40 00 00             	rex add %al,(%rax)
     c95:	00 00                	add    %al,(%rax)
     c97:	00 00                	add    %al,(%rax)
     c99:	ef                   	out    %eax,(%dx)
     c9a:	00 00                	add    %al,(%rax)
     c9c:	00 00                	add    %al,(%rax)
     c9e:	00 00                	add    %al,(%rax)
     ca0:	00 01                	add    %al,(%rcx)
     ca2:	9c                   	pushf  
     ca3:	11 0b                	adc    %ecx,(%rbx)
     ca5:	00 00                	add    %al,(%rax)
     ca7:	10 70 6d             	adc    %dh,0x6d(%rax)
     caa:	73 00                	jae    cac <__ImageBase+0xcac>
     cac:	85 3a                	test   %edi,(%rdx)
     cae:	a9 00 00 00 da       	test   $0xda000000,%eax
     cb3:	01 00                	add    %eax,(%rax)
     cb5:	00 cc                	add    %cl,%ah
     cb7:	01 00                	add    %eax,(%rax)
     cb9:	00 15 6d 73 00 8c    	add    %dl,-0x73ff8c93(%rip)        # ffffffff8c00802c <_end+0xffffffff8bfdd01c>
     cbf:	19 11                	sbb    %edx,(%rcx)
     cc1:	0b 00                	or     (%rax),%eax
     cc3:	00 12                	add    %dl,(%rdx)
     cc5:	02 00                	add    (%rax),%al
     cc7:	00 0a                	add    %cl,(%rdx)
     cc9:	02 00                	add    (%rax),%al
     ccb:	00 16                	add    %dl,(%rsi)
     ccd:	f3 05 00 00 8d 18    	repz add $0x188d0000,%eax
     cd3:	d2 03                	rolb   %cl,(%rbx)
     cd5:	00 00                	add    %al,(%rax)
     cd7:	03 91 b8 7f 08 15    	add    0x15087fb8(%rcx),%edx
     cdd:	0b 00                	or     (%rax),%eax
     cdf:	00 91 0f f5 02 00    	add    %dl,0x2f50f(%rcx)
     ce5:	00 34 02             	add    %dh,(%rdx,%rax,1)
     ce8:	00 00                	add    %al,(%rax)
     cea:	30 02                	xor    %al,(%rdx)
     cec:	00 00                	add    %al,(%rax)
     cee:	08 66 06             	or     %ah,0x6(%rsi)
     cf1:	00 00                	add    %al,(%rax)
     cf3:	92                   	xchg   %eax,%edx
     cf4:	08 cd                	or     %cl,%ch
     cf6:	03 00                	add    (%rax),%eax
     cf8:	00 4a 02             	add    %cl,0x2(%rdx)
     cfb:	00 00                	add    %al,(%rax)
     cfd:	48 02 00             	rex.W add (%rax),%al
     d00:	00 08                	add    %cl,(%rax)
     d02:	9f                   	lahf   
     d03:	0a 00                	or     (%rax),%al
     d05:	00 93 09 e0 00 00    	add    %dl,0xe009(%rbx)
     d0b:	00 53 02             	add    %dl,0x2(%rbx)
     d0e:	00 00                	add    %al,(%rax)
     d10:	51                   	push   %rcx
     d11:	02 00                	add    (%rax),%al
     d13:	00 08                	add    %cl,(%rax)
     d15:	19 04 00             	sbb    %eax,(%rax,%rax,1)
     d18:	00 94 09 e0 00 00 00 	add    %dl,0xe0(%rcx,%rcx,1)
     d1f:	5c                   	pop    %rsp
     d20:	02 00                	add    (%rax),%al
     d22:	00 5a 02             	add    %bl,0x2(%rdx)
     d25:	00 00                	add    %al,(%rax)
     d27:	08 16                	or     %dl,(%rsi)
     d29:	08 00                	or     %al,(%rax)
     d2b:	00 95 08 cd 03 00    	add    %dl,0x3cd08(%rbp)
     d31:	00 69 02             	add    %ch,0x2(%rcx)
     d34:	00 00                	add    %al,(%rax)
     d36:	63 02                	movsxd (%rdx),%eax
     d38:	00 00                	add    %al,(%rax)
     d3a:	1e                   	(bad)  
     d3b:	65 72 72             	gs jb  db0 <__ImageBase+0xdb0>
     d3e:	00 b3 e2 40 00 00    	add    %dh,0x40e2(%rbx)
     d44:	00 00                	add    %al,(%rax)
     d46:	00 00                	add    %al,(%rax)
     d48:	04 31                	add    $0x31,%al
     d4a:	40 00 00             	rex add %al,(%rax)
     d4d:	00 00                	add    %al,(%rax)
     d4f:	00 00                	add    %al,(%rax)
     d51:	61                   	(bad)  
     d52:	06                   	(bad)  
     d53:	00 00                	add    %al,(%rax)
     d55:	55                   	push   %rbp
     d56:	0a 00                	or     (%rax),%al
     d58:	00 01                	add    %al,(%rcx)
     d5a:	01 55 02             	add    %edx,0x2(%rbp)
     d5d:	73 00                	jae    d5f <__ImageBase+0xd5f>
     d5f:	01 01                	add    %eax,(%rcx)
     d61:	54                   	push   %rsp
     d62:	01 48 00             	add    %ecx,0x0(%rax)
     d65:	04 55                	add    $0x55,%al
     d67:	40 00 00             	rex add %al,(%rax)
     d6a:	00 00                	add    %al,(%rax)
     d6c:	00 00                	add    %al,(%rax)
     d6e:	34 06                	xor    $0x6,%al
     d70:	00 00                	add    %al,(%rax)
     d72:	7e 0a                	jle    d7e <__ImageBase+0xd7e>
     d74:	00 00                	add    %al,(%rax)
     d76:	01 01                	add    %eax,(%rcx)
     d78:	55                   	push   %rbp
     d79:	03 91 b8 7f 01 01    	add    0x1017fb8(%rcx),%edx
     d7f:	54                   	push   %rsp
     d80:	01 48 01             	add    %ecx,0x1(%rax)
     d83:	01 51 02             	add    %edx,0x2(%rcx)
     d86:	73 00                	jae    d88 <__ImageBase+0xd88>
     d88:	01 01                	add    %eax,(%rcx)
     d8a:	52                   	push   %rdx
     d8b:	01 48 00             	add    %ecx,0x0(%rax)
     d8e:	04 88                	add    $0x88,%al
     d90:	40 00 00             	rex add %al,(%rax)
     d93:	00 00                	add    %al,(%rax)
     d95:	00 00                	add    %al,(%rax)
     d97:	61                   	(bad)  
     d98:	06                   	(bad)  
     d99:	00 00                	add    %al,(%rax)
     d9b:	9c                   	pushf  
     d9c:	0a 00                	or     (%rax),%al
     d9e:	00 01                	add    %al,(%rcx)
     da0:	01 55 02             	add    %edx,0x2(%rbp)
     da3:	7d 00                	jge    da5 <__ImageBase+0xda5>
     da5:	01 01                	add    %eax,(%rcx)
     da7:	54                   	push   %rsp
     da8:	02 76 00             	add    0x0(%rsi),%dh
     dab:	00 04 9c             	add    %al,(%rsp,%rbx,4)
     dae:	40 00 00             	rex add %al,(%rax)
     db1:	00 00                	add    %al,(%rax)
     db3:	00 00                	add    %al,(%rax)
     db5:	1e                   	(bad)  
     db6:	06                   	(bad)  
     db7:	00 00                	add    %al,(%rax)
     db9:	b4 0a                	mov    $0xa,%ah
     dbb:	00 00                	add    %al,(%rax)
     dbd:	01 01                	add    %eax,(%rcx)
     dbf:	55                   	push   %rbp
     dc0:	02 76 00             	add    0x0(%rsi),%dh
     dc3:	00 04 c0             	add    %al,(%rax,%rax,8)
     dc6:	40 00 00             	rex add %al,(%rax)
     dc9:	00 00                	add    %al,(%rax)
     dcb:	00 00                	add    %al,(%rax)
     dcd:	e2 05                	loop   dd4 <__ImageBase+0xdd4>
     dcf:	00 00                	add    %al,(%rax)
     dd1:	d2 0a                	rorb   %cl,(%rdx)
     dd3:	00 00                	add    %al,(%rax)
     dd5:	01 01                	add    %eax,(%rcx)
     dd7:	54                   	push   %rsp
     dd8:	02 73 00             	add    0x0(%rbx),%dh
     ddb:	01 01                	add    %eax,(%rcx)
     ddd:	51                   	push   %rcx
     dde:	02 76 00             	add    0x0(%rsi),%dh
     de1:	00 04 d6             	add    %al,(%rsi,%rdx,8)
     de4:	40 00 00             	rex add %al,(%rax)
     de7:	00 00                	add    %al,(%rax)
     de9:	00 00                	add    %al,(%rax)
     deb:	bd 05 00 00 fc       	mov    $0xfc000005,%ebp
     df0:	0a 00                	or     (%rax),%al
     df2:	00 01                	add    %al,(%rcx)
     df4:	01 55 02             	add    %edx,0x2(%rbp)
     df7:	7d 00                	jge    df9 <__ImageBase+0xdf9>
     df9:	01 01                	add    %eax,(%rcx)
     dfb:	54                   	push   %rsp
     dfc:	02 76 00             	add    0x0(%rsi),%dh
     dff:	01 01                	add    %eax,(%rcx)
     e01:	51                   	push   %rcx
     e02:	02 73 00             	add    0x0(%rbx),%dh
     e05:	01 01                	add    %eax,(%rcx)
     e07:	52                   	push   %rdx
     e08:	02 76 00             	add    0x0(%rsi),%dh
     e0b:	00 18                	add    %bl,(%rax)
     e0d:	e7 40                	out    %eax,$0x40
     e0f:	00 00                	add    %al,(%rax)
     e11:	00 00                	add    %al,(%rax)
     e13:	00 00                	add    %al,(%rax)
     e15:	ab                   	stos   %eax,%es:(%rdi)
     e16:	05 00 00 01 01       	add    $0x1010000,%eax
     e1b:	55                   	push   %rbp
     e1c:	02 73 00             	add    0x0(%rbx),%dh
     e1f:	00 00                	add    %al,(%rax)
     e21:	09 d2                	or     %edx,%edx
     e23:	03 00                	add    (%rax),%eax
     e25:	00 17                	add    %dl,(%rdi)
     e27:	0a 09                	or     (%rcx),%cl
     e29:	00 00                	add    %al,(%rax)
     e2b:	7d f5                	jge    e22 <__ImageBase+0xe22>
     e2d:	02 00                	add    (%rax),%al
     e2f:	00 f5                	add    %dh,%ch
     e31:	40 00 00             	rex add %al,(%rax)
     e34:	00 00                	add    %al,(%rax)
     e36:	00 00                	add    %al,(%rax)
     e38:	19 00                	sbb    %eax,(%rax)
     e3a:	00 00                	add    %al,(%rax)
     e3c:	00 00                	add    %al,(%rax)
     e3e:	00 00                	add    %al,(%rax)
     e40:	01 9c 64 0b 00 00 10 	add    %ebx,0x1000000b(%rsp,%riz,2)
     e47:	70 6d                	jo     eb6 <__ImageBase+0xeb6>
     e49:	73 00                	jae    e4b <__ImageBase+0xe4b>
     e4b:	7d 3c                	jge    e89 <__ImageBase+0xe89>
     e4d:	a9 00 00 00 85       	test   $0x85000000,%eax
     e52:	02 00                	add    (%rax),%al
     e54:	00 7f 02             	add    %bh,0x2(%rdi)
     e57:	00 00                	add    %al,(%rax)
     e59:	2b 15 0b 00 00 01    	sub    0x100000b(%rip),%edx        # 1000e6a <_end+0xfd5e5a>
     e5f:	7f 0f                	jg     e70 <__ImageBase+0xe70>
     e61:	f5                   	cmc    
     e62:	02 00                	add    (%rax),%al
     e64:	00 00                	add    %al,(%rax)
     e66:	0d 04 41 00 00       	or     $0x4104,%eax
     e6b:	00 00                	add    %al,(%rax)
     e6d:	00 00                	add    %al,(%rax)
     e6f:	a3 05 00 00 00 2c a9 	movabs %eax,0x3a92c00000005
     e76:	03 00 
     e78:	00 01                	add    %al,(%rcx)
     e7a:	68 1f f5 02 00       	push   $0x2f51f
     e7f:	00 01                	add    %al,(%rcx)
     e81:	a3 0b 00 00 2d 70 6d 	movabs %eax,0x736d702d00000b
     e88:	73 00 
     e8a:	01 68 40             	add    %ebp,0x40(%rax)
     e8d:	a9 00 00 00 2e       	test   $0x2e000000,%eax
     e92:	6d                   	insl   (%dx),%es:(%rdi)
     e93:	73 00                	jae    e95 <__ImageBase+0xe95>
     e95:	01 6f 1f             	add    %ebp,0x1f(%rdi)
     e98:	a3 0b 00 00 14 f3 05 	movabs %eax,0x5f31400000b
     e9f:	00 00 
     ea1:	70 1e                	jo     ec1 <__ImageBase+0xec1>
     ea3:	8d 03                	lea    (%rbx),%eax
     ea5:	00 00                	add    %al,(%rax)
     ea7:	14 15                	adc    $0x15,%al
     ea9:	0b 00                	or     (%rax),%eax
     eab:	00 74 0f f5          	add    %dh,-0xb(%rdi,%rcx,1)
     eaf:	02 00                	add    (%rax),%al
     eb1:	00 00                	add    %al,(%rax)
     eb3:	09 8d 03 00 00 17    	or     %ecx,0x17000003(%rbp)
     eb9:	f8                   	clc    
     eba:	07                   	(bad)  
     ebb:	00 00                	add    %al,(%rax)
     ebd:	36 f5                	ss cmc 
     ebf:	02 00                	add    (%rax),%al
     ec1:	00 0e                	add    %cl,(%rsi)
     ec3:	41 00 00             	add    %al,(%r8)
     ec6:	00 00                	add    %al,(%rax)
     ec8:	00 00                	add    %al,(%rax)
     eca:	ee                   	out    %al,(%dx)
     ecb:	00 00                	add    %al,(%rax)
     ecd:	00 00                	add    %al,(%rax)
     ecf:	00 00                	add    %al,(%rax)
     ed1:	00 01                	add    %al,(%rcx)
     ed3:	9c                   	pushf  
     ed4:	4b 0d 00 00 10 70    	rex.WXB or $0x70100000,%rax
     eda:	6d                   	insl   (%dx),%es:(%rdi)
     edb:	73 00                	jae    edd <__ImageBase+0xedd>
     edd:	36 43 a9 00 00 00 ac 	ss rex.XB test $0xac000000,%eax
     ee4:	02 00                	add    (%rax),%al
     ee6:	00 9e 02 00 00 15    	add    %bl,0x15000002(%rsi)
     eec:	6d                   	insl   (%dx),%es:(%rdi)
     eed:	73 00                	jae    eef <__ImageBase+0xeef>
     eef:	3d 22 4b 0d 00       	cmp    $0xd4b22,%eax
     ef4:	00 ef                	add    %ch,%bh
     ef6:	02 00                	add    (%rax),%al
     ef8:	00 e7                	add    %ah,%bh
     efa:	02 00                	add    (%rax),%al
     efc:	00 16                	add    %dl,(%rsi)
     efe:	f3 05 00 00 3e 21    	repz add $0x213e0000,%eax
     f04:	5a                   	pop    %rdx
     f05:	03 00                	add    (%rax),%eax
     f07:	00 02                	add    %al,(%rdx)
     f09:	91                   	xchg   %eax,%ecx
     f0a:	58                   	pop    %rax
     f0b:	08 15 0b 00 00 42    	or     %dl,0x4200000b(%rip)        # 42000f1c <_end+0x41fd5f0c>
     f11:	0f f5 02             	pmaddwd (%rdx),%mm0
     f14:	00 00                	add    %al,(%rax)
     f16:	16                   	(bad)  
     f17:	03 00                	add    (%rax),%eax
     f19:	00 12                	add    %dl,(%rdx)
     f1b:	03 00                	add    (%rax),%eax
     f1d:	00 08                	add    %cl,(%rax)
     f1f:	dd 08                	fisttpll (%rax)
     f21:	00 00                	add    %al,(%rax)
     f23:	43 14 55             	rex.XB adc $0x55,%al
     f26:	03 00                	add    (%rax),%eax
     f28:	00 28                	add    %ch,(%rax)
     f2a:	03 00                	add    (%rax),%eax
     f2c:	00 26                	add    %ah,(%rsi)
     f2e:	03 00                	add    (%rax),%eax
     f30:	00 08                	add    %cl,(%rax)
     f32:	37                   	(bad)  
     f33:	07                   	(bad)  
     f34:	00 00                	add    %al,(%rax)
     f36:	44 09 e0             	or     %r12d,%eax
     f39:	00 00                	add    %al,(%rax)
     f3b:	00 32                	add    %dh,(%rdx)
     f3d:	03 00                	add    (%rax),%eax
     f3f:	00 30                	add    %dh,(%rax)
     f41:	03 00                	add    (%rax),%eax
     f43:	00 08                	add    %cl,(%rax)
     f45:	c2 0b 00             	ret    $0xb
     f48:	00 45 14             	add    %al,0x14(%rbp)
     f4b:	55                   	push   %rbp
     f4c:	03 00                	add    (%rax),%eax
     f4e:	00 41 03             	add    %al,0x3(%rcx)
     f51:	00 00                	add    %al,(%rax)
     f53:	3b 03                	cmp    (%rbx),%eax
     f55:	00 00                	add    %al,(%rax)
     f57:	1e                   	(bad)  
     f58:	65 72 72             	gs jb  fcd <__ImageBase+0xfcd>
     f5b:	00 63 e9             	add    %ah,-0x17(%rbx)
     f5e:	41 00 00             	add    %al,(%r8)
     f61:	00 00                	add    %al,(%rax)
     f63:	00 00                	add    %al,(%rax)
     f65:	04 36                	add    $0x36,%al
     f67:	41 00 00             	add    %al,(%r8)
     f6a:	00 00                	add    %al,(%rax)
     f6c:	00 00                	add    %al,(%rax)
     f6e:	61                   	(bad)  
     f6f:	06                   	(bad)  
     f70:	00 00                	add    %al,(%rax)
     f72:	72 0c                	jb     f80 <__ImageBase+0xf80>
     f74:	00 00                	add    %al,(%rax)
     f76:	01 01                	add    %eax,(%rcx)
     f78:	55                   	push   %rbp
     f79:	02 73 00             	add    0x0(%rbx),%dh
     f7c:	01 01                	add    %eax,(%rcx)
     f7e:	54                   	push   %rsp
     f7f:	01 38                	add    %edi,(%rax)
     f81:	00 04 59             	add    %al,(%rcx,%rbx,2)
     f84:	41 00 00             	add    %al,(%r8)
     f87:	00 00                	add    %al,(%rax)
     f89:	00 00                	add    %al,(%rax)
     f8b:	34 06                	xor    $0x6,%al
     f8d:	00 00                	add    %al,(%rax)
     f8f:	9a                   	(bad)  
     f90:	0c 00                	or     $0x0,%al
     f92:	00 01                	add    %al,(%rcx)
     f94:	01 55 02             	add    %edx,0x2(%rbp)
     f97:	91                   	xchg   %eax,%ecx
     f98:	58                   	pop    %rax
     f99:	01 01                	add    %eax,(%rcx)
     f9b:	54                   	push   %rsp
     f9c:	01 38                	add    %edi,(%rax)
     f9e:	01 01                	add    %eax,(%rcx)
     fa0:	51                   	push   %rcx
     fa1:	02 73 00             	add    0x0(%rbx),%dh
     fa4:	01 01                	add    %eax,(%rcx)
     fa6:	52                   	push   %rdx
     fa7:	01 38                	add    %edi,(%rax)
     fa9:	00 04 7f             	add    %al,(%rdi,%rdi,2)
     fac:	41 00 00             	add    %al,(%r8)
     faf:	00 00                	add    %al,(%rax)
     fb1:	00 00                	add    %al,(%rax)
     fb3:	61                   	(bad)  
     fb4:	06                   	(bad)  
     fb5:	00 00                	add    %al,(%rax)
     fb7:	b7 0c                	mov    $0xc,%bh
     fb9:	00 00                	add    %al,(%rax)
     fbb:	01 01                	add    %eax,(%rcx)
     fbd:	55                   	push   %rbp
     fbe:	02 7c 00 01          	add    0x1(%rax,%rax,1),%bh
     fc2:	01 54 01 40          	add    %edx,0x40(%rcx,%rax,1)
     fc6:	00 04 95 41 00 00 00 	add    %al,0x41(,%rdx,4)
     fcd:	00 00                	add    %al,(%rax)
     fcf:	00 1e                	add    %bl,(%rsi)
     fd1:	06                   	(bad)  
     fd2:	00 00                	add    %al,(%rax)
     fd4:	ce                   	(bad)  
     fd5:	0c 00                	or     $0x0,%al
     fd7:	00 01                	add    %al,(%rcx)
     fd9:	01 55 01             	add    %edx,0x1(%rbp)
     fdc:	40 00 04 b2          	rex add %al,(%rdx,%rsi,4)
     fe0:	41 00 00             	add    %al,(%r8)
     fe3:	00 00                	add    %al,(%rax)
     fe5:	00 00                	add    %al,(%rax)
     fe7:	34 06                	xor    $0x6,%al
     fe9:	00 00                	add    %al,(%rax)
     feb:	f6 0c 00 00          	testb  $0x0,(%rax,%rax,1)
     fef:	01 01                	add    %eax,(%rcx)
     ff1:	55                   	push   %rbp
     ff2:	02 73 00             	add    0x0(%rbx),%dh
     ff5:	01 01                	add    %eax,(%rcx)
     ff7:	54                   	push   %rsp
     ff8:	01 40 01             	add    %eax,0x1(%rax)
     ffb:	01 51 02             	add    %edx,0x2(%rcx)
     ffe:	7c 00                	jl     1000 <__ImageBase+0x1000>
    1000:	01 01                	add    %eax,(%rcx)
    1002:	52                   	push   %rdx
    1003:	01 40 00             	add    %eax,0x0(%rax)
    1006:	04 c0                	add    $0xc0,%al
    1008:	41 00 00             	add    %al,(%r8)
    100b:	00 00                	add    %al,(%rax)
    100d:	00 00                	add    %al,(%rax)
    100f:	7a 05                	jp     1016 <_Z9pcl_entryPvS_@plt+0x6>
    1011:	00 00                	add    %al,(%rax)
    1013:	0e                   	(bad)  
    1014:	0d 00 00 01 01       	or     $0x1010000,%eax
    1019:	55                   	push   %rbp
    101a:	02 73 00             	add    0x0(%rbx),%dh
    101d:	00 04 da             	add    %al,(%rdx,%rbx,8)
    1020:	41 00 00             	add    %al,(%r8)
    1023:	00 00                	add    %al,(%rax)
    1025:	00 00                	add    %al,(%rax)
    1027:	bd 05 00 00 36       	mov    $0x36000005,%ebp
    102c:	0d 00 00 01 01       	or     $0x1010000,%eax
    1031:	55                   	push   %rbp
    1032:	02 7c 00 01          	add    0x1(%rax,%rax,1),%bh
    1036:	01 54 01 40          	add    %edx,0x40(%rcx,%rax,1)
    103a:	01 01                	add    %eax,(%rcx)
    103c:	51                   	push   %rcx
    103d:	02 73 00             	add    0x0(%rbx),%dh
    1040:	01 01                	add    %eax,(%rcx)
    1042:	52                   	push   %rdx
    1043:	01 40 00             	add    %eax,0x0(%rax)
    1046:	18 f1                	sbb    %dh,%cl
    1048:	41 00 00             	add    %al,(%r8)
    104b:	00 00                	add    %al,(%rax)
    104d:	00 00                	add    %al,(%rax)
    104f:	ab                   	stos   %eax,%es:(%rdi)
    1050:	05 00 00 01 01       	add    $0x1010000,%eax
    1055:	55                   	push   %rbp
    1056:	02 73 00             	add    0x0(%rbx),%dh
    1059:	00 00                	add    %al,(%rax)
    105b:	09 5a 03             	or     %ebx,0x3(%rdx)
    105e:	00 00                	add    %al,(%rax)
    1060:	2f                   	(bad)  
    1061:	64 0b 00             	or     %fs:(%rax),%eax
    1064:	00 fc                	add    %bh,%ah
    1066:	41 00 00             	add    %al,(%r8)
    1069:	00 00                	add    %al,(%rax)
    106b:	00 00                	add    %al,(%rax)
    106d:	66 00 00             	data16 add %al,(%rax)
    1070:	00 00                	add    %al,(%rax)
    1072:	00 00                	add    %al,(%rax)
    1074:	00 01                	add    %al,(%rcx)
    1076:	9c                   	pushf  
    1077:	1f                   	(bad)  
    1078:	75 0b                	jne    1085 <ippcpSetCpuFeatures@plt+0x6d>
    107a:	00 00                	add    %al,(%rax)
    107c:	60                   	(bad)  
    107d:	03 00                	add    (%rax),%eax
    107f:	00 58 03             	add    %bl,0x3(%rax)
    1082:	00 00                	add    %al,(%rax)
    1084:	19 81 0b 00 00 19    	sbb    %eax,0x1900000b(%rcx)
    108a:	8c 0b                	mov    %cs,(%rbx)
    108c:	00 00                	add    %al,(%rax)
    108e:	19 97 0b 00 00 30    	sbb    %edx,0x3000000b(%rdi)
    1094:	64 0b 00             	or     %fs:(%rax),%eax
    1097:	00 22                	add    %ah,(%rdx)
    1099:	42 00 00             	rex.X add %al,(%rax)
    109c:	00 00                	add    %al,(%rax)
    109e:	00 00                	add    %al,(%rax)
    10a0:	00 22                	add    %ah,(%rdx)
    10a2:	42 00 00             	rex.X add %al,(%rax)
    10a5:	00 00                	add    %al,(%rax)
    10a7:	00 00                	add    %al,(%rax)
    10a9:	34 00                	xor    $0x0,%al
    10ab:	00 00                	add    %al,(%rax)
    10ad:	00 00                	add    %al,(%rax)
    10af:	00 00                	add    %al,(%rax)
    10b1:	01 68 1f             	add    %ebp,0x1f(%rax)
    10b4:	0d 0e 00 00 1f       	or     $0x1f00000e,%eax
    10b9:	75 0b                	jne    10c6 <ippcpSetCpuFeatures@plt+0xae>
    10bb:	00 00                	add    %al,(%rax)
    10bd:	82                   	(bad)  
    10be:	03 00                	add    (%rax),%eax
    10c0:	00 80 03 00 00 20    	add    %al,0x20000003(%rax)
    10c6:	81 0b 00 00 8c 03    	orl    $0x38c0000,(%rbx)
    10cc:	00 00                	add    %al,(%rax)
    10ce:	8a 03                	mov    (%rbx),%al
    10d0:	00 00                	add    %al,(%rax)
    10d2:	31 8c 0b 00 00 02 91 	xor    %ecx,-0x6efe0000(%rbx,%rcx,1)
    10d9:	68 20 97 0b 00       	push   $0xb9720
    10de:	00 96 03 00 00 94    	add    %dl,-0x6bfffffd(%rsi)
    10e4:	03 00                	add    (%rax),%eax
    10e6:	00 04 3c             	add    %al,(%rsp,%rdi,1)
    10e9:	42 00 00             	rex.X add %al,(%rax)
    10ec:	00 00                	add    %al,(%rax)
    10ee:	00 00                	add    %al,(%rax)
    10f0:	34 06                	xor    $0x6,%al
    10f2:	00 00                	add    %al,(%rax)
    10f4:	ff 0d 00 00 01 01    	decl   0x1010000(%rip)        # 10110fa <_end+0xfe60ea>
    10fa:	55                   	push   %rbp
    10fb:	02 91 68 01 01 54    	add    0x54010168(%rcx),%dl
    1101:	01 38                	add    %edi,(%rax)
    1103:	01 01                	add    %eax,(%rcx)
    1105:	51                   	push   %rcx
    1106:	02 73 00             	add    0x0(%rbx),%dh
    1109:	01 01                	add    %eax,(%rcx)
    110b:	52                   	push   %rdx
    110c:	01 38                	add    %edi,(%rax)
    110e:	00 0d 54 42 00 00    	add    %cl,0x4254(%rip)        # 5368 <ct_decode+0xe68>
    1114:	00 00                	add    %al,(%rax)
    1116:	00 00                	add    %al,(%rax)
    1118:	8c 05 00 00 00 18    	mov    %es,0x18000000(%rip)        # 1800111e <_end+0x17fd610e>
    111e:	17                   	(bad)  
    111f:	42 00 00             	rex.X add %al,(%rax)
    1122:	00 00                	add    %al,(%rax)
    1124:	00 00                	add    %al,(%rax)
    1126:	61                   	(bad)  
    1127:	06                   	(bad)  
    1128:	00 00                	add    %al,(%rax)
    112a:	01 01                	add    %eax,(%rcx)
    112c:	55                   	push   %rbp
    112d:	02 73 00             	add    0x0(%rbx),%dh
    1130:	01 01                	add    %eax,(%rcx)
    1132:	54                   	push   %rsp
    1133:	01 38                	add    %edi,(%rax)
    1135:	00 00                	add    %al,(%rax)
	...

Disassembly of section .debug_abbrev:

0000000000000000 <.debug_abbrev>:
   0:	01 24 00             	add    %esp,(%rax,%rax,1)
   3:	0b 0b                	or     (%rbx),%ecx
   5:	3e 0b 03             	ds or  (%rbx),%eax
   8:	0e                   	(bad)  
   9:	00 00                	add    %al,(%rax)
   b:	02 0f                	add    (%rdi),%cl
   d:	00 0b                	add    %cl,(%rbx)
   f:	21 08                	and    %ecx,(%rax)
  11:	49 13 00             	adc    (%r8),%rax
  14:	00 03                	add    %al,(%rbx)
  16:	05 00 49 13 00       	add    $0x134900,%eax
  1b:	00 04 49             	add    %al,(%rcx,%rcx,2)
  1e:	00 02                	add    %al,(%rdx)
  20:	18 7e 18             	sbb    %bh,0x18(%rsi)
  23:	00 00                	add    %al,(%rax)
  25:	05 16 00 03 0e       	add    $0xe030016,%eax
  2a:	3a 0b                	cmp    (%rbx),%cl
  2c:	3b 0b                	cmp    (%rbx),%ecx
  2e:	39 0b                	cmp    %ecx,(%rbx)
  30:	49 13 00             	adc    (%r8),%rax
  33:	00 06                	add    %al,(%rsi)
  35:	2e 01 3f             	cs add %edi,(%rdi)
  38:	19 03                	sbb    %eax,(%rbx)
  3a:	0e                   	(bad)  
  3b:	3a 21                	cmp    (%rcx),%ah
  3d:	01 3b                	add    %edi,(%rbx)
  3f:	0b 39                	or     (%rcx),%edi
  41:	21 06                	and    %eax,(%rsi)
  43:	27                   	(bad)  
  44:	19 11                	sbb    %edx,(%rcx)
  46:	01 12                	add    %edx,(%rdx)
  48:	07                   	(bad)  
  49:	40 18 7a 19          	sbb    %dil,0x19(%rdx)
  4d:	01 13                	add    %edx,(%rbx)
  4f:	00 00                	add    %al,(%rax)
  51:	07                   	(bad)  
  52:	05 00 03 0e 3a       	add    $0x3a0e0300,%eax
  57:	21 01                	and    %eax,(%rcx)
  59:	3b 0b                	cmp    (%rbx),%ecx
  5b:	39 0b                	cmp    %ecx,(%rbx)
  5d:	49 13 02             	adc    (%r10),%rax
  60:	17                   	(bad)  
  61:	b7 42                	mov    $0x42,%bh
  63:	17                   	(bad)  
  64:	00 00                	add    %al,(%rax)
  66:	08 0d 00 03 0e 3a    	or     %cl,0x3a0e0300(%rip)        # 3a0e036c <_end+0x3a0b535c>
  6c:	21 05 3b 0b 39 21    	and    %eax,0x21390b3b(%rip)        # 21390bad <_end+0x21365b9d>
  72:	0a 49 13             	or     0x13(%rcx),%cl
  75:	38 0b                	cmp    %cl,(%rbx)
  77:	00 00                	add    %al,(%rax)
  79:	09 34 00             	or     %esi,(%rax,%rax,1)
  7c:	03 0e                	add    (%rsi),%ecx
  7e:	3a 21                	cmp    (%rcx),%ah
  80:	01 3b                	add    %edi,(%rbx)
  82:	0b 39                	or     (%rcx),%edi
  84:	0b 49 13             	or     0x13(%rcx),%ecx
  87:	3f                   	(bad)  
  88:	19 02                	sbb    %eax,(%rdx)
  8a:	18 00                	sbb    %al,(%rax)
  8c:	00 0a                	add    %cl,(%rdx)
  8e:	2e 01 3f             	cs add %edi,(%rdi)
  91:	19 03                	sbb    %eax,(%rbx)
  93:	0e                   	(bad)  
  94:	3a 0b                	cmp    (%rbx),%cl
  96:	3b 0b                	cmp    (%rbx),%ecx
  98:	39 0b                	cmp    %ecx,(%rbx)
  9a:	27                   	(bad)  
  9b:	19 49 13             	sbb    %ecx,0x13(%rcx)
  9e:	3c 19                	cmp    $0x19,%al
  a0:	01 13                	add    %edx,(%rbx)
  a2:	00 00                	add    %al,(%rax)
  a4:	0b 2e                	or     (%rsi),%ebp
  a6:	01 3f                	add    %edi,(%rdi)
  a8:	19 03                	sbb    %eax,(%rbx)
  aa:	0e                   	(bad)  
  ab:	3a 21                	cmp    (%rcx),%ah
  ad:	01 3b                	add    %edi,(%rbx)
  af:	21 22                	and    %esp,(%rdx)
  b1:	39 21                	cmp    %esp,(%rcx)
  b3:	05 49 13 3c 19       	add    $0x193c1349,%eax
  b8:	01 13                	add    %edx,(%rbx)
  ba:	00 00                	add    %al,(%rax)
  bc:	0c 18                	or     $0x18,%al
  be:	00 00                	add    %al,(%rax)
  c0:	00 0d 05 00 03 08    	add    %cl,0x8030005(%rip)        # 80300cb <_end+0x80050bb>
  c6:	3a 21                	cmp    (%rcx),%ah
  c8:	01 3b                	add    %edi,(%rbx)
  ca:	0b 39                	or     (%rcx),%edi
  cc:	0b 49 13             	or     0x13(%rcx),%ecx
  cf:	02 17                	add    (%rdi),%dl
  d1:	b7 42                	mov    $0x42,%bh
  d3:	17                   	(bad)  
  d4:	00 00                	add    %al,(%rax)
  d6:	0e                   	(bad)  
  d7:	48 01 7d 01          	add    %rdi,0x1(%rbp)
  db:	7f 13                	jg     f0 <__ImageBase+0xf0>
  dd:	00 00                	add    %al,(%rax)
  df:	0f 48 01             	cmovs  (%rcx),%eax
  e2:	7d 01                	jge    e5 <__ImageBase+0xe5>
  e4:	7f 13                	jg     f9 <__ImageBase+0xf9>
  e6:	01 13                	add    %edx,(%rbx)
  e8:	00 00                	add    %al,(%rax)
  ea:	10 11                	adc    %dl,(%rcx)
  ec:	01 25 0e 13 0b 03    	add    %esp,0x30b130e(%rip)        # 30b1400 <_end+0x30863f0>
  f2:	1f                   	(bad)  
  f3:	1b 1f                	sbb    (%rdi),%ebx
  f5:	11 01                	adc    %eax,(%rcx)
  f7:	12 07                	adc    (%rdi),%al
  f9:	10 17                	adc    %dl,(%rdi)
  fb:	00 00                	add    %al,(%rax)
  fd:	11 24 00             	adc    %esp,(%rax,%rax,1)
 100:	0b 0b                	or     (%rbx),%ecx
 102:	3e 0b 03             	ds or  (%rbx),%eax
 105:	08 00                	or     %al,(%rax)
 107:	00 12                	add    %dl,(%rdx)
 109:	26 00 49 13          	es add %cl,0x13(%rcx)
 10d:	00 00                	add    %al,(%rax)
 10f:	13 13                	adc    (%rbx),%edx
 111:	01 03                	add    %eax,(%rbx)
 113:	0e                   	(bad)  
 114:	0b 0b                	or     (%rbx),%ecx
 116:	3a 0b                	cmp    (%rbx),%cl
 118:	3b 0b                	cmp    (%rbx),%ecx
 11a:	39 0b                	cmp    %ecx,(%rbx)
 11c:	01 13                	add    %edx,(%rbx)
 11e:	00 00                	add    %al,(%rax)
 120:	14 34                	adc    $0x34,%al
 122:	00 03                	add    %al,(%rbx)
 124:	08 3a                	or     %bh,(%rdx)
 126:	0b 3b                	or     (%rbx),%edi
 128:	0b 39                	or     (%rcx),%edi
 12a:	0b 49 13             	or     0x13(%rcx),%ecx
 12d:	3f                   	(bad)  
 12e:	19 02                	sbb    %eax,(%rdx)
 130:	18 00                	sbb    %al,(%rax)
 132:	00 15 26 00 00 00    	add    %dl,0x26(%rip)        # 15e <__ImageBase+0x15e>
 138:	16                   	(bad)  
 139:	2e 01 3f             	cs add %edi,(%rdi)
 13c:	19 03                	sbb    %eax,(%rbx)
 13e:	0e                   	(bad)  
 13f:	3a 0b                	cmp    (%rbx),%cl
 141:	3b 0b                	cmp    (%rbx),%ecx
 143:	39 0b                	cmp    %ecx,(%rbx)
 145:	11 01                	adc    %eax,(%rcx)
 147:	12 07                	adc    (%rdi),%al
 149:	40 18 7a 19          	sbb    %dil,0x19(%rdx)
 14d:	01 13                	add    %edx,(%rbx)
 14f:	00 00                	add    %al,(%rax)
 151:	17                   	(bad)  
 152:	48 01 7d 01          	add    %rdi,0x1(%rbp)
 156:	82                   	(bad)  
 157:	01 19                	add    %ebx,(%rcx)
 159:	7f 13                	jg     16e <__ImageBase+0x16e>
 15b:	00 00                	add    %al,(%rax)
 15d:	18 05 00 03 08 3a    	sbb    %al,0x3a080300(%rip)        # 3a080463 <_end+0x3a055453>
 163:	0b 3b                	or     (%rbx),%edi
 165:	0b 39                	or     (%rcx),%edi
 167:	0b 49 13             	or     0x13(%rcx),%ecx
 16a:	02 18                	add    (%rax),%bl
 16c:	00 00                	add    %al,(%rax)
 16e:	00 01                	add    %al,(%rcx)
 170:	11 00                	adc    %eax,(%rax)
 172:	10 17                	adc    %dl,(%rdi)
 174:	11 01                	adc    %eax,(%rcx)
 176:	12 0f                	adc    (%rdi),%cl
 178:	03 0e                	add    (%rsi),%ecx
 17a:	1b 0e                	sbb    (%rsi),%ecx
 17c:	25 0e 13 05 00       	and    $0x5130e,%eax
 181:	00 00                	add    %al,(%rax)
 183:	01 49 00             	add    %ecx,0x0(%rcx)
 186:	02 18                	add    (%rax),%bl
 188:	7e 18                	jle    1a2 <__ImageBase+0x1a2>
 18a:	00 00                	add    %al,(%rax)
 18c:	02 28                	add    (%rax),%ch
 18e:	00 03                	add    %al,(%rbx)
 190:	0e                   	(bad)  
 191:	1c 05                	sbb    $0x5,%al
 193:	00 00                	add    %al,(%rax)
 195:	03 05 00 49 13 00    	add    0x134900(%rip),%eax        # 134a9b <_end+0x109a8b>
 19b:	00 04 48             	add    %al,(%rax,%rcx,2)
 19e:	01 7d 01             	add    %edi,0x1(%rbp)
 1a1:	7f 13                	jg     1b6 <__ImageBase+0x1b6>
 1a3:	01 13                	add    %edx,(%rbx)
 1a5:	00 00                	add    %al,(%rax)
 1a7:	05 0d 00 03 0e       	add    $0xe03000d,%eax
 1ac:	3a 0b                	cmp    (%rbx),%cl
 1ae:	3b 0b                	cmp    (%rbx),%ecx
 1b0:	39 0b                	cmp    %ecx,(%rbx)
 1b2:	49 13 38             	adc    (%r8),%rdi
 1b5:	0b 00                	or     (%rax),%eax
 1b7:	00 06                	add    %al,(%rsi)
 1b9:	16                   	(bad)  
 1ba:	00 03                	add    %al,(%rbx)
 1bc:	0e                   	(bad)  
 1bd:	3a 0b                	cmp    (%rbx),%cl
 1bf:	3b 0b                	cmp    (%rbx),%ecx
 1c1:	39 0b                	cmp    %ecx,(%rbx)
 1c3:	49 13 00             	adc    (%r8),%rax
 1c6:	00 07                	add    %al,(%rdi)
 1c8:	24 00                	and    $0x0,%al
 1ca:	0b 0b                	or     (%rbx),%ecx
 1cc:	3e 0b 03             	ds or  (%rbx),%eax
 1cf:	0e                   	(bad)  
 1d0:	00 00                	add    %al,(%rax)
 1d2:	08 34 00             	or     %dh,(%rax,%rax,1)
 1d5:	03 0e                	add    (%rsi),%ecx
 1d7:	3a 21                	cmp    (%rcx),%ah
 1d9:	01 3b                	add    %edi,(%rbx)
 1db:	0b 39                	or     (%rcx),%edi
 1dd:	0b 49 13             	or     0x13(%rcx),%ecx
 1e0:	02 17                	add    (%rdi),%dl
 1e2:	b7 42                	mov    $0x42,%bh
 1e4:	17                   	(bad)  
 1e5:	00 00                	add    %al,(%rax)
 1e7:	09 0f                	or     %ecx,(%rdi)
 1e9:	00 0b                	add    %cl,(%rbx)
 1eb:	21 08                	and    %ecx,(%rax)
 1ed:	49 13 00             	adc    (%r8),%rax
 1f0:	00 0a                	add    %cl,(%rdx)
 1f2:	28 00                	sub    %al,(%rax)
 1f4:	03 0e                	add    (%rsi),%ecx
 1f6:	1c 0b                	sbb    $0xb,%al
 1f8:	00 00                	add    %al,(%rax)
 1fa:	0b 2e                	or     (%rsi),%ebp
 1fc:	01 3f                	add    %edi,(%rdi)
 1fe:	19 03                	sbb    %eax,(%rbx)
 200:	0e                   	(bad)  
 201:	3a 0b                	cmp    (%rbx),%cl
 203:	3b 0b                	cmp    (%rbx),%ecx
 205:	39 0b                	cmp    %ecx,(%rbx)
 207:	27                   	(bad)  
 208:	19 49 13             	sbb    %ecx,0x13(%rcx)
 20b:	3c 19                	cmp    $0x19,%al
 20d:	01 13                	add    %edx,(%rbx)
 20f:	00 00                	add    %al,(%rax)
 211:	0c 13                	or     $0x13,%al
 213:	01 03                	add    %eax,(%rbx)
 215:	0e                   	(bad)  
 216:	0b 0b                	or     (%rbx),%ecx
 218:	3a 0b                	cmp    (%rbx),%cl
 21a:	3b 0b                	cmp    (%rbx),%ecx
 21c:	39 21                	cmp    %esp,(%rcx)
 21e:	10 01                	adc    %al,(%rcx)
 220:	13 00                	adc    (%rax),%eax
 222:	00 0d 48 00 7d 01    	add    %cl,0x17d0048(%rip)        # 17d0270 <_end+0x17a5260>
 228:	7f 13                	jg     23d <__ImageBase+0x23d>
 22a:	00 00                	add    %al,(%rax)
 22c:	0e                   	(bad)  
 22d:	26 00 49 13          	es add %cl,0x13(%rcx)
 231:	00 00                	add    %al,(%rax)
 233:	0f 2e 01             	ucomiss (%rcx),%xmm0
 236:	3f                   	(bad)  
 237:	19 03                	sbb    %eax,(%rbx)
 239:	0e                   	(bad)  
 23a:	3a 0b                	cmp    (%rbx),%cl
 23c:	3b 0b                	cmp    (%rbx),%ecx
 23e:	39 0b                	cmp    %ecx,(%rbx)
 240:	27                   	(bad)  
 241:	19 3c 19             	sbb    %edi,(%rcx,%rbx,1)
 244:	01 13                	add    %edx,(%rbx)
 246:	00 00                	add    %al,(%rax)
 248:	10 05 00 03 08 3a    	adc    %al,0x3a080300(%rip)        # 3a08054e <_end+0x3a05553e>
 24e:	21 01                	and    %eax,(%rcx)
 250:	3b 0b                	cmp    (%rbx),%ecx
 252:	39 0b                	cmp    %ecx,(%rbx)
 254:	49 13 02             	adc    (%r10),%rax
 257:	17                   	(bad)  
 258:	b7 42                	mov    $0x42,%bh
 25a:	17                   	(bad)  
 25b:	00 00                	add    %al,(%rax)
 25d:	11 13                	adc    %edx,(%rbx)
 25f:	01 0b                	add    %ecx,(%rbx)
 261:	0b 3a                	or     (%rdx),%edi
 263:	21 01                	and    %eax,(%rcx)
 265:	3b 0b                	cmp    (%rbx),%ecx
 267:	39 0b                	cmp    %ecx,(%rbx)
 269:	01 13                	add    %edx,(%rbx)
 26b:	00 00                	add    %al,(%rax)
 26d:	12 21                	adc    (%rcx),%ah
 26f:	00 49 13             	add    %cl,0x13(%rcx)
 272:	2f                   	(bad)  
 273:	0b 00                	or     (%rax),%eax
 275:	00 13                	add    %dl,(%rbx)
 277:	2e 00 3f             	cs add %bh,(%rdi)
 27a:	19 03                	sbb    %eax,(%rbx)
 27c:	0e                   	(bad)  
 27d:	3a 0b                	cmp    (%rbx),%cl
 27f:	3b 0b                	cmp    (%rbx),%ecx
 281:	39 0b                	cmp    %ecx,(%rbx)
 283:	27                   	(bad)  
 284:	19 3c 19             	sbb    %edi,(%rcx,%rbx,1)
 287:	00 00                	add    %al,(%rax)
 289:	14 34                	adc    $0x34,%al
 28b:	00 03                	add    %al,(%rbx)
 28d:	0e                   	(bad)  
 28e:	3a 21                	cmp    (%rcx),%ah
 290:	01 3b                	add    %edi,(%rbx)
 292:	0b 39                	or     (%rcx),%edi
 294:	0b 49 13             	or     0x13(%rcx),%ecx
 297:	00 00                	add    %al,(%rax)
 299:	15 34 00 03 08       	adc    $0x8030034,%eax
 29e:	3a 21                	cmp    (%rcx),%ah
 2a0:	01 3b                	add    %edi,(%rbx)
 2a2:	0b 39                	or     (%rcx),%edi
 2a4:	0b 49 13             	or     0x13(%rcx),%ecx
 2a7:	02 17                	add    (%rdi),%dl
 2a9:	b7 42                	mov    $0x42,%bh
 2ab:	17                   	(bad)  
 2ac:	00 00                	add    %al,(%rax)
 2ae:	16                   	(bad)  
 2af:	34 00                	xor    $0x0,%al
 2b1:	03 0e                	add    (%rsi),%ecx
 2b3:	3a 21                	cmp    (%rcx),%ah
 2b5:	01 3b                	add    %edi,(%rbx)
 2b7:	0b 39                	or     (%rcx),%edi
 2b9:	0b 49 13             	or     0x13(%rcx),%ecx
 2bc:	02 18                	add    (%rax),%bl
 2be:	00 00                	add    %al,(%rax)
 2c0:	17                   	(bad)  
 2c1:	2e 01 03             	cs add %eax,(%rbx)
 2c4:	0e                   	(bad)  
 2c5:	3a 21                	cmp    (%rcx),%ah
 2c7:	01 3b                	add    %edi,(%rbx)
 2c9:	0b 39                	or     (%rcx),%edi
 2cb:	21 1f                	and    %ebx,(%rdi)
 2cd:	27                   	(bad)  
 2ce:	19 49 13             	sbb    %ecx,0x13(%rcx)
 2d1:	11 01                	adc    %eax,(%rcx)
 2d3:	12 07                	adc    (%rdi),%al
 2d5:	40 18 7a 19          	sbb    %dil,0x19(%rdx)
 2d9:	01 13                	add    %edx,(%rbx)
 2db:	00 00                	add    %al,(%rax)
 2dd:	18 48 01             	sbb    %cl,0x1(%rax)
 2e0:	7d 01                	jge    2e3 <__ImageBase+0x2e3>
 2e2:	7f 13                	jg     2f7 <__ImageBase+0x2f7>
 2e4:	00 00                	add    %al,(%rax)
 2e6:	19 34 00             	sbb    %esi,(%rax,%rax,1)
 2e9:	31 13                	xor    %edx,(%rbx)
 2eb:	00 00                	add    %al,(%rax)
 2ed:	1a 01                	sbb    (%rcx),%al
 2ef:	01 49 13             	add    %ecx,0x13(%rcx)
 2f2:	01 13                	add    %edx,(%rbx)
 2f4:	00 00                	add    %al,(%rax)
 2f6:	1b 34 00             	sbb    (%rax,%rax,1),%esi
 2f9:	03 0e                	add    (%rsi),%ecx
 2fb:	3a 21                	cmp    (%rcx),%ah
 2fd:	01 3b                	add    %edi,(%rbx)
 2ff:	0b 39                	or     (%rcx),%edi
 301:	21 03                	and    %eax,(%rbx)
 303:	49 13 3f             	adc    (%r15),%rdi
 306:	19 02                	sbb    %eax,(%rdx)
 308:	18 00                	sbb    %al,(%rax)
 30a:	00 1c 05 00 03 08 3a 	add    %bl,0x3a080300(,%rax,1)
 311:	21 01                	and    %eax,(%rcx)
 313:	3b 21                	cmp    (%rcx),%esp
 315:	84 02                	test   %al,(%rdx)
 317:	39 0b                	cmp    %ecx,(%rbx)
 319:	49 13 02             	adc    (%r10),%rax
 31c:	17                   	(bad)  
 31d:	b7 42                	mov    $0x42,%bh
 31f:	17                   	(bad)  
 320:	00 00                	add    %al,(%rax)
 322:	1d 34 00 03 0e       	sbb    $0xe030034,%eax
 327:	3a 21                	cmp    (%rcx),%ah
 329:	01 3b                	add    %edi,(%rbx)
 32b:	05 39 0b 49 13       	add    $0x13490b39,%eax
 330:	02 17                	add    (%rdi),%dl
 332:	b7 42                	mov    $0x42,%bh
 334:	17                   	(bad)  
 335:	00 00                	add    %al,(%rax)
 337:	1e                   	(bad)  
 338:	0a 00                	or     (%rax),%al
 33a:	03 08                	add    (%rax),%ecx
 33c:	3a 21                	cmp    (%rcx),%ah
 33e:	01 3b                	add    %edi,(%rbx)
 340:	0b 39                	or     (%rcx),%edi
 342:	21 01                	and    %eax,(%rcx)
 344:	11 01                	adc    %eax,(%rcx)
 346:	00 00                	add    %al,(%rax)
 348:	1f                   	(bad)  
 349:	05 00 31 13 02       	add    $0x2133100,%eax
 34e:	17                   	(bad)  
 34f:	b7 42                	mov    $0x42,%bh
 351:	17                   	(bad)  
 352:	00 00                	add    %al,(%rax)
 354:	20 34 00             	and    %dh,(%rax,%rax,1)
 357:	31 13                	xor    %edx,(%rbx)
 359:	02 17                	add    (%rdi),%dl
 35b:	b7 42                	mov    $0x42,%bh
 35d:	17                   	(bad)  
 35e:	00 00                	add    %al,(%rax)
 360:	21 11                	and    %edx,(%rcx)
 362:	01 25 0e 13 0b 03    	add    %esp,0x30b130e(%rip)        # 30b1676 <_end+0x3086666>
 368:	1f                   	(bad)  
 369:	1b 1f                	sbb    (%rdi),%ebx
 36b:	11 01                	adc    %eax,(%rcx)
 36d:	12 07                	adc    (%rdi),%al
 36f:	10 17                	adc    %dl,(%rdi)
 371:	00 00                	add    %al,(%rax)
 373:	22 24 00             	and    (%rax,%rax,1),%ah
 376:	0b 0b                	or     (%rbx),%ecx
 378:	3e 0b 03             	ds or  (%rbx),%eax
 37b:	08 00                	or     %al,(%rax)
 37d:	00 23                	add    %ah,(%rbx)
 37f:	0f 00 0b             	str    (%rbx)
 382:	0b 00                	or     (%rax),%eax
 384:	00 24 04             	add    %ah,(%rsp,%rax,1)
 387:	01 03                	add    %eax,(%rbx)
 389:	0e                   	(bad)  
 38a:	3e 0b 0b             	ds or  (%rbx),%ecx
 38d:	0b 49 13             	or     0x13(%rcx),%ecx
 390:	3a 0b                	cmp    (%rbx),%cl
 392:	3b 0b                	cmp    (%rbx),%ecx
 394:	39 0b                	cmp    %ecx,(%rbx)
 396:	01 13                	add    %edx,(%rbx)
 398:	00 00                	add    %al,(%rax)
 39a:	25 26 00 00 00       	and    $0x26,%eax
 39f:	26 2e 01 3f          	es cs add %edi,(%rdi)
 3a3:	19 03                	sbb    %eax,(%rbx)
 3a5:	0e                   	(bad)  
 3a6:	3a 0b                	cmp    (%rbx),%cl
 3a8:	3b 05 39 0b 27 19    	cmp    0x19270b39(%rip),%eax        # 19270ee7 <_end+0x19245ed7>
 3ae:	49 13 11             	adc    (%r9),%rdx
 3b1:	01 12                	add    %edx,(%rdx)
 3b3:	07                   	(bad)  
 3b4:	40 18 7a 19          	sbb    %dil,0x19(%rdx)
 3b8:	01 13                	add    %edx,(%rbx)
 3ba:	00 00                	add    %al,(%rax)
 3bc:	27                   	(bad)  
 3bd:	34 00                	xor    $0x0,%al
 3bf:	03 0e                	add    (%rsi),%ecx
 3c1:	3a 0b                	cmp    (%rbx),%cl
 3c3:	3b 05 39 0b 49 13    	cmp    0x13490b39(%rip),%eax        # 13490f02 <_end+0x13465ef2>
 3c9:	00 00                	add    %al,(%rax)
 3cb:	28 34 00             	sub    %dh,(%rax,%rax,1)
 3ce:	03 08                	add    (%rax),%ecx
 3d0:	3a 0b                	cmp    (%rbx),%cl
 3d2:	3b 05 39 0b 49 13    	cmp    0x13490b39(%rip),%eax        # 13490f11 <_end+0x13465f01>
 3d8:	02 17                	add    (%rdi),%dl
 3da:	b7 42                	mov    $0x42,%bh
 3dc:	17                   	(bad)  
 3dd:	00 00                	add    %al,(%rax)
 3df:	29 34 00             	sub    %esi,(%rax,%rax,1)
 3e2:	03 0e                	add    (%rsi),%ecx
 3e4:	3a 0b                	cmp    (%rbx),%cl
 3e6:	3b 05 39 0b 49 13    	cmp    0x13490b39(%rip),%eax        # 13490f25 <_end+0x13465f15>
 3ec:	02 18                	add    (%rax),%bl
 3ee:	00 00                	add    %al,(%rax)
 3f0:	2a 2e                	sub    (%rsi),%ch
 3f2:	01 3f                	add    %edi,(%rdi)
 3f4:	19 03                	sbb    %eax,(%rbx)
 3f6:	0e                   	(bad)  
 3f7:	3a 0b                	cmp    (%rbx),%cl
 3f9:	3b 0b                	cmp    (%rbx),%ecx
 3fb:	39 0b                	cmp    %ecx,(%rbx)
 3fd:	27                   	(bad)  
 3fe:	19 49 13             	sbb    %ecx,0x13(%rcx)
 401:	11 01                	adc    %eax,(%rcx)
 403:	12 07                	adc    (%rdi),%al
 405:	40 18 7a 19          	sbb    %dil,0x19(%rdx)
 409:	01 13                	add    %edx,(%rbx)
 40b:	00 00                	add    %al,(%rax)
 40d:	2b 34 00             	sub    (%rax,%rax,1),%esi
 410:	03 0e                	add    (%rsi),%ecx
 412:	3a 0b                	cmp    (%rbx),%cl
 414:	3b 0b                	cmp    (%rbx),%ecx
 416:	39 0b                	cmp    %ecx,(%rbx)
 418:	49 13 1c 0b          	adc    (%r11,%rcx,1),%rbx
 41c:	00 00                	add    %al,(%rax)
 41e:	2c 2e                	sub    $0x2e,%al
 420:	01 03                	add    %eax,(%rbx)
 422:	0e                   	(bad)  
 423:	3a 0b                	cmp    (%rbx),%cl
 425:	3b 0b                	cmp    (%rbx),%ecx
 427:	39 0b                	cmp    %ecx,(%rbx)
 429:	27                   	(bad)  
 42a:	19 49 13             	sbb    %ecx,0x13(%rcx)
 42d:	20 0b                	and    %cl,(%rbx)
 42f:	01 13                	add    %edx,(%rbx)
 431:	00 00                	add    %al,(%rax)
 433:	2d 05 00 03 08       	sub    $0x8030005,%eax
 438:	3a 0b                	cmp    (%rbx),%cl
 43a:	3b 0b                	cmp    (%rbx),%ecx
 43c:	39 0b                	cmp    %ecx,(%rbx)
 43e:	49 13 00             	adc    (%r8),%rax
 441:	00 2e                	add    %ch,(%rsi)
 443:	34 00                	xor    $0x0,%al
 445:	03 08                	add    (%rax),%ecx
 447:	3a 0b                	cmp    (%rbx),%cl
 449:	3b 0b                	cmp    (%rbx),%ecx
 44b:	39 0b                	cmp    %ecx,(%rbx)
 44d:	49 13 00             	adc    (%r8),%rax
 450:	00 2f                	add    %ch,(%rdi)
 452:	2e 01 31             	cs add %esi,(%rcx)
 455:	13 11                	adc    (%rcx),%edx
 457:	01 12                	add    %edx,(%rdx)
 459:	07                   	(bad)  
 45a:	40 18 7a 19          	sbb    %dil,0x19(%rdx)
 45e:	00 00                	add    %al,(%rax)
 460:	30 1d 01 31 13 52    	xor    %bl,0x52133101(%rip)        # 52133567 <_end+0x52108557>
 466:	01 b8 42 0b 11 01    	add    %edi,0x1110b42(%rax)
 46c:	12 07                	adc    (%rdi),%al
 46e:	58                   	pop    %rax
 46f:	0b 59 0b             	or     0xb(%rcx),%ebx
 472:	57                   	push   %rdi
 473:	0b 01                	or     (%rcx),%eax
 475:	13 00                	adc    (%rax),%eax
 477:	00 31                	add    %dh,(%rcx)
 479:	34 00                	xor    $0x0,%al
 47b:	31 13                	xor    %edx,(%rbx)
 47d:	02 18                	add    (%rax),%bl
 47f:	00 00                	add    %al,(%rax)
	...

Disassembly of section .debug_line:

0000000000000000 <.debug_line>:
   0:	2f                   	(bad)  
   1:	01 00                	add    %eax,(%rax)
   3:	00 05 00 08 00 53    	add    %al,0x53000800(%rip)        # 53000809 <_end+0x52fd57f9>
   9:	00 00                	add    %al,(%rax)
   b:	00 01                	add    %al,(%rcx)
   d:	01 01                	add    %eax,(%rcx)
   f:	fb                   	sti    
  10:	0e                   	(bad)  
  11:	0d 00 01 01 01       	or     $0x1010100,%eax
  16:	01 00                	add    %eax,(%rax)
  18:	00 00                	add    %al,(%rax)
  1a:	01 00                	add    %eax,(%rax)
  1c:	00 01                	add    %al,(%rcx)
  1e:	01 01                	add    %eax,(%rcx)
  20:	1f                   	(bad)  
  21:	05 07 00 00 00       	add    $0x7,%eax
  26:	23 00                	and    (%rax),%eax
  28:	00 00                	add    %al,(%rax)
  2a:	47 00 00             	rex.RXB add %r8b,(%r8)
  2d:	00 67 00             	add    %ah,0x0(%rdi)
  30:	00 00                	add    %al,(%rax)
  32:	6a 00                	push   $0x0
  34:	00 00                	add    %al,(%rax)
  36:	02 01                	add    (%rcx),%al
  38:	1f                   	(bad)  
  39:	02 0f                	add    (%rdi),%cl
  3b:	07                   	(bad)  
	...
  44:	00 00                	add    %al,(%rax)
  46:	84 00                	test   %al,(%rax)
  48:	00 00                	add    %al,(%rax)
  4a:	01 8d 00 00 00 01    	add    %ecx,0x1000000(%rbp)
  50:	96                   	xchg   %eax,%esi
  51:	00 00                	add    %al,(%rax)
  53:	00 02                	add    %al,(%rdx)
  55:	9f                   	lahf   
  56:	00 00                	add    %al,(%rax)
  58:	00 03                	add    %al,(%rbx)
  5a:	aa                   	stos   %al,%es:(%rdi)
  5b:	00 00                	add    %al,(%rax)
  5d:	00 04 05 41 00 09 02 	add    %al,0x2090041(,%rax,1)
  64:	63 20                	movsxd (%rax),%esp
  66:	00 00                	add    %al,(%rax)
  68:	00 00                	add    %al,(%rax)
  6a:	00 00                	add    %al,(%rax)
  6c:	03 0c 01             	add    (%rcx,%rax,1),%ecx
  6f:	06                   	(bad)  
  70:	01 05 09 06 4c 05    	add    %eax,0x54c0609(%rip)        # 54c067f <_end+0x549566f>
  76:	41 06                	rex.B (bad) 
  78:	10 05 0d 22 05 0f    	adc    %al,0xf05220d(%rip)        # f05228b <_end+0xf02727b>
  7e:	3e 05 0d 56 58 05    	ds add $0x558560d,%eax
  84:	09 06                	or     %eax,(%rsi)
  86:	76 05                	jbe    8d <__ImageBase+0x8d>
  88:	0f 06                	clts   
  8a:	01 05 0c 00 02 04    	add    %eax,0x402000c(%rip)        # 402009c <_end+0x3ff508c>
  90:	01 58 05             	add    %ebx,0x5(%rax)
  93:	0d 06 4b 05 17       	or     $0x17054b06,%eax
  98:	06                   	(bad)  
  99:	13 05 40 00 02 04    	adc    0x4020040(%rip),%eax        # 40200df <_end+0x3ff50cf>
  9f:	01 08                	add    %ecx,(%rax)
  a1:	1e                   	(bad)  
  a2:	05 0d 00 02 04       	add    $0x402000d,%eax
  a7:	01 08                	add    %ecx,(%rax)
  a9:	12 05 01 50 05 2b    	adc    0x2b055001(%rip),%al        # 2b0550b0 <_end+0x2b02a0a0>
  af:	06                   	(bad)  
  b0:	30 06                	xor    %al,(%rsi)
  b2:	01 05 05 06 4b 05    	add    %eax,0x54b0605(%rip)        # 54b06bd <_end+0x54856ad>
  b8:	0c 06                	or     $0x6,%al
  ba:	01 05 07 74 05 20    	add    %eax,0x20057407(%rip)        # 200574c7 <_end+0x2002c4b7>
  c0:	00 02                	add    %al,(%rdx)
  c2:	04 01                	add    $0x1,%al
  c4:	58                   	pop    %rax
  c5:	05 1a 00 02 04       	add    $0x402001a,%eax
  ca:	01 74 05 09          	add    %esi,0x9(%rbp,%rax,1)
  ce:	06                   	(bad)  
  cf:	59                   	pop    %rcx
  d0:	05 19 06 01 05       	add    $0x5010619,%eax
  d5:	1a 3d 05 19 3b 05    	sbb    0x53b1905(%rip),%bh        # 53b19e0 <_end+0x53869d0>
  db:	09 06                	or     %eax,(%rsi)
  dd:	2f                   	(bad)  
  de:	05 16 06 01 05       	add    $0x5010616,%eax
  e3:	01 30                	add    %esi,(%rax)
  e5:	05 1a 06 22 05       	add    $0x522061a,%eax
  ea:	05 4c 05 1a 06       	add    $0x61a054c,%eax
  ef:	10 05 05 22 06 08    	adc    %al,0x8062205(%rip)        # 80622fa <_end+0x80372ea>
  f5:	75 05                	jne    fc <__ImageBase+0xfc>
  f7:	01 06                	add    %eax,(%rsi)
  f9:	08 30                	or     %dh,(%rax)
  fb:	05 05 1e 05 3f       	add    $0x3f051e05,%eax
 100:	06                   	(bad)  
 101:	5c                   	pop    %rsp
 102:	06                   	(bad)  
 103:	01 05 05 06 4b 05    	add    %eax,0x54b0605(%rip)        # 54b070e <_end+0x54856fe>
 109:	3f                   	(bad)  
 10a:	06                   	(bad)  
 10b:	11 20                	adc    %esp,(%rax)
 10d:	05 09 3e 05 08       	add    $0x8053e09,%eax
 112:	3b 05 3f 65 05 09    	cmp    0x905653f(%rip),%eax        # 9056657 <_end+0x902b647>
 118:	3e 05 08 73 05 09    	ds add $0x9057308,%eax
 11e:	06                   	(bad)  
 11f:	31 06                	xor    %eax,(%rsi)
 121:	9e                   	sahf   
 122:	05 05 06 5a 05       	add    $0x55a0605,%eax
 127:	1a 06                	sbb    (%rsi),%al
 129:	01 05 01 59 20 02    	add    %eax,0x2205901(%rip)        # 2205a30 <_end+0x21daa20>
 12f:	01 00                	add    %eax,(%rax)
 131:	01 01                	add    %eax,(%rcx)
 133:	45 00 00             	add    %r8b,(%r8)
 136:	00 05 00 08 00 2a    	add    %al,0x2a000800(%rip)        # 2a00093c <_end+0x29fd592c>
 13c:	00 00                	add    %al,(%rax)
 13e:	00 01                	add    %al,(%rcx)
 140:	01 01                	add    %eax,(%rcx)
 142:	fb                   	sti    
 143:	0e                   	(bad)  
 144:	0d 00 01 01 01       	or     $0x1010100,%eax
 149:	01 00                	add    %eax,(%rax)
 14b:	00 00                	add    %al,(%rax)
 14d:	01 00                	add    %eax,(%rax)
 14f:	00 01                	add    %al,(%rcx)
 151:	01 01                	add    %eax,(%rcx)
 153:	1f                   	(bad)  
 154:	01 07                	add    %eax,(%rdi)
 156:	00 00                	add    %al,(%rax)
 158:	00 02                	add    %al,(%rdx)
 15a:	01 1f                	add    %ebx,(%rdi)
 15c:	02 0f                	add    (%rdi),%cl
 15e:	02 b5 00 00 00 00    	add    0x0(%rbp),%dh
 164:	b5 00                	mov    $0x0,%ch
 166:	00 00                	add    %al,(%rax)
 168:	00 00                	add    %al,(%rax)
 16a:	09 02                	or     %eax,(%rdx)
 16c:	00 30                	add    %dh,(%rax)
 16e:	00 00                	add    %al,(%rax)
 170:	00 00                	add    %al,(%rax)
 172:	00 00                	add    %al,(%rax)
 174:	16                   	(bad)  
 175:	59                   	pop    %rcx
 176:	02 81 20 00 01 01    	add    0x1010020(%rcx),%al
 17c:	77 04                	ja     182 <__ImageBase+0x182>
 17e:	00 00                	add    %al,(%rax)
 180:	05 00 08 00 6d       	add    $0x6d000800,%eax
 185:	00 00                	add    %al,(%rax)
 187:	00 01                	add    %al,(%rcx)
 189:	01 01                	add    %eax,(%rcx)
 18b:	fb                   	sti    
 18c:	0e                   	(bad)  
 18d:	0d 00 01 01 01       	or     $0x1010100,%eax
 192:	01 00                	add    %eax,(%rax)
 194:	00 00                	add    %al,(%rax)
 196:	01 00                	add    %eax,(%rax)
 198:	00 01                	add    %al,(%rcx)
 19a:	01 01                	add    %eax,(%rcx)
 19c:	1f                   	(bad)  
 19d:	04 07                	add    $0x7,%al
 19f:	00 00                	add    %al,(%rax)
 1a1:	00 23                	add    %ah,(%rbx)
 1a3:	00 00                	add    %al,(%rax)
 1a5:	00 47 00             	add    %al,0x0(%rdi)
 1a8:	00 00                	add    %al,(%rax)
 1aa:	6a 00                	push   $0x0
 1ac:	00 00                	add    %al,(%rax)
 1ae:	02 01                	add    (%rcx),%al
 1b0:	1f                   	(bad)  
 1b1:	02 0f                	add    (%rdi),%cl
 1b3:	0d bb 00 00 00       	or     $0xbb,%eax
 1b8:	00 bb 00 00 00 00    	add    %bh,0x0(%rbx)
 1be:	84 00                	test   %al,(%rax)
 1c0:	00 00                	add    %al,(%rax)
 1c2:	01 8d 00 00 00 01    	add    %ecx,0x1000000(%rbp)
 1c8:	c4                   	(bad)  
 1c9:	00 00                	add    %al,(%rax)
 1cb:	00 02                	add    %al,(%rdx)
 1cd:	cc                   	int3   
 1ce:	00 00                	add    %al,(%rax)
 1d0:	00 03                	add    %al,(%rbx)
 1d2:	d8 00                	fadds  (%rax)
 1d4:	00 00                	add    %al,(%rax)
 1d6:	00 96 00 00 00 02    	add    %dl,0x2000000(%rsi)
 1dc:	e1 00                	loope  1de <__ImageBase+0x1de>
 1de:	00 00                	add    %al,(%rax)
 1e0:	03 aa 00 00 00 03    	add    0x3000000(%rdx),%ebp
 1e6:	ef                   	out    %eax,(%dx)
 1e7:	00 00                	add    %al,(%rax)
 1e9:	00 02                	add    %al,(%rdx)
 1eb:	f8                   	clc    
 1ec:	00 00                	add    %al,(%rax)
 1ee:	00 02                	add    %al,(%rdx)
 1f0:	05 01 00 00 03       	add    $0x3000001,%eax
 1f5:	05 01 00 09 02       	add    $0x2090001,%eax
 1fa:	06                   	(bad)  
 1fb:	40 00 00             	rex add %al,(%rax)
 1fe:	00 00                	add    %al,(%rax)
 200:	00 00                	add    %al,(%rax)
 202:	03 85 01 01 06 01    	add    0x1060101(%rbp),%eax
 208:	05 02 06 4b 01       	add    $0x14b0602,%eax
 20d:	05 01 06 11 05       	add    $0x5110601,%eax
 212:	02 9f 00 02 04 03    	add    0x3040200(%rdi),%bl
 218:	58                   	pop    %rax
 219:	00 02                	add    %al,(%rdx)
 21b:	04 02                	add    $0x2,%al
 21d:	ac                   	lods   %ds:(%rsi),%al
 21e:	00 02                	add    %al,(%rdx)
 220:	04 01                	add    $0x1,%al
 222:	c8 00 02 04          	enter  $0x200,$0x4
 226:	04 06                	add    $0x6,%al
 228:	4a 16                	rex.WX (bad) 
 22a:	3d 13 13 05 06       	cmp    $0x6051313,%eax
 22f:	06                   	(bad)  
 230:	01 05 0a 08 21 05    	add    %eax,0x521080a(%rip)        # 5210a40 <_end+0x51e5a30>
 236:	06                   	(bad)  
 237:	65 05 05 00 02 04    	gs add $0x4020005,%eax
 23d:	01 58 05             	add    %ebx,0x5(%rax)
 240:	02 06                	add    (%rsi),%al
 242:	85 13                	test   %edx,(%rbx)
 244:	05 08 06 01 05       	add    $0x5010608,%eax
 249:	02 06                	add    (%rsi),%al
 24b:	59                   	pop    %rcx
 24c:	05 09 06 01 05       	add    $0x5010609,%eax
 251:	02 06                	add    (%rsi),%al
 253:	59                   	pop    %rcx
 254:	13 14 01             	adc    (%rcx,%rax,1),%edx
 257:	00 02                	add    %al,(%rdx)
 259:	04 04                	add    $0x4,%al
 25b:	58                   	pop    %rax
 25c:	17                   	(bad)  
 25d:	3e 05 05 06 01 05    	ds add $0x5010605,%eax
 263:	08 03                	or     %al,(%rbx)
 265:	77 9e                	ja     205 <__ImageBase+0x205>
 267:	2e 05 02 00 02 04    	cs add $0x4020002,%eax
 26d:	01 30                	add    %esi,(%rax)
 26f:	05 03 06 08 1a       	add    $0x1a080603,%eax
 274:	17                   	(bad)  
 275:	05 1d 06 01 05       	add    $0x501061d,%eax
 27a:	0b 3d 05 1d 65 05    	or     0x5651d05(%rip),%edi        # 5651f85 <_end+0x5626f75>
 280:	06                   	(bad)  
 281:	00 02                	add    %al,(%rdx)
 283:	04 01                	add    $0x1,%al
 285:	82                   	(bad)  
 286:	05 03 06 5d 06       	add    $0x65d0603,%eax
 28b:	2e 05 02 06 84 05    	cs add $0x5840602,%eax
 291:	0f 06                	clts   
 293:	03 66 9e             	add    -0x62(%rsi),%esp
 296:	05 02 03 1a 3c       	add    $0x3c1a0302,%eax
 29b:	06                   	(bad)  
 29c:	59                   	pop    %rcx
 29d:	05 05 06 01 05       	add    $0x5010605,%eax
 2a2:	03 06                	add    (%rsi),%eax
 2a4:	59                   	pop    %rcx
 2a5:	05 07 06 01 05       	add    $0x5010607,%eax
 2aa:	06                   	(bad)  
 2ab:	00 02                	add    %al,(%rdx)
 2ad:	04 01                	add    $0x1,%al
 2af:	08 12                	or     %dl,(%rdx)
 2b1:	05 13 00 02 04       	add    $0x4020013,%eax
 2b6:	01 43 05             	add    %eax,0x5(%rbx)
 2b9:	06                   	(bad)  
 2ba:	00 02                	add    %al,(%rdx)
 2bc:	04 01                	add    $0x1,%al
 2be:	03 79 3c             	add    0x3c(%rcx),%edi
 2c1:	05 02 06 6d 05       	add    $0x56d0602,%eax
 2c6:	13 00                	adc    (%rax),%eax
 2c8:	02 04 01             	add    (%rcx,%rax,1),%al
 2cb:	01 05 01 06 5a 06    	add    %eax,0x65a0601(%rip)        # 65a08d2 <_end+0x65758c2>
 2d1:	03 48 d6             	add    -0x2a(%rax),%ecx
 2d4:	06                   	(bad)  
 2d5:	01 05 02 06 4b 13    	add    %eax,0x134b0602(%rip)        # 134b08dd <_end+0x134858cd>
 2db:	05 05 06 01 05       	add    $0x5010605,%eax
 2e0:	02 06                	add    (%rsi),%al
 2e2:	59                   	pop    %rcx
 2e3:	05 01 06 0f 05       	add    $0x50f0601,%eax
 2e8:	02 23                	add    (%rbx),%ah
 2ea:	06                   	(bad)  
 2eb:	59                   	pop    %rcx
 2ec:	05 09 06 01 05       	add    $0x5010609,%eax
 2f1:	01 2f                	add    %ebp,(%rdi)
 2f3:	2e 06                	cs (bad) 
 2f5:	03 b4 7f 66 06 01 05 	add    0x5010666(%rdi,%rdi,2),%esi
 2fc:	02 06                	add    (%rsi),%al
 2fe:	4b 01 05 01 06 11 05 	rex.WXB add %rax,0x5110601(%rip)        # 5110906 <_end+0x50e58f6>
 305:	02 83 00 02 04 03    	add    0x3040200(%rbx),%al
 30b:	58                   	pop    %rax
 30c:	00 02                	add    %al,(%rdx)
 30e:	04 02                	add    $0x2,%al
 310:	9e                   	sahf   
 311:	00 02                	add    %al,(%rdx)
 313:	04 01                	add    $0x1,%al
 315:	c8 00 02 04          	enter  $0x200,$0x4
 319:	04 06                	add    $0x6,%al
 31b:	4a 16                	rex.WX (bad) 
 31d:	3d 13 13 05 06       	cmp    $0x6051313,%eax
 322:	06                   	(bad)  
 323:	01 05 0a 08 21 05    	add    %eax,0x521080a(%rip)        # 5210b33 <_end+0x51e5b23>
 329:	06                   	(bad)  
 32a:	57                   	push   %rdi
 32b:	05 05 00 02 04       	add    $0x4020005,%eax
 330:	01 58 05             	add    %ebx,0x5(%rax)
 333:	02 06                	add    (%rsi),%al
 335:	85 13                	test   %edx,(%rbx)
 337:	05 14 06 01 05       	add    $0x5010614,%eax
 33c:	02 06                	add    (%rsi),%al
 33e:	59                   	pop    %rcx
 33f:	13 14 01             	adc    (%rcx,%rax,1),%edx
 342:	00 02                	add    %al,(%rdx)
 344:	04 04                	add    $0x4,%al
 346:	58                   	pop    %rax
 347:	17                   	(bad)  
 348:	3e 05 14 06 03 77    	ds add $0x77030614,%eax
 34e:	01 2e                	add    %ebp,(%rsi)
 350:	05 02 00 02 04       	add    $0x4020002,%eax
 355:	01 30                	add    %esi,(%rax)
 357:	00 02                	add    %al,(%rdx)
 359:	04 04                	add    $0x4,%al
 35b:	06                   	(bad)  
 35c:	08 12                	or     %dl,(%rdx)
 35e:	17                   	(bad)  
 35f:	3e 05 03 13 05 2a    	ds add $0x2a051303,%eax
 365:	06                   	(bad)  
 366:	01 05 0b 5a 05 2a    	add    %eax,0x2a055a0b(%rip)        # 2a055d77 <_end+0x2a02ad67>
 36c:	56                   	push   %rsi
 36d:	05 03 06 83 05       	add    $0x5830603,%eax
 372:	06                   	(bad)  
 373:	06                   	(bad)  
 374:	01 05 03 06 5d 05    	add    %eax,0x55d0603(%rip)        # 55d097d <_end+0x55a596d>
 37a:	07                   	(bad)  
 37b:	06                   	(bad)  
 37c:	01 05 06 00 02 04    	add    %eax,0x4020006(%rip)        # 4020388 <_end+0x3ff5378>
 382:	01 08                	add    %ecx,(%rax)
 384:	4a 05 02 06 50 05    	rex.WX add $0x5500602,%rax
 38a:	0f 06                	clts   
 38c:	03 67 3c             	add    0x3c(%rdi),%esp
 38f:	05 02 03 19 2e       	add    $0x2e190302,%eax
 394:	06                   	(bad)  
 395:	59                   	pop    %rcx
 396:	05 05 06 01 05       	add    $0x5010605,%eax
 39b:	03 06                	add    (%rsi),%eax
 39d:	59                   	pop    %rcx
 39e:	05 07 06 01 05       	add    $0x5010607,%eax
 3a3:	06                   	(bad)  
 3a4:	00 02                	add    %al,(%rdx)
 3a6:	04 01                	add    $0x1,%al
 3a8:	08 4a 05             	or     %cl,0x5(%rdx)
 3ab:	01 88 05 0b 03 73    	add    %ecx,0x73030b05(%rax)
 3b1:	2e 05 02 06 03 0e    	cs add $0xe030602,%eax
 3b7:	58                   	pop    %rax
 3b8:	05 19 00 02 04       	add    $0x4020019,%eax
 3bd:	01 01                	add    %eax,(%rcx)
 3bf:	05 01 06 84 06       	add    $0x6840601,%eax
 3c4:	af                   	scas   %es:(%rdi),%eax
 3c5:	06                   	(bad)  
 3c6:	01 05 02 06 4b 01    	add    %eax,0x14b0602(%rip)        # 14b09ce <_end+0x14859be>
 3cc:	05 01 06 57 05       	add    $0x5570601,%eax
 3d1:	02 00                	add    (%rax),%al
 3d3:	02 04 02             	add    (%rdx,%rax,1),%al
 3d6:	21 05 01 81 05 02    	and    %eax,0x2058101(%rip)        # 20584dd <_end+0x202d4cd>
 3dc:	00 02                	add    %al,(%rdx)
 3de:	04 02                	add    $0x2,%al
 3e0:	4b 00 02             	rex.WXB add %al,(%r10)
 3e3:	04 01                	add    $0x1,%al
 3e5:	58                   	pop    %rax
 3e6:	00 02                	add    %al,(%rdx)
 3e8:	04 03                	add    $0x3,%al
 3ea:	4a 05 1f 06 72 05    	rex.WX add $0x572061f,%rax
 3f0:	02 00                	add    (%rax),%al
 3f2:	02 04 04             	add    (%rsp,%rax,1),%al
 3f5:	14 16                	adc    $0x16,%al
 3f7:	3d 13 13 05 06       	cmp    $0x6051313,%eax
 3fc:	06                   	(bad)  
 3fd:	01 05 0a 08 83 05    	add    %eax,0x583080a(%rip)        # 5830c0d <_end+0x5805bfd>
 403:	05 00 02 04 01       	add    $0x1040200,%eax
 408:	57                   	push   %rdi
 409:	05 02 06 4d 15       	add    $0x154d0602,%eax
 40e:	cb                   	lret   
 40f:	05 09 06 01 2e       	add    $0x2e010609,%eax
 414:	05 01 13 58 05       	add    $0x5581301,%eax
 419:	02 00                	add    (%rax),%al
 41b:	02 04 03             	add    (%rbx,%rax,1),%al
 41e:	03 6f 20             	add    0x20(%rdi),%ebp
 421:	05 01 03 11 58       	add    $0x58110301,%eax
 426:	06                   	(bad)  
 427:	03 d7                	add    %edi,%edx
 429:	00 20                	add    %ah,(%rax)
 42b:	06                   	(bad)  
 42c:	01 05 02 06 4b 13    	add    %eax,0x134b0602(%rip)        # 134b0a34 <_end+0x13485a24>
 432:	05 01 06 10 05       	add    $0x5100601,%eax
 437:	2a e6                	sub    %dh,%ah
 439:	05 1a 00 02 04       	add    $0x402001a,%eax
 43e:	01 58 05             	add    %ebx,0x5(%rax)
 441:	2a 00                	sub    (%rax),%al
 443:	02 04 01             	add    (%rcx,%rax,1),%al
 446:	58                   	pop    %rax
 447:	05 02 06 4c 13       	add    $0x134c0602,%eax
 44c:	13 05 08 06 01 05    	adc    0x5010608(%rip),%eax        # 5010a5a <_end+0x4fe5a4a>
 452:	02 06                	add    (%rsi),%al
 454:	77 01                	ja     457 <__ImageBase+0x457>
 456:	00 02                	add    %al,(%rdx)
 458:	04 01                	add    $0x1,%al
 45a:	06                   	(bad)  
 45b:	58                   	pop    %rax
 45c:	05 06 00 02 04       	add    $0x4020006,%eax
 461:	01 68 05             	add    %ebp,0x5(%rax)
 464:	02 00                	add    (%rax),%al
 466:	02 04 01             	add    (%rcx,%rax,1),%al
 469:	3a 00                	cmp    (%rax),%al
 46b:	02 04 03             	add    (%rbx,%rax,1),%al
 46e:	90                   	nop
 46f:	05 06 00 02 04       	add    $0x4020006,%eax
 474:	02 a0 00 02 04 04    	add    0x4040200(%rax),%ah
 47a:	3c 05                	cmp    $0x5,%al
 47c:	05 00 02 04 08       	add    $0x8040200,%eax
 481:	4a 05 02 06 a1 05    	rex.WX add $0x5a10602,%rax
 487:	0a 06                	or     (%rsi),%al
 489:	01 58 05             	add    %ebx,0x5(%rax)
 48c:	02 06                	add    (%rsi),%al
 48e:	3d 05 05 06 01       	cmp    $0x1060505,%eax
 493:	05 08 00 02 04       	add    $0x4020008,%eax
 498:	01 57 05             	add    %edx,0x5(%rdi)
 49b:	03 06                	add    (%rsi),%eax
 49d:	76 59                	jbe    4f8 <__ImageBase+0x4f8>
 49f:	05 0a 06 01 05       	add    $0x501060a,%eax
 4a4:	02 06                	add    (%rsi),%al
 4a6:	76 13                	jbe    4bb <__ImageBase+0x4bb>
 4a8:	05 21 06 01 4a       	add    $0x4a010621,%eax
 4ad:	05 02 06 59 14       	add    $0x14590602,%eax
 4b2:	05 05 06 01 05       	add    $0x5010605,%eax
 4b7:	03 06                	add    (%rsi),%eax
 4b9:	59                   	pop    %rcx
 4ba:	05 07 06 01 05       	add    $0x5010607,%eax
 4bf:	06                   	(bad)  
 4c0:	00 02                	add    %al,(%rdx)
 4c2:	04 01                	add    $0x1,%al
 4c4:	08 66 05             	or     %ah,0x5(%rsi)
 4c7:	03 06                	add    (%rsi),%eax
 4c9:	4e 16                	rex.WRX (bad) 
 4cb:	05 07 06 01 05       	add    $0x5010607,%eax
 4d0:	06                   	(bad)  
 4d1:	00 02                	add    %al,(%rdx)
 4d3:	04 01                	add    $0x1,%al
 4d5:	08 2e                	or     %ch,(%rsi)
 4d7:	05 03 06 4e 05       	add    $0x54e0603,%eax
 4dc:	22 06                	and    (%rsi),%al
 4de:	01 05 03 06 59 06    	add    %eax,0x6590603(%rip)        # 6590ae7 <_end+0x6565ad7>
 4e4:	01 06                	add    %eax,(%rsi)
 4e6:	30 05 0e 06 01 05    	xor    %al,0x501060e(%rip)        # 5010afa <_end+0x4fe5aea>
 4ec:	02 06                	add    (%rsi),%al
 4ee:	69 05 0b 06 01 05 02 	imul   $0x13d80602,0x501060b(%rip),%eax        # 5010b03 <_end+0x4fe5af3>
 4f5:	06 d8 13 
 4f8:	13 06                	adc    (%rsi),%eax
 4fa:	58                   	pop    %rax
 4fb:	06                   	(bad)  
 4fc:	4b 05 01 06 13 58    	rex.WXB add $0x58130601,%rax
 502:	06                   	(bad)  
 503:	69 06 01 05 02 06    	imul   $0x6020501,(%rsi),%eax
 509:	4b 13 05 01 06 10 f2 	rex.WXB adc -0xdeff9ff(%rip),%rax        # fffffffff2100b11 <_end+0xfffffffff20d5b01>
 510:	05 2a 5a 05 1a       	add    $0x1a055a2a,%eax
 515:	00 02                	add    %al,(%rdx)
 517:	04 01                	add    $0x1,%al
 519:	58                   	pop    %rax
 51a:	05 2a 00 02 04       	add    $0x402002a,%eax
 51f:	01 58 05             	add    %ebx,0x5(%rax)
 522:	02 06                	add    (%rsi),%al
 524:	4c 13 13             	adc    (%rbx),%r10
 527:	05 08 06 01 05       	add    $0x5010608,%eax
 52c:	02 06                	add    (%rsi),%al
 52e:	77 01                	ja     531 <__ImageBase+0x531>
 530:	00 02                	add    %al,(%rdx)
 532:	04 01                	add    $0x1,%al
 534:	06                   	(bad)  
 535:	58                   	pop    %rax
 536:	05 06 00 02 04       	add    $0x4020006,%eax
 53b:	01 68 05             	add    %ebp,0x5(%rax)
 53e:	02 00                	add    (%rax),%al
 540:	02 04 01             	add    (%rcx,%rax,1),%al
 543:	3a 00                	cmp    (%rax),%al
 545:	02 04 03             	add    (%rbx,%rax,1),%al
 548:	90                   	nop
 549:	05 06 00 02 04       	add    $0x4020006,%eax
 54e:	02 a0 00 02 04 04    	add    0x4040200(%rax),%ah
 554:	3c 05                	cmp    $0x5,%al
 556:	05 00 02 04 08       	add    $0x8040200,%eax
 55b:	4a 05 02 06 a1 05    	rex.WX add $0x5a10602,%rax
 561:	0a 06                	or     (%rsi),%al
 563:	01 58 05             	add    %ebx,0x5(%rax)
 566:	02 06                	add    (%rsi),%al
 568:	3d 05 05 06 01       	cmp    $0x1060505,%eax
 56d:	05 08 00 02 04       	add    $0x4020008,%eax
 572:	01 57 05             	add    %edx,0x5(%rdi)
 575:	03 06                	add    (%rsi),%eax
 577:	76 59                	jbe    5d2 <__ImageBase+0x5d2>
 579:	05 0a 06 01 05       	add    $0x501060a,%eax
 57e:	02 06                	add    (%rsi),%al
 580:	a0 13 05 21 06 01 4a 	movabs 0x2054a0106210513,%al
 587:	05 02 
 589:	06                   	(bad)  
 58a:	59                   	pop    %rcx
 58b:	14 05                	adc    $0x5,%al
 58d:	05 06 01 05 03       	add    $0x3050106,%eax
 592:	06                   	(bad)  
 593:	59                   	pop    %rcx
 594:	05 07 06 01 05       	add    $0x5010607,%eax
 599:	06                   	(bad)  
 59a:	00 02                	add    %al,(%rdx)
 59c:	04 01                	add    $0x1,%al
 59e:	08 66 05             	or     %ah,0x5(%rsi)
 5a1:	03 06                	add    (%rsi),%eax
 5a3:	4e 16                	rex.WRX (bad) 
 5a5:	05 07 06 01 05       	add    $0x5010607,%eax
 5aa:	06                   	(bad)  
 5ab:	00 02                	add    %al,(%rdx)
 5ad:	04 01                	add    $0x1,%al
 5af:	08 2e                	or     %ch,(%rsi)
 5b1:	05 03 06 4e 05       	add    $0x54e0603,%eax
 5b6:	22 06                	and    (%rsi),%al
 5b8:	01 05 03 06 59 06    	add    %eax,0x6590603(%rip)        # 6590bc1 <_end+0x6565bb1>
 5be:	01 06                	add    %eax,(%rsi)
 5c0:	30 05 0e 06 01 05    	xor    %al,0x501060e(%rip)        # 5010bd4 <_end+0x4fe5bc4>
 5c6:	02 06                	add    (%rsi),%al
 5c8:	69 05 06 06 01 05 14 	imul   $0x6055814,0x5010606(%rip),%eax        # 5010bd8 <_end+0x4fe5bc8>
 5cf:	58 05 06 
 5d2:	4a 05 05 00 02 04    	rex.WX add $0x4020005,%rax
 5d8:	01 e4                	add    %esp,%esp
 5da:	05 02 06 4f 05       	add    $0x54f0602,%eax
 5df:	0b 06                	or     (%rsi),%eax
 5e1:	01 05 02 06 08 14    	add    %eax,0x14080602(%rip)        # 14080be9 <_end+0x14055bd9>
 5e7:	13 13                	adc    (%rbx),%edx
 5e9:	06                   	(bad)  
 5ea:	58                   	pop    %rax
 5eb:	06                   	(bad)  
 5ec:	4b 05 01 06 13 58    	rex.WXB add $0x58130601,%rax
 5f2:	02 06                	add    (%rsi),%al
 5f4:	00 01                	add    %al,(%rcx)
 5f6:	01                   	.byte 0x1

Disassembly of section .debug_str:

0000000000000000 <.debug_str>:
   0:	6f                   	outsl  %ds:(%rsi),(%dx)
   1:	63 61 6c             	movsxd 0x6c(%rcx),%esp
   4:	6c                   	insb   (%dx),%es:(%rdi)
   5:	5f                   	pop    %rdi
   6:	70 72                	jo     7a <__ImageBase+0x7a>
   8:	69 6e 74 5f 61 64 64 	imul   $0x6464615f,0x74(%rsi),%ebp
   f:	72 65                	jb     76 <__ImageBase+0x76>
  11:	73 73                	jae    86 <__ImageBase+0x86>
  13:	00 6d 79             	add    %ch,0x79(%rbp)
  16:	5f                   	pop    %rdi
  17:	73 74                	jae    8d <__ImageBase+0x8d>
  19:	72 75                	jb     90 <__ImageBase+0x90>
  1b:	63 74 00 66          	movsxd 0x66(%rax,%rax,1),%esi
  1f:	6c                   	insb   (%dx),%es:(%rdi)
  20:	6f                   	outsl  %ds:(%rsi),(%dx)
  21:	61                   	(bad)  
  22:	74 00                	je     24 <__ImageBase+0x24>
  24:	70 69                	jo     8f <__ImageBase+0x8f>
  26:	6e                   	outsb  %ds:(%rsi),(%dx)
  27:	63 6f 64             	movsxd 0x64(%rdi),%ebp
  2a:	65 00 47 4e          	add    %al,%gs:0x4e(%rdi)
  2e:	55                   	push   %rbp
  2f:	20 43 31             	and    %al,0x31(%rbx)
  32:	37                   	(bad)  
  33:	20 31                	and    %dh,(%rcx)
  35:	33 2e                	xor    (%rsi),%ebp
  37:	33 2e                	xor    (%rsi),%ebp
  39:	30 20                	xor    %ah,(%rax)
  3b:	2d 6d 74 75 6e       	sub    $0x6e75746d,%eax
  40:	65 3d 67 65 6e 65    	gs cmp $0x656e6567,%eax
  46:	72 69                	jb     b1 <__ImageBase+0xb1>
  48:	63 20                	movsxd (%rax),%esp
  4a:	2d 6d 61 72 63       	sub    $0x6372616d,%eax
  4f:	68 3d 78 38 36       	push   $0x3638783d
  54:	2d 36 34 20 2d       	sub    $0x2d203436,%eax
  59:	67 20 2d 4f 73 20 2d 	and    %ch,0x2d20734f(%eip)        # 2d2073af <_end+0x2d1dc39f>
  60:	66 76 69             	data16 jbe cc <__ImageBase+0xcc>
  63:	73 69                	jae    ce <__ImageBase+0xce>
  65:	62                   	(bad)  
  66:	69 6c 69 74 79 3d 68 	imul   $0x69683d79,0x74(%rcx,%rbp,2),%ebp
  6d:	69 
  6e:	64 64 65 6e          	fs fs outsb %gs:(%rsi),(%dx)
  72:	20 2d 66 70 69 65    	and    %ch,0x65697066(%rip)        # 656970de <_end+0x6566c0ce>
  78:	20 2d 66 73 74 61    	and    %ch,0x61747366(%rip)        # 617473e4 <_end+0x6171c3d4>
  7e:	63 6b 2d             	movsxd 0x2d(%rbx),%ebp
  81:	70 72                	jo     f5 <__ImageBase+0xf5>
  83:	6f                   	outsl  %ds:(%rsi),(%dx)
  84:	74 65                	je     eb <__ImageBase+0xeb>
  86:	63 74 6f 72          	movsxd 0x72(%rdi,%rbp,2),%esi
  8a:	20 2d 66 61 73 79    	and    %ch,0x79736166(%rip)        # 797361f6 <_end+0x7970b1e6>
  90:	6e                   	outsb  %ds:(%rsi),(%dx)
  91:	63 68 72             	movsxd 0x72(%rax),%ebp
  94:	6f                   	outsl  %ds:(%rsi),(%dx)
  95:	6e                   	outsb  %ds:(%rsi),(%dx)
  96:	6f                   	outsl  %ds:(%rsi),(%dx)
  97:	75 73                	jne    10c <__ImageBase+0x10c>
  99:	2d 75 6e 77 69       	sub    $0x69776e75,%eax
  9e:	6e                   	outsb  %ds:(%rsi),(%dx)
  9f:	64 2d 74 61 62 6c    	fs sub $0x6c626174,%eax
  a5:	65 73 20             	gs jae c8 <__ImageBase+0xc8>
  a8:	2d 66 73 74 61       	sub    $0x61747366,%eax
  ad:	63 6b 2d             	movsxd 0x2d(%rbx),%ebp
  b0:	63 6c 61 73          	movsxd 0x73(%rcx,%riz,2),%ebp
  b4:	68 2d 70 72 6f       	push   $0x6f72702d
  b9:	74 65                	je     120 <__ImageBase+0x120>
  bb:	63 74 69 6f          	movsxd 0x6f(%rcx,%rbp,2),%esi
  bf:	6e                   	outsb  %ds:(%rsi),(%dx)
  c0:	20 2d 66 63 66 2d    	and    %ch,0x2d666366(%rip)        # 2d66642c <_end+0x2d63b41c>
  c6:	70 72                	jo     13a <__ImageBase+0x13a>
  c8:	6f                   	outsl  %ds:(%rsi),(%dx)
  c9:	74 65                	je     130 <__ImageBase+0x130>
  cb:	63 74 69 6f          	movsxd 0x6f(%rcx,%rbp,2),%esi
  cf:	6e                   	outsb  %ds:(%rsi),(%dx)
  d0:	00 75 6e             	add    %dh,0x6e(%rbp)
  d3:	73 69                	jae    13e <__ImageBase+0x13e>
  d5:	67 6e                	outsb  %ds:(%esi),(%dx)
  d7:	65 64 20 63 68       	gs and %ah,%fs:0x68(%rbx)
  dc:	61                   	(bad)  
  dd:	72 00                	jb     df <__ImageBase+0xdf>
  df:	6c                   	insb   (%dx),%es:(%rdi)
  e0:	6f                   	outsl  %ds:(%rsi),(%dx)
  e1:	6e                   	outsb  %ds:(%rsi),(%dx)
  e2:	67 20 75 6e          	and    %dh,0x6e(%ebp)
  e6:	73 69                	jae    151 <__ImageBase+0x151>
  e8:	67 6e                	outsb  %ds:(%esi),(%dx)
  ea:	65 64 20 69 6e       	gs and %ch,%fs:0x6e(%rcx)
  ef:	74 00                	je     f1 <__ImageBase+0xf1>
  f1:	73 68                	jae    15b <__ImageBase+0x15b>
  f3:	6f                   	outsl  %ds:(%rsi),(%dx)
  f4:	72 74                	jb     16a <__ImageBase+0x16a>
  f6:	20 75 6e             	and    %dh,0x6e(%rbp)
  f9:	73 69                	jae    164 <__ImageBase+0x164>
  fb:	67 6e                	outsb  %ds:(%esi),(%dx)
  fd:	65 64 20 69 6e       	gs and %ch,%fs:0x6e(%rcx)
 102:	74 00                	je     104 <__ImageBase+0x104>
 104:	73 74                	jae    17a <__ImageBase+0x17a>
 106:	72 6e                	jb     176 <__ImageBase+0x176>
 108:	63 70 79             	movsxd 0x79(%rax),%esi
 10b:	00 64 6f 75          	add    %ah,0x75(%rdi,%rbp,2)
 10f:	62                   	(bad)  
 110:	6c                   	insb   (%dx),%es:(%rdi)
 111:	65 00 70 72          	add    %dh,%gs:0x72(%rax)
 115:	6f                   	outsl  %ds:(%rsi),(%dx)
 116:	64 70 00             	fs jo  119 <__ImageBase+0x119>
 119:	73 75                	jae    190 <__ImageBase+0x190>
 11b:	6d                   	insl   (%dx),%es:(%rdi)
 11c:	70 00                	jo     11e <__ImageBase+0x11e>
 11e:	6c                   	insb   (%dx),%es:(%rdi)
 11f:	6f                   	outsl  %ds:(%rsi),(%dx)
 120:	6e                   	outsb  %ds:(%rsi),(%dx)
 121:	67 20 6c 6f 6e       	and    %ch,0x6e(%edi,%ebp,2)
 126:	67 20 69 6e          	and    %ch,0x6e(%ecx)
 12a:	74 00                	je     12c <__ImageBase+0x12c>
 12c:	73 68                	jae    196 <__ImageBase+0x196>
 12e:	6f                   	outsl  %ds:(%rsi),(%dx)
 12f:	72 74                	jb     1a5 <__ImageBase+0x1a5>
 131:	20 69 6e             	and    %ch,0x6e(%rcx)
 134:	74 00                	je     136 <__ImageBase+0x136>
 136:	5f                   	pop    %rdi
 137:	5f                   	pop    %rdi
 138:	75 69                	jne    1a3 <__ImageBase+0x1a3>
 13a:	6e                   	outsb  %ds:(%rsi),(%dx)
 13b:	74 36                	je     173 <__ImageBase+0x173>
 13d:	34 5f                	xor    $0x5f,%al
 13f:	74 00                	je     141 <__ImageBase+0x141>
 141:	5f                   	pop    %rdi
 142:	5f                   	pop    %rdi
 143:	73 69                	jae    1ae <__ImageBase+0x1ae>
 145:	7a 65                	jp     1ac <__ImageBase+0x1ac>
 147:	5f                   	pop    %rdi
 148:	74 00                	je     14a <__ImageBase+0x14a>
 14a:	73 67                	jae    1b3 <__ImageBase+0x1b3>
 14c:	78 5f                	js     1ad <__ImageBase+0x1ad>
 14e:	69 73 5f 6f 75 74 73 	imul   $0x7374756f,0x5f(%rbx),%esi
 155:	69 64 65 5f 65 6e 63 	imul   $0x6c636e65,0x5f(%rbp,%riz,2),%esp
 15c:	6c 
 15d:	61                   	(bad)  
 15e:	76 65                	jbe    1c5 <__ImageBase+0x1c5>
 160:	00 61 73             	add    %ah,0x73(%rcx)
 163:	6d                   	insl   (%dx),%es:(%rdi)
 164:	2e 53                	cs push %rbx
 166:	00 2f                	add    %ch,(%rdi)
 168:	68 6f 6d 65 2f       	push   $0x2f656d6f
 16d:	6a 61                	push   $0x61
 16f:	6e                   	outsb  %ds:(%rsi),(%dx)
 170:	2f                   	(bad)  
 171:	70 6f                	jo     1e2 <__ImageBase+0x1e2>
 173:	69 6e 74 65 72 73 73 	imul   $0x73737265,0x74(%rsi),%ebp
 17a:	2f                   	(bad)  
 17b:	45 6e                	rex.RB outsb %ds:(%rsi),(%dx)
 17d:	63 6c 61 76          	movsxd 0x76(%rcx,%riz,2),%ebp
 181:	65 00 47 4e          	add    %al,%gs:0x4e(%rdi)
 185:	55                   	push   %rbp
 186:	20 41 53             	and    %al,0x53(%rcx)
 189:	20 32                	and    %dh,(%rdx)
 18b:	2e 33 36             	cs xor (%rsi),%esi
 18e:	2e 31 00             	cs xor %eax,(%rax)
 191:	53                   	push   %rbx
 192:	47 58                	rex.RXB pop %r8
 194:	5f                   	pop    %rdi
 195:	45 52                	rex.RB push %r10
 197:	52                   	push   %rdx
 198:	4f 52                	rex.WRXB push %r10
 19a:	5f                   	pop    %rdi
 19b:	55                   	push   %rbp
 19c:	4e                   	rex.WRX
 19d:	45 58                	rex.RB pop %r8
 19f:	50                   	push   %rax
 1a0:	45                   	rex.RB
 1a1:	43 54                	rex.XB push %r12
 1a3:	45                   	rex.RB
 1a4:	44 00 53 47          	add    %r10b,0x47(%rbx)
 1a8:	58                   	pop    %rax
 1a9:	5f                   	pop    %rdi
 1aa:	45 52                	rex.RB push %r10
 1ac:	52                   	push   %rdx
 1ad:	4f 52                	rex.WRXB push %r10
 1af:	5f                   	pop    %rdi
 1b0:	4d                   	rex.WRB
 1b1:	4f                   	rex.WRXB
 1b2:	44                   	rex.R
 1b3:	45 5f                	rex.RB pop %r15
 1b5:	49                   	rex.WB
 1b6:	4e                   	rex.WRX
 1b7:	43                   	rex.XB
 1b8:	4f                   	rex.WRXB
 1b9:	4d 50                	rex.WRB push %r8
 1bb:	41 54                	push   %r12
 1bd:	49                   	rex.WB
 1be:	42                   	rex.X
 1bf:	4c                   	rex.WR
 1c0:	45 00 53 47          	add    %r10b,0x47(%r11)
 1c4:	58                   	pop    %rax
 1c5:	5f                   	pop    %rdi
 1c6:	50                   	push   %rax
 1c7:	54                   	push   %rsp
 1c8:	48 52                	rex.W push %rdx
 1ca:	45                   	rex.RB
 1cb:	41                   	rex.B
 1cc:	44 5f                	rex.R pop %rdi
 1ce:	45 58                	rex.RB pop %r8
 1d0:	49 54                	rex.WB push %r12
 1d2:	00 6f 63             	add    %ch,0x63(%rdi)
 1d5:	61                   	(bad)  
 1d6:	6c                   	insb   (%dx),%es:(%rdi)
 1d7:	6c                   	insb   (%dx),%es:(%rdi)
 1d8:	6f                   	outsl  %ds:(%rsi),(%dx)
 1d9:	63 5f 73             	movsxd 0x73(%rdi),%ebx
 1dc:	69 7a 65 00 5f 5f 75 	imul   $0x755f5f00,0x65(%rdx),%edi
 1e3:	69 6e 74 38 5f 74 00 	imul   $0x745f38,0x74(%rsi),%ebp
 1ea:	53                   	push   %rbx
 1eb:	47 58                	rex.RXB pop %r8
 1ed:	5f                   	pop    %rdi
 1ee:	45 52                	rex.RB push %r10
 1f0:	52                   	push   %rdx
 1f1:	4f 52                	rex.WRXB push %r10
 1f3:	5f                   	pop    %rdi
 1f4:	4d                   	rex.WRB
 1f5:	43 5f                	rex.XB pop %r15
 1f7:	4e                   	rex.WRX
 1f8:	4f 54                	rex.WRXB push %r12
 1fa:	5f                   	pop    %rdi
 1fb:	46                   	rex.RX
 1fc:	4f 55                	rex.WRXB push %r13
 1fe:	4e                   	rex.WRX
 1ff:	44 00 6d 73          	add    %r13b,0x73(%rbp)
 203:	5f                   	pop    %rdi
 204:	73 74                	jae    27a <__ImageBase+0x27a>
 206:	72 00                	jb     208 <__ImageBase+0x208>
 208:	53                   	push   %rbx
 209:	47 58                	rex.RXB pop %r8
 20b:	5f                   	pop    %rdi
 20c:	45 52                	rex.RB push %r10
 20e:	52                   	push   %rdx
 20f:	4f 52                	rex.WRXB push %r10
 211:	5f                   	pop    %rdi
 212:	49                   	rex.WB
 213:	4e 56                	rex.WRX push %rsi
 215:	41                   	rex.B
 216:	4c                   	rex.WR
 217:	49                   	rex.WB
 218:	44 5f                	rex.R pop %rdi
 21a:	45                   	rex.RB
 21b:	4e                   	rex.WRX
 21c:	43                   	rex.XB
 21d:	4c                   	rex.WR
 21e:	41 56                	push   %r14
 220:	45 5f                	rex.RB pop %r15
 222:	49                   	rex.WB
 223:	44 00 53 47          	add    %r10b,0x47(%rbx)
 227:	58                   	pop    %rax
 228:	5f                   	pop    %rdi
 229:	45 52                	rex.RB push %r10
 22b:	52                   	push   %rdx
 22c:	4f 52                	rex.WRXB push %r10
 22e:	5f                   	pop    %rdi
 22f:	49                   	rex.WB
 230:	4e 56                	rex.WRX push %rsi
 232:	41                   	rex.B
 233:	4c                   	rex.WR
 234:	49                   	rex.WB
 235:	44 5f                	rex.R pop %rdi
 237:	53                   	push   %rbx
 238:	49                   	rex.WB
 239:	47                   	rex.RXB
 23a:	4e                   	rex.WRX
 23b:	41 54                	push   %r12
 23d:	55                   	push   %rbp
 23e:	52                   	push   %rdx
 23f:	45 00 73 67          	add    %r14b,0x67(%r11)
 243:	78 5f                	js     2a4 <__ImageBase+0x2a4>
 245:	6f                   	outsl  %ds:(%rsi),(%dx)
 246:	63 61 6c             	movsxd 0x6c(%rcx),%esp
 249:	6c                   	insb   (%dx),%es:(%rdi)
 24a:	00 53 47             	add    %dl,0x47(%rbx)
 24d:	58                   	pop    %rax
 24e:	5f                   	pop    %rdi
 24f:	45 52                	rex.RB push %r10
 251:	52                   	push   %rdx
 252:	4f 52                	rex.WRXB push %r10
 254:	5f                   	pop    %rdi
 255:	55                   	push   %rbp
 256:	4e 53                	rex.WRX push %rbx
 258:	55                   	push   %rbp
 259:	50                   	push   %rax
 25a:	50                   	push   %rax
 25b:	4f 52                	rex.WRXB push %r10
 25d:	54                   	push   %rsp
 25e:	45                   	rex.RB
 25f:	44 5f                	rex.R pop %rdi
 261:	43                   	rex.XB
 262:	4f                   	rex.WRXB
 263:	4e                   	rex.WRX
 264:	46                   	rex.RX
 265:	49                   	rex.WB
 266:	47 00 53 47          	rex.RXB add %r10b,0x47(%r11)
 26a:	58                   	pop    %rax
 26b:	5f                   	pop    %rdi
 26c:	45 52                	rex.RB push %r10
 26e:	52                   	push   %rdx
 26f:	4f 52                	rex.WRXB push %r10
 271:	5f                   	pop    %rdi
 272:	45                   	rex.RB
 273:	4e                   	rex.WRX
 274:	43                   	rex.XB
 275:	4c                   	rex.WR
 276:	41 56                	push   %r14
 278:	45 5f                	rex.RB pop %r15
 27a:	46                   	rex.RX
 27b:	49                   	rex.WB
 27c:	4c                   	rex.WR
 27d:	45 5f                	rex.RB pop %r15
 27f:	41                   	rex.B
 280:	43                   	rex.XB
 281:	43                   	rex.XB
 282:	45 53                	rex.RB push %r11
 284:	53                   	push   %rbx
 285:	00 6d 65             	add    %ch,0x65(%rbp)
 288:	6d                   	insl   (%dx),%es:(%rdi)
 289:	63 70 79             	movsxd 0x79(%rax),%esi
 28c:	5f                   	pop    %rdi
 28d:	73 00                	jae    28f <__ImageBase+0x28f>
 28f:	53                   	push   %rbx
 290:	47 58                	rex.RXB pop %r8
 292:	5f                   	pop    %rdi
 293:	45 52                	rex.RB push %r10
 295:	52                   	push   %rdx
 296:	4f 52                	rex.WRXB push %r10
 298:	5f                   	pop    %rdi
 299:	46                   	rex.RX
 29a:	49                   	rex.WB
 29b:	4c                   	rex.WR
 29c:	45 5f                	rex.RB pop %r15
 29e:	4e                   	rex.WRX
 29f:	4f 54                	rex.WRXB push %r12
 2a1:	5f                   	pop    %rdi
 2a2:	53                   	push   %rbx
 2a3:	47 58                	rex.RXB pop %r8
 2a5:	5f                   	pop    %rdi
 2a6:	46                   	rex.RX
 2a7:	49                   	rex.WB
 2a8:	4c                   	rex.WR
 2a9:	45 00 6d 73          	add    %r13b,0x73(%r13)
 2ad:	5f                   	pop    %rdi
 2ae:	65 63 61 6c          	movsxd %gs:0x6c(%rcx),%esp
 2b2:	6c                   	insb   (%dx),%es:(%rdi)
 2b3:	5f                   	pop    %rdi
 2b4:	63 6f 6d             	movsxd 0x6d(%rdi),%ebp
 2b7:	70 75                	jo     32e <__ImageBase+0x32e>
 2b9:	74 65                	je     320 <__ImageBase+0x320>
 2bb:	5f                   	pop    %rdi
 2bc:	72 65                	jb     323 <__ImageBase+0x323>
 2be:	73 70                	jae    330 <__ImageBase+0x330>
 2c0:	6f                   	outsl  %ds:(%rsi),(%dx)
 2c1:	6e                   	outsb  %ds:(%rsi),(%dx)
 2c2:	73 65                	jae    329 <__ImageBase+0x329>
 2c4:	5f                   	pop    %rdi
 2c5:	74 00                	je     2c7 <__ImageBase+0x2c7>
 2c7:	73 67                	jae    330 <__ImageBase+0x330>
 2c9:	78 5f                	js     32a <__ImageBase+0x32a>
 2cb:	69 73 5f 77 69 74 68 	imul   $0x68746977,0x5f(%rbx),%esi
 2d2:	69 6e 5f 65 6e 63 6c 	imul   $0x6c636e65,0x5f(%rsi),%ebp
 2d9:	61                   	(bad)  
 2da:	76 65                	jbe    341 <__ImageBase+0x341>
 2dc:	00 53 47             	add    %dl,0x47(%rbx)
 2df:	58                   	pop    %rax
 2e0:	5f                   	pop    %rdi
 2e1:	45 52                	rex.RB push %r10
 2e3:	52                   	push   %rdx
 2e4:	4f 52                	rex.WRXB push %r10
 2e6:	5f                   	pop    %rdi
 2e7:	46                   	rex.RX
 2e8:	49                   	rex.WB
 2e9:	4c                   	rex.WR
 2ea:	45 5f                	rex.RB pop %r15
 2ec:	4e                   	rex.WRX
 2ed:	4f 5f                	rex.WRXB pop %r15
 2ef:	4b                   	rex.WXB
 2f0:	45 59                	rex.RB pop %r9
 2f2:	5f                   	pop    %rdi
 2f3:	49                   	rex.WB
 2f4:	44 00 53 47          	add    %r10b,0x47(%rbx)
 2f8:	58                   	pop    %rax
 2f9:	5f                   	pop    %rdi
 2fa:	45 52                	rex.RB push %r10
 2fc:	52                   	push   %rdx
 2fd:	4f 52                	rex.WRXB push %r10
 2ff:	5f                   	pop    %rdi
 300:	46                   	rex.RX
 301:	49                   	rex.WB
 302:	4c                   	rex.WR
 303:	45 5f                	rex.RB pop %r15
 305:	43                   	rex.XB
 306:	41                   	rex.B
 307:	4e 54                	rex.WRX push %rsp
 309:	5f                   	pop    %rdi
 30a:	57                   	push   %rdi
 30b:	52                   	push   %rdx
 30c:	49 54                	rex.WB push %r12
 30e:	45 5f                	rex.RB pop %r15
 310:	52                   	push   %rdx
 311:	45                   	rex.RB
 312:	43                   	rex.XB
 313:	4f 56                	rex.WRXB push %r14
 315:	45 52                	rex.RB push %r10
 317:	59                   	pop    %rcx
 318:	5f                   	pop    %rdi
 319:	46                   	rex.RX
 31a:	49                   	rex.WB
 31b:	4c                   	rex.WR
 31c:	45 00 53 47          	add    %r10b,0x47(%r11)
 320:	58                   	pop    %rax
 321:	5f                   	pop    %rdi
 322:	45 52                	rex.RB push %r10
 324:	52                   	push   %rdx
 325:	4f 52                	rex.WRXB push %r10
 327:	5f                   	pop    %rdi
 328:	4f 55                	rex.WRXB push %r13
 32a:	54                   	push   %rsp
 32b:	5f                   	pop    %rdi
 32c:	4f                   	rex.WRXB
 32d:	46 5f                	rex.RX pop %rdi
 32f:	54                   	push   %rsp
 330:	43 53                	rex.XB push %r11
 332:	00 53 47             	add    %dl,0x47(%rbx)
 335:	58                   	pop    %rax
 336:	5f                   	pop    %rdi
 337:	45 52                	rex.RB push %r10
 339:	52                   	push   %rdx
 33a:	4f 52                	rex.WRXB push %r10
 33c:	5f                   	pop    %rdi
 33d:	49                   	rex.WB
 33e:	4e 56                	rex.WRX push %rsi
 340:	41                   	rex.B
 341:	4c                   	rex.WR
 342:	49                   	rex.WB
 343:	44 5f                	rex.R pop %rdi
 345:	49 53                	rex.WB push %r11
 347:	56                   	push   %rsi
 348:	53                   	push   %rbx
 349:	56                   	push   %rsi
 34a:	4e 00 53 47          	rex.WRX add %r10b,0x47(%rbx)
 34e:	58                   	pop    %rax
 34f:	5f                   	pop    %rdi
 350:	45 52                	rex.RB push %r10
 352:	52                   	push   %rdx
 353:	4f 52                	rex.WRXB push %r10
 355:	5f                   	pop    %rdi
 356:	50                   	push   %rax
 357:	4c                   	rex.WR
 358:	41 54                	push   %r12
 35a:	46                   	rex.RX
 35b:	4f 52                	rex.WRXB push %r10
 35d:	4d 5f                	rex.WRB pop %r15
 35f:	43                   	rex.XB
 360:	45 52                	rex.RB push %r10
 362:	54                   	push   %rsp
 363:	5f                   	pop    %rdi
 364:	55                   	push   %rbp
 365:	4e                   	rex.WRX
 366:	41 56                	push   %r14
 368:	41                   	rex.B
 369:	49                   	rex.WB
 36a:	4c                   	rex.WR
 36b:	41                   	rex.B
 36c:	42                   	rex.X
 36d:	4c                   	rex.WR
 36e:	45 00 53 47          	add    %r10b,0x47(%r11)
 372:	58                   	pop    %rax
 373:	5f                   	pop    %rdi
 374:	45 52                	rex.RB push %r10
 376:	52                   	push   %rdx
 377:	4f 52                	rex.WRXB push %r10
 379:	5f                   	pop    %rdi
 37a:	46                   	rex.RX
 37b:	49                   	rex.WB
 37c:	4c                   	rex.WR
 37d:	45 5f                	rex.RB pop %r15
 37f:	43                   	rex.XB
 380:	4c                   	rex.WR
 381:	4f 53                	rex.WRXB push %r11
 383:	45 5f                	rex.RB pop %r15
 385:	46                   	rex.RX
 386:	41                   	rex.B
 387:	49                   	rex.WB
 388:	4c                   	rex.WR
 389:	45                   	rex.RB
 38a:	44 00 53 47          	add    %r10b,0x47(%rbx)
 38e:	58                   	pop    %rax
 38f:	5f                   	pop    %rdi
 390:	45 52                	rex.RB push %r10
 392:	52                   	push   %rdx
 393:	4f 52                	rex.WRXB push %r10
 395:	5f                   	pop    %rdi
 396:	4d                   	rex.WRB
 397:	45                   	rex.RB
 398:	4d                   	rex.WRB
 399:	4f 52                	rex.WRXB push %r10
 39b:	59                   	pop    %rcx
 39c:	5f                   	pop    %rdi
 39d:	4d                   	rex.WRB
 39e:	41 50                	push   %r8
 3a0:	5f                   	pop    %rdi
 3a1:	46                   	rex.RX
 3a2:	41                   	rex.B
 3a3:	49                   	rex.WB
 3a4:	4c 55                	rex.WR push %rbp
 3a6:	52                   	push   %rdx
 3a7:	45 00 73 67          	add    %r14b,0x67(%r11)
 3ab:	78 5f                	js     40c <__ImageBase+0x40c>
 3ad:	65 63 61 6c          	movsxd %gs:0x6c(%rcx),%esp
 3b1:	6c                   	insb   (%dx),%es:(%rdi)
 3b2:	5f                   	pop    %rdi
 3b3:	63 6f 6d             	movsxd 0x6d(%rdi),%ebp
 3b6:	70 75                	jo     42d <__ImageBase+0x42d>
 3b8:	74 65                	je     41f <__ImageBase+0x41f>
 3ba:	5f                   	pop    %rdi
 3bb:	72 65                	jb     422 <__ImageBase+0x422>
 3bd:	73 70                	jae    42f <__ImageBase+0x42f>
 3bf:	6f                   	outsl  %ds:(%rsi),(%dx)
 3c0:	6e                   	outsb  %ds:(%rsi),(%dx)
 3c1:	73 65                	jae    428 <__ImageBase+0x428>
 3c3:	00 6d 73             	add    %ch,0x73(%rbp)
 3c6:	5f                   	pop    %rdi
 3c7:	6f                   	outsl  %ds:(%rsi),(%dx)
 3c8:	63 61 6c             	movsxd 0x6c(%rcx),%esp
 3cb:	6c                   	insb   (%dx),%es:(%rdi)
 3cc:	5f                   	pop    %rdi
 3cd:	70 72                	jo     441 <__ImageBase+0x441>
 3cf:	69 6e 74 5f 61 64 64 	imul   $0x6464615f,0x74(%rsi),%ebp
 3d6:	72 65                	jb     43d <__ImageBase+0x43d>
 3d8:	73 73                	jae    44d <__ImageBase+0x44d>
 3da:	5f                   	pop    %rdi
 3db:	74 00                	je     3dd <__ImageBase+0x3dd>
 3dd:	53                   	push   %rbx
 3de:	47 58                	rex.RXB pop %r8
 3e0:	5f                   	pop    %rdi
 3e1:	45 52                	rex.RB push %r10
 3e3:	52                   	push   %rdx
 3e4:	4f 52                	rex.WRXB push %r10
 3e6:	5f                   	pop    %rdi
 3e7:	55                   	push   %rbp
 3e8:	4e                   	rex.WRX
 3e9:	44                   	rex.R
 3ea:	45                   	rex.RB
 3eb:	46                   	rex.RX
 3ec:	49                   	rex.WB
 3ed:	4e                   	rex.WRX
 3ee:	45                   	rex.RB
 3ef:	44 5f                	rex.R pop %rdi
 3f1:	53                   	push   %rbx
 3f2:	59                   	pop    %rcx
 3f3:	4d                   	rex.WRB
 3f4:	42                   	rex.X
 3f5:	4f                   	rex.WRXB
 3f6:	4c 00 6d 73          	rex.WR add %r13b,0x73(%rbp)
 3fa:	5f                   	pop    %rdi
 3fb:	70 69                	jo     466 <__ImageBase+0x466>
 3fd:	6e                   	outsb  %ds:(%rsi),(%dx)
 3fe:	00 53 47             	add    %dl,0x47(%rbx)
 401:	58                   	pop    %rax
 402:	5f                   	pop    %rdi
 403:	45 52                	rex.RB push %r10
 405:	52                   	push   %rdx
 406:	4f 52                	rex.WRXB push %r10
 408:	5f                   	pop    %rdi
 409:	49                   	rex.WB
 40a:	4e 56                	rex.WRX push %rsi
 40c:	41                   	rex.B
 40d:	4c                   	rex.WR
 40e:	49                   	rex.WB
 40f:	44 5f                	rex.R pop %rdi
 411:	45                   	rex.RB
 412:	4e                   	rex.WRX
 413:	43                   	rex.XB
 414:	4c                   	rex.WR
 415:	41 56                	push   %r14
 417:	45 00 5f 6c          	add    %r11b,0x6c(%r15)
 41b:	65 6e                	outsb  %gs:(%rsi),(%dx)
 41d:	5f                   	pop    %rdi
 41e:	6f                   	outsl  %ds:(%rsi),(%dx)
 41f:	75 74                	jne    495 <__ImageBase+0x495>
 421:	5f                   	pop    %rdi
 422:	62                   	(bad)  
 423:	75 66                	jne    48b <__ImageBase+0x48b>
 425:	00 53 47             	add    %dl,0x47(%rbx)
 428:	58                   	pop    %rax
 429:	5f                   	pop    %rdi
 42a:	45 52                	rex.RB push %r10
 42c:	52                   	push   %rdx
 42d:	4f 52                	rex.WRXB push %r10
 42f:	5f                   	pop    %rdi
 430:	45                   	rex.RB
 431:	43                   	rex.XB
 432:	41                   	rex.B
 433:	4c                   	rex.WR
 434:	4c 5f                	rex.WR pop %rdi
 436:	4e                   	rex.WRX
 437:	4f 54                	rex.WRXB push %r12
 439:	5f                   	pop    %rdi
 43a:	41                   	rex.B
 43b:	4c                   	rex.WR
 43c:	4c                   	rex.WR
 43d:	4f 57                	rex.WRXB push %r15
 43f:	45                   	rex.RB
 440:	44 00 5f 5f          	add    %r11b,0x5f(%rdi)
 444:	74 6d                	je     4b3 <__ImageBase+0x4b3>
 446:	70 00                	jo     448 <__ImageBase+0x448>
 448:	53                   	push   %rbx
 449:	47 58                	rex.RXB pop %r8
 44b:	5f                   	pop    %rdi
 44c:	45 52                	rex.RB push %r10
 44e:	52                   	push   %rdx
 44f:	4f 52                	rex.WRXB push %r10
 451:	5f                   	pop    %rdi
 452:	49                   	rex.WB
 453:	4e 56                	rex.WRX push %rsi
 455:	41                   	rex.B
 456:	4c                   	rex.WR
 457:	49                   	rex.WB
 458:	44 5f                	rex.R pop %rdi
 45a:	4d                   	rex.WRB
 45b:	45 54                	rex.RB push %r12
 45d:	41                   	rex.B
 45e:	44                   	rex.R
 45f:	41 54                	push   %r12
 461:	41 00 53 47          	add    %dl,0x47(%r11)
 465:	58                   	pop    %rax
 466:	5f                   	pop    %rdi
 467:	45 52                	rex.RB push %r10
 469:	52                   	push   %rdx
 46a:	4f 52                	rex.WRXB push %r10
 46c:	5f                   	pop    %rdi
 46d:	4d                   	rex.WRB
 46e:	43 5f                	rex.XB pop %r15
 470:	4e                   	rex.WRX
 471:	4f 5f                	rex.WRXB pop %r15
 473:	41                   	rex.B
 474:	43                   	rex.XB
 475:	43                   	rex.XB
 476:	45 53                	rex.RB push %r11
 478:	53                   	push   %rbx
 479:	5f                   	pop    %rdi
 47a:	52                   	push   %rdx
 47b:	49                   	rex.WB
 47c:	47                   	rex.RXB
 47d:	48 54                	rex.W push %rsp
 47f:	00 53 47             	add    %dl,0x47(%rbx)
 482:	58                   	pop    %rax
 483:	5f                   	pop    %rdi
 484:	45 52                	rex.RB push %r10
 486:	52                   	push   %rdx
 487:	4f 52                	rex.WRXB push %r10
 489:	5f                   	pop    %rdi
 48a:	53                   	push   %rbx
 48b:	45 52                	rex.RB push %r10
 48d:	56                   	push   %rsi
 48e:	49                   	rex.WB
 48f:	43                   	rex.XB
 490:	45 5f                	rex.RB pop %r15
 492:	54                   	push   %rsp
 493:	49                   	rex.WB
 494:	4d                   	rex.WRB
 495:	45                   	rex.RB
 496:	4f 55                	rex.WRXB push %r13
 498:	54                   	push   %rsp
 499:	00 6e 72             	add    %ch,0x72(%rsi)
 49c:	5f                   	pop    %rdi
 49d:	65 63 61 6c          	movsxd %gs:0x6c(%rcx),%esp
 4a1:	6c                   	insb   (%dx),%es:(%rdi)
 4a2:	00 73 74             	add    %dh,0x74(%rbx)
 4a5:	72 6c                	jb     513 <__ImageBase+0x513>
 4a7:	65 6e                	outsb  %gs:(%rsi),(%dx)
 4a9:	00 53 47             	add    %dl,0x47(%rbx)
 4ac:	58                   	pop    %rax
 4ad:	5f                   	pop    %rdi
 4ae:	45 52                	rex.RB push %r10
 4b0:	52                   	push   %rdx
 4b1:	4f 52                	rex.WRXB push %r10
 4b3:	5f                   	pop    %rdi
 4b4:	50                   	push   %rax
 4b5:	43                   	rex.XB
 4b6:	4c 5f                	rex.WR pop %rdi
 4b8:	53                   	push   %rbx
 4b9:	48                   	rex.W
 4ba:	41 5f                	pop    %r15
 4bc:	4d                   	rex.WRB
 4bd:	49 53                	rex.WB push %r11
 4bf:	4d                   	rex.WRB
 4c0:	41 54                	push   %r12
 4c2:	43                   	rex.XB
 4c3:	48 00 6d 73          	rex.W add %bpl,0x73(%rbp)
 4c7:	5f                   	pop    %rdi
 4c8:	61                   	(bad)  
 4c9:	00 53 47             	add    %dl,0x47(%rbx)
 4cc:	58                   	pop    %rax
 4cd:	5f                   	pop    %rdi
 4ce:	45 52                	rex.RB push %r10
 4d0:	52                   	push   %rdx
 4d1:	4f 52                	rex.WRXB push %r10
 4d3:	5f                   	pop    %rdi
 4d4:	49                   	rex.WB
 4d5:	4e 56                	rex.WRX push %rsi
 4d7:	41                   	rex.B
 4d8:	4c                   	rex.WR
 4d9:	49                   	rex.WB
 4da:	44 5f                	rex.R pop %rdi
 4dc:	43 50                	rex.XB push %r8
 4de:	55                   	push   %rbp
 4df:	53                   	push   %rbx
 4e0:	56                   	push   %rsi
 4e1:	4e 00 6d 73          	rex.WRX add %r13b,0x73(%rbp)
 4e5:	5f                   	pop    %rdi
 4e6:	69 00 6d 73 5f 6a    	imul   $0x6a5f736d,(%rax),%eax
 4ec:	00 53 47             	add    %dl,0x47(%rbx)
 4ef:	58                   	pop    %rax
 4f0:	5f                   	pop    %rdi
 4f1:	45 52                	rex.RB push %r10
 4f3:	52                   	push   %rdx
 4f4:	4f 52                	rex.WRXB push %r10
 4f6:	5f                   	pop    %rdi
 4f7:	46                   	rex.RX
 4f8:	49                   	rex.WB
 4f9:	4c                   	rex.WR
 4fa:	45 5f                	rex.RB pop %r15
 4fc:	42                   	rex.X
 4fd:	41                   	rex.B
 4fe:	44 5f                	rex.R pop %rdi
 500:	53                   	push   %rbx
 501:	54                   	push   %rsp
 502:	41 54                	push   %r12
 504:	55                   	push   %rbp
 505:	53                   	push   %rbx
 506:	00 6d 73             	add    %ch,0x73(%rbp)
 509:	5f                   	pop    %rdi
 50a:	65 63 61 6c          	movsxd %gs:0x6c(%rcx),%esp
 50e:	6c                   	insb   (%dx),%es:(%rdi)
 50f:	5f                   	pop    %rdi
 510:	75 70                	jne    582 <__ImageBase+0x582>
 512:	64 61                	fs (bad) 
 514:	74 65                	je     57b <__ImageBase+0x57b>
 516:	5f                   	pop    %rdi
 517:	72 65                	jb     57e <__ImageBase+0x57e>
 519:	73 70                	jae    58b <__ImageBase+0x58b>
 51b:	6f                   	outsl  %ds:(%rsi),(%dx)
 51c:	6e                   	outsb  %ds:(%rsi),(%dx)
 51d:	73 65                	jae    584 <__ImageBase+0x584>
 51f:	5f                   	pop    %rdi
 520:	6c                   	insb   (%dx),%es:(%rdi)
 521:	6f                   	outsl  %ds:(%rsi),(%dx)
 522:	63 5f 74             	movsxd 0x74(%rdi),%ebx
 525:	00 53 47             	add    %dl,0x47(%rbx)
 528:	58                   	pop    %rax
 529:	5f                   	pop    %rdi
 52a:	45 52                	rex.RB push %r10
 52c:	52                   	push   %rdx
 52d:	4f 52                	rex.WRXB push %r10
 52f:	5f                   	pop    %rdi
 530:	55                   	push   %rbp
 531:	4e 52                	rex.WRX push %rdx
 533:	45                   	rex.RB
 534:	43                   	rex.XB
 535:	4f                   	rex.WRXB
 536:	47                   	rex.RXB
 537:	4e                   	rex.WRX
 538:	49 5a                	rex.WB pop %r10
 53a:	45                   	rex.RB
 53b:	44 5f                	rex.R pop %rdi
 53d:	50                   	push   %rax
 53e:	4c                   	rex.WR
 53f:	41 54                	push   %r12
 541:	46                   	rex.RX
 542:	4f 52                	rex.WRXB push %r10
 544:	4d 00 53 47          	rex.WRB add %r10b,0x47(%r11)
 548:	58                   	pop    %rax
 549:	5f                   	pop    %rdi
 54a:	45 52                	rex.RB push %r10
 54c:	52                   	push   %rdx
 54d:	4f 52                	rex.WRXB push %r10
 54f:	5f                   	pop    %rdi
 550:	53                   	push   %rbx
 551:	45 52                	rex.RB push %r10
 553:	56                   	push   %rsi
 554:	49                   	rex.WB
 555:	43                   	rex.XB
 556:	45 5f                	rex.RB pop %r15
 558:	49                   	rex.WB
 559:	4e 56                	rex.WRX push %rsi
 55b:	41                   	rex.B
 55c:	4c                   	rex.WR
 55d:	49                   	rex.WB
 55e:	44 5f                	rex.R pop %rdi
 560:	50                   	push   %rax
 561:	52                   	push   %rdx
 562:	49 56                	rex.WB push %r14
 564:	49                   	rex.WB
 565:	4c                   	rex.WR
 566:	45                   	rex.RB
 567:	47                   	rex.RXB
 568:	45 00 53 47          	add    %r10b,0x47(%r11)
 56c:	58                   	pop    %rax
 56d:	5f                   	pop    %rdi
 56e:	45 52                	rex.RB push %r10
 570:	52                   	push   %rdx
 571:	4f 52                	rex.WRXB push %r10
 573:	5f                   	pop    %rdi
 574:	46                   	rex.RX
 575:	49                   	rex.WB
 576:	4c                   	rex.WR
 577:	45 5f                	rex.RB pop %r15
 579:	46                   	rex.RX
 57a:	4c 55                	rex.WR push %rbp
 57c:	53                   	push   %rbx
 57d:	48 5f                	rex.W pop %rdi
 57f:	46                   	rex.RX
 580:	41                   	rex.B
 581:	49                   	rex.WB
 582:	4c                   	rex.WR
 583:	45                   	rex.RB
 584:	44 00 5f 6c          	add    %r11b,0x6c(%rdi)
 588:	65 6e                	outsb  %gs:(%rsi),(%dx)
 58a:	5f                   	pop    %rdi
 58b:	73 74                	jae    601 <__ImageBase+0x601>
 58d:	72 00                	jb     58f <__ImageBase+0x58f>
 58f:	53                   	push   %rbx
 590:	47 58                	rex.RXB pop %r8
 592:	5f                   	pop    %rdi
 593:	45 52                	rex.RB push %r10
 595:	52                   	push   %rdx
 596:	4f 52                	rex.WRXB push %r10
 598:	5f                   	pop    %rdi
 599:	42 55                	rex.X push %rbp
 59b:	53                   	push   %rbx
 59c:	59                   	pop    %rcx
 59d:	00 53 47             	add    %dl,0x47(%rbx)
 5a0:	58                   	pop    %rax
 5a1:	5f                   	pop    %rdi
 5a2:	45 52                	rex.RB push %r10
 5a4:	52                   	push   %rdx
 5a5:	4f 52                	rex.WRXB push %r10
 5a7:	5f                   	pop    %rdi
 5a8:	4d                   	rex.WRB
 5a9:	43 5f                	rex.XB pop %r15
 5ab:	4f 56                	rex.WRXB push %r14
 5ad:	45 52                	rex.RB push %r10
 5af:	5f                   	pop    %rdi
 5b0:	51                   	push   %rcx
 5b1:	55                   	push   %rbp
 5b2:	4f 54                	rex.WRXB push %r12
 5b4:	41 00 53 47          	add    %dl,0x47(%r11)
 5b8:	58                   	pop    %rax
 5b9:	5f                   	pop    %rdi
 5ba:	45 52                	rex.RB push %r10
 5bc:	52                   	push   %rdx
 5bd:	4f 52                	rex.WRXB push %r10
 5bf:	5f                   	pop    %rdi
 5c0:	45 50                	rex.RB push %r8
 5c2:	49                   	rex.WB
 5c3:	44 5f                	rex.R pop %rdi
 5c5:	4d                   	rex.WRB
 5c6:	45                   	rex.RB
 5c7:	4d                   	rex.WRB
 5c8:	42                   	rex.X
 5c9:	45 52                	rex.RB push %r10
 5cb:	5f                   	pop    %rdi
 5cc:	52                   	push   %rdx
 5cd:	45 56                	rex.RB push %r14
 5cf:	4f                   	rex.WRXB
 5d0:	4b                   	rex.WXB
 5d1:	45                   	rex.RB
 5d2:	44 00 53 47          	add    %r10b,0x47(%rbx)
 5d6:	58                   	pop    %rax
 5d7:	5f                   	pop    %rdi
 5d8:	45 52                	rex.RB push %r10
 5da:	52                   	push   %rdx
 5db:	4f 52                	rex.WRXB push %r10
 5dd:	5f                   	pop    %rdi
 5de:	46                   	rex.RX
 5df:	49                   	rex.WB
 5e0:	4c                   	rex.WR
 5e1:	45 5f                	rex.RB pop %r15
 5e3:	52                   	push   %rdx
 5e4:	45                   	rex.RB
 5e5:	43                   	rex.XB
 5e6:	4f 56                	rex.WRXB push %r14
 5e8:	45 52                	rex.RB push %r10
 5ea:	59                   	pop    %rcx
 5eb:	5f                   	pop    %rdi
 5ec:	4e                   	rex.WRX
 5ed:	45                   	rex.RB
 5ee:	45                   	rex.RB
 5ef:	44                   	rex.R
 5f0:	45                   	rex.RB
 5f1:	44 00 5f 5f          	add    %r11b,0x5f(%rdi)
 5f5:	69 6e 5f 6d 73 00 53 	imul   $0x5300736d,0x5f(%rsi),%ebp
 5fc:	47 58                	rex.RXB pop %r8
 5fe:	5f                   	pop    %rdi
 5ff:	45 52                	rex.RB push %r10
 601:	52                   	push   %rdx
 602:	4f 52                	rex.WRXB push %r10
 604:	5f                   	pop    %rdi
 605:	53                   	push   %rbx
 606:	45 52                	rex.RB push %r10
 608:	56                   	push   %rsi
 609:	49                   	rex.WB
 60a:	43                   	rex.XB
 60b:	45 5f                	rex.RB pop %r15
 60d:	55                   	push   %rbp
 60e:	4e                   	rex.WRX
 60f:	41 56                	push   %r14
 611:	41                   	rex.B
 612:	49                   	rex.WB
 613:	4c                   	rex.WR
 614:	41                   	rex.B
 615:	42                   	rex.X
 616:	4c                   	rex.WR
 617:	45 00 6d 73          	add    %r13b,0x73(%r13)
 61b:	5f                   	pop    %rdi
 61c:	69 6e 70 75 74 5f 70 	imul   $0x705f7475,0x70(%rsi),%ebp
 623:	6f                   	outsl  %ds:(%rsi),(%dx)
 624:	69 6e 74 65 72 00 53 	imul   $0x53007265,0x74(%rsi),%ebp
 62b:	47 58                	rex.RXB pop %r8
 62d:	5f                   	pop    %rdi
 62e:	45 52                	rex.RB push %r10
 630:	52                   	push   %rdx
 631:	4f 52                	rex.WRXB push %r10
 633:	5f                   	pop    %rdi
 634:	41 54                	push   %r12
 636:	54                   	push   %rsp
 637:	5f                   	pop    %rdi
 638:	4b                   	rex.WXB
 639:	45 59                	rex.RB pop %r9
 63b:	5f                   	pop    %rdi
 63c:	55                   	push   %rbp
 63d:	4e                   	rex.WRX
 63e:	49                   	rex.WB
 63f:	4e                   	rex.WRX
 640:	49 54                	rex.WB push %r12
 642:	49                   	rex.WB
 643:	41                   	rex.B
 644:	4c                   	rex.WR
 645:	49 5a                	rex.WB pop %r10
 647:	45                   	rex.RB
 648:	44 00 53 47          	add    %r10b,0x47(%rbx)
 64c:	58                   	pop    %rax
 64d:	5f                   	pop    %rdi
 64e:	45 52                	rex.RB push %r10
 650:	52                   	push   %rdx
 651:	4f 52                	rex.WRXB push %r10
 653:	5f                   	pop    %rdi
 654:	50                   	push   %rax
 655:	43                   	rex.XB
 656:	4c 5f                	rex.WR pop %rdi
 658:	4e                   	rex.WRX
 659:	4f 54                	rex.WRXB push %r12
 65b:	5f                   	pop    %rdi
 65c:	45                   	rex.RB
 65d:	4e                   	rex.WRX
 65e:	43 52                	rex.XB push %r10
 660:	59                   	pop    %rcx
 661:	50                   	push   %rax
 662:	54                   	push   %rsp
 663:	45                   	rex.RB
 664:	44 00 5f 74          	add    %r11b,0x74(%rdi)
 668:	6d                   	insl   (%dx),%es:(%rdi)
 669:	70 5f                	jo     6ca <__ImageBase+0x6ca>
 66b:	6f                   	outsl  %ds:(%rsi),(%dx)
 66c:	75 74                	jne    6e2 <__ImageBase+0x6e2>
 66e:	5f                   	pop    %rdi
 66f:	62                   	(bad)  
 670:	75 66                	jne    6d8 <__ImageBase+0x6d8>
 672:	00 53 47             	add    %dl,0x47(%rbx)
 675:	58                   	pop    %rax
 676:	5f                   	pop    %rdi
 677:	45 52                	rex.RB push %r10
 679:	52                   	push   %rdx
 67a:	4f 52                	rex.WRXB push %r10
 67c:	5f                   	pop    %rdi
 67d:	41                   	rex.B
 67e:	45 5f                	rex.RB pop %r15
 680:	49                   	rex.WB
 681:	4e 56                	rex.WRX push %rsi
 683:	41                   	rex.B
 684:	4c                   	rex.WR
 685:	49                   	rex.WB
 686:	44 5f                	rex.R pop %rdi
 688:	45 50                	rex.RB push %r8
 68a:	49                   	rex.WB
 68b:	44                   	rex.R
 68c:	42                   	rex.X
 68d:	4c                   	rex.WR
 68e:	4f                   	rex.WRXB
 68f:	42 00 53 47          	rex.X add %dl,0x47(%rbx)
 693:	58                   	pop    %rax
 694:	5f                   	pop    %rdi
 695:	49                   	rex.WB
 696:	4e 54                	rex.WRX push %rsp
 698:	45 52                	rex.RB push %r10
 69a:	4e                   	rex.WRX
 69b:	41                   	rex.B
 69c:	4c 5f                	rex.WR pop %rdi
 69e:	45 52                	rex.RB push %r10
 6a0:	52                   	push   %rdx
 6a1:	4f 52                	rex.WRXB push %r10
 6a3:	5f                   	pop    %rdi
 6a4:	45                   	rex.RB
 6a5:	4e                   	rex.WRX
 6a6:	43                   	rex.XB
 6a7:	4c                   	rex.WR
 6a8:	41 56                	push   %r14
 6aa:	45 5f                	rex.RB pop %r15
 6ac:	43 52                	rex.XB push %r10
 6ae:	45                   	rex.RB
 6af:	41 54                	push   %r12
 6b1:	45 5f                	rex.RB pop %r15
 6b3:	49                   	rex.WB
 6b4:	4e 54                	rex.WRX push %rsp
 6b6:	45 52                	rex.RB push %r10
 6b8:	52                   	push   %rdx
 6b9:	55                   	push   %rbp
 6ba:	50                   	push   %rax
 6bb:	54                   	push   %rsp
 6bc:	45                   	rex.RB
 6bd:	44 00 53 47          	add    %r10b,0x47(%rbx)
 6c1:	58                   	pop    %rax
 6c2:	5f                   	pop    %rdi
 6c3:	45 52                	rex.RB push %r10
 6c5:	52                   	push   %rdx
 6c6:	4f 52                	rex.WRXB push %r10
 6c8:	5f                   	pop    %rdi
 6c9:	49                   	rex.WB
 6ca:	4e 56                	rex.WRX push %rsi
 6cc:	41                   	rex.B
 6cd:	4c                   	rex.WR
 6ce:	49                   	rex.WB
 6cf:	44 5f                	rex.R pop %rdi
 6d1:	41 54                	push   %r12
 6d3:	54                   	push   %rsp
 6d4:	52                   	push   %rdx
 6d5:	49                   	rex.WB
 6d6:	42 55                	rex.X push %rbp
 6d8:	54                   	push   %rsp
 6d9:	45 00 53 47          	add    %r10b,0x47(%r11)
 6dd:	58                   	pop    %rax
 6de:	5f                   	pop    %rdi
 6df:	45 52                	rex.RB push %r10
 6e1:	52                   	push   %rdx
 6e2:	4f 52                	rex.WRXB push %r10
 6e4:	5f                   	pop    %rdi
 6e5:	46                   	rex.RX
 6e6:	49                   	rex.WB
 6e7:	4c                   	rex.WR
 6e8:	45 5f                	rex.RB pop %r15
 6ea:	43                   	rex.XB
 6eb:	41                   	rex.B
 6ec:	4e 54                	rex.WRX push %rsp
 6ee:	5f                   	pop    %rdi
 6ef:	4f 50                	rex.WRXB push %r8
 6f1:	45                   	rex.RB
 6f2:	4e 5f                	rex.WRX pop %rdi
 6f4:	52                   	push   %rdx
 6f5:	45                   	rex.RB
 6f6:	43                   	rex.XB
 6f7:	4f 56                	rex.WRXB push %r14
 6f9:	45 52                	rex.RB push %r10
 6fb:	59                   	pop    %rcx
 6fc:	5f                   	pop    %rdi
 6fd:	46                   	rex.RX
 6fe:	49                   	rex.WB
 6ff:	4c                   	rex.WR
 700:	45 00 53 47          	add    %r10b,0x47(%r11)
 704:	58                   	pop    %rax
 705:	5f                   	pop    %rdi
 706:	45 52                	rex.RB push %r10
 708:	52                   	push   %rdx
 709:	4f 52                	rex.WRXB push %r10
 70b:	5f                   	pop    %rdi
 70c:	50                   	push   %rax
 70d:	43                   	rex.XB
 70e:	4c 5f                	rex.WR pop %rdi
 710:	45                   	rex.RB
 711:	4e                   	rex.WRX
 712:	43 52                	rex.XB push %r10
 714:	59                   	pop    %rcx
 715:	50                   	push   %rax
 716:	54                   	push   %rsp
 717:	45                   	rex.RB
 718:	44 00 53 47          	add    %r10b,0x47(%rbx)
 71c:	58                   	pop    %rax
 71d:	5f                   	pop    %rdi
 71e:	45 52                	rex.RB push %r10
 720:	52                   	push   %rdx
 721:	4f 52                	rex.WRXB push %r10
 723:	5f                   	pop    %rdi
 724:	41                   	rex.B
 725:	45 5f                	rex.RB pop %r15
 727:	53                   	push   %rbx
 728:	45 53                	rex.RB push %r11
 72a:	53                   	push   %rbx
 72b:	49                   	rex.WB
 72c:	4f                   	rex.WRXB
 72d:	4e 5f                	rex.WRX pop %rdi
 72f:	49                   	rex.WB
 730:	4e 56                	rex.WRX push %rsi
 732:	41                   	rex.B
 733:	4c                   	rex.WR
 734:	49                   	rex.WB
 735:	44 00 5f 6c          	add    %r11b,0x6c(%rdi)
 739:	65 6e                	outsb  %gs:(%rsi),(%dx)
 73b:	5f                   	pop    %rdi
 73c:	69 6e 70 75 74 5f 70 	imul   $0x705f7475,0x70(%rsi),%ebp
 743:	6f                   	outsl  %ds:(%rsi),(%dx)
 744:	69 6e 74 65 72 00 53 	imul   $0x53007265,0x74(%rsi),%ebp
 74b:	47 58                	rex.RXB pop %r8
 74d:	5f                   	pop    %rdi
 74e:	45 52                	rex.RB push %r10
 750:	52                   	push   %rdx
 751:	4f 52                	rex.WRXB push %r10
 753:	5f                   	pop    %rdi
 754:	49                   	rex.WB
 755:	4e 56                	rex.WRX push %rsi
 757:	41                   	rex.B
 758:	4c                   	rex.WR
 759:	49                   	rex.WB
 75a:	44 5f                	rex.R pop %rdi
 75c:	53                   	push   %rbx
 75d:	54                   	push   %rsp
 75e:	41 54                	push   %r12
 760:	45 00 53 47          	add    %r10b,0x47(%r11)
 764:	58                   	pop    %rax
 765:	5f                   	pop    %rdi
 766:	45 52                	rex.RB push %r10
 768:	52                   	push   %rdx
 769:	4f 52                	rex.WRXB push %r10
 76b:	5f                   	pop    %rdi
 76c:	45                   	rex.RB
 76d:	4e                   	rex.WRX
 76e:	43                   	rex.XB
 76f:	4c                   	rex.WR
 770:	41 56                	push   %r14
 772:	45 5f                	rex.RB pop %r15
 774:	43 52                	rex.XB push %r10
 776:	41 53                	push   %r11
 778:	48                   	rex.W
 779:	45                   	rex.RB
 77a:	44 00 53 47          	add    %r10b,0x47(%rbx)
 77e:	58                   	pop    %rax
 77f:	5f                   	pop    %rdi
 780:	45 52                	rex.RB push %r10
 782:	52                   	push   %rdx
 783:	4f 52                	rex.WRXB push %r10
 785:	5f                   	pop    %rdi
 786:	44                   	rex.R
 787:	45 56                	rex.RB push %r14
 789:	49                   	rex.WB
 78a:	43                   	rex.XB
 78b:	45 5f                	rex.RB pop %r15
 78d:	42 55                	rex.X push %rbp
 78f:	53                   	push   %rbx
 790:	59                   	pop    %rcx
 791:	00 53 47             	add    %dl,0x47(%rbx)
 794:	58                   	pop    %rax
 795:	5f                   	pop    %rdi
 796:	45 52                	rex.RB push %r10
 798:	52                   	push   %rdx
 799:	4f 52                	rex.WRXB push %r10
 79b:	5f                   	pop    %rdi
 79c:	4f 55                	rex.WRXB push %r13
 79e:	54                   	push   %rsp
 79f:	5f                   	pop    %rdi
 7a0:	4f                   	rex.WRXB
 7a1:	46 5f                	rex.RX pop %rdi
 7a3:	45 50                	rex.RB push %r8
 7a5:	43 00 73 67          	rex.XB add %sil,0x67(%r11)
 7a9:	78 5f                	js     80a <__ImageBase+0x80a>
 7ab:	73 74                	jae    821 <__ImageBase+0x821>
 7ad:	61                   	(bad)  
 7ae:	74 75                	je     825 <__ImageBase+0x825>
 7b0:	73 5f                	jae    811 <__ImageBase+0x811>
 7b2:	74 00                	je     7b4 <__ImageBase+0x7b4>
 7b4:	6d                   	insl   (%dx),%es:(%rdi)
 7b5:	65 6d                	gs insl (%dx),%es:(%rdi)
 7b7:	63 70 79             	movsxd 0x79(%rax),%esi
 7ba:	5f                   	pop    %rdi
 7bb:	76 65                	jbe    822 <__ImageBase+0x822>
 7bd:	72 77                	jb     836 <__ImageBase+0x836>
 7bf:	5f                   	pop    %rdi
 7c0:	73 00                	jae    7c2 <__ImageBase+0x7c2>
 7c2:	53                   	push   %rbx
 7c3:	47 58                	rex.RXB pop %r8
 7c5:	5f                   	pop    %rdi
 7c6:	53                   	push   %rbx
 7c7:	55                   	push   %rbp
 7c8:	43                   	rex.XB
 7c9:	43                   	rex.XB
 7ca:	45 53                	rex.RB push %r11
 7cc:	53                   	push   %rbx
 7cd:	00 65 72             	add    %ah,0x72(%rbp)
 7d0:	72 6e                	jb     840 <__ImageBase+0x840>
 7d2:	6f                   	outsl  %ds:(%rsi),(%dx)
 7d3:	5f                   	pop    %rdi
 7d4:	74 00                	je     7d6 <__ImageBase+0x7d6>
 7d6:	73 67                	jae    83f <__ImageBase+0x83f>
 7d8:	78 5f                	js     839 <__ImageBase+0x839>
 7da:	6f                   	outsl  %ds:(%rsi),(%dx)
 7db:	63 66 72             	movsxd 0x72(%rsi),%esp
 7de:	65 65 00 53 47       	gs add %dl,%gs:0x47(%rbx)
 7e3:	58                   	pop    %rax
 7e4:	5f                   	pop    %rdi
 7e5:	45 52                	rex.RB push %r10
 7e7:	52                   	push   %rdx
 7e8:	4f 52                	rex.WRXB push %r10
 7ea:	5f                   	pop    %rdi
 7eb:	4e                   	rex.WRX
 7ec:	4f 5f                	rex.WRXB pop %r15
 7ee:	50                   	push   %rax
 7ef:	52                   	push   %rdx
 7f0:	49 56                	rex.WB push %r14
 7f2:	49                   	rex.WB
 7f3:	4c                   	rex.WR
 7f4:	45                   	rex.RB
 7f5:	47                   	rex.RXB
 7f6:	45 00 73 67          	add    %r14b,0x67(%r11)
 7fa:	78 5f                	js     85b <__ImageBase+0x85b>
 7fc:	65 63 61 6c          	movsxd %gs:0x6c(%rcx),%esp
 800:	6c                   	insb   (%dx),%es:(%rdi)
 801:	5f                   	pop    %rdi
 802:	75 70                	jne    874 <__ImageBase+0x874>
 804:	64 61                	fs (bad) 
 806:	74 65                	je     86d <__ImageBase+0x86d>
 808:	5f                   	pop    %rdi
 809:	72 65                	jb     870 <__ImageBase+0x870>
 80b:	73 70                	jae    87d <__ImageBase+0x87d>
 80d:	6f                   	outsl  %ds:(%rsi),(%dx)
 80e:	6e                   	outsb  %ds:(%rsi),(%dx)
 80f:	73 65                	jae    876 <__ImageBase+0x876>
 811:	5f                   	pop    %rdi
 812:	6c                   	insb   (%dx),%es:(%rdi)
 813:	6f                   	outsl  %ds:(%rsi),(%dx)
 814:	63 00                	movsxd (%rax),%eax
 816:	5f                   	pop    %rdi
 817:	69 6e 5f 6f 75 74 5f 	imul   $0x5f74756f,0x5f(%rsi),%ebp
 81e:	62                   	(bad)  
 81f:	75 66                	jne    887 <__ImageBase+0x887>
 821:	00 53 47             	add    %dl,0x47(%rbx)
 824:	58                   	pop    %rax
 825:	5f                   	pop    %rdi
 826:	45 52                	rex.RB push %r10
 828:	52                   	push   %rdx
 829:	4f 52                	rex.WRXB push %r10
 82b:	5f                   	pop    %rdi
 82c:	49                   	rex.WB
 82d:	4e 56                	rex.WRX push %rsi
 82f:	41                   	rex.B
 830:	4c                   	rex.WR
 831:	49                   	rex.WB
 832:	44 5f                	rex.R pop %rdi
 834:	50                   	push   %rax
 835:	41 52                	push   %r10
 837:	41                   	rex.B
 838:	4d                   	rex.WRB
 839:	45 54                	rex.RB push %r12
 83b:	45 52                	rex.RB push %r10
 83d:	00 69 73             	add    %ch,0x73(%rcx)
 840:	5f                   	pop    %rdi
 841:	73 77                	jae    8ba <__ImageBase+0x8ba>
 843:	69 74 63 68 6c 65 73 	imul   $0x7373656c,0x68(%rbx,%riz,2),%esi
 84a:	73 
 84b:	00 53 47             	add    %dl,0x47(%rbx)
 84e:	58                   	pop    %rax
 84f:	5f                   	pop    %rdi
 850:	45 52                	rex.RB push %r10
 852:	52                   	push   %rdx
 853:	4f 52                	rex.WRXB push %r10
 855:	5f                   	pop    %rdi
 856:	50                   	push   %rax
 857:	43                   	rex.XB
 858:	4c 5f                	rex.WR pop %rdi
 85a:	47 55                	rex.RXB push %r13
 85c:	49                   	rex.WB
 85d:	44 5f                	rex.R pop %rdi
 85f:	4d                   	rex.WRB
 860:	49 53                	rex.WB push %r11
 862:	4d                   	rex.WRB
 863:	41 54                	push   %r12
 865:	43                   	rex.XB
 866:	48 00 5f 5f          	rex.W add %bl,0x5f(%rdi)
 86a:	62                   	(bad)  
 86b:	75 69                	jne    8d6 <__ImageBase+0x8d6>
 86d:	6c                   	insb   (%dx),%es:(%rdi)
 86e:	74 69                	je     8d9 <__ImageBase+0x8d9>
 870:	6e                   	outsb  %ds:(%rsi),(%dx)
 871:	5f                   	pop    %rdi
 872:	69 61 33 32 5f 6c 66 	imul   $0x666c5f32,0x33(%rcx),%esp
 879:	65 6e                	outsb  %gs:(%rsi),(%dx)
 87b:	63 65 00             	movsxd 0x0(%rbp),%esp
 87e:	6d                   	insl   (%dx),%es:(%rdi)
 87f:	73 5f                	jae    8e0 <__ImageBase+0x8e0>
 881:	65 63 61 6c          	movsxd %gs:0x6c(%rcx),%esp
 885:	6c                   	insb   (%dx),%es:(%rdi)
 886:	5f                   	pop    %rdi
 887:	67 65 74 5f          	addr32 gs je 8ea <__ImageBase+0x8ea>
 88b:	73 65                	jae    8f2 <__ImageBase+0x8f2>
 88d:	63 72 65             	movsxd 0x65(%rdx),%esi
 890:	74 5f                	je     8f1 <__ImageBase+0x8f1>
 892:	74 00                	je     894 <__ImageBase+0x894>
 894:	53                   	push   %rbx
 895:	47 58                	rex.RXB pop %r8
 897:	5f                   	pop    %rdi
 898:	45 52                	rex.RB push %r10
 89a:	52                   	push   %rdx
 89b:	4f 52                	rex.WRXB push %r10
 89d:	5f                   	pop    %rdi
 89e:	45                   	rex.RB
 89f:	4e                   	rex.WRX
 8a0:	43                   	rex.XB
 8a1:	4c                   	rex.WR
 8a2:	41 56                	push   %r14
 8a4:	45 5f                	rex.RB pop %r15
 8a6:	4c                   	rex.WR
 8a7:	4f 53                	rex.WRXB push %r11
 8a9:	54                   	push   %rsp
 8aa:	00 6d 73             	add    %ch,0x73(%rbp)
 8ad:	5f                   	pop    %rdi
 8ae:	6f                   	outsl  %ds:(%rsi),(%dx)
 8af:	63 61 6c             	movsxd 0x6c(%rcx),%esp
 8b2:	6c                   	insb   (%dx),%es:(%rdi)
 8b3:	5f                   	pop    %rdi
 8b4:	70 72                	jo     928 <__ImageBase+0x928>
 8b6:	69 6e 74 5f 74 00 73 	imul   $0x7300745f,0x74(%rsi),%ebp
 8bd:	67 78 5f             	addr32 js 91f <__ImageBase+0x91f>
 8c0:	65 63 61 6c          	movsxd %gs:0x6c(%rcx),%esp
 8c4:	6c                   	insb   (%dx),%es:(%rdi)
 8c5:	5f                   	pop    %rdi
 8c6:	67 65 74 5f          	addr32 gs je 929 <__ImageBase+0x929>
 8ca:	73 65                	jae    931 <__ImageBase+0x931>
 8cc:	63 72 65             	movsxd 0x65(%rdx),%esi
 8cf:	74 00                	je     8d1 <__ImageBase+0x8d1>
 8d1:	5f                   	pop    %rdi
 8d2:	5f                   	pop    %rdi
 8d3:	75 69                	jne    93e <__ImageBase+0x93e>
 8d5:	6e                   	outsb  %ds:(%rsi),(%dx)
 8d6:	74 70                	je     948 <__ImageBase+0x948>
 8d8:	74 72                	je     94c <__ImageBase+0x94c>
 8da:	5f                   	pop    %rdi
 8db:	74 00                	je     8dd <__ImageBase+0x8dd>
 8dd:	5f                   	pop    %rdi
 8de:	74 6d                	je     94d <__ImageBase+0x94d>
 8e0:	70 5f                	jo     941 <__ImageBase+0x941>
 8e2:	69 6e 70 75 74 5f 70 	imul   $0x705f7475,0x70(%rsi),%ebp
 8e9:	6f                   	outsl  %ds:(%rsi),(%dx)
 8ea:	69 6e 74 65 72 00 69 	imul   $0x69007265,0x74(%rsi),%ebp
 8f1:	73 5f                	jae    952 <__ImageBase+0x952>
 8f3:	70 72                	jo     967 <__ImageBase+0x967>
 8f5:	69 76 00 65 63 61 6c 	imul   $0x6c616365,0x0(%rsi),%esi
 8fc:	6c                   	insb   (%dx),%es:(%rdi)
 8fd:	5f                   	pop    %rdi
 8fe:	61                   	(bad)  
 8ff:	64 64 72 00          	fs fs jb 903 <__ImageBase+0x903>
 903:	6d                   	insl   (%dx),%es:(%rdi)
 904:	61                   	(bad)  
 905:	6c                   	insb   (%dx),%es:(%rdi)
 906:	6c                   	insb   (%dx),%es:(%rdi)
 907:	6f                   	outsl  %ds:(%rsi),(%dx)
 908:	63 00                	movsxd (%rax),%eax
 90a:	73 67                	jae    973 <__ImageBase+0x973>
 90c:	78 5f                	js     96d <__ImageBase+0x96d>
 90e:	65 63 61 6c          	movsxd %gs:0x6c(%rcx),%esp
 912:	6c                   	insb   (%dx),%es:(%rdi)
 913:	5f                   	pop    %rdi
 914:	67 65 74 5f          	addr32 gs je 977 <__ImageBase+0x977>
 918:	72 65                	jb     97f <__ImageBase+0x97f>
 91a:	73 70                	jae    98c <__ImageBase+0x98c>
 91c:	6f                   	outsl  %ds:(%rsi),(%dx)
 91d:	6e                   	outsb  %ds:(%rsi),(%dx)
 91e:	73 65                	jae    985 <__ImageBase+0x985>
 920:	00 53 47             	add    %dl,0x47(%rbx)
 923:	58                   	pop    %rax
 924:	5f                   	pop    %rdi
 925:	45 52                	rex.RB push %r10
 927:	52                   	push   %rdx
 928:	4f 52                	rex.WRXB push %r10
 92a:	5f                   	pop    %rdi
 92b:	49                   	rex.WB
 92c:	4e 56                	rex.WRX push %rsi
 92e:	41                   	rex.B
 92f:	4c                   	rex.WR
 930:	49                   	rex.WB
 931:	44 5f                	rex.R pop %rdi
 933:	4c                   	rex.WR
 934:	41 55                	push   %r13
 936:	4e                   	rex.WRX
 937:	43                   	rex.XB
 938:	48 5f                	rex.W pop %rdi
 93a:	54                   	push   %rsp
 93b:	4f                   	rex.WRXB
 93c:	4b                   	rex.WXB
 93d:	45                   	rex.RB
 93e:	4e 00 53 47          	rex.WRX add %r10b,0x47(%rbx)
 942:	58                   	pop    %rax
 943:	5f                   	pop    %rdi
 944:	45 52                	rex.RB push %r10
 946:	52                   	push   %rdx
 947:	4f 52                	rex.WRXB push %r10
 949:	5f                   	pop    %rdi
 94a:	49                   	rex.WB
 94b:	4e 56                	rex.WRX push %rsi
 94d:	41                   	rex.B
 94e:	4c                   	rex.WR
 94f:	49                   	rex.WB
 950:	44 5f                	rex.R pop %rdi
 952:	56                   	push   %rsi
 953:	45 52                	rex.RB push %r10
 955:	53                   	push   %rbx
 956:	49                   	rex.WB
 957:	4f                   	rex.WRXB
 958:	4e 00 67 5f          	rex.WRX add %r12b,0x5f(%rdi)
 95c:	64 79 6e             	fs jns 9cd <__ImageBase+0x9cd>
 95f:	5f                   	pop    %rdi
 960:	65 6e                	outsb  %gs:(%rsi),(%dx)
 962:	74 72                	je     9d6 <__ImageBase+0x9d6>
 964:	79 5f                	jns    9c5 <__ImageBase+0x9c5>
 966:	74 61                	je     9c9 <__ImageBase+0x9c9>
 968:	62                   	(bad)  
 969:	6c                   	insb   (%dx),%es:(%rdi)
 96a:	65 00 53 47          	add    %dl,%gs:0x47(%rbx)
 96e:	58                   	pop    %rax
 96f:	5f                   	pop    %rdi
 970:	45 52                	rex.RB push %r10
 972:	52                   	push   %rdx
 973:	4f 52                	rex.WRXB push %r10
 975:	5f                   	pop    %rdi
 976:	49                   	rex.WB
 977:	4e 56                	rex.WRX push %rsi
 979:	41                   	rex.B
 97a:	4c                   	rex.WR
 97b:	49                   	rex.WB
 97c:	44 5f                	rex.R pop %rdi
 97e:	46 55                	rex.RX push %rbp
 980:	4e                   	rex.WRX
 981:	43 54                	rex.XB push %r12
 983:	49                   	rex.WB
 984:	4f                   	rex.WRXB
 985:	4e 00 53 47          	rex.WRX add %r10b,0x47(%rbx)
 989:	58                   	pop    %rax
 98a:	5f                   	pop    %rdi
 98b:	45 52                	rex.RB push %r10
 98d:	52                   	push   %rdx
 98e:	4f 52                	rex.WRXB push %r10
 990:	5f                   	pop    %rdi
 991:	50                   	push   %rax
 992:	43                   	rex.XB
 993:	4c 5f                	rex.WR pop %rdi
 995:	4d                   	rex.WRB
 996:	41                   	rex.B
 997:	43 5f                	rex.XB pop %r15
 999:	4d                   	rex.WRB
 99a:	49 53                	rex.WB push %r11
 99c:	4d                   	rex.WRB
 99d:	41 54                	push   %r12
 99f:	43                   	rex.XB
 9a0:	48 00 53 47          	rex.W add %dl,0x47(%rbx)
 9a4:	58                   	pop    %rax
 9a5:	5f                   	pop    %rdi
 9a6:	45 52                	rex.RB push %r10
 9a8:	52                   	push   %rdx
 9a9:	4f 52                	rex.WRXB push %r10
 9ab:	5f                   	pop    %rdi
 9ac:	46                   	rex.RX
 9ad:	45                   	rex.RB
 9ae:	41 54                	push   %r12
 9b0:	55                   	push   %rbp
 9b1:	52                   	push   %rdx
 9b2:	45 5f                	rex.RB pop %r15
 9b4:	4e                   	rex.WRX
 9b5:	4f 54                	rex.WRXB push %r12
 9b7:	5f                   	pop    %rdi
 9b8:	53                   	push   %rbx
 9b9:	55                   	push   %rbp
 9ba:	50                   	push   %rax
 9bb:	50                   	push   %rax
 9bc:	4f 52                	rex.WRXB push %r10
 9be:	54                   	push   %rsp
 9bf:	45                   	rex.RB
 9c0:	44 00 53 47          	add    %r10b,0x47(%rbx)
 9c4:	58                   	pop    %rax
 9c5:	5f                   	pop    %rdi
 9c6:	45 52                	rex.RB push %r10
 9c8:	52                   	push   %rdx
 9c9:	4f 52                	rex.WRXB push %r10
 9cb:	5f                   	pop    %rdi
 9cc:	49                   	rex.WB
 9cd:	4e 56                	rex.WRX push %rsi
 9cf:	41                   	rex.B
 9d0:	4c                   	rex.WR
 9d1:	49                   	rex.WB
 9d2:	44 5f                	rex.R pop %rdi
 9d4:	4d                   	rex.WRB
 9d5:	49 53                	rex.WB push %r11
 9d7:	43 00 53 47          	rex.XB add %dl,0x47(%r11)
 9db:	58                   	pop    %rax
 9dc:	5f                   	pop    %rdi
 9dd:	45 52                	rex.RB push %r10
 9df:	52                   	push   %rdx
 9e0:	4f 52                	rex.WRXB push %r10
 9e2:	5f                   	pop    %rdi
 9e3:	4b                   	rex.WXB
 9e4:	44                   	rex.R
 9e5:	46 5f                	rex.RX pop %rdi
 9e7:	4d                   	rex.WRB
 9e8:	49 53                	rex.WB push %r11
 9ea:	4d                   	rex.WRB
 9eb:	41 54                	push   %r12
 9ed:	43                   	rex.XB
 9ee:	48 00 53 47          	rex.W add %dl,0x47(%rbx)
 9f2:	58                   	pop    %rax
 9f3:	5f                   	pop    %rdi
 9f4:	45 52                	rex.RB push %r10
 9f6:	52                   	push   %rdx
 9f7:	4f 52                	rex.WRXB push %r10
 9f9:	5f                   	pop    %rdi
 9fa:	54                   	push   %rsp
 9fb:	4c 53                	rex.WR push %rbx
 9fd:	5f                   	pop    %rdi
 9fe:	58                   	pop    %rax
 9ff:	35 30 39 5f 49       	xor    $0x495f3930,%eax
 a04:	4e 56                	rex.WRX push %rsi
 a06:	41                   	rex.B
 a07:	4c                   	rex.WR
 a08:	49                   	rex.WB
 a09:	44 5f                	rex.R pop %rdi
 a0b:	45 58                	rex.RB pop %r8
 a0d:	54                   	push   %rsp
 a0e:	45                   	rex.RB
 a0f:	4e 53                	rex.WRX push %rbx
 a11:	49                   	rex.WB
 a12:	4f                   	rex.WRXB
 a13:	4e 00 53 47          	rex.WRX add %r10b,0x47(%rbx)
 a17:	58                   	pop    %rax
 a18:	5f                   	pop    %rdi
 a19:	45 52                	rex.RB push %r10
 a1b:	52                   	push   %rdx
 a1c:	4f 52                	rex.WRXB push %r10
 a1e:	5f                   	pop    %rdi
 a1f:	4f                   	rex.WRXB
 a20:	43                   	rex.XB
 a21:	41                   	rex.B
 a22:	4c                   	rex.WR
 a23:	4c 5f                	rex.WR pop %rdi
 a25:	4e                   	rex.WRX
 a26:	4f 54                	rex.WRXB push %r12
 a28:	5f                   	pop    %rdi
 a29:	41                   	rex.B
 a2a:	4c                   	rex.WR
 a2b:	4c                   	rex.WR
 a2c:	4f 57                	rex.WRXB push %r15
 a2e:	45                   	rex.RB
 a2f:	44 00 53 47          	add    %r10b,0x47(%rbx)
 a33:	58                   	pop    %rax
 a34:	5f                   	pop    %rdi
 a35:	45 52                	rex.RB push %r10
 a37:	52                   	push   %rdx
 a38:	4f 52                	rex.WRXB push %r10
 a3a:	5f                   	pop    %rdi
 a3b:	49                   	rex.WB
 a3c:	4e 56                	rex.WRX push %rsi
 a3e:	41                   	rex.B
 a3f:	4c                   	rex.WR
 a40:	49                   	rex.WB
 a41:	44 5f                	rex.R pop %rdi
 a43:	4b                   	rex.WXB
 a44:	45 59                	rex.RB pop %r9
 a46:	4e                   	rex.WRX
 a47:	41                   	rex.B
 a48:	4d                   	rex.WRB
 a49:	45 00 53 47          	add    %r10b,0x47(%r11)
 a4d:	58                   	pop    %rax
 a4e:	5f                   	pop    %rdi
 a4f:	45 52                	rex.RB push %r10
 a51:	52                   	push   %rdx
 a52:	4f 52                	rex.WRXB push %r10
 a54:	5f                   	pop    %rdi
 a55:	4e                   	rex.WRX
 a56:	4f 5f                	rex.WRXB pop %r15
 a58:	44                   	rex.R
 a59:	45 56                	rex.RB push %r14
 a5b:	49                   	rex.WB
 a5c:	43                   	rex.XB
 a5d:	45 00 53 47          	add    %r10b,0x47(%r11)
 a61:	58                   	pop    %rax
 a62:	5f                   	pop    %rdi
 a63:	45 52                	rex.RB push %r10
 a65:	52                   	push   %rdx
 a66:	4f 52                	rex.WRXB push %r10
 a68:	5f                   	pop    %rdi
 a69:	46                   	rex.RX
 a6a:	49                   	rex.WB
 a6b:	4c                   	rex.WR
 a6c:	45 5f                	rex.RB pop %r15
 a6e:	4e                   	rex.WRX
 a6f:	41                   	rex.B
 a70:	4d                   	rex.WRB
 a71:	45 5f                	rex.RB pop %r15
 a73:	4d                   	rex.WRB
 a74:	49 53                	rex.WB push %r11
 a76:	4d                   	rex.WRB
 a77:	41 54                	push   %r12
 a79:	43                   	rex.XB
 a7a:	48 00 53 47          	rex.W add %dl,0x47(%rbx)
 a7e:	58                   	pop    %rax
 a7f:	5f                   	pop    %rdi
 a80:	45 52                	rex.RB push %r10
 a82:	52                   	push   %rdx
 a83:	4f 52                	rex.WRXB push %r10
 a85:	5f                   	pop    %rdi
 a86:	4d                   	rex.WRB
 a87:	43 5f                	rex.XB pop %r15
 a89:	55                   	push   %rbp
 a8a:	53                   	push   %rbx
 a8b:	45                   	rex.RB
 a8c:	44 5f                	rex.R pop %rdi
 a8e:	55                   	push   %rbp
 a8f:	50                   	push   %rax
 a90:	00 67 5f             	add    %ah,0x5f(%rdi)
 a93:	65 63 61 6c          	movsxd %gs:0x6c(%rcx),%esp
 a97:	6c                   	insb   (%dx),%es:(%rdi)
 a98:	5f                   	pop    %rdi
 a99:	74 61                	je     afc <__ImageBase+0xafc>
 a9b:	62                   	(bad)  
 a9c:	6c                   	insb   (%dx),%es:(%rdi)
 a9d:	65 00 5f 74          	add    %bl,%gs:0x74(%rdi)
 aa1:	6d                   	insl   (%dx),%es:(%rdi)
 aa2:	70 5f                	jo     b03 <__ImageBase+0xb03>
 aa4:	6d                   	insl   (%dx),%es:(%rdi)
 aa5:	61                   	(bad)  
 aa6:	78 5f                	js     b07 <__ImageBase+0xb07>
 aa8:	6c                   	insb   (%dx),%es:(%rdi)
 aa9:	65 6e                	outsb  %gs:(%rsi),(%dx)
 aab:	00 53 47             	add    %dl,0x47(%rbx)
 aae:	58                   	pop    %rax
 aaf:	5f                   	pop    %rdi
 ab0:	45 52                	rex.RB push %r10
 ab2:	52                   	push   %rdx
 ab3:	4f 52                	rex.WRXB push %r10
 ab5:	5f                   	pop    %rdi
 ab6:	4d                   	rex.WRB
 ab7:	41                   	rex.B
 ab8:	43 5f                	rex.XB pop %r15
 aba:	4d                   	rex.WRB
 abb:	49 53                	rex.WB push %r11
 abd:	4d                   	rex.WRB
 abe:	41 54                	push   %r12
 ac0:	43                   	rex.XB
 ac1:	48 00 53 47          	rex.W add %dl,0x47(%rbx)
 ac5:	58                   	pop    %rax
 ac6:	5f                   	pop    %rdi
 ac7:	45 52                	rex.RB push %r10
 ac9:	52                   	push   %rdx
 aca:	4f 52                	rex.WRXB push %r10
 acc:	5f                   	pop    %rdi
 acd:	4e                   	rex.WRX
 ace:	45 54                	rex.RB push %r12
 ad0:	57                   	push   %rdi
 ad1:	4f 52                	rex.WRXB push %r10
 ad3:	4b 5f                	rex.WXB pop %r15
 ad5:	46                   	rex.RX
 ad6:	41                   	rex.B
 ad7:	49                   	rex.WB
 ad8:	4c 55                	rex.WR push %rbp
 ada:	52                   	push   %rdx
 adb:	45 00 53 47          	add    %r10b,0x47(%r11)
 adf:	58                   	pop    %rax
 ae0:	5f                   	pop    %rdi
 ae1:	45 52                	rex.RB push %r10
 ae3:	52                   	push   %rdx
 ae4:	4f 52                	rex.WRXB push %r10
 ae6:	5f                   	pop    %rdi
 ae7:	4e                   	rex.WRX
 ae8:	44                   	rex.R
 ae9:	45                   	rex.RB
 aea:	42 55                	rex.X push %rbp
 aec:	47 5f                	rex.RXB pop %r15
 aee:	45                   	rex.RB
 aef:	4e                   	rex.WRX
 af0:	43                   	rex.XB
 af1:	4c                   	rex.WR
 af2:	41 56                	push   %r14
 af4:	45 00 6d 65          	add    %r13b,0x65(%r13)
 af8:	6d                   	insl   (%dx),%es:(%rdi)
 af9:	73 65                	jae    b60 <__ImageBase+0xb60>
 afb:	74 00                	je     afd <__ImageBase+0xafd>
 afd:	53                   	push   %rbx
 afe:	47 58                	rex.RXB pop %r8
 b00:	5f                   	pop    %rdi
 b01:	45 52                	rex.RB push %r10
 b03:	52                   	push   %rdx
 b04:	4f 52                	rex.WRXB push %r10
 b06:	5f                   	pop    %rdi
 b07:	53                   	push   %rbx
 b08:	54                   	push   %rsp
 b09:	41                   	rex.B
 b0a:	43                   	rex.XB
 b0b:	4b 5f                	rex.WXB pop %r15
 b0d:	4f 56                	rex.WRXB push %r14
 b0f:	45 52                	rex.RB push %r10
 b11:	52                   	push   %rdx
 b12:	55                   	push   %rbp
 b13:	4e 00 73 74          	rex.WRX add %r14b,0x74(%rbx)
 b17:	61                   	(bad)  
 b18:	74 75                	je     b8f <__ImageBase+0xb8f>
 b1a:	73 00                	jae    b1c <__ImageBase+0xb1c>
 b1c:	73 67                	jae    b85 <__ImageBase+0xb85>
 b1e:	78 5f                	js     b7f <__ImageBase+0xb7f>
 b20:	6f                   	outsl  %ds:(%rsi),(%dx)
 b21:	63 61 6c             	movsxd 0x6c(%rcx),%esp
 b24:	6c                   	insb   (%dx),%es:(%rdi)
 b25:	6f                   	outsl  %ds:(%rsi),(%dx)
 b26:	63 00                	movsxd (%rax),%eax
 b28:	53                   	push   %rbx
 b29:	47 58                	rex.RXB pop %r8
 b2b:	5f                   	pop    %rdi
 b2c:	45 52                	rex.RB push %r10
 b2e:	52                   	push   %rdx
 b2f:	4f 52                	rex.WRXB push %r10
 b31:	5f                   	pop    %rdi
 b32:	49                   	rex.WB
 b33:	4e 56                	rex.WRX push %rsi
 b35:	41                   	rex.B
 b36:	4c                   	rex.WR
 b37:	49                   	rex.WB
 b38:	44 5f                	rex.R pop %rdi
 b3a:	41 54                	push   %r12
 b3c:	54                   	push   %rsp
 b3d:	5f                   	pop    %rdi
 b3e:	4b                   	rex.WXB
 b3f:	45 59                	rex.RB pop %r9
 b41:	5f                   	pop    %rdi
 b42:	43                   	rex.XB
 b43:	45 52                	rex.RB push %r10
 b45:	54                   	push   %rsp
 b46:	5f                   	pop    %rdi
 b47:	44                   	rex.R
 b48:	41 54                	push   %r12
 b4a:	41 00 6f 63          	add    %bpl,0x63(%r15)
 b4e:	61                   	(bad)  
 b4f:	6c                   	insb   (%dx),%es:(%rdi)
 b50:	6c                   	insb   (%dx),%es:(%rdi)
 b51:	5f                   	pop    %rdi
 b52:	70 72                	jo     bc6 <__ImageBase+0xbc6>
 b54:	69 6e 74 00 53 47 58 	imul   $0x58475300,0x74(%rsi),%ebp
 b5b:	5f                   	pop    %rdi
 b5c:	45 52                	rex.RB push %r10
 b5e:	52                   	push   %rdx
 b5f:	4f 52                	rex.WRXB push %r10
 b61:	5f                   	pop    %rdi
 b62:	55                   	push   %rbp
 b63:	4e 53                	rex.WRX push %rbx
 b65:	55                   	push   %rbp
 b66:	50                   	push   %rax
 b67:	50                   	push   %rax
 b68:	4f 52                	rex.WRXB push %r10
 b6a:	54                   	push   %rsp
 b6b:	45                   	rex.RB
 b6c:	44 5f                	rex.R pop %rdi
 b6e:	41 54                	push   %r12
 b70:	54                   	push   %rsp
 b71:	5f                   	pop    %rdi
 b72:	4b                   	rex.WXB
 b73:	45 59                	rex.RB pop %r9
 b75:	5f                   	pop    %rdi
 b76:	49                   	rex.WB
 b77:	44 00 6e 72          	add    %r13b,0x72(%rsi)
 b7b:	5f                   	pop    %rdi
 b7c:	6f                   	outsl  %ds:(%rsi),(%dx)
 b7d:	63 61 6c             	movsxd 0x6c(%rcx),%esp
 b80:	6c                   	insb   (%dx),%es:(%rdi)
 b81:	00 53 47             	add    %dl,0x47(%rbx)
 b84:	58                   	pop    %rax
 b85:	5f                   	pop    %rdi
 b86:	45 52                	rex.RB push %r10
 b88:	52                   	push   %rdx
 b89:	4f 52                	rex.WRXB push %r10
 b8b:	5f                   	pop    %rdi
 b8c:	41 54                	push   %r12
 b8e:	54                   	push   %rsp
 b8f:	5f                   	pop    %rdi
 b90:	4b                   	rex.WXB
 b91:	45 59                	rex.RB pop %r9
 b93:	5f                   	pop    %rdi
 b94:	43                   	rex.XB
 b95:	45 52                	rex.RB push %r10
 b97:	54                   	push   %rsp
 b98:	49                   	rex.WB
 b99:	46                   	rex.RX
 b9a:	49                   	rex.WB
 b9b:	43                   	rex.XB
 b9c:	41 54                	push   %r12
 b9e:	49                   	rex.WB
 b9f:	4f                   	rex.WRXB
 ba0:	4e 5f                	rex.WRX pop %rdi
 ba2:	46                   	rex.RX
 ba3:	41                   	rex.B
 ba4:	49                   	rex.WB
 ba5:	4c 55                	rex.WR push %rbp
 ba7:	52                   	push   %rdx
 ba8:	45 00 53 47          	add    %r10b,0x47(%r11)
 bac:	58                   	pop    %rax
 bad:	5f                   	pop    %rdi
 bae:	45 52                	rex.RB push %r10
 bb0:	52                   	push   %rdx
 bb1:	4f 52                	rex.WRXB push %r10
 bb3:	5f                   	pop    %rdi
 bb4:	55                   	push   %rbp
 bb5:	50                   	push   %rax
 bb6:	44                   	rex.R
 bb7:	41 54                	push   %r12
 bb9:	45 5f                	rex.RB pop %r15
 bbb:	4e                   	rex.WRX
 bbc:	45                   	rex.RB
 bbd:	45                   	rex.RB
 bbe:	44                   	rex.R
 bbf:	45                   	rex.RB
 bc0:	44 00 5f 69          	add    %r11b,0x69(%rdi)
 bc4:	6e                   	outsb  %ds:(%rsi),(%dx)
 bc5:	5f                   	pop    %rdi
 bc6:	69 6e 70 75 74 5f 70 	imul   $0x705f7475,0x70(%rsi),%ebp
 bcd:	6f                   	outsl  %ds:(%rsi),(%dx)
 bce:	69 6e 74 65 72 00 53 	imul   $0x53007265,0x74(%rsi),%ebp
 bd5:	47 58                	rex.RXB pop %r8
 bd7:	5f                   	pop    %rdi
 bd8:	45 52                	rex.RB push %r10
 bda:	52                   	push   %rdx
 bdb:	4f 52                	rex.WRXB push %r10
 bdd:	5f                   	pop    %rdi
 bde:	4d                   	rex.WRB
 bdf:	45                   	rex.RB
 be0:	4d                   	rex.WRB
 be1:	4f 52                	rex.WRXB push %r10
 be3:	59                   	pop    %rcx
 be4:	5f                   	pop    %rdi
 be5:	4d                   	rex.WRB
 be6:	41 50                	push   %r8
 be8:	5f                   	pop    %rdi
 be9:	43                   	rex.XB
 bea:	4f                   	rex.WRXB
 beb:	4e                   	rex.WRX
 bec:	46                   	rex.RX
 bed:	4c                   	rex.WR
 bee:	49                   	rex.WB
 bef:	43 54                	rex.XB push %r12
 bf1:	00 6d 73             	add    %ch,0x73(%rbp)
 bf4:	5f                   	pop    %rdi
 bf5:	6f                   	outsl  %ds:(%rsi),(%dx)
 bf6:	75 74                	jne    c6c <__ImageBase+0xc6c>
 bf8:	5f                   	pop    %rdi
 bf9:	62                   	(bad)  
 bfa:	75 66                	jne    c62 <__ImageBase+0xc62>
 bfc:	00 53 47             	add    %dl,0x47(%rbx)
 bff:	58                   	pop    %rax
 c00:	5f                   	pop    %rdi
 c01:	45 52                	rex.RB push %r10
 c03:	52                   	push   %rdx
 c04:	4f 52                	rex.WRXB push %r10
 c06:	5f                   	pop    %rdi
 c07:	4f 55                	rex.WRXB push %r13
 c09:	54                   	push   %rsp
 c0a:	5f                   	pop    %rdi
 c0b:	4f                   	rex.WRXB
 c0c:	46 5f                	rex.RX pop %rdi
 c0e:	4d                   	rex.WRB
 c0f:	45                   	rex.RB
 c10:	4d                   	rex.WRB
 c11:	4f 52                	rex.WRXB push %r10
 c13:	59                   	pop    %rcx
 c14:	00 6d 73             	add    %ch,0x73(%rbp)
 c17:	5f                   	pop    %rdi
 c18:	6d                   	insl   (%dx),%es:(%rdi)
 c19:	61                   	(bad)  
 c1a:	78 5f                	js     c7b <__ImageBase+0xc7b>
 c1c:	6c                   	insb   (%dx),%es:(%rdi)
 c1d:	65 6e                	outsb  %gs:(%rsi),(%dx)
	...

Disassembly of section .debug_line_str:

0000000000000000 <.debug_line_str>:
   0:	65 6e                	outsb  %gs:(%rsi),(%dx)
   2:	63 6c 2e 63          	movsxd 0x63(%rsi,%rbp,1),%ebp
   6:	00 2f                	add    %ch,(%rdi)
   8:	68 6f 6d 65 2f       	push   $0x2f656d6f
   d:	6a 61                	push   $0x61
   f:	6e                   	outsb  %ds:(%rsi),(%dx)
  10:	2f                   	(bad)  
  11:	70 6f                	jo     82 <__ImageBase+0x82>
  13:	69 6e 74 65 72 73 73 	imul   $0x73737265,0x74(%rsi),%ebp
  1a:	2f                   	(bad)  
  1b:	45 6e                	rex.RB outsb %ds:(%rsi),(%dx)
  1d:	63 6c 61 76          	movsxd 0x76(%rcx,%riz,2),%ebp
  21:	65 00 2f             	add    %ch,%gs:(%rdi)
  24:	6f                   	outsl  %ds:(%rsi),(%dx)
  25:	70 74                	jo     9b <__ImageBase+0x9b>
  27:	2f                   	(bad)  
  28:	69 6e 74 65 6c 2f 73 	imul   $0x732f6c65,0x74(%rsi),%ebp
  2f:	67 78 73             	addr32 js a5 <__ImageBase+0xa5>
  32:	64 6b 2f 69          	imul   $0x69,%fs:(%rdi),%ebp
  36:	6e                   	outsb  %ds:(%rsi),(%dx)
  37:	63 6c 75 64          	movsxd 0x64(%rbp,%rsi,2),%ebp
  3b:	65 2f                	gs (bad) 
  3d:	74 6c                	je     ab <__ImageBase+0xab>
  3f:	69 62 63 2f 73 79 73 	imul   $0x7379732f,0x63(%rdx),%esp
  46:	00 2f                	add    %ch,(%rdi)
  48:	6f                   	outsl  %ds:(%rsi),(%dx)
  49:	70 74                	jo     bf <__ImageBase+0xbf>
  4b:	2f                   	(bad)  
  4c:	69 6e 74 65 6c 2f 73 	imul   $0x732f6c65,0x74(%rsi),%ebp
  53:	67 78 73             	addr32 js c9 <__ImageBase+0xc9>
  56:	64 6b 2f 69          	imul   $0x69,%fs:(%rdi),%ebp
  5a:	6e                   	outsb  %ds:(%rsi),(%dx)
  5b:	63 6c 75 64          	movsxd 0x64(%rbp,%rsi,2),%ebp
  5f:	65 2f                	gs (bad) 
  61:	74 6c                	je     cf <__ImageBase+0xcf>
  63:	69 62 63 00 2e 2e 00 	imul   $0x2e2e00,0x63(%rdx),%esp
  6a:	2f                   	(bad)  
  6b:	6f                   	outsl  %ds:(%rsi),(%dx)
  6c:	70 74                	jo     e2 <__ImageBase+0xe2>
  6e:	2f                   	(bad)  
  6f:	69 6e 74 65 6c 2f 73 	imul   $0x732f6c65,0x74(%rsi),%ebp
  76:	67 78 73             	addr32 js ec <__ImageBase+0xec>
  79:	64 6b 2f 69          	imul   $0x69,%fs:(%rdi),%ebp
  7d:	6e                   	outsb  %ds:(%rsi),(%dx)
  7e:	63 6c 75 64          	movsxd 0x64(%rbp,%rsi,2),%ebp
  82:	65 00 5f 74          	add    %bl,%gs:0x74(%rdi)
  86:	79 70                	jns    f8 <__ImageBase+0xf8>
  88:	65 73 2e             	gs jae b9 <__ImageBase+0xb9>
  8b:	68 00 73 74 64       	push   $0x64747300
  90:	69 6e 74 2e 68 00 73 	imul   $0x7300682e,0x74(%rsi),%ebp
  97:	74 72                	je     10b <__ImageBase+0x10b>
  99:	69 6e 67 2e 68 00 6d 	imul   $0x6d00682e,0x67(%rsi),%ebp
  a0:	79 73                	jns    115 <__ImageBase+0x115>
  a2:	74 72                	je     116 <__ImageBase+0x116>
  a4:	75 63                	jne    109 <__ImageBase+0x109>
  a6:	74 2e                	je     d6 <__ImageBase+0xd6>
  a8:	68 00 73 67 78       	push   $0x78677300
  ad:	5f                   	pop    %rdi
  ae:	74 72                	je     122 <__ImageBase+0x122>
  b0:	74 73                	je     125 <__ImageBase+0x125>
  b2:	2e 68 00 61 73 6d    	cs push $0x6d736100
  b8:	2e 53                	cs push %rbx
  ba:	00 65 6e             	add    %ah,0x6e(%rbp)
  bd:	63 6c 5f 74          	movsxd 0x74(%rdi,%rbx,2),%ebp
  c1:	2e 63 00             	cs movsxd (%rax),%eax
  c4:	77 63                	ja     129 <__ImageBase+0x129>
  c6:	68 61 72 2e 68       	push   $0x682e7261
  cb:	00 73 67             	add    %dh,0x67(%rbx)
  ce:	78 5f                	js     12f <__ImageBase+0x12f>
  d0:	65 72 72             	gs jb  145 <__ImageBase+0x145>
  d3:	6f                   	outsl  %ds:(%rsi),(%dx)
  d4:	72 2e                	jb     104 <__ImageBase+0x104>
  d6:	68 00 65 6e 63       	push   $0x636e6500
  db:	6c                   	insb   (%dx),%es:(%rdi)
  dc:	5f                   	pop    %rdi
  dd:	74 2e                	je     10d <__ImageBase+0x10d>
  df:	68 00 73 67 78       	push   $0x78677300
  e4:	5f                   	pop    %rdi
  e5:	65 64 67 65 72 38    	gs fs addr32 gs jb 123 <__ImageBase+0x123>
  eb:	72 2e                	jb     11b <__ImageBase+0x11b>
  ed:	68 00 73 74 64       	push   $0x64747300
  f2:	6c                   	insb   (%dx),%es:(%rdi)
  f3:	69 62 2e 68 00 6d 62 	imul   $0x626d0068,0x2e(%rdx),%esp
  fa:	75 73                	jne    16f <__ImageBase+0x16f>
  fc:	61                   	(bad)  
  fd:	66 65 63 72 74       	movsxd %gs:0x74(%rdx),%si
 102:	2e 68 00 73 67 78    	cs push $0x78677300
 108:	5f                   	pop    %rdi
 109:	6c                   	insb   (%dx),%es:(%rdi)
 10a:	66 65 6e             	data16 outsb %gs:(%rsi),(%dx)
 10d:	63 65 2e             	movsxd 0x2e(%rbp),%esp
 110:	68                   	.byte 0x68
	...

Disassembly of section .debug_loclists:

0000000000000000 <.debug_loclists>:
   0:	80 00 00             	addb   $0x0,(%rax)
   3:	00 05 00 08 00 00    	add    %al,0x800(%rip)        # 809 <__ImageBase+0x809>
   9:	00 00                	add    %al,(%rax)
   b:	00 00                	add    %al,(%rax)
   d:	00 00                	add    %al,(%rax)
   f:	00 04 a8             	add    %al,(%rax,%rbp,4)
  12:	01 cf                	add    %ecx,%edi
  14:	01 01                	add    %eax,(%rcx)
  16:	55                   	push   %rbp
  17:	04 cf                	add    $0xcf,%al
  19:	01 db                	add    %ebx,%ebx
  1b:	01 04 a3             	add    %eax,(%rbx,%riz,4)
  1e:	01 55 9f             	add    %edx,-0x61(%rbp)
  21:	00 00                	add    %al,(%rax)
  23:	00 00                	add    %al,(%rax)
  25:	00 00                	add    %al,(%rax)
  27:	00 04 a8             	add    %al,(%rax,%rbp,4)
  2a:	01 c3                	add    %eax,%ebx
  2c:	01 01                	add    %eax,(%rcx)
  2e:	54                   	push   %rsp
  2f:	04 c3                	add    $0xc3,%al
  31:	01 d3                	add    %edx,%ebx
  33:	01 01                	add    %eax,(%rcx)
  35:	52                   	push   %rdx
  36:	04 d3                	add    $0xd3,%al
  38:	01 db                	add    %ebx,%ebx
  3a:	01 04 a3             	add    %eax,(%rbx,%riz,4)
  3d:	01 54 9f 00          	add    %edx,0x0(%rdi,%rbx,4)
  41:	00 00                	add    %al,(%rax)
  43:	00 00                	add    %al,(%rax)
  45:	00 00                	add    %al,(%rax)
  47:	04 a8                	add    $0xa8,%al
  49:	01 b3 01 01 51 04    	add    %esi,0x4510101(%rbx)
  4f:	b3 01                	mov    $0x1,%bl
  51:	da 01                	fiaddl (%rcx)
  53:	01 53 04             	add    %edx,0x4(%rbx)
  56:	da 01                	fiaddl (%rcx)
  58:	db 01                	fildl  (%rcx)
  5a:	04 a3                	add    $0xa3,%al
  5c:	01 51 9f             	add    %edx,-0x61(%rcx)
  5f:	00 00                	add    %al,(%rax)
  61:	00 00                	add    %al,(%rax)
  63:	00 04 4b             	add    %al,(%rbx,%rcx,2)
  66:	6d                   	insl   (%dx),%es:(%rdi)
  67:	01 55 04             	add    %edx,0x4(%rbp)
  6a:	6d                   	insl   (%dx),%es:(%rdi)
  6b:	72 04                	jb     71 <__ImageBase+0x71>
  6d:	a3 01 55 9f 00 00 00 	movabs %eax,0x9f5501
  74:	00 00 
  76:	04 00                	add    $0x0,%al
  78:	12 01                	adc    (%rcx),%al
  7a:	55                   	push   %rbp
  7b:	04 12                	add    $0x12,%al
  7d:	4b 04 a3             	rex.WXB add $0xa3,%al
  80:	01 55 9f             	add    %edx,-0x61(%rbp)
  83:	00 17                	add    %dl,(%rdi)
  85:	03 00                	add    (%rax),%eax
  87:	00 05 00 08 00 00    	add    %al,0x800(%rip)        # 88d <__ImageBase+0x88d>
	...
  95:	00 04 c5 06 e7 06 01 	add    %al,0x106e706(,%rax,8)
  9c:	55                   	push   %rbp
  9d:	04 e7                	add    $0xe7,%al
  9f:	06                   	(bad)  
  a0:	d0 08                	rorb   (%rax)
  a2:	01 53 04             	add    %edx,0x4(%rbx)
  a5:	d0 08                	rorb   (%rax)
  a7:	d6                   	(bad)  
  a8:	08 04 a3             	or     %al,(%rbx,%riz,4)
  ab:	01 55 9f             	add    %edx,-0x61(%rbp)
  ae:	00 00                	add    %al,(%rax)
  b0:	00 04 c5 06 e7 06 01 	add    %al,0x106e706(,%rax,8)
  b7:	54                   	push   %rsp
  b8:	00 01                	add    %al,(%rcx)
  ba:	00 00                	add    %al,(%rax)
  bc:	00 00                	add    %al,(%rax)
  be:	01 04 c9             	add    %eax,(%rcx,%rcx,8)
  c1:	06                   	(bad)  
  c2:	c2 08 02             	ret    $0x208
  c5:	30 9f 04 c2 08 c6    	xor    %bl,-0x39f73dfc(%rdi)
  cb:	08 01                	or     %al,(%rcx)
  cd:	50                   	push   %rax
  ce:	04 c6                	add    $0xc6,%al
  d0:	08 cb                	or     %cl,%bl
  d2:	08 03                	or     %al,(%rbx)
  d4:	91                   	xchg   %eax,%ecx
  d5:	b4 7f                	mov    $0x7f,%ah
  d7:	00 01                	add    %al,(%rcx)
  d9:	00 00                	add    %al,(%rax)
  db:	01 01                	add    %eax,(%rcx)
  dd:	00 00                	add    %al,(%rax)
  df:	01 04 ec             	add    %eax,(%rsp,%rbp,8)
  e2:	06                   	(bad)  
  e3:	b9 07 02 30 9f       	mov    $0x9f300207,%ecx
  e8:	04 c8                	add    $0xc8,%al
  ea:	07                   	(bad)  
  eb:	c8 07 02 30          	enter  $0x207,$0x30
  ef:	9f                   	lahf   
  f0:	04 c8                	add    $0xc8,%al
  f2:	07                   	(bad)  
  f3:	cc                   	int3   
  f4:	07                   	(bad)  
  f5:	01 50 04             	add    %edx,0x4(%rax)
  f8:	cc                   	int3   
  f9:	07                   	(bad)  
  fa:	cb                   	lret   
  fb:	08 01                	or     %al,(%rcx)
  fd:	56                   	push   %rsi
  fe:	00 02                	add    %al,(%rdx)
	...
 108:	01 04 ec             	add    %eax,(%rsp,%rbp,8)
 10b:	06                   	(bad)  
 10c:	8a 07                	mov    (%rdi),%al
 10e:	02 40 9f             	add    -0x61(%rax),%al
 111:	04 94                	add    $0x94,%al
 113:	07                   	(bad)  
 114:	9b                   	fwait
 115:	07                   	(bad)  
 116:	02 40 9f             	add    -0x61(%rax),%al
 119:	04 9b                	add    $0x9b,%al
 11b:	07                   	(bad)  
 11c:	a9 07 01 55 04       	test   $0x4550107,%eax
 121:	a9 07 b9 07 03       	test   $0x307b907,%eax
 126:	7d 10                	jge    138 <__ImageBase+0x138>
 128:	9f                   	lahf   
 129:	04 c8                	add    $0xc8,%al
 12b:	07                   	(bad)  
 12c:	d1 07                	roll   (%rdi)
 12e:	03 7d 10             	add    0x10(%rbp),%edi
 131:	9f                   	lahf   
 132:	00 00                	add    %al,(%rax)
 134:	00 00                	add    %al,(%rax)
 136:	00 00                	add    %al,(%rax)
 138:	00 04 dc             	add    %al,(%rsp,%rbx,8)
 13b:	04 f8                	add    $0xf8,%al
 13d:	04 01                	add    $0x1,%al
 13f:	55                   	push   %rbp
 140:	04 f8                	add    $0xf8,%al
 142:	04 bf                	add    $0xbf,%al
 144:	06                   	(bad)  
 145:	01 53 04             	add    %edx,0x4(%rbx)
 148:	bf 06 c5 06 04       	mov    $0x406c506,%edi
 14d:	a3 01 55 9f 00 01 00 	movabs %eax,0x1009f5501
 154:	00 00 
 156:	00 01                	add    %al,(%rcx)
 158:	04 e0                	add    $0xe0,%al
 15a:	04 b1                	add    $0xb1,%al
 15c:	06                   	(bad)  
 15d:	02 30                	add    (%rax),%dh
 15f:	9f                   	lahf   
 160:	04 b1                	add    $0xb1,%al
 162:	06                   	(bad)  
 163:	b5 06                	mov    $0x6,%ch
 165:	01 50 04             	add    %edx,0x4(%rax)
 168:	b5 06                	mov    $0x6,%ch
 16a:	ba 06 03 91 bc       	mov    $0xbc910306,%edx
 16f:	7f 00                	jg     171 <__ImageBase+0x171>
 171:	01 00                	add    %eax,(%rax)
 173:	00 01                	add    %al,(%rcx)
 175:	01 00                	add    %eax,(%rax)
 177:	00 01                	add    %al,(%rcx)
 179:	04 fd                	add    $0xfd,%al
 17b:	04 ca                	add    $0xca,%al
 17d:	05 02 30 9f 04       	add    $0x49f3002,%eax
 182:	d6                   	(bad)  
 183:	05 d6 05 02 30       	add    $0x300205d6,%eax
 188:	9f                   	lahf   
 189:	04 d6                	add    $0xd6,%al
 18b:	05 da 05 01 50       	add    $0x500105da,%eax
 190:	04 da                	add    $0xda,%al
 192:	05 ba 06 01 5c       	add    $0x5c0106ba,%eax
 197:	00 02                	add    %al,(%rdx)
	...
 1a1:	01 04 fd 04 9b 05 02 	add    %eax,0x2059b04(,%rdi,8)
 1a8:	38 9f 04 a5 05 ac    	cmp    %bl,-0x53fa5afc(%rdi)
 1ae:	05 02 38 9f 04       	add    $0x49f3802,%eax
 1b3:	ac                   	lods   %ds:(%rsi),%al
 1b4:	05 ba 05 01 55       	add    $0x550105ba,%eax
 1b9:	04 ba                	add    $0xba,%al
 1bb:	05 ca 05 03 7d       	add    $0x7d0305ca,%eax
 1c0:	08 9f 04 d6 05 df    	or     %bl,-0x20fa29fc(%rdi)
 1c6:	05 03 7d 08 9f       	add    $0x9f087d03,%eax
	...
 1d7:	00 00                	add    %al,(%rax)
 1d9:	00 04 00             	add    %al,(%rax,%rax,1)
 1dc:	13 01                	adc    (%rcx),%eax
 1de:	55                   	push   %rbp
 1df:	04 13                	add    $0x13,%al
 1e1:	1e                   	(bad)  
 1e2:	04 a3                	add    $0xa3,%al
 1e4:	01 55 9f             	add    %edx,-0x61(%rbp)
 1e7:	04 1e                	add    $0x1e,%al
 1e9:	2a 01                	sub    (%rcx),%al
 1eb:	55                   	push   %rbp
 1ec:	04 2a                	add    $0x2a,%al
 1ee:	75 01                	jne    1f1 <__ImageBase+0x1f1>
 1f0:	53                   	push   %rbx
 1f1:	04 75                	add    $0x75,%al
 1f3:	77 04                	ja     1f9 <__ImageBase+0x1f9>
 1f5:	a3 01 55 9f 04 77 99 	movabs %eax,0x1019977049f5501
 1fc:	01 01 
 1fe:	53                   	push   %rbx
 1ff:	04 99                	add    $0x99,%al
 201:	01 ef                	add    %ebp,%edi
 203:	01 04 a3             	add    %eax,(%rbx,%riz,4)
 206:	01 55 9f             	add    %edx,-0x61(%rbp)
 209:	00 01                	add    %al,(%rcx)
 20b:	00 00                	add    %al,(%rax)
 20d:	00 00                	add    %al,(%rax)
 20f:	00 00                	add    %al,(%rax)
 211:	00 04 32             	add    %al,(%rdx,%rsi,1)
 214:	75 01                	jne    217 <__ImageBase+0x217>
 216:	53                   	push   %rbx
 217:	04 75                	add    $0x75,%al
 219:	77 04                	ja     21f <__ImageBase+0x21f>
 21b:	a3 01 55 9f 04 77 99 	movabs %eax,0x1019977049f5501
 222:	01 01 
 224:	53                   	push   %rbx
 225:	04 99                	add    $0x99,%al
 227:	01 e1                	add    %esp,%ecx
 229:	01 04 a3             	add    %eax,(%rbx,%riz,4)
 22c:	01 55 9f             	add    %edx,-0x61(%rbp)
 22f:	00 01                	add    %al,(%rcx)
 231:	00 00                	add    %al,(%rax)
 233:	00 04 57             	add    %al,(%rdi,%rdx,2)
 236:	dc 01                	faddl  (%rcx)
 238:	02 30                	add    (%rax),%dh
 23a:	9f                   	lahf   
 23b:	04 dc                	add    $0xdc,%al
 23d:	01 e1                	add    %esp,%ecx
 23f:	01 06                	add    %eax,(%rsi)
 241:	7c 00                	jl     243 <__ImageBase+0x243>
 243:	08 ff                	or     %bh,%bh
 245:	1a 9f 00 00 00 04    	sbb    0x4000000(%rdi),%bl
 24b:	5c                   	pop    %rsp
 24c:	e1 01                	loope  24f <__ImageBase+0x24f>
 24e:	01 5d 00             	add    %ebx,0x0(%rbp)
 251:	00 00                	add    %al,(%rax)
 253:	04 61                	add    $0x61,%al
 255:	e1 01                	loope  258 <__ImageBase+0x258>
 257:	01 56 00             	add    %edx,0x0(%rsi)
 25a:	01 00                	add    %eax,(%rax)
 25c:	04 61                	add    $0x61,%al
 25e:	e1 01                	loope  261 <__ImageBase+0x261>
 260:	01 56 00             	add    %edx,0x0(%rsi)
 263:	02 00                	add    (%rax),%al
 265:	00 00                	add    %al,(%rax)
 267:	00 00                	add    %al,(%rax)
 269:	04 61                	add    $0x61,%al
 26b:	99                   	cltd   
 26c:	01 02                	add    %eax,(%rdx)
 26e:	30 9f 04 99 01 a0    	xor    %bl,-0x5ffe66fc(%rdi)
 274:	01 01                	add    %eax,(%rcx)
 276:	50                   	push   %rax
 277:	04 a0                	add    $0xa0,%al
 279:	01 e1                	add    %esp,%ecx
 27b:	01 01                	add    %eax,(%rcx)
 27d:	53                   	push   %rbx
 27e:	00 00                	add    %al,(%rax)
 280:	00 00                	add    %al,(%rax)
 282:	00 00                	add    %al,(%rax)
 284:	00 04 ef             	add    %al,(%rdi,%rbp,8)
 287:	01 fd                	add    %edi,%ebp
 289:	01 01                	add    %eax,(%rcx)
 28b:	55                   	push   %rbp
 28c:	04 fd                	add    $0xfd,%al
 28e:	01 82 02 04 a3 01    	add    %eax,0x1a30402(%rdx)
 294:	55                   	push   %rbp
 295:	9f                   	lahf   
 296:	04 82                	add    $0x82,%al
 298:	02 88 02 01 55 00    	add    0x550102(%rax),%cl
	...
 2aa:	00 00                	add    %al,(%rax)
 2ac:	04 88                	add    $0x88,%al
 2ae:	02 99 02 01 55 04    	add    0x4550102(%rcx),%bl
 2b4:	99                   	cltd   
 2b5:	02 a3 02 04 a3 01    	add    0x1a30402(%rbx),%ah
 2bb:	55                   	push   %rbp
 2bc:	9f                   	lahf   
 2bd:	04 a3                	add    $0xa3,%al
 2bf:	02 af 02 01 55 04    	add    0x4550102(%rdi),%ch
 2c5:	af                   	scas   %es:(%rdi),%eax
 2c6:	02 ea                	add    %dl,%ch
 2c8:	02 01                	add    (%rcx),%al
 2ca:	53                   	push   %rbx
 2cb:	04 ea                	add    $0xea,%al
 2cd:	02 ec                	add    %ah,%ch
 2cf:	02 04 a3             	add    (%rbx,%riz,4),%al
 2d2:	01 55 9f             	add    %edx,-0x61(%rbp)
 2d5:	04 ec                	add    $0xec,%al
 2d7:	02 92 03 01 53 04    	add    0x4530103(%rdx),%dl
 2dd:	92                   	xchg   %eax,%edx
 2de:	03 f6                	add    %esi,%esi
 2e0:	03 04 a3             	add    (%rbx,%riz,4),%eax
 2e3:	01 55 9f             	add    %edx,-0x61(%rbp)
 2e6:	00 01                	add    %al,(%rcx)
 2e8:	00 00                	add    %al,(%rax)
 2ea:	00 00                	add    %al,(%rax)
 2ec:	00 00                	add    %al,(%rax)
 2ee:	00 04 b7             	add    %al,(%rdi,%rsi,4)
 2f1:	02 ea                	add    %dl,%ch
 2f3:	02 01                	add    (%rcx),%al
 2f5:	53                   	push   %rbx
 2f6:	04 ea                	add    $0xea,%al
 2f8:	02 ec                	add    %ah,%ch
 2fa:	02 04 a3             	add    (%rbx,%riz,4),%al
 2fd:	01 55 9f             	add    %edx,-0x61(%rbp)
 300:	04 ec                	add    $0xec,%al
 302:	02 92 03 01 53 04    	add    0x4530103(%rdx),%dl
 308:	92                   	xchg   %eax,%edx
 309:	03 eb                	add    %ebx,%ebp
 30b:	03 04 a3             	add    (%rbx,%riz,4),%eax
 30e:	01 55 9f             	add    %edx,-0x61(%rbp)
 311:	00 01                	add    %al,(%rcx)
 313:	00 00                	add    %al,(%rax)
 315:	00 04 db             	add    %al,(%rbx,%rbx,8)
 318:	02 e3                	add    %bl,%ah
 31a:	03 02                	add    (%rdx),%eax
 31c:	30 9f 04 e3 03 eb    	xor    %bl,-0x14fc1cfc(%rdi)
 322:	03 01                	add    (%rcx),%eax
 324:	56                   	push   %rsi
 325:	00 00                	add    %al,(%rax)
 327:	00 04 e0             	add    %al,(%rax,%riz,8)
 32a:	02 eb                	add    %bl,%ch
 32c:	03 01                	add    (%rcx),%eax
 32e:	5c                   	pop    %rsp
 32f:	00 01                	add    %al,(%rcx)
 331:	00 04 e0             	add    %al,(%rax,%riz,8)
 334:	02 eb                	add    %bl,%ch
 336:	03 02                	add    (%rdx),%eax
 338:	40 9f                	rex lahf 
 33a:	00 02                	add    %al,(%rdx)
 33c:	00 00                	add    %al,(%rax)
 33e:	00 00                	add    %al,(%rax)
 340:	00 04 e0             	add    %al,(%rax,%riz,8)
 343:	02 92 03 02 30 9f    	add    -0x60cffdfd(%rdx),%dl
 349:	04 92                	add    $0x92,%al
 34b:	03 ab 03 01 50 04    	add    0x4500103(%rbx),%ebp
 351:	ab                   	stos   %eax,%es:(%rdi)
 352:	03 eb                	add    %ebx,%ebp
 354:	03 01                	add    (%rcx),%eax
 356:	53                   	push   %rbx
	...
 35f:	00 04 f6             	add    %al,(%rsi,%rsi,8)
 362:	03 90 04 01 55 04    	add    0x4550104(%rax),%edx
 368:	90                   	nop
 369:	04 d5                	add    $0xd5,%al
 36b:	04 01                	add    $0x1,%al
 36d:	53                   	push   %rbx
 36e:	04 d5                	add    $0xd5,%al
 370:	04 d6                	add    $0xd6,%al
 372:	04 04                	add    $0x4,%al
 374:	a3 01 55 9f 04 d6 04 	movabs %eax,0x4dc04d6049f5501
 37b:	dc 04 
 37d:	01 55 00             	add    %edx,0x0(%rbp)
 380:	00 00                	add    %al,(%rax)
 382:	04 9c                	add    $0x9c,%al
 384:	04 d0                	add    $0xd0,%al
 386:	04 01                	add    $0x1,%al
 388:	53                   	push   %rbx
 389:	00 01                	add    %al,(%rcx)
 38b:	00 04 9f             	add    %al,(%rdi,%rbx,4)
 38e:	04 d0                	add    $0xd0,%al
 390:	04 01                	add    $0x1,%al
 392:	53                   	push   %rbx
 393:	00 01                	add    %al,(%rcx)
 395:	00 04 c1             	add    %al,(%rcx,%rax,8)
 398:	04 d0                	add    $0xd0,%al
 39a:	04 02                	add    $0x2,%al
 39c:	30                   	.byte 0x30
 39d:	9f                   	lahf   
	...
