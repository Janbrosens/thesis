
Enclave/encl.so:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000318 <.interp>:
 318:	2f                   	(bad)  
 319:	6c                   	insb   (%dx),%es:(%rdi)
 31a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 321:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 326:	78 2d                	js     355 <__ImageBase+0x355>
 328:	78 38                	js     362 <__ImageBase+0x362>
 32a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 330:	6f                   	outsl  %ds:(%rsi),(%dx)
 331:	2e 32 00             	cs xor (%rax),%al

Disassembly of section .note.gnu.property:

0000000000000338 <.note.gnu.property>:
 338:	04 00                	add    $0x0,%al
 33a:	00 00                	add    %al,(%rax)
 33c:	20 00                	and    %al,(%rax)
 33e:	00 00                	add    %al,(%rax)
 340:	05 00 00 00 47       	add    $0x47000000,%eax
 345:	4e 55                	rex.WRX push %rbp
 347:	00 01                	add    %al,(%rcx)
 349:	00 01                	add    %al,(%rcx)
 34b:	c0 04 00 00          	rolb   $0x0,(%rax,%rax,1)
 34f:	00 3b                	add    %bh,(%rbx)
 351:	00 00                	add    %al,(%rax)
 353:	00 00                	add    %al,(%rax)
 355:	00 00                	add    %al,(%rax)
 357:	00 02                	add    %al,(%rdx)
 359:	00 01                	add    %al,(%rcx)
 35b:	c0 04 00 00          	rolb   $0x0,(%rax,%rax,1)
 35f:	00 0d 00 00 00 00    	add    %cl,0x0(%rip)        # 365 <__ImageBase+0x365>
 365:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000000368 <.note.gnu.build-id>:
 368:	04 00                	add    $0x0,%al
 36a:	00 00                	add    %al,(%rax)
 36c:	14 00                	adc    $0x0,%al
 36e:	00 00                	add    %al,(%rax)
 370:	03 00                	add    (%rax),%eax
 372:	00 00                	add    %al,(%rax)
 374:	47                   	rex.RXB
 375:	4e 55                	rex.WRX push %rbp
 377:	00 a8 2a 51 5b d6    	add    %ch,-0x29a4aed6(%rax)
 37d:	1f                   	(bad)  
 37e:	cd 7b                	int    $0x7b
 380:	e9 a3 26 51 f2       	jmp    fffffffff2512a28 <_end+0xfffffffff24e7a18>
 385:	b3 be                	mov    $0xbe,%bl
 387:	40 fd                	rex std 
 389:	6d                   	insl   (%dx),%es:(%rdi)
 38a:	a3                   	.byte 0xa3
 38b:	4d                   	rex.WRB

Disassembly of section .gnu.hash:

0000000000000390 <.gnu.hash>:
 390:	11 00                	adc    %eax,(%rax)
 392:	00 00                	add    %al,(%rax)
 394:	03 00                	add    (%rax),%eax
 396:	00 00                	add    %al,(%rax)
 398:	04 00                	add    $0x0,%al
 39a:	00 00                	add    %al,(%rax)
 39c:	08 00                	or     %al,(%rax)
 39e:	00 00                	add    %al,(%rax)
 3a0:	02 00                	add    (%rax),%al
 3a2:	12 00                	adc    (%rax),%al
 3a4:	08 12                	or     %dl,(%rdx)
 3a6:	12 02                	adc    (%rdx),%al
 3a8:	28 10                	sub    %dl,(%rax)
 3aa:	04 e1                	add    $0xe1,%al
 3ac:	00 80 63 59 42 41    	add    %al,0x41425963(%rax)
 3b2:	81 18 4b 01 40 0b    	sbbl   $0xb40014b,(%rax)
 3b8:	84 31                	test   %dh,(%rcx)
 3ba:	17                   	(bad)  
 3bb:	91                   	xchg   %eax,%ecx
 3bc:	40 00 16             	rex add %dl,(%rsi)
 3bf:	30 03                	xor    %al,(%rbx)
 3c1:	00 00                	add    %al,(%rax)
 3c3:	00 06                	add    %al,(%rsi)
 3c5:	00 00                	add    %al,(%rax)
 3c7:	00 0a                	add    %cl,(%rdx)
 3c9:	00 00                	add    %al,(%rax)
 3cb:	00 0c 00             	add    %cl,(%rax,%rax,1)
 3ce:	00 00                	add    %al,(%rax)
 3d0:	0f 00 00             	sldt   (%rax)
 3d3:	00 11                	add    %dl,(%rcx)
 3d5:	00 00                	add    %al,(%rax)
 3d7:	00 13                	add    %dl,(%rbx)
 3d9:	00 00                	add    %al,(%rax)
 3db:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 3e1 <__ImageBase+0x3e1>
 3e1:	00 00                	add    %al,(%rax)
 3e3:	00 19                	add    %bl,(%rcx)
 3e5:	00 00                	add    %al,(%rax)
 3e7:	00 1c 00             	add    %bl,(%rax,%rax,1)
 3ea:	00 00                	add    %al,(%rax)
 3ec:	00 00                	add    %al,(%rax)
 3ee:	00 00                	add    %al,(%rax)
 3f0:	1d 00 00 00 21       	sbb    $0x21000000,%eax
	...
 3fd:	00 00                	add    %al,(%rax)
 3ff:	00 24 00             	add    %ah,(%rax,%rax,1)
 402:	00 00                	add    %al,(%rax)
 404:	6e                   	outsb  %ds:(%rsi),(%dx)
 405:	4c 0d 59 de 72 46    	rex.WR or $0x4672de59,%rax
 40b:	9a                   	(bad)  
 40c:	8f 88 a1 be          	(bad)
 410:	58                   	pop    %rax
 411:	5d                   	pop    %rbp
 412:	85 1b                	test   %ebx,(%rbx)
 414:	9a                   	(bad)  
 415:	5c                   	pop    %rsp
 416:	a0 ac 70 de 02 f2 f1 	movabs 0xac94f1f202de70ac,%al
 41d:	94 ac 
 41f:	67 00 a9 9e da fd 8d 	add    %ch,-0x72022562(%ecx)
 426:	23 fd                	and    %ebp,%edi
 428:	e6 42                	out    %al,$0x42
 42a:	5b                   	pop    %rbx
 42b:	6d                   	insl   (%dx),%es:(%rdi)
 42c:	d8 71 58             	fdivs  0x58(%rcx)
 42f:	1c 75                	sbb    $0x75,%al
 431:	36 20 04 ba          	ss and %al,(%rdx,%rdi,4)
 435:	e3 92                	jrcxz  3c9 <__ImageBase+0x3c9>
 437:	7c 97                	jl     3d0 <__ImageBase+0x3d0>
 439:	81 42 a8 7c b0 3e 88 	addl   $0x883eb07c,-0x58(%rdx)
 440:	23 71 91             	and    -0x6f(%rcx),%esi
 443:	45 d0 0c 74          	rex.RB rorb (%r12,%rsi,2)
 447:	e7 b7                	out    %eax,$0xb7
 449:	39 0d 80 f4 7c 90    	cmp    %ecx,-0x6f830b80(%rip)        # ffffffff907cf8cf <_end+0xffffffff907a48bf>
 44f:	5a                   	pop    %rdx
 450:	b8 a1 15 31 42       	mov    $0x423115a1,%eax
 455:	45 d5                	rex.RB (bad) 
 457:	ec                   	in     (%dx),%al
 458:	01 23                	add    %esp,(%rbx)
 45a:	f9                   	stc    
 45b:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
 45c:	9a                   	(bad)  
 45d:	28 c1                	sub    %al,%cl
 45f:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
 460:	90                   	nop
 461:	c6                   	(bad)  
 462:	fa                   	cli    
 463:	fa                   	cli    
 464:	6f                   	outsl  %ds:(%rsi),(%dx)
 465:	bb 9e 0c 39 54       	mov    $0x54390c9e,%ebx
 46a:	bc 04 5e f8 8c       	mov    $0x8cf85e04,%esp
 46f:	8d 10                	lea    (%rax),%edx
 471:	b4 59                	mov    $0x59,%ah
 473:	31 a0 a6 66 1a dd    	xor    %esp,-0x22e5995a(%rax)
 479:	df 50 a9             	fists  -0x57(%rax)
 47c:	52                   	push   %rdx
 47d:	3e e3 cb             	jrcxz,pt 44b <__ImageBase+0x44b>
 480:	2c 6c                	sub    $0x6c,%al
 482:	67 40 c9             	addr32 rex leave 
 485:	91                   	xchg   %eax,%ecx
 486:	b6 fb                	mov    $0xfb,%dh
 488:	c7                   	(bad)  
 489:	d2                   	.byte 0xd2
 48a:	91                   	xchg   %eax,%ecx
 48b:	c1                   	.byte 0xc1

Disassembly of section .dynsym:

0000000000000490 <.dynsym>:
	...
 4a8:	db 00                	fildl  (%rax)
 4aa:	00 00                	add    %al,(%rax)
 4ac:	20 00                	and    %al,(%rax)
	...
 4be:	00 00                	add    %al,(%rax)
 4c0:	d8 01                	fadds  (%rcx)
 4c2:	00 00                	add    %al,(%rax)
 4c4:	20 00                	and    %al,(%rax)
	...
 4d6:	00 00                	add    %al,(%rax)
 4d8:	50                   	push   %rax
 4d9:	00 00                	add    %al,(%rax)
 4db:	00 21                	add    %ah,(%rcx)
 4dd:	00 11                	add    %dl,(%rcx)
 4df:	00 08                	add    %cl,(%rax)
 4e1:	7e 01                	jle    4e4 <__ImageBase+0x4e4>
 4e3:	00 00                	add    %al,(%rax)
 4e5:	00 00                	add    %al,(%rax)
 4e7:	00 08                	add    %cl,(%rax)
 4e9:	00 00                	add    %al,(%rax)
 4eb:	00 00                	add    %al,(%rax)
 4ed:	00 00                	add    %al,(%rax)
 4ef:	00 c7                	add    %al,%bh
 4f1:	00 00                	add    %al,(%rax)
 4f3:	00 12                	add    %dl,(%rdx)
 4f5:	00 0b                	add    %cl,(%rbx)
 4f7:	00 f2                	add    %dh,%dl
 4f9:	23 01                	and    (%rcx),%eax
	...
 507:	00 1a                	add    %bl,(%rdx)
 509:	01 00                	add    %eax,(%rax)
 50b:	00 12                	add    %dl,(%rdx)
 50d:	00 0a                	add    %cl,(%rdx)
 50f:	00 90 0f 01 00 00    	add    %dl,0x10f(%rax)
 515:	00 00                	add    %al,(%rax)
 517:	00 54 00 00          	add    %dl,0x0(%rax,%rax,1)
 51b:	00 00                	add    %al,(%rax)
 51d:	00 00                	add    %al,(%rax)
 51f:	00 8d 01 00 00 12    	add    %cl,0x12000001(%rbp)
 525:	00 0a                	add    %cl,(%rdx)
 527:	00 b2 0d 01 00 00    	add    %dh,0x10d(%rdx)
	...
 535:	00 00                	add    %al,(%rax)
 537:	00 18                	add    %bl,(%rax)
 539:	00 00                	add    %al,(%rax)
 53b:	00 22                	add    %ah,(%rdx)
 53d:	00 0a                	add    %cl,(%rdx)
 53f:	00 3f                	add    %bh,(%rdi)
 541:	0e                   	(bad)  
 542:	01 00                	add    %eax,(%rax)
	...
 550:	21 00                	and    %eax,(%rax)
 552:	00 00                	add    %al,(%rax)
 554:	12 00                	adc    (%rax),%al
 556:	0a 00                	or     (%rax),%al
 558:	e0 c5                	loopne 51f <__ImageBase+0x51f>
	...
 566:	00 00                	add    %al,(%rax)
 568:	90                   	nop
 569:	00 00                	add    %al,(%rax)
 56b:	00 12                	add    %dl,(%rdx)
 56d:	00 0b                	add    %cl,(%rbx)
 56f:	00 fb                	add    %bh,%bl
 571:	24 01                	and    $0x1,%al
	...
 57f:	00 0c 00             	add    %cl,(%rax,%rax,1)
 582:	00 00                	add    %al,(%rax)
 584:	10 00                	adc    %al,(%rax)
 586:	f1                   	icebp  
 587:	ff 00                	incl   (%rax)
	...
 595:	00 00                	add    %al,(%rax)
 597:	00 68 00             	add    %ch,0x0(%rax)
 59a:	00 00                	add    %al,(%rax)
 59c:	11 00                	adc    %eax,(%rax)
 59e:	14 00                	adc    $0x0,%al
 5a0:	e0 a0                	loopne 542 <__ImageBase+0x542>
 5a2:	01 00                	add    %eax,(%rax)
 5a4:	00 00                	add    %al,(%rax)
 5a6:	00 00                	add    %al,(%rax)
 5a8:	1d 00 00 00 00       	sbb    $0x0,%eax
 5ad:	00 00                	add    %al,(%rax)
 5af:	00 ec                	add    %ch,%ah
 5b1:	00 00                	add    %al,(%rax)
 5b3:	00 12                	add    %dl,(%rdx)
 5b5:	00 0a                	add    %cl,(%rdx)
 5b7:	00 80 0f 01 00 00    	add    %al,0x10f(%rax)
 5bd:	00 00                	add    %al,(%rax)
 5bf:	00 0a                	add    %cl,(%rdx)
 5c1:	00 00                	add    %al,(%rax)
 5c3:	00 00                	add    %al,(%rax)
 5c5:	00 00                	add    %al,(%rax)
 5c7:	00 23                	add    %ah,(%rbx)
 5c9:	01 00                	add    %eax,(%rax)
 5cb:	00 10                	add    %dl,(%rax)
 5cd:	00 16                	add    %dl,(%rsi)
 5cf:	00 60 a1             	add    %ah,-0x5f(%rax)
 5d2:	01 00                	add    %eax,(%rax)
	...
 5e0:	2f                   	(bad)  
 5e1:	01 00                	add    %eax,(%rax)
 5e3:	00 11                	add    %dl,(%rcx)
 5e5:	00 0d 00 80 31 01    	add    %cl,0x1318000(%rip)        # 13185eb <_end+0x12ed5db>
 5eb:	00 00                	add    %al,(%rax)
 5ed:	00 00                	add    %al,(%rax)
 5ef:	00 e0                	add    %ah,%al
 5f1:	06                   	(bad)  
 5f2:	00 00                	add    %al,(%rax)
 5f4:	00 00                	add    %al,(%rax)
 5f6:	00 00                	add    %al,(%rax)
 5f8:	6e                   	outsb  %ds:(%rsi),(%dx)
 5f9:	01 00                	add    %eax,(%rax)
 5fb:	00 10                	add    %dl,(%rax)
 5fd:	00 16                	add    %dl,(%rsi)
 5ff:	00 10                	add    %dl,(%rax)
 601:	b0 02                	mov    $0x2,%al
	...
 60f:	00 8c 01 00 00 22 00 	add    %cl,0x220000(%rcx,%rax,1)
 616:	0a 00                	or     (%rax),%al
 618:	b2 0d                	mov    $0xd,%dl
 61a:	01 00                	add    %eax,(%rax)
	...
 628:	19 00                	sbb    %eax,(%rax)
 62a:	00 00                	add    %al,(%rax)
 62c:	12 00                	adc    (%rax),%al
 62e:	0a 00                	or     (%rax),%al
 630:	3f                   	(bad)  
 631:	0e                   	(bad)  
 632:	01 00                	add    %eax,(%rax)
	...
 640:	b3 01                	mov    $0x1,%bl
 642:	00 00                	add    %al,(%rax)
 644:	10 00                	adc    %al,(%rax)
 646:	14 00                	adc    $0x0,%al
 648:	00 90 01 00 00 00    	add    %dl,0x1(%rax)
	...
 656:	00 00                	add    %al,(%rax)
 658:	01 00                	add    %eax,(%rax)
 65a:	00 00                	add    %al,(%rax)
 65c:	10 00                	adc    %al,(%rax)
 65e:	0a 00                	or     (%rax),%al
 660:	00 30                	add    %dh,(%rax)
	...
 66e:	00 00                	add    %al,(%rax)
 670:	3d 01 00 00 10       	cmp    $0x10000001,%eax
 675:	00 0b                	add    %cl,(%rbx)
 677:	00 b3 24 01 00 00    	add    %dh,0x124(%rbx)
	...
 685:	00 00                	add    %al,(%rax)
 687:	00 28                	add    %ch,(%rax)
 689:	00 00                	add    %al,(%rax)
 68b:	00 12                	add    %dl,(%rdx)
 68d:	00 0b                	add    %cl,(%rbx)
 68f:	00 5f 21             	add    %bl,0x21(%rdi)
 692:	01 00                	add    %eax,(%rax)
	...
 6a0:	f8                   	clc    
 6a1:	00 00                	add    %al,(%rax)
 6a3:	00 10                	add    %dl,(%rax)
 6a5:	00 0b                	add    %cl,(%rbx)
 6a7:	00 f7                	add    %dh,%bh
 6a9:	20 01                	and    %al,(%rcx)
	...
 6b7:	00 52 01             	add    %dl,0x1(%rdx)
 6ba:	00 00                	add    %al,(%rax)
 6bc:	10 00                	adc    %al,(%rax)
 6be:	15 00 48 a1 01       	adc    $0x1a14800,%eax
	...
 6cf:	00 73 01             	add    %dh,0x1(%rbx)
 6d2:	00 00                	add    %al,(%rax)
 6d4:	22 00                	and    (%rax),%al
 6d6:	0a 00                	or     (%rax),%al
 6d8:	50                   	push   %rax
 6d9:	0f 01 00             	sgdt   (%rax)
 6dc:	00 00                	add    %al,(%rax)
 6de:	00 00                	add    %al,(%rax)
 6e0:	09 00                	or     %eax,(%rax)
 6e2:	00 00                	add    %al,(%rax)
 6e4:	00 00                	add    %al,(%rax)
 6e6:	00 00                	add    %al,(%rax)
 6e8:	36 00 00             	ss add %al,(%rax)
 6eb:	00 11                	add    %dl,(%rcx)
 6ed:	00 16                	add    %dl,(%rsi)
 6ef:	00 38                	add    %bh,(%rax)
 6f1:	ae                   	scas   %es:(%rdi),%al
 6f2:	02 00                	add    (%rax),%al
 6f4:	00 00                	add    %al,(%rax)
 6f6:	00 00                	add    %al,(%rax)
 6f8:	08 00                	or     %al,(%rax)
 6fa:	00 00                	add    %al,(%rax)
 6fc:	00 00                	add    %al,(%rax)
 6fe:	00 00                	add    %al,(%rax)
 700:	9a                   	(bad)  
 701:	00 00                	add    %al,(%rax)
 703:	00 11                	add    %dl,(%rcx)
 705:	00 14 00             	add    %dl,(%rax,%rax,1)
 708:	00 a1 01 00 00 00    	add    %ah,0x1(%rcx)
 70e:	00 00                	add    %al,(%rax)
 710:	1f                   	(bad)  
 711:	00 00                	add    %al,(%rax)
 713:	00 00                	add    %al,(%rax)
 715:	00 00                	add    %al,(%rax)
 717:	00 a5 01 00 00 10    	add    %ah,0x10000001(%rbp)
 71d:	00 0b                	add    %cl,(%rbx)
 71f:	00 95 24 01 00 00    	add    %dl,0x124(%rbp)
	...
 72d:	00 00                	add    %al,(%rax)
 72f:	00 c7                	add    %al,%bh
 731:	01 00                	add    %eax,(%rax)
 733:	00 11                	add    %dl,(%rcx)
 735:	00 16                	add    %dl,(%rsi)
 737:	00 20                	add    %ah,(%rax)
 739:	aa                   	stos   %al,%es:(%rdi)
 73a:	02 00                	add    (%rax),%al
 73c:	00 00                	add    %al,(%rax)
 73e:	00 00                	add    %al,(%rax)
 740:	08 00                	or     %al,(%rax)
 742:	00 00                	add    %al,(%rax)
 744:	00 00                	add    %al,(%rax)
 746:	00 00                	add    %al,(%rax)
 748:	ae                   	scas   %es:(%rdi),%al
 749:	00 00                	add    %al,(%rax)
 74b:	00 12                	add    %dl,(%rdx)
 74d:	00 0a                	add    %cl,(%rdx)
 74f:	00 80 44 00 00 00    	add    %al,0x44(%rax)
 755:	00 00                	add    %al,(%rax)
 757:	00 50 11             	add    %dl,0x11(%rax)
 75a:	00 00                	add    %al,(%rax)
 75c:	00 00                	add    %al,(%rax)
 75e:	00 00                	add    %al,(%rax)
 760:	0c 01                	or     $0x1,%al
 762:	00 00                	add    %al,(%rax)
 764:	12 00                	adc    (%rax),%al
 766:	0a 00                	or     (%rax),%al
 768:	60                   	(bad)  
 769:	0f 01 00             	sgdt   (%rax)
 76c:	00 00                	add    %al,(%rax)
 76e:	00 00                	add    %al,(%rax)
 770:	1d 00 00 00 00       	sbb    $0x0,%eax
 775:	00 00                	add    %al,(%rax)
 777:	00 59 01             	add    %bl,0x1(%rcx)
 77a:	00 00                	add    %al,(%rax)
 77c:	11 00                	adc    %eax,(%rax)
 77e:	14 00                	adc    $0x0,%al
 780:	20 a1 01 00 00 00    	and    %ah,0x1(%rcx)
 786:	00 00                	add    %al,(%rax)
 788:	20 00                	and    %al,(%rax)
 78a:	00 00                	add    %al,(%rax)
 78c:	00 00                	add    %al,(%rax)
 78e:	00 00                	add    %al,(%rax)
 790:	84 01                	test   %al,(%rcx)
 792:	00 00                	add    %al,(%rax)
 794:	12 00                	adc    (%rax),%al
 796:	0a 00                	or     (%rax),%al
 798:	f0 0f 01 00          	lock sgdt (%rax)
 79c:	00 00                	add    %al,(%rax)
 79e:	00 00                	add    %al,(%rax)
 7a0:	6f                   	outsl  %ds:(%rsi),(%dx)
 7a1:	00 00                	add    %al,(%rax)
 7a3:	00 00                	add    %al,(%rax)
 7a5:	00 00                	add    %al,(%rax)
 7a7:	00 7a 00             	add    %bh,0x0(%rdx)
 7aa:	00 00                	add    %al,(%rax)
 7ac:	10 00                	adc    %al,(%rax)
 7ae:	0b 00                	or     (%rax),%eax
 7b0:	0b 20                	or     (%rax),%esp
 7b2:	01 00                	add    %eax,(%rax)
	...
 7c0:	d0 00                	rolb   (%rax)
 7c2:	00 00                	add    %al,(%rax)
 7c4:	12 00                	adc    (%rax),%al
 7c6:	0b 00                	or     (%rax),%eax
 7c8:	bf 24 01 00 00       	mov    $0x124,%edi
	...
 7d5:	00 00                	add    %al,(%rax)
 7d7:	00 94 01 00 00 11 00 	add    %dl,0x110000(%rcx,%rax,1)
 7de:	14 00                	adc    $0x0,%al
 7e0:	30 82 01 00 00 00    	xor    %al,0x1(%rdx)
 7e6:	00 00                	add    %al,(%rax)
 7e8:	1c 00                	sbb    $0x0,%al
 7ea:	00 00                	add    %al,(%rax)
 7ec:	00 00                	add    %al,(%rax)
 7ee:	00 00                	add    %al,(%rax)
 7f0:	b8 00 00 00 12       	mov    $0x12000000,%eax
 7f5:	00 0b                	add    %cl,(%rbx)
 7f7:	00 dd                	add    %bl,%ch
 7f9:	24 01                	and    $0x1,%al
	...

Disassembly of section .dynstr:

0000000000000808 <.dynstr>:
 808:	00 74 65 73          	add    %dh,0x73(%rbp,%riz,2)
 80c:	74 5f                	je     86d <__ImageBase+0x86d>
 80e:	64 75 6d             	fs jne 87e <__ImageBase+0x87e>
 811:	6d                   	insl   (%dx),%es:(%rdi)
 812:	79 00                	jns    814 <__ImageBase+0x814>
 814:	5f                   	pop    %rdi
 815:	5f                   	pop    %rdi
 816:	49 6d                	rex.WB insl (%dx),%es:(%rdi)
 818:	61                   	(bad)  
 819:	67 65 42 61          	addr32 gs rex.X (bad) 
 81d:	73 65                	jae    884 <__ImageBase+0x884>
 81f:	00 5f 6c             	add    %bl,0x6c(%rdi)
 822:	6f                   	outsl  %ds:(%rsi),(%dx)
 823:	6e                   	outsb  %ds:(%rsi),(%dx)
 824:	67 6a 6d             	addr32 push $0x6d
 827:	70 00                	jo     829 <__ImageBase+0x829>
 829:	61                   	(bad)  
 82a:	6c                   	insb   (%dx),%es:(%rdi)
 82b:	6c                   	insb   (%dx),%es:(%rdi)
 82c:	6f                   	outsl  %ds:(%rsi),(%dx)
 82d:	63 61 00             	movsxd 0x0(%rcx),%esp
 830:	65 6e                	outsb  %gs:(%rsi),(%dx)
 832:	63 6c 61 76          	movsxd 0x76(%rcx,%riz,2),%ebp
 836:	65 5f                	gs pop %rdi
 838:	65 6e                	outsb  %gs:(%rsi),(%dx)
 83a:	74 72                	je     8ae <__ImageBase+0x8ae>
 83c:	79 00                	jns    83e <__ImageBase+0x83e>
 83e:	67 5f                	addr32 pop %rdi
 840:	70 65                	jo     8a7 <__ImageBase+0x8a7>
 842:	61                   	(bad)  
 843:	6b 5f 72 73          	imul   $0x73,0x72(%rdi),%ebx
 847:	72 76                	jb     8bf <__ImageBase+0x8bf>
 849:	5f                   	pop    %rdi
 84a:	6d                   	insl   (%dx),%es:(%rdi)
 84b:	65 6d                	gs insl (%dx),%es:(%rdi)
 84d:	5f                   	pop    %rdi
 84e:	63 6f 6d             	movsxd 0x6d(%rdi),%ebp
 851:	6d                   	insl   (%dx),%es:(%rdi)
 852:	69 74 74 65 64 00 5f 	imul   $0x5f5f0064,0x65(%rsp,%rsi,2),%esi
 859:	5f 
 85a:	69 6e 74 65 6c 5f 73 	imul   $0x735f6c65,0x74(%rsi),%ebp
 861:	65 63 75 72          	movsxd %gs:0x72(%rbp),%esi
 865:	69 74 79 5f 63 6f 6f 	imul   $0x6b6f6f63,0x5f(%rcx,%rdi,2),%esi
 86c:	6b 
 86d:	69 65 00 73 67 78 5f 	imul   $0x5f786773,0x0(%rbp),%esp
 874:	74 73                	je     8e9 <__ImageBase+0x8e9>
 876:	74 64                	je     8dc <__ImageBase+0x8dc>
 878:	63 5f 76             	movsxd 0x76(%rdi),%ebx
 87b:	65 72 73             	gs jb  8f1 <__ImageBase+0x8f1>
 87e:	69 6f 6e 00 5f 5f 63 	imul   $0x635f5f00,0x6e(%rdi),%ebp
 885:	74 5f                	je     8e6 <__ImageBase+0x8e6>
 887:	6d                   	insl   (%dx),%es:(%rdi)
 888:	69 74 69 67 61 74 69 	imul   $0x6f697461,0x67(%rcx,%rbp,2),%esi
 88f:	6f 
 890:	6e                   	outsb  %ds:(%rsi),(%dx)
 891:	5f                   	pop    %rdi
 892:	62                   	(bad)  
 893:	65 67 69 6e 00 64 6f 	imul   $0x655f6f64,%gs:0x0(%esi),%ebp
 89a:	5f 65 
 89c:	6d                   	insl   (%dx),%es:(%rdi)
 89d:	6f                   	outsl  %ds:(%rsi),(%dx)
 89e:	64 70 65             	fs jo  906 <__ImageBase+0x906>
 8a1:	00 73 67             	add    %dh,0x67(%rbx)
 8a4:	78 5f                	js     905 <__ImageBase+0x905>
 8a6:	74 63                	je     90b <__ImageBase+0x90b>
 8a8:	72 79                	jb     923 <__ImageBase+0x923>
 8aa:	70 74                	jo     920 <__ImageBase+0x920>
 8ac:	6f                   	outsl  %ds:(%rsi),(%dx)
 8ad:	5f                   	pop    %rdi
 8ae:	76 65                	jbe    915 <__ImageBase+0x915>
 8b0:	72 73                	jb     925 <__ImageBase+0x925>
 8b2:	69 6f 6e 00 63 74 5f 	imul   $0x5f746300,0x6e(%rdi),%ebp
 8b9:	64 65 63 6f 64       	fs movsxd %gs:0x64(%rdi),%ebp
 8be:	65 00 64 6f 5f       	add    %ah,%gs:0x5f(%rdi,%rbp,2)
 8c3:	65 61                	gs (bad) 
 8c5:	63 63 65             	movsxd 0x65(%rbx),%esp
 8c8:	70 74                	jo     93e <__ImageBase+0x93e>
 8ca:	63 6f 70             	movsxd 0x70(%rdi),%ebp
 8cd:	79 00                	jns    8cf <__ImageBase+0x8cf>
 8cf:	61                   	(bad)  
 8d0:	73 6d                	jae    93f <__ImageBase+0x93f>
 8d2:	5f                   	pop    %rdi
 8d3:	6f                   	outsl  %ds:(%rsi),(%dx)
 8d4:	72 65                	jb     93b <__ImageBase+0x93b>
 8d6:	74 00                	je     8d8 <__ImageBase+0x8d8>
 8d8:	64 6f                	outsl  %fs:(%rsi),(%dx)
 8da:	5f                   	pop    %rdi
 8db:	65 61                	gs (bad) 
 8dd:	63 63 65             	movsxd 0x65(%rbx),%esp
 8e0:	70 74                	jo     956 <__ImageBase+0x956>
 8e2:	00 5f 5a             	add    %bl,0x5a(%rdi)
 8e5:	39 70 63             	cmp    %esi,0x63(%rax)
 8e8:	6c                   	insb   (%dx),%es:(%rdi)
 8e9:	5f                   	pop    %rdi
 8ea:	65 6e                	outsb  %gs:(%rsi),(%dx)
 8ec:	74 72                	je     960 <__ImageBase+0x960>
 8ee:	79 50                	jns    940 <__ImageBase+0x940>
 8f0:	76 53                	jbe    945 <__ImageBase+0x945>
 8f2:	5f                   	pop    %rdi
 8f3:	00 5f 5f             	add    %bl,0x5f(%rdi)
 8f6:	6d                   	insl   (%dx),%es:(%rdi)
 8f7:	65 6d                	gs insl (%dx),%es:(%rdi)
 8f9:	63 70 79             	movsxd 0x79(%rax),%esi
 8fc:	5f                   	pop    %rdi
 8fd:	38 61 00             	cmp    %ah,0x0(%rcx)
 900:	5f                   	pop    %rdi
 901:	5f                   	pop    %rdi
 902:	63 74 5f 6d          	movsxd 0x6d(%rdi,%rbx,2),%esi
 906:	69 74 69 67 61 74 69 	imul   $0x6f697461,0x67(%rcx,%rbp,2),%esi
 90d:	6f 
 90e:	6e                   	outsb  %ds:(%rsi),(%dx)
 90f:	5f                   	pop    %rdi
 910:	72 65                	jb     977 <__ImageBase+0x977>
 912:	74 00                	je     914 <__ImageBase+0x914>
 914:	5f                   	pop    %rdi
 915:	5f                   	pop    %rdi
 916:	6d                   	insl   (%dx),%es:(%rdi)
 917:	65 6d                	gs insl (%dx),%es:(%rdi)
 919:	63 70 79             	movsxd 0x79(%rax),%esi
 91c:	5f                   	pop    %rdi
 91d:	76 65                	jbe    984 <__ImageBase+0x984>
 91f:	72 77                	jb     998 <__ImageBase+0x998>
 921:	00 5f 5f             	add    %bl,0x5f(%rdi)
 924:	6d                   	insl   (%dx),%es:(%rdi)
 925:	65 6d                	gs insl (%dx),%es:(%rdi)
 927:	73 65                	jae    98e <__ImageBase+0x98e>
 929:	74 00                	je     92b <__ImageBase+0x92b>
 92b:	5f                   	pop    %rdi
 92c:	5f                   	pop    %rdi
 92d:	62 73                	(bad)  
 92f:	73 5f                	jae    990 <__ImageBase+0x990>
 931:	73 74                	jae    9a7 <__ImageBase+0x9a7>
 933:	61                   	(bad)  
 934:	72 74                	jb     9aa <__ImageBase+0x9aa>
 936:	00 67 5f             	add    %ah,0x5f(%rdi)
 939:	67 6c                	insb   (%dx),%es:(%edi)
 93b:	6f                   	outsl  %ds:(%rsi),(%dx)
 93c:	62 61 6c 5f 64       	(bad)
 941:	61                   	(bad)  
 942:	74 61                	je     9a5 <__ImageBase+0x9a5>
 944:	00 4c 65 76          	add    %cl,0x76(%rbp,%riz,2)
 948:	65 72 69             	gs jb  9b4 <__ImageBase+0x9b4>
 94b:	66 79 72             	data16 jns 9c0 <__ImageBase+0x9c0>
 94e:	65 70 6f             	gs jo  9c0 <__ImageBase+0x9c0>
 951:	72 74                	jb     9c7 <__ImageBase+0x9c7>
 953:	32 5f 69             	xor    0x69(%rdi),%bl
 956:	6e                   	outsb  %ds:(%rsi),(%dx)
 957:	73 74                	jae    9cd <__ImageBase+0x9cd>
 959:	00 5f 65             	add    %bl,0x65(%rdi)
 95c:	64 61                	fs (bad) 
 95e:	74 61                	je     9c1 <__ImageBase+0x9c1>
 960:	00 73 67             	add    %dh,0x67(%rbx)
 963:	78 5f                	js     9c4 <__ImageBase+0x9c4>
 965:	74 73                	je     9da <__ImageBase+0x9da>
 967:	65 72 76             	gs jb  9e0 <__ImageBase+0x9e0>
 96a:	69 63 65 5f 76 65 72 	imul   $0x7265765f,0x65(%rbx),%esp
 971:	73 69                	jae    9dc <__ImageBase+0x9dc>
 973:	6f                   	outsl  %ds:(%rsi),(%dx)
 974:	6e                   	outsb  %ds:(%rsi),(%dx)
 975:	00 5f 65             	add    %bl,0x65(%rdi)
 978:	6e                   	outsb  %ds:(%rsi),(%dx)
 979:	64 00 5f 5f          	add    %bl,%fs:0x5f(%rdi)
 97d:	65 72 72             	gs jb  9f2 <__ImageBase+0x9f2>
 980:	6e                   	outsb  %ds:(%rsi),(%dx)
 981:	6f                   	outsl  %ds:(%rsi),(%dx)
 982:	5f                   	pop    %rdi
 983:	6c                   	insb   (%dx),%es:(%rdi)
 984:	6f                   	outsl  %ds:(%rsi),(%dx)
 985:	63 61 74             	movsxd 0x74(%rcx),%esp
 988:	69 6f 6e 00 5f 73 74 	imul   $0x74735f00,0x6e(%rdi),%ebp
 98f:	72 6c                	jb     9fd <__ImageBase+0x9fd>
 991:	65 6e                	outsb  %gs:(%rsi),(%dx)
 993:	00 5f 73             	add    %bl,0x73(%rdi)
 996:	65 74 6a             	gs je  a03 <__ImageBase+0xa03>
 999:	6d                   	insl   (%dx),%es:(%rdi)
 99a:	70 00                	jo     99c <__ImageBase+0x99c>
 99c:	73 67                	jae    a05 <__ImageBase+0xa05>
 99e:	78 5f                	js     9ff <__ImageBase+0x9ff>
 9a0:	74 72                	je     a14 <__ImageBase+0xa14>
 9a2:	74 73                	je     a17 <__ImageBase+0xa17>
 9a4:	5f                   	pop    %rdi
 9a5:	76 65                	jbe    a0c <__ImageBase+0xa0c>
 9a7:	72 73                	jb     a1c <__ImageBase+0xa1c>
 9a9:	69 6f 6e 00 4c 65 72 	imul   $0x72654c00,0x6e(%rdi),%ebp
 9b0:	65 70 6f             	gs jo  a22 <__ImageBase+0xa22>
 9b3:	72 74                	jb     a29 <__ImageBase+0xa29>
 9b5:	5f                   	pop    %rdi
 9b6:	69 6e 73 74 00 61 65 	imul   $0x65610074,0x73(%rsi),%ebp
 9bd:	78 5f                	js     a1e <__ImageBase+0xa1e>
 9bf:	6e                   	outsb  %ds:(%rsi),(%dx)
 9c0:	6f                   	outsl  %ds:(%rsi),(%dx)
 9c1:	74 69                	je     a2c <__ImageBase+0xa2c>
 9c3:	66 79 5f             	data16 jns a25 <__ImageBase+0xa25>
 9c6:	63 33                	movsxd (%rbx),%esi
 9c8:	5f                   	pop    %rdi
 9c9:	63 61 63             	movsxd 0x63(%rcx),%esp
 9cc:	68 65 00 67 5f       	push   $0x5f670065
 9d1:	70 65                	jo     a38 <__ImageBase+0xa38>
 9d3:	61                   	(bad)  
 9d4:	6b 5f 68 65          	imul   $0x65,0x68(%rdi),%ebx
 9d8:	61                   	(bad)  
 9d9:	70 5f                	jo     a3a <__ImageBase+0xa3a>
 9db:	75 73                	jne    a50 <__ImageBase+0xa50>
 9dd:	65 64 00 69 70       	gs add %ch,%fs:0x70(%rcx)
 9e2:	70 63                	jo     a47 <__ImageBase+0xa47>
 9e4:	70 53                	jo     a39 <__ImageBase+0xa39>
 9e6:	65 74 43             	gs je  a2c <__ImageBase+0xa2c>
 9e9:	70 75                	jo     a60 <__ImageBase+0xa60>
 9eb:	46                   	rex.RX
 9ec:	65 61                	gs (bad) 
 9ee:	74 75                	je     a65 <__ImageBase+0xa65>
 9f0:	72 65                	jb     a57 <__ImageBase+0xa57>
 9f2:	73 00                	jae    9f4 <__ImageBase+0x9f4>

Disassembly of section .rela.dyn:

00000000000009f8 <.rela.dyn>:
 9f8:	a0 7d 01 00 00 00 00 	movabs 0x80000000000017d,%al
 9ff:	00 08 
	...
 a09:	20 00                	and    %al,(%rax)
 a0b:	00 00                	add    %al,(%rax)
 a0d:	00 00                	add    %al,(%rax)
 a0f:	00 a8 7d 01 00 00    	add    %ch,0x17d(%rax)
 a15:	00 00                	add    %al,(%rax)
 a17:	00 08                	add    %cl,(%rax)
 a19:	00 00                	add    %al,(%rax)
 a1b:	00 00                	add    %al,(%rax)
 a1d:	00 00                	add    %al,(%rax)
 a1f:	00 10                	add    %dl,(%rax)
 a21:	20 00                	and    %al,(%rax)
 a23:	00 00                	add    %al,(%rax)
 a25:	00 00                	add    %al,(%rax)
 a27:	00 b0 7d 01 00 00    	add    %dh,0x17d(%rax)
 a2d:	00 00                	add    %al,(%rax)
 a2f:	00 08                	add    %cl,(%rax)
 a31:	00 00                	add    %al,(%rax)
 a33:	00 00                	add    %al,(%rax)
 a35:	00 00                	add    %al,(%rax)
 a37:	00 30                	add    %dh,(%rax)
 a39:	20 00                	and    %al,(%rax)
 a3b:	00 00                	add    %al,(%rax)
 a3d:	00 00                	add    %al,(%rax)
 a3f:	00 b8 7d 01 00 00    	add    %bh,0x17d(%rax)
 a45:	00 00                	add    %al,(%rax)
 a47:	00 08                	add    %cl,(%rax)
 a49:	00 00                	add    %al,(%rax)
 a4b:	00 00                	add    %al,(%rax)
 a4d:	00 00                	add    %al,(%rax)
 a4f:	00 50 20             	add    %dl,0x20(%rax)
 a52:	00 00                	add    %al,(%rax)
 a54:	00 00                	add    %al,(%rax)
 a56:	00 00                	add    %al,(%rax)
 a58:	c8 7d 01 00          	enter  $0x17d,$0x0
 a5c:	00 00                	add    %al,(%rax)
 a5e:	00 00                	add    %al,(%rax)
 a60:	08 00                	or     %al,(%rax)
 a62:	00 00                	add    %al,(%rax)
 a64:	00 00                	add    %al,(%rax)
 a66:	00 00                	add    %al,(%rax)
 a68:	74 41                	je     aab <__ImageBase+0xaab>
 a6a:	00 00                	add    %al,(%rax)
 a6c:	00 00                	add    %al,(%rax)
 a6e:	00 00                	add    %al,(%rax)
 a70:	d8 7d 01             	fdivrs 0x1(%rbp)
 a73:	00 00                	add    %al,(%rax)
 a75:	00 00                	add    %al,(%rax)
 a77:	00 08                	add    %cl,(%rax)
 a79:	00 00                	add    %al,(%rax)
 a7b:	00 00                	add    %al,(%rax)
 a7d:	00 00                	add    %al,(%rax)
 a7f:	00 0e                	add    %cl,(%rsi)
 a81:	41 00 00             	add    %al,(%r8)
 a84:	00 00                	add    %al,(%rax)
 a86:	00 00                	add    %al,(%rax)
 a88:	e8 7d 01 00 00       	call   c0a <__ImageBase+0xc0a>
 a8d:	00 00                	add    %al,(%rax)
 a8f:	00 08                	add    %cl,(%rax)
 a91:	00 00                	add    %al,(%rax)
 a93:	00 00                	add    %al,(%rax)
 a95:	00 00                	add    %al,(%rax)
 a97:	00 f5                	add    %dh,%ch
 a99:	40 00 00             	rex add %al,(%rax)
 a9c:	00 00                	add    %al,(%rax)
 a9e:	00 00                	add    %al,(%rax)
 aa0:	f8                   	clc    
 aa1:	7d 01                	jge    aa4 <__ImageBase+0xaa4>
 aa3:	00 00                	add    %al,(%rax)
 aa5:	00 00                	add    %al,(%rax)
 aa7:	00 08                	add    %cl,(%rax)
 aa9:	00 00                	add    %al,(%rax)
 aab:	00 00                	add    %al,(%rax)
 aad:	00 00                	add    %al,(%rax)
 aaf:	00 06                	add    %al,(%rsi)
 ab1:	40 00 00             	rex add %al,(%rax)
 ab4:	00 00                	add    %al,(%rax)
 ab6:	00 00                	add    %al,(%rax)
 ab8:	58                   	pop    %rax
 ab9:	7e 01                	jle    abc <__ImageBase+0xabc>
 abb:	00 00                	add    %al,(%rax)
 abd:	00 00                	add    %al,(%rax)
 abf:	00 08                	add    %cl,(%rax)
 ac1:	00 00                	add    %al,(%rax)
 ac3:	00 00                	add    %al,(%rax)
 ac5:	00 00                	add    %al,(%rax)
 ac7:	00 30                	add    %dh,(%rax)
 ac9:	09 01                	or     %eax,(%rcx)
 acb:	00 00                	add    %al,(%rax)
 acd:	00 00                	add    %al,(%rax)
 acf:	00 d8                	add    %bl,%al
 ad1:	7f 01                	jg     ad4 <__ImageBase+0xad4>
 ad3:	00 00                	add    %al,(%rax)
 ad5:	00 00                	add    %al,(%rax)
 ad7:	00 08                	add    %cl,(%rax)
 ad9:	00 00                	add    %al,(%rax)
 adb:	00 00                	add    %al,(%rax)
 add:	00 00                	add    %al,(%rax)
 adf:	00 b3 24 01 00 00    	add    %dh,0x124(%rbx)
 ae5:	00 00                	add    %al,(%rax)
 ae7:	00 e0                	add    %ah,%al
 ae9:	7f 01                	jg     aec <__ImageBase+0xaec>
 aeb:	00 00                	add    %al,(%rax)
 aed:	00 00                	add    %al,(%rax)
 aef:	00 08                	add    %cl,(%rax)
 af1:	00 00                	add    %al,(%rax)
 af3:	00 00                	add    %al,(%rax)
 af5:	00 00                	add    %al,(%rax)
 af7:	00 95 24 01 00 00    	add    %dl,0x124(%rbp)
 afd:	00 00                	add    %al,(%rax)
 aff:	00 e8                	add    %ch,%al
 b01:	7f 01                	jg     b04 <__ImageBase+0xb04>
 b03:	00 00                	add    %al,(%rax)
 b05:	00 00                	add    %al,(%rax)
 b07:	00 08                	add    %cl,(%rax)
	...
 b11:	90                   	nop
 b12:	01 00                	add    %eax,(%rax)
 b14:	00 00                	add    %al,(%rax)
 b16:	00 00                	add    %al,(%rax)
 b18:	08 80 01 00 00 00    	or     %al,0x1(%rax)
 b1e:	00 00                	add    %al,(%rax)
 b20:	08 00                	or     %al,(%rax)
 b22:	00 00                	add    %al,(%rax)
 b24:	00 00                	add    %al,(%rax)
 b26:	00 00                	add    %al,(%rax)
 b28:	1c 30                	sbb    $0x30,%al
 b2a:	01 00                	add    %eax,(%rax)
 b2c:	00 00                	add    %al,(%rax)
 b2e:	00 00                	add    %al,(%rax)
 b30:	50                   	push   %rax
 b31:	82                   	(bad)  
 b32:	01 00                	add    %eax,(%rax)
 b34:	00 00                	add    %al,(%rax)
 b36:	00 00                	add    %al,(%rax)
 b38:	08 00                	or     %al,(%rax)
 b3a:	00 00                	add    %al,(%rax)
 b3c:	00 00                	add    %al,(%rax)
 b3e:	00 00                	add    %al,(%rax)
 b40:	50                   	push   %rax
 b41:	82                   	(bad)  
 b42:	01 00                	add    %eax,(%rax)
 b44:	00 00                	add    %al,(%rax)
 b46:	00 00                	add    %al,(%rax)
 b48:	00 a0 01 00 00 00    	add    %ah,0x1(%rax)
 b4e:	00 00                	add    %al,(%rax)
 b50:	08 00                	or     %al,(%rax)
 b52:	00 00                	add    %al,(%rax)
 b54:	00 00                	add    %al,(%rax)
 b56:	00 00                	add    %al,(%rax)
 b58:	20 a0 01 00 00 00    	and    %ah,0x1(%rax)
 b5e:	00 00                	add    %al,(%rax)
 b60:	58                   	pop    %rax
 b61:	a0 01 00 00 00 00 00 	movabs 0x8000000000001,%al
 b68:	08 00 
 b6a:	00 00                	add    %al,(%rax)
 b6c:	00 00                	add    %al,(%rax)
 b6e:	00 00                	add    %al,(%rax)
 b70:	20 a0 01 00 00 00    	and    %ah,0x1(%rax)
 b76:	00 00                	add    %al,(%rax)
 b78:	60                   	(bad)  
 b79:	a0 01 00 00 00 00 00 	movabs 0x8000000000001,%al
 b80:	08 00 
 b82:	00 00                	add    %al,(%rax)
 b84:	00 00                	add    %al,(%rax)
 b86:	00 00                	add    %al,(%rax)
 b88:	20 a0 01 00 00 00    	and    %ah,0x1(%rax)
 b8e:	00 00                	add    %al,(%rax)
 b90:	68 a0 01 00 00       	push   $0x1a0
 b95:	00 00                	add    %al,(%rax)
 b97:	00 08                	add    %cl,(%rax)
 b99:	00 00                	add    %al,(%rax)
 b9b:	00 00                	add    %al,(%rax)
 b9d:	00 00                	add    %al,(%rax)
 b9f:	00 80 a0 01 00 00    	add    %al,0x1a0(%rax)
 ba5:	00 00                	add    %al,(%rax)
 ba7:	00 b8 a0 01 00 00    	add    %bh,0x1a0(%rax)
 bad:	00 00                	add    %al,(%rax)
 baf:	00 08                	add    %cl,(%rax)
 bb1:	00 00                	add    %al,(%rax)
 bb3:	00 00                	add    %al,(%rax)
 bb5:	00 00                	add    %al,(%rax)
 bb7:	00 80 a0 01 00 00    	add    %al,0x1a0(%rax)
 bbd:	00 00                	add    %al,(%rax)
 bbf:	00 c0                	add    %al,%al
 bc1:	a0 01 00 00 00 00 00 	movabs 0x8000000000001,%al
 bc8:	08 00 
 bca:	00 00                	add    %al,(%rax)
 bcc:	00 00                	add    %al,(%rax)
 bce:	00 00                	add    %al,(%rax)
 bd0:	80 a0 01 00 00 00 00 	andb   $0x0,0x1(%rax)
 bd7:	00 d0                	add    %dl,%al
 bd9:	7f 01                	jg     bdc <__ImageBase+0xbdc>
 bdb:	00 00                	add    %al,(%rax)
 bdd:	00 00                	add    %al,(%rax)
 bdf:	00 06                	add    %al,(%rsi)
 be1:	00 00                	add    %al,(%rax)
 be3:	00 01                	add    %al,(%rcx)
	...
 bed:	00 00                	add    %al,(%rax)
 bef:	00 f0                	add    %dh,%al
 bf1:	7f 01                	jg     bf4 <__ImageBase+0xbf4>
 bf3:	00 00                	add    %al,(%rax)
 bf5:	00 00                	add    %al,(%rax)
 bf7:	00 06                	add    %al,(%rsi)
 bf9:	00 00                	add    %al,(%rax)
 bfb:	00 02                	add    %al,(%rdx)
	...

Disassembly of section .plt:

0000000000001000 <.plt>:
    1000:	ff 35 ba 6f 01 00    	push   0x16fba(%rip)        # 17fc0 <_GLOBAL_OFFSET_TABLE_+0x8>
    1006:	ff 25 bc 6f 01 00    	jmp    *0x16fbc(%rip)        # 17fc8 <_GLOBAL_OFFSET_TABLE_+0x10>
    100c:	0f 1f 40 00          	nopl   0x0(%rax)

Disassembly of section .plt.got:

0000000000001010 <_Z9pcl_entryPvS_@plt>:
    1010:	ff 25 ba 6f 01 00    	jmp    *0x16fba(%rip)        # 17fd0 <_Z9pcl_entryPvS_>
    1016:	66 90                	xchg   %ax,%ax

0000000000001018 <ippcpSetCpuFeatures@plt>:
    1018:	ff 25 d2 6f 01 00    	jmp    *0x16fd2(%rip)        # 17ff0 <ippcpSetCpuFeatures>
    101e:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000002000 <trts_access_version_dummy1>:
    2000:	f3 0f 1e fa          	endbr64 
    2004:	48 8d 05 25 62 01 00 	lea    0x16225(%rip),%rax        # 18230 <sgx_trts_version>
    200b:	c6 00 73             	movb   $0x73,(%rax)
    200e:	c3                   	ret    
    200f:	90                   	nop

0000000000002010 <tstdc_access_version_dummy1>:
    2010:	f3 0f 1e fa          	endbr64 
    2014:	c6 05 c5 80 01 00 73 	movb   $0x73,0x180c5(%rip)        # 1a0e0 <sgx_tstdc_version>
    201b:	48 8d 05 be 80 01 00 	lea    0x180be(%rip),%rax        # 1a0e0 <sgx_tstdc_version>
    2022:	c3                   	ret    
    2023:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    202a:	00 00 00 
    202d:	0f 1f 00             	nopl   (%rax)

0000000000002030 <tcrypto_access_version_dummy1>:
    2030:	f3 0f 1e fa          	endbr64 
    2034:	c6 05 c5 80 01 00 73 	movb   $0x73,0x180c5(%rip)        # 1a100 <sgx_tcrypto_version>
    203b:	48 8d 05 be 80 01 00 	lea    0x180be(%rip),%rax        # 1a100 <sgx_tcrypto_version>
    2042:	c3                   	ret    
    2043:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    204a:	00 00 00 
    204d:	0f 1f 00             	nopl   (%rax)

0000000000002050 <tservice_access_version_dummy1>:
    2050:	f3 0f 1e fa          	endbr64 
    2054:	c6 05 c5 80 01 00 73 	movb   $0x73,0x180c5(%rip)        # 1a120 <sgx_tservice_version>
    205b:	48 8d 05 be 80 01 00 	lea    0x180be(%rip),%rax        # 1a120 <sgx_tservice_version>
    2062:	c3                   	ret    

0000000000002063 <ecall_update_response_loc>:
    2063:	f3 0f 1e fa          	endbr64 
    2067:	53                   	push   %rbx
    2068:	be 10 00 00 00       	mov    $0x10,%esi
    206d:	48 89 fb             	mov    %rdi,%rbx
    2070:	e8 6b 3b 00 00       	call   5be0 <sgx_is_outside_enclave>
    2075:	85 c0                	test   %eax,%eax
    2077:	74 44                	je     20bd <ecall_update_response_loc+0x5a>
    2079:	0f 10 03             	movups (%rbx),%xmm0
    207c:	be 04 00 00 00       	mov    $0x4,%esi
    2081:	66 48 0f 7e c7       	movq   %xmm0,%rdi
    2086:	0f 29 05 d3 80 01 00 	movaps %xmm0,0x180d3(%rip)        # 1a160 <msp>
    208d:	e8 4e 3b 00 00       	call   5be0 <sgx_is_outside_enclave>
    2092:	85 c0                	test   %eax,%eax
    2094:	75 12                	jne    20a8 <ecall_update_response_loc+0x45>
    2096:	31 c0                	xor    %eax,%eax
    2098:	48 89 05 c1 80 01 00 	mov    %rax,0x180c1(%rip)        # 1a160 <msp>
    209f:	48 89 05 c2 80 01 00 	mov    %rax,0x180c2(%rip)        # 1a168 <msp+0x8>
    20a6:	eb 15                	jmp    20bd <ecall_update_response_loc+0x5a>
    20a8:	48 8b 3d b9 80 01 00 	mov    0x180b9(%rip),%rdi        # 1a168 <msp+0x8>
    20af:	be 04 00 00 00       	mov    $0x4,%esi
    20b4:	e8 27 3b 00 00       	call   5be0 <sgx_is_outside_enclave>
    20b9:	85 c0                	test   %eax,%eax
    20bb:	74 d9                	je     2096 <ecall_update_response_loc+0x33>
    20bd:	5b                   	pop    %rbx
    20be:	c3                   	ret    

00000000000020bf <ecall_compute_response>:
    20bf:	f3 0f 1e fa          	endbr64 
    20c3:	48 8b 05 96 80 01 00 	mov    0x18096(%rip),%rax        # 1a160 <msp>
    20ca:	8d 14 37             	lea    (%rdi,%rsi,1),%edx
    20cd:	0f af fe             	imul   %esi,%edi
    20d0:	89 10                	mov    %edx,(%rax)
    20d2:	48 8b 05 8f 80 01 00 	mov    0x1808f(%rip),%rax        # 1a168 <msp+0x8>
    20d9:	89 38                	mov    %edi,(%rax)
    20db:	c3                   	ret    

00000000000020dc <ecall_get_response>:
    20dc:	f3 0f 1e fa          	endbr64 
    20e0:	50                   	push   %rax
    20e1:	48 8b 05 78 80 01 00 	mov    0x18078(%rip),%rax        # 1a160 <msp>
    20e8:	48 8d 3d 11 0f 01 00 	lea    0x10f11(%rip),%rdi        # 13000 <second_phase+0xa50>
    20ef:	48 63 30             	movslq (%rax),%rsi
    20f2:	31 c0                	xor    %eax,%eax
    20f4:	e8 c7 21 00 00       	call   42c0 <ocall_print_address>
    20f9:	48 8b 05 68 80 01 00 	mov    0x18068(%rip),%rax        # 1a168 <msp+0x8>
    2100:	48 8d 3d fe 0e 01 00 	lea    0x10efe(%rip),%rdi        # 13005 <second_phase+0xa55>
    2107:	48 63 30             	movslq (%rax),%rsi
    210a:	31 c0                	xor    %eax,%eax
    210c:	5a                   	pop    %rdx
    210d:	e9 ae 21 00 00       	jmp    42c0 <ocall_print_address>

0000000000002112 <ecall_get_secret>:
    2112:	f3 0f 1e fa          	endbr64 
    2116:	53                   	push   %rbx
    2117:	48 89 d3             	mov    %rdx,%rbx
    211a:	48 ff ca             	dec    %rdx
    211d:	39 3d dd 5e 01 00    	cmp    %edi,0x15edd(%rip)        # 18000 <pincode>
    2123:	48 89 f1             	mov    %rsi,%rcx
    2126:	48 8b 35 db 5e 01 00 	mov    0x15edb(%rip),%rsi        # 18008 <secret>
    212d:	74 07                	je     2136 <ecall_get_secret+0x24>
    212f:	48 8d 35 d5 0e 01 00 	lea    0x10ed5(%rip),%rsi        # 1300b <second_phase+0xa5b>
    2136:	48 89 cf             	mov    %rcx,%rdi
    2139:	e8 c2 e8 00 00       	call   10a00 <strncpy>
    213e:	c6 44 18 ff 00       	movb   $0x0,-0x1(%rax,%rbx,1)
    2143:	5b                   	pop    %rbx
    2144:	c3                   	ret    
    2145:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    214c:	00 00 00 
    214f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2156:	00 00 00 
    2159:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2160:	00 00 00 
    2163:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    216a:	00 00 00 
    216d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2174:	00 00 00 
    2177:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    217e:	00 00 00 
    2181:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2188:	00 00 00 
    218b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2192:	00 00 00 
    2195:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    219c:	00 00 00 
    219f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21a6:	00 00 00 
    21a9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21b0:	00 00 00 
    21b3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21ba:	00 00 00 
    21bd:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21c4:	00 00 00 
    21c7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21ce:	00 00 00 
    21d1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21d8:	00 00 00 
    21db:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21e2:	00 00 00 
    21e5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21ec:	00 00 00 
    21ef:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21f6:	00 00 00 
    21f9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2200:	00 00 00 
    2203:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    220a:	00 00 00 
    220d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2214:	00 00 00 
    2217:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    221e:	00 00 00 
    2221:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2228:	00 00 00 
    222b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2232:	00 00 00 
    2235:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    223c:	00 00 00 
    223f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2246:	00 00 00 
    2249:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2250:	00 00 00 
    2253:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    225a:	00 00 00 
    225d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2264:	00 00 00 
    2267:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    226e:	00 00 00 
    2271:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2278:	00 00 00 
    227b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2282:	00 00 00 
    2285:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    228c:	00 00 00 
    228f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2296:	00 00 00 
    2299:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22a0:	00 00 00 
    22a3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22aa:	00 00 00 
    22ad:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22b4:	00 00 00 
    22b7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22be:	00 00 00 
    22c1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22c8:	00 00 00 
    22cb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22d2:	00 00 00 
    22d5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22dc:	00 00 00 
    22df:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22e6:	00 00 00 
    22e9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22f0:	00 00 00 
    22f3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22fa:	00 00 00 
    22fd:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2304:	00 00 00 
    2307:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    230e:	00 00 00 
    2311:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2318:	00 00 00 
    231b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2322:	00 00 00 
    2325:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    232c:	00 00 00 
    232f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2336:	00 00 00 
    2339:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2340:	00 00 00 
    2343:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    234a:	00 00 00 
    234d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2354:	00 00 00 
    2357:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    235e:	00 00 00 
    2361:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2368:	00 00 00 
    236b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2372:	00 00 00 
    2375:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    237c:	00 00 00 
    237f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2386:	00 00 00 
    2389:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2390:	00 00 00 
    2393:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    239a:	00 00 00 
    239d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23a4:	00 00 00 
    23a7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23ae:	00 00 00 
    23b1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23b8:	00 00 00 
    23bb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23c2:	00 00 00 
    23c5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23cc:	00 00 00 
    23cf:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23d6:	00 00 00 
    23d9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23e0:	00 00 00 
    23e3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23ea:	00 00 00 
    23ed:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23f4:	00 00 00 
    23f7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23fe:	00 00 00 
    2401:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2408:	00 00 00 
    240b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2412:	00 00 00 
    2415:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    241c:	00 00 00 
    241f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2426:	00 00 00 
    2429:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2430:	00 00 00 
    2433:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    243a:	00 00 00 
    243d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2444:	00 00 00 
    2447:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    244e:	00 00 00 
    2451:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2458:	00 00 00 
    245b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2462:	00 00 00 
    2465:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    246c:	00 00 00 
    246f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2476:	00 00 00 
    2479:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2480:	00 00 00 
    2483:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    248a:	00 00 00 
    248d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2494:	00 00 00 
    2497:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    249e:	00 00 00 
    24a1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24a8:	00 00 00 
    24ab:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24b2:	00 00 00 
    24b5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24bc:	00 00 00 
    24bf:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24c6:	00 00 00 
    24c9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24d0:	00 00 00 
    24d3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24da:	00 00 00 
    24dd:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24e4:	00 00 00 
    24e7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24ee:	00 00 00 
    24f1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24f8:	00 00 00 
    24fb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2502:	00 00 00 
    2505:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    250c:	00 00 00 
    250f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2516:	00 00 00 
    2519:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2520:	00 00 00 
    2523:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    252a:	00 00 00 
    252d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2534:	00 00 00 
    2537:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    253e:	00 00 00 
    2541:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2548:	00 00 00 
    254b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2552:	00 00 00 
    2555:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    255c:	00 00 00 
    255f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2566:	00 00 00 
    2569:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2570:	00 00 00 
    2573:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    257a:	00 00 00 
    257d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2584:	00 00 00 
    2587:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    258e:	00 00 00 
    2591:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2598:	00 00 00 
    259b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25a2:	00 00 00 
    25a5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25ac:	00 00 00 
    25af:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25b6:	00 00 00 
    25b9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25c0:	00 00 00 
    25c3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25ca:	00 00 00 
    25cd:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25d4:	00 00 00 
    25d7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25de:	00 00 00 
    25e1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25e8:	00 00 00 
    25eb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25f2:	00 00 00 
    25f5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25fc:	00 00 00 
    25ff:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2606:	00 00 00 
    2609:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2610:	00 00 00 
    2613:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    261a:	00 00 00 
    261d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2624:	00 00 00 
    2627:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    262e:	00 00 00 
    2631:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2638:	00 00 00 
    263b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2642:	00 00 00 
    2645:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    264c:	00 00 00 
    264f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2656:	00 00 00 
    2659:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2660:	00 00 00 
    2663:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    266a:	00 00 00 
    266d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2674:	00 00 00 
    2677:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    267e:	00 00 00 
    2681:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2688:	00 00 00 
    268b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2692:	00 00 00 
    2695:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    269c:	00 00 00 
    269f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26a6:	00 00 00 
    26a9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26b0:	00 00 00 
    26b3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26ba:	00 00 00 
    26bd:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26c4:	00 00 00 
    26c7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26ce:	00 00 00 
    26d1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26d8:	00 00 00 
    26db:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26e2:	00 00 00 
    26e5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26ec:	00 00 00 
    26ef:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26f6:	00 00 00 
    26f9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2700:	00 00 00 
    2703:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    270a:	00 00 00 
    270d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2714:	00 00 00 
    2717:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    271e:	00 00 00 
    2721:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2728:	00 00 00 
    272b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2732:	00 00 00 
    2735:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    273c:	00 00 00 
    273f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2746:	00 00 00 
    2749:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2750:	00 00 00 
    2753:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    275a:	00 00 00 
    275d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2764:	00 00 00 
    2767:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    276e:	00 00 00 
    2771:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2778:	00 00 00 
    277b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2782:	00 00 00 
    2785:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    278c:	00 00 00 
    278f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2796:	00 00 00 
    2799:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27a0:	00 00 00 
    27a3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27aa:	00 00 00 
    27ad:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27b4:	00 00 00 
    27b7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27be:	00 00 00 
    27c1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27c8:	00 00 00 
    27cb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27d2:	00 00 00 
    27d5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27dc:	00 00 00 
    27df:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27e6:	00 00 00 
    27e9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27f0:	00 00 00 
    27f3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27fa:	00 00 00 
    27fd:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2804:	00 00 00 
    2807:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    280e:	00 00 00 
    2811:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2818:	00 00 00 
    281b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2822:	00 00 00 
    2825:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    282c:	00 00 00 
    282f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2836:	00 00 00 
    2839:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2840:	00 00 00 
    2843:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    284a:	00 00 00 
    284d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2854:	00 00 00 
    2857:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    285e:	00 00 00 
    2861:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2868:	00 00 00 
    286b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2872:	00 00 00 
    2875:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    287c:	00 00 00 
    287f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2886:	00 00 00 
    2889:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2890:	00 00 00 
    2893:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    289a:	00 00 00 
    289d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28a4:	00 00 00 
    28a7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28ae:	00 00 00 
    28b1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28b8:	00 00 00 
    28bb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28c2:	00 00 00 
    28c5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28cc:	00 00 00 
    28cf:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28d6:	00 00 00 
    28d9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28e0:	00 00 00 
    28e3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28ea:	00 00 00 
    28ed:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28f4:	00 00 00 
    28f7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28fe:	00 00 00 
    2901:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2908:	00 00 00 
    290b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2912:	00 00 00 
    2915:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    291c:	00 00 00 
    291f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2926:	00 00 00 
    2929:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2930:	00 00 00 
    2933:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    293a:	00 00 00 
    293d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2944:	00 00 00 
    2947:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    294e:	00 00 00 
    2951:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2958:	00 00 00 
    295b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2962:	00 00 00 
    2965:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    296c:	00 00 00 
    296f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2976:	00 00 00 
    2979:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2980:	00 00 00 
    2983:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    298a:	00 00 00 
    298d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2994:	00 00 00 
    2997:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    299e:	00 00 00 
    29a1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29a8:	00 00 00 
    29ab:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29b2:	00 00 00 
    29b5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29bc:	00 00 00 
    29bf:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29c6:	00 00 00 
    29c9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29d0:	00 00 00 
    29d3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29da:	00 00 00 
    29dd:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29e4:	00 00 00 
    29e7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29ee:	00 00 00 
    29f1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29f8:	00 00 00 
    29fb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a02:	00 00 00 
    2a05:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a0c:	00 00 00 
    2a0f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a16:	00 00 00 
    2a19:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a20:	00 00 00 
    2a23:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a2a:	00 00 00 
    2a2d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a34:	00 00 00 
    2a37:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a3e:	00 00 00 
    2a41:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a48:	00 00 00 
    2a4b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a52:	00 00 00 
    2a55:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a5c:	00 00 00 
    2a5f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a66:	00 00 00 
    2a69:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a70:	00 00 00 
    2a73:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a7a:	00 00 00 
    2a7d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a84:	00 00 00 
    2a87:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a8e:	00 00 00 
    2a91:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a98:	00 00 00 
    2a9b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2aa2:	00 00 00 
    2aa5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2aac:	00 00 00 
    2aaf:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ab6:	00 00 00 
    2ab9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ac0:	00 00 00 
    2ac3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2aca:	00 00 00 
    2acd:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ad4:	00 00 00 
    2ad7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ade:	00 00 00 
    2ae1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ae8:	00 00 00 
    2aeb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2af2:	00 00 00 
    2af5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2afc:	00 00 00 
    2aff:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b06:	00 00 00 
    2b09:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b10:	00 00 00 
    2b13:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b1a:	00 00 00 
    2b1d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b24:	00 00 00 
    2b27:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b2e:	00 00 00 
    2b31:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b38:	00 00 00 
    2b3b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b42:	00 00 00 
    2b45:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b4c:	00 00 00 
    2b4f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b56:	00 00 00 
    2b59:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b60:	00 00 00 
    2b63:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b6a:	00 00 00 
    2b6d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b74:	00 00 00 
    2b77:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b7e:	00 00 00 
    2b81:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b88:	00 00 00 
    2b8b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b92:	00 00 00 
    2b95:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b9c:	00 00 00 
    2b9f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ba6:	00 00 00 
    2ba9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2bb0:	00 00 00 
    2bb3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2bba:	00 00 00 
    2bbd:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2bc4:	00 00 00 
    2bc7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2bce:	00 00 00 
    2bd1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2bd8:	00 00 00 
    2bdb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2be2:	00 00 00 
    2be5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2bec:	00 00 00 
    2bef:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2bf6:	00 00 00 
    2bf9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c00:	00 00 00 
    2c03:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c0a:	00 00 00 
    2c0d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c14:	00 00 00 
    2c17:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c1e:	00 00 00 
    2c21:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c28:	00 00 00 
    2c2b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c32:	00 00 00 
    2c35:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c3c:	00 00 00 
    2c3f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c46:	00 00 00 
    2c49:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c50:	00 00 00 
    2c53:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c5a:	00 00 00 
    2c5d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c64:	00 00 00 
    2c67:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c6e:	00 00 00 
    2c71:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c78:	00 00 00 
    2c7b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c82:	00 00 00 
    2c85:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c8c:	00 00 00 
    2c8f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c96:	00 00 00 
    2c99:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ca0:	00 00 00 
    2ca3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2caa:	00 00 00 
    2cad:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2cb4:	00 00 00 
    2cb7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2cbe:	00 00 00 
    2cc1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2cc8:	00 00 00 
    2ccb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2cd2:	00 00 00 
    2cd5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2cdc:	00 00 00 
    2cdf:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ce6:	00 00 00 
    2ce9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2cf0:	00 00 00 
    2cf3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2cfa:	00 00 00 
    2cfd:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d04:	00 00 00 
    2d07:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d0e:	00 00 00 
    2d11:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d18:	00 00 00 
    2d1b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d22:	00 00 00 
    2d25:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d2c:	00 00 00 
    2d2f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d36:	00 00 00 
    2d39:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d40:	00 00 00 
    2d43:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d4a:	00 00 00 
    2d4d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d54:	00 00 00 
    2d57:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d5e:	00 00 00 
    2d61:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d68:	00 00 00 
    2d6b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d72:	00 00 00 
    2d75:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d7c:	00 00 00 
    2d7f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d86:	00 00 00 
    2d89:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d90:	00 00 00 
    2d93:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d9a:	00 00 00 
    2d9d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2da4:	00 00 00 
    2da7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2dae:	00 00 00 
    2db1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2db8:	00 00 00 
    2dbb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2dc2:	00 00 00 
    2dc5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2dcc:	00 00 00 
    2dcf:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2dd6:	00 00 00 
    2dd9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2de0:	00 00 00 
    2de3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2dea:	00 00 00 
    2ded:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2df4:	00 00 00 
    2df7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2dfe:	00 00 00 
    2e01:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e08:	00 00 00 
    2e0b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e12:	00 00 00 
    2e15:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e1c:	00 00 00 
    2e1f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e26:	00 00 00 
    2e29:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e30:	00 00 00 
    2e33:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e3a:	00 00 00 
    2e3d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e44:	00 00 00 
    2e47:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e4e:	00 00 00 
    2e51:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e58:	00 00 00 
    2e5b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e62:	00 00 00 
    2e65:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e6c:	00 00 00 
    2e6f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e76:	00 00 00 
    2e79:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e80:	00 00 00 
    2e83:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e8a:	00 00 00 
    2e8d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e94:	00 00 00 
    2e97:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e9e:	00 00 00 
    2ea1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ea8:	00 00 00 
    2eab:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2eb2:	00 00 00 
    2eb5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ebc:	00 00 00 
    2ebf:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ec6:	00 00 00 
    2ec9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ed0:	00 00 00 
    2ed3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2eda:	00 00 00 
    2edd:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ee4:	00 00 00 
    2ee7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2eee:	00 00 00 
    2ef1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ef8:	00 00 00 
    2efb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f02:	00 00 00 
    2f05:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f0c:	00 00 00 
    2f0f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f16:	00 00 00 
    2f19:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f20:	00 00 00 
    2f23:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f2a:	00 00 00 
    2f2d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f34:	00 00 00 
    2f37:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f3e:	00 00 00 
    2f41:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f48:	00 00 00 
    2f4b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f52:	00 00 00 
    2f55:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f5c:	00 00 00 
    2f5f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f66:	00 00 00 
    2f69:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f70:	00 00 00 
    2f73:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f7a:	00 00 00 
    2f7d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f84:	00 00 00 
    2f87:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f8e:	00 00 00 
    2f91:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f98:	00 00 00 
    2f9b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2fa2:	00 00 00 
    2fa5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2fac:	00 00 00 
    2faf:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2fb6:	00 00 00 
    2fb9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2fc0:	00 00 00 
    2fc3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2fca:	00 00 00 
    2fcd:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2fd4:	00 00 00 
    2fd7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2fde:	00 00 00 
    2fe1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2fe8:	00 00 00 
    2feb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ff2:	00 00 00 
    2ff5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ffc:	00 00 00 
    2fff:	90                   	nop

0000000000003000 <test_dummy>:
    3000:	b8 00 00 00 00       	mov    $0x0,%eax
    3005:	c3                   	ret    
	...

0000000000004006 <sgx_ecall_get_secret>:
    4006:	f3 0f 1e fa          	endbr64 
    400a:	41 55                	push   %r13
    400c:	41 54                	push   %r12
    400e:	55                   	push   %rbp
    400f:	53                   	push   %rbx
    4010:	48 83 ec 28          	sub    $0x28,%rsp
    4014:	48 85 ff             	test   %rdi,%rdi
    4017:	75 0b                	jne    4024 <sgx_ecall_get_secret+0x1e>
    4019:	41 bc 02 00 00 00    	mov    $0x2,%r12d
    401f:	e9 c3 00 00 00       	jmp    40e7 <sgx_ecall_get_secret+0xe1>
    4024:	be 18 00 00 00       	mov    $0x18,%esi
    4029:	48 89 fb             	mov    %rdi,%rbx
    402c:	e8 af 1b 00 00       	call   5be0 <sgx_is_outside_enclave>
    4031:	85 c0                	test   %eax,%eax
    4033:	74 e4                	je     4019 <sgx_ecall_get_secret+0x13>
    4035:	0f ae e8             	lfence 
    4038:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    403d:	b9 18 00 00 00       	mov    $0x18,%ecx
    4042:	48 89 da             	mov    %rbx,%rdx
    4045:	be 18 00 00 00       	mov    $0x18,%esi
    404a:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    4050:	e8 6b cc 00 00       	call   10cc0 <memcpy_s>
    4055:	85 c0                	test   %eax,%eax
    4057:	0f 85 8a 00 00 00    	jne    40e7 <sgx_ecall_get_secret+0xe1>
    405d:	4c 8b 6c 24 10       	mov    0x10(%rsp),%r13
    4062:	48 8b 6c 24 18       	mov    0x18(%rsp),%rbp
    4067:	4d 85 ed             	test   %r13,%r13
    406a:	75 11                	jne    407d <sgx_ecall_get_secret+0x77>
    406c:	0f ae e8             	lfence 
    406f:	4d 85 ed             	test   %r13,%r13
    4072:	74 05                	je     4079 <sgx_ecall_get_secret+0x73>
    4074:	48 85 ed             	test   %rbp,%rbp
    4077:	75 15                	jne    408e <sgx_ecall_get_secret+0x88>
    4079:	31 db                	xor    %ebx,%ebx
    407b:	eb 31                	jmp    40ae <sgx_ecall_get_secret+0xa8>
    407d:	48 89 ee             	mov    %rbp,%rsi
    4080:	4c 89 ef             	mov    %r13,%rdi
    4083:	e8 58 1b 00 00       	call   5be0 <sgx_is_outside_enclave>
    4088:	85 c0                	test   %eax,%eax
    408a:	75 e0                	jne    406c <sgx_ecall_get_secret+0x66>
    408c:	eb 8b                	jmp    4019 <sgx_ecall_get_secret+0x13>
    408e:	48 89 ef             	mov    %rbp,%rdi
    4091:	41 bc 03 00 00 00    	mov    $0x3,%r12d
    4097:	e8 b4 90 00 00       	call   d150 <dlmalloc>
    409c:	48 89 c3             	mov    %rax,%rbx
    409f:	48 85 c0             	test   %rax,%rax
    40a2:	74 43                	je     40e7 <sgx_ecall_get_secret+0xe1>
    40a4:	31 c0                	xor    %eax,%eax
    40a6:	48 89 df             	mov    %rbx,%rdi
    40a9:	48 89 e9             	mov    %rbp,%rcx
    40ac:	f3 aa                	rep stos %al,%es:(%rdi)
    40ae:	8b 7c 24 08          	mov    0x8(%rsp),%edi
    40b2:	48 89 ea             	mov    %rbp,%rdx
    40b5:	48 89 de             	mov    %rbx,%rsi
    40b8:	45 31 e4             	xor    %r12d,%r12d
    40bb:	e8 52 e0 ff ff       	call   2112 <ecall_get_secret>
    40c0:	48 85 db             	test   %rbx,%rbx
    40c3:	74 22                	je     40e7 <sgx_ecall_get_secret+0xe1>
    40c5:	4c 89 ef             	mov    %r13,%rdi
    40c8:	48 89 e9             	mov    %rbp,%rcx
    40cb:	48 89 da             	mov    %rbx,%rdx
    40ce:	48 89 ee             	mov    %rbp,%rsi
    40d1:	e8 6a cc 00 00       	call   10d40 <memcpy_verw_s>
    40d6:	45 31 e4             	xor    %r12d,%r12d
    40d9:	48 89 df             	mov    %rbx,%rdi
    40dc:	85 c0                	test   %eax,%eax
    40de:	41 0f 95 c4          	setne  %r12b
    40e2:	e8 59 ae 00 00       	call   ef40 <dlfree>
    40e7:	48 83 c4 28          	add    $0x28,%rsp
    40eb:	44 89 e0             	mov    %r12d,%eax
    40ee:	5b                   	pop    %rbx
    40ef:	5d                   	pop    %rbp
    40f0:	41 5c                	pop    %r12
    40f2:	41 5d                	pop    %r13
    40f4:	c3                   	ret    

00000000000040f5 <sgx_ecall_get_response>:
    40f5:	f3 0f 1e fa          	endbr64 
    40f9:	48 85 ff             	test   %rdi,%rdi
    40fc:	75 0a                	jne    4108 <sgx_ecall_get_response+0x13>
    40fe:	50                   	push   %rax
    40ff:	e8 d8 df ff ff       	call   20dc <ecall_get_response>
    4104:	31 c0                	xor    %eax,%eax
    4106:	5a                   	pop    %rdx
    4107:	c3                   	ret    
    4108:	b8 02 00 00 00       	mov    $0x2,%eax
    410d:	c3                   	ret    

000000000000410e <sgx_ecall_compute_response>:
    410e:	f3 0f 1e fa          	endbr64 
    4112:	48 85 ff             	test   %rdi,%rdi
    4115:	74 57                	je     416e <sgx_ecall_compute_response+0x60>
    4117:	53                   	push   %rbx
    4118:	be 08 00 00 00       	mov    $0x8,%esi
    411d:	48 89 fb             	mov    %rdi,%rbx
    4120:	48 83 ec 10          	sub    $0x10,%rsp
    4124:	e8 b7 1a 00 00       	call   5be0 <sgx_is_outside_enclave>
    4129:	85 c0                	test   %eax,%eax
    412b:	75 07                	jne    4134 <sgx_ecall_compute_response+0x26>
    412d:	b8 02 00 00 00       	mov    $0x2,%eax
    4132:	eb 34                	jmp    4168 <sgx_ecall_compute_response+0x5a>
    4134:	0f ae e8             	lfence 
    4137:	48 89 da             	mov    %rbx,%rdx
    413a:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    413f:	b9 08 00 00 00       	mov    $0x8,%ecx
    4144:	be 08 00 00 00       	mov    $0x8,%esi
    4149:	e8 72 cb 00 00       	call   10cc0 <memcpy_s>
    414e:	89 c2                	mov    %eax,%edx
    4150:	b8 01 00 00 00       	mov    $0x1,%eax
    4155:	85 d2                	test   %edx,%edx
    4157:	75 0f                	jne    4168 <sgx_ecall_compute_response+0x5a>
    4159:	8b 74 24 0c          	mov    0xc(%rsp),%esi
    415d:	8b 7c 24 08          	mov    0x8(%rsp),%edi
    4161:	e8 59 df ff ff       	call   20bf <ecall_compute_response>
    4166:	31 c0                	xor    %eax,%eax
    4168:	48 83 c4 10          	add    $0x10,%rsp
    416c:	5b                   	pop    %rbx
    416d:	c3                   	ret    
    416e:	b8 02 00 00 00       	mov    $0x2,%eax
    4173:	c3                   	ret    

0000000000004174 <sgx_ecall_update_response_loc>:
    4174:	f3 0f 1e fa          	endbr64 
    4178:	48 85 ff             	test   %rdi,%rdi
    417b:	74 54                	je     41d1 <sgx_ecall_update_response_loc+0x5d>
    417d:	53                   	push   %rbx
    417e:	be 08 00 00 00       	mov    $0x8,%esi
    4183:	48 89 fb             	mov    %rdi,%rbx
    4186:	48 83 ec 10          	sub    $0x10,%rsp
    418a:	e8 51 1a 00 00       	call   5be0 <sgx_is_outside_enclave>
    418f:	85 c0                	test   %eax,%eax
    4191:	75 07                	jne    419a <sgx_ecall_update_response_loc+0x26>
    4193:	b8 02 00 00 00       	mov    $0x2,%eax
    4198:	eb 31                	jmp    41cb <sgx_ecall_update_response_loc+0x57>
    419a:	0f ae e8             	lfence 
    419d:	48 89 da             	mov    %rbx,%rdx
    41a0:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    41a5:	b9 08 00 00 00       	mov    $0x8,%ecx
    41aa:	be 08 00 00 00       	mov    $0x8,%esi
    41af:	e8 0c cb 00 00       	call   10cc0 <memcpy_s>
    41b4:	89 c2                	mov    %eax,%edx
    41b6:	b8 01 00 00 00       	mov    $0x1,%eax
    41bb:	85 d2                	test   %edx,%edx
    41bd:	75 0c                	jne    41cb <sgx_ecall_update_response_loc+0x57>
    41bf:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    41c4:	e8 9a de ff ff       	call   2063 <ecall_update_response_loc>
    41c9:	31 c0                	xor    %eax,%eax
    41cb:	48 83 c4 10          	add    $0x10,%rsp
    41cf:	5b                   	pop    %rbx
    41d0:	c3                   	ret    
    41d1:	b8 02 00 00 00       	mov    $0x2,%eax
    41d6:	c3                   	ret    

00000000000041d7 <ocall_print>:
    41d7:	f3 0f 1e fa          	endbr64 
    41db:	41 55                	push   %r13
    41dd:	41 54                	push   %r12
    41df:	55                   	push   %rbp
    41e0:	31 ed                	xor    %ebp,%ebp
    41e2:	53                   	push   %rbx
    41e3:	48 89 fb             	mov    %rdi,%rbx
    41e6:	48 83 ec 28          	sub    $0x28,%rsp
    41ea:	48 85 ff             	test   %rdi,%rdi
    41ed:	74 09                	je     41f8 <ocall_print+0x21>
    41ef:	e8 fc c7 00 00       	call   109f0 <strlen>
    41f4:	48 8d 68 01          	lea    0x1(%rax),%rbp
    41f8:	31 c9                	xor    %ecx,%ecx
    41fa:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
    41ff:	48 85 db             	test   %rbx,%rbx
    4202:	74 1c                	je     4220 <ocall_print+0x49>
    4204:	48 89 ee             	mov    %rbp,%rsi
    4207:	48 89 df             	mov    %rbx,%rdi
    420a:	49 89 ed             	mov    %rbp,%r13
    420d:	e8 6e 19 00 00       	call   5b80 <sgx_is_within_enclave>
    4212:	85 c0                	test   %eax,%eax
    4214:	75 0d                	jne    4223 <ocall_print+0x4c>
    4216:	b8 02 00 00 00       	mov    $0x2,%eax
    421b:	e9 95 00 00 00       	jmp    42b5 <ocall_print+0xde>
    4220:	45 31 ed             	xor    %r13d,%r13d
    4223:	49 8d 7d 08          	lea    0x8(%r13),%rdi
    4227:	48 39 ef             	cmp    %rbp,%rdi
    422a:	73 05                	jae    4231 <ocall_print+0x5a>
    422c:	48 85 db             	test   %rbx,%rbx
    422f:	75 e5                	jne    4216 <ocall_print+0x3f>
    4231:	e8 0a 1a 00 00       	call   5c40 <sgx_ocalloc>
    4236:	49 89 c4             	mov    %rax,%r12
    4239:	48 85 c0             	test   %rax,%rax
    423c:	75 13                	jne    4251 <ocall_print+0x7a>
    423e:	31 d2                	xor    %edx,%edx
    4240:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
    4245:	e8 d6 1a 00 00       	call   5d20 <sgx_ocfree>
    424a:	b8 01 00 00 00       	mov    $0x1,%eax
    424f:	eb 64                	jmp    42b5 <ocall_print+0xde>
    4251:	48 8d 40 08          	lea    0x8(%rax),%rax
    4255:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    425a:	48 85 db             	test   %rbx,%rbx
    425d:	74 39                	je     4298 <ocall_print+0xc1>
    425f:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
    4264:	b9 08 00 00 00       	mov    $0x8,%ecx
    4269:	be 08 00 00 00       	mov    $0x8,%esi
    426e:	4c 89 e7             	mov    %r12,%rdi
    4271:	e8 ca ca 00 00       	call   10d40 <memcpy_verw_s>
    4276:	85 c0                	test   %eax,%eax
    4278:	75 cb                	jne    4245 <ocall_print+0x6e>
    427a:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    427f:	48 89 e9             	mov    %rbp,%rcx
    4282:	48 89 da             	mov    %rbx,%rdx
    4285:	4c 89 ee             	mov    %r13,%rsi
    4288:	e8 b3 ca 00 00       	call   10d40 <memcpy_verw_s>
    428d:	85 c0                	test   %eax,%eax
    428f:	75 b4                	jne    4245 <ocall_print+0x6e>
    4291:	48 01 6c 24 18       	add    %rbp,0x18(%rsp)
    4296:	eb 06                	jmp    429e <ocall_print+0xc7>
    4298:	31 c0                	xor    %eax,%eax
    429a:	49 89 04 24          	mov    %rax,(%r12)
    429e:	4c 89 e6             	mov    %r12,%rsi
    42a1:	31 ff                	xor    %edi,%edi
    42a3:	e8 88 2f 00 00       	call   7230 <sgx_ocall>
    42a8:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    42ac:	e8 6f 1a 00 00       	call   5d20 <sgx_ocfree>
    42b1:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    42b5:	48 83 c4 28          	add    $0x28,%rsp
    42b9:	5b                   	pop    %rbx
    42ba:	5d                   	pop    %rbp
    42bb:	41 5c                	pop    %r12
    42bd:	41 5d                	pop    %r13
    42bf:	c3                   	ret    

00000000000042c0 <ocall_print_address>:
    42c0:	f3 0f 1e fa          	endbr64 
    42c4:	41 55                	push   %r13
    42c6:	41 54                	push   %r12
    42c8:	45 31 e4             	xor    %r12d,%r12d
    42cb:	55                   	push   %rbp
    42cc:	53                   	push   %rbx
    42cd:	48 89 fb             	mov    %rdi,%rbx
    42d0:	48 83 ec 28          	sub    $0x28,%rsp
    42d4:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    42d9:	48 85 ff             	test   %rdi,%rdi
    42dc:	74 09                	je     42e7 <ocall_print_address+0x27>
    42de:	e8 0d c7 00 00       	call   109f0 <strlen>
    42e3:	4c 8d 60 01          	lea    0x1(%rax),%r12
    42e7:	31 c9                	xor    %ecx,%ecx
    42e9:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
    42ee:	48 85 db             	test   %rbx,%rbx
    42f1:	74 1c                	je     430f <ocall_print_address+0x4f>
    42f3:	4c 89 e6             	mov    %r12,%rsi
    42f6:	48 89 df             	mov    %rbx,%rdi
    42f9:	4d 89 e5             	mov    %r12,%r13
    42fc:	e8 7f 18 00 00       	call   5b80 <sgx_is_within_enclave>
    4301:	85 c0                	test   %eax,%eax
    4303:	75 0d                	jne    4312 <ocall_print_address+0x52>
    4305:	b8 02 00 00 00       	mov    $0x2,%eax
    430a:	e9 b7 00 00 00       	jmp    43c6 <ocall_print_address+0x106>
    430f:	45 31 ed             	xor    %r13d,%r13d
    4312:	49 8d 7d 10          	lea    0x10(%r13),%rdi
    4316:	4c 39 e7             	cmp    %r12,%rdi
    4319:	73 05                	jae    4320 <ocall_print_address+0x60>
    431b:	48 85 db             	test   %rbx,%rbx
    431e:	75 e5                	jne    4305 <ocall_print_address+0x45>
    4320:	e8 1b 19 00 00       	call   5c40 <sgx_ocalloc>
    4325:	48 89 c5             	mov    %rax,%rbp
    4328:	48 85 c0             	test   %rax,%rax
    432b:	75 16                	jne    4343 <ocall_print_address+0x83>
    432d:	31 d2                	xor    %edx,%edx
    432f:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
    4334:	e8 e7 19 00 00       	call   5d20 <sgx_ocfree>
    4339:	b8 01 00 00 00       	mov    $0x1,%eax
    433e:	e9 83 00 00 00       	jmp    43c6 <ocall_print_address+0x106>
    4343:	48 8d 40 10          	lea    0x10(%rax),%rax
    4347:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    434c:	48 85 db             	test   %rbx,%rbx
    434f:	74 39                	je     438a <ocall_print_address+0xca>
    4351:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
    4356:	b9 08 00 00 00       	mov    $0x8,%ecx
    435b:	be 08 00 00 00       	mov    $0x8,%esi
    4360:	48 89 ef             	mov    %rbp,%rdi
    4363:	e8 d8 c9 00 00       	call   10d40 <memcpy_verw_s>
    4368:	85 c0                	test   %eax,%eax
    436a:	75 c8                	jne    4334 <ocall_print_address+0x74>
    436c:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    4371:	4c 89 e1             	mov    %r12,%rcx
    4374:	48 89 da             	mov    %rbx,%rdx
    4377:	4c 89 ee             	mov    %r13,%rsi
    437a:	e8 c1 c9 00 00       	call   10d40 <memcpy_verw_s>
    437f:	85 c0                	test   %eax,%eax
    4381:	75 b1                	jne    4334 <ocall_print_address+0x74>
    4383:	4c 01 64 24 18       	add    %r12,0x18(%rsp)
    4388:	eb 06                	jmp    4390 <ocall_print_address+0xd0>
    438a:	31 c0                	xor    %eax,%eax
    438c:	48 89 45 00          	mov    %rax,0x0(%rbp)
    4390:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
    4395:	48 8d 7d 08          	lea    0x8(%rbp),%rdi
    4399:	b9 08 00 00 00       	mov    $0x8,%ecx
    439e:	be 08 00 00 00       	mov    $0x8,%esi
    43a3:	e8 98 c9 00 00       	call   10d40 <memcpy_verw_s>
    43a8:	85 c0                	test   %eax,%eax
    43aa:	75 88                	jne    4334 <ocall_print_address+0x74>
    43ac:	48 89 ee             	mov    %rbp,%rsi
    43af:	bf 01 00 00 00       	mov    $0x1,%edi
    43b4:	e8 77 2e 00 00       	call   7230 <sgx_ocall>
    43b9:	89 44 24 04          	mov    %eax,0x4(%rsp)
    43bd:	e8 5e 19 00 00       	call   5d20 <sgx_ocfree>
    43c2:	8b 44 24 04          	mov    0x4(%rsp),%eax
    43c6:	48 83 c4 28          	add    $0x28,%rsp
    43ca:	5b                   	pop    %rbx
    43cb:	5d                   	pop    %rbp
    43cc:	41 5c                	pop    %r12
    43ce:	41 5d                	pop    %r13
    43d0:	c3                   	ret    
    43d1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    43d8:	00 00 00 
    43db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000043e0 <register_value_select>:
    43e0:	89 f1                	mov    %esi,%ecx
    43e2:	31 c0                	xor    %eax,%eax
    43e4:	48 83 f9 00          	cmp    $0x0,%rcx
    43e8:	48 0f 44 07          	cmove  (%rdi),%rax
    43ec:	48 83 f9 01          	cmp    $0x1,%rcx
    43f0:	48 0f 44 47 08       	cmove  0x8(%rdi),%rax
    43f5:	48 83 f9 02          	cmp    $0x2,%rcx
    43f9:	48 0f 44 47 10       	cmove  0x10(%rdi),%rax
    43fe:	48 83 f9 03          	cmp    $0x3,%rcx
    4402:	48 0f 44 47 18       	cmove  0x18(%rdi),%rax
    4407:	48 83 f9 04          	cmp    $0x4,%rcx
    440b:	48 0f 44 47 20       	cmove  0x20(%rdi),%rax
    4410:	48 83 f9 05          	cmp    $0x5,%rcx
    4414:	48 0f 44 47 28       	cmove  0x28(%rdi),%rax
    4419:	48 83 f9 06          	cmp    $0x6,%rcx
    441d:	48 0f 44 47 30       	cmove  0x30(%rdi),%rax
    4422:	48 83 f9 07          	cmp    $0x7,%rcx
    4426:	48 0f 44 47 38       	cmove  0x38(%rdi),%rax
    442b:	48 83 f9 08          	cmp    $0x8,%rcx
    442f:	48 0f 44 47 40       	cmove  0x40(%rdi),%rax
    4434:	48 83 f9 09          	cmp    $0x9,%rcx
    4438:	48 0f 44 47 48       	cmove  0x48(%rdi),%rax
    443d:	48 83 f9 0a          	cmp    $0xa,%rcx
    4441:	48 0f 44 47 50       	cmove  0x50(%rdi),%rax
    4446:	48 83 f9 0b          	cmp    $0xb,%rcx
    444a:	48 0f 44 47 58       	cmove  0x58(%rdi),%rax
    444f:	48 83 f9 0c          	cmp    $0xc,%rcx
    4453:	48 0f 44 47 60       	cmove  0x60(%rdi),%rax
    4458:	48 83 f9 0d          	cmp    $0xd,%rcx
    445c:	48 0f 44 47 68       	cmove  0x68(%rdi),%rax
    4461:	48 83 f9 0e          	cmp    $0xe,%rcx
    4465:	48 0f 44 47 70       	cmove  0x70(%rdi),%rax
    446a:	48 83 f9 0f          	cmp    $0xf,%rcx
    446e:	48 0f 44 47 78       	cmove  0x78(%rdi),%rax
    4473:	c3                   	ret    
    4474:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    447b:	00 00 00 
    447e:	66 90                	xchg   %ax,%ax

0000000000004480 <ct_decode>:
    4480:	f3 0f 1e fa          	endbr64 
    4484:	55                   	push   %rbp
    4485:	48 89 e5             	mov    %rsp,%rbp
    4488:	41 57                	push   %r15
    448a:	41 56                	push   %r14
    448c:	41 55                	push   %r13
    448e:	41 54                	push   %r12
    4490:	53                   	push   %rbx
    4491:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    4495:	48 81 ec 40 05 00 00 	sub    $0x540,%rsp
    449c:	48 89 7c 24 78       	mov    %rdi,0x78(%rsp)
    44a1:	48 89 74 24 50       	mov    %rsi,0x50(%rsp)
    44a6:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    44ad:	00 00 
    44af:	48 89 84 24 38 05 00 	mov    %rax,0x538(%rsp)
    44b6:	00 
    44b7:	31 c0                	xor    %eax,%eax
    44b9:	48 8d 84 24 00 01 00 	lea    0x100(%rsp),%rax
    44c0:	00 
    44c1:	f6 05 6b 39 01 00 08 	testb  $0x8,0x1396b(%rip)        # 17e33 <g_cpu_feature_indicator+0x3>
    44c8:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    44cd:	0f 84 fd 0f 00 00    	je     54d0 <ct_decode+0x1050>
    44d3:	62 f1 7c 48 29 00    	vmovaps %zmm0,(%rax)
    44d9:	62 f1 7c 48 29 48 01 	vmovaps %zmm1,0x40(%rax)
    44e0:	62 f1 7c 48 29 50 02 	vmovaps %zmm2,0x80(%rax)
    44e7:	62 f1 7c 48 29 58 03 	vmovaps %zmm3,0xc0(%rax)
    44ee:	62 f1 7c 48 29 60 04 	vmovaps %zmm4,0x100(%rax)
    44f5:	62 f1 7c 48 29 68 05 	vmovaps %zmm5,0x140(%rax)
    44fc:	62 f1 7c 48 29 70 06 	vmovaps %zmm6,0x180(%rax)
    4503:	62 f1 7c 48 29 78 07 	vmovaps %zmm7,0x1c0(%rax)
    450a:	62 71 7c 48 29 40 08 	vmovaps %zmm8,0x200(%rax)
    4511:	62 71 7c 48 29 48 09 	vmovaps %zmm9,0x240(%rax)
    4518:	62 71 7c 48 29 50 0a 	vmovaps %zmm10,0x280(%rax)
    451f:	62 71 7c 48 29 58 0b 	vmovaps %zmm11,0x2c0(%rax)
    4526:	62 71 7c 48 29 60 0c 	vmovaps %zmm12,0x300(%rax)
    452d:	62 71 7c 48 29 68 0d 	vmovaps %zmm13,0x340(%rax)
    4534:	62 71 7c 48 29 70 0e 	vmovaps %zmm14,0x380(%rax)
    453b:	62 71 7c 48 29 78 0f 	vmovaps %zmm15,0x3c0(%rax)
    4542:	48 8b 7c 24 78       	mov    0x78(%rsp),%rdi
    4547:	31 c9                	xor    %ecx,%ecx
    4549:	ba f0 0f 00 00       	mov    $0xff0,%edx
    454e:	48 be f0 f0 f0 f0 f0 	movabs $0xf0f0f0f0f0f0f0f0,%rsi
    4555:	f0 f0 f0 
    4558:	c4 e1 f9 6e c6       	vmovq  %rsi,%xmm0
    455d:	c5 f9 6f 25 bb 3b 01 	vmovdqa 0x13bbb(%rip),%xmm4        # 18120 <standard>
    4564:	00 
    4565:	49 bb 80 80 80 80 80 	movabs $0x8080808080808080,%r11
    456c:	80 80 80 
    456f:	c4 e3 5d 38 25 a7 3a 	vinserti128 $0x1,0x13aa7(%rip),%ymm4,%ymm4        # 18020 <extended>
    4576:	01 00 01 
    4579:	4c 8b b7 88 00 00 00 	mov    0x88(%rdi),%r14
    4580:	c4 e2 7d 59 c0       	vpbroadcastq %xmm0,%ymm0
    4585:	c5 79 6f 2d b3 3b 01 	vmovdqa 0x13bb3(%rip),%xmm13        # 18140 <standard+0x20>
    458c:	00 
    458d:	48 bf ff ff ff ff ff 	movabs $0xffffffffffff,%rdi
    4594:	ff 00 00 
    4597:	c4 63 15 38 2d 9f 3a 	vinserti128 $0x1,0x13a9f(%rip),%ymm13,%ymm13        # 18040 <extended+0x20>
    459e:	01 00 01 
    45a1:	c5 79 6f 25 c7 3b 01 	vmovdqa 0x13bc7(%rip),%xmm12        # 18170 <standard+0x50>
    45a8:	00 
    45a9:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    45af:	41 b8 03 00 00 00    	mov    $0x3,%r8d
    45b5:	4c 89 f0             	mov    %r14,%rax
    45b8:	c5 79 6f 1d c0 3b 01 	vmovdqa 0x13bc0(%rip),%xmm11        # 18180 <standard+0x60>
    45bf:	00 
    45c0:	c4 63 1d 38 25 a6 3a 	vinserti128 $0x1,0x13aa6(%rip),%ymm12,%ymm12        # 18070 <extended+0x50>
    45c7:	01 00 01 
    45ca:	4c 89 74 24 68       	mov    %r14,0x68(%rsp)
    45cf:	25 ff 0f 00 00       	and    $0xfff,%eax
    45d4:	c5 79 6f 15 b4 3b 01 	vmovdqa 0x13bb4(%rip),%xmm10        # 18190 <standard+0x70>
    45db:	00 
    45dc:	c4 63 25 38 1d 9a 3a 	vinserti128 $0x1,0x13a9a(%rip),%ymm11,%ymm11        # 18080 <extended+0x60>
    45e3:	01 00 01 
    45e6:	48 3d f0 0f 00 00    	cmp    $0xff0,%rax
    45ec:	c5 79 6f 0d ac 3b 01 	vmovdqa 0x13bac(%rip),%xmm9        # 181a0 <standard+0x80>
    45f3:	00 
    45f4:	c4 63 2d 38 15 92 3a 	vinserti128 $0x1,0x13a92(%rip),%ymm10,%ymm10        # 18090 <extended+0x70>
    45fb:	01 00 01 
    45fe:	0f 96 c1             	setbe  %cl
    4601:	c5 79 6f 05 a7 3b 01 	vmovdqa 0x13ba7(%rip),%xmm8        # 181b0 <standard+0x90>
    4608:	00 
    4609:	c4 63 35 38 0d 8d 3a 	vinserti128 $0x1,0x13a8d(%rip),%ymm9,%ymm9        # 180a0 <extended+0x80>
    4610:	01 00 01 
    4613:	48 83 f9 00          	cmp    $0x0,%rcx
    4617:	48 0f 45 d0          	cmovne %rax,%rdx
    461b:	31 c9                	xor    %ecx,%ecx
    461d:	48 3d f0 0f 00 00    	cmp    $0xff0,%rax
    4623:	c4 63 3d 38 05 83 3a 	vinserti128 $0x1,0x13a83(%rip),%ymm8,%ymm8        # 180b0 <extended+0x90>
    462a:	01 00 01 
    462d:	c5 79 6f 3d ab 3b 01 	vmovdqa 0x13bab(%rip),%xmm15        # 181e0 <standard+0xc0>
    4634:	00 
    4635:	0f 97 c1             	seta   %cl
    4638:	45 31 e4             	xor    %r12d,%r12d
    463b:	2d f0 0f 00 00       	sub    $0xff0,%eax
    4640:	44 89 e3             	mov    %r12d,%ebx
    4643:	45 89 e7             	mov    %r12d,%r15d
    4646:	48 83 f9 00          	cmp    $0x0,%rcx
    464a:	0f 45 d8             	cmovne %eax,%ebx
    464d:	4c 89 f0             	mov    %r14,%rax
    4650:	89 5c 24 4c          	mov    %ebx,0x4c(%rsp)
    4654:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    465a:	48 09 d0             	or     %rdx,%rax
    465d:	c5 fa 6f 28          	vmovdqu (%rax),%xmm5
    4661:	48 63 c3             	movslq %ebx,%rax
    4664:	bb 02 00 00 00       	mov    $0x2,%ebx
    4669:	c4 e1 f9 6e f8       	vmovq  %rax,%xmm7
    466e:	b8 10 00 00 00       	mov    $0x10,%eax
    4673:	41 89 de             	mov    %ebx,%r14d
    4676:	c5 d1 f3 ef          	vpsllq %xmm7,%xmm5,%xmm5
    467a:	c4 c1 f9 6e fb       	vmovq  %r11,%xmm7
    467f:	c4 e2 7d 59 df       	vpbroadcastq %xmm7,%ymm3
    4684:	c4 e2 7d 59 cd       	vpbroadcastq %xmm5,%ymm1
    4689:	c4 e1 f9 7e ea       	vmovq  %xmm5,%rdx
    468e:	c5 fd df d1          	vpandn %ymm1,%ymm0,%ymm2
    4692:	c5 f5 db c8          	vpand  %ymm0,%ymm1,%ymm1
    4696:	c5 f9 ef c0          	vpxor  %xmm0,%xmm0,%xmm0
    469a:	49 89 d2             	mov    %rdx,%r10
    469d:	c5 f5 74 c0          	vpcmpeqb %ymm0,%ymm1,%ymm0
    46a1:	c5 fd df c3          	vpandn %ymm3,%ymm0,%ymm0
    46a5:	c5 fd eb c2          	vpor   %ymm2,%ymm0,%ymm0
    46a9:	c4 62 5d 00 f0       	vpshufb %ymm0,%ymm4,%ymm14
    46ae:	c5 f9 6e c0          	vmovd  %eax,%xmm0
    46b2:	c5 f9 6f 25 76 3a 01 	vmovdqa 0x13a76(%rip),%xmm4        # 18130 <standard+0x10>
    46b9:	00 
    46ba:	c4 e3 5d 38 25 6c 39 	vinserti128 $0x1,0x1396c(%rip),%ymm4,%ymm4        # 18030 <extended+0x10>
    46c1:	01 00 01 
    46c4:	c4 e2 7d 78 c0       	vpbroadcastb %xmm0,%ymm0
    46c9:	b8 20 00 00 00       	mov    $0x20,%eax
    46ce:	c5 7d 7f b4 24 a0 00 	vmovdqa %ymm14,0xa0(%rsp)
    46d5:	00 00 
    46d7:	c5 f5 74 c0          	vpcmpeqb %ymm0,%ymm1,%ymm0
    46db:	c5 fd df c3          	vpandn %ymm3,%ymm0,%ymm0
    46df:	c5 fd eb c2          	vpor   %ymm2,%ymm0,%ymm0
    46e3:	c4 e2 5d 00 f8       	vpshufb %ymm0,%ymm4,%ymm7
    46e8:	c5 f9 6e c0          	vmovd  %eax,%xmm0
    46ec:	b8 30 00 00 00       	mov    $0x30,%eax
    46f1:	c5 f9 6f 25 57 3a 01 	vmovdqa 0x13a57(%rip),%xmm4        # 18150 <standard+0x30>
    46f8:	00 
    46f9:	c4 e3 5d 38 25 4d 39 	vinserti128 $0x1,0x1394d(%rip),%ymm4,%ymm4        # 18050 <extended+0x30>
    4700:	01 00 01 
    4703:	c4 e2 7d 78 c0       	vpbroadcastb %xmm0,%ymm0
    4708:	c5 fd 7f bc 24 e0 00 	vmovdqa %ymm7,0xe0(%rsp)
    470f:	00 00 
    4711:	c5 f9 6f 3d a7 3a 01 	vmovdqa 0x13aa7(%rip),%xmm7        # 181c0 <standard+0xa0>
    4718:	00 
    4719:	c4 e3 45 38 3d 9d 39 	vinserti128 $0x1,0x1399d(%rip),%ymm7,%ymm7        # 180c0 <extended+0xa0>
    4720:	01 00 01 
    4723:	c5 f5 74 c0          	vpcmpeqb %ymm0,%ymm1,%ymm0
    4727:	c5 fd df c3          	vpandn %ymm3,%ymm0,%ymm0
    472b:	c5 fd eb c2          	vpor   %ymm2,%ymm0,%ymm0
    472f:	c4 62 15 00 e8       	vpshufb %ymm0,%ymm13,%ymm13
    4734:	c5 f9 6e c0          	vmovd  %eax,%xmm0
    4738:	b8 40 00 00 00       	mov    $0x40,%eax
    473d:	c4 e2 7d 78 c0       	vpbroadcastb %xmm0,%ymm0
    4742:	c5 f9 6e f0          	vmovd  %eax,%xmm6
    4746:	b8 50 00 00 00       	mov    $0x50,%eax
    474b:	c5 f5 74 c0          	vpcmpeqb %ymm0,%ymm1,%ymm0
    474f:	c4 e2 7d 78 f6       	vpbroadcastb %xmm6,%ymm6
    4754:	c5 f5 74 f6          	vpcmpeqb %ymm6,%ymm1,%ymm6
    4758:	c5 fd df c3          	vpandn %ymm3,%ymm0,%ymm0
    475c:	c5 fd eb c2          	vpor   %ymm2,%ymm0,%ymm0
    4760:	c5 cd df f3          	vpandn %ymm3,%ymm6,%ymm6
    4764:	c4 e2 5d 00 e0       	vpshufb %ymm0,%ymm4,%ymm4
    4769:	c5 f9 6f 05 ef 39 01 	vmovdqa 0x139ef(%rip),%xmm0        # 18160 <standard+0x40>
    4770:	00 
    4771:	c5 cd eb f2          	vpor   %ymm2,%ymm6,%ymm6
    4775:	c4 e3 7d 38 05 e1 38 	vinserti128 $0x1,0x138e1(%rip),%ymm0,%ymm0        # 18060 <extended+0x40>
    477c:	01 00 01 
    477f:	c4 e1 f9 7e e1       	vmovq  %xmm4,%rcx
    4784:	c4 e3 7d 39 e4 01    	vextracti128 $0x1,%ymm4,%xmm4
    478a:	c4 e2 7d 00 c6       	vpshufb %ymm6,%ymm0,%ymm0
    478f:	c5 f9 6e f0          	vmovd  %eax,%xmm6
    4793:	b8 60 00 00 00       	mov    $0x60,%eax
    4798:	c4 e2 7d 78 f6       	vpbroadcastb %xmm6,%ymm6
    479d:	c5 f5 74 f6          	vpcmpeqb %ymm6,%ymm1,%ymm6
    47a1:	c5 cd df f3          	vpandn %ymm3,%ymm6,%ymm6
    47a5:	c5 cd eb f2          	vpor   %ymm2,%ymm6,%ymm6
    47a9:	c4 62 1d 00 e6       	vpshufb %ymm6,%ymm12,%ymm12
    47ae:	c5 f9 6e f0          	vmovd  %eax,%xmm6
    47b2:	b8 70 00 00 00       	mov    $0x70,%eax
    47b7:	c4 e2 7d 78 f6       	vpbroadcastb %xmm6,%ymm6
    47bc:	c5 f5 74 f6          	vpcmpeqb %ymm6,%ymm1,%ymm6
    47c0:	c5 cd df f3          	vpandn %ymm3,%ymm6,%ymm6
    47c4:	c5 cd eb f2          	vpor   %ymm2,%ymm6,%ymm6
    47c8:	c4 62 25 00 de       	vpshufb %ymm6,%ymm11,%ymm11
    47cd:	c5 f9 6e f0          	vmovd  %eax,%xmm6
    47d1:	b8 80 ff ff ff       	mov    $0xffffff80,%eax
    47d6:	c4 e2 7d 78 f6       	vpbroadcastb %xmm6,%ymm6
    47db:	c5 f5 74 f6          	vpcmpeqb %ymm6,%ymm1,%ymm6
    47df:	c5 cd df f3          	vpandn %ymm3,%ymm6,%ymm6
    47e3:	c5 cd eb f2          	vpor   %ymm2,%ymm6,%ymm6
    47e7:	c4 62 2d 00 d6       	vpshufb %ymm6,%ymm10,%ymm10
    47ec:	c5 f9 6e f0          	vmovd  %eax,%xmm6
    47f0:	b8 90 ff ff ff       	mov    $0xffffff90,%eax
    47f5:	c4 e2 7d 78 f6       	vpbroadcastb %xmm6,%ymm6
    47fa:	c5 f5 74 f6          	vpcmpeqb %ymm6,%ymm1,%ymm6
    47fe:	c5 cd df f3          	vpandn %ymm3,%ymm6,%ymm6
    4802:	c5 cd eb f2          	vpor   %ymm2,%ymm6,%ymm6
    4806:	c4 62 35 00 ce       	vpshufb %ymm6,%ymm9,%ymm9
    480b:	c5 f9 6e f0          	vmovd  %eax,%xmm6
    480f:	b8 a0 ff ff ff       	mov    $0xffffffa0,%eax
    4814:	c4 e2 7d 78 f6       	vpbroadcastb %xmm6,%ymm6
    4819:	c5 f5 74 f6          	vpcmpeqb %ymm6,%ymm1,%ymm6
    481d:	c5 cd df f3          	vpandn %ymm3,%ymm6,%ymm6
    4821:	c5 cd eb f2          	vpor   %ymm2,%ymm6,%ymm6
    4825:	c4 62 3d 00 c6       	vpshufb %ymm6,%ymm8,%ymm8
    482a:	c5 f9 6e f0          	vmovd  %eax,%xmm6
    482e:	b8 b0 ff ff ff       	mov    $0xffffffb0,%eax
    4833:	c4 e2 7d 78 f6       	vpbroadcastb %xmm6,%ymm6
    4838:	c5 79 6e f0          	vmovd  %eax,%xmm14
    483c:	b8 c0 ff ff ff       	mov    $0xffffffc0,%eax
    4841:	c5 f5 74 f6          	vpcmpeqb %ymm6,%ymm1,%ymm6
    4845:	c4 42 7d 78 f6       	vpbroadcastb %xmm14,%ymm14
    484a:	c4 41 75 74 f6       	vpcmpeqb %ymm14,%ymm1,%ymm14
    484f:	c5 cd df f3          	vpandn %ymm3,%ymm6,%ymm6
    4853:	c5 cd eb f2          	vpor   %ymm2,%ymm6,%ymm6
    4857:	c5 0d df f3          	vpandn %ymm3,%ymm14,%ymm14
    485b:	c4 e2 45 00 fe       	vpshufb %ymm6,%ymm7,%ymm7
    4860:	c5 f9 6f 35 68 39 01 	vmovdqa 0x13968(%rip),%xmm6        # 181d0 <standard+0xb0>
    4867:	00 
    4868:	c5 0d eb f2          	vpor   %ymm2,%ymm14,%ymm14
    486c:	c4 e3 4d 38 35 5a 38 	vinserti128 $0x1,0x1385a(%rip),%ymm6,%ymm6        # 180d0 <extended+0xb0>
    4873:	01 00 01 
    4876:	c4 63 05 38 3d 60 38 	vinserti128 $0x1,0x13860(%rip),%ymm15,%ymm15        # 180e0 <extended+0xc0>
    487d:	01 00 01 
    4880:	c4 c2 4d 00 f6       	vpshufb %ymm14,%ymm6,%ymm6
    4885:	c5 79 6e f0          	vmovd  %eax,%xmm14
    4889:	b8 d0 ff ff ff       	mov    $0xffffffd0,%eax
    488e:	c4 42 7d 78 f6       	vpbroadcastb %xmm14,%ymm14
    4893:	c4 41 75 74 f6       	vpcmpeqb %ymm14,%ymm1,%ymm14
    4898:	c5 0d df f3          	vpandn %ymm3,%ymm14,%ymm14
    489c:	c5 0d eb f2          	vpor   %ymm2,%ymm14,%ymm14
    48a0:	c4 42 05 00 fe       	vpshufb %ymm14,%ymm15,%ymm15
    48a5:	c5 79 6e f0          	vmovd  %eax,%xmm14
    48a9:	b8 e0 ff ff ff       	mov    $0xffffffe0,%eax
    48ae:	c5 7d 7f bc 24 c0 00 	vmovdqa %ymm15,0xc0(%rsp)
    48b5:	00 00 
    48b7:	c4 42 7d 78 f6       	vpbroadcastb %xmm14,%ymm14
    48bc:	c5 79 6f 3d 2c 39 01 	vmovdqa 0x1392c(%rip),%xmm15        # 181f0 <standard+0xd0>
    48c3:	00 
    48c4:	c4 63 05 38 3d 22 38 	vinserti128 $0x1,0x13822(%rip),%ymm15,%ymm15        # 180f0 <extended+0xd0>
    48cb:	01 00 01 
    48ce:	c4 41 75 74 f6       	vpcmpeqb %ymm14,%ymm1,%ymm14
    48d3:	c5 0d df f3          	vpandn %ymm3,%ymm14,%ymm14
    48d7:	c5 0d eb f2          	vpor   %ymm2,%ymm14,%ymm14
    48db:	c4 42 05 00 fe       	vpshufb %ymm14,%ymm15,%ymm15
    48e0:	c5 79 6e f0          	vmovd  %eax,%xmm14
    48e4:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
    48e9:	c5 7d 7f bc 24 80 00 	vmovdqa %ymm15,0x80(%rsp)
    48f0:	00 00 
    48f2:	c4 42 7d 78 f6       	vpbroadcastb %xmm14,%ymm14
    48f7:	c5 79 6f 3d 01 39 01 	vmovdqa 0x13901(%rip),%xmm15        # 18200 <standard+0xe0>
    48fe:	00 
    48ff:	c4 63 05 38 3d f7 37 	vinserti128 $0x1,0x137f7(%rip),%ymm15,%ymm15        # 18100 <extended+0xe0>
    4906:	01 00 01 
    4909:	c4 41 75 74 f6       	vpcmpeqb %ymm14,%ymm1,%ymm14
    490e:	c5 0d df f3          	vpandn %ymm3,%ymm14,%ymm14
    4912:	c5 0d eb f2          	vpor   %ymm2,%ymm14,%ymm14
    4916:	c4 42 05 00 fe       	vpshufb %ymm14,%ymm15,%ymm15
    491b:	c5 79 6e f0          	vmovd  %eax,%xmm14
    491f:	c4 61 f9 7e e8       	vmovq  %xmm13,%rax
    4924:	48 09 c8             	or     %rcx,%rax
    4927:	c4 42 7d 78 f6       	vpbroadcastb %xmm14,%ymm14
    492c:	c4 e1 f9 7e c1       	vmovq  %xmm0,%rcx
    4931:	48 09 c8             	or     %rcx,%rax
    4934:	c4 c1 75 74 ce       	vpcmpeqb %ymm14,%ymm1,%ymm1
    4939:	c4 61 f9 7e e1       	vmovq  %xmm12,%rcx
    493e:	c5 7d 6f b4 24 a0 00 	vmovdqa 0xa0(%rsp),%ymm14
    4945:	00 00 
    4947:	48 09 c8             	or     %rcx,%rax
    494a:	c4 61 f9 7e d9       	vmovq  %xmm11,%rcx
    494f:	c4 43 7d 39 ed 01    	vextracti128 $0x1,%ymm13,%xmm13
    4955:	48 09 c8             	or     %rcx,%rax
    4958:	c4 61 f9 7e d1       	vmovq  %xmm10,%rcx
    495d:	c5 91 eb e4          	vpor   %xmm4,%xmm13,%xmm4
    4961:	48 09 c8             	or     %rcx,%rax
    4964:	c5 f5 df cb          	vpandn %ymm3,%ymm1,%ymm1
    4968:	c4 61 f9 7e c9       	vmovq  %xmm9,%rcx
    496d:	c5 f9 6f 1d 9b 38 01 	vmovdqa 0x1389b(%rip),%xmm3        # 18210 <standard+0xf0>
    4974:	00 
    4975:	c5 f5 eb ca          	vpor   %ymm2,%ymm1,%ymm1
    4979:	48 09 c8             	or     %rcx,%rax
    497c:	c4 61 f9 7e c1       	vmovq  %xmm8,%rcx
    4981:	48 09 c8             	or     %rcx,%rax
    4984:	c4 e1 f9 7e f9       	vmovq  %xmm7,%rcx
    4989:	c4 e3 65 38 1d 7d 37 	vinserti128 $0x1,0x1377d(%rip),%ymm3,%ymm3        # 18110 <extended+0xf0>
    4990:	01 00 01 
    4993:	48 09 c8             	or     %rcx,%rax
    4996:	c4 e1 f9 7e f1       	vmovq  %xmm6,%rcx
    499b:	c4 61 f9 7e f6       	vmovq  %xmm14,%rsi
    49a0:	c4 e2 65 00 d9       	vpshufb %ymm1,%ymm3,%ymm3
    49a5:	48 09 c8             	or     %rcx,%rax
    49a8:	c5 f9 6f 8c 24 c0 00 	vmovdqa 0xc0(%rsp),%xmm1
    49af:	00 00 
    49b1:	c4 e3 7d 39 c0 01    	vextracti128 $0x1,%ymm0,%xmm0
    49b7:	c5 d9 eb c0          	vpor   %xmm0,%xmm4,%xmm0
    49bb:	c4 43 7d 39 e4 01    	vextracti128 $0x1,%ymm12,%xmm12
    49c1:	c4 43 7d 39 db 01    	vextracti128 $0x1,%ymm11,%xmm11
    49c7:	c5 fd 6f a4 24 c0 00 	vmovdqa 0xc0(%rsp),%ymm4
    49ce:	00 00 
    49d0:	c4 e1 f9 7e c9       	vmovq  %xmm1,%rcx
    49d5:	c4 c1 79 eb c4       	vpor   %xmm12,%xmm0,%xmm0
    49da:	c5 f9 6f 8c 24 80 00 	vmovdqa 0x80(%rsp),%xmm1
    49e1:	00 00 
    49e3:	c4 43 7d 39 d2 01    	vextracti128 $0x1,%ymm10,%xmm10
    49e9:	48 09 c8             	or     %rcx,%rax
    49ec:	c4 c1 79 eb c3       	vpor   %xmm11,%xmm0,%xmm0
    49f1:	c4 43 7d 39 c9 01    	vextracti128 $0x1,%ymm9,%xmm9
    49f7:	c4 e1 f9 7e c9       	vmovq  %xmm1,%rcx
    49fc:	c4 c1 79 eb c2       	vpor   %xmm10,%xmm0,%xmm0
    4a01:	c5 f9 6f 8c 24 e0 00 	vmovdqa 0xe0(%rsp),%xmm1
    4a08:	00 00 
    4a0a:	c4 43 7d 39 c0 01    	vextracti128 $0x1,%ymm8,%xmm8
    4a10:	48 09 c8             	or     %rcx,%rax
    4a13:	c4 61 f9 7e f9       	vmovq  %xmm15,%rcx
    4a18:	c4 c1 79 eb c1       	vpor   %xmm9,%xmm0,%xmm0
    4a1d:	48 09 c8             	or     %rcx,%rax
    4a20:	c4 e1 f9 7e d9       	vmovq  %xmm3,%rcx
    4a25:	c4 c1 79 eb c0       	vpor   %xmm8,%xmm0,%xmm0
    4a2a:	48 09 c8             	or     %rcx,%rax
    4a2d:	c4 e1 f9 7e c9       	vmovq  %xmm1,%rcx
    4a32:	c4 e3 7d 39 ff 01    	vextracti128 $0x1,%ymm7,%xmm7
    4a38:	48 09 f1             	or     %rsi,%rcx
    4a3b:	be 0f 00 00 00       	mov    $0xf,%esi
    4a40:	c5 f9 eb c7          	vpor   %xmm7,%xmm0,%xmm0
    4a44:	c5 fd 6f bc 24 e0 00 	vmovdqa 0xe0(%rsp),%ymm7
    4a4b:	00 00 
    4a4d:	48 09 c8             	or     %rcx,%rax
    4a50:	c4 e3 7d 39 f6 01    	vextracti128 $0x1,%ymm6,%xmm6
    4a56:	c4 43 7d 39 ff 01    	vextracti128 $0x1,%ymm15,%xmm15
    4a5c:	48 21 c7             	and    %rax,%rdi
    4a5f:	25 c0 00 00 00       	and    $0xc0,%eax
    4a64:	c5 f9 eb c6          	vpor   %xmm6,%xmm0,%xmm0
    4a68:	48 83 f8 7f          	cmp    $0x7f,%rax
    4a6c:	49 89 f9             	mov    %rdi,%r9
    4a6f:	c4 e3 7d 39 db 01    	vextracti128 $0x1,%ymm3,%xmm3
    4a75:	0f 97 c0             	seta   %al
    4a78:	0f b6 c0             	movzbl %al,%eax
    4a7b:	48 83 f8 00          	cmp    $0x0,%rax
    4a7f:	41 0f 45 f4          	cmovne %r12d,%esi
    4a83:	48 89 f8             	mov    %rdi,%rax
    4a86:	89 f1                	mov    %esi,%ecx
    4a88:	48 c1 e8 08          	shr    $0x8,%rax
    4a8c:	25 c0 00 00 00       	and    $0xc0,%eax
    4a91:	48 83 f8 7f          	cmp    $0x7f,%rax
    4a95:	0f 97 c0             	seta   %al
    4a98:	c1 e1 08             	shl    $0x8,%ecx
    4a9b:	0f b6 c0             	movzbl %al,%eax
    4a9e:	09 c8                	or     %ecx,%eax
    4aa0:	3d 01 0f 00 00       	cmp    $0xf01,%eax
    4aa5:	0f 94 c0             	sete   %al
    4aa8:	0f b6 c0             	movzbl %al,%eax
    4aab:	48 83 f8 00          	cmp    $0x0,%rax
    4aaf:	41 0f 45 f5          	cmovne %r13d,%esi
    4ab3:	48 89 f8             	mov    %rdi,%rax
    4ab6:	89 f1                	mov    %esi,%ecx
    4ab8:	48 c1 e8 10          	shr    $0x10,%rax
    4abc:	25 c0 00 00 00       	and    $0xc0,%eax
    4ac1:	48 83 f8 7f          	cmp    $0x7f,%rax
    4ac5:	0f 97 c0             	seta   %al
    4ac8:	c1 e1 08             	shl    $0x8,%ecx
    4acb:	0f b6 c0             	movzbl %al,%eax
    4ace:	09 c8                	or     %ecx,%eax
    4ad0:	3d 01 0f 00 00       	cmp    $0xf01,%eax
    4ad5:	0f 94 c0             	sete   %al
    4ad8:	0f b6 c0             	movzbl %al,%eax
    4adb:	48 83 f8 00          	cmp    $0x0,%rax
    4adf:	0f 45 f3             	cmovne %ebx,%esi
    4ae2:	48 89 f8             	mov    %rdi,%rax
    4ae5:	89 f1                	mov    %esi,%ecx
    4ae7:	bb 04 00 00 00       	mov    $0x4,%ebx
    4aec:	48 c1 e8 18          	shr    $0x18,%rax
    4af0:	25 c0 00 00 00       	and    $0xc0,%eax
    4af5:	48 83 f8 7f          	cmp    $0x7f,%rax
    4af9:	0f 97 c0             	seta   %al
    4afc:	c1 e1 08             	shl    $0x8,%ecx
    4aff:	0f b6 c0             	movzbl %al,%eax
    4b02:	09 c8                	or     %ecx,%eax
    4b04:	3d 01 0f 00 00       	cmp    $0xf01,%eax
    4b09:	0f 94 c0             	sete   %al
    4b0c:	0f b6 c0             	movzbl %al,%eax
    4b0f:	48 83 f8 00          	cmp    $0x0,%rax
    4b13:	41 0f 45 f0          	cmovne %r8d,%esi
    4b17:	48 89 f8             	mov    %rdi,%rax
    4b1a:	89 f1                	mov    %esi,%ecx
    4b1c:	48 c1 e8 20          	shr    $0x20,%rax
    4b20:	25 c0 00 00 00       	and    $0xc0,%eax
    4b25:	48 83 f8 7f          	cmp    $0x7f,%rax
    4b29:	0f 97 c0             	seta   %al
    4b2c:	c1 e1 08             	shl    $0x8,%ecx
    4b2f:	0f b6 c0             	movzbl %al,%eax
    4b32:	09 c8                	or     %ecx,%eax
    4b34:	3d 01 0f 00 00       	cmp    $0xf01,%eax
    4b39:	0f 94 c0             	sete   %al
    4b3c:	0f b6 c0             	movzbl %al,%eax
    4b3f:	48 83 f8 00          	cmp    $0x0,%rax
    4b43:	0f 45 f3             	cmovne %ebx,%esi
    4b46:	48 89 f8             	mov    %rdi,%rax
    4b49:	89 f1                	mov    %esi,%ecx
    4b4b:	48 c1 e8 28          	shr    $0x28,%rax
    4b4f:	25 c0 00 00 00       	and    $0xc0,%eax
    4b54:	48 83 f8 7f          	cmp    $0x7f,%rax
    4b58:	0f 97 c0             	seta   %al
    4b5b:	c1 e1 08             	shl    $0x8,%ecx
    4b5e:	0f b6 c0             	movzbl %al,%eax
    4b61:	09 c8                	or     %ecx,%eax
    4b63:	31 c9                	xor    %ecx,%ecx
    4b65:	3d 01 0f 00 00       	cmp    $0xf01,%eax
    4b6a:	b8 05 00 00 00       	mov    $0x5,%eax
    4b6f:	0f 94 c1             	sete   %cl
    4b72:	48 83 f9 00          	cmp    $0x0,%rcx
    4b76:	0f 45 f0             	cmovne %eax,%esi
    4b79:	8d 0c f5 00 00 00 00 	lea    0x0(,%rsi,8),%ecx
    4b80:	49 d3 e9             	shr    %cl,%r9
    4b83:	49 d3 ea             	shr    %cl,%r10
    4b86:	4c 89 d1             	mov    %r10,%rcx
    4b89:	45 89 ca             	mov    %r9d,%r10d
    4b8c:	4c 89 cb             	mov    %r9,%rbx
    4b8f:	48 89 4c 24 70       	mov    %rcx,0x70(%rsp)
    4b94:	41 c0 ea 02          	shr    $0x2,%r10b
    4b98:	31 c9                	xor    %ecx,%ecx
    4b9a:	80 7c 24 70 0f       	cmpb   $0xf,0x70(%rsp)
    4b9f:	0f 94 c1             	sete   %cl
    4ba2:	44 88 94 24 a0 00 00 	mov    %r10b,0xa0(%rsp)
    4ba9:	00 
    4baa:	45 89 e2             	mov    %r12d,%r10d
    4bad:	48 83 f9 00          	cmp    $0x0,%rcx
    4bb1:	45 0f 45 fd          	cmovne %r13d,%r15d
    4bb5:	44 89 c9             	mov    %r9d,%ecx
    4bb8:	45 31 c9             	xor    %r9d,%r9d
    4bbb:	83 e1 f0             	and    $0xfffffff0,%ecx
    4bbe:	80 f9 a0             	cmp    $0xa0,%cl
    4bc1:	41 0f 94 c1          	sete   %r9b
    4bc5:	49 83 f9 00          	cmp    $0x0,%r9
    4bc9:	45 0f 45 d5          	cmovne %r13d,%r10d
    4bcd:	80 f9 b0             	cmp    $0xb0,%cl
    4bd0:	45 89 e1             	mov    %r12d,%r9d
    4bd3:	44 89 54 24 48       	mov    %r10d,0x48(%rsp)
    4bd8:	0f 94 c1             	sete   %cl
    4bdb:	29 f0                	sub    %esi,%eax
    4bdd:	45 31 d2             	xor    %r10d,%r10d
    4be0:	0f b6 c9             	movzbl %cl,%ecx
    4be3:	48 83 f9 00          	cmp    $0x0,%rcx
    4be7:	45 0f 45 cd          	cmovne %r13d,%r9d
    4beb:	8d 0c c5 00 00 00 00 	lea    0x0(,%rax,8),%ecx
    4bf2:	44 89 4c 24 3c       	mov    %r9d,0x3c(%rsp)
    4bf7:	48 b8 ff ff ff ff ff 	movabs $0xffffffffff,%rax
    4bfe:	00 00 00 
    4c01:	48 d3 f8             	sar    %cl,%rax
    4c04:	8d 0c f5 f8 ff ff ff 	lea    -0x8(,%rsi,8),%ecx
    4c0b:	48 21 f8             	and    %rdi,%rax
    4c0e:	49 89 c1             	mov    %rax,%r9
    4c11:	c4 e1 f9 6e d0       	vmovq  %rax,%xmm2
    4c16:	49 d3 e9             	shr    %cl,%r9
    4c19:	c4 c1 f9 6e c9       	vmovq  %r9,%xmm1
    4c1e:	49 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%r9
    4c25:	c4 c3 f1 22 c9 01    	vpinsrq $0x1,%r9,%xmm1,%xmm1
    4c2b:	c5 f1 74 0d 0d e4 00 	vpcmpeqb 0xe40d(%rip),%xmm1,%xmm1        # 13040 <g_dyn_entry_table+0x10>
    4c32:	00 
    4c33:	c4 e1 f9 7e cf       	vmovq  %xmm1,%rdi
    4c38:	c4 c3 e9 22 c9 01    	vpinsrq $0x1,%r9,%xmm2,%xmm1
    4c3e:	45 89 e9             	mov    %r13d,%r9d
    4c41:	c5 f1 74 15 07 e4 00 	vpcmpeqb 0xe407(%rip),%xmm1,%xmm2        # 13050 <g_dyn_entry_table+0x20>
    4c48:	00 
    4c49:	48 85 ff             	test   %rdi,%rdi
    4c4c:	44 89 ef             	mov    %r13d,%edi
    4c4f:	41 0f 94 c2          	sete   %r10b
    4c53:	48 d3 ea             	shr    %cl,%rdx
    4c56:	44 89 e1             	mov    %r12d,%ecx
    4c59:	49 83 fa 00          	cmp    $0x0,%r10
    4c5d:	41 0f 45 fc          	cmovne %r12d,%edi
    4c61:	c4 e1 f9 7e d0       	vmovq  %xmm2,%rax
    4c66:	c5 f1 74 15 f2 e3 00 	vpcmpeqb 0xe3f2(%rip),%xmm1,%xmm2        # 13060 <g_dyn_entry_table+0x30>
    4c6d:	00 
    4c6e:	83 e2 4f             	and    $0x4f,%edx
    4c71:	89 ff                	mov    %edi,%edi
    4c73:	48 83 ff 00          	cmp    $0x0,%rdi
    4c77:	0f 45 ca             	cmovne %edx,%ecx
    4c7a:	31 d2                	xor    %edx,%edx
    4c7c:	48 85 c0             	test   %rax,%rax
    4c7f:	44 89 e8             	mov    %r13d,%eax
    4c82:	89 4c 24 38          	mov    %ecx,0x38(%rsp)
    4c86:	0f 94 c2             	sete   %dl
    4c89:	44 89 e9             	mov    %r13d,%ecx
    4c8c:	48 83 fa 00          	cmp    $0x0,%rdx
    4c90:	41 0f 45 c4          	cmovne %r12d,%eax
    4c94:	89 c2                	mov    %eax,%edx
    4c96:	44 89 e0             	mov    %r12d,%eax
    4c99:	48 83 fa 00          	cmp    $0x0,%rdx
    4c9d:	41 0f 45 c5          	cmovne %r13d,%eax
    4ca1:	c4 e1 f9 7e d2       	vmovq  %xmm2,%rdx
    4ca6:	c5 f1 74 15 c2 e3 00 	vpcmpeqb 0xe3c2(%rip),%xmm1,%xmm2        # 13070 <g_dyn_entry_table+0x40>
    4cad:	00 
    4cae:	48 85 d2             	test   %rdx,%rdx
    4cb1:	0f 94 c2             	sete   %dl
    4cb4:	0f b6 d2             	movzbl %dl,%edx
    4cb7:	48 83 fa 00          	cmp    $0x0,%rdx
    4cbb:	45 0f 45 cc          	cmovne %r12d,%r9d
    4cbf:	c4 e1 f9 7e d2       	vmovq  %xmm2,%rdx
    4cc4:	c5 f1 74 15 b4 e3 00 	vpcmpeqb 0xe3b4(%rip),%xmm1,%xmm2        # 13080 <g_dyn_entry_table+0x50>
    4ccb:	00 
    4ccc:	44 89 4c 24 34       	mov    %r9d,0x34(%rsp)
    4cd1:	49 b9 00 80 80 80 80 	movabs $0x8080808080808000,%r9
    4cd8:	80 80 80 
    4cdb:	48 85 d2             	test   %rdx,%rdx
    4cde:	c5 f1 74 0d aa e3 00 	vpcmpeqb 0xe3aa(%rip),%xmm1,%xmm1        # 13090 <g_dyn_entry_table+0x60>
    4ce5:	00 
    4ce6:	0f 94 c2             	sete   %dl
    4ce9:	0f b6 d2             	movzbl %dl,%edx
    4cec:	48 83 fa 00          	cmp    $0x0,%rdx
    4cf0:	41 0f 45 cc          	cmovne %r12d,%ecx
    4cf4:	c4 e1 f9 7e d2       	vmovq  %xmm2,%rdx
    4cf9:	89 4c 24 30          	mov    %ecx,0x30(%rsp)
    4cfd:	31 c9                	xor    %ecx,%ecx
    4cff:	c4 63 7d 39 f2 01    	vextracti128 $0x1,%ymm14,%xmm2
    4d05:	48 85 d2             	test   %rdx,%rdx
    4d08:	44 89 ea             	mov    %r13d,%edx
    4d0b:	0f 94 c1             	sete   %cl
    4d0e:	48 83 f9 00          	cmp    $0x0,%rcx
    4d12:	41 0f 45 d4          	cmovne %r12d,%edx
    4d16:	89 d2                	mov    %edx,%edx
    4d18:	31 c9                	xor    %ecx,%ecx
    4d1a:	48 83 fa 00          	cmp    $0x0,%rdx
    4d1e:	41 0f 45 c0          	cmovne %r8d,%eax
    4d22:	c4 e1 f9 7e ca       	vmovq  %xmm1,%rdx
    4d27:	c4 e3 7d 39 e1 01    	vextracti128 $0x1,%ymm4,%xmm1
    4d2d:	41 89 c0             	mov    %eax,%r8d
    4d30:	c5 fd 6f a4 24 80 00 	vmovdqa 0x80(%rsp),%ymm4
    4d37:	00 00 
    4d39:	c5 f9 eb c1          	vpor   %xmm1,%xmm0,%xmm0
    4d3d:	48 85 d2             	test   %rdx,%rdx
    4d40:	44 89 ea             	mov    %r13d,%edx
    4d43:	c4 e3 7d 39 e1 01    	vextracti128 $0x1,%ymm4,%xmm1
    4d49:	0f 94 c1             	sete   %cl
    4d4c:	c5 f9 eb c1          	vpor   %xmm1,%xmm0,%xmm0
    4d50:	c4 e3 7d 39 f9 01    	vextracti128 $0x1,%ymm7,%xmm1
    4d56:	c4 c1 79 eb c7       	vpor   %xmm15,%xmm0,%xmm0
    4d5b:	c5 f1 eb ca          	vpor   %xmm2,%xmm1,%xmm1
    4d5f:	c5 f9 eb c3          	vpor   %xmm3,%xmm0,%xmm0
    4d63:	c5 f9 eb c1          	vpor   %xmm1,%xmm0,%xmm0
    4d67:	48 83 f9 00          	cmp    $0x0,%rcx
    4d6b:	41 0f 45 d4          	cmovne %r12d,%edx
    4d6f:	c4 e1 f9 7e c0       	vmovq  %xmm0,%rax
    4d74:	8d 0c f5 08 00 00 00 	lea    0x8(,%rsi,8),%ecx
    4d7b:	89 d2                	mov    %edx,%edx
    4d7d:	44 01 fe             	add    %r15d,%esi
    4d80:	48 d3 f8             	sar    %cl,%rax
    4d83:	44 89 f9             	mov    %r15d,%ecx
    4d86:	48 83 fa 00          	cmp    $0x0,%rdx
    4d8a:	45 0f 45 c6          	cmovne %r14d,%r8d
    4d8e:	89 c2                	mov    %eax,%edx
    4d90:	44 89 44 24 5c       	mov    %r8d,0x5c(%rsp)
    4d95:	41 89 f0             	mov    %esi,%r8d
    4d98:	45 89 e6             	mov    %r12d,%r14d
    4d9b:	c0 ea 04             	shr    $0x4,%dl
    4d9e:	41 89 d2             	mov    %edx,%r10d
    4da1:	8b 94 24 a0 00 00 00 	mov    0xa0(%rsp),%edx
    4da8:	89 b4 24 e0 00 00 00 	mov    %esi,0xe0(%rsp)
    4daf:	41 83 e2 03          	and    $0x3,%r10d
    4db3:	48 89 5c 24 40       	mov    %rbx,0x40(%rsp)
    4db8:	83 e2 03             	and    $0x3,%edx
    4dbb:	48 83 f9 00          	cmp    $0x0,%rcx
    4dbf:	41 0f 45 d2          	cmovne %r10d,%edx
    4dc3:	41 8d 48 01          	lea    0x1(%r8),%ecx
    4dc7:	0f b6 c9             	movzbl %cl,%ecx
    4dca:	4c 09 c9             	or     %r9,%rcx
    4dcd:	c4 e1 f9 6e f9       	vmovq  %rcx,%xmm7
    4dd2:	c4 c3 c1 22 c3 01    	vpinsrq $0x1,%r11,%xmm7,%xmm0
    4dd8:	c4 e2 51 00 c0       	vpshufb %xmm0,%xmm5,%xmm0
    4ddd:	c4 e1 f9 7e c1       	vmovq  %xmm0,%rcx
    4de2:	89 ce                	mov    %ecx,%esi
    4de4:	41 89 c8             	mov    %ecx,%r8d
    4de7:	40 c0 ee 03          	shr    $0x3,%sil
    4deb:	41 c0 e8 06          	shr    $0x6,%r8b
    4def:	89 f7                	mov    %esi,%edi
    4df1:	44 88 44 24 64       	mov    %r8b,0x64(%rsp)
    4df6:	83 e7 07             	and    $0x7,%edi
    4df9:	40 88 7c 24 60       	mov    %dil,0x60(%rsp)
    4dfe:	89 cf                	mov    %ecx,%edi
    4e00:	83 e1 c7             	and    $0xffffffc7,%ecx
    4e03:	88 8c 24 c0 00 00 00 	mov    %cl,0xc0(%rsp)
    4e0a:	83 e7 07             	and    $0x7,%edi
    4e0d:	31 c9                	xor    %ecx,%ecx
    4e0f:	41 80 f8 03          	cmp    $0x3,%r8b
    4e13:	41 89 d8             	mov    %ebx,%r8d
    4e16:	0f 95 c1             	setne  %cl
    4e19:	40 88 bc 24 80 00 00 	mov    %dil,0x80(%rsp)
    4e20:	00 
    4e21:	83 e6 07             	and    $0x7,%esi
    4e24:	41 83 e0 30          	and    $0x30,%r8d
    4e28:	01 f6                	add    %esi,%esi
    4e2a:	48 83 f9 00          	cmp    $0x0,%rcx
    4e2e:	45 0f 45 f5          	cmovne %r13d,%r14d
    4e32:	44 89 c1             	mov    %r8d,%ecx
    4e35:	41 89 d8             	mov    %ebx,%r8d
    4e38:	31 db                	xor    %ebx,%ebx
    4e3a:	41 c0 e8 06          	shr    $0x6,%r8b
    4e3e:	41 0f b6 f8          	movzbl %r8b,%edi
    4e42:	49 b8 aa 6a aa aa a5 	movabs $0x155a55a5aaaa6aaa,%r8
    4e49:	55 5a 15 
    4e4c:	40 80 ff 03          	cmp    $0x3,%dil
    4e50:	0f 94 c3             	sete   %bl
    4e53:	01 f1                	add    %esi,%ecx
    4e55:	49 d3 e8             	shr    %cl,%r8
    4e58:	0f b6 4c 24 60       	movzbl 0x60(%rsp),%ecx
    4e5d:	41 83 e0 03          	and    $0x3,%r8d
    4e61:	48 83 fb 00          	cmp    $0x0,%rbx
    4e65:	41 0f 45 d0          	cmovne %r8d,%edx
    4e69:	41 b8 4c 00 00 00    	mov    $0x4c,%r8d
    4e6f:	44 89 e3             	mov    %r12d,%ebx
    4e72:	49 d3 e8             	shr    %cl,%r8
    4e75:	0f b6 4c 24 70       	movzbl 0x70(%rsp),%ecx
    4e7a:	41 83 e0 01          	and    $0x1,%r8d
    4e7e:	c1 e1 04             	shl    $0x4,%ecx
    4e81:	49 83 f8 00          	cmp    $0x0,%r8
    4e85:	41 0f 45 dd          	cmovne %r13d,%ebx
    4e89:	01 df                	add    %ebx,%edi
    4e8b:	45 89 e0             	mov    %r12d,%r8d
    4e8e:	09 f9                	or     %edi,%ecx
    4e90:	89 c7                	mov    %eax,%edi
    4e92:	81 f9 f4 0f 00 00    	cmp    $0xff4,%ecx
    4e98:	0f 94 c1             	sete   %cl
    4e9b:	40 c0 ef 06          	shr    $0x6,%dil
    4e9f:	31 db                	xor    %ebx,%ebx
    4ea1:	0f b6 c9             	movzbl %cl,%ecx
    4ea4:	40 0f b6 ff          	movzbl %dil,%edi
    4ea8:	48 83 f9 00          	cmp    $0x0,%rcx
    4eac:	45 0f 45 c5          	cmovne %r13d,%r8d
    4eb0:	44 89 44 24 2c       	mov    %r8d,0x2c(%rsp)
    4eb5:	45 89 f8             	mov    %r15d,%r8d
    4eb8:	0f b6 4c 24 5c       	movzbl 0x5c(%rsp),%ecx
    4ebd:	41 c1 e0 04          	shl    $0x4,%r8d
    4ec1:	c5 fb f0 0d 47 31 01 	vlddqu 0x13147(%rip),%xmm1        # 18010 <extension_2op_table>
    4ec8:	00 
    4ec9:	41 09 f8             	or     %edi,%r8d
    4ecc:	41 83 f8 11          	cmp    $0x11,%r8d
    4ed0:	0f 94 c3             	sete   %bl
    4ed3:	01 c9                	add    %ecx,%ecx
    4ed5:	c0 e8 03             	shr    $0x3,%al
    4ed8:	42 8d 0c d1          	lea    (%rcx,%r10,8),%ecx
    4edc:	41 ba 1a 05 0a 00    	mov    $0xa051a,%r10d
    4ee2:	83 e0 07             	and    $0x7,%eax
    4ee5:	41 d3 ea             	shr    %cl,%r10d
    4ee8:	41 83 e2 03          	and    $0x3,%r10d
    4eec:	48 83 fb 00          	cmp    $0x0,%rbx
    4ef0:	41 0f 45 d2          	cmovne %r10d,%edx
    4ef4:	44 8d 14 00          	lea    (%rax,%rax,1),%r10d
    4ef8:	41 8d 4a 01          	lea    0x1(%r10),%ecx
    4efc:	c1 e1 08             	shl    $0x8,%ecx
    4eff:	44 09 d1             	or     %r10d,%ecx
    4f02:	41 83 f8 13          	cmp    $0x13,%r8d
    4f06:	c5 f9 6e f9          	vmovd  %ecx,%xmm7
    4f0a:	89 f1                	mov    %esi,%ecx
    4f0c:	0f b6 74 24 64       	movzbl 0x64(%rsp),%esi
    4f11:	41 0f 94 c0          	sete   %r8b
    4f15:	41 c1 e7 0c          	shl    $0xc,%r15d
    4f19:	c5 f9 70 c7 00       	vpshufd $0x0,%xmm7,%xmm0
    4f1e:	45 0f b6 c0          	movzbl %r8b,%r8d
    4f22:	c1 e7 08             	shl    $0x8,%edi
    4f25:	c4 e2 71 00 c0       	vpshufb %xmm0,%xmm1,%xmm0
    4f2a:	89 74 24 64          	mov    %esi,0x64(%rsp)
    4f2e:	c4 c1 f9 7e c2       	vmovq  %xmm0,%r10
    4f33:	41 d3 ea             	shr    %cl,%r10d
    4f36:	41 83 e2 03          	and    $0x3,%r10d
    4f3a:	49 83 f8 00          	cmp    $0x0,%r8
    4f3e:	41 0f 45 d2          	cmovne %r10d,%edx
    4f42:	41 89 f0             	mov    %esi,%r8d
    4f45:	c1 e6 04             	shl    $0x4,%esi
    4f48:	44 8b 94 24 e0 00 00 	mov    0xe0(%rsp),%r10d
    4f4f:	00 
    4f50:	41 09 f7             	or     %esi,%r15d
    4f53:	89 74 24 60          	mov    %esi,0x60(%rsp)
    4f57:	41 09 c7             	or     %eax,%r15d
    4f5a:	31 c0                	xor    %eax,%eax
    4f5c:	41 09 ff             	or     %edi,%r15d
    4f5f:	41 81 ff 32 13 00 00 	cmp    $0x1332,%r15d
    4f66:	44 0f b6 bc 24 c0 00 	movzbl 0xc0(%rsp),%r15d
    4f6d:	00 00 
    4f6f:	0f 97 c0             	seta   %al
    4f72:	48 83 f8 00          	cmp    $0x0,%rax
    4f76:	41 0f 45 d4          	cmovne %r12d,%edx
    4f7a:	31 c0                	xor    %eax,%eax
    4f7c:	41 80 f8 03          	cmp    $0x3,%r8b
    4f80:	0f 94 c0             	sete   %al
    4f83:	48 83 f8 00          	cmp    $0x0,%rax
    4f87:	41 0f 45 d4          	cmovne %r12d,%edx
    4f8b:	89 54 24 28          	mov    %edx,0x28(%rsp)
    4f8f:	44 89 d2             	mov    %r10d,%edx
    4f92:	8d 42 02             	lea    0x2(%rdx),%eax
    4f95:	0f b6 c0             	movzbl %al,%eax
    4f98:	48 89 c2             	mov    %rax,%rdx
    4f9b:	48 8d 48 01          	lea    0x1(%rax),%rcx
    4f9f:	4c 09 ca             	or     %r9,%rdx
    4fa2:	48 c1 e1 08          	shl    $0x8,%rcx
    4fa6:	c4 e1 f9 6e c2       	vmovq  %rdx,%xmm0
    4fab:	48 8d 50 03          	lea    0x3(%rax),%rdx
    4faf:	48 c1 e2 18          	shl    $0x18,%rdx
    4fb3:	c4 c3 f9 22 c3 01    	vpinsrq $0x1,%r11,%xmm0,%xmm0
    4fb9:	48 09 ca             	or     %rcx,%rdx
    4fbc:	c4 e2 51 00 c0       	vpshufb %xmm0,%xmm5,%xmm0
    4fc1:	48 b9 00 00 00 00 80 	movabs $0x8080808000000000,%rcx
    4fc8:	80 80 80 
    4fcb:	48 09 c2             	or     %rax,%rdx
    4fce:	48 83 c0 02          	add    $0x2,%rax
    4fd2:	c4 c1 f9 7e c0       	vmovq  %xmm0,%r8
    4fd7:	48 c1 e0 10          	shl    $0x10,%rax
    4fdb:	48 09 d0             	or     %rdx,%rax
    4fde:	44 89 d2             	mov    %r10d,%edx
    4fe1:	83 c2 03             	add    $0x3,%edx
    4fe4:	48 09 c8             	or     %rcx,%rax
    4fe7:	0f b6 d2             	movzbl %dl,%edx
    4fea:	c4 e1 f9 6e e0       	vmovq  %rax,%xmm4
    4fef:	48 8d 72 01          	lea    0x1(%rdx),%rsi
    4ff3:	48 8d 42 03          	lea    0x3(%rdx),%rax
    4ff7:	c4 c3 d9 22 c3 01    	vpinsrq $0x1,%r11,%xmm4,%xmm0
    4ffd:	48 c1 e6 08          	shl    $0x8,%rsi
    5001:	48 c1 e0 18          	shl    $0x18,%rax
    5005:	c4 e2 51 00 c0       	vpshufb %xmm0,%xmm5,%xmm0
    500a:	48 09 f0             	or     %rsi,%rax
    500d:	48 8d 72 02          	lea    0x2(%rdx),%rsi
    5011:	c4 e1 f9 7e c3       	vmovq  %xmm0,%rbx
    5016:	48 09 d0             	or     %rdx,%rax
    5019:	48 c1 e6 10          	shl    $0x10,%rsi
    501d:	4c 09 ca             	or     %r9,%rdx
    5020:	48 89 5c 24 70       	mov    %rbx,0x70(%rsp)
    5025:	48 09 f0             	or     %rsi,%rax
    5028:	c4 e1 f9 6e e2       	vmovq  %rdx,%xmm4
    502d:	bb 04 00 00 00       	mov    $0x4,%ebx
    5032:	44 89 e2             	mov    %r12d,%edx
    5035:	48 09 c8             	or     %rcx,%rax
    5038:	31 c9                	xor    %ecx,%ecx
    503a:	41 80 ff 05          	cmp    $0x5,%r15b
    503e:	44 89 e6             	mov    %r12d,%esi
    5041:	c4 e1 f9 6e f8       	vmovq  %rax,%xmm7
    5046:	0f 94 c1             	sete   %cl
    5049:	45 89 c1             	mov    %r8d,%r9d
    504c:	45 31 d2             	xor    %r10d,%r10d
    504f:	c4 c3 c1 22 c3 01    	vpinsrq $0x1,%r11,%xmm7,%xmm0
    5055:	c4 e2 51 00 c0       	vpshufb %xmm0,%xmm5,%xmm0
    505a:	c4 e1 f9 7e c0       	vmovq  %xmm0,%rax
    505f:	c4 c3 d9 22 c3 01    	vpinsrq $0x1,%r11,%xmm4,%xmm0
    5065:	45 89 f3             	mov    %r14d,%r11d
    5068:	48 83 f9 00          	cmp    $0x0,%rcx
    506c:	0f 45 54 24 70       	cmovne 0x70(%rsp),%edx
    5071:	48 83 f9 00          	cmp    $0x0,%rcx
    5075:	0f 45 f3             	cmovne %ebx,%esi
    5078:	0f b6 8c 24 80 00 00 	movzbl 0x80(%rsp),%ecx
    507f:	00 
    5080:	41 c1 e3 08          	shl    $0x8,%r11d
    5084:	c4 e2 51 00 e8       	vpshufb %xmm0,%xmm5,%xmm5
    5089:	89 4c 24 5c          	mov    %ecx,0x5c(%rsp)
    508d:	44 09 d9             	or     %r11d,%ecx
    5090:	81 f9 04 01 00 00    	cmp    $0x104,%ecx
    5096:	41 0f 94 c2          	sete   %r10b
    509a:	41 c0 e9 06          	shr    $0x6,%r9b
    509e:	41 0f b6 c9          	movzbl %r9b,%ecx
    50a2:	41 b9 ff 00 00 00    	mov    $0xff,%r9d
    50a8:	41 c1 e6 10          	shl    $0x10,%r14d
    50ac:	44 89 cf             	mov    %r9d,%edi
    50af:	49 83 fa 00          	cmp    $0x0,%r10
    50b3:	0f 45 f9             	cmovne %ecx,%edi
    50b6:	44 89 e1             	mov    %r12d,%ecx
    50b9:	89 7c 24 24          	mov    %edi,0x24(%rsp)
    50bd:	8b 7c 24 38          	mov    0x38(%rsp),%edi
    50c1:	49 83 fa 00          	cmp    $0x0,%r10
    50c5:	41 0f 45 cd          	cmovne %r13d,%ecx
    50c9:	8d 74 0e 01          	lea    0x1(%rsi,%rcx,1),%esi
    50cd:	89 74 24 58          	mov    %esi,0x58(%rsp)
    50d1:	44 89 c6             	mov    %r8d,%esi
    50d4:	40 c0 ee 03          	shr    $0x3,%sil
    50d8:	89 f1                	mov    %esi,%ecx
    50da:	8d 34 bd 00 00 00 00 	lea    0x0(,%rdi,4),%esi
    50e1:	83 e6 08             	and    $0x8,%esi
    50e4:	83 e1 07             	and    $0x7,%ecx
    50e7:	09 f1                	or     %esi,%ecx
    50e9:	44 89 ce             	mov    %r9d,%esi
    50ec:	49 83 fa 00          	cmp    $0x0,%r10
    50f0:	0f 45 f1             	cmovne %ecx,%esi
    50f3:	8d 0c fd 00 00 00 00 	lea    0x0(,%rdi,8),%ecx
    50fa:	44 89 c7             	mov    %r8d,%edi
    50fd:	89 74 24 38          	mov    %esi,0x38(%rsp)
    5101:	45 0f b6 c0          	movzbl %r8b,%r8d
    5105:	83 e7 07             	and    $0x7,%edi
    5108:	83 e1 08             	and    $0x8,%ecx
    510b:	89 fe                	mov    %edi,%esi
    510d:	44 89 e7             	mov    %r12d,%edi
    5110:	09 ce                	or     %ecx,%esi
    5112:	49 83 fa 00          	cmp    $0x0,%r10
    5116:	0f 45 fe             	cmovne %esi,%edi
    5119:	89 fe                	mov    %edi,%esi
    511b:	41 0f b6 ff          	movzbl %r15b,%edi
    511f:	41 89 f7             	mov    %esi,%r15d
    5122:	89 74 24 20          	mov    %esi,0x20(%rsp)
    5126:	41 c1 e7 08          	shl    $0x8,%r15d
    512a:	44 89 fe             	mov    %r15d,%esi
    512d:	45 31 ff             	xor    %r15d,%r15d
    5130:	81 e6 00 07 00 00    	and    $0x700,%esi
    5136:	44 09 f6             	or     %r14d,%esi
    5139:	09 fe                	or     %edi,%esi
    513b:	81 fe 04 05 01 00    	cmp    $0x10504,%esi
    5141:	44 89 e6             	mov    %r12d,%esi
    5144:	41 0f 94 c7          	sete   %r15b
    5148:	41 09 fb             	or     %edi,%r11d
    514b:	44 89 e7             	mov    %r12d,%edi
    514e:	49 83 ff 00          	cmp    $0x0,%r15
    5152:	0f 45 f3             	cmovne %ebx,%esi
    5155:	49 83 ff 00          	cmp    $0x0,%r15
    5159:	0f 45 d0             	cmovne %eax,%edx
    515c:	44 8b 7c 24 58       	mov    0x58(%rsp),%r15d
    5161:	41 01 f7             	add    %esi,%r15d
    5164:	c4 e1 f9 7e ee       	vmovq  %xmm5,%rsi
    5169:	44 89 fb             	mov    %r15d,%ebx
    516c:	45 31 ff             	xor    %r15d,%r15d
    516f:	41 81 fb 44 01 00 00 	cmp    $0x144,%r11d
    5176:	40 0f b6 f6          	movzbl %sil,%esi
    517a:	41 0f 94 c7          	sete   %r15b
    517e:	49 83 ff 00          	cmp    $0x0,%r15
    5182:	0f 45 fe             	cmovne %esi,%edi
    5185:	44 89 e6             	mov    %r12d,%esi
    5188:	49 83 ff 00          	cmp    $0x0,%r15
    518c:	41 0f 45 f5          	cmovne %r13d,%esi
    5190:	01 de                	add    %ebx,%esi
    5192:	41 81 fb 84 01 00 00 	cmp    $0x184,%r11d
    5199:	41 bf 04 00 00 00    	mov    $0x4,%r15d
    519f:	8b 5c 24 5c          	mov    0x5c(%rsp),%ebx
    51a3:	41 0f 94 c3          	sete   %r11b
    51a7:	45 0f b6 db          	movzbl %r11b,%r11d
    51ab:	49 83 fb 00          	cmp    $0x0,%r11
    51af:	0f 45 d0             	cmovne %eax,%edx
    51b2:	44 89 e0             	mov    %r12d,%eax
    51b5:	49 83 fb 00          	cmp    $0x0,%r11
    51b9:	41 0f 45 c7          	cmovne %r15d,%eax
    51bd:	45 31 db             	xor    %r11d,%r11d
    51c0:	01 c6                	add    %eax,%esi
    51c2:	80 bc 24 80 00 00 00 	cmpb   $0x4,0x80(%rsp)
    51c9:	04 
    51ca:	44 89 e0             	mov    %r12d,%eax
    51cd:	41 0f 95 c3          	setne  %r11b
    51d1:	49 83 fb 00          	cmp    $0x0,%r11
    51d5:	41 0f 45 c5          	cmovne %r13d,%eax
    51d9:	44 8b 5c 24 64       	mov    0x64(%rsp),%r11d
    51de:	c1 e0 08             	shl    $0x8,%eax
    51e1:	44 09 f0             	or     %r14d,%eax
    51e4:	44 09 d8             	or     %r11d,%eax
    51e7:	45 31 db             	xor    %r11d,%r11d
    51ea:	3d 01 01 01 00       	cmp    $0x10101,%eax
    51ef:	41 0f 94 c3          	sete   %r11b
    51f3:	49 83 fb 00          	cmp    $0x0,%r11
    51f7:	41 0f 45 f8          	cmovne %r8d,%edi
    51fb:	45 89 e0             	mov    %r12d,%r8d
    51fe:	49 83 fb 00          	cmp    $0x0,%r11
    5202:	45 0f 45 c5          	cmovne %r13d,%r8d
    5206:	41 01 f0             	add    %esi,%r8d
    5209:	3d 02 01 01 00       	cmp    $0x10102,%eax
    520e:	4c 0f be df          	movsbq %dil,%r11
    5212:	44 89 e6             	mov    %r12d,%esi
    5215:	0f 94 c0             	sete   %al
    5218:	09 d9                	or     %ebx,%ecx
    521a:	0f b6 c0             	movzbl %al,%eax
    521d:	49 83 fa 00          	cmp    $0x0,%r10
    5221:	41 0f 45 cf          	cmovne %r15d,%ecx
    5225:	48 83 f8 00          	cmp    $0x0,%rax
    5229:	41 0f 45 f7          	cmovne %r15d,%esi
    522d:	48 83 f8 00          	cmp    $0x0,%rax
    5231:	0f 45 54 24 70       	cmovne 0x70(%rsp),%edx
    5236:	41 01 f0             	add    %esi,%r8d
    5239:	31 c0                	xor    %eax,%eax
    523b:	8b 74 24 20          	mov    0x20(%rsp),%esi
    523f:	4d 85 db             	test   %r11,%r11
    5242:	0f 94 c0             	sete   %al
    5245:	89 d2                	mov    %edx,%edx
    5247:	41 89 da             	mov    %ebx,%r10d
    524a:	48 83 f8 00          	cmp    $0x0,%rax
    524e:	4c 0f 45 da          	cmovne %rdx,%r11
    5252:	31 d2                	xor    %edx,%edx
    5254:	80 bc 24 c0 00 00 00 	cmpb   $0x4,0xc0(%rsp)
    525b:	04 
    525c:	0f b6 c1             	movzbl %cl,%eax
    525f:	44 8b 7c 24 60       	mov    0x60(%rsp),%r15d
    5264:	0f 94 c2             	sete   %dl
    5267:	48 8b 7c 24 78       	mov    0x78(%rsp),%rdi
    526c:	48 83 fa 00          	cmp    $0x0,%rdx
    5270:	41 0f 45 c1          	cmovne %r9d,%eax
    5274:	89 f2                	mov    %esi,%edx
    5276:	83 e2 07             	and    $0x7,%edx
    5279:	44 09 fa             	or     %r15d,%edx
    527c:	83 fa 05             	cmp    $0x5,%edx
    527f:	0f 94 c2             	sete   %dl
    5282:	0f b6 d2             	movzbl %dl,%edx
    5285:	48 83 fa 00          	cmp    $0x0,%rdx
    5289:	41 0f 45 f1          	cmovne %r9d,%esi
    528d:	31 d2                	xor    %edx,%edx
    528f:	80 f9 04             	cmp    $0x4,%cl
    5292:	0f 94 c2             	sete   %dl
    5295:	45 09 fa             	or     %r15d,%r10d
    5298:	48 83 fa 00          	cmp    $0x0,%rdx
    529c:	0f 45 c6             	cmovne %esi,%eax
    529f:	31 d2                	xor    %edx,%edx
    52a1:	41 83 fa 05          	cmp    $0x5,%r10d
    52a5:	89 c6                	mov    %eax,%esi
    52a7:	b8 10 00 00 00       	mov    $0x10,%eax
    52ac:	0f 94 c2             	sete   %dl
    52af:	31 db                	xor    %ebx,%ebx
    52b1:	48 83 fa 00          	cmp    $0x0,%rdx
    52b5:	0f 45 f0             	cmovne %eax,%esi
    52b8:	e8 23 f1 ff ff       	call   43e0 <register_value_select>
    52bd:	89 f1                	mov    %esi,%ecx
    52bf:	8b 74 24 38          	mov    0x38(%rsp),%esi
    52c3:	4c 8b 74 24 68       	mov    0x68(%rsp),%r14
    52c8:	44 8b 54 24 34       	mov    0x34(%rsp),%r10d
    52cd:	48 89 c2             	mov    %rax,%rdx
    52d0:	31 c0                	xor    %eax,%eax
    52d2:	48 83 f9 10          	cmp    $0x10,%rcx
    52d6:	49 0f 44 d6          	cmove  %r14,%rdx
    52da:	48 81 f9 ff 00 00 00 	cmp    $0xff,%rcx
    52e1:	48 0f 44 d3          	cmove  %rbx,%rdx
    52e5:	89 d1                	mov    %edx,%ecx
    52e7:	49 83 fa 01          	cmp    $0x1,%r10
    52eb:	48 0f 44 d1          	cmove  %rcx,%rdx
    52ef:	83 fe 04             	cmp    $0x4,%esi
    52f2:	0f 94 c0             	sete   %al
    52f5:	48 83 f8 00          	cmp    $0x0,%rax
    52f9:	41 0f 45 f1          	cmovne %r9d,%esi
    52fd:	e8 de f0 ff ff       	call   43e0 <register_value_select>
    5302:	44 8b 4c 24 28       	mov    0x28(%rsp),%r9d
    5307:	89 f6                	mov    %esi,%esi
    5309:	48 83 fe 10          	cmp    $0x10,%rsi
    530d:	49 0f 44 c6          	cmove  %r14,%rax
    5311:	48 81 fe ff 00 00 00 	cmp    $0xff,%rsi
    5318:	48 0f 44 c3          	cmove  %rbx,%rax
    531c:	89 c1                	mov    %eax,%ecx
    531e:	41 be 02 00 00 00    	mov    $0x2,%r14d
    5324:	49 83 fa 01          	cmp    $0x1,%r10
    5328:	48 0f 44 c1          	cmove  %rcx,%rax
    532c:	45 85 c9             	test   %r9d,%r9d
    532f:	44 89 e9             	mov    %r13d,%ecx
    5332:	40 0f 94 c6          	sete   %sil
    5336:	40 0f b6 f6          	movzbl %sil,%esi
    533a:	48 83 fe 00          	cmp    $0x0,%rsi
    533e:	41 0f 45 cc          	cmovne %r12d,%ecx
    5342:	41 01 c8             	add    %ecx,%r8d
    5345:	0f b6 4c 24 24       	movzbl 0x24(%rsp),%ecx
    534a:	44 89 ee             	mov    %r13d,%esi
    534d:	d3 e6                	shl    %cl,%esi
    534f:	48 63 ce             	movslq %esi,%rcx
    5352:	48 0f af c1          	imul   %rcx,%rax
    5356:	48 01 c2             	add    %rax,%rdx
    5359:	8b 84 24 a0 00 00 00 	mov    0xa0(%rsp),%eax
    5360:	4c 01 da             	add    %r11,%rdx
    5363:	83 e0 0f             	and    $0xf,%eax
    5366:	8d 70 06             	lea    0x6(%rax),%esi
    5369:	e8 72 f0 ff ff       	call   43e0 <register_value_select>
    536e:	8b 74 24 40          	mov    0x40(%rsp),%esi
    5372:	44 8b 7c 24 3c       	mov    0x3c(%rsp),%r15d
    5377:	48 89 c1             	mov    %rax,%rcx
    537a:	8b 44 24 48          	mov    0x48(%rsp),%eax
    537e:	44 8b 64 24 2c       	mov    0x2c(%rsp),%r12d
    5383:	83 e6 03             	and    $0x3,%esi
    5386:	48 83 f8 01          	cmp    $0x1,%rax
    538a:	48 0f 44 d1          	cmove  %rcx,%rdx
    538e:	89 f1                	mov    %esi,%ecx
    5390:	49 89 c3             	mov    %rax,%r11
    5393:	be 04 00 00 00       	mov    $0x4,%esi
    5398:	83 c1 01             	add    $0x1,%ecx
    539b:	48 83 f8 00          	cmp    $0x0,%rax
    539f:	44 0f 45 c9          	cmovne %ecx,%r9d
    53a3:	44 89 f8             	mov    %r15d,%eax
    53a6:	44 09 e0             	or     %r12d,%eax
    53a9:	49 89 c2             	mov    %rax,%r10
    53ac:	48 83 f8 00          	cmp    $0x0,%rax
    53b0:	45 0f 45 ce          	cmovne %r14d,%r9d
    53b4:	e8 27 f0 ff ff       	call   43e0 <register_value_select>
    53b9:	8b 4c 24 30          	mov    0x30(%rsp),%ecx
    53bd:	8b 5c 24 4c          	mov    0x4c(%rsp),%ebx
    53c1:	49 83 fa 01          	cmp    $0x1,%r10
    53c5:	48 0f 44 d0          	cmove  %rax,%rdx
    53c9:	42 8d 04 09          	lea    (%rcx,%r9,1),%eax
    53cd:	31 c9                	xor    %ecx,%ecx
    53cf:	44 8b 94 24 e0 00 00 	mov    0xe0(%rsp),%r10d
    53d6:	00 
    53d7:	83 f8 02             	cmp    $0x2,%eax
    53da:	44 89 c8             	mov    %r9d,%eax
    53dd:	0f 97 c1             	seta   %cl
    53e0:	48 83 f9 00          	cmp    $0x0,%rcx
    53e4:	41 0f 45 c5          	cmovne %r13d,%eax
    53e8:	44 89 f9             	mov    %r15d,%ecx
    53eb:	44 09 d9             	or     %r11d,%ecx
    53ee:	48 83 f9 00          	cmp    $0x0,%rcx
    53f2:	45 0f 45 c5          	cmovne %r13d,%r8d
    53f6:	44 89 e1             	mov    %r12d,%ecx
    53f9:	48 83 f9 00          	cmp    $0x0,%rcx
    53fd:	45 0f 45 c6          	cmovne %r14d,%r8d
    5401:	42 8d 0c 03          	lea    (%rbx,%r8,1),%ecx
    5405:	48 8b 5c 24 50       	mov    0x50(%rsp),%rbx
    540a:	44 01 d1             	add    %r10d,%ecx
    540d:	83 f9 10             	cmp    $0x10,%ecx
    5410:	48 89 13             	mov    %rdx,(%rbx)
    5413:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
    5418:	0f 96 c1             	setbe  %cl
    541b:	0f b6 c9             	movzbl %cl,%ecx
    541e:	48 21 c1             	and    %rax,%rcx
    5421:	48 83 f9 00          	cmp    $0x0,%rcx
    5425:	0f 45 c0             	cmovne %eax,%eax
    5428:	f6 05 04 2a 01 00 08 	testb  $0x8,0x12a04(%rip)        # 17e33 <g_cpu_feature_indicator+0x3>
    542f:	0f 84 1b 01 00 00    	je     5550 <ct_decode+0x10d0>
    5435:	62 f1 7c 48 28 03    	vmovaps (%rbx),%zmm0
    543b:	62 f1 7c 48 28 4b 01 	vmovaps 0x40(%rbx),%zmm1
    5442:	62 f1 7c 48 28 53 02 	vmovaps 0x80(%rbx),%zmm2
    5449:	62 f1 7c 48 28 5b 03 	vmovaps 0xc0(%rbx),%zmm3
    5450:	62 f1 7c 48 28 63 04 	vmovaps 0x100(%rbx),%zmm4
    5457:	62 f1 7c 48 28 6b 05 	vmovaps 0x140(%rbx),%zmm5
    545e:	62 f1 7c 48 28 73 06 	vmovaps 0x180(%rbx),%zmm6
    5465:	62 f1 7c 48 28 7b 07 	vmovaps 0x1c0(%rbx),%zmm7
    546c:	62 71 7c 48 28 43 08 	vmovaps 0x200(%rbx),%zmm8
    5473:	62 71 7c 48 28 4b 09 	vmovaps 0x240(%rbx),%zmm9
    547a:	62 71 7c 48 28 53 0a 	vmovaps 0x280(%rbx),%zmm10
    5481:	62 71 7c 48 28 5b 0b 	vmovaps 0x2c0(%rbx),%zmm11
    5488:	62 71 7c 48 28 63 0c 	vmovaps 0x300(%rbx),%zmm12
    548f:	62 71 7c 48 28 6b 0d 	vmovaps 0x340(%rbx),%zmm13
    5496:	62 71 7c 48 28 73 0e 	vmovaps 0x380(%rbx),%zmm14
    549d:	62 71 7c 48 28 7b 0f 	vmovaps 0x3c0(%rbx),%zmm15
    54a4:	48 8b 94 24 38 05 00 	mov    0x538(%rsp),%rdx
    54ab:	00 
    54ac:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    54b3:	00 00 
    54b5:	0f 85 0d 01 00 00    	jne    55c8 <ct_decode+0x1148>
    54bb:	c5 f8 77             	vzeroupper 
    54be:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    54c2:	5b                   	pop    %rbx
    54c3:	41 5c                	pop    %r12
    54c5:	41 5d                	pop    %r13
    54c7:	41 5e                	pop    %r14
    54c9:	41 5f                	pop    %r15
    54cb:	5d                   	pop    %rbp
    54cc:	c3                   	ret    
    54cd:	0f 1f 00             	nopl   (%rax)
    54d0:	c5 fc 29 00          	vmovaps %ymm0,(%rax)
    54d4:	c5 fc 29 48 20       	vmovaps %ymm1,0x20(%rax)
    54d9:	c5 fc 29 50 40       	vmovaps %ymm2,0x40(%rax)
    54de:	c5 fc 29 58 60       	vmovaps %ymm3,0x60(%rax)
    54e3:	c5 fc 29 a0 80 00 00 	vmovaps %ymm4,0x80(%rax)
    54ea:	00 
    54eb:	c5 fc 29 a8 a0 00 00 	vmovaps %ymm5,0xa0(%rax)
    54f2:	00 
    54f3:	c5 fc 29 b0 c0 00 00 	vmovaps %ymm6,0xc0(%rax)
    54fa:	00 
    54fb:	c5 fc 29 b8 e0 00 00 	vmovaps %ymm7,0xe0(%rax)
    5502:	00 
    5503:	c5 7c 29 80 00 01 00 	vmovaps %ymm8,0x100(%rax)
    550a:	00 
    550b:	c5 7c 29 88 20 01 00 	vmovaps %ymm9,0x120(%rax)
    5512:	00 
    5513:	c5 7c 29 90 40 01 00 	vmovaps %ymm10,0x140(%rax)
    551a:	00 
    551b:	c5 7c 29 98 60 01 00 	vmovaps %ymm11,0x160(%rax)
    5522:	00 
    5523:	c5 7c 29 a0 80 01 00 	vmovaps %ymm12,0x180(%rax)
    552a:	00 
    552b:	c5 7c 29 a8 a0 01 00 	vmovaps %ymm13,0x1a0(%rax)
    5532:	00 
    5533:	c5 7c 29 b0 c0 01 00 	vmovaps %ymm14,0x1c0(%rax)
    553a:	00 
    553b:	c5 7c 29 b8 e0 01 00 	vmovaps %ymm15,0x1e0(%rax)
    5542:	00 
    5543:	e9 fa ef ff ff       	jmp    4542 <ct_decode+0xc2>
    5548:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    554f:	00 
    5550:	c5 fc 28 03          	vmovaps (%rbx),%ymm0
    5554:	c5 fc 28 4b 20       	vmovaps 0x20(%rbx),%ymm1
    5559:	c5 fc 28 53 40       	vmovaps 0x40(%rbx),%ymm2
    555e:	c5 fc 28 5b 60       	vmovaps 0x60(%rbx),%ymm3
    5563:	c5 fc 28 a3 80 00 00 	vmovaps 0x80(%rbx),%ymm4
    556a:	00 
    556b:	c5 fc 28 ab a0 00 00 	vmovaps 0xa0(%rbx),%ymm5
    5572:	00 
    5573:	c5 fc 28 b3 c0 00 00 	vmovaps 0xc0(%rbx),%ymm6
    557a:	00 
    557b:	c5 fc 28 bb e0 00 00 	vmovaps 0xe0(%rbx),%ymm7
    5582:	00 
    5583:	c5 7c 28 83 00 01 00 	vmovaps 0x100(%rbx),%ymm8
    558a:	00 
    558b:	c5 7c 28 8b 20 01 00 	vmovaps 0x120(%rbx),%ymm9
    5592:	00 
    5593:	c5 7c 28 93 40 01 00 	vmovaps 0x140(%rbx),%ymm10
    559a:	00 
    559b:	c5 7c 28 9b 60 01 00 	vmovaps 0x160(%rbx),%ymm11
    55a2:	00 
    55a3:	c5 7c 28 a3 80 01 00 	vmovaps 0x180(%rbx),%ymm12
    55aa:	00 
    55ab:	c5 7c 28 ab a0 01 00 	vmovaps 0x1a0(%rbx),%ymm13
    55b2:	00 
    55b3:	c5 7c 28 b3 c0 01 00 	vmovaps 0x1c0(%rbx),%ymm14
    55ba:	00 
    55bb:	c5 7c 28 bb e0 01 00 	vmovaps 0x1e0(%rbx),%ymm15
    55c2:	00 
    55c3:	e9 dc fe ff ff       	jmp    54a4 <ct_decode+0x1024>
    55c8:	c5 f8 77             	vzeroupper 
    55cb:	e8 b0 b4 00 00       	call   10a80 <__stack_chk_fail>

00000000000055d0 <_ZL22init_rts_contexts_emasP9_layout_tS0_m>:
    55d0:	48 39 f7             	cmp    %rsi,%rdi
    55d3:	0f 83 f7 01 00 00    	jae    57d0 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x200>
    55d9:	41 57                	push   %r15
    55db:	41 56                	push   %r14
    55dd:	49 89 d6             	mov    %rdx,%r14
    55e0:	41 55                	push   %r13
    55e2:	49 89 f5             	mov    %rsi,%r13
    55e5:	41 54                	push   %r12
    55e7:	55                   	push   %rbp
    55e8:	53                   	push   %rbx
    55e9:	48 89 fb             	mov    %rdi,%rbx
    55ec:	48 83 ec 08          	sub    $0x8,%rsp
    55f0:	66 f7 03 00 10       	testw  $0x1000,(%rbx)
    55f5:	0f 85 d5 00 00 00    	jne    56d0 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x100>
    55fb:	48 8b 6b 08          	mov    0x8(%rbx),%rbp
    55ff:	e8 f4 ca 00 00       	call   120f8 <get_enclave_base>
    5604:	44 8b 63 04          	mov    0x4(%rbx),%r12d
    5608:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
    560c:	4c 01 f5             	add    %r14,%rbp
    560f:	48 01 c5             	add    %rax,%rbp
    5612:	49 c1 e4 0c          	shl    $0xc,%r12
    5616:	48 85 c9             	test   %rcx,%rcx
    5619:	0f 84 81 00 00 00    	je     56a0 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xd0>
    561f:	0f b7 43 02          	movzwl 0x2(%rbx),%eax
    5623:	a8 04                	test   $0x4,%al
    5625:	75 79                	jne    56a0 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xd0>
    5627:	89 c2                	mov    %eax,%edx
    5629:	41 89 c7             	mov    %eax,%r15d
    562c:	83 e2 10             	and    $0x10,%edx
    562f:	41 83 e7 08          	and    $0x8,%r15d
    5633:	a8 01                	test   $0x1,%al
    5635:	0f 84 e5 00 00 00    	je     5720 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x150>
    563b:	66 85 d2             	test   %dx,%dx
    563e:	0f 85 3c 01 00 00    	jne    5780 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x1b0>
    5644:	0f b7 03             	movzwl (%rbx),%eax
    5647:	66 45 85 ff          	test   %r15w,%r15w
    564b:	0f 85 e1 00 00 00    	jne    5732 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x162>
    5651:	66 83 f8 04          	cmp    $0x4,%ax
    5655:	0f 84 65 01 00 00    	je     57c0 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x1f0>
    565b:	83 e1 07             	and    $0x7,%ecx
    565e:	ba 80 02 00 00       	mov    $0x280,%edx
    5663:	45 31 c9             	xor    %r9d,%r9d
    5666:	45 31 c0             	xor    %r8d,%r8d
    5669:	4c 89 e6             	mov    %r12,%rsi
    566c:	48 89 ef             	mov    %rbp,%rdi
    566f:	e8 4c 62 00 00       	call   b8c0 <mm_init_ema>
    5674:	85 c0                	test   %eax,%eax
    5676:	75 44                	jne    56bc <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xec>
    5678:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    567f:	00 
    5680:	48 83 c3 20          	add    $0x20,%rbx
    5684:	4c 39 eb             	cmp    %r13,%rbx
    5687:	0f 82 63 ff ff ff    	jb     55f0 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x20>
    568d:	48 83 c4 08          	add    $0x8,%rsp
    5691:	31 c0                	xor    %eax,%eax
    5693:	5b                   	pop    %rbx
    5694:	5d                   	pop    %rbp
    5695:	41 5c                	pop    %r12
    5697:	41 5d                	pop    %r13
    5699:	41 5e                	pop    %r14
    569b:	41 5f                	pop    %r15
    569d:	c3                   	ret    
    569e:	66 90                	xchg   %ax,%ax
    56a0:	45 31 c9             	xor    %r9d,%r9d
    56a3:	45 31 c0             	xor    %r8d,%r8d
    56a6:	31 c9                	xor    %ecx,%ecx
    56a8:	ba 81 00 00 00       	mov    $0x81,%edx
    56ad:	4c 89 e6             	mov    %r12,%rsi
    56b0:	48 89 ef             	mov    %rbp,%rdi
    56b3:	e8 08 62 00 00       	call   b8c0 <mm_init_ema>
    56b8:	85 c0                	test   %eax,%eax
    56ba:	74 c4                	je     5680 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xb0>
    56bc:	b8 01 00 00 00       	mov    $0x1,%eax
    56c1:	48 83 c4 08          	add    $0x8,%rsp
    56c5:	5b                   	pop    %rbx
    56c6:	5d                   	pop    %rbp
    56c7:	41 5c                	pop    %r12
    56c9:	41 5d                	pop    %r13
    56cb:	41 5e                	pop    %r14
    56cd:	41 5f                	pop    %r15
    56cf:	c3                   	ret    
    56d0:	8b 43 04             	mov    0x4(%rbx),%eax
    56d3:	31 ed                	xor    %ebp,%ebp
    56d5:	45 31 e4             	xor    %r12d,%r12d
    56d8:	85 c0                	test   %eax,%eax
    56da:	74 a4                	je     5680 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xb0>
    56dc:	0f b7 7b 02          	movzwl 0x2(%rbx),%edi
    56e0:	4c 03 63 08          	add    0x8(%rbx),%r12
    56e4:	48 89 de             	mov    %rbx,%rsi
    56e7:	4c 89 e2             	mov    %r12,%rdx
    56ea:	f7 df                	neg    %edi
    56ec:	48 63 ff             	movslq %edi,%rdi
    56ef:	48 c1 e7 05          	shl    $0x5,%rdi
    56f3:	48 01 df             	add    %rbx,%rdi
    56f6:	e8 d5 fe ff ff       	call   55d0 <_ZL22init_rts_contexts_emasP9_layout_tS0_m>
    56fb:	85 c0                	test   %eax,%eax
    56fd:	75 c2                	jne    56c1 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xf1>
    56ff:	83 c5 01             	add    $0x1,%ebp
    5702:	3b 6b 04             	cmp    0x4(%rbx),%ebp
    5705:	72 d5                	jb     56dc <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x10c>
    5707:	48 83 c3 20          	add    $0x20,%rbx
    570b:	4c 39 eb             	cmp    %r13,%rbx
    570e:	0f 82 dc fe ff ff    	jb     55f0 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x20>
    5714:	e9 74 ff ff ff       	jmp    568d <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xbd>
    5719:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5720:	66 85 d2             	test   %dx,%dx
    5723:	75 5b                	jne    5780 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x1b0>
    5725:	66 45 85 ff          	test   %r15w,%r15w
    5729:	0f 84 51 ff ff ff    	je     5680 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xb0>
    572f:	0f b7 03             	movzwl (%rbx),%eax
    5732:	8d 50 ef             	lea    -0x11(%rax),%edx
    5735:	66 83 fa 01          	cmp    $0x1,%dx
    5739:	76 0b                	jbe    5746 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x176>
    573b:	ba e4 02 00 00       	mov    $0x2e4,%edx
    5740:	66 83 f8 07          	cmp    $0x7,%ax
    5744:	75 05                	jne    574b <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x17b>
    5746:	ba d4 02 00 00       	mov    $0x2d4,%edx
    574b:	45 31 c9             	xor    %r9d,%r9d
    574e:	45 31 c0             	xor    %r8d,%r8d
    5751:	31 c9                	xor    %ecx,%ecx
    5753:	4c 89 e6             	mov    %r12,%rsi
    5756:	48 89 ef             	mov    %rbp,%rdi
    5759:	e8 62 62 00 00       	call   b9c0 <mm_alloc>
    575e:	85 c0                	test   %eax,%eax
    5760:	0f 85 56 ff ff ff    	jne    56bc <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xec>
    5766:	48 83 c3 20          	add    $0x20,%rbx
    576a:	4c 39 eb             	cmp    %r13,%rbx
    576d:	0f 82 7d fe ff ff    	jb     55f0 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x20>
    5773:	e9 15 ff ff ff       	jmp    568d <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xbd>
    5778:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    577f:	00 
    5780:	45 31 c9             	xor    %r9d,%r9d
    5783:	45 31 c0             	xor    %r8d,%r8d
    5786:	b9 03 00 00 00       	mov    $0x3,%ecx
    578b:	ba 80 00 00 00       	mov    $0x80,%edx
    5790:	4c 89 e6             	mov    %r12,%rsi
    5793:	48 89 ef             	mov    %rbp,%rdi
    5796:	e8 25 61 00 00       	call   b8c0 <mm_init_ema>
    579b:	85 c0                	test   %eax,%eax
    579d:	0f 85 19 ff ff ff    	jne    56bc <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xec>
    57a3:	4c 89 e6             	mov    %r12,%rsi
    57a6:	48 89 ef             	mov    %rbp,%rdi
    57a9:	e8 52 62 00 00       	call   ba00 <mm_dealloc>
    57ae:	85 c0                	test   %eax,%eax
    57b0:	0f 84 6f ff ff ff    	je     5725 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x155>
    57b6:	e9 01 ff ff ff       	jmp    56bc <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xec>
    57bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    57c0:	ba 80 01 00 00       	mov    $0x180,%edx
    57c5:	31 c9                	xor    %ecx,%ecx
    57c7:	e9 97 fe ff ff       	jmp    5663 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x93>
    57cc:	0f 1f 40 00          	nopl   0x0(%rax)
    57d0:	31 c0                	xor    %eax,%eax
    57d2:	c3                   	ret    
    57d3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    57da:	00 00 00 
    57dd:	0f 1f 00             	nopl   (%rax)

00000000000057e0 <init_rts_emas>:
    57e0:	f3 0f 1e fa          	endbr64 
    57e4:	55                   	push   %rbp
    57e5:	48 89 d5             	mov    %rdx,%rbp
    57e8:	53                   	push   %rbx
    57e9:	48 89 f3             	mov    %rsi,%rbx
    57ec:	48 83 ec 08          	sub    $0x8,%rsp
    57f0:	e8 8b 32 00 00       	call   8a80 <init_segment_emas>
    57f5:	85 c0                	test   %eax,%eax
    57f7:	74 07                	je     5800 <init_rts_emas+0x20>
    57f9:	48 83 c4 08          	add    $0x8,%rsp
    57fd:	5b                   	pop    %rbx
    57fe:	5d                   	pop    %rbp
    57ff:	c3                   	ret    
    5800:	48 83 c4 08          	add    $0x8,%rsp
    5804:	48 89 ee             	mov    %rbp,%rsi
    5807:	48 89 df             	mov    %rbx,%rdi
    580a:	31 d2                	xor    %edx,%edx
    580c:	5b                   	pop    %rbx
    580d:	5d                   	pop    %rbp
    580e:	e9 bd fd ff ff       	jmp    55d0 <_ZL22init_rts_contexts_emasP9_layout_tS0_m>
    5813:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    581a:	00 00 00 
    581d:	0f 1f 00             	nopl   (%rax)

0000000000005820 <sgx_mm_alloc_ocall>:
    5820:	f3 0f 1e fa          	endbr64 
    5824:	41 56                	push   %r14
    5826:	41 89 ce             	mov    %ecx,%r14d
    5829:	41 55                	push   %r13
    582b:	49 89 fd             	mov    %rdi,%r13
    582e:	bf 20 00 00 00       	mov    $0x20,%edi
    5833:	41 54                	push   %r12
    5835:	49 89 f4             	mov    %rsi,%r12
    5838:	55                   	push   %rbp
    5839:	89 d5                	mov    %edx,%ebp
    583b:	53                   	push   %rbx
    583c:	e8 ff 03 00 00       	call   5c40 <sgx_ocalloc>
    5841:	48 85 c0             	test   %rax,%rax
    5844:	74 4a                	je     5890 <sgx_mm_alloc_ocall+0x70>
    5846:	89 68 18             	mov    %ebp,0x18(%rax)
    5849:	48 89 c6             	mov    %rax,%rsi
    584c:	bf fa ff ff ff       	mov    $0xfffffffa,%edi
    5851:	48 89 c3             	mov    %rax,%rbx
    5854:	4c 89 68 08          	mov    %r13,0x8(%rax)
    5858:	bd 0e 00 00 00       	mov    $0xe,%ebp
    585d:	4c 89 60 10          	mov    %r12,0x10(%rax)
    5861:	44 89 70 1c          	mov    %r14d,0x1c(%rax)
    5865:	e8 c6 19 00 00       	call   7230 <sgx_ocall>
    586a:	85 c0                	test   %eax,%eax
    586c:	74 12                	je     5880 <sgx_mm_alloc_ocall+0x60>
    586e:	e8 ad 04 00 00       	call   5d20 <sgx_ocfree>
    5873:	5b                   	pop    %rbx
    5874:	89 e8                	mov    %ebp,%eax
    5876:	5d                   	pop    %rbp
    5877:	41 5c                	pop    %r12
    5879:	41 5d                	pop    %r13
    587b:	41 5e                	pop    %r14
    587d:	c3                   	ret    
    587e:	66 90                	xchg   %ax,%ax
    5880:	8b 03                	mov    (%rbx),%eax
    5882:	f7 d8                	neg    %eax
    5884:	19 ed                	sbb    %ebp,%ebp
    5886:	83 e5 0e             	and    $0xe,%ebp
    5889:	eb e3                	jmp    586e <sgx_mm_alloc_ocall+0x4e>
    588b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5890:	e8 8b 04 00 00       	call   5d20 <sgx_ocfree>
    5895:	bd 01 00 00 00       	mov    $0x1,%ebp
    589a:	5b                   	pop    %rbx
    589b:	89 e8                	mov    %ebp,%eax
    589d:	5d                   	pop    %rbp
    589e:	41 5c                	pop    %r12
    58a0:	41 5d                	pop    %r13
    58a2:	41 5e                	pop    %r14
    58a4:	c3                   	ret    
    58a5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    58ac:	00 00 00 
    58af:	90                   	nop

00000000000058b0 <sgx_mm_modify_ocall>:
    58b0:	f3 0f 1e fa          	endbr64 
    58b4:	41 56                	push   %r14
    58b6:	41 89 ce             	mov    %ecx,%r14d
    58b9:	41 55                	push   %r13
    58bb:	49 89 fd             	mov    %rdi,%r13
    58be:	bf 20 00 00 00       	mov    $0x20,%edi
    58c3:	41 54                	push   %r12
    58c5:	49 89 f4             	mov    %rsi,%r12
    58c8:	55                   	push   %rbp
    58c9:	89 d5                	mov    %edx,%ebp
    58cb:	53                   	push   %rbx
    58cc:	e8 6f 03 00 00       	call   5c40 <sgx_ocalloc>
    58d1:	48 85 c0             	test   %rax,%rax
    58d4:	74 4a                	je     5920 <sgx_mm_modify_ocall+0x70>
    58d6:	89 68 18             	mov    %ebp,0x18(%rax)
    58d9:	48 89 c6             	mov    %rax,%rsi
    58dc:	bf f9 ff ff ff       	mov    $0xfffffff9,%edi
    58e1:	48 89 c3             	mov    %rax,%rbx
    58e4:	4c 89 68 08          	mov    %r13,0x8(%rax)
    58e8:	bd 0e 00 00 00       	mov    $0xe,%ebp
    58ed:	4c 89 60 10          	mov    %r12,0x10(%rax)
    58f1:	44 89 70 1c          	mov    %r14d,0x1c(%rax)
    58f5:	e8 36 19 00 00       	call   7230 <sgx_ocall>
    58fa:	85 c0                	test   %eax,%eax
    58fc:	74 12                	je     5910 <sgx_mm_modify_ocall+0x60>
    58fe:	e8 1d 04 00 00       	call   5d20 <sgx_ocfree>
    5903:	5b                   	pop    %rbx
    5904:	89 e8                	mov    %ebp,%eax
    5906:	5d                   	pop    %rbp
    5907:	41 5c                	pop    %r12
    5909:	41 5d                	pop    %r13
    590b:	41 5e                	pop    %r14
    590d:	c3                   	ret    
    590e:	66 90                	xchg   %ax,%ax
    5910:	8b 03                	mov    (%rbx),%eax
    5912:	f7 d8                	neg    %eax
    5914:	19 ed                	sbb    %ebp,%ebp
    5916:	83 e5 0e             	and    $0xe,%ebp
    5919:	eb e3                	jmp    58fe <sgx_mm_modify_ocall+0x4e>
    591b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5920:	e8 fb 03 00 00       	call   5d20 <sgx_ocfree>
    5925:	bd 01 00 00 00       	mov    $0x1,%ebp
    592a:	5b                   	pop    %rbx
    592b:	89 e8                	mov    %ebp,%eax
    592d:	5d                   	pop    %rbp
    592e:	41 5c                	pop    %r12
    5930:	41 5d                	pop    %r13
    5932:	41 5e                	pop    %r14
    5934:	c3                   	ret    
    5935:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    593c:	00 00 00 
    593f:	90                   	nop

0000000000005940 <sgx_mm_register_pfhandler>:
    5940:	f3 0f 1e fa          	endbr64 
    5944:	31 c0                	xor    %eax,%eax
    5946:	48 83 3d 3a 48 01 00 	cmpq   $0x0,0x1483a(%rip)        # 1a188 <g_mm_pfhandler>
    594d:	00 
    594e:	74 08                	je     5958 <sgx_mm_register_pfhandler+0x18>
    5950:	c3                   	ret    
    5951:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5958:	48 89 3d 29 48 01 00 	mov    %rdi,0x14829(%rip)        # 1a188 <g_mm_pfhandler>
    595f:	b8 01 00 00 00       	mov    $0x1,%eax
    5964:	c3                   	ret    
    5965:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    596c:	00 00 00 
    596f:	90                   	nop

0000000000005970 <sgx_mm_unregister_pfhandler>:
    5970:	f3 0f 1e fa          	endbr64 
    5974:	31 c0                	xor    %eax,%eax
    5976:	48 39 3d 0b 48 01 00 	cmp    %rdi,0x1480b(%rip)        # 1a188 <g_mm_pfhandler>
    597d:	74 01                	je     5980 <sgx_mm_unregister_pfhandler+0x10>
    597f:	c3                   	ret    
    5980:	48 c7 05 fd 47 01 00 	movq   $0x0,0x147fd(%rip)        # 1a188 <g_mm_pfhandler>
    5987:	00 00 00 00 
    598b:	b8 01 00 00 00       	mov    $0x1,%eax
    5990:	c3                   	ret    
    5991:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5998:	00 00 00 
    599b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000059a0 <sgx_mm_mutex_create>:
    59a0:	f3 0f 1e fa          	endbr64 
    59a4:	48 83 ec 08          	sub    $0x8,%rsp
    59a8:	bf 18 00 00 00       	mov    $0x18,%edi
    59ad:	e8 9e 77 00 00       	call   d150 <dlmalloc>
    59b2:	48 85 c0             	test   %rax,%rax
    59b5:	74 16                	je     59cd <sgx_mm_mutex_create+0x2d>
    59b7:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    59be:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
    59c5:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    59cc:	00 
    59cd:	48 83 c4 08          	add    $0x8,%rsp
    59d1:	c3                   	ret    
    59d2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    59d9:	00 00 00 
    59dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000059e0 <sgx_mm_mutex_lock>:
    59e0:	f3 0f 1e fa          	endbr64 
    59e4:	53                   	push   %rbx
    59e5:	48 89 fb             	mov    %rdi,%rbx
    59e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    59ef:	00 
    59f0:	48 89 df             	mov    %rbx,%rdi
    59f3:	e8 98 b1 00 00       	call   10b90 <sgx_thread_spin_trylock>
    59f8:	85 c0                	test   %eax,%eax
    59fa:	75 f4                	jne    59f0 <sgx_mm_mutex_lock+0x10>
    59fc:	5b                   	pop    %rbx
    59fd:	c3                   	ret    
    59fe:	66 90                	xchg   %ax,%ax

0000000000005a00 <sgx_mm_mutex_unlock>:
    5a00:	f3 0f 1e fa          	endbr64 
    5a04:	e9 17 b2 00 00       	jmp    10c20 <sgx_thread_spin_unlock>
    5a09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000005a10 <sgx_mm_mutex_destroy>:
    5a10:	f3 0f 1e fa          	endbr64 
    5a14:	55                   	push   %rbp
    5a15:	53                   	push   %rbx
    5a16:	48 89 fb             	mov    %rdi,%rbx
    5a19:	48 83 ec 08          	sub    $0x8,%rsp
    5a1d:	e8 ee b0 00 00       	call   10b10 <sgx_thread_spin_destroy>
    5a22:	48 89 df             	mov    %rbx,%rdi
    5a25:	89 c5                	mov    %eax,%ebp
    5a27:	e8 14 95 00 00       	call   ef40 <dlfree>
    5a2c:	48 83 c4 08          	add    $0x8,%rsp
    5a30:	89 e8                	mov    %ebp,%eax
    5a32:	5b                   	pop    %rbx
    5a33:	5d                   	pop    %rbp
    5a34:	c3                   	ret    
    5a35:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5a3c:	00 00 00 
    5a3f:	90                   	nop

0000000000005a40 <sgx_mm_is_within_enclave>:
    5a40:	f3 0f 1e fa          	endbr64 
    5a44:	48 83 ec 08          	sub    $0x8,%rsp
    5a48:	e8 33 01 00 00       	call   5b80 <sgx_is_within_enclave>
    5a4d:	85 c0                	test   %eax,%eax
    5a4f:	0f 95 c0             	setne  %al
    5a52:	48 83 c4 08          	add    $0x8,%rsp
    5a56:	c3                   	ret    
    5a57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    5a5e:	00 00 

0000000000005a60 <init_optimized_libs>:
    5a60:	f3 0f 1e fa          	endbr64 
    5a64:	41 54                	push   %r12
    5a66:	49 89 d4             	mov    %rdx,%r12
    5a69:	55                   	push   %rbp
    5a6a:	48 89 f5             	mov    %rsi,%rbp
    5a6d:	53                   	push   %rbx
    5a6e:	48 89 fb             	mov    %rdi,%rbx
    5a71:	e8 8e c6 00 00       	call   12104 <get_enclave_state>
    5a76:	83 f8 01             	cmp    $0x1,%eax
    5a79:	0f 85 d6 00 00 00    	jne    5b55 <init_optimized_libs+0xf5>
    5a7f:	48 b8 ff ff ff ff ff 	movabs $0xffffffffffffff,%rax
    5a86:	ff ff 00 
    5a89:	48 89 da             	mov    %rbx,%rdx
    5a8c:	48 21 c2             	and    %rax,%rdx
    5a8f:	48 39 d8             	cmp    %rbx,%rax
    5a92:	48 0f 42 da          	cmovb  %rdx,%rbx
    5a96:	48 81 fb ff 01 00 00 	cmp    $0x1ff,%rbx
    5a9d:	0f 86 b2 00 00 00    	jbe    5b55 <init_optimized_libs+0xf5>
    5aa3:	f6 c3 20             	test   $0x20,%bl
    5aa6:	74 0e                	je     5ab6 <init_optimized_libs+0x56>
    5aa8:	48 89 d8             	mov    %rbx,%rax
    5aab:	48 f7 d0             	not    %rax
    5aae:	a8 1f                	test   $0x1f,%al
    5ab0:	0f 85 9f 00 00 00    	jne    5b55 <init_optimized_libs+0xf5>
    5ab6:	f6 c3 40             	test   $0x40,%bl
    5ab9:	74 0e                	je     5ac9 <init_optimized_libs+0x69>
    5abb:	48 89 d8             	mov    %rbx,%rax
    5abe:	48 f7 d0             	not    %rax
    5ac1:	a8 3f                	test   $0x3f,%al
    5ac3:	0f 85 8c 00 00 00    	jne    5b55 <init_optimized_libs+0xf5>
    5ac9:	f6 c3 80             	test   $0x80,%bl
    5acc:	74 0a                	je     5ad8 <init_optimized_libs+0x78>
    5ace:	48 89 d8             	mov    %rbx,%rax
    5ad1:	48 f7 d0             	not    %rax
    5ad4:	a8 7f                	test   $0x7f,%al
    5ad6:	75 7d                	jne    5b55 <init_optimized_libs+0xf5>
    5ad8:	f6 c7 01             	test   $0x1,%bh
    5adb:	74 0b                	je     5ae8 <init_optimized_libs+0x88>
    5add:	0f b6 c3             	movzbl %bl,%eax
    5ae0:	48 3d ff 00 00 00    	cmp    $0xff,%rax
    5ae6:	75 6d                	jne    5b55 <init_optimized_libs+0xf5>
    5ae8:	f6 c7 02             	test   $0x2,%bh
    5aeb:	74 0d                	je     5afa <init_optimized_libs+0x9a>
    5aed:	48 89 d8             	mov    %rbx,%rax
    5af0:	48 f7 d0             	not    %rax
    5af3:	a9 ff 01 00 00       	test   $0x1ff,%eax
    5af8:	75 5b                	jne    5b55 <init_optimized_libs+0xf5>
    5afa:	f6 c7 04             	test   $0x4,%bh
    5afd:	75 49                	jne    5b48 <init_optimized_libs+0xe8>
    5aff:	4c 89 e0             	mov    %r12,%rax
    5b02:	48 f7 d0             	not    %rax
    5b05:	a8 06                	test   $0x6,%al
    5b07:	74 57                	je     5b60 <init_optimized_libs+0x100>
    5b09:	48 b8 ff 7f 12 86 08 	movabs $0xfffe200886127fff,%rax
    5b10:	20 fe ff 
    5b13:	48 21 c3             	and    %rax,%rbx
    5b16:	4c 8d 25 13 23 01 00 	lea    0x12313(%rip),%r12        # 17e30 <g_cpu_feature_indicator>
    5b1d:	48 89 df             	mov    %rbx,%rdi
    5b20:	49 89 1c 24          	mov    %rbx,(%r12)
    5b24:	e8 b7 ae 00 00       	call   109e0 <sgx_init_string_lib>
    5b29:	85 c0                	test   %eax,%eax
    5b2b:	75 28                	jne    5b55 <init_optimized_libs+0xf5>
    5b2d:	49 8b 3c 24          	mov    (%r12),%rdi
    5b31:	48 89 ee             	mov    %rbp,%rsi
    5b34:	e8 27 b5 00 00       	call   11060 <sgx_init_crypto_lib>
    5b39:	5b                   	pop    %rbx
    5b3a:	5d                   	pop    %rbp
    5b3b:	f7 d8                	neg    %eax
    5b3d:	41 5c                	pop    %r12
    5b3f:	19 c0                	sbb    %eax,%eax
    5b41:	c3                   	ret    
    5b42:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5b48:	48 89 d8             	mov    %rbx,%rax
    5b4b:	48 f7 d0             	not    %rax
    5b4e:	a9 ff 03 00 00       	test   $0x3ff,%eax
    5b53:	74 aa                	je     5aff <init_optimized_libs+0x9f>
    5b55:	5b                   	pop    %rbx
    5b56:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    5b5b:	5d                   	pop    %rbp
    5b5c:	41 5c                	pop    %r12
    5b5e:	c3                   	ret    
    5b5f:	90                   	nop
    5b60:	4c 89 e0             	mov    %r12,%rax
    5b63:	48 f7 d0             	not    %rax
    5b66:	a8 e0                	test   $0xe0,%al
    5b68:	74 ac                	je     5b16 <init_optimized_libs+0xb6>
    5b6a:	48 b8 ff ff ff b6 18 	movabs $0xfffee018b6ffffff,%rax
    5b71:	e0 fe ff 
    5b74:	48 21 c3             	and    %rax,%rbx
    5b77:	eb 9d                	jmp    5b16 <init_optimized_libs+0xb6>
    5b79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000005b80 <sgx_is_within_enclave>:
    5b80:	f3 0f 1e fa          	endbr64 
    5b84:	48 8d 05 95 22 01 00 	lea    0x12295(%rip),%rax        # 17e20 <g_enclave_base>
    5b8b:	48 8b 10             	mov    (%rax),%rdx
    5b8e:	48 8d 05 83 22 01 00 	lea    0x12283(%rip),%rax        # 17e18 <g_enclave_size>
    5b95:	48 8b 08             	mov    (%rax),%rcx
    5b98:	48 01 d1             	add    %rdx,%rcx
    5b9b:	48 89 c8             	mov    %rcx,%rax
    5b9e:	48 83 e8 01          	sub    $0x1,%rax
    5ba2:	48 85 f6             	test   %rsi,%rsi
    5ba5:	74 21                	je     5bc8 <sgx_is_within_enclave+0x48>
    5ba7:	48 83 ee 01          	sub    $0x1,%rsi
    5bab:	48 01 fe             	add    %rdi,%rsi
    5bae:	0f 93 c1             	setae  %cl
    5bb1:	48 39 d7             	cmp    %rdx,%rdi
    5bb4:	0f 93 c2             	setae  %dl
    5bb7:	21 ca                	and    %ecx,%edx
    5bb9:	48 39 f0             	cmp    %rsi,%rax
    5bbc:	0f 93 c0             	setae  %al
    5bbf:	0f b6 c0             	movzbl %al,%eax
    5bc2:	21 d0                	and    %edx,%eax
    5bc4:	c3                   	ret    
    5bc5:	0f 1f 00             	nopl   (%rax)
    5bc8:	48 89 fe             	mov    %rdi,%rsi
    5bcb:	b9 01 00 00 00       	mov    $0x1,%ecx
    5bd0:	eb df                	jmp    5bb1 <sgx_is_within_enclave+0x31>
    5bd2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5bd9:	00 00 00 
    5bdc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005be0 <sgx_is_outside_enclave>:
    5be0:	f3 0f 1e fa          	endbr64 
    5be4:	48 85 f6             	test   %rsi,%rsi
    5be7:	74 17                	je     5c00 <sgx_is_outside_enclave+0x20>
    5be9:	48 83 ee 01          	sub    $0x1,%rsi
    5bed:	b8 00 00 00 00       	mov    $0x0,%eax
    5bf2:	48 01 fe             	add    %rdi,%rsi
    5bf5:	73 0c                	jae    5c03 <sgx_is_outside_enclave+0x23>
    5bf7:	c3                   	ret    
    5bf8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    5bff:	00 
    5c00:	48 89 fe             	mov    %rdi,%rsi
    5c03:	48 8d 05 16 22 01 00 	lea    0x12216(%rip),%rax        # 17e20 <g_enclave_base>
    5c0a:	48 8b 10             	mov    (%rax),%rdx
    5c0d:	48 8d 05 04 22 01 00 	lea    0x12204(%rip),%rax        # 17e18 <g_enclave_size>
    5c14:	48 8b 08             	mov    (%rax),%rcx
    5c17:	48 01 d1             	add    %rdx,%rcx
    5c1a:	48 89 c8             	mov    %rcx,%rax
    5c1d:	48 83 e8 01          	sub    $0x1,%rax
    5c21:	48 39 f8             	cmp    %rdi,%rax
    5c24:	0f 92 c0             	setb   %al
    5c27:	48 39 d6             	cmp    %rdx,%rsi
    5c2a:	0f 92 c2             	setb   %dl
    5c2d:	09 d0                	or     %edx,%eax
    5c2f:	0f b6 c0             	movzbl %al,%eax
    5c32:	c3                   	ret    
    5c33:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5c3a:	00 00 00 
    5c3d:	0f 1f 00             	nopl   (%rax)

0000000000005c40 <sgx_ocalloc>:
    5c40:	f3 0f 1e fa          	endbr64 
    5c44:	53                   	push   %rbx
    5c45:	48 89 fb             	mov    %rdi,%rbx
    5c48:	48 83 ec 10          	sub    $0x10,%rsp
    5c4c:	e8 f2 c4 00 00       	call   12143 <get_thread_data>
    5c51:	48 8d 15 c8 21 01 00 	lea    0x121c8(%rip),%rdx        # 17e20 <g_enclave_base>
    5c58:	48 8b 70 20          	mov    0x20(%rax),%rsi
    5c5c:	48 8b 3a             	mov    (%rdx),%rdi
    5c5f:	48 8d 15 b2 21 01 00 	lea    0x121b2(%rip),%rdx        # 17e18 <g_enclave_size>
    5c66:	48 8b 86 90 00 00 00 	mov    0x90(%rsi),%rax
    5c6d:	48 8b 0a             	mov    (%rdx),%rcx
    5c70:	48 89 c2             	mov    %rax,%rdx
    5c73:	48 83 c2 07          	add    $0x7,%rdx
    5c77:	72 33                	jb     5cac <sgx_ocalloc+0x6c>
    5c79:	4c 8d 44 0f ff       	lea    -0x1(%rdi,%rcx,1),%r8
    5c7e:	48 39 fa             	cmp    %rdi,%rdx
    5c81:	72 05                	jb     5c88 <sgx_ocalloc+0x48>
    5c83:	49 39 c0             	cmp    %rax,%r8
    5c86:	73 24                	jae    5cac <sgx_ocalloc+0x6c>
    5c88:	48 39 d8             	cmp    %rbx,%rax
    5c8b:	72 1f                	jb     5cac <sgx_ocalloc+0x6c>
    5c8d:	48 89 c2             	mov    %rax,%rdx
    5c90:	48 29 da             	sub    %rbx,%rdx
    5c93:	48 89 d1             	mov    %rdx,%rcx
    5c96:	48 83 e1 f0          	and    $0xfffffffffffffff0,%rcx
    5c9a:	48 85 db             	test   %rbx,%rbx
    5c9d:	75 19                	jne    5cb8 <sgx_ocalloc+0x78>
    5c9f:	48 89 cb             	mov    %rcx,%rbx
    5ca2:	48 39 fb             	cmp    %rdi,%rbx
    5ca5:	72 21                	jb     5cc8 <sgx_ocalloc+0x88>
    5ca7:	49 39 c8             	cmp    %rcx,%r8
    5caa:	72 1c                	jb     5cc8 <sgx_ocalloc+0x88>
    5cac:	e8 86 c8 00 00       	call   12537 <abort>
    5cb1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5cb8:	48 83 eb 01          	sub    $0x1,%rbx
    5cbc:	48 01 cb             	add    %rcx,%rbx
    5cbf:	72 eb                	jb     5cac <sgx_ocalloc+0x6c>
    5cc1:	eb df                	jmp    5ca2 <sgx_ocalloc+0x62>
    5cc3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5cc8:	48 83 e8 01          	sub    $0x1,%rax
    5ccc:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    5cd2:	48 81 e2 00 f0 ff ff 	and    $0xfffffffffffff000,%rdx
    5cd9:	75 1d                	jne    5cf8 <sgx_ocalloc+0xb8>
    5cdb:	eb cf                	jmp    5cac <sgx_ocalloc+0x6c>
    5cdd:	0f 1f 00             	nopl   (%rax)
    5ce0:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    5ce5:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    5cea:	c6 00 00             	movb   $0x0,(%rax)
    5ced:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    5cf2:	48 2d 00 10 00 00    	sub    $0x1000,%rax
    5cf8:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    5cfd:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    5d02:	48 39 d0             	cmp    %rdx,%rax
    5d05:	73 d9                	jae    5ce0 <sgx_ocalloc+0xa0>
    5d07:	48 89 8e 90 00 00 00 	mov    %rcx,0x90(%rsi)
    5d0e:	48 83 c4 10          	add    $0x10,%rsp
    5d12:	48 89 c8             	mov    %rcx,%rax
    5d15:	5b                   	pop    %rbx
    5d16:	c3                   	ret    
    5d17:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    5d1e:	00 00 

0000000000005d20 <sgx_ocfree>:
    5d20:	f3 0f 1e fa          	endbr64 
    5d24:	48 83 ec 08          	sub    $0x8,%rsp
    5d28:	e8 16 c4 00 00       	call   12143 <get_thread_data>
    5d2d:	48 8d 15 ec 20 01 00 	lea    0x120ec(%rip),%rdx        # 17e20 <g_enclave_base>
    5d34:	48 8d 0d dd 20 01 00 	lea    0x120dd(%rip),%rcx        # 17e18 <g_enclave_size>
    5d3b:	48 8b 70 20          	mov    0x20(%rax),%rsi
    5d3f:	48 8b 40 08          	mov    0x8(%rax),%rax
    5d43:	48 8b 12             	mov    (%rdx),%rdx
    5d46:	48 8b 09             	mov    (%rcx),%rcx
    5d49:	48 8b 40 e8          	mov    -0x18(%rax),%rax
    5d4d:	48 89 c7             	mov    %rax,%rdi
    5d50:	48 83 c7 07          	add    $0x7,%rdi
    5d54:	72 0f                	jb     5d65 <sgx_ocfree+0x45>
    5d56:	48 8d 4c 0a ff       	lea    -0x1(%rdx,%rcx,1),%rcx
    5d5b:	48 39 c1             	cmp    %rax,%rcx
    5d5e:	72 10                	jb     5d70 <sgx_ocfree+0x50>
    5d60:	48 39 d7             	cmp    %rdx,%rdi
    5d63:	72 0b                	jb     5d70 <sgx_ocfree+0x50>
    5d65:	e8 cd c7 00 00       	call   12537 <abort>
    5d6a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5d70:	48 89 86 90 00 00 00 	mov    %rax,0x90(%rsi)
    5d77:	48 83 c4 08          	add    $0x8,%rsp
    5d7b:	c3                   	ret    
    5d7c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005d80 <sgx_read_rand>:
    5d80:	f3 0f 1e fa          	endbr64 
    5d84:	41 55                	push   %r13
    5d86:	41 54                	push   %r12
    5d88:	55                   	push   %rbp
    5d89:	53                   	push   %rbx
    5d8a:	48 83 ec 18          	sub    $0x18,%rsp
    5d8e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    5d95:	00 00 
    5d97:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    5d9c:	31 c0                	xor    %eax,%eax
    5d9e:	48 85 ff             	test   %rdi,%rdi
    5da1:	0f 84 f9 00 00 00    	je     5ea0 <sgx_read_rand+0x120>
    5da7:	48 89 f3             	mov    %rsi,%rbx
    5daa:	48 85 f6             	test   %rsi,%rsi
    5dad:	0f 84 ed 00 00 00    	je     5ea0 <sgx_read_rand+0x120>
    5db3:	48 8d 05 66 20 01 00 	lea    0x12066(%rip),%rax        # 17e20 <g_enclave_base>
    5dba:	48 89 fd             	mov    %rdi,%rbp
    5dbd:	31 ff                	xor    %edi,%edi
    5dbf:	48 8b 08             	mov    (%rax),%rcx
    5dc2:	48 8d 05 4f 20 01 00 	lea    0x1204f(%rip),%rax        # 17e18 <g_enclave_size>
    5dc9:	48 8b 10             	mov    (%rax),%rdx
    5dcc:	48 8d 46 ff          	lea    -0x1(%rsi),%rax
    5dd0:	48 01 ca             	add    %rcx,%rdx
    5dd3:	48 83 ea 01          	sub    $0x1,%rdx
    5dd7:	48 01 e8             	add    %rbp,%rax
    5dda:	40 0f 92 c7          	setb   %dil
    5dde:	48 39 c2             	cmp    %rax,%rdx
    5de1:	41 0f 93 c0          	setae  %r8b
    5de5:	48 85 ff             	test   %rdi,%rdi
    5de8:	40 0f 94 c6          	sete   %sil
    5dec:	41 84 f0             	test   %sil,%r8b
    5def:	74 05                	je     5df6 <sgx_read_rand+0x76>
    5df1:	48 39 cd             	cmp    %rcx,%rbp
    5df4:	73 42                	jae    5e38 <sgx_read_rand+0xb8>
    5df6:	be 02 00 00 00       	mov    $0x2,%esi
    5dfb:	48 85 ff             	test   %rdi,%rdi
    5dfe:	74 28                	je     5e28 <sgx_read_rand+0xa8>
    5e00:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    5e05:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    5e0c:	00 00 
    5e0e:	0f 85 96 00 00 00    	jne    5eaa <sgx_read_rand+0x12a>
    5e14:	48 83 c4 18          	add    $0x18,%rsp
    5e18:	89 f0                	mov    %esi,%eax
    5e1a:	5b                   	pop    %rbx
    5e1b:	5d                   	pop    %rbp
    5e1c:	41 5c                	pop    %r12
    5e1e:	41 5d                	pop    %r13
    5e20:	c3                   	ret    
    5e21:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5e28:	48 39 c8             	cmp    %rcx,%rax
    5e2b:	72 0b                	jb     5e38 <sgx_read_rand+0xb8>
    5e2d:	48 39 d5             	cmp    %rdx,%rbp
    5e30:	76 ce                	jbe    5e00 <sgx_read_rand+0x80>
    5e32:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5e38:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
    5e3f:	00 
    5e40:	4c 8d 6c 24 04       	lea    0x4(%rsp),%r13
    5e45:	4c 89 ef             	mov    %r13,%rdi
    5e48:	e8 c7 c6 00 00       	call   12514 <do_rdrand>
    5e4d:	85 c0                	test   %eax,%eax
    5e4f:	74 3f                	je     5e90 <sgx_read_rand+0x110>
    5e51:	41 bc 04 00 00 00    	mov    $0x4,%r12d
    5e57:	48 89 ef             	mov    %rbp,%rdi
    5e5a:	4c 89 ee             	mov    %r13,%rsi
    5e5d:	4c 39 e3             	cmp    %r12,%rbx
    5e60:	4c 0f 46 e3          	cmovbe %rbx,%r12
    5e64:	4c 89 e2             	mov    %r12,%rdx
    5e67:	4c 01 e5             	add    %r12,%rbp
    5e6a:	e8 81 a8 00 00       	call   106f0 <memcpy>
    5e6f:	4c 29 e3             	sub    %r12,%rbx
    5e72:	75 d1                	jne    5e45 <sgx_read_rand+0xc5>
    5e74:	be 04 00 00 00       	mov    $0x4,%esi
    5e79:	b9 04 00 00 00       	mov    $0x4,%ecx
    5e7e:	31 d2                	xor    %edx,%edx
    5e80:	4c 89 ef             	mov    %r13,%rdi
    5e83:	e8 b8 aa 00 00       	call   10940 <memset_s>
    5e88:	31 f6                	xor    %esi,%esi
    5e8a:	e9 71 ff ff ff       	jmp    5e00 <sgx_read_rand+0x80>
    5e8f:	90                   	nop
    5e90:	be 01 00 00 00       	mov    $0x1,%esi
    5e95:	e9 66 ff ff ff       	jmp    5e00 <sgx_read_rand+0x80>
    5e9a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5ea0:	be 02 00 00 00       	mov    $0x2,%esi
    5ea5:	e9 56 ff ff ff       	jmp    5e00 <sgx_read_rand+0x80>
    5eaa:	e8 d1 ab 00 00       	call   10a80 <__stack_chk_fail>
    5eaf:	90                   	nop

0000000000005eb0 <check_static_stack_canary>:
    5eb0:	f3 0f 1e fa          	endbr64 
    5eb4:	48 8d 05 4d 1f 01 00 	lea    0x11f4d(%rip),%rax        # 17e08 <__intel_security_cookie>
    5ebb:	48 8b 00             	mov    (%rax),%rax
    5ebe:	48 39 87 08 fc fe ff 	cmp    %rax,-0x103f8(%rdi)
    5ec5:	0f 95 c0             	setne  %al
    5ec8:	0f b6 c0             	movzbl %al,%eax
    5ecb:	f7 d8                	neg    %eax
    5ecd:	c3                   	ret    
    5ece:	66 90                	xchg   %ax,%ax

0000000000005ed0 <sgx_rdpkru>:
    5ed0:	f3 0f 1e fa          	endbr64 
    5ed4:	53                   	push   %rbx
    5ed5:	48 89 fb             	mov    %rdi,%rbx
    5ed8:	e8 63 18 00 00       	call   7740 <is_pkru_enabled>
    5edd:	89 c2                	mov    %eax,%edx
    5edf:	31 c0                	xor    %eax,%eax
    5ee1:	84 d2                	test   %dl,%dl
    5ee3:	74 0c                	je     5ef1 <sgx_rdpkru+0x21>
    5ee5:	89 c1                	mov    %eax,%ecx
    5ee7:	0f 01 ee             	rdpkru 
    5eea:	89 03                	mov    %eax,(%rbx)
    5eec:	b8 01 00 00 00       	mov    $0x1,%eax
    5ef1:	5b                   	pop    %rbx
    5ef2:	c3                   	ret    
    5ef3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5efa:	00 00 00 
    5efd:	0f 1f 00             	nopl   (%rax)

0000000000005f00 <sgx_wrpkru>:
    5f00:	f3 0f 1e fa          	endbr64 
    5f04:	53                   	push   %rbx
    5f05:	89 fb                	mov    %edi,%ebx
    5f07:	e8 34 18 00 00       	call   7740 <is_pkru_enabled>
    5f0c:	31 d2                	xor    %edx,%edx
    5f0e:	84 c0                	test   %al,%al
    5f10:	74 0c                	je     5f1e <sgx_wrpkru+0x1e>
    5f12:	89 d8                	mov    %ebx,%eax
    5f14:	89 d1                	mov    %edx,%ecx
    5f16:	0f 01 ef             	wrpkru 
    5f19:	ba 01 00 00 00       	mov    $0x1,%edx
    5f1e:	89 d0                	mov    %edx,%eax
    5f20:	5b                   	pop    %rbx
    5f21:	c3                   	ret    
    5f22:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5f29:	00 00 00 
    5f2c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005f30 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0>:
    5f30:	41 55                	push   %r13
    5f32:	49 89 cd             	mov    %rcx,%r13
    5f35:	41 54                	push   %r12
    5f37:	55                   	push   %rbp
    5f38:	53                   	push   %rbx
    5f39:	48 83 ec 08          	sub    $0x8,%rsp
    5f3d:	48 8d 0d 3c d2 00 00 	lea    0xd23c(%rip),%rcx        # 13180 <g_global_data>
    5f44:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    5f4a:	85 c0                	test   %eax,%eax
    5f4c:	0f 84 8e 00 00 00    	je     5fe0 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0xb0>
    5f52:	48 89 d3             	mov    %rdx,%rbx
    5f55:	49 89 fc             	mov    %rdi,%r12
    5f58:	31 d2                	xor    %edx,%edx
    5f5a:	eb 11                	jmp    5f6d <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0x3d>
    5f5c:	0f 1f 40 00          	nopl   0x0(%rax)
    5f60:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    5f66:	83 c2 01             	add    $0x1,%edx
    5f69:	39 c2                	cmp    %eax,%edx
    5f6b:	73 73                	jae    5fe0 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0xb0>
    5f6d:	89 d0                	mov    %edx,%eax
    5f6f:	48 83 c0 0b          	add    $0xb,%rax
    5f73:	48 c1 e0 05          	shl    $0x5,%rax
    5f77:	48 01 c8             	add    %rcx,%rax
    5f7a:	0f b7 00             	movzwl (%rax),%eax
    5f7d:	66 39 c6             	cmp    %ax,%si
    5f80:	75 de                	jne    5f60 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0x30>
    5f82:	8d 42 0b             	lea    0xb(%rdx),%eax
    5f85:	48 c1 e0 05          	shl    $0x5,%rax
    5f89:	48 01 c1             	add    %rax,%rcx
    5f8c:	48 89 cd             	mov    %rcx,%rbp
    5f8f:	74 4f                	je     5fe0 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0xb0>
    5f91:	e8 62 c1 00 00       	call   120f8 <get_enclave_base>
    5f96:	48 8b 55 08          	mov    0x8(%rbp),%rdx
    5f9a:	48 01 da             	add    %rbx,%rdx
    5f9d:	48 01 d0             	add    %rdx,%rax
    5fa0:	8b 55 04             	mov    0x4(%rbp),%edx
    5fa3:	49 39 c4             	cmp    %rax,%r12
    5fa6:	72 38                	jb     5fe0 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0xb0>
    5fa8:	48 c1 e2 0c          	shl    $0xc,%rdx
    5fac:	49 81 c4 00 10 00 00 	add    $0x1000,%r12
    5fb3:	48 01 c2             	add    %rax,%rdx
    5fb6:	4c 39 e2             	cmp    %r12,%rdx
    5fb9:	72 25                	jb     5fe0 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0xb0>
    5fbb:	4d 85 ed             	test   %r13,%r13
    5fbe:	74 11                	je     5fd1 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0xa1>
    5fc0:	48 8b 45 18          	mov    0x18(%rbp),%rax
    5fc4:	49 89 45 00          	mov    %rax,0x0(%r13)
    5fc8:	0f b7 45 02          	movzwl 0x2(%rbp),%eax
    5fcc:	66 41 89 45 08       	mov    %ax,0x8(%r13)
    5fd1:	31 c0                	xor    %eax,%eax
    5fd3:	48 83 c4 08          	add    $0x8,%rsp
    5fd7:	5b                   	pop    %rbx
    5fd8:	5d                   	pop    %rbp
    5fd9:	41 5c                	pop    %r12
    5fdb:	41 5d                	pop    %r13
    5fdd:	c3                   	ret    
    5fde:	66 90                	xchg   %ax,%ax
    5fe0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    5fe5:	eb ec                	jmp    5fd3 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0xa3>
    5fe7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    5fee:	00 00 

0000000000005ff0 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0>:
    5ff0:	48 81 ff ff ef ff ff 	cmp    $0xffffffffffffefff,%rdi
    5ff7:	0f 87 c3 01 00 00    	ja     61c0 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x1d0>
    5ffd:	41 57                	push   %r15
    5fff:	41 56                	push   %r14
    6001:	41 55                	push   %r13
    6003:	41 54                	push   %r12
    6005:	49 89 f4             	mov    %rsi,%r12
    6008:	55                   	push   %rbp
    6009:	48 89 d5             	mov    %rdx,%rbp
    600c:	53                   	push   %rbx
    600d:	48 89 fb             	mov    %rdi,%rbx
    6010:	48 83 ec 08          	sub    $0x8,%rsp
    6014:	e8 87 13 00 00       	call   73a0 <get_heap_base>
    6019:	49 89 c5             	mov    %rax,%r13
    601c:	e8 0f 14 00 00       	call   7430 <get_heap_min_size>
    6021:	49 01 c5             	add    %rax,%r13
    6024:	e8 97 13 00 00       	call   73c0 <get_heap_size>
    6029:	49 89 c6             	mov    %rax,%r14
    602c:	e8 ff 13 00 00       	call   7430 <get_heap_min_size>
    6031:	49 29 c6             	sub    %rax,%r14
    6034:	4c 39 eb             	cmp    %r13,%rbx
    6037:	72 37                	jb     6070 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x80>
    6039:	48 8d 83 00 10 00 00 	lea    0x1000(%rbx),%rax
    6040:	4d 01 f5             	add    %r14,%r13
    6043:	49 39 c5             	cmp    %rax,%r13
    6046:	72 28                	jb     6070 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x80>
    6048:	48 85 ed             	test   %rbp,%rbp
    604b:	74 11                	je     605e <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x6e>
    604d:	b8 08 00 00 00       	mov    $0x8,%eax
    6052:	48 c7 45 00 03 02 00 	movq   $0x203,0x0(%rbp)
    6059:	00 
    605a:	66 89 45 08          	mov    %ax,0x8(%rbp)
    605e:	31 c0                	xor    %eax,%eax
    6060:	48 83 c4 08          	add    $0x8,%rsp
    6064:	5b                   	pop    %rbx
    6065:	5d                   	pop    %rbp
    6066:	41 5c                	pop    %r12
    6068:	41 5d                	pop    %r13
    606a:	41 5e                	pop    %r14
    606c:	41 5f                	pop    %r15
    606e:	c3                   	ret    
    606f:	90                   	nop
    6070:	31 d2                	xor    %edx,%edx
    6072:	48 89 e9             	mov    %rbp,%rcx
    6075:	be 07 00 00 00       	mov    $0x7,%esi
    607a:	48 89 df             	mov    %rbx,%rdi
    607d:	e8 ae fe ff ff       	call   5f30 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0>
    6082:	85 c0                	test   %eax,%eax
    6084:	74 d8                	je     605e <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x6e>
    6086:	48 8d 15 db 1d 01 00 	lea    0x11ddb(%rip),%rdx        # 17e68 <rsrv_mem_size>
    608d:	48 8d 05 dc 1d 01 00 	lea    0x11ddc(%rip),%rax        # 17e70 <rsrv_mem_base>
    6094:	48 8b 0a             	mov    (%rdx),%rcx
    6097:	48 8d 15 c2 1d 01 00 	lea    0x11dc2(%rip),%rdx        # 17e60 <rsrv_mem_min_size>
    609e:	48 8b 00             	mov    (%rax),%rax
    60a1:	48 8b 32             	mov    (%rdx),%rsi
    60a4:	48 01 c6             	add    %rax,%rsi
    60a7:	48 39 f3             	cmp    %rsi,%rbx
    60aa:	72 0f                	jb     60bb <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0xcb>
    60ac:	48 8d 93 00 10 00 00 	lea    0x1000(%rbx),%rdx
    60b3:	48 01 c8             	add    %rcx,%rax
    60b6:	48 39 d0             	cmp    %rdx,%rax
    60b9:	73 8d                	jae    6048 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x58>
    60bb:	48 8d 0d be d0 00 00 	lea    0xd0be(%rip),%rcx        # 13180 <g_global_data>
    60c2:	31 d2                	xor    %edx,%edx
    60c4:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    60ca:	85 c0                	test   %eax,%eax
    60cc:	74 25                	je     60f3 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x103>
    60ce:	66 90                	xchg   %ax,%ax
    60d0:	89 d0                	mov    %edx,%eax
    60d2:	48 83 c0 0b          	add    $0xb,%rax
    60d6:	48 c1 e0 05          	shl    $0x5,%rax
    60da:	48 01 c8             	add    %rcx,%rax
    60dd:	0f b7 00             	movzwl (%rax),%eax
    60e0:	66 3d 13 10          	cmp    $0x1013,%ax
    60e4:	74 42                	je     6128 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x138>
    60e6:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    60ec:	83 c2 01             	add    $0x1,%edx
    60ef:	39 c2                	cmp    %eax,%edx
    60f1:	72 dd                	jb     60d0 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0xe0>
    60f3:	41 bd 0e 00 00 00    	mov    $0xe,%r13d
    60f9:	31 d2                	xor    %edx,%edx
    60fb:	48 89 e9             	mov    %rbp,%rcx
    60fe:	44 89 ee             	mov    %r13d,%esi
    6101:	48 89 df             	mov    %rbx,%rdi
    6104:	e8 27 fe ff ff       	call   5f30 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0>
    6109:	85 c0                	test   %eax,%eax
    610b:	0f 84 96 00 00 00    	je     61a7 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x1b7>
    6111:	41 83 c5 01          	add    $0x1,%r13d
    6115:	41 83 fd 13          	cmp    $0x13,%r13d
    6119:	75 de                	jne    60f9 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x109>
    611b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    6120:	e9 3b ff ff ff       	jmp    6060 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x70>
    6125:	0f 1f 00             	nopl   (%rax)
    6128:	8d 42 0b             	lea    0xb(%rdx),%eax
    612b:	41 bd 0e 00 00 00    	mov    $0xe,%r13d
    6131:	48 c1 e0 05          	shl    $0x5,%rax
    6135:	48 01 c1             	add    %rax,%rcx
    6138:	49 89 ce             	mov    %rcx,%r14
    613b:	74 bc                	je     60f9 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x109>
    613d:	41 8b 46 04          	mov    0x4(%r14),%eax
    6141:	45 31 ff             	xor    %r15d,%r15d
    6144:	83 f8 ff             	cmp    $0xffffffff,%eax
    6147:	75 17                	jne    6160 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x170>
    6149:	eb 4d                	jmp    6198 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x1a8>
    614b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6150:	41 8b 46 04          	mov    0x4(%r14),%eax
    6154:	49 83 c7 01          	add    $0x1,%r15
    6158:	83 c0 01             	add    $0x1,%eax
    615b:	41 39 c7             	cmp    %eax,%r15d
    615e:	73 38                	jae    6198 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x1a8>
    6160:	49 8b 56 08          	mov    0x8(%r14),%rdx
    6164:	48 89 e9             	mov    %rbp,%rcx
    6167:	44 89 ee             	mov    %r13d,%esi
    616a:	48 89 df             	mov    %rbx,%rdi
    616d:	49 0f af d7          	imul   %r15,%rdx
    6171:	e8 ba fd ff ff       	call   5f30 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0>
    6176:	85 c0                	test   %eax,%eax
    6178:	75 d6                	jne    6150 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x160>
    617a:	4d 85 e4             	test   %r12,%r12
    617d:	0f 84 db fe ff ff    	je     605e <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x6e>
    6183:	49 8b 46 08          	mov    0x8(%r14),%rax
    6187:	49 0f af c7          	imul   %r15,%rax
    618b:	49 89 04 24          	mov    %rax,(%r12)
    618f:	e9 ca fe ff ff       	jmp    605e <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x6e>
    6194:	0f 1f 40 00          	nopl   0x0(%rax)
    6198:	41 83 c5 01          	add    $0x1,%r13d
    619c:	41 83 fd 13          	cmp    $0x13,%r13d
    61a0:	75 9b                	jne    613d <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x14d>
    61a2:	e9 74 ff ff ff       	jmp    611b <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x12b>
    61a7:	4d 85 e4             	test   %r12,%r12
    61aa:	0f 84 ae fe ff ff    	je     605e <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x6e>
    61b0:	49 c7 04 24 00 00 00 	movq   $0x0,(%r12)
    61b7:	00 
    61b8:	e9 a1 fe ff ff       	jmp    605e <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x6e>
    61bd:	0f 1f 00             	nopl   (%rax)
    61c0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    61c5:	c3                   	ret    
    61c6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    61cd:	00 00 00 

00000000000061d0 <_Z24get_dynamic_layout_by_idt>:
    61d0:	f3 0f 1e fa          	endbr64 
    61d4:	48 8d 05 a5 cf 00 00 	lea    0xcfa5(%rip),%rax        # 13180 <g_global_data>
    61db:	8b 90 58 01 00 00    	mov    0x158(%rax),%edx
    61e1:	85 d2                	test   %edx,%edx
    61e3:	74 3b                	je     6220 <_Z24get_dynamic_layout_by_idt+0x50>
    61e5:	31 c9                	xor    %ecx,%ecx
    61e7:	eb 14                	jmp    61fd <_Z24get_dynamic_layout_by_idt+0x2d>
    61e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    61f0:	8b 90 58 01 00 00    	mov    0x158(%rax),%edx
    61f6:	83 c1 01             	add    $0x1,%ecx
    61f9:	39 d1                	cmp    %edx,%ecx
    61fb:	73 23                	jae    6220 <_Z24get_dynamic_layout_by_idt+0x50>
    61fd:	89 ca                	mov    %ecx,%edx
    61ff:	48 83 c2 0b          	add    $0xb,%rdx
    6203:	48 c1 e2 05          	shl    $0x5,%rdx
    6207:	48 01 c2             	add    %rax,%rdx
    620a:	0f b7 12             	movzwl (%rdx),%edx
    620d:	66 39 fa             	cmp    %di,%dx
    6210:	75 de                	jne    61f0 <_Z24get_dynamic_layout_by_idt+0x20>
    6212:	8d 51 0b             	lea    0xb(%rcx),%edx
    6215:	48 c1 e2 05          	shl    $0x5,%rdx
    6219:	48 01 d0             	add    %rdx,%rax
    621c:	c3                   	ret    
    621d:	0f 1f 00             	nopl   (%rax)
    6220:	31 c0                	xor    %eax,%eax
    6222:	c3                   	ret    
    6223:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    622a:	00 00 00 
    622d:	0f 1f 00             	nopl   (%rax)

0000000000006230 <is_dynamic_thread>:
    6230:	f3 0f 1e fa          	endbr64 
    6234:	48 83 ec 28          	sub    $0x28,%rsp
    6238:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    623f:	00 00 
    6241:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    6246:	31 c0                	xor    %eax,%eax
    6248:	48 85 ff             	test   %rdi,%rdi
    624b:	74 0e                	je     625b <is_dynamic_thread+0x2b>
    624d:	31 f6                	xor    %esi,%esi
    624f:	48 89 e2             	mov    %rsp,%rdx
    6252:	e8 99 fd ff ff       	call   5ff0 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0>
    6257:	85 c0                	test   %eax,%eax
    6259:	74 1d                	je     6278 <is_dynamic_thread+0x48>
    625b:	31 c0                	xor    %eax,%eax
    625d:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    6262:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    6269:	00 00 
    626b:	75 1a                	jne    6287 <is_dynamic_thread+0x57>
    626d:	48 83 c4 28          	add    $0x28,%rsp
    6271:	c3                   	ret    
    6272:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6278:	31 c0                	xor    %eax,%eax
    627a:	48 81 3c 24 00 01 00 	cmpq   $0x100,(%rsp)
    6281:	00 
    6282:	0f 94 c0             	sete   %al
    6285:	eb d6                	jmp    625d <is_dynamic_thread+0x2d>
    6287:	e8 f4 a7 00 00       	call   10a80 <__stack_chk_fail>
    628c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000006290 <is_dynamic_thread_exist>:
    6290:	f3 0f 1e fa          	endbr64 
    6294:	48 8d 05 91 1b 01 00 	lea    0x11b91(%rip),%rax        # 17e2c <EDMM_supported>
    629b:	8b 00                	mov    (%rax),%eax
    629d:	85 c0                	test   %eax,%eax
    629f:	74 59                	je     62fa <is_dynamic_thread_exist+0x6a>
    62a1:	48 8d 0d d8 ce 00 00 	lea    0xced8(%rip),%rcx        # 13180 <g_global_data>
    62a8:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    62ae:	85 c0                	test   %eax,%eax
    62b0:	74 46                	je     62f8 <is_dynamic_thread_exist+0x68>
    62b2:	31 d2                	xor    %edx,%edx
    62b4:	eb 17                	jmp    62cd <is_dynamic_thread_exist+0x3d>
    62b6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    62bd:	00 00 00 
    62c0:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    62c6:	83 c2 01             	add    $0x1,%edx
    62c9:	39 c2                	cmp    %eax,%edx
    62cb:	73 2b                	jae    62f8 <is_dynamic_thread_exist+0x68>
    62cd:	89 d0                	mov    %edx,%eax
    62cf:	48 83 c0 0b          	add    $0xb,%rax
    62d3:	48 c1 e0 05          	shl    $0x5,%rax
    62d7:	48 01 c8             	add    %rcx,%rax
    62da:	0f b7 00             	movzwl (%rax),%eax
    62dd:	66 83 f8 12          	cmp    $0x12,%ax
    62e1:	75 dd                	jne    62c0 <is_dynamic_thread_exist+0x30>
    62e3:	8d 42 0b             	lea    0xb(%rdx),%eax
    62e6:	48 c1 e0 05          	shl    $0x5,%rax
    62ea:	48 01 c1             	add    %rax,%rcx
    62ed:	0f 95 c0             	setne  %al
    62f0:	0f b6 c0             	movzbl %al,%eax
    62f3:	c3                   	ret    
    62f4:	0f 1f 40 00          	nopl   0x0(%rax)
    62f8:	31 c0                	xor    %eax,%eax
    62fa:	c3                   	ret    
    62fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000006300 <get_dynamic_stack_max_page>:
    6300:	f3 0f 1e fa          	endbr64 
    6304:	48 8d 0d 75 ce 00 00 	lea    0xce75(%rip),%rcx        # 13180 <g_global_data>
    630b:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    6311:	85 c0                	test   %eax,%eax
    6313:	74 45                	je     635a <get_dynamic_stack_max_page+0x5a>
    6315:	31 d2                	xor    %edx,%edx
    6317:	eb 14                	jmp    632d <get_dynamic_stack_max_page+0x2d>
    6319:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6320:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    6326:	83 c2 01             	add    $0x1,%edx
    6329:	39 c2                	cmp    %eax,%edx
    632b:	73 2b                	jae    6358 <get_dynamic_stack_max_page+0x58>
    632d:	89 d0                	mov    %edx,%eax
    632f:	48 83 c0 0b          	add    $0xb,%rax
    6333:	48 c1 e0 05          	shl    $0x5,%rax
    6337:	48 01 c8             	add    %rcx,%rax
    633a:	0f b7 00             	movzwl (%rax),%eax
    633d:	66 83 f8 07          	cmp    $0x7,%ax
    6341:	75 dd                	jne    6320 <get_dynamic_stack_max_page+0x20>
    6343:	8d 42 0b             	lea    0xb(%rdx),%eax
    6346:	48 c1 e0 05          	shl    $0x5,%rax
    634a:	48 01 c1             	add    %rax,%rcx
    634d:	74 09                	je     6358 <get_dynamic_stack_max_page+0x58>
    634f:	8b 41 04             	mov    0x4(%rcx),%eax
    6352:	c3                   	ret    
    6353:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6358:	31 c0                	xor    %eax,%eax
    635a:	c3                   	ret    
    635b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000006360 <do_add_thread>:
    6360:	f3 0f 1e fa          	endbr64 
    6364:	41 56                	push   %r14
    6366:	41 55                	push   %r13
    6368:	41 54                	push   %r12
    636a:	55                   	push   %rbp
    636b:	53                   	push   %rbx
    636c:	48 89 fb             	mov    %rdi,%rbx
    636f:	48 83 ec 10          	sub    $0x10,%rsp
    6373:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    637a:	00 00 
    637c:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    6381:	31 c0                	xor    %eax,%eax
    6383:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    638a:	00 
    638b:	e8 68 bd 00 00       	call   120f8 <get_enclave_base>
    6390:	31 d2                	xor    %edx,%edx
    6392:	48 89 e6             	mov    %rsp,%rsi
    6395:	48 89 df             	mov    %rbx,%rdi
    6398:	48 89 c5             	mov    %rax,%rbp
    639b:	e8 50 fc ff ff       	call   5ff0 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0>
    63a0:	85 c0                	test   %eax,%eax
    63a2:	75 62                	jne    6406 <do_add_thread+0xa6>
    63a4:	4c 8d 25 d5 cd 00 00 	lea    0xcdd5(%rip),%r12        # 13180 <g_global_data>
    63ab:	41 8b 84 24 58 01 00 	mov    0x158(%r12),%eax
    63b2:	00 
    63b3:	85 c0                	test   %eax,%eax
    63b5:	74 4f                	je     6406 <do_add_thread+0xa6>
    63b7:	31 d2                	xor    %edx,%edx
    63b9:	eb 14                	jmp    63cf <do_add_thread+0x6f>
    63bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    63c0:	41 8b 84 24 58 01 00 	mov    0x158(%r12),%eax
    63c7:	00 
    63c8:	83 c2 01             	add    $0x1,%edx
    63cb:	39 c2                	cmp    %eax,%edx
    63cd:	73 37                	jae    6406 <do_add_thread+0xa6>
    63cf:	89 d0                	mov    %edx,%eax
    63d1:	48 83 c0 0b          	add    $0xb,%rax
    63d5:	48 c1 e0 05          	shl    $0x5,%rax
    63d9:	4c 01 e0             	add    %r12,%rax
    63dc:	44 0f b7 28          	movzwl (%rax),%r13d
    63e0:	66 41 83 fd 0e       	cmp    $0xe,%r13w
    63e5:	75 d9                	jne    63c0 <do_add_thread+0x60>
    63e7:	8d 42 0b             	lea    0xb(%rdx),%eax
    63ea:	48 c1 e0 05          	shl    $0x5,%rax
    63ee:	4c 01 e0             	add    %r12,%rax
    63f1:	74 13                	je     6406 <do_add_thread+0xa6>
    63f3:	4c 8b 34 24          	mov    (%rsp),%r14
    63f7:	48 8b 40 08          	mov    0x8(%rax),%rax
    63fb:	49 01 ee             	add    %rbp,%r14
    63fe:	4c 01 f0             	add    %r14,%rax
    6401:	48 39 d8             	cmp    %rbx,%rax
    6404:	74 4e                	je     6454 <do_add_thread+0xf4>
    6406:	b8 01 00 00 00       	mov    $0x1,%eax
    640b:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    6410:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    6417:	00 00 
    6419:	0f 85 f9 00 00 00    	jne    6518 <do_add_thread+0x1b8>
    641f:	48 83 c4 10          	add    $0x10,%rsp
    6423:	5b                   	pop    %rbx
    6424:	5d                   	pop    %rbp
    6425:	41 5c                	pop    %r12
    6427:	41 5d                	pop    %r13
    6429:	41 5e                	pop    %r14
    642b:	c3                   	ret    
    642c:	0f 1f 40 00          	nopl   0x0(%rax)
    6430:	8d 42 0b             	lea    0xb(%rdx),%eax
    6433:	48 c1 e0 05          	shl    $0x5,%rax
    6437:	4c 01 e0             	add    %r12,%rax
    643a:	74 0d                	je     6449 <do_add_thread+0xe9>
    643c:	0f b7 50 02          	movzwl 0x2(%rax),%edx
    6440:	83 e2 20             	and    $0x20,%edx
    6443:	0f 85 af 00 00 00    	jne    64f8 <do_add_thread+0x198>
    6449:	41 83 c5 01          	add    $0x1,%r13d
    644d:	66 41 83 fd 13       	cmp    $0x13,%r13w
    6452:	74 3c                	je     6490 <do_add_thread+0x130>
    6454:	41 8b 84 24 58 01 00 	mov    0x158(%r12),%eax
    645b:	00 
    645c:	31 d2                	xor    %edx,%edx
    645e:	85 c0                	test   %eax,%eax
    6460:	75 15                	jne    6477 <do_add_thread+0x117>
    6462:	eb e5                	jmp    6449 <do_add_thread+0xe9>
    6464:	0f 1f 40 00          	nopl   0x0(%rax)
    6468:	41 8b 84 24 58 01 00 	mov    0x158(%r12),%eax
    646f:	00 
    6470:	83 c2 01             	add    $0x1,%edx
    6473:	39 c2                	cmp    %eax,%edx
    6475:	73 d2                	jae    6449 <do_add_thread+0xe9>
    6477:	89 d0                	mov    %edx,%eax
    6479:	48 83 c0 0b          	add    $0xb,%rax
    647d:	48 c1 e0 05          	shl    $0x5,%rax
    6481:	4c 01 e0             	add    %r12,%rax
    6484:	0f b7 00             	movzwl (%rax),%eax
    6487:	66 44 39 e8          	cmp    %r13w,%ax
    648b:	75 db                	jne    6468 <do_add_thread+0x108>
    648d:	eb a1                	jmp    6430 <do_add_thread+0xd0>
    648f:	90                   	nop
    6490:	ba 48 00 00 00       	mov    $0x48,%edx
    6495:	49 8d b4 24 10 01 00 	lea    0x110(%r12),%rsi
    649c:	00 
    649d:	48 89 df             	mov    %rbx,%rdi
    64a0:	e8 4b a2 00 00       	call   106f0 <memcpy>
    64a5:	f3 0f 6f 4b 30       	movdqu 0x30(%rbx),%xmm1
    64aa:	48 89 d8             	mov    %rbx,%rax
    64ad:	48 89 df             	mov    %rbx,%rdi
    64b0:	66 48 0f 6e c3       	movq   %rbx,%xmm0
    64b5:	48 29 e8             	sub    %rbp,%rax
    64b8:	48 01 43 10          	add    %rax,0x10(%rbx)
    64bc:	ba 00 01 00 00       	mov    $0x100,%edx
    64c1:	66 0f 6c c0          	punpcklqdq %xmm0,%xmm0
    64c5:	be 00 10 00 00       	mov    $0x1000,%esi
    64ca:	66 0f d4 c8          	paddq  %xmm0,%xmm1
    64ce:	66 48 0f 6e c5       	movq   %rbp,%xmm0
    64d3:	66 0f 6c c0          	punpcklqdq %xmm0,%xmm0
    64d7:	66 0f fb c8          	psubq  %xmm0,%xmm1
    64db:	0f 11 4b 30          	movups %xmm1,0x30(%rbx)
    64df:	e8 3c 55 00 00       	call   ba20 <mm_modify_type>
    64e4:	85 c0                	test   %eax,%eax
    64e6:	0f 95 c0             	setne  %al
    64e9:	0f b6 c0             	movzbl %al,%eax
    64ec:	e9 1a ff ff ff       	jmp    640b <do_add_thread+0xab>
    64f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    64f8:	8b 70 04             	mov    0x4(%rax),%esi
    64fb:	48 8b 78 08          	mov    0x8(%rax),%rdi
    64ff:	48 c1 e6 0c          	shl    $0xc,%rsi
    6503:	4c 01 f7             	add    %r14,%rdi
    6506:	e8 d5 54 00 00       	call   b9e0 <mm_commit>
    650b:	85 c0                	test   %eax,%eax
    650d:	0f 84 36 ff ff ff    	je     6449 <do_add_thread+0xe9>
    6513:	e9 ee fe ff ff       	jmp    6406 <do_add_thread+0xa6>
    6518:	e8 63 a5 00 00       	call   10a80 <__stack_chk_fail>
    651d:	0f 1f 00             	nopl   (%rax)

0000000000006520 <sgx_set_ssa_aexnotify>:
    6520:	f3 0f 1e fa          	endbr64 
    6524:	55                   	push   %rbp
    6525:	89 fd                	mov    %edi,%ebp
    6527:	53                   	push   %rbx
    6528:	48 83 ec 08          	sub    $0x8,%rsp
    652c:	e8 12 bc 00 00       	call   12143 <get_thread_data>
    6531:	48 85 c0             	test   %rax,%rax
    6534:	74 3a                	je     6570 <sgx_set_ssa_aexnotify+0x50>
    6536:	48 89 c3             	mov    %rax,%rbx
    6539:	e8 12 af 00 00       	call   11450 <sgx_self_report>
    653e:	f6 40 31 04          	testb  $0x4,0x31(%rax)
    6542:	74 2c                	je     6570 <sgx_set_ssa_aexnotify+0x50>
    6544:	48 8b 53 20          	mov    0x20(%rbx),%rdx
    6548:	0f b6 82 a7 00 00 00 	movzbl 0xa7(%rdx),%eax
    654f:	89 c1                	mov    %eax,%ecx
    6551:	83 c8 01             	or     $0x1,%eax
    6554:	83 e1 fe             	and    $0xfffffffe,%ecx
    6557:	85 ed                	test   %ebp,%ebp
    6559:	0f 44 c1             	cmove  %ecx,%eax
    655c:	88 82 a7 00 00 00    	mov    %al,0xa7(%rdx)
    6562:	48 83 c4 08          	add    $0x8,%rsp
    6566:	31 c0                	xor    %eax,%eax
    6568:	5b                   	pop    %rbx
    6569:	5d                   	pop    %rbp
    656a:	c3                   	ret    
    656b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6570:	48 83 c4 08          	add    $0x8,%rsp
    6574:	b8 01 00 00 00       	mov    $0x1,%eax
    6579:	5b                   	pop    %rbx
    657a:	5d                   	pop    %rbp
    657b:	c3                   	ret    
    657c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000006580 <sgx_register_aex_handler>:
    6580:	f3 0f 1e fa          	endbr64 
    6584:	48 85 ff             	test   %rdi,%rdi
    6587:	0f 84 bb 00 00 00    	je     6648 <sgx_register_aex_handler+0xc8>
    658d:	41 55                	push   %r13
    658f:	b8 02 00 00 00       	mov    $0x2,%eax
    6594:	41 54                	push   %r12
    6596:	49 89 f4             	mov    %rsi,%r12
    6599:	55                   	push   %rbp
    659a:	53                   	push   %rbx
    659b:	48 83 ec 08          	sub    $0x8,%rsp
    659f:	48 85 f6             	test   %rsi,%rsi
    65a2:	74 2a                	je     65ce <sgx_register_aex_handler+0x4e>
    65a4:	48 89 fb             	mov    %rdi,%rbx
    65a7:	48 89 d5             	mov    %rdx,%rbp
    65aa:	e8 f1 11 00 00       	call   77a0 <get_ssa_aexnotify>
    65af:	85 c0                	test   %eax,%eax
    65b1:	75 2d                	jne    65e0 <sgx_register_aex_handler+0x60>
    65b3:	e8 8b bb 00 00       	call   12143 <get_thread_data>
    65b8:	66 48 0f 6e c5       	movq   %rbp,%xmm0
    65bd:	0f 16 40 48          	movhps 0x48(%rax),%xmm0
    65c1:	4c 89 23             	mov    %r12,(%rbx)
    65c4:	0f 11 43 08          	movups %xmm0,0x8(%rbx)
    65c8:	48 89 58 48          	mov    %rbx,0x48(%rax)
    65cc:	31 c0                	xor    %eax,%eax
    65ce:	48 83 c4 08          	add    $0x8,%rsp
    65d2:	5b                   	pop    %rbx
    65d3:	5d                   	pop    %rbp
    65d4:	41 5c                	pop    %r12
    65d6:	41 5d                	pop    %r13
    65d8:	c3                   	ret    
    65d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    65e0:	e8 5e bb 00 00       	call   12143 <get_thread_data>
    65e5:	49 89 c5             	mov    %rax,%r13
    65e8:	48 85 c0             	test   %rax,%rax
    65eb:	74 16                	je     6603 <sgx_register_aex_handler+0x83>
    65ed:	e8 5e ae 00 00       	call   11450 <sgx_self_report>
    65f2:	f6 40 31 04          	testb  $0x4,0x31(%rax)
    65f6:	74 0b                	je     6603 <sgx_register_aex_handler+0x83>
    65f8:	49 8b 45 20          	mov    0x20(%r13),%rax
    65fc:	80 a0 a7 00 00 00 fe 	andb   $0xfe,0xa7(%rax)
    6603:	e8 3b bb 00 00       	call   12143 <get_thread_data>
    6608:	66 48 0f 6e c5       	movq   %rbp,%xmm0
    660d:	0f 16 40 48          	movhps 0x48(%rax),%xmm0
    6611:	4c 89 23             	mov    %r12,(%rbx)
    6614:	0f 11 43 08          	movups %xmm0,0x8(%rbx)
    6618:	48 89 58 48          	mov    %rbx,0x48(%rax)
    661c:	e8 22 bb 00 00       	call   12143 <get_thread_data>
    6621:	48 89 c3             	mov    %rax,%rbx
    6624:	48 85 c0             	test   %rax,%rax
    6627:	74 a3                	je     65cc <sgx_register_aex_handler+0x4c>
    6629:	e8 22 ae 00 00       	call   11450 <sgx_self_report>
    662e:	f6 40 31 04          	testb  $0x4,0x31(%rax)
    6632:	74 98                	je     65cc <sgx_register_aex_handler+0x4c>
    6634:	48 8b 43 20          	mov    0x20(%rbx),%rax
    6638:	80 88 a7 00 00 00 01 	orb    $0x1,0xa7(%rax)
    663f:	31 c0                	xor    %eax,%eax
    6641:	eb 8b                	jmp    65ce <sgx_register_aex_handler+0x4e>
    6643:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6648:	b8 02 00 00 00       	mov    $0x2,%eax
    664d:	c3                   	ret    
    664e:	66 90                	xchg   %ax,%ax

0000000000006650 <sgx_unregister_aex_handler>:
    6650:	f3 0f 1e fa          	endbr64 
    6654:	41 54                	push   %r12
    6656:	55                   	push   %rbp
    6657:	53                   	push   %rbx
    6658:	48 85 ff             	test   %rdi,%rdi
    665b:	0f 84 e7 00 00 00    	je     6748 <sgx_unregister_aex_handler+0xf8>
    6661:	48 89 fd             	mov    %rdi,%rbp
    6664:	e8 37 11 00 00       	call   77a0 <get_ssa_aexnotify>
    6669:	89 c3                	mov    %eax,%ebx
    666b:	85 c0                	test   %eax,%eax
    666d:	75 61                	jne    66d0 <sgx_unregister_aex_handler+0x80>
    666f:	e8 cf ba 00 00       	call   12143 <get_thread_data>
    6674:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    667a:	48 8b 50 48          	mov    0x48(%rax),%rdx
    667e:	48 85 d2             	test   %rdx,%rdx
    6681:	74 3d                	je     66c0 <sgx_unregister_aex_handler+0x70>
    6683:	31 f6                	xor    %esi,%esi
    6685:	eb 1c                	jmp    66a3 <sgx_unregister_aex_handler+0x53>
    6687:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    668e:	00 00 
    6690:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
    6694:	48 89 d6             	mov    %rdx,%rsi
    6697:	48 85 c9             	test   %rcx,%rcx
    669a:	0f 84 98 00 00 00    	je     6738 <sgx_unregister_aex_handler+0xe8>
    66a0:	48 89 ca             	mov    %rcx,%rdx
    66a3:	48 39 2a             	cmp    %rbp,(%rdx)
    66a6:	75 e8                	jne    6690 <sgx_unregister_aex_handler+0x40>
    66a8:	48 8b 52 10          	mov    0x10(%rdx),%rdx
    66ac:	48 85 f6             	test   %rsi,%rsi
    66af:	0f 84 ab 00 00 00    	je     6760 <sgx_unregister_aex_handler+0x110>
    66b5:	48 89 56 10          	mov    %rdx,0x10(%rsi)
    66b9:	45 31 e4             	xor    %r12d,%r12d
    66bc:	85 db                	test   %ebx,%ebx
    66be:	75 48                	jne    6708 <sgx_unregister_aex_handler+0xb8>
    66c0:	44 89 e0             	mov    %r12d,%eax
    66c3:	5b                   	pop    %rbx
    66c4:	5d                   	pop    %rbp
    66c5:	41 5c                	pop    %r12
    66c7:	c3                   	ret    
    66c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    66cf:	00 
    66d0:	e8 6e ba 00 00       	call   12143 <get_thread_data>
    66d5:	49 89 c4             	mov    %rax,%r12
    66d8:	48 85 c0             	test   %rax,%rax
    66db:	74 17                	je     66f4 <sgx_unregister_aex_handler+0xa4>
    66dd:	e8 6e ad 00 00       	call   11450 <sgx_self_report>
    66e2:	f6 40 31 04          	testb  $0x4,0x31(%rax)
    66e6:	74 0c                	je     66f4 <sgx_unregister_aex_handler+0xa4>
    66e8:	49 8b 44 24 20       	mov    0x20(%r12),%rax
    66ed:	80 a0 a7 00 00 00 fe 	andb   $0xfe,0xa7(%rax)
    66f4:	e8 4a ba 00 00       	call   12143 <get_thread_data>
    66f9:	48 8b 50 48          	mov    0x48(%rax),%rdx
    66fd:	48 85 d2             	test   %rdx,%rdx
    6700:	75 81                	jne    6683 <sgx_unregister_aex_handler+0x33>
    6702:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    6708:	e8 36 ba 00 00       	call   12143 <get_thread_data>
    670d:	48 89 c3             	mov    %rax,%rbx
    6710:	48 85 c0             	test   %rax,%rax
    6713:	74 ab                	je     66c0 <sgx_unregister_aex_handler+0x70>
    6715:	e8 36 ad 00 00       	call   11450 <sgx_self_report>
    671a:	f6 40 31 04          	testb  $0x4,0x31(%rax)
    671e:	74 a0                	je     66c0 <sgx_unregister_aex_handler+0x70>
    6720:	48 8b 43 20          	mov    0x20(%rbx),%rax
    6724:	80 88 a7 00 00 00 01 	orb    $0x1,0xa7(%rax)
    672b:	44 89 e0             	mov    %r12d,%eax
    672e:	5b                   	pop    %rbx
    672f:	5d                   	pop    %rbp
    6730:	41 5c                	pop    %r12
    6732:	c3                   	ret    
    6733:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6738:	41 bc 02 00 00 00    	mov    $0x2,%r12d
    673e:	e9 79 ff ff ff       	jmp    66bc <sgx_unregister_aex_handler+0x6c>
    6743:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6748:	41 bc 02 00 00 00    	mov    $0x2,%r12d
    674e:	5b                   	pop    %rbx
    674f:	5d                   	pop    %rbp
    6750:	44 89 e0             	mov    %r12d,%eax
    6753:	41 5c                	pop    %r12
    6755:	c3                   	ret    
    6756:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    675d:	00 00 00 
    6760:	48 89 50 48          	mov    %rdx,0x48(%rax)
    6764:	e9 50 ff ff ff       	jmp    66b9 <sgx_unregister_aex_handler+0x69>
    6769:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000006770 <sgx_apply_mitigations>:
    6770:	f3 0f 1e fa          	endbr64 
    6774:	55                   	push   %rbp
    6775:	48 89 fd             	mov    %rdi,%rbp
    6778:	53                   	push   %rbx
    6779:	48 83 ec 08          	sub    $0x8,%rsp
    677d:	e8 c1 b9 00 00       	call   12143 <get_thread_data>
    6782:	48 8b 58 48          	mov    0x48(%rax),%rbx
    6786:	48 85 db             	test   %rbx,%rbx
    6789:	74 17                	je     67a2 <sgx_apply_mitigations+0x32>
    678b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6790:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    6794:	48 89 ef             	mov    %rbp,%rdi
    6797:	ff 13                	call   *(%rbx)
    6799:	48 8b 5b 10          	mov    0x10(%rbx),%rbx
    679d:	48 85 db             	test   %rbx,%rbx
    67a0:	75 ee                	jne    6790 <sgx_apply_mitigations+0x20>
    67a2:	48 83 c4 08          	add    $0x8,%rsp
    67a6:	31 c0                	xor    %eax,%eax
    67a8:	5b                   	pop    %rbx
    67a9:	5d                   	pop    %rbp
    67aa:	c3                   	ret    
    67ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000067b0 <_pthread_thread_run>:
    67b0:	f3 0f 1e fa          	endbr64 
    67b4:	31 c0                	xor    %eax,%eax
    67b6:	c3                   	ret    
    67b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    67be:	00 00 

00000000000067c0 <_ZL11do_save_tcsPv>:
    67c0:	55                   	push   %rbp
    67c1:	53                   	push   %rbx
    67c2:	48 89 fb             	mov    %rdi,%rbx
    67c5:	48 83 ec 18          	sub    $0x18,%rsp
    67c9:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    67d0:	00 00 
    67d2:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    67d7:	31 c0                	xor    %eax,%eax
    67d9:	48 83 3d 97 39 01 00 	cmpq   $0x0,0x13997(%rip)        # 1a178 <_ZL12g_tcs_cookie>
    67e0:	00 
    67e1:	74 4d                	je     6830 <_ZL11do_save_tcsPv+0x70>
    67e3:	bf 10 00 00 00       	mov    $0x10,%edi
    67e8:	e8 63 69 00 00       	call   d150 <dlmalloc>
    67ed:	48 85 c0             	test   %rax,%rax
    67f0:	74 68                	je     685a <_ZL11do_save_tcsPv+0x9a>
    67f2:	48 8b 15 87 39 01 00 	mov    0x13987(%rip),%rdx        # 1a180 <_ZL10g_tcs_node>
    67f9:	48 33 1d 78 39 01 00 	xor    0x13978(%rip),%rbx        # 1a178 <_ZL12g_tcs_cookie>
    6800:	48 89 05 79 39 01 00 	mov    %rax,0x13979(%rip)        # 1a180 <_ZL10g_tcs_node>
    6807:	48 89 18             	mov    %rbx,(%rax)
    680a:	48 89 50 08          	mov    %rdx,0x8(%rax)
    680e:	31 c0                	xor    %eax,%eax
    6810:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    6815:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    681c:	00 00 
    681e:	75 62                	jne    6882 <_ZL11do_save_tcsPv+0xc2>
    6820:	48 83 c4 18          	add    $0x18,%rsp
    6824:	5b                   	pop    %rbx
    6825:	5d                   	pop    %rbp
    6826:	c3                   	ret    
    6827:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    682e:	00 00 
    6830:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    6837:	00 
    6838:	48 89 e5             	mov    %rsp,%rbp
    683b:	eb 0c                	jmp    6849 <_ZL11do_save_tcsPv+0x89>
    683d:	0f 1f 00             	nopl   (%rax)
    6840:	48 8b 04 24          	mov    (%rsp),%rax
    6844:	48 85 c0             	test   %rax,%rax
    6847:	75 1f                	jne    6868 <_ZL11do_save_tcsPv+0xa8>
    6849:	be 08 00 00 00       	mov    $0x8,%esi
    684e:	48 89 ef             	mov    %rbp,%rdi
    6851:	e8 2a f5 ff ff       	call   5d80 <sgx_read_rand>
    6856:	85 c0                	test   %eax,%eax
    6858:	74 e6                	je     6840 <_ZL11do_save_tcsPv+0x80>
    685a:	b8 01 00 00 00       	mov    $0x1,%eax
    685f:	eb af                	jmp    6810 <_ZL11do_save_tcsPv+0x50>
    6861:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6868:	48 83 3d 08 39 01 00 	cmpq   $0x0,0x13908(%rip)        # 1a178 <_ZL12g_tcs_cookie>
    686f:	00 
    6870:	0f 85 6d ff ff ff    	jne    67e3 <_ZL11do_save_tcsPv+0x23>
    6876:	48 89 05 fb 38 01 00 	mov    %rax,0x138fb(%rip)        # 1a178 <_ZL12g_tcs_cookie>
    687d:	e9 61 ff ff ff       	jmp    67e3 <_ZL11do_save_tcsPv+0x23>
    6882:	e8 f9 a1 00 00       	call   10a80 <__stack_chk_fail>
    6887:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    688e:	00 00 

0000000000006890 <_ZL18add_static_threadsPVK9_layout_tS1_m>:
    6890:	48 39 f7             	cmp    %rsi,%rdi
    6893:	0f 83 cf 00 00 00    	jae    6968 <_ZL18add_static_threadsPVK9_layout_tS1_m+0xd8>
    6899:	41 56                	push   %r14
    689b:	41 55                	push   %r13
    689d:	49 89 f5             	mov    %rsi,%r13
    68a0:	41 54                	push   %r12
    68a2:	49 89 d4             	mov    %rdx,%r12
    68a5:	55                   	push   %rbp
    68a6:	53                   	push   %rbx
    68a7:	48 89 fb             	mov    %rdi,%rbx
    68aa:	eb 0d                	jmp    68b9 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x29>
    68ac:	0f 1f 40 00          	nopl   0x0(%rax)
    68b0:	48 83 c3 20          	add    $0x20,%rbx
    68b4:	4c 39 eb             	cmp    %r13,%rbx
    68b7:	73 77                	jae    6930 <_ZL18add_static_threadsPVK9_layout_tS1_m+0xa0>
    68b9:	0f b7 03             	movzwl (%rbx),%eax
    68bc:	f6 c4 10             	test   $0x10,%ah
    68bf:	75 13                	jne    68d4 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x44>
    68c1:	48 8b 43 18          	mov    0x18(%rbx),%rax
    68c5:	f6 c4 01             	test   $0x1,%ah
    68c8:	74 0a                	je     68d4 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x44>
    68ca:	0f b7 43 02          	movzwl 0x2(%rbx),%eax
    68ce:	66 83 f8 03          	cmp    $0x3,%ax
    68d2:	74 6c                	je     6940 <_ZL18add_static_threadsPVK9_layout_tS1_m+0xb0>
    68d4:	0f b7 03             	movzwl (%rbx),%eax
    68d7:	f6 c4 10             	test   $0x10,%ah
    68da:	74 d4                	je     68b0 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x20>
    68dc:	8b 43 04             	mov    0x4(%rbx),%eax
    68df:	85 c0                	test   %eax,%eax
    68e1:	74 cd                	je     68b0 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x20>
    68e3:	31 ed                	xor    %ebp,%ebp
    68e5:	45 31 f6             	xor    %r14d,%r14d
    68e8:	eb 10                	jmp    68fa <_ZL18add_static_threadsPVK9_layout_tS1_m+0x6a>
    68ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    68f0:	8b 43 04             	mov    0x4(%rbx),%eax
    68f3:	83 c5 01             	add    $0x1,%ebp
    68f6:	39 c5                	cmp    %eax,%ebp
    68f8:	73 b6                	jae    68b0 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x20>
    68fa:	48 8b 43 08          	mov    0x8(%rbx),%rax
    68fe:	0f b7 7b 02          	movzwl 0x2(%rbx),%edi
    6902:	48 89 de             	mov    %rbx,%rsi
    6905:	f7 df                	neg    %edi
    6907:	49 01 c6             	add    %rax,%r14
    690a:	48 63 ff             	movslq %edi,%rdi
    690d:	4c 89 f2             	mov    %r14,%rdx
    6910:	48 c1 e7 05          	shl    $0x5,%rdi
    6914:	48 01 df             	add    %rbx,%rdi
    6917:	e8 74 ff ff ff       	call   6890 <_ZL18add_static_threadsPVK9_layout_tS1_m>
    691c:	85 c0                	test   %eax,%eax
    691e:	74 d0                	je     68f0 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x60>
    6920:	5b                   	pop    %rbx
    6921:	5d                   	pop    %rbp
    6922:	41 5c                	pop    %r12
    6924:	41 5d                	pop    %r13
    6926:	41 5e                	pop    %r14
    6928:	c3                   	ret    
    6929:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6930:	5b                   	pop    %rbx
    6931:	31 c0                	xor    %eax,%eax
    6933:	5d                   	pop    %rbp
    6934:	41 5c                	pop    %r12
    6936:	41 5d                	pop    %r13
    6938:	41 5e                	pop    %r14
    693a:	c3                   	ret    
    693b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6940:	48 8b 6b 08          	mov    0x8(%rbx),%rbp
    6944:	e8 af b7 00 00       	call   120f8 <get_enclave_base>
    6949:	4c 01 e5             	add    %r12,%rbp
    694c:	48 8d 3c 28          	lea    (%rax,%rbp,1),%rdi
    6950:	e8 6b fe ff ff       	call   67c0 <_ZL11do_save_tcsPv>
    6955:	85 c0                	test   %eax,%eax
    6957:	0f 84 53 ff ff ff    	je     68b0 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x20>
    695d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    6962:	eb bc                	jmp    6920 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x90>
    6964:	0f 1f 40 00          	nopl   0x0(%rax)
    6968:	31 c0                	xor    %eax,%eax
    696a:	c3                   	ret    
    696b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000006970 <_ZL10trts_ecalljPv>:
    6970:	f3 0f 1e fa          	endbr64 
    6974:	41 55                	push   %r13
    6976:	41 54                	push   %r12
    6978:	55                   	push   %rbp
    6979:	48 89 f5             	mov    %rsi,%rbp
    697c:	53                   	push   %rbx
    697d:	89 fb                	mov    %edi,%ebx
    697f:	48 83 ec 08          	sub    $0x8,%rsp
    6983:	0f b6 05 96 18 01 00 	movzbl 0x11896(%rip),%eax        # 18220 <_ZL16g_is_first_ecall>
    698a:	84 c0                	test   %al,%al
    698c:	0f 85 b6 00 00 00    	jne    6a48 <_ZL10trts_ecalljPv+0xd8>
    6992:	83 fb fa             	cmp    $0xfffffffa,%ebx
    6995:	0f 84 8d 00 00 00    	je     6a28 <_ZL10trts_ecalljPv+0xb8>
    699b:	4c 8d 25 1e 14 01 00 	lea    0x1141e(%rip),%r12        # 17dc0 <g_ecall_table>
    69a2:	49 3b 1c 24          	cmp    (%r12),%rbx
    69a6:	73 68                	jae    6a10 <_ZL10trts_ecalljPv+0xa0>
    69a8:	e8 96 b7 00 00       	call   12143 <get_thread_data>
    69ad:	0f ae e8             	lfence 
    69b0:	48 8b 50 08          	mov    0x8(%rax),%rdx
    69b4:	48 3b 50 10          	cmp    0x10(%rax),%rdx
    69b8:	0f 84 b2 00 00 00    	je     6a70 <_ZL10trts_ecalljPv+0x100>
    69be:	48 81 7a 20 44 49 43 	cmpq   $0x4f434944,0x20(%rdx)
    69c5:	4f 
    69c6:	0f 85 5b 01 00 00    	jne    6b27 <_ZL10trts_ecalljPv+0x1b7>
    69cc:	48 8d 05 5d c6 00 00 	lea    0xc65d(%rip),%rax        # 13030 <g_dyn_entry_table>
    69d3:	48 8b 52 28          	mov    0x28(%rdx),%rdx
    69d7:	48 3b 10             	cmp    (%rax),%rdx
    69da:	73 34                	jae    6a10 <_ZL10trts_ecalljPv+0xa0>
    69dc:	49 0f af 14 24       	imul   (%r12),%rdx
    69e1:	48 01 d8             	add    %rbx,%rax
    69e4:	80 7c 02 08 00       	cmpb   $0x0,0x8(%rdx,%rax,1)
    69e9:	74 6c                	je     6a57 <_ZL10trts_ecalljPv+0xe7>
    69eb:	48 c1 e3 04          	shl    $0x4,%rbx
    69ef:	31 f6                	xor    %esi,%esi
    69f1:	49 8b 5c 1c 08       	mov    0x8(%r12,%rbx,1),%rbx
    69f6:	48 89 df             	mov    %rbx,%rdi
    69f9:	e8 82 f1 ff ff       	call   5b80 <sgx_is_within_enclave>
    69fe:	85 c0                	test   %eax,%eax
    6a00:	0f 84 8a 00 00 00    	je     6a90 <_ZL10trts_ecalljPv+0x120>
    6a06:	48 89 d8             	mov    %rbx,%rax
    6a09:	eb 24                	jmp    6a2f <_ZL10trts_ecalljPv+0xbf>
    6a0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6a10:	41 bc 01 10 00 00    	mov    $0x1001,%r12d
    6a16:	48 83 c4 08          	add    $0x8,%rsp
    6a1a:	44 89 e0             	mov    %r12d,%eax
    6a1d:	5b                   	pop    %rbx
    6a1e:	5d                   	pop    %rbp
    6a1f:	41 5c                	pop    %r12
    6a21:	41 5d                	pop    %r13
    6a23:	c3                   	ret    
    6a24:	0f 1f 40 00          	nopl   0x0(%rax)
    6a28:	48 8d 05 81 fd ff ff 	lea    -0x27f(%rip),%rax        # 67b0 <_pthread_thread_run>
    6a2f:	0f ae e8             	lfence 
    6a32:	48 83 c4 08          	add    $0x8,%rsp
    6a36:	48 89 ef             	mov    %rbp,%rdi
    6a39:	5b                   	pop    %rbx
    6a3a:	5d                   	pop    %rbp
    6a3b:	41 5c                	pop    %r12
    6a3d:	41 5d                	pop    %r13
    6a3f:	ff e0                	jmp    *%rax
    6a41:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6a48:	e8 f6 b6 00 00       	call   12143 <get_thread_data>
    6a4d:	48 8b 48 10          	mov    0x10(%rax),%rcx
    6a51:	48 39 48 08          	cmp    %rcx,0x8(%rax)
    6a55:	74 49                	je     6aa0 <_ZL10trts_ecalljPv+0x130>
    6a57:	48 83 c4 08          	add    $0x8,%rsp
    6a5b:	41 bc 07 10 00 00    	mov    $0x1007,%r12d
    6a61:	5b                   	pop    %rbx
    6a62:	44 89 e0             	mov    %r12d,%eax
    6a65:	5d                   	pop    %rbp
    6a66:	41 5c                	pop    %r12
    6a68:	41 5d                	pop    %r13
    6a6a:	c3                   	ret    
    6a6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6a70:	48 89 d8             	mov    %rbx,%rax
    6a73:	48 c1 e0 04          	shl    $0x4,%rax
    6a77:	41 80 7c 04 10 00    	cmpb   $0x0,0x10(%r12,%rax,1)
    6a7d:	0f 84 68 ff ff ff    	je     69eb <_ZL10trts_ecalljPv+0x7b>
    6a83:	eb d2                	jmp    6a57 <_ZL10trts_ecalljPv+0xe7>
    6a85:	4c 89 ef             	mov    %r13,%rdi
    6a88:	e8 93 5d 00 00       	call   c820 <sgx_spin_unlock>
    6a8d:	0f 1f 00             	nopl   (%rax)
    6a90:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    6a96:	e9 7b ff ff ff       	jmp    6a16 <_ZL10trts_ecalljPv+0xa6>
    6a9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6aa0:	4c 8d 2d cd 36 01 00 	lea    0x136cd(%rip),%r13        # 1a174 <_ZL10g_ife_lock>
    6aa7:	4c 89 ef             	mov    %r13,%rdi
    6aaa:	e8 e1 5c 00 00       	call   c790 <sgx_spin_lock>
    6aaf:	0f b6 05 6a 17 01 00 	movzbl 0x1176a(%rip),%eax        # 18220 <_ZL16g_is_first_ecall>
    6ab6:	84 c0                	test   %al,%al
    6ab8:	74 53                	je     6b0d <_ZL10trts_ecalljPv+0x19d>
    6aba:	48 8d 05 6b 13 01 00 	lea    0x1136b(%rip),%rax        # 17e2c <EDMM_supported>
    6ac1:	8b 00                	mov    (%rax),%eax
    6ac3:	85 c0                	test   %eax,%eax
    6ac5:	74 3a                	je     6b01 <_ZL10trts_ecalljPv+0x191>
    6ac7:	48 8d 05 b2 c6 00 00 	lea    0xc6b2(%rip),%rax        # 13180 <g_global_data>
    6ace:	31 d2                	xor    %edx,%edx
    6ad0:	8b b0 58 01 00 00    	mov    0x158(%rax),%esi
    6ad6:	48 8d b8 60 01 00 00 	lea    0x160(%rax),%rdi
    6add:	48 c1 e6 05          	shl    $0x5,%rsi
    6ae1:	48 01 fe             	add    %rdi,%rsi
    6ae4:	e8 a7 fd ff ff       	call   6890 <_ZL18add_static_threadsPVK9_layout_tS1_m>
    6ae9:	85 c0                	test   %eax,%eax
    6aeb:	75 98                	jne    6a85 <_ZL10trts_ecalljPv+0x115>
    6aed:	e8 06 b6 00 00       	call   120f8 <get_enclave_base>
    6af2:	48 89 c7             	mov    %rax,%rdi
    6af5:	e8 a6 1d 00 00       	call   88a0 <change_protection>
    6afa:	41 89 c4             	mov    %eax,%r12d
    6afd:	85 c0                	test   %eax,%eax
    6aff:	75 19                	jne    6b1a <_ZL10trts_ecalljPv+0x1aa>
    6b01:	e8 ca 21 00 00       	call   8cd0 <init_global_object>
    6b06:	c6 05 13 17 01 00 00 	movb   $0x0,0x11713(%rip)        # 18220 <_ZL16g_is_first_ecall>
    6b0d:	4c 89 ef             	mov    %r13,%rdi
    6b10:	e8 0b 5d 00 00       	call   c820 <sgx_spin_unlock>
    6b15:	e9 78 fe ff ff       	jmp    6992 <_ZL10trts_ecalljPv+0x22>
    6b1a:	4c 89 ef             	mov    %r13,%rdi
    6b1d:	e8 fe 5c 00 00       	call   c820 <sgx_spin_unlock>
    6b22:	e9 ef fe ff ff       	jmp    6a16 <_ZL10trts_ecalljPv+0xa6>
    6b27:	e8 0b ba 00 00       	call   12537 <abort>
    6b2c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000006b30 <_Z30_random_stack_noinline_wrapperI9_status_tJjPvEJRiRS1_EET_PFS4_DpT0_EDpOT1_.constprop.0.isra.0>:
    6b30:	e9 3b fe ff ff       	jmp    6970 <_ZL10trts_ecalljPv>
    6b35:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6b3c:	00 00 00 
    6b3f:	90                   	nop

0000000000006b40 <_Z16_pthread_enabledv>:
    6b40:	f3 0f 1e fa          	endbr64 
    6b44:	31 c0                	xor    %eax,%eax
    6b46:	c3                   	ret    
    6b47:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    6b4e:	00 00 

0000000000006b50 <_Z24_pthread_tls_store_state9_status_t>:
    6b50:	f3 0f 1e fa          	endbr64 
    6b54:	c3                   	ret    
    6b55:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6b5c:	00 00 00 
    6b5f:	90                   	nop

0000000000006b60 <_Z22_pthread_tls_get_statev>:
    6b60:	f3 0f 1e fa          	endbr64 
    6b64:	31 c0                	xor    %eax,%eax
    6b66:	c3                   	ret    
    6b67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    6b6e:	00 00 

0000000000006b70 <_Z26_pthread_tls_store_contextPv>:
    6b70:	f3 0f 1e fa          	endbr64 
    6b74:	c3                   	ret    
    6b75:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6b7c:	00 00 00 
    6b7f:	90                   	nop

0000000000006b80 <_Z20_pthread_wakeup_joinPv>:
    6b80:	f3 0f 1e fa          	endbr64 
    6b84:	c3                   	ret    
    6b85:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6b8c:	00 00 00 
    6b8f:	90                   	nop

0000000000006b90 <_Z24_pthread_tls_destructorsv>:
    6b90:	f3 0f 1e fa          	endbr64 
    6b94:	c3                   	ret    
    6b95:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6b9c:	00 00 00 
    6b9f:	90                   	nop

0000000000006ba0 <tc_set_idle>:
    6ba0:	f3 0f 1e fa          	endbr64 
    6ba4:	c3                   	ret    
    6ba5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6bac:	00 00 00 
    6baf:	90                   	nop

0000000000006bb0 <do_init_thread>:
    6bb0:	f3 0f 1e fa          	endbr64 
    6bb4:	41 57                	push   %r15
    6bb6:	66 48 0f 6e d7       	movq   %rdi,%xmm2
    6bbb:	ba c0 00 00 00       	mov    $0xc0,%edx
    6bc0:	41 56                	push   %r14
    6bc2:	66 0f 6c d2          	punpcklqdq %xmm2,%xmm2
    6bc6:	41 55                	push   %r13
    6bc8:	41 54                	push   %r12
    6bca:	41 89 f4             	mov    %esi,%r12d
    6bcd:	55                   	push   %rbp
    6bce:	48 89 fd             	mov    %rdi,%rbp
    6bd1:	53                   	push   %rbx
    6bd2:	48 83 ec 38          	sub    $0x38,%rsp
    6bd6:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    6bdd:	00 00 
    6bdf:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    6be4:	48 8d 05 95 c5 00 00 	lea    0xc595(%rip),%rax        # 13180 <g_global_data>
    6beb:	0f 29 14 24          	movaps %xmm2,(%rsp)
    6bef:	48 8b 58 50          	mov    0x50(%rax),%rbx
    6bf3:	48 8d 70 50          	lea    0x50(%rax),%rsi
    6bf7:	48 01 fb             	add    %rdi,%rbx
    6bfa:	48 89 df             	mov    %rbx,%rdi
    6bfd:	4c 8b 7b 28          	mov    0x28(%rbx),%r15
    6c01:	4c 8b 73 30          	mov    0x30(%rbx),%r14
    6c05:	4c 8b ab b0 00 00 00 	mov    0xb0(%rbx),%r13
    6c0c:	e8 df 9a 00 00       	call   106f0 <memcpy>
    6c11:	48 8d 85 00 fc ff ff 	lea    -0x400(%rbp),%rax
    6c18:	f3 0f 6f 1b          	movdqu (%rbx),%xmm3
    6c1c:	f3 0f 6f 6b 10       	movdqu 0x10(%rbx),%xmm5
    6c21:	66 48 0f 6e c0       	movq   %rax,%xmm0
    6c26:	48 8b 43 18          	mov    0x18(%rbx),%rax
    6c2a:	f3 0f 6f 73 68       	movdqu 0x68(%rbx),%xmm6
    6c2f:	66 48 0f 6e cd       	movq   %rbp,%xmm1
    6c34:	66 0f 6f 14 24       	movdqa (%rsp),%xmm2
    6c39:	66 48 0f 6e e5       	movq   %rbp,%xmm4
    6c3e:	66 0f 6c c8          	punpcklqdq %xmm0,%xmm1
    6c42:	48 01 6b 20          	add    %rbp,0x20(%rbx)
    6c46:	48 01 e8             	add    %rbp,%rax
    6c49:	66 0f 6c c4          	punpcklqdq %xmm4,%xmm0
    6c4d:	66 0f d4 cb          	paddq  %xmm3,%xmm1
    6c51:	48 01 6b 58          	add    %rbp,0x58(%rbx)
    6c55:	48 89 83 b0 00 00 00 	mov    %rax,0xb0(%rbx)
    6c5c:	48 8d 05 a5 11 01 00 	lea    0x111a5(%rip),%rax        # 17e08 <__intel_security_cookie>
    6c63:	66 0f d4 c5          	paddq  %xmm5,%xmm0
    6c67:	66 0f d4 d6          	paddq  %xmm6,%xmm2
    6c6b:	4c 89 7b 28          	mov    %r15,0x28(%rbx)
    6c6f:	48 8b 00             	mov    (%rax),%rax
    6c72:	4c 89 73 30          	mov    %r14,0x30(%rbx)
    6c76:	0f 11 53 68          	movups %xmm2,0x68(%rbx)
    6c7a:	0f 11 0b             	movups %xmm1,(%rbx)
    6c7d:	0f 11 43 10          	movups %xmm0,0x10(%rbx)
    6c81:	48 89 85 08 fc fe ff 	mov    %rax,-0x103f8(%rbp)
    6c88:	48 8d 05 9d 11 01 00 	lea    0x1119d(%rip),%rax        # 17e2c <EDMM_supported>
    6c8f:	8b 00                	mov    (%rax),%eax
    6c91:	85 c0                	test   %eax,%eax
    6c93:	48 8d 05 7a 11 01 00 	lea    0x1117a(%rip),%rax        # 17e14 <g_aexnotify_supported>
    6c9a:	0f 85 f0 00 00 00    	jne    6d90 <do_init_thread+0x1e0>
    6ca0:	83 38 01             	cmpl   $0x1,(%rax)
    6ca3:	0f 84 17 01 00 00    	je     6dc0 <do_init_thread+0x210>
    6ca9:	4d 85 ed             	test   %r13,%r13
    6cac:	0f 85 c8 00 00 00    	jne    6d7a <do_init_thread+0x1ca>
    6cb2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6cb8:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
    6cbf:	00 00 
    6cc1:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    6cc8:	00 00 
    6cca:	e8 29 b4 00 00       	call   120f8 <get_enclave_base>
    6ccf:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
    6cd4:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
    6cd9:	48 89 c7             	mov    %rax,%rdi
    6cdc:	e8 3f 19 00 00       	call   8620 <elf_tls_info>
    6ce1:	89 c2                	mov    %eax,%edx
    6ce3:	b8 01 00 00 00       	mov    $0x1,%eax
    6ce8:	85 d2                	test   %edx,%edx
    6cea:	75 0a                	jne    6cf6 <do_init_thread+0x146>
    6cec:	48 83 7c 24 18 00    	cmpq   $0x0,0x18(%rsp)
    6cf2:	75 2c                	jne    6d20 <do_init_thread+0x170>
    6cf4:	31 c0                	xor    %eax,%eax
    6cf6:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    6cfb:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    6d02:	00 00 
    6d04:	0f 85 00 01 00 00    	jne    6e0a <do_init_thread+0x25a>
    6d0a:	48 83 c4 38          	add    $0x38,%rsp
    6d0e:	5b                   	pop    %rbx
    6d0f:	5d                   	pop    %rbp
    6d10:	41 5c                	pop    %r12
    6d12:	41 5d                	pop    %r13
    6d14:	41 5e                	pop    %r14
    6d16:	41 5f                	pop    %r15
    6d18:	c3                   	ret    
    6d19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6d20:	48 8b 03             	mov    (%rbx),%rax
    6d23:	48 8b 7b 68          	mov    0x68(%rbx),%rdi
    6d27:	31 f6                	xor    %esi,%esi
    6d29:	48 8d 90 ff 0f 00 00 	lea    0xfff(%rax),%rdx
    6d30:	48 29 fa             	sub    %rdi,%rdx
    6d33:	48 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%rdi
    6d3a:	48 81 e2 00 f0 ff ff 	and    $0xfffffffffffff000,%rdx
    6d41:	e8 ea 9b 00 00       	call   10930 <memset>
    6d46:	48 8b 7b 68          	mov    0x68(%rbx),%rdi
    6d4a:	48 8b 03             	mov    (%rbx),%rax
    6d4d:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
    6d52:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    6d57:	48 29 f8             	sub    %rdi,%rax
    6d5a:	48 39 d0             	cmp    %rdx,%rax
    6d5d:	72 95                	jb     6cf4 <do_init_thread+0x144>
    6d5f:	e8 8c 99 00 00       	call   106f0 <memcpy>
    6d64:	eb 8e                	jmp    6cf4 <do_init_thread+0x144>
    6d66:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6d6d:	00 00 00 
    6d70:	83 f8 01             	cmp    $0x1,%eax
    6d73:	74 7b                	je     6df0 <do_init_thread+0x240>
    6d75:	4d 85 ed             	test   %r13,%r13
    6d78:	74 5e                	je     6dd8 <do_init_thread+0x228>
    6d7a:	4c 89 ab b0 00 00 00 	mov    %r13,0xb0(%rbx)
    6d81:	e9 32 ff ff ff       	jmp    6cb8 <do_init_thread+0x108>
    6d86:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6d8d:	00 00 00 
    6d90:	8b 00                	mov    (%rax),%eax
    6d92:	45 84 e4             	test   %r12b,%r12b
    6d95:	74 d9                	je     6d70 <do_init_thread+0x1c0>
    6d97:	48 c7 43 30 01 00 00 	movq   $0x1,0x30(%rbx)
    6d9e:	00 
    6d9f:	83 f8 01             	cmp    $0x1,%eax
    6da2:	74 5c                	je     6e00 <do_init_thread+0x250>
    6da4:	4d 85 ed             	test   %r13,%r13
    6da7:	75 d1                	jne    6d7a <do_init_thread+0x1ca>
    6da9:	e8 52 f5 ff ff       	call   6300 <get_dynamic_stack_max_page>
    6dae:	89 c0                	mov    %eax,%eax
    6db0:	48 c1 e0 0c          	shl    $0xc,%rax
    6db4:	48 01 83 b0 00 00 00 	add    %rax,0xb0(%rbx)
    6dbb:	e9 f8 fe ff ff       	jmp    6cb8 <do_init_thread+0x108>
    6dc0:	48 c7 43 50 01 00 00 	movq   $0x1,0x50(%rbx)
    6dc7:	00 
    6dc8:	4d 85 ed             	test   %r13,%r13
    6dcb:	75 ad                	jne    6d7a <do_init_thread+0x1ca>
    6dcd:	e9 e6 fe ff ff       	jmp    6cb8 <do_init_thread+0x108>
    6dd2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6dd8:	48 89 ef             	mov    %rbp,%rdi
    6ddb:	e8 50 f4 ff ff       	call   6230 <is_dynamic_thread>
    6de0:	85 c0                	test   %eax,%eax
    6de2:	75 c5                	jne    6da9 <do_init_thread+0x1f9>
    6de4:	e9 cf fe ff ff       	jmp    6cb8 <do_init_thread+0x108>
    6de9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6df0:	48 c7 43 50 01 00 00 	movq   $0x1,0x50(%rbx)
    6df7:	00 
    6df8:	e9 78 ff ff ff       	jmp    6d75 <do_init_thread+0x1c5>
    6dfd:	0f 1f 00             	nopl   (%rax)
    6e00:	48 c7 43 50 01 00 00 	movq   $0x1,0x50(%rbx)
    6e07:	00 
    6e08:	eb 9a                	jmp    6da4 <do_init_thread+0x1f4>
    6e0a:	e8 71 9c 00 00       	call   10a80 <__stack_chk_fail>
    6e0f:	90                   	nop

0000000000006e10 <do_ecall>:
    6e10:	f3 0f 1e fa          	endbr64 
    6e14:	53                   	push   %rbx
    6e15:	48 89 d3             	mov    %rdx,%rbx
    6e18:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    6e1c:	89 7c 24 20          	mov    %edi,0x20(%rsp)
    6e20:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    6e25:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    6e2c:	00 00 
    6e2e:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    6e33:	31 c0                	xor    %eax,%eax
    6e35:	e8 ca b2 00 00       	call   12104 <get_enclave_state>
    6e3a:	89 c2                	mov    %eax,%edx
    6e3c:	b8 01 00 00 00       	mov    $0x1,%eax
    6e41:	83 fa 02             	cmp    $0x2,%edx
    6e44:	74 1a                	je     6e60 <do_ecall+0x50>
    6e46:	48 8b 54 24 78       	mov    0x78(%rsp),%rdx
    6e4b:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    6e52:	00 00 
    6e54:	0f 85 0c 02 00 00    	jne    7066 <do_ecall+0x256>
    6e5a:	48 83 ec 80          	sub    $0xffffffffffffff80,%rsp
    6e5e:	5b                   	pop    %rbx
    6e5f:	c3                   	ret    
    6e60:	e8 de b2 00 00       	call   12143 <get_thread_data>
    6e65:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    6e6a:	48 85 c0             	test   %rax,%rax
    6e6d:	0f 84 31 01 00 00    	je     6fa4 <do_ecall+0x194>
    6e73:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    6e78:	48 8b 48 08          	mov    0x8(%rax),%rcx
    6e7c:	48 39 48 10          	cmp    %rcx,0x10(%rax)
    6e80:	0f 84 0a 01 00 00    	je     6f90 <do_ecall+0x180>
    6e86:	e8 b8 b2 00 00       	call   12143 <get_thread_data>
    6e8b:	48 83 78 50 01       	cmpq   $0x1,0x50(%rax)
    6e90:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    6e95:	0f 84 25 01 00 00    	je     6fc0 <do_ecall+0x1b0>
    6e9b:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    6ea0:	48 8b 48 08          	mov    0x8(%rax),%rcx
    6ea4:	48 39 48 10          	cmp    %rcx,0x10(%rax)
    6ea8:	74 56                	je     6f00 <do_ecall+0xf0>
    6eaa:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    6eaf:	8b 7c 24 20          	mov    0x20(%rsp),%edi
    6eb3:	e8 b8 fa ff ff       	call   6970 <_ZL10trts_ecalljPv>
    6eb8:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
    6ebd:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
    6ec2:	48 8d 15 b7 c2 00 00 	lea    0xc2b7(%rip),%rdx        # 13180 <g_global_data>
    6ec9:	48 8b 52 38          	mov    0x38(%rdx),%rdx
    6ecd:	48 85 d2             	test   %rdx,%rdx
    6ed0:	0f 84 70 ff ff ff    	je     6e46 <do_ecall+0x36>
    6ed6:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    6edb:	48 8b 59 08          	mov    0x8(%rcx),%rbx
    6edf:	48 39 59 10          	cmp    %rbx,0x10(%rcx)
    6ee3:	0f 85 5d ff ff ff    	jne    6e46 <do_ecall+0x36>
    6ee9:	89 44 24 2c          	mov    %eax,0x2c(%rsp)
    6eed:	e8 ae fc ff ff       	call   6ba0 <tc_set_idle>
    6ef2:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
    6ef6:	e9 4b ff ff ff       	jmp    6e46 <do_ecall+0x36>
    6efb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6f00:	31 ff                	xor    %edi,%edi
    6f02:	e8 f9 ef ff ff       	call   5f00 <sgx_wrpkru>
    6f07:	e8 34 fc ff ff       	call   6b40 <_Z16_pthread_enabledv>
    6f0c:	84 c0                	test   %al,%al
    6f0e:	0f 84 0c 01 00 00    	je     7020 <do_ecall+0x210>
    6f14:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    6f19:	66 0f ef c0          	pxor   %xmm0,%xmm0
    6f1d:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
    6f22:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
    6f27:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    6f2c:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
    6f31:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
    6f36:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
    6f3b:	e8 72 9e 00 00       	call   10db2 <setjmp>
    6f40:	f3 0f 1e fa          	endbr64 
    6f44:	85 c0                	test   %eax,%eax
    6f46:	0f 84 94 00 00 00    	je     6fe0 <do_ecall+0x1d0>
    6f4c:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    6f51:	48 8b 41 10          	mov    0x10(%rcx),%rax
    6f55:	48 89 41 08          	mov    %rax,0x8(%rcx)
    6f59:	b8 09 00 00 00       	mov    $0x9,%eax
    6f5e:	bf 09 00 00 00       	mov    $0x9,%edi
    6f63:	89 44 24 28          	mov    %eax,0x28(%rsp)
    6f67:	e8 e4 fb ff ff       	call   6b50 <_Z24_pthread_tls_store_state9_status_t>
    6f6c:	8b 44 24 28          	mov    0x28(%rsp),%eax
    6f70:	89 44 24 24          	mov    %eax,0x24(%rsp)
    6f74:	e8 17 fc ff ff       	call   6b90 <_Z24_pthread_tls_destructorsv>
    6f79:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    6f7e:	e8 fd fb ff ff       	call   6b80 <_Z20_pthread_wakeup_joinPv>
    6f83:	8b 44 24 24          	mov    0x24(%rsp),%eax
    6f87:	e9 36 ff ff ff       	jmp    6ec2 <do_ecall+0xb2>
    6f8c:	0f 1f 40 00          	nopl   0x0(%rax)
    6f90:	48 8d 05 e9 c1 00 00 	lea    0xc1e9(%rip),%rax        # 13180 <g_global_data>
    6f97:	48 8b 40 38          	mov    0x38(%rax),%rax
    6f9b:	48 85 c0             	test   %rax,%rax
    6f9e:	0f 84 a4 00 00 00    	je     7048 <do_ecall+0x238>
    6fa4:	31 f6                	xor    %esi,%esi
    6fa6:	48 89 df             	mov    %rbx,%rdi
    6fa9:	e8 02 fc ff ff       	call   6bb0 <do_init_thread>
    6fae:	85 c0                	test   %eax,%eax
    6fb0:	0f 84 d0 fe ff ff    	je     6e86 <do_ecall+0x76>
    6fb6:	e9 8b fe ff ff       	jmp    6e46 <do_ecall+0x36>
    6fbb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6fc0:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    6fc5:	bf 01 00 00 00       	mov    $0x1,%edi
    6fca:	48 c7 40 50 00 00 00 	movq   $0x0,0x50(%rax)
    6fd1:	00 
    6fd2:	e8 49 f5 ff ff       	call   6520 <sgx_set_ssa_aexnotify>
    6fd7:	e9 bf fe ff ff       	jmp    6e9b <do_ecall+0x8b>
    6fdc:	0f 1f 40 00          	nopl   0x0(%rax)
    6fe0:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
    6fe5:	e8 86 fb ff ff       	call   6b70 <_Z26_pthread_tls_store_contextPv>
    6fea:	0f c7 f0             	rdrand %eax
    6fed:	73 fb                	jae    6fea <do_ecall+0x1da>
    6fef:	8b 5c 24 20          	mov    0x20(%rsp),%ebx
    6ff3:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    6ff8:	89 df                	mov    %ebx,%edi
    6ffa:	e8 31 fb ff ff       	call   6b30 <_Z30_random_stack_noinline_wrapperI9_status_tJjPvEJRiRS1_EET_PFS4_DpT0_EDpOT1_.constprop.0.isra.0>
    6fff:	83 fb fa             	cmp    $0xfffffffa,%ebx
    7002:	0f 84 56 ff ff ff    	je     6f5e <do_ecall+0x14e>
    7008:	83 f8 09             	cmp    $0x9,%eax
    700b:	0f 85 5f ff ff ff    	jne    6f70 <do_ecall+0x160>
    7011:	e9 43 ff ff ff       	jmp    6f59 <do_ecall+0x149>
    7016:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    701d:	00 00 00 
    7020:	0f c7 f0             	rdrand %eax
    7023:	73 fb                	jae    7020 <do_ecall+0x210>
    7025:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    702a:	8b 7c 24 20          	mov    0x20(%rsp),%edi
    702e:	e8 fd fa ff ff       	call   6b30 <_Z30_random_stack_noinline_wrapperI9_status_tJjPvEJRiRS1_EET_PFS4_DpT0_EDpOT1_.constprop.0.isra.0>
    7033:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    7038:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    703d:	e9 80 fe ff ff       	jmp    6ec2 <do_ecall+0xb2>
    7042:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7048:	e8 13 fb ff ff       	call   6b60 <_Z22_pthread_tls_get_statev>
    704d:	83 7c 24 20 fa       	cmpl   $0xfffffffa,0x20(%rsp)
    7052:	0f 84 4c ff ff ff    	je     6fa4 <do_ecall+0x194>
    7058:	83 f8 09             	cmp    $0x9,%eax
    705b:	0f 85 25 fe ff ff    	jne    6e86 <do_ecall+0x76>
    7061:	e9 3e ff ff ff       	jmp    6fa4 <do_ecall+0x194>
    7066:	e8 15 9a 00 00       	call   10a80 <__stack_chk_fail>
    706b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000007070 <do_ecall_add_thread>:
    7070:	f3 0f 1e fa          	endbr64 
    7074:	55                   	push   %rbp
    7075:	53                   	push   %rbx
    7076:	48 89 fb             	mov    %rdi,%rbx
    7079:	48 83 ec 08          	sub    $0x8,%rsp
    707d:	e8 5e 06 00 00       	call   76e0 <is_utility_thread>
    7082:	48 85 db             	test   %rbx,%rbx
    7085:	0f 84 a5 00 00 00    	je     7130 <do_ecall_add_thread+0xc0>
    708b:	3c 01                	cmp    $0x1,%al
    708d:	0f 85 9d 00 00 00    	jne    7130 <do_ecall_add_thread+0xc0>
    7093:	be 08 00 00 00       	mov    $0x8,%esi
    7098:	48 89 df             	mov    %rbx,%rdi
    709b:	e8 40 eb ff ff       	call   5be0 <sgx_is_outside_enclave>
    70a0:	85 c0                	test   %eax,%eax
    70a2:	0f 84 88 00 00 00    	je     7130 <do_ecall_add_thread+0xc0>
    70a8:	0f ae e8             	lfence 
    70ab:	48 8b 2b             	mov    (%rbx),%rbp
    70ae:	48 85 ed             	test   %rbp,%rbp
    70b1:	74 7d                	je     7130 <do_ecall_add_thread+0xc0>
    70b3:	0f ae e8             	lfence 
    70b6:	48 89 ef             	mov    %rbp,%rdi
    70b9:	e8 02 f7 ff ff       	call   67c0 <_ZL11do_save_tcsPv>
    70be:	89 c3                	mov    %eax,%ebx
    70c0:	85 c0                	test   %eax,%eax
    70c2:	75 71                	jne    7135 <do_ecall_add_thread+0xc5>
    70c4:	48 89 ef             	mov    %rbp,%rdi
    70c7:	e8 94 f2 ff ff       	call   6360 <do_add_thread>
    70cc:	89 c3                	mov    %eax,%ebx
    70ce:	85 c0                	test   %eax,%eax
    70d0:	74 63                	je     7135 <do_ecall_add_thread+0xc5>
    70d2:	e8 09 06 00 00       	call   76e0 <is_utility_thread>
    70d7:	84 c0                	test   %al,%al
    70d9:	74 5a                	je     7135 <do_ecall_add_thread+0xc5>
    70db:	48 8b 0d 9e 30 01 00 	mov    0x1309e(%rip),%rcx        # 1a180 <_ZL10g_tcs_node>
    70e2:	48 85 c9             	test   %rcx,%rcx
    70e5:	74 4e                	je     7135 <do_ecall_add_thread+0xc5>
    70e7:	48 8b 35 8a 30 01 00 	mov    0x1308a(%rip),%rsi        # 1a178 <_ZL12g_tcs_cookie>
    70ee:	48 8b 01             	mov    (%rcx),%rax
    70f1:	48 8b 79 08          	mov    0x8(%rcx),%rdi
    70f5:	48 31 f0             	xor    %rsi,%rax
    70f8:	48 39 c5             	cmp    %rax,%rbp
    70fb:	74 41                	je     713e <do_ecall_add_thread+0xce>
    70fd:	48 85 ff             	test   %rdi,%rdi
    7100:	75 11                	jne    7113 <do_ecall_add_thread+0xa3>
    7102:	eb 31                	jmp    7135 <do_ecall_add_thread+0xc5>
    7104:	0f 1f 40 00          	nopl   0x0(%rax)
    7108:	48 89 f9             	mov    %rdi,%rcx
    710b:	48 85 c0             	test   %rax,%rax
    710e:	74 25                	je     7135 <do_ecall_add_thread+0xc5>
    7110:	48 89 c7             	mov    %rax,%rdi
    7113:	48 8b 17             	mov    (%rdi),%rdx
    7116:	48 8b 47 08          	mov    0x8(%rdi),%rax
    711a:	48 31 f2             	xor    %rsi,%rdx
    711d:	48 39 d5             	cmp    %rdx,%rbp
    7120:	75 e6                	jne    7108 <do_ecall_add_thread+0x98>
    7122:	48 89 41 08          	mov    %rax,0x8(%rcx)
    7126:	e8 15 7e 00 00       	call   ef40 <dlfree>
    712b:	eb 08                	jmp    7135 <do_ecall_add_thread+0xc5>
    712d:	0f 1f 00             	nopl   (%rax)
    7130:	bb 01 00 00 00       	mov    $0x1,%ebx
    7135:	48 83 c4 08          	add    $0x8,%rsp
    7139:	89 d8                	mov    %ebx,%eax
    713b:	5b                   	pop    %rbx
    713c:	5d                   	pop    %rbp
    713d:	c3                   	ret    
    713e:	48 89 3d 3b 30 01 00 	mov    %rdi,0x1303b(%rip)        # 1a180 <_ZL10g_tcs_node>
    7145:	48 89 cf             	mov    %rcx,%rdi
    7148:	e8 f3 7d 00 00       	call   ef40 <dlfree>
    714d:	eb e6                	jmp    7135 <do_ecall_add_thread+0xc5>
    714f:	90                   	nop

0000000000007150 <do_uninit_enclave>:
    7150:	f3 0f 1e fa          	endbr64 
    7154:	48 8d 05 d1 0c 01 00 	lea    0x10cd1(%rip),%rax        # 17e2c <EDMM_supported>
    715b:	41 54                	push   %r12
    715d:	55                   	push   %rbp
    715e:	53                   	push   %rbx
    715f:	8b 00                	mov    (%rax),%eax
    7161:	85 c0                	test   %eax,%eax
    7163:	0f 84 a4 00 00 00    	je     720d <do_uninit_enclave+0xbd>
    7169:	49 89 fc             	mov    %rdi,%r12
    716c:	e8 6f 05 00 00       	call   76e0 <is_utility_thread>
    7171:	84 c0                	test   %al,%al
    7173:	0f 84 87 00 00 00    	je     7200 <do_uninit_enclave+0xb0>
    7179:	f0 83 0d ef 2f 01 00 	lock orl $0x1,0x12fef(%rip)        # 1a170 <g_uninit_flag>
    7180:	01 
    7181:	48 8b 1d f8 2f 01 00 	mov    0x12ff8(%rip),%rbx        # 1a180 <_ZL10g_tcs_node>
    7188:	48 c7 05 ed 2f 01 00 	movq   $0x0,0x12fed(%rip)        # 1a180 <_ZL10g_tcs_node>
    718f:	00 00 00 00 
    7193:	eb 2f                	jmp    71c4 <do_uninit_enclave+0x74>
    7195:	0f 1f 00             	nopl   (%rax)
    7198:	48 8b 3b             	mov    (%rbx),%rdi
    719b:	48 33 3d d6 2f 01 00 	xor    0x12fd6(%rip),%rdi        # 1a178 <_ZL12g_tcs_cookie>
    71a2:	4c 39 e7             	cmp    %r12,%rdi
    71a5:	74 0e                	je     71b5 <do_uninit_enclave+0x65>
    71a7:	be 00 10 00 00       	mov    $0x1000,%esi
    71ac:	e8 4f 48 00 00       	call   ba00 <mm_dealloc>
    71b1:	85 c0                	test   %eax,%eax
    71b3:	75 58                	jne    720d <do_uninit_enclave+0xbd>
    71b5:	48 8b 6b 08          	mov    0x8(%rbx),%rbp
    71b9:	48 89 df             	mov    %rbx,%rdi
    71bc:	e8 7f 7d 00 00       	call   ef40 <dlfree>
    71c1:	48 89 eb             	mov    %rbp,%rbx
    71c4:	48 85 db             	test   %rbx,%rbx
    71c7:	75 cf                	jne    7198 <do_uninit_enclave+0x48>
    71c9:	48 8d 1d a4 2f 01 00 	lea    0x12fa4(%rip),%rbx        # 1a174 <_ZL10g_ife_lock>
    71d0:	48 89 df             	mov    %rbx,%rdi
    71d3:	e8 b8 55 00 00       	call   c790 <sgx_spin_lock>
    71d8:	0f b6 05 41 10 01 00 	movzbl 0x11041(%rip),%eax        # 18220 <_ZL16g_is_first_ecall>
    71df:	84 c0                	test   %al,%al
    71e1:	74 45                	je     7228 <do_uninit_enclave+0xd8>
    71e3:	48 89 df             	mov    %rbx,%rdi
    71e6:	e8 35 56 00 00       	call   c820 <sgx_spin_unlock>
    71eb:	bf 03 00 00 00       	mov    $0x3,%edi
    71f0:	e8 20 af 00 00       	call   12115 <set_enclave_state>
    71f5:	5b                   	pop    %rbx
    71f6:	31 c0                	xor    %eax,%eax
    71f8:	5d                   	pop    %rbp
    71f9:	41 5c                	pop    %r12
    71fb:	c3                   	ret    
    71fc:	0f 1f 40 00          	nopl   0x0(%rax)
    7200:	e8 8b f0 ff ff       	call   6290 <is_dynamic_thread_exist>
    7205:	85 c0                	test   %eax,%eax
    7207:	0f 84 6c ff ff ff    	je     7179 <do_uninit_enclave+0x29>
    720d:	bf 03 00 00 00       	mov    $0x3,%edi
    7212:	e8 fe ae 00 00       	call   12115 <set_enclave_state>
    7217:	5b                   	pop    %rbx
    7218:	b8 01 00 00 00       	mov    $0x1,%eax
    721d:	5d                   	pop    %rbp
    721e:	41 5c                	pop    %r12
    7220:	c3                   	ret    
    7221:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7228:	e8 43 1b 00 00       	call   8d70 <uninit_global_object>
    722d:	eb b4                	jmp    71e3 <do_uninit_enclave+0x93>
    722f:	90                   	nop

0000000000007230 <sgx_ocall>:
    7230:	f3 0f 1e fa          	endbr64 
    7234:	8d 47 07             	lea    0x7(%rdi),%eax
    7237:	83 f8 05             	cmp    $0x5,%eax
    723a:	76 12                	jbe    724e <sgx_ocall+0x1e>
    723c:	85 ff                	test   %edi,%edi
    723e:	74 0e                	je     724e <sgx_ocall+0x1e>
    7240:	48 8d 15 e9 bd 00 00 	lea    0xbde9(%rip),%rdx        # 13030 <g_dyn_entry_table>
    7247:	89 f8                	mov    %edi,%eax
    7249:	48 3b 02             	cmp    (%rdx),%rax
    724c:	73 0a                	jae    7258 <sgx_ocall+0x28>
    724e:	e9 8c b1 00 00       	jmp    123df <__morestack>
    7253:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7258:	b8 01 10 00 00       	mov    $0x1001,%eax
    725d:	c3                   	ret    
    725e:	66 90                	xchg   %ax,%ax

0000000000007260 <update_ocall_lastsp>:
    7260:	f3 0f 1e fa          	endbr64 
    7264:	53                   	push   %rbx
    7265:	48 89 fb             	mov    %rdi,%rbx
    7268:	e8 d6 ae 00 00       	call   12143 <get_thread_data>
    726d:	b9 01 00 00 00       	mov    $0x1,%ecx
    7272:	48 8b 50 08          	mov    0x8(%rax),%rdx
    7276:	48 89 53 30          	mov    %rdx,0x30(%rbx)
    727a:	48 39 50 10          	cmp    %rdx,0x10(%rax)
    727e:	74 0b                	je     728b <update_ocall_lastsp+0x2b>
    7280:	48 8b b2 90 00 00 00 	mov    0x90(%rdx),%rsi
    7287:	48 8d 4e 01          	lea    0x1(%rsi),%rcx
    728b:	48 89 8b 90 00 00 00 	mov    %rcx,0x90(%rbx)
    7292:	48 89 58 08          	mov    %rbx,0x8(%rax)
    7296:	48 89 d0             	mov    %rdx,%rax
    7299:	5b                   	pop    %rbx
    729a:	c3                   	ret    
    729b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000072a0 <do_oret>:
    72a0:	f3 0f 1e fa          	endbr64 
    72a4:	55                   	push   %rbp
    72a5:	48 89 fd             	mov    %rdi,%rbp
    72a8:	53                   	push   %rbx
    72a9:	48 83 ec 18          	sub    $0x18,%rsp
    72ad:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    72b4:	00 00 
    72b6:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    72bb:	31 c0                	xor    %eax,%eax
    72bd:	e8 81 ae 00 00       	call   12143 <get_thread_data>
    72c2:	48 83 78 50 01       	cmpq   $0x1,0x50(%rax)
    72c7:	48 89 c3             	mov    %rax,%rbx
    72ca:	74 74                	je     7340 <do_oret+0xa0>
    72cc:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    72d0:	48 89 e0             	mov    %rsp,%rax
    72d3:	48 89 3c 24          	mov    %rdi,(%rsp)
    72d7:	48 39 f8             	cmp    %rdi,%rax
    72da:	72 24                	jb     7300 <do_oret+0x60>
    72dc:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    72e1:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    72e8:	00 00 
    72ea:	75 6b                	jne    7357 <do_oret+0xb7>
    72ec:	48 83 c4 18          	add    $0x18,%rsp
    72f0:	b8 01 00 00 00       	mov    $0x1,%eax
    72f5:	5b                   	pop    %rbx
    72f6:	5d                   	pop    %rbp
    72f7:	c3                   	ret    
    72f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    72ff:	00 
    7300:	48 8b 43 10          	mov    0x10(%rbx),%rax
    7304:	48 8d 90 10 ff ff ff 	lea    -0xf0(%rax),%rdx
    730b:	48 39 fa             	cmp    %rdi,%rdx
    730e:	72 cc                	jb     72dc <do_oret+0x3c>
    7310:	48 81 7f 20 44 49 43 	cmpq   $0x4f434944,0x20(%rdi)
    7317:	4f 
    7318:	75 c2                	jne    72dc <do_oret+0x3c>
    731a:	48 8b 57 30          	mov    0x30(%rdi),%rdx
    731e:	48 39 d7             	cmp    %rdx,%rdi
    7321:	73 b9                	jae    72dc <do_oret+0x3c>
    7323:	48 39 d0             	cmp    %rdx,%rax
    7326:	72 b4                	jb     72dc <do_oret+0x3c>
    7328:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    732c:	48 89 ee             	mov    %rbp,%rsi
    732f:	e8 be b0 00 00       	call   123f2 <asm_oret>
    7334:	eb a6                	jmp    72dc <do_oret+0x3c>
    7336:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    733d:	00 00 00 
    7340:	48 c7 40 50 00 00 00 	movq   $0x0,0x50(%rax)
    7347:	00 
    7348:	bf 01 00 00 00       	mov    $0x1,%edi
    734d:	e8 ce f1 ff ff       	call   6520 <sgx_set_ssa_aexnotify>
    7352:	e9 75 ff ff ff       	jmp    72cc <do_oret+0x2c>
    7357:	e8 24 97 00 00       	call   10a80 <__stack_chk_fail>
    735c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000007360 <get_enclave_size>:
    7360:	f3 0f 1e fa          	endbr64 
    7364:	48 8d 05 15 be 00 00 	lea    0xbe15(%rip),%rax        # 13180 <g_global_data>
    736b:	48 8b 40 08          	mov    0x8(%rax),%rax
    736f:	c3                   	ret    

0000000000007370 <get_enclave_end>:
    7370:	f3 0f 1e fa          	endbr64 
    7374:	48 83 ec 08          	sub    $0x8,%rsp
    7378:	e8 7b ad 00 00       	call   120f8 <get_enclave_base>
    737d:	48 8d 15 fc bd 00 00 	lea    0xbdfc(%rip),%rdx        # 13180 <g_global_data>
    7384:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    7388:	48 83 c4 08          	add    $0x8,%rsp
    738c:	48 8d 44 02 ff       	lea    -0x1(%rdx,%rax,1),%rax
    7391:	c3                   	ret    
    7392:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    7399:	00 00 00 
    739c:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000073a0 <get_heap_base>:
    73a0:	f3 0f 1e fa          	endbr64 
    73a4:	48 83 ec 08          	sub    $0x8,%rsp
    73a8:	e8 4b ad 00 00       	call   120f8 <get_enclave_base>
    73ad:	48 8d 15 cc bd 00 00 	lea    0xbdcc(%rip),%rdx        # 13180 <g_global_data>
    73b4:	48 8b 52 10          	mov    0x10(%rdx),%rdx
    73b8:	48 83 c4 08          	add    $0x8,%rsp
    73bc:	48 01 d0             	add    %rdx,%rax
    73bf:	c3                   	ret    

00000000000073c0 <get_heap_size>:
    73c0:	f3 0f 1e fa          	endbr64 
    73c4:	48 8d 05 61 0a 01 00 	lea    0x10a61(%rip),%rax        # 17e2c <EDMM_supported>
    73cb:	48 8d 0d ae bd 00 00 	lea    0xbdae(%rip),%rcx        # 13180 <g_global_data>
    73d2:	8b 00                	mov    (%rax),%eax
    73d4:	48 8b 79 18          	mov    0x18(%rcx),%rdi
    73d8:	85 c0                	test   %eax,%eax
    73da:	74 41                	je     741d <get_heap_size+0x5d>
    73dc:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    73e2:	85 c0                	test   %eax,%eax
    73e4:	74 37                	je     741d <get_heap_size+0x5d>
    73e6:	31 d2                	xor    %edx,%edx
    73e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    73ef:	00 
    73f0:	89 d0                	mov    %edx,%eax
    73f2:	48 83 c0 0b          	add    $0xb,%rax
    73f6:	48 c1 e0 05          	shl    $0x5,%rax
    73fa:	48 01 c8             	add    %rcx,%rax
    73fd:	0f b7 30             	movzwl (%rax),%esi
    7400:	66 83 fe 03          	cmp    $0x3,%si
    7404:	75 0a                	jne    7410 <get_heap_size+0x50>
    7406:	8b 40 04             	mov    0x4(%rax),%eax
    7409:	48 c1 e0 0c          	shl    $0xc,%rax
    740d:	48 01 c7             	add    %rax,%rdi
    7410:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    7416:	83 c2 01             	add    $0x1,%edx
    7419:	39 c2                	cmp    %eax,%edx
    741b:	72 d3                	jb     73f0 <get_heap_size+0x30>
    741d:	48 89 f8             	mov    %rdi,%rax
    7420:	c3                   	ret    
    7421:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    7428:	00 00 00 
    742b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000007430 <get_heap_min_size>:
    7430:	f3 0f 1e fa          	endbr64 
    7434:	48 8d 0d 45 bd 00 00 	lea    0xbd45(%rip),%rcx        # 13180 <g_global_data>
    743b:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    7441:	85 c0                	test   %eax,%eax
    7443:	74 3b                	je     7480 <get_heap_min_size+0x50>
    7445:	31 d2                	xor    %edx,%edx
    7447:	eb 14                	jmp    745d <get_heap_min_size+0x2d>
    7449:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7450:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    7456:	83 c2 01             	add    $0x1,%edx
    7459:	39 c2                	cmp    %eax,%edx
    745b:	73 23                	jae    7480 <get_heap_min_size+0x50>
    745d:	89 d0                	mov    %edx,%eax
    745f:	48 83 c0 0b          	add    $0xb,%rax
    7463:	48 c1 e0 05          	shl    $0x5,%rax
    7467:	48 01 c8             	add    %rcx,%rax
    746a:	0f b7 30             	movzwl (%rax),%esi
    746d:	66 83 fe 01          	cmp    $0x1,%si
    7471:	75 dd                	jne    7450 <get_heap_min_size+0x20>
    7473:	8b 40 04             	mov    0x4(%rax),%eax
    7476:	48 c1 e0 0c          	shl    $0xc,%rax
    747a:	c3                   	ret    
    747b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7480:	31 c0                	xor    %eax,%eax
    7482:	c3                   	ret    
    7483:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    748a:	00 00 00 
    748d:	0f 1f 00             	nopl   (%rax)

0000000000007490 <get_rsrv_base>:
    7490:	f3 0f 1e fa          	endbr64 
    7494:	48 83 ec 08          	sub    $0x8,%rsp
    7498:	e8 5b ac 00 00       	call   120f8 <get_enclave_base>
    749d:	48 8d 15 dc bc 00 00 	lea    0xbcdc(%rip),%rdx        # 13180 <g_global_data>
    74a4:	48 8b 52 20          	mov    0x20(%rdx),%rdx
    74a8:	48 83 c4 08          	add    $0x8,%rsp
    74ac:	48 01 d0             	add    %rdx,%rax
    74af:	c3                   	ret    

00000000000074b0 <get_rsrv_end>:
    74b0:	f3 0f 1e fa          	endbr64 
    74b4:	48 83 ec 08          	sub    $0x8,%rsp
    74b8:	e8 3b ac 00 00       	call   120f8 <get_enclave_base>
    74bd:	48 8d 35 bc bc 00 00 	lea    0xbcbc(%rip),%rsi        # 13180 <g_global_data>
    74c4:	48 8d 15 61 09 01 00 	lea    0x10961(%rip),%rdx        # 17e2c <EDMM_supported>
    74cb:	4c 8b 4e 20          	mov    0x20(%rsi),%r9
    74cf:	8b 12                	mov    (%rdx),%edx
    74d1:	4c 8b 46 28          	mov    0x28(%rsi),%r8
    74d5:	49 83 e9 01          	sub    $0x1,%r9
    74d9:	85 d2                	test   %edx,%edx
    74db:	74 40                	je     751d <get_rsrv_end+0x6d>
    74dd:	8b 96 58 01 00 00    	mov    0x158(%rsi),%edx
    74e3:	85 d2                	test   %edx,%edx
    74e5:	74 36                	je     751d <get_rsrv_end+0x6d>
    74e7:	31 c9                	xor    %ecx,%ecx
    74e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    74f0:	89 ca                	mov    %ecx,%edx
    74f2:	48 83 c2 0b          	add    $0xb,%rdx
    74f6:	48 c1 e2 05          	shl    $0x5,%rdx
    74fa:	48 01 f2             	add    %rsi,%rdx
    74fd:	0f b7 3a             	movzwl (%rdx),%edi
    7500:	66 83 ff 16          	cmp    $0x16,%di
    7504:	75 0a                	jne    7510 <get_rsrv_end+0x60>
    7506:	8b 52 04             	mov    0x4(%rdx),%edx
    7509:	48 c1 e2 0c          	shl    $0xc,%rdx
    750d:	49 01 d0             	add    %rdx,%r8
    7510:	8b 96 58 01 00 00    	mov    0x158(%rsi),%edx
    7516:	83 c1 01             	add    $0x1,%ecx
    7519:	39 d1                	cmp    %edx,%ecx
    751b:	72 d3                	jb     74f0 <get_rsrv_end+0x40>
    751d:	4c 01 c8             	add    %r9,%rax
    7520:	48 83 c4 08          	add    $0x8,%rsp
    7524:	4c 01 c0             	add    %r8,%rax
    7527:	c3                   	ret    
    7528:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    752f:	00 

0000000000007530 <get_rsrv_size>:
    7530:	f3 0f 1e fa          	endbr64 
    7534:	48 8d 05 f1 08 01 00 	lea    0x108f1(%rip),%rax        # 17e2c <EDMM_supported>
    753b:	48 8d 0d 3e bc 00 00 	lea    0xbc3e(%rip),%rcx        # 13180 <g_global_data>
    7542:	8b 00                	mov    (%rax),%eax
    7544:	48 8b 79 28          	mov    0x28(%rcx),%rdi
    7548:	85 c0                	test   %eax,%eax
    754a:	74 41                	je     758d <get_rsrv_size+0x5d>
    754c:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    7552:	85 c0                	test   %eax,%eax
    7554:	74 37                	je     758d <get_rsrv_size+0x5d>
    7556:	31 d2                	xor    %edx,%edx
    7558:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    755f:	00 
    7560:	89 d0                	mov    %edx,%eax
    7562:	48 83 c0 0b          	add    $0xb,%rax
    7566:	48 c1 e0 05          	shl    $0x5,%rax
    756a:	48 01 c8             	add    %rcx,%rax
    756d:	0f b7 30             	movzwl (%rax),%esi
    7570:	66 83 fe 16          	cmp    $0x16,%si
    7574:	75 0a                	jne    7580 <get_rsrv_size+0x50>
    7576:	8b 40 04             	mov    0x4(%rax),%eax
    7579:	48 c1 e0 0c          	shl    $0xc,%rax
    757d:	48 01 c7             	add    %rax,%rdi
    7580:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    7586:	83 c2 01             	add    $0x1,%edx
    7589:	39 c2                	cmp    %eax,%edx
    758b:	72 d3                	jb     7560 <get_rsrv_size+0x30>
    758d:	48 89 f8             	mov    %rdi,%rax
    7590:	c3                   	ret    
    7591:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    7598:	00 00 00 
    759b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000075a0 <get_rsrv_min_size>:
    75a0:	f3 0f 1e fa          	endbr64 
    75a4:	48 8d 0d d5 bb 00 00 	lea    0xbbd5(%rip),%rcx        # 13180 <g_global_data>
    75ab:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    75b1:	85 c0                	test   %eax,%eax
    75b3:	74 3b                	je     75f0 <get_rsrv_min_size+0x50>
    75b5:	31 d2                	xor    %edx,%edx
    75b7:	eb 14                	jmp    75cd <get_rsrv_min_size+0x2d>
    75b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    75c0:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    75c6:	83 c2 01             	add    $0x1,%edx
    75c9:	39 c2                	cmp    %eax,%edx
    75cb:	73 23                	jae    75f0 <get_rsrv_min_size+0x50>
    75cd:	89 d0                	mov    %edx,%eax
    75cf:	48 83 c0 0b          	add    $0xb,%rax
    75d3:	48 c1 e0 05          	shl    $0x5,%rax
    75d7:	48 01 c8             	add    %rcx,%rax
    75da:	0f b7 30             	movzwl (%rax),%esi
    75dd:	66 83 fe 14          	cmp    $0x14,%si
    75e1:	75 dd                	jne    75c0 <get_rsrv_min_size+0x20>
    75e3:	8b 40 04             	mov    0x4(%rax),%eax
    75e6:	48 c1 e0 0c          	shl    $0xc,%rax
    75ea:	c3                   	ret    
    75eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    75f0:	31 c0                	xor    %eax,%eax
    75f2:	c3                   	ret    
    75f3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    75fa:	00 00 00 
    75fd:	0f 1f 00             	nopl   (%rax)

0000000000007600 <get_errno_addr>:
    7600:	f3 0f 1e fa          	endbr64 
    7604:	48 83 ec 08          	sub    $0x8,%rsp
    7608:	e8 36 ab 00 00       	call   12143 <get_thread_data>
    760d:	48 83 c4 08          	add    $0x8,%rsp
    7611:	48 83 c0 40          	add    $0x40,%rax
    7615:	c3                   	ret    
    7616:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    761d:	00 00 00 

0000000000007620 <feature_supported>:
    7620:	f3 0f 1e fa          	endbr64 
    7624:	48 85 ff             	test   %rdi,%rdi
    7627:	74 37                	je     7660 <feature_supported+0x40>
    7629:	31 d2                	xor    %edx,%edx
    762b:	eb 08                	jmp    7635 <feature_supported+0x15>
    762d:	0f 1f 00             	nopl   (%rax)
    7630:	48 85 c0             	test   %rax,%rax
    7633:	78 2b                	js     7660 <feature_supported+0x40>
    7635:	89 d0                	mov    %edx,%eax
    7637:	83 c2 01             	add    $0x1,%edx
    763a:	41 89 d1             	mov    %edx,%r9d
    763d:	49 89 c0             	mov    %rax,%r8
    7640:	48 8b 04 c7          	mov    (%rdi,%rax,8),%rax
    7644:	41 c1 e1 06          	shl    $0x6,%r9d
    7648:	44 39 ce             	cmp    %r9d,%esi
    764b:	73 e3                	jae    7630 <feature_supported+0x10>
    764d:	41 c1 e0 06          	shl    $0x6,%r8d
    7651:	44 29 c6             	sub    %r8d,%esi
    7654:	89 f1                	mov    %esi,%ecx
    7656:	48 d3 e8             	shr    %cl,%rax
    7659:	83 e0 01             	and    $0x1,%eax
    765c:	c3                   	ret    
    765d:	0f 1f 00             	nopl   (%rax)
    7660:	31 c0                	xor    %eax,%eax
    7662:	c3                   	ret    
    7663:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    766a:	00 00 00 
    766d:	0f 1f 00             	nopl   (%rax)

0000000000007670 <is_stack_addr>:
    7670:	f3 0f 1e fa          	endbr64 
    7674:	55                   	push   %rbp
    7675:	48 89 f5             	mov    %rsi,%rbp
    7678:	53                   	push   %rbx
    7679:	48 89 fb             	mov    %rdi,%rbx
    767c:	48 83 ec 08          	sub    $0x8,%rsp
    7680:	e8 be aa 00 00       	call   12143 <get_thread_data>
    7685:	31 c9                	xor    %ecx,%ecx
    7687:	48 01 dd             	add    %rbx,%rbp
    768a:	48 89 c2             	mov    %rax,%rdx
    768d:	0f 92 c1             	setb   %cl
    7690:	48 39 68 10          	cmp    %rbp,0x10(%rax)
    7694:	0f 93 c0             	setae  %al
    7697:	48 3b 5a 18          	cmp    0x18(%rdx),%rbx
    769b:	0f 93 c2             	setae  %dl
    769e:	21 d0                	and    %edx,%eax
    76a0:	48 85 c9             	test   %rcx,%rcx
    76a3:	0f 94 c2             	sete   %dl
    76a6:	48 83 c4 08          	add    $0x8,%rsp
    76aa:	21 d0                	and    %edx,%eax
    76ac:	5b                   	pop    %rbx
    76ad:	5d                   	pop    %rbp
    76ae:	c3                   	ret    
    76af:	90                   	nop

00000000000076b0 <is_valid_sp>:
    76b0:	f3 0f 1e fa          	endbr64 
    76b4:	40 f6 c7 07          	test   $0x7,%dil
    76b8:	74 06                	je     76c0 <is_valid_sp+0x10>
    76ba:	31 c0                	xor    %eax,%eax
    76bc:	c3                   	ret    
    76bd:	0f 1f 00             	nopl   (%rax)
    76c0:	53                   	push   %rbx
    76c1:	48 89 fb             	mov    %rdi,%rbx
    76c4:	e8 7a aa 00 00       	call   12143 <get_thread_data>
    76c9:	48 89 c2             	mov    %rax,%rdx
    76cc:	48 3b 58 18          	cmp    0x18(%rax),%rbx
    76d0:	0f 93 c0             	setae  %al
    76d3:	48 39 5a 10          	cmp    %rbx,0x10(%rdx)
    76d7:	5b                   	pop    %rbx
    76d8:	0f 93 c2             	setae  %dl
    76db:	21 d0                	and    %edx,%eax
    76dd:	c3                   	ret    
    76de:	66 90                	xchg   %ax,%ax

00000000000076e0 <is_utility_thread>:
    76e0:	f3 0f 1e fa          	endbr64 
    76e4:	48 83 ec 08          	sub    $0x8,%rsp
    76e8:	e8 56 aa 00 00       	call   12143 <get_thread_data>
    76ed:	31 d2                	xor    %edx,%edx
    76ef:	48 85 c0             	test   %rax,%rax
    76f2:	74 07                	je     76fb <is_utility_thread+0x1b>
    76f4:	48 8b 50 30          	mov    0x30(%rax),%rdx
    76f8:	83 e2 01             	and    $0x1,%edx
    76fb:	89 d0                	mov    %edx,%eax
    76fd:	48 83 c4 08          	add    $0x8,%rsp
    7701:	c3                   	ret    
    7702:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    7709:	00 00 00 
    770c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000007710 <get_max_tcs_num>:
    7710:	f3 0f 1e fa          	endbr64 
    7714:	48 8d 05 11 07 01 00 	lea    0x10711(%rip),%rax        # 17e2c <EDMM_supported>
    771b:	83 38 01             	cmpl   $0x1,(%rax)
    771e:	48 8d 05 5b ba 00 00 	lea    0xba5b(%rip),%rax        # 13180 <g_global_data>
    7725:	74 09                	je     7730 <get_max_tcs_num+0x20>
    7727:	48 8b 40 48          	mov    0x48(%rax),%rax
    772b:	c3                   	ret    
    772c:	0f 1f 40 00          	nopl   0x0(%rax)
    7730:	48 8b 40 40          	mov    0x40(%rax),%rax
    7734:	c3                   	ret    
    7735:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    773c:	00 00 00 
    773f:	90                   	nop

0000000000007740 <is_pkru_enabled>:
    7740:	f3 0f 1e fa          	endbr64 
    7744:	48 83 ec 08          	sub    $0x8,%rsp
    7748:	e8 23 0a 00 00       	call   8170 <get_xfeature_state>
    774d:	48 83 c4 08          	add    $0x8,%rsp
    7751:	48 c1 e8 09          	shr    $0x9,%rax
    7755:	83 e0 01             	and    $0x1,%eax
    7758:	c3                   	ret    
    7759:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000007760 <is_tcs_binding_mode>:
    7760:	f3 0f 1e fa          	endbr64 
    7764:	48 8d 05 15 ba 00 00 	lea    0xba15(%rip),%rax        # 13180 <g_global_data>
    776b:	48 8b 40 38          	mov    0x38(%rax),%rax
    776f:	48 85 c0             	test   %rax,%rax
    7772:	0f 94 c0             	sete   %al
    7775:	c3                   	ret    
    7776:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    777d:	00 00 00 

0000000000007780 <get_xsave_size>:
    7780:	f3 0f 1e fa          	endbr64 
    7784:	48 8d 05 f5 b9 00 00 	lea    0xb9f5(%rip),%rax        # 13180 <g_global_data>
    778b:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
    7792:	c3                   	ret    
    7793:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    779a:	00 00 00 
    779d:	0f 1f 00             	nopl   (%rax)

00000000000077a0 <get_ssa_aexnotify>:
    77a0:	f3 0f 1e fa          	endbr64 
    77a4:	48 83 ec 08          	sub    $0x8,%rsp
    77a8:	e8 96 a9 00 00       	call   12143 <get_thread_data>
    77ad:	48 85 c0             	test   %rax,%rax
    77b0:	74 16                	je     77c8 <get_ssa_aexnotify+0x28>
    77b2:	48 8b 40 20          	mov    0x20(%rax),%rax
    77b6:	0f b6 80 a7 00 00 00 	movzbl 0xa7(%rax),%eax
    77bd:	48 83 c4 08          	add    $0x8,%rsp
    77c1:	83 e0 01             	and    $0x1,%eax
    77c4:	c3                   	ret    
    77c5:	0f 1f 00             	nopl   (%rax)
    77c8:	31 c0                	xor    %eax,%eax
    77ca:	48 83 c4 08          	add    $0x8,%rsp
    77ce:	c3                   	ret    
    77cf:	90                   	nop

00000000000077d0 <internal_handle_exception>:
    77d0:	f3 0f 1e fa          	endbr64 
    77d4:	55                   	push   %rbp
    77d5:	48 89 e5             	mov    %rsp,%rbp
    77d8:	41 57                	push   %r15
    77da:	41 56                	push   %r14
    77dc:	41 55                	push   %r13
    77de:	41 54                	push   %r12
    77e0:	53                   	push   %rbx
    77e1:	48 89 fb             	mov    %rdi,%rbx
    77e4:	48 83 ec 38          	sub    $0x38,%rsp
    77e8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    77ef:	00 00 
    77f1:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    77f5:	31 c0                	xor    %eax,%eax
    77f7:	e8 47 a9 00 00       	call   12143 <get_thread_data>
    77fc:	4c 8b 60 20          	mov    0x20(%rax),%r12
    7800:	49 89 c5             	mov    %rax,%r13
    7803:	e8 78 ff ff ff       	call   7780 <get_xsave_size>
    7808:	48 85 db             	test   %rbx,%rbx
    780b:	0f 84 4f 01 00 00    	je     7960 <internal_handle_exception+0x190>
    7811:	49 8d b4 24 ff 0f 00 	lea    0xfff(%r12),%rsi
    7818:	00 
    7819:	48 05 b7 10 00 00    	add    $0x10b7,%rax
    781f:	48 8b 93 b0 00 00 00 	mov    0xb0(%rbx),%rdx
    7826:	4c 8d b3 c0 00 00 00 	lea    0xc0(%rbx),%r14
    782d:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    7833:	48 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%rsi
    783a:	4c 89 f7             	mov    %r14,%rdi
    783d:	48 29 c6             	sub    %rax,%rsi
    7840:	e8 ab 8e 00 00       	call   106f0 <memcpy>
    7845:	8b 83 a8 00 00 00    	mov    0xa8(%rbx),%eax
    784b:	85 c0                	test   %eax,%eax
    784d:	0f 84 2e 01 00 00    	je     7981 <internal_handle_exception+0x1b1>
    7853:	49 8b 45 78          	mov    0x78(%r13),%rax
    7857:	48 85 c0             	test   %rax,%rax
    785a:	0f 88 00 01 00 00    	js     7960 <internal_handle_exception+0x190>
    7860:	48 8d 50 01          	lea    0x1(%rax),%rdx
    7864:	83 bb 90 00 00 00 0e 	cmpl   $0xe,0x90(%rbx)
    786b:	49 89 55 78          	mov    %rdx,0x78(%r13)
    786f:	75 27                	jne    7898 <internal_handle_exception+0xc8>
    7871:	48 8b 15 10 29 01 00 	mov    0x12910(%rip),%rdx        # 1a188 <g_mm_pfhandler>
    7878:	48 85 d2             	test   %rdx,%rdx
    787b:	74 1b                	je     7898 <internal_handle_exception+0xc8>
    787d:	49 89 45 78          	mov    %rax,0x78(%r13)
    7881:	48 8d bb 98 00 00 00 	lea    0x98(%rbx),%rdi
    7888:	ff d2                	call   *%rdx
    788a:	83 c0 01             	add    $0x1,%eax
    788d:	0f 84 ee 00 00 00    	je     7981 <internal_handle_exception+0x1b1>
    7893:	49 83 45 78 01       	addq   $0x1,0x78(%r13)
    7898:	48 8d 3d f9 28 01 00 	lea    0x128f9(%rip),%rdi        # 1a198 <_ZL14g_handler_lock>
    789f:	e8 ec 4e 00 00       	call   c790 <sgx_spin_lock>
    78a4:	48 8b 05 f5 28 01 00 	mov    0x128f5(%rip),%rax        # 1a1a0 <_ZL12g_first_node>
    78ab:	48 85 c0             	test   %rax,%rax
    78ae:	0f 84 b9 00 00 00    	je     796d <internal_handle_exception+0x19d>
    78b4:	45 31 ff             	xor    %r15d,%r15d
    78b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    78be:	00 00 
    78c0:	48 8b 40 08          	mov    0x8(%rax),%rax
    78c4:	49 83 c7 08          	add    $0x8,%r15
    78c8:	48 85 c0             	test   %rax,%rax
    78cb:	75 f3                	jne    78c0 <internal_handle_exception+0xf0>
    78cd:	4d 85 ff             	test   %r15,%r15
    78d0:	0f 84 97 00 00 00    	je     796d <internal_handle_exception+0x19d>
    78d6:	4c 89 ff             	mov    %r15,%rdi
    78d9:	e8 02 4d 00 00       	call   c5e0 <alloca>
    78de:	49 89 c4             	mov    %rax,%r12
    78e1:	48 85 c0             	test   %rax,%rax
    78e4:	0f 84 a9 02 00 00    	je     7b93 <internal_handle_exception+0x3c3>
    78ea:	48 8b 05 af 28 01 00 	mov    0x128af(%rip),%rax        # 1a1a0 <_ZL12g_first_node>
    78f1:	4c 89 e1             	mov    %r12,%rcx
    78f4:	48 85 c0             	test   %rax,%rax
    78f7:	74 1b                	je     7914 <internal_handle_exception+0x144>
    78f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7900:	48 8b 30             	mov    (%rax),%rsi
    7903:	48 8b 40 08          	mov    0x8(%rax),%rax
    7907:	48 83 c1 08          	add    $0x8,%rcx
    790b:	48 89 71 f8          	mov    %rsi,-0x8(%rcx)
    790f:	48 85 c0             	test   %rax,%rax
    7912:	75 ec                	jne    7900 <internal_handle_exception+0x130>
    7914:	48 8d 3d 7d 28 01 00 	lea    0x1287d(%rip),%rdi        # 1a198 <_ZL14g_handler_lock>
    791b:	4d 01 e7             	add    %r12,%r15
    791e:	e8 fd 4e 00 00       	call   c820 <sgx_spin_unlock>
    7923:	49 83 6d 78 01       	subq   $0x1,0x78(%r13)
    7928:	eb 13                	jmp    793d <internal_handle_exception+0x16d>
    792a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7930:	49 83 c4 08          	add    $0x8,%r12
    7934:	4d 39 fc             	cmp    %r15,%r12
    7937:	0f 84 e7 01 00 00    	je     7b24 <internal_handle_exception+0x354>
    793d:	49 8b 04 24          	mov    (%r12),%rax
    7941:	48 89 df             	mov    %rbx,%rdi
    7944:	48 33 05 45 28 01 00 	xor    0x12845(%rip),%rax        # 1a190 <_ZL12g_veh_cookie>
    794b:	ff d0                	call   *%rax
    794d:	83 f8 ff             	cmp    $0xffffffff,%eax
    7950:	75 de                	jne    7930 <internal_handle_exception+0x160>
    7952:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    7956:	e8 55 fd ff ff       	call   76b0 <is_valid_sp>
    795b:	84 c0                	test   %al,%al
    795d:	75 22                	jne    7981 <internal_handle_exception+0x1b1>
    795f:	90                   	nop
    7960:	49 c7 45 78 ff ff ff 	movq   $0xffffffffffffffff,0x78(%r13)
    7967:	ff 
    7968:	e8 ca ab 00 00       	call   12537 <abort>
    796d:	48 8d 3d 24 28 01 00 	lea    0x12824(%rip),%rdi        # 1a198 <_ZL14g_handler_lock>
    7974:	e8 a7 4e 00 00       	call   c820 <sgx_spin_unlock>
    7979:	49 c7 45 78 ff ff ff 	movq   $0xffffffffffffffff,0x78(%r13)
    7980:	ff 
    7981:	83 bb ac 00 00 00 01 	cmpl   $0x1,0xac(%rbx)
    7988:	74 12                	je     799c <internal_handle_exception+0x1cc>
    798a:	4c 89 f7             	mov    %r14,%rdi
    798d:	e8 1f a3 00 00       	call   11cb1 <restore_xregs>
    7992:	48 89 df             	mov    %rbx,%rdi
    7995:	e8 b0 ab 00 00       	call   1254a <continue_execution>
    799a:	eb c4                	jmp    7960 <internal_handle_exception+0x190>
    799c:	48 89 df             	mov    %rbx,%rdi
    799f:	e8 cc ed ff ff       	call   6770 <sgx_apply_mitigations>
    79a4:	4c 89 f7             	mov    %r14,%rdi
    79a7:	e8 05 a3 00 00       	call   11cb1 <restore_xregs>
    79ac:	e8 92 a7 00 00       	call   12143 <get_thread_data>
    79b1:	49 89 c6             	mov    %rax,%r14
    79b4:	48 8b 40 10          	mov    0x10(%rax),%rax
    79b8:	49 89 c4             	mov    %rax,%r12
    79bb:	49 81 e4 00 f0 ff ff 	and    $0xfffffffffffff000,%r12
    79c2:	48 3d ff 0f 00 00    	cmp    $0xfff,%rax
    79c8:	77 07                	ja     79d1 <internal_handle_exception+0x201>
    79ca:	4c 8d a0 00 f0 ff ff 	lea    -0x1000(%rax),%r12
    79d1:	48 89 d8             	mov    %rbx,%rax
    79d4:	49 8b 4e 18          	mov    0x18(%r14),%rcx
    79d8:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    79de:	4c 39 e0             	cmp    %r12,%rax
    79e1:	0f 84 93 01 00 00    	je     7b7a <internal_handle_exception+0x3aa>
    79e7:	48 05 00 10 00 00    	add    $0x1000,%rax
    79ed:	48 83 c8 01          	or     $0x1,%rax
    79f1:	49 89 c4             	mov    %rax,%r12
    79f4:	48 8b 83 88 00 00 00 	mov    0x88(%rbx),%rax
    79fb:	49 89 c7             	mov    %rax,%r15
    79fe:	48 c1 e8 0b          	shr    $0xb,%rax
    7a02:	48 89 c1             	mov    %rax,%rcx
    7a05:	49 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%r15
    7a0c:	81 e1 fe 0f 00 00    	and    $0xffe,%ecx
    7a12:	48 03 0d cf 05 01 00 	add    0x105cf(%rip),%rcx        # 17fe8 <_GLOBAL_OFFSET_TABLE_+0x30>
    7a19:	44 0f b7 09          	movzwl (%rcx),%r9d
    7a1d:	4b 8d 14 39          	lea    (%r9,%r15,1),%rdx
    7a21:	80 3a c3             	cmpb   $0xc3,(%rdx)
    7a24:	74 3b                	je     7a61 <internal_handle_exception+0x291>
    7a26:	4d 89 f9             	mov    %r15,%r9
    7a29:	49 8d 87 00 10 00 00 	lea    0x1000(%r15),%rax
    7a30:	eb 13                	jmp    7a45 <internal_handle_exception+0x275>
    7a32:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7a38:	49 83 c1 01          	add    $0x1,%r9
    7a3c:	4c 39 c8             	cmp    %r9,%rax
    7a3f:	0f 84 5f 01 00 00    	je     7ba4 <internal_handle_exception+0x3d4>
    7a45:	41 80 39 c3          	cmpb   $0xc3,(%r9)
    7a49:	75 ed                	jne    7a38 <internal_handle_exception+0x268>
    7a4b:	4c 39 c8             	cmp    %r9,%rax
    7a4e:	0f 84 50 01 00 00    	je     7ba4 <internal_handle_exception+0x3d4>
    7a54:	44 89 c8             	mov    %r9d,%eax
    7a57:	4c 89 ca             	mov    %r9,%rdx
    7a5a:	66 25 ff 0f          	and    $0xfff,%ax
    7a5e:	66 89 01             	mov    %ax,(%rcx)
    7a61:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
    7a65:	48 89 df             	mov    %rbx,%rdi
    7a68:	48 89 55 a0          	mov    %rdx,-0x60(%rbp)
    7a6c:	e8 0f ca ff ff       	call   4480 <ct_decode>
    7a71:	4d 89 e0             	mov    %r12,%r8
    7a74:	be 01 00 00 00       	mov    $0x1,%esi
    7a79:	49 83 e0 fe          	and    $0xfffffffffffffffe,%r8
    7a7d:	4c 63 c8             	movslq %eax,%r9
    7a80:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    7a84:	4c 89 c1             	mov    %r8,%rcx
    7a87:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
    7a8b:	49 83 f9 01          	cmp    $0x1,%r9
    7a8f:	48 0f 44 c8          	cmove  %rax,%rcx
    7a93:	49 83 f9 02          	cmp    $0x2,%r9
    7a97:	48 0f 44 c8          	cmove  %rax,%rcx
    7a9b:	48 89 cf             	mov    %rcx,%rdi
    7a9e:	4c 89 4d b0          	mov    %r9,-0x50(%rbp)
    7aa2:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
    7aa6:	e8 d5 e0 ff ff       	call   5b80 <sgx_is_within_enclave>
    7aab:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
    7aaf:	4c 8b 45 a8          	mov    -0x58(%rbp),%r8
    7ab3:	85 c0                	test   %eax,%eax
    7ab5:	4c 8b 4d b0          	mov    -0x50(%rbp),%r9
    7ab9:	48 98                	cltq   
    7abb:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
    7abf:	4c 0f 45 c1          	cmovne %rcx,%r8
    7ac3:	4c 89 f9             	mov    %r15,%rcx
    7ac6:	48 83 c9 01          	or     $0x1,%rcx
    7aca:	49 83 f9 02          	cmp    $0x2,%r9
    7ace:	4c 0f 44 f9          	cmove  %rcx,%r15
    7ad2:	4c 89 fe             	mov    %r15,%rsi
    7ad5:	48 83 e6 fe          	and    $0xfffffffffffffffe,%rsi
    7ad9:	48 83 f8 01          	cmp    $0x1,%rax
    7add:	49 0f 44 f7          	cmove  %r15,%rsi
    7ae1:	41 83 ae bc 00 00 00 	subl   $0x1,0xbc(%r14)
    7ae8:	01 
    7ae9:	78 57                	js     7b42 <internal_handle_exception+0x372>
    7aeb:	41 8b 8e b8 00 00 00 	mov    0xb8(%r14),%ecx
    7af2:	49 89 d1             	mov    %rdx,%r9
    7af5:	48 89 df             	mov    %rbx,%rdi
    7af8:	4c 89 e2             	mov    %r12,%rdx
    7afb:	89 c8                	mov    %ecx,%eax
    7afd:	c1 e1 04             	shl    $0x4,%ecx
    7b00:	d1 e8                	shr    %eax
    7b02:	83 e1 10             	and    $0x10,%ecx
    7b05:	48 09 f1             	or     %rsi,%rcx
    7b08:	41 89 86 b8 00 00 00 	mov    %eax,0xb8(%r14)
    7b0f:	49 8b 76 20          	mov    0x20(%r14),%rsi
    7b13:	48 81 c6 a7 00 00 00 	add    $0xa7,%rsi
    7b1a:	e8 e1 a2 00 00       	call   11e00 <constant_time_apply_sgxstep_mitigation_and_continue_execution>
    7b1f:	e9 3c fe ff ff       	jmp    7960 <internal_handle_exception+0x190>
    7b24:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    7b28:	e8 83 fb ff ff       	call   76b0 <is_valid_sp>
    7b2d:	84 c0                	test   %al,%al
    7b2f:	0f 84 2b fe ff ff    	je     7960 <internal_handle_exception+0x190>
    7b35:	49 c7 45 78 ff ff ff 	movq   $0xffffffffffffffff,0x78(%r13)
    7b3c:	ff 
    7b3d:	e9 3f fe ff ff       	jmp    7981 <internal_handle_exception+0x1b1>
    7b42:	49 8d be b8 00 00 00 	lea    0xb8(%r14),%rdi
    7b49:	48 89 75 a8          	mov    %rsi,-0x58(%rbp)
    7b4d:	4c 89 45 b0          	mov    %r8,-0x50(%rbp)
    7b51:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    7b55:	e8 ba a9 00 00       	call   12514 <do_rdrand>
    7b5a:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    7b5e:	4c 8b 45 b0          	mov    -0x50(%rbp),%r8
    7b62:	85 c0                	test   %eax,%eax
    7b64:	48 8b 75 a8          	mov    -0x58(%rbp),%rsi
    7b68:	74 46                	je     7bb0 <internal_handle_exception+0x3e0>
    7b6a:	41 c7 86 bc 00 00 00 	movl   $0x1f,0xbc(%r14)
    7b71:	1f 00 00 00 
    7b75:	e9 71 ff ff ff       	jmp    7aeb <internal_handle_exception+0x31b>
    7b7a:	48 81 e1 00 f0 ff ff 	and    $0xfffffffffffff000,%rcx
    7b81:	4c 39 e1             	cmp    %r12,%rcx
    7b84:	0f 84 6a fe ff ff    	je     79f4 <internal_handle_exception+0x224>
    7b8a:	49 83 cc 01          	or     $0x1,%r12
    7b8e:	e9 61 fe ff ff       	jmp    79f4 <internal_handle_exception+0x224>
    7b93:	48 8d 3d fe 25 01 00 	lea    0x125fe(%rip),%rdi        # 1a198 <_ZL14g_handler_lock>
    7b9a:	e8 81 4c 00 00       	call   c820 <sgx_spin_unlock>
    7b9f:	e9 bc fd ff ff       	jmp    7960 <internal_handle_exception+0x190>
    7ba4:	48 8d 15 4c a5 00 00 	lea    0xa54c(%rip),%rdx        # 120f7 <__ct_mitigation_ret>
    7bab:	e9 b1 fe ff ff       	jmp    7a61 <internal_handle_exception+0x291>
    7bb0:	49 c7 46 78 ff ff ff 	movq   $0xffffffffffffffff,0x78(%r14)
    7bb7:	ff 
    7bb8:	e8 7a a9 00 00       	call   12537 <abort>
    7bbd:	0f 1f 00             	nopl   (%rax)

0000000000007bc0 <sgx_register_exception_handler>:
    7bc0:	f3 0f 1e fa          	endbr64 
    7bc4:	41 55                	push   %r13
    7bc6:	41 54                	push   %r12
    7bc8:	41 89 fc             	mov    %edi,%r12d
    7bcb:	55                   	push   %rbp
    7bcc:	48 89 f5             	mov    %rsi,%rbp
    7bcf:	53                   	push   %rbx
    7bd0:	48 83 ec 18          	sub    $0x18,%rsp
    7bd4:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    7bdb:	00 00 
    7bdd:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    7be2:	31 c0                	xor    %eax,%eax
    7be4:	48 83 3d a4 25 01 00 	cmpq   $0x0,0x125a4(%rip)        # 1a190 <_ZL12g_veh_cookie>
    7beb:	00 
    7bec:	0f 84 ae 00 00 00    	je     7ca0 <sgx_register_exception_handler+0xe0>
    7bf2:	31 f6                	xor    %esi,%esi
    7bf4:	48 89 ef             	mov    %rbp,%rdi
    7bf7:	e8 84 df ff ff       	call   5b80 <sgx_is_within_enclave>
    7bfc:	85 c0                	test   %eax,%eax
    7bfe:	0f 84 cc 00 00 00    	je     7cd0 <sgx_register_exception_handler+0x110>
    7c04:	bf 10 00 00 00       	mov    $0x10,%edi
    7c09:	e8 42 55 00 00       	call   d150 <dlmalloc>
    7c0e:	48 89 c3             	mov    %rax,%rbx
    7c11:	48 85 c0             	test   %rax,%rax
    7c14:	0f 84 b6 00 00 00    	je     7cd0 <sgx_register_exception_handler+0x110>
    7c1a:	48 33 2d 6f 25 01 00 	xor    0x1256f(%rip),%rbp        # 1a190 <_ZL12g_veh_cookie>
    7c21:	4c 8d 2d 70 25 01 00 	lea    0x12570(%rip),%r13        # 1a198 <_ZL14g_handler_lock>
    7c28:	48 89 28             	mov    %rbp,(%rax)
    7c2b:	4c 89 ef             	mov    %r13,%rdi
    7c2e:	e8 5d 4b 00 00       	call   c790 <sgx_spin_lock>
    7c33:	48 8b 15 66 25 01 00 	mov    0x12566(%rip),%rdx        # 1a1a0 <_ZL12g_first_node>
    7c3a:	45 85 e4             	test   %r12d,%r12d
    7c3d:	75 29                	jne    7c68 <sgx_register_exception_handler+0xa8>
    7c3f:	48 85 d2             	test   %rdx,%rdx
    7c42:	74 24                	je     7c68 <sgx_register_exception_handler+0xa8>
    7c44:	0f 1f 40 00          	nopl   0x0(%rax)
    7c48:	48 89 d0             	mov    %rdx,%rax
    7c4b:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    7c4f:	48 85 d2             	test   %rdx,%rdx
    7c52:	75 f4                	jne    7c48 <sgx_register_exception_handler+0x88>
    7c54:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
    7c5b:	00 
    7c5c:	48 89 58 08          	mov    %rbx,0x8(%rax)
    7c60:	eb 11                	jmp    7c73 <sgx_register_exception_handler+0xb3>
    7c62:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7c68:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    7c6c:	48 89 1d 2d 25 01 00 	mov    %rbx,0x1252d(%rip)        # 1a1a0 <_ZL12g_first_node>
    7c73:	4c 89 ef             	mov    %r13,%rdi
    7c76:	e8 a5 4b 00 00       	call   c820 <sgx_spin_unlock>
    7c7b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    7c80:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    7c87:	00 00 
    7c89:	75 7e                	jne    7d09 <sgx_register_exception_handler+0x149>
    7c8b:	48 83 c4 18          	add    $0x18,%rsp
    7c8f:	48 89 d8             	mov    %rbx,%rax
    7c92:	5b                   	pop    %rbx
    7c93:	5d                   	pop    %rbp
    7c94:	41 5c                	pop    %r12
    7c96:	41 5d                	pop    %r13
    7c98:	c3                   	ret    
    7c99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7ca0:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    7ca7:	00 
    7ca8:	48 89 e3             	mov    %rsp,%rbx
    7cab:	eb 0a                	jmp    7cb7 <sgx_register_exception_handler+0xf7>
    7cad:	0f 1f 00             	nopl   (%rax)
    7cb0:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
    7cb5:	75 21                	jne    7cd8 <sgx_register_exception_handler+0x118>
    7cb7:	be 08 00 00 00       	mov    $0x8,%esi
    7cbc:	48 89 df             	mov    %rbx,%rdi
    7cbf:	e8 bc e0 ff ff       	call   5d80 <sgx_read_rand>
    7cc4:	85 c0                	test   %eax,%eax
    7cc6:	74 e8                	je     7cb0 <sgx_register_exception_handler+0xf0>
    7cc8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    7ccf:	00 
    7cd0:	31 db                	xor    %ebx,%ebx
    7cd2:	eb a7                	jmp    7c7b <sgx_register_exception_handler+0xbb>
    7cd4:	0f 1f 40 00          	nopl   0x0(%rax)
    7cd8:	4c 8d 2d b9 24 01 00 	lea    0x124b9(%rip),%r13        # 1a198 <_ZL14g_handler_lock>
    7cdf:	4c 89 ef             	mov    %r13,%rdi
    7ce2:	e8 a9 4a 00 00       	call   c790 <sgx_spin_lock>
    7ce7:	48 83 3d a1 24 01 00 	cmpq   $0x0,0x124a1(%rip)        # 1a190 <_ZL12g_veh_cookie>
    7cee:	00 
    7cef:	75 0b                	jne    7cfc <sgx_register_exception_handler+0x13c>
    7cf1:	48 8b 04 24          	mov    (%rsp),%rax
    7cf5:	48 89 05 94 24 01 00 	mov    %rax,0x12494(%rip)        # 1a190 <_ZL12g_veh_cookie>
    7cfc:	4c 89 ef             	mov    %r13,%rdi
    7cff:	e8 1c 4b 00 00       	call   c820 <sgx_spin_unlock>
    7d04:	e9 e9 fe ff ff       	jmp    7bf2 <sgx_register_exception_handler+0x32>
    7d09:	e8 72 8d 00 00       	call   10a80 <__stack_chk_fail>
    7d0e:	66 90                	xchg   %ax,%ax

0000000000007d10 <sgx_unregister_exception_handler>:
    7d10:	f3 0f 1e fa          	endbr64 
    7d14:	48 85 ff             	test   %rdi,%rdi
    7d17:	0f 84 9b 00 00 00    	je     7db8 <sgx_unregister_exception_handler+0xa8>
    7d1d:	55                   	push   %rbp
    7d1e:	48 8d 2d 73 24 01 00 	lea    0x12473(%rip),%rbp        # 1a198 <_ZL14g_handler_lock>
    7d25:	53                   	push   %rbx
    7d26:	48 89 fb             	mov    %rdi,%rbx
    7d29:	48 89 ef             	mov    %rbp,%rdi
    7d2c:	48 83 ec 08          	sub    $0x8,%rsp
    7d30:	e8 5b 4a 00 00       	call   c790 <sgx_spin_lock>
    7d35:	48 8b 05 64 24 01 00 	mov    0x12464(%rip),%rax        # 1a1a0 <_ZL12g_first_node>
    7d3c:	48 85 c0             	test   %rax,%rax
    7d3f:	74 20                	je     7d61 <sgx_unregister_exception_handler+0x51>
    7d41:	48 39 d8             	cmp    %rbx,%rax
    7d44:	75 0f                	jne    7d55 <sgx_unregister_exception_handler+0x45>
    7d46:	eb 58                	jmp    7da0 <sgx_unregister_exception_handler+0x90>
    7d48:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    7d4f:	00 
    7d50:	48 39 d8             	cmp    %rbx,%rax
    7d53:	74 23                	je     7d78 <sgx_unregister_exception_handler+0x68>
    7d55:	48 89 c2             	mov    %rax,%rdx
    7d58:	48 8b 40 08          	mov    0x8(%rax),%rax
    7d5c:	48 85 c0             	test   %rax,%rax
    7d5f:	75 ef                	jne    7d50 <sgx_unregister_exception_handler+0x40>
    7d61:	48 89 ef             	mov    %rbp,%rdi
    7d64:	e8 b7 4a 00 00       	call   c820 <sgx_spin_unlock>
    7d69:	48 83 c4 08          	add    $0x8,%rsp
    7d6d:	31 c0                	xor    %eax,%eax
    7d6f:	5b                   	pop    %rbx
    7d70:	5d                   	pop    %rbp
    7d71:	c3                   	ret    
    7d72:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7d78:	48 8b 43 08          	mov    0x8(%rbx),%rax
    7d7c:	48 89 ef             	mov    %rbp,%rdi
    7d7f:	48 89 42 08          	mov    %rax,0x8(%rdx)
    7d83:	e8 98 4a 00 00       	call   c820 <sgx_spin_unlock>
    7d88:	48 89 df             	mov    %rbx,%rdi
    7d8b:	e8 b0 71 00 00       	call   ef40 <dlfree>
    7d90:	48 83 c4 08          	add    $0x8,%rsp
    7d94:	b8 01 00 00 00       	mov    $0x1,%eax
    7d99:	5b                   	pop    %rbx
    7d9a:	5d                   	pop    %rbp
    7d9b:	c3                   	ret    
    7d9c:	0f 1f 40 00          	nopl   0x0(%rax)
    7da0:	48 8b 43 08          	mov    0x8(%rbx),%rax
    7da4:	48 89 ef             	mov    %rbp,%rdi
    7da7:	48 89 05 f2 23 01 00 	mov    %rax,0x123f2(%rip)        # 1a1a0 <_ZL12g_first_node>
    7dae:	e8 6d 4a 00 00       	call   c820 <sgx_spin_unlock>
    7db3:	eb d3                	jmp    7d88 <sgx_unregister_exception_handler+0x78>
    7db5:	0f 1f 00             	nopl   (%rax)
    7db8:	31 c0                	xor    %eax,%eax
    7dba:	c3                   	ret    
    7dbb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000007dc0 <trts_handle_exception>:
    7dc0:	f3 0f 1e fa          	endbr64 
    7dc4:	41 57                	push   %r15
    7dc6:	41 56                	push   %r14
    7dc8:	41 55                	push   %r13
    7dca:	41 54                	push   %r12
    7dcc:	55                   	push   %rbp
    7dcd:	53                   	push   %rbx
    7dce:	48 89 fb             	mov    %rdi,%rbx
    7dd1:	48 83 ec 08          	sub    $0x8,%rsp
    7dd5:	e8 69 a3 00 00       	call   12143 <get_thread_data>
    7dda:	48 85 c0             	test   %rax,%rax
    7ddd:	48 89 c5             	mov    %rax,%rbp
    7de0:	0f 94 c2             	sete   %dl
    7de3:	48 85 db             	test   %rbx,%rbx
    7de6:	0f 94 c0             	sete   %al
    7de9:	08 c2                	or     %al,%dl
    7deb:	75 33                	jne    7e20 <trts_handle_exception+0x60>
    7ded:	48 89 df             	mov    %rbx,%rdi
    7df0:	41 89 d4             	mov    %edx,%r12d
    7df3:	e8 b8 e0 ff ff       	call   5eb0 <check_static_stack_canary>
    7df8:	85 c0                	test   %eax,%eax
    7dfa:	75 24                	jne    7e20 <trts_handle_exception+0x60>
    7dfc:	e8 03 a3 00 00       	call   12104 <get_enclave_state>
    7e01:	83 f8 02             	cmp    $0x2,%eax
    7e04:	75 1a                	jne    7e20 <trts_handle_exception+0x60>
    7e06:	48 83 7d 78 ff       	cmpq   $0xffffffffffffffff,0x78(%rbp)
    7e0b:	74 13                	je     7e20 <trts_handle_exception+0x60>
    7e0d:	48 8b 45 10          	mov    0x10(%rbp),%rax
    7e11:	48 05 00 04 01 00    	add    $0x10400,%rax
    7e17:	48 39 c3             	cmp    %rax,%rbx
    7e1a:	74 24                	je     7e40 <trts_handle_exception+0x80>
    7e1c:	0f 1f 40 00          	nopl   0x0(%rax)
    7e20:	bf 03 00 00 00       	mov    $0x3,%edi
    7e25:	e8 eb a2 00 00       	call   12115 <set_enclave_state>
    7e2a:	b8 06 10 00 00       	mov    $0x1006,%eax
    7e2f:	48 83 c4 08          	add    $0x8,%rsp
    7e33:	5b                   	pop    %rbx
    7e34:	5d                   	pop    %rbp
    7e35:	41 5c                	pop    %r12
    7e37:	41 5d                	pop    %r13
    7e39:	41 5e                	pop    %r14
    7e3b:	41 5f                	pop    %r15
    7e3d:	c3                   	ret    
    7e3e:	66 90                	xchg   %ax,%ax
    7e40:	4c 8b 6d 20          	mov    0x20(%rbp),%r13
    7e44:	e8 37 f9 ff ff       	call   7780 <get_xsave_size>
    7e49:	48 05 b7 10 00 00    	add    $0x10b7,%rax
    7e4f:	49 81 e5 00 f0 ff ff 	and    $0xfffffffffffff000,%r13
    7e56:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    7e5c:	49 29 c5             	sub    %rax,%r13
    7e5f:	4c 39 eb             	cmp    %r13,%rbx
    7e62:	75 bc                	jne    7e20 <trts_handle_exception+0x60>
    7e64:	4c 8b 6d 20          	mov    0x20(%rbp),%r13
    7e68:	be 08 00 00 00       	mov    $0x8,%esi
    7e6d:	4d 8b b5 90 00 00 00 	mov    0x90(%r13),%r14
    7e74:	4c 89 f7             	mov    %r14,%rdi
    7e77:	e8 64 dd ff ff       	call   5be0 <sgx_is_outside_enclave>
    7e7c:	85 c0                	test   %eax,%eax
    7e7e:	0f 84 ec 01 00 00    	je     8070 <trts_handle_exception+0x2b0>
    7e84:	49 8b 5d 20          	mov    0x20(%r13),%rbx
    7e88:	49 39 de             	cmp    %rbx,%r14
    7e8b:	0f 84 df 01 00 00    	je     8070 <trts_handle_exception+0x2b0>
    7e91:	31 f6                	xor    %esi,%esi
    7e93:	48 89 df             	mov    %rbx,%rdi
    7e96:	e8 d5 f7 ff ff       	call   7670 <is_stack_addr>
    7e9b:	84 c0                	test   %al,%al
    7e9d:	0f 84 cd 01 00 00    	je     8070 <trts_handle_exception+0x2b0>
    7ea3:	48 8b 45 38          	mov    0x38(%rbp),%rax
    7ea7:	48 8d b0 b8 01 00 00 	lea    0x1b8(%rax),%rsi
    7eae:	48 29 f3             	sub    %rsi,%rbx
    7eb1:	48 83 e3 c0          	and    $0xffffffffffffffc0,%rbx
    7eb5:	48 89 df             	mov    %rbx,%rdi
    7eb8:	e8 b3 f7 ff ff       	call   7670 <is_stack_addr>
    7ebd:	84 c0                	test   %al,%al
    7ebf:	0f 84 ab 01 00 00    	je     8070 <trts_handle_exception+0x2b0>
    7ec5:	4c 8d 7b f8          	lea    -0x8(%rbx),%r15
    7ec9:	be 08 00 00 00       	mov    $0x8,%esi
    7ece:	4c 89 ff             	mov    %r15,%rdi
    7ed1:	e8 9a f7 ff ff       	call   7670 <is_stack_addr>
    7ed6:	41 89 c6             	mov    %eax,%r14d
    7ed9:	84 c0                	test   %al,%al
    7edb:	0f 84 8f 01 00 00    	je     8070 <trts_handle_exception+0x2b0>
    7ee1:	48 8b bd b0 00 00 00 	mov    0xb0(%rbp),%rdi
    7ee8:	49 39 ff             	cmp    %rdi,%r15
    7eeb:	0f 83 93 01 00 00    	jae    8084 <trts_handle_exception+0x2c4>
    7ef1:	4c 8d a7 ff 0f 00 00 	lea    0xfff(%rdi),%r12
    7ef8:	4d 29 fc             	sub    %r15,%r12
    7efb:	49 81 e4 00 f0 ff ff 	and    $0xfffffffffffff000,%r12
    7f02:	49 39 fc             	cmp    %rdi,%r12
    7f05:	0f 83 65 01 00 00    	jae    8070 <trts_handle_exception+0x2b0>
    7f0b:	4c 29 e7             	sub    %r12,%rdi
    7f0e:	48 3b 7d 18          	cmp    0x18(%rbp),%rdi
    7f12:	0f 82 58 01 00 00    	jb     8070 <trts_handle_exception+0x2b0>
    7f18:	4d 85 e4             	test   %r12,%r12
    7f1b:	0f 84 4f 01 00 00    	je     8070 <trts_handle_exception+0x2b0>
    7f21:	4c 89 e6             	mov    %r12,%rsi
    7f24:	e8 b7 3a 00 00       	call   b9e0 <mm_commit>
    7f29:	85 c0                	test   %eax,%eax
    7f2b:	0f 85 3f 01 00 00    	jne    8070 <trts_handle_exception+0x2b0>
    7f31:	48 8d 05 dc fe 00 00 	lea    0xfedc(%rip),%rax        # 17e14 <g_aexnotify_supported>
    7f38:	4c 29 a5 b0 00 00 00 	sub    %r12,0xb0(%rbp)
    7f3f:	45 89 f4             	mov    %r14d,%r12d
    7f42:	8b 08                	mov    (%rax),%ecx
    7f44:	31 c0                	xor    %eax,%eax
    7f46:	89 83 a8 00 00 00    	mov    %eax,0xa8(%rbx)
    7f4c:	41 0f b6 85 a0 00 00 	movzbl 0xa0(%r13),%eax
    7f53:	00 
    7f54:	89 83 90 00 00 00    	mov    %eax,0x90(%rbx)
    7f5a:	41 0f b6 95 a1 00 00 	movzbl 0xa1(%r13),%edx
    7f61:	00 
    7f62:	83 e8 0d             	sub    $0xd,%eax
    7f65:	83 e2 07             	and    $0x7,%edx
    7f68:	89 93 94 00 00 00    	mov    %edx,0x94(%rbx)
    7f6e:	48 8b 55 38          	mov    0x38(%rbp),%rdx
    7f72:	48 89 93 b0 00 00 00 	mov    %rdx,0xb0(%rbx)
    7f79:	49 8b 55 00          	mov    0x0(%r13),%rdx
    7f7d:	48 89 13             	mov    %rdx,(%rbx)
    7f80:	49 8b 55 08          	mov    0x8(%r13),%rdx
    7f84:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    7f88:	49 8b 55 10          	mov    0x10(%r13),%rdx
    7f8c:	48 89 53 10          	mov    %rdx,0x10(%rbx)
    7f90:	49 8b 55 18          	mov    0x18(%r13),%rdx
    7f94:	48 89 53 18          	mov    %rdx,0x18(%rbx)
    7f98:	49 8b 55 20          	mov    0x20(%r13),%rdx
    7f9c:	48 89 53 20          	mov    %rdx,0x20(%rbx)
    7fa0:	49 8b 55 28          	mov    0x28(%r13),%rdx
    7fa4:	48 89 53 28          	mov    %rdx,0x28(%rbx)
    7fa8:	49 8b 55 30          	mov    0x30(%r13),%rdx
    7fac:	48 89 53 30          	mov    %rdx,0x30(%rbx)
    7fb0:	49 8b 55 38          	mov    0x38(%r13),%rdx
    7fb4:	48 89 53 38          	mov    %rdx,0x38(%rbx)
    7fb8:	49 8b 95 80 00 00 00 	mov    0x80(%r13),%rdx
    7fbf:	48 89 93 80 00 00 00 	mov    %rdx,0x80(%rbx)
    7fc6:	49 8b 95 88 00 00 00 	mov    0x88(%r13),%rdx
    7fcd:	48 89 93 88 00 00 00 	mov    %rdx,0x88(%rbx)
    7fd4:	49 8b 75 40          	mov    0x40(%r13),%rsi
    7fd8:	48 89 73 40          	mov    %rsi,0x40(%rbx)
    7fdc:	49 8b 75 48          	mov    0x48(%r13),%rsi
    7fe0:	48 89 73 48          	mov    %rsi,0x48(%rbx)
    7fe4:	49 8b 75 50          	mov    0x50(%r13),%rsi
    7fe8:	48 89 73 50          	mov    %rsi,0x50(%rbx)
    7fec:	49 8b 75 58          	mov    0x58(%r13),%rsi
    7ff0:	48 89 73 58          	mov    %rsi,0x58(%rbx)
    7ff4:	49 8b 75 60          	mov    0x60(%r13),%rsi
    7ff8:	48 89 73 60          	mov    %rsi,0x60(%rbx)
    7ffc:	49 8b 75 68          	mov    0x68(%r13),%rsi
    8000:	48 89 73 68          	mov    %rsi,0x68(%rbx)
    8004:	49 8b 75 70          	mov    0x70(%r13),%rsi
    8008:	48 89 73 70          	mov    %rsi,0x70(%rbx)
    800c:	49 8b 75 78          	mov    0x78(%r13),%rsi
    8010:	48 89 73 78          	mov    %rsi,0x78(%rbx)
    8014:	83 f8 01             	cmp    $0x1,%eax
    8017:	77 15                	ja     802e <trts_handle_exception+0x26e>
    8019:	49 8b 45 f0          	mov    -0x10(%r13),%rax
    801d:	48 89 83 98 00 00 00 	mov    %rax,0x98(%rbx)
    8024:	41 8b 45 f8          	mov    -0x8(%r13),%eax
    8028:	89 83 a0 00 00 00    	mov    %eax,0xa0(%rbx)
    802e:	85 c9                	test   %ecx,%ecx
    8030:	0f 85 99 00 00 00    	jne    80cf <trts_handle_exception+0x30f>
    8036:	45 84 e4             	test   %r12b,%r12b
    8039:	0f 85 ec 00 00 00    	jne    812b <trts_handle_exception+0x36b>
    803f:	48 8d 05 8a f7 ff ff 	lea    -0x876(%rip),%rax        # 77d0 <internal_handle_exception>
    8046:	4d 89 7d 20          	mov    %r15,0x20(%r13)
    804a:	49 89 85 88 00 00 00 	mov    %rax,0x88(%r13)
    8051:	49 89 5d 00          	mov    %rbx,0x0(%r13)
    8055:	49 89 5d 38          	mov    %rbx,0x38(%r13)
    8059:	48 8b 83 88 00 00 00 	mov    0x88(%rbx),%rax
    8060:	48 89 43 f8          	mov    %rax,-0x8(%rbx)
    8064:	31 c0                	xor    %eax,%eax
    8066:	e9 c4 fd ff ff       	jmp    7e2f <trts_handle_exception+0x6f>
    806b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8070:	bf 03 00 00 00       	mov    $0x3,%edi
    8075:	e8 9b a0 00 00       	call   12115 <set_enclave_state>
    807a:	b8 09 10 00 00       	mov    $0x1009,%eax
    807f:	e9 ab fd ff ff       	jmp    7e2f <trts_handle_exception+0x6f>
    8084:	48 8d 15 89 fd 00 00 	lea    0xfd89(%rip),%rdx        # 17e14 <g_aexnotify_supported>
    808b:	49 8b 85 88 00 00 00 	mov    0x88(%r13),%rax
    8092:	48 3b 05 47 ff 00 00 	cmp    0xff47(%rip),%rax        # 17fe0 <_GLOBAL_OFFSET_TABLE_+0x28>
    8099:	8b 0a                	mov    (%rdx),%ecx
    809b:	74 6a                	je     8107 <trts_handle_exception+0x347>
    809d:	48 3b 05 34 ff 00 00 	cmp    0xff34(%rip),%rax        # 17fd8 <_GLOBAL_OFFSET_TABLE_+0x20>
    80a4:	0f 84 8c 00 00 00    	je     8136 <trts_handle_exception+0x376>
    80aa:	85 c9                	test   %ecx,%ecx
    80ac:	75 0e                	jne    80bc <trts_handle_exception+0x2fc>
    80ae:	41 80 bd a3 00 00 00 	cmpb   $0x0,0xa3(%r13)
    80b5:	00 
    80b6:	0f 89 64 fd ff ff    	jns    7e20 <trts_handle_exception+0x60>
    80bc:	41 0f b6 85 a3 00 00 	movzbl 0xa3(%r13),%eax
    80c3:	00 
    80c4:	c0 e8 07             	shr    $0x7,%al
    80c7:	0f b6 c0             	movzbl %al,%eax
    80ca:	e9 77 fe ff ff       	jmp    7f46 <trts_handle_exception+0x186>
    80cf:	48 89 53 f8          	mov    %rdx,-0x8(%rbx)
    80d3:	e8 c8 f6 ff ff       	call   77a0 <get_ssa_aexnotify>
    80d8:	48 8b 7d 58          	mov    0x58(%rbp),%rdi
    80dc:	89 83 ac 00 00 00    	mov    %eax,0xac(%rbx)
    80e2:	e8 ca 9b 00 00       	call   11cb1 <restore_xregs>
    80e7:	83 bb ac 00 00 00 01 	cmpl   $0x1,0xac(%rbx)
    80ee:	74 76                	je     8166 <trts_handle_exception+0x3a6>
    80f0:	48 8d 15 d9 f6 ff ff 	lea    -0x927(%rip),%rdx        # 77d0 <internal_handle_exception>
    80f7:	4c 89 fe             	mov    %r15,%rsi
    80fa:	48 89 df             	mov    %rbx,%rdi
    80fd:	e8 ae a4 00 00       	call   125b0 <second_phase>
    8102:	e9 19 fd ff ff       	jmp    7e20 <trts_handle_exception+0x60>
    8107:	49 83 7d 00 00       	cmpq   $0x0,0x0(%r13)
    810c:	75 8f                	jne    809d <trts_handle_exception+0x2dd>
    810e:	48 83 c0 03          	add    $0x3,%rax
    8112:	49 83 8d 80 00 00 00 	orq    $0x1,0x80(%r13)
    8119:	01 
    811a:	45 89 f4             	mov    %r14d,%r12d
    811d:	49 89 85 88 00 00 00 	mov    %rax,0x88(%r13)
    8124:	31 c0                	xor    %eax,%eax
    8126:	e9 1b fe ff ff       	jmp    7f46 <trts_handle_exception+0x186>
    812b:	48 89 53 f8          	mov    %rdx,-0x8(%rbx)
    812f:	31 c0                	xor    %eax,%eax
    8131:	e9 f9 fc ff ff       	jmp    7e2f <trts_handle_exception+0x6f>
    8136:	49 83 7d 00 08       	cmpq   $0x8,0x0(%r13)
    813b:	0f 85 69 ff ff ff    	jne    80aa <trts_handle_exception+0x2ea>
    8141:	48 83 c0 03          	add    $0x3,%rax
    8145:	49 83 8d 80 00 00 00 	orq    $0x40,0x80(%r13)
    814c:	40 
    814d:	45 89 f4             	mov    %r14d,%r12d
    8150:	49 89 85 88 00 00 00 	mov    %rax,0x88(%r13)
    8157:	31 c0                	xor    %eax,%eax
    8159:	49 c7 45 00 01 00 00 	movq   $0x1,0x0(%r13)
    8160:	00 
    8161:	e9 e0 fd ff ff       	jmp    7f46 <trts_handle_exception+0x186>
    8166:	31 ff                	xor    %edi,%edi
    8168:	e8 b3 e3 ff ff       	call   6520 <sgx_set_ssa_aexnotify>
    816d:	eb 81                	jmp    80f0 <trts_handle_exception+0x330>
    816f:	90                   	nop

0000000000008170 <get_xfeature_state>:
    8170:	f3 0f 1e fa          	endbr64 
    8174:	48 83 ec 08          	sub    $0x8,%rsp
    8178:	e8 d3 92 00 00       	call   11450 <sgx_self_report>
    817d:	31 d2                	xor    %edx,%edx
    817f:	48 8b 40 38          	mov    0x38(%rax),%rax
    8183:	48 83 f8 03          	cmp    $0x3,%rax
    8187:	0f 95 c2             	setne  %dl
    818a:	89 15 b4 1f 01 00    	mov    %edx,0x11fb4(%rip)        # 1a144 <g_xsave_enabled>
    8190:	48 83 c4 08          	add    $0x8,%rsp
    8194:	c3                   	ret    
    8195:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    819c:	00 00 00 
    819f:	90                   	nop

00000000000081a0 <has_text_relo>:
    81a0:	85 d2                	test   %edx,%edx
    81a2:	74 5b                	je     81ff <has_text_relo+0x5f>
    81a4:	89 d2                	mov    %edx,%edx
    81a6:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax
    81ad:	00 
    81ae:	48 29 d0             	sub    %rdx,%rax
    81b1:	48 8d 04 c6          	lea    (%rsi,%rax,8),%rax
    81b5:	eb 12                	jmp    81c9 <has_text_relo+0x29>
    81b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    81be:	00 00 
    81c0:	48 83 c6 38          	add    $0x38,%rsi
    81c4:	48 39 c6             	cmp    %rax,%rsi
    81c7:	74 36                	je     81ff <has_text_relo+0x5f>
    81c9:	83 3e 02             	cmpl   $0x2,(%rsi)
    81cc:	75 f2                	jne    81c0 <has_text_relo+0x20>
    81ce:	48 8b 56 20          	mov    0x20(%rsi),%rdx
    81d2:	48 03 7e 18          	add    0x18(%rsi),%rdi
    81d6:	48 c1 ea 04          	shr    $0x4,%rdx
    81da:	74 23                	je     81ff <has_text_relo+0x5f>
    81dc:	48 c1 e2 04          	shl    $0x4,%rdx
    81e0:	48 01 fa             	add    %rdi,%rdx
    81e3:	eb 12                	jmp    81f7 <has_text_relo+0x57>
    81e5:	0f 1f 00             	nopl   (%rax)
    81e8:	48 83 f8 16          	cmp    $0x16,%rax
    81ec:	74 1a                	je     8208 <has_text_relo+0x68>
    81ee:	48 83 c7 10          	add    $0x10,%rdi
    81f2:	48 39 fa             	cmp    %rdi,%rdx
    81f5:	74 08                	je     81ff <has_text_relo+0x5f>
    81f7:	48 8b 07             	mov    (%rdi),%rax
    81fa:	48 85 c0             	test   %rax,%rax
    81fd:	75 e9                	jne    81e8 <has_text_relo+0x48>
    81ff:	31 c0                	xor    %eax,%eax
    8201:	c3                   	ret    
    8202:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8208:	b8 01 00 00 00       	mov    $0x1,%eax
    820d:	c3                   	ret    
    820e:	66 90                	xchg   %ax,%ax

0000000000008210 <do_relocs>:
    8210:	49 89 d3             	mov    %rdx,%r11
    8213:	48 8d 14 37          	lea    (%rdi,%rsi,1),%rdx
    8217:	49 01 fb             	add    %rdi,%r11
    821a:	48 85 c9             	test   %rcx,%rcx
    821d:	0f 84 c2 01 00 00    	je     83e5 <do_relocs+0x1d5>
    8223:	55                   	push   %rbp
    8224:	49 89 c9             	mov    %rcx,%r9
    8227:	31 f6                	xor    %esi,%esi
    8229:	4c 8d 05 a0 ae 00 00 	lea    0xaea0(%rip),%r8        # 130d0 <g_dyn_entry_table+0xa0>
    8230:	53                   	push   %rbx
    8231:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8238:	4c 8b 12             	mov    (%rdx),%r10
    823b:	48 8b 42 08          	mov    0x8(%rdx),%rax
    823f:	49 01 fa             	add    %rdi,%r10
    8242:	89 c1                	mov    %eax,%ecx
    8244:	83 f8 12             	cmp    $0x12,%eax
    8247:	0f 87 85 00 00 00    	ja     82d2 <do_relocs+0xc2>
    824d:	49 63 0c 88          	movslq (%r8,%rcx,4),%rcx
    8251:	4c 01 c1             	add    %r8,%rcx
    8254:	3e ff e1             	notrack jmp *%rcx
    8257:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    825e:	00 00 
    8260:	48 c1 e8 20          	shr    $0x20,%rax
    8264:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
    8268:	49 8d 1c c3          	lea    (%r11,%rax,8),%rbx
    826c:	0f b6 43 04          	movzbl 0x4(%rbx),%eax
    8270:	c0 e8 04             	shr    $0x4,%al
    8273:	3c 02                	cmp    $0x2,%al
    8275:	0f 84 05 01 00 00    	je     8380 <do_relocs+0x170>
    827b:	48 85 db             	test   %rbx,%rbx
    827e:	0f 84 8c 00 00 00    	je     8310 <do_relocs+0x100>
    8284:	48 85 ff             	test   %rdi,%rdi
    8287:	74 49                	je     82d2 <do_relocs+0xc2>
    8289:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    828f:	75 41                	jne    82d2 <do_relocs+0xc2>
    8291:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    8296:	75 3a                	jne    82d2 <do_relocs+0xc2>
    8298:	48 89 f8             	mov    %rdi,%rax
    829b:	48 03 47 20          	add    0x20(%rdi),%rax
    829f:	74 31                	je     82d2 <do_relocs+0xc2>
    82a1:	0f b7 6f 38          	movzwl 0x38(%rdi),%ebp
    82a5:	66 85 ed             	test   %bp,%bp
    82a8:	74 28                	je     82d2 <do_relocs+0xc2>
    82aa:	83 ed 01             	sub    $0x1,%ebp
    82ad:	48 8d 0c ed 00 00 00 	lea    0x0(,%rbp,8),%rcx
    82b4:	00 
    82b5:	48 29 e9             	sub    %rbp,%rcx
    82b8:	48 8d 4c c8 38       	lea    0x38(%rax,%rcx,8),%rcx
    82bd:	0f 1f 00             	nopl   (%rax)
    82c0:	83 38 07             	cmpl   $0x7,(%rax)
    82c3:	0f 84 e7 00 00 00    	je     83b0 <do_relocs+0x1a0>
    82c9:	48 83 c0 38          	add    $0x38,%rax
    82cd:	48 39 c8             	cmp    %rcx,%rax
    82d0:	75 ee                	jne    82c0 <do_relocs+0xb0>
    82d2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    82d7:	5b                   	pop    %rbx
    82d8:	5d                   	pop    %rbp
    82d9:	c3                   	ret    
    82da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    82e0:	48 c1 e8 20          	shr    $0x20,%rax
    82e4:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
    82e8:	49 8d 0c c3          	lea    (%r11,%rax,8),%rcx
    82ec:	0f b6 41 04          	movzbl 0x4(%rcx),%eax
    82f0:	c0 e8 04             	shr    $0x4,%al
    82f3:	3c 02                	cmp    $0x2,%al
    82f5:	0f 84 95 00 00 00    	je     8390 <do_relocs+0x180>
    82fb:	48 85 c9             	test   %rcx,%rcx
    82fe:	74 10                	je     8310 <do_relocs+0x100>
    8300:	48 8b 42 10          	mov    0x10(%rdx),%rax
    8304:	48 01 f8             	add    %rdi,%rax
    8307:	48 03 41 08          	add    0x8(%rcx),%rax
    830b:	49 89 02             	mov    %rax,(%r10)
    830e:	66 90                	xchg   %ax,%ax
    8310:	48 83 c6 01          	add    $0x1,%rsi
    8314:	48 83 c2 18          	add    $0x18,%rdx
    8318:	49 39 f1             	cmp    %rsi,%r9
    831b:	0f 85 17 ff ff ff    	jne    8238 <do_relocs+0x28>
    8321:	31 c0                	xor    %eax,%eax
    8323:	5b                   	pop    %rbx
    8324:	5d                   	pop    %rbp
    8325:	c3                   	ret    
    8326:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    832d:	00 00 00 
    8330:	48 c1 e8 20          	shr    $0x20,%rax
    8334:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
    8338:	49 8d 0c c3          	lea    (%r11,%rax,8),%rcx
    833c:	0f b6 41 04          	movzbl 0x4(%rcx),%eax
    8340:	c0 e8 04             	shr    $0x4,%al
    8343:	3c 02                	cmp    $0x2,%al
    8345:	74 59                	je     83a0 <do_relocs+0x190>
    8347:	48 85 c9             	test   %rcx,%rcx
    834a:	74 c4                	je     8310 <do_relocs+0x100>
    834c:	48 8b 42 10          	mov    0x10(%rdx),%rax
    8350:	48 03 41 08          	add    0x8(%rcx),%rax
    8354:	49 89 02             	mov    %rax,(%r10)
    8357:	eb b7                	jmp    8310 <do_relocs+0x100>
    8359:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8360:	49 c7 02 01 00 00 00 	movq   $0x1,(%r10)
    8367:	eb a7                	jmp    8310 <do_relocs+0x100>
    8369:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8370:	48 8b 42 10          	mov    0x10(%rdx),%rax
    8374:	48 01 f8             	add    %rdi,%rax
    8377:	49 89 02             	mov    %rax,(%r10)
    837a:	eb 94                	jmp    8310 <do_relocs+0x100>
    837c:	0f 1f 40 00          	nopl   0x0(%rax)
    8380:	48 83 7b 08 00       	cmpq   $0x0,0x8(%rbx)
    8385:	0f 85 f0 fe ff ff    	jne    827b <do_relocs+0x6b>
    838b:	eb 83                	jmp    8310 <do_relocs+0x100>
    838d:	0f 1f 00             	nopl   (%rax)
    8390:	48 83 79 08 00       	cmpq   $0x0,0x8(%rcx)
    8395:	0f 85 60 ff ff ff    	jne    82fb <do_relocs+0xeb>
    839b:	e9 70 ff ff ff       	jmp    8310 <do_relocs+0x100>
    83a0:	48 83 79 08 00       	cmpq   $0x0,0x8(%rcx)
    83a5:	75 a0                	jne    8347 <do_relocs+0x137>
    83a7:	e9 64 ff ff ff       	jmp    8310 <do_relocs+0x100>
    83ac:	0f 1f 40 00          	nopl   0x0(%rax)
    83b0:	48 8b 48 28          	mov    0x28(%rax),%rcx
    83b4:	48 8b 40 30          	mov    0x30(%rax),%rax
    83b8:	48 83 f8 01          	cmp    $0x1,%rax
    83bc:	76 0b                	jbe    83c9 <do_relocs+0x1b9>
    83be:	48 8d 4c 01 ff       	lea    -0x1(%rcx,%rax,1),%rcx
    83c3:	48 f7 d8             	neg    %rax
    83c6:	48 21 c1             	and    %rax,%rcx
    83c9:	48 85 c9             	test   %rcx,%rcx
    83cc:	0f 84 00 ff ff ff    	je     82d2 <do_relocs+0xc2>
    83d2:	48 8b 42 10          	mov    0x10(%rdx),%rax
    83d6:	48 03 43 08          	add    0x8(%rbx),%rax
    83da:	48 29 c8             	sub    %rcx,%rax
    83dd:	49 89 02             	mov    %rax,(%r10)
    83e0:	e9 2b ff ff ff       	jmp    8310 <do_relocs+0x100>
    83e5:	31 c0                	xor    %eax,%eax
    83e7:	c3                   	ret    
    83e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    83ef:	00 

00000000000083f0 <relocate_enclave>:
    83f0:	f3 0f 1e fa          	endbr64 
    83f4:	48 85 ff             	test   %rdi,%rdi
    83f7:	0f 84 d3 01 00 00    	je     85d0 <relocate_enclave+0x1e0>
    83fd:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    8403:	0f 85 c7 01 00 00    	jne    85d0 <relocate_enclave+0x1e0>
    8409:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    840e:	0f 85 bc 01 00 00    	jne    85d0 <relocate_enclave+0x1e0>
    8414:	41 57                	push   %r15
    8416:	41 56                	push   %r14
    8418:	41 55                	push   %r13
    841a:	41 54                	push   %r12
    841c:	55                   	push   %rbp
    841d:	53                   	push   %rbx
    841e:	48 89 fb             	mov    %rdi,%rbx
    8421:	48 83 ec 08          	sub    $0x8,%rsp
    8425:	48 03 5f 20          	add    0x20(%rdi),%rbx
    8429:	0f 84 fd 00 00 00    	je     852c <relocate_enclave+0x13c>
    842f:	0f b7 57 38          	movzwl 0x38(%rdi),%edx
    8433:	66 85 d2             	test   %dx,%dx
    8436:	0f 84 c4 01 00 00    	je     8600 <relocate_enclave+0x210>
    843c:	83 ea 01             	sub    $0x1,%edx
    843f:	48 8d 2d d6 ac 00 00 	lea    0xacd6(%rip),%rbp        # 1311c <g_dyn_entry_table+0xec>
    8446:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax
    844d:	00 
    844e:	48 29 d0             	sub    %rdx,%rax
    8451:	4c 8d 64 c3 38       	lea    0x38(%rbx,%rax,8),%r12
    8456:	eb 15                	jmp    846d <relocate_enclave+0x7d>
    8458:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    845f:	00 
    8460:	48 83 c3 38          	add    $0x38,%rbx
    8464:	49 39 dc             	cmp    %rbx,%r12
    8467:	0f 84 93 01 00 00    	je     8600 <relocate_enclave+0x210>
    846d:	83 3b 02             	cmpl   $0x2,(%rbx)
    8470:	75 ee                	jne    8460 <relocate_enclave+0x70>
    8472:	48 8b 53 18          	mov    0x18(%rbx),%rdx
    8476:	4c 8b 53 20          	mov    0x20(%rbx),%r10
    847a:	48 01 fa             	add    %rdi,%rdx
    847d:	49 c1 ea 04          	shr    $0x4,%r10
    8481:	74 dd                	je     8460 <relocate_enclave+0x70>
    8483:	49 c1 e2 04          	shl    $0x4,%r10
    8487:	45 31 f6             	xor    %r14d,%r14d
    848a:	45 31 ed             	xor    %r13d,%r13d
    848d:	31 c0                	xor    %eax,%eax
    848f:	49 01 d2             	add    %rdx,%r10
    8492:	45 31 ff             	xor    %r15d,%r15d
    8495:	45 31 c9             	xor    %r9d,%r9d
    8498:	45 31 c0             	xor    %r8d,%r8d
    849b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    84a0:	48 8b 32             	mov    (%rdx),%rsi
    84a3:	48 85 f6             	test   %rsi,%rsi
    84a6:	74 30                	je     84d8 <relocate_enclave+0xe8>
    84a8:	48 83 fe 17          	cmp    $0x17,%rsi
    84ac:	77 1a                	ja     84c8 <relocate_enclave+0xd8>
    84ae:	48 63 74 b5 00       	movslq 0x0(%rbp,%rsi,4),%rsi
    84b3:	48 01 ee             	add    %rbp,%rsi
    84b6:	3e ff e6             	notrack jmp *%rsi
    84b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    84c0:	4c 8b 42 08          	mov    0x8(%rdx),%r8
    84c4:	0f 1f 40 00          	nopl   0x0(%rax)
    84c8:	48 83 c2 10          	add    $0x10,%rdx
    84cc:	49 39 d2             	cmp    %rdx,%r10
    84cf:	75 cf                	jne    84a0 <relocate_enclave+0xb0>
    84d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    84d8:	4d 85 c9             	test   %r9,%r9
    84db:	0f 84 ff 00 00 00    	je     85e0 <relocate_enclave+0x1f0>
    84e1:	4d 85 ed             	test   %r13,%r13
    84e4:	74 46                	je     852c <relocate_enclave+0x13c>
    84e6:	31 d2                	xor    %edx,%edx
    84e8:	4c 89 ce             	mov    %r9,%rsi
    84eb:	4c 89 04 24          	mov    %r8,(%rsp)
    84ef:	49 f7 f5             	div    %r13
    84f2:	4c 89 c2             	mov    %r8,%rdx
    84f5:	48 89 c1             	mov    %rax,%rcx
    84f8:	e8 13 fd ff ff       	call   8210 <do_relocs>
    84fd:	85 c0                	test   %eax,%eax
    84ff:	75 2b                	jne    852c <relocate_enclave+0x13c>
    8501:	4d 85 ff             	test   %r15,%r15
    8504:	4c 8b 04 24          	mov    (%rsp),%r8
    8508:	0f 84 52 ff ff ff    	je     8460 <relocate_enclave+0x70>
    850e:	31 d2                	xor    %edx,%edx
    8510:	4c 89 f0             	mov    %r14,%rax
    8513:	4c 89 fe             	mov    %r15,%rsi
    8516:	49 f7 f5             	div    %r13
    8519:	4c 89 c2             	mov    %r8,%rdx
    851c:	48 89 c1             	mov    %rax,%rcx
    851f:	e8 ec fc ff ff       	call   8210 <do_relocs>
    8524:	85 c0                	test   %eax,%eax
    8526:	0f 84 34 ff ff ff    	je     8460 <relocate_enclave+0x70>
    852c:	48 83 c4 08          	add    $0x8,%rsp
    8530:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8535:	5b                   	pop    %rbx
    8536:	5d                   	pop    %rbp
    8537:	41 5c                	pop    %r12
    8539:	41 5d                	pop    %r13
    853b:	41 5e                	pop    %r14
    853d:	41 5f                	pop    %r15
    853f:	c3                   	ret    
    8540:	4c 8b 7a 08          	mov    0x8(%rdx),%r15
    8544:	48 83 c2 10          	add    $0x10,%rdx
    8548:	49 39 d2             	cmp    %rdx,%r10
    854b:	0f 85 4f ff ff ff    	jne    84a0 <relocate_enclave+0xb0>
    8551:	eb 85                	jmp    84d8 <relocate_enclave+0xe8>
    8553:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8558:	48 8b 42 08          	mov    0x8(%rdx),%rax
    855c:	48 83 c2 10          	add    $0x10,%rdx
    8560:	49 39 d2             	cmp    %rdx,%r10
    8563:	0f 85 37 ff ff ff    	jne    84a0 <relocate_enclave+0xb0>
    8569:	e9 6a ff ff ff       	jmp    84d8 <relocate_enclave+0xe8>
    856e:	66 90                	xchg   %ax,%ax
    8570:	4c 8b 4a 08          	mov    0x8(%rdx),%r9
    8574:	48 83 c2 10          	add    $0x10,%rdx
    8578:	49 39 d2             	cmp    %rdx,%r10
    857b:	0f 85 1f ff ff ff    	jne    84a0 <relocate_enclave+0xb0>
    8581:	e9 52 ff ff ff       	jmp    84d8 <relocate_enclave+0xe8>
    8586:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    858d:	00 00 00 
    8590:	4c 8b 72 08          	mov    0x8(%rdx),%r14
    8594:	48 83 c2 10          	add    $0x10,%rdx
    8598:	49 39 d2             	cmp    %rdx,%r10
    859b:	0f 85 ff fe ff ff    	jne    84a0 <relocate_enclave+0xb0>
    85a1:	e9 32 ff ff ff       	jmp    84d8 <relocate_enclave+0xe8>
    85a6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    85ad:	00 00 00 
    85b0:	4c 8b 6a 08          	mov    0x8(%rdx),%r13
    85b4:	48 83 c2 10          	add    $0x10,%rdx
    85b8:	49 39 d2             	cmp    %rdx,%r10
    85bb:	0f 85 df fe ff ff    	jne    84a0 <relocate_enclave+0xb0>
    85c1:	e9 12 ff ff ff       	jmp    84d8 <relocate_enclave+0xe8>
    85c6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    85cd:	00 00 00 
    85d0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    85d5:	c3                   	ret    
    85d6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    85dd:	00 00 00 
    85e0:	4d 85 ff             	test   %r15,%r15
    85e3:	0f 84 77 fe ff ff    	je     8460 <relocate_enclave+0x70>
    85e9:	4d 85 ed             	test   %r13,%r13
    85ec:	0f 84 3a ff ff ff    	je     852c <relocate_enclave+0x13c>
    85f2:	e9 17 ff ff ff       	jmp    850e <relocate_enclave+0x11e>
    85f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    85fe:	00 00 
    8600:	48 83 c4 08          	add    $0x8,%rsp
    8604:	31 c0                	xor    %eax,%eax
    8606:	5b                   	pop    %rbx
    8607:	5d                   	pop    %rbp
    8608:	41 5c                	pop    %r12
    860a:	41 5d                	pop    %r13
    860c:	41 5e                	pop    %r14
    860e:	41 5f                	pop    %r15
    8610:	c3                   	ret    
    8611:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8618:	00 00 00 
    861b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000008620 <elf_tls_info>:
    8620:	f3 0f 1e fa          	endbr64 
    8624:	49 89 f0             	mov    %rsi,%r8
    8627:	48 89 f9             	mov    %rdi,%rcx
    862a:	48 89 d6             	mov    %rdx,%rsi
    862d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8632:	48 85 ff             	test   %rdi,%rdi
    8635:	74 7e                	je     86b5 <elf_tls_info+0x95>
    8637:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    863d:	75 75                	jne    86b4 <elf_tls_info+0x94>
    863f:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    8644:	75 6e                	jne    86b4 <elf_tls_info+0x94>
    8646:	48 8b 47 20          	mov    0x20(%rdi),%rax
    864a:	48 01 f8             	add    %rdi,%rax
    864d:	4d 85 c0             	test   %r8,%r8
    8650:	0f 94 c2             	sete   %dl
    8653:	48 85 f6             	test   %rsi,%rsi
    8656:	40 0f 94 c7          	sete   %dil
    865a:	40 08 fa             	or     %dil,%dl
    865d:	75 50                	jne    86af <elf_tls_info+0x8f>
    865f:	48 85 c0             	test   %rax,%rax
    8662:	74 4b                	je     86af <elf_tls_info+0x8f>
    8664:	0f b7 79 38          	movzwl 0x38(%rcx),%edi
    8668:	49 c7 00 00 00 00 00 	movq   $0x0,(%r8)
    866f:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
    8676:	66 85 ff             	test   %di,%di
    8679:	74 31                	je     86ac <elf_tls_info+0x8c>
    867b:	83 ef 01             	sub    $0x1,%edi
    867e:	48 8d 14 fd 00 00 00 	lea    0x0(,%rdi,8),%rdx
    8685:	00 
    8686:	48 29 fa             	sub    %rdi,%rdx
    8689:	48 8d 54 d0 38       	lea    0x38(%rax,%rdx,8),%rdx
    868e:	eb 09                	jmp    8699 <elf_tls_info+0x79>
    8690:	48 83 c0 38          	add    $0x38,%rax
    8694:	48 39 d0             	cmp    %rdx,%rax
    8697:	74 13                	je     86ac <elf_tls_info+0x8c>
    8699:	83 38 07             	cmpl   $0x7,(%rax)
    869c:	75 f2                	jne    8690 <elf_tls_info+0x70>
    869e:	48 03 48 10          	add    0x10(%rax),%rcx
    86a2:	49 89 08             	mov    %rcx,(%r8)
    86a5:	48 8b 40 20          	mov    0x20(%rax),%rax
    86a9:	48 89 06             	mov    %rax,(%rsi)
    86ac:	31 c0                	xor    %eax,%eax
    86ae:	c3                   	ret    
    86af:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    86b4:	c3                   	ret    
    86b5:	c3                   	ret    
    86b6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    86bd:	00 00 00 

00000000000086c0 <elf_get_init_array>:
    86c0:	f3 0f 1e fa          	endbr64 
    86c4:	49 89 f8             	mov    %rdi,%r8
    86c7:	49 89 f1             	mov    %rsi,%r9
    86ca:	49 89 d2             	mov    %rdx,%r10
    86cd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    86d2:	48 85 ff             	test   %rdi,%rdi
    86d5:	0f 84 c8 00 00 00    	je     87a3 <elf_get_init_array+0xe3>
    86db:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    86e1:	0f 85 b6 00 00 00    	jne    879d <elf_get_init_array+0xdd>
    86e7:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    86ec:	0f 85 ab 00 00 00    	jne    879d <elf_get_init_array+0xdd>
    86f2:	48 8b 57 20          	mov    0x20(%rdi),%rdx
    86f6:	48 01 fa             	add    %rdi,%rdx
    86f9:	48 85 f6             	test   %rsi,%rsi
    86fc:	0f 94 c0             	sete   %al
    86ff:	4d 85 d2             	test   %r10,%r10
    8702:	0f 94 c1             	sete   %cl
    8705:	08 c8                	or     %cl,%al
    8707:	0f 85 8b 00 00 00    	jne    8798 <elf_get_init_array+0xd8>
    870d:	48 85 d2             	test   %rdx,%rdx
    8710:	0f 84 82 00 00 00    	je     8798 <elf_get_init_array+0xd8>
    8716:	0f b7 4f 38          	movzwl 0x38(%rdi),%ecx
    871a:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
    8721:	49 c7 02 00 00 00 00 	movq   $0x0,(%r10)
    8728:	66 85 c9             	test   %cx,%cx
    872b:	74 73                	je     87a0 <elf_get_init_array+0xe0>
    872d:	83 e9 01             	sub    $0x1,%ecx
    8730:	48 8d 04 cd 00 00 00 	lea    0x0(,%rcx,8),%rax
    8737:	00 
    8738:	48 29 c8             	sub    %rcx,%rax
    873b:	48 8d 7c c2 38       	lea    0x38(%rdx,%rax,8),%rdi
    8740:	eb 0f                	jmp    8751 <elf_get_init_array+0x91>
    8742:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8748:	48 83 c2 38          	add    $0x38,%rdx
    874c:	48 39 fa             	cmp    %rdi,%rdx
    874f:	74 4f                	je     87a0 <elf_get_init_array+0xe0>
    8751:	83 3a 02             	cmpl   $0x2,(%rdx)
    8754:	75 f2                	jne    8748 <elf_get_init_array+0x88>
    8756:	48 8b 42 18          	mov    0x18(%rdx),%rax
    875a:	48 8b 72 20          	mov    0x20(%rdx),%rsi
    875e:	4c 01 c0             	add    %r8,%rax
    8761:	48 c1 ee 04          	shr    $0x4,%rsi
    8765:	74 e1                	je     8748 <elf_get_init_array+0x88>
    8767:	48 c1 e6 04          	shl    $0x4,%rsi
    876b:	48 01 c6             	add    %rax,%rsi
    876e:	eb 16                	jmp    8786 <elf_get_init_array+0xc6>
    8770:	48 83 f9 1b          	cmp    $0x1b,%rcx
    8774:	75 07                	jne    877d <elf_get_init_array+0xbd>
    8776:	48 8b 48 08          	mov    0x8(%rax),%rcx
    877a:	49 89 0a             	mov    %rcx,(%r10)
    877d:	48 83 c0 10          	add    $0x10,%rax
    8781:	48 39 c6             	cmp    %rax,%rsi
    8784:	74 c2                	je     8748 <elf_get_init_array+0x88>
    8786:	48 8b 08             	mov    (%rax),%rcx
    8789:	48 83 f9 19          	cmp    $0x19,%rcx
    878d:	75 e1                	jne    8770 <elf_get_init_array+0xb0>
    878f:	48 8b 48 08          	mov    0x8(%rax),%rcx
    8793:	49 89 09             	mov    %rcx,(%r9)
    8796:	eb e5                	jmp    877d <elf_get_init_array+0xbd>
    8798:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    879d:	c3                   	ret    
    879e:	66 90                	xchg   %ax,%ax
    87a0:	31 c0                	xor    %eax,%eax
    87a2:	c3                   	ret    
    87a3:	c3                   	ret    
    87a4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    87ab:	00 00 00 
    87ae:	66 90                	xchg   %ax,%ax

00000000000087b0 <elf_get_uninit_array>:
    87b0:	f3 0f 1e fa          	endbr64 
    87b4:	49 89 f8             	mov    %rdi,%r8
    87b7:	49 89 f1             	mov    %rsi,%r9
    87ba:	49 89 d2             	mov    %rdx,%r10
    87bd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    87c2:	48 85 ff             	test   %rdi,%rdi
    87c5:	0f 84 c8 00 00 00    	je     8893 <elf_get_uninit_array+0xe3>
    87cb:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    87d1:	0f 85 b6 00 00 00    	jne    888d <elf_get_uninit_array+0xdd>
    87d7:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    87dc:	0f 85 ab 00 00 00    	jne    888d <elf_get_uninit_array+0xdd>
    87e2:	48 8b 57 20          	mov    0x20(%rdi),%rdx
    87e6:	48 01 fa             	add    %rdi,%rdx
    87e9:	48 85 f6             	test   %rsi,%rsi
    87ec:	0f 94 c0             	sete   %al
    87ef:	4d 85 d2             	test   %r10,%r10
    87f2:	0f 94 c1             	sete   %cl
    87f5:	08 c8                	or     %cl,%al
    87f7:	0f 85 8b 00 00 00    	jne    8888 <elf_get_uninit_array+0xd8>
    87fd:	48 85 d2             	test   %rdx,%rdx
    8800:	0f 84 82 00 00 00    	je     8888 <elf_get_uninit_array+0xd8>
    8806:	0f b7 4f 38          	movzwl 0x38(%rdi),%ecx
    880a:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
    8811:	49 c7 02 00 00 00 00 	movq   $0x0,(%r10)
    8818:	66 85 c9             	test   %cx,%cx
    881b:	74 73                	je     8890 <elf_get_uninit_array+0xe0>
    881d:	83 e9 01             	sub    $0x1,%ecx
    8820:	48 8d 04 cd 00 00 00 	lea    0x0(,%rcx,8),%rax
    8827:	00 
    8828:	48 29 c8             	sub    %rcx,%rax
    882b:	48 8d 7c c2 38       	lea    0x38(%rdx,%rax,8),%rdi
    8830:	eb 0f                	jmp    8841 <elf_get_uninit_array+0x91>
    8832:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8838:	48 83 c2 38          	add    $0x38,%rdx
    883c:	48 39 fa             	cmp    %rdi,%rdx
    883f:	74 4f                	je     8890 <elf_get_uninit_array+0xe0>
    8841:	83 3a 02             	cmpl   $0x2,(%rdx)
    8844:	75 f2                	jne    8838 <elf_get_uninit_array+0x88>
    8846:	48 8b 42 18          	mov    0x18(%rdx),%rax
    884a:	48 8b 72 20          	mov    0x20(%rdx),%rsi
    884e:	4c 01 c0             	add    %r8,%rax
    8851:	48 c1 ee 04          	shr    $0x4,%rsi
    8855:	74 e1                	je     8838 <elf_get_uninit_array+0x88>
    8857:	48 c1 e6 04          	shl    $0x4,%rsi
    885b:	48 01 c6             	add    %rax,%rsi
    885e:	eb 16                	jmp    8876 <elf_get_uninit_array+0xc6>
    8860:	48 83 f9 1c          	cmp    $0x1c,%rcx
    8864:	75 07                	jne    886d <elf_get_uninit_array+0xbd>
    8866:	48 8b 48 08          	mov    0x8(%rax),%rcx
    886a:	49 89 0a             	mov    %rcx,(%r10)
    886d:	48 83 c0 10          	add    $0x10,%rax
    8871:	48 39 c6             	cmp    %rax,%rsi
    8874:	74 c2                	je     8838 <elf_get_uninit_array+0x88>
    8876:	48 8b 08             	mov    (%rax),%rcx
    8879:	48 83 f9 1a          	cmp    $0x1a,%rcx
    887d:	75 e1                	jne    8860 <elf_get_uninit_array+0xb0>
    887f:	48 8b 48 08          	mov    0x8(%rax),%rcx
    8883:	49 89 09             	mov    %rcx,(%r9)
    8886:	eb e5                	jmp    886d <elf_get_uninit_array+0xbd>
    8888:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    888d:	c3                   	ret    
    888e:	66 90                	xchg   %ax,%ax
    8890:	31 c0                	xor    %eax,%eax
    8892:	c3                   	ret    
    8893:	c3                   	ret    
    8894:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    889b:	00 00 00 
    889e:	66 90                	xchg   %ax,%ax

00000000000088a0 <change_protection>:
    88a0:	f3 0f 1e fa          	endbr64 
    88a4:	48 85 ff             	test   %rdi,%rdi
    88a7:	0f 84 be 01 00 00    	je     8a6b <change_protection+0x1cb>
    88ad:	41 56                	push   %r14
    88af:	41 55                	push   %r13
    88b1:	49 89 fd             	mov    %rdi,%r13
    88b4:	41 54                	push   %r12
    88b6:	55                   	push   %rbp
    88b7:	53                   	push   %rbx
    88b8:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    88be:	0f 85 bc 00 00 00    	jne    8980 <change_protection+0xe0>
    88c4:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    88c9:	0f 85 b1 00 00 00    	jne    8980 <change_protection+0xe0>
    88cf:	48 89 fb             	mov    %rdi,%rbx
    88d2:	48 03 5f 20          	add    0x20(%rdi),%rbx
    88d6:	0f 84 a4 00 00 00    	je     8980 <change_protection+0xe0>
    88dc:	0f b7 57 38          	movzwl 0x38(%rdi),%edx
    88e0:	48 89 de             	mov    %rbx,%rsi
    88e3:	89 d1                	mov    %edx,%ecx
    88e5:	e8 b6 f8 ff ff       	call   81a0 <has_text_relo>
    88ea:	41 89 c6             	mov    %eax,%r14d
    88ed:	66 85 c9             	test   %cx,%cx
    88f0:	0f 84 ea 00 00 00    	je     89e0 <change_protection+0x140>
    88f6:	49 bc ff ff ff ff 02 	movabs $0x2ffffffff,%r12
    88fd:	00 00 00 
    8900:	31 ed                	xor    %ebp,%ebp
    8902:	eb 18                	jmp    891c <change_protection+0x7c>
    8904:	0f 1f 40 00          	nopl   0x0(%rax)
    8908:	41 0f b7 45 38       	movzwl 0x38(%r13),%eax
    890d:	83 c5 01             	add    $0x1,%ebp
    8910:	48 83 c3 38          	add    $0x38,%rbx
    8914:	39 c5                	cmp    %eax,%ebp
    8916:	0f 83 c4 00 00 00    	jae    89e0 <change_protection+0x140>
    891c:	45 85 f6             	test   %r14d,%r14d
    891f:	74 0c                	je     892d <change_protection+0x8d>
    8921:	48 8b 03             	mov    (%rbx),%rax
    8924:	4c 21 e0             	and    %r12,%rax
    8927:	48 83 f8 01          	cmp    $0x1,%rax
    892b:	74 63                	je     8990 <change_protection+0xf0>
    892d:	81 3b 52 e5 74 64    	cmpl   $0x6474e552,(%rbx)
    8933:	75 d3                	jne    8908 <change_protection+0x68>
    8935:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    8939:	48 8b 73 28          	mov    0x28(%rbx),%rsi
    893d:	48 01 fe             	add    %rdi,%rsi
    8940:	48 89 f8             	mov    %rdi,%rax
    8943:	48 81 c6 ff 0f 00 00 	add    $0xfff,%rsi
    894a:	48 31 f0             	xor    %rsi,%rax
    894d:	48 3d ff 0f 00 00    	cmp    $0xfff,%rax
    8953:	76 b3                	jbe    8908 <change_protection+0x68>
    8955:	48 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%rdi
    895c:	48 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%rsi
    8963:	ba 01 00 00 00       	mov    $0x1,%edx
    8968:	48 29 fe             	sub    %rdi,%rsi
    896b:	4c 01 ef             	add    %r13,%rdi
    896e:	e8 bd 30 00 00       	call   ba30 <mm_modify_permissions>
    8973:	85 c0                	test   %eax,%eax
    8975:	74 91                	je     8908 <change_protection+0x68>
    8977:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    897e:	00 00 
    8980:	b8 01 00 00 00       	mov    $0x1,%eax
    8985:	5b                   	pop    %rbx
    8986:	5d                   	pop    %rbp
    8987:	41 5c                	pop    %r12
    8989:	41 5d                	pop    %r13
    898b:	41 5e                	pop    %r14
    898d:	c3                   	ret    
    898e:	66 90                	xchg   %ax,%ax
    8990:	48 8b 43 10          	mov    0x10(%rbx),%rax
    8994:	8b 4b 04             	mov    0x4(%rbx),%ecx
    8997:	48 89 c7             	mov    %rax,%rdi
    899a:	89 ca                	mov    %ecx,%edx
    899c:	48 03 43 28          	add    0x28(%rbx),%rax
    89a0:	c1 e9 02             	shr    $0x2,%ecx
    89a3:	83 e2 01             	and    $0x1,%edx
    89a6:	48 8d b0 ff 0f 00 00 	lea    0xfff(%rax),%rsi
    89ad:	48 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%rdi
    89b4:	83 e1 01             	and    $0x1,%ecx
    89b7:	48 c1 e2 02          	shl    $0x2,%rdx
    89bb:	48 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%rsi
    89c2:	48 29 fe             	sub    %rdi,%rsi
    89c5:	09 ca                	or     %ecx,%edx
    89c7:	4c 01 ef             	add    %r13,%rdi
    89ca:	e8 61 30 00 00       	call   ba30 <mm_modify_permissions>
    89cf:	85 c0                	test   %eax,%eax
    89d1:	0f 84 56 ff ff ff    	je     892d <change_protection+0x8d>
    89d7:	eb a7                	jmp    8980 <change_protection+0xe0>
    89d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    89e0:	8b 05 f2 a8 00 00    	mov    0xa8f2(%rip),%eax        # 132d8 <g_global_data+0x158>
    89e6:	85 c0                	test   %eax,%eax
    89e8:	74 9b                	je     8985 <change_protection+0xe5>
    89ea:	31 d2                	xor    %edx,%edx
    89ec:	48 8d 3d 8d a7 00 00 	lea    0xa78d(%rip),%rdi        # 13180 <g_global_data>
    89f3:	eb 10                	jmp    8a05 <change_protection+0x165>
    89f5:	0f 1f 00             	nopl   (%rax)
    89f8:	8b 05 da a8 00 00    	mov    0xa8da(%rip),%eax        # 132d8 <g_global_data+0x158>
    89fe:	83 c2 01             	add    $0x1,%edx
    8a01:	39 c2                	cmp    %eax,%edx
    8a03:	73 5b                	jae    8a60 <change_protection+0x1c0>
    8a05:	89 d1                	mov    %edx,%ecx
    8a07:	48 8d 41 0b          	lea    0xb(%rcx),%rax
    8a0b:	48 c1 e0 05          	shl    $0x5,%rax
    8a0f:	48 01 f8             	add    %rdi,%rax
    8a12:	0f b7 30             	movzwl (%rax),%esi
    8a15:	66 83 fe 14          	cmp    $0x14,%si
    8a19:	75 dd                	jne    89f8 <change_protection+0x158>
    8a1b:	48 c1 e1 05          	shl    $0x5,%rcx
    8a1f:	48 01 f9             	add    %rdi,%rcx
    8a22:	48 8b 89 78 01 00 00 	mov    0x178(%rcx),%rcx
    8a29:	48 81 f9 07 02 00 00 	cmp    $0x207,%rcx
    8a30:	75 c6                	jne    89f8 <change_protection+0x158>
    8a32:	8b 48 04             	mov    0x4(%rax),%ecx
    8a35:	85 c9                	test   %ecx,%ecx
    8a37:	74 bf                	je     89f8 <change_protection+0x158>
    8a39:	8b 70 04             	mov    0x4(%rax),%esi
    8a3c:	48 8b 40 08          	mov    0x8(%rax),%rax
    8a40:	ba 03 00 00 00       	mov    $0x3,%edx
    8a45:	48 c1 e6 0c          	shl    $0xc,%rsi
    8a49:	49 8d 7c 05 00       	lea    0x0(%r13,%rax,1),%rdi
    8a4e:	e8 dd 2f 00 00       	call   ba30 <mm_modify_permissions>
    8a53:	85 c0                	test   %eax,%eax
    8a55:	0f 95 c0             	setne  %al
    8a58:	0f b6 c0             	movzbl %al,%eax
    8a5b:	e9 25 ff ff ff       	jmp    8985 <change_protection+0xe5>
    8a60:	5b                   	pop    %rbx
    8a61:	31 c0                	xor    %eax,%eax
    8a63:	5d                   	pop    %rbp
    8a64:	41 5c                	pop    %r12
    8a66:	41 5d                	pop    %r13
    8a68:	41 5e                	pop    %r14
    8a6a:	c3                   	ret    
    8a6b:	b8 01 00 00 00       	mov    $0x1,%eax
    8a70:	c3                   	ret    
    8a71:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8a78:	00 00 00 
    8a7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000008a80 <init_segment_emas>:
    8a80:	f3 0f 1e fa          	endbr64 
    8a84:	48 85 ff             	test   %rdi,%rdi
    8a87:	0f 84 e8 00 00 00    	je     8b75 <init_segment_emas+0xf5>
    8a8d:	41 55                	push   %r13
    8a8f:	49 89 fd             	mov    %rdi,%r13
    8a92:	41 54                	push   %r12
    8a94:	55                   	push   %rbp
    8a95:	53                   	push   %rbx
    8a96:	48 83 ec 08          	sub    $0x8,%rsp
    8a9a:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    8aa0:	0f 85 ae 00 00 00    	jne    8b54 <init_segment_emas+0xd4>
    8aa6:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    8aab:	0f 85 a3 00 00 00    	jne    8b54 <init_segment_emas+0xd4>
    8ab1:	48 89 fb             	mov    %rdi,%rbx
    8ab4:	48 03 5f 20          	add    0x20(%rdi),%rbx
    8ab8:	0f 84 96 00 00 00    	je     8b54 <init_segment_emas+0xd4>
    8abe:	0f b7 57 38          	movzwl 0x38(%rdi),%edx
    8ac2:	48 89 de             	mov    %rbx,%rsi
    8ac5:	45 31 e4             	xor    %r12d,%r12d
    8ac8:	89 d1                	mov    %edx,%ecx
    8aca:	e8 d1 f6 ff ff       	call   81a0 <has_text_relo>
    8acf:	89 c5                	mov    %eax,%ebp
    8ad1:	66 85 c9             	test   %cx,%cx
    8ad4:	75 1c                	jne    8af2 <init_segment_emas+0x72>
    8ad6:	e9 8d 00 00 00       	jmp    8b68 <init_segment_emas+0xe8>
    8adb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8ae0:	41 0f b7 45 38       	movzwl 0x38(%r13),%eax
    8ae5:	41 83 c4 01          	add    $0x1,%r12d
    8ae9:	48 83 c3 38          	add    $0x38,%rbx
    8aed:	41 39 c4             	cmp    %eax,%r12d
    8af0:	73 76                	jae    8b68 <init_segment_emas+0xe8>
    8af2:	83 3b 01             	cmpl   $0x1,(%rbx)
    8af5:	75 e9                	jne    8ae0 <init_segment_emas+0x60>
    8af7:	8b 4b 04             	mov    0x4(%rbx),%ecx
    8afa:	48 8b 73 10          	mov    0x10(%rbx),%rsi
    8afe:	89 c8                	mov    %ecx,%eax
    8b00:	48 89 f2             	mov    %rsi,%rdx
    8b03:	48 03 73 28          	add    0x28(%rbx),%rsi
    8b07:	83 e0 02             	and    $0x2,%eax
    8b0a:	48 81 c6 ff 0f 00 00 	add    $0xfff,%rsi
    8b11:	48 81 e2 00 f0 ff ff 	and    $0xfffffffffffff000,%rdx
    8b18:	09 e8                	or     %ebp,%eax
    8b1a:	48 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%rsi
    8b21:	49 8d 7c 15 00       	lea    0x0(%r13,%rdx,1),%rdi
    8b26:	83 f8 01             	cmp    $0x1,%eax
    8b29:	48 19 c0             	sbb    %rax,%rax
    8b2c:	83 e1 01             	and    $0x1,%ecx
    8b2f:	48 29 d6             	sub    %rdx,%rsi
    8b32:	45 31 c9             	xor    %r9d,%r9d
    8b35:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    8b39:	48 c1 e1 02          	shl    $0x2,%rcx
    8b3d:	45 31 c0             	xor    %r8d,%r8d
    8b40:	ba 80 02 00 00       	mov    $0x280,%edx
    8b45:	48 83 c0 03          	add    $0x3,%rax
    8b49:	09 c1                	or     %eax,%ecx
    8b4b:	e8 70 2d 00 00       	call   b8c0 <mm_init_ema>
    8b50:	85 c0                	test   %eax,%eax
    8b52:	74 8c                	je     8ae0 <init_segment_emas+0x60>
    8b54:	48 83 c4 08          	add    $0x8,%rsp
    8b58:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8b5d:	5b                   	pop    %rbx
    8b5e:	5d                   	pop    %rbp
    8b5f:	41 5c                	pop    %r12
    8b61:	41 5d                	pop    %r13
    8b63:	c3                   	ret    
    8b64:	0f 1f 40 00          	nopl   0x0(%rax)
    8b68:	48 83 c4 08          	add    $0x8,%rsp
    8b6c:	31 c0                	xor    %eax,%eax
    8b6e:	5b                   	pop    %rbx
    8b6f:	5d                   	pop    %rbp
    8b70:	41 5c                	pop    %r12
    8b72:	41 5d                	pop    %r13
    8b74:	c3                   	ret    
    8b75:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8b7a:	c3                   	ret    
    8b7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000008b80 <__cxa_atexit>:
    8b80:	f3 0f 1e fa          	endbr64 
    8b84:	41 55                	push   %r13
    8b86:	49 89 d5             	mov    %rdx,%r13
    8b89:	41 54                	push   %r12
    8b8b:	49 89 f4             	mov    %rsi,%r12
    8b8e:	55                   	push   %rbp
    8b8f:	48 89 fd             	mov    %rdi,%rbp
    8b92:	53                   	push   %rbx
    8b93:	48 83 ec 18          	sub    $0x18,%rsp
    8b97:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    8b9e:	00 00 
    8ba0:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    8ba5:	31 c0                	xor    %eax,%eax
    8ba7:	48 83 3d f9 15 01 00 	cmpq   $0x0,0x115f9(%rip)        # 1a1a8 <g_exit_function_cookie>
    8bae:	00 
    8baf:	0f 84 8b 00 00 00    	je     8c40 <__cxa_atexit+0xc0>
    8bb5:	31 f6                	xor    %esi,%esi
    8bb7:	48 89 ef             	mov    %rbp,%rdi
    8bba:	e8 c1 cf ff ff       	call   5b80 <sgx_is_within_enclave>
    8bbf:	85 c0                	test   %eax,%eax
    8bc1:	0f 84 a1 00 00 00    	je     8c68 <__cxa_atexit+0xe8>
    8bc7:	bf 20 00 00 00       	mov    $0x20,%edi
    8bcc:	e8 7f 45 00 00       	call   d150 <dlmalloc>
    8bd1:	48 89 c3             	mov    %rax,%rbx
    8bd4:	48 85 c0             	test   %rax,%rax
    8bd7:	0f 84 8b 00 00 00    	je     8c68 <__cxa_atexit+0xe8>
    8bdd:	48 8b 05 c4 15 01 00 	mov    0x115c4(%rip),%rax        # 1a1a8 <g_exit_function_cookie>
    8be4:	4c 89 6b 10          	mov    %r13,0x10(%rbx)
    8be8:	48 31 c5             	xor    %rax,%rbp
    8beb:	49 31 c4             	xor    %rax,%r12
    8bee:	48 89 2b             	mov    %rbp,(%rbx)
    8bf1:	48 8d 2d b8 15 01 00 	lea    0x115b8(%rip),%rbp        # 1a1b0 <g_exit_function_lock>
    8bf8:	4c 89 63 08          	mov    %r12,0x8(%rbx)
    8bfc:	48 89 ef             	mov    %rbp,%rdi
    8bff:	e8 8c 3b 00 00       	call   c790 <sgx_spin_lock>
    8c04:	48 8b 05 ad 15 01 00 	mov    0x115ad(%rip),%rax        # 1a1b8 <g_exit_function>
    8c0b:	48 89 ef             	mov    %rbp,%rdi
    8c0e:	48 89 1d a3 15 01 00 	mov    %rbx,0x115a3(%rip)        # 1a1b8 <g_exit_function>
    8c15:	48 89 43 18          	mov    %rax,0x18(%rbx)
    8c19:	e8 02 3c 00 00       	call   c820 <sgx_spin_unlock>
    8c1e:	31 c0                	xor    %eax,%eax
    8c20:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    8c25:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    8c2c:	00 00 
    8c2e:	75 71                	jne    8ca1 <__cxa_atexit+0x121>
    8c30:	48 83 c4 18          	add    $0x18,%rsp
    8c34:	5b                   	pop    %rbx
    8c35:	5d                   	pop    %rbp
    8c36:	41 5c                	pop    %r12
    8c38:	41 5d                	pop    %r13
    8c3a:	c3                   	ret    
    8c3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8c40:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    8c47:	00 
    8c48:	48 89 e3             	mov    %rsp,%rbx
    8c4b:	eb 0a                	jmp    8c57 <__cxa_atexit+0xd7>
    8c4d:	0f 1f 00             	nopl   (%rax)
    8c50:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
    8c55:	75 19                	jne    8c70 <__cxa_atexit+0xf0>
    8c57:	be 08 00 00 00       	mov    $0x8,%esi
    8c5c:	48 89 df             	mov    %rbx,%rdi
    8c5f:	e8 1c d1 ff ff       	call   5d80 <sgx_read_rand>
    8c64:	85 c0                	test   %eax,%eax
    8c66:	74 e8                	je     8c50 <__cxa_atexit+0xd0>
    8c68:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8c6d:	eb b1                	jmp    8c20 <__cxa_atexit+0xa0>
    8c6f:	90                   	nop
    8c70:	48 8d 1d 39 15 01 00 	lea    0x11539(%rip),%rbx        # 1a1b0 <g_exit_function_lock>
    8c77:	48 89 df             	mov    %rbx,%rdi
    8c7a:	e8 11 3b 00 00       	call   c790 <sgx_spin_lock>
    8c7f:	48 83 3d 21 15 01 00 	cmpq   $0x0,0x11521(%rip)        # 1a1a8 <g_exit_function_cookie>
    8c86:	00 
    8c87:	75 0b                	jne    8c94 <__cxa_atexit+0x114>
    8c89:	48 8b 04 24          	mov    (%rsp),%rax
    8c8d:	48 89 05 14 15 01 00 	mov    %rax,0x11514(%rip)        # 1a1a8 <g_exit_function_cookie>
    8c94:	48 89 df             	mov    %rbx,%rdi
    8c97:	e8 84 3b 00 00       	call   c820 <sgx_spin_unlock>
    8c9c:	e9 14 ff ff ff       	jmp    8bb5 <__cxa_atexit+0x35>
    8ca1:	e8 da 7d 00 00       	call   10a80 <__stack_chk_fail>
    8ca6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8cad:	00 00 00 

0000000000008cb0 <atexit>:
    8cb0:	f3 0f 1e fa          	endbr64 
    8cb4:	48 8b 15 95 f5 00 00 	mov    0xf595(%rip),%rdx        # 18250 <__dso_handle>
    8cbb:	31 f6                	xor    %esi,%esi
    8cbd:	e9 be fe ff ff       	jmp    8b80 <__cxa_atexit>
    8cc2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8cc9:	00 00 00 
    8ccc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000008cd0 <init_global_object>:
    8cd0:	f3 0f 1e fa          	endbr64 
    8cd4:	55                   	push   %rbp
    8cd5:	53                   	push   %rbx
    8cd6:	48 83 ec 28          	sub    $0x28,%rsp
    8cda:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    8ce1:	00 00 
    8ce3:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    8ce8:	31 c0                	xor    %eax,%eax
    8cea:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    8cf1:	00 00 
    8cf3:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    8cfa:	00 00 
    8cfc:	e8 f7 93 00 00       	call   120f8 <get_enclave_base>
    8d01:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    8d06:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
    8d0b:	48 89 c7             	mov    %rax,%rdi
    8d0e:	48 89 c3             	mov    %rax,%rbx
    8d11:	e8 aa f9 ff ff       	call   86c0 <elf_get_init_array>
    8d16:	85 c0                	test   %eax,%eax
    8d18:	75 31                	jne    8d4b <init_global_object+0x7b>
    8d1a:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    8d1f:	48 85 c0             	test   %rax,%rax
    8d22:	74 27                	je     8d4b <init_global_object+0x7b>
    8d24:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
    8d29:	48 85 ed             	test   %rbp,%rbp
    8d2c:	74 1d                	je     8d4b <init_global_object+0x7b>
    8d2e:	48 01 c3             	add    %rax,%rbx
    8d31:	48 83 e5 f8          	and    $0xfffffffffffffff8,%rbp
    8d35:	48 01 dd             	add    %rbx,%rbp
    8d38:	48 39 eb             	cmp    %rbp,%rbx
    8d3b:	73 0e                	jae    8d4b <init_global_object+0x7b>
    8d3d:	0f 1f 00             	nopl   (%rax)
    8d40:	ff 13                	call   *(%rbx)
    8d42:	48 83 c3 08          	add    $0x8,%rbx
    8d46:	48 39 eb             	cmp    %rbp,%rbx
    8d49:	72 f5                	jb     8d40 <init_global_object+0x70>
    8d4b:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    8d50:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    8d57:	00 00 
    8d59:	75 07                	jne    8d62 <init_global_object+0x92>
    8d5b:	48 83 c4 28          	add    $0x28,%rsp
    8d5f:	5b                   	pop    %rbx
    8d60:	5d                   	pop    %rbp
    8d61:	c3                   	ret    
    8d62:	e8 19 7d 00 00       	call   10a80 <__stack_chk_fail>
    8d67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    8d6e:	00 00 

0000000000008d70 <uninit_global_object>:
    8d70:	f3 0f 1e fa          	endbr64 
    8d74:	55                   	push   %rbp
    8d75:	53                   	push   %rbx
    8d76:	48 83 ec 28          	sub    $0x28,%rsp
    8d7a:	48 8b 1d 37 14 01 00 	mov    0x11437(%rip),%rbx        # 1a1b8 <g_exit_function>
    8d81:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    8d88:	00 00 
    8d8a:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    8d8f:	31 c0                	xor    %eax,%eax
    8d91:	48 c7 05 1c 14 01 00 	movq   $0x0,0x1141c(%rip)        # 1a1b8 <g_exit_function>
    8d98:	00 00 00 00 
    8d9c:	48 85 db             	test   %rbx,%rbx
    8d9f:	74 2b                	je     8dcc <uninit_global_object+0x5c>
    8da1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8da8:	48 8b 05 f9 13 01 00 	mov    0x113f9(%rip),%rax        # 1a1a8 <g_exit_function_cookie>
    8daf:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    8db3:	48 31 c7             	xor    %rax,%rdi
    8db6:	48 33 03             	xor    (%rbx),%rax
    8db9:	ff d0                	call   *%rax
    8dbb:	48 89 df             	mov    %rbx,%rdi
    8dbe:	48 8b 5b 18          	mov    0x18(%rbx),%rbx
    8dc2:	e8 79 61 00 00       	call   ef40 <dlfree>
    8dc7:	48 85 db             	test   %rbx,%rbx
    8dca:	75 dc                	jne    8da8 <uninit_global_object+0x38>
    8dcc:	e8 27 93 00 00       	call   120f8 <get_enclave_base>
    8dd1:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    8dd6:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
    8ddb:	48 89 c7             	mov    %rax,%rdi
    8dde:	48 89 c5             	mov    %rax,%rbp
    8de1:	e8 ca f9 ff ff       	call   87b0 <elf_get_uninit_array>
    8de6:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    8deb:	48 85 d2             	test   %rdx,%rdx
    8dee:	74 2b                	je     8e1b <uninit_global_object+0xab>
    8df0:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    8df5:	48 85 c0             	test   %rax,%rax
    8df8:	74 21                	je     8e1b <uninit_global_object+0xab>
    8dfa:	48 01 d5             	add    %rdx,%rbp
    8dfd:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    8e01:	48 8d 5c 05 f8       	lea    -0x8(%rbp,%rax,1),%rbx
    8e06:	48 39 eb             	cmp    %rbp,%rbx
    8e09:	72 10                	jb     8e1b <uninit_global_object+0xab>
    8e0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8e10:	ff 13                	call   *(%rbx)
    8e12:	48 83 eb 08          	sub    $0x8,%rbx
    8e16:	48 39 eb             	cmp    %rbp,%rbx
    8e19:	73 f5                	jae    8e10 <uninit_global_object+0xa0>
    8e1b:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    8e20:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    8e27:	00 00 
    8e29:	75 07                	jne    8e32 <uninit_global_object+0xc2>
    8e2b:	48 83 c4 28          	add    $0x28,%rsp
    8e2f:	5b                   	pop    %rbx
    8e30:	5d                   	pop    %rbp
    8e31:	c3                   	ret    
    8e32:	e8 49 7c 00 00       	call   10a80 <__stack_chk_fail>
    8e37:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    8e3e:	00 00 

0000000000008e40 <__tls_get_addr>:
    8e40:	f3 0f 1e fa          	endbr64 
    8e44:	53                   	push   %rbx
    8e45:	48 89 fb             	mov    %rdi,%rbx
    8e48:	e8 f6 92 00 00       	call   12143 <get_thread_data>
    8e4d:	48 8b 40 68          	mov    0x68(%rax),%rax
    8e51:	48 03 43 08          	add    0x8(%rbx),%rax
    8e55:	5b                   	pop    %rbx
    8e56:	c3                   	ret    
    8e57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    8e5e:	00 00 

0000000000008e60 <bit_array_new>:
    8e60:	f3 0f 1e fa          	endbr64 
    8e64:	41 54                	push   %r12
    8e66:	55                   	push   %rbp
    8e67:	53                   	push   %rbx
    8e68:	48 85 ff             	test   %rdi,%rdi
    8e6b:	74 63                	je     8ed0 <bit_array_new+0x70>
    8e6d:	48 8d 47 07          	lea    0x7(%rdi),%rax
    8e71:	48 89 fb             	mov    %rdi,%rbx
    8e74:	48 89 c2             	mov    %rax,%rdx
    8e77:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    8e7b:	48 39 fa             	cmp    %rdi,%rdx
    8e7e:	72 50                	jb     8ed0 <bit_array_new+0x70>
    8e80:	48 c1 e8 03          	shr    $0x3,%rax
    8e84:	bf 18 00 00 00       	mov    $0x18,%edi
    8e89:	49 89 c4             	mov    %rax,%r12
    8e8c:	e8 af 25 00 00       	call   b440 <emalloc>
    8e91:	48 89 c5             	mov    %rax,%rbp
    8e94:	48 85 c0             	test   %rax,%rax
    8e97:	74 37                	je     8ed0 <bit_array_new+0x70>
    8e99:	4c 89 20             	mov    %r12,(%rax)
    8e9c:	4c 89 e7             	mov    %r12,%rdi
    8e9f:	48 89 58 08          	mov    %rbx,0x8(%rax)
    8ea3:	e8 98 25 00 00       	call   b440 <emalloc>
    8ea8:	48 89 45 10          	mov    %rax,0x10(%rbp)
    8eac:	48 85 c0             	test   %rax,%rax
    8eaf:	74 0f                	je     8ec0 <bit_array_new+0x60>
    8eb1:	48 89 e8             	mov    %rbp,%rax
    8eb4:	5b                   	pop    %rbx
    8eb5:	5d                   	pop    %rbp
    8eb6:	41 5c                	pop    %r12
    8eb8:	c3                   	ret    
    8eb9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8ec0:	48 89 ef             	mov    %rbp,%rdi
    8ec3:	e8 f8 27 00 00       	call   b6c0 <efree>
    8ec8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    8ecf:	00 
    8ed0:	31 ed                	xor    %ebp,%ebp
    8ed2:	eb dd                	jmp    8eb1 <bit_array_new+0x51>
    8ed4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8edb:	00 00 00 
    8ede:	66 90                	xchg   %ax,%ax

0000000000008ee0 <bit_array_new_set>:
    8ee0:	f3 0f 1e fa          	endbr64 
    8ee4:	53                   	push   %rbx
    8ee5:	e8 76 ff ff ff       	call   8e60 <bit_array_new>
    8eea:	48 89 c3             	mov    %rax,%rbx
    8eed:	48 85 c0             	test   %rax,%rax
    8ef0:	74 11                	je     8f03 <bit_array_new_set+0x23>
    8ef2:	48 8b 10             	mov    (%rax),%rdx
    8ef5:	48 8b 78 10          	mov    0x10(%rax),%rdi
    8ef9:	be ff 00 00 00       	mov    $0xff,%esi
    8efe:	e8 2d 7a 00 00       	call   10930 <memset>
    8f03:	48 89 d8             	mov    %rbx,%rax
    8f06:	5b                   	pop    %rbx
    8f07:	c3                   	ret    
    8f08:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    8f0f:	00 

0000000000008f10 <bit_array_new_reset>:
    8f10:	f3 0f 1e fa          	endbr64 
    8f14:	53                   	push   %rbx
    8f15:	e8 46 ff ff ff       	call   8e60 <bit_array_new>
    8f1a:	48 89 c3             	mov    %rax,%rbx
    8f1d:	48 85 c0             	test   %rax,%rax
    8f20:	74 0e                	je     8f30 <bit_array_new_reset+0x20>
    8f22:	48 8b 10             	mov    (%rax),%rdx
    8f25:	48 8b 78 10          	mov    0x10(%rax),%rdi
    8f29:	31 f6                	xor    %esi,%esi
    8f2b:	e8 00 7a 00 00       	call   10930 <memset>
    8f30:	48 89 d8             	mov    %rbx,%rax
    8f33:	5b                   	pop    %rbx
    8f34:	c3                   	ret    
    8f35:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8f3c:	00 00 00 
    8f3f:	90                   	nop

0000000000008f40 <bit_array_delete>:
    8f40:	f3 0f 1e fa          	endbr64 
    8f44:	53                   	push   %rbx
    8f45:	48 89 fb             	mov    %rdi,%rbx
    8f48:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    8f4c:	e8 6f 27 00 00       	call   b6c0 <efree>
    8f51:	48 89 df             	mov    %rbx,%rdi
    8f54:	5b                   	pop    %rbx
    8f55:	e9 66 27 00 00       	jmp    b6c0 <efree>
    8f5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000008f60 <bit_array_test>:
    8f60:	f3 0f 1e fa          	endbr64 
    8f64:	48 89 f1             	mov    %rsi,%rcx
    8f67:	48 89 f2             	mov    %rsi,%rdx
    8f6a:	48 8b 77 10          	mov    0x10(%rdi),%rsi
    8f6e:	b8 01 00 00 00       	mov    $0x1,%eax
    8f73:	83 e1 07             	and    $0x7,%ecx
    8f76:	48 c1 ea 03          	shr    $0x3,%rdx
    8f7a:	d3 e0                	shl    %cl,%eax
    8f7c:	84 04 16             	test   %al,(%rsi,%rdx,1)
    8f7f:	0f 95 c0             	setne  %al
    8f82:	c3                   	ret    
    8f83:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8f8a:	00 00 00 
    8f8d:	0f 1f 00             	nopl   (%rax)

0000000000008f90 <set_mask>:
    8f90:	f3 0f 1e fa          	endbr64 
    8f94:	89 f1                	mov    %esi,%ecx
    8f96:	b8 01 00 00 00       	mov    $0x1,%eax
    8f9b:	d3 e0                	shl    %cl,%eax
    8f9d:	89 f9                	mov    %edi,%ecx
    8f9f:	83 e8 01             	sub    $0x1,%eax
    8fa2:	d3 e0                	shl    %cl,%eax
    8fa4:	c3                   	ret    
    8fa5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8fac:	00 00 00 
    8faf:	90                   	nop

0000000000008fb0 <bit_array_test_range>:
    8fb0:	f3 0f 1e fa          	endbr64 
    8fb4:	48 89 f0             	mov    %rsi,%rax
    8fb7:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    8fbb:	83 e6 07             	and    $0x7,%esi
    8fbe:	b9 08 00 00 00       	mov    $0x8,%ecx
    8fc3:	48 c1 e8 03          	shr    $0x3,%rax
    8fc7:	48 29 f1             	sub    %rsi,%rcx
    8fca:	44 0f b6 0c 07       	movzbl (%rdi,%rax,1),%r9d
    8fcf:	48 39 d1             	cmp    %rdx,%rcx
    8fd2:	72 24                	jb     8ff8 <bit_array_test_range+0x48>
    8fd4:	89 d1                	mov    %edx,%ecx
    8fd6:	b8 01 00 00 00       	mov    $0x1,%eax
    8fdb:	41 f7 d1             	not    %r9d
    8fde:	d3 e0                	shl    %cl,%eax
    8fe0:	89 f1                	mov    %esi,%ecx
    8fe2:	83 e8 01             	sub    $0x1,%eax
    8fe5:	d3 e0                	shl    %cl,%eax
    8fe7:	41 84 c1             	test   %al,%r9b
    8fea:	41 0f 94 c2          	sete   %r10b
    8fee:	44 89 d0             	mov    %r10d,%eax
    8ff1:	c3                   	ret    
    8ff2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8ff8:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    8ffe:	41 f7 d1             	not    %r9d
    9001:	45 31 d2             	xor    %r10d,%r10d
    9004:	41 d3 e0             	shl    %cl,%r8d
    9007:	89 f1                	mov    %esi,%ecx
    9009:	41 83 e8 01          	sub    $0x1,%r8d
    900d:	41 d3 e0             	shl    %cl,%r8d
    9010:	45 84 c1             	test   %r8b,%r9b
    9013:	75 d9                	jne    8fee <bit_array_test_range+0x3e>
    9015:	48 8d 4c 16 f8       	lea    -0x8(%rsi,%rdx,1),%rcx
    901a:	48 83 f9 07          	cmp    $0x7,%rcx
    901e:	77 12                	ja     9032 <bit_array_test_range+0x82>
    9020:	eb 26                	jmp    9048 <bit_array_test_range+0x98>
    9022:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9028:	48 83 e9 08          	sub    $0x8,%rcx
    902c:	48 83 f9 07          	cmp    $0x7,%rcx
    9030:	76 16                	jbe    9048 <bit_array_test_range+0x98>
    9032:	48 83 c0 01          	add    $0x1,%rax
    9036:	80 3c 07 ff          	cmpb   $0xff,(%rdi,%rax,1)
    903a:	74 ec                	je     9028 <bit_array_test_range+0x78>
    903c:	45 31 d2             	xor    %r10d,%r10d
    903f:	44 89 d0             	mov    %r10d,%eax
    9042:	c3                   	ret    
    9043:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9048:	41 ba 01 00 00 00    	mov    $0x1,%r10d
    904e:	48 85 c9             	test   %rcx,%rcx
    9051:	74 9b                	je     8fee <bit_array_test_range+0x3e>
    9053:	ba 01 00 00 00       	mov    $0x1,%edx
    9058:	0f b6 74 07 01       	movzbl 0x1(%rdi,%rax,1),%esi
    905d:	d3 e2                	shl    %cl,%edx
    905f:	83 ea 01             	sub    $0x1,%edx
    9062:	21 d6                	and    %edx,%esi
    9064:	40 38 d6             	cmp    %dl,%sil
    9067:	41 0f 94 c2          	sete   %r10b
    906b:	eb 81                	jmp    8fee <bit_array_test_range+0x3e>
    906d:	0f 1f 00             	nopl   (%rax)

0000000000009070 <bit_array_test_range_any>:
    9070:	f3 0f 1e fa          	endbr64 
    9074:	49 89 f8             	mov    %rdi,%r8
    9077:	48 89 f0             	mov    %rsi,%rax
    907a:	48 89 d7             	mov    %rdx,%rdi
    907d:	83 e6 07             	and    $0x7,%esi
    9080:	49 8b 50 10          	mov    0x10(%r8),%rdx
    9084:	b9 08 00 00 00       	mov    $0x8,%ecx
    9089:	48 c1 e8 03          	shr    $0x3,%rax
    908d:	48 29 f1             	sub    %rsi,%rcx
    9090:	44 0f b6 0c 02       	movzbl (%rdx,%rax,1),%r9d
    9095:	48 39 f9             	cmp    %rdi,%rcx
    9098:	72 1e                	jb     90b8 <bit_array_test_range_any+0x48>
    909a:	89 f9                	mov    %edi,%ecx
    909c:	b8 01 00 00 00       	mov    $0x1,%eax
    90a1:	d3 e0                	shl    %cl,%eax
    90a3:	89 f1                	mov    %esi,%ecx
    90a5:	83 e8 01             	sub    $0x1,%eax
    90a8:	d3 e0                	shl    %cl,%eax
    90aa:	41 84 c1             	test   %al,%r9b
    90ad:	41 0f 95 c2          	setne  %r10b
    90b1:	44 89 d0             	mov    %r10d,%eax
    90b4:	c3                   	ret    
    90b5:	0f 1f 00             	nopl   (%rax)
    90b8:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    90be:	41 ba 01 00 00 00    	mov    $0x1,%r10d
    90c4:	41 d3 e0             	shl    %cl,%r8d
    90c7:	89 f1                	mov    %esi,%ecx
    90c9:	41 83 e8 01          	sub    $0x1,%r8d
    90cd:	41 d3 e0             	shl    %cl,%r8d
    90d0:	45 84 c1             	test   %r8b,%r9b
    90d3:	75 dc                	jne    90b1 <bit_array_test_range_any+0x41>
    90d5:	48 8d 4c 3e f8       	lea    -0x8(%rsi,%rdi,1),%rcx
    90da:	48 83 f9 07          	cmp    $0x7,%rcx
    90de:	77 12                	ja     90f2 <bit_array_test_range_any+0x82>
    90e0:	eb 2e                	jmp    9110 <bit_array_test_range_any+0xa0>
    90e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    90e8:	48 83 e9 08          	sub    $0x8,%rcx
    90ec:	48 83 f9 07          	cmp    $0x7,%rcx
    90f0:	76 1e                	jbe    9110 <bit_array_test_range_any+0xa0>
    90f2:	48 83 c0 01          	add    $0x1,%rax
    90f6:	80 3c 02 00          	cmpb   $0x0,(%rdx,%rax,1)
    90fa:	74 ec                	je     90e8 <bit_array_test_range_any+0x78>
    90fc:	41 ba 01 00 00 00    	mov    $0x1,%r10d
    9102:	44 89 d0             	mov    %r10d,%eax
    9105:	c3                   	ret    
    9106:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    910d:	00 00 00 
    9110:	45 31 d2             	xor    %r10d,%r10d
    9113:	48 85 c9             	test   %rcx,%rcx
    9116:	74 99                	je     90b1 <bit_array_test_range_any+0x41>
    9118:	be 01 00 00 00       	mov    $0x1,%esi
    911d:	d3 e6                	shl    %cl,%esi
    911f:	83 ee 01             	sub    $0x1,%esi
    9122:	40 84 74 02 01       	test   %sil,0x1(%rdx,%rax,1)
    9127:	41 0f 95 c2          	setne  %r10b
    912b:	eb 84                	jmp    90b1 <bit_array_test_range_any+0x41>
    912d:	0f 1f 00             	nopl   (%rax)

0000000000009130 <bit_array_set>:
    9130:	f3 0f 1e fa          	endbr64 
    9134:	48 89 f1             	mov    %rsi,%rcx
    9137:	48 89 f0             	mov    %rsi,%rax
    913a:	ba 01 00 00 00       	mov    $0x1,%edx
    913f:	48 c1 e8 03          	shr    $0x3,%rax
    9143:	83 e1 07             	and    $0x7,%ecx
    9146:	48 03 47 10          	add    0x10(%rdi),%rax
    914a:	d3 e2                	shl    %cl,%edx
    914c:	08 10                	or     %dl,(%rax)
    914e:	c3                   	ret    
    914f:	90                   	nop

0000000000009150 <bit_array_set_range>:
    9150:	f3 0f 1e fa          	endbr64 
    9154:	48 89 f0             	mov    %rsi,%rax
    9157:	4c 8b 4f 10          	mov    0x10(%rdi),%r9
    915b:	83 e6 07             	and    $0x7,%esi
    915e:	b9 08 00 00 00       	mov    $0x8,%ecx
    9163:	48 c1 e8 03          	shr    $0x3,%rax
    9167:	48 29 f1             	sub    %rsi,%rcx
    916a:	49 89 d0             	mov    %rdx,%r8
    916d:	49 01 c1             	add    %rax,%r9
    9170:	45 0f b6 11          	movzbl (%r9),%r10d
    9174:	48 39 d1             	cmp    %rdx,%rcx
    9177:	73 67                	jae    91e0 <bit_array_set_range+0x90>
    9179:	ba 01 00 00 00       	mov    $0x1,%edx
    917e:	d3 e2                	shl    %cl,%edx
    9180:	89 f1                	mov    %esi,%ecx
    9182:	83 ea 01             	sub    $0x1,%edx
    9185:	d3 e2                	shl    %cl,%edx
    9187:	4a 8d 4c 06 f8       	lea    -0x8(%rsi,%r8,1),%rcx
    918c:	41 09 d2             	or     %edx,%r10d
    918f:	45 88 11             	mov    %r10b,(%r9)
    9192:	48 83 f9 07          	cmp    $0x7,%rcx
    9196:	76 68                	jbe    9200 <bit_array_set_range+0xb0>
    9198:	48 8d 51 f8          	lea    -0x8(%rcx),%rdx
    919c:	48 83 c0 01          	add    $0x1,%rax
    91a0:	48 c1 ea 03          	shr    $0x3,%rdx
    91a4:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
    91a8:	eb 0a                	jmp    91b4 <bit_array_set_range+0x64>
    91aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    91b0:	48 83 c0 01          	add    $0x1,%rax
    91b4:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    91b8:	c6 04 02 ff          	movb   $0xff,(%rdx,%rax,1)
    91bc:	48 39 f0             	cmp    %rsi,%rax
    91bf:	75 ef                	jne    91b0 <bit_array_set_range+0x60>
    91c1:	83 e1 07             	and    $0x7,%ecx
    91c4:	48 85 c9             	test   %rcx,%rcx
    91c7:	74 12                	je     91db <bit_array_set_range+0x8b>
    91c9:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    91cd:	b8 01 00 00 00       	mov    $0x1,%eax
    91d2:	d3 e0                	shl    %cl,%eax
    91d4:	83 e8 01             	sub    $0x1,%eax
    91d7:	08 44 32 01          	or     %al,0x1(%rdx,%rsi,1)
    91db:	c3                   	ret    
    91dc:	0f 1f 40 00          	nopl   0x0(%rax)
    91e0:	89 d1                	mov    %edx,%ecx
    91e2:	b8 01 00 00 00       	mov    $0x1,%eax
    91e7:	d3 e0                	shl    %cl,%eax
    91e9:	89 f1                	mov    %esi,%ecx
    91eb:	83 e8 01             	sub    $0x1,%eax
    91ee:	d3 e0                	shl    %cl,%eax
    91f0:	44 09 d0             	or     %r10d,%eax
    91f3:	41 88 01             	mov    %al,(%r9)
    91f6:	c3                   	ret    
    91f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    91fe:	00 00 
    9200:	48 89 c6             	mov    %rax,%rsi
    9203:	eb bf                	jmp    91c4 <bit_array_set_range+0x74>
    9205:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    920c:	00 00 00 
    920f:	90                   	nop

0000000000009210 <bit_array_set_all>:
    9210:	f3 0f 1e fa          	endbr64 
    9214:	48 8b 17             	mov    (%rdi),%rdx
    9217:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    921b:	be ff 00 00 00       	mov    $0xff,%esi
    9220:	e9 0b 77 00 00       	jmp    10930 <memset>
    9225:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    922c:	00 00 00 
    922f:	90                   	nop

0000000000009230 <clear_mask>:
    9230:	f3 0f 1e fa          	endbr64 
    9234:	89 f1                	mov    %esi,%ecx
    9236:	b8 01 00 00 00       	mov    $0x1,%eax
    923b:	d3 e0                	shl    %cl,%eax
    923d:	89 f9                	mov    %edi,%ecx
    923f:	83 e8 01             	sub    $0x1,%eax
    9242:	d3 e0                	shl    %cl,%eax
    9244:	f7 d0                	not    %eax
    9246:	c3                   	ret    
    9247:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    924e:	00 00 

0000000000009250 <bit_array_reset_range>:
    9250:	f3 0f 1e fa          	endbr64 
    9254:	48 89 f0             	mov    %rsi,%rax
    9257:	4c 8b 4f 10          	mov    0x10(%rdi),%r9
    925b:	83 e6 07             	and    $0x7,%esi
    925e:	b9 08 00 00 00       	mov    $0x8,%ecx
    9263:	48 c1 e8 03          	shr    $0x3,%rax
    9267:	48 29 f1             	sub    %rsi,%rcx
    926a:	49 89 d0             	mov    %rdx,%r8
    926d:	49 01 c1             	add    %rax,%r9
    9270:	45 0f b6 11          	movzbl (%r9),%r10d
    9274:	48 39 d1             	cmp    %rdx,%rcx
    9277:	73 67                	jae    92e0 <bit_array_reset_range+0x90>
    9279:	ba 01 00 00 00       	mov    $0x1,%edx
    927e:	d3 e2                	shl    %cl,%edx
    9280:	89 f1                	mov    %esi,%ecx
    9282:	83 ea 01             	sub    $0x1,%edx
    9285:	d3 e2                	shl    %cl,%edx
    9287:	4a 8d 4c 06 f8       	lea    -0x8(%rsi,%r8,1),%rcx
    928c:	f7 d2                	not    %edx
    928e:	44 21 d2             	and    %r10d,%edx
    9291:	41 88 11             	mov    %dl,(%r9)
    9294:	48 83 f9 07          	cmp    $0x7,%rcx
    9298:	76 66                	jbe    9300 <bit_array_reset_range+0xb0>
    929a:	48 8d 51 f8          	lea    -0x8(%rcx),%rdx
    929e:	48 83 c0 01          	add    $0x1,%rax
    92a2:	48 c1 ea 03          	shr    $0x3,%rdx
    92a6:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
    92aa:	eb 08                	jmp    92b4 <bit_array_reset_range+0x64>
    92ac:	0f 1f 40 00          	nopl   0x0(%rax)
    92b0:	48 83 c0 01          	add    $0x1,%rax
    92b4:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    92b8:	c6 04 02 00          	movb   $0x0,(%rdx,%rax,1)
    92bc:	48 39 f0             	cmp    %rsi,%rax
    92bf:	75 ef                	jne    92b0 <bit_array_reset_range+0x60>
    92c1:	83 e1 07             	and    $0x7,%ecx
    92c4:	48 85 c9             	test   %rcx,%rcx
    92c7:	74 0f                	je     92d8 <bit_array_reset_range+0x88>
    92c9:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    92cd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    92d2:	d3 e0                	shl    %cl,%eax
    92d4:	20 44 32 01          	and    %al,0x1(%rdx,%rsi,1)
    92d8:	c3                   	ret    
    92d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    92e0:	89 d1                	mov    %edx,%ecx
    92e2:	b8 01 00 00 00       	mov    $0x1,%eax
    92e7:	d3 e0                	shl    %cl,%eax
    92e9:	89 f1                	mov    %esi,%ecx
    92eb:	83 e8 01             	sub    $0x1,%eax
    92ee:	d3 e0                	shl    %cl,%eax
    92f0:	f7 d0                	not    %eax
    92f2:	44 21 d0             	and    %r10d,%eax
    92f5:	41 88 01             	mov    %al,(%r9)
    92f8:	c3                   	ret    
    92f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9300:	48 89 c6             	mov    %rax,%rsi
    9303:	eb bf                	jmp    92c4 <bit_array_reset_range+0x74>
    9305:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    930c:	00 00 00 
    930f:	90                   	nop

0000000000009310 <bit_array_reset_all>:
    9310:	f3 0f 1e fa          	endbr64 
    9314:	48 8b 17             	mov    (%rdi),%rdx
    9317:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    931b:	31 f6                	xor    %esi,%esi
    931d:	e9 0e 76 00 00       	jmp    10930 <memset>
    9322:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    9329:	00 00 00 
    932c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000009330 <bit_array_reattach>:
    9330:	f3 0f 1e fa          	endbr64 
    9334:	41 54                	push   %r12
    9336:	49 89 d4             	mov    %rdx,%r12
    9339:	55                   	push   %rbp
    933a:	48 89 f5             	mov    %rsi,%rbp
    933d:	53                   	push   %rbx
    933e:	48 89 fb             	mov    %rdi,%rbx
    9341:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    9345:	48 85 ff             	test   %rdi,%rdi
    9348:	74 05                	je     934f <bit_array_reattach+0x1f>
    934a:	e8 71 23 00 00       	call   b6c0 <efree>
    934f:	48 8d 45 07          	lea    0x7(%rbp),%rax
    9353:	48 89 6b 08          	mov    %rbp,0x8(%rbx)
    9357:	48 c1 e8 03          	shr    $0x3,%rax
    935b:	4c 89 63 10          	mov    %r12,0x10(%rbx)
    935f:	48 89 03             	mov    %rax,(%rbx)
    9362:	5b                   	pop    %rbx
    9363:	5d                   	pop    %rbp
    9364:	41 5c                	pop    %r12
    9366:	c3                   	ret    
    9367:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    936e:	00 00 

0000000000009370 <bit_array_split>:
    9370:	f3 0f 1e fa          	endbr64 
    9374:	41 57                	push   %r15
    9376:	41 56                	push   %r14
    9378:	41 55                	push   %r13
    937a:	41 54                	push   %r12
    937c:	55                   	push   %rbp
    937d:	53                   	push   %rbx
    937e:	48 89 fb             	mov    %rdi,%rbx
    9381:	48 83 ec 38          	sub    $0x38,%rsp
    9385:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    938a:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    938f:	48 85 f6             	test   %rsi,%rsi
    9392:	0f 84 88 01 00 00    	je     9520 <bit_array_split+0x1b0>
    9398:	4c 8b 77 08          	mov    0x8(%rdi),%r14
    939c:	45 31 e4             	xor    %r12d,%r12d
    939f:	4c 39 f6             	cmp    %r14,%rsi
    93a2:	72 24                	jb     93c8 <bit_array_split+0x58>
    93a4:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    93a9:	48 89 18             	mov    %rbx,(%rax)
    93ac:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    93b1:	4c 89 20             	mov    %r12,(%rax)
    93b4:	31 c0                	xor    %eax,%eax
    93b6:	48 83 c4 38          	add    $0x38,%rsp
    93ba:	5b                   	pop    %rbx
    93bb:	5d                   	pop    %rbp
    93bc:	41 5c                	pop    %r12
    93be:	41 5d                	pop    %r13
    93c0:	41 5e                	pop    %r14
    93c2:	41 5f                	pop    %r15
    93c4:	c3                   	ret    
    93c5:	0f 1f 00             	nopl   (%rax)
    93c8:	48 8d 46 07          	lea    0x7(%rsi),%rax
    93cc:	48 89 f5             	mov    %rsi,%rbp
    93cf:	41 89 f7             	mov    %esi,%r15d
    93d2:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
    93d7:	48 c1 e8 03          	shr    $0x3,%rax
    93db:	49 29 f6             	sub    %rsi,%r14
    93de:	48 c1 ed 03          	shr    $0x3,%rbp
    93e2:	41 83 e7 07          	and    $0x7,%r15d
    93e6:	48 89 c7             	mov    %rax,%rdi
    93e9:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    93ee:	e8 4d 20 00 00       	call   b440 <emalloc>
    93f3:	49 89 c5             	mov    %rax,%r13
    93f6:	48 85 c0             	test   %rax,%rax
    93f9:	0f 84 98 01 00 00    	je     9597 <bit_array_split+0x227>
    93ff:	48 85 ed             	test   %rbp,%rbp
    9402:	0f 84 80 01 00 00    	je     9588 <bit_array_split+0x218>
    9408:	31 c0                	xor    %eax,%eax
    940a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9410:	48 8b 53 10          	mov    0x10(%rbx),%rdx
    9414:	0f b6 14 02          	movzbl (%rdx,%rax,1),%edx
    9418:	41 88 54 05 00       	mov    %dl,0x0(%r13,%rax,1)
    941d:	48 83 c0 01          	add    $0x1,%rax
    9421:	48 39 c5             	cmp    %rax,%rbp
    9424:	75 ea                	jne    9410 <bit_array_split+0xa0>
    9426:	48 89 ea             	mov    %rbp,%rdx
    9429:	45 84 ff             	test   %r15b,%r15b
    942c:	0f 85 fe 00 00 00    	jne    9530 <bit_array_split+0x1c0>
    9432:	4c 89 f7             	mov    %r14,%rdi
    9435:	e8 26 fa ff ff       	call   8e60 <bit_array_new>
    943a:	49 89 c4             	mov    %rax,%r12
    943d:	48 85 c0             	test   %rax,%rax
    9440:	0f 84 49 01 00 00    	je     958f <bit_array_split+0x21f>
    9446:	49 89 ea             	mov    %rbp,%r10
    9449:	31 d2                	xor    %edx,%edx
    944b:	49 83 fe 07          	cmp    $0x7,%r14
    944f:	76 78                	jbe    94c9 <bit_array_split+0x159>
    9451:	49 8d 46 f8          	lea    -0x8(%r14),%rax
    9455:	45 0f b6 df          	movzbl %r15b,%r11d
    9459:	41 b9 08 00 00 00    	mov    $0x8,%r9d
    945f:	31 ff                	xor    %edi,%edi
    9461:	48 c1 e8 03          	shr    $0x3,%rax
    9465:	48 8d 55 01          	lea    0x1(%rbp),%rdx
    9469:	44 88 7c 24 2f       	mov    %r15b,0x2f(%rsp)
    946e:	45 29 d9             	sub    %r11d,%r9d
    9471:	48 89 c6             	mov    %rax,%rsi
    9474:	4c 8d 14 02          	lea    (%rdx,%rax,1),%r10
    9478:	eb 0a                	jmp    9484 <bit_array_split+0x114>
    947a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9480:	48 83 c2 01          	add    $0x1,%rdx
    9484:	4c 8b 43 10          	mov    0x10(%rbx),%r8
    9488:	48 89 e8             	mov    %rbp,%rax
    948b:	44 89 d9             	mov    %r11d,%ecx
    948e:	49 89 ff             	mov    %rdi,%r15
    9491:	48 89 d5             	mov    %rdx,%rbp
    9494:	48 83 c7 01          	add    $0x1,%rdi
    9498:	41 0f b6 04 00       	movzbl (%r8,%rax,1),%eax
    949d:	45 0f b6 04 10       	movzbl (%r8,%rdx,1),%r8d
    94a2:	d3 f8                	sar    %cl,%eax
    94a4:	44 89 c9             	mov    %r9d,%ecx
    94a7:	41 d3 e0             	shl    %cl,%r8d
    94aa:	49 8b 4c 24 10       	mov    0x10(%r12),%rcx
    94af:	44 09 c0             	or     %r8d,%eax
    94b2:	42 88 04 39          	mov    %al,(%rcx,%r15,1)
    94b6:	4c 39 d2             	cmp    %r10,%rdx
    94b9:	75 c5                	jne    9480 <bit_array_split+0x110>
    94bb:	44 0f b6 7c 24 2f    	movzbl 0x2f(%rsp),%r15d
    94c1:	48 8d 56 01          	lea    0x1(%rsi),%rdx
    94c5:	41 83 e6 07          	and    $0x7,%r14d
    94c9:	b8 08 00 00 00       	mov    $0x8,%eax
    94ce:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    94d2:	44 29 f8             	sub    %r15d,%eax
    94d5:	48 0f be c0          	movsbq %al,%rax
    94d9:	4c 39 f0             	cmp    %r14,%rax
    94dc:	72 72                	jb     9550 <bit_array_split+0x1e0>
    94de:	4d 85 f6             	test   %r14,%r14
    94e1:	74 16                	je     94f9 <bit_array_split+0x189>
    94e3:	42 0f b6 04 17       	movzbl (%rdi,%r10,1),%eax
    94e8:	49 8b 74 24 10       	mov    0x10(%r12),%rsi
    94ed:	44 89 f9             	mov    %r15d,%ecx
    94f0:	d3 f8                	sar    %cl,%eax
    94f2:	88 04 16             	mov    %al,(%rsi,%rdx,1)
    94f5:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    94f9:	48 85 ff             	test   %rdi,%rdi
    94fc:	74 05                	je     9503 <bit_array_split+0x193>
    94fe:	e8 bd 21 00 00       	call   b6c0 <efree>
    9503:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    9508:	4c 89 6b 10          	mov    %r13,0x10(%rbx)
    950c:	48 89 03             	mov    %rax,(%rbx)
    950f:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    9514:	48 89 43 08          	mov    %rax,0x8(%rbx)
    9518:	e9 87 fe ff ff       	jmp    93a4 <bit_array_split+0x34>
    951d:	0f 1f 00             	nopl   (%rax)
    9520:	49 89 fc             	mov    %rdi,%r12
    9523:	31 db                	xor    %ebx,%ebx
    9525:	e9 7a fe ff ff       	jmp    93a4 <bit_array_split+0x34>
    952a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9530:	48 8b 73 10          	mov    0x10(%rbx),%rsi
    9534:	b8 01 00 00 00       	mov    $0x1,%eax
    9539:	44 89 f9             	mov    %r15d,%ecx
    953c:	d3 e0                	shl    %cl,%eax
    953e:	83 e8 01             	sub    $0x1,%eax
    9541:	22 04 16             	and    (%rsi,%rdx,1),%al
    9544:	41 88 44 15 00       	mov    %al,0x0(%r13,%rdx,1)
    9549:	e9 e4 fe ff ff       	jmp    9432 <bit_array_split+0xc2>
    954e:	66 90                	xchg   %ax,%ax
    9550:	42 0f b6 44 17 01    	movzbl 0x1(%rdi,%r10,1),%eax
    9556:	45 0f b6 c7          	movzbl %r15b,%r8d
    955a:	b9 08 00 00 00       	mov    $0x8,%ecx
    955f:	42 0f b6 3c 17       	movzbl (%rdi,%r10,1),%edi
    9564:	44 29 c1             	sub    %r8d,%ecx
    9567:	49 8b 74 24 10       	mov    0x10(%r12),%rsi
    956c:	d3 e0                	shl    %cl,%eax
    956e:	44 89 f9             	mov    %r15d,%ecx
    9571:	d3 ff                	sar    %cl,%edi
    9573:	09 f8                	or     %edi,%eax
    9575:	88 04 16             	mov    %al,(%rsi,%rdx,1)
    9578:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    957c:	e9 78 ff ff ff       	jmp    94f9 <bit_array_split+0x189>
    9581:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9588:	31 d2                	xor    %edx,%edx
    958a:	e9 9a fe ff ff       	jmp    9429 <bit_array_split+0xb9>
    958f:	4c 89 ef             	mov    %r13,%rdi
    9592:	e8 29 21 00 00       	call   b6c0 <efree>
    9597:	b8 0c 00 00 00       	mov    $0xc,%eax
    959c:	e9 15 fe ff ff       	jmp    93b6 <bit_array_split+0x46>
    95a1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    95a8:	00 00 00 
    95ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000095b0 <ema_do_uncommit_real>:
    95b0:	55                   	push   %rbp
    95b1:	48 89 e5             	mov    %rsp,%rbp
    95b4:	41 57                	push   %r15
    95b6:	41 56                	push   %r14
    95b8:	41 55                	push   %r13
    95ba:	41 54                	push   %r12
    95bc:	53                   	push   %rbx
    95bd:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    95c1:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
    95c8:	89 4c 24 28          	mov    %ecx,0x28(%rsp)
    95cc:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    95d3:	00 00 
    95d5:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
    95dc:	00 
    95dd:	48 8b 47 18          	mov    0x18(%rdi),%rax
    95e1:	f6 47 10 01          	testb  $0x1,0x10(%rdi)
    95e5:	0f 85 68 01 00 00    	jne    9753 <ema_do_uncommit_real+0x1a3>
    95eb:	25 00 ff 00 00       	and    $0xff00,%eax
    95f0:	66 0f ef c0          	pxor   %xmm0,%xmm0
    95f4:	48 89 fb             	mov    %rdi,%rbx
    95f7:	49 89 f7             	mov    %rsi,%r15
    95fa:	89 44 24 24          	mov    %eax,0x24(%rsp)
    95fe:	8b 44 24 28          	mov    0x28(%rsp),%eax
    9602:	49 89 d4             	mov    %rdx,%r12
    9605:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
    960c:	00 00 
    960e:	80 cc 04             	or     $0x4,%ah
    9611:	0f 11 44 24 48       	movups %xmm0,0x48(%rsp)
    9616:	48 c7 44 24 40 10 04 	movq   $0x410,0x40(%rsp)
    961d:	00 00 
    961f:	89 44 24 2c          	mov    %eax,0x2c(%rsp)
    9623:	0f 11 44 24 58       	movups %xmm0,0x58(%rsp)
    9628:	0f 11 44 24 68       	movups %xmm0,0x68(%rsp)
    962d:	0f 1f 00             	nopl   (%rax)
    9630:	4d 39 e7             	cmp    %r12,%r15
    9633:	72 17                	jb     964c <ema_do_uncommit_real+0x9c>
    9635:	e9 19 01 00 00       	jmp    9753 <ema_do_uncommit_real+0x1a3>
    963a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9640:	49 81 c7 00 10 00 00 	add    $0x1000,%r15
    9647:	4d 39 e7             	cmp    %r12,%r15
    964a:	73 17                	jae    9663 <ema_do_uncommit_real+0xb3>
    964c:	4c 89 fe             	mov    %r15,%rsi
    964f:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    9653:	48 2b 33             	sub    (%rbx),%rsi
    9656:	48 c1 ee 0c          	shr    $0xc,%rsi
    965a:	e8 01 f9 ff ff       	call   8f60 <bit_array_test>
    965f:	84 c0                	test   %al,%al
    9661:	74 dd                	je     9640 <ema_do_uncommit_real+0x90>
    9663:	4c 89 7c 24 38       	mov    %r15,0x38(%rsp)
    9668:	4d 39 fc             	cmp    %r15,%r12
    966b:	0f 84 e2 00 00 00    	je     9753 <ema_do_uncommit_real+0x1a3>
    9671:	49 81 c7 00 10 00 00 	add    $0x1000,%r15
    9678:	4d 39 e7             	cmp    %r12,%r15
    967b:	72 17                	jb     9694 <ema_do_uncommit_real+0xe4>
    967d:	e9 f5 00 00 00       	jmp    9777 <ema_do_uncommit_real+0x1c7>
    9682:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9688:	49 81 c7 00 10 00 00 	add    $0x1000,%r15
    968f:	4d 39 e7             	cmp    %r12,%r15
    9692:	73 17                	jae    96ab <ema_do_uncommit_real+0xfb>
    9694:	4c 89 fe             	mov    %r15,%rsi
    9697:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    969b:	48 2b 33             	sub    (%rbx),%rsi
    969e:	48 c1 ee 0c          	shr    $0xc,%rsi
    96a2:	e8 b9 f8 ff ff       	call   8f60 <bit_array_test>
    96a7:	84 c0                	test   %al,%al
    96a9:	75 dd                	jne    9688 <ema_do_uncommit_real+0xd8>
    96ab:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
    96b0:	4c 89 f8             	mov    %r15,%rax
    96b3:	48 29 c8             	sub    %rcx,%rax
    96b6:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    96bb:	8b 54 24 24          	mov    0x24(%rsp),%edx
    96bf:	8b 44 24 28          	mov    0x28(%rsp),%eax
    96c3:	8b 4c 24 2c          	mov    0x2c(%rsp),%ecx
    96c7:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
    96cc:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
    96d1:	09 c2                	or     %eax,%edx
    96d3:	e8 d8 c1 ff ff       	call   58b0 <sgx_mm_modify_ocall>
    96d8:	85 c0                	test   %eax,%eax
    96da:	75 70                	jne    974c <ema_do_uncommit_real+0x19c>
    96dc:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    96e1:	4c 8d 6c 24 40       	lea    0x40(%rsp),%r13
    96e6:	49 89 c6             	mov    %rax,%r14
    96e9:	4c 39 f8             	cmp    %r15,%rax
    96ec:	73 21                	jae    970f <ema_do_uncommit_real+0x15f>
    96ee:	66 90                	xchg   %ax,%ax
    96f0:	4c 89 f6             	mov    %r14,%rsi
    96f3:	4c 89 ef             	mov    %r13,%rdi
    96f6:	e8 c4 8d 00 00       	call   124bf <do_eaccept>
    96fb:	85 c0                	test   %eax,%eax
    96fd:	0f 85 82 00 00 00    	jne    9785 <ema_do_uncommit_real+0x1d5>
    9703:	49 81 c6 00 10 00 00 	add    $0x1000,%r14
    970a:	4d 39 fe             	cmp    %r15,%r14
    970d:	72 e1                	jb     96f0 <ema_do_uncommit_real+0x140>
    970f:	4c 8b 74 24 30       	mov    0x30(%rsp),%r14
    9714:	4c 8b 6c 24 38       	mov    0x38(%rsp),%r13
    9719:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    971d:	4c 89 f2             	mov    %r14,%rdx
    9720:	4c 89 ee             	mov    %r13,%rsi
    9723:	48 2b 33             	sub    (%rbx),%rsi
    9726:	48 c1 ea 0c          	shr    $0xc,%rdx
    972a:	48 c1 ee 0c          	shr    $0xc,%rsi
    972e:	e8 1d fb ff ff       	call   9250 <bit_array_reset_range>
    9733:	8b 4c 24 2c          	mov    0x2c(%rsp),%ecx
    9737:	4c 89 f6             	mov    %r14,%rsi
    973a:	4c 89 ef             	mov    %r13,%rdi
    973d:	89 ca                	mov    %ecx,%edx
    973f:	e8 6c c1 ff ff       	call   58b0 <sgx_mm_modify_ocall>
    9744:	85 c0                	test   %eax,%eax
    9746:	0f 84 e4 fe ff ff    	je     9630 <ema_do_uncommit_real+0x80>
    974c:	b8 0e 00 00 00       	mov    $0xe,%eax
    9751:	eb 02                	jmp    9755 <ema_do_uncommit_real+0x1a5>
    9753:	31 c0                	xor    %eax,%eax
    9755:	48 8b 94 24 b8 00 00 	mov    0xb8(%rsp),%rdx
    975c:	00 
    975d:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    9764:	00 00 
    9766:	75 22                	jne    978a <ema_do_uncommit_real+0x1da>
    9768:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    976c:	5b                   	pop    %rbx
    976d:	41 5c                	pop    %r12
    976f:	41 5d                	pop    %r13
    9771:	41 5e                	pop    %r14
    9773:	41 5f                	pop    %r15
    9775:	5d                   	pop    %rbp
    9776:	c3                   	ret    
    9777:	48 c7 44 24 30 00 10 	movq   $0x1000,0x30(%rsp)
    977e:	00 00 
    9780:	e9 36 ff ff ff       	jmp    96bb <ema_do_uncommit_real+0x10b>
    9785:	e8 ad 8d 00 00       	call   12537 <abort>
    978a:	e8 f1 72 00 00       	call   10a80 <__stack_chk_fail>
    978f:	90                   	nop

0000000000009790 <get_ema_alloc_flags>:
    9790:	f3 0f 1e fa          	endbr64 
    9794:	8b 47 10             	mov    0x10(%rdi),%eax
    9797:	c3                   	ret    
    9798:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    979f:	00 

00000000000097a0 <get_ema_si_flags>:
    97a0:	f3 0f 1e fa          	endbr64 
    97a4:	48 8b 47 18          	mov    0x18(%rdi),%rax
    97a8:	c3                   	ret    
    97a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000097b0 <ema_fault_handler>:
    97b0:	f3 0f 1e fa          	endbr64 
    97b4:	48 85 f6             	test   %rsi,%rsi
    97b7:	74 07                	je     97c0 <ema_fault_handler+0x10>
    97b9:	48 8b 47 30          	mov    0x30(%rdi),%rax
    97bd:	48 89 06             	mov    %rax,(%rsi)
    97c0:	48 8b 47 28          	mov    0x28(%rdi),%rax
    97c4:	c3                   	ret    
    97c5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    97cc:	00 00 00 
    97cf:	90                   	nop

00000000000097d0 <ema_set_eaccept_full>:
    97d0:	f3 0f 1e fa          	endbr64 
    97d4:	53                   	push   %rbx
    97d5:	48 89 fb             	mov    %rdi,%rbx
    97d8:	48 8b 7f 20          	mov    0x20(%rdi),%rdi
    97dc:	48 85 ff             	test   %rdi,%rdi
    97df:	74 0f                	je     97f0 <ema_set_eaccept_full+0x20>
    97e1:	e8 2a fa ff ff       	call   9210 <bit_array_set_all>
    97e6:	31 c0                	xor    %eax,%eax
    97e8:	5b                   	pop    %rbx
    97e9:	c3                   	ret    
    97ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    97f0:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    97f4:	48 c1 ef 0c          	shr    $0xc,%rdi
    97f8:	e8 e3 f6 ff ff       	call   8ee0 <bit_array_new_set>
    97fd:	48 89 43 20          	mov    %rax,0x20(%rbx)
    9801:	48 85 c0             	test   %rax,%rax
    9804:	75 e0                	jne    97e6 <ema_set_eaccept_full+0x16>
    9806:	b8 0c 00 00 00       	mov    $0xc,%eax
    980b:	5b                   	pop    %rbx
    980c:	c3                   	ret    
    980d:	0f 1f 00             	nopl   (%rax)

0000000000009810 <ema_clear_eaccept_full>:
    9810:	f3 0f 1e fa          	endbr64 
    9814:	53                   	push   %rbx
    9815:	48 89 fb             	mov    %rdi,%rbx
    9818:	48 8b 7f 20          	mov    0x20(%rdi),%rdi
    981c:	48 85 ff             	test   %rdi,%rdi
    981f:	74 0f                	je     9830 <ema_clear_eaccept_full+0x20>
    9821:	e8 ea fa ff ff       	call   9310 <bit_array_reset_all>
    9826:	31 c0                	xor    %eax,%eax
    9828:	5b                   	pop    %rbx
    9829:	c3                   	ret    
    982a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9830:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    9834:	48 c1 ef 0c          	shr    $0xc,%rdi
    9838:	e8 d3 f6 ff ff       	call   8f10 <bit_array_new_reset>
    983d:	48 89 43 20          	mov    %rax,0x20(%rbx)
    9841:	48 85 c0             	test   %rax,%rax
    9844:	75 e0                	jne    9826 <ema_clear_eaccept_full+0x16>
    9846:	b8 0c 00 00 00       	mov    $0xc,%eax
    984b:	5b                   	pop    %rbx
    984c:	c3                   	ret    
    984d:	0f 1f 00             	nopl   (%rax)

0000000000009850 <ema_set_eaccept>:
    9850:	f3 0f 1e fa          	endbr64 
    9854:	48 85 ff             	test   %rdi,%rdi
    9857:	74 6f                	je     98c8 <ema_set_eaccept+0x78>
    9859:	55                   	push   %rbp
    985a:	48 89 fd             	mov    %rdi,%rbp
    985d:	48 83 ec 10          	sub    $0x10,%rsp
    9861:	48 8b 07             	mov    (%rdi),%rax
    9864:	48 8b 7f 20          	mov    0x20(%rdi),%rdi
    9868:	48 29 c6             	sub    %rax,%rsi
    986b:	48 29 c2             	sub    %rax,%rdx
    986e:	48 c1 ee 0c          	shr    $0xc,%rsi
    9872:	48 c1 ea 0c          	shr    $0xc,%rdx
    9876:	48 85 ff             	test   %rdi,%rdi
    9879:	74 15                	je     9890 <ema_set_eaccept+0x40>
    987b:	48 29 f2             	sub    %rsi,%rdx
    987e:	e8 cd f8 ff ff       	call   9150 <bit_array_set_range>
    9883:	31 c0                	xor    %eax,%eax
    9885:	48 83 c4 10          	add    $0x10,%rsp
    9889:	5d                   	pop    %rbp
    988a:	c3                   	ret    
    988b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9890:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
    9894:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    9899:	48 89 34 24          	mov    %rsi,(%rsp)
    989d:	48 c1 ef 0c          	shr    $0xc,%rdi
    98a1:	e8 6a f6 ff ff       	call   8f10 <bit_array_new_reset>
    98a6:	48 8b 34 24          	mov    (%rsp),%rsi
    98aa:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    98af:	48 85 c0             	test   %rax,%rax
    98b2:	48 89 45 20          	mov    %rax,0x20(%rbp)
    98b6:	48 89 c7             	mov    %rax,%rdi
    98b9:	75 c0                	jne    987b <ema_set_eaccept+0x2b>
    98bb:	b8 0c 00 00 00       	mov    $0xc,%eax
    98c0:	eb c3                	jmp    9885 <ema_set_eaccept+0x35>
    98c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    98c8:	b8 16 00 00 00       	mov    $0x16,%eax
    98cd:	c3                   	ret    
    98ce:	66 90                	xchg   %ax,%ax

00000000000098d0 <ema_page_committed>:
    98d0:	f3 0f 1e fa          	endbr64 
    98d4:	48 8b 47 20          	mov    0x20(%rdi),%rax
    98d8:	48 85 c0             	test   %rax,%rax
    98db:	74 13                	je     98f0 <ema_page_committed+0x20>
    98dd:	48 2b 37             	sub    (%rdi),%rsi
    98e0:	48 89 c7             	mov    %rax,%rdi
    98e3:	48 c1 ee 0c          	shr    $0xc,%rsi
    98e7:	e9 74 f6 ff ff       	jmp    8f60 <bit_array_test>
    98ec:	0f 1f 40 00          	nopl   0x0(%rax)
    98f0:	31 c0                	xor    %eax,%eax
    98f2:	c3                   	ret    
    98f3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    98fa:	00 00 00 
    98fd:	0f 1f 00             	nopl   (%rax)

0000000000009900 <search_ema>:
    9900:	f3 0f 1e fa          	endbr64 
    9904:	48 8b 0f             	mov    (%rdi),%rcx
    9907:	48 8b 41 38          	mov    0x38(%rcx),%rax
    990b:	48 39 c1             	cmp    %rax,%rcx
    990e:	74 1a                	je     992a <search_ema+0x2a>
    9910:	48 8b 10             	mov    (%rax),%rdx
    9913:	48 39 d6             	cmp    %rdx,%rsi
    9916:	72 09                	jb     9921 <search_ema+0x21>
    9918:	48 03 50 08          	add    0x8(%rax),%rdx
    991c:	48 39 d6             	cmp    %rdx,%rsi
    991f:	72 0b                	jb     992c <search_ema+0x2c>
    9921:	48 8b 40 38          	mov    0x38(%rax),%rax
    9925:	48 39 c1             	cmp    %rax,%rcx
    9928:	75 e6                	jne    9910 <search_ema+0x10>
    992a:	31 c0                	xor    %eax,%eax
    992c:	c3                   	ret    
    992d:	0f 1f 00             	nopl   (%rax)

0000000000009930 <insert_ema>:
    9930:	f3 0f 1e fa          	endbr64 
    9934:	48 8b 56 40          	mov    0x40(%rsi),%rdx
    9938:	66 48 0f 6e c6       	movq   %rsi,%xmm0
    993d:	48 89 f8             	mov    %rdi,%rax
    9940:	66 48 0f 6e ca       	movq   %rdx,%xmm1
    9945:	66 0f 6c c1          	punpcklqdq %xmm1,%xmm0
    9949:	0f 11 47 38          	movups %xmm0,0x38(%rdi)
    994d:	48 89 7a 38          	mov    %rdi,0x38(%rdx)
    9951:	48 89 7e 40          	mov    %rdi,0x40(%rsi)
    9955:	c3                   	ret    
    9956:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    995d:	00 00 00 

0000000000009960 <push_back_ema>:
    9960:	f3 0f 1e fa          	endbr64 
    9964:	48 8b 07             	mov    (%rdi),%rax
    9967:	48 8b 50 40          	mov    0x40(%rax),%rdx
    996b:	66 48 0f 6e c0       	movq   %rax,%xmm0
    9970:	66 48 0f 6e ca       	movq   %rdx,%xmm1
    9975:	66 0f 6c c1          	punpcklqdq %xmm1,%xmm0
    9979:	0f 11 46 38          	movups %xmm0,0x38(%rsi)
    997d:	48 89 72 38          	mov    %rsi,0x38(%rdx)
    9981:	48 89 70 40          	mov    %rsi,0x40(%rax)
    9985:	c3                   	ret    
    9986:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    998d:	00 00 00 

0000000000009990 <search_ema_range>:
    9990:	f3 0f 1e fa          	endbr64 
    9994:	4c 8b 0f             	mov    (%rdi),%r9
    9997:	49 89 fa             	mov    %rdi,%r10
    999a:	49 8b 41 38          	mov    0x38(%r9),%rax
    999e:	49 39 c1             	cmp    %rax,%r9
    99a1:	75 0e                	jne    99b1 <search_ema_range+0x21>
    99a3:	eb 4b                	jmp    99f0 <search_ema_range+0x60>
    99a5:	0f 1f 00             	nopl   (%rax)
    99a8:	48 8b 40 38          	mov    0x38(%rax),%rax
    99ac:	49 39 c1             	cmp    %rax,%r9
    99af:	74 3f                	je     99f0 <search_ema_range+0x60>
    99b1:	48 8b 38             	mov    (%rax),%rdi
    99b4:	48 03 78 08          	add    0x8(%rax),%rdi
    99b8:	48 39 fe             	cmp    %rdi,%rsi
    99bb:	73 eb                	jae    99a8 <search_ema_range+0x18>
    99bd:	49 39 c1             	cmp    %rax,%r9
    99c0:	74 2e                	je     99f0 <search_ema_range+0x60>
    99c2:	48 39 10             	cmp    %rdx,(%rax)
    99c5:	73 29                	jae    99f0 <search_ema_range+0x60>
    99c7:	48 89 01             	mov    %rax,(%rcx)
    99ca:	49 8b 0a             	mov    (%r10),%rcx
    99cd:	48 39 c1             	cmp    %rax,%rcx
    99d0:	74 14                	je     99e6 <search_ema_range+0x56>
    99d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    99d8:	48 8b 40 38          	mov    0x38(%rax),%rax
    99dc:	48 39 c1             	cmp    %rax,%rcx
    99df:	74 05                	je     99e6 <search_ema_range+0x56>
    99e1:	48 39 10             	cmp    %rdx,(%rax)
    99e4:	72 f2                	jb     99d8 <search_ema_range+0x48>
    99e6:	31 d2                	xor    %edx,%edx
    99e8:	49 89 00             	mov    %rax,(%r8)
    99eb:	89 d0                	mov    %edx,%eax
    99ed:	c3                   	ret    
    99ee:	66 90                	xchg   %ax,%ax
    99f0:	48 c7 01 00 00 00 00 	movq   $0x0,(%rcx)
    99f7:	31 c0                	xor    %eax,%eax
    99f9:	ba ff ff ff ff       	mov    $0xffffffff,%edx
    99fe:	eb e8                	jmp    99e8 <search_ema_range+0x58>

0000000000009a00 <ema_split>:
    9a00:	f3 0f 1e fa          	endbr64 
    9a04:	41 56                	push   %r14
    9a06:	41 89 d6             	mov    %edx,%r14d
    9a09:	41 55                	push   %r13
    9a0b:	49 89 cd             	mov    %rcx,%r13
    9a0e:	41 54                	push   %r12
    9a10:	49 89 f4             	mov    %rsi,%r12
    9a13:	55                   	push   %rbp
    9a14:	53                   	push   %rbx
    9a15:	48 89 fb             	mov    %rdi,%rbx
    9a18:	bf 48 00 00 00       	mov    $0x48,%edi
    9a1d:	48 83 ec 30          	sub    $0x30,%rsp
    9a21:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    9a28:	00 00 
    9a2a:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    9a2f:	31 c0                	xor    %eax,%eax
    9a31:	e8 0a 1a 00 00       	call   b440 <emalloc>
    9a36:	48 85 c0             	test   %rax,%rax
    9a39:	0f 84 39 01 00 00    	je     9b78 <ema_split+0x178>
    9a3f:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
    9a46:	00 00 
    9a48:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    9a4c:	48 89 c5             	mov    %rax,%rbp
    9a4f:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    9a56:	00 00 
    9a58:	48 85 ff             	test   %rdi,%rdi
    9a5b:	74 21                	je     9a7e <ema_split+0x7e>
    9a5d:	4c 89 e6             	mov    %r12,%rsi
    9a60:	48 8d 4c 24 20       	lea    0x20(%rsp),%rcx
    9a65:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
    9a6a:	48 2b 33             	sub    (%rbx),%rsi
    9a6d:	48 c1 ee 0c          	shr    $0xc,%rsi
    9a71:	e8 fa f8 ff ff       	call   9370 <bit_array_split>
    9a76:	85 c0                	test   %eax,%eax
    9a78:	0f 85 e2 00 00 00    	jne    9b60 <ema_split+0x160>
    9a7e:	ba 48 00 00 00       	mov    $0x48,%edx
    9a83:	48 89 de             	mov    %rbx,%rsi
    9a86:	48 89 ef             	mov    %rbp,%rdi
    9a89:	e8 62 6c 00 00       	call   106f0 <memcpy>
    9a8e:	45 84 f6             	test   %r14b,%r14b
    9a91:	0f 85 99 00 00 00    	jne    9b30 <ema_split+0x130>
    9a97:	48 8b 43 38          	mov    0x38(%rbx),%rax
    9a9b:	48 89 d9             	mov    %rbx,%rcx
    9a9e:	48 8b 50 40          	mov    0x40(%rax),%rdx
    9aa2:	66 48 0f 6e c0       	movq   %rax,%xmm0
    9aa7:	66 48 0f 6e da       	movq   %rdx,%xmm3
    9aac:	66 0f 6c c3          	punpcklqdq %xmm3,%xmm0
    9ab0:	0f 11 45 38          	movups %xmm0,0x38(%rbp)
    9ab4:	48 89 6a 38          	mov    %rbp,0x38(%rdx)
    9ab8:	48 89 ea             	mov    %rbp,%rdx
    9abb:	48 89 68 40          	mov    %rbp,0x40(%rax)
    9abf:	48 8b 03             	mov    (%rbx),%rax
    9ac2:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    9ac6:	4c 89 e7             	mov    %r12,%rdi
    9ac9:	48 29 c7             	sub    %rax,%rdi
    9acc:	66 48 0f 6e c0       	movq   %rax,%xmm0
    9ad1:	48 01 f0             	add    %rsi,%rax
    9ad4:	66 48 0f 6e cf       	movq   %rdi,%xmm1
    9ad9:	4c 29 e0             	sub    %r12,%rax
    9adc:	48 83 7b 20 00       	cmpq   $0x0,0x20(%rbx)
    9ae1:	66 0f 6c c1          	punpcklqdq %xmm1,%xmm0
    9ae5:	0f 11 01             	movups %xmm0,(%rcx)
    9ae8:	4c 89 22             	mov    %r12,(%rdx)
    9aeb:	48 89 42 08          	mov    %rax,0x8(%rdx)
    9aef:	74 12                	je     9b03 <ema_split+0x103>
    9af1:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    9af6:	48 89 41 20          	mov    %rax,0x20(%rcx)
    9afa:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    9aff:	48 89 42 20          	mov    %rax,0x20(%rdx)
    9b03:	49 89 6d 00          	mov    %rbp,0x0(%r13)
    9b07:	31 c0                	xor    %eax,%eax
    9b09:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    9b0e:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    9b15:	00 00 
    9b17:	75 66                	jne    9b7f <ema_split+0x17f>
    9b19:	48 83 c4 30          	add    $0x30,%rsp
    9b1d:	5b                   	pop    %rbx
    9b1e:	5d                   	pop    %rbp
    9b1f:	41 5c                	pop    %r12
    9b21:	41 5d                	pop    %r13
    9b23:	41 5e                	pop    %r14
    9b25:	c3                   	ret    
    9b26:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    9b2d:	00 00 00 
    9b30:	48 8b 43 40          	mov    0x40(%rbx),%rax
    9b34:	66 48 0f 6e c3       	movq   %rbx,%xmm0
    9b39:	48 89 da             	mov    %rbx,%rdx
    9b3c:	48 89 e9             	mov    %rbp,%rcx
    9b3f:	66 48 0f 6e d0       	movq   %rax,%xmm2
    9b44:	66 0f 6c c2          	punpcklqdq %xmm2,%xmm0
    9b48:	0f 11 45 38          	movups %xmm0,0x38(%rbp)
    9b4c:	48 89 68 38          	mov    %rbp,0x38(%rax)
    9b50:	48 89 6b 40          	mov    %rbp,0x40(%rbx)
    9b54:	e9 66 ff ff ff       	jmp    9abf <ema_split+0xbf>
    9b59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9b60:	48 89 ef             	mov    %rbp,%rdi
    9b63:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    9b67:	e8 54 1b 00 00       	call   b6c0 <efree>
    9b6c:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    9b70:	eb 97                	jmp    9b09 <ema_split+0x109>
    9b72:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9b78:	b8 0c 00 00 00       	mov    $0xc,%eax
    9b7d:	eb 8a                	jmp    9b09 <ema_split+0x109>
    9b7f:	e8 fc 6e 00 00       	call   10a80 <__stack_chk_fail>
    9b84:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    9b8b:	00 00 00 
    9b8e:	66 90                	xchg   %ax,%ax

0000000000009b90 <ema_split_ex>:
    9b90:	f3 0f 1e fa          	endbr64 
    9b94:	41 54                	push   %r12
    9b96:	49 89 cc             	mov    %rcx,%r12
    9b99:	55                   	push   %rbp
    9b9a:	48 89 d5             	mov    %rdx,%rbp
    9b9d:	53                   	push   %rbx
    9b9e:	48 89 fb             	mov    %rdi,%rbx
    9ba1:	48 83 ec 10          	sub    $0x10,%rsp
    9ba5:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    9bac:	00 00 
    9bae:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    9bb3:	48 8b 07             	mov    (%rdi),%rax
    9bb6:	48 39 f0             	cmp    %rsi,%rax
    9bb9:	72 35                	jb     9bf0 <ema_split_ex+0x60>
    9bbb:	48 03 43 08          	add    0x8(%rbx),%rax
    9bbf:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    9bc6:	00 
    9bc7:	48 39 c5             	cmp    %rax,%rbp
    9bca:	72 44                	jb     9c10 <ema_split_ex+0x80>
    9bcc:	48 89 d8             	mov    %rbx,%rax
    9bcf:	49 89 04 24          	mov    %rax,(%r12)
    9bd3:	31 c0                	xor    %eax,%eax
    9bd5:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    9bda:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    9be1:	00 00 
    9be3:	75 5b                	jne    9c40 <ema_split_ex+0xb0>
    9be5:	48 83 c4 10          	add    $0x10,%rsp
    9be9:	5b                   	pop    %rbx
    9bea:	5d                   	pop    %rbp
    9beb:	41 5c                	pop    %r12
    9bed:	c3                   	ret    
    9bee:	66 90                	xchg   %ax,%ax
    9bf0:	31 d2                	xor    %edx,%edx
    9bf2:	48 89 e1             	mov    %rsp,%rcx
    9bf5:	e8 06 fe ff ff       	call   9a00 <ema_split>
    9bfa:	85 c0                	test   %eax,%eax
    9bfc:	75 d7                	jne    9bd5 <ema_split_ex+0x45>
    9bfe:	48 8b 14 24          	mov    (%rsp),%rdx
    9c02:	48 85 d2             	test   %rdx,%rdx
    9c05:	74 31                	je     9c38 <ema_split_ex+0xa8>
    9c07:	48 8b 02             	mov    (%rdx),%rax
    9c0a:	48 89 d3             	mov    %rdx,%rbx
    9c0d:	eb ac                	jmp    9bbb <ema_split_ex+0x2b>
    9c0f:	90                   	nop
    9c10:	48 89 e1             	mov    %rsp,%rcx
    9c13:	ba 01 00 00 00       	mov    $0x1,%edx
    9c18:	48 89 ee             	mov    %rbp,%rsi
    9c1b:	48 89 df             	mov    %rbx,%rdi
    9c1e:	e8 dd fd ff ff       	call   9a00 <ema_split>
    9c23:	85 c0                	test   %eax,%eax
    9c25:	75 ae                	jne    9bd5 <ema_split_ex+0x45>
    9c27:	48 8b 04 24          	mov    (%rsp),%rax
    9c2b:	48 85 c0             	test   %rax,%rax
    9c2e:	75 9f                	jne    9bcf <ema_split_ex+0x3f>
    9c30:	eb 9a                	jmp    9bcc <ema_split_ex+0x3c>
    9c32:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9c38:	48 8b 03             	mov    (%rbx),%rax
    9c3b:	e9 7b ff ff ff       	jmp    9bbb <ema_split_ex+0x2b>
    9c40:	e8 3b 6e 00 00       	call   10a80 <__stack_chk_fail>
    9c45:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    9c4c:	00 00 00 
    9c4f:	90                   	nop

0000000000009c50 <find_free_region>:
    9c50:	f3 0f 1e fa          	endbr64 
    9c54:	41 57                	push   %r15
    9c56:	49 89 cf             	mov    %rcx,%r15
    9c59:	41 56                	push   %r14
    9c5b:	49 89 fe             	mov    %rdi,%r14
    9c5e:	41 55                	push   %r13
    9c60:	49 89 d5             	mov    %rdx,%r13
    9c63:	41 54                	push   %r12
    9c65:	49 f7 dd             	neg    %r13
    9c68:	55                   	push   %rbp
    9c69:	48 89 f5             	mov    %rsi,%rbp
    9c6c:	53                   	push   %rbx
    9c6d:	48 89 d3             	mov    %rdx,%rbx
    9c70:	48 83 ec 18          	sub    $0x18,%rsp
    9c74:	4c 8b 27             	mov    (%rdi),%r12
    9c77:	49 8b 4c 24 38       	mov    0x38(%r12),%rcx
    9c7c:	49 c7 00 00 00 00 00 	movq   $0x0,(%r8)
    9c83:	49 c7 07 00 00 00 00 	movq   $0x0,(%r15)
    9c8a:	49 39 cc             	cmp    %rcx,%r12
    9c8d:	0f 84 a5 00 00 00    	je     9d38 <find_free_region+0xe8>
    9c93:	48 8b 51 38          	mov    0x38(%rcx),%rdx
    9c97:	4c 8b 11             	mov    (%rcx),%r10
    9c9a:	48 8d 73 ff          	lea    -0x1(%rbx),%rsi
    9c9e:	49 39 d4             	cmp    %rdx,%r12
    9ca1:	0f 84 02 01 00 00    	je     9da9 <find_free_region+0x159>
    9ca7:	4c 8b 0d 52 0d 02 00 	mov    0x20d52(%rip),%r9        # 2aa00 <mm_user_end>
    9cae:	48 89 c8             	mov    %rcx,%rax
    9cb1:	48 8d 3d b0 03 01 00 	lea    0x103b0(%rip),%rdi        # 1a068 <g_rts_ema_root>
    9cb8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    9cbf:	00 
    9cc0:	48 8b 58 08          	mov    0x8(%rax),%rbx
    9cc4:	48 01 f3             	add    %rsi,%rbx
    9cc7:	48 89 d8             	mov    %rbx,%rax
    9cca:	4c 01 d0             	add    %r10,%rax
    9ccd:	4c 8b 12             	mov    (%rdx),%r10
    9cd0:	4c 21 e8             	and    %r13,%rax
    9cd3:	49 39 c2             	cmp    %rax,%r10
    9cd6:	72 48                	jb     9d20 <find_free_region+0xd0>
    9cd8:	4d 89 d3             	mov    %r10,%r11
    9cdb:	49 29 c3             	sub    %rax,%r11
    9cde:	49 39 eb             	cmp    %rbp,%r11
    9ce1:	72 3d                	jb     9d20 <find_free_region+0xd0>
    9ce3:	49 39 fe             	cmp    %rdi,%r14
    9ce6:	75 16                	jne    9cfe <find_free_region+0xae>
    9ce8:	49 89 eb             	mov    %rbp,%r11
    9ceb:	49 01 c3             	add    %rax,%r11
    9cee:	72 30                	jb     9d20 <find_free_region+0xd0>
    9cf0:	4c 39 c8             	cmp    %r9,%rax
    9cf3:	73 09                	jae    9cfe <find_free_region+0xae>
    9cf5:	4c 39 1d 0c 0d 02 00 	cmp    %r11,0x20d0c(%rip)        # 2aa08 <mm_user_base>
    9cfc:	72 22                	jb     9d20 <find_free_region+0xd0>
    9cfe:	49 89 10             	mov    %rdx,(%r8)
    9d01:	49 89 07             	mov    %rax,(%r15)
    9d04:	48 83 c4 18          	add    $0x18,%rsp
    9d08:	b8 01 00 00 00       	mov    $0x1,%eax
    9d0d:	5b                   	pop    %rbx
    9d0e:	5d                   	pop    %rbp
    9d0f:	41 5c                	pop    %r12
    9d11:	41 5d                	pop    %r13
    9d13:	41 5e                	pop    %r14
    9d15:	41 5f                	pop    %r15
    9d17:	c3                   	ret    
    9d18:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    9d1f:	00 
    9d20:	48 8b 5a 38          	mov    0x38(%rdx),%rbx
    9d24:	48 89 d0             	mov    %rdx,%rax
    9d27:	49 39 dc             	cmp    %rbx,%r12
    9d2a:	0f 84 80 00 00 00    	je     9db0 <find_free_region+0x160>
    9d30:	48 89 da             	mov    %rbx,%rdx
    9d33:	eb 8b                	jmp    9cc0 <find_free_region+0x70>
    9d35:	0f 1f 00             	nopl   (%rax)
    9d38:	48 8d 05 29 03 01 00 	lea    0x10329(%rip),%rax        # 1a068 <g_rts_ema_root>
    9d3f:	48 8b 15 c2 0c 02 00 	mov    0x20cc2(%rip),%rdx        # 2aa08 <mm_user_base>
    9d46:	48 39 c7             	cmp    %rax,%rdi
    9d49:	74 25                	je     9d70 <find_free_region+0x120>
    9d4b:	48 8d 44 1a ff       	lea    -0x1(%rdx,%rbx,1),%rax
    9d50:	4c 21 e8             	and    %r13,%rax
    9d53:	48 01 c5             	add    %rax,%rbp
    9d56:	72 40                	jb     9d98 <find_free_region+0x148>
    9d58:	48 39 d0             	cmp    %rdx,%rax
    9d5b:	72 3b                	jb     9d98 <find_free_region+0x148>
    9d5d:	48 39 2d 9c 0c 02 00 	cmp    %rbp,0x20c9c(%rip)        # 2aa00 <mm_user_end>
    9d64:	72 32                	jb     9d98 <find_free_region+0x148>
    9d66:	49 89 07             	mov    %rax,(%r15)
    9d69:	4d 89 20             	mov    %r12,(%r8)
    9d6c:	eb 96                	jmp    9d04 <find_free_region+0xb4>
    9d6e:	66 90                	xchg   %ax,%ax
    9d70:	48 39 f2             	cmp    %rsi,%rdx
    9d73:	0f 83 be 01 00 00    	jae    9f37 <find_free_region+0x2e7>
    9d79:	48 8b 05 80 0c 02 00 	mov    0x20c80(%rip),%rax        # 2aa00 <mm_user_end>
    9d80:	4c 8d 74 03 ff       	lea    -0x1(%rbx,%rax,1),%r14
    9d85:	48 89 e8             	mov    %rbp,%rax
    9d88:	4d 21 ee             	and    %r13,%r14
    9d8b:	4c 01 f0             	add    %r14,%rax
    9d8e:	0f 83 e4 00 00 00    	jae    9e78 <find_free_region+0x228>
    9d94:	0f 1f 40 00          	nopl   0x0(%rax)
    9d98:	31 c0                	xor    %eax,%eax
    9d9a:	48 83 c4 18          	add    $0x18,%rsp
    9d9e:	5b                   	pop    %rbx
    9d9f:	5d                   	pop    %rbp
    9da0:	41 5c                	pop    %r12
    9da2:	41 5d                	pop    %r13
    9da4:	41 5e                	pop    %r14
    9da6:	41 5f                	pop    %r15
    9da8:	c3                   	ret    
    9da9:	48 89 d3             	mov    %rdx,%rbx
    9dac:	48 89 ca             	mov    %rcx,%rdx
    9daf:	90                   	nop
    9db0:	4d 8d 24 32          	lea    (%r10,%rsi,1),%r12
    9db4:	4c 03 62 08          	add    0x8(%rdx),%r12
    9db8:	48 89 ee             	mov    %rbp,%rsi
    9dbb:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    9dc0:	4d 21 ec             	and    %r13,%r12
    9dc3:	48 89 0c 24          	mov    %rcx,(%rsp)
    9dc7:	4c 89 e7             	mov    %r12,%rdi
    9dca:	e8 71 bc ff ff       	call   5a40 <sgx_mm_is_within_enclave>
    9dcf:	48 8b 0c 24          	mov    (%rsp),%rcx
    9dd3:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
    9dd8:	84 c0                	test   %al,%al
    9dda:	74 4c                	je     9e28 <find_free_region+0x1d8>
    9ddc:	48 89 ee             	mov    %rbp,%rsi
    9ddf:	31 d2                	xor    %edx,%edx
    9de1:	48 8d 05 80 02 01 00 	lea    0x10280(%rip),%rax        # 1a068 <g_rts_ema_root>
    9de8:	4c 01 e6             	add    %r12,%rsi
    9deb:	0f 92 c2             	setb   %dl
    9dee:	49 39 c6             	cmp    %rax,%r14
    9df1:	0f 84 a7 00 00 00    	je     9e9e <find_free_region+0x24e>
    9df7:	48 85 d2             	test   %rdx,%rdx
    9dfa:	0f 85 20 01 00 00    	jne    9f20 <find_free_region+0x2d0>
    9e00:	4c 3b 25 01 0c 02 00 	cmp    0x20c01(%rip),%r12        # 2aa08 <mm_user_base>
    9e07:	0f 82 13 01 00 00    	jb     9f20 <find_free_region+0x2d0>
    9e0d:	48 39 35 ec 0b 02 00 	cmp    %rsi,0x20bec(%rip)        # 2aa00 <mm_user_end>
    9e14:	0f 82 06 01 00 00    	jb     9f20 <find_free_region+0x2d0>
    9e1a:	49 89 18             	mov    %rbx,(%r8)
    9e1d:	4d 89 27             	mov    %r12,(%r15)
    9e20:	e9 df fe ff ff       	jmp    9d04 <find_free_region+0xb4>
    9e25:	0f 1f 00             	nopl   (%rax)
    9e28:	48 8b 19             	mov    (%rcx),%rbx
    9e2b:	48 39 eb             	cmp    %rbp,%rbx
    9e2e:	0f 82 64 ff ff ff    	jb     9d98 <find_free_region+0x148>
    9e34:	48 29 eb             	sub    %rbp,%rbx
    9e37:	48 8d 05 2a 02 01 00 	lea    0x1022a(%rip),%rax        # 1a068 <g_rts_ema_root>
    9e3e:	4c 21 eb             	and    %r13,%rbx
    9e41:	49 39 c6             	cmp    %rax,%r14
    9e44:	0f 84 85 00 00 00    	je     9ecf <find_free_region+0x27f>
    9e4a:	48 01 dd             	add    %rbx,%rbp
    9e4d:	0f 82 45 ff ff ff    	jb     9d98 <find_free_region+0x148>
    9e53:	48 3b 1d ae 0b 02 00 	cmp    0x20bae(%rip),%rbx        # 2aa08 <mm_user_base>
    9e5a:	0f 82 38 ff ff ff    	jb     9d98 <find_free_region+0x148>
    9e60:	48 39 2d 99 0b 02 00 	cmp    %rbp,0x20b99(%rip)        # 2aa00 <mm_user_end>
    9e67:	0f 82 2b ff ff ff    	jb     9d98 <find_free_region+0x148>
    9e6d:	49 89 1f             	mov    %rbx,(%r15)
    9e70:	49 89 08             	mov    %rcx,(%r8)
    9e73:	e9 8c fe ff ff       	jmp    9d04 <find_free_region+0xb4>
    9e78:	48 89 ee             	mov    %rbp,%rsi
    9e7b:	4c 89 f7             	mov    %r14,%rdi
    9e7e:	4c 89 04 24          	mov    %r8,(%rsp)
    9e82:	e8 b9 bb ff ff       	call   5a40 <sgx_mm_is_within_enclave>
    9e87:	4c 8b 04 24          	mov    (%rsp),%r8
    9e8b:	84 c0                	test   %al,%al
    9e8d:	0f 84 05 ff ff ff    	je     9d98 <find_free_region+0x148>
    9e93:	4d 89 37             	mov    %r14,(%r15)
    9e96:	4d 89 20             	mov    %r12,(%r8)
    9e99:	e9 66 fe ff ff       	jmp    9d04 <find_free_region+0xb4>
    9e9e:	48 85 d2             	test   %rdx,%rdx
    9ea1:	75 1a                	jne    9ebd <find_free_region+0x26d>
    9ea3:	4c 3b 25 56 0b 02 00 	cmp    0x20b56(%rip),%r12        # 2aa00 <mm_user_end>
    9eaa:	0f 83 6a ff ff ff    	jae    9e1a <find_free_region+0x1ca>
    9eb0:	48 39 35 51 0b 02 00 	cmp    %rsi,0x20b51(%rip)        # 2aa08 <mm_user_base>
    9eb7:	0f 83 5d ff ff ff    	jae    9e1a <find_free_region+0x1ca>
    9ebd:	48 8b 19             	mov    (%rcx),%rbx
    9ec0:	48 39 eb             	cmp    %rbp,%rbx
    9ec3:	0f 82 cf fe ff ff    	jb     9d98 <find_free_region+0x148>
    9ec9:	48 29 eb             	sub    %rbp,%rbx
    9ecc:	4c 21 eb             	and    %r13,%rbx
    9ecf:	48 89 ee             	mov    %rbp,%rsi
    9ed2:	48 89 df             	mov    %rbx,%rdi
    9ed5:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    9eda:	48 89 0c 24          	mov    %rcx,(%rsp)
    9ede:	e8 5d bb ff ff       	call   5a40 <sgx_mm_is_within_enclave>
    9ee3:	84 c0                	test   %al,%al
    9ee5:	0f 84 ad fe ff ff    	je     9d98 <find_free_region+0x148>
    9eeb:	48 01 dd             	add    %rbx,%rbp
    9eee:	0f 82 a4 fe ff ff    	jb     9d98 <find_free_region+0x148>
    9ef4:	48 3b 1d 05 0b 02 00 	cmp    0x20b05(%rip),%rbx        # 2aa00 <mm_user_end>
    9efb:	48 8b 0c 24          	mov    (%rsp),%rcx
    9eff:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
    9f04:	0f 83 63 ff ff ff    	jae    9e6d <find_free_region+0x21d>
    9f0a:	48 39 2d f7 0a 02 00 	cmp    %rbp,0x20af7(%rip)        # 2aa08 <mm_user_base>
    9f11:	0f 83 56 ff ff ff    	jae    9e6d <find_free_region+0x21d>
    9f17:	31 c0                	xor    %eax,%eax
    9f19:	e9 7c fe ff ff       	jmp    9d9a <find_free_region+0x14a>
    9f1e:	66 90                	xchg   %ax,%ax
    9f20:	48 8b 19             	mov    (%rcx),%rbx
    9f23:	48 39 eb             	cmp    %rbp,%rbx
    9f26:	0f 82 6c fe ff ff    	jb     9d98 <find_free_region+0x148>
    9f2c:	48 29 eb             	sub    %rbp,%rbx
    9f2f:	4c 21 eb             	and    %r13,%rbx
    9f32:	e9 13 ff ff ff       	jmp    9e4a <find_free_region+0x1fa>
    9f37:	48 29 f2             	sub    %rsi,%rdx
    9f3a:	4c 89 04 24          	mov    %r8,(%rsp)
    9f3e:	4c 21 ea             	and    %r13,%rdx
    9f41:	48 89 d7             	mov    %rdx,%rdi
    9f44:	49 89 d6             	mov    %rdx,%r14
    9f47:	e8 f4 ba ff ff       	call   5a40 <sgx_mm_is_within_enclave>
    9f4c:	4c 8b 04 24          	mov    (%rsp),%r8
    9f50:	84 c0                	test   %al,%al
    9f52:	0f 85 3b ff ff ff    	jne    9e93 <find_free_region+0x243>
    9f58:	e9 1c fe ff ff       	jmp    9d79 <find_free_region+0x129>
    9f5d:	0f 1f 00             	nopl   (%rax)

0000000000009f60 <find_free_region_at>:
    9f60:	f3 0f 1e fa          	endbr64 
    9f64:	41 55                	push   %r13
    9f66:	49 89 cd             	mov    %rcx,%r13
    9f69:	41 54                	push   %r12
    9f6b:	49 89 fc             	mov    %rdi,%r12
    9f6e:	55                   	push   %rbp
    9f6f:	48 89 d5             	mov    %rdx,%rbp
    9f72:	53                   	push   %rbx
    9f73:	48 89 f3             	mov    %rsi,%rbx
    9f76:	48 89 d6             	mov    %rdx,%rsi
    9f79:	48 89 df             	mov    %rbx,%rdi
    9f7c:	48 83 ec 08          	sub    $0x8,%rsp
    9f80:	e8 bb ba ff ff       	call   5a40 <sgx_mm_is_within_enclave>
    9f85:	31 c9                	xor    %ecx,%ecx
    9f87:	84 c0                	test   %al,%al
    9f89:	74 5f                	je     9fea <find_free_region_at+0x8a>
    9f8b:	31 f6                	xor    %esi,%esi
    9f8d:	48 8d 15 d4 00 01 00 	lea    0x100d4(%rip),%rdx        # 1a068 <g_rts_ema_root>
    9f94:	48 01 dd             	add    %rbx,%rbp
    9f97:	40 0f 92 c6          	setb   %sil
    9f9b:	49 39 d4             	cmp    %rdx,%r12
    9f9e:	0f 84 7c 00 00 00    	je     a020 <find_free_region_at+0xc0>
    9fa4:	48 85 f6             	test   %rsi,%rsi
    9fa7:	75 5e                	jne    a007 <find_free_region_at+0xa7>
    9fa9:	48 3b 1d 58 0a 02 00 	cmp    0x20a58(%rip),%rbx        # 2aa08 <mm_user_base>
    9fb0:	72 55                	jb     a007 <find_free_region_at+0xa7>
    9fb2:	48 39 2d 47 0a 02 00 	cmp    %rbp,0x20a47(%rip)        # 2aa00 <mm_user_end>
    9fb9:	72 4c                	jb     a007 <find_free_region_at+0xa7>
    9fbb:	49 8b 14 24          	mov    (%r12),%rdx
    9fbf:	48 8b 4a 38          	mov    0x38(%rdx),%rcx
    9fc3:	48 39 ca             	cmp    %rcx,%rdx
    9fc6:	75 1a                	jne    9fe2 <find_free_region_at+0x82>
    9fc8:	eb 20                	jmp    9fea <find_free_region_at+0x8a>
    9fca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9fd0:	48 03 71 08          	add    0x8(%rcx),%rsi
    9fd4:	48 39 f3             	cmp    %rsi,%rbx
    9fd7:	72 27                	jb     a000 <find_free_region_at+0xa0>
    9fd9:	48 8b 49 38          	mov    0x38(%rcx),%rcx
    9fdd:	48 39 ca             	cmp    %rcx,%rdx
    9fe0:	74 08                	je     9fea <find_free_region_at+0x8a>
    9fe2:	48 8b 31             	mov    (%rcx),%rsi
    9fe5:	48 39 ee             	cmp    %rbp,%rsi
    9fe8:	72 e6                	jb     9fd0 <find_free_region_at+0x70>
    9fea:	49 89 4d 00          	mov    %rcx,0x0(%r13)
    9fee:	48 83 c4 08          	add    $0x8,%rsp
    9ff2:	5b                   	pop    %rbx
    9ff3:	5d                   	pop    %rbp
    9ff4:	41 5c                	pop    %r12
    9ff6:	41 5d                	pop    %r13
    9ff8:	c3                   	ret    
    9ff9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a000:	48 39 ca             	cmp    %rcx,%rdx
    a003:	74 e5                	je     9fea <find_free_region_at+0x8a>
    a005:	31 c9                	xor    %ecx,%ecx
    a007:	31 c0                	xor    %eax,%eax
    a009:	49 89 4d 00          	mov    %rcx,0x0(%r13)
    a00d:	48 83 c4 08          	add    $0x8,%rsp
    a011:	5b                   	pop    %rbx
    a012:	5d                   	pop    %rbp
    a013:	41 5c                	pop    %r12
    a015:	41 5d                	pop    %r13
    a017:	c3                   	ret    
    a018:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a01f:	00 
    a020:	48 85 f6             	test   %rsi,%rsi
    a023:	75 e2                	jne    a007 <find_free_region_at+0xa7>
    a025:	48 3b 1d d4 09 02 00 	cmp    0x209d4(%rip),%rbx        # 2aa00 <mm_user_end>
    a02c:	73 8d                	jae    9fbb <find_free_region_at+0x5b>
    a02e:	48 39 2d d3 09 02 00 	cmp    %rbp,0x209d3(%rip)        # 2aa08 <mm_user_base>
    a035:	73 84                	jae    9fbb <find_free_region_at+0x5b>
    a037:	31 c0                	xor    %eax,%eax
    a039:	eb ce                	jmp    a009 <find_free_region_at+0xa9>
    a03b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000a040 <ema_new>:
    a040:	f3 0f 1e fa          	endbr64 
    a044:	53                   	push   %rbx
    a045:	48 83 ec 50          	sub    $0x50,%rsp
    a049:	64 4c 8b 14 25 28 00 	mov    %fs:0x28,%r10
    a050:	00 00 
    a052:	4c 89 54 24 48       	mov    %r10,0x48(%rsp)
    a057:	45 31 d2             	xor    %r10d,%r10d
    a05a:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
    a05f:	89 54 24 10          	mov    %edx,0x10(%rsp)
    a063:	48 89 e3             	mov    %rsp,%rbx
    a066:	48 89 3c 24          	mov    %rdi,(%rsp)
    a06a:	bf 48 00 00 00       	mov    $0x48,%edi
    a06f:	48 8b 50 40          	mov    0x40(%rax),%rdx
    a073:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    a078:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    a07d:	48 89 54 24 40       	mov    %rdx,0x40(%rsp)
    a082:	48 89 5a 38          	mov    %rbx,0x38(%rdx)
    a086:	48 89 58 40          	mov    %rbx,0x40(%rax)
    a08a:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
    a08f:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    a096:	00 00 
    a098:	4c 89 44 24 28       	mov    %r8,0x28(%rsp)
    a09d:	4c 89 4c 24 30       	mov    %r9,0x30(%rsp)
    a0a2:	e8 99 13 00 00       	call   b440 <emalloc>
    a0a7:	48 85 c0             	test   %rax,%rax
    a0aa:	74 6c                	je     a118 <ema_new+0xd8>
    a0ac:	66 0f 6f 0c 24       	movdqa (%rsp),%xmm1
    a0b1:	0f 11 08             	movups %xmm1,(%rax)
    a0b4:	66 0f 6f 54 24 10    	movdqa 0x10(%rsp),%xmm2
    a0ba:	0f 11 50 10          	movups %xmm2,0x10(%rax)
    a0be:	66 0f 6f 5c 24 20    	movdqa 0x20(%rsp),%xmm3
    a0c4:	0f 11 58 20          	movups %xmm3,0x20(%rax)
    a0c8:	66 0f 6f 64 24 30    	movdqa 0x30(%rsp),%xmm4
    a0ce:	0f 11 60 30          	movups %xmm4,0x30(%rax)
    a0d2:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
    a0d7:	48 89 50 40          	mov    %rdx,0x40(%rax)
    a0db:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
    a0e0:	48 89 42 38          	mov    %rax,0x38(%rdx)
    a0e4:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
    a0e9:	48 89 42 40          	mov    %rax,0x40(%rdx)
    a0ed:	66 48 0f 6e c2       	movq   %rdx,%xmm0
    a0f2:	0f 16 44 24 40       	movhps 0x40(%rsp),%xmm0
    a0f7:	0f 11 40 38          	movups %xmm0,0x38(%rax)
    a0fb:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
    a100:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    a107:	00 00 
    a109:	75 2d                	jne    a138 <ema_new+0xf8>
    a10b:	48 83 c4 50          	add    $0x50,%rsp
    a10f:	5b                   	pop    %rbx
    a110:	c3                   	ret    
    a111:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a118:	48 8b 4c 24 40       	mov    0x40(%rsp),%rcx
    a11d:	48 39 59 38          	cmp    %rbx,0x38(%rcx)
    a121:	75 1a                	jne    a13d <ema_new+0xfd>
    a123:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
    a128:	48 39 5a 40          	cmp    %rbx,0x40(%rdx)
    a12c:	75 0f                	jne    a13d <ema_new+0xfd>
    a12e:	48 89 51 38          	mov    %rdx,0x38(%rcx)
    a132:	48 89 4a 40          	mov    %rcx,0x40(%rdx)
    a136:	eb c3                	jmp    a0fb <ema_new+0xbb>
    a138:	e8 43 69 00 00       	call   10a80 <__stack_chk_fail>
    a13d:	e8 f5 83 00 00       	call   12537 <abort>
    a142:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a149:	00 00 00 
    a14c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000a150 <ema_destroy>:
    a150:	f3 0f 1e fa          	endbr64 
    a154:	53                   	push   %rbx
    a155:	48 89 fb             	mov    %rdi,%rbx
    a158:	48 85 ff             	test   %rdi,%rdi
    a15b:	74 1c                	je     a179 <ema_destroy+0x29>
    a15d:	48 8b 47 40          	mov    0x40(%rdi),%rax
    a161:	48 3b 78 38          	cmp    0x38(%rax),%rdi
    a165:	75 29                	jne    a190 <ema_destroy+0x40>
    a167:	48 8b 57 38          	mov    0x38(%rdi),%rdx
    a16b:	48 3b 7a 40          	cmp    0x40(%rdx),%rdi
    a16f:	75 1f                	jne    a190 <ema_destroy+0x40>
    a171:	48 89 50 38          	mov    %rdx,0x38(%rax)
    a175:	48 89 42 40          	mov    %rax,0x40(%rdx)
    a179:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    a17d:	48 85 ff             	test   %rdi,%rdi
    a180:	74 05                	je     a187 <ema_destroy+0x37>
    a182:	e8 b9 ed ff ff       	call   8f40 <bit_array_delete>
    a187:	48 89 df             	mov    %rbx,%rdi
    a18a:	5b                   	pop    %rbx
    a18b:	e9 30 15 00 00       	jmp    b6c0 <efree>
    a190:	e8 a2 83 00 00       	call   12537 <abort>
    a195:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a19c:	00 00 00 
    a19f:	90                   	nop

000000000000a1a0 <destroy_ema_root>:
    a1a0:	f3 0f 1e fa          	endbr64 
    a1a4:	55                   	push   %rbp
    a1a5:	53                   	push   %rbx
    a1a6:	48 83 ec 08          	sub    $0x8,%rsp
    a1aa:	48 8b 07             	mov    (%rdi),%rax
    a1ad:	48 8b 58 38          	mov    0x38(%rax),%rbx
    a1b1:	48 39 d8             	cmp    %rbx,%rax
    a1b4:	74 1c                	je     a1d2 <destroy_ema_root+0x32>
    a1b6:	48 89 fd             	mov    %rdi,%rbp
    a1b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a1c0:	48 89 df             	mov    %rbx,%rdi
    a1c3:	48 8b 5b 38          	mov    0x38(%rbx),%rbx
    a1c7:	e8 84 ff ff ff       	call   a150 <ema_destroy>
    a1cc:	48 39 5d 00          	cmp    %rbx,0x0(%rbp)
    a1d0:	75 ee                	jne    a1c0 <destroy_ema_root+0x20>
    a1d2:	48 83 c4 08          	add    $0x8,%rsp
    a1d6:	5b                   	pop    %rbx
    a1d7:	5d                   	pop    %rbp
    a1d8:	c3                   	ret    
    a1d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000a1e0 <do_commit>:
    a1e0:	f3 0f 1e fa          	endbr64 
    a1e4:	55                   	push   %rbp
    a1e5:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a1e9:	48 83 ca 08          	or     $0x8,%rdx
    a1ed:	48 89 e5             	mov    %rsp,%rbp
    a1f0:	41 55                	push   %r13
    a1f2:	41 54                	push   %r12
    a1f4:	49 89 fc             	mov    %rdi,%r12
    a1f7:	53                   	push   %rbx
    a1f8:	48 8d 1c 37          	lea    (%rdi,%rsi,1),%rbx
    a1fc:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    a200:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    a204:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a20b:	00 00 
    a20d:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    a212:	31 c0                	xor    %eax,%eax
    a214:	48 89 14 24          	mov    %rdx,(%rsp)
    a218:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    a21f:	00 00 
    a221:	0f 11 44 24 08       	movups %xmm0,0x8(%rsp)
    a226:	0f 11 44 24 18       	movups %xmm0,0x18(%rsp)
    a22b:	0f 11 44 24 28       	movups %xmm0,0x28(%rsp)
    a230:	84 c9                	test   %cl,%cl
    a232:	74 4c                	je     a280 <do_commit+0xa0>
    a234:	49 89 e5             	mov    %rsp,%r13
    a237:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    a23e:	00 00 
    a240:	48 81 eb 00 10 00 00 	sub    $0x1000,%rbx
    a247:	4c 89 ef             	mov    %r13,%rdi
    a24a:	48 89 de             	mov    %rbx,%rsi
    a24d:	e8 6d 82 00 00       	call   124bf <do_eaccept>
    a252:	85 c0                	test   %eax,%eax
    a254:	75 57                	jne    a2ad <do_commit+0xcd>
    a256:	49 39 dc             	cmp    %rbx,%r12
    a259:	72 e5                	jb     a240 <do_commit+0x60>
    a25b:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    a260:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    a267:	00 00 
    a269:	75 47                	jne    a2b2 <do_commit+0xd2>
    a26b:	48 8d 65 e8          	lea    -0x18(%rbp),%rsp
    a26f:	31 c0                	xor    %eax,%eax
    a271:	5b                   	pop    %rbx
    a272:	41 5c                	pop    %r12
    a274:	41 5d                	pop    %r13
    a276:	5d                   	pop    %rbp
    a277:	c3                   	ret    
    a278:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a27f:	00 
    a280:	48 39 df             	cmp    %rbx,%rdi
    a283:	73 d6                	jae    a25b <do_commit+0x7b>
    a285:	49 89 e5             	mov    %rsp,%r13
    a288:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a28f:	00 
    a290:	4c 89 e6             	mov    %r12,%rsi
    a293:	4c 89 ef             	mov    %r13,%rdi
    a296:	e8 24 82 00 00       	call   124bf <do_eaccept>
    a29b:	85 c0                	test   %eax,%eax
    a29d:	75 0e                	jne    a2ad <do_commit+0xcd>
    a29f:	49 81 c4 00 10 00 00 	add    $0x1000,%r12
    a2a6:	49 39 dc             	cmp    %rbx,%r12
    a2a9:	72 e5                	jb     a290 <do_commit+0xb0>
    a2ab:	eb ae                	jmp    a25b <do_commit+0x7b>
    a2ad:	e8 85 82 00 00       	call   12537 <abort>
    a2b2:	e8 c9 67 00 00       	call   10a80 <__stack_chk_fail>
    a2b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    a2be:	00 00 

000000000000a2c0 <ema_do_commit>:
    a2c0:	f3 0f 1e fa          	endbr64 
    a2c4:	55                   	push   %rbp
    a2c5:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a2c9:	48 89 e5             	mov    %rsp,%rbp
    a2cc:	41 57                	push   %r15
    a2ce:	41 56                	push   %r14
    a2d0:	41 55                	push   %r13
    a2d2:	41 54                	push   %r12
    a2d4:	53                   	push   %rbx
    a2d5:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    a2d9:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    a2dd:	4c 8b 77 08          	mov    0x8(%rdi),%r14
    a2e1:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a2e8:	00 00 
    a2ea:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    a2ef:	48 8b 07             	mov    (%rdi),%rax
    a2f2:	48 c7 04 24 0b 02 00 	movq   $0x20b,(%rsp)
    a2f9:	00 
    a2fa:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    a301:	00 00 
    a303:	0f 11 44 24 08       	movups %xmm0,0x8(%rsp)
    a308:	0f 11 44 24 18       	movups %xmm0,0x18(%rsp)
    a30d:	0f 11 44 24 28       	movups %xmm0,0x28(%rsp)
    a312:	48 39 f0             	cmp    %rsi,%rax
    a315:	48 0f 43 f0          	cmovae %rax,%rsi
    a319:	49 01 c6             	add    %rax,%r14
    a31c:	49 39 d6             	cmp    %rdx,%r14
    a31f:	4c 0f 47 f2          	cmova  %rdx,%r14
    a323:	4c 39 f6             	cmp    %r14,%rsi
    a326:	73 61                	jae    a389 <ema_do_commit+0xc9>
    a328:	49 89 fd             	mov    %rdi,%r13
    a32b:	48 89 f3             	mov    %rsi,%rbx
    a32e:	49 89 e7             	mov    %rsp,%r15
    a331:	eb 15                	jmp    a348 <ema_do_commit+0x88>
    a333:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a338:	48 81 c3 00 10 00 00 	add    $0x1000,%rbx
    a33f:	4c 39 f3             	cmp    %r14,%rbx
    a342:	73 45                	jae    a389 <ema_do_commit+0xc9>
    a344:	49 8b 45 00          	mov    0x0(%r13),%rax
    a348:	49 89 dc             	mov    %rbx,%r12
    a34b:	49 8b 7d 20          	mov    0x20(%r13),%rdi
    a34f:	49 29 c4             	sub    %rax,%r12
    a352:	49 c1 ec 0c          	shr    $0xc,%r12
    a356:	4c 89 e6             	mov    %r12,%rsi
    a359:	e8 02 ec ff ff       	call   8f60 <bit_array_test>
    a35e:	84 c0                	test   %al,%al
    a360:	75 d6                	jne    a338 <ema_do_commit+0x78>
    a362:	48 89 de             	mov    %rbx,%rsi
    a365:	4c 89 ff             	mov    %r15,%rdi
    a368:	e8 52 81 00 00       	call   124bf <do_eaccept>
    a36d:	85 c0                	test   %eax,%eax
    a36f:	75 1a                	jne    a38b <ema_do_commit+0xcb>
    a371:	49 8b 7d 20          	mov    0x20(%r13),%rdi
    a375:	4c 89 e6             	mov    %r12,%rsi
    a378:	48 81 c3 00 10 00 00 	add    $0x1000,%rbx
    a37f:	e8 ac ed ff ff       	call   9130 <bit_array_set>
    a384:	4c 39 f3             	cmp    %r14,%rbx
    a387:	72 bb                	jb     a344 <ema_do_commit+0x84>
    a389:	31 c0                	xor    %eax,%eax
    a38b:	48 8b 54 24 78       	mov    0x78(%rsp),%rdx
    a390:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    a397:	00 00 
    a399:	75 0f                	jne    a3aa <ema_do_commit+0xea>
    a39b:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    a39f:	5b                   	pop    %rbx
    a3a0:	41 5c                	pop    %r12
    a3a2:	41 5d                	pop    %r13
    a3a4:	41 5e                	pop    %r14
    a3a6:	41 5f                	pop    %r15
    a3a8:	5d                   	pop    %rbp
    a3a9:	c3                   	ret    
    a3aa:	e8 d1 66 00 00       	call   10a80 <__stack_chk_fail>
    a3af:	90                   	nop

000000000000a3b0 <ema_do_commit_loop>:
    a3b0:	f3 0f 1e fa          	endbr64 
    a3b4:	41 55                	push   %r13
    a3b6:	41 54                	push   %r12
    a3b8:	55                   	push   %rbp
    a3b9:	53                   	push   %rbx
    a3ba:	48 89 cb             	mov    %rcx,%rbx
    a3bd:	48 83 ec 08          	sub    $0x8,%rsp
    a3c1:	48 8b 0f             	mov    (%rdi),%rcx
    a3c4:	48 39 f7             	cmp    %rsi,%rdi
    a3c7:	0f 84 9b 00 00 00    	je     a468 <ema_do_commit_loop+0xb8>
    a3cd:	49 89 f5             	mov    %rsi,%r13
    a3d0:	48 89 d5             	mov    %rdx,%rbp
    a3d3:	48 89 f8             	mov    %rdi,%rax
    a3d6:	eb 26                	jmp    a3fe <ema_do_commit_loop+0x4e>
    a3d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a3df:	00 
    a3e0:	f6 40 10 01          	testb  $0x1,0x10(%rax)
    a3e4:	75 27                	jne    a40d <ema_do_commit_loop+0x5d>
    a3e6:	48 03 48 08          	add    0x8(%rax),%rcx
    a3ea:	48 8b 40 38          	mov    0x38(%rax),%rax
    a3ee:	48 89 ca             	mov    %rcx,%rdx
    a3f1:	49 39 c5             	cmp    %rax,%r13
    a3f4:	74 3a                	je     a430 <ema_do_commit_loop+0x80>
    a3f6:	48 8b 08             	mov    (%rax),%rcx
    a3f9:	48 39 d1             	cmp    %rdx,%rcx
    a3fc:	75 22                	jne    a420 <ema_do_commit_loop+0x70>
    a3fe:	48 8b 50 18          	mov    0x18(%rax),%rdx
    a402:	48 f7 d2             	not    %rdx
    a405:	f7 c2 02 02 00 00    	test   $0x202,%edx
    a40b:	74 d3                	je     a3e0 <ema_do_commit_loop+0x30>
    a40d:	b8 0d 00 00 00       	mov    $0xd,%eax
    a412:	48 83 c4 08          	add    $0x8,%rsp
    a416:	5b                   	pop    %rbx
    a417:	5d                   	pop    %rbp
    a418:	41 5c                	pop    %r12
    a41a:	41 5d                	pop    %r13
    a41c:	c3                   	ret    
    a41d:	0f 1f 00             	nopl   (%rax)
    a420:	48 83 c4 08          	add    $0x8,%rsp
    a424:	b8 16 00 00 00       	mov    $0x16,%eax
    a429:	5b                   	pop    %rbx
    a42a:	5d                   	pop    %rbp
    a42b:	41 5c                	pop    %r12
    a42d:	41 5d                	pop    %r13
    a42f:	c3                   	ret    
    a430:	b8 16 00 00 00       	mov    $0x16,%eax
    a435:	48 39 d9             	cmp    %rbx,%rcx
    a438:	73 1c                	jae    a456 <ema_do_commit_loop+0xa6>
    a43a:	eb d6                	jmp    a412 <ema_do_commit_loop+0x62>
    a43c:	0f 1f 40 00          	nopl   0x0(%rax)
    a440:	48 89 da             	mov    %rbx,%rdx
    a443:	48 89 ee             	mov    %rbp,%rsi
    a446:	4c 8b 67 38          	mov    0x38(%rdi),%r12
    a44a:	e8 71 fe ff ff       	call   a2c0 <ema_do_commit>
    a44f:	85 c0                	test   %eax,%eax
    a451:	75 bf                	jne    a412 <ema_do_commit_loop+0x62>
    a453:	4c 89 e7             	mov    %r12,%rdi
    a456:	4c 39 ef             	cmp    %r13,%rdi
    a459:	75 e5                	jne    a440 <ema_do_commit_loop+0x90>
    a45b:	31 c0                	xor    %eax,%eax
    a45d:	48 83 c4 08          	add    $0x8,%rsp
    a461:	5b                   	pop    %rbx
    a462:	5d                   	pop    %rbp
    a463:	41 5c                	pop    %r12
    a465:	41 5d                	pop    %r13
    a467:	c3                   	ret    
    a468:	b8 16 00 00 00       	mov    $0x16,%eax
    a46d:	48 39 d9             	cmp    %rbx,%rcx
    a470:	72 a0                	jb     a412 <ema_do_commit_loop+0x62>
    a472:	31 c0                	xor    %eax,%eax
    a474:	eb e7                	jmp    a45d <ema_do_commit_loop+0xad>
    a476:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a47d:	00 00 00 

000000000000a480 <ema_change_to_tcs>:
    a480:	f3 0f 1e fa          	endbr64 
    a484:	55                   	push   %rbp
    a485:	48 89 e5             	mov    %rsp,%rbp
    a488:	41 56                	push   %r14
    a48a:	41 55                	push   %r13
    a48c:	41 54                	push   %r12
    a48e:	53                   	push   %rbx
    a48f:	48 89 fb             	mov    %rdi,%rbx
    a492:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    a496:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
    a49d:	4c 8b 6f 18          	mov    0x18(%rdi),%r13
    a4a1:	48 8b 7f 20          	mov    0x20(%rdi),%rdi
    a4a5:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a4ac:	00 00 
    a4ae:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
    a4b5:	00 
    a4b6:	31 c0                	xor    %eax,%eax
    a4b8:	45 89 ee             	mov    %r13d,%r14d
    a4bb:	41 81 e6 00 ff 00 00 	and    $0xff00,%r14d
    a4c2:	48 85 ff             	test   %rdi,%rdi
    a4c5:	74 33                	je     a4fa <ema_change_to_tcs+0x7a>
    a4c7:	49 89 f4             	mov    %rsi,%r12
    a4ca:	48 2b 33             	sub    (%rbx),%rsi
    a4cd:	48 c1 ee 0c          	shr    $0xc,%rsi
    a4d1:	e8 8a ea ff ff       	call   8f60 <bit_array_test>
    a4d6:	84 c0                	test   %al,%al
    a4d8:	74 20                	je     a4fa <ema_change_to_tcs+0x7a>
    a4da:	41 81 fe 00 01 00 00 	cmp    $0x100,%r14d
    a4e1:	0f 84 e1 00 00 00    	je     a5c8 <ema_change_to_tcs+0x148>
    a4e7:	41 83 e5 07          	and    $0x7,%r13d
    a4eb:	41 83 fd 03          	cmp    $0x3,%r13d
    a4ef:	75 09                	jne    a4fa <ema_change_to_tcs+0x7a>
    a4f1:	41 81 fe 00 02 00 00 	cmp    $0x200,%r14d
    a4f8:	74 2e                	je     a528 <ema_change_to_tcs+0xa8>
    a4fa:	b8 0d 00 00 00       	mov    $0xd,%eax
    a4ff:	48 8b 94 24 b8 00 00 	mov    0xb8(%rsp),%rdx
    a506:	00 
    a507:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    a50e:	00 00 
    a510:	0f 85 c4 00 00 00    	jne    a5da <ema_change_to_tcs+0x15a>
    a516:	48 8d 65 e0          	lea    -0x20(%rbp),%rsp
    a51a:	5b                   	pop    %rbx
    a51b:	41 5c                	pop    %r12
    a51d:	41 5d                	pop    %r13
    a51f:	41 5e                	pop    %r14
    a521:	5d                   	pop    %rbp
    a522:	c3                   	ret    
    a523:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a528:	b9 03 01 00 00       	mov    $0x103,%ecx
    a52d:	ba 03 02 00 00       	mov    $0x203,%edx
    a532:	be 00 10 00 00       	mov    $0x1000,%esi
    a537:	4c 89 e7             	mov    %r12,%rdi
    a53a:	e8 71 b3 ff ff       	call   58b0 <sgx_mm_modify_ocall>
    a53f:	85 c0                	test   %eax,%eax
    a541:	0f 85 89 00 00 00    	jne    a5d0 <ema_change_to_tcs+0x150>
    a547:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a54b:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
    a550:	4c 89 e6             	mov    %r12,%rsi
    a553:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
    a55a:	00 00 
    a55c:	48 c7 44 24 40 10 01 	movq   $0x110,0x40(%rsp)
    a563:	00 00 
    a565:	0f 11 44 24 48       	movups %xmm0,0x48(%rsp)
    a56a:	0f 11 44 24 58       	movups %xmm0,0x58(%rsp)
    a56f:	0f 11 44 24 68       	movups %xmm0,0x68(%rsp)
    a574:	e8 46 7f 00 00       	call   124bf <do_eaccept>
    a579:	85 c0                	test   %eax,%eax
    a57b:	75 62                	jne    a5df <ema_change_to_tcs+0x15f>
    a57d:	48 8d 4c 24 38       	lea    0x38(%rsp),%rcx
    a582:	49 8d 94 24 00 10 00 	lea    0x1000(%r12),%rdx
    a589:	00 
    a58a:	4c 89 e6             	mov    %r12,%rsi
    a58d:	48 89 df             	mov    %rbx,%rdi
    a590:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    a597:	00 00 
    a599:	e8 f2 f5 ff ff       	call   9b90 <ema_split_ex>
    a59e:	85 c0                	test   %eax,%eax
    a5a0:	0f 85 59 ff ff ff    	jne    a4ff <ema_change_to_tcs+0x7f>
    a5a6:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
    a5ab:	48 8b 51 18          	mov    0x18(%rcx),%rdx
    a5af:	48 81 e2 f8 00 ff ff 	and    $0xffffffffffff00f8,%rdx
    a5b6:	80 ce 01             	or     $0x1,%dh
    a5b9:	48 89 51 18          	mov    %rdx,0x18(%rcx)
    a5bd:	e9 3d ff ff ff       	jmp    a4ff <ema_change_to_tcs+0x7f>
    a5c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a5c8:	31 c0                	xor    %eax,%eax
    a5ca:	e9 30 ff ff ff       	jmp    a4ff <ema_change_to_tcs+0x7f>
    a5cf:	90                   	nop
    a5d0:	b8 0e 00 00 00       	mov    $0xe,%eax
    a5d5:	e9 25 ff ff ff       	jmp    a4ff <ema_change_to_tcs+0x7f>
    a5da:	e8 a1 64 00 00       	call   10a80 <__stack_chk_fail>
    a5df:	e8 53 7f 00 00       	call   12537 <abort>
    a5e4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a5eb:	00 00 00 
    a5ee:	66 90                	xchg   %ax,%ax

000000000000a5f0 <ema_modify_permissions>:
    a5f0:	f3 0f 1e fa          	endbr64 
    a5f4:	55                   	push   %rbp
    a5f5:	48 89 e5             	mov    %rsp,%rbp
    a5f8:	41 57                	push   %r15
    a5fa:	41 56                	push   %r14
    a5fc:	41 55                	push   %r13
    a5fe:	41 54                	push   %r12
    a600:	53                   	push   %rbx
    a601:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    a605:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
    a60c:	89 4c 24 20          	mov    %ecx,0x20(%rsp)
    a610:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a617:	00 00 
    a619:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
    a620:	00 
    a621:	48 8b 47 18          	mov    0x18(%rdi),%rax
    a625:	41 89 c4             	mov    %eax,%r12d
    a628:	41 83 e4 07          	and    $0x7,%r12d
    a62c:	41 39 cc             	cmp    %ecx,%r12d
    a62f:	0f 84 e2 00 00 00    	je     a717 <ema_modify_permissions+0x127>
    a635:	49 89 fd             	mov    %rdi,%r13
    a638:	89 c7                	mov    %eax,%edi
    a63a:	49 89 f7             	mov    %rsi,%r15
    a63d:	44 8b 74 24 20       	mov    0x20(%rsp),%r14d
    a642:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    a646:	81 e7 00 ff 00 00    	and    $0xff00,%edi
    a64c:	44 89 f1             	mov    %r14d,%ecx
    a64f:	89 7c 24 0c          	mov    %edi,0xc(%rsp)
    a653:	48 39 f3             	cmp    %rsi,%rbx
    a656:	4c 0f 43 fb          	cmovae %rbx,%r15
    a65a:	49 03 5d 08          	add    0x8(%r13),%rbx
    a65e:	48 39 d3             	cmp    %rdx,%rbx
    a661:	48 0f 47 da          	cmova  %rdx,%rbx
    a665:	89 c2                	mov    %eax,%edx
    a667:	09 f9                	or     %edi,%ecx
    a669:	4c 89 ff             	mov    %r15,%rdi
    a66c:	81 e2 07 ff 00 00    	and    $0xff07,%edx
    a672:	4c 89 7c 24 18       	mov    %r15,0x18(%rsp)
    a677:	48 89 de             	mov    %rbx,%rsi
    a67a:	4c 29 fe             	sub    %r15,%rsi
    a67d:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    a682:	e8 29 b2 ff ff       	call   58b0 <sgx_mm_modify_ocall>
    a687:	85 c0                	test   %eax,%eax
    a689:	0f 85 21 01 00 00    	jne    a7b0 <ema_modify_permissions+0x1c0>
    a68f:	44 89 f0             	mov    %r14d,%eax
    a692:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a696:	48 8d 54 24 40       	lea    0x40(%rsp),%rdx
    a69b:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
    a6a2:	00 00 
    a6a4:	0d 20 02 00 00       	or     $0x220,%eax
    a6a9:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
    a6ae:	48 98                	cltq   
    a6b0:	0f 11 44 24 48       	movups %xmm0,0x48(%rsp)
    a6b5:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    a6ba:	44 89 f0             	mov    %r14d,%eax
    a6bd:	45 09 e6             	or     %r12d,%r14d
    a6c0:	83 e0 06             	and    $0x6,%eax
    a6c3:	0f 11 44 24 58       	movups %xmm0,0x58(%rsp)
    a6c8:	89 44 24 24          	mov    %eax,0x24(%rsp)
    a6cc:	0f 11 44 24 68       	movups %xmm0,0x68(%rsp)
    a6d1:	49 39 df             	cmp    %rbx,%r15
    a6d4:	72 76                	jb     a74c <ema_modify_permissions+0x15c>
    a6d6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a6dd:	00 00 00 
    a6e0:	49 8b 45 00          	mov    0x0(%r13),%rax
    a6e4:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    a6e9:	48 39 d0             	cmp    %rdx,%rax
    a6ec:	0f 82 ce 00 00 00    	jb     a7c0 <ema_modify_permissions+0x1d0>
    a6f2:	49 03 45 08          	add    0x8(%r13),%rax
    a6f6:	48 39 c3             	cmp    %rax,%rbx
    a6f9:	0f 82 f9 00 00 00    	jb     a7f8 <ema_modify_permissions+0x208>
    a6ff:	49 8b 45 18          	mov    0x18(%r13),%rax
    a703:	48 63 54 24 20       	movslq 0x20(%rsp),%rdx
    a708:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    a70c:	48 09 d0             	or     %rdx,%rax
    a70f:	49 89 45 18          	mov    %rax,0x18(%r13)
    a713:	85 d2                	test   %edx,%edx
    a715:	74 79                	je     a790 <ema_modify_permissions+0x1a0>
    a717:	31 c0                	xor    %eax,%eax
    a719:	48 8b 94 24 b8 00 00 	mov    0xb8(%rsp),%rdx
    a720:	00 
    a721:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    a728:	00 00 
    a72a:	0f 85 f8 00 00 00    	jne    a828 <ema_modify_permissions+0x238>
    a730:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    a734:	5b                   	pop    %rbx
    a735:	41 5c                	pop    %r12
    a737:	41 5d                	pop    %r13
    a739:	41 5e                	pop    %r14
    a73b:	41 5f                	pop    %r15
    a73d:	5d                   	pop    %rbp
    a73e:	c3                   	ret    
    a73f:	90                   	nop
    a740:	49 81 c7 00 10 00 00 	add    $0x1000,%r15
    a747:	49 39 df             	cmp    %rbx,%r15
    a74a:	73 94                	jae    a6e0 <ema_modify_permissions+0xf0>
    a74c:	45 39 f4             	cmp    %r14d,%r12d
    a74f:	74 0d                	je     a75e <ema_modify_permissions+0x16e>
    a751:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
    a756:	4c 89 fe             	mov    %r15,%rsi
    a759:	e8 9d 7d 00 00       	call   124fb <do_emodpe>
    a75e:	83 7c 24 24 06       	cmpl   $0x6,0x24(%rsp)
    a763:	74 db                	je     a740 <ema_modify_permissions+0x150>
    a765:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
    a76a:	4c 89 fe             	mov    %r15,%rsi
    a76d:	e8 4d 7d 00 00       	call   124bf <do_eaccept>
    a772:	85 c0                	test   %eax,%eax
    a774:	75 a3                	jne    a719 <ema_modify_permissions+0x129>
    a776:	49 81 c7 00 10 00 00 	add    $0x1000,%r15
    a77d:	49 39 df             	cmp    %rbx,%r15
    a780:	0f 83 5a ff ff ff    	jae    a6e0 <ema_modify_permissions+0xf0>
    a786:	45 39 f4             	cmp    %r14d,%r12d
    a789:	74 da                	je     a765 <ema_modify_permissions+0x175>
    a78b:	eb c4                	jmp    a751 <ema_modify_permissions+0x161>
    a78d:	0f 1f 00             	nopl   (%rax)
    a790:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
    a794:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    a799:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    a79e:	89 ca                	mov    %ecx,%edx
    a7a0:	e8 0b b1 ff ff       	call   58b0 <sgx_mm_modify_ocall>
    a7a5:	85 c0                	test   %eax,%eax
    a7a7:	0f 84 6a ff ff ff    	je     a717 <ema_modify_permissions+0x127>
    a7ad:	0f 1f 00             	nopl   (%rax)
    a7b0:	b8 0e 00 00 00       	mov    $0xe,%eax
    a7b5:	e9 5f ff ff ff       	jmp    a719 <ema_modify_permissions+0x129>
    a7ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a7c0:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    a7c5:	31 d2                	xor    %edx,%edx
    a7c7:	48 8d 4c 24 38       	lea    0x38(%rsp),%rcx
    a7cc:	4c 89 ef             	mov    %r13,%rdi
    a7cf:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    a7d6:	00 00 
    a7d8:	e8 23 f2 ff ff       	call   9a00 <ema_split>
    a7dd:	85 c0                	test   %eax,%eax
    a7df:	0f 85 34 ff ff ff    	jne    a719 <ema_modify_permissions+0x129>
    a7e5:	4c 8b 6c 24 38       	mov    0x38(%rsp),%r13
    a7ea:	49 8b 45 00          	mov    0x0(%r13),%rax
    a7ee:	e9 ff fe ff ff       	jmp    a6f2 <ema_modify_permissions+0x102>
    a7f3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a7f8:	4c 89 ef             	mov    %r13,%rdi
    a7fb:	48 8d 4c 24 38       	lea    0x38(%rsp),%rcx
    a800:	ba 01 00 00 00       	mov    $0x1,%edx
    a805:	48 89 de             	mov    %rbx,%rsi
    a808:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    a80f:	00 00 
    a811:	e8 ea f1 ff ff       	call   9a00 <ema_split>
    a816:	4c 8b 6c 24 38       	mov    0x38(%rsp),%r13
    a81b:	85 c0                	test   %eax,%eax
    a81d:	0f 84 dc fe ff ff    	je     a6ff <ema_modify_permissions+0x10f>
    a823:	e9 f1 fe ff ff       	jmp    a719 <ema_modify_permissions+0x129>
    a828:	e8 53 62 00 00       	call   10a80 <__stack_chk_fail>
    a82d:	0f 1f 00             	nopl   (%rax)

000000000000a830 <ema_do_uncommit>:
    a830:	f3 0f 1e fa          	endbr64 
    a834:	41 55                	push   %r13
    a836:	49 89 f5             	mov    %rsi,%r13
    a839:	41 54                	push   %r12
    a83b:	53                   	push   %rbx
    a83c:	48 83 ec 10          	sub    $0x10,%rsp
    a840:	48 8b 07             	mov    (%rdi),%rax
    a843:	44 8b 67 18          	mov    0x18(%rdi),%r12d
    a847:	48 39 f0             	cmp    %rsi,%rax
    a84a:	4c 0f 43 e8          	cmovae %rax,%r13
    a84e:	48 03 47 08          	add    0x8(%rdi),%rax
    a852:	48 39 d0             	cmp    %rdx,%rax
    a855:	48 0f 47 c2          	cmova  %rdx,%rax
    a859:	48 89 c3             	mov    %rax,%rbx
    a85c:	41 83 e4 07          	and    $0x7,%r12d
    a860:	74 1e                	je     a880 <ema_do_uncommit+0x50>
    a862:	48 83 c4 10          	add    $0x10,%rsp
    a866:	44 89 e1             	mov    %r12d,%ecx
    a869:	48 89 da             	mov    %rbx,%rdx
    a86c:	4c 89 ee             	mov    %r13,%rsi
    a86f:	5b                   	pop    %rbx
    a870:	41 5c                	pop    %r12
    a872:	41 5d                	pop    %r13
    a874:	e9 37 ed ff ff       	jmp    95b0 <ema_do_uncommit_real>
    a879:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a880:	b9 01 00 00 00       	mov    $0x1,%ecx
    a885:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    a88a:	e8 61 fd ff ff       	call   a5f0 <ema_modify_permissions>
    a88f:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    a894:	eb cc                	jmp    a862 <ema_do_uncommit+0x32>
    a896:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a89d:	00 00 00 

000000000000a8a0 <ema_do_dealloc>:
    a8a0:	f3 0f 1e fa          	endbr64 
    a8a4:	41 54                	push   %r12
    a8a6:	49 89 f4             	mov    %rsi,%r12
    a8a9:	55                   	push   %rbp
    a8aa:	53                   	push   %rbx
    a8ab:	48 89 fb             	mov    %rdi,%rbx
    a8ae:	48 83 ec 10          	sub    $0x10,%rsp
    a8b2:	48 8b 6f 08          	mov    0x8(%rdi),%rbp
    a8b6:	48 8b 4f 18          	mov    0x18(%rdi),%rcx
    a8ba:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a8c1:	00 00 
    a8c3:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    a8c8:	48 8b 07             	mov    (%rdi),%rax
    a8cb:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    a8d2:	00 
    a8d3:	48 39 f0             	cmp    %rsi,%rax
    a8d6:	4c 0f 43 e0          	cmovae %rax,%r12
    a8da:	48 01 c5             	add    %rax,%rbp
    a8dd:	48 39 d5             	cmp    %rdx,%rbp
    a8e0:	48 0f 47 ea          	cmova  %rdx,%rbp
    a8e4:	f6 47 10 01          	testb  $0x1,0x10(%rdi)
    a8e8:	75 1c                	jne    a906 <ema_do_dealloc+0x66>
    a8ea:	83 e1 07             	and    $0x7,%ecx
    a8ed:	74 71                	je     a960 <ema_do_dealloc+0xc0>
    a8ef:	31 c9                	xor    %ecx,%ecx
    a8f1:	48 89 ea             	mov    %rbp,%rdx
    a8f4:	4c 89 e6             	mov    %r12,%rsi
    a8f7:	48 89 df             	mov    %rbx,%rdi
    a8fa:	e8 b1 ec ff ff       	call   95b0 <ema_do_uncommit_real>
    a8ff:	85 c0                	test   %eax,%eax
    a901:	75 3e                	jne    a941 <ema_do_dealloc+0xa1>
    a903:	48 8b 03             	mov    (%rbx),%rax
    a906:	4c 39 e0             	cmp    %r12,%rax
    a909:	72 65                	jb     a970 <ema_do_dealloc+0xd0>
    a90b:	48 03 43 08          	add    0x8(%rbx),%rax
    a90f:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    a916:	00 
    a917:	48 39 c5             	cmp    %rax,%rbp
    a91a:	73 1b                	jae    a937 <ema_do_dealloc+0x97>
    a91c:	48 89 e1             	mov    %rsp,%rcx
    a91f:	ba 01 00 00 00       	mov    $0x1,%edx
    a924:	48 89 ee             	mov    %rbp,%rsi
    a927:	48 89 df             	mov    %rbx,%rdi
    a92a:	e8 d1 f0 ff ff       	call   9a00 <ema_split>
    a92f:	85 c0                	test   %eax,%eax
    a931:	75 0e                	jne    a941 <ema_do_dealloc+0xa1>
    a933:	48 8b 1c 24          	mov    (%rsp),%rbx
    a937:	48 89 df             	mov    %rbx,%rdi
    a93a:	e8 11 f8 ff ff       	call   a150 <ema_destroy>
    a93f:	31 c0                	xor    %eax,%eax
    a941:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    a946:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    a94d:	00 00 
    a94f:	75 3f                	jne    a990 <ema_do_dealloc+0xf0>
    a951:	48 83 c4 10          	add    $0x10,%rsp
    a955:	5b                   	pop    %rbx
    a956:	5d                   	pop    %rbp
    a957:	41 5c                	pop    %r12
    a959:	c3                   	ret    
    a95a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a960:	b9 01 00 00 00       	mov    $0x1,%ecx
    a965:	e8 86 fc ff ff       	call   a5f0 <ema_modify_permissions>
    a96a:	eb 83                	jmp    a8ef <ema_do_dealloc+0x4f>
    a96c:	0f 1f 40 00          	nopl   0x0(%rax)
    a970:	31 d2                	xor    %edx,%edx
    a972:	48 89 e1             	mov    %rsp,%rcx
    a975:	4c 89 e6             	mov    %r12,%rsi
    a978:	48 89 df             	mov    %rbx,%rdi
    a97b:	e8 80 f0 ff ff       	call   9a00 <ema_split>
    a980:	85 c0                	test   %eax,%eax
    a982:	75 bd                	jne    a941 <ema_do_dealloc+0xa1>
    a984:	48 8b 1c 24          	mov    (%rsp),%rbx
    a988:	48 8b 03             	mov    (%rbx),%rax
    a98b:	e9 7b ff ff ff       	jmp    a90b <ema_do_dealloc+0x6b>
    a990:	e8 eb 60 00 00       	call   10a80 <__stack_chk_fail>
    a995:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a99c:	00 00 00 
    a99f:	90                   	nop

000000000000a9a0 <ema_do_dealloc_loop>:
    a9a0:	f3 0f 1e fa          	endbr64 
    a9a4:	41 55                	push   %r13
    a9a6:	49 89 d5             	mov    %rdx,%r13
    a9a9:	41 54                	push   %r12
    a9ab:	49 89 cc             	mov    %rcx,%r12
    a9ae:	55                   	push   %rbp
    a9af:	48 89 f5             	mov    %rsi,%rbp
    a9b2:	53                   	push   %rbx
    a9b3:	48 83 ec 08          	sub    $0x8,%rsp
    a9b7:	eb 1d                	jmp    a9d6 <ema_do_dealloc_loop+0x36>
    a9b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a9c0:	4c 89 e2             	mov    %r12,%rdx
    a9c3:	4c 89 ee             	mov    %r13,%rsi
    a9c6:	48 8b 5f 38          	mov    0x38(%rdi),%rbx
    a9ca:	e8 d1 fe ff ff       	call   a8a0 <ema_do_dealloc>
    a9cf:	85 c0                	test   %eax,%eax
    a9d1:	75 0a                	jne    a9dd <ema_do_dealloc_loop+0x3d>
    a9d3:	48 89 df             	mov    %rbx,%rdi
    a9d6:	48 39 ef             	cmp    %rbp,%rdi
    a9d9:	75 e5                	jne    a9c0 <ema_do_dealloc_loop+0x20>
    a9db:	31 c0                	xor    %eax,%eax
    a9dd:	48 83 c4 08          	add    $0x8,%rsp
    a9e1:	5b                   	pop    %rbx
    a9e2:	5d                   	pop    %rbp
    a9e3:	41 5c                	pop    %r12
    a9e5:	41 5d                	pop    %r13
    a9e7:	c3                   	ret    
    a9e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a9ef:	00 

000000000000a9f0 <ema_do_uncommit_loop>:
    a9f0:	f3 0f 1e fa          	endbr64 
    a9f4:	41 57                	push   %r15
    a9f6:	41 56                	push   %r14
    a9f8:	41 55                	push   %r13
    a9fa:	41 54                	push   %r12
    a9fc:	49 89 d4             	mov    %rdx,%r12
    a9ff:	55                   	push   %rbp
    aa00:	48 89 cd             	mov    %rcx,%rbp
    aa03:	53                   	push   %rbx
    aa04:	48 83 ec 18          	sub    $0x18,%rsp
    aa08:	48 8b 17             	mov    (%rdi),%rdx
    aa0b:	48 39 f7             	cmp    %rsi,%rdi
    aa0e:	0f 84 d9 00 00 00    	je     aaed <ema_do_uncommit_loop+0xfd>
    aa14:	49 89 ff             	mov    %rdi,%r15
    aa17:	48 89 f3             	mov    %rsi,%rbx
    aa1a:	48 89 f8             	mov    %rdi,%rax
    aa1d:	0f 1f 00             	nopl   (%rax)
    aa20:	f6 40 10 01          	testb  $0x1,0x10(%rax)
    aa24:	75 32                	jne    aa58 <ema_do_uncommit_loop+0x68>
    aa26:	48 8b 48 08          	mov    0x8(%rax),%rcx
    aa2a:	48 8b 40 38          	mov    0x38(%rax),%rax
    aa2e:	48 01 d1             	add    %rdx,%rcx
    aa31:	48 39 c3             	cmp    %rax,%rbx
    aa34:	74 3a                	je     aa70 <ema_do_uncommit_loop+0x80>
    aa36:	48 8b 10             	mov    (%rax),%rdx
    aa39:	48 39 ca             	cmp    %rcx,%rdx
    aa3c:	74 e2                	je     aa20 <ema_do_uncommit_loop+0x30>
    aa3e:	b8 16 00 00 00       	mov    $0x16,%eax
    aa43:	48 83 c4 18          	add    $0x18,%rsp
    aa47:	5b                   	pop    %rbx
    aa48:	5d                   	pop    %rbp
    aa49:	41 5c                	pop    %r12
    aa4b:	41 5d                	pop    %r13
    aa4d:	41 5e                	pop    %r14
    aa4f:	41 5f                	pop    %r15
    aa51:	c3                   	ret    
    aa52:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    aa58:	48 83 c4 18          	add    $0x18,%rsp
    aa5c:	b8 0d 00 00 00       	mov    $0xd,%eax
    aa61:	5b                   	pop    %rbx
    aa62:	5d                   	pop    %rbp
    aa63:	41 5c                	pop    %r12
    aa65:	41 5d                	pop    %r13
    aa67:	41 5e                	pop    %r14
    aa69:	41 5f                	pop    %r15
    aa6b:	c3                   	ret    
    aa6c:	0f 1f 40 00          	nopl   0x0(%rax)
    aa70:	b8 16 00 00 00       	mov    $0x16,%eax
    aa75:	48 39 e9             	cmp    %rbp,%rcx
    aa78:	73 1e                	jae    aa98 <ema_do_uncommit_loop+0xa8>
    aa7a:	eb c7                	jmp    aa43 <ema_do_uncommit_loop+0x53>
    aa7c:	0f 1f 40 00          	nopl   0x0(%rax)
    aa80:	44 89 c1             	mov    %r8d,%ecx
    aa83:	4c 89 f2             	mov    %r14,%rdx
    aa86:	4c 89 ce             	mov    %r9,%rsi
    aa89:	4c 89 ff             	mov    %r15,%rdi
    aa8c:	e8 1f eb ff ff       	call   95b0 <ema_do_uncommit_real>
    aa91:	85 c0                	test   %eax,%eax
    aa93:	75 ae                	jne    aa43 <ema_do_uncommit_loop+0x53>
    aa95:	4d 89 ef             	mov    %r13,%r15
    aa98:	49 39 df             	cmp    %rbx,%r15
    aa9b:	74 5e                	je     aafb <ema_do_uncommit_loop+0x10b>
    aa9d:	49 8b 07             	mov    (%r15),%rax
    aaa0:	45 8b 47 18          	mov    0x18(%r15),%r8d
    aaa4:	4d 8b 6f 38          	mov    0x38(%r15),%r13
    aaa8:	49 39 c4             	cmp    %rax,%r12
    aaab:	49 89 c1             	mov    %rax,%r9
    aaae:	4d 0f 43 cc          	cmovae %r12,%r9
    aab2:	49 03 47 08          	add    0x8(%r15),%rax
    aab6:	48 39 e8             	cmp    %rbp,%rax
    aab9:	48 0f 47 c5          	cmova  %rbp,%rax
    aabd:	49 89 c6             	mov    %rax,%r14
    aac0:	41 83 e0 07          	and    $0x7,%r8d
    aac4:	75 ba                	jne    aa80 <ema_do_uncommit_loop+0x90>
    aac6:	b9 01 00 00 00       	mov    $0x1,%ecx
    aacb:	48 89 ea             	mov    %rbp,%rdx
    aace:	4c 89 e6             	mov    %r12,%rsi
    aad1:	4c 89 ff             	mov    %r15,%rdi
    aad4:	44 89 44 24 0c       	mov    %r8d,0xc(%rsp)
    aad9:	4c 89 0c 24          	mov    %r9,(%rsp)
    aadd:	e8 0e fb ff ff       	call   a5f0 <ema_modify_permissions>
    aae2:	44 8b 44 24 0c       	mov    0xc(%rsp),%r8d
    aae7:	4c 8b 0c 24          	mov    (%rsp),%r9
    aaeb:	eb 93                	jmp    aa80 <ema_do_uncommit_loop+0x90>
    aaed:	b8 16 00 00 00       	mov    $0x16,%eax
    aaf2:	48 39 ca             	cmp    %rcx,%rdx
    aaf5:	0f 82 48 ff ff ff    	jb     aa43 <ema_do_uncommit_loop+0x53>
    aafb:	48 83 c4 18          	add    $0x18,%rsp
    aaff:	31 c0                	xor    %eax,%eax
    ab01:	5b                   	pop    %rbx
    ab02:	5d                   	pop    %rbp
    ab03:	41 5c                	pop    %r12
    ab05:	41 5d                	pop    %r13
    ab07:	41 5e                	pop    %r14
    ab09:	41 5f                	pop    %r15
    ab0b:	c3                   	ret    
    ab0c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000ab10 <ema_modify_permissions_loop>:
    ab10:	f3 0f 1e fa          	endbr64 
    ab14:	41 57                	push   %r15
    ab16:	41 56                	push   %r14
    ab18:	41 55                	push   %r13
    ab1a:	41 54                	push   %r12
    ab1c:	55                   	push   %rbp
    ab1d:	48 89 d5             	mov    %rdx,%rbp
    ab20:	53                   	push   %rbx
    ab21:	48 89 cb             	mov    %rcx,%rbx
    ab24:	48 83 ec 08          	sub    $0x8,%rsp
    ab28:	48 8b 17             	mov    (%rdi),%rdx
    ab2b:	48 39 f7             	cmp    %rsi,%rdi
    ab2e:	0f 84 de 00 00 00    	je     ac12 <ema_modify_permissions_loop+0x102>
    ab34:	49 89 fe             	mov    %rdi,%r14
    ab37:	49 89 f4             	mov    %rsi,%r12
    ab3a:	45 89 c5             	mov    %r8d,%r13d
    ab3d:	49 89 ff             	mov    %rdi,%r15
    ab40:	41 f6 47 19 02       	testb  $0x2,0x19(%r15)
    ab45:	74 79                	je     abc0 <ema_modify_permissions_loop+0xb0>
    ab47:	41 f6 47 10 01       	testb  $0x1,0x10(%r15)
    ab4c:	75 72                	jne    abc0 <ema_modify_permissions_loop+0xb0>
    ab4e:	48 39 d5             	cmp    %rdx,%rbp
    ab51:	48 89 d6             	mov    %rdx,%rsi
    ab54:	49 8b 47 08          	mov    0x8(%r15),%rax
    ab58:	49 8b 7f 20          	mov    0x20(%r15),%rdi
    ab5c:	48 0f 43 f5          	cmovae %rbp,%rsi
    ab60:	48 01 d0             	add    %rdx,%rax
    ab63:	48 29 d6             	sub    %rdx,%rsi
    ab66:	48 c1 ee 0c          	shr    $0xc,%rsi
    ab6a:	48 39 d8             	cmp    %rbx,%rax
    ab6d:	48 0f 47 c3          	cmova  %rbx,%rax
    ab71:	48 29 d0             	sub    %rdx,%rax
    ab74:	48 c1 e8 0c          	shr    $0xc,%rax
    ab78:	48 85 ff             	test   %rdi,%rdi
    ab7b:	74 27                	je     aba4 <ema_modify_permissions_loop+0x94>
    ab7d:	48 29 f0             	sub    %rsi,%rax
    ab80:	48 89 c2             	mov    %rax,%rdx
    ab83:	e8 28 e4 ff ff       	call   8fb0 <bit_array_test_range>
    ab88:	84 c0                	test   %al,%al
    ab8a:	74 18                	je     aba4 <ema_modify_permissions_loop+0x94>
    ab8c:	49 8b 47 08          	mov    0x8(%r15),%rax
    ab90:	49 03 07             	add    (%r15),%rax
    ab93:	4d 8b 7f 38          	mov    0x38(%r15),%r15
    ab97:	4d 39 fc             	cmp    %r15,%r12
    ab9a:	74 3c                	je     abd8 <ema_modify_permissions_loop+0xc8>
    ab9c:	49 8b 17             	mov    (%r15),%rdx
    ab9f:	48 39 d0             	cmp    %rdx,%rax
    aba2:	74 9c                	je     ab40 <ema_modify_permissions_loop+0x30>
    aba4:	b8 16 00 00 00       	mov    $0x16,%eax
    aba9:	48 83 c4 08          	add    $0x8,%rsp
    abad:	5b                   	pop    %rbx
    abae:	5d                   	pop    %rbp
    abaf:	41 5c                	pop    %r12
    abb1:	41 5d                	pop    %r13
    abb3:	41 5e                	pop    %r14
    abb5:	41 5f                	pop    %r15
    abb7:	c3                   	ret    
    abb8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    abbf:	00 
    abc0:	48 83 c4 08          	add    $0x8,%rsp
    abc4:	b8 0d 00 00 00       	mov    $0xd,%eax
    abc9:	5b                   	pop    %rbx
    abca:	5d                   	pop    %rbp
    abcb:	41 5c                	pop    %r12
    abcd:	41 5d                	pop    %r13
    abcf:	41 5e                	pop    %r14
    abd1:	41 5f                	pop    %r15
    abd3:	c3                   	ret    
    abd4:	0f 1f 40 00          	nopl   0x0(%rax)
    abd8:	48 39 d8             	cmp    %rbx,%rax
    abdb:	73 1f                	jae    abfc <ema_modify_permissions_loop+0xec>
    abdd:	eb c5                	jmp    aba4 <ema_modify_permissions_loop+0x94>
    abdf:	90                   	nop
    abe0:	44 89 e9             	mov    %r13d,%ecx
    abe3:	48 89 da             	mov    %rbx,%rdx
    abe6:	48 89 ee             	mov    %rbp,%rsi
    abe9:	4c 89 f7             	mov    %r14,%rdi
    abec:	4d 8b 7e 38          	mov    0x38(%r14),%r15
    abf0:	e8 fb f9 ff ff       	call   a5f0 <ema_modify_permissions>
    abf5:	85 c0                	test   %eax,%eax
    abf7:	75 b0                	jne    aba9 <ema_modify_permissions_loop+0x99>
    abf9:	4d 89 fe             	mov    %r15,%r14
    abfc:	4d 39 f4             	cmp    %r14,%r12
    abff:	75 df                	jne    abe0 <ema_modify_permissions_loop+0xd0>
    ac01:	31 c0                	xor    %eax,%eax
    ac03:	48 83 c4 08          	add    $0x8,%rsp
    ac07:	5b                   	pop    %rbx
    ac08:	5d                   	pop    %rbp
    ac09:	41 5c                	pop    %r12
    ac0b:	41 5d                	pop    %r13
    ac0d:	41 5e                	pop    %r14
    ac0f:	41 5f                	pop    %r15
    ac11:	c3                   	ret    
    ac12:	48 39 ca             	cmp    %rcx,%rdx
    ac15:	72 8d                	jb     aba4 <ema_modify_permissions_loop+0x94>
    ac17:	31 c0                	xor    %eax,%eax
    ac19:	eb e8                	jmp    ac03 <ema_modify_permissions_loop+0xf3>
    ac1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000ac20 <ema_do_commit_data>:
    ac20:	f3 0f 1e fa          	endbr64 
    ac24:	55                   	push   %rbp
    ac25:	41 81 c8 00 02 00 00 	or     $0x200,%r8d
    ac2c:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ac30:	4d 63 c0             	movslq %r8d,%r8
    ac33:	48 89 e5             	mov    %rsp,%rbp
    ac36:	41 57                	push   %r15
    ac38:	41 56                	push   %r14
    ac3a:	49 89 f6             	mov    %rsi,%r14
    ac3d:	41 55                	push   %r13
    ac3f:	41 54                	push   %r12
    ac41:	49 89 d4             	mov    %rdx,%r12
    ac44:	53                   	push   %rbx
    ac45:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    ac49:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
    ac50:	48 89 7c 24 38       	mov    %rdi,0x38(%rsp)
    ac55:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    ac5c:	00 00 
    ac5e:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
    ac65:	00 
    ac66:	31 c0                	xor    %eax,%eax
    ac68:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
    ac6d:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
    ac74:	00 00 
    ac76:	0f 11 44 24 48       	movups %xmm0,0x48(%rsp)
    ac7b:	0f 11 44 24 58       	movups %xmm0,0x58(%rsp)
    ac80:	0f 11 44 24 68       	movups %xmm0,0x68(%rsp)
    ac85:	48 39 d6             	cmp    %rdx,%rsi
    ac88:	73 46                	jae    acd0 <ema_do_commit_data+0xb0>
    ac8a:	48 29 f1             	sub    %rsi,%rcx
    ac8d:	49 89 f7             	mov    %rsi,%r15
    ac90:	4c 8d 6c 24 40       	lea    0x40(%rsp),%r13
    ac95:	48 89 cb             	mov    %rcx,%rbx
    ac98:	eb 12                	jmp    acac <ema_do_commit_data+0x8c>
    ac9a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    aca0:	49 81 c7 00 10 00 00 	add    $0x1000,%r15
    aca7:	4d 39 e7             	cmp    %r12,%r15
    acaa:	73 24                	jae    acd0 <ema_do_commit_data+0xb0>
    acac:	4a 8d 14 3b          	lea    (%rbx,%r15,1),%rdx
    acb0:	4c 89 fe             	mov    %r15,%rsi
    acb3:	4c 89 ef             	mov    %r13,%rdi
    acb6:	e8 22 78 00 00       	call   124dd <do_eacceptcopy>
    acbb:	85 c0                	test   %eax,%eax
    acbd:	74 e1                	je     aca0 <ema_do_commit_data+0x80>
    acbf:	b8 0e 00 00 00       	mov    $0xe,%eax
    acc4:	eb 1a                	jmp    ace0 <ema_do_commit_data+0xc0>
    acc6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    accd:	00 00 00 
    acd0:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
    acd5:	4c 89 e2             	mov    %r12,%rdx
    acd8:	4c 89 f6             	mov    %r14,%rsi
    acdb:	e8 70 eb ff ff       	call   9850 <ema_set_eaccept>
    ace0:	48 8b 94 24 b8 00 00 	mov    0xb8(%rsp),%rdx
    ace7:	00 
    ace8:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    acef:	00 00 
    acf1:	75 0f                	jne    ad02 <ema_do_commit_data+0xe2>
    acf3:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    acf7:	5b                   	pop    %rbx
    acf8:	41 5c                	pop    %r12
    acfa:	41 5d                	pop    %r13
    acfc:	41 5e                	pop    %r14
    acfe:	41 5f                	pop    %r15
    ad00:	5d                   	pop    %rbp
    ad01:	c3                   	ret    
    ad02:	e8 79 5d 00 00       	call   10a80 <__stack_chk_fail>
    ad07:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    ad0e:	00 00 

000000000000ad10 <ema_do_commit_data_loop>:
    ad10:	f3 0f 1e fa          	endbr64 
    ad14:	41 57                	push   %r15
    ad16:	41 56                	push   %r14
    ad18:	41 55                	push   %r13
    ad1a:	41 54                	push   %r12
    ad1c:	55                   	push   %rbp
    ad1d:	53                   	push   %rbx
    ad1e:	48 89 cb             	mov    %rcx,%rbx
    ad21:	48 83 ec 18          	sub    $0x18,%rsp
    ad25:	48 8b 0f             	mov    (%rdi),%rcx
    ad28:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    ad2d:	44 89 4c 24 04       	mov    %r9d,0x4(%rsp)
    ad32:	48 39 f7             	cmp    %rsi,%rdi
    ad35:	0f 84 a2 00 00 00    	je     addd <ema_do_commit_data_loop+0xcd>
    ad3b:	48 89 fd             	mov    %rdi,%rbp
    ad3e:	49 89 f4             	mov    %rsi,%r12
    ad41:	49 89 d7             	mov    %rdx,%r15
    ad44:	49 89 fd             	mov    %rdi,%r13
    ad47:	eb 72                	jmp    adbb <ema_do_commit_data_loop+0xab>
    ad49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    ad50:	41 8b 45 10          	mov    0x10(%r13),%eax
    ad54:	a8 01                	test   $0x1,%al
    ad56:	75 71                	jne    adc9 <ema_do_commit_data_loop+0xb9>
    ad58:	a8 04                	test   $0x4,%al
    ad5a:	0f 84 86 00 00 00    	je     ade6 <ema_do_commit_data_loop+0xd6>
    ad60:	49 8b 7d 20          	mov    0x20(%r13),%rdi
    ad64:	49 8b 45 08          	mov    0x8(%r13),%rax
    ad68:	48 85 ff             	test   %rdi,%rdi
    ad6b:	74 39                	je     ada6 <ema_do_commit_data_loop+0x96>
    ad6d:	49 39 cf             	cmp    %rcx,%r15
    ad70:	48 89 ce             	mov    %rcx,%rsi
    ad73:	49 0f 43 f7          	cmovae %r15,%rsi
    ad77:	48 01 c8             	add    %rcx,%rax
    ad7a:	48 29 ce             	sub    %rcx,%rsi
    ad7d:	48 c1 ee 0c          	shr    $0xc,%rsi
    ad81:	48 39 d8             	cmp    %rbx,%rax
    ad84:	48 0f 47 c3          	cmova  %rbx,%rax
    ad88:	48 89 c2             	mov    %rax,%rdx
    ad8b:	48 29 ca             	sub    %rcx,%rdx
    ad8e:	48 c1 ea 0c          	shr    $0xc,%rdx
    ad92:	48 29 f2             	sub    %rsi,%rdx
    ad95:	e8 d6 e2 ff ff       	call   9070 <bit_array_test_range_any>
    ad9a:	84 c0                	test   %al,%al
    ad9c:	75 2b                	jne    adc9 <ema_do_commit_data_loop+0xb9>
    ad9e:	49 8b 4d 00          	mov    0x0(%r13),%rcx
    ada2:	49 8b 45 08          	mov    0x8(%r13),%rax
    ada6:	4d 8b 6d 38          	mov    0x38(%r13),%r13
    adaa:	48 01 c8             	add    %rcx,%rax
    adad:	4d 39 ec             	cmp    %r13,%r12
    adb0:	74 4e                	je     ae00 <ema_do_commit_data_loop+0xf0>
    adb2:	49 8b 4d 00          	mov    0x0(%r13),%rcx
    adb6:	48 39 c8             	cmp    %rcx,%rax
    adb9:	75 2b                	jne    ade6 <ema_do_commit_data_loop+0xd6>
    adbb:	49 8b 45 18          	mov    0x18(%r13),%rax
    adbf:	48 f7 d0             	not    %rax
    adc2:	a9 02 02 00 00       	test   $0x202,%eax
    adc7:	74 87                	je     ad50 <ema_do_commit_data_loop+0x40>
    adc9:	b8 0d 00 00 00       	mov    $0xd,%eax
    adce:	48 83 c4 18          	add    $0x18,%rsp
    add2:	5b                   	pop    %rbx
    add3:	5d                   	pop    %rbp
    add4:	41 5c                	pop    %r12
    add6:	41 5d                	pop    %r13
    add8:	41 5e                	pop    %r14
    adda:	41 5f                	pop    %r15
    addc:	c3                   	ret    
    addd:	48 39 d9             	cmp    %rbx,%rcx
    ade0:	0f 83 98 00 00 00    	jae    ae7e <ema_do_commit_data_loop+0x16e>
    ade6:	48 83 c4 18          	add    $0x18,%rsp
    adea:	b8 16 00 00 00       	mov    $0x16,%eax
    adef:	5b                   	pop    %rbx
    adf0:	5d                   	pop    %rbp
    adf1:	41 5c                	pop    %r12
    adf3:	41 5d                	pop    %r13
    adf5:	41 5e                	pop    %r14
    adf7:	41 5f                	pop    %r15
    adf9:	c3                   	ret    
    adfa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    ae00:	48 39 d8             	cmp    %rbx,%rax
    ae03:	72 e1                	jb     ade6 <ema_do_commit_data_loop+0xd6>
    ae05:	49 89 ee             	mov    %rbp,%r14
    ae08:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    ae0f:	00 
    ae10:	49 8b 16             	mov    (%r14),%rdx
    ae13:	4c 89 fe             	mov    %r15,%rsi
    ae16:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    ae1b:	4c 89 f7             	mov    %r14,%rdi
    ae1e:	44 8b 44 24 04       	mov    0x4(%rsp),%r8d
    ae23:	4c 39 fa             	cmp    %r15,%rdx
    ae26:	48 0f 43 f2          	cmovae %rdx,%rsi
    ae2a:	49 03 56 08          	add    0x8(%r14),%rdx
    ae2e:	48 89 f1             	mov    %rsi,%rcx
    ae31:	4c 29 f9             	sub    %r15,%rcx
    ae34:	48 01 c1             	add    %rax,%rcx
    ae37:	48 39 da             	cmp    %rbx,%rdx
    ae3a:	48 0f 47 d3          	cmova  %rbx,%rdx
    ae3e:	e8 dd fd ff ff       	call   ac20 <ema_do_commit_data>
    ae43:	85 c0                	test   %eax,%eax
    ae45:	75 87                	jne    adce <ema_do_commit_data_loop+0xbe>
    ae47:	4d 8b 76 38          	mov    0x38(%r14),%r14
    ae4b:	4d 39 ee             	cmp    %r13,%r14
    ae4e:	75 c0                	jne    ae10 <ema_do_commit_data_loop+0x100>
    ae50:	49 39 ec             	cmp    %rbp,%r12
    ae53:	74 29                	je     ae7e <ema_do_commit_data_loop+0x16e>
    ae55:	0f 1f 00             	nopl   (%rax)
    ae58:	8b 4c 24 04          	mov    0x4(%rsp),%ecx
    ae5c:	48 89 da             	mov    %rbx,%rdx
    ae5f:	4c 89 fe             	mov    %r15,%rsi
    ae62:	48 89 ef             	mov    %rbp,%rdi
    ae65:	4c 8b 75 38          	mov    0x38(%rbp),%r14
    ae69:	e8 82 f7 ff ff       	call   a5f0 <ema_modify_permissions>
    ae6e:	85 c0                	test   %eax,%eax
    ae70:	0f 85 58 ff ff ff    	jne    adce <ema_do_commit_data_loop+0xbe>
    ae76:	4c 89 f5             	mov    %r14,%rbp
    ae79:	49 39 ec             	cmp    %rbp,%r12
    ae7c:	75 da                	jne    ae58 <ema_do_commit_data_loop+0x148>
    ae7e:	48 83 c4 18          	add    $0x18,%rsp
    ae82:	31 c0                	xor    %eax,%eax
    ae84:	5b                   	pop    %rbx
    ae85:	5d                   	pop    %rbp
    ae86:	41 5c                	pop    %r12
    ae88:	41 5d                	pop    %r13
    ae8a:	41 5e                	pop    %r14
    ae8c:	41 5f                	pop    %r15
    ae8e:	c3                   	ret    
    ae8f:	90                   	nop

000000000000ae90 <ema_realloc_from_reserve_range>:
    ae90:	f3 0f 1e fa          	endbr64 
    ae94:	41 57                	push   %r15
    ae96:	41 56                	push   %r14
    ae98:	41 55                	push   %r13
    ae9a:	49 89 d5             	mov    %rdx,%r13
    ae9d:	41 54                	push   %r12
    ae9f:	49 89 cc             	mov    %rcx,%r12
    aea2:	55                   	push   %rbp
    aea3:	48 89 fd             	mov    %rdi,%rbp
    aea6:	53                   	push   %rbx
    aea7:	48 89 f3             	mov    %rsi,%rbx
    aeaa:	48 83 ec 28          	sub    $0x28,%rsp
    aeae:	4c 8b 37             	mov    (%rdi),%r14
    aeb1:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
    aeb6:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    aebb:	44 89 44 24 04       	mov    %r8d,0x4(%rsp)
    aec0:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    aec5:	48 39 f7             	cmp    %rsi,%rdi
    aec8:	74 4a                	je     af14 <ema_realloc_from_reserve_range+0x84>
    aeca:	49 89 ff             	mov    %rdi,%r15
    aecd:	eb 1a                	jmp    aee9 <ema_realloc_from_reserve_range+0x59>
    aecf:	90                   	nop
    aed0:	4d 39 37             	cmp    %r14,(%r15)
    aed3:	75 20                	jne    aef5 <ema_realloc_from_reserve_range+0x65>
    aed5:	41 f6 47 10 01       	testb  $0x1,0x10(%r15)
    aeda:	74 19                	je     aef5 <ema_realloc_from_reserve_range+0x65>
    aedc:	4d 03 77 08          	add    0x8(%r15),%r14
    aee0:	4d 8b 7f 38          	mov    0x38(%r15),%r15
    aee4:	49 39 df             	cmp    %rbx,%r15
    aee7:	74 27                	je     af10 <ema_realloc_from_reserve_range+0x80>
    aee9:	4c 89 ff             	mov    %r15,%rdi
    aeec:	e8 7f 07 00 00       	call   b670 <can_erealloc>
    aef1:	85 c0                	test   %eax,%eax
    aef3:	75 db                	jne    aed0 <ema_realloc_from_reserve_range+0x40>
    aef5:	48 83 c4 28          	add    $0x28,%rsp
    aef9:	31 c0                	xor    %eax,%eax
    aefb:	5b                   	pop    %rbx
    aefc:	5d                   	pop    %rbp
    aefd:	41 5c                	pop    %r12
    aeff:	41 5d                	pop    %r13
    af01:	41 5e                	pop    %r14
    af03:	41 5f                	pop    %r15
    af05:	c3                   	ret    
    af06:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    af0d:	00 00 00 
    af10:	4c 8b 75 00          	mov    0x0(%rbp),%r14
    af14:	48 8b 5b 40          	mov    0x40(%rbx),%rbx
    af18:	4d 39 ee             	cmp    %r13,%r14
    af1b:	72 6b                	jb     af88 <ema_realloc_from_reserve_range+0xf8>
    af1d:	48 8b 43 08          	mov    0x8(%rbx),%rax
    af21:	48 03 03             	add    (%rbx),%rax
    af24:	49 39 c4             	cmp    %rax,%r12
    af27:	0f 82 88 00 00 00    	jb     afb5 <ema_realloc_from_reserve_range+0x125>
    af2d:	48 8b 6b 38          	mov    0x38(%rbx),%rbp
    af31:	48 89 6c 24 10       	mov    %rbp,0x10(%rsp)
    af36:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
    af3b:	48 39 dd             	cmp    %rbx,%rbp
    af3e:	74 11                	je     af51 <ema_realloc_from_reserve_range+0xc1>
    af40:	48 89 df             	mov    %rbx,%rdi
    af43:	48 8b 5b 38          	mov    0x38(%rbx),%rbx
    af47:	e8 04 f2 ff ff       	call   a150 <ema_destroy>
    af4c:	48 39 dd             	cmp    %rbx,%rbp
    af4f:	75 ef                	jne    af40 <ema_realloc_from_reserve_range+0xb0>
    af51:	48 83 ec 08          	sub    $0x8,%rsp
    af55:	4c 89 e6             	mov    %r12,%rsi
    af58:	4c 89 ef             	mov    %r13,%rdi
    af5b:	55                   	push   %rbp
    af5c:	4c 8b 4c 24 78       	mov    0x78(%rsp),%r9
    af61:	4c 29 ee             	sub    %r13,%rsi
    af64:	4c 8b 44 24 70       	mov    0x70(%rsp),%r8
    af69:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    af6e:	8b 54 24 14          	mov    0x14(%rsp),%edx
    af72:	e8 c9 f0 ff ff       	call   a040 <ema_new>
    af77:	5a                   	pop    %rdx
    af78:	59                   	pop    %rcx
    af79:	48 83 c4 28          	add    $0x28,%rsp
    af7d:	5b                   	pop    %rbx
    af7e:	5d                   	pop    %rbp
    af7f:	41 5c                	pop    %r12
    af81:	41 5d                	pop    %r13
    af83:	41 5e                	pop    %r14
    af85:	41 5f                	pop    %r15
    af87:	c3                   	ret    
    af88:	31 d2                	xor    %edx,%edx
    af8a:	48 8d 4c 24 18       	lea    0x18(%rsp),%rcx
    af8f:	4c 89 ee             	mov    %r13,%rsi
    af92:	48 89 ef             	mov    %rbp,%rdi
    af95:	e8 66 ea ff ff       	call   9a00 <ema_split>
    af9a:	85 c0                	test   %eax,%eax
    af9c:	0f 85 53 ff ff ff    	jne    aef5 <ema_realloc_from_reserve_range+0x65>
    afa2:	48 39 dd             	cmp    %rbx,%rbp
    afa5:	0f 85 72 ff ff ff    	jne    af1d <ema_realloc_from_reserve_range+0x8d>
    afab:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
    afb0:	e9 68 ff ff ff       	jmp    af1d <ema_realloc_from_reserve_range+0x8d>
    afb5:	31 d2                	xor    %edx,%edx
    afb7:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
    afbc:	4c 89 e6             	mov    %r12,%rsi
    afbf:	48 89 df             	mov    %rbx,%rdi
    afc2:	e8 39 ea ff ff       	call   9a00 <ema_split>
    afc7:	85 c0                	test   %eax,%eax
    afc9:	0f 85 26 ff ff ff    	jne    aef5 <ema_realloc_from_reserve_range+0x65>
    afcf:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
    afd4:	e9 5d ff ff ff       	jmp    af36 <ema_realloc_from_reserve_range+0xa6>
    afd9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000afe0 <ema_do_alloc>:
    afe0:	f3 0f 1e fa          	endbr64 
    afe4:	41 55                	push   %r13
    afe6:	41 54                	push   %r12
    afe8:	55                   	push   %rbp
    afe9:	53                   	push   %rbx
    afea:	48 83 ec 08          	sub    $0x8,%rsp
    afee:	8b 6f 10             	mov    0x10(%rdi),%ebp
    aff1:	40 f6 c5 01          	test   $0x1,%bpl
    aff5:	74 11                	je     b008 <ema_do_alloc+0x28>
    aff7:	31 c0                	xor    %eax,%eax
    aff9:	48 83 c4 08          	add    $0x8,%rsp
    affd:	5b                   	pop    %rbx
    affe:	5d                   	pop    %rbp
    afff:	41 5c                	pop    %r12
    b001:	41 5d                	pop    %r13
    b003:	c3                   	ret    
    b004:	0f 1f 40 00          	nopl   0x0(%rax)
    b008:	4c 8b 6f 08          	mov    0x8(%rdi),%r13
    b00c:	8b 57 18             	mov    0x18(%rdi),%edx
    b00f:	48 89 fb             	mov    %rdi,%rbx
    b012:	89 e9                	mov    %ebp,%ecx
    b014:	4c 8b 27             	mov    (%rdi),%r12
    b017:	81 e2 00 ff 00 00    	and    $0xff00,%edx
    b01d:	4c 89 ee             	mov    %r13,%rsi
    b020:	4c 89 e7             	mov    %r12,%rdi
    b023:	e8 f8 a7 ff ff       	call   5820 <sgx_mm_alloc_ocall>
    b028:	89 c2                	mov    %eax,%edx
    b02a:	b8 0e 00 00 00       	mov    $0xe,%eax
    b02f:	85 d2                	test   %edx,%edx
    b031:	75 c6                	jne    aff9 <ema_do_alloc+0x19>
    b033:	40 f6 c5 02          	test   $0x2,%bpl
    b037:	74 37                	je     b070 <ema_do_alloc+0x90>
    b039:	89 e9                	mov    %ebp,%ecx
    b03b:	48 8b 53 18          	mov    0x18(%rbx),%rdx
    b03f:	4c 89 ee             	mov    %r13,%rsi
    b042:	4c 89 e7             	mov    %r12,%rdi
    b045:	c1 e9 04             	shr    $0x4,%ecx
    b048:	83 f1 01             	xor    $0x1,%ecx
    b04b:	83 e1 01             	and    $0x1,%ecx
    b04e:	e8 8d f1 ff ff       	call   a1e0 <do_commit>
    b053:	85 c0                	test   %eax,%eax
    b055:	75 a2                	jne    aff9 <ema_do_alloc+0x19>
    b057:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    b05b:	48 85 ff             	test   %rdi,%rdi
    b05e:	74 50                	je     b0b0 <ema_do_alloc+0xd0>
    b060:	e8 ab e1 ff ff       	call   9210 <bit_array_set_all>
    b065:	31 c0                	xor    %eax,%eax
    b067:	eb 90                	jmp    aff9 <ema_do_alloc+0x19>
    b069:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b070:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    b074:	48 85 ff             	test   %rdi,%rdi
    b077:	74 0f                	je     b088 <ema_do_alloc+0xa8>
    b079:	e8 92 e2 ff ff       	call   9310 <bit_array_reset_all>
    b07e:	31 c0                	xor    %eax,%eax
    b080:	e9 74 ff ff ff       	jmp    aff9 <ema_do_alloc+0x19>
    b085:	0f 1f 00             	nopl   (%rax)
    b088:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    b08c:	48 c1 ef 0c          	shr    $0xc,%rdi
    b090:	e8 7b de ff ff       	call   8f10 <bit_array_new_reset>
    b095:	48 89 43 20          	mov    %rax,0x20(%rbx)
    b099:	48 85 c0             	test   %rax,%rax
    b09c:	0f 85 55 ff ff ff    	jne    aff7 <ema_do_alloc+0x17>
    b0a2:	b8 0c 00 00 00       	mov    $0xc,%eax
    b0a7:	e9 4d ff ff ff       	jmp    aff9 <ema_do_alloc+0x19>
    b0ac:	0f 1f 40 00          	nopl   0x0(%rax)
    b0b0:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    b0b4:	48 c1 ef 0c          	shr    $0xc,%rdi
    b0b8:	e8 23 de ff ff       	call   8ee0 <bit_array_new_set>
    b0bd:	48 89 43 20          	mov    %rax,0x20(%rbx)
    b0c1:	48 85 c0             	test   %rax,%rax
    b0c4:	74 dc                	je     b0a2 <ema_do_alloc+0xc2>
    b0c6:	31 c0                	xor    %eax,%eax
    b0c8:	e9 2c ff ff ff       	jmp    aff9 <ema_do_alloc+0x19>
    b0cd:	0f 1f 00             	nopl   (%rax)

000000000000b0d0 <add_reserve>:
    b0d0:	41 54                	push   %r12
    b0d2:	55                   	push   %rbp
    b0d3:	53                   	push   %rbx
    b0d4:	31 db                	xor    %ebx,%ebx
    b0d6:	48 83 ec 10          	sub    $0x10,%rsp
    b0da:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    b0e1:	00 00 
    b0e3:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    b0e8:	31 c0                	xor    %eax,%eax
    b0ea:	80 3d cf f0 00 00 00 	cmpb   $0x0,0xf0cf(%rip)        # 1a1c0 <adding_reserve>
    b0f1:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    b0f8:	00 
    b0f9:	74 25                	je     b120 <add_reserve+0x50>
    b0fb:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    b100:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    b107:	00 00 
    b109:	0f 85 fb 00 00 00    	jne    b20a <add_reserve+0x13a>
    b10f:	48 83 c4 10          	add    $0x10,%rsp
    b113:	89 d8                	mov    %ebx,%eax
    b115:	5b                   	pop    %rbx
    b116:	5d                   	pop    %rbp
    b117:	41 5c                	pop    %r12
    b119:	c3                   	ret    
    b11a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b120:	48 8b 35 a1 ef 00 00 	mov    0xefa1(%rip),%rsi        # 1a0c8 <reserve_size_increment>
    b127:	49 89 e4             	mov    %rsp,%r12
    b12a:	48 89 fd             	mov    %rdi,%rbp
    b12d:	ba 01 00 00 00       	mov    $0x1,%edx
    b132:	4d 89 e1             	mov    %r12,%r9
    b135:	c6 05 84 f0 00 00 01 	movb   $0x1,0xf084(%rip)        # 1a1c0 <adding_reserve>
    b13c:	48 39 f7             	cmp    %rsi,%rdi
    b13f:	48 0f 43 f7          	cmovae %rdi,%rsi
    b143:	45 31 c0             	xor    %r8d,%r8d
    b146:	31 c9                	xor    %ecx,%ecx
    b148:	31 ff                	xor    %edi,%edi
    b14a:	48 89 35 77 ef 00 00 	mov    %rsi,0xef77(%rip)        # 1a0c8 <reserve_size_increment>
    b151:	48 81 c6 00 00 01 00 	add    $0x10000,%rsi
    b158:	e8 a3 0d 00 00       	call   bf00 <sgx_mm_alloc>
    b15d:	89 c3                	mov    %eax,%ebx
    b15f:	85 c0                	test   %eax,%eax
    b161:	75 2a                	jne    b18d <add_reserve+0xbd>
    b163:	48 8b 04 24          	mov    (%rsp),%rax
    b167:	48 8b 35 5a ef 00 00 	mov    0xef5a(%rip),%rsi        # 1a0c8 <reserve_size_increment>
    b16e:	4d 89 e1             	mov    %r12,%r9
    b171:	31 c9                	xor    %ecx,%ecx
    b173:	45 31 c0             	xor    %r8d,%r8d
    b176:	ba 44 00 00 00       	mov    $0x44,%edx
    b17b:	48 8d b8 00 80 00 00 	lea    0x8000(%rax),%rdi
    b182:	e8 79 0d 00 00       	call   bf00 <sgx_mm_alloc>
    b187:	89 c3                	mov    %eax,%ebx
    b189:	85 c0                	test   %eax,%eax
    b18b:	74 13                	je     b1a0 <add_reserve+0xd0>
    b18d:	c6 05 2c f0 00 00 00 	movb   $0x0,0xf02c(%rip)        # 1a1c0 <adding_reserve>
    b194:	e9 62 ff ff ff       	jmp    b0fb <add_reserve+0x2b>
    b199:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b1a0:	48 8b 3c 24          	mov    (%rsp),%rdi
    b1a4:	48 89 ee             	mov    %rbp,%rsi
    b1a7:	e8 44 0e 00 00       	call   bff0 <sgx_mm_commit>
    b1ac:	48 8b 04 24          	mov    (%rsp),%rax
    b1b0:	48 8b 15 11 f0 00 00 	mov    0xf011(%rip),%rdx        # 1a1c8 <reserve_list>
    b1b7:	c6 05 02 f0 00 00 00 	movb   $0x0,0xf002(%rip)        # 1a1c0 <adding_reserve>
    b1be:	66 48 0f 6e c0       	movq   %rax,%xmm0
    b1c3:	48 89 50 18          	mov    %rdx,0x18(%rax)
    b1c7:	ba 00 00 00 10       	mov    $0x10000000,%edx
    b1cc:	0f 16 05 f5 ee 00 00 	movhps 0xeef5(%rip),%xmm0        # 1a0c8 <reserve_size_increment>
    b1d3:	66 0f d4 05 c5 7e 00 	paddq  0x7ec5(%rip),%xmm0        # 130a0 <g_dyn_entry_table+0x70>
    b1da:	00 
    b1db:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    b1e2:	00 
    b1e3:	48 89 05 de ef 00 00 	mov    %rax,0xefde(%rip)        # 1a1c8 <reserve_list>
    b1ea:	0f 11 00             	movups %xmm0,(%rax)
    b1ed:	48 8b 05 d4 ee 00 00 	mov    0xeed4(%rip),%rax        # 1a0c8 <reserve_size_increment>
    b1f4:	48 01 c0             	add    %rax,%rax
    b1f7:	48 39 d0             	cmp    %rdx,%rax
    b1fa:	48 0f 47 c2          	cmova  %rdx,%rax
    b1fe:	48 89 05 c3 ee 00 00 	mov    %rax,0xeec3(%rip)        # 1a0c8 <reserve_size_increment>
    b205:	e9 f1 fe ff ff       	jmp    b0fb <add_reserve+0x2b>
    b20a:	e8 71 58 00 00       	call   10a80 <__stack_chk_fail>
    b20f:	90                   	nop

000000000000b210 <remove_from_list>:
    b210:	48 8b 07             	mov    (%rdi),%rax
    b213:	48 23 05 b6 ee 00 00 	and    0xeeb6(%rip),%rax        # 1a0d0 <size_mask>
    b21a:	48 89 c2             	mov    %rax,%rdx
    b21d:	48 8b 06             	mov    (%rsi),%rax
    b220:	48 39 f8             	cmp    %rdi,%rax
    b223:	74 43                	je     b268 <remove_from_list+0x58>
    b225:	48 83 fa 10          	cmp    $0x10,%rdx
    b229:	76 25                	jbe    b250 <remove_from_list+0x40>
    b22b:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    b22f:	48 8b 47 08          	mov    0x8(%rdi),%rax
    b233:	48 85 d2             	test   %rdx,%rdx
    b236:	74 04                	je     b23c <remove_from_list+0x2c>
    b238:	48 89 42 08          	mov    %rax,0x8(%rdx)
    b23c:	48 85 c0             	test   %rax,%rax
    b23f:	74 23                	je     b264 <remove_from_list+0x54>
    b241:	48 89 50 10          	mov    %rdx,0x10(%rax)
    b245:	c3                   	ret    
    b246:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b24d:	00 00 00 
    b250:	48 89 c2             	mov    %rax,%rdx
    b253:	48 8b 40 08          	mov    0x8(%rax),%rax
    b257:	48 39 f8             	cmp    %rdi,%rax
    b25a:	75 f4                	jne    b250 <remove_from_list+0x40>
    b25c:	48 8b 40 08          	mov    0x8(%rax),%rax
    b260:	48 89 42 08          	mov    %rax,0x8(%rdx)
    b264:	c3                   	ret    
    b265:	0f 1f 00             	nopl   (%rax)
    b268:	48 8b 40 08          	mov    0x8(%rax),%rax
    b26c:	48 89 06             	mov    %rax,(%rsi)
    b26f:	48 85 c0             	test   %rax,%rax
    b272:	74 f0                	je     b264 <remove_from_list+0x54>
    b274:	48 83 fa 10          	cmp    $0x10,%rdx
    b278:	76 ea                	jbe    b264 <remove_from_list+0x54>
    b27a:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    b281:	00 
    b282:	c3                   	ret    
    b283:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b28a:	00 00 00 
    b28d:	0f 1f 00             	nopl   (%rax)

000000000000b290 <put_free_block>:
    b290:	48 8b 05 39 ee 00 00 	mov    0xee39(%rip),%rax        # 1a0d0 <size_mask>
    b297:	48 8b 17             	mov    (%rdi),%rdx
    b29a:	48 21 c2             	and    %rax,%rdx
    b29d:	48 81 fa 08 08 00 00 	cmp    $0x808,%rdx
    b2a4:	76 2a                	jbe    b2d0 <put_free_block+0x40>
    b2a6:	48 8b 15 23 ef 00 00 	mov    0xef23(%rip),%rdx        # 1a1d0 <large_block_list>
    b2ad:	48 89 57 08          	mov    %rdx,0x8(%rdi)
    b2b1:	48 85 d2             	test   %rdx,%rdx
    b2b4:	74 0d                	je     b2c3 <put_free_block+0x33>
    b2b6:	48 23 02             	and    (%rdx),%rax
    b2b9:	48 83 f8 10          	cmp    $0x10,%rax
    b2bd:	76 04                	jbe    b2c3 <put_free_block+0x33>
    b2bf:	48 89 7a 10          	mov    %rdi,0x10(%rdx)
    b2c3:	48 89 3d 06 ef 00 00 	mov    %rdi,0xef06(%rip)        # 1a1d0 <large_block_list>
    b2ca:	c3                   	ret    
    b2cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b2d0:	48 8d 4a f0          	lea    -0x10(%rdx),%rcx
    b2d4:	48 8d 35 05 ef 00 00 	lea    0xef05(%rip),%rsi        # 1a1e0 <exact_block_list>
    b2db:	48 c1 e9 03          	shr    $0x3,%rcx
    b2df:	48 83 fa 0f          	cmp    $0xf,%rdx
    b2e3:	ba 00 00 00 00       	mov    $0x0,%edx
    b2e8:	48 0f 47 d1          	cmova  %rcx,%rdx
    b2ec:	48 8b 0c d6          	mov    (%rsi,%rdx,8),%rcx
    b2f0:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
    b2f4:	48 85 c9             	test   %rcx,%rcx
    b2f7:	74 0d                	je     b306 <put_free_block+0x76>
    b2f9:	48 23 01             	and    (%rcx),%rax
    b2fc:	48 83 f8 10          	cmp    $0x10,%rax
    b300:	76 04                	jbe    b306 <put_free_block+0x76>
    b302:	48 89 79 10          	mov    %rdi,0x10(%rcx)
    b306:	48 89 3c d6          	mov    %rdi,(%rsi,%rdx,8)
    b30a:	c3                   	ret    
    b30b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000b310 <neighbor_right>:
    b310:	4c 8b 05 b9 ed 00 00 	mov    0xedb9(%rip),%r8        # 1a0d0 <size_mask>
    b317:	4c 89 c2             	mov    %r8,%rdx
    b31a:	48 23 17             	and    (%rdi),%rdx
    b31d:	48 8d 04 17          	lea    (%rdi,%rdx,1),%rax
    b321:	74 2f                	je     b352 <neighbor_right+0x42>
    b323:	48 8b 0d 9e ee 00 00 	mov    0xee9e(%rip),%rcx        # 1a1c8 <reserve_list>
    b32a:	48 85 c9             	test   %rcx,%rcx
    b32d:	74 23                	je     b352 <neighbor_right+0x42>
    b32f:	48 89 ca             	mov    %rcx,%rdx
    b332:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b338:	48 8b 32             	mov    (%rdx),%rsi
    b33b:	48 39 f7             	cmp    %rsi,%rdi
    b33e:	72 09                	jb     b349 <neighbor_right+0x39>
    b340:	48 03 72 10          	add    0x10(%rdx),%rsi
    b344:	48 39 c6             	cmp    %rax,%rsi
    b347:	73 0f                	jae    b358 <neighbor_right+0x48>
    b349:	48 8b 52 18          	mov    0x18(%rdx),%rdx
    b34d:	48 85 d2             	test   %rdx,%rdx
    b350:	75 e6                	jne    b338 <neighbor_right+0x28>
    b352:	31 c0                	xor    %eax,%eax
    b354:	c3                   	ret    
    b355:	0f 1f 00             	nopl   (%rax)
    b358:	74 f8                	je     b352 <neighbor_right+0x42>
    b35a:	4c 23 00             	and    (%rax),%r8
    b35d:	74 f3                	je     b352 <neighbor_right+0x42>
    b35f:	4a 8d 3c 00          	lea    (%rax,%r8,1),%rdi
    b363:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b368:	48 8b 31             	mov    (%rcx),%rsi
    b36b:	48 39 f0             	cmp    %rsi,%rax
    b36e:	72 09                	jb     b379 <neighbor_right+0x69>
    b370:	48 03 71 10          	add    0x10(%rcx),%rsi
    b374:	48 39 fe             	cmp    %rdi,%rsi
    b377:	73 0f                	jae    b388 <neighbor_right+0x78>
    b379:	48 8b 49 18          	mov    0x18(%rcx),%rcx
    b37d:	48 85 c9             	test   %rcx,%rcx
    b380:	75 e6                	jne    b368 <neighbor_right+0x58>
    b382:	31 c0                	xor    %eax,%eax
    b384:	c3                   	ret    
    b385:	0f 1f 00             	nopl   (%rax)
    b388:	48 39 d1             	cmp    %rdx,%rcx
    b38b:	ba 00 00 00 00       	mov    $0x0,%edx
    b390:	48 0f 45 c2          	cmovne %rdx,%rax
    b394:	c3                   	ret    
    b395:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b39c:	00 00 00 
    b39f:	90                   	nop

000000000000b3a0 <payload_to_block>:
    b3a0:	f3 0f 1e fa          	endbr64 
    b3a4:	48 89 f8             	mov    %rdi,%rax
    b3a7:	48 2b 05 2a ed 00 00 	sub    0xed2a(%rip),%rax        # 1a0d8 <header_size>
    b3ae:	c3                   	ret    
    b3af:	90                   	nop

000000000000b3b0 <block_to_payload>:
    b3b0:	f3 0f 1e fa          	endbr64 
    b3b4:	48 8d 47 08          	lea    0x8(%rdi),%rax
    b3b8:	c3                   	ret    
    b3b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000b3c0 <is_alloced>:
    b3c0:	f3 0f 1e fa          	endbr64 
    b3c4:	48 8b 07             	mov    (%rdi),%rax
    b3c7:	83 e0 01             	and    $0x1,%eax
    b3ca:	c3                   	ret    
    b3cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000b3d0 <block_size>:
    b3d0:	f3 0f 1e fa          	endbr64 
    b3d4:	48 8b 07             	mov    (%rdi),%rax
    b3d7:	48 23 05 f2 ec 00 00 	and    0xecf2(%rip),%rax        # 1a0d0 <size_mask>
    b3de:	c3                   	ret    
    b3df:	90                   	nop

000000000000b3e0 <block_end>:
    b3e0:	f3 0f 1e fa          	endbr64 
    b3e4:	48 8b 07             	mov    (%rdi),%rax
    b3e7:	48 23 05 e2 ec 00 00 	and    0xece2(%rip),%rax        # 1a0d0 <size_mask>
    b3ee:	48 01 f8             	add    %rdi,%rax
    b3f1:	c3                   	ret    
    b3f2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b3f9:	00 00 00 
    b3fc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000b400 <emalloc_init_with_reserved_mem>:
    b400:	f3 0f 1e fa          	endbr64 
    b404:	48 83 ec 08          	sub    $0x8,%rsp
    b408:	e8 c3 fc ff ff       	call   b0d0 <add_reserve>
    b40d:	85 c0                	test   %eax,%eax
    b40f:	75 17                	jne    b428 <emalloc_init_with_reserved_mem+0x28>
    b411:	48 c7 05 ac ec 00 00 	movq   $0x10000,0xecac(%rip)        # 1a0c8 <reserve_size_increment>
    b418:	00 00 01 00 
    b41c:	48 83 c4 08          	add    $0x8,%rsp
    b420:	c3                   	ret    
    b421:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b428:	b8 0c 00 00 00       	mov    $0xc,%eax
    b42d:	48 83 c4 08          	add    $0x8,%rsp
    b431:	c3                   	ret    
    b432:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b439:	00 00 00 
    b43c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000b440 <emalloc>:
    b440:	f3 0f 1e fa          	endbr64 
    b444:	48 8b 05 8d ec 00 00 	mov    0xec8d(%rip),%rax        # 1a0d8 <header_size>
    b44b:	53                   	push   %rbx
    b44c:	bb 10 00 00 00       	mov    $0x10,%ebx
    b451:	48 8d 44 38 07       	lea    0x7(%rax,%rdi,1),%rax
    b456:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    b45a:	48 39 d8             	cmp    %rbx,%rax
    b45d:	48 0f 43 d8          	cmovae %rax,%rbx
    b461:	80 3d 58 ed 00 00 00 	cmpb   $0x0,0xed58(%rip)        # 1a1c0 <adding_reserve>
    b468:	74 36                	je     b4a0 <emalloc+0x60>
    b46a:	48 8b 05 6f f5 00 00 	mov    0xf56f(%rip),%rax        # 1a9e0 <meta_used>
    b471:	48 8d 14 03          	lea    (%rbx,%rax,1),%rdx
    b475:	48 81 fa 00 00 01 00 	cmp    $0x10000,%rdx
    b47c:	0f 87 1c 01 00 00    	ja     b59e <emalloc+0x15e>
    b482:	48 8d 0d 77 f5 00 00 	lea    0xf577(%rip),%rcx        # 1aa00 <meta_reserve>
    b489:	48 83 cb 01          	or     $0x1,%rbx
    b48d:	48 89 15 4c f5 00 00 	mov    %rdx,0xf54c(%rip)        # 1a9e0 <meta_used>
    b494:	48 01 c8             	add    %rcx,%rax
    b497:	48 89 18             	mov    %rbx,(%rax)
    b49a:	48 83 c0 08          	add    $0x8,%rax
    b49e:	5b                   	pop    %rbx
    b49f:	c3                   	ret    
    b4a0:	48 3d 08 08 00 00    	cmp    $0x808,%rax
    b4a6:	0f 86 74 01 00 00    	jbe    b620 <emalloc+0x1e0>
    b4ac:	48 8b 05 1d ed 00 00 	mov    0xed1d(%rip),%rax        # 1a1d0 <large_block_list>
    b4b3:	48 85 c0             	test   %rax,%rax
    b4b6:	0f 84 ec 00 00 00    	je     b5a8 <emalloc+0x168>
    b4bc:	45 31 c0             	xor    %r8d,%r8d
    b4bf:	90                   	nop
    b4c0:	48 8b 10             	mov    (%rax),%rdx
    b4c3:	48 39 da             	cmp    %rbx,%rdx
    b4c6:	72 3e                	jb     b506 <emalloc+0xc6>
    b4c8:	4d 85 c0             	test   %r8,%r8
    b4cb:	74 7b                	je     b548 <emalloc+0x108>
    b4cd:	49 3b 10             	cmp    (%r8),%rdx
    b4d0:	48 8b 48 08          	mov    0x8(%rax),%rcx
    b4d4:	73 20                	jae    b4f6 <emalloc+0xb6>
    b4d6:	48 85 c9             	test   %rcx,%rcx
    b4d9:	0f 84 89 01 00 00    	je     b668 <emalloc+0x228>
    b4df:	48 8b 11             	mov    (%rcx),%rdx
    b4e2:	49 89 c0             	mov    %rax,%r8
    b4e5:	48 39 da             	cmp    %rbx,%rdx
    b4e8:	72 19                	jb     b503 <emalloc+0xc3>
    b4ea:	48 89 c8             	mov    %rcx,%rax
    b4ed:	49 3b 10             	cmp    (%r8),%rdx
    b4f0:	48 8b 48 08          	mov    0x8(%rax),%rcx
    b4f4:	72 e0                	jb     b4d6 <emalloc+0x96>
    b4f6:	48 85 c9             	test   %rcx,%rcx
    b4f9:	74 14                	je     b50f <emalloc+0xcf>
    b4fb:	48 8b 11             	mov    (%rcx),%rdx
    b4fe:	48 39 da             	cmp    %rbx,%rdx
    b501:	73 e7                	jae    b4ea <emalloc+0xaa>
    b503:	48 89 c8             	mov    %rcx,%rax
    b506:	48 8b 40 08          	mov    0x8(%rax),%rax
    b50a:	48 85 c0             	test   %rax,%rax
    b50d:	75 b1                	jne    b4c0 <emalloc+0x80>
    b50f:	4d 85 c0             	test   %r8,%r8
    b512:	0f 84 90 00 00 00    	je     b5a8 <emalloc+0x168>
    b518:	48 8d 35 b1 ec 00 00 	lea    0xecb1(%rip),%rsi        # 1a1d0 <large_block_list>
    b51f:	4c 89 c7             	mov    %r8,%rdi
    b522:	e8 e9 fc ff ff       	call   b210 <remove_from_list>
    b527:	49 8b 00             	mov    (%r8),%rax
    b52a:	48 8d 53 10          	lea    0x10(%rbx),%rdx
    b52e:	48 39 d0             	cmp    %rdx,%rax
    b531:	0f 83 c9 00 00 00    	jae    b600 <emalloc+0x1c0>
    b537:	48 83 cb 01          	or     $0x1,%rbx
    b53b:	49 8d 40 08          	lea    0x8(%r8),%rax
    b53f:	49 89 18             	mov    %rbx,(%r8)
    b542:	5b                   	pop    %rbx
    b543:	c3                   	ret    
    b544:	0f 1f 40 00          	nopl   0x0(%rax)
    b548:	49 89 c0             	mov    %rax,%r8
    b54b:	eb b9                	jmp    b506 <emalloc+0xc6>
    b54d:	0f 1f 00             	nopl   (%rax)
    b550:	48 8d bb 1f 00 01 00 	lea    0x1001f(%rbx),%rdi
    b557:	66 31 ff             	xor    %di,%di
    b55a:	e8 71 fb ff ff       	call   b0d0 <add_reserve>
    b55f:	85 c0                	test   %eax,%eax
    b561:	75 3b                	jne    b59e <emalloc+0x15e>
    b563:	48 8b 15 5e ec 00 00 	mov    0xec5e(%rip),%rdx        # 1a1c8 <reserve_list>
    b56a:	48 85 d2             	test   %rdx,%rdx
    b56d:	75 12                	jne    b581 <emalloc+0x141>
    b56f:	eb 2d                	jmp    b59e <emalloc+0x15e>
    b571:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b578:	48 8b 52 18          	mov    0x18(%rdx),%rdx
    b57c:	48 85 d2             	test   %rdx,%rdx
    b57f:	74 1d                	je     b59e <emalloc+0x15e>
    b581:	48 8b 42 10          	mov    0x10(%rdx),%rax
    b585:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
    b589:	48 29 c1             	sub    %rax,%rcx
    b58c:	48 39 d9             	cmp    %rbx,%rcx
    b58f:	72 e7                	jb     b578 <emalloc+0x138>
    b591:	48 8d 0c 03          	lea    (%rbx,%rax,1),%rcx
    b595:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
    b599:	48 03 02             	add    (%rdx),%rax
    b59c:	75 4c                	jne    b5ea <emalloc+0x1aa>
    b59e:	31 c0                	xor    %eax,%eax
    b5a0:	5b                   	pop    %rbx
    b5a1:	c3                   	ret    
    b5a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b5a8:	48 8b 15 19 ec 00 00 	mov    0xec19(%rip),%rdx        # 1a1c8 <reserve_list>
    b5af:	48 85 d2             	test   %rdx,%rdx
    b5b2:	75 15                	jne    b5c9 <emalloc+0x189>
    b5b4:	eb 9a                	jmp    b550 <emalloc+0x110>
    b5b6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b5bd:	00 00 00 
    b5c0:	48 8b 52 18          	mov    0x18(%rdx),%rdx
    b5c4:	48 85 d2             	test   %rdx,%rdx
    b5c7:	74 87                	je     b550 <emalloc+0x110>
    b5c9:	48 8b 42 10          	mov    0x10(%rdx),%rax
    b5cd:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
    b5d1:	48 29 c1             	sub    %rax,%rcx
    b5d4:	48 39 d9             	cmp    %rbx,%rcx
    b5d7:	72 e7                	jb     b5c0 <emalloc+0x180>
    b5d9:	48 8d 0c 03          	lea    (%rbx,%rax,1),%rcx
    b5dd:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
    b5e1:	48 03 02             	add    (%rdx),%rax
    b5e4:	0f 84 66 ff ff ff    	je     b550 <emalloc+0x110>
    b5ea:	48 83 cb 01          	or     $0x1,%rbx
    b5ee:	48 83 c0 08          	add    $0x8,%rax
    b5f2:	48 89 58 f8          	mov    %rbx,-0x8(%rax)
    b5f6:	5b                   	pop    %rbx
    b5f7:	c3                   	ret    
    b5f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    b5ff:	00 
    b600:	49 8d 3c 18          	lea    (%r8,%rbx,1),%rdi
    b604:	48 29 d8             	sub    %rbx,%rax
    b607:	49 89 18             	mov    %rbx,(%r8)
    b60a:	48 89 07             	mov    %rax,(%rdi)
    b60d:	e8 7e fc ff ff       	call   b290 <put_free_block>
    b612:	e9 20 ff ff ff       	jmp    b537 <emalloc+0xf7>
    b617:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    b61e:	00 00 
    b620:	48 8d 43 f0          	lea    -0x10(%rbx),%rax
    b624:	48 8d 15 b5 eb 00 00 	lea    0xebb5(%rip),%rdx        # 1a1e0 <exact_block_list>
    b62b:	48 c1 e8 03          	shr    $0x3,%rax
    b62f:	4c 8b 04 c2          	mov    (%rdx,%rax,8),%r8
    b633:	4d 85 c0             	test   %r8,%r8
    b636:	0f 84 6c ff ff ff    	je     b5a8 <emalloc+0x168>
    b63c:	49 8b 48 08          	mov    0x8(%r8),%rcx
    b640:	48 89 0c c2          	mov    %rcx,(%rdx,%rax,8)
    b644:	48 85 c9             	test   %rcx,%rcx
    b647:	0f 84 ea fe ff ff    	je     b537 <emalloc+0xf7>
    b64d:	48 85 c0             	test   %rax,%rax
    b650:	0f 84 e1 fe ff ff    	je     b537 <emalloc+0xf7>
    b656:	48 c7 41 10 00 00 00 	movq   $0x0,0x10(%rcx)
    b65d:	00 
    b65e:	e9 d4 fe ff ff       	jmp    b537 <emalloc+0xf7>
    b663:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b668:	49 89 c0             	mov    %rax,%r8
    b66b:	e9 9f fe ff ff       	jmp    b50f <emalloc+0xcf>

000000000000b670 <can_erealloc>:
    b670:	f3 0f 1e fa          	endbr64 
    b674:	80 3d 45 eb 00 00 00 	cmpb   $0x0,0xeb45(%rip)        # 1a1c0 <adding_reserve>
    b67b:	b8 01 00 00 00       	mov    $0x1,%eax
    b680:	75 30                	jne    b6b2 <can_erealloc+0x42>
    b682:	48 2b 3d 4f ea 00 00 	sub    0xea4f(%rip),%rdi        # 1a0d8 <header_size>
    b689:	48 8d 15 70 f3 01 00 	lea    0x1f370(%rip),%rdx        # 2aa00 <mm_user_end>
    b690:	48 39 d7             	cmp    %rdx,%rdi
    b693:	73 1d                	jae    b6b2 <can_erealloc+0x42>
    b695:	48 8b 05 34 ea 00 00 	mov    0xea34(%rip),%rax        # 1a0d0 <size_mask>
    b69c:	48 23 07             	and    (%rdi),%rax
    b69f:	48 01 c7             	add    %rax,%rdi
    b6a2:	48 8d 82 00 00 ff ff 	lea    -0x10000(%rdx),%rax
    b6a9:	48 39 f8             	cmp    %rdi,%rax
    b6ac:	0f 93 c0             	setae  %al
    b6af:	0f b6 c0             	movzbl %al,%eax
    b6b2:	c3                   	ret    
    b6b3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b6ba:	00 00 00 
    b6bd:	0f 1f 00             	nopl   (%rax)

000000000000b6c0 <efree>:
    b6c0:	f3 0f 1e fa          	endbr64 
    b6c4:	48 2b 3d 0d ea 00 00 	sub    0xea0d(%rip),%rdi        # 1a0d8 <header_size>
    b6cb:	41 54                	push   %r12
    b6cd:	48 8d 05 2c f3 01 00 	lea    0x1f32c(%rip),%rax        # 2aa00 <mm_user_end>
    b6d4:	55                   	push   %rbp
    b6d5:	4c 8b 1d f4 e9 00 00 	mov    0xe9f4(%rip),%r11        # 1a0d0 <size_mask>
    b6dc:	49 89 fc             	mov    %rdi,%r12
    b6df:	53                   	push   %rbx
    b6e0:	4c 8b 0f             	mov    (%rdi),%r9
    b6e3:	4d 21 d9             	and    %r11,%r9
    b6e6:	48 39 c7             	cmp    %rax,%rdi
    b6e9:	73 14                	jae    b6ff <efree+0x3f>
    b6eb:	49 8d 04 39          	lea    (%r9,%rdi,1),%rax
    b6ef:	48 8d 15 0a f3 00 00 	lea    0xf30a(%rip),%rdx        # 1aa00 <meta_reserve>
    b6f6:	48 39 c2             	cmp    %rax,%rdx
    b6f9:	0f 82 f9 00 00 00    	jb     b7f8 <efree+0x138>
    b6ff:	4d 85 c9             	test   %r9,%r9
    b702:	74 2e                	je     b732 <efree+0x72>
    b704:	4c 8b 15 bd ea 00 00 	mov    0xeabd(%rip),%r10        # 1a1c8 <reserve_list>
    b70b:	4d 85 d2             	test   %r10,%r10
    b70e:	74 22                	je     b732 <efree+0x72>
    b710:	4b 8d 14 21          	lea    (%r9,%r12,1),%rdx
    b714:	0f 1f 40 00          	nopl   0x0(%rax)
    b718:	49 8b 02             	mov    (%r10),%rax
    b71b:	49 39 c4             	cmp    %rax,%r12
    b71e:	72 09                	jb     b729 <efree+0x69>
    b720:	49 03 42 10          	add    0x10(%r10),%rax
    b724:	48 39 d0             	cmp    %rdx,%rax
    b727:	73 17                	jae    b740 <efree+0x80>
    b729:	4d 8b 52 18          	mov    0x18(%r10),%r10
    b72d:	4d 85 d2             	test   %r10,%r10
    b730:	75 e6                	jne    b718 <efree+0x58>
    b732:	e8 00 6e 00 00       	call   12537 <abort>
    b737:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    b73e:	00 00 
    b740:	4d 89 0c 24          	mov    %r9,(%r12)
    b744:	49 c7 44 24 08 00 00 	movq   $0x0,0x8(%r12)
    b74b:	00 00 
    b74d:	49 83 f9 10          	cmp    $0x10,%r9
    b751:	0f 87 b9 00 00 00    	ja     b810 <efree+0x150>
    b757:	4c 89 e7             	mov    %r12,%rdi
    b75a:	48 8d 1d 7f ea 00 00 	lea    0xea7f(%rip),%rbx        # 1a1e0 <exact_block_list>
    b761:	48 8d 2d 68 ea 00 00 	lea    0xea68(%rip),%rbp        # 1a1d0 <large_block_list>
    b768:	e8 a3 fb ff ff       	call   b310 <neighbor_right>
    b76d:	48 89 c7             	mov    %rax,%rdi
    b770:	48 85 c0             	test   %rax,%rax
    b773:	75 3c                	jne    b7b1 <efree+0xf1>
    b775:	e9 3d 01 00 00       	jmp    b8b7 <efree+0x1f7>
    b77a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b780:	48 89 de             	mov    %rbx,%rsi
    b783:	48 83 f9 0f          	cmp    $0xf,%rcx
    b787:	76 0b                	jbe    b794 <efree+0xd4>
    b789:	48 8d 71 f0          	lea    -0x10(%rcx),%rsi
    b78d:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
    b791:	48 01 de             	add    %rbx,%rsi
    b794:	e8 77 fa ff ff       	call   b210 <remove_from_list>
    b799:	49 03 0c 24          	add    (%r12),%rcx
    b79d:	49 89 0c 24          	mov    %rcx,(%r12)
    b7a1:	49 89 c9             	mov    %rcx,%r9
    b7a4:	e8 67 fb ff ff       	call   b310 <neighbor_right>
    b7a9:	48 89 c7             	mov    %rax,%rdi
    b7ac:	48 85 c0             	test   %rax,%rax
    b7af:	74 23                	je     b7d4 <efree+0x114>
    b7b1:	48 8b 0f             	mov    (%rdi),%rcx
    b7b4:	f6 c1 01             	test   $0x1,%cl
    b7b7:	75 17                	jne    b7d0 <efree+0x110>
    b7b9:	4c 21 d9             	and    %r11,%rcx
    b7bc:	48 81 f9 08 08 00 00 	cmp    $0x808,%rcx
    b7c3:	76 bb                	jbe    b780 <efree+0xc0>
    b7c5:	48 89 ee             	mov    %rbp,%rsi
    b7c8:	e8 43 fa ff ff       	call   b210 <remove_from_list>
    b7cd:	eb ca                	jmp    b799 <efree+0xd9>
    b7cf:	90                   	nop
    b7d0:	4d 8b 0c 24          	mov    (%r12),%r9
    b7d4:	4d 21 cb             	and    %r9,%r11
    b7d7:	49 8b 1a             	mov    (%r10),%rbx
    b7da:	4c 89 e0             	mov    %r12,%rax
    b7dd:	48 29 d8             	sub    %rbx,%rax
    b7e0:	49 01 c3             	add    %rax,%r11
    b7e3:	4d 3b 5a 10          	cmp    0x10(%r10),%r11
    b7e7:	74 37                	je     b820 <efree+0x160>
    b7e9:	5b                   	pop    %rbx
    b7ea:	4c 89 e7             	mov    %r12,%rdi
    b7ed:	5d                   	pop    %rbp
    b7ee:	41 5c                	pop    %r12
    b7f0:	e9 9b fa ff ff       	jmp    b290 <put_free_block>
    b7f5:	0f 1f 00             	nopl   (%rax)
    b7f8:	80 3d c1 e9 00 00 00 	cmpb   $0x0,0xe9c1(%rip)        # 1a1c0 <adding_reserve>
    b7ff:	0f 84 2d ff ff ff    	je     b732 <efree+0x72>
    b805:	5b                   	pop    %rbx
    b806:	5d                   	pop    %rbp
    b807:	41 5c                	pop    %r12
    b809:	c3                   	ret    
    b80a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b810:	49 c7 44 24 10 00 00 	movq   $0x0,0x10(%r12)
    b817:	00 00 
    b819:	e9 39 ff ff ff       	jmp    b757 <efree+0x97>
    b81e:	66 90                	xchg   %ax,%ax
    b820:	48 8b 0d a9 e9 00 00 	mov    0xe9a9(%rip),%rcx        # 1a1d0 <large_block_list>
    b827:	4d 29 cb             	sub    %r9,%r11
    b82a:	4d 89 5a 10          	mov    %r11,0x10(%r10)
    b82e:	4e 8d 04 1b          	lea    (%rbx,%r11,1),%r8
    b832:	48 85 c9             	test   %rcx,%rcx
    b835:	75 12                	jne    b849 <efree+0x189>
    b837:	eb 6d                	jmp    b8a6 <efree+0x1e6>
    b839:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b840:	48 8b 49 08          	mov    0x8(%rcx),%rcx
    b844:	48 85 c9             	test   %rcx,%rcx
    b847:	74 5d                	je     b8a6 <efree+0x1e6>
    b849:	48 8b 01             	mov    (%rcx),%rax
    b84c:	48 01 c8             	add    %rcx,%rax
    b84f:	49 39 c0             	cmp    %rax,%r8
    b852:	75 ec                	jne    b840 <efree+0x180>
    b854:	48 8d 35 75 e9 00 00 	lea    0xe975(%rip),%rsi        # 1a1d0 <large_block_list>
    b85b:	48 89 cf             	mov    %rcx,%rdi
    b85e:	e8 ad f9 ff ff       	call   b210 <remove_from_list>
    b863:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b868:	4c 2b 01             	sub    (%rcx),%r8
    b86b:	48 8b 0d 5e e9 00 00 	mov    0xe95e(%rip),%rcx        # 1a1d0 <large_block_list>
    b872:	48 85 c9             	test   %rcx,%rcx
    b875:	75 12                	jne    b889 <efree+0x1c9>
    b877:	eb 36                	jmp    b8af <efree+0x1ef>
    b879:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b880:	48 8b 49 08          	mov    0x8(%rcx),%rcx
    b884:	48 85 c9             	test   %rcx,%rcx
    b887:	74 17                	je     b8a0 <efree+0x1e0>
    b889:	48 8b 01             	mov    (%rcx),%rax
    b88c:	48 01 c8             	add    %rcx,%rax
    b88f:	49 39 c0             	cmp    %rax,%r8
    b892:	75 ec                	jne    b880 <efree+0x1c0>
    b894:	48 89 cf             	mov    %rcx,%rdi
    b897:	e8 74 f9 ff ff       	call   b210 <remove_from_list>
    b89c:	eb ca                	jmp    b868 <efree+0x1a8>
    b89e:	66 90                	xchg   %ax,%ax
    b8a0:	4d 89 c3             	mov    %r8,%r11
    b8a3:	49 29 db             	sub    %rbx,%r11
    b8a6:	4d 89 5a 10          	mov    %r11,0x10(%r10)
    b8aa:	5b                   	pop    %rbx
    b8ab:	5d                   	pop    %rbp
    b8ac:	41 5c                	pop    %r12
    b8ae:	c3                   	ret    
    b8af:	49 29 d8             	sub    %rbx,%r8
    b8b2:	4d 89 c3             	mov    %r8,%r11
    b8b5:	eb ef                	jmp    b8a6 <efree+0x1e6>
    b8b7:	4d 89 cb             	mov    %r9,%r11
    b8ba:	e9 18 ff ff ff       	jmp    b7d7 <efree+0x117>
    b8bf:	90                   	nop

000000000000b8c0 <mm_init_ema>:
    b8c0:	f3 0f 1e fa          	endbr64 
    b8c4:	41 57                	push   %r15
    b8c6:	4d 89 cf             	mov    %r9,%r15
    b8c9:	41 56                	push   %r14
    b8cb:	4d 89 c6             	mov    %r8,%r14
    b8ce:	41 55                	push   %r13
    b8d0:	41 89 cd             	mov    %ecx,%r13d
    b8d3:	41 54                	push   %r12
    b8d5:	41 89 d4             	mov    %edx,%r12d
    b8d8:	55                   	push   %rbp
    b8d9:	48 89 f5             	mov    %rsi,%rbp
    b8dc:	53                   	push   %rbx
    b8dd:	48 89 fb             	mov    %rdi,%rbx
    b8e0:	48 83 ec 18          	sub    $0x18,%rsp
    b8e4:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    b8eb:	00 00 
    b8ed:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    b8f2:	31 c0                	xor    %eax,%eax
    b8f4:	e8 47 a1 ff ff       	call   5a40 <sgx_mm_is_within_enclave>
    b8f9:	89 c2                	mov    %eax,%edx
    b8fb:	b8 0d 00 00 00       	mov    $0xd,%eax
    b900:	84 d2                	test   %dl,%dl
    b902:	0f 84 7d 00 00 00    	je     b985 <mm_init_ema+0xc5>
    b908:	41 f7 c4 7e f8 ff ff 	test   $0xfffff87e,%r12d
    b90f:	75 6f                	jne    b980 <mm_init_ema+0xc0>
    b911:	41 83 fd 07          	cmp    $0x7,%r13d
    b915:	77 69                	ja     b980 <mm_init_ema+0xc0>
    b917:	48 89 e1             	mov    %rsp,%rcx
    b91a:	48 89 ea             	mov    %rbp,%rdx
    b91d:	48 8d 3d 44 e7 00 00 	lea    0xe744(%rip),%rdi        # 1a068 <g_rts_ema_root>
    b924:	48 89 de             	mov    %rbx,%rsi
    b927:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    b92e:	00 
    b92f:	e8 2c e6 ff ff       	call   9f60 <find_free_region_at>
    b934:	84 c0                	test   %al,%al
    b936:	74 48                	je     b980 <mm_init_ema+0xc0>
    b938:	48 83 ec 08          	sub    $0x8,%rsp
    b93c:	44 89 e1             	mov    %r12d,%ecx
    b93f:	41 0f b6 d4          	movzbl %r12b,%edx
    b943:	48 89 df             	mov    %rbx,%rdi
    b946:	ff 74 24 08          	push   0x8(%rsp)
    b94a:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    b950:	4d 89 f9             	mov    %r15,%r9
    b953:	4d 89 f0             	mov    %r14,%r8
    b956:	44 09 e9             	or     %r13d,%ecx
    b959:	48 89 ee             	mov    %rbp,%rsi
    b95c:	48 63 c9             	movslq %ecx,%rcx
    b95f:	e8 dc e6 ff ff       	call   a040 <ema_new>
    b964:	48 89 c7             	mov    %rax,%rdi
    b967:	58                   	pop    %rax
    b968:	5a                   	pop    %rdx
    b969:	48 85 ff             	test   %rdi,%rdi
    b96c:	74 3a                	je     b9a8 <mm_init_ema+0xe8>
    b96e:	31 c0                	xor    %eax,%eax
    b970:	41 83 e4 01          	and    $0x1,%r12d
    b974:	75 0f                	jne    b985 <mm_init_ema+0xc5>
    b976:	e8 55 de ff ff       	call   97d0 <ema_set_eaccept_full>
    b97b:	eb 08                	jmp    b985 <mm_init_ema+0xc5>
    b97d:	0f 1f 00             	nopl   (%rax)
    b980:	b8 16 00 00 00       	mov    $0x16,%eax
    b985:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    b98a:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    b991:	00 00 
    b993:	75 1a                	jne    b9af <mm_init_ema+0xef>
    b995:	48 83 c4 18          	add    $0x18,%rsp
    b999:	5b                   	pop    %rbx
    b99a:	5d                   	pop    %rbp
    b99b:	41 5c                	pop    %r12
    b99d:	41 5d                	pop    %r13
    b99f:	41 5e                	pop    %r14
    b9a1:	41 5f                	pop    %r15
    b9a3:	c3                   	ret    
    b9a4:	0f 1f 40 00          	nopl   0x0(%rax)
    b9a8:	b8 0c 00 00 00       	mov    $0xc,%eax
    b9ad:	eb d6                	jmp    b985 <mm_init_ema+0xc5>
    b9af:	e8 cc 50 00 00       	call   10a80 <__stack_chk_fail>
    b9b4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b9bb:	00 00 00 
    b9be:	66 90                	xchg   %ax,%ax

000000000000b9c0 <mm_alloc>:
    b9c0:	f3 0f 1e fa          	endbr64 
    b9c4:	48 83 ec 10          	sub    $0x10,%rsp
    b9c8:	48 8d 05 99 e6 00 00 	lea    0xe699(%rip),%rax        # 1a068 <g_rts_ema_root>
    b9cf:	50                   	push   %rax
    b9d0:	e8 2b 02 00 00       	call   bc00 <mm_alloc_internal>
    b9d5:	48 83 c4 18          	add    $0x18,%rsp
    b9d9:	c3                   	ret    
    b9da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000b9e0 <mm_commit>:
    b9e0:	f3 0f 1e fa          	endbr64 
    b9e4:	48 8d 15 7d e6 00 00 	lea    0xe67d(%rip),%rdx        # 1a068 <g_rts_ema_root>
    b9eb:	e9 40 05 00 00       	jmp    bf30 <mm_commit_internal>

000000000000b9f0 <mm_uncommit>:
    b9f0:	f3 0f 1e fa          	endbr64 
    b9f4:	48 8d 15 6d e6 00 00 	lea    0xe66d(%rip),%rdx        # 1a068 <g_rts_ema_root>
    b9fb:	e9 00 06 00 00       	jmp    c000 <mm_uncommit_internal>

000000000000ba00 <mm_dealloc>:
    ba00:	f3 0f 1e fa          	endbr64 
    ba04:	48 8d 15 5d e6 00 00 	lea    0xe65d(%rip),%rdx        # 1a068 <g_rts_ema_root>
    ba0b:	e9 c0 06 00 00       	jmp    c0d0 <mm_dealloc_internal>

000000000000ba10 <mm_commit_data>:
    ba10:	f3 0f 1e fa          	endbr64 
    ba14:	4c 8d 05 4d e6 00 00 	lea    0xe64d(%rip),%r8        # 1a068 <g_rts_ema_root>
    ba1b:	e9 80 07 00 00       	jmp    c1a0 <mm_commit_data_internal>

000000000000ba20 <mm_modify_type>:
    ba20:	f3 0f 1e fa          	endbr64 
    ba24:	48 8d 0d 3d e6 00 00 	lea    0xe63d(%rip),%rcx        # 1a068 <g_rts_ema_root>
    ba2b:	e9 90 08 00 00       	jmp    c2c0 <mm_modify_type_internal>

000000000000ba30 <mm_modify_permissions>:
    ba30:	f3 0f 1e fa          	endbr64 
    ba34:	48 8d 0d 2d e6 00 00 	lea    0xe62d(%rip),%rcx        # 1a068 <g_rts_ema_root>
    ba3b:	e9 40 0a 00 00       	jmp    c480 <mm_modify_permissions_internal>

000000000000ba40 <sgx_mm_enclave_pfhandler>:
    ba40:	f3 0f 1e fa          	endbr64 
    ba44:	41 56                	push   %r14
    ba46:	41 55                	push   %r13
    ba48:	49 89 fd             	mov    %rdi,%r13
    ba4b:	41 54                	push   %r12
    ba4d:	55                   	push   %rbp
    ba4e:	53                   	push   %rbx
    ba4f:	31 db                	xor    %ebx,%ebx
    ba51:	48 83 ec 10          	sub    $0x10,%rsp
    ba55:	4c 8b 37             	mov    (%rdi),%r14
    ba58:	48 8b 3d b1 ef 01 00 	mov    0x1efb1(%rip),%rdi        # 2aa10 <mm_lock>
    ba5f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    ba66:	00 00 
    ba68:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    ba6d:	31 c0                	xor    %eax,%eax
    ba6f:	e8 6c 9f ff ff       	call   59e0 <sgx_mm_mutex_lock>
    ba74:	85 c0                	test   %eax,%eax
    ba76:	74 28                	je     baa0 <sgx_mm_enclave_pfhandler+0x60>
    ba78:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    ba7d:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    ba84:	00 00 
    ba86:	0f 85 50 01 00 00    	jne    bbdc <sgx_mm_enclave_pfhandler+0x19c>
    ba8c:	48 83 c4 10          	add    $0x10,%rsp
    ba90:	89 d8                	mov    %ebx,%eax
    ba92:	5b                   	pop    %rbx
    ba93:	5d                   	pop    %rbp
    ba94:	41 5c                	pop    %r12
    ba96:	41 5d                	pop    %r13
    ba98:	41 5e                	pop    %r14
    ba9a:	c3                   	ret    
    ba9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    baa0:	49 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%r14
    baa7:	48 8d 3d 52 e5 00 00 	lea    0xe552(%rip),%rdi        # 1a000 <g_user_ema_root>
    baae:	89 c3                	mov    %eax,%ebx
    bab0:	4c 89 f6             	mov    %r14,%rsi
    bab3:	e8 48 de ff ff       	call   9900 <search_ema>
    bab8:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    babf:	00 
    bac0:	48 89 c5             	mov    %rax,%rbp
    bac3:	48 85 c0             	test   %rax,%rax
    bac6:	0f 84 b4 00 00 00    	je     bb80 <sgx_mm_enclave_pfhandler+0x140>
    bacc:	48 89 e6             	mov    %rsp,%rsi
    bacf:	48 89 ef             	mov    %rbp,%rdi
    bad2:	e8 d9 dc ff ff       	call   97b0 <ema_fault_handler>
    bad7:	49 89 c4             	mov    %rax,%r12
    bada:	48 85 c0             	test   %rax,%rax
    badd:	74 21                	je     bb00 <sgx_mm_enclave_pfhandler+0xc0>
    badf:	48 8b 3d 2a ef 01 00 	mov    0x1ef2a(%rip),%rdi        # 2aa10 <mm_lock>
    bae6:	e8 15 9f ff ff       	call   5a00 <sgx_mm_mutex_unlock>
    baeb:	48 8b 34 24          	mov    (%rsp),%rsi
    baef:	4c 89 ef             	mov    %r13,%rdi
    baf2:	41 ff d4             	call   *%r12
    baf5:	89 c3                	mov    %eax,%ebx
    baf7:	e9 7c ff ff ff       	jmp    ba78 <sgx_mm_enclave_pfhandler+0x38>
    bafc:	0f 1f 40 00          	nopl   0x0(%rax)
    bb00:	4c 89 f6             	mov    %r14,%rsi
    bb03:	48 89 ef             	mov    %rbp,%rdi
    bb06:	e8 c5 dd ff ff       	call   98d0 <ema_page_committed>
    bb0b:	84 c0                	test   %al,%al
    bb0d:	74 31                	je     bb40 <sgx_mm_enclave_pfhandler+0x100>
    bb0f:	41 f6 45 08 02       	testb  $0x2,0x8(%r13)
    bb14:	0f 84 86 00 00 00    	je     bba0 <sgx_mm_enclave_pfhandler+0x160>
    bb1a:	48 89 ef             	mov    %rbp,%rdi
    bb1d:	e8 7e dc ff ff       	call   97a0 <get_ema_si_flags>
    bb22:	48 d1 e8             	shr    %rax
    bb25:	48 89 c3             	mov    %rax,%rbx
    bb28:	83 e3 01             	and    $0x1,%ebx
    bb2b:	f7 db                	neg    %ebx
    bb2d:	48 8b 3d dc ee 01 00 	mov    0x1eedc(%rip),%rdi        # 2aa10 <mm_lock>
    bb34:	e8 c7 9e ff ff       	call   5a00 <sgx_mm_mutex_unlock>
    bb39:	e9 3a ff ff ff       	jmp    ba78 <sgx_mm_enclave_pfhandler+0x38>
    bb3e:	66 90                	xchg   %ax,%ax
    bb40:	48 89 ef             	mov    %rbp,%rdi
    bb43:	e8 48 dc ff ff       	call   9790 <get_ema_alloc_flags>
    bb48:	a8 04                	test   $0x4,%al
    bb4a:	0f 84 91 00 00 00    	je     bbe1 <sgx_mm_enclave_pfhandler+0x1a1>
    bb50:	41 f6 45 08 02       	testb  $0x2,0x8(%r13)
    bb55:	74 69                	je     bbc0 <sgx_mm_enclave_pfhandler+0x180>
    bb57:	48 89 ef             	mov    %rbp,%rdi
    bb5a:	e8 41 dc ff ff       	call   97a0 <get_ema_si_flags>
    bb5f:	a8 02                	test   $0x2,%al
    bb61:	74 ca                	je     bb2d <sgx_mm_enclave_pfhandler+0xed>
    bb63:	49 8d 96 00 10 00 00 	lea    0x1000(%r14),%rdx
    bb6a:	4c 89 f6             	mov    %r14,%rsi
    bb6d:	48 89 ef             	mov    %rbp,%rdi
    bb70:	e8 4b e7 ff ff       	call   a2c0 <ema_do_commit>
    bb75:	85 c0                	test   %eax,%eax
    bb77:	75 68                	jne    bbe1 <sgx_mm_enclave_pfhandler+0x1a1>
    bb79:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
    bb7e:	eb ad                	jmp    bb2d <sgx_mm_enclave_pfhandler+0xed>
    bb80:	4c 89 f6             	mov    %r14,%rsi
    bb83:	48 8d 3d de e4 00 00 	lea    0xe4de(%rip),%rdi        # 1a068 <g_rts_ema_root>
    bb8a:	e8 71 dd ff ff       	call   9900 <search_ema>
    bb8f:	48 89 c5             	mov    %rax,%rbp
    bb92:	48 85 c0             	test   %rax,%rax
    bb95:	0f 85 31 ff ff ff    	jne    bacc <sgx_mm_enclave_pfhandler+0x8c>
    bb9b:	eb 90                	jmp    bb2d <sgx_mm_enclave_pfhandler+0xed>
    bb9d:	0f 1f 00             	nopl   (%rax)
    bba0:	48 89 ef             	mov    %rbp,%rdi
    bba3:	e8 f8 db ff ff       	call   97a0 <get_ema_si_flags>
    bba8:	a8 01                	test   $0x1,%al
    bbaa:	0f 84 7d ff ff ff    	je     bb2d <sgx_mm_enclave_pfhandler+0xed>
    bbb0:	41 f6 45 08 02       	testb  $0x2,0x8(%r13)
    bbb5:	74 c2                	je     bb79 <sgx_mm_enclave_pfhandler+0x139>
    bbb7:	e9 5e ff ff ff       	jmp    bb1a <sgx_mm_enclave_pfhandler+0xda>
    bbbc:	0f 1f 40 00          	nopl   0x0(%rax)
    bbc0:	48 89 ef             	mov    %rbp,%rdi
    bbc3:	e8 d8 db ff ff       	call   97a0 <get_ema_si_flags>
    bbc8:	a8 01                	test   $0x1,%al
    bbca:	0f 84 5d ff ff ff    	je     bb2d <sgx_mm_enclave_pfhandler+0xed>
    bbd0:	41 f6 45 08 02       	testb  $0x2,0x8(%r13)
    bbd5:	74 8c                	je     bb63 <sgx_mm_enclave_pfhandler+0x123>
    bbd7:	e9 7b ff ff ff       	jmp    bb57 <sgx_mm_enclave_pfhandler+0x117>
    bbdc:	e8 9f 4e 00 00       	call   10a80 <__stack_chk_fail>
    bbe1:	48 8b 3d 28 ee 01 00 	mov    0x1ee28(%rip),%rdi        # 2aa10 <mm_lock>
    bbe8:	e8 13 9e ff ff       	call   5a00 <sgx_mm_mutex_unlock>
    bbed:	e8 45 69 00 00       	call   12537 <abort>
    bbf2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    bbf9:	00 00 00 
    bbfc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000bc00 <mm_alloc_internal>:
    bc00:	f3 0f 1e fa          	endbr64 
    bc04:	41 57                	push   %r15
    bc06:	41 56                	push   %r14
    bc08:	41 55                	push   %r13
    bc0a:	41 54                	push   %r12
    bc0c:	55                   	push   %rbp
    bc0d:	53                   	push   %rbx
    bc0e:	48 83 ec 68          	sub    $0x68,%rsp
    bc12:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    bc19:	00 00 
    bc1b:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    bc20:	31 c0                	xor    %eax,%eax
    bc22:	4c 8b b4 24 a0 00 00 	mov    0xa0(%rsp),%r14
    bc29:	00 
    bc2a:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
    bc31:	00 00 
    bc33:	f6 c2 07             	test   $0x7,%dl
    bc36:	74 60                	je     bc98 <mm_alloc_internal+0x98>
    bc38:	4c 89 c5             	mov    %r8,%rbp
    bc3b:	89 d0                	mov    %edx,%eax
    bc3d:	41 89 d0             	mov    %edx,%r8d
    bc40:	25 00 ff 00 00       	and    $0xff00,%eax
    bc45:	41 81 e0 00 ff 00 00 	and    $0xff00,%r8d
    bc4c:	f6 c6 f8             	test   $0xf8,%dh
    bc4f:	75 47                	jne    bc98 <mm_alloc_internal+0x98>
    bc51:	85 c0                	test   %eax,%eax
    bc53:	b8 00 02 00 00       	mov    $0x200,%eax
    bc58:	49 89 f7             	mov    %rsi,%r15
    bc5b:	4c 0f 44 c0          	cmove  %rax,%r8
    bc5f:	f7 c6 ff 0f 00 00    	test   $0xfff,%esi
    bc65:	75 31                	jne    bc98 <mm_alloc_internal+0x98>
    bc67:	48 89 cb             	mov    %rcx,%rbx
    bc6a:	89 d1                	mov    %edx,%ecx
    bc6c:	4d 89 cc             	mov    %r9,%r12
    bc6f:	c1 e9 18             	shr    $0x18,%ecx
    bc72:	74 54                	je     bcc8 <mm_alloc_internal+0xc8>
    bc74:	83 f9 0b             	cmp    $0xb,%ecx
    bc77:	76 1f                	jbe    bc98 <mm_alloc_internal+0x98>
    bc79:	b8 01 00 00 00       	mov    $0x1,%eax
    bc7e:	49 c7 c5 ff ff ff ff 	mov    $0xffffffffffffffff,%r13
    bc85:	48 d3 e0             	shl    %cl,%rax
    bc88:	49 d3 e5             	shl    %cl,%r13
    bc8b:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    bc90:	49 f7 d5             	not    %r13
    bc93:	eb 42                	jmp    bcd7 <mm_alloc_internal+0xd7>
    bc95:	0f 1f 00             	nopl   (%rax)
    bc98:	b9 16 00 00 00       	mov    $0x16,%ecx
    bc9d:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
    bca2:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    bca9:	00 00 
    bcab:	0f 85 41 02 00 00    	jne    bef2 <mm_alloc_internal+0x2f2>
    bcb1:	48 83 c4 68          	add    $0x68,%rsp
    bcb5:	89 c8                	mov    %ecx,%eax
    bcb7:	5b                   	pop    %rbx
    bcb8:	5d                   	pop    %rbp
    bcb9:	41 5c                	pop    %r12
    bcbb:	41 5d                	pop    %r13
    bcbd:	41 5e                	pop    %r14
    bcbf:	41 5f                	pop    %r15
    bcc1:	c3                   	ret    
    bcc2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    bcc8:	48 c7 44 24 08 00 10 	movq   $0x1000,0x8(%rsp)
    bccf:	00 00 
    bcd1:	41 bd ff 0f 00 00    	mov    $0xfff,%r13d
    bcd7:	48 89 7c 24 38       	mov    %rdi,0x38(%rsp)
    bcdc:	49 21 fd             	and    %rdi,%r13
    bcdf:	75 b7                	jne    bc98 <mm_alloc_internal+0x98>
    bce1:	48 85 ff             	test   %rdi,%rdi
    bce4:	74 23                	je     bd09 <mm_alloc_internal+0x109>
    bce6:	4c 89 fe             	mov    %r15,%rsi
    bce9:	89 54 24 1c          	mov    %edx,0x1c(%rsp)
    bced:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
    bcf2:	e8 49 9d ff ff       	call   5a40 <sgx_mm_is_within_enclave>
    bcf7:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
    bcfc:	8b 54 24 1c          	mov    0x1c(%rsp),%edx
    bd00:	b9 0d 00 00 00       	mov    $0xd,%ecx
    bd05:	84 c0                	test   %al,%al
    bd07:	74 94                	je     bc9d <mm_alloc_internal+0x9d>
    bd09:	48 8b 3d 00 ed 01 00 	mov    0x1ed00(%rip),%rdi        # 2aa10 <mm_lock>
    bd10:	89 54 24 1c          	mov    %edx,0x1c(%rsp)
    bd14:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
    bd19:	e8 c2 9c ff ff       	call   59e0 <sgx_mm_mutex_lock>
    bd1e:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
    bd23:	8b 54 24 1c          	mov    0x1c(%rsp),%edx
    bd27:	b9 0e 00 00 00       	mov    $0xe,%ecx
    bd2c:	85 c0                	test   %eax,%eax
    bd2e:	0f 85 69 ff ff ff    	jne    bc9d <mm_alloc_internal+0x9d>
    bd34:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
    bd39:	49 83 c8 03          	or     $0x3,%r8
    bd3d:	0f b6 c2             	movzbl %dl,%eax
    bd40:	f6 c2 01             	test   $0x1,%dl
    bd43:	89 44 24 10          	mov    %eax,0x10(%rsp)
    bd47:	4d 0f 44 e8          	cmove  %r8,%r13
    bd4b:	48 85 f6             	test   %rsi,%rsi
    bd4e:	0f 85 9c 00 00 00    	jne    bdf0 <mm_alloc_internal+0x1f0>
    bd54:	4c 8d 44 24 40       	lea    0x40(%rsp),%r8
    bd59:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    bd5e:	48 8d 4c 24 38       	lea    0x38(%rsp),%rcx
    bd63:	4c 89 fe             	mov    %r15,%rsi
    bd66:	4c 89 f7             	mov    %r14,%rdi
    bd69:	e8 e2 de ff ff       	call   9c50 <find_free_region>
    bd6e:	84 c0                	test   %al,%al
    bd70:	0f 84 0a 01 00 00    	je     be80 <mm_alloc_internal+0x280>
    bd76:	48 83 ec 08          	sub    $0x8,%rsp
    bd7a:	49 89 e9             	mov    %rbp,%r9
    bd7d:	49 89 d8             	mov    %rbx,%r8
    bd80:	4c 89 e9             	mov    %r13,%rcx
    bd83:	ff 74 24 48          	push   0x48(%rsp)
    bd87:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
    bd8c:	4c 89 fe             	mov    %r15,%rsi
    bd8f:	8b 54 24 20          	mov    0x20(%rsp),%edx
    bd93:	e8 a8 e2 ff ff       	call   a040 <ema_new>
    bd98:	48 89 c7             	mov    %rax,%rdi
    bd9b:	58                   	pop    %rax
    bd9c:	5a                   	pop    %rdx
    bd9d:	48 85 ff             	test   %rdi,%rdi
    bda0:	0f 84 da 00 00 00    	je     be80 <mm_alloc_internal+0x280>
    bda6:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    bdab:	e8 30 f2 ff ff       	call   afe0 <ema_do_alloc>
    bdb0:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    bdb5:	85 c0                	test   %eax,%eax
    bdb7:	89 c1                	mov    %eax,%ecx
    bdb9:	0f 85 21 01 00 00    	jne    bee0 <mm_alloc_internal+0x2e0>
    bdbf:	4d 85 e4             	test   %r12,%r12
    bdc2:	74 09                	je     bdcd <mm_alloc_internal+0x1cd>
    bdc4:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    bdc9:	49 89 04 24          	mov    %rax,(%r12)
    bdcd:	48 8b 3d 3c ec 01 00 	mov    0x1ec3c(%rip),%rdi        # 2aa10 <mm_lock>
    bdd4:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
    bdd8:	e8 23 9c ff ff       	call   5a00 <sgx_mm_mutex_unlock>
    bddd:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
    bde1:	e9 b7 fe ff ff       	jmp    bc9d <mm_alloc_internal+0x9d>
    bde6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    bded:	00 00 00 
    bdf0:	83 e2 40             	and    $0x40,%edx
    bdf3:	4a 8d 04 3e          	lea    (%rsi,%r15,1),%rax
    bdf7:	48 8d 4c 24 48       	lea    0x48(%rsp),%rcx
    bdfc:	4c 89 f7             	mov    %r14,%rdi
    bdff:	89 54 24 1c          	mov    %edx,0x1c(%rsp)
    be03:	4c 8d 44 24 50       	lea    0x50(%rsp),%r8
    be08:	48 89 c2             	mov    %rax,%rdx
    be0b:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
    be12:	00 00 
    be14:	48 c7 44 24 50 00 00 	movq   $0x0,0x50(%rsp)
    be1b:	00 00 
    be1d:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    be22:	48 89 74 24 28       	mov    %rsi,0x28(%rsp)
    be27:	e8 64 db ff ff       	call   9990 <search_ema_range>
    be2c:	85 c0                	test   %eax,%eax
    be2e:	75 60                	jne    be90 <mm_alloc_internal+0x290>
    be30:	55                   	push   %rbp
    be31:	4d 89 e9             	mov    %r13,%r9
    be34:	53                   	push   %rbx
    be35:	48 8b 7c 24 58       	mov    0x58(%rsp),%rdi
    be3a:	44 8b 44 24 20       	mov    0x20(%rsp),%r8d
    be3f:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
    be44:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
    be49:	48 8b 74 24 60       	mov    0x60(%rsp),%rsi
    be4e:	e8 3d f0 ff ff       	call   ae90 <ema_realloc_from_reserve_range>
    be53:	41 58                	pop    %r8
    be55:	41 59                	pop    %r9
    be57:	48 89 c7             	mov    %rax,%rdi
    be5a:	48 85 c0             	test   %rax,%rax
    be5d:	0f 85 43 ff ff ff    	jne    bda6 <mm_alloc_internal+0x1a6>
    be63:	8b 7c 24 1c          	mov    0x1c(%rsp),%edi
    be67:	b9 11 00 00 00       	mov    $0x11,%ecx
    be6c:	85 ff                	test   %edi,%edi
    be6e:	0f 84 e0 fe ff ff    	je     bd54 <mm_alloc_internal+0x154>
    be74:	e9 54 ff ff ff       	jmp    bdcd <mm_alloc_internal+0x1cd>
    be79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    be80:	b9 0c 00 00 00       	mov    $0xc,%ecx
    be85:	e9 43 ff ff ff       	jmp    bdcd <mm_alloc_internal+0x1cd>
    be8a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    be90:	4c 8d 44 24 40       	lea    0x40(%rsp),%r8
    be95:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
    be9a:	4c 89 fa             	mov    %r15,%rdx
    be9d:	4c 89 f7             	mov    %r14,%rdi
    bea0:	4c 89 c1             	mov    %r8,%rcx
    bea3:	4c 89 44 24 20       	mov    %r8,0x20(%rsp)
    bea8:	e8 b3 e0 ff ff       	call   9f60 <find_free_region_at>
    bead:	3c 01                	cmp    $0x1,%al
    beaf:	0f 84 c1 fe ff ff    	je     bd76 <mm_alloc_internal+0x176>
    beb5:	8b 74 24 1c          	mov    0x1c(%rsp),%esi
    beb9:	b9 01 00 00 00       	mov    $0x1,%ecx
    bebe:	85 f6                	test   %esi,%esi
    bec0:	0f 85 07 ff ff ff    	jne    bdcd <mm_alloc_internal+0x1cd>
    bec6:	84 c0                	test   %al,%al
    bec8:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
    becd:	0f 84 86 fe ff ff    	je     bd59 <mm_alloc_internal+0x159>
    bed3:	e9 9e fe ff ff       	jmp    bd76 <mm_alloc_internal+0x176>
    bed8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    bedf:	00 
    bee0:	89 44 24 08          	mov    %eax,0x8(%rsp)
    bee4:	e8 67 e2 ff ff       	call   a150 <ema_destroy>
    bee9:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
    beed:	e9 db fe ff ff       	jmp    bdcd <mm_alloc_internal+0x1cd>
    bef2:	e8 89 4b 00 00       	call   10a80 <__stack_chk_fail>
    bef7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    befe:	00 00 

000000000000bf00 <sgx_mm_alloc>:
    bf00:	f3 0f 1e fa          	endbr64 
    bf04:	f6 c2 80             	test   $0x80,%dl
    bf07:	75 17                	jne    bf20 <sgx_mm_alloc+0x20>
    bf09:	48 83 ec 10          	sub    $0x10,%rsp
    bf0d:	48 8d 05 ec e0 00 00 	lea    0xe0ec(%rip),%rax        # 1a000 <g_user_ema_root>
    bf14:	50                   	push   %rax
    bf15:	e8 e6 fc ff ff       	call   bc00 <mm_alloc_internal>
    bf1a:	48 83 c4 18          	add    $0x18,%rsp
    bf1e:	c3                   	ret    
    bf1f:	90                   	nop
    bf20:	b8 16 00 00 00       	mov    $0x16,%eax
    bf25:	c3                   	ret    
    bf26:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    bf2d:	00 00 00 

000000000000bf30 <mm_commit_internal>:
    bf30:	f3 0f 1e fa          	endbr64 
    bf34:	41 55                	push   %r13
    bf36:	49 89 d5             	mov    %rdx,%r13
    bf39:	41 54                	push   %r12
    bf3b:	49 89 fc             	mov    %rdi,%r12
    bf3e:	55                   	push   %rbp
    bf3f:	48 89 f5             	mov    %rsi,%rbp
    bf42:	53                   	push   %rbx
    bf43:	bb 0e 00 00 00       	mov    $0xe,%ebx
    bf48:	48 83 ec 28          	sub    $0x28,%rsp
    bf4c:	48 8b 3d bd ea 01 00 	mov    0x1eabd(%rip),%rdi        # 2aa10 <mm_lock>
    bf53:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    bf5a:	00 00 
    bf5c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    bf61:	31 c0                	xor    %eax,%eax
    bf63:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    bf6a:	00 00 
    bf6c:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    bf73:	00 00 
    bf75:	e8 66 9a ff ff       	call   59e0 <sgx_mm_mutex_lock>
    bf7a:	85 c0                	test   %eax,%eax
    bf7c:	75 47                	jne    bfc5 <mm_commit_internal+0x95>
    bf7e:	4c 01 e5             	add    %r12,%rbp
    bf81:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    bf86:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    bf8b:	4c 89 e6             	mov    %r12,%rsi
    bf8e:	48 89 ea             	mov    %rbp,%rdx
    bf91:	4c 89 ef             	mov    %r13,%rdi
    bf94:	bb 16 00 00 00       	mov    $0x16,%ebx
    bf99:	e8 f2 d9 ff ff       	call   9990 <search_ema_range>
    bf9e:	85 c0                	test   %eax,%eax
    bfa0:	78 17                	js     bfb9 <mm_commit_internal+0x89>
    bfa2:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    bfa7:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    bfac:	48 89 e9             	mov    %rbp,%rcx
    bfaf:	4c 89 e2             	mov    %r12,%rdx
    bfb2:	e8 f9 e3 ff ff       	call   a3b0 <ema_do_commit_loop>
    bfb7:	89 c3                	mov    %eax,%ebx
    bfb9:	48 8b 3d 50 ea 01 00 	mov    0x1ea50(%rip),%rdi        # 2aa10 <mm_lock>
    bfc0:	e8 3b 9a ff ff       	call   5a00 <sgx_mm_mutex_unlock>
    bfc5:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    bfca:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    bfd1:	00 00 
    bfd3:	75 0d                	jne    bfe2 <mm_commit_internal+0xb2>
    bfd5:	48 83 c4 28          	add    $0x28,%rsp
    bfd9:	89 d8                	mov    %ebx,%eax
    bfdb:	5b                   	pop    %rbx
    bfdc:	5d                   	pop    %rbp
    bfdd:	41 5c                	pop    %r12
    bfdf:	41 5d                	pop    %r13
    bfe1:	c3                   	ret    
    bfe2:	e8 99 4a 00 00       	call   10a80 <__stack_chk_fail>
    bfe7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    bfee:	00 00 

000000000000bff0 <sgx_mm_commit>:
    bff0:	f3 0f 1e fa          	endbr64 
    bff4:	48 8d 15 05 e0 00 00 	lea    0xe005(%rip),%rdx        # 1a000 <g_user_ema_root>
    bffb:	e9 30 ff ff ff       	jmp    bf30 <mm_commit_internal>

000000000000c000 <mm_uncommit_internal>:
    c000:	f3 0f 1e fa          	endbr64 
    c004:	41 55                	push   %r13
    c006:	49 89 d5             	mov    %rdx,%r13
    c009:	41 54                	push   %r12
    c00b:	49 89 fc             	mov    %rdi,%r12
    c00e:	55                   	push   %rbp
    c00f:	48 89 f5             	mov    %rsi,%rbp
    c012:	53                   	push   %rbx
    c013:	bb 0e 00 00 00       	mov    $0xe,%ebx
    c018:	48 83 ec 28          	sub    $0x28,%rsp
    c01c:	48 8b 3d ed e9 01 00 	mov    0x1e9ed(%rip),%rdi        # 2aa10 <mm_lock>
    c023:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c02a:	00 00 
    c02c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    c031:	31 c0                	xor    %eax,%eax
    c033:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    c03a:	00 00 
    c03c:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    c043:	00 00 
    c045:	e8 96 99 ff ff       	call   59e0 <sgx_mm_mutex_lock>
    c04a:	85 c0                	test   %eax,%eax
    c04c:	75 47                	jne    c095 <mm_uncommit_internal+0x95>
    c04e:	4c 01 e5             	add    %r12,%rbp
    c051:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    c056:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    c05b:	4c 89 e6             	mov    %r12,%rsi
    c05e:	48 89 ea             	mov    %rbp,%rdx
    c061:	4c 89 ef             	mov    %r13,%rdi
    c064:	bb 16 00 00 00       	mov    $0x16,%ebx
    c069:	e8 22 d9 ff ff       	call   9990 <search_ema_range>
    c06e:	85 c0                	test   %eax,%eax
    c070:	78 17                	js     c089 <mm_uncommit_internal+0x89>
    c072:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    c077:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    c07c:	48 89 e9             	mov    %rbp,%rcx
    c07f:	4c 89 e2             	mov    %r12,%rdx
    c082:	e8 69 e9 ff ff       	call   a9f0 <ema_do_uncommit_loop>
    c087:	89 c3                	mov    %eax,%ebx
    c089:	48 8b 3d 80 e9 01 00 	mov    0x1e980(%rip),%rdi        # 2aa10 <mm_lock>
    c090:	e8 6b 99 ff ff       	call   5a00 <sgx_mm_mutex_unlock>
    c095:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    c09a:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    c0a1:	00 00 
    c0a3:	75 0d                	jne    c0b2 <mm_uncommit_internal+0xb2>
    c0a5:	48 83 c4 28          	add    $0x28,%rsp
    c0a9:	89 d8                	mov    %ebx,%eax
    c0ab:	5b                   	pop    %rbx
    c0ac:	5d                   	pop    %rbp
    c0ad:	41 5c                	pop    %r12
    c0af:	41 5d                	pop    %r13
    c0b1:	c3                   	ret    
    c0b2:	e8 c9 49 00 00       	call   10a80 <__stack_chk_fail>
    c0b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    c0be:	00 00 

000000000000c0c0 <sgx_mm_uncommit>:
    c0c0:	f3 0f 1e fa          	endbr64 
    c0c4:	48 8d 15 35 df 00 00 	lea    0xdf35(%rip),%rdx        # 1a000 <g_user_ema_root>
    c0cb:	e9 30 ff ff ff       	jmp    c000 <mm_uncommit_internal>

000000000000c0d0 <mm_dealloc_internal>:
    c0d0:	f3 0f 1e fa          	endbr64 
    c0d4:	41 55                	push   %r13
    c0d6:	49 89 d5             	mov    %rdx,%r13
    c0d9:	41 54                	push   %r12
    c0db:	49 89 fc             	mov    %rdi,%r12
    c0de:	55                   	push   %rbp
    c0df:	48 89 f5             	mov    %rsi,%rbp
    c0e2:	53                   	push   %rbx
    c0e3:	bb 0e 00 00 00       	mov    $0xe,%ebx
    c0e8:	48 83 ec 28          	sub    $0x28,%rsp
    c0ec:	48 8b 3d 1d e9 01 00 	mov    0x1e91d(%rip),%rdi        # 2aa10 <mm_lock>
    c0f3:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c0fa:	00 00 
    c0fc:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    c101:	31 c0                	xor    %eax,%eax
    c103:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    c10a:	00 00 
    c10c:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    c113:	00 00 
    c115:	e8 c6 98 ff ff       	call   59e0 <sgx_mm_mutex_lock>
    c11a:	85 c0                	test   %eax,%eax
    c11c:	75 47                	jne    c165 <mm_dealloc_internal+0x95>
    c11e:	4c 01 e5             	add    %r12,%rbp
    c121:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    c126:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    c12b:	4c 89 e6             	mov    %r12,%rsi
    c12e:	48 89 ea             	mov    %rbp,%rdx
    c131:	4c 89 ef             	mov    %r13,%rdi
    c134:	bb 16 00 00 00       	mov    $0x16,%ebx
    c139:	e8 52 d8 ff ff       	call   9990 <search_ema_range>
    c13e:	85 c0                	test   %eax,%eax
    c140:	78 17                	js     c159 <mm_dealloc_internal+0x89>
    c142:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    c147:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    c14c:	48 89 e9             	mov    %rbp,%rcx
    c14f:	4c 89 e2             	mov    %r12,%rdx
    c152:	e8 49 e8 ff ff       	call   a9a0 <ema_do_dealloc_loop>
    c157:	89 c3                	mov    %eax,%ebx
    c159:	48 8b 3d b0 e8 01 00 	mov    0x1e8b0(%rip),%rdi        # 2aa10 <mm_lock>
    c160:	e8 9b 98 ff ff       	call   5a00 <sgx_mm_mutex_unlock>
    c165:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    c16a:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    c171:	00 00 
    c173:	75 0d                	jne    c182 <mm_dealloc_internal+0xb2>
    c175:	48 83 c4 28          	add    $0x28,%rsp
    c179:	89 d8                	mov    %ebx,%eax
    c17b:	5b                   	pop    %rbx
    c17c:	5d                   	pop    %rbp
    c17d:	41 5c                	pop    %r12
    c17f:	41 5d                	pop    %r13
    c181:	c3                   	ret    
    c182:	e8 f9 48 00 00       	call   10a80 <__stack_chk_fail>
    c187:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    c18e:	00 00 

000000000000c190 <sgx_mm_dealloc>:
    c190:	f3 0f 1e fa          	endbr64 
    c194:	48 8d 15 65 de 00 00 	lea    0xde65(%rip),%rdx        # 1a000 <g_user_ema_root>
    c19b:	e9 30 ff ff ff       	jmp    c0d0 <mm_dealloc_internal>

000000000000c1a0 <mm_commit_data_internal>:
    c1a0:	f3 0f 1e fa          	endbr64 
    c1a4:	41 57                	push   %r15
    c1a6:	41 56                	push   %r14
    c1a8:	41 55                	push   %r13
    c1aa:	41 54                	push   %r12
    c1ac:	55                   	push   %rbp
    c1ad:	53                   	push   %rbx
    c1ae:	48 83 ec 28          	sub    $0x28,%rsp
    c1b2:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c1b9:	00 00 
    c1bb:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    c1c0:	31 c0                	xor    %eax,%eax
    c1c2:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    c1c9:	00 00 
    c1cb:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    c1d2:	00 00 
    c1d4:	48 85 f6             	test   %rsi,%rsi
    c1d7:	0f 84 a3 00 00 00    	je     c280 <mm_commit_data_internal+0xe0>
    c1dd:	48 89 d0             	mov    %rdx,%rax
    c1e0:	49 89 fc             	mov    %rdi,%r12
    c1e3:	48 89 f3             	mov    %rsi,%rbx
    c1e6:	48 89 d5             	mov    %rdx,%rbp
    c1e9:	48 09 f0             	or     %rsi,%rax
    c1ec:	48 09 f8             	or     %rdi,%rax
    c1ef:	a9 ff 0f 00 00       	test   $0xfff,%eax
    c1f4:	0f 85 86 00 00 00    	jne    c280 <mm_commit_data_internal+0xe0>
    c1fa:	41 89 cf             	mov    %ecx,%r15d
    c1fd:	83 f9 07             	cmp    $0x7,%ecx
    c200:	77 7e                	ja     c280 <mm_commit_data_internal+0xe0>
    c202:	48 89 d7             	mov    %rdx,%rdi
    c205:	4d 89 c6             	mov    %r8,%r14
    c208:	e8 33 98 ff ff       	call   5a40 <sgx_mm_is_within_enclave>
    c20d:	84 c0                	test   %al,%al
    c20f:	74 6f                	je     c280 <mm_commit_data_internal+0xe0>
    c211:	48 8b 3d f8 e7 01 00 	mov    0x1e7f8(%rip),%rdi        # 2aa10 <mm_lock>
    c218:	41 bd 0e 00 00 00    	mov    $0xe,%r13d
    c21e:	e8 bd 97 ff ff       	call   59e0 <sgx_mm_mutex_lock>
    c223:	85 c0                	test   %eax,%eax
    c225:	75 5f                	jne    c286 <mm_commit_data_internal+0xe6>
    c227:	4c 01 e3             	add    %r12,%rbx
    c22a:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    c22f:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    c234:	4c 89 e6             	mov    %r12,%rsi
    c237:	48 89 da             	mov    %rbx,%rdx
    c23a:	4c 89 f7             	mov    %r14,%rdi
    c23d:	41 bd 16 00 00 00    	mov    $0x16,%r13d
    c243:	e8 48 d7 ff ff       	call   9990 <search_ema_range>
    c248:	85 c0                	test   %eax,%eax
    c24a:	78 1e                	js     c26a <mm_commit_data_internal+0xca>
    c24c:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    c251:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    c256:	45 89 f9             	mov    %r15d,%r9d
    c259:	49 89 e8             	mov    %rbp,%r8
    c25c:	48 89 d9             	mov    %rbx,%rcx
    c25f:	4c 89 e2             	mov    %r12,%rdx
    c262:	e8 a9 ea ff ff       	call   ad10 <ema_do_commit_data_loop>
    c267:	41 89 c5             	mov    %eax,%r13d
    c26a:	48 8b 3d 9f e7 01 00 	mov    0x1e79f(%rip),%rdi        # 2aa10 <mm_lock>
    c271:	e8 8a 97 ff ff       	call   5a00 <sgx_mm_mutex_unlock>
    c276:	eb 0e                	jmp    c286 <mm_commit_data_internal+0xe6>
    c278:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    c27f:	00 
    c280:	41 bd 16 00 00 00    	mov    $0x16,%r13d
    c286:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    c28b:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    c292:	00 00 
    c294:	75 12                	jne    c2a8 <mm_commit_data_internal+0x108>
    c296:	48 83 c4 28          	add    $0x28,%rsp
    c29a:	44 89 e8             	mov    %r13d,%eax
    c29d:	5b                   	pop    %rbx
    c29e:	5d                   	pop    %rbp
    c29f:	41 5c                	pop    %r12
    c2a1:	41 5d                	pop    %r13
    c2a3:	41 5e                	pop    %r14
    c2a5:	41 5f                	pop    %r15
    c2a7:	c3                   	ret    
    c2a8:	e8 d3 47 00 00       	call   10a80 <__stack_chk_fail>
    c2ad:	0f 1f 00             	nopl   (%rax)

000000000000c2b0 <sgx_mm_commit_data>:
    c2b0:	f3 0f 1e fa          	endbr64 
    c2b4:	4c 8d 05 45 dd 00 00 	lea    0xdd45(%rip),%r8        # 1a000 <g_user_ema_root>
    c2bb:	e9 e0 fe ff ff       	jmp    c1a0 <mm_commit_data_internal>

000000000000c2c0 <mm_modify_type_internal>:
    c2c0:	f3 0f 1e fa          	endbr64 
    c2c4:	41 54                	push   %r12
    c2c6:	55                   	push   %rbp
    c2c7:	bd 01 00 00 00       	mov    $0x1,%ebp
    c2cc:	53                   	push   %rbx
    c2cd:	48 83 ec 20          	sub    $0x20,%rsp
    c2d1:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c2d8:	00 00 
    c2da:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    c2df:	31 c0                	xor    %eax,%eax
    c2e1:	81 fa 00 01 00 00    	cmp    $0x100,%edx
    c2e7:	0f 85 83 00 00 00    	jne    c370 <mm_modify_type_internal+0xb0>
    c2ed:	48 81 fe 00 10 00 00 	cmp    $0x1000,%rsi
    c2f4:	0f 85 96 00 00 00    	jne    c390 <mm_modify_type_internal+0xd0>
    c2fa:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    c301:	00 00 
    c303:	49 89 fc             	mov    %rdi,%r12
    c306:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    c30d:	00 00 
    c30f:	f7 c7 ff 0f 00 00    	test   $0xfff,%edi
    c315:	75 79                	jne    c390 <mm_modify_type_internal+0xd0>
    c317:	48 8b 3d f2 e6 01 00 	mov    0x1e6f2(%rip),%rdi        # 2aa10 <mm_lock>
    c31e:	48 89 cb             	mov    %rcx,%rbx
    c321:	bd 0e 00 00 00       	mov    $0xe,%ebp
    c326:	e8 b5 96 ff ff       	call   59e0 <sgx_mm_mutex_lock>
    c32b:	85 c0                	test   %eax,%eax
    c32d:	75 41                	jne    c370 <mm_modify_type_internal+0xb0>
    c32f:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    c334:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    c339:	4c 89 e6             	mov    %r12,%rsi
    c33c:	48 89 df             	mov    %rbx,%rdi
    c33f:	49 8d 94 24 00 10 00 	lea    0x1000(%r12),%rdx
    c346:	00 
    c347:	bd 16 00 00 00       	mov    $0x16,%ebp
    c34c:	e8 3f d6 ff ff       	call   9990 <search_ema_range>
    c351:	85 c0                	test   %eax,%eax
    c353:	78 0f                	js     c364 <mm_modify_type_internal+0xa4>
    c355:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    c35a:	4c 89 e6             	mov    %r12,%rsi
    c35d:	e8 1e e1 ff ff       	call   a480 <ema_change_to_tcs>
    c362:	89 c5                	mov    %eax,%ebp
    c364:	48 8b 3d a5 e6 01 00 	mov    0x1e6a5(%rip),%rdi        # 2aa10 <mm_lock>
    c36b:	e8 90 96 ff ff       	call   5a00 <sgx_mm_mutex_unlock>
    c370:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    c375:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    c37c:	00 00 
    c37e:	75 17                	jne    c397 <mm_modify_type_internal+0xd7>
    c380:	48 83 c4 20          	add    $0x20,%rsp
    c384:	89 e8                	mov    %ebp,%eax
    c386:	5b                   	pop    %rbx
    c387:	5d                   	pop    %rbp
    c388:	41 5c                	pop    %r12
    c38a:	c3                   	ret    
    c38b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    c390:	bd 16 00 00 00       	mov    $0x16,%ebp
    c395:	eb d9                	jmp    c370 <mm_modify_type_internal+0xb0>
    c397:	e8 e4 46 00 00       	call   10a80 <__stack_chk_fail>
    c39c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000c3a0 <sgx_mm_modify_type>:
    c3a0:	f3 0f 1e fa          	endbr64 
    c3a4:	55                   	push   %rbp
    c3a5:	53                   	push   %rbx
    c3a6:	bb 01 00 00 00       	mov    $0x1,%ebx
    c3ab:	48 83 ec 28          	sub    $0x28,%rsp
    c3af:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c3b6:	00 00 
    c3b8:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    c3bd:	31 c0                	xor    %eax,%eax
    c3bf:	81 fa 00 01 00 00    	cmp    $0x100,%edx
    c3c5:	0f 85 85 00 00 00    	jne    c450 <sgx_mm_modify_type+0xb0>
    c3cb:	48 81 fe 00 10 00 00 	cmp    $0x1000,%rsi
    c3d2:	0f 85 98 00 00 00    	jne    c470 <sgx_mm_modify_type+0xd0>
    c3d8:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    c3df:	00 00 
    c3e1:	48 89 fd             	mov    %rdi,%rbp
    c3e4:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    c3eb:	00 00 
    c3ed:	f7 c7 ff 0f 00 00    	test   $0xfff,%edi
    c3f3:	75 7b                	jne    c470 <sgx_mm_modify_type+0xd0>
    c3f5:	48 8b 3d 14 e6 01 00 	mov    0x1e614(%rip),%rdi        # 2aa10 <mm_lock>
    c3fc:	bb 0e 00 00 00       	mov    $0xe,%ebx
    c401:	e8 da 95 ff ff       	call   59e0 <sgx_mm_mutex_lock>
    c406:	85 c0                	test   %eax,%eax
    c408:	75 46                	jne    c450 <sgx_mm_modify_type+0xb0>
    c40a:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    c40f:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    c414:	48 89 ee             	mov    %rbp,%rsi
    c417:	bb 16 00 00 00       	mov    $0x16,%ebx
    c41c:	48 8d 95 00 10 00 00 	lea    0x1000(%rbp),%rdx
    c423:	48 8d 3d d6 db 00 00 	lea    0xdbd6(%rip),%rdi        # 1a000 <g_user_ema_root>
    c42a:	e8 61 d5 ff ff       	call   9990 <search_ema_range>
    c42f:	85 c0                	test   %eax,%eax
    c431:	78 0f                	js     c442 <sgx_mm_modify_type+0xa2>
    c433:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    c438:	48 89 ee             	mov    %rbp,%rsi
    c43b:	e8 40 e0 ff ff       	call   a480 <ema_change_to_tcs>
    c440:	89 c3                	mov    %eax,%ebx
    c442:	48 8b 3d c7 e5 01 00 	mov    0x1e5c7(%rip),%rdi        # 2aa10 <mm_lock>
    c449:	e8 b2 95 ff ff       	call   5a00 <sgx_mm_mutex_unlock>
    c44e:	66 90                	xchg   %ax,%ax
    c450:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    c455:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    c45c:	00 00 
    c45e:	75 17                	jne    c477 <sgx_mm_modify_type+0xd7>
    c460:	48 83 c4 28          	add    $0x28,%rsp
    c464:	89 d8                	mov    %ebx,%eax
    c466:	5b                   	pop    %rbx
    c467:	5d                   	pop    %rbp
    c468:	c3                   	ret    
    c469:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c470:	bb 16 00 00 00       	mov    $0x16,%ebx
    c475:	eb d9                	jmp    c450 <sgx_mm_modify_type+0xb0>
    c477:	e8 04 46 00 00       	call   10a80 <__stack_chk_fail>
    c47c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000c480 <mm_modify_permissions_internal>:
    c480:	f3 0f 1e fa          	endbr64 
    c484:	41 56                	push   %r14
    c486:	41 55                	push   %r13
    c488:	41 54                	push   %r12
    c48a:	41 bc 16 00 00 00    	mov    $0x16,%r12d
    c490:	55                   	push   %rbp
    c491:	53                   	push   %rbx
    c492:	48 83 ec 20          	sub    $0x20,%rsp
    c496:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c49d:	00 00 
    c49f:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    c4a4:	31 c0                	xor    %eax,%eax
    c4a6:	48 85 f6             	test   %rsi,%rsi
    c4a9:	0f 84 9b 00 00 00    	je     c54a <mm_modify_permissions_internal+0xca>
    c4af:	48 89 f8             	mov    %rdi,%rax
    c4b2:	48 89 fd             	mov    %rdi,%rbp
    c4b5:	48 89 f3             	mov    %rsi,%rbx
    c4b8:	48 09 f0             	or     %rsi,%rax
    c4bb:	a9 ff 0f 00 00       	test   $0xfff,%eax
    c4c0:	0f 85 84 00 00 00    	jne    c54a <mm_modify_permissions_internal+0xca>
    c4c6:	89 d0                	mov    %edx,%eax
    c4c8:	41 89 d6             	mov    %edx,%r14d
    c4cb:	83 e0 05             	and    $0x5,%eax
    c4ce:	83 f8 04             	cmp    $0x4,%eax
    c4d1:	74 77                	je     c54a <mm_modify_permissions_internal+0xca>
    c4d3:	48 8b 3d 36 e5 01 00 	mov    0x1e536(%rip),%rdi        # 2aa10 <mm_lock>
    c4da:	49 89 cd             	mov    %rcx,%r13
    c4dd:	41 bc 0e 00 00 00    	mov    $0xe,%r12d
    c4e3:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    c4ea:	00 00 
    c4ec:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    c4f3:	00 00 
    c4f5:	e8 e6 94 ff ff       	call   59e0 <sgx_mm_mutex_lock>
    c4fa:	85 c0                	test   %eax,%eax
    c4fc:	75 4c                	jne    c54a <mm_modify_permissions_internal+0xca>
    c4fe:	48 01 eb             	add    %rbp,%rbx
    c501:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    c506:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    c50b:	48 89 ee             	mov    %rbp,%rsi
    c50e:	48 89 da             	mov    %rbx,%rdx
    c511:	4c 89 ef             	mov    %r13,%rdi
    c514:	41 bc 16 00 00 00    	mov    $0x16,%r12d
    c51a:	e8 71 d4 ff ff       	call   9990 <search_ema_range>
    c51f:	85 c0                	test   %eax,%eax
    c521:	78 1b                	js     c53e <mm_modify_permissions_internal+0xbe>
    c523:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    c528:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    c52d:	45 89 f0             	mov    %r14d,%r8d
    c530:	48 89 d9             	mov    %rbx,%rcx
    c533:	48 89 ea             	mov    %rbp,%rdx
    c536:	e8 d5 e5 ff ff       	call   ab10 <ema_modify_permissions_loop>
    c53b:	41 89 c4             	mov    %eax,%r12d
    c53e:	48 8b 3d cb e4 01 00 	mov    0x1e4cb(%rip),%rdi        # 2aa10 <mm_lock>
    c545:	e8 b6 94 ff ff       	call   5a00 <sgx_mm_mutex_unlock>
    c54a:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    c54f:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    c556:	00 00 
    c558:	75 10                	jne    c56a <mm_modify_permissions_internal+0xea>
    c55a:	48 83 c4 20          	add    $0x20,%rsp
    c55e:	44 89 e0             	mov    %r12d,%eax
    c561:	5b                   	pop    %rbx
    c562:	5d                   	pop    %rbp
    c563:	41 5c                	pop    %r12
    c565:	41 5d                	pop    %r13
    c567:	41 5e                	pop    %r14
    c569:	c3                   	ret    
    c56a:	e8 11 45 00 00       	call   10a80 <__stack_chk_fail>
    c56f:	90                   	nop

000000000000c570 <sgx_mm_modify_permissions>:
    c570:	f3 0f 1e fa          	endbr64 
    c574:	48 8d 0d 85 da 00 00 	lea    0xda85(%rip),%rcx        # 1a000 <g_user_ema_root>
    c57b:	e9 00 ff ff ff       	jmp    c480 <mm_modify_permissions_internal>

000000000000c580 <sgx_mm_init>:
    c580:	f3 0f 1e fa          	endbr64 
    c584:	55                   	push   %rbp
    c585:	48 89 fd             	mov    %rdi,%rbp
    c588:	53                   	push   %rbx
    c589:	48 89 f3             	mov    %rsi,%rbx
    c58c:	48 83 ec 08          	sub    $0x8,%rsp
    c590:	e8 0b 94 ff ff       	call   59a0 <sgx_mm_mutex_create>
    c595:	48 89 05 74 e4 01 00 	mov    %rax,0x1e474(%rip)        # 2aa10 <mm_lock>
    c59c:	48 85 c0             	test   %rax,%rax
    c59f:	74 2f                	je     c5d0 <sgx_mm_init+0x50>
    c5a1:	48 8d 3d 98 f4 ff ff 	lea    -0xb68(%rip),%rdi        # ba40 <sgx_mm_enclave_pfhandler>
    c5a8:	48 89 2d 59 e4 01 00 	mov    %rbp,0x1e459(%rip)        # 2aa08 <mm_user_base>
    c5af:	48 89 1d 4a e4 01 00 	mov    %rbx,0x1e44a(%rip)        # 2aa00 <mm_user_end>
    c5b6:	e8 85 93 ff ff       	call   5940 <sgx_mm_register_pfhandler>
    c5bb:	84 c0                	test   %al,%al
    c5bd:	74 11                	je     c5d0 <sgx_mm_init+0x50>
    c5bf:	48 83 c4 08          	add    $0x8,%rsp
    c5c3:	31 c0                	xor    %eax,%eax
    c5c5:	5b                   	pop    %rbx
    c5c6:	5d                   	pop    %rbp
    c5c7:	c3                   	ret    
    c5c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    c5cf:	00 
    c5d0:	48 83 c4 08          	add    $0x8,%rsp
    c5d4:	b8 0e 00 00 00       	mov    $0xe,%eax
    c5d9:	5b                   	pop    %rbx
    c5da:	5d                   	pop    %rbp
    c5db:	c3                   	ret    
    c5dc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000c5e0 <alloca>:
    c5e0:	f3 0f 1e fa          	endbr64 
    c5e4:	5a                   	pop    %rdx
    c5e5:	48 89 e1             	mov    %rsp,%rcx
    c5e8:	48 83 c7 0f          	add    $0xf,%rdi
    c5ec:	48 83 e7 f0          	and    $0xfffffffffffffff0,%rdi
    c5f0:	48 29 fc             	sub    %rdi,%rsp
    c5f3:	48 89 e0             	mov    %rsp,%rax
    c5f6:	3e ff e2             	notrack jmp *%rdx
    c5f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000c600 <heap_init>:
    c600:	f3 0f 1e fa          	endbr64 
    c604:	48 89 f8             	mov    %rdi,%rax
    c607:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    c60d:	48 85 ff             	test   %rdi,%rdi
    c610:	75 0e                	jne    c620 <heap_init+0x20>
    c612:	44 89 c0             	mov    %r8d,%eax
    c615:	c3                   	ret    
    c616:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    c61d:	00 00 00 
    c620:	48 89 f7             	mov    %rsi,%rdi
    c623:	49 89 c1             	mov    %rax,%r9
    c626:	48 09 d7             	or     %rdx,%rdi
    c629:	41 81 e1 ff 0f 00 00 	and    $0xfff,%r9d
    c630:	81 e7 ff 0f 00 00    	and    $0xfff,%edi
    c636:	48 0b 3d 13 b8 00 00 	or     0xb813(%rip),%rdi        # 17e50 <heap_base>
    c63d:	4c 09 cf             	or     %r9,%rdi
    c640:	75 d0                	jne    c612 <heap_init+0x12>
    c642:	45 31 c0             	xor    %r8d,%r8d
    c645:	48 89 05 04 b8 00 00 	mov    %rax,0xb804(%rip)        # 17e50 <heap_base>
    c64c:	48 89 35 f5 b7 00 00 	mov    %rsi,0xb7f5(%rip)        # 17e48 <heap_size>
    c653:	44 89 c0             	mov    %r8d,%eax
    c656:	48 89 15 db b7 00 00 	mov    %rdx,0xb7db(%rip)        # 17e38 <heap_min_size>
    c65d:	89 0d dd b7 00 00    	mov    %ecx,0xb7dd(%rip)        # 17e40 <is_edmm_supported>
    c663:	c3                   	ret    
    c664:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    c66b:	00 00 00 
    c66e:	66 90                	xchg   %ax,%ax

000000000000c670 <sbrk>:
    c670:	f3 0f 1e fa          	endbr64 
    c674:	55                   	push   %rbp
    c675:	53                   	push   %rbx
    c676:	48 83 ec 08          	sub    $0x8,%rsp
    c67a:	48 8b 05 cf b7 00 00 	mov    0xb7cf(%rip),%rax        # 17e50 <heap_base>
    c681:	48 85 c0             	test   %rax,%rax
    c684:	0f 84 e6 00 00 00    	je     c770 <sbrk+0x100>
    c68a:	48 8b 1d 87 e3 01 00 	mov    0x1e387(%rip),%rbx        # 2aa18 <heap_used.0>
    c691:	48 85 ff             	test   %rdi,%rdi
    c694:	0f 88 86 00 00 00    	js     c720 <sbrk+0xb0>
    c69a:	48 89 fa             	mov    %rdi,%rdx
    c69d:	48 01 da             	add    %rbx,%rdx
    c6a0:	0f 82 ca 00 00 00    	jb     c770 <sbrk+0x100>
    c6a6:	48 39 15 9b b7 00 00 	cmp    %rdx,0xb79b(%rip)        # 17e48 <heap_size>
    c6ad:	0f 82 bd 00 00 00    	jb     c770 <sbrk+0x100>
    c6b3:	48 8d 2c 18          	lea    (%rax,%rbx,1),%rbp
    c6b7:	48 85 ff             	test   %rdi,%rdi
    c6ba:	74 53                	je     c70f <sbrk+0x9f>
    c6bc:	48 8b 0d 5d e3 01 00 	mov    0x1e35d(%rip),%rcx        # 2aa20 <g_peak_heap_used>
    c6c3:	48 89 15 4e e3 01 00 	mov    %rdx,0x1e34e(%rip)        # 2aa18 <heap_used.0>
    c6ca:	48 39 d1             	cmp    %rdx,%rcx
    c6cd:	48 0f 42 ca          	cmovb  %rdx,%rcx
    c6d1:	48 89 0d 48 e3 01 00 	mov    %rcx,0x1e348(%rip)        # 2aa20 <g_peak_heap_used>
    c6d8:	8b 0d 62 b7 00 00    	mov    0xb762(%rip),%ecx        # 17e40 <is_edmm_supported>
    c6de:	85 c9                	test   %ecx,%ecx
    c6e0:	74 2d                	je     c70f <sbrk+0x9f>
    c6e2:	48 8b 0d 4f b7 00 00 	mov    0xb74f(%rip),%rcx        # 17e38 <heap_min_size>
    c6e9:	48 39 d1             	cmp    %rdx,%rcx
    c6ec:	73 21                	jae    c70f <sbrk+0x9f>
    c6ee:	49 89 e8             	mov    %rbp,%r8
    c6f1:	48 39 d9             	cmp    %rbx,%rcx
    c6f4:	72 0a                	jb     c700 <sbrk+0x90>
    c6f6:	48 29 ca             	sub    %rcx,%rdx
    c6f9:	4c 8d 04 08          	lea    (%rax,%rcx,1),%r8
    c6fd:	48 89 d7             	mov    %rdx,%rdi
    c700:	48 89 fe             	mov    %rdi,%rsi
    c703:	4c 89 c7             	mov    %r8,%rdi
    c706:	e8 d5 f2 ff ff       	call   b9e0 <mm_commit>
    c70b:	85 c0                	test   %eax,%eax
    c70d:	75 56                	jne    c765 <sbrk+0xf5>
    c70f:	48 83 c4 08          	add    $0x8,%rsp
    c713:	48 89 e8             	mov    %rbp,%rax
    c716:	5b                   	pop    %rbx
    c717:	5d                   	pop    %rbp
    c718:	c3                   	ret    
    c719:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c720:	48 89 fe             	mov    %rdi,%rsi
    c723:	48 f7 de             	neg    %rsi
    c726:	48 39 f3             	cmp    %rsi,%rbx
    c729:	72 45                	jb     c770 <sbrk+0x100>
    c72b:	44 8b 05 0e b7 00 00 	mov    0xb70e(%rip),%r8d        # 17e40 <is_edmm_supported>
    c732:	48 01 df             	add    %rbx,%rdi
    c735:	48 89 3d dc e2 01 00 	mov    %rdi,0x1e2dc(%rip)        # 2aa18 <heap_used.0>
    c73c:	48 8d 2c 38          	lea    (%rax,%rdi,1),%rbp
    c740:	45 85 c0             	test   %r8d,%r8d
    c743:	74 ca                	je     c70f <sbrk+0x9f>
    c745:	48 8b 15 ec b6 00 00 	mov    0xb6ec(%rip),%rdx        # 17e38 <heap_min_size>
    c74c:	48 39 da             	cmp    %rbx,%rdx
    c74f:	73 be                	jae    c70f <sbrk+0x9f>
    c751:	48 89 e9             	mov    %rbp,%rcx
    c754:	48 39 fa             	cmp    %rdi,%rdx
    c757:	73 27                	jae    c780 <sbrk+0x110>
    c759:	48 89 cf             	mov    %rcx,%rdi
    c75c:	e8 8f f2 ff ff       	call   b9f0 <mm_uncommit>
    c761:	85 c0                	test   %eax,%eax
    c763:	74 aa                	je     c70f <sbrk+0x9f>
    c765:	48 89 1d ac e2 01 00 	mov    %rbx,0x1e2ac(%rip)        # 2aa18 <heap_used.0>
    c76c:	0f 1f 40 00          	nopl   0x0(%rax)
    c770:	48 c7 c5 ff ff ff ff 	mov    $0xffffffffffffffff,%rbp
    c777:	eb 96                	jmp    c70f <sbrk+0x9f>
    c779:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c780:	48 89 de             	mov    %rbx,%rsi
    c783:	48 8d 0c 10          	lea    (%rax,%rdx,1),%rcx
    c787:	48 29 d6             	sub    %rdx,%rsi
    c78a:	eb cd                	jmp    c759 <sbrk+0xe9>
    c78c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000c790 <sgx_spin_lock>:
    c790:	f3 0f 1e fa          	endbr64 
    c794:	48 83 ec 18          	sub    $0x18,%rsp
    c798:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c79f:	00 00 
    c7a1:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    c7a6:	b8 01 00 00 00       	mov    $0x1,%eax
    c7ab:	f0 87 07             	lock xchg %eax,(%rdi)
    c7ae:	89 44 24 04          	mov    %eax,0x4(%rsp)
    c7b2:	8b 54 24 04          	mov    0x4(%rsp),%edx
    c7b6:	85 d2                	test   %edx,%edx
    c7b8:	74 48                	je     c802 <sgx_spin_lock+0x72>
    c7ba:	48 89 f9             	mov    %rdi,%rcx
    c7bd:	be 01 00 00 00       	mov    $0x1,%esi
    c7c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    c7c8:	ba 02 00 00 00       	mov    $0x2,%edx
    c7cd:	0f 1f 00             	nopl   (%rax)
    c7d0:	85 d2                	test   %edx,%edx
    c7d2:	7e 0d                	jle    c7e1 <sgx_spin_lock+0x51>
    c7d4:	31 c0                	xor    %eax,%eax
    c7d6:	f3 90                	pause  
    c7d8:	f3 90                	pause  
    c7da:	83 c0 02             	add    $0x2,%eax
    c7dd:	39 c2                	cmp    %eax,%edx
    c7df:	75 f5                	jne    c7d6 <sgx_spin_lock+0x46>
    c7e1:	b8 00 04 00 00       	mov    $0x400,%eax
    c7e6:	01 d2                	add    %edx,%edx
    c7e8:	39 c2                	cmp    %eax,%edx
    c7ea:	0f 4f d0             	cmovg  %eax,%edx
    c7ed:	8b 01                	mov    (%rcx),%eax
    c7ef:	85 c0                	test   %eax,%eax
    c7f1:	75 dd                	jne    c7d0 <sgx_spin_lock+0x40>
    c7f3:	f0 87 31             	lock xchg %esi,(%rcx)
    c7f6:	89 74 24 04          	mov    %esi,0x4(%rsp)
    c7fa:	8b 44 24 04          	mov    0x4(%rsp),%eax
    c7fe:	85 c0                	test   %eax,%eax
    c800:	75 c6                	jne    c7c8 <sgx_spin_lock+0x38>
    c802:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    c807:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    c80e:	00 00 
    c810:	75 07                	jne    c819 <sgx_spin_lock+0x89>
    c812:	31 c0                	xor    %eax,%eax
    c814:	48 83 c4 18          	add    $0x18,%rsp
    c818:	c3                   	ret    
    c819:	e8 62 42 00 00       	call   10a80 <__stack_chk_fail>
    c81e:	66 90                	xchg   %ax,%ax

000000000000c820 <sgx_spin_unlock>:
    c820:	f3 0f 1e fa          	endbr64 
    c824:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
    c82a:	31 c0                	xor    %eax,%eax
    c82c:	c3                   	ret    
    c82d:	0f 1f 00             	nopl   (%rax)

000000000000c830 <dispose_chunk>:
    c830:	55                   	push   %rbp
    c831:	48 89 f0             	mov    %rsi,%rax
    c834:	48 01 d6             	add    %rdx,%rsi
    c837:	53                   	push   %rbx
    c838:	48 83 ec 08          	sub    $0x8,%rsp
    c83c:	48 8b 48 08          	mov    0x8(%rax),%rcx
    c840:	f6 c1 01             	test   $0x1,%cl
    c843:	0f 85 f7 00 00 00    	jne    c940 <dispose_chunk+0x110>
    c849:	83 e1 03             	and    $0x3,%ecx
    c84c:	4c 8b 08             	mov    (%rax),%r9
    c84f:	0f 84 64 01 00 00    	je     c9b9 <dispose_chunk+0x189>
    c855:	4c 8b 47 18          	mov    0x18(%rdi),%r8
    c859:	4c 29 c8             	sub    %r9,%rax
    c85c:	4c 01 ca             	add    %r9,%rdx
    c85f:	4c 39 c0             	cmp    %r8,%rax
    c862:	0f 82 38 03 00 00    	jb     cba0 <dispose_chunk+0x370>
    c868:	48 39 47 20          	cmp    %rax,0x20(%rdi)
    c86c:	0f 84 2e 04 00 00    	je     cca0 <dispose_chunk+0x470>
    c872:	4c 89 c9             	mov    %r9,%rcx
    c875:	48 c1 e9 03          	shr    $0x3,%rcx
    c879:	49 81 f9 ff 00 00 00 	cmp    $0xff,%r9
    c880:	0f 86 4a 03 00 00    	jbe    cbd0 <dispose_chunk+0x3a0>
    c886:	4c 8b 50 18          	mov    0x18(%rax),%r10
    c88a:	48 8b 58 30          	mov    0x30(%rax),%rbx
    c88e:	49 39 c2             	cmp    %rax,%r10
    c891:	0f 84 89 05 00 00    	je     ce20 <dispose_chunk+0x5f0>
    c897:	48 8b 48 10          	mov    0x10(%rax),%rcx
    c89b:	4c 39 c1             	cmp    %r8,%rcx
    c89e:	0f 82 fc 02 00 00    	jb     cba0 <dispose_chunk+0x370>
    c8a4:	48 39 41 18          	cmp    %rax,0x18(%rcx)
    c8a8:	0f 85 f2 02 00 00    	jne    cba0 <dispose_chunk+0x370>
    c8ae:	49 39 42 10          	cmp    %rax,0x10(%r10)
    c8b2:	0f 85 e8 02 00 00    	jne    cba0 <dispose_chunk+0x370>
    c8b8:	4c 89 51 18          	mov    %r10,0x18(%rcx)
    c8bc:	49 89 4a 10          	mov    %rcx,0x10(%r10)
    c8c0:	48 85 db             	test   %rbx,%rbx
    c8c3:	74 7f                	je     c944 <dispose_chunk+0x114>
    c8c5:	44 8b 48 38          	mov    0x38(%rax),%r9d
    c8c9:	4c 89 c9             	mov    %r9,%rcx
    c8cc:	4d 8d 59 4a          	lea    0x4a(%r9),%r11
    c8d0:	4a 39 84 cf 58 02 00 	cmp    %rax,0x258(%rdi,%r9,8)
    c8d7:	00 
    c8d8:	0f 84 32 06 00 00    	je     cf10 <dispose_chunk+0x6e0>
    c8de:	4c 39 c3             	cmp    %r8,%rbx
    c8e1:	0f 82 b9 02 00 00    	jb     cba0 <dispose_chunk+0x370>
    c8e7:	48 39 43 20          	cmp    %rax,0x20(%rbx)
    c8eb:	0f 84 9c 06 00 00    	je     cf8d <dispose_chunk+0x75d>
    c8f1:	4c 89 53 28          	mov    %r10,0x28(%rbx)
    c8f5:	4d 85 d2             	test   %r10,%r10
    c8f8:	74 4a                	je     c944 <dispose_chunk+0x114>
    c8fa:	4d 39 c2             	cmp    %r8,%r10
    c8fd:	0f 82 9d 02 00 00    	jb     cba0 <dispose_chunk+0x370>
    c903:	48 8b 48 20          	mov    0x20(%rax),%rcx
    c907:	49 89 5a 30          	mov    %rbx,0x30(%r10)
    c90b:	48 85 c9             	test   %rcx,%rcx
    c90e:	74 11                	je     c921 <dispose_chunk+0xf1>
    c910:	4c 39 c1             	cmp    %r8,%rcx
    c913:	0f 82 87 02 00 00    	jb     cba0 <dispose_chunk+0x370>
    c919:	49 89 4a 20          	mov    %rcx,0x20(%r10)
    c91d:	4c 89 51 30          	mov    %r10,0x30(%rcx)
    c921:	48 8b 48 28          	mov    0x28(%rax),%rcx
    c925:	48 85 c9             	test   %rcx,%rcx
    c928:	74 1a                	je     c944 <dispose_chunk+0x114>
    c92a:	4c 39 c1             	cmp    %r8,%rcx
    c92d:	0f 82 6d 02 00 00    	jb     cba0 <dispose_chunk+0x370>
    c933:	49 89 4a 28          	mov    %rcx,0x28(%r10)
    c937:	4c 89 51 30          	mov    %r10,0x30(%rcx)
    c93b:	eb 07                	jmp    c944 <dispose_chunk+0x114>
    c93d:	0f 1f 00             	nopl   (%rax)
    c940:	4c 8b 47 18          	mov    0x18(%rdi),%r8
    c944:	4c 39 c6             	cmp    %r8,%rsi
    c947:	0f 82 53 02 00 00    	jb     cba0 <dispose_chunk+0x370>
    c94d:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    c951:	f6 c1 02             	test   $0x2,%cl
    c954:	74 6a                	je     c9c0 <dispose_chunk+0x190>
    c956:	48 83 e1 fe          	and    $0xfffffffffffffffe,%rcx
    c95a:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
    c95e:	48 89 d1             	mov    %rdx,%rcx
    c961:	48 83 c9 01          	or     $0x1,%rcx
    c965:	48 89 48 08          	mov    %rcx,0x8(%rax)
    c969:	48 89 14 10          	mov    %rdx,(%rax,%rdx,1)
    c96d:	48 89 d1             	mov    %rdx,%rcx
    c970:	48 c1 e9 03          	shr    $0x3,%rcx
    c974:	48 81 fa ff 00 00 00 	cmp    $0xff,%rdx
    c97b:	0f 87 57 01 00 00    	ja     cad8 <dispose_chunk+0x2a8>
    c981:	8d 54 09 09          	lea    0x9(%rcx,%rcx,1),%edx
    c985:	44 8b 0f             	mov    (%rdi),%r9d
    c988:	48 8d 34 d7          	lea    (%rdi,%rdx,8),%rsi
    c98c:	ba 01 00 00 00       	mov    $0x1,%edx
    c991:	d3 e2                	shl    %cl,%edx
    c993:	41 85 d1             	test   %edx,%r9d
    c996:	0f 84 24 02 00 00    	je     cbc0 <dispose_chunk+0x390>
    c99c:	48 8b 56 10          	mov    0x10(%rsi),%rdx
    c9a0:	4c 39 c2             	cmp    %r8,%rdx
    c9a3:	0f 82 f7 01 00 00    	jb     cba0 <dispose_chunk+0x370>
    c9a9:	48 89 46 10          	mov    %rax,0x10(%rsi)
    c9ad:	48 89 42 18          	mov    %rax,0x18(%rdx)
    c9b1:	48 89 50 10          	mov    %rdx,0x10(%rax)
    c9b5:	48 89 70 18          	mov    %rsi,0x18(%rax)
    c9b9:	48 83 c4 08          	add    $0x8,%rsp
    c9bd:	5b                   	pop    %rbx
    c9be:	5d                   	pop    %rbp
    c9bf:	c3                   	ret    
    c9c0:	48 8b 5f 20          	mov    0x20(%rdi),%rbx
    c9c4:	48 39 77 28          	cmp    %rsi,0x28(%rdi)
    c9c8:	0f 84 22 03 00 00    	je     ccf0 <dispose_chunk+0x4c0>
    c9ce:	48 39 f3             	cmp    %rsi,%rbx
    c9d1:	0f 84 89 03 00 00    	je     cd60 <dispose_chunk+0x530>
    c9d7:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    c9db:	49 89 cb             	mov    %rcx,%r11
    c9de:	48 01 ca             	add    %rcx,%rdx
    c9e1:	49 c1 eb 03          	shr    $0x3,%r11
    c9e5:	48 81 f9 f8 00 00 00 	cmp    $0xf8,%rcx
    c9ec:	0f 86 7e 01 00 00    	jbe    cb70 <dispose_chunk+0x340>
    c9f2:	4c 8b 56 18          	mov    0x18(%rsi),%r10
    c9f6:	48 8b 6e 30          	mov    0x30(%rsi),%rbp
    c9fa:	49 39 f2             	cmp    %rsi,%r10
    c9fd:	0f 84 7d 03 00 00    	je     cd80 <dispose_chunk+0x550>
    ca03:	48 8b 4e 10          	mov    0x10(%rsi),%rcx
    ca07:	4c 39 c1             	cmp    %r8,%rcx
    ca0a:	0f 82 90 01 00 00    	jb     cba0 <dispose_chunk+0x370>
    ca10:	48 39 71 18          	cmp    %rsi,0x18(%rcx)
    ca14:	0f 85 86 01 00 00    	jne    cba0 <dispose_chunk+0x370>
    ca1a:	49 39 72 10          	cmp    %rsi,0x10(%r10)
    ca1e:	0f 85 7c 01 00 00    	jne    cba0 <dispose_chunk+0x370>
    ca24:	4c 89 51 18          	mov    %r10,0x18(%rcx)
    ca28:	49 89 4a 10          	mov    %rcx,0x10(%r10)
    ca2c:	48 85 ed             	test   %rbp,%rbp
    ca2f:	74 7f                	je     cab0 <dispose_chunk+0x280>
    ca31:	44 8b 4e 38          	mov    0x38(%rsi),%r9d
    ca35:	4c 89 c9             	mov    %r9,%rcx
    ca38:	4d 8d 59 4a          	lea    0x4a(%r9),%r11
    ca3c:	4a 39 b4 cf 58 02 00 	cmp    %rsi,0x258(%rdi,%r9,8)
    ca43:	00 
    ca44:	0f 84 76 04 00 00    	je     cec0 <dispose_chunk+0x690>
    ca4a:	4c 39 c5             	cmp    %r8,%rbp
    ca4d:	0f 82 4d 01 00 00    	jb     cba0 <dispose_chunk+0x370>
    ca53:	48 39 75 20          	cmp    %rsi,0x20(%rbp)
    ca57:	0f 84 27 05 00 00    	je     cf84 <dispose_chunk+0x754>
    ca5d:	4c 89 55 28          	mov    %r10,0x28(%rbp)
    ca61:	4d 85 d2             	test   %r10,%r10
    ca64:	74 4a                	je     cab0 <dispose_chunk+0x280>
    ca66:	4d 39 c2             	cmp    %r8,%r10
    ca69:	0f 82 31 01 00 00    	jb     cba0 <dispose_chunk+0x370>
    ca6f:	48 8b 4e 20          	mov    0x20(%rsi),%rcx
    ca73:	49 89 6a 30          	mov    %rbp,0x30(%r10)
    ca77:	48 85 c9             	test   %rcx,%rcx
    ca7a:	74 11                	je     ca8d <dispose_chunk+0x25d>
    ca7c:	4c 39 c1             	cmp    %r8,%rcx
    ca7f:	0f 82 1b 01 00 00    	jb     cba0 <dispose_chunk+0x370>
    ca85:	49 89 4a 20          	mov    %rcx,0x20(%r10)
    ca89:	4c 89 51 30          	mov    %r10,0x30(%rcx)
    ca8d:	48 8b 4e 28          	mov    0x28(%rsi),%rcx
    ca91:	48 85 c9             	test   %rcx,%rcx
    ca94:	74 1a                	je     cab0 <dispose_chunk+0x280>
    ca96:	4c 39 c1             	cmp    %r8,%rcx
    ca99:	0f 82 01 01 00 00    	jb     cba0 <dispose_chunk+0x370>
    ca9f:	49 89 4a 28          	mov    %rcx,0x28(%r10)
    caa3:	4c 89 51 30          	mov    %r10,0x30(%rcx)
    caa7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    caae:	00 00 
    cab0:	48 89 d1             	mov    %rdx,%rcx
    cab3:	48 83 c9 01          	or     $0x1,%rcx
    cab7:	48 89 48 08          	mov    %rcx,0x8(%rax)
    cabb:	48 89 14 10          	mov    %rdx,(%rax,%rdx,1)
    cabf:	48 39 d8             	cmp    %rbx,%rax
    cac2:	0f 85 a5 fe ff ff    	jne    c96d <dispose_chunk+0x13d>
    cac8:	48 89 57 08          	mov    %rdx,0x8(%rdi)
    cacc:	e9 e8 fe ff ff       	jmp    c9b9 <dispose_chunk+0x189>
    cad1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    cad8:	48 89 d6             	mov    %rdx,%rsi
    cadb:	48 c1 ee 08          	shr    $0x8,%rsi
    cadf:	89 f1                	mov    %esi,%ecx
    cae1:	85 f6                	test   %esi,%esi
    cae3:	0f 84 bf 00 00 00    	je     cba8 <dispose_chunk+0x378>
    cae9:	81 fe ff ff 00 00    	cmp    $0xffff,%esi
    caef:	0f 87 e3 01 00 00    	ja     ccd8 <dispose_chunk+0x4a8>
    caf5:	0f bd f1             	bsr    %ecx,%esi
    caf8:	b9 26 00 00 00       	mov    $0x26,%ecx
    cafd:	48 89 d3             	mov    %rdx,%rbx
    cb00:	41 b9 1f 00 00 00    	mov    $0x1f,%r9d
    cb06:	83 f6 1f             	xor    $0x1f,%esi
    cb09:	29 f1                	sub    %esi,%ecx
    cb0b:	41 29 f1             	sub    %esi,%r9d
    cb0e:	be 01 00 00 00       	mov    $0x1,%esi
    cb13:	48 d3 eb             	shr    %cl,%rbx
    cb16:	48 89 d9             	mov    %rbx,%rcx
    cb19:	83 e1 01             	and    $0x1,%ecx
    cb1c:	42 8d 0c 49          	lea    (%rcx,%r9,2),%ecx
    cb20:	44 8d 49 4b          	lea    0x4b(%rcx),%r9d
    cb24:	d3 e6                	shl    %cl,%esi
    cb26:	49 c1 e1 03          	shl    $0x3,%r9
    cb2a:	44 8b 57 04          	mov    0x4(%rdi),%r10d
    cb2e:	66 48 0f 6e c8       	movq   %rax,%xmm1
    cb33:	66 0f ef c0          	pxor   %xmm0,%xmm0
    cb37:	89 48 38             	mov    %ecx,0x38(%rax)
    cb3a:	66 0f 6c c9          	punpcklqdq %xmm1,%xmm1
    cb3e:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    cb42:	44 85 d6             	test   %r10d,%esi
    cb45:	0f 85 c5 00 00 00    	jne    cc10 <dispose_chunk+0x3e0>
    cb4b:	44 09 d6             	or     %r10d,%esi
    cb4e:	49 01 f9             	add    %rdi,%r9
    cb51:	89 77 04             	mov    %esi,0x4(%rdi)
    cb54:	48 89 84 cf 58 02 00 	mov    %rax,0x258(%rdi,%rcx,8)
    cb5b:	00 
    cb5c:	4c 89 48 30          	mov    %r9,0x30(%rax)
    cb60:	0f 11 48 10          	movups %xmm1,0x10(%rax)
    cb64:	48 83 c4 08          	add    $0x8,%rsp
    cb68:	5b                   	pop    %rbx
    cb69:	5d                   	pop    %rbp
    cb6a:	c3                   	ret    
    cb6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    cb70:	43 8d 4c 1b 09       	lea    0x9(%r11,%r11,1),%ecx
    cb75:	4c 8b 4e 10          	mov    0x10(%rsi),%r9
    cb79:	4c 8b 56 18          	mov    0x18(%rsi),%r10
    cb7d:	48 8d 0c cf          	lea    (%rdi,%rcx,8),%rcx
    cb81:	4c 39 c9             	cmp    %r9,%rcx
    cb84:	0f 85 53 03 00 00    	jne    cedd <dispose_chunk+0x6ad>
    cb8a:	4d 39 d1             	cmp    %r10,%r9
    cb8d:	0f 84 75 02 00 00    	je     ce08 <dispose_chunk+0x5d8>
    cb93:	4d 39 c2             	cmp    %r8,%r10
    cb96:	0f 83 aa 01 00 00    	jae    cd46 <dispose_chunk+0x516>
    cb9c:	0f 1f 40 00          	nopl   0x0(%rax)
    cba0:	e8 92 59 00 00       	call   12537 <abort>
    cba5:	0f 1f 00             	nopl   (%rax)
    cba8:	be 01 00 00 00       	mov    $0x1,%esi
    cbad:	41 b9 58 02 00 00    	mov    $0x258,%r9d
    cbb3:	e9 72 ff ff ff       	jmp    cb2a <dispose_chunk+0x2fa>
    cbb8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    cbbf:	00 
    cbc0:	41 09 d1             	or     %edx,%r9d
    cbc3:	48 89 f2             	mov    %rsi,%rdx
    cbc6:	44 89 0f             	mov    %r9d,(%rdi)
    cbc9:	e9 db fd ff ff       	jmp    c9a9 <dispose_chunk+0x179>
    cbce:	66 90                	xchg   %ax,%ax
    cbd0:	44 8d 5c 09 09       	lea    0x9(%rcx,%rcx,1),%r11d
    cbd5:	4c 8b 48 10          	mov    0x10(%rax),%r9
    cbd9:	4c 8b 50 18          	mov    0x18(%rax),%r10
    cbdd:	4e 8d 1c df          	lea    (%rdi,%r11,8),%r11
    cbe1:	4d 39 cb             	cmp    %r9,%r11
    cbe4:	0f 85 46 03 00 00    	jne    cf30 <dispose_chunk+0x700>
    cbea:	4d 39 d1             	cmp    %r10,%r9
    cbed:	0f 84 b5 02 00 00    	je     cea8 <dispose_chunk+0x678>
    cbf3:	4d 39 c2             	cmp    %r8,%r10
    cbf6:	72 a8                	jb     cba0 <dispose_chunk+0x370>
    cbf8:	49 39 42 10          	cmp    %rax,0x10(%r10)
    cbfc:	75 a2                	jne    cba0 <dispose_chunk+0x370>
    cbfe:	4d 89 51 18          	mov    %r10,0x18(%r9)
    cc02:	4d 89 4a 10          	mov    %r9,0x10(%r10)
    cc06:	e9 39 fd ff ff       	jmp    c944 <dispose_chunk+0x114>
    cc0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    cc10:	89 ce                	mov    %ecx,%esi
    cc12:	48 8b b4 f7 58 02 00 	mov    0x258(%rdi,%rsi,8),%rsi
    cc19:	00 
    cc1a:	48 89 d7             	mov    %rdx,%rdi
    cc1d:	83 f9 1f             	cmp    $0x1f,%ecx
    cc20:	74 34                	je     cc56 <dispose_chunk+0x426>
    cc22:	89 cf                	mov    %ecx,%edi
    cc24:	b9 39 00 00 00       	mov    $0x39,%ecx
    cc29:	d1 ef                	shr    %edi
    cc2b:	29 f9                	sub    %edi,%ecx
    cc2d:	48 89 d7             	mov    %rdx,%rdi
    cc30:	48 d3 e7             	shl    %cl,%rdi
    cc33:	eb 21                	jmp    cc56 <dispose_chunk+0x426>
    cc35:	0f 1f 00             	nopl   (%rax)
    cc38:	48 89 f9             	mov    %rdi,%rcx
    cc3b:	48 01 ff             	add    %rdi,%rdi
    cc3e:	48 c1 e9 3f          	shr    $0x3f,%rcx
    cc42:	48 83 c1 04          	add    $0x4,%rcx
    cc46:	4c 8b 0c ce          	mov    (%rsi,%rcx,8),%r9
    cc4a:	4d 85 c9             	test   %r9,%r9
    cc4d:	0f 84 d5 00 00 00    	je     cd28 <dispose_chunk+0x4f8>
    cc53:	4c 89 ce             	mov    %r9,%rsi
    cc56:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    cc5a:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    cc5e:	48 39 d1             	cmp    %rdx,%rcx
    cc61:	75 d5                	jne    cc38 <dispose_chunk+0x408>
    cc63:	48 8b 56 10          	mov    0x10(%rsi),%rdx
    cc67:	66 48 0f 6e d6       	movq   %rsi,%xmm2
    cc6c:	66 48 0f 6e c2       	movq   %rdx,%xmm0
    cc71:	66 0f 6c c2          	punpcklqdq %xmm2,%xmm0
    cc75:	4c 39 c6             	cmp    %r8,%rsi
    cc78:	0f 82 22 ff ff ff    	jb     cba0 <dispose_chunk+0x370>
    cc7e:	4c 39 c2             	cmp    %r8,%rdx
    cc81:	0f 82 19 ff ff ff    	jb     cba0 <dispose_chunk+0x370>
    cc87:	48 89 42 18          	mov    %rax,0x18(%rdx)
    cc8b:	48 89 46 10          	mov    %rax,0x10(%rsi)
    cc8f:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
    cc96:	00 
    cc97:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    cc9b:	e9 19 fd ff ff       	jmp    c9b9 <dispose_chunk+0x189>
    cca0:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    cca4:	49 89 c9             	mov    %rcx,%r9
    cca7:	49 f7 d1             	not    %r9
    ccaa:	41 83 e1 03          	and    $0x3,%r9d
    ccae:	0f 85 90 fc ff ff    	jne    c944 <dispose_chunk+0x114>
    ccb4:	48 83 e1 fe          	and    $0xfffffffffffffffe,%rcx
    ccb8:	48 89 57 08          	mov    %rdx,0x8(%rdi)
    ccbc:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
    ccc0:	48 89 d1             	mov    %rdx,%rcx
    ccc3:	48 83 c9 01          	or     $0x1,%rcx
    ccc7:	48 89 48 08          	mov    %rcx,0x8(%rax)
    cccb:	48 89 16             	mov    %rdx,(%rsi)
    ccce:	e9 e6 fc ff ff       	jmp    c9b9 <dispose_chunk+0x189>
    ccd3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    ccd8:	be 00 00 00 80       	mov    $0x80000000,%esi
    ccdd:	41 b9 50 03 00 00    	mov    $0x350,%r9d
    cce3:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    cce8:	e9 3d fe ff ff       	jmp    cb2a <dispose_chunk+0x2fa>
    cced:	0f 1f 00             	nopl   (%rax)
    ccf0:	48 03 57 10          	add    0x10(%rdi),%rdx
    ccf4:	48 89 47 28          	mov    %rax,0x28(%rdi)
    ccf8:	48 89 57 10          	mov    %rdx,0x10(%rdi)
    ccfc:	48 83 ca 01          	or     $0x1,%rdx
    cd00:	48 89 50 08          	mov    %rdx,0x8(%rax)
    cd04:	48 39 d8             	cmp    %rbx,%rax
    cd07:	0f 85 ac fc ff ff    	jne    c9b9 <dispose_chunk+0x189>
    cd0d:	48 c7 47 20 00 00 00 	movq   $0x0,0x20(%rdi)
    cd14:	00 
    cd15:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
    cd1c:	00 
    cd1d:	e9 97 fc ff ff       	jmp    c9b9 <dispose_chunk+0x189>
    cd22:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    cd28:	48 8d 14 ce          	lea    (%rsi,%rcx,8),%rdx
    cd2c:	4c 39 c2             	cmp    %r8,%rdx
    cd2f:	0f 82 6b fe ff ff    	jb     cba0 <dispose_chunk+0x370>
    cd35:	48 89 04 ce          	mov    %rax,(%rsi,%rcx,8)
    cd39:	48 89 70 30          	mov    %rsi,0x30(%rax)
    cd3d:	0f 11 48 10          	movups %xmm1,0x10(%rax)
    cd41:	e9 73 fc ff ff       	jmp    c9b9 <dispose_chunk+0x189>
    cd46:	49 39 72 10          	cmp    %rsi,0x10(%r10)
    cd4a:	0f 85 50 fe ff ff    	jne    cba0 <dispose_chunk+0x370>
    cd50:	4d 89 51 18          	mov    %r10,0x18(%r9)
    cd54:	4d 89 4a 10          	mov    %r9,0x10(%r10)
    cd58:	e9 53 fd ff ff       	jmp    cab0 <dispose_chunk+0x280>
    cd5d:	0f 1f 00             	nopl   (%rax)
    cd60:	48 03 57 08          	add    0x8(%rdi),%rdx
    cd64:	48 89 47 20          	mov    %rax,0x20(%rdi)
    cd68:	48 89 d1             	mov    %rdx,%rcx
    cd6b:	48 89 57 08          	mov    %rdx,0x8(%rdi)
    cd6f:	48 83 c9 01          	or     $0x1,%rcx
    cd73:	48 89 48 08          	mov    %rcx,0x8(%rax)
    cd77:	48 89 14 10          	mov    %rdx,(%rax,%rdx,1)
    cd7b:	e9 39 fc ff ff       	jmp    c9b9 <dispose_chunk+0x189>
    cd80:	48 8b 4e 28          	mov    0x28(%rsi),%rcx
    cd84:	4c 8d 4e 28          	lea    0x28(%rsi),%r9
    cd88:	48 85 c9             	test   %rcx,%rcx
    cd8b:	0f 84 cf 01 00 00    	je     cf60 <dispose_chunk+0x730>
    cd91:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    cd98:	4d 89 cb             	mov    %r9,%r11
    cd9b:	49 89 ca             	mov    %rcx,%r10
    cd9e:	4c 8d 49 28          	lea    0x28(%rcx),%r9
    cda2:	48 8b 49 28          	mov    0x28(%rcx),%rcx
    cda6:	48 85 c9             	test   %rcx,%rcx
    cda9:	75 ed                	jne    cd98 <dispose_chunk+0x568>
    cdab:	49 8b 4a 20          	mov    0x20(%r10),%rcx
    cdaf:	4d 8d 4a 20          	lea    0x20(%r10),%r9
    cdb3:	48 85 c9             	test   %rcx,%rcx
    cdb6:	75 e0                	jne    cd98 <dispose_chunk+0x568>
    cdb8:	4d 39 c3             	cmp    %r8,%r11
    cdbb:	0f 82 df fd ff ff    	jb     cba0 <dispose_chunk+0x370>
    cdc1:	49 c7 03 00 00 00 00 	movq   $0x0,(%r11)
    cdc8:	48 85 ed             	test   %rbp,%rbp
    cdcb:	0f 84 df fc ff ff    	je     cab0 <dispose_chunk+0x280>
    cdd1:	8b 4e 38             	mov    0x38(%rsi),%ecx
    cdd4:	4c 8d 49 4a          	lea    0x4a(%rcx),%r9
    cdd8:	48 39 b4 cf 58 02 00 	cmp    %rsi,0x258(%rdi,%rcx,8)
    cddf:	00 
    cde0:	0f 84 b0 01 00 00    	je     cf96 <dispose_chunk+0x766>
    cde6:	4c 39 c5             	cmp    %r8,%rbp
    cde9:	0f 82 b1 fd ff ff    	jb     cba0 <dispose_chunk+0x370>
    cdef:	48 39 75 20          	cmp    %rsi,0x20(%rbp)
    cdf3:	0f 84 b1 01 00 00    	je     cfaa <dispose_chunk+0x77a>
    cdf9:	4c 89 55 28          	mov    %r10,0x28(%rbp)
    cdfd:	e9 64 fc ff ff       	jmp    ca66 <dispose_chunk+0x236>
    ce02:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    ce08:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    ce0d:	44 89 d9             	mov    %r11d,%ecx
    ce10:	d3 c6                	rol    %cl,%esi
    ce12:	21 37                	and    %esi,(%rdi)
    ce14:	e9 97 fc ff ff       	jmp    cab0 <dispose_chunk+0x280>
    ce19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    ce20:	48 8b 48 28          	mov    0x28(%rax),%rcx
    ce24:	4c 8d 48 28          	lea    0x28(%rax),%r9
    ce28:	48 85 c9             	test   %rcx,%rcx
    ce2b:	0f 84 41 01 00 00    	je     cf72 <dispose_chunk+0x742>
    ce31:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    ce38:	4d 89 cb             	mov    %r9,%r11
    ce3b:	49 89 ca             	mov    %rcx,%r10
    ce3e:	4c 8d 49 28          	lea    0x28(%rcx),%r9
    ce42:	48 8b 49 28          	mov    0x28(%rcx),%rcx
    ce46:	48 85 c9             	test   %rcx,%rcx
    ce49:	75 ed                	jne    ce38 <dispose_chunk+0x608>
    ce4b:	49 8b 4a 20          	mov    0x20(%r10),%rcx
    ce4f:	4d 8d 4a 20          	lea    0x20(%r10),%r9
    ce53:	48 85 c9             	test   %rcx,%rcx
    ce56:	75 e0                	jne    ce38 <dispose_chunk+0x608>
    ce58:	4d 39 c3             	cmp    %r8,%r11
    ce5b:	0f 82 3f fd ff ff    	jb     cba0 <dispose_chunk+0x370>
    ce61:	49 c7 03 00 00 00 00 	movq   $0x0,(%r11)
    ce68:	48 85 db             	test   %rbx,%rbx
    ce6b:	0f 84 d3 fa ff ff    	je     c944 <dispose_chunk+0x114>
    ce71:	8b 48 38             	mov    0x38(%rax),%ecx
    ce74:	4c 8d 49 4a          	lea    0x4a(%rcx),%r9
    ce78:	48 39 84 cf 58 02 00 	cmp    %rax,0x258(%rdi,%rcx,8)
    ce7f:	00 
    ce80:	0f 84 1a 01 00 00    	je     cfa0 <dispose_chunk+0x770>
    ce86:	4c 39 c3             	cmp    %r8,%rbx
    ce89:	0f 82 11 fd ff ff    	jb     cba0 <dispose_chunk+0x370>
    ce8f:	48 39 43 20          	cmp    %rax,0x20(%rbx)
    ce93:	0f 84 1a 01 00 00    	je     cfb3 <dispose_chunk+0x783>
    ce99:	4c 89 53 28          	mov    %r10,0x28(%rbx)
    ce9d:	e9 58 fa ff ff       	jmp    c8fa <dispose_chunk+0xca>
    cea2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    cea8:	41 b9 fe ff ff ff    	mov    $0xfffffffe,%r9d
    ceae:	41 d3 c1             	rol    %cl,%r9d
    ceb1:	44 21 0f             	and    %r9d,(%rdi)
    ceb4:	e9 8b fa ff ff       	jmp    c944 <dispose_chunk+0x114>
    ceb9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    cec0:	4e 89 54 df 08       	mov    %r10,0x8(%rdi,%r11,8)
    cec5:	4d 85 d2             	test   %r10,%r10
    cec8:	0f 85 98 fb ff ff    	jne    ca66 <dispose_chunk+0x236>
    cece:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    ced3:	d3 c6                	rol    %cl,%esi
    ced5:	21 77 04             	and    %esi,0x4(%rdi)
    ced8:	e9 d3 fb ff ff       	jmp    cab0 <dispose_chunk+0x280>
    cedd:	4d 39 c1             	cmp    %r8,%r9
    cee0:	0f 82 ba fc ff ff    	jb     cba0 <dispose_chunk+0x370>
    cee6:	49 39 71 18          	cmp    %rsi,0x18(%r9)
    ceea:	0f 85 b0 fc ff ff    	jne    cba0 <dispose_chunk+0x370>
    cef0:	4d 39 d1             	cmp    %r10,%r9
    cef3:	0f 84 0f ff ff ff    	je     ce08 <dispose_chunk+0x5d8>
    cef9:	4c 39 d1             	cmp    %r10,%rcx
    cefc:	0f 84 4e fe ff ff    	je     cd50 <dispose_chunk+0x520>
    cf02:	e9 8c fc ff ff       	jmp    cb93 <dispose_chunk+0x363>
    cf07:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    cf0e:	00 00 
    cf10:	4e 89 54 df 08       	mov    %r10,0x8(%rdi,%r11,8)
    cf15:	4d 85 d2             	test   %r10,%r10
    cf18:	0f 85 dc f9 ff ff    	jne    c8fa <dispose_chunk+0xca>
    cf1e:	41 b9 fe ff ff ff    	mov    $0xfffffffe,%r9d
    cf24:	41 d3 c1             	rol    %cl,%r9d
    cf27:	44 21 4f 04          	and    %r9d,0x4(%rdi)
    cf2b:	e9 14 fa ff ff       	jmp    c944 <dispose_chunk+0x114>
    cf30:	4d 39 c1             	cmp    %r8,%r9
    cf33:	0f 82 67 fc ff ff    	jb     cba0 <dispose_chunk+0x370>
    cf39:	49 39 41 18          	cmp    %rax,0x18(%r9)
    cf3d:	0f 85 5d fc ff ff    	jne    cba0 <dispose_chunk+0x370>
    cf43:	4d 39 d1             	cmp    %r10,%r9
    cf46:	0f 84 5c ff ff ff    	je     cea8 <dispose_chunk+0x678>
    cf4c:	4d 39 d3             	cmp    %r10,%r11
    cf4f:	0f 84 a9 fc ff ff    	je     cbfe <dispose_chunk+0x3ce>
    cf55:	e9 99 fc ff ff       	jmp    cbf3 <dispose_chunk+0x3c3>
    cf5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    cf60:	48 8b 4e 20          	mov    0x20(%rsi),%rcx
    cf64:	48 85 c9             	test   %rcx,%rcx
    cf67:	74 53                	je     cfbc <dispose_chunk+0x78c>
    cf69:	4c 8d 4e 20          	lea    0x20(%rsi),%r9
    cf6d:	e9 26 fe ff ff       	jmp    cd98 <dispose_chunk+0x568>
    cf72:	48 8b 48 20          	mov    0x20(%rax),%rcx
    cf76:	48 85 c9             	test   %rcx,%rcx
    cf79:	74 75                	je     cff0 <dispose_chunk+0x7c0>
    cf7b:	4c 8d 48 20          	lea    0x20(%rax),%r9
    cf7f:	e9 b4 fe ff ff       	jmp    ce38 <dispose_chunk+0x608>
    cf84:	4c 89 55 20          	mov    %r10,0x20(%rbp)
    cf88:	e9 d4 fa ff ff       	jmp    ca61 <dispose_chunk+0x231>
    cf8d:	4c 89 53 20          	mov    %r10,0x20(%rbx)
    cf91:	e9 5f f9 ff ff       	jmp    c8f5 <dispose_chunk+0xc5>
    cf96:	4e 89 54 cf 08       	mov    %r10,0x8(%rdi,%r9,8)
    cf9b:	e9 c6 fa ff ff       	jmp    ca66 <dispose_chunk+0x236>
    cfa0:	4e 89 54 cf 08       	mov    %r10,0x8(%rdi,%r9,8)
    cfa5:	e9 50 f9 ff ff       	jmp    c8fa <dispose_chunk+0xca>
    cfaa:	4c 89 55 20          	mov    %r10,0x20(%rbp)
    cfae:	e9 b3 fa ff ff       	jmp    ca66 <dispose_chunk+0x236>
    cfb3:	4c 89 53 20          	mov    %r10,0x20(%rbx)
    cfb7:	e9 3e f9 ff ff       	jmp    c8fa <dispose_chunk+0xca>
    cfbc:	48 85 ed             	test   %rbp,%rbp
    cfbf:	0f 84 eb fa ff ff    	je     cab0 <dispose_chunk+0x280>
    cfc5:	44 8b 4e 38          	mov    0x38(%rsi),%r9d
    cfc9:	4c 89 c9             	mov    %r9,%rcx
    cfcc:	4a 39 b4 cf 58 02 00 	cmp    %rsi,0x258(%rdi,%r9,8)
    cfd3:	00 
    cfd4:	74 4f                	je     d025 <dispose_chunk+0x7f5>
    cfd6:	4c 39 c5             	cmp    %r8,%rbp
    cfd9:	0f 82 c1 fb ff ff    	jb     cba0 <dispose_chunk+0x370>
    cfdf:	48 39 75 20          	cmp    %rsi,0x20(%rbp)
    cfe3:	74 60                	je     d045 <dispose_chunk+0x815>
    cfe5:	31 c9                	xor    %ecx,%ecx
    cfe7:	48 89 4d 28          	mov    %rcx,0x28(%rbp)
    cfeb:	e9 c0 fa ff ff       	jmp    cab0 <dispose_chunk+0x280>
    cff0:	48 85 db             	test   %rbx,%rbx
    cff3:	0f 84 4b f9 ff ff    	je     c944 <dispose_chunk+0x114>
    cff9:	44 8b 48 38          	mov    0x38(%rax),%r9d
    cffd:	4c 89 c9             	mov    %r9,%rcx
    d000:	4a 39 84 cf 58 02 00 	cmp    %rax,0x258(%rdi,%r9,8)
    d007:	00 
    d008:	74 2b                	je     d035 <dispose_chunk+0x805>
    d00a:	4c 39 c3             	cmp    %r8,%rbx
    d00d:	0f 82 8d fb ff ff    	jb     cba0 <dispose_chunk+0x370>
    d013:	48 39 43 20          	cmp    %rax,0x20(%rbx)
    d017:	74 37                	je     d050 <dispose_chunk+0x820>
    d019:	45 31 db             	xor    %r11d,%r11d
    d01c:	4c 89 5b 28          	mov    %r11,0x28(%rbx)
    d020:	e9 1f f9 ff ff       	jmp    c944 <dispose_chunk+0x114>
    d025:	45 31 d2             	xor    %r10d,%r10d
    d028:	4e 89 94 cf 58 02 00 	mov    %r10,0x258(%rdi,%r9,8)
    d02f:	00 
    d030:	e9 99 fe ff ff       	jmp    cece <dispose_chunk+0x69e>
    d035:	45 31 d2             	xor    %r10d,%r10d
    d038:	4e 89 94 cf 58 02 00 	mov    %r10,0x258(%rdi,%r9,8)
    d03f:	00 
    d040:	e9 d9 fe ff ff       	jmp    cf1e <dispose_chunk+0x6ee>
    d045:	31 f6                	xor    %esi,%esi
    d047:	48 89 75 20          	mov    %rsi,0x20(%rbp)
    d04b:	e9 60 fa ff ff       	jmp    cab0 <dispose_chunk+0x280>
    d050:	31 ed                	xor    %ebp,%ebp
    d052:	48 89 6b 20          	mov    %rbp,0x20(%rbx)
    d056:	e9 e9 f8 ff ff       	jmp    c944 <dispose_chunk+0x114>
    d05b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000d060 <init_mparams.isra.0>:
    d060:	48 83 ec 18          	sub    $0x18,%rsp
    d064:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    d06b:	00 00 
    d06d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    d072:	b8 01 00 00 00       	mov    $0x1,%eax
    d077:	87 05 b3 dd 01 00    	xchg   %eax,0x1ddb3(%rip)        # 2ae30 <malloc_global_mutex>
    d07d:	85 c0                	test   %eax,%eax
    d07f:	0f 85 8b 00 00 00    	jne    d110 <init_mparams.isra.0+0xb0>
    d085:	48 83 3d 73 dd 01 00 	cmpq   $0x0,0x1dd73(%rip)        # 2ae00 <mparams>
    d08c:	00 
    d08d:	75 5d                	jne    d0ec <init_mparams.isra.0+0x8c>
    d08f:	66 0f 6f 05 19 60 00 	movdqa 0x6019(%rip),%xmm0        # 130b0 <g_dyn_entry_table+0x80>
    d096:	00 
    d097:	48 89 e7             	mov    %rsp,%rdi
    d09a:	be 08 00 00 00       	mov    $0x8,%esi
    d09f:	c7 05 7f dd 01 00 02 	movl   $0x2,0x1dd7f(%rip)        # 2ae28 <mparams+0x28>
    d0a6:	00 00 00 
    d0a9:	48 c7 05 fc dc 01 00 	movq   $0x2,0x1dcfc(%rip)        # 2adb0 <_gm_+0x370>
    d0b0:	02 00 00 00 
    d0b4:	0f 11 05 4d dd 01 00 	movups %xmm0,0x1dd4d(%rip)        # 2ae08 <mparams+0x8>
    d0bb:	66 0f 6f 05 fd 5f 00 	movdqa 0x5ffd(%rip),%xmm0        # 130c0 <g_dyn_entry_table+0x90>
    d0c2:	00 
    d0c3:	0f 11 05 4e dd 01 00 	movups %xmm0,0x1dd4e(%rip)        # 2ae18 <mparams+0x18>
    d0ca:	e8 b1 8c ff ff       	call   5d80 <sgx_read_rand>
    d0cf:	85 c0                	test   %eax,%eax
    d0d1:	75 69                	jne    d13c <init_mparams.isra.0+0xdc>
    d0d3:	48 8b 04 24          	mov    (%rsp),%rax
    d0d7:	48 35 55 55 55 55    	xor    $0x55555555,%rax
    d0dd:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    d0e1:	48 83 c8 08          	or     $0x8,%rax
    d0e5:	48 89 05 14 dd 01 00 	mov    %rax,0x1dd14(%rip)        # 2ae00 <mparams>
    d0ec:	c7 05 3a dd 01 00 00 	movl   $0x0,0x1dd3a(%rip)        # 2ae30 <malloc_global_mutex>
    d0f3:	00 00 00 
    d0f6:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    d0fb:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    d102:	00 00 
    d104:	75 31                	jne    d137 <init_mparams.isra.0+0xd7>
    d106:	48 83 c4 18          	add    $0x18,%rsp
    d10a:	c3                   	ret    
    d10b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    d110:	48 8d 15 19 dd 01 00 	lea    0x1dd19(%rip),%rdx        # 2ae30 <malloc_global_mutex>
    d117:	b9 01 00 00 00       	mov    $0x1,%ecx
    d11c:	0f 1f 40 00          	nopl   0x0(%rax)
    d120:	8b 02                	mov    (%rdx),%eax
    d122:	85 c0                	test   %eax,%eax
    d124:	75 fa                	jne    d120 <init_mparams.isra.0+0xc0>
    d126:	89 c8                	mov    %ecx,%eax
    d128:	87 05 02 dd 01 00    	xchg   %eax,0x1dd02(%rip)        # 2ae30 <malloc_global_mutex>
    d12e:	85 c0                	test   %eax,%eax
    d130:	75 ee                	jne    d120 <init_mparams.isra.0+0xc0>
    d132:	e9 4e ff ff ff       	jmp    d085 <init_mparams.isra.0+0x25>
    d137:	e8 44 39 00 00       	call   10a80 <__stack_chk_fail>
    d13c:	e8 f6 53 00 00       	call   12537 <abort>
    d141:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    d148:	00 00 00 
    d14b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000d150 <dlmalloc>:
    d150:	f3 0f 1e fa          	endbr64 
    d154:	41 57                	push   %r15
    d156:	41 56                	push   %r14
    d158:	41 55                	push   %r13
    d15a:	41 54                	push   %r12
    d15c:	55                   	push   %rbp
    d15d:	48 89 fd             	mov    %rdi,%rbp
    d160:	53                   	push   %rbx
    d161:	48 83 ec 18          	sub    $0x18,%rsp
    d165:	48 83 3d 93 dc 01 00 	cmpq   $0x0,0x1dc93(%rip)        # 2ae00 <mparams>
    d16c:	00 
    d16d:	0f 84 55 01 00 00    	je     d2c8 <dlmalloc+0x178>
    d173:	f6 05 36 dc 01 00 02 	testb  $0x2,0x1dc36(%rip)        # 2adb0 <_gm_+0x370>
    d17a:	0f 85 5a 01 00 00    	jne    d2da <dlmalloc+0x18a>
    d180:	48 81 fd e0 00 00 00 	cmp    $0xe0,%rbp
    d187:	0f 87 fb 00 00 00    	ja     d288 <dlmalloc+0x138>
    d18d:	48 83 fd 0e          	cmp    $0xe,%rbp
    d191:	0f 87 d9 00 00 00    	ja     d270 <dlmalloc+0x120>
    d197:	b9 04 00 00 00       	mov    $0x4,%ecx
    d19c:	41 bc 20 00 00 00    	mov    $0x20,%r12d
    d1a2:	8b 15 98 d8 01 00    	mov    0x1d898(%rip),%edx        # 2aa40 <_gm_>
    d1a8:	4c 8d 2d 91 d8 01 00 	lea    0x1d891(%rip),%r13        # 2aa40 <_gm_>
    d1af:	89 d0                	mov    %edx,%eax
    d1b1:	d3 e8                	shr    %cl,%eax
    d1b3:	a8 03                	test   $0x3,%al
    d1b5:	0f 84 d5 01 00 00    	je     d390 <dlmalloc+0x240>
    d1bb:	f7 d0                	not    %eax
    d1bd:	83 e0 01             	and    $0x1,%eax
    d1c0:	01 c1                	add    %eax,%ecx
    d1c2:	8d 44 09 09          	lea    0x9(%rcx,%rcx,1),%eax
    d1c6:	49 8d 74 c5 00       	lea    0x0(%r13,%rax,8),%rsi
    d1cb:	48 8b 5e 10          	mov    0x10(%rsi),%rbx
    d1cf:	48 8b 43 10          	mov    0x10(%rbx),%rax
    d1d3:	48 39 c6             	cmp    %rax,%rsi
    d1d6:	0f 84 a4 07 00 00    	je     d980 <dlmalloc+0x830>
    d1dc:	48 3b 05 75 d8 01 00 	cmp    0x1d875(%rip),%rax        # 2aa58 <_gm_+0x18>
    d1e3:	0f 82 c7 05 00 00    	jb     d7b0 <dlmalloc+0x660>
    d1e9:	48 39 58 18          	cmp    %rbx,0x18(%rax)
    d1ed:	0f 85 bd 05 00 00    	jne    d7b0 <dlmalloc+0x660>
    d1f3:	48 89 70 18          	mov    %rsi,0x18(%rax)
    d1f7:	48 89 46 10          	mov    %rax,0x10(%rsi)
    d1fb:	c1 e1 03             	shl    $0x3,%ecx
    d1fe:	89 c8                	mov    %ecx,%eax
    d200:	83 c8 03             	or     $0x3,%eax
    d203:	48 89 43 08          	mov    %rax,0x8(%rbx)
    d207:	48 8d 04 0b          	lea    (%rbx,%rcx,1),%rax
    d20b:	48 83 c3 10          	add    $0x10,%rbx
    d20f:	48 83 48 08 01       	orq    $0x1,0x8(%rax)
    d214:	4c 33 2d e5 db 01 00 	xor    0x1dbe5(%rip),%r13        # 2ae00 <mparams>
    d21b:	4c 89 28             	mov    %r13,(%rax)
    d21e:	48 85 db             	test   %rbx,%rbx
    d221:	0f 84 96 00 00 00    	je     d2bd <dlmalloc+0x16d>
    d227:	e8 74 a1 ff ff       	call   73a0 <get_heap_base>
    d22c:	48 39 c3             	cmp    %rax,%rbx
    d22f:	0f 82 7b 05 00 00    	jb     d7b0 <dlmalloc+0x660>
    d235:	48 01 dd             	add    %rbx,%rbp
    d238:	0f 82 72 05 00 00    	jb     d7b0 <dlmalloc+0x660>
    d23e:	31 ff                	xor    %edi,%edi
    d240:	e8 2b f4 ff ff       	call   c670 <sbrk>
    d245:	48 39 e8             	cmp    %rbp,%rax
    d248:	0f 82 62 05 00 00    	jb     d7b0 <dlmalloc+0x660>
    d24e:	f6 05 5b db 01 00 02 	testb  $0x2,0x1db5b(%rip)        # 2adb0 <_gm_+0x370>
    d255:	0f 85 35 05 00 00    	jne    d790 <dlmalloc+0x640>
    d25b:	48 83 c4 18          	add    $0x18,%rsp
    d25f:	48 89 d8             	mov    %rbx,%rax
    d262:	5b                   	pop    %rbx
    d263:	5d                   	pop    %rbp
    d264:	41 5c                	pop    %r12
    d266:	41 5d                	pop    %r13
    d268:	41 5e                	pop    %r14
    d26a:	41 5f                	pop    %r15
    d26c:	c3                   	ret    
    d26d:	0f 1f 00             	nopl   (%rax)
    d270:	4c 8d 65 1f          	lea    0x1f(%rbp),%r12
    d274:	49 83 e4 f0          	and    $0xfffffffffffffff0,%r12
    d278:	4c 89 e1             	mov    %r12,%rcx
    d27b:	48 c1 e9 03          	shr    $0x3,%rcx
    d27f:	e9 1e ff ff ff       	jmp    d1a2 <dlmalloc+0x52>
    d284:	0f 1f 40 00          	nopl   0x0(%rax)
    d288:	4c 8b 05 b9 d7 01 00 	mov    0x1d7b9(%rip),%r8        # 2aa48 <_gm_+0x8>
    d28f:	4c 8d 2d aa d7 01 00 	lea    0x1d7aa(%rip),%r13        # 2aa40 <_gm_>
    d296:	4c 89 c6             	mov    %r8,%rsi
    d299:	48 81 fd 7f ff ff ff 	cmp    $0xffffffffffffff7f,%rbp
    d2a0:	76 76                	jbe    d318 <dlmalloc+0x1c8>
    d2a2:	48 8b 05 57 db 01 00 	mov    0x1db57(%rip),%rax        # 2ae00 <mparams>
    d2a9:	49 83 f8 ff          	cmp    $0xffffffffffffffff,%r8
    d2ad:	0f 84 5d 02 00 00    	je     d510 <dlmalloc+0x3c0>
    d2b3:	48 85 c0             	test   %rax,%rax
    d2b6:	75 05                	jne    d2bd <dlmalloc+0x16d>
    d2b8:	e8 a3 fd ff ff       	call   d060 <init_mparams.isra.0>
    d2bd:	31 db                	xor    %ebx,%ebx
    d2bf:	eb 8d                	jmp    d24e <dlmalloc+0xfe>
    d2c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    d2c8:	e8 93 fd ff ff       	call   d060 <init_mparams.isra.0>
    d2cd:	f6 05 dc da 01 00 02 	testb  $0x2,0x1dadc(%rip)        # 2adb0 <_gm_+0x370>
    d2d4:	0f 84 a6 fe ff ff    	je     d180 <dlmalloc+0x30>
    d2da:	b8 01 00 00 00       	mov    $0x1,%eax
    d2df:	87 05 cf da 01 00    	xchg   %eax,0x1dacf(%rip)        # 2adb4 <_gm_+0x374>
    d2e5:	85 c0                	test   %eax,%eax
    d2e7:	0f 84 93 fe ff ff    	je     d180 <dlmalloc+0x30>
    d2ed:	ba 01 00 00 00       	mov    $0x1,%edx
    d2f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    d2f8:	8b 05 b6 da 01 00    	mov    0x1dab6(%rip),%eax        # 2adb4 <_gm_+0x374>
    d2fe:	85 c0                	test   %eax,%eax
    d300:	75 f6                	jne    d2f8 <dlmalloc+0x1a8>
    d302:	89 d0                	mov    %edx,%eax
    d304:	87 05 aa da 01 00    	xchg   %eax,0x1daaa(%rip)        # 2adb4 <_gm_+0x374>
    d30a:	85 c0                	test   %eax,%eax
    d30c:	75 ea                	jne    d2f8 <dlmalloc+0x1a8>
    d30e:	e9 6d fe ff ff       	jmp    d180 <dlmalloc+0x30>
    d313:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    d318:	44 8b 0d 25 d7 01 00 	mov    0x1d725(%rip),%r9d        # 2aa44 <_gm_+0x4>
    d31f:	4c 8d 65 1f          	lea    0x1f(%rbp),%r12
    d323:	49 83 e4 f0          	and    $0xfffffffffffffff0,%r12
    d327:	45 85 c9             	test   %r9d,%r9d
    d32a:	0f 85 20 02 00 00    	jne    d550 <dlmalloc+0x400>
    d330:	4c 39 e6             	cmp    %r12,%rsi
    d333:	0f 83 7f 01 00 00    	jae    d4b8 <dlmalloc+0x368>
    d339:	48 8b 05 10 d7 01 00 	mov    0x1d710(%rip),%rax        # 2aa50 <_gm_+0x10>
    d340:	48 8b 15 b9 da 01 00 	mov    0x1dab9(%rip),%rdx        # 2ae00 <mparams>
    d347:	49 39 c4             	cmp    %rax,%r12
    d34a:	0f 83 b0 06 00 00    	jae    da00 <dlmalloc+0x8b0>
    d350:	48 8b 1d 11 d7 01 00 	mov    0x1d711(%rip),%rbx        # 2aa68 <_gm_+0x28>
    d357:	4c 29 e0             	sub    %r12,%rax
    d35a:	4c 31 ea             	xor    %r13,%rdx
    d35d:	48 89 05 ec d6 01 00 	mov    %rax,0x1d6ec(%rip)        # 2aa50 <_gm_+0x10>
    d364:	48 83 c8 01          	or     $0x1,%rax
    d368:	4a 8d 0c 23          	lea    (%rbx,%r12,1),%rcx
    d36c:	49 83 cc 03          	or     $0x3,%r12
    d370:	48 89 0d f1 d6 01 00 	mov    %rcx,0x1d6f1(%rip)        # 2aa68 <_gm_+0x28>
    d377:	48 89 41 08          	mov    %rax,0x8(%rcx)
    d37b:	4c 89 63 08          	mov    %r12,0x8(%rbx)
    d37f:	48 89 11             	mov    %rdx,(%rcx)
    d382:	48 83 c3 10          	add    $0x10,%rbx
    d386:	e9 93 fe ff ff       	jmp    d21e <dlmalloc+0xce>
    d38b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    d390:	48 8b 35 b1 d6 01 00 	mov    0x1d6b1(%rip),%rsi        # 2aa48 <_gm_+0x8>
    d397:	4c 39 e6             	cmp    %r12,%rsi
    d39a:	0f 83 18 01 00 00    	jae    d4b8 <dlmalloc+0x368>
    d3a0:	85 c0                	test   %eax,%eax
    d3a2:	0f 84 10 04 00 00    	je     d7b8 <dlmalloc+0x668>
    d3a8:	bf 01 00 00 00       	mov    $0x1,%edi
    d3ad:	d3 e0                	shl    %cl,%eax
    d3af:	41 89 f9             	mov    %edi,%r9d
    d3b2:	41 d3 e1             	shl    %cl,%r9d
    d3b5:	45 01 c9             	add    %r9d,%r9d
    d3b8:	45 89 c8             	mov    %r9d,%r8d
    d3bb:	41 f7 d8             	neg    %r8d
    d3be:	45 09 c8             	or     %r9d,%r8d
    d3c1:	44 21 c0             	and    %r8d,%eax
    d3c4:	89 c1                	mov    %eax,%ecx
    d3c6:	f7 d9                	neg    %ecx
    d3c8:	21 c1                	and    %eax,%ecx
    d3ca:	f3 0f bc c9          	tzcnt  %ecx,%ecx
    d3ce:	8d 44 09 09          	lea    0x9(%rcx,%rcx,1),%eax
    d3d2:	4d 8d 44 c5 00       	lea    0x0(%r13,%rax,8),%r8
    d3d7:	49 8b 58 10          	mov    0x10(%r8),%rbx
    d3db:	48 8b 43 10          	mov    0x10(%rbx),%rax
    d3df:	49 39 c0             	cmp    %rax,%r8
    d3e2:	0f 84 d1 05 00 00    	je     d9b9 <dlmalloc+0x869>
    d3e8:	48 3b 05 69 d6 01 00 	cmp    0x1d669(%rip),%rax        # 2aa58 <_gm_+0x18>
    d3ef:	0f 82 bb 03 00 00    	jb     d7b0 <dlmalloc+0x660>
    d3f5:	48 39 58 18          	cmp    %rbx,0x18(%rax)
    d3f9:	0f 85 b1 03 00 00    	jne    d7b0 <dlmalloc+0x660>
    d3ff:	4c 89 40 18          	mov    %r8,0x18(%rax)
    d403:	49 89 40 10          	mov    %rax,0x10(%r8)
    d407:	8d 04 cd 00 00 00 00 	lea    0x0(,%rcx,8),%eax
    d40e:	48 8b 3d eb d9 01 00 	mov    0x1d9eb(%rip),%rdi        # 2ae00 <mparams>
    d415:	48 89 c2             	mov    %rax,%rdx
    d418:	48 89 c1             	mov    %rax,%rcx
    d41b:	48 01 d8             	add    %rbx,%rax
    d41e:	4c 29 e2             	sub    %r12,%rdx
    d421:	4c 31 ef             	xor    %r13,%rdi
    d424:	48 83 fa 1f          	cmp    $0x1f,%rdx
    d428:	0f 86 8d 0d 00 00    	jbe    e1bb <dlmalloc+0x106b>
    d42e:	4c 89 e1             	mov    %r12,%rcx
    d431:	49 01 dc             	add    %rbx,%r12
    d434:	48 83 c9 03          	or     $0x3,%rcx
    d438:	48 89 4b 08          	mov    %rcx,0x8(%rbx)
    d43c:	48 89 d1             	mov    %rdx,%rcx
    d43f:	48 83 c9 01          	or     $0x1,%rcx
    d443:	49 89 3c 24          	mov    %rdi,(%r12)
    d447:	49 89 4c 24 08       	mov    %rcx,0x8(%r12)
    d44c:	48 89 10             	mov    %rdx,(%rax)
    d44f:	48 85 f6             	test   %rsi,%rsi
    d452:	74 4d                	je     d4a1 <dlmalloc+0x351>
    d454:	48 c1 ee 03          	shr    $0x3,%rsi
    d458:	bf 01 00 00 00       	mov    $0x1,%edi
    d45d:	48 8b 05 fc d5 01 00 	mov    0x1d5fc(%rip),%rax        # 2aa60 <_gm_+0x20>
    d464:	48 89 f1             	mov    %rsi,%rcx
    d467:	8d 74 36 09          	lea    0x9(%rsi,%rsi,1),%esi
    d46b:	4d 8d 44 f5 00       	lea    0x0(%r13,%rsi,8),%r8
    d470:	8b 35 ca d5 01 00    	mov    0x1d5ca(%rip),%esi        # 2aa40 <_gm_>
    d476:	d3 e7                	shl    %cl,%edi
    d478:	85 fe                	test   %edi,%esi
    d47a:	0f 84 a9 10 00 00    	je     e529 <dlmalloc+0x13d9>
    d480:	49 8b 48 10          	mov    0x10(%r8),%rcx
    d484:	48 3b 0d cd d5 01 00 	cmp    0x1d5cd(%rip),%rcx        # 2aa58 <_gm_+0x18>
    d48b:	0f 82 1f 03 00 00    	jb     d7b0 <dlmalloc+0x660>
    d491:	49 89 40 10          	mov    %rax,0x10(%r8)
    d495:	48 89 41 18          	mov    %rax,0x18(%rcx)
    d499:	48 89 48 10          	mov    %rcx,0x10(%rax)
    d49d:	4c 89 40 18          	mov    %r8,0x18(%rax)
    d4a1:	48 89 15 a0 d5 01 00 	mov    %rdx,0x1d5a0(%rip)        # 2aa48 <_gm_+0x8>
    d4a8:	4c 89 25 b1 d5 01 00 	mov    %r12,0x1d5b1(%rip)        # 2aa60 <_gm_+0x20>
    d4af:	e9 ce fe ff ff       	jmp    d382 <dlmalloc+0x232>
    d4b4:	0f 1f 40 00          	nopl   0x0(%rax)
    d4b8:	48 8b 1d a1 d5 01 00 	mov    0x1d5a1(%rip),%rbx        # 2aa60 <_gm_+0x20>
    d4bf:	48 8b 3d 3a d9 01 00 	mov    0x1d93a(%rip),%rdi        # 2ae00 <mparams>
    d4c6:	48 89 f2             	mov    %rsi,%rdx
    d4c9:	4c 29 e2             	sub    %r12,%rdx
    d4cc:	48 8d 04 33          	lea    (%rbx,%rsi,1),%rax
    d4d0:	4c 31 ef             	xor    %r13,%rdi
    d4d3:	48 83 fa 1f          	cmp    $0x1f,%rdx
    d4d7:	0f 86 83 0a 00 00    	jbe    df60 <dlmalloc+0xe10>
    d4dd:	48 89 d6             	mov    %rdx,%rsi
    d4e0:	4a 8d 0c 23          	lea    (%rbx,%r12,1),%rcx
    d4e4:	49 83 cc 03          	or     $0x3,%r12
    d4e8:	48 89 15 59 d5 01 00 	mov    %rdx,0x1d559(%rip)        # 2aa48 <_gm_+0x8>
    d4ef:	48 83 ce 01          	or     $0x1,%rsi
    d4f3:	48 89 0d 66 d5 01 00 	mov    %rcx,0x1d566(%rip)        # 2aa60 <_gm_+0x20>
    d4fa:	48 89 71 08          	mov    %rsi,0x8(%rcx)
    d4fe:	48 89 10             	mov    %rdx,(%rax)
    d501:	4c 89 63 08          	mov    %r12,0x8(%rbx)
    d505:	48 89 39             	mov    %rdi,(%rcx)
    d508:	e9 75 fe ff ff       	jmp    d382 <dlmalloc+0x232>
    d50d:	0f 1f 00             	nopl   (%rax)
    d510:	48 8b 1d 49 d5 01 00 	mov    0x1d549(%rip),%rbx        # 2aa60 <_gm_+0x20>
    d517:	48 c7 c6 ff ff ff ff 	mov    $0xffffffffffffffff,%rsi
    d51e:	48 8d 43 ff          	lea    -0x1(%rbx),%rax
    d522:	48 c7 05 1b d5 01 00 	movq   $0x0,0x1d51b(%rip)        # 2aa48 <_gm_+0x8>
    d529:	00 00 00 00 
    d52d:	48 c7 05 28 d5 01 00 	movq   $0x0,0x1d528(%rip)        # 2aa60 <_gm_+0x20>
    d534:	00 00 00 00 
    d538:	48 89 73 08          	mov    %rsi,0x8(%rbx)
    d53c:	48 83 48 08 01       	orq    $0x1,0x8(%rax)
    d541:	4c 33 2d b8 d8 01 00 	xor    0x1d8b8(%rip),%r13        # 2ae00 <mparams>
    d548:	4c 89 28             	mov    %r13,(%rax)
    d54b:	e9 32 fe ff ff       	jmp    d382 <dlmalloc+0x232>
    d550:	4c 89 e0             	mov    %r12,%rax
    d553:	4c 89 e7             	mov    %r12,%rdi
    d556:	48 c1 e8 08          	shr    $0x8,%rax
    d55a:	48 f7 df             	neg    %rdi
    d55d:	41 89 c2             	mov    %eax,%r10d
    d560:	85 c0                	test   %eax,%eax
    d562:	0f 85 28 04 00 00    	jne    d990 <dlmalloc+0x840>
    d568:	48 8b 15 29 d7 01 00 	mov    0x1d729(%rip),%rdx        # 2ac98 <_gm_+0x258>
    d56f:	b9 39 00 00 00       	mov    $0x39,%ecx
    d574:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    d579:	48 85 d2             	test   %rdx,%rdx
    d57c:	0f 84 52 04 00 00    	je     d9d4 <dlmalloc+0x884>
    d582:	4d 89 e3             	mov    %r12,%r11
    d585:	49 d3 e3             	shl    %cl,%r11
    d588:	31 c9                	xor    %ecx,%ecx
    d58a:	31 db                	xor    %ebx,%ebx
    d58c:	eb 05                	jmp    d593 <dlmalloc+0x443>
    d58e:	66 90                	xchg   %ax,%ax
    d590:	4d 01 db             	add    %r11,%r11
    d593:	48 8b 42 08          	mov    0x8(%rdx),%rax
    d597:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    d59b:	4c 29 e0             	sub    %r12,%rax
    d59e:	48 39 f8             	cmp    %rdi,%rax
    d5a1:	73 0f                	jae    d5b2 <dlmalloc+0x462>
    d5a3:	48 85 c0             	test   %rax,%rax
    d5a6:	0f 84 c3 0b 00 00    	je     e16f <dlmalloc+0x101f>
    d5ac:	48 89 c7             	mov    %rax,%rdi
    d5af:	48 89 d3             	mov    %rdx,%rbx
    d5b2:	48 8b 42 28          	mov    0x28(%rdx),%rax
    d5b6:	4d 89 de             	mov    %r11,%r14
    d5b9:	49 c1 ee 3f          	shr    $0x3f,%r14
    d5bd:	4a 8b 54 f2 20       	mov    0x20(%rdx,%r14,8),%rdx
    d5c2:	48 85 c0             	test   %rax,%rax
    d5c5:	74 07                	je     d5ce <dlmalloc+0x47e>
    d5c7:	48 39 d0             	cmp    %rdx,%rax
    d5ca:	48 0f 45 c8          	cmovne %rax,%rcx
    d5ce:	48 85 d2             	test   %rdx,%rdx
    d5d1:	75 bd                	jne    d590 <dlmalloc+0x440>
    d5d3:	48 89 c8             	mov    %rcx,%rax
    d5d6:	48 09 d8             	or     %rbx,%rax
    d5d9:	0f 84 eb 03 00 00    	je     d9ca <dlmalloc+0x87a>
    d5df:	48 85 c9             	test   %rcx,%rcx
    d5e2:	75 0f                	jne    d5f3 <dlmalloc+0x4a3>
    d5e4:	eb 35                	jmp    d61b <dlmalloc+0x4cb>
    d5e6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    d5ed:	00 00 00 
    d5f0:	48 89 c1             	mov    %rax,%rcx
    d5f3:	48 8b 41 08          	mov    0x8(%rcx),%rax
    d5f7:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    d5fb:	4c 29 e0             	sub    %r12,%rax
    d5fe:	48 39 f8             	cmp    %rdi,%rax
    d601:	73 06                	jae    d609 <dlmalloc+0x4b9>
    d603:	48 89 c7             	mov    %rax,%rdi
    d606:	48 89 cb             	mov    %rcx,%rbx
    d609:	48 8b 41 20          	mov    0x20(%rcx),%rax
    d60d:	48 85 c0             	test   %rax,%rax
    d610:	75 de                	jne    d5f0 <dlmalloc+0x4a0>
    d612:	48 8b 41 28          	mov    0x28(%rcx),%rax
    d616:	48 85 c0             	test   %rax,%rax
    d619:	75 d5                	jne    d5f0 <dlmalloc+0x4a0>
    d61b:	48 85 db             	test   %rbx,%rbx
    d61e:	0f 84 0c fd ff ff    	je     d330 <dlmalloc+0x1e0>
    d624:	4c 89 c0             	mov    %r8,%rax
    d627:	4c 29 e0             	sub    %r12,%rax
    d62a:	48 39 c7             	cmp    %rax,%rdi
    d62d:	0f 83 fd fc ff ff    	jae    d330 <dlmalloc+0x1e0>
    d633:	4c 8b 1d 1e d4 01 00 	mov    0x1d41e(%rip),%r11        # 2aa58 <_gm_+0x18>
    d63a:	4c 39 db             	cmp    %r11,%rbx
    d63d:	0f 82 6d 01 00 00    	jb     d7b0 <dlmalloc+0x660>
    d643:	4e 8d 14 23          	lea    (%rbx,%r12,1),%r10
    d647:	4c 39 d3             	cmp    %r10,%rbx
    d64a:	0f 83 60 01 00 00    	jae    d7b0 <dlmalloc+0x660>
    d650:	4c 8b 73 18          	mov    0x18(%rbx),%r14
    d654:	4c 8b 7b 30          	mov    0x30(%rbx),%r15
    d658:	4c 39 f3             	cmp    %r14,%rbx
    d65b:	0f 84 2d 0d 00 00    	je     e38e <dlmalloc+0x123e>
    d661:	48 8b 43 10          	mov    0x10(%rbx),%rax
    d665:	4c 39 d8             	cmp    %r11,%rax
    d668:	0f 82 42 01 00 00    	jb     d7b0 <dlmalloc+0x660>
    d66e:	48 3b 58 18          	cmp    0x18(%rax),%rbx
    d672:	0f 85 38 01 00 00    	jne    d7b0 <dlmalloc+0x660>
    d678:	49 3b 5e 10          	cmp    0x10(%r14),%rbx
    d67c:	0f 85 2e 01 00 00    	jne    d7b0 <dlmalloc+0x660>
    d682:	4c 89 70 18          	mov    %r14,0x18(%rax)
    d686:	49 89 46 10          	mov    %rax,0x10(%r14)
    d68a:	4d 85 ff             	test   %r15,%r15
    d68d:	74 71                	je     d700 <dlmalloc+0x5b0>
    d68f:	8b 53 38             	mov    0x38(%rbx),%edx
    d692:	48 89 d0             	mov    %rdx,%rax
    d695:	49 3b 9c d5 58 02 00 	cmp    0x258(%r13,%rdx,8),%rbx
    d69c:	00 
    d69d:	0f 84 ca 0f 00 00    	je     e66d <dlmalloc+0x151d>
    d6a3:	4d 39 df             	cmp    %r11,%r15
    d6a6:	0f 82 04 01 00 00    	jb     d7b0 <dlmalloc+0x660>
    d6ac:	49 3b 5f 20          	cmp    0x20(%r15),%rbx
    d6b0:	0f 84 3e 11 00 00    	je     e7f4 <dlmalloc+0x16a4>
    d6b6:	4d 89 77 28          	mov    %r14,0x28(%r15)
    d6ba:	4d 85 f6             	test   %r14,%r14
    d6bd:	74 41                	je     d700 <dlmalloc+0x5b0>
    d6bf:	4d 39 de             	cmp    %r11,%r14
    d6c2:	0f 82 e8 00 00 00    	jb     d7b0 <dlmalloc+0x660>
    d6c8:	48 8b 43 20          	mov    0x20(%rbx),%rax
    d6cc:	4d 89 7e 30          	mov    %r15,0x30(%r14)
    d6d0:	48 85 c0             	test   %rax,%rax
    d6d3:	74 11                	je     d6e6 <dlmalloc+0x596>
    d6d5:	4c 39 d8             	cmp    %r11,%rax
    d6d8:	0f 82 d2 00 00 00    	jb     d7b0 <dlmalloc+0x660>
    d6de:	49 89 46 20          	mov    %rax,0x20(%r14)
    d6e2:	4c 89 70 30          	mov    %r14,0x30(%rax)
    d6e6:	48 8b 43 28          	mov    0x28(%rbx),%rax
    d6ea:	48 85 c0             	test   %rax,%rax
    d6ed:	74 11                	je     d700 <dlmalloc+0x5b0>
    d6ef:	4c 39 d8             	cmp    %r11,%rax
    d6f2:	0f 82 b8 00 00 00    	jb     d7b0 <dlmalloc+0x660>
    d6f8:	49 89 46 28          	mov    %rax,0x28(%r14)
    d6fc:	4c 89 70 30          	mov    %r14,0x30(%rax)
    d700:	48 8b 15 f9 d6 01 00 	mov    0x1d6f9(%rip),%rdx        # 2ae00 <mparams>
    d707:	4c 31 ea             	xor    %r13,%rdx
    d70a:	48 83 ff 1f          	cmp    $0x1f,%rdi
    d70e:	0f 86 fa 0c 00 00    	jbe    e40e <dlmalloc+0x12be>
    d714:	4c 89 e0             	mov    %r12,%rax
    d717:	48 89 f9             	mov    %rdi,%rcx
    d71a:	48 83 c8 03          	or     $0x3,%rax
    d71e:	48 c1 e9 03          	shr    $0x3,%rcx
    d722:	48 89 43 08          	mov    %rax,0x8(%rbx)
    d726:	48 89 f8             	mov    %rdi,%rax
    d729:	48 83 c8 01          	or     $0x1,%rax
    d72d:	49 89 12             	mov    %rdx,(%r10)
    d730:	49 89 42 08          	mov    %rax,0x8(%r10)
    d734:	49 89 3c 3a          	mov    %rdi,(%r10,%rdi,1)
    d738:	48 81 ff ff 00 00 00 	cmp    $0xff,%rdi
    d73f:	0f 87 e8 0c 00 00    	ja     e42d <dlmalloc+0x12dd>
    d745:	8d 44 09 09          	lea    0x9(%rcx,%rcx,1),%eax
    d749:	8b 35 f1 d2 01 00    	mov    0x1d2f1(%rip),%esi        # 2aa40 <_gm_>
    d74f:	49 8d 54 c5 00       	lea    0x0(%r13,%rax,8),%rdx
    d754:	b8 01 00 00 00       	mov    $0x1,%eax
    d759:	d3 e0                	shl    %cl,%eax
    d75b:	85 c6                	test   %eax,%esi
    d75d:	0f 84 39 10 00 00    	je     e79c <dlmalloc+0x164c>
    d763:	48 8b 42 10          	mov    0x10(%rdx),%rax
    d767:	4c 39 d8             	cmp    %r11,%rax
    d76a:	72 44                	jb     d7b0 <dlmalloc+0x660>
    d76c:	4c 89 52 10          	mov    %r10,0x10(%rdx)
    d770:	4c 89 50 18          	mov    %r10,0x18(%rax)
    d774:	49 89 42 10          	mov    %rax,0x10(%r10)
    d778:	49 89 52 18          	mov    %rdx,0x18(%r10)
    d77c:	48 83 c3 10          	add    $0x10,%rbx
    d780:	4c 89 c6             	mov    %r8,%rsi
    d783:	0f 85 9e fa ff ff    	jne    d227 <dlmalloc+0xd7>
    d789:	e9 a2 fb ff ff       	jmp    d330 <dlmalloc+0x1e0>
    d78e:	66 90                	xchg   %ax,%ax
    d790:	c7 05 1a d6 01 00 00 	movl   $0x0,0x1d61a(%rip)        # 2adb4 <_gm_+0x374>
    d797:	00 00 00 
    d79a:	e9 bc fa ff ff       	jmp    d25b <dlmalloc+0x10b>
    d79f:	48 8b 42 10          	mov    0x10(%rdx),%rax
    d7a3:	48 3b 05 ae d2 01 00 	cmp    0x1d2ae(%rip),%rax        # 2aa58 <_gm_+0x18>
    d7aa:	0f 83 57 06 00 00    	jae    de07 <dlmalloc+0xcb7>
    d7b0:	e8 82 4d 00 00       	call   12537 <abort>
    d7b5:	0f 1f 00             	nopl   (%rax)
    d7b8:	44 8b 0d 85 d2 01 00 	mov    0x1d285(%rip),%r9d        # 2aa44 <_gm_+0x4>
    d7bf:	45 85 c9             	test   %r9d,%r9d
    d7c2:	0f 84 71 fb ff ff    	je     d339 <dlmalloc+0x1e9>
    d7c8:	44 89 c8             	mov    %r9d,%eax
    d7cb:	f7 d8                	neg    %eax
    d7cd:	44 21 c8             	and    %r9d,%eax
    d7d0:	f3 0f bc c0          	tzcnt  %eax,%eax
    d7d4:	49 8b 84 c5 58 02 00 	mov    0x258(%r13,%rax,8),%rax
    d7db:	00 
    d7dc:	48 8b 78 08          	mov    0x8(%rax),%rdi
    d7e0:	48 89 c3             	mov    %rax,%rbx
    d7e3:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    d7e7:	4c 29 e7             	sub    %r12,%rdi
    d7ea:	eb 1d                	jmp    d809 <dlmalloc+0x6b9>
    d7ec:	0f 1f 40 00          	nopl   0x0(%rax)
    d7f0:	48 8b 41 08          	mov    0x8(%rcx),%rax
    d7f4:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    d7f8:	4c 29 e0             	sub    %r12,%rax
    d7fb:	48 39 f8             	cmp    %rdi,%rax
    d7fe:	73 06                	jae    d806 <dlmalloc+0x6b6>
    d800:	48 89 c7             	mov    %rax,%rdi
    d803:	48 89 cb             	mov    %rcx,%rbx
    d806:	48 89 c8             	mov    %rcx,%rax
    d809:	48 8b 48 20          	mov    0x20(%rax),%rcx
    d80d:	48 85 c9             	test   %rcx,%rcx
    d810:	75 de                	jne    d7f0 <dlmalloc+0x6a0>
    d812:	48 8b 48 28          	mov    0x28(%rax),%rcx
    d816:	48 85 c9             	test   %rcx,%rcx
    d819:	75 d5                	jne    d7f0 <dlmalloc+0x6a0>
    d81b:	4c 8b 1d 36 d2 01 00 	mov    0x1d236(%rip),%r11        # 2aa58 <_gm_+0x18>
    d822:	4c 39 db             	cmp    %r11,%rbx
    d825:	72 89                	jb     d7b0 <dlmalloc+0x660>
    d827:	4e 8d 14 23          	lea    (%rbx,%r12,1),%r10
    d82b:	4c 39 d3             	cmp    %r10,%rbx
    d82e:	73 80                	jae    d7b0 <dlmalloc+0x660>
    d830:	4c 8b 43 18          	mov    0x18(%rbx),%r8
    d834:	4c 8b 73 30          	mov    0x30(%rbx),%r14
    d838:	49 39 d8             	cmp    %rbx,%r8
    d83b:	0f 84 36 0d 00 00    	je     e577 <dlmalloc+0x1427>
    d841:	48 8b 43 10          	mov    0x10(%rbx),%rax
    d845:	4c 39 d8             	cmp    %r11,%rax
    d848:	0f 82 62 ff ff ff    	jb     d7b0 <dlmalloc+0x660>
    d84e:	48 39 58 18          	cmp    %rbx,0x18(%rax)
    d852:	0f 85 58 ff ff ff    	jne    d7b0 <dlmalloc+0x660>
    d858:	49 39 58 10          	cmp    %rbx,0x10(%r8)
    d85c:	0f 85 4e ff ff ff    	jne    d7b0 <dlmalloc+0x660>
    d862:	4c 89 40 18          	mov    %r8,0x18(%rax)
    d866:	49 89 40 10          	mov    %rax,0x10(%r8)
    d86a:	4d 85 f6             	test   %r14,%r14
    d86d:	74 71                	je     d8e0 <dlmalloc+0x790>
    d86f:	8b 4b 38             	mov    0x38(%rbx),%ecx
    d872:	48 89 c8             	mov    %rcx,%rax
    d875:	49 39 9c cd 58 02 00 	cmp    %rbx,0x258(%r13,%rcx,8)
    d87c:	00 
    d87d:	0f 84 14 10 00 00    	je     e897 <dlmalloc+0x1747>
    d883:	4d 39 de             	cmp    %r11,%r14
    d886:	0f 82 24 ff ff ff    	jb     d7b0 <dlmalloc+0x660>
    d88c:	49 39 5e 20          	cmp    %rbx,0x20(%r14)
    d890:	0f 84 00 11 00 00    	je     e996 <dlmalloc+0x1846>
    d896:	4d 89 46 28          	mov    %r8,0x28(%r14)
    d89a:	4d 85 c0             	test   %r8,%r8
    d89d:	74 41                	je     d8e0 <dlmalloc+0x790>
    d89f:	4d 39 d8             	cmp    %r11,%r8
    d8a2:	0f 82 08 ff ff ff    	jb     d7b0 <dlmalloc+0x660>
    d8a8:	48 8b 43 20          	mov    0x20(%rbx),%rax
    d8ac:	4d 89 70 30          	mov    %r14,0x30(%r8)
    d8b0:	48 85 c0             	test   %rax,%rax
    d8b3:	74 11                	je     d8c6 <dlmalloc+0x776>
    d8b5:	4c 39 d8             	cmp    %r11,%rax
    d8b8:	0f 82 f2 fe ff ff    	jb     d7b0 <dlmalloc+0x660>
    d8be:	49 89 40 20          	mov    %rax,0x20(%r8)
    d8c2:	4c 89 40 30          	mov    %r8,0x30(%rax)
    d8c6:	48 8b 43 28          	mov    0x28(%rbx),%rax
    d8ca:	48 85 c0             	test   %rax,%rax
    d8cd:	74 11                	je     d8e0 <dlmalloc+0x790>
    d8cf:	4c 39 d8             	cmp    %r11,%rax
    d8d2:	0f 82 d8 fe ff ff    	jb     d7b0 <dlmalloc+0x660>
    d8d8:	49 89 40 28          	mov    %rax,0x28(%r8)
    d8dc:	4c 89 40 30          	mov    %r8,0x30(%rax)
    d8e0:	48 8b 05 19 d5 01 00 	mov    0x1d519(%rip),%rax        # 2ae00 <mparams>
    d8e7:	4c 31 e8             	xor    %r13,%rax
    d8ea:	48 83 ff 1f          	cmp    $0x1f,%rdi
    d8ee:	0f 86 d2 0d 00 00    	jbe    e6c6 <dlmalloc+0x1576>
    d8f4:	4c 89 e1             	mov    %r12,%rcx
    d8f7:	48 83 c9 03          	or     $0x3,%rcx
    d8fb:	48 89 4b 08          	mov    %rcx,0x8(%rbx)
    d8ff:	49 89 02             	mov    %rax,(%r10)
    d902:	48 89 f8             	mov    %rdi,%rax
    d905:	48 83 c8 01          	or     $0x1,%rax
    d909:	49 89 42 08          	mov    %rax,0x8(%r10)
    d90d:	49 89 3c 3a          	mov    %rdi,(%r10,%rdi,1)
    d911:	48 85 f6             	test   %rsi,%rsi
    d914:	74 46                	je     d95c <dlmalloc+0x80c>
    d916:	48 c1 ee 03          	shr    $0x3,%rsi
    d91a:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    d920:	48 8b 05 39 d1 01 00 	mov    0x1d139(%rip),%rax        # 2aa60 <_gm_+0x20>
    d927:	48 89 f1             	mov    %rsi,%rcx
    d92a:	8d 74 36 09          	lea    0x9(%rsi,%rsi,1),%esi
    d92e:	41 d3 e0             	shl    %cl,%r8d
    d931:	4d 8d 4c f5 00       	lea    0x0(%r13,%rsi,8),%r9
    d936:	44 85 c2             	test   %r8d,%edx
    d939:	0f 84 79 0f 00 00    	je     e8b8 <dlmalloc+0x1768>
    d93f:	49 8b 51 10          	mov    0x10(%r9),%rdx
    d943:	4c 39 da             	cmp    %r11,%rdx
    d946:	0f 82 64 fe ff ff    	jb     d7b0 <dlmalloc+0x660>
    d94c:	49 89 41 10          	mov    %rax,0x10(%r9)
    d950:	48 89 42 18          	mov    %rax,0x18(%rdx)
    d954:	48 89 50 10          	mov    %rdx,0x10(%rax)
    d958:	4c 89 48 18          	mov    %r9,0x18(%rax)
    d95c:	48 89 3d e5 d0 01 00 	mov    %rdi,0x1d0e5(%rip)        # 2aa48 <_gm_+0x8>
    d963:	4c 89 15 f6 d0 01 00 	mov    %r10,0x1d0f6(%rip)        # 2aa60 <_gm_+0x20>
    d96a:	48 83 c3 10          	add    $0x10,%rbx
    d96e:	0f 85 b3 f8 ff ff    	jne    d227 <dlmalloc+0xd7>
    d974:	48 8b 35 cd d0 01 00 	mov    0x1d0cd(%rip),%rsi        # 2aa48 <_gm_+0x8>
    d97b:	e9 b0 f9 ff ff       	jmp    d330 <dlmalloc+0x1e0>
    d980:	0f b3 ca             	btr    %ecx,%edx
    d983:	89 15 b7 d0 01 00    	mov    %edx,0x1d0b7(%rip)        # 2aa40 <_gm_>
    d989:	e9 6d f8 ff ff       	jmp    d1fb <dlmalloc+0xab>
    d98e:	66 90                	xchg   %ax,%ax
    d990:	3d ff ff 00 00       	cmp    $0xffff,%eax
    d995:	0f 86 85 07 00 00    	jbe    e120 <dlmalloc+0xfd0>
    d99b:	48 8b 15 ee d3 01 00 	mov    0x1d3ee(%rip),%rdx        # 2ad90 <_gm_+0x350>
    d9a2:	4d 89 e3             	mov    %r12,%r11
    d9a5:	41 ba 1f 00 00 00    	mov    $0x1f,%r10d
    d9ab:	48 85 d2             	test   %rdx,%rdx
    d9ae:	0f 85 d4 fb ff ff    	jne    d588 <dlmalloc+0x438>
    d9b4:	e9 77 f9 ff ff       	jmp    d330 <dlmalloc+0x1e0>
    d9b9:	d3 e7                	shl    %cl,%edi
    d9bb:	f7 d7                	not    %edi
    d9bd:	21 d7                	and    %edx,%edi
    d9bf:	89 3d 7b d0 01 00    	mov    %edi,0x1d07b(%rip)        # 2aa40 <_gm_>
    d9c5:	e9 3d fa ff ff       	jmp    d407 <dlmalloc+0x2b7>
    d9ca:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    d9cf:	44 89 d1             	mov    %r10d,%ecx
    d9d2:	d3 e0                	shl    %cl,%eax
    d9d4:	44 21 c8             	and    %r9d,%eax
    d9d7:	0f 84 53 f9 ff ff    	je     d330 <dlmalloc+0x1e0>
    d9dd:	89 c2                	mov    %eax,%edx
    d9df:	31 db                	xor    %ebx,%ebx
    d9e1:	f7 da                	neg    %edx
    d9e3:	21 d0                	and    %edx,%eax
    d9e5:	f3 0f bc c0          	tzcnt  %eax,%eax
    d9e9:	49 8b 8c c5 58 02 00 	mov    0x258(%r13,%rax,8),%rcx
    d9f0:	00 
    d9f1:	48 85 c9             	test   %rcx,%rcx
    d9f4:	0f 85 f9 fb ff ff    	jne    d5f3 <dlmalloc+0x4a3>
    d9fa:	e9 31 f9 ff ff       	jmp    d330 <dlmalloc+0x1e0>
    d9ff:	90                   	nop
    da00:	48 85 d2             	test   %rdx,%rdx
    da03:	0f 84 74 12 00 00    	je     ec7d <dlmalloc+0x1b2d>
    da09:	48 8b 05 00 d4 01 00 	mov    0x1d400(%rip),%rax        # 2ae10 <mparams+0x10>
    da10:	49 8d 4c 04 5f       	lea    0x5f(%r12,%rax,1),%rcx
    da15:	48 f7 d8             	neg    %rax
    da18:	48 21 c1             	and    %rax,%rcx
    da1b:	49 39 cc             	cmp    %rcx,%r12
    da1e:	0f 83 99 f8 ff ff    	jae    d2bd <dlmalloc+0x16d>
    da24:	48 8b 05 7d d3 01 00 	mov    0x1d37d(%rip),%rax        # 2ada8 <_gm_+0x368>
    da2b:	48 85 c0             	test   %rax,%rax
    da2e:	74 1d                	je     da4d <dlmalloc+0x8fd>
    da30:	48 8b 15 61 d3 01 00 	mov    0x1d361(%rip),%rdx        # 2ad98 <_gm_+0x358>
    da37:	48 8d 34 11          	lea    (%rcx,%rdx,1),%rsi
    da3b:	48 39 f2             	cmp    %rsi,%rdx
    da3e:	0f 83 79 f8 ff ff    	jae    d2bd <dlmalloc+0x16d>
    da44:	48 39 f0             	cmp    %rsi,%rax
    da47:	0f 82 70 f8 ff ff    	jb     d2bd <dlmalloc+0x16d>
    da4d:	f6 05 5c d3 01 00 04 	testb  $0x4,0x1d35c(%rip)        # 2adb0 <_gm_+0x370>
    da54:	0f 85 b9 00 00 00    	jne    db13 <dlmalloc+0x9c3>
    da5a:	48 8b 15 07 d0 01 00 	mov    0x1d007(%rip),%rdx        # 2aa68 <_gm_+0x28>
    da61:	48 85 d2             	test   %rdx,%rdx
    da64:	0f 84 b6 05 00 00    	je     e020 <dlmalloc+0xed0>
    da6a:	4c 8d 35 47 d3 01 00 	lea    0x1d347(%rip),%r14        # 2adb8 <_gm_+0x378>
    da71:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    da78:	49 8b 06             	mov    (%r14),%rax
    da7b:	48 39 c2             	cmp    %rax,%rdx
    da7e:	72 0d                	jb     da8d <dlmalloc+0x93d>
    da80:	49 03 46 08          	add    0x8(%r14),%rax
    da84:	48 39 c2             	cmp    %rax,%rdx
    da87:	0f 82 44 07 00 00    	jb     e1d1 <dlmalloc+0x1081>
    da8d:	4d 8b 76 10          	mov    0x10(%r14),%r14
    da91:	4d 85 f6             	test   %r14,%r14
    da94:	75 e2                	jne    da78 <dlmalloc+0x928>
    da96:	b8 01 00 00 00       	mov    $0x1,%eax
    da9b:	87 05 8f d3 01 00    	xchg   %eax,0x1d38f(%rip)        # 2ae30 <malloc_global_mutex>
    daa1:	85 c0                	test   %eax,%eax
    daa3:	0f 84 8a 05 00 00    	je     e033 <dlmalloc+0xee3>
    daa9:	45 31 f6             	xor    %r14d,%r14d
    daac:	48 8d 15 7d d3 01 00 	lea    0x1d37d(%rip),%rdx        # 2ae30 <malloc_global_mutex>
    dab3:	be 01 00 00 00       	mov    $0x1,%esi
    dab8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    dabf:	00 
    dac0:	8b 02                	mov    (%rdx),%eax
    dac2:	85 c0                	test   %eax,%eax
    dac4:	75 fa                	jne    dac0 <dlmalloc+0x970>
    dac6:	89 f0                	mov    %esi,%eax
    dac8:	87 05 62 d3 01 00    	xchg   %eax,0x1d362(%rip)        # 2ae30 <malloc_global_mutex>
    dace:	85 c0                	test   %eax,%eax
    dad0:	75 ee                	jne    dac0 <dlmalloc+0x970>
    dad2:	4d 85 f6             	test   %r14,%r14
    dad5:	0f 84 58 05 00 00    	je     e033 <dlmalloc+0xee3>
    dadb:	48 8b 05 2e d3 01 00 	mov    0x1d32e(%rip),%rax        # 2ae10 <mparams+0x10>
    dae2:	4c 8d 78 5f          	lea    0x5f(%rax),%r15
    dae6:	4c 2b 3d 63 cf 01 00 	sub    0x1cf63(%rip),%r15        # 2aa50 <_gm_+0x10>
    daed:	48 f7 d8             	neg    %rax
    daf0:	4d 01 e7             	add    %r12,%r15
    daf3:	49 21 c7             	and    %rax,%r15
    daf6:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
    dafd:	ff ff 7f 
    db00:	4c 39 f8             	cmp    %r15,%rax
    db03:	0f 83 73 06 00 00    	jae    e17c <dlmalloc+0x102c>
    db09:	c7 05 1d d3 01 00 00 	movl   $0x0,0x1d31d(%rip)        # 2ae30 <malloc_global_mutex>
    db10:	00 00 00 
    db13:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
    db1a:	ff ff 7f 
    db1d:	48 39 c8             	cmp    %rcx,%rax
    db20:	73 16                	jae    db38 <dlmalloc+0x9e8>
    db22:	e8 29 34 00 00       	call   10f50 <__errno_location>
    db27:	31 db                	xor    %ebx,%ebx
    db29:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
    db2f:	e9 1a f7 ff ff       	jmp    d24e <dlmalloc+0xfe>
    db34:	0f 1f 40 00          	nopl   0x0(%rax)
    db38:	b8 01 00 00 00       	mov    $0x1,%eax
    db3d:	87 05 ed d2 01 00    	xchg   %eax,0x1d2ed(%rip)        # 2ae30 <malloc_global_mutex>
    db43:	48 8d 15 e6 d2 01 00 	lea    0x1d2e6(%rip),%rdx        # 2ae30 <malloc_global_mutex>
    db4a:	be 01 00 00 00       	mov    $0x1,%esi
    db4f:	85 c0                	test   %eax,%eax
    db51:	0f 85 11 03 00 00    	jne    de68 <dlmalloc+0xd18>
    db57:	48 89 cf             	mov    %rcx,%rdi
    db5a:	e8 11 eb ff ff       	call   c670 <sbrk>
    db5f:	31 ff                	xor    %edi,%edi
    db61:	48 89 c3             	mov    %rax,%rbx
    db64:	e8 07 eb ff ff       	call   c670 <sbrk>
    db69:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
    db6d:	0f 95 c1             	setne  %cl
    db70:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    db74:	c7 05 b2 d2 01 00 00 	movl   $0x0,0x1d2b2(%rip)        # 2ae30 <malloc_global_mutex>
    db7b:	00 00 00 
    db7e:	0f 95 c2             	setne  %dl
    db81:	84 d1                	test   %dl,%cl
    db83:	74 9d                	je     db22 <dlmalloc+0x9d2>
    db85:	48 39 c3             	cmp    %rax,%rbx
    db88:	73 98                	jae    db22 <dlmalloc+0x9d2>
    db8a:	48 29 d8             	sub    %rbx,%rax
    db8d:	49 89 c7             	mov    %rax,%r15
    db90:	49 8d 44 24 50       	lea    0x50(%r12),%rax
    db95:	4c 39 f8             	cmp    %r15,%rax
    db98:	73 88                	jae    db22 <dlmalloc+0x9d2>
    db9a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    dba0:	48 8b 05 f1 d1 01 00 	mov    0x1d1f1(%rip),%rax        # 2ad98 <_gm_+0x358>
    dba7:	4c 01 f8             	add    %r15,%rax
    dbaa:	48 39 05 ef d1 01 00 	cmp    %rax,0x1d1ef(%rip)        # 2ada0 <_gm_+0x360>
    dbb1:	48 89 05 e0 d1 01 00 	mov    %rax,0x1d1e0(%rip)        # 2ad98 <_gm_+0x358>
    dbb8:	73 07                	jae    dbc1 <dlmalloc+0xa71>
    dbba:	48 89 05 df d1 01 00 	mov    %rax,0x1d1df(%rip)        # 2ada0 <_gm_+0x360>
    dbc1:	48 8b 35 a0 ce 01 00 	mov    0x1cea0(%rip),%rsi        # 2aa68 <_gm_+0x28>
    dbc8:	48 8d 05 e9 d1 01 00 	lea    0x1d1e9(%rip),%rax        # 2adb8 <_gm_+0x378>
    dbcf:	48 85 f6             	test   %rsi,%rsi
    dbd2:	75 15                	jne    dbe9 <dlmalloc+0xa99>
    dbd4:	e9 a7 02 00 00       	jmp    de80 <dlmalloc+0xd30>
    dbd9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    dbe0:	48 8b 40 10          	mov    0x10(%rax),%rax
    dbe4:	48 85 c0             	test   %rax,%rax
    dbe7:	74 27                	je     dc10 <dlmalloc+0xac0>
    dbe9:	48 8b 10             	mov    (%rax),%rdx
    dbec:	48 8b 48 08          	mov    0x8(%rax),%rcx
    dbf0:	48 8d 3c 0a          	lea    (%rdx,%rcx,1),%rdi
    dbf4:	48 39 fb             	cmp    %rdi,%rbx
    dbf7:	75 e7                	jne    dbe0 <dlmalloc+0xa90>
    dbf9:	f6 40 18 08          	testb  $0x8,0x18(%rax)
    dbfd:	75 11                	jne    dc10 <dlmalloc+0xac0>
    dbff:	48 39 d6             	cmp    %rdx,%rsi
    dc02:	72 0c                	jb     dc10 <dlmalloc+0xac0>
    dc04:	48 39 de             	cmp    %rbx,%rsi
    dc07:	0f 82 ed 09 00 00    	jb     e5fa <dlmalloc+0x14aa>
    dc0d:	0f 1f 00             	nopl   (%rax)
    dc10:	48 3b 1d 41 ce 01 00 	cmp    0x1ce41(%rip),%rbx        # 2aa58 <_gm_+0x18>
    dc17:	73 07                	jae    dc20 <dlmalloc+0xad0>
    dc19:	48 89 1d 38 ce 01 00 	mov    %rbx,0x1ce38(%rip)        # 2aa58 <_gm_+0x18>
    dc20:	4a 8d 14 3b          	lea    (%rbx,%r15,1),%rdx
    dc24:	48 8d 05 8d d1 01 00 	lea    0x1d18d(%rip),%rax        # 2adb8 <_gm_+0x378>
    dc2b:	eb 10                	jmp    dc3d <dlmalloc+0xaed>
    dc2d:	0f 1f 00             	nopl   (%rax)
    dc30:	48 8b 40 10          	mov    0x10(%rax),%rax
    dc34:	48 85 c0             	test   %rax,%rax
    dc37:	0f 84 b3 05 00 00    	je     e1f0 <dlmalloc+0x10a0>
    dc3d:	48 39 10             	cmp    %rdx,(%rax)
    dc40:	75 ee                	jne    dc30 <dlmalloc+0xae0>
    dc42:	44 8b 48 18          	mov    0x18(%rax),%r9d
    dc46:	49 89 d8             	mov    %rbx,%r8
    dc49:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
    dc4d:	41 83 e0 0f          	and    $0xf,%r8d
    dc51:	41 83 e1 08          	and    $0x8,%r9d
    dc55:	0f 84 a5 05 00 00    	je     e200 <dlmalloc+0x10b0>
    dc5b:	48 8d 05 56 d1 01 00 	lea    0x1d156(%rip),%rax        # 2adb8 <_gm_+0x378>
    dc62:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    dc68:	48 8b 10             	mov    (%rax),%rdx
    dc6b:	48 39 d6             	cmp    %rdx,%rsi
    dc6e:	72 09                	jb     dc79 <dlmalloc+0xb29>
    dc70:	48 03 50 08          	add    0x8(%rax),%rdx
    dc74:	48 39 d6             	cmp    %rdx,%rsi
    dc77:	72 19                	jb     dc92 <dlmalloc+0xb42>
    dc79:	48 8b 40 10          	mov    0x10(%rax),%rax
    dc7d:	48 85 c0             	test   %rax,%rax
    dc80:	75 e6                	jne    dc68 <dlmalloc+0xb18>
    dc82:	48 8b 14 25 08 00 00 	mov    0x8,%rdx
    dc89:	00 
    dc8a:	48 03 14 25 00 00 00 	add    0x0,%rdx
    dc91:	00 
    dc92:	48 8d 42 b1          	lea    -0x4f(%rdx),%rax
    dc96:	48 c7 c1 a1 ff ff ff 	mov    $0xffffffffffffffa1,%rcx
    dc9d:	a8 0f                	test   $0xf,%al
    dc9f:	74 0a                	je     dcab <dlmalloc+0xb5b>
    dca1:	48 f7 d8             	neg    %rax
    dca4:	83 e0 0f             	and    $0xf,%eax
    dca7:	48 8d 48 a1          	lea    -0x5f(%rax),%rcx
    dcab:	48 01 d1             	add    %rdx,%rcx
    dcae:	48 8d 46 20          	lea    0x20(%rsi),%rax
    dcb2:	4d 8d 4f b0          	lea    -0x50(%r15),%r9
    dcb6:	48 39 c1             	cmp    %rax,%rcx
    dcb9:	48 0f 42 ce          	cmovb  %rsi,%rcx
    dcbd:	4c 8d 51 10          	lea    0x10(%rcx),%r10
    dcc1:	4d 85 c0             	test   %r8,%r8
    dcc4:	0f 84 86 02 00 00    	je     df50 <dlmalloc+0xe00>
    dcca:	48 f7 df             	neg    %rdi
    dccd:	4c 89 c8             	mov    %r9,%rax
    dcd0:	83 e7 0f             	and    $0xf,%edi
    dcd3:	4c 8d 04 3b          	lea    (%rbx,%rdi,1),%r8
    dcd7:	48 29 f8             	sub    %rdi,%rax
    dcda:	48 89 05 6f cd 01 00 	mov    %rax,0x1cd6f(%rip)        # 2aa50 <_gm_+0x10>
    dce1:	48 83 c8 01          	or     $0x1,%rax
    dce5:	f3 0f 6f 15 cb d0 01 	movdqu 0x1d0cb(%rip),%xmm2        # 2adb8 <_gm_+0x378>
    dcec:	00 
    dced:	4c 89 05 74 cd 01 00 	mov    %r8,0x1cd74(%rip)        # 2aa68 <_gm_+0x28>
    dcf4:	49 89 40 08          	mov    %rax,0x8(%r8)
    dcf8:	48 8b 05 21 d1 01 00 	mov    0x1d121(%rip),%rax        # 2ae20 <mparams+0x20>
    dcff:	4a c7 44 0b 08 50 00 	movq   $0x50,0x8(%rbx,%r9,1)
    dd06:	00 00 
    dd08:	48 89 05 61 cd 01 00 	mov    %rax,0x1cd61(%rip)        # 2aa70 <_gm_+0x30>
    dd0f:	48 8b 05 ea d0 01 00 	mov    0x1d0ea(%rip),%rax        # 2ae00 <mparams>
    dd16:	0f 11 51 10          	movups %xmm2,0x10(%rcx)
    dd1a:	f3 0f 6f 1d a6 d0 01 	movdqu 0x1d0a6(%rip),%xmm3        # 2adc8 <_gm_+0x388>
    dd21:	00 
    dd22:	4c 31 e8             	xor    %r13,%rax
    dd25:	48 c7 41 08 33 00 00 	movq   $0x33,0x8(%rcx)
    dd2c:	00 
    dd2d:	48 89 41 30          	mov    %rax,0x30(%rcx)
    dd31:	48 8d 41 38          	lea    0x38(%rcx),%rax
    dd35:	48 89 c7             	mov    %rax,%rdi
    dd38:	48 8d 41 40          	lea    0x40(%rcx),%rax
    dd3c:	0f 11 59 20          	movups %xmm3,0x20(%rcx)
    dd40:	48 f7 d7             	not    %rdi
    dd43:	48 89 1d 6e d0 01 00 	mov    %rbx,0x1d06e(%rip)        # 2adb8 <_gm_+0x378>
    dd4a:	48 01 d7             	add    %rdx,%rdi
    dd4d:	4c 89 3d 6c d0 01 00 	mov    %r15,0x1d06c(%rip)        # 2adc0 <_gm_+0x380>
    dd54:	48 c1 ef 03          	shr    $0x3,%rdi
    dd58:	4c 89 15 69 d0 01 00 	mov    %r10,0x1d069(%rip)        # 2adc8 <_gm_+0x388>
    dd5f:	c7 05 67 d0 01 00 00 	movl   $0x0,0x1d067(%rip)        # 2add0 <_gm_+0x390>
    dd66:	00 00 00 
    dd69:	83 e7 01             	and    $0x1,%edi
    dd6c:	48 c7 41 38 0b 00 00 	movq   $0xb,0x38(%rcx)
    dd73:	00 
    dd74:	48 39 d0             	cmp    %rdx,%rax
    dd77:	73 2f                	jae    dda8 <dlmalloc+0xc58>
    dd79:	48 85 ff             	test   %rdi,%rdi
    dd7c:	74 12                	je     dd90 <dlmalloc+0xc40>
    dd7e:	48 c7 00 0b 00 00 00 	movq   $0xb,(%rax)
    dd85:	48 8d 41 48          	lea    0x48(%rcx),%rax
    dd89:	48 39 d0             	cmp    %rdx,%rax
    dd8c:	73 1a                	jae    dda8 <dlmalloc+0xc58>
    dd8e:	66 90                	xchg   %ax,%ax
    dd90:	48 c7 00 0b 00 00 00 	movq   $0xb,(%rax)
    dd97:	48 83 c0 10          	add    $0x10,%rax
    dd9b:	48 c7 40 f8 0b 00 00 	movq   $0xb,-0x8(%rax)
    dda2:	00 
    dda3:	48 39 d0             	cmp    %rdx,%rax
    dda6:	72 e8                	jb     dd90 <dlmalloc+0xc40>
    dda8:	48 39 ce             	cmp    %rcx,%rsi
    ddab:	0f 84 5f 02 00 00    	je     e010 <dlmalloc+0xec0>
    ddb1:	48 89 ca             	mov    %rcx,%rdx
    ddb4:	48 83 61 08 fe       	andq   $0xfffffffffffffffe,0x8(%rcx)
    ddb9:	48 29 f2             	sub    %rsi,%rdx
    ddbc:	48 89 d0             	mov    %rdx,%rax
    ddbf:	48 83 c8 01          	or     $0x1,%rax
    ddc3:	48 89 46 08          	mov    %rax,0x8(%rsi)
    ddc7:	48 89 11             	mov    %rdx,(%rcx)
    ddca:	48 89 d1             	mov    %rdx,%rcx
    ddcd:	48 c1 e9 03          	shr    $0x3,%rcx
    ddd1:	48 81 fa ff 00 00 00 	cmp    $0xff,%rdx
    ddd8:	0f 87 92 01 00 00    	ja     df70 <dlmalloc+0xe20>
    ddde:	8d 44 09 09          	lea    0x9(%rcx,%rcx,1),%eax
    dde2:	8b 3d 58 cc 01 00    	mov    0x1cc58(%rip),%edi        # 2aa40 <_gm_>
    dde8:	49 8d 54 c5 00       	lea    0x0(%r13,%rax,8),%rdx
    dded:	b8 01 00 00 00       	mov    $0x1,%eax
    ddf2:	d3 e0                	shl    %cl,%eax
    ddf4:	85 c7                	test   %eax,%edi
    ddf6:	0f 85 a3 f9 ff ff    	jne    d79f <dlmalloc+0x64f>
    ddfc:	09 c7                	or     %eax,%edi
    ddfe:	48 89 d0             	mov    %rdx,%rax
    de01:	89 3d 39 cc 01 00    	mov    %edi,0x1cc39(%rip)        # 2aa40 <_gm_>
    de07:	48 89 72 10          	mov    %rsi,0x10(%rdx)
    de0b:	48 89 70 18          	mov    %rsi,0x18(%rax)
    de0f:	48 89 56 18          	mov    %rdx,0x18(%rsi)
    de13:	48 89 46 10          	mov    %rax,0x10(%rsi)
    de17:	48 8b 05 32 cc 01 00 	mov    0x1cc32(%rip),%rax        # 2aa50 <_gm_+0x10>
    de1e:	49 39 c4             	cmp    %rax,%r12
    de21:	0f 83 fb fc ff ff    	jae    db22 <dlmalloc+0x9d2>
    de27:	48 8b 1d 3a cc 01 00 	mov    0x1cc3a(%rip),%rbx        # 2aa68 <_gm_+0x28>
    de2e:	4c 29 e0             	sub    %r12,%rax
    de31:	4c 33 2d c8 cf 01 00 	xor    0x1cfc8(%rip),%r13        # 2ae00 <mparams>
    de38:	48 89 05 11 cc 01 00 	mov    %rax,0x1cc11(%rip)        # 2aa50 <_gm_+0x10>
    de3f:	48 83 c8 01          	or     $0x1,%rax
    de43:	4a 8d 14 23          	lea    (%rbx,%r12,1),%rdx
    de47:	49 83 cc 03          	or     $0x3,%r12
    de4b:	48 89 15 16 cc 01 00 	mov    %rdx,0x1cc16(%rip)        # 2aa68 <_gm_+0x28>
    de52:	48 89 42 08          	mov    %rax,0x8(%rdx)
    de56:	4c 89 63 08          	mov    %r12,0x8(%rbx)
    de5a:	4c 89 2a             	mov    %r13,(%rdx)
    de5d:	e9 20 f5 ff ff       	jmp    d382 <dlmalloc+0x232>
    de62:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    de68:	8b 02                	mov    (%rdx),%eax
    de6a:	85 c0                	test   %eax,%eax
    de6c:	75 fa                	jne    de68 <dlmalloc+0xd18>
    de6e:	89 f0                	mov    %esi,%eax
    de70:	87 05 ba cf 01 00    	xchg   %eax,0x1cfba(%rip)        # 2ae30 <malloc_global_mutex>
    de76:	85 c0                	test   %eax,%eax
    de78:	75 ee                	jne    de68 <dlmalloc+0xd18>
    de7a:	e9 d8 fc ff ff       	jmp    db57 <dlmalloc+0xa07>
    de7f:	90                   	nop
    de80:	48 8b 05 d1 cb 01 00 	mov    0x1cbd1(%rip),%rax        # 2aa58 <_gm_+0x18>
    de87:	48 85 c0             	test   %rax,%rax
    de8a:	74 05                	je     de91 <dlmalloc+0xd41>
    de8c:	48 39 c3             	cmp    %rax,%rbx
    de8f:	73 07                	jae    de98 <dlmalloc+0xd48>
    de91:	48 89 1d c0 cb 01 00 	mov    %rbx,0x1cbc0(%rip)        # 2aa58 <_gm_+0x18>
    de98:	48 8b 05 61 cf 01 00 	mov    0x1cf61(%rip),%rax        # 2ae00 <mparams>
    de9f:	48 89 1d 12 cf 01 00 	mov    %rbx,0x1cf12(%rip)        # 2adb8 <_gm_+0x378>
    dea6:	4c 89 3d 13 cf 01 00 	mov    %r15,0x1cf13(%rip)        # 2adc0 <_gm_+0x380>
    dead:	c7 05 19 cf 01 00 00 	movl   $0x0,0x1cf19(%rip)        # 2add0 <_gm_+0x390>
    deb4:	00 00 00 
    deb7:	48 c7 05 b6 cb 01 00 	movq   $0xffffffffffffffff,0x1cbb6(%rip)        # 2aa78 <_gm_+0x38>
    debe:	ff ff ff ff 
    dec2:	48 89 05 b7 cb 01 00 	mov    %rax,0x1cbb7(%rip)        # 2aa80 <_gm_+0x40>
    dec9:	48 8d 05 b8 cb 01 00 	lea    0x1cbb8(%rip),%rax        # 2aa88 <_gm_+0x48>
    ded0:	48 8d 90 00 02 00 00 	lea    0x200(%rax),%rdx
    ded7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    dede:	00 00 
    dee0:	66 48 0f 6e c0       	movq   %rax,%xmm0
    dee5:	48 83 c0 10          	add    $0x10,%rax
    dee9:	66 0f 6c c0          	punpcklqdq %xmm0,%xmm0
    deed:	0f 11 00             	movups %xmm0,(%rax)
    def0:	48 39 d0             	cmp    %rdx,%rax
    def3:	75 eb                	jne    dee0 <dlmalloc+0xd90>
    def5:	49 83 ef 50          	sub    $0x50,%r15
    def9:	48 8d 53 10          	lea    0x10(%rbx),%rdx
    defd:	f6 c3 0f             	test   $0xf,%bl
    df00:	0f 84 aa 02 00 00    	je     e1b0 <dlmalloc+0x1060>
    df06:	48 f7 da             	neg    %rdx
    df09:	4c 89 f8             	mov    %r15,%rax
    df0c:	83 e2 0f             	and    $0xf,%edx
    df0f:	48 8d 0c 13          	lea    (%rbx,%rdx,1),%rcx
    df13:	48 29 d0             	sub    %rdx,%rax
    df16:	48 89 c2             	mov    %rax,%rdx
    df19:	48 89 0d 48 cb 01 00 	mov    %rcx,0x1cb48(%rip)        # 2aa68 <_gm_+0x28>
    df20:	48 83 ca 01          	or     $0x1,%rdx
    df24:	48 89 05 25 cb 01 00 	mov    %rax,0x1cb25(%rip)        # 2aa50 <_gm_+0x10>
    df2b:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    df2f:	48 8b 15 ea ce 01 00 	mov    0x1ceea(%rip),%rdx        # 2ae20 <mparams+0x20>
    df36:	4a c7 44 3b 08 50 00 	movq   $0x50,0x8(%rbx,%r15,1)
    df3d:	00 00 
    df3f:	48 89 15 2a cb 01 00 	mov    %rdx,0x1cb2a(%rip)        # 2aa70 <_gm_+0x30>
    df46:	e9 d3 fe ff ff       	jmp    de1e <dlmalloc+0xcce>
    df4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    df50:	4c 89 c8             	mov    %r9,%rax
    df53:	49 89 d8             	mov    %rbx,%r8
    df56:	e9 7f fd ff ff       	jmp    dcda <dlmalloc+0xb8a>
    df5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    df60:	48 83 ce 03          	or     $0x3,%rsi
    df64:	e9 b9 f5 ff ff       	jmp    d522 <dlmalloc+0x3d2>
    df69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    df70:	48 89 d0             	mov    %rdx,%rax
    df73:	48 c1 e8 08          	shr    $0x8,%rax
    df77:	89 c1                	mov    %eax,%ecx
    df79:	85 c0                	test   %eax,%eax
    df7b:	0f 84 60 03 00 00    	je     e2e1 <dlmalloc+0x1191>
    df81:	3d ff ff 00 00       	cmp    $0xffff,%eax
    df86:	0f 87 ad 05 00 00    	ja     e539 <dlmalloc+0x13e9>
    df8c:	0f bd c1             	bsr    %ecx,%eax
    df8f:	b9 26 00 00 00       	mov    $0x26,%ecx
    df94:	48 89 d3             	mov    %rdx,%rbx
    df97:	bf 1f 00 00 00       	mov    $0x1f,%edi
    df9c:	83 f0 1f             	xor    $0x1f,%eax
    df9f:	29 c1                	sub    %eax,%ecx
    dfa1:	29 c7                	sub    %eax,%edi
    dfa3:	48 d3 eb             	shr    %cl,%rbx
    dfa6:	48 89 d9             	mov    %rbx,%rcx
    dfa9:	83 e1 01             	and    $0x1,%ecx
    dfac:	8d 0c 79             	lea    (%rcx,%rdi,2),%ecx
    dfaf:	bf 01 00 00 00       	mov    $0x1,%edi
    dfb4:	44 8d 41 4b          	lea    0x4b(%rcx),%r8d
    dfb8:	d3 e7                	shl    %cl,%edi
    dfba:	49 c1 e0 03          	shl    $0x3,%r8
    dfbe:	8b 05 80 ca 01 00    	mov    0x1ca80(%rip),%eax        # 2aa44 <_gm_+0x4>
    dfc4:	66 48 0f 6e ce       	movq   %rsi,%xmm1
    dfc9:	66 0f ef c0          	pxor   %xmm0,%xmm0
    dfcd:	89 4e 38             	mov    %ecx,0x38(%rsi)
    dfd0:	66 0f 6c c9          	punpcklqdq %xmm1,%xmm1
    dfd4:	0f 11 46 20          	movups %xmm0,0x20(%rsi)
    dfd8:	85 f8                	test   %edi,%eax
    dfda:	0f 85 11 03 00 00    	jne    e2f1 <dlmalloc+0x11a1>
    dfe0:	09 f8                	or     %edi,%eax
    dfe2:	4d 01 e8             	add    %r13,%r8
    dfe5:	49 89 b4 cd 58 02 00 	mov    %rsi,0x258(%r13,%rcx,8)
    dfec:	00 
    dfed:	89 05 51 ca 01 00    	mov    %eax,0x1ca51(%rip)        # 2aa44 <_gm_+0x4>
    dff3:	48 8b 05 56 ca 01 00 	mov    0x1ca56(%rip),%rax        # 2aa50 <_gm_+0x10>
    dffa:	4c 89 46 30          	mov    %r8,0x30(%rsi)
    dffe:	0f 11 4e 10          	movups %xmm1,0x10(%rsi)
    e002:	e9 17 fe ff ff       	jmp    de1e <dlmalloc+0xcce>
    e007:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    e00e:	00 00 
    e010:	48 8b 05 39 ca 01 00 	mov    0x1ca39(%rip),%rax        # 2aa50 <_gm_+0x10>
    e017:	e9 02 fe ff ff       	jmp    de1e <dlmalloc+0xcce>
    e01c:	0f 1f 40 00          	nopl   0x0(%rax)
    e020:	b8 01 00 00 00       	mov    $0x1,%eax
    e025:	87 05 05 ce 01 00    	xchg   %eax,0x1ce05(%rip)        # 2ae30 <malloc_global_mutex>
    e02b:	85 c0                	test   %eax,%eax
    e02d:	0f 85 76 fa ff ff    	jne    daa9 <dlmalloc+0x959>
    e033:	31 ff                	xor    %edi,%edi
    e035:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    e03a:	e8 31 e6 ff ff       	call   c670 <sbrk>
    e03f:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    e044:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    e048:	49 89 c6             	mov    %rax,%r14
    e04b:	0f 84 b8 fa ff ff    	je     db09 <dlmalloc+0x9b9>
    e051:	48 8b 15 b0 cd 01 00 	mov    0x1cdb0(%rip),%rdx        # 2ae08 <mparams+0x8>
    e058:	49 89 cf             	mov    %rcx,%r15
    e05b:	48 8d 42 ff          	lea    -0x1(%rdx),%rax
    e05f:	49 85 c6             	test   %rax,%r14
    e062:	74 0f                	je     e073 <dlmalloc+0xf23>
    e064:	4c 01 f0             	add    %r14,%rax
    e067:	48 f7 da             	neg    %rdx
    e06a:	4d 29 f7             	sub    %r14,%r15
    e06d:	48 21 d0             	and    %rdx,%rax
    e070:	49 01 c7             	add    %rax,%r15
    e073:	48 8b 05 1e cd 01 00 	mov    0x1cd1e(%rip),%rax        # 2ad98 <_gm_+0x358>
    e07a:	4d 39 fc             	cmp    %r15,%r12
    e07d:	0f 83 86 fa ff ff    	jae    db09 <dlmalloc+0x9b9>
    e083:	48 ba fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rdx
    e08a:	ff ff 7f 
    e08d:	4c 39 fa             	cmp    %r15,%rdx
    e090:	0f 82 73 fa ff ff    	jb     db09 <dlmalloc+0x9b9>
    e096:	48 8b 15 0b cd 01 00 	mov    0x1cd0b(%rip),%rdx        # 2ada8 <_gm_+0x368>
    e09d:	48 85 d2             	test   %rdx,%rdx
    e0a0:	74 16                	je     e0b8 <dlmalloc+0xf68>
    e0a2:	4a 8d 34 38          	lea    (%rax,%r15,1),%rsi
    e0a6:	48 39 f0             	cmp    %rsi,%rax
    e0a9:	0f 83 5a fa ff ff    	jae    db09 <dlmalloc+0x9b9>
    e0af:	48 39 f2             	cmp    %rsi,%rdx
    e0b2:	0f 82 51 fa ff ff    	jb     db09 <dlmalloc+0x9b9>
    e0b8:	4c 89 ff             	mov    %r15,%rdi
    e0bb:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    e0c0:	e8 ab e5 ff ff       	call   c670 <sbrk>
    e0c5:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    e0ca:	49 39 c6             	cmp    %rax,%r14
    e0cd:	48 89 c3             	mov    %rax,%rbx
    e0d0:	74 3c                	je     e10e <dlmalloc+0xfbe>
    e0d2:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
    e0d6:	0f 84 2d fa ff ff    	je     db09 <dlmalloc+0x9b9>
    e0dc:	49 8d 44 24 60       	lea    0x60(%r12),%rax
    e0e1:	49 39 c7             	cmp    %rax,%r15
    e0e4:	73 28                	jae    e10e <dlmalloc+0xfbe>
    e0e6:	48 8b 05 23 cd 01 00 	mov    0x1cd23(%rip),%rax        # 2ae10 <mparams+0x10>
    e0ed:	4d 8d 74 04 5f       	lea    0x5f(%r12,%rax,1),%r14
    e0f2:	48 f7 d8             	neg    %rax
    e0f5:	4d 29 fe             	sub    %r15,%r14
    e0f8:	49 21 c6             	and    %rax,%r14
    e0fb:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
    e102:	ff ff 7f 
    e105:	4c 39 f0             	cmp    %r14,%rax
    e108:	0f 83 91 08 00 00    	jae    e99f <dlmalloc+0x184f>
    e10e:	c7 05 18 cd 01 00 00 	movl   $0x0,0x1cd18(%rip)        # 2ae30 <malloc_global_mutex>
    e115:	00 00 00 
    e118:	e9 83 fa ff ff       	jmp    dba0 <dlmalloc+0xa50>
    e11d:	0f 1f 00             	nopl   (%rax)
    e120:	44 0f bd d0          	bsr    %eax,%r10d
    e124:	b9 26 00 00 00       	mov    $0x26,%ecx
    e129:	4c 89 e0             	mov    %r12,%rax
    e12c:	ba 1f 00 00 00       	mov    $0x1f,%edx
    e131:	41 83 f2 1f          	xor    $0x1f,%r10d
    e135:	44 29 d1             	sub    %r10d,%ecx
    e138:	44 29 d2             	sub    %r10d,%edx
    e13b:	48 d3 e8             	shr    %cl,%rax
    e13e:	83 e0 01             	and    $0x1,%eax
    e141:	8d 04 50             	lea    (%rax,%rdx,2),%eax
    e144:	49 8b 94 c5 58 02 00 	mov    0x258(%r13,%rax,8),%rdx
    e14b:	00 
    e14c:	49 89 c2             	mov    %rax,%r10
    e14f:	48 85 d2             	test   %rdx,%rdx
    e152:	0f 84 72 f8 ff ff    	je     d9ca <dlmalloc+0x87a>
    e158:	83 f8 1f             	cmp    $0x1f,%eax
    e15b:	0f 84 d4 09 00 00    	je     eb35 <dlmalloc+0x19e5>
    e161:	d1 e8                	shr    %eax
    e163:	b9 39 00 00 00       	mov    $0x39,%ecx
    e168:	29 c1                	sub    %eax,%ecx
    e16a:	e9 13 f4 ff ff       	jmp    d582 <dlmalloc+0x432>
    e16f:	48 89 d3             	mov    %rdx,%rbx
    e172:	31 ff                	xor    %edi,%edi
    e174:	48 89 d1             	mov    %rdx,%rcx
    e177:	e9 77 f4 ff ff       	jmp    d5f3 <dlmalloc+0x4a3>
    e17c:	4c 89 ff             	mov    %r15,%rdi
    e17f:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    e184:	e8 e7 e4 ff ff       	call   c670 <sbrk>
    e189:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    e18e:	48 89 c3             	mov    %rax,%rbx
    e191:	49 8b 46 08          	mov    0x8(%r14),%rax
    e195:	49 03 06             	add    (%r14),%rax
    e198:	48 39 c3             	cmp    %rax,%rbx
    e19b:	0f 85 31 ff ff ff    	jne    e0d2 <dlmalloc+0xf82>
    e1a1:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
    e1a5:	0f 85 63 ff ff ff    	jne    e10e <dlmalloc+0xfbe>
    e1ab:	e9 59 f9 ff ff       	jmp    db09 <dlmalloc+0x9b9>
    e1b0:	4c 89 f8             	mov    %r15,%rax
    e1b3:	48 89 d9             	mov    %rbx,%rcx
    e1b6:	e9 5b fd ff ff       	jmp    df16 <dlmalloc+0xdc6>
    e1bb:	83 c9 03             	or     $0x3,%ecx
    e1be:	89 ce                	mov    %ecx,%esi
    e1c0:	48 89 73 08          	mov    %rsi,0x8(%rbx)
    e1c4:	48 89 38             	mov    %rdi,(%rax)
    e1c7:	48 83 48 08 01       	orq    $0x1,0x8(%rax)
    e1cc:	e9 b1 f1 ff ff       	jmp    d382 <dlmalloc+0x232>
    e1d1:	b8 01 00 00 00       	mov    $0x1,%eax
    e1d6:	87 05 54 cc 01 00    	xchg   %eax,0x1cc54(%rip)        # 2ae30 <malloc_global_mutex>
    e1dc:	85 c0                	test   %eax,%eax
    e1de:	0f 84 f7 f8 ff ff    	je     dadb <dlmalloc+0x98b>
    e1e4:	e9 c3 f8 ff ff       	jmp    daac <dlmalloc+0x95c>
    e1e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    e1f0:	49 89 d8             	mov    %rbx,%r8
    e1f3:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
    e1f7:	41 83 e0 0f          	and    $0xf,%r8d
    e1fb:	e9 5b fa ff ff       	jmp    dc5b <dlmalloc+0xb0b>
    e200:	4c 01 78 08          	add    %r15,0x8(%rax)
    e204:	49 89 d2             	mov    %rdx,%r10
    e207:	48 89 18             	mov    %rbx,(%rax)
    e20a:	4d 85 c0             	test   %r8,%r8
    e20d:	74 09                	je     e218 <dlmalloc+0x10c8>
    e20f:	48 f7 df             	neg    %rdi
    e212:	83 e7 0f             	and    $0xf,%edi
    e215:	48 01 fb             	add    %rdi,%rbx
    e218:	48 8d 42 10          	lea    0x10(%rdx),%rax
    e21c:	f6 c2 0f             	test   $0xf,%dl
    e21f:	74 0a                	je     e22b <dlmalloc+0x10db>
    e221:	48 f7 d8             	neg    %rax
    e224:	83 e0 0f             	and    $0xf,%eax
    e227:	4c 8d 14 02          	lea    (%rdx,%rax,1),%r10
    e22b:	48 8b 0d ce cb 01 00 	mov    0x1cbce(%rip),%rcx        # 2ae00 <mparams>
    e232:	4c 89 d0             	mov    %r10,%rax
    e235:	4a 8d 14 23          	lea    (%rbx,%r12,1),%rdx
    e239:	48 29 d8             	sub    %rbx,%rax
    e23c:	4c 29 e0             	sub    %r12,%rax
    e23f:	4c 31 e9             	xor    %r13,%rcx
    e242:	49 83 cc 03          	or     $0x3,%r12
    e246:	4c 89 63 08          	mov    %r12,0x8(%rbx)
    e24a:	48 89 0a             	mov    %rcx,(%rdx)
    e24d:	4c 39 d6             	cmp    %r10,%rsi
    e250:	0f 84 38 04 00 00    	je     e68e <dlmalloc+0x153e>
    e256:	4c 39 15 03 c8 01 00 	cmp    %r10,0x1c803(%rip)        # 2aa60 <_gm_+0x20>
    e25d:	0f 84 49 05 00 00    	je     e7ac <dlmalloc+0x165c>
    e263:	49 8b 72 08          	mov    0x8(%r10),%rsi
    e267:	4c 89 d1             	mov    %r10,%rcx
    e26a:	48 89 f7             	mov    %rsi,%rdi
    e26d:	83 e7 03             	and    $0x3,%edi
    e270:	48 83 ff 01          	cmp    $0x1,%rdi
    e274:	0f 84 a2 05 00 00    	je     e81c <dlmalloc+0x16cc>
    e27a:	48 83 e6 fe          	and    $0xfffffffffffffffe,%rsi
    e27e:	49 89 72 08          	mov    %rsi,0x8(%r10)
    e282:	48 89 c6             	mov    %rax,%rsi
    e285:	48 83 ce 01          	or     $0x1,%rsi
    e289:	48 89 72 08          	mov    %rsi,0x8(%rdx)
    e28d:	48 89 01             	mov    %rax,(%rcx)
    e290:	48 89 c1             	mov    %rax,%rcx
    e293:	48 c1 e9 03          	shr    $0x3,%rcx
    e297:	48 3d ff 00 00 00    	cmp    $0xff,%rax
    e29d:	0f 87 42 04 00 00    	ja     e6e5 <dlmalloc+0x1595>
    e2a3:	bf 01 00 00 00       	mov    $0x1,%edi
    e2a8:	8b 35 92 c7 01 00    	mov    0x1c792(%rip),%esi        # 2aa40 <_gm_>
    e2ae:	8d 44 09 09          	lea    0x9(%rcx,%rcx,1),%eax
    e2b2:	d3 e7                	shl    %cl,%edi
    e2b4:	49 8d 44 c5 00       	lea    0x0(%r13,%rax,8),%rax
    e2b9:	85 fe                	test   %edi,%esi
    e2bb:	0f 85 08 06 00 00    	jne    e8c9 <dlmalloc+0x1779>
    e2c1:	09 fe                	or     %edi,%esi
    e2c3:	48 89 c1             	mov    %rax,%rcx
    e2c6:	89 35 74 c7 01 00    	mov    %esi,0x1c774(%rip)        # 2aa40 <_gm_>
    e2cc:	48 89 50 10          	mov    %rdx,0x10(%rax)
    e2d0:	48 89 51 18          	mov    %rdx,0x18(%rcx)
    e2d4:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
    e2d8:	48 89 42 18          	mov    %rax,0x18(%rdx)
    e2dc:	e9 a1 f0 ff ff       	jmp    d382 <dlmalloc+0x232>
    e2e1:	bf 01 00 00 00       	mov    $0x1,%edi
    e2e6:	41 b8 58 02 00 00    	mov    $0x258,%r8d
    e2ec:	e9 cd fc ff ff       	jmp    dfbe <dlmalloc+0xe6e>
    e2f1:	89 c8                	mov    %ecx,%eax
    e2f3:	49 89 d0             	mov    %rdx,%r8
    e2f6:	49 8b bc c5 58 02 00 	mov    0x258(%r13,%rax,8),%rdi
    e2fd:	00 
    e2fe:	83 f9 1f             	cmp    $0x1f,%ecx
    e301:	74 33                	je     e336 <dlmalloc+0x11e6>
    e303:	89 c8                	mov    %ecx,%eax
    e305:	b9 39 00 00 00       	mov    $0x39,%ecx
    e30a:	d1 e8                	shr    %eax
    e30c:	29 c1                	sub    %eax,%ecx
    e30e:	49 d3 e0             	shl    %cl,%r8
    e311:	eb 23                	jmp    e336 <dlmalloc+0x11e6>
    e313:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    e318:	4c 89 c0             	mov    %r8,%rax
    e31b:	4d 01 c0             	add    %r8,%r8
    e31e:	48 c1 e8 3f          	shr    $0x3f,%rax
    e322:	48 83 c0 04          	add    $0x4,%rax
    e326:	48 8b 0c c7          	mov    (%rdi,%rax,8),%rcx
    e32a:	48 85 c9             	test   %rcx,%rcx
    e32d:	0f 84 1b 02 00 00    	je     e54e <dlmalloc+0x13fe>
    e333:	48 89 cf             	mov    %rcx,%rdi
    e336:	48 8b 47 08          	mov    0x8(%rdi),%rax
    e33a:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    e33e:	48 39 c2             	cmp    %rax,%rdx
    e341:	75 d5                	jne    e318 <dlmalloc+0x11c8>
    e343:	48 8b 47 10          	mov    0x10(%rdi),%rax
    e347:	48 8b 15 0a c7 01 00 	mov    0x1c70a(%rip),%rdx        # 2aa58 <_gm_+0x18>
    e34e:	66 48 0f 6e e7       	movq   %rdi,%xmm4
    e353:	66 48 0f 6e c0       	movq   %rax,%xmm0
    e358:	66 0f 6c c4          	punpcklqdq %xmm4,%xmm0
    e35c:	48 39 d7             	cmp    %rdx,%rdi
    e35f:	0f 82 4b f4 ff ff    	jb     d7b0 <dlmalloc+0x660>
    e365:	48 39 d0             	cmp    %rdx,%rax
    e368:	0f 82 42 f4 ff ff    	jb     d7b0 <dlmalloc+0x660>
    e36e:	48 89 70 18          	mov    %rsi,0x18(%rax)
    e372:	48 8b 05 d7 c6 01 00 	mov    0x1c6d7(%rip),%rax        # 2aa50 <_gm_+0x10>
    e379:	48 89 77 10          	mov    %rsi,0x10(%rdi)
    e37d:	48 c7 46 30 00 00 00 	movq   $0x0,0x30(%rsi)
    e384:	00 
    e385:	0f 11 46 10          	movups %xmm0,0x10(%rsi)
    e389:	e9 90 fa ff ff       	jmp    de1e <dlmalloc+0xcce>
    e38e:	48 8b 43 28          	mov    0x28(%rbx),%rax
    e392:	48 8d 53 28          	lea    0x28(%rbx),%rdx
    e396:	48 85 c0             	test   %rax,%rax
    e399:	0f 84 11 03 00 00    	je     e6b0 <dlmalloc+0x1560>
    e39f:	90                   	nop
    e3a0:	48 89 d6             	mov    %rdx,%rsi
    e3a3:	48 89 c1             	mov    %rax,%rcx
    e3a6:	48 8d 50 28          	lea    0x28(%rax),%rdx
    e3aa:	48 8b 40 28          	mov    0x28(%rax),%rax
    e3ae:	48 85 c0             	test   %rax,%rax
    e3b1:	75 ed                	jne    e3a0 <dlmalloc+0x1250>
    e3b3:	48 8b 41 20          	mov    0x20(%rcx),%rax
    e3b7:	48 8d 51 20          	lea    0x20(%rcx),%rdx
    e3bb:	48 85 c0             	test   %rax,%rax
    e3be:	75 e0                	jne    e3a0 <dlmalloc+0x1250>
    e3c0:	4c 39 de             	cmp    %r11,%rsi
    e3c3:	0f 82 e7 f3 ff ff    	jb     d7b0 <dlmalloc+0x660>
    e3c9:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
    e3d0:	4d 85 ff             	test   %r15,%r15
    e3d3:	0f 84 27 f3 ff ff    	je     d700 <dlmalloc+0x5b0>
    e3d9:	41 8b 46 38          	mov    0x38(%r14),%eax
    e3dd:	48 8d 50 4a          	lea    0x4a(%rax),%rdx
    e3e1:	4d 3b b4 c5 58 02 00 	cmp    0x258(%r13,%rax,8),%r14
    e3e8:	00 
    e3e9:	0f 84 9e 04 00 00    	je     e88d <dlmalloc+0x173d>
    e3ef:	4d 39 df             	cmp    %r11,%r15
    e3f2:	0f 82 b8 f3 ff ff    	jb     d7b0 <dlmalloc+0x660>
    e3f8:	49 3b 5f 20          	cmp    0x20(%r15),%rbx
    e3fc:	0f 84 cb 05 00 00    	je     e9cd <dlmalloc+0x187d>
    e402:	49 89 4f 28          	mov    %rcx,0x28(%r15)
    e406:	49 89 ce             	mov    %rcx,%r14
    e409:	e9 b1 f2 ff ff       	jmp    d6bf <dlmalloc+0x56f>
    e40e:	49 8d 04 3c          	lea    (%r12,%rdi,1),%rax
    e412:	48 89 c1             	mov    %rax,%rcx
    e415:	48 01 d8             	add    %rbx,%rax
    e418:	48 83 c9 03          	or     $0x3,%rcx
    e41c:	48 89 4b 08          	mov    %rcx,0x8(%rbx)
    e420:	48 83 48 08 01       	orq    $0x1,0x8(%rax)
    e425:	48 89 10             	mov    %rdx,(%rax)
    e428:	e9 4f f3 ff ff       	jmp    d77c <dlmalloc+0x62c>
    e42d:	48 89 fa             	mov    %rdi,%rdx
    e430:	48 c1 ea 08          	shr    $0x8,%rdx
    e434:	89 d0                	mov    %edx,%eax
    e436:	85 d2                	test   %edx,%edx
    e438:	0f 84 20 02 00 00    	je     e65e <dlmalloc+0x150e>
    e43e:	81 fa ff ff 00 00    	cmp    $0xffff,%edx
    e444:	0f 87 be 03 00 00    	ja     e808 <dlmalloc+0x16b8>
    e44a:	0f bd c0             	bsr    %eax,%eax
    e44d:	b9 26 00 00 00       	mov    $0x26,%ecx
    e452:	48 89 fa             	mov    %rdi,%rdx
    e455:	83 f0 1f             	xor    $0x1f,%eax
    e458:	29 c1                	sub    %eax,%ecx
    e45a:	48 d3 ea             	shr    %cl,%rdx
    e45d:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    e462:	83 e2 01             	and    $0x1,%edx
    e465:	29 c1                	sub    %eax,%ecx
    e467:	8d 04 4a             	lea    (%rdx,%rcx,2),%eax
    e46a:	ba 01 00 00 00       	mov    $0x1,%edx
    e46f:	89 c1                	mov    %eax,%ecx
    e471:	8d 70 4b             	lea    0x4b(%rax),%esi
    e474:	d3 e2                	shl    %cl,%edx
    e476:	48 c1 e6 03          	shl    $0x3,%rsi
    e47a:	89 d1                	mov    %edx,%ecx
    e47c:	8b 15 c2 c5 01 00    	mov    0x1c5c2(%rip),%edx        # 2aa44 <_gm_+0x4>
    e482:	66 49 0f 6e ca       	movq   %r10,%xmm1
    e487:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e48b:	41 89 42 38          	mov    %eax,0x38(%r10)
    e48f:	66 0f 6c c9          	punpcklqdq %xmm1,%xmm1
    e493:	41 0f 11 42 20       	movups %xmm0,0x20(%r10)
    e498:	85 ca                	test   %ecx,%edx
    e49a:	0f 84 db 02 00 00    	je     e77b <dlmalloc+0x162b>
    e4a0:	89 c2                	mov    %eax,%edx
    e4a2:	48 89 fe             	mov    %rdi,%rsi
    e4a5:	49 8b 94 d5 58 02 00 	mov    0x258(%r13,%rdx,8),%rdx
    e4ac:	00 
    e4ad:	83 f8 1f             	cmp    $0x1f,%eax
    e4b0:	74 2c                	je     e4de <dlmalloc+0x138e>
    e4b2:	d1 e8                	shr    %eax
    e4b4:	b9 39 00 00 00       	mov    $0x39,%ecx
    e4b9:	29 c1                	sub    %eax,%ecx
    e4bb:	48 d3 e6             	shl    %cl,%rsi
    e4be:	eb 1e                	jmp    e4de <dlmalloc+0x138e>
    e4c0:	48 89 f0             	mov    %rsi,%rax
    e4c3:	48 01 f6             	add    %rsi,%rsi
    e4c6:	48 c1 e8 3f          	shr    $0x3f,%rax
    e4ca:	48 83 c0 04          	add    $0x4,%rax
    e4ce:	48 8b 0c c2          	mov    (%rdx,%rax,8),%rcx
    e4d2:	48 85 c9             	test   %rcx,%rcx
    e4d5:	0f 84 fa 02 00 00    	je     e7d5 <dlmalloc+0x1685>
    e4db:	48 89 ca             	mov    %rcx,%rdx
    e4de:	48 8b 42 08          	mov    0x8(%rdx),%rax
    e4e2:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    e4e6:	48 39 f8             	cmp    %rdi,%rax
    e4e9:	75 d5                	jne    e4c0 <dlmalloc+0x1370>
    e4eb:	48 8b 42 10          	mov    0x10(%rdx),%rax
    e4ef:	66 48 0f 6e ea       	movq   %rdx,%xmm5
    e4f4:	66 48 0f 6e c0       	movq   %rax,%xmm0
    e4f9:	66 0f 6c c5          	punpcklqdq %xmm5,%xmm0
    e4fd:	4c 39 da             	cmp    %r11,%rdx
    e500:	0f 82 aa f2 ff ff    	jb     d7b0 <dlmalloc+0x660>
    e506:	4c 39 d8             	cmp    %r11,%rax
    e509:	0f 82 a1 f2 ff ff    	jb     d7b0 <dlmalloc+0x660>
    e50f:	4c 89 50 18          	mov    %r10,0x18(%rax)
    e513:	4c 89 52 10          	mov    %r10,0x10(%rdx)
    e517:	49 c7 42 30 00 00 00 	movq   $0x0,0x30(%r10)
    e51e:	00 
    e51f:	41 0f 11 42 10       	movups %xmm0,0x10(%r10)
    e524:	e9 53 f2 ff ff       	jmp    d77c <dlmalloc+0x62c>
    e529:	09 fe                	or     %edi,%esi
    e52b:	4c 89 c1             	mov    %r8,%rcx
    e52e:	89 35 0c c5 01 00    	mov    %esi,0x1c50c(%rip)        # 2aa40 <_gm_>
    e534:	e9 58 ef ff ff       	jmp    d491 <dlmalloc+0x341>
    e539:	bf 00 00 00 80       	mov    $0x80000000,%edi
    e53e:	41 b8 50 03 00 00    	mov    $0x350,%r8d
    e544:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    e549:	e9 70 fa ff ff       	jmp    dfbe <dlmalloc+0xe6e>
    e54e:	48 8d 14 c7          	lea    (%rdi,%rax,8),%rdx
    e552:	48 3b 15 ff c4 01 00 	cmp    0x1c4ff(%rip),%rdx        # 2aa58 <_gm_+0x18>
    e559:	0f 82 51 f2 ff ff    	jb     d7b0 <dlmalloc+0x660>
    e55f:	48 89 34 c7          	mov    %rsi,(%rdi,%rax,8)
    e563:	48 8b 05 e6 c4 01 00 	mov    0x1c4e6(%rip),%rax        # 2aa50 <_gm_+0x10>
    e56a:	48 89 7e 30          	mov    %rdi,0x30(%rsi)
    e56e:	0f 11 4e 10          	movups %xmm1,0x10(%rsi)
    e572:	e9 a7 f8 ff ff       	jmp    de1e <dlmalloc+0xcce>
    e577:	48 8b 43 28          	mov    0x28(%rbx),%rax
    e57b:	48 8d 4b 28          	lea    0x28(%rbx),%rcx
    e57f:	48 85 c0             	test   %rax,%rax
    e582:	0f 84 f8 03 00 00    	je     e980 <dlmalloc+0x1830>
    e588:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    e58f:	00 
    e590:	49 89 c9             	mov    %rcx,%r9
    e593:	49 89 c0             	mov    %rax,%r8
    e596:	48 8d 48 28          	lea    0x28(%rax),%rcx
    e59a:	48 8b 40 28          	mov    0x28(%rax),%rax
    e59e:	48 85 c0             	test   %rax,%rax
    e5a1:	75 ed                	jne    e590 <dlmalloc+0x1440>
    e5a3:	49 8b 40 20          	mov    0x20(%r8),%rax
    e5a7:	49 8d 48 20          	lea    0x20(%r8),%rcx
    e5ab:	48 85 c0             	test   %rax,%rax
    e5ae:	75 e0                	jne    e590 <dlmalloc+0x1440>
    e5b0:	4d 39 d9             	cmp    %r11,%r9
    e5b3:	0f 82 f7 f1 ff ff    	jb     d7b0 <dlmalloc+0x660>
    e5b9:	49 c7 01 00 00 00 00 	movq   $0x0,(%r9)
    e5c0:	4d 85 f6             	test   %r14,%r14
    e5c3:	0f 84 17 f3 ff ff    	je     d8e0 <dlmalloc+0x790>
    e5c9:	8b 43 38             	mov    0x38(%rbx),%eax
    e5cc:	48 8d 48 4a          	lea    0x4a(%rax),%rcx
    e5d0:	49 3b 9c c5 58 02 00 	cmp    0x258(%r13,%rax,8),%rbx
    e5d7:	00 
    e5d8:	0f 84 0e 05 00 00    	je     eaec <dlmalloc+0x199c>
    e5de:	4d 39 de             	cmp    %r11,%r14
    e5e1:	0f 82 c9 f1 ff ff    	jb     d7b0 <dlmalloc+0x660>
    e5e7:	49 3b 5e 20          	cmp    0x20(%r14),%rbx
    e5eb:	0f 84 3b 05 00 00    	je     eb2c <dlmalloc+0x19dc>
    e5f1:	4d 89 46 28          	mov    %r8,0x28(%r14)
    e5f5:	e9 a5 f2 ff ff       	jmp    d89f <dlmalloc+0x74f>
    e5fa:	4c 01 f9             	add    %r15,%rcx
    e5fd:	4c 03 3d 4c c4 01 00 	add    0x1c44c(%rip),%r15        # 2aa50 <_gm_+0x10>
    e604:	48 89 48 08          	mov    %rcx,0x8(%rax)
    e608:	48 8d 46 10          	lea    0x10(%rsi),%rax
    e60c:	40 f6 c6 0f          	test   $0xf,%sil
    e610:	0f 84 e7 01 00 00    	je     e7fd <dlmalloc+0x16ad>
    e616:	48 f7 d8             	neg    %rax
    e619:	83 e0 0f             	and    $0xf,%eax
    e61c:	48 89 c2             	mov    %rax,%rdx
    e61f:	48 8d 0c 06          	lea    (%rsi,%rax,1),%rcx
    e623:	4c 89 f8             	mov    %r15,%rax
    e626:	48 29 d0             	sub    %rdx,%rax
    e629:	48 89 c2             	mov    %rax,%rdx
    e62c:	48 89 0d 35 c4 01 00 	mov    %rcx,0x1c435(%rip)        # 2aa68 <_gm_+0x28>
    e633:	48 83 ca 01          	or     $0x1,%rdx
    e637:	48 89 05 12 c4 01 00 	mov    %rax,0x1c412(%rip)        # 2aa50 <_gm_+0x10>
    e63e:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    e642:	48 8b 15 d7 c7 01 00 	mov    0x1c7d7(%rip),%rdx        # 2ae20 <mparams+0x20>
    e649:	4a c7 44 3e 08 50 00 	movq   $0x50,0x8(%rsi,%r15,1)
    e650:	00 00 
    e652:	48 89 15 17 c4 01 00 	mov    %rdx,0x1c417(%rip)        # 2aa70 <_gm_+0x30>
    e659:	e9 c0 f7 ff ff       	jmp    de1e <dlmalloc+0xcce>
    e65e:	b9 01 00 00 00       	mov    $0x1,%ecx
    e663:	be 58 02 00 00       	mov    $0x258,%esi
    e668:	e9 0f fe ff ff       	jmp    e47c <dlmalloc+0x132c>
    e66d:	4d 89 b4 d5 58 02 00 	mov    %r14,0x258(%r13,%rdx,8)
    e674:	00 
    e675:	4d 85 f6             	test   %r14,%r14
    e678:	0f 85 41 f0 ff ff    	jne    d6bf <dlmalloc+0x56f>
    e67e:	41 0f b3 c1          	btr    %eax,%r9d
    e682:	44 89 0d bb c3 01 00 	mov    %r9d,0x1c3bb(%rip)        # 2aa44 <_gm_+0x4>
    e689:	e9 72 f0 ff ff       	jmp    d700 <dlmalloc+0x5b0>
    e68e:	48 03 05 bb c3 01 00 	add    0x1c3bb(%rip),%rax        # 2aa50 <_gm_+0x10>
    e695:	48 89 15 cc c3 01 00 	mov    %rdx,0x1c3cc(%rip)        # 2aa68 <_gm_+0x28>
    e69c:	48 89 05 ad c3 01 00 	mov    %rax,0x1c3ad(%rip)        # 2aa50 <_gm_+0x10>
    e6a3:	48 83 c8 01          	or     $0x1,%rax
    e6a7:	48 89 42 08          	mov    %rax,0x8(%rdx)
    e6ab:	e9 d2 ec ff ff       	jmp    d382 <dlmalloc+0x232>
    e6b0:	48 8b 43 20          	mov    0x20(%rbx),%rax
    e6b4:	48 85 c0             	test   %rax,%rax
    e6b7:	0f 84 f0 03 00 00    	je     eaad <dlmalloc+0x195d>
    e6bd:	48 8d 53 20          	lea    0x20(%rbx),%rdx
    e6c1:	e9 da fc ff ff       	jmp    e3a0 <dlmalloc+0x1250>
    e6c6:	49 8d 14 3c          	lea    (%r12,%rdi,1),%rdx
    e6ca:	48 89 d1             	mov    %rdx,%rcx
    e6cd:	48 01 da             	add    %rbx,%rdx
    e6d0:	48 83 c9 03          	or     $0x3,%rcx
    e6d4:	48 89 4b 08          	mov    %rcx,0x8(%rbx)
    e6d8:	48 83 4a 08 01       	orq    $0x1,0x8(%rdx)
    e6dd:	48 89 02             	mov    %rax,(%rdx)
    e6e0:	e9 85 f2 ff ff       	jmp    d96a <dlmalloc+0x81a>
    e6e5:	48 89 c6             	mov    %rax,%rsi
    e6e8:	48 c1 ee 08          	shr    $0x8,%rsi
    e6ec:	89 f1                	mov    %esi,%ecx
    e6ee:	85 f6                	test   %esi,%esi
    e6f0:	0f 84 7b 02 00 00    	je     e971 <dlmalloc+0x1821>
    e6f6:	81 fe ff ff 00 00    	cmp    $0xffff,%esi
    e6fc:	0f 87 16 04 00 00    	ja     eb18 <dlmalloc+0x19c8>
    e702:	0f bd c9             	bsr    %ecx,%ecx
    e705:	48 89 c7             	mov    %rax,%rdi
    e708:	89 ce                	mov    %ecx,%esi
    e70a:	b9 26 00 00 00       	mov    $0x26,%ecx
    e70f:	83 f6 1f             	xor    $0x1f,%esi
    e712:	29 f1                	sub    %esi,%ecx
    e714:	48 d3 ef             	shr    %cl,%rdi
    e717:	48 89 f9             	mov    %rdi,%rcx
    e71a:	bf 1f 00 00 00       	mov    $0x1f,%edi
    e71f:	29 f7                	sub    %esi,%edi
    e721:	83 e1 01             	and    $0x1,%ecx
    e724:	8d 0c 79             	lea    (%rcx,%rdi,2),%ecx
    e727:	bf 01 00 00 00       	mov    $0x1,%edi
    e72c:	8d 71 4b             	lea    0x4b(%rcx),%esi
    e72f:	d3 e7                	shl    %cl,%edi
    e731:	48 c1 e6 03          	shl    $0x3,%rsi
    e735:	44 8b 05 08 c3 01 00 	mov    0x1c308(%rip),%r8d        # 2aa44 <_gm_+0x4>
    e73c:	66 48 0f 6e c2       	movq   %rdx,%xmm0
    e741:	66 0f ef c9          	pxor   %xmm1,%xmm1
    e745:	89 4a 38             	mov    %ecx,0x38(%rdx)
    e748:	66 0f 6c c0          	punpcklqdq %xmm0,%xmm0
    e74c:	0f 11 4a 20          	movups %xmm1,0x20(%rdx)
    e750:	41 85 f8             	test   %edi,%r8d
    e753:	0f 85 86 01 00 00    	jne    e8df <dlmalloc+0x178f>
    e759:	41 09 f8             	or     %edi,%r8d
    e75c:	4c 01 ee             	add    %r13,%rsi
    e75f:	49 89 94 cd 58 02 00 	mov    %rdx,0x258(%r13,%rcx,8)
    e766:	00 
    e767:	44 89 05 d6 c2 01 00 	mov    %r8d,0x1c2d6(%rip)        # 2aa44 <_gm_+0x4>
    e76e:	48 89 72 30          	mov    %rsi,0x30(%rdx)
    e772:	0f 11 42 10          	movups %xmm0,0x10(%rdx)
    e776:	e9 07 ec ff ff       	jmp    d382 <dlmalloc+0x232>
    e77b:	09 ca                	or     %ecx,%edx
    e77d:	4c 01 ee             	add    %r13,%rsi
    e780:	4d 89 94 c5 58 02 00 	mov    %r10,0x258(%r13,%rax,8)
    e787:	00 
    e788:	89 15 b6 c2 01 00    	mov    %edx,0x1c2b6(%rip)        # 2aa44 <_gm_+0x4>
    e78e:	49 89 72 30          	mov    %rsi,0x30(%r10)
    e792:	41 0f 11 4a 10       	movups %xmm1,0x10(%r10)
    e797:	e9 e0 ef ff ff       	jmp    d77c <dlmalloc+0x62c>
    e79c:	09 c6                	or     %eax,%esi
    e79e:	48 89 d0             	mov    %rdx,%rax
    e7a1:	89 35 99 c2 01 00    	mov    %esi,0x1c299(%rip)        # 2aa40 <_gm_>
    e7a7:	e9 c0 ef ff ff       	jmp    d76c <dlmalloc+0x61c>
    e7ac:	48 03 05 95 c2 01 00 	add    0x1c295(%rip),%rax        # 2aa48 <_gm_+0x8>
    e7b3:	48 89 15 a6 c2 01 00 	mov    %rdx,0x1c2a6(%rip)        # 2aa60 <_gm_+0x20>
    e7ba:	48 89 c1             	mov    %rax,%rcx
    e7bd:	48 89 05 84 c2 01 00 	mov    %rax,0x1c284(%rip)        # 2aa48 <_gm_+0x8>
    e7c4:	48 83 c9 01          	or     $0x1,%rcx
    e7c8:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
    e7cc:	48 89 04 02          	mov    %rax,(%rdx,%rax,1)
    e7d0:	e9 ad eb ff ff       	jmp    d382 <dlmalloc+0x232>
    e7d5:	48 8d 0c c2          	lea    (%rdx,%rax,8),%rcx
    e7d9:	4c 39 d9             	cmp    %r11,%rcx
    e7dc:	0f 82 ce ef ff ff    	jb     d7b0 <dlmalloc+0x660>
    e7e2:	4c 89 14 c2          	mov    %r10,(%rdx,%rax,8)
    e7e6:	49 89 52 30          	mov    %rdx,0x30(%r10)
    e7ea:	41 0f 11 4a 10       	movups %xmm1,0x10(%r10)
    e7ef:	e9 88 ef ff ff       	jmp    d77c <dlmalloc+0x62c>
    e7f4:	4d 89 77 20          	mov    %r14,0x20(%r15)
    e7f8:	e9 bd ee ff ff       	jmp    d6ba <dlmalloc+0x56a>
    e7fd:	4c 89 f8             	mov    %r15,%rax
    e800:	48 89 f1             	mov    %rsi,%rcx
    e803:	e9 21 fe ff ff       	jmp    e629 <dlmalloc+0x14d9>
    e808:	b9 00 00 00 80       	mov    $0x80000000,%ecx
    e80d:	be 50 03 00 00       	mov    $0x350,%esi
    e812:	b8 1f 00 00 00       	mov    $0x1f,%eax
    e817:	e9 60 fc ff ff       	jmp    e47c <dlmalloc+0x132c>
    e81c:	49 89 f0             	mov    %rsi,%r8
    e81f:	48 89 f1             	mov    %rsi,%rcx
    e822:	49 83 e0 f8          	and    $0xfffffffffffffff8,%r8
    e826:	48 c1 e9 03          	shr    $0x3,%rcx
    e82a:	48 81 fe ff 00 00 00 	cmp    $0xff,%rsi
    e831:	0f 87 9f 01 00 00    	ja     e9d6 <dlmalloc+0x1886>
    e837:	44 8d 5c 09 09       	lea    0x9(%rcx,%rcx,1),%r11d
    e83c:	49 8b 7a 10          	mov    0x10(%r10),%rdi
    e840:	49 8b 72 18          	mov    0x18(%r10),%rsi
    e844:	4f 8d 5c dd 00       	lea    0x0(%r13,%r11,8),%r11
    e849:	4c 39 df             	cmp    %r11,%rdi
    e84c:	0f 85 84 03 00 00    	jne    ebd6 <dlmalloc+0x1a86>
    e852:	48 39 fe             	cmp    %rdi,%rsi
    e855:	0f 84 69 03 00 00    	je     ebc4 <dlmalloc+0x1a74>
    e85b:	48 3b 35 f6 c1 01 00 	cmp    0x1c1f6(%rip),%rsi        # 2aa58 <_gm_+0x18>
    e862:	0f 82 48 ef ff ff    	jb     d7b0 <dlmalloc+0x660>
    e868:	4c 39 56 10          	cmp    %r10,0x10(%rsi)
    e86c:	0f 85 3e ef ff ff    	jne    d7b0 <dlmalloc+0x660>
    e872:	48 89 77 18          	mov    %rsi,0x18(%rdi)
    e876:	48 89 7e 10          	mov    %rdi,0x10(%rsi)
    e87a:	4d 01 c2             	add    %r8,%r10
    e87d:	4c 01 c0             	add    %r8,%rax
    e880:	49 8b 72 08          	mov    0x8(%r10),%rsi
    e884:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    e888:	e9 ed f9 ff ff       	jmp    e27a <dlmalloc+0x112a>
    e88d:	49 89 4c d5 08       	mov    %rcx,0x8(%r13,%rdx,8)
    e892:	e9 6f fb ff ff       	jmp    e406 <dlmalloc+0x12b6>
    e897:	4d 89 84 cd 58 02 00 	mov    %r8,0x258(%r13,%rcx,8)
    e89e:	00 
    e89f:	4d 85 c0             	test   %r8,%r8
    e8a2:	0f 85 f7 ef ff ff    	jne    d89f <dlmalloc+0x74f>
    e8a8:	41 0f b3 c1          	btr    %eax,%r9d
    e8ac:	44 89 0d 91 c1 01 00 	mov    %r9d,0x1c191(%rip)        # 2aa44 <_gm_+0x4>
    e8b3:	e9 28 f0 ff ff       	jmp    d8e0 <dlmalloc+0x790>
    e8b8:	44 09 c2             	or     %r8d,%edx
    e8bb:	89 15 7f c1 01 00    	mov    %edx,0x1c17f(%rip)        # 2aa40 <_gm_>
    e8c1:	4c 89 ca             	mov    %r9,%rdx
    e8c4:	e9 83 f0 ff ff       	jmp    d94c <dlmalloc+0x7fc>
    e8c9:	48 8b 48 10          	mov    0x10(%rax),%rcx
    e8cd:	48 3b 0d 84 c1 01 00 	cmp    0x1c184(%rip),%rcx        # 2aa58 <_gm_+0x18>
    e8d4:	0f 83 f2 f9 ff ff    	jae    e2cc <dlmalloc+0x117c>
    e8da:	e9 d1 ee ff ff       	jmp    d7b0 <dlmalloc+0x660>
    e8df:	89 ce                	mov    %ecx,%esi
    e8e1:	49 8b b4 f5 58 02 00 	mov    0x258(%r13,%rsi,8),%rsi
    e8e8:	00 
    e8e9:	83 f9 1f             	cmp    $0x1f,%ecx
    e8ec:	74 0b                	je     e8f9 <dlmalloc+0x17a9>
    e8ee:	d1 e9                	shr    %ecx
    e8f0:	41 b9 39 00 00 00    	mov    $0x39,%r9d
    e8f6:	41 29 c9             	sub    %ecx,%r9d
    e8f9:	48 89 c7             	mov    %rax,%rdi
    e8fc:	44 89 c9             	mov    %r9d,%ecx
    e8ff:	48 d3 e7             	shl    %cl,%rdi
    e902:	eb 1e                	jmp    e922 <dlmalloc+0x17d2>
    e904:	48 89 f9             	mov    %rdi,%rcx
    e907:	48 01 ff             	add    %rdi,%rdi
    e90a:	48 c1 e9 3f          	shr    $0x3f,%rcx
    e90e:	48 83 c1 04          	add    $0x4,%rcx
    e912:	4c 8b 04 ce          	mov    (%rsi,%rcx,8),%r8
    e916:	4d 85 c0             	test   %r8,%r8
    e919:	0f 84 d7 01 00 00    	je     eaf6 <dlmalloc+0x19a6>
    e91f:	4c 89 c6             	mov    %r8,%rsi
    e922:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    e926:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    e92a:	48 39 c8             	cmp    %rcx,%rax
    e92d:	75 d5                	jne    e904 <dlmalloc+0x17b4>
    e92f:	48 8b 46 10          	mov    0x10(%rsi),%rax
    e933:	48 8b 0d 1e c1 01 00 	mov    0x1c11e(%rip),%rcx        # 2aa58 <_gm_+0x18>
    e93a:	66 48 0f 6e f6       	movq   %rsi,%xmm6
    e93f:	66 48 0f 6e c0       	movq   %rax,%xmm0
    e944:	66 0f 6c c6          	punpcklqdq %xmm6,%xmm0
    e948:	48 39 c8             	cmp    %rcx,%rax
    e94b:	0f 82 5f ee ff ff    	jb     d7b0 <dlmalloc+0x660>
    e951:	48 39 ce             	cmp    %rcx,%rsi
    e954:	0f 82 56 ee ff ff    	jb     d7b0 <dlmalloc+0x660>
    e95a:	48 89 50 18          	mov    %rdx,0x18(%rax)
    e95e:	31 c0                	xor    %eax,%eax
    e960:	48 89 56 10          	mov    %rdx,0x10(%rsi)
    e964:	48 89 42 30          	mov    %rax,0x30(%rdx)
    e968:	0f 11 42 10          	movups %xmm0,0x10(%rdx)
    e96c:	e9 11 ea ff ff       	jmp    d382 <dlmalloc+0x232>
    e971:	bf 01 00 00 00       	mov    $0x1,%edi
    e976:	be 58 02 00 00       	mov    $0x258,%esi
    e97b:	e9 b5 fd ff ff       	jmp    e735 <dlmalloc+0x15e5>
    e980:	48 8b 43 20          	mov    0x20(%rbx),%rax
    e984:	48 85 c0             	test   %rax,%rax
    e987:	0f 84 b0 01 00 00    	je     eb3d <dlmalloc+0x19ed>
    e98d:	48 8d 4b 20          	lea    0x20(%rbx),%rcx
    e991:	e9 fa fb ff ff       	jmp    e590 <dlmalloc+0x1440>
    e996:	4d 89 46 20          	mov    %r8,0x20(%r14)
    e99a:	e9 fb ee ff ff       	jmp    d89a <dlmalloc+0x74a>
    e99f:	4c 89 f7             	mov    %r14,%rdi
    e9a2:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    e9a7:	e8 c4 dc ff ff       	call   c670 <sbrk>
    e9ac:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    e9b1:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    e9b5:	0f 84 5b 02 00 00    	je     ec16 <dlmalloc+0x1ac6>
    e9bb:	4d 01 f7             	add    %r14,%r15
    e9be:	c7 05 68 c4 01 00 00 	movl   $0x0,0x1c468(%rip)        # 2ae30 <malloc_global_mutex>
    e9c5:	00 00 00 
    e9c8:	e9 d3 f1 ff ff       	jmp    dba0 <dlmalloc+0xa50>
    e9cd:	49 89 4f 20          	mov    %rcx,0x20(%r15)
    e9d1:	e9 30 fa ff ff       	jmp    e406 <dlmalloc+0x12b6>
    e9d6:	49 8b 72 18          	mov    0x18(%r10),%rsi
    e9da:	4d 8b 62 30          	mov    0x30(%r10),%r12
    e9de:	4c 39 d6             	cmp    %r10,%rsi
    e9e1:	0f 84 96 01 00 00    	je     eb7d <dlmalloc+0x1a2d>
    e9e7:	49 8b 4a 10          	mov    0x10(%r10),%rcx
    e9eb:	48 3b 0d 66 c0 01 00 	cmp    0x1c066(%rip),%rcx        # 2aa58 <_gm_+0x18>
    e9f2:	0f 82 b8 ed ff ff    	jb     d7b0 <dlmalloc+0x660>
    e9f8:	4c 39 51 18          	cmp    %r10,0x18(%rcx)
    e9fc:	0f 85 ae ed ff ff    	jne    d7b0 <dlmalloc+0x660>
    ea02:	4c 39 56 10          	cmp    %r10,0x10(%rsi)
    ea06:	0f 85 a4 ed ff ff    	jne    d7b0 <dlmalloc+0x660>
    ea0c:	48 89 71 18          	mov    %rsi,0x18(%rcx)
    ea10:	48 89 4e 10          	mov    %rcx,0x10(%rsi)
    ea14:	4d 85 e4             	test   %r12,%r12
    ea17:	0f 84 5d fe ff ff    	je     e87a <dlmalloc+0x172a>
    ea1d:	41 8b 7a 38          	mov    0x38(%r10),%edi
    ea21:	48 89 f9             	mov    %rdi,%rcx
    ea24:	4c 8d 5f 4a          	lea    0x4a(%rdi),%r11
    ea28:	4d 39 94 fd 58 02 00 	cmp    %r10,0x258(%r13,%rdi,8)
    ea2f:	00 
    ea30:	0f 84 0e 02 00 00    	je     ec44 <dlmalloc+0x1af4>
    ea36:	4c 3b 25 1b c0 01 00 	cmp    0x1c01b(%rip),%r12        # 2aa58 <_gm_+0x18>
    ea3d:	0f 82 6d ed ff ff    	jb     d7b0 <dlmalloc+0x660>
    ea43:	4d 39 54 24 20       	cmp    %r10,0x20(%r12)
    ea48:	0f 84 ec 01 00 00    	je     ec3a <dlmalloc+0x1aea>
    ea4e:	49 89 74 24 28       	mov    %rsi,0x28(%r12)
    ea53:	48 85 f6             	test   %rsi,%rsi
    ea56:	0f 84 1e fe ff ff    	je     e87a <dlmalloc+0x172a>
    ea5c:	48 8b 3d f5 bf 01 00 	mov    0x1bff5(%rip),%rdi        # 2aa58 <_gm_+0x18>
    ea63:	48 39 fe             	cmp    %rdi,%rsi
    ea66:	0f 82 44 ed ff ff    	jb     d7b0 <dlmalloc+0x660>
    ea6c:	49 8b 4a 20          	mov    0x20(%r10),%rcx
    ea70:	4c 89 66 30          	mov    %r12,0x30(%rsi)
    ea74:	48 85 c9             	test   %rcx,%rcx
    ea77:	74 11                	je     ea8a <dlmalloc+0x193a>
    ea79:	48 39 f9             	cmp    %rdi,%rcx
    ea7c:	0f 82 2e ed ff ff    	jb     d7b0 <dlmalloc+0x660>
    ea82:	48 89 4e 20          	mov    %rcx,0x20(%rsi)
    ea86:	48 89 71 30          	mov    %rsi,0x30(%rcx)
    ea8a:	49 8b 4a 28          	mov    0x28(%r10),%rcx
    ea8e:	48 85 c9             	test   %rcx,%rcx
    ea91:	0f 84 e3 fd ff ff    	je     e87a <dlmalloc+0x172a>
    ea97:	48 39 f9             	cmp    %rdi,%rcx
    ea9a:	0f 82 10 ed ff ff    	jb     d7b0 <dlmalloc+0x660>
    eaa0:	48 89 4e 28          	mov    %rcx,0x28(%rsi)
    eaa4:	48 89 71 30          	mov    %rsi,0x30(%rcx)
    eaa8:	e9 cd fd ff ff       	jmp    e87a <dlmalloc+0x172a>
    eaad:	4d 85 ff             	test   %r15,%r15
    eab0:	0f 84 4a ec ff ff    	je     d700 <dlmalloc+0x5b0>
    eab6:	8b 53 38             	mov    0x38(%rbx),%edx
    eab9:	48 89 d0             	mov    %rdx,%rax
    eabc:	48 8d 4a 4a          	lea    0x4a(%rdx),%rcx
    eac0:	49 3b 9c d5 58 02 00 	cmp    0x258(%r13,%rdx,8),%rbx
    eac7:	00 
    eac8:	0f 84 a2 01 00 00    	je     ec70 <dlmalloc+0x1b20>
    eace:	4d 39 df             	cmp    %r11,%r15
    ead1:	0f 82 d9 ec ff ff    	jb     d7b0 <dlmalloc+0x660>
    ead7:	4d 39 77 20          	cmp    %r14,0x20(%r15)
    eadb:	0f 84 83 01 00 00    	je     ec64 <dlmalloc+0x1b14>
    eae1:	31 f6                	xor    %esi,%esi
    eae3:	49 89 77 28          	mov    %rsi,0x28(%r15)
    eae7:	e9 14 ec ff ff       	jmp    d700 <dlmalloc+0x5b0>
    eaec:	4d 89 44 cd 08       	mov    %r8,0x8(%r13,%rcx,8)
    eaf1:	e9 a9 ed ff ff       	jmp    d89f <dlmalloc+0x74f>
    eaf6:	48 8d 04 ce          	lea    (%rsi,%rcx,8),%rax
    eafa:	48 3b 05 57 bf 01 00 	cmp    0x1bf57(%rip),%rax        # 2aa58 <_gm_+0x18>
    eb01:	0f 82 a9 ec ff ff    	jb     d7b0 <dlmalloc+0x660>
    eb07:	48 89 14 ce          	mov    %rdx,(%rsi,%rcx,8)
    eb0b:	48 89 72 30          	mov    %rsi,0x30(%rdx)
    eb0f:	0f 11 42 10          	movups %xmm0,0x10(%rdx)
    eb13:	e9 6a e8 ff ff       	jmp    d382 <dlmalloc+0x232>
    eb18:	bf 00 00 00 80       	mov    $0x80000000,%edi
    eb1d:	be 50 03 00 00       	mov    $0x350,%esi
    eb22:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    eb27:	e9 09 fc ff ff       	jmp    e735 <dlmalloc+0x15e5>
    eb2c:	4d 89 46 20          	mov    %r8,0x20(%r14)
    eb30:	e9 6a ed ff ff       	jmp    d89f <dlmalloc+0x74f>
    eb35:	4d 89 e3             	mov    %r12,%r11
    eb38:	e9 4b ea ff ff       	jmp    d588 <dlmalloc+0x438>
    eb3d:	4d 85 f6             	test   %r14,%r14
    eb40:	0f 84 9a ed ff ff    	je     d8e0 <dlmalloc+0x790>
    eb46:	8b 4b 38             	mov    0x38(%rbx),%ecx
    eb49:	48 89 c8             	mov    %rcx,%rax
    eb4c:	4c 8d 41 4a          	lea    0x4a(%rcx),%r8
    eb50:	49 3b 9c cd 58 02 00 	cmp    0x258(%r13,%rcx,8),%rbx
    eb57:	00 
    eb58:	0f 84 34 01 00 00    	je     ec92 <dlmalloc+0x1b42>
    eb5e:	4d 39 de             	cmp    %r11,%r14
    eb61:	0f 82 49 ec ff ff    	jb     d7b0 <dlmalloc+0x660>
    eb67:	49 3b 5e 20          	cmp    0x20(%r14),%rbx
    eb6b:	0f 84 16 01 00 00    	je     ec87 <dlmalloc+0x1b37>
    eb71:	45 31 ff             	xor    %r15d,%r15d
    eb74:	4d 89 7e 28          	mov    %r15,0x28(%r14)
    eb78:	e9 63 ed ff ff       	jmp    d8e0 <dlmalloc+0x790>
    eb7d:	49 8b 72 28          	mov    0x28(%r10),%rsi
    eb81:	48 85 f6             	test   %rsi,%rsi
    eb84:	74 7a                	je     ec00 <dlmalloc+0x1ab0>
    eb86:	49 8d 7a 28          	lea    0x28(%r10),%rdi
    eb8a:	48 89 f1             	mov    %rsi,%rcx
    eb8d:	49 89 fb             	mov    %rdi,%r11
    eb90:	48 89 ce             	mov    %rcx,%rsi
    eb93:	48 8d 79 28          	lea    0x28(%rcx),%rdi
    eb97:	48 8b 49 28          	mov    0x28(%rcx),%rcx
    eb9b:	48 85 c9             	test   %rcx,%rcx
    eb9e:	75 ed                	jne    eb8d <dlmalloc+0x1a3d>
    eba0:	48 8b 4e 20          	mov    0x20(%rsi),%rcx
    eba4:	48 8d 7e 20          	lea    0x20(%rsi),%rdi
    eba8:	48 85 c9             	test   %rcx,%rcx
    ebab:	75 e0                	jne    eb8d <dlmalloc+0x1a3d>
    ebad:	4c 3b 1d a4 be 01 00 	cmp    0x1bea4(%rip),%r11        # 2aa58 <_gm_+0x18>
    ebb4:	0f 82 f6 eb ff ff    	jb     d7b0 <dlmalloc+0x660>
    ebba:	31 c9                	xor    %ecx,%ecx
    ebbc:	49 89 0b             	mov    %rcx,(%r11)
    ebbf:	e9 50 fe ff ff       	jmp    ea14 <dlmalloc+0x18c4>
    ebc4:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    ebc9:	d3 c6                	rol    %cl,%esi
    ebcb:	21 35 6f be 01 00    	and    %esi,0x1be6f(%rip)        # 2aa40 <_gm_>
    ebd1:	e9 a4 fc ff ff       	jmp    e87a <dlmalloc+0x172a>
    ebd6:	48 3b 3d 7b be 01 00 	cmp    0x1be7b(%rip),%rdi        # 2aa58 <_gm_+0x18>
    ebdd:	0f 82 cd eb ff ff    	jb     d7b0 <dlmalloc+0x660>
    ebe3:	4c 39 57 18          	cmp    %r10,0x18(%rdi)
    ebe7:	0f 85 c3 eb ff ff    	jne    d7b0 <dlmalloc+0x660>
    ebed:	48 39 f7             	cmp    %rsi,%rdi
    ebf0:	74 d2                	je     ebc4 <dlmalloc+0x1a74>
    ebf2:	4c 39 de             	cmp    %r11,%rsi
    ebf5:	0f 84 77 fc ff ff    	je     e872 <dlmalloc+0x1722>
    ebfb:	e9 5b fc ff ff       	jmp    e85b <dlmalloc+0x170b>
    ec00:	49 8b 72 20          	mov    0x20(%r10),%rsi
    ec04:	48 85 f6             	test   %rsi,%rsi
    ec07:	0f 84 07 fe ff ff    	je     ea14 <dlmalloc+0x18c4>
    ec0d:	49 8d 7a 20          	lea    0x20(%r10),%rdi
    ec11:	e9 74 ff ff ff       	jmp    eb8a <dlmalloc+0x1a3a>
    ec16:	4c 89 ff             	mov    %r15,%rdi
    ec19:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    ec1e:	48 f7 df             	neg    %rdi
    ec21:	e8 4a da ff ff       	call   c670 <sbrk>
    ec26:	c7 05 00 c2 01 00 00 	movl   $0x0,0x1c200(%rip)        # 2ae30 <malloc_global_mutex>
    ec2d:	00 00 00 
    ec30:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    ec35:	e9 d9 ee ff ff       	jmp    db13 <dlmalloc+0x9c3>
    ec3a:	49 89 74 24 20       	mov    %rsi,0x20(%r12)
    ec3f:	e9 0f fe ff ff       	jmp    ea53 <dlmalloc+0x1903>
    ec44:	4b 89 74 dd 08       	mov    %rsi,0x8(%r13,%r11,8)
    ec49:	48 85 f6             	test   %rsi,%rsi
    ec4c:	0f 85 0a fe ff ff    	jne    ea5c <dlmalloc+0x190c>
    ec52:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    ec57:	d3 c6                	rol    %cl,%esi
    ec59:	21 35 e5 bd 01 00    	and    %esi,0x1bde5(%rip)        # 2aa44 <_gm_+0x4>
    ec5f:	e9 16 fc ff ff       	jmp    e87a <dlmalloc+0x172a>
    ec64:	45 31 c9             	xor    %r9d,%r9d
    ec67:	4d 89 4f 20          	mov    %r9,0x20(%r15)
    ec6b:	e9 90 ea ff ff       	jmp    d700 <dlmalloc+0x5b0>
    ec70:	45 31 f6             	xor    %r14d,%r14d
    ec73:	4d 89 74 cd 08       	mov    %r14,0x8(%r13,%rcx,8)
    ec78:	e9 01 fa ff ff       	jmp    e67e <dlmalloc+0x152e>
    ec7d:	e8 de e3 ff ff       	call   d060 <init_mparams.isra.0>
    ec82:	e9 82 ed ff ff       	jmp    da09 <dlmalloc+0x8b9>
    ec87:	31 c0                	xor    %eax,%eax
    ec89:	49 89 46 20          	mov    %rax,0x20(%r14)
    ec8d:	e9 4e ec ff ff       	jmp    d8e0 <dlmalloc+0x790>
    ec92:	31 c9                	xor    %ecx,%ecx
    ec94:	4b 89 4c c5 08       	mov    %rcx,0x8(%r13,%r8,8)
    ec99:	e9 0a fc ff ff       	jmp    e8a8 <dlmalloc+0x1758>
    ec9e:	66 90                	xchg   %ax,%ax

000000000000eca0 <internal_memalign.constprop.0>:
    eca0:	41 55                	push   %r13
    eca2:	41 54                	push   %r12
    eca4:	55                   	push   %rbp
    eca5:	53                   	push   %rbx
    eca6:	bb 20 00 00 00       	mov    $0x20,%ebx
    ecab:	48 83 ec 18          	sub    $0x18,%rsp
    ecaf:	48 39 df             	cmp    %rbx,%rdi
    ecb2:	48 0f 43 df          	cmovae %rdi,%rbx
    ecb6:	48 8d 43 ff          	lea    -0x1(%rbx),%rax
    ecba:	48 85 d8             	test   %rbx,%rax
    ecbd:	74 49                	je     ed08 <internal_memalign.constprop.0+0x68>
    ecbf:	48 83 ff 20          	cmp    $0x20,%rdi
    ecc3:	0f 86 17 02 00 00    	jbe    eee0 <internal_memalign.constprop.0+0x240>
    ecc9:	b8 20 00 00 00       	mov    $0x20,%eax
    ecce:	66 90                	xchg   %ax,%ax
    ecd0:	48 01 c0             	add    %rax,%rax
    ecd3:	48 39 d8             	cmp    %rbx,%rax
    ecd6:	72 f8                	jb     ecd0 <internal_memalign.constprop.0+0x30>
    ecd8:	48 c7 c2 80 ff ff ff 	mov    $0xffffffffffffff80,%rdx
    ecdf:	48 89 c3             	mov    %rax,%rbx
    ece2:	48 29 c2             	sub    %rax,%rdx
    ece5:	48 39 d6             	cmp    %rdx,%rsi
    ece8:	72 2d                	jb     ed17 <internal_memalign.constprop.0+0x77>
    ecea:	e8 61 22 00 00       	call   10f50 <__errno_location>
    ecef:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
    ecf5:	48 83 c4 18          	add    $0x18,%rsp
    ecf9:	31 c0                	xor    %eax,%eax
    ecfb:	5b                   	pop    %rbx
    ecfc:	5d                   	pop    %rbp
    ecfd:	41 5c                	pop    %r12
    ecff:	41 5d                	pop    %r13
    ed01:	c3                   	ret    
    ed02:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    ed08:	48 c7 c2 80 ff ff ff 	mov    $0xffffffffffffff80,%rdx
    ed0f:	48 29 da             	sub    %rbx,%rdx
    ed12:	48 39 d6             	cmp    %rdx,%rsi
    ed15:	73 d3                	jae    ecea <internal_memalign.constprop.0+0x4a>
    ed17:	48 8d 46 1f          	lea    0x1f(%rsi),%rax
    ed1b:	ba 20 00 00 00       	mov    $0x20,%edx
    ed20:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
    ed24:	48 83 fe 0e          	cmp    $0xe,%rsi
    ed28:	48 0f 47 d0          	cmova  %rax,%rdx
    ed2c:	48 8d 7c 13 10       	lea    0x10(%rbx,%rdx,1),%rdi
    ed31:	49 89 d4             	mov    %rdx,%r12
    ed34:	e8 17 e4 ff ff       	call   d150 <dlmalloc>
    ed39:	48 85 c0             	test   %rax,%rax
    ed3c:	74 b7                	je     ecf5 <internal_memalign.constprop.0+0x55>
    ed3e:	44 8b 2d 6b c0 01 00 	mov    0x1c06b(%rip),%r13d        # 2adb0 <_gm_+0x370>
    ed45:	48 8d 70 f0          	lea    -0x10(%rax),%rsi
    ed49:	41 83 e5 02          	and    $0x2,%r13d
    ed4d:	0f 85 9d 00 00 00    	jne    edf0 <internal_memalign.constprop.0+0x150>
    ed53:	48 8d 6b ff          	lea    -0x1(%rbx),%rbp
    ed57:	48 85 e8             	test   %rbp,%rax
    ed5a:	75 3c                	jne    ed98 <internal_memalign.constprop.0+0xf8>
    ed5c:	48 8b 50 f8          	mov    -0x8(%rax),%rdx
    ed60:	48 89 f5             	mov    %rsi,%rbp
    ed63:	f6 c2 03             	test   $0x3,%dl
    ed66:	74 15                	je     ed7d <internal_memalign.constprop.0+0xdd>
    ed68:	48 89 d1             	mov    %rdx,%rcx
    ed6b:	49 8d 74 24 20       	lea    0x20(%r12),%rsi
    ed70:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    ed74:	48 39 ce             	cmp    %rcx,%rsi
    ed77:	0f 82 a3 00 00 00    	jb     ee20 <internal_memalign.constprop.0+0x180>
    ed7d:	45 85 ed             	test   %r13d,%r13d
    ed80:	0f 85 72 01 00 00    	jne    eef8 <internal_memalign.constprop.0+0x258>
    ed86:	48 83 c4 18          	add    $0x18,%rsp
    ed8a:	5b                   	pop    %rbx
    ed8b:	5d                   	pop    %rbp
    ed8c:	41 5c                	pop    %r12
    ed8e:	41 5d                	pop    %r13
    ed90:	c3                   	ret    
    ed91:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    ed98:	48 89 da             	mov    %rbx,%rdx
    ed9b:	48 01 c5             	add    %rax,%rbp
    ed9e:	48 f7 da             	neg    %rdx
    eda1:	48 21 d5             	and    %rdx,%rbp
    eda4:	48 83 ed 10          	sub    $0x10,%rbp
    eda8:	48 89 e9             	mov    %rbp,%rcx
    edab:	48 29 f1             	sub    %rsi,%rcx
    edae:	48 83 f9 1f          	cmp    $0x1f,%rcx
    edb2:	77 09                	ja     edbd <internal_memalign.constprop.0+0x11d>
    edb4:	48 01 dd             	add    %rbx,%rbp
    edb7:	48 89 e9             	mov    %rbp,%rcx
    edba:	48 29 f1             	sub    %rsi,%rcx
    edbd:	48 8b 78 f8          	mov    -0x8(%rax),%rdi
    edc1:	48 8d 5d 10          	lea    0x10(%rbp),%rbx
    edc5:	48 89 fa             	mov    %rdi,%rdx
    edc8:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    edcc:	48 29 ca             	sub    %rcx,%rdx
    edcf:	83 e7 03             	and    $0x3,%edi
    edd2:	0f 85 a8 00 00 00    	jne    ee80 <internal_memalign.constprop.0+0x1e0>
    edd8:	48 03 48 f0          	add    -0x10(%rax),%rcx
    eddc:	48 89 55 08          	mov    %rdx,0x8(%rbp)
    ede0:	48 89 d8             	mov    %rbx,%rax
    ede3:	48 89 4d 00          	mov    %rcx,0x0(%rbp)
    ede7:	e9 77 ff ff ff       	jmp    ed63 <internal_memalign.constprop.0+0xc3>
    edec:	0f 1f 40 00          	nopl   0x0(%rax)
    edf0:	ba 01 00 00 00       	mov    $0x1,%edx
    edf5:	87 15 b9 bf 01 00    	xchg   %edx,0x1bfb9(%rip)        # 2adb4 <_gm_+0x374>
    edfb:	85 d2                	test   %edx,%edx
    edfd:	0f 85 0d 01 00 00    	jne    ef10 <internal_memalign.constprop.0+0x270>
    ee03:	44 8b 2d a6 bf 01 00 	mov    0x1bfa6(%rip),%r13d        # 2adb0 <_gm_+0x370>
    ee0a:	48 8d 6b ff          	lea    -0x1(%rbx),%rbp
    ee0e:	41 83 e5 02          	and    $0x2,%r13d
    ee12:	48 85 e8             	test   %rbp,%rax
    ee15:	75 81                	jne    ed98 <internal_memalign.constprop.0+0xf8>
    ee17:	e9 40 ff ff ff       	jmp    ed5c <internal_memalign.constprop.0+0xbc>
    ee1c:	0f 1f 40 00          	nopl   0x0(%rax)
    ee20:	83 e2 01             	and    $0x1,%edx
    ee23:	49 89 c8             	mov    %rcx,%r8
    ee26:	4a 8d 74 25 00       	lea    0x0(%rbp,%r12,1),%rsi
    ee2b:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    ee30:	4c 09 e2             	or     %r12,%rdx
    ee33:	4d 29 e0             	sub    %r12,%r8
    ee36:	48 8d 3d 03 bc 01 00 	lea    0x1bc03(%rip),%rdi        # 2aa40 <_gm_>
    ee3d:	48 83 ca 02          	or     $0x2,%rdx
    ee41:	4d 89 c1             	mov    %r8,%r9
    ee44:	48 89 55 08          	mov    %rdx,0x8(%rbp)
    ee48:	48 8b 15 b1 bf 01 00 	mov    0x1bfb1(%rip),%rdx        # 2ae00 <mparams>
    ee4f:	48 01 cd             	add    %rcx,%rbp
    ee52:	49 83 c9 03          	or     $0x3,%r9
    ee56:	4c 89 4e 08          	mov    %r9,0x8(%rsi)
    ee5a:	48 31 fa             	xor    %rdi,%rdx
    ee5d:	48 89 16             	mov    %rdx,(%rsi)
    ee60:	48 83 4d 08 01       	orq    $0x1,0x8(%rbp)
    ee65:	48 89 55 00          	mov    %rdx,0x0(%rbp)
    ee69:	4c 89 c2             	mov    %r8,%rdx
    ee6c:	e8 bf d9 ff ff       	call   c830 <dispose_chunk>
    ee71:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    ee76:	e9 02 ff ff ff       	jmp    ed7d <internal_memalign.constprop.0+0xdd>
    ee7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    ee80:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
    ee84:	4c 8b 05 75 bf 01 00 	mov    0x1bf75(%rip),%r8        # 2ae00 <mparams>
    ee8b:	83 e7 01             	and    $0x1,%edi
    ee8e:	48 09 d7             	or     %rdx,%rdi
    ee91:	48 01 ea             	add    %rbp,%rdx
    ee94:	48 83 cf 02          	or     $0x2,%rdi
    ee98:	48 89 7d 08          	mov    %rdi,0x8(%rbp)
    ee9c:	48 8d 3d 9d bb 01 00 	lea    0x1bb9d(%rip),%rdi        # 2aa40 <_gm_>
    eea3:	49 31 f8             	xor    %rdi,%r8
    eea6:	48 83 4a 08 01       	orq    $0x1,0x8(%rdx)
    eeab:	4c 89 02             	mov    %r8,(%rdx)
    eeae:	48 8b 50 f8          	mov    -0x8(%rax),%rdx
    eeb2:	83 e2 01             	and    $0x1,%edx
    eeb5:	48 09 ca             	or     %rcx,%rdx
    eeb8:	48 83 ca 02          	or     $0x2,%rdx
    eebc:	48 89 50 f8          	mov    %rdx,-0x8(%rax)
    eec0:	48 89 ca             	mov    %rcx,%rdx
    eec3:	48 83 4d 08 01       	orq    $0x1,0x8(%rbp)
    eec8:	4c 89 45 00          	mov    %r8,0x0(%rbp)
    eecc:	e8 5f d9 ff ff       	call   c830 <dispose_chunk>
    eed1:	48 8b 55 08          	mov    0x8(%rbp),%rdx
    eed5:	48 89 d8             	mov    %rbx,%rax
    eed8:	e9 86 fe ff ff       	jmp    ed63 <internal_memalign.constprop.0+0xc3>
    eedd:	0f 1f 00             	nopl   (%rax)
    eee0:	48 c7 c2 60 ff ff ff 	mov    $0xffffffffffffff60,%rdx
    eee7:	bb 20 00 00 00       	mov    $0x20,%ebx
    eeec:	e9 21 fe ff ff       	jmp    ed12 <internal_memalign.constprop.0+0x72>
    eef1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    eef8:	c7 05 b2 be 01 00 00 	movl   $0x0,0x1beb2(%rip)        # 2adb4 <_gm_+0x374>
    eeff:	00 00 00 
    ef02:	48 83 c4 18          	add    $0x18,%rsp
    ef06:	5b                   	pop    %rbx
    ef07:	5d                   	pop    %rbp
    ef08:	41 5c                	pop    %r12
    ef0a:	41 5d                	pop    %r13
    ef0c:	c3                   	ret    
    ef0d:	0f 1f 00             	nopl   (%rax)
    ef10:	b9 01 00 00 00       	mov    $0x1,%ecx
    ef15:	0f 1f 00             	nopl   (%rax)
    ef18:	8b 15 96 be 01 00    	mov    0x1be96(%rip),%edx        # 2adb4 <_gm_+0x374>
    ef1e:	85 d2                	test   %edx,%edx
    ef20:	75 f6                	jne    ef18 <internal_memalign.constprop.0+0x278>
    ef22:	89 ca                	mov    %ecx,%edx
    ef24:	87 15 8a be 01 00    	xchg   %edx,0x1be8a(%rip)        # 2adb4 <_gm_+0x374>
    ef2a:	85 d2                	test   %edx,%edx
    ef2c:	75 ea                	jne    ef18 <internal_memalign.constprop.0+0x278>
    ef2e:	e9 d0 fe ff ff       	jmp    ee03 <internal_memalign.constprop.0+0x163>
    ef33:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    ef3a:	00 00 00 
    ef3d:	0f 1f 00             	nopl   (%rax)

000000000000ef40 <dlfree>:
    ef40:	f3 0f 1e fa          	endbr64 
    ef44:	48 85 ff             	test   %rdi,%rdi
    ef47:	0f 84 db 01 00 00    	je     f128 <dlfree+0x1e8>
    ef4d:	41 55                	push   %r13
    ef4f:	48 89 f8             	mov    %rdi,%rax
    ef52:	48 8d 57 f0          	lea    -0x10(%rdi),%rdx
    ef56:	41 54                	push   %r12
    ef58:	55                   	push   %rbp
    ef59:	53                   	push   %rbx
    ef5a:	48 83 ec 08          	sub    $0x8,%rsp
    ef5e:	48 8b 4f f8          	mov    -0x8(%rdi),%rcx
    ef62:	48 8b 35 97 be 01 00 	mov    0x1be97(%rip),%rsi        # 2ae00 <mparams>
    ef69:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    ef6d:	48 8b 5c 0f f0       	mov    -0x10(%rdi,%rcx,1),%rbx
    ef72:	48 31 f3             	xor    %rsi,%rbx
    ef75:	48 3b 73 40          	cmp    0x40(%rbx),%rsi
    ef79:	0f 85 89 02 00 00    	jne    f208 <dlfree+0x2c8>
    ef7f:	f6 83 70 03 00 00 02 	testb  $0x2,0x370(%rbx)
    ef86:	0f 85 54 01 00 00    	jne    f0e0 <dlfree+0x1a0>
    ef8c:	4c 8b 4b 18          	mov    0x18(%rbx),%r9
    ef90:	4c 39 ca             	cmp    %r9,%rdx
    ef93:	0f 82 87 01 00 00    	jb     f120 <dlfree+0x1e0>
    ef99:	48 8b 48 f8          	mov    -0x8(%rax),%rcx
    ef9d:	49 89 c8             	mov    %rcx,%r8
    efa0:	41 83 e0 03          	and    $0x3,%r8d
    efa4:	49 83 f8 01          	cmp    $0x1,%r8
    efa8:	0f 84 72 01 00 00    	je     f120 <dlfree+0x1e0>
    efae:	48 89 ce             	mov    %rcx,%rsi
    efb1:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
    efb5:	83 e1 01             	and    $0x1,%ecx
    efb8:	48 8d 3c 32          	lea    (%rdx,%rsi,1),%rdi
    efbc:	0f 84 9e 00 00 00    	je     f060 <dlfree+0x120>
    efc2:	48 39 fa             	cmp    %rdi,%rdx
    efc5:	0f 83 55 01 00 00    	jae    f120 <dlfree+0x1e0>
    efcb:	48 8b 47 08          	mov    0x8(%rdi),%rax
    efcf:	a8 01                	test   $0x1,%al
    efd1:	0f 84 49 01 00 00    	je     f120 <dlfree+0x1e0>
    efd7:	a8 02                	test   $0x2,%al
    efd9:	0f 84 51 01 00 00    	je     f130 <dlfree+0x1f0>
    efdf:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    efe3:	48 89 47 08          	mov    %rax,0x8(%rdi)
    efe7:	48 89 f0             	mov    %rsi,%rax
    efea:	48 83 c8 01          	or     $0x1,%rax
    efee:	48 89 42 08          	mov    %rax,0x8(%rdx)
    eff2:	48 89 34 32          	mov    %rsi,(%rdx,%rsi,1)
    eff6:	48 89 f1             	mov    %rsi,%rcx
    eff9:	48 c1 e9 03          	shr    $0x3,%rcx
    effd:	48 81 fe ff 00 00 00 	cmp    $0xff,%rsi
    f004:	0f 87 ce 01 00 00    	ja     f1d8 <dlfree+0x298>
    f00a:	8d 44 09 09          	lea    0x9(%rcx,%rcx,1),%eax
    f00e:	8b 3b                	mov    (%rbx),%edi
    f010:	48 8d 34 c3          	lea    (%rbx,%rax,8),%rsi
    f014:	b8 01 00 00 00       	mov    $0x1,%eax
    f019:	d3 e0                	shl    %cl,%eax
    f01b:	85 c7                	test   %eax,%edi
    f01d:	0f 84 35 06 00 00    	je     f658 <dlfree+0x718>
    f023:	48 8b 46 10          	mov    0x10(%rsi),%rax
    f027:	4c 39 c8             	cmp    %r9,%rax
    f02a:	0f 82 d8 01 00 00    	jb     f208 <dlfree+0x2c8>
    f030:	48 89 56 10          	mov    %rdx,0x10(%rsi)
    f034:	48 89 50 18          	mov    %rdx,0x18(%rax)
    f038:	48 89 42 10          	mov    %rax,0x10(%rdx)
    f03c:	48 89 72 18          	mov    %rsi,0x18(%rdx)
    f040:	f6 83 70 03 00 00 02 	testb  $0x2,0x370(%rbx)
    f047:	0f 85 73 01 00 00    	jne    f1c0 <dlfree+0x280>
    f04d:	48 83 c4 08          	add    $0x8,%rsp
    f051:	5b                   	pop    %rbx
    f052:	5d                   	pop    %rbp
    f053:	41 5c                	pop    %r12
    f055:	41 5d                	pop    %r13
    f057:	c3                   	ret    
    f058:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    f05f:	00 
    f060:	48 8b 40 f0          	mov    -0x10(%rax),%rax
    f064:	4d 85 c0             	test   %r8,%r8
    f067:	74 d7                	je     f040 <dlfree+0x100>
    f069:	48 29 c2             	sub    %rax,%rdx
    f06c:	48 01 c6             	add    %rax,%rsi
    f06f:	4c 39 ca             	cmp    %r9,%rdx
    f072:	0f 82 a8 00 00 00    	jb     f120 <dlfree+0x1e0>
    f078:	48 39 53 20          	cmp    %rdx,0x20(%rbx)
    f07c:	0f 84 9e 05 00 00    	je     f620 <dlfree+0x6e0>
    f082:	48 89 c1             	mov    %rax,%rcx
    f085:	48 c1 e9 03          	shr    $0x3,%rcx
    f089:	48 3d ff 00 00 00    	cmp    $0xff,%rax
    f08f:	0f 87 6b 02 00 00    	ja     f300 <dlfree+0x3c0>
    f095:	44 8d 54 09 09       	lea    0x9(%rcx,%rcx,1),%r10d
    f09a:	48 8b 42 10          	mov    0x10(%rdx),%rax
    f09e:	4c 8b 42 18          	mov    0x18(%rdx),%r8
    f0a2:	4e 8d 14 d3          	lea    (%rbx,%r10,8),%r10
    f0a6:	49 39 c2             	cmp    %rax,%r10
    f0a9:	0f 85 ae 07 00 00    	jne    f85d <dlfree+0x91d>
    f0af:	4c 39 c0             	cmp    %r8,%rax
    f0b2:	0f 84 28 05 00 00    	je     f5e0 <dlfree+0x6a0>
    f0b8:	4d 39 c8             	cmp    %r9,%r8
    f0bb:	0f 82 47 01 00 00    	jb     f208 <dlfree+0x2c8>
    f0c1:	49 39 50 10          	cmp    %rdx,0x10(%r8)
    f0c5:	0f 85 3d 01 00 00    	jne    f208 <dlfree+0x2c8>
    f0cb:	4c 89 40 18          	mov    %r8,0x18(%rax)
    f0cf:	49 89 40 10          	mov    %rax,0x10(%r8)
    f0d3:	e9 ea fe ff ff       	jmp    efc2 <dlfree+0x82>
    f0d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    f0df:	00 
    f0e0:	48 8d b3 74 03 00 00 	lea    0x374(%rbx),%rsi
    f0e7:	b9 01 00 00 00       	mov    $0x1,%ecx
    f0ec:	87 0e                	xchg   %ecx,(%rsi)
    f0ee:	85 c9                	test   %ecx,%ecx
    f0f0:	0f 84 96 fe ff ff    	je     ef8c <dlfree+0x4c>
    f0f6:	bf 01 00 00 00       	mov    $0x1,%edi
    f0fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    f100:	8b 8b 74 03 00 00    	mov    0x374(%rbx),%ecx
    f106:	85 c9                	test   %ecx,%ecx
    f108:	75 f6                	jne    f100 <dlfree+0x1c0>
    f10a:	89 f9                	mov    %edi,%ecx
    f10c:	87 0e                	xchg   %ecx,(%rsi)
    f10e:	85 c9                	test   %ecx,%ecx
    f110:	75 ee                	jne    f100 <dlfree+0x1c0>
    f112:	e9 75 fe ff ff       	jmp    ef8c <dlfree+0x4c>
    f117:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    f11e:	00 00 
    f120:	e8 12 34 00 00       	call   12537 <abort>
    f125:	0f 1f 00             	nopl   (%rax)
    f128:	c3                   	ret    
    f129:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f130:	4c 8b 5b 20          	mov    0x20(%rbx),%r11
    f134:	48 39 7b 28          	cmp    %rdi,0x28(%rbx)
    f138:	0f 84 72 05 00 00    	je     f6b0 <dlfree+0x770>
    f13e:	49 39 fb             	cmp    %rdi,%r11
    f141:	0f 84 91 06 00 00    	je     f7d8 <dlfree+0x898>
    f147:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    f14b:	48 89 c1             	mov    %rax,%rcx
    f14e:	48 01 c6             	add    %rax,%rsi
    f151:	48 c1 e9 03          	shr    $0x3,%rcx
    f155:	48 3d f8 00 00 00    	cmp    $0xf8,%rax
    f15b:	0f 87 67 02 00 00    	ja     f3c8 <dlfree+0x488>
    f161:	44 8d 54 09 09       	lea    0x9(%rcx,%rcx,1),%r10d
    f166:	48 8b 47 10          	mov    0x10(%rdi),%rax
    f16a:	4c 8b 47 18          	mov    0x18(%rdi),%r8
    f16e:	4e 8d 14 d3          	lea    (%rbx,%r10,8),%r10
    f172:	49 39 c2             	cmp    %rax,%r10
    f175:	0f 85 73 04 00 00    	jne    f5ee <dlfree+0x6ae>
    f17b:	4c 39 c0             	cmp    %r8,%rax
    f17e:	0f 84 7c 06 00 00    	je     f800 <dlfree+0x8c0>
    f184:	4d 39 c8             	cmp    %r9,%r8
    f187:	72 7f                	jb     f208 <dlfree+0x2c8>
    f189:	49 39 78 10          	cmp    %rdi,0x10(%r8)
    f18d:	75 79                	jne    f208 <dlfree+0x2c8>
    f18f:	4c 89 40 18          	mov    %r8,0x18(%rax)
    f193:	49 89 40 10          	mov    %rax,0x10(%r8)
    f197:	48 89 f0             	mov    %rsi,%rax
    f19a:	48 83 c8 01          	or     $0x1,%rax
    f19e:	48 89 42 08          	mov    %rax,0x8(%rdx)
    f1a2:	48 89 34 32          	mov    %rsi,(%rdx,%rsi,1)
    f1a6:	4c 39 da             	cmp    %r11,%rdx
    f1a9:	0f 85 47 fe ff ff    	jne    eff6 <dlfree+0xb6>
    f1af:	48 89 73 08          	mov    %rsi,0x8(%rbx)
    f1b3:	e9 88 fe ff ff       	jmp    f040 <dlfree+0x100>
    f1b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    f1bf:	00 
    f1c0:	c7 83 74 03 00 00 00 	movl   $0x0,0x374(%rbx)
    f1c7:	00 00 00 
    f1ca:	48 83 c4 08          	add    $0x8,%rsp
    f1ce:	5b                   	pop    %rbx
    f1cf:	5d                   	pop    %rbp
    f1d0:	41 5c                	pop    %r12
    f1d2:	41 5d                	pop    %r13
    f1d4:	c3                   	ret    
    f1d5:	0f 1f 00             	nopl   (%rax)
    f1d8:	48 89 f0             	mov    %rsi,%rax
    f1db:	48 c1 e8 08          	shr    $0x8,%rax
    f1df:	89 c1                	mov    %eax,%ecx
    f1e1:	85 c0                	test   %eax,%eax
    f1e3:	74 2b                	je     f210 <dlfree+0x2d0>
    f1e5:	3d ff ff 00 00       	cmp    $0xffff,%eax
    f1ea:	0f 86 a0 02 00 00    	jbe    f490 <dlfree+0x550>
    f1f0:	b8 00 00 00 80       	mov    $0x80000000,%eax
    f1f5:	bf 50 03 00 00       	mov    $0x350,%edi
    f1fa:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    f1ff:	eb 19                	jmp    f21a <dlfree+0x2da>
    f201:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f208:	e8 2a 33 00 00       	call   12537 <abort>
    f20d:	0f 1f 00             	nopl   (%rax)
    f210:	b8 01 00 00 00       	mov    $0x1,%eax
    f215:	bf 58 02 00 00       	mov    $0x258,%edi
    f21a:	44 8b 43 04          	mov    0x4(%rbx),%r8d
    f21e:	66 48 0f 6e ca       	movq   %rdx,%xmm1
    f223:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f227:	89 4a 38             	mov    %ecx,0x38(%rdx)
    f22a:	66 0f 6c c9          	punpcklqdq %xmm1,%xmm1
    f22e:	0f 11 42 20          	movups %xmm0,0x20(%rdx)
    f232:	44 85 c0             	test   %r8d,%eax
    f235:	0f 84 2d 04 00 00    	je     f668 <dlfree+0x728>
    f23b:	89 c8                	mov    %ecx,%eax
    f23d:	49 89 f0             	mov    %rsi,%r8
    f240:	48 8b bc c3 58 02 00 	mov    0x258(%rbx,%rax,8),%rdi
    f247:	00 
    f248:	83 f9 1f             	cmp    $0x1f,%ecx
    f24b:	74 31                	je     f27e <dlfree+0x33e>
    f24d:	89 c8                	mov    %ecx,%eax
    f24f:	b9 39 00 00 00       	mov    $0x39,%ecx
    f254:	d1 e8                	shr    %eax
    f256:	29 c1                	sub    %eax,%ecx
    f258:	49 d3 e0             	shl    %cl,%r8
    f25b:	eb 21                	jmp    f27e <dlfree+0x33e>
    f25d:	0f 1f 00             	nopl   (%rax)
    f260:	4c 89 c0             	mov    %r8,%rax
    f263:	4d 01 c0             	add    %r8,%r8
    f266:	48 c1 e8 3f          	shr    $0x3f,%rax
    f26a:	48 83 c0 04          	add    $0x4,%rax
    f26e:	48 8b 0c c7          	mov    (%rdi,%rax,8),%rcx
    f272:	48 85 c9             	test   %rcx,%rcx
    f275:	0f 84 15 04 00 00    	je     f690 <dlfree+0x750>
    f27b:	48 89 cf             	mov    %rcx,%rdi
    f27e:	48 8b 47 08          	mov    0x8(%rdi),%rax
    f282:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    f286:	48 39 f0             	cmp    %rsi,%rax
    f289:	75 d5                	jne    f260 <dlfree+0x320>
    f28b:	48 8b 47 10          	mov    0x10(%rdi),%rax
    f28f:	66 48 0f 6e d7       	movq   %rdi,%xmm2
    f294:	66 48 0f 6e c0       	movq   %rax,%xmm0
    f299:	66 0f 6c c2          	punpcklqdq %xmm2,%xmm0
    f29d:	4c 39 cf             	cmp    %r9,%rdi
    f2a0:	0f 82 62 ff ff ff    	jb     f208 <dlfree+0x2c8>
    f2a6:	4c 39 c8             	cmp    %r9,%rax
    f2a9:	0f 82 59 ff ff ff    	jb     f208 <dlfree+0x2c8>
    f2af:	48 89 50 18          	mov    %rdx,0x18(%rax)
    f2b3:	48 89 57 10          	mov    %rdx,0x10(%rdi)
    f2b7:	48 c7 42 30 00 00 00 	movq   $0x0,0x30(%rdx)
    f2be:	00 
    f2bf:	0f 11 42 10          	movups %xmm0,0x10(%rdx)
    f2c3:	48 83 6b 38 01       	subq   $0x1,0x38(%rbx)
    f2c8:	0f 85 72 fd ff ff    	jne    f040 <dlfree+0x100>
    f2ce:	48 8b 83 88 03 00 00 	mov    0x388(%rbx),%rax
    f2d5:	48 85 c0             	test   %rax,%rax
    f2d8:	74 0f                	je     f2e9 <dlfree+0x3a9>
    f2da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    f2e0:	48 8b 40 10          	mov    0x10(%rax),%rax
    f2e4:	48 85 c0             	test   %rax,%rax
    f2e7:	75 f7                	jne    f2e0 <dlfree+0x3a0>
    f2e9:	48 c7 43 38 ff ff ff 	movq   $0xffffffffffffffff,0x38(%rbx)
    f2f0:	ff 
    f2f1:	e9 4a fd ff ff       	jmp    f040 <dlfree+0x100>
    f2f6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    f2fd:	00 00 00 
    f300:	4c 8b 42 18          	mov    0x18(%rdx),%r8
    f304:	4c 8b 5a 30          	mov    0x30(%rdx),%r11
    f308:	49 39 d0             	cmp    %rdx,%r8
    f30b:	0f 84 bf 01 00 00    	je     f4d0 <dlfree+0x590>
    f311:	48 8b 42 10          	mov    0x10(%rdx),%rax
    f315:	4c 39 c8             	cmp    %r9,%rax
    f318:	0f 82 ea fe ff ff    	jb     f208 <dlfree+0x2c8>
    f31e:	48 39 50 18          	cmp    %rdx,0x18(%rax)
    f322:	0f 85 e0 fe ff ff    	jne    f208 <dlfree+0x2c8>
    f328:	49 39 50 10          	cmp    %rdx,0x10(%r8)
    f32c:	0f 85 d6 fe ff ff    	jne    f208 <dlfree+0x2c8>
    f332:	4c 89 40 18          	mov    %r8,0x18(%rax)
    f336:	49 89 40 10          	mov    %rax,0x10(%r8)
    f33a:	4d 85 db             	test   %r11,%r11
    f33d:	0f 84 7f fc ff ff    	je     efc2 <dlfree+0x82>
    f343:	8b 42 38             	mov    0x38(%rdx),%eax
    f346:	48 89 c1             	mov    %rax,%rcx
    f349:	4c 8d 50 4a          	lea    0x4a(%rax),%r10
    f34d:	48 39 94 c3 58 02 00 	cmp    %rdx,0x258(%rbx,%rax,8)
    f354:	00 
    f355:	0f 84 c8 04 00 00    	je     f823 <dlfree+0x8e3>
    f35b:	4d 39 cb             	cmp    %r9,%r11
    f35e:	0f 82 a4 fe ff ff    	jb     f208 <dlfree+0x2c8>
    f364:	49 39 53 20          	cmp    %rdx,0x20(%r11)
    f368:	0f 84 4a 05 00 00    	je     f8b8 <dlfree+0x978>
    f36e:	4d 89 43 28          	mov    %r8,0x28(%r11)
    f372:	4d 85 c0             	test   %r8,%r8
    f375:	0f 84 47 fc ff ff    	je     efc2 <dlfree+0x82>
    f37b:	4d 39 c8             	cmp    %r9,%r8
    f37e:	0f 82 84 fe ff ff    	jb     f208 <dlfree+0x2c8>
    f384:	48 8b 42 20          	mov    0x20(%rdx),%rax
    f388:	4d 89 58 30          	mov    %r11,0x30(%r8)
    f38c:	48 85 c0             	test   %rax,%rax
    f38f:	74 11                	je     f3a2 <dlfree+0x462>
    f391:	4c 39 c8             	cmp    %r9,%rax
    f394:	0f 82 6e fe ff ff    	jb     f208 <dlfree+0x2c8>
    f39a:	49 89 40 20          	mov    %rax,0x20(%r8)
    f39e:	4c 89 40 30          	mov    %r8,0x30(%rax)
    f3a2:	48 8b 42 28          	mov    0x28(%rdx),%rax
    f3a6:	48 85 c0             	test   %rax,%rax
    f3a9:	0f 84 13 fc ff ff    	je     efc2 <dlfree+0x82>
    f3af:	4c 39 c8             	cmp    %r9,%rax
    f3b2:	0f 82 50 fe ff ff    	jb     f208 <dlfree+0x2c8>
    f3b8:	49 89 40 28          	mov    %rax,0x28(%r8)
    f3bc:	4c 89 40 30          	mov    %r8,0x30(%rax)
    f3c0:	e9 fd fb ff ff       	jmp    efc2 <dlfree+0x82>
    f3c5:	0f 1f 00             	nopl   (%rax)
    f3c8:	4c 8b 47 18          	mov    0x18(%rdi),%r8
    f3cc:	48 8b 6f 30          	mov    0x30(%rdi),%rbp
    f3d0:	49 39 f8             	cmp    %rdi,%r8
    f3d3:	0f 84 7f 01 00 00    	je     f558 <dlfree+0x618>
    f3d9:	48 8b 47 10          	mov    0x10(%rdi),%rax
    f3dd:	4c 39 c8             	cmp    %r9,%rax
    f3e0:	0f 82 22 fe ff ff    	jb     f208 <dlfree+0x2c8>
    f3e6:	48 39 78 18          	cmp    %rdi,0x18(%rax)
    f3ea:	0f 85 18 fe ff ff    	jne    f208 <dlfree+0x2c8>
    f3f0:	49 39 78 10          	cmp    %rdi,0x10(%r8)
    f3f4:	0f 85 0e fe ff ff    	jne    f208 <dlfree+0x2c8>
    f3fa:	4c 89 40 18          	mov    %r8,0x18(%rax)
    f3fe:	49 89 40 10          	mov    %rax,0x10(%r8)
    f402:	48 85 ed             	test   %rbp,%rbp
    f405:	0f 84 8c fd ff ff    	je     f197 <dlfree+0x257>
    f40b:	8b 47 38             	mov    0x38(%rdi),%eax
    f40e:	48 89 c1             	mov    %rax,%rcx
    f411:	4c 8d 50 4a          	lea    0x4a(%rax),%r10
    f415:	48 39 bc c3 58 02 00 	cmp    %rdi,0x258(%rbx,%rax,8)
    f41c:	00 
    f41d:	0f 84 1d 04 00 00    	je     f840 <dlfree+0x900>
    f423:	4c 39 cd             	cmp    %r9,%rbp
    f426:	0f 82 dc fd ff ff    	jb     f208 <dlfree+0x2c8>
    f42c:	48 39 7d 20          	cmp    %rdi,0x20(%rbp)
    f430:	0f 84 8b 04 00 00    	je     f8c1 <dlfree+0x981>
    f436:	4c 89 45 28          	mov    %r8,0x28(%rbp)
    f43a:	4d 85 c0             	test   %r8,%r8
    f43d:	0f 84 54 fd ff ff    	je     f197 <dlfree+0x257>
    f443:	4d 39 c8             	cmp    %r9,%r8
    f446:	0f 82 bc fd ff ff    	jb     f208 <dlfree+0x2c8>
    f44c:	48 8b 47 20          	mov    0x20(%rdi),%rax
    f450:	49 89 68 30          	mov    %rbp,0x30(%r8)
    f454:	48 85 c0             	test   %rax,%rax
    f457:	74 11                	je     f46a <dlfree+0x52a>
    f459:	4c 39 c8             	cmp    %r9,%rax
    f45c:	0f 82 a6 fd ff ff    	jb     f208 <dlfree+0x2c8>
    f462:	49 89 40 20          	mov    %rax,0x20(%r8)
    f466:	4c 89 40 30          	mov    %r8,0x30(%rax)
    f46a:	48 8b 47 28          	mov    0x28(%rdi),%rax
    f46e:	48 85 c0             	test   %rax,%rax
    f471:	0f 84 20 fd ff ff    	je     f197 <dlfree+0x257>
    f477:	4c 39 c8             	cmp    %r9,%rax
    f47a:	0f 82 88 fd ff ff    	jb     f208 <dlfree+0x2c8>
    f480:	49 89 40 28          	mov    %rax,0x28(%r8)
    f484:	4c 89 40 30          	mov    %r8,0x30(%rax)
    f488:	e9 0a fd ff ff       	jmp    f197 <dlfree+0x257>
    f48d:	0f 1f 00             	nopl   (%rax)
    f490:	0f bd c1             	bsr    %ecx,%eax
    f493:	b9 26 00 00 00       	mov    $0x26,%ecx
    f498:	48 89 f7             	mov    %rsi,%rdi
    f49b:	83 f0 1f             	xor    $0x1f,%eax
    f49e:	29 c1                	sub    %eax,%ecx
    f4a0:	48 d3 ef             	shr    %cl,%rdi
    f4a3:	48 89 f9             	mov    %rdi,%rcx
    f4a6:	bf 1f 00 00 00       	mov    $0x1f,%edi
    f4ab:	29 c7                	sub    %eax,%edi
    f4ad:	83 e1 01             	and    $0x1,%ecx
    f4b0:	b8 01 00 00 00       	mov    $0x1,%eax
    f4b5:	8d 0c 79             	lea    (%rcx,%rdi,2),%ecx
    f4b8:	8d 79 4b             	lea    0x4b(%rcx),%edi
    f4bb:	d3 e0                	shl    %cl,%eax
    f4bd:	48 c1 e7 03          	shl    $0x3,%rdi
    f4c1:	e9 54 fd ff ff       	jmp    f21a <dlfree+0x2da>
    f4c6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    f4cd:	00 00 00 
    f4d0:	48 8b 42 28          	mov    0x28(%rdx),%rax
    f4d4:	48 8d 4a 28          	lea    0x28(%rdx),%rcx
    f4d8:	48 85 c0             	test   %rax,%rax
    f4db:	0f 84 af 03 00 00    	je     f890 <dlfree+0x950>
    f4e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f4e8:	49 89 ca             	mov    %rcx,%r10
    f4eb:	49 89 c0             	mov    %rax,%r8
    f4ee:	48 8d 48 28          	lea    0x28(%rax),%rcx
    f4f2:	48 8b 40 28          	mov    0x28(%rax),%rax
    f4f6:	48 85 c0             	test   %rax,%rax
    f4f9:	75 ed                	jne    f4e8 <dlfree+0x5a8>
    f4fb:	49 8b 40 20          	mov    0x20(%r8),%rax
    f4ff:	49 8d 48 20          	lea    0x20(%r8),%rcx
    f503:	48 85 c0             	test   %rax,%rax
    f506:	75 e0                	jne    f4e8 <dlfree+0x5a8>
    f508:	4d 39 ca             	cmp    %r9,%r10
    f50b:	0f 82 f7 fc ff ff    	jb     f208 <dlfree+0x2c8>
    f511:	49 c7 02 00 00 00 00 	movq   $0x0,(%r10)
    f518:	4d 85 db             	test   %r11,%r11
    f51b:	0f 84 a1 fa ff ff    	je     efc2 <dlfree+0x82>
    f521:	8b 42 38             	mov    0x38(%rdx),%eax
    f524:	48 8d 48 4a          	lea    0x4a(%rax),%rcx
    f528:	48 39 94 c3 58 02 00 	cmp    %rdx,0x258(%rbx,%rax,8)
    f52f:	00 
    f530:	0f 84 a2 03 00 00    	je     f8d8 <dlfree+0x998>
    f536:	4d 39 cb             	cmp    %r9,%r11
    f539:	0f 82 c9 fc ff ff    	jb     f208 <dlfree+0x2c8>
    f53f:	49 39 53 20          	cmp    %rdx,0x20(%r11)
    f543:	0f 84 ac 03 00 00    	je     f8f5 <dlfree+0x9b5>
    f549:	4d 89 43 28          	mov    %r8,0x28(%r11)
    f54d:	e9 29 fe ff ff       	jmp    f37b <dlfree+0x43b>
    f552:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    f558:	48 8b 47 28          	mov    0x28(%rdi),%rax
    f55c:	48 8d 4f 28          	lea    0x28(%rdi),%rcx
    f560:	48 85 c0             	test   %rax,%rax
    f563:	0f 84 39 03 00 00    	je     f8a2 <dlfree+0x962>
    f569:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f570:	49 89 ca             	mov    %rcx,%r10
    f573:	49 89 c0             	mov    %rax,%r8
    f576:	48 8d 48 28          	lea    0x28(%rax),%rcx
    f57a:	48 8b 40 28          	mov    0x28(%rax),%rax
    f57e:	48 85 c0             	test   %rax,%rax
    f581:	75 ed                	jne    f570 <dlfree+0x630>
    f583:	49 8b 40 20          	mov    0x20(%r8),%rax
    f587:	49 8d 48 20          	lea    0x20(%r8),%rcx
    f58b:	48 85 c0             	test   %rax,%rax
    f58e:	75 e0                	jne    f570 <dlfree+0x630>
    f590:	4d 39 ca             	cmp    %r9,%r10
    f593:	0f 82 6f fc ff ff    	jb     f208 <dlfree+0x2c8>
    f599:	49 c7 02 00 00 00 00 	movq   $0x0,(%r10)
    f5a0:	48 85 ed             	test   %rbp,%rbp
    f5a3:	0f 84 ee fb ff ff    	je     f197 <dlfree+0x257>
    f5a9:	8b 47 38             	mov    0x38(%rdi),%eax
    f5ac:	48 8d 48 4a          	lea    0x4a(%rax),%rcx
    f5b0:	48 39 bc c3 58 02 00 	cmp    %rdi,0x258(%rbx,%rax,8)
    f5b7:	00 
    f5b8:	0f 84 24 03 00 00    	je     f8e2 <dlfree+0x9a2>
    f5be:	4c 39 cd             	cmp    %r9,%rbp
    f5c1:	0f 82 41 fc ff ff    	jb     f208 <dlfree+0x2c8>
    f5c7:	48 39 7d 20          	cmp    %rdi,0x20(%rbp)
    f5cb:	0f 84 1b 03 00 00    	je     f8ec <dlfree+0x9ac>
    f5d1:	4c 89 45 28          	mov    %r8,0x28(%rbp)
    f5d5:	e9 69 fe ff ff       	jmp    f443 <dlfree+0x503>
    f5da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    f5e0:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    f5e5:	d3 c0                	rol    %cl,%eax
    f5e7:	21 03                	and    %eax,(%rbx)
    f5e9:	e9 d4 f9 ff ff       	jmp    efc2 <dlfree+0x82>
    f5ee:	4c 39 c8             	cmp    %r9,%rax
    f5f1:	0f 82 11 fc ff ff    	jb     f208 <dlfree+0x2c8>
    f5f7:	48 39 78 18          	cmp    %rdi,0x18(%rax)
    f5fb:	0f 85 07 fc ff ff    	jne    f208 <dlfree+0x2c8>
    f601:	4c 39 c0             	cmp    %r8,%rax
    f604:	0f 84 f6 01 00 00    	je     f800 <dlfree+0x8c0>
    f60a:	4d 39 c2             	cmp    %r8,%r10
    f60d:	0f 84 7c fb ff ff    	je     f18f <dlfree+0x24f>
    f613:	e9 6c fb ff ff       	jmp    f184 <dlfree+0x244>
    f618:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    f61f:	00 
    f620:	48 8b 47 08          	mov    0x8(%rdi),%rax
    f624:	48 89 c1             	mov    %rax,%rcx
    f627:	48 f7 d1             	not    %rcx
    f62a:	83 e1 03             	and    $0x3,%ecx
    f62d:	0f 85 8f f9 ff ff    	jne    efc2 <dlfree+0x82>
    f633:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    f637:	48 89 73 08          	mov    %rsi,0x8(%rbx)
    f63b:	48 89 47 08          	mov    %rax,0x8(%rdi)
    f63f:	48 89 f0             	mov    %rsi,%rax
    f642:	48 83 c8 01          	or     $0x1,%rax
    f646:	48 89 42 08          	mov    %rax,0x8(%rdx)
    f64a:	48 89 37             	mov    %rsi,(%rdi)
    f64d:	e9 ee f9 ff ff       	jmp    f040 <dlfree+0x100>
    f652:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    f658:	09 c7                	or     %eax,%edi
    f65a:	48 89 f0             	mov    %rsi,%rax
    f65d:	89 3b                	mov    %edi,(%rbx)
    f65f:	e9 cc f9 ff ff       	jmp    f030 <dlfree+0xf0>
    f664:	0f 1f 40 00          	nopl   0x0(%rax)
    f668:	44 09 c0             	or     %r8d,%eax
    f66b:	48 01 df             	add    %rbx,%rdi
    f66e:	89 43 04             	mov    %eax,0x4(%rbx)
    f671:	48 89 94 cb 58 02 00 	mov    %rdx,0x258(%rbx,%rcx,8)
    f678:	00 
    f679:	48 89 7a 30          	mov    %rdi,0x30(%rdx)
    f67d:	0f 11 4a 10          	movups %xmm1,0x10(%rdx)
    f681:	e9 3d fc ff ff       	jmp    f2c3 <dlfree+0x383>
    f686:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    f68d:	00 00 00 
    f690:	48 8d 0c c7          	lea    (%rdi,%rax,8),%rcx
    f694:	4c 39 c9             	cmp    %r9,%rcx
    f697:	0f 82 6b fb ff ff    	jb     f208 <dlfree+0x2c8>
    f69d:	48 89 14 c7          	mov    %rdx,(%rdi,%rax,8)
    f6a1:	48 89 7a 30          	mov    %rdi,0x30(%rdx)
    f6a5:	0f 11 4a 10          	movups %xmm1,0x10(%rdx)
    f6a9:	e9 15 fc ff ff       	jmp    f2c3 <dlfree+0x383>
    f6ae:	66 90                	xchg   %ax,%ax
    f6b0:	48 03 73 10          	add    0x10(%rbx),%rsi
    f6b4:	48 89 53 28          	mov    %rdx,0x28(%rbx)
    f6b8:	48 89 f0             	mov    %rsi,%rax
    f6bb:	48 89 73 10          	mov    %rsi,0x10(%rbx)
    f6bf:	48 83 c8 01          	or     $0x1,%rax
    f6c3:	48 89 42 08          	mov    %rax,0x8(%rdx)
    f6c7:	4c 39 da             	cmp    %r11,%rdx
    f6ca:	0f 84 3e 01 00 00    	je     f80e <dlfree+0x8ce>
    f6d0:	48 39 73 30          	cmp    %rsi,0x30(%rbx)
    f6d4:	0f 83 66 f9 ff ff    	jae    f040 <dlfree+0x100>
    f6da:	48 83 3d 1e b7 01 00 	cmpq   $0x0,0x1b71e(%rip)        # 2ae00 <mparams>
    f6e1:	00 
    f6e2:	0f 84 e2 01 00 00    	je     f8ca <dlfree+0x98a>
    f6e8:	48 85 d2             	test   %rdx,%rdx
    f6eb:	0f 84 4f f9 ff ff    	je     f040 <dlfree+0x100>
    f6f1:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
    f6f5:	48 83 f9 50          	cmp    $0x50,%rcx
    f6f9:	0f 86 a7 00 00 00    	jbe    f7a6 <dlfree+0x866>
    f6ff:	48 8b 35 0a b7 01 00 	mov    0x1b70a(%rip),%rsi        # 2ae10 <mparams+0x10>
    f706:	48 8d ab 78 03 00 00 	lea    0x378(%rbx),%rbp
    f70d:	0f 1f 00             	nopl   (%rax)
    f710:	48 8b 45 00          	mov    0x0(%rbp),%rax
    f714:	48 39 c2             	cmp    %rax,%rdx
    f717:	72 09                	jb     f722 <dlfree+0x7e2>
    f719:	48 03 45 08          	add    0x8(%rbp),%rax
    f71d:	48 39 c2             	cmp    %rax,%rdx
    f720:	72 09                	jb     f72b <dlfree+0x7eb>
    f722:	48 8b 6d 10          	mov    0x10(%rbp),%rbp
    f726:	48 85 ed             	test   %rbp,%rbp
    f729:	75 e5                	jne    f710 <dlfree+0x7d0>
    f72b:	f6 45 18 08          	testb  $0x8,0x18(%rbp)
    f72f:	75 75                	jne    f7a6 <dlfree+0x866>
    f731:	48 8d 44 31 af       	lea    -0x51(%rcx,%rsi,1),%rax
    f736:	31 d2                	xor    %edx,%edx
    f738:	48 f7 f6             	div    %rsi
    f73b:	48 83 e8 01          	sub    $0x1,%rax
    f73f:	48 0f af c6          	imul   %rsi,%rax
    f743:	49 89 c4             	mov    %rax,%r12
    f746:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
    f74d:	ff ff 7f 
    f750:	4c 39 e0             	cmp    %r12,%rax
    f753:	73 0d                	jae    f762 <dlfree+0x822>
    f755:	49 bc 00 00 00 00 00 	movabs $0x8000000000000000,%r12
    f75c:	00 00 80 
    f75f:	49 29 f4             	sub    %rsi,%r12
    f762:	b8 01 00 00 00       	mov    $0x1,%eax
    f767:	87 05 c3 b6 01 00    	xchg   %eax,0x1b6c3(%rip)        # 2ae30 <malloc_global_mutex>
    f76d:	48 8d 15 bc b6 01 00 	lea    0x1b6bc(%rip),%rdx        # 2ae30 <malloc_global_mutex>
    f774:	b9 01 00 00 00       	mov    $0x1,%ecx
    f779:	85 c0                	test   %eax,%eax
    f77b:	75 40                	jne    f7bd <dlfree+0x87d>
    f77d:	31 ff                	xor    %edi,%edi
    f77f:	e8 ec ce ff ff       	call   c670 <sbrk>
    f784:	49 89 c5             	mov    %rax,%r13
    f787:	48 8b 45 08          	mov    0x8(%rbp),%rax
    f78b:	48 03 45 00          	add    0x0(%rbp),%rax
    f78f:	49 39 c5             	cmp    %rax,%r13
    f792:	0f 84 e5 01 00 00    	je     f97d <dlfree+0xa3d>
    f798:	c7 05 8e b6 01 00 00 	movl   $0x0,0x1b68e(%rip)        # 2ae30 <malloc_global_mutex>
    f79f:	00 00 00 
    f7a2:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
    f7a6:	48 39 4b 30          	cmp    %rcx,0x30(%rbx)
    f7aa:	0f 83 90 f8 ff ff    	jae    f040 <dlfree+0x100>
    f7b0:	48 c7 43 30 ff ff ff 	movq   $0xffffffffffffffff,0x30(%rbx)
    f7b7:	ff 
    f7b8:	e9 83 f8 ff ff       	jmp    f040 <dlfree+0x100>
    f7bd:	8b 02                	mov    (%rdx),%eax
    f7bf:	85 c0                	test   %eax,%eax
    f7c1:	75 fa                	jne    f7bd <dlfree+0x87d>
    f7c3:	89 c8                	mov    %ecx,%eax
    f7c5:	87 05 65 b6 01 00    	xchg   %eax,0x1b665(%rip)        # 2ae30 <malloc_global_mutex>
    f7cb:	85 c0                	test   %eax,%eax
    f7cd:	75 ee                	jne    f7bd <dlfree+0x87d>
    f7cf:	eb ac                	jmp    f77d <dlfree+0x83d>
    f7d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f7d8:	48 03 73 08          	add    0x8(%rbx),%rsi
    f7dc:	48 89 53 20          	mov    %rdx,0x20(%rbx)
    f7e0:	48 89 f0             	mov    %rsi,%rax
    f7e3:	48 89 73 08          	mov    %rsi,0x8(%rbx)
    f7e7:	48 83 c8 01          	or     $0x1,%rax
    f7eb:	48 89 42 08          	mov    %rax,0x8(%rdx)
    f7ef:	48 89 34 32          	mov    %rsi,(%rdx,%rsi,1)
    f7f3:	e9 48 f8 ff ff       	jmp    f040 <dlfree+0x100>
    f7f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    f7ff:	00 
    f800:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    f805:	d3 c0                	rol    %cl,%eax
    f807:	21 03                	and    %eax,(%rbx)
    f809:	e9 89 f9 ff ff       	jmp    f197 <dlfree+0x257>
    f80e:	48 c7 43 20 00 00 00 	movq   $0x0,0x20(%rbx)
    f815:	00 
    f816:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
    f81d:	00 
    f81e:	e9 ad fe ff ff       	jmp    f6d0 <dlfree+0x790>
    f823:	4e 89 44 d3 08       	mov    %r8,0x8(%rbx,%r10,8)
    f828:	4d 85 c0             	test   %r8,%r8
    f82b:	0f 85 4a fb ff ff    	jne    f37b <dlfree+0x43b>
    f831:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    f836:	d3 c0                	rol    %cl,%eax
    f838:	21 43 04             	and    %eax,0x4(%rbx)
    f83b:	e9 82 f7 ff ff       	jmp    efc2 <dlfree+0x82>
    f840:	4e 89 44 d3 08       	mov    %r8,0x8(%rbx,%r10,8)
    f845:	4d 85 c0             	test   %r8,%r8
    f848:	0f 85 f5 fb ff ff    	jne    f443 <dlfree+0x503>
    f84e:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    f853:	d3 c0                	rol    %cl,%eax
    f855:	21 43 04             	and    %eax,0x4(%rbx)
    f858:	e9 3a f9 ff ff       	jmp    f197 <dlfree+0x257>
    f85d:	4c 39 c8             	cmp    %r9,%rax
    f860:	0f 82 a2 f9 ff ff    	jb     f208 <dlfree+0x2c8>
    f866:	48 39 50 18          	cmp    %rdx,0x18(%rax)
    f86a:	0f 85 98 f9 ff ff    	jne    f208 <dlfree+0x2c8>
    f870:	4c 39 c0             	cmp    %r8,%rax
    f873:	0f 84 67 fd ff ff    	je     f5e0 <dlfree+0x6a0>
    f879:	4d 39 c2             	cmp    %r8,%r10
    f87c:	0f 84 49 f8 ff ff    	je     f0cb <dlfree+0x18b>
    f882:	e9 31 f8 ff ff       	jmp    f0b8 <dlfree+0x178>
    f887:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    f88e:	00 00 
    f890:	48 8b 42 20          	mov    0x20(%rdx),%rax
    f894:	48 85 c0             	test   %rax,%rax
    f897:	74 65                	je     f8fe <dlfree+0x9be>
    f899:	48 8d 4a 20          	lea    0x20(%rdx),%rcx
    f89d:	e9 46 fc ff ff       	jmp    f4e8 <dlfree+0x5a8>
    f8a2:	48 8b 47 20          	mov    0x20(%rdi),%rax
    f8a6:	48 85 c0             	test   %rax,%rax
    f8a9:	0f 84 8f 00 00 00    	je     f93e <dlfree+0x9fe>
    f8af:	48 8d 4f 20          	lea    0x20(%rdi),%rcx
    f8b3:	e9 b8 fc ff ff       	jmp    f570 <dlfree+0x630>
    f8b8:	4d 89 43 20          	mov    %r8,0x20(%r11)
    f8bc:	e9 b1 fa ff ff       	jmp    f372 <dlfree+0x432>
    f8c1:	4c 89 45 20          	mov    %r8,0x20(%rbp)
    f8c5:	e9 70 fb ff ff       	jmp    f43a <dlfree+0x4fa>
    f8ca:	e8 91 d7 ff ff       	call   d060 <init_mparams.isra.0>
    f8cf:	48 8b 53 28          	mov    0x28(%rbx),%rdx
    f8d3:	e9 10 fe ff ff       	jmp    f6e8 <dlfree+0x7a8>
    f8d8:	4c 89 44 cb 08       	mov    %r8,0x8(%rbx,%rcx,8)
    f8dd:	e9 99 fa ff ff       	jmp    f37b <dlfree+0x43b>
    f8e2:	4c 89 44 cb 08       	mov    %r8,0x8(%rbx,%rcx,8)
    f8e7:	e9 57 fb ff ff       	jmp    f443 <dlfree+0x503>
    f8ec:	4c 89 45 20          	mov    %r8,0x20(%rbp)
    f8f0:	e9 4e fb ff ff       	jmp    f443 <dlfree+0x503>
    f8f5:	4d 89 43 20          	mov    %r8,0x20(%r11)
    f8f9:	e9 7d fa ff ff       	jmp    f37b <dlfree+0x43b>
    f8fe:	4d 85 db             	test   %r11,%r11
    f901:	0f 84 bb f6 ff ff    	je     efc2 <dlfree+0x82>
    f907:	8b 42 38             	mov    0x38(%rdx),%eax
    f90a:	48 89 c1             	mov    %rax,%rcx
    f90d:	4c 8d 40 4a          	lea    0x4a(%rax),%r8
    f911:	48 39 94 c3 58 02 00 	cmp    %rdx,0x258(%rbx,%rax,8)
    f918:	00 
    f919:	0f 84 fd 00 00 00    	je     fa1c <dlfree+0xadc>
    f91f:	4d 39 cb             	cmp    %r9,%r11
    f922:	0f 82 e0 f8 ff ff    	jb     f208 <dlfree+0x2c8>
    f928:	49 3b 53 20          	cmp    0x20(%r11),%rdx
    f92c:	0f 84 02 01 00 00    	je     fa34 <dlfree+0xaf4>
    f932:	45 31 c0             	xor    %r8d,%r8d
    f935:	4d 89 43 28          	mov    %r8,0x28(%r11)
    f939:	e9 84 f6 ff ff       	jmp    efc2 <dlfree+0x82>
    f93e:	48 85 ed             	test   %rbp,%rbp
    f941:	0f 84 50 f8 ff ff    	je     f197 <dlfree+0x257>
    f947:	8b 47 38             	mov    0x38(%rdi),%eax
    f94a:	48 89 c1             	mov    %rax,%rcx
    f94d:	4c 8d 40 4a          	lea    0x4a(%rax),%r8
    f951:	48 3b bc c3 58 02 00 	cmp    0x258(%rbx,%rax,8),%rdi
    f958:	00 
    f959:	0f 84 b1 00 00 00    	je     fa10 <dlfree+0xad0>
    f95f:	4c 39 cd             	cmp    %r9,%rbp
    f962:	0f 82 a0 f8 ff ff    	jb     f208 <dlfree+0x2c8>
    f968:	48 39 7d 20          	cmp    %rdi,0x20(%rbp)
    f96c:	0f 84 b7 00 00 00    	je     fa29 <dlfree+0xae9>
    f972:	31 c0                	xor    %eax,%eax
    f974:	48 89 45 28          	mov    %rax,0x28(%rbp)
    f978:	e9 1a f8 ff ff       	jmp    f197 <dlfree+0x257>
    f97d:	4c 89 e7             	mov    %r12,%rdi
    f980:	48 f7 df             	neg    %rdi
    f983:	e8 e8 cc ff ff       	call   c670 <sbrk>
    f988:	31 ff                	xor    %edi,%edi
    f98a:	49 89 c4             	mov    %rax,%r12
    f98d:	e8 de cc ff ff       	call   c670 <sbrk>
    f992:	49 83 c4 01          	add    $0x1,%r12
    f996:	0f 84 fc fd ff ff    	je     f798 <dlfree+0x858>
    f99c:	4c 39 e8             	cmp    %r13,%rax
    f99f:	0f 83 f3 fd ff ff    	jae    f798 <dlfree+0x858>
    f9a5:	49 29 c5             	sub    %rax,%r13
    f9a8:	c7 05 7e b4 01 00 00 	movl   $0x0,0x1b47e(%rip)        # 2ae30 <malloc_global_mutex>
    f9af:	00 00 00 
    f9b2:	48 8b 43 28          	mov    0x28(%rbx),%rax
    f9b6:	48 8b 53 10          	mov    0x10(%rbx),%rdx
    f9ba:	4c 29 6d 08          	sub    %r13,0x8(%rbp)
    f9be:	48 89 c6             	mov    %rax,%rsi
    f9c1:	4c 29 ea             	sub    %r13,%rdx
    f9c4:	48 8d 48 10          	lea    0x10(%rax),%rcx
    f9c8:	4c 29 ab 58 03 00 00 	sub    %r13,0x358(%rbx)
    f9cf:	83 e6 0f             	and    $0xf,%esi
    f9d2:	74 09                	je     f9dd <dlfree+0xa9d>
    f9d4:	48 f7 d9             	neg    %rcx
    f9d7:	48 89 ce             	mov    %rcx,%rsi
    f9da:	83 e6 0f             	and    $0xf,%esi
    f9dd:	48 89 d1             	mov    %rdx,%rcx
    f9e0:	48 8d 3c 30          	lea    (%rax,%rsi,1),%rdi
    f9e4:	48 29 f1             	sub    %rsi,%rcx
    f9e7:	48 89 7b 28          	mov    %rdi,0x28(%rbx)
    f9eb:	48 89 4b 10          	mov    %rcx,0x10(%rbx)
    f9ef:	48 83 c9 01          	or     $0x1,%rcx
    f9f3:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
    f9f7:	48 c7 44 10 08 50 00 	movq   $0x50,0x8(%rax,%rdx,1)
    f9fe:	00 00 
    fa00:	48 8b 05 19 b4 01 00 	mov    0x1b419(%rip),%rax        # 2ae20 <mparams+0x20>
    fa07:	48 89 43 30          	mov    %rax,0x30(%rbx)
    fa0b:	e9 30 f6 ff ff       	jmp    f040 <dlfree+0x100>
    fa10:	31 ff                	xor    %edi,%edi
    fa12:	4a 89 7c c3 08       	mov    %rdi,0x8(%rbx,%r8,8)
    fa17:	e9 32 fe ff ff       	jmp    f84e <dlfree+0x90e>
    fa1c:	45 31 db             	xor    %r11d,%r11d
    fa1f:	4e 89 5c c3 08       	mov    %r11,0x8(%rbx,%r8,8)
    fa24:	e9 08 fe ff ff       	jmp    f831 <dlfree+0x8f1>
    fa29:	31 c9                	xor    %ecx,%ecx
    fa2b:	48 89 4d 20          	mov    %rcx,0x20(%rbp)
    fa2f:	e9 63 f7 ff ff       	jmp    f197 <dlfree+0x257>
    fa34:	45 31 d2             	xor    %r10d,%r10d
    fa37:	4d 89 53 20          	mov    %r10,0x20(%r11)
    fa3b:	e9 82 f5 ff ff       	jmp    efc2 <dlfree+0x82>

000000000000fa40 <calloc>:
    fa40:	f3 0f 1e fa          	endbr64 
    fa44:	55                   	push   %rbp
    fa45:	53                   	push   %rbx
    fa46:	48 89 fb             	mov    %rdi,%rbx
    fa49:	48 83 ec 08          	sub    $0x8,%rsp
    fa4d:	48 85 ff             	test   %rdi,%rdi
    fa50:	74 1b                	je     fa6d <calloc+0x2d>
    fa52:	48 89 f8             	mov    %rdi,%rax
    fa55:	48 f7 e6             	mul    %rsi
    fa58:	0f 90 c2             	seto   %dl
    fa5b:	48 09 fe             	or     %rdi,%rsi
    fa5e:	48 89 c3             	mov    %rax,%rbx
    fa61:	0f b6 d2             	movzbl %dl,%edx
    fa64:	48 81 fe ff ff 00 00 	cmp    $0xffff,%rsi
    fa6b:	77 2b                	ja     fa98 <calloc+0x58>
    fa6d:	48 89 df             	mov    %rbx,%rdi
    fa70:	e8 db d6 ff ff       	call   d150 <dlmalloc>
    fa75:	48 89 c5             	mov    %rax,%rbp
    fa78:	48 85 c0             	test   %rax,%rax
    fa7b:	74 0d                	je     fa8a <calloc+0x4a>
    fa7d:	48 89 da             	mov    %rbx,%rdx
    fa80:	31 f6                	xor    %esi,%esi
    fa82:	48 89 c7             	mov    %rax,%rdi
    fa85:	e8 a6 0e 00 00       	call   10930 <memset>
    fa8a:	48 83 c4 08          	add    $0x8,%rsp
    fa8e:	48 89 e8             	mov    %rbp,%rax
    fa91:	5b                   	pop    %rbx
    fa92:	5d                   	pop    %rbp
    fa93:	c3                   	ret    
    fa94:	0f 1f 40 00          	nopl   0x0(%rax)
    fa98:	48 85 d2             	test   %rdx,%rdx
    fa9b:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    faa2:	48 0f 45 d8          	cmovne %rax,%rbx
    faa6:	eb c5                	jmp    fa6d <calloc+0x2d>
    faa8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    faaf:	00 

000000000000fab0 <dlrealloc>:
    fab0:	f3 0f 1e fa          	endbr64 
    fab4:	41 57                	push   %r15
    fab6:	41 56                	push   %r14
    fab8:	41 55                	push   %r13
    faba:	41 54                	push   %r12
    fabc:	55                   	push   %rbp
    fabd:	53                   	push   %rbx
    fabe:	48 89 f3             	mov    %rsi,%rbx
    fac1:	48 83 ec 08          	sub    $0x8,%rsp
    fac5:	48 85 ff             	test   %rdi,%rdi
    fac8:	0f 84 f2 01 00 00    	je     fcc0 <dlrealloc+0x210>
    face:	48 81 fe 7f ff ff ff 	cmp    $0xffffffffffffff7f,%rsi
    fad5:	0f 87 05 02 00 00    	ja     fce0 <dlrealloc+0x230>
    fadb:	48 89 fd             	mov    %rdi,%rbp
    fade:	48 85 f6             	test   %rsi,%rsi
    fae1:	0f 84 11 02 00 00    	je     fcf8 <dlrealloc+0x248>
    fae7:	48 8d 46 1f          	lea    0x1f(%rsi),%rax
    faeb:	ba 20 00 00 00       	mov    $0x20,%edx
    faf0:	4c 8d 6f f0          	lea    -0x10(%rdi),%r13
    faf4:	48 8b 0d 05 b3 01 00 	mov    0x1b305(%rip),%rcx        # 2ae00 <mparams>
    fafb:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
    faff:	48 83 fe 0e          	cmp    $0xe,%rsi
    fb03:	48 8b 77 f8          	mov    -0x8(%rdi),%rsi
    fb07:	48 0f 46 c2          	cmovbe %rdx,%rax
    fb0b:	48 89 f2             	mov    %rsi,%rdx
    fb0e:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    fb12:	49 8d 7c 15 00       	lea    0x0(%r13,%rdx,1),%rdi
    fb17:	4c 8b 27             	mov    (%rdi),%r12
    fb1a:	49 31 cc             	xor    %rcx,%r12
    fb1d:	49 3b 4c 24 40       	cmp    0x40(%r12),%rcx
    fb22:	0f 85 90 01 00 00    	jne    fcb8 <dlrealloc+0x208>
    fb28:	41 f6 84 24 70 03 00 	testb  $0x2,0x370(%r12)
    fb2f:	00 02 
    fb31:	0f 85 89 00 00 00    	jne    fbc0 <dlrealloc+0x110>
    fb37:	4d 8b 44 24 18       	mov    0x18(%r12),%r8
    fb3c:	4d 39 c5             	cmp    %r8,%r13
    fb3f:	0f 82 73 01 00 00    	jb     fcb8 <dlrealloc+0x208>
    fb45:	48 89 f1             	mov    %rsi,%rcx
    fb48:	83 e1 03             	and    $0x3,%ecx
    fb4b:	48 83 f9 01          	cmp    $0x1,%rcx
    fb4f:	0f 84 63 01 00 00    	je     fcb8 <dlrealloc+0x208>
    fb55:	49 39 fd             	cmp    %rdi,%r13
    fb58:	0f 83 5a 01 00 00    	jae    fcb8 <dlrealloc+0x208>
    fb5e:	4c 8b 4f 08          	mov    0x8(%rdi),%r9
    fb62:	41 f6 c1 01          	test   $0x1,%r9b
    fb66:	0f 84 4c 01 00 00    	je     fcb8 <dlrealloc+0x208>
    fb6c:	48 85 c9             	test   %rcx,%rcx
    fb6f:	0f 84 8b 00 00 00    	je     fc00 <dlrealloc+0x150>
    fb75:	48 39 c2             	cmp    %rax,%rdx
    fb78:	0f 82 82 01 00 00    	jb     fd00 <dlrealloc+0x250>
    fb7e:	48 29 c2             	sub    %rax,%rdx
    fb81:	49 89 d6             	mov    %rdx,%r14
    fb84:	48 83 fa 1f          	cmp    $0x1f,%rdx
    fb88:	0f 87 fa 02 00 00    	ja     fe88 <dlrealloc+0x3d8>
    fb8e:	41 8b 8c 24 70 03 00 	mov    0x370(%r12),%ecx
    fb95:	00 
    fb96:	83 e1 02             	and    $0x2,%ecx
    fb99:	0f 85 31 02 00 00    	jne    fdd0 <dlrealloc+0x320>
    fb9f:	4d 85 ed             	test   %r13,%r13
    fba2:	0f 84 94 00 00 00    	je     fc3c <dlrealloc+0x18c>
    fba8:	49 89 ec             	mov    %rbp,%r12
    fbab:	48 83 c4 08          	add    $0x8,%rsp
    fbaf:	4c 89 e0             	mov    %r12,%rax
    fbb2:	5b                   	pop    %rbx
    fbb3:	5d                   	pop    %rbp
    fbb4:	41 5c                	pop    %r12
    fbb6:	41 5d                	pop    %r13
    fbb8:	41 5e                	pop    %r14
    fbba:	41 5f                	pop    %r15
    fbbc:	c3                   	ret    
    fbbd:	0f 1f 00             	nopl   (%rax)
    fbc0:	49 8d 8c 24 74 03 00 	lea    0x374(%r12),%rcx
    fbc7:	00 
    fbc8:	ba 01 00 00 00       	mov    $0x1,%edx
    fbcd:	87 11                	xchg   %edx,(%rcx)
    fbcf:	85 d2                	test   %edx,%edx
    fbd1:	0f 85 b9 00 00 00    	jne    fc90 <dlrealloc+0x1e0>
    fbd7:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    fbdb:	4d 8b 44 24 18       	mov    0x18(%r12),%r8
    fbe0:	48 89 f2             	mov    %rsi,%rdx
    fbe3:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    fbe7:	49 8d 7c 15 00       	lea    0x0(%r13,%rdx,1),%rdi
    fbec:	4d 39 c5             	cmp    %r8,%r13
    fbef:	0f 83 50 ff ff ff    	jae    fb45 <dlrealloc+0x95>
    fbf5:	e9 be 00 00 00       	jmp    fcb8 <dlrealloc+0x208>
    fbfa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    fc00:	41 8b 8c 24 70 03 00 	mov    0x370(%r12),%ecx
    fc07:	00 
    fc08:	89 ce                	mov    %ecx,%esi
    fc0a:	83 e6 02             	and    $0x2,%esi
    fc0d:	48 3d f8 00 00 00    	cmp    $0xf8,%rax
    fc13:	76 1f                	jbe    fc34 <dlrealloc+0x184>
    fc15:	48 8d 78 08          	lea    0x8(%rax),%rdi
    fc19:	48 39 fa             	cmp    %rdi,%rdx
    fc1c:	72 16                	jb     fc34 <dlrealloc+0x184>
    fc1e:	48 29 c2             	sub    %rax,%rdx
    fc21:	48 8b 05 e8 b1 01 00 	mov    0x1b1e8(%rip),%rax        # 2ae10 <mparams+0x10>
    fc28:	48 01 c0             	add    %rax,%rax
    fc2b:	48 39 d0             	cmp    %rdx,%rax
    fc2e:	0f 83 62 ff ff ff    	jae    fb96 <dlrealloc+0xe6>
    fc34:	85 f6                	test   %esi,%esi
    fc36:	0f 85 c4 01 00 00    	jne    fe00 <dlrealloc+0x350>
    fc3c:	48 89 df             	mov    %rbx,%rdi
    fc3f:	e8 0c d5 ff ff       	call   d150 <dlmalloc>
    fc44:	49 89 c4             	mov    %rax,%r12
    fc47:	48 85 c0             	test   %rax,%rax
    fc4a:	0f 84 5b ff ff ff    	je     fbab <dlrealloc+0xfb>
    fc50:	4c 8b 6d f8          	mov    -0x8(%rbp),%r13
    fc54:	48 89 ee             	mov    %rbp,%rsi
    fc57:	48 89 c7             	mov    %rax,%rdi
    fc5a:	49 83 e5 f8          	and    $0xfffffffffffffff8,%r13
    fc5e:	49 83 ed 10          	sub    $0x10,%r13
    fc62:	4c 39 eb             	cmp    %r13,%rbx
    fc65:	49 0f 47 dd          	cmova  %r13,%rbx
    fc69:	48 89 da             	mov    %rbx,%rdx
    fc6c:	e8 7f 0a 00 00       	call   106f0 <memcpy>
    fc71:	48 89 ef             	mov    %rbp,%rdi
    fc74:	4c 89 ea             	mov    %r13,%rdx
    fc77:	31 f6                	xor    %esi,%esi
    fc79:	e8 b2 0c 00 00       	call   10930 <memset>
    fc7e:	48 89 ef             	mov    %rbp,%rdi
    fc81:	e8 ba f2 ff ff       	call   ef40 <dlfree>
    fc86:	e9 20 ff ff ff       	jmp    fbab <dlrealloc+0xfb>
    fc8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    fc90:	be 01 00 00 00       	mov    $0x1,%esi
    fc95:	0f 1f 00             	nopl   (%rax)
    fc98:	41 8b 94 24 74 03 00 	mov    0x374(%r12),%edx
    fc9f:	00 
    fca0:	85 d2                	test   %edx,%edx
    fca2:	75 f4                	jne    fc98 <dlrealloc+0x1e8>
    fca4:	89 f2                	mov    %esi,%edx
    fca6:	87 11                	xchg   %edx,(%rcx)
    fca8:	85 d2                	test   %edx,%edx
    fcaa:	75 ec                	jne    fc98 <dlrealloc+0x1e8>
    fcac:	e9 26 ff ff ff       	jmp    fbd7 <dlrealloc+0x127>
    fcb1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    fcb8:	e8 7a 28 00 00       	call   12537 <abort>
    fcbd:	0f 1f 00             	nopl   (%rax)
    fcc0:	48 83 c4 08          	add    $0x8,%rsp
    fcc4:	48 89 f7             	mov    %rsi,%rdi
    fcc7:	5b                   	pop    %rbx
    fcc8:	5d                   	pop    %rbp
    fcc9:	41 5c                	pop    %r12
    fccb:	41 5d                	pop    %r13
    fccd:	41 5e                	pop    %r14
    fccf:	41 5f                	pop    %r15
    fcd1:	e9 7a d4 ff ff       	jmp    d150 <dlmalloc>
    fcd6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    fcdd:	00 00 00 
    fce0:	e8 6b 12 00 00       	call   10f50 <__errno_location>
    fce5:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
    fceb:	45 31 e4             	xor    %r12d,%r12d
    fcee:	e9 b8 fe ff ff       	jmp    fbab <dlrealloc+0xfb>
    fcf3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    fcf8:	e8 43 f2 ff ff       	call   ef40 <dlfree>
    fcfd:	eb ec                	jmp    fceb <dlrealloc+0x23b>
    fcff:	90                   	nop
    fd00:	49 39 7c 24 28       	cmp    %rdi,0x28(%r12)
    fd05:	0f 84 d5 01 00 00    	je     fee0 <dlrealloc+0x430>
    fd0b:	49 39 7c 24 20       	cmp    %rdi,0x20(%r12)
    fd10:	0f 84 02 01 00 00    	je     fe18 <dlrealloc+0x368>
    fd16:	41 f6 c1 02          	test   $0x2,%r9b
    fd1a:	0f 85 c8 00 00 00    	jne    fde8 <dlrealloc+0x338>
    fd20:	49 83 e1 f8          	and    $0xfffffffffffffff8,%r9
    fd24:	4e 8d 14 0a          	lea    (%rdx,%r9,1),%r10
    fd28:	49 39 c2             	cmp    %rax,%r10
    fd2b:	0f 82 b7 00 00 00    	jb     fde8 <dlrealloc+0x338>
    fd31:	4c 89 d2             	mov    %r10,%rdx
    fd34:	4c 89 c9             	mov    %r9,%rcx
    fd37:	48 29 c2             	sub    %rax,%rdx
    fd3a:	48 c1 e9 03          	shr    $0x3,%rcx
    fd3e:	49 81 f9 f8 00 00 00 	cmp    $0xf8,%r9
    fd45:	0f 87 f2 01 00 00    	ja     ff3d <dlrealloc+0x48d>
    fd4b:	44 8d 74 09 09       	lea    0x9(%rcx,%rcx,1),%r14d
    fd50:	4c 8b 4f 10          	mov    0x10(%rdi),%r9
    fd54:	4c 8b 5f 18          	mov    0x18(%rdi),%r11
    fd58:	4f 8d 34 f4          	lea    (%r12,%r14,8),%r14
    fd5c:	4d 39 f1             	cmp    %r14,%r9
    fd5f:	0f 85 c6 03 00 00    	jne    1012b <dlrealloc+0x67b>
    fd65:	4d 39 cb             	cmp    %r9,%r11
    fd68:	0f 84 7c 03 00 00    	je     100ea <dlrealloc+0x63a>
    fd6e:	4d 39 c3             	cmp    %r8,%r11
    fd71:	0f 82 41 ff ff ff    	jb     fcb8 <dlrealloc+0x208>
    fd77:	49 39 7b 10          	cmp    %rdi,0x10(%r11)
    fd7b:	0f 85 37 ff ff ff    	jne    fcb8 <dlrealloc+0x208>
    fd81:	4d 89 59 18          	mov    %r11,0x18(%r9)
    fd85:	4d 89 4b 10          	mov    %r9,0x10(%r11)
    fd89:	48 8b 3d 70 b0 01 00 	mov    0x1b070(%rip),%rdi        # 2ae00 <mparams>
    fd90:	83 e6 01             	and    $0x1,%esi
    fd93:	4b 8d 4c 15 00       	lea    0x0(%r13,%r10,1),%rcx
    fd98:	4c 31 e7             	xor    %r12,%rdi
    fd9b:	48 83 fa 1f          	cmp    $0x1f,%rdx
    fd9f:	0f 87 88 02 00 00    	ja     1002d <dlrealloc+0x57d>
    fda5:	4c 89 d2             	mov    %r10,%rdx
    fda8:	48 09 f2             	or     %rsi,%rdx
    fdab:	48 83 ca 02          	or     $0x2,%rdx
    fdaf:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
    fdb3:	48 89 39             	mov    %rdi,(%rcx)
    fdb6:	48 83 49 08 01       	orq    $0x1,0x8(%rcx)
    fdbb:	41 8b 8c 24 70 03 00 	mov    0x370(%r12),%ecx
    fdc2:	00 
    fdc3:	e9 ce fd ff ff       	jmp    fb96 <dlrealloc+0xe6>
    fdc8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    fdcf:	00 
    fdd0:	41 c7 84 24 74 03 00 	movl   $0x0,0x374(%r12)
    fdd7:	00 00 00 00 00 
    fddc:	e9 be fd ff ff       	jmp    fb9f <dlrealloc+0xef>
    fde1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    fde8:	41 f6 84 24 70 03 00 	testb  $0x2,0x370(%r12)
    fdef:	00 02 
    fdf1:	0f 84 45 fe ff ff    	je     fc3c <dlrealloc+0x18c>
    fdf7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    fdfe:	00 00 
    fe00:	41 c7 84 24 74 03 00 	movl   $0x0,0x374(%r12)
    fe07:	00 00 00 00 00 
    fe0c:	e9 2b fe ff ff       	jmp    fc3c <dlrealloc+0x18c>
    fe11:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    fe18:	49 03 54 24 08       	add    0x8(%r12),%rdx
    fe1d:	41 8b 8c 24 70 03 00 	mov    0x370(%r12),%ecx
    fe24:	00 
    fe25:	48 39 c2             	cmp    %rax,%rdx
    fe28:	0f 82 01 01 00 00    	jb     ff2f <dlrealloc+0x47f>
    fe2e:	4c 8b 05 cb af 01 00 	mov    0x1afcb(%rip),%r8        # 2ae00 <mparams>
    fe35:	49 89 d1             	mov    %rdx,%r9
    fe38:	49 8d 7c 15 00       	lea    0x0(%r13,%rdx,1),%rdi
    fe3d:	83 e6 01             	and    $0x1,%esi
    fe40:	49 29 c1             	sub    %rax,%r9
    fe43:	4d 31 e0             	xor    %r12,%r8
    fe46:	49 83 f9 1f          	cmp    $0x1f,%r9
    fe4a:	0f 86 b3 01 00 00    	jbe    10003 <dlrealloc+0x553>
    fe50:	49 8d 54 05 00       	lea    0x0(%r13,%rax,1),%rdx
    fe55:	48 09 c6             	or     %rax,%rsi
    fe58:	4c 89 c8             	mov    %r9,%rax
    fe5b:	48 83 ce 02          	or     $0x2,%rsi
    fe5f:	48 83 c8 01          	or     $0x1,%rax
    fe63:	48 89 75 f8          	mov    %rsi,-0x8(%rbp)
    fe67:	4c 89 02             	mov    %r8,(%rdx)
    fe6a:	48 89 42 08          	mov    %rax,0x8(%rdx)
    fe6e:	4c 89 0f             	mov    %r9,(%rdi)
    fe71:	48 83 67 08 fe       	andq   $0xfffffffffffffffe,0x8(%rdi)
    fe76:	4d 89 4c 24 08       	mov    %r9,0x8(%r12)
    fe7b:	49 89 54 24 20       	mov    %rdx,0x20(%r12)
    fe80:	e9 11 fd ff ff       	jmp    fb96 <dlrealloc+0xe6>
    fe85:	0f 1f 00             	nopl   (%rax)
    fe88:	83 e6 01             	and    $0x1,%esi
    fe8b:	4d 8d 7c 05 00       	lea    0x0(%r13,%rax,1),%r15
    fe90:	48 83 ca 03          	or     $0x3,%rdx
    fe94:	48 09 c6             	or     %rax,%rsi
    fe97:	48 8b 05 62 af 01 00 	mov    0x1af62(%rip),%rax        # 2ae00 <mparams>
    fe9e:	48 83 ce 02          	or     $0x2,%rsi
    fea2:	4c 31 e0             	xor    %r12,%rax
    fea5:	48 89 75 f8          	mov    %rsi,-0x8(%rbp)
    fea9:	31 f6                	xor    %esi,%esi
    feab:	49 89 57 08          	mov    %rdx,0x8(%r15)
    feaf:	49 8d 56 f0          	lea    -0x10(%r14),%rdx
    feb3:	49 89 07             	mov    %rax,(%r15)
    feb6:	48 83 4f 08 01       	orq    $0x1,0x8(%rdi)
    febb:	48 89 07             	mov    %rax,(%rdi)
    febe:	49 8d 7f 10          	lea    0x10(%r15),%rdi
    fec2:	e8 69 0a 00 00       	call   10930 <memset>
    fec7:	4c 89 f2             	mov    %r14,%rdx
    feca:	4c 89 fe             	mov    %r15,%rsi
    fecd:	4c 89 e7             	mov    %r12,%rdi
    fed0:	e8 5b c9 ff ff       	call   c830 <dispose_chunk>
    fed5:	e9 b4 fc ff ff       	jmp    fb8e <dlrealloc+0xde>
    feda:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    fee0:	49 03 54 24 10       	add    0x10(%r12),%rdx
    fee5:	41 8b 8c 24 70 03 00 	mov    0x370(%r12),%ecx
    feec:	00 
    feed:	48 39 d0             	cmp    %rdx,%rax
    fef0:	73 3d                	jae    ff2f <dlrealloc+0x47f>
    fef2:	83 e6 01             	and    $0x1,%esi
    fef5:	49 8d 7c 05 00       	lea    0x0(%r13,%rax,1),%rdi
    fefa:	48 29 c2             	sub    %rax,%rdx
    fefd:	48 09 c6             	or     %rax,%rsi
    ff00:	48 8b 05 f9 ae 01 00 	mov    0x1aef9(%rip),%rax        # 2ae00 <mparams>
    ff07:	48 83 ce 02          	or     $0x2,%rsi
    ff0b:	4c 31 e0             	xor    %r12,%rax
    ff0e:	48 89 75 f8          	mov    %rsi,-0x8(%rbp)
    ff12:	48 89 07             	mov    %rax,(%rdi)
    ff15:	48 89 d0             	mov    %rdx,%rax
    ff18:	48 83 c8 01          	or     $0x1,%rax
    ff1c:	48 89 47 08          	mov    %rax,0x8(%rdi)
    ff20:	49 89 7c 24 28       	mov    %rdi,0x28(%r12)
    ff25:	49 89 54 24 10       	mov    %rdx,0x10(%r12)
    ff2a:	e9 67 fc ff ff       	jmp    fb96 <dlrealloc+0xe6>
    ff2f:	83 e1 02             	and    $0x2,%ecx
    ff32:	0f 84 04 fd ff ff    	je     fc3c <dlrealloc+0x18c>
    ff38:	e9 c3 fe ff ff       	jmp    fe00 <dlrealloc+0x350>
    ff3d:	4c 8b 5f 18          	mov    0x18(%rdi),%r11
    ff41:	4c 8b 7f 30          	mov    0x30(%rdi),%r15
    ff45:	49 39 fb             	cmp    %rdi,%r11
    ff48:	0f 84 1d 01 00 00    	je     1006b <dlrealloc+0x5bb>
    ff4e:	48 8b 4f 10          	mov    0x10(%rdi),%rcx
    ff52:	4c 39 c1             	cmp    %r8,%rcx
    ff55:	0f 82 5d fd ff ff    	jb     fcb8 <dlrealloc+0x208>
    ff5b:	48 39 79 18          	cmp    %rdi,0x18(%rcx)
    ff5f:	0f 85 53 fd ff ff    	jne    fcb8 <dlrealloc+0x208>
    ff65:	49 39 7b 10          	cmp    %rdi,0x10(%r11)
    ff69:	0f 85 49 fd ff ff    	jne    fcb8 <dlrealloc+0x208>
    ff6f:	4c 89 59 18          	mov    %r11,0x18(%rcx)
    ff73:	49 89 4b 10          	mov    %rcx,0x10(%r11)
    ff77:	4d 85 ff             	test   %r15,%r15
    ff7a:	0f 84 09 fe ff ff    	je     fd89 <dlrealloc+0x2d9>
    ff80:	44 8b 4f 38          	mov    0x38(%rdi),%r9d
    ff84:	4c 89 c9             	mov    %r9,%rcx
    ff87:	4d 8d 71 4a          	lea    0x4a(%r9),%r14
    ff8b:	4b 3b bc cc 58 02 00 	cmp    0x258(%r12,%r9,8),%rdi
    ff92:	00 
    ff93:	0f 84 61 01 00 00    	je     100fa <dlrealloc+0x64a>
    ff99:	4d 39 c7             	cmp    %r8,%r15
    ff9c:	0f 82 16 fd ff ff    	jb     fcb8 <dlrealloc+0x208>
    ffa2:	49 3b 7f 20          	cmp    0x20(%r15),%rdi
    ffa6:	0f 84 a5 01 00 00    	je     10151 <dlrealloc+0x6a1>
    ffac:	4d 89 5f 28          	mov    %r11,0x28(%r15)
    ffb0:	4d 85 db             	test   %r11,%r11
    ffb3:	0f 84 d0 fd ff ff    	je     fd89 <dlrealloc+0x2d9>
    ffb9:	4d 39 c3             	cmp    %r8,%r11
    ffbc:	0f 82 f6 fc ff ff    	jb     fcb8 <dlrealloc+0x208>
    ffc2:	48 8b 4f 20          	mov    0x20(%rdi),%rcx
    ffc6:	4d 89 7b 30          	mov    %r15,0x30(%r11)
    ffca:	48 85 c9             	test   %rcx,%rcx
    ffcd:	74 11                	je     ffe0 <dlrealloc+0x530>
    ffcf:	4c 39 c1             	cmp    %r8,%rcx
    ffd2:	0f 82 e0 fc ff ff    	jb     fcb8 <dlrealloc+0x208>
    ffd8:	49 89 4b 20          	mov    %rcx,0x20(%r11)
    ffdc:	4c 89 59 30          	mov    %r11,0x30(%rcx)
    ffe0:	48 8b 4f 28          	mov    0x28(%rdi),%rcx
    ffe4:	48 85 c9             	test   %rcx,%rcx
    ffe7:	0f 84 9c fd ff ff    	je     fd89 <dlrealloc+0x2d9>
    ffed:	4c 39 c1             	cmp    %r8,%rcx
    fff0:	0f 82 c2 fc ff ff    	jb     fcb8 <dlrealloc+0x208>
    fff6:	49 89 4b 28          	mov    %rcx,0x28(%r11)
    fffa:	4c 89 59 30          	mov    %r11,0x30(%rcx)
    fffe:	e9 86 fd ff ff       	jmp    fd89 <dlrealloc+0x2d9>
   10003:	48 09 f2             	or     %rsi,%rdx
   10006:	48 83 ca 02          	or     $0x2,%rdx
   1000a:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
   1000e:	4c 89 07             	mov    %r8,(%rdi)
   10011:	48 83 4f 08 01       	orq    $0x1,0x8(%rdi)
   10016:	49 c7 44 24 08 00 00 	movq   $0x0,0x8(%r12)
   1001d:	00 00 
   1001f:	49 c7 44 24 20 00 00 	movq   $0x0,0x20(%r12)
   10026:	00 00 
   10028:	e9 69 fb ff ff       	jmp    fb96 <dlrealloc+0xe6>
   1002d:	4d 8d 44 05 00       	lea    0x0(%r13,%rax,1),%r8
   10032:	48 09 f0             	or     %rsi,%rax
   10035:	48 83 c8 02          	or     $0x2,%rax
   10039:	4c 89 c6             	mov    %r8,%rsi
   1003c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   10040:	48 89 d0             	mov    %rdx,%rax
   10043:	48 83 c8 03          	or     $0x3,%rax
   10047:	49 89 38             	mov    %rdi,(%r8)
   1004a:	49 89 40 08          	mov    %rax,0x8(%r8)
   1004e:	48 83 49 08 01       	orq    $0x1,0x8(%rcx)
   10053:	48 89 39             	mov    %rdi,(%rcx)
   10056:	4c 89 e7             	mov    %r12,%rdi
   10059:	e8 d2 c7 ff ff       	call   c830 <dispose_chunk>
   1005e:	41 8b 8c 24 70 03 00 	mov    0x370(%r12),%ecx
   10065:	00 
   10066:	e9 2b fb ff ff       	jmp    fb96 <dlrealloc+0xe6>
   1006b:	48 8b 4f 28          	mov    0x28(%rdi),%rcx
   1006f:	4c 8d 4f 28          	lea    0x28(%rdi),%r9
   10073:	48 85 c9             	test   %rcx,%rcx
   10076:	0f 84 9d 00 00 00    	je     10119 <dlrealloc+0x669>
   1007c:	0f 1f 40 00          	nopl   0x0(%rax)
   10080:	4d 89 ce             	mov    %r9,%r14
   10083:	49 89 cb             	mov    %rcx,%r11
   10086:	4c 8d 49 28          	lea    0x28(%rcx),%r9
   1008a:	48 8b 49 28          	mov    0x28(%rcx),%rcx
   1008e:	48 85 c9             	test   %rcx,%rcx
   10091:	75 ed                	jne    10080 <dlrealloc+0x5d0>
   10093:	49 8b 4b 20          	mov    0x20(%r11),%rcx
   10097:	4d 8d 4b 20          	lea    0x20(%r11),%r9
   1009b:	48 85 c9             	test   %rcx,%rcx
   1009e:	75 e0                	jne    10080 <dlrealloc+0x5d0>
   100a0:	4d 39 c6             	cmp    %r8,%r14
   100a3:	0f 82 0f fc ff ff    	jb     fcb8 <dlrealloc+0x208>
   100a9:	49 c7 06 00 00 00 00 	movq   $0x0,(%r14)
   100b0:	4d 85 ff             	test   %r15,%r15
   100b3:	0f 84 d0 fc ff ff    	je     fd89 <dlrealloc+0x2d9>
   100b9:	8b 4f 38             	mov    0x38(%rdi),%ecx
   100bc:	4c 8d 49 4a          	lea    0x4a(%rcx),%r9
   100c0:	49 3b bc cc 58 02 00 	cmp    0x258(%r12,%rcx,8),%rdi
   100c7:	00 
   100c8:	0f 84 8c 00 00 00    	je     1015a <dlrealloc+0x6aa>
   100ce:	4d 39 c7             	cmp    %r8,%r15
   100d1:	0f 82 e1 fb ff ff    	jb     fcb8 <dlrealloc+0x208>
   100d7:	49 3b 7f 20          	cmp    0x20(%r15),%rdi
   100db:	0f 84 bb 00 00 00    	je     1019c <dlrealloc+0x6ec>
   100e1:	4d 89 5f 28          	mov    %r11,0x28(%r15)
   100e5:	e9 cf fe ff ff       	jmp    ffb9 <dlrealloc+0x509>
   100ea:	bf fe ff ff ff       	mov    $0xfffffffe,%edi
   100ef:	d3 c7                	rol    %cl,%edi
   100f1:	41 21 3c 24          	and    %edi,(%r12)
   100f5:	e9 8f fc ff ff       	jmp    fd89 <dlrealloc+0x2d9>
   100fa:	4f 89 5c f4 08       	mov    %r11,0x8(%r12,%r14,8)
   100ff:	4d 85 db             	test   %r11,%r11
   10102:	0f 85 b1 fe ff ff    	jne    ffb9 <dlrealloc+0x509>
   10108:	bf fe ff ff ff       	mov    $0xfffffffe,%edi
   1010d:	d3 c7                	rol    %cl,%edi
   1010f:	41 21 7c 24 04       	and    %edi,0x4(%r12)
   10114:	e9 70 fc ff ff       	jmp    fd89 <dlrealloc+0x2d9>
   10119:	48 8b 4f 20          	mov    0x20(%rdi),%rcx
   1011d:	48 85 c9             	test   %rcx,%rcx
   10120:	74 42                	je     10164 <dlrealloc+0x6b4>
   10122:	4c 8d 4f 20          	lea    0x20(%rdi),%r9
   10126:	e9 55 ff ff ff       	jmp    10080 <dlrealloc+0x5d0>
   1012b:	4d 39 c1             	cmp    %r8,%r9
   1012e:	0f 82 84 fb ff ff    	jb     fcb8 <dlrealloc+0x208>
   10134:	49 39 79 18          	cmp    %rdi,0x18(%r9)
   10138:	0f 85 7a fb ff ff    	jne    fcb8 <dlrealloc+0x208>
   1013e:	4d 39 d9             	cmp    %r11,%r9
   10141:	74 a7                	je     100ea <dlrealloc+0x63a>
   10143:	4d 39 f3             	cmp    %r14,%r11
   10146:	0f 84 35 fc ff ff    	je     fd81 <dlrealloc+0x2d1>
   1014c:	e9 1d fc ff ff       	jmp    fd6e <dlrealloc+0x2be>
   10151:	4d 89 5f 20          	mov    %r11,0x20(%r15)
   10155:	e9 56 fe ff ff       	jmp    ffb0 <dlrealloc+0x500>
   1015a:	4f 89 5c cc 08       	mov    %r11,0x8(%r12,%r9,8)
   1015f:	e9 55 fe ff ff       	jmp    ffb9 <dlrealloc+0x509>
   10164:	4d 85 ff             	test   %r15,%r15
   10167:	0f 84 1c fc ff ff    	je     fd89 <dlrealloc+0x2d9>
   1016d:	44 8b 4f 38          	mov    0x38(%rdi),%r9d
   10171:	4c 89 c9             	mov    %r9,%rcx
   10174:	4d 8d 59 4a          	lea    0x4a(%r9),%r11
   10178:	4b 3b bc cc 58 02 00 	cmp    0x258(%r12,%r9,8),%rdi
   1017f:	00 
   10180:	74 2e                	je     101b0 <dlrealloc+0x700>
   10182:	4d 39 c7             	cmp    %r8,%r15
   10185:	0f 82 2d fb ff ff    	jb     fcb8 <dlrealloc+0x208>
   1018b:	49 39 7f 20          	cmp    %rdi,0x20(%r15)
   1018f:	74 14                	je     101a5 <dlrealloc+0x6f5>
   10191:	31 c9                	xor    %ecx,%ecx
   10193:	49 89 4f 28          	mov    %rcx,0x28(%r15)
   10197:	e9 ed fb ff ff       	jmp    fd89 <dlrealloc+0x2d9>
   1019c:	4d 89 5f 20          	mov    %r11,0x20(%r15)
   101a0:	e9 14 fe ff ff       	jmp    ffb9 <dlrealloc+0x509>
   101a5:	31 ff                	xor    %edi,%edi
   101a7:	49 89 7f 20          	mov    %rdi,0x20(%r15)
   101ab:	e9 d9 fb ff ff       	jmp    fd89 <dlrealloc+0x2d9>
   101b0:	45 31 c0             	xor    %r8d,%r8d
   101b3:	4f 89 44 dc 08       	mov    %r8,0x8(%r12,%r11,8)
   101b8:	e9 4b ff ff ff       	jmp    10108 <dlrealloc+0x658>
   101bd:	0f 1f 00             	nopl   (%rax)

00000000000101c0 <dlmemalign>:
   101c0:	f3 0f 1e fa          	endbr64 
   101c4:	48 83 ff 10          	cmp    $0x10,%rdi
   101c8:	76 06                	jbe    101d0 <dlmemalign+0x10>
   101ca:	e9 d1 ea ff ff       	jmp    eca0 <internal_memalign.constprop.0>
   101cf:	90                   	nop
   101d0:	48 89 f7             	mov    %rsi,%rdi
   101d3:	e9 78 cf ff ff       	jmp    d150 <dlmalloc>
   101d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   101df:	00 

00000000000101e0 <dlposix_memalign>:
   101e0:	f3 0f 1e fa          	endbr64 
   101e4:	53                   	push   %rbx
   101e5:	48 89 fb             	mov    %rdi,%rbx
   101e8:	48 89 f7             	mov    %rsi,%rdi
   101eb:	48 89 d6             	mov    %rdx,%rsi
   101ee:	48 83 ff 10          	cmp    $0x10,%rdi
   101f2:	74 6c                	je     10260 <dlposix_memalign+0x80>
   101f4:	48 89 f9             	mov    %rdi,%rcx
   101f7:	49 89 f8             	mov    %rdi,%r8
   101fa:	ba 16 00 00 00       	mov    $0x16,%edx
   101ff:	48 c1 e9 03          	shr    $0x3,%rcx
   10203:	41 83 e0 07          	and    $0x7,%r8d
   10207:	48 83 ff 07          	cmp    $0x7,%rdi
   1020b:	76 36                	jbe    10243 <dlposix_memalign+0x63>
   1020d:	48 8d 41 ff          	lea    -0x1(%rcx),%rax
   10211:	48 21 c8             	and    %rcx,%rax
   10214:	4c 09 c0             	or     %r8,%rax
   10217:	75 2a                	jne    10243 <dlposix_memalign+0x63>
   10219:	48 c7 c0 80 ff ff ff 	mov    $0xffffffffffffff80,%rax
   10220:	48 29 f8             	sub    %rdi,%rax
   10223:	48 39 f0             	cmp    %rsi,%rax
   10226:	72 28                	jb     10250 <dlposix_memalign+0x70>
   10228:	b8 20 00 00 00       	mov    $0x20,%eax
   1022d:	48 39 c7             	cmp    %rax,%rdi
   10230:	48 0f 42 f8          	cmovb  %rax,%rdi
   10234:	e8 67 ea ff ff       	call   eca0 <internal_memalign.constprop.0>
   10239:	48 85 c0             	test   %rax,%rax
   1023c:	74 12                	je     10250 <dlposix_memalign+0x70>
   1023e:	48 89 03             	mov    %rax,(%rbx)
   10241:	31 d2                	xor    %edx,%edx
   10243:	89 d0                	mov    %edx,%eax
   10245:	5b                   	pop    %rbx
   10246:	c3                   	ret    
   10247:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1024e:	00 00 
   10250:	ba 0c 00 00 00       	mov    $0xc,%edx
   10255:	5b                   	pop    %rbx
   10256:	89 d0                	mov    %edx,%eax
   10258:	c3                   	ret    
   10259:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10260:	48 89 d7             	mov    %rdx,%rdi
   10263:	e8 e8 ce ff ff       	call   d150 <dlmalloc>
   10268:	eb cf                	jmp    10239 <dlposix_memalign+0x59>
   1026a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000010270 <dlmallinfo>:
   10270:	f3 0f 1e fa          	endbr64 
   10274:	41 55                	push   %r13
   10276:	41 54                	push   %r12
   10278:	55                   	push   %rbp
   10279:	53                   	push   %rbx
   1027a:	48 89 fb             	mov    %rdi,%rbx
   1027d:	48 83 ec 08          	sub    $0x8,%rsp
   10281:	48 83 3d 77 ab 01 00 	cmpq   $0x0,0x1ab77(%rip)        # 2ae00 <mparams>
   10288:	00 
   10289:	0f 84 89 01 00 00    	je     10418 <dlmallinfo+0x1a8>
   1028f:	44 8b 1d 1a ab 01 00 	mov    0x1ab1a(%rip),%r11d        # 2adb0 <_gm_+0x370>
   10296:	41 83 e3 02          	and    $0x2,%r11d
   1029a:	0f 85 16 01 00 00    	jne    103b6 <dlmallinfo+0x146>
   102a0:	48 8b 3d c1 a7 01 00 	mov    0x1a7c1(%rip),%rdi        # 2aa68 <_gm_+0x28>
   102a7:	48 85 ff             	test   %rdi,%rdi
   102aa:	0f 84 f4 00 00 00    	je     103a4 <dlmallinfo+0x134>
   102b0:	48 8b 2d 99 a7 01 00 	mov    0x1a799(%rip),%rbp        # 2aa50 <_gm_+0x10>
   102b7:	41 b9 01 00 00 00    	mov    $0x1,%r9d
   102bd:	4c 8d 15 f4 aa 01 00 	lea    0x1aaf4(%rip),%r10        # 2adb8 <_gm_+0x378>
   102c4:	4c 8d 45 50          	lea    0x50(%rbp),%r8
   102c8:	4c 89 c1             	mov    %r8,%rcx
   102cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   102d0:	49 8b 32             	mov    (%r10),%rsi
   102d3:	48 8d 46 10          	lea    0x10(%rsi),%rax
   102d7:	40 f6 c6 0f          	test   $0xf,%sil
   102db:	0f 84 af 00 00 00    	je     10390 <dlmallinfo+0x120>
   102e1:	48 f7 d8             	neg    %rax
   102e4:	83 e0 0f             	and    $0xf,%eax
   102e7:	48 01 f0             	add    %rsi,%rax
   102ea:	72 4a                	jb     10336 <dlmallinfo+0xc6>
   102ec:	4d 8b 6a 08          	mov    0x8(%r10),%r13
   102f0:	49 01 f5             	add    %rsi,%r13
   102f3:	4c 39 e8             	cmp    %r13,%rax
   102f6:	72 39                	jb     10331 <dlmallinfo+0xc1>
   102f8:	eb 3c                	jmp    10336 <dlmallinfo+0xc6>
   102fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10300:	48 8b 50 08          	mov    0x8(%rax),%rdx
   10304:	48 83 fa 0b          	cmp    $0xb,%rdx
   10308:	74 2c                	je     10336 <dlmallinfo+0xc6>
   1030a:	49 89 d4             	mov    %rdx,%r12
   1030d:	83 e2 03             	and    $0x3,%edx
   10310:	49 83 e4 f8          	and    $0xfffffffffffffff8,%r12
   10314:	4c 01 e1             	add    %r12,%rcx
   10317:	48 83 fa 01          	cmp    $0x1,%rdx
   1031b:	75 07                	jne    10324 <dlmallinfo+0xb4>
   1031d:	4d 01 e0             	add    %r12,%r8
   10320:	49 83 c1 01          	add    $0x1,%r9
   10324:	4c 01 e0             	add    %r12,%rax
   10327:	48 39 f0             	cmp    %rsi,%rax
   1032a:	72 0a                	jb     10336 <dlmallinfo+0xc6>
   1032c:	4c 39 e8             	cmp    %r13,%rax
   1032f:	73 05                	jae    10336 <dlmallinfo+0xc6>
   10331:	48 39 f8             	cmp    %rdi,%rax
   10334:	75 ca                	jne    10300 <dlmallinfo+0x90>
   10336:	4d 8b 52 10          	mov    0x10(%r10),%r10
   1033a:	4d 85 d2             	test   %r10,%r10
   1033d:	75 91                	jne    102d0 <dlmallinfo+0x60>
   1033f:	48 8b 05 52 aa 01 00 	mov    0x1aa52(%rip),%rax        # 2ad98 <_gm_+0x358>
   10346:	89 ca                	mov    %ecx,%edx
   10348:	89 c6                	mov    %eax,%esi
   1034a:	44 29 c0             	sub    %r8d,%eax
   1034d:	29 ce                	sub    %ecx,%esi
   1034f:	8b 0d 4b aa 01 00    	mov    0x1aa4b(%rip),%ecx        # 2ada0 <_gm_+0x360>
   10355:	45 85 db             	test   %r11d,%r11d
   10358:	75 3e                	jne    10398 <dlmallinfo+0x128>
   1035a:	89 43 1c             	mov    %eax,0x1c(%rbx)
   1035d:	48 89 d8             	mov    %rbx,%rax
   10360:	89 13                	mov    %edx,(%rbx)
   10362:	44 89 4b 04          	mov    %r9d,0x4(%rbx)
   10366:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
   1036d:	00 
   1036e:	89 73 10             	mov    %esi,0x10(%rbx)
   10371:	89 4b 14             	mov    %ecx,0x14(%rbx)
   10374:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%rbx)
   1037b:	44 89 43 20          	mov    %r8d,0x20(%rbx)
   1037f:	89 6b 24             	mov    %ebp,0x24(%rbx)
   10382:	48 83 c4 08          	add    $0x8,%rsp
   10386:	5b                   	pop    %rbx
   10387:	5d                   	pop    %rbp
   10388:	41 5c                	pop    %r12
   1038a:	41 5d                	pop    %r13
   1038c:	c3                   	ret    
   1038d:	0f 1f 00             	nopl   (%rax)
   10390:	48 89 f0             	mov    %rsi,%rax
   10393:	e9 54 ff ff ff       	jmp    102ec <dlmallinfo+0x7c>
   10398:	c7 05 12 aa 01 00 00 	movl   $0x0,0x1aa12(%rip)        # 2adb4 <_gm_+0x374>
   1039f:	00 00 00 
   103a2:	eb b6                	jmp    1035a <dlmallinfo+0xea>
   103a4:	31 ed                	xor    %ebp,%ebp
   103a6:	45 31 c0             	xor    %r8d,%r8d
   103a9:	31 c0                	xor    %eax,%eax
   103ab:	31 c9                	xor    %ecx,%ecx
   103ad:	31 f6                	xor    %esi,%esi
   103af:	45 31 c9             	xor    %r9d,%r9d
   103b2:	31 d2                	xor    %edx,%edx
   103b4:	eb a4                	jmp    1035a <dlmallinfo+0xea>
   103b6:	b8 01 00 00 00       	mov    $0x1,%eax
   103bb:	87 05 f3 a9 01 00    	xchg   %eax,0x1a9f3(%rip)        # 2adb4 <_gm_+0x374>
   103c1:	ba 01 00 00 00       	mov    $0x1,%edx
   103c6:	85 c0                	test   %eax,%eax
   103c8:	75 36                	jne    10400 <dlmallinfo+0x190>
   103ca:	44 8b 1d df a9 01 00 	mov    0x1a9df(%rip),%r11d        # 2adb0 <_gm_+0x370>
   103d1:	48 8b 3d 90 a6 01 00 	mov    0x1a690(%rip),%rdi        # 2aa68 <_gm_+0x28>
   103d8:	41 83 e3 02          	and    $0x2,%r11d
   103dc:	48 85 ff             	test   %rdi,%rdi
   103df:	0f 85 cb fe ff ff    	jne    102b0 <dlmallinfo+0x40>
   103e5:	31 ed                	xor    %ebp,%ebp
   103e7:	45 31 c0             	xor    %r8d,%r8d
   103ea:	31 c0                	xor    %eax,%eax
   103ec:	31 c9                	xor    %ecx,%ecx
   103ee:	31 f6                	xor    %esi,%esi
   103f0:	45 31 c9             	xor    %r9d,%r9d
   103f3:	31 d2                	xor    %edx,%edx
   103f5:	e9 5b ff ff ff       	jmp    10355 <dlmallinfo+0xe5>
   103fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10400:	8b 05 ae a9 01 00    	mov    0x1a9ae(%rip),%eax        # 2adb4 <_gm_+0x374>
   10406:	85 c0                	test   %eax,%eax
   10408:	75 f6                	jne    10400 <dlmallinfo+0x190>
   1040a:	89 d0                	mov    %edx,%eax
   1040c:	87 05 a2 a9 01 00    	xchg   %eax,0x1a9a2(%rip)        # 2adb4 <_gm_+0x374>
   10412:	85 c0                	test   %eax,%eax
   10414:	75 ea                	jne    10400 <dlmallinfo+0x190>
   10416:	eb b2                	jmp    103ca <dlmallinfo+0x15a>
   10418:	e8 43 cc ff ff       	call   d060 <init_mparams.isra.0>
   1041d:	e9 6d fe ff ff       	jmp    1028f <dlmallinfo+0x1f>
   10422:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   10429:	00 00 00 
   1042c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000010430 <__memcpy.part.0>:
   10430:	48 89 f0             	mov    %rsi,%rax
   10433:	48 89 f1             	mov    %rsi,%rcx
   10436:	48 09 f8             	or     %rdi,%rax
   10439:	a8 07                	test   $0x7,%al
   1043b:	74 43                	je     10480 <__memcpy.part.0+0x50>
   1043d:	48 89 f0             	mov    %rsi,%rax
   10440:	48 31 f8             	xor    %rdi,%rax
   10443:	a8 07                	test   $0x7,%al
   10445:	75 0a                	jne    10451 <__memcpy.part.0+0x21>
   10447:	48 83 fa 07          	cmp    $0x7,%rdx
   1044b:	0f 87 87 00 00 00    	ja     104d8 <__memcpy.part.0+0xa8>
   10451:	45 31 c9             	xor    %r9d,%r9d
   10454:	45 31 c0             	xor    %r8d,%r8d
   10457:	45 31 d2             	xor    %r10d,%r10d
   1045a:	31 c0                	xor    %eax,%eax
   1045c:	0f 1f 40 00          	nopl   0x0(%rax)
   10460:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
   10464:	40 88 34 07          	mov    %sil,(%rdi,%rax,1)
   10468:	48 83 c0 01          	add    $0x1,%rax
   1046c:	48 39 c2             	cmp    %rax,%rdx
   1046f:	75 ef                	jne    10460 <__memcpy.part.0+0x30>
   10471:	48 01 d1             	add    %rdx,%rcx
   10474:	48 01 d7             	add    %rdx,%rdi
   10477:	4c 89 d2             	mov    %r10,%rdx
   1047a:	eb 12                	jmp    1048e <__memcpy.part.0+0x5e>
   1047c:	0f 1f 40 00          	nopl   0x0(%rax)
   10480:	49 89 d0             	mov    %rdx,%r8
   10483:	49 89 d1             	mov    %rdx,%r9
   10486:	49 c1 e8 03          	shr    $0x3,%r8
   1048a:	41 83 e1 07          	and    $0x7,%r9d
   1048e:	48 83 fa 07          	cmp    $0x7,%rdx
   10492:	76 23                	jbe    104b7 <__memcpy.part.0+0x87>
   10494:	4a 8d 34 c5 00 00 00 	lea    0x0(,%r8,8),%rsi
   1049b:	00 
   1049c:	31 c0                	xor    %eax,%eax
   1049e:	66 90                	xchg   %ax,%ax
   104a0:	48 8b 14 01          	mov    (%rcx,%rax,1),%rdx
   104a4:	48 89 14 07          	mov    %rdx,(%rdi,%rax,1)
   104a8:	48 83 c0 08          	add    $0x8,%rax
   104ac:	48 39 f0             	cmp    %rsi,%rax
   104af:	75 ef                	jne    104a0 <__memcpy.part.0+0x70>
   104b1:	48 01 c1             	add    %rax,%rcx
   104b4:	48 01 c7             	add    %rax,%rdi
   104b7:	4d 85 c9             	test   %r9,%r9
   104ba:	74 14                	je     104d0 <__memcpy.part.0+0xa0>
   104bc:	31 c0                	xor    %eax,%eax
   104be:	66 90                	xchg   %ax,%ax
   104c0:	0f b6 14 01          	movzbl (%rcx,%rax,1),%edx
   104c4:	88 14 07             	mov    %dl,(%rdi,%rax,1)
   104c7:	48 83 c0 01          	add    $0x1,%rax
   104cb:	49 39 c1             	cmp    %rax,%r9
   104ce:	75 f0                	jne    104c0 <__memcpy.part.0+0x90>
   104d0:	c3                   	ret    
   104d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   104d8:	48 89 f0             	mov    %rsi,%rax
   104db:	83 e0 07             	and    $0x7,%eax
   104de:	4c 8d 54 10 f8       	lea    -0x8(%rax,%rdx,1),%r10
   104e3:	ba 08 00 00 00       	mov    $0x8,%edx
   104e8:	4d 89 d0             	mov    %r10,%r8
   104eb:	4d 89 d1             	mov    %r10,%r9
   104ee:	48 29 c2             	sub    %rax,%rdx
   104f1:	49 c1 e8 03          	shr    $0x3,%r8
   104f5:	41 83 e1 07          	and    $0x7,%r9d
   104f9:	e9 5c ff ff ff       	jmp    1045a <__memcpy.part.0+0x2a>
   104fe:	66 90                	xchg   %ax,%ax

0000000000010500 <__memcpy>:
   10500:	f3 0f 1e fa          	endbr64 
   10504:	49 89 fb             	mov    %rdi,%r11
   10507:	48 85 d2             	test   %rdx,%rdx
   1050a:	74 0a                	je     10516 <__memcpy+0x16>
   1050c:	48 39 f7             	cmp    %rsi,%rdi
   1050f:	74 05                	je     10516 <__memcpy+0x16>
   10511:	e8 1a ff ff ff       	call   10430 <__memcpy.part.0>
   10516:	4c 89 d8             	mov    %r11,%rax
   10519:	c3                   	ret    
   1051a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000010520 <memcpy_verw>:
   10520:	f3 0f 1e fa          	endbr64 
   10524:	41 56                	push   %r14
   10526:	41 55                	push   %r13
   10528:	49 89 fd             	mov    %rdi,%r13
   1052b:	41 54                	push   %r12
   1052d:	55                   	push   %rbp
   1052e:	53                   	push   %rbx
   1052f:	48 85 d2             	test   %rdx,%rdx
   10532:	0f 84 8f 00 00 00    	je     105c7 <memcpy_verw+0xa7>
   10538:	48 89 f3             	mov    %rsi,%rbx
   1053b:	48 39 f7             	cmp    %rsi,%rdi
   1053e:	0f 84 83 00 00 00    	je     105c7 <memcpy_verw+0xa7>
   10544:	49 89 d4             	mov    %rdx,%r12
   10547:	48 89 fd             	mov    %rdi,%rbp
   1054a:	48 83 fa 07          	cmp    $0x7,%rdx
   1054e:	77 25                	ja     10575 <memcpy_verw+0x55>
   10550:	eb 5b                	jmp    105ad <memcpy_verw+0x8d>
   10552:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10558:	48 89 de             	mov    %rbx,%rsi
   1055b:	48 89 ef             	mov    %rbp,%rdi
   1055e:	49 83 ec 01          	sub    $0x1,%r12
   10562:	48 83 c3 01          	add    $0x1,%rbx
   10566:	e8 f5 09 00 00       	call   10f60 <__memcpy_verw>
   1056b:	48 83 c5 01          	add    $0x1,%rbp
   1056f:	49 83 fc 07          	cmp    $0x7,%r12
   10573:	76 33                	jbe    105a8 <memcpy_verw+0x88>
   10575:	48 89 e8             	mov    %rbp,%rax
   10578:	48 09 d8             	or     %rbx,%rax
   1057b:	a8 07                	test   $0x7,%al
   1057d:	75 d9                	jne    10558 <memcpy_verw+0x38>
   1057f:	4d 89 e3             	mov    %r12,%r11
   10582:	49 83 e3 f8          	and    $0xfffffffffffffff8,%r11
   10586:	48 39 dd             	cmp    %rbx,%rbp
   10589:	74 0e                	je     10599 <memcpy_verw+0x79>
   1058b:	4c 89 da             	mov    %r11,%rdx
   1058e:	48 89 de             	mov    %rbx,%rsi
   10591:	48 89 ef             	mov    %rbp,%rdi
   10594:	e8 97 fe ff ff       	call   10430 <__memcpy.part.0>
   10599:	4d 29 dc             	sub    %r11,%r12
   1059c:	4c 01 db             	add    %r11,%rbx
   1059f:	4c 01 dd             	add    %r11,%rbp
   105a2:	49 83 fc 07          	cmp    $0x7,%r12
   105a6:	77 cd                	ja     10575 <memcpy_verw+0x55>
   105a8:	4d 85 e4             	test   %r12,%r12
   105ab:	74 1a                	je     105c7 <memcpy_verw+0xa7>
   105ad:	45 31 f6             	xor    %r14d,%r14d
   105b0:	4a 8d 34 33          	lea    (%rbx,%r14,1),%rsi
   105b4:	4a 8d 7c 35 00       	lea    0x0(%rbp,%r14,1),%rdi
   105b9:	49 83 c6 01          	add    $0x1,%r14
   105bd:	e8 9e 09 00 00       	call   10f60 <__memcpy_verw>
   105c2:	4d 39 e6             	cmp    %r12,%r14
   105c5:	72 e9                	jb     105b0 <memcpy_verw+0x90>
   105c7:	5b                   	pop    %rbx
   105c8:	4c 89 e8             	mov    %r13,%rax
   105cb:	5d                   	pop    %rbp
   105cc:	41 5c                	pop    %r12
   105ce:	41 5d                	pop    %r13
   105d0:	41 5e                	pop    %r14
   105d2:	c3                   	ret    
   105d3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   105da:	00 00 00 
   105dd:	0f 1f 00             	nopl   (%rax)

00000000000105e0 <copy_external_memory>:
   105e0:	41 57                	push   %r15
   105e2:	66 0f ef c0          	pxor   %xmm0,%xmm0
   105e6:	41 56                	push   %r14
   105e8:	41 55                	push   %r13
   105ea:	41 54                	push   %r12
   105ec:	55                   	push   %rbp
   105ed:	53                   	push   %rbx
   105ee:	48 83 ec 38          	sub    $0x38,%rsp
   105f2:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   105f9:	00 00 
   105fb:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   10600:	31 c0                	xor    %eax,%eax
   10602:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   10607:	48 85 d2             	test   %rdx,%rdx
   1060a:	74 2d                	je     10639 <copy_external_memory+0x59>
   1060c:	41 89 f6             	mov    %esi,%r14d
   1060f:	49 89 fd             	mov    %rdi,%r13
   10612:	48 89 f3             	mov    %rsi,%rbx
   10615:	41 89 cc             	mov    %ecx,%r12d
   10618:	41 83 e6 07          	and    $0x7,%r14d
   1061c:	75 52                	jne    10670 <copy_external_memory+0x90>
   1061e:	48 83 fa 08          	cmp    $0x8,%rdx
   10622:	75 4c                	jne    10670 <copy_external_memory+0x90>
   10624:	45 84 e4             	test   %r12b,%r12b
   10627:	75 37                	jne    10660 <copy_external_memory+0x80>
   10629:	4c 39 eb             	cmp    %r13,%rbx
   1062c:	74 0b                	je     10639 <copy_external_memory+0x59>
   1062e:	48 89 de             	mov    %rbx,%rsi
   10631:	4c 89 ef             	mov    %r13,%rdi
   10634:	e8 f7 fd ff ff       	call   10430 <__memcpy.part.0>
   10639:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   1063e:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
   10645:	00 00 
   10647:	75 7f                	jne    106c8 <copy_external_memory+0xe8>
   10649:	48 83 c4 38          	add    $0x38,%rsp
   1064d:	5b                   	pop    %rbx
   1064e:	5d                   	pop    %rbp
   1064f:	41 5c                	pop    %r12
   10651:	41 5d                	pop    %r13
   10653:	41 5e                	pop    %r14
   10655:	41 5f                	pop    %r15
   10657:	c3                   	ret    
   10658:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1065f:	00 
   10660:	48 89 de             	mov    %rbx,%rsi
   10663:	4c 89 ef             	mov    %r13,%rdi
   10666:	e8 b5 fe ff ff       	call   10520 <memcpy_verw>
   1066b:	eb cc                	jmp    10639 <copy_external_memory+0x59>
   1066d:	0f 1f 00             	nopl   (%rax)
   10670:	45 89 f7             	mov    %r14d,%r15d
   10673:	48 89 de             	mov    %rbx,%rsi
   10676:	48 8d 6c 24 10       	lea    0x10(%rsp),%rbp
   1067b:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   10680:	4c 29 fe             	sub    %r15,%rsi
   10683:	48 89 ef             	mov    %rbp,%rdi
   10686:	e8 f5 08 00 00       	call   10f80 <__memcpy_8a>
   1068b:	45 85 f6             	test   %r14d,%r14d
   1068e:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   10693:	74 0a                	je     1069f <copy_external_memory+0xbf>
   10695:	49 8d 04 17          	lea    (%r15,%rdx,1),%rax
   10699:	48 83 f8 08          	cmp    $0x8,%rax
   1069d:	77 11                	ja     106b0 <copy_external_memory+0xd0>
   1069f:	4a 8d 5c 3d 00       	lea    0x0(%rbp,%r15,1),%rbx
   106a4:	45 84 e4             	test   %r12b,%r12b
   106a7:	74 80                	je     10629 <copy_external_memory+0x49>
   106a9:	eb b5                	jmp    10660 <copy_external_memory+0x80>
   106ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   106b0:	4c 29 fb             	sub    %r15,%rbx
   106b3:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   106b8:	48 8d 73 08          	lea    0x8(%rbx),%rsi
   106bc:	e8 bf 08 00 00       	call   10f80 <__memcpy_8a>
   106c1:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   106c6:	eb d7                	jmp    1069f <copy_external_memory+0xbf>
   106c8:	e8 b3 03 00 00       	call   10a80 <__stack_chk_fail>
   106cd:	0f 1f 00             	nopl   (%rax)

00000000000106d0 <memcpy_nochecks>:
   106d0:	f3 0f 1e fa          	endbr64 
   106d4:	49 89 fb             	mov    %rdi,%r11
   106d7:	48 85 d2             	test   %rdx,%rdx
   106da:	74 0a                	je     106e6 <memcpy_nochecks+0x16>
   106dc:	48 39 f7             	cmp    %rsi,%rdi
   106df:	74 05                	je     106e6 <memcpy_nochecks+0x16>
   106e1:	e8 4a fd ff ff       	call   10430 <__memcpy.part.0>
   106e6:	4c 89 d8             	mov    %r11,%rax
   106e9:	c3                   	ret    
   106ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000106f0 <memcpy>:
   106f0:	f3 0f 1e fa          	endbr64 
   106f4:	41 57                	push   %r15
   106f6:	41 56                	push   %r14
   106f8:	41 55                	push   %r13
   106fa:	49 89 fd             	mov    %rdi,%r13
   106fd:	41 54                	push   %r12
   106ff:	55                   	push   %rbp
   10700:	53                   	push   %rbx
   10701:	48 83 ec 18          	sub    $0x18,%rsp
   10705:	48 85 d2             	test   %rdx,%rdx
   10708:	0f 84 d4 00 00 00    	je     107e2 <memcpy+0xf2>
   1070e:	48 89 f3             	mov    %rsi,%rbx
   10711:	48 39 f7             	cmp    %rsi,%rdi
   10714:	0f 84 c8 00 00 00    	je     107e2 <memcpy+0xf2>
   1071a:	48 89 d6             	mov    %rdx,%rsi
   1071d:	48 89 df             	mov    %rbx,%rdi
   10720:	48 89 d5             	mov    %rdx,%rbp
   10723:	e8 58 54 ff ff       	call   5b80 <sgx_is_within_enclave>
   10728:	48 89 ee             	mov    %rbp,%rsi
   1072b:	4c 89 ef             	mov    %r13,%rdi
   1072e:	41 89 c4             	mov    %eax,%r12d
   10731:	e8 4a 54 ff ff       	call   5b80 <sgx_is_within_enclave>
   10736:	45 85 e4             	test   %r12d,%r12d
   10739:	0f 85 b9 00 00 00    	jne    107f8 <memcpy+0x108>
   1073f:	85 c0                	test   %eax,%eax
   10741:	4d 89 ec             	mov    %r13,%r12
   10744:	0f 94 c0             	sete   %al
   10747:	0f b6 c0             	movzbl %al,%eax
   1074a:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   1074e:	48 83 fd 07          	cmp    $0x7,%rbp
   10752:	77 38                	ja     1078c <memcpy+0x9c>
   10754:	eb 7a                	jmp    107d0 <memcpy+0xe0>
   10756:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1075d:	00 00 00 
   10760:	41 be 08 00 00 00    	mov    $0x8,%r14d
   10766:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
   1076a:	48 89 de             	mov    %rbx,%rsi
   1076d:	4c 89 e7             	mov    %r12,%rdi
   10770:	4d 29 fe             	sub    %r15,%r14
   10773:	49 8d 6c 2f f8       	lea    -0x8(%r15,%rbp,1),%rbp
   10778:	4c 89 f2             	mov    %r14,%rdx
   1077b:	4c 01 f3             	add    %r14,%rbx
   1077e:	4d 01 f4             	add    %r14,%r12
   10781:	e8 5a fe ff ff       	call   105e0 <copy_external_memory>
   10786:	48 83 fd 07          	cmp    $0x7,%rbp
   1078a:	76 44                	jbe    107d0 <memcpy+0xe0>
   1078c:	48 89 d8             	mov    %rbx,%rax
   1078f:	4d 89 e7             	mov    %r12,%r15
   10792:	4c 09 e0             	or     %r12,%rax
   10795:	41 83 e7 07          	and    $0x7,%r15d
   10799:	a8 07                	test   $0x7,%al
   1079b:	75 c3                	jne    10760 <memcpy+0x70>
   1079d:	49 89 eb             	mov    %rbp,%r11
   107a0:	49 83 e3 f8          	and    $0xfffffffffffffff8,%r11
   107a4:	4c 39 e3             	cmp    %r12,%rbx
   107a7:	74 0e                	je     107b7 <memcpy+0xc7>
   107a9:	4c 89 da             	mov    %r11,%rdx
   107ac:	48 89 de             	mov    %rbx,%rsi
   107af:	4c 89 e7             	mov    %r12,%rdi
   107b2:	e8 79 fc ff ff       	call   10430 <__memcpy.part.0>
   107b7:	4c 29 dd             	sub    %r11,%rbp
   107ba:	4c 01 db             	add    %r11,%rbx
   107bd:	4d 01 dc             	add    %r11,%r12
   107c0:	48 83 fd 07          	cmp    $0x7,%rbp
   107c4:	77 c6                	ja     1078c <memcpy+0x9c>
   107c6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   107cd:	00 00 00 
   107d0:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
   107d4:	48 89 ea             	mov    %rbp,%rdx
   107d7:	48 89 de             	mov    %rbx,%rsi
   107da:	4c 89 e7             	mov    %r12,%rdi
   107dd:	e8 fe fd ff ff       	call   105e0 <copy_external_memory>
   107e2:	48 83 c4 18          	add    $0x18,%rsp
   107e6:	4c 89 e8             	mov    %r13,%rax
   107e9:	5b                   	pop    %rbx
   107ea:	5d                   	pop    %rbp
   107eb:	41 5c                	pop    %r12
   107ed:	41 5d                	pop    %r13
   107ef:	41 5e                	pop    %r14
   107f1:	41 5f                	pop    %r15
   107f3:	c3                   	ret    
   107f4:	0f 1f 40 00          	nopl   0x0(%rax)
   107f8:	48 89 ea             	mov    %rbp,%rdx
   107fb:	48 89 de             	mov    %rbx,%rsi
   107fe:	4c 89 ef             	mov    %r13,%rdi
   10801:	85 c0                	test   %eax,%eax
   10803:	75 1b                	jne    10820 <memcpy+0x130>
   10805:	48 83 c4 18          	add    $0x18,%rsp
   10809:	5b                   	pop    %rbx
   1080a:	5d                   	pop    %rbp
   1080b:	41 5c                	pop    %r12
   1080d:	41 5d                	pop    %r13
   1080f:	41 5e                	pop    %r14
   10811:	41 5f                	pop    %r15
   10813:	e9 08 fd ff ff       	jmp    10520 <memcpy_verw>
   10818:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1081f:	00 
   10820:	e8 0b fc ff ff       	call   10430 <__memcpy.part.0>
   10825:	eb bb                	jmp    107e2 <memcpy+0xf2>
   10827:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1082e:	00 00 

0000000000010830 <memset_verw>:
   10830:	f3 0f 1e fa          	endbr64 
   10834:	41 56                	push   %r14
   10836:	41 55                	push   %r13
   10838:	41 54                	push   %r12
   1083a:	49 89 fc             	mov    %rdi,%r12
   1083d:	55                   	push   %rbp
   1083e:	53                   	push   %rbx
   1083f:	48 83 ec 20          	sub    $0x20,%rsp
   10843:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1084a:	00 00 
   1084c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   10851:	31 c0                	xor    %eax,%eax
   10853:	48 85 d2             	test   %rdx,%rdx
   10856:	0f 84 a0 00 00 00    	je     108fc <memset_verw+0xcc>
   1085c:	48 85 ff             	test   %rdi,%rdi
   1085f:	0f 84 97 00 00 00    	je     108fc <memset_verw+0xcc>
   10865:	4c 8d 6c 24 10       	lea    0x10(%rsp),%r13
   1086a:	48 89 d5             	mov    %rdx,%rbp
   1086d:	ba 08 00 00 00       	mov    $0x8,%edx
   10872:	4c 89 e3             	mov    %r12,%rbx
   10875:	4c 89 ef             	mov    %r13,%rdi
   10878:	40 88 74 24 0f       	mov    %sil,0xf(%rsp)
   1087d:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   10884:	00 00 
   10886:	e8 05 07 00 00       	call   10f90 <__memset>
   1088b:	48 83 fd 07          	cmp    $0x7,%rbp
   1088f:	76 4b                	jbe    108dc <memset_verw+0xac>
   10891:	4c 8d 74 24 0f       	lea    0xf(%rsp),%r14
   10896:	eb 21                	jmp    108b9 <memset_verw+0x89>
   10898:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1089f:	00 
   108a0:	48 89 df             	mov    %rbx,%rdi
   108a3:	4c 89 ee             	mov    %r13,%rsi
   108a6:	48 83 ed 08          	sub    $0x8,%rbp
   108aa:	48 83 c3 08          	add    $0x8,%rbx
   108ae:	e8 cd 06 00 00       	call   10f80 <__memcpy_8a>
   108b3:	48 83 fd 07          	cmp    $0x7,%rbp
   108b7:	76 1e                	jbe    108d7 <memset_verw+0xa7>
   108b9:	f6 c3 07             	test   $0x7,%bl
   108bc:	74 e2                	je     108a0 <memset_verw+0x70>
   108be:	48 89 df             	mov    %rbx,%rdi
   108c1:	4c 89 f6             	mov    %r14,%rsi
   108c4:	48 83 ed 01          	sub    $0x1,%rbp
   108c8:	48 83 c3 01          	add    $0x1,%rbx
   108cc:	e8 8f 06 00 00       	call   10f60 <__memcpy_verw>
   108d1:	48 83 fd 07          	cmp    $0x7,%rbp
   108d5:	77 e2                	ja     108b9 <memset_verw+0x89>
   108d7:	48 85 ed             	test   %rbp,%rbp
   108da:	74 20                	je     108fc <memset_verw+0xcc>
   108dc:	48 01 dd             	add    %rbx,%rbp
   108df:	4c 8d 6c 24 0f       	lea    0xf(%rsp),%r13
   108e4:	0f 1f 40 00          	nopl   0x0(%rax)
   108e8:	48 89 df             	mov    %rbx,%rdi
   108eb:	4c 89 ee             	mov    %r13,%rsi
   108ee:	48 83 c3 01          	add    $0x1,%rbx
   108f2:	e8 69 06 00 00       	call   10f60 <__memcpy_verw>
   108f7:	48 39 eb             	cmp    %rbp,%rbx
   108fa:	75 ec                	jne    108e8 <memset_verw+0xb8>
   108fc:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   10901:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
   10908:	00 00 
   1090a:	75 10                	jne    1091c <memset_verw+0xec>
   1090c:	48 83 c4 20          	add    $0x20,%rsp
   10910:	4c 89 e0             	mov    %r12,%rax
   10913:	5b                   	pop    %rbx
   10914:	5d                   	pop    %rbp
   10915:	41 5c                	pop    %r12
   10917:	41 5d                	pop    %r13
   10919:	41 5e                	pop    %r14
   1091b:	c3                   	ret    
   1091c:	e8 5f 01 00 00       	call   10a80 <__stack_chk_fail>
   10921:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   10928:	00 00 00 
   1092b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010930 <memset>:
   10930:	f3 0f 1e fa          	endbr64 
   10934:	e9 57 06 00 00       	jmp    10f90 <__memset>
   10939:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000010940 <memset_s>:
   10940:	f3 0f 1e fa          	endbr64 
   10944:	53                   	push   %rbx
   10945:	48 85 ff             	test   %rdi,%rdi
   10948:	74 3e                	je     10988 <memset_s+0x48>
   1094a:	48 89 f0             	mov    %rsi,%rax
   1094d:	89 d6                	mov    %edx,%esi
   1094f:	48 39 c8             	cmp    %rcx,%rax
   10952:	73 1c                	jae    10970 <memset_s+0x30>
   10954:	48 8b 0d fd 74 00 00 	mov    0x74fd(%rip),%rcx        # 17e58 <__memset_vp>
   1095b:	48 89 c2             	mov    %rax,%rdx
   1095e:	bb 4b 00 00 00       	mov    $0x4b,%ebx
   10963:	ff d1                	call   *%rcx
   10965:	e8 e6 05 00 00       	call   10f50 <__errno_location>
   1096a:	89 18                	mov    %ebx,(%rax)
   1096c:	89 d8                	mov    %ebx,%eax
   1096e:	5b                   	pop    %rbx
   1096f:	c3                   	ret    
   10970:	31 db                	xor    %ebx,%ebx
   10972:	48 8b 05 df 74 00 00 	mov    0x74df(%rip),%rax        # 17e58 <__memset_vp>
   10979:	48 89 ca             	mov    %rcx,%rdx
   1097c:	ff d0                	call   *%rax
   1097e:	89 d8                	mov    %ebx,%eax
   10980:	5b                   	pop    %rbx
   10981:	c3                   	ret    
   10982:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10988:	bb 16 00 00 00       	mov    $0x16,%ebx
   1098d:	eb d6                	jmp    10965 <memset_s+0x25>
   1098f:	90                   	nop

0000000000010990 <memset_verw_s>:
   10990:	f3 0f 1e fa          	endbr64 
   10994:	53                   	push   %rbx
   10995:	48 85 ff             	test   %rdi,%rdi
   10998:	74 36                	je     109d0 <memset_verw_s+0x40>
   1099a:	48 89 f0             	mov    %rsi,%rax
   1099d:	89 d6                	mov    %edx,%esi
   1099f:	48 39 c8             	cmp    %rcx,%rax
   109a2:	73 1c                	jae    109c0 <memset_verw_s+0x30>
   109a4:	48 89 c2             	mov    %rax,%rdx
   109a7:	bb 4b 00 00 00       	mov    $0x4b,%ebx
   109ac:	e8 7f fe ff ff       	call   10830 <memset_verw>
   109b1:	e8 9a 05 00 00       	call   10f50 <__errno_location>
   109b6:	89 18                	mov    %ebx,(%rax)
   109b8:	89 d8                	mov    %ebx,%eax
   109ba:	5b                   	pop    %rbx
   109bb:	c3                   	ret    
   109bc:	0f 1f 40 00          	nopl   0x0(%rax)
   109c0:	31 db                	xor    %ebx,%ebx
   109c2:	48 89 ca             	mov    %rcx,%rdx
   109c5:	e8 66 fe ff ff       	call   10830 <memset_verw>
   109ca:	89 d8                	mov    %ebx,%eax
   109cc:	5b                   	pop    %rbx
   109cd:	c3                   	ret    
   109ce:	66 90                	xchg   %ax,%ax
   109d0:	bb 16 00 00 00       	mov    $0x16,%ebx
   109d5:	eb da                	jmp    109b1 <memset_verw_s+0x21>
   109d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   109de:	00 00 

00000000000109e0 <sgx_init_string_lib>:
   109e0:	f3 0f 1e fa          	endbr64 
   109e4:	31 c0                	xor    %eax,%eax
   109e6:	c3                   	ret    
   109e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   109ee:	00 00 

00000000000109f0 <strlen>:
   109f0:	f3 0f 1e fa          	endbr64 
   109f4:	e9 f7 05 00 00       	jmp    10ff0 <_strlen>
   109f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000010a00 <strncpy>:
   10a00:	f3 0f 1e fa          	endbr64 
   10a04:	48 89 f8             	mov    %rdi,%rax
   10a07:	48 85 d2             	test   %rdx,%rdx
   10a0a:	74 6c                	je     10a78 <strncpy+0x78>
   10a0c:	48 8d 3c 17          	lea    (%rdi,%rdx,1),%rdi
   10a10:	49 89 f0             	mov    %rsi,%r8
   10a13:	48 89 c1             	mov    %rax,%rcx
   10a16:	eb 0d                	jmp    10a25 <strncpy+0x25>
   10a18:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   10a1f:	00 
   10a20:	48 39 f9             	cmp    %rdi,%rcx
   10a23:	74 53                	je     10a78 <strncpy+0x78>
   10a25:	45 0f b6 08          	movzbl (%r8),%r9d
   10a29:	49 83 c0 01          	add    $0x1,%r8
   10a2d:	48 83 c1 01          	add    $0x1,%rcx
   10a31:	44 88 49 ff          	mov    %r9b,-0x1(%rcx)
   10a35:	45 84 c9             	test   %r9b,%r9b
   10a38:	75 e6                	jne    10a20 <strncpy+0x20>
   10a3a:	4c 29 c6             	sub    %r8,%rsi
   10a3d:	48 01 d6             	add    %rdx,%rsi
   10a40:	74 36                	je     10a78 <strncpy+0x78>
   10a42:	48 8d 14 31          	lea    (%rcx,%rsi,1),%rdx
   10a46:	83 e6 01             	and    $0x1,%esi
   10a49:	74 15                	je     10a60 <strncpy+0x60>
   10a4b:	48 83 c1 01          	add    $0x1,%rcx
   10a4f:	c6 41 ff 00          	movb   $0x0,-0x1(%rcx)
   10a53:	48 39 ca             	cmp    %rcx,%rdx
   10a56:	74 21                	je     10a79 <strncpy+0x79>
   10a58:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   10a5f:	00 
   10a60:	c6 01 00             	movb   $0x0,(%rcx)
   10a63:	48 83 c1 02          	add    $0x2,%rcx
   10a67:	c6 41 ff 00          	movb   $0x0,-0x1(%rcx)
   10a6b:	48 39 ca             	cmp    %rcx,%rdx
   10a6e:	75 f0                	jne    10a60 <strncpy+0x60>
   10a70:	c3                   	ret    
   10a71:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10a78:	c3                   	ret    
   10a79:	c3                   	ret    
   10a7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000010a80 <__stack_chk_fail>:
   10a80:	f3 0f 1e fa          	endbr64 
   10a84:	50                   	push   %rax
   10a85:	58                   	pop    %rax
   10a86:	48 83 ec 08          	sub    $0x8,%rsp
   10a8a:	e8 a8 1a 00 00       	call   12537 <abort>
   10a8f:	90                   	nop

0000000000010a90 <__stack_chk_fail_local>:
   10a90:	f3 0f 1e fa          	endbr64 
   10a94:	50                   	push   %rax
   10a95:	58                   	pop    %rax
   10a96:	48 83 ec 08          	sub    $0x8,%rsp
   10a9a:	e8 98 1a 00 00       	call   12537 <abort>
   10a9f:	90                   	nop

0000000000010aa0 <__intel_security_check_cookie>:
   10aa0:	f3 0f 1e fa          	endbr64 
   10aa4:	48 39 3d 5d 73 00 00 	cmp    %rdi,0x735d(%rip)        # 17e08 <__intel_security_cookie>
   10aab:	75 01                	jne    10aae <__intel_security_check_cookie+0xe>
   10aad:	c3                   	ret    
   10aae:	50                   	push   %rax
   10aaf:	e8 83 1a 00 00       	call   12537 <abort>
   10ab4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   10abb:	00 00 00 
   10abe:	66 90                	xchg   %ax,%ax

0000000000010ac0 <sgx_thread_spin_init>:
   10ac0:	f3 0f 1e fa          	endbr64 
   10ac4:	48 85 ff             	test   %rdi,%rdi
   10ac7:	74 37                	je     10b00 <sgx_thread_spin_init+0x40>
   10ac9:	53                   	push   %rbx
   10aca:	be 18 00 00 00       	mov    $0x18,%esi
   10acf:	48 89 fb             	mov    %rdi,%rbx
   10ad2:	e8 a9 50 ff ff       	call   5b80 <sgx_is_within_enclave>
   10ad7:	85 c0                	test   %eax,%eax
   10ad9:	74 1d                	je     10af8 <sgx_thread_spin_init+0x38>
   10adb:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   10ae2:	31 c0                	xor    %eax,%eax
   10ae4:	48 c7 43 10 00 00 00 	movq   $0x0,0x10(%rbx)
   10aeb:	00 
   10aec:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%rbx)
   10af3:	5b                   	pop    %rbx
   10af4:	c3                   	ret    
   10af5:	0f 1f 00             	nopl   (%rax)
   10af8:	b8 16 00 00 00       	mov    $0x16,%eax
   10afd:	5b                   	pop    %rbx
   10afe:	c3                   	ret    
   10aff:	90                   	nop
   10b00:	b8 16 00 00 00       	mov    $0x16,%eax
   10b05:	c3                   	ret    
   10b06:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   10b0d:	00 00 00 

0000000000010b10 <sgx_thread_spin_destroy>:
   10b10:	f3 0f 1e fa          	endbr64 
   10b14:	48 85 ff             	test   %rdi,%rdi
   10b17:	74 6f                	je     10b88 <sgx_thread_spin_destroy+0x78>
   10b19:	55                   	push   %rbp
   10b1a:	be 18 00 00 00       	mov    $0x18,%esi
   10b1f:	53                   	push   %rbx
   10b20:	48 89 fb             	mov    %rdi,%rbx
   10b23:	48 83 ec 08          	sub    $0x8,%rsp
   10b27:	e8 54 50 ff ff       	call   5b80 <sgx_is_within_enclave>
   10b2c:	85 c0                	test   %eax,%eax
   10b2e:	74 30                	je     10b60 <sgx_thread_spin_destroy+0x50>
   10b30:	48 8d 6b 08          	lea    0x8(%rbx),%rbp
   10b34:	48 89 ef             	mov    %rbp,%rdi
   10b37:	e8 54 bc ff ff       	call   c790 <sgx_spin_lock>
   10b3c:	48 83 7b 10 00       	cmpq   $0x0,0x10(%rbx)
   10b41:	75 2d                	jne    10b70 <sgx_thread_spin_destroy+0x60>
   10b43:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   10b4a:	48 89 ef             	mov    %rbp,%rdi
   10b4d:	e8 ce bc ff ff       	call   c820 <sgx_spin_unlock>
   10b52:	48 83 c4 08          	add    $0x8,%rsp
   10b56:	31 c0                	xor    %eax,%eax
   10b58:	5b                   	pop    %rbx
   10b59:	5d                   	pop    %rbp
   10b5a:	c3                   	ret    
   10b5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10b60:	48 83 c4 08          	add    $0x8,%rsp
   10b64:	b8 16 00 00 00       	mov    $0x16,%eax
   10b69:	5b                   	pop    %rbx
   10b6a:	5d                   	pop    %rbp
   10b6b:	c3                   	ret    
   10b6c:	0f 1f 40 00          	nopl   0x0(%rax)
   10b70:	48 89 ef             	mov    %rbp,%rdi
   10b73:	e8 a8 bc ff ff       	call   c820 <sgx_spin_unlock>
   10b78:	48 83 c4 08          	add    $0x8,%rsp
   10b7c:	b8 10 00 00 00       	mov    $0x10,%eax
   10b81:	5b                   	pop    %rbx
   10b82:	5d                   	pop    %rbp
   10b83:	c3                   	ret    
   10b84:	0f 1f 40 00          	nopl   0x0(%rax)
   10b88:	b8 16 00 00 00       	mov    $0x16,%eax
   10b8d:	c3                   	ret    
   10b8e:	66 90                	xchg   %ax,%ax

0000000000010b90 <sgx_thread_spin_trylock>:
   10b90:	f3 0f 1e fa          	endbr64 
   10b94:	48 85 ff             	test   %rdi,%rdi
   10b97:	74 7f                	je     10c18 <sgx_thread_spin_trylock+0x88>
   10b99:	41 54                	push   %r12
   10b9b:	be 18 00 00 00       	mov    $0x18,%esi
   10ba0:	55                   	push   %rbp
   10ba1:	53                   	push   %rbx
   10ba2:	48 89 fb             	mov    %rdi,%rbx
   10ba5:	e8 d6 4f ff ff       	call   5b80 <sgx_is_within_enclave>
   10baa:	85 c0                	test   %eax,%eax
   10bac:	74 42                	je     10bf0 <sgx_thread_spin_trylock+0x60>
   10bae:	e8 90 15 00 00       	call   12143 <get_thread_data>
   10bb3:	4c 8d 63 08          	lea    0x8(%rbx),%r12
   10bb7:	4c 89 e7             	mov    %r12,%rdi
   10bba:	48 89 c5             	mov    %rax,%rbp
   10bbd:	e8 ce bb ff ff       	call   c790 <sgx_spin_lock>
   10bc2:	48 8b 43 10          	mov    0x10(%rbx),%rax
   10bc6:	48 39 e8             	cmp    %rbp,%rax
   10bc9:	74 09                	je     10bd4 <sgx_thread_spin_trylock+0x44>
   10bcb:	48 85 c0             	test   %rax,%rax
   10bce:	75 30                	jne    10c00 <sgx_thread_spin_trylock+0x70>
   10bd0:	48 89 6b 10          	mov    %rbp,0x10(%rbx)
   10bd4:	48 83 03 01          	addq   $0x1,(%rbx)
   10bd8:	4c 89 e7             	mov    %r12,%rdi
   10bdb:	e8 40 bc ff ff       	call   c820 <sgx_spin_unlock>
   10be0:	5b                   	pop    %rbx
   10be1:	31 c0                	xor    %eax,%eax
   10be3:	5d                   	pop    %rbp
   10be4:	41 5c                	pop    %r12
   10be6:	c3                   	ret    
   10be7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   10bee:	00 00 
   10bf0:	5b                   	pop    %rbx
   10bf1:	b8 16 00 00 00       	mov    $0x16,%eax
   10bf6:	5d                   	pop    %rbp
   10bf7:	41 5c                	pop    %r12
   10bf9:	c3                   	ret    
   10bfa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10c00:	4c 89 e7             	mov    %r12,%rdi
   10c03:	e8 18 bc ff ff       	call   c820 <sgx_spin_unlock>
   10c08:	5b                   	pop    %rbx
   10c09:	b8 10 00 00 00       	mov    $0x10,%eax
   10c0e:	5d                   	pop    %rbp
   10c0f:	41 5c                	pop    %r12
   10c11:	c3                   	ret    
   10c12:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10c18:	b8 16 00 00 00       	mov    $0x16,%eax
   10c1d:	c3                   	ret    
   10c1e:	66 90                	xchg   %ax,%ax

0000000000010c20 <sgx_thread_spin_unlock>:
   10c20:	f3 0f 1e fa          	endbr64 
   10c24:	48 85 ff             	test   %rdi,%rdi
   10c27:	0f 84 8b 00 00 00    	je     10cb8 <sgx_thread_spin_unlock+0x98>
   10c2d:	41 54                	push   %r12
   10c2f:	be 18 00 00 00       	mov    $0x18,%esi
   10c34:	55                   	push   %rbp
   10c35:	53                   	push   %rbx
   10c36:	48 89 fb             	mov    %rdi,%rbx
   10c39:	e8 42 4f ff ff       	call   5b80 <sgx_is_within_enclave>
   10c3e:	85 c0                	test   %eax,%eax
   10c40:	74 56                	je     10c98 <sgx_thread_spin_unlock+0x78>
   10c42:	e8 fc 14 00 00       	call   12143 <get_thread_data>
   10c47:	4c 8d 63 08          	lea    0x8(%rbx),%r12
   10c4b:	4c 89 e7             	mov    %r12,%rdi
   10c4e:	48 89 c5             	mov    %rax,%rbp
   10c51:	e8 3a bb ff ff       	call   c790 <sgx_spin_lock>
   10c56:	48 8b 43 10          	mov    0x10(%rbx),%rax
   10c5a:	48 85 c0             	test   %rax,%rax
   10c5d:	74 21                	je     10c80 <sgx_thread_spin_unlock+0x60>
   10c5f:	48 39 e8             	cmp    %rbp,%rax
   10c62:	75 1c                	jne    10c80 <sgx_thread_spin_unlock+0x60>
   10c64:	48 83 2b 01          	subq   $0x1,(%rbx)
   10c68:	74 3e                	je     10ca8 <sgx_thread_spin_unlock+0x88>
   10c6a:	4c 89 e7             	mov    %r12,%rdi
   10c6d:	e8 ae bb ff ff       	call   c820 <sgx_spin_unlock>
   10c72:	5b                   	pop    %rbx
   10c73:	31 c0                	xor    %eax,%eax
   10c75:	5d                   	pop    %rbp
   10c76:	41 5c                	pop    %r12
   10c78:	c3                   	ret    
   10c79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10c80:	4c 89 e7             	mov    %r12,%rdi
   10c83:	e8 98 bb ff ff       	call   c820 <sgx_spin_unlock>
   10c88:	5b                   	pop    %rbx
   10c89:	b8 01 00 00 00       	mov    $0x1,%eax
   10c8e:	5d                   	pop    %rbp
   10c8f:	41 5c                	pop    %r12
   10c91:	c3                   	ret    
   10c92:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10c98:	5b                   	pop    %rbx
   10c99:	b8 16 00 00 00       	mov    $0x16,%eax
   10c9e:	5d                   	pop    %rbp
   10c9f:	41 5c                	pop    %r12
   10ca1:	c3                   	ret    
   10ca2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10ca8:	48 c7 43 10 00 00 00 	movq   $0x0,0x10(%rbx)
   10caf:	00 
   10cb0:	eb b8                	jmp    10c6a <sgx_thread_spin_unlock+0x4a>
   10cb2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10cb8:	b8 16 00 00 00       	mov    $0x16,%eax
   10cbd:	c3                   	ret    
   10cbe:	66 90                	xchg   %ax,%ax

0000000000010cc0 <memcpy_s>:
   10cc0:	f3 0f 1e fa          	endbr64 
   10cc4:	48 85 c9             	test   %rcx,%rcx
   10cc7:	74 4f                	je     10d18 <memcpy_s+0x58>
   10cc9:	53                   	push   %rbx
   10cca:	48 85 ff             	test   %rdi,%rdi
   10ccd:	74 51                	je     10d20 <memcpy_s+0x60>
   10ccf:	48 89 d3             	mov    %rdx,%rbx
   10cd2:	48 85 d2             	test   %rdx,%rdx
   10cd5:	74 19                	je     10cf0 <memcpy_s+0x30>
   10cd7:	48 39 ce             	cmp    %rcx,%rsi
   10cda:	72 14                	jb     10cf0 <memcpy_s+0x30>
   10cdc:	48 89 de             	mov    %rbx,%rsi
   10cdf:	48 89 ca             	mov    %rcx,%rdx
   10ce2:	e8 09 fa ff ff       	call   106f0 <memcpy>
   10ce7:	31 c0                	xor    %eax,%eax
   10ce9:	5b                   	pop    %rbx
   10cea:	c3                   	ret    
   10ceb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10cf0:	48 89 f2             	mov    %rsi,%rdx
   10cf3:	31 f6                	xor    %esi,%esi
   10cf5:	e8 36 fc ff ff       	call   10930 <memset>
   10cfa:	48 85 db             	test   %rbx,%rbx
   10cfd:	74 21                	je     10d20 <memcpy_s+0x60>
   10cff:	e8 4c 02 00 00       	call   10f50 <__errno_location>
   10d04:	c7 00 22 00 00 00    	movl   $0x22,(%rax)
   10d0a:	b8 22 00 00 00       	mov    $0x22,%eax
   10d0f:	5b                   	pop    %rbx
   10d10:	c3                   	ret    
   10d11:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10d18:	31 c0                	xor    %eax,%eax
   10d1a:	c3                   	ret    
   10d1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10d20:	e8 2b 02 00 00       	call   10f50 <__errno_location>
   10d25:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   10d2b:	b8 16 00 00 00       	mov    $0x16,%eax
   10d30:	5b                   	pop    %rbx
   10d31:	c3                   	ret    
   10d32:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   10d39:	00 00 00 
   10d3c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000010d40 <memcpy_verw_s>:
   10d40:	f3 0f 1e fa          	endbr64 
   10d44:	48 85 c9             	test   %rcx,%rcx
   10d47:	74 4f                	je     10d98 <memcpy_verw_s+0x58>
   10d49:	53                   	push   %rbx
   10d4a:	48 85 ff             	test   %rdi,%rdi
   10d4d:	74 51                	je     10da0 <memcpy_verw_s+0x60>
   10d4f:	48 89 d3             	mov    %rdx,%rbx
   10d52:	48 85 d2             	test   %rdx,%rdx
   10d55:	74 19                	je     10d70 <memcpy_verw_s+0x30>
   10d57:	48 39 ce             	cmp    %rcx,%rsi
   10d5a:	72 14                	jb     10d70 <memcpy_verw_s+0x30>
   10d5c:	48 89 de             	mov    %rbx,%rsi
   10d5f:	48 89 ca             	mov    %rcx,%rdx
   10d62:	e8 b9 f7 ff ff       	call   10520 <memcpy_verw>
   10d67:	31 c0                	xor    %eax,%eax
   10d69:	5b                   	pop    %rbx
   10d6a:	c3                   	ret    
   10d6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10d70:	48 89 f2             	mov    %rsi,%rdx
   10d73:	31 f6                	xor    %esi,%esi
   10d75:	e8 b6 fa ff ff       	call   10830 <memset_verw>
   10d7a:	48 85 db             	test   %rbx,%rbx
   10d7d:	74 21                	je     10da0 <memcpy_verw_s+0x60>
   10d7f:	e8 cc 01 00 00       	call   10f50 <__errno_location>
   10d84:	c7 00 22 00 00 00    	movl   $0x22,(%rax)
   10d8a:	b8 22 00 00 00       	mov    $0x22,%eax
   10d8f:	5b                   	pop    %rbx
   10d90:	c3                   	ret    
   10d91:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10d98:	31 c0                	xor    %eax,%eax
   10d9a:	c3                   	ret    
   10d9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10da0:	e8 ab 01 00 00       	call   10f50 <__errno_location>
   10da5:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   10dab:	b8 16 00 00 00       	mov    $0x16,%eax
   10db0:	5b                   	pop    %rbx
   10db1:	c3                   	ret    

0000000000010db2 <setjmp>:
   10db2:	f3 0f 1e fa          	endbr64 
   10db6:	50                   	push   %rax
   10db7:	53                   	push   %rbx
   10db8:	51                   	push   %rcx
   10db9:	52                   	push   %rdx
   10dba:	56                   	push   %rsi
   10dbb:	57                   	push   %rdi
   10dbc:	41 50                	push   %r8
   10dbe:	41 51                	push   %r9
   10dc0:	41 52                	push   %r10
   10dc2:	41 53                	push   %r11
   10dc4:	41 54                	push   %r12
   10dc6:	41 55                	push   %r13
   10dc8:	41 56                	push   %r14
   10dca:	41 57                	push   %r15
   10dcc:	48 c7 c6 08 00 00 00 	mov    $0x8,%rsi
   10dd3:	e8 a8 4d ff ff       	call   5b80 <sgx_is_within_enclave>
   10dd8:	83 f8 00             	cmp    $0x0,%eax
   10ddb:	74 60                	je     10e3d <.crash>
   10ddd:	41 5f                	pop    %r15
   10ddf:	41 5e                	pop    %r14
   10de1:	41 5d                	pop    %r13
   10de3:	41 5c                	pop    %r12
   10de5:	41 5b                	pop    %r11
   10de7:	41 5a                	pop    %r10
   10de9:	41 59                	pop    %r9
   10deb:	41 58                	pop    %r8
   10ded:	5f                   	pop    %rdi
   10dee:	5e                   	pop    %rsi
   10def:	5a                   	pop    %rdx
   10df0:	59                   	pop    %rcx
   10df1:	5b                   	pop    %rbx
   10df2:	58                   	pop    %rax
   10df3:	4c 8b 1c 24          	mov    (%rsp),%r11
   10df7:	48 89 1f             	mov    %rbx,(%rdi)
   10dfa:	48 89 6f 08          	mov    %rbp,0x8(%rdi)
   10dfe:	4c 89 67 10          	mov    %r12,0x10(%rdi)
   10e02:	4c 89 6f 18          	mov    %r13,0x18(%rdi)
   10e06:	4c 89 77 20          	mov    %r14,0x20(%rdi)
   10e0a:	4c 89 7f 28          	mov    %r15,0x28(%rdi)
   10e0e:	48 89 67 30          	mov    %rsp,0x30(%rdi)
   10e12:	4c 89 5f 38          	mov    %r11,0x38(%rdi)
   10e16:	e8 36 13 00 00       	call   12151 <get_stack_guard>
   10e1b:	48 31 07             	xor    %rax,(%rdi)
   10e1e:	48 31 47 08          	xor    %rax,0x8(%rdi)
   10e22:	48 31 47 10          	xor    %rax,0x10(%rdi)
   10e26:	48 31 47 18          	xor    %rax,0x18(%rdi)
   10e2a:	48 31 47 20          	xor    %rax,0x20(%rdi)
   10e2e:	48 31 47 28          	xor    %rax,0x28(%rdi)
   10e32:	48 31 47 30          	xor    %rax,0x30(%rdi)
   10e36:	48 31 47 38          	xor    %rax,0x38(%rdi)
   10e3a:	31 c0                	xor    %eax,%eax
   10e3c:	c3                   	ret    

0000000000010e3d <.crash>:
   10e3d:	0f 0b                	ud2    

0000000000010e3f <longjmp>:
   10e3f:	f3 0f 1e fa          	endbr64 
   10e43:	50                   	push   %rax
   10e44:	53                   	push   %rbx
   10e45:	51                   	push   %rcx
   10e46:	52                   	push   %rdx
   10e47:	56                   	push   %rsi
   10e48:	57                   	push   %rdi
   10e49:	41 50                	push   %r8
   10e4b:	41 51                	push   %r9
   10e4d:	41 52                	push   %r10
   10e4f:	41 53                	push   %r11
   10e51:	41 54                	push   %r12
   10e53:	41 55                	push   %r13
   10e55:	41 56                	push   %r14
   10e57:	41 57                	push   %r15
   10e59:	57                   	push   %rdi
   10e5a:	48 c7 c6 08 00 00 00 	mov    $0x8,%rsi
   10e61:	e8 1a 4d ff ff       	call   5b80 <sgx_is_within_enclave>
   10e66:	83 f8 00             	cmp    $0x0,%eax
   10e69:	74 d2                	je     10e3d <.crash>
   10e6b:	5f                   	pop    %rdi
   10e6c:	48 8b 57 30          	mov    0x30(%rdi),%rdx
   10e70:	e8 dc 12 00 00       	call   12151 <get_stack_guard>
   10e75:	48 31 c2             	xor    %rax,%rdx
   10e78:	52                   	push   %rdx
   10e79:	5f                   	pop    %rdi
   10e7a:	e8 31 68 ff ff       	call   76b0 <is_valid_sp>
   10e7f:	83 f8 00             	cmp    $0x0,%eax
   10e82:	74 b9                	je     10e3d <.crash>
   10e84:	41 5f                	pop    %r15
   10e86:	41 5e                	pop    %r14
   10e88:	41 5d                	pop    %r13
   10e8a:	41 5c                	pop    %r12
   10e8c:	41 5b                	pop    %r11
   10e8e:	41 5a                	pop    %r10
   10e90:	41 59                	pop    %r9
   10e92:	41 58                	pop    %r8
   10e94:	5f                   	pop    %rdi
   10e95:	5e                   	pop    %rsi
   10e96:	5a                   	pop    %rdx
   10e97:	59                   	pop    %rcx
   10e98:	5b                   	pop    %rbx
   10e99:	58                   	pop    %rax
   10e9a:	89 f0                	mov    %esi,%eax
   10e9c:	48 8b 1f             	mov    (%rdi),%rbx
   10e9f:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   10ea3:	4c 8b 67 10          	mov    0x10(%rdi),%r12
   10ea7:	4c 8b 6f 18          	mov    0x18(%rdi),%r13
   10eab:	4c 8b 77 20          	mov    0x20(%rdi),%r14
   10eaf:	4c 8b 7f 28          	mov    0x28(%rdi),%r15
   10eb3:	48 8b 57 30          	mov    0x30(%rdi),%rdx
   10eb7:	48 8b 4f 38          	mov    0x38(%rdi),%rcx
   10ebb:	50                   	push   %rax
   10ebc:	e8 90 12 00 00       	call   12151 <get_stack_guard>
   10ec1:	48 31 c3             	xor    %rax,%rbx
   10ec4:	48 31 c6             	xor    %rax,%rsi
   10ec7:	49 31 c4             	xor    %rax,%r12
   10eca:	49 31 c5             	xor    %rax,%r13
   10ecd:	49 31 c6             	xor    %rax,%r14
   10ed0:	49 31 c7             	xor    %rax,%r15
   10ed3:	48 31 c2             	xor    %rax,%rdx
   10ed6:	48 31 c1             	xor    %rax,%rcx
   10ed9:	58                   	pop    %rax
   10eda:	48 89 f5             	mov    %rsi,%rbp
   10edd:	48 89 0a             	mov    %rcx,(%rdx)
   10ee0:	48 89 d4             	mov    %rdx,%rsp
   10ee3:	85 c0                	test   %eax,%eax
   10ee5:	75 02                	jne    10ee9 <longjmp+0xaa>
   10ee7:	ff c0                	inc    %eax
   10ee9:	c3                   	ret    
   10eea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000010ef0 <rsrv_mem_init>:
   10ef0:	f3 0f 1e fa          	endbr64 
   10ef4:	48 85 ff             	test   %rdi,%rdi
   10ef7:	74 47                	je     10f40 <rsrv_mem_init+0x50>
   10ef9:	48 89 f0             	mov    %rsi,%rax
   10efc:	b9 01 00 00 00       	mov    $0x1,%ecx
   10f01:	48 09 d0             	or     %rdx,%rax
   10f04:	48 09 f8             	or     %rdi,%rax
   10f07:	a9 ff 0f 00 00       	test   $0xfff,%eax
   10f0c:	74 0a                	je     10f18 <rsrv_mem_init+0x28>
   10f0e:	89 c8                	mov    %ecx,%eax
   10f10:	c3                   	ret    
   10f11:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10f18:	48 89 f0             	mov    %rsi,%rax
   10f1b:	48 03 05 4e 6f 00 00 	add    0x6f4e(%rip),%rax        # 17e70 <rsrv_mem_base>
   10f22:	72 ea                	jb     10f0e <rsrv_mem_init+0x1e>
   10f24:	31 c9                	xor    %ecx,%ecx
   10f26:	48 89 3d 43 6f 00 00 	mov    %rdi,0x6f43(%rip)        # 17e70 <rsrv_mem_base>
   10f2d:	48 89 35 34 6f 00 00 	mov    %rsi,0x6f34(%rip)        # 17e68 <rsrv_mem_size>
   10f34:	89 c8                	mov    %ecx,%eax
   10f36:	48 89 15 23 6f 00 00 	mov    %rdx,0x6f23(%rip)        # 17e60 <rsrv_mem_min_size>
   10f3d:	c3                   	ret    
   10f3e:	66 90                	xchg   %ax,%ax
   10f40:	b9 01 00 00 00       	mov    $0x1,%ecx
   10f45:	89 c8                	mov    %ecx,%eax
   10f47:	c3                   	ret    
   10f48:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   10f4f:	00 

0000000000010f50 <__errno_location>:
   10f50:	f3 0f 1e fa          	endbr64 
   10f54:	e9 a7 66 ff ff       	jmp    7600 <get_errno_addr>
   10f59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000010f60 <__memcpy_verw>:
   10f60:	8a 06                	mov    (%rsi),%al
   10f62:	48 83 ec 08          	sub    $0x8,%rsp
   10f66:	8c 1c 24             	mov    %ds,(%rsp)
   10f69:	0f 00 2c 24          	verw   (%rsp)
   10f6d:	88 07                	mov    %al,(%rdi)
   10f6f:	0f ae f0             	mfence 
   10f72:	0f ae e8             	lfence 
   10f75:	48 83 c4 08          	add    $0x8,%rsp
   10f79:	48 89 f8             	mov    %rdi,%rax
   10f7c:	c3                   	ret    
   10f7d:	cc                   	int3   
   10f7e:	cc                   	int3   
   10f7f:	cc                   	int3   

0000000000010f80 <__memcpy_8a>:
   10f80:	48 8b 06             	mov    (%rsi),%rax
   10f83:	48 89 07             	mov    %rax,(%rdi)
   10f86:	48 89 f8             	mov    %rdi,%rax
   10f89:	c3                   	ret    
   10f8a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000010f90 <__memset>:
   10f90:	48 89 f0             	mov    %rsi,%rax
   10f93:	48 25 ff 00 00 00    	and    $0xff,%rax
   10f99:	48 89 d1             	mov    %rdx,%rcx
   10f9c:	49 89 fb             	mov    %rdi,%r11
   10f9f:	fc                   	cld    
   10fa0:	48 83 f9 0f          	cmp    $0xf,%rcx
   10fa4:	7e 38                	jle    10fde <L1>
   10fa6:	88 c4                	mov    %al,%ah
   10fa8:	89 c2                	mov    %eax,%edx
   10faa:	c1 e0 10             	shl    $0x10,%eax
   10fad:	09 d0                	or     %edx,%eax
   10faf:	89 c2                	mov    %eax,%edx
   10fb1:	48 c1 e0 20          	shl    $0x20,%rax
   10fb5:	48 09 d0             	or     %rdx,%rax
   10fb8:	48 89 fa             	mov    %rdi,%rdx
   10fbb:	48 f7 da             	neg    %rdx
   10fbe:	48 83 e2 07          	and    $0x7,%rdx
   10fc2:	49 89 c8             	mov    %rcx,%r8
   10fc5:	49 29 d0             	sub    %rdx,%r8
   10fc8:	48 89 d1             	mov    %rdx,%rcx
   10fcb:	f3 aa                	rep stos %al,%es:(%rdi)
   10fcd:	4c 89 c1             	mov    %r8,%rcx
   10fd0:	48 c1 e9 03          	shr    $0x3,%rcx
   10fd4:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   10fd7:	4c 89 c1             	mov    %r8,%rcx
   10fda:	48 83 e1 07          	and    $0x7,%rcx

0000000000010fde <L1>:
   10fde:	f3 aa                	rep stos %al,%es:(%rdi)
   10fe0:	4c 89 d8             	mov    %r11,%rax
   10fe3:	c3                   	ret    
   10fe4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   10feb:	00 00 00 
   10fee:	66 90                	xchg   %ax,%ax

0000000000010ff0 <_strlen>:
   10ff0:	49 b8 01 01 01 01 01 	movabs $0x101010101010101,%r8
   10ff7:	01 01 01 
   10ffa:	40 f6 c7 07          	test   $0x7,%dil
   10ffe:	48 89 f8             	mov    %rdi,%rax
   11001:	49 b9 80 80 80 80 80 	movabs $0x8080808080808080,%r9
   11008:	80 80 80 
   1100b:	75 33                	jne    11040 <_strlen+0x50>
   1100d:	0f 1f 00             	nopl   (%rax)
   11010:	48 8b 10             	mov    (%rax),%rdx
   11013:	48 83 c0 08          	add    $0x8,%rax
   11017:	48 89 d1             	mov    %rdx,%rcx
   1101a:	4c 29 c2             	sub    %r8,%rdx
   1101d:	48 f7 d1             	not    %rcx
   11020:	4c 21 ca             	and    %r9,%rdx
   11023:	74 eb                	je     11010 <_strlen+0x20>
   11025:	48 21 ca             	and    %rcx,%rdx
   11028:	74 e6                	je     11010 <_strlen+0x20>
   1102a:	48 29 f8             	sub    %rdi,%rax
   1102d:	48 0f bc d2          	bsf    %rdx,%rdx
   11031:	48 c1 ea 03          	shr    $0x3,%rdx
   11035:	48 8d 44 10 f8       	lea    -0x8(%rax,%rdx,1),%rax
   1103a:	c3                   	ret    
   1103b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   11040:	88 c1                	mov    %al,%cl
   11042:	48 c7 c6 01 00 00 00 	mov    $0x1,%rsi
   11049:	80 e1 07             	and    $0x7,%cl
   1104c:	24 f8                	and    $0xf8,%al
   1104e:	c0 e1 03             	shl    $0x3,%cl
   11051:	48 8b 10             	mov    (%rax),%rdx
   11054:	48 d3 e6             	shl    %cl,%rsi
   11057:	48 ff ce             	dec    %rsi
   1105a:	48 09 f2             	or     %rsi,%rdx
   1105d:	eb b4                	jmp    11013 <_strlen+0x23>
   1105f:	90                   	nop

0000000000011060 <sgx_init_crypto_lib>:
   11060:	f3 0f 1e fa          	endbr64 
   11064:	e9 07 00 00 00       	jmp    11070 <init_ipp_cpuid>
   11069:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000011070 <init_ipp_cpuid>:
   11070:	f3 0f 1e fa          	endbr64 
   11074:	48 83 3d 74 6f 00 00 	cmpq   $0x0,0x6f74(%rip)        # 17ff0 <ippcpSetCpuFeatures>
   1107b:	00 
   1107c:	0f 84 2e 02 00 00    	je     112b0 <init_ipp_cpuid+0x240>
   11082:	48 89 f8             	mov    %rdi,%rax
   11085:	ba 02 00 00 00       	mov    $0x2,%edx
   1108a:	f6 c4 02             	test   $0x2,%ah
   1108d:	0f 84 1f 02 00 00    	je     112b2 <init_ipp_cpuid+0x242>
   11093:	48 89 fa             	mov    %rdi,%rdx
   11096:	48 83 ec 08          	sub    $0x8,%rsp
   1109a:	48 b9 00 00 00 00 08 	movabs $0x800000000,%rcx
   110a1:	00 00 00 
   110a4:	81 e2 00 08 00 00    	and    $0x800,%edx
   110aa:	48 83 fa 01          	cmp    $0x1,%rdx
   110ae:	48 19 ff             	sbb    %rdi,%rdi
   110b1:	48 83 e7 e0          	and    $0xffffffffffffffe0,%rdi
   110b5:	48 83 c7 7f          	add    $0x7f,%rdi
   110b9:	48 89 fa             	mov    %rdi,%rdx
   110bc:	80 ca 80             	or     $0x80,%dl
   110bf:	f6 c4 04             	test   $0x4,%ah
   110c2:	48 0f 45 fa          	cmovne %rdx,%rdi
   110c6:	48 89 fa             	mov    %rdi,%rdx
   110c9:	80 ce 03             	or     $0x3,%dh
   110cc:	a9 00 00 01 00       	test   $0x10000,%eax
   110d1:	48 0f 45 fa          	cmovne %rdx,%rdi
   110d5:	48 89 fa             	mov    %rdi,%rdx
   110d8:	80 ce 04             	or     $0x4,%dh
   110db:	f6 c4 40             	test   $0x40,%ah
   110de:	48 0f 45 fa          	cmovne %rdx,%rdi
   110e2:	48 89 fa             	mov    %rdi,%rdx
   110e5:	80 ce 08             	or     $0x8,%dh
   110e8:	f6 c4 20             	test   $0x20,%ah
   110eb:	48 0f 45 fa          	cmovne %rdx,%rdi
   110ef:	48 89 fa             	mov    %rdi,%rdx
   110f2:	80 ce 20             	or     $0x20,%dh
   110f5:	a9 00 00 02 00       	test   $0x20000,%eax
   110fa:	48 0f 45 fa          	cmovne %rdx,%rdi
   110fe:	48 89 fa             	mov    %rdi,%rdx
   11101:	80 ce 40             	or     $0x40,%dh
   11104:	f6 c4 80             	test   $0x80,%ah
   11107:	48 0f 45 fa          	cmovne %rdx,%rdi
   1110b:	48 89 fa             	mov    %rdi,%rdx
   1110e:	80 ce 80             	or     $0x80,%dh
   11111:	a9 00 00 80 00       	test   $0x800000,%eax
   11116:	48 0f 45 fa          	cmovne %rdx,%rdi
   1111a:	48 89 fa             	mov    %rdi,%rdx
   1111d:	48 81 ca 00 00 01 00 	or     $0x10000,%rdx
   11124:	a9 00 00 00 10       	test   $0x10000000,%eax
   11129:	48 0f 45 fa          	cmovne %rdx,%rdi
   1112d:	48 89 fa             	mov    %rdi,%rdx
   11130:	48 81 ca 00 00 02 00 	or     $0x20000,%rdx
   11137:	a9 00 00 00 20       	test   $0x20000000,%eax
   1113c:	48 0f 45 fa          	cmovne %rdx,%rdi
   11140:	48 89 fa             	mov    %rdi,%rdx
   11143:	48 81 ca 00 00 08 00 	or     $0x80000,%rdx
   1114a:	48 85 c8             	test   %rcx,%rax
   1114d:	48 0f 45 fa          	cmovne %rdx,%rdi
   11151:	a9 00 00 00 08       	test   $0x8000000,%eax
   11156:	74 0d                	je     11165 <init_ipp_cpuid+0xf5>
   11158:	48 ba 00 00 10 00 02 	movabs $0x200100000,%rdx
   1115f:	00 00 00 
   11162:	48 09 d7             	or     %rdx,%rdi
   11165:	48 b9 00 00 00 00 02 	movabs $0x200000000,%rcx
   1116c:	00 00 00 
   1116f:	48 89 fa             	mov    %rdi,%rdx
   11172:	48 81 ca 00 00 80 00 	or     $0x800000,%rdx
   11179:	48 85 c8             	test   %rcx,%rax
   1117c:	48 b9 00 00 00 00 01 	movabs $0x100000000,%rcx
   11183:	00 00 00 
   11186:	48 0f 45 fa          	cmovne %rdx,%rdi
   1118a:	48 89 fa             	mov    %rdi,%rdx
   1118d:	48 81 ca 00 00 40 00 	or     $0x400000,%rdx
   11194:	48 85 c8             	test   %rcx,%rax
   11197:	48 b9 00 00 00 00 04 	movabs $0x400000000,%rcx
   1119e:	00 00 00 
   111a1:	48 0f 45 fa          	cmovne %rdx,%rdi
   111a5:	48 89 fa             	mov    %rdi,%rdx
   111a8:	48 81 ca 00 00 20 00 	or     $0x200000,%rdx
   111af:	48 85 c8             	test   %rcx,%rax
   111b2:	48 b9 00 00 00 00 20 	movabs $0x2000000000,%rcx
   111b9:	00 00 00 
   111bc:	48 0f 45 fa          	cmovne %rdx,%rdi
   111c0:	48 89 fa             	mov    %rdi,%rdx
   111c3:	48 81 ca 00 00 00 02 	or     $0x2000000,%rdx
   111ca:	a9 00 00 00 01       	test   $0x1000000,%eax
   111cf:	48 0f 45 fa          	cmovne %rdx,%rdi
   111d3:	48 89 fa             	mov    %rdi,%rdx
   111d6:	48 81 ca 00 00 00 01 	or     $0x1000000,%rdx
   111dd:	48 85 c8             	test   %rcx,%rax
   111e0:	48 b9 00 00 00 00 40 	movabs $0x4000000000,%rcx
   111e7:	00 00 00 
   111ea:	48 0f 45 fa          	cmovne %rdx,%rdi
   111ee:	48 89 fa             	mov    %rdi,%rdx
   111f1:	48 81 ca 00 00 00 04 	or     $0x4000000,%rdx
   111f8:	48 85 c8             	test   %rcx,%rax
   111fb:	48 b9 00 00 00 00 80 	movabs $0x8000000000,%rcx
   11202:	00 00 00 
   11205:	48 0f 45 fa          	cmovne %rdx,%rdi
   11209:	48 89 fa             	mov    %rdi,%rdx
   1120c:	48 81 ca 00 00 00 08 	or     $0x8000000,%rdx
   11213:	48 85 c8             	test   %rcx,%rax
   11216:	48 b9 00 00 00 00 00 	movabs $0x20000000000,%rcx
   1121d:	02 00 00 
   11220:	48 0f 45 fa          	cmovne %rdx,%rdi
   11224:	48 89 fa             	mov    %rdi,%rdx
   11227:	48 81 ca 00 00 00 40 	or     $0x40000000,%rdx
   1122e:	48 85 c8             	test   %rcx,%rax
   11231:	48 b9 00 00 00 00 00 	movabs $0x10000000000,%rcx
   11238:	01 00 00 
   1123b:	48 0f 45 fa          	cmovne %rdx,%rdi
   1123f:	48 89 fa             	mov    %rdi,%rdx
   11242:	48 81 ca 00 00 00 20 	or     $0x20000000,%rdx
   11249:	48 85 c8             	test   %rcx,%rax
   1124c:	48 0f 45 fa          	cmovne %rdx,%rdi
   11250:	48 0f ba e0 2e       	bt     $0x2e,%rax
   11255:	73 05                	jae    1125c <init_ipp_cpuid+0x1ec>
   11257:	48 0f ba ef 23       	bts    $0x23,%rdi
   1125c:	a9 00 00 00 40       	test   $0x40000000,%eax
   11261:	74 05                	je     11268 <init_ipp_cpuid+0x1f8>
   11263:	48 0f ba ef 20       	bts    $0x20,%rdi
   11268:	48 0f ba e0 2d       	bt     $0x2d,%rax
   1126d:	73 05                	jae    11274 <init_ipp_cpuid+0x204>
   1126f:	48 0f ba ef 22       	bts    $0x22,%rdi
   11274:	48 0f ba e0 2c       	bt     $0x2c,%rax
   11279:	73 05                	jae    11280 <init_ipp_cpuid+0x210>
   1127b:	48 0f ba ef 25       	bts    $0x25,%rdi
   11280:	48 0f ba e0 2f       	bt     $0x2f,%rax
   11285:	73 05                	jae    1128c <init_ipp_cpuid+0x21c>
   11287:	48 0f ba ef 24       	bts    $0x24,%rdi
   1128c:	48 0f ba ef 3f       	bts    $0x3f,%rdi
   11291:	e8 82 fd fe ff       	call   1018 <ippcpSetCpuFeatures@plt>
   11296:	31 d2                	xor    %edx,%edx
   11298:	85 c0                	test   %eax,%eax
   1129a:	0f 95 c2             	setne  %dl
   1129d:	48 83 c4 08          	add    $0x8,%rsp
   112a1:	01 d2                	add    %edx,%edx
   112a3:	89 d0                	mov    %edx,%eax
   112a5:	c3                   	ret    
   112a6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   112ad:	00 00 00 
   112b0:	31 d2                	xor    %edx,%edx
   112b2:	89 d0                	mov    %edx,%eax
   112b4:	c3                   	ret    
   112b5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   112bc:	00 00 00 
   112bf:	90                   	nop

00000000000112c0 <sgx_create_report>:
   112c0:	f3 0f 1e fa          	endbr64 
   112c4:	55                   	push   %rbp
   112c5:	48 89 e5             	mov    %rsp,%rbp
   112c8:	41 57                	push   %r15
   112ca:	49 89 f7             	mov    %rsi,%r15
   112cd:	31 f6                	xor    %esi,%esi
   112cf:	41 56                	push   %r14
   112d1:	41 55                	push   %r13
   112d3:	49 89 fd             	mov    %rdi,%r13
   112d6:	41 54                	push   %r12
   112d8:	53                   	push   %rbx
   112d9:	48 89 d3             	mov    %rdx,%rbx
   112dc:	ba 40 00 00 00       	mov    $0x40,%edx
   112e1:	48 81 e4 00 fe ff ff 	and    $0xfffffffffffffe00,%rsp
   112e8:	48 81 ec 00 08 00 00 	sub    $0x800,%rsp
   112ef:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   112f6:	00 00 
   112f8:	48 89 84 24 f8 07 00 	mov    %rax,0x7f8(%rsp)
   112ff:	00 
   11300:	31 c0                	xor    %eax,%eax
   11302:	48 8d 84 24 80 01 00 	lea    0x180(%rsp),%rax
   11309:	00 
   1130a:	4c 8d b4 24 00 04 00 	lea    0x400(%rsp),%r14
   11311:	00 
   11312:	48 89 c7             	mov    %rax,%rdi
   11315:	48 89 84 24 78 01 00 	mov    %rax,0x178(%rsp)
   1131c:	00 
   1131d:	4c 8d a4 24 00 02 00 	lea    0x200(%rsp),%r12
   11324:	00 
   11325:	e8 66 fc ff ff       	call   10f90 <__memset>
   1132a:	31 f6                	xor    %esi,%esi
   1132c:	ba 00 02 00 00       	mov    $0x200,%edx
   11331:	4c 89 f7             	mov    %r14,%rdi
   11334:	e8 57 fc ff ff       	call   10f90 <__memset>
   11339:	31 f6                	xor    %esi,%esi
   1133b:	ba b0 01 00 00       	mov    $0x1b0,%edx
   11340:	4c 89 e7             	mov    %r12,%rdi
   11343:	e8 48 fc ff ff       	call   10f90 <__memset>
   11348:	4d 85 ed             	test   %r13,%r13
   1134b:	74 23                	je     11370 <sgx_create_report+0xb0>
   1134d:	be 00 02 00 00       	mov    $0x200,%esi
   11352:	4c 89 ef             	mov    %r13,%rdi
   11355:	e8 26 48 ff ff       	call   5b80 <sgx_is_within_enclave>
   1135a:	85 c0                	test   %eax,%eax
   1135c:	0f 84 be 00 00 00    	je     11420 <sgx_create_report+0x160>
   11362:	b9 40 00 00 00       	mov    $0x40,%ecx
   11367:	4c 89 f7             	mov    %r14,%rdi
   1136a:	4c 89 ee             	mov    %r13,%rsi
   1136d:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
   11370:	4d 85 ff             	test   %r15,%r15
   11373:	74 4c                	je     113c1 <sgx_create_report+0x101>
   11375:	be 40 00 00 00       	mov    $0x40,%esi
   1137a:	4c 89 ff             	mov    %r15,%rdi
   1137d:	e8 fe 47 ff ff       	call   5b80 <sgx_is_within_enclave>
   11382:	85 c0                	test   %eax,%eax
   11384:	0f 84 96 00 00 00    	je     11420 <sgx_create_report+0x160>
   1138a:	f3 41 0f 6f 0f       	movdqu (%r15),%xmm1
   1138f:	f3 41 0f 6f 57 10    	movdqu 0x10(%r15),%xmm2
   11395:	f3 41 0f 6f 5f 20    	movdqu 0x20(%r15),%xmm3
   1139b:	f3 41 0f 6f 67 30    	movdqu 0x30(%r15),%xmm4
   113a1:	0f 29 8c 24 80 01 00 	movaps %xmm1,0x180(%rsp)
   113a8:	00 
   113a9:	0f 29 94 24 90 01 00 	movaps %xmm2,0x190(%rsp)
   113b0:	00 
   113b1:	0f 29 9c 24 a0 01 00 	movaps %xmm3,0x1a0(%rsp)
   113b8:	00 
   113b9:	0f 29 a4 24 b0 01 00 	movaps %xmm4,0x1b0(%rsp)
   113c0:	00 
   113c1:	48 85 db             	test   %rbx,%rbx
   113c4:	74 5a                	je     11420 <sgx_create_report+0x160>
   113c6:	be b0 01 00 00       	mov    $0x1b0,%esi
   113cb:	48 89 df             	mov    %rbx,%rdi
   113ce:	e8 ad 47 ff ff       	call   5b80 <sgx_is_within_enclave>
   113d3:	85 c0                	test   %eax,%eax
   113d5:	74 49                	je     11420 <sgx_create_report+0x160>
   113d7:	48 8b b4 24 78 01 00 	mov    0x178(%rsp),%rsi
   113de:	00 
   113df:	4c 89 e2             	mov    %r12,%rdx
   113e2:	4c 89 f7             	mov    %r14,%rdi
   113e5:	e8 96 10 00 00       	call   12480 <do_ereport>
   113ea:	89 c2                	mov    %eax,%edx
   113ec:	b8 01 00 00 00       	mov    $0x1,%eax
   113f1:	85 d2                	test   %edx,%edx
   113f3:	75 30                	jne    11425 <sgx_create_report+0x165>
   113f5:	31 c0                	xor    %eax,%eax
   113f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   113fe:	00 00 
   11400:	66 41 0f 6f 04 04    	movdqa (%r12,%rax,1),%xmm0
   11406:	0f 11 04 03          	movups %xmm0,(%rbx,%rax,1)
   1140a:	48 83 c0 10          	add    $0x10,%rax
   1140e:	48 3d b0 01 00 00    	cmp    $0x1b0,%rax
   11414:	75 ea                	jne    11400 <sgx_create_report+0x140>
   11416:	31 c0                	xor    %eax,%eax
   11418:	eb 0b                	jmp    11425 <sgx_create_report+0x165>
   1141a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   11420:	b8 02 00 00 00       	mov    $0x2,%eax
   11425:	48 8b 94 24 f8 07 00 	mov    0x7f8(%rsp),%rdx
   1142c:	00 
   1142d:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   11434:	00 00 
   11436:	75 0f                	jne    11447 <sgx_create_report+0x187>
   11438:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
   1143c:	5b                   	pop    %rbx
   1143d:	41 5c                	pop    %r12
   1143f:	41 5d                	pop    %r13
   11441:	41 5e                	pop    %r14
   11443:	41 5f                	pop    %r15
   11445:	5d                   	pop    %rbp
   11446:	c3                   	ret    
   11447:	e8 34 f6 ff ff       	call   10a80 <__stack_chk_fail>
   1144c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000011450 <sgx_self_report>:
   11450:	f3 0f 1e fa          	endbr64 
   11454:	55                   	push   %rbp
   11455:	53                   	push   %rbx
   11456:	48 8d 1d 03 9a 01 00 	lea    0x19a03(%rip),%rbx        # 2ae60 <_ZZ15sgx_self_reportE7_report>
   1145d:	48 83 ec 08          	sub    $0x8,%rsp
   11461:	48 83 3d 27 9a 01 00 	cmpq   $0x0,0x19a27(%rip)        # 2ae90 <_ZZ15sgx_self_reportE7_report+0x30>
   11468:	00 
   11469:	74 0d                	je     11478 <sgx_self_report+0x28>
   1146b:	48 83 c4 08          	add    $0x8,%rsp
   1146f:	48 89 d8             	mov    %rbx,%rax
   11472:	5b                   	pop    %rbx
   11473:	5d                   	pop    %rbp
   11474:	c3                   	ret    
   11475:	0f 1f 00             	nopl   (%rax)
   11478:	48 8d 2d c1 99 01 00 	lea    0x199c1(%rip),%rbp        # 2ae40 <_ZZ15sgx_self_reportE11report_lock>
   1147f:	48 89 ef             	mov    %rbp,%rdi
   11482:	e8 09 b3 ff ff       	call   c790 <sgx_spin_lock>
   11487:	48 83 3d 01 9a 01 00 	cmpq   $0x0,0x19a01(%rip)        # 2ae90 <_ZZ15sgx_self_reportE7_report+0x30>
   1148e:	00 
   1148f:	74 17                	je     114a8 <sgx_self_report+0x58>
   11491:	48 89 ef             	mov    %rbp,%rdi
   11494:	e8 87 b3 ff ff       	call   c820 <sgx_spin_unlock>
   11499:	48 83 c4 08          	add    $0x8,%rsp
   1149d:	48 89 d8             	mov    %rbx,%rax
   114a0:	5b                   	pop    %rbx
   114a1:	5d                   	pop    %rbp
   114a2:	c3                   	ret    
   114a3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   114a8:	48 89 da             	mov    %rbx,%rdx
   114ab:	31 f6                	xor    %esi,%esi
   114ad:	31 ff                	xor    %edi,%edi
   114af:	e8 0c fe ff ff       	call   112c0 <sgx_create_report>
   114b4:	eb db                	jmp    11491 <sgx_self_report+0x41>

Disassembly of section .nipx:

0000000000011600 <init_enclave>:
   11600:	f3 0f 1e fa          	endbr64 
   11604:	41 54                	push   %r12
   11606:	55                   	push   %rbp
   11607:	53                   	push   %rbx
   11608:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
   1160f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   11616:	00 00 
   11618:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
   1161f:	00 
   11620:	31 c0                	xor    %eax,%eax
   11622:	48 85 ff             	test   %rdi,%rdi
   11625:	0f 84 f5 02 00 00    	je     11920 <init_enclave+0x320>
   1162b:	48 89 f3             	mov    %rsi,%rbx
   1162e:	48 85 f6             	test   %rsi,%rsi
   11631:	0f 84 e9 02 00 00    	je     11920 <init_enclave+0x320>
   11637:	48 83 3d 91 69 00 00 	cmpq   $0x0,0x6991(%rip)        # 17fd0 <_Z9pcl_entryPvS_>
   1163e:	00 
   1163f:	48 89 fd             	mov    %rdi,%rbp
   11642:	74 10                	je     11654 <init_enclave+0x54>
   11644:	0f ae e8             	lfence 
   11647:	e8 c4 f9 fe ff       	call   1010 <_Z9pcl_entryPvS_@plt>
   1164c:	85 c0                	test   %eax,%eax
   1164e:	0f 85 cc 02 00 00    	jne    11920 <init_enclave+0x320>
   11654:	48 89 ef             	mov    %rbp,%rdi
   11657:	e8 94 6d ff ff       	call   83f0 <relocate_enclave>
   1165c:	89 c5                	mov    %eax,%ebp
   1165e:	85 c0                	test   %eax,%eax
   11660:	0f 85 ba 02 00 00    	jne    11920 <init_enclave+0x320>
   11666:	e8 8d 0a 00 00       	call   120f8 <get_enclave_base>
   1166b:	48 8d 15 0e 1b 00 00 	lea    0x1b0e(%rip),%rdx        # 13180 <g_global_data>
   11672:	48 89 05 a7 67 00 00 	mov    %rax,0x67a7(%rip)        # 17e20 <g_enclave_base>
   11679:	48 8b 8a d0 06 00 00 	mov    0x6d0(%rdx),%rcx
   11680:	48 89 0d 91 67 00 00 	mov    %rcx,0x6791(%rip)        # 17e18 <g_enclave_size>
   11687:	48 8b 8a c0 06 00 00 	mov    0x6c0(%rdx),%rcx
   1168e:	48 85 c9             	test   %rcx,%rcx
   11691:	74 1e                	je     116b1 <init_enclave+0xb1>
   11693:	48 8b 8a c0 06 00 00 	mov    0x6c0(%rdx),%rcx
   1169a:	48 39 c8             	cmp    %rcx,%rax
   1169d:	0f 85 84 02 00 00    	jne    11927 <init_enclave+0x327>
   116a3:	48 8b 82 c8 06 00 00 	mov    0x6c8(%rdx),%rax
   116aa:	48 89 05 6f 67 00 00 	mov    %rax,0x676f(%rip)        # 17e20 <g_enclave_base>
   116b1:	be b0 00 00 00       	mov    $0xb0,%esi
   116b6:	48 89 df             	mov    %rbx,%rdi
   116b9:	e8 22 45 ff ff       	call   5be0 <sgx_is_outside_enclave>
   116be:	85 c0                	test   %eax,%eax
   116c0:	0f 84 5a 02 00 00    	je     11920 <init_enclave+0x320>
   116c6:	0f ae e8             	lfence 
   116c9:	f3 0f 6f 03          	movdqu (%rbx),%xmm0
   116cd:	f3 0f 6f 4b 10       	movdqu 0x10(%rbx),%xmm1
   116d2:	f3 0f 6f 53 20       	movdqu 0x20(%rbx),%xmm2
   116d7:	f3 0f 6f 5b 30       	movdqu 0x30(%rbx),%xmm3
   116dc:	f3 0f 6f 63 40       	movdqu 0x40(%rbx),%xmm4
   116e1:	0f 29 04 24          	movaps %xmm0,(%rsp)
   116e5:	f3 0f 6f 6b 50       	movdqu 0x50(%rbx),%xmm5
   116ea:	f3 0f 6f 73 60       	movdqu 0x60(%rbx),%xmm6
   116ef:	0f 29 4c 24 10       	movaps %xmm1,0x10(%rsp)
   116f4:	f3 0f 6f 7b 70       	movdqu 0x70(%rbx),%xmm7
   116f9:	f3 0f 6f 83 80 00 00 	movdqu 0x80(%rbx),%xmm0
   11700:	00 
   11701:	0f 29 54 24 20       	movaps %xmm2,0x20(%rsp)
   11706:	f3 0f 6f 8b 90 00 00 	movdqu 0x90(%rbx),%xmm1
   1170d:	00 
   1170e:	f3 0f 6f 93 a0 00 00 	movdqu 0xa0(%rbx),%xmm2
   11715:	00 
   11716:	0f 29 5c 24 30       	movaps %xmm3,0x30(%rsp)
   1171b:	0f 29 64 24 40       	movaps %xmm4,0x40(%rsp)
   11720:	0f 29 6c 24 50       	movaps %xmm5,0x50(%rsp)
   11725:	0f 29 74 24 60       	movaps %xmm6,0x60(%rsp)
   1172a:	0f 29 7c 24 70       	movaps %xmm7,0x70(%rsp)
   1172f:	0f 29 84 24 80 00 00 	movaps %xmm0,0x80(%rsp)
   11736:	00 
   11737:	0f 29 8c 24 90 00 00 	movaps %xmm1,0x90(%rsp)
   1173e:	00 
   1173f:	0f 29 94 24 a0 00 00 	movaps %xmm2,0xa0(%rsp)
   11746:	00 
   11747:	f6 44 24 13 40       	testb  $0x40,0x13(%rsp)
   1174c:	0f 85 8e 01 00 00    	jne    118e0 <init_enclave+0x2e0>
   11752:	b9 14 00 00 00       	mov    $0x14,%ecx
   11757:	b8 9c 00 00 00       	mov    $0x9c,%eax
   1175c:	48 8d 14 04          	lea    (%rsp,%rax,1),%rdx
   11760:	48 8d 41 ff          	lea    -0x1(%rcx),%rax
   11764:	83 e0 01             	and    $0x1,%eax
   11767:	c6 02 00             	movb   $0x0,(%rdx)
   1176a:	48 89 c6             	mov    %rax,%rsi
   1176d:	b8 01 00 00 00       	mov    $0x1,%eax
   11772:	48 39 c8             	cmp    %rcx,%rax
   11775:	73 2b                	jae    117a2 <init_enclave+0x1a2>
   11777:	48 85 f6             	test   %rsi,%rsi
   1177a:	74 14                	je     11790 <init_enclave+0x190>
   1177c:	b8 02 00 00 00       	mov    $0x2,%eax
   11781:	c6 42 01 00          	movb   $0x0,0x1(%rdx)
   11785:	48 39 c8             	cmp    %rcx,%rax
   11788:	73 18                	jae    117a2 <init_enclave+0x1a2>
   1178a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   11790:	c6 04 02 00          	movb   $0x0,(%rdx,%rax,1)
   11794:	48 83 c0 02          	add    $0x2,%rax
   11798:	c6 44 10 ff 00       	movb   $0x0,-0x1(%rax,%rdx,1)
   1179d:	48 39 c8             	cmp    %rcx,%rax
   117a0:	72 ee                	jb     11790 <init_enclave+0x190>
   117a2:	8b 84 24 ac 00 00 00 	mov    0xac(%rsp),%eax
   117a9:	48 8d 5c 24 0c       	lea    0xc(%rsp),%rbx
   117ae:	89 05 5c 66 00 00    	mov    %eax,0x665c(%rip)        # 17e10 <g_cpu_core_num>
   117b4:	8b 44 24 08          	mov    0x8(%rsp),%eax
   117b8:	89 05 6a 66 00 00    	mov    %eax,0x666a(%rip)        # 17e28 <g_sdk_version>
   117be:	85 c0                	test   %eax,%eax
   117c0:	74 1a                	je     117dc <init_enclave+0x1dc>
   117c2:	83 f8 04             	cmp    $0x4,%eax
   117c5:	0f 8e 55 01 00 00    	jle    11920 <init_enclave+0x320>
   117cb:	48 8d 5c 24 0c       	lea    0xc(%rsp),%rbx
   117d0:	31 f6                	xor    %esi,%esi
   117d2:	48 89 df             	mov    %rbx,%rdi
   117d5:	e8 46 5e ff ff       	call   7620 <feature_supported>
   117da:	89 c5                	mov    %eax,%ebp
   117dc:	48 89 df             	mov    %rbx,%rdi
   117df:	be 01 00 00 00       	mov    $0x1,%esi
   117e4:	89 2d 42 66 00 00    	mov    %ebp,0x6642(%rip)        # 17e2c <EDMM_supported>
   117ea:	e8 31 5e ff ff       	call   7620 <feature_supported>
   117ef:	44 8b 25 36 66 00 00 	mov    0x6636(%rip),%r12d        # 17e2c <EDMM_supported>
   117f6:	89 05 18 66 00 00    	mov    %eax,0x6618(%rip)        # 17e14 <g_aexnotify_supported>
   117fc:	e8 2f 5c ff ff       	call   7430 <get_heap_min_size>
   11801:	48 89 c5             	mov    %rax,%rbp
   11804:	e8 b7 5b ff ff       	call   73c0 <get_heap_size>
   11809:	48 89 c3             	mov    %rax,%rbx
   1180c:	e8 8f 5b ff ff       	call   73a0 <get_heap_base>
   11811:	44 89 e1             	mov    %r12d,%ecx
   11814:	48 89 ea             	mov    %rbp,%rdx
   11817:	48 89 de             	mov    %rbx,%rsi
   1181a:	48 89 c7             	mov    %rax,%rdi
   1181d:	e8 de ad ff ff       	call   c600 <heap_init>
   11822:	85 c0                	test   %eax,%eax
   11824:	0f 85 f6 00 00 00    	jne    11920 <init_enclave+0x320>
   1182a:	e8 41 69 ff ff       	call   8170 <get_xfeature_state>
   1182f:	48 8b 3c 24          	mov    (%rsp),%rdi
   11833:	48 89 c2             	mov    %rax,%rdx
   11836:	48 81 e7 ff e7 ff e1 	and    $0xffffffffe1ffe7ff,%rdi
   1183d:	f6 44 24 13 40       	testb  $0x40,0x13(%rsp)
   11842:	74 08                	je     1184c <init_enclave+0x24c>
   11844:	48 8b bc 24 a4 00 00 	mov    0xa4(%rsp),%rdi
   1184b:	00 
   1184c:	83 3d d5 65 00 00 01 	cmpl   $0x1,0x65d5(%rip)        # 17e28 <g_sdk_version>
   11853:	7f 0f                	jg     11864 <init_enclave+0x264>
   11855:	48 83 bc 24 9c 00 00 	cmpq   $0x0,0x9c(%rsp)
   1185c:	00 00 
   1185e:	0f 84 a4 00 00 00    	je     11908 <init_enclave+0x308>
   11864:	48 8d 74 24 14       	lea    0x14(%rsp),%rsi
   11869:	e8 f2 41 ff ff       	call   5a60 <init_optimized_libs>
   1186e:	85 c0                	test   %eax,%eax
   11870:	0f 85 aa 00 00 00    	jne    11920 <init_enclave+0x320>
   11876:	e8 b5 5c ff ff       	call   7530 <get_rsrv_size>
   1187b:	48 85 c0             	test   %rax,%rax
   1187e:	74 27                	je     118a7 <init_enclave+0x2a7>
   11880:	e8 1b 5d ff ff       	call   75a0 <get_rsrv_min_size>
   11885:	48 89 c5             	mov    %rax,%rbp
   11888:	e8 a3 5c ff ff       	call   7530 <get_rsrv_size>
   1188d:	48 89 c3             	mov    %rax,%rbx
   11890:	e8 fb 5b ff ff       	call   7490 <get_rsrv_base>
   11895:	48 89 ea             	mov    %rbp,%rdx
   11898:	48 89 de             	mov    %rbx,%rsi
   1189b:	48 89 c7             	mov    %rax,%rdi
   1189e:	e8 4d f6 ff ff       	call   10ef0 <rsrv_mem_init>
   118a3:	85 c0                	test   %eax,%eax
   118a5:	75 79                	jne    11920 <init_enclave+0x320>
   118a7:	be 08 00 00 00       	mov    $0x8,%esi
   118ac:	48 8d 3d 55 65 00 00 	lea    0x6555(%rip),%rdi        # 17e08 <__intel_security_cookie>
   118b3:	e8 c8 44 ff ff       	call   5d80 <sgx_read_rand>
   118b8:	f7 d8                	neg    %eax
   118ba:	19 c0                	sbb    %eax,%eax
   118bc:	48 8b 94 24 b8 00 00 	mov    0xb8(%rsp),%rdx
   118c3:	00 
   118c4:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   118cb:	00 00 
   118cd:	75 5d                	jne    1192c <init_enclave+0x32c>
   118cf:	48 81 c4 c0 00 00 00 	add    $0xc0,%rsp
   118d6:	5b                   	pop    %rbx
   118d7:	5d                   	pop    %rbp
   118d8:	41 5c                	pop    %r12
   118da:	c3                   	ret    
   118db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   118e0:	48 8b 84 24 9c 00 00 	mov    0x9c(%rsp),%rax
   118e7:	00 
   118e8:	b9 b0 00 00 00       	mov    $0xb0,%ecx
   118ed:	48 29 c1             	sub    %rax,%rcx
   118f0:	48 3d af 00 00 00    	cmp    $0xaf,%rax
   118f6:	0f 86 60 fe ff ff    	jbe    1175c <init_enclave+0x15c>
   118fc:	e9 a1 fe ff ff       	jmp    117a2 <init_enclave+0x1a2>
   11901:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   11908:	31 f6                	xor    %esi,%esi
   1190a:	e8 51 41 ff ff       	call   5a60 <init_optimized_libs>
   1190f:	85 c0                	test   %eax,%eax
   11911:	0f 84 5f ff ff ff    	je     11876 <init_enclave+0x276>
   11917:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1191e:	00 00 
   11920:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   11925:	eb 95                	jmp    118bc <init_enclave+0x2bc>
   11927:	e8 0b 0c 00 00       	call   12537 <abort>
   1192c:	e8 4f f1 ff ff       	call   10a80 <__stack_chk_fail>
   11931:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   11938:	00 00 00 00 
   1193c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000011940 <do_init_enclave>:
   11940:	f3 0f 1e fa          	endbr64 
   11944:	41 54                	push   %r12
   11946:	49 89 f4             	mov    %rsi,%r12
   11949:	55                   	push   %rbp
   1194a:	48 89 fd             	mov    %rdi,%rbp
   1194d:	53                   	push   %rbx
   1194e:	e8 a5 07 00 00       	call   120f8 <get_enclave_base>
   11953:	48 89 c3             	mov    %rax,%rbx
   11956:	e8 c8 07 00 00       	call   12123 <lock_enclave>
   1195b:	85 c0                	test   %eax,%eax
   1195d:	74 11                	je     11970 <do_init_enclave+0x30>
   1195f:	bd 01 00 00 00       	mov    $0x1,%ebp
   11964:	89 e8                	mov    %ebp,%eax
   11966:	5b                   	pop    %rbx
   11967:	5d                   	pop    %rbp
   11968:	41 5c                	pop    %r12
   1196a:	c3                   	ret    
   1196b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   11970:	48 89 ee             	mov    %rbp,%rsi
   11973:	48 89 df             	mov    %rbx,%rdi
   11976:	e8 85 fc ff ff       	call   11600 <init_enclave>
   1197b:	85 c0                	test   %eax,%eax
   1197d:	75 e0                	jne    1195f <do_init_enclave+0x1f>
   1197f:	be 01 00 00 00       	mov    $0x1,%esi
   11984:	4c 89 e7             	mov    %r12,%rdi
   11987:	e8 24 52 ff ff       	call   6bb0 <do_init_thread>
   1198c:	89 c5                	mov    %eax,%ebp
   1198e:	85 c0                	test   %eax,%eax
   11990:	75 cd                	jne    1195f <do_init_enclave+0x1f>
   11992:	8b 15 94 64 00 00    	mov    0x6494(%rip),%edx        # 17e2c <EDMM_supported>
   11998:	85 d2                	test   %edx,%edx
   1199a:	0f 84 f0 00 00 00    	je     11a90 <do_init_enclave+0x150>
   119a0:	e8 8b 5a ff ff       	call   7430 <get_heap_min_size>
   119a5:	4c 8d 25 d4 17 00 00 	lea    0x17d4(%rip),%r12        # 13180 <g_global_data>
   119ac:	31 d2                	xor    %edx,%edx
   119ae:	48 89 c6             	mov    %rax,%rsi
   119b1:	48 89 c1             	mov    %rax,%rcx
   119b4:	49 8b 7c 24 10       	mov    0x10(%r12),%rdi
   119b9:	48 01 df             	add    %rbx,%rdi
   119bc:	e8 7f ef ff ff       	call   10940 <memset_s>
   119c1:	48 8d 05 98 64 00 00 	lea    0x6498(%rip),%rax        # 17e60 <rsrv_mem_min_size>
   119c8:	49 8b 7c 24 20       	mov    0x20(%r12),%rdi
   119cd:	31 d2                	xor    %edx,%edx
   119cf:	48 8b 30             	mov    (%rax),%rsi
   119d2:	48 01 df             	add    %rbx,%rdi
   119d5:	48 89 f1             	mov    %rsi,%rcx
   119d8:	e8 63 ef ff ff       	call   10940 <memset_s>
   119dd:	bf 02 00 00 00       	mov    $0x2,%edi
   119e2:	e8 2e 07 00 00       	call   12115 <set_enclave_state>
   119e7:	8b 05 3f 64 00 00    	mov    0x643f(%rip),%eax        # 17e2c <EDMM_supported>
   119ed:	85 c0                	test   %eax,%eax
   119ef:	0f 84 6f ff ff ff    	je     11964 <do_init_enclave+0x24>
   119f5:	41 8b 84 24 58 01 00 	mov    0x158(%r12),%eax
   119fc:	00 
   119fd:	49 8d ac 24 60 01 00 	lea    0x160(%r12),%rbp
   11a04:	00 
   11a05:	48 c1 e0 05          	shl    $0x5,%rax
   11a09:	48 01 e8             	add    %rbp,%rax
   11a0c:	48 39 c5             	cmp    %rax,%rbp
   11a0f:	72 10                	jb     11a21 <do_init_enclave+0xe1>
   11a11:	eb 15                	jmp    11a28 <do_init_enclave+0xe8>
   11a13:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   11a18:	48 83 c5 20          	add    $0x20,%rbp
   11a1c:	48 39 c5             	cmp    %rax,%rbp
   11a1f:	73 07                	jae    11a28 <do_init_enclave+0xe8>
   11a21:	66 83 7d 00 17       	cmpw   $0x17,0x0(%rbp)
   11a26:	75 f0                	jne    11a18 <do_init_enclave+0xd8>
   11a28:	48 39 e8             	cmp    %rbp,%rax
   11a2b:	0f 84 9f 00 00 00    	je     11ad0 <do_init_enclave+0x190>
   11a31:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
   11a35:	8b 75 04             	mov    0x4(%rbp),%esi
   11a38:	48 01 df             	add    %rbx,%rdi
   11a3b:	48 c1 e6 0c          	shl    $0xc,%rsi
   11a3f:	48 01 fe             	add    %rdi,%rsi
   11a42:	0f 82 17 ff ff ff    	jb     1195f <do_init_enclave+0x1f>
   11a48:	e8 33 ab ff ff       	call   c580 <sgx_mm_init>
   11a4d:	85 c0                	test   %eax,%eax
   11a4f:	0f 85 0a ff ff ff    	jne    1195f <do_init_enclave+0x1f>
   11a55:	49 8b bc 24 d8 06 00 	mov    0x6d8(%r12),%rdi
   11a5c:	00 
   11a5d:	e8 9e 99 ff ff       	call   b400 <emalloc_init_with_reserved_mem>
   11a62:	85 c0                	test   %eax,%eax
   11a64:	0f 85 f5 fe ff ff    	jne    1195f <do_init_enclave+0x1f>
   11a6a:	48 89 ea             	mov    %rbp,%rdx
   11a6d:	49 8d b4 24 60 01 00 	lea    0x160(%r12),%rsi
   11a74:	00 
   11a75:	48 89 df             	mov    %rbx,%rdi
   11a78:	31 ed                	xor    %ebp,%ebp
   11a7a:	e8 61 3d ff ff       	call   57e0 <init_rts_emas>
   11a7f:	85 c0                	test   %eax,%eax
   11a81:	40 0f 95 c5          	setne  %bpl
   11a85:	e9 da fe ff ff       	jmp    11964 <do_init_enclave+0x24>
   11a8a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   11a90:	4c 8d 25 e9 16 00 00 	lea    0x16e9(%rip),%r12        # 13180 <g_global_data>
   11a97:	31 d2                	xor    %edx,%edx
   11a99:	49 8b 4c 24 18       	mov    0x18(%r12),%rcx
   11a9e:	49 8b 74 24 18       	mov    0x18(%r12),%rsi
   11aa3:	49 8b 7c 24 10       	mov    0x10(%r12),%rdi
   11aa8:	48 01 df             	add    %rbx,%rdi
   11aab:	e8 90 ee ff ff       	call   10940 <memset_s>
   11ab0:	49 8b 4c 24 28       	mov    0x28(%r12),%rcx
   11ab5:	49 8b 74 24 28       	mov    0x28(%r12),%rsi
   11aba:	31 d2                	xor    %edx,%edx
   11abc:	49 8b 7c 24 20       	mov    0x20(%r12),%rdi
   11ac1:	48 01 df             	add    %rbx,%rdi
   11ac4:	e8 77 ee ff ff       	call   10940 <memset_s>
   11ac9:	e9 0f ff ff ff       	jmp    119dd <do_init_enclave+0x9d>
   11ace:	66 90                	xchg   %ax,%ax
   11ad0:	31 f6                	xor    %esi,%esi
   11ad2:	31 ff                	xor    %edi,%edi
   11ad4:	e9 6f ff ff ff       	jmp    11a48 <do_init_enclave+0x108>
   11ad9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000011ae0 <sgx_is_enclave_crashed>:
   11ae0:	f3 0f 1e fa          	endbr64 
   11ae4:	48 83 ec 08          	sub    $0x8,%rsp
   11ae8:	e8 17 06 00 00       	call   12104 <get_enclave_state>
   11aed:	83 f8 03             	cmp    $0x3,%eax
   11af0:	0f 94 c0             	sete   %al
   11af3:	48 83 c4 08          	add    $0x8,%rsp
   11af7:	0f b6 c0             	movzbl %al,%eax
   11afa:	c3                   	ret    
   11afb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000011b00 <enter_enclave>:
   11b00:	f3 0f 1e fa          	endbr64 
   11b04:	41 55                	push   %r13
   11b06:	49 89 d5             	mov    %rdx,%r13
   11b09:	41 54                	push   %r12
   11b0b:	49 89 f4             	mov    %rsi,%r12
   11b0e:	55                   	push   %rbp
   11b0f:	89 cd                	mov    %ecx,%ebp
   11b11:	53                   	push   %rbx
   11b12:	89 fb                	mov    %edi,%ebx
   11b14:	48 83 ec 18          	sub    $0x18,%rsp
   11b18:	e8 c3 ff ff ff       	call   11ae0 <sgx_is_enclave_crashed>
   11b1d:	85 c0                	test   %eax,%eax
   11b1f:	75 67                	jne    11b88 <enter_enclave+0x88>
   11b21:	83 fb ff             	cmp    $0xffffffff,%ebx
   11b24:	75 2a                	jne    11b50 <enter_enclave+0x50>
   11b26:	85 ed                	test   %ebp,%ebp
   11b28:	75 34                	jne    11b5e <enter_enclave+0x5e>
   11b2a:	4c 89 ee             	mov    %r13,%rsi
   11b2d:	4c 89 e7             	mov    %r12,%rdi
   11b30:	e8 0b fe ff ff       	call   11940 <do_init_enclave>
   11b35:	89 c3                	mov    %eax,%ebx
   11b37:	89 d8                	mov    %ebx,%eax
   11b39:	83 fb 01             	cmp    $0x1,%ebx
   11b3c:	74 29                	je     11b67 <enter_enclave+0x67>
   11b3e:	48 83 c4 18          	add    $0x18,%rsp
   11b42:	5b                   	pop    %rbx
   11b43:	5d                   	pop    %rbp
   11b44:	41 5c                	pop    %r12
   11b46:	41 5d                	pop    %r13
   11b48:	c3                   	ret    
   11b49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   11b50:	e8 af 05 00 00       	call   12104 <get_enclave_state>
   11b55:	83 f8 02             	cmp    $0x2,%eax
   11b58:	75 0d                	jne    11b67 <enter_enclave+0x67>
   11b5a:	85 ed                	test   %ebp,%ebp
   11b5c:	74 42                	je     11ba0 <enter_enclave+0xa0>
   11b5e:	83 fd 01             	cmp    $0x1,%ebp
   11b61:	0f 84 e9 00 00 00    	je     11c50 <enter_enclave+0x150>
   11b67:	bf 03 00 00 00       	mov    $0x3,%edi
   11b6c:	e8 a4 05 00 00       	call   12115 <set_enclave_state>
   11b71:	b8 01 00 00 00       	mov    $0x1,%eax
   11b76:	48 83 c4 18          	add    $0x18,%rsp
   11b7a:	5b                   	pop    %rbx
   11b7b:	5d                   	pop    %rbp
   11b7c:	41 5c                	pop    %r12
   11b7e:	41 5d                	pop    %r13
   11b80:	c3                   	ret    
   11b81:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   11b88:	48 83 c4 18          	add    $0x18,%rsp
   11b8c:	b8 06 10 00 00       	mov    $0x1006,%eax
   11b91:	5b                   	pop    %rbx
   11b92:	5d                   	pop    %rbp
   11b93:	41 5c                	pop    %r12
   11b95:	41 5d                	pop    %r13
   11b97:	c3                   	ret    
   11b98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   11b9f:	00 
   11ba0:	85 db                	test   %ebx,%ebx
   11ba2:	79 2c                	jns    11bd0 <enter_enclave+0xd0>
   11ba4:	83 fb fa             	cmp    $0xfffffffa,%ebx
   11ba7:	74 27                	je     11bd0 <enter_enclave+0xd0>
   11ba9:	83 fb fe             	cmp    $0xfffffffe,%ebx
   11bac:	0f 84 ce 00 00 00    	je     11c80 <enter_enclave+0x180>
   11bb2:	83 fb fc             	cmp    $0xfffffffc,%ebx
   11bb5:	0f 84 d5 00 00 00    	je     11c90 <enter_enclave+0x190>
   11bbb:	83 fb fb             	cmp    $0xfffffffb,%ebx
   11bbe:	75 a7                	jne    11b67 <enter_enclave+0x67>
   11bc0:	4c 89 ef             	mov    %r13,%rdi
   11bc3:	e8 88 55 ff ff       	call   7150 <do_uninit_enclave>
   11bc8:	89 c3                	mov    %eax,%ebx
   11bca:	e9 68 ff ff ff       	jmp    11b37 <enter_enclave+0x37>
   11bcf:	90                   	nop
   11bd0:	e8 6e 05 00 00       	call   12143 <get_thread_data>
   11bd5:	48 85 c0             	test   %rax,%rax
   11bd8:	0f 84 c2 00 00 00    	je     11ca0 <enter_enclave+0x1a0>
   11bde:	48 8b 48 08          	mov    0x8(%rax),%rcx
   11be2:	48 39 48 10          	cmp    %rcx,0x10(%rax)
   11be6:	75 40                	jne    11c28 <enter_enclave+0x128>
   11be8:	48 8d 05 91 15 00 00 	lea    0x1591(%rip),%rax        # 13180 <g_global_data>
   11bef:	48 8b 50 38          	mov    0x38(%rax),%rdx
   11bf3:	48 85 d2             	test   %rdx,%rdx
   11bf6:	74 30                	je     11c28 <enter_enclave+0x128>
   11bf8:	48 8b 68 50          	mov    0x50(%rax),%rbp
   11bfc:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   11c01:	be 08 00 00 00       	mov    $0x8,%esi
   11c06:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
   11c0d:	00 00 
   11c0f:	4c 01 ed             	add    %r13,%rbp
   11c12:	e8 69 41 ff ff       	call   5d80 <sgx_read_rand>
   11c17:	85 c0                	test   %eax,%eax
   11c19:	0f 85 8d 00 00 00    	jne    11cac <enter_enclave+0x1ac>
   11c1f:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   11c24:	48 89 45 28          	mov    %rax,0x28(%rbp)
   11c28:	89 df                	mov    %ebx,%edi
   11c2a:	4c 89 ea             	mov    %r13,%rdx
   11c2d:	4c 89 e6             	mov    %r12,%rsi
   11c30:	e8 db 51 ff ff       	call   6e10 <do_ecall>
   11c35:	89 c3                	mov    %eax,%ebx
   11c37:	89 d8                	mov    %ebx,%eax
   11c39:	83 fb 01             	cmp    $0x1,%ebx
   11c3c:	0f 85 fc fe ff ff    	jne    11b3e <enter_enclave+0x3e>
   11c42:	e9 20 ff ff ff       	jmp    11b67 <enter_enclave+0x67>
   11c47:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   11c4e:	00 00 
   11c50:	4c 89 ef             	mov    %r13,%rdi
   11c53:	e8 68 61 ff ff       	call   7dc0 <trts_handle_exception>
   11c58:	4c 89 ef             	mov    %r13,%rdi
   11c5b:	89 c3                	mov    %eax,%ebx
   11c5d:	e8 4e 42 ff ff       	call   5eb0 <check_static_stack_canary>
   11c62:	89 c2                	mov    %eax,%edx
   11c64:	b8 09 10 00 00       	mov    $0x1009,%eax
   11c69:	85 d2                	test   %edx,%edx
   11c6b:	0f 85 05 ff ff ff    	jne    11b76 <enter_enclave+0x76>
   11c71:	e9 c1 fe ff ff       	jmp    11b37 <enter_enclave+0x37>
   11c76:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11c7d:	00 00 00 
   11c80:	4c 89 e7             	mov    %r12,%rdi
   11c83:	e8 18 56 ff ff       	call   72a0 <do_oret>
   11c88:	89 c3                	mov    %eax,%ebx
   11c8a:	e9 a8 fe ff ff       	jmp    11b37 <enter_enclave+0x37>
   11c8f:	90                   	nop
   11c90:	4c 89 e7             	mov    %r12,%rdi
   11c93:	e8 d8 53 ff ff       	call   7070 <do_ecall_add_thread>
   11c98:	89 c3                	mov    %eax,%ebx
   11c9a:	e9 98 fe ff ff       	jmp    11b37 <enter_enclave+0x37>
   11c9f:	90                   	nop
   11ca0:	48 8d 05 d9 14 00 00 	lea    0x14d9(%rip),%rax        # 13180 <g_global_data>
   11ca7:	e9 4c ff ff ff       	jmp    11bf8 <enter_enclave+0xf8>
   11cac:	e8 86 08 00 00       	call   12537 <abort>

0000000000011cb1 <restore_xregs>:
   11cb1:	f3 0f 1e fa          	endbr64 
   11cb5:	48 89 f9             	mov    %rdi,%rcx
   11cb8:	48 8d 05 85 84 00 00 	lea    0x8485(%rip),%rax        # 1a144 <g_xsave_enabled>
   11cbf:	8b 00                	mov    (%rax),%eax
   11cc1:	83 f8 00             	cmp    $0x0,%eax
   11cc4:	74 16                	je     11cdc <restore_xregs+0x2b>
   11cc6:	48 31 c0             	xor    %rax,%rax
   11cc9:	48 31 d2             	xor    %rdx,%rdx
   11ccc:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   11cd1:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   11cd6:	48 0f ae 29          	xrstor64 (%rcx)
   11cda:	eb 04                	jmp    11ce0 <restore_xregs+0x2f>
   11cdc:	48 0f ae 09          	fxrstor64 (%rcx)
   11ce0:	c3                   	ret    

0000000000011ce1 <save_xregs>:
   11ce1:	f3 0f 1e fa          	endbr64 
   11ce5:	48 89 f9             	mov    %rdi,%rcx
   11ce8:	48 8d 05 55 84 00 00 	lea    0x8455(%rip),%rax        # 1a144 <g_xsave_enabled>
   11cef:	9b                   	fwait
   11cf0:	8b 00                	mov    (%rax),%eax
   11cf2:	83 f8 00             	cmp    $0x0,%eax
   11cf5:	74 16                	je     11d0d <save_xregs+0x2c>
   11cf7:	48 31 c0             	xor    %rax,%rax
   11cfa:	48 31 d2             	xor    %rdx,%rdx
   11cfd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   11d02:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   11d07:	48 0f c7 21          	xsavec64 (%rcx)
   11d0b:	eb 04                	jmp    11d11 <save_xregs+0x30>
   11d0d:	48 0f ae 01          	fxsave64 (%rcx)
   11d11:	c3                   	ret    

0000000000011d12 <__x86_return_thunk>:
   11d12:	c3                   	ret    

0000000000011d13 <__x86_indirect_thunk_rax>:
   11d13:	ff e0                	jmp    *%rax

0000000000011d15 <__x86_indirect_thunk_rbx>:
   11d15:	ff e3                	jmp    *%rbx

0000000000011d17 <__x86_indirect_thunk_rcx>:
   11d17:	ff e1                	jmp    *%rcx

0000000000011d19 <__x86_indirect_thunk_rdx>:
   11d19:	ff e2                	jmp    *%rdx

0000000000011d1b <__x86_indirect_thunk_rbp>:
   11d1b:	ff e5                	jmp    *%rbp

0000000000011d1d <__x86_indirect_thunk_rsi>:
   11d1d:	ff e6                	jmp    *%rsi

0000000000011d1f <__x86_indirect_thunk_rdi>:
   11d1f:	ff e7                	jmp    *%rdi

0000000000011d21 <__x86_indirect_thunk_r8>:
   11d21:	41 ff e0             	jmp    *%r8

0000000000011d24 <__x86_indirect_thunk_r9>:
   11d24:	41 ff e1             	jmp    *%r9

0000000000011d27 <__x86_indirect_thunk_r10>:
   11d27:	41 ff e2             	jmp    *%r10

0000000000011d2a <__x86_indirect_thunk_r11>:
   11d2a:	41 ff e3             	jmp    *%r11

0000000000011d2d <__x86_indirect_thunk_r12>:
   11d2d:	41 ff e4             	jmp    *%r12

0000000000011d30 <__x86_indirect_thunk_r13>:
   11d30:	41 ff e5             	jmp    *%r13

0000000000011d33 <__x86_indirect_thunk_r14>:
   11d33:	41 ff e6             	jmp    *%r14

0000000000011d36 <__x86_indirect_thunk_r15>:
   11d36:	41 ff e7             	jmp    *%r15
   11d39:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11d40:	00 00 00 
   11d43:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11d4a:	00 00 00 
   11d4d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11d54:	00 00 00 
   11d57:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11d5e:	00 00 00 
   11d61:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11d68:	00 00 00 
   11d6b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11d72:	00 00 00 
   11d75:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11d7c:	00 00 00 
   11d7f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11d86:	00 00 00 
   11d89:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11d90:	00 00 00 
   11d93:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11d9a:	00 00 00 
   11d9d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11da4:	00 00 00 
   11da7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11dae:	00 00 00 
   11db1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11db8:	00 00 00 
   11dbb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11dc2:	00 00 00 
   11dc5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11dcc:	00 00 00 
   11dcf:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11dd6:	00 00 00 
   11dd9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11de0:	00 00 00 
   11de3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11dea:	00 00 00 
   11ded:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11df4:	00 00 00 
   11df7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   11dfe:	00 00 

0000000000011e00 <constant_time_apply_sgxstep_mitigation_and_continue_execution>:
   11e00:	f3 0f 1e fa          	endbr64 
   11e04:	48 8b 67 20          	mov    0x20(%rdi),%rsp
   11e08:	48 8b 87 88 00 00 00 	mov    0x88(%rdi),%rax
   11e0f:	49 89 c2             	mov    %rax,%r10
   11e12:	80 38 c3             	cmpb   $0xc3,(%rax)
   11e15:	48 0f 44 04 24       	cmove  (%rsp),%rax
   11e1a:	48 89 e5             	mov    %rsp,%rbp
   11e1d:	48 8d 5c 24 08       	lea    0x8(%rsp),%rbx
   11e22:	48 0f 44 eb          	cmove  %rbx,%rbp
   11e26:	48 8d 1d c3 02 00 00 	lea    0x2c3(%rip),%rbx        # 120f0 <__ct_mitigation_end>
   11e2d:	48 29 c3             	sub    %rax,%rbx
   11e30:	48 81 fb e6 00 00 00 	cmp    $0xe6,%rbx
   11e37:	48 0f 42 e5          	cmovb  %rbp,%rsp
   11e3b:	48 89 67 20          	mov    %rsp,0x20(%rdi)
   11e3f:	4c 0f 42 94 24 78 ff 	cmovb  -0x88(%rsp),%r10
   11e46:	ff ff 
   11e48:	4c 89 94 24 78 ff ff 	mov    %r10,-0x88(%rsp)
   11e4f:	ff 
   11e50:	48 8b 87 80 00 00 00 	mov    0x80(%rdi),%rax
   11e57:	48 89 84 24 38 ff ff 	mov    %rax,-0xc8(%rsp)
   11e5e:	ff 
   11e5f:	48 8b 44 24 f8       	mov    -0x8(%rsp),%rax
   11e64:	48 0f 42 84 24 30 ff 	cmovb  -0xd0(%rsp),%rax
   11e6b:	ff ff 
   11e6d:	48 89 84 24 30 ff ff 	mov    %rax,-0xd0(%rsp)
   11e74:	ff 
   11e75:	48 89 b4 24 28 ff ff 	mov    %rsi,-0xd8(%rsp)
   11e7c:	ff 
   11e7d:	48 0f 42 94 24 20 ff 	cmovb  -0xe0(%rsp),%rdx
   11e84:	ff ff 
   11e86:	48 0f 42 8c 24 18 ff 	cmovb  -0xe8(%rsp),%rcx
   11e8d:	ff ff 
   11e8f:	4c 0f 42 84 24 10 ff 	cmovb  -0xf0(%rsp),%r8
   11e96:	ff ff 
   11e98:	4c 0f 42 8c 24 08 ff 	cmovb  -0xf8(%rsp),%r9
   11e9f:	ff ff 
   11ea1:	48 89 94 24 20 ff ff 	mov    %rdx,-0xe0(%rsp)
   11ea8:	ff 
   11ea9:	48 89 8c 24 18 ff ff 	mov    %rcx,-0xe8(%rsp)
   11eb0:	ff 
   11eb1:	4c 89 84 24 10 ff ff 	mov    %r8,-0xf0(%rsp)
   11eb8:	ff 
   11eb9:	4c 89 8c 24 08 ff ff 	mov    %r9,-0xf8(%rsp)
   11ec0:	ff 
   11ec1:	4c 8b 47 40          	mov    0x40(%rdi),%r8
   11ec5:	4c 8b 4f 48          	mov    0x48(%rdi),%r9
   11ec9:	4c 8b 57 50          	mov    0x50(%rdi),%r10
   11ecd:	4c 8b 5f 58          	mov    0x58(%rdi),%r11
   11ed1:	4c 8b 67 60          	mov    0x60(%rdi),%r12
   11ed5:	4c 8b 6f 68          	mov    0x68(%rdi),%r13
   11ed9:	4c 8b 77 70          	mov    0x70(%rdi),%r14
   11edd:	4c 8b 7f 78          	mov    0x78(%rdi),%r15
   11ee1:	48 8b 07             	mov    (%rdi),%rax
   11ee4:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
   11ee8:	48 8b 57 10          	mov    0x10(%rdi),%rdx
   11eec:	48 8b 5f 18          	mov    0x18(%rdi),%rbx
   11ef0:	48 8b 6f 28          	mov    0x28(%rdi),%rbp
   11ef4:	48 8b 77 30          	mov    0x30(%rdi),%rsi
   11ef8:	48 8b 7f 38          	mov    0x38(%rdi),%rdi
   11efc:	48 0f 42 84 24 70 ff 	cmovb  -0x90(%rsp),%rax
   11f03:	ff ff 
   11f05:	48 0f 42 8c 24 68 ff 	cmovb  -0x98(%rsp),%rcx
   11f0c:	ff ff 
   11f0e:	48 0f 42 94 24 60 ff 	cmovb  -0xa0(%rsp),%rdx
   11f15:	ff ff 
   11f17:	48 0f 42 9c 24 58 ff 	cmovb  -0xa8(%rsp),%rbx
   11f1e:	ff ff 
   11f20:	48 0f 42 ac 24 50 ff 	cmovb  -0xb0(%rsp),%rbp
   11f27:	ff ff 
   11f29:	48 0f 42 b4 24 48 ff 	cmovb  -0xb8(%rsp),%rsi
   11f30:	ff ff 
   11f32:	48 0f 42 bc 24 40 ff 	cmovb  -0xc0(%rsp),%rdi
   11f39:	ff ff 
   11f3b:	48 89 84 24 70 ff ff 	mov    %rax,-0x90(%rsp)
   11f42:	ff 
   11f43:	48 89 8c 24 68 ff ff 	mov    %rcx,-0x98(%rsp)
   11f4a:	ff 
   11f4b:	48 89 94 24 60 ff ff 	mov    %rdx,-0xa0(%rsp)
   11f52:	ff 
   11f53:	48 89 9c 24 58 ff ff 	mov    %rbx,-0xa8(%rsp)
   11f5a:	ff 
   11f5b:	48 89 ac 24 50 ff ff 	mov    %rbp,-0xb0(%rsp)
   11f62:	ff 
   11f63:	48 89 b4 24 48 ff ff 	mov    %rsi,-0xb8(%rsp)
   11f6a:	ff 
   11f6b:	48 89 bc 24 40 ff ff 	mov    %rdi,-0xc0(%rsp)
   11f72:	ff 
   11f73:	48 8b ac 24 20 ff ff 	mov    -0xe0(%rsp),%rbp
   11f7a:	ff 
   11f7b:	48 8b b4 24 18 ff ff 	mov    -0xe8(%rsp),%rsi
   11f82:	ff 
   11f83:	48 8b 94 24 10 ff ff 	mov    -0xf0(%rsp),%rdx
   11f8a:	ff 
   11f8b:	48 8b bc 24 08 ff ff 	mov    -0xf8(%rsp),%rdi
   11f92:	ff 
   11f93:	40 d0 ed             	shr    %bpl
   11f96:	48 89 eb             	mov    %rbp,%rbx
   11f99:	73 07                	jae    11fa2 <.restore_flags>
   11f9b:	48 81 eb 00 10 00 00 	sub    $0x1000,%rbx

0000000000011fa2 <.restore_flags>:
   11fa2:	48 8d 84 24 38 ff ff 	lea    -0xc8(%rsp),%rax
   11fa9:	ff 
   11faa:	48 94                	xchg   %rax,%rsp
   11fac:	9d                   	popf   
   11fad:	48 94                	xchg   %rax,%rsp
   11faf:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   11fb6:	00 00 00 00 
   11fba:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   11fc1:	00 00 00 00 
   11fc5:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   11fcc:	00 00 00 00 
   11fd0:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   11fd7:	00 00 00 00 
   11fdb:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   11fe2:	00 00 00 00 
   11fe6:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   11fed:	00 00 00 00 
   11ff1:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   11ff8:	00 00 00 00 
   11ffc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000012000 <.ct_enable_aexnotify>:
   12000:	48 8b 84 24 28 ff ff 	mov    -0xd8(%rsp),%rax
   12007:	ff 
   12008:	c6 00 01             	movb   $0x1,(%rax)

000000000001200b <__ct_mitigation_begin>:
   1200b:	0f ae e8             	lfence 

000000000001200e <.ct_check_write>:
   1200e:	b9 3f 00 00 00       	mov    $0x3f,%ecx
   12013:	c4 e2 f1 f7 ce       	shlx   %rcx,%rsi,%rcx
   12018:	e3 08                	jrcxz  12022 <.ct_clear_low_bits_of_rdx>
   1201a:	48 8d 76 ff          	lea    -0x1(%rsi),%rsi
   1201e:	8a 02                	mov    (%rdx),%al
   12020:	88 02                	mov    %al,(%rdx)

0000000000012022 <.ct_clear_low_bits_of_rdx>:
   12022:	b9 0c 00 00 00       	mov    $0xc,%ecx
   12027:	c4 e2 f3 f7 d2       	shrx   %rcx,%rdx,%rdx
   1202c:	c4 e2 f1 f7 d2       	shlx   %rcx,%rdx,%rdx

0000000000012031 <.ct_check_execute>:
   12031:	ff d7                	call   *%rdi
   12033:	b9 00 10 00 00       	mov    $0x1000,%ecx
   12038:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1203f:	00 

0000000000012040 <.ct_warm_caches_and_tlbs>:
   12040:	67 8d 49 c0          	lea    -0x40(%ecx),%ecx
   12044:	8b 04 0e             	mov    (%rsi,%rcx,1),%eax
   12047:	8b 44 0d 00          	mov    0x0(%rbp,%rcx,1),%eax
   1204b:	8b 04 0b             	mov    (%rbx,%rcx,1),%eax
   1204e:	8b 04 0a             	mov    (%rdx,%rcx,1),%eax
   12051:	e3 02                	jrcxz  12055 <.ct_restore_state>
   12053:	eb eb                	jmp    12040 <.ct_warm_caches_and_tlbs>

0000000000012055 <.ct_restore_state>:
   12055:	40 0f b6 ce          	movzbl %sil,%ecx
   12059:	48 8b bc 24 30 ff ff 	mov    -0xd0(%rsp),%rdi
   12060:	ff 
   12061:	48 89 7c 24 f8       	mov    %rdi,-0x8(%rsp)
   12066:	48 8b bc 24 40 ff ff 	mov    -0xc0(%rsp),%rdi
   1206d:	ff 
   1206e:	48 8b b4 24 48 ff ff 	mov    -0xb8(%rsp),%rsi
   12075:	ff 
   12076:	48 8b ac 24 50 ff ff 	mov    -0xb0(%rsp),%rbp
   1207d:	ff 
   1207e:	48 8b 9c 24 58 ff ff 	mov    -0xa8(%rsp),%rbx
   12085:	ff 
   12086:	48 8b 94 24 60 ff ff 	mov    -0xa0(%rsp),%rdx
   1208d:	ff 
   1208e:	48 8b 84 24 70 ff ff 	mov    -0x90(%rsp),%rax
   12095:	ff 
   12096:	e3 50                	jrcxz  120e8 <.ct_restore_rcx>
   12098:	48 8d 24 24          	lea    (%rsp),%rsp
   1209c:	48 8d 24 24          	lea    (%rsp),%rsp
   120a0:	48 8d 24 24          	lea    (%rsp),%rsp
   120a4:	48 8d 24 24          	lea    (%rsp),%rsp
   120a8:	48 8d 24 24          	lea    (%rsp),%rsp
   120ac:	48 8d 24 24          	lea    (%rsp),%rsp
   120b0:	48 8d 24 24          	lea    (%rsp),%rsp
   120b4:	48 8d 24 24          	lea    (%rsp),%rsp
   120b8:	48 8d 24 24          	lea    (%rsp),%rsp
   120bc:	48 8d 24 24          	lea    (%rsp),%rsp
   120c0:	48 8d 24 24          	lea    (%rsp),%rsp
   120c4:	48 8d 24 24          	lea    (%rsp),%rsp
   120c8:	48 8d 24 24          	lea    (%rsp),%rsp
   120cc:	48 8d 24 24          	lea    (%rsp),%rsp
   120d0:	48 8d 24 24          	lea    (%rsp),%rsp
   120d4:	48 8d 24 24          	lea    (%rsp),%rsp
   120d8:	48 8d 24 24          	lea    (%rsp),%rsp
   120dc:	48 8d 24 24          	lea    (%rsp),%rsp
   120e0:	48 8d 24 24          	lea    (%rsp),%rsp
   120e4:	48 8d 24 24          	lea    (%rsp),%rsp

00000000000120e8 <.ct_restore_rcx>:
   120e8:	48 8b 8c 24 68 ff ff 	mov    -0x98(%rsp),%rcx
   120ef:	ff 

00000000000120f0 <__ct_mitigation_end>:
   120f0:	ff a4 24 78 ff ff ff 	jmp    *-0x88(%rsp)

00000000000120f7 <__ct_mitigation_ret>:
   120f7:	c3                   	ret    

00000000000120f8 <get_enclave_base>:
   120f8:	f3 0f 1e fa          	endbr64 
   120fc:	48 8d 05 fd de fe ff 	lea    -0x12103(%rip),%rax        # 0 <__ImageBase>
   12103:	c3                   	ret    

0000000000012104 <get_enclave_state>:
   12104:	f3 0f 1e fa          	endbr64 
   12108:	48 8d 0d 31 80 00 00 	lea    0x8031(%rip),%rcx        # 1a140 <g_enclave_state>
   1210f:	48 31 c0             	xor    %rax,%rax
   12112:	8b 01                	mov    (%rcx),%eax
   12114:	c3                   	ret    

0000000000012115 <set_enclave_state>:
   12115:	f3 0f 1e fa          	endbr64 
   12119:	48 8d 05 20 80 00 00 	lea    0x8020(%rip),%rax        # 1a140 <g_enclave_state>
   12120:	89 38                	mov    %edi,(%rax)
   12122:	c3                   	ret    

0000000000012123 <lock_enclave>:
   12123:	f3 0f 1e fa          	endbr64 
   12127:	48 8d 15 12 80 00 00 	lea    0x8012(%rip),%rdx        # 1a140 <g_enclave_state>
   1212e:	48 31 c0             	xor    %rax,%rax
   12131:	b8 00 00 00 00       	mov    $0x0,%eax
   12136:	48 31 c9             	xor    %rcx,%rcx
   12139:	b9 01 00 00 00       	mov    $0x1,%ecx
   1213e:	f0 0f b1 0a          	lock cmpxchg %ecx,(%rdx)
   12142:	c3                   	ret    

0000000000012143 <get_thread_data>:
   12143:	f3 0f 1e fa          	endbr64 
   12147:	65 48 8b 04 25 00 00 	mov    %gs:0x0,%rax
   1214e:	00 00 
   12150:	c3                   	ret    

0000000000012151 <get_stack_guard>:
   12151:	f3 0f 1e fa          	endbr64 
   12155:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
   1215c:	00 00 
   1215e:	c3                   	ret    

000000000001215f <enclave_entry>:
   1215f:	f3 0f 1e fa          	endbr64 
   12163:	48 31 d2             	xor    %rdx,%rdx
   12166:	48 01 d2             	add    %rdx,%rdx
   12169:	fc                   	cld    
   1216a:	4d 31 c0             	xor    %r8,%r8
   1216d:	4d 31 c9             	xor    %r9,%r9
   12170:	4d 31 d2             	xor    %r10,%r10
   12173:	4d 31 db             	xor    %r11,%r11
   12176:	4d 31 e4             	xor    %r12,%r12
   12179:	4d 31 ed             	xor    %r13,%r13
   1217c:	4d 31 f6             	xor    %r14,%r14
   1217f:	4d 31 ff             	xor    %r15,%r15
   12182:	48 83 f8 00          	cmp    $0x0,%rax
   12186:	0f 85 07 01 00 00    	jne    12293 <enclave_entry+0x134>
   1218c:	65 48 8b 04 25 08 00 	mov    %gs:0x8,%rax
   12193:	00 00 
   12195:	48 83 f8 00          	cmp    $0x0,%rax
   12199:	75 0f                	jne    121aa <enclave_entry+0x4b>
   1219b:	48 89 d8             	mov    %rbx,%rax
   1219e:	48 2d 00 00 01 00    	sub    $0x10000,%rax
   121a4:	48 2d 00 04 00 00    	sub    $0x400,%rax
   121aa:	48 94                	xchg   %rax,%rsp
   121ac:	51                   	push   %rcx
   121ad:	55                   	push   %rbp
   121ae:	48 89 e5             	mov    %rsp,%rbp
   121b1:	9c                   	pushf  
   121b2:	48 f7 14 24          	notq   (%rsp)
   121b6:	48 81 0c 24 00 00 04 	orq    $0x40000,(%rsp)
   121bd:	00 
   121be:	48 f7 14 24          	notq   (%rsp)
   121c2:	9d                   	popf   
   121c3:	48 83 ec 30          	sub    $0x30,%rsp
   121c7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   121cb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   121cf:	48 89 5d e0          	mov    %rbx,-0x20(%rbp)
   121d3:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
   121d7:	48 89 7d d0          	mov    %rdi,-0x30(%rbp)
   121db:	48 83 ec 20          	sub    $0x20,%rsp
   121df:	48 8d 3d 9a 16 00 00 	lea    0x169a(%rip),%rdi        # 13880 <SYNTHETIC_STATE>
   121e6:	e8 c6 fa ff ff       	call   11cb1 <restore_xregs>
   121eb:	0f ae e8             	lfence 
   121ee:	48 83 c4 20          	add    $0x20,%rsp
   121f2:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
   121f6:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
   121fa:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   121fe:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   12202:	e8 f9 f8 ff ff       	call   11b00 <enter_enclave>
   12207:	48 89 c3             	mov    %rax,%rbx
   1220a:	48 8d 3d 6f 16 00 00 	lea    0x166f(%rip),%rdi        # 13880 <SYNTHETIC_STATE>
   12211:	e8 9b fa ff ff       	call   11cb1 <restore_xregs>
   12216:	0f ae e8             	lfence 
   12219:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1221d:	48 83 f8 00          	cmp    $0x0,%rax
   12221:	75 2c                	jne    1224f <enclave_entry+0xf0>
   12223:	65 48 8b 04 25 00 00 	mov    %gs:0x0,%rax
   1222a:	00 00 
   1222c:	48 83 f8 00          	cmp    $0x0,%rax
   12230:	74 1d                	je     1224f <enclave_entry+0xf0>
   12232:	48 8b 50 20          	mov    0x20(%rax),%rdx
   12236:	8a 8a a7 00 00 00    	mov    0xa7(%rdx),%cl
   1223c:	80 f9 00             	cmp    $0x0,%cl
   1223f:	74 0e                	je     1224f <enclave_entry+0xf0>
   12241:	c6 82 a7 00 00 00 00 	movb   $0x0,0xa7(%rdx)
   12248:	c7 40 50 01 00 00 00 	movl   $0x1,0x50(%rax)
   1224f:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
   12256:	48 89 de             	mov    %rbx,%rsi
   12259:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1225d:	48 89 ec             	mov    %rbp,%rsp
   12260:	5d                   	pop    %rbp
   12261:	5b                   	pop    %rbx
   12262:	48 89 d4             	mov    %rdx,%rsp
   12265:	48 31 c9             	xor    %rcx,%rcx
   12268:	48 31 d2             	xor    %rdx,%rdx
   1226b:	4d 31 c0             	xor    %r8,%r8
   1226e:	4d 31 c9             	xor    %r9,%r9
   12271:	4d 31 d2             	xor    %r10,%r10
   12274:	4d 31 db             	xor    %r11,%r11
   12277:	4d 31 e4             	xor    %r12,%r12
   1227a:	4d 31 ed             	xor    %r13,%r13
   1227d:	4d 31 f6             	xor    %r14,%r14
   12280:	4d 31 ff             	xor    %r15,%r15
   12283:	48 01 d2             	add    %rdx,%rdx
   12286:	fc                   	cld    
   12287:	48 c7 c0 04 00 00 00 	mov    $0x4,%rax
   1228e:	0f 01 d7             	enclu  
   12291:	0f 0b                	ud2    
   12293:	48 89 c2             	mov    %rax,%rdx
   12296:	48 89 d8             	mov    %rbx,%rax
   12299:	48 2d 00 00 01 00    	sub    $0x10000,%rax
   1229f:	e9 06 ff ff ff       	jmp    121aa <enclave_entry+0x4b>
   122a4:	0f 0b                	ud2    

00000000000122a6 <do_ocall>:
   122a6:	f3 0f 1e fa          	endbr64 
   122aa:	55                   	push   %rbp
   122ab:	48 89 e5             	mov    %rsp,%rbp
   122ae:	48 89 7d 10          	mov    %rdi,0x10(%rbp)
   122b2:	48 89 75 18          	mov    %rsi,0x18(%rbp)
   122b6:	65 48 8b 04 25 38 00 	mov    %gs:0x38,%rax
   122bd:	00 00 
   122bf:	48 29 c4             	sub    %rax,%rsp
   122c2:	48 c7 c0 3f 00 00 00 	mov    $0x3f,%rax
   122c9:	48 f7 d0             	not    %rax
   122cc:	48 21 c4             	and    %rax,%rsp
   122cf:	48 89 e1             	mov    %rsp,%rcx
   122d2:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
   122d9:	48 89 8c 24 98 00 00 	mov    %rcx,0x98(%rsp)
   122e0:	00 
   122e1:	48 89 5c 24 70       	mov    %rbx,0x70(%rsp)
   122e6:	48 89 74 24 68       	mov    %rsi,0x68(%rsp)
   122eb:	48 89 7c 24 60       	mov    %rdi,0x60(%rsp)
   122f0:	48 89 6c 24 58       	mov    %rbp,0x58(%rsp)
   122f5:	4c 89 64 24 50       	mov    %r12,0x50(%rsp)
   122fa:	4c 89 6c 24 48       	mov    %r13,0x48(%rsp)
   122ff:	4c 89 74 24 40       	mov    %r14,0x40(%rsp)
   12304:	4c 89 7c 24 38       	mov    %r15,0x38(%rsp)
   12309:	48 8b bc 24 98 00 00 	mov    0x98(%rsp),%rdi
   12310:	00 
   12311:	65 48 8b 04 25 38 00 	mov    %gs:0x38,%rax
   12318:	00 00 
   1231a:	48 89 c1             	mov    %rax,%rcx
   1231d:	48 c1 e9 02          	shr    $0x2,%rcx
   12321:	48 31 c0             	xor    %rax,%rax
   12324:	fc                   	cld    
   12325:	f3 ab                	rep stos %eax,%es:(%rdi)
   12327:	48 8b bc 24 98 00 00 	mov    0x98(%rsp),%rdi
   1232e:	00 
   1232f:	48 89 3c 24          	mov    %rdi,(%rsp)
   12333:	e8 a9 f9 ff ff       	call   11ce1 <save_xregs>
   12338:	48 8d 3d 41 15 00 00 	lea    0x1541(%rip),%rdi        # 13880 <SYNTHETIC_STATE>
   1233f:	48 89 3c 24          	mov    %rdi,(%rsp)
   12343:	e8 69 f9 ff ff       	call   11cb1 <restore_xregs>
   12348:	0f ae e8             	lfence 
   1234b:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
   12350:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   12355:	48 c7 c0 44 49 43 4f 	mov    $0x4f434944,%rax
   1235c:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   12361:	48 89 7c 24 28       	mov    %rdi,0x28(%rsp)
   12366:	65 48 8b 04 25 00 00 	mov    %gs:0x0,%rax
   1236d:	00 00 
   1236f:	48 89 c3             	mov    %rax,%rbx
   12372:	48 89 e7             	mov    %rsp,%rdi
   12375:	e8 e6 4e ff ff       	call   7260 <update_ocall_lastsp>
   1237a:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
   1237f:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   12384:	48 8b 53 20          	mov    0x20(%rbx),%rdx
   12388:	8a 8a a7 00 00 00    	mov    0xa7(%rdx),%cl
   1238e:	80 f9 00             	cmp    $0x0,%cl
   12391:	74 0e                	je     123a1 <do_ocall+0xfb>
   12393:	c6 82 a7 00 00 00 00 	movb   $0x0,0xa7(%rdx)
   1239a:	c7 43 50 01 00 00 00 	movl   $0x1,0x50(%rbx)
   123a1:	48 8b aa 98 00 00 00 	mov    0x98(%rdx),%rbp
   123a8:	48 8b a2 90 00 00 00 	mov    0x90(%rdx),%rsp
   123af:	48 8b 58 f8          	mov    -0x8(%rax),%rbx
   123b3:	48 c7 c0 04 00 00 00 	mov    $0x4,%rax
   123ba:	48 31 c9             	xor    %rcx,%rcx
   123bd:	48 31 d2             	xor    %rdx,%rdx
   123c0:	4d 31 c0             	xor    %r8,%r8
   123c3:	4d 31 c9             	xor    %r9,%r9
   123c6:	4d 31 d2             	xor    %r10,%r10
   123c9:	4d 31 db             	xor    %r11,%r11
   123cc:	4d 31 e4             	xor    %r12,%r12
   123cf:	4d 31 ed             	xor    %r13,%r13
   123d2:	4d 31 f6             	xor    %r14,%r14
   123d5:	4d 31 ff             	xor    %r15,%r15
   123d8:	48 01 d2             	add    %rdx,%rdx
   123db:	fc                   	cld    
   123dc:	0f 01 d7             	enclu  

00000000000123df <__morestack>:
   123df:	f3 0f 1e fa          	endbr64 
   123e3:	55                   	push   %rbp
   123e4:	48 89 e5             	mov    %rsp,%rbp
   123e7:	48 83 ec 20          	sub    $0x20,%rsp
   123eb:	e8 b6 fe ff ff       	call   122a6 <do_ocall>
   123f0:	c9                   	leave  
   123f1:	c3                   	ret    

00000000000123f2 <asm_oret>:
   123f2:	f3 0f 1e fa          	endbr64 
   123f6:	48 89 e3             	mov    %rsp,%rbx
   123f9:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   123fe:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   12403:	48 8b 63 08          	mov    0x8(%rbx),%rsp
   12407:	48 8b bc 24 98 00 00 	mov    0x98(%rsp),%rdi
   1240e:	00 
   1240f:	e8 9d f8 ff ff       	call   11cb1 <restore_xregs>
   12414:	0f ae e8             	lfence 
   12417:	48 31 c0             	xor    %rax,%rax
   1241a:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
   1241f:	48 29 f9             	sub    %rdi,%rcx
   12422:	48 83 e9 08          	sub    $0x8,%rcx
   12426:	48 c1 e9 02          	shr    $0x2,%rcx
   1242a:	fc                   	cld    
   1242b:	f3 ab                	rep stos %eax,%es:(%rdi)
   1242d:	48 8b 43 10          	mov    0x10(%rbx),%rax
   12431:	4c 8b 7c 24 38       	mov    0x38(%rsp),%r15
   12436:	4c 8b 74 24 40       	mov    0x40(%rsp),%r14
   1243b:	4c 8b 6c 24 48       	mov    0x48(%rsp),%r13
   12440:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   12445:	48 8b 6c 24 58       	mov    0x58(%rsp),%rbp
   1244a:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
   1244f:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   12454:	48 8b 5c 24 70       	mov    0x70(%rsp),%rbx
   12459:	48 89 ec             	mov    %rbp,%rsp
   1245c:	5d                   	pop    %rbp
   1245d:	c3                   	ret    
   1245e:	0f 0b                	ud2    

0000000000012460 <do_egetkey>:
   12460:	f3 0f 1e fa          	endbr64 
   12464:	53                   	push   %rbx
   12465:	51                   	push   %rcx
   12466:	52                   	push   %rdx
   12467:	48 89 fb             	mov    %rdi,%rbx
   1246a:	48 89 f1             	mov    %rsi,%rcx
   1246d:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
   12474:	0f 01 d7             	enclu  
   12477:	74 03                	je     1247c <do_egetkey+0x1c>
   12479:	48 31 c0             	xor    %rax,%rax
   1247c:	5a                   	pop    %rdx
   1247d:	59                   	pop    %rcx
   1247e:	5b                   	pop    %rbx
   1247f:	c3                   	ret    

0000000000012480 <do_ereport>:
   12480:	f3 0f 1e fa          	endbr64 
   12484:	53                   	push   %rbx
   12485:	51                   	push   %rcx
   12486:	52                   	push   %rdx
   12487:	48 89 fb             	mov    %rdi,%rbx
   1248a:	48 89 f1             	mov    %rsi,%rcx
   1248d:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
   12494:	f8                   	clc    

0000000000012495 <Lereport_inst>:
   12495:	0f 01 d7             	enclu  
   12498:	0f 92 c0             	setb   %al
   1249b:	5a                   	pop    %rdx
   1249c:	59                   	pop    %rcx
   1249d:	5b                   	pop    %rbx
   1249e:	c3                   	ret    

000000000001249f <do_everifyreport2>:
   1249f:	f3 0f 1e fa          	endbr64 
   124a3:	53                   	push   %rbx
   124a4:	51                   	push   %rcx
   124a5:	52                   	push   %rdx
   124a6:	48 89 fb             	mov    %rdi,%rbx
   124a9:	48 89 f1             	mov    %rsi,%rcx
   124ac:	48 c7 c0 08 00 00 00 	mov    $0x8,%rax

00000000000124b3 <Leverifyreport2_inst>:
   124b3:	0f 01 d7             	enclu  
   124b6:	74 03                	je     124bb <Leverifyreport2_inst+0x8>
   124b8:	48 31 c0             	xor    %rax,%rax
   124bb:	5a                   	pop    %rdx
   124bc:	59                   	pop    %rcx
   124bd:	5b                   	pop    %rbx
   124be:	c3                   	ret    

00000000000124bf <do_eaccept>:
   124bf:	f3 0f 1e fa          	endbr64 
   124c3:	53                   	push   %rbx
   124c4:	51                   	push   %rcx
   124c5:	52                   	push   %rdx
   124c6:	48 89 fb             	mov    %rdi,%rbx
   124c9:	48 89 f1             	mov    %rsi,%rcx
   124cc:	b8 05 00 00 00       	mov    $0x5,%eax
   124d1:	0f 01 d7             	enclu  
   124d4:	83 f8 00             	cmp    $0x0,%eax
   124d7:	75 5e                	jne    12537 <abort>
   124d9:	5a                   	pop    %rdx
   124da:	59                   	pop    %rcx
   124db:	5b                   	pop    %rbx
   124dc:	c3                   	ret    

00000000000124dd <do_eacceptcopy>:
   124dd:	f3 0f 1e fa          	endbr64 
   124e1:	53                   	push   %rbx
   124e2:	51                   	push   %rcx
   124e3:	52                   	push   %rdx
   124e4:	48 89 fb             	mov    %rdi,%rbx
   124e7:	48 89 f1             	mov    %rsi,%rcx
   124ea:	b8 07 00 00 00       	mov    $0x7,%eax
   124ef:	0f 01 d7             	enclu  
   124f2:	83 f8 00             	cmp    $0x0,%eax
   124f5:	75 40                	jne    12537 <abort>
   124f7:	5a                   	pop    %rdx
   124f8:	59                   	pop    %rcx
   124f9:	5b                   	pop    %rbx
   124fa:	c3                   	ret    

00000000000124fb <do_emodpe>:
   124fb:	f3 0f 1e fa          	endbr64 
   124ff:	53                   	push   %rbx
   12500:	51                   	push   %rcx
   12501:	52                   	push   %rdx
   12502:	48 89 fb             	mov    %rdi,%rbx
   12505:	48 89 f1             	mov    %rsi,%rcx
   12508:	b8 06 00 00 00       	mov    $0x6,%eax
   1250d:	0f 01 d7             	enclu  
   12510:	5a                   	pop    %rdx
   12511:	59                   	pop    %rcx
   12512:	5b                   	pop    %rbx
   12513:	c3                   	ret    

0000000000012514 <do_rdrand>:
   12514:	f3 0f 1e fa          	endbr64 
   12518:	b9 0a 00 00 00       	mov    $0xa,%ecx
   1251d:	0f c7 f0             	rdrand %eax
   12520:	72 08                	jb     1252a <do_rdrand+0x16>
   12522:	ff c9                	dec    %ecx
   12524:	75 f7                	jne    1251d <do_rdrand+0x9>
   12526:	48 31 c0             	xor    %rax,%rax
   12529:	c3                   	ret    
   1252a:	48 89 f9             	mov    %rdi,%rcx
   1252d:	89 01                	mov    %eax,(%rcx)
   1252f:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
   12536:	c3                   	ret    

0000000000012537 <abort>:
   12537:	f3 0f 1e fa          	endbr64 
   1253b:	48 8d 05 fe 7b 00 00 	lea    0x7bfe(%rip),%rax        # 1a140 <g_enclave_state>
   12542:	c7 00 03 00 00 00    	movl   $0x3,(%rax)
   12548:	0f 0b                	ud2    

000000000001254a <continue_execution>:
   1254a:	f3 0f 1e fa          	endbr64 
   1254e:	48 89 f9             	mov    %rdi,%rcx
   12551:	48 8b 01             	mov    (%rcx),%rax
   12554:	50                   	push   %rax
   12555:	48 8b 41 08          	mov    0x8(%rcx),%rax
   12559:	50                   	push   %rax
   1255a:	48 8b 41 20          	mov    0x20(%rcx),%rax
   1255e:	48 2d 88 00 00 00    	sub    $0x88,%rax
   12564:	48 8b 51 10          	mov    0x10(%rcx),%rdx
   12568:	48 8b 59 18          	mov    0x18(%rcx),%rbx
   1256c:	48 8b 69 28          	mov    0x28(%rcx),%rbp
   12570:	48 8b 71 30          	mov    0x30(%rcx),%rsi
   12574:	48 8b 79 38          	mov    0x38(%rcx),%rdi
   12578:	4c 8b 41 40          	mov    0x40(%rcx),%r8
   1257c:	4c 8b 49 48          	mov    0x48(%rcx),%r9
   12580:	4c 8b 51 50          	mov    0x50(%rcx),%r10
   12584:	4c 8b 59 58          	mov    0x58(%rcx),%r11
   12588:	4c 8b 61 60          	mov    0x60(%rcx),%r12
   1258c:	4c 8b 69 68          	mov    0x68(%rcx),%r13
   12590:	4c 8b 71 70          	mov    0x70(%rcx),%r14
   12594:	4c 8b 79 78          	mov    0x78(%rcx),%r15
   12598:	ff b1 80 00 00 00    	push   0x80(%rcx)
   1259e:	9d                   	popf   
   1259f:	48 8b 89 88 00 00 00 	mov    0x88(%rcx),%rcx
   125a6:	48 89 08             	mov    %rcx,(%rax)
   125a9:	59                   	pop    %rcx
   125aa:	5c                   	pop    %rsp
   125ab:	48 94                	xchg   %rax,%rsp
   125ad:	c2 80 00             	ret    $0x80

00000000000125b0 <second_phase>:
   125b0:	f3 0f 1e fa          	endbr64 
   125b4:	48 89 f4             	mov    %rsi,%rsp
   125b7:	48 c7 c0 09 00 00 00 	mov    $0x9,%rax
   125be:	0f 01 d7             	enclu  
   125c1:	ff e2                	jmp    *%rdx

Disassembly of section .rodata:

0000000000013000 <g_dyn_entry_table-0x30>:
   13000:	73 75                	jae    13077 <g_dyn_entry_table+0x47>
   13002:	6d                   	insl   (%dx),%es:(%rdi)
   13003:	70 00                	jo     13005 <second_phase+0xa55>
   13005:	70 72                	jo     13079 <g_dyn_entry_table+0x49>
   13007:	6f                   	outsl  %ds:(%rsi),(%dx)
   13008:	64 70 00             	fs jo  1300b <second_phase+0xa5b>
   1300b:	50                   	push   %rax
   1300c:	69 6e 63 6f 64 65 20 	imul   $0x2065646f,0x63(%rsi),%ebp
   13013:	69 73 20 77 72 6f 6e 	imul   $0x6e6f7277,0x20(%rbx),%esi
   1301a:	67 00 73 75          	add    %dh,0x75(%ebx)
   1301e:	70 65                	jo     13085 <g_dyn_entry_table+0x55>
   13020:	72 5f                	jb     13081 <g_dyn_entry_table+0x51>
   13022:	73 65                	jae    13089 <g_dyn_entry_table+0x59>
   13024:	63 72 65             	movsxd 0x65(%rdx),%esi
   13027:	74 00                	je     13029 <second_phase+0xa79>
   13029:	00 00                	add    %al,(%rax)
   1302b:	00 00                	add    %al,(%rax)
   1302d:	00 00                	add    %al,(%rax)
	...

0000000000013030 <g_dyn_entry_table>:
   13030:	02 00                	add    (%rax),%al
	...
   1303e:	00 00                	add    %al,(%rax)
   13040:	40                   	rex
   13041:	40                   	rex
   13042:	40                   	rex
   13043:	40                   	rex
   13044:	40                   	rex
   13045:	40                   	rex
   13046:	40                   	rex
   13047:	40 00 00             	rex add %al,(%rax)
   1304a:	00 00                	add    %al,(%rax)
   1304c:	00 00                	add    %al,(%rax)
   1304e:	00 00                	add    %al,(%rax)
   13050:	20 20                	and    %ah,(%rax)
   13052:	20 20                	and    %ah,(%rax)
   13054:	20 20                	and    %ah,(%rax)
   13056:	20 20                	and    %ah,(%rax)
	...
   13060:	30 30                	xor    %dh,(%rax)
   13062:	30 30                	xor    %dh,(%rax)
   13064:	30 30                	xor    %dh,(%rax)
   13066:	30 30                	xor    %dh,(%rax)
	...
   13070:	03 03                	add    (%rbx),%eax
   13072:	03 03                	add    (%rbx),%eax
   13074:	03 03                	add    (%rbx),%eax
   13076:	03 03                	add    (%rbx),%eax
	...
   13080:	01 01                	add    %eax,(%rcx)
   13082:	01 01                	add    %eax,(%rcx)
   13084:	01 01                	add    %eax,(%rcx)
   13086:	01 01                	add    %eax,(%rcx)
	...
   13090:	02 02                	add    (%rdx),%al
   13092:	02 02                	add    (%rdx),%al
   13094:	02 02                	add    (%rdx),%al
   13096:	02 02                	add    (%rdx),%al
	...
   130a0:	20 00                	and    %al,(%rax)
   130a2:	00 00                	add    %al,(%rax)
   130a4:	00 00                	add    %al,(%rax)
   130a6:	00 00                	add    %al,(%rax)
   130a8:	e0 ff                	loopne 130a9 <g_dyn_entry_table+0x79>
   130aa:	ff                   	(bad)  
   130ab:	ff                   	(bad)  
   130ac:	ff                   	(bad)  
   130ad:	ff                   	(bad)  
   130ae:	ff                   	(bad)  
   130af:	ff 00                	incl   (%rax)
   130b1:	10 00                	adc    %al,(%rax)
   130b3:	00 00                	add    %al,(%rax)
   130b5:	00 00                	add    %al,(%rax)
   130b7:	00 00                	add    %al,(%rax)
   130b9:	10 00                	adc    %al,(%rax)
   130bb:	00 00                	add    %al,(%rax)
   130bd:	00 00                	add    %al,(%rax)
   130bf:	00 ff                	add    %bh,%bh
   130c1:	ff                   	(bad)  
   130c2:	ff                   	(bad)  
   130c3:	ff                   	(bad)  
   130c4:	ff                   	(bad)  
   130c5:	ff                   	(bad)  
   130c6:	ff                   	(bad)  
   130c7:	ff 00                	incl   (%rax)
   130c9:	00 20                	add    %ah,(%rax)
   130cb:	00 00                	add    %al,(%rax)
   130cd:	00 00                	add    %al,(%rax)
   130cf:	00 40 52             	add    %al,0x52(%rax)
   130d2:	ff                   	(bad)  
   130d3:	ff 10                	call   *(%rax)
   130d5:	52                   	push   %rdx
   130d6:	ff                   	(bad)  
   130d7:	ff 02                	incl   (%rdx)
   130d9:	52                   	push   %rdx
   130da:	ff                   	(bad)  
   130db:	ff 02                	incl   (%rdx)
   130dd:	52                   	push   %rdx
   130de:	ff                   	(bad)  
   130df:	ff 02                	incl   (%rdx)
   130e1:	52                   	push   %rdx
   130e2:	ff                   	(bad)  
   130e3:	ff 02                	incl   (%rdx)
   130e5:	52                   	push   %rdx
   130e6:	ff                   	(bad)  
   130e7:	ff 10                	call   *(%rax)
   130e9:	52                   	push   %rdx
   130ea:	ff                   	(bad)  
   130eb:	ff 10                	call   *(%rax)
   130ed:	52                   	push   %rdx
   130ee:	ff                   	(bad)  
   130ef:	ff a0 52 ff ff 02    	jmp    *0x2ffff52(%rax)
   130f5:	52                   	push   %rdx
   130f6:	ff                   	(bad)  
   130f7:	ff 02                	incl   (%rdx)
   130f9:	52                   	push   %rdx
   130fa:	ff                   	(bad)  
   130fb:	ff 02                	incl   (%rdx)
   130fd:	52                   	push   %rdx
   130fe:	ff                   	(bad)  
   130ff:	ff 02                	incl   (%rdx)
   13101:	52                   	push   %rdx
   13102:	ff                   	(bad)  
   13103:	ff 02                	incl   (%rdx)
   13105:	52                   	push   %rdx
   13106:	ff                   	(bad)  
   13107:	ff 02                	incl   (%rdx)
   13109:	52                   	push   %rdx
   1310a:	ff                   	(bad)  
   1310b:	ff 02                	incl   (%rdx)
   1310d:	52                   	push   %rdx
   1310e:	ff                   	(bad)  
   1310f:	ff 90 52 ff ff 60    	call   *0x60ffff52(%rax)
   13115:	52                   	push   %rdx
   13116:	ff                   	(bad)  
   13117:	ff 90 51 ff ff ac    	call   *-0x530000af(%rax)
   1311d:	53                   	push   %rbx
   1311e:	ff                   	(bad)  
   1311f:	ff ac 53 ff ff 74 54 	ljmp   *0x5474ffff(%rbx,%rdx,2)
   13126:	ff                   	(bad)  
   13127:	ff ac 53 ff ff ac 53 	ljmp   *0x53acffff(%rbx,%rdx,2)
   1312e:	ff                   	(bad)  
   1312f:	ff ac 53 ff ff a4 53 	ljmp   *0x53a4ffff(%rbx,%rdx,2)
   13136:	ff                   	(bad)  
   13137:	ff 54 54 ff          	call   *-0x1(%rsp,%rdx,2)
   1313b:	ff                   	(bad)  
   1313c:	3c 54                	cmp    $0x54,%al
   1313e:	ff                   	(bad)  
   1313f:	ff 94 54 ff ff ac 53 	call   *0x53acffff(%rsp,%rdx,2)
   13146:	ff                   	(bad)  
   13147:	ff ac 53 ff ff ac 53 	ljmp   *0x53acffff(%rbx,%rdx,2)
   1314e:	ff                   	(bad)  
   1314f:	ff ac 53 ff ff ac 53 	ljmp   *0x53acffff(%rbx,%rdx,2)
   13156:	ff                   	(bad)  
   13157:	ff ac 53 ff ff ac 53 	ljmp   *0x53acffff(%rbx,%rdx,2)
   1315e:	ff                   	(bad)  
   1315f:	ff ac 53 ff ff ac 53 	ljmp   *0x53acffff(%rbx,%rdx,2)
   13166:	ff                   	(bad)  
   13167:	ff ac 53 ff ff ac 53 	ljmp   *0x53acffff(%rbx,%rdx,2)
   1316e:	ff                   	(bad)  
   1316f:	ff ac 53 ff ff ac 53 	ljmp   *0x53acffff(%rbx,%rdx,2)
   13176:	ff                   	(bad)  
   13177:	ff 24 54             	jmp    *(%rsp,%rdx,2)
   1317a:	ff                   	(bad)  
   1317b:	ff                   	.byte 0xff

Disassembly of section .niprod:

0000000000013180 <g_global_data>:
   13180:	64 00 17             	add    %dl,%fs:(%rdi)
   13183:	00 02                	add    %al,(%rdx)
   13185:	00 00                	add    %al,(%rax)
   13187:	00 01                	add    %al,(%rcx)
   13189:	00 00                	add    %al,(%rax)
   1318b:	00 00                	add    %al,(%rax)
   1318d:	00 00                	add    %al,(%rax)
   1318f:	00 02                	add    %al,(%rdx)
   13191:	00 00                	add    %al,(%rax)
   13193:	00 00                	add    %al,(%rax)
   13195:	00 00                	add    %al,(%rax)
   13197:	00 03                	add    %al,(%rbx)
   13199:	00 00                	add    %al,(%rax)
   1319b:	00 00                	add    %al,(%rax)
   1319d:	00 00                	add    %al,(%rax)
   1319f:	00 04 00             	add    %al,(%rax,%rax,1)
   131a2:	00 00                	add    %al,(%rax)
   131a4:	00 00                	add    %al,(%rax)
   131a6:	00 00                	add    %al,(%rax)
   131a8:	05 00 00 00 00       	add    $0x0,%eax
   131ad:	00 00                	add    %al,(%rax)
   131af:	00 06                	add    %al,(%rsi)
	...

0000000000013880 <SYNTHETIC_STATE>:
   13880:	7f 03                	jg     13885 <SYNTHETIC_STATE+0x5>
	...
   13896:	00 00                	add    %al,(%rax)
   13898:	bf 1f 00 00 ff       	mov    $0xff00001f,%edi
   1389d:	ff 00                	incl   (%rax)
	...
   13a7f:	00 02                	add    %al,(%rdx)
   13a81:	00 00                	add    %al,(%rax)
   13a83:	00 00                	add    %al,(%rax)
   13a85:	00 00                	add    %al,(%rax)
   13a87:	00 02                	add    %al,(%rdx)
   13a89:	00 00                	add    %al,(%rax)
   13a8b:	00 00                	add    %al,(%rax)
   13a8d:	00 00                	add    %al,(%rax)
   13a8f:	80 00 00             	addb   $0x0,(%rax)
	...

Disassembly of section .eh_frame_hdr:

0000000000013ac0 <__GNU_EH_FRAME_HDR>:
   13ac0:	01 1b                	add    %ebx,(%rbx)
   13ac2:	03 3b                	add    (%rbx),%edi
   13ac4:	34 08                	xor    $0x8,%al
   13ac6:	00 00                	add    %al,(%rax)
   13ac8:	05 01 00 00 40       	add    $0x40000001,%eax
   13acd:	d5                   	(bad)  
   13ace:	fe                   	(bad)  
   13acf:	ff                   	(bad)  
   13ad0:	b8 08 00 00 50       	mov    $0x50000008,%eax
   13ad5:	d5                   	(bad)  
   13ad6:	fe                   	(bad)  
   13ad7:	ff e0                	jmp    *%rax
   13ad9:	08 00                	or     %al,(%rax)
   13adb:	00 40 e5             	add    %al,-0x1b(%rax)
   13ade:	fe                   	(bad)  
   13adf:	ff                   	(bad)  
   13ae0:	f8                   	clc    
   13ae1:	0c 00                	or     $0x0,%al
   13ae3:	00 50 e5             	add    %dl,-0x1b(%rax)
   13ae6:	fe                   	(bad)  
   13ae7:	ff 30                	push   (%rax)
   13ae9:	2d 00 00 70 e5       	sub    $0xe5700000,%eax
   13aee:	fe                   	(bad)  
   13aef:	ff 60 2f             	jmp    *0x2f(%rax)
   13af2:	00 00                	add    %al,(%rax)
   13af4:	90                   	nop
   13af5:	e5 fe                	in     $0xfe,%eax
   13af7:	ff a8 2f 00 00 a3    	ljmp   *-0x5cffffd1(%rax)
   13afd:	e5 fe                	in     $0xfe,%eax
   13aff:	ff 50 08             	call   *0x8(%rax)
   13b02:	00 00                	add    %al,(%rax)
   13b04:	ff e5                	jmp    *%rbp
   13b06:	fe                   	(bad)  
   13b07:	ff 6c 08 00          	ljmp   *0x0(%rax,%rcx,1)
   13b0b:	00 1c e6             	add    %bl,(%rsi,%riz,8)
   13b0e:	fe                   	(bad)  
   13b0f:	ff 80 08 00 00 52    	incl   0x52000008(%rax)
   13b15:	e6 fe                	out    %al,$0xfe
   13b17:	ff 98 08 00 00 46    	lcall  *0x46000008(%rax)
   13b1d:	05 ff ff f8 08       	add    $0x8f8ffff,%eax
   13b22:	00 00                	add    %al,(%rax)
   13b24:	35 06 ff ff 30       	xor    $0x30ffff06,%eax
   13b29:	09 00                	or     %eax,(%rax)
   13b2b:	00 4e 06             	add    %cl,0x6(%rsi)
   13b2e:	ff                   	(bad)  
   13b2f:	ff 48 09             	decl   0x9(%rax)
   13b32:	00 00                	add    %al,(%rax)
   13b34:	b4 06                	mov    $0x6,%ah
   13b36:	ff                   	(bad)  
   13b37:	ff 6c 09 00          	ljmp   *0x0(%rcx,%rcx,1)
   13b3b:	00 17                	add    %dl,(%rdi)
   13b3d:	07                   	(bad)  
   13b3e:	ff                   	(bad)  
   13b3f:	ff 90 09 00 00 00    	call   *0x9(%rax)
   13b45:	08 ff                	or     %bh,%bh
   13b47:	ff c8                	dec    %eax
   13b49:	09 00                	or     %eax,(%rax)
   13b4b:	00 20                	add    %ah,(%rax)
   13b4d:	09 ff                	or     %edi,%edi
   13b4f:	ff 00                	incl   (%rax)
   13b51:	0a 00                	or     (%rax),%al
   13b53:	00 c0                	add    %al,%al
   13b55:	09 ff                	or     %edi,%edi
   13b57:	ff 14 0a             	call   *(%rdx,%rcx,1)
   13b5a:	00 00                	add    %al,(%rax)
   13b5c:	10 1b                	adc    %bl,(%rbx)
   13b5e:	ff                   	(bad)  
   13b5f:	ff 48 0a             	decl   0xa(%rax)
   13b62:	00 00                	add    %al,(%rax)
   13b64:	20 1d ff ff b8 0a    	and    %bl,0xab8ffff(%rip)        # aba3b69 <_end+0xab78b59>
   13b6a:	00 00                	add    %al,(%rax)
   13b6c:	60                   	(bad)  
   13b6d:	1d ff ff f0 0a       	sbb    $0xaf0ffff,%eax
   13b72:	00 00                	add    %al,(%rax)
   13b74:	f0 1d ff ff 3c 0b    	lock sbb $0xb3cffff,%eax
   13b7a:	00 00                	add    %al,(%rax)
   13b7c:	80 1e ff             	sbbb   $0xff,(%rsi)
   13b7f:	ff 88 0b 00 00 b0    	decl   -0x4ffffff5(%rax)
   13b85:	1e                   	(bad)  
   13b86:	ff                   	(bad)  
   13b87:	ff 9c 0b 00 00 e0 1e 	lcall  *0x1ee00000(%rbx,%rcx,1)
   13b8e:	ff                   	(bad)  
   13b8f:	ff b0 0b 00 00 20    	push   0x2000000b(%rax)
   13b95:	1f                   	(bad)  
   13b96:	ff                   	(bad)  
   13b97:	ff c8                	dec    %eax
   13b99:	0b 00                	or     (%rax),%eax
   13b9b:	00 40 1f             	add    %al,0x1f(%rax)
   13b9e:	ff                   	(bad)  
   13b9f:	ff e4                	jmp    *%rsp
   13ba1:	0b 00                	or     (%rax),%eax
   13ba3:	00 50 1f             	add    %dl,0x1f(%rax)
   13ba6:	ff                   	(bad)  
   13ba7:	ff                   	(bad)  
   13ba8:	f8                   	clc    
   13ba9:	0b 00                	or     (%rax),%eax
   13bab:	00 80 1f ff ff 20    	add    %al,0x20ffff1f(%rax)
   13bb1:	0c 00                	or     $0x0,%al
   13bb3:	00 a0 1f ff ff a0    	add    %ah,-0x5f0000e1(%rax)
   13bb9:	0c 00                	or     $0x0,%al
   13bbb:	00 c0                	add    %al,%al
   13bbd:	20 ff                	and    %bh,%bh
   13bbf:	ff 0c 0d 00 00 20 21 	decl   0x21200000(,%rcx,1)
   13bc6:	ff                   	(bad)  
   13bc7:	ff 20                	jmp    *(%rax)
   13bc9:	0d 00 00 80 21       	or     $0x21800000,%eax
   13bce:	ff                   	(bad)  
   13bcf:	ff 34 0d 00 00 60 22 	push   0x22600000(,%rcx,1)
   13bd6:	ff                   	(bad)  
   13bd7:	ff 54 0d 00          	call   *0x0(%rbp,%rcx,1)
   13bdb:	00 c0                	add    %al,%al
   13bdd:	22 ff                	and    %bh,%bh
   13bdf:	ff 6c 0d 00          	ljmp   *0x0(%rbp,%rcx,1)
   13be3:	00 f0                	add    %dh,%al
   13be5:	23 ff                	and    %edi,%edi
   13be7:	ff a8 0d 00 00 10    	ljmp   *0x1000000d(%rax)
   13bed:	24 ff                	and    $0xff,%al
   13bef:	ff                   	(bad)  
   13bf0:	bc 0d 00 00 40       	mov    $0x4000000d,%esp
   13bf5:	24 ff                	and    $0xff,%al
   13bf7:	ff                   	(bad)  
   13bf8:	d8 0d 00 00 70 24    	fmuls  0x24700000(%rip)        # 24713bfe <_end+0x246e8bee>
   13bfe:	ff                   	(bad)  
   13bff:	ff                   	(bad)  
   13c00:	f8                   	clc    
   13c01:	0d 00 00 30 25       	or     $0x25300000,%eax
   13c06:	ff                   	(bad)  
   13c07:	ff 34 0e             	push   (%rsi,%rcx,1)
   13c0a:	00 00                	add    %al,(%rax)
   13c0c:	10 27                	adc    %ah,(%rdi)
   13c0e:	ff                   	(bad)  
   13c0f:	ff 8c 0e 00 00 70 27 	decl   0x27700000(%rsi,%rcx,1)
   13c16:	ff                   	(bad)  
   13c17:	ff a0 0e 00 00 d0    	jmp    *-0x2ffffff2(%rax)
   13c1d:	27                   	(bad)  
   13c1e:	ff                   	(bad)  
   13c1f:	ff                   	(bad)  
   13c20:	bc 0e 00 00 40       	mov    $0x4000000e,%esp
   13c25:	28 ff                	sub    %bh,%bh
   13c27:	ff d0                	call   *%rax
   13c29:	0e                   	(bad)  
   13c2a:	00 00                	add    %al,(%rax)
   13c2c:	a0 28 ff ff e4 0e 00 	movabs 0x6000000ee4ffff28,%al
   13c33:	00 60 
   13c35:	2a ff                	sub    %bh,%bh
   13c37:	ff 28                	ljmp   *(%rax)
   13c39:	0f 00 00             	sldt   (%rax)
   13c3c:	c0 2a ff             	shrb   $0xff,(%rdx)
   13c3f:	ff 5c 0f 00          	lcall  *0x0(%rdi,%rcx,1)
   13c43:	00 90 2b ff ff a0    	add    %dl,-0x5f0000d5(%rax)
   13c49:	0f 00 00             	sldt   (%rax)
   13c4c:	b0 2c                	mov    $0x2c,%al
   13c4e:	ff                   	(bad)  
   13c4f:	ff                   	(bad)  
   13c50:	e8 0f 00 00 f0       	call   fffffffff0013c64 <_end+0xffffffffeffe8c54>
   13c55:	2c ff                	sub    $0xff,%al
   13c57:	ff 10                	call   *(%rax)
   13c59:	10 00                	adc    %al,(%rax)
   13c5b:	00 00                	add    %al,(%rax)
   13c5d:	2d ff ff 24 10       	sub    $0x1024ffff,%eax
   13c62:	00 00                	add    %al,(%rax)
   13c64:	d0 2d ff ff 50 10    	shrb   0x1050ffff(%rip)        # 10523c69 <_end+0x104f8c59>
   13c6a:	00 00                	add    %al,(%rax)
   13c6c:	b0 2e                	mov    $0x2e,%al
   13c6e:	ff                   	(bad)  
   13c6f:	ff a8 10 00 00 70    	ljmp   *0x70000010(%rax)
   13c75:	30 ff                	xor    %bh,%bh
   13c77:	ff 08                	decl   (%rax)
   13c79:	11 00                	adc    %eax,(%rax)
   13c7b:	00 80 30 ff ff 1c    	add    %al,0x1cffff30(%rax)
   13c81:	11 00                	adc    %eax,(%rax)
   13c83:	00 90 30 ff ff 30    	add    %dl,0x30ffff30(%rax)
   13c89:	11 00                	adc    %eax,(%rax)
   13c8b:	00 a0 30 ff ff 44    	add    %ah,0x44ffff30(%rax)
   13c91:	11 00                	adc    %eax,(%rax)
   13c93:	00 b0 30 ff ff 58    	add    %dh,0x58ffff30(%rax)
   13c99:	11 00                	adc    %eax,(%rax)
   13c9b:	00 c0                	add    %al,%al
   13c9d:	30 ff                	xor    %bh,%bh
   13c9f:	ff 6c 11 00          	ljmp   *0x0(%rcx,%rdx,1)
   13ca3:	00 d0                	add    %dl,%al
   13ca5:	30 ff                	xor    %bh,%bh
   13ca7:	ff 80 11 00 00 e0    	incl   -0x1fffffef(%rax)
   13cad:	30 ff                	xor    %bh,%bh
   13caf:	ff 94 11 00 00 f0 30 	call   *0x30f00000(%rcx,%rdx,1)
   13cb6:	ff                   	(bad)  
   13cb7:	ff a8 11 00 00 50    	ljmp   *0x50000011(%rax)
   13cbd:	33 ff                	xor    %edi,%edi
   13cbf:	ff f4                	push   %rsp
   13cc1:	11 00                	adc    %eax,(%rax)
   13cc3:	00 b0 35 ff ff 18    	add    %dh,0x18ffff35(%rax)
   13cc9:	12 00                	adc    (%rax),%al
   13ccb:	00 90 36 ff ff 44    	add    %dl,0x44ffff36(%rax)
   13cd1:	12 00                	adc    (%rax),%al
   13cd3:	00 70 37             	add    %dh,0x37(%rax)
   13cd6:	ff                   	(bad)  
   13cd7:	ff e0                	jmp    *%rax
   13cd9:	12 00                	adc    (%rax),%al
   13cdb:	00 a0 37 ff ff f4    	add    %ah,-0xb0000c9(%rax)
   13ce1:	12 00                	adc    (%rax),%al
   13ce3:	00 e0                	add    %ah,%al
   13ce5:	37                   	(bad)  
   13ce6:	ff                   	(bad)  
   13ce7:	ff 10                	call   *(%rax)
   13ce9:	13 00                	adc    (%rax),%eax
   13ceb:	00 a0 38 ff ff 40    	add    %ah,0x40ffff38(%rax)
   13cf1:	13 00                	adc    (%rax),%eax
   13cf3:	00 b0 38 ff ff 54    	add    %dh,0x54ffff38(%rax)
   13cf9:	13 00                	adc    (%rax),%eax
   13cfb:	00 e0                	add    %ah,%al
   13cfd:	38 ff                	cmp    %bh,%bh
   13cff:	ff 6c 13 00          	ljmp   *0x0(%rbx,%rdx,1)
   13d03:	00 00                	add    %al,(%rax)
   13d05:	39 ff                	cmp    %edi,%edi
   13d07:	ff 84 13 00 00 70 39 	incl   0x39700000(%rbx,%rdx,1)
   13d0e:	ff                   	(bad)  
   13d0f:	ff 98 13 00 00 d0    	lcall  *-0x2fffffed(%rax)
   13d15:	39 ff                	cmp    %edi,%edi
   13d17:	ff ac 13 00 00 f0 39 	ljmp   *0x39f00000(%rbx,%rdx,1)
   13d1e:	ff                   	(bad)  
   13d1f:	ff c4                	inc    %esp
   13d21:	13 00                	adc    (%rax),%eax
   13d23:	00 70 3a             	add    %dh,0x3a(%rax)
   13d26:	ff                   	(bad)  
   13d27:	ff                   	(bad)  
   13d28:	dc 13                	fcoml  (%rbx)
   13d2a:	00 00                	add    %al,(%rax)
   13d2c:	e0 3a                	loopne 13d68 <__GNU_EH_FRAME_HDR+0x2a8>
   13d2e:	ff                   	(bad)  
   13d2f:	ff f0                	push   %rax
   13d31:	13 00                	adc    (%rax),%eax
   13d33:	00 40 3b             	add    %al,0x3b(%rax)
   13d36:	ff                   	(bad)  
   13d37:	ff 04 14             	incl   (%rsp,%rdx,1)
   13d3a:	00 00                	add    %al,(%rax)
   13d3c:	60                   	(bad)  
   13d3d:	3b ff                	cmp    %edi,%edi
   13d3f:	ff 1c 14             	lcall  *(%rsp,%rdx,1)
   13d42:	00 00                	add    %al,(%rax)
   13d44:	b0 3b                	mov    $0x3b,%al
   13d46:	ff                   	(bad)  
   13d47:	ff 30                	push   (%rax)
   13d49:	14 00                	adc    $0x0,%al
   13d4b:	00 f0                	add    %dh,%al
   13d4d:	3b ff                	cmp    %edi,%edi
   13d4f:	ff 58 14             	lcall  *0x14(%rax)
   13d52:	00 00                	add    %al,(%rax)
   13d54:	20 3c ff             	and    %bh,(%rdi,%rdi,8)
   13d57:	ff 74 14 00          	push   0x0(%rsp,%rdx,1)
   13d5b:	00 50 3c             	add    %dl,0x3c(%rax)
   13d5e:	ff                   	(bad)  
   13d5f:	ff 8c 14 00 00 80 3c 	decl   0x3c800000(%rsp,%rdx,1)
   13d66:	ff                   	(bad)  
   13d67:	ff a0 14 00 00 a0    	jmp    *-0x5fffffec(%rax)
   13d6d:	3c ff                	cmp    $0xff,%al
   13d6f:	ff                   	(bad)  
   13d70:	b8 14 00 00 c0       	mov    $0xc0000014,%eax
   13d75:	3c ff                	cmp    $0xff,%al
   13d77:	ff cc                	dec    %esp
   13d79:	14 00                	adc    $0x0,%al
   13d7b:	00 e0                	add    %ah,%al
   13d7d:	3c ff                	cmp    $0xff,%al
   13d7f:	ff e0                	jmp    *%rax
   13d81:	14 00                	adc    $0x0,%al
   13d83:	00 10                	add    %dl,(%rax)
   13d85:	3d ff ff 00 15       	cmp    $0x1500ffff,%eax
   13d8a:	00 00                	add    %al,(%rax)
   13d8c:	00 41 ff             	add    %al,-0x1(%rcx)
   13d8f:	ff 24 15 00 00 50 42 	jmp    *0x42500000(,%rdx,1)
   13d96:	ff                   	(bad)  
   13d97:	ff 60 15             	jmp    *0x15(%rax)
   13d9a:	00 00                	add    %al,(%rax)
   13d9c:	00 43 ff             	add    %al,-0x1(%rbx)
   13d9f:	ff 9c 15 00 00 b0 46 	lcall  *0x46b00000(%rbp,%rdx,1)
   13da6:	ff                   	(bad)  
   13da7:	ff                   	(bad)  
   13da8:	e8 15 00 00 e0       	call   ffffffffe0013dc2 <_end+0xffffffffdffe8db2>
   13dad:	46 ff                	rex.RX (bad) 
   13daf:	ff 00                	incl   (%rax)
   13db1:	16                   	(bad)  
   13db2:	00 00                	add    %al,(%rax)
   13db4:	50                   	push   %rax
   13db5:	47 ff                	rex.RXB (bad) 
   13db7:	ff 14 16             	call   *(%rsi,%rdx,1)
   13dba:	00 00                	add    %al,(%rax)
   13dbc:	30 49 ff             	xor    %cl,-0x1(%rcx)
   13dbf:	ff 4c 16 00          	decl   0x0(%rsi,%rdx,1)
   13dc3:	00 60 4b             	add    %ah,0x4b(%rax)
   13dc6:	ff                   	(bad)  
   13dc7:	ff c8                	dec    %eax
   13dc9:	16                   	(bad)  
   13dca:	00 00                	add    %al,(%rax)
   13dcc:	00 4c ff ff          	add    %cl,-0x1(%rdi,%rdi,8)
   13dd0:	dc 16                	fcoml  (%rsi)
   13dd2:	00 00                	add    %al,(%rax)
   13dd4:	f0 4c ff             	lock rex.WR (bad) 
   13dd7:	ff f0                	push   %rax
   13dd9:	16                   	(bad)  
   13dda:	00 00                	add    %al,(%rax)
   13ddc:	e0 4d                	loopne 13e2b <__GNU_EH_FRAME_HDR+0x36b>
   13dde:	ff                   	(bad)  
   13ddf:	ff 04 17             	incl   (%rdi,%rdx,1)
   13de2:	00 00                	add    %al,(%rax)
   13de4:	c0 4f ff ff          	rorb   $0xff,-0x1(%rdi)
   13de8:	58                   	pop    %rax
   13de9:	17                   	(bad)  
   13dea:	00 00                	add    %al,(%rax)
   13dec:	c0 50 ff ff          	rclb   $0xff,-0x1(%rax)
   13df0:	a8 17                	test   $0x17,%al
   13df2:	00 00                	add    %al,(%rax)
   13df4:	f0 51                	lock push %rcx
   13df6:	ff                   	(bad)  
   13df7:	ff e4                	jmp    *%rsp
   13df9:	17                   	(bad)  
   13dfa:	00 00                	add    %al,(%rax)
   13dfc:	10 52 ff             	adc    %dl,-0x1(%rdx)
   13dff:	ff                   	(bad)  
   13e00:	f8                   	clc    
   13e01:	17                   	(bad)  
   13e02:	00 00                	add    %al,(%rax)
   13e04:	b0 52                	mov    $0x52,%al
   13e06:	ff                   	(bad)  
   13e07:	ff 24 18             	jmp    *(%rax,%rbx,1)
   13e0a:	00 00                	add    %al,(%rax)
   13e0c:	80 53 ff ff          	adcb   $0xff,-0x1(%rbx)
   13e10:	90                   	nop
   13e11:	19 00                	sbb    %eax,(%rax)
   13e13:	00 a0 53 ff ff 60    	add    %ah,0x60ffff53(%rax)
   13e19:	1a 00                	sbb    (%rax),%al
   13e1b:	00 20                	add    %ah,(%rax)
   13e1d:	54                   	push   %rsp
   13e1e:	ff                   	(bad)  
   13e1f:	ff 90 1a 00 00 50    	call   *0x5000001a(%rax)
   13e25:	54                   	push   %rsp
   13e26:	ff                   	(bad)  
   13e27:	ff ac 1a 00 00 80 54 	ljmp   *0x54800000(%rdx,%rbx,1)
   13e2e:	ff                   	(bad)  
   13e2f:	ff c8                	dec    %eax
   13e31:	1a 00                	sbb    (%rax),%al
   13e33:	00 a0 54 ff ff e4    	add    %ah,-0x1b0000ac(%rax)
   13e39:	1a 00                	sbb    (%rax),%al
   13e3b:	00 d0                	add    %dl,%al
   13e3d:	54                   	push   %rsp
   13e3e:	ff                   	(bad)  
   13e3f:	ff                   	(bad)  
   13e40:	f8                   	clc    
   13e41:	1a 00                	sbb    (%rax),%al
   13e43:	00 f0                	add    %dh,%al
   13e45:	54                   	push   %rsp
   13e46:	ff                   	(bad)  
   13e47:	ff 0c 1b             	decl   (%rbx,%rbx,1)
   13e4a:	00 00                	add    %al,(%rax)
   13e4c:	b0 55                	mov    $0x55,%al
   13e4e:	ff                   	(bad)  
   13e4f:	ff 20                	jmp    *(%rax)
   13e51:	1b 00                	sbb    (%rax),%eax
   13e53:	00 70 56             	add    %dh,0x56(%rax)
   13e56:	ff                   	(bad)  
   13e57:	ff 34 1b             	push   (%rbx,%rbx,1)
   13e5a:	00 00                	add    %al,(%rax)
   13e5c:	90                   	nop
   13e5d:	56                   	push   %rsi
   13e5e:	ff                   	(bad)  
   13e5f:	ff 48 1b             	decl   0x1b(%rax)
   13e62:	00 00                	add    %al,(%rax)
   13e64:	50                   	push   %rax
   13e65:	57                   	push   %rdi
   13e66:	ff                   	(bad)  
   13e67:	ff 5c 1b 00          	lcall  *0x0(%rbx,%rbx,1)
   13e6b:	00 70 57             	add    %dh,0x57(%rax)
   13e6e:	ff                   	(bad)  
   13e6f:	ff 70 1b             	push   0x1b(%rax)
   13e72:	00 00                	add    %al,(%rax)
   13e74:	90                   	nop
   13e75:	57                   	push   %rdi
   13e76:	ff                   	(bad)  
   13e77:	ff 84 1b 00 00 50 58 	incl   0x58500000(%rbx,%rbx,1)
   13e7e:	ff                   	(bad)  
   13e7f:	ff 98 1b 00 00 70    	lcall  *0x7000001b(%rax)
   13e85:	58                   	pop    %rax
   13e86:	ff                   	(bad)  
   13e87:	ff ac 1b 00 00 b0 58 	ljmp   *0x58b00000(%rbx,%rbx,1)
   13e8e:	ff                   	(bad)  
   13e8f:	ff                   	(bad)  
   13e90:	d8 1b                	fcomps (%rbx)
   13e92:	00 00                	add    %al,(%rax)
   13e94:	f0 5a                	lock pop %rdx
   13e96:	ff                   	(bad)  
   13e97:	ff 28                	ljmp   *(%rax)
   13e99:	1c 00                	sbb    $0x0,%al
   13e9b:	00 d0                	add    %dl,%al
   13e9d:	5c                   	pop    %rsp
   13e9e:	ff                   	(bad)  
   13e9f:	ff 58 1c             	lcall  *0x1c(%rax)
   13ea2:	00 00                	add    %al,(%rax)
   13ea4:	e0 5c                	loopne 13f02 <__GNU_EH_FRAME_HDR+0x442>
   13ea6:	ff                   	(bad)  
   13ea7:	ff 6c 1c 00          	ljmp   *0x0(%rsp,%rbx,1)
   13eab:	00 f0                	add    %dh,%al
   13ead:	5c                   	pop    %rsp
   13eae:	ff                   	(bad)  
   13eaf:	ff 80 1c 00 00 10    	incl   0x1000001c(%rax)
   13eb5:	5d                   	pop    %rbp
   13eb6:	ff                   	(bad)  
   13eb7:	ff 94 1c 00 00 50 5d 	call   *0x5d500000(%rsp,%rbx,1)
   13ebe:	ff                   	(bad)  
   13ebf:	ff b4 1c 00 00 90 5d 	push   0x5d900000(%rsp,%rbx,1)
   13ec6:	ff                   	(bad)  
   13ec7:	ff d4                	call   *%rsp
   13ec9:	1c 00                	sbb    $0x0,%al
   13ecb:	00 10                	add    %dl,(%rax)
   13ecd:	5e                   	pop    %rsi
   13ece:	ff                   	(bad)  
   13ecf:	ff                   	(bad)  
   13ed0:	fc                   	cld    
   13ed1:	1c 00                	sbb    $0x0,%al
   13ed3:	00 40 5e             	add    %al,0x5e(%rax)
   13ed6:	ff                   	(bad)  
   13ed7:	ff 10                	call   *(%rax)
   13ed9:	1d 00 00 70 5e       	sbb    $0x5e700000,%eax
   13ede:	ff                   	(bad)  
   13edf:	ff 24 1d 00 00 a0 5e 	jmp    *0x5ea00000(,%rbx,1)
   13ee6:	ff                   	(bad)  
   13ee7:	ff                   	(bad)  
   13ee8:	38 1d 00 00 d0 5e    	cmp    %bl,0x5ed00000(%rip)        # 5ed13eee <_end+0x5ece8ede>
   13eee:	ff                   	(bad)  
   13eef:	ff 4c 1d 00          	decl   0x0(%rbp,%rbx,1)
   13ef3:	00 40 5f             	add    %al,0x5f(%rax)
   13ef6:	ff                   	(bad)  
   13ef7:	ff 60 1d             	jmp    *0x1d(%rax)
   13efa:	00 00                	add    %al,(%rax)
   13efc:	d0 60 ff             	shlb   -0x1(%rax)
   13eff:	ff a4 1d 00 00 90 61 	jmp    *0x61900000(%rbp,%rbx,1)
   13f06:	ff                   	(bad)  
   13f07:	ff                   	(bad)  
   13f08:	d8 1d 00 00 a0 64    	fcomps 0x64a00000(%rip)        # 64a13f0e <_end+0x649e8efe>
   13f0e:	ff                   	(bad)  
   13f0f:	ff                   	(bad)  
   13f10:	3c 1e                	cmp    $0x1e,%al
   13f12:	00 00                	add    %al,(%rax)
   13f14:	80 65 ff ff          	andb   $0xff,-0x1(%rbp)
   13f18:	8c 1e                	mov    %ds,(%rsi)
   13f1a:	00 00                	add    %al,(%rax)
   13f1c:	90                   	nop
   13f1d:	66 ff                	data16 (bad) 
   13f1f:	ff b0 1e 00 00 e0    	push   -0x1fffffe2(%rax)
   13f25:	66 ff                	data16 (bad) 
   13f27:	ff cc                	dec    %esp
   13f29:	1e                   	(bad)  
   13f2a:	00 00                	add    %al,(%rax)
   13f2c:	20 67 ff             	and    %ah,-0x1(%rdi)
   13f2f:	ff f4                	push   %rsp
   13f31:	1e                   	(bad)  
   13f32:	00 00                	add    %al,(%rax)
   13f34:	00 68 ff             	add    %ch,-0x1(%rax)
   13f37:	ff 20                	jmp    *(%rax)
   13f39:	1f                   	(bad)  
   13f3a:	00 00                	add    %al,(%rax)
   13f3c:	f0 68 ff ff 4c 1f    	lock push $0x1f4cffff
   13f42:	00 00                	add    %al,(%rax)
   13f44:	c0 69 ff ff          	shrb   $0xff,-0x1(%rcx)
   13f48:	ac                   	lods   %ds:(%rsi),%al
   13f49:	1f                   	(bad)  
   13f4a:	00 00                	add    %al,(%rax)
   13f4c:	30 6b ff             	xor    %ch,-0x1(%rbx)
   13f4f:	ff                   	(bad)  
   13f50:	d8 1f                	fcomps (%rdi)
   13f52:	00 00                	add    %al,(%rax)
   13f54:	70 6d                	jo     13fc3 <__GNU_EH_FRAME_HDR+0x503>
   13f56:	ff                   	(bad)  
   13f57:	ff 08                	decl   (%rax)
   13f59:	20 00                	and    %al,(%rax)
   13f5b:	00 e0                	add    %ah,%al
   13f5d:	6d                   	insl   (%dx),%es:(%rdi)
   13f5e:	ff                   	(bad)  
   13f5f:	ff                   	(bad)  
   13f60:	3c 20                	cmp    $0x20,%al
   13f62:	00 00                	add    %al,(%rax)
   13f64:	e0 6e                	loopne 13fd4 <__GNU_EH_FRAME_HDR+0x514>
   13f66:	ff                   	(bad)  
   13f67:	ff 70 20             	push   0x20(%rax)
   13f6a:	00 00                	add    %al,(%rax)
   13f6c:	30 6f ff             	xor    %ch,-0x1(%rdi)
   13f6f:	ff a8 20 00 00 50    	ljmp   *0x50000020(%rax)
   13f75:	70 ff                	jo     13f76 <__GNU_EH_FRAME_HDR+0x4b6>
   13f77:	ff 20                	jmp    *(%rax)
   13f79:	21 00                	and    %eax,(%rax)
   13f7b:	00 60 71             	add    %ah,0x71(%rax)
   13f7e:	ff                   	(bad)  
   13f7f:	ff 9c 21 00 00 50 72 	lcall  *0x72500000(%rcx,%riz,1)
   13f86:	ff                   	(bad)  
   13f87:	ff cc                	dec    %esp
   13f89:	21 00                	and    %eax,(%rax)
   13f8b:	00 d0                	add    %dl,%al
   13f8d:	73 ff                	jae    13f8e <__GNU_EH_FRAME_HDR+0x4ce>
   13f8f:	ff 48 22             	decl   0x22(%rax)
   13f92:	00 00                	add    %al,(%rax)
   13f94:	20 75 ff             	and    %dh,-0x1(%rbp)
   13f97:	ff                   	(bad)  
   13f98:	b8 22 00 00 10       	mov    $0x10000022,%eax
   13f9d:	76 ff                	jbe    13f9e <__GNU_EH_FRAME_HDR+0x4de>
   13f9f:	ff                   	(bad)  
   13fa0:	f8                   	clc    
   13fa1:	22 00                	and    (%rax),%al
   13fa3:	00 50 77             	add    %dl,0x77(%rax)
   13fa6:	ff                   	(bad)  
   13fa7:	ff 2c 23             	ljmp   *(%rbx,%riz,1)
   13faa:	00 00                	add    %al,(%rax)
   13fac:	d0 77 ff             	shlb   -0x1(%rdi)
   13faf:	ff 40 23             	incl   0x23(%rax)
   13fb2:	00 00                	add    %al,(%rax)
   13fb4:	50                   	push   %rax
   13fb5:	78 ff                	js     13fb6 <__GNU_EH_FRAME_HDR+0x4f6>
   13fb7:	ff 54 23 00          	call   *0x0(%rbx,%riz,1)
   13fbb:	00 e0                	add    %ah,%al
   13fbd:	78 ff                	js     13fbe <__GNU_EH_FRAME_HDR+0x4fe>
   13fbf:	ff 68 23             	ljmp   *0x23(%rax)
   13fc2:	00 00                	add    %al,(%rax)
   13fc4:	f0 78 ff             	lock js 13fc6 <__GNU_EH_FRAME_HDR+0x506>
   13fc7:	ff                   	(bad)  
   13fc8:	7c 23                	jl     13fed <__GNU_EH_FRAME_HDR+0x52d>
   13fca:	00 00                	add    %al,(%rax)
   13fcc:	00 79 ff             	add    %bh,-0x1(%rcx)
   13fcf:	ff 90 23 00 00 10    	call   *0x10000023(%rax)
   13fd5:	79 ff                	jns    13fd6 <__GNU_EH_FRAME_HDR+0x516>
   13fd7:	ff a4 23 00 00 20 79 	jmp    *0x79200000(%rbx,%riz,1)
   13fde:	ff                   	(bad)  
   13fdf:	ff                   	(bad)  
   13fe0:	b8 23 00 00 40       	mov    $0x40000023,%eax
   13fe5:	79 ff                	jns    13fe6 <__GNU_EH_FRAME_HDR+0x526>
   13fe7:	ff cc                	dec    %esp
   13fe9:	23 00                	and    (%rax),%eax
   13feb:	00 80 79 ff ff ec    	add    %al,-0x13000087(%rax)
   13ff1:	23 00                	and    (%rax),%eax
   13ff3:	00 b0 7b ff ff 20    	add    %dh,0x20ffff7b(%rax)
   13ff9:	24 00                	and    $0x0,%al
   13ffb:	00 00                	add    %al,(%rax)
   13ffd:	7c ff                	jl     13ffe <__GNU_EH_FRAME_HDR+0x53e>
   13fff:	ff 34 24             	push   (%rsp)
   14002:	00 00                	add    %al,(%rax)
   14004:	00 7e ff             	add    %bh,-0x1(%rsi)
   14007:	ff 80 24 00 00 00    	incl   0x24(%rax)
   1400d:	7f ff                	jg     1400e <__GNU_EH_FRAME_HDR+0x54e>
   1400f:	ff                   	(bad)  
   14010:	d8 24 00             	fsubs  (%rax,%rax,1)
   14013:	00 20                	add    %ah,(%rax)
   14015:	7f ff                	jg     14016 <__GNU_EH_FRAME_HDR+0x556>
   14017:	ff f4                	push   %rsp
   14019:	24 00                	and    $0x0,%al
   1401b:	00 30                	add    %dh,(%rax)
   1401d:	7f ff                	jg     1401e <__GNU_EH_FRAME_HDR+0x55e>
   1401f:	ff 08                	decl   (%rax)
   14021:	25 00 00 40 7f       	and    $0x7f400000,%eax
   14026:	ff                   	(bad)  
   14027:	ff 1c 25 00 00 50 7f 	lcall  *0x7f500000
   1402e:	ff                   	(bad)  
   1402f:	ff 30                	push   (%rax)
   14031:	25 00 00 60 7f       	and    $0x7f600000,%eax
   14036:	ff                   	(bad)  
   14037:	ff 44 25 00          	incl   0x0(%rbp,%riz,1)
   1403b:	00 70 7f             	add    %dh,0x7f(%rax)
   1403e:	ff                   	(bad)  
   1403f:	ff 58 25             	lcall  *0x25(%rax)
   14042:	00 00                	add    %al,(%rax)
   14044:	80 7f ff ff          	cmpb   $0xff,-0x1(%rdi)
   14048:	70 25                	jo     1406f <__GNU_EH_FRAME_HDR+0x5af>
   1404a:	00 00                	add    %al,(%rax)
   1404c:	40 81 ff ff b4 25 00 	rex cmp $0x25b4ff,%edi
   14053:	00 40 84             	add    %al,-0x7c(%rax)
   14056:	ff                   	(bad)  
   14057:	ff 24 26             	jmp    *(%rsi,%riz,1)
   1405a:	00 00                	add    %al,(%rax)
   1405c:	70 84                	jo     13fe2 <__GNU_EH_FRAME_HDR+0x522>
   1405e:	ff                   	(bad)  
   1405f:	ff 40 26             	incl   0x26(%rax)
   14062:	00 00                	add    %al,(%rax)
   14064:	30 85 ff ff 7c 26    	xor    %al,0x267cffff(%rbp)
   1406a:	00 00                	add    %al,(%rax)
   1406c:	40 85 ff             	rex test %edi,%edi
   1406f:	ff 90 26 00 00 00    	call   *0x26(%rax)
   14075:	86 ff                	xchg   %bh,%bh
   14077:	ff cc                	dec    %esp
   14079:	26 00 00             	es add %al,(%rax)
   1407c:	10 86 ff ff e0 26    	adc    %al,0x26e0ffff(%rsi)
   14082:	00 00                	add    %al,(%rax)
   14084:	d0 86 ff ff 1c 27    	rolb   0x271cffff(%rsi)
   1408a:	00 00                	add    %al,(%rax)
   1408c:	e0 86                	loopne 14014 <__GNU_EH_FRAME_HDR+0x554>
   1408e:	ff                   	(bad)  
   1408f:	ff 30                	push   (%rax)
   14091:	27                   	(bad)  
   14092:	00 00                	add    %al,(%rax)
   14094:	f0 87 ff             	lock xchg %edi,%edi
   14097:	ff                   	(bad)  
   14098:	7c 27                	jl     140c1 <__GNU_EH_FRAME_HDR+0x601>
   1409a:	00 00                	add    %al,(%rax)
   1409c:	00 88 ff ff 90 27    	add    %cl,0x2790ffff(%rax)
   140a2:	00 00                	add    %al,(%rax)
   140a4:	e0 88                	loopne 1402e <__GNU_EH_FRAME_HDR+0x56e>
   140a6:	ff                   	(bad)  
   140a7:	ff c4                	inc    %esp
   140a9:	27                   	(bad)  
   140aa:	00 00                	add    %al,(%rax)
   140ac:	c0 89 ff ff f0 27 00 	rorb   $0x0,0x27f0ffff(%rcx)
   140b3:	00 b0 8a ff ff 34    	add    %dh,0x34ffff8a(%rax)
   140b9:	28 00                	sub    %al,(%rax)
   140bb:	00 c0                	add    %al,%al
   140bd:	8a ff                	mov    %bh,%bh
   140bf:	ff 48 28             	decl   0x28(%rax)
   140c2:	00 00                	add    %al,(%rax)
   140c4:	40 8b ff             	rex mov %edi,%edi
   140c7:	ff 80 28 00 00 b0    	incl   -0x4fffffd8(%rax)
   140cd:	8b ff                	mov    %edi,%edi
   140cf:	ff 94 28 00 00 d0 8c 	call   *-0x73300000(%rax,%rbp,1)
   140d6:	ff                   	(bad)  
   140d7:	ff c0                	inc    %eax
   140d9:	28 00                	sub    %al,(%rax)
   140db:	00 60 8d             	add    %ah,-0x73(%rax)
   140de:	ff                   	(bad)  
   140df:	ff                   	(bad)  
   140e0:	dc 28                	fsubrl (%rax)
   140e2:	00 00                	add    %al,(%rax)
   140e4:	70 8d                	jo     14073 <__GNU_EH_FRAME_HDR+0x5b3>
   140e6:	ff                   	(bad)  
   140e7:	ff f0                	push   %rax
   140e9:	28 00                	sub    %al,(%rax)
   140eb:	00 a0 95 ff ff 2c    	add    %ah,0x2cffff95(%rax)
   140f1:	29 00                	sub    %eax,(%rax)
   140f3:	00 90 96 ff ff 48    	add    %dl,0x48ffff96(%rax)
   140f9:	29 00                	sub    %eax,(%rax)
   140fb:	00 e0                	add    %ah,%al
   140fd:	b1 ff                	mov    $0xff,%cl
   140ff:	ff 94 29 00 00 80 b4 	call   *-0x4b800000(%rcx,%rbp,1)
   14106:	ff                   	(bad)  
   14107:	ff                   	(bad)  
   14108:	f8                   	clc    
   14109:	29 00                	sub    %eax,(%rax)
   1410b:	00 80 bf ff ff 5c    	add    %al,0x5cffffbf(%rax)
   14111:	2a 00                	sub    (%rax),%al
   14113:	00 f0                	add    %dh,%al
   14115:	bf ff ff 88 2a       	mov    $0x2a88ffff,%edi
   1411a:	00 00                	add    %al,(%rax)
   1411c:	00 c7                	add    %al,%bh
   1411e:	ff                   	(bad)  
   1411f:	ff f0                	push   %rax
   14121:	2a 00                	sub    (%rax),%al
   14123:	00 20                	add    %ah,(%rax)
   14125:	c7                   	(bad)  
   14126:	ff                   	(bad)  
   14127:	ff 04 2b             	incl   (%rbx,%rbp,1)
   1412a:	00 00                	add    %al,(%rax)
   1412c:	b0 c7                	mov    $0xc7,%al
   1412e:	ff                   	(bad)  
   1412f:	ff 28                	ljmp   *(%rax)
   14131:	2b 00                	sub    (%rax),%eax
   14133:	00 70 c9             	add    %dh,-0x37(%rax)
   14136:	ff                   	(bad)  
   14137:	ff 68 2b             	ljmp   *0x2b(%rax)
   1413a:	00 00                	add    %al,(%rax)
   1413c:	40 ca ff ff          	rex lret $0xffff
   14140:	7c 2b                	jl     1416d <__GNU_EH_FRAME_HDR+0x6ad>
   14142:	00 00                	add    %al,(%rax)
   14144:	60                   	(bad)  
   14145:	ca ff ff             	lret   $0xffff
   14148:	90                   	nop
   14149:	2b 00                	sub    (%rax),%eax
   1414b:	00 20                	add    %ah,(%rax)
   1414d:	cb                   	lret   
   1414e:	ff                   	(bad)  
   1414f:	ff cc                	dec    %esp
   14151:	2b 00                	sub    (%rax),%eax
   14153:	00 10                	add    %dl,(%rax)
   14155:	cc                   	int3   
   14156:	ff                   	(bad)  
   14157:	ff 18                	lcall  *(%rax)
   14159:	2c 00                	sub    $0x0,%al
   1415b:	00 30                	add    %dh,(%rax)
   1415d:	cc                   	int3   
   1415e:	ff                   	(bad)  
   1415f:	ff 2c 2c             	ljmp   *(%rsp,%rbp,1)
   14162:	00 00                	add    %al,(%rax)
   14164:	70 cd                	jo     14133 <__GNU_EH_FRAME_HDR+0x673>
   14166:	ff                   	(bad)  
   14167:	ff 90 2c 00 00 70    	call   *0x7000002c(%rax)
   1416d:	ce                   	(bad)  
   1416e:	ff                   	(bad)  
   1416f:	ff d4                	call   *%rsp
   14171:	2c 00                	sub    $0x0,%al
   14173:	00 80 ce ff ff e8    	add    %al,-0x17000032(%rax)
   14179:	2c 00                	sub    $0x0,%al
   1417b:	00 d0                	add    %dl,%al
   1417d:	ce                   	(bad)  
   1417e:	ff                   	(bad)  
   1417f:	ff 0c 2d 00 00 20 cf 	decl   -0x30e00000(,%rbp,1)
   14186:	ff                   	(bad)  
   14187:	ff 44 2d 00          	incl   0x0(%rbp,%rbp,1)
   1418b:	00 30                	add    %dh,(%rax)
   1418d:	cf                   	iret   
   1418e:	ff                   	(bad)  
   1418f:	ff 58 2d             	lcall  *0x2d(%rax)
   14192:	00 00                	add    %al,(%rax)
   14194:	40 cf                	rex iret 
   14196:	ff                   	(bad)  
   14197:	ff 70 2d             	push   0x2d(%rax)
   1419a:	00 00                	add    %al,(%rax)
   1419c:	c0 cf ff             	ror    $0xff,%bh
   1419f:	ff 88 2d 00 00 d0    	decl   -0x2fffffd3(%rax)
   141a5:	cf                   	iret   
   141a6:	ff                   	(bad)  
   141a7:	ff a4 2d 00 00 e0 cf 	jmp    *-0x30200000(%rbp,%rbp,1)
   141ae:	ff                   	(bad)  
   141af:	ff c0                	inc    %eax
   141b1:	2d 00 00 00 d0       	sub    $0xd0000000,%eax
   141b6:	ff                   	(bad)  
   141b7:	ff                   	(bad)  
   141b8:	d8 2d 00 00 50 d0    	fsubrs -0x2fb00000(%rip)        # ffffffffd05141be <_end+0xffffffffd04e91ae>
   141be:	ff                   	(bad)  
   141bf:	ff                   	(bad)  
   141c0:	fc                   	cld    
   141c1:	2d 00 00 d0 d0       	sub    $0xd0d00000,%eax
   141c6:	ff                   	(bad)  
   141c7:	ff 40 2e             	incl   0x2e(%rax)
   141ca:	00 00                	add    %al,(%rax)
   141cc:	60                   	(bad)  
   141cd:	d1 ff                	sar    %edi
   141cf:	ff 88 2e 00 00 00    	decl   0x2e(%rax)
   141d5:	d2 ff                	sar    %cl,%bh
   141d7:	ff                   	(bad)  
   141d8:	d8 2e                	fsubrs (%rsi)
   141da:	00 00                	add    %al,(%rax)
   141dc:	80 d2 ff             	adc    $0xff,%dl
   141df:	ff 04 2f             	incl   (%rdi,%rbp,1)
   141e2:	00 00                	add    %al,(%rax)
   141e4:	30 d4                	xor    %dl,%ah
   141e6:	ff                   	(bad)  
   141e7:	ff 30                	push   (%rax)
   141e9:	2f                   	(bad)  
   141ea:	00 00                	add    %al,(%rax)
   141ec:	90                   	nop
   141ed:	d4                   	(bad)  
   141ee:	ff                   	(bad)  
   141ef:	ff 48 2f             	decl   0x2f(%rax)
   141f2:	00 00                	add    %al,(%rax)
   141f4:	a0 d5 ff ff 74 2f 00 	movabs 0xb000002f74ffffd5,%al
   141fb:	00 b0 
   141fd:	d5                   	(bad)  
   141fe:	ff                   	(bad)  
   141ff:	ff 88 2f 00 00 00    	decl   0x2f(%rax)
   14205:	d8 ff                	fdivr  %st(7),%st
   14207:	ff                   	(bad)  
   14208:	bc 2f 00 00 90       	mov    $0x9000002f,%esp
   1420d:	d9 ff                	fcos   
   1420f:	ff                   	(bad)  
   14210:	ec                   	in     (%dx),%al
   14211:	2f                   	(bad)  
   14212:	00 00                	add    %al,(%rax)
   14214:	40 db ff             	rex (bad) 
   14217:	ff                   	(bad)  
   14218:	38 0c 00             	cmp    %cl,(%rax,%rax,1)
   1421b:	00 80 de ff ff 70    	add    %al,0x70ffffde(%rax)
   14221:	0c 00                	or     $0x0,%al
   14223:	00 20                	add    %ah,(%rax)
   14225:	e0 ff                	loopne 14226 <__GNU_EH_FRAME_HDR+0x766>
   14227:	ff e0                	jmp    *%rax
   14229:	0c 00                	or     $0x0,%al
   1422b:	00 40 e0             	add    %al,-0x20(%rax)
   1422e:	ff                   	(bad)  
   1422f:	ff 80 12 00 00 52    	incl   0x52000012(%rax)
   14235:	e2 ff                	loop   14236 <__GNU_EH_FRAME_HDR+0x776>
   14237:	ff 50 18             	call   *0x18(%rax)
   1423a:	00 00                	add    %al,(%rax)
   1423c:	53                   	push   %rbx
   1423d:	e2 ff                	loop   1423e <__GNU_EH_FRAME_HDR+0x77e>
   1423f:	ff 64 18 00          	jmp    *0x0(%rax,%rbx,1)
   14243:	00 55 e2             	add    %dl,-0x1e(%rbp)
   14246:	ff                   	(bad)  
   14247:	ff                   	(bad)  
   14248:	78 18                	js     14262 <__GNU_EH_FRAME_HDR+0x7a2>
   1424a:	00 00                	add    %al,(%rax)
   1424c:	57                   	push   %rdi
   1424d:	e2 ff                	loop   1424e <__GNU_EH_FRAME_HDR+0x78e>
   1424f:	ff 8c 18 00 00 59 e2 	decl   -0x1da70000(%rax,%rbx,1)
   14256:	ff                   	(bad)  
   14257:	ff a0 18 00 00 5b    	jmp    *0x5b000018(%rax)
   1425d:	e2 ff                	loop   1425e <__GNU_EH_FRAME_HDR+0x79e>
   1425f:	ff b4 18 00 00 5d e2 	push   -0x1da30000(%rax,%rbx,1)
   14266:	ff                   	(bad)  
   14267:	ff c8                	dec    %eax
   14269:	18 00                	sbb    %al,(%rax)
   1426b:	00 5f e2             	add    %bl,-0x1e(%rdi)
   1426e:	ff                   	(bad)  
   1426f:	ff                   	(bad)  
   14270:	dc 18                	fcompl (%rax)
   14272:	00 00                	add    %al,(%rax)
   14274:	61                   	(bad)  
   14275:	e2 ff                	loop   14276 <__GNU_EH_FRAME_HDR+0x7b6>
   14277:	ff f0                	push   %rax
   14279:	18 00                	sbb    %al,(%rax)
   1427b:	00 64 e2 ff          	add    %ah,-0x1(%rdx,%riz,8)
   1427f:	ff 04 19             	incl   (%rcx,%rbx,1)
   14282:	00 00                	add    %al,(%rax)
   14284:	67 e2 ff             	loopl  14286 <__GNU_EH_FRAME_HDR+0x7c6>
   14287:	ff 18                	lcall  *(%rax)
   14289:	19 00                	sbb    %eax,(%rax)
   1428b:	00 6a e2             	add    %ch,-0x1e(%rdx)
   1428e:	ff                   	(bad)  
   1428f:	ff 2c 19             	ljmp   *(%rcx,%rbx,1)
   14292:	00 00                	add    %al,(%rax)
   14294:	6d                   	insl   (%dx),%es:(%rdi)
   14295:	e2 ff                	loop   14296 <__GNU_EH_FRAME_HDR+0x7d6>
   14297:	ff 40 19             	incl   0x19(%rax)
   1429a:	00 00                	add    %al,(%rax)
   1429c:	70 e2                	jo     14280 <__GNU_EH_FRAME_HDR+0x7c0>
   1429e:	ff                   	(bad)  
   1429f:	ff 54 19 00          	call   *0x0(%rcx,%rbx,1)
   142a3:	00 73 e2             	add    %dh,-0x1e(%rbx)
   142a6:	ff                   	(bad)  
   142a7:	ff 68 19             	ljmp   *0x19(%rax)
   142aa:	00 00                	add    %al,(%rax)
   142ac:	76 e2                	jbe    14290 <__GNU_EH_FRAME_HDR+0x7d0>
   142ae:	ff                   	(bad)  
   142af:	ff                   	(bad)  
   142b0:	7c 19                	jl     142cb <__GNU_EH_FRAME_HDR+0x80b>
   142b2:	00 00                	add    %al,(%rax)
   142b4:	a3 e6 ff ff b0 19 00 	movabs %eax,0x23000019b0ffffe6
   142bb:	00 23 
   142bd:	e9 ff ff cc 19       	jmp    19ce42c1 <_end+0x19cb92b1>
   142c2:	00 00                	add    %al,(%rax)
   142c4:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
   142c5:	e9 ff ff e8 19       	jmp    19ea42c9 <_end+0x19e792b9>
   142ca:	00 00                	add    %al,(%rax)
   142cc:	c4                   	(bad)  
   142cd:	e9 ff ff fc 19       	jmp    19fe42d1 <_end+0x19fb92c1>
   142d2:	00 00                	add    %al,(%rax)
   142d4:	e3 e9                	jrcxz  142bf <__GNU_EH_FRAME_HDR+0x7ff>
   142d6:	ff                   	(bad)  
   142d7:	ff 10                	call   *(%rax)
   142d9:	1a 00                	sbb    (%rax),%al
   142db:	00 03                	add    %al,(%rbx)
   142dd:	ea                   	(bad)  
   142de:	ff                   	(bad)  
   142df:	ff 24 1a             	jmp    *(%rdx,%rbx,1)
   142e2:	00 00                	add    %al,(%rax)
   142e4:	21 ea                	and    %ebp,%edx
   142e6:	ff                   	(bad)  
   142e7:	ff                   	(bad)  
   142e8:	38 1a                	cmp    %bl,(%rdx)
   142ea:	00 00                	add    %al,(%rax)
   142ec:	3f                   	(bad)  
   142ed:	ea                   	(bad)  
   142ee:	ff                   	(bad)  
   142ef:	ff 4c 1a 00          	decl   0x0(%rdx,%rbx,1)
	...

Disassembly of section .eh_frame:

00000000000142f8 <.eh_frame>:
   142f8:	14 00                	adc    $0x0,%al
   142fa:	00 00                	add    %al,(%rax)
   142fc:	00 00                	add    %al,(%rax)
   142fe:	00 00                	add    %al,(%rax)
   14300:	01 7a 52             	add    %edi,0x52(%rdx)
   14303:	00 01                	add    %al,(%rcx)
   14305:	78 10                	js     14317 <__GNU_EH_FRAME_HDR+0x857>
   14307:	01 1b                	add    %ebx,(%rbx)
   14309:	0c 07                	or     $0x7,%al
   1430b:	08 90 01 00 00 18    	or     %dl,0x18000001(%rax)
   14311:	00 00                	add    %al,(%rax)
   14313:	00 1c 00             	add    %bl,(%rax,%rax,1)
   14316:	00 00                	add    %al,(%rax)
   14318:	4b dd fe             	rex.WXB (bad) 
   1431b:	ff 5c 00 00          	lcall  *0x0(%rax,%rax,1)
   1431f:	00 00                	add    %al,(%rax)
   14321:	45 0e                	rex.RB (bad) 
   14323:	10 83 02 02 56 0e    	adc    %al,0xe560202(%rbx)
   14329:	08 00                	or     %al,(%rax)
   1432b:	00 10                	add    %dl,(%rax)
   1432d:	00 00                	add    %al,(%rax)
   1432f:	00 38                	add    %bh,(%rax)
   14331:	00 00                	add    %al,(%rax)
   14333:	00 8b dd fe ff 1d    	add    %cl,0x1dfffedd(%rbx)
   14339:	00 00                	add    %al,(%rax)
   1433b:	00 00                	add    %al,(%rax)
   1433d:	00 00                	add    %al,(%rax)
   1433f:	00 14 00             	add    %dl,(%rax,%rax,1)
   14342:	00 00                	add    %al,(%rax)
   14344:	4c 00 00             	rex.WR add %r8b,(%rax)
   14347:	00 94 dd fe ff 36 00 	add    %dl,0x36fffe(%rbp,%rbx,8)
   1434e:	00 00                	add    %al,(%rax)
   14350:	00 45 0e             	add    %al,0xe(%rbp)
   14353:	10 6c 0e 08          	adc    %ch,0x8(%rsi,%rcx,1)
   14357:	00 1c 00             	add    %bl,(%rax,%rax,1)
   1435a:	00 00                	add    %al,(%rax)
   1435c:	64 00 00             	add    %al,%fs:(%rax)
   1435f:	00 b2 dd fe ff 33    	add    %dh,0x33fffedd(%rdx)
   14365:	00 00                	add    %al,(%rax)
   14367:	00 00                	add    %al,(%rax)
   14369:	45 0e                	rex.RB (bad) 
   1436b:	10 83 02 6d 0e 08    	adc    %al,0x80e6d02(%rbx)
   14371:	00 00                	add    %al,(%rax)
   14373:	00 00                	add    %al,(%rax)
   14375:	00 00                	add    %al,(%rax)
   14377:	00 24 00             	add    %ah,(%rax,%rax,1)
   1437a:	00 00                	add    %al,(%rax)
   1437c:	84 00                	test   %al,(%rax)
   1437e:	00 00                	add    %al,(%rax)
   14380:	80 cc fe             	or     $0xfe,%ah
   14383:	ff 10                	call   *(%rax)
   14385:	00 00                	add    %al,(%rax)
   14387:	00 00                	add    %al,(%rax)
   14389:	0e                   	(bad)  
   1438a:	10 46 0e             	adc    %al,0xe(%rsi)
   1438d:	18 4a 0f             	sbb    %cl,0xf(%rdx)
   14390:	0b 77 08             	or     0x8(%rdi),%esi
   14393:	80 00 3f             	addb   $0x3f,(%rax)
   14396:	1a 3b                	sbb    (%rbx),%bh
   14398:	2a 33                	sub    (%rbx),%dh
   1439a:	24 22                	and    $0x22,%al
   1439c:	00 00                	add    %al,(%rax)
   1439e:	00 00                	add    %al,(%rax)
   143a0:	14 00                	adc    $0x0,%al
   143a2:	00 00                	add    %al,(%rax)
   143a4:	ac                   	lods   %ds:(%rsi),%al
   143a5:	00 00                	add    %al,(%rax)
   143a7:	00 68 cc             	add    %ch,-0x34(%rax)
   143aa:	fe                   	(bad)  
   143ab:	ff 10                	call   *(%rax)
	...
   143b5:	00 00                	add    %al,(%rax)
   143b7:	00 34 00             	add    %dh,(%rax,%rax,1)
   143ba:	00 00                	add    %al,(%rax)
   143bc:	c4                   	(bad)  
   143bd:	00 00                	add    %al,(%rax)
   143bf:	00 46 fc             	add    %al,-0x4(%rsi)
   143c2:	fe                   	(bad)  
   143c3:	ff                   	(bad)  
   143c4:	ef                   	out    %eax,(%dx)
   143c5:	00 00                	add    %al,(%rax)
   143c7:	00 00                	add    %al,(%rax)
   143c9:	46 0e                	rex.RX (bad) 
   143cb:	10 8d 02 42 0e 18    	adc    %cl,0x180e4202(%rbp)
   143d1:	8c 03                	mov    %es,(%rbx)
   143d3:	41 0e                	rex.B (bad) 
   143d5:	20 86 04 41 0e 28    	and    %al,0x280e4104(%rsi)
   143db:	83 05 44 0e 50 02 d7 	addl   $0xffffffd7,0x2500e44(%rip)        # 2515226 <_end+0x24ea216>
   143e2:	0e                   	(bad)  
   143e3:	28 44 0e 20          	sub    %al,0x20(%rsi,%rcx,1)
   143e7:	41 0e                	rex.B (bad) 
   143e9:	18 42 0e             	sbb    %al,0xe(%rdx)
   143ec:	10 42 0e             	adc    %al,0xe(%rdx)
   143ef:	08 14 00             	or     %dl,(%rax,%rax,1)
   143f2:	00 00                	add    %al,(%rax)
   143f4:	fc                   	cld    
   143f5:	00 00                	add    %al,(%rax)
   143f7:	00 fd                	add    %bh,%ch
   143f9:	fc                   	cld    
   143fa:	fe                   	(bad)  
   143fb:	ff 19                	lcall  *(%rcx)
   143fd:	00 00                	add    %al,(%rax)
   143ff:	00 00                	add    %al,(%rax)
   14401:	4a 0e                	rex.WX (bad) 
   14403:	10 48 0e             	adc    %cl,0xe(%rax)
   14406:	08 00                	or     %al,(%rax)
   14408:	20 00                	and    %al,(%rax)
   1440a:	00 00                	add    %al,(%rax)
   1440c:	14 01                	adc    $0x1,%al
   1440e:	00 00                	add    %al,(%rax)
   14410:	fe                   	(bad)  
   14411:	fc                   	cld    
   14412:	fe                   	(bad)  
   14413:	ff 66 00             	jmp    *0x0(%rsi)
   14416:	00 00                	add    %al,(%rax)
   14418:	00 4a 0e             	add    %cl,0xe(%rdx)
   1441b:	10 83 02 4c 0e 20    	adc    %al,0x200e4c02(%rbx)
   14421:	02 48 0e             	add    0xe(%rax),%cl
   14424:	10 41 0e             	adc    %al,0xe(%rcx)
   14427:	08 41 c3             	or     %al,-0x3d(%rcx)
   1442a:	00 00                	add    %al,(%rax)
   1442c:	20 00                	and    %al,(%rax)
   1442e:	00 00                	add    %al,(%rax)
   14430:	38 01                	cmp    %al,(%rcx)
   14432:	00 00                	add    %al,(%rax)
   14434:	40 fd                	rex std 
   14436:	fe                   	(bad)  
   14437:	ff 63 00             	jmp    *0x0(%rbx)
   1443a:	00 00                	add    %al,(%rax)
   1443c:	00 4a 0e             	add    %cl,0xe(%rdx)
   1443f:	10 83 02 4c 0e 20    	adc    %al,0x200e4c02(%rbx)
   14445:	02 45 0e             	add    0xe(%rbp),%al
   14448:	10 41 0e             	adc    %al,0xe(%rcx)
   1444b:	08 41 c3             	or     %al,-0x3d(%rcx)
   1444e:	00 00                	add    %al,(%rax)
   14450:	34 00                	xor    $0x0,%al
   14452:	00 00                	add    %al,(%rax)
   14454:	5c                   	pop    %rsp
   14455:	01 00                	add    %eax,(%rax)
   14457:	00 7f fd             	add    %bh,-0x3(%rdi)
   1445a:	fe                   	(bad)  
   1445b:	ff                   	(bad)  
   1445c:	e9 00 00 00 00       	jmp    14461 <__GNU_EH_FRAME_HDR+0x9a1>
   14461:	46 0e                	rex.RX (bad) 
   14463:	10 8d 02 42 0e 18    	adc    %cl,0x180e4202(%rbp)
   14469:	8c 03                	mov    %es,(%rbx)
   1446b:	41 0e                	rex.B (bad) 
   1446d:	20 86 04 43 0e 28    	and    %al,0x280e4304(%rsi)
   14473:	83 05 47 0e 50 02 cf 	addl   $0xffffffcf,0x2500e47(%rip)        # 25152c1 <_end+0x24ea2b1>
   1447a:	0e                   	(bad)  
   1447b:	28 41 0e             	sub    %al,0xe(%rcx)
   1447e:	20 41 0e             	and    %al,0xe(%rcx)
   14481:	18 42 0e             	sbb    %al,0xe(%rdx)
   14484:	10 42 0e             	adc    %al,0xe(%rdx)
   14487:	08 34 00             	or     %dh,(%rax,%rax,1)
   1448a:	00 00                	add    %al,(%rax)
   1448c:	94                   	xchg   %eax,%esp
   1448d:	01 00                	add    %eax,(%rax)
   1448f:	00 30                	add    %dh,(%rax)
   14491:	fe                   	(bad)  
   14492:	fe                   	(bad)  
   14493:	ff 11                	call   *(%rcx)
   14495:	01 00                	add    %eax,(%rax)
   14497:	00 00                	add    %al,(%rax)
   14499:	46 0e                	rex.RX (bad) 
   1449b:	10 8d 02 42 0e 18    	adc    %cl,0x180e4202(%rbp)
   144a1:	8c 03                	mov    %es,(%rbx)
   144a3:	44 0e                	rex.R (bad) 
   144a5:	20 86 04 41 0e 28    	and    %al,0x280e4104(%rsi)
   144ab:	83 05 47 0e 50 02 f6 	addl   $0xfffffff6,0x2500e47(%rip)        # 25152f9 <_end+0x24ea2e9>
   144b2:	0e                   	(bad)  
   144b3:	28 41 0e             	sub    %al,0xe(%rcx)
   144b6:	20 41 0e             	and    %al,0xe(%rcx)
   144b9:	18 42 0e             	sbb    %al,0xe(%rdx)
   144bc:	10 42 0e             	adc    %al,0xe(%rdx)
   144bf:	08 10                	or     %dl,(%rax)
   144c1:	00 00                	add    %al,(%rax)
   144c3:	00 cc                	add    %cl,%ah
   144c5:	01 00                	add    %eax,(%rax)
   144c7:	00 18                	add    %bl,(%rax)
   144c9:	ff                   	(bad)  
   144ca:	fe                   	(bad)  
   144cb:	ff 94 00 00 00 00 00 	call   *0x0(%rax,%rax,1)
   144d2:	00 00                	add    %al,(%rax)
   144d4:	30 00                	xor    %al,(%rax)
   144d6:	00 00                	add    %al,(%rax)
   144d8:	e0 01                	loopne 144db <__GNU_EH_FRAME_HDR+0xa1b>
   144da:	00 00                	add    %al,(%rax)
   144dc:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
   144dd:	ff                   	(bad)  
   144de:	fe                   	(bad)  
   144df:	ff 50 11             	call   *0x11(%rax)
   144e2:	00 00                	add    %al,(%rax)
   144e4:	00 45 0e             	add    %al,0xe(%rbp)
   144e7:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
   144ed:	54                   	push   %rsp
   144ee:	8f 03                	pop    (%rbx)
   144f0:	8e 04 8d 05 8c 06 83 	mov    -0x7cf973fb(,%rcx,4),%es
   144f7:	07                   	(bad)  
   144f8:	03 30                	add    (%rax),%esi
   144fa:	10 0a                	adc    %cl,(%rdx)
   144fc:	0c 07                	or     $0x7,%al
   144fe:	08 44 0b 00          	or     %al,0x0(%rbx,%rcx,1)
   14502:	00 00                	add    %al,(%rax)
   14504:	00 00                	add    %al,(%rax)
   14506:	00 00                	add    %al,(%rax)
   14508:	6c                   	insb   (%dx),%es:(%rdi)
   14509:	00 00                	add    %al,(%rax)
   1450b:	00 14 02             	add    %dl,(%rdx,%rax,1)
   1450e:	00 00                	add    %al,(%rax)
   14510:	c0 10 ff             	rclb   $0xff,(%rax)
   14513:	ff 03                	incl   (%rbx)
   14515:	02 00                	add    (%rax),%al
   14517:	00 00                	add    %al,(%rax)
   14519:	4b 0e                	rex.WXB (bad) 
   1451b:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   14521:	8e 03                	mov    (%rbx),%es
   14523:	45 0e                	rex.RB (bad) 
   14525:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
   1452b:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff86315372 <_end+0xffffffff862ea362>
   14531:	06                   	(bad)  
   14532:	41 0e                	rex.B (bad) 
   14534:	38 83 07 47 0e 40    	cmp    %al,0x400e4707(%rbx)
   1453a:	02 a1 0a 0e 38 43    	add    0x43380e0a(%rcx),%ah
   14540:	0e                   	(bad)  
   14541:	30 41 0e             	xor    %al,0xe(%rcx)
   14544:	28 42 0e             	sub    %al,0xe(%rdx)
   14547:	20 42 0e             	and    %al,0xe(%rdx)
   1454a:	18 42 0e             	sbb    %al,0xe(%rdx)
   1454d:	10 42 0e             	adc    %al,0xe(%rdx)
   14550:	08 43 0b             	or     %al,0xb(%rbx)
   14553:	65 0a 0e             	or     %gs:(%rsi),%cl
   14556:	38 41 0e             	cmp    %al,0xe(%rcx)
   14559:	30 41 0e             	xor    %al,0xe(%rcx)
   1455c:	28 42 0e             	sub    %al,0xe(%rdx)
   1455f:	20 42 0e             	and    %al,0xe(%rdx)
   14562:	18 42 0e             	sbb    %al,0xe(%rdx)
   14565:	10 42 0e             	adc    %al,0xe(%rdx)
   14568:	08 41 0b             	or     %al,0xb(%rcx)
   1456b:	03 00                	add    (%rax),%eax
   1456d:	01 0e                	add    %ecx,(%rsi)
   1456f:	08 c3                	or     %al,%bl
   14571:	c6                   	(bad)  
   14572:	cc                   	int3   
   14573:	cd ce                	int    $0xce
   14575:	cf                   	iret   
   14576:	00 00                	add    %al,(%rax)
   14578:	34 00                	xor    $0x0,%al
   1457a:	00 00                	add    %al,(%rax)
   1457c:	84 02                	test   %al,(%rdx)
   1457e:	00 00                	add    %al,(%rax)
   14580:	60                   	(bad)  
   14581:	12 ff                	adc    %bh,%bh
   14583:	ff 33                	push   (%rbx)
   14585:	00 00                	add    %al,(%rax)
   14587:	00 00                	add    %al,(%rax)
   14589:	45 0e                	rex.RB (bad) 
   1458b:	10 86 02 44 0e 18    	adc    %al,0x180e4402(%rsi)
   14591:	83 03 47             	addl   $0x47,(%rbx)
   14594:	0e                   	(bad)  
   14595:	20 4d 0a             	and    %cl,0xa(%rbp)
   14598:	0e                   	(bad)  
   14599:	18 41 0e             	sbb    %al,0xe(%rcx)
   1459c:	10 41 0e             	adc    %al,0xe(%rcx)
   1459f:	08 41 0b             	or     %al,0xb(%rcx)
   145a2:	44 0e                	rex.R (bad) 
   145a4:	18 49 0e             	sbb    %cl,0xe(%rcx)
   145a7:	10 41 0e             	adc    %al,0xe(%rcx)
   145aa:	08 00                	or     %al,(%rax)
   145ac:	00 00                	add    %al,(%rax)
   145ae:	00 00                	add    %al,(%rax)
   145b0:	48 00 00             	rex.W add %al,(%rax)
   145b3:	00 bc 02 00 00 68 12 	add    %bh,0x12680000(%rdx,%rax,1)
   145ba:	ff                   	(bad)  
   145bb:	ff 85 00 00 00 00    	incl   0x0(%rbp)
   145c1:	46 0e                	rex.RX (bad) 
   145c3:	10 8e 02 45 0e 18    	adc    %cl,0x180e4502(%rsi)
   145c9:	8d 03                	lea    (%rbx),%eax
   145cb:	4a 0e                	rex.WX (bad) 
   145cd:	20 8c 04 44 0e 28 86 	and    %cl,-0x79d7f1bc(%rsp,%rax,1)
   145d4:	05 43 0e 30 83       	add    $0x83300e43,%eax
   145d9:	06                   	(bad)  
   145da:	78 0a                	js     145e6 <__GNU_EH_FRAME_HDR+0xb26>
   145dc:	0e                   	(bad)  
   145dd:	28 43 0e             	sub    %al,0xe(%rbx)
   145e0:	20 42 0e             	and    %al,0xe(%rdx)
   145e3:	18 42 0e             	sbb    %al,0xe(%rdx)
   145e6:	10 42 0e             	adc    %al,0xe(%rdx)
   145e9:	08 43 0b             	or     %al,0xb(%rbx)
   145ec:	5b                   	pop    %rbx
   145ed:	0e                   	(bad)  
   145ee:	28 43 0e             	sub    %al,0xe(%rbx)
   145f1:	20 42 0e             	and    %al,0xe(%rdx)
   145f4:	18 42 0e             	sbb    %al,0xe(%rdx)
   145f7:	10 42 0e             	adc    %al,0xe(%rdx)
   145fa:	08 00                	or     %al,(%rax)
   145fc:	48 00 00             	rex.W add %al,(%rax)
   145ff:	00 08                	add    %cl,(%rax)
   14601:	03 00                	add    (%rax),%eax
   14603:	00 ac 12 ff ff 85 00 	add    %ch,0x85ffff(%rdx,%rdx,1)
   1460a:	00 00                	add    %al,(%rax)
   1460c:	00 46 0e             	add    %al,0xe(%rsi)
   1460f:	10 8e 02 45 0e 18    	adc    %cl,0x180e4502(%rsi)
   14615:	8d 03                	lea    (%rbx),%eax
   14617:	4a 0e                	rex.WX (bad) 
   14619:	20 8c 04 44 0e 28 86 	and    %cl,-0x79d7f1bc(%rsp,%rax,1)
   14620:	05 43 0e 30 83       	add    $0x83300e43,%eax
   14625:	06                   	(bad)  
   14626:	78 0a                	js     14632 <__GNU_EH_FRAME_HDR+0xb72>
   14628:	0e                   	(bad)  
   14629:	28 43 0e             	sub    %al,0xe(%rbx)
   1462c:	20 42 0e             	and    %al,0xe(%rdx)
   1462f:	18 42 0e             	sbb    %al,0xe(%rdx)
   14632:	10 42 0e             	adc    %al,0xe(%rdx)
   14635:	08 43 0b             	or     %al,0xb(%rbx)
   14638:	5b                   	pop    %rbx
   14639:	0e                   	(bad)  
   1463a:	28 43 0e             	sub    %al,0xe(%rbx)
   1463d:	20 42 0e             	and    %al,0xe(%rdx)
   14640:	18 42 0e             	sbb    %al,0xe(%rdx)
   14643:	10 42 0e             	adc    %al,0xe(%rdx)
   14646:	08 00                	or     %al,(%rax)
   14648:	10 00                	adc    %al,(%rax)
   1464a:	00 00                	add    %al,(%rax)
   1464c:	54                   	push   %rsp
   1464d:	03 00                	add    (%rax),%eax
   1464f:	00 f0                	add    %dh,%al
   14651:	12 ff                	adc    %bh,%bh
   14653:	ff 25 00 00 00 00    	jmp    *0x0(%rip)        # 14659 <__GNU_EH_FRAME_HDR+0xb99>
   14659:	00 00                	add    %al,(%rax)
   1465b:	00 10                	add    %dl,(%rax)
   1465d:	00 00                	add    %al,(%rax)
   1465f:	00 68 03             	add    %ch,0x3(%rax)
   14662:	00 00                	add    %al,(%rax)
   14664:	0c 13                	or     $0x13,%al
   14666:	ff                   	(bad)  
   14667:	ff 21                	jmp    *(%rcx)
   14669:	00 00                	add    %al,(%rax)
   1466b:	00 00                	add    %al,(%rax)
   1466d:	00 00                	add    %al,(%rax)
   1466f:	00 14 00             	add    %dl,(%rax,%rax,1)
   14672:	00 00                	add    %al,(%rax)
   14674:	7c 03                	jl     14679 <__GNU_EH_FRAME_HDR+0xbb9>
   14676:	00 00                	add    %al,(%rax)
   14678:	28 13                	sub    %dl,(%rbx)
   1467a:	ff                   	(bad)  
   1467b:	ff 32                	push   (%rdx)
   1467d:	00 00                	add    %al,(%rax)
   1467f:	00 00                	add    %al,(%rax)
   14681:	48 0e                	rex.W (bad) 
   14683:	10 69 0e             	adc    %ch,0xe(%rcx)
   14686:	08 00                	or     %al,(%rax)
   14688:	18 00                	sbb    %al,(%rax)
   1468a:	00 00                	add    %al,(%rax)
   1468c:	94                   	xchg   %eax,%esp
   1468d:	03 00                	add    (%rax),%eax
   1468f:	00 50 13             	add    %dl,0x13(%rax)
   14692:	ff                   	(bad)  
   14693:	ff 1e                	lcall  *(%rsi)
   14695:	00 00                	add    %al,(%rax)
   14697:	00 00                	add    %al,(%rax)
   14699:	45 0e                	rex.RB (bad) 
   1469b:	10 83 02 58 0e 08    	adc    %al,0x80e5802(%rbx)
   146a1:	00 00                	add    %al,(%rax)
   146a3:	00 10                	add    %dl,(%rax)
   146a5:	00 00                	add    %al,(%rax)
   146a7:	00 b0 03 00 00 54    	add    %dh,0x54000003(%rax)
   146ad:	13 ff                	adc    %edi,%edi
   146af:	ff 09                	decl   (%rcx)
   146b1:	00 00                	add    %al,(%rax)
   146b3:	00 00                	add    %al,(%rax)
   146b5:	00 00                	add    %al,(%rax)
   146b7:	00 24 00             	add    %ah,(%rax,%rax,1)
   146ba:	00 00                	add    %al,(%rax)
   146bc:	c4 03 00 00          	(bad)
   146c0:	50                   	push   %rax
   146c1:	13 ff                	adc    %edi,%edi
   146c3:	ff 25 00 00 00 00    	jmp    *0x0(%rip)        # 146c9 <__GNU_EH_FRAME_HDR+0xc09>
   146c9:	45 0e                	rex.RB (bad) 
   146cb:	10 86 02 41 0e 18    	adc    %al,0x180e4102(%rsi)
   146d1:	83 03 47             	addl   $0x47,(%rbx)
   146d4:	0e                   	(bad)  
   146d5:	20 53 0e             	and    %dl,0xe(%rbx)
   146d8:	18 43 0e             	sbb    %al,0xe(%rbx)
   146db:	10 41 0e             	adc    %al,0xe(%rcx)
   146de:	08 00                	or     %al,(%rax)
   146e0:	14 00                	adc    $0x0,%al
   146e2:	00 00                	add    %al,(%rax)
   146e4:	ec                   	in     (%dx),%al
   146e5:	03 00                	add    (%rax),%eax
   146e7:	00 58 13             	add    %bl,0x13(%rax)
   146ea:	ff                   	(bad)  
   146eb:	ff 17                	call   *(%rdi)
   146ed:	00 00                	add    %al,(%rax)
   146ef:	00 00                	add    %al,(%rax)
   146f1:	48 0e                	rex.W (bad) 
   146f3:	10 4e 0e             	adc    %cl,0xe(%rsi)
   146f6:	08 00                	or     %al,(%rax)
   146f8:	34 00                	xor    $0x0,%al
   146fa:	00 00                	add    %al,(%rax)
   146fc:	04 04                	add    $0x4,%al
   146fe:	00 00                	add    %al,(%rax)
   14700:	00 cf                	add    %cl,%bh
   14702:	ff                   	(bad)  
   14703:	ff 31                	push   (%rcx)
   14705:	03 00                	add    (%rax),%eax
   14707:	00 00                	add    %al,(%rax)
   14709:	46 0e                	rex.RX (bad) 
   1470b:	10 8c 02 41 0e 18 86 	adc    %cl,-0x79e7f1bf(%rdx,%rax,1)
   14712:	03 41 0e             	add    0xe(%rcx),%eax
   14715:	20 83 04 47 0e e0    	and    %al,-0x1ff1b8fc(%rbx)
   1471b:	01 03                	add    %eax,(%rbx)
   1471d:	c7 02 0a 0e 20 41    	movl   $0x41200e0a,(%rdx)
   14723:	0e                   	(bad)  
   14724:	18 41 0e             	sbb    %al,0xe(%rcx)
   14727:	10 42 0e             	adc    %al,0xe(%rdx)
   1472a:	08 46 0b             	or     %al,0xb(%rsi)
   1472d:	00 00                	add    %al,(%rax)
   1472f:	00 2c 00             	add    %ch,(%rax,%rax,1)
   14732:	00 00                	add    %al,(%rax)
   14734:	3c 04                	cmp    $0x4,%al
   14736:	00 00                	add    %al,(%rax)
   14738:	08 d2                	or     %dl,%dl
   1473a:	ff                   	(bad)  
   1473b:	ff 99 01 00 00 00    	lcall  *0x1(%rcx)
   14741:	46 0e                	rex.RX (bad) 
   14743:	10 8c 02 44 0e 18 86 	adc    %cl,-0x79e7f1bc(%rdx,%rax,1)
   1474a:	03 44 0e 20          	add    0x20(%rsi,%rcx,1),%eax
   1474e:	83 04 59 0a          	addl   $0xa,(%rcx,%rbx,2)
   14752:	0e                   	(bad)  
   14753:	18 41 0e             	sbb    %al,0xe(%rcx)
   14756:	10 42 0e             	adc    %al,0xe(%rdx)
   14759:	08 46 0b             	or     %al,0xb(%rsi)
   1475c:	00 00                	add    %al,(%rax)
   1475e:	00 00                	add    %al,(%rax)
   14760:	3c 00                	cmp    $0x0,%al
   14762:	00 00                	add    %al,(%rax)
   14764:	6c                   	insb   (%dx),%es:(%rdi)
   14765:	04 00                	add    $0x0,%al
   14767:	00 f8                	add    %bh,%al
   14769:	12 ff                	adc    %bh,%bh
   1476b:	ff 19                	lcall  *(%rcx)
   1476d:	01 00                	add    %eax,(%rax)
   1476f:	00 00                	add    %al,(%rax)
   14771:	46 0e                	rex.RX (bad) 
   14773:	10 8c 02 44 0e 18 86 	adc    %cl,-0x79e7f1bc(%rdx,%rax,1)
   1477a:	03 44 0e 20          	add    0x20(%rsi,%rcx,1),%eax
   1477e:	83 04 02 cc          	addl   $0xffffffcc,(%rdx,%rax,1)
   14782:	0a 0e                	or     (%rsi),%cl
   14784:	18 41 0e             	sbb    %al,0xe(%rcx)
   14787:	10 44 0e 08          	adc    %al,0x8(%rsi,%rcx,1)
   1478b:	49 0b 4e 0a          	or     0xa(%r14),%rcx
   1478f:	0e                   	(bad)  
   14790:	18 46 0e             	sbb    %al,0xe(%rsi)
   14793:	10 42 0e             	adc    %al,0xe(%rdx)
   14796:	08 42 0b             	or     %al,0xb(%rdx)
   14799:	00 00                	add    %al,(%rax)
   1479b:	00 00                	add    %al,(%rax)
   1479d:	00 00                	add    %al,(%rax)
   1479f:	00 14 00             	add    %dl,(%rax,%rax,1)
   147a2:	00 00                	add    %al,(%rax)
   147a4:	ac                   	lods   %ds:(%rsi),%al
   147a5:	04 00                	add    $0x0,%al
   147a7:	00 38                	add    %bh,(%rax)
   147a9:	d3 ff                	sar    %cl,%edi
   147ab:	ff 1b                	lcall  *(%rbx)
   147ad:	00 00                	add    %al,(%rax)
   147af:	00 00                	add    %al,(%rax)
   147b1:	48 0e                	rex.W (bad) 
   147b3:	10 4f 0e             	adc    %cl,0xe(%rdi)
   147b6:	08 00                	or     %al,(%rax)
   147b8:	10 00                	adc    %al,(%rax)
   147ba:	00 00                	add    %al,(%rax)
   147bc:	c4                   	(bad)  
   147bd:	04 00                	add    $0x0,%al
   147bf:	00 40 d8             	add    %al,-0x28(%rax)
   147c2:	fe                   	(bad)  
   147c3:	ff 0f                	decl   (%rdi)
   147c5:	00 00                	add    %al,(%rax)
   147c7:	00 00                	add    %al,(%rax)
   147c9:	00 00                	add    %al,(%rax)
   147cb:	00 10                	add    %dl,(%rax)
   147cd:	00 00                	add    %al,(%rax)
   147cf:	00 d8                	add    %bl,%al
   147d1:	04 00                	add    $0x0,%al
   147d3:	00 ac 13 ff ff 52 00 	add    %ch,0x52ffff(%rbx,%rdx,1)
   147da:	00 00                	add    %al,(%rax)
   147dc:	00 00                	add    %al,(%rax)
   147de:	00 00                	add    %al,(%rax)
   147e0:	10 00                	adc    %al,(%rax)
   147e2:	00 00                	add    %al,(%rax)
   147e4:	ec                   	in     (%dx),%al
   147e5:	04 00                	add    $0x0,%al
   147e7:	00 f8                	add    %bh,%al
   147e9:	13 ff                	adc    %edi,%edi
   147eb:	ff 53 00             	call   *0x0(%rbx)
   147ee:	00 00                	add    %al,(%rax)
   147f0:	00 00                	add    %al,(%rax)
   147f2:	00 00                	add    %al,(%rax)
   147f4:	1c 00                	sbb    $0x0,%al
   147f6:	00 00                	add    %al,(%rax)
   147f8:	00 05 00 00 44 14    	add    %al,0x14440000(%rip)        # 144547fe <_end+0x144297ee>
   147fe:	ff                   	(bad)  
   147ff:	ff d7                	call   *%rdi
   14801:	00 00                	add    %al,(%rax)
   14803:	00 00                	add    %al,(%rax)
   14805:	45 0e                	rex.RB (bad) 
   14807:	10 83 02 47 0e 20    	adc    %al,0x200e4702(%rbx)
   1480d:	02 c6                	add    %dh,%al
   1480f:	0e                   	(bad)  
   14810:	10 44 0e 08          	adc    %al,0x8(%rsi,%rcx,1)
   14814:	14 00                	adc    $0x0,%al
   14816:	00 00                	add    %al,(%rax)
   14818:	20 05 00 00 04 15    	and    %al,0x15040000(%rip)        # 1505481e <_end+0x1502980e>
   1481e:	ff                   	(bad)  
   1481f:	ff 5c 00 00          	lcall  *0x0(%rax,%rax,1)
   14823:	00 00                	add    %al,(%rax)
   14825:	48 0e                	rex.W (bad) 
   14827:	10 02                	adc    %al,(%rdx)
   14829:	53                   	push   %rbx
   1482a:	0e                   	(bad)  
   1482b:	08 38                	or     %bh,(%rax)
   1482d:	00 00                	add    %al,(%rax)
   1482f:	00 38                	add    %bh,(%rax)
   14831:	05 00 00 4c 15       	add    $0x154c0000,%eax
   14836:	ff                   	(bad)  
   14837:	ff 2f                	ljmp   *(%rdi)
   14839:	01 00                	add    %eax,(%rax)
   1483b:	00 00                	add    %al,(%rax)
   1483d:	46 0e                	rex.RX (bad) 
   1483f:	10 8d 02 42 0e 18    	adc    %cl,0x180e4202(%rbp)
   14845:	8c 03                	mov    %es,(%rbx)
   14847:	41 0e                	rex.B (bad) 
   14849:	20 86 04 41 0e 28    	and    %al,0x280e4104(%rsi)
   1484f:	83 05 44 0e 40 02 8a 	addl   $0xffffff8a,0x2400e44(%rip)        # 241569a <_end+0x23ea68a>
   14856:	0a 0e                	or     (%rsi),%cl
   14858:	28 43 0e             	sub    %al,0xe(%rbx)
   1485b:	20 41 0e             	and    %al,0xe(%rcx)
   1485e:	18 42 0e             	sbb    %al,0xe(%rdx)
   14861:	10 42 0e             	adc    %al,0xe(%rdx)
   14864:	08 48 0b             	or     %cl,0xb(%rax)
   14867:	00 10                	add    %dl,(%rax)
   14869:	00 00                	add    %al,(%rax)
   1486b:	00 74 05 00          	add    %dh,0x0(%rbp,%rax,1)
   1486f:	00 40 16             	add    %al,0x16(%rax)
   14872:	ff                   	(bad)  
   14873:	ff 1e                	lcall  *(%rsi)
   14875:	00 00                	add    %al,(%rax)
   14877:	00 00                	add    %al,(%rax)
   14879:	00 00                	add    %al,(%rax)
   1487b:	00 18                	add    %bl,(%rax)
   1487d:	00 00                	add    %al,(%rax)
   1487f:	00 88 05 00 00 4c    	add    %cl,0x4c000005(%rax)
   14885:	16                   	(bad)  
   14886:	ff                   	(bad)  
   14887:	ff 23                	jmp    *(%rbx)
   14889:	00 00                	add    %al,(%rax)
   1488b:	00 00                	add    %al,(%rax)
   1488d:	45 0e                	rex.RB (bad) 
   1488f:	10 83 02 5d 0e 08    	adc    %al,0x80e5d02(%rbx)
   14895:	00 00                	add    %al,(%rax)
   14897:	00 1c 00             	add    %bl,(%rax,%rax,1)
   1489a:	00 00                	add    %al,(%rax)
   1489c:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
   1489d:	05 00 00 60 16       	add    $0x16600000,%eax
   148a2:	ff                   	(bad)  
   148a3:	ff 22                	jmp    *(%rdx)
   148a5:	00 00                	add    %al,(%rax)
   148a7:	00 00                	add    %al,(%rax)
   148a9:	45 0e                	rex.RB (bad) 
   148ab:	10 83 02 5c 0e 08    	adc    %al,0x80e5c02(%rbx)
   148b1:	00 00                	add    %al,(%rax)
   148b3:	00 00                	add    %al,(%rax)
   148b5:	00 00                	add    %al,(%rax)
   148b7:	00 38                	add    %bh,(%rax)
   148b9:	00 00                	add    %al,(%rax)
   148bb:	00 c4                	add    %al,%ah
   148bd:	05 00 00 70 16       	add    $0x16700000,%eax
   148c2:	ff                   	(bad)  
   148c3:	ff b7 00 00 00 00    	push   0x0(%rdi)
   148c9:	42 0e                	rex.X (bad) 
   148cb:	10 8d 02 45 0e 18    	adc    %cl,0x180e4502(%rbp)
   148d1:	8c 03                	mov    %es,(%rbx)
   148d3:	41 0e                	rex.B (bad) 
   148d5:	20 86 04 41 0e 28    	and    %al,0x280e4104(%rsi)
   148db:	83 05 44 0e 30 02 9a 	addl   $0xffffff9a,0x2300e44(%rip)        # 2315726 <_end+0x22ea716>
   148e2:	0a 0e                	or     (%rsi),%cl
   148e4:	28 41 0e             	sub    %al,0xe(%rcx)
   148e7:	20 41 0e             	and    %al,0xe(%rcx)
   148ea:	18 42 0e             	sbb    %al,0xe(%rdx)
   148ed:	10 42 0e             	adc    %al,0xe(%rdx)
   148f0:	08 43 0b             	or     %al,0xb(%rbx)
   148f3:	00 54 00 00          	add    %dl,0x0(%rax,%rax,1)
   148f7:	00 00                	add    %al,(%rax)
   148f9:	06                   	(bad)  
   148fa:	00 00                	add    %al,(%rax)
   148fc:	f4                   	hlt    
   148fd:	16                   	(bad)  
   148fe:	ff                   	(bad)  
   148ff:	ff d6                	call   *%rsi
   14901:	01 00                	add    %eax,(%rax)
   14903:	00 00                	add    %al,(%rax)
   14905:	4f 0e                	rex.WRXB (bad) 
   14907:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   1490d:	8e 03                	mov    (%rbx),%es
   1490f:	42 0e                	rex.X (bad) 
   14911:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   14917:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff86315761 <_end+0xffffffff862ea751>
   1491d:	06                   	(bad)  
   1491e:	44 0e                	rex.R (bad) 
   14920:	38 83 07 47 0e 40    	cmp    %al,0x400e4707(%rbx)
   14926:	02 50 0a             	add    0xa(%rax),%dl
   14929:	0e                   	(bad)  
   1492a:	38 41 0e             	cmp    %al,0xe(%rcx)
   1492d:	30 41 0e             	xor    %al,0xe(%rcx)
   14930:	28 42 0e             	sub    %al,0xe(%rdx)
   14933:	20 42 0e             	and    %al,0xe(%rdx)
   14936:	18 42 0e             	sbb    %al,0xe(%rdx)
   14939:	10 42 0e             	adc    %al,0xe(%rdx)
   1493c:	08 42 0b             	or     %al,0xb(%rdx)
   1493f:	03 50 01             	add    0x1(%rax),%edx
   14942:	0e                   	(bad)  
   14943:	08 c3                	or     %al,%bl
   14945:	c6                   	(bad)  
   14946:	cc                   	int3   
   14947:	cd ce                	int    $0xce
   14949:	cf                   	iret   
   1494a:	00 00                	add    %al,(%rax)
   1494c:	10 00                	adc    %al,(%rax)
   1494e:	00 00                	add    %al,(%rax)
   14950:	58                   	pop    %rax
   14951:	06                   	(bad)  
   14952:	00 00                	add    %al,(%rax)
   14954:	7c 18                	jl     1496e <__GNU_EH_FRAME_HDR+0xeae>
   14956:	ff                   	(bad)  
   14957:	ff 53 00             	call   *0x0(%rbx)
   1495a:	00 00                	add    %al,(%rax)
   1495c:	00 00                	add    %al,(%rax)
   1495e:	00 00                	add    %al,(%rax)
   14960:	18 00                	sbb    %al,(%rax)
   14962:	00 00                	add    %al,(%rax)
   14964:	6c                   	insb   (%dx),%es:(%rdi)
   14965:	06                   	(bad)  
   14966:	00 00                	add    %al,(%rax)
   14968:	c8 18 ff ff          	enter  $0xff18,$0xff
   1496c:	5c                   	pop    %rsp
   1496d:	00 00                	add    %al,(%rax)
   1496f:	00 00                	add    %al,(%rax)
   14971:	48 0e                	rex.W (bad) 
   14973:	30 79 0a             	xor    %bh,0xa(%rcx)
   14976:	0e                   	(bad)  
   14977:	08 47 0b             	or     %al,0xb(%rdi)
   1497a:	00 00                	add    %al,(%rax)
   1497c:	10 00                	adc    %al,(%rax)
   1497e:	00 00                	add    %al,(%rax)
   14980:	88 06                	mov    %al,(%rsi)
   14982:	00 00                	add    %al,(%rax)
   14984:	0c 19                	or     $0x19,%al
   14986:	ff                   	(bad)  
   14987:	ff 6b 00             	ljmp   *0x0(%rbx)
   1498a:	00 00                	add    %al,(%rax)
   1498c:	00 00                	add    %al,(%rax)
   1498e:	00 00                	add    %al,(%rax)
   14990:	10 00                	adc    %al,(%rax)
   14992:	00 00                	add    %al,(%rax)
   14994:	9c                   	pushf  
   14995:	06                   	(bad)  
   14996:	00 00                	add    %al,(%rax)
   14998:	68 19 ff ff 5b       	push   $0x5bffff19
   1499d:	00 00                	add    %al,(%rax)
   1499f:	00 00                	add    %al,(%rax)
   149a1:	00 00                	add    %al,(%rax)
   149a3:	00 40 00             	add    %al,0x0(%rax)
   149a6:	00 00                	add    %al,(%rax)
   149a8:	b0 06                	mov    $0x6,%al
   149aa:	00 00                	add    %al,(%rax)
   149ac:	b4 19                	mov    $0x19,%ah
   149ae:	ff                   	(bad)  
   149af:	ff                   	(bad)  
   149b0:	bd 01 00 00 00       	mov    $0x1,%ebp
   149b5:	46 0e                	rex.RX (bad) 
   149b7:	10 8e 02 42 0e 18    	adc    %cl,0x180e4202(%rsi)
   149bd:	8d 03                	lea    (%rbx),%eax
   149bf:	42 0e                	rex.X (bad) 
   149c1:	20 8c 04 41 0e 28 86 	and    %cl,-0x79d7f1bf(%rsp,%rax,1)
   149c8:	05 41 0e 30 83       	add    $0x83300e41,%eax
   149cd:	06                   	(bad)  
   149ce:	47 0e                	rex.RXB (bad) 
   149d0:	40 02 b0 0a 0e 30 41 	add    0x41300e0a(%rax),%sil
   149d7:	0e                   	(bad)  
   149d8:	28 41 0e             	sub    %al,0xe(%rcx)
   149db:	20 42 0e             	and    %al,0xe(%rdx)
   149de:	18 42 0e             	sbb    %al,0xe(%rdx)
   149e1:	10 42 0e             	adc    %al,0xe(%rdx)
   149e4:	08 45 0b             	or     %al,0xb(%rbp)
   149e7:	00 30                	add    %dh,(%rax)
   149e9:	00 00                	add    %al,(%rax)
   149eb:	00 f4                	add    %dh,%ah
   149ed:	06                   	(bad)  
   149ee:	00 00                	add    %al,(%rax)
   149f0:	30 1b                	xor    %bl,(%rbx)
   149f2:	ff                   	(bad)  
   149f3:	ff 5c 00 00          	lcall  *0x0(%rax,%rax,1)
   149f7:	00 00                	add    %al,(%rax)
   149f9:	45 0e                	rex.RB (bad) 
   149fb:	10 86 02 43 0e 18    	adc    %al,0x180e4302(%rsi)
   14a01:	83 03 44             	addl   $0x44,(%rbx)
   14a04:	0e                   	(bad)  
   14a05:	20 7a 0a             	and    %bh,0xa(%rdx)
   14a08:	0e                   	(bad)  
   14a09:	18 43 0e             	sbb    %al,0xe(%rbx)
   14a0c:	10 41 0e             	adc    %al,0xe(%rcx)
   14a0f:	08 46 0b             	or     %al,0xb(%rsi)
   14a12:	44 0e                	rex.R (bad) 
   14a14:	18 46 0e             	sbb    %al,0xe(%rsi)
   14a17:	10 41 0e             	adc    %al,0xe(%rcx)
   14a1a:	08 00                	or     %al,(%rax)
   14a1c:	40 00 00             	rex add %al,(%rax)
   14a1f:	00 28                	add    %ch,(%rax)
   14a21:	07                   	(bad)  
   14a22:	00 00                	add    %al,(%rax)
   14a24:	5c                   	pop    %rsp
   14a25:	1b ff                	sbb    %edi,%edi
   14a27:	ff ce                	dec    %esi
   14a29:	00 00                	add    %al,(%rax)
   14a2b:	00 00                	add    %al,(%rax)
   14a2d:	4f 0e                	rex.WRXB (bad) 
   14a2f:	10 8d 02 47 0e 18    	adc    %cl,0x180e4702(%rbp)
   14a35:	8c 03                	mov    %es,(%rbx)
   14a37:	44 0e                	rex.R (bad) 
   14a39:	20 86 04 41 0e 28    	and    %al,0x280e4104(%rsi)
   14a3f:	83 05 44 0e 30 73 0a 	addl   $0xa,0x73300e44(%rip)        # 7331588a <_end+0x732ea87a>
   14a46:	0e                   	(bad)  
   14a47:	28 41 0e             	sub    %al,0xe(%rcx)
   14a4a:	20 41 0e             	and    %al,0xe(%rcx)
   14a4d:	18 42 0e             	sbb    %al,0xe(%rdx)
   14a50:	10 42 0e             	adc    %al,0xe(%rdx)
   14a53:	08 48 0b             	or     %cl,0xb(%rax)
   14a56:	02 68 0e             	add    0xe(%rax),%ch
   14a59:	08 c3                	or     %al,%bl
   14a5b:	c6                   	(bad)  
   14a5c:	cc                   	int3   
   14a5d:	cd 00                	int    $0x0
   14a5f:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
   14a63:	00 6c 07 00          	add    %ch,0x0(%rdi,%rax,1)
   14a67:	00 e8                	add    %ch,%al
   14a69:	1b ff                	sbb    %edi,%edi
   14a6b:	ff 19                	lcall  *(%rcx)
   14a6d:	01 00                	add    %eax,(%rax)
   14a6f:	00 00                	add    %al,(%rax)
   14a71:	46 0e                	rex.RX (bad) 
   14a73:	10 8c 02 41 0e 18 86 	adc    %cl,-0x79e7f1bf(%rdx,%rax,1)
   14a7a:	03 41 0e             	add    0xe(%rcx),%eax
   14a7d:	20 83 04 02 6c 0a    	and    %al,0xa6c0204(%rbx)
   14a83:	0e                   	(bad)  
   14a84:	18 41 0e             	sbb    %al,0xe(%rcx)
   14a87:	10 42 0e             	adc    %al,0xe(%rdx)
   14a8a:	08 49 0b             	or     %cl,0xb(%rcx)
   14a8d:	02 5f 0a             	add    0xa(%rdi),%bl
   14a90:	0e                   	(bad)  
   14a91:	18 41 0e             	sbb    %al,0xe(%rcx)
   14a94:	10 42 0e             	adc    %al,0xe(%rdx)
   14a97:	08 46 0b             	or     %al,0xb(%rsi)
   14a9a:	57                   	push   %rdi
   14a9b:	0a 0e                	or     (%rsi),%cl
   14a9d:	18 41 0e             	sbb    %al,0xe(%rcx)
   14aa0:	10 45 0e             	adc    %al,0xe(%rbp)
   14aa3:	08 4b 0b             	or     %cl,0xb(%rbx)
   14aa6:	00 00                	add    %al,(%rax)
   14aa8:	24 00                	and    $0x0,%al
   14aaa:	00 00                	add    %al,(%rax)
   14aac:	b4 07                	mov    $0x7,%ah
   14aae:	00 00                	add    %al,(%rax)
   14ab0:	c0 1c ff ff          	rcrb   $0xff,(%rdi,%rdi,8)
   14ab4:	3b 00                	cmp    (%rax),%eax
   14ab6:	00 00                	add    %al,(%rax)
   14ab8:	00 45 0e             	add    %al,0xe(%rbp)
   14abb:	10 86 02 44 0e 18    	adc    %al,0x180e4402(%rsi)
   14ac1:	83 03 44             	addl   $0x44,(%rbx)
   14ac4:	0e                   	(bad)  
   14ac5:	20 69 0e             	and    %ch,0xe(%rcx)
   14ac8:	18 43 0e             	sbb    %al,0xe(%rbx)
   14acb:	10 41 0e             	adc    %al,0xe(%rcx)
   14ace:	08 00                	or     %al,(%rax)
   14ad0:	10 00                	adc    %al,(%rax)
   14ad2:	00 00                	add    %al,(%rax)
   14ad4:	dc 07                	faddl  (%rdi)
   14ad6:	00 00                	add    %al,(%rax)
   14ad8:	d8 1c ff             	fcomps (%rdi,%rdi,8)
   14adb:	ff 07                	incl   (%rdi)
   14add:	00 00                	add    %al,(%rax)
   14adf:	00 00                	add    %al,(%rax)
   14ae1:	00 00                	add    %al,(%rax)
   14ae3:	00 28                	add    %ch,(%rax)
   14ae5:	00 00                	add    %al,(%rax)
   14ae7:	00 f0                	add    %dh,%al
   14ae9:	07                   	(bad)  
   14aea:	00 00                	add    %al,(%rax)
   14aec:	d4                   	(bad)  
   14aed:	1c ff                	sbb    $0xff,%al
   14aef:	ff c7                	inc    %edi
   14af1:	00 00                	add    %al,(%rax)
   14af3:	00 00                	add    %al,(%rax)
   14af5:	41 0e                	rex.B (bad) 
   14af7:	10 86 02 41 0e 18    	adc    %al,0x180e4102(%rsi)
   14afd:	83 03 47             	addl   $0x47,(%rbx)
   14b00:	0e                   	(bad)  
   14b01:	30 02                	xor    %al,(%rdx)
   14b03:	5b                   	pop    %rbx
   14b04:	0a 0e                	or     (%rsi),%cl
   14b06:	18 41 0e             	sbb    %al,0xe(%rcx)
   14b09:	10 41 0e             	adc    %al,0xe(%rcx)
   14b0c:	08 4a 0b             	or     %cl,0xb(%rdx)
   14b0f:	00 54 00 00          	add    %dl,0x0(%rax,%rax,1)
   14b13:	00 1c 08             	add    %bl,(%rax,%rcx,1)
   14b16:	00 00                	add    %al,(%rax)
   14b18:	78 1d                	js     14b37 <__GNU_EH_FRAME_HDR+0x1077>
   14b1a:	ff                   	(bad)  
   14b1b:	ff                   	(bad)  
   14b1c:	db 00                	fildl  (%rax)
   14b1e:	00 00                	add    %al,(%rax)
   14b20:	00 4b 0e             	add    %cl,0xe(%rbx)
   14b23:	10 8e 02 42 0e 18    	adc    %cl,0x180e4202(%rsi)
   14b29:	8d 03                	lea    (%rbx),%eax
   14b2b:	45 0e                	rex.RB (bad) 
   14b2d:	20 8c 04 44 0e 28 86 	and    %cl,-0x79d7f1bc(%rsp,%rax,1)
   14b34:	05 41 0e 30 83       	add    $0x83300e41,%eax
   14b39:	06                   	(bad)  
   14b3a:	02 7a 0a             	add    0xa(%rdx),%bh
   14b3d:	0e                   	(bad)  
   14b3e:	28 41 0e             	sub    %al,0xe(%rcx)
   14b41:	20 42 0e             	and    %al,0xe(%rdx)
   14b44:	18 42 0e             	sbb    %al,0xe(%rdx)
   14b47:	10 42 0e             	adc    %al,0xe(%rdx)
   14b4a:	08 48 0b             	or     %cl,0xb(%rax)
   14b4d:	41 0a 0e             	or     (%r14),%cl
   14b50:	28 43 0e             	sub    %al,0xe(%rbx)
   14b53:	20 42 0e             	and    %al,0xe(%rdx)
   14b56:	18 42 0e             	sbb    %al,0xe(%rdx)
   14b59:	10 42 0e             	adc    %al,0xe(%rdx)
   14b5c:	08 46 0b             	or     %al,0xb(%rsi)
   14b5f:	68 0e 08 c3 c6       	push   $0xffffffffc6c3080e
   14b64:	cc                   	int3   
   14b65:	cd ce                	int    $0xce
   14b67:	00 5c 00 00          	add    %bl,0x0(%rax,%rax,1)
   14b6b:	00 74 08 00          	add    %dh,0x0(%rax,%rcx,1)
   14b6f:	00 00                	add    %al,(%rax)
   14b71:	1e                   	(bad)  
   14b72:	ff                   	(bad)  
   14b73:	ff                   	(bad)  
   14b74:	bc 01 00 00 00       	mov    $0x1,%esp
   14b79:	46 0e                	rex.RX (bad) 
   14b7b:	10 8d 02 42 0e 18    	adc    %cl,0x180e4202(%rbp)
   14b81:	8c 03                	mov    %es,(%rbx)
   14b83:	41 0e                	rex.B (bad) 
   14b85:	20 86 04 44 0e 28    	and    %al,0x280e4404(%rsi)
   14b8b:	83 05 46 0e 30 02 97 	addl   $0xffffff97,0x2300e46(%rip)        # 23159d8 <_end+0x22ea9c8>
   14b92:	0a 0e                	or     (%rsi),%cl
   14b94:	28 44 0e 20          	sub    %al,0x20(%rsi,%rcx,1)
   14b98:	41 0e                	rex.B (bad) 
   14b9a:	18 42 0e             	sbb    %al,0xe(%rdx)
   14b9d:	10 42 0e             	adc    %al,0xe(%rdx)
   14ba0:	08 45 0b             	or     %al,0xb(%rbp)
   14ba3:	4e 0a 0e             	rex.WRX or (%rsi),%r9b
   14ba6:	28 44 0e 20          	sub    %al,0x20(%rsi,%rcx,1)
   14baa:	41 0e                	rex.B (bad) 
   14bac:	18 42 0e             	sbb    %al,0xe(%rdx)
   14baf:	10 42 0e             	adc    %al,0xe(%rdx)
   14bb2:	08 49 0b             	or     %cl,0xb(%rcx)
   14bb5:	53                   	push   %rbx
   14bb6:	0a 0e                	or     (%rsi),%cl
   14bb8:	28 47 0e             	sub    %al,0xe(%rdi)
   14bbb:	20 44 0e 18          	and    %al,0x18(%rsi,%rcx,1)
   14bbf:	42 0e                	rex.X (bad) 
   14bc1:	10 42 0e             	adc    %al,0xe(%rdx)
   14bc4:	08 46 0b             	or     %al,0xb(%rsi)
   14bc7:	00 10                	add    %dl,(%rax)
   14bc9:	00 00                	add    %al,(%rax)
   14bcb:	00 d4                	add    %dl,%ah
   14bcd:	08 00                	or     %al,(%rax)
   14bcf:	00 60 1f             	add    %ah,0x1f(%rax)
   14bd2:	ff                   	(bad)  
   14bd3:	ff 05 00 00 00 00    	incl   0x0(%rip)        # 14bd9 <__GNU_EH_FRAME_HDR+0x1119>
   14bd9:	00 00                	add    %al,(%rax)
   14bdb:	00 10                	add    %dl,(%rax)
   14bdd:	00 00                	add    %al,(%rax)
   14bdf:	00 e8                	add    %ch,%al
   14be1:	08 00                	or     %al,(%rax)
   14be3:	00 5c 1f ff          	add    %bl,-0x1(%rdi,%rbx,1)
   14be7:	ff 07                	incl   (%rdi)
   14be9:	00 00                	add    %al,(%rax)
   14beb:	00 00                	add    %al,(%rax)
   14bed:	00 00                	add    %al,(%rax)
   14bef:	00 10                	add    %dl,(%rax)
   14bf1:	00 00                	add    %al,(%rax)
   14bf3:	00 fc                	add    %bh,%ah
   14bf5:	08 00                	or     %al,(%rax)
   14bf7:	00 58 1f             	add    %bl,0x1f(%rax)
   14bfa:	ff                   	(bad)  
   14bfb:	ff 05 00 00 00 00    	incl   0x0(%rip)        # 14c01 <__GNU_EH_FRAME_HDR+0x1141>
   14c01:	00 00                	add    %al,(%rax)
   14c03:	00 10                	add    %dl,(%rax)
   14c05:	00 00                	add    %al,(%rax)
   14c07:	00 10                	add    %dl,(%rax)
   14c09:	09 00                	or     %eax,(%rax)
   14c0b:	00 54 1f ff          	add    %dl,-0x1(%rdi,%rbx,1)
   14c0f:	ff 07                	incl   (%rdi)
   14c11:	00 00                	add    %al,(%rax)
   14c13:	00 00                	add    %al,(%rax)
   14c15:	00 00                	add    %al,(%rax)
   14c17:	00 10                	add    %dl,(%rax)
   14c19:	00 00                	add    %al,(%rax)
   14c1b:	00 24 09             	add    %ah,(%rcx,%rcx,1)
   14c1e:	00 00                	add    %al,(%rax)
   14c20:	50                   	push   %rax
   14c21:	1f                   	(bad)  
   14c22:	ff                   	(bad)  
   14c23:	ff 05 00 00 00 00    	incl   0x0(%rip)        # 14c29 <__GNU_EH_FRAME_HDR+0x1169>
   14c29:	00 00                	add    %al,(%rax)
   14c2b:	00 10                	add    %dl,(%rax)
   14c2d:	00 00                	add    %al,(%rax)
   14c2f:	00 38                	add    %bh,(%rax)
   14c31:	09 00                	or     %eax,(%rax)
   14c33:	00 4c 1f ff          	add    %cl,-0x1(%rdi,%rbx,1)
   14c37:	ff 05 00 00 00 00    	incl   0x0(%rip)        # 14c3d <__GNU_EH_FRAME_HDR+0x117d>
   14c3d:	00 00                	add    %al,(%rax)
   14c3f:	00 10                	add    %dl,(%rax)
   14c41:	00 00                	add    %al,(%rax)
   14c43:	00 4c 09 00          	add    %cl,0x0(%rcx,%rcx,1)
   14c47:	00 48 1f             	add    %cl,0x1f(%rax)
   14c4a:	ff                   	(bad)  
   14c4b:	ff 05 00 00 00 00    	incl   0x0(%rip)        # 14c51 <__GNU_EH_FRAME_HDR+0x1191>
   14c51:	00 00                	add    %al,(%rax)
   14c53:	00 10                	add    %dl,(%rax)
   14c55:	00 00                	add    %al,(%rax)
   14c57:	00 60 09             	add    %ah,0x9(%rax)
   14c5a:	00 00                	add    %al,(%rax)
   14c5c:	44 1f                	rex.R (bad) 
   14c5e:	ff                   	(bad)  
   14c5f:	ff 05 00 00 00 00    	incl   0x0(%rip)        # 14c65 <__GNU_EH_FRAME_HDR+0x11a5>
   14c65:	00 00                	add    %al,(%rax)
   14c67:	00 48 00             	add    %cl,0x0(%rax)
   14c6a:	00 00                	add    %al,(%rax)
   14c6c:	74 09                	je     14c77 <__GNU_EH_FRAME_HDR+0x11b7>
   14c6e:	00 00                	add    %al,(%rax)
   14c70:	40 1f                	rex (bad) 
   14c72:	ff                   	(bad)  
   14c73:	ff 5f 02             	lcall  *0x2(%rdi)
   14c76:	00 00                	add    %al,(%rax)
   14c78:	00 46 0e             	add    %al,0xe(%rsi)
   14c7b:	10 8f 02 4c 0e 18    	adc    %cl,0x180e4c02(%rdi)
   14c81:	8e 03                	mov    (%rbx),%es
   14c83:	46 0e                	rex.RX (bad) 
   14c85:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   14c8b:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff86315ad5 <_end+0xffffffff862eaac5>
   14c91:	06                   	(bad)  
   14c92:	44 0e                	rex.R (bad) 
   14c94:	38 83 07 44 0e 70    	cmp    %al,0x700e4407(%rbx)
   14c9a:	03 38                	add    (%rax),%edi
   14c9c:	01 0a                	add    %ecx,(%rdx)
   14c9e:	0e                   	(bad)  
   14c9f:	38 41 0e             	cmp    %al,0xe(%rcx)
   14ca2:	30 41 0e             	xor    %al,0xe(%rcx)
   14ca5:	28 42 0e             	sub    %al,0xe(%rdx)
   14ca8:	20 42 0e             	and    %al,0xe(%rdx)
   14cab:	18 42 0e             	sbb    %al,0xe(%rdx)
   14cae:	10 42 0e             	adc    %al,0xe(%rdx)
   14cb1:	08 48 0b             	or     %cl,0xb(%rax)
   14cb4:	20 00                	and    %al,(%rax)
   14cb6:	00 00                	add    %al,(%rax)
   14cb8:	c0 09 00             	rorb   $0x0,(%rcx)
   14cbb:	00 54 21 ff          	add    %dl,-0x1(%rcx,%riz,1)
   14cbf:	ff 5b 02             	lcall  *0x2(%rbx)
   14cc2:	00 00                	add    %al,(%rax)
   14cc4:	00 45 0e             	add    %al,0xe(%rbp)
   14cc7:	10 83 02 47 0e 90    	adc    %al,-0x6ff1b8fe(%rbx)
   14ccd:	01 02                	add    %eax,(%rdx)
   14ccf:	42 0a 0e             	rex.X or (%rsi),%cl
   14cd2:	10 41 0e             	adc    %al,0xe(%rcx)
   14cd5:	08 41 0b             	or     %al,0xb(%rcx)
   14cd8:	28 00                	sub    %al,(%rax)
   14cda:	00 00                	add    %al,(%rax)
   14cdc:	e4 09                	in     $0x9,%al
   14cde:	00 00                	add    %al,(%rax)
   14ce0:	90                   	nop
   14ce1:	23 ff                	and    %edi,%edi
   14ce3:	ff                   	(bad)  
   14ce4:	df 00                	filds  (%rax)
   14ce6:	00 00                	add    %al,(%rax)
   14ce8:	00 45 0e             	add    %al,0xe(%rbp)
   14ceb:	10 86 02 41 0e 18    	adc    %al,0x180e4102(%rsi)
   14cf1:	83 03 47             	addl   $0x47,(%rbx)
   14cf4:	0e                   	(bad)  
   14cf5:	20 02                	and    %al,(%rdx)
   14cf7:	bc 0a 0e 18 43       	mov    $0x43180e0a,%esp
   14cfc:	0e                   	(bad)  
   14cfd:	10 41 0e             	adc    %al,0xe(%rcx)
   14d00:	08 41 0b             	or     %al,0xb(%rcx)
   14d03:	00 38                	add    %bh,(%rax)
   14d05:	00 00                	add    %al,(%rax)
   14d07:	00 10                	add    %dl,(%rax)
   14d09:	0a 00                	or     (%rax),%al
   14d0b:	00 44 24 ff          	add    %al,-0x1(%rsp)
   14d0f:	ff                   	(bad)  
   14d10:	df 00                	filds  (%rax)
   14d12:	00 00                	add    %al,(%rax)
   14d14:	00 4d 0e             	add    %cl,0xe(%rbp)
   14d17:	10 8c 02 41 0e 18 86 	adc    %cl,-0x79e7f1bf(%rdx,%rax,1)
   14d1e:	03 41 0e             	add    0xe(%rcx),%eax
   14d21:	20 83 04 02 97 0a    	and    %al,0xa970204(%rbx)
   14d27:	0e                   	(bad)  
   14d28:	18 43 0e             	sbb    %al,0xe(%rbx)
   14d2b:	10 42 0e             	adc    %al,0xe(%rdx)
   14d2e:	08 45 0b             	or     %al,0xb(%rbp)
   14d31:	58                   	pop    %rax
   14d32:	0a 0e                	or     (%rsi),%cl
   14d34:	18 46 0e             	sbb    %al,0xe(%rsi)
   14d37:	10 42 0e             	adc    %al,0xe(%rdx)
   14d3a:	08 48 0b             	or     %cl,0xb(%rax)
   14d3d:	00 00                	add    %al,(%rax)
   14d3f:	00 5c 00 00          	add    %bl,0x0(%rax,%rax,1)
   14d43:	00 4c 0a 00          	add    %cl,0x0(%rdx,%rcx,1)
   14d47:	00 b8 cd ff ff b1    	add    %bh,-0x4e000033(%rax)
   14d4d:	01 00                	add    %eax,(%rax)
   14d4f:	00 00                	add    %al,(%rax)
   14d51:	46 0e                	rex.RX (bad) 
   14d53:	10 8d 02 45 0e 18    	adc    %cl,0x180e4502(%rbp)
   14d59:	8c 03                	mov    %es,(%rbx)
   14d5b:	44 0e                	rex.R (bad) 
   14d5d:	20 86 04 43 0e 28    	and    %al,0x280e4304(%rsi)
   14d63:	83 05 46 0e 40 6a 0a 	addl   $0xa,0x6a400e46(%rip)        # 6a415bb0 <_end+0x6a3eaba0>
   14d6a:	0e                   	(bad)  
   14d6b:	28 41 0e             	sub    %al,0xe(%rcx)
   14d6e:	20 41 0e             	and    %al,0xe(%rcx)
   14d71:	18 42 0e             	sbb    %al,0xe(%rdx)
   14d74:	10 42 0e             	adc    %al,0xe(%rdx)
   14d77:	08 48 0b             	or     %cl,0xb(%rax)
   14d7a:	6a 0a                	push   $0xa
   14d7c:	0e                   	(bad)  
   14d7d:	28 41 0e             	sub    %al,0xe(%rcx)
   14d80:	20 41 0e             	and    %al,0xe(%rcx)
   14d83:	18 42 0e             	sbb    %al,0xe(%rdx)
   14d86:	10 42 0e             	adc    %al,0xe(%rdx)
   14d89:	08 48 0b             	or     %cl,0xb(%rax)
   14d8c:	44 0a 0e             	or     (%rsi),%r9b
   14d8f:	28 46 0e             	sub    %al,0xe(%rsi)
   14d92:	20 41 0e             	and    %al,0xe(%rcx)
   14d95:	18 42 0e             	sbb    %al,0xe(%rdx)
   14d98:	10 42 0e             	adc    %al,0xe(%rdx)
   14d9b:	08 49 0b             	or     %cl,0xb(%rcx)
   14d9e:	00 00                	add    %al,(%rax)
   14da0:	10 00                	adc    %al,(%rax)
   14da2:	00 00                	add    %al,(%rax)
   14da4:	ac                   	lods   %ds:(%rsi),%al
   14da5:	0a 00                	or     (%rax),%al
   14da7:	00 88 24 ff ff 2e    	add    %cl,0x2effff24(%rax)
   14dad:	00 00                	add    %al,(%rax)
   14daf:	00 00                	add    %al,(%rax)
   14db1:	00 00                	add    %al,(%rax)
   14db3:	00 18                	add    %bl,(%rax)
   14db5:	00 00                	add    %al,(%rax)
   14db7:	00 c0                	add    %al,%al
   14db9:	0a 00                	or     (%rax),%al
   14dbb:	00 a4 24 ff ff 3b 00 	add    %ah,0x3bffff(%rsp)
   14dc2:	00 00                	add    %al,(%rax)
   14dc4:	00 45 0e             	add    %al,0xe(%rbp)
   14dc7:	10 83 02 75 0e 08    	adc    %al,0x80e7502(%rbx)
   14dcd:	00 00                	add    %al,(%rax)
   14dcf:	00 2c 00             	add    %ch,(%rax,%rax,1)
   14dd2:	00 00                	add    %al,(%rax)
   14dd4:	dc 0a                	fmull  (%rdx)
   14dd6:	00 00                	add    %al,(%rax)
   14dd8:	c8 24 ff ff          	enter  $0xff24,$0xff
   14ddc:	bc 00 00 00 00       	mov    $0x0,%esp
   14de1:	45 0e                	rex.RB (bad) 
   14de3:	10 86 02 44 0e 18    	adc    %al,0x180e4402(%rsi)
   14de9:	83 03 44             	addl   $0x44,(%rbx)
   14dec:	0e                   	(bad)  
   14ded:	30 02                	xor    %al,(%rdx)
   14def:	43 0a 0e             	rex.XB or (%r14),%cl
   14df2:	18 46 0e             	sbb    %al,0xe(%rsi)
   14df5:	10 41 0e             	adc    %al,0xe(%rcx)
   14df8:	08 49 0b             	or     %cl,0xb(%rcx)
   14dfb:	00 00                	add    %al,(%rax)
   14dfd:	00 00                	add    %al,(%rax)
   14dff:	00 10                	add    %dl,(%rax)
   14e01:	00 00                	add    %al,(%rax)
   14e03:	00 0c 0b             	add    %cl,(%rbx,%rcx,1)
   14e06:	00 00                	add    %al,(%rax)
   14e08:	58                   	pop    %rax
   14e09:	25 ff ff 10 00       	and    $0x10ffff,%eax
   14e0e:	00 00                	add    %al,(%rax)
   14e10:	00 00                	add    %al,(%rax)
   14e12:	00 00                	add    %al,(%rax)
   14e14:	14 00                	adc    $0x0,%al
   14e16:	00 00                	add    %al,(%rax)
   14e18:	20 0b                	and    %cl,(%rbx)
   14e1a:	00 00                	add    %al,(%rax)
   14e1c:	54                   	push   %rsp
   14e1d:	25 ff ff 22 00       	and    $0x22ffff,%eax
   14e22:	00 00                	add    %al,(%rax)
   14e24:	00 48 0e             	add    %cl,0xe(%rax)
   14e27:	10 54 0e 08          	adc    %dl,0x8(%rsi,%rcx,1)
   14e2b:	00 14 00             	add    %dl,(%rax,%rax,1)
   14e2e:	00 00                	add    %al,(%rax)
   14e30:	38 0b                	cmp    %cl,(%rbx)
   14e32:	00 00                	add    %al,(%rax)
   14e34:	6c                   	insb   (%dx),%es:(%rdi)
   14e35:	25 ff ff 20 00       	and    $0x20ffff,%eax
   14e3a:	00 00                	add    %al,(%rax)
   14e3c:	00 48 0e             	add    %cl,0xe(%rax)
   14e3f:	10 54 0e 08          	adc    %dl,0x8(%rsi,%rcx,1)
   14e43:	00 10                	add    %dl,(%rax)
   14e45:	00 00                	add    %al,(%rax)
   14e47:	00 50 0b             	add    %dl,0xb(%rax)
   14e4a:	00 00                	add    %al,(%rax)
   14e4c:	74 25                	je     14e73 <__GNU_EH_FRAME_HDR+0x13b3>
   14e4e:	ff                   	(bad)  
   14e4f:	ff 61 00             	jmp    *0x0(%rcx)
   14e52:	00 00                	add    %al,(%rax)
   14e54:	00 00                	add    %al,(%rax)
   14e56:	00 00                	add    %al,(%rax)
   14e58:	10 00                	adc    %al,(%rax)
   14e5a:	00 00                	add    %al,(%rax)
   14e5c:	64 0b 00             	or     %fs:(%rax),%eax
   14e5f:	00 d0                	add    %dl,%al
   14e61:	25 ff ff 53 00       	and    $0x53ffff,%eax
   14e66:	00 00                	add    %al,(%rax)
   14e68:	00 00                	add    %al,(%rax)
   14e6a:	00 00                	add    %al,(%rax)
   14e6c:	14 00                	adc    $0x0,%al
   14e6e:	00 00                	add    %al,(%rax)
   14e70:	78 0b                	js     14e7d <__GNU_EH_FRAME_HDR+0x13bd>
   14e72:	00 00                	add    %al,(%rax)
   14e74:	1c 26                	sbb    $0x26,%al
   14e76:	ff                   	(bad)  
   14e77:	ff 20                	jmp    *(%rax)
   14e79:	00 00                	add    %al,(%rax)
   14e7b:	00 00                	add    %al,(%rax)
   14e7d:	48 0e                	rex.W (bad) 
   14e7f:	10 54 0e 08          	adc    %dl,0x8(%rsi,%rcx,1)
   14e83:	00 14 00             	add    %dl,(%rax,%rax,1)
   14e86:	00 00                	add    %al,(%rax)
   14e88:	90                   	nop
   14e89:	0b 00                	or     (%rax),%eax
   14e8b:	00 24 26             	add    %ah,(%rsi,%riz,1)
   14e8e:	ff                   	(bad)  
   14e8f:	ff                   	(bad)  
   14e90:	78 00                	js     14e92 <__GNU_EH_FRAME_HDR+0x13d2>
   14e92:	00 00                	add    %al,(%rax)
   14e94:	00 48 0e             	add    %cl,0xe(%rax)
   14e97:	10 02                	adc    %al,(%rdx)
   14e99:	6c                   	insb   (%dx),%es:(%rdi)
   14e9a:	0e                   	(bad)  
   14e9b:	08 10                	or     %dl,(%rax)
   14e9d:	00 00                	add    %al,(%rax)
   14e9f:	00 a8 0b 00 00 8c    	add    %ch,-0x73fffff5(%rax)
   14ea5:	26 ff                	es (bad) 
   14ea7:	ff 61 00             	jmp    *0x0(%rcx)
   14eaa:	00 00                	add    %al,(%rax)
   14eac:	00 00                	add    %al,(%rax)
   14eae:	00 00                	add    %al,(%rax)
   14eb0:	10 00                	adc    %al,(%rax)
   14eb2:	00 00                	add    %al,(%rax)
   14eb4:	bc 0b 00 00 e8       	mov    $0xe800000b,%esp
   14eb9:	26 ff                	es (bad) 
   14ebb:	ff 53 00             	call   *0x0(%rbx)
   14ebe:	00 00                	add    %al,(%rax)
   14ec0:	00 00                	add    %al,(%rax)
   14ec2:	00 00                	add    %al,(%rax)
   14ec4:	14 00                	adc    $0x0,%al
   14ec6:	00 00                	add    %al,(%rax)
   14ec8:	d0 0b                	rorb   (%rbx)
   14eca:	00 00                	add    %al,(%rax)
   14ecc:	34 27                	xor    $0x27,%al
   14ece:	ff                   	(bad)  
   14ecf:	ff 16                	call   *(%rsi)
   14ed1:	00 00                	add    %al,(%rax)
   14ed3:	00 00                	add    %al,(%rax)
   14ed5:	48 0e                	rex.W (bad) 
   14ed7:	10 49 0e             	adc    %cl,0xe(%rcx)
   14eda:	08 00                	or     %al,(%rax)
   14edc:	10 00                	adc    %al,(%rax)
   14ede:	00 00                	add    %al,(%rax)
   14ee0:	e8 0b 00 00 3c       	call   3c014ef0 <_end+0x3bfe9ee0>
   14ee5:	27                   	(bad)  
   14ee6:	ff                   	(bad)  
   14ee7:	ff 43 00             	incl   0x0(%rbx)
   14eea:	00 00                	add    %al,(%rax)
   14eec:	00 00                	add    %al,(%rax)
   14eee:	00 00                	add    %al,(%rax)
   14ef0:	24 00                	and    $0x0,%al
   14ef2:	00 00                	add    %al,(%rax)
   14ef4:	fc                   	cld    
   14ef5:	0b 00                	or     (%rax),%eax
   14ef7:	00 78 27             	add    %bh,0x27(%rax)
   14efa:	ff                   	(bad)  
   14efb:	ff                   	(bad)  
   14efc:	3f                   	(bad)  
   14efd:	00 00                	add    %al,(%rax)
   14eff:	00 00                	add    %al,(%rax)
   14f01:	45 0e                	rex.RB (bad) 
   14f03:	10 86 02 44 0e 18    	adc    %al,0x180e4402(%rsi)
   14f09:	83 03 47             	addl   $0x47,(%rbx)
   14f0c:	0e                   	(bad)  
   14f0d:	20 6a 0e             	and    %ch,0xe(%rdx)
   14f10:	18 43 0e             	sbb    %al,0xe(%rbx)
   14f13:	10 41 0e             	adc    %al,0xe(%rcx)
   14f16:	08 00                	or     %al,(%rax)
   14f18:	18 00                	sbb    %al,(%rax)
   14f1a:	00 00                	add    %al,(%rax)
   14f1c:	24 0c                	and    $0xc,%al
   14f1e:	00 00                	add    %al,(%rax)
   14f20:	90                   	nop
   14f21:	27                   	(bad)  
   14f22:	ff                   	(bad)  
   14f23:	ff 2e                	ljmp   *(%rsi)
   14f25:	00 00                	add    %al,(%rax)
   14f27:	00 00                	add    %al,(%rax)
   14f29:	51                   	push   %rcx
   14f2a:	0e                   	(bad)  
   14f2b:	10 83 02 57 0e 08    	adc    %al,0x80e5702(%rbx)
   14f31:	00 00                	add    %al,(%rax)
   14f33:	00 14 00             	add    %dl,(%rax,%rax,1)
   14f36:	00 00                	add    %al,(%rax)
   14f38:	40 0c 00             	rex or $0x0,%al
   14f3b:	00 a4 27 ff ff 22 00 	add    %ah,0x22ffff(%rdi,%riz,1)
   14f42:	00 00                	add    %al,(%rax)
   14f44:	00 48 0e             	add    %cl,0xe(%rax)
   14f47:	10 59 0e             	adc    %bl,0xe(%rcx)
   14f4a:	08 00                	or     %al,(%rax)
   14f4c:	10 00                	adc    %al,(%rax)
   14f4e:	00 00                	add    %al,(%rax)
   14f50:	58                   	pop    %rax
   14f51:	0c 00                	or     $0x0,%al
   14f53:	00 bc 27 ff ff 25 00 	add    %bh,0x25ffff(%rdi,%riz,1)
   14f5a:	00 00                	add    %al,(%rax)
   14f5c:	00 00                	add    %al,(%rax)
   14f5e:	00 00                	add    %al,(%rax)
   14f60:	14 00                	adc    $0x0,%al
   14f62:	00 00                	add    %al,(%rax)
   14f64:	6c                   	insb   (%dx),%es:(%rdi)
   14f65:	0c 00                	or     $0x0,%al
   14f67:	00 d8                	add    %bl,%al
   14f69:	27                   	(bad)  
   14f6a:	ff                   	(bad)  
   14f6b:	ff 19                	lcall  *(%rcx)
   14f6d:	00 00                	add    %al,(%rax)
   14f6f:	00 00                	add    %al,(%rax)
   14f71:	48 0e                	rex.W (bad) 
   14f73:	10 49 0e             	adc    %cl,0xe(%rcx)
   14f76:	08 00                	or     %al,(%rax)
   14f78:	10 00                	adc    %al,(%rax)
   14f7a:	00 00                	add    %al,(%rax)
   14f7c:	84 0c 00             	test   %cl,(%rax,%rax,1)
   14f7f:	00 e0                	add    %ah,%al
   14f81:	27                   	(bad)  
   14f82:	ff                   	(bad)  
   14f83:	ff 16                	call   *(%rsi)
   14f85:	00 00                	add    %al,(%rax)
   14f87:	00 00                	add    %al,(%rax)
   14f89:	00 00                	add    %al,(%rax)
   14f8b:	00 10                	add    %dl,(%rax)
   14f8d:	00 00                	add    %al,(%rax)
   14f8f:	00 98 0c 00 00 ec    	add    %bl,-0x13fffff4(%rax)
   14f95:	27                   	(bad)  
   14f96:	ff                   	(bad)  
   14f97:	ff 13                	call   *(%rbx)
   14f99:	00 00                	add    %al,(%rax)
   14f9b:	00 00                	add    %al,(%rax)
   14f9d:	00 00                	add    %al,(%rax)
   14f9f:	00 1c 00             	add    %bl,(%rax,%rax,1)
   14fa2:	00 00                	add    %al,(%rax)
   14fa4:	ac                   	lods   %ds:(%rsi),%al
   14fa5:	0c 00                	or     $0x0,%al
   14fa7:	00 f8                	add    %bh,%al
   14fa9:	27                   	(bad)  
   14faa:	ff                   	(bad)  
   14fab:	ff 2f                	ljmp   *(%rdi)
   14fad:	00 00                	add    %al,(%rax)
   14faf:	00 00                	add    %al,(%rax)
   14fb1:	48 0e                	rex.W (bad) 
   14fb3:	10 59 0a             	adc    %bl,0xa(%rcx)
   14fb6:	0e                   	(bad)  
   14fb7:	08 47 0b             	or     %al,0xb(%rdi)
   14fba:	46 0e                	rex.RX (bad) 
   14fbc:	08 00                	or     %al,(%rax)
   14fbe:	00 00                	add    %al,(%rax)
   14fc0:	20 00                	and    %al,(%rax)
   14fc2:	00 00                	add    %al,(%rax)
   14fc4:	cc                   	int3   
   14fc5:	0c 00                	or     $0x0,%al
   14fc7:	00 08                	add    %cl,(%rax)
   14fc9:	28 ff                	sub    %bh,%bh
   14fcb:	ff                   	(bad)  
   14fcc:	ed                   	in     (%dx),%eax
   14fcd:	03 00                	add    (%rax),%eax
   14fcf:	00 00                	add    %al,(%rax)
   14fd1:	45 0e                	rex.RB (bad) 
   14fd3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
   14fd9:	49 8f 03             	rex.WB pop (%r11)
   14fdc:	8e 04 8d 05 8c 06 83 	mov    -0x7cf973fb(,%rcx,4),%es
   14fe3:	07                   	(bad)  
   14fe4:	38 00                	cmp    %al,(%rax)
   14fe6:	00 00                	add    %al,(%rax)
   14fe8:	f0 0c 00             	lock or $0x0,%al
   14feb:	00 d4                	add    %dl,%ah
   14fed:	2b ff                	sub    %edi,%edi
   14fef:	ff 4e 01             	decl   0x1(%rsi)
   14ff2:	00 00                	add    %al,(%rax)
   14ff4:	00 46 0e             	add    %al,0xe(%rsi)
   14ff7:	10 8d 02 42 0e 18    	adc    %cl,0x180e4202(%rbp)
   14ffd:	8c 03                	mov    %es,(%rbx)
   14fff:	44 0e                	rex.R (bad) 
   15001:	20 86 04 44 0e 28    	and    %al,0x280e4404(%rsi)
   15007:	83 05 44 0e 40 02 bb 	addl   $0xffffffbb,0x2400e44(%rip)        # 2415e52 <_end+0x23eae42>
   1500e:	0a 0e                	or     (%rsi),%cl
   15010:	28 44 0e 20          	sub    %al,0x20(%rsi,%rcx,1)
   15014:	41 0e                	rex.B (bad) 
   15016:	18 42 0e             	sbb    %al,0xe(%rdx)
   15019:	10 42 0e             	adc    %al,0xe(%rdx)
   1501c:	08 48 0b             	or     %cl,0xb(%rax)
   1501f:	00 38                	add    %bh,(%rax)
   15021:	00 00                	add    %al,(%rax)
   15023:	00 2c 0d 00 00 e8 2c 	add    %ch,0x2ce80000(,%rcx,1)
   1502a:	ff                   	(bad)  
   1502b:	ff ab 00 00 00 00    	ljmp   *0x0(%rbx)
   15031:	4e 0e                	rex.WRX (bad) 
   15033:	10 86 02 48 0e 18    	adc    %al,0x180e4802(%rsi)
   15039:	83 03 4a             	addl   $0x4a,(%rbx)
   1503c:	0e                   	(bad)  
   1503d:	20 7d 0a             	and    %bh,0xa(%rbp)
   15040:	0e                   	(bad)  
   15041:	18 43 0e             	sbb    %al,0xe(%rbx)
   15044:	10 41 0e             	adc    %al,0xe(%rcx)
   15047:	08 47 0b             	or     %al,0xb(%rdi)
   1504a:	5c                   	pop    %rsp
   1504b:	0a 0e                	or     (%rsi),%cl
   1504d:	18 46 0e             	sbb    %al,0xe(%rsi)
   15050:	10 41 0e             	adc    %al,0xe(%rcx)
   15053:	08 45 0b             	or     %al,0xb(%rbp)
   15056:	58                   	pop    %rax
   15057:	0e                   	(bad)  
   15058:	08 c3                	or     %al,%bl
   1505a:	c6 00 48             	movb   $0x48,(%rax)
   1505d:	00 00                	add    %al,(%rax)
   1505f:	00 68 0d             	add    %ch,0xd(%rax)
   15062:	00 00                	add    %al,(%rax)
   15064:	5c                   	pop    %rsp
   15065:	2d ff ff af 03       	sub    $0x3afffff,%eax
   1506a:	00 00                	add    %al,(%rax)
   1506c:	00 46 0e             	add    %al,0xe(%rsi)
   1506f:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   15075:	8e 03                	mov    (%rbx),%es
   15077:	42 0e                	rex.X (bad) 
   15079:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   1507f:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff86315ec6 <_end+0xffffffff862eaeb6>
   15085:	06                   	(bad)  
   15086:	41 0e                	rex.B (bad) 
   15088:	38 83 07 47 0e 40    	cmp    %al,0x400e4707(%rbx)
   1508e:	02 5e 0a             	add    0xa(%rsi),%bl
   15091:	0e                   	(bad)  
   15092:	38 41 0e             	cmp    %al,0xe(%rcx)
   15095:	30 41 0e             	xor    %al,0xe(%rcx)
   15098:	28 42 0e             	sub    %al,0xe(%rdx)
   1509b:	20 42 0e             	and    %al,0xe(%rdx)
   1509e:	18 42 0e             	sbb    %al,0xe(%rdx)
   150a1:	10 42 0e             	adc    %al,0xe(%rdx)
   150a4:	08 43 0b             	or     %al,0xb(%rbx)
   150a7:	00 14 00             	add    %dl,(%rax,%rax,1)
   150aa:	00 00                	add    %al,(%rax)
   150ac:	b4 0d                	mov    $0xd,%ah
   150ae:	00 00                	add    %al,(%rax)
   150b0:	c0 30 ff             	shlb   $0xff,(%rax)
   150b3:	ff 25 00 00 00 00    	jmp    *0x0(%rip)        # 150b9 <__GNU_EH_FRAME_HDR+0x15f9>
   150b9:	48 0e                	rex.W (bad) 
   150bb:	10 5c 0e 08          	adc    %bl,0x8(%rsi,%rcx,1)
   150bf:	00 10                	add    %dl,(%rax)
   150c1:	00 00                	add    %al,(%rax)
   150c3:	00 cc                	add    %cl,%ah
   150c5:	0d 00 00 d8 30       	or     $0x30d80000,%eax
   150ca:	ff                   	(bad)  
   150cb:	ff 6e 00             	ljmp   *0x0(%rsi)
   150ce:	00 00                	add    %al,(%rax)
   150d0:	00 00                	add    %al,(%rax)
   150d2:	00 00                	add    %al,(%rax)
   150d4:	34 00                	xor    $0x0,%al
   150d6:	00 00                	add    %al,(%rax)
   150d8:	e0 0d                	loopne 150e7 <__GNU_EH_FRAME_HDR+0x1627>
   150da:	00 00                	add    %al,(%rax)
   150dc:	34 31                	xor    $0x31,%al
   150de:	ff                   	(bad)  
   150df:	ff                   	(bad)  
   150e0:	d8 01                	fadds  (%rcx)
   150e2:	00 00                	add    %al,(%rax)
   150e4:	00 54 0e 10          	add    %dl,0x10(%rsi,%rcx,1)
   150e8:	86 02                	xchg   %al,(%rdx)
   150ea:	4d 0e                	rex.WRB (bad) 
   150ec:	18 83 03 02 a7 0a    	sbb    %al,0xaa70203(%rbx)
   150f2:	0e                   	(bad)  
   150f3:	10 41 0e             	adc    %al,0xe(%rcx)
   150f6:	08 47 0b             	or     %al,0xb(%rdi)
   150f9:	02 44 0a 0e          	add    0xe(%rdx,%rcx,1),%al
   150fd:	10 41 0e             	adc    %al,0xe(%rcx)
   15100:	08 4b 0b             	or     %cl,0xb(%rbx)
   15103:	02 b5 0e 08 c3 c6    	add    -0x393cf7f2(%rbp),%dh
   15109:	00 00                	add    %al,(%rax)
   1510b:	00 78 00             	add    %bh,0x0(%rax)
   1510e:	00 00                	add    %al,(%rax)
   15110:	18 0e                	sbb    %cl,(%rsi)
   15112:	00 00                	add    %al,(%rax)
   15114:	dc 32                	fdivl  (%rdx)
   15116:	ff                   	(bad)  
   15117:	ff 21                	jmp    *(%rcx)
   15119:	02 00                	add    (%rax),%al
   1511b:	00 00                	add    %al,(%rax)
   1511d:	66 0e                	data16 (bad) 
   1511f:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   15125:	8e 03                	mov    (%rbx),%es
   15127:	42 0e                	rex.X (bad) 
   15129:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   1512f:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff86315f76 <_end+0xffffffff862eaf66>
   15135:	06                   	(bad)  
   15136:	41 0e                	rex.B (bad) 
   15138:	38 83 07 47 0e 40    	cmp    %al,0x400e4707(%rbx)
   1513e:	03 0b                	add    (%rbx),%ecx
   15140:	01 0a                	add    %ecx,(%rdx)
   15142:	0e                   	(bad)  
   15143:	38 46 0e             	cmp    %al,0xe(%rsi)
   15146:	30 41 0e             	xor    %al,0xe(%rcx)
   15149:	28 42 0e             	sub    %al,0xe(%rdx)
   1514c:	20 42 0e             	and    %al,0xe(%rdx)
   1514f:	18 42 0e             	sbb    %al,0xe(%rdx)
   15152:	10 42 0e             	adc    %al,0xe(%rdx)
   15155:	08 41 0b             	or     %al,0xb(%rcx)
   15158:	02 90 0e 08 c3 c6    	add    -0x393cf7f2(%rax),%dl
   1515e:	cc                   	int3   
   1515f:	cd ce                	int    $0xce
   15161:	cf                   	iret   
   15162:	50                   	push   %rax
   15163:	0e                   	(bad)  
   15164:	40 83 07 86          	rex addl $0xffffff86,(%rdi)
   15168:	06                   	(bad)  
   15169:	8c 05 8d 04 8e 03    	mov    %es,0x38e048d(%rip)        # 38f55fc <_end+0x38ca5ec>
   1516f:	8f 02                	pop    (%rdx)
   15171:	64 0e                	fs (bad) 
   15173:	38 43 0e             	cmp    %al,0xe(%rbx)
   15176:	30 41 0e             	xor    %al,0xe(%rcx)
   15179:	28 42 0e             	sub    %al,0xe(%rdx)
   1517c:	20 42 0e             	and    %al,0xe(%rdx)
   1517f:	18 42 0e             	sbb    %al,0xe(%rdx)
   15182:	10 42 0e             	adc    %al,0xe(%rdx)
   15185:	08 00                	or     %al,(%rax)
   15187:	00 10                	add    %dl,(%rax)
   15189:	00 00                	add    %al,(%rax)
   1518b:	00 94 0e 00 00 90 34 	add    %dl,0x34900000(%rsi,%rcx,1)
   15192:	ff                   	(bad)  
   15193:	ff 96 00 00 00 00    	call   *0x0(%rsi)
   15199:	00 00                	add    %al,(%rax)
   1519b:	00 10                	add    %dl,(%rax)
   1519d:	00 00                	add    %al,(%rax)
   1519f:	00 a8 0e 00 00 1c    	add    %ch,0x1c00000e(%rax)
   151a5:	35 ff ff e4 00       	xor    $0xe4ffff,%eax
   151aa:	00 00                	add    %al,(%rax)
   151ac:	00 00                	add    %al,(%rax)
   151ae:	00 00                	add    %al,(%rax)
   151b0:	10 00                	adc    %al,(%rax)
   151b2:	00 00                	add    %al,(%rax)
   151b4:	bc 0e 00 00 f8       	mov    $0xf800000e,%esp
   151b9:	35 ff ff e4 00       	xor    $0xe4ffff,%eax
   151be:	00 00                	add    %al,(%rax)
   151c0:	00 00                	add    %al,(%rax)
   151c2:	00 00                	add    %al,(%rax)
   151c4:	50                   	push   %rax
   151c5:	00 00                	add    %al,(%rax)
   151c7:	00 d0                	add    %dl,%al
   151c9:	0e                   	(bad)  
   151ca:	00 00                	add    %al,(%rax)
   151cc:	d4                   	(bad)  
   151cd:	36 ff                	ss (bad) 
   151cf:	ff d1                	call   *%rcx
   151d1:	01 00                	add    %eax,(%rax)
   151d3:	00 00                	add    %al,(%rax)
   151d5:	4f 0e                	rex.WRXB (bad) 
   151d7:	10 8e 02 42 0e 18    	adc    %cl,0x180e4202(%rsi)
   151dd:	8d 03                	lea    (%rbx),%eax
   151df:	45 0e                	rex.RB (bad) 
   151e1:	20 8c 04 41 0e 28 86 	and    %cl,-0x79d7f1bf(%rsp,%rax,1)
   151e8:	05 41 0e 30 83       	add    $0x83300e41,%eax
   151ed:	06                   	(bad)  
   151ee:	02 ce                	add    %dh,%cl
   151f0:	0a 0e                	or     (%rsi),%cl
   151f2:	28 41 0e             	sub    %al,0xe(%rcx)
   151f5:	20 42 0e             	and    %al,0xe(%rdx)
   151f8:	18 42 0e             	sbb    %al,0xe(%rdx)
   151fb:	10 42 0e             	adc    %al,0xe(%rdx)
   151fe:	08 43 0b             	or     %al,0xb(%rbx)
   15201:	02 d1                	add    %cl,%dl
   15203:	0e                   	(bad)  
   15204:	28 43 0e             	sub    %al,0xe(%rbx)
   15207:	20 42 0e             	and    %al,0xe(%rdx)
   1520a:	18 42 0e             	sbb    %al,0xe(%rdx)
   1520d:	10 42 0e             	adc    %al,0xe(%rdx)
   15210:	08 41 c3             	or     %al,-0x3d(%rcx)
   15213:	c6                   	(bad)  
   15214:	cc                   	int3   
   15215:	cd ce                	int    $0xce
   15217:	00 4c 00 00          	add    %cl,0x0(%rax,%rax,1)
   1521b:	00 24 0f             	add    %ah,(%rdi,%rcx,1)
   1521e:	00 00                	add    %al,(%rax)
   15220:	60                   	(bad)  
   15221:	38 ff                	cmp    %bh,%bh
   15223:	ff                   	(bad)  
   15224:	fb                   	sti    
   15225:	00 00                	add    %al,(%rax)
   15227:	00 00                	add    %al,(%rax)
   15229:	4f 0e                	rex.WRXB (bad) 
   1522b:	10 8d 02 45 0e 18    	adc    %cl,0x180e4502(%rbp)
   15231:	8c 03                	mov    %es,(%rbx)
   15233:	41 0e                	rex.B (bad) 
   15235:	20 86 04 41 0e 28    	and    %al,0x280e4104(%rsi)
   1523b:	83 05 44 0e 30 02 be 	addl   $0xffffffbe,0x2300e44(%rip)        # 2316086 <_end+0x22eb076>
   15242:	0a 0e                	or     (%rsi),%cl
   15244:	28 46 0e             	sub    %al,0xe(%rsi)
   15247:	20 41 0e             	and    %al,0xe(%rcx)
   1524a:	18 42 0e             	sbb    %al,0xe(%rdx)
   1524d:	10 42 0e             	adc    %al,0xe(%rdx)
   15250:	08 45 0b             	or     %al,0xb(%rbp)
   15253:	44 0e                	rex.R (bad) 
   15255:	28 43 0e             	sub    %al,0xe(%rbx)
   15258:	20 41 0e             	and    %al,0xe(%rcx)
   1525b:	18 42 0e             	sbb    %al,0xe(%rdx)
   1525e:	10 42 0e             	adc    %al,0xe(%rdx)
   15261:	08 41 c3             	or     %al,-0x3d(%rcx)
   15264:	c6                   	(bad)  
   15265:	cc                   	int3   
   15266:	cd 00                	int    $0x0
   15268:	38 00                	cmp    %al,(%rax)
   1526a:	00 00                	add    %al,(%rax)
   1526c:	74 0f                	je     1527d <__GNU_EH_FRAME_HDR+0x17bd>
   1526e:	00 00                	add    %al,(%rax)
   15270:	10 39                	adc    %bh,(%rcx)
   15272:	ff                   	(bad)  
   15273:	ff 26                	jmp    *(%rsi)
   15275:	01 00                	add    %eax,(%rax)
   15277:	00 00                	add    %al,(%rax)
   15279:	46 0e                	rex.RX (bad) 
   1527b:	10 8d 02 45 0e 18    	adc    %cl,0x180e4502(%rbp)
   15281:	8c 03                	mov    %es,(%rbx)
   15283:	44 0e                	rex.R (bad) 
   15285:	20 86 04 44 0e 28    	and    %al,0x280e4404(%rsi)
   1528b:	83 05 44 0e 40 02 9d 	addl   $0xffffff9d,0x2400e44(%rip)        # 24160d6 <_end+0x23eb0c6>
   15292:	0a 0e                	or     (%rsi),%cl
   15294:	28 41 0e             	sub    %al,0xe(%rcx)
   15297:	20 41 0e             	and    %al,0xe(%rcx)
   1529a:	18 42 0e             	sbb    %al,0xe(%rdx)
   1529d:	10 42 0e             	adc    %al,0xe(%rdx)
   152a0:	08 46 0b             	or     %al,0xb(%rsi)
   152a3:	00 10                	add    %dl,(%rax)
   152a5:	00 00                	add    %al,(%rax)
   152a7:	00 b0 0f 00 00 04    	add    %dh,0x400000f(%rax)
   152ad:	3a ff                	cmp    %bh,%bh
   152af:	ff 12                	call   *(%rdx)
   152b1:	00 00                	add    %al,(%rax)
   152b3:	00 00                	add    %al,(%rax)
   152b5:	00 00                	add    %al,(%rax)
   152b7:	00 28                	add    %ch,(%rax)
   152b9:	00 00                	add    %al,(%rax)
   152bb:	00 c4                	add    %al,%ah
   152bd:	0f 00 00             	sldt   (%rax)
   152c0:	10 3a                	adc    %bh,(%rdx)
   152c2:	ff                   	(bad)  
   152c3:	ff 97 00 00 00 00    	call   *0x0(%rdi)
   152c9:	45 0e                	rex.RB (bad) 
   152cb:	10 86 02 41 0e 18    	adc    %al,0x180e4102(%rsi)
   152d1:	83 03 44             	addl   $0x44,(%rbx)
   152d4:	0e                   	(bad)  
   152d5:	40 02 85 0a 0e 18 41 	rex add 0x41180e0a(%rbp),%al
   152dc:	0e                   	(bad)  
   152dd:	10 41 0e             	adc    %al,0xe(%rcx)
   152e0:	08 41 0b             	or     %al,0xb(%rcx)
   152e3:	00 28                	add    %ch,(%rax)
   152e5:	00 00                	add    %al,(%rax)
   152e7:	00 f0                	add    %dh,%al
   152e9:	0f 00 00             	sldt   (%rax)
   152ec:	84 3a                	test   %bh,(%rdx)
   152ee:	ff                   	(bad)  
   152ef:	ff c7                	inc    %edi
   152f1:	00 00                	add    %al,(%rax)
   152f3:	00 00                	add    %al,(%rax)
   152f5:	45 0e                	rex.RB (bad) 
   152f7:	10 86 02 41 0e 18    	adc    %al,0x180e4102(%rsi)
   152fd:	83 03 44             	addl   $0x44,(%rbx)
   15300:	0e                   	(bad)  
   15301:	40 02 b5 0a 0e 18 41 	add    0x41180e0a(%rbp),%sil
   15308:	0e                   	(bad)  
   15309:	10 41 0e             	adc    %al,0xe(%rcx)
   1530c:	08 41 0b             	or     %al,0xb(%rcx)
   1530f:	00 10                	add    %dl,(%rax)
   15311:	00 00                	add    %al,(%rax)
   15313:	00 1c 10             	add    %bl,(%rax,%rdx,1)
   15316:	00 00                	add    %al,(%rax)
   15318:	fa                   	cli    
   15319:	c9                   	leave  
   1531a:	ff                   	(bad)  
   1531b:	ff 01                	incl   (%rcx)
   1531d:	00 00                	add    %al,(%rax)
   1531f:	00 00                	add    %al,(%rax)
   15321:	00 00                	add    %al,(%rax)
   15323:	00 10                	add    %dl,(%rax)
   15325:	00 00                	add    %al,(%rax)
   15327:	00 30                	add    %dh,(%rax)
   15329:	10 00                	adc    %al,(%rax)
   1532b:	00 e7                	add    %ah,%bh
   1532d:	c9                   	leave  
   1532e:	ff                   	(bad)  
   1532f:	ff 02                	incl   (%rdx)
   15331:	00 00                	add    %al,(%rax)
   15333:	00 00                	add    %al,(%rax)
   15335:	00 00                	add    %al,(%rax)
   15337:	00 10                	add    %dl,(%rax)
   15339:	00 00                	add    %al,(%rax)
   1533b:	00 44 10 00          	add    %al,0x0(%rax,%rdx,1)
   1533f:	00 d5                	add    %dl,%ch
   15341:	c9                   	leave  
   15342:	ff                   	(bad)  
   15343:	ff 02                	incl   (%rdx)
   15345:	00 00                	add    %al,(%rax)
   15347:	00 00                	add    %al,(%rax)
   15349:	00 00                	add    %al,(%rax)
   1534b:	00 10                	add    %dl,(%rax)
   1534d:	00 00                	add    %al,(%rax)
   1534f:	00 58 10             	add    %bl,0x10(%rax)
   15352:	00 00                	add    %al,(%rax)
   15354:	c3                   	ret    
   15355:	c9                   	leave  
   15356:	ff                   	(bad)  
   15357:	ff 02                	incl   (%rdx)
   15359:	00 00                	add    %al,(%rax)
   1535b:	00 00                	add    %al,(%rax)
   1535d:	00 00                	add    %al,(%rax)
   1535f:	00 10                	add    %dl,(%rax)
   15361:	00 00                	add    %al,(%rax)
   15363:	00 6c 10 00          	add    %ch,0x0(%rax,%rdx,1)
   15367:	00 b1 c9 ff ff 02    	add    %dh,0x2ffffc9(%rcx)
   1536d:	00 00                	add    %al,(%rax)
   1536f:	00 00                	add    %al,(%rax)
   15371:	00 00                	add    %al,(%rax)
   15373:	00 10                	add    %dl,(%rax)
   15375:	00 00                	add    %al,(%rax)
   15377:	00 80 10 00 00 9f    	add    %al,-0x60fffff0(%rax)
   1537d:	c9                   	leave  
   1537e:	ff                   	(bad)  
   1537f:	ff 02                	incl   (%rdx)
   15381:	00 00                	add    %al,(%rax)
   15383:	00 00                	add    %al,(%rax)
   15385:	00 00                	add    %al,(%rax)
   15387:	00 10                	add    %dl,(%rax)
   15389:	00 00                	add    %al,(%rax)
   1538b:	00 94 10 00 00 8d c9 	add    %dl,-0x36730000(%rax,%rdx,1)
   15392:	ff                   	(bad)  
   15393:	ff 02                	incl   (%rdx)
   15395:	00 00                	add    %al,(%rax)
   15397:	00 00                	add    %al,(%rax)
   15399:	00 00                	add    %al,(%rax)
   1539b:	00 10                	add    %dl,(%rax)
   1539d:	00 00                	add    %al,(%rax)
   1539f:	00 a8 10 00 00 7b    	add    %ch,0x7b000010(%rax)
   153a5:	c9                   	leave  
   153a6:	ff                   	(bad)  
   153a7:	ff 02                	incl   (%rdx)
   153a9:	00 00                	add    %al,(%rax)
   153ab:	00 00                	add    %al,(%rax)
   153ad:	00 00                	add    %al,(%rax)
   153af:	00 10                	add    %dl,(%rax)
   153b1:	00 00                	add    %al,(%rax)
   153b3:	00 bc 10 00 00 69 c9 	add    %bh,-0x36970000(%rax,%rdx,1)
   153ba:	ff                   	(bad)  
   153bb:	ff 03                	incl   (%rbx)
   153bd:	00 00                	add    %al,(%rax)
   153bf:	00 00                	add    %al,(%rax)
   153c1:	00 00                	add    %al,(%rax)
   153c3:	00 10                	add    %dl,(%rax)
   153c5:	00 00                	add    %al,(%rax)
   153c7:	00 d0                	add    %dl,%al
   153c9:	10 00                	adc    %al,(%rax)
   153cb:	00 58 c9             	add    %bl,-0x37(%rax)
   153ce:	ff                   	(bad)  
   153cf:	ff 03                	incl   (%rbx)
   153d1:	00 00                	add    %al,(%rax)
   153d3:	00 00                	add    %al,(%rax)
   153d5:	00 00                	add    %al,(%rax)
   153d7:	00 10                	add    %dl,(%rax)
   153d9:	00 00                	add    %al,(%rax)
   153db:	00 e4                	add    %ah,%ah
   153dd:	10 00                	adc    %al,(%rax)
   153df:	00 47 c9             	add    %al,-0x37(%rdi)
   153e2:	ff                   	(bad)  
   153e3:	ff 03                	incl   (%rbx)
   153e5:	00 00                	add    %al,(%rax)
   153e7:	00 00                	add    %al,(%rax)
   153e9:	00 00                	add    %al,(%rax)
   153eb:	00 10                	add    %dl,(%rax)
   153ed:	00 00                	add    %al,(%rax)
   153ef:	00 f8                	add    %bh,%al
   153f1:	10 00                	adc    %al,(%rax)
   153f3:	00 36                	add    %dh,(%rsi)
   153f5:	c9                   	leave  
   153f6:	ff                   	(bad)  
   153f7:	ff 03                	incl   (%rbx)
   153f9:	00 00                	add    %al,(%rax)
   153fb:	00 00                	add    %al,(%rax)
   153fd:	00 00                	add    %al,(%rax)
   153ff:	00 10                	add    %dl,(%rax)
   15401:	00 00                	add    %al,(%rax)
   15403:	00 0c 11             	add    %cl,(%rcx,%rdx,1)
   15406:	00 00                	add    %al,(%rax)
   15408:	25 c9 ff ff 03       	and    $0x3ffffc9,%eax
   1540d:	00 00                	add    %al,(%rax)
   1540f:	00 00                	add    %al,(%rax)
   15411:	00 00                	add    %al,(%rax)
   15413:	00 10                	add    %dl,(%rax)
   15415:	00 00                	add    %al,(%rax)
   15417:	00 20                	add    %ah,(%rax)
   15419:	11 00                	adc    %eax,(%rax)
   1541b:	00 14 c9             	add    %dl,(%rcx,%rcx,8)
   1541e:	ff                   	(bad)  
   1541f:	ff 03                	incl   (%rbx)
   15421:	00 00                	add    %al,(%rax)
   15423:	00 00                	add    %al,(%rax)
   15425:	00 00                	add    %al,(%rax)
   15427:	00 10                	add    %dl,(%rax)
   15429:	00 00                	add    %al,(%rax)
   1542b:	00 34 11             	add    %dh,(%rcx,%rdx,1)
   1542e:	00 00                	add    %al,(%rax)
   15430:	03 c9                	add    %ecx,%ecx
   15432:	ff                   	(bad)  
   15433:	ff 03                	incl   (%rbx)
   15435:	00 00                	add    %al,(%rax)
   15437:	00 00                	add    %al,(%rax)
   15439:	00 00                	add    %al,(%rax)
   1543b:	00 10                	add    %dl,(%rax)
   1543d:	00 00                	add    %al,(%rax)
   1543f:	00 48 11             	add    %cl,0x11(%rax)
   15442:	00 00                	add    %al,(%rax)
   15444:	f2 c8 ff ff 03       	repnz enter $0xffff,$0x3
   15449:	00 00                	add    %al,(%rax)
   1544b:	00 00                	add    %al,(%rax)
   1544d:	00 00                	add    %al,(%rax)
   1544f:	00 1c 00             	add    %bl,(%rax,%rax,1)
   15452:	00 00                	add    %al,(%rax)
   15454:	5c                   	pop    %rsp
   15455:	11 00                	adc    %eax,(%rax)
   15457:	00 e8                	add    %ch,%al
   15459:	39 ff                	cmp    %edi,%edi
   1545b:	ff 17                	call   *(%rdi)
   1545d:	00 00                	add    %al,(%rax)
   1545f:	00 00                	add    %al,(%rax)
   15461:	45 0e                	rex.RB (bad) 
   15463:	10 83 02 51 0e 08    	adc    %al,0x80e5102(%rbx)
   15469:	00 00                	add    %al,(%rax)
   1546b:	00 00                	add    %al,(%rax)
   1546d:	00 00                	add    %al,(%rax)
   1546f:	00 18                	add    %bl,(%rax)
   15471:	00 00                	add    %al,(%rax)
   15473:	00 7c 11 00          	add    %bh,0x0(%rcx,%rdx,1)
   15477:	00 eb                	add    %ch,%bl
   15479:	cc                   	int3   
   1547a:	ff                   	(bad)  
   1547b:	ff 43 01             	incl   0x1(%rbx)
   1547e:	00 00                	add    %al,(%rax)
   15480:	00 02                	add    %al,(%rdx)
   15482:	4b 0e                	rex.WXB (bad) 
   15484:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
   1548a:	00 00                	add    %al,(%rax)
   1548c:	18 00                	sbb    %al,(%rax)
   1548e:	00 00                	add    %al,(%rax)
   15490:	98                   	cwtl   
   15491:	11 00                	adc    %eax,(%rax)
   15493:	00 4f cf             	add    %cl,-0x31(%rdi)
   15496:	ff                   	(bad)  
   15497:	ff 0f                	decl   (%rdi)
   15499:	00 00                	add    %al,(%rax)
   1549b:	00 00                	add    %al,(%rax)
   1549d:	41 0e                	rex.B (bad) 
   1549f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
   154a5:	00 00                	add    %al,(%rax)
   154a7:	00 10                	add    %dl,(%rax)
   154a9:	00 00                	add    %al,(%rax)
   154ab:	00 b4 11 00 00 b4 cf 	add    %dh,-0x304c0000(%rcx,%rdx,1)
   154b2:	ff                   	(bad)  
   154b3:	ff 1c 00             	lcall  *(%rax,%rax,1)
   154b6:	00 00                	add    %al,(%rax)
   154b8:	00 00                	add    %al,(%rax)
   154ba:	00 00                	add    %al,(%rax)
   154bc:	10 00                	adc    %al,(%rax)
   154be:	00 00                	add    %al,(%rax)
   154c0:	c8 11 00 00          	enter  $0x11,$0x0
   154c4:	c0 cf ff             	ror    $0xff,%bh
   154c7:	ff 1b                	lcall  *(%rbx)
   154c9:	00 00                	add    %al,(%rax)
   154cb:	00 00                	add    %al,(%rax)
   154cd:	00 00                	add    %al,(%rax)
   154cf:	00 10                	add    %dl,(%rax)
   154d1:	00 00                	add    %al,(%rax)
   154d3:	00 dc                	add    %bl,%ah
   154d5:	11 00                	adc    %eax,(%rax)
   154d7:	00 cb                	add    %cl,%bl
   154d9:	cf                   	iret   
   154da:	ff                   	(bad)  
   154db:	ff 1c 00             	lcall  *(%rax,%rax,1)
   154de:	00 00                	add    %al,(%rax)
   154e0:	00 00                	add    %al,(%rax)
   154e2:	00 00                	add    %al,(%rax)
   154e4:	10 00                	adc    %al,(%rax)
   154e6:	00 00                	add    %al,(%rax)
   154e8:	f0 11 00             	lock adc %eax,(%rax)
   154eb:	00 d7                	add    %dl,%bh
   154ed:	cf                   	iret   
   154ee:	ff                   	(bad)  
   154ef:	ff 1a                	lcall  *(%rdx)
   154f1:	00 00                	add    %al,(%rax)
   154f3:	00 00                	add    %al,(%rax)
   154f5:	00 00                	add    %al,(%rax)
   154f7:	00 10                	add    %dl,(%rax)
   154f9:	00 00                	add    %al,(%rax)
   154fb:	00 04 12             	add    %al,(%rdx,%rdx,1)
   154fe:	00 00                	add    %al,(%rax)
   15500:	e1 cf                	loope  154d1 <__GNU_EH_FRAME_HDR+0x1a11>
   15502:	ff                   	(bad)  
   15503:	ff 1a                	lcall  *(%rdx)
   15505:	00 00                	add    %al,(%rax)
   15507:	00 00                	add    %al,(%rax)
   15509:	00 00                	add    %al,(%rax)
   1550b:	00 10                	add    %dl,(%rax)
   1550d:	00 00                	add    %al,(%rax)
   1550f:	00 18                	add    %bl,(%rax)
   15511:	12 00                	adc    (%rax),%al
   15513:	00 eb                	add    %ch,%bl
   15515:	cf                   	iret   
   15516:	ff                   	(bad)  
   15517:	ff 15 00 00 00 00    	call   *0x0(%rip)        # 1551d <__GNU_EH_FRAME_HDR+0x1a5d>
   1551d:	00 00                	add    %al,(%rax)
   1551f:	00 2c 00             	add    %ch,(%rax,%rax,1)
   15522:	00 00                	add    %al,(%rax)
   15524:	2c 12                	sub    $0x12,%al
   15526:	00 00                	add    %al,(%rax)
   15528:	38 39                	cmp    %bh,(%rcx)
   1552a:	ff                   	(bad)  
   1552b:	ff 74 00 00          	push   0x0(%rax,%rax,1)
   1552f:	00 00                	add    %al,(%rax)
   15531:	46 0e                	rex.RX (bad) 
   15533:	10 8c 02 41 0e 18 86 	adc    %cl,-0x79e7f1bf(%rdx,%rax,1)
   1553a:	03 41 0e             	add    0xe(%rcx),%eax
   1553d:	20 83 04 02 4d 0a    	and    %al,0xa4d0204(%rbx)
   15543:	0e                   	(bad)  
   15544:	18 41 0e             	sbb    %al,0xe(%rcx)
   15547:	10 42 0e             	adc    %al,0xe(%rdx)
   1554a:	08 48 0b             	or     %cl,0xb(%rax)
   1554d:	00 00                	add    %al,(%rax)
   1554f:	00 18                	add    %bl,(%rax)
   15551:	00 00                	add    %al,(%rax)
   15553:	00 5c 12 00          	add    %bl,0x0(%rdx,%rdx,1)
   15557:	00 88 39 ff ff 28    	add    %cl,0x28ffff39(%rax)
   1555d:	00 00                	add    %al,(%rax)
   1555f:	00 00                	add    %al,(%rax)
   15561:	45 0e                	rex.RB (bad) 
   15563:	10 83 02 62 0e 08    	adc    %al,0x80e6202(%rbx)
   15569:	00 00                	add    %al,(%rax)
   1556b:	00 18                	add    %bl,(%rax)
   1556d:	00 00                	add    %al,(%rax)
   1556f:	00 78 12             	add    %bh,0x12(%rax)
   15572:	00 00                	add    %al,(%rax)
   15574:	9c                   	pushf  
   15575:	39 ff                	cmp    %edi,%edi
   15577:	ff 25 00 00 00 00    	jmp    *0x0(%rip)        # 1557d <__GNU_EH_FRAME_HDR+0x1abd>
   1557d:	45 0e                	rex.RB (bad) 
   1557f:	10 83 02 5f 0e 08    	adc    %al,0x80e5f02(%rbx)
   15585:	00 00                	add    %al,(%rax)
   15587:	00 18                	add    %bl,(%rax)
   15589:	00 00                	add    %al,(%rax)
   1558b:	00 94 12 00 00 b0 39 	add    %dl,0x39b00000(%rdx,%rdx,1)
   15592:	ff                   	(bad)  
   15593:	ff 1a                	lcall  *(%rdx)
   15595:	00 00                	add    %al,(%rax)
   15597:	00 00                	add    %al,(%rax)
   15599:	45 0e                	rex.RB (bad) 
   1559b:	10 83 02 50 0e 08    	adc    %al,0x80e5002(%rbx)
   155a1:	00 00                	add    %al,(%rax)
   155a3:	00 10                	add    %dl,(%rax)
   155a5:	00 00                	add    %al,(%rax)
   155a7:	00 b0 12 00 00 b4    	add    %dh,-0x4bffffee(%rax)
   155ad:	39 ff                	cmp    %edi,%edi
   155af:	ff 23                	jmp    *(%rbx)
   155b1:	00 00                	add    %al,(%rax)
   155b3:	00 00                	add    %al,(%rax)
   155b5:	00 00                	add    %al,(%rax)
   155b7:	00 10                	add    %dl,(%rax)
   155b9:	00 00                	add    %al,(%rax)
   155bb:	00 c4                	add    %al,%ah
   155bd:	12 00                	adc    (%rax),%al
   155bf:	00 d0                	add    %dl,%al
   155c1:	39 ff                	cmp    %edi,%edi
   155c3:	ff 15 00 00 00 00    	call   *0x0(%rip)        # 155c9 <__GNU_EH_FRAME_HDR+0x1b09>
   155c9:	00 00                	add    %al,(%rax)
   155cb:	00 10                	add    %dl,(%rax)
   155cd:	00 00                	add    %al,(%rax)
   155cf:	00 d8                	add    %bl,%al
   155d1:	12 00                	adc    (%rax),%al
   155d3:	00 dc                	add    %bl,%ah
   155d5:	39 ff                	cmp    %edi,%edi
   155d7:	ff                   	(bad)  
   155d8:	bd 00 00 00 00       	mov    $0x0,%ebp
   155dd:	00 00                	add    %al,(%rax)
   155df:	00 10                	add    %dl,(%rax)
   155e1:	00 00                	add    %al,(%rax)
   155e3:	00 ec                	add    %ch,%ah
   155e5:	12 00                	adc    (%rax),%al
   155e7:	00 88 3a ff ff bd    	add    %cl,-0x420000c6(%rax)
   155ed:	00 00                	add    %al,(%rax)
   155ef:	00 00                	add    %al,(%rax)
   155f1:	00 00                	add    %al,(%rax)
   155f3:	00 10                	add    %dl,(%rax)
   155f5:	00 00                	add    %al,(%rax)
   155f7:	00 00                	add    %al,(%rax)
   155f9:	13 00                	adc    (%rax),%eax
   155fb:	00 34 3b             	add    %dh,(%rbx,%rdi,1)
   155fe:	ff                   	(bad)  
   155ff:	ff 1f                	lcall  *(%rdi)
   15601:	00 00                	add    %al,(%rax)
   15603:	00 00                	add    %al,(%rax)
   15605:	00 00                	add    %al,(%rax)
   15607:	00 10                	add    %dl,(%rax)
   15609:	00 00                	add    %al,(%rax)
   1560b:	00 14 13             	add    %dl,(%rbx,%rdx,1)
   1560e:	00 00                	add    %al,(%rax)
   15610:	40 3b ff             	rex cmp %edi,%edi
   15613:	ff b5 00 00 00 00    	push   0x0(%rbp)
   15619:	00 00                	add    %al,(%rax)
   1561b:	00 10                	add    %dl,(%rax)
   1561d:	00 00                	add    %al,(%rax)
   1561f:	00 28                	add    %ch,(%rax)
   15621:	13 00                	adc    (%rax),%eax
   15623:	00 ec                	add    %ch,%ah
   15625:	3b ff                	cmp    %edi,%edi
   15627:	ff 15 00 00 00 00    	call   *0x0(%rip)        # 1562d <__GNU_EH_FRAME_HDR+0x1b6d>
   1562d:	00 00                	add    %al,(%rax)
   1562f:	00 10                	add    %dl,(%rax)
   15631:	00 00                	add    %al,(%rax)
   15633:	00 3c 13             	add    %bh,(%rbx,%rdx,1)
   15636:	00 00                	add    %al,(%rax)
   15638:	f8                   	clc    
   15639:	3b ff                	cmp    %edi,%edi
   1563b:	ff 17                	call   *(%rdi)
   1563d:	00 00                	add    %al,(%rax)
   1563f:	00 00                	add    %al,(%rax)
   15641:	00 00                	add    %al,(%rax)
   15643:	00 10                	add    %dl,(%rax)
   15645:	00 00                	add    %al,(%rax)
   15647:	00 50 13             	add    %dl,0x13(%rax)
   1564a:	00 00                	add    %al,(%rax)
   1564c:	04 3c                	add    $0x3c,%al
   1564e:	ff                   	(bad)  
   1564f:	ff b5 00 00 00 00    	push   0x0(%rbp)
   15655:	00 00                	add    %al,(%rax)
   15657:	00 10                	add    %dl,(%rax)
   15659:	00 00                	add    %al,(%rax)
   1565b:	00 64 13 00          	add    %ah,0x0(%rbx,%rdx,1)
   1565f:	00 b0 3c ff ff 12    	add    %dh,0x12ffff3c(%rax)
   15665:	00 00                	add    %al,(%rax)
   15667:	00 00                	add    %al,(%rax)
   15669:	00 00                	add    %al,(%rax)
   1566b:	00 28                	add    %ch,(%rax)
   1566d:	00 00                	add    %al,(%rax)
   1566f:	00 78 13             	add    %bh,0x13(%rax)
   15672:	00 00                	add    %al,(%rax)
   15674:	bc 3c ff ff 37       	mov    $0x37ffff3c,%esp
   15679:	00 00                	add    %al,(%rax)
   1567b:	00 00                	add    %al,(%rax)
   1567d:	46 0e                	rex.RX (bad) 
   1567f:	10 8c 02 44 0e 18 86 	adc    %cl,-0x79e7f1bc(%rdx,%rax,1)
   15686:	03 44 0e 20          	add    0x20(%rsi,%rcx,1),%eax
   1568a:	83 04 65 0e 18 41 0e 	addl   $0x10,0xe41180e(,%riz,2)
   15691:	10 
   15692:	42 0e                	rex.X (bad) 
   15694:	08 00                	or     %al,(%rax)
   15696:	00 00                	add    %al,(%rax)
   15698:	4c 00 00             	rex.WR add %r8b,(%rax)
   1569b:	00 a4 13 00 00 d0 3c 	add    %ah,0x3cd00000(%rbx,%rdx,1)
   156a2:	ff                   	(bad)  
   156a3:	ff 31                	push   (%rcx)
   156a5:	02 00                	add    (%rax),%al
   156a7:	00 00                	add    %al,(%rax)
   156a9:	46 0e                	rex.RX (bad) 
   156ab:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   156b1:	8e 03                	mov    (%rbx),%es
   156b3:	42 0e                	rex.X (bad) 
   156b5:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   156bb:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff86316502 <_end+0xffffffff862eb4f2>
   156c1:	06                   	(bad)  
   156c2:	41 0e                	rex.B (bad) 
   156c4:	38 83 07 47 0e 70    	cmp    %al,0x700e4707(%rbx)
   156ca:	75 0a                	jne    156d6 <__GNU_EH_FRAME_HDR+0x1c16>
   156cc:	0e                   	(bad)  
   156cd:	38 41 0e             	cmp    %al,0xe(%rcx)
   156d0:	30 41 0e             	xor    %al,0xe(%rcx)
   156d3:	28 42 0e             	sub    %al,0xe(%rdx)
   156d6:	20 42 0e             	and    %al,0xe(%rdx)
   156d9:	18 42 0e             	sbb    %al,0xe(%rdx)
   156dc:	10 42 0e             	adc    %al,0xe(%rdx)
   156df:	08 44 0b 00          	or     %al,0x0(%rbx,%rcx,1)
   156e3:	00 00                	add    %al,(%rax)
   156e5:	00 00                	add    %al,(%rax)
   156e7:	00 2c 00             	add    %ch,(%rax,%rax,1)
   156ea:	00 00                	add    %al,(%rax)
   156ec:	f4                   	hlt    
   156ed:	13 00                	adc    (%rax),%eax
   156ef:	00 c0                	add    %al,%al
   156f1:	3e ff                	ds (bad) 
   156f3:	ff                   	(bad)  
   156f4:	df 01                	filds  (%rcx)
   156f6:	00 00                	add    %al,(%rax)
   156f8:	00 41 0e             	add    %al,0xe(%rcx)
   156fb:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
   15701:	54                   	push   %rsp
   15702:	8f 03                	pop    (%rbx)
   15704:	8e 04 8d 05 8c 06 83 	mov    -0x7cf973fb(,%rcx,4),%es
   1570b:	07                   	(bad)  
   1570c:	03 ae 01 0a 0c 07    	add    0x70c0a01(%rsi),%ebp
   15712:	08 41 0b             	or     %al,0xb(%rcx)
   15715:	00 00                	add    %al,(%rax)
   15717:	00 10                	add    %dl,(%rax)
   15719:	00 00                	add    %al,(%rax)
   1571b:	00 24 14             	add    %ah,(%rsp,%rdx,1)
   1571e:	00 00                	add    %al,(%rax)
   15720:	70 40                	jo     15762 <__GNU_EH_FRAME_HDR+0x1ca2>
   15722:	ff                   	(bad)  
   15723:	ff 08                	decl   (%rax)
   15725:	00 00                	add    %al,(%rax)
   15727:	00 00                	add    %al,(%rax)
   15729:	00 00                	add    %al,(%rax)
   1572b:	00 10                	add    %dl,(%rax)
   1572d:	00 00                	add    %al,(%rax)
   1572f:	00 38                	add    %bh,(%rax)
   15731:	14 00                	adc    $0x0,%al
   15733:	00 6c 40 ff          	add    %ch,-0x1(%rax,%rax,2)
   15737:	ff 09                	decl   (%rcx)
   15739:	00 00                	add    %al,(%rax)
   1573b:	00 00                	add    %al,(%rax)
   1573d:	00 00                	add    %al,(%rax)
   1573f:	00 10                	add    %dl,(%rax)
   15741:	00 00                	add    %al,(%rax)
   15743:	00 4c 14 00          	add    %cl,0x0(%rsp,%rdx,1)
   15747:	00 68 40             	add    %ch,0x40(%rax)
   1574a:	ff                   	(bad)  
   1574b:	ff 15 00 00 00 00    	call   *0x0(%rip)        # 15751 <__GNU_EH_FRAME_HDR+0x1c91>
   15751:	00 00                	add    %al,(%rax)
   15753:	00 1c 00             	add    %bl,(%rax,%rax,1)
   15756:	00 00                	add    %al,(%rax)
   15758:	60                   	(bad)  
   15759:	14 00                	adc    $0x0,%al
   1575b:	00 74 40 ff          	add    %dh,-0x1(%rax,%rax,2)
   1575f:	ff                   	(bad)  
   15760:	3d 00 00 00 00       	cmp    $0x0,%eax
   15765:	45 0e                	rex.RB (bad) 
   15767:	10 83 02 54 0a 0e    	adc    %al,0xe0a5402(%rbx)
   1576d:	08 47 0b             	or     %al,0xb(%rdi)
   15770:	5c                   	pop    %rsp
   15771:	0e                   	(bad)  
   15772:	08 00                	or     %al,(%rax)
   15774:	1c 00                	sbb    $0x0,%al
   15776:	00 00                	add    %al,(%rax)
   15778:	80 14 00 00          	adcb   $0x0,(%rax,%rax,1)
   1577c:	94                   	xchg   %eax,%esp
   1577d:	40 ff                	rex (bad) 
   1577f:	ff                   	(bad)  
   15780:	3d 00 00 00 00       	cmp    $0x0,%eax
   15785:	45 0e                	rex.RB (bad) 
   15787:	10 83 02 54 0a 0e    	adc    %al,0xe0a5402(%rbx)
   1578d:	08 47 0b             	or     %al,0xb(%rdi)
   15790:	5c                   	pop    %rsp
   15791:	0e                   	(bad)  
   15792:	08 00                	or     %al,(%rax)
   15794:	24 00                	and    $0x0,%al
   15796:	00 00                	add    %al,(%rax)
   15798:	a0 14 00 00 b4 40 ff 	movabs 0x7effff40b4000014,%al
   1579f:	ff 7e 
   157a1:	00 00                	add    %al,(%rax)
   157a3:	00 00                	add    %al,(%rax)
   157a5:	4a 0e                	rex.WX (bad) 
   157a7:	10 86 02 47 0e 20    	adc    %al,0x200e4702(%rsi)
   157ad:	68 0a 0e 10 41       	push   $0x41100e0a
   157b2:	0e                   	(bad)  
   157b3:	08 46 0b             	or     %al,0xb(%rsi)
   157b6:	78 0e                	js     157c6 <__GNU_EH_FRAME_HDR+0x1d06>
   157b8:	08 c6                	or     %al,%dh
   157ba:	00 00                	add    %al,(%rax)
   157bc:	10 00                	adc    %al,(%rax)
   157be:	00 00                	add    %al,(%rax)
   157c0:	c8 14 00 00          	enter  $0x14,$0x0
   157c4:	0c 41                	or     $0x41,%al
   157c6:	ff                   	(bad)  
   157c7:	ff 23                	jmp    *(%rbx)
   157c9:	00 00                	add    %al,(%rax)
   157cb:	00 00                	add    %al,(%rax)
   157cd:	00 00                	add    %al,(%rax)
   157cf:	00 10                	add    %dl,(%rax)
   157d1:	00 00                	add    %al,(%rax)
   157d3:	00 dc                	add    %bl,%ah
   157d5:	14 00                	adc    $0x0,%al
   157d7:	00 28                	add    %ch,(%rax)
   157d9:	41 ff                	rex.B (bad) 
   157db:	ff 2d 00 00 00 00    	ljmp   *0x0(%rip)        # 157e1 <__GNU_EH_FRAME_HDR+0x1d21>
   157e1:	00 00                	add    %al,(%rax)
   157e3:	00 10                	add    %dl,(%rax)
   157e5:	00 00                	add    %al,(%rax)
   157e7:	00 f0                	add    %dh,%al
   157e9:	14 00                	adc    $0x0,%al
   157eb:	00 44 41 ff          	add    %al,-0x1(%rcx,%rax,2)
   157ef:	ff 26                	jmp    *(%rsi)
   157f1:	00 00                	add    %al,(%rax)
   157f3:	00 00                	add    %al,(%rax)
   157f5:	00 00                	add    %al,(%rax)
   157f7:	00 10                	add    %dl,(%rax)
   157f9:	00 00                	add    %al,(%rax)
   157fb:	00 04 15 00 00 60 41 	add    %al,0x41600000(,%rdx,1)
   15802:	ff                   	(bad)  
   15803:	ff 26                	jmp    *(%rsi)
   15805:	00 00                	add    %al,(%rax)
   15807:	00 00                	add    %al,(%rax)
   15809:	00 00                	add    %al,(%rax)
   1580b:	00 10                	add    %dl,(%rax)
   1580d:	00 00                	add    %al,(%rax)
   1580f:	00 18                	add    %bl,(%rax)
   15811:	15 00 00 7c 41       	adc    $0x417c0000,%eax
   15816:	ff                   	(bad)  
   15817:	ff 70 00             	push   0x0(%rax)
   1581a:	00 00                	add    %al,(%rax)
   1581c:	00 00                	add    %al,(%rax)
   1581e:	00 00                	add    %al,(%rax)
   15820:	40 00 00             	rex add %al,(%rax)
   15823:	00 2c 15 00 00 d8 41 	add    %ch,0x41d80000(,%rdx,1)
   1582a:	ff                   	(bad)  
   1582b:	ff 84 01 00 00 00 46 	incl   0x46000000(%rcx,%rax,1)
   15832:	0e                   	(bad)  
   15833:	10 8e 02 45 0e 18    	adc    %cl,0x180e4502(%rsi)
   15839:	8d 03                	lea    (%rbx),%eax
   1583b:	45 0e                	rex.RB (bad) 
   1583d:	20 8c 04 44 0e 28 86 	and    %cl,-0x79d7f1bc(%rsp,%rax,1)
   15844:	05 41 0e 30 83       	add    $0x83300e41,%eax
   15849:	06                   	(bad)  
   1584a:	4c 0e                	rex.WR (bad) 
   1584c:	60                   	(bad)  
   1584d:	02 fc                	add    %ah,%bh
   1584f:	0a 0e                	or     (%rsi),%cl
   15851:	30 41 0e             	xor    %al,0xe(%rcx)
   15854:	28 41 0e             	sub    %al,0xe(%rcx)
   15857:	20 42 0e             	and    %al,0xe(%rdx)
   1585a:	18 42 0e             	sbb    %al,0xe(%rdx)
   1585d:	10 42 0e             	adc    %al,0xe(%rdx)
   15860:	08 4b 0b             	or     %cl,0xb(%rbx)
   15863:	00 30                	add    %dh,(%rax)
   15865:	00 00                	add    %al,(%rax)
   15867:	00 70 15             	add    %dh,0x15(%rax)
   1586a:	00 00                	add    %al,(%rax)
   1586c:	24 43                	and    $0x43,%al
   1586e:	ff                   	(bad)  
   1586f:	ff b5 00 00 00 00    	push   0x0(%rbp)
   15875:	46 0e                	rex.RX (bad) 
   15877:	10 8c 02 44 0e 18 86 	adc    %cl,-0x79e7f1bc(%rdx,%rax,1)
   1587e:	03 44 0e 20          	add    0x20(%rsi,%rcx,1),%eax
   15882:	83 04 47 0e          	addl   $0xe,(%rdi,%rax,2)
   15886:	30 02                	xor    %al,(%rdx)
   15888:	44 0a 0e             	or     (%rsi),%r9b
   1588b:	20 41 0e             	and    %al,0xe(%rcx)
   1588e:	18 41 0e             	sbb    %al,0xe(%rcx)
   15891:	10 42 0e             	adc    %al,0xe(%rdx)
   15894:	08 43 0b             	or     %al,0xb(%rbx)
   15897:	00 60 00             	add    %ah,0x0(%rax)
   1589a:	00 00                	add    %al,(%rax)
   1589c:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
   1589d:	15 00 00 b0 43       	adc    $0x43b00000,%eax
   158a2:	ff                   	(bad)  
   158a3:	ff 0d 03 00 00 00    	decl   0x3(%rip)        # 158ac <__GNU_EH_FRAME_HDR+0x1dec>
   158a9:	46 0e                	rex.RX (bad) 
   158ab:	10 8f 02 45 0e 18    	adc    %cl,0x180e4502(%rdi)
   158b1:	8e 03                	mov    (%rbx),%es
   158b3:	45 0e                	rex.RB (bad) 
   158b5:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
   158bb:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff86316705 <_end+0xffffffff862eb6f5>
   158c1:	06                   	(bad)  
   158c2:	44 0e                	rex.R (bad) 
   158c4:	38 83 07 47 0e 50    	cmp    %al,0x500e4707(%rbx)
   158ca:	02 94 0a 0e 38 46 0e 	add    0xe46380e(%rdx,%rcx,1),%dl
   158d1:	30 41 0e             	xor    %al,0xe(%rcx)
   158d4:	28 42 0e             	sub    %al,0xe(%rdx)
   158d7:	20 42 0e             	and    %al,0xe(%rdx)
   158da:	18 42 0e             	sbb    %al,0xe(%rdx)
   158dd:	10 42 0e             	adc    %al,0xe(%rdx)
   158e0:	08 49 0b             	or     %cl,0xb(%rcx)
   158e3:	02 7e 0a             	add    0xa(%rsi),%bh
   158e6:	0e                   	(bad)  
   158e7:	38 41 0e             	cmp    %al,0xe(%rcx)
   158ea:	30 41 0e             	xor    %al,0xe(%rcx)
   158ed:	28 42 0e             	sub    %al,0xe(%rdx)
   158f0:	20 42 0e             	and    %al,0xe(%rdx)
   158f3:	18 42 0e             	sbb    %al,0xe(%rdx)
   158f6:	10 42 0e             	adc    %al,0xe(%rdx)
   158f9:	08 41 0b             	or     %al,0xb(%rcx)
   158fc:	4c 00 00             	rex.WR add %r8b,(%rax)
   158ff:	00 08                	add    %cl,(%rax)
   15901:	16                   	(bad)  
   15902:	00 00                	add    %al,(%rax)
   15904:	5c                   	pop    %rsp
   15905:	46 ff                	rex.RX (bad) 
   15907:	ff                   	(bad)  
   15908:	db 00                	fildl  (%rax)
   1590a:	00 00                	add    %al,(%rax)
   1590c:	00 46 0e             	add    %al,0xe(%rsi)
   1590f:	10 8d 02 45 0e 18    	adc    %cl,0x180e4502(%rbp)
   15915:	8c 03                	mov    %es,(%rbx)
   15917:	44 0e                	rex.R (bad) 
   15919:	20 86 04 44 0e 28    	and    %al,0x280e4404(%rsi)
   1591f:	83 05 4d 0e 30 02 72 	addl   $0x72,0x2300e4d(%rip)        # 2316773 <_end+0x22eb763>
   15926:	0a 0e                	or     (%rsi),%cl
   15928:	28 41 0e             	sub    %al,0xe(%rcx)
   1592b:	20 41 0e             	and    %al,0xe(%rcx)
   1592e:	18 42 0e             	sbb    %al,0xe(%rdx)
   15931:	10 42 0e             	adc    %al,0xe(%rdx)
   15934:	08 48 0b             	or     %cl,0xb(%rax)
   15937:	51                   	push   %rcx
   15938:	0a 0e                	or     (%rsi),%cl
   1593a:	28 41 0e             	sub    %al,0xe(%rcx)
   1593d:	20 41 0e             	and    %al,0xe(%rcx)
   15940:	18 42 0e             	sbb    %al,0xe(%rdx)
   15943:	10 42 0e             	adc    %al,0xe(%rdx)
   15946:	08 49 0b             	or     %cl,0xb(%rcx)
   15949:	00 00                	add    %al,(%rax)
   1594b:	00 20                	add    %ah,(%rax)
   1594d:	00 00                	add    %al,(%rax)
   1594f:	00 58 16             	add    %bl,0x16(%rax)
   15952:	00 00                	add    %al,(%rax)
   15954:	ec                   	in     (%dx),%al
   15955:	46 ff                	rex.RX (bad) 
   15957:	ff 02                	incl   (%rdx)
   15959:	01 00                	add    %eax,(%rax)
   1595b:	00 00                	add    %al,(%rax)
   1595d:	45 0e                	rex.RB (bad) 
   1595f:	10 83 02 44 0e 60    	adc    %al,0x600e4402(%rbx)
   15965:	02 c6                	add    %dh,%al
   15967:	0a 0e                	or     (%rsi),%cl
   15969:	10 41 0e             	adc    %al,0xe(%rcx)
   1596c:	08 48 0b             	or     %cl,0xb(%rax)
   1596f:	00 18                	add    %bl,(%rax)
   15971:	00 00                	add    %al,(%rax)
   15973:	00 7c 16 00          	add    %bh,0x0(%rsi,%rdx,1)
   15977:	00 d8                	add    %bl,%al
   15979:	47 ff                	rex.RXB (bad) 
   1597b:	ff 45 00             	incl   0x0(%rbp)
   1597e:	00 00                	add    %al,(%rax)
   15980:	00 45 0e             	add    %al,0xe(%rbp)
   15983:	10 83 02 76 0a 0e    	adc    %al,0xe0a7602(%rbx)
   15989:	08 45 0b             	or     %al,0xb(%rbp)
   1598c:	24 00                	and    $0x0,%al
   1598e:	00 00                	add    %al,(%rax)
   15990:	98                   	cwtl   
   15991:	16                   	(bad)  
   15992:	00 00                	add    %al,(%rax)
   15994:	0c 48                	or     $0x48,%al
   15996:	ff                   	(bad)  
   15997:	ff                   	(bad)  
   15998:	39 00                	cmp    %eax,(%rax)
   1599a:	00 00                	add    %al,(%rax)
   1599c:	00 45 0e             	add    %al,0xe(%rbp)
   1599f:	10 86 02 41 0e 18    	adc    %al,0x180e4102(%rsi)
   159a5:	83 03 44             	addl   $0x44,(%rbx)
   159a8:	0e                   	(bad)  
   159a9:	20 6c 0e 18          	and    %ch,0x18(%rsi,%rcx,1)
   159ad:	41 0e                	rex.B (bad) 
   159af:	10 41 0e             	adc    %al,0xe(%rcx)
   159b2:	08 00                	or     %al,(%rax)
   159b4:	28 00                	sub    %al,(%rax)
   159b6:	00 00                	add    %al,(%rax)
   159b8:	c0 16 00             	rclb   $0x0,(%rsi)
   159bb:	00 24 48             	add    %ah,(%rax,%rcx,2)
   159be:	ff                   	(bad)  
   159bf:	ff d7                	call   *%rdi
   159c1:	00 00                	add    %al,(%rax)
   159c3:	00 00                	add    %al,(%rax)
   159c5:	45 0e                	rex.RB (bad) 
   159c7:	10 86 02 4b 0d 06    	adc    %al,0x60d4b02(%rsi)
   159cd:	44 8d 03             	lea    (%rbx),%r8d
   159d0:	8c 04 44             	mov    %es,(%rsp,%rax,2)
   159d3:	83 05 02 7f 0a 0c 07 	addl   $0x7,0xc0a7f02(%rip)        # c0bd8dc <_end+0xc0928cc>
   159da:	08 49 0b             	or     %cl,0xb(%rcx)
   159dd:	00 00                	add    %al,(%rax)
   159df:	00 28                	add    %ch,(%rax)
   159e1:	00 00                	add    %al,(%rax)
   159e3:	00 ec                	add    %ch,%ah
   159e5:	16                   	(bad)  
   159e6:	00 00                	add    %al,(%rax)
   159e8:	d8 48 ff             	fmuls  -0x1(%rax)
   159eb:	ff                   	(bad)  
   159ec:	ef                   	out    %eax,(%dx)
   159ed:	00 00                	add    %al,(%rax)
   159ef:	00 00                	add    %al,(%rax)
   159f1:	45 0e                	rex.RB (bad) 
   159f3:	10 86 02 47 0d 06    	adc    %al,0x60d4702(%rsi)
   159f9:	51                   	push   %rcx
   159fa:	8f 03                	pop    (%rbx)
   159fc:	8e 04 8d 05 8c 06 83 	mov    -0x7cf973fb(,%rcx,4),%es
   15a03:	07                   	(bad)  
   15a04:	02 cc                	add    %ah,%cl
   15a06:	0a 0c 07             	or     (%rdi,%rax,1),%cl
   15a09:	08 41 0b             	or     %al,0xb(%rcx)
   15a0c:	5c                   	pop    %rsp
   15a0d:	00 00                	add    %al,(%rax)
   15a0f:	00 18                	add    %bl,(%rax)
   15a11:	17                   	(bad)  
   15a12:	00 00                	add    %al,(%rax)
   15a14:	9c                   	pushf  
   15a15:	49 ff                	rex.WB (bad) 
   15a17:	ff c6                	inc    %esi
   15a19:	00 00                	add    %al,(%rax)
   15a1b:	00 00                	add    %al,(%rax)
   15a1d:	46 0e                	rex.RX (bad) 
   15a1f:	10 8d 02 42 0e 18    	adc    %cl,0x180e4202(%rbp)
   15a25:	8c 03                	mov    %es,(%rbx)
   15a27:	41 0e                	rex.B (bad) 
   15a29:	20 86 04 41 0e 28    	and    %al,0x280e4104(%rsi)
   15a2f:	83 05 47 0e 30 02 55 	addl   $0x55,0x2300e47(%rip)        # 231687d <_end+0x22eb86d>
   15a36:	0a 0e                	or     (%rsi),%cl
   15a38:	28 41 0e             	sub    %al,0xe(%rcx)
   15a3b:	20 41 0e             	and    %al,0xe(%rcx)
   15a3e:	18 42 0e             	sbb    %al,0xe(%rdx)
   15a41:	10 42 0e             	adc    %al,0xe(%rdx)
   15a44:	08 44 0b 44          	or     %al,0x44(%rbx,%rcx,1)
   15a48:	0a 0e                	or     (%rsi),%cl
   15a4a:	28 46 0e             	sub    %al,0xe(%rsi)
   15a4d:	20 41 0e             	and    %al,0xe(%rcx)
   15a50:	18 42 0e             	sbb    %al,0xe(%rdx)
   15a53:	10 42 0e             	adc    %al,0xe(%rdx)
   15a56:	08 41 0b             	or     %al,0xb(%rcx)
   15a59:	71 0a                	jno    15a65 <__GNU_EH_FRAME_HDR+0x1fa5>
   15a5b:	0e                   	(bad)  
   15a5c:	28 41 0e             	sub    %al,0xe(%rcx)
   15a5f:	20 41 0e             	and    %al,0xe(%rcx)
   15a62:	18 42 0e             	sbb    %al,0xe(%rdx)
   15a65:	10 42 0e             	adc    %al,0xe(%rdx)
   15a68:	08 41 0b             	or     %al,0xb(%rcx)
   15a6b:	00 28                	add    %ch,(%rax)
   15a6d:	00 00                	add    %al,(%rax)
   15a6f:	00 78 17             	add    %bh,0x17(%rax)
   15a72:	00 00                	add    %al,(%rax)
   15a74:	0c 4a                	or     $0x4a,%al
   15a76:	ff                   	(bad)  
   15a77:	ff 64 01 00          	jmp    *0x0(%rcx,%rax,1)
   15a7b:	00 00                	add    %al,(%rax)
   15a7d:	45 0e                	rex.RB (bad) 
   15a7f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
   15a85:	47 8e 03             	rex.RXB mov (%r11),%es
   15a88:	8d 04 8c             	lea    (%rsp,%rcx,4),%eax
   15a8b:	05 83 06 02 93       	add    $0x93020683,%eax
   15a90:	0a 0c 07             	or     (%rdi,%rax,1),%cl
   15a93:	08 46 0b             	or     %al,0xb(%rsi)
   15a96:	00 00                	add    %al,(%rax)
   15a98:	2c 00                	sub    $0x0,%al
   15a9a:	00 00                	add    %al,(%rax)
   15a9c:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
   15a9d:	17                   	(bad)  
   15a9e:	00 00                	add    %al,(%rax)
   15aa0:	50                   	push   %rax
   15aa1:	4b ff                	rex.WXB (bad) 
   15aa3:	ff                   	(bad)  
   15aa4:	3d 02 00 00 00       	cmp    $0x2,%eax
   15aa9:	45 0e                	rex.RB (bad) 
   15aab:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
   15ab1:	54                   	push   %rsp
   15ab2:	8f 03                	pop    (%rbx)
   15ab4:	8e 04 8d 05 8c 06 83 	mov    -0x7cf973fb(,%rcx,4),%es
   15abb:	07                   	(bad)  
   15abc:	03 32                	add    (%rdx),%esi
   15abe:	01 0a                	add    %ecx,(%rdx)
   15ac0:	0c 07                	or     $0x7,%al
   15ac2:	08 42 0b             	or     %al,0xb(%rdx)
   15ac5:	00 00                	add    %al,(%rax)
   15ac7:	00 30                	add    %dh,(%rax)
   15ac9:	00 00                	add    %al,(%rax)
   15acb:	00 d4                	add    %dl,%ah
   15acd:	17                   	(bad)  
   15ace:	00 00                	add    %al,(%rax)
   15ad0:	60                   	(bad)  
   15ad1:	4d ff                	rex.WRB (bad) 
   15ad3:	ff 66 00             	jmp    *0x0(%rsi)
   15ad6:	00 00                	add    %al,(%rax)
   15ad8:	00 46 0e             	add    %al,0xe(%rsi)
   15adb:	10 8d 02 45 0e 18    	adc    %cl,0x180e4502(%rbp)
   15ae1:	8c 03                	mov    %es,(%rbx)
   15ae3:	41 0e                	rex.B (bad) 
   15ae5:	20 83 04 44 0e 30    	and    %al,0x300e4404(%rbx)
   15aeb:	66 0a 0e             	data16 or (%rsi),%cl
   15aee:	20 4a 0e             	and    %cl,0xe(%rdx)
   15af1:	18 42 0e             	sbb    %al,0xe(%rdx)
   15af4:	10 42 0e             	adc    %al,0xe(%rdx)
   15af7:	08 4c 0b 00          	or     %cl,0x0(%rbx,%rcx,1)
   15afb:	00 30                	add    %dh,(%rax)
   15afd:	00 00                	add    %al,(%rax)
   15aff:	00 08                	add    %cl,(%rax)
   15b01:	18 00                	sbb    %al,(%rax)
   15b03:	00 9c 4d ff ff f5 00 	add    %bl,0xf5ffff(%rbp,%rcx,2)
   15b0a:	00 00                	add    %al,(%rax)
   15b0c:	00 46 0e             	add    %al,0xe(%rsi)
   15b0f:	10 8c 02 44 0e 18 86 	adc    %cl,-0x79e7f1bc(%rdx,%rax,1)
   15b16:	03 41 0e             	add    0xe(%rcx),%eax
   15b19:	20 83 04 47 0e 30    	and    %al,0x300e4704(%rbx)
   15b1f:	02 a3 0a 0e 20 41    	add    0x41200e0a(%rbx),%ah
   15b25:	0e                   	(bad)  
   15b26:	18 41 0e             	sbb    %al,0xe(%rcx)
   15b29:	10 42 0e             	adc    %al,0xe(%rdx)
   15b2c:	08 47 0b             	or     %al,0xb(%rdi)
   15b2f:	00 34 00             	add    %dh,(%rax,%rax,1)
   15b32:	00 00                	add    %al,(%rax)
   15b34:	3c 18                	cmp    $0x18,%al
   15b36:	00 00                	add    %al,(%rax)
   15b38:	68 4e ff ff 48       	push   $0x48ffff4e
   15b3d:	00 00                	add    %al,(%rax)
   15b3f:	00 00                	add    %al,(%rax)
   15b41:	46 0e                	rex.RX (bad) 
   15b43:	10 8d 02 45 0e 18    	adc    %cl,0x180e4502(%rbp)
   15b49:	8c 03                	mov    %es,(%rbx)
   15b4b:	44 0e                	rex.R (bad) 
   15b4d:	20 86 04 44 0e 28    	and    %al,0x280e4404(%rsi)
   15b53:	83 05 44 0e 30 6a 0e 	addl   $0xe,0x6a300e44(%rip)        # 6a31699e <_end+0x6a2eb98e>
   15b5a:	28 41 0e             	sub    %al,0xe(%rcx)
   15b5d:	20 41 0e             	and    %al,0xe(%rcx)
   15b60:	18 42 0e             	sbb    %al,0xe(%rdx)
   15b63:	10 42 0e             	adc    %al,0xe(%rdx)
   15b66:	08 00                	or     %al,(%rax)
   15b68:	74 00                	je     15b6a <__GNU_EH_FRAME_HDR+0x20aa>
   15b6a:	00 00                	add    %al,(%rax)
   15b6c:	74 18                	je     15b86 <__GNU_EH_FRAME_HDR+0x20c6>
   15b6e:	00 00                	add    %al,(%rax)
   15b70:	80 4e ff ff          	orb    $0xff,-0x1(%rsi)
   15b74:	1c 01                	sbb    $0x1,%al
   15b76:	00 00                	add    %al,(%rax)
   15b78:	00 46 0e             	add    %al,0xe(%rsi)
   15b7b:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   15b81:	8e 03                	mov    (%rbx),%es
   15b83:	42 0e                	rex.X (bad) 
   15b85:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   15b8b:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff863169d5 <_end+0xffffffff862eb9c5>
   15b91:	06                   	(bad)  
   15b92:	44 0e                	rex.R (bad) 
   15b94:	38 83 07 44 0e 50    	cmp    %al,0x500e4407(%rbx)
   15b9a:	7f 0a                	jg     15ba6 <__GNU_EH_FRAME_HDR+0x20e6>
   15b9c:	0e                   	(bad)  
   15b9d:	38 41 0e             	cmp    %al,0xe(%rcx)
   15ba0:	30 41 0e             	xor    %al,0xe(%rcx)
   15ba3:	28 42 0e             	sub    %al,0xe(%rdx)
   15ba6:	20 42 0e             	and    %al,0xe(%rdx)
   15ba9:	18 42 0e             	sbb    %al,0xe(%rdx)
   15bac:	10 42 0e             	adc    %al,0xe(%rdx)
   15baf:	08 47 0b             	or     %al,0xb(%rdi)
   15bb2:	44 0a 0e             	or     (%rsi),%r9b
   15bb5:	38 46 0e             	cmp    %al,0xe(%rsi)
   15bb8:	30 41 0e             	xor    %al,0xe(%rcx)
   15bbb:	28 42 0e             	sub    %al,0xe(%rdx)
   15bbe:	20 42 0e             	and    %al,0xe(%rdx)
   15bc1:	18 42 0e             	sbb    %al,0xe(%rdx)
   15bc4:	10 42 0e             	adc    %al,0xe(%rdx)
   15bc7:	08 45 0b             	or     %al,0xb(%rbp)
   15bca:	02 8f 0e 38 43 0e    	add    0xe43380e(%rdi),%cl
   15bd0:	30 41 0e             	xor    %al,0xe(%rcx)
   15bd3:	28 42 0e             	sub    %al,0xe(%rdx)
   15bd6:	20 42 0e             	and    %al,0xe(%rdx)
   15bd9:	18 42 0e             	sbb    %al,0xe(%rdx)
   15bdc:	10 42 0e             	adc    %al,0xe(%rdx)
   15bdf:	08 78 00             	or     %bh,0x0(%rax)
   15be2:	00 00                	add    %al,(%rax)
   15be4:	ec                   	in     (%dx),%al
   15be5:	18 00                	sbb    %al,(%rax)
   15be7:	00 28                	add    %ch,(%rax)
   15be9:	4f ff                	rex.WRXB (bad) 
   15beb:	ff 0b                	decl   (%rbx)
   15bed:	01 00                	add    %eax,(%rax)
   15bef:	00 00                	add    %al,(%rax)
   15bf1:	46 0e                	rex.RX (bad) 
   15bf3:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   15bf9:	8e 03                	mov    (%rbx),%es
   15bfb:	42 0e                	rex.X (bad) 
   15bfd:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   15c03:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff86316a4a <_end+0xffffffff862eba3a>
   15c09:	06                   	(bad)  
   15c0a:	44 0e                	rex.R (bad) 
   15c0c:	38 83 07 47 0e 40    	cmp    %al,0x400e4707(%rbx)
   15c12:	02 85 0a 0e 38 41    	add    0x41380e0a(%rbp),%al
   15c18:	0e                   	(bad)  
   15c19:	30 41 0e             	xor    %al,0xe(%rcx)
   15c1c:	28 42 0e             	sub    %al,0xe(%rdx)
   15c1f:	20 42 0e             	and    %al,0xe(%rdx)
   15c22:	18 42 0e             	sbb    %al,0xe(%rdx)
   15c25:	10 42 0e             	adc    %al,0xe(%rdx)
   15c28:	08 49 0b             	or     %cl,0xb(%rcx)
   15c2b:	44 0a 0e             	or     (%rsi),%r9b
   15c2e:	38 46 0e             	cmp    %al,0xe(%rsi)
   15c31:	30 41 0e             	xor    %al,0xe(%rcx)
   15c34:	28 42 0e             	sub    %al,0xe(%rdx)
   15c37:	20 42 0e             	and    %al,0xe(%rdx)
   15c3a:	18 42 0e             	sbb    %al,0xe(%rdx)
   15c3d:	10 42 0e             	adc    %al,0xe(%rdx)
   15c40:	08 45 0b             	or     %al,0xb(%rbp)
   15c43:	6f                   	outsl  %ds:(%rsi),(%dx)
   15c44:	0a 0e                	or     (%rsi),%cl
   15c46:	38 41 0e             	cmp    %al,0xe(%rcx)
   15c49:	30 41 0e             	xor    %al,0xe(%rcx)
   15c4c:	28 42 0e             	sub    %al,0xe(%rdx)
   15c4f:	20 42 0e             	and    %al,0xe(%rdx)
   15c52:	18 42 0e             	sbb    %al,0xe(%rdx)
   15c55:	10 42 0e             	adc    %al,0xe(%rdx)
   15c58:	08 41 0b             	or     %al,0xb(%rcx)
   15c5b:	00 2c 00             	add    %ch,(%rax,%rax,1)
   15c5e:	00 00                	add    %al,(%rax)
   15c60:	68 19 00 00 bc       	push   $0xffffffffbc000019
   15c65:	4f ff                	rex.WRXB (bad) 
   15c67:	ff e7                	jmp    *%rdi
   15c69:	00 00                	add    %al,(%rax)
   15c6b:	00 00                	add    %al,(%rax)
   15c6d:	45 0e                	rex.RB (bad) 
   15c6f:	10 86 02 51 0d 06    	adc    %al,0x60d5102(%rsi)
   15c75:	44 8f 03             	rex.R pop (%rbx)
   15c78:	8e 04 47             	mov    (%rdi,%rax,2),%es
   15c7b:	8d 05 8c 06 4f 83    	lea    -0x7cb0f974(%rip),%eax        # ffffffff8350630d <_end+0xffffffff834db2fd>
   15c81:	07                   	(bad)  
   15c82:	02 b1 0a 0c 07 08    	add    0x8070c0a(%rcx),%dh
   15c88:	41 0b 00             	or     (%r8),%eax
   15c8b:	00 78 00             	add    %bh,0x0(%rax)
   15c8e:	00 00                	add    %al,(%rax)
   15c90:	98                   	cwtl   
   15c91:	19 00                	sbb    %eax,(%rax)
   15c93:	00 7c 50 ff          	add    %bh,-0x1(%rax,%rdx,2)
   15c97:	ff                   	(bad)  
   15c98:	7f 01                	jg     15c9b <__GNU_EH_FRAME_HDR+0x21db>
   15c9a:	00 00                	add    %al,(%rax)
   15c9c:	00 46 0e             	add    %al,0xe(%rsi)
   15c9f:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   15ca5:	8e 03                	mov    (%rbx),%es
   15ca7:	42 0e                	rex.X (bad) 
   15ca9:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   15caf:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff86316af6 <_end+0xffffffff862ebae6>
   15cb5:	06                   	(bad)  
   15cb6:	41 0e                	rex.B (bad) 
   15cb8:	38 83 07 47 0e 50    	cmp    %al,0x500e4707(%rbx)
   15cbe:	02 ad 0a 0e 38 41    	add    0x41380e0a(%rbp),%ch
   15cc4:	0e                   	(bad)  
   15cc5:	30 41 0e             	xor    %al,0xe(%rcx)
   15cc8:	28 42 0e             	sub    %al,0xe(%rdx)
   15ccb:	20 42 0e             	and    %al,0xe(%rdx)
   15cce:	18 42 0e             	sbb    %al,0xe(%rdx)
   15cd1:	10 42 0e             	adc    %al,0xe(%rdx)
   15cd4:	08 41 0b             	or     %al,0xb(%rcx)
   15cd7:	4d 0a 0e             	rex.WRB or (%r14),%r9b
   15cda:	38 46 0e             	cmp    %al,0xe(%rsi)
   15cdd:	30 41 0e             	xor    %al,0xe(%rcx)
   15ce0:	28 42 0e             	sub    %al,0xe(%rdx)
   15ce3:	20 42 0e             	and    %al,0xe(%rdx)
   15ce6:	18 42 0e             	sbb    %al,0xe(%rdx)
   15ce9:	10 42 0e             	adc    %al,0xe(%rdx)
   15cec:	08 47 0b             	or     %al,0xb(%rdi)
   15cef:	02 82 0e 38 43 0e    	add    0xe43380e(%rdx),%al
   15cf5:	30 41 0e             	xor    %al,0xe(%rcx)
   15cf8:	28 42 0e             	sub    %al,0xe(%rdx)
   15cfb:	20 42 0e             	and    %al,0xe(%rdx)
   15cfe:	18 42 0e             	sbb    %al,0xe(%rdx)
   15d01:	10 42 0e             	adc    %al,0xe(%rdx)
   15d04:	08 00                	or     %al,(%rax)
   15d06:	00 00                	add    %al,(%rax)
   15d08:	6c                   	insb   (%dx),%es:(%rdi)
   15d09:	00 00                	add    %al,(%rax)
   15d0b:	00 14 1a             	add    %dl,(%rdx,%rbx,1)
   15d0e:	00 00                	add    %al,(%rax)
   15d10:	80 51 ff ff          	adcb   $0xff,-0x1(%rcx)
   15d14:	49 01 00             	add    %rax,(%r8)
   15d17:	00 00                	add    %al,(%rax)
   15d19:	46 0e                	rex.RX (bad) 
   15d1b:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   15d21:	8e 03                	mov    (%rbx),%es
   15d23:	42 0e                	rex.X (bad) 
   15d25:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
   15d2b:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff86316b75 <_end+0xffffffff862ebb65>
   15d31:	06                   	(bad)  
   15d32:	44 0e                	rex.R (bad) 
   15d34:	38 83 07 47 0e 60    	cmp    %al,0x600e4707(%rbx)
   15d3a:	02 4b 0a             	add    0xa(%rbx),%cl
   15d3d:	0e                   	(bad)  
   15d3e:	38 43 0e             	cmp    %al,0xe(%rbx)
   15d41:	30 41 0e             	xor    %al,0xe(%rcx)
   15d44:	28 42 0e             	sub    %al,0xe(%rdx)
   15d47:	20 42 0e             	and    %al,0xe(%rdx)
   15d4a:	18 42 0e             	sbb    %al,0xe(%rdx)
   15d4d:	10 42 0e             	adc    %al,0xe(%rdx)
   15d50:	08 4b 0b             	or     %cl,0xb(%rbx)
   15d53:	02 45 0e             	add    0xe(%rbp),%al
   15d56:	68 47 0e 70 5c       	push   $0x5c700e47
   15d5b:	0e                   	(bad)  
   15d5c:	68 41 0e 60 44       	push   $0x44600e41
   15d61:	0a 0e                	or     (%rsi),%cl
   15d63:	38 41 0e             	cmp    %al,0xe(%rcx)
   15d66:	30 41 0e             	xor    %al,0xe(%rcx)
   15d69:	28 42 0e             	sub    %al,0xe(%rdx)
   15d6c:	20 42 0e             	and    %al,0xe(%rdx)
   15d6f:	18 42 0e             	sbb    %al,0xe(%rdx)
   15d72:	10 42 0e             	adc    %al,0xe(%rdx)
   15d75:	08 41 0b             	or     %al,0xb(%rcx)
   15d78:	3c 00                	cmp    $0x0,%al
   15d7a:	00 00                	add    %al,(%rax)
   15d7c:	84 1a                	test   %bl,(%rdx)
   15d7e:	00 00                	add    %al,(%rax)
   15d80:	60                   	(bad)  
   15d81:	52                   	push   %rdx
   15d82:	ff                   	(bad)  
   15d83:	ff                   	(bad)  
   15d84:	ed                   	in     (%dx),%eax
   15d85:	00 00                	add    %al,(%rax)
   15d87:	00 00                	add    %al,(%rax)
   15d89:	46 0e                	rex.RX (bad) 
   15d8b:	10 8d 02 42 0e 18    	adc    %cl,0x180e4202(%rbp)
   15d91:	8c 03                	mov    %es,(%rbx)
   15d93:	41 0e                	rex.B (bad) 
   15d95:	20 86 04 41 0e 28    	and    %al,0x280e4104(%rsi)
   15d9b:	83 05 44 0e 30 4f 0a 	addl   $0xa,0x4f300e44(%rip)        # 4f316be6 <_end+0x4f2ebbd6>
   15da2:	0e                   	(bad)  
   15da3:	28 41 0e             	sub    %al,0xe(%rcx)
   15da6:	20 41 0e             	and    %al,0xe(%rcx)
   15da9:	18 42 0e             	sbb    %al,0xe(%rdx)
   15dac:	10 42 0e             	adc    %al,0xe(%rdx)
   15daf:	08 45 0b             	or     %al,0xb(%rbp)
   15db2:	00 00                	add    %al,(%rax)
   15db4:	00 00                	add    %al,(%rax)
   15db6:	00 00                	add    %al,(%rax)
   15db8:	30 00                	xor    %al,(%rax)
   15dba:	00 00                	add    %al,(%rax)
   15dbc:	c4                   	(bad)  
   15dbd:	1a 00                	sbb    (%rax),%al
   15dbf:	00 10                	add    %dl,(%rax)
   15dc1:	53                   	push   %rbx
   15dc2:	ff                   	(bad)  
   15dc3:	ff                   	(bad)  
   15dc4:	3f                   	(bad)  
   15dc5:	01 00                	add    %eax,(%rax)
   15dc7:	00 00                	add    %al,(%rax)
   15dc9:	42 0e                	rex.X (bad) 
   15dcb:	10 8c 02 41 0e 18 86 	adc    %cl,-0x79e7f1bf(%rdx,%rax,1)
   15dd2:	03 41 0e             	add    0xe(%rcx),%eax
   15dd5:	20 83 04 46 0e 30    	and    %al,0x300e4604(%rbx)
   15ddb:	79 0a                	jns    15de7 <__GNU_EH_FRAME_HDR+0x2327>
   15ddd:	0e                   	(bad)  
   15dde:	20 43 0e             	and    %al,0xe(%rbx)
   15de1:	18 41 0e             	sbb    %al,0xe(%rcx)
   15de4:	10 42 0e             	adc    %al,0xe(%rdx)
   15de7:	08 47 0b             	or     %al,0xb(%rdi)
   15dea:	00 00                	add    %al,(%rax)
   15dec:	10 00                	adc    %al,(%rax)
   15dee:	00 00                	add    %al,(%rax)
   15df0:	f8                   	clc    
   15df1:	1a 00                	sbb    (%rax),%al
   15df3:	00 1c 54             	add    %bl,(%rsp,%rdx,2)
   15df6:	ff                   	(bad)  
   15df7:	ff 73 00             	push   0x0(%rbx)
   15dfa:	00 00                	add    %al,(%rax)
   15dfc:	00 00                	add    %al,(%rax)
   15dfe:	00 00                	add    %al,(%rax)
   15e00:	10 00                	adc    %al,(%rax)
   15e02:	00 00                	add    %al,(%rax)
   15e04:	0c 1b                	or     $0x1b,%al
   15e06:	00 00                	add    %al,(%rax)
   15e08:	88 54 ff ff          	mov    %dl,-0x1(%rdi,%rdi,8)
   15e0c:	7b 00                	jnp    15e0e <__GNU_EH_FRAME_HDR+0x234e>
   15e0e:	00 00                	add    %al,(%rax)
   15e10:	00 00                	add    %al,(%rax)
   15e12:	00 00                	add    %al,(%rax)
   15e14:	10 00                	adc    %al,(%rax)
   15e16:	00 00                	add    %al,(%rax)
   15e18:	20 1b                	and    %bl,(%rbx)
   15e1a:	00 00                	add    %al,(%rax)
   15e1c:	f4                   	hlt    
   15e1d:	54                   	push   %rsp
   15e1e:	ff                   	(bad)  
   15e1f:	ff 85 00 00 00 00    	incl   0x0(%rbp)
   15e25:	00 00                	add    %al,(%rax)
   15e27:	00 10                	add    %dl,(%rax)
   15e29:	00 00                	add    %al,(%rax)
   15e2b:	00 34 1b             	add    %dh,(%rbx,%rbx,1)
   15e2e:	00 00                	add    %al,(%rax)
   15e30:	70 55                	jo     15e87 <__GNU_EH_FRAME_HDR+0x23c7>
   15e32:	ff                   	(bad)  
   15e33:	ff 0f                	decl   (%rdi)
   15e35:	00 00                	add    %al,(%rax)
   15e37:	00 00                	add    %al,(%rax)
   15e39:	00 00                	add    %al,(%rax)
   15e3b:	00 10                	add    %dl,(%rax)
   15e3d:	00 00                	add    %al,(%rax)
   15e3f:	00 48 1b             	add    %cl,0x1b(%rax)
   15e42:	00 00                	add    %al,(%rax)
   15e44:	6c                   	insb   (%dx),%es:(%rdi)
   15e45:	55                   	push   %rbp
   15e46:	ff                   	(bad)  
   15e47:	ff 09                	decl   (%rcx)
   15e49:	00 00                	add    %al,(%rax)
   15e4b:	00 00                	add    %al,(%rax)
   15e4d:	00 00                	add    %al,(%rax)
   15e4f:	00 10                	add    %dl,(%rax)
   15e51:	00 00                	add    %al,(%rax)
   15e53:	00 5c 1b 00          	add    %bl,0x0(%rbx,%rbx,1)
   15e57:	00 68 55             	add    %ch,0x55(%rax)
   15e5a:	ff                   	(bad)  
   15e5b:	ff 0b                	decl   (%rbx)
   15e5d:	00 00                	add    %al,(%rax)
   15e5f:	00 00                	add    %al,(%rax)
   15e61:	00 00                	add    %al,(%rax)
   15e63:	00 10                	add    %dl,(%rax)
   15e65:	00 00                	add    %al,(%rax)
   15e67:	00 70 1b             	add    %dh,0x1b(%rax)
   15e6a:	00 00                	add    %al,(%rax)
   15e6c:	64 55                	fs push %rbp
   15e6e:	ff                   	(bad)  
   15e6f:	ff 0f                	decl   (%rdi)
   15e71:	00 00                	add    %al,(%rax)
   15e73:	00 00                	add    %al,(%rax)
   15e75:	00 00                	add    %al,(%rax)
   15e77:	00 10                	add    %dl,(%rax)
   15e79:	00 00                	add    %al,(%rax)
   15e7b:	00 84 1b 00 00 60 55 	add    %al,0x55600000(%rbx,%rbx,1)
   15e82:	ff                   	(bad)  
   15e83:	ff 12                	call   *(%rdx)
   15e85:	00 00                	add    %al,(%rax)
   15e87:	00 00                	add    %al,(%rax)
   15e89:	00 00                	add    %al,(%rax)
   15e8b:	00 1c 00             	add    %bl,(%rax,%rax,1)
   15e8e:	00 00                	add    %al,(%rax)
   15e90:	98                   	cwtl   
   15e91:	1b 00                	sbb    (%rax),%eax
   15e93:	00 6c 55 ff          	add    %ch,-0x1(%rbp,%rdx,2)
   15e97:	ff 32                	push   (%rdx)
   15e99:	00 00                	add    %al,(%rax)
   15e9b:	00 00                	add    %al,(%rax)
   15e9d:	48 0e                	rex.W (bad) 
   15e9f:	10 58 0a             	adc    %bl,0xa(%rax)
   15ea2:	0e                   	(bad)  
   15ea3:	08 48 0b             	or     %cl,0xb(%rax)
   15ea6:	49 0e                	rex.WB (bad) 
   15ea8:	08 00                	or     %al,(%rax)
   15eaa:	00 00                	add    %al,(%rax)
   15eac:	30 00                	xor    %al,(%rax)
   15eae:	00 00                	add    %al,(%rax)
   15eb0:	b8 1b 00 00 8c       	mov    $0x8c00001b,%eax
   15eb5:	55                   	push   %rbp
   15eb6:	ff                   	(bad)  
   15eb7:	ff 30                	push   (%rax)
   15eb9:	02 00                	add    (%rax),%al
   15ebb:	00 00                	add    %al,(%rax)
   15ebd:	4c 0e                	rex.WR (bad) 
   15ebf:	10 83 02 02 53 0a    	adc    %al,0xa530202(%rbx)
   15ec5:	0e                   	(bad)  
   15ec6:	08 41 0b             	or     %al,0xb(%rcx)
   15ec9:	02 a3 0a 0e 08 45    	add    0x45080e0a(%rbx),%ah
   15ecf:	0b 02                	or     (%rdx),%eax
   15ed1:	59                   	pop    %rcx
   15ed2:	0a 0e                	or     (%rsi),%cl
   15ed4:	08 47 0b             	or     %al,0xb(%rdi)
   15ed7:	02 4f 0a             	add    0xa(%rdi),%cl
   15eda:	0e                   	(bad)  
   15edb:	08 49 0b             	or     %cl,0xb(%rcx)
   15ede:	00 00                	add    %al,(%rax)
   15ee0:	10 00                	adc    %al,(%rax)
   15ee2:	00 00                	add    %al,(%rax)
   15ee4:	ec                   	in     (%dx),%al
   15ee5:	1b 00                	sbb    (%rax),%eax
   15ee7:	00 88 57 ff ff 43    	add    %cl,0x43ffff57(%rax)
   15eed:	00 00                	add    %al,(%rax)
   15eef:	00 00                	add    %al,(%rax)
   15ef1:	00 00                	add    %al,(%rax)
   15ef3:	00 48 00             	add    %cl,0x0(%rax)
   15ef6:	00 00                	add    %al,(%rax)
   15ef8:	00 1c 00             	add    %bl,(%rax,%rax,1)
   15efb:	00 c4                	add    %al,%ah
   15efd:	57                   	push   %rdi
   15efe:	ff                   	(bad)  
   15eff:	ff                   	(bad)  
   15f00:	ff 01                	incl   (%rcx)
   15f02:	00 00                	add    %al,(%rax)
   15f04:	00 4d 0e             	add    %cl,0xe(%rbp)
   15f07:	10 8c 02 48 0e 18 86 	adc    %cl,-0x79e7f1b8(%rdx,%rax,1)
   15f0e:	03 4b 0e             	add    0xe(%rbx),%ecx
   15f11:	20 83 04 03 0a 01    	and    %al,0x10a0304(%rbx)
   15f17:	0a 0e                	or     (%rsi),%cl
   15f19:	18 44 0e 10          	sbb    %al,0x10(%rsi,%rcx,1)
   15f1d:	42 0e                	rex.X (bad) 
   15f1f:	08 48 0b             	or     %cl,0xb(%rax)
   15f22:	4e 0a 0e             	rex.WRX or (%rsi),%r9b
   15f25:	18 41 0e             	sbb    %al,0xe(%rcx)
   15f28:	10 42 0e             	adc    %al,0xe(%rdx)
   15f2b:	08 47 0b             	or     %al,0xb(%rdi)
   15f2e:	02 9b 0a 0e 18 41    	add    0x41180e0a(%rbx),%bl
   15f34:	0e                   	(bad)  
   15f35:	10 42 0e             	adc    %al,0xe(%rdx)
   15f38:	08 41 0b             	or     %al,0xb(%rcx)
   15f3b:	00 00                	add    %al,(%rax)
   15f3d:	00 00                	add    %al,(%rax)
   15f3f:	00 54 00 00          	add    %dl,0x0(%rax,%rax,1)
   15f43:	00 4c 1c 00          	add    %cl,0x0(%rsp,%rbx,1)
   15f47:	00 78 59             	add    %bh,0x59(%rax)
   15f4a:	ff                   	(bad)  
   15f4b:	ff f4                	push   %rsp
   15f4d:	00 00                	add    %al,(%rax)
   15f4f:	00 00                	add    %al,(%rax)
   15f51:	46 0e                	rex.RX (bad) 
   15f53:	10 8f 02 45 0e 18    	adc    %cl,0x180e4502(%rdi)
   15f59:	8e 03                	mov    (%rbx),%es
   15f5b:	45 0e                	rex.RB (bad) 
   15f5d:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
   15f63:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff86316dad <_end+0xffffffff862ebd9d>
   15f69:	06                   	(bad)  
   15f6a:	44 0e                	rex.R (bad) 
   15f6c:	38 83 07 47 0e 50    	cmp    %al,0x500e4707(%rbx)
   15f72:	02 58 0e             	add    0xe(%rax),%bl
   15f75:	58                   	pop    %rax
   15f76:	4e 0e                	rex.WRX (bad) 
   15f78:	60                   	(bad)  
   15f79:	5e                   	pop    %rsi
   15f7a:	0e                   	(bad)  
   15f7b:	58                   	pop    %rax
   15f7c:	41 0e                	rex.B (bad) 
   15f7e:	50                   	push   %rax
   15f7f:	70 0a                	jo     15f8b <__GNU_EH_FRAME_HDR+0x24cb>
   15f81:	0e                   	(bad)  
   15f82:	38 41 0e             	cmp    %al,0xe(%rcx)
   15f85:	30 41 0e             	xor    %al,0xe(%rcx)
   15f88:	28 42 0e             	sub    %al,0xe(%rdx)
   15f8b:	20 42 0e             	and    %al,0xe(%rdx)
   15f8e:	18 42 0e             	sbb    %al,0xe(%rdx)
   15f91:	10 42 0e             	adc    %al,0xe(%rdx)
   15f94:	08 45 0b             	or     %al,0xb(%rbp)
   15f97:	00 18                	add    %bl,(%rax)
   15f99:	00 00                	add    %al,(%rax)
   15f9b:	00 a4 1c 00 00 20 5a 	add    %ah,0x5a200000(%rsp,%rbx,1)
   15fa2:	ff                   	(bad)  
   15fa3:	ff 1a                	lcall  *(%rdx)
   15fa5:	00 00                	add    %al,(%rax)
   15fa7:	00 00                	add    %al,(%rax)
   15fa9:	48 0e                	rex.W (bad) 
   15fab:	18 48 0e             	sbb    %cl,0xe(%rax)
   15fae:	20 49 0e             	and    %cl,0xe(%rcx)
   15fb1:	08 00                	or     %al,(%rax)
   15fb3:	00 10                	add    %dl,(%rax)
   15fb5:	00 00                	add    %al,(%rax)
   15fb7:	00 c0                	add    %al,%al
   15fb9:	1c 00                	sbb    $0x0,%al
   15fbb:	00 24 5a             	add    %ah,(%rdx,%rbx,2)
   15fbe:	ff                   	(bad)  
   15fbf:	ff 10                	call   *(%rax)
   15fc1:	00 00                	add    %al,(%rax)
   15fc3:	00 00                	add    %al,(%rax)
   15fc5:	00 00                	add    %al,(%rax)
   15fc7:	00 10                	add    %dl,(%rax)
   15fc9:	00 00                	add    %al,(%rax)
   15fcb:	00 d4                	add    %dl,%ah
   15fcd:	1c 00                	sbb    $0x0,%al
   15fcf:	00 20                	add    %ah,(%rax)
   15fd1:	5a                   	pop    %rdx
   15fd2:	ff                   	(bad)  
   15fd3:	ff 10                	call   *(%rax)
   15fd5:	00 00                	add    %al,(%rax)
   15fd7:	00 00                	add    %al,(%rax)
   15fd9:	00 00                	add    %al,(%rax)
   15fdb:	00 10                	add    %dl,(%rax)
   15fdd:	00 00                	add    %al,(%rax)
   15fdf:	00 e8                	add    %ch,%al
   15fe1:	1c 00                	sbb    $0x0,%al
   15fe3:	00 1c 5a             	add    %bl,(%rdx,%rbx,2)
   15fe6:	ff                   	(bad)  
   15fe7:	ff 10                	call   *(%rax)
   15fe9:	00 00                	add    %al,(%rax)
   15feb:	00 00                	add    %al,(%rax)
   15fed:	00 00                	add    %al,(%rax)
   15fef:	00 10                	add    %dl,(%rax)
   15ff1:	00 00                	add    %al,(%rax)
   15ff3:	00 fc                	add    %bh,%ah
   15ff5:	1c 00                	sbb    $0x0,%al
   15ff7:	00 18                	add    %bl,(%rax)
   15ff9:	5a                   	pop    %rdx
   15ffa:	ff                   	(bad)  
   15ffb:	ff 10                	call   *(%rax)
   15ffd:	00 00                	add    %al,(%rax)
   15fff:	00 00                	add    %al,(%rax)
   16001:	00 00                	add    %al,(%rax)
   16003:	00 10                	add    %dl,(%rax)
   16005:	00 00                	add    %al,(%rax)
   16007:	00 10                	add    %dl,(%rax)
   16009:	1d 00 00 14 5a       	sbb    $0x5a140000,%eax
   1600e:	ff                   	(bad)  
   1600f:	ff 10                	call   *(%rax)
   16011:	00 00                	add    %al,(%rax)
   16013:	00 00                	add    %al,(%rax)
   16015:	00 00                	add    %al,(%rax)
   16017:	00 14 00             	add    %dl,(%rax,%rax,1)
   1601a:	00 00                	add    %al,(%rax)
   1601c:	24 1d                	and    $0x1d,%al
   1601e:	00 00                	add    %al,(%rax)
   16020:	10 5a ff             	adc    %bl,-0x1(%rdx)
   16023:	ff 10                	call   *(%rax)
	...
   1602d:	00 00                	add    %al,(%rax)
   1602f:	00 40 00             	add    %al,0x0(%rax)
   16032:	00 00                	add    %al,(%rax)
   16034:	3c 1d                	cmp    $0x1d,%al
   16036:	00 00                	add    %al,(%rax)
   16038:	08 5a ff             	or     %bl,-0x1(%rdx)
   1603b:	ff b2 01 00 00 00    	push   0x1(%rdx)
   16041:	46 0e                	rex.RX (bad) 
   16043:	10 8e 02 42 0e 18    	adc    %cl,0x180e4202(%rsi)
   16049:	8d 03                	lea    (%rbx),%eax
   1604b:	45 0e                	rex.RB (bad) 
   1604d:	20 8c 04 41 0e 28 86 	and    %cl,-0x79d7f1bf(%rsp,%rax,1)
   16054:	05 41 0e 30 83       	add    $0x83300e41,%eax
   16059:	06                   	(bad)  
   1605a:	46 0e                	rex.RX (bad) 
   1605c:	40 7b 0a             	rex jnp 16069 <__GNU_EH_FRAME_HDR+0x25a9>
   1605f:	0e                   	(bad)  
   16060:	30 43 0e             	xor    %al,0xe(%rbx)
   16063:	28 41 0e             	sub    %al,0xe(%rcx)
   16066:	20 42 0e             	and    %al,0xe(%rdx)
   16069:	18 42 0e             	sbb    %al,0xe(%rdx)
   1606c:	10 42 0e             	adc    %al,0xe(%rdx)
   1606f:	08 46 0b             	or     %al,0xb(%rsi)
   16072:	00 00                	add    %al,(%rax)
   16074:	6c                   	insb   (%dx),%es:(%rdi)
   16075:	00 00                	add    %al,(%rax)
   16077:	00 80 1d 00 00 84    	add    %al,-0x7bffffe3(%rax)
   1607d:	5b                   	pop    %rbx
   1607e:	ff                   	(bad)  
   1607f:	ff f7                	push   %rdi
   16081:	02 00                	add    (%rax),%al
   16083:	00 00                	add    %al,(%rax)
   16085:	46 0e                	rex.RX (bad) 
   16087:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   1608d:	8e 03                	mov    (%rbx),%es
   1608f:	42 0e                	rex.X (bad) 
   16091:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   16097:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff86316ede <_end+0xffffffff862ebece>
   1609d:	06                   	(bad)  
   1609e:	41 0e                	rex.B (bad) 
   160a0:	38 83 07 44 0e a0    	cmp    %al,-0x5ff1bbf9(%rbx)
   160a6:	01 02                	add    %eax,(%rdx)
   160a8:	a3 0a 0e 38 43 0e 30 	movabs %eax,0xe41300e43380e0a
   160af:	41 0e 
   160b1:	28 42 0e             	sub    %al,0xe(%rdx)
   160b4:	20 42 0e             	and    %al,0xe(%rdx)
   160b7:	18 42 0e             	sbb    %al,0xe(%rdx)
   160ba:	10 42 0e             	adc    %al,0xe(%rdx)
   160bd:	08 47 0b             	or     %al,0xb(%rdi)
   160c0:	02 b2 0e a8 01 4d    	add    0x4d01a80e(%rdx),%dh
   160c6:	0e                   	(bad)  
   160c7:	b0 01                	mov    $0x1,%al
   160c9:	55                   	push   %rbp
   160ca:	0e                   	(bad)  
   160cb:	a8 01                	test   $0x1,%al
   160cd:	41 0e                	rex.B (bad) 
   160cf:	a0 01 02 94 0e a8 01 	movabs 0xe4401a80e940201,%al
   160d6:	44 0e 
   160d8:	b0 01                	mov    $0x1,%al
   160da:	60                   	(bad)  
   160db:	0e                   	(bad)  
   160dc:	a8 01                	test   $0x1,%al
   160de:	42 0e                	rex.X (bad) 
   160e0:	a0 01 00 00 18 00 00 	movabs 0xf000000018000001,%al
   160e7:	00 f0 
   160e9:	1d 00 00 14 5e       	sbb    $0x5e140000,%eax
   160ee:	ff                   	(bad)  
   160ef:	ff 26                	jmp    *(%rsi)
   160f1:	00 00                	add    %al,(%rax)
   160f3:	00 00                	add    %al,(%rax)
   160f5:	4d 0e                	rex.WRB (bad) 
   160f7:	18 48 0e             	sbb    %cl,0xe(%rax)
   160fa:	20 49 0e             	and    %cl,0xe(%rcx)
   160fd:	08 00                	or     %al,(%rax)
   160ff:	00 38                	add    %bh,(%rax)
   16101:	00 00                	add    %al,(%rax)
   16103:	00 0c 1e             	add    %cl,(%rsi,%rbx,1)
   16106:	00 00                	add    %al,(%rax)
   16108:	28 5e ff             	sub    %bl,-0x1(%rsi)
   1610b:	ff b7 00 00 00 00    	push   0x0(%rdi)
   16111:	46 0e                	rex.RX (bad) 
   16113:	10 8d 02 45 0e 18    	adc    %cl,0x180e4502(%rbp)
   16119:	8c 03                	mov    %es,(%rbx)
   1611b:	44 0e                	rex.R (bad) 
   1611d:	20 86 04 44 0e 28    	and    %al,0x280e4404(%rsi)
   16123:	83 05 49 0e 50 02 8d 	addl   $0xffffff8d,0x2500e49(%rip)        # 2516f73 <_end+0x24ebf63>
   1612a:	0a 0e                	or     (%rsi),%cl
   1612c:	28 43 0e             	sub    %al,0xe(%rbx)
   1612f:	20 41 0e             	and    %al,0xe(%rcx)
   16132:	18 42 0e             	sbb    %al,0xe(%rdx)
   16135:	10 42 0e             	adc    %al,0xe(%rdx)
   16138:	08 41 0b             	or     %al,0xb(%rcx)
   1613b:	00 10                	add    %dl,(%rax)
   1613d:	00 00                	add    %al,(%rax)
   1613f:	00 48 1e             	add    %cl,0x1e(%rax)
   16142:	00 00                	add    %al,(%rax)
   16144:	ac                   	lods   %ds:(%rsi),%al
   16145:	5e                   	pop    %rsi
   16146:	ff                   	(bad)  
   16147:	ff 10                	call   *(%rax)
   16149:	00 00                	add    %al,(%rax)
   1614b:	00 00                	add    %al,(%rax)
   1614d:	00 00                	add    %al,(%rax)
   1614f:	00 38                	add    %bh,(%rax)
   16151:	00 00                	add    %al,(%rax)
   16153:	00 5c 1e 00          	add    %bl,0x0(%rsi,%rbx,1)
   16157:	00 a8 5e ff ff b7    	add    %ch,-0x480000a2(%rax)
   1615d:	00 00                	add    %al,(%rax)
   1615f:	00 00                	add    %al,(%rax)
   16161:	46 0e                	rex.RX (bad) 
   16163:	10 8d 02 45 0e 18    	adc    %cl,0x180e4502(%rbp)
   16169:	8c 03                	mov    %es,(%rbx)
   1616b:	44 0e                	rex.R (bad) 
   1616d:	20 86 04 44 0e 28    	and    %al,0x280e4404(%rsi)
   16173:	83 05 49 0e 50 02 8d 	addl   $0xffffff8d,0x2500e49(%rip)        # 2516fc3 <_end+0x24ebfb3>
   1617a:	0a 0e                	or     (%rsi),%cl
   1617c:	28 43 0e             	sub    %al,0xe(%rbx)
   1617f:	20 41 0e             	and    %al,0xe(%rcx)
   16182:	18 42 0e             	sbb    %al,0xe(%rdx)
   16185:	10 42 0e             	adc    %al,0xe(%rdx)
   16188:	08 41 0b             	or     %al,0xb(%rcx)
   1618b:	00 10                	add    %dl,(%rax)
   1618d:	00 00                	add    %al,(%rax)
   1618f:	00 98 1e 00 00 2c    	add    %bl,0x2c00001e(%rax)
   16195:	5f                   	pop    %rdi
   16196:	ff                   	(bad)  
   16197:	ff 10                	call   *(%rax)
   16199:	00 00                	add    %al,(%rax)
   1619b:	00 00                	add    %al,(%rax)
   1619d:	00 00                	add    %al,(%rax)
   1619f:	00 38                	add    %bh,(%rax)
   161a1:	00 00                	add    %al,(%rax)
   161a3:	00 ac 1e 00 00 28 5f 	add    %ch,0x5f280000(%rsi,%rbx,1)
   161aa:	ff                   	(bad)  
   161ab:	ff b7 00 00 00 00    	push   0x0(%rdi)
   161b1:	46 0e                	rex.RX (bad) 
   161b3:	10 8d 02 45 0e 18    	adc    %cl,0x180e4502(%rbp)
   161b9:	8c 03                	mov    %es,(%rbx)
   161bb:	44 0e                	rex.R (bad) 
   161bd:	20 86 04 44 0e 28    	and    %al,0x280e4404(%rsi)
   161c3:	83 05 49 0e 50 02 8d 	addl   $0xffffff8d,0x2500e49(%rip)        # 2517013 <_end+0x24ec003>
   161ca:	0a 0e                	or     (%rsi),%cl
   161cc:	28 43 0e             	sub    %al,0xe(%rbx)
   161cf:	20 41 0e             	and    %al,0xe(%rcx)
   161d2:	18 42 0e             	sbb    %al,0xe(%rdx)
   161d5:	10 42 0e             	adc    %al,0xe(%rdx)
   161d8:	08 41 0b             	or     %al,0xb(%rcx)
   161db:	00 10                	add    %dl,(%rax)
   161dd:	00 00                	add    %al,(%rax)
   161df:	00 e8                	add    %ch,%al
   161e1:	1e                   	(bad)  
   161e2:	00 00                	add    %al,(%rax)
   161e4:	ac                   	lods   %ds:(%rsi),%al
   161e5:	5f                   	pop    %rdi
   161e6:	ff                   	(bad)  
   161e7:	ff 10                	call   *(%rax)
   161e9:	00 00                	add    %al,(%rax)
   161eb:	00 00                	add    %al,(%rax)
   161ed:	00 00                	add    %al,(%rax)
   161ef:	00 48 00             	add    %cl,0x0(%rax)
   161f2:	00 00                	add    %al,(%rax)
   161f4:	fc                   	cld    
   161f5:	1e                   	(bad)  
   161f6:	00 00                	add    %al,(%rax)
   161f8:	a8 5f                	test   $0x5f,%al
   161fa:	ff                   	(bad)  
   161fb:	ff 0d 01 00 00 00    	decl   0x1(%rip)        # 16202 <__GNU_EH_FRAME_HDR+0x2742>
   16201:	46 0e                	rex.RX (bad) 
   16203:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   16209:	8e 03                	mov    (%rbx),%es
   1620b:	42 0e                	rex.X (bad) 
   1620d:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   16213:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff8631705a <_end+0xffffffff862ec04a>
   16219:	06                   	(bad)  
   1621a:	41 0e                	rex.B (bad) 
   1621c:	38 83 07 44 0e 60    	cmp    %al,0x600e4407(%rbx)
   16222:	02 e8                	add    %al,%ch
   16224:	0a 0e                	or     (%rsi),%cl
   16226:	38 44 0e 30          	cmp    %al,0x30(%rsi,%rcx,1)
   1622a:	41 0e                	rex.B (bad) 
   1622c:	28 42 0e             	sub    %al,0xe(%rdx)
   1622f:	20 42 0e             	and    %al,0xe(%rdx)
   16232:	18 42 0e             	sbb    %al,0xe(%rdx)
   16235:	10 42 0e             	adc    %al,0xe(%rdx)
   16238:	08 41 0b             	or     %al,0xb(%rcx)
   1623b:	00 10                	add    %dl,(%rax)
   1623d:	00 00                	add    %al,(%rax)
   1623f:	00 48 1f             	add    %cl,0x1f(%rax)
   16242:	00 00                	add    %al,(%rax)
   16244:	6c                   	insb   (%dx),%es:(%rdi)
   16245:	60                   	(bad)  
   16246:	ff                   	(bad)  
   16247:	ff 10                	call   *(%rax)
   16249:	00 00                	add    %al,(%rax)
   1624b:	00 00                	add    %al,(%rax)
   1624d:	00 00                	add    %al,(%rax)
   1624f:	00 30                	add    %dh,(%rax)
   16251:	00 00                	add    %al,(%rax)
   16253:	00 5c 1f 00          	add    %bl,0x0(%rdi,%rbx,1)
   16257:	00 68 60             	add    %ch,0x60(%rax)
   1625a:	ff                   	(bad)  
   1625b:	ff                   	(bad)  
   1625c:	dc 00                	faddl  (%rax)
   1625e:	00 00                	add    %al,(%rax)
   16260:	00 46 0e             	add    %al,0xe(%rsi)
   16263:	10 8c 02 41 0e 18 86 	adc    %cl,-0x79e7f1bf(%rdx,%rax,1)
   1626a:	03 46 0e             	add    0xe(%rsi),%eax
   1626d:	20 83 04 44 0e 40    	and    %al,0x400e4404(%rbx)
   16273:	02 b3 0a 0e 20 43    	add    0x43200e0a(%rbx),%dh
   16279:	0e                   	(bad)  
   1627a:	18 41 0e             	sbb    %al,0xe(%rcx)
   1627d:	10 42 0e             	adc    %al,0xe(%rdx)
   16280:	08 46 0b             	or     %al,0xb(%rsi)
   16283:	00 28                	add    %ch,(%rax)
   16285:	00 00                	add    %al,(%rax)
   16287:	00 90 1f 00 00 14    	add    %dl,0x1400001f(%rax)
   1628d:	61                   	(bad)  
   1628e:	ff                   	(bad)  
   1628f:	ff                   	(bad)  
   16290:	dc 00                	faddl  (%rax)
   16292:	00 00                	add    %al,(%rax)
   16294:	00 45 0e             	add    %al,0xe(%rbp)
   16297:	10 86 02 41 0e 18    	adc    %al,0x180e4102(%rsi)
   1629d:	83 03 49             	addl   $0x49,(%rbx)
   162a0:	0e                   	(bad)  
   162a1:	40 02 b5 0a 0e 18 43 	add    0x43180e0a(%rbp),%sil
   162a8:	0e                   	(bad)  
   162a9:	10 41 0e             	adc    %al,0xe(%rcx)
   162ac:	08 48 0b             	or     %cl,0xb(%rax)
   162af:	00 40 00             	add    %al,0x0(%rax)
   162b2:	00 00                	add    %al,(%rax)
   162b4:	bc 1f 00 00 c8       	mov    $0xc800001f,%esp
   162b9:	61                   	(bad)  
   162ba:	ff                   	(bad)  
   162bb:	ff                   	(bad)  
   162bc:	ef                   	out    %eax,(%dx)
   162bd:	00 00                	add    %al,(%rax)
   162bf:	00 00                	add    %al,(%rax)
   162c1:	46 0e                	rex.RX (bad) 
   162c3:	10 8e 02 42 0e 18    	adc    %cl,0x180e4202(%rsi)
   162c9:	8d 03                	lea    (%rbx),%eax
   162cb:	42 0e                	rex.X (bad) 
   162cd:	20 8c 04 47 0e 28 86 	and    %cl,-0x79d7f1b9(%rsp,%rax,1)
   162d4:	05 41 0e 30 83       	add    $0x83300e41,%eax
   162d9:	06                   	(bad)  
   162da:	44 0e                	rex.R (bad) 
   162dc:	50                   	push   %rax
   162dd:	02 c8                	add    %al,%cl
   162df:	0a 0e                	or     (%rsi),%cl
   162e1:	30 44 0e 28          	xor    %al,0x28(%rsi,%rcx,1)
   162e5:	41 0e                	rex.B (bad) 
   162e7:	20 42 0e             	and    %al,0xe(%rdx)
   162ea:	18 42 0e             	sbb    %al,0xe(%rdx)
   162ed:	10 42 0e             	adc    %al,0xe(%rdx)
   162f0:	08 41 0b             	or     %al,0xb(%rcx)
   162f3:	00 10                	add    %dl,(%rax)
   162f5:	00 00                	add    %al,(%rax)
   162f7:	00 00                	add    %al,(%rax)
   162f9:	20 00                	and    %al,(%rax)
   162fb:	00 74 62 ff          	add    %dh,-0x1(%rdx,%riz,2)
   162ff:	ff 10                	call   *(%rax)
   16301:	00 00                	add    %al,(%rax)
   16303:	00 00                	add    %al,(%rax)
   16305:	00 00                	add    %al,(%rax)
   16307:	00 34 00             	add    %dh,(%rax,%rax,1)
   1630a:	00 00                	add    %al,(%rax)
   1630c:	14 20                	adc    $0x20,%al
   1630e:	00 00                	add    %al,(%rax)
   16310:	70 62                	jo     16374 <__GNU_EH_FRAME_HDR+0x28b4>
   16312:	ff                   	(bad)  
   16313:	ff 5c 00 00          	lcall  *0x0(%rax,%rax,1)
   16317:	00 00                	add    %al,(%rax)
   16319:	45 0e                	rex.RB (bad) 
   1631b:	10 86 02 44 0e 18    	adc    %al,0x180e4402(%rsi)
   16321:	83 03 47             	addl   $0x47,(%rbx)
   16324:	0e                   	(bad)  
   16325:	20 73 0a             	and    %dh,0xa(%rbx)
   16328:	0e                   	(bad)  
   16329:	18 43 0e             	sbb    %al,0xe(%rbx)
   1632c:	10 41 0e             	adc    %al,0xe(%rcx)
   1632f:	08 49 0b             	or     %cl,0xb(%rcx)
   16332:	44 0e                	rex.R (bad) 
   16334:	18 46 0e             	sbb    %al,0xe(%rsi)
   16337:	10 41 0e             	adc    %al,0xe(%rcx)
   1633a:	08 00                	or     %al,(%rax)
   1633c:	00 00                	add    %al,(%rax)
   1633e:	00 00                	add    %al,(%rax)
   16340:	10 00                	adc    %al,(%rax)
   16342:	00 00                	add    %al,(%rax)
   16344:	4c 20 00             	rex.WR and %r8b,(%rax)
   16347:	00 b8 62 ff ff 64    	add    %bh,0x64ffff62(%rax)
   1634d:	00 00                	add    %al,(%rax)
   1634f:	00 00                	add    %al,(%rax)
   16351:	00 00                	add    %al,(%rax)
   16353:	00 28                	add    %ch,(%rax)
   16355:	00 00                	add    %al,(%rax)
   16357:	00 60 20             	add    %ah,0x20(%rax)
   1635a:	00 00                	add    %al,(%rax)
   1635c:	14 63                	adc    $0x63,%al
   1635e:	ff                   	(bad)  
   1635f:	ff 1c 01             	lcall  *(%rcx,%rax,1)
   16362:	00 00                	add    %al,(%rax)
   16364:	00 45 0e             	add    %al,0xe(%rbp)
   16367:	10 86 02 41 0e 18    	adc    %al,0x180e4102(%rsi)
   1636d:	83 03 44             	addl   $0x44,(%rbx)
   16370:	0e                   	(bad)  
   16371:	20 02                	and    %al,(%rdx)
   16373:	99                   	cltd   
   16374:	0a 0e                	or     (%rsi),%cl
   16376:	18 44 0e 10          	sbb    %al,0x10(%rsi,%rcx,1)
   1637a:	41 0e                	rex.B (bad) 
   1637c:	08 48 0b             	or     %cl,0xb(%rax)
   1637f:	00 18                	add    %bl,(%rax)
   16381:	00 00                	add    %al,(%rax)
   16383:	00 8c 20 00 00 08 64 	add    %cl,0x64080000(%rax,%riz,1)
   1638a:	ff                   	(bad)  
   1638b:	ff 8e 00 00 00 00    	decl   0x0(%rsi)
   16391:	48 0e                	rex.W (bad) 
   16393:	20 02                	and    %al,(%rdx)
   16395:	80 0a 0e             	orb    $0xe,(%rdx)
   16398:	08 41 0b             	or     %al,0xb(%rcx)
   1639b:	00 10                	add    %dl,(%rax)
   1639d:	00 00                	add    %al,(%rax)
   1639f:	00 a8 20 00 00 7c    	add    %ch,0x7c000020(%rax)
   163a5:	64 ff                	fs (bad) 
   163a7:	ff 0d 00 00 00 00    	decl   0x0(%rip)        # 163ad <__GNU_EH_FRAME_HDR+0x28ed>
   163ad:	00 00                	add    %al,(%rax)
   163af:	00 38                	add    %bh,(%rax)
   163b1:	00 00                	add    %al,(%rax)
   163b3:	00 bc 20 00 00 78 64 	add    %bh,0x64780000(%rax,%riz,1)
   163ba:	ff                   	(bad)  
   163bb:	ff 2b                	ljmp   *(%rbx)
   163bd:	08 00                	or     %al,(%rax)
   163bf:	00 00                	add    %al,(%rax)
   163c1:	41 0e                	rex.B (bad) 
   163c3:	10 86 02 47 0e 18    	adc    %al,0x180e4702(%rsi)
   163c9:	83 03 44             	addl   $0x44,(%rbx)
   163cc:	0e                   	(bad)  
   163cd:	20 03                	and    %al,(%rbx)
   163cf:	81 01 0a 0e 18 41    	addl   $0x41180e0a,(%rcx)
   163d5:	0e                   	(bad)  
   163d6:	10 41 0e             	adc    %al,0xe(%rcx)
   163d9:	08 41 0b             	or     %al,0xb(%rcx)
   163dc:	03 a8 01 0a 0e 18    	add    0x180e0a01(%rax),%ebp
   163e2:	41 0e                	rex.B (bad) 
   163e4:	10 41 0e             	adc    %al,0xe(%rcx)
   163e7:	08 46 0b             	or     %al,0xb(%rsi)
   163ea:	00 00                	add    %al,(%rax)
   163ec:	18 00                	sbb    %al,(%rax)
   163ee:	00 00                	add    %al,(%rax)
   163f0:	f8                   	clc    
   163f1:	20 00                	and    %al,(%rax)
   163f3:	00 6c 6c ff          	add    %ch,-0x1(%rsp,%rbp,2)
   163f7:	ff e1                	jmp    *%rcx
   163f9:	00 00                	add    %al,(%rax)
   163fb:	00 00                	add    %al,(%rax)
   163fd:	44 0e                	rex.R (bad) 
   163ff:	20 02                	and    %al,(%rdx)
   16401:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
   16402:	0a 0e                	or     (%rsi),%cl
   16404:	08 46 0b             	or     %al,0xb(%rsi)
   16407:	00 48 00             	add    %cl,0x0(%rax)
   1640a:	00 00                	add    %al,(%rax)
   1640c:	14 21                	adc    $0x21,%al
   1640e:	00 00                	add    %al,(%rax)
   16410:	40 6d                	rex insl (%dx),%es:(%rdi)
   16412:	ff                   	(bad)  
   16413:	ff 4e 1b             	decl   0x1b(%rsi)
   16416:	00 00                	add    %al,(%rax)
   16418:	00 46 0e             	add    %al,0xe(%rsi)
   1641b:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   16421:	8e 03                	mov    (%rbx),%es
   16423:	42 0e                	rex.X (bad) 
   16425:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   1642b:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff86317272 <_end+0xffffffff862ec262>
   16431:	06                   	(bad)  
   16432:	44 0e                	rex.R (bad) 
   16434:	38 83 07 44 0e 50    	cmp    %al,0x500e4407(%rbx)
   1643a:	02 fa                	add    %dl,%bh
   1643c:	0a 0e                	or     (%rsi),%cl
   1643e:	38 44 0e 30          	cmp    %al,0x30(%rsi,%rcx,1)
   16442:	41 0e                	rex.B (bad) 
   16444:	28 42 0e             	sub    %al,0xe(%rdx)
   16447:	20 42 0e             	and    %al,0xe(%rdx)
   1644a:	18 42 0e             	sbb    %al,0xe(%rdx)
   1644d:	10 42 0e             	adc    %al,0xe(%rdx)
   16450:	08 44 0b 00          	or     %al,0x0(%rbx,%rcx,1)
   16454:	60                   	(bad)  
   16455:	00 00                	add    %al,(%rax)
   16457:	00 60 21             	add    %ah,0x21(%rax)
   1645a:	00 00                	add    %al,(%rax)
   1645c:	44 88 ff             	mov    %r15b,%dil
   1645f:	ff 93 02 00 00 00    	call   *0x2(%rbx)
   16465:	42 0e                	rex.X (bad) 
   16467:	10 8d 02 42 0e 18    	adc    %cl,0x180e4202(%rbp)
   1646d:	8c 03                	mov    %es,(%rbx)
   1646f:	41 0e                	rex.B (bad) 
   16471:	20 86 04 41 0e 28    	and    %al,0x280e4104(%rsi)
   16477:	83 05 49 0e 40 02 4a 	addl   $0x4a,0x2400e49(%rip)        # 24172c7 <_end+0x23ec2b7>
   1647e:	0a 0e                	or     (%rsi),%cl
   16480:	28 43 0e             	sub    %al,0xe(%rbx)
   16483:	20 41 0e             	and    %al,0xe(%rcx)
   16486:	18 42 0e             	sbb    %al,0xe(%rdx)
   16489:	10 42 0e             	adc    %al,0xe(%rdx)
   1648c:	08 47 0b             	or     %al,0xb(%rdi)
   1648f:	02 82 0a 0e 28 41    	add    0x41280e0a(%rdx),%al
   16495:	0e                   	(bad)  
   16496:	20 41 0e             	and    %al,0xe(%rcx)
   16499:	18 42 0e             	sbb    %al,0xe(%rdx)
   1649c:	10 42 0e             	adc    %al,0xe(%rdx)
   1649f:	08 48 0b             	or     %cl,0xb(%rax)
   164a2:	03 6e 01             	add    0x1(%rsi),%ebp
   164a5:	0a 0e                	or     (%rsi),%cl
   164a7:	28 41 0e             	sub    %al,0xe(%rcx)
   164aa:	20 41 0e             	and    %al,0xe(%rcx)
   164ad:	18 42 0e             	sbb    %al,0xe(%rdx)
   164b0:	10 42 0e             	adc    %al,0xe(%rdx)
   164b3:	08 44 0b 00          	or     %al,0x0(%rbx,%rcx,1)
   164b7:	00 60 00             	add    %ah,0x0(%rax)
   164ba:	00 00                	add    %al,(%rax)
   164bc:	c4 21 00 00          	(bad)
   164c0:	80 8a ff ff 00 0b 00 	orb    $0x0,0xb00ffff(%rdx)
   164c7:	00 00                	add    %al,(%rax)
   164c9:	4f 0e                	rex.WRXB (bad) 
   164cb:	10 8d 02 49 0e 18    	adc    %cl,0x180e4902(%rbp)
   164d1:	8c 03                	mov    %es,(%rbx)
   164d3:	41 0e                	rex.B (bad) 
   164d5:	20 86 04 41 0e 28    	and    %al,0x280e4104(%rsi)
   164db:	83 05 44 0e 30 02 f3 	addl   $0xfffffff3,0x2300e44(%rip)        # 2317326 <_end+0x22ec316>
   164e2:	0a 0e                	or     (%rsi),%cl
   164e4:	28 41 0e             	sub    %al,0xe(%rcx)
   164e7:	20 41 0e             	and    %al,0xe(%rcx)
   164ea:	18 42 0e             	sbb    %al,0xe(%rdx)
   164ed:	10 42 0e             	adc    %al,0xe(%rdx)
   164f0:	08 49 0b             	or     %cl,0xb(%rcx)
   164f3:	02 c8                	add    %al,%cl
   164f5:	0e                   	(bad)  
   164f6:	08 c3                	or     %al,%bl
   164f8:	c6                   	(bad)  
   164f9:	cc                   	int3   
   164fa:	cd 48                	int    $0x48
   164fc:	0e                   	(bad)  
   164fd:	30 83 05 86 04 8c    	xor    %al,-0x73fb79fb(%rbx)
   16503:	03 8d 02 02 9e 0a    	add    0xa9e0202(%rbp),%ecx
   16509:	0e                   	(bad)  
   1650a:	28 41 0e             	sub    %al,0xe(%rcx)
   1650d:	20 41 0e             	and    %al,0xe(%rcx)
   16510:	18 42 0e             	sbb    %al,0xe(%rdx)
   16513:	10 42 0e             	adc    %al,0xe(%rdx)
   16516:	08 44 0b 00          	or     %al,0x0(%rbx,%rcx,1)
   1651a:	00 00                	add    %al,(%rax)
   1651c:	28 00                	sub    %al,(%rax)
   1651e:	00 00                	add    %al,(%rax)
   16520:	28 22                	sub    %ah,(%rdx)
   16522:	00 00                	add    %al,(%rax)
   16524:	1c 95                	sbb    $0x95,%al
   16526:	ff                   	(bad)  
   16527:	ff 68 00             	ljmp   *0x0(%rax)
   1652a:	00 00                	add    %al,(%rax)
   1652c:	00 45 0e             	add    %al,0xe(%rbp)
   1652f:	10 86 02 41 0e 18    	adc    %al,0x180e4102(%rsi)
   16535:	83 03 47             	addl   $0x47,(%rbx)
   16538:	0e                   	(bad)  
   16539:	20 02                	and    %al,(%rdx)
   1653b:	41 0a 0e             	or     (%r14),%cl
   1653e:	18 44 0e 10          	sbb    %al,0x10(%rsi,%rcx,1)
   16542:	41 0e                	rex.B (bad) 
   16544:	08 45 0b             	or     %al,0xb(%rbp)
   16547:	00 64 00 00          	add    %ah,0x0(%rax,%rax,1)
   1654b:	00 54 22 00          	add    %dl,0x0(%rdx,%riz,1)
   1654f:	00 60 95             	add    %ah,-0x6b(%rax)
   16552:	ff                   	(bad)  
   16553:	ff 0d 07 00 00 00    	decl   0x7(%rip)        # 16560 <__GNU_EH_FRAME_HDR+0x2aa0>
   16559:	46 0e                	rex.RX (bad) 
   1655b:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   16561:	8e 03                	mov    (%rbx),%es
   16563:	42 0e                	rex.X (bad) 
   16565:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   1656b:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff863173b2 <_end+0xffffffff862ec3a2>
   16571:	06                   	(bad)  
   16572:	41 0e                	rex.B (bad) 
   16574:	38 83 07 47 0e 40    	cmp    %al,0x400e4707(%rbx)
   1657a:	02 ea                	add    %dl,%ch
   1657c:	0a 0e                	or     (%rsi),%cl
   1657e:	38 44 0e 30          	cmp    %al,0x30(%rsi,%rcx,1)
   16582:	41 0e                	rex.B (bad) 
   16584:	28 42 0e             	sub    %al,0xe(%rdx)
   16587:	20 42 0e             	and    %al,0xe(%rdx)
   1658a:	18 42 0e             	sbb    %al,0xe(%rdx)
   1658d:	10 42 0e             	adc    %al,0xe(%rdx)
   16590:	08 44 0b 03          	or     %al,0x3(%rbx,%rcx,1)
   16594:	04 01                	add    $0x1,%al
   16596:	0a 0e                	or     (%rsi),%cl
   16598:	38 44 0e 30          	cmp    %al,0x30(%rsi,%rcx,1)
   1659c:	41 0e                	rex.B (bad) 
   1659e:	28 42 0e             	sub    %al,0xe(%rdx)
   165a1:	20 42 0e             	and    %al,0xe(%rdx)
   165a4:	18 42 0e             	sbb    %al,0xe(%rdx)
   165a7:	10 42 0e             	adc    %al,0xe(%rdx)
   165aa:	08 4f 0b             	or     %cl,0xb(%rdi)
   165ad:	00 00                	add    %al,(%rax)
   165af:	00 10                	add    %dl,(%rax)
   165b1:	00 00                	add    %al,(%rax)
   165b3:	00 bc 22 00 00 08 9c 	add    %bh,-0x63f80000(%rdx,%riz,1)
   165ba:	ff                   	(bad)  
   165bb:	ff 18                	lcall  *(%rax)
   165bd:	00 00                	add    %al,(%rax)
   165bf:	00 00                	add    %al,(%rax)
   165c1:	00 00                	add    %al,(%rax)
   165c3:	00 20                	add    %ah,(%rax)
   165c5:	00 00                	add    %al,(%rax)
   165c7:	00 d0                	add    %dl,%al
   165c9:	22 00                	and    (%rax),%al
   165cb:	00 14 9c             	add    %dl,(%rsp,%rbx,4)
   165ce:	ff                   	(bad)  
   165cf:	ff 8a 00 00 00 00    	decl   0x0(%rdx)
   165d5:	45 0e                	rex.RB (bad) 
   165d7:	10 83 02 02 61 0a    	adc    %al,0xa610202(%rbx)
   165dd:	0e                   	(bad)  
   165de:	08 4a 0b             	or     %cl,0xb(%rdx)
   165e1:	46 0a 0e             	rex.RX or (%rsi),%r9b
   165e4:	08 4a 0b             	or     %cl,0xb(%rdx)
   165e7:	00 3c 00             	add    %bh,(%rax,%rax,1)
   165ea:	00 00                	add    %al,(%rax)
   165ec:	f4                   	hlt    
   165ed:	22 00                	and    (%rax),%al
   165ef:	00 80 9c ff ff b2    	add    %al,-0x4d000064(%rax)
   165f5:	01 00                	add    %eax,(%rax)
   165f7:	00 00                	add    %al,(%rax)
   165f9:	46 0e                	rex.RX (bad) 
   165fb:	10 8d 02 42 0e 18    	adc    %cl,0x180e4202(%rbp)
   16601:	8c 03                	mov    %es,(%rbx)
   16603:	41 0e                	rex.B (bad) 
   16605:	20 86 04 41 0e 28    	and    %al,0x280e4104(%rsi)
   1660b:	83 05 47 0e 30 03 05 	addl   $0x5,0x3300e47(%rip)        # 3317459 <_end+0x32ec449>
   16612:	01 0a                	add    %ecx,(%rdx)
   16614:	0e                   	(bad)  
   16615:	28 41 0e             	sub    %al,0xe(%rcx)
   16618:	20 41 0e             	and    %al,0xe(%rcx)
   1661b:	18 42 0e             	sbb    %al,0xe(%rdx)
   1661e:	10 42 0e             	adc    %al,0xe(%rdx)
   16621:	08 44 0b 00          	or     %al,0x0(%rbx,%rcx,1)
   16625:	00 00                	add    %al,(%rax)
   16627:	00 10                	add    %dl,(%rax)
   16629:	00 00                	add    %al,(%rax)
   1662b:	00 34 23             	add    %dh,(%rbx,%riz,1)
   1662e:	00 00                	add    %al,(%rax)
   16630:	00 9e ff ff ce 00    	add    %bl,0xceffff(%rsi)
   16636:	00 00                	add    %al,(%rax)
   16638:	00 00                	add    %al,(%rax)
   1663a:	00 00                	add    %al,(%rax)
   1663c:	10 00                	adc    %al,(%rax)
   1663e:	00 00                	add    %al,(%rax)
   16640:	48 23 00             	and    (%rax),%rax
   16643:	00 bc 9e ff ff 1a 00 	add    %bh,0x1affff(%rsi,%rbx,4)
   1664a:	00 00                	add    %al,(%rax)
   1664c:	00 00                	add    %al,(%rax)
   1664e:	00 00                	add    %al,(%rax)
   16650:	38 00                	cmp    %al,(%rax)
   16652:	00 00                	add    %al,(%rax)
   16654:	5c                   	pop    %rsp
   16655:	23 00                	and    (%rax),%eax
   16657:	00 c8                	add    %cl,%al
   16659:	9e                   	sahf   
   1665a:	ff                   	(bad)  
   1665b:	ff b3 00 00 00 00    	push   0x0(%rbx)
   16661:	46 0e                	rex.RX (bad) 
   16663:	10 8e 02 42 0e 18    	adc    %cl,0x180e4202(%rsi)
   16669:	8d 03                	lea    (%rbx),%eax
   1666b:	45 0e                	rex.RB (bad) 
   1666d:	20 8c 04 41 0e 28 86 	and    %cl,-0x79d7f1bf(%rsp,%rax,1)
   16674:	05 41 0e 30 83       	add    $0x83300e41,%eax
   16679:	06                   	(bad)  
   1667a:	02 99 0e 28 44 0e    	add    0xe44280e(%rcx),%bl
   16680:	20 42 0e             	and    %al,0xe(%rdx)
   16683:	18 42 0e             	sbb    %al,0xe(%rdx)
   16686:	10 42 0e             	adc    %al,0xe(%rdx)
   16689:	08 00                	or     %al,(%rax)
   1668b:	00 48 00             	add    %cl,0x0(%rax)
   1668e:	00 00                	add    %al,(%rax)
   16690:	98                   	cwtl   
   16691:	23 00                	and    (%rax),%eax
   16693:	00 4c 9f ff          	add    %cl,-0x1(%rdi,%rbx,4)
   16697:	ff                   	(bad)  
   16698:	ed                   	in     (%dx),%eax
   16699:	00 00                	add    %al,(%rax)
   1669b:	00 00                	add    %al,(%rax)
   1669d:	42 0e                	rex.X (bad) 
   1669f:	10 8f 02 46 0e 18    	adc    %cl,0x180e4602(%rdi)
   166a5:	8e 03                	mov    (%rbx),%es
   166a7:	42 0e                	rex.X (bad) 
   166a9:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   166af:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff863174f6 <_end+0xffffffff862ec4e6>
   166b5:	06                   	(bad)  
   166b6:	41 0e                	rex.B (bad) 
   166b8:	38 83 07 44 0e 70    	cmp    %al,0x700e4407(%rbx)
   166be:	02 5b 0a             	add    0xa(%rbx),%bl
   166c1:	0e                   	(bad)  
   166c2:	38 41 0e             	cmp    %al,0xe(%rcx)
   166c5:	30 41 0e             	xor    %al,0xe(%rcx)
   166c8:	28 42 0e             	sub    %al,0xe(%rdx)
   166cb:	20 42 0e             	and    %al,0xe(%rdx)
   166ce:	18 42 0e             	sbb    %al,0xe(%rdx)
   166d1:	10 42 0e             	adc    %al,0xe(%rdx)
   166d4:	08 49 0b             	or     %cl,0xb(%rcx)
   166d7:	00 10                	add    %dl,(%rax)
   166d9:	00 00                	add    %al,(%rax)
   166db:	00 e4                	add    %ah,%ah
   166dd:	23 00                	and    (%rax),%eax
   166df:	00 f0                	add    %dh,%al
   166e1:	9f                   	lahf   
   166e2:	ff                   	(bad)  
   166e3:	ff 1a                	lcall  *(%rdx)
   166e5:	00 00                	add    %al,(%rax)
   166e7:	00 00                	add    %al,(%rax)
   166e9:	00 00                	add    %al,(%rax)
   166eb:	00 60 00             	add    %ah,0x0(%rax)
   166ee:	00 00                	add    %al,(%rax)
   166f0:	f8                   	clc    
   166f1:	23 00                	and    (%rax),%eax
   166f3:	00 fc                	add    %bh,%ah
   166f5:	9f                   	lahf   
   166f6:	ff                   	(bad)  
   166f7:	ff 37                	push   (%rdi)
   166f9:	01 00                	add    %eax,(%rax)
   166fb:	00 00                	add    %al,(%rax)
   166fd:	46 0e                	rex.RX (bad) 
   166ff:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   16705:	8e 03                	mov    (%rbx),%es
   16707:	42 0e                	rex.X (bad) 
   16709:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
   1670f:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff86317556 <_end+0xffffffff862ec546>
   16715:	06                   	(bad)  
   16716:	41 0e                	rex.B (bad) 
   16718:	38 83 07 44 0e 50    	cmp    %al,0x500e4407(%rbx)
   1671e:	02 e1                	add    %cl,%ah
   16720:	0a 0e                	or     (%rsi),%cl
   16722:	38 44 0e 30          	cmp    %al,0x30(%rsi,%rcx,1)
   16726:	41 0e                	rex.B (bad) 
   16728:	28 42 0e             	sub    %al,0xe(%rdx)
   1672b:	20 42 0e             	and    %al,0xe(%rdx)
   1672e:	18 42 0e             	sbb    %al,0xe(%rdx)
   16731:	10 42 0e             	adc    %al,0xe(%rdx)
   16734:	08 45 0b             	or     %al,0xb(%rbp)
   16737:	51                   	push   %rcx
   16738:	0a 0e                	or     (%rsi),%cl
   1673a:	38 41 0e             	cmp    %al,0xe(%rcx)
   1673d:	30 41 0e             	xor    %al,0xe(%rcx)
   16740:	28 42 0e             	sub    %al,0xe(%rdx)
   16743:	20 42 0e             	and    %al,0xe(%rdx)
   16746:	18 42 0e             	sbb    %al,0xe(%rdx)
   16749:	10 42 0e             	adc    %al,0xe(%rdx)
   1674c:	08 4d 0b             	or     %cl,0xb(%rbp)
   1674f:	00 40 00             	add    %al,0x0(%rax)
   16752:	00 00                	add    %al,(%rax)
   16754:	5c                   	pop    %rsp
   16755:	24 00                	and    $0x0,%al
   16757:	00 d8                	add    %bl,%al
   16759:	a0 ff ff f1 00 00 00 	movabs 0x4600000000f1ffff,%al
   16760:	00 46 
   16762:	0e                   	(bad)  
   16763:	10 8e 02 42 0e 18    	adc    %cl,0x180e4202(%rsi)
   16769:	8d 03                	lea    (%rbx),%eax
   1676b:	42 0e                	rex.X (bad) 
   1676d:	20 8c 04 44 0e 28 86 	and    %cl,-0x79d7f1bc(%rsp,%rax,1)
   16774:	05 41 0e 30 83       	add    $0x83300e41,%eax
   16779:	06                   	(bad)  
   1677a:	44 0e                	rex.R (bad) 
   1677c:	50                   	push   %rax
   1677d:	02 cd                	add    %ch,%cl
   1677f:	0a 0e                	or     (%rsi),%cl
   16781:	30 44 0e 28          	xor    %al,0x28(%rsi,%rcx,1)
   16785:	41 0e                	rex.B (bad) 
   16787:	20 42 0e             	and    %al,0xe(%rdx)
   1678a:	18 42 0e             	sbb    %al,0xe(%rdx)
   1678d:	10 42 0e             	adc    %al,0xe(%rdx)
   16790:	08 41 0b             	or     %al,0xb(%rcx)
   16793:	00 10                	add    %dl,(%rax)
   16795:	00 00                	add    %al,(%rax)
   16797:	00 a0 24 00 00 94    	add    %ah,-0x6bffffdc(%rax)
   1679d:	a1 ff ff 09 00 00 00 	movabs 0x9ffff,%eax
   167a4:	00 00 
   167a6:	00 00                	add    %al,(%rax)
   167a8:	20 00                	and    %al,(%rax)
   167aa:	00 00                	add    %al,(%rax)
   167ac:	b4 24                	mov    $0x24,%ah
   167ae:	00 00                	add    %al,(%rax)
   167b0:	90                   	nop
   167b1:	a1 ff ff 4f 00 00 00 	movabs 0x45000000004fffff,%eax
   167b8:	00 45 
   167ba:	0e                   	(bad)  
   167bb:	10 83 02 6a 0a 0e    	adc    %al,0xe0a6a02(%rbx)
   167c1:	08 41 0b             	or     %al,0xb(%rcx)
   167c4:	51                   	push   %rcx
   167c5:	0a 0e                	or     (%rsi),%cl
   167c7:	08 47 0b             	or     %al,0xb(%rdi)
   167ca:	00 00                	add    %al,(%rax)
   167cc:	20 00                	and    %al,(%rax)
   167ce:	00 00                	add    %al,(%rax)
   167d0:	d8 24 00             	fsubs  (%rax,%rax,1)
   167d3:	00 bc a1 ff ff 47 00 	add    %bh,0x47ffff(%rcx,%riz,4)
   167da:	00 00                	add    %al,(%rax)
   167dc:	00 45 0e             	add    %al,0xe(%rbp)
   167df:	10 83 02 66 0a 0e    	adc    %al,0xe0a6602(%rbx)
   167e5:	08 45 0b             	or     %al,0xb(%rbp)
   167e8:	4d 0a 0e             	rex.WRB or (%r14),%r9b
   167eb:	08 43 0b             	or     %al,0xb(%rbx)
   167ee:	00 00                	add    %al,(%rax)
   167f0:	10 00                	adc    %al,(%rax)
   167f2:	00 00                	add    %al,(%rax)
   167f4:	fc                   	cld    
   167f5:	24 00                	and    $0x0,%al
   167f7:	00 18                	add    %bl,(%rax)
   167f9:	b8 fe ff 13 00       	mov    $0x13fffe,%eax
   167fe:	00 00                	add    %al,(%rax)
   16800:	00 00                	add    %al,(%rax)
   16802:	00 00                	add    %al,(%rax)
   16804:	10 00                	adc    %al,(%rax)
   16806:	00 00                	add    %al,(%rax)
   16808:	10 25 00 00 d4 a1    	adc    %ah,-0x5e2c0000(%rip)        # ffffffffa1d5680e <_end+0xffffffffa1d2b7fe>
   1680e:	ff                   	(bad)  
   1680f:	ff 07                	incl   (%rdi)
   16811:	00 00                	add    %al,(%rax)
   16813:	00 00                	add    %al,(%rax)
   16815:	00 00                	add    %al,(%rax)
   16817:	00 14 00             	add    %dl,(%rax,%rax,1)
   1681a:	00 00                	add    %al,(%rax)
   1681c:	24 25                	and    $0x25,%al
   1681e:	00 00                	add    %al,(%rax)
   16820:	d0 a1 ff ff 09 00    	shlb   0x9ffff(%rcx)
	...
   1682e:	00 00                	add    %al,(%rax)
   16830:	14 00                	adc    $0x0,%al
   16832:	00 00                	add    %al,(%rax)
   16834:	3c 25                	cmp    $0x25,%al
   16836:	00 00                	add    %al,(%rax)
   16838:	c8 a1 ff ff          	enter  $0xffa1,$0xff
   1683c:	7a 00                	jp     1683e <__GNU_EH_FRAME_HDR+0x2d7e>
	...
   16846:	00 00                	add    %al,(%rax)
   16848:	18 00                	sbb    %al,(%rax)
   1684a:	00 00                	add    %al,(%rax)
   1684c:	54                   	push   %rsp
   1684d:	25 00 00 30 a2       	and    $0xa2300000,%eax
   16852:	ff                   	(bad)  
   16853:	ff 0f                	decl   (%rdi)
   16855:	00 00                	add    %al,(%rax)
   16857:	00 00                	add    %al,(%rax)
   16859:	45 0e                	rex.RB (bad) 
   1685b:	10 41 0e             	adc    %al,0xe(%rcx)
   1685e:	08 44 0e 10          	or     %al,0x10(%rsi,%rcx,1)
   16862:	00 00                	add    %al,(%rax)
   16864:	18 00                	sbb    %al,(%rax)
   16866:	00 00                	add    %al,(%rax)
   16868:	70 25                	jo     1688f <__GNU_EH_FRAME_HDR+0x2dcf>
   1686a:	00 00                	add    %al,(%rax)
   1686c:	24 a2                	and    $0xa2,%al
   1686e:	ff                   	(bad)  
   1686f:	ff 0f                	decl   (%rdi)
   16871:	00 00                	add    %al,(%rax)
   16873:	00 00                	add    %al,(%rax)
   16875:	45 0e                	rex.RB (bad) 
   16877:	10 41 0e             	adc    %al,0xe(%rcx)
   1687a:	08 44 0e 10          	or     %al,0x10(%rsi,%rcx,1)
   1687e:	00 00                	add    %al,(%rax)
   16880:	14 00                	adc    $0x0,%al
   16882:	00 00                	add    %al,(%rax)
   16884:	8c 25 00 00 18 a2    	mov    %fs,-0x5de80000(%rip)        # ffffffffa219688a <_end+0xffffffffa216b87a>
   1688a:	ff                   	(bad)  
   1688b:	ff 14 00             	call   *(%rax,%rax,1)
   1688e:	00 00                	add    %al,(%rax)
   16890:	00 4f 0e             	add    %cl,0xe(%rdi)
   16893:	10 00                	adc    %al,(%rax)
   16895:	00 00                	add    %al,(%rax)
   16897:	00 20                	add    %ah,(%rax)
   16899:	00 00                	add    %al,(%rax)
   1689b:	00 a4 25 00 00 20 a2 	add    %ah,-0x5de00000(%rbp,%riz,1)
   168a2:	ff                   	(bad)  
   168a3:	ff 46 00             	incl   0x0(%rsi)
   168a6:	00 00                	add    %al,(%rax)
   168a8:	00 4a 0e             	add    %cl,0xe(%rdx)
   168ab:	10 83 02 6a 0a 0e    	adc    %al,0xe0a6a02(%rbx)
   168b1:	08 44 0b 46          	or     %al,0x46(%rbx,%rcx,1)
   168b5:	0e                   	(bad)  
   168b6:	08 42 c3             	or     %al,-0x3d(%rdx)
   168b9:	00 00                	add    %al,(%rax)
   168bb:	00 40 00             	add    %al,0x0(%rax)
   168be:	00 00                	add    %al,(%rax)
   168c0:	c8 25 00 00          	enter  $0x25,$0x0
   168c4:	4c a2 ff ff 7e 00 00 	rex.WR movabs %al,0x4a000000007effff
   168cb:	00 00 4a 
   168ce:	0e                   	(bad)  
   168cf:	10 86 02 46 0e 18    	adc    %al,0x180e4602(%rsi)
   168d5:	83 03 47             	addl   $0x47,(%rbx)
   168d8:	0e                   	(bad)  
   168d9:	20 6f 0a             	and    %ch,0xa(%rdi)
   168dc:	0e                   	(bad)  
   168dd:	18 43 0e             	sbb    %al,0xe(%rbx)
   168e0:	10 41 0e             	adc    %al,0xe(%rcx)
   168e3:	08 46 0b             	or     %al,0xb(%rsi)
   168e6:	44 0a 0e             	or     (%rsi),%r9b
   168e9:	18 46 0e             	sbb    %al,0xe(%rsi)
   168ec:	10 41 0e             	adc    %al,0xe(%rcx)
   168ef:	08 45 0b             	or     %al,0xb(%rbp)
   168f2:	4c 0e                	rex.WR (bad) 
   168f4:	18 46 0e             	sbb    %al,0xe(%rsi)
   168f7:	10 41 0e             	adc    %al,0xe(%rcx)
   168fa:	08 45 c3             	or     %al,-0x3d(%rbp)
   168fd:	c6 00 00             	movb   $0x0,(%rax)
   16900:	44 00 00             	add    %r8b,(%rax)
   16903:	00 0c 26             	add    %cl,(%rsi,%riz,1)
   16906:	00 00                	add    %al,(%rax)
   16908:	88 a2 ff ff 8e 00    	mov    %ah,0x8effff(%rdx)
   1690e:	00 00                	add    %al,(%rax)
   16910:	00 4b 0e             	add    %cl,0xe(%rbx)
   16913:	10 8c 02 46 0e 18 86 	adc    %cl,-0x79e7f1ba(%rdx,%rax,1)
   1691a:	03 41 0e             	add    0xe(%rcx),%eax
   1691d:	20 83 04 7f 0a 0e    	and    %al,0xe0a7f04(%rbx)
   16923:	18 43 0e             	sbb    %al,0xe(%rbx)
   16926:	10 42 0e             	adc    %al,0xe(%rdx)
   16929:	08 4a 0b             	or     %cl,0xb(%rdx)
   1692c:	41 0a 0e             	or     (%r14),%cl
   1692f:	18 46 0e             	sbb    %al,0xe(%rsi)
   16932:	10 42 0e             	adc    %al,0xe(%rdx)
   16935:	08 47 0b             	or     %al,0xb(%rdi)
   16938:	49 0e                	rex.WB (bad) 
   1693a:	18 46 0e             	sbb    %al,0xe(%rsi)
   1693d:	10 42 0e             	adc    %al,0xe(%rdx)
   16940:	08 47 c3             	or     %al,-0x3d(%rdi)
   16943:	c6                   	(bad)  
   16944:	cc                   	int3   
   16945:	00 00                	add    %al,(%rax)
   16947:	00 4c 00 00          	add    %cl,0x0(%rax,%rax,1)
   1694b:	00 54 26 00          	add    %dl,0x0(%rsi,%riz,1)
   1694f:	00 d0                	add    %dl,%al
   16951:	a2 ff ff 9e 00 00 00 	movabs %al,0x4f000000009effff
   16958:	00 4f 
   1695a:	0e                   	(bad)  
   1695b:	10 8c 02 46 0e 18 86 	adc    %cl,-0x79e7f1ba(%rdx,%rax,1)
   16962:	03 41 0e             	add    0xe(%rcx),%eax
   16965:	20 83 04 7d 0a 0e    	and    %al,0xe0a7d04(%rbx)
   1696b:	18 43 0e             	sbb    %al,0xe(%rbx)
   1696e:	10 42 0e             	adc    %al,0xe(%rdx)
   16971:	08 48 0b             	or     %cl,0xb(%rax)
   16974:	49 0a 0e             	rex.WB or (%r14),%cl
   16977:	18 46 0e             	sbb    %al,0xe(%rsi)
   1697a:	10 42 0e             	adc    %al,0xe(%rdx)
   1697d:	08 47 0b             	or     %al,0xb(%rdi)
   16980:	41 0a 0e             	or     (%r14),%cl
   16983:	18 46 0e             	sbb    %al,0xe(%rsi)
   16986:	10 42 0e             	adc    %al,0xe(%rdx)
   16989:	08 47 0b             	or     %al,0xb(%rdi)
   1698c:	50                   	push   %rax
   1698d:	0e                   	(bad)  
   1698e:	08 c3                	or     %al,%bl
   16990:	c6                   	(bad)  
   16991:	cc                   	int3   
   16992:	00 00                	add    %al,(%rax)
   16994:	00 00                	add    %al,(%rax)
   16996:	00 00                	add    %al,(%rax)
   16998:	28 00                	sub    %al,(%rax)
   1699a:	00 00                	add    %al,(%rax)
   1699c:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
   1699d:	26 00 00             	es add %al,(%rax)
   169a0:	20 a3 ff ff 72 00    	and    %ah,0x72ffff(%rbx)
   169a6:	00 00                	add    %al,(%rax)
   169a8:	00 4a 0e             	add    %cl,0xe(%rdx)
   169ab:	10 83 02 60 0a 0e    	adc    %al,0xe0a6002(%rbx)
   169b1:	08 46 0b             	or     %al,0xb(%rsi)
   169b4:	60                   	(bad)  
   169b5:	0e                   	(bad)  
   169b6:	08 48 c3             	or     %cl,-0x3d(%rax)
   169b9:	48 0e                	rex.W (bad) 
   169bb:	10 83 02 51 0e 08    	adc    %al,0x80e5102(%rbx)
   169c1:	00 00                	add    %al,(%rax)
   169c3:	00 28                	add    %ch,(%rax)
   169c5:	00 00                	add    %al,(%rax)
   169c7:	00 d0                	add    %dl,%al
   169c9:	26 00 00             	es add %al,(%rax)
   169cc:	74 a3                	je     16971 <__GNU_EH_FRAME_HDR+0x2eb1>
   169ce:	ff                   	(bad)  
   169cf:	ff 72 00             	push   0x0(%rdx)
   169d2:	00 00                	add    %al,(%rax)
   169d4:	00 4a 0e             	add    %cl,0xe(%rdx)
   169d7:	10 83 02 60 0a 0e    	adc    %al,0xe0a6002(%rbx)
   169dd:	08 46 0b             	or     %al,0xb(%rsi)
   169e0:	60                   	(bad)  
   169e1:	0e                   	(bad)  
   169e2:	08 48 c3             	or     %cl,-0x3d(%rax)
   169e5:	48 0e                	rex.W (bad) 
   169e7:	10 83 02 51 0e 08    	adc    %al,0x80e5102(%rbx)
   169ed:	00 00                	add    %al,(%rax)
   169ef:	00 14 00             	add    %dl,(%rax,%rax,1)
   169f2:	00 00                	add    %al,(%rax)
   169f4:	fc                   	cld    
   169f5:	26 00 00             	es add %al,(%rax)
   169f8:	f8                   	clc    
   169f9:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
   169fa:	ff                   	(bad)  
   169fb:	ff 58 00             	lcall  *0x0(%rax)
	...
   16a06:	00 00                	add    %al,(%rax)
   16a08:	14 00                	adc    $0x0,%al
   16a0a:	00 00                	add    %al,(%rax)
   16a0c:	14 27                	adc    $0x27,%al
   16a0e:	00 00                	add    %al,(%rax)
   16a10:	40 a5                	rex movsl %ds:(%rsi),%es:(%rdi)
   16a12:	ff                   	(bad)  
   16a13:	ff 09                	decl   (%rcx)
	...
   16a1d:	00 00                	add    %al,(%rax)
   16a1f:	00 10                	add    %dl,(%rax)
   16a21:	00 00                	add    %al,(%rax)
   16a23:	00 2c 27             	add    %ch,(%rdi,%riz,1)
   16a26:	00 00                	add    %al,(%rax)
   16a28:	08 b6 fe ff 13 00    	or     %dh,0x13fffe(%rsi)
   16a2e:	00 00                	add    %al,(%rax)
   16a30:	00 00                	add    %al,(%rax)
   16a32:	00 00                	add    %al,(%rax)
   16a34:	10 00                	adc    %al,(%rax)
   16a36:	00 00                	add    %al,(%rax)
   16a38:	40 27                	rex (bad) 
   16a3a:	00 00                	add    %al,(%rax)
   16a3c:	24 a6                	and    $0xa6,%al
   16a3e:	ff                   	(bad)  
   16a3f:	ff 09                	decl   (%rcx)
   16a41:	00 00                	add    %al,(%rax)
   16a43:	00 00                	add    %al,(%rax)
   16a45:	00 00                	add    %al,(%rax)
   16a47:	00 1c 00             	add    %bl,(%rax,%rax,1)
   16a4a:	00 00                	add    %al,(%rax)
   16a4c:	54                   	push   %rsp
   16a4d:	27                   	(bad)  
   16a4e:	00 00                	add    %al,(%rax)
   16a50:	20 a6 ff ff 45 02    	and    %ah,0x245ffff(%rsi)
   16a56:	00 00                	add    %al,(%rax)
   16a58:	00 6a 0e             	add    %ch,0xe(%rdx)
   16a5b:	10 03                	adc    %al,(%rbx)
   16a5d:	07                   	(bad)  
   16a5e:	02 0e                	add    (%rsi),%cl
   16a60:	08 00                	or     %al,(%rax)
   16a62:	00 00                	add    %al,(%rax)
   16a64:	00 00                	add    %al,(%rax)
   16a66:	00 00                	add    %al,(%rax)
   16a68:	10 00                	adc    %al,(%rax)
   16a6a:	00 00                	add    %al,(%rax)
   16a6c:	74 27                	je     16a95 <__GNU_EH_FRAME_HDR+0x2fd5>
   16a6e:	00 00                	add    %al,(%rax)
   16a70:	e0 b5                	loopne 16a27 <__GNU_EH_FRAME_HDR+0x2f67>
   16a72:	fe                   	(bad)  
   16a73:	ff 13                	call   *(%rbx)
   16a75:	00 00                	add    %al,(%rax)
   16a77:	00 00                	add    %al,(%rax)
   16a79:	00 00                	add    %al,(%rax)
   16a7b:	00 2c 00             	add    %ch,(%rax,%rax,1)
   16a7e:	00 00                	add    %al,(%rax)
   16a80:	88 27                	mov    %ah,(%rdi)
   16a82:	00 00                	add    %al,(%rax)
   16a84:	3c a8                	cmp    $0xa8,%al
   16a86:	ff                   	(bad)  
   16a87:	ff 8c 01 00 00 00 45 	decl   0x45000000(%rcx,%rax,1)
   16a8e:	0e                   	(bad)  
   16a8f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
   16a95:	42 8f 03             	rex.X pop (%rbx)
   16a98:	49 8e 04 8d 05 46 8c 	rex.WB mov 0x68c4605(,%rcx,4),%es
   16a9f:	06 
   16aa0:	83 07 03             	addl   $0x3,(%rdi)
   16aa3:	6d                   	insl   (%dx),%es:(%rdi)
   16aa4:	01 0a                	add    %ecx,(%rdx)
   16aa6:	0c 07                	or     $0x7,%al
   16aa8:	08 41 0b             	or     %al,0xb(%rcx)
   16aab:	00 34 00             	add    %dh,(%rax,%rax,1)
   16aae:	00 00                	add    %al,(%rax)
   16ab0:	b8 27 00 00 9c       	mov    $0x9c000027,%eax
   16ab5:	a9 ff ff 66 00       	test   $0x66ffff,%eax
   16aba:	00 00                	add    %al,(%rax)
   16abc:	00 45 0e             	add    %al,0xe(%rbp)
   16abf:	10 86 02 41 0e 18    	adc    %al,0x180e4102(%rsi)
   16ac5:	83 03 4b             	addl   $0x4b,(%rbx)
   16ac8:	0e                   	(bad)  
   16ac9:	20 4e 0a             	and    %cl,0xa(%rsi)
   16acc:	0e                   	(bad)  
   16acd:	18 44 0e 10          	sbb    %al,0x10(%rsi,%rcx,1)
   16ad1:	41 0e                	rex.B (bad) 
   16ad3:	08 44 0b 65          	or     %al,0x65(%rbx,%rcx,1)
   16ad7:	0a 0e                	or     (%rsi),%cl
   16ad9:	18 44 0e 10          	sbb    %al,0x10(%rsi,%rcx,1)
   16add:	41 0e                	rex.B (bad) 
   16adf:	08 46 0b             	or     %al,0xb(%rsi)
	...

Disassembly of section .fini_array:

0000000000017da0 <.fini_array>:
   17da0:	00 20                	add    %ah,(%rax)
   17da2:	00 00                	add    %al,(%rax)
   17da4:	00 00                	add    %al,(%rax)
   17da6:	00 00                	add    %al,(%rax)
   17da8:	10 20                	adc    %ah,(%rax)
   17daa:	00 00                	add    %al,(%rax)
   17dac:	00 00                	add    %al,(%rax)
   17dae:	00 00                	add    %al,(%rax)
   17db0:	30 20                	xor    %ah,(%rax)
   17db2:	00 00                	add    %al,(%rax)
   17db4:	00 00                	add    %al,(%rax)
   17db6:	00 00                	add    %al,(%rax)
   17db8:	50                   	push   %rax
   17db9:	20 00                	and    %al,(%rax)
   17dbb:	00 00                	add    %al,(%rax)
   17dbd:	00 00                	add    %al,(%rax)
	...

Disassembly of section .data.rel.ro:

0000000000017dc0 <g_ecall_table>:
   17dc0:	04 00                	add    $0x0,%al
   17dc2:	00 00                	add    %al,(%rax)
   17dc4:	00 00                	add    %al,(%rax)
   17dc6:	00 00                	add    %al,(%rax)
   17dc8:	74 41                	je     17e0b <__intel_security_cookie+0x3>
	...
   17dd6:	00 00                	add    %al,(%rax)
   17dd8:	0e                   	(bad)  
   17dd9:	41 00 00             	add    %al,(%r8)
	...
   17de8:	f5                   	cmc    
   17de9:	40 00 00             	rex add %al,(%rax)
	...
   17df8:	06                   	(bad)  
   17df9:	40 00 00             	rex add %al,(%rax)
	...

0000000000017e08 <__intel_security_cookie>:
	...

0000000000017e10 <g_cpu_core_num>:
   17e10:	00 00                	add    %al,(%rax)
	...

0000000000017e14 <g_aexnotify_supported>:
   17e14:	00 00                	add    %al,(%rax)
	...

0000000000017e18 <g_enclave_size>:
	...

0000000000017e20 <g_enclave_base>:
	...

0000000000017e28 <g_sdk_version>:
   17e28:	00 00                	add    %al,(%rax)
	...

0000000000017e2c <EDMM_supported>:
   17e2c:	00 00                	add    %al,(%rax)
	...

0000000000017e30 <g_cpu_feature_indicator>:
	...

0000000000017e38 <heap_min_size>:
	...

0000000000017e40 <is_edmm_supported>:
	...

0000000000017e48 <heap_size>:
	...

0000000000017e50 <heap_base>:
	...

0000000000017e58 <__memset_vp>:
   17e58:	30 09                	xor    %cl,(%rcx)
   17e5a:	01 00                	add    %eax,(%rax)
   17e5c:	00 00                	add    %al,(%rax)
	...

0000000000017e60 <rsrv_mem_min_size>:
	...

0000000000017e68 <rsrv_mem_size>:
	...

0000000000017e70 <rsrv_mem_base>:
	...

Disassembly of section .dynamic:

0000000000017e78 <_DYNAMIC>:
   17e78:	1a 00                	sbb    (%rax),%al
   17e7a:	00 00                	add    %al,(%rax)
   17e7c:	00 00                	add    %al,(%rax)
   17e7e:	00 00                	add    %al,(%rax)
   17e80:	a0 7d 01 00 00 00 00 	movabs 0x1c0000000000017d,%al
   17e87:	00 1c 
   17e89:	00 00                	add    %al,(%rax)
   17e8b:	00 00                	add    %al,(%rax)
   17e8d:	00 00                	add    %al,(%rax)
   17e8f:	00 20                	add    %ah,(%rax)
   17e91:	00 00                	add    %al,(%rax)
   17e93:	00 00                	add    %al,(%rax)
   17e95:	00 00                	add    %al,(%rax)
   17e97:	00 f5                	add    %dh,%ch
   17e99:	fe                   	(bad)  
   17e9a:	ff 6f 00             	ljmp   *0x0(%rdi)
   17e9d:	00 00                	add    %al,(%rax)
   17e9f:	00 90 03 00 00 00    	add    %dl,0x3(%rax)
   17ea5:	00 00                	add    %al,(%rax)
   17ea7:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 17ead <_DYNAMIC+0x35>
   17ead:	00 00                	add    %al,(%rax)
   17eaf:	00 08                	add    %cl,(%rax)
   17eb1:	08 00                	or     %al,(%rax)
   17eb3:	00 00                	add    %al,(%rax)
   17eb5:	00 00                	add    %al,(%rax)
   17eb7:	00 06                	add    %al,(%rsi)
   17eb9:	00 00                	add    %al,(%rax)
   17ebb:	00 00                	add    %al,(%rax)
   17ebd:	00 00                	add    %al,(%rax)
   17ebf:	00 90 04 00 00 00    	add    %dl,0x4(%rax)
   17ec5:	00 00                	add    %al,(%rax)
   17ec7:	00 0a                	add    %cl,(%rdx)
   17ec9:	00 00                	add    %al,(%rax)
   17ecb:	00 00                	add    %al,(%rax)
   17ecd:	00 00                	add    %al,(%rax)
   17ecf:	00 ec                	add    %ch,%ah
   17ed1:	01 00                	add    %eax,(%rax)
   17ed3:	00 00                	add    %al,(%rax)
   17ed5:	00 00                	add    %al,(%rax)
   17ed7:	00 0b                	add    %cl,(%rbx)
   17ed9:	00 00                	add    %al,(%rax)
   17edb:	00 00                	add    %al,(%rax)
   17edd:	00 00                	add    %al,(%rax)
   17edf:	00 18                	add    %bl,(%rax)
   17ee1:	00 00                	add    %al,(%rax)
   17ee3:	00 00                	add    %al,(%rax)
   17ee5:	00 00                	add    %al,(%rax)
   17ee7:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 17eed <_DYNAMIC+0x75>
	...
   17ef5:	00 00                	add    %al,(%rax)
   17ef7:	00 03                	add    %al,(%rbx)
   17ef9:	00 00                	add    %al,(%rax)
   17efb:	00 00                	add    %al,(%rax)
   17efd:	00 00                	add    %al,(%rax)
   17eff:	00 b8 7f 01 00 00    	add    %bh,0x17f(%rax)
   17f05:	00 00                	add    %al,(%rax)
   17f07:	00 07                	add    %al,(%rdi)
   17f09:	00 00                	add    %al,(%rax)
   17f0b:	00 00                	add    %al,(%rax)
   17f0d:	00 00                	add    %al,(%rax)
   17f0f:	00 f8                	add    %bh,%al
   17f11:	09 00                	or     %eax,(%rax)
   17f13:	00 00                	add    %al,(%rax)
   17f15:	00 00                	add    %al,(%rax)
   17f17:	00 08                	add    %cl,(%rax)
   17f19:	00 00                	add    %al,(%rax)
   17f1b:	00 00                	add    %al,(%rax)
   17f1d:	00 00                	add    %al,(%rax)
   17f1f:	00 10                	add    %dl,(%rax)
   17f21:	02 00                	add    (%rax),%al
   17f23:	00 00                	add    %al,(%rax)
   17f25:	00 00                	add    %al,(%rax)
   17f27:	00 09                	add    %cl,(%rcx)
   17f29:	00 00                	add    %al,(%rax)
   17f2b:	00 00                	add    %al,(%rax)
   17f2d:	00 00                	add    %al,(%rax)
   17f2f:	00 18                	add    %bl,(%rax)
   17f31:	00 00                	add    %al,(%rax)
   17f33:	00 00                	add    %al,(%rax)
   17f35:	00 00                	add    %al,(%rax)
   17f37:	00 1e                	add    %bl,(%rsi)
   17f39:	00 00                	add    %al,(%rax)
   17f3b:	00 00                	add    %al,(%rax)
   17f3d:	00 00                	add    %al,(%rax)
   17f3f:	00 08                	add    %cl,(%rax)
   17f41:	00 00                	add    %al,(%rax)
   17f43:	00 00                	add    %al,(%rax)
   17f45:	00 00                	add    %al,(%rax)
   17f47:	00 fb                	add    %bh,%bl
   17f49:	ff                   	(bad)  
   17f4a:	ff 6f 00             	ljmp   *0x0(%rdi)
   17f4d:	00 00                	add    %al,(%rax)
   17f4f:	00 01                	add    %al,(%rcx)
   17f51:	00 00                	add    %al,(%rax)
   17f53:	08 00                	or     %al,(%rax)
   17f55:	00 00                	add    %al,(%rax)
   17f57:	00 f9                	add    %bh,%cl
   17f59:	ff                   	(bad)  
   17f5a:	ff 6f 00             	ljmp   *0x0(%rdi)
   17f5d:	00 00                	add    %al,(%rax)
   17f5f:	00 14 00             	add    %dl,(%rax,%rax,1)
	...

Disassembly of section .got:

0000000000017fb8 <_GLOBAL_OFFSET_TABLE_>:
   17fb8:	78 7e                	js     18038 <extended+0x18>
   17fba:	01 00                	add    %eax,(%rax)
	...
   17fd8:	b3 24                	mov    $0x24,%bl
   17fda:	01 00                	add    %eax,(%rax)
   17fdc:	00 00                	add    %al,(%rax)
   17fde:	00 00                	add    %al,(%rax)
   17fe0:	95                   	xchg   %eax,%ebp
   17fe1:	24 01                	and    $0x1,%al
   17fe3:	00 00                	add    %al,(%rax)
   17fe5:	00 00                	add    %al,(%rax)
   17fe7:	00 00                	add    %al,(%rax)
   17fe9:	90                   	nop
   17fea:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .data:

0000000000018000 <pincode>:
   18000:	d2 04 00             	rolb   %cl,(%rax,%rax,1)
   18003:	00 00                	add    %al,(%rax)
   18005:	00 00                	add    %al,(%rax)
	...

0000000000018008 <secret>:
   18008:	1c 30                	sbb    $0x30,%al
   1800a:	01 00                	add    %eax,(%rax)
   1800c:	00 00                	add    %al,(%rax)
	...

0000000000018010 <extension_2op_table>:
   18010:	5a                   	pop    %rdx
   18011:	05 00 a9 08 00       	add    $0x8a900,%eax
   18016:	5a                   	pop    %rdx
   18017:	50                   	push   %rax
   18018:	96                   	xchg   %eax,%esi
   18019:	40 55                	rex push %rbp
   1801b:	00 00                	add    %al,(%rax)
   1801d:	00 00                	add    %al,(%rax)
	...

0000000000018020 <extended>:
   18020:	c1 d8 90             	rcr    $0x90,%eax
   18023:	90                   	nop
   18024:	80 80 80 80 80 80 80 	addb   $0x80,-0x7f7f7f80(%rax)
   1802b:	80 80 90 80 93 94 a4 	addb   $0xa4,-0x6b6c7f70(%rax)
   18032:	93                   	xchg   %eax,%ebx
   18033:	a3 94 94 93 a3 e8 82 	movabs %eax,0x645482e8a3939494
   1803a:	54 64 
   1803c:	82                   	(bad)  
   1803d:	82                   	(bad)  
   1803e:	82                   	(bad)  
   1803f:	82                   	(bad)  
   18040:	80 80 80 80 80 80 80 	addb   $0x80,-0x7f7f7f80(%rax)
   18047:	80 94 a4 93 a4 93 93 	adcb   $0x92,-0x6c6c5b6d(%rsp,%riz,4)
   1804e:	92 
   1804f:	92                   	xchg   %eax,%edx
   18050:	80 80 80 80 80 80 80 	addb   $0x80,-0x7f7f7f80(%rax)
   18057:	80 80 80 80 80 80 80 	addb   $0x80,-0x7f7f7f80(%rax)
   1805e:	80 80 92 92 92 92 92 	addb   $0x92,-0x6d6d6d6e(%rax)
   18065:	92                   	xchg   %eax,%edx
   18066:	92                   	xchg   %eax,%edx
   18067:	92                   	xchg   %eax,%edx
   18068:	92                   	xchg   %eax,%edx
   18069:	92                   	xchg   %eax,%edx
   1806a:	92                   	xchg   %eax,%edx
   1806b:	92                   	xchg   %eax,%edx
   1806c:	92                   	xchg   %eax,%edx
   1806d:	92                   	xchg   %eax,%edx
   1806e:	92                   	xchg   %eax,%edx
   1806f:	92                   	xchg   %eax,%edx
   18070:	80 94 94 94 94 94 94 	adcb   $0x94,-0x6b6b6b6c(%rsp,%rdx,4)
   18077:	94 
   18078:	94                   	xchg   %eax,%esp
   18079:	94                   	xchg   %eax,%esp
   1807a:	93                   	xchg   %eax,%ebx
   1807b:	94                   	xchg   %eax,%esp
   1807c:	94                   	xchg   %eax,%esp
   1807d:	94                   	xchg   %eax,%esp
   1807e:	94                   	xchg   %eax,%esp
   1807f:	94                   	xchg   %eax,%esp
   18080:	92                   	xchg   %eax,%edx
   18081:	92                   	xchg   %eax,%edx
   18082:	92                   	xchg   %eax,%edx
   18083:	93                   	xchg   %eax,%ebx
   18084:	93                   	xchg   %eax,%ebx
   18085:	93                   	xchg   %eax,%ebx
   18086:	93                   	xchg   %eax,%ebx
   18087:	93                   	xchg   %eax,%ebx
   18088:	93                   	xchg   %eax,%ebx
   18089:	93                   	xchg   %eax,%ebx
   1808a:	93                   	xchg   %eax,%ebx
   1808b:	93                   	xchg   %eax,%ebx
   1808c:	94                   	xchg   %eax,%esp
   1808d:	94                   	xchg   %eax,%esp
   1808e:	92                   	xchg   %eax,%edx
   1808f:	93                   	xchg   %eax,%ebx
   18090:	94                   	xchg   %eax,%esp
   18091:	80 80 80 93 93 93 80 	addb   $0x80,-0x6c6c6c80(%rax)
   18098:	80 80 40 80 94 94 42 	addb   $0x42,-0x6b6b7fc0(%rax)
   1809f:	a3 80 80 80 80 80 80 	movabs %eax,0x8080808080808080
   180a6:	80 80 
   180a8:	80 80 80 80 80 80 80 	addb   $0x80,-0x7f7f7f80(%rax)
   180af:	80 a0 a0 a0 a0 a0 a0 	andb   $0xa0,-0x5f5f5f60(%rax)
   180b6:	a0 a0 a0 a0 a0 a0 a0 	movabs 0xa0a0a0a0a0a0a0a0,%al
   180bd:	a0 a0 
   180bf:	a0 80 80 80 92 a2 a2 	movabs 0x8080a2a292808080,%al
   180c6:	80 80 
   180c8:	80 80 80 a2 a2 a2 e0 	addb   $0xe0,-0x5d5d5d80(%rax)
   180cf:	92                   	xchg   %eax,%edx
   180d0:	a0 a2 92 a2 92 92 90 	movabs 0x9291909292a292a2,%al
   180d7:	91 92 
   180d9:	80 ca a2             	or     $0xa2,%dl
   180dc:	92                   	xchg   %eax,%edx
   180dd:	92                   	xchg   %eax,%edx
   180de:	90                   	nop
   180df:	91                   	xchg   %eax,%ecx
   180e0:	a0 a2 94 a3 91 80 94 	movabs 0x80d3948091a394a2,%al
   180e7:	d3 80 
   180e9:	80 80 80 80 80 80 80 	addb   $0x80,-0x7f7f7f80(%rax)
   180f0:	94                   	xchg   %eax,%esp
   180f1:	93                   	xchg   %eax,%ebx
   180f2:	93                   	xchg   %eax,%ebx
   180f3:	93                   	xchg   %eax,%ebx
   180f4:	93                   	xchg   %eax,%ebx
   180f5:	93                   	xchg   %eax,%ebx
   180f6:	a3 80 93 93 93 93 93 	movabs %eax,0x9393939393939380
   180fd:	93 93 
   180ff:	93                   	xchg   %eax,%ebx
   18100:	93                   	xchg   %eax,%ebx
   18101:	93                   	xchg   %eax,%ebx
   18102:	93                   	xchg   %eax,%ebx
   18103:	93                   	xchg   %eax,%ebx
   18104:	93                   	xchg   %eax,%ebx
   18105:	93                   	xchg   %eax,%ebx
   18106:	94                   	xchg   %eax,%esp
   18107:	a3 93 93 93 93 93 93 	movabs %eax,0x9393939393939393
   1810e:	93 93 
   18110:	94                   	xchg   %eax,%esp
   18111:	93                   	xchg   %eax,%ebx
   18112:	93                   	xchg   %eax,%ebx
   18113:	93                   	xchg   %eax,%ebx
   18114:	93                   	xchg   %eax,%ebx
   18115:	93                   	xchg   %eax,%ebx
   18116:	93                   	xchg   %eax,%ebx
   18117:	80 93 93 93 93 93 93 	adcb   $0x93,-0x6c6c6c6d(%rbx)
   1811e:	93                   	xchg   %eax,%ebx
   1811f:	80       	sbbb   $0x90,-0x6f696b66(%rax)

0000000000018120 <standard>:
   18120:	98                   	cwtl   
   18121:	9a                   	(bad)  
   18122:	94                   	xchg   %eax,%esp
   18123:	96                   	xchg   %eax,%esi
   18124:	90                   	nop
   18125:	90                   	nop
   18126:	90                   	nop
   18127:	90                   	nop
   18128:	98                   	cwtl   
   18129:	9a                   	(bad)  
   1812a:	94                   	xchg   %eax,%esp
   1812b:	96                   	xchg   %eax,%esi
   1812c:	90                   	nop
   1812d:	90                   	nop
   1812e:	90                   	nop
   1812f:	80 98 9a 94 96 90 90 	sbbb   $0x90,-0x6f696b66(%rax)
   18136:	90                   	nop
   18137:	90                   	nop
   18138:	98                   	cwtl   
   18139:	9a                   	(bad)  
   1813a:	94                   	xchg   %eax,%esp
   1813b:	96                   	xchg   %eax,%esi
   1813c:	90                   	nop
   1813d:	90                   	nop
   1813e:	90                   	nop
   1813f:	90                   	nop
   18140:	98                   	cwtl   
   18141:	9a                   	(bad)  
   18142:	94                   	xchg   %eax,%esp
   18143:	96                   	xchg   %eax,%esi
   18144:	90                   	nop
   18145:	90                   	nop
   18146:	13 90 98 9a 94 96    	adc    -0x696b6568(%rax),%edx
   1814c:	90                   	nop
   1814d:	90                   	nop
   1814e:	10 90 98 9a 94 96    	adc    %dl,-0x696b6568(%rax)
   18154:	90                   	nop
   18155:	90                   	nop
   18156:	11 90 94 96 94 96    	adc    %edx,-0x696b696c(%rax)
   1815c:	90                   	nop
   1815d:	90                   	nop
   1815e:	12 90 40 40 40 40    	adc    0x40404040(%rax),%dl
   18164:	40                   	rex
   18165:	40                   	rex
   18166:	40                   	rex
   18167:	40                   	rex
   18168:	40                   	rex
   18169:	40                   	rex
   1816a:	40                   	rex
   1816b:	40                   	rex
   1816c:	40                   	rex
   1816d:	40                   	rex
   1816e:	40                   	rex
   1816f:	40 b0 b0             	rex mov $0xb0,%al
   18172:	b0 b0                	mov    $0xb0,%al
   18174:	b0 b0                	mov    $0xb0,%al
   18176:	b0 b0                	mov    $0xb0,%al
   18178:	90                   	nop
   18179:	90                   	nop
   1817a:	90                   	nop
   1817b:	90                   	nop
   1817c:	90                   	nop
   1817d:	90                   	nop
   1817e:	90                   	nop
   1817f:	90                   	nop
   18180:	b0 90                	mov    $0x90,%al
   18182:	90                   	nop
   18183:	95                   	xchg   %eax,%ebp
   18184:	14 15                	adc    $0x15,%al
   18186:	20 30                	and    %dh,(%rax)
   18188:	b0 96                	mov    $0x96,%al
   1818a:	b0 96                	mov    $0x96,%al
   1818c:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1818d:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1818e:	a0 a0 90 90 90 90 90 	movabs 0x90909090909090a0,%al
   18195:	90 90 
   18197:	90                   	nop
   18198:	90                   	nop
   18199:	90                   	nop
   1819a:	90                   	nop
   1819b:	90                   	nop
   1819c:	90                   	nop
   1819d:	90                   	nop
   1819e:	90                   	nop
   1819f:	90                   	nop
   181a0:	c4                   	(bad)  
   181a1:	c6 c4 c6             	mov    $0xc6,%ah
   181a4:	94                   	xchg   %eax,%esp
   181a5:	96                   	xchg   %eax,%esi
   181a6:	94                   	xchg   %eax,%esp
   181a7:	96                   	xchg   %eax,%esi
   181a8:	98                   	cwtl   
   181a9:	9a                   	(bad)  
   181aa:	94                   	xchg   %eax,%esp
   181ab:	96                   	xchg   %eax,%esi
   181ac:	99                   	cltd   
   181ad:	90                   	nop
   181ae:	95                   	xchg   %eax,%ebp
   181af:	9a                   	(bad)  
   181b0:	90                   	nop
   181b1:	90                   	nop
   181b2:	90                   	nop
   181b3:	90                   	nop
   181b4:	90                   	nop
   181b5:	90                   	nop
   181b6:	90                   	nop
   181b7:	90                   	nop
   181b8:	90                   	nop
   181b9:	90                   	nop
   181ba:	b0 90                	mov    $0x90,%al
   181bc:	b0 90                	mov    $0x90,%al
   181be:	90                   	nop
   181bf:	90                   	nop
   181c0:	90                   	nop
   181c1:	90                   	nop
   181c2:	90                   	nop
   181c3:	90                   	nop
   181c4:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   181c5:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   181c6:	a0 a0 90 90 a5 a5 a0 	movabs 0xa4a0a0a5a59090a0,%al
   181cd:	a0 a4 
   181cf:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
   181d0:	90                   	nop
   181d1:	90                   	nop
   181d2:	90                   	nop
   181d3:	90                   	nop
   181d4:	90                   	nop
   181d5:	90                   	nop
   181d6:	90                   	nop
   181d7:	90                   	nop
   181d8:	90                   	nop
   181d9:	90                   	nop
   181da:	90                   	nop
   181db:	90                   	nop
   181dc:	90                   	nop
   181dd:	90                   	nop
   181de:	90                   	nop
   181df:	90                   	nop
   181e0:	d8 da                	fcomp  %st(2)
   181e2:	90                   	nop
   181e3:	90                   	nop
   181e4:	90                   	nop
   181e5:	90                   	nop
   181e6:	f8                   	clc    
   181e7:	fa                   	cli    
   181e8:	90                   	nop
   181e9:	90                   	nop
   181ea:	90                   	nop
   181eb:	90                   	nop
   181ec:	90                   	nop
   181ed:	90                   	nop
   181ee:	90                   	nop
   181ef:	90                   	nop
   181f0:	d8 da                	fcomp  %st(2)
   181f2:	d8 da                	fcomp  %st(2)
   181f4:	90                   	nop
   181f5:	90                   	nop
   181f6:	90                   	nop
   181f7:	90                   	nop
   181f8:	90                   	nop
   181f9:	90                   	nop
   181fa:	90                   	nop
   181fb:	90                   	nop
   181fc:	90                   	nop
   181fd:	90                   	nop
   181fe:	90                   	nop
   181ff:	90                   	nop
   18200:	90                   	nop
   18201:	90                   	nop
   18202:	90                   	nop
   18203:	90                   	nop
   18204:	90                   	nop
   18205:	90                   	nop
   18206:	90                   	nop
   18207:	90                   	nop
   18208:	b0 90                	mov    $0x90,%al
   1820a:	90                   	nop
   1820b:	90                   	nop
   1820c:	90                   	nop
   1820d:	90                   	nop
   1820e:	90                   	nop
   1820f:	90                   	nop
   18210:	03 90 01 02 90 90    	add    -0x6f6ffdff(%rax),%edx
   18216:	e4 e6                	in     $0xe6,%al
   18218:	90                   	nop
   18219:	90                   	nop
   1821a:	90                   	nop
   1821b:	90                   	nop
   1821c:	90                   	nop
   1821d:	90                   	nop
   1821e:	f8                   	clc    
   1821f:	f6               	testb  $0x0,(%rcx)

0000000000018220 <_ZL16g_is_first_ecall>:
   18220:	01 00                	add    %eax,(%rax)
	...

0000000000018230 <sgx_trts_version>:
   18230:	53                   	push   %rbx
   18231:	47 58                	rex.RXB pop %r8
   18233:	5f                   	pop    %rdi
   18234:	54                   	push   %rsp
   18235:	52                   	push   %rdx
   18236:	54                   	push   %rsp
   18237:	53                   	push   %rbx
   18238:	5f                   	pop    %rdi
   18239:	56                   	push   %rsi
   1823a:	45 52                	rex.RB push %r10
   1823c:	53                   	push   %rbx
   1823d:	49                   	rex.WB
   1823e:	4f                   	rex.WRXB
   1823f:	4e 5f                	rex.WRX pop %rdi
   18241:	32 2e                	xor    (%rsi),%ch
   18243:	32 33                	xor    (%rbx),%dh
   18245:	2e 31 30             	cs xor %esi,(%rax)
   18248:	30 2e                	xor    %ch,(%rsi)
   1824a:	32 00                	xor    (%rax),%al
   1824c:	00 00                	add    %al,(%rax)
	...

0000000000018250 <__dso_handle>:
   18250:	50                   	push   %rax
   18251:	82                   	(bad)  
   18252:	01 00                	add    %eax,(%rax)
	...

0000000000019000 <aex_notify_c3_cache>:
	...

000000000001a000 <g_user_ema_root>:
   1a000:	20 a0 01 00 00 00    	and    %ah,0x1(%rax)
	...

000000000001a020 <user_ema_guard>:
	...
   1a058:	20 a0 01 00 00 00    	and    %ah,0x1(%rax)
   1a05e:	00 00                	add    %al,(%rax)
   1a060:	20 a0 01 00 00 00    	and    %ah,0x1(%rax)
	...

000000000001a068 <g_rts_ema_root>:
   1a068:	80 a0 01 00 00 00 00 	andb   $0x0,0x1(%rax)
	...

000000000001a080 <rts_ema_guard>:
	...
   1a0b8:	80 a0 01 00 00 00 00 	andb   $0x0,0x1(%rax)
   1a0bf:	00 80 a0 01 00 00    	add    %al,0x1a0(%rax)
   1a0c5:	00 00                	add    %al,(%rax)
	...

000000000001a0c8 <reserve_size_increment>:
   1a0c8:	00 00                	add    %al,(%rax)
   1a0ca:	01 00                	add    %eax,(%rax)
   1a0cc:	00 00                	add    %al,(%rax)
	...

000000000001a0d0 <size_mask>:
   1a0d0:	f8                   	clc    
   1a0d1:	ff                   	(bad)  
   1a0d2:	ff                   	(bad)  
   1a0d3:	ff                   	(bad)  
   1a0d4:	ff                   	(bad)  
   1a0d5:	ff                   	(bad)  
   1a0d6:	ff                   	(bad)  
   1a0d7:	ff                 	decl   (%rax)

000000000001a0d8 <header_size>:
   1a0d8:	08 00                	or     %al,(%rax)
   1a0da:	00 00                	add    %al,(%rax)
   1a0dc:	00 00                	add    %al,(%rax)
	...

000000000001a0e0 <sgx_tstdc_version>:
   1a0e0:	53                   	push   %rbx
   1a0e1:	47 58                	rex.RXB pop %r8
   1a0e3:	5f                   	pop    %rdi
   1a0e4:	54                   	push   %rsp
   1a0e5:	53                   	push   %rbx
   1a0e6:	54                   	push   %rsp
   1a0e7:	44                   	rex.R
   1a0e8:	43 5f                	rex.XB pop %r15
   1a0ea:	56                   	push   %rsi
   1a0eb:	45 52                	rex.RB push %r10
   1a0ed:	53                   	push   %rbx
   1a0ee:	49                   	rex.WB
   1a0ef:	4f                   	rex.WRXB
   1a0f0:	4e 5f                	rex.WRX pop %rdi
   1a0f2:	32 2e                	xor    (%rsi),%ch
   1a0f4:	32 33                	xor    (%rbx),%dh
   1a0f6:	2e 31 30             	cs xor %esi,(%rax)
   1a0f9:	30 2e                	xor    %ch,(%rsi)
   1a0fb:	32 00                	xor    (%rax),%al
   1a0fd:	00 00                	add    %al,(%rax)
	...

000000000001a100 <sgx_tcrypto_version>:
   1a100:	53                   	push   %rbx
   1a101:	47 58                	rex.RXB pop %r8
   1a103:	5f                   	pop    %rdi
   1a104:	54                   	push   %rsp
   1a105:	43 52                	rex.XB push %r10
   1a107:	59                   	pop    %rcx
   1a108:	50                   	push   %rax
   1a109:	54                   	push   %rsp
   1a10a:	4f 5f                	rex.WRXB pop %r15
   1a10c:	56                   	push   %rsi
   1a10d:	45 52                	rex.RB push %r10
   1a10f:	53                   	push   %rbx
   1a110:	49                   	rex.WB
   1a111:	4f                   	rex.WRXB
   1a112:	4e 5f                	rex.WRX pop %rdi
   1a114:	32 2e                	xor    (%rsi),%ch
   1a116:	32 33                	xor    (%rbx),%dh
   1a118:	2e 31 30             	cs xor %esi,(%rax)
   1a11b:	30 2e                	xor    %ch,(%rsi)
   1a11d:	32 00                	xor    (%rax),%al
	...

000000000001a120 <sgx_tservice_version>:
   1a120:	53                   	push   %rbx
   1a121:	47 58                	rex.RXB pop %r8
   1a123:	5f                   	pop    %rdi
   1a124:	54                   	push   %rsp
   1a125:	53                   	push   %rbx
   1a126:	45 52                	rex.RB push %r10
   1a128:	56                   	push   %rsi
   1a129:	49                   	rex.WB
   1a12a:	43                   	rex.XB
   1a12b:	45 5f                	rex.RB pop %r15
   1a12d:	56                   	push   %rsi
   1a12e:	45 52                	rex.RB push %r10
   1a130:	53                   	push   %rbx
   1a131:	49                   	rex.WB
   1a132:	4f                   	rex.WRXB
   1a133:	4e 5f                	rex.WRX pop %rdi
   1a135:	32 2e                	xor    (%rsi),%ch
   1a137:	32 33                	xor    (%rbx),%dh
   1a139:	2e 31 30             	cs xor %esi,(%rax)
   1a13c:	30 2e                	xor    %ch,(%rsi)
   1a13e:	32 00                	xor    (%rax),%al

Disassembly of section .nipd:

000000000001a140 <g_enclave_state>:
   1a140:	00 00                	add    %al,(%rax)
	...

000000000001a144 <g_xsave_enabled>:
   1a144:	00 00                	add    %al,(%rax)
	...

Disassembly of section .bss:

000000000001a160 <msp>:
	...

000000000001a170 <g_uninit_flag>:
   1a170:	00 00                	add    %al,(%rax)
	...

000000000001a174 <_ZL10g_ife_lock>:
   1a174:	00 00                	add    %al,(%rax)
	...

000000000001a178 <_ZL12g_tcs_cookie>:
	...

000000000001a180 <_ZL10g_tcs_node>:
	...

000000000001a188 <g_mm_pfhandler>:
	...

000000000001a190 <_ZL12g_veh_cookie>:
	...

000000000001a198 <_ZL14g_handler_lock>:
	...

000000000001a1a0 <_ZL12g_first_node>:
	...

000000000001a1a8 <g_exit_function_cookie>:
	...

000000000001a1b0 <g_exit_function_lock>:
	...

000000000001a1b8 <g_exit_function>:
	...

000000000001a1c0 <adding_reserve>:
	...

000000000001a1c8 <reserve_list>:
	...

000000000001a1d0 <large_block_list>:
	...

000000000001a1e0 <exact_block_list>:
	...

000000000001a9e0 <meta_used>:
	...

000000000001aa00 <meta_reserve>:
	...

000000000002aa00 <mm_user_end>:
	...

000000000002aa08 <mm_user_base>:
	...

000000000002aa10 <mm_lock>:
	...

000000000002aa18 <heap_used.0>:
	...

000000000002aa20 <g_peak_heap_used>:
	...

000000000002aa40 <_gm_>:
	...

000000000002ae00 <mparams>:
	...

000000000002ae30 <malloc_global_mutex>:
	...

000000000002ae38 <g_peak_rsrv_mem_committed>:
	...

000000000002ae40 <_ZZ15sgx_self_reportE11report_lock>:
	...

000000000002ae60 <_ZZ15sgx_self_reportE7_report>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <__ImageBase+0x78>
   a:	74 75                	je     81 <__ImageBase+0x81>
   c:	20 31                	and    %dh,(%rcx)
   e:	33 2e                	xor    (%rsi),%ebp
  10:	33 2e                	xor    (%rsi),%ebp
  12:	30 2d 36 75 62 75    	xor    %ch,0x75627536(%rip)        # 7562754e <_end+0x755fc53e>
  18:	6e                   	outsb  %ds:(%rsi),(%dx)
  19:	74 75                	je     90 <__ImageBase+0x90>
  1b:	32 7e 32             	xor    0x32(%rsi),%bh
  1e:	34 2e                	xor    $0x2e,%al
  20:	30 34 29             	xor    %dh,(%rcx,%rbp,1)
  23:	20 31                	and    %dh,(%rcx)
  25:	33 2e                	xor    (%rsi),%ebp
  27:	33 2e                	xor    (%rsi),%ebp
  29:	30 00                	xor    %al,(%rax)

Disassembly of section .note.sgxmeta:

0000000000000000 <.note.sgxmeta>:
       0:	0d 00 00 00 00       	or     $0x0,%eax
       5:	50                   	push   %rax
       6:	00 00                	add    %al,(%rax)
       8:	01 00                	add    %eax,(%rax)
       a:	00 00                	add    %al,(%rax)
       c:	73 67                	jae    75 <__ImageBase+0x75>
       e:	78 5f                	js     6f <__ImageBase+0x6f>
      10:	6d                   	insl   (%dx),%es:(%rdi)
      11:	65 74 61             	gs je  75 <__ImageBase+0x75>
      14:	64 61                	fs (bad) 
      16:	74 61                	je     79 <__ImageBase+0x79>
      18:	00 4c 0e 5d          	add    %cl,0x5d(%rsi,%rcx,1)
      1c:	63 94 02 a8 86 04 00 	movsxd 0x486a8(%rdx,%rax,1),%edx
      23:	00 00                	add    %al,(%rax)
      25:	01 00                	add    %eax,(%rax)
      27:	00 00                	add    %al,(%rax)
      29:	70 10                	jo     3b <__ImageBase+0x3b>
      2b:	00 00                	add    %al,(%rax)
      2d:	01 00                	add    %eax,(%rax)
      2f:	00 00                	add    %al,(%rax)
      31:	01 00                	add    %eax,(%rax)
      33:	00 00                	add    %al,(%rax)
      35:	80 0a 00             	orb    $0x0,(%rdx)
      38:	00 00                	add    %al,(%rax)
      3a:	00 00                	add    %al,(%rax)
      3c:	00 01                	add    %al,(%rcx)
      3e:	00 00                	add    %al,(%rax)
      40:	00 00                	add    %al,(%rax)
      42:	00 40 00             	add    %al,0x0(%rax)
      45:	00 00                	add    %al,(%rax)
      47:	00 00                	add    %al,(%rax)
      49:	04 00                	add    $0x0,%al
      4b:	00 00                	add    %al,(%rax)
      4d:	00 00                	add    %al,(%rax)
      4f:	00 00                	add    %al,(%rax)
      51:	e7 00                	out    %eax,$0x0
      53:	00 00                	add    %al,(%rax)
      55:	00 00                	add    %al,(%rax)
      57:	00 00                	add    %al,(%rax)
      59:	06                   	(bad)  
      5a:	00 00                	add    %al,(%rax)
      5c:	00 e1                	add    %ah,%cl
      5e:	00 00                	add    %al,(%rax)
      60:	00 00                	add    %al,(%rax)
      62:	00 01                	add    %al,(%rcx)
	...
      6c:	00 21                	add    %ah,(%rcx)
      6e:	04 25                	add    $0x25,%al
      70:	20 01                	and    %al,(%rcx)
      72:	01 00                	add    %eax,(%rax)
      74:	00 60 00             	add    %ah,0x0(%rax)
      77:	00 00                	add    %al,(%rax)
      79:	60                   	(bad)  
      7a:	00 00                	add    %al,(%rax)
      7c:	00 01                	add    %al,(%rcx)
	...
      d6:	00 00                	add    %al,(%rax)
      d8:	00 0d 5b d0 bf de    	add    %cl,-0x21402fa5(%rip)        # ffffffffdebfd139 <_end+0xffffffffdebd2129>
      de:	b1 3e                	mov    $0x3e,%cl
      e0:	f1                   	icebp  
      e1:	59                   	pop    %rcx
      e2:	2e 09 75 a3          	cs or  %esi,-0x5d(%rbp)
      e6:	2e ec                	cs in  (%dx),%al
      e8:	5c                   	pop    %rsp
      e9:	3e ee                	ds out %al,(%dx)
      eb:	c6                   	(bad)  
      ec:	77 a8                	ja     96 <__ImageBase+0x96>
      ee:	df e3                	(bad)  
      f0:	bf d3 03 c3 81       	mov    $0x81c303d3,%edi
      f5:	90                   	nop
      f6:	6e                   	outsb  %ds:(%rsi),(%dx)
      f7:	c2 8e bd             	ret    $0xbd8e
      fa:	07                   	(bad)  
      fb:	29 46 ec             	sub    %eax,-0x14(%rsi)
      fe:	f2 c3                	bnd ret 
     100:	b6 0d                	mov    $0xd,%dh
     102:	9e                   	sahf   
     103:	dc 3a                	fdivrl (%rdx)
     105:	f2 07                	repnz (bad) 
     107:	b6 23                	mov    $0x23,%dh
     109:	22 78 46             	and    0x46(%rax),%bh
     10c:	72 25                	jb     133 <__ImageBase+0x133>
     10e:	48 3b ea             	cmp    %rdx,%rbp
     111:	1d f4 d6 f4 c1       	sbb    $0xc1f4d6f4,%eax
     116:	f4                   	hlt    
     117:	5c                   	pop    %rsp
     118:	b5 c7                	mov    $0xc7,%ch
     11a:	b4 56                	mov    $0x56,%ah
     11c:	e2 8b                	loop   a9 <__ImageBase+0xa9>
     11e:	3c b7                	cmp    $0xb7,%al
     120:	55                   	push   %rbp
     121:	5d                   	pop    %rbp
     122:	ae                   	scas   %es:(%rdi),%al
     123:	7f 6f                	jg     194 <__ImageBase+0x194>
     125:	b9 54 42 89 fb       	mov    $0xfb894254,%ecx
     12a:	ed                   	in     (%dx),%eax
     12b:	f7 e7                	mul    %edi
     12d:	ba e2 50 26 95       	mov    $0x952650e2,%edx
     132:	b6 88                	mov    $0x88,%dh
     134:	1e                   	(bad)  
     135:	7e f6                	jle    12d <__ImageBase+0x12d>
     137:	0a df                	or     %bh,%bl
     139:	5e                   	pop    %rsi
     13a:	8d                   	(bad)  
     13b:	f9                   	stc    
     13c:	f2 a4                	repnz movsb %ds:(%rsi),%es:(%rdi)
     13e:	e5 5a                	in     $0x5a,%eax
     140:	aa                   	stos   %al,%es:(%rdi)
     141:	82                   	(bad)  
     142:	8d 42 e0             	lea    -0x20(%rdx),%eax
     145:	e8 88 66 77 c0       	call   ffffffffc07767d2 <_end+0xffffffffc074b7c2>
     14a:	1a a7 8f 64 66 35    	sbb    0x3566648f(%rdi),%ah
     150:	e6 ee                	out    %al,$0xee
     152:	88 80 7c 2c 87 6a    	mov    %al,0x6a872c7c(%rax)
     158:	6c                   	insb   (%dx),%es:(%rdi)
     159:	37                   	(bad)  
     15a:	d5                   	(bad)  
     15b:	71 58                	jno    1b5 <__ImageBase+0x1b5>
     15d:	e1 e9                	loope  148 <__ImageBase+0x148>
     15f:	26 d8 39             	es fdivrs (%rcx)
     162:	2a 36                	sub    (%rsi),%dh
     164:	df 7a 25             	fistpll 0x25(%rdx)
     167:	38 6b 25             	cmp    %ch,0x25(%rbx)
     16a:	2e 76 4f             	jbe,pn 1bc <__ImageBase+0x1bc>
     16d:	53                   	push   %rbx
     16e:	35 0f 80 ab 5b       	xor    $0x5bab800f,%eax
     173:	dd 0f                	fisttpll (%rdi)
     175:	8a bc 43 91 bf 2a 27 	mov    0x272abf91(%rbx,%rax,2),%bh
     17c:	3c 19                	cmp    $0x19,%al
     17e:	dd 3e                	fnstsw (%rsi)
     180:	ad                   	lods   %ds:(%rsi),%eax
     181:	97                   	xchg   %eax,%edi
     182:	11 a2 0e b3 73 d9    	adc    %esp,-0x268c4cf2(%rdx)
     188:	75 b3                	jne    13d <__ImageBase+0x13d>
     18a:	42 63 ef             	rex.X movsxd %edi,%ebp
     18d:	21 89 45 24 c6 cc    	and    %ecx,-0x3339dbbb(%rcx)
     193:	cb                   	lret   
     194:	eb 30                	jmp    1c6 <__ImageBase+0x1c6>
     196:	dd 76 ae             	fnsave -0x52(%rsi)
     199:	f1                   	icebp  
     19a:	ee                   	out    %al,(%dx)
     19b:	34 25                	xor    $0x25,%al
     19d:	1b 00                	sbb    (%rax),%eax
     19f:	50                   	push   %rax
     1a0:	7d 49                	jge    1eb <__ImageBase+0x1eb>
     1a2:	77 a5                	ja     149 <__ImageBase+0x149>
     1a4:	24 90                	and    $0x90,%al
     1a6:	7b 92                	jnp    13a <__ImageBase+0x13a>
     1a8:	24 96                	and    $0x96,%al
     1aa:	1b e6                	sbb    %esi,%esp
     1ac:	98                   	cwtl   
     1ad:	d6                   	(bad)  
     1ae:	42                   	rex.X
     1af:	36 3c 44             	ss cmp $0x44,%al
     1b2:	0c 6f                	or     $0x6f,%al
     1b4:	01 63 06             	add    %esp,0x6(%rbx)
     1b7:	17                   	(bad)  
     1b8:	8d 42 ac             	lea    -0x54(%rdx),%eax
     1bb:	7b 8b                	jnp    148 <__ImageBase+0x148>
     1bd:	a9 6d eb 67 dc       	test   $0xdc67eb6d,%eax
     1c2:	e7 ee                	out    %eax,$0xee
     1c4:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
     1c5:	ea                   	(bad)  
     1c6:	7e 59                	jle    221 <__ImageBase+0x221>
     1c8:	5e                   	pop    %rsi
     1c9:	05 96 f8 3d 2b       	add    $0x2b3df896,%eax
     1ce:	88 6d ee             	mov    %ch,-0x12(%rbp)
     1d1:	cd b6                	int    $0xb6
     1d3:	8b c0                	mov    %eax,%eax
     1d5:	10 da                	adc    %bl,%dl
     1d7:	bf 59 bb a0 ed       	mov    $0xeda0bb59,%edi
     1dc:	87 d3                	xchg   %edx,%ebx
     1de:	48                   	rex.W
     1df:	43 f1                	rex.XB icebp 
     1e1:	69 32 c8 06 7c 5c    	imul   $0x5c7c06c8,(%rdx),%esi
     1e7:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
     1e8:	c5 1a a9             	(bad)
     1eb:	e9 e1 00 20 a9       	jmp    ffffffffa92002d1 <_end+0xffffffffa91d52c1>
     1f0:	8d                   	(bad)  
     1f1:	e1 42                	loope  235 <__ImageBase+0x235>
     1f3:	9d                   	popf   
     1f4:	2b 71 4a             	sub    0x4a(%rcx),%esi
     1f7:	ff cb                	dec    %ebx
     1f9:	b6 d2                	mov    $0xd2,%dh
     1fb:	ac                   	lods   %ds:(%rsi),%al
     1fc:	c5 95 69 dd          	vpunpckhwd %ymm5,%ymm13,%ymm3
     200:	fa                   	cli    
     201:	ff 81 f2 06 b8 41    	incl   0x41b806f2(%rcx)
     207:	08 66 18             	or     %ah,0x18(%rsi)
     20a:	a3 bd a5 69 74 74 d9 	movabs %eax,0x8051d9747469a5bd
     211:	51 80 
     213:	ea                   	(bad)  
     214:	ac                   	lods   %ds:(%rsi),%al
     215:	87 23                	xchg   %esp,(%rbx)
     217:	0c 35                	or     $0x35,%al
     219:	cf                   	iret   
     21a:	05 ea db b0 b7       	add    $0xb7b0dbea,%eax
     21f:	e6 f8                	out    %al,$0xf8
     221:	5c                   	pop    %rsp
     222:	b5 05                	mov    $0x5,%ch
     224:	ff                   	(bad)  
     225:	7b 39                	jnp    260 <__ImageBase+0x260>
     227:	54                   	push   %rsp
     228:	a2 c3 73 4b d4 e3 c7 	movabs %al,0x2a18c7e3d44b73c3
     22f:	18 2a 
     231:	bb f1 76 d9 1c       	mov    $0x1cd976f1,%ebx
     236:	8d 57 1b             	lea    0x1b(%rdi),%edx
     239:	a1 36 85 7a e6 8d 65 	movabs 0xf30b658de67a8536,%eax
     240:	0b f3 
     242:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
     243:	8c 5b 93             	mov    %ds,-0x6d(%rbx)
     246:	9f                   	lahf   
     247:	b7 78                	mov    $0x78,%bh
     249:	6d                   	insl   (%dx),%es:(%rdi)
     24a:	1d ba 6e d7 93       	sbb    $0x93d76eba,%eax
     24f:	17                   	(bad)  
     250:	9f                   	lahf   
     251:	99                   	cltd   
     252:	09 d2                	or     %edx,%edx
     254:	02 fb                	add    %bl,%bh
     256:	38 0b                	cmp    %cl,(%rbx)
     258:	98                   	cwtl   
     259:	03 00                	add    (%rax),%eax
     25b:	00 00                	add    %al,(%rax)
     25d:	b0 db                	mov    $0xdb,%al
     25f:	84 aa 29 9c 43 09    	test   %ch,0x9439c29(%rdx)
     265:	b4 ff                	mov    $0xff,%ah
     267:	1a 00                	sbb    (%rax),%al
     269:	fc                   	cld    
     26a:	93                   	xchg   %eax,%ebx
     26b:	b1 4c                	mov    $0x4c,%cl
     26d:	c8 6a 61 f5          	enter  $0x616a,$0xf5
     271:	ac                   	lods   %ds:(%rsi),%al
     272:	e7 89                	out    %eax,$0x89
     274:	14 c7                	adc    $0xc7,%al
     276:	8c 8c e8 ce 11 10 16 	mov    %cs,0x161011ce(%rax,%rbp,8)
     27d:	3b 07                	cmp    (%rdi),%eax
     27f:	d4                   	(bad)  
     280:	0a e4                	or     %ah,%ah
     282:	46 15 49 66 68 f8    	rex.RX adc $0xf8686649,%eax
     288:	b7 89                	mov    $0x89,%bh
     28a:	78 4e                	js     2da <__ImageBase+0x2da>
     28c:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
     28d:	4e d8 73 66          	rex.WRX fdivs 0x66(%rbx)
     291:	6e                   	outsb  %ds:(%rsi),(%dx)
     292:	f6 e1                	mul    %cl
     294:	0f c6 08 09          	shufps $0x9,(%rax),%xmm1
     298:	5e                   	pop    %rsi
     299:	40 27                	rex (bad) 
     29b:	ed                   	in     (%dx),%eax
     29c:	8d 20                	lea    (%rax),%esp
     29e:	30 66 02             	xor    %ah,0x2(%rsi)
     2a1:	c5 dc de             	(bad)
     2a4:	08 a7 8c ad e9 90    	or     %ah,-0x6f165274(%rdi)
     2aa:	08 5b 3c             	or     %bl,0x3c(%rbx)
     2ad:	67 cf                	addr32 iret 
     2af:	cf                   	iret   
     2b0:	9f                   	lahf   
     2b1:	29 2f                	sub    %ebp,(%rdi)
     2b3:	07                   	(bad)  
     2b4:	58                   	pop    %rax
     2b5:	2f                   	(bad)  
     2b6:	f7 95 19 f8 60 83    	notl   -0x7c9f07e7(%rbp)
     2bc:	16                   	(bad)  
     2bd:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
     2be:	1a d3                	sbb    %bl,%dl
     2c0:	1d e3 90 b8 59       	sbb    $0x59b890e3,%eax
     2c5:	b2 73                	mov    $0x73,%dl
     2c7:	a8 36                	test   $0x36,%al
     2c9:	b4 52                	mov    $0x52,%ah
     2cb:	fb                   	sti    
     2cc:	ec                   	in     (%dx),%al
     2cd:	ea                   	(bad)  
     2ce:	8d                   	(bad)  
     2cf:	df 4a 3a             	fisttps 0x3a(%rdx)
     2d2:	80 53 89 42          	adcb   $0x42,-0x77(%rbx)
     2d6:	28 b4 b5 44 cf 7f 01 	sub    %dh,0x17fcf44(%rbp,%rsi,4)
     2dd:	8f                   	(bad)  
     2de:	1e                   	(bad)  
     2df:	eb 8e                	jmp    26f <__ImageBase+0x26f>
     2e1:	1b de                	sbb    %esi,%ebx
     2e3:	cb                   	lret   
     2e4:	1d 45 6c 5e 32       	sbb    $0x325e6c45,%eax
     2e9:	48 a5                	movsq  %ds:(%rsi),%es:(%rdi)
     2eb:	87 3c 5c             	xchg   %edi,(%rsp,%rbx,2)
     2ee:	39 0b                	cmp    %ecx,(%rbx)
     2f0:	df 04 29             	filds  (%rcx,%rbp,1)
     2f3:	c0 7d c5 49          	sarb   $0x49,-0x3b(%rbp)
     2f7:	93                   	xchg   %eax,%ebx
     2f8:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
     2f9:	99                   	cltd   
     2fa:	08 10                	or     %dl,(%rax)
     2fc:	f5                   	cmc    
     2fd:	10 fa                	adc    %bh,%dl
     2ff:	d6                   	(bad)  
     300:	1b 53 19             	sbb    0x19(%rbx),%edx
     303:	d2 a5 e7 4e 84 b4    	shlb   %cl,-0x4b7bb119(%rbp)
     309:	3f                   	(bad)  
     30a:	64 55                	fs push %rbp
     30c:	aa                   	stos   %al,%es:(%rdi)
     30d:	d3 25 c3 b9 77 19    	shll   %cl,0x1977b9c3(%rip)        # 1977bcd6 <_end+0x19750cc6>
     313:	a1 cd dd 98 33 25 79 	movabs 0x7b1379253398ddcd,%eax
     31a:	13 7b 
     31c:	1b 7f 8c             	sbb    -0x74(%rdi),%edi
     31f:	62                   	(bad)  
     320:	af                   	scas   %es:(%rdi),%eax
     321:	8d 2d 69 6e 60 e3    	lea    -0x1c9f9197(%rip),%ebp        # ffffffffe3607190 <_end+0xffffffffe35dc180>
     327:	d2 a4 65 ff e6 db 89 	shlb   %cl,-0x76241901(%rbp,%riz,2)
     32e:	a0 a0 38 60 90 b7 b3 	movabs 0x5466b3b7906038a0,%al
     335:	66 54 
     337:	94                   	xchg   %eax,%esp
     338:	d1 ae e7 4b 2b c9    	shrl   -0x36d4b419(%rsi)
     33e:	cd ef                	int    $0xef
     340:	f9                   	stc    
     341:	c0 ff 3a             	sar    $0x3a,%bh
     344:	78 03                	js     349 <__ImageBase+0x349>
     346:	7d 50                	jge    398 <__ImageBase+0x398>
     348:	95                   	xchg   %eax,%ebp
     349:	56                   	push   %rsi
     34a:	8c d6                	mov    %ss,%esi
     34c:	21 95 89 9f 55 18    	and    %edx,0x18559f89(%rbp)
     352:	cc                   	int3   
     353:	6b 05 85 74 be 45 0a 	imul   $0xa,0x45be7485(%rip),%eax        # 45be77df <_end+0x45bbc7cf>
     35a:	b7 31                	mov    $0x31,%bh
     35c:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
     35d:	d6                   	(bad)  
     35e:	03 0c ad 07 31 1b eb 	add    -0x14e4cef9(,%rbp,4),%ecx
     365:	00 22                	add    %ah,(%rdx)
     367:	62                   	(bad)  
     368:	7c bc                	jl     326 <__ImageBase+0x326>
     36a:	05 ed f3 fe b4       	add    $0xb4fef3ed,%eax
     36f:	98                   	cwtl   
     370:	8a 18                	mov    (%rax),%bl
     372:	f3 d2 9e 4e c8 09 b4 	repz rcrb %cl,-0x4bf637b2(%rsi)
     379:	6f                   	outsl  %ds:(%rsi),(%dx)
     37a:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
     37b:	f1                   	icebp  
     37c:	f9                   	stc    
     37d:	13 a2 1f 8b 16 81    	adc    -0x7ee974e1(%rdx),%esp
     383:	93                   	xchg   %eax,%ebx
     384:	a8 59                	test   $0x59,%al
     386:	d3 8d 94 15 ee 71    	rorl   %cl,0x71ee1594(%rbp)
     38c:	52                   	push   %rdx
     38d:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
     38e:	1a f4                	sbb    %ah,%dh
     390:	6e                   	outsb  %ds:(%rsi),(%dx)
     391:	db 24 25 ce 4d 9c 39 	(bad)  0x399c4dce
     398:	5a                   	pop    %rdx
     399:	82                   	(bad)  
     39a:	6d                   	insl   (%dx),%es:(%rdi)
     39b:	bd b7 59 9c af       	mov    $0xaf9c59b7,%ebp
     3a0:	b4 a7                	mov    $0xa7,%ah
     3a2:	a0 64 0b 16 7b 39 20 	movabs 0x928f20397b160b64,%al
     3a9:	8f 92 
     3ab:	91                   	xchg   %eax,%ecx
     3ac:	e2 29                	loop   3d7 <__ImageBase+0x3d7>
     3ae:	cb                   	lret   
     3af:	72 19                	jb     3ca <__ImageBase+0x3ca>
     3b1:	61                   	(bad)  
     3b2:	a1 b9 15 45 2b 6c 32 	movabs 0xeaeb326c2b4515b9,%eax
     3b9:	eb ea 
     3bb:	58                   	pop    %rax
     3bc:	fa                   	cli    
     3bd:	b2 4f                	mov    $0x4f,%dl
     3bf:	ac                   	lods   %ds:(%rsi),%al
     3c0:	c4                   	(bad)  
     3c1:	05 84 37 08 b3       	add    $0xb3083784,%eax
     3c6:	a3 c5 72 61 36 39 c5 	movabs %eax,0xba17c539366172c5
     3cd:	17 ba 
     3cf:	ee                   	out    %al,(%dx)
     3d0:	92                   	xchg   %eax,%edx
     3d1:	22 2d db a8 92 f1    	and    -0xe6d5725(%rip),%ch        # fffffffff192acb2 <_end+0xfffffffff18ffca2>
     3d7:	d0 e8                	shr    %al
     3d9:	d8 75 31             	fdivs  0x31(%rbp)
     3dc:	50                   	push   %rax
     3dd:	00 00                	add    %al,(%rax)
     3df:	00 00                	add    %al,(%rax)
     3e1:	ff                   	(bad)  
     3e2:	ff                   	(bad)  
     3e3:	ff                   	(bad)  
     3e4:	ff 00                	incl   (%rax)
	...
     3f6:	00 00                	add    %al,(%rax)
     3f8:	00 04 00             	add    %al,(%rax,%rax,1)
     3fb:	00 00                	add    %al,(%rax)
     3fd:	00 00                	add    %al,(%rax)
     3ff:	00 00                	add    %al,(%rax)
     401:	03 00                	add    (%rax),%eax
     403:	00 00                	add    %al,(%rax)
     405:	00 00                	add    %al,(%rax)
     407:	00 00                	add    %al,(%rax)
     409:	fd                   	std    
     40a:	ff                   	(bad)  
     40b:	ff                   	(bad)  
     40c:	ff                   	(bad)  
     40d:	ff                   	(bad)  
     40e:	ff 00                	incl   (%rax)
     410:	ff 1b                	lcall  *(%rbx)
     412:	ff                   	(bad)  
     413:	ff                   	(bad)  
     414:	ff                   	(bad)  
     415:	ff                   	(bad)  
     416:	ff                   	(bad)  
     417:	ff                   	(bad)  
     418:	ff                   	(bad)  
     419:	d9 36                	fnstenv (%rsi)
     41b:	e2 f6                	loop   413 <__ImageBase+0x413>
     41d:	ac                   	lods   %ds:(%rsi),%al
     41e:	33 41 5d             	xor    0x5d(%rcx),%eax
     421:	10 25 4a 98 a3 25    	adc    %ah,0x25a3984a(%rip)        # 25a39c71 <_end+0x25a0ec61>
     427:	70 5d                	jo     486 <__ImageBase+0x486>
     429:	e4 1f                	in     $0x1f,%al
     42b:	74 4c                	je     479 <__ImageBase+0x479>
     42d:	fa                   	cli    
     42e:	4a                   	rex.WX
     42f:	9b                   	fwait
     430:	d1 77 f5             	shll   -0xb(%rdi)
     433:	03 8e 43 40 7e 1a    	add    0x1a7e4043(%rsi),%ecx
	...
     469:	3b 20                	cmp    (%rax),%esp
     46b:	d9 c5                	fld    %st(5)
     46d:	aa                   	stos   %al,%es:(%rdi)
     46e:	4c 88 dd             	rex.WR mov %r11b,%bpl
     471:	27                   	(bad)  
     472:	25 63 6a 8f 06       	and    $0x68f6a63,%eax
     477:	26 59                	es pop %rcx
     479:	c2 96 81             	ret    $0x8196
     47c:	dd 1b                	fstpl  (%rbx)
     47e:	d5                   	(bad)  
     47f:	60                   	(bad)  
     480:	68 89 30 e8 4c       	push   $0x4ce83089
     485:	e8 5c 63 d8 d9       	call   ffffffffd9d867e6 <_end+0xffffffffd9d5b7d6>
     48a:	4d e3 bf             	rex.WRB jrcxz 44c <__ImageBase+0x44c>
     48d:	94                   	xchg   %eax,%esp
     48e:	99                   	cltd   
     48f:	ee                   	out    %al,(%dx)
     490:	3a 8c c9 be 57 b7 0e 	cmp    0xeb757be(%rcx,%rcx,8),%cl
     497:	d5                   	(bad)  
     498:	f6 20                	mulb   (%rax)
     49a:	08 46 f1             	or     %al,-0xf(%rsi)
     49d:	31 69 4d             	xor    %ebp,0x4d(%rcx)
     4a0:	21 c3                	and    %eax,%ebx
     4a2:	96                   	xchg   %eax,%esi
     4a3:	4f 6c                	rex.WRXB insb (%dx),%es:(%rdi)
     4a5:	19 cb                	sbb    %ecx,%ebx
     4a7:	35 15 3d 4e 42       	xor    $0x424e3d15,%eax
     4ac:	12 f3                	adc    %bl,%dh
     4ae:	1d c4 74 70 89       	sbb    $0x897074c4,%eax
     4b3:	6e                   	outsb  %ds:(%rsi),(%dx)
     4b4:	59                   	pop    %rcx
     4b5:	8b 7d af             	mov    -0x51(%rbp),%edi
     4b8:	85 a1 3e 7b d2 fb    	test   %esp,-0x42d84c2(%rcx)
     4be:	08 2c f7             	or     %ch,(%rdi,%rsi,8)
     4c1:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
     4c2:	5f                   	pop    %rdi
     4c3:	be da a4 91 5b       	mov    $0x5b91a4da,%esi
     4c8:	32 9e 87 03 bc e3    	xor    -0x1c43fc79(%rsi),%bl
     4ce:	86 1c c5 d8 95 2d e3 	xchg   %bl,-0x1cd26a28(,%rax,8)
     4d5:	5e                   	pop    %rsi
     4d6:	1e                   	(bad)  
     4d7:	05 ab ce 77 17       	add    $0x1777ceab,%eax
     4dc:	20 32                	and    %dh,(%rdx)
     4de:	7d 87                	jge    467 <__ImageBase+0x467>
     4e0:	6b 35 0d 4c 00 cd f3 	imul   $0xfffffff3,-0x32ffb3f3(%rip),%esi        # ffffffffcd0050f4 <_end+0xffffffffccfda0e4>
     4e7:	9b                   	fwait
     4e8:	89 4a 8c             	mov    %ecx,-0x74(%rdx)
     4eb:	cf                   	iret   
     4ec:	87 44 d1 30          	xchg   %eax,0x30(%rcx,%rdx,8)
     4f0:	0c e2                	or     $0xe2,%al
     4f2:	b3 41                	mov    $0x41,%bl
     4f4:	69 3b 84 72 c4 c3    	imul   $0xc3c47284,(%rbx),%edi
     4fa:	8c 18                	mov    %ds,(%rax)
     4fc:	f4                   	hlt    
     4fd:	7e 2c                	jle    52b <__ImageBase+0x52b>
     4ff:	6f                   	outsl  %ds:(%rsi),(%dx)
     500:	58                   	pop    %rax
     501:	4a e3 05             	rex.WX jrcxz 509 <__ImageBase+0x509>
     504:	e3 54                	jrcxz  55a <__ImageBase+0x55a>
     506:	e1 e0                	loope  4e8 <__ImageBase+0x4e8>
     508:	3d d9 89 1e 35       	cmp    $0x351e89d9,%eax
     50d:	4f 02 e4             	rex.WRXB add %r12b,%r12b
     510:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
     511:	84 2d 25 61 ed b6    	test   %ch,-0x49129edb(%rip)        # ffffffffb6ed663c <_end+0xffffffffb6eab62c>
     517:	83 8f fc 79 03 17 21 	orl    $0x21,0x170379fc(%rdi)
     51e:	74 06                	je     526 <__ImageBase+0x526>
     520:	05 a8 cd 5d 23       	add    $0x235dcda8,%eax
     525:	f6 f7                	div    %bh
     527:	ce                   	(bad)  
     528:	4c d9 7b e0          	rex.WR fnstcw -0x20(%rbx)
     52c:	0f b9 f9             	ud1    %ecx,%edi
     52f:	81 a4 6c 8d 21 ab 16 	andl   $0x76508513,0x16ab218d(%rsp,%rbp,2)
     536:	13 85 50 76 
     53a:	07                   	(bad)  
     53b:	ee                   	out    %al,(%dx)
     53c:	3a ba 34 67 11 40    	cmp    0x40116734(%rdx),%bh
     542:	0d a3 16 94 6d       	or     $0x6d9416a3,%eax
     547:	cd 98                	int    $0x98
     549:	b9 7a 32 6a 1e       	mov    $0x1e6a327a,%ecx
     54e:	09 8c 7f 70 24 cd 72 	or     %ecx,0x72cd2470(%rdi,%rdi,2)
     555:	38 bc d6 ed 53 ce c1 	cmp    %bh,-0x3e31ac13(%rsi,%rdx,8)
     55c:	74 7b                	je     5d9 <__ImageBase+0x5d9>
     55e:	21 07                	and    %eax,(%rdi)
     560:	8e e4                	mov    %esp,%fs
     562:	6c                   	insb   (%dx),%es:(%rdi)
     563:	bf dd f8 3d 5c       	mov    $0x5c3df8dd,%edi
     568:	23 88 54 45 b4 dc    	and    -0x234bbaac(%rax),%ecx
     56e:	2a ab 09 7b a5 d7    	sub    -0x285a84f7(%rbx),%ch
     574:	46 a7                	rex.RX cmpsl %es:(%rdi),%ds:(%rsi)
     576:	db 38                	fstpt  (%rax)
     578:	25 cf 1b ec b9       	and    $0xb9ec1bcf,%eax
     57d:	0a 76 9c             	or     -0x64(%rsi),%dh
     580:	8a 36                	mov    (%rsi),%dh
     582:	f6 03 0b             	testb  $0xb,(%rbx)
     585:	bb 00 29 34 0a       	mov    $0xa342900,%ebx
     58a:	a9 d4 ac 0d d8       	test   $0xd80dacd4,%eax
     58f:	d3 13                	rcll   %cl,(%rbx)
     591:	71 60                	jno    5f3 <__ImageBase+0x5f3>
     593:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
     594:	44 a4                	rex.R movsb %ds:(%rsi),%es:(%rdi)
     596:	75 34                	jne    5cc <__ImageBase+0x5cc>
     598:	2d 1c 6e ed 91       	sub    $0x91ed6e1c,%eax
     59d:	ab                   	stos   %eax,%es:(%rdi)
     59e:	34 0d                	xor    $0xd,%al
     5a0:	56                   	push   %rsi
     5a1:	c4                   	(bad)  
     5a2:	31 26                	xor    %esp,(%rsi)
     5a4:	1b de                	sbb    %esi,%ebx
     5a6:	c8 cd 7e 2d          	enter  $0x7ecd,$0x2d
     5aa:	d4                   	(bad)  
     5ab:	d2 a3 33 29 86 8e    	shlb   %cl,-0x7179d6cd(%rbx)
     5b1:	30 3e                	xor    %bh,(%rsi)
     5b3:	cc                   	int3   
     5b4:	da aa c7 bb 56 f1    	fisubrl -0xea94439(%rdx)
     5ba:	cb                   	lret   
     5bb:	d1 0a                	rorl   (%rdx)
     5bd:	bd 30 13 23 13       	mov    $0x13231330,%ebp
     5c2:	aa                   	stos   %al,%es:(%rdi)
     5c3:	e6 c0                	out    %al,$0xc0
     5c5:	33 2c 7f             	xor    (%rdi,%rdi,2),%ebp
     5c8:	69 42 65 7c 9e 44 94 	imul   $0x94449e7c,0x65(%rdx),%eax
     5cf:	cd e3                	int    $0xe3
     5d1:	94                   	xchg   %eax,%esp
     5d2:	da 55 c3             	ficoml -0x3d(%rbp)
     5d5:	26 9d                	es popf 
     5d7:	cc                   	int3   
     5d8:	7a 54                	jp     62e <__ImageBase+0x62e>
     5da:	3d 24 55 9a 3c       	cmp    $0x3c9a5524,%eax
     5df:	1a 0f                	sbb    (%rdi),%cl
     5e1:	68 51 ed 5f 6c       	push   $0x6c5fed51
     5e6:	f3 4b 2a a0 d1 d8 02 	repz rex.WXB sub -0xffd272f(%r8),%spl
     5ed:	f0 
     5ee:	a9 af 63 44 4a       	test   $0x4a4463af,%eax
     5f3:	f9                   	stc    
     5f4:	69 95 b4 f6 62 c1 fd 	imul   $0xdabdd0fd,-0x3e9d094c(%rbp),%edx
     5fb:	d0 bd da 
     5fe:	6e                   	outsb  %ds:(%rsi),(%dx)
     5ff:	29 00                	sub    %eax,(%rax)
     601:	f2 32 c4             	repnz xor %ah,%al
     604:	9d                   	popf   
     605:	d8 46 75             	fadds  0x75(%rsi)
     608:	db e1                	fndisi(8087 only) 
     60a:	cf                   	iret   
     60b:	55                   	push   %rbp
     60c:	5e                   	pop    %rsi
     60d:	f8                   	clc    
     60e:	36 7b 00             	ss jnp 611 <__ImageBase+0x611>
     611:	c1 96 5d 25 7d 54 88 	rcll   $0x88,0x547d255d(%rsi)
     618:	56                   	push   %rsi
     619:	ec                   	in     (%dx),%al
     61a:	6a b1                	push   $0xffffffffffffffb1
     61c:	ce                   	(bad)  
     61d:	ac                   	lods   %ds:(%rsi),%al
     61e:	a9 a4 5c de f4       	test   $0xf4de5ca4,%eax
     623:	7b e7                	jnp    60c <__ImageBase+0x60c>
     625:	92                   	xchg   %eax,%edx
     626:	bb 71 d5 9a 95       	mov    $0x959ad571,%ebx
     62b:	55                   	push   %rbp
     62c:	3c 1b                	cmp    $0x1b,%al
     62e:	34 59                	xor    $0x59,%al
     630:	65 f5                	gs cmc 
     632:	f2 03 8a db 27 85 10 	repnz add 0x108527db(%rdx),%ecx
     639:	6a bc                	push   $0xffffffffffffffbc
     63b:	04 1b                	add    $0x1b,%al
     63d:	ae                   	scas   %es:(%rdi),%al
     63e:	7d d2                	jge    612 <__ImageBase+0x612>
     640:	8d 36                	lea    (%rsi),%esi
     642:	4d d4                	rex.WRB (bad) 
     644:	d4                   	(bad)  
     645:	b7 a7                	mov    $0xa7,%bh
     647:	54                   	push   %rsp
     648:	08 f0                	or     %dh,%al
     64a:	40 62                	rex (bad) 
     64c:	26 64 88 be 61 b5 63 	es mov %bh,%fs:-0x209c4a9f(%rsi)
     653:	df 
     654:	b4 eb                	mov    $0xeb,%ah
     656:	8f 85 c3 f0 25 aa    	pop    -0x55da0f3d(%rbp)
     65c:	bc fe a0 2f d7       	mov    $0xd72fa0fe,%esp
     661:	ef                   	out    %eax,(%dx)
     662:	ea                   	(bad)  
     663:	a3 7f e1 c1 63 ce bd 	movabs %eax,0x6b62bdce63c1e17f
     66a:	62 6b 
     66c:	c4                   	(bad)  
     66d:	fc                   	cld    
     66e:	c1 84 de 09 da b7 0d 	roll   $0xcf,0xdb7da09(%rsi,%rbx,8)
     675:	cf 
     676:	3e 36 19 7c b3 4a    	ds ss sbb %edi,0x4a(%rbx,%rsi,4)
     67c:	3f                   	(bad)  
     67d:	25 4c 09 0d 22       	and    $0x220d094c,%eax
     682:	b1 65                	mov    $0x65,%cl
     684:	b0 13                	mov    $0x13,%al
     686:	42 8a b0 14 5c 10 cd 	rex.X mov -0x32efa3ec(%rax),%sil
     68d:	b9 61 88 91 b8       	mov    $0xb8918861,%ecx
     692:	74 da                	je     66e <__ImageBase+0x66e>
     694:	1b ae 4c 04 2e 6f    	sbb    0x6f2e044c(%rsi),%ebp
     69a:	e7 90                	out    %eax,$0x90
     69c:	22 f0                	and    %al,%dh
     69e:	ba 03 b5 39 d6       	mov    $0xd639b503,%edx
     6a3:	9c                   	pushf  
     6a4:	b4 56                	mov    $0x56,%ah
     6a6:	86 1d 1d 9f d1 07    	xchg   %bl,0x7d19f1d(%rip)        # 7d1a5c9 <_end+0x7cef5b9>
     6ac:	8c b0 13 99 0b 26    	mov    %?,0x260b9913(%rax)
     6b2:	45                   	rex.RB
     6b3:	f2 2d 5f 66 cd e0    	repnz sub $0xe0cd665f,%eax
     6b9:	d4                   	(bad)  
     6ba:	bf 59 1f 91 82       	mov    $0x82911f59,%edi
     6bf:	73 81                	jae    642 <__ImageBase+0x642>
     6c1:	86 36                	xchg   %dh,(%rsi)
     6c3:	e8 c2 6c 9d cc       	call   ffffffffcc9d738a <_end+0xffffffffcc9ac37a>
     6c8:	50                   	push   %rax
     6c9:	df 05 88 94 93 26    	filds  0x26939488(%rip)        # 26939b57 <_end+0x2690eb47>
     6cf:	ed                   	in     (%dx),%eax
     6d0:	67 e4 71             	addr32 in $0x71,%al
     6d3:	bb 87 dc ce 84       	mov    $0x84cedc87,%ebx
     6d8:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
     6d9:	50                   	push   %rax
     6da:	11 1f                	adc    %ebx,(%rdi)
     6dc:	43 88 2f             	rex.XB mov %bpl,(%r15)
     6df:	bb b4 1c 95 68       	mov    $0x68951cb4,%ebx
     6e4:	90                   	nop
     6e5:	fb                   	sti    
     6e6:	0d af 91 88 71       	or     $0x718891af,%eax
     6eb:	60                   	(bad)  
     6ec:	5d                   	pop    %rbp
     6ed:	25 77 0e c6 40       	and    $0x40c60e77,%eax
     6f2:	60                   	(bad)  
     6f3:	90                   	nop
     6f4:	91                   	xchg   %eax,%ecx
     6f5:	20 3a                	and    %bh,(%rdx)
     6f7:	79 36                	jns    72f <__ImageBase+0x72f>
     6f9:	24 c0                	and    $0xc0,%al
     6fb:	80 e8 01             	sub    $0x1,%al
     6fe:	7f 9d                	jg     69d <__ImageBase+0x69d>
     700:	c6 05 f2 1d 57 6c eb 	movb   $0xeb,0x6c571df2(%rip)        # 6c5724f9 <_end+0x6c5474e9>
     707:	d5                   	(bad)  
     708:	b2 4d                	mov    $0x4d,%dl
     70a:	67 e4 4c             	addr32 in $0x4c,%al
     70d:	c0 77 6d 61          	shlb   $0x61,0x6d(%rdi)
     711:	97                   	xchg   %eax,%edi
     712:	07                   	(bad)  
     713:	68 63 2b 50 3b       	push   $0x3b502b63
     718:	7b a7                	jnp    6c1 <__ImageBase+0x6c1>
     71a:	27                   	(bad)  
     71b:	64 5e                	fs pop %rsi
     71d:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
     71e:	6e                   	outsb  %ds:(%rsi),(%dx)
     71f:	1d 47 98 e9 5d       	sbb    $0x5de99847,%eax
     724:	b3 9d                	mov    $0x9d,%bl
     726:	da 40 8c             	fiaddl -0x74(%rax)
     729:	0b 92 2c e5 59 3c    	or     0x3c59e52c(%rdx),%edx
     72f:	a8 96                	test   $0x96,%al
     731:	bb ad 2f 80 c8       	mov    $0xc8802fad,%ebx
     736:	65 ab                	gs stos %eax,%es:(%rdi)
     738:	6d                   	insl   (%dx),%es:(%rdi)
     739:	09 0e                	or     %ecx,(%rsi)
     73b:	c9                   	leave  
     73c:	3d 7f 63 32 c4       	cmp    $0xc432637f,%eax
     741:	e1 e5                	loope  728 <__ImageBase+0x728>
     743:	c6 40 8b 1d          	movb   $0x1d,-0x75(%rax)
     747:	1c 3a                	sbb    $0x3a,%al
     749:	af                   	scas   %es:(%rdi),%eax
     74a:	9f                   	lahf   
     74b:	31 8b 83 48 c0 ea    	xor    %ecx,-0x153fb77d(%rbx)
     751:	33 ba b7 5a b4 7f    	xor    0x7fb45ab7(%rdx),%edi
     757:	2a 23                	sub    (%rbx),%ah
     759:	47 54                	rex.RXB push %r12
     75b:	05 70 13 bc bf       	add    $0xbfbc1370,%eax
     760:	ec                   	in     (%dx),%al
     761:	d8 f0                	fdiv   %st(0),%st
     763:	35 69 1b 2d be       	xor    $0xbe2d1b69,%eax
     768:	38 90 0e 00 00 80    	cmp    %dl,-0x7ffffff2(%rax)
     76e:	00 00                	add    %al,(%rax)
     770:	00 10                	add    %dl,(%rax)
     772:	0f 00 00             	sldt   (%rax)
     775:	60                   	(bad)  
     776:	01 00                	add    %eax,(%rax)
	...
     788:	00 00                	add    %al,(%rax)
     78a:	10 00                	adc    %al,(%rax)
	...
     794:	00 02                	add    %al,(%rdx)
     796:	00 00                	add    %al,(%rax)
     798:	00 5f 21             	add    %bl,0x21(%rdi)
     79b:	01 00                	add    %eax,(%rax)
	...
     7a9:	00 30                	add    %dh,(%rax)
     7ab:	01 00                	add    %eax,(%rax)
     7ad:	00 00                	add    %al,(%rax)
     7af:	00 00                	add    %al,(%rax)
     7b1:	00 30                	add    %dh,(%rax)
     7b3:	01 00                	add    %eax,(%rax)
     7b5:	00 00                	add    %al,(%rax)
     7b7:	00 00                	add    %al,(%rax)
     7b9:	ff                   	(bad)  
     7ba:	ff                   	(bad)  
     7bb:	ff                   	(bad)  
     7bc:	ff                   	(bad)  
     7bd:	ff                   	(bad)  
     7be:	ff                   	(bad)  
     7bf:	ff                   	(bad)  
     7c0:	ff 00                	incl   (%rax)
	...
     7ca:	00 40 00             	add    %al,0x0(%rax)
     7cd:	00 00                	add    %al,(%rax)
     7cf:	00 00                	add    %al,(%rax)
     7d1:	00 c0                	add    %al,%al
     7d3:	02 00                	add    (%rax),%al
     7d5:	00 00                	add    %al,(%rax)
     7d7:	00 00                	add    %al,(%rax)
     7d9:	00 00                	add    %al,(%rax)
     7db:	10 00                	adc    %al,(%rax)
	...
     7f9:	01 00                	add    %eax,(%rax)
     7fb:	00 00                	add    %al,(%rax)
     7fd:	00 00                	add    %al,(%rax)
     7ff:	00 00                	add    %al,(%rax)
     801:	02 00                	add    (%rax),%al
     803:	00 00                	add    %al,(%rax)
     805:	00 00                	add    %al,(%rax)
     807:	00 00                	add    %al,(%rax)
     809:	02 00                	add    (%rax),%al
     80b:	00 00                	add    %al,(%rax)
     80d:	00 00                	add    %al,(%rax)
     80f:	00 00                	add    %al,(%rax)
     811:	00 30                	add    %dh,(%rax)
     813:	01 00                	add    %eax,(%rax)
     815:	00 00                	add    %al,(%rax)
     817:	00 00                	add    %al,(%rax)
     819:	00 00                	add    %al,(%rax)
     81b:	ff                   	(bad)  
     81c:	ff                   	(bad)  
     81d:	ff                   	(bad)  
     81e:	ff                   	(bad)  
     81f:	ff                   	(bad)  
     820:	ff 00                	incl   (%rax)
     822:	00 ff                	add    %bh,%bh
     824:	ff                   	(bad)  
     825:	ff                   	(bad)  
     826:	ff                   	(bad)  
     827:	ff                   	(bad)  
     828:	ff 00                	incl   (%rax)
     82a:	00 fb                	add    %bh,%bl
     82c:	ff                   	(bad)  
     82d:	ff                   	(bad)  
     82e:	ff                   	(bad)  
     82f:	ff                   	(bad)  
     830:	ff 48 1f             	decl   0x1f(%rax)
	...
     847:	00 00                	add    %al,(%rax)
     849:	80 0a 00             	orb    $0x0,(%rdx)
	...
     868:	00 00                	add    %al,(%rax)
     86a:	10 00                	adc    %al,(%rax)
	...
     878:	00 00                	add    %al,(%rax)
     87a:	30 01                	xor    %al,(%rcx)
     87c:	00 00                	add    %al,(%rax)
     87e:	00 00                	add    %al,(%rax)
     880:	00 68 30             	add    %ch,0x30(%rax)
     883:	01 00                	add    %eax,(%rax)
	...
     8e1:	00 10                	add    %dl,(%rax)
	...
     8eb:	00 00                	add    %al,(%rax)
     8ed:	02 00                	add    (%rax),%al
     8ef:	00 00                	add    %al,(%rax)
     8f1:	5f                   	pop    %rdi
     8f2:	21 01                	and    %eax,(%rcx)
	...
     900:	00 00                	add    %al,(%rax)
     902:	30 01                	xor    %al,(%rcx)
     904:	00 00                	add    %al,(%rax)
     906:	00 00                	add    %al,(%rax)
     908:	00 00                	add    %al,(%rax)
     90a:	30 01                	xor    %al,(%rcx)
     90c:	00 00                	add    %al,(%rax)
     90e:	00 00                	add    %al,(%rax)
     910:	00 ff                	add    %bh,%bh
     912:	ff                   	(bad)  
     913:	ff                   	(bad)  
     914:	ff                   	(bad)  
     915:	ff                   	(bad)  
     916:	ff                   	(bad)  
     917:	ff                   	(bad)  
     918:	ff 13                	call   *(%rbx)
     91a:	00 00                	add    %al,(%rax)
     91c:	00 00                	add    %al,(%rax)
     91e:	00 00                	add    %al,(%rax)
     920:	00 01                	add    %al,(%rcx)
     922:	00 01                	add    %al,(%rcx)
     924:	00 01                	add    %al,(%rcx)
     926:	00 00                	add    %al,(%rax)
     928:	00 00                	add    %al,(%rax)
     92a:	c0 02 00             	rolb   $0x0,(%rdx)
	...
     939:	03 02                	add    (%rdx),%eax
     93b:	00 00                	add    %al,(%rax)
     93d:	00 00                	add    %al,(%rax)
     93f:	00 00                	add    %al,(%rax)
     941:	02 00                	add    (%rax),%al
     943:	19 00                	sbb    %eax,(%rax)
     945:	ff 00                	incl   (%rax)
     947:	00 00                	add    %al,(%rax)
     949:	00 d0                	add    %dl,%al
     94b:	02 00                	add    (%rax),%al
	...
     959:	03 02                	add    (%rdx),%eax
     95b:	00 00                	add    %al,(%rax)
     95d:	00 00                	add    %al,(%rax)
     95f:	00 00                	add    %al,(%rax)
     961:	0a 00                	or     (%rax),%al
     963:	00 00                	add    %al,(%rax)
     965:	10 00                	adc    %al,(%rax)
     967:	00 00                	add    %al,(%rax)
     969:	00 c0                	add    %al,%al
     96b:	12 00                	adc    (%rax),%al
	...
     981:	07                   	(bad)  
     982:	00 5b 00             	add    %bl,0x0(%rbx)
     985:	3e 00 00             	ds add %al,(%rax)
     988:	00 00                	add    %al,(%rax)
     98a:	c0 13 00             	rclb   $0x0,(%rbx)
     98d:	00 00                	add    %al,(%rax)
     98f:	00 00                	add    %al,(%rax)
     991:	cc                   	int3   
     992:	cc                   	int3   
     993:	cc                   	int3   
     994:	cc                   	int3   
     995:	00 00                	add    %al,(%rax)
     997:	00 00                	add    %al,(%rax)
     999:	03 02                	add    (%rdx),%eax
     99b:	00 00                	add    %al,(%rax)
     99d:	00 00                	add    %al,(%rax)
     99f:	00 00                	add    %al,(%rax)
     9a1:	08 00                	or     %al,(%rax)
     9a3:	03 00                	add    (%rax),%eax
     9a5:	02 00                	add    (%rax),%al
     9a7:	00 00                	add    %al,(%rax)
     9a9:	00 a0 17 00 00 00    	add    %ah,0x17(%rax)
     9af:	00 00                	add    %al,(%rax)
     9b1:	cc                   	int3   
     9b2:	cc                   	int3   
     9b3:	cc                   	int3   
     9b4:	cc                   	int3   
     9b5:	00 00                	add    %al,(%rax)
     9b7:	00 00                	add    %al,(%rax)
     9b9:	03 02                	add    (%rdx),%eax
     9bb:	00 00                	add    %al,(%rax)
     9bd:	00 00                	add    %al,(%rax)
     9bf:	00 00                	add    %al,(%rax)
     9c1:	0a 00                	or     (%rax),%al
     9c3:	00 00                	add    %al,(%rax)
     9c5:	10 00                	adc    %al,(%rax)
     9c7:	00 00                	add    %al,(%rax)
     9c9:	00 c0                	add    %al,%al
     9cb:	17                   	(bad)  
	...
     9e0:	00 04 00             	add    %al,(%rax,%rax,1)
     9e3:	03 00                	add    (%rax),%eax
     9e5:	01 00                	add    %eax,(%rax)
     9e7:	00 00                	add    %al,(%rax)
     9e9:	00 c0                	add    %al,%al
     9eb:	18 00                	sbb    %al,(%rax)
     9ed:	00 00                	add    %al,(%rax)
     9ef:	00 00                	add    %al,(%rax)
     9f1:	48 00 00             	rex.W add %al,(%rax)
     9f4:	00 60 07             	add    %ah,0x7(%rax)
     9f7:	00 00                	add    %al,(%rax)
     9f9:	00 01                	add    %al,(%rcx)
     9fb:	00 00                	add    %al,(%rax)
     9fd:	00 00                	add    %al,(%rax)
     9ff:	00 00                	add    %al,(%rax)
     a01:	06                   	(bad)  
     a02:	00 03                	add    %al,(%rbx)
     a04:	00 02                	add    %al,(%rdx)
     a06:	00 00                	add    %al,(%rax)
     a08:	00 00                	add    %al,(%rax)
     a0a:	d0 18                	rcrb   (%rax)
	...
     a18:	00 03                	add    %al,(%rbx)
     a1a:	02 00                	add    (%rax),%al
     a1c:	00 00                	add    %al,(%rax)
     a1e:	00 00                	add    %al,(%rax)
     a20:	00 0a                	add    %cl,(%rdx)
     a22:	00 00                	add    %al,(%rax)
     a24:	00 10                	add    %dl,(%rax)
     a26:	00 00                	add    %al,(%rax)
     a28:	00 00                	add    %al,(%rax)
     a2a:	f0 18 00             	lock sbb %al,(%rax)
	...
     a41:	05 00 03 00 01       	add    $0x1000300,%eax
     a46:	00 00                	add    %al,(%rax)
     a48:	00 00                	add    %al,(%rax)
     a4a:	f0 19 00             	lock sbb %eax,(%rax)
	...
     a59:	03 02                	add    (%rdx),%eax
     a5b:	00 00                	add    %al,(%rax)
     a5d:	00 00                	add    %al,(%rax)
     a5f:	00 00                	add    %al,(%rax)
     a61:	0a 00                	or     (%rax),%al
     a63:	00 00                	add    %al,(%rax)
     a65:	10 00                	adc    %al,(%rax)
     a67:	00 00                	add    %al,(%rax)
     a69:	00 00                	add    %al,(%rax)
     a6b:	1a 00                	sbb    (%rax),%al
	...
     a81:	07                   	(bad)  
     a82:	00 43 00             	add    %al,0x0(%rbx)
     a85:	3e 00 00             	ds add %al,(%rax)
     a88:	00 00                	add    %al,(%rax)
     a8a:	00 1b                	add    %bl,(%rbx)
     a8c:	00 00                	add    %al,(%rax)
     a8e:	00 00                	add    %al,(%rax)
     a90:	00 cc                	add    %cl,%ah
     a92:	cc                   	int3   
     a93:	cc                   	int3   
     a94:	cc                   	int3   
     a95:	00 00                	add    %al,(%rax)
     a97:	00 00                	add    %al,(%rax)
     a99:	03 02                	add    (%rdx),%eax
     a9b:	00 00                	add    %al,(%rax)
     a9d:	00 00                	add    %al,(%rax)
     a9f:	00 00                	add    %al,(%rax)
     aa1:	08 00                	or     %al,(%rax)
     aa3:	03 00                	add    (%rax),%eax
     aa5:	02 00                	add    (%rax),%al
     aa7:	00 00                	add    %al,(%rax)
     aa9:	00 e0                	add    %ah,%al
     aab:	1e                   	(bad)  
     aac:	00 00                	add    %al,(%rax)
     aae:	00 00                	add    %al,(%rax)
     ab0:	00 cc                	add    %cl,%ah
     ab2:	cc                   	int3   
     ab3:	cc                   	int3   
     ab4:	cc                   	int3   
     ab5:	00 00                	add    %al,(%rax)
     ab7:	00 00                	add    %al,(%rax)
     ab9:	03 02                	add    (%rdx),%eax
     abb:	00 00                	add    %al,(%rax)
     abd:	00 00                	add    %al,(%rax)
     abf:	00 00                	add    %al,(%rax)
     ac1:	0a 00                	or     (%rax),%al
     ac3:	00 00                	add    %al,(%rax)
     ac5:	10 00                	adc    %al,(%rax)
     ac7:	00 00                	add    %al,(%rax)
     ac9:	00 00                	add    %al,(%rax)
     acb:	1f                   	(bad)  
	...
     ae0:	00 04 00             	add    %al,(%rax,%rax,1)
     ae3:	03 00                	add    (%rax),%eax
     ae5:	01 00                	add    %eax,(%rax)
     ae7:	00 00                	add    %al,(%rax)
     ae9:	00 00                	add    %al,(%rax)
     aeb:	20 00                	and    %al,(%rax)
     aed:	00 00                	add    %al,(%rax)
     aef:	00 00                	add    %al,(%rax)
     af1:	48 00 00             	rex.W add %al,(%rax)
     af4:	00 60 07             	add    %ah,0x7(%rax)
     af7:	00 00                	add    %al,(%rax)
     af9:	00 01                	add    %al,(%rcx)
     afb:	00 00                	add    %al,(%rax)
     afd:	00 00                	add    %al,(%rax)
     aff:	00 00                	add    %al,(%rax)
     b01:	06                   	(bad)  
     b02:	00 03                	add    %al,(%rbx)
     b04:	00 02                	add    %al,(%rdx)
     b06:	00 00                	add    %al,(%rax)
     b08:	00 00                	add    %al,(%rax)
     b0a:	10 20                	adc    %ah,(%rax)
	...
     b18:	00 03                	add    %al,(%rbx)
     b1a:	02 00                	add    (%rax),%al
     b1c:	00 00                	add    %al,(%rax)
     b1e:	00 00                	add    %al,(%rax)
     b20:	00 0a                	add    %cl,(%rdx)
     b22:	00 00                	add    %al,(%rax)
     b24:	00 10                	add    %dl,(%rax)
     b26:	00 00                	add    %al,(%rax)
     b28:	00 00                	add    %al,(%rax)
     b2a:	30 20                	xor    %ah,(%rax)
	...
     b40:	00 05 00 03 00 01    	add    %al,0x1000300(%rip)        # 1000e46 <_end+0xfd5e36>
     b46:	00 00                	add    %al,(%rax)
     b48:	00 00                	add    %al,(%rax)
     b4a:	30 21                	xor    %ah,(%rcx)
	...
     b58:	00 03                	add    %al,(%rbx)
     b5a:	02 00                	add    (%rax),%al
     b5c:	00 00                	add    %al,(%rax)
     b5e:	00 00                	add    %al,(%rax)
     b60:	00 0a                	add    %cl,(%rdx)
     b62:	00 00                	add    %al,(%rax)
     b64:	00 ec                	add    %ch,%ah
     b66:	01 00                	add    %eax,(%rax)
     b68:	00 00                	add    %al,(%rax)
     b6a:	40 21 00             	rex and %eax,(%rax)
	...
     e91:	00 00                	add    %al,(%rax)
     e93:	40 00 00             	rex add %al,(%rax)
	...
     ea6:	00 00                	add    %al,(%rax)
     ea8:	00 80 31 01 00 00    	add    %al,0x131(%rax)
     eae:	00 00                	add    %al,(%rax)
     eb0:	00 a8 07 00 00 e0    	add    %ch,-0x1ffffff9(%rax)
     eb6:	06                   	(bad)  
	...
     ec7:	00 00                	add    %al,(%rax)
     ec9:	3c 00                	cmp    $0x0,%al
     ecb:	00 00                	add    %al,(%rax)
     ecd:	00 00                	add    %al,(%rax)
     ecf:	00 00                	add    %al,(%rax)
     ed1:	88 0e                	mov    %cl,(%rsi)
     ed3:	00 00                	add    %al,(%rax)
     ed5:	02 00                	add    (%rax),%al
	...
     ee7:	00 00                	add    %al,(%rax)
     ee9:	28 00                	sub    %al,(%rax)
     eeb:	00 00                	add    %al,(%rax)
     eed:	00 00                	add    %al,(%rax)
     eef:	00 00                	add    %al,(%rax)
     ef1:	88 0e                	mov    %cl,(%rsi)
     ef3:	00 00                	add    %al,(%rax)
     ef5:	08 00                	or     %al,(%rax)
	...
     f07:	00 00                	add    %al,(%rax)
     f09:	3e 00 00             	ds add %al,(%rax)
     f0c:	00 00                	add    %al,(%rax)
     f0e:	00 00                	add    %al,(%rax)
     f10:	00 88 0e 00 00 02    	add    %cl,0x200000e(%rax)
	...
     f26:	00 00                	add    %al,(%rax)
     f28:	00 01                	add    %al,(%rcx)
     f2a:	00 01                	add    %al,(%rcx)
     f2c:	00 01                	add    %al,(%rcx)
     f2e:	00 00                	add    %al,(%rax)
     f30:	00 00                	add    %al,(%rax)
     f32:	c0 02 00             	rolb   $0x0,(%rdx)
	...
     f41:	03 02                	add    (%rdx),%eax
     f43:	00 00                	add    %al,(%rax)
     f45:	00 00                	add    %al,(%rax)
     f47:	00 00                	add    %al,(%rax)
     f49:	02 00                	add    (%rax),%al
     f4b:	11 00                	adc    %eax,(%rax)
     f4d:	ff 00                	incl   (%rax)
     f4f:	00 00                	add    %al,(%rax)
     f51:	00 d0                	add    %dl,%al
     f53:	02 00                	add    (%rax),%al
	...
     f61:	03 02                	add    (%rdx),%eax
     f63:	00 00                	add    %al,(%rax)
     f65:	00 00                	add    %al,(%rax)
     f67:	00 00                	add    %al,(%rax)
     f69:	0a 00                	or     (%rax),%al
     f6b:	00 00                	add    %al,(%rax)
     f6d:	10 00                	adc    %al,(%rax)
     f6f:	00 00                	add    %al,(%rax)
     f71:	00 c0                	add    %al,%al
     f73:	12 00                	adc    (%rax),%al
	...
     f89:	07                   	(bad)  
     f8a:	00 53 00             	add    %dl,0x0(%rbx)
     f8d:	3e 00 00             	ds add %al,(%rax)
     f90:	00 00                	add    %al,(%rax)
     f92:	c0 13 00             	rclb   $0x0,(%rbx)
     f95:	00 00                	add    %al,(%rax)
     f97:	00 00                	add    %al,(%rax)
     f99:	cc                   	int3   
     f9a:	cc                   	int3   
     f9b:	cc                   	int3   
     f9c:	cc                   	int3   
     f9d:	00 00                	add    %al,(%rax)
     f9f:	00 00                	add    %al,(%rax)
     fa1:	03 02                	add    (%rdx),%eax
     fa3:	00 00                	add    %al,(%rax)
     fa5:	00 00                	add    %al,(%rax)
     fa7:	00 00                	add    %al,(%rax)
     fa9:	08 00                	or     %al,(%rax)
     fab:	03 00                	add    (%rax),%eax
     fad:	02 00                	add    (%rax),%al
     faf:	00 00                	add    %al,(%rax)
     fb1:	00 a0 17 00 00 00    	add    %ah,0x17(%rax)
     fb7:	00 00                	add    %al,(%rax)
     fb9:	cc                   	int3   
     fba:	cc                   	int3   
     fbb:	cc                   	int3   
     fbc:	cc                   	int3   
     fbd:	00 00                	add    %al,(%rax)
     fbf:	00 00                	add    %al,(%rax)
     fc1:	03 02                	add    (%rdx),%eax
     fc3:	00 00                	add    %al,(%rax)
     fc5:	00 00                	add    %al,(%rax)
     fc7:	00 00                	add    %al,(%rax)
     fc9:	0a 00                	or     (%rax),%al
     fcb:	00 00                	add    %al,(%rax)
     fcd:	10 00                	adc    %al,(%rax)
     fcf:	00 00                	add    %al,(%rax)
     fd1:	00 c0                	add    %al,%al
     fd3:	17                   	(bad)  
	...
     fe8:	00 04 00             	add    %al,(%rax,%rax,1)
     feb:	03 00                	add    (%rax),%eax
     fed:	01 00                	add    %eax,(%rax)
     fef:	00 00                	add    %al,(%rax)
     ff1:	00 c0                	add    %al,%al
     ff3:	18 00                	sbb    %al,(%rax)
     ff5:	00 00                	add    %al,(%rax)
     ff7:	00 00                	add    %al,(%rax)
     ff9:	48 00 00             	rex.W add %al,(%rax)
     ffc:	00 60 07             	add    %ah,0x7(%rax)
     fff:	00 00                	add    %al,(%rax)
    1001:	00 01                	add    %al,(%rcx)
    1003:	00 00                	add    %al,(%rax)
    1005:	00 00                	add    %al,(%rax)
    1007:	00 00                	add    %al,(%rax)
    1009:	06                   	(bad)  
    100a:	00 03                	add    %al,(%rbx)
    100c:	00 02                	add    %al,(%rdx)
    100e:	00 00                	add    %al,(%rax)
    1010:	00 00                	add    %al,(%rax)
    1012:	d0 18                	rcrb   (%rax)
	...
    1020:	00 03                	add    %al,(%rbx)
    1022:	02 00                	add    (%rax),%al
    1024:	00 00                	add    %al,(%rax)
    1026:	00 00                	add    %al,(%rax)
    1028:	00 0a                	add    %cl,(%rdx)
    102a:	00 00                	add    %al,(%rax)
    102c:	00 10                	add    %dl,(%rax)
    102e:	00 00                	add    %al,(%rax)
    1030:	00 00                	add    %al,(%rax)
    1032:	f0 18 00             	lock sbb %al,(%rax)
	...
    1049:	05 00 03 00 01       	add    $0x1000300,%eax
    104e:	00 00                	add    %al,(%rax)
    1050:	00 00                	add    %al,(%rax)
    1052:	f0 19 00             	lock sbb %eax,(%rax)
	...
    1061:	03 02                	add    (%rdx),%eax
    1063:	00 00                	add    %al,(%rax)
    1065:	00 00                	add    %al,(%rax)
    1067:	00 00                	add    %al,(%rax)
    1069:	09 10                	or     %edx,(%rax)
    106b:	08 00                	or     %al,(%rax)
    106d:	01 00                	add    %eax,(%rax)
    106f:	00 00                	add    %al,(%rax)
    1071:	00 40 07             	add    %al,0x7(%rax)
	...

Disassembly of section .debug_aranges:

0000000000000000 <.debug_aranges>:
   0:	2c 00                	sub    $0x0,%al
   2:	00 00                	add    %al,(%rax)
   4:	02 00                	add    (%rax),%al
   6:	00 00                	add    %al,(%rax)
   8:	00 00                	add    %al,(%rax)
   a:	08 00                	or     %al,(%rax)
   c:	00 00                	add    %al,(%rax)
   e:	00 00                	add    %al,(%rax)
  10:	63 20                	movsxd (%rax),%esp
  12:	00 00                	add    %al,(%rax)
  14:	00 00                	add    %al,(%rax)
  16:	00 00                	add    %al,(%rax)
  18:	e2 00                	loop   1a <__ImageBase+0x1a>
	...
  2e:	00 00                	add    %al,(%rax)
  30:	2c 00                	sub    $0x0,%al
  32:	00 00                	add    %al,(%rax)
  34:	02 00                	add    (%rax),%al
  36:	04 03                	add    $0x3,%al
  38:	00 00                	add    %al,(%rax)
  3a:	08 00                	or     %al,(%rax)
  3c:	00 00                	add    %al,(%rax)
  3e:	00 00                	add    %al,(%rax)
  40:	00 30                	add    %dh,(%rax)
  42:	00 00                	add    %al,(%rax)
  44:	00 00                	add    %al,(%rax)
  46:	00 00                	add    %al,(%rax)
  48:	06                   	(bad)  
  49:	10 00                	adc    %al,(%rax)
	...
  5f:	00 2c 00             	add    %ch,(%rax,%rax,1)
  62:	00 00                	add    %al,(%rax)
  64:	02 00                	add    (%rax),%al
  66:	2d 03 00 00 08       	sub    $0x8000003,%eax
  6b:	00 00                	add    %al,(%rax)
  6d:	00 00                	add    %al,(%rax)
  6f:	00 06                	add    %al,(%rsi)
  71:	40 00 00             	rex add %al,(%rax)
  74:	00 00                	add    %al,(%rax)
  76:	00 00                	add    %al,(%rax)
  78:	cb                   	lret   
  79:	03 00                	add    (%rax),%eax
	...

Disassembly of section .debug_info:

0000000000000000 <.debug_info>:
       0:	00 03                	add    %al,(%rbx)
       2:	00 00                	add    %al,(%rax)
       4:	05 00 01 08 00       	add    $0x80100,%eax
       9:	00 00                	add    %al,(%rax)
       b:	00 10                	add    %dl,(%rax)
       d:	2c 00                	sub    $0x0,%al
       f:	00 00                	add    %al,(%rax)
      11:	1d 00 00 00 00       	sbb    $0x0,%eax
      16:	07                   	(bad)  
      17:	00 00                	add    %al,(%rax)
      19:	00 63 20             	add    %ah,0x20(%rbx)
      1c:	00 00                	add    %al,(%rax)
      1e:	00 00                	add    %al,(%rax)
      20:	00 00                	add    %al,(%rax)
      22:	e2 00                	loop   24 <__ImageBase+0x24>
	...
      2c:	00 00                	add    %al,(%rax)
      2e:	01 01                	add    %eax,(%rcx)
      30:	06                   	(bad)  
      31:	d3 00                	roll   %cl,(%rax)
      33:	00 00                	add    %al,(%rax)
      35:	01 01                	add    %eax,(%rcx)
      37:	08 d1                	or     %dl,%cl
      39:	00 00                	add    %al,(%rax)
      3b:	00 01                	add    %al,(%rcx)
      3d:	02 05 2c 01 00 00    	add    0x12c(%rip),%al        # 16f <__ImageBase+0x16f>
      43:	01 02                	add    %eax,(%rdx)
      45:	07                   	(bad)  
      46:	f1                   	icebp  
      47:	00 00                	add    %al,(%rax)
      49:	00 11                	add    %dl,(%rcx)
      4b:	04 05                	add    $0x5,%al
      4d:	69 6e 74 00 01 04 07 	imul   $0x7040100,0x74(%rsi),%ebp
      54:	e4 00                	in     $0x0,%al
      56:	00 00                	add    %al,(%rax)
      58:	01 08                	add    %ecx,(%rax)
      5a:	05 23 01 00 00       	add    $0x123,%eax
      5f:	05 36 01 00 00       	add    $0x136,%eax
      64:	02 2f                	add    (%rdi),%ch
      66:	1d 6b 00 00 00       	sbb    $0x6b,%eax
      6b:	01 08                	add    %ecx,(%rax)
      6d:	07                   	(bad)  
      6e:	df 00                	filds  (%rax)
      70:	00 00                	add    %al,(%rax)
      72:	05 41 01 00 00       	add    $0x141,%eax
      77:	02 66 1d             	add    0x1d(%rsi),%ah
      7a:	6b 00 00             	imul   $0x0,(%rax),%eax
      7d:	00 01                	add    %al,(%rcx)
      7f:	08 04 0c             	or     %al,(%rsp,%rcx,1)
      82:	01 00                	add    %eax,(%rax)
      84:	00 01                	add    %al,(%rcx)
      86:	04 04                	add    $0x4,%al
      88:	1e                   	(bad)  
      89:	00 00                	add    %al,(%rax)
      8b:	00 03                	add    %al,(%rbx)
      8d:	4a 00 00             	rex.WX add %al,(%rax)
      90:	00 01                	add    %al,(%rcx)
      92:	01 06                	add    %eax,(%rsi)
      94:	da 00                	fiaddl (%rax)
      96:	00 00                	add    %al,(%rax)
      98:	12 91 00 00 00 05    	adc    0x5000000(%rcx),%dl
      9e:	38 01                	cmp    %al,(%rcx)
      a0:	00 00                	add    %al,(%rax)
      a2:	03 3f                	add    (%rdi),%edi
      a4:	19 5f 00             	sbb    %ebx,0x0(%rdi)
      a7:	00 00                	add    %al,(%rax)
      a9:	05 43 01 00 00       	add    $0x143,%eax
      ae:	04 2a                	add    $0x2a,%al
      b0:	15 72 00 00 00       	adc    $0x72,%eax
      b5:	01 08                	add    %ecx,(%rax)
      b7:	05 1e 01 00 00       	add    $0x11e,%eax
      bc:	13 14 00             	adc    (%rax,%rax,1),%edx
      bf:	00 00                	add    %al,(%rax)
      c1:	10 05 03 08 e0 00    	adc    %al,0xe00803(%rip)        # e008ca <_end+0xdd58ba>
      c7:	00 00                	add    %al,(%rax)
      c9:	09 19                	or     %ebx,(%rcx)
      cb:	01 00                	add    %eax,(%rax)
      cd:	00 04 8c             	add    %al,(%rsp,%rcx,4)
      d0:	00 00                	add    %al,(%rax)
      d2:	00 00                	add    %al,(%rax)
      d4:	09 13                	or     %edx,(%rbx)
      d6:	01 00                	add    %eax,(%rax)
      d8:	00 05 8c 00 00 00    	add    %al,0x8c(%rip)        # 16a <__ImageBase+0x16a>
      de:	08 00                	or     %al,(%rax)
      e0:	0a b7 08 00 00 08    	or     0x8000008(%rdi),%dh
      e6:	07                   	(bad)  
      e7:	f5                   	cmc    
      e8:	00 00                	add    %al,(%rax)
      ea:	00 09                	add    %cl,(%rcx)
      ec:	03 08                	add    (%rax),%ecx
      ee:	80 01 00             	addb   $0x0,(%rcx)
      f1:	00 00                	add    %al,(%rax)
      f3:	00 00                	add    %al,(%rax)
      f5:	03 91 00 00 00 0a    	add    0xa000000(%rcx),%edx
      fb:	24 00                	and    $0x0,%al
      fd:	00 00                	add    %al,(%rax)
      ff:	09 05 4a 00 00 00    	or     %eax,0x4a(%rip)        # 14f <__ImageBase+0x14f>
     105:	09 03                	or     %eax,(%rbx)
     107:	00 80 01 00 00 00    	add    %al,0x1(%rax)
     10d:	00 00                	add    %al,(%rax)
     10f:	14 6d                	adc    $0x6d,%al
     111:	73 70                	jae    183 <__ImageBase+0x183>
     113:	00 01                	add    %al,(%rcx)
     115:	0b 12                	or     (%rdx),%edx
     117:	bc 00 00 00 09       	mov    $0x9000000,%esp
     11c:	03 60 a1             	add    -0x5f(%rax),%esp
     11f:	01 00                	add    %eax,(%rax)
     121:	00 00                	add    %al,(%rax)
     123:	00 00                	add    %al,(%rax)
     125:	0b 04 01             	or     (%rcx,%rax,1),%eax
     128:	00 00                	add    %al,(%rax)
     12a:	04 4e                	add    $0x4e,%al
     12c:	16                   	(bad)  
     12d:	f5                   	cmc    
     12e:	00 00                	add    %al,(%rax)
     130:	00 45 01             	add    %al,0x1(%rbp)
     133:	00 00                	add    %al,(%rax)
     135:	04 f5                	add    $0xf5,%al
     137:	00 00                	add    %al,(%rax)
     139:	00 04 45 01 00 00 04 	add    %al,0x4000001(,%rax,2)
     140:	a9 00 00 00 00       	test   $0x0,%eax
     145:	03 98 00 00 00 0c    	add    0xc000000(%rax),%ebx
     14b:	00 00                	add    %al,(%rax)
     14d:	00 00                	add    %al,(%rax)
     14f:	4a 00 00             	rex.WX add %al,(%rax)
     152:	00 59 01             	add    %bl,0x1(%rcx)
     155:	00 00                	add    %al,(%rax)
     157:	0d 00 0b 4a 01       	or     $0x14a0b00,%eax
     15c:	00 00                	add    %al,(%rax)
     15e:	06                   	(bad)  
     15f:	40 0c 4a             	rex or $0x4a,%al
     162:	00 00                	add    %al,(%rax)
     164:	00 74 01 00          	add    %dh,0x0(%rcx,%rax,1)
     168:	00 04 74             	add    %al,(%rsp,%rsi,2)
     16b:	01 00                	add    %eax,(%rax)
     16d:	00 04 a9             	add    %al,(%rcx,%rbp,4)
     170:	00 00                	add    %al,(%rax)
     172:	00 00                	add    %al,(%rax)
     174:	03 79 01             	add    0x1(%rcx),%edi
     177:	00 00                	add    %al,(%rax)
     179:	15 06 ad 08 00       	adc    $0x8ad06,%eax
     17e:	00 25 12 21 00 00    	add    %ah,0x2112(%rip)        # 2296 <ecall_get_secret+0x184>
     184:	00 00                	add    %al,(%rax)
     186:	00 00                	add    %al,(%rax)
     188:	33 00                	xor    (%rax),%eax
     18a:	00 00                	add    %al,(%rax)
     18c:	00 00                	add    %al,(%rax)
     18e:	00 00                	add    %al,(%rax)
     190:	01 9c e5 01 00 00 0e 	add    %ebx,0xe000001(%rbp,%riz,8)
     197:	70 69                	jo     202 <__ImageBase+0x202>
     199:	6e                   	outsb  %ds:(%rsi),(%dx)
     19a:	00 25 1b 4a 00 00    	add    %ah,0x4a1b(%rip)        # 4bbb <ct_decode+0x73b>
     1a0:	00 10                	add    %dl,(%rax)
     1a2:	00 00                	add    %al,(%rax)
     1a4:	00 0c 00             	add    %cl,(%rax,%rax,1)
     1a7:	00 00                	add    %al,(%rax)
     1a9:	07                   	(bad)  
     1aa:	1e                   	(bad)  
     1ab:	04 00                	add    $0x0,%al
     1ad:	00 25 26 f5 00 00    	add    %ah,0xf526(%rip)        # f6d9 <dlfree+0x799>
     1b3:	00 28                	add    %ch,(%rax)
     1b5:	00 00                	add    %al,(%rax)
     1b7:	00 22                	add    %ah,(%rdx)
     1b9:	00 00                	add    %al,(%rax)
     1bb:	00 07                	add    %al,(%rdi)
     1bd:	91                   	xchg   %eax,%ecx
     1be:	0a 00                	or     (%rax),%al
     1c0:	00 25 36 a9 00 00    	add    %ah,0xa936(%rip)        # aafc <ema_do_uncommit_loop+0x10c>
     1c6:	00 47 00             	add    %al,0x0(%rdi)
     1c9:	00 00                	add    %al,(%rax)
     1cb:	41 00 00             	add    %al,(%r8)
     1ce:	00 0f                	add    %cl,(%rdi)
     1d0:	3e 21 00             	ds and %eax,(%rax)
     1d3:	00 00                	add    %al,(%rax)
     1d5:	00 00                	add    %al,(%rax)
     1d7:	00 25 01 00 00 02    	add    %ah,0x2000001(%rip)        # 20001de <_end+0x1fd51ce>
     1dd:	01 55 03             	add    %edx,0x3(%rbp)
     1e0:	a3 01 54 00 00 16 fb 	movabs %eax,0x8fb1600005401
     1e7:	08 00 
     1e9:	00 01                	add    %al,(%rcx)
     1eb:	1e                   	(bad)  
     1ec:	06                   	(bad)  
     1ed:	dc 20                	fsubl  (%rax)
     1ef:	00 00                	add    %al,(%rax)
     1f1:	00 00                	add    %al,(%rax)
     1f3:	00 00                	add    %al,(%rax)
     1f5:	36 00 00             	ss add %al,(%rax)
     1f8:	00 00                	add    %al,(%rax)
     1fa:	00 00                	add    %al,(%rax)
     1fc:	00 01                	add    %al,(%rcx)
     1fe:	9c                   	pushf  
     1ff:	4d 02 00             	rex.WRB add (%r8),%r8b
     202:	00 0c 00             	add    %cl,(%rax,%rax,1)
     205:	00 00                	add    %al,(%rax)
     207:	00 4a 00             	add    %cl,0x0(%rdx)
     20a:	00 00                	add    %al,(%rax)
     20c:	12 02                	adc    (%rdx),%al
     20e:	00 00                	add    %al,(%rax)
     210:	0d 00 08 f9 20       	or     $0x20f90800,%eax
     215:	00 00                	add    %al,(%rax)
     217:	00 00                	add    %al,(%rax)
     219:	00 00                	add    %al,(%rax)
     21b:	4a 01 00             	rex.WX add %rax,(%rax)
     21e:	00 31                	add    %dh,(%rcx)
     220:	02 00                	add    (%rax),%al
     222:	00 02                	add    %al,(%rdx)
     224:	01 55 09             	add    %edx,0x9(%rbp)
     227:	03 00                	add    (%rax),%eax
     229:	30 01                	xor    %al,(%rcx)
     22b:	00 00                	add    %al,(%rax)
     22d:	00 00                	add    %al,(%rax)
     22f:	00 00                	add    %al,(%rax)
     231:	17                   	(bad)  
     232:	12 21                	adc    (%rcx),%ah
     234:	00 00                	add    %al,(%rax)
     236:	00 00                	add    %al,(%rax)
     238:	00 00                	add    %al,(%rax)
     23a:	4a 01 00             	rex.WX add %rax,(%rax)
     23d:	00 02                	add    %al,(%rdx)
     23f:	01 55 09             	add    %edx,0x9(%rbp)
     242:	03 05 30 01 00 00    	add    0x130(%rip),%eax        # 378 <__ImageBase+0x378>
     248:	00 00                	add    %al,(%rax)
     24a:	00 00                	add    %al,(%rax)
     24c:	00 06                	add    %al,(%rsi)
     24e:	ad                   	lods   %ds:(%rsi),%eax
     24f:	03 00                	add    (%rax),%eax
     251:	00 19                	add    %bl,(%rcx)
     253:	bf 20 00 00 00       	mov    $0x20,%edi
     258:	00 00                	add    %al,(%rax)
     25a:	00 1d 00 00 00 00    	add    %bl,0x0(%rip)        # 260 <__ImageBase+0x260>
     260:	00 00                	add    %al,(%rax)
     262:	00 01                	add    %al,(%rcx)
     264:	9c                   	pushf  
     265:	87 02                	xchg   %eax,(%rdx)
     267:	00 00                	add    %al,(%rax)
     269:	0e                   	(bad)  
     26a:	69 00 19 21 4a 00    	imul   $0x4a2119,(%rax),%eax
     270:	00 00                	add    %al,(%rax)
     272:	64 00 00             	add    %al,%fs:(%rax)
     275:	00 60 00             	add    %ah,0x0(%rax)
     278:	00 00                	add    %al,(%rax)
     27a:	18 6a 00             	sbb    %ch,0x0(%rdx)
     27d:	01 19                	add    %ebx,(%rcx)
     27f:	28 4a 00             	sub    %cl,0x0(%rdx)
     282:	00 00                	add    %al,(%rax)
     284:	01 54 00 06          	add    %edx,0x6(%rax,%rax,1)
     288:	e9 07 00 00 0d       	jmp    d000294 <_end+0xcfd5284>
     28d:	63 20                	movsxd (%rax),%esp
     28f:	00 00                	add    %al,(%rax)
     291:	00 00                	add    %al,(%rax)
     293:	00 00                	add    %al,(%rax)
     295:	5c                   	pop    %rsp
     296:	00 00                	add    %al,(%rax)
     298:	00 00                	add    %al,(%rax)
     29a:	00 00                	add    %al,(%rax)
     29c:	00 01                	add    %al,(%rcx)
     29e:	9c                   	pushf  
     29f:	fe 02                	incb   (%rdx)
     2a1:	00 00                	add    %al,(%rax)
     2a3:	07                   	(bad)  
     2a4:	cf                   	iret   
     2a5:	08 00                	or     %al,(%rax)
     2a7:	00 0d 32 fe 02 00    	add    %cl,0x2fe32(%rip)        # 300df <_end+0x50cf>
     2ad:	00 78 00             	add    %bh,0x0(%rax)
     2b0:	00 00                	add    %al,(%rax)
     2b2:	72 00                	jb     2b4 <__ImageBase+0x2b4>
     2b4:	00 00                	add    %al,(%rax)
     2b6:	08 75 20             	or     %dh,0x20(%rbp)
     2b9:	00 00                	add    %al,(%rax)
     2bb:	00 00                	add    %al,(%rax)
     2bd:	00 00                	add    %al,(%rax)
     2bf:	59                   	pop    %rcx
     2c0:	01 00                	add    %eax,(%rax)
     2c2:	00 d3                	add    %dl,%bl
     2c4:	02 00                	add    (%rax),%al
     2c6:	00 02                	add    %al,(%rdx)
     2c8:	01 55 02             	add    %edx,0x2(%rbp)
     2cb:	73 00                	jae    2cd <__ImageBase+0x2cd>
     2cd:	02 01                	add    (%rcx),%al
     2cf:	54                   	push   %rsp
     2d0:	01 40 00             	add    %eax,0x0(%rax)
     2d3:	08 92 20 00 00 00    	or     %dl,0x20(%rdx)
     2d9:	00 00                	add    %al,(%rax)
     2db:	00 59 01             	add    %bl,0x1(%rcx)
     2de:	00 00                	add    %al,(%rax)
     2e0:	ea                   	(bad)  
     2e1:	02 00                	add    (%rax),%al
     2e3:	00 02                	add    %al,(%rdx)
     2e5:	01 54 01 34          	add    %edx,0x34(%rcx,%rax,1)
     2e9:	00 0f                	add    %cl,(%rdi)
     2eb:	b9 20 00 00 00       	mov    $0x20,%ecx
     2f0:	00 00                	add    %al,(%rax)
     2f2:	00 59 01             	add    %bl,0x1(%rcx)
     2f5:	00 00                	add    %al,(%rax)
     2f7:	02 01                	add    (%rcx),%al
     2f9:	54                   	push   %rsp
     2fa:	01 34 00             	add    %esi,(%rax,%rax,1)
     2fd:	00 03                	add    %al,(%rbx)
     2ff:	bc 00 00 00 00       	mov    $0x0,%esp
     304:	25 00 00 00 05       	and    $0x5000000,%eax
     309:	00 01                	add    %al,(%rcx)
     30b:	08 6f 01             	or     %ch,0x1(%rdi)
     30e:	00 00                	add    %al,(%rax)
     310:	01 2f                	add    %ebp,(%rdi)
     312:	01 00                	add    %eax,(%rax)
     314:	00 00                	add    %al,(%rax)
     316:	30 00                	xor    %al,(%rax)
     318:	00 00                	add    %al,(%rax)
     31a:	00 00                	add    %al,(%rax)
     31c:	00 86 20 61 01 00    	add    %al,0x16120(%rsi)
     322:	00 67 01             	add    %ah,0x1(%rdi)
     325:	00 00                	add    %al,(%rax)
     327:	83 01 00             	addl   $0x0,(%rcx)
     32a:	00 01                	add    %al,(%rcx)
     32c:	80 a1 0d 00 00 05 00 	andb   $0x0,0x500000d(%rcx)
     333:	01 08                	add    %ecx,(%rax)
     335:	83 01 00             	addl   $0x0,(%rcx)
     338:	00 24 2c             	add    %ah,(%rsp,%rbp,1)
     33b:	00 00                	add    %al,(%rax)
     33d:	00 1d bb 00 00 00    	add    %bl,0xbb(%rip)        # 3fe <__ImageBase+0x3fe>
     343:	07                   	(bad)  
     344:	00 00                	add    %al,(%rax)
     346:	00 06                	add    %al,(%rsi)
     348:	40 00 00             	rex add %al,(%rax)
     34b:	00 00                	add    %al,(%rax)
     34d:	00 00                	add    %al,(%rax)
     34f:	cb                   	lret   
     350:	03 00                	add    (%rax),%eax
     352:	00 00                	add    %al,(%rax)
     354:	00 00                	add    %al,(%rax)
     356:	00 78 01             	add    %bh,0x1(%rax)
     359:	00 00                	add    %al,(%rax)
     35b:	07                   	(bad)  
     35c:	01 06                	add    %eax,(%rsi)
     35e:	d3 00                	roll   %cl,(%rax)
     360:	00 00                	add    %al,(%rax)
     362:	06                   	(bad)  
     363:	e0 01                	loopne 366 <__ImageBase+0x366>
     365:	00 00                	add    %al,(%rax)
     367:	02 28                	add    (%rax),%ch
     369:	1d 41 00 00 00       	sbb    $0x41,%eax
     36e:	07                   	(bad)  
     36f:	01 08                	add    %ecx,(%rax)
     371:	d1 00                	roll   (%rax)
     373:	00 00                	add    %al,(%rax)
     375:	07                   	(bad)  
     376:	02 05 2c 01 00 00    	add    0x12c(%rip),%al        # 4a8 <__ImageBase+0x4a8>
     37c:	07                   	(bad)  
     37d:	02 07                	add    (%rdi),%al
     37f:	f1                   	icebp  
     380:	00 00                	add    %al,(%rax)
     382:	00 25 04 05 69 6e    	add    %ah,0x6e690504(%rip)        # 6e69088c <_end+0x6e66587c>
     388:	74 00                	je     38a <__ImageBase+0x38a>
     38a:	07                   	(bad)  
     38b:	04 07                	add    $0x7,%al
     38d:	e4 00                	in     $0x0,%al
     38f:	00 00                	add    %al,(%rax)
     391:	12 5d 00             	adc    0x0(%rbp),%bl
     394:	00 00                	add    %al,(%rax)
     396:	07                   	(bad)  
     397:	08 05 23 01 00 00    	or     %al,0x123(%rip)        # 4c0 <__ImageBase+0x4c0>
     39d:	06                   	(bad)  
     39e:	36 01 00             	ss add %eax,(%rax)
     3a1:	00 02                	add    %al,(%rdx)
     3a3:	2f                   	(bad)  
     3a4:	1d 7c 00 00 00       	sbb    $0x7c,%eax
     3a9:	07                   	(bad)  
     3aa:	08 07                	or     %al,(%rdi)
     3ac:	df 00                	filds  (%rax)
     3ae:	00 00                	add    %al,(%rax)
     3b0:	06                   	(bad)  
     3b1:	be 08 00 00 02       	mov    $0x2000008,%esi
     3b6:	62                   	(bad)  
     3b7:	1d 70 00 00 00       	sbb    $0x70,%eax
     3bc:	06                   	(bad)  
     3bd:	41 01 00             	add    %eax,(%r8)
     3c0:	00 02                	add    %al,(%rdx)
     3c2:	66 1d 7c 00          	sbb    $0x7c,%ax
     3c6:	00 00                	add    %al,(%rax)
     3c8:	07                   	(bad)  
     3c9:	08 04 0c             	or     %al,(%rsp,%rcx,1)
     3cc:	01 00                	add    %eax,(%rax)
     3ce:	00 07                	add    %al,(%rdi)
     3d0:	04 04                	add    $0x4,%al
     3d2:	1e                   	(bad)  
     3d3:	00 00                	add    %al,(%rax)
     3d5:	00 26                	add    %ah,(%rsi)
     3d7:	08 08                	or     %cl,(%rax)
     3d9:	56                   	push   %rsi
     3da:	00 00                	add    %al,(%rax)
     3dc:	00 07                	add    %al,(%rdi)
     3de:	01 06                	add    %eax,(%rsi)
     3e0:	da 00                	fiaddl (%rax)
     3e2:	00 00                	add    %al,(%rax)
     3e4:	12 b0 00 00 00 06    	adc    0x6000000(%rax),%dh
     3ea:	e2 01                	loop   3ed <__ImageBase+0x3ed>
     3ec:	00 00                	add    %al,(%rax)
     3ee:	03 21                	add    (%rcx),%esp
     3f0:	19 35 00 00 00 06    	sbb    %esi,0x6000000(%rip)        # 60003f6 <_end+0x5fd53e6>
     3f6:	38 01                	cmp    %al,(%rcx)
     3f8:	00 00                	add    %al,(%rax)
     3fa:	03 3f                	add    (%rdi),%edi
     3fc:	19 70 00             	sbb    %esi,0x0(%rax)
     3ff:	00 00                	add    %al,(%rax)
     401:	06                   	(bad)  
     402:	c0 08 00             	rorb   $0x0,(%rax)
     405:	00 03                	add    %al,(%rbx)
     407:	5e                   	pop    %rsi
     408:	19 83 00 00 00 06    	sbb    %eax,0x6000000(%rbx)
     40e:	43 01 00             	rex.XB add %eax,(%r8)
     411:	00 04 5e             	add    %al,(%rsi,%rbx,2)
     414:	15 8f 00 00 00       	adc    $0x8f,%eax
     419:	27                   	(bad)  
     41a:	97                   	xchg   %eax,%edi
     41b:	07                   	(bad)  
     41c:	00 00                	add    %al,(%rax)
     41e:	07                   	(bad)  
     41f:	04 5d                	add    $0x5d,%al
     421:	00 00                	add    %al,(%rax)
     423:	00 05 25 0e f5 02    	add    %al,0x2f50e25(%rip)        # 2f5124e <_end+0x2f2623e>
     429:	00 00                	add    %al,(%rax)
     42b:	09 af 07 00 00 00    	or     %ebp,0x7(%rdi)
     431:	09 91 01 00 00 01    	or     %edx,0x1000001(%rcx)
     437:	09 0f                	or     %ecx,(%rdi)
     439:	08 00                	or     %al,(%rax)
     43b:	00 02                	add    %al,(%rdx)
     43d:	09 d8                	or     %ebx,%eax
     43f:	0b 00                	or     (%rax),%eax
     441:	00 03                	add    %al,(%rbx)
     443:	09 81 08 00 00 04    	or     %eax,0x4000008(%rcx)
     449:	09 37                	or     %esi,(%rdi)
     44b:	07                   	(bad)  
     44c:	00 00                	add    %al,(%rax)
     44e:	05 09 8f 09 00       	add    $0x98f09,%eax
     453:	00 08                	add    %cl,(%rax)
     455:	09 c2                	or     %eax,%edx
     457:	01 00                	add    %eax,(%rax)
     459:	00 09                	add    %cl,(%rcx)
     45b:	09 8c 03 00 00 0a 01 	or     %ecx,0x10a0000(%rbx,%rax,1)
     462:	59                   	pop    %rcx
     463:	09 00                	or     %eax,(%rax)
     465:	00 01                	add    %al,(%rcx)
     467:	10 01                	adc    %al,(%rcx)
     469:	1e                   	(bad)  
     46a:	03 00                	add    (%rax),%eax
     46c:	00 03                	add    %al,(%rbx)
     46e:	10 01                	adc    %al,(%rcx)
     470:	4f 07                	rex.WRXB (bad) 
     472:	00 00                	add    %al,(%rax)
     474:	06                   	(bad)  
     475:	10 01                	adc    %al,(%rcx)
     477:	26 04 00             	es add $0x0,%al
     47a:	00 07                	add    %al,(%rdi)
     47c:	10 01                	adc    %al,(%rcx)
     47e:	02 0a                	add    (%rdx),%cl
     480:	00 00                	add    %al,(%rax)
     482:	08 10                	or     %dl,(%rax)
     484:	01 ea                	add    %ebp,%edx
     486:	0a 00                	or     (%rax),%al
     488:	00 09                	add    %cl,(%rcx)
     48a:	10 01                	adc    %al,(%rcx)
     48c:	dd 03                	fldl   (%rbx)
     48e:	00 00                	add    %al,(%rax)
     490:	00 20                	add    %ah,(%rax)
     492:	01 ff                	add    %edi,%edi
     494:	03 00                	add    (%rax),%eax
     496:	00 01                	add    %al,(%rcx)
     498:	20 01                	and    %al,(%rcx)
     49a:	08 02                	or     %al,(%rdx)
     49c:	00 00                	add    %al,(%rax)
     49e:	02 20                	add    (%rax),%ah
     4a0:	01 25 02 00 00 03    	add    %esp,0x3000002(%rip)        # 30004a8 <_end+0x2fd5498>
     4a6:	20 01                	and    %al,(%rcx)
     4a8:	ca 0a 00             	lret   $0xa
     4ab:	00 04 20             	add    %al,(%rax,%riz,1)
     4ae:	01 7f 07             	add    %edi,0x7(%rdi)
     4b1:	00 00                	add    %al,(%rax)
     4b3:	05 20 01 38 0a       	add    $0xa380120,%eax
     4b8:	00 00                	add    %al,(%rax)
     4ba:	06                   	(bad)  
     4bb:	20 01                	and    %al,(%rcx)
     4bd:	af                   	scas   %es:(%rdi),%eax
     4be:	0b 00                	or     (%rax),%eax
     4c0:	00 07                	add    %al,(%rdi)
     4c2:	20 01                	and    %al,(%rcx)
     4c4:	48 04 00             	rex.W add $0x0,%al
     4c7:	00 09                	add    %cl,(%rcx)
     4c9:	20 01                	and    %al,(%rcx)
     4cb:	69 07 00 00 0c 20    	imul   $0x200c0000,(%rdi),%eax
     4d1:	01 2d 09 00 00 0d    	add    %ebp,0xd000009(%rip)        # d0004e0 <_end+0xcfd54d0>
     4d7:	20 01                	and    %al,(%rcx)
     4d9:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
     4da:	01 00                	add    %eax,(%rax)
     4dc:	00 0e                	add    %cl,(%rsi)
     4de:	20 01                	and    %al,(%rcx)
     4e0:	68 02 00 00 0f       	push   $0xf000002
     4e5:	20 01                	and    %al,(%rcx)
     4e7:	af                   	scas   %es:(%rdi),%eax
     4e8:	09 00                	or     %eax,(%rax)
     4ea:	00 10                	add    %dl,(%rax)
     4ec:	20 01                	and    %al,(%rcx)
     4ee:	0e                   	(bad)  
     4ef:	09 00                	or     %eax,(%rax)
     4f1:	00 11                	add    %dl,(%rcx)
     4f3:	20 01                	and    %al,(%rcx)
     4f5:	99                   	cltd   
     4f6:	0a 00                	or     (%rax),%al
     4f8:	00 01                	add    %al,(%rcx)
     4fa:	30 01                	xor    %al,(%rcx)
     4fc:	bf 06 00 00 02       	mov    $0x2000006,%edi
     501:	30 01                	xor    %al,(%rcx)
     503:	ca 04 00             	lret   $0x4
     506:	00 03                	add    %al,(%rbx)
     508:	30 01                	xor    %al,(%rcx)
     50a:	33 03                	xor    (%rbx),%eax
     50c:	00 00                	add    %al,(%rax)
     50e:	04 30                	add    $0x30,%al
     510:	01 1e                	add    %ebx,(%rsi)
     512:	0a 00                	or     (%rax),%al
     514:	00 05 30 01 fb 05    	add    %al,0x5fb0130(%rip)        # 5fb064a <_end+0x5f8563a>
     51a:	00 00                	add    %al,(%rax)
     51c:	01 40 01             	add    %eax,0x1(%rax)
     51f:	80 04 00 00          	addb   $0x0,(%rax,%rax,1)
     523:	02 40 01             	add    0x1(%rax),%al
     526:	73 06                	jae    52e <__ImageBase+0x52e>
     528:	00 00                	add    %al,(%rax)
     52a:	03 40 01             	add    0x1(%rax),%eax
     52d:	46 05 00 00 04 40    	rex.RX add $0x40040000,%eax
     533:	01 b6 05 00 00 05    	add    %esi,0x5000005(%rsi)
     539:	40 01 97 0b 00 00 06 	rex add %edx,0x600000b(%rdi)
     540:	40 01 b0 0a 00 00 07 	rex add %esi,0x700000a(%rax)
     547:	40 01 1a             	rex add %ebx,(%rdx)
     54a:	07                   	(bad)  
     54b:	00 00                	add    %al,(%rax)
     54d:	08 40 01             	or     %al,0x1(%rax)
     550:	8f 05 00 00 0a 40    	pop    0x400a0000(%rip)        # 400a0556 <_end+0x40075546>
     556:	01 ea                	add    %ebp,%edx
     558:	01 00                	add    %eax,(%rax)
     55a:	00 0c 40             	add    %cl,(%rax,%rax,2)
     55d:	01 63 04             	add    %esp,0x4(%rbx)
     560:	00 00                	add    %al,(%rax)
     562:	0d 40 01 69 0a       	or     $0xa690140,%eax
     567:	00 00                	add    %al,(%rax)
     569:	0e                   	(bad)  
     56a:	40 01 9e 05 00 00 0f 	rex add %ebx,0xf000005(%rsi)
     571:	40 01 c6             	rex add %eax,%esi
     574:	09 00                	or     %eax,(%rax)
     576:	00 11                	add    %dl,(%rcx)
     578:	40 01 26             	rex add %esp,(%rsi)
     57b:	05 00 00 12 40       	add    $0x40120000,%eax
     580:	01 4b 02             	add    %ecx,0x2(%rbx)
     583:	00 00                	add    %al,(%rax)
     585:	13 40 01             	adc    0x1(%rax),%eax
     588:	ce                   	(bad)  
     589:	07                   	(bad)  
     58a:	00 00                	add    %al,(%rax)
     58c:	02 50 01             	add    0x1(%rax),%dl
     58f:	02 07                	add    (%rdi),%al
     591:	00 00                	add    %al,(%rax)
     593:	01 60 01             	add    %esp,0x1(%rax)
     596:	4a 06                	rex.WX (bad) 
     598:	00 00                	add    %al,(%rax)
     59a:	02 60 01             	add    0x1(%rax),%ah
     59d:	74 09                	je     5a8 <__ImageBase+0x5a8>
     59f:	00 00                	add    %al,(%rax)
     5a1:	03 60 01             	add    0x1(%rax),%esp
     5a4:	aa                   	stos   %al,%es:(%rdi)
     5a5:	04 00                	add    $0x0,%al
     5a7:	00 04 60             	add    %al,(%rax,%riz,2)
     5aa:	01 39                	add    %edi,(%rcx)
     5ac:	08 00                	or     %al,(%rax)
     5ae:	00 05 60 01 ed 04    	add    %al,0x4ed0160(%rip)        # 4ed0714 <_end+0x4ea5704>
     5b4:	00 00                	add    %al,(%rax)
     5b6:	01 70 01             	add    %esi,0x1(%rax)
     5b9:	dd 02                	fldl   (%rdx)
     5bb:	00 00                	add    %al,(%rax)
     5bd:	02 70 01             	add    0x1(%rax),%dh
     5c0:	4c 0a 00             	rex.WR or (%rax),%r8b
     5c3:	00 03                	add    %al,(%rbx)
     5c5:	70 01                	jo     5c8 <__ImageBase+0x5c8>
     5c7:	8f 02                	pop    (%rdx)
     5c9:	00 00                	add    %al,(%rax)
     5cb:	04 70                	add    $0x70,%al
     5cd:	01 db                	add    %ebx,%ebx
     5cf:	06                   	(bad)  
     5d0:	00 00                	add    %al,(%rax)
     5d2:	05 70 01 f6 02       	add    $0x2f60170,%eax
     5d7:	00 00                	add    %al,(%rax)
     5d9:	06                   	(bad)  
     5da:	70 01                	jo     5dd <__ImageBase+0x5dd>
     5dc:	d4                   	(bad)  
     5dd:	05 00 00 07 70       	add    $0x70070000,%eax
     5e2:	01 6a 05             	add    %ebp,0x5(%rdx)
     5e5:	00 00                	add    %al,(%rax)
     5e7:	08 70 01             	or     %dh,0x1(%rax)
     5ea:	70 03                	jo     5ef <__ImageBase+0x5ef>
     5ec:	00 00                	add    %al,(%rax)
     5ee:	09 70 01             	or     %esi,0x1(%rax)
     5f1:	45 0b 00             	or     (%r8),%r8d
     5f4:	00 01                	add    %al,(%rcx)
     5f6:	80 01 6f             	addb   $0x6f,(%rcx)
     5f9:	0b 00                	or     (%rax),%eax
     5fb:	00 02                	add    %al,(%rdx)
     5fd:	80 01 2a             	addb   $0x2a,(%rcx)
     600:	06                   	(bad)  
     601:	00 00                	add    %al,(%rax)
     603:	03 80 01 15 0b 00    	add    0xb1501(%rax),%eax
     609:	00 04 80             	add    %al,(%rax,%rax,4)
     60c:	01 4c 03 00          	add    %ecx,0x0(%rbx,%rax,1)
     610:	00 05 80 01 dd 09    	add    %al,0x9dd0180(%rip)        # 9dd0796 <_end+0x9da5786>
     616:	00 00                	add    %al,(%rax)
     618:	01 90 01 91 06 00    	add    %edx,0x69101(%rax)
     61e:	00 01                	add    %al,(%rcx)
     620:	f0 00 06             	lock add %al,(%rsi)
     623:	94                   	xchg   %eax,%esp
     624:	07                   	(bad)  
     625:	00 00                	add    %al,(%rax)
     627:	05 7e 03 ec 00       	add    $0xec037e,%eax
     62c:	00 00                	add    %al,(%rax)
     62e:	07                   	(bad)  
     62f:	08 05 1e 01 00 00    	or     %al,0x11e(%rip)        # 753 <__ImageBase+0x753>
     635:	0f 14 00             	unpcklps (%rax),%xmm0
     638:	00 00                	add    %al,(%rax)
     63a:	10 06                	adc    %al,(%rsi)
     63c:	14 2f                	adc    $0x2f,%al
     63e:	03 00                	add    (%rax),%eax
     640:	00 05 19 01 00 00    	add    %al,0x119(%rip)        # 75f <__ImageBase+0x75f>
     646:	06                   	(bad)  
     647:	15 07 ab 00 00       	adc    $0xab07,%eax
     64c:	00 00                	add    %al,(%rax)
     64e:	05 13 01 00 00       	add    $0x113,%eax
     653:	06                   	(bad)  
     654:	16                   	(bad)  
     655:	07                   	(bad)  
     656:	ab                   	stos   %eax,%es:(%rdi)
     657:	00 00                	add    %al,(%rax)
     659:	00 08                	add    %cl,(%rax)
     65b:	00 06                	add    %al,(%rsi)
     65d:	bb 07 00 00 07       	mov    $0x7000007,%ebx
     662:	30 0d 56 00 00 00    	xor    %cl,0x56(%rip)        # 6be <__ImageBase+0x6be>
     668:	0f 07                	sysretl 
     66a:	05 00 00 08 01       	add    $0x1080000,%eax
     66f:	1e                   	(bad)  
     670:	55                   	push   %rbp
     671:	03 00                	add    (%rax),%eax
     673:	00 05 19 06 00 00    	add    %al,0x619(%rip)        # c92 <__ImageBase+0xc92>
     679:	01 1f                	add    %ebx,(%rdi)
     67b:	14 55                	adc    $0x55,%al
     67d:	03 00                	add    (%rax),%eax
     67f:	00 00                	add    %al,(%rax)
     681:	00 08                	add    %cl,(%rax)
     683:	08 03                	or     %al,(%rbx)
     685:	00 00                	add    %al,(%rax)
     687:	06                   	(bad)  
     688:	07                   	(bad)  
     689:	05 00 00 01 20       	add    $0x20010000,%eax
     68e:	03 3b                	add    (%rbx),%edi
     690:	03 00                	add    (%rax),%eax
     692:	00 0f                	add    %cl,(%rdi)
     694:	ab                   	stos   %eax,%es:(%rdi)
     695:	02 00                	add    (%rax),%al
     697:	00 08                	add    %cl,(%rax)
     699:	01 22                	add    %esp,(%rdx)
     69b:	8d 03                	lea    (%rbx),%eax
     69d:	00 00                	add    %al,(%rax)
     69f:	05 e3 04 00 00       	add    $0x4e3,%eax
     6a4:	01 23                	add    %esp,(%rbx)
     6a6:	06                   	(bad)  
     6a7:	56                   	push   %rsi
     6a8:	00 00                	add    %al,(%rax)
     6aa:	00 00                	add    %al,(%rax)
     6ac:	05 e8 04 00 00       	add    $0x4e8,%eax
     6b1:	01 24 06             	add    %esp,(%rsi,%rax,1)
     6b4:	56                   	push   %rsi
     6b5:	00 00                	add    %al,(%rax)
     6b7:	00 04 00             	add    %al,(%rax,%rax,1)
     6ba:	06                   	(bad)  
     6bb:	ab                   	stos   %eax,%es:(%rdi)
     6bc:	02 00                	add    (%rax),%al
     6be:	00 01                	add    %al,(%rcx)
     6c0:	25 03 66 03 00       	and    $0x36603,%eax
     6c5:	00 0f                	add    %cl,(%rdi)
     6c7:	6b 08 00             	imul   $0x0,(%rax),%ecx
     6ca:	00 18                	add    %bl,(%rax)
     6cc:	01 27                	add    %esp,(%rdi)
     6ce:	cd 03                	int    $0x3
     6d0:	00 00                	add    %al,(%rax)
     6d2:	05 f8 03 00 00       	add    $0x3f8,%eax
     6d7:	01 28                	add    %ebp,(%rax)
     6d9:	06                   	(bad)  
     6da:	56                   	push   %rsi
     6db:	00 00                	add    %al,(%rax)
     6dd:	00 00                	add    %al,(%rax)
     6df:	05 cd 0b 00 00       	add    $0xbcd,%eax
     6e4:	01 29                	add    %ebp,(%rcx)
     6e6:	08 cd                	or     %cl,%ch
     6e8:	03 00                	add    (%rax),%eax
     6ea:	00 08                	add    %cl,(%rax)
     6ec:	05 f0 0b 00 00       	add    $0xbf0,%eax
     6f1:	01 2a                	add    %ebp,(%rdx)
     6f3:	09 e0                	or     %esp,%eax
     6f5:	00 00                	add    %al,(%rax)
     6f7:	00 10                	add    %dl,(%rax)
     6f9:	00 08                	add    %cl,(%rax)
     6fb:	b0 00                	mov    $0x0,%al
     6fd:	00 00                	add    %al,(%rax)
     6ff:	06                   	(bad)  
     700:	6b 08 00             	imul   $0x0,(%rax),%ecx
     703:	00 01                	add    %al,(%rcx)
     705:	2b 03                	sub    (%rbx),%eax
     707:	99                   	cltd   
     708:	03 00                	add    (%rax),%eax
     70a:	00 0f                	add    %cl,(%rdi)
     70c:	98                   	cwtl   
     70d:	08 00                	or     %al,(%rax)
     70f:	00 08                	add    %cl,(%rax)
     711:	01 2d f8 03 00 00    	add    %ebp,0x3f8(%rip)        # b0f <__ImageBase+0xb0f>
     717:	05 01 02 00 00       	add    $0x201,%eax
     71c:	01 2e                	add    %ebp,(%rsi)
     71e:	0e                   	(bad)  
     71f:	f8                   	clc    
     720:	03 00                	add    (%rax),%eax
     722:	00 00                	add    %al,(%rax)
     724:	00 08                	add    %cl,(%rax)
     726:	b7 00                	mov    $0x0,%bh
     728:	00 00                	add    %al,(%rax)
     72a:	06                   	(bad)  
     72b:	98                   	cwtl   
     72c:	08 00                	or     %al,(%rax)
     72e:	00 01                	add    %al,(%rcx)
     730:	2f                   	(bad)  
     731:	03 de                	add    %esi,%ebx
     733:	03 00                	add    (%rax),%eax
     735:	00 0f                	add    %cl,(%rdi)
     737:	c4 03 00 00          	(bad)
     73b:	10 01                	adc    %al,(%rcx)
     73d:	31 30                	xor    %esi,(%rax)
     73f:	04 00                	add    $0x0,%al
     741:	00 05 01 02 00 00    	add    %al,0x201(%rip)        # 948 <__ImageBase+0x948>
     747:	01 32                	add    %esi,(%rdx)
     749:	0e                   	(bad)  
     74a:	f8                   	clc    
     74b:	03 00                	add    (%rax),%eax
     74d:	00 00                	add    %al,(%rax)
     74f:	05 c5 04 00 00       	add    $0x4c5,%eax
     754:	01 33                	add    %esi,(%rbx)
     756:	0b c8                	or     %eax,%ecx
     758:	00 00                	add    %al,(%rax)
     75a:	00 08                	add    %cl,(%rax)
     75c:	00 06                	add    %al,(%rsi)
     75e:	c4 03 00 00          	(bad)
     762:	01 34 03             	add    %esi,(%rbx,%rax,1)
     765:	09 04 00             	or     %eax,(%rax,%rax,1)
     768:	00 15 10 9e 02 6c    	add    %dl,0x6c029e10(%rip)        # 6c02a57e <_end+0x6bfff56e>
     76e:	04 00                	add    $0x0,%al
     770:	00 05 e5 08 00 00    	add    %al,0x8e5(%rip)        # 105b <ippcpSetCpuFeatures@plt+0x43>
     776:	01 9e 10 a9 00 00    	add    %ebx,0xa910(%rsi)
     77c:	00 00                	add    %al,(%rax)
     77e:	05 dd 08 00 00       	add    $0x8dd,%eax
     783:	01 9e 24 bc 00 00    	add    %ebx,0xbc24(%rsi)
     789:	00 08                	add    %cl,(%rax)
     78b:	05 2b 08 00 00       	add    $0x82b,%eax
     790:	01 9e 35 bc 00 00    	add    %ebx,0xbc35(%rsi)
     796:	00 09                	add    %cl,(%rcx)
     798:	00 15 48 9c 13 8f    	add    %dl,-0x70ec63b8(%rip)        # ffffffff8f13a3e6 <_end+0xffffffff8f10f3d6>
     79e:	04 00                	add    $0x0,%al
     7a0:	00 05 9a 04 00 00    	add    %al,0x49a(%rip)        # c40 <__ImageBase+0xc40>
     7a6:	01 9d 09 e0 00 00    	add    %ebx,0xe009(%rbp)
     7ac:	00 00                	add    %al,(%rax)
     7ae:	05 80 0a 00 00       	add    $0xa80,%eax
     7b3:	01 9e 45 94 04 00    	add    %ebx,0x49445(%rsi)
     7b9:	00 08                	add    %cl,(%rax)
     7bb:	00 12                	add    %dl,(%rdx)
     7bd:	6c                   	insb   (%dx),%es:(%rdi)
     7be:	04 00                	add    $0x0,%al
     7c0:	00 1b                	add    %bl,(%rbx)
     7c2:	3c 04                	cmp    $0x4,%al
     7c4:	00 00                	add    %al,(%rax)
     7c6:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
     7c7:	04 00                	add    $0x0,%al
     7c9:	00 16                	add    %dl,(%rsi)
     7cb:	7c 00                	jl     7cd <__ImageBase+0x7cd>
     7cd:	00 00                	add    %al,(%rax)
     7cf:	03 00                	add    (%rax),%eax
     7d1:	1c 7e                	sbb    $0x7e,%al
     7d3:	0a 00                	or     (%rax),%al
     7d5:	00 9f 8f 04 00 00    	add    %bl,0x48f(%rdi)
     7db:	09 03                	or     %eax,(%rbx)
     7dd:	c0 7d 01 00          	sarb   $0x0,0x1(%rbp)
     7e1:	00 00                	add    %al,(%rax)
     7e3:	00 00                	add    %al,(%rax)
     7e5:	15 10 a9 13 db       	adc    $0xdb13a910,%eax
     7ea:	04 00                	add    $0x0,%al
     7ec:	00 05 66 0b 00 00    	add    %al,0xb66(%rip)        # 1358 <ippcpSetCpuFeatures@plt+0x340>
     7f2:	01 aa 09 e0 00 00    	add    %ebp,0xe009(%rdx)
     7f8:	00 00                	add    %al,(%rax)
     7fa:	05 4d 09 00 00       	add    $0x94d,%eax
     7ff:	01 ab 0a e0 04 00    	add    %ebp,0x4e00a(%rbx)
     805:	00 08                	add    %cl,(%rax)
     807:	00 12                	add    %dl,(%rdx)
     809:	b8 04 00 00 1b       	mov    $0x1b000004,%eax
     80e:	bc 00 00 00 f6       	mov    $0xf6000000,%esp
     813:	04 00                	add    $0x0,%al
     815:	00 16                	add    %dl,(%rsi)
     817:	7c 00                	jl     819 <__ImageBase+0x819>
     819:	00 00                	add    %al,(%rax)
     81b:	01 16                	add    %edx,(%rsi)
     81d:	7c 00                	jl     81f <__ImageBase+0x81f>
     81f:	00 00                	add    %al,(%rax)
     821:	03 00                	add    (%rax),%eax
     823:	1c 47                	sbb    $0x47,%al
     825:	09 00                	or     %eax,(%rax)
     827:	00 ac db 04 00 00 09 	add    %ch,0x9000004(%rbx,%rbx,8)
     82e:	03 30                	add    (%rax),%esi
     830:	30 01                	xor    %al,(%rcx)
     832:	00 00                	add    %al,(%rax)
     834:	00 00                	add    %al,(%rax)
     836:	00 0a                	add    %cl,(%rdx)
     838:	41 02 00             	add    (%r8),%al
     83b:	00 08                	add    %cl,(%rax)
     83d:	68 15 f5 02 00       	push   $0x2f515
     842:	00 25 05 00 00 03    	add    %ah,0x3000005(%rip)        # 300084d <_end+0x2fd583d>
     848:	64 00 00             	add    %al,%fs:(%rax)
     84b:	00 03                	add    %al,(%rbx)
     84d:	a9 00 00 00 00       	test   $0x0,%eax
     852:	17                   	(bad)  
     853:	c3                   	ret    
     854:	07                   	(bad)  
     855:	00 00                	add    %al,(%rax)
     857:	08 4d 0d             	or     %cl,0xd(%rbp)
     85a:	0a 09                	or     (%rcx),%cl
     85c:	0b 00                	or     (%rax),%eax
     85e:	00 08                	add    %cl,(%rax)
     860:	45 0e                	rex.RB (bad) 
     862:	a9 00 00 00 43       	test   $0x43000000,%eax
     867:	05 00 00 03 e0       	add    $0xe0030000,%eax
     86c:	00 00                	add    %al,(%rax)
     86e:	00 00                	add    %al,(%rax)
     870:	0a c7                	or     %bh,%al
     872:	02 00                	add    (%rax),%al
     874:	00 09                	add    %cl,(%rcx)
     876:	35 0c 56 00 00       	xor    $0x560c,%eax
     87b:	00 5e 05             	add    %bl,0x5(%rsi)
     87e:	00 00                	add    %al,(%rax)
     880:	03 5e 05             	add    0x5(%rsi),%ebx
     883:	00 00                	add    %al,(%rax)
     885:	03 e0                	add    %eax,%esp
     887:	00 00                	add    %al,(%rax)
     889:	00 00                	add    %al,(%rax)
     88b:	08 63 05             	or     %ah,0x5(%rbx)
     88e:	00 00                	add    %al,(%rax)
     890:	28 0a                	sub    %cl,(%rdx)
     892:	a3 04 00 00 07 4b 16 	movabs %eax,0xe0164b07000004
     899:	e0 00 
     89b:	00 00                	add    %al,(%rax)
     89d:	7a 05                	jp     8a4 <__ImageBase+0x8a4>
     89f:	00 00                	add    %al,(%rax)
     8a1:	03 f8                	add    %eax,%edi
     8a3:	03 00                	add    (%rax),%eax
     8a5:	00 00                	add    %al,(%rax)
     8a7:	13 e9                	adc    %ecx,%ebp
     8a9:	07                   	(bad)  
     8aa:	00 00                	add    %al,(%rax)
     8ac:	06                   	(bad)  
     8ad:	1a 06                	sbb    (%rsi),%al
     8af:	8c 05 00 00 03 55    	mov    %es,0x55030000(%rip)        # 550308b5 <_end+0x550058a5>
     8b5:	03 00                	add    (%rax),%eax
     8b7:	00 00                	add    %al,(%rax)
     8b9:	13 ad 03 00 00 06    	adc    0x6000003(%rbp),%ebp
     8bf:	1b 06                	sbb    (%rsi),%eax
     8c1:	a3 05 00 00 03 56 00 	movabs %eax,0x5603000005
     8c8:	00 00 
     8ca:	03 56 00             	add    0x0(%rsi),%edx
     8cd:	00 00                	add    %al,(%rax)
     8cf:	00 17                	add    %dl,(%rdi)
     8d1:	fb                   	sti    
     8d2:	08 00                	or     %al,(%rax)
     8d4:	00 06                	add    %al,(%rsi)
     8d6:	1c 06                	sbb    $0x6,%al
     8d8:	13 c9                	adc    %ecx,%ecx
     8da:	07                   	(bad)  
     8db:	00 00                	add    %al,(%rax)
     8dd:	0a 61 17             	or     0x17(%rcx),%ah
     8e0:	bd 05 00 00 03       	mov    $0x3000005,%ebp
     8e5:	a9 00 00 00 00       	test   $0x0,%eax
     8ea:	0a a1 07 00 00 0b    	or     0xb000007(%rcx),%ah
     8f0:	4d 10 2f             	rex.WRB adc %r13b,(%r15)
     8f3:	03 00                	add    (%rax),%eax
     8f5:	00 e2                	add    %ah,%dl
     8f7:	05 00 00 03 a9       	add    $0xa9030000,%eax
     8fc:	00 00                	add    %al,(%rax)
     8fe:	00 03                	add    %al,(%rbx)
     900:	e0 00                	loopne 902 <__ImageBase+0x902>
     902:	00 00                	add    %al,(%rax)
     904:	03 5e 05             	add    0x5(%rsi),%ebx
     907:	00 00                	add    %al,(%rax)
     909:	03 e0                	add    %eax,%esp
     90b:	00 00                	add    %al,(%rax)
     90d:	00 00                	add    %al,(%rax)
     90f:	13 ad 08 00 00 06    	adc    0x6000008(%rbp),%ebp
     915:	1d 06 fe 05 00       	sbb    $0x5fe06,%eax
     91a:	00 03                	add    %al,(%rbx)
     91c:	56                   	push   %rsi
     91d:	00 00                	add    %al,(%rax)
     91f:	00 03                	add    %al,(%rbx)
     921:	cd 03                	int    $0x3
     923:	00 00                	add    %al,(%rax)
     925:	03 e0                	add    %eax,%esp
     927:	00 00                	add    %al,(%rax)
     929:	00 00                	add    %al,(%rax)
     92b:	0a e3                	or     %bl,%ah
     92d:	0a 00                	or     (%rax),%al
     92f:	00 07                	add    %al,(%rdi)
     931:	44 16                	rex.R (bad) 
     933:	a9 00 00 00 1e       	test   $0x1e000000,%eax
     938:	06                   	(bad)  
     939:	00 00                	add    %al,(%rax)
     93b:	03 a9 00 00 00 03    	add    0x3000000(%rcx),%ebp
     941:	56                   	push   %rsi
     942:	00 00                	add    %al,(%rax)
     944:	00 03                	add    %al,(%rbx)
     946:	e0 00                	loopne 948 <__ImageBase+0x948>
     948:	00 00                	add    %al,(%rax)
     94a:	00 0a                	add    %cl,(%rdx)
     94c:	f0 08 00             	lock or %al,(%rax)
     94f:	00 0a                	add    %cl,(%rdx)
     951:	64 17                	fs (bad) 
     953:	a9 00 00 00 34       	test   $0x34000000,%eax
     958:	06                   	(bad)  
     959:	00 00                	add    %al,(%rax)
     95b:	03 e0                	add    %eax,%esp
     95d:	00 00                	add    %al,(%rax)
     95f:	00 00                	add    %al,(%rax)
     961:	0a 86 02 00 00 0b    	or     0xb000002(%rsi),%al
     967:	4c 10 2f             	rex.WR adc %r13b,(%rdi)
     96a:	03 00                	add    (%rax),%eax
     96c:	00 59 06             	add    %bl,0x6(%rcx)
     96f:	00 00                	add    %al,(%rax)
     971:	03 a9 00 00 00 03    	add    0x3000000(%rcx),%ebp
     977:	e0 00                	loopne 979 <__ImageBase+0x979>
     979:	00 00                	add    %al,(%rax)
     97b:	03 5e 05             	add    0x5(%rsi),%ebx
     97e:	00 00                	add    %al,(%rax)
     980:	03 e0                	add    %eax,%esp
     982:	00 00                	add    %al,(%rax)
     984:	00 00                	add    %al,(%rax)
     986:	17                   	(bad)  
     987:	55                   	push   %rbp
     988:	08 00                	or     %al,(%rax)
     98a:	00 0c 29             	add    %cl,(%rcx,%rbp,1)
     98d:	0d 0a 4a 01 00       	or     $0x14a0a,%eax
     992:	00 09                	add    %cl,(%rcx)
     994:	40 0c 56             	rex or $0x56,%al
     997:	00 00                	add    %al,(%rax)
     999:	00 7c 06 00          	add    %bh,0x0(%rsi,%rax,1)
     99d:	00 03                	add    %al,(%rbx)
     99f:	5e                   	pop    %rsi
     9a0:	05 00 00 03 e0       	add    $0xe0030000,%eax
     9a5:	00 00                	add    %al,(%rax)
     9a7:	00 00                	add    %al,(%rax)
     9a9:	1d 00 00 00 00       	sbb    $0x0,%eax
     9ae:	e8 f5 02 00 00       	call   ca8 <__ImageBase+0xca8>
     9b3:	c0 42 00 00          	rolb   $0x0,0x0(%rdx)
     9b7:	00 00                	add    %al,(%rax)
     9b9:	00 00                	add    %al,(%rax)
     9bb:	11 01                	adc    %eax,(%rcx)
     9bd:	00 00                	add    %al,(%rax)
     9bf:	00 00                	add    %al,(%rax)
     9c1:	00 00                	add    %al,(%rax)
     9c3:	01 9c 0c 08 00 00 10 	add    %ebx,0x10000008(%rsp,%rcx,1)
     9ca:	73 74                	jae    a40 <__ImageBase+0xa40>
     9cc:	72 00                	jb     9ce <__ImageBase+0x9ce>
     9ce:	e8 38 f8 03 00       	call   4020b <_end+0x151fb>
     9d3:	00 9d 00 00 00 97    	add    %bl,-0x69000000(%rbp)
     9d9:	00 00                	add    %al,(%rax)
     9db:	00 10                	add    %dl,(%rax)
     9dd:	61                   	(bad)  
     9de:	00 e8                	add    %ch,%al
     9e0:	46 c8 00 00 00       	rex.RX enter $0x0,$0x0
     9e5:	b8 00 00 00 b6       	mov    $0xb6000000,%eax
     9ea:	00 00                	add    %al,(%rax)
     9ec:	00 0b                	add    %cl,(%rbx)
     9ee:	02 0b                	add    (%rbx),%cl
     9f0:	00 00                	add    %al,(%rax)
     9f2:	ea                   	(bad)  
     9f3:	0f f5 02             	pmaddwd (%rdx),%mm0
     9f6:	00 00                	add    %al,(%rax)
     9f8:	c6 00 00             	movb   $0x0,(%rax)
     9fb:	00 c0                	add    %al,%al
     9fd:	00 00                	add    %al,(%rax)
     9ff:	00 0c 86             	add    %cl,(%rsi,%rax,4)
     a02:	05 00 00 eb 09       	add    $0x9eb0000,%eax
     a07:	e0 00                	loopne a09 <__ImageBase+0xa09>
     a09:	00 00                	add    %al,(%rax)
     a0b:	18 6d 73             	sbb    %ch,0x73(%rbp)
     a0e:	00 ed                	add    %ch,%ch
     a10:	1c 0c                	sbb    $0xc,%al
     a12:	08 00                	or     %al,(%rax)
     a14:	00 e7                	add    %ah,%bh
     a16:	00 00                	add    %al,(%rax)
     a18:	00 df                	add    %bl,%bh
     a1a:	00 00                	add    %al,(%rax)
     a1c:	00 0b                	add    %cl,(%rbx)
     a1e:	d3 01                	roll   %cl,(%rcx)
     a20:	00 00                	add    %al,(%rax)
     a22:	ee                   	out    %al,(%dx)
     a23:	09 e0                	or     %esp,%eax
     a25:	00 00                	add    %al,(%rax)
     a27:	00 10                	add    %dl,(%rax)
     a29:	01 00                	add    %eax,(%rax)
     a2b:	00 06                	add    %al,(%rsi)
     a2d:	01 00                	add    %eax,(%rax)
     a2f:	00 19                	add    %bl,(%rcx)
     a31:	42 04 00             	rex.X add $0x0,%al
     a34:	00 ef                	add    %ch,%bh
     a36:	08 a9 00 00 00 02    	or     %ch,0x2000000(%rcx)
     a3c:	91                   	xchg   %eax,%ecx
     a3d:	48 04 e3             	rex.W add $0xe3,%al
     a40:	42 00 00             	rex.X add %al,(%rax)
     a43:	00 00                	add    %al,(%rax)
     a45:	00 00                	add    %al,(%rax)
     a47:	64 05 00 00 29 07    	fs add $0x7290000,%eax
     a4d:	00 00                	add    %al,(%rax)
     a4f:	02 01                	add    (%rcx),%al
     a51:	55                   	push   %rbp
     a52:	02 73 00             	add    0x0(%rbx),%dh
     a55:	00 04 01             	add    %al,(%rcx,%rax,1)
     a58:	43 00 00             	rex.XB add %al,(%r8)
     a5b:	00 00                	add    %al,(%rax)
     a5d:	00 00                	add    %al,(%rax)
     a5f:	43 05 00 00 47 07    	rex.XB add $0x7470000,%eax
     a65:	00 00                	add    %al,(%rax)
     a67:	02 01                	add    (%rcx),%al
     a69:	55                   	push   %rbp
     a6a:	02 73 00             	add    0x0(%rbx),%dh
     a6d:	02 01                	add    (%rcx),%al
     a6f:	54                   	push   %rsp
     a70:	02 7c 00 00          	add    0x0(%rax,%rax,1),%bh
     a74:	04 25                	add    $0x25,%al
     a76:	43 00 00             	rex.XB add %al,(%r8)
     a79:	00 00                	add    %al,(%rax)
     a7b:	00 00                	add    %al,(%rax)
     a7d:	2d 05 00 00 5f       	sub    $0x5f000005,%eax
     a82:	07                   	(bad)  
     a83:	00 00                	add    %al,(%rax)
     a85:	02 01                	add    (%rcx),%al
     a87:	55                   	push   %rbp
     a88:	02 7d 10             	add    0x10(%rbp),%bh
     a8b:	00 0d 39 43 00 00    	add    %cl,0x4339(%rip)        # 4dca <ct_decode+0x94a>
     a91:	00 00                	add    %al,(%rax)
     a93:	00 00                	add    %al,(%rax)
     a95:	25 05 00 00 04       	and    $0x4000005,%eax
     a9a:	68 43 00 00 00       	push   $0x43
     a9f:	00 00                	add    %al,(%rax)
     aa1:	00 bd 05 00 00 94    	add    %bh,-0x6bfffffb(%rbp)
     aa7:	07                   	(bad)  
     aa8:	00 00                	add    %al,(%rax)
     aaa:	02 01                	add    (%rcx),%al
     aac:	55                   	push   %rbp
     aad:	02 76 00             	add    0x0(%rsi),%dh
     ab0:	02 01                	add    (%rcx),%al
     ab2:	54                   	push   %rsp
     ab3:	01 38                	add    %edi,(%rax)
     ab5:	02 01                	add    (%rcx),%al
     ab7:	51                   	push   %rcx
     ab8:	02 91 48 02 01 52    	add    0x52010248(%rcx),%dl
     abe:	01 38                	add    %edi,(%rax)
     ac0:	00 04 7f             	add    %al,(%rdi,%rdi,2)
     ac3:	43 00 00             	rex.XB add %al,(%r8)
     ac6:	00 00                	add    %al,(%rax)
     ac8:	00 00                	add    %al,(%rax)
     aca:	bd 05 00 00 b8       	mov    $0xb8000005,%ebp
     acf:	07                   	(bad)  
     ad0:	00 00                	add    %al,(%rax)
     ad2:	02 01                	add    (%rcx),%al
     ad4:	54                   	push   %rsp
     ad5:	02 7d 00             	add    0x0(%rbp),%bh
     ad8:	02 01                	add    (%rcx),%al
     ada:	51                   	push   %rcx
     adb:	02 73 00             	add    0x0(%rbx),%dh
     ade:	02 01                	add    (%rcx),%al
     ae0:	52                   	push   %rdx
     ae1:	02 7c 00 00          	add    0x0(%rax,%rax,1),%bh
     ae5:	04 a8                	add    $0xa8,%al
     ae7:	43 00 00             	rex.XB add %al,(%r8)
     aea:	00 00                	add    %al,(%rax)
     aec:	00 00                	add    %al,(%rax)
     aee:	bd 05 00 00 e1       	mov    $0xe1000005,%ebp
     af3:	07                   	(bad)  
     af4:	00 00                	add    %al,(%rax)
     af6:	02 01                	add    (%rcx),%al
     af8:	55                   	push   %rbp
     af9:	02 76 08             	add    0x8(%rsi),%dh
     afc:	02 01                	add    (%rcx),%al
     afe:	54                   	push   %rsp
     aff:	01 38                	add    %edi,(%rax)
     b01:	02 01                	add    (%rcx),%al
     b03:	51                   	push   %rcx
     b04:	03 91 b8 7f 02 01    	add    0x1027fb8(%rcx),%edx
     b0a:	52                   	push   %rdx
     b0b:	01 38                	add    %edi,(%rax)
     b0d:	00 04 b9             	add    %al,(%rcx,%rdi,4)
     b10:	43 00 00             	rex.XB add %al,(%r8)
     b13:	00 00                	add    %al,(%rax)
     b15:	00 00                	add    %al,(%rax)
     b17:	0a 05 00 00 fe 07    	or     0x7fe0000(%rip),%al        # 7fe0b1d <_end+0x7fb5b0d>
     b1d:	00 00                	add    %al,(%rax)
     b1f:	02 01                	add    (%rcx),%al
     b21:	55                   	push   %rbp
     b22:	01 31                	add    %esi,(%rcx)
     b24:	02 01                	add    (%rcx),%al
     b26:	54                   	push   %rsp
     b27:	02 76 00             	add    0x0(%rsi),%dh
     b2a:	00 0d c2 43 00 00    	add    %cl,0x43c2(%rip)        # 4ef2 <ct_decode+0xa72>
     b30:	00 00                	add    %al,(%rax)
     b32:	00 00                	add    %al,(%rax)
     b34:	25 05 00 00 00       	and    $0x5,%eax
     b39:	08 30                	or     %dh,(%rax)
     b3b:	04 00                	add    $0x0,%al
     b3d:	00 1d 39 0b 00 00    	add    %bl,0xb39(%rip)        # 167c <ippcpSetCpuFeatures@plt+0x664>
     b43:	b5 f5                	mov    $0xf5,%ch
     b45:	02 00                	add    (%rax),%al
     b47:	00 d7                	add    %dl,%bh
     b49:	41 00 00             	add    %al,(%r8)
     b4c:	00 00                	add    %al,(%rax)
     b4e:	00 00                	add    %al,(%rax)
     b50:	e9 00 00 00 00       	jmp    b55 <__ImageBase+0xb55>
     b55:	00 00                	add    %al,(%rax)
     b57:	00 01                	add    %al,(%rcx)
     b59:	9c                   	pushf  
     b5a:	67 09 00             	or     %eax,(%eax)
     b5d:	00 10                	add    %dl,(%rax)
     b5f:	73 74                	jae    bd5 <__ImageBase+0xbd5>
     b61:	72 00                	jb     b63 <__ImageBase+0xb63>
     b63:	b5 30                	mov    $0x30,%ch
     b65:	f8                   	clc    
     b66:	03 00                	add    (%rax),%eax
     b68:	00 40 01             	add    %al,0x1(%rax)
     b6b:	00 00                	add    %al,(%rax)
     b6d:	3a 01                	cmp    (%rcx),%al
     b6f:	00 00                	add    %al,(%rax)
     b71:	0b 02                	or     (%rdx),%eax
     b73:	0b 00                	or     (%rax),%eax
     b75:	00 b7 0f f5 02 00    	add    %dh,0x2f50f(%rdi)
     b7b:	00 5f 01             	add    %bl,0x1(%rdi)
     b7e:	00 00                	add    %al,(%rax)
     b80:	59                   	pop    %rcx
     b81:	01 00                	add    %eax,(%rax)
     b83:	00 0c 86             	add    %cl,(%rsi,%rax,4)
     b86:	05 00 00 b8 09       	add    $0x9b80000,%eax
     b8b:	e0 00                	loopne b8d <__ImageBase+0xb8d>
     b8d:	00 00                	add    %al,(%rax)
     b8f:	18 6d 73             	sbb    %ch,0x73(%rbp)
     b92:	00 ba 14 67 09 00    	add    %bh,0x96714(%rdx)
     b98:	00 80 01 00 00 78    	add    %al,0x78000001(%rax)
     b9e:	01 00                	add    %eax,(%rax)
     ba0:	00 0b                	add    %cl,(%rbx)
     ba2:	d3 01                	roll   %cl,(%rcx)
     ba4:	00 00                	add    %al,(%rax)
     ba6:	bb 09 e0 00 00       	mov    $0xe009,%ebx
     bab:	00 a9 01 00 00 9f    	add    %ch,-0x60ffffff(%rcx)
     bb1:	01 00                	add    %eax,(%rax)
     bb3:	00 19                	add    %bl,(%rcx)
     bb5:	42 04 00             	rex.X add $0x0,%al
     bb8:	00 bc 08 a9 00 00 00 	add    %bh,0xa9(%rax,%rcx,1)
     bbf:	02 91 48 04 f4 41    	add    0x41f40448(%rcx),%dl
     bc5:	00 00                	add    %al,(%rax)
     bc7:	00 00                	add    %al,(%rax)
     bc9:	00 00                	add    %al,(%rax)
     bcb:	64 05 00 00 ad 08    	fs add $0x8ad0000,%eax
     bd1:	00 00                	add    %al,(%rax)
     bd3:	02 01                	add    (%rcx),%al
     bd5:	55                   	push   %rbp
     bd6:	02 73 00             	add    0x0(%rbx),%dh
     bd9:	00 04 12             	add    %al,(%rdx,%rdx,1)
     bdc:	42 00 00             	rex.X add %al,(%rax)
     bdf:	00 00                	add    %al,(%rax)
     be1:	00 00                	add    %al,(%rax)
     be3:	43 05 00 00 cb 08    	rex.XB add $0x8cb0000,%eax
     be9:	00 00                	add    %al,(%rax)
     beb:	02 01                	add    (%rcx),%al
     bed:	55                   	push   %rbp
     bee:	02 73 00             	add    0x0(%rbx),%dh
     bf1:	02 01                	add    (%rcx),%al
     bf3:	54                   	push   %rsp
     bf4:	02 76 00             	add    0x0(%rsi),%dh
     bf7:	00 04 36             	add    %al,(%rsi,%rsi,1)
     bfa:	42 00 00             	rex.X add %al,(%rax)
     bfd:	00 00                	add    %al,(%rax)
     bff:	00 00                	add    %al,(%rax)
     c01:	2d 05 00 00 e3       	sub    $0xe3000005,%eax
     c06:	08 00                	or     %al,(%rax)
     c08:	00 02                	add    %al,(%rdx)
     c0a:	01 55 02             	add    %edx,0x2(%rbp)
     c0d:	7d 08                	jge    c17 <__ImageBase+0xc17>
     c0f:	00 0d 4a 42 00 00    	add    %cl,0x424a(%rip)        # 4e5f <ct_decode+0x9df>
     c15:	00 00                	add    %al,(%rax)
     c17:	00 00                	add    %al,(%rax)
     c19:	25 05 00 00 04       	and    $0x4000005,%eax
     c1e:	76 42                	jbe    c62 <__ImageBase+0xc62>
     c20:	00 00                	add    %al,(%rax)
     c22:	00 00                	add    %al,(%rax)
     c24:	00 00                	add    %al,(%rax)
     c26:	bd 05 00 00 18       	mov    $0x18000005,%ebp
     c2b:	09 00                	or     %eax,(%rax)
     c2d:	00 02                	add    %al,(%rdx)
     c2f:	01 55 02             	add    %edx,0x2(%rbp)
     c32:	7c 00                	jl     c34 <__ImageBase+0xc34>
     c34:	02 01                	add    (%rcx),%al
     c36:	54                   	push   %rsp
     c37:	01 38                	add    %edi,(%rax)
     c39:	02 01                	add    (%rcx),%al
     c3b:	51                   	push   %rcx
     c3c:	02 91 48 02 01 52    	add    0x52010248(%rcx),%dl
     c42:	01 38                	add    %edi,(%rax)
     c44:	00 04 8d 42 00 00 00 	add    %al,0x42(,%rcx,4)
     c4b:	00 00                	add    %al,(%rax)
     c4d:	00 bd 05 00 00 3c    	add    %bh,0x3c000005(%rbp)
     c53:	09 00                	or     %eax,(%rax)
     c55:	00 02                	add    %al,(%rdx)
     c57:	01 54 02 7d          	add    %edx,0x7d(%rdx,%rax,1)
     c5b:	00 02                	add    %al,(%rdx)
     c5d:	01 51 02             	add    %edx,0x2(%rcx)
     c60:	73 00                	jae    c62 <__ImageBase+0xc62>
     c62:	02 01                	add    (%rcx),%al
     c64:	52                   	push   %rdx
     c65:	02 76 00             	add    0x0(%rsi),%dh
     c68:	00 04 a8             	add    %al,(%rax,%rbp,4)
     c6b:	42 00 00             	rex.X add %al,(%rax)
     c6e:	00 00                	add    %al,(%rax)
     c70:	00 00                	add    %al,(%rax)
     c72:	0a 05 00 00 59 09    	or     0x9590000(%rip),%al        # 9590c78 <_end+0x9565c68>
     c78:	00 00                	add    %al,(%rax)
     c7a:	02 01                	add    (%rcx),%al
     c7c:	55                   	push   %rbp
     c7d:	01 30                	add    %esi,(%rax)
     c7f:	02 01                	add    (%rcx),%al
     c81:	54                   	push   %rsp
     c82:	02 7c 00 00          	add    0x0(%rax,%rax,1),%bh
     c86:	0d b1 42 00 00       	or     $0x42b1,%eax
     c8b:	00 00                	add    %al,(%rax)
     c8d:	00 00                	add    %al,(%rax)
     c8f:	25 05 00 00 00       	and    $0x5,%eax
     c94:	08 fd                	or     %bh,%ch
     c96:	03 00                	add    (%rax),%eax
     c98:	00 1e                	add    %bl,(%rsi)
     c9a:	a9 08 00 00 69       	test   $0x69000008,%eax
     c9f:	f5                   	cmc    
     ca0:	02 00                	add    (%rax),%al
     ca2:	00 06                	add    %al,(%rsi)
     ca4:	40 00 00             	rex add %al,(%rax)
     ca7:	00 00                	add    %al,(%rax)
     ca9:	00 00                	add    %al,(%rax)
     cab:	ef                   	out    %eax,(%dx)
     cac:	00 00                	add    %al,(%rax)
     cae:	00 00                	add    %al,(%rax)
     cb0:	00 00                	add    %al,(%rax)
     cb2:	00 01                	add    %al,(%rcx)
     cb4:	9c                   	pushf  
     cb5:	08 0b                	or     %cl,(%rbx)
     cb7:	00 00                	add    %al,(%rax)
     cb9:	10 70 6d             	adc    %dh,0x6d(%rax)
     cbc:	73 00                	jae    cbe <__ImageBase+0xcbe>
     cbe:	69 3a a9 00 00 00    	imul   $0xa9,(%rdx),%edi
     cc4:	e1 01                	loope  cc7 <__ImageBase+0xcc7>
     cc6:	00 00                	add    %al,(%rax)
     cc8:	d3 01                	roll   %cl,(%rcx)
     cca:	00 00                	add    %al,(%rax)
     ccc:	18 6d 73             	sbb    %ch,0x73(%rbp)
     ccf:	00 70 19             	add    %dh,0x19(%rax)
     cd2:	08 0b                	or     %cl,(%rbx)
     cd4:	00 00                	add    %al,(%rax)
     cd6:	19 02                	sbb    %eax,(%rdx)
     cd8:	00 00                	add    %al,(%rax)
     cda:	11 02                	adc    %eax,(%rdx)
     cdc:	00 00                	add    %al,(%rax)
     cde:	19 f3                	sbb    %esi,%ebx
     ce0:	05 00 00 71 18       	add    $0x18710000,%eax
     ce5:	d2 03                	rolb   %cl,(%rbx)
     ce7:	00 00                	add    %al,(%rax)
     ce9:	03 91 b8 7f 0b 02    	add    0x20b7fb8(%rcx),%edx
     cef:	0b 00                	or     (%rax),%eax
     cf1:	00 75 0f             	add    %dh,0xf(%rbp)
     cf4:	f5                   	cmc    
     cf5:	02 00                	add    (%rax),%al
     cf7:	00 3b                	add    %bh,(%rbx)
     cf9:	02 00                	add    (%rax),%al
     cfb:	00 37                	add    %dh,(%rdi)
     cfd:	02 00                	add    (%rax),%al
     cff:	00 0b                	add    %cl,(%rbx)
     d01:	66 06                	data16 (bad) 
     d03:	00 00                	add    %al,(%rax)
     d05:	76 08                	jbe    d0f <__ImageBase+0xd0f>
     d07:	cd 03                	int    $0x3
     d09:	00 00                	add    %al,(%rax)
     d0b:	51                   	push   %rcx
     d0c:	02 00                	add    (%rax),%al
     d0e:	00 4f 02             	add    %cl,0x2(%rdi)
     d11:	00 00                	add    %al,(%rax)
     d13:	0b 8c 0a 00 00 77 09 	or     0x9770000(%rdx,%rcx,1),%ecx
     d1a:	e0 00                	loopne d1c <__ImageBase+0xd1c>
     d1c:	00 00                	add    %al,(%rax)
     d1e:	5a                   	pop    %rdx
     d1f:	02 00                	add    (%rax),%al
     d21:	00 58 02             	add    %bl,0x2(%rax)
     d24:	00 00                	add    %al,(%rax)
     d26:	0b 19                	or     (%rcx),%ebx
     d28:	04 00                	add    $0x0,%al
     d2a:	00 78 09             	add    %bh,0x9(%rax)
     d2d:	e0 00                	loopne d2f <__ImageBase+0xd2f>
     d2f:	00 00                	add    %al,(%rax)
     d31:	63 02                	movsxd (%rdx),%eax
     d33:	00 00                	add    %al,(%rax)
     d35:	61                   	(bad)  
     d36:	02 00                	add    (%rax),%al
     d38:	00 0b                	add    %cl,(%rbx)
     d3a:	03 08                	add    (%rax),%ecx
     d3c:	00 00                	add    %al,(%rax)
     d3e:	79 08                	jns    d48 <__ImageBase+0xd48>
     d40:	cd 03                	int    $0x3
     d42:	00 00                	add    %al,(%rax)
     d44:	70 02                	jo     d48 <__ImageBase+0xd48>
     d46:	00 00                	add    %al,(%rax)
     d48:	6a 02                	push   $0x2
     d4a:	00 00                	add    %al,(%rax)
     d4c:	29 65 72             	sub    %esp,0x72(%rbp)
     d4f:	72 00                	jb     d51 <__ImageBase+0xd51>
     d51:	01 97 01 e2 40 00    	add    %edx,0x40e201(%rdi)
     d57:	00 00                	add    %al,(%rax)
     d59:	00 00                	add    %al,(%rax)
     d5b:	00 04 31             	add    %al,(%rcx,%rsi,1)
     d5e:	40 00 00             	rex add %al,(%rax)
     d61:	00 00                	add    %al,(%rax)
     d63:	00 00                	add    %al,(%rax)
     d65:	61                   	(bad)  
     d66:	06                   	(bad)  
     d67:	00 00                	add    %al,(%rax)
     d69:	4c 0a 00             	rex.WR or (%rax),%r8b
     d6c:	00 02                	add    %al,(%rdx)
     d6e:	01 55 02             	add    %edx,0x2(%rbp)
     d71:	73 00                	jae    d73 <__ImageBase+0xd73>
     d73:	02 01                	add    (%rcx),%al
     d75:	54                   	push   %rsp
     d76:	01 48 00             	add    %ecx,0x0(%rax)
     d79:	04 55                	add    $0x55,%al
     d7b:	40 00 00             	rex add %al,(%rax)
     d7e:	00 00                	add    %al,(%rax)
     d80:	00 00                	add    %al,(%rax)
     d82:	34 06                	xor    $0x6,%al
     d84:	00 00                	add    %al,(%rax)
     d86:	75 0a                	jne    d92 <__ImageBase+0xd92>
     d88:	00 00                	add    %al,(%rax)
     d8a:	02 01                	add    (%rcx),%al
     d8c:	55                   	push   %rbp
     d8d:	03 91 b8 7f 02 01    	add    0x1027fb8(%rcx),%edx
     d93:	54                   	push   %rsp
     d94:	01 48 02             	add    %ecx,0x2(%rax)
     d97:	01 51 02             	add    %edx,0x2(%rcx)
     d9a:	73 00                	jae    d9c <__ImageBase+0xd9c>
     d9c:	02 01                	add    (%rcx),%al
     d9e:	52                   	push   %rdx
     d9f:	01 48 00             	add    %ecx,0x0(%rax)
     da2:	04 88                	add    $0x88,%al
     da4:	40 00 00             	rex add %al,(%rax)
     da7:	00 00                	add    %al,(%rax)
     da9:	00 00                	add    %al,(%rax)
     dab:	61                   	(bad)  
     dac:	06                   	(bad)  
     dad:	00 00                	add    %al,(%rax)
     daf:	93                   	xchg   %eax,%ebx
     db0:	0a 00                	or     (%rax),%al
     db2:	00 02                	add    %al,(%rdx)
     db4:	01 55 02             	add    %edx,0x2(%rbp)
     db7:	7d 00                	jge    db9 <__ImageBase+0xdb9>
     db9:	02 01                	add    (%rcx),%al
     dbb:	54                   	push   %rsp
     dbc:	02 76 00             	add    0x0(%rsi),%dh
     dbf:	00 04 9c             	add    %al,(%rsp,%rbx,4)
     dc2:	40 00 00             	rex add %al,(%rax)
     dc5:	00 00                	add    %al,(%rax)
     dc7:	00 00                	add    %al,(%rax)
     dc9:	1e                   	(bad)  
     dca:	06                   	(bad)  
     dcb:	00 00                	add    %al,(%rax)
     dcd:	ab                   	stos   %eax,%es:(%rdi)
     dce:	0a 00                	or     (%rax),%al
     dd0:	00 02                	add    %al,(%rdx)
     dd2:	01 55 02             	add    %edx,0x2(%rbp)
     dd5:	76 00                	jbe    dd7 <__ImageBase+0xdd7>
     dd7:	00 04 c0             	add    %al,(%rax,%rax,8)
     dda:	40 00 00             	rex add %al,(%rax)
     ddd:	00 00                	add    %al,(%rax)
     ddf:	00 00                	add    %al,(%rax)
     de1:	e2 05                	loop   de8 <__ImageBase+0xde8>
     de3:	00 00                	add    %al,(%rax)
     de5:	c9                   	leave  
     de6:	0a 00                	or     (%rax),%al
     de8:	00 02                	add    %al,(%rdx)
     dea:	01 54 02 73          	add    %edx,0x73(%rdx,%rax,1)
     dee:	00 02                	add    %al,(%rdx)
     df0:	01 51 02             	add    %edx,0x2(%rcx)
     df3:	76 00                	jbe    df5 <__ImageBase+0xdf5>
     df5:	00 04 d6             	add    %al,(%rsi,%rdx,8)
     df8:	40 00 00             	rex add %al,(%rax)
     dfb:	00 00                	add    %al,(%rax)
     dfd:	00 00                	add    %al,(%rax)
     dff:	bd 05 00 00 f3       	mov    $0xf3000005,%ebp
     e04:	0a 00                	or     (%rax),%al
     e06:	00 02                	add    %al,(%rdx)
     e08:	01 55 02             	add    %edx,0x2(%rbp)
     e0b:	7d 00                	jge    e0d <__ImageBase+0xe0d>
     e0d:	02 01                	add    (%rcx),%al
     e0f:	54                   	push   %rsp
     e10:	02 76 00             	add    0x0(%rsi),%dh
     e13:	02 01                	add    (%rcx),%al
     e15:	51                   	push   %rcx
     e16:	02 73 00             	add    0x0(%rbx),%dh
     e19:	02 01                	add    (%rcx),%al
     e1b:	52                   	push   %rdx
     e1c:	02 76 00             	add    0x0(%rsi),%dh
     e1f:	00 1a                	add    %bl,(%rdx)
     e21:	e7 40                	out    %eax,$0x40
     e23:	00 00                	add    %al,(%rax)
     e25:	00 00                	add    %al,(%rax)
     e27:	00 00                	add    %al,(%rax)
     e29:	ab                   	stos   %eax,%es:(%rdi)
     e2a:	05 00 00 02 01       	add    $0x1020000,%eax
     e2f:	55                   	push   %rbp
     e30:	02 73 00             	add    0x0(%rbx),%dh
     e33:	00 00                	add    %al,(%rax)
     e35:	08 d2                	or     %dl,%dl
     e37:	03 00                	add    (%rax),%eax
     e39:	00 1e                	add    %bl,(%rsi)
     e3b:	f7 08 00 00 61 f5    	testl  $0xf5610000,(%rax)
     e41:	02 00                	add    (%rax),%al
     e43:	00 f5                	add    %dh,%ch
     e45:	40 00 00             	rex add %al,(%rax)
     e48:	00 00                	add    %al,(%rax)
     e4a:	00 00                	add    %al,(%rax)
     e4c:	19 00                	sbb    %eax,(%rax)
     e4e:	00 00                	add    %al,(%rax)
     e50:	00 00                	add    %al,(%rax)
     e52:	00 00                	add    %al,(%rax)
     e54:	01 9c 5b 0b 00 00 10 	add    %ebx,0x1000000b(%rbx,%rbx,2)
     e5b:	70 6d                	jo     eca <__ImageBase+0xeca>
     e5d:	73 00                	jae    e5f <__ImageBase+0xe5f>
     e5f:	61                   	(bad)  
     e60:	3c a9                	cmp    $0xa9,%al
     e62:	00 00                	add    %al,(%rax)
     e64:	00 8c 02 00 00 86 02 	add    %cl,0x2860000(%rdx,%rax,1)
     e6b:	00 00                	add    %al,(%rax)
     e6d:	2a 02                	sub    (%rdx),%al
     e6f:	0b 00                	or     (%rax),%eax
     e71:	00 01                	add    %al,(%rcx)
     e73:	63 0f                	movsxd (%rdi),%ecx
     e75:	f5                   	cmc    
     e76:	02 00                	add    (%rax),%al
     e78:	00 00                	add    %al,(%rax)
     e7a:	0d 04 41 00 00       	or     $0x4104,%eax
     e7f:	00 00                	add    %al,(%rax)
     e81:	00 00                	add    %al,(%rax)
     e83:	a3 05 00 00 00 1f a9 	movabs %eax,0x3a91f00000005
     e8a:	03 00 
     e8c:	00 4c f5 02          	add    %cl,0x2(%rbp,%rsi,8)
     e90:	00 00                	add    %al,(%rax)
     e92:	95                   	xchg   %eax,%ebp
     e93:	0b 00                	or     (%rax),%eax
     e95:	00 20                	add    %ah,(%rax)
     e97:	70 6d                	jo     f06 <__ImageBase+0xf06>
     e99:	73 00                	jae    e9b <__ImageBase+0xe9b>
     e9b:	4c                   	rex.WR
     e9c:	40 a9 00 00 00 21    	rex test $0x21000000,%eax
     ea2:	6d                   	insl   (%dx),%es:(%rdi)
     ea3:	73 00                	jae    ea5 <__ImageBase+0xea5>
     ea5:	53                   	push   %rbx
     ea6:	1f                   	(bad)  
     ea7:	95                   	xchg   %eax,%ebp
     ea8:	0b 00                	or     (%rax),%eax
     eaa:	00 0c f3             	add    %cl,(%rbx,%rsi,8)
     ead:	05 00 00 54 1e       	add    $0x1e540000,%eax
     eb2:	8d 03                	lea    (%rbx),%eax
     eb4:	00 00                	add    %al,(%rax)
     eb6:	0c 02                	or     $0x2,%al
     eb8:	0b 00                	or     (%rax),%eax
     eba:	00 58 0f             	add    %bl,0xf(%rax)
     ebd:	f5                   	cmc    
     ebe:	02 00                	add    (%rax),%al
     ec0:	00 00                	add    %al,(%rax)
     ec2:	08 8d 03 00 00 1f    	or     %cl,0x1f000003(%rbp)
     ec8:	e5 07                	in     $0x7,%eax
     eca:	00 00                	add    %al,(%rax)
     ecc:	36 f5                	ss cmc 
     ece:	02 00                	add    (%rax),%al
     ed0:	00 df                	add    %bl,%bh
     ed2:	0b 00                	or     (%rax),%eax
     ed4:	00 20                	add    %ah,(%rax)
     ed6:	70 6d                	jo     f45 <__ImageBase+0xf45>
     ed8:	73 00                	jae    eda <__ImageBase+0xeda>
     eda:	36 43 a9 00 00 00 21 	ss rex.XB test $0x21000000,%eax
     ee1:	6d                   	insl   (%dx),%es:(%rdi)
     ee2:	73 00                	jae    ee4 <__ImageBase+0xee4>
     ee4:	3d 22 df 0b 00       	cmp    $0xbdf22,%eax
     ee9:	00 0c f3             	add    %cl,(%rbx,%rsi,8)
     eec:	05 00 00 3e 21       	add    $0x213e0000,%eax
     ef1:	5a                   	pop    %rdx
     ef2:	03 00                	add    (%rax),%eax
     ef4:	00 0c 02             	add    %cl,(%rdx,%rax,1)
     ef7:	0b 00                	or     (%rax),%eax
     ef9:	00 42 0f             	add    %al,0xf(%rdx)
     efc:	f5                   	cmc    
     efd:	02 00                	add    (%rax),%al
     eff:	00 0c ca             	add    %cl,(%rdx,%rcx,8)
     f02:	08 00                	or     %al,(%rax)
     f04:	00 43 14             	add    %al,0x14(%rbx)
     f07:	55                   	push   %rbp
     f08:	03 00                	add    (%rax),%eax
     f0a:	00 00                	add    %al,(%rax)
     f0c:	08 5a 03             	or     %bl,0x3(%rdx)
     f0f:	00 00                	add    %al,(%rax)
     f11:	2b 5b 0b             	sub    0xb(%rbx),%ebx
     f14:	00 00                	add    %al,(%rax)
     f16:	0e                   	(bad)  
     f17:	41 00 00             	add    %al,(%r8)
     f1a:	00 00                	add    %al,(%rax)
     f1c:	00 00                	add    %al,(%rax)
     f1e:	66 00 00             	data16 add %al,(%rax)
     f21:	00 00                	add    %al,(%rax)
     f23:	00 00                	add    %al,(%rax)
     f25:	00 01                	add    %al,(%rcx)
     f27:	9c                   	pushf  
     f28:	bd 0c 00 00 14       	mov    $0x1400000c,%ebp
     f2d:	69 0b 00 00 ad 02    	imul   $0x2ad0000,(%rbx),%ecx
     f33:	00 00                	add    %al,(%rax)
     f35:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
     f36:	02 00                	add    (%rax),%al
     f38:	00 0e                	add    %cl,(%rsi)
     f3a:	74 0b                	je     f47 <__ImageBase+0xf47>
     f3c:	00 00                	add    %al,(%rax)
     f3e:	0e                   	(bad)  
     f3f:	7e 0b                	jle    f4c <__ImageBase+0xf4c>
     f41:	00 00                	add    %al,(%rax)
     f43:	0e                   	(bad)  
     f44:	89 0b                	mov    %ecx,(%rbx)
     f46:	00 00                	add    %al,(%rax)
     f48:	22 5b 0b             	and    0xb(%rbx),%bl
     f4b:	00 00                	add    %al,(%rax)
     f4d:	34 41                	xor    $0x41,%al
     f4f:	00 00                	add    %al,(%rax)
     f51:	00 00                	add    %al,(%rax)
     f53:	00 00                	add    %al,(%rax)
     f55:	00 34 41             	add    %dh,(%rcx,%rax,2)
     f58:	00 00                	add    %al,(%rax)
     f5a:	00 00                	add    %al,(%rax)
     f5c:	00 00                	add    %al,(%rax)
     f5e:	34 00                	xor    $0x0,%al
     f60:	00 00                	add    %al,(%rax)
     f62:	00 00                	add    %al,(%rax)
     f64:	00 00                	add    %al,(%rax)
     f66:	4c a3 0c 00 00 14 69 	rex.WR movabs %rax,0xb691400000c
     f6d:	0b 00 00 
     f70:	cf                   	iret   
     f71:	02 00                	add    (%rax),%al
     f73:	00 cd                	add    %cl,%ch
     f75:	02 00                	add    (%rax),%al
     f77:	00 11                	add    %dl,(%rcx)
     f79:	74 0b                	je     f86 <__ImageBase+0xf86>
     f7b:	00 00                	add    %al,(%rax)
     f7d:	d9 02                	flds   (%rdx)
     f7f:	00 00                	add    %al,(%rax)
     f81:	d7                   	xlat   %ds:(%rbx)
     f82:	02 00                	add    (%rax),%al
     f84:	00 23                	add    %ah,(%rbx)
     f86:	7e 0b                	jle    f93 <__ImageBase+0xf93>
     f88:	00 00                	add    %al,(%rax)
     f8a:	02 91 68 11 89 0b    	add    0xb891168(%rcx),%dl
     f90:	00 00                	add    %al,(%rax)
     f92:	e3 02                	jrcxz  f96 <__ImageBase+0xf96>
     f94:	00 00                	add    %al,(%rax)
     f96:	e1 02                	loope  f9a <__ImageBase+0xf9a>
     f98:	00 00                	add    %al,(%rax)
     f9a:	04 4e                	add    $0x4e,%al
     f9c:	41 00 00             	add    %al,(%r8)
     f9f:	00 00                	add    %al,(%rax)
     fa1:	00 00                	add    %al,(%rax)
     fa3:	34 06                	xor    $0x6,%al
     fa5:	00 00                	add    %al,(%rax)
     fa7:	95                   	xchg   %eax,%ebp
     fa8:	0c 00                	or     $0x0,%al
     faa:	00 02                	add    %al,(%rdx)
     fac:	01 55 02             	add    %edx,0x2(%rbp)
     faf:	91                   	xchg   %eax,%ecx
     fb0:	68 02 01 54 01       	push   $0x1540102
     fb5:	38 02                	cmp    %al,(%rdx)
     fb7:	01 51 02             	add    %edx,0x2(%rcx)
     fba:	73 00                	jae    fbc <__ImageBase+0xfbc>
     fbc:	02 01                	add    (%rcx),%al
     fbe:	52                   	push   %rdx
     fbf:	01 38                	add    %edi,(%rax)
     fc1:	00 0d 66 41 00 00    	add    %cl,0x4166(%rip)        # 512d <ct_decode+0xcad>
     fc7:	00 00                	add    %al,(%rax)
     fc9:	00 00                	add    %al,(%rax)
     fcb:	8c 05 00 00 00 1a    	mov    %es,0x1a000000(%rip)        # 1a000fd1 <_end+0x19fd5fc1>
     fd1:	29 41 00             	sub    %eax,0x0(%rcx)
     fd4:	00 00                	add    %al,(%rax)
     fd6:	00 00                	add    %al,(%rax)
     fd8:	00 61 06             	add    %ah,0x6(%rcx)
     fdb:	00 00                	add    %al,(%rax)
     fdd:	02 01                	add    (%rcx),%al
     fdf:	55                   	push   %rbp
     fe0:	02 73 00             	add    0x0(%rbx),%dh
     fe3:	02 01                	add    (%rcx),%al
     fe5:	54                   	push   %rsp
     fe6:	01 38                	add    %edi,(%rax)
     fe8:	00 00                	add    %al,(%rax)
     fea:	2c 9a                	sub    $0x9a,%al
     fec:	0b 00                	or     (%rax),%eax
     fee:	00 74 41 00          	add    %dh,0x0(%rcx,%rax,2)
     ff2:	00 00                	add    %al,(%rax)
     ff4:	00 00                	add    %al,(%rax)
     ff6:	00 63 00             	add    %ah,0x0(%rbx)
     ff9:	00 00                	add    %al,(%rax)
     ffb:	00 00                	add    %al,(%rax)
     ffd:	00 00                	add    %al,(%rax)
     fff:	01 9c 14 a8 0b 00 00 	add    %ebx,0xba8(%rsp,%rdx,1)
    1006:	f4                   	hlt    
    1007:	02 00                	add    (%rax),%al
    1009:	00 ec                	add    %ch,%ah
    100b:	02 00                	add    (%rax),%al
    100d:	00 0e                	add    %cl,(%rsi)
    100f:	b3 0b                	mov    $0xb,%bl
    1011:	00 00                	add    %al,(%rax)
    1013:	0e                   	(bad)  
    1014:	bd 0b 00 00 0e       	mov    $0xe00000b,%ebp
    1019:	c8 0b 00 00          	enter  $0xb,$0x0
    101d:	0e                   	(bad)  
    101e:	d3 0b                	rorl   %cl,(%rbx)
    1020:	00 00                	add    %al,(%rax)
    1022:	22 9a 0b 00 00 9a    	and    -0x65fffff5(%rdx),%bl
    1028:	41 00 00             	add    %al,(%r8)
    102b:	00 00                	add    %al,(%rax)
    102d:	00 00                	add    %al,(%rax)
    102f:	00 9a 41 00 00 00    	add    %bl,0x41(%rdx)
    1035:	00 00                	add    %al,(%rax)
    1037:	00 31                	add    %dh,(%rcx)
    1039:	00 00                	add    %al,(%rax)
    103b:	00 00                	add    %al,(%rax)
    103d:	00 00                	add    %al,(%rax)
    103f:	00 36                	add    %dh,(%rsi)
    1041:	8a 0d 00 00 14 a8    	mov    -0x57ec0000(%rip),%cl        # ffffffffa8141047 <_end+0xffffffffa8116037>
    1047:	0b 00                	or     (%rax),%eax
    1049:	00 16                	add    %dl,(%rsi)
    104b:	03 00                	add    (%rax),%eax
    104d:	00 14 03             	add    %dl,(%rbx,%rax,1)
    1050:	00 00                	add    %al,(%rax)
    1052:	11 b3 0b 00 00 20    	adc    %esi,0x2000000b(%rbx)
    1058:	03 00                	add    (%rax),%eax
    105a:	00 1e                	add    %bl,(%rsi)
    105c:	03 00                	add    (%rax),%eax
    105e:	00 23                	add    %ah,(%rbx)
    1060:	bd 0b 00 00 02       	mov    $0x200000b,%ebp
    1065:	91                   	xchg   %eax,%ecx
    1066:	68 11 c8 0b 00       	push   $0xbc811
    106b:	00 2a                	add    %ch,(%rdx)
    106d:	03 00                	add    (%rax),%eax
    106f:	00 28                	add    %ch,(%rax)
    1071:	03 00                	add    (%rax),%eax
    1073:	00 11                	add    %dl,(%rcx)
    1075:	d3 0b                	rorl   %cl,(%rbx)
    1077:	00 00                	add    %al,(%rax)
    1079:	35 03 00 00 33       	xor    $0x33000003,%eax
    107e:	03 00                	add    (%rax),%eax
    1080:	00 04 b4             	add    %al,(%rsp,%rsi,4)
    1083:	41 00 00             	add    %al,(%r8)
    1086:	00 00                	add    %al,(%rax)
    1088:	00 00                	add    %al,(%rax)
    108a:	34 06                	xor    $0x6,%al
    108c:	00 00                	add    %al,(%rax)
    108e:	7c 0d                	jl     109d <ippcpSetCpuFeatures@plt+0x85>
    1090:	00 00                	add    %al,(%rax)
    1092:	02 01                	add    (%rcx),%al
    1094:	55                   	push   %rbp
    1095:	02 91 68 02 01 54    	add    0x54010268(%rcx),%dl
    109b:	01 38                	add    %edi,(%rax)
    109d:	02 01                	add    (%rcx),%al
    109f:	51                   	push   %rcx
    10a0:	02 73 00             	add    0x0(%rbx),%dh
    10a3:	02 01                	add    (%rcx),%al
    10a5:	52                   	push   %rdx
    10a6:	01 38                	add    %edi,(%rax)
    10a8:	00 0d c9 41 00 00    	add    %cl,0x41c9(%rip)        # 5277 <ct_decode+0xdf7>
    10ae:	00 00                	add    %al,(%rax)
    10b0:	00 00                	add    %al,(%rax)
    10b2:	7a 05                	jp     10b9 <ippcpSetCpuFeatures@plt+0xa1>
    10b4:	00 00                	add    %al,(%rax)
    10b6:	00 1a                	add    %bl,(%rdx)
    10b8:	8f 41 00             	pop    0x0(%rcx)
    10bb:	00 00                	add    %al,(%rax)
    10bd:	00 00                	add    %al,(%rax)
    10bf:	00 61 06             	add    %ah,0x6(%rcx)
    10c2:	00 00                	add    %al,(%rax)
    10c4:	02 01                	add    (%rcx),%al
    10c6:	55                   	push   %rbp
    10c7:	02 73 00             	add    0x0(%rbx),%dh
    10ca:	02 01                	add    (%rcx),%al
    10cc:	54                   	push   %rsp
    10cd:	01 38                	add    %edi,(%rax)
    10cf:	00 00                	add    %al,(%rax)
	...

Disassembly of section .debug_abbrev:

0000000000000000 <.debug_abbrev>:
   0:	01 24 00             	add    %esp,(%rax,%rax,1)
   3:	0b 0b                	or     (%rbx),%ecx
   5:	3e 0b 03             	ds or  (%rbx),%eax
   8:	0e                   	(bad)  
   9:	00 00                	add    %al,(%rax)
   b:	02 49 00             	add    0x0(%rcx),%cl
   e:	02 18                	add    (%rax),%bl
  10:	7e 18                	jle    2a <__ImageBase+0x2a>
  12:	00 00                	add    %al,(%rax)
  14:	03 0f                	add    (%rdi),%ecx
  16:	00 0b                	add    %cl,(%rbx)
  18:	21 08                	and    %ecx,(%rax)
  1a:	49 13 00             	adc    (%r8),%rax
  1d:	00 04 05 00 49 13 00 	add    %al,0x134900(,%rax,1)
  24:	00 05 16 00 03 0e    	add    %al,0xe030016(%rip)        # e030040 <_end+0xe005030>
  2a:	3a 0b                	cmp    (%rbx),%cl
  2c:	3b 0b                	cmp    (%rbx),%ecx
  2e:	39 0b                	cmp    %ecx,(%rbx)
  30:	49 13 00             	adc    (%r8),%rax
  33:	00 06                	add    %al,(%rsi)
  35:	2e 01 3f             	cs add %edi,(%rdi)
  38:	19 03                	sbb    %eax,(%rbx)
  3a:	0e                   	(bad)  
  3b:	3a 21                	cmp    (%rcx),%ah
  3d:	01 3b                	add    %edi,(%rbx)
  3f:	0b 39                	or     (%rcx),%edi
  41:	21 06                	and    %eax,(%rsi)
  43:	27                   	(bad)  
  44:	19 11                	sbb    %edx,(%rcx)
  46:	01 12                	add    %edx,(%rdx)
  48:	07                   	(bad)  
  49:	40 18 7a 19          	sbb    %dil,0x19(%rdx)
  4d:	01 13                	add    %edx,(%rbx)
  4f:	00 00                	add    %al,(%rax)
  51:	07                   	(bad)  
  52:	05 00 03 0e 3a       	add    $0x3a0e0300,%eax
  57:	21 01                	and    %eax,(%rcx)
  59:	3b 0b                	cmp    (%rbx),%ecx
  5b:	39 0b                	cmp    %ecx,(%rbx)
  5d:	49 13 02             	adc    (%r10),%rax
  60:	17                   	(bad)  
  61:	b7 42                	mov    $0x42,%bh
  63:	17                   	(bad)  
  64:	00 00                	add    %al,(%rax)
  66:	08 48 01             	or     %cl,0x1(%rax)
  69:	7d 01                	jge    6c <__ImageBase+0x6c>
  6b:	7f 13                	jg     80 <__ImageBase+0x80>
  6d:	01 13                	add    %edx,(%rbx)
  6f:	00 00                	add    %al,(%rax)
  71:	09 0d 00 03 0e 3a    	or     %ecx,0x3a0e0300(%rip)        # 3a0e0377 <_end+0x3a0b5367>
  77:	21 05 3b 0b 39 21    	and    %eax,0x21390b3b(%rip)        # 21390bb8 <_end+0x21365ba8>
  7d:	0a 49 13             	or     0x13(%rcx),%cl
  80:	38 0b                	cmp    %cl,(%rbx)
  82:	00 00                	add    %al,(%rax)
  84:	0a 34 00             	or     (%rax,%rax,1),%dh
  87:	03 0e                	add    (%rsi),%ecx
  89:	3a 21                	cmp    (%rcx),%ah
  8b:	01 3b                	add    %edi,(%rbx)
  8d:	0b 39                	or     (%rcx),%edi
  8f:	0b 49 13             	or     0x13(%rcx),%ecx
  92:	3f                   	(bad)  
  93:	19 02                	sbb    %eax,(%rdx)
  95:	18 00                	sbb    %al,(%rax)
  97:	00 0b                	add    %cl,(%rbx)
  99:	2e 01 3f             	cs add %edi,(%rdi)
  9c:	19 03                	sbb    %eax,(%rbx)
  9e:	0e                   	(bad)  
  9f:	3a 0b                	cmp    (%rbx),%cl
  a1:	3b 0b                	cmp    (%rbx),%ecx
  a3:	39 0b                	cmp    %ecx,(%rbx)
  a5:	27                   	(bad)  
  a6:	19 49 13             	sbb    %ecx,0x13(%rcx)
  a9:	3c 19                	cmp    $0x19,%al
  ab:	01 13                	add    %edx,(%rbx)
  ad:	00 00                	add    %al,(%rax)
  af:	0c 2e                	or     $0x2e,%al
  b1:	01 3f                	add    %edi,(%rdi)
  b3:	19 03                	sbb    %eax,(%rbx)
  b5:	0e                   	(bad)  
  b6:	3a 21                	cmp    (%rcx),%ah
  b8:	01 3b                	add    %edi,(%rbx)
  ba:	21 20                	and    %esp,(%rax)
  bc:	39 21                	cmp    %esp,(%rcx)
  be:	05 49 13 3c 19       	add    $0x193c1349,%eax
  c3:	01 13                	add    %edx,(%rbx)
  c5:	00 00                	add    %al,(%rax)
  c7:	0d 18 00 00 00       	or     $0x18,%eax
  cc:	0e                   	(bad)  
  cd:	05 00 03 08 3a       	add    $0x3a080300,%eax
  d2:	21 01                	and    %eax,(%rcx)
  d4:	3b 0b                	cmp    (%rbx),%ecx
  d6:	39 0b                	cmp    %ecx,(%rbx)
  d8:	49 13 02             	adc    (%r10),%rax
  db:	17                   	(bad)  
  dc:	b7 42                	mov    $0x42,%bh
  de:	17                   	(bad)  
  df:	00 00                	add    %al,(%rax)
  e1:	0f 48 01             	cmovs  (%rcx),%eax
  e4:	7d 01                	jge    e7 <__ImageBase+0xe7>
  e6:	7f 13                	jg     fb <__ImageBase+0xfb>
  e8:	00 00                	add    %al,(%rax)
  ea:	10 11                	adc    %dl,(%rcx)
  ec:	01 25 0e 13 0b 03    	add    %esp,0x30b130e(%rip)        # 30b1400 <_end+0x30863f0>
  f2:	1f                   	(bad)  
  f3:	1b 1f                	sbb    (%rdi),%ebx
  f5:	11 01                	adc    %eax,(%rcx)
  f7:	12 07                	adc    (%rdi),%al
  f9:	10 17                	adc    %dl,(%rdi)
  fb:	00 00                	add    %al,(%rax)
  fd:	11 24 00             	adc    %esp,(%rax,%rax,1)
 100:	0b 0b                	or     (%rbx),%ecx
 102:	3e 0b 03             	ds or  (%rbx),%eax
 105:	08 00                	or     %al,(%rax)
 107:	00 12                	add    %dl,(%rdx)
 109:	26 00 49 13          	es add %cl,0x13(%rcx)
 10d:	00 00                	add    %al,(%rax)
 10f:	13 13                	adc    (%rbx),%edx
 111:	01 03                	add    %eax,(%rbx)
 113:	0e                   	(bad)  
 114:	0b 0b                	or     (%rbx),%ecx
 116:	3a 0b                	cmp    (%rbx),%cl
 118:	3b 0b                	cmp    (%rbx),%ecx
 11a:	39 0b                	cmp    %ecx,(%rbx)
 11c:	01 13                	add    %edx,(%rbx)
 11e:	00 00                	add    %al,(%rax)
 120:	14 34                	adc    $0x34,%al
 122:	00 03                	add    %al,(%rbx)
 124:	08 3a                	or     %bh,(%rdx)
 126:	0b 3b                	or     (%rbx),%edi
 128:	0b 39                	or     (%rcx),%edi
 12a:	0b 49 13             	or     0x13(%rcx),%ecx
 12d:	3f                   	(bad)  
 12e:	19 02                	sbb    %eax,(%rdx)
 130:	18 00                	sbb    %al,(%rax)
 132:	00 15 26 00 00 00    	add    %dl,0x26(%rip)        # 15e <__ImageBase+0x15e>
 138:	16                   	(bad)  
 139:	2e 01 3f             	cs add %edi,(%rdi)
 13c:	19 03                	sbb    %eax,(%rbx)
 13e:	0e                   	(bad)  
 13f:	3a 0b                	cmp    (%rbx),%cl
 141:	3b 0b                	cmp    (%rbx),%ecx
 143:	39 0b                	cmp    %ecx,(%rbx)
 145:	11 01                	adc    %eax,(%rcx)
 147:	12 07                	adc    (%rdi),%al
 149:	40 18 7a 19          	sbb    %dil,0x19(%rdx)
 14d:	01 13                	add    %edx,(%rbx)
 14f:	00 00                	add    %al,(%rax)
 151:	17                   	(bad)  
 152:	48 01 7d 01          	add    %rdi,0x1(%rbp)
 156:	82                   	(bad)  
 157:	01 19                	add    %ebx,(%rcx)
 159:	7f 13                	jg     16e <__ImageBase+0x16e>
 15b:	00 00                	add    %al,(%rax)
 15d:	18 05 00 03 08 3a    	sbb    %al,0x3a080300(%rip)        # 3a080463 <_end+0x3a055453>
 163:	0b 3b                	or     (%rbx),%edi
 165:	0b 39                	or     (%rcx),%edi
 167:	0b 49 13             	or     0x13(%rcx),%ecx
 16a:	02 18                	add    (%rax),%bl
 16c:	00 00                	add    %al,(%rax)
 16e:	00 01                	add    %al,(%rcx)
 170:	11 00                	adc    %eax,(%rax)
 172:	10 17                	adc    %dl,(%rdi)
 174:	11 01                	adc    %eax,(%rcx)
 176:	12 0f                	adc    (%rdi),%cl
 178:	03 0e                	add    (%rsi),%ecx
 17a:	1b 0e                	sbb    (%rsi),%ecx
 17c:	25 0e 13 05 00       	and    $0x5130e,%eax
 181:	00 00                	add    %al,(%rax)
 183:	01 28                	add    %ebp,(%rax)
 185:	00 03                	add    %al,(%rbx)
 187:	0e                   	(bad)  
 188:	1c 05                	sbb    $0x5,%al
 18a:	00 00                	add    %al,(%rax)
 18c:	02 49 00             	add    0x0(%rcx),%cl
 18f:	02 18                	add    (%rax),%bl
 191:	7e 18                	jle    1ab <__ImageBase+0x1ab>
 193:	00 00                	add    %al,(%rax)
 195:	03 05 00 49 13 00    	add    0x134900(%rip),%eax        # 134a9b <_end+0x109a8b>
 19b:	00 04 48             	add    %al,(%rax,%rcx,2)
 19e:	01 7d 01             	add    %edi,0x1(%rbp)
 1a1:	7f 13                	jg     1b6 <__ImageBase+0x1b6>
 1a3:	01 13                	add    %edx,(%rbx)
 1a5:	00 00                	add    %al,(%rax)
 1a7:	05 0d 00 03 0e       	add    $0xe03000d,%eax
 1ac:	3a 0b                	cmp    (%rbx),%cl
 1ae:	3b 0b                	cmp    (%rbx),%ecx
 1b0:	39 0b                	cmp    %ecx,(%rbx)
 1b2:	49 13 38             	adc    (%r8),%rdi
 1b5:	0b 00                	or     (%rax),%eax
 1b7:	00 06                	add    %al,(%rsi)
 1b9:	16                   	(bad)  
 1ba:	00 03                	add    %al,(%rbx)
 1bc:	0e                   	(bad)  
 1bd:	3a 0b                	cmp    (%rbx),%cl
 1bf:	3b 0b                	cmp    (%rbx),%ecx
 1c1:	39 0b                	cmp    %ecx,(%rbx)
 1c3:	49 13 00             	adc    (%r8),%rax
 1c6:	00 07                	add    %al,(%rdi)
 1c8:	24 00                	and    $0x0,%al
 1ca:	0b 0b                	or     (%rbx),%ecx
 1cc:	3e 0b 03             	ds or  (%rbx),%eax
 1cf:	0e                   	(bad)  
 1d0:	00 00                	add    %al,(%rax)
 1d2:	08 0f                	or     %cl,(%rdi)
 1d4:	00 0b                	add    %cl,(%rbx)
 1d6:	21 08                	and    %ecx,(%rax)
 1d8:	49 13 00             	adc    (%r8),%rax
 1db:	00 09                	add    %cl,(%rcx)
 1dd:	28 00                	sub    %al,(%rax)
 1df:	03 0e                	add    (%rsi),%ecx
 1e1:	1c 0b                	sbb    $0xb,%al
 1e3:	00 00                	add    %al,(%rax)
 1e5:	0a 2e                	or     (%rsi),%ch
 1e7:	01 3f                	add    %edi,(%rdi)
 1e9:	19 03                	sbb    %eax,(%rbx)
 1eb:	0e                   	(bad)  
 1ec:	3a 0b                	cmp    (%rbx),%cl
 1ee:	3b 0b                	cmp    (%rbx),%ecx
 1f0:	39 0b                	cmp    %ecx,(%rbx)
 1f2:	27                   	(bad)  
 1f3:	19 49 13             	sbb    %ecx,0x13(%rcx)
 1f6:	3c 19                	cmp    $0x19,%al
 1f8:	01 13                	add    %edx,(%rbx)
 1fa:	00 00                	add    %al,(%rax)
 1fc:	0b 34 00             	or     (%rax,%rax,1),%esi
 1ff:	03 0e                	add    (%rsi),%ecx
 201:	3a 21                	cmp    (%rcx),%ah
 203:	01 3b                	add    %edi,(%rbx)
 205:	0b 39                	or     (%rcx),%edi
 207:	0b 49 13             	or     0x13(%rcx),%ecx
 20a:	02 17                	add    (%rdi),%dl
 20c:	b7 42                	mov    $0x42,%bh
 20e:	17                   	(bad)  
 20f:	00 00                	add    %al,(%rax)
 211:	0c 34                	or     $0x34,%al
 213:	00 03                	add    %al,(%rbx)
 215:	0e                   	(bad)  
 216:	3a 21                	cmp    (%rcx),%ah
 218:	01 3b                	add    %edi,(%rbx)
 21a:	0b 39                	or     (%rcx),%edi
 21c:	0b 49 13             	or     0x13(%rcx),%ecx
 21f:	00 00                	add    %al,(%rax)
 221:	0d 48 00 7d 01       	or     $0x17d0048,%eax
 226:	7f 13                	jg     23b <__ImageBase+0x23b>
 228:	00 00                	add    %al,(%rax)
 22a:	0e                   	(bad)  
 22b:	34 00                	xor    $0x0,%al
 22d:	31 13                	xor    %edx,(%rbx)
 22f:	00 00                	add    %al,(%rax)
 231:	0f 13 01             	movlps %xmm0,(%rcx)
 234:	03 0e                	add    (%rsi),%ecx
 236:	0b 0b                	or     (%rbx),%ecx
 238:	3a 0b                	cmp    (%rbx),%cl
 23a:	3b 0b                	cmp    (%rbx),%ecx
 23c:	39 21                	cmp    %esp,(%rcx)
 23e:	10 01                	adc    %al,(%rcx)
 240:	13 00                	adc    (%rax),%eax
 242:	00 10                	add    %dl,(%rax)
 244:	05 00 03 08 3a       	add    $0x3a080300,%eax
 249:	21 01                	and    %eax,(%rcx)
 24b:	3b 0b                	cmp    (%rbx),%ecx
 24d:	39 0b                	cmp    %ecx,(%rbx)
 24f:	49 13 02             	adc    (%r10),%rax
 252:	17                   	(bad)  
 253:	b7 42                	mov    $0x42,%bh
 255:	17                   	(bad)  
 256:	00 00                	add    %al,(%rax)
 258:	11 34 00             	adc    %esi,(%rax,%rax,1)
 25b:	31 13                	xor    %edx,(%rbx)
 25d:	02 17                	add    (%rdi),%dl
 25f:	b7 42                	mov    $0x42,%bh
 261:	17                   	(bad)  
 262:	00 00                	add    %al,(%rax)
 264:	12 26                	adc    (%rsi),%ah
 266:	00 49 13             	add    %cl,0x13(%rcx)
 269:	00 00                	add    %al,(%rax)
 26b:	13 2e                	adc    (%rsi),%ebp
 26d:	01 3f                	add    %edi,(%rdi)
 26f:	19 03                	sbb    %eax,(%rbx)
 271:	0e                   	(bad)  
 272:	3a 0b                	cmp    (%rbx),%cl
 274:	3b 0b                	cmp    (%rbx),%ecx
 276:	39 0b                	cmp    %ecx,(%rbx)
 278:	27                   	(bad)  
 279:	19 3c 19             	sbb    %edi,(%rcx,%rbx,1)
 27c:	01 13                	add    %edx,(%rbx)
 27e:	00 00                	add    %al,(%rax)
 280:	14 05                	adc    $0x5,%al
 282:	00 31                	add    %dh,(%rcx)
 284:	13 02                	adc    (%rdx),%eax
 286:	17                   	(bad)  
 287:	b7 42                	mov    $0x42,%bh
 289:	17                   	(bad)  
 28a:	00 00                	add    %al,(%rax)
 28c:	15 13 01 0b 0b       	adc    $0xb0b0113,%eax
 291:	3a 21                	cmp    (%rcx),%ah
 293:	01 3b                	add    %edi,(%rbx)
 295:	0b 39                	or     (%rcx),%edi
 297:	0b 01                	or     (%rcx),%eax
 299:	13 00                	adc    (%rax),%eax
 29b:	00 16                	add    %dl,(%rsi)
 29d:	21 00                	and    %eax,(%rax)
 29f:	49 13 2f             	adc    (%r15),%rbp
 2a2:	0b 00                	or     (%rax),%eax
 2a4:	00 17                	add    %dl,(%rdi)
 2a6:	2e 00 3f             	cs add %bh,(%rdi)
 2a9:	19 03                	sbb    %eax,(%rbx)
 2ab:	0e                   	(bad)  
 2ac:	3a 0b                	cmp    (%rbx),%cl
 2ae:	3b 0b                	cmp    (%rbx),%ecx
 2b0:	39 0b                	cmp    %ecx,(%rbx)
 2b2:	27                   	(bad)  
 2b3:	19 3c 19             	sbb    %edi,(%rcx,%rbx,1)
 2b6:	00 00                	add    %al,(%rax)
 2b8:	18 34 00             	sbb    %dh,(%rax,%rax,1)
 2bb:	03 08                	add    (%rax),%ecx
 2bd:	3a 21                	cmp    (%rcx),%ah
 2bf:	01 3b                	add    %edi,(%rbx)
 2c1:	0b 39                	or     (%rcx),%edi
 2c3:	0b 49 13             	or     0x13(%rcx),%ecx
 2c6:	02 17                	add    (%rdi),%dl
 2c8:	b7 42                	mov    $0x42,%bh
 2ca:	17                   	(bad)  
 2cb:	00 00                	add    %al,(%rax)
 2cd:	19 34 00             	sbb    %esi,(%rax,%rax,1)
 2d0:	03 0e                	add    (%rsi),%ecx
 2d2:	3a 21                	cmp    (%rcx),%ah
 2d4:	01 3b                	add    %edi,(%rbx)
 2d6:	0b 39                	or     (%rcx),%edi
 2d8:	0b 49 13             	or     0x13(%rcx),%ecx
 2db:	02 18                	add    (%rax),%bl
 2dd:	00 00                	add    %al,(%rax)
 2df:	1a 48 01             	sbb    0x1(%rax),%cl
 2e2:	7d 01                	jge    2e5 <__ImageBase+0x2e5>
 2e4:	7f 13                	jg     2f9 <__ImageBase+0x2f9>
 2e6:	00 00                	add    %al,(%rax)
 2e8:	1b 01                	sbb    (%rcx),%eax
 2ea:	01 49 13             	add    %ecx,0x13(%rcx)
 2ed:	01 13                	add    %edx,(%rbx)
 2ef:	00 00                	add    %al,(%rax)
 2f1:	1c 34                	sbb    $0x34,%al
 2f3:	00 03                	add    %al,(%rbx)
 2f5:	0e                   	(bad)  
 2f6:	3a 21                	cmp    (%rcx),%ah
 2f8:	01 3b                	add    %edi,(%rbx)
 2fa:	0b 39                	or     (%rcx),%edi
 2fc:	21 03                	and    %eax,(%rbx)
 2fe:	49 13 3f             	adc    (%r15),%rdi
 301:	19 02                	sbb    %eax,(%rdx)
 303:	18 00                	sbb    %al,(%rax)
 305:	00 1d 2e 01 3f 19    	add    %bl,0x193f012e(%rip)        # 193f0439 <_end+0x193c5429>
 30b:	03 0e                	add    (%rsi),%ecx
 30d:	3a 21                	cmp    (%rcx),%ah
 30f:	01 3b                	add    %edi,(%rbx)
 311:	0b 39                	or     (%rcx),%edi
 313:	21 18                	and    %ebx,(%rax)
 315:	27                   	(bad)  
 316:	19 49 13             	sbb    %ecx,0x13(%rcx)
 319:	11 01                	adc    %eax,(%rcx)
 31b:	12 07                	adc    (%rdi),%al
 31d:	40 18 7a 19          	sbb    %dil,0x19(%rdx)
 321:	01 13                	add    %edx,(%rbx)
 323:	00 00                	add    %al,(%rax)
 325:	1e                   	(bad)  
 326:	2e 01 03             	cs add %eax,(%rbx)
 329:	0e                   	(bad)  
 32a:	3a 21                	cmp    (%rcx),%ah
 32c:	01 3b                	add    %edi,(%rbx)
 32e:	0b 39                	or     (%rcx),%edi
 330:	21 1f                	and    %ebx,(%rdi)
 332:	27                   	(bad)  
 333:	19 49 13             	sbb    %ecx,0x13(%rcx)
 336:	11 01                	adc    %eax,(%rcx)
 338:	12 07                	adc    (%rdi),%al
 33a:	40 18 7a 19          	sbb    %dil,0x19(%rdx)
 33e:	01 13                	add    %edx,(%rbx)
 340:	00 00                	add    %al,(%rax)
 342:	1f                   	(bad)  
 343:	2e 01 03             	cs add %eax,(%rbx)
 346:	0e                   	(bad)  
 347:	3a 21                	cmp    (%rcx),%ah
 349:	01 3b                	add    %edi,(%rbx)
 34b:	0b 39                	or     (%rcx),%edi
 34d:	21 1f                	and    %ebx,(%rdi)
 34f:	27                   	(bad)  
 350:	19 49 13             	sbb    %ecx,0x13(%rcx)
 353:	20 21                	and    %ah,(%rcx)
 355:	01 01                	add    %eax,(%rcx)
 357:	13 00                	adc    (%rax),%eax
 359:	00 20                	add    %ah,(%rax)
 35b:	05 00 03 08 3a       	add    $0x3a080300,%eax
 360:	21 01                	and    %eax,(%rcx)
 362:	3b 0b                	cmp    (%rbx),%ecx
 364:	39 0b                	cmp    %ecx,(%rbx)
 366:	49 13 00             	adc    (%r8),%rax
 369:	00 21                	add    %ah,(%rcx)
 36b:	34 00                	xor    $0x0,%al
 36d:	03 08                	add    (%rax),%ecx
 36f:	3a 21                	cmp    (%rcx),%ah
 371:	01 3b                	add    %edi,(%rbx)
 373:	0b 39                	or     (%rcx),%edi
 375:	0b 49 13             	or     0x13(%rcx),%ecx
 378:	00 00                	add    %al,(%rax)
 37a:	22 1d 01 31 13 52    	and    0x52133101(%rip),%bl        # 52133481 <_end+0x52108471>
 380:	01 b8 42 0b 11 01    	add    %edi,0x1110b42(%rax)
 386:	12 07                	adc    (%rdi),%al
 388:	58                   	pop    %rax
 389:	21 01                	and    %eax,(%rcx)
 38b:	59                   	pop    %rcx
 38c:	0b 57 21             	or     0x21(%rdi),%edx
 38f:	1f                   	(bad)  
 390:	01 13                	add    %edx,(%rbx)
 392:	00 00                	add    %al,(%rax)
 394:	23 34 00             	and    (%rax,%rax,1),%esi
 397:	31 13                	xor    %edx,(%rbx)
 399:	02 18                	add    (%rax),%bl
 39b:	00 00                	add    %al,(%rax)
 39d:	24 11                	and    $0x11,%al
 39f:	01 25 0e 13 0b 03    	add    %esp,0x30b130e(%rip)        # 30b16b3 <_end+0x30866a3>
 3a5:	1f                   	(bad)  
 3a6:	1b 1f                	sbb    (%rdi),%ebx
 3a8:	11 01                	adc    %eax,(%rcx)
 3aa:	12 07                	adc    (%rdi),%al
 3ac:	10 17                	adc    %dl,(%rdi)
 3ae:	00 00                	add    %al,(%rax)
 3b0:	25 24 00 0b 0b       	and    $0xb0b0024,%eax
 3b5:	3e 0b 03             	ds or  (%rbx),%eax
 3b8:	08 00                	or     %al,(%rax)
 3ba:	00 26                	add    %ah,(%rsi)
 3bc:	0f 00 0b             	str    (%rbx)
 3bf:	0b 00                	or     (%rax),%eax
 3c1:	00 27                	add    %ah,(%rdi)
 3c3:	04 01                	add    $0x1,%al
 3c5:	03 0e                	add    (%rsi),%ecx
 3c7:	3e 0b 0b             	ds or  (%rbx),%ecx
 3ca:	0b 49 13             	or     0x13(%rcx),%ecx
 3cd:	3a 0b                	cmp    (%rbx),%cl
 3cf:	3b 0b                	cmp    (%rbx),%ecx
 3d1:	39 0b                	cmp    %ecx,(%rbx)
 3d3:	01 13                	add    %edx,(%rbx)
 3d5:	00 00                	add    %al,(%rax)
 3d7:	28 26                	sub    %ah,(%rsi)
 3d9:	00 00                	add    %al,(%rax)
 3db:	00 29                	add    %ch,(%rcx)
 3dd:	0a 00                	or     (%rax),%al
 3df:	03 08                	add    (%rax),%ecx
 3e1:	3a 0b                	cmp    (%rbx),%cl
 3e3:	3b 0b                	cmp    (%rbx),%ecx
 3e5:	39 0b                	cmp    %ecx,(%rbx)
 3e7:	11 01                	adc    %eax,(%rcx)
 3e9:	00 00                	add    %al,(%rax)
 3eb:	2a 34 00             	sub    (%rax,%rax,1),%dh
 3ee:	03 0e                	add    (%rsi),%ecx
 3f0:	3a 0b                	cmp    (%rbx),%cl
 3f2:	3b 0b                	cmp    (%rbx),%ecx
 3f4:	39 0b                	cmp    %ecx,(%rbx)
 3f6:	49 13 1c 0b          	adc    (%r11,%rcx,1),%rbx
 3fa:	00 00                	add    %al,(%rax)
 3fc:	2b 2e                	sub    (%rsi),%ebp
 3fe:	01 31                	add    %esi,(%rcx)
 400:	13 11                	adc    (%rcx),%edx
 402:	01 12                	add    %edx,(%rdx)
 404:	07                   	(bad)  
 405:	40 18 7a 19          	sbb    %dil,0x19(%rdx)
 409:	01 13                	add    %edx,(%rbx)
 40b:	00 00                	add    %al,(%rax)
 40d:	2c 2e                	sub    $0x2e,%al
 40f:	01 31                	add    %esi,(%rcx)
 411:	13 11                	adc    (%rcx),%edx
 413:	01 12                	add    %edx,(%rdx)
 415:	07                   	(bad)  
 416:	40 18 7a 19          	sbb    %dil,0x19(%rdx)
 41a:	00 00                	add    %al,(%rax)
	...

Disassembly of section .debug_line:

0000000000000000 <.debug_line>:
   0:	2b 01                	sub    (%rcx),%eax
   2:	00 00                	add    %al,(%rax)
   4:	05 00 08 00 53       	add    $0x53000800,%eax
   9:	00 00                	add    %al,(%rax)
   b:	00 01                	add    %al,(%rcx)
   d:	01 01                	add    %eax,(%rcx)
   f:	fb                   	sti    
  10:	0e                   	(bad)  
  11:	0d 00 01 01 01       	or     $0x1010100,%eax
  16:	01 00                	add    %eax,(%rax)
  18:	00 00                	add    %al,(%rax)
  1a:	01 00                	add    %eax,(%rax)
  1c:	00 01                	add    %al,(%rcx)
  1e:	01 01                	add    %eax,(%rcx)
  20:	1f                   	(bad)  
  21:	05 07 00 00 00       	add    $0x7,%eax
  26:	23 00                	and    (%rax),%eax
  28:	00 00                	add    %al,(%rax)
  2a:	47 00 00             	rex.RXB add %r8b,(%r8)
  2d:	00 67 00             	add    %ah,0x0(%rdi)
  30:	00 00                	add    %al,(%rax)
  32:	6a 00                	push   $0x0
  34:	00 00                	add    %al,(%rax)
  36:	02 01                	add    (%rcx),%al
  38:	1f                   	(bad)  
  39:	02 0f                	add    (%rdi),%cl
  3b:	07                   	(bad)  
	...
  44:	00 00                	add    %al,(%rax)
  46:	84 00                	test   %al,(%rax)
  48:	00 00                	add    %al,(%rax)
  4a:	01 8d 00 00 00 01    	add    %ecx,0x1000000(%rbp)
  50:	96                   	xchg   %eax,%esi
  51:	00 00                	add    %al,(%rax)
  53:	00 02                	add    %al,(%rdx)
  55:	9f                   	lahf   
  56:	00 00                	add    %al,(%rax)
  58:	00 03                	add    %al,(%rbx)
  5a:	aa                   	stos   %al,%es:(%rdi)
  5b:	00 00                	add    %al,(%rax)
  5d:	00 04 05 41 00 09 02 	add    %al,0x2090041(,%rax,1)
  64:	63 20                	movsxd (%rax),%esp
  66:	00 00                	add    %al,(%rax)
  68:	00 00                	add    %al,(%rax)
  6a:	00 00                	add    %al,(%rax)
  6c:	03 0c 01             	add    (%rcx,%rax,1),%ecx
  6f:	06                   	(bad)  
  70:	01 05 05 06 4b 05    	add    %eax,0x54b0605(%rip)        # 54b067b <_end+0x548566b>
  76:	41 06                	rex.B (bad) 
  78:	11 05 09 21 05 41    	adc    %eax,0x41052109(%rip)        # 41052187 <_end+0x41027177>
  7e:	57                   	push   %rdi
  7f:	05 09 3d 05 08       	add    $0x8053d09,%eax
  84:	00 02                	add    %al,(%rdx)
  86:	04 01                	add    $0x1,%al
  88:	58                   	pop    %rax
  89:	05 09 06 4b 05       	add    $0x54b0609,%eax
  8e:	0d 06 01 05 0f       	or     $0xf050106,%eax
  93:	3e 05 0d 56 05 09    	ds add $0x905560d,%eax
  99:	06                   	(bad)  
  9a:	bc 05 0f 06 01       	mov    $0x1060f05,%esp
  9f:	05 0c 00 02 04       	add    $0x402000c,%eax
  a4:	01 58 05             	add    %ebx,0x5(%rax)
  a7:	0d 06 4b 05 17       	or     $0x17054b06,%eax
  ac:	06                   	(bad)  
  ad:	13 05 40 00 02 04    	adc    0x4020040(%rip),%eax        # 40200f3 <_end+0x3ff50e3>
  b3:	01 08                	add    %ecx,(%rax)
  b5:	1e                   	(bad)  
  b6:	05 0d 00 02 04       	add    $0x402000d,%eax
  bb:	01 08                	add    %ecx,(%rax)
  bd:	12 05 01 50 20 05    	adc    0x5205001(%rip),%al        # 52050c4 <_end+0x51da0b4>
  c3:	2b 06                	sub    (%rsi),%eax
  c5:	22 06                	and    (%rsi),%al
  c7:	01 05 09 06 4b 05    	add    %eax,0x54b0609(%rip)        # 54b06d6 <_end+0x54856c6>
  cd:	19 06                	sbb    %eax,(%rsi)
  cf:	01 05 1a 9f 05 19    	add    %eax,0x19059f1a(%rip)        # 19059fef <_end+0x1902efdf>
  d5:	3b 05 09 06 2f 05    	cmp    0x52f0609(%rip),%eax        # 52f06e4 <_end+0x52c56d4>
  db:	16                   	(bad)  
  dc:	06                   	(bad)  
  dd:	01 05 01 91 05 1a    	add    %eax,0x1a059101(%rip)        # 1a0591e4 <_end+0x1a02e1d4>
  e3:	06                   	(bad)  
  e4:	22 05 05 4c 05 1a    	and    0x1a054c05(%rip),%al        # 1a054cef <_end+0x1a029cdf>
  ea:	06                   	(bad)  
  eb:	10 05 05 22 06 08    	adc    %al,0x8062205(%rip)        # 80622f6 <_end+0x80372e6>
  f1:	75 05                	jne    f8 <__ImageBase+0xf8>
  f3:	01 06                	add    %eax,(%rsi)
  f5:	08 30                	or     %dh,(%rax)
  f7:	05 05 1e 05 3f       	add    $0x3f051e05,%eax
  fc:	06                   	(bad)  
  fd:	5c                   	pop    %rsp
  fe:	06                   	(bad)  
  ff:	01 05 05 06 4b 05    	add    %eax,0x54b0605(%rip)        # 54b070a <_end+0x54856fa>
 105:	3f                   	(bad)  
 106:	06                   	(bad)  
 107:	11 20                	adc    %esp,(%rax)
 109:	05 09 3e 05 08       	add    $0x8053e09,%eax
 10e:	3b 05 3f 65 05 09    	cmp    0x905653f(%rip),%eax        # 9056653 <_end+0x902b643>
 114:	3e 05 08 73 05 09    	ds add $0x9057308,%eax
 11a:	06                   	(bad)  
 11b:	31 06                	xor    %eax,(%rsi)
 11d:	9e                   	sahf   
 11e:	05 05 06 5a 05       	add    $0x55a0605,%eax
 123:	1a 06                	sbb    (%rsi),%al
 125:	01 05 01 59 20 02    	add    %eax,0x2205901(%rip)        # 2205a2c <_end+0x21daa1c>
 12b:	01 00                	add    %eax,(%rax)
 12d:	01 01                	add    %eax,(%rcx)
 12f:	45 00 00             	add    %r8b,(%r8)
 132:	00 05 00 08 00 2a    	add    %al,0x2a000800(%rip)        # 2a000938 <_end+0x29fd5928>
 138:	00 00                	add    %al,(%rax)
 13a:	00 01                	add    %al,(%rcx)
 13c:	01 01                	add    %eax,(%rcx)
 13e:	fb                   	sti    
 13f:	0e                   	(bad)  
 140:	0d 00 01 01 01       	or     $0x1010100,%eax
 145:	01 00                	add    %eax,(%rax)
 147:	00 00                	add    %al,(%rax)
 149:	01 00                	add    %eax,(%rax)
 14b:	00 01                	add    %al,(%rcx)
 14d:	01 01                	add    %eax,(%rcx)
 14f:	1f                   	(bad)  
 150:	01 07                	add    %eax,(%rdi)
 152:	00 00                	add    %al,(%rax)
 154:	00 02                	add    %al,(%rdx)
 156:	01 1f                	add    %ebx,(%rdi)
 158:	02 0f                	add    (%rdi),%cl
 15a:	02 b5 00 00 00 00    	add    0x0(%rbp),%dh
 160:	b5 00                	mov    $0x0,%ch
 162:	00 00                	add    %al,(%rax)
 164:	00 00                	add    %al,(%rax)
 166:	09 02                	or     %eax,(%rdx)
 168:	00 30                	add    %dh,(%rax)
 16a:	00 00                	add    %al,(%rax)
 16c:	00 00                	add    %al,(%rax)
 16e:	00 00                	add    %al,(%rax)
 170:	16                   	(bad)  
 171:	59                   	pop    %rcx
 172:	02 81 20 00 01 01    	add    0x1010020(%rcx),%al
 178:	10 04 00             	adc    %al,(%rax,%rax,1)
 17b:	00 05 00 08 00 6d    	add    %al,0x6d000800(%rip)        # 6d000981 <_end+0x6cfd5971>
 181:	00 00                	add    %al,(%rax)
 183:	00 01                	add    %al,(%rcx)
 185:	01 01                	add    %eax,(%rcx)
 187:	fb                   	sti    
 188:	0e                   	(bad)  
 189:	0d 00 01 01 01       	or     $0x1010100,%eax
 18e:	01 00                	add    %eax,(%rax)
 190:	00 00                	add    %al,(%rax)
 192:	01 00                	add    %eax,(%rax)
 194:	00 01                	add    %al,(%rcx)
 196:	01 01                	add    %eax,(%rcx)
 198:	1f                   	(bad)  
 199:	04 07                	add    $0x7,%al
 19b:	00 00                	add    %al,(%rax)
 19d:	00 23                	add    %ah,(%rbx)
 19f:	00 00                	add    %al,(%rax)
 1a1:	00 47 00             	add    %al,0x0(%rdi)
 1a4:	00 00                	add    %al,(%rax)
 1a6:	6a 00                	push   $0x0
 1a8:	00 00                	add    %al,(%rax)
 1aa:	02 01                	add    (%rcx),%al
 1ac:	1f                   	(bad)  
 1ad:	02 0f                	add    (%rdi),%cl
 1af:	0d bb 00 00 00       	or     $0xbb,%eax
 1b4:	00 bb 00 00 00 00    	add    %bh,0x0(%rbx)
 1ba:	84 00                	test   %al,(%rax)
 1bc:	00 00                	add    %al,(%rax)
 1be:	01 8d 00 00 00 01    	add    %ecx,0x1000000(%rbp)
 1c4:	c4                   	(bad)  
 1c5:	00 00                	add    %al,(%rax)
 1c7:	00 02                	add    %al,(%rdx)
 1c9:	cc                   	int3   
 1ca:	00 00                	add    %al,(%rax)
 1cc:	00 03                	add    %al,(%rbx)
 1ce:	d8 00                	fadds  (%rax)
 1d0:	00 00                	add    %al,(%rax)
 1d2:	00 96 00 00 00 02    	add    %dl,0x2000000(%rsi)
 1d8:	e1 00                	loope  1da <__ImageBase+0x1da>
 1da:	00 00                	add    %al,(%rax)
 1dc:	03 aa 00 00 00 03    	add    0x3000000(%rdx),%ebp
 1e2:	ef                   	out    %eax,(%dx)
 1e3:	00 00                	add    %al,(%rax)
 1e5:	00 02                	add    %al,(%rdx)
 1e7:	f8                   	clc    
 1e8:	00 00                	add    %al,(%rax)
 1ea:	00 02                	add    %al,(%rdx)
 1ec:	05 01 00 00 03       	add    $0x3000001,%eax
 1f1:	05 01 00 09 02       	add    $0x2090001,%eax
 1f6:	06                   	(bad)  
 1f7:	40 00 00             	rex add %al,(%rax)
 1fa:	00 00                	add    %al,(%rax)
 1fc:	00 00                	add    %al,(%rax)
 1fe:	03 e9                	add    %ecx,%ebp
 200:	00 01                	add    %al,(%rcx)
 202:	06                   	(bad)  
 203:	01 05 02 06 4b 01    	add    %eax,0x14b0602(%rip)        # 14b080b <_end+0x14857fb>
 209:	05 01 06 11 05       	add    $0x5110601,%eax
 20e:	02 9f 00 02 04 03    	add    0x3040200(%rdi),%bl
 214:	58                   	pop    %rax
 215:	00 02                	add    %al,(%rdx)
 217:	04 02                	add    $0x2,%al
 219:	ac                   	lods   %ds:(%rsi),%al
 21a:	00 02                	add    %al,(%rdx)
 21c:	04 01                	add    $0x1,%al
 21e:	c8 00 02 04          	enter  $0x200,$0x4
 222:	04 06                	add    $0x6,%al
 224:	4a 16                	rex.WX (bad) 
 226:	3d 13 13 05 06       	cmp    $0x6051313,%eax
 22b:	06                   	(bad)  
 22c:	01 05 0a 08 21 05    	add    %eax,0x521080a(%rip)        # 5210a3c <_end+0x51e5a2c>
 232:	06                   	(bad)  
 233:	65 05 05 00 02 04    	gs add $0x4020005,%eax
 239:	01 58 05             	add    %ebx,0x5(%rax)
 23c:	02 06                	add    (%rsi),%al
 23e:	85 13                	test   %edx,(%rbx)
 240:	05 08 06 01 05       	add    $0x5010608,%eax
 245:	02 06                	add    (%rsi),%al
 247:	59                   	pop    %rcx
 248:	05 09 06 01 05       	add    $0x5010609,%eax
 24d:	02 06                	add    (%rsi),%al
 24f:	59                   	pop    %rcx
 250:	13 14 01             	adc    (%rcx,%rax,1),%edx
 253:	00 02                	add    %al,(%rdx)
 255:	04 04                	add    $0x4,%al
 257:	58                   	pop    %rax
 258:	17                   	(bad)  
 259:	3e 05 05 06 01 05    	ds add $0x5010605,%eax
 25f:	08 03                	or     %al,(%rbx)
 261:	77 9e                	ja     201 <__ImageBase+0x201>
 263:	2e 05 02 00 02 04    	cs add $0x4020002,%eax
 269:	01 30                	add    %esi,(%rax)
 26b:	05 03 06 08 1a       	add    $0x1a080603,%eax
 270:	17                   	(bad)  
 271:	05 1d 06 01 05       	add    $0x501061d,%eax
 276:	0b 3d 05 1d 65 05    	or     0x5651d05(%rip),%edi        # 5651f81 <_end+0x5626f71>
 27c:	06                   	(bad)  
 27d:	00 02                	add    %al,(%rdx)
 27f:	04 01                	add    $0x1,%al
 281:	82                   	(bad)  
 282:	05 03 06 5d 06       	add    $0x65d0603,%eax
 287:	2e 05 02 06 84 05    	cs add $0x5840602,%eax
 28d:	0f 06                	clts   
 28f:	03 66 9e             	add    -0x62(%rsi),%esp
 292:	05 02 03 1a 3c       	add    $0x3c1a0302,%eax
 297:	06                   	(bad)  
 298:	59                   	pop    %rcx
 299:	05 05 06 01 05       	add    $0x5010605,%eax
 29e:	03 06                	add    (%rsi),%eax
 2a0:	59                   	pop    %rcx
 2a1:	05 07 06 01 05       	add    $0x5010607,%eax
 2a6:	06                   	(bad)  
 2a7:	00 02                	add    %al,(%rdx)
 2a9:	04 01                	add    $0x1,%al
 2ab:	08 12                	or     %dl,(%rdx)
 2ad:	05 13 00 02 04       	add    $0x4020013,%eax
 2b2:	01 43 05             	add    %eax,0x5(%rbx)
 2b5:	06                   	(bad)  
 2b6:	00 02                	add    %al,(%rdx)
 2b8:	04 01                	add    $0x1,%al
 2ba:	03 79 3c             	add    0x3c(%rcx),%edi
 2bd:	05 02 06 6d 05       	add    $0x56d0602,%eax
 2c2:	13 00                	adc    (%rax),%eax
 2c4:	02 04 01             	add    (%rcx,%rax,1),%al
 2c7:	01 05 01 06 5a 06    	add    %eax,0x65a0601(%rip)        # 65a08ce <_end+0x65758be>
 2cd:	03 48 d6             	add    -0x2a(%rax),%ecx
 2d0:	06                   	(bad)  
 2d1:	01 05 02 06 4b 13    	add    %eax,0x134b0602(%rip)        # 134b08d9 <_end+0x134858c9>
 2d7:	05 05 06 01 05       	add    $0x5010605,%eax
 2dc:	02 06                	add    (%rsi),%al
 2de:	59                   	pop    %rcx
 2df:	05 01 06 0f 05       	add    $0x50f0601,%eax
 2e4:	02 23                	add    (%rbx),%ah
 2e6:	06                   	(bad)  
 2e7:	59                   	pop    %rcx
 2e8:	05 09 06 01 05       	add    $0x5010609,%eax
 2ed:	01 2f                	add    %ebp,(%rdi)
 2ef:	2e 06                	cs (bad) 
 2f1:	03 66 66             	add    0x66(%rsi),%esp
 2f4:	06                   	(bad)  
 2f5:	01 05 02 06 4b 01    	add    %eax,0x14b0602(%rip)        # 14b08fd <_end+0x14858ed>
 2fb:	05 01 06 57 05       	add    $0x5570601,%eax
 300:	02 00                	add    (%rax),%al
 302:	02 04 02             	add    (%rdx,%rax,1),%al
 305:	21 05 01 81 05 02    	and    %eax,0x2058101(%rip)        # 205840c <_end+0x202d3fc>
 30b:	00 02                	add    %al,(%rdx)
 30d:	04 02                	add    $0x2,%al
 30f:	4b 00 02             	rex.WXB add %al,(%r10)
 312:	04 01                	add    $0x1,%al
 314:	58                   	pop    %rax
 315:	00 02                	add    %al,(%rdx)
 317:	04 03                	add    $0x3,%al
 319:	4a 05 1f 06 72 05    	rex.WX add $0x572061f,%rax
 31f:	02 00                	add    (%rax),%al
 321:	02 04 04             	add    (%rsp,%rax,1),%al
 324:	14 16                	adc    $0x16,%al
 326:	3d 13 13 05 06       	cmp    $0x6051313,%eax
 32b:	06                   	(bad)  
 32c:	01 05 0a 08 83 05    	add    %eax,0x583080a(%rip)        # 5830b3c <_end+0x5805b2c>
 332:	05 00 02 04 01       	add    $0x1040200,%eax
 337:	57                   	push   %rdi
 338:	05 02 06 4d 15       	add    $0x154d0602,%eax
 33d:	cb                   	lret   
 33e:	05 09 06 01 2e       	add    $0x2e010609,%eax
 343:	05 01 13 58 05       	add    $0x5581301,%eax
 348:	02 00                	add    (%rax),%al
 34a:	02 04 03             	add    (%rbx,%rax,1),%al
 34d:	03 6f 20             	add    0x20(%rdi),%ebp
 350:	05 01 03 11 58       	add    $0x58110301,%eax
 355:	06                   	(bad)  
 356:	03 58 20             	add    0x20(%rax),%ebx
 359:	06                   	(bad)  
 35a:	01 05 02 06 4b 01    	add    %eax,0x14b0602(%rip)        # 14b0962 <_end+0x1485952>
 360:	05 01 06 57 05       	add    $0x5570601,%eax
 365:	02 00                	add    (%rax),%al
 367:	02 04 02             	add    (%rdx,%rax,1),%al
 36a:	21 05 01 81 05 02    	and    %eax,0x2058101(%rip)        # 2058471 <_end+0x202d461>
 370:	00 02                	add    %al,(%rdx)
 372:	04 02                	add    $0x2,%al
 374:	4b 00 02             	rex.WXB add %al,(%r10)
 377:	04 01                	add    $0x1,%al
 379:	58                   	pop    %rax
 37a:	00 02                	add    %al,(%rdx)
 37c:	04 03                	add    $0x3,%al
 37e:	4a 05 1f 06 72 05    	rex.WX add $0x572061f,%rax
 384:	02 00                	add    (%rax),%al
 386:	02 04 04             	add    (%rsp,%rax,1),%al
 389:	14 16                	adc    $0x16,%al
 38b:	3d 13 13 05 06       	cmp    $0x6051313,%eax
 390:	06                   	(bad)  
 391:	01 05 0a 08 83 05    	add    %eax,0x583080a(%rip)        # 5830ba1 <_end+0x5805b91>
 397:	05 00 02 04 01       	add    $0x1040200,%eax
 39c:	57                   	push   %rdi
 39d:	05 02 06 4d 13       	add    $0x134d0602,%eax
 3a2:	15 a1 05 09 06       	adc    $0x60905a1,%eax
 3a7:	01 2e                	add    %ebp,(%rsi)
 3a9:	05 01 13 58 05       	add    $0x5581301,%eax
 3ae:	02 00                	add    (%rax),%al
 3b0:	02 04 03             	add    (%rbx,%rax,1),%al
 3b3:	03 6e 20             	add    0x20(%rsi),%ebp
 3b6:	05 01 03 12 58       	add    $0x58120301,%eax
 3bb:	06                   	(bad)  
 3bc:	03 ec                	add    %esp,%ebp
 3be:	00 20                	add    %ah,(%rax)
 3c0:	06                   	(bad)  
 3c1:	01 05 02 06 4b 13    	add    %eax,0x134b0602(%rip)        # 134b09c9 <_end+0x134859b9>
 3c7:	05 01 06 10 05       	add    $0x5100601,%eax
 3cc:	2a e6                	sub    %dh,%ah
 3ce:	05 1a 00 02 04       	add    $0x402001a,%eax
 3d3:	01 58 05             	add    %ebx,0x5(%rax)
 3d6:	2a 00                	sub    (%rax),%al
 3d8:	02 04 01             	add    (%rcx,%rax,1),%al
 3db:	58                   	pop    %rax
 3dc:	05 02 06 4c 13       	add    $0x134c0602,%eax
 3e1:	13 05 08 06 01 05    	adc    0x5010608(%rip),%eax        # 50109ef <_end+0x4fe59df>
 3e7:	02 06                	add    (%rsi),%al
 3e9:	77 01                	ja     3ec <__ImageBase+0x3ec>
 3eb:	00 02                	add    %al,(%rdx)
 3ed:	04 01                	add    $0x1,%al
 3ef:	06                   	(bad)  
 3f0:	58                   	pop    %rax
 3f1:	05 06 00 02 04       	add    $0x4020006,%eax
 3f6:	01 68 05             	add    %ebp,0x5(%rax)
 3f9:	02 00                	add    (%rax),%al
 3fb:	02 04 01             	add    (%rcx,%rax,1),%al
 3fe:	3a 00                	cmp    (%rax),%al
 400:	02 04 03             	add    (%rbx,%rax,1),%al
 403:	90                   	nop
 404:	05 06 00 02 04       	add    $0x4020006,%eax
 409:	02 a0 00 02 04 04    	add    0x4040200(%rax),%ah
 40f:	3c 05                	cmp    $0x5,%al
 411:	05 00 02 04 08       	add    $0x8040200,%eax
 416:	4a 05 02 06 a1 05    	rex.WX add $0x5a10602,%rax
 41c:	0a 06                	or     (%rsi),%al
 41e:	01 58 05             	add    %ebx,0x5(%rax)
 421:	02 06                	add    (%rsi),%al
 423:	3d 05 05 06 01       	cmp    $0x1060505,%eax
 428:	05 08 00 02 04       	add    $0x4020008,%eax
 42d:	01 57 05             	add    %edx,0x5(%rdi)
 430:	03 06                	add    (%rsi),%eax
 432:	76 59                	jbe    48d <__ImageBase+0x48d>
 434:	05 0a 06 01 05       	add    $0x501060a,%eax
 439:	02 06                	add    (%rsi),%al
 43b:	76 13                	jbe    450 <__ImageBase+0x450>
 43d:	05 21 06 01 4a       	add    $0x4a010621,%eax
 442:	05 02 06 59 14       	add    $0x14590602,%eax
 447:	05 05 06 01 05       	add    $0x5010605,%eax
 44c:	03 06                	add    (%rsi),%eax
 44e:	59                   	pop    %rcx
 44f:	05 07 06 01 05       	add    $0x5010607,%eax
 454:	06                   	(bad)  
 455:	00 02                	add    %al,(%rdx)
 457:	04 01                	add    $0x1,%al
 459:	08 66 05             	or     %ah,0x5(%rsi)
 45c:	03 06                	add    (%rsi),%eax
 45e:	4e 16                	rex.WRX (bad) 
 460:	05 07 06 01 05       	add    $0x5010607,%eax
 465:	06                   	(bad)  
 466:	00 02                	add    %al,(%rdx)
 468:	04 01                	add    $0x1,%al
 46a:	08 2e                	or     %ch,(%rsi)
 46c:	05 03 06 4e 05       	add    $0x54e0603,%eax
 471:	22 06                	and    (%rsi),%al
 473:	01 05 03 06 59 06    	add    %eax,0x6590603(%rip)        # 6590a7c <_end+0x6565a6c>
 479:	01 06                	add    %eax,(%rsi)
 47b:	30 05 0e 06 01 05    	xor    %al,0x501060e(%rip)        # 5010a8f <_end+0x4fe5a7f>
 481:	02 06                	add    (%rsi),%al
 483:	69 05 0b 06 01 05 02 	imul   $0x13d80602,0x501060b(%rip),%eax        # 5010a98 <_end+0x4fe5a88>
 48a:	06 d8 13 
 48d:	13 06                	adc    (%rsi),%eax
 48f:	58                   	pop    %rax
 490:	06                   	(bad)  
 491:	4b 05 01 06 13 58    	rex.WXB add $0x58130601,%rax
 497:	06                   	(bad)  
 498:	69 06 01 05 02 06    	imul   $0x6020501,(%rsi),%eax
 49e:	4b 13 05 01 06 10 f2 	rex.WXB adc -0xdeff9ff(%rip),%rax        # fffffffff2100aa6 <_end+0xfffffffff20d5a96>
 4a5:	05 2a 5a 05 1a       	add    $0x1a055a2a,%eax
 4aa:	00 02                	add    %al,(%rdx)
 4ac:	04 01                	add    $0x1,%al
 4ae:	58                   	pop    %rax
 4af:	05 2a 00 02 04       	add    $0x402002a,%eax
 4b4:	01 58 05             	add    %ebx,0x5(%rax)
 4b7:	02 06                	add    (%rsi),%al
 4b9:	4c 13 13             	adc    (%rbx),%r10
 4bc:	05 08 06 01 05       	add    $0x5010608,%eax
 4c1:	02 06                	add    (%rsi),%al
 4c3:	77 01                	ja     4c6 <__ImageBase+0x4c6>
 4c5:	00 02                	add    %al,(%rdx)
 4c7:	04 01                	add    $0x1,%al
 4c9:	06                   	(bad)  
 4ca:	58                   	pop    %rax
 4cb:	05 06 00 02 04       	add    $0x4020006,%eax
 4d0:	01 68 05             	add    %ebp,0x5(%rax)
 4d3:	02 00                	add    (%rax),%al
 4d5:	02 04 01             	add    (%rcx,%rax,1),%al
 4d8:	3a 00                	cmp    (%rax),%al
 4da:	02 04 03             	add    (%rbx,%rax,1),%al
 4dd:	90                   	nop
 4de:	05 06 00 02 04       	add    $0x4020006,%eax
 4e3:	02 a0 00 02 04 04    	add    0x4040200(%rax),%ah
 4e9:	3c 05                	cmp    $0x5,%al
 4eb:	05 00 02 04 08       	add    $0x8040200,%eax
 4f0:	4a 05 02 06 a1 05    	rex.WX add $0x5a10602,%rax
 4f6:	0a 06                	or     (%rsi),%al
 4f8:	01 58 05             	add    %ebx,0x5(%rax)
 4fb:	02 06                	add    (%rsi),%al
 4fd:	3d 05 05 06 01       	cmp    $0x1060505,%eax
 502:	05 08 00 02 04       	add    $0x4020008,%eax
 507:	01 57 05             	add    %edx,0x5(%rdi)
 50a:	03 06                	add    (%rsi),%eax
 50c:	76 59                	jbe    567 <__ImageBase+0x567>
 50e:	05 0a 06 01 05       	add    $0x501060a,%eax
 513:	02 06                	add    (%rsi),%al
 515:	a0 13 05 21 06 01 4a 	movabs 0x2054a0106210513,%al
 51c:	05 02 
 51e:	06                   	(bad)  
 51f:	59                   	pop    %rcx
 520:	14 05                	adc    $0x5,%al
 522:	05 06 01 05 03       	add    $0x3050106,%eax
 527:	06                   	(bad)  
 528:	59                   	pop    %rcx
 529:	05 07 06 01 05       	add    $0x5010607,%eax
 52e:	06                   	(bad)  
 52f:	00 02                	add    %al,(%rdx)
 531:	04 01                	add    $0x1,%al
 533:	08 66 05             	or     %ah,0x5(%rsi)
 536:	03 06                	add    (%rsi),%eax
 538:	4e 16                	rex.WRX (bad) 
 53a:	05 07 06 01 05       	add    $0x5010607,%eax
 53f:	06                   	(bad)  
 540:	00 02                	add    %al,(%rdx)
 542:	04 01                	add    $0x1,%al
 544:	08 2e                	or     %ch,(%rsi)
 546:	05 03 06 4e 05       	add    $0x54e0603,%eax
 54b:	22 06                	and    (%rsi),%al
 54d:	01 05 03 06 59 06    	add    %eax,0x6590603(%rip)        # 6590b56 <_end+0x6565b46>
 553:	01 06                	add    %eax,(%rsi)
 555:	30 05 0e 06 01 05    	xor    %al,0x501060e(%rip)        # 5010b69 <_end+0x4fe5b59>
 55b:	02 06                	add    (%rsi),%al
 55d:	69 05 06 06 01 05 14 	imul   $0x6055814,0x5010606(%rip),%eax        # 5010b6d <_end+0x4fe5b5d>
 564:	58 05 06 
 567:	4a 05 05 00 02 04    	rex.WX add $0x4020005,%rax
 56d:	01 e4                	add    %esp,%esp
 56f:	05 02 06 4f 05       	add    $0x54f0602,%eax
 574:	0b 06                	or     (%rsi),%eax
 576:	01 05 02 06 08 14    	add    %eax,0x14080602(%rip)        # 14080b7e <_end+0x14055b6e>
 57c:	13 13                	adc    (%rbx),%edx
 57e:	06                   	(bad)  
 57f:	58                   	pop    %rax
 580:	06                   	(bad)  
 581:	4b 05 01 06 13 58    	rex.WXB add $0x58130601,%rax
 587:	02 06                	add    (%rsi),%al
 589:	00 01                	add    %al,(%rcx)
 58b:	01                   	.byte 0x1

Disassembly of section .debug_str:

0000000000000000 <.debug_str>:
   0:	6f                   	outsl  %ds:(%rsi),(%dx)
   1:	63 61 6c             	movsxd 0x6c(%rcx),%esp
   4:	6c                   	insb   (%dx),%es:(%rdi)
   5:	5f                   	pop    %rdi
   6:	70 72                	jo     7a <__ImageBase+0x7a>
   8:	69 6e 74 5f 61 64 64 	imul   $0x6464615f,0x74(%rsi),%ebp
   f:	72 65                	jb     76 <__ImageBase+0x76>
  11:	73 73                	jae    86 <__ImageBase+0x86>
  13:	00 6d 79             	add    %ch,0x79(%rbp)
  16:	5f                   	pop    %rdi
  17:	73 74                	jae    8d <__ImageBase+0x8d>
  19:	72 75                	jb     90 <__ImageBase+0x90>
  1b:	63 74 00 66          	movsxd 0x66(%rax,%rax,1),%esi
  1f:	6c                   	insb   (%dx),%es:(%rdi)
  20:	6f                   	outsl  %ds:(%rsi),(%dx)
  21:	61                   	(bad)  
  22:	74 00                	je     24 <__ImageBase+0x24>
  24:	70 69                	jo     8f <__ImageBase+0x8f>
  26:	6e                   	outsb  %ds:(%rsi),(%dx)
  27:	63 6f 64             	movsxd 0x64(%rdi),%ebp
  2a:	65 00 47 4e          	add    %al,%gs:0x4e(%rdi)
  2e:	55                   	push   %rbp
  2f:	20 43 31             	and    %al,0x31(%rbx)
  32:	37                   	(bad)  
  33:	20 31                	and    %dh,(%rcx)
  35:	33 2e                	xor    (%rsi),%ebp
  37:	33 2e                	xor    (%rsi),%ebp
  39:	30 20                	xor    %ah,(%rax)
  3b:	2d 6d 74 75 6e       	sub    $0x6e75746d,%eax
  40:	65 3d 67 65 6e 65    	gs cmp $0x656e6567,%eax
  46:	72 69                	jb     b1 <__ImageBase+0xb1>
  48:	63 20                	movsxd (%rax),%esp
  4a:	2d 6d 61 72 63       	sub    $0x6372616d,%eax
  4f:	68 3d 78 38 36       	push   $0x3638783d
  54:	2d 36 34 20 2d       	sub    $0x2d203436,%eax
  59:	67 20 2d 4f 73 20 2d 	and    %ch,0x2d20734f(%eip)        # 2d2073af <_end+0x2d1dc39f>
  60:	66 76 69             	data16 jbe cc <__ImageBase+0xcc>
  63:	73 69                	jae    ce <__ImageBase+0xce>
  65:	62                   	(bad)  
  66:	69 6c 69 74 79 3d 68 	imul   $0x69683d79,0x74(%rcx,%rbp,2),%ebp
  6d:	69 
  6e:	64 64 65 6e          	fs fs outsb %gs:(%rsi),(%dx)
  72:	20 2d 66 70 69 65    	and    %ch,0x65697066(%rip)        # 656970de <_end+0x6566c0ce>
  78:	20 2d 66 73 74 61    	and    %ch,0x61747366(%rip)        # 617473e4 <_end+0x6171c3d4>
  7e:	63 6b 2d             	movsxd 0x2d(%rbx),%ebp
  81:	70 72                	jo     f5 <__ImageBase+0xf5>
  83:	6f                   	outsl  %ds:(%rsi),(%dx)
  84:	74 65                	je     eb <__ImageBase+0xeb>
  86:	63 74 6f 72          	movsxd 0x72(%rdi,%rbp,2),%esi
  8a:	20 2d 66 61 73 79    	and    %ch,0x79736166(%rip)        # 797361f6 <_end+0x7970b1e6>
  90:	6e                   	outsb  %ds:(%rsi),(%dx)
  91:	63 68 72             	movsxd 0x72(%rax),%ebp
  94:	6f                   	outsl  %ds:(%rsi),(%dx)
  95:	6e                   	outsb  %ds:(%rsi),(%dx)
  96:	6f                   	outsl  %ds:(%rsi),(%dx)
  97:	75 73                	jne    10c <__ImageBase+0x10c>
  99:	2d 75 6e 77 69       	sub    $0x69776e75,%eax
  9e:	6e                   	outsb  %ds:(%rsi),(%dx)
  9f:	64 2d 74 61 62 6c    	fs sub $0x6c626174,%eax
  a5:	65 73 20             	gs jae c8 <__ImageBase+0xc8>
  a8:	2d 66 73 74 61       	sub    $0x61747366,%eax
  ad:	63 6b 2d             	movsxd 0x2d(%rbx),%ebp
  b0:	63 6c 61 73          	movsxd 0x73(%rcx,%riz,2),%ebp
  b4:	68 2d 70 72 6f       	push   $0x6f72702d
  b9:	74 65                	je     120 <__ImageBase+0x120>
  bb:	63 74 69 6f          	movsxd 0x6f(%rcx,%rbp,2),%esi
  bf:	6e                   	outsb  %ds:(%rsi),(%dx)
  c0:	20 2d 66 63 66 2d    	and    %ch,0x2d666366(%rip)        # 2d66642c <_end+0x2d63b41c>
  c6:	70 72                	jo     13a <__ImageBase+0x13a>
  c8:	6f                   	outsl  %ds:(%rsi),(%dx)
  c9:	74 65                	je     130 <__ImageBase+0x130>
  cb:	63 74 69 6f          	movsxd 0x6f(%rcx,%rbp,2),%esi
  cf:	6e                   	outsb  %ds:(%rsi),(%dx)
  d0:	00 75 6e             	add    %dh,0x6e(%rbp)
  d3:	73 69                	jae    13e <__ImageBase+0x13e>
  d5:	67 6e                	outsb  %ds:(%esi),(%dx)
  d7:	65 64 20 63 68       	gs and %ah,%fs:0x68(%rbx)
  dc:	61                   	(bad)  
  dd:	72 00                	jb     df <__ImageBase+0xdf>
  df:	6c                   	insb   (%dx),%es:(%rdi)
  e0:	6f                   	outsl  %ds:(%rsi),(%dx)
  e1:	6e                   	outsb  %ds:(%rsi),(%dx)
  e2:	67 20 75 6e          	and    %dh,0x6e(%ebp)
  e6:	73 69                	jae    151 <__ImageBase+0x151>
  e8:	67 6e                	outsb  %ds:(%esi),(%dx)
  ea:	65 64 20 69 6e       	gs and %ch,%fs:0x6e(%rcx)
  ef:	74 00                	je     f1 <__ImageBase+0xf1>
  f1:	73 68                	jae    15b <__ImageBase+0x15b>
  f3:	6f                   	outsl  %ds:(%rsi),(%dx)
  f4:	72 74                	jb     16a <__ImageBase+0x16a>
  f6:	20 75 6e             	and    %dh,0x6e(%rbp)
  f9:	73 69                	jae    164 <__ImageBase+0x164>
  fb:	67 6e                	outsb  %ds:(%esi),(%dx)
  fd:	65 64 20 69 6e       	gs and %ch,%fs:0x6e(%rcx)
 102:	74 00                	je     104 <__ImageBase+0x104>
 104:	73 74                	jae    17a <__ImageBase+0x17a>
 106:	72 6e                	jb     176 <__ImageBase+0x176>
 108:	63 70 79             	movsxd 0x79(%rax),%esi
 10b:	00 64 6f 75          	add    %ah,0x75(%rdi,%rbp,2)
 10f:	62                   	(bad)  
 110:	6c                   	insb   (%dx),%es:(%rdi)
 111:	65 00 70 72          	add    %dh,%gs:0x72(%rax)
 115:	6f                   	outsl  %ds:(%rsi),(%dx)
 116:	64 70 00             	fs jo  119 <__ImageBase+0x119>
 119:	73 75                	jae    190 <__ImageBase+0x190>
 11b:	6d                   	insl   (%dx),%es:(%rdi)
 11c:	70 00                	jo     11e <__ImageBase+0x11e>
 11e:	6c                   	insb   (%dx),%es:(%rdi)
 11f:	6f                   	outsl  %ds:(%rsi),(%dx)
 120:	6e                   	outsb  %ds:(%rsi),(%dx)
 121:	67 20 6c 6f 6e       	and    %ch,0x6e(%edi,%ebp,2)
 126:	67 20 69 6e          	and    %ch,0x6e(%ecx)
 12a:	74 00                	je     12c <__ImageBase+0x12c>
 12c:	73 68                	jae    196 <__ImageBase+0x196>
 12e:	6f                   	outsl  %ds:(%rsi),(%dx)
 12f:	72 74                	jb     1a5 <__ImageBase+0x1a5>
 131:	20 69 6e             	and    %ch,0x6e(%rcx)
 134:	74 00                	je     136 <__ImageBase+0x136>
 136:	5f                   	pop    %rdi
 137:	5f                   	pop    %rdi
 138:	75 69                	jne    1a3 <__ImageBase+0x1a3>
 13a:	6e                   	outsb  %ds:(%rsi),(%dx)
 13b:	74 36                	je     173 <__ImageBase+0x173>
 13d:	34 5f                	xor    $0x5f,%al
 13f:	74 00                	je     141 <__ImageBase+0x141>
 141:	5f                   	pop    %rdi
 142:	5f                   	pop    %rdi
 143:	73 69                	jae    1ae <__ImageBase+0x1ae>
 145:	7a 65                	jp     1ac <__ImageBase+0x1ac>
 147:	5f                   	pop    %rdi
 148:	74 00                	je     14a <__ImageBase+0x14a>
 14a:	73 67                	jae    1b3 <__ImageBase+0x1b3>
 14c:	78 5f                	js     1ad <__ImageBase+0x1ad>
 14e:	69 73 5f 6f 75 74 73 	imul   $0x7374756f,0x5f(%rbx),%esi
 155:	69 64 65 5f 65 6e 63 	imul   $0x6c636e65,0x5f(%rbp,%riz,2),%esp
 15c:	6c 
 15d:	61                   	(bad)  
 15e:	76 65                	jbe    1c5 <__ImageBase+0x1c5>
 160:	00 61 73             	add    %ah,0x73(%rcx)
 163:	6d                   	insl   (%dx),%es:(%rdi)
 164:	2e 53                	cs push %rbx
 166:	00 2f                	add    %ch,(%rdi)
 168:	68 6f 6d 65 2f       	push   $0x2f656d6f
 16d:	6a 61                	push   $0x61
 16f:	6e                   	outsb  %ds:(%rsi),(%dx)
 170:	2f                   	(bad)  
 171:	70 6f                	jo     1e2 <__ImageBase+0x1e2>
 173:	69 6e 74 65 72 73 73 	imul   $0x73737265,0x74(%rsi),%ebp
 17a:	2f                   	(bad)  
 17b:	45 6e                	rex.RB outsb %ds:(%rsi),(%dx)
 17d:	63 6c 61 76          	movsxd 0x76(%rcx,%riz,2),%ebp
 181:	65 00 47 4e          	add    %al,%gs:0x4e(%rdi)
 185:	55                   	push   %rbp
 186:	20 41 53             	and    %al,0x53(%rcx)
 189:	20 32                	and    %dh,(%rdx)
 18b:	2e 33 36             	cs xor (%rsi),%esi
 18e:	2e 31 00             	cs xor %eax,(%rax)
 191:	53                   	push   %rbx
 192:	47 58                	rex.RXB pop %r8
 194:	5f                   	pop    %rdi
 195:	45 52                	rex.RB push %r10
 197:	52                   	push   %rdx
 198:	4f 52                	rex.WRXB push %r10
 19a:	5f                   	pop    %rdi
 19b:	55                   	push   %rbp
 19c:	4e                   	rex.WRX
 19d:	45 58                	rex.RB pop %r8
 19f:	50                   	push   %rax
 1a0:	45                   	rex.RB
 1a1:	43 54                	rex.XB push %r12
 1a3:	45                   	rex.RB
 1a4:	44 00 53 47          	add    %r10b,0x47(%rbx)
 1a8:	58                   	pop    %rax
 1a9:	5f                   	pop    %rdi
 1aa:	45 52                	rex.RB push %r10
 1ac:	52                   	push   %rdx
 1ad:	4f 52                	rex.WRXB push %r10
 1af:	5f                   	pop    %rdi
 1b0:	4d                   	rex.WRB
 1b1:	4f                   	rex.WRXB
 1b2:	44                   	rex.R
 1b3:	45 5f                	rex.RB pop %r15
 1b5:	49                   	rex.WB
 1b6:	4e                   	rex.WRX
 1b7:	43                   	rex.XB
 1b8:	4f                   	rex.WRXB
 1b9:	4d 50                	rex.WRB push %r8
 1bb:	41 54                	push   %r12
 1bd:	49                   	rex.WB
 1be:	42                   	rex.X
 1bf:	4c                   	rex.WR
 1c0:	45 00 53 47          	add    %r10b,0x47(%r11)
 1c4:	58                   	pop    %rax
 1c5:	5f                   	pop    %rdi
 1c6:	50                   	push   %rax
 1c7:	54                   	push   %rsp
 1c8:	48 52                	rex.W push %rdx
 1ca:	45                   	rex.RB
 1cb:	41                   	rex.B
 1cc:	44 5f                	rex.R pop %rdi
 1ce:	45 58                	rex.RB pop %r8
 1d0:	49 54                	rex.WB push %r12
 1d2:	00 6f 63             	add    %ch,0x63(%rdi)
 1d5:	61                   	(bad)  
 1d6:	6c                   	insb   (%dx),%es:(%rdi)
 1d7:	6c                   	insb   (%dx),%es:(%rdi)
 1d8:	6f                   	outsl  %ds:(%rsi),(%dx)
 1d9:	63 5f 73             	movsxd 0x73(%rdi),%ebx
 1dc:	69 7a 65 00 5f 5f 75 	imul   $0x755f5f00,0x65(%rdx),%edi
 1e3:	69 6e 74 38 5f 74 00 	imul   $0x745f38,0x74(%rsi),%ebp
 1ea:	53                   	push   %rbx
 1eb:	47 58                	rex.RXB pop %r8
 1ed:	5f                   	pop    %rdi
 1ee:	45 52                	rex.RB push %r10
 1f0:	52                   	push   %rdx
 1f1:	4f 52                	rex.WRXB push %r10
 1f3:	5f                   	pop    %rdi
 1f4:	4d                   	rex.WRB
 1f5:	43 5f                	rex.XB pop %r15
 1f7:	4e                   	rex.WRX
 1f8:	4f 54                	rex.WRXB push %r12
 1fa:	5f                   	pop    %rdi
 1fb:	46                   	rex.RX
 1fc:	4f 55                	rex.WRXB push %r13
 1fe:	4e                   	rex.WRX
 1ff:	44 00 6d 73          	add    %r13b,0x73(%rbp)
 203:	5f                   	pop    %rdi
 204:	73 74                	jae    27a <__ImageBase+0x27a>
 206:	72 00                	jb     208 <__ImageBase+0x208>
 208:	53                   	push   %rbx
 209:	47 58                	rex.RXB pop %r8
 20b:	5f                   	pop    %rdi
 20c:	45 52                	rex.RB push %r10
 20e:	52                   	push   %rdx
 20f:	4f 52                	rex.WRXB push %r10
 211:	5f                   	pop    %rdi
 212:	49                   	rex.WB
 213:	4e 56                	rex.WRX push %rsi
 215:	41                   	rex.B
 216:	4c                   	rex.WR
 217:	49                   	rex.WB
 218:	44 5f                	rex.R pop %rdi
 21a:	45                   	rex.RB
 21b:	4e                   	rex.WRX
 21c:	43                   	rex.XB
 21d:	4c                   	rex.WR
 21e:	41 56                	push   %r14
 220:	45 5f                	rex.RB pop %r15
 222:	49                   	rex.WB
 223:	44 00 53 47          	add    %r10b,0x47(%rbx)
 227:	58                   	pop    %rax
 228:	5f                   	pop    %rdi
 229:	45 52                	rex.RB push %r10
 22b:	52                   	push   %rdx
 22c:	4f 52                	rex.WRXB push %r10
 22e:	5f                   	pop    %rdi
 22f:	49                   	rex.WB
 230:	4e 56                	rex.WRX push %rsi
 232:	41                   	rex.B
 233:	4c                   	rex.WR
 234:	49                   	rex.WB
 235:	44 5f                	rex.R pop %rdi
 237:	53                   	push   %rbx
 238:	49                   	rex.WB
 239:	47                   	rex.RXB
 23a:	4e                   	rex.WRX
 23b:	41 54                	push   %r12
 23d:	55                   	push   %rbp
 23e:	52                   	push   %rdx
 23f:	45 00 73 67          	add    %r14b,0x67(%r11)
 243:	78 5f                	js     2a4 <__ImageBase+0x2a4>
 245:	6f                   	outsl  %ds:(%rsi),(%dx)
 246:	63 61 6c             	movsxd 0x6c(%rcx),%esp
 249:	6c                   	insb   (%dx),%es:(%rdi)
 24a:	00 53 47             	add    %dl,0x47(%rbx)
 24d:	58                   	pop    %rax
 24e:	5f                   	pop    %rdi
 24f:	45 52                	rex.RB push %r10
 251:	52                   	push   %rdx
 252:	4f 52                	rex.WRXB push %r10
 254:	5f                   	pop    %rdi
 255:	55                   	push   %rbp
 256:	4e 53                	rex.WRX push %rbx
 258:	55                   	push   %rbp
 259:	50                   	push   %rax
 25a:	50                   	push   %rax
 25b:	4f 52                	rex.WRXB push %r10
 25d:	54                   	push   %rsp
 25e:	45                   	rex.RB
 25f:	44 5f                	rex.R pop %rdi
 261:	43                   	rex.XB
 262:	4f                   	rex.WRXB
 263:	4e                   	rex.WRX
 264:	46                   	rex.RX
 265:	49                   	rex.WB
 266:	47 00 53 47          	rex.RXB add %r10b,0x47(%r11)
 26a:	58                   	pop    %rax
 26b:	5f                   	pop    %rdi
 26c:	45 52                	rex.RB push %r10
 26e:	52                   	push   %rdx
 26f:	4f 52                	rex.WRXB push %r10
 271:	5f                   	pop    %rdi
 272:	45                   	rex.RB
 273:	4e                   	rex.WRX
 274:	43                   	rex.XB
 275:	4c                   	rex.WR
 276:	41 56                	push   %r14
 278:	45 5f                	rex.RB pop %r15
 27a:	46                   	rex.RX
 27b:	49                   	rex.WB
 27c:	4c                   	rex.WR
 27d:	45 5f                	rex.RB pop %r15
 27f:	41                   	rex.B
 280:	43                   	rex.XB
 281:	43                   	rex.XB
 282:	45 53                	rex.RB push %r11
 284:	53                   	push   %rbx
 285:	00 6d 65             	add    %ch,0x65(%rbp)
 288:	6d                   	insl   (%dx),%es:(%rdi)
 289:	63 70 79             	movsxd 0x79(%rax),%esi
 28c:	5f                   	pop    %rdi
 28d:	73 00                	jae    28f <__ImageBase+0x28f>
 28f:	53                   	push   %rbx
 290:	47 58                	rex.RXB pop %r8
 292:	5f                   	pop    %rdi
 293:	45 52                	rex.RB push %r10
 295:	52                   	push   %rdx
 296:	4f 52                	rex.WRXB push %r10
 298:	5f                   	pop    %rdi
 299:	46                   	rex.RX
 29a:	49                   	rex.WB
 29b:	4c                   	rex.WR
 29c:	45 5f                	rex.RB pop %r15
 29e:	4e                   	rex.WRX
 29f:	4f 54                	rex.WRXB push %r12
 2a1:	5f                   	pop    %rdi
 2a2:	53                   	push   %rbx
 2a3:	47 58                	rex.RXB pop %r8
 2a5:	5f                   	pop    %rdi
 2a6:	46                   	rex.RX
 2a7:	49                   	rex.WB
 2a8:	4c                   	rex.WR
 2a9:	45 00 6d 73          	add    %r13b,0x73(%r13)
 2ad:	5f                   	pop    %rdi
 2ae:	65 63 61 6c          	movsxd %gs:0x6c(%rcx),%esp
 2b2:	6c                   	insb   (%dx),%es:(%rdi)
 2b3:	5f                   	pop    %rdi
 2b4:	63 6f 6d             	movsxd 0x6d(%rdi),%ebp
 2b7:	70 75                	jo     32e <__ImageBase+0x32e>
 2b9:	74 65                	je     320 <__ImageBase+0x320>
 2bb:	5f                   	pop    %rdi
 2bc:	72 65                	jb     323 <__ImageBase+0x323>
 2be:	73 70                	jae    330 <__ImageBase+0x330>
 2c0:	6f                   	outsl  %ds:(%rsi),(%dx)
 2c1:	6e                   	outsb  %ds:(%rsi),(%dx)
 2c2:	73 65                	jae    329 <__ImageBase+0x329>
 2c4:	5f                   	pop    %rdi
 2c5:	74 00                	je     2c7 <__ImageBase+0x2c7>
 2c7:	73 67                	jae    330 <__ImageBase+0x330>
 2c9:	78 5f                	js     32a <__ImageBase+0x32a>
 2cb:	69 73 5f 77 69 74 68 	imul   $0x68746977,0x5f(%rbx),%esi
 2d2:	69 6e 5f 65 6e 63 6c 	imul   $0x6c636e65,0x5f(%rsi),%ebp
 2d9:	61                   	(bad)  
 2da:	76 65                	jbe    341 <__ImageBase+0x341>
 2dc:	00 53 47             	add    %dl,0x47(%rbx)
 2df:	58                   	pop    %rax
 2e0:	5f                   	pop    %rdi
 2e1:	45 52                	rex.RB push %r10
 2e3:	52                   	push   %rdx
 2e4:	4f 52                	rex.WRXB push %r10
 2e6:	5f                   	pop    %rdi
 2e7:	46                   	rex.RX
 2e8:	49                   	rex.WB
 2e9:	4c                   	rex.WR
 2ea:	45 5f                	rex.RB pop %r15
 2ec:	4e                   	rex.WRX
 2ed:	4f 5f                	rex.WRXB pop %r15
 2ef:	4b                   	rex.WXB
 2f0:	45 59                	rex.RB pop %r9
 2f2:	5f                   	pop    %rdi
 2f3:	49                   	rex.WB
 2f4:	44 00 53 47          	add    %r10b,0x47(%rbx)
 2f8:	58                   	pop    %rax
 2f9:	5f                   	pop    %rdi
 2fa:	45 52                	rex.RB push %r10
 2fc:	52                   	push   %rdx
 2fd:	4f 52                	rex.WRXB push %r10
 2ff:	5f                   	pop    %rdi
 300:	46                   	rex.RX
 301:	49                   	rex.WB
 302:	4c                   	rex.WR
 303:	45 5f                	rex.RB pop %r15
 305:	43                   	rex.XB
 306:	41                   	rex.B
 307:	4e 54                	rex.WRX push %rsp
 309:	5f                   	pop    %rdi
 30a:	57                   	push   %rdi
 30b:	52                   	push   %rdx
 30c:	49 54                	rex.WB push %r12
 30e:	45 5f                	rex.RB pop %r15
 310:	52                   	push   %rdx
 311:	45                   	rex.RB
 312:	43                   	rex.XB
 313:	4f 56                	rex.WRXB push %r14
 315:	45 52                	rex.RB push %r10
 317:	59                   	pop    %rcx
 318:	5f                   	pop    %rdi
 319:	46                   	rex.RX
 31a:	49                   	rex.WB
 31b:	4c                   	rex.WR
 31c:	45 00 53 47          	add    %r10b,0x47(%r11)
 320:	58                   	pop    %rax
 321:	5f                   	pop    %rdi
 322:	45 52                	rex.RB push %r10
 324:	52                   	push   %rdx
 325:	4f 52                	rex.WRXB push %r10
 327:	5f                   	pop    %rdi
 328:	4f 55                	rex.WRXB push %r13
 32a:	54                   	push   %rsp
 32b:	5f                   	pop    %rdi
 32c:	4f                   	rex.WRXB
 32d:	46 5f                	rex.RX pop %rdi
 32f:	54                   	push   %rsp
 330:	43 53                	rex.XB push %r11
 332:	00 53 47             	add    %dl,0x47(%rbx)
 335:	58                   	pop    %rax
 336:	5f                   	pop    %rdi
 337:	45 52                	rex.RB push %r10
 339:	52                   	push   %rdx
 33a:	4f 52                	rex.WRXB push %r10
 33c:	5f                   	pop    %rdi
 33d:	49                   	rex.WB
 33e:	4e 56                	rex.WRX push %rsi
 340:	41                   	rex.B
 341:	4c                   	rex.WR
 342:	49                   	rex.WB
 343:	44 5f                	rex.R pop %rdi
 345:	49 53                	rex.WB push %r11
 347:	56                   	push   %rsi
 348:	53                   	push   %rbx
 349:	56                   	push   %rsi
 34a:	4e 00 53 47          	rex.WRX add %r10b,0x47(%rbx)
 34e:	58                   	pop    %rax
 34f:	5f                   	pop    %rdi
 350:	45 52                	rex.RB push %r10
 352:	52                   	push   %rdx
 353:	4f 52                	rex.WRXB push %r10
 355:	5f                   	pop    %rdi
 356:	50                   	push   %rax
 357:	4c                   	rex.WR
 358:	41 54                	push   %r12
 35a:	46                   	rex.RX
 35b:	4f 52                	rex.WRXB push %r10
 35d:	4d 5f                	rex.WRB pop %r15
 35f:	43                   	rex.XB
 360:	45 52                	rex.RB push %r10
 362:	54                   	push   %rsp
 363:	5f                   	pop    %rdi
 364:	55                   	push   %rbp
 365:	4e                   	rex.WRX
 366:	41 56                	push   %r14
 368:	41                   	rex.B
 369:	49                   	rex.WB
 36a:	4c                   	rex.WR
 36b:	41                   	rex.B
 36c:	42                   	rex.X
 36d:	4c                   	rex.WR
 36e:	45 00 53 47          	add    %r10b,0x47(%r11)
 372:	58                   	pop    %rax
 373:	5f                   	pop    %rdi
 374:	45 52                	rex.RB push %r10
 376:	52                   	push   %rdx
 377:	4f 52                	rex.WRXB push %r10
 379:	5f                   	pop    %rdi
 37a:	46                   	rex.RX
 37b:	49                   	rex.WB
 37c:	4c                   	rex.WR
 37d:	45 5f                	rex.RB pop %r15
 37f:	43                   	rex.XB
 380:	4c                   	rex.WR
 381:	4f 53                	rex.WRXB push %r11
 383:	45 5f                	rex.RB pop %r15
 385:	46                   	rex.RX
 386:	41                   	rex.B
 387:	49                   	rex.WB
 388:	4c                   	rex.WR
 389:	45                   	rex.RB
 38a:	44 00 53 47          	add    %r10b,0x47(%rbx)
 38e:	58                   	pop    %rax
 38f:	5f                   	pop    %rdi
 390:	45 52                	rex.RB push %r10
 392:	52                   	push   %rdx
 393:	4f 52                	rex.WRXB push %r10
 395:	5f                   	pop    %rdi
 396:	4d                   	rex.WRB
 397:	45                   	rex.RB
 398:	4d                   	rex.WRB
 399:	4f 52                	rex.WRXB push %r10
 39b:	59                   	pop    %rcx
 39c:	5f                   	pop    %rdi
 39d:	4d                   	rex.WRB
 39e:	41 50                	push   %r8
 3a0:	5f                   	pop    %rdi
 3a1:	46                   	rex.RX
 3a2:	41                   	rex.B
 3a3:	49                   	rex.WB
 3a4:	4c 55                	rex.WR push %rbp
 3a6:	52                   	push   %rdx
 3a7:	45 00 73 67          	add    %r14b,0x67(%r11)
 3ab:	78 5f                	js     40c <__ImageBase+0x40c>
 3ad:	65 63 61 6c          	movsxd %gs:0x6c(%rcx),%esp
 3b1:	6c                   	insb   (%dx),%es:(%rdi)
 3b2:	5f                   	pop    %rdi
 3b3:	63 6f 6d             	movsxd 0x6d(%rdi),%ebp
 3b6:	70 75                	jo     42d <__ImageBase+0x42d>
 3b8:	74 65                	je     41f <__ImageBase+0x41f>
 3ba:	5f                   	pop    %rdi
 3bb:	72 65                	jb     422 <__ImageBase+0x422>
 3bd:	73 70                	jae    42f <__ImageBase+0x42f>
 3bf:	6f                   	outsl  %ds:(%rsi),(%dx)
 3c0:	6e                   	outsb  %ds:(%rsi),(%dx)
 3c1:	73 65                	jae    428 <__ImageBase+0x428>
 3c3:	00 6d 73             	add    %ch,0x73(%rbp)
 3c6:	5f                   	pop    %rdi
 3c7:	6f                   	outsl  %ds:(%rsi),(%dx)
 3c8:	63 61 6c             	movsxd 0x6c(%rcx),%esp
 3cb:	6c                   	insb   (%dx),%es:(%rdi)
 3cc:	5f                   	pop    %rdi
 3cd:	70 72                	jo     441 <__ImageBase+0x441>
 3cf:	69 6e 74 5f 61 64 64 	imul   $0x6464615f,0x74(%rsi),%ebp
 3d6:	72 65                	jb     43d <__ImageBase+0x43d>
 3d8:	73 73                	jae    44d <__ImageBase+0x44d>
 3da:	5f                   	pop    %rdi
 3db:	74 00                	je     3dd <__ImageBase+0x3dd>
 3dd:	53                   	push   %rbx
 3de:	47 58                	rex.RXB pop %r8
 3e0:	5f                   	pop    %rdi
 3e1:	45 52                	rex.RB push %r10
 3e3:	52                   	push   %rdx
 3e4:	4f 52                	rex.WRXB push %r10
 3e6:	5f                   	pop    %rdi
 3e7:	55                   	push   %rbp
 3e8:	4e                   	rex.WRX
 3e9:	44                   	rex.R
 3ea:	45                   	rex.RB
 3eb:	46                   	rex.RX
 3ec:	49                   	rex.WB
 3ed:	4e                   	rex.WRX
 3ee:	45                   	rex.RB
 3ef:	44 5f                	rex.R pop %rdi
 3f1:	53                   	push   %rbx
 3f2:	59                   	pop    %rcx
 3f3:	4d                   	rex.WRB
 3f4:	42                   	rex.X
 3f5:	4f                   	rex.WRXB
 3f6:	4c 00 6d 73          	rex.WR add %r13b,0x73(%rbp)
 3fa:	5f                   	pop    %rdi
 3fb:	70 69                	jo     466 <__ImageBase+0x466>
 3fd:	6e                   	outsb  %ds:(%rsi),(%dx)
 3fe:	00 53 47             	add    %dl,0x47(%rbx)
 401:	58                   	pop    %rax
 402:	5f                   	pop    %rdi
 403:	45 52                	rex.RB push %r10
 405:	52                   	push   %rdx
 406:	4f 52                	rex.WRXB push %r10
 408:	5f                   	pop    %rdi
 409:	49                   	rex.WB
 40a:	4e 56                	rex.WRX push %rsi
 40c:	41                   	rex.B
 40d:	4c                   	rex.WR
 40e:	49                   	rex.WB
 40f:	44 5f                	rex.R pop %rdi
 411:	45                   	rex.RB
 412:	4e                   	rex.WRX
 413:	43                   	rex.XB
 414:	4c                   	rex.WR
 415:	41 56                	push   %r14
 417:	45 00 5f 6c          	add    %r11b,0x6c(%r15)
 41b:	65 6e                	outsb  %gs:(%rsi),(%dx)
 41d:	5f                   	pop    %rdi
 41e:	6f                   	outsl  %ds:(%rsi),(%dx)
 41f:	75 74                	jne    495 <__ImageBase+0x495>
 421:	5f                   	pop    %rdi
 422:	62                   	(bad)  
 423:	75 66                	jne    48b <__ImageBase+0x48b>
 425:	00 53 47             	add    %dl,0x47(%rbx)
 428:	58                   	pop    %rax
 429:	5f                   	pop    %rdi
 42a:	45 52                	rex.RB push %r10
 42c:	52                   	push   %rdx
 42d:	4f 52                	rex.WRXB push %r10
 42f:	5f                   	pop    %rdi
 430:	45                   	rex.RB
 431:	43                   	rex.XB
 432:	41                   	rex.B
 433:	4c                   	rex.WR
 434:	4c 5f                	rex.WR pop %rdi
 436:	4e                   	rex.WRX
 437:	4f 54                	rex.WRXB push %r12
 439:	5f                   	pop    %rdi
 43a:	41                   	rex.B
 43b:	4c                   	rex.WR
 43c:	4c                   	rex.WR
 43d:	4f 57                	rex.WRXB push %r15
 43f:	45                   	rex.RB
 440:	44 00 5f 5f          	add    %r11b,0x5f(%rdi)
 444:	74 6d                	je     4b3 <__ImageBase+0x4b3>
 446:	70 00                	jo     448 <__ImageBase+0x448>
 448:	53                   	push   %rbx
 449:	47 58                	rex.RXB pop %r8
 44b:	5f                   	pop    %rdi
 44c:	45 52                	rex.RB push %r10
 44e:	52                   	push   %rdx
 44f:	4f 52                	rex.WRXB push %r10
 451:	5f                   	pop    %rdi
 452:	49                   	rex.WB
 453:	4e 56                	rex.WRX push %rsi
 455:	41                   	rex.B
 456:	4c                   	rex.WR
 457:	49                   	rex.WB
 458:	44 5f                	rex.R pop %rdi
 45a:	4d                   	rex.WRB
 45b:	45 54                	rex.RB push %r12
 45d:	41                   	rex.B
 45e:	44                   	rex.R
 45f:	41 54                	push   %r12
 461:	41 00 53 47          	add    %dl,0x47(%r11)
 465:	58                   	pop    %rax
 466:	5f                   	pop    %rdi
 467:	45 52                	rex.RB push %r10
 469:	52                   	push   %rdx
 46a:	4f 52                	rex.WRXB push %r10
 46c:	5f                   	pop    %rdi
 46d:	4d                   	rex.WRB
 46e:	43 5f                	rex.XB pop %r15
 470:	4e                   	rex.WRX
 471:	4f 5f                	rex.WRXB pop %r15
 473:	41                   	rex.B
 474:	43                   	rex.XB
 475:	43                   	rex.XB
 476:	45 53                	rex.RB push %r11
 478:	53                   	push   %rbx
 479:	5f                   	pop    %rdi
 47a:	52                   	push   %rdx
 47b:	49                   	rex.WB
 47c:	47                   	rex.RXB
 47d:	48 54                	rex.W push %rsp
 47f:	00 53 47             	add    %dl,0x47(%rbx)
 482:	58                   	pop    %rax
 483:	5f                   	pop    %rdi
 484:	45 52                	rex.RB push %r10
 486:	52                   	push   %rdx
 487:	4f 52                	rex.WRXB push %r10
 489:	5f                   	pop    %rdi
 48a:	53                   	push   %rbx
 48b:	45 52                	rex.RB push %r10
 48d:	56                   	push   %rsi
 48e:	49                   	rex.WB
 48f:	43                   	rex.XB
 490:	45 5f                	rex.RB pop %r15
 492:	54                   	push   %rsp
 493:	49                   	rex.WB
 494:	4d                   	rex.WRB
 495:	45                   	rex.RB
 496:	4f 55                	rex.WRXB push %r13
 498:	54                   	push   %rsp
 499:	00 6e 72             	add    %ch,0x72(%rsi)
 49c:	5f                   	pop    %rdi
 49d:	65 63 61 6c          	movsxd %gs:0x6c(%rcx),%esp
 4a1:	6c                   	insb   (%dx),%es:(%rdi)
 4a2:	00 73 74             	add    %dh,0x74(%rbx)
 4a5:	72 6c                	jb     513 <__ImageBase+0x513>
 4a7:	65 6e                	outsb  %gs:(%rsi),(%dx)
 4a9:	00 53 47             	add    %dl,0x47(%rbx)
 4ac:	58                   	pop    %rax
 4ad:	5f                   	pop    %rdi
 4ae:	45 52                	rex.RB push %r10
 4b0:	52                   	push   %rdx
 4b1:	4f 52                	rex.WRXB push %r10
 4b3:	5f                   	pop    %rdi
 4b4:	50                   	push   %rax
 4b5:	43                   	rex.XB
 4b6:	4c 5f                	rex.WR pop %rdi
 4b8:	53                   	push   %rbx
 4b9:	48                   	rex.W
 4ba:	41 5f                	pop    %r15
 4bc:	4d                   	rex.WRB
 4bd:	49 53                	rex.WB push %r11
 4bf:	4d                   	rex.WRB
 4c0:	41 54                	push   %r12
 4c2:	43                   	rex.XB
 4c3:	48 00 6d 73          	rex.W add %bpl,0x73(%rbp)
 4c7:	5f                   	pop    %rdi
 4c8:	61                   	(bad)  
 4c9:	00 53 47             	add    %dl,0x47(%rbx)
 4cc:	58                   	pop    %rax
 4cd:	5f                   	pop    %rdi
 4ce:	45 52                	rex.RB push %r10
 4d0:	52                   	push   %rdx
 4d1:	4f 52                	rex.WRXB push %r10
 4d3:	5f                   	pop    %rdi
 4d4:	49                   	rex.WB
 4d5:	4e 56                	rex.WRX push %rsi
 4d7:	41                   	rex.B
 4d8:	4c                   	rex.WR
 4d9:	49                   	rex.WB
 4da:	44 5f                	rex.R pop %rdi
 4dc:	43 50                	rex.XB push %r8
 4de:	55                   	push   %rbp
 4df:	53                   	push   %rbx
 4e0:	56                   	push   %rsi
 4e1:	4e 00 6d 73          	rex.WRX add %r13b,0x73(%rbp)
 4e5:	5f                   	pop    %rdi
 4e6:	69 00 6d 73 5f 6a    	imul   $0x6a5f736d,(%rax),%eax
 4ec:	00 53 47             	add    %dl,0x47(%rbx)
 4ef:	58                   	pop    %rax
 4f0:	5f                   	pop    %rdi
 4f1:	45 52                	rex.RB push %r10
 4f3:	52                   	push   %rdx
 4f4:	4f 52                	rex.WRXB push %r10
 4f6:	5f                   	pop    %rdi
 4f7:	46                   	rex.RX
 4f8:	49                   	rex.WB
 4f9:	4c                   	rex.WR
 4fa:	45 5f                	rex.RB pop %r15
 4fc:	42                   	rex.X
 4fd:	41                   	rex.B
 4fe:	44 5f                	rex.R pop %rdi
 500:	53                   	push   %rbx
 501:	54                   	push   %rsp
 502:	41 54                	push   %r12
 504:	55                   	push   %rbp
 505:	53                   	push   %rbx
 506:	00 6d 73             	add    %ch,0x73(%rbp)
 509:	5f                   	pop    %rdi
 50a:	65 63 61 6c          	movsxd %gs:0x6c(%rcx),%esp
 50e:	6c                   	insb   (%dx),%es:(%rdi)
 50f:	5f                   	pop    %rdi
 510:	75 70                	jne    582 <__ImageBase+0x582>
 512:	64 61                	fs (bad) 
 514:	74 65                	je     57b <__ImageBase+0x57b>
 516:	5f                   	pop    %rdi
 517:	72 65                	jb     57e <__ImageBase+0x57e>
 519:	73 70                	jae    58b <__ImageBase+0x58b>
 51b:	6f                   	outsl  %ds:(%rsi),(%dx)
 51c:	6e                   	outsb  %ds:(%rsi),(%dx)
 51d:	73 65                	jae    584 <__ImageBase+0x584>
 51f:	5f                   	pop    %rdi
 520:	6c                   	insb   (%dx),%es:(%rdi)
 521:	6f                   	outsl  %ds:(%rsi),(%dx)
 522:	63 5f 74             	movsxd 0x74(%rdi),%ebx
 525:	00 53 47             	add    %dl,0x47(%rbx)
 528:	58                   	pop    %rax
 529:	5f                   	pop    %rdi
 52a:	45 52                	rex.RB push %r10
 52c:	52                   	push   %rdx
 52d:	4f 52                	rex.WRXB push %r10
 52f:	5f                   	pop    %rdi
 530:	55                   	push   %rbp
 531:	4e 52                	rex.WRX push %rdx
 533:	45                   	rex.RB
 534:	43                   	rex.XB
 535:	4f                   	rex.WRXB
 536:	47                   	rex.RXB
 537:	4e                   	rex.WRX
 538:	49 5a                	rex.WB pop %r10
 53a:	45                   	rex.RB
 53b:	44 5f                	rex.R pop %rdi
 53d:	50                   	push   %rax
 53e:	4c                   	rex.WR
 53f:	41 54                	push   %r12
 541:	46                   	rex.RX
 542:	4f 52                	rex.WRXB push %r10
 544:	4d 00 53 47          	rex.WRB add %r10b,0x47(%r11)
 548:	58                   	pop    %rax
 549:	5f                   	pop    %rdi
 54a:	45 52                	rex.RB push %r10
 54c:	52                   	push   %rdx
 54d:	4f 52                	rex.WRXB push %r10
 54f:	5f                   	pop    %rdi
 550:	53                   	push   %rbx
 551:	45 52                	rex.RB push %r10
 553:	56                   	push   %rsi
 554:	49                   	rex.WB
 555:	43                   	rex.XB
 556:	45 5f                	rex.RB pop %r15
 558:	49                   	rex.WB
 559:	4e 56                	rex.WRX push %rsi
 55b:	41                   	rex.B
 55c:	4c                   	rex.WR
 55d:	49                   	rex.WB
 55e:	44 5f                	rex.R pop %rdi
 560:	50                   	push   %rax
 561:	52                   	push   %rdx
 562:	49 56                	rex.WB push %r14
 564:	49                   	rex.WB
 565:	4c                   	rex.WR
 566:	45                   	rex.RB
 567:	47                   	rex.RXB
 568:	45 00 53 47          	add    %r10b,0x47(%r11)
 56c:	58                   	pop    %rax
 56d:	5f                   	pop    %rdi
 56e:	45 52                	rex.RB push %r10
 570:	52                   	push   %rdx
 571:	4f 52                	rex.WRXB push %r10
 573:	5f                   	pop    %rdi
 574:	46                   	rex.RX
 575:	49                   	rex.WB
 576:	4c                   	rex.WR
 577:	45 5f                	rex.RB pop %r15
 579:	46                   	rex.RX
 57a:	4c 55                	rex.WR push %rbp
 57c:	53                   	push   %rbx
 57d:	48 5f                	rex.W pop %rdi
 57f:	46                   	rex.RX
 580:	41                   	rex.B
 581:	49                   	rex.WB
 582:	4c                   	rex.WR
 583:	45                   	rex.RB
 584:	44 00 5f 6c          	add    %r11b,0x6c(%rdi)
 588:	65 6e                	outsb  %gs:(%rsi),(%dx)
 58a:	5f                   	pop    %rdi
 58b:	73 74                	jae    601 <__ImageBase+0x601>
 58d:	72 00                	jb     58f <__ImageBase+0x58f>
 58f:	53                   	push   %rbx
 590:	47 58                	rex.RXB pop %r8
 592:	5f                   	pop    %rdi
 593:	45 52                	rex.RB push %r10
 595:	52                   	push   %rdx
 596:	4f 52                	rex.WRXB push %r10
 598:	5f                   	pop    %rdi
 599:	42 55                	rex.X push %rbp
 59b:	53                   	push   %rbx
 59c:	59                   	pop    %rcx
 59d:	00 53 47             	add    %dl,0x47(%rbx)
 5a0:	58                   	pop    %rax
 5a1:	5f                   	pop    %rdi
 5a2:	45 52                	rex.RB push %r10
 5a4:	52                   	push   %rdx
 5a5:	4f 52                	rex.WRXB push %r10
 5a7:	5f                   	pop    %rdi
 5a8:	4d                   	rex.WRB
 5a9:	43 5f                	rex.XB pop %r15
 5ab:	4f 56                	rex.WRXB push %r14
 5ad:	45 52                	rex.RB push %r10
 5af:	5f                   	pop    %rdi
 5b0:	51                   	push   %rcx
 5b1:	55                   	push   %rbp
 5b2:	4f 54                	rex.WRXB push %r12
 5b4:	41 00 53 47          	add    %dl,0x47(%r11)
 5b8:	58                   	pop    %rax
 5b9:	5f                   	pop    %rdi
 5ba:	45 52                	rex.RB push %r10
 5bc:	52                   	push   %rdx
 5bd:	4f 52                	rex.WRXB push %r10
 5bf:	5f                   	pop    %rdi
 5c0:	45 50                	rex.RB push %r8
 5c2:	49                   	rex.WB
 5c3:	44 5f                	rex.R pop %rdi
 5c5:	4d                   	rex.WRB
 5c6:	45                   	rex.RB
 5c7:	4d                   	rex.WRB
 5c8:	42                   	rex.X
 5c9:	45 52                	rex.RB push %r10
 5cb:	5f                   	pop    %rdi
 5cc:	52                   	push   %rdx
 5cd:	45 56                	rex.RB push %r14
 5cf:	4f                   	rex.WRXB
 5d0:	4b                   	rex.WXB
 5d1:	45                   	rex.RB
 5d2:	44 00 53 47          	add    %r10b,0x47(%rbx)
 5d6:	58                   	pop    %rax
 5d7:	5f                   	pop    %rdi
 5d8:	45 52                	rex.RB push %r10
 5da:	52                   	push   %rdx
 5db:	4f 52                	rex.WRXB push %r10
 5dd:	5f                   	pop    %rdi
 5de:	46                   	rex.RX
 5df:	49                   	rex.WB
 5e0:	4c                   	rex.WR
 5e1:	45 5f                	rex.RB pop %r15
 5e3:	52                   	push   %rdx
 5e4:	45                   	rex.RB
 5e5:	43                   	rex.XB
 5e6:	4f 56                	rex.WRXB push %r14
 5e8:	45 52                	rex.RB push %r10
 5ea:	59                   	pop    %rcx
 5eb:	5f                   	pop    %rdi
 5ec:	4e                   	rex.WRX
 5ed:	45                   	rex.RB
 5ee:	45                   	rex.RB
 5ef:	44                   	rex.R
 5f0:	45                   	rex.RB
 5f1:	44 00 5f 5f          	add    %r11b,0x5f(%rdi)
 5f5:	69 6e 5f 6d 73 00 53 	imul   $0x5300736d,0x5f(%rsi),%ebp
 5fc:	47 58                	rex.RXB pop %r8
 5fe:	5f                   	pop    %rdi
 5ff:	45 52                	rex.RB push %r10
 601:	52                   	push   %rdx
 602:	4f 52                	rex.WRXB push %r10
 604:	5f                   	pop    %rdi
 605:	53                   	push   %rbx
 606:	45 52                	rex.RB push %r10
 608:	56                   	push   %rsi
 609:	49                   	rex.WB
 60a:	43                   	rex.XB
 60b:	45 5f                	rex.RB pop %r15
 60d:	55                   	push   %rbp
 60e:	4e                   	rex.WRX
 60f:	41 56                	push   %r14
 611:	41                   	rex.B
 612:	49                   	rex.WB
 613:	4c                   	rex.WR
 614:	41                   	rex.B
 615:	42                   	rex.X
 616:	4c                   	rex.WR
 617:	45 00 6d 73          	add    %r13b,0x73(%r13)
 61b:	5f                   	pop    %rdi
 61c:	69 6e 70 75 74 5f 70 	imul   $0x705f7475,0x70(%rsi),%ebp
 623:	6f                   	outsl  %ds:(%rsi),(%dx)
 624:	69 6e 74 65 72 00 53 	imul   $0x53007265,0x74(%rsi),%ebp
 62b:	47 58                	rex.RXB pop %r8
 62d:	5f                   	pop    %rdi
 62e:	45 52                	rex.RB push %r10
 630:	52                   	push   %rdx
 631:	4f 52                	rex.WRXB push %r10
 633:	5f                   	pop    %rdi
 634:	41 54                	push   %r12
 636:	54                   	push   %rsp
 637:	5f                   	pop    %rdi
 638:	4b                   	rex.WXB
 639:	45 59                	rex.RB pop %r9
 63b:	5f                   	pop    %rdi
 63c:	55                   	push   %rbp
 63d:	4e                   	rex.WRX
 63e:	49                   	rex.WB
 63f:	4e                   	rex.WRX
 640:	49 54                	rex.WB push %r12
 642:	49                   	rex.WB
 643:	41                   	rex.B
 644:	4c                   	rex.WR
 645:	49 5a                	rex.WB pop %r10
 647:	45                   	rex.RB
 648:	44 00 53 47          	add    %r10b,0x47(%rbx)
 64c:	58                   	pop    %rax
 64d:	5f                   	pop    %rdi
 64e:	45 52                	rex.RB push %r10
 650:	52                   	push   %rdx
 651:	4f 52                	rex.WRXB push %r10
 653:	5f                   	pop    %rdi
 654:	50                   	push   %rax
 655:	43                   	rex.XB
 656:	4c 5f                	rex.WR pop %rdi
 658:	4e                   	rex.WRX
 659:	4f 54                	rex.WRXB push %r12
 65b:	5f                   	pop    %rdi
 65c:	45                   	rex.RB
 65d:	4e                   	rex.WRX
 65e:	43 52                	rex.XB push %r10
 660:	59                   	pop    %rcx
 661:	50                   	push   %rax
 662:	54                   	push   %rsp
 663:	45                   	rex.RB
 664:	44 00 5f 74          	add    %r11b,0x74(%rdi)
 668:	6d                   	insl   (%dx),%es:(%rdi)
 669:	70 5f                	jo     6ca <__ImageBase+0x6ca>
 66b:	6f                   	outsl  %ds:(%rsi),(%dx)
 66c:	75 74                	jne    6e2 <__ImageBase+0x6e2>
 66e:	5f                   	pop    %rdi
 66f:	62                   	(bad)  
 670:	75 66                	jne    6d8 <__ImageBase+0x6d8>
 672:	00 53 47             	add    %dl,0x47(%rbx)
 675:	58                   	pop    %rax
 676:	5f                   	pop    %rdi
 677:	45 52                	rex.RB push %r10
 679:	52                   	push   %rdx
 67a:	4f 52                	rex.WRXB push %r10
 67c:	5f                   	pop    %rdi
 67d:	41                   	rex.B
 67e:	45 5f                	rex.RB pop %r15
 680:	49                   	rex.WB
 681:	4e 56                	rex.WRX push %rsi
 683:	41                   	rex.B
 684:	4c                   	rex.WR
 685:	49                   	rex.WB
 686:	44 5f                	rex.R pop %rdi
 688:	45 50                	rex.RB push %r8
 68a:	49                   	rex.WB
 68b:	44                   	rex.R
 68c:	42                   	rex.X
 68d:	4c                   	rex.WR
 68e:	4f                   	rex.WRXB
 68f:	42 00 53 47          	rex.X add %dl,0x47(%rbx)
 693:	58                   	pop    %rax
 694:	5f                   	pop    %rdi
 695:	49                   	rex.WB
 696:	4e 54                	rex.WRX push %rsp
 698:	45 52                	rex.RB push %r10
 69a:	4e                   	rex.WRX
 69b:	41                   	rex.B
 69c:	4c 5f                	rex.WR pop %rdi
 69e:	45 52                	rex.RB push %r10
 6a0:	52                   	push   %rdx
 6a1:	4f 52                	rex.WRXB push %r10
 6a3:	5f                   	pop    %rdi
 6a4:	45                   	rex.RB
 6a5:	4e                   	rex.WRX
 6a6:	43                   	rex.XB
 6a7:	4c                   	rex.WR
 6a8:	41 56                	push   %r14
 6aa:	45 5f                	rex.RB pop %r15
 6ac:	43 52                	rex.XB push %r10
 6ae:	45                   	rex.RB
 6af:	41 54                	push   %r12
 6b1:	45 5f                	rex.RB pop %r15
 6b3:	49                   	rex.WB
 6b4:	4e 54                	rex.WRX push %rsp
 6b6:	45 52                	rex.RB push %r10
 6b8:	52                   	push   %rdx
 6b9:	55                   	push   %rbp
 6ba:	50                   	push   %rax
 6bb:	54                   	push   %rsp
 6bc:	45                   	rex.RB
 6bd:	44 00 53 47          	add    %r10b,0x47(%rbx)
 6c1:	58                   	pop    %rax
 6c2:	5f                   	pop    %rdi
 6c3:	45 52                	rex.RB push %r10
 6c5:	52                   	push   %rdx
 6c6:	4f 52                	rex.WRXB push %r10
 6c8:	5f                   	pop    %rdi
 6c9:	49                   	rex.WB
 6ca:	4e 56                	rex.WRX push %rsi
 6cc:	41                   	rex.B
 6cd:	4c                   	rex.WR
 6ce:	49                   	rex.WB
 6cf:	44 5f                	rex.R pop %rdi
 6d1:	41 54                	push   %r12
 6d3:	54                   	push   %rsp
 6d4:	52                   	push   %rdx
 6d5:	49                   	rex.WB
 6d6:	42 55                	rex.X push %rbp
 6d8:	54                   	push   %rsp
 6d9:	45 00 53 47          	add    %r10b,0x47(%r11)
 6dd:	58                   	pop    %rax
 6de:	5f                   	pop    %rdi
 6df:	45 52                	rex.RB push %r10
 6e1:	52                   	push   %rdx
 6e2:	4f 52                	rex.WRXB push %r10
 6e4:	5f                   	pop    %rdi
 6e5:	46                   	rex.RX
 6e6:	49                   	rex.WB
 6e7:	4c                   	rex.WR
 6e8:	45 5f                	rex.RB pop %r15
 6ea:	43                   	rex.XB
 6eb:	41                   	rex.B
 6ec:	4e 54                	rex.WRX push %rsp
 6ee:	5f                   	pop    %rdi
 6ef:	4f 50                	rex.WRXB push %r8
 6f1:	45                   	rex.RB
 6f2:	4e 5f                	rex.WRX pop %rdi
 6f4:	52                   	push   %rdx
 6f5:	45                   	rex.RB
 6f6:	43                   	rex.XB
 6f7:	4f 56                	rex.WRXB push %r14
 6f9:	45 52                	rex.RB push %r10
 6fb:	59                   	pop    %rcx
 6fc:	5f                   	pop    %rdi
 6fd:	46                   	rex.RX
 6fe:	49                   	rex.WB
 6ff:	4c                   	rex.WR
 700:	45 00 53 47          	add    %r10b,0x47(%r11)
 704:	58                   	pop    %rax
 705:	5f                   	pop    %rdi
 706:	45 52                	rex.RB push %r10
 708:	52                   	push   %rdx
 709:	4f 52                	rex.WRXB push %r10
 70b:	5f                   	pop    %rdi
 70c:	50                   	push   %rax
 70d:	43                   	rex.XB
 70e:	4c 5f                	rex.WR pop %rdi
 710:	45                   	rex.RB
 711:	4e                   	rex.WRX
 712:	43 52                	rex.XB push %r10
 714:	59                   	pop    %rcx
 715:	50                   	push   %rax
 716:	54                   	push   %rsp
 717:	45                   	rex.RB
 718:	44 00 53 47          	add    %r10b,0x47(%rbx)
 71c:	58                   	pop    %rax
 71d:	5f                   	pop    %rdi
 71e:	45 52                	rex.RB push %r10
 720:	52                   	push   %rdx
 721:	4f 52                	rex.WRXB push %r10
 723:	5f                   	pop    %rdi
 724:	41                   	rex.B
 725:	45 5f                	rex.RB pop %r15
 727:	53                   	push   %rbx
 728:	45 53                	rex.RB push %r11
 72a:	53                   	push   %rbx
 72b:	49                   	rex.WB
 72c:	4f                   	rex.WRXB
 72d:	4e 5f                	rex.WRX pop %rdi
 72f:	49                   	rex.WB
 730:	4e 56                	rex.WRX push %rsi
 732:	41                   	rex.B
 733:	4c                   	rex.WR
 734:	49                   	rex.WB
 735:	44 00 53 47          	add    %r10b,0x47(%rbx)
 739:	58                   	pop    %rax
 73a:	5f                   	pop    %rdi
 73b:	45 52                	rex.RB push %r10
 73d:	52                   	push   %rdx
 73e:	4f 52                	rex.WRXB push %r10
 740:	5f                   	pop    %rdi
 741:	49                   	rex.WB
 742:	4e 56                	rex.WRX push %rsi
 744:	41                   	rex.B
 745:	4c                   	rex.WR
 746:	49                   	rex.WB
 747:	44 5f                	rex.R pop %rdi
 749:	53                   	push   %rbx
 74a:	54                   	push   %rsp
 74b:	41 54                	push   %r12
 74d:	45 00 53 47          	add    %r10b,0x47(%r11)
 751:	58                   	pop    %rax
 752:	5f                   	pop    %rdi
 753:	45 52                	rex.RB push %r10
 755:	52                   	push   %rdx
 756:	4f 52                	rex.WRXB push %r10
 758:	5f                   	pop    %rdi
 759:	45                   	rex.RB
 75a:	4e                   	rex.WRX
 75b:	43                   	rex.XB
 75c:	4c                   	rex.WR
 75d:	41 56                	push   %r14
 75f:	45 5f                	rex.RB pop %r15
 761:	43 52                	rex.XB push %r10
 763:	41 53                	push   %r11
 765:	48                   	rex.W
 766:	45                   	rex.RB
 767:	44 00 53 47          	add    %r10b,0x47(%rbx)
 76b:	58                   	pop    %rax
 76c:	5f                   	pop    %rdi
 76d:	45 52                	rex.RB push %r10
 76f:	52                   	push   %rdx
 770:	4f 52                	rex.WRXB push %r10
 772:	5f                   	pop    %rdi
 773:	44                   	rex.R
 774:	45 56                	rex.RB push %r14
 776:	49                   	rex.WB
 777:	43                   	rex.XB
 778:	45 5f                	rex.RB pop %r15
 77a:	42 55                	rex.X push %rbp
 77c:	53                   	push   %rbx
 77d:	59                   	pop    %rcx
 77e:	00 53 47             	add    %dl,0x47(%rbx)
 781:	58                   	pop    %rax
 782:	5f                   	pop    %rdi
 783:	45 52                	rex.RB push %r10
 785:	52                   	push   %rdx
 786:	4f 52                	rex.WRXB push %r10
 788:	5f                   	pop    %rdi
 789:	4f 55                	rex.WRXB push %r13
 78b:	54                   	push   %rsp
 78c:	5f                   	pop    %rdi
 78d:	4f                   	rex.WRXB
 78e:	46 5f                	rex.RX pop %rdi
 790:	45 50                	rex.RB push %r8
 792:	43 00 73 67          	rex.XB add %sil,0x67(%r11)
 796:	78 5f                	js     7f7 <__ImageBase+0x7f7>
 798:	73 74                	jae    80e <__ImageBase+0x80e>
 79a:	61                   	(bad)  
 79b:	74 75                	je     812 <__ImageBase+0x812>
 79d:	73 5f                	jae    7fe <__ImageBase+0x7fe>
 79f:	74 00                	je     7a1 <__ImageBase+0x7a1>
 7a1:	6d                   	insl   (%dx),%es:(%rdi)
 7a2:	65 6d                	gs insl (%dx),%es:(%rdi)
 7a4:	63 70 79             	movsxd 0x79(%rax),%esi
 7a7:	5f                   	pop    %rdi
 7a8:	76 65                	jbe    80f <__ImageBase+0x80f>
 7aa:	72 77                	jb     823 <__ImageBase+0x823>
 7ac:	5f                   	pop    %rdi
 7ad:	73 00                	jae    7af <__ImageBase+0x7af>
 7af:	53                   	push   %rbx
 7b0:	47 58                	rex.RXB pop %r8
 7b2:	5f                   	pop    %rdi
 7b3:	53                   	push   %rbx
 7b4:	55                   	push   %rbp
 7b5:	43                   	rex.XB
 7b6:	43                   	rex.XB
 7b7:	45 53                	rex.RB push %r11
 7b9:	53                   	push   %rbx
 7ba:	00 65 72             	add    %ah,0x72(%rbp)
 7bd:	72 6e                	jb     82d <__ImageBase+0x82d>
 7bf:	6f                   	outsl  %ds:(%rsi),(%dx)
 7c0:	5f                   	pop    %rdi
 7c1:	74 00                	je     7c3 <__ImageBase+0x7c3>
 7c3:	73 67                	jae    82c <__ImageBase+0x82c>
 7c5:	78 5f                	js     826 <__ImageBase+0x826>
 7c7:	6f                   	outsl  %ds:(%rsi),(%dx)
 7c8:	63 66 72             	movsxd 0x72(%rsi),%esp
 7cb:	65 65 00 53 47       	gs add %dl,%gs:0x47(%rbx)
 7d0:	58                   	pop    %rax
 7d1:	5f                   	pop    %rdi
 7d2:	45 52                	rex.RB push %r10
 7d4:	52                   	push   %rdx
 7d5:	4f 52                	rex.WRXB push %r10
 7d7:	5f                   	pop    %rdi
 7d8:	4e                   	rex.WRX
 7d9:	4f 5f                	rex.WRXB pop %r15
 7db:	50                   	push   %rax
 7dc:	52                   	push   %rdx
 7dd:	49 56                	rex.WB push %r14
 7df:	49                   	rex.WB
 7e0:	4c                   	rex.WR
 7e1:	45                   	rex.RB
 7e2:	47                   	rex.RXB
 7e3:	45 00 73 67          	add    %r14b,0x67(%r11)
 7e7:	78 5f                	js     848 <__ImageBase+0x848>
 7e9:	65 63 61 6c          	movsxd %gs:0x6c(%rcx),%esp
 7ed:	6c                   	insb   (%dx),%es:(%rdi)
 7ee:	5f                   	pop    %rdi
 7ef:	75 70                	jne    861 <__ImageBase+0x861>
 7f1:	64 61                	fs (bad) 
 7f3:	74 65                	je     85a <__ImageBase+0x85a>
 7f5:	5f                   	pop    %rdi
 7f6:	72 65                	jb     85d <__ImageBase+0x85d>
 7f8:	73 70                	jae    86a <__ImageBase+0x86a>
 7fa:	6f                   	outsl  %ds:(%rsi),(%dx)
 7fb:	6e                   	outsb  %ds:(%rsi),(%dx)
 7fc:	73 65                	jae    863 <__ImageBase+0x863>
 7fe:	5f                   	pop    %rdi
 7ff:	6c                   	insb   (%dx),%es:(%rdi)
 800:	6f                   	outsl  %ds:(%rsi),(%dx)
 801:	63 00                	movsxd (%rax),%eax
 803:	5f                   	pop    %rdi
 804:	69 6e 5f 6f 75 74 5f 	imul   $0x5f74756f,0x5f(%rsi),%ebp
 80b:	62                   	(bad)  
 80c:	75 66                	jne    874 <__ImageBase+0x874>
 80e:	00 53 47             	add    %dl,0x47(%rbx)
 811:	58                   	pop    %rax
 812:	5f                   	pop    %rdi
 813:	45 52                	rex.RB push %r10
 815:	52                   	push   %rdx
 816:	4f 52                	rex.WRXB push %r10
 818:	5f                   	pop    %rdi
 819:	49                   	rex.WB
 81a:	4e 56                	rex.WRX push %rsi
 81c:	41                   	rex.B
 81d:	4c                   	rex.WR
 81e:	49                   	rex.WB
 81f:	44 5f                	rex.R pop %rdi
 821:	50                   	push   %rax
 822:	41 52                	push   %r10
 824:	41                   	rex.B
 825:	4d                   	rex.WRB
 826:	45 54                	rex.RB push %r12
 828:	45 52                	rex.RB push %r10
 82a:	00 69 73             	add    %ch,0x73(%rcx)
 82d:	5f                   	pop    %rdi
 82e:	73 77                	jae    8a7 <__ImageBase+0x8a7>
 830:	69 74 63 68 6c 65 73 	imul   $0x7373656c,0x68(%rbx,%riz,2),%esi
 837:	73 
 838:	00 53 47             	add    %dl,0x47(%rbx)
 83b:	58                   	pop    %rax
 83c:	5f                   	pop    %rdi
 83d:	45 52                	rex.RB push %r10
 83f:	52                   	push   %rdx
 840:	4f 52                	rex.WRXB push %r10
 842:	5f                   	pop    %rdi
 843:	50                   	push   %rax
 844:	43                   	rex.XB
 845:	4c 5f                	rex.WR pop %rdi
 847:	47 55                	rex.RXB push %r13
 849:	49                   	rex.WB
 84a:	44 5f                	rex.R pop %rdi
 84c:	4d                   	rex.WRB
 84d:	49 53                	rex.WB push %r11
 84f:	4d                   	rex.WRB
 850:	41 54                	push   %r12
 852:	43                   	rex.XB
 853:	48 00 5f 5f          	rex.W add %bl,0x5f(%rdi)
 857:	62                   	(bad)  
 858:	75 69                	jne    8c3 <__ImageBase+0x8c3>
 85a:	6c                   	insb   (%dx),%es:(%rdi)
 85b:	74 69                	je     8c6 <__ImageBase+0x8c6>
 85d:	6e                   	outsb  %ds:(%rsi),(%dx)
 85e:	5f                   	pop    %rdi
 85f:	69 61 33 32 5f 6c 66 	imul   $0x666c5f32,0x33(%rcx),%esp
 866:	65 6e                	outsb  %gs:(%rsi),(%dx)
 868:	63 65 00             	movsxd 0x0(%rbp),%esp
 86b:	6d                   	insl   (%dx),%es:(%rdi)
 86c:	73 5f                	jae    8cd <__ImageBase+0x8cd>
 86e:	65 63 61 6c          	movsxd %gs:0x6c(%rcx),%esp
 872:	6c                   	insb   (%dx),%es:(%rdi)
 873:	5f                   	pop    %rdi
 874:	67 65 74 5f          	addr32 gs je 8d7 <__ImageBase+0x8d7>
 878:	73 65                	jae    8df <__ImageBase+0x8df>
 87a:	63 72 65             	movsxd 0x65(%rdx),%esi
 87d:	74 5f                	je     8de <__ImageBase+0x8de>
 87f:	74 00                	je     881 <__ImageBase+0x881>
 881:	53                   	push   %rbx
 882:	47 58                	rex.RXB pop %r8
 884:	5f                   	pop    %rdi
 885:	45 52                	rex.RB push %r10
 887:	52                   	push   %rdx
 888:	4f 52                	rex.WRXB push %r10
 88a:	5f                   	pop    %rdi
 88b:	45                   	rex.RB
 88c:	4e                   	rex.WRX
 88d:	43                   	rex.XB
 88e:	4c                   	rex.WR
 88f:	41 56                	push   %r14
 891:	45 5f                	rex.RB pop %r15
 893:	4c                   	rex.WR
 894:	4f 53                	rex.WRXB push %r11
 896:	54                   	push   %rsp
 897:	00 6d 73             	add    %ch,0x73(%rbp)
 89a:	5f                   	pop    %rdi
 89b:	6f                   	outsl  %ds:(%rsi),(%dx)
 89c:	63 61 6c             	movsxd 0x6c(%rcx),%esp
 89f:	6c                   	insb   (%dx),%es:(%rdi)
 8a0:	5f                   	pop    %rdi
 8a1:	70 72                	jo     915 <__ImageBase+0x915>
 8a3:	69 6e 74 5f 74 00 73 	imul   $0x7300745f,0x74(%rsi),%ebp
 8aa:	67 78 5f             	addr32 js 90c <__ImageBase+0x90c>
 8ad:	65 63 61 6c          	movsxd %gs:0x6c(%rcx),%esp
 8b1:	6c                   	insb   (%dx),%es:(%rdi)
 8b2:	5f                   	pop    %rdi
 8b3:	67 65 74 5f          	addr32 gs je 916 <__ImageBase+0x916>
 8b7:	73 65                	jae    91e <__ImageBase+0x91e>
 8b9:	63 72 65             	movsxd 0x65(%rdx),%esi
 8bc:	74 00                	je     8be <__ImageBase+0x8be>
 8be:	5f                   	pop    %rdi
 8bf:	5f                   	pop    %rdi
 8c0:	75 69                	jne    92b <__ImageBase+0x92b>
 8c2:	6e                   	outsb  %ds:(%rsi),(%dx)
 8c3:	74 70                	je     935 <__ImageBase+0x935>
 8c5:	74 72                	je     939 <__ImageBase+0x939>
 8c7:	5f                   	pop    %rdi
 8c8:	74 00                	je     8ca <__ImageBase+0x8ca>
 8ca:	5f                   	pop    %rdi
 8cb:	74 6d                	je     93a <__ImageBase+0x93a>
 8cd:	70 5f                	jo     92e <__ImageBase+0x92e>
 8cf:	69 6e 70 75 74 5f 70 	imul   $0x705f7475,0x70(%rsi),%ebp
 8d6:	6f                   	outsl  %ds:(%rsi),(%dx)
 8d7:	69 6e 74 65 72 00 69 	imul   $0x69007265,0x74(%rsi),%ebp
 8de:	73 5f                	jae    93f <__ImageBase+0x93f>
 8e0:	70 72                	jo     954 <__ImageBase+0x954>
 8e2:	69 76 00 65 63 61 6c 	imul   $0x6c616365,0x0(%rsi),%esi
 8e9:	6c                   	insb   (%dx),%es:(%rdi)
 8ea:	5f                   	pop    %rdi
 8eb:	61                   	(bad)  
 8ec:	64 64 72 00          	fs fs jb 8f0 <__ImageBase+0x8f0>
 8f0:	6d                   	insl   (%dx),%es:(%rdi)
 8f1:	61                   	(bad)  
 8f2:	6c                   	insb   (%dx),%es:(%rdi)
 8f3:	6c                   	insb   (%dx),%es:(%rdi)
 8f4:	6f                   	outsl  %ds:(%rsi),(%dx)
 8f5:	63 00                	movsxd (%rax),%eax
 8f7:	73 67                	jae    960 <__ImageBase+0x960>
 8f9:	78 5f                	js     95a <__ImageBase+0x95a>
 8fb:	65 63 61 6c          	movsxd %gs:0x6c(%rcx),%esp
 8ff:	6c                   	insb   (%dx),%es:(%rdi)
 900:	5f                   	pop    %rdi
 901:	67 65 74 5f          	addr32 gs je 964 <__ImageBase+0x964>
 905:	72 65                	jb     96c <__ImageBase+0x96c>
 907:	73 70                	jae    979 <__ImageBase+0x979>
 909:	6f                   	outsl  %ds:(%rsi),(%dx)
 90a:	6e                   	outsb  %ds:(%rsi),(%dx)
 90b:	73 65                	jae    972 <__ImageBase+0x972>
 90d:	00 53 47             	add    %dl,0x47(%rbx)
 910:	58                   	pop    %rax
 911:	5f                   	pop    %rdi
 912:	45 52                	rex.RB push %r10
 914:	52                   	push   %rdx
 915:	4f 52                	rex.WRXB push %r10
 917:	5f                   	pop    %rdi
 918:	49                   	rex.WB
 919:	4e 56                	rex.WRX push %rsi
 91b:	41                   	rex.B
 91c:	4c                   	rex.WR
 91d:	49                   	rex.WB
 91e:	44 5f                	rex.R pop %rdi
 920:	4c                   	rex.WR
 921:	41 55                	push   %r13
 923:	4e                   	rex.WRX
 924:	43                   	rex.XB
 925:	48 5f                	rex.W pop %rdi
 927:	54                   	push   %rsp
 928:	4f                   	rex.WRXB
 929:	4b                   	rex.WXB
 92a:	45                   	rex.RB
 92b:	4e 00 53 47          	rex.WRX add %r10b,0x47(%rbx)
 92f:	58                   	pop    %rax
 930:	5f                   	pop    %rdi
 931:	45 52                	rex.RB push %r10
 933:	52                   	push   %rdx
 934:	4f 52                	rex.WRXB push %r10
 936:	5f                   	pop    %rdi
 937:	49                   	rex.WB
 938:	4e 56                	rex.WRX push %rsi
 93a:	41                   	rex.B
 93b:	4c                   	rex.WR
 93c:	49                   	rex.WB
 93d:	44 5f                	rex.R pop %rdi
 93f:	56                   	push   %rsi
 940:	45 52                	rex.RB push %r10
 942:	53                   	push   %rbx
 943:	49                   	rex.WB
 944:	4f                   	rex.WRXB
 945:	4e 00 67 5f          	rex.WRX add %r12b,0x5f(%rdi)
 949:	64 79 6e             	fs jns 9ba <__ImageBase+0x9ba>
 94c:	5f                   	pop    %rdi
 94d:	65 6e                	outsb  %gs:(%rsi),(%dx)
 94f:	74 72                	je     9c3 <__ImageBase+0x9c3>
 951:	79 5f                	jns    9b2 <__ImageBase+0x9b2>
 953:	74 61                	je     9b6 <__ImageBase+0x9b6>
 955:	62                   	(bad)  
 956:	6c                   	insb   (%dx),%es:(%rdi)
 957:	65 00 53 47          	add    %dl,%gs:0x47(%rbx)
 95b:	58                   	pop    %rax
 95c:	5f                   	pop    %rdi
 95d:	45 52                	rex.RB push %r10
 95f:	52                   	push   %rdx
 960:	4f 52                	rex.WRXB push %r10
 962:	5f                   	pop    %rdi
 963:	49                   	rex.WB
 964:	4e 56                	rex.WRX push %rsi
 966:	41                   	rex.B
 967:	4c                   	rex.WR
 968:	49                   	rex.WB
 969:	44 5f                	rex.R pop %rdi
 96b:	46 55                	rex.RX push %rbp
 96d:	4e                   	rex.WRX
 96e:	43 54                	rex.XB push %r12
 970:	49                   	rex.WB
 971:	4f                   	rex.WRXB
 972:	4e 00 53 47          	rex.WRX add %r10b,0x47(%rbx)
 976:	58                   	pop    %rax
 977:	5f                   	pop    %rdi
 978:	45 52                	rex.RB push %r10
 97a:	52                   	push   %rdx
 97b:	4f 52                	rex.WRXB push %r10
 97d:	5f                   	pop    %rdi
 97e:	50                   	push   %rax
 97f:	43                   	rex.XB
 980:	4c 5f                	rex.WR pop %rdi
 982:	4d                   	rex.WRB
 983:	41                   	rex.B
 984:	43 5f                	rex.XB pop %r15
 986:	4d                   	rex.WRB
 987:	49 53                	rex.WB push %r11
 989:	4d                   	rex.WRB
 98a:	41 54                	push   %r12
 98c:	43                   	rex.XB
 98d:	48 00 53 47          	rex.W add %dl,0x47(%rbx)
 991:	58                   	pop    %rax
 992:	5f                   	pop    %rdi
 993:	45 52                	rex.RB push %r10
 995:	52                   	push   %rdx
 996:	4f 52                	rex.WRXB push %r10
 998:	5f                   	pop    %rdi
 999:	46                   	rex.RX
 99a:	45                   	rex.RB
 99b:	41 54                	push   %r12
 99d:	55                   	push   %rbp
 99e:	52                   	push   %rdx
 99f:	45 5f                	rex.RB pop %r15
 9a1:	4e                   	rex.WRX
 9a2:	4f 54                	rex.WRXB push %r12
 9a4:	5f                   	pop    %rdi
 9a5:	53                   	push   %rbx
 9a6:	55                   	push   %rbp
 9a7:	50                   	push   %rax
 9a8:	50                   	push   %rax
 9a9:	4f 52                	rex.WRXB push %r10
 9ab:	54                   	push   %rsp
 9ac:	45                   	rex.RB
 9ad:	44 00 53 47          	add    %r10b,0x47(%rbx)
 9b1:	58                   	pop    %rax
 9b2:	5f                   	pop    %rdi
 9b3:	45 52                	rex.RB push %r10
 9b5:	52                   	push   %rdx
 9b6:	4f 52                	rex.WRXB push %r10
 9b8:	5f                   	pop    %rdi
 9b9:	49                   	rex.WB
 9ba:	4e 56                	rex.WRX push %rsi
 9bc:	41                   	rex.B
 9bd:	4c                   	rex.WR
 9be:	49                   	rex.WB
 9bf:	44 5f                	rex.R pop %rdi
 9c1:	4d                   	rex.WRB
 9c2:	49 53                	rex.WB push %r11
 9c4:	43 00 53 47          	rex.XB add %dl,0x47(%r11)
 9c8:	58                   	pop    %rax
 9c9:	5f                   	pop    %rdi
 9ca:	45 52                	rex.RB push %r10
 9cc:	52                   	push   %rdx
 9cd:	4f 52                	rex.WRXB push %r10
 9cf:	5f                   	pop    %rdi
 9d0:	4b                   	rex.WXB
 9d1:	44                   	rex.R
 9d2:	46 5f                	rex.RX pop %rdi
 9d4:	4d                   	rex.WRB
 9d5:	49 53                	rex.WB push %r11
 9d7:	4d                   	rex.WRB
 9d8:	41 54                	push   %r12
 9da:	43                   	rex.XB
 9db:	48 00 53 47          	rex.W add %dl,0x47(%rbx)
 9df:	58                   	pop    %rax
 9e0:	5f                   	pop    %rdi
 9e1:	45 52                	rex.RB push %r10
 9e3:	52                   	push   %rdx
 9e4:	4f 52                	rex.WRXB push %r10
 9e6:	5f                   	pop    %rdi
 9e7:	54                   	push   %rsp
 9e8:	4c 53                	rex.WR push %rbx
 9ea:	5f                   	pop    %rdi
 9eb:	58                   	pop    %rax
 9ec:	35 30 39 5f 49       	xor    $0x495f3930,%eax
 9f1:	4e 56                	rex.WRX push %rsi
 9f3:	41                   	rex.B
 9f4:	4c                   	rex.WR
 9f5:	49                   	rex.WB
 9f6:	44 5f                	rex.R pop %rdi
 9f8:	45 58                	rex.RB pop %r8
 9fa:	54                   	push   %rsp
 9fb:	45                   	rex.RB
 9fc:	4e 53                	rex.WRX push %rbx
 9fe:	49                   	rex.WB
 9ff:	4f                   	rex.WRXB
 a00:	4e 00 53 47          	rex.WRX add %r10b,0x47(%rbx)
 a04:	58                   	pop    %rax
 a05:	5f                   	pop    %rdi
 a06:	45 52                	rex.RB push %r10
 a08:	52                   	push   %rdx
 a09:	4f 52                	rex.WRXB push %r10
 a0b:	5f                   	pop    %rdi
 a0c:	4f                   	rex.WRXB
 a0d:	43                   	rex.XB
 a0e:	41                   	rex.B
 a0f:	4c                   	rex.WR
 a10:	4c 5f                	rex.WR pop %rdi
 a12:	4e                   	rex.WRX
 a13:	4f 54                	rex.WRXB push %r12
 a15:	5f                   	pop    %rdi
 a16:	41                   	rex.B
 a17:	4c                   	rex.WR
 a18:	4c                   	rex.WR
 a19:	4f 57                	rex.WRXB push %r15
 a1b:	45                   	rex.RB
 a1c:	44 00 53 47          	add    %r10b,0x47(%rbx)
 a20:	58                   	pop    %rax
 a21:	5f                   	pop    %rdi
 a22:	45 52                	rex.RB push %r10
 a24:	52                   	push   %rdx
 a25:	4f 52                	rex.WRXB push %r10
 a27:	5f                   	pop    %rdi
 a28:	49                   	rex.WB
 a29:	4e 56                	rex.WRX push %rsi
 a2b:	41                   	rex.B
 a2c:	4c                   	rex.WR
 a2d:	49                   	rex.WB
 a2e:	44 5f                	rex.R pop %rdi
 a30:	4b                   	rex.WXB
 a31:	45 59                	rex.RB pop %r9
 a33:	4e                   	rex.WRX
 a34:	41                   	rex.B
 a35:	4d                   	rex.WRB
 a36:	45 00 53 47          	add    %r10b,0x47(%r11)
 a3a:	58                   	pop    %rax
 a3b:	5f                   	pop    %rdi
 a3c:	45 52                	rex.RB push %r10
 a3e:	52                   	push   %rdx
 a3f:	4f 52                	rex.WRXB push %r10
 a41:	5f                   	pop    %rdi
 a42:	4e                   	rex.WRX
 a43:	4f 5f                	rex.WRXB pop %r15
 a45:	44                   	rex.R
 a46:	45 56                	rex.RB push %r14
 a48:	49                   	rex.WB
 a49:	43                   	rex.XB
 a4a:	45 00 53 47          	add    %r10b,0x47(%r11)
 a4e:	58                   	pop    %rax
 a4f:	5f                   	pop    %rdi
 a50:	45 52                	rex.RB push %r10
 a52:	52                   	push   %rdx
 a53:	4f 52                	rex.WRXB push %r10
 a55:	5f                   	pop    %rdi
 a56:	46                   	rex.RX
 a57:	49                   	rex.WB
 a58:	4c                   	rex.WR
 a59:	45 5f                	rex.RB pop %r15
 a5b:	4e                   	rex.WRX
 a5c:	41                   	rex.B
 a5d:	4d                   	rex.WRB
 a5e:	45 5f                	rex.RB pop %r15
 a60:	4d                   	rex.WRB
 a61:	49 53                	rex.WB push %r11
 a63:	4d                   	rex.WRB
 a64:	41 54                	push   %r12
 a66:	43                   	rex.XB
 a67:	48 00 53 47          	rex.W add %dl,0x47(%rbx)
 a6b:	58                   	pop    %rax
 a6c:	5f                   	pop    %rdi
 a6d:	45 52                	rex.RB push %r10
 a6f:	52                   	push   %rdx
 a70:	4f 52                	rex.WRXB push %r10
 a72:	5f                   	pop    %rdi
 a73:	4d                   	rex.WRB
 a74:	43 5f                	rex.XB pop %r15
 a76:	55                   	push   %rbp
 a77:	53                   	push   %rbx
 a78:	45                   	rex.RB
 a79:	44 5f                	rex.R pop %rdi
 a7b:	55                   	push   %rbp
 a7c:	50                   	push   %rax
 a7d:	00 67 5f             	add    %ah,0x5f(%rdi)
 a80:	65 63 61 6c          	movsxd %gs:0x6c(%rcx),%esp
 a84:	6c                   	insb   (%dx),%es:(%rdi)
 a85:	5f                   	pop    %rdi
 a86:	74 61                	je     ae9 <__ImageBase+0xae9>
 a88:	62                   	(bad)  
 a89:	6c                   	insb   (%dx),%es:(%rdi)
 a8a:	65 00 5f 74          	add    %bl,%gs:0x74(%rdi)
 a8e:	6d                   	insl   (%dx),%es:(%rdi)
 a8f:	70 5f                	jo     af0 <__ImageBase+0xaf0>
 a91:	6d                   	insl   (%dx),%es:(%rdi)
 a92:	61                   	(bad)  
 a93:	78 5f                	js     af4 <__ImageBase+0xaf4>
 a95:	6c                   	insb   (%dx),%es:(%rdi)
 a96:	65 6e                	outsb  %gs:(%rsi),(%dx)
 a98:	00 53 47             	add    %dl,0x47(%rbx)
 a9b:	58                   	pop    %rax
 a9c:	5f                   	pop    %rdi
 a9d:	45 52                	rex.RB push %r10
 a9f:	52                   	push   %rdx
 aa0:	4f 52                	rex.WRXB push %r10
 aa2:	5f                   	pop    %rdi
 aa3:	4d                   	rex.WRB
 aa4:	41                   	rex.B
 aa5:	43 5f                	rex.XB pop %r15
 aa7:	4d                   	rex.WRB
 aa8:	49 53                	rex.WB push %r11
 aaa:	4d                   	rex.WRB
 aab:	41 54                	push   %r12
 aad:	43                   	rex.XB
 aae:	48 00 53 47          	rex.W add %dl,0x47(%rbx)
 ab2:	58                   	pop    %rax
 ab3:	5f                   	pop    %rdi
 ab4:	45 52                	rex.RB push %r10
 ab6:	52                   	push   %rdx
 ab7:	4f 52                	rex.WRXB push %r10
 ab9:	5f                   	pop    %rdi
 aba:	4e                   	rex.WRX
 abb:	45 54                	rex.RB push %r12
 abd:	57                   	push   %rdi
 abe:	4f 52                	rex.WRXB push %r10
 ac0:	4b 5f                	rex.WXB pop %r15
 ac2:	46                   	rex.RX
 ac3:	41                   	rex.B
 ac4:	49                   	rex.WB
 ac5:	4c 55                	rex.WR push %rbp
 ac7:	52                   	push   %rdx
 ac8:	45 00 53 47          	add    %r10b,0x47(%r11)
 acc:	58                   	pop    %rax
 acd:	5f                   	pop    %rdi
 ace:	45 52                	rex.RB push %r10
 ad0:	52                   	push   %rdx
 ad1:	4f 52                	rex.WRXB push %r10
 ad3:	5f                   	pop    %rdi
 ad4:	4e                   	rex.WRX
 ad5:	44                   	rex.R
 ad6:	45                   	rex.RB
 ad7:	42 55                	rex.X push %rbp
 ad9:	47 5f                	rex.RXB pop %r15
 adb:	45                   	rex.RB
 adc:	4e                   	rex.WRX
 add:	43                   	rex.XB
 ade:	4c                   	rex.WR
 adf:	41 56                	push   %r14
 ae1:	45 00 6d 65          	add    %r13b,0x65(%r13)
 ae5:	6d                   	insl   (%dx),%es:(%rdi)
 ae6:	73 65                	jae    b4d <__ImageBase+0xb4d>
 ae8:	74 00                	je     aea <__ImageBase+0xaea>
 aea:	53                   	push   %rbx
 aeb:	47 58                	rex.RXB pop %r8
 aed:	5f                   	pop    %rdi
 aee:	45 52                	rex.RB push %r10
 af0:	52                   	push   %rdx
 af1:	4f 52                	rex.WRXB push %r10
 af3:	5f                   	pop    %rdi
 af4:	53                   	push   %rbx
 af5:	54                   	push   %rsp
 af6:	41                   	rex.B
 af7:	43                   	rex.XB
 af8:	4b 5f                	rex.WXB pop %r15
 afa:	4f 56                	rex.WRXB push %r14
 afc:	45 52                	rex.RB push %r10
 afe:	52                   	push   %rdx
 aff:	55                   	push   %rbp
 b00:	4e 00 73 74          	rex.WRX add %r14b,0x74(%rbx)
 b04:	61                   	(bad)  
 b05:	74 75                	je     b7c <__ImageBase+0xb7c>
 b07:	73 00                	jae    b09 <__ImageBase+0xb09>
 b09:	73 67                	jae    b72 <__ImageBase+0xb72>
 b0b:	78 5f                	js     b6c <__ImageBase+0xb6c>
 b0d:	6f                   	outsl  %ds:(%rsi),(%dx)
 b0e:	63 61 6c             	movsxd 0x6c(%rcx),%esp
 b11:	6c                   	insb   (%dx),%es:(%rdi)
 b12:	6f                   	outsl  %ds:(%rsi),(%dx)
 b13:	63 00                	movsxd (%rax),%eax
 b15:	53                   	push   %rbx
 b16:	47 58                	rex.RXB pop %r8
 b18:	5f                   	pop    %rdi
 b19:	45 52                	rex.RB push %r10
 b1b:	52                   	push   %rdx
 b1c:	4f 52                	rex.WRXB push %r10
 b1e:	5f                   	pop    %rdi
 b1f:	49                   	rex.WB
 b20:	4e 56                	rex.WRX push %rsi
 b22:	41                   	rex.B
 b23:	4c                   	rex.WR
 b24:	49                   	rex.WB
 b25:	44 5f                	rex.R pop %rdi
 b27:	41 54                	push   %r12
 b29:	54                   	push   %rsp
 b2a:	5f                   	pop    %rdi
 b2b:	4b                   	rex.WXB
 b2c:	45 59                	rex.RB pop %r9
 b2e:	5f                   	pop    %rdi
 b2f:	43                   	rex.XB
 b30:	45 52                	rex.RB push %r10
 b32:	54                   	push   %rsp
 b33:	5f                   	pop    %rdi
 b34:	44                   	rex.R
 b35:	41 54                	push   %r12
 b37:	41 00 6f 63          	add    %bpl,0x63(%r15)
 b3b:	61                   	(bad)  
 b3c:	6c                   	insb   (%dx),%es:(%rdi)
 b3d:	6c                   	insb   (%dx),%es:(%rdi)
 b3e:	5f                   	pop    %rdi
 b3f:	70 72                	jo     bb3 <__ImageBase+0xbb3>
 b41:	69 6e 74 00 53 47 58 	imul   $0x58475300,0x74(%rsi),%ebp
 b48:	5f                   	pop    %rdi
 b49:	45 52                	rex.RB push %r10
 b4b:	52                   	push   %rdx
 b4c:	4f 52                	rex.WRXB push %r10
 b4e:	5f                   	pop    %rdi
 b4f:	55                   	push   %rbp
 b50:	4e 53                	rex.WRX push %rbx
 b52:	55                   	push   %rbp
 b53:	50                   	push   %rax
 b54:	50                   	push   %rax
 b55:	4f 52                	rex.WRXB push %r10
 b57:	54                   	push   %rsp
 b58:	45                   	rex.RB
 b59:	44 5f                	rex.R pop %rdi
 b5b:	41 54                	push   %r12
 b5d:	54                   	push   %rsp
 b5e:	5f                   	pop    %rdi
 b5f:	4b                   	rex.WXB
 b60:	45 59                	rex.RB pop %r9
 b62:	5f                   	pop    %rdi
 b63:	49                   	rex.WB
 b64:	44 00 6e 72          	add    %r13b,0x72(%rsi)
 b68:	5f                   	pop    %rdi
 b69:	6f                   	outsl  %ds:(%rsi),(%dx)
 b6a:	63 61 6c             	movsxd 0x6c(%rcx),%esp
 b6d:	6c                   	insb   (%dx),%es:(%rdi)
 b6e:	00 53 47             	add    %dl,0x47(%rbx)
 b71:	58                   	pop    %rax
 b72:	5f                   	pop    %rdi
 b73:	45 52                	rex.RB push %r10
 b75:	52                   	push   %rdx
 b76:	4f 52                	rex.WRXB push %r10
 b78:	5f                   	pop    %rdi
 b79:	41 54                	push   %r12
 b7b:	54                   	push   %rsp
 b7c:	5f                   	pop    %rdi
 b7d:	4b                   	rex.WXB
 b7e:	45 59                	rex.RB pop %r9
 b80:	5f                   	pop    %rdi
 b81:	43                   	rex.XB
 b82:	45 52                	rex.RB push %r10
 b84:	54                   	push   %rsp
 b85:	49                   	rex.WB
 b86:	46                   	rex.RX
 b87:	49                   	rex.WB
 b88:	43                   	rex.XB
 b89:	41 54                	push   %r12
 b8b:	49                   	rex.WB
 b8c:	4f                   	rex.WRXB
 b8d:	4e 5f                	rex.WRX pop %rdi
 b8f:	46                   	rex.RX
 b90:	41                   	rex.B
 b91:	49                   	rex.WB
 b92:	4c 55                	rex.WR push %rbp
 b94:	52                   	push   %rdx
 b95:	45 00 53 47          	add    %r10b,0x47(%r11)
 b99:	58                   	pop    %rax
 b9a:	5f                   	pop    %rdi
 b9b:	45 52                	rex.RB push %r10
 b9d:	52                   	push   %rdx
 b9e:	4f 52                	rex.WRXB push %r10
 ba0:	5f                   	pop    %rdi
 ba1:	55                   	push   %rbp
 ba2:	50                   	push   %rax
 ba3:	44                   	rex.R
 ba4:	41 54                	push   %r12
 ba6:	45 5f                	rex.RB pop %r15
 ba8:	4e                   	rex.WRX
 ba9:	45                   	rex.RB
 baa:	45                   	rex.RB
 bab:	44                   	rex.R
 bac:	45                   	rex.RB
 bad:	44 00 53 47          	add    %r10b,0x47(%rbx)
 bb1:	58                   	pop    %rax
 bb2:	5f                   	pop    %rdi
 bb3:	45 52                	rex.RB push %r10
 bb5:	52                   	push   %rdx
 bb6:	4f 52                	rex.WRXB push %r10
 bb8:	5f                   	pop    %rdi
 bb9:	4d                   	rex.WRB
 bba:	45                   	rex.RB
 bbb:	4d                   	rex.WRB
 bbc:	4f 52                	rex.WRXB push %r10
 bbe:	59                   	pop    %rcx
 bbf:	5f                   	pop    %rdi
 bc0:	4d                   	rex.WRB
 bc1:	41 50                	push   %r8
 bc3:	5f                   	pop    %rdi
 bc4:	43                   	rex.XB
 bc5:	4f                   	rex.WRXB
 bc6:	4e                   	rex.WRX
 bc7:	46                   	rex.RX
 bc8:	4c                   	rex.WR
 bc9:	49                   	rex.WB
 bca:	43 54                	rex.XB push %r12
 bcc:	00 6d 73             	add    %ch,0x73(%rbp)
 bcf:	5f                   	pop    %rdi
 bd0:	6f                   	outsl  %ds:(%rsi),(%dx)
 bd1:	75 74                	jne    c47 <__ImageBase+0xc47>
 bd3:	5f                   	pop    %rdi
 bd4:	62                   	(bad)  
 bd5:	75 66                	jne    c3d <__ImageBase+0xc3d>
 bd7:	00 53 47             	add    %dl,0x47(%rbx)
 bda:	58                   	pop    %rax
 bdb:	5f                   	pop    %rdi
 bdc:	45 52                	rex.RB push %r10
 bde:	52                   	push   %rdx
 bdf:	4f 52                	rex.WRXB push %r10
 be1:	5f                   	pop    %rdi
 be2:	4f 55                	rex.WRXB push %r13
 be4:	54                   	push   %rsp
 be5:	5f                   	pop    %rdi
 be6:	4f                   	rex.WRXB
 be7:	46 5f                	rex.RX pop %rdi
 be9:	4d                   	rex.WRB
 bea:	45                   	rex.RB
 beb:	4d                   	rex.WRB
 bec:	4f 52                	rex.WRXB push %r10
 bee:	59                   	pop    %rcx
 bef:	00 6d 73             	add    %ch,0x73(%rbp)
 bf2:	5f                   	pop    %rdi
 bf3:	6d                   	insl   (%dx),%es:(%rdi)
 bf4:	61                   	(bad)  
 bf5:	78 5f                	js     c56 <__ImageBase+0xc56>
 bf7:	6c                   	insb   (%dx),%es:(%rdi)
 bf8:	65 6e                	outsb  %gs:(%rsi),(%dx)
	...

Disassembly of section .debug_line_str:

0000000000000000 <.debug_line_str>:
   0:	65 6e                	outsb  %gs:(%rsi),(%dx)
   2:	63 6c 2e 63          	movsxd 0x63(%rsi,%rbp,1),%ebp
   6:	00 2f                	add    %ch,(%rdi)
   8:	68 6f 6d 65 2f       	push   $0x2f656d6f
   d:	6a 61                	push   $0x61
   f:	6e                   	outsb  %ds:(%rsi),(%dx)
  10:	2f                   	(bad)  
  11:	70 6f                	jo     82 <__ImageBase+0x82>
  13:	69 6e 74 65 72 73 73 	imul   $0x73737265,0x74(%rsi),%ebp
  1a:	2f                   	(bad)  
  1b:	45 6e                	rex.RB outsb %ds:(%rsi),(%dx)
  1d:	63 6c 61 76          	movsxd 0x76(%rcx,%riz,2),%ebp
  21:	65 00 2f             	add    %ch,%gs:(%rdi)
  24:	6f                   	outsl  %ds:(%rsi),(%dx)
  25:	70 74                	jo     9b <__ImageBase+0x9b>
  27:	2f                   	(bad)  
  28:	69 6e 74 65 6c 2f 73 	imul   $0x732f6c65,0x74(%rsi),%ebp
  2f:	67 78 73             	addr32 js a5 <__ImageBase+0xa5>
  32:	64 6b 2f 69          	imul   $0x69,%fs:(%rdi),%ebp
  36:	6e                   	outsb  %ds:(%rsi),(%dx)
  37:	63 6c 75 64          	movsxd 0x64(%rbp,%rsi,2),%ebp
  3b:	65 2f                	gs (bad) 
  3d:	74 6c                	je     ab <__ImageBase+0xab>
  3f:	69 62 63 2f 73 79 73 	imul   $0x7379732f,0x63(%rdx),%esp
  46:	00 2f                	add    %ch,(%rdi)
  48:	6f                   	outsl  %ds:(%rsi),(%dx)
  49:	70 74                	jo     bf <__ImageBase+0xbf>
  4b:	2f                   	(bad)  
  4c:	69 6e 74 65 6c 2f 73 	imul   $0x732f6c65,0x74(%rsi),%ebp
  53:	67 78 73             	addr32 js c9 <__ImageBase+0xc9>
  56:	64 6b 2f 69          	imul   $0x69,%fs:(%rdi),%ebp
  5a:	6e                   	outsb  %ds:(%rsi),(%dx)
  5b:	63 6c 75 64          	movsxd 0x64(%rbp,%rsi,2),%ebp
  5f:	65 2f                	gs (bad) 
  61:	74 6c                	je     cf <__ImageBase+0xcf>
  63:	69 62 63 00 2e 2e 00 	imul   $0x2e2e00,0x63(%rdx),%esp
  6a:	2f                   	(bad)  
  6b:	6f                   	outsl  %ds:(%rsi),(%dx)
  6c:	70 74                	jo     e2 <__ImageBase+0xe2>
  6e:	2f                   	(bad)  
  6f:	69 6e 74 65 6c 2f 73 	imul   $0x732f6c65,0x74(%rsi),%ebp
  76:	67 78 73             	addr32 js ec <__ImageBase+0xec>
  79:	64 6b 2f 69          	imul   $0x69,%fs:(%rdi),%ebp
  7d:	6e                   	outsb  %ds:(%rsi),(%dx)
  7e:	63 6c 75 64          	movsxd 0x64(%rbp,%rsi,2),%ebp
  82:	65 00 5f 74          	add    %bl,%gs:0x74(%rdi)
  86:	79 70                	jns    f8 <__ImageBase+0xf8>
  88:	65 73 2e             	gs jae b9 <__ImageBase+0xb9>
  8b:	68 00 73 74 64       	push   $0x64747300
  90:	69 6e 74 2e 68 00 73 	imul   $0x7300682e,0x74(%rsi),%ebp
  97:	74 72                	je     10b <__ImageBase+0x10b>
  99:	69 6e 67 2e 68 00 6d 	imul   $0x6d00682e,0x67(%rsi),%ebp
  a0:	79 73                	jns    115 <__ImageBase+0x115>
  a2:	74 72                	je     116 <__ImageBase+0x116>
  a4:	75 63                	jne    109 <__ImageBase+0x109>
  a6:	74 2e                	je     d6 <__ImageBase+0xd6>
  a8:	68 00 73 67 78       	push   $0x78677300
  ad:	5f                   	pop    %rdi
  ae:	74 72                	je     122 <__ImageBase+0x122>
  b0:	74 73                	je     125 <__ImageBase+0x125>
  b2:	2e 68 00 61 73 6d    	cs push $0x6d736100
  b8:	2e 53                	cs push %rbx
  ba:	00 65 6e             	add    %ah,0x6e(%rbp)
  bd:	63 6c 5f 74          	movsxd 0x74(%rdi,%rbx,2),%ebp
  c1:	2e 63 00             	cs movsxd (%rax),%eax
  c4:	77 63                	ja     129 <__ImageBase+0x129>
  c6:	68 61 72 2e 68       	push   $0x682e7261
  cb:	00 73 67             	add    %dh,0x67(%rbx)
  ce:	78 5f                	js     12f <__ImageBase+0x12f>
  d0:	65 72 72             	gs jb  145 <__ImageBase+0x145>
  d3:	6f                   	outsl  %ds:(%rsi),(%dx)
  d4:	72 2e                	jb     104 <__ImageBase+0x104>
  d6:	68 00 65 6e 63       	push   $0x636e6500
  db:	6c                   	insb   (%dx),%es:(%rdi)
  dc:	5f                   	pop    %rdi
  dd:	74 2e                	je     10d <__ImageBase+0x10d>
  df:	68 00 73 67 78       	push   $0x78677300
  e4:	5f                   	pop    %rdi
  e5:	65 64 67 65 72 38    	gs fs addr32 gs jb 123 <__ImageBase+0x123>
  eb:	72 2e                	jb     11b <__ImageBase+0x11b>
  ed:	68 00 73 74 64       	push   $0x64747300
  f2:	6c                   	insb   (%dx),%es:(%rdi)
  f3:	69 62 2e 68 00 6d 62 	imul   $0x626d0068,0x2e(%rdx),%esp
  fa:	75 73                	jne    16f <__ImageBase+0x16f>
  fc:	61                   	(bad)  
  fd:	66 65 63 72 74       	movsxd %gs:0x74(%rdx),%si
 102:	2e 68 00 73 67 78    	cs push $0x78677300
 108:	5f                   	pop    %rdi
 109:	6c                   	insb   (%dx),%es:(%rdi)
 10a:	66 65 6e             	data16 outsb %gs:(%rsi),(%dx)
 10d:	63 65 2e             	movsxd 0x2e(%rbp),%esp
 110:	68                   	.byte 0x68
	...

Disassembly of section .debug_loclists:

0000000000000000 <.debug_loclists>:
   0:	87 00                	xchg   %eax,(%rax)
   2:	00 00                	add    %al,(%rax)
   4:	05 00 08 00 00       	add    $0x800,%eax
   9:	00 00                	add    %al,(%rax)
   b:	00 00                	add    %al,(%rax)
   d:	00 00                	add    %al,(%rax)
   f:	00 04 af             	add    %al,(%rdi,%rbp,4)
  12:	01 d6                	add    %edx,%esi
  14:	01 01                	add    %eax,(%rcx)
  16:	55                   	push   %rbp
  17:	04 d6                	add    $0xd6,%al
  19:	01 e2                	add    %esp,%edx
  1b:	01 04 a3             	add    %eax,(%rbx,%riz,4)
  1e:	01 55 9f             	add    %edx,-0x61(%rbp)
  21:	00 00                	add    %al,(%rax)
  23:	00 00                	add    %al,(%rax)
  25:	00 00                	add    %al,(%rax)
  27:	00 04 af             	add    %al,(%rdi,%rbp,4)
  2a:	01 ca                	add    %ecx,%edx
  2c:	01 01                	add    %eax,(%rcx)
  2e:	54                   	push   %rsp
  2f:	04 ca                	add    $0xca,%al
  31:	01 da                	add    %ebx,%edx
  33:	01 01                	add    %eax,(%rcx)
  35:	52                   	push   %rdx
  36:	04 da                	add    $0xda,%al
  38:	01 e2                	add    %esp,%edx
  3a:	01 04 a3             	add    %eax,(%rbx,%riz,4)
  3d:	01 54 9f 00          	add    %edx,0x0(%rdi,%rbx,4)
  41:	00 00                	add    %al,(%rax)
  43:	00 00                	add    %al,(%rax)
  45:	00 00                	add    %al,(%rax)
  47:	04 af                	add    $0xaf,%al
  49:	01 ba 01 01 51 04    	add    %edi,0x4510101(%rdx)
  4f:	ba 01 e1 01 01       	mov    $0x101e101,%edx
  54:	53                   	push   %rbx
  55:	04 e1                	add    $0xe1,%al
  57:	01 e2                	add    %esp,%edx
  59:	01 04 a3             	add    %eax,(%rbx,%riz,4)
  5c:	01 51 9f             	add    %edx,-0x61(%rcx)
  5f:	00 00                	add    %al,(%rax)
  61:	00 00                	add    %al,(%rax)
  63:	00 04 5c             	add    %al,(%rsp,%rbx,2)
  66:	6d                   	insl   (%dx),%es:(%rdi)
  67:	01 55 04             	add    %edx,0x4(%rbp)
  6a:	6d                   	insl   (%dx),%es:(%rdi)
  6b:	79 04                	jns    71 <__ImageBase+0x71>
  6d:	a3 01 55 9f 00 00 00 	movabs %eax,0x9f5501
  74:	00 00 
  76:	00 00                	add    %al,(%rax)
  78:	04 00                	add    $0x0,%al
  7a:	11 01                	adc    %eax,(%rcx)
  7c:	55                   	push   %rbp
  7d:	04 11                	add    $0x11,%al
  7f:	5b                   	pop    %rbx
  80:	01 53 04             	add    %edx,0x4(%rbx)
  83:	5b                   	pop    %rbx
  84:	5c                   	pop    %rsp
  85:	04 a3                	add    $0xa3,%al
  87:	01 55 9f             	add    %edx,-0x61(%rbp)
  8a:	00 af 02 00 00 05    	add    %ch,0x5000002(%rdi)
  90:	00 08                	add    %cl,(%rax)
	...
  9a:	00 00                	add    %al,(%rax)
  9c:	00 04 ba             	add    %al,(%rdx,%rdi,4)
  9f:	05 dc 05 01 55       	add    $0x550105dc,%eax
  a4:	04 dc                	add    $0xdc,%al
  a6:	05 c5 07 01 53       	add    $0x530107c5,%eax
  ab:	04 c5                	add    $0xc5,%al
  ad:	07                   	(bad)  
  ae:	cb                   	lret   
  af:	07                   	(bad)  
  b0:	04 a3                	add    $0xa3,%al
  b2:	01 55 9f             	add    %edx,-0x61(%rbp)
  b5:	00 00                	add    %al,(%rax)
  b7:	00 04 ba             	add    %al,(%rdx,%rdi,4)
  ba:	05 dc 05 01 54       	add    $0x540105dc,%eax
  bf:	00 01                	add    %al,(%rcx)
  c1:	00 00                	add    %al,(%rax)
  c3:	00 00                	add    %al,(%rax)
  c5:	01 04 be             	add    %eax,(%rsi,%rdi,4)
  c8:	05 b7 07 02 30       	add    $0x300207b7,%eax
  cd:	9f                   	lahf   
  ce:	04 b7                	add    $0xb7,%al
  d0:	07                   	(bad)  
  d1:	bb 07 01 50 04       	mov    $0x4500107,%ebx
  d6:	bb 07 c0 07 03       	mov    $0x307c007,%ebx
  db:	91                   	xchg   %eax,%ecx
  dc:	b4 7f                	mov    $0x7f,%ah
  de:	00 01                	add    %al,(%rcx)
  e0:	00 00                	add    %al,(%rax)
  e2:	01 01                	add    %eax,(%rcx)
  e4:	00 00                	add    %al,(%rax)
  e6:	01 04 e1             	add    %eax,(%rcx,%riz,8)
  e9:	05 ae 06 02 30       	add    $0x300206ae,%eax
  ee:	9f                   	lahf   
  ef:	04 bd                	add    $0xbd,%al
  f1:	06                   	(bad)  
  f2:	bd 06 02 30 9f       	mov    $0x9f300206,%ebp
  f7:	04 bd                	add    $0xbd,%al
  f9:	06                   	(bad)  
  fa:	c1 06 01             	roll   $0x1,(%rsi)
  fd:	50                   	push   %rax
  fe:	04 c1                	add    $0xc1,%al
 100:	06                   	(bad)  
 101:	c0 07 01             	rolb   $0x1,(%rdi)
 104:	56                   	push   %rsi
 105:	00 02                	add    %al,(%rdx)
	...
 10f:	01 04 e1             	add    %eax,(%rcx,%riz,8)
 112:	05 ff 05 02 40       	add    $0x400205ff,%eax
 117:	9f                   	lahf   
 118:	04 89                	add    $0x89,%al
 11a:	06                   	(bad)  
 11b:	90                   	nop
 11c:	06                   	(bad)  
 11d:	02 40 9f             	add    -0x61(%rax),%al
 120:	04 90                	add    $0x90,%al
 122:	06                   	(bad)  
 123:	9e                   	sahf   
 124:	06                   	(bad)  
 125:	01 55 04             	add    %edx,0x4(%rbp)
 128:	9e                   	sahf   
 129:	06                   	(bad)  
 12a:	ae                   	scas   %es:(%rdi),%al
 12b:	06                   	(bad)  
 12c:	03 7d 10             	add    0x10(%rbp),%edi
 12f:	9f                   	lahf   
 130:	04 bd                	add    $0xbd,%al
 132:	06                   	(bad)  
 133:	c6 06 03             	movb   $0x3,(%rsi)
 136:	7d 10                	jge    148 <__ImageBase+0x148>
 138:	9f                   	lahf   
 139:	00 00                	add    %al,(%rax)
 13b:	00 00                	add    %al,(%rax)
 13d:	00 00                	add    %al,(%rax)
 13f:	00 04 d1             	add    %al,(%rcx,%rdx,8)
 142:	03 ed                	add    %ebp,%ebp
 144:	03 01                	add    (%rcx),%eax
 146:	55                   	push   %rbp
 147:	04 ed                	add    $0xed,%al
 149:	03 b4 05 01 53 04 b4 	add    -0x4bfbacff(%rbp,%rax,1),%esi
 150:	05 ba 05 04 a3       	add    $0xa30405ba,%eax
 155:	01 55 9f             	add    %edx,-0x61(%rbp)
 158:	00 01                	add    %al,(%rcx)
 15a:	00 00                	add    %al,(%rax)
 15c:	00 00                	add    %al,(%rax)
 15e:	01 04 d5 03 a6 05 02 	add    %eax,0x205a603(,%rdx,8)
 165:	30 9f 04 a6 05 aa    	xor    %bl,-0x55fa59fc(%rdi)
 16b:	05 01 50 04 aa       	add    $0xaa045001,%eax
 170:	05 af 05 03 91       	add    $0x910305af,%eax
 175:	bc 7f 00 01 00       	mov    $0x1007f,%esp
 17a:	00 01                	add    %al,(%rcx)
 17c:	01 00                	add    %eax,(%rax)
 17e:	00 01                	add    %al,(%rcx)
 180:	04 f2                	add    $0xf2,%al
 182:	03 bf 04 02 30 9f    	add    -0x60cffdfc(%rdi),%edi
 188:	04 cb                	add    $0xcb,%al
 18a:	04 cb                	add    $0xcb,%al
 18c:	04 02                	add    $0x2,%al
 18e:	30 9f 04 cb 04 cf    	xor    %bl,-0x30fb34fc(%rdi)
 194:	04 01                	add    $0x1,%al
 196:	50                   	push   %rax
 197:	04 cf                	add    $0xcf,%al
 199:	04 af                	add    $0xaf,%al
 19b:	05 01 5c 00 02       	add    $0x2005c01,%eax
	...
 1a8:	01 04 f2             	add    %eax,(%rdx,%rsi,8)
 1ab:	03 90 04 02 38 9f    	add    -0x60c7fdfc(%rax),%edx
 1b1:	04 9a                	add    $0x9a,%al
 1b3:	04 a1                	add    $0xa1,%al
 1b5:	04 02                	add    $0x2,%al
 1b7:	38 9f 04 a1 04 af    	cmp    %bl,-0x50fb5efc(%rdi)
 1bd:	04 01                	add    $0x1,%al
 1bf:	55                   	push   %rbp
 1c0:	04 af                	add    $0xaf,%al
 1c2:	04 bf                	add    $0xbf,%al
 1c4:	04 03                	add    $0x3,%al
 1c6:	7d 08                	jge    1d0 <__ImageBase+0x1d0>
 1c8:	9f                   	lahf   
 1c9:	04 cb                	add    $0xcb,%al
 1cb:	04 d4                	add    $0xd4,%al
 1cd:	04 03                	add    $0x3,%al
 1cf:	7d 08                	jge    1d9 <__ImageBase+0x1d9>
 1d1:	9f                   	lahf   
	...
 1de:	00 00                	add    %al,(%rax)
 1e0:	00 04 00             	add    %al,(%rax,%rax,1)
 1e3:	13 01                	adc    (%rcx),%eax
 1e5:	55                   	push   %rbp
 1e6:	04 13                	add    $0x13,%al
 1e8:	1e                   	(bad)  
 1e9:	04 a3                	add    $0xa3,%al
 1eb:	01 55 9f             	add    %edx,-0x61(%rbp)
 1ee:	04 1e                	add    $0x1e,%al
 1f0:	2a 01                	sub    (%rcx),%al
 1f2:	55                   	push   %rbp
 1f3:	04 2a                	add    $0x2a,%al
 1f5:	75 01                	jne    1f8 <__ImageBase+0x1f8>
 1f7:	53                   	push   %rbx
 1f8:	04 75                	add    $0x75,%al
 1fa:	77 04                	ja     200 <__ImageBase+0x200>
 1fc:	a3 01 55 9f 04 77 99 	movabs %eax,0x1019977049f5501
 203:	01 01 
 205:	53                   	push   %rbx
 206:	04 99                	add    $0x99,%al
 208:	01 ef                	add    %ebp,%edi
 20a:	01 04 a3             	add    %eax,(%rbx,%riz,4)
 20d:	01 55 9f             	add    %edx,-0x61(%rbp)
 210:	00 01                	add    %al,(%rcx)
 212:	00 00                	add    %al,(%rax)
 214:	00 00                	add    %al,(%rax)
 216:	00 00                	add    %al,(%rax)
 218:	00 04 32             	add    %al,(%rdx,%rsi,1)
 21b:	75 01                	jne    21e <__ImageBase+0x21e>
 21d:	53                   	push   %rbx
 21e:	04 75                	add    $0x75,%al
 220:	77 04                	ja     226 <__ImageBase+0x226>
 222:	a3 01 55 9f 04 77 99 	movabs %eax,0x1019977049f5501
 229:	01 01 
 22b:	53                   	push   %rbx
 22c:	04 99                	add    $0x99,%al
 22e:	01 e1                	add    %esp,%ecx
 230:	01 04 a3             	add    %eax,(%rbx,%riz,4)
 233:	01 55 9f             	add    %edx,-0x61(%rbp)
 236:	00 01                	add    %al,(%rcx)
 238:	00 00                	add    %al,(%rax)
 23a:	00 04 57             	add    %al,(%rdi,%rdx,2)
 23d:	dc 01                	faddl  (%rcx)
 23f:	02 30                	add    (%rax),%dh
 241:	9f                   	lahf   
 242:	04 dc                	add    $0xdc,%al
 244:	01 e1                	add    %esp,%ecx
 246:	01 06                	add    %eax,(%rsi)
 248:	7c 00                	jl     24a <__ImageBase+0x24a>
 24a:	08 ff                	or     %bh,%bh
 24c:	1a 9f 00 00 00 04    	sbb    0x4000000(%rdi),%bl
 252:	5c                   	pop    %rsp
 253:	e1 01                	loope  256 <__ImageBase+0x256>
 255:	01 5d 00             	add    %ebx,0x0(%rbp)
 258:	00 00                	add    %al,(%rax)
 25a:	04 61                	add    $0x61,%al
 25c:	e1 01                	loope  25f <__ImageBase+0x25f>
 25e:	01 56 00             	add    %edx,0x0(%rsi)
 261:	01 00                	add    %eax,(%rax)
 263:	04 61                	add    $0x61,%al
 265:	e1 01                	loope  268 <__ImageBase+0x268>
 267:	01 56 00             	add    %edx,0x0(%rsi)
 26a:	02 00                	add    (%rax),%al
 26c:	00 00                	add    %al,(%rax)
 26e:	00 00                	add    %al,(%rax)
 270:	04 61                	add    $0x61,%al
 272:	99                   	cltd   
 273:	01 02                	add    %eax,(%rdx)
 275:	30 9f 04 99 01 a0    	xor    %bl,-0x5ffe66fc(%rdi)
 27b:	01 01                	add    %eax,(%rcx)
 27d:	50                   	push   %rax
 27e:	04 a0                	add    $0xa0,%al
 280:	01 e1                	add    %esp,%ecx
 282:	01 01                	add    %eax,(%rcx)
 284:	53                   	push   %rbx
 285:	00 00                	add    %al,(%rax)
 287:	00 00                	add    %al,(%rax)
 289:	00 00                	add    %al,(%rax)
 28b:	00 04 ef             	add    %al,(%rdi,%rbp,8)
 28e:	01 fd                	add    %edi,%ebp
 290:	01 01                	add    %eax,(%rcx)
 292:	55                   	push   %rbp
 293:	04 fd                	add    $0xfd,%al
 295:	01 82 02 04 a3 01    	add    %eax,0x1a30402(%rdx)
 29b:	55                   	push   %rbp
 29c:	9f                   	lahf   
 29d:	04 82                	add    $0x82,%al
 29f:	02 88 02 01 55 00    	add    0x550102(%rax),%cl
	...
 2ad:	04 88                	add    $0x88,%al
 2af:	02 a2 02 01 55 04    	add    0x4550102(%rdx),%ah
 2b5:	a2 02 e7 02 01 53 04 	movabs %al,0x2e704530102e702
 2bc:	e7 02 
 2be:	e8 02 04 a3 01       	call   1a306c5 <_end+0x1a056b5>
 2c3:	55                   	push   %rbp
 2c4:	9f                   	lahf   
 2c5:	04 e8                	add    $0xe8,%al
 2c7:	02 ee                	add    %dh,%ch
 2c9:	02 01                	add    (%rcx),%al
 2cb:	55                   	push   %rbp
 2cc:	00 00                	add    %al,(%rax)
 2ce:	00 04 ae             	add    %al,(%rsi,%rbp,4)
 2d1:	02 e2                	add    %dl,%ah
 2d3:	02 01                	add    (%rcx),%al
 2d5:	53                   	push   %rbx
 2d6:	00 01                	add    %al,(%rcx)
 2d8:	00 04 b1             	add    %al,(%rcx,%rsi,4)
 2db:	02 e2                	add    %dl,%ah
 2dd:	02 01                	add    (%rcx),%al
 2df:	53                   	push   %rbx
 2e0:	00 01                	add    %al,(%rcx)
 2e2:	00 04 d3             	add    %al,(%rbx,%rdx,8)
 2e5:	02 e2                	add    %dl,%ah
 2e7:	02 02                	add    (%rdx),%al
 2e9:	30 9f 00 00 00 00    	xor    %bl,0x0(%rdi)
 2ef:	00 00                	add    %al,(%rax)
 2f1:	00 00                	add    %al,(%rax)
 2f3:	00 04 ee             	add    %al,(%rsi,%rbp,8)
 2f6:	02 88 03 01 55 04    	add    0x4550103(%rax),%cl
 2fc:	88 03                	mov    %al,(%rbx)
 2fe:	ca 03 01             	lret   $0x103
 301:	53                   	push   %rbx
 302:	04 ca                	add    $0xca,%al
 304:	03 cb                	add    %ebx,%ecx
 306:	03 04 a3             	add    (%rbx,%riz,4),%eax
 309:	01 55 9f             	add    %edx,-0x61(%rbp)
 30c:	04 cb                	add    $0xcb,%al
 30e:	03 d1                	add    %ecx,%edx
 310:	03 01                	add    (%rcx),%eax
 312:	55                   	push   %rbp
 313:	00 00                	add    %al,(%rax)
 315:	00 04 94             	add    %al,(%rsp,%rdx,4)
 318:	03 c5                	add    %ebp,%eax
 31a:	03 01                	add    (%rcx),%eax
 31c:	53                   	push   %rbx
 31d:	00 01                	add    %al,(%rcx)
 31f:	00 04 97             	add    %al,(%rdi,%rdx,4)
 322:	03 c5                	add    %ebp,%eax
 324:	03 01                	add    (%rcx),%eax
 326:	53                   	push   %rbx
 327:	00 01                	add    %al,(%rcx)
 329:	00 04 b9             	add    %al,(%rcx,%rdi,4)
 32c:	03 c5                	add    %ebp,%eax
 32e:	03 02                	add    (%rdx),%eax
 330:	30 9f 00 02 00 04    	xor    %bl,0x4000200(%rdi)
 336:	b9 03 c2 03 02       	mov    $0x203c203,%ecx
 33b:	91                   	xchg   %eax,%ecx
 33c:	68                   	.byte 0x68
	...
