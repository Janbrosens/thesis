
Enclave/encl.so:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000318 <.interp>:
 318:	2f                   	(bad)  
 319:	6c                   	insb   (%dx),%es:(%rdi)
 31a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 321:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 326:	78 2d                	js     355 <__ImageBase+0x355>
 328:	78 38                	js     362 <__ImageBase+0x362>
 32a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 330:	6f                   	outsl  %ds:(%rsi),(%dx)
 331:	2e 32 00             	cs xor (%rax),%al

Disassembly of section .note.gnu.property:

0000000000000338 <.note.gnu.property>:
 338:	04 00                	add    $0x0,%al
 33a:	00 00                	add    %al,(%rax)
 33c:	20 00                	and    %al,(%rax)
 33e:	00 00                	add    %al,(%rax)
 340:	05 00 00 00 47       	add    $0x47000000,%eax
 345:	4e 55                	rex.WRX push %rbp
 347:	00 01                	add    %al,(%rcx)
 349:	00 01                	add    %al,(%rcx)
 34b:	c0 04 00 00          	rolb   $0x0,(%rax,%rax,1)
 34f:	00 3b                	add    %bh,(%rbx)
 351:	00 00                	add    %al,(%rax)
 353:	00 00                	add    %al,(%rax)
 355:	00 00                	add    %al,(%rax)
 357:	00 02                	add    %al,(%rdx)
 359:	00 01                	add    %al,(%rcx)
 35b:	c0 04 00 00          	rolb   $0x0,(%rax,%rax,1)
 35f:	00 0d 00 00 00 00    	add    %cl,0x0(%rip)        # 365 <__ImageBase+0x365>
 365:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000000368 <.note.gnu.build-id>:
 368:	04 00                	add    $0x0,%al
 36a:	00 00                	add    %al,(%rax)
 36c:	14 00                	adc    $0x0,%al
 36e:	00 00                	add    %al,(%rax)
 370:	03 00                	add    (%rax),%eax
 372:	00 00                	add    %al,(%rax)
 374:	47                   	rex.RXB
 375:	4e 55                	rex.WRX push %rbp
 377:	00 a5 95 d2 c9 79    	add    %ah,0x79c9d295(%rbp)
 37d:	bc b1 46 c3 d0       	mov    $0xd0c346b1,%esp
 382:	ed                   	in     (%dx),%eax
 383:	45 99                	rex.RB cltd 
 385:	d1 b6 f9 92 08 74    	shll   0x740892f9(%rsi)
 38b:	81                   	.byte 0x81

Disassembly of section .gnu.hash:

0000000000000390 <.gnu.hash>:
 390:	11 00                	adc    %eax,(%rax)
 392:	00 00                	add    %al,(%rax)
 394:	03 00                	add    (%rax),%eax
 396:	00 00                	add    %al,(%rax)
 398:	04 00                	add    $0x0,%al
 39a:	00 00                	add    %al,(%rax)
 39c:	08 00                	or     %al,(%rax)
 39e:	00 00                	add    %al,(%rax)
 3a0:	02 00                	add    (%rax),%al
 3a2:	12 00                	adc    (%rax),%al
 3a4:	08 12                	or     %dl,(%rdx)
 3a6:	12 02                	adc    (%rdx),%al
 3a8:	28 10                	sub    %dl,(%rax)
 3aa:	04 e1                	add    $0xe1,%al
 3ac:	00 80 63 59 42 41    	add    %al,0x41425963(%rax)
 3b2:	81 18 4b 01 40 0b    	sbbl   $0xb40014b,(%rax)
 3b8:	84 31                	test   %dh,(%rcx)
 3ba:	17                   	(bad)  
 3bb:	91                   	xchg   %eax,%ecx
 3bc:	40 00 16             	rex add %dl,(%rsi)
 3bf:	30 03                	xor    %al,(%rbx)
 3c1:	00 00                	add    %al,(%rax)
 3c3:	00 06                	add    %al,(%rsi)
 3c5:	00 00                	add    %al,(%rax)
 3c7:	00 0a                	add    %cl,(%rdx)
 3c9:	00 00                	add    %al,(%rax)
 3cb:	00 0c 00             	add    %cl,(%rax,%rax,1)
 3ce:	00 00                	add    %al,(%rax)
 3d0:	0f 00 00             	sldt   (%rax)
 3d3:	00 11                	add    %dl,(%rcx)
 3d5:	00 00                	add    %al,(%rax)
 3d7:	00 13                	add    %dl,(%rbx)
 3d9:	00 00                	add    %al,(%rax)
 3db:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 3e1 <__ImageBase+0x3e1>
 3e1:	00 00                	add    %al,(%rax)
 3e3:	00 19                	add    %bl,(%rcx)
 3e5:	00 00                	add    %al,(%rax)
 3e7:	00 1c 00             	add    %bl,(%rax,%rax,1)
 3ea:	00 00                	add    %al,(%rax)
 3ec:	00 00                	add    %al,(%rax)
 3ee:	00 00                	add    %al,(%rax)
 3f0:	1d 00 00 00 21       	sbb    $0x21000000,%eax
	...
 3fd:	00 00                	add    %al,(%rax)
 3ff:	00 24 00             	add    %ah,(%rax,%rax,1)
 402:	00 00                	add    %al,(%rax)
 404:	6e                   	outsb  %ds:(%rsi),(%dx)
 405:	4c 0d 59 de 72 46    	rex.WR or $0x4672de59,%rax
 40b:	9a                   	(bad)  
 40c:	8f 88 a1 be          	(bad)
 410:	58                   	pop    %rax
 411:	5d                   	pop    %rbp
 412:	85 1b                	test   %ebx,(%rbx)
 414:	9a                   	(bad)  
 415:	5c                   	pop    %rsp
 416:	a0 ac 70 de 02 f2 f1 	movabs 0xac94f1f202de70ac,%al
 41d:	94 ac 
 41f:	67 00 a9 9e da fd 8d 	add    %ch,-0x72022562(%ecx)
 426:	23 fd                	and    %ebp,%edi
 428:	e6 42                	out    %al,$0x42
 42a:	5b                   	pop    %rbx
 42b:	6d                   	insl   (%dx),%es:(%rdi)
 42c:	d8 71 58             	fdivs  0x58(%rcx)
 42f:	1c 75                	sbb    $0x75,%al
 431:	36 20 04 ba          	ss and %al,(%rdx,%rdi,4)
 435:	e3 92                	jrcxz  3c9 <__ImageBase+0x3c9>
 437:	7c 97                	jl     3d0 <__ImageBase+0x3d0>
 439:	81 42 a8 7c b0 3e 88 	addl   $0x883eb07c,-0x58(%rdx)
 440:	23 71 91             	and    -0x6f(%rcx),%esi
 443:	45 d0 0c 74          	rex.RB rorb (%r12,%rsi,2)
 447:	e7 b7                	out    %eax,$0xb7
 449:	39 0d 80 f4 7c 90    	cmp    %ecx,-0x6f830b80(%rip)        # ffffffff907cf8cf <_end+0xffffffff907a48bf>
 44f:	5a                   	pop    %rdx
 450:	b8 a1 15 31 42       	mov    $0x423115a1,%eax
 455:	45 d5                	rex.RB (bad) 
 457:	ec                   	in     (%dx),%al
 458:	01 23                	add    %esp,(%rbx)
 45a:	f9                   	stc    
 45b:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
 45c:	9a                   	(bad)  
 45d:	28 c1                	sub    %al,%cl
 45f:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
 460:	90                   	nop
 461:	c6                   	(bad)  
 462:	fa                   	cli    
 463:	fa                   	cli    
 464:	6f                   	outsl  %ds:(%rsi),(%dx)
 465:	bb 9e 0c 39 54       	mov    $0x54390c9e,%ebx
 46a:	bc 04 5e f8 8c       	mov    $0x8cf85e04,%esp
 46f:	8d 10                	lea    (%rax),%edx
 471:	b4 59                	mov    $0x59,%ah
 473:	31 a0 a6 66 1a dd    	xor    %esp,-0x22e5995a(%rax)
 479:	df 50 a9             	fists  -0x57(%rax)
 47c:	52                   	push   %rdx
 47d:	3e e3 cb             	jrcxz,pt 44b <__ImageBase+0x44b>
 480:	2c 6c                	sub    $0x6c,%al
 482:	67 40 c9             	addr32 rex leave 
 485:	91                   	xchg   %eax,%ecx
 486:	b6 fb                	mov    $0xfb,%dh
 488:	c7                   	(bad)  
 489:	d2                   	.byte 0xd2
 48a:	91                   	xchg   %eax,%ecx
 48b:	c1                   	.byte 0xc1

Disassembly of section .dynsym:

0000000000000490 <.dynsym>:
	...
 4a8:	db 00                	fildl  (%rax)
 4aa:	00 00                	add    %al,(%rax)
 4ac:	20 00                	and    %al,(%rax)
	...
 4be:	00 00                	add    %al,(%rax)
 4c0:	d8 01                	fadds  (%rcx)
 4c2:	00 00                	add    %al,(%rax)
 4c4:	20 00                	and    %al,(%rax)
	...
 4d6:	00 00                	add    %al,(%rax)
 4d8:	50                   	push   %rax
 4d9:	00 00                	add    %al,(%rax)
 4db:	00 21                	add    %ah,(%rcx)
 4dd:	00 11                	add    %dl,(%rcx)
 4df:	00 08                	add    %cl,(%rax)
 4e1:	7e 01                	jle    4e4 <__ImageBase+0x4e4>
 4e3:	00 00                	add    %al,(%rax)
 4e5:	00 00                	add    %al,(%rax)
 4e7:	00 08                	add    %cl,(%rax)
 4e9:	00 00                	add    %al,(%rax)
 4eb:	00 00                	add    %al,(%rax)
 4ed:	00 00                	add    %al,(%rax)
 4ef:	00 c7                	add    %al,%bh
 4f1:	00 00                	add    %al,(%rax)
 4f3:	00 12                	add    %dl,(%rdx)
 4f5:	00 0b                	add    %cl,(%rbx)
 4f7:	00 f2                	add    %dh,%dl
 4f9:	21 01                	and    %eax,(%rcx)
	...
 507:	00 1a                	add    %bl,(%rdx)
 509:	01 00                	add    %eax,(%rax)
 50b:	00 12                	add    %dl,(%rdx)
 50d:	00 0a                	add    %cl,(%rdx)
 50f:	00 80 0e 01 00 00    	add    %al,0x10e(%rax)
 515:	00 00                	add    %al,(%rax)
 517:	00 54 00 00          	add    %dl,0x0(%rax,%rax,1)
 51b:	00 00                	add    %al,(%rax)
 51d:	00 00                	add    %al,(%rax)
 51f:	00 8d 01 00 00 12    	add    %cl,0x12000001(%rbp)
 525:	00 0a                	add    %cl,(%rdx)
 527:	00 a2 0c 01 00 00    	add    %ah,0x10c(%rdx)
	...
 535:	00 00                	add    %al,(%rax)
 537:	00 18                	add    %bl,(%rax)
 539:	00 00                	add    %al,(%rax)
 53b:	00 22                	add    %ah,(%rdx)
 53d:	00 0a                	add    %cl,(%rdx)
 53f:	00 2f                	add    %ch,(%rdi)
 541:	0d 01 00 00 00       	or     $0x1,%eax
	...
 54e:	00 00                	add    %al,(%rax)
 550:	21 00                	and    %eax,(%rax)
 552:	00 00                	add    %al,(%rax)
 554:	12 00                	adc    (%rax),%al
 556:	0a 00                	or     (%rax),%al
 558:	50                   	push   %rax
 559:	c5 00 00             	(bad)
	...
 568:	90                   	nop
 569:	00 00                	add    %al,(%rax)
 56b:	00 12                	add    %dl,(%rdx)
 56d:	00 0b                	add    %cl,(%rbx)
 56f:	00 fb                	add    %bh,%bl
 571:	22 01                	and    (%rcx),%al
	...
 57f:	00 0c 00             	add    %cl,(%rax,%rax,1)
 582:	00 00                	add    %al,(%rax)
 584:	10 00                	adc    %al,(%rax)
 586:	f1                   	icebp  
 587:	ff 00                	incl   (%rax)
	...
 595:	00 00                	add    %al,(%rax)
 597:	00 68 00             	add    %ch,0x0(%rax)
 59a:	00 00                	add    %al,(%rax)
 59c:	11 00                	adc    %eax,(%rax)
 59e:	14 00                	adc    $0x0,%al
 5a0:	e0 a0                	loopne 542 <__ImageBase+0x542>
 5a2:	01 00                	add    %eax,(%rax)
 5a4:	00 00                	add    %al,(%rax)
 5a6:	00 00                	add    %al,(%rax)
 5a8:	1d 00 00 00 00       	sbb    $0x0,%eax
 5ad:	00 00                	add    %al,(%rax)
 5af:	00 ec                	add    %ch,%ah
 5b1:	00 00                	add    %al,(%rax)
 5b3:	00 12                	add    %dl,(%rdx)
 5b5:	00 0a                	add    %cl,(%rdx)
 5b7:	00 70 0e             	add    %dh,0xe(%rax)
 5ba:	01 00                	add    %eax,(%rax)
 5bc:	00 00                	add    %al,(%rax)
 5be:	00 00                	add    %al,(%rax)
 5c0:	0a 00                	or     (%rax),%al
 5c2:	00 00                	add    %al,(%rax)
 5c4:	00 00                	add    %al,(%rax)
 5c6:	00 00                	add    %al,(%rax)
 5c8:	23 01                	and    (%rcx),%eax
 5ca:	00 00                	add    %al,(%rax)
 5cc:	10 00                	adc    %al,(%rax)
 5ce:	16                   	(bad)  
 5cf:	00 60 a1             	add    %ah,-0x5f(%rax)
 5d2:	01 00                	add    %eax,(%rax)
	...
 5e0:	2f                   	(bad)  
 5e1:	01 00                	add    %eax,(%rax)
 5e3:	00 11                	add    %dl,(%rcx)
 5e5:	00 0d 00 80 31 01    	add    %cl,0x1318000(%rip)        # 13185eb <_end+0x12ed5db>
 5eb:	00 00                	add    %al,(%rax)
 5ed:	00 00                	add    %al,(%rax)
 5ef:	00 e0                	add    %ah,%al
 5f1:	06                   	(bad)  
 5f2:	00 00                	add    %al,(%rax)
 5f4:	00 00                	add    %al,(%rax)
 5f6:	00 00                	add    %al,(%rax)
 5f8:	6e                   	outsb  %ds:(%rsi),(%dx)
 5f9:	01 00                	add    %eax,(%rax)
 5fb:	00 10                	add    %dl,(%rax)
 5fd:	00 16                	add    %dl,(%rsi)
 5ff:	00 10                	add    %dl,(%rax)
 601:	b0 02                	mov    $0x2,%al
	...
 60f:	00 8c 01 00 00 22 00 	add    %cl,0x220000(%rcx,%rax,1)
 616:	0a 00                	or     (%rax),%al
 618:	a2 0c 01 00 00 00 00 	movabs %al,0x10c
 61f:	00 00 
 621:	00 00                	add    %al,(%rax)
 623:	00 00                	add    %al,(%rax)
 625:	00 00                	add    %al,(%rax)
 627:	00 19                	add    %bl,(%rcx)
 629:	00 00                	add    %al,(%rax)
 62b:	00 12                	add    %dl,(%rdx)
 62d:	00 0a                	add    %cl,(%rdx)
 62f:	00 2f                	add    %ch,(%rdi)
 631:	0d 01 00 00 00       	or     $0x1,%eax
	...
 63e:	00 00                	add    %al,(%rax)
 640:	b3 01                	mov    $0x1,%bl
 642:	00 00                	add    %al,(%rax)
 644:	10 00                	adc    %al,(%rax)
 646:	14 00                	adc    $0x0,%al
 648:	00 90 01 00 00 00    	add    %dl,0x1(%rax)
	...
 656:	00 00                	add    %al,(%rax)
 658:	01 00                	add    %eax,(%rax)
 65a:	00 00                	add    %al,(%rax)
 65c:	10 00                	adc    %al,(%rax)
 65e:	0a 00                	or     (%rax),%al
 660:	00 30                	add    %dh,(%rax)
	...
 66e:	00 00                	add    %al,(%rax)
 670:	3d 01 00 00 10       	cmp    $0x10000001,%eax
 675:	00 0b                	add    %cl,(%rbx)
 677:	00 b3 22 01 00 00    	add    %dh,0x122(%rbx)
	...
 685:	00 00                	add    %al,(%rax)
 687:	00 28                	add    %ch,(%rax)
 689:	00 00                	add    %al,(%rax)
 68b:	00 12                	add    %dl,(%rdx)
 68d:	00 0b                	add    %cl,(%rbx)
 68f:	00 5f 1f             	add    %bl,0x1f(%rdi)
 692:	01 00                	add    %eax,(%rax)
	...
 6a0:	f8                   	clc    
 6a1:	00 00                	add    %al,(%rax)
 6a3:	00 10                	add    %dl,(%rax)
 6a5:	00 0b                	add    %cl,(%rbx)
 6a7:	00 f7                	add    %dh,%bh
 6a9:	1e                   	(bad)  
 6aa:	01 00                	add    %eax,(%rax)
	...
 6b8:	52                   	push   %rdx
 6b9:	01 00                	add    %eax,(%rax)
 6bb:	00 10                	add    %dl,(%rax)
 6bd:	00 15 00 48 a1 01    	add    %dl,0x1a14800(%rip)        # 1a14ec3 <_end+0x19e9eb3>
	...
 6cf:	00 73 01             	add    %dh,0x1(%rbx)
 6d2:	00 00                	add    %al,(%rax)
 6d4:	22 00                	and    (%rax),%al
 6d6:	0a 00                	or     (%rax),%al
 6d8:	40 0e                	rex (bad) 
 6da:	01 00                	add    %eax,(%rax)
 6dc:	00 00                	add    %al,(%rax)
 6de:	00 00                	add    %al,(%rax)
 6e0:	09 00                	or     %eax,(%rax)
 6e2:	00 00                	add    %al,(%rax)
 6e4:	00 00                	add    %al,(%rax)
 6e6:	00 00                	add    %al,(%rax)
 6e8:	36 00 00             	ss add %al,(%rax)
 6eb:	00 11                	add    %dl,(%rcx)
 6ed:	00 16                	add    %dl,(%rsi)
 6ef:	00 38                	add    %bh,(%rax)
 6f1:	ae                   	scas   %es:(%rdi),%al
 6f2:	02 00                	add    (%rax),%al
 6f4:	00 00                	add    %al,(%rax)
 6f6:	00 00                	add    %al,(%rax)
 6f8:	08 00                	or     %al,(%rax)
 6fa:	00 00                	add    %al,(%rax)
 6fc:	00 00                	add    %al,(%rax)
 6fe:	00 00                	add    %al,(%rax)
 700:	9a                   	(bad)  
 701:	00 00                	add    %al,(%rax)
 703:	00 11                	add    %dl,(%rcx)
 705:	00 14 00             	add    %dl,(%rax,%rax,1)
 708:	00 a1 01 00 00 00    	add    %ah,0x1(%rcx)
 70e:	00 00                	add    %al,(%rax)
 710:	1f                   	(bad)  
 711:	00 00                	add    %al,(%rax)
 713:	00 00                	add    %al,(%rax)
 715:	00 00                	add    %al,(%rax)
 717:	00 a5 01 00 00 10    	add    %ah,0x10000001(%rbp)
 71d:	00 0b                	add    %cl,(%rbx)
 71f:	00 95 22 01 00 00    	add    %dl,0x122(%rbp)
	...
 72d:	00 00                	add    %al,(%rax)
 72f:	00 c7                	add    %al,%bh
 731:	01 00                	add    %eax,(%rax)
 733:	00 11                	add    %dl,(%rcx)
 735:	00 16                	add    %dl,(%rsi)
 737:	00 20                	add    %ah,(%rax)
 739:	aa                   	stos   %al,%es:(%rdi)
 73a:	02 00                	add    (%rax),%al
 73c:	00 00                	add    %al,(%rax)
 73e:	00 00                	add    %al,(%rax)
 740:	08 00                	or     %al,(%rax)
 742:	00 00                	add    %al,(%rax)
 744:	00 00                	add    %al,(%rax)
 746:	00 00                	add    %al,(%rax)
 748:	ae                   	scas   %es:(%rdi),%al
 749:	00 00                	add    %al,(%rax)
 74b:	00 12                	add    %dl,(%rdx)
 74d:	00 0a                	add    %cl,(%rdx)
 74f:	00 f0                	add    %dh,%al
 751:	43 00 00             	rex.XB add %al,(%r8)
 754:	00 00                	add    %al,(%rax)
 756:	00 00                	add    %al,(%rax)
 758:	50                   	push   %rax
 759:	11 00                	adc    %eax,(%rax)
 75b:	00 00                	add    %al,(%rax)
 75d:	00 00                	add    %al,(%rax)
 75f:	00 0c 01             	add    %cl,(%rcx,%rax,1)
 762:	00 00                	add    %al,(%rax)
 764:	12 00                	adc    (%rax),%al
 766:	0a 00                	or     (%rax),%al
 768:	50                   	push   %rax
 769:	0e                   	(bad)  
 76a:	01 00                	add    %eax,(%rax)
 76c:	00 00                	add    %al,(%rax)
 76e:	00 00                	add    %al,(%rax)
 770:	1d 00 00 00 00       	sbb    $0x0,%eax
 775:	00 00                	add    %al,(%rax)
 777:	00 59 01             	add    %bl,0x1(%rcx)
 77a:	00 00                	add    %al,(%rax)
 77c:	11 00                	adc    %eax,(%rax)
 77e:	14 00                	adc    $0x0,%al
 780:	20 a1 01 00 00 00    	and    %ah,0x1(%rcx)
 786:	00 00                	add    %al,(%rax)
 788:	20 00                	and    %al,(%rax)
 78a:	00 00                	add    %al,(%rax)
 78c:	00 00                	add    %al,(%rax)
 78e:	00 00                	add    %al,(%rax)
 790:	84 01                	test   %al,(%rcx)
 792:	00 00                	add    %al,(%rax)
 794:	12 00                	adc    (%rax),%al
 796:	0a 00                	or     (%rax),%al
 798:	e0 0e                	loopne 7a8 <__ImageBase+0x7a8>
 79a:	01 00                	add    %eax,(%rax)
 79c:	00 00                	add    %al,(%rax)
 79e:	00 00                	add    %al,(%rax)
 7a0:	6f                   	outsl  %ds:(%rsi),(%dx)
 7a1:	00 00                	add    %al,(%rax)
 7a3:	00 00                	add    %al,(%rax)
 7a5:	00 00                	add    %al,(%rax)
 7a7:	00 7a 00             	add    %bh,0x0(%rdx)
 7aa:	00 00                	add    %al,(%rax)
 7ac:	10 00                	adc    %al,(%rax)
 7ae:	0b 00                	or     (%rax),%eax
 7b0:	0b 1e                	or     (%rsi),%ebx
 7b2:	01 00                	add    %eax,(%rax)
	...
 7c0:	d0 00                	rolb   (%rax)
 7c2:	00 00                	add    %al,(%rax)
 7c4:	12 00                	adc    (%rax),%al
 7c6:	0b 00                	or     (%rax),%eax
 7c8:	bf 22 01 00 00       	mov    $0x122,%edi
	...
 7d5:	00 00                	add    %al,(%rax)
 7d7:	00 94 01 00 00 11 00 	add    %dl,0x110000(%rcx,%rax,1)
 7de:	14 00                	adc    $0x0,%al
 7e0:	30 82 01 00 00 00    	xor    %al,0x1(%rdx)
 7e6:	00 00                	add    %al,(%rax)
 7e8:	1c 00                	sbb    $0x0,%al
 7ea:	00 00                	add    %al,(%rax)
 7ec:	00 00                	add    %al,(%rax)
 7ee:	00 00                	add    %al,(%rax)
 7f0:	b8 00 00 00 12       	mov    $0x12000000,%eax
 7f5:	00 0b                	add    %cl,(%rbx)
 7f7:	00 dd                	add    %bl,%ch
 7f9:	22 01                	and    (%rcx),%al
	...

Disassembly of section .dynstr:

0000000000000808 <.dynstr>:
 808:	00 74 65 73          	add    %dh,0x73(%rbp,%riz,2)
 80c:	74 5f                	je     86d <__ImageBase+0x86d>
 80e:	64 75 6d             	fs jne 87e <__ImageBase+0x87e>
 811:	6d                   	insl   (%dx),%es:(%rdi)
 812:	79 00                	jns    814 <__ImageBase+0x814>
 814:	5f                   	pop    %rdi
 815:	5f                   	pop    %rdi
 816:	49 6d                	rex.WB insl (%dx),%es:(%rdi)
 818:	61                   	(bad)  
 819:	67 65 42 61          	addr32 gs rex.X (bad) 
 81d:	73 65                	jae    884 <__ImageBase+0x884>
 81f:	00 5f 6c             	add    %bl,0x6c(%rdi)
 822:	6f                   	outsl  %ds:(%rsi),(%dx)
 823:	6e                   	outsb  %ds:(%rsi),(%dx)
 824:	67 6a 6d             	addr32 push $0x6d
 827:	70 00                	jo     829 <__ImageBase+0x829>
 829:	61                   	(bad)  
 82a:	6c                   	insb   (%dx),%es:(%rdi)
 82b:	6c                   	insb   (%dx),%es:(%rdi)
 82c:	6f                   	outsl  %ds:(%rsi),(%dx)
 82d:	63 61 00             	movsxd 0x0(%rcx),%esp
 830:	65 6e                	outsb  %gs:(%rsi),(%dx)
 832:	63 6c 61 76          	movsxd 0x76(%rcx,%riz,2),%ebp
 836:	65 5f                	gs pop %rdi
 838:	65 6e                	outsb  %gs:(%rsi),(%dx)
 83a:	74 72                	je     8ae <__ImageBase+0x8ae>
 83c:	79 00                	jns    83e <__ImageBase+0x83e>
 83e:	67 5f                	addr32 pop %rdi
 840:	70 65                	jo     8a7 <__ImageBase+0x8a7>
 842:	61                   	(bad)  
 843:	6b 5f 72 73          	imul   $0x73,0x72(%rdi),%ebx
 847:	72 76                	jb     8bf <__ImageBase+0x8bf>
 849:	5f                   	pop    %rdi
 84a:	6d                   	insl   (%dx),%es:(%rdi)
 84b:	65 6d                	gs insl (%dx),%es:(%rdi)
 84d:	5f                   	pop    %rdi
 84e:	63 6f 6d             	movsxd 0x6d(%rdi),%ebp
 851:	6d                   	insl   (%dx),%es:(%rdi)
 852:	69 74 74 65 64 00 5f 	imul   $0x5f5f0064,0x65(%rsp,%rsi,2),%esi
 859:	5f 
 85a:	69 6e 74 65 6c 5f 73 	imul   $0x735f6c65,0x74(%rsi),%ebp
 861:	65 63 75 72          	movsxd %gs:0x72(%rbp),%esi
 865:	69 74 79 5f 63 6f 6f 	imul   $0x6b6f6f63,0x5f(%rcx,%rdi,2),%esi
 86c:	6b 
 86d:	69 65 00 73 67 78 5f 	imul   $0x5f786773,0x0(%rbp),%esp
 874:	74 73                	je     8e9 <__ImageBase+0x8e9>
 876:	74 64                	je     8dc <__ImageBase+0x8dc>
 878:	63 5f 76             	movsxd 0x76(%rdi),%ebx
 87b:	65 72 73             	gs jb  8f1 <__ImageBase+0x8f1>
 87e:	69 6f 6e 00 5f 5f 63 	imul   $0x635f5f00,0x6e(%rdi),%ebp
 885:	74 5f                	je     8e6 <__ImageBase+0x8e6>
 887:	6d                   	insl   (%dx),%es:(%rdi)
 888:	69 74 69 67 61 74 69 	imul   $0x6f697461,0x67(%rcx,%rbp,2),%esi
 88f:	6f 
 890:	6e                   	outsb  %ds:(%rsi),(%dx)
 891:	5f                   	pop    %rdi
 892:	62                   	(bad)  
 893:	65 67 69 6e 00 64 6f 	imul   $0x655f6f64,%gs:0x0(%esi),%ebp
 89a:	5f 65 
 89c:	6d                   	insl   (%dx),%es:(%rdi)
 89d:	6f                   	outsl  %ds:(%rsi),(%dx)
 89e:	64 70 65             	fs jo  906 <__ImageBase+0x906>
 8a1:	00 73 67             	add    %dh,0x67(%rbx)
 8a4:	78 5f                	js     905 <__ImageBase+0x905>
 8a6:	74 63                	je     90b <__ImageBase+0x90b>
 8a8:	72 79                	jb     923 <__ImageBase+0x923>
 8aa:	70 74                	jo     920 <__ImageBase+0x920>
 8ac:	6f                   	outsl  %ds:(%rsi),(%dx)
 8ad:	5f                   	pop    %rdi
 8ae:	76 65                	jbe    915 <__ImageBase+0x915>
 8b0:	72 73                	jb     925 <__ImageBase+0x925>
 8b2:	69 6f 6e 00 63 74 5f 	imul   $0x5f746300,0x6e(%rdi),%ebp
 8b9:	64 65 63 6f 64       	fs movsxd %gs:0x64(%rdi),%ebp
 8be:	65 00 64 6f 5f       	add    %ah,%gs:0x5f(%rdi,%rbp,2)
 8c3:	65 61                	gs (bad) 
 8c5:	63 63 65             	movsxd 0x65(%rbx),%esp
 8c8:	70 74                	jo     93e <__ImageBase+0x93e>
 8ca:	63 6f 70             	movsxd 0x70(%rdi),%ebp
 8cd:	79 00                	jns    8cf <__ImageBase+0x8cf>
 8cf:	61                   	(bad)  
 8d0:	73 6d                	jae    93f <__ImageBase+0x93f>
 8d2:	5f                   	pop    %rdi
 8d3:	6f                   	outsl  %ds:(%rsi),(%dx)
 8d4:	72 65                	jb     93b <__ImageBase+0x93b>
 8d6:	74 00                	je     8d8 <__ImageBase+0x8d8>
 8d8:	64 6f                	outsl  %fs:(%rsi),(%dx)
 8da:	5f                   	pop    %rdi
 8db:	65 61                	gs (bad) 
 8dd:	63 63 65             	movsxd 0x65(%rbx),%esp
 8e0:	70 74                	jo     956 <__ImageBase+0x956>
 8e2:	00 5f 5a             	add    %bl,0x5a(%rdi)
 8e5:	39 70 63             	cmp    %esi,0x63(%rax)
 8e8:	6c                   	insb   (%dx),%es:(%rdi)
 8e9:	5f                   	pop    %rdi
 8ea:	65 6e                	outsb  %gs:(%rsi),(%dx)
 8ec:	74 72                	je     960 <__ImageBase+0x960>
 8ee:	79 50                	jns    940 <__ImageBase+0x940>
 8f0:	76 53                	jbe    945 <__ImageBase+0x945>
 8f2:	5f                   	pop    %rdi
 8f3:	00 5f 5f             	add    %bl,0x5f(%rdi)
 8f6:	6d                   	insl   (%dx),%es:(%rdi)
 8f7:	65 6d                	gs insl (%dx),%es:(%rdi)
 8f9:	63 70 79             	movsxd 0x79(%rax),%esi
 8fc:	5f                   	pop    %rdi
 8fd:	38 61 00             	cmp    %ah,0x0(%rcx)
 900:	5f                   	pop    %rdi
 901:	5f                   	pop    %rdi
 902:	63 74 5f 6d          	movsxd 0x6d(%rdi,%rbx,2),%esi
 906:	69 74 69 67 61 74 69 	imul   $0x6f697461,0x67(%rcx,%rbp,2),%esi
 90d:	6f 
 90e:	6e                   	outsb  %ds:(%rsi),(%dx)
 90f:	5f                   	pop    %rdi
 910:	72 65                	jb     977 <__ImageBase+0x977>
 912:	74 00                	je     914 <__ImageBase+0x914>
 914:	5f                   	pop    %rdi
 915:	5f                   	pop    %rdi
 916:	6d                   	insl   (%dx),%es:(%rdi)
 917:	65 6d                	gs insl (%dx),%es:(%rdi)
 919:	63 70 79             	movsxd 0x79(%rax),%esi
 91c:	5f                   	pop    %rdi
 91d:	76 65                	jbe    984 <__ImageBase+0x984>
 91f:	72 77                	jb     998 <__ImageBase+0x998>
 921:	00 5f 5f             	add    %bl,0x5f(%rdi)
 924:	6d                   	insl   (%dx),%es:(%rdi)
 925:	65 6d                	gs insl (%dx),%es:(%rdi)
 927:	73 65                	jae    98e <__ImageBase+0x98e>
 929:	74 00                	je     92b <__ImageBase+0x92b>
 92b:	5f                   	pop    %rdi
 92c:	5f                   	pop    %rdi
 92d:	62 73                	(bad)  
 92f:	73 5f                	jae    990 <__ImageBase+0x990>
 931:	73 74                	jae    9a7 <__ImageBase+0x9a7>
 933:	61                   	(bad)  
 934:	72 74                	jb     9aa <__ImageBase+0x9aa>
 936:	00 67 5f             	add    %ah,0x5f(%rdi)
 939:	67 6c                	insb   (%dx),%es:(%edi)
 93b:	6f                   	outsl  %ds:(%rsi),(%dx)
 93c:	62 61 6c 5f 64       	(bad)
 941:	61                   	(bad)  
 942:	74 61                	je     9a5 <__ImageBase+0x9a5>
 944:	00 4c 65 76          	add    %cl,0x76(%rbp,%riz,2)
 948:	65 72 69             	gs jb  9b4 <__ImageBase+0x9b4>
 94b:	66 79 72             	data16 jns 9c0 <__ImageBase+0x9c0>
 94e:	65 70 6f             	gs jo  9c0 <__ImageBase+0x9c0>
 951:	72 74                	jb     9c7 <__ImageBase+0x9c7>
 953:	32 5f 69             	xor    0x69(%rdi),%bl
 956:	6e                   	outsb  %ds:(%rsi),(%dx)
 957:	73 74                	jae    9cd <__ImageBase+0x9cd>
 959:	00 5f 65             	add    %bl,0x65(%rdi)
 95c:	64 61                	fs (bad) 
 95e:	74 61                	je     9c1 <__ImageBase+0x9c1>
 960:	00 73 67             	add    %dh,0x67(%rbx)
 963:	78 5f                	js     9c4 <__ImageBase+0x9c4>
 965:	74 73                	je     9da <__ImageBase+0x9da>
 967:	65 72 76             	gs jb  9e0 <__ImageBase+0x9e0>
 96a:	69 63 65 5f 76 65 72 	imul   $0x7265765f,0x65(%rbx),%esp
 971:	73 69                	jae    9dc <__ImageBase+0x9dc>
 973:	6f                   	outsl  %ds:(%rsi),(%dx)
 974:	6e                   	outsb  %ds:(%rsi),(%dx)
 975:	00 5f 65             	add    %bl,0x65(%rdi)
 978:	6e                   	outsb  %ds:(%rsi),(%dx)
 979:	64 00 5f 5f          	add    %bl,%fs:0x5f(%rdi)
 97d:	65 72 72             	gs jb  9f2 <__ImageBase+0x9f2>
 980:	6e                   	outsb  %ds:(%rsi),(%dx)
 981:	6f                   	outsl  %ds:(%rsi),(%dx)
 982:	5f                   	pop    %rdi
 983:	6c                   	insb   (%dx),%es:(%rdi)
 984:	6f                   	outsl  %ds:(%rsi),(%dx)
 985:	63 61 74             	movsxd 0x74(%rcx),%esp
 988:	69 6f 6e 00 5f 73 74 	imul   $0x74735f00,0x6e(%rdi),%ebp
 98f:	72 6c                	jb     9fd <__ImageBase+0x9fd>
 991:	65 6e                	outsb  %gs:(%rsi),(%dx)
 993:	00 5f 73             	add    %bl,0x73(%rdi)
 996:	65 74 6a             	gs je  a03 <__ImageBase+0xa03>
 999:	6d                   	insl   (%dx),%es:(%rdi)
 99a:	70 00                	jo     99c <__ImageBase+0x99c>
 99c:	73 67                	jae    a05 <__ImageBase+0xa05>
 99e:	78 5f                	js     9ff <__ImageBase+0x9ff>
 9a0:	74 72                	je     a14 <__ImageBase+0xa14>
 9a2:	74 73                	je     a17 <__ImageBase+0xa17>
 9a4:	5f                   	pop    %rdi
 9a5:	76 65                	jbe    a0c <__ImageBase+0xa0c>
 9a7:	72 73                	jb     a1c <__ImageBase+0xa1c>
 9a9:	69 6f 6e 00 4c 65 72 	imul   $0x72654c00,0x6e(%rdi),%ebp
 9b0:	65 70 6f             	gs jo  a22 <__ImageBase+0xa22>
 9b3:	72 74                	jb     a29 <__ImageBase+0xa29>
 9b5:	5f                   	pop    %rdi
 9b6:	69 6e 73 74 00 61 65 	imul   $0x65610074,0x73(%rsi),%ebp
 9bd:	78 5f                	js     a1e <__ImageBase+0xa1e>
 9bf:	6e                   	outsb  %ds:(%rsi),(%dx)
 9c0:	6f                   	outsl  %ds:(%rsi),(%dx)
 9c1:	74 69                	je     a2c <__ImageBase+0xa2c>
 9c3:	66 79 5f             	data16 jns a25 <__ImageBase+0xa25>
 9c6:	63 33                	movsxd (%rbx),%esi
 9c8:	5f                   	pop    %rdi
 9c9:	63 61 63             	movsxd 0x63(%rcx),%esp
 9cc:	68 65 00 67 5f       	push   $0x5f670065
 9d1:	70 65                	jo     a38 <__ImageBase+0xa38>
 9d3:	61                   	(bad)  
 9d4:	6b 5f 68 65          	imul   $0x65,0x68(%rdi),%ebx
 9d8:	61                   	(bad)  
 9d9:	70 5f                	jo     a3a <__ImageBase+0xa3a>
 9db:	75 73                	jne    a50 <__ImageBase+0xa50>
 9dd:	65 64 00 69 70       	gs add %ch,%fs:0x70(%rcx)
 9e2:	70 63                	jo     a47 <__ImageBase+0xa47>
 9e4:	70 53                	jo     a39 <__ImageBase+0xa39>
 9e6:	65 74 43             	gs je  a2c <__ImageBase+0xa2c>
 9e9:	70 75                	jo     a60 <__ImageBase+0xa60>
 9eb:	46                   	rex.RX
 9ec:	65 61                	gs (bad) 
 9ee:	74 75                	je     a65 <__ImageBase+0xa65>
 9f0:	72 65                	jb     a57 <__ImageBase+0xa57>
 9f2:	73 00                	jae    9f4 <__ImageBase+0x9f4>

Disassembly of section .rela.dyn:

00000000000009f8 <.rela.dyn>:
 9f8:	a0 7d 01 00 00 00 00 	movabs 0x80000000000017d,%al
 9ff:	00 08 
	...
 a09:	20 00                	and    %al,(%rax)
 a0b:	00 00                	add    %al,(%rax)
 a0d:	00 00                	add    %al,(%rax)
 a0f:	00 a8 7d 01 00 00    	add    %ch,0x17d(%rax)
 a15:	00 00                	add    %al,(%rax)
 a17:	00 08                	add    %cl,(%rax)
 a19:	00 00                	add    %al,(%rax)
 a1b:	00 00                	add    %al,(%rax)
 a1d:	00 00                	add    %al,(%rax)
 a1f:	00 10                	add    %dl,(%rax)
 a21:	20 00                	and    %al,(%rax)
 a23:	00 00                	add    %al,(%rax)
 a25:	00 00                	add    %al,(%rax)
 a27:	00 b0 7d 01 00 00    	add    %dh,0x17d(%rax)
 a2d:	00 00                	add    %al,(%rax)
 a2f:	00 08                	add    %cl,(%rax)
 a31:	00 00                	add    %al,(%rax)
 a33:	00 00                	add    %al,(%rax)
 a35:	00 00                	add    %al,(%rax)
 a37:	00 30                	add    %dh,(%rax)
 a39:	20 00                	and    %al,(%rax)
 a3b:	00 00                	add    %al,(%rax)
 a3d:	00 00                	add    %al,(%rax)
 a3f:	00 b8 7d 01 00 00    	add    %bh,0x17d(%rax)
 a45:	00 00                	add    %al,(%rax)
 a47:	00 08                	add    %cl,(%rax)
 a49:	00 00                	add    %al,(%rax)
 a4b:	00 00                	add    %al,(%rax)
 a4d:	00 00                	add    %al,(%rax)
 a4f:	00 50 20             	add    %dl,0x20(%rax)
 a52:	00 00                	add    %al,(%rax)
 a54:	00 00                	add    %al,(%rax)
 a56:	00 00                	add    %al,(%rax)
 a58:	c8 7d 01 00          	enter  $0x17d,$0x0
 a5c:	00 00                	add    %al,(%rax)
 a5e:	00 00                	add    %al,(%rax)
 a60:	08 00                	or     %al,(%rax)
 a62:	00 00                	add    %al,(%rax)
 a64:	00 00                	add    %al,(%rax)
 a66:	00 00                	add    %al,(%rax)
 a68:	e7 40                	out    %eax,$0x40
 a6a:	00 00                	add    %al,(%rax)
 a6c:	00 00                	add    %al,(%rax)
 a6e:	00 00                	add    %al,(%rax)
 a70:	d8 7d 01             	fdivrs 0x1(%rbp)
 a73:	00 00                	add    %al,(%rax)
 a75:	00 00                	add    %al,(%rax)
 a77:	00 08                	add    %cl,(%rax)
 a79:	00 00                	add    %al,(%rax)
 a7b:	00 00                	add    %al,(%rax)
 a7d:	00 00                	add    %al,(%rax)
 a7f:	00 81 40 00 00 00    	add    %al,0x40(%rcx)
 a85:	00 00                	add    %al,(%rax)
 a87:	00 e8                	add    %ch,%al
 a89:	7d 01                	jge    a8c <__ImageBase+0xa8c>
 a8b:	00 00                	add    %al,(%rax)
 a8d:	00 00                	add    %al,(%rax)
 a8f:	00 08                	add    %cl,(%rax)
 a91:	00 00                	add    %al,(%rax)
 a93:	00 00                	add    %al,(%rax)
 a95:	00 00                	add    %al,(%rax)
 a97:	00 06                	add    %al,(%rsi)
 a99:	40 00 00             	rex add %al,(%rax)
 a9c:	00 00                	add    %al,(%rax)
 a9e:	00 00                	add    %al,(%rax)
 aa0:	f8                   	clc    
 aa1:	7d 01                	jge    aa4 <__ImageBase+0xaa4>
 aa3:	00 00                	add    %al,(%rax)
 aa5:	00 00                	add    %al,(%rax)
 aa7:	00 08                	add    %cl,(%rax)
 aa9:	00 00                	add    %al,(%rax)
 aab:	00 00                	add    %al,(%rax)
 aad:	00 00                	add    %al,(%rax)
 aaf:	00 1f                	add    %bl,(%rdi)
 ab1:	40 00 00             	rex add %al,(%rax)
 ab4:	00 00                	add    %al,(%rax)
 ab6:	00 00                	add    %al,(%rax)
 ab8:	58                   	pop    %rax
 ab9:	7e 01                	jle    abc <__ImageBase+0xabc>
 abb:	00 00                	add    %al,(%rax)
 abd:	00 00                	add    %al,(%rax)
 abf:	00 08                	add    %cl,(%rax)
 ac1:	00 00                	add    %al,(%rax)
 ac3:	00 00                	add    %al,(%rax)
 ac5:	00 00                	add    %al,(%rax)
 ac7:	00 a0 08 01 00 00    	add    %ah,0x108(%rax)
 acd:	00 00                	add    %al,(%rax)
 acf:	00 d8                	add    %bl,%al
 ad1:	7f 01                	jg     ad4 <__ImageBase+0xad4>
 ad3:	00 00                	add    %al,(%rax)
 ad5:	00 00                	add    %al,(%rax)
 ad7:	00 08                	add    %cl,(%rax)
 ad9:	00 00                	add    %al,(%rax)
 adb:	00 00                	add    %al,(%rax)
 add:	00 00                	add    %al,(%rax)
 adf:	00 b3 22 01 00 00    	add    %dh,0x122(%rbx)
 ae5:	00 00                	add    %al,(%rax)
 ae7:	00 e0                	add    %ah,%al
 ae9:	7f 01                	jg     aec <__ImageBase+0xaec>
 aeb:	00 00                	add    %al,(%rax)
 aed:	00 00                	add    %al,(%rax)
 aef:	00 08                	add    %cl,(%rax)
 af1:	00 00                	add    %al,(%rax)
 af3:	00 00                	add    %al,(%rax)
 af5:	00 00                	add    %al,(%rax)
 af7:	00 95 22 01 00 00    	add    %dl,0x122(%rbp)
 afd:	00 00                	add    %al,(%rax)
 aff:	00 e8                	add    %ch,%al
 b01:	7f 01                	jg     b04 <__ImageBase+0xb04>
 b03:	00 00                	add    %al,(%rax)
 b05:	00 00                	add    %al,(%rax)
 b07:	00 08                	add    %cl,(%rax)
	...
 b11:	90                   	nop
 b12:	01 00                	add    %eax,(%rax)
 b14:	00 00                	add    %al,(%rax)
 b16:	00 00                	add    %al,(%rax)
 b18:	50                   	push   %rax
 b19:	82                   	(bad)  
 b1a:	01 00                	add    %eax,(%rax)
 b1c:	00 00                	add    %al,(%rax)
 b1e:	00 00                	add    %al,(%rax)
 b20:	08 00                	or     %al,(%rax)
 b22:	00 00                	add    %al,(%rax)
 b24:	00 00                	add    %al,(%rax)
 b26:	00 00                	add    %al,(%rax)
 b28:	50                   	push   %rax
 b29:	82                   	(bad)  
 b2a:	01 00                	add    %eax,(%rax)
 b2c:	00 00                	add    %al,(%rax)
 b2e:	00 00                	add    %al,(%rax)
 b30:	00 a0 01 00 00 00    	add    %ah,0x1(%rax)
 b36:	00 00                	add    %al,(%rax)
 b38:	08 00                	or     %al,(%rax)
 b3a:	00 00                	add    %al,(%rax)
 b3c:	00 00                	add    %al,(%rax)
 b3e:	00 00                	add    %al,(%rax)
 b40:	20 a0 01 00 00 00    	and    %ah,0x1(%rax)
 b46:	00 00                	add    %al,(%rax)
 b48:	58                   	pop    %rax
 b49:	a0 01 00 00 00 00 00 	movabs 0x8000000000001,%al
 b50:	08 00 
 b52:	00 00                	add    %al,(%rax)
 b54:	00 00                	add    %al,(%rax)
 b56:	00 00                	add    %al,(%rax)
 b58:	20 a0 01 00 00 00    	and    %ah,0x1(%rax)
 b5e:	00 00                	add    %al,(%rax)
 b60:	60                   	(bad)  
 b61:	a0 01 00 00 00 00 00 	movabs 0x8000000000001,%al
 b68:	08 00 
 b6a:	00 00                	add    %al,(%rax)
 b6c:	00 00                	add    %al,(%rax)
 b6e:	00 00                	add    %al,(%rax)
 b70:	20 a0 01 00 00 00    	and    %ah,0x1(%rax)
 b76:	00 00                	add    %al,(%rax)
 b78:	68 a0 01 00 00       	push   $0x1a0
 b7d:	00 00                	add    %al,(%rax)
 b7f:	00 08                	add    %cl,(%rax)
 b81:	00 00                	add    %al,(%rax)
 b83:	00 00                	add    %al,(%rax)
 b85:	00 00                	add    %al,(%rax)
 b87:	00 80 a0 01 00 00    	add    %al,0x1a0(%rax)
 b8d:	00 00                	add    %al,(%rax)
 b8f:	00 b8 a0 01 00 00    	add    %bh,0x1a0(%rax)
 b95:	00 00                	add    %al,(%rax)
 b97:	00 08                	add    %cl,(%rax)
 b99:	00 00                	add    %al,(%rax)
 b9b:	00 00                	add    %al,(%rax)
 b9d:	00 00                	add    %al,(%rax)
 b9f:	00 80 a0 01 00 00    	add    %al,0x1a0(%rax)
 ba5:	00 00                	add    %al,(%rax)
 ba7:	00 c0                	add    %al,%al
 ba9:	a0 01 00 00 00 00 00 	movabs 0x8000000000001,%al
 bb0:	08 00 
 bb2:	00 00                	add    %al,(%rax)
 bb4:	00 00                	add    %al,(%rax)
 bb6:	00 00                	add    %al,(%rax)
 bb8:	80 a0 01 00 00 00 00 	andb   $0x0,0x1(%rax)
 bbf:	00 d0                	add    %dl,%al
 bc1:	7f 01                	jg     bc4 <__ImageBase+0xbc4>
 bc3:	00 00                	add    %al,(%rax)
 bc5:	00 00                	add    %al,(%rax)
 bc7:	00 06                	add    %al,(%rsi)
 bc9:	00 00                	add    %al,(%rax)
 bcb:	00 01                	add    %al,(%rcx)
	...
 bd5:	00 00                	add    %al,(%rax)
 bd7:	00 f0                	add    %dh,%al
 bd9:	7f 01                	jg     bdc <__ImageBase+0xbdc>
 bdb:	00 00                	add    %al,(%rax)
 bdd:	00 00                	add    %al,(%rax)
 bdf:	00 06                	add    %al,(%rsi)
 be1:	00 00                	add    %al,(%rax)
 be3:	00 02                	add    %al,(%rdx)
	...

Disassembly of section .plt:

0000000000001000 <.plt>:
    1000:	ff 35 ba 6f 01 00    	push   0x16fba(%rip)        # 17fc0 <_GLOBAL_OFFSET_TABLE_+0x8>
    1006:	ff 25 bc 6f 01 00    	jmp    *0x16fbc(%rip)        # 17fc8 <_GLOBAL_OFFSET_TABLE_+0x10>
    100c:	0f 1f 40 00          	nopl   0x0(%rax)

Disassembly of section .plt.got:

0000000000001010 <_Z9pcl_entryPvS_@plt>:
    1010:	ff 25 ba 6f 01 00    	jmp    *0x16fba(%rip)        # 17fd0 <_Z9pcl_entryPvS_>
    1016:	66 90                	xchg   %ax,%ax

0000000000001018 <ippcpSetCpuFeatures@plt>:
    1018:	ff 25 d2 6f 01 00    	jmp    *0x16fd2(%rip)        # 17ff0 <ippcpSetCpuFeatures>
    101e:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000002000 <trts_access_version_dummy1>:
    2000:	f3 0f 1e fa          	endbr64 
    2004:	48 8d 05 25 62 01 00 	lea    0x16225(%rip),%rax        # 18230 <sgx_trts_version>
    200b:	c6 00 73             	movb   $0x73,(%rax)
    200e:	c3                   	ret    
    200f:	90                   	nop

0000000000002010 <tstdc_access_version_dummy1>:
    2010:	f3 0f 1e fa          	endbr64 
    2014:	c6 05 c5 80 01 00 73 	movb   $0x73,0x180c5(%rip)        # 1a0e0 <sgx_tstdc_version>
    201b:	48 8d 05 be 80 01 00 	lea    0x180be(%rip),%rax        # 1a0e0 <sgx_tstdc_version>
    2022:	c3                   	ret    
    2023:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    202a:	00 00 00 
    202d:	0f 1f 00             	nopl   (%rax)

0000000000002030 <tcrypto_access_version_dummy1>:
    2030:	f3 0f 1e fa          	endbr64 
    2034:	c6 05 c5 80 01 00 73 	movb   $0x73,0x180c5(%rip)        # 1a100 <sgx_tcrypto_version>
    203b:	48 8d 05 be 80 01 00 	lea    0x180be(%rip),%rax        # 1a100 <sgx_tcrypto_version>
    2042:	c3                   	ret    
    2043:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    204a:	00 00 00 
    204d:	0f 1f 00             	nopl   (%rax)

0000000000002050 <tservice_access_version_dummy1>:
    2050:	f3 0f 1e fa          	endbr64 
    2054:	c6 05 c5 80 01 00 73 	movb   $0x73,0x180c5(%rip)        # 1a120 <sgx_tservice_version>
    205b:	48 8d 05 be 80 01 00 	lea    0x180be(%rip),%rax        # 1a120 <sgx_tservice_version>
    2062:	c3                   	ret    

0000000000002063 <ecall_update_response_loc>:
    2063:	f3 0f 1e fa          	endbr64 
    2067:	53                   	push   %rbx
    2068:	be 10 00 00 00       	mov    $0x10,%esi
    206d:	48 89 fb             	mov    %rdi,%rbx
    2070:	e8 db 3a 00 00       	call   5b50 <sgx_is_outside_enclave>
    2075:	85 c0                	test   %eax,%eax
    2077:	74 44                	je     20bd <ecall_update_response_loc+0x5a>
    2079:	0f 10 03             	movups (%rbx),%xmm0
    207c:	be 04 00 00 00       	mov    $0x4,%esi
    2081:	66 48 0f 7e c7       	movq   %xmm0,%rdi
    2086:	0f 29 05 d3 80 01 00 	movaps %xmm0,0x180d3(%rip)        # 1a160 <msp>
    208d:	e8 be 3a 00 00       	call   5b50 <sgx_is_outside_enclave>
    2092:	85 c0                	test   %eax,%eax
    2094:	75 12                	jne    20a8 <ecall_update_response_loc+0x45>
    2096:	31 c0                	xor    %eax,%eax
    2098:	48 89 05 c1 80 01 00 	mov    %rax,0x180c1(%rip)        # 1a160 <msp>
    209f:	48 89 05 c2 80 01 00 	mov    %rax,0x180c2(%rip)        # 1a168 <msp+0x8>
    20a6:	eb 15                	jmp    20bd <ecall_update_response_loc+0x5a>
    20a8:	48 8b 3d b9 80 01 00 	mov    0x180b9(%rip),%rdi        # 1a168 <msp+0x8>
    20af:	be 04 00 00 00       	mov    $0x4,%esi
    20b4:	e8 97 3a 00 00       	call   5b50 <sgx_is_outside_enclave>
    20b9:	85 c0                	test   %eax,%eax
    20bb:	74 d9                	je     2096 <ecall_update_response_loc+0x33>
    20bd:	5b                   	pop    %rbx
    20be:	c3                   	ret    

00000000000020bf <ecall_compute_response>:
    20bf:	f3 0f 1e fa          	endbr64 
    20c3:	48 8b 05 96 80 01 00 	mov    0x18096(%rip),%rax        # 1a160 <msp>
    20ca:	8d 14 37             	lea    (%rdi,%rsi,1),%edx
    20cd:	0f af fe             	imul   %esi,%edi
    20d0:	89 10                	mov    %edx,(%rax)
    20d2:	48 8b 05 8f 80 01 00 	mov    0x1808f(%rip),%rax        # 1a168 <msp+0x8>
    20d9:	89 38                	mov    %edi,(%rax)
    20db:	c3                   	ret    

00000000000020dc <ecall_get_response>:
    20dc:	f3 0f 1e fa          	endbr64 
    20e0:	50                   	push   %rax
    20e1:	48 8b 05 78 80 01 00 	mov    0x18078(%rip),%rax        # 1a160 <msp>
    20e8:	48 8d 3d 11 0f 01 00 	lea    0x10f11(%rip),%rdi        # 13000 <second_phase+0xc50>
    20ef:	48 63 30             	movslq (%rax),%rsi
    20f2:	31 c0                	xor    %eax,%eax
    20f4:	e8 3a 21 00 00       	call   4233 <ocall_print_address>
    20f9:	48 8b 05 68 80 01 00 	mov    0x18068(%rip),%rax        # 1a168 <msp+0x8>
    2100:	48 8d 3d fe 0e 01 00 	lea    0x10efe(%rip),%rdi        # 13005 <second_phase+0xc55>
    2107:	48 63 30             	movslq (%rax),%rsi
    210a:	31 c0                	xor    %eax,%eax
    210c:	5a                   	pop    %rdx
    210d:	e9 21 21 00 00       	jmp    4233 <ocall_print_address>

0000000000002112 <ecall_check_secret>:
    2112:	f3 0f 1e fa          	endbr64 
    2116:	39 3d e4 5e 01 00    	cmp    %edi,0x15ee4(%rip)        # 18000 <secret>
    211c:	75 09                	jne    2127 <ecall_check_secret+0x15>
    211e:	48 8d 3d e6 0e 01 00 	lea    0x10ee6(%rip),%rdi        # 1300b <second_phase+0xc5b>
    2125:	eb 07                	jmp    212e <ecall_check_secret+0x1c>
    2127:	48 8d 3d e7 0e 01 00 	lea    0x10ee7(%rip),%rdi        # 13015 <second_phase+0xc65>
    212e:	31 c0                	xor    %eax,%eax
    2130:	e9 15 20 00 00       	jmp    414a <ocall_print>
    2135:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    213c:	00 00 00 
    213f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2146:	00 00 00 
    2149:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2150:	00 00 00 
    2153:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    215a:	00 00 00 
    215d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2164:	00 00 00 
    2167:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    216e:	00 00 00 
    2171:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2178:	00 00 00 
    217b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2182:	00 00 00 
    2185:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    218c:	00 00 00 
    218f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2196:	00 00 00 
    2199:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21a0:	00 00 00 
    21a3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21aa:	00 00 00 
    21ad:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21b4:	00 00 00 
    21b7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21be:	00 00 00 
    21c1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21c8:	00 00 00 
    21cb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21d2:	00 00 00 
    21d5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21dc:	00 00 00 
    21df:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21e6:	00 00 00 
    21e9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21f0:	00 00 00 
    21f3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21fa:	00 00 00 
    21fd:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2204:	00 00 00 
    2207:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    220e:	00 00 00 
    2211:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2218:	00 00 00 
    221b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2222:	00 00 00 
    2225:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    222c:	00 00 00 
    222f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2236:	00 00 00 
    2239:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2240:	00 00 00 
    2243:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    224a:	00 00 00 
    224d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2254:	00 00 00 
    2257:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    225e:	00 00 00 
    2261:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2268:	00 00 00 
    226b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2272:	00 00 00 
    2275:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    227c:	00 00 00 
    227f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2286:	00 00 00 
    2289:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2290:	00 00 00 
    2293:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    229a:	00 00 00 
    229d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22a4:	00 00 00 
    22a7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22ae:	00 00 00 
    22b1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22b8:	00 00 00 
    22bb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22c2:	00 00 00 
    22c5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22cc:	00 00 00 
    22cf:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22d6:	00 00 00 
    22d9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22e0:	00 00 00 
    22e3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22ea:	00 00 00 
    22ed:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22f4:	00 00 00 
    22f7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22fe:	00 00 00 
    2301:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2308:	00 00 00 
    230b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2312:	00 00 00 
    2315:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    231c:	00 00 00 
    231f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2326:	00 00 00 
    2329:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2330:	00 00 00 
    2333:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    233a:	00 00 00 
    233d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2344:	00 00 00 
    2347:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    234e:	00 00 00 
    2351:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2358:	00 00 00 
    235b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2362:	00 00 00 
    2365:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    236c:	00 00 00 
    236f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2376:	00 00 00 
    2379:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2380:	00 00 00 
    2383:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    238a:	00 00 00 
    238d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2394:	00 00 00 
    2397:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    239e:	00 00 00 
    23a1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23a8:	00 00 00 
    23ab:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23b2:	00 00 00 
    23b5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23bc:	00 00 00 
    23bf:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23c6:	00 00 00 
    23c9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23d0:	00 00 00 
    23d3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23da:	00 00 00 
    23dd:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23e4:	00 00 00 
    23e7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23ee:	00 00 00 
    23f1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23f8:	00 00 00 
    23fb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2402:	00 00 00 
    2405:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    240c:	00 00 00 
    240f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2416:	00 00 00 
    2419:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2420:	00 00 00 
    2423:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    242a:	00 00 00 
    242d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2434:	00 00 00 
    2437:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    243e:	00 00 00 
    2441:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2448:	00 00 00 
    244b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2452:	00 00 00 
    2455:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    245c:	00 00 00 
    245f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2466:	00 00 00 
    2469:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2470:	00 00 00 
    2473:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    247a:	00 00 00 
    247d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2484:	00 00 00 
    2487:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    248e:	00 00 00 
    2491:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2498:	00 00 00 
    249b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24a2:	00 00 00 
    24a5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24ac:	00 00 00 
    24af:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24b6:	00 00 00 
    24b9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24c0:	00 00 00 
    24c3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24ca:	00 00 00 
    24cd:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24d4:	00 00 00 
    24d7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24de:	00 00 00 
    24e1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24e8:	00 00 00 
    24eb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24f2:	00 00 00 
    24f5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24fc:	00 00 00 
    24ff:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2506:	00 00 00 
    2509:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2510:	00 00 00 
    2513:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    251a:	00 00 00 
    251d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2524:	00 00 00 
    2527:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    252e:	00 00 00 
    2531:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2538:	00 00 00 
    253b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2542:	00 00 00 
    2545:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    254c:	00 00 00 
    254f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2556:	00 00 00 
    2559:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2560:	00 00 00 
    2563:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    256a:	00 00 00 
    256d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2574:	00 00 00 
    2577:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    257e:	00 00 00 
    2581:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2588:	00 00 00 
    258b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2592:	00 00 00 
    2595:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    259c:	00 00 00 
    259f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25a6:	00 00 00 
    25a9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25b0:	00 00 00 
    25b3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25ba:	00 00 00 
    25bd:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25c4:	00 00 00 
    25c7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25ce:	00 00 00 
    25d1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25d8:	00 00 00 
    25db:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25e2:	00 00 00 
    25e5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25ec:	00 00 00 
    25ef:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25f6:	00 00 00 
    25f9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2600:	00 00 00 
    2603:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    260a:	00 00 00 
    260d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2614:	00 00 00 
    2617:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    261e:	00 00 00 
    2621:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2628:	00 00 00 
    262b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2632:	00 00 00 
    2635:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    263c:	00 00 00 
    263f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2646:	00 00 00 
    2649:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2650:	00 00 00 
    2653:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    265a:	00 00 00 
    265d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2664:	00 00 00 
    2667:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    266e:	00 00 00 
    2671:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2678:	00 00 00 
    267b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2682:	00 00 00 
    2685:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    268c:	00 00 00 
    268f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2696:	00 00 00 
    2699:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26a0:	00 00 00 
    26a3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26aa:	00 00 00 
    26ad:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26b4:	00 00 00 
    26b7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26be:	00 00 00 
    26c1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26c8:	00 00 00 
    26cb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26d2:	00 00 00 
    26d5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26dc:	00 00 00 
    26df:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26e6:	00 00 00 
    26e9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26f0:	00 00 00 
    26f3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26fa:	00 00 00 
    26fd:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2704:	00 00 00 
    2707:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    270e:	00 00 00 
    2711:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2718:	00 00 00 
    271b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2722:	00 00 00 
    2725:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    272c:	00 00 00 
    272f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2736:	00 00 00 
    2739:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2740:	00 00 00 
    2743:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    274a:	00 00 00 
    274d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2754:	00 00 00 
    2757:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    275e:	00 00 00 
    2761:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2768:	00 00 00 
    276b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2772:	00 00 00 
    2775:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    277c:	00 00 00 
    277f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2786:	00 00 00 
    2789:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2790:	00 00 00 
    2793:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    279a:	00 00 00 
    279d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27a4:	00 00 00 
    27a7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27ae:	00 00 00 
    27b1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27b8:	00 00 00 
    27bb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27c2:	00 00 00 
    27c5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27cc:	00 00 00 
    27cf:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27d6:	00 00 00 
    27d9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27e0:	00 00 00 
    27e3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27ea:	00 00 00 
    27ed:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27f4:	00 00 00 
    27f7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27fe:	00 00 00 
    2801:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2808:	00 00 00 
    280b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2812:	00 00 00 
    2815:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    281c:	00 00 00 
    281f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2826:	00 00 00 
    2829:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2830:	00 00 00 
    2833:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    283a:	00 00 00 
    283d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2844:	00 00 00 
    2847:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    284e:	00 00 00 
    2851:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2858:	00 00 00 
    285b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2862:	00 00 00 
    2865:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    286c:	00 00 00 
    286f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2876:	00 00 00 
    2879:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2880:	00 00 00 
    2883:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    288a:	00 00 00 
    288d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2894:	00 00 00 
    2897:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    289e:	00 00 00 
    28a1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28a8:	00 00 00 
    28ab:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28b2:	00 00 00 
    28b5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28bc:	00 00 00 
    28bf:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28c6:	00 00 00 
    28c9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28d0:	00 00 00 
    28d3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28da:	00 00 00 
    28dd:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28e4:	00 00 00 
    28e7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28ee:	00 00 00 
    28f1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28f8:	00 00 00 
    28fb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2902:	00 00 00 
    2905:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    290c:	00 00 00 
    290f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2916:	00 00 00 
    2919:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2920:	00 00 00 
    2923:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    292a:	00 00 00 
    292d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2934:	00 00 00 
    2937:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    293e:	00 00 00 
    2941:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2948:	00 00 00 
    294b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2952:	00 00 00 
    2955:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    295c:	00 00 00 
    295f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2966:	00 00 00 
    2969:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2970:	00 00 00 
    2973:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    297a:	00 00 00 
    297d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2984:	00 00 00 
    2987:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    298e:	00 00 00 
    2991:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2998:	00 00 00 
    299b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29a2:	00 00 00 
    29a5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29ac:	00 00 00 
    29af:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29b6:	00 00 00 
    29b9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29c0:	00 00 00 
    29c3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29ca:	00 00 00 
    29cd:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29d4:	00 00 00 
    29d7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29de:	00 00 00 
    29e1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29e8:	00 00 00 
    29eb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29f2:	00 00 00 
    29f5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29fc:	00 00 00 
    29ff:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a06:	00 00 00 
    2a09:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a10:	00 00 00 
    2a13:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a1a:	00 00 00 
    2a1d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a24:	00 00 00 
    2a27:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a2e:	00 00 00 
    2a31:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a38:	00 00 00 
    2a3b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a42:	00 00 00 
    2a45:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a4c:	00 00 00 
    2a4f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a56:	00 00 00 
    2a59:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a60:	00 00 00 
    2a63:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a6a:	00 00 00 
    2a6d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a74:	00 00 00 
    2a77:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a7e:	00 00 00 
    2a81:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a88:	00 00 00 
    2a8b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a92:	00 00 00 
    2a95:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a9c:	00 00 00 
    2a9f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2aa6:	00 00 00 
    2aa9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ab0:	00 00 00 
    2ab3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2aba:	00 00 00 
    2abd:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ac4:	00 00 00 
    2ac7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ace:	00 00 00 
    2ad1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ad8:	00 00 00 
    2adb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ae2:	00 00 00 
    2ae5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2aec:	00 00 00 
    2aef:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2af6:	00 00 00 
    2af9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b00:	00 00 00 
    2b03:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b0a:	00 00 00 
    2b0d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b14:	00 00 00 
    2b17:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b1e:	00 00 00 
    2b21:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b28:	00 00 00 
    2b2b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b32:	00 00 00 
    2b35:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b3c:	00 00 00 
    2b3f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b46:	00 00 00 
    2b49:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b50:	00 00 00 
    2b53:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b5a:	00 00 00 
    2b5d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b64:	00 00 00 
    2b67:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b6e:	00 00 00 
    2b71:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b78:	00 00 00 
    2b7b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b82:	00 00 00 
    2b85:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b8c:	00 00 00 
    2b8f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b96:	00 00 00 
    2b99:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ba0:	00 00 00 
    2ba3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2baa:	00 00 00 
    2bad:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2bb4:	00 00 00 
    2bb7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2bbe:	00 00 00 
    2bc1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2bc8:	00 00 00 
    2bcb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2bd2:	00 00 00 
    2bd5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2bdc:	00 00 00 
    2bdf:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2be6:	00 00 00 
    2be9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2bf0:	00 00 00 
    2bf3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2bfa:	00 00 00 
    2bfd:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c04:	00 00 00 
    2c07:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c0e:	00 00 00 
    2c11:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c18:	00 00 00 
    2c1b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c22:	00 00 00 
    2c25:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c2c:	00 00 00 
    2c2f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c36:	00 00 00 
    2c39:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c40:	00 00 00 
    2c43:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c4a:	00 00 00 
    2c4d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c54:	00 00 00 
    2c57:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c5e:	00 00 00 
    2c61:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c68:	00 00 00 
    2c6b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c72:	00 00 00 
    2c75:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c7c:	00 00 00 
    2c7f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c86:	00 00 00 
    2c89:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c90:	00 00 00 
    2c93:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c9a:	00 00 00 
    2c9d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ca4:	00 00 00 
    2ca7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2cae:	00 00 00 
    2cb1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2cb8:	00 00 00 
    2cbb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2cc2:	00 00 00 
    2cc5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ccc:	00 00 00 
    2ccf:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2cd6:	00 00 00 
    2cd9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ce0:	00 00 00 
    2ce3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2cea:	00 00 00 
    2ced:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2cf4:	00 00 00 
    2cf7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2cfe:	00 00 00 
    2d01:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d08:	00 00 00 
    2d0b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d12:	00 00 00 
    2d15:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d1c:	00 00 00 
    2d1f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d26:	00 00 00 
    2d29:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d30:	00 00 00 
    2d33:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d3a:	00 00 00 
    2d3d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d44:	00 00 00 
    2d47:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d4e:	00 00 00 
    2d51:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d58:	00 00 00 
    2d5b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d62:	00 00 00 
    2d65:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d6c:	00 00 00 
    2d6f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d76:	00 00 00 
    2d79:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d80:	00 00 00 
    2d83:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d8a:	00 00 00 
    2d8d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d94:	00 00 00 
    2d97:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d9e:	00 00 00 
    2da1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2da8:	00 00 00 
    2dab:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2db2:	00 00 00 
    2db5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2dbc:	00 00 00 
    2dbf:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2dc6:	00 00 00 
    2dc9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2dd0:	00 00 00 
    2dd3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2dda:	00 00 00 
    2ddd:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2de4:	00 00 00 
    2de7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2dee:	00 00 00 
    2df1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2df8:	00 00 00 
    2dfb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e02:	00 00 00 
    2e05:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e0c:	00 00 00 
    2e0f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e16:	00 00 00 
    2e19:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e20:	00 00 00 
    2e23:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e2a:	00 00 00 
    2e2d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e34:	00 00 00 
    2e37:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e3e:	00 00 00 
    2e41:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e48:	00 00 00 
    2e4b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e52:	00 00 00 
    2e55:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e5c:	00 00 00 
    2e5f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e66:	00 00 00 
    2e69:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e70:	00 00 00 
    2e73:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e7a:	00 00 00 
    2e7d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e84:	00 00 00 
    2e87:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e8e:	00 00 00 
    2e91:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e98:	00 00 00 
    2e9b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ea2:	00 00 00 
    2ea5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2eac:	00 00 00 
    2eaf:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2eb6:	00 00 00 
    2eb9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ec0:	00 00 00 
    2ec3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2eca:	00 00 00 
    2ecd:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ed4:	00 00 00 
    2ed7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ede:	00 00 00 
    2ee1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ee8:	00 00 00 
    2eeb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ef2:	00 00 00 
    2ef5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2efc:	00 00 00 
    2eff:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f06:	00 00 00 
    2f09:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f10:	00 00 00 
    2f13:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f1a:	00 00 00 
    2f1d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f24:	00 00 00 
    2f27:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f2e:	00 00 00 
    2f31:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f38:	00 00 00 
    2f3b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f42:	00 00 00 
    2f45:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f4c:	00 00 00 
    2f4f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f56:	00 00 00 
    2f59:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f60:	00 00 00 
    2f63:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f6a:	00 00 00 
    2f6d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f74:	00 00 00 
    2f77:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f7e:	00 00 00 
    2f81:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f88:	00 00 00 
    2f8b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f92:	00 00 00 
    2f95:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f9c:	00 00 00 
    2f9f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2fa6:	00 00 00 
    2fa9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2fb0:	00 00 00 
    2fb3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2fba:	00 00 00 
    2fbd:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2fc4:	00 00 00 
    2fc7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2fce:	00 00 00 
    2fd1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2fd8:	00 00 00 
    2fdb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2fe2:	00 00 00 
    2fe5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2fec:	00 00 00 
    2fef:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ff6:	00 00 00 
    2ff9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000003000 <test_dummy>:
    3000:	b8 00 00 00 00       	mov    $0x0,%eax
    3005:	c3                   	ret    
	...

0000000000004006 <sgx_ecall_get_response>:
    4006:	f3 0f 1e fa          	endbr64 
    400a:	48 85 ff             	test   %rdi,%rdi
    400d:	75 0a                	jne    4019 <sgx_ecall_get_response+0x13>
    400f:	50                   	push   %rax
    4010:	e8 c7 e0 ff ff       	call   20dc <ecall_get_response>
    4015:	31 c0                	xor    %eax,%eax
    4017:	5a                   	pop    %rdx
    4018:	c3                   	ret    
    4019:	b8 02 00 00 00       	mov    $0x2,%eax
    401e:	c3                   	ret    

000000000000401f <sgx_ecall_check_secret>:
    401f:	f3 0f 1e fa          	endbr64 
    4023:	48 85 ff             	test   %rdi,%rdi
    4026:	74 53                	je     407b <sgx_ecall_check_secret+0x5c>
    4028:	53                   	push   %rbx
    4029:	be 04 00 00 00       	mov    $0x4,%esi
    402e:	48 89 fb             	mov    %rdi,%rbx
    4031:	48 83 ec 10          	sub    $0x10,%rsp
    4035:	e8 16 1b 00 00       	call   5b50 <sgx_is_outside_enclave>
    403a:	85 c0                	test   %eax,%eax
    403c:	75 07                	jne    4045 <sgx_ecall_check_secret+0x26>
    403e:	b8 02 00 00 00       	mov    $0x2,%eax
    4043:	eb 30                	jmp    4075 <sgx_ecall_check_secret+0x56>
    4045:	0f ae e8             	lfence 
    4048:	48 89 da             	mov    %rbx,%rdx
    404b:	48 8d 7c 24 0c       	lea    0xc(%rsp),%rdi
    4050:	b9 04 00 00 00       	mov    $0x4,%ecx
    4055:	be 04 00 00 00       	mov    $0x4,%esi
    405a:	e8 51 cb 00 00       	call   10bb0 <memcpy_s>
    405f:	89 c2                	mov    %eax,%edx
    4061:	b8 01 00 00 00       	mov    $0x1,%eax
    4066:	85 d2                	test   %edx,%edx
    4068:	75 0b                	jne    4075 <sgx_ecall_check_secret+0x56>
    406a:	8b 7c 24 0c          	mov    0xc(%rsp),%edi
    406e:	e8 9f e0 ff ff       	call   2112 <ecall_check_secret>
    4073:	31 c0                	xor    %eax,%eax
    4075:	48 83 c4 10          	add    $0x10,%rsp
    4079:	5b                   	pop    %rbx
    407a:	c3                   	ret    
    407b:	b8 02 00 00 00       	mov    $0x2,%eax
    4080:	c3                   	ret    

0000000000004081 <sgx_ecall_compute_response>:
    4081:	f3 0f 1e fa          	endbr64 
    4085:	48 85 ff             	test   %rdi,%rdi
    4088:	74 57                	je     40e1 <sgx_ecall_compute_response+0x60>
    408a:	53                   	push   %rbx
    408b:	be 08 00 00 00       	mov    $0x8,%esi
    4090:	48 89 fb             	mov    %rdi,%rbx
    4093:	48 83 ec 10          	sub    $0x10,%rsp
    4097:	e8 b4 1a 00 00       	call   5b50 <sgx_is_outside_enclave>
    409c:	85 c0                	test   %eax,%eax
    409e:	75 07                	jne    40a7 <sgx_ecall_compute_response+0x26>
    40a0:	b8 02 00 00 00       	mov    $0x2,%eax
    40a5:	eb 34                	jmp    40db <sgx_ecall_compute_response+0x5a>
    40a7:	0f ae e8             	lfence 
    40aa:	48 89 da             	mov    %rbx,%rdx
    40ad:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    40b2:	b9 08 00 00 00       	mov    $0x8,%ecx
    40b7:	be 08 00 00 00       	mov    $0x8,%esi
    40bc:	e8 ef ca 00 00       	call   10bb0 <memcpy_s>
    40c1:	89 c2                	mov    %eax,%edx
    40c3:	b8 01 00 00 00       	mov    $0x1,%eax
    40c8:	85 d2                	test   %edx,%edx
    40ca:	75 0f                	jne    40db <sgx_ecall_compute_response+0x5a>
    40cc:	8b 74 24 0c          	mov    0xc(%rsp),%esi
    40d0:	8b 7c 24 08          	mov    0x8(%rsp),%edi
    40d4:	e8 e6 df ff ff       	call   20bf <ecall_compute_response>
    40d9:	31 c0                	xor    %eax,%eax
    40db:	48 83 c4 10          	add    $0x10,%rsp
    40df:	5b                   	pop    %rbx
    40e0:	c3                   	ret    
    40e1:	b8 02 00 00 00       	mov    $0x2,%eax
    40e6:	c3                   	ret    

00000000000040e7 <sgx_ecall_update_response_loc>:
    40e7:	f3 0f 1e fa          	endbr64 
    40eb:	48 85 ff             	test   %rdi,%rdi
    40ee:	74 54                	je     4144 <sgx_ecall_update_response_loc+0x5d>
    40f0:	53                   	push   %rbx
    40f1:	be 08 00 00 00       	mov    $0x8,%esi
    40f6:	48 89 fb             	mov    %rdi,%rbx
    40f9:	48 83 ec 10          	sub    $0x10,%rsp
    40fd:	e8 4e 1a 00 00       	call   5b50 <sgx_is_outside_enclave>
    4102:	85 c0                	test   %eax,%eax
    4104:	75 07                	jne    410d <sgx_ecall_update_response_loc+0x26>
    4106:	b8 02 00 00 00       	mov    $0x2,%eax
    410b:	eb 31                	jmp    413e <sgx_ecall_update_response_loc+0x57>
    410d:	0f ae e8             	lfence 
    4110:	48 89 da             	mov    %rbx,%rdx
    4113:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    4118:	b9 08 00 00 00       	mov    $0x8,%ecx
    411d:	be 08 00 00 00       	mov    $0x8,%esi
    4122:	e8 89 ca 00 00       	call   10bb0 <memcpy_s>
    4127:	89 c2                	mov    %eax,%edx
    4129:	b8 01 00 00 00       	mov    $0x1,%eax
    412e:	85 d2                	test   %edx,%edx
    4130:	75 0c                	jne    413e <sgx_ecall_update_response_loc+0x57>
    4132:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    4137:	e8 27 df ff ff       	call   2063 <ecall_update_response_loc>
    413c:	31 c0                	xor    %eax,%eax
    413e:	48 83 c4 10          	add    $0x10,%rsp
    4142:	5b                   	pop    %rbx
    4143:	c3                   	ret    
    4144:	b8 02 00 00 00       	mov    $0x2,%eax
    4149:	c3                   	ret    

000000000000414a <ocall_print>:
    414a:	f3 0f 1e fa          	endbr64 
    414e:	41 55                	push   %r13
    4150:	41 54                	push   %r12
    4152:	55                   	push   %rbp
    4153:	31 ed                	xor    %ebp,%ebp
    4155:	53                   	push   %rbx
    4156:	48 89 fb             	mov    %rdi,%rbx
    4159:	48 83 ec 28          	sub    $0x28,%rsp
    415d:	48 85 ff             	test   %rdi,%rdi
    4160:	74 09                	je     416b <ocall_print+0x21>
    4162:	e8 f9 c7 00 00       	call   10960 <strlen>
    4167:	48 8d 68 01          	lea    0x1(%rax),%rbp
    416b:	31 c9                	xor    %ecx,%ecx
    416d:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
    4172:	48 85 db             	test   %rbx,%rbx
    4175:	74 1c                	je     4193 <ocall_print+0x49>
    4177:	48 89 ee             	mov    %rbp,%rsi
    417a:	48 89 df             	mov    %rbx,%rdi
    417d:	49 89 ed             	mov    %rbp,%r13
    4180:	e8 6b 19 00 00       	call   5af0 <sgx_is_within_enclave>
    4185:	85 c0                	test   %eax,%eax
    4187:	75 0d                	jne    4196 <ocall_print+0x4c>
    4189:	b8 02 00 00 00       	mov    $0x2,%eax
    418e:	e9 95 00 00 00       	jmp    4228 <ocall_print+0xde>
    4193:	45 31 ed             	xor    %r13d,%r13d
    4196:	49 8d 7d 08          	lea    0x8(%r13),%rdi
    419a:	48 39 ef             	cmp    %rbp,%rdi
    419d:	73 05                	jae    41a4 <ocall_print+0x5a>
    419f:	48 85 db             	test   %rbx,%rbx
    41a2:	75 e5                	jne    4189 <ocall_print+0x3f>
    41a4:	e8 07 1a 00 00       	call   5bb0 <sgx_ocalloc>
    41a9:	49 89 c4             	mov    %rax,%r12
    41ac:	48 85 c0             	test   %rax,%rax
    41af:	75 13                	jne    41c4 <ocall_print+0x7a>
    41b1:	31 d2                	xor    %edx,%edx
    41b3:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
    41b8:	e8 d3 1a 00 00       	call   5c90 <sgx_ocfree>
    41bd:	b8 01 00 00 00       	mov    $0x1,%eax
    41c2:	eb 64                	jmp    4228 <ocall_print+0xde>
    41c4:	48 8d 40 08          	lea    0x8(%rax),%rax
    41c8:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    41cd:	48 85 db             	test   %rbx,%rbx
    41d0:	74 39                	je     420b <ocall_print+0xc1>
    41d2:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
    41d7:	b9 08 00 00 00       	mov    $0x8,%ecx
    41dc:	be 08 00 00 00       	mov    $0x8,%esi
    41e1:	4c 89 e7             	mov    %r12,%rdi
    41e4:	e8 47 ca 00 00       	call   10c30 <memcpy_verw_s>
    41e9:	85 c0                	test   %eax,%eax
    41eb:	75 cb                	jne    41b8 <ocall_print+0x6e>
    41ed:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    41f2:	48 89 e9             	mov    %rbp,%rcx
    41f5:	48 89 da             	mov    %rbx,%rdx
    41f8:	4c 89 ee             	mov    %r13,%rsi
    41fb:	e8 30 ca 00 00       	call   10c30 <memcpy_verw_s>
    4200:	85 c0                	test   %eax,%eax
    4202:	75 b4                	jne    41b8 <ocall_print+0x6e>
    4204:	48 01 6c 24 18       	add    %rbp,0x18(%rsp)
    4209:	eb 06                	jmp    4211 <ocall_print+0xc7>
    420b:	31 c0                	xor    %eax,%eax
    420d:	49 89 04 24          	mov    %rax,(%r12)
    4211:	4c 89 e6             	mov    %r12,%rsi
    4214:	31 ff                	xor    %edi,%edi
    4216:	e8 85 2f 00 00       	call   71a0 <sgx_ocall>
    421b:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    421f:	e8 6c 1a 00 00       	call   5c90 <sgx_ocfree>
    4224:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    4228:	48 83 c4 28          	add    $0x28,%rsp
    422c:	5b                   	pop    %rbx
    422d:	5d                   	pop    %rbp
    422e:	41 5c                	pop    %r12
    4230:	41 5d                	pop    %r13
    4232:	c3                   	ret    

0000000000004233 <ocall_print_address>:
    4233:	f3 0f 1e fa          	endbr64 
    4237:	41 55                	push   %r13
    4239:	41 54                	push   %r12
    423b:	45 31 e4             	xor    %r12d,%r12d
    423e:	55                   	push   %rbp
    423f:	53                   	push   %rbx
    4240:	48 89 fb             	mov    %rdi,%rbx
    4243:	48 83 ec 28          	sub    $0x28,%rsp
    4247:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    424c:	48 85 ff             	test   %rdi,%rdi
    424f:	74 09                	je     425a <ocall_print_address+0x27>
    4251:	e8 0a c7 00 00       	call   10960 <strlen>
    4256:	4c 8d 60 01          	lea    0x1(%rax),%r12
    425a:	31 c9                	xor    %ecx,%ecx
    425c:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
    4261:	48 85 db             	test   %rbx,%rbx
    4264:	74 1c                	je     4282 <ocall_print_address+0x4f>
    4266:	4c 89 e6             	mov    %r12,%rsi
    4269:	48 89 df             	mov    %rbx,%rdi
    426c:	4d 89 e5             	mov    %r12,%r13
    426f:	e8 7c 18 00 00       	call   5af0 <sgx_is_within_enclave>
    4274:	85 c0                	test   %eax,%eax
    4276:	75 0d                	jne    4285 <ocall_print_address+0x52>
    4278:	b8 02 00 00 00       	mov    $0x2,%eax
    427d:	e9 b7 00 00 00       	jmp    4339 <ocall_print_address+0x106>
    4282:	45 31 ed             	xor    %r13d,%r13d
    4285:	49 8d 7d 10          	lea    0x10(%r13),%rdi
    4289:	4c 39 e7             	cmp    %r12,%rdi
    428c:	73 05                	jae    4293 <ocall_print_address+0x60>
    428e:	48 85 db             	test   %rbx,%rbx
    4291:	75 e5                	jne    4278 <ocall_print_address+0x45>
    4293:	e8 18 19 00 00       	call   5bb0 <sgx_ocalloc>
    4298:	48 89 c5             	mov    %rax,%rbp
    429b:	48 85 c0             	test   %rax,%rax
    429e:	75 16                	jne    42b6 <ocall_print_address+0x83>
    42a0:	31 d2                	xor    %edx,%edx
    42a2:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
    42a7:	e8 e4 19 00 00       	call   5c90 <sgx_ocfree>
    42ac:	b8 01 00 00 00       	mov    $0x1,%eax
    42b1:	e9 83 00 00 00       	jmp    4339 <ocall_print_address+0x106>
    42b6:	48 8d 40 10          	lea    0x10(%rax),%rax
    42ba:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    42bf:	48 85 db             	test   %rbx,%rbx
    42c2:	74 39                	je     42fd <ocall_print_address+0xca>
    42c4:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
    42c9:	b9 08 00 00 00       	mov    $0x8,%ecx
    42ce:	be 08 00 00 00       	mov    $0x8,%esi
    42d3:	48 89 ef             	mov    %rbp,%rdi
    42d6:	e8 55 c9 00 00       	call   10c30 <memcpy_verw_s>
    42db:	85 c0                	test   %eax,%eax
    42dd:	75 c8                	jne    42a7 <ocall_print_address+0x74>
    42df:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    42e4:	4c 89 e1             	mov    %r12,%rcx
    42e7:	48 89 da             	mov    %rbx,%rdx
    42ea:	4c 89 ee             	mov    %r13,%rsi
    42ed:	e8 3e c9 00 00       	call   10c30 <memcpy_verw_s>
    42f2:	85 c0                	test   %eax,%eax
    42f4:	75 b1                	jne    42a7 <ocall_print_address+0x74>
    42f6:	4c 01 64 24 18       	add    %r12,0x18(%rsp)
    42fb:	eb 06                	jmp    4303 <ocall_print_address+0xd0>
    42fd:	31 c0                	xor    %eax,%eax
    42ff:	48 89 45 00          	mov    %rax,0x0(%rbp)
    4303:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
    4308:	48 8d 7d 08          	lea    0x8(%rbp),%rdi
    430c:	b9 08 00 00 00       	mov    $0x8,%ecx
    4311:	be 08 00 00 00       	mov    $0x8,%esi
    4316:	e8 15 c9 00 00       	call   10c30 <memcpy_verw_s>
    431b:	85 c0                	test   %eax,%eax
    431d:	75 88                	jne    42a7 <ocall_print_address+0x74>
    431f:	48 89 ee             	mov    %rbp,%rsi
    4322:	bf 01 00 00 00       	mov    $0x1,%edi
    4327:	e8 74 2e 00 00       	call   71a0 <sgx_ocall>
    432c:	89 44 24 04          	mov    %eax,0x4(%rsp)
    4330:	e8 5b 19 00 00       	call   5c90 <sgx_ocfree>
    4335:	8b 44 24 04          	mov    0x4(%rsp),%eax
    4339:	48 83 c4 28          	add    $0x28,%rsp
    433d:	5b                   	pop    %rbx
    433e:	5d                   	pop    %rbp
    433f:	41 5c                	pop    %r12
    4341:	41 5d                	pop    %r13
    4343:	c3                   	ret    
    4344:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    434b:	00 00 00 
    434e:	66 90                	xchg   %ax,%ax

0000000000004350 <register_value_select>:
    4350:	89 f1                	mov    %esi,%ecx
    4352:	31 c0                	xor    %eax,%eax
    4354:	48 83 f9 00          	cmp    $0x0,%rcx
    4358:	48 0f 44 07          	cmove  (%rdi),%rax
    435c:	48 83 f9 01          	cmp    $0x1,%rcx
    4360:	48 0f 44 47 08       	cmove  0x8(%rdi),%rax
    4365:	48 83 f9 02          	cmp    $0x2,%rcx
    4369:	48 0f 44 47 10       	cmove  0x10(%rdi),%rax
    436e:	48 83 f9 03          	cmp    $0x3,%rcx
    4372:	48 0f 44 47 18       	cmove  0x18(%rdi),%rax
    4377:	48 83 f9 04          	cmp    $0x4,%rcx
    437b:	48 0f 44 47 20       	cmove  0x20(%rdi),%rax
    4380:	48 83 f9 05          	cmp    $0x5,%rcx
    4384:	48 0f 44 47 28       	cmove  0x28(%rdi),%rax
    4389:	48 83 f9 06          	cmp    $0x6,%rcx
    438d:	48 0f 44 47 30       	cmove  0x30(%rdi),%rax
    4392:	48 83 f9 07          	cmp    $0x7,%rcx
    4396:	48 0f 44 47 38       	cmove  0x38(%rdi),%rax
    439b:	48 83 f9 08          	cmp    $0x8,%rcx
    439f:	48 0f 44 47 40       	cmove  0x40(%rdi),%rax
    43a4:	48 83 f9 09          	cmp    $0x9,%rcx
    43a8:	48 0f 44 47 48       	cmove  0x48(%rdi),%rax
    43ad:	48 83 f9 0a          	cmp    $0xa,%rcx
    43b1:	48 0f 44 47 50       	cmove  0x50(%rdi),%rax
    43b6:	48 83 f9 0b          	cmp    $0xb,%rcx
    43ba:	48 0f 44 47 58       	cmove  0x58(%rdi),%rax
    43bf:	48 83 f9 0c          	cmp    $0xc,%rcx
    43c3:	48 0f 44 47 60       	cmove  0x60(%rdi),%rax
    43c8:	48 83 f9 0d          	cmp    $0xd,%rcx
    43cc:	48 0f 44 47 68       	cmove  0x68(%rdi),%rax
    43d1:	48 83 f9 0e          	cmp    $0xe,%rcx
    43d5:	48 0f 44 47 70       	cmove  0x70(%rdi),%rax
    43da:	48 83 f9 0f          	cmp    $0xf,%rcx
    43de:	48 0f 44 47 78       	cmove  0x78(%rdi),%rax
    43e3:	c3                   	ret    
    43e4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    43eb:	00 00 00 
    43ee:	66 90                	xchg   %ax,%ax

00000000000043f0 <ct_decode>:
    43f0:	f3 0f 1e fa          	endbr64 
    43f4:	55                   	push   %rbp
    43f5:	48 89 e5             	mov    %rsp,%rbp
    43f8:	41 57                	push   %r15
    43fa:	41 56                	push   %r14
    43fc:	41 55                	push   %r13
    43fe:	41 54                	push   %r12
    4400:	53                   	push   %rbx
    4401:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    4405:	48 81 ec 40 05 00 00 	sub    $0x540,%rsp
    440c:	48 89 7c 24 78       	mov    %rdi,0x78(%rsp)
    4411:	48 89 74 24 50       	mov    %rsi,0x50(%rsp)
    4416:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    441d:	00 00 
    441f:	48 89 84 24 38 05 00 	mov    %rax,0x538(%rsp)
    4426:	00 
    4427:	31 c0                	xor    %eax,%eax
    4429:	48 8d 84 24 00 01 00 	lea    0x100(%rsp),%rax
    4430:	00 
    4431:	f6 05 fb 39 01 00 08 	testb  $0x8,0x139fb(%rip)        # 17e33 <g_cpu_feature_indicator+0x3>
    4438:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    443d:	0f 84 fd 0f 00 00    	je     5440 <ct_decode+0x1050>
    4443:	62 f1 7c 48 29 00    	vmovaps %zmm0,(%rax)
    4449:	62 f1 7c 48 29 48 01 	vmovaps %zmm1,0x40(%rax)
    4450:	62 f1 7c 48 29 50 02 	vmovaps %zmm2,0x80(%rax)
    4457:	62 f1 7c 48 29 58 03 	vmovaps %zmm3,0xc0(%rax)
    445e:	62 f1 7c 48 29 60 04 	vmovaps %zmm4,0x100(%rax)
    4465:	62 f1 7c 48 29 68 05 	vmovaps %zmm5,0x140(%rax)
    446c:	62 f1 7c 48 29 70 06 	vmovaps %zmm6,0x180(%rax)
    4473:	62 f1 7c 48 29 78 07 	vmovaps %zmm7,0x1c0(%rax)
    447a:	62 71 7c 48 29 40 08 	vmovaps %zmm8,0x200(%rax)
    4481:	62 71 7c 48 29 48 09 	vmovaps %zmm9,0x240(%rax)
    4488:	62 71 7c 48 29 50 0a 	vmovaps %zmm10,0x280(%rax)
    448f:	62 71 7c 48 29 58 0b 	vmovaps %zmm11,0x2c0(%rax)
    4496:	62 71 7c 48 29 60 0c 	vmovaps %zmm12,0x300(%rax)
    449d:	62 71 7c 48 29 68 0d 	vmovaps %zmm13,0x340(%rax)
    44a4:	62 71 7c 48 29 70 0e 	vmovaps %zmm14,0x380(%rax)
    44ab:	62 71 7c 48 29 78 0f 	vmovaps %zmm15,0x3c0(%rax)
    44b2:	48 8b 7c 24 78       	mov    0x78(%rsp),%rdi
    44b7:	31 c9                	xor    %ecx,%ecx
    44b9:	ba f0 0f 00 00       	mov    $0xff0,%edx
    44be:	48 be f0 f0 f0 f0 f0 	movabs $0xf0f0f0f0f0f0f0f0,%rsi
    44c5:	f0 f0 f0 
    44c8:	c4 e1 f9 6e c6       	vmovq  %rsi,%xmm0
    44cd:	c5 f9 6f 25 4b 3c 01 	vmovdqa 0x13c4b(%rip),%xmm4        # 18120 <standard>
    44d4:	00 
    44d5:	49 bb 80 80 80 80 80 	movabs $0x8080808080808080,%r11
    44dc:	80 80 80 
    44df:	c4 e3 5d 38 25 37 3b 	vinserti128 $0x1,0x13b37(%rip),%ymm4,%ymm4        # 18020 <extended>
    44e6:	01 00 01 
    44e9:	4c 8b b7 88 00 00 00 	mov    0x88(%rdi),%r14
    44f0:	c4 e2 7d 59 c0       	vpbroadcastq %xmm0,%ymm0
    44f5:	c5 79 6f 2d 43 3c 01 	vmovdqa 0x13c43(%rip),%xmm13        # 18140 <standard+0x20>
    44fc:	00 
    44fd:	48 bf ff ff ff ff ff 	movabs $0xffffffffffff,%rdi
    4504:	ff 00 00 
    4507:	c4 63 15 38 2d 2f 3b 	vinserti128 $0x1,0x13b2f(%rip),%ymm13,%ymm13        # 18040 <extended+0x20>
    450e:	01 00 01 
    4511:	c5 79 6f 25 57 3c 01 	vmovdqa 0x13c57(%rip),%xmm12        # 18170 <standard+0x50>
    4518:	00 
    4519:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    451f:	41 b8 03 00 00 00    	mov    $0x3,%r8d
    4525:	4c 89 f0             	mov    %r14,%rax
    4528:	c5 79 6f 1d 50 3c 01 	vmovdqa 0x13c50(%rip),%xmm11        # 18180 <standard+0x60>
    452f:	00 
    4530:	c4 63 1d 38 25 36 3b 	vinserti128 $0x1,0x13b36(%rip),%ymm12,%ymm12        # 18070 <extended+0x50>
    4537:	01 00 01 
    453a:	4c 89 74 24 68       	mov    %r14,0x68(%rsp)
    453f:	25 ff 0f 00 00       	and    $0xfff,%eax
    4544:	c5 79 6f 15 44 3c 01 	vmovdqa 0x13c44(%rip),%xmm10        # 18190 <standard+0x70>
    454b:	00 
    454c:	c4 63 25 38 1d 2a 3b 	vinserti128 $0x1,0x13b2a(%rip),%ymm11,%ymm11        # 18080 <extended+0x60>
    4553:	01 00 01 
    4556:	48 3d f0 0f 00 00    	cmp    $0xff0,%rax
    455c:	c5 79 6f 0d 3c 3c 01 	vmovdqa 0x13c3c(%rip),%xmm9        # 181a0 <standard+0x80>
    4563:	00 
    4564:	c4 63 2d 38 15 22 3b 	vinserti128 $0x1,0x13b22(%rip),%ymm10,%ymm10        # 18090 <extended+0x70>
    456b:	01 00 01 
    456e:	0f 96 c1             	setbe  %cl
    4571:	c5 79 6f 05 37 3c 01 	vmovdqa 0x13c37(%rip),%xmm8        # 181b0 <standard+0x90>
    4578:	00 
    4579:	c4 63 35 38 0d 1d 3b 	vinserti128 $0x1,0x13b1d(%rip),%ymm9,%ymm9        # 180a0 <extended+0x80>
    4580:	01 00 01 
    4583:	48 83 f9 00          	cmp    $0x0,%rcx
    4587:	48 0f 45 d0          	cmovne %rax,%rdx
    458b:	31 c9                	xor    %ecx,%ecx
    458d:	48 3d f0 0f 00 00    	cmp    $0xff0,%rax
    4593:	c4 63 3d 38 05 13 3b 	vinserti128 $0x1,0x13b13(%rip),%ymm8,%ymm8        # 180b0 <extended+0x90>
    459a:	01 00 01 
    459d:	c5 79 6f 3d 3b 3c 01 	vmovdqa 0x13c3b(%rip),%xmm15        # 181e0 <standard+0xc0>
    45a4:	00 
    45a5:	0f 97 c1             	seta   %cl
    45a8:	45 31 e4             	xor    %r12d,%r12d
    45ab:	2d f0 0f 00 00       	sub    $0xff0,%eax
    45b0:	44 89 e3             	mov    %r12d,%ebx
    45b3:	45 89 e7             	mov    %r12d,%r15d
    45b6:	48 83 f9 00          	cmp    $0x0,%rcx
    45ba:	0f 45 d8             	cmovne %eax,%ebx
    45bd:	4c 89 f0             	mov    %r14,%rax
    45c0:	89 5c 24 4c          	mov    %ebx,0x4c(%rsp)
    45c4:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    45ca:	48 09 d0             	or     %rdx,%rax
    45cd:	c5 fa 6f 28          	vmovdqu (%rax),%xmm5
    45d1:	48 63 c3             	movslq %ebx,%rax
    45d4:	bb 02 00 00 00       	mov    $0x2,%ebx
    45d9:	c4 e1 f9 6e f8       	vmovq  %rax,%xmm7
    45de:	b8 10 00 00 00       	mov    $0x10,%eax
    45e3:	41 89 de             	mov    %ebx,%r14d
    45e6:	c5 d1 f3 ef          	vpsllq %xmm7,%xmm5,%xmm5
    45ea:	c4 c1 f9 6e fb       	vmovq  %r11,%xmm7
    45ef:	c4 e2 7d 59 df       	vpbroadcastq %xmm7,%ymm3
    45f4:	c4 e2 7d 59 cd       	vpbroadcastq %xmm5,%ymm1
    45f9:	c4 e1 f9 7e ea       	vmovq  %xmm5,%rdx
    45fe:	c5 fd df d1          	vpandn %ymm1,%ymm0,%ymm2
    4602:	c5 f5 db c8          	vpand  %ymm0,%ymm1,%ymm1
    4606:	c5 f9 ef c0          	vpxor  %xmm0,%xmm0,%xmm0
    460a:	49 89 d2             	mov    %rdx,%r10
    460d:	c5 f5 74 c0          	vpcmpeqb %ymm0,%ymm1,%ymm0
    4611:	c5 fd df c3          	vpandn %ymm3,%ymm0,%ymm0
    4615:	c5 fd eb c2          	vpor   %ymm2,%ymm0,%ymm0
    4619:	c4 62 5d 00 f0       	vpshufb %ymm0,%ymm4,%ymm14
    461e:	c5 f9 6e c0          	vmovd  %eax,%xmm0
    4622:	c5 f9 6f 25 06 3b 01 	vmovdqa 0x13b06(%rip),%xmm4        # 18130 <standard+0x10>
    4629:	00 
    462a:	c4 e3 5d 38 25 fc 39 	vinserti128 $0x1,0x139fc(%rip),%ymm4,%ymm4        # 18030 <extended+0x10>
    4631:	01 00 01 
    4634:	c4 e2 7d 78 c0       	vpbroadcastb %xmm0,%ymm0
    4639:	b8 20 00 00 00       	mov    $0x20,%eax
    463e:	c5 7d 7f b4 24 a0 00 	vmovdqa %ymm14,0xa0(%rsp)
    4645:	00 00 
    4647:	c5 f5 74 c0          	vpcmpeqb %ymm0,%ymm1,%ymm0
    464b:	c5 fd df c3          	vpandn %ymm3,%ymm0,%ymm0
    464f:	c5 fd eb c2          	vpor   %ymm2,%ymm0,%ymm0
    4653:	c4 e2 5d 00 f8       	vpshufb %ymm0,%ymm4,%ymm7
    4658:	c5 f9 6e c0          	vmovd  %eax,%xmm0
    465c:	b8 30 00 00 00       	mov    $0x30,%eax
    4661:	c5 f9 6f 25 e7 3a 01 	vmovdqa 0x13ae7(%rip),%xmm4        # 18150 <standard+0x30>
    4668:	00 
    4669:	c4 e3 5d 38 25 dd 39 	vinserti128 $0x1,0x139dd(%rip),%ymm4,%ymm4        # 18050 <extended+0x30>
    4670:	01 00 01 
    4673:	c4 e2 7d 78 c0       	vpbroadcastb %xmm0,%ymm0
    4678:	c5 fd 7f bc 24 e0 00 	vmovdqa %ymm7,0xe0(%rsp)
    467f:	00 00 
    4681:	c5 f9 6f 3d 37 3b 01 	vmovdqa 0x13b37(%rip),%xmm7        # 181c0 <standard+0xa0>
    4688:	00 
    4689:	c4 e3 45 38 3d 2d 3a 	vinserti128 $0x1,0x13a2d(%rip),%ymm7,%ymm7        # 180c0 <extended+0xa0>
    4690:	01 00 01 
    4693:	c5 f5 74 c0          	vpcmpeqb %ymm0,%ymm1,%ymm0
    4697:	c5 fd df c3          	vpandn %ymm3,%ymm0,%ymm0
    469b:	c5 fd eb c2          	vpor   %ymm2,%ymm0,%ymm0
    469f:	c4 62 15 00 e8       	vpshufb %ymm0,%ymm13,%ymm13
    46a4:	c5 f9 6e c0          	vmovd  %eax,%xmm0
    46a8:	b8 40 00 00 00       	mov    $0x40,%eax
    46ad:	c4 e2 7d 78 c0       	vpbroadcastb %xmm0,%ymm0
    46b2:	c5 f9 6e f0          	vmovd  %eax,%xmm6
    46b6:	b8 50 00 00 00       	mov    $0x50,%eax
    46bb:	c5 f5 74 c0          	vpcmpeqb %ymm0,%ymm1,%ymm0
    46bf:	c4 e2 7d 78 f6       	vpbroadcastb %xmm6,%ymm6
    46c4:	c5 f5 74 f6          	vpcmpeqb %ymm6,%ymm1,%ymm6
    46c8:	c5 fd df c3          	vpandn %ymm3,%ymm0,%ymm0
    46cc:	c5 fd eb c2          	vpor   %ymm2,%ymm0,%ymm0
    46d0:	c5 cd df f3          	vpandn %ymm3,%ymm6,%ymm6
    46d4:	c4 e2 5d 00 e0       	vpshufb %ymm0,%ymm4,%ymm4
    46d9:	c5 f9 6f 05 7f 3a 01 	vmovdqa 0x13a7f(%rip),%xmm0        # 18160 <standard+0x40>
    46e0:	00 
    46e1:	c5 cd eb f2          	vpor   %ymm2,%ymm6,%ymm6
    46e5:	c4 e3 7d 38 05 71 39 	vinserti128 $0x1,0x13971(%rip),%ymm0,%ymm0        # 18060 <extended+0x40>
    46ec:	01 00 01 
    46ef:	c4 e1 f9 7e e1       	vmovq  %xmm4,%rcx
    46f4:	c4 e3 7d 39 e4 01    	vextracti128 $0x1,%ymm4,%xmm4
    46fa:	c4 e2 7d 00 c6       	vpshufb %ymm6,%ymm0,%ymm0
    46ff:	c5 f9 6e f0          	vmovd  %eax,%xmm6
    4703:	b8 60 00 00 00       	mov    $0x60,%eax
    4708:	c4 e2 7d 78 f6       	vpbroadcastb %xmm6,%ymm6
    470d:	c5 f5 74 f6          	vpcmpeqb %ymm6,%ymm1,%ymm6
    4711:	c5 cd df f3          	vpandn %ymm3,%ymm6,%ymm6
    4715:	c5 cd eb f2          	vpor   %ymm2,%ymm6,%ymm6
    4719:	c4 62 1d 00 e6       	vpshufb %ymm6,%ymm12,%ymm12
    471e:	c5 f9 6e f0          	vmovd  %eax,%xmm6
    4722:	b8 70 00 00 00       	mov    $0x70,%eax
    4727:	c4 e2 7d 78 f6       	vpbroadcastb %xmm6,%ymm6
    472c:	c5 f5 74 f6          	vpcmpeqb %ymm6,%ymm1,%ymm6
    4730:	c5 cd df f3          	vpandn %ymm3,%ymm6,%ymm6
    4734:	c5 cd eb f2          	vpor   %ymm2,%ymm6,%ymm6
    4738:	c4 62 25 00 de       	vpshufb %ymm6,%ymm11,%ymm11
    473d:	c5 f9 6e f0          	vmovd  %eax,%xmm6
    4741:	b8 80 ff ff ff       	mov    $0xffffff80,%eax
    4746:	c4 e2 7d 78 f6       	vpbroadcastb %xmm6,%ymm6
    474b:	c5 f5 74 f6          	vpcmpeqb %ymm6,%ymm1,%ymm6
    474f:	c5 cd df f3          	vpandn %ymm3,%ymm6,%ymm6
    4753:	c5 cd eb f2          	vpor   %ymm2,%ymm6,%ymm6
    4757:	c4 62 2d 00 d6       	vpshufb %ymm6,%ymm10,%ymm10
    475c:	c5 f9 6e f0          	vmovd  %eax,%xmm6
    4760:	b8 90 ff ff ff       	mov    $0xffffff90,%eax
    4765:	c4 e2 7d 78 f6       	vpbroadcastb %xmm6,%ymm6
    476a:	c5 f5 74 f6          	vpcmpeqb %ymm6,%ymm1,%ymm6
    476e:	c5 cd df f3          	vpandn %ymm3,%ymm6,%ymm6
    4772:	c5 cd eb f2          	vpor   %ymm2,%ymm6,%ymm6
    4776:	c4 62 35 00 ce       	vpshufb %ymm6,%ymm9,%ymm9
    477b:	c5 f9 6e f0          	vmovd  %eax,%xmm6
    477f:	b8 a0 ff ff ff       	mov    $0xffffffa0,%eax
    4784:	c4 e2 7d 78 f6       	vpbroadcastb %xmm6,%ymm6
    4789:	c5 f5 74 f6          	vpcmpeqb %ymm6,%ymm1,%ymm6
    478d:	c5 cd df f3          	vpandn %ymm3,%ymm6,%ymm6
    4791:	c5 cd eb f2          	vpor   %ymm2,%ymm6,%ymm6
    4795:	c4 62 3d 00 c6       	vpshufb %ymm6,%ymm8,%ymm8
    479a:	c5 f9 6e f0          	vmovd  %eax,%xmm6
    479e:	b8 b0 ff ff ff       	mov    $0xffffffb0,%eax
    47a3:	c4 e2 7d 78 f6       	vpbroadcastb %xmm6,%ymm6
    47a8:	c5 79 6e f0          	vmovd  %eax,%xmm14
    47ac:	b8 c0 ff ff ff       	mov    $0xffffffc0,%eax
    47b1:	c5 f5 74 f6          	vpcmpeqb %ymm6,%ymm1,%ymm6
    47b5:	c4 42 7d 78 f6       	vpbroadcastb %xmm14,%ymm14
    47ba:	c4 41 75 74 f6       	vpcmpeqb %ymm14,%ymm1,%ymm14
    47bf:	c5 cd df f3          	vpandn %ymm3,%ymm6,%ymm6
    47c3:	c5 cd eb f2          	vpor   %ymm2,%ymm6,%ymm6
    47c7:	c5 0d df f3          	vpandn %ymm3,%ymm14,%ymm14
    47cb:	c4 e2 45 00 fe       	vpshufb %ymm6,%ymm7,%ymm7
    47d0:	c5 f9 6f 35 f8 39 01 	vmovdqa 0x139f8(%rip),%xmm6        # 181d0 <standard+0xb0>
    47d7:	00 
    47d8:	c5 0d eb f2          	vpor   %ymm2,%ymm14,%ymm14
    47dc:	c4 e3 4d 38 35 ea 38 	vinserti128 $0x1,0x138ea(%rip),%ymm6,%ymm6        # 180d0 <extended+0xb0>
    47e3:	01 00 01 
    47e6:	c4 63 05 38 3d f0 38 	vinserti128 $0x1,0x138f0(%rip),%ymm15,%ymm15        # 180e0 <extended+0xc0>
    47ed:	01 00 01 
    47f0:	c4 c2 4d 00 f6       	vpshufb %ymm14,%ymm6,%ymm6
    47f5:	c5 79 6e f0          	vmovd  %eax,%xmm14
    47f9:	b8 d0 ff ff ff       	mov    $0xffffffd0,%eax
    47fe:	c4 42 7d 78 f6       	vpbroadcastb %xmm14,%ymm14
    4803:	c4 41 75 74 f6       	vpcmpeqb %ymm14,%ymm1,%ymm14
    4808:	c5 0d df f3          	vpandn %ymm3,%ymm14,%ymm14
    480c:	c5 0d eb f2          	vpor   %ymm2,%ymm14,%ymm14
    4810:	c4 42 05 00 fe       	vpshufb %ymm14,%ymm15,%ymm15
    4815:	c5 79 6e f0          	vmovd  %eax,%xmm14
    4819:	b8 e0 ff ff ff       	mov    $0xffffffe0,%eax
    481e:	c5 7d 7f bc 24 c0 00 	vmovdqa %ymm15,0xc0(%rsp)
    4825:	00 00 
    4827:	c4 42 7d 78 f6       	vpbroadcastb %xmm14,%ymm14
    482c:	c5 79 6f 3d bc 39 01 	vmovdqa 0x139bc(%rip),%xmm15        # 181f0 <standard+0xd0>
    4833:	00 
    4834:	c4 63 05 38 3d b2 38 	vinserti128 $0x1,0x138b2(%rip),%ymm15,%ymm15        # 180f0 <extended+0xd0>
    483b:	01 00 01 
    483e:	c4 41 75 74 f6       	vpcmpeqb %ymm14,%ymm1,%ymm14
    4843:	c5 0d df f3          	vpandn %ymm3,%ymm14,%ymm14
    4847:	c5 0d eb f2          	vpor   %ymm2,%ymm14,%ymm14
    484b:	c4 42 05 00 fe       	vpshufb %ymm14,%ymm15,%ymm15
    4850:	c5 79 6e f0          	vmovd  %eax,%xmm14
    4854:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
    4859:	c5 7d 7f bc 24 80 00 	vmovdqa %ymm15,0x80(%rsp)
    4860:	00 00 
    4862:	c4 42 7d 78 f6       	vpbroadcastb %xmm14,%ymm14
    4867:	c5 79 6f 3d 91 39 01 	vmovdqa 0x13991(%rip),%xmm15        # 18200 <standard+0xe0>
    486e:	00 
    486f:	c4 63 05 38 3d 87 38 	vinserti128 $0x1,0x13887(%rip),%ymm15,%ymm15        # 18100 <extended+0xe0>
    4876:	01 00 01 
    4879:	c4 41 75 74 f6       	vpcmpeqb %ymm14,%ymm1,%ymm14
    487e:	c5 0d df f3          	vpandn %ymm3,%ymm14,%ymm14
    4882:	c5 0d eb f2          	vpor   %ymm2,%ymm14,%ymm14
    4886:	c4 42 05 00 fe       	vpshufb %ymm14,%ymm15,%ymm15
    488b:	c5 79 6e f0          	vmovd  %eax,%xmm14
    488f:	c4 61 f9 7e e8       	vmovq  %xmm13,%rax
    4894:	48 09 c8             	or     %rcx,%rax
    4897:	c4 42 7d 78 f6       	vpbroadcastb %xmm14,%ymm14
    489c:	c4 e1 f9 7e c1       	vmovq  %xmm0,%rcx
    48a1:	48 09 c8             	or     %rcx,%rax
    48a4:	c4 c1 75 74 ce       	vpcmpeqb %ymm14,%ymm1,%ymm1
    48a9:	c4 61 f9 7e e1       	vmovq  %xmm12,%rcx
    48ae:	c5 7d 6f b4 24 a0 00 	vmovdqa 0xa0(%rsp),%ymm14
    48b5:	00 00 
    48b7:	48 09 c8             	or     %rcx,%rax
    48ba:	c4 61 f9 7e d9       	vmovq  %xmm11,%rcx
    48bf:	c4 43 7d 39 ed 01    	vextracti128 $0x1,%ymm13,%xmm13
    48c5:	48 09 c8             	or     %rcx,%rax
    48c8:	c4 61 f9 7e d1       	vmovq  %xmm10,%rcx
    48cd:	c5 91 eb e4          	vpor   %xmm4,%xmm13,%xmm4
    48d1:	48 09 c8             	or     %rcx,%rax
    48d4:	c5 f5 df cb          	vpandn %ymm3,%ymm1,%ymm1
    48d8:	c4 61 f9 7e c9       	vmovq  %xmm9,%rcx
    48dd:	c5 f9 6f 1d 2b 39 01 	vmovdqa 0x1392b(%rip),%xmm3        # 18210 <standard+0xf0>
    48e4:	00 
    48e5:	c5 f5 eb ca          	vpor   %ymm2,%ymm1,%ymm1
    48e9:	48 09 c8             	or     %rcx,%rax
    48ec:	c4 61 f9 7e c1       	vmovq  %xmm8,%rcx
    48f1:	48 09 c8             	or     %rcx,%rax
    48f4:	c4 e1 f9 7e f9       	vmovq  %xmm7,%rcx
    48f9:	c4 e3 65 38 1d 0d 38 	vinserti128 $0x1,0x1380d(%rip),%ymm3,%ymm3        # 18110 <extended+0xf0>
    4900:	01 00 01 
    4903:	48 09 c8             	or     %rcx,%rax
    4906:	c4 e1 f9 7e f1       	vmovq  %xmm6,%rcx
    490b:	c4 61 f9 7e f6       	vmovq  %xmm14,%rsi
    4910:	c4 e2 65 00 d9       	vpshufb %ymm1,%ymm3,%ymm3
    4915:	48 09 c8             	or     %rcx,%rax
    4918:	c5 f9 6f 8c 24 c0 00 	vmovdqa 0xc0(%rsp),%xmm1
    491f:	00 00 
    4921:	c4 e3 7d 39 c0 01    	vextracti128 $0x1,%ymm0,%xmm0
    4927:	c5 d9 eb c0          	vpor   %xmm0,%xmm4,%xmm0
    492b:	c4 43 7d 39 e4 01    	vextracti128 $0x1,%ymm12,%xmm12
    4931:	c4 43 7d 39 db 01    	vextracti128 $0x1,%ymm11,%xmm11
    4937:	c5 fd 6f a4 24 c0 00 	vmovdqa 0xc0(%rsp),%ymm4
    493e:	00 00 
    4940:	c4 e1 f9 7e c9       	vmovq  %xmm1,%rcx
    4945:	c4 c1 79 eb c4       	vpor   %xmm12,%xmm0,%xmm0
    494a:	c5 f9 6f 8c 24 80 00 	vmovdqa 0x80(%rsp),%xmm1
    4951:	00 00 
    4953:	c4 43 7d 39 d2 01    	vextracti128 $0x1,%ymm10,%xmm10
    4959:	48 09 c8             	or     %rcx,%rax
    495c:	c4 c1 79 eb c3       	vpor   %xmm11,%xmm0,%xmm0
    4961:	c4 43 7d 39 c9 01    	vextracti128 $0x1,%ymm9,%xmm9
    4967:	c4 e1 f9 7e c9       	vmovq  %xmm1,%rcx
    496c:	c4 c1 79 eb c2       	vpor   %xmm10,%xmm0,%xmm0
    4971:	c5 f9 6f 8c 24 e0 00 	vmovdqa 0xe0(%rsp),%xmm1
    4978:	00 00 
    497a:	c4 43 7d 39 c0 01    	vextracti128 $0x1,%ymm8,%xmm8
    4980:	48 09 c8             	or     %rcx,%rax
    4983:	c4 61 f9 7e f9       	vmovq  %xmm15,%rcx
    4988:	c4 c1 79 eb c1       	vpor   %xmm9,%xmm0,%xmm0
    498d:	48 09 c8             	or     %rcx,%rax
    4990:	c4 e1 f9 7e d9       	vmovq  %xmm3,%rcx
    4995:	c4 c1 79 eb c0       	vpor   %xmm8,%xmm0,%xmm0
    499a:	48 09 c8             	or     %rcx,%rax
    499d:	c4 e1 f9 7e c9       	vmovq  %xmm1,%rcx
    49a2:	c4 e3 7d 39 ff 01    	vextracti128 $0x1,%ymm7,%xmm7
    49a8:	48 09 f1             	or     %rsi,%rcx
    49ab:	be 0f 00 00 00       	mov    $0xf,%esi
    49b0:	c5 f9 eb c7          	vpor   %xmm7,%xmm0,%xmm0
    49b4:	c5 fd 6f bc 24 e0 00 	vmovdqa 0xe0(%rsp),%ymm7
    49bb:	00 00 
    49bd:	48 09 c8             	or     %rcx,%rax
    49c0:	c4 e3 7d 39 f6 01    	vextracti128 $0x1,%ymm6,%xmm6
    49c6:	c4 43 7d 39 ff 01    	vextracti128 $0x1,%ymm15,%xmm15
    49cc:	48 21 c7             	and    %rax,%rdi
    49cf:	25 c0 00 00 00       	and    $0xc0,%eax
    49d4:	c5 f9 eb c6          	vpor   %xmm6,%xmm0,%xmm0
    49d8:	48 83 f8 7f          	cmp    $0x7f,%rax
    49dc:	49 89 f9             	mov    %rdi,%r9
    49df:	c4 e3 7d 39 db 01    	vextracti128 $0x1,%ymm3,%xmm3
    49e5:	0f 97 c0             	seta   %al
    49e8:	0f b6 c0             	movzbl %al,%eax
    49eb:	48 83 f8 00          	cmp    $0x0,%rax
    49ef:	41 0f 45 f4          	cmovne %r12d,%esi
    49f3:	48 89 f8             	mov    %rdi,%rax
    49f6:	89 f1                	mov    %esi,%ecx
    49f8:	48 c1 e8 08          	shr    $0x8,%rax
    49fc:	25 c0 00 00 00       	and    $0xc0,%eax
    4a01:	48 83 f8 7f          	cmp    $0x7f,%rax
    4a05:	0f 97 c0             	seta   %al
    4a08:	c1 e1 08             	shl    $0x8,%ecx
    4a0b:	0f b6 c0             	movzbl %al,%eax
    4a0e:	09 c8                	or     %ecx,%eax
    4a10:	3d 01 0f 00 00       	cmp    $0xf01,%eax
    4a15:	0f 94 c0             	sete   %al
    4a18:	0f b6 c0             	movzbl %al,%eax
    4a1b:	48 83 f8 00          	cmp    $0x0,%rax
    4a1f:	41 0f 45 f5          	cmovne %r13d,%esi
    4a23:	48 89 f8             	mov    %rdi,%rax
    4a26:	89 f1                	mov    %esi,%ecx
    4a28:	48 c1 e8 10          	shr    $0x10,%rax
    4a2c:	25 c0 00 00 00       	and    $0xc0,%eax
    4a31:	48 83 f8 7f          	cmp    $0x7f,%rax
    4a35:	0f 97 c0             	seta   %al
    4a38:	c1 e1 08             	shl    $0x8,%ecx
    4a3b:	0f b6 c0             	movzbl %al,%eax
    4a3e:	09 c8                	or     %ecx,%eax
    4a40:	3d 01 0f 00 00       	cmp    $0xf01,%eax
    4a45:	0f 94 c0             	sete   %al
    4a48:	0f b6 c0             	movzbl %al,%eax
    4a4b:	48 83 f8 00          	cmp    $0x0,%rax
    4a4f:	0f 45 f3             	cmovne %ebx,%esi
    4a52:	48 89 f8             	mov    %rdi,%rax
    4a55:	89 f1                	mov    %esi,%ecx
    4a57:	bb 04 00 00 00       	mov    $0x4,%ebx
    4a5c:	48 c1 e8 18          	shr    $0x18,%rax
    4a60:	25 c0 00 00 00       	and    $0xc0,%eax
    4a65:	48 83 f8 7f          	cmp    $0x7f,%rax
    4a69:	0f 97 c0             	seta   %al
    4a6c:	c1 e1 08             	shl    $0x8,%ecx
    4a6f:	0f b6 c0             	movzbl %al,%eax
    4a72:	09 c8                	or     %ecx,%eax
    4a74:	3d 01 0f 00 00       	cmp    $0xf01,%eax
    4a79:	0f 94 c0             	sete   %al
    4a7c:	0f b6 c0             	movzbl %al,%eax
    4a7f:	48 83 f8 00          	cmp    $0x0,%rax
    4a83:	41 0f 45 f0          	cmovne %r8d,%esi
    4a87:	48 89 f8             	mov    %rdi,%rax
    4a8a:	89 f1                	mov    %esi,%ecx
    4a8c:	48 c1 e8 20          	shr    $0x20,%rax
    4a90:	25 c0 00 00 00       	and    $0xc0,%eax
    4a95:	48 83 f8 7f          	cmp    $0x7f,%rax
    4a99:	0f 97 c0             	seta   %al
    4a9c:	c1 e1 08             	shl    $0x8,%ecx
    4a9f:	0f b6 c0             	movzbl %al,%eax
    4aa2:	09 c8                	or     %ecx,%eax
    4aa4:	3d 01 0f 00 00       	cmp    $0xf01,%eax
    4aa9:	0f 94 c0             	sete   %al
    4aac:	0f b6 c0             	movzbl %al,%eax
    4aaf:	48 83 f8 00          	cmp    $0x0,%rax
    4ab3:	0f 45 f3             	cmovne %ebx,%esi
    4ab6:	48 89 f8             	mov    %rdi,%rax
    4ab9:	89 f1                	mov    %esi,%ecx
    4abb:	48 c1 e8 28          	shr    $0x28,%rax
    4abf:	25 c0 00 00 00       	and    $0xc0,%eax
    4ac4:	48 83 f8 7f          	cmp    $0x7f,%rax
    4ac8:	0f 97 c0             	seta   %al
    4acb:	c1 e1 08             	shl    $0x8,%ecx
    4ace:	0f b6 c0             	movzbl %al,%eax
    4ad1:	09 c8                	or     %ecx,%eax
    4ad3:	31 c9                	xor    %ecx,%ecx
    4ad5:	3d 01 0f 00 00       	cmp    $0xf01,%eax
    4ada:	b8 05 00 00 00       	mov    $0x5,%eax
    4adf:	0f 94 c1             	sete   %cl
    4ae2:	48 83 f9 00          	cmp    $0x0,%rcx
    4ae6:	0f 45 f0             	cmovne %eax,%esi
    4ae9:	8d 0c f5 00 00 00 00 	lea    0x0(,%rsi,8),%ecx
    4af0:	49 d3 e9             	shr    %cl,%r9
    4af3:	49 d3 ea             	shr    %cl,%r10
    4af6:	4c 89 d1             	mov    %r10,%rcx
    4af9:	45 89 ca             	mov    %r9d,%r10d
    4afc:	4c 89 cb             	mov    %r9,%rbx
    4aff:	48 89 4c 24 70       	mov    %rcx,0x70(%rsp)
    4b04:	41 c0 ea 02          	shr    $0x2,%r10b
    4b08:	31 c9                	xor    %ecx,%ecx
    4b0a:	80 7c 24 70 0f       	cmpb   $0xf,0x70(%rsp)
    4b0f:	0f 94 c1             	sete   %cl
    4b12:	44 88 94 24 a0 00 00 	mov    %r10b,0xa0(%rsp)
    4b19:	00 
    4b1a:	45 89 e2             	mov    %r12d,%r10d
    4b1d:	48 83 f9 00          	cmp    $0x0,%rcx
    4b21:	45 0f 45 fd          	cmovne %r13d,%r15d
    4b25:	44 89 c9             	mov    %r9d,%ecx
    4b28:	45 31 c9             	xor    %r9d,%r9d
    4b2b:	83 e1 f0             	and    $0xfffffff0,%ecx
    4b2e:	80 f9 a0             	cmp    $0xa0,%cl
    4b31:	41 0f 94 c1          	sete   %r9b
    4b35:	49 83 f9 00          	cmp    $0x0,%r9
    4b39:	45 0f 45 d5          	cmovne %r13d,%r10d
    4b3d:	80 f9 b0             	cmp    $0xb0,%cl
    4b40:	45 89 e1             	mov    %r12d,%r9d
    4b43:	44 89 54 24 48       	mov    %r10d,0x48(%rsp)
    4b48:	0f 94 c1             	sete   %cl
    4b4b:	29 f0                	sub    %esi,%eax
    4b4d:	45 31 d2             	xor    %r10d,%r10d
    4b50:	0f b6 c9             	movzbl %cl,%ecx
    4b53:	48 83 f9 00          	cmp    $0x0,%rcx
    4b57:	45 0f 45 cd          	cmovne %r13d,%r9d
    4b5b:	8d 0c c5 00 00 00 00 	lea    0x0(,%rax,8),%ecx
    4b62:	44 89 4c 24 3c       	mov    %r9d,0x3c(%rsp)
    4b67:	48 b8 ff ff ff ff ff 	movabs $0xffffffffff,%rax
    4b6e:	00 00 00 
    4b71:	48 d3 f8             	sar    %cl,%rax
    4b74:	8d 0c f5 f8 ff ff ff 	lea    -0x8(,%rsi,8),%ecx
    4b7b:	48 21 f8             	and    %rdi,%rax
    4b7e:	49 89 c1             	mov    %rax,%r9
    4b81:	c4 e1 f9 6e d0       	vmovq  %rax,%xmm2
    4b86:	49 d3 e9             	shr    %cl,%r9
    4b89:	c4 c1 f9 6e c9       	vmovq  %r9,%xmm1
    4b8e:	49 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%r9
    4b95:	c4 c3 f1 22 c9 01    	vpinsrq $0x1,%r9,%xmm1,%xmm1
    4b9b:	c5 f1 74 0d 9d e4 00 	vpcmpeqb 0xe49d(%rip),%xmm1,%xmm1        # 13040 <g_dyn_entry_table+0x10>
    4ba2:	00 
    4ba3:	c4 e1 f9 7e cf       	vmovq  %xmm1,%rdi
    4ba8:	c4 c3 e9 22 c9 01    	vpinsrq $0x1,%r9,%xmm2,%xmm1
    4bae:	45 89 e9             	mov    %r13d,%r9d
    4bb1:	c5 f1 74 15 97 e4 00 	vpcmpeqb 0xe497(%rip),%xmm1,%xmm2        # 13050 <g_dyn_entry_table+0x20>
    4bb8:	00 
    4bb9:	48 85 ff             	test   %rdi,%rdi
    4bbc:	44 89 ef             	mov    %r13d,%edi
    4bbf:	41 0f 94 c2          	sete   %r10b
    4bc3:	48 d3 ea             	shr    %cl,%rdx
    4bc6:	44 89 e1             	mov    %r12d,%ecx
    4bc9:	49 83 fa 00          	cmp    $0x0,%r10
    4bcd:	41 0f 45 fc          	cmovne %r12d,%edi
    4bd1:	c4 e1 f9 7e d0       	vmovq  %xmm2,%rax
    4bd6:	c5 f1 74 15 82 e4 00 	vpcmpeqb 0xe482(%rip),%xmm1,%xmm2        # 13060 <g_dyn_entry_table+0x30>
    4bdd:	00 
    4bde:	83 e2 4f             	and    $0x4f,%edx
    4be1:	89 ff                	mov    %edi,%edi
    4be3:	48 83 ff 00          	cmp    $0x0,%rdi
    4be7:	0f 45 ca             	cmovne %edx,%ecx
    4bea:	31 d2                	xor    %edx,%edx
    4bec:	48 85 c0             	test   %rax,%rax
    4bef:	44 89 e8             	mov    %r13d,%eax
    4bf2:	89 4c 24 38          	mov    %ecx,0x38(%rsp)
    4bf6:	0f 94 c2             	sete   %dl
    4bf9:	44 89 e9             	mov    %r13d,%ecx
    4bfc:	48 83 fa 00          	cmp    $0x0,%rdx
    4c00:	41 0f 45 c4          	cmovne %r12d,%eax
    4c04:	89 c2                	mov    %eax,%edx
    4c06:	44 89 e0             	mov    %r12d,%eax
    4c09:	48 83 fa 00          	cmp    $0x0,%rdx
    4c0d:	41 0f 45 c5          	cmovne %r13d,%eax
    4c11:	c4 e1 f9 7e d2       	vmovq  %xmm2,%rdx
    4c16:	c5 f1 74 15 52 e4 00 	vpcmpeqb 0xe452(%rip),%xmm1,%xmm2        # 13070 <g_dyn_entry_table+0x40>
    4c1d:	00 
    4c1e:	48 85 d2             	test   %rdx,%rdx
    4c21:	0f 94 c2             	sete   %dl
    4c24:	0f b6 d2             	movzbl %dl,%edx
    4c27:	48 83 fa 00          	cmp    $0x0,%rdx
    4c2b:	45 0f 45 cc          	cmovne %r12d,%r9d
    4c2f:	c4 e1 f9 7e d2       	vmovq  %xmm2,%rdx
    4c34:	c5 f1 74 15 44 e4 00 	vpcmpeqb 0xe444(%rip),%xmm1,%xmm2        # 13080 <g_dyn_entry_table+0x50>
    4c3b:	00 
    4c3c:	44 89 4c 24 34       	mov    %r9d,0x34(%rsp)
    4c41:	49 b9 00 80 80 80 80 	movabs $0x8080808080808000,%r9
    4c48:	80 80 80 
    4c4b:	48 85 d2             	test   %rdx,%rdx
    4c4e:	c5 f1 74 0d 3a e4 00 	vpcmpeqb 0xe43a(%rip),%xmm1,%xmm1        # 13090 <g_dyn_entry_table+0x60>
    4c55:	00 
    4c56:	0f 94 c2             	sete   %dl
    4c59:	0f b6 d2             	movzbl %dl,%edx
    4c5c:	48 83 fa 00          	cmp    $0x0,%rdx
    4c60:	41 0f 45 cc          	cmovne %r12d,%ecx
    4c64:	c4 e1 f9 7e d2       	vmovq  %xmm2,%rdx
    4c69:	89 4c 24 30          	mov    %ecx,0x30(%rsp)
    4c6d:	31 c9                	xor    %ecx,%ecx
    4c6f:	c4 63 7d 39 f2 01    	vextracti128 $0x1,%ymm14,%xmm2
    4c75:	48 85 d2             	test   %rdx,%rdx
    4c78:	44 89 ea             	mov    %r13d,%edx
    4c7b:	0f 94 c1             	sete   %cl
    4c7e:	48 83 f9 00          	cmp    $0x0,%rcx
    4c82:	41 0f 45 d4          	cmovne %r12d,%edx
    4c86:	89 d2                	mov    %edx,%edx
    4c88:	31 c9                	xor    %ecx,%ecx
    4c8a:	48 83 fa 00          	cmp    $0x0,%rdx
    4c8e:	41 0f 45 c0          	cmovne %r8d,%eax
    4c92:	c4 e1 f9 7e ca       	vmovq  %xmm1,%rdx
    4c97:	c4 e3 7d 39 e1 01    	vextracti128 $0x1,%ymm4,%xmm1
    4c9d:	41 89 c0             	mov    %eax,%r8d
    4ca0:	c5 fd 6f a4 24 80 00 	vmovdqa 0x80(%rsp),%ymm4
    4ca7:	00 00 
    4ca9:	c5 f9 eb c1          	vpor   %xmm1,%xmm0,%xmm0
    4cad:	48 85 d2             	test   %rdx,%rdx
    4cb0:	44 89 ea             	mov    %r13d,%edx
    4cb3:	c4 e3 7d 39 e1 01    	vextracti128 $0x1,%ymm4,%xmm1
    4cb9:	0f 94 c1             	sete   %cl
    4cbc:	c5 f9 eb c1          	vpor   %xmm1,%xmm0,%xmm0
    4cc0:	c4 e3 7d 39 f9 01    	vextracti128 $0x1,%ymm7,%xmm1
    4cc6:	c4 c1 79 eb c7       	vpor   %xmm15,%xmm0,%xmm0
    4ccb:	c5 f1 eb ca          	vpor   %xmm2,%xmm1,%xmm1
    4ccf:	c5 f9 eb c3          	vpor   %xmm3,%xmm0,%xmm0
    4cd3:	c5 f9 eb c1          	vpor   %xmm1,%xmm0,%xmm0
    4cd7:	48 83 f9 00          	cmp    $0x0,%rcx
    4cdb:	41 0f 45 d4          	cmovne %r12d,%edx
    4cdf:	c4 e1 f9 7e c0       	vmovq  %xmm0,%rax
    4ce4:	8d 0c f5 08 00 00 00 	lea    0x8(,%rsi,8),%ecx
    4ceb:	89 d2                	mov    %edx,%edx
    4ced:	44 01 fe             	add    %r15d,%esi
    4cf0:	48 d3 f8             	sar    %cl,%rax
    4cf3:	44 89 f9             	mov    %r15d,%ecx
    4cf6:	48 83 fa 00          	cmp    $0x0,%rdx
    4cfa:	45 0f 45 c6          	cmovne %r14d,%r8d
    4cfe:	89 c2                	mov    %eax,%edx
    4d00:	44 89 44 24 5c       	mov    %r8d,0x5c(%rsp)
    4d05:	41 89 f0             	mov    %esi,%r8d
    4d08:	45 89 e6             	mov    %r12d,%r14d
    4d0b:	c0 ea 04             	shr    $0x4,%dl
    4d0e:	41 89 d2             	mov    %edx,%r10d
    4d11:	8b 94 24 a0 00 00 00 	mov    0xa0(%rsp),%edx
    4d18:	89 b4 24 e0 00 00 00 	mov    %esi,0xe0(%rsp)
    4d1f:	41 83 e2 03          	and    $0x3,%r10d
    4d23:	48 89 5c 24 40       	mov    %rbx,0x40(%rsp)
    4d28:	83 e2 03             	and    $0x3,%edx
    4d2b:	48 83 f9 00          	cmp    $0x0,%rcx
    4d2f:	41 0f 45 d2          	cmovne %r10d,%edx
    4d33:	41 8d 48 01          	lea    0x1(%r8),%ecx
    4d37:	0f b6 c9             	movzbl %cl,%ecx
    4d3a:	4c 09 c9             	or     %r9,%rcx
    4d3d:	c4 e1 f9 6e f9       	vmovq  %rcx,%xmm7
    4d42:	c4 c3 c1 22 c3 01    	vpinsrq $0x1,%r11,%xmm7,%xmm0
    4d48:	c4 e2 51 00 c0       	vpshufb %xmm0,%xmm5,%xmm0
    4d4d:	c4 e1 f9 7e c1       	vmovq  %xmm0,%rcx
    4d52:	89 ce                	mov    %ecx,%esi
    4d54:	41 89 c8             	mov    %ecx,%r8d
    4d57:	40 c0 ee 03          	shr    $0x3,%sil
    4d5b:	41 c0 e8 06          	shr    $0x6,%r8b
    4d5f:	89 f7                	mov    %esi,%edi
    4d61:	44 88 44 24 64       	mov    %r8b,0x64(%rsp)
    4d66:	83 e7 07             	and    $0x7,%edi
    4d69:	40 88 7c 24 60       	mov    %dil,0x60(%rsp)
    4d6e:	89 cf                	mov    %ecx,%edi
    4d70:	83 e1 c7             	and    $0xffffffc7,%ecx
    4d73:	88 8c 24 c0 00 00 00 	mov    %cl,0xc0(%rsp)
    4d7a:	83 e7 07             	and    $0x7,%edi
    4d7d:	31 c9                	xor    %ecx,%ecx
    4d7f:	41 80 f8 03          	cmp    $0x3,%r8b
    4d83:	41 89 d8             	mov    %ebx,%r8d
    4d86:	0f 95 c1             	setne  %cl
    4d89:	40 88 bc 24 80 00 00 	mov    %dil,0x80(%rsp)
    4d90:	00 
    4d91:	83 e6 07             	and    $0x7,%esi
    4d94:	41 83 e0 30          	and    $0x30,%r8d
    4d98:	01 f6                	add    %esi,%esi
    4d9a:	48 83 f9 00          	cmp    $0x0,%rcx
    4d9e:	45 0f 45 f5          	cmovne %r13d,%r14d
    4da2:	44 89 c1             	mov    %r8d,%ecx
    4da5:	41 89 d8             	mov    %ebx,%r8d
    4da8:	31 db                	xor    %ebx,%ebx
    4daa:	41 c0 e8 06          	shr    $0x6,%r8b
    4dae:	41 0f b6 f8          	movzbl %r8b,%edi
    4db2:	49 b8 aa 6a aa aa a5 	movabs $0x155a55a5aaaa6aaa,%r8
    4db9:	55 5a 15 
    4dbc:	40 80 ff 03          	cmp    $0x3,%dil
    4dc0:	0f 94 c3             	sete   %bl
    4dc3:	01 f1                	add    %esi,%ecx
    4dc5:	49 d3 e8             	shr    %cl,%r8
    4dc8:	0f b6 4c 24 60       	movzbl 0x60(%rsp),%ecx
    4dcd:	41 83 e0 03          	and    $0x3,%r8d
    4dd1:	48 83 fb 00          	cmp    $0x0,%rbx
    4dd5:	41 0f 45 d0          	cmovne %r8d,%edx
    4dd9:	41 b8 4c 00 00 00    	mov    $0x4c,%r8d
    4ddf:	44 89 e3             	mov    %r12d,%ebx
    4de2:	49 d3 e8             	shr    %cl,%r8
    4de5:	0f b6 4c 24 70       	movzbl 0x70(%rsp),%ecx
    4dea:	41 83 e0 01          	and    $0x1,%r8d
    4dee:	c1 e1 04             	shl    $0x4,%ecx
    4df1:	49 83 f8 00          	cmp    $0x0,%r8
    4df5:	41 0f 45 dd          	cmovne %r13d,%ebx
    4df9:	01 df                	add    %ebx,%edi
    4dfb:	45 89 e0             	mov    %r12d,%r8d
    4dfe:	09 f9                	or     %edi,%ecx
    4e00:	89 c7                	mov    %eax,%edi
    4e02:	81 f9 f4 0f 00 00    	cmp    $0xff4,%ecx
    4e08:	0f 94 c1             	sete   %cl
    4e0b:	40 c0 ef 06          	shr    $0x6,%dil
    4e0f:	31 db                	xor    %ebx,%ebx
    4e11:	0f b6 c9             	movzbl %cl,%ecx
    4e14:	40 0f b6 ff          	movzbl %dil,%edi
    4e18:	48 83 f9 00          	cmp    $0x0,%rcx
    4e1c:	45 0f 45 c5          	cmovne %r13d,%r8d
    4e20:	44 89 44 24 2c       	mov    %r8d,0x2c(%rsp)
    4e25:	45 89 f8             	mov    %r15d,%r8d
    4e28:	0f b6 4c 24 5c       	movzbl 0x5c(%rsp),%ecx
    4e2d:	41 c1 e0 04          	shl    $0x4,%r8d
    4e31:	c5 fb f0 0d d7 31 01 	vlddqu 0x131d7(%rip),%xmm1        # 18010 <extension_2op_table>
    4e38:	00 
    4e39:	41 09 f8             	or     %edi,%r8d
    4e3c:	41 83 f8 11          	cmp    $0x11,%r8d
    4e40:	0f 94 c3             	sete   %bl
    4e43:	01 c9                	add    %ecx,%ecx
    4e45:	c0 e8 03             	shr    $0x3,%al
    4e48:	42 8d 0c d1          	lea    (%rcx,%r10,8),%ecx
    4e4c:	41 ba 1a 05 0a 00    	mov    $0xa051a,%r10d
    4e52:	83 e0 07             	and    $0x7,%eax
    4e55:	41 d3 ea             	shr    %cl,%r10d
    4e58:	41 83 e2 03          	and    $0x3,%r10d
    4e5c:	48 83 fb 00          	cmp    $0x0,%rbx
    4e60:	41 0f 45 d2          	cmovne %r10d,%edx
    4e64:	44 8d 14 00          	lea    (%rax,%rax,1),%r10d
    4e68:	41 8d 4a 01          	lea    0x1(%r10),%ecx
    4e6c:	c1 e1 08             	shl    $0x8,%ecx
    4e6f:	44 09 d1             	or     %r10d,%ecx
    4e72:	41 83 f8 13          	cmp    $0x13,%r8d
    4e76:	c5 f9 6e f9          	vmovd  %ecx,%xmm7
    4e7a:	89 f1                	mov    %esi,%ecx
    4e7c:	0f b6 74 24 64       	movzbl 0x64(%rsp),%esi
    4e81:	41 0f 94 c0          	sete   %r8b
    4e85:	41 c1 e7 0c          	shl    $0xc,%r15d
    4e89:	c5 f9 70 c7 00       	vpshufd $0x0,%xmm7,%xmm0
    4e8e:	45 0f b6 c0          	movzbl %r8b,%r8d
    4e92:	c1 e7 08             	shl    $0x8,%edi
    4e95:	c4 e2 71 00 c0       	vpshufb %xmm0,%xmm1,%xmm0
    4e9a:	89 74 24 64          	mov    %esi,0x64(%rsp)
    4e9e:	c4 c1 f9 7e c2       	vmovq  %xmm0,%r10
    4ea3:	41 d3 ea             	shr    %cl,%r10d
    4ea6:	41 83 e2 03          	and    $0x3,%r10d
    4eaa:	49 83 f8 00          	cmp    $0x0,%r8
    4eae:	41 0f 45 d2          	cmovne %r10d,%edx
    4eb2:	41 89 f0             	mov    %esi,%r8d
    4eb5:	c1 e6 04             	shl    $0x4,%esi
    4eb8:	44 8b 94 24 e0 00 00 	mov    0xe0(%rsp),%r10d
    4ebf:	00 
    4ec0:	41 09 f7             	or     %esi,%r15d
    4ec3:	89 74 24 60          	mov    %esi,0x60(%rsp)
    4ec7:	41 09 c7             	or     %eax,%r15d
    4eca:	31 c0                	xor    %eax,%eax
    4ecc:	41 09 ff             	or     %edi,%r15d
    4ecf:	41 81 ff 32 13 00 00 	cmp    $0x1332,%r15d
    4ed6:	44 0f b6 bc 24 c0 00 	movzbl 0xc0(%rsp),%r15d
    4edd:	00 00 
    4edf:	0f 97 c0             	seta   %al
    4ee2:	48 83 f8 00          	cmp    $0x0,%rax
    4ee6:	41 0f 45 d4          	cmovne %r12d,%edx
    4eea:	31 c0                	xor    %eax,%eax
    4eec:	41 80 f8 03          	cmp    $0x3,%r8b
    4ef0:	0f 94 c0             	sete   %al
    4ef3:	48 83 f8 00          	cmp    $0x0,%rax
    4ef7:	41 0f 45 d4          	cmovne %r12d,%edx
    4efb:	89 54 24 28          	mov    %edx,0x28(%rsp)
    4eff:	44 89 d2             	mov    %r10d,%edx
    4f02:	8d 42 02             	lea    0x2(%rdx),%eax
    4f05:	0f b6 c0             	movzbl %al,%eax
    4f08:	48 89 c2             	mov    %rax,%rdx
    4f0b:	48 8d 48 01          	lea    0x1(%rax),%rcx
    4f0f:	4c 09 ca             	or     %r9,%rdx
    4f12:	48 c1 e1 08          	shl    $0x8,%rcx
    4f16:	c4 e1 f9 6e c2       	vmovq  %rdx,%xmm0
    4f1b:	48 8d 50 03          	lea    0x3(%rax),%rdx
    4f1f:	48 c1 e2 18          	shl    $0x18,%rdx
    4f23:	c4 c3 f9 22 c3 01    	vpinsrq $0x1,%r11,%xmm0,%xmm0
    4f29:	48 09 ca             	or     %rcx,%rdx
    4f2c:	c4 e2 51 00 c0       	vpshufb %xmm0,%xmm5,%xmm0
    4f31:	48 b9 00 00 00 00 80 	movabs $0x8080808000000000,%rcx
    4f38:	80 80 80 
    4f3b:	48 09 c2             	or     %rax,%rdx
    4f3e:	48 83 c0 02          	add    $0x2,%rax
    4f42:	c4 c1 f9 7e c0       	vmovq  %xmm0,%r8
    4f47:	48 c1 e0 10          	shl    $0x10,%rax
    4f4b:	48 09 d0             	or     %rdx,%rax
    4f4e:	44 89 d2             	mov    %r10d,%edx
    4f51:	83 c2 03             	add    $0x3,%edx
    4f54:	48 09 c8             	or     %rcx,%rax
    4f57:	0f b6 d2             	movzbl %dl,%edx
    4f5a:	c4 e1 f9 6e e0       	vmovq  %rax,%xmm4
    4f5f:	48 8d 72 01          	lea    0x1(%rdx),%rsi
    4f63:	48 8d 42 03          	lea    0x3(%rdx),%rax
    4f67:	c4 c3 d9 22 c3 01    	vpinsrq $0x1,%r11,%xmm4,%xmm0
    4f6d:	48 c1 e6 08          	shl    $0x8,%rsi
    4f71:	48 c1 e0 18          	shl    $0x18,%rax
    4f75:	c4 e2 51 00 c0       	vpshufb %xmm0,%xmm5,%xmm0
    4f7a:	48 09 f0             	or     %rsi,%rax
    4f7d:	48 8d 72 02          	lea    0x2(%rdx),%rsi
    4f81:	c4 e1 f9 7e c3       	vmovq  %xmm0,%rbx
    4f86:	48 09 d0             	or     %rdx,%rax
    4f89:	48 c1 e6 10          	shl    $0x10,%rsi
    4f8d:	4c 09 ca             	or     %r9,%rdx
    4f90:	48 89 5c 24 70       	mov    %rbx,0x70(%rsp)
    4f95:	48 09 f0             	or     %rsi,%rax
    4f98:	c4 e1 f9 6e e2       	vmovq  %rdx,%xmm4
    4f9d:	bb 04 00 00 00       	mov    $0x4,%ebx
    4fa2:	44 89 e2             	mov    %r12d,%edx
    4fa5:	48 09 c8             	or     %rcx,%rax
    4fa8:	31 c9                	xor    %ecx,%ecx
    4faa:	41 80 ff 05          	cmp    $0x5,%r15b
    4fae:	44 89 e6             	mov    %r12d,%esi
    4fb1:	c4 e1 f9 6e f8       	vmovq  %rax,%xmm7
    4fb6:	0f 94 c1             	sete   %cl
    4fb9:	45 89 c1             	mov    %r8d,%r9d
    4fbc:	45 31 d2             	xor    %r10d,%r10d
    4fbf:	c4 c3 c1 22 c3 01    	vpinsrq $0x1,%r11,%xmm7,%xmm0
    4fc5:	c4 e2 51 00 c0       	vpshufb %xmm0,%xmm5,%xmm0
    4fca:	c4 e1 f9 7e c0       	vmovq  %xmm0,%rax
    4fcf:	c4 c3 d9 22 c3 01    	vpinsrq $0x1,%r11,%xmm4,%xmm0
    4fd5:	45 89 f3             	mov    %r14d,%r11d
    4fd8:	48 83 f9 00          	cmp    $0x0,%rcx
    4fdc:	0f 45 54 24 70       	cmovne 0x70(%rsp),%edx
    4fe1:	48 83 f9 00          	cmp    $0x0,%rcx
    4fe5:	0f 45 f3             	cmovne %ebx,%esi
    4fe8:	0f b6 8c 24 80 00 00 	movzbl 0x80(%rsp),%ecx
    4fef:	00 
    4ff0:	41 c1 e3 08          	shl    $0x8,%r11d
    4ff4:	c4 e2 51 00 e8       	vpshufb %xmm0,%xmm5,%xmm5
    4ff9:	89 4c 24 5c          	mov    %ecx,0x5c(%rsp)
    4ffd:	44 09 d9             	or     %r11d,%ecx
    5000:	81 f9 04 01 00 00    	cmp    $0x104,%ecx
    5006:	41 0f 94 c2          	sete   %r10b
    500a:	41 c0 e9 06          	shr    $0x6,%r9b
    500e:	41 0f b6 c9          	movzbl %r9b,%ecx
    5012:	41 b9 ff 00 00 00    	mov    $0xff,%r9d
    5018:	41 c1 e6 10          	shl    $0x10,%r14d
    501c:	44 89 cf             	mov    %r9d,%edi
    501f:	49 83 fa 00          	cmp    $0x0,%r10
    5023:	0f 45 f9             	cmovne %ecx,%edi
    5026:	44 89 e1             	mov    %r12d,%ecx
    5029:	89 7c 24 24          	mov    %edi,0x24(%rsp)
    502d:	8b 7c 24 38          	mov    0x38(%rsp),%edi
    5031:	49 83 fa 00          	cmp    $0x0,%r10
    5035:	41 0f 45 cd          	cmovne %r13d,%ecx
    5039:	8d 74 0e 01          	lea    0x1(%rsi,%rcx,1),%esi
    503d:	89 74 24 58          	mov    %esi,0x58(%rsp)
    5041:	44 89 c6             	mov    %r8d,%esi
    5044:	40 c0 ee 03          	shr    $0x3,%sil
    5048:	89 f1                	mov    %esi,%ecx
    504a:	8d 34 bd 00 00 00 00 	lea    0x0(,%rdi,4),%esi
    5051:	83 e6 08             	and    $0x8,%esi
    5054:	83 e1 07             	and    $0x7,%ecx
    5057:	09 f1                	or     %esi,%ecx
    5059:	44 89 ce             	mov    %r9d,%esi
    505c:	49 83 fa 00          	cmp    $0x0,%r10
    5060:	0f 45 f1             	cmovne %ecx,%esi
    5063:	8d 0c fd 00 00 00 00 	lea    0x0(,%rdi,8),%ecx
    506a:	44 89 c7             	mov    %r8d,%edi
    506d:	89 74 24 38          	mov    %esi,0x38(%rsp)
    5071:	45 0f b6 c0          	movzbl %r8b,%r8d
    5075:	83 e7 07             	and    $0x7,%edi
    5078:	83 e1 08             	and    $0x8,%ecx
    507b:	89 fe                	mov    %edi,%esi
    507d:	44 89 e7             	mov    %r12d,%edi
    5080:	09 ce                	or     %ecx,%esi
    5082:	49 83 fa 00          	cmp    $0x0,%r10
    5086:	0f 45 fe             	cmovne %esi,%edi
    5089:	89 fe                	mov    %edi,%esi
    508b:	41 0f b6 ff          	movzbl %r15b,%edi
    508f:	41 89 f7             	mov    %esi,%r15d
    5092:	89 74 24 20          	mov    %esi,0x20(%rsp)
    5096:	41 c1 e7 08          	shl    $0x8,%r15d
    509a:	44 89 fe             	mov    %r15d,%esi
    509d:	45 31 ff             	xor    %r15d,%r15d
    50a0:	81 e6 00 07 00 00    	and    $0x700,%esi
    50a6:	44 09 f6             	or     %r14d,%esi
    50a9:	09 fe                	or     %edi,%esi
    50ab:	81 fe 04 05 01 00    	cmp    $0x10504,%esi
    50b1:	44 89 e6             	mov    %r12d,%esi
    50b4:	41 0f 94 c7          	sete   %r15b
    50b8:	41 09 fb             	or     %edi,%r11d
    50bb:	44 89 e7             	mov    %r12d,%edi
    50be:	49 83 ff 00          	cmp    $0x0,%r15
    50c2:	0f 45 f3             	cmovne %ebx,%esi
    50c5:	49 83 ff 00          	cmp    $0x0,%r15
    50c9:	0f 45 d0             	cmovne %eax,%edx
    50cc:	44 8b 7c 24 58       	mov    0x58(%rsp),%r15d
    50d1:	41 01 f7             	add    %esi,%r15d
    50d4:	c4 e1 f9 7e ee       	vmovq  %xmm5,%rsi
    50d9:	44 89 fb             	mov    %r15d,%ebx
    50dc:	45 31 ff             	xor    %r15d,%r15d
    50df:	41 81 fb 44 01 00 00 	cmp    $0x144,%r11d
    50e6:	40 0f b6 f6          	movzbl %sil,%esi
    50ea:	41 0f 94 c7          	sete   %r15b
    50ee:	49 83 ff 00          	cmp    $0x0,%r15
    50f2:	0f 45 fe             	cmovne %esi,%edi
    50f5:	44 89 e6             	mov    %r12d,%esi
    50f8:	49 83 ff 00          	cmp    $0x0,%r15
    50fc:	41 0f 45 f5          	cmovne %r13d,%esi
    5100:	01 de                	add    %ebx,%esi
    5102:	41 81 fb 84 01 00 00 	cmp    $0x184,%r11d
    5109:	41 bf 04 00 00 00    	mov    $0x4,%r15d
    510f:	8b 5c 24 5c          	mov    0x5c(%rsp),%ebx
    5113:	41 0f 94 c3          	sete   %r11b
    5117:	45 0f b6 db          	movzbl %r11b,%r11d
    511b:	49 83 fb 00          	cmp    $0x0,%r11
    511f:	0f 45 d0             	cmovne %eax,%edx
    5122:	44 89 e0             	mov    %r12d,%eax
    5125:	49 83 fb 00          	cmp    $0x0,%r11
    5129:	41 0f 45 c7          	cmovne %r15d,%eax
    512d:	45 31 db             	xor    %r11d,%r11d
    5130:	01 c6                	add    %eax,%esi
    5132:	80 bc 24 80 00 00 00 	cmpb   $0x4,0x80(%rsp)
    5139:	04 
    513a:	44 89 e0             	mov    %r12d,%eax
    513d:	41 0f 95 c3          	setne  %r11b
    5141:	49 83 fb 00          	cmp    $0x0,%r11
    5145:	41 0f 45 c5          	cmovne %r13d,%eax
    5149:	44 8b 5c 24 64       	mov    0x64(%rsp),%r11d
    514e:	c1 e0 08             	shl    $0x8,%eax
    5151:	44 09 f0             	or     %r14d,%eax
    5154:	44 09 d8             	or     %r11d,%eax
    5157:	45 31 db             	xor    %r11d,%r11d
    515a:	3d 01 01 01 00       	cmp    $0x10101,%eax
    515f:	41 0f 94 c3          	sete   %r11b
    5163:	49 83 fb 00          	cmp    $0x0,%r11
    5167:	41 0f 45 f8          	cmovne %r8d,%edi
    516b:	45 89 e0             	mov    %r12d,%r8d
    516e:	49 83 fb 00          	cmp    $0x0,%r11
    5172:	45 0f 45 c5          	cmovne %r13d,%r8d
    5176:	41 01 f0             	add    %esi,%r8d
    5179:	3d 02 01 01 00       	cmp    $0x10102,%eax
    517e:	4c 0f be df          	movsbq %dil,%r11
    5182:	44 89 e6             	mov    %r12d,%esi
    5185:	0f 94 c0             	sete   %al
    5188:	09 d9                	or     %ebx,%ecx
    518a:	0f b6 c0             	movzbl %al,%eax
    518d:	49 83 fa 00          	cmp    $0x0,%r10
    5191:	41 0f 45 cf          	cmovne %r15d,%ecx
    5195:	48 83 f8 00          	cmp    $0x0,%rax
    5199:	41 0f 45 f7          	cmovne %r15d,%esi
    519d:	48 83 f8 00          	cmp    $0x0,%rax
    51a1:	0f 45 54 24 70       	cmovne 0x70(%rsp),%edx
    51a6:	41 01 f0             	add    %esi,%r8d
    51a9:	31 c0                	xor    %eax,%eax
    51ab:	8b 74 24 20          	mov    0x20(%rsp),%esi
    51af:	4d 85 db             	test   %r11,%r11
    51b2:	0f 94 c0             	sete   %al
    51b5:	89 d2                	mov    %edx,%edx
    51b7:	41 89 da             	mov    %ebx,%r10d
    51ba:	48 83 f8 00          	cmp    $0x0,%rax
    51be:	4c 0f 45 da          	cmovne %rdx,%r11
    51c2:	31 d2                	xor    %edx,%edx
    51c4:	80 bc 24 c0 00 00 00 	cmpb   $0x4,0xc0(%rsp)
    51cb:	04 
    51cc:	0f b6 c1             	movzbl %cl,%eax
    51cf:	44 8b 7c 24 60       	mov    0x60(%rsp),%r15d
    51d4:	0f 94 c2             	sete   %dl
    51d7:	48 8b 7c 24 78       	mov    0x78(%rsp),%rdi
    51dc:	48 83 fa 00          	cmp    $0x0,%rdx
    51e0:	41 0f 45 c1          	cmovne %r9d,%eax
    51e4:	89 f2                	mov    %esi,%edx
    51e6:	83 e2 07             	and    $0x7,%edx
    51e9:	44 09 fa             	or     %r15d,%edx
    51ec:	83 fa 05             	cmp    $0x5,%edx
    51ef:	0f 94 c2             	sete   %dl
    51f2:	0f b6 d2             	movzbl %dl,%edx
    51f5:	48 83 fa 00          	cmp    $0x0,%rdx
    51f9:	41 0f 45 f1          	cmovne %r9d,%esi
    51fd:	31 d2                	xor    %edx,%edx
    51ff:	80 f9 04             	cmp    $0x4,%cl
    5202:	0f 94 c2             	sete   %dl
    5205:	45 09 fa             	or     %r15d,%r10d
    5208:	48 83 fa 00          	cmp    $0x0,%rdx
    520c:	0f 45 c6             	cmovne %esi,%eax
    520f:	31 d2                	xor    %edx,%edx
    5211:	41 83 fa 05          	cmp    $0x5,%r10d
    5215:	89 c6                	mov    %eax,%esi
    5217:	b8 10 00 00 00       	mov    $0x10,%eax
    521c:	0f 94 c2             	sete   %dl
    521f:	31 db                	xor    %ebx,%ebx
    5221:	48 83 fa 00          	cmp    $0x0,%rdx
    5225:	0f 45 f0             	cmovne %eax,%esi
    5228:	e8 23 f1 ff ff       	call   4350 <register_value_select>
    522d:	89 f1                	mov    %esi,%ecx
    522f:	8b 74 24 38          	mov    0x38(%rsp),%esi
    5233:	4c 8b 74 24 68       	mov    0x68(%rsp),%r14
    5238:	44 8b 54 24 34       	mov    0x34(%rsp),%r10d
    523d:	48 89 c2             	mov    %rax,%rdx
    5240:	31 c0                	xor    %eax,%eax
    5242:	48 83 f9 10          	cmp    $0x10,%rcx
    5246:	49 0f 44 d6          	cmove  %r14,%rdx
    524a:	48 81 f9 ff 00 00 00 	cmp    $0xff,%rcx
    5251:	48 0f 44 d3          	cmove  %rbx,%rdx
    5255:	89 d1                	mov    %edx,%ecx
    5257:	49 83 fa 01          	cmp    $0x1,%r10
    525b:	48 0f 44 d1          	cmove  %rcx,%rdx
    525f:	83 fe 04             	cmp    $0x4,%esi
    5262:	0f 94 c0             	sete   %al
    5265:	48 83 f8 00          	cmp    $0x0,%rax
    5269:	41 0f 45 f1          	cmovne %r9d,%esi
    526d:	e8 de f0 ff ff       	call   4350 <register_value_select>
    5272:	44 8b 4c 24 28       	mov    0x28(%rsp),%r9d
    5277:	89 f6                	mov    %esi,%esi
    5279:	48 83 fe 10          	cmp    $0x10,%rsi
    527d:	49 0f 44 c6          	cmove  %r14,%rax
    5281:	48 81 fe ff 00 00 00 	cmp    $0xff,%rsi
    5288:	48 0f 44 c3          	cmove  %rbx,%rax
    528c:	89 c1                	mov    %eax,%ecx
    528e:	41 be 02 00 00 00    	mov    $0x2,%r14d
    5294:	49 83 fa 01          	cmp    $0x1,%r10
    5298:	48 0f 44 c1          	cmove  %rcx,%rax
    529c:	45 85 c9             	test   %r9d,%r9d
    529f:	44 89 e9             	mov    %r13d,%ecx
    52a2:	40 0f 94 c6          	sete   %sil
    52a6:	40 0f b6 f6          	movzbl %sil,%esi
    52aa:	48 83 fe 00          	cmp    $0x0,%rsi
    52ae:	41 0f 45 cc          	cmovne %r12d,%ecx
    52b2:	41 01 c8             	add    %ecx,%r8d
    52b5:	0f b6 4c 24 24       	movzbl 0x24(%rsp),%ecx
    52ba:	44 89 ee             	mov    %r13d,%esi
    52bd:	d3 e6                	shl    %cl,%esi
    52bf:	48 63 ce             	movslq %esi,%rcx
    52c2:	48 0f af c1          	imul   %rcx,%rax
    52c6:	48 01 c2             	add    %rax,%rdx
    52c9:	8b 84 24 a0 00 00 00 	mov    0xa0(%rsp),%eax
    52d0:	4c 01 da             	add    %r11,%rdx
    52d3:	83 e0 0f             	and    $0xf,%eax
    52d6:	8d 70 06             	lea    0x6(%rax),%esi
    52d9:	e8 72 f0 ff ff       	call   4350 <register_value_select>
    52de:	8b 74 24 40          	mov    0x40(%rsp),%esi
    52e2:	44 8b 7c 24 3c       	mov    0x3c(%rsp),%r15d
    52e7:	48 89 c1             	mov    %rax,%rcx
    52ea:	8b 44 24 48          	mov    0x48(%rsp),%eax
    52ee:	44 8b 64 24 2c       	mov    0x2c(%rsp),%r12d
    52f3:	83 e6 03             	and    $0x3,%esi
    52f6:	48 83 f8 01          	cmp    $0x1,%rax
    52fa:	48 0f 44 d1          	cmove  %rcx,%rdx
    52fe:	89 f1                	mov    %esi,%ecx
    5300:	49 89 c3             	mov    %rax,%r11
    5303:	be 04 00 00 00       	mov    $0x4,%esi
    5308:	83 c1 01             	add    $0x1,%ecx
    530b:	48 83 f8 00          	cmp    $0x0,%rax
    530f:	44 0f 45 c9          	cmovne %ecx,%r9d
    5313:	44 89 f8             	mov    %r15d,%eax
    5316:	44 09 e0             	or     %r12d,%eax
    5319:	49 89 c2             	mov    %rax,%r10
    531c:	48 83 f8 00          	cmp    $0x0,%rax
    5320:	45 0f 45 ce          	cmovne %r14d,%r9d
    5324:	e8 27 f0 ff ff       	call   4350 <register_value_select>
    5329:	8b 4c 24 30          	mov    0x30(%rsp),%ecx
    532d:	8b 5c 24 4c          	mov    0x4c(%rsp),%ebx
    5331:	49 83 fa 01          	cmp    $0x1,%r10
    5335:	48 0f 44 d0          	cmove  %rax,%rdx
    5339:	42 8d 04 09          	lea    (%rcx,%r9,1),%eax
    533d:	31 c9                	xor    %ecx,%ecx
    533f:	44 8b 94 24 e0 00 00 	mov    0xe0(%rsp),%r10d
    5346:	00 
    5347:	83 f8 02             	cmp    $0x2,%eax
    534a:	44 89 c8             	mov    %r9d,%eax
    534d:	0f 97 c1             	seta   %cl
    5350:	48 83 f9 00          	cmp    $0x0,%rcx
    5354:	41 0f 45 c5          	cmovne %r13d,%eax
    5358:	44 89 f9             	mov    %r15d,%ecx
    535b:	44 09 d9             	or     %r11d,%ecx
    535e:	48 83 f9 00          	cmp    $0x0,%rcx
    5362:	45 0f 45 c5          	cmovne %r13d,%r8d
    5366:	44 89 e1             	mov    %r12d,%ecx
    5369:	48 83 f9 00          	cmp    $0x0,%rcx
    536d:	45 0f 45 c6          	cmovne %r14d,%r8d
    5371:	42 8d 0c 03          	lea    (%rbx,%r8,1),%ecx
    5375:	48 8b 5c 24 50       	mov    0x50(%rsp),%rbx
    537a:	44 01 d1             	add    %r10d,%ecx
    537d:	83 f9 10             	cmp    $0x10,%ecx
    5380:	48 89 13             	mov    %rdx,(%rbx)
    5383:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
    5388:	0f 96 c1             	setbe  %cl
    538b:	0f b6 c9             	movzbl %cl,%ecx
    538e:	48 21 c1             	and    %rax,%rcx
    5391:	48 83 f9 00          	cmp    $0x0,%rcx
    5395:	0f 45 c0             	cmovne %eax,%eax
    5398:	f6 05 94 2a 01 00 08 	testb  $0x8,0x12a94(%rip)        # 17e33 <g_cpu_feature_indicator+0x3>
    539f:	0f 84 1b 01 00 00    	je     54c0 <ct_decode+0x10d0>
    53a5:	62 f1 7c 48 28 03    	vmovaps (%rbx),%zmm0
    53ab:	62 f1 7c 48 28 4b 01 	vmovaps 0x40(%rbx),%zmm1
    53b2:	62 f1 7c 48 28 53 02 	vmovaps 0x80(%rbx),%zmm2
    53b9:	62 f1 7c 48 28 5b 03 	vmovaps 0xc0(%rbx),%zmm3
    53c0:	62 f1 7c 48 28 63 04 	vmovaps 0x100(%rbx),%zmm4
    53c7:	62 f1 7c 48 28 6b 05 	vmovaps 0x140(%rbx),%zmm5
    53ce:	62 f1 7c 48 28 73 06 	vmovaps 0x180(%rbx),%zmm6
    53d5:	62 f1 7c 48 28 7b 07 	vmovaps 0x1c0(%rbx),%zmm7
    53dc:	62 71 7c 48 28 43 08 	vmovaps 0x200(%rbx),%zmm8
    53e3:	62 71 7c 48 28 4b 09 	vmovaps 0x240(%rbx),%zmm9
    53ea:	62 71 7c 48 28 53 0a 	vmovaps 0x280(%rbx),%zmm10
    53f1:	62 71 7c 48 28 5b 0b 	vmovaps 0x2c0(%rbx),%zmm11
    53f8:	62 71 7c 48 28 63 0c 	vmovaps 0x300(%rbx),%zmm12
    53ff:	62 71 7c 48 28 6b 0d 	vmovaps 0x340(%rbx),%zmm13
    5406:	62 71 7c 48 28 73 0e 	vmovaps 0x380(%rbx),%zmm14
    540d:	62 71 7c 48 28 7b 0f 	vmovaps 0x3c0(%rbx),%zmm15
    5414:	48 8b 94 24 38 05 00 	mov    0x538(%rsp),%rdx
    541b:	00 
    541c:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    5423:	00 00 
    5425:	0f 85 0d 01 00 00    	jne    5538 <ct_decode+0x1148>
    542b:	c5 f8 77             	vzeroupper 
    542e:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    5432:	5b                   	pop    %rbx
    5433:	41 5c                	pop    %r12
    5435:	41 5d                	pop    %r13
    5437:	41 5e                	pop    %r14
    5439:	41 5f                	pop    %r15
    543b:	5d                   	pop    %rbp
    543c:	c3                   	ret    
    543d:	0f 1f 00             	nopl   (%rax)
    5440:	c5 fc 29 00          	vmovaps %ymm0,(%rax)
    5444:	c5 fc 29 48 20       	vmovaps %ymm1,0x20(%rax)
    5449:	c5 fc 29 50 40       	vmovaps %ymm2,0x40(%rax)
    544e:	c5 fc 29 58 60       	vmovaps %ymm3,0x60(%rax)
    5453:	c5 fc 29 a0 80 00 00 	vmovaps %ymm4,0x80(%rax)
    545a:	00 
    545b:	c5 fc 29 a8 a0 00 00 	vmovaps %ymm5,0xa0(%rax)
    5462:	00 
    5463:	c5 fc 29 b0 c0 00 00 	vmovaps %ymm6,0xc0(%rax)
    546a:	00 
    546b:	c5 fc 29 b8 e0 00 00 	vmovaps %ymm7,0xe0(%rax)
    5472:	00 
    5473:	c5 7c 29 80 00 01 00 	vmovaps %ymm8,0x100(%rax)
    547a:	00 
    547b:	c5 7c 29 88 20 01 00 	vmovaps %ymm9,0x120(%rax)
    5482:	00 
    5483:	c5 7c 29 90 40 01 00 	vmovaps %ymm10,0x140(%rax)
    548a:	00 
    548b:	c5 7c 29 98 60 01 00 	vmovaps %ymm11,0x160(%rax)
    5492:	00 
    5493:	c5 7c 29 a0 80 01 00 	vmovaps %ymm12,0x180(%rax)
    549a:	00 
    549b:	c5 7c 29 a8 a0 01 00 	vmovaps %ymm13,0x1a0(%rax)
    54a2:	00 
    54a3:	c5 7c 29 b0 c0 01 00 	vmovaps %ymm14,0x1c0(%rax)
    54aa:	00 
    54ab:	c5 7c 29 b8 e0 01 00 	vmovaps %ymm15,0x1e0(%rax)
    54b2:	00 
    54b3:	e9 fa ef ff ff       	jmp    44b2 <ct_decode+0xc2>
    54b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    54bf:	00 
    54c0:	c5 fc 28 03          	vmovaps (%rbx),%ymm0
    54c4:	c5 fc 28 4b 20       	vmovaps 0x20(%rbx),%ymm1
    54c9:	c5 fc 28 53 40       	vmovaps 0x40(%rbx),%ymm2
    54ce:	c5 fc 28 5b 60       	vmovaps 0x60(%rbx),%ymm3
    54d3:	c5 fc 28 a3 80 00 00 	vmovaps 0x80(%rbx),%ymm4
    54da:	00 
    54db:	c5 fc 28 ab a0 00 00 	vmovaps 0xa0(%rbx),%ymm5
    54e2:	00 
    54e3:	c5 fc 28 b3 c0 00 00 	vmovaps 0xc0(%rbx),%ymm6
    54ea:	00 
    54eb:	c5 fc 28 bb e0 00 00 	vmovaps 0xe0(%rbx),%ymm7
    54f2:	00 
    54f3:	c5 7c 28 83 00 01 00 	vmovaps 0x100(%rbx),%ymm8
    54fa:	00 
    54fb:	c5 7c 28 8b 20 01 00 	vmovaps 0x120(%rbx),%ymm9
    5502:	00 
    5503:	c5 7c 28 93 40 01 00 	vmovaps 0x140(%rbx),%ymm10
    550a:	00 
    550b:	c5 7c 28 9b 60 01 00 	vmovaps 0x160(%rbx),%ymm11
    5512:	00 
    5513:	c5 7c 28 a3 80 01 00 	vmovaps 0x180(%rbx),%ymm12
    551a:	00 
    551b:	c5 7c 28 ab a0 01 00 	vmovaps 0x1a0(%rbx),%ymm13
    5522:	00 
    5523:	c5 7c 28 b3 c0 01 00 	vmovaps 0x1c0(%rbx),%ymm14
    552a:	00 
    552b:	c5 7c 28 bb e0 01 00 	vmovaps 0x1e0(%rbx),%ymm15
    5532:	00 
    5533:	e9 dc fe ff ff       	jmp    5414 <ct_decode+0x1024>
    5538:	c5 f8 77             	vzeroupper 
    553b:	e8 30 b4 00 00       	call   10970 <__stack_chk_fail>

0000000000005540 <_ZL22init_rts_contexts_emasP9_layout_tS0_m>:
    5540:	48 39 f7             	cmp    %rsi,%rdi
    5543:	0f 83 f7 01 00 00    	jae    5740 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x200>
    5549:	41 57                	push   %r15
    554b:	41 56                	push   %r14
    554d:	49 89 d6             	mov    %rdx,%r14
    5550:	41 55                	push   %r13
    5552:	49 89 f5             	mov    %rsi,%r13
    5555:	41 54                	push   %r12
    5557:	55                   	push   %rbp
    5558:	53                   	push   %rbx
    5559:	48 89 fb             	mov    %rdi,%rbx
    555c:	48 83 ec 08          	sub    $0x8,%rsp
    5560:	66 f7 03 00 10       	testw  $0x1000,(%rbx)
    5565:	0f 85 d5 00 00 00    	jne    5640 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x100>
    556b:	48 8b 6b 08          	mov    0x8(%rbx),%rbp
    556f:	e8 84 c9 00 00       	call   11ef8 <get_enclave_base>
    5574:	44 8b 63 04          	mov    0x4(%rbx),%r12d
    5578:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
    557c:	4c 01 f5             	add    %r14,%rbp
    557f:	48 01 c5             	add    %rax,%rbp
    5582:	49 c1 e4 0c          	shl    $0xc,%r12
    5586:	48 85 c9             	test   %rcx,%rcx
    5589:	0f 84 81 00 00 00    	je     5610 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xd0>
    558f:	0f b7 43 02          	movzwl 0x2(%rbx),%eax
    5593:	a8 04                	test   $0x4,%al
    5595:	75 79                	jne    5610 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xd0>
    5597:	89 c2                	mov    %eax,%edx
    5599:	41 89 c7             	mov    %eax,%r15d
    559c:	83 e2 10             	and    $0x10,%edx
    559f:	41 83 e7 08          	and    $0x8,%r15d
    55a3:	a8 01                	test   $0x1,%al
    55a5:	0f 84 e5 00 00 00    	je     5690 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x150>
    55ab:	66 85 d2             	test   %dx,%dx
    55ae:	0f 85 3c 01 00 00    	jne    56f0 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x1b0>
    55b4:	0f b7 03             	movzwl (%rbx),%eax
    55b7:	66 45 85 ff          	test   %r15w,%r15w
    55bb:	0f 85 e1 00 00 00    	jne    56a2 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x162>
    55c1:	66 83 f8 04          	cmp    $0x4,%ax
    55c5:	0f 84 65 01 00 00    	je     5730 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x1f0>
    55cb:	83 e1 07             	and    $0x7,%ecx
    55ce:	ba 80 02 00 00       	mov    $0x280,%edx
    55d3:	45 31 c9             	xor    %r9d,%r9d
    55d6:	45 31 c0             	xor    %r8d,%r8d
    55d9:	4c 89 e6             	mov    %r12,%rsi
    55dc:	48 89 ef             	mov    %rbp,%rdi
    55df:	e8 4c 62 00 00       	call   b830 <mm_init_ema>
    55e4:	85 c0                	test   %eax,%eax
    55e6:	75 44                	jne    562c <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xec>
    55e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    55ef:	00 
    55f0:	48 83 c3 20          	add    $0x20,%rbx
    55f4:	4c 39 eb             	cmp    %r13,%rbx
    55f7:	0f 82 63 ff ff ff    	jb     5560 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x20>
    55fd:	48 83 c4 08          	add    $0x8,%rsp
    5601:	31 c0                	xor    %eax,%eax
    5603:	5b                   	pop    %rbx
    5604:	5d                   	pop    %rbp
    5605:	41 5c                	pop    %r12
    5607:	41 5d                	pop    %r13
    5609:	41 5e                	pop    %r14
    560b:	41 5f                	pop    %r15
    560d:	c3                   	ret    
    560e:	66 90                	xchg   %ax,%ax
    5610:	45 31 c9             	xor    %r9d,%r9d
    5613:	45 31 c0             	xor    %r8d,%r8d
    5616:	31 c9                	xor    %ecx,%ecx
    5618:	ba 81 00 00 00       	mov    $0x81,%edx
    561d:	4c 89 e6             	mov    %r12,%rsi
    5620:	48 89 ef             	mov    %rbp,%rdi
    5623:	e8 08 62 00 00       	call   b830 <mm_init_ema>
    5628:	85 c0                	test   %eax,%eax
    562a:	74 c4                	je     55f0 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xb0>
    562c:	b8 01 00 00 00       	mov    $0x1,%eax
    5631:	48 83 c4 08          	add    $0x8,%rsp
    5635:	5b                   	pop    %rbx
    5636:	5d                   	pop    %rbp
    5637:	41 5c                	pop    %r12
    5639:	41 5d                	pop    %r13
    563b:	41 5e                	pop    %r14
    563d:	41 5f                	pop    %r15
    563f:	c3                   	ret    
    5640:	8b 43 04             	mov    0x4(%rbx),%eax
    5643:	31 ed                	xor    %ebp,%ebp
    5645:	45 31 e4             	xor    %r12d,%r12d
    5648:	85 c0                	test   %eax,%eax
    564a:	74 a4                	je     55f0 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xb0>
    564c:	0f b7 7b 02          	movzwl 0x2(%rbx),%edi
    5650:	4c 03 63 08          	add    0x8(%rbx),%r12
    5654:	48 89 de             	mov    %rbx,%rsi
    5657:	4c 89 e2             	mov    %r12,%rdx
    565a:	f7 df                	neg    %edi
    565c:	48 63 ff             	movslq %edi,%rdi
    565f:	48 c1 e7 05          	shl    $0x5,%rdi
    5663:	48 01 df             	add    %rbx,%rdi
    5666:	e8 d5 fe ff ff       	call   5540 <_ZL22init_rts_contexts_emasP9_layout_tS0_m>
    566b:	85 c0                	test   %eax,%eax
    566d:	75 c2                	jne    5631 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xf1>
    566f:	83 c5 01             	add    $0x1,%ebp
    5672:	3b 6b 04             	cmp    0x4(%rbx),%ebp
    5675:	72 d5                	jb     564c <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x10c>
    5677:	48 83 c3 20          	add    $0x20,%rbx
    567b:	4c 39 eb             	cmp    %r13,%rbx
    567e:	0f 82 dc fe ff ff    	jb     5560 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x20>
    5684:	e9 74 ff ff ff       	jmp    55fd <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xbd>
    5689:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5690:	66 85 d2             	test   %dx,%dx
    5693:	75 5b                	jne    56f0 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x1b0>
    5695:	66 45 85 ff          	test   %r15w,%r15w
    5699:	0f 84 51 ff ff ff    	je     55f0 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xb0>
    569f:	0f b7 03             	movzwl (%rbx),%eax
    56a2:	8d 50 ef             	lea    -0x11(%rax),%edx
    56a5:	66 83 fa 01          	cmp    $0x1,%dx
    56a9:	76 0b                	jbe    56b6 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x176>
    56ab:	ba e4 02 00 00       	mov    $0x2e4,%edx
    56b0:	66 83 f8 07          	cmp    $0x7,%ax
    56b4:	75 05                	jne    56bb <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x17b>
    56b6:	ba d4 02 00 00       	mov    $0x2d4,%edx
    56bb:	45 31 c9             	xor    %r9d,%r9d
    56be:	45 31 c0             	xor    %r8d,%r8d
    56c1:	31 c9                	xor    %ecx,%ecx
    56c3:	4c 89 e6             	mov    %r12,%rsi
    56c6:	48 89 ef             	mov    %rbp,%rdi
    56c9:	e8 62 62 00 00       	call   b930 <mm_alloc>
    56ce:	85 c0                	test   %eax,%eax
    56d0:	0f 85 56 ff ff ff    	jne    562c <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xec>
    56d6:	48 83 c3 20          	add    $0x20,%rbx
    56da:	4c 39 eb             	cmp    %r13,%rbx
    56dd:	0f 82 7d fe ff ff    	jb     5560 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x20>
    56e3:	e9 15 ff ff ff       	jmp    55fd <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xbd>
    56e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    56ef:	00 
    56f0:	45 31 c9             	xor    %r9d,%r9d
    56f3:	45 31 c0             	xor    %r8d,%r8d
    56f6:	b9 03 00 00 00       	mov    $0x3,%ecx
    56fb:	ba 80 00 00 00       	mov    $0x80,%edx
    5700:	4c 89 e6             	mov    %r12,%rsi
    5703:	48 89 ef             	mov    %rbp,%rdi
    5706:	e8 25 61 00 00       	call   b830 <mm_init_ema>
    570b:	85 c0                	test   %eax,%eax
    570d:	0f 85 19 ff ff ff    	jne    562c <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xec>
    5713:	4c 89 e6             	mov    %r12,%rsi
    5716:	48 89 ef             	mov    %rbp,%rdi
    5719:	e8 52 62 00 00       	call   b970 <mm_dealloc>
    571e:	85 c0                	test   %eax,%eax
    5720:	0f 84 6f ff ff ff    	je     5695 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x155>
    5726:	e9 01 ff ff ff       	jmp    562c <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xec>
    572b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5730:	ba 80 01 00 00       	mov    $0x180,%edx
    5735:	31 c9                	xor    %ecx,%ecx
    5737:	e9 97 fe ff ff       	jmp    55d3 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x93>
    573c:	0f 1f 40 00          	nopl   0x0(%rax)
    5740:	31 c0                	xor    %eax,%eax
    5742:	c3                   	ret    
    5743:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    574a:	00 00 00 
    574d:	0f 1f 00             	nopl   (%rax)

0000000000005750 <init_rts_emas>:
    5750:	f3 0f 1e fa          	endbr64 
    5754:	55                   	push   %rbp
    5755:	48 89 d5             	mov    %rdx,%rbp
    5758:	53                   	push   %rbx
    5759:	48 89 f3             	mov    %rsi,%rbx
    575c:	48 83 ec 08          	sub    $0x8,%rsp
    5760:	e8 8b 32 00 00       	call   89f0 <init_segment_emas>
    5765:	85 c0                	test   %eax,%eax
    5767:	74 07                	je     5770 <init_rts_emas+0x20>
    5769:	48 83 c4 08          	add    $0x8,%rsp
    576d:	5b                   	pop    %rbx
    576e:	5d                   	pop    %rbp
    576f:	c3                   	ret    
    5770:	48 83 c4 08          	add    $0x8,%rsp
    5774:	48 89 ee             	mov    %rbp,%rsi
    5777:	48 89 df             	mov    %rbx,%rdi
    577a:	31 d2                	xor    %edx,%edx
    577c:	5b                   	pop    %rbx
    577d:	5d                   	pop    %rbp
    577e:	e9 bd fd ff ff       	jmp    5540 <_ZL22init_rts_contexts_emasP9_layout_tS0_m>
    5783:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    578a:	00 00 00 
    578d:	0f 1f 00             	nopl   (%rax)

0000000000005790 <sgx_mm_alloc_ocall>:
    5790:	f3 0f 1e fa          	endbr64 
    5794:	41 56                	push   %r14
    5796:	41 89 ce             	mov    %ecx,%r14d
    5799:	41 55                	push   %r13
    579b:	49 89 fd             	mov    %rdi,%r13
    579e:	bf 20 00 00 00       	mov    $0x20,%edi
    57a3:	41 54                	push   %r12
    57a5:	49 89 f4             	mov    %rsi,%r12
    57a8:	55                   	push   %rbp
    57a9:	89 d5                	mov    %edx,%ebp
    57ab:	53                   	push   %rbx
    57ac:	e8 ff 03 00 00       	call   5bb0 <sgx_ocalloc>
    57b1:	48 85 c0             	test   %rax,%rax
    57b4:	74 4a                	je     5800 <sgx_mm_alloc_ocall+0x70>
    57b6:	89 68 18             	mov    %ebp,0x18(%rax)
    57b9:	48 89 c6             	mov    %rax,%rsi
    57bc:	bf fa ff ff ff       	mov    $0xfffffffa,%edi
    57c1:	48 89 c3             	mov    %rax,%rbx
    57c4:	4c 89 68 08          	mov    %r13,0x8(%rax)
    57c8:	bd 0e 00 00 00       	mov    $0xe,%ebp
    57cd:	4c 89 60 10          	mov    %r12,0x10(%rax)
    57d1:	44 89 70 1c          	mov    %r14d,0x1c(%rax)
    57d5:	e8 c6 19 00 00       	call   71a0 <sgx_ocall>
    57da:	85 c0                	test   %eax,%eax
    57dc:	74 12                	je     57f0 <sgx_mm_alloc_ocall+0x60>
    57de:	e8 ad 04 00 00       	call   5c90 <sgx_ocfree>
    57e3:	5b                   	pop    %rbx
    57e4:	89 e8                	mov    %ebp,%eax
    57e6:	5d                   	pop    %rbp
    57e7:	41 5c                	pop    %r12
    57e9:	41 5d                	pop    %r13
    57eb:	41 5e                	pop    %r14
    57ed:	c3                   	ret    
    57ee:	66 90                	xchg   %ax,%ax
    57f0:	8b 03                	mov    (%rbx),%eax
    57f2:	f7 d8                	neg    %eax
    57f4:	19 ed                	sbb    %ebp,%ebp
    57f6:	83 e5 0e             	and    $0xe,%ebp
    57f9:	eb e3                	jmp    57de <sgx_mm_alloc_ocall+0x4e>
    57fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5800:	e8 8b 04 00 00       	call   5c90 <sgx_ocfree>
    5805:	bd 01 00 00 00       	mov    $0x1,%ebp
    580a:	5b                   	pop    %rbx
    580b:	89 e8                	mov    %ebp,%eax
    580d:	5d                   	pop    %rbp
    580e:	41 5c                	pop    %r12
    5810:	41 5d                	pop    %r13
    5812:	41 5e                	pop    %r14
    5814:	c3                   	ret    
    5815:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    581c:	00 00 00 
    581f:	90                   	nop

0000000000005820 <sgx_mm_modify_ocall>:
    5820:	f3 0f 1e fa          	endbr64 
    5824:	41 56                	push   %r14
    5826:	41 89 ce             	mov    %ecx,%r14d
    5829:	41 55                	push   %r13
    582b:	49 89 fd             	mov    %rdi,%r13
    582e:	bf 20 00 00 00       	mov    $0x20,%edi
    5833:	41 54                	push   %r12
    5835:	49 89 f4             	mov    %rsi,%r12
    5838:	55                   	push   %rbp
    5839:	89 d5                	mov    %edx,%ebp
    583b:	53                   	push   %rbx
    583c:	e8 6f 03 00 00       	call   5bb0 <sgx_ocalloc>
    5841:	48 85 c0             	test   %rax,%rax
    5844:	74 4a                	je     5890 <sgx_mm_modify_ocall+0x70>
    5846:	89 68 18             	mov    %ebp,0x18(%rax)
    5849:	48 89 c6             	mov    %rax,%rsi
    584c:	bf f9 ff ff ff       	mov    $0xfffffff9,%edi
    5851:	48 89 c3             	mov    %rax,%rbx
    5854:	4c 89 68 08          	mov    %r13,0x8(%rax)
    5858:	bd 0e 00 00 00       	mov    $0xe,%ebp
    585d:	4c 89 60 10          	mov    %r12,0x10(%rax)
    5861:	44 89 70 1c          	mov    %r14d,0x1c(%rax)
    5865:	e8 36 19 00 00       	call   71a0 <sgx_ocall>
    586a:	85 c0                	test   %eax,%eax
    586c:	74 12                	je     5880 <sgx_mm_modify_ocall+0x60>
    586e:	e8 1d 04 00 00       	call   5c90 <sgx_ocfree>
    5873:	5b                   	pop    %rbx
    5874:	89 e8                	mov    %ebp,%eax
    5876:	5d                   	pop    %rbp
    5877:	41 5c                	pop    %r12
    5879:	41 5d                	pop    %r13
    587b:	41 5e                	pop    %r14
    587d:	c3                   	ret    
    587e:	66 90                	xchg   %ax,%ax
    5880:	8b 03                	mov    (%rbx),%eax
    5882:	f7 d8                	neg    %eax
    5884:	19 ed                	sbb    %ebp,%ebp
    5886:	83 e5 0e             	and    $0xe,%ebp
    5889:	eb e3                	jmp    586e <sgx_mm_modify_ocall+0x4e>
    588b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5890:	e8 fb 03 00 00       	call   5c90 <sgx_ocfree>
    5895:	bd 01 00 00 00       	mov    $0x1,%ebp
    589a:	5b                   	pop    %rbx
    589b:	89 e8                	mov    %ebp,%eax
    589d:	5d                   	pop    %rbp
    589e:	41 5c                	pop    %r12
    58a0:	41 5d                	pop    %r13
    58a2:	41 5e                	pop    %r14
    58a4:	c3                   	ret    
    58a5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    58ac:	00 00 00 
    58af:	90                   	nop

00000000000058b0 <sgx_mm_register_pfhandler>:
    58b0:	f3 0f 1e fa          	endbr64 
    58b4:	31 c0                	xor    %eax,%eax
    58b6:	48 83 3d ca 48 01 00 	cmpq   $0x0,0x148ca(%rip)        # 1a188 <g_mm_pfhandler>
    58bd:	00 
    58be:	74 08                	je     58c8 <sgx_mm_register_pfhandler+0x18>
    58c0:	c3                   	ret    
    58c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    58c8:	48 89 3d b9 48 01 00 	mov    %rdi,0x148b9(%rip)        # 1a188 <g_mm_pfhandler>
    58cf:	b8 01 00 00 00       	mov    $0x1,%eax
    58d4:	c3                   	ret    
    58d5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    58dc:	00 00 00 
    58df:	90                   	nop

00000000000058e0 <sgx_mm_unregister_pfhandler>:
    58e0:	f3 0f 1e fa          	endbr64 
    58e4:	31 c0                	xor    %eax,%eax
    58e6:	48 39 3d 9b 48 01 00 	cmp    %rdi,0x1489b(%rip)        # 1a188 <g_mm_pfhandler>
    58ed:	74 01                	je     58f0 <sgx_mm_unregister_pfhandler+0x10>
    58ef:	c3                   	ret    
    58f0:	48 c7 05 8d 48 01 00 	movq   $0x0,0x1488d(%rip)        # 1a188 <g_mm_pfhandler>
    58f7:	00 00 00 00 
    58fb:	b8 01 00 00 00       	mov    $0x1,%eax
    5900:	c3                   	ret    
    5901:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5908:	00 00 00 
    590b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000005910 <sgx_mm_mutex_create>:
    5910:	f3 0f 1e fa          	endbr64 
    5914:	48 83 ec 08          	sub    $0x8,%rsp
    5918:	bf 18 00 00 00       	mov    $0x18,%edi
    591d:	e8 9e 77 00 00       	call   d0c0 <dlmalloc>
    5922:	48 85 c0             	test   %rax,%rax
    5925:	74 16                	je     593d <sgx_mm_mutex_create+0x2d>
    5927:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    592e:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
    5935:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    593c:	00 
    593d:	48 83 c4 08          	add    $0x8,%rsp
    5941:	c3                   	ret    
    5942:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5949:	00 00 00 
    594c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005950 <sgx_mm_mutex_lock>:
    5950:	f3 0f 1e fa          	endbr64 
    5954:	53                   	push   %rbx
    5955:	48 89 fb             	mov    %rdi,%rbx
    5958:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    595f:	00 
    5960:	48 89 df             	mov    %rbx,%rdi
    5963:	e8 18 b1 00 00       	call   10a80 <sgx_thread_spin_trylock>
    5968:	85 c0                	test   %eax,%eax
    596a:	75 f4                	jne    5960 <sgx_mm_mutex_lock+0x10>
    596c:	5b                   	pop    %rbx
    596d:	c3                   	ret    
    596e:	66 90                	xchg   %ax,%ax

0000000000005970 <sgx_mm_mutex_unlock>:
    5970:	f3 0f 1e fa          	endbr64 
    5974:	e9 97 b1 00 00       	jmp    10b10 <sgx_thread_spin_unlock>
    5979:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000005980 <sgx_mm_mutex_destroy>:
    5980:	f3 0f 1e fa          	endbr64 
    5984:	55                   	push   %rbp
    5985:	53                   	push   %rbx
    5986:	48 89 fb             	mov    %rdi,%rbx
    5989:	48 83 ec 08          	sub    $0x8,%rsp
    598d:	e8 6e b0 00 00       	call   10a00 <sgx_thread_spin_destroy>
    5992:	48 89 df             	mov    %rbx,%rdi
    5995:	89 c5                	mov    %eax,%ebp
    5997:	e8 14 95 00 00       	call   eeb0 <dlfree>
    599c:	48 83 c4 08          	add    $0x8,%rsp
    59a0:	89 e8                	mov    %ebp,%eax
    59a2:	5b                   	pop    %rbx
    59a3:	5d                   	pop    %rbp
    59a4:	c3                   	ret    
    59a5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    59ac:	00 00 00 
    59af:	90                   	nop

00000000000059b0 <sgx_mm_is_within_enclave>:
    59b0:	f3 0f 1e fa          	endbr64 
    59b4:	48 83 ec 08          	sub    $0x8,%rsp
    59b8:	e8 33 01 00 00       	call   5af0 <sgx_is_within_enclave>
    59bd:	85 c0                	test   %eax,%eax
    59bf:	0f 95 c0             	setne  %al
    59c2:	48 83 c4 08          	add    $0x8,%rsp
    59c6:	c3                   	ret    
    59c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    59ce:	00 00 

00000000000059d0 <init_optimized_libs>:
    59d0:	f3 0f 1e fa          	endbr64 
    59d4:	41 54                	push   %r12
    59d6:	49 89 d4             	mov    %rdx,%r12
    59d9:	55                   	push   %rbp
    59da:	48 89 f5             	mov    %rsi,%rbp
    59dd:	53                   	push   %rbx
    59de:	48 89 fb             	mov    %rdi,%rbx
    59e1:	e8 1e c5 00 00       	call   11f04 <get_enclave_state>
    59e6:	83 f8 01             	cmp    $0x1,%eax
    59e9:	0f 85 d6 00 00 00    	jne    5ac5 <init_optimized_libs+0xf5>
    59ef:	48 b8 ff ff ff ff ff 	movabs $0xffffffffffffff,%rax
    59f6:	ff ff 00 
    59f9:	48 89 da             	mov    %rbx,%rdx
    59fc:	48 21 c2             	and    %rax,%rdx
    59ff:	48 39 d8             	cmp    %rbx,%rax
    5a02:	48 0f 42 da          	cmovb  %rdx,%rbx
    5a06:	48 81 fb ff 01 00 00 	cmp    $0x1ff,%rbx
    5a0d:	0f 86 b2 00 00 00    	jbe    5ac5 <init_optimized_libs+0xf5>
    5a13:	f6 c3 20             	test   $0x20,%bl
    5a16:	74 0e                	je     5a26 <init_optimized_libs+0x56>
    5a18:	48 89 d8             	mov    %rbx,%rax
    5a1b:	48 f7 d0             	not    %rax
    5a1e:	a8 1f                	test   $0x1f,%al
    5a20:	0f 85 9f 00 00 00    	jne    5ac5 <init_optimized_libs+0xf5>
    5a26:	f6 c3 40             	test   $0x40,%bl
    5a29:	74 0e                	je     5a39 <init_optimized_libs+0x69>
    5a2b:	48 89 d8             	mov    %rbx,%rax
    5a2e:	48 f7 d0             	not    %rax
    5a31:	a8 3f                	test   $0x3f,%al
    5a33:	0f 85 8c 00 00 00    	jne    5ac5 <init_optimized_libs+0xf5>
    5a39:	f6 c3 80             	test   $0x80,%bl
    5a3c:	74 0a                	je     5a48 <init_optimized_libs+0x78>
    5a3e:	48 89 d8             	mov    %rbx,%rax
    5a41:	48 f7 d0             	not    %rax
    5a44:	a8 7f                	test   $0x7f,%al
    5a46:	75 7d                	jne    5ac5 <init_optimized_libs+0xf5>
    5a48:	f6 c7 01             	test   $0x1,%bh
    5a4b:	74 0b                	je     5a58 <init_optimized_libs+0x88>
    5a4d:	0f b6 c3             	movzbl %bl,%eax
    5a50:	48 3d ff 00 00 00    	cmp    $0xff,%rax
    5a56:	75 6d                	jne    5ac5 <init_optimized_libs+0xf5>
    5a58:	f6 c7 02             	test   $0x2,%bh
    5a5b:	74 0d                	je     5a6a <init_optimized_libs+0x9a>
    5a5d:	48 89 d8             	mov    %rbx,%rax
    5a60:	48 f7 d0             	not    %rax
    5a63:	a9 ff 01 00 00       	test   $0x1ff,%eax
    5a68:	75 5b                	jne    5ac5 <init_optimized_libs+0xf5>
    5a6a:	f6 c7 04             	test   $0x4,%bh
    5a6d:	75 49                	jne    5ab8 <init_optimized_libs+0xe8>
    5a6f:	4c 89 e0             	mov    %r12,%rax
    5a72:	48 f7 d0             	not    %rax
    5a75:	a8 06                	test   $0x6,%al
    5a77:	74 57                	je     5ad0 <init_optimized_libs+0x100>
    5a79:	48 b8 ff 7f 12 86 08 	movabs $0xfffe200886127fff,%rax
    5a80:	20 fe ff 
    5a83:	48 21 c3             	and    %rax,%rbx
    5a86:	4c 8d 25 a3 23 01 00 	lea    0x123a3(%rip),%r12        # 17e30 <g_cpu_feature_indicator>
    5a8d:	48 89 df             	mov    %rbx,%rdi
    5a90:	49 89 1c 24          	mov    %rbx,(%r12)
    5a94:	e8 b7 ae 00 00       	call   10950 <sgx_init_string_lib>
    5a99:	85 c0                	test   %eax,%eax
    5a9b:	75 28                	jne    5ac5 <init_optimized_libs+0xf5>
    5a9d:	49 8b 3c 24          	mov    (%r12),%rdi
    5aa1:	48 89 ee             	mov    %rbp,%rsi
    5aa4:	e8 a7 b4 00 00       	call   10f50 <sgx_init_crypto_lib>
    5aa9:	5b                   	pop    %rbx
    5aaa:	5d                   	pop    %rbp
    5aab:	f7 d8                	neg    %eax
    5aad:	41 5c                	pop    %r12
    5aaf:	19 c0                	sbb    %eax,%eax
    5ab1:	c3                   	ret    
    5ab2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5ab8:	48 89 d8             	mov    %rbx,%rax
    5abb:	48 f7 d0             	not    %rax
    5abe:	a9 ff 03 00 00       	test   $0x3ff,%eax
    5ac3:	74 aa                	je     5a6f <init_optimized_libs+0x9f>
    5ac5:	5b                   	pop    %rbx
    5ac6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    5acb:	5d                   	pop    %rbp
    5acc:	41 5c                	pop    %r12
    5ace:	c3                   	ret    
    5acf:	90                   	nop
    5ad0:	4c 89 e0             	mov    %r12,%rax
    5ad3:	48 f7 d0             	not    %rax
    5ad6:	a8 e0                	test   $0xe0,%al
    5ad8:	74 ac                	je     5a86 <init_optimized_libs+0xb6>
    5ada:	48 b8 ff ff ff b6 18 	movabs $0xfffee018b6ffffff,%rax
    5ae1:	e0 fe ff 
    5ae4:	48 21 c3             	and    %rax,%rbx
    5ae7:	eb 9d                	jmp    5a86 <init_optimized_libs+0xb6>
    5ae9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000005af0 <sgx_is_within_enclave>:
    5af0:	f3 0f 1e fa          	endbr64 
    5af4:	48 8d 05 25 23 01 00 	lea    0x12325(%rip),%rax        # 17e20 <g_enclave_base>
    5afb:	48 8b 10             	mov    (%rax),%rdx
    5afe:	48 8d 05 13 23 01 00 	lea    0x12313(%rip),%rax        # 17e18 <g_enclave_size>
    5b05:	48 8b 08             	mov    (%rax),%rcx
    5b08:	48 01 d1             	add    %rdx,%rcx
    5b0b:	48 89 c8             	mov    %rcx,%rax
    5b0e:	48 83 e8 01          	sub    $0x1,%rax
    5b12:	48 85 f6             	test   %rsi,%rsi
    5b15:	74 21                	je     5b38 <sgx_is_within_enclave+0x48>
    5b17:	48 83 ee 01          	sub    $0x1,%rsi
    5b1b:	48 01 fe             	add    %rdi,%rsi
    5b1e:	0f 93 c1             	setae  %cl
    5b21:	48 39 d7             	cmp    %rdx,%rdi
    5b24:	0f 93 c2             	setae  %dl
    5b27:	21 ca                	and    %ecx,%edx
    5b29:	48 39 f0             	cmp    %rsi,%rax
    5b2c:	0f 93 c0             	setae  %al
    5b2f:	0f b6 c0             	movzbl %al,%eax
    5b32:	21 d0                	and    %edx,%eax
    5b34:	c3                   	ret    
    5b35:	0f 1f 00             	nopl   (%rax)
    5b38:	48 89 fe             	mov    %rdi,%rsi
    5b3b:	b9 01 00 00 00       	mov    $0x1,%ecx
    5b40:	eb df                	jmp    5b21 <sgx_is_within_enclave+0x31>
    5b42:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5b49:	00 00 00 
    5b4c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005b50 <sgx_is_outside_enclave>:
    5b50:	f3 0f 1e fa          	endbr64 
    5b54:	48 85 f6             	test   %rsi,%rsi
    5b57:	74 17                	je     5b70 <sgx_is_outside_enclave+0x20>
    5b59:	48 83 ee 01          	sub    $0x1,%rsi
    5b5d:	b8 00 00 00 00       	mov    $0x0,%eax
    5b62:	48 01 fe             	add    %rdi,%rsi
    5b65:	73 0c                	jae    5b73 <sgx_is_outside_enclave+0x23>
    5b67:	c3                   	ret    
    5b68:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    5b6f:	00 
    5b70:	48 89 fe             	mov    %rdi,%rsi
    5b73:	48 8d 05 a6 22 01 00 	lea    0x122a6(%rip),%rax        # 17e20 <g_enclave_base>
    5b7a:	48 8b 10             	mov    (%rax),%rdx
    5b7d:	48 8d 05 94 22 01 00 	lea    0x12294(%rip),%rax        # 17e18 <g_enclave_size>
    5b84:	48 8b 08             	mov    (%rax),%rcx
    5b87:	48 01 d1             	add    %rdx,%rcx
    5b8a:	48 89 c8             	mov    %rcx,%rax
    5b8d:	48 83 e8 01          	sub    $0x1,%rax
    5b91:	48 39 f8             	cmp    %rdi,%rax
    5b94:	0f 92 c0             	setb   %al
    5b97:	48 39 d6             	cmp    %rdx,%rsi
    5b9a:	0f 92 c2             	setb   %dl
    5b9d:	09 d0                	or     %edx,%eax
    5b9f:	0f b6 c0             	movzbl %al,%eax
    5ba2:	c3                   	ret    
    5ba3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5baa:	00 00 00 
    5bad:	0f 1f 00             	nopl   (%rax)

0000000000005bb0 <sgx_ocalloc>:
    5bb0:	f3 0f 1e fa          	endbr64 
    5bb4:	53                   	push   %rbx
    5bb5:	48 89 fb             	mov    %rdi,%rbx
    5bb8:	48 83 ec 10          	sub    $0x10,%rsp
    5bbc:	e8 82 c3 00 00       	call   11f43 <get_thread_data>
    5bc1:	48 8d 15 58 22 01 00 	lea    0x12258(%rip),%rdx        # 17e20 <g_enclave_base>
    5bc8:	48 8b 70 20          	mov    0x20(%rax),%rsi
    5bcc:	48 8b 3a             	mov    (%rdx),%rdi
    5bcf:	48 8d 15 42 22 01 00 	lea    0x12242(%rip),%rdx        # 17e18 <g_enclave_size>
    5bd6:	48 8b 86 90 00 00 00 	mov    0x90(%rsi),%rax
    5bdd:	48 8b 0a             	mov    (%rdx),%rcx
    5be0:	48 89 c2             	mov    %rax,%rdx
    5be3:	48 83 c2 07          	add    $0x7,%rdx
    5be7:	72 33                	jb     5c1c <sgx_ocalloc+0x6c>
    5be9:	4c 8d 44 0f ff       	lea    -0x1(%rdi,%rcx,1),%r8
    5bee:	48 39 fa             	cmp    %rdi,%rdx
    5bf1:	72 05                	jb     5bf8 <sgx_ocalloc+0x48>
    5bf3:	49 39 c0             	cmp    %rax,%r8
    5bf6:	73 24                	jae    5c1c <sgx_ocalloc+0x6c>
    5bf8:	48 39 d8             	cmp    %rbx,%rax
    5bfb:	72 1f                	jb     5c1c <sgx_ocalloc+0x6c>
    5bfd:	48 89 c2             	mov    %rax,%rdx
    5c00:	48 29 da             	sub    %rbx,%rdx
    5c03:	48 89 d1             	mov    %rdx,%rcx
    5c06:	48 83 e1 f0          	and    $0xfffffffffffffff0,%rcx
    5c0a:	48 85 db             	test   %rbx,%rbx
    5c0d:	75 19                	jne    5c28 <sgx_ocalloc+0x78>
    5c0f:	48 89 cb             	mov    %rcx,%rbx
    5c12:	48 39 fb             	cmp    %rdi,%rbx
    5c15:	72 21                	jb     5c38 <sgx_ocalloc+0x88>
    5c17:	49 39 c8             	cmp    %rcx,%r8
    5c1a:	72 1c                	jb     5c38 <sgx_ocalloc+0x88>
    5c1c:	e8 16 c7 00 00       	call   12337 <abort>
    5c21:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5c28:	48 83 eb 01          	sub    $0x1,%rbx
    5c2c:	48 01 cb             	add    %rcx,%rbx
    5c2f:	72 eb                	jb     5c1c <sgx_ocalloc+0x6c>
    5c31:	eb df                	jmp    5c12 <sgx_ocalloc+0x62>
    5c33:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5c38:	48 83 e8 01          	sub    $0x1,%rax
    5c3c:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    5c42:	48 81 e2 00 f0 ff ff 	and    $0xfffffffffffff000,%rdx
    5c49:	75 1d                	jne    5c68 <sgx_ocalloc+0xb8>
    5c4b:	eb cf                	jmp    5c1c <sgx_ocalloc+0x6c>
    5c4d:	0f 1f 00             	nopl   (%rax)
    5c50:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    5c55:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    5c5a:	c6 00 00             	movb   $0x0,(%rax)
    5c5d:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    5c62:	48 2d 00 10 00 00    	sub    $0x1000,%rax
    5c68:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    5c6d:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    5c72:	48 39 d0             	cmp    %rdx,%rax
    5c75:	73 d9                	jae    5c50 <sgx_ocalloc+0xa0>
    5c77:	48 89 8e 90 00 00 00 	mov    %rcx,0x90(%rsi)
    5c7e:	48 83 c4 10          	add    $0x10,%rsp
    5c82:	48 89 c8             	mov    %rcx,%rax
    5c85:	5b                   	pop    %rbx
    5c86:	c3                   	ret    
    5c87:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    5c8e:	00 00 

0000000000005c90 <sgx_ocfree>:
    5c90:	f3 0f 1e fa          	endbr64 
    5c94:	48 83 ec 08          	sub    $0x8,%rsp
    5c98:	e8 a6 c2 00 00       	call   11f43 <get_thread_data>
    5c9d:	48 8d 15 7c 21 01 00 	lea    0x1217c(%rip),%rdx        # 17e20 <g_enclave_base>
    5ca4:	48 8d 0d 6d 21 01 00 	lea    0x1216d(%rip),%rcx        # 17e18 <g_enclave_size>
    5cab:	48 8b 70 20          	mov    0x20(%rax),%rsi
    5caf:	48 8b 40 08          	mov    0x8(%rax),%rax
    5cb3:	48 8b 12             	mov    (%rdx),%rdx
    5cb6:	48 8b 09             	mov    (%rcx),%rcx
    5cb9:	48 8b 40 e8          	mov    -0x18(%rax),%rax
    5cbd:	48 89 c7             	mov    %rax,%rdi
    5cc0:	48 83 c7 07          	add    $0x7,%rdi
    5cc4:	72 0f                	jb     5cd5 <sgx_ocfree+0x45>
    5cc6:	48 8d 4c 0a ff       	lea    -0x1(%rdx,%rcx,1),%rcx
    5ccb:	48 39 c1             	cmp    %rax,%rcx
    5cce:	72 10                	jb     5ce0 <sgx_ocfree+0x50>
    5cd0:	48 39 d7             	cmp    %rdx,%rdi
    5cd3:	72 0b                	jb     5ce0 <sgx_ocfree+0x50>
    5cd5:	e8 5d c6 00 00       	call   12337 <abort>
    5cda:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5ce0:	48 89 86 90 00 00 00 	mov    %rax,0x90(%rsi)
    5ce7:	48 83 c4 08          	add    $0x8,%rsp
    5ceb:	c3                   	ret    
    5cec:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005cf0 <sgx_read_rand>:
    5cf0:	f3 0f 1e fa          	endbr64 
    5cf4:	41 55                	push   %r13
    5cf6:	41 54                	push   %r12
    5cf8:	55                   	push   %rbp
    5cf9:	53                   	push   %rbx
    5cfa:	48 83 ec 18          	sub    $0x18,%rsp
    5cfe:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    5d05:	00 00 
    5d07:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    5d0c:	31 c0                	xor    %eax,%eax
    5d0e:	48 85 ff             	test   %rdi,%rdi
    5d11:	0f 84 f9 00 00 00    	je     5e10 <sgx_read_rand+0x120>
    5d17:	48 89 f3             	mov    %rsi,%rbx
    5d1a:	48 85 f6             	test   %rsi,%rsi
    5d1d:	0f 84 ed 00 00 00    	je     5e10 <sgx_read_rand+0x120>
    5d23:	48 8d 05 f6 20 01 00 	lea    0x120f6(%rip),%rax        # 17e20 <g_enclave_base>
    5d2a:	48 89 fd             	mov    %rdi,%rbp
    5d2d:	31 ff                	xor    %edi,%edi
    5d2f:	48 8b 08             	mov    (%rax),%rcx
    5d32:	48 8d 05 df 20 01 00 	lea    0x120df(%rip),%rax        # 17e18 <g_enclave_size>
    5d39:	48 8b 10             	mov    (%rax),%rdx
    5d3c:	48 8d 46 ff          	lea    -0x1(%rsi),%rax
    5d40:	48 01 ca             	add    %rcx,%rdx
    5d43:	48 83 ea 01          	sub    $0x1,%rdx
    5d47:	48 01 e8             	add    %rbp,%rax
    5d4a:	40 0f 92 c7          	setb   %dil
    5d4e:	48 39 c2             	cmp    %rax,%rdx
    5d51:	41 0f 93 c0          	setae  %r8b
    5d55:	48 85 ff             	test   %rdi,%rdi
    5d58:	40 0f 94 c6          	sete   %sil
    5d5c:	41 84 f0             	test   %sil,%r8b
    5d5f:	74 05                	je     5d66 <sgx_read_rand+0x76>
    5d61:	48 39 cd             	cmp    %rcx,%rbp
    5d64:	73 42                	jae    5da8 <sgx_read_rand+0xb8>
    5d66:	be 02 00 00 00       	mov    $0x2,%esi
    5d6b:	48 85 ff             	test   %rdi,%rdi
    5d6e:	74 28                	je     5d98 <sgx_read_rand+0xa8>
    5d70:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    5d75:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    5d7c:	00 00 
    5d7e:	0f 85 96 00 00 00    	jne    5e1a <sgx_read_rand+0x12a>
    5d84:	48 83 c4 18          	add    $0x18,%rsp
    5d88:	89 f0                	mov    %esi,%eax
    5d8a:	5b                   	pop    %rbx
    5d8b:	5d                   	pop    %rbp
    5d8c:	41 5c                	pop    %r12
    5d8e:	41 5d                	pop    %r13
    5d90:	c3                   	ret    
    5d91:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5d98:	48 39 c8             	cmp    %rcx,%rax
    5d9b:	72 0b                	jb     5da8 <sgx_read_rand+0xb8>
    5d9d:	48 39 d5             	cmp    %rdx,%rbp
    5da0:	76 ce                	jbe    5d70 <sgx_read_rand+0x80>
    5da2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5da8:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
    5daf:	00 
    5db0:	4c 8d 6c 24 04       	lea    0x4(%rsp),%r13
    5db5:	4c 89 ef             	mov    %r13,%rdi
    5db8:	e8 57 c5 00 00       	call   12314 <do_rdrand>
    5dbd:	85 c0                	test   %eax,%eax
    5dbf:	74 3f                	je     5e00 <sgx_read_rand+0x110>
    5dc1:	41 bc 04 00 00 00    	mov    $0x4,%r12d
    5dc7:	48 89 ef             	mov    %rbp,%rdi
    5dca:	4c 89 ee             	mov    %r13,%rsi
    5dcd:	4c 39 e3             	cmp    %r12,%rbx
    5dd0:	4c 0f 46 e3          	cmovbe %rbx,%r12
    5dd4:	4c 89 e2             	mov    %r12,%rdx
    5dd7:	4c 01 e5             	add    %r12,%rbp
    5dda:	e8 81 a8 00 00       	call   10660 <memcpy>
    5ddf:	4c 29 e3             	sub    %r12,%rbx
    5de2:	75 d1                	jne    5db5 <sgx_read_rand+0xc5>
    5de4:	be 04 00 00 00       	mov    $0x4,%esi
    5de9:	b9 04 00 00 00       	mov    $0x4,%ecx
    5dee:	31 d2                	xor    %edx,%edx
    5df0:	4c 89 ef             	mov    %r13,%rdi
    5df3:	e8 b8 aa 00 00       	call   108b0 <memset_s>
    5df8:	31 f6                	xor    %esi,%esi
    5dfa:	e9 71 ff ff ff       	jmp    5d70 <sgx_read_rand+0x80>
    5dff:	90                   	nop
    5e00:	be 01 00 00 00       	mov    $0x1,%esi
    5e05:	e9 66 ff ff ff       	jmp    5d70 <sgx_read_rand+0x80>
    5e0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5e10:	be 02 00 00 00       	mov    $0x2,%esi
    5e15:	e9 56 ff ff ff       	jmp    5d70 <sgx_read_rand+0x80>
    5e1a:	e8 51 ab 00 00       	call   10970 <__stack_chk_fail>
    5e1f:	90                   	nop

0000000000005e20 <check_static_stack_canary>:
    5e20:	f3 0f 1e fa          	endbr64 
    5e24:	48 8d 05 dd 1f 01 00 	lea    0x11fdd(%rip),%rax        # 17e08 <__intel_security_cookie>
    5e2b:	48 8b 00             	mov    (%rax),%rax
    5e2e:	48 39 87 08 fc fe ff 	cmp    %rax,-0x103f8(%rdi)
    5e35:	0f 95 c0             	setne  %al
    5e38:	0f b6 c0             	movzbl %al,%eax
    5e3b:	f7 d8                	neg    %eax
    5e3d:	c3                   	ret    
    5e3e:	66 90                	xchg   %ax,%ax

0000000000005e40 <sgx_rdpkru>:
    5e40:	f3 0f 1e fa          	endbr64 
    5e44:	53                   	push   %rbx
    5e45:	48 89 fb             	mov    %rdi,%rbx
    5e48:	e8 63 18 00 00       	call   76b0 <is_pkru_enabled>
    5e4d:	89 c2                	mov    %eax,%edx
    5e4f:	31 c0                	xor    %eax,%eax
    5e51:	84 d2                	test   %dl,%dl
    5e53:	74 0c                	je     5e61 <sgx_rdpkru+0x21>
    5e55:	89 c1                	mov    %eax,%ecx
    5e57:	0f 01 ee             	rdpkru 
    5e5a:	89 03                	mov    %eax,(%rbx)
    5e5c:	b8 01 00 00 00       	mov    $0x1,%eax
    5e61:	5b                   	pop    %rbx
    5e62:	c3                   	ret    
    5e63:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5e6a:	00 00 00 
    5e6d:	0f 1f 00             	nopl   (%rax)

0000000000005e70 <sgx_wrpkru>:
    5e70:	f3 0f 1e fa          	endbr64 
    5e74:	53                   	push   %rbx
    5e75:	89 fb                	mov    %edi,%ebx
    5e77:	e8 34 18 00 00       	call   76b0 <is_pkru_enabled>
    5e7c:	31 d2                	xor    %edx,%edx
    5e7e:	84 c0                	test   %al,%al
    5e80:	74 0c                	je     5e8e <sgx_wrpkru+0x1e>
    5e82:	89 d8                	mov    %ebx,%eax
    5e84:	89 d1                	mov    %edx,%ecx
    5e86:	0f 01 ef             	wrpkru 
    5e89:	ba 01 00 00 00       	mov    $0x1,%edx
    5e8e:	89 d0                	mov    %edx,%eax
    5e90:	5b                   	pop    %rbx
    5e91:	c3                   	ret    
    5e92:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5e99:	00 00 00 
    5e9c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005ea0 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0>:
    5ea0:	41 55                	push   %r13
    5ea2:	49 89 cd             	mov    %rcx,%r13
    5ea5:	41 54                	push   %r12
    5ea7:	55                   	push   %rbp
    5ea8:	53                   	push   %rbx
    5ea9:	48 83 ec 08          	sub    $0x8,%rsp
    5ead:	48 8d 0d cc d2 00 00 	lea    0xd2cc(%rip),%rcx        # 13180 <g_global_data>
    5eb4:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    5eba:	85 c0                	test   %eax,%eax
    5ebc:	0f 84 8e 00 00 00    	je     5f50 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0xb0>
    5ec2:	48 89 d3             	mov    %rdx,%rbx
    5ec5:	49 89 fc             	mov    %rdi,%r12
    5ec8:	31 d2                	xor    %edx,%edx
    5eca:	eb 11                	jmp    5edd <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0x3d>
    5ecc:	0f 1f 40 00          	nopl   0x0(%rax)
    5ed0:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    5ed6:	83 c2 01             	add    $0x1,%edx
    5ed9:	39 c2                	cmp    %eax,%edx
    5edb:	73 73                	jae    5f50 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0xb0>
    5edd:	89 d0                	mov    %edx,%eax
    5edf:	48 83 c0 0b          	add    $0xb,%rax
    5ee3:	48 c1 e0 05          	shl    $0x5,%rax
    5ee7:	48 01 c8             	add    %rcx,%rax
    5eea:	0f b7 00             	movzwl (%rax),%eax
    5eed:	66 39 c6             	cmp    %ax,%si
    5ef0:	75 de                	jne    5ed0 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0x30>
    5ef2:	8d 42 0b             	lea    0xb(%rdx),%eax
    5ef5:	48 c1 e0 05          	shl    $0x5,%rax
    5ef9:	48 01 c1             	add    %rax,%rcx
    5efc:	48 89 cd             	mov    %rcx,%rbp
    5eff:	74 4f                	je     5f50 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0xb0>
    5f01:	e8 f2 bf 00 00       	call   11ef8 <get_enclave_base>
    5f06:	48 8b 55 08          	mov    0x8(%rbp),%rdx
    5f0a:	48 01 da             	add    %rbx,%rdx
    5f0d:	48 01 d0             	add    %rdx,%rax
    5f10:	8b 55 04             	mov    0x4(%rbp),%edx
    5f13:	49 39 c4             	cmp    %rax,%r12
    5f16:	72 38                	jb     5f50 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0xb0>
    5f18:	48 c1 e2 0c          	shl    $0xc,%rdx
    5f1c:	49 81 c4 00 10 00 00 	add    $0x1000,%r12
    5f23:	48 01 c2             	add    %rax,%rdx
    5f26:	4c 39 e2             	cmp    %r12,%rdx
    5f29:	72 25                	jb     5f50 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0xb0>
    5f2b:	4d 85 ed             	test   %r13,%r13
    5f2e:	74 11                	je     5f41 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0xa1>
    5f30:	48 8b 45 18          	mov    0x18(%rbp),%rax
    5f34:	49 89 45 00          	mov    %rax,0x0(%r13)
    5f38:	0f b7 45 02          	movzwl 0x2(%rbp),%eax
    5f3c:	66 41 89 45 08       	mov    %ax,0x8(%r13)
    5f41:	31 c0                	xor    %eax,%eax
    5f43:	48 83 c4 08          	add    $0x8,%rsp
    5f47:	5b                   	pop    %rbx
    5f48:	5d                   	pop    %rbp
    5f49:	41 5c                	pop    %r12
    5f4b:	41 5d                	pop    %r13
    5f4d:	c3                   	ret    
    5f4e:	66 90                	xchg   %ax,%ax
    5f50:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    5f55:	eb ec                	jmp    5f43 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0xa3>
    5f57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    5f5e:	00 00 

0000000000005f60 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0>:
    5f60:	48 81 ff ff ef ff ff 	cmp    $0xffffffffffffefff,%rdi
    5f67:	0f 87 c3 01 00 00    	ja     6130 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x1d0>
    5f6d:	41 57                	push   %r15
    5f6f:	41 56                	push   %r14
    5f71:	41 55                	push   %r13
    5f73:	41 54                	push   %r12
    5f75:	49 89 f4             	mov    %rsi,%r12
    5f78:	55                   	push   %rbp
    5f79:	48 89 d5             	mov    %rdx,%rbp
    5f7c:	53                   	push   %rbx
    5f7d:	48 89 fb             	mov    %rdi,%rbx
    5f80:	48 83 ec 08          	sub    $0x8,%rsp
    5f84:	e8 87 13 00 00       	call   7310 <get_heap_base>
    5f89:	49 89 c5             	mov    %rax,%r13
    5f8c:	e8 0f 14 00 00       	call   73a0 <get_heap_min_size>
    5f91:	49 01 c5             	add    %rax,%r13
    5f94:	e8 97 13 00 00       	call   7330 <get_heap_size>
    5f99:	49 89 c6             	mov    %rax,%r14
    5f9c:	e8 ff 13 00 00       	call   73a0 <get_heap_min_size>
    5fa1:	49 29 c6             	sub    %rax,%r14
    5fa4:	4c 39 eb             	cmp    %r13,%rbx
    5fa7:	72 37                	jb     5fe0 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x80>
    5fa9:	48 8d 83 00 10 00 00 	lea    0x1000(%rbx),%rax
    5fb0:	4d 01 f5             	add    %r14,%r13
    5fb3:	49 39 c5             	cmp    %rax,%r13
    5fb6:	72 28                	jb     5fe0 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x80>
    5fb8:	48 85 ed             	test   %rbp,%rbp
    5fbb:	74 11                	je     5fce <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x6e>
    5fbd:	b8 08 00 00 00       	mov    $0x8,%eax
    5fc2:	48 c7 45 00 03 02 00 	movq   $0x203,0x0(%rbp)
    5fc9:	00 
    5fca:	66 89 45 08          	mov    %ax,0x8(%rbp)
    5fce:	31 c0                	xor    %eax,%eax
    5fd0:	48 83 c4 08          	add    $0x8,%rsp
    5fd4:	5b                   	pop    %rbx
    5fd5:	5d                   	pop    %rbp
    5fd6:	41 5c                	pop    %r12
    5fd8:	41 5d                	pop    %r13
    5fda:	41 5e                	pop    %r14
    5fdc:	41 5f                	pop    %r15
    5fde:	c3                   	ret    
    5fdf:	90                   	nop
    5fe0:	31 d2                	xor    %edx,%edx
    5fe2:	48 89 e9             	mov    %rbp,%rcx
    5fe5:	be 07 00 00 00       	mov    $0x7,%esi
    5fea:	48 89 df             	mov    %rbx,%rdi
    5fed:	e8 ae fe ff ff       	call   5ea0 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0>
    5ff2:	85 c0                	test   %eax,%eax
    5ff4:	74 d8                	je     5fce <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x6e>
    5ff6:	48 8d 15 6b 1e 01 00 	lea    0x11e6b(%rip),%rdx        # 17e68 <rsrv_mem_size>
    5ffd:	48 8d 05 6c 1e 01 00 	lea    0x11e6c(%rip),%rax        # 17e70 <rsrv_mem_base>
    6004:	48 8b 0a             	mov    (%rdx),%rcx
    6007:	48 8d 15 52 1e 01 00 	lea    0x11e52(%rip),%rdx        # 17e60 <rsrv_mem_min_size>
    600e:	48 8b 00             	mov    (%rax),%rax
    6011:	48 8b 32             	mov    (%rdx),%rsi
    6014:	48 01 c6             	add    %rax,%rsi
    6017:	48 39 f3             	cmp    %rsi,%rbx
    601a:	72 0f                	jb     602b <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0xcb>
    601c:	48 8d 93 00 10 00 00 	lea    0x1000(%rbx),%rdx
    6023:	48 01 c8             	add    %rcx,%rax
    6026:	48 39 d0             	cmp    %rdx,%rax
    6029:	73 8d                	jae    5fb8 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x58>
    602b:	48 8d 0d 4e d1 00 00 	lea    0xd14e(%rip),%rcx        # 13180 <g_global_data>
    6032:	31 d2                	xor    %edx,%edx
    6034:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    603a:	85 c0                	test   %eax,%eax
    603c:	74 25                	je     6063 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x103>
    603e:	66 90                	xchg   %ax,%ax
    6040:	89 d0                	mov    %edx,%eax
    6042:	48 83 c0 0b          	add    $0xb,%rax
    6046:	48 c1 e0 05          	shl    $0x5,%rax
    604a:	48 01 c8             	add    %rcx,%rax
    604d:	0f b7 00             	movzwl (%rax),%eax
    6050:	66 3d 13 10          	cmp    $0x1013,%ax
    6054:	74 42                	je     6098 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x138>
    6056:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    605c:	83 c2 01             	add    $0x1,%edx
    605f:	39 c2                	cmp    %eax,%edx
    6061:	72 dd                	jb     6040 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0xe0>
    6063:	41 bd 0e 00 00 00    	mov    $0xe,%r13d
    6069:	31 d2                	xor    %edx,%edx
    606b:	48 89 e9             	mov    %rbp,%rcx
    606e:	44 89 ee             	mov    %r13d,%esi
    6071:	48 89 df             	mov    %rbx,%rdi
    6074:	e8 27 fe ff ff       	call   5ea0 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0>
    6079:	85 c0                	test   %eax,%eax
    607b:	0f 84 96 00 00 00    	je     6117 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x1b7>
    6081:	41 83 c5 01          	add    $0x1,%r13d
    6085:	41 83 fd 13          	cmp    $0x13,%r13d
    6089:	75 de                	jne    6069 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x109>
    608b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    6090:	e9 3b ff ff ff       	jmp    5fd0 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x70>
    6095:	0f 1f 00             	nopl   (%rax)
    6098:	8d 42 0b             	lea    0xb(%rdx),%eax
    609b:	41 bd 0e 00 00 00    	mov    $0xe,%r13d
    60a1:	48 c1 e0 05          	shl    $0x5,%rax
    60a5:	48 01 c1             	add    %rax,%rcx
    60a8:	49 89 ce             	mov    %rcx,%r14
    60ab:	74 bc                	je     6069 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x109>
    60ad:	41 8b 46 04          	mov    0x4(%r14),%eax
    60b1:	45 31 ff             	xor    %r15d,%r15d
    60b4:	83 f8 ff             	cmp    $0xffffffff,%eax
    60b7:	75 17                	jne    60d0 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x170>
    60b9:	eb 4d                	jmp    6108 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x1a8>
    60bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    60c0:	41 8b 46 04          	mov    0x4(%r14),%eax
    60c4:	49 83 c7 01          	add    $0x1,%r15
    60c8:	83 c0 01             	add    $0x1,%eax
    60cb:	41 39 c7             	cmp    %eax,%r15d
    60ce:	73 38                	jae    6108 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x1a8>
    60d0:	49 8b 56 08          	mov    0x8(%r14),%rdx
    60d4:	48 89 e9             	mov    %rbp,%rcx
    60d7:	44 89 ee             	mov    %r13d,%esi
    60da:	48 89 df             	mov    %rbx,%rdi
    60dd:	49 0f af d7          	imul   %r15,%rdx
    60e1:	e8 ba fd ff ff       	call   5ea0 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0>
    60e6:	85 c0                	test   %eax,%eax
    60e8:	75 d6                	jne    60c0 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x160>
    60ea:	4d 85 e4             	test   %r12,%r12
    60ed:	0f 84 db fe ff ff    	je     5fce <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x6e>
    60f3:	49 8b 46 08          	mov    0x8(%r14),%rax
    60f7:	49 0f af c7          	imul   %r15,%rax
    60fb:	49 89 04 24          	mov    %rax,(%r12)
    60ff:	e9 ca fe ff ff       	jmp    5fce <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x6e>
    6104:	0f 1f 40 00          	nopl   0x0(%rax)
    6108:	41 83 c5 01          	add    $0x1,%r13d
    610c:	41 83 fd 13          	cmp    $0x13,%r13d
    6110:	75 9b                	jne    60ad <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x14d>
    6112:	e9 74 ff ff ff       	jmp    608b <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x12b>
    6117:	4d 85 e4             	test   %r12,%r12
    611a:	0f 84 ae fe ff ff    	je     5fce <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x6e>
    6120:	49 c7 04 24 00 00 00 	movq   $0x0,(%r12)
    6127:	00 
    6128:	e9 a1 fe ff ff       	jmp    5fce <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x6e>
    612d:	0f 1f 00             	nopl   (%rax)
    6130:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    6135:	c3                   	ret    
    6136:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    613d:	00 00 00 

0000000000006140 <_Z24get_dynamic_layout_by_idt>:
    6140:	f3 0f 1e fa          	endbr64 
    6144:	48 8d 05 35 d0 00 00 	lea    0xd035(%rip),%rax        # 13180 <g_global_data>
    614b:	8b 90 58 01 00 00    	mov    0x158(%rax),%edx
    6151:	85 d2                	test   %edx,%edx
    6153:	74 3b                	je     6190 <_Z24get_dynamic_layout_by_idt+0x50>
    6155:	31 c9                	xor    %ecx,%ecx
    6157:	eb 14                	jmp    616d <_Z24get_dynamic_layout_by_idt+0x2d>
    6159:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6160:	8b 90 58 01 00 00    	mov    0x158(%rax),%edx
    6166:	83 c1 01             	add    $0x1,%ecx
    6169:	39 d1                	cmp    %edx,%ecx
    616b:	73 23                	jae    6190 <_Z24get_dynamic_layout_by_idt+0x50>
    616d:	89 ca                	mov    %ecx,%edx
    616f:	48 83 c2 0b          	add    $0xb,%rdx
    6173:	48 c1 e2 05          	shl    $0x5,%rdx
    6177:	48 01 c2             	add    %rax,%rdx
    617a:	0f b7 12             	movzwl (%rdx),%edx
    617d:	66 39 fa             	cmp    %di,%dx
    6180:	75 de                	jne    6160 <_Z24get_dynamic_layout_by_idt+0x20>
    6182:	8d 51 0b             	lea    0xb(%rcx),%edx
    6185:	48 c1 e2 05          	shl    $0x5,%rdx
    6189:	48 01 d0             	add    %rdx,%rax
    618c:	c3                   	ret    
    618d:	0f 1f 00             	nopl   (%rax)
    6190:	31 c0                	xor    %eax,%eax
    6192:	c3                   	ret    
    6193:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    619a:	00 00 00 
    619d:	0f 1f 00             	nopl   (%rax)

00000000000061a0 <is_dynamic_thread>:
    61a0:	f3 0f 1e fa          	endbr64 
    61a4:	48 83 ec 28          	sub    $0x28,%rsp
    61a8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    61af:	00 00 
    61b1:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    61b6:	31 c0                	xor    %eax,%eax
    61b8:	48 85 ff             	test   %rdi,%rdi
    61bb:	74 0e                	je     61cb <is_dynamic_thread+0x2b>
    61bd:	31 f6                	xor    %esi,%esi
    61bf:	48 89 e2             	mov    %rsp,%rdx
    61c2:	e8 99 fd ff ff       	call   5f60 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0>
    61c7:	85 c0                	test   %eax,%eax
    61c9:	74 1d                	je     61e8 <is_dynamic_thread+0x48>
    61cb:	31 c0                	xor    %eax,%eax
    61cd:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    61d2:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    61d9:	00 00 
    61db:	75 1a                	jne    61f7 <is_dynamic_thread+0x57>
    61dd:	48 83 c4 28          	add    $0x28,%rsp
    61e1:	c3                   	ret    
    61e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    61e8:	31 c0                	xor    %eax,%eax
    61ea:	48 81 3c 24 00 01 00 	cmpq   $0x100,(%rsp)
    61f1:	00 
    61f2:	0f 94 c0             	sete   %al
    61f5:	eb d6                	jmp    61cd <is_dynamic_thread+0x2d>
    61f7:	e8 74 a7 00 00       	call   10970 <__stack_chk_fail>
    61fc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000006200 <is_dynamic_thread_exist>:
    6200:	f3 0f 1e fa          	endbr64 
    6204:	48 8d 05 21 1c 01 00 	lea    0x11c21(%rip),%rax        # 17e2c <EDMM_supported>
    620b:	8b 00                	mov    (%rax),%eax
    620d:	85 c0                	test   %eax,%eax
    620f:	74 59                	je     626a <is_dynamic_thread_exist+0x6a>
    6211:	48 8d 0d 68 cf 00 00 	lea    0xcf68(%rip),%rcx        # 13180 <g_global_data>
    6218:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    621e:	85 c0                	test   %eax,%eax
    6220:	74 46                	je     6268 <is_dynamic_thread_exist+0x68>
    6222:	31 d2                	xor    %edx,%edx
    6224:	eb 17                	jmp    623d <is_dynamic_thread_exist+0x3d>
    6226:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    622d:	00 00 00 
    6230:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    6236:	83 c2 01             	add    $0x1,%edx
    6239:	39 c2                	cmp    %eax,%edx
    623b:	73 2b                	jae    6268 <is_dynamic_thread_exist+0x68>
    623d:	89 d0                	mov    %edx,%eax
    623f:	48 83 c0 0b          	add    $0xb,%rax
    6243:	48 c1 e0 05          	shl    $0x5,%rax
    6247:	48 01 c8             	add    %rcx,%rax
    624a:	0f b7 00             	movzwl (%rax),%eax
    624d:	66 83 f8 12          	cmp    $0x12,%ax
    6251:	75 dd                	jne    6230 <is_dynamic_thread_exist+0x30>
    6253:	8d 42 0b             	lea    0xb(%rdx),%eax
    6256:	48 c1 e0 05          	shl    $0x5,%rax
    625a:	48 01 c1             	add    %rax,%rcx
    625d:	0f 95 c0             	setne  %al
    6260:	0f b6 c0             	movzbl %al,%eax
    6263:	c3                   	ret    
    6264:	0f 1f 40 00          	nopl   0x0(%rax)
    6268:	31 c0                	xor    %eax,%eax
    626a:	c3                   	ret    
    626b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000006270 <get_dynamic_stack_max_page>:
    6270:	f3 0f 1e fa          	endbr64 
    6274:	48 8d 0d 05 cf 00 00 	lea    0xcf05(%rip),%rcx        # 13180 <g_global_data>
    627b:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    6281:	85 c0                	test   %eax,%eax
    6283:	74 45                	je     62ca <get_dynamic_stack_max_page+0x5a>
    6285:	31 d2                	xor    %edx,%edx
    6287:	eb 14                	jmp    629d <get_dynamic_stack_max_page+0x2d>
    6289:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6290:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    6296:	83 c2 01             	add    $0x1,%edx
    6299:	39 c2                	cmp    %eax,%edx
    629b:	73 2b                	jae    62c8 <get_dynamic_stack_max_page+0x58>
    629d:	89 d0                	mov    %edx,%eax
    629f:	48 83 c0 0b          	add    $0xb,%rax
    62a3:	48 c1 e0 05          	shl    $0x5,%rax
    62a7:	48 01 c8             	add    %rcx,%rax
    62aa:	0f b7 00             	movzwl (%rax),%eax
    62ad:	66 83 f8 07          	cmp    $0x7,%ax
    62b1:	75 dd                	jne    6290 <get_dynamic_stack_max_page+0x20>
    62b3:	8d 42 0b             	lea    0xb(%rdx),%eax
    62b6:	48 c1 e0 05          	shl    $0x5,%rax
    62ba:	48 01 c1             	add    %rax,%rcx
    62bd:	74 09                	je     62c8 <get_dynamic_stack_max_page+0x58>
    62bf:	8b 41 04             	mov    0x4(%rcx),%eax
    62c2:	c3                   	ret    
    62c3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    62c8:	31 c0                	xor    %eax,%eax
    62ca:	c3                   	ret    
    62cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000062d0 <do_add_thread>:
    62d0:	f3 0f 1e fa          	endbr64 
    62d4:	41 56                	push   %r14
    62d6:	41 55                	push   %r13
    62d8:	41 54                	push   %r12
    62da:	55                   	push   %rbp
    62db:	53                   	push   %rbx
    62dc:	48 89 fb             	mov    %rdi,%rbx
    62df:	48 83 ec 10          	sub    $0x10,%rsp
    62e3:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    62ea:	00 00 
    62ec:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    62f1:	31 c0                	xor    %eax,%eax
    62f3:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    62fa:	00 
    62fb:	e8 f8 bb 00 00       	call   11ef8 <get_enclave_base>
    6300:	31 d2                	xor    %edx,%edx
    6302:	48 89 e6             	mov    %rsp,%rsi
    6305:	48 89 df             	mov    %rbx,%rdi
    6308:	48 89 c5             	mov    %rax,%rbp
    630b:	e8 50 fc ff ff       	call   5f60 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0>
    6310:	85 c0                	test   %eax,%eax
    6312:	75 62                	jne    6376 <do_add_thread+0xa6>
    6314:	4c 8d 25 65 ce 00 00 	lea    0xce65(%rip),%r12        # 13180 <g_global_data>
    631b:	41 8b 84 24 58 01 00 	mov    0x158(%r12),%eax
    6322:	00 
    6323:	85 c0                	test   %eax,%eax
    6325:	74 4f                	je     6376 <do_add_thread+0xa6>
    6327:	31 d2                	xor    %edx,%edx
    6329:	eb 14                	jmp    633f <do_add_thread+0x6f>
    632b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6330:	41 8b 84 24 58 01 00 	mov    0x158(%r12),%eax
    6337:	00 
    6338:	83 c2 01             	add    $0x1,%edx
    633b:	39 c2                	cmp    %eax,%edx
    633d:	73 37                	jae    6376 <do_add_thread+0xa6>
    633f:	89 d0                	mov    %edx,%eax
    6341:	48 83 c0 0b          	add    $0xb,%rax
    6345:	48 c1 e0 05          	shl    $0x5,%rax
    6349:	4c 01 e0             	add    %r12,%rax
    634c:	44 0f b7 28          	movzwl (%rax),%r13d
    6350:	66 41 83 fd 0e       	cmp    $0xe,%r13w
    6355:	75 d9                	jne    6330 <do_add_thread+0x60>
    6357:	8d 42 0b             	lea    0xb(%rdx),%eax
    635a:	48 c1 e0 05          	shl    $0x5,%rax
    635e:	4c 01 e0             	add    %r12,%rax
    6361:	74 13                	je     6376 <do_add_thread+0xa6>
    6363:	4c 8b 34 24          	mov    (%rsp),%r14
    6367:	48 8b 40 08          	mov    0x8(%rax),%rax
    636b:	49 01 ee             	add    %rbp,%r14
    636e:	4c 01 f0             	add    %r14,%rax
    6371:	48 39 d8             	cmp    %rbx,%rax
    6374:	74 4e                	je     63c4 <do_add_thread+0xf4>
    6376:	b8 01 00 00 00       	mov    $0x1,%eax
    637b:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    6380:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    6387:	00 00 
    6389:	0f 85 f9 00 00 00    	jne    6488 <do_add_thread+0x1b8>
    638f:	48 83 c4 10          	add    $0x10,%rsp
    6393:	5b                   	pop    %rbx
    6394:	5d                   	pop    %rbp
    6395:	41 5c                	pop    %r12
    6397:	41 5d                	pop    %r13
    6399:	41 5e                	pop    %r14
    639b:	c3                   	ret    
    639c:	0f 1f 40 00          	nopl   0x0(%rax)
    63a0:	8d 42 0b             	lea    0xb(%rdx),%eax
    63a3:	48 c1 e0 05          	shl    $0x5,%rax
    63a7:	4c 01 e0             	add    %r12,%rax
    63aa:	74 0d                	je     63b9 <do_add_thread+0xe9>
    63ac:	0f b7 50 02          	movzwl 0x2(%rax),%edx
    63b0:	83 e2 20             	and    $0x20,%edx
    63b3:	0f 85 af 00 00 00    	jne    6468 <do_add_thread+0x198>
    63b9:	41 83 c5 01          	add    $0x1,%r13d
    63bd:	66 41 83 fd 13       	cmp    $0x13,%r13w
    63c2:	74 3c                	je     6400 <do_add_thread+0x130>
    63c4:	41 8b 84 24 58 01 00 	mov    0x158(%r12),%eax
    63cb:	00 
    63cc:	31 d2                	xor    %edx,%edx
    63ce:	85 c0                	test   %eax,%eax
    63d0:	75 15                	jne    63e7 <do_add_thread+0x117>
    63d2:	eb e5                	jmp    63b9 <do_add_thread+0xe9>
    63d4:	0f 1f 40 00          	nopl   0x0(%rax)
    63d8:	41 8b 84 24 58 01 00 	mov    0x158(%r12),%eax
    63df:	00 
    63e0:	83 c2 01             	add    $0x1,%edx
    63e3:	39 c2                	cmp    %eax,%edx
    63e5:	73 d2                	jae    63b9 <do_add_thread+0xe9>
    63e7:	89 d0                	mov    %edx,%eax
    63e9:	48 83 c0 0b          	add    $0xb,%rax
    63ed:	48 c1 e0 05          	shl    $0x5,%rax
    63f1:	4c 01 e0             	add    %r12,%rax
    63f4:	0f b7 00             	movzwl (%rax),%eax
    63f7:	66 44 39 e8          	cmp    %r13w,%ax
    63fb:	75 db                	jne    63d8 <do_add_thread+0x108>
    63fd:	eb a1                	jmp    63a0 <do_add_thread+0xd0>
    63ff:	90                   	nop
    6400:	ba 48 00 00 00       	mov    $0x48,%edx
    6405:	49 8d b4 24 10 01 00 	lea    0x110(%r12),%rsi
    640c:	00 
    640d:	48 89 df             	mov    %rbx,%rdi
    6410:	e8 4b a2 00 00       	call   10660 <memcpy>
    6415:	f3 0f 6f 4b 30       	movdqu 0x30(%rbx),%xmm1
    641a:	48 89 d8             	mov    %rbx,%rax
    641d:	48 89 df             	mov    %rbx,%rdi
    6420:	66 48 0f 6e c3       	movq   %rbx,%xmm0
    6425:	48 29 e8             	sub    %rbp,%rax
    6428:	48 01 43 10          	add    %rax,0x10(%rbx)
    642c:	ba 00 01 00 00       	mov    $0x100,%edx
    6431:	66 0f 6c c0          	punpcklqdq %xmm0,%xmm0
    6435:	be 00 10 00 00       	mov    $0x1000,%esi
    643a:	66 0f d4 c8          	paddq  %xmm0,%xmm1
    643e:	66 48 0f 6e c5       	movq   %rbp,%xmm0
    6443:	66 0f 6c c0          	punpcklqdq %xmm0,%xmm0
    6447:	66 0f fb c8          	psubq  %xmm0,%xmm1
    644b:	0f 11 4b 30          	movups %xmm1,0x30(%rbx)
    644f:	e8 3c 55 00 00       	call   b990 <mm_modify_type>
    6454:	85 c0                	test   %eax,%eax
    6456:	0f 95 c0             	setne  %al
    6459:	0f b6 c0             	movzbl %al,%eax
    645c:	e9 1a ff ff ff       	jmp    637b <do_add_thread+0xab>
    6461:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6468:	8b 70 04             	mov    0x4(%rax),%esi
    646b:	48 8b 78 08          	mov    0x8(%rax),%rdi
    646f:	48 c1 e6 0c          	shl    $0xc,%rsi
    6473:	4c 01 f7             	add    %r14,%rdi
    6476:	e8 d5 54 00 00       	call   b950 <mm_commit>
    647b:	85 c0                	test   %eax,%eax
    647d:	0f 84 36 ff ff ff    	je     63b9 <do_add_thread+0xe9>
    6483:	e9 ee fe ff ff       	jmp    6376 <do_add_thread+0xa6>
    6488:	e8 e3 a4 00 00       	call   10970 <__stack_chk_fail>
    648d:	0f 1f 00             	nopl   (%rax)

0000000000006490 <sgx_set_ssa_aexnotify>:
    6490:	f3 0f 1e fa          	endbr64 
    6494:	55                   	push   %rbp
    6495:	89 fd                	mov    %edi,%ebp
    6497:	53                   	push   %rbx
    6498:	48 83 ec 08          	sub    $0x8,%rsp
    649c:	e8 a2 ba 00 00       	call   11f43 <get_thread_data>
    64a1:	48 85 c0             	test   %rax,%rax
    64a4:	74 3a                	je     64e0 <sgx_set_ssa_aexnotify+0x50>
    64a6:	48 89 c3             	mov    %rax,%rbx
    64a9:	e8 92 ae 00 00       	call   11340 <sgx_self_report>
    64ae:	f6 40 31 04          	testb  $0x4,0x31(%rax)
    64b2:	74 2c                	je     64e0 <sgx_set_ssa_aexnotify+0x50>
    64b4:	48 8b 53 20          	mov    0x20(%rbx),%rdx
    64b8:	0f b6 82 a7 00 00 00 	movzbl 0xa7(%rdx),%eax
    64bf:	89 c1                	mov    %eax,%ecx
    64c1:	83 c8 01             	or     $0x1,%eax
    64c4:	83 e1 fe             	and    $0xfffffffe,%ecx
    64c7:	85 ed                	test   %ebp,%ebp
    64c9:	0f 44 c1             	cmove  %ecx,%eax
    64cc:	88 82 a7 00 00 00    	mov    %al,0xa7(%rdx)
    64d2:	48 83 c4 08          	add    $0x8,%rsp
    64d6:	31 c0                	xor    %eax,%eax
    64d8:	5b                   	pop    %rbx
    64d9:	5d                   	pop    %rbp
    64da:	c3                   	ret    
    64db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    64e0:	48 83 c4 08          	add    $0x8,%rsp
    64e4:	b8 01 00 00 00       	mov    $0x1,%eax
    64e9:	5b                   	pop    %rbx
    64ea:	5d                   	pop    %rbp
    64eb:	c3                   	ret    
    64ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000064f0 <sgx_register_aex_handler>:
    64f0:	f3 0f 1e fa          	endbr64 
    64f4:	48 85 ff             	test   %rdi,%rdi
    64f7:	0f 84 bb 00 00 00    	je     65b8 <sgx_register_aex_handler+0xc8>
    64fd:	41 55                	push   %r13
    64ff:	b8 02 00 00 00       	mov    $0x2,%eax
    6504:	41 54                	push   %r12
    6506:	49 89 f4             	mov    %rsi,%r12
    6509:	55                   	push   %rbp
    650a:	53                   	push   %rbx
    650b:	48 83 ec 08          	sub    $0x8,%rsp
    650f:	48 85 f6             	test   %rsi,%rsi
    6512:	74 2a                	je     653e <sgx_register_aex_handler+0x4e>
    6514:	48 89 fb             	mov    %rdi,%rbx
    6517:	48 89 d5             	mov    %rdx,%rbp
    651a:	e8 f1 11 00 00       	call   7710 <get_ssa_aexnotify>
    651f:	85 c0                	test   %eax,%eax
    6521:	75 2d                	jne    6550 <sgx_register_aex_handler+0x60>
    6523:	e8 1b ba 00 00       	call   11f43 <get_thread_data>
    6528:	66 48 0f 6e c5       	movq   %rbp,%xmm0
    652d:	0f 16 40 48          	movhps 0x48(%rax),%xmm0
    6531:	4c 89 23             	mov    %r12,(%rbx)
    6534:	0f 11 43 08          	movups %xmm0,0x8(%rbx)
    6538:	48 89 58 48          	mov    %rbx,0x48(%rax)
    653c:	31 c0                	xor    %eax,%eax
    653e:	48 83 c4 08          	add    $0x8,%rsp
    6542:	5b                   	pop    %rbx
    6543:	5d                   	pop    %rbp
    6544:	41 5c                	pop    %r12
    6546:	41 5d                	pop    %r13
    6548:	c3                   	ret    
    6549:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6550:	e8 ee b9 00 00       	call   11f43 <get_thread_data>
    6555:	49 89 c5             	mov    %rax,%r13
    6558:	48 85 c0             	test   %rax,%rax
    655b:	74 16                	je     6573 <sgx_register_aex_handler+0x83>
    655d:	e8 de ad 00 00       	call   11340 <sgx_self_report>
    6562:	f6 40 31 04          	testb  $0x4,0x31(%rax)
    6566:	74 0b                	je     6573 <sgx_register_aex_handler+0x83>
    6568:	49 8b 45 20          	mov    0x20(%r13),%rax
    656c:	80 a0 a7 00 00 00 fe 	andb   $0xfe,0xa7(%rax)
    6573:	e8 cb b9 00 00       	call   11f43 <get_thread_data>
    6578:	66 48 0f 6e c5       	movq   %rbp,%xmm0
    657d:	0f 16 40 48          	movhps 0x48(%rax),%xmm0
    6581:	4c 89 23             	mov    %r12,(%rbx)
    6584:	0f 11 43 08          	movups %xmm0,0x8(%rbx)
    6588:	48 89 58 48          	mov    %rbx,0x48(%rax)
    658c:	e8 b2 b9 00 00       	call   11f43 <get_thread_data>
    6591:	48 89 c3             	mov    %rax,%rbx
    6594:	48 85 c0             	test   %rax,%rax
    6597:	74 a3                	je     653c <sgx_register_aex_handler+0x4c>
    6599:	e8 a2 ad 00 00       	call   11340 <sgx_self_report>
    659e:	f6 40 31 04          	testb  $0x4,0x31(%rax)
    65a2:	74 98                	je     653c <sgx_register_aex_handler+0x4c>
    65a4:	48 8b 43 20          	mov    0x20(%rbx),%rax
    65a8:	80 88 a7 00 00 00 01 	orb    $0x1,0xa7(%rax)
    65af:	31 c0                	xor    %eax,%eax
    65b1:	eb 8b                	jmp    653e <sgx_register_aex_handler+0x4e>
    65b3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    65b8:	b8 02 00 00 00       	mov    $0x2,%eax
    65bd:	c3                   	ret    
    65be:	66 90                	xchg   %ax,%ax

00000000000065c0 <sgx_unregister_aex_handler>:
    65c0:	f3 0f 1e fa          	endbr64 
    65c4:	41 54                	push   %r12
    65c6:	55                   	push   %rbp
    65c7:	53                   	push   %rbx
    65c8:	48 85 ff             	test   %rdi,%rdi
    65cb:	0f 84 e7 00 00 00    	je     66b8 <sgx_unregister_aex_handler+0xf8>
    65d1:	48 89 fd             	mov    %rdi,%rbp
    65d4:	e8 37 11 00 00       	call   7710 <get_ssa_aexnotify>
    65d9:	89 c3                	mov    %eax,%ebx
    65db:	85 c0                	test   %eax,%eax
    65dd:	75 61                	jne    6640 <sgx_unregister_aex_handler+0x80>
    65df:	e8 5f b9 00 00       	call   11f43 <get_thread_data>
    65e4:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    65ea:	48 8b 50 48          	mov    0x48(%rax),%rdx
    65ee:	48 85 d2             	test   %rdx,%rdx
    65f1:	74 3d                	je     6630 <sgx_unregister_aex_handler+0x70>
    65f3:	31 f6                	xor    %esi,%esi
    65f5:	eb 1c                	jmp    6613 <sgx_unregister_aex_handler+0x53>
    65f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    65fe:	00 00 
    6600:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
    6604:	48 89 d6             	mov    %rdx,%rsi
    6607:	48 85 c9             	test   %rcx,%rcx
    660a:	0f 84 98 00 00 00    	je     66a8 <sgx_unregister_aex_handler+0xe8>
    6610:	48 89 ca             	mov    %rcx,%rdx
    6613:	48 39 2a             	cmp    %rbp,(%rdx)
    6616:	75 e8                	jne    6600 <sgx_unregister_aex_handler+0x40>
    6618:	48 8b 52 10          	mov    0x10(%rdx),%rdx
    661c:	48 85 f6             	test   %rsi,%rsi
    661f:	0f 84 ab 00 00 00    	je     66d0 <sgx_unregister_aex_handler+0x110>
    6625:	48 89 56 10          	mov    %rdx,0x10(%rsi)
    6629:	45 31 e4             	xor    %r12d,%r12d
    662c:	85 db                	test   %ebx,%ebx
    662e:	75 48                	jne    6678 <sgx_unregister_aex_handler+0xb8>
    6630:	44 89 e0             	mov    %r12d,%eax
    6633:	5b                   	pop    %rbx
    6634:	5d                   	pop    %rbp
    6635:	41 5c                	pop    %r12
    6637:	c3                   	ret    
    6638:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    663f:	00 
    6640:	e8 fe b8 00 00       	call   11f43 <get_thread_data>
    6645:	49 89 c4             	mov    %rax,%r12
    6648:	48 85 c0             	test   %rax,%rax
    664b:	74 17                	je     6664 <sgx_unregister_aex_handler+0xa4>
    664d:	e8 ee ac 00 00       	call   11340 <sgx_self_report>
    6652:	f6 40 31 04          	testb  $0x4,0x31(%rax)
    6656:	74 0c                	je     6664 <sgx_unregister_aex_handler+0xa4>
    6658:	49 8b 44 24 20       	mov    0x20(%r12),%rax
    665d:	80 a0 a7 00 00 00 fe 	andb   $0xfe,0xa7(%rax)
    6664:	e8 da b8 00 00       	call   11f43 <get_thread_data>
    6669:	48 8b 50 48          	mov    0x48(%rax),%rdx
    666d:	48 85 d2             	test   %rdx,%rdx
    6670:	75 81                	jne    65f3 <sgx_unregister_aex_handler+0x33>
    6672:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    6678:	e8 c6 b8 00 00       	call   11f43 <get_thread_data>
    667d:	48 89 c3             	mov    %rax,%rbx
    6680:	48 85 c0             	test   %rax,%rax
    6683:	74 ab                	je     6630 <sgx_unregister_aex_handler+0x70>
    6685:	e8 b6 ac 00 00       	call   11340 <sgx_self_report>
    668a:	f6 40 31 04          	testb  $0x4,0x31(%rax)
    668e:	74 a0                	je     6630 <sgx_unregister_aex_handler+0x70>
    6690:	48 8b 43 20          	mov    0x20(%rbx),%rax
    6694:	80 88 a7 00 00 00 01 	orb    $0x1,0xa7(%rax)
    669b:	44 89 e0             	mov    %r12d,%eax
    669e:	5b                   	pop    %rbx
    669f:	5d                   	pop    %rbp
    66a0:	41 5c                	pop    %r12
    66a2:	c3                   	ret    
    66a3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    66a8:	41 bc 02 00 00 00    	mov    $0x2,%r12d
    66ae:	e9 79 ff ff ff       	jmp    662c <sgx_unregister_aex_handler+0x6c>
    66b3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    66b8:	41 bc 02 00 00 00    	mov    $0x2,%r12d
    66be:	5b                   	pop    %rbx
    66bf:	5d                   	pop    %rbp
    66c0:	44 89 e0             	mov    %r12d,%eax
    66c3:	41 5c                	pop    %r12
    66c5:	c3                   	ret    
    66c6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    66cd:	00 00 00 
    66d0:	48 89 50 48          	mov    %rdx,0x48(%rax)
    66d4:	e9 50 ff ff ff       	jmp    6629 <sgx_unregister_aex_handler+0x69>
    66d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000066e0 <sgx_apply_mitigations>:
    66e0:	f3 0f 1e fa          	endbr64 
    66e4:	55                   	push   %rbp
    66e5:	48 89 fd             	mov    %rdi,%rbp
    66e8:	53                   	push   %rbx
    66e9:	48 83 ec 08          	sub    $0x8,%rsp
    66ed:	e8 51 b8 00 00       	call   11f43 <get_thread_data>
    66f2:	48 8b 58 48          	mov    0x48(%rax),%rbx
    66f6:	48 85 db             	test   %rbx,%rbx
    66f9:	74 17                	je     6712 <sgx_apply_mitigations+0x32>
    66fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6700:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    6704:	48 89 ef             	mov    %rbp,%rdi
    6707:	ff 13                	call   *(%rbx)
    6709:	48 8b 5b 10          	mov    0x10(%rbx),%rbx
    670d:	48 85 db             	test   %rbx,%rbx
    6710:	75 ee                	jne    6700 <sgx_apply_mitigations+0x20>
    6712:	48 83 c4 08          	add    $0x8,%rsp
    6716:	31 c0                	xor    %eax,%eax
    6718:	5b                   	pop    %rbx
    6719:	5d                   	pop    %rbp
    671a:	c3                   	ret    
    671b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000006720 <_pthread_thread_run>:
    6720:	f3 0f 1e fa          	endbr64 
    6724:	31 c0                	xor    %eax,%eax
    6726:	c3                   	ret    
    6727:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    672e:	00 00 

0000000000006730 <_ZL11do_save_tcsPv>:
    6730:	55                   	push   %rbp
    6731:	53                   	push   %rbx
    6732:	48 89 fb             	mov    %rdi,%rbx
    6735:	48 83 ec 18          	sub    $0x18,%rsp
    6739:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    6740:	00 00 
    6742:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    6747:	31 c0                	xor    %eax,%eax
    6749:	48 83 3d 27 3a 01 00 	cmpq   $0x0,0x13a27(%rip)        # 1a178 <_ZL12g_tcs_cookie>
    6750:	00 
    6751:	74 4d                	je     67a0 <_ZL11do_save_tcsPv+0x70>
    6753:	bf 10 00 00 00       	mov    $0x10,%edi
    6758:	e8 63 69 00 00       	call   d0c0 <dlmalloc>
    675d:	48 85 c0             	test   %rax,%rax
    6760:	74 68                	je     67ca <_ZL11do_save_tcsPv+0x9a>
    6762:	48 8b 15 17 3a 01 00 	mov    0x13a17(%rip),%rdx        # 1a180 <_ZL10g_tcs_node>
    6769:	48 33 1d 08 3a 01 00 	xor    0x13a08(%rip),%rbx        # 1a178 <_ZL12g_tcs_cookie>
    6770:	48 89 05 09 3a 01 00 	mov    %rax,0x13a09(%rip)        # 1a180 <_ZL10g_tcs_node>
    6777:	48 89 18             	mov    %rbx,(%rax)
    677a:	48 89 50 08          	mov    %rdx,0x8(%rax)
    677e:	31 c0                	xor    %eax,%eax
    6780:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    6785:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    678c:	00 00 
    678e:	75 62                	jne    67f2 <_ZL11do_save_tcsPv+0xc2>
    6790:	48 83 c4 18          	add    $0x18,%rsp
    6794:	5b                   	pop    %rbx
    6795:	5d                   	pop    %rbp
    6796:	c3                   	ret    
    6797:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    679e:	00 00 
    67a0:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    67a7:	00 
    67a8:	48 89 e5             	mov    %rsp,%rbp
    67ab:	eb 0c                	jmp    67b9 <_ZL11do_save_tcsPv+0x89>
    67ad:	0f 1f 00             	nopl   (%rax)
    67b0:	48 8b 04 24          	mov    (%rsp),%rax
    67b4:	48 85 c0             	test   %rax,%rax
    67b7:	75 1f                	jne    67d8 <_ZL11do_save_tcsPv+0xa8>
    67b9:	be 08 00 00 00       	mov    $0x8,%esi
    67be:	48 89 ef             	mov    %rbp,%rdi
    67c1:	e8 2a f5 ff ff       	call   5cf0 <sgx_read_rand>
    67c6:	85 c0                	test   %eax,%eax
    67c8:	74 e6                	je     67b0 <_ZL11do_save_tcsPv+0x80>
    67ca:	b8 01 00 00 00       	mov    $0x1,%eax
    67cf:	eb af                	jmp    6780 <_ZL11do_save_tcsPv+0x50>
    67d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    67d8:	48 83 3d 98 39 01 00 	cmpq   $0x0,0x13998(%rip)        # 1a178 <_ZL12g_tcs_cookie>
    67df:	00 
    67e0:	0f 85 6d ff ff ff    	jne    6753 <_ZL11do_save_tcsPv+0x23>
    67e6:	48 89 05 8b 39 01 00 	mov    %rax,0x1398b(%rip)        # 1a178 <_ZL12g_tcs_cookie>
    67ed:	e9 61 ff ff ff       	jmp    6753 <_ZL11do_save_tcsPv+0x23>
    67f2:	e8 79 a1 00 00       	call   10970 <__stack_chk_fail>
    67f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    67fe:	00 00 

0000000000006800 <_ZL18add_static_threadsPVK9_layout_tS1_m>:
    6800:	48 39 f7             	cmp    %rsi,%rdi
    6803:	0f 83 cf 00 00 00    	jae    68d8 <_ZL18add_static_threadsPVK9_layout_tS1_m+0xd8>
    6809:	41 56                	push   %r14
    680b:	41 55                	push   %r13
    680d:	49 89 f5             	mov    %rsi,%r13
    6810:	41 54                	push   %r12
    6812:	49 89 d4             	mov    %rdx,%r12
    6815:	55                   	push   %rbp
    6816:	53                   	push   %rbx
    6817:	48 89 fb             	mov    %rdi,%rbx
    681a:	eb 0d                	jmp    6829 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x29>
    681c:	0f 1f 40 00          	nopl   0x0(%rax)
    6820:	48 83 c3 20          	add    $0x20,%rbx
    6824:	4c 39 eb             	cmp    %r13,%rbx
    6827:	73 77                	jae    68a0 <_ZL18add_static_threadsPVK9_layout_tS1_m+0xa0>
    6829:	0f b7 03             	movzwl (%rbx),%eax
    682c:	f6 c4 10             	test   $0x10,%ah
    682f:	75 13                	jne    6844 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x44>
    6831:	48 8b 43 18          	mov    0x18(%rbx),%rax
    6835:	f6 c4 01             	test   $0x1,%ah
    6838:	74 0a                	je     6844 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x44>
    683a:	0f b7 43 02          	movzwl 0x2(%rbx),%eax
    683e:	66 83 f8 03          	cmp    $0x3,%ax
    6842:	74 6c                	je     68b0 <_ZL18add_static_threadsPVK9_layout_tS1_m+0xb0>
    6844:	0f b7 03             	movzwl (%rbx),%eax
    6847:	f6 c4 10             	test   $0x10,%ah
    684a:	74 d4                	je     6820 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x20>
    684c:	8b 43 04             	mov    0x4(%rbx),%eax
    684f:	85 c0                	test   %eax,%eax
    6851:	74 cd                	je     6820 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x20>
    6853:	31 ed                	xor    %ebp,%ebp
    6855:	45 31 f6             	xor    %r14d,%r14d
    6858:	eb 10                	jmp    686a <_ZL18add_static_threadsPVK9_layout_tS1_m+0x6a>
    685a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6860:	8b 43 04             	mov    0x4(%rbx),%eax
    6863:	83 c5 01             	add    $0x1,%ebp
    6866:	39 c5                	cmp    %eax,%ebp
    6868:	73 b6                	jae    6820 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x20>
    686a:	48 8b 43 08          	mov    0x8(%rbx),%rax
    686e:	0f b7 7b 02          	movzwl 0x2(%rbx),%edi
    6872:	48 89 de             	mov    %rbx,%rsi
    6875:	f7 df                	neg    %edi
    6877:	49 01 c6             	add    %rax,%r14
    687a:	48 63 ff             	movslq %edi,%rdi
    687d:	4c 89 f2             	mov    %r14,%rdx
    6880:	48 c1 e7 05          	shl    $0x5,%rdi
    6884:	48 01 df             	add    %rbx,%rdi
    6887:	e8 74 ff ff ff       	call   6800 <_ZL18add_static_threadsPVK9_layout_tS1_m>
    688c:	85 c0                	test   %eax,%eax
    688e:	74 d0                	je     6860 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x60>
    6890:	5b                   	pop    %rbx
    6891:	5d                   	pop    %rbp
    6892:	41 5c                	pop    %r12
    6894:	41 5d                	pop    %r13
    6896:	41 5e                	pop    %r14
    6898:	c3                   	ret    
    6899:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    68a0:	5b                   	pop    %rbx
    68a1:	31 c0                	xor    %eax,%eax
    68a3:	5d                   	pop    %rbp
    68a4:	41 5c                	pop    %r12
    68a6:	41 5d                	pop    %r13
    68a8:	41 5e                	pop    %r14
    68aa:	c3                   	ret    
    68ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    68b0:	48 8b 6b 08          	mov    0x8(%rbx),%rbp
    68b4:	e8 3f b6 00 00       	call   11ef8 <get_enclave_base>
    68b9:	4c 01 e5             	add    %r12,%rbp
    68bc:	48 8d 3c 28          	lea    (%rax,%rbp,1),%rdi
    68c0:	e8 6b fe ff ff       	call   6730 <_ZL11do_save_tcsPv>
    68c5:	85 c0                	test   %eax,%eax
    68c7:	0f 84 53 ff ff ff    	je     6820 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x20>
    68cd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    68d2:	eb bc                	jmp    6890 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x90>
    68d4:	0f 1f 40 00          	nopl   0x0(%rax)
    68d8:	31 c0                	xor    %eax,%eax
    68da:	c3                   	ret    
    68db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000068e0 <_ZL10trts_ecalljPv>:
    68e0:	f3 0f 1e fa          	endbr64 
    68e4:	41 55                	push   %r13
    68e6:	41 54                	push   %r12
    68e8:	55                   	push   %rbp
    68e9:	48 89 f5             	mov    %rsi,%rbp
    68ec:	53                   	push   %rbx
    68ed:	89 fb                	mov    %edi,%ebx
    68ef:	48 83 ec 08          	sub    $0x8,%rsp
    68f3:	0f b6 05 26 19 01 00 	movzbl 0x11926(%rip),%eax        # 18220 <_ZL16g_is_first_ecall>
    68fa:	84 c0                	test   %al,%al
    68fc:	0f 85 b6 00 00 00    	jne    69b8 <_ZL10trts_ecalljPv+0xd8>
    6902:	83 fb fa             	cmp    $0xfffffffa,%ebx
    6905:	0f 84 8d 00 00 00    	je     6998 <_ZL10trts_ecalljPv+0xb8>
    690b:	4c 8d 25 ae 14 01 00 	lea    0x114ae(%rip),%r12        # 17dc0 <g_ecall_table>
    6912:	49 3b 1c 24          	cmp    (%r12),%rbx
    6916:	73 68                	jae    6980 <_ZL10trts_ecalljPv+0xa0>
    6918:	e8 26 b6 00 00       	call   11f43 <get_thread_data>
    691d:	0f ae e8             	lfence 
    6920:	48 8b 50 08          	mov    0x8(%rax),%rdx
    6924:	48 3b 50 10          	cmp    0x10(%rax),%rdx
    6928:	0f 84 b2 00 00 00    	je     69e0 <_ZL10trts_ecalljPv+0x100>
    692e:	48 81 7a 20 44 49 43 	cmpq   $0x4f434944,0x20(%rdx)
    6935:	4f 
    6936:	0f 85 5b 01 00 00    	jne    6a97 <_ZL10trts_ecalljPv+0x1b7>
    693c:	48 8d 05 ed c6 00 00 	lea    0xc6ed(%rip),%rax        # 13030 <g_dyn_entry_table>
    6943:	48 8b 52 28          	mov    0x28(%rdx),%rdx
    6947:	48 3b 10             	cmp    (%rax),%rdx
    694a:	73 34                	jae    6980 <_ZL10trts_ecalljPv+0xa0>
    694c:	49 0f af 14 24       	imul   (%r12),%rdx
    6951:	48 01 d8             	add    %rbx,%rax
    6954:	80 7c 02 08 00       	cmpb   $0x0,0x8(%rdx,%rax,1)
    6959:	74 6c                	je     69c7 <_ZL10trts_ecalljPv+0xe7>
    695b:	48 c1 e3 04          	shl    $0x4,%rbx
    695f:	31 f6                	xor    %esi,%esi
    6961:	49 8b 5c 1c 08       	mov    0x8(%r12,%rbx,1),%rbx
    6966:	48 89 df             	mov    %rbx,%rdi
    6969:	e8 82 f1 ff ff       	call   5af0 <sgx_is_within_enclave>
    696e:	85 c0                	test   %eax,%eax
    6970:	0f 84 8a 00 00 00    	je     6a00 <_ZL10trts_ecalljPv+0x120>
    6976:	48 89 d8             	mov    %rbx,%rax
    6979:	eb 24                	jmp    699f <_ZL10trts_ecalljPv+0xbf>
    697b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6980:	41 bc 01 10 00 00    	mov    $0x1001,%r12d
    6986:	48 83 c4 08          	add    $0x8,%rsp
    698a:	44 89 e0             	mov    %r12d,%eax
    698d:	5b                   	pop    %rbx
    698e:	5d                   	pop    %rbp
    698f:	41 5c                	pop    %r12
    6991:	41 5d                	pop    %r13
    6993:	c3                   	ret    
    6994:	0f 1f 40 00          	nopl   0x0(%rax)
    6998:	48 8d 05 81 fd ff ff 	lea    -0x27f(%rip),%rax        # 6720 <_pthread_thread_run>
    699f:	0f ae e8             	lfence 
    69a2:	48 83 c4 08          	add    $0x8,%rsp
    69a6:	48 89 ef             	mov    %rbp,%rdi
    69a9:	5b                   	pop    %rbx
    69aa:	5d                   	pop    %rbp
    69ab:	41 5c                	pop    %r12
    69ad:	41 5d                	pop    %r13
    69af:	ff e0                	jmp    *%rax
    69b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    69b8:	e8 86 b5 00 00       	call   11f43 <get_thread_data>
    69bd:	48 8b 48 10          	mov    0x10(%rax),%rcx
    69c1:	48 39 48 08          	cmp    %rcx,0x8(%rax)
    69c5:	74 49                	je     6a10 <_ZL10trts_ecalljPv+0x130>
    69c7:	48 83 c4 08          	add    $0x8,%rsp
    69cb:	41 bc 07 10 00 00    	mov    $0x1007,%r12d
    69d1:	5b                   	pop    %rbx
    69d2:	44 89 e0             	mov    %r12d,%eax
    69d5:	5d                   	pop    %rbp
    69d6:	41 5c                	pop    %r12
    69d8:	41 5d                	pop    %r13
    69da:	c3                   	ret    
    69db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    69e0:	48 89 d8             	mov    %rbx,%rax
    69e3:	48 c1 e0 04          	shl    $0x4,%rax
    69e7:	41 80 7c 04 10 00    	cmpb   $0x0,0x10(%r12,%rax,1)
    69ed:	0f 84 68 ff ff ff    	je     695b <_ZL10trts_ecalljPv+0x7b>
    69f3:	eb d2                	jmp    69c7 <_ZL10trts_ecalljPv+0xe7>
    69f5:	4c 89 ef             	mov    %r13,%rdi
    69f8:	e8 93 5d 00 00       	call   c790 <sgx_spin_unlock>
    69fd:	0f 1f 00             	nopl   (%rax)
    6a00:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    6a06:	e9 7b ff ff ff       	jmp    6986 <_ZL10trts_ecalljPv+0xa6>
    6a0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6a10:	4c 8d 2d 5d 37 01 00 	lea    0x1375d(%rip),%r13        # 1a174 <_ZL10g_ife_lock>
    6a17:	4c 89 ef             	mov    %r13,%rdi
    6a1a:	e8 e1 5c 00 00       	call   c700 <sgx_spin_lock>
    6a1f:	0f b6 05 fa 17 01 00 	movzbl 0x117fa(%rip),%eax        # 18220 <_ZL16g_is_first_ecall>
    6a26:	84 c0                	test   %al,%al
    6a28:	74 53                	je     6a7d <_ZL10trts_ecalljPv+0x19d>
    6a2a:	48 8d 05 fb 13 01 00 	lea    0x113fb(%rip),%rax        # 17e2c <EDMM_supported>
    6a31:	8b 00                	mov    (%rax),%eax
    6a33:	85 c0                	test   %eax,%eax
    6a35:	74 3a                	je     6a71 <_ZL10trts_ecalljPv+0x191>
    6a37:	48 8d 05 42 c7 00 00 	lea    0xc742(%rip),%rax        # 13180 <g_global_data>
    6a3e:	31 d2                	xor    %edx,%edx
    6a40:	8b b0 58 01 00 00    	mov    0x158(%rax),%esi
    6a46:	48 8d b8 60 01 00 00 	lea    0x160(%rax),%rdi
    6a4d:	48 c1 e6 05          	shl    $0x5,%rsi
    6a51:	48 01 fe             	add    %rdi,%rsi
    6a54:	e8 a7 fd ff ff       	call   6800 <_ZL18add_static_threadsPVK9_layout_tS1_m>
    6a59:	85 c0                	test   %eax,%eax
    6a5b:	75 98                	jne    69f5 <_ZL10trts_ecalljPv+0x115>
    6a5d:	e8 96 b4 00 00       	call   11ef8 <get_enclave_base>
    6a62:	48 89 c7             	mov    %rax,%rdi
    6a65:	e8 a6 1d 00 00       	call   8810 <change_protection>
    6a6a:	41 89 c4             	mov    %eax,%r12d
    6a6d:	85 c0                	test   %eax,%eax
    6a6f:	75 19                	jne    6a8a <_ZL10trts_ecalljPv+0x1aa>
    6a71:	e8 ca 21 00 00       	call   8c40 <init_global_object>
    6a76:	c6 05 a3 17 01 00 00 	movb   $0x0,0x117a3(%rip)        # 18220 <_ZL16g_is_first_ecall>
    6a7d:	4c 89 ef             	mov    %r13,%rdi
    6a80:	e8 0b 5d 00 00       	call   c790 <sgx_spin_unlock>
    6a85:	e9 78 fe ff ff       	jmp    6902 <_ZL10trts_ecalljPv+0x22>
    6a8a:	4c 89 ef             	mov    %r13,%rdi
    6a8d:	e8 fe 5c 00 00       	call   c790 <sgx_spin_unlock>
    6a92:	e9 ef fe ff ff       	jmp    6986 <_ZL10trts_ecalljPv+0xa6>
    6a97:	e8 9b b8 00 00       	call   12337 <abort>
    6a9c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000006aa0 <_Z30_random_stack_noinline_wrapperI9_status_tJjPvEJRiRS1_EET_PFS4_DpT0_EDpOT1_.constprop.0.isra.0>:
    6aa0:	e9 3b fe ff ff       	jmp    68e0 <_ZL10trts_ecalljPv>
    6aa5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6aac:	00 00 00 
    6aaf:	90                   	nop

0000000000006ab0 <_Z16_pthread_enabledv>:
    6ab0:	f3 0f 1e fa          	endbr64 
    6ab4:	31 c0                	xor    %eax,%eax
    6ab6:	c3                   	ret    
    6ab7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    6abe:	00 00 

0000000000006ac0 <_Z24_pthread_tls_store_state9_status_t>:
    6ac0:	f3 0f 1e fa          	endbr64 
    6ac4:	c3                   	ret    
    6ac5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6acc:	00 00 00 
    6acf:	90                   	nop

0000000000006ad0 <_Z22_pthread_tls_get_statev>:
    6ad0:	f3 0f 1e fa          	endbr64 
    6ad4:	31 c0                	xor    %eax,%eax
    6ad6:	c3                   	ret    
    6ad7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    6ade:	00 00 

0000000000006ae0 <_Z26_pthread_tls_store_contextPv>:
    6ae0:	f3 0f 1e fa          	endbr64 
    6ae4:	c3                   	ret    
    6ae5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6aec:	00 00 00 
    6aef:	90                   	nop

0000000000006af0 <_Z20_pthread_wakeup_joinPv>:
    6af0:	f3 0f 1e fa          	endbr64 
    6af4:	c3                   	ret    
    6af5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6afc:	00 00 00 
    6aff:	90                   	nop

0000000000006b00 <_Z24_pthread_tls_destructorsv>:
    6b00:	f3 0f 1e fa          	endbr64 
    6b04:	c3                   	ret    
    6b05:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6b0c:	00 00 00 
    6b0f:	90                   	nop

0000000000006b10 <tc_set_idle>:
    6b10:	f3 0f 1e fa          	endbr64 
    6b14:	c3                   	ret    
    6b15:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6b1c:	00 00 00 
    6b1f:	90                   	nop

0000000000006b20 <do_init_thread>:
    6b20:	f3 0f 1e fa          	endbr64 
    6b24:	41 57                	push   %r15
    6b26:	66 48 0f 6e d7       	movq   %rdi,%xmm2
    6b2b:	ba c0 00 00 00       	mov    $0xc0,%edx
    6b30:	41 56                	push   %r14
    6b32:	66 0f 6c d2          	punpcklqdq %xmm2,%xmm2
    6b36:	41 55                	push   %r13
    6b38:	41 54                	push   %r12
    6b3a:	41 89 f4             	mov    %esi,%r12d
    6b3d:	55                   	push   %rbp
    6b3e:	48 89 fd             	mov    %rdi,%rbp
    6b41:	53                   	push   %rbx
    6b42:	48 83 ec 38          	sub    $0x38,%rsp
    6b46:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    6b4d:	00 00 
    6b4f:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    6b54:	48 8d 05 25 c6 00 00 	lea    0xc625(%rip),%rax        # 13180 <g_global_data>
    6b5b:	0f 29 14 24          	movaps %xmm2,(%rsp)
    6b5f:	48 8b 58 50          	mov    0x50(%rax),%rbx
    6b63:	48 8d 70 50          	lea    0x50(%rax),%rsi
    6b67:	48 01 fb             	add    %rdi,%rbx
    6b6a:	48 89 df             	mov    %rbx,%rdi
    6b6d:	4c 8b 7b 28          	mov    0x28(%rbx),%r15
    6b71:	4c 8b 73 30          	mov    0x30(%rbx),%r14
    6b75:	4c 8b ab b0 00 00 00 	mov    0xb0(%rbx),%r13
    6b7c:	e8 df 9a 00 00       	call   10660 <memcpy>
    6b81:	48 8d 85 00 fc ff ff 	lea    -0x400(%rbp),%rax
    6b88:	f3 0f 6f 1b          	movdqu (%rbx),%xmm3
    6b8c:	f3 0f 6f 6b 10       	movdqu 0x10(%rbx),%xmm5
    6b91:	66 48 0f 6e c0       	movq   %rax,%xmm0
    6b96:	48 8b 43 18          	mov    0x18(%rbx),%rax
    6b9a:	f3 0f 6f 73 68       	movdqu 0x68(%rbx),%xmm6
    6b9f:	66 48 0f 6e cd       	movq   %rbp,%xmm1
    6ba4:	66 0f 6f 14 24       	movdqa (%rsp),%xmm2
    6ba9:	66 48 0f 6e e5       	movq   %rbp,%xmm4
    6bae:	66 0f 6c c8          	punpcklqdq %xmm0,%xmm1
    6bb2:	48 01 6b 20          	add    %rbp,0x20(%rbx)
    6bb6:	48 01 e8             	add    %rbp,%rax
    6bb9:	66 0f 6c c4          	punpcklqdq %xmm4,%xmm0
    6bbd:	66 0f d4 cb          	paddq  %xmm3,%xmm1
    6bc1:	48 01 6b 58          	add    %rbp,0x58(%rbx)
    6bc5:	48 89 83 b0 00 00 00 	mov    %rax,0xb0(%rbx)
    6bcc:	48 8d 05 35 12 01 00 	lea    0x11235(%rip),%rax        # 17e08 <__intel_security_cookie>
    6bd3:	66 0f d4 c5          	paddq  %xmm5,%xmm0
    6bd7:	66 0f d4 d6          	paddq  %xmm6,%xmm2
    6bdb:	4c 89 7b 28          	mov    %r15,0x28(%rbx)
    6bdf:	48 8b 00             	mov    (%rax),%rax
    6be2:	4c 89 73 30          	mov    %r14,0x30(%rbx)
    6be6:	0f 11 53 68          	movups %xmm2,0x68(%rbx)
    6bea:	0f 11 0b             	movups %xmm1,(%rbx)
    6bed:	0f 11 43 10          	movups %xmm0,0x10(%rbx)
    6bf1:	48 89 85 08 fc fe ff 	mov    %rax,-0x103f8(%rbp)
    6bf8:	48 8d 05 2d 12 01 00 	lea    0x1122d(%rip),%rax        # 17e2c <EDMM_supported>
    6bff:	8b 00                	mov    (%rax),%eax
    6c01:	85 c0                	test   %eax,%eax
    6c03:	48 8d 05 0a 12 01 00 	lea    0x1120a(%rip),%rax        # 17e14 <g_aexnotify_supported>
    6c0a:	0f 85 f0 00 00 00    	jne    6d00 <do_init_thread+0x1e0>
    6c10:	83 38 01             	cmpl   $0x1,(%rax)
    6c13:	0f 84 17 01 00 00    	je     6d30 <do_init_thread+0x210>
    6c19:	4d 85 ed             	test   %r13,%r13
    6c1c:	0f 85 c8 00 00 00    	jne    6cea <do_init_thread+0x1ca>
    6c22:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6c28:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
    6c2f:	00 00 
    6c31:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    6c38:	00 00 
    6c3a:	e8 b9 b2 00 00       	call   11ef8 <get_enclave_base>
    6c3f:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
    6c44:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
    6c49:	48 89 c7             	mov    %rax,%rdi
    6c4c:	e8 3f 19 00 00       	call   8590 <elf_tls_info>
    6c51:	89 c2                	mov    %eax,%edx
    6c53:	b8 01 00 00 00       	mov    $0x1,%eax
    6c58:	85 d2                	test   %edx,%edx
    6c5a:	75 0a                	jne    6c66 <do_init_thread+0x146>
    6c5c:	48 83 7c 24 18 00    	cmpq   $0x0,0x18(%rsp)
    6c62:	75 2c                	jne    6c90 <do_init_thread+0x170>
    6c64:	31 c0                	xor    %eax,%eax
    6c66:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    6c6b:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    6c72:	00 00 
    6c74:	0f 85 00 01 00 00    	jne    6d7a <do_init_thread+0x25a>
    6c7a:	48 83 c4 38          	add    $0x38,%rsp
    6c7e:	5b                   	pop    %rbx
    6c7f:	5d                   	pop    %rbp
    6c80:	41 5c                	pop    %r12
    6c82:	41 5d                	pop    %r13
    6c84:	41 5e                	pop    %r14
    6c86:	41 5f                	pop    %r15
    6c88:	c3                   	ret    
    6c89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6c90:	48 8b 03             	mov    (%rbx),%rax
    6c93:	48 8b 7b 68          	mov    0x68(%rbx),%rdi
    6c97:	31 f6                	xor    %esi,%esi
    6c99:	48 8d 90 ff 0f 00 00 	lea    0xfff(%rax),%rdx
    6ca0:	48 29 fa             	sub    %rdi,%rdx
    6ca3:	48 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%rdi
    6caa:	48 81 e2 00 f0 ff ff 	and    $0xfffffffffffff000,%rdx
    6cb1:	e8 ea 9b 00 00       	call   108a0 <memset>
    6cb6:	48 8b 7b 68          	mov    0x68(%rbx),%rdi
    6cba:	48 8b 03             	mov    (%rbx),%rax
    6cbd:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
    6cc2:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    6cc7:	48 29 f8             	sub    %rdi,%rax
    6cca:	48 39 d0             	cmp    %rdx,%rax
    6ccd:	72 95                	jb     6c64 <do_init_thread+0x144>
    6ccf:	e8 8c 99 00 00       	call   10660 <memcpy>
    6cd4:	eb 8e                	jmp    6c64 <do_init_thread+0x144>
    6cd6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6cdd:	00 00 00 
    6ce0:	83 f8 01             	cmp    $0x1,%eax
    6ce3:	74 7b                	je     6d60 <do_init_thread+0x240>
    6ce5:	4d 85 ed             	test   %r13,%r13
    6ce8:	74 5e                	je     6d48 <do_init_thread+0x228>
    6cea:	4c 89 ab b0 00 00 00 	mov    %r13,0xb0(%rbx)
    6cf1:	e9 32 ff ff ff       	jmp    6c28 <do_init_thread+0x108>
    6cf6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6cfd:	00 00 00 
    6d00:	8b 00                	mov    (%rax),%eax
    6d02:	45 84 e4             	test   %r12b,%r12b
    6d05:	74 d9                	je     6ce0 <do_init_thread+0x1c0>
    6d07:	48 c7 43 30 01 00 00 	movq   $0x1,0x30(%rbx)
    6d0e:	00 
    6d0f:	83 f8 01             	cmp    $0x1,%eax
    6d12:	74 5c                	je     6d70 <do_init_thread+0x250>
    6d14:	4d 85 ed             	test   %r13,%r13
    6d17:	75 d1                	jne    6cea <do_init_thread+0x1ca>
    6d19:	e8 52 f5 ff ff       	call   6270 <get_dynamic_stack_max_page>
    6d1e:	89 c0                	mov    %eax,%eax
    6d20:	48 c1 e0 0c          	shl    $0xc,%rax
    6d24:	48 01 83 b0 00 00 00 	add    %rax,0xb0(%rbx)
    6d2b:	e9 f8 fe ff ff       	jmp    6c28 <do_init_thread+0x108>
    6d30:	48 c7 43 50 01 00 00 	movq   $0x1,0x50(%rbx)
    6d37:	00 
    6d38:	4d 85 ed             	test   %r13,%r13
    6d3b:	75 ad                	jne    6cea <do_init_thread+0x1ca>
    6d3d:	e9 e6 fe ff ff       	jmp    6c28 <do_init_thread+0x108>
    6d42:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6d48:	48 89 ef             	mov    %rbp,%rdi
    6d4b:	e8 50 f4 ff ff       	call   61a0 <is_dynamic_thread>
    6d50:	85 c0                	test   %eax,%eax
    6d52:	75 c5                	jne    6d19 <do_init_thread+0x1f9>
    6d54:	e9 cf fe ff ff       	jmp    6c28 <do_init_thread+0x108>
    6d59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6d60:	48 c7 43 50 01 00 00 	movq   $0x1,0x50(%rbx)
    6d67:	00 
    6d68:	e9 78 ff ff ff       	jmp    6ce5 <do_init_thread+0x1c5>
    6d6d:	0f 1f 00             	nopl   (%rax)
    6d70:	48 c7 43 50 01 00 00 	movq   $0x1,0x50(%rbx)
    6d77:	00 
    6d78:	eb 9a                	jmp    6d14 <do_init_thread+0x1f4>
    6d7a:	e8 f1 9b 00 00       	call   10970 <__stack_chk_fail>
    6d7f:	90                   	nop

0000000000006d80 <do_ecall>:
    6d80:	f3 0f 1e fa          	endbr64 
    6d84:	53                   	push   %rbx
    6d85:	48 89 d3             	mov    %rdx,%rbx
    6d88:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    6d8c:	89 7c 24 20          	mov    %edi,0x20(%rsp)
    6d90:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    6d95:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    6d9c:	00 00 
    6d9e:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    6da3:	31 c0                	xor    %eax,%eax
    6da5:	e8 5a b1 00 00       	call   11f04 <get_enclave_state>
    6daa:	89 c2                	mov    %eax,%edx
    6dac:	b8 01 00 00 00       	mov    $0x1,%eax
    6db1:	83 fa 02             	cmp    $0x2,%edx
    6db4:	74 1a                	je     6dd0 <do_ecall+0x50>
    6db6:	48 8b 54 24 78       	mov    0x78(%rsp),%rdx
    6dbb:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    6dc2:	00 00 
    6dc4:	0f 85 0c 02 00 00    	jne    6fd6 <do_ecall+0x256>
    6dca:	48 83 ec 80          	sub    $0xffffffffffffff80,%rsp
    6dce:	5b                   	pop    %rbx
    6dcf:	c3                   	ret    
    6dd0:	e8 6e b1 00 00       	call   11f43 <get_thread_data>
    6dd5:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    6dda:	48 85 c0             	test   %rax,%rax
    6ddd:	0f 84 31 01 00 00    	je     6f14 <do_ecall+0x194>
    6de3:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    6de8:	48 8b 48 08          	mov    0x8(%rax),%rcx
    6dec:	48 39 48 10          	cmp    %rcx,0x10(%rax)
    6df0:	0f 84 0a 01 00 00    	je     6f00 <do_ecall+0x180>
    6df6:	e8 48 b1 00 00       	call   11f43 <get_thread_data>
    6dfb:	48 83 78 50 01       	cmpq   $0x1,0x50(%rax)
    6e00:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    6e05:	0f 84 25 01 00 00    	je     6f30 <do_ecall+0x1b0>
    6e0b:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    6e10:	48 8b 48 08          	mov    0x8(%rax),%rcx
    6e14:	48 39 48 10          	cmp    %rcx,0x10(%rax)
    6e18:	74 56                	je     6e70 <do_ecall+0xf0>
    6e1a:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    6e1f:	8b 7c 24 20          	mov    0x20(%rsp),%edi
    6e23:	e8 b8 fa ff ff       	call   68e0 <_ZL10trts_ecalljPv>
    6e28:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
    6e2d:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
    6e32:	48 8d 15 47 c3 00 00 	lea    0xc347(%rip),%rdx        # 13180 <g_global_data>
    6e39:	48 8b 52 38          	mov    0x38(%rdx),%rdx
    6e3d:	48 85 d2             	test   %rdx,%rdx
    6e40:	0f 84 70 ff ff ff    	je     6db6 <do_ecall+0x36>
    6e46:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    6e4b:	48 8b 59 08          	mov    0x8(%rcx),%rbx
    6e4f:	48 39 59 10          	cmp    %rbx,0x10(%rcx)
    6e53:	0f 85 5d ff ff ff    	jne    6db6 <do_ecall+0x36>
    6e59:	89 44 24 2c          	mov    %eax,0x2c(%rsp)
    6e5d:	e8 ae fc ff ff       	call   6b10 <tc_set_idle>
    6e62:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
    6e66:	e9 4b ff ff ff       	jmp    6db6 <do_ecall+0x36>
    6e6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6e70:	31 ff                	xor    %edi,%edi
    6e72:	e8 f9 ef ff ff       	call   5e70 <sgx_wrpkru>
    6e77:	e8 34 fc ff ff       	call   6ab0 <_Z16_pthread_enabledv>
    6e7c:	84 c0                	test   %al,%al
    6e7e:	0f 84 0c 01 00 00    	je     6f90 <do_ecall+0x210>
    6e84:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    6e89:	66 0f ef c0          	pxor   %xmm0,%xmm0
    6e8d:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
    6e92:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
    6e97:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    6e9c:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
    6ea1:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
    6ea6:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
    6eab:	e8 f2 9d 00 00       	call   10ca2 <setjmp>
    6eb0:	f3 0f 1e fa          	endbr64 
    6eb4:	85 c0                	test   %eax,%eax
    6eb6:	0f 84 94 00 00 00    	je     6f50 <do_ecall+0x1d0>
    6ebc:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    6ec1:	48 8b 41 10          	mov    0x10(%rcx),%rax
    6ec5:	48 89 41 08          	mov    %rax,0x8(%rcx)
    6ec9:	b8 09 00 00 00       	mov    $0x9,%eax
    6ece:	bf 09 00 00 00       	mov    $0x9,%edi
    6ed3:	89 44 24 28          	mov    %eax,0x28(%rsp)
    6ed7:	e8 e4 fb ff ff       	call   6ac0 <_Z24_pthread_tls_store_state9_status_t>
    6edc:	8b 44 24 28          	mov    0x28(%rsp),%eax
    6ee0:	89 44 24 24          	mov    %eax,0x24(%rsp)
    6ee4:	e8 17 fc ff ff       	call   6b00 <_Z24_pthread_tls_destructorsv>
    6ee9:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    6eee:	e8 fd fb ff ff       	call   6af0 <_Z20_pthread_wakeup_joinPv>
    6ef3:	8b 44 24 24          	mov    0x24(%rsp),%eax
    6ef7:	e9 36 ff ff ff       	jmp    6e32 <do_ecall+0xb2>
    6efc:	0f 1f 40 00          	nopl   0x0(%rax)
    6f00:	48 8d 05 79 c2 00 00 	lea    0xc279(%rip),%rax        # 13180 <g_global_data>
    6f07:	48 8b 40 38          	mov    0x38(%rax),%rax
    6f0b:	48 85 c0             	test   %rax,%rax
    6f0e:	0f 84 a4 00 00 00    	je     6fb8 <do_ecall+0x238>
    6f14:	31 f6                	xor    %esi,%esi
    6f16:	48 89 df             	mov    %rbx,%rdi
    6f19:	e8 02 fc ff ff       	call   6b20 <do_init_thread>
    6f1e:	85 c0                	test   %eax,%eax
    6f20:	0f 84 d0 fe ff ff    	je     6df6 <do_ecall+0x76>
    6f26:	e9 8b fe ff ff       	jmp    6db6 <do_ecall+0x36>
    6f2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6f30:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    6f35:	bf 01 00 00 00       	mov    $0x1,%edi
    6f3a:	48 c7 40 50 00 00 00 	movq   $0x0,0x50(%rax)
    6f41:	00 
    6f42:	e8 49 f5 ff ff       	call   6490 <sgx_set_ssa_aexnotify>
    6f47:	e9 bf fe ff ff       	jmp    6e0b <do_ecall+0x8b>
    6f4c:	0f 1f 40 00          	nopl   0x0(%rax)
    6f50:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
    6f55:	e8 86 fb ff ff       	call   6ae0 <_Z26_pthread_tls_store_contextPv>
    6f5a:	0f c7 f0             	rdrand %eax
    6f5d:	73 fb                	jae    6f5a <do_ecall+0x1da>
    6f5f:	8b 5c 24 20          	mov    0x20(%rsp),%ebx
    6f63:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    6f68:	89 df                	mov    %ebx,%edi
    6f6a:	e8 31 fb ff ff       	call   6aa0 <_Z30_random_stack_noinline_wrapperI9_status_tJjPvEJRiRS1_EET_PFS4_DpT0_EDpOT1_.constprop.0.isra.0>
    6f6f:	83 fb fa             	cmp    $0xfffffffa,%ebx
    6f72:	0f 84 56 ff ff ff    	je     6ece <do_ecall+0x14e>
    6f78:	83 f8 09             	cmp    $0x9,%eax
    6f7b:	0f 85 5f ff ff ff    	jne    6ee0 <do_ecall+0x160>
    6f81:	e9 43 ff ff ff       	jmp    6ec9 <do_ecall+0x149>
    6f86:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6f8d:	00 00 00 
    6f90:	0f c7 f0             	rdrand %eax
    6f93:	73 fb                	jae    6f90 <do_ecall+0x210>
    6f95:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    6f9a:	8b 7c 24 20          	mov    0x20(%rsp),%edi
    6f9e:	e8 fd fa ff ff       	call   6aa0 <_Z30_random_stack_noinline_wrapperI9_status_tJjPvEJRiRS1_EET_PFS4_DpT0_EDpOT1_.constprop.0.isra.0>
    6fa3:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    6fa8:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    6fad:	e9 80 fe ff ff       	jmp    6e32 <do_ecall+0xb2>
    6fb2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6fb8:	e8 13 fb ff ff       	call   6ad0 <_Z22_pthread_tls_get_statev>
    6fbd:	83 7c 24 20 fa       	cmpl   $0xfffffffa,0x20(%rsp)
    6fc2:	0f 84 4c ff ff ff    	je     6f14 <do_ecall+0x194>
    6fc8:	83 f8 09             	cmp    $0x9,%eax
    6fcb:	0f 85 25 fe ff ff    	jne    6df6 <do_ecall+0x76>
    6fd1:	e9 3e ff ff ff       	jmp    6f14 <do_ecall+0x194>
    6fd6:	e8 95 99 00 00       	call   10970 <__stack_chk_fail>
    6fdb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000006fe0 <do_ecall_add_thread>:
    6fe0:	f3 0f 1e fa          	endbr64 
    6fe4:	55                   	push   %rbp
    6fe5:	53                   	push   %rbx
    6fe6:	48 89 fb             	mov    %rdi,%rbx
    6fe9:	48 83 ec 08          	sub    $0x8,%rsp
    6fed:	e8 5e 06 00 00       	call   7650 <is_utility_thread>
    6ff2:	48 85 db             	test   %rbx,%rbx
    6ff5:	0f 84 a5 00 00 00    	je     70a0 <do_ecall_add_thread+0xc0>
    6ffb:	3c 01                	cmp    $0x1,%al
    6ffd:	0f 85 9d 00 00 00    	jne    70a0 <do_ecall_add_thread+0xc0>
    7003:	be 08 00 00 00       	mov    $0x8,%esi
    7008:	48 89 df             	mov    %rbx,%rdi
    700b:	e8 40 eb ff ff       	call   5b50 <sgx_is_outside_enclave>
    7010:	85 c0                	test   %eax,%eax
    7012:	0f 84 88 00 00 00    	je     70a0 <do_ecall_add_thread+0xc0>
    7018:	0f ae e8             	lfence 
    701b:	48 8b 2b             	mov    (%rbx),%rbp
    701e:	48 85 ed             	test   %rbp,%rbp
    7021:	74 7d                	je     70a0 <do_ecall_add_thread+0xc0>
    7023:	0f ae e8             	lfence 
    7026:	48 89 ef             	mov    %rbp,%rdi
    7029:	e8 02 f7 ff ff       	call   6730 <_ZL11do_save_tcsPv>
    702e:	89 c3                	mov    %eax,%ebx
    7030:	85 c0                	test   %eax,%eax
    7032:	75 71                	jne    70a5 <do_ecall_add_thread+0xc5>
    7034:	48 89 ef             	mov    %rbp,%rdi
    7037:	e8 94 f2 ff ff       	call   62d0 <do_add_thread>
    703c:	89 c3                	mov    %eax,%ebx
    703e:	85 c0                	test   %eax,%eax
    7040:	74 63                	je     70a5 <do_ecall_add_thread+0xc5>
    7042:	e8 09 06 00 00       	call   7650 <is_utility_thread>
    7047:	84 c0                	test   %al,%al
    7049:	74 5a                	je     70a5 <do_ecall_add_thread+0xc5>
    704b:	48 8b 0d 2e 31 01 00 	mov    0x1312e(%rip),%rcx        # 1a180 <_ZL10g_tcs_node>
    7052:	48 85 c9             	test   %rcx,%rcx
    7055:	74 4e                	je     70a5 <do_ecall_add_thread+0xc5>
    7057:	48 8b 35 1a 31 01 00 	mov    0x1311a(%rip),%rsi        # 1a178 <_ZL12g_tcs_cookie>
    705e:	48 8b 01             	mov    (%rcx),%rax
    7061:	48 8b 79 08          	mov    0x8(%rcx),%rdi
    7065:	48 31 f0             	xor    %rsi,%rax
    7068:	48 39 c5             	cmp    %rax,%rbp
    706b:	74 41                	je     70ae <do_ecall_add_thread+0xce>
    706d:	48 85 ff             	test   %rdi,%rdi
    7070:	75 11                	jne    7083 <do_ecall_add_thread+0xa3>
    7072:	eb 31                	jmp    70a5 <do_ecall_add_thread+0xc5>
    7074:	0f 1f 40 00          	nopl   0x0(%rax)
    7078:	48 89 f9             	mov    %rdi,%rcx
    707b:	48 85 c0             	test   %rax,%rax
    707e:	74 25                	je     70a5 <do_ecall_add_thread+0xc5>
    7080:	48 89 c7             	mov    %rax,%rdi
    7083:	48 8b 17             	mov    (%rdi),%rdx
    7086:	48 8b 47 08          	mov    0x8(%rdi),%rax
    708a:	48 31 f2             	xor    %rsi,%rdx
    708d:	48 39 d5             	cmp    %rdx,%rbp
    7090:	75 e6                	jne    7078 <do_ecall_add_thread+0x98>
    7092:	48 89 41 08          	mov    %rax,0x8(%rcx)
    7096:	e8 15 7e 00 00       	call   eeb0 <dlfree>
    709b:	eb 08                	jmp    70a5 <do_ecall_add_thread+0xc5>
    709d:	0f 1f 00             	nopl   (%rax)
    70a0:	bb 01 00 00 00       	mov    $0x1,%ebx
    70a5:	48 83 c4 08          	add    $0x8,%rsp
    70a9:	89 d8                	mov    %ebx,%eax
    70ab:	5b                   	pop    %rbx
    70ac:	5d                   	pop    %rbp
    70ad:	c3                   	ret    
    70ae:	48 89 3d cb 30 01 00 	mov    %rdi,0x130cb(%rip)        # 1a180 <_ZL10g_tcs_node>
    70b5:	48 89 cf             	mov    %rcx,%rdi
    70b8:	e8 f3 7d 00 00       	call   eeb0 <dlfree>
    70bd:	eb e6                	jmp    70a5 <do_ecall_add_thread+0xc5>
    70bf:	90                   	nop

00000000000070c0 <do_uninit_enclave>:
    70c0:	f3 0f 1e fa          	endbr64 
    70c4:	48 8d 05 61 0d 01 00 	lea    0x10d61(%rip),%rax        # 17e2c <EDMM_supported>
    70cb:	41 54                	push   %r12
    70cd:	55                   	push   %rbp
    70ce:	53                   	push   %rbx
    70cf:	8b 00                	mov    (%rax),%eax
    70d1:	85 c0                	test   %eax,%eax
    70d3:	0f 84 a4 00 00 00    	je     717d <do_uninit_enclave+0xbd>
    70d9:	49 89 fc             	mov    %rdi,%r12
    70dc:	e8 6f 05 00 00       	call   7650 <is_utility_thread>
    70e1:	84 c0                	test   %al,%al
    70e3:	0f 84 87 00 00 00    	je     7170 <do_uninit_enclave+0xb0>
    70e9:	f0 83 0d 7f 30 01 00 	lock orl $0x1,0x1307f(%rip)        # 1a170 <g_uninit_flag>
    70f0:	01 
    70f1:	48 8b 1d 88 30 01 00 	mov    0x13088(%rip),%rbx        # 1a180 <_ZL10g_tcs_node>
    70f8:	48 c7 05 7d 30 01 00 	movq   $0x0,0x1307d(%rip)        # 1a180 <_ZL10g_tcs_node>
    70ff:	00 00 00 00 
    7103:	eb 2f                	jmp    7134 <do_uninit_enclave+0x74>
    7105:	0f 1f 00             	nopl   (%rax)
    7108:	48 8b 3b             	mov    (%rbx),%rdi
    710b:	48 33 3d 66 30 01 00 	xor    0x13066(%rip),%rdi        # 1a178 <_ZL12g_tcs_cookie>
    7112:	4c 39 e7             	cmp    %r12,%rdi
    7115:	74 0e                	je     7125 <do_uninit_enclave+0x65>
    7117:	be 00 10 00 00       	mov    $0x1000,%esi
    711c:	e8 4f 48 00 00       	call   b970 <mm_dealloc>
    7121:	85 c0                	test   %eax,%eax
    7123:	75 58                	jne    717d <do_uninit_enclave+0xbd>
    7125:	48 8b 6b 08          	mov    0x8(%rbx),%rbp
    7129:	48 89 df             	mov    %rbx,%rdi
    712c:	e8 7f 7d 00 00       	call   eeb0 <dlfree>
    7131:	48 89 eb             	mov    %rbp,%rbx
    7134:	48 85 db             	test   %rbx,%rbx
    7137:	75 cf                	jne    7108 <do_uninit_enclave+0x48>
    7139:	48 8d 1d 34 30 01 00 	lea    0x13034(%rip),%rbx        # 1a174 <_ZL10g_ife_lock>
    7140:	48 89 df             	mov    %rbx,%rdi
    7143:	e8 b8 55 00 00       	call   c700 <sgx_spin_lock>
    7148:	0f b6 05 d1 10 01 00 	movzbl 0x110d1(%rip),%eax        # 18220 <_ZL16g_is_first_ecall>
    714f:	84 c0                	test   %al,%al
    7151:	74 45                	je     7198 <do_uninit_enclave+0xd8>
    7153:	48 89 df             	mov    %rbx,%rdi
    7156:	e8 35 56 00 00       	call   c790 <sgx_spin_unlock>
    715b:	bf 03 00 00 00       	mov    $0x3,%edi
    7160:	e8 b0 ad 00 00       	call   11f15 <set_enclave_state>
    7165:	5b                   	pop    %rbx
    7166:	31 c0                	xor    %eax,%eax
    7168:	5d                   	pop    %rbp
    7169:	41 5c                	pop    %r12
    716b:	c3                   	ret    
    716c:	0f 1f 40 00          	nopl   0x0(%rax)
    7170:	e8 8b f0 ff ff       	call   6200 <is_dynamic_thread_exist>
    7175:	85 c0                	test   %eax,%eax
    7177:	0f 84 6c ff ff ff    	je     70e9 <do_uninit_enclave+0x29>
    717d:	bf 03 00 00 00       	mov    $0x3,%edi
    7182:	e8 8e ad 00 00       	call   11f15 <set_enclave_state>
    7187:	5b                   	pop    %rbx
    7188:	b8 01 00 00 00       	mov    $0x1,%eax
    718d:	5d                   	pop    %rbp
    718e:	41 5c                	pop    %r12
    7190:	c3                   	ret    
    7191:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7198:	e8 43 1b 00 00       	call   8ce0 <uninit_global_object>
    719d:	eb b4                	jmp    7153 <do_uninit_enclave+0x93>
    719f:	90                   	nop

00000000000071a0 <sgx_ocall>:
    71a0:	f3 0f 1e fa          	endbr64 
    71a4:	8d 47 07             	lea    0x7(%rdi),%eax
    71a7:	83 f8 05             	cmp    $0x5,%eax
    71aa:	76 12                	jbe    71be <sgx_ocall+0x1e>
    71ac:	85 ff                	test   %edi,%edi
    71ae:	74 0e                	je     71be <sgx_ocall+0x1e>
    71b0:	48 8d 15 79 be 00 00 	lea    0xbe79(%rip),%rdx        # 13030 <g_dyn_entry_table>
    71b7:	89 f8                	mov    %edi,%eax
    71b9:	48 3b 02             	cmp    (%rdx),%rax
    71bc:	73 0a                	jae    71c8 <sgx_ocall+0x28>
    71be:	e9 1c b0 00 00       	jmp    121df <__morestack>
    71c3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    71c8:	b8 01 10 00 00       	mov    $0x1001,%eax
    71cd:	c3                   	ret    
    71ce:	66 90                	xchg   %ax,%ax

00000000000071d0 <update_ocall_lastsp>:
    71d0:	f3 0f 1e fa          	endbr64 
    71d4:	53                   	push   %rbx
    71d5:	48 89 fb             	mov    %rdi,%rbx
    71d8:	e8 66 ad 00 00       	call   11f43 <get_thread_data>
    71dd:	b9 01 00 00 00       	mov    $0x1,%ecx
    71e2:	48 8b 50 08          	mov    0x8(%rax),%rdx
    71e6:	48 89 53 30          	mov    %rdx,0x30(%rbx)
    71ea:	48 39 50 10          	cmp    %rdx,0x10(%rax)
    71ee:	74 0b                	je     71fb <update_ocall_lastsp+0x2b>
    71f0:	48 8b b2 90 00 00 00 	mov    0x90(%rdx),%rsi
    71f7:	48 8d 4e 01          	lea    0x1(%rsi),%rcx
    71fb:	48 89 8b 90 00 00 00 	mov    %rcx,0x90(%rbx)
    7202:	48 89 58 08          	mov    %rbx,0x8(%rax)
    7206:	48 89 d0             	mov    %rdx,%rax
    7209:	5b                   	pop    %rbx
    720a:	c3                   	ret    
    720b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000007210 <do_oret>:
    7210:	f3 0f 1e fa          	endbr64 
    7214:	55                   	push   %rbp
    7215:	48 89 fd             	mov    %rdi,%rbp
    7218:	53                   	push   %rbx
    7219:	48 83 ec 18          	sub    $0x18,%rsp
    721d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    7224:	00 00 
    7226:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    722b:	31 c0                	xor    %eax,%eax
    722d:	e8 11 ad 00 00       	call   11f43 <get_thread_data>
    7232:	48 83 78 50 01       	cmpq   $0x1,0x50(%rax)
    7237:	48 89 c3             	mov    %rax,%rbx
    723a:	74 74                	je     72b0 <do_oret+0xa0>
    723c:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    7240:	48 89 e0             	mov    %rsp,%rax
    7243:	48 89 3c 24          	mov    %rdi,(%rsp)
    7247:	48 39 f8             	cmp    %rdi,%rax
    724a:	72 24                	jb     7270 <do_oret+0x60>
    724c:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    7251:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    7258:	00 00 
    725a:	75 6b                	jne    72c7 <do_oret+0xb7>
    725c:	48 83 c4 18          	add    $0x18,%rsp
    7260:	b8 01 00 00 00       	mov    $0x1,%eax
    7265:	5b                   	pop    %rbx
    7266:	5d                   	pop    %rbp
    7267:	c3                   	ret    
    7268:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    726f:	00 
    7270:	48 8b 43 10          	mov    0x10(%rbx),%rax
    7274:	48 8d 90 10 ff ff ff 	lea    -0xf0(%rax),%rdx
    727b:	48 39 fa             	cmp    %rdi,%rdx
    727e:	72 cc                	jb     724c <do_oret+0x3c>
    7280:	48 81 7f 20 44 49 43 	cmpq   $0x4f434944,0x20(%rdi)
    7287:	4f 
    7288:	75 c2                	jne    724c <do_oret+0x3c>
    728a:	48 8b 57 30          	mov    0x30(%rdi),%rdx
    728e:	48 39 d7             	cmp    %rdx,%rdi
    7291:	73 b9                	jae    724c <do_oret+0x3c>
    7293:	48 39 d0             	cmp    %rdx,%rax
    7296:	72 b4                	jb     724c <do_oret+0x3c>
    7298:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    729c:	48 89 ee             	mov    %rbp,%rsi
    729f:	e8 4e af 00 00       	call   121f2 <asm_oret>
    72a4:	eb a6                	jmp    724c <do_oret+0x3c>
    72a6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    72ad:	00 00 00 
    72b0:	48 c7 40 50 00 00 00 	movq   $0x0,0x50(%rax)
    72b7:	00 
    72b8:	bf 01 00 00 00       	mov    $0x1,%edi
    72bd:	e8 ce f1 ff ff       	call   6490 <sgx_set_ssa_aexnotify>
    72c2:	e9 75 ff ff ff       	jmp    723c <do_oret+0x2c>
    72c7:	e8 a4 96 00 00       	call   10970 <__stack_chk_fail>
    72cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000072d0 <get_enclave_size>:
    72d0:	f3 0f 1e fa          	endbr64 
    72d4:	48 8d 05 a5 be 00 00 	lea    0xbea5(%rip),%rax        # 13180 <g_global_data>
    72db:	48 8b 40 08          	mov    0x8(%rax),%rax
    72df:	c3                   	ret    

00000000000072e0 <get_enclave_end>:
    72e0:	f3 0f 1e fa          	endbr64 
    72e4:	48 83 ec 08          	sub    $0x8,%rsp
    72e8:	e8 0b ac 00 00       	call   11ef8 <get_enclave_base>
    72ed:	48 8d 15 8c be 00 00 	lea    0xbe8c(%rip),%rdx        # 13180 <g_global_data>
    72f4:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    72f8:	48 83 c4 08          	add    $0x8,%rsp
    72fc:	48 8d 44 02 ff       	lea    -0x1(%rdx,%rax,1),%rax
    7301:	c3                   	ret    
    7302:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    7309:	00 00 00 
    730c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000007310 <get_heap_base>:
    7310:	f3 0f 1e fa          	endbr64 
    7314:	48 83 ec 08          	sub    $0x8,%rsp
    7318:	e8 db ab 00 00       	call   11ef8 <get_enclave_base>
    731d:	48 8d 15 5c be 00 00 	lea    0xbe5c(%rip),%rdx        # 13180 <g_global_data>
    7324:	48 8b 52 10          	mov    0x10(%rdx),%rdx
    7328:	48 83 c4 08          	add    $0x8,%rsp
    732c:	48 01 d0             	add    %rdx,%rax
    732f:	c3                   	ret    

0000000000007330 <get_heap_size>:
    7330:	f3 0f 1e fa          	endbr64 
    7334:	48 8d 05 f1 0a 01 00 	lea    0x10af1(%rip),%rax        # 17e2c <EDMM_supported>
    733b:	48 8d 0d 3e be 00 00 	lea    0xbe3e(%rip),%rcx        # 13180 <g_global_data>
    7342:	8b 00                	mov    (%rax),%eax
    7344:	48 8b 79 18          	mov    0x18(%rcx),%rdi
    7348:	85 c0                	test   %eax,%eax
    734a:	74 41                	je     738d <get_heap_size+0x5d>
    734c:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    7352:	85 c0                	test   %eax,%eax
    7354:	74 37                	je     738d <get_heap_size+0x5d>
    7356:	31 d2                	xor    %edx,%edx
    7358:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    735f:	00 
    7360:	89 d0                	mov    %edx,%eax
    7362:	48 83 c0 0b          	add    $0xb,%rax
    7366:	48 c1 e0 05          	shl    $0x5,%rax
    736a:	48 01 c8             	add    %rcx,%rax
    736d:	0f b7 30             	movzwl (%rax),%esi
    7370:	66 83 fe 03          	cmp    $0x3,%si
    7374:	75 0a                	jne    7380 <get_heap_size+0x50>
    7376:	8b 40 04             	mov    0x4(%rax),%eax
    7379:	48 c1 e0 0c          	shl    $0xc,%rax
    737d:	48 01 c7             	add    %rax,%rdi
    7380:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    7386:	83 c2 01             	add    $0x1,%edx
    7389:	39 c2                	cmp    %eax,%edx
    738b:	72 d3                	jb     7360 <get_heap_size+0x30>
    738d:	48 89 f8             	mov    %rdi,%rax
    7390:	c3                   	ret    
    7391:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    7398:	00 00 00 
    739b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000073a0 <get_heap_min_size>:
    73a0:	f3 0f 1e fa          	endbr64 
    73a4:	48 8d 0d d5 bd 00 00 	lea    0xbdd5(%rip),%rcx        # 13180 <g_global_data>
    73ab:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    73b1:	85 c0                	test   %eax,%eax
    73b3:	74 3b                	je     73f0 <get_heap_min_size+0x50>
    73b5:	31 d2                	xor    %edx,%edx
    73b7:	eb 14                	jmp    73cd <get_heap_min_size+0x2d>
    73b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    73c0:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    73c6:	83 c2 01             	add    $0x1,%edx
    73c9:	39 c2                	cmp    %eax,%edx
    73cb:	73 23                	jae    73f0 <get_heap_min_size+0x50>
    73cd:	89 d0                	mov    %edx,%eax
    73cf:	48 83 c0 0b          	add    $0xb,%rax
    73d3:	48 c1 e0 05          	shl    $0x5,%rax
    73d7:	48 01 c8             	add    %rcx,%rax
    73da:	0f b7 30             	movzwl (%rax),%esi
    73dd:	66 83 fe 01          	cmp    $0x1,%si
    73e1:	75 dd                	jne    73c0 <get_heap_min_size+0x20>
    73e3:	8b 40 04             	mov    0x4(%rax),%eax
    73e6:	48 c1 e0 0c          	shl    $0xc,%rax
    73ea:	c3                   	ret    
    73eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    73f0:	31 c0                	xor    %eax,%eax
    73f2:	c3                   	ret    
    73f3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    73fa:	00 00 00 
    73fd:	0f 1f 00             	nopl   (%rax)

0000000000007400 <get_rsrv_base>:
    7400:	f3 0f 1e fa          	endbr64 
    7404:	48 83 ec 08          	sub    $0x8,%rsp
    7408:	e8 eb aa 00 00       	call   11ef8 <get_enclave_base>
    740d:	48 8d 15 6c bd 00 00 	lea    0xbd6c(%rip),%rdx        # 13180 <g_global_data>
    7414:	48 8b 52 20          	mov    0x20(%rdx),%rdx
    7418:	48 83 c4 08          	add    $0x8,%rsp
    741c:	48 01 d0             	add    %rdx,%rax
    741f:	c3                   	ret    

0000000000007420 <get_rsrv_end>:
    7420:	f3 0f 1e fa          	endbr64 
    7424:	48 83 ec 08          	sub    $0x8,%rsp
    7428:	e8 cb aa 00 00       	call   11ef8 <get_enclave_base>
    742d:	48 8d 35 4c bd 00 00 	lea    0xbd4c(%rip),%rsi        # 13180 <g_global_data>
    7434:	48 8d 15 f1 09 01 00 	lea    0x109f1(%rip),%rdx        # 17e2c <EDMM_supported>
    743b:	4c 8b 4e 20          	mov    0x20(%rsi),%r9
    743f:	8b 12                	mov    (%rdx),%edx
    7441:	4c 8b 46 28          	mov    0x28(%rsi),%r8
    7445:	49 83 e9 01          	sub    $0x1,%r9
    7449:	85 d2                	test   %edx,%edx
    744b:	74 40                	je     748d <get_rsrv_end+0x6d>
    744d:	8b 96 58 01 00 00    	mov    0x158(%rsi),%edx
    7453:	85 d2                	test   %edx,%edx
    7455:	74 36                	je     748d <get_rsrv_end+0x6d>
    7457:	31 c9                	xor    %ecx,%ecx
    7459:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7460:	89 ca                	mov    %ecx,%edx
    7462:	48 83 c2 0b          	add    $0xb,%rdx
    7466:	48 c1 e2 05          	shl    $0x5,%rdx
    746a:	48 01 f2             	add    %rsi,%rdx
    746d:	0f b7 3a             	movzwl (%rdx),%edi
    7470:	66 83 ff 16          	cmp    $0x16,%di
    7474:	75 0a                	jne    7480 <get_rsrv_end+0x60>
    7476:	8b 52 04             	mov    0x4(%rdx),%edx
    7479:	48 c1 e2 0c          	shl    $0xc,%rdx
    747d:	49 01 d0             	add    %rdx,%r8
    7480:	8b 96 58 01 00 00    	mov    0x158(%rsi),%edx
    7486:	83 c1 01             	add    $0x1,%ecx
    7489:	39 d1                	cmp    %edx,%ecx
    748b:	72 d3                	jb     7460 <get_rsrv_end+0x40>
    748d:	4c 01 c8             	add    %r9,%rax
    7490:	48 83 c4 08          	add    $0x8,%rsp
    7494:	4c 01 c0             	add    %r8,%rax
    7497:	c3                   	ret    
    7498:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    749f:	00 

00000000000074a0 <get_rsrv_size>:
    74a0:	f3 0f 1e fa          	endbr64 
    74a4:	48 8d 05 81 09 01 00 	lea    0x10981(%rip),%rax        # 17e2c <EDMM_supported>
    74ab:	48 8d 0d ce bc 00 00 	lea    0xbcce(%rip),%rcx        # 13180 <g_global_data>
    74b2:	8b 00                	mov    (%rax),%eax
    74b4:	48 8b 79 28          	mov    0x28(%rcx),%rdi
    74b8:	85 c0                	test   %eax,%eax
    74ba:	74 41                	je     74fd <get_rsrv_size+0x5d>
    74bc:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    74c2:	85 c0                	test   %eax,%eax
    74c4:	74 37                	je     74fd <get_rsrv_size+0x5d>
    74c6:	31 d2                	xor    %edx,%edx
    74c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    74cf:	00 
    74d0:	89 d0                	mov    %edx,%eax
    74d2:	48 83 c0 0b          	add    $0xb,%rax
    74d6:	48 c1 e0 05          	shl    $0x5,%rax
    74da:	48 01 c8             	add    %rcx,%rax
    74dd:	0f b7 30             	movzwl (%rax),%esi
    74e0:	66 83 fe 16          	cmp    $0x16,%si
    74e4:	75 0a                	jne    74f0 <get_rsrv_size+0x50>
    74e6:	8b 40 04             	mov    0x4(%rax),%eax
    74e9:	48 c1 e0 0c          	shl    $0xc,%rax
    74ed:	48 01 c7             	add    %rax,%rdi
    74f0:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    74f6:	83 c2 01             	add    $0x1,%edx
    74f9:	39 c2                	cmp    %eax,%edx
    74fb:	72 d3                	jb     74d0 <get_rsrv_size+0x30>
    74fd:	48 89 f8             	mov    %rdi,%rax
    7500:	c3                   	ret    
    7501:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    7508:	00 00 00 
    750b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000007510 <get_rsrv_min_size>:
    7510:	f3 0f 1e fa          	endbr64 
    7514:	48 8d 0d 65 bc 00 00 	lea    0xbc65(%rip),%rcx        # 13180 <g_global_data>
    751b:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    7521:	85 c0                	test   %eax,%eax
    7523:	74 3b                	je     7560 <get_rsrv_min_size+0x50>
    7525:	31 d2                	xor    %edx,%edx
    7527:	eb 14                	jmp    753d <get_rsrv_min_size+0x2d>
    7529:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7530:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    7536:	83 c2 01             	add    $0x1,%edx
    7539:	39 c2                	cmp    %eax,%edx
    753b:	73 23                	jae    7560 <get_rsrv_min_size+0x50>
    753d:	89 d0                	mov    %edx,%eax
    753f:	48 83 c0 0b          	add    $0xb,%rax
    7543:	48 c1 e0 05          	shl    $0x5,%rax
    7547:	48 01 c8             	add    %rcx,%rax
    754a:	0f b7 30             	movzwl (%rax),%esi
    754d:	66 83 fe 14          	cmp    $0x14,%si
    7551:	75 dd                	jne    7530 <get_rsrv_min_size+0x20>
    7553:	8b 40 04             	mov    0x4(%rax),%eax
    7556:	48 c1 e0 0c          	shl    $0xc,%rax
    755a:	c3                   	ret    
    755b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7560:	31 c0                	xor    %eax,%eax
    7562:	c3                   	ret    
    7563:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    756a:	00 00 00 
    756d:	0f 1f 00             	nopl   (%rax)

0000000000007570 <get_errno_addr>:
    7570:	f3 0f 1e fa          	endbr64 
    7574:	48 83 ec 08          	sub    $0x8,%rsp
    7578:	e8 c6 a9 00 00       	call   11f43 <get_thread_data>
    757d:	48 83 c4 08          	add    $0x8,%rsp
    7581:	48 83 c0 40          	add    $0x40,%rax
    7585:	c3                   	ret    
    7586:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    758d:	00 00 00 

0000000000007590 <feature_supported>:
    7590:	f3 0f 1e fa          	endbr64 
    7594:	48 85 ff             	test   %rdi,%rdi
    7597:	74 37                	je     75d0 <feature_supported+0x40>
    7599:	31 d2                	xor    %edx,%edx
    759b:	eb 08                	jmp    75a5 <feature_supported+0x15>
    759d:	0f 1f 00             	nopl   (%rax)
    75a0:	48 85 c0             	test   %rax,%rax
    75a3:	78 2b                	js     75d0 <feature_supported+0x40>
    75a5:	89 d0                	mov    %edx,%eax
    75a7:	83 c2 01             	add    $0x1,%edx
    75aa:	41 89 d1             	mov    %edx,%r9d
    75ad:	49 89 c0             	mov    %rax,%r8
    75b0:	48 8b 04 c7          	mov    (%rdi,%rax,8),%rax
    75b4:	41 c1 e1 06          	shl    $0x6,%r9d
    75b8:	44 39 ce             	cmp    %r9d,%esi
    75bb:	73 e3                	jae    75a0 <feature_supported+0x10>
    75bd:	41 c1 e0 06          	shl    $0x6,%r8d
    75c1:	44 29 c6             	sub    %r8d,%esi
    75c4:	89 f1                	mov    %esi,%ecx
    75c6:	48 d3 e8             	shr    %cl,%rax
    75c9:	83 e0 01             	and    $0x1,%eax
    75cc:	c3                   	ret    
    75cd:	0f 1f 00             	nopl   (%rax)
    75d0:	31 c0                	xor    %eax,%eax
    75d2:	c3                   	ret    
    75d3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    75da:	00 00 00 
    75dd:	0f 1f 00             	nopl   (%rax)

00000000000075e0 <is_stack_addr>:
    75e0:	f3 0f 1e fa          	endbr64 
    75e4:	55                   	push   %rbp
    75e5:	48 89 f5             	mov    %rsi,%rbp
    75e8:	53                   	push   %rbx
    75e9:	48 89 fb             	mov    %rdi,%rbx
    75ec:	48 83 ec 08          	sub    $0x8,%rsp
    75f0:	e8 4e a9 00 00       	call   11f43 <get_thread_data>
    75f5:	31 c9                	xor    %ecx,%ecx
    75f7:	48 01 dd             	add    %rbx,%rbp
    75fa:	48 89 c2             	mov    %rax,%rdx
    75fd:	0f 92 c1             	setb   %cl
    7600:	48 39 68 10          	cmp    %rbp,0x10(%rax)
    7604:	0f 93 c0             	setae  %al
    7607:	48 3b 5a 18          	cmp    0x18(%rdx),%rbx
    760b:	0f 93 c2             	setae  %dl
    760e:	21 d0                	and    %edx,%eax
    7610:	48 85 c9             	test   %rcx,%rcx
    7613:	0f 94 c2             	sete   %dl
    7616:	48 83 c4 08          	add    $0x8,%rsp
    761a:	21 d0                	and    %edx,%eax
    761c:	5b                   	pop    %rbx
    761d:	5d                   	pop    %rbp
    761e:	c3                   	ret    
    761f:	90                   	nop

0000000000007620 <is_valid_sp>:
    7620:	f3 0f 1e fa          	endbr64 
    7624:	40 f6 c7 07          	test   $0x7,%dil
    7628:	74 06                	je     7630 <is_valid_sp+0x10>
    762a:	31 c0                	xor    %eax,%eax
    762c:	c3                   	ret    
    762d:	0f 1f 00             	nopl   (%rax)
    7630:	53                   	push   %rbx
    7631:	48 89 fb             	mov    %rdi,%rbx
    7634:	e8 0a a9 00 00       	call   11f43 <get_thread_data>
    7639:	48 89 c2             	mov    %rax,%rdx
    763c:	48 3b 58 18          	cmp    0x18(%rax),%rbx
    7640:	0f 93 c0             	setae  %al
    7643:	48 39 5a 10          	cmp    %rbx,0x10(%rdx)
    7647:	5b                   	pop    %rbx
    7648:	0f 93 c2             	setae  %dl
    764b:	21 d0                	and    %edx,%eax
    764d:	c3                   	ret    
    764e:	66 90                	xchg   %ax,%ax

0000000000007650 <is_utility_thread>:
    7650:	f3 0f 1e fa          	endbr64 
    7654:	48 83 ec 08          	sub    $0x8,%rsp
    7658:	e8 e6 a8 00 00       	call   11f43 <get_thread_data>
    765d:	31 d2                	xor    %edx,%edx
    765f:	48 85 c0             	test   %rax,%rax
    7662:	74 07                	je     766b <is_utility_thread+0x1b>
    7664:	48 8b 50 30          	mov    0x30(%rax),%rdx
    7668:	83 e2 01             	and    $0x1,%edx
    766b:	89 d0                	mov    %edx,%eax
    766d:	48 83 c4 08          	add    $0x8,%rsp
    7671:	c3                   	ret    
    7672:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    7679:	00 00 00 
    767c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000007680 <get_max_tcs_num>:
    7680:	f3 0f 1e fa          	endbr64 
    7684:	48 8d 05 a1 07 01 00 	lea    0x107a1(%rip),%rax        # 17e2c <EDMM_supported>
    768b:	83 38 01             	cmpl   $0x1,(%rax)
    768e:	48 8d 05 eb ba 00 00 	lea    0xbaeb(%rip),%rax        # 13180 <g_global_data>
    7695:	74 09                	je     76a0 <get_max_tcs_num+0x20>
    7697:	48 8b 40 48          	mov    0x48(%rax),%rax
    769b:	c3                   	ret    
    769c:	0f 1f 40 00          	nopl   0x0(%rax)
    76a0:	48 8b 40 40          	mov    0x40(%rax),%rax
    76a4:	c3                   	ret    
    76a5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    76ac:	00 00 00 
    76af:	90                   	nop

00000000000076b0 <is_pkru_enabled>:
    76b0:	f3 0f 1e fa          	endbr64 
    76b4:	48 83 ec 08          	sub    $0x8,%rsp
    76b8:	e8 23 0a 00 00       	call   80e0 <get_xfeature_state>
    76bd:	48 83 c4 08          	add    $0x8,%rsp
    76c1:	48 c1 e8 09          	shr    $0x9,%rax
    76c5:	83 e0 01             	and    $0x1,%eax
    76c8:	c3                   	ret    
    76c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000076d0 <is_tcs_binding_mode>:
    76d0:	f3 0f 1e fa          	endbr64 
    76d4:	48 8d 05 a5 ba 00 00 	lea    0xbaa5(%rip),%rax        # 13180 <g_global_data>
    76db:	48 8b 40 38          	mov    0x38(%rax),%rax
    76df:	48 85 c0             	test   %rax,%rax
    76e2:	0f 94 c0             	sete   %al
    76e5:	c3                   	ret    
    76e6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    76ed:	00 00 00 

00000000000076f0 <get_xsave_size>:
    76f0:	f3 0f 1e fa          	endbr64 
    76f4:	48 8d 05 85 ba 00 00 	lea    0xba85(%rip),%rax        # 13180 <g_global_data>
    76fb:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
    7702:	c3                   	ret    
    7703:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    770a:	00 00 00 
    770d:	0f 1f 00             	nopl   (%rax)

0000000000007710 <get_ssa_aexnotify>:
    7710:	f3 0f 1e fa          	endbr64 
    7714:	48 83 ec 08          	sub    $0x8,%rsp
    7718:	e8 26 a8 00 00       	call   11f43 <get_thread_data>
    771d:	48 85 c0             	test   %rax,%rax
    7720:	74 16                	je     7738 <get_ssa_aexnotify+0x28>
    7722:	48 8b 40 20          	mov    0x20(%rax),%rax
    7726:	0f b6 80 a7 00 00 00 	movzbl 0xa7(%rax),%eax
    772d:	48 83 c4 08          	add    $0x8,%rsp
    7731:	83 e0 01             	and    $0x1,%eax
    7734:	c3                   	ret    
    7735:	0f 1f 00             	nopl   (%rax)
    7738:	31 c0                	xor    %eax,%eax
    773a:	48 83 c4 08          	add    $0x8,%rsp
    773e:	c3                   	ret    
    773f:	90                   	nop

0000000000007740 <internal_handle_exception>:
    7740:	f3 0f 1e fa          	endbr64 
    7744:	55                   	push   %rbp
    7745:	48 89 e5             	mov    %rsp,%rbp
    7748:	41 57                	push   %r15
    774a:	41 56                	push   %r14
    774c:	41 55                	push   %r13
    774e:	41 54                	push   %r12
    7750:	53                   	push   %rbx
    7751:	48 89 fb             	mov    %rdi,%rbx
    7754:	48 83 ec 38          	sub    $0x38,%rsp
    7758:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    775f:	00 00 
    7761:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    7765:	31 c0                	xor    %eax,%eax
    7767:	e8 d7 a7 00 00       	call   11f43 <get_thread_data>
    776c:	4c 8b 60 20          	mov    0x20(%rax),%r12
    7770:	49 89 c5             	mov    %rax,%r13
    7773:	e8 78 ff ff ff       	call   76f0 <get_xsave_size>
    7778:	48 85 db             	test   %rbx,%rbx
    777b:	0f 84 4f 01 00 00    	je     78d0 <internal_handle_exception+0x190>
    7781:	49 8d b4 24 ff 0f 00 	lea    0xfff(%r12),%rsi
    7788:	00 
    7789:	48 05 b7 10 00 00    	add    $0x10b7,%rax
    778f:	48 8b 93 b0 00 00 00 	mov    0xb0(%rbx),%rdx
    7796:	4c 8d b3 c0 00 00 00 	lea    0xc0(%rbx),%r14
    779d:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    77a3:	48 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%rsi
    77aa:	4c 89 f7             	mov    %r14,%rdi
    77ad:	48 29 c6             	sub    %rax,%rsi
    77b0:	e8 ab 8e 00 00       	call   10660 <memcpy>
    77b5:	8b 83 a8 00 00 00    	mov    0xa8(%rbx),%eax
    77bb:	85 c0                	test   %eax,%eax
    77bd:	0f 84 2e 01 00 00    	je     78f1 <internal_handle_exception+0x1b1>
    77c3:	49 8b 45 78          	mov    0x78(%r13),%rax
    77c7:	48 85 c0             	test   %rax,%rax
    77ca:	0f 88 00 01 00 00    	js     78d0 <internal_handle_exception+0x190>
    77d0:	48 8d 50 01          	lea    0x1(%rax),%rdx
    77d4:	83 bb 90 00 00 00 0e 	cmpl   $0xe,0x90(%rbx)
    77db:	49 89 55 78          	mov    %rdx,0x78(%r13)
    77df:	75 27                	jne    7808 <internal_handle_exception+0xc8>
    77e1:	48 8b 15 a0 29 01 00 	mov    0x129a0(%rip),%rdx        # 1a188 <g_mm_pfhandler>
    77e8:	48 85 d2             	test   %rdx,%rdx
    77eb:	74 1b                	je     7808 <internal_handle_exception+0xc8>
    77ed:	49 89 45 78          	mov    %rax,0x78(%r13)
    77f1:	48 8d bb 98 00 00 00 	lea    0x98(%rbx),%rdi
    77f8:	ff d2                	call   *%rdx
    77fa:	83 c0 01             	add    $0x1,%eax
    77fd:	0f 84 ee 00 00 00    	je     78f1 <internal_handle_exception+0x1b1>
    7803:	49 83 45 78 01       	addq   $0x1,0x78(%r13)
    7808:	48 8d 3d 89 29 01 00 	lea    0x12989(%rip),%rdi        # 1a198 <_ZL14g_handler_lock>
    780f:	e8 ec 4e 00 00       	call   c700 <sgx_spin_lock>
    7814:	48 8b 05 85 29 01 00 	mov    0x12985(%rip),%rax        # 1a1a0 <_ZL12g_first_node>
    781b:	48 85 c0             	test   %rax,%rax
    781e:	0f 84 b9 00 00 00    	je     78dd <internal_handle_exception+0x19d>
    7824:	45 31 ff             	xor    %r15d,%r15d
    7827:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    782e:	00 00 
    7830:	48 8b 40 08          	mov    0x8(%rax),%rax
    7834:	49 83 c7 08          	add    $0x8,%r15
    7838:	48 85 c0             	test   %rax,%rax
    783b:	75 f3                	jne    7830 <internal_handle_exception+0xf0>
    783d:	4d 85 ff             	test   %r15,%r15
    7840:	0f 84 97 00 00 00    	je     78dd <internal_handle_exception+0x19d>
    7846:	4c 89 ff             	mov    %r15,%rdi
    7849:	e8 02 4d 00 00       	call   c550 <alloca>
    784e:	49 89 c4             	mov    %rax,%r12
    7851:	48 85 c0             	test   %rax,%rax
    7854:	0f 84 a9 02 00 00    	je     7b03 <internal_handle_exception+0x3c3>
    785a:	48 8b 05 3f 29 01 00 	mov    0x1293f(%rip),%rax        # 1a1a0 <_ZL12g_first_node>
    7861:	4c 89 e1             	mov    %r12,%rcx
    7864:	48 85 c0             	test   %rax,%rax
    7867:	74 1b                	je     7884 <internal_handle_exception+0x144>
    7869:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7870:	48 8b 30             	mov    (%rax),%rsi
    7873:	48 8b 40 08          	mov    0x8(%rax),%rax
    7877:	48 83 c1 08          	add    $0x8,%rcx
    787b:	48 89 71 f8          	mov    %rsi,-0x8(%rcx)
    787f:	48 85 c0             	test   %rax,%rax
    7882:	75 ec                	jne    7870 <internal_handle_exception+0x130>
    7884:	48 8d 3d 0d 29 01 00 	lea    0x1290d(%rip),%rdi        # 1a198 <_ZL14g_handler_lock>
    788b:	4d 01 e7             	add    %r12,%r15
    788e:	e8 fd 4e 00 00       	call   c790 <sgx_spin_unlock>
    7893:	49 83 6d 78 01       	subq   $0x1,0x78(%r13)
    7898:	eb 13                	jmp    78ad <internal_handle_exception+0x16d>
    789a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    78a0:	49 83 c4 08          	add    $0x8,%r12
    78a4:	4d 39 fc             	cmp    %r15,%r12
    78a7:	0f 84 e7 01 00 00    	je     7a94 <internal_handle_exception+0x354>
    78ad:	49 8b 04 24          	mov    (%r12),%rax
    78b1:	48 89 df             	mov    %rbx,%rdi
    78b4:	48 33 05 d5 28 01 00 	xor    0x128d5(%rip),%rax        # 1a190 <_ZL12g_veh_cookie>
    78bb:	ff d0                	call   *%rax
    78bd:	83 f8 ff             	cmp    $0xffffffff,%eax
    78c0:	75 de                	jne    78a0 <internal_handle_exception+0x160>
    78c2:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    78c6:	e8 55 fd ff ff       	call   7620 <is_valid_sp>
    78cb:	84 c0                	test   %al,%al
    78cd:	75 22                	jne    78f1 <internal_handle_exception+0x1b1>
    78cf:	90                   	nop
    78d0:	49 c7 45 78 ff ff ff 	movq   $0xffffffffffffffff,0x78(%r13)
    78d7:	ff 
    78d8:	e8 5a aa 00 00       	call   12337 <abort>
    78dd:	48 8d 3d b4 28 01 00 	lea    0x128b4(%rip),%rdi        # 1a198 <_ZL14g_handler_lock>
    78e4:	e8 a7 4e 00 00       	call   c790 <sgx_spin_unlock>
    78e9:	49 c7 45 78 ff ff ff 	movq   $0xffffffffffffffff,0x78(%r13)
    78f0:	ff 
    78f1:	83 bb ac 00 00 00 01 	cmpl   $0x1,0xac(%rbx)
    78f8:	74 12                	je     790c <internal_handle_exception+0x1cc>
    78fa:	4c 89 f7             	mov    %r14,%rdi
    78fd:	e8 af a1 00 00       	call   11ab1 <restore_xregs>
    7902:	48 89 df             	mov    %rbx,%rdi
    7905:	e8 40 aa 00 00       	call   1234a <continue_execution>
    790a:	eb c4                	jmp    78d0 <internal_handle_exception+0x190>
    790c:	48 89 df             	mov    %rbx,%rdi
    790f:	e8 cc ed ff ff       	call   66e0 <sgx_apply_mitigations>
    7914:	4c 89 f7             	mov    %r14,%rdi
    7917:	e8 95 a1 00 00       	call   11ab1 <restore_xregs>
    791c:	e8 22 a6 00 00       	call   11f43 <get_thread_data>
    7921:	49 89 c6             	mov    %rax,%r14
    7924:	48 8b 40 10          	mov    0x10(%rax),%rax
    7928:	49 89 c4             	mov    %rax,%r12
    792b:	49 81 e4 00 f0 ff ff 	and    $0xfffffffffffff000,%r12
    7932:	48 3d ff 0f 00 00    	cmp    $0xfff,%rax
    7938:	77 07                	ja     7941 <internal_handle_exception+0x201>
    793a:	4c 8d a0 00 f0 ff ff 	lea    -0x1000(%rax),%r12
    7941:	48 89 d8             	mov    %rbx,%rax
    7944:	49 8b 4e 18          	mov    0x18(%r14),%rcx
    7948:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    794e:	4c 39 e0             	cmp    %r12,%rax
    7951:	0f 84 93 01 00 00    	je     7aea <internal_handle_exception+0x3aa>
    7957:	48 05 00 10 00 00    	add    $0x1000,%rax
    795d:	48 83 c8 01          	or     $0x1,%rax
    7961:	49 89 c4             	mov    %rax,%r12
    7964:	48 8b 83 88 00 00 00 	mov    0x88(%rbx),%rax
    796b:	49 89 c7             	mov    %rax,%r15
    796e:	48 c1 e8 0b          	shr    $0xb,%rax
    7972:	48 89 c1             	mov    %rax,%rcx
    7975:	49 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%r15
    797c:	81 e1 fe 0f 00 00    	and    $0xffe,%ecx
    7982:	48 03 0d 5f 06 01 00 	add    0x1065f(%rip),%rcx        # 17fe8 <_GLOBAL_OFFSET_TABLE_+0x30>
    7989:	44 0f b7 09          	movzwl (%rcx),%r9d
    798d:	4b 8d 14 39          	lea    (%r9,%r15,1),%rdx
    7991:	80 3a c3             	cmpb   $0xc3,(%rdx)
    7994:	74 3b                	je     79d1 <internal_handle_exception+0x291>
    7996:	4d 89 f9             	mov    %r15,%r9
    7999:	49 8d 87 00 10 00 00 	lea    0x1000(%r15),%rax
    79a0:	eb 13                	jmp    79b5 <internal_handle_exception+0x275>
    79a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    79a8:	49 83 c1 01          	add    $0x1,%r9
    79ac:	4c 39 c8             	cmp    %r9,%rax
    79af:	0f 84 5f 01 00 00    	je     7b14 <internal_handle_exception+0x3d4>
    79b5:	41 80 39 c3          	cmpb   $0xc3,(%r9)
    79b9:	75 ed                	jne    79a8 <internal_handle_exception+0x268>
    79bb:	4c 39 c8             	cmp    %r9,%rax
    79be:	0f 84 50 01 00 00    	je     7b14 <internal_handle_exception+0x3d4>
    79c4:	44 89 c8             	mov    %r9d,%eax
    79c7:	4c 89 ca             	mov    %r9,%rdx
    79ca:	66 25 ff 0f          	and    $0xfff,%ax
    79ce:	66 89 01             	mov    %ax,(%rcx)
    79d1:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
    79d5:	48 89 df             	mov    %rbx,%rdi
    79d8:	48 89 55 a0          	mov    %rdx,-0x60(%rbp)
    79dc:	e8 0f ca ff ff       	call   43f0 <ct_decode>
    79e1:	4d 89 e0             	mov    %r12,%r8
    79e4:	be 01 00 00 00       	mov    $0x1,%esi
    79e9:	49 83 e0 fe          	and    $0xfffffffffffffffe,%r8
    79ed:	4c 63 c8             	movslq %eax,%r9
    79f0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    79f4:	4c 89 c1             	mov    %r8,%rcx
    79f7:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
    79fb:	49 83 f9 01          	cmp    $0x1,%r9
    79ff:	48 0f 44 c8          	cmove  %rax,%rcx
    7a03:	49 83 f9 02          	cmp    $0x2,%r9
    7a07:	48 0f 44 c8          	cmove  %rax,%rcx
    7a0b:	48 89 cf             	mov    %rcx,%rdi
    7a0e:	4c 89 4d b0          	mov    %r9,-0x50(%rbp)
    7a12:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
    7a16:	e8 d5 e0 ff ff       	call   5af0 <sgx_is_within_enclave>
    7a1b:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
    7a1f:	4c 8b 45 a8          	mov    -0x58(%rbp),%r8
    7a23:	85 c0                	test   %eax,%eax
    7a25:	4c 8b 4d b0          	mov    -0x50(%rbp),%r9
    7a29:	48 98                	cltq   
    7a2b:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
    7a2f:	4c 0f 45 c1          	cmovne %rcx,%r8
    7a33:	4c 89 f9             	mov    %r15,%rcx
    7a36:	48 83 c9 01          	or     $0x1,%rcx
    7a3a:	49 83 f9 02          	cmp    $0x2,%r9
    7a3e:	4c 0f 44 f9          	cmove  %rcx,%r15
    7a42:	4c 89 fe             	mov    %r15,%rsi
    7a45:	48 83 e6 fe          	and    $0xfffffffffffffffe,%rsi
    7a49:	48 83 f8 01          	cmp    $0x1,%rax
    7a4d:	49 0f 44 f7          	cmove  %r15,%rsi
    7a51:	41 83 ae bc 00 00 00 	subl   $0x1,0xbc(%r14)
    7a58:	01 
    7a59:	78 57                	js     7ab2 <internal_handle_exception+0x372>
    7a5b:	41 8b 8e b8 00 00 00 	mov    0xb8(%r14),%ecx
    7a62:	49 89 d1             	mov    %rdx,%r9
    7a65:	48 89 df             	mov    %rbx,%rdi
    7a68:	4c 89 e2             	mov    %r12,%rdx
    7a6b:	89 c8                	mov    %ecx,%eax
    7a6d:	c1 e1 04             	shl    $0x4,%ecx
    7a70:	d1 e8                	shr    %eax
    7a72:	83 e1 10             	and    $0x10,%ecx
    7a75:	48 09 f1             	or     %rsi,%rcx
    7a78:	41 89 86 b8 00 00 00 	mov    %eax,0xb8(%r14)
    7a7f:	49 8b 76 20          	mov    0x20(%r14),%rsi
    7a83:	48 81 c6 a7 00 00 00 	add    $0xa7,%rsi
    7a8a:	e8 71 a1 00 00       	call   11c00 <constant_time_apply_sgxstep_mitigation_and_continue_execution>
    7a8f:	e9 3c fe ff ff       	jmp    78d0 <internal_handle_exception+0x190>
    7a94:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    7a98:	e8 83 fb ff ff       	call   7620 <is_valid_sp>
    7a9d:	84 c0                	test   %al,%al
    7a9f:	0f 84 2b fe ff ff    	je     78d0 <internal_handle_exception+0x190>
    7aa5:	49 c7 45 78 ff ff ff 	movq   $0xffffffffffffffff,0x78(%r13)
    7aac:	ff 
    7aad:	e9 3f fe ff ff       	jmp    78f1 <internal_handle_exception+0x1b1>
    7ab2:	49 8d be b8 00 00 00 	lea    0xb8(%r14),%rdi
    7ab9:	48 89 75 a8          	mov    %rsi,-0x58(%rbp)
    7abd:	4c 89 45 b0          	mov    %r8,-0x50(%rbp)
    7ac1:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    7ac5:	e8 4a a8 00 00       	call   12314 <do_rdrand>
    7aca:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    7ace:	4c 8b 45 b0          	mov    -0x50(%rbp),%r8
    7ad2:	85 c0                	test   %eax,%eax
    7ad4:	48 8b 75 a8          	mov    -0x58(%rbp),%rsi
    7ad8:	74 46                	je     7b20 <internal_handle_exception+0x3e0>
    7ada:	41 c7 86 bc 00 00 00 	movl   $0x1f,0xbc(%r14)
    7ae1:	1f 00 00 00 
    7ae5:	e9 71 ff ff ff       	jmp    7a5b <internal_handle_exception+0x31b>
    7aea:	48 81 e1 00 f0 ff ff 	and    $0xfffffffffffff000,%rcx
    7af1:	4c 39 e1             	cmp    %r12,%rcx
    7af4:	0f 84 6a fe ff ff    	je     7964 <internal_handle_exception+0x224>
    7afa:	49 83 cc 01          	or     $0x1,%r12
    7afe:	e9 61 fe ff ff       	jmp    7964 <internal_handle_exception+0x224>
    7b03:	48 8d 3d 8e 26 01 00 	lea    0x1268e(%rip),%rdi        # 1a198 <_ZL14g_handler_lock>
    7b0a:	e8 81 4c 00 00       	call   c790 <sgx_spin_unlock>
    7b0f:	e9 bc fd ff ff       	jmp    78d0 <internal_handle_exception+0x190>
    7b14:	48 8d 15 dc a3 00 00 	lea    0xa3dc(%rip),%rdx        # 11ef7 <__ct_mitigation_ret>
    7b1b:	e9 b1 fe ff ff       	jmp    79d1 <internal_handle_exception+0x291>
    7b20:	49 c7 46 78 ff ff ff 	movq   $0xffffffffffffffff,0x78(%r14)
    7b27:	ff 
    7b28:	e8 0a a8 00 00       	call   12337 <abort>
    7b2d:	0f 1f 00             	nopl   (%rax)

0000000000007b30 <sgx_register_exception_handler>:
    7b30:	f3 0f 1e fa          	endbr64 
    7b34:	41 55                	push   %r13
    7b36:	41 54                	push   %r12
    7b38:	41 89 fc             	mov    %edi,%r12d
    7b3b:	55                   	push   %rbp
    7b3c:	48 89 f5             	mov    %rsi,%rbp
    7b3f:	53                   	push   %rbx
    7b40:	48 83 ec 18          	sub    $0x18,%rsp
    7b44:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    7b4b:	00 00 
    7b4d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    7b52:	31 c0                	xor    %eax,%eax
    7b54:	48 83 3d 34 26 01 00 	cmpq   $0x0,0x12634(%rip)        # 1a190 <_ZL12g_veh_cookie>
    7b5b:	00 
    7b5c:	0f 84 ae 00 00 00    	je     7c10 <sgx_register_exception_handler+0xe0>
    7b62:	31 f6                	xor    %esi,%esi
    7b64:	48 89 ef             	mov    %rbp,%rdi
    7b67:	e8 84 df ff ff       	call   5af0 <sgx_is_within_enclave>
    7b6c:	85 c0                	test   %eax,%eax
    7b6e:	0f 84 cc 00 00 00    	je     7c40 <sgx_register_exception_handler+0x110>
    7b74:	bf 10 00 00 00       	mov    $0x10,%edi
    7b79:	e8 42 55 00 00       	call   d0c0 <dlmalloc>
    7b7e:	48 89 c3             	mov    %rax,%rbx
    7b81:	48 85 c0             	test   %rax,%rax
    7b84:	0f 84 b6 00 00 00    	je     7c40 <sgx_register_exception_handler+0x110>
    7b8a:	48 33 2d ff 25 01 00 	xor    0x125ff(%rip),%rbp        # 1a190 <_ZL12g_veh_cookie>
    7b91:	4c 8d 2d 00 26 01 00 	lea    0x12600(%rip),%r13        # 1a198 <_ZL14g_handler_lock>
    7b98:	48 89 28             	mov    %rbp,(%rax)
    7b9b:	4c 89 ef             	mov    %r13,%rdi
    7b9e:	e8 5d 4b 00 00       	call   c700 <sgx_spin_lock>
    7ba3:	48 8b 15 f6 25 01 00 	mov    0x125f6(%rip),%rdx        # 1a1a0 <_ZL12g_first_node>
    7baa:	45 85 e4             	test   %r12d,%r12d
    7bad:	75 29                	jne    7bd8 <sgx_register_exception_handler+0xa8>
    7baf:	48 85 d2             	test   %rdx,%rdx
    7bb2:	74 24                	je     7bd8 <sgx_register_exception_handler+0xa8>
    7bb4:	0f 1f 40 00          	nopl   0x0(%rax)
    7bb8:	48 89 d0             	mov    %rdx,%rax
    7bbb:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    7bbf:	48 85 d2             	test   %rdx,%rdx
    7bc2:	75 f4                	jne    7bb8 <sgx_register_exception_handler+0x88>
    7bc4:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
    7bcb:	00 
    7bcc:	48 89 58 08          	mov    %rbx,0x8(%rax)
    7bd0:	eb 11                	jmp    7be3 <sgx_register_exception_handler+0xb3>
    7bd2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7bd8:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    7bdc:	48 89 1d bd 25 01 00 	mov    %rbx,0x125bd(%rip)        # 1a1a0 <_ZL12g_first_node>
    7be3:	4c 89 ef             	mov    %r13,%rdi
    7be6:	e8 a5 4b 00 00       	call   c790 <sgx_spin_unlock>
    7beb:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    7bf0:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    7bf7:	00 00 
    7bf9:	75 7e                	jne    7c79 <sgx_register_exception_handler+0x149>
    7bfb:	48 83 c4 18          	add    $0x18,%rsp
    7bff:	48 89 d8             	mov    %rbx,%rax
    7c02:	5b                   	pop    %rbx
    7c03:	5d                   	pop    %rbp
    7c04:	41 5c                	pop    %r12
    7c06:	41 5d                	pop    %r13
    7c08:	c3                   	ret    
    7c09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7c10:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    7c17:	00 
    7c18:	48 89 e3             	mov    %rsp,%rbx
    7c1b:	eb 0a                	jmp    7c27 <sgx_register_exception_handler+0xf7>
    7c1d:	0f 1f 00             	nopl   (%rax)
    7c20:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
    7c25:	75 21                	jne    7c48 <sgx_register_exception_handler+0x118>
    7c27:	be 08 00 00 00       	mov    $0x8,%esi
    7c2c:	48 89 df             	mov    %rbx,%rdi
    7c2f:	e8 bc e0 ff ff       	call   5cf0 <sgx_read_rand>
    7c34:	85 c0                	test   %eax,%eax
    7c36:	74 e8                	je     7c20 <sgx_register_exception_handler+0xf0>
    7c38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    7c3f:	00 
    7c40:	31 db                	xor    %ebx,%ebx
    7c42:	eb a7                	jmp    7beb <sgx_register_exception_handler+0xbb>
    7c44:	0f 1f 40 00          	nopl   0x0(%rax)
    7c48:	4c 8d 2d 49 25 01 00 	lea    0x12549(%rip),%r13        # 1a198 <_ZL14g_handler_lock>
    7c4f:	4c 89 ef             	mov    %r13,%rdi
    7c52:	e8 a9 4a 00 00       	call   c700 <sgx_spin_lock>
    7c57:	48 83 3d 31 25 01 00 	cmpq   $0x0,0x12531(%rip)        # 1a190 <_ZL12g_veh_cookie>
    7c5e:	00 
    7c5f:	75 0b                	jne    7c6c <sgx_register_exception_handler+0x13c>
    7c61:	48 8b 04 24          	mov    (%rsp),%rax
    7c65:	48 89 05 24 25 01 00 	mov    %rax,0x12524(%rip)        # 1a190 <_ZL12g_veh_cookie>
    7c6c:	4c 89 ef             	mov    %r13,%rdi
    7c6f:	e8 1c 4b 00 00       	call   c790 <sgx_spin_unlock>
    7c74:	e9 e9 fe ff ff       	jmp    7b62 <sgx_register_exception_handler+0x32>
    7c79:	e8 f2 8c 00 00       	call   10970 <__stack_chk_fail>
    7c7e:	66 90                	xchg   %ax,%ax

0000000000007c80 <sgx_unregister_exception_handler>:
    7c80:	f3 0f 1e fa          	endbr64 
    7c84:	48 85 ff             	test   %rdi,%rdi
    7c87:	0f 84 9b 00 00 00    	je     7d28 <sgx_unregister_exception_handler+0xa8>
    7c8d:	55                   	push   %rbp
    7c8e:	48 8d 2d 03 25 01 00 	lea    0x12503(%rip),%rbp        # 1a198 <_ZL14g_handler_lock>
    7c95:	53                   	push   %rbx
    7c96:	48 89 fb             	mov    %rdi,%rbx
    7c99:	48 89 ef             	mov    %rbp,%rdi
    7c9c:	48 83 ec 08          	sub    $0x8,%rsp
    7ca0:	e8 5b 4a 00 00       	call   c700 <sgx_spin_lock>
    7ca5:	48 8b 05 f4 24 01 00 	mov    0x124f4(%rip),%rax        # 1a1a0 <_ZL12g_first_node>
    7cac:	48 85 c0             	test   %rax,%rax
    7caf:	74 20                	je     7cd1 <sgx_unregister_exception_handler+0x51>
    7cb1:	48 39 d8             	cmp    %rbx,%rax
    7cb4:	75 0f                	jne    7cc5 <sgx_unregister_exception_handler+0x45>
    7cb6:	eb 58                	jmp    7d10 <sgx_unregister_exception_handler+0x90>
    7cb8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    7cbf:	00 
    7cc0:	48 39 d8             	cmp    %rbx,%rax
    7cc3:	74 23                	je     7ce8 <sgx_unregister_exception_handler+0x68>
    7cc5:	48 89 c2             	mov    %rax,%rdx
    7cc8:	48 8b 40 08          	mov    0x8(%rax),%rax
    7ccc:	48 85 c0             	test   %rax,%rax
    7ccf:	75 ef                	jne    7cc0 <sgx_unregister_exception_handler+0x40>
    7cd1:	48 89 ef             	mov    %rbp,%rdi
    7cd4:	e8 b7 4a 00 00       	call   c790 <sgx_spin_unlock>
    7cd9:	48 83 c4 08          	add    $0x8,%rsp
    7cdd:	31 c0                	xor    %eax,%eax
    7cdf:	5b                   	pop    %rbx
    7ce0:	5d                   	pop    %rbp
    7ce1:	c3                   	ret    
    7ce2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7ce8:	48 8b 43 08          	mov    0x8(%rbx),%rax
    7cec:	48 89 ef             	mov    %rbp,%rdi
    7cef:	48 89 42 08          	mov    %rax,0x8(%rdx)
    7cf3:	e8 98 4a 00 00       	call   c790 <sgx_spin_unlock>
    7cf8:	48 89 df             	mov    %rbx,%rdi
    7cfb:	e8 b0 71 00 00       	call   eeb0 <dlfree>
    7d00:	48 83 c4 08          	add    $0x8,%rsp
    7d04:	b8 01 00 00 00       	mov    $0x1,%eax
    7d09:	5b                   	pop    %rbx
    7d0a:	5d                   	pop    %rbp
    7d0b:	c3                   	ret    
    7d0c:	0f 1f 40 00          	nopl   0x0(%rax)
    7d10:	48 8b 43 08          	mov    0x8(%rbx),%rax
    7d14:	48 89 ef             	mov    %rbp,%rdi
    7d17:	48 89 05 82 24 01 00 	mov    %rax,0x12482(%rip)        # 1a1a0 <_ZL12g_first_node>
    7d1e:	e8 6d 4a 00 00       	call   c790 <sgx_spin_unlock>
    7d23:	eb d3                	jmp    7cf8 <sgx_unregister_exception_handler+0x78>
    7d25:	0f 1f 00             	nopl   (%rax)
    7d28:	31 c0                	xor    %eax,%eax
    7d2a:	c3                   	ret    
    7d2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000007d30 <trts_handle_exception>:
    7d30:	f3 0f 1e fa          	endbr64 
    7d34:	41 57                	push   %r15
    7d36:	41 56                	push   %r14
    7d38:	41 55                	push   %r13
    7d3a:	41 54                	push   %r12
    7d3c:	55                   	push   %rbp
    7d3d:	53                   	push   %rbx
    7d3e:	48 89 fb             	mov    %rdi,%rbx
    7d41:	48 83 ec 08          	sub    $0x8,%rsp
    7d45:	e8 f9 a1 00 00       	call   11f43 <get_thread_data>
    7d4a:	48 85 c0             	test   %rax,%rax
    7d4d:	48 89 c5             	mov    %rax,%rbp
    7d50:	0f 94 c2             	sete   %dl
    7d53:	48 85 db             	test   %rbx,%rbx
    7d56:	0f 94 c0             	sete   %al
    7d59:	08 c2                	or     %al,%dl
    7d5b:	75 33                	jne    7d90 <trts_handle_exception+0x60>
    7d5d:	48 89 df             	mov    %rbx,%rdi
    7d60:	41 89 d4             	mov    %edx,%r12d
    7d63:	e8 b8 e0 ff ff       	call   5e20 <check_static_stack_canary>
    7d68:	85 c0                	test   %eax,%eax
    7d6a:	75 24                	jne    7d90 <trts_handle_exception+0x60>
    7d6c:	e8 93 a1 00 00       	call   11f04 <get_enclave_state>
    7d71:	83 f8 02             	cmp    $0x2,%eax
    7d74:	75 1a                	jne    7d90 <trts_handle_exception+0x60>
    7d76:	48 83 7d 78 ff       	cmpq   $0xffffffffffffffff,0x78(%rbp)
    7d7b:	74 13                	je     7d90 <trts_handle_exception+0x60>
    7d7d:	48 8b 45 10          	mov    0x10(%rbp),%rax
    7d81:	48 05 00 04 01 00    	add    $0x10400,%rax
    7d87:	48 39 c3             	cmp    %rax,%rbx
    7d8a:	74 24                	je     7db0 <trts_handle_exception+0x80>
    7d8c:	0f 1f 40 00          	nopl   0x0(%rax)
    7d90:	bf 03 00 00 00       	mov    $0x3,%edi
    7d95:	e8 7b a1 00 00       	call   11f15 <set_enclave_state>
    7d9a:	b8 06 10 00 00       	mov    $0x1006,%eax
    7d9f:	48 83 c4 08          	add    $0x8,%rsp
    7da3:	5b                   	pop    %rbx
    7da4:	5d                   	pop    %rbp
    7da5:	41 5c                	pop    %r12
    7da7:	41 5d                	pop    %r13
    7da9:	41 5e                	pop    %r14
    7dab:	41 5f                	pop    %r15
    7dad:	c3                   	ret    
    7dae:	66 90                	xchg   %ax,%ax
    7db0:	4c 8b 6d 20          	mov    0x20(%rbp),%r13
    7db4:	e8 37 f9 ff ff       	call   76f0 <get_xsave_size>
    7db9:	48 05 b7 10 00 00    	add    $0x10b7,%rax
    7dbf:	49 81 e5 00 f0 ff ff 	and    $0xfffffffffffff000,%r13
    7dc6:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    7dcc:	49 29 c5             	sub    %rax,%r13
    7dcf:	4c 39 eb             	cmp    %r13,%rbx
    7dd2:	75 bc                	jne    7d90 <trts_handle_exception+0x60>
    7dd4:	4c 8b 6d 20          	mov    0x20(%rbp),%r13
    7dd8:	be 08 00 00 00       	mov    $0x8,%esi
    7ddd:	4d 8b b5 90 00 00 00 	mov    0x90(%r13),%r14
    7de4:	4c 89 f7             	mov    %r14,%rdi
    7de7:	e8 64 dd ff ff       	call   5b50 <sgx_is_outside_enclave>
    7dec:	85 c0                	test   %eax,%eax
    7dee:	0f 84 ec 01 00 00    	je     7fe0 <trts_handle_exception+0x2b0>
    7df4:	49 8b 5d 20          	mov    0x20(%r13),%rbx
    7df8:	49 39 de             	cmp    %rbx,%r14
    7dfb:	0f 84 df 01 00 00    	je     7fe0 <trts_handle_exception+0x2b0>
    7e01:	31 f6                	xor    %esi,%esi
    7e03:	48 89 df             	mov    %rbx,%rdi
    7e06:	e8 d5 f7 ff ff       	call   75e0 <is_stack_addr>
    7e0b:	84 c0                	test   %al,%al
    7e0d:	0f 84 cd 01 00 00    	je     7fe0 <trts_handle_exception+0x2b0>
    7e13:	48 8b 45 38          	mov    0x38(%rbp),%rax
    7e17:	48 8d b0 b8 01 00 00 	lea    0x1b8(%rax),%rsi
    7e1e:	48 29 f3             	sub    %rsi,%rbx
    7e21:	48 83 e3 c0          	and    $0xffffffffffffffc0,%rbx
    7e25:	48 89 df             	mov    %rbx,%rdi
    7e28:	e8 b3 f7 ff ff       	call   75e0 <is_stack_addr>
    7e2d:	84 c0                	test   %al,%al
    7e2f:	0f 84 ab 01 00 00    	je     7fe0 <trts_handle_exception+0x2b0>
    7e35:	4c 8d 7b f8          	lea    -0x8(%rbx),%r15
    7e39:	be 08 00 00 00       	mov    $0x8,%esi
    7e3e:	4c 89 ff             	mov    %r15,%rdi
    7e41:	e8 9a f7 ff ff       	call   75e0 <is_stack_addr>
    7e46:	41 89 c6             	mov    %eax,%r14d
    7e49:	84 c0                	test   %al,%al
    7e4b:	0f 84 8f 01 00 00    	je     7fe0 <trts_handle_exception+0x2b0>
    7e51:	48 8b bd b0 00 00 00 	mov    0xb0(%rbp),%rdi
    7e58:	49 39 ff             	cmp    %rdi,%r15
    7e5b:	0f 83 93 01 00 00    	jae    7ff4 <trts_handle_exception+0x2c4>
    7e61:	4c 8d a7 ff 0f 00 00 	lea    0xfff(%rdi),%r12
    7e68:	4d 29 fc             	sub    %r15,%r12
    7e6b:	49 81 e4 00 f0 ff ff 	and    $0xfffffffffffff000,%r12
    7e72:	49 39 fc             	cmp    %rdi,%r12
    7e75:	0f 83 65 01 00 00    	jae    7fe0 <trts_handle_exception+0x2b0>
    7e7b:	4c 29 e7             	sub    %r12,%rdi
    7e7e:	48 3b 7d 18          	cmp    0x18(%rbp),%rdi
    7e82:	0f 82 58 01 00 00    	jb     7fe0 <trts_handle_exception+0x2b0>
    7e88:	4d 85 e4             	test   %r12,%r12
    7e8b:	0f 84 4f 01 00 00    	je     7fe0 <trts_handle_exception+0x2b0>
    7e91:	4c 89 e6             	mov    %r12,%rsi
    7e94:	e8 b7 3a 00 00       	call   b950 <mm_commit>
    7e99:	85 c0                	test   %eax,%eax
    7e9b:	0f 85 3f 01 00 00    	jne    7fe0 <trts_handle_exception+0x2b0>
    7ea1:	48 8d 05 6c ff 00 00 	lea    0xff6c(%rip),%rax        # 17e14 <g_aexnotify_supported>
    7ea8:	4c 29 a5 b0 00 00 00 	sub    %r12,0xb0(%rbp)
    7eaf:	45 89 f4             	mov    %r14d,%r12d
    7eb2:	8b 08                	mov    (%rax),%ecx
    7eb4:	31 c0                	xor    %eax,%eax
    7eb6:	89 83 a8 00 00 00    	mov    %eax,0xa8(%rbx)
    7ebc:	41 0f b6 85 a0 00 00 	movzbl 0xa0(%r13),%eax
    7ec3:	00 
    7ec4:	89 83 90 00 00 00    	mov    %eax,0x90(%rbx)
    7eca:	41 0f b6 95 a1 00 00 	movzbl 0xa1(%r13),%edx
    7ed1:	00 
    7ed2:	83 e8 0d             	sub    $0xd,%eax
    7ed5:	83 e2 07             	and    $0x7,%edx
    7ed8:	89 93 94 00 00 00    	mov    %edx,0x94(%rbx)
    7ede:	48 8b 55 38          	mov    0x38(%rbp),%rdx
    7ee2:	48 89 93 b0 00 00 00 	mov    %rdx,0xb0(%rbx)
    7ee9:	49 8b 55 00          	mov    0x0(%r13),%rdx
    7eed:	48 89 13             	mov    %rdx,(%rbx)
    7ef0:	49 8b 55 08          	mov    0x8(%r13),%rdx
    7ef4:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    7ef8:	49 8b 55 10          	mov    0x10(%r13),%rdx
    7efc:	48 89 53 10          	mov    %rdx,0x10(%rbx)
    7f00:	49 8b 55 18          	mov    0x18(%r13),%rdx
    7f04:	48 89 53 18          	mov    %rdx,0x18(%rbx)
    7f08:	49 8b 55 20          	mov    0x20(%r13),%rdx
    7f0c:	48 89 53 20          	mov    %rdx,0x20(%rbx)
    7f10:	49 8b 55 28          	mov    0x28(%r13),%rdx
    7f14:	48 89 53 28          	mov    %rdx,0x28(%rbx)
    7f18:	49 8b 55 30          	mov    0x30(%r13),%rdx
    7f1c:	48 89 53 30          	mov    %rdx,0x30(%rbx)
    7f20:	49 8b 55 38          	mov    0x38(%r13),%rdx
    7f24:	48 89 53 38          	mov    %rdx,0x38(%rbx)
    7f28:	49 8b 95 80 00 00 00 	mov    0x80(%r13),%rdx
    7f2f:	48 89 93 80 00 00 00 	mov    %rdx,0x80(%rbx)
    7f36:	49 8b 95 88 00 00 00 	mov    0x88(%r13),%rdx
    7f3d:	48 89 93 88 00 00 00 	mov    %rdx,0x88(%rbx)
    7f44:	49 8b 75 40          	mov    0x40(%r13),%rsi
    7f48:	48 89 73 40          	mov    %rsi,0x40(%rbx)
    7f4c:	49 8b 75 48          	mov    0x48(%r13),%rsi
    7f50:	48 89 73 48          	mov    %rsi,0x48(%rbx)
    7f54:	49 8b 75 50          	mov    0x50(%r13),%rsi
    7f58:	48 89 73 50          	mov    %rsi,0x50(%rbx)
    7f5c:	49 8b 75 58          	mov    0x58(%r13),%rsi
    7f60:	48 89 73 58          	mov    %rsi,0x58(%rbx)
    7f64:	49 8b 75 60          	mov    0x60(%r13),%rsi
    7f68:	48 89 73 60          	mov    %rsi,0x60(%rbx)
    7f6c:	49 8b 75 68          	mov    0x68(%r13),%rsi
    7f70:	48 89 73 68          	mov    %rsi,0x68(%rbx)
    7f74:	49 8b 75 70          	mov    0x70(%r13),%rsi
    7f78:	48 89 73 70          	mov    %rsi,0x70(%rbx)
    7f7c:	49 8b 75 78          	mov    0x78(%r13),%rsi
    7f80:	48 89 73 78          	mov    %rsi,0x78(%rbx)
    7f84:	83 f8 01             	cmp    $0x1,%eax
    7f87:	77 15                	ja     7f9e <trts_handle_exception+0x26e>
    7f89:	49 8b 45 f0          	mov    -0x10(%r13),%rax
    7f8d:	48 89 83 98 00 00 00 	mov    %rax,0x98(%rbx)
    7f94:	41 8b 45 f8          	mov    -0x8(%r13),%eax
    7f98:	89 83 a0 00 00 00    	mov    %eax,0xa0(%rbx)
    7f9e:	85 c9                	test   %ecx,%ecx
    7fa0:	0f 85 99 00 00 00    	jne    803f <trts_handle_exception+0x30f>
    7fa6:	45 84 e4             	test   %r12b,%r12b
    7fa9:	0f 85 ec 00 00 00    	jne    809b <trts_handle_exception+0x36b>
    7faf:	48 8d 05 8a f7 ff ff 	lea    -0x876(%rip),%rax        # 7740 <internal_handle_exception>
    7fb6:	4d 89 7d 20          	mov    %r15,0x20(%r13)
    7fba:	49 89 85 88 00 00 00 	mov    %rax,0x88(%r13)
    7fc1:	49 89 5d 00          	mov    %rbx,0x0(%r13)
    7fc5:	49 89 5d 38          	mov    %rbx,0x38(%r13)
    7fc9:	48 8b 83 88 00 00 00 	mov    0x88(%rbx),%rax
    7fd0:	48 89 43 f8          	mov    %rax,-0x8(%rbx)
    7fd4:	31 c0                	xor    %eax,%eax
    7fd6:	e9 c4 fd ff ff       	jmp    7d9f <trts_handle_exception+0x6f>
    7fdb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7fe0:	bf 03 00 00 00       	mov    $0x3,%edi
    7fe5:	e8 2b 9f 00 00       	call   11f15 <set_enclave_state>
    7fea:	b8 09 10 00 00       	mov    $0x1009,%eax
    7fef:	e9 ab fd ff ff       	jmp    7d9f <trts_handle_exception+0x6f>
    7ff4:	48 8d 15 19 fe 00 00 	lea    0xfe19(%rip),%rdx        # 17e14 <g_aexnotify_supported>
    7ffb:	49 8b 85 88 00 00 00 	mov    0x88(%r13),%rax
    8002:	48 3b 05 d7 ff 00 00 	cmp    0xffd7(%rip),%rax        # 17fe0 <_GLOBAL_OFFSET_TABLE_+0x28>
    8009:	8b 0a                	mov    (%rdx),%ecx
    800b:	74 6a                	je     8077 <trts_handle_exception+0x347>
    800d:	48 3b 05 c4 ff 00 00 	cmp    0xffc4(%rip),%rax        # 17fd8 <_GLOBAL_OFFSET_TABLE_+0x20>
    8014:	0f 84 8c 00 00 00    	je     80a6 <trts_handle_exception+0x376>
    801a:	85 c9                	test   %ecx,%ecx
    801c:	75 0e                	jne    802c <trts_handle_exception+0x2fc>
    801e:	41 80 bd a3 00 00 00 	cmpb   $0x0,0xa3(%r13)
    8025:	00 
    8026:	0f 89 64 fd ff ff    	jns    7d90 <trts_handle_exception+0x60>
    802c:	41 0f b6 85 a3 00 00 	movzbl 0xa3(%r13),%eax
    8033:	00 
    8034:	c0 e8 07             	shr    $0x7,%al
    8037:	0f b6 c0             	movzbl %al,%eax
    803a:	e9 77 fe ff ff       	jmp    7eb6 <trts_handle_exception+0x186>
    803f:	48 89 53 f8          	mov    %rdx,-0x8(%rbx)
    8043:	e8 c8 f6 ff ff       	call   7710 <get_ssa_aexnotify>
    8048:	48 8b 7d 58          	mov    0x58(%rbp),%rdi
    804c:	89 83 ac 00 00 00    	mov    %eax,0xac(%rbx)
    8052:	e8 5a 9a 00 00       	call   11ab1 <restore_xregs>
    8057:	83 bb ac 00 00 00 01 	cmpl   $0x1,0xac(%rbx)
    805e:	74 76                	je     80d6 <trts_handle_exception+0x3a6>
    8060:	48 8d 15 d9 f6 ff ff 	lea    -0x927(%rip),%rdx        # 7740 <internal_handle_exception>
    8067:	4c 89 fe             	mov    %r15,%rsi
    806a:	48 89 df             	mov    %rbx,%rdi
    806d:	e8 3e a3 00 00       	call   123b0 <second_phase>
    8072:	e9 19 fd ff ff       	jmp    7d90 <trts_handle_exception+0x60>
    8077:	49 83 7d 00 00       	cmpq   $0x0,0x0(%r13)
    807c:	75 8f                	jne    800d <trts_handle_exception+0x2dd>
    807e:	48 83 c0 03          	add    $0x3,%rax
    8082:	49 83 8d 80 00 00 00 	orq    $0x1,0x80(%r13)
    8089:	01 
    808a:	45 89 f4             	mov    %r14d,%r12d
    808d:	49 89 85 88 00 00 00 	mov    %rax,0x88(%r13)
    8094:	31 c0                	xor    %eax,%eax
    8096:	e9 1b fe ff ff       	jmp    7eb6 <trts_handle_exception+0x186>
    809b:	48 89 53 f8          	mov    %rdx,-0x8(%rbx)
    809f:	31 c0                	xor    %eax,%eax
    80a1:	e9 f9 fc ff ff       	jmp    7d9f <trts_handle_exception+0x6f>
    80a6:	49 83 7d 00 08       	cmpq   $0x8,0x0(%r13)
    80ab:	0f 85 69 ff ff ff    	jne    801a <trts_handle_exception+0x2ea>
    80b1:	48 83 c0 03          	add    $0x3,%rax
    80b5:	49 83 8d 80 00 00 00 	orq    $0x40,0x80(%r13)
    80bc:	40 
    80bd:	45 89 f4             	mov    %r14d,%r12d
    80c0:	49 89 85 88 00 00 00 	mov    %rax,0x88(%r13)
    80c7:	31 c0                	xor    %eax,%eax
    80c9:	49 c7 45 00 01 00 00 	movq   $0x1,0x0(%r13)
    80d0:	00 
    80d1:	e9 e0 fd ff ff       	jmp    7eb6 <trts_handle_exception+0x186>
    80d6:	31 ff                	xor    %edi,%edi
    80d8:	e8 b3 e3 ff ff       	call   6490 <sgx_set_ssa_aexnotify>
    80dd:	eb 81                	jmp    8060 <trts_handle_exception+0x330>
    80df:	90                   	nop

00000000000080e0 <get_xfeature_state>:
    80e0:	f3 0f 1e fa          	endbr64 
    80e4:	48 83 ec 08          	sub    $0x8,%rsp
    80e8:	e8 53 92 00 00       	call   11340 <sgx_self_report>
    80ed:	31 d2                	xor    %edx,%edx
    80ef:	48 8b 40 38          	mov    0x38(%rax),%rax
    80f3:	48 83 f8 03          	cmp    $0x3,%rax
    80f7:	0f 95 c2             	setne  %dl
    80fa:	89 15 44 20 01 00    	mov    %edx,0x12044(%rip)        # 1a144 <g_xsave_enabled>
    8100:	48 83 c4 08          	add    $0x8,%rsp
    8104:	c3                   	ret    
    8105:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    810c:	00 00 00 
    810f:	90                   	nop

0000000000008110 <has_text_relo>:
    8110:	85 d2                	test   %edx,%edx
    8112:	74 5b                	je     816f <has_text_relo+0x5f>
    8114:	89 d2                	mov    %edx,%edx
    8116:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax
    811d:	00 
    811e:	48 29 d0             	sub    %rdx,%rax
    8121:	48 8d 04 c6          	lea    (%rsi,%rax,8),%rax
    8125:	eb 12                	jmp    8139 <has_text_relo+0x29>
    8127:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    812e:	00 00 
    8130:	48 83 c6 38          	add    $0x38,%rsi
    8134:	48 39 c6             	cmp    %rax,%rsi
    8137:	74 36                	je     816f <has_text_relo+0x5f>
    8139:	83 3e 02             	cmpl   $0x2,(%rsi)
    813c:	75 f2                	jne    8130 <has_text_relo+0x20>
    813e:	48 8b 56 20          	mov    0x20(%rsi),%rdx
    8142:	48 03 7e 18          	add    0x18(%rsi),%rdi
    8146:	48 c1 ea 04          	shr    $0x4,%rdx
    814a:	74 23                	je     816f <has_text_relo+0x5f>
    814c:	48 c1 e2 04          	shl    $0x4,%rdx
    8150:	48 01 fa             	add    %rdi,%rdx
    8153:	eb 12                	jmp    8167 <has_text_relo+0x57>
    8155:	0f 1f 00             	nopl   (%rax)
    8158:	48 83 f8 16          	cmp    $0x16,%rax
    815c:	74 1a                	je     8178 <has_text_relo+0x68>
    815e:	48 83 c7 10          	add    $0x10,%rdi
    8162:	48 39 fa             	cmp    %rdi,%rdx
    8165:	74 08                	je     816f <has_text_relo+0x5f>
    8167:	48 8b 07             	mov    (%rdi),%rax
    816a:	48 85 c0             	test   %rax,%rax
    816d:	75 e9                	jne    8158 <has_text_relo+0x48>
    816f:	31 c0                	xor    %eax,%eax
    8171:	c3                   	ret    
    8172:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8178:	b8 01 00 00 00       	mov    $0x1,%eax
    817d:	c3                   	ret    
    817e:	66 90                	xchg   %ax,%ax

0000000000008180 <do_relocs>:
    8180:	49 89 d3             	mov    %rdx,%r11
    8183:	48 8d 14 37          	lea    (%rdi,%rsi,1),%rdx
    8187:	49 01 fb             	add    %rdi,%r11
    818a:	48 85 c9             	test   %rcx,%rcx
    818d:	0f 84 c2 01 00 00    	je     8355 <do_relocs+0x1d5>
    8193:	55                   	push   %rbp
    8194:	49 89 c9             	mov    %rcx,%r9
    8197:	31 f6                	xor    %esi,%esi
    8199:	4c 8d 05 30 af 00 00 	lea    0xaf30(%rip),%r8        # 130d0 <g_dyn_entry_table+0xa0>
    81a0:	53                   	push   %rbx
    81a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    81a8:	4c 8b 12             	mov    (%rdx),%r10
    81ab:	48 8b 42 08          	mov    0x8(%rdx),%rax
    81af:	49 01 fa             	add    %rdi,%r10
    81b2:	89 c1                	mov    %eax,%ecx
    81b4:	83 f8 12             	cmp    $0x12,%eax
    81b7:	0f 87 85 00 00 00    	ja     8242 <do_relocs+0xc2>
    81bd:	49 63 0c 88          	movslq (%r8,%rcx,4),%rcx
    81c1:	4c 01 c1             	add    %r8,%rcx
    81c4:	3e ff e1             	notrack jmp *%rcx
    81c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    81ce:	00 00 
    81d0:	48 c1 e8 20          	shr    $0x20,%rax
    81d4:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
    81d8:	49 8d 1c c3          	lea    (%r11,%rax,8),%rbx
    81dc:	0f b6 43 04          	movzbl 0x4(%rbx),%eax
    81e0:	c0 e8 04             	shr    $0x4,%al
    81e3:	3c 02                	cmp    $0x2,%al
    81e5:	0f 84 05 01 00 00    	je     82f0 <do_relocs+0x170>
    81eb:	48 85 db             	test   %rbx,%rbx
    81ee:	0f 84 8c 00 00 00    	je     8280 <do_relocs+0x100>
    81f4:	48 85 ff             	test   %rdi,%rdi
    81f7:	74 49                	je     8242 <do_relocs+0xc2>
    81f9:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    81ff:	75 41                	jne    8242 <do_relocs+0xc2>
    8201:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    8206:	75 3a                	jne    8242 <do_relocs+0xc2>
    8208:	48 89 f8             	mov    %rdi,%rax
    820b:	48 03 47 20          	add    0x20(%rdi),%rax
    820f:	74 31                	je     8242 <do_relocs+0xc2>
    8211:	0f b7 6f 38          	movzwl 0x38(%rdi),%ebp
    8215:	66 85 ed             	test   %bp,%bp
    8218:	74 28                	je     8242 <do_relocs+0xc2>
    821a:	83 ed 01             	sub    $0x1,%ebp
    821d:	48 8d 0c ed 00 00 00 	lea    0x0(,%rbp,8),%rcx
    8224:	00 
    8225:	48 29 e9             	sub    %rbp,%rcx
    8228:	48 8d 4c c8 38       	lea    0x38(%rax,%rcx,8),%rcx
    822d:	0f 1f 00             	nopl   (%rax)
    8230:	83 38 07             	cmpl   $0x7,(%rax)
    8233:	0f 84 e7 00 00 00    	je     8320 <do_relocs+0x1a0>
    8239:	48 83 c0 38          	add    $0x38,%rax
    823d:	48 39 c8             	cmp    %rcx,%rax
    8240:	75 ee                	jne    8230 <do_relocs+0xb0>
    8242:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8247:	5b                   	pop    %rbx
    8248:	5d                   	pop    %rbp
    8249:	c3                   	ret    
    824a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8250:	48 c1 e8 20          	shr    $0x20,%rax
    8254:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
    8258:	49 8d 0c c3          	lea    (%r11,%rax,8),%rcx
    825c:	0f b6 41 04          	movzbl 0x4(%rcx),%eax
    8260:	c0 e8 04             	shr    $0x4,%al
    8263:	3c 02                	cmp    $0x2,%al
    8265:	0f 84 95 00 00 00    	je     8300 <do_relocs+0x180>
    826b:	48 85 c9             	test   %rcx,%rcx
    826e:	74 10                	je     8280 <do_relocs+0x100>
    8270:	48 8b 42 10          	mov    0x10(%rdx),%rax
    8274:	48 01 f8             	add    %rdi,%rax
    8277:	48 03 41 08          	add    0x8(%rcx),%rax
    827b:	49 89 02             	mov    %rax,(%r10)
    827e:	66 90                	xchg   %ax,%ax
    8280:	48 83 c6 01          	add    $0x1,%rsi
    8284:	48 83 c2 18          	add    $0x18,%rdx
    8288:	49 39 f1             	cmp    %rsi,%r9
    828b:	0f 85 17 ff ff ff    	jne    81a8 <do_relocs+0x28>
    8291:	31 c0                	xor    %eax,%eax
    8293:	5b                   	pop    %rbx
    8294:	5d                   	pop    %rbp
    8295:	c3                   	ret    
    8296:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    829d:	00 00 00 
    82a0:	48 c1 e8 20          	shr    $0x20,%rax
    82a4:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
    82a8:	49 8d 0c c3          	lea    (%r11,%rax,8),%rcx
    82ac:	0f b6 41 04          	movzbl 0x4(%rcx),%eax
    82b0:	c0 e8 04             	shr    $0x4,%al
    82b3:	3c 02                	cmp    $0x2,%al
    82b5:	74 59                	je     8310 <do_relocs+0x190>
    82b7:	48 85 c9             	test   %rcx,%rcx
    82ba:	74 c4                	je     8280 <do_relocs+0x100>
    82bc:	48 8b 42 10          	mov    0x10(%rdx),%rax
    82c0:	48 03 41 08          	add    0x8(%rcx),%rax
    82c4:	49 89 02             	mov    %rax,(%r10)
    82c7:	eb b7                	jmp    8280 <do_relocs+0x100>
    82c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    82d0:	49 c7 02 01 00 00 00 	movq   $0x1,(%r10)
    82d7:	eb a7                	jmp    8280 <do_relocs+0x100>
    82d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    82e0:	48 8b 42 10          	mov    0x10(%rdx),%rax
    82e4:	48 01 f8             	add    %rdi,%rax
    82e7:	49 89 02             	mov    %rax,(%r10)
    82ea:	eb 94                	jmp    8280 <do_relocs+0x100>
    82ec:	0f 1f 40 00          	nopl   0x0(%rax)
    82f0:	48 83 7b 08 00       	cmpq   $0x0,0x8(%rbx)
    82f5:	0f 85 f0 fe ff ff    	jne    81eb <do_relocs+0x6b>
    82fb:	eb 83                	jmp    8280 <do_relocs+0x100>
    82fd:	0f 1f 00             	nopl   (%rax)
    8300:	48 83 79 08 00       	cmpq   $0x0,0x8(%rcx)
    8305:	0f 85 60 ff ff ff    	jne    826b <do_relocs+0xeb>
    830b:	e9 70 ff ff ff       	jmp    8280 <do_relocs+0x100>
    8310:	48 83 79 08 00       	cmpq   $0x0,0x8(%rcx)
    8315:	75 a0                	jne    82b7 <do_relocs+0x137>
    8317:	e9 64 ff ff ff       	jmp    8280 <do_relocs+0x100>
    831c:	0f 1f 40 00          	nopl   0x0(%rax)
    8320:	48 8b 48 28          	mov    0x28(%rax),%rcx
    8324:	48 8b 40 30          	mov    0x30(%rax),%rax
    8328:	48 83 f8 01          	cmp    $0x1,%rax
    832c:	76 0b                	jbe    8339 <do_relocs+0x1b9>
    832e:	48 8d 4c 01 ff       	lea    -0x1(%rcx,%rax,1),%rcx
    8333:	48 f7 d8             	neg    %rax
    8336:	48 21 c1             	and    %rax,%rcx
    8339:	48 85 c9             	test   %rcx,%rcx
    833c:	0f 84 00 ff ff ff    	je     8242 <do_relocs+0xc2>
    8342:	48 8b 42 10          	mov    0x10(%rdx),%rax
    8346:	48 03 43 08          	add    0x8(%rbx),%rax
    834a:	48 29 c8             	sub    %rcx,%rax
    834d:	49 89 02             	mov    %rax,(%r10)
    8350:	e9 2b ff ff ff       	jmp    8280 <do_relocs+0x100>
    8355:	31 c0                	xor    %eax,%eax
    8357:	c3                   	ret    
    8358:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    835f:	00 

0000000000008360 <relocate_enclave>:
    8360:	f3 0f 1e fa          	endbr64 
    8364:	48 85 ff             	test   %rdi,%rdi
    8367:	0f 84 d3 01 00 00    	je     8540 <relocate_enclave+0x1e0>
    836d:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    8373:	0f 85 c7 01 00 00    	jne    8540 <relocate_enclave+0x1e0>
    8379:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    837e:	0f 85 bc 01 00 00    	jne    8540 <relocate_enclave+0x1e0>
    8384:	41 57                	push   %r15
    8386:	41 56                	push   %r14
    8388:	41 55                	push   %r13
    838a:	41 54                	push   %r12
    838c:	55                   	push   %rbp
    838d:	53                   	push   %rbx
    838e:	48 89 fb             	mov    %rdi,%rbx
    8391:	48 83 ec 08          	sub    $0x8,%rsp
    8395:	48 03 5f 20          	add    0x20(%rdi),%rbx
    8399:	0f 84 fd 00 00 00    	je     849c <relocate_enclave+0x13c>
    839f:	0f b7 57 38          	movzwl 0x38(%rdi),%edx
    83a3:	66 85 d2             	test   %dx,%dx
    83a6:	0f 84 c4 01 00 00    	je     8570 <relocate_enclave+0x210>
    83ac:	83 ea 01             	sub    $0x1,%edx
    83af:	48 8d 2d 66 ad 00 00 	lea    0xad66(%rip),%rbp        # 1311c <g_dyn_entry_table+0xec>
    83b6:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax
    83bd:	00 
    83be:	48 29 d0             	sub    %rdx,%rax
    83c1:	4c 8d 64 c3 38       	lea    0x38(%rbx,%rax,8),%r12
    83c6:	eb 15                	jmp    83dd <relocate_enclave+0x7d>
    83c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    83cf:	00 
    83d0:	48 83 c3 38          	add    $0x38,%rbx
    83d4:	49 39 dc             	cmp    %rbx,%r12
    83d7:	0f 84 93 01 00 00    	je     8570 <relocate_enclave+0x210>
    83dd:	83 3b 02             	cmpl   $0x2,(%rbx)
    83e0:	75 ee                	jne    83d0 <relocate_enclave+0x70>
    83e2:	48 8b 53 18          	mov    0x18(%rbx),%rdx
    83e6:	4c 8b 53 20          	mov    0x20(%rbx),%r10
    83ea:	48 01 fa             	add    %rdi,%rdx
    83ed:	49 c1 ea 04          	shr    $0x4,%r10
    83f1:	74 dd                	je     83d0 <relocate_enclave+0x70>
    83f3:	49 c1 e2 04          	shl    $0x4,%r10
    83f7:	45 31 f6             	xor    %r14d,%r14d
    83fa:	45 31 ed             	xor    %r13d,%r13d
    83fd:	31 c0                	xor    %eax,%eax
    83ff:	49 01 d2             	add    %rdx,%r10
    8402:	45 31 ff             	xor    %r15d,%r15d
    8405:	45 31 c9             	xor    %r9d,%r9d
    8408:	45 31 c0             	xor    %r8d,%r8d
    840b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8410:	48 8b 32             	mov    (%rdx),%rsi
    8413:	48 85 f6             	test   %rsi,%rsi
    8416:	74 30                	je     8448 <relocate_enclave+0xe8>
    8418:	48 83 fe 17          	cmp    $0x17,%rsi
    841c:	77 1a                	ja     8438 <relocate_enclave+0xd8>
    841e:	48 63 74 b5 00       	movslq 0x0(%rbp,%rsi,4),%rsi
    8423:	48 01 ee             	add    %rbp,%rsi
    8426:	3e ff e6             	notrack jmp *%rsi
    8429:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8430:	4c 8b 42 08          	mov    0x8(%rdx),%r8
    8434:	0f 1f 40 00          	nopl   0x0(%rax)
    8438:	48 83 c2 10          	add    $0x10,%rdx
    843c:	49 39 d2             	cmp    %rdx,%r10
    843f:	75 cf                	jne    8410 <relocate_enclave+0xb0>
    8441:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8448:	4d 85 c9             	test   %r9,%r9
    844b:	0f 84 ff 00 00 00    	je     8550 <relocate_enclave+0x1f0>
    8451:	4d 85 ed             	test   %r13,%r13
    8454:	74 46                	je     849c <relocate_enclave+0x13c>
    8456:	31 d2                	xor    %edx,%edx
    8458:	4c 89 ce             	mov    %r9,%rsi
    845b:	4c 89 04 24          	mov    %r8,(%rsp)
    845f:	49 f7 f5             	div    %r13
    8462:	4c 89 c2             	mov    %r8,%rdx
    8465:	48 89 c1             	mov    %rax,%rcx
    8468:	e8 13 fd ff ff       	call   8180 <do_relocs>
    846d:	85 c0                	test   %eax,%eax
    846f:	75 2b                	jne    849c <relocate_enclave+0x13c>
    8471:	4d 85 ff             	test   %r15,%r15
    8474:	4c 8b 04 24          	mov    (%rsp),%r8
    8478:	0f 84 52 ff ff ff    	je     83d0 <relocate_enclave+0x70>
    847e:	31 d2                	xor    %edx,%edx
    8480:	4c 89 f0             	mov    %r14,%rax
    8483:	4c 89 fe             	mov    %r15,%rsi
    8486:	49 f7 f5             	div    %r13
    8489:	4c 89 c2             	mov    %r8,%rdx
    848c:	48 89 c1             	mov    %rax,%rcx
    848f:	e8 ec fc ff ff       	call   8180 <do_relocs>
    8494:	85 c0                	test   %eax,%eax
    8496:	0f 84 34 ff ff ff    	je     83d0 <relocate_enclave+0x70>
    849c:	48 83 c4 08          	add    $0x8,%rsp
    84a0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    84a5:	5b                   	pop    %rbx
    84a6:	5d                   	pop    %rbp
    84a7:	41 5c                	pop    %r12
    84a9:	41 5d                	pop    %r13
    84ab:	41 5e                	pop    %r14
    84ad:	41 5f                	pop    %r15
    84af:	c3                   	ret    
    84b0:	4c 8b 7a 08          	mov    0x8(%rdx),%r15
    84b4:	48 83 c2 10          	add    $0x10,%rdx
    84b8:	49 39 d2             	cmp    %rdx,%r10
    84bb:	0f 85 4f ff ff ff    	jne    8410 <relocate_enclave+0xb0>
    84c1:	eb 85                	jmp    8448 <relocate_enclave+0xe8>
    84c3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    84c8:	48 8b 42 08          	mov    0x8(%rdx),%rax
    84cc:	48 83 c2 10          	add    $0x10,%rdx
    84d0:	49 39 d2             	cmp    %rdx,%r10
    84d3:	0f 85 37 ff ff ff    	jne    8410 <relocate_enclave+0xb0>
    84d9:	e9 6a ff ff ff       	jmp    8448 <relocate_enclave+0xe8>
    84de:	66 90                	xchg   %ax,%ax
    84e0:	4c 8b 4a 08          	mov    0x8(%rdx),%r9
    84e4:	48 83 c2 10          	add    $0x10,%rdx
    84e8:	49 39 d2             	cmp    %rdx,%r10
    84eb:	0f 85 1f ff ff ff    	jne    8410 <relocate_enclave+0xb0>
    84f1:	e9 52 ff ff ff       	jmp    8448 <relocate_enclave+0xe8>
    84f6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    84fd:	00 00 00 
    8500:	4c 8b 72 08          	mov    0x8(%rdx),%r14
    8504:	48 83 c2 10          	add    $0x10,%rdx
    8508:	49 39 d2             	cmp    %rdx,%r10
    850b:	0f 85 ff fe ff ff    	jne    8410 <relocate_enclave+0xb0>
    8511:	e9 32 ff ff ff       	jmp    8448 <relocate_enclave+0xe8>
    8516:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    851d:	00 00 00 
    8520:	4c 8b 6a 08          	mov    0x8(%rdx),%r13
    8524:	48 83 c2 10          	add    $0x10,%rdx
    8528:	49 39 d2             	cmp    %rdx,%r10
    852b:	0f 85 df fe ff ff    	jne    8410 <relocate_enclave+0xb0>
    8531:	e9 12 ff ff ff       	jmp    8448 <relocate_enclave+0xe8>
    8536:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    853d:	00 00 00 
    8540:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8545:	c3                   	ret    
    8546:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    854d:	00 00 00 
    8550:	4d 85 ff             	test   %r15,%r15
    8553:	0f 84 77 fe ff ff    	je     83d0 <relocate_enclave+0x70>
    8559:	4d 85 ed             	test   %r13,%r13
    855c:	0f 84 3a ff ff ff    	je     849c <relocate_enclave+0x13c>
    8562:	e9 17 ff ff ff       	jmp    847e <relocate_enclave+0x11e>
    8567:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    856e:	00 00 
    8570:	48 83 c4 08          	add    $0x8,%rsp
    8574:	31 c0                	xor    %eax,%eax
    8576:	5b                   	pop    %rbx
    8577:	5d                   	pop    %rbp
    8578:	41 5c                	pop    %r12
    857a:	41 5d                	pop    %r13
    857c:	41 5e                	pop    %r14
    857e:	41 5f                	pop    %r15
    8580:	c3                   	ret    
    8581:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8588:	00 00 00 
    858b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000008590 <elf_tls_info>:
    8590:	f3 0f 1e fa          	endbr64 
    8594:	49 89 f0             	mov    %rsi,%r8
    8597:	48 89 f9             	mov    %rdi,%rcx
    859a:	48 89 d6             	mov    %rdx,%rsi
    859d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    85a2:	48 85 ff             	test   %rdi,%rdi
    85a5:	74 7e                	je     8625 <elf_tls_info+0x95>
    85a7:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    85ad:	75 75                	jne    8624 <elf_tls_info+0x94>
    85af:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    85b4:	75 6e                	jne    8624 <elf_tls_info+0x94>
    85b6:	48 8b 47 20          	mov    0x20(%rdi),%rax
    85ba:	48 01 f8             	add    %rdi,%rax
    85bd:	4d 85 c0             	test   %r8,%r8
    85c0:	0f 94 c2             	sete   %dl
    85c3:	48 85 f6             	test   %rsi,%rsi
    85c6:	40 0f 94 c7          	sete   %dil
    85ca:	40 08 fa             	or     %dil,%dl
    85cd:	75 50                	jne    861f <elf_tls_info+0x8f>
    85cf:	48 85 c0             	test   %rax,%rax
    85d2:	74 4b                	je     861f <elf_tls_info+0x8f>
    85d4:	0f b7 79 38          	movzwl 0x38(%rcx),%edi
    85d8:	49 c7 00 00 00 00 00 	movq   $0x0,(%r8)
    85df:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
    85e6:	66 85 ff             	test   %di,%di
    85e9:	74 31                	je     861c <elf_tls_info+0x8c>
    85eb:	83 ef 01             	sub    $0x1,%edi
    85ee:	48 8d 14 fd 00 00 00 	lea    0x0(,%rdi,8),%rdx
    85f5:	00 
    85f6:	48 29 fa             	sub    %rdi,%rdx
    85f9:	48 8d 54 d0 38       	lea    0x38(%rax,%rdx,8),%rdx
    85fe:	eb 09                	jmp    8609 <elf_tls_info+0x79>
    8600:	48 83 c0 38          	add    $0x38,%rax
    8604:	48 39 d0             	cmp    %rdx,%rax
    8607:	74 13                	je     861c <elf_tls_info+0x8c>
    8609:	83 38 07             	cmpl   $0x7,(%rax)
    860c:	75 f2                	jne    8600 <elf_tls_info+0x70>
    860e:	48 03 48 10          	add    0x10(%rax),%rcx
    8612:	49 89 08             	mov    %rcx,(%r8)
    8615:	48 8b 40 20          	mov    0x20(%rax),%rax
    8619:	48 89 06             	mov    %rax,(%rsi)
    861c:	31 c0                	xor    %eax,%eax
    861e:	c3                   	ret    
    861f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8624:	c3                   	ret    
    8625:	c3                   	ret    
    8626:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    862d:	00 00 00 

0000000000008630 <elf_get_init_array>:
    8630:	f3 0f 1e fa          	endbr64 
    8634:	49 89 f8             	mov    %rdi,%r8
    8637:	49 89 f1             	mov    %rsi,%r9
    863a:	49 89 d2             	mov    %rdx,%r10
    863d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8642:	48 85 ff             	test   %rdi,%rdi
    8645:	0f 84 c8 00 00 00    	je     8713 <elf_get_init_array+0xe3>
    864b:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    8651:	0f 85 b6 00 00 00    	jne    870d <elf_get_init_array+0xdd>
    8657:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    865c:	0f 85 ab 00 00 00    	jne    870d <elf_get_init_array+0xdd>
    8662:	48 8b 57 20          	mov    0x20(%rdi),%rdx
    8666:	48 01 fa             	add    %rdi,%rdx
    8669:	48 85 f6             	test   %rsi,%rsi
    866c:	0f 94 c0             	sete   %al
    866f:	4d 85 d2             	test   %r10,%r10
    8672:	0f 94 c1             	sete   %cl
    8675:	08 c8                	or     %cl,%al
    8677:	0f 85 8b 00 00 00    	jne    8708 <elf_get_init_array+0xd8>
    867d:	48 85 d2             	test   %rdx,%rdx
    8680:	0f 84 82 00 00 00    	je     8708 <elf_get_init_array+0xd8>
    8686:	0f b7 4f 38          	movzwl 0x38(%rdi),%ecx
    868a:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
    8691:	49 c7 02 00 00 00 00 	movq   $0x0,(%r10)
    8698:	66 85 c9             	test   %cx,%cx
    869b:	74 73                	je     8710 <elf_get_init_array+0xe0>
    869d:	83 e9 01             	sub    $0x1,%ecx
    86a0:	48 8d 04 cd 00 00 00 	lea    0x0(,%rcx,8),%rax
    86a7:	00 
    86a8:	48 29 c8             	sub    %rcx,%rax
    86ab:	48 8d 7c c2 38       	lea    0x38(%rdx,%rax,8),%rdi
    86b0:	eb 0f                	jmp    86c1 <elf_get_init_array+0x91>
    86b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    86b8:	48 83 c2 38          	add    $0x38,%rdx
    86bc:	48 39 fa             	cmp    %rdi,%rdx
    86bf:	74 4f                	je     8710 <elf_get_init_array+0xe0>
    86c1:	83 3a 02             	cmpl   $0x2,(%rdx)
    86c4:	75 f2                	jne    86b8 <elf_get_init_array+0x88>
    86c6:	48 8b 42 18          	mov    0x18(%rdx),%rax
    86ca:	48 8b 72 20          	mov    0x20(%rdx),%rsi
    86ce:	4c 01 c0             	add    %r8,%rax
    86d1:	48 c1 ee 04          	shr    $0x4,%rsi
    86d5:	74 e1                	je     86b8 <elf_get_init_array+0x88>
    86d7:	48 c1 e6 04          	shl    $0x4,%rsi
    86db:	48 01 c6             	add    %rax,%rsi
    86de:	eb 16                	jmp    86f6 <elf_get_init_array+0xc6>
    86e0:	48 83 f9 1b          	cmp    $0x1b,%rcx
    86e4:	75 07                	jne    86ed <elf_get_init_array+0xbd>
    86e6:	48 8b 48 08          	mov    0x8(%rax),%rcx
    86ea:	49 89 0a             	mov    %rcx,(%r10)
    86ed:	48 83 c0 10          	add    $0x10,%rax
    86f1:	48 39 c6             	cmp    %rax,%rsi
    86f4:	74 c2                	je     86b8 <elf_get_init_array+0x88>
    86f6:	48 8b 08             	mov    (%rax),%rcx
    86f9:	48 83 f9 19          	cmp    $0x19,%rcx
    86fd:	75 e1                	jne    86e0 <elf_get_init_array+0xb0>
    86ff:	48 8b 48 08          	mov    0x8(%rax),%rcx
    8703:	49 89 09             	mov    %rcx,(%r9)
    8706:	eb e5                	jmp    86ed <elf_get_init_array+0xbd>
    8708:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    870d:	c3                   	ret    
    870e:	66 90                	xchg   %ax,%ax
    8710:	31 c0                	xor    %eax,%eax
    8712:	c3                   	ret    
    8713:	c3                   	ret    
    8714:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    871b:	00 00 00 
    871e:	66 90                	xchg   %ax,%ax

0000000000008720 <elf_get_uninit_array>:
    8720:	f3 0f 1e fa          	endbr64 
    8724:	49 89 f8             	mov    %rdi,%r8
    8727:	49 89 f1             	mov    %rsi,%r9
    872a:	49 89 d2             	mov    %rdx,%r10
    872d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8732:	48 85 ff             	test   %rdi,%rdi
    8735:	0f 84 c8 00 00 00    	je     8803 <elf_get_uninit_array+0xe3>
    873b:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    8741:	0f 85 b6 00 00 00    	jne    87fd <elf_get_uninit_array+0xdd>
    8747:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    874c:	0f 85 ab 00 00 00    	jne    87fd <elf_get_uninit_array+0xdd>
    8752:	48 8b 57 20          	mov    0x20(%rdi),%rdx
    8756:	48 01 fa             	add    %rdi,%rdx
    8759:	48 85 f6             	test   %rsi,%rsi
    875c:	0f 94 c0             	sete   %al
    875f:	4d 85 d2             	test   %r10,%r10
    8762:	0f 94 c1             	sete   %cl
    8765:	08 c8                	or     %cl,%al
    8767:	0f 85 8b 00 00 00    	jne    87f8 <elf_get_uninit_array+0xd8>
    876d:	48 85 d2             	test   %rdx,%rdx
    8770:	0f 84 82 00 00 00    	je     87f8 <elf_get_uninit_array+0xd8>
    8776:	0f b7 4f 38          	movzwl 0x38(%rdi),%ecx
    877a:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
    8781:	49 c7 02 00 00 00 00 	movq   $0x0,(%r10)
    8788:	66 85 c9             	test   %cx,%cx
    878b:	74 73                	je     8800 <elf_get_uninit_array+0xe0>
    878d:	83 e9 01             	sub    $0x1,%ecx
    8790:	48 8d 04 cd 00 00 00 	lea    0x0(,%rcx,8),%rax
    8797:	00 
    8798:	48 29 c8             	sub    %rcx,%rax
    879b:	48 8d 7c c2 38       	lea    0x38(%rdx,%rax,8),%rdi
    87a0:	eb 0f                	jmp    87b1 <elf_get_uninit_array+0x91>
    87a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    87a8:	48 83 c2 38          	add    $0x38,%rdx
    87ac:	48 39 fa             	cmp    %rdi,%rdx
    87af:	74 4f                	je     8800 <elf_get_uninit_array+0xe0>
    87b1:	83 3a 02             	cmpl   $0x2,(%rdx)
    87b4:	75 f2                	jne    87a8 <elf_get_uninit_array+0x88>
    87b6:	48 8b 42 18          	mov    0x18(%rdx),%rax
    87ba:	48 8b 72 20          	mov    0x20(%rdx),%rsi
    87be:	4c 01 c0             	add    %r8,%rax
    87c1:	48 c1 ee 04          	shr    $0x4,%rsi
    87c5:	74 e1                	je     87a8 <elf_get_uninit_array+0x88>
    87c7:	48 c1 e6 04          	shl    $0x4,%rsi
    87cb:	48 01 c6             	add    %rax,%rsi
    87ce:	eb 16                	jmp    87e6 <elf_get_uninit_array+0xc6>
    87d0:	48 83 f9 1c          	cmp    $0x1c,%rcx
    87d4:	75 07                	jne    87dd <elf_get_uninit_array+0xbd>
    87d6:	48 8b 48 08          	mov    0x8(%rax),%rcx
    87da:	49 89 0a             	mov    %rcx,(%r10)
    87dd:	48 83 c0 10          	add    $0x10,%rax
    87e1:	48 39 c6             	cmp    %rax,%rsi
    87e4:	74 c2                	je     87a8 <elf_get_uninit_array+0x88>
    87e6:	48 8b 08             	mov    (%rax),%rcx
    87e9:	48 83 f9 1a          	cmp    $0x1a,%rcx
    87ed:	75 e1                	jne    87d0 <elf_get_uninit_array+0xb0>
    87ef:	48 8b 48 08          	mov    0x8(%rax),%rcx
    87f3:	49 89 09             	mov    %rcx,(%r9)
    87f6:	eb e5                	jmp    87dd <elf_get_uninit_array+0xbd>
    87f8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    87fd:	c3                   	ret    
    87fe:	66 90                	xchg   %ax,%ax
    8800:	31 c0                	xor    %eax,%eax
    8802:	c3                   	ret    
    8803:	c3                   	ret    
    8804:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    880b:	00 00 00 
    880e:	66 90                	xchg   %ax,%ax

0000000000008810 <change_protection>:
    8810:	f3 0f 1e fa          	endbr64 
    8814:	48 85 ff             	test   %rdi,%rdi
    8817:	0f 84 be 01 00 00    	je     89db <change_protection+0x1cb>
    881d:	41 56                	push   %r14
    881f:	41 55                	push   %r13
    8821:	49 89 fd             	mov    %rdi,%r13
    8824:	41 54                	push   %r12
    8826:	55                   	push   %rbp
    8827:	53                   	push   %rbx
    8828:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    882e:	0f 85 bc 00 00 00    	jne    88f0 <change_protection+0xe0>
    8834:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    8839:	0f 85 b1 00 00 00    	jne    88f0 <change_protection+0xe0>
    883f:	48 89 fb             	mov    %rdi,%rbx
    8842:	48 03 5f 20          	add    0x20(%rdi),%rbx
    8846:	0f 84 a4 00 00 00    	je     88f0 <change_protection+0xe0>
    884c:	0f b7 57 38          	movzwl 0x38(%rdi),%edx
    8850:	48 89 de             	mov    %rbx,%rsi
    8853:	89 d1                	mov    %edx,%ecx
    8855:	e8 b6 f8 ff ff       	call   8110 <has_text_relo>
    885a:	41 89 c6             	mov    %eax,%r14d
    885d:	66 85 c9             	test   %cx,%cx
    8860:	0f 84 ea 00 00 00    	je     8950 <change_protection+0x140>
    8866:	49 bc ff ff ff ff 02 	movabs $0x2ffffffff,%r12
    886d:	00 00 00 
    8870:	31 ed                	xor    %ebp,%ebp
    8872:	eb 18                	jmp    888c <change_protection+0x7c>
    8874:	0f 1f 40 00          	nopl   0x0(%rax)
    8878:	41 0f b7 45 38       	movzwl 0x38(%r13),%eax
    887d:	83 c5 01             	add    $0x1,%ebp
    8880:	48 83 c3 38          	add    $0x38,%rbx
    8884:	39 c5                	cmp    %eax,%ebp
    8886:	0f 83 c4 00 00 00    	jae    8950 <change_protection+0x140>
    888c:	45 85 f6             	test   %r14d,%r14d
    888f:	74 0c                	je     889d <change_protection+0x8d>
    8891:	48 8b 03             	mov    (%rbx),%rax
    8894:	4c 21 e0             	and    %r12,%rax
    8897:	48 83 f8 01          	cmp    $0x1,%rax
    889b:	74 63                	je     8900 <change_protection+0xf0>
    889d:	81 3b 52 e5 74 64    	cmpl   $0x6474e552,(%rbx)
    88a3:	75 d3                	jne    8878 <change_protection+0x68>
    88a5:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    88a9:	48 8b 73 28          	mov    0x28(%rbx),%rsi
    88ad:	48 01 fe             	add    %rdi,%rsi
    88b0:	48 89 f8             	mov    %rdi,%rax
    88b3:	48 81 c6 ff 0f 00 00 	add    $0xfff,%rsi
    88ba:	48 31 f0             	xor    %rsi,%rax
    88bd:	48 3d ff 0f 00 00    	cmp    $0xfff,%rax
    88c3:	76 b3                	jbe    8878 <change_protection+0x68>
    88c5:	48 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%rdi
    88cc:	48 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%rsi
    88d3:	ba 01 00 00 00       	mov    $0x1,%edx
    88d8:	48 29 fe             	sub    %rdi,%rsi
    88db:	4c 01 ef             	add    %r13,%rdi
    88de:	e8 bd 30 00 00       	call   b9a0 <mm_modify_permissions>
    88e3:	85 c0                	test   %eax,%eax
    88e5:	74 91                	je     8878 <change_protection+0x68>
    88e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    88ee:	00 00 
    88f0:	b8 01 00 00 00       	mov    $0x1,%eax
    88f5:	5b                   	pop    %rbx
    88f6:	5d                   	pop    %rbp
    88f7:	41 5c                	pop    %r12
    88f9:	41 5d                	pop    %r13
    88fb:	41 5e                	pop    %r14
    88fd:	c3                   	ret    
    88fe:	66 90                	xchg   %ax,%ax
    8900:	48 8b 43 10          	mov    0x10(%rbx),%rax
    8904:	8b 4b 04             	mov    0x4(%rbx),%ecx
    8907:	48 89 c7             	mov    %rax,%rdi
    890a:	89 ca                	mov    %ecx,%edx
    890c:	48 03 43 28          	add    0x28(%rbx),%rax
    8910:	c1 e9 02             	shr    $0x2,%ecx
    8913:	83 e2 01             	and    $0x1,%edx
    8916:	48 8d b0 ff 0f 00 00 	lea    0xfff(%rax),%rsi
    891d:	48 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%rdi
    8924:	83 e1 01             	and    $0x1,%ecx
    8927:	48 c1 e2 02          	shl    $0x2,%rdx
    892b:	48 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%rsi
    8932:	48 29 fe             	sub    %rdi,%rsi
    8935:	09 ca                	or     %ecx,%edx
    8937:	4c 01 ef             	add    %r13,%rdi
    893a:	e8 61 30 00 00       	call   b9a0 <mm_modify_permissions>
    893f:	85 c0                	test   %eax,%eax
    8941:	0f 84 56 ff ff ff    	je     889d <change_protection+0x8d>
    8947:	eb a7                	jmp    88f0 <change_protection+0xe0>
    8949:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8950:	8b 05 82 a9 00 00    	mov    0xa982(%rip),%eax        # 132d8 <g_global_data+0x158>
    8956:	85 c0                	test   %eax,%eax
    8958:	74 9b                	je     88f5 <change_protection+0xe5>
    895a:	31 d2                	xor    %edx,%edx
    895c:	48 8d 3d 1d a8 00 00 	lea    0xa81d(%rip),%rdi        # 13180 <g_global_data>
    8963:	eb 10                	jmp    8975 <change_protection+0x165>
    8965:	0f 1f 00             	nopl   (%rax)
    8968:	8b 05 6a a9 00 00    	mov    0xa96a(%rip),%eax        # 132d8 <g_global_data+0x158>
    896e:	83 c2 01             	add    $0x1,%edx
    8971:	39 c2                	cmp    %eax,%edx
    8973:	73 5b                	jae    89d0 <change_protection+0x1c0>
    8975:	89 d1                	mov    %edx,%ecx
    8977:	48 8d 41 0b          	lea    0xb(%rcx),%rax
    897b:	48 c1 e0 05          	shl    $0x5,%rax
    897f:	48 01 f8             	add    %rdi,%rax
    8982:	0f b7 30             	movzwl (%rax),%esi
    8985:	66 83 fe 14          	cmp    $0x14,%si
    8989:	75 dd                	jne    8968 <change_protection+0x158>
    898b:	48 c1 e1 05          	shl    $0x5,%rcx
    898f:	48 01 f9             	add    %rdi,%rcx
    8992:	48 8b 89 78 01 00 00 	mov    0x178(%rcx),%rcx
    8999:	48 81 f9 07 02 00 00 	cmp    $0x207,%rcx
    89a0:	75 c6                	jne    8968 <change_protection+0x158>
    89a2:	8b 48 04             	mov    0x4(%rax),%ecx
    89a5:	85 c9                	test   %ecx,%ecx
    89a7:	74 bf                	je     8968 <change_protection+0x158>
    89a9:	8b 70 04             	mov    0x4(%rax),%esi
    89ac:	48 8b 40 08          	mov    0x8(%rax),%rax
    89b0:	ba 03 00 00 00       	mov    $0x3,%edx
    89b5:	48 c1 e6 0c          	shl    $0xc,%rsi
    89b9:	49 8d 7c 05 00       	lea    0x0(%r13,%rax,1),%rdi
    89be:	e8 dd 2f 00 00       	call   b9a0 <mm_modify_permissions>
    89c3:	85 c0                	test   %eax,%eax
    89c5:	0f 95 c0             	setne  %al
    89c8:	0f b6 c0             	movzbl %al,%eax
    89cb:	e9 25 ff ff ff       	jmp    88f5 <change_protection+0xe5>
    89d0:	5b                   	pop    %rbx
    89d1:	31 c0                	xor    %eax,%eax
    89d3:	5d                   	pop    %rbp
    89d4:	41 5c                	pop    %r12
    89d6:	41 5d                	pop    %r13
    89d8:	41 5e                	pop    %r14
    89da:	c3                   	ret    
    89db:	b8 01 00 00 00       	mov    $0x1,%eax
    89e0:	c3                   	ret    
    89e1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    89e8:	00 00 00 
    89eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000089f0 <init_segment_emas>:
    89f0:	f3 0f 1e fa          	endbr64 
    89f4:	48 85 ff             	test   %rdi,%rdi
    89f7:	0f 84 e8 00 00 00    	je     8ae5 <init_segment_emas+0xf5>
    89fd:	41 55                	push   %r13
    89ff:	49 89 fd             	mov    %rdi,%r13
    8a02:	41 54                	push   %r12
    8a04:	55                   	push   %rbp
    8a05:	53                   	push   %rbx
    8a06:	48 83 ec 08          	sub    $0x8,%rsp
    8a0a:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    8a10:	0f 85 ae 00 00 00    	jne    8ac4 <init_segment_emas+0xd4>
    8a16:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    8a1b:	0f 85 a3 00 00 00    	jne    8ac4 <init_segment_emas+0xd4>
    8a21:	48 89 fb             	mov    %rdi,%rbx
    8a24:	48 03 5f 20          	add    0x20(%rdi),%rbx
    8a28:	0f 84 96 00 00 00    	je     8ac4 <init_segment_emas+0xd4>
    8a2e:	0f b7 57 38          	movzwl 0x38(%rdi),%edx
    8a32:	48 89 de             	mov    %rbx,%rsi
    8a35:	45 31 e4             	xor    %r12d,%r12d
    8a38:	89 d1                	mov    %edx,%ecx
    8a3a:	e8 d1 f6 ff ff       	call   8110 <has_text_relo>
    8a3f:	89 c5                	mov    %eax,%ebp
    8a41:	66 85 c9             	test   %cx,%cx
    8a44:	75 1c                	jne    8a62 <init_segment_emas+0x72>
    8a46:	e9 8d 00 00 00       	jmp    8ad8 <init_segment_emas+0xe8>
    8a4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8a50:	41 0f b7 45 38       	movzwl 0x38(%r13),%eax
    8a55:	41 83 c4 01          	add    $0x1,%r12d
    8a59:	48 83 c3 38          	add    $0x38,%rbx
    8a5d:	41 39 c4             	cmp    %eax,%r12d
    8a60:	73 76                	jae    8ad8 <init_segment_emas+0xe8>
    8a62:	83 3b 01             	cmpl   $0x1,(%rbx)
    8a65:	75 e9                	jne    8a50 <init_segment_emas+0x60>
    8a67:	8b 4b 04             	mov    0x4(%rbx),%ecx
    8a6a:	48 8b 73 10          	mov    0x10(%rbx),%rsi
    8a6e:	89 c8                	mov    %ecx,%eax
    8a70:	48 89 f2             	mov    %rsi,%rdx
    8a73:	48 03 73 28          	add    0x28(%rbx),%rsi
    8a77:	83 e0 02             	and    $0x2,%eax
    8a7a:	48 81 c6 ff 0f 00 00 	add    $0xfff,%rsi
    8a81:	48 81 e2 00 f0 ff ff 	and    $0xfffffffffffff000,%rdx
    8a88:	09 e8                	or     %ebp,%eax
    8a8a:	48 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%rsi
    8a91:	49 8d 7c 15 00       	lea    0x0(%r13,%rdx,1),%rdi
    8a96:	83 f8 01             	cmp    $0x1,%eax
    8a99:	48 19 c0             	sbb    %rax,%rax
    8a9c:	83 e1 01             	and    $0x1,%ecx
    8a9f:	48 29 d6             	sub    %rdx,%rsi
    8aa2:	45 31 c9             	xor    %r9d,%r9d
    8aa5:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    8aa9:	48 c1 e1 02          	shl    $0x2,%rcx
    8aad:	45 31 c0             	xor    %r8d,%r8d
    8ab0:	ba 80 02 00 00       	mov    $0x280,%edx
    8ab5:	48 83 c0 03          	add    $0x3,%rax
    8ab9:	09 c1                	or     %eax,%ecx
    8abb:	e8 70 2d 00 00       	call   b830 <mm_init_ema>
    8ac0:	85 c0                	test   %eax,%eax
    8ac2:	74 8c                	je     8a50 <init_segment_emas+0x60>
    8ac4:	48 83 c4 08          	add    $0x8,%rsp
    8ac8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8acd:	5b                   	pop    %rbx
    8ace:	5d                   	pop    %rbp
    8acf:	41 5c                	pop    %r12
    8ad1:	41 5d                	pop    %r13
    8ad3:	c3                   	ret    
    8ad4:	0f 1f 40 00          	nopl   0x0(%rax)
    8ad8:	48 83 c4 08          	add    $0x8,%rsp
    8adc:	31 c0                	xor    %eax,%eax
    8ade:	5b                   	pop    %rbx
    8adf:	5d                   	pop    %rbp
    8ae0:	41 5c                	pop    %r12
    8ae2:	41 5d                	pop    %r13
    8ae4:	c3                   	ret    
    8ae5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8aea:	c3                   	ret    
    8aeb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000008af0 <__cxa_atexit>:
    8af0:	f3 0f 1e fa          	endbr64 
    8af4:	41 55                	push   %r13
    8af6:	49 89 d5             	mov    %rdx,%r13
    8af9:	41 54                	push   %r12
    8afb:	49 89 f4             	mov    %rsi,%r12
    8afe:	55                   	push   %rbp
    8aff:	48 89 fd             	mov    %rdi,%rbp
    8b02:	53                   	push   %rbx
    8b03:	48 83 ec 18          	sub    $0x18,%rsp
    8b07:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    8b0e:	00 00 
    8b10:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    8b15:	31 c0                	xor    %eax,%eax
    8b17:	48 83 3d 89 16 01 00 	cmpq   $0x0,0x11689(%rip)        # 1a1a8 <g_exit_function_cookie>
    8b1e:	00 
    8b1f:	0f 84 8b 00 00 00    	je     8bb0 <__cxa_atexit+0xc0>
    8b25:	31 f6                	xor    %esi,%esi
    8b27:	48 89 ef             	mov    %rbp,%rdi
    8b2a:	e8 c1 cf ff ff       	call   5af0 <sgx_is_within_enclave>
    8b2f:	85 c0                	test   %eax,%eax
    8b31:	0f 84 a1 00 00 00    	je     8bd8 <__cxa_atexit+0xe8>
    8b37:	bf 20 00 00 00       	mov    $0x20,%edi
    8b3c:	e8 7f 45 00 00       	call   d0c0 <dlmalloc>
    8b41:	48 89 c3             	mov    %rax,%rbx
    8b44:	48 85 c0             	test   %rax,%rax
    8b47:	0f 84 8b 00 00 00    	je     8bd8 <__cxa_atexit+0xe8>
    8b4d:	48 8b 05 54 16 01 00 	mov    0x11654(%rip),%rax        # 1a1a8 <g_exit_function_cookie>
    8b54:	4c 89 6b 10          	mov    %r13,0x10(%rbx)
    8b58:	48 31 c5             	xor    %rax,%rbp
    8b5b:	49 31 c4             	xor    %rax,%r12
    8b5e:	48 89 2b             	mov    %rbp,(%rbx)
    8b61:	48 8d 2d 48 16 01 00 	lea    0x11648(%rip),%rbp        # 1a1b0 <g_exit_function_lock>
    8b68:	4c 89 63 08          	mov    %r12,0x8(%rbx)
    8b6c:	48 89 ef             	mov    %rbp,%rdi
    8b6f:	e8 8c 3b 00 00       	call   c700 <sgx_spin_lock>
    8b74:	48 8b 05 3d 16 01 00 	mov    0x1163d(%rip),%rax        # 1a1b8 <g_exit_function>
    8b7b:	48 89 ef             	mov    %rbp,%rdi
    8b7e:	48 89 1d 33 16 01 00 	mov    %rbx,0x11633(%rip)        # 1a1b8 <g_exit_function>
    8b85:	48 89 43 18          	mov    %rax,0x18(%rbx)
    8b89:	e8 02 3c 00 00       	call   c790 <sgx_spin_unlock>
    8b8e:	31 c0                	xor    %eax,%eax
    8b90:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    8b95:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    8b9c:	00 00 
    8b9e:	75 71                	jne    8c11 <__cxa_atexit+0x121>
    8ba0:	48 83 c4 18          	add    $0x18,%rsp
    8ba4:	5b                   	pop    %rbx
    8ba5:	5d                   	pop    %rbp
    8ba6:	41 5c                	pop    %r12
    8ba8:	41 5d                	pop    %r13
    8baa:	c3                   	ret    
    8bab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8bb0:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    8bb7:	00 
    8bb8:	48 89 e3             	mov    %rsp,%rbx
    8bbb:	eb 0a                	jmp    8bc7 <__cxa_atexit+0xd7>
    8bbd:	0f 1f 00             	nopl   (%rax)
    8bc0:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
    8bc5:	75 19                	jne    8be0 <__cxa_atexit+0xf0>
    8bc7:	be 08 00 00 00       	mov    $0x8,%esi
    8bcc:	48 89 df             	mov    %rbx,%rdi
    8bcf:	e8 1c d1 ff ff       	call   5cf0 <sgx_read_rand>
    8bd4:	85 c0                	test   %eax,%eax
    8bd6:	74 e8                	je     8bc0 <__cxa_atexit+0xd0>
    8bd8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8bdd:	eb b1                	jmp    8b90 <__cxa_atexit+0xa0>
    8bdf:	90                   	nop
    8be0:	48 8d 1d c9 15 01 00 	lea    0x115c9(%rip),%rbx        # 1a1b0 <g_exit_function_lock>
    8be7:	48 89 df             	mov    %rbx,%rdi
    8bea:	e8 11 3b 00 00       	call   c700 <sgx_spin_lock>
    8bef:	48 83 3d b1 15 01 00 	cmpq   $0x0,0x115b1(%rip)        # 1a1a8 <g_exit_function_cookie>
    8bf6:	00 
    8bf7:	75 0b                	jne    8c04 <__cxa_atexit+0x114>
    8bf9:	48 8b 04 24          	mov    (%rsp),%rax
    8bfd:	48 89 05 a4 15 01 00 	mov    %rax,0x115a4(%rip)        # 1a1a8 <g_exit_function_cookie>
    8c04:	48 89 df             	mov    %rbx,%rdi
    8c07:	e8 84 3b 00 00       	call   c790 <sgx_spin_unlock>
    8c0c:	e9 14 ff ff ff       	jmp    8b25 <__cxa_atexit+0x35>
    8c11:	e8 5a 7d 00 00       	call   10970 <__stack_chk_fail>
    8c16:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8c1d:	00 00 00 

0000000000008c20 <atexit>:
    8c20:	f3 0f 1e fa          	endbr64 
    8c24:	48 8b 15 25 f6 00 00 	mov    0xf625(%rip),%rdx        # 18250 <__dso_handle>
    8c2b:	31 f6                	xor    %esi,%esi
    8c2d:	e9 be fe ff ff       	jmp    8af0 <__cxa_atexit>
    8c32:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8c39:	00 00 00 
    8c3c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000008c40 <init_global_object>:
    8c40:	f3 0f 1e fa          	endbr64 
    8c44:	55                   	push   %rbp
    8c45:	53                   	push   %rbx
    8c46:	48 83 ec 28          	sub    $0x28,%rsp
    8c4a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    8c51:	00 00 
    8c53:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    8c58:	31 c0                	xor    %eax,%eax
    8c5a:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    8c61:	00 00 
    8c63:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    8c6a:	00 00 
    8c6c:	e8 87 92 00 00       	call   11ef8 <get_enclave_base>
    8c71:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    8c76:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
    8c7b:	48 89 c7             	mov    %rax,%rdi
    8c7e:	48 89 c3             	mov    %rax,%rbx
    8c81:	e8 aa f9 ff ff       	call   8630 <elf_get_init_array>
    8c86:	85 c0                	test   %eax,%eax
    8c88:	75 31                	jne    8cbb <init_global_object+0x7b>
    8c8a:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    8c8f:	48 85 c0             	test   %rax,%rax
    8c92:	74 27                	je     8cbb <init_global_object+0x7b>
    8c94:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
    8c99:	48 85 ed             	test   %rbp,%rbp
    8c9c:	74 1d                	je     8cbb <init_global_object+0x7b>
    8c9e:	48 01 c3             	add    %rax,%rbx
    8ca1:	48 83 e5 f8          	and    $0xfffffffffffffff8,%rbp
    8ca5:	48 01 dd             	add    %rbx,%rbp
    8ca8:	48 39 eb             	cmp    %rbp,%rbx
    8cab:	73 0e                	jae    8cbb <init_global_object+0x7b>
    8cad:	0f 1f 00             	nopl   (%rax)
    8cb0:	ff 13                	call   *(%rbx)
    8cb2:	48 83 c3 08          	add    $0x8,%rbx
    8cb6:	48 39 eb             	cmp    %rbp,%rbx
    8cb9:	72 f5                	jb     8cb0 <init_global_object+0x70>
    8cbb:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    8cc0:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    8cc7:	00 00 
    8cc9:	75 07                	jne    8cd2 <init_global_object+0x92>
    8ccb:	48 83 c4 28          	add    $0x28,%rsp
    8ccf:	5b                   	pop    %rbx
    8cd0:	5d                   	pop    %rbp
    8cd1:	c3                   	ret    
    8cd2:	e8 99 7c 00 00       	call   10970 <__stack_chk_fail>
    8cd7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    8cde:	00 00 

0000000000008ce0 <uninit_global_object>:
    8ce0:	f3 0f 1e fa          	endbr64 
    8ce4:	55                   	push   %rbp
    8ce5:	53                   	push   %rbx
    8ce6:	48 83 ec 28          	sub    $0x28,%rsp
    8cea:	48 8b 1d c7 14 01 00 	mov    0x114c7(%rip),%rbx        # 1a1b8 <g_exit_function>
    8cf1:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    8cf8:	00 00 
    8cfa:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    8cff:	31 c0                	xor    %eax,%eax
    8d01:	48 c7 05 ac 14 01 00 	movq   $0x0,0x114ac(%rip)        # 1a1b8 <g_exit_function>
    8d08:	00 00 00 00 
    8d0c:	48 85 db             	test   %rbx,%rbx
    8d0f:	74 2b                	je     8d3c <uninit_global_object+0x5c>
    8d11:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8d18:	48 8b 05 89 14 01 00 	mov    0x11489(%rip),%rax        # 1a1a8 <g_exit_function_cookie>
    8d1f:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    8d23:	48 31 c7             	xor    %rax,%rdi
    8d26:	48 33 03             	xor    (%rbx),%rax
    8d29:	ff d0                	call   *%rax
    8d2b:	48 89 df             	mov    %rbx,%rdi
    8d2e:	48 8b 5b 18          	mov    0x18(%rbx),%rbx
    8d32:	e8 79 61 00 00       	call   eeb0 <dlfree>
    8d37:	48 85 db             	test   %rbx,%rbx
    8d3a:	75 dc                	jne    8d18 <uninit_global_object+0x38>
    8d3c:	e8 b7 91 00 00       	call   11ef8 <get_enclave_base>
    8d41:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    8d46:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
    8d4b:	48 89 c7             	mov    %rax,%rdi
    8d4e:	48 89 c5             	mov    %rax,%rbp
    8d51:	e8 ca f9 ff ff       	call   8720 <elf_get_uninit_array>
    8d56:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    8d5b:	48 85 d2             	test   %rdx,%rdx
    8d5e:	74 2b                	je     8d8b <uninit_global_object+0xab>
    8d60:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    8d65:	48 85 c0             	test   %rax,%rax
    8d68:	74 21                	je     8d8b <uninit_global_object+0xab>
    8d6a:	48 01 d5             	add    %rdx,%rbp
    8d6d:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    8d71:	48 8d 5c 05 f8       	lea    -0x8(%rbp,%rax,1),%rbx
    8d76:	48 39 eb             	cmp    %rbp,%rbx
    8d79:	72 10                	jb     8d8b <uninit_global_object+0xab>
    8d7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8d80:	ff 13                	call   *(%rbx)
    8d82:	48 83 eb 08          	sub    $0x8,%rbx
    8d86:	48 39 eb             	cmp    %rbp,%rbx
    8d89:	73 f5                	jae    8d80 <uninit_global_object+0xa0>
    8d8b:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    8d90:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    8d97:	00 00 
    8d99:	75 07                	jne    8da2 <uninit_global_object+0xc2>
    8d9b:	48 83 c4 28          	add    $0x28,%rsp
    8d9f:	5b                   	pop    %rbx
    8da0:	5d                   	pop    %rbp
    8da1:	c3                   	ret    
    8da2:	e8 c9 7b 00 00       	call   10970 <__stack_chk_fail>
    8da7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    8dae:	00 00 

0000000000008db0 <__tls_get_addr>:
    8db0:	f3 0f 1e fa          	endbr64 
    8db4:	53                   	push   %rbx
    8db5:	48 89 fb             	mov    %rdi,%rbx
    8db8:	e8 86 91 00 00       	call   11f43 <get_thread_data>
    8dbd:	48 8b 40 68          	mov    0x68(%rax),%rax
    8dc1:	48 03 43 08          	add    0x8(%rbx),%rax
    8dc5:	5b                   	pop    %rbx
    8dc6:	c3                   	ret    
    8dc7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    8dce:	00 00 

0000000000008dd0 <bit_array_new>:
    8dd0:	f3 0f 1e fa          	endbr64 
    8dd4:	41 54                	push   %r12
    8dd6:	55                   	push   %rbp
    8dd7:	53                   	push   %rbx
    8dd8:	48 85 ff             	test   %rdi,%rdi
    8ddb:	74 63                	je     8e40 <bit_array_new+0x70>
    8ddd:	48 8d 47 07          	lea    0x7(%rdi),%rax
    8de1:	48 89 fb             	mov    %rdi,%rbx
    8de4:	48 89 c2             	mov    %rax,%rdx
    8de7:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    8deb:	48 39 fa             	cmp    %rdi,%rdx
    8dee:	72 50                	jb     8e40 <bit_array_new+0x70>
    8df0:	48 c1 e8 03          	shr    $0x3,%rax
    8df4:	bf 18 00 00 00       	mov    $0x18,%edi
    8df9:	49 89 c4             	mov    %rax,%r12
    8dfc:	e8 af 25 00 00       	call   b3b0 <emalloc>
    8e01:	48 89 c5             	mov    %rax,%rbp
    8e04:	48 85 c0             	test   %rax,%rax
    8e07:	74 37                	je     8e40 <bit_array_new+0x70>
    8e09:	4c 89 20             	mov    %r12,(%rax)
    8e0c:	4c 89 e7             	mov    %r12,%rdi
    8e0f:	48 89 58 08          	mov    %rbx,0x8(%rax)
    8e13:	e8 98 25 00 00       	call   b3b0 <emalloc>
    8e18:	48 89 45 10          	mov    %rax,0x10(%rbp)
    8e1c:	48 85 c0             	test   %rax,%rax
    8e1f:	74 0f                	je     8e30 <bit_array_new+0x60>
    8e21:	48 89 e8             	mov    %rbp,%rax
    8e24:	5b                   	pop    %rbx
    8e25:	5d                   	pop    %rbp
    8e26:	41 5c                	pop    %r12
    8e28:	c3                   	ret    
    8e29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8e30:	48 89 ef             	mov    %rbp,%rdi
    8e33:	e8 f8 27 00 00       	call   b630 <efree>
    8e38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    8e3f:	00 
    8e40:	31 ed                	xor    %ebp,%ebp
    8e42:	eb dd                	jmp    8e21 <bit_array_new+0x51>
    8e44:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8e4b:	00 00 00 
    8e4e:	66 90                	xchg   %ax,%ax

0000000000008e50 <bit_array_new_set>:
    8e50:	f3 0f 1e fa          	endbr64 
    8e54:	53                   	push   %rbx
    8e55:	e8 76 ff ff ff       	call   8dd0 <bit_array_new>
    8e5a:	48 89 c3             	mov    %rax,%rbx
    8e5d:	48 85 c0             	test   %rax,%rax
    8e60:	74 11                	je     8e73 <bit_array_new_set+0x23>
    8e62:	48 8b 10             	mov    (%rax),%rdx
    8e65:	48 8b 78 10          	mov    0x10(%rax),%rdi
    8e69:	be ff 00 00 00       	mov    $0xff,%esi
    8e6e:	e8 2d 7a 00 00       	call   108a0 <memset>
    8e73:	48 89 d8             	mov    %rbx,%rax
    8e76:	5b                   	pop    %rbx
    8e77:	c3                   	ret    
    8e78:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    8e7f:	00 

0000000000008e80 <bit_array_new_reset>:
    8e80:	f3 0f 1e fa          	endbr64 
    8e84:	53                   	push   %rbx
    8e85:	e8 46 ff ff ff       	call   8dd0 <bit_array_new>
    8e8a:	48 89 c3             	mov    %rax,%rbx
    8e8d:	48 85 c0             	test   %rax,%rax
    8e90:	74 0e                	je     8ea0 <bit_array_new_reset+0x20>
    8e92:	48 8b 10             	mov    (%rax),%rdx
    8e95:	48 8b 78 10          	mov    0x10(%rax),%rdi
    8e99:	31 f6                	xor    %esi,%esi
    8e9b:	e8 00 7a 00 00       	call   108a0 <memset>
    8ea0:	48 89 d8             	mov    %rbx,%rax
    8ea3:	5b                   	pop    %rbx
    8ea4:	c3                   	ret    
    8ea5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8eac:	00 00 00 
    8eaf:	90                   	nop

0000000000008eb0 <bit_array_delete>:
    8eb0:	f3 0f 1e fa          	endbr64 
    8eb4:	53                   	push   %rbx
    8eb5:	48 89 fb             	mov    %rdi,%rbx
    8eb8:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    8ebc:	e8 6f 27 00 00       	call   b630 <efree>
    8ec1:	48 89 df             	mov    %rbx,%rdi
    8ec4:	5b                   	pop    %rbx
    8ec5:	e9 66 27 00 00       	jmp    b630 <efree>
    8eca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000008ed0 <bit_array_test>:
    8ed0:	f3 0f 1e fa          	endbr64 
    8ed4:	48 89 f1             	mov    %rsi,%rcx
    8ed7:	48 89 f2             	mov    %rsi,%rdx
    8eda:	48 8b 77 10          	mov    0x10(%rdi),%rsi
    8ede:	b8 01 00 00 00       	mov    $0x1,%eax
    8ee3:	83 e1 07             	and    $0x7,%ecx
    8ee6:	48 c1 ea 03          	shr    $0x3,%rdx
    8eea:	d3 e0                	shl    %cl,%eax
    8eec:	84 04 16             	test   %al,(%rsi,%rdx,1)
    8eef:	0f 95 c0             	setne  %al
    8ef2:	c3                   	ret    
    8ef3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8efa:	00 00 00 
    8efd:	0f 1f 00             	nopl   (%rax)

0000000000008f00 <set_mask>:
    8f00:	f3 0f 1e fa          	endbr64 
    8f04:	89 f1                	mov    %esi,%ecx
    8f06:	b8 01 00 00 00       	mov    $0x1,%eax
    8f0b:	d3 e0                	shl    %cl,%eax
    8f0d:	89 f9                	mov    %edi,%ecx
    8f0f:	83 e8 01             	sub    $0x1,%eax
    8f12:	d3 e0                	shl    %cl,%eax
    8f14:	c3                   	ret    
    8f15:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8f1c:	00 00 00 
    8f1f:	90                   	nop

0000000000008f20 <bit_array_test_range>:
    8f20:	f3 0f 1e fa          	endbr64 
    8f24:	48 89 f0             	mov    %rsi,%rax
    8f27:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    8f2b:	83 e6 07             	and    $0x7,%esi
    8f2e:	b9 08 00 00 00       	mov    $0x8,%ecx
    8f33:	48 c1 e8 03          	shr    $0x3,%rax
    8f37:	48 29 f1             	sub    %rsi,%rcx
    8f3a:	44 0f b6 0c 07       	movzbl (%rdi,%rax,1),%r9d
    8f3f:	48 39 d1             	cmp    %rdx,%rcx
    8f42:	72 24                	jb     8f68 <bit_array_test_range+0x48>
    8f44:	89 d1                	mov    %edx,%ecx
    8f46:	b8 01 00 00 00       	mov    $0x1,%eax
    8f4b:	41 f7 d1             	not    %r9d
    8f4e:	d3 e0                	shl    %cl,%eax
    8f50:	89 f1                	mov    %esi,%ecx
    8f52:	83 e8 01             	sub    $0x1,%eax
    8f55:	d3 e0                	shl    %cl,%eax
    8f57:	41 84 c1             	test   %al,%r9b
    8f5a:	41 0f 94 c2          	sete   %r10b
    8f5e:	44 89 d0             	mov    %r10d,%eax
    8f61:	c3                   	ret    
    8f62:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8f68:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    8f6e:	41 f7 d1             	not    %r9d
    8f71:	45 31 d2             	xor    %r10d,%r10d
    8f74:	41 d3 e0             	shl    %cl,%r8d
    8f77:	89 f1                	mov    %esi,%ecx
    8f79:	41 83 e8 01          	sub    $0x1,%r8d
    8f7d:	41 d3 e0             	shl    %cl,%r8d
    8f80:	45 84 c1             	test   %r8b,%r9b
    8f83:	75 d9                	jne    8f5e <bit_array_test_range+0x3e>
    8f85:	48 8d 4c 16 f8       	lea    -0x8(%rsi,%rdx,1),%rcx
    8f8a:	48 83 f9 07          	cmp    $0x7,%rcx
    8f8e:	77 12                	ja     8fa2 <bit_array_test_range+0x82>
    8f90:	eb 26                	jmp    8fb8 <bit_array_test_range+0x98>
    8f92:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8f98:	48 83 e9 08          	sub    $0x8,%rcx
    8f9c:	48 83 f9 07          	cmp    $0x7,%rcx
    8fa0:	76 16                	jbe    8fb8 <bit_array_test_range+0x98>
    8fa2:	48 83 c0 01          	add    $0x1,%rax
    8fa6:	80 3c 07 ff          	cmpb   $0xff,(%rdi,%rax,1)
    8faa:	74 ec                	je     8f98 <bit_array_test_range+0x78>
    8fac:	45 31 d2             	xor    %r10d,%r10d
    8faf:	44 89 d0             	mov    %r10d,%eax
    8fb2:	c3                   	ret    
    8fb3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8fb8:	41 ba 01 00 00 00    	mov    $0x1,%r10d
    8fbe:	48 85 c9             	test   %rcx,%rcx
    8fc1:	74 9b                	je     8f5e <bit_array_test_range+0x3e>
    8fc3:	ba 01 00 00 00       	mov    $0x1,%edx
    8fc8:	0f b6 74 07 01       	movzbl 0x1(%rdi,%rax,1),%esi
    8fcd:	d3 e2                	shl    %cl,%edx
    8fcf:	83 ea 01             	sub    $0x1,%edx
    8fd2:	21 d6                	and    %edx,%esi
    8fd4:	40 38 d6             	cmp    %dl,%sil
    8fd7:	41 0f 94 c2          	sete   %r10b
    8fdb:	eb 81                	jmp    8f5e <bit_array_test_range+0x3e>
    8fdd:	0f 1f 00             	nopl   (%rax)

0000000000008fe0 <bit_array_test_range_any>:
    8fe0:	f3 0f 1e fa          	endbr64 
    8fe4:	49 89 f8             	mov    %rdi,%r8
    8fe7:	48 89 f0             	mov    %rsi,%rax
    8fea:	48 89 d7             	mov    %rdx,%rdi
    8fed:	83 e6 07             	and    $0x7,%esi
    8ff0:	49 8b 50 10          	mov    0x10(%r8),%rdx
    8ff4:	b9 08 00 00 00       	mov    $0x8,%ecx
    8ff9:	48 c1 e8 03          	shr    $0x3,%rax
    8ffd:	48 29 f1             	sub    %rsi,%rcx
    9000:	44 0f b6 0c 02       	movzbl (%rdx,%rax,1),%r9d
    9005:	48 39 f9             	cmp    %rdi,%rcx
    9008:	72 1e                	jb     9028 <bit_array_test_range_any+0x48>
    900a:	89 f9                	mov    %edi,%ecx
    900c:	b8 01 00 00 00       	mov    $0x1,%eax
    9011:	d3 e0                	shl    %cl,%eax
    9013:	89 f1                	mov    %esi,%ecx
    9015:	83 e8 01             	sub    $0x1,%eax
    9018:	d3 e0                	shl    %cl,%eax
    901a:	41 84 c1             	test   %al,%r9b
    901d:	41 0f 95 c2          	setne  %r10b
    9021:	44 89 d0             	mov    %r10d,%eax
    9024:	c3                   	ret    
    9025:	0f 1f 00             	nopl   (%rax)
    9028:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    902e:	41 ba 01 00 00 00    	mov    $0x1,%r10d
    9034:	41 d3 e0             	shl    %cl,%r8d
    9037:	89 f1                	mov    %esi,%ecx
    9039:	41 83 e8 01          	sub    $0x1,%r8d
    903d:	41 d3 e0             	shl    %cl,%r8d
    9040:	45 84 c1             	test   %r8b,%r9b
    9043:	75 dc                	jne    9021 <bit_array_test_range_any+0x41>
    9045:	48 8d 4c 3e f8       	lea    -0x8(%rsi,%rdi,1),%rcx
    904a:	48 83 f9 07          	cmp    $0x7,%rcx
    904e:	77 12                	ja     9062 <bit_array_test_range_any+0x82>
    9050:	eb 2e                	jmp    9080 <bit_array_test_range_any+0xa0>
    9052:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9058:	48 83 e9 08          	sub    $0x8,%rcx
    905c:	48 83 f9 07          	cmp    $0x7,%rcx
    9060:	76 1e                	jbe    9080 <bit_array_test_range_any+0xa0>
    9062:	48 83 c0 01          	add    $0x1,%rax
    9066:	80 3c 02 00          	cmpb   $0x0,(%rdx,%rax,1)
    906a:	74 ec                	je     9058 <bit_array_test_range_any+0x78>
    906c:	41 ba 01 00 00 00    	mov    $0x1,%r10d
    9072:	44 89 d0             	mov    %r10d,%eax
    9075:	c3                   	ret    
    9076:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    907d:	00 00 00 
    9080:	45 31 d2             	xor    %r10d,%r10d
    9083:	48 85 c9             	test   %rcx,%rcx
    9086:	74 99                	je     9021 <bit_array_test_range_any+0x41>
    9088:	be 01 00 00 00       	mov    $0x1,%esi
    908d:	d3 e6                	shl    %cl,%esi
    908f:	83 ee 01             	sub    $0x1,%esi
    9092:	40 84 74 02 01       	test   %sil,0x1(%rdx,%rax,1)
    9097:	41 0f 95 c2          	setne  %r10b
    909b:	eb 84                	jmp    9021 <bit_array_test_range_any+0x41>
    909d:	0f 1f 00             	nopl   (%rax)

00000000000090a0 <bit_array_set>:
    90a0:	f3 0f 1e fa          	endbr64 
    90a4:	48 89 f1             	mov    %rsi,%rcx
    90a7:	48 89 f0             	mov    %rsi,%rax
    90aa:	ba 01 00 00 00       	mov    $0x1,%edx
    90af:	48 c1 e8 03          	shr    $0x3,%rax
    90b3:	83 e1 07             	and    $0x7,%ecx
    90b6:	48 03 47 10          	add    0x10(%rdi),%rax
    90ba:	d3 e2                	shl    %cl,%edx
    90bc:	08 10                	or     %dl,(%rax)
    90be:	c3                   	ret    
    90bf:	90                   	nop

00000000000090c0 <bit_array_set_range>:
    90c0:	f3 0f 1e fa          	endbr64 
    90c4:	48 89 f0             	mov    %rsi,%rax
    90c7:	4c 8b 4f 10          	mov    0x10(%rdi),%r9
    90cb:	83 e6 07             	and    $0x7,%esi
    90ce:	b9 08 00 00 00       	mov    $0x8,%ecx
    90d3:	48 c1 e8 03          	shr    $0x3,%rax
    90d7:	48 29 f1             	sub    %rsi,%rcx
    90da:	49 89 d0             	mov    %rdx,%r8
    90dd:	49 01 c1             	add    %rax,%r9
    90e0:	45 0f b6 11          	movzbl (%r9),%r10d
    90e4:	48 39 d1             	cmp    %rdx,%rcx
    90e7:	73 67                	jae    9150 <bit_array_set_range+0x90>
    90e9:	ba 01 00 00 00       	mov    $0x1,%edx
    90ee:	d3 e2                	shl    %cl,%edx
    90f0:	89 f1                	mov    %esi,%ecx
    90f2:	83 ea 01             	sub    $0x1,%edx
    90f5:	d3 e2                	shl    %cl,%edx
    90f7:	4a 8d 4c 06 f8       	lea    -0x8(%rsi,%r8,1),%rcx
    90fc:	41 09 d2             	or     %edx,%r10d
    90ff:	45 88 11             	mov    %r10b,(%r9)
    9102:	48 83 f9 07          	cmp    $0x7,%rcx
    9106:	76 68                	jbe    9170 <bit_array_set_range+0xb0>
    9108:	48 8d 51 f8          	lea    -0x8(%rcx),%rdx
    910c:	48 83 c0 01          	add    $0x1,%rax
    9110:	48 c1 ea 03          	shr    $0x3,%rdx
    9114:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
    9118:	eb 0a                	jmp    9124 <bit_array_set_range+0x64>
    911a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9120:	48 83 c0 01          	add    $0x1,%rax
    9124:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    9128:	c6 04 02 ff          	movb   $0xff,(%rdx,%rax,1)
    912c:	48 39 f0             	cmp    %rsi,%rax
    912f:	75 ef                	jne    9120 <bit_array_set_range+0x60>
    9131:	83 e1 07             	and    $0x7,%ecx
    9134:	48 85 c9             	test   %rcx,%rcx
    9137:	74 12                	je     914b <bit_array_set_range+0x8b>
    9139:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    913d:	b8 01 00 00 00       	mov    $0x1,%eax
    9142:	d3 e0                	shl    %cl,%eax
    9144:	83 e8 01             	sub    $0x1,%eax
    9147:	08 44 32 01          	or     %al,0x1(%rdx,%rsi,1)
    914b:	c3                   	ret    
    914c:	0f 1f 40 00          	nopl   0x0(%rax)
    9150:	89 d1                	mov    %edx,%ecx
    9152:	b8 01 00 00 00       	mov    $0x1,%eax
    9157:	d3 e0                	shl    %cl,%eax
    9159:	89 f1                	mov    %esi,%ecx
    915b:	83 e8 01             	sub    $0x1,%eax
    915e:	d3 e0                	shl    %cl,%eax
    9160:	44 09 d0             	or     %r10d,%eax
    9163:	41 88 01             	mov    %al,(%r9)
    9166:	c3                   	ret    
    9167:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    916e:	00 00 
    9170:	48 89 c6             	mov    %rax,%rsi
    9173:	eb bf                	jmp    9134 <bit_array_set_range+0x74>
    9175:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    917c:	00 00 00 
    917f:	90                   	nop

0000000000009180 <bit_array_set_all>:
    9180:	f3 0f 1e fa          	endbr64 
    9184:	48 8b 17             	mov    (%rdi),%rdx
    9187:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    918b:	be ff 00 00 00       	mov    $0xff,%esi
    9190:	e9 0b 77 00 00       	jmp    108a0 <memset>
    9195:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    919c:	00 00 00 
    919f:	90                   	nop

00000000000091a0 <clear_mask>:
    91a0:	f3 0f 1e fa          	endbr64 
    91a4:	89 f1                	mov    %esi,%ecx
    91a6:	b8 01 00 00 00       	mov    $0x1,%eax
    91ab:	d3 e0                	shl    %cl,%eax
    91ad:	89 f9                	mov    %edi,%ecx
    91af:	83 e8 01             	sub    $0x1,%eax
    91b2:	d3 e0                	shl    %cl,%eax
    91b4:	f7 d0                	not    %eax
    91b6:	c3                   	ret    
    91b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    91be:	00 00 

00000000000091c0 <bit_array_reset_range>:
    91c0:	f3 0f 1e fa          	endbr64 
    91c4:	48 89 f0             	mov    %rsi,%rax
    91c7:	4c 8b 4f 10          	mov    0x10(%rdi),%r9
    91cb:	83 e6 07             	and    $0x7,%esi
    91ce:	b9 08 00 00 00       	mov    $0x8,%ecx
    91d3:	48 c1 e8 03          	shr    $0x3,%rax
    91d7:	48 29 f1             	sub    %rsi,%rcx
    91da:	49 89 d0             	mov    %rdx,%r8
    91dd:	49 01 c1             	add    %rax,%r9
    91e0:	45 0f b6 11          	movzbl (%r9),%r10d
    91e4:	48 39 d1             	cmp    %rdx,%rcx
    91e7:	73 67                	jae    9250 <bit_array_reset_range+0x90>
    91e9:	ba 01 00 00 00       	mov    $0x1,%edx
    91ee:	d3 e2                	shl    %cl,%edx
    91f0:	89 f1                	mov    %esi,%ecx
    91f2:	83 ea 01             	sub    $0x1,%edx
    91f5:	d3 e2                	shl    %cl,%edx
    91f7:	4a 8d 4c 06 f8       	lea    -0x8(%rsi,%r8,1),%rcx
    91fc:	f7 d2                	not    %edx
    91fe:	44 21 d2             	and    %r10d,%edx
    9201:	41 88 11             	mov    %dl,(%r9)
    9204:	48 83 f9 07          	cmp    $0x7,%rcx
    9208:	76 66                	jbe    9270 <bit_array_reset_range+0xb0>
    920a:	48 8d 51 f8          	lea    -0x8(%rcx),%rdx
    920e:	48 83 c0 01          	add    $0x1,%rax
    9212:	48 c1 ea 03          	shr    $0x3,%rdx
    9216:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
    921a:	eb 08                	jmp    9224 <bit_array_reset_range+0x64>
    921c:	0f 1f 40 00          	nopl   0x0(%rax)
    9220:	48 83 c0 01          	add    $0x1,%rax
    9224:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    9228:	c6 04 02 00          	movb   $0x0,(%rdx,%rax,1)
    922c:	48 39 f0             	cmp    %rsi,%rax
    922f:	75 ef                	jne    9220 <bit_array_reset_range+0x60>
    9231:	83 e1 07             	and    $0x7,%ecx
    9234:	48 85 c9             	test   %rcx,%rcx
    9237:	74 0f                	je     9248 <bit_array_reset_range+0x88>
    9239:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    923d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    9242:	d3 e0                	shl    %cl,%eax
    9244:	20 44 32 01          	and    %al,0x1(%rdx,%rsi,1)
    9248:	c3                   	ret    
    9249:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9250:	89 d1                	mov    %edx,%ecx
    9252:	b8 01 00 00 00       	mov    $0x1,%eax
    9257:	d3 e0                	shl    %cl,%eax
    9259:	89 f1                	mov    %esi,%ecx
    925b:	83 e8 01             	sub    $0x1,%eax
    925e:	d3 e0                	shl    %cl,%eax
    9260:	f7 d0                	not    %eax
    9262:	44 21 d0             	and    %r10d,%eax
    9265:	41 88 01             	mov    %al,(%r9)
    9268:	c3                   	ret    
    9269:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9270:	48 89 c6             	mov    %rax,%rsi
    9273:	eb bf                	jmp    9234 <bit_array_reset_range+0x74>
    9275:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    927c:	00 00 00 
    927f:	90                   	nop

0000000000009280 <bit_array_reset_all>:
    9280:	f3 0f 1e fa          	endbr64 
    9284:	48 8b 17             	mov    (%rdi),%rdx
    9287:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    928b:	31 f6                	xor    %esi,%esi
    928d:	e9 0e 76 00 00       	jmp    108a0 <memset>
    9292:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    9299:	00 00 00 
    929c:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000092a0 <bit_array_reattach>:
    92a0:	f3 0f 1e fa          	endbr64 
    92a4:	41 54                	push   %r12
    92a6:	49 89 d4             	mov    %rdx,%r12
    92a9:	55                   	push   %rbp
    92aa:	48 89 f5             	mov    %rsi,%rbp
    92ad:	53                   	push   %rbx
    92ae:	48 89 fb             	mov    %rdi,%rbx
    92b1:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    92b5:	48 85 ff             	test   %rdi,%rdi
    92b8:	74 05                	je     92bf <bit_array_reattach+0x1f>
    92ba:	e8 71 23 00 00       	call   b630 <efree>
    92bf:	48 8d 45 07          	lea    0x7(%rbp),%rax
    92c3:	48 89 6b 08          	mov    %rbp,0x8(%rbx)
    92c7:	48 c1 e8 03          	shr    $0x3,%rax
    92cb:	4c 89 63 10          	mov    %r12,0x10(%rbx)
    92cf:	48 89 03             	mov    %rax,(%rbx)
    92d2:	5b                   	pop    %rbx
    92d3:	5d                   	pop    %rbp
    92d4:	41 5c                	pop    %r12
    92d6:	c3                   	ret    
    92d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    92de:	00 00 

00000000000092e0 <bit_array_split>:
    92e0:	f3 0f 1e fa          	endbr64 
    92e4:	41 57                	push   %r15
    92e6:	41 56                	push   %r14
    92e8:	41 55                	push   %r13
    92ea:	41 54                	push   %r12
    92ec:	55                   	push   %rbp
    92ed:	53                   	push   %rbx
    92ee:	48 89 fb             	mov    %rdi,%rbx
    92f1:	48 83 ec 38          	sub    $0x38,%rsp
    92f5:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    92fa:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    92ff:	48 85 f6             	test   %rsi,%rsi
    9302:	0f 84 88 01 00 00    	je     9490 <bit_array_split+0x1b0>
    9308:	4c 8b 77 08          	mov    0x8(%rdi),%r14
    930c:	45 31 e4             	xor    %r12d,%r12d
    930f:	4c 39 f6             	cmp    %r14,%rsi
    9312:	72 24                	jb     9338 <bit_array_split+0x58>
    9314:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    9319:	48 89 18             	mov    %rbx,(%rax)
    931c:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    9321:	4c 89 20             	mov    %r12,(%rax)
    9324:	31 c0                	xor    %eax,%eax
    9326:	48 83 c4 38          	add    $0x38,%rsp
    932a:	5b                   	pop    %rbx
    932b:	5d                   	pop    %rbp
    932c:	41 5c                	pop    %r12
    932e:	41 5d                	pop    %r13
    9330:	41 5e                	pop    %r14
    9332:	41 5f                	pop    %r15
    9334:	c3                   	ret    
    9335:	0f 1f 00             	nopl   (%rax)
    9338:	48 8d 46 07          	lea    0x7(%rsi),%rax
    933c:	48 89 f5             	mov    %rsi,%rbp
    933f:	41 89 f7             	mov    %esi,%r15d
    9342:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
    9347:	48 c1 e8 03          	shr    $0x3,%rax
    934b:	49 29 f6             	sub    %rsi,%r14
    934e:	48 c1 ed 03          	shr    $0x3,%rbp
    9352:	41 83 e7 07          	and    $0x7,%r15d
    9356:	48 89 c7             	mov    %rax,%rdi
    9359:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    935e:	e8 4d 20 00 00       	call   b3b0 <emalloc>
    9363:	49 89 c5             	mov    %rax,%r13
    9366:	48 85 c0             	test   %rax,%rax
    9369:	0f 84 98 01 00 00    	je     9507 <bit_array_split+0x227>
    936f:	48 85 ed             	test   %rbp,%rbp
    9372:	0f 84 80 01 00 00    	je     94f8 <bit_array_split+0x218>
    9378:	31 c0                	xor    %eax,%eax
    937a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9380:	48 8b 53 10          	mov    0x10(%rbx),%rdx
    9384:	0f b6 14 02          	movzbl (%rdx,%rax,1),%edx
    9388:	41 88 54 05 00       	mov    %dl,0x0(%r13,%rax,1)
    938d:	48 83 c0 01          	add    $0x1,%rax
    9391:	48 39 c5             	cmp    %rax,%rbp
    9394:	75 ea                	jne    9380 <bit_array_split+0xa0>
    9396:	48 89 ea             	mov    %rbp,%rdx
    9399:	45 84 ff             	test   %r15b,%r15b
    939c:	0f 85 fe 00 00 00    	jne    94a0 <bit_array_split+0x1c0>
    93a2:	4c 89 f7             	mov    %r14,%rdi
    93a5:	e8 26 fa ff ff       	call   8dd0 <bit_array_new>
    93aa:	49 89 c4             	mov    %rax,%r12
    93ad:	48 85 c0             	test   %rax,%rax
    93b0:	0f 84 49 01 00 00    	je     94ff <bit_array_split+0x21f>
    93b6:	49 89 ea             	mov    %rbp,%r10
    93b9:	31 d2                	xor    %edx,%edx
    93bb:	49 83 fe 07          	cmp    $0x7,%r14
    93bf:	76 78                	jbe    9439 <bit_array_split+0x159>
    93c1:	49 8d 46 f8          	lea    -0x8(%r14),%rax
    93c5:	45 0f b6 df          	movzbl %r15b,%r11d
    93c9:	41 b9 08 00 00 00    	mov    $0x8,%r9d
    93cf:	31 ff                	xor    %edi,%edi
    93d1:	48 c1 e8 03          	shr    $0x3,%rax
    93d5:	48 8d 55 01          	lea    0x1(%rbp),%rdx
    93d9:	44 88 7c 24 2f       	mov    %r15b,0x2f(%rsp)
    93de:	45 29 d9             	sub    %r11d,%r9d
    93e1:	48 89 c6             	mov    %rax,%rsi
    93e4:	4c 8d 14 02          	lea    (%rdx,%rax,1),%r10
    93e8:	eb 0a                	jmp    93f4 <bit_array_split+0x114>
    93ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    93f0:	48 83 c2 01          	add    $0x1,%rdx
    93f4:	4c 8b 43 10          	mov    0x10(%rbx),%r8
    93f8:	48 89 e8             	mov    %rbp,%rax
    93fb:	44 89 d9             	mov    %r11d,%ecx
    93fe:	49 89 ff             	mov    %rdi,%r15
    9401:	48 89 d5             	mov    %rdx,%rbp
    9404:	48 83 c7 01          	add    $0x1,%rdi
    9408:	41 0f b6 04 00       	movzbl (%r8,%rax,1),%eax
    940d:	45 0f b6 04 10       	movzbl (%r8,%rdx,1),%r8d
    9412:	d3 f8                	sar    %cl,%eax
    9414:	44 89 c9             	mov    %r9d,%ecx
    9417:	41 d3 e0             	shl    %cl,%r8d
    941a:	49 8b 4c 24 10       	mov    0x10(%r12),%rcx
    941f:	44 09 c0             	or     %r8d,%eax
    9422:	42 88 04 39          	mov    %al,(%rcx,%r15,1)
    9426:	4c 39 d2             	cmp    %r10,%rdx
    9429:	75 c5                	jne    93f0 <bit_array_split+0x110>
    942b:	44 0f b6 7c 24 2f    	movzbl 0x2f(%rsp),%r15d
    9431:	48 8d 56 01          	lea    0x1(%rsi),%rdx
    9435:	41 83 e6 07          	and    $0x7,%r14d
    9439:	b8 08 00 00 00       	mov    $0x8,%eax
    943e:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    9442:	44 29 f8             	sub    %r15d,%eax
    9445:	48 0f be c0          	movsbq %al,%rax
    9449:	4c 39 f0             	cmp    %r14,%rax
    944c:	72 72                	jb     94c0 <bit_array_split+0x1e0>
    944e:	4d 85 f6             	test   %r14,%r14
    9451:	74 16                	je     9469 <bit_array_split+0x189>
    9453:	42 0f b6 04 17       	movzbl (%rdi,%r10,1),%eax
    9458:	49 8b 74 24 10       	mov    0x10(%r12),%rsi
    945d:	44 89 f9             	mov    %r15d,%ecx
    9460:	d3 f8                	sar    %cl,%eax
    9462:	88 04 16             	mov    %al,(%rsi,%rdx,1)
    9465:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    9469:	48 85 ff             	test   %rdi,%rdi
    946c:	74 05                	je     9473 <bit_array_split+0x193>
    946e:	e8 bd 21 00 00       	call   b630 <efree>
    9473:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    9478:	4c 89 6b 10          	mov    %r13,0x10(%rbx)
    947c:	48 89 03             	mov    %rax,(%rbx)
    947f:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    9484:	48 89 43 08          	mov    %rax,0x8(%rbx)
    9488:	e9 87 fe ff ff       	jmp    9314 <bit_array_split+0x34>
    948d:	0f 1f 00             	nopl   (%rax)
    9490:	49 89 fc             	mov    %rdi,%r12
    9493:	31 db                	xor    %ebx,%ebx
    9495:	e9 7a fe ff ff       	jmp    9314 <bit_array_split+0x34>
    949a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    94a0:	48 8b 73 10          	mov    0x10(%rbx),%rsi
    94a4:	b8 01 00 00 00       	mov    $0x1,%eax
    94a9:	44 89 f9             	mov    %r15d,%ecx
    94ac:	d3 e0                	shl    %cl,%eax
    94ae:	83 e8 01             	sub    $0x1,%eax
    94b1:	22 04 16             	and    (%rsi,%rdx,1),%al
    94b4:	41 88 44 15 00       	mov    %al,0x0(%r13,%rdx,1)
    94b9:	e9 e4 fe ff ff       	jmp    93a2 <bit_array_split+0xc2>
    94be:	66 90                	xchg   %ax,%ax
    94c0:	42 0f b6 44 17 01    	movzbl 0x1(%rdi,%r10,1),%eax
    94c6:	45 0f b6 c7          	movzbl %r15b,%r8d
    94ca:	b9 08 00 00 00       	mov    $0x8,%ecx
    94cf:	42 0f b6 3c 17       	movzbl (%rdi,%r10,1),%edi
    94d4:	44 29 c1             	sub    %r8d,%ecx
    94d7:	49 8b 74 24 10       	mov    0x10(%r12),%rsi
    94dc:	d3 e0                	shl    %cl,%eax
    94de:	44 89 f9             	mov    %r15d,%ecx
    94e1:	d3 ff                	sar    %cl,%edi
    94e3:	09 f8                	or     %edi,%eax
    94e5:	88 04 16             	mov    %al,(%rsi,%rdx,1)
    94e8:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    94ec:	e9 78 ff ff ff       	jmp    9469 <bit_array_split+0x189>
    94f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    94f8:	31 d2                	xor    %edx,%edx
    94fa:	e9 9a fe ff ff       	jmp    9399 <bit_array_split+0xb9>
    94ff:	4c 89 ef             	mov    %r13,%rdi
    9502:	e8 29 21 00 00       	call   b630 <efree>
    9507:	b8 0c 00 00 00       	mov    $0xc,%eax
    950c:	e9 15 fe ff ff       	jmp    9326 <bit_array_split+0x46>
    9511:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    9518:	00 00 00 
    951b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000009520 <ema_do_uncommit_real>:
    9520:	55                   	push   %rbp
    9521:	48 89 e5             	mov    %rsp,%rbp
    9524:	41 57                	push   %r15
    9526:	41 56                	push   %r14
    9528:	41 55                	push   %r13
    952a:	41 54                	push   %r12
    952c:	53                   	push   %rbx
    952d:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    9531:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
    9538:	89 4c 24 28          	mov    %ecx,0x28(%rsp)
    953c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    9543:	00 00 
    9545:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
    954c:	00 
    954d:	48 8b 47 18          	mov    0x18(%rdi),%rax
    9551:	f6 47 10 01          	testb  $0x1,0x10(%rdi)
    9555:	0f 85 68 01 00 00    	jne    96c3 <ema_do_uncommit_real+0x1a3>
    955b:	25 00 ff 00 00       	and    $0xff00,%eax
    9560:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9564:	48 89 fb             	mov    %rdi,%rbx
    9567:	49 89 f7             	mov    %rsi,%r15
    956a:	89 44 24 24          	mov    %eax,0x24(%rsp)
    956e:	8b 44 24 28          	mov    0x28(%rsp),%eax
    9572:	49 89 d4             	mov    %rdx,%r12
    9575:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
    957c:	00 00 
    957e:	80 cc 04             	or     $0x4,%ah
    9581:	0f 11 44 24 48       	movups %xmm0,0x48(%rsp)
    9586:	48 c7 44 24 40 10 04 	movq   $0x410,0x40(%rsp)
    958d:	00 00 
    958f:	89 44 24 2c          	mov    %eax,0x2c(%rsp)
    9593:	0f 11 44 24 58       	movups %xmm0,0x58(%rsp)
    9598:	0f 11 44 24 68       	movups %xmm0,0x68(%rsp)
    959d:	0f 1f 00             	nopl   (%rax)
    95a0:	4d 39 e7             	cmp    %r12,%r15
    95a3:	72 17                	jb     95bc <ema_do_uncommit_real+0x9c>
    95a5:	e9 19 01 00 00       	jmp    96c3 <ema_do_uncommit_real+0x1a3>
    95aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    95b0:	49 81 c7 00 10 00 00 	add    $0x1000,%r15
    95b7:	4d 39 e7             	cmp    %r12,%r15
    95ba:	73 17                	jae    95d3 <ema_do_uncommit_real+0xb3>
    95bc:	4c 89 fe             	mov    %r15,%rsi
    95bf:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    95c3:	48 2b 33             	sub    (%rbx),%rsi
    95c6:	48 c1 ee 0c          	shr    $0xc,%rsi
    95ca:	e8 01 f9 ff ff       	call   8ed0 <bit_array_test>
    95cf:	84 c0                	test   %al,%al
    95d1:	74 dd                	je     95b0 <ema_do_uncommit_real+0x90>
    95d3:	4c 89 7c 24 38       	mov    %r15,0x38(%rsp)
    95d8:	4d 39 fc             	cmp    %r15,%r12
    95db:	0f 84 e2 00 00 00    	je     96c3 <ema_do_uncommit_real+0x1a3>
    95e1:	49 81 c7 00 10 00 00 	add    $0x1000,%r15
    95e8:	4d 39 e7             	cmp    %r12,%r15
    95eb:	72 17                	jb     9604 <ema_do_uncommit_real+0xe4>
    95ed:	e9 f5 00 00 00       	jmp    96e7 <ema_do_uncommit_real+0x1c7>
    95f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    95f8:	49 81 c7 00 10 00 00 	add    $0x1000,%r15
    95ff:	4d 39 e7             	cmp    %r12,%r15
    9602:	73 17                	jae    961b <ema_do_uncommit_real+0xfb>
    9604:	4c 89 fe             	mov    %r15,%rsi
    9607:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    960b:	48 2b 33             	sub    (%rbx),%rsi
    960e:	48 c1 ee 0c          	shr    $0xc,%rsi
    9612:	e8 b9 f8 ff ff       	call   8ed0 <bit_array_test>
    9617:	84 c0                	test   %al,%al
    9619:	75 dd                	jne    95f8 <ema_do_uncommit_real+0xd8>
    961b:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
    9620:	4c 89 f8             	mov    %r15,%rax
    9623:	48 29 c8             	sub    %rcx,%rax
    9626:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    962b:	8b 54 24 24          	mov    0x24(%rsp),%edx
    962f:	8b 44 24 28          	mov    0x28(%rsp),%eax
    9633:	8b 4c 24 2c          	mov    0x2c(%rsp),%ecx
    9637:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
    963c:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
    9641:	09 c2                	or     %eax,%edx
    9643:	e8 d8 c1 ff ff       	call   5820 <sgx_mm_modify_ocall>
    9648:	85 c0                	test   %eax,%eax
    964a:	75 70                	jne    96bc <ema_do_uncommit_real+0x19c>
    964c:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    9651:	4c 8d 6c 24 40       	lea    0x40(%rsp),%r13
    9656:	49 89 c6             	mov    %rax,%r14
    9659:	4c 39 f8             	cmp    %r15,%rax
    965c:	73 21                	jae    967f <ema_do_uncommit_real+0x15f>
    965e:	66 90                	xchg   %ax,%ax
    9660:	4c 89 f6             	mov    %r14,%rsi
    9663:	4c 89 ef             	mov    %r13,%rdi
    9666:	e8 54 8c 00 00       	call   122bf <do_eaccept>
    966b:	85 c0                	test   %eax,%eax
    966d:	0f 85 82 00 00 00    	jne    96f5 <ema_do_uncommit_real+0x1d5>
    9673:	49 81 c6 00 10 00 00 	add    $0x1000,%r14
    967a:	4d 39 fe             	cmp    %r15,%r14
    967d:	72 e1                	jb     9660 <ema_do_uncommit_real+0x140>
    967f:	4c 8b 74 24 30       	mov    0x30(%rsp),%r14
    9684:	4c 8b 6c 24 38       	mov    0x38(%rsp),%r13
    9689:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    968d:	4c 89 f2             	mov    %r14,%rdx
    9690:	4c 89 ee             	mov    %r13,%rsi
    9693:	48 2b 33             	sub    (%rbx),%rsi
    9696:	48 c1 ea 0c          	shr    $0xc,%rdx
    969a:	48 c1 ee 0c          	shr    $0xc,%rsi
    969e:	e8 1d fb ff ff       	call   91c0 <bit_array_reset_range>
    96a3:	8b 4c 24 2c          	mov    0x2c(%rsp),%ecx
    96a7:	4c 89 f6             	mov    %r14,%rsi
    96aa:	4c 89 ef             	mov    %r13,%rdi
    96ad:	89 ca                	mov    %ecx,%edx
    96af:	e8 6c c1 ff ff       	call   5820 <sgx_mm_modify_ocall>
    96b4:	85 c0                	test   %eax,%eax
    96b6:	0f 84 e4 fe ff ff    	je     95a0 <ema_do_uncommit_real+0x80>
    96bc:	b8 0e 00 00 00       	mov    $0xe,%eax
    96c1:	eb 02                	jmp    96c5 <ema_do_uncommit_real+0x1a5>
    96c3:	31 c0                	xor    %eax,%eax
    96c5:	48 8b 94 24 b8 00 00 	mov    0xb8(%rsp),%rdx
    96cc:	00 
    96cd:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    96d4:	00 00 
    96d6:	75 22                	jne    96fa <ema_do_uncommit_real+0x1da>
    96d8:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    96dc:	5b                   	pop    %rbx
    96dd:	41 5c                	pop    %r12
    96df:	41 5d                	pop    %r13
    96e1:	41 5e                	pop    %r14
    96e3:	41 5f                	pop    %r15
    96e5:	5d                   	pop    %rbp
    96e6:	c3                   	ret    
    96e7:	48 c7 44 24 30 00 10 	movq   $0x1000,0x30(%rsp)
    96ee:	00 00 
    96f0:	e9 36 ff ff ff       	jmp    962b <ema_do_uncommit_real+0x10b>
    96f5:	e8 3d 8c 00 00       	call   12337 <abort>
    96fa:	e8 71 72 00 00       	call   10970 <__stack_chk_fail>
    96ff:	90                   	nop

0000000000009700 <get_ema_alloc_flags>:
    9700:	f3 0f 1e fa          	endbr64 
    9704:	8b 47 10             	mov    0x10(%rdi),%eax
    9707:	c3                   	ret    
    9708:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    970f:	00 

0000000000009710 <get_ema_si_flags>:
    9710:	f3 0f 1e fa          	endbr64 
    9714:	48 8b 47 18          	mov    0x18(%rdi),%rax
    9718:	c3                   	ret    
    9719:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000009720 <ema_fault_handler>:
    9720:	f3 0f 1e fa          	endbr64 
    9724:	48 85 f6             	test   %rsi,%rsi
    9727:	74 07                	je     9730 <ema_fault_handler+0x10>
    9729:	48 8b 47 30          	mov    0x30(%rdi),%rax
    972d:	48 89 06             	mov    %rax,(%rsi)
    9730:	48 8b 47 28          	mov    0x28(%rdi),%rax
    9734:	c3                   	ret    
    9735:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    973c:	00 00 00 
    973f:	90                   	nop

0000000000009740 <ema_set_eaccept_full>:
    9740:	f3 0f 1e fa          	endbr64 
    9744:	53                   	push   %rbx
    9745:	48 89 fb             	mov    %rdi,%rbx
    9748:	48 8b 7f 20          	mov    0x20(%rdi),%rdi
    974c:	48 85 ff             	test   %rdi,%rdi
    974f:	74 0f                	je     9760 <ema_set_eaccept_full+0x20>
    9751:	e8 2a fa ff ff       	call   9180 <bit_array_set_all>
    9756:	31 c0                	xor    %eax,%eax
    9758:	5b                   	pop    %rbx
    9759:	c3                   	ret    
    975a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9760:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    9764:	48 c1 ef 0c          	shr    $0xc,%rdi
    9768:	e8 e3 f6 ff ff       	call   8e50 <bit_array_new_set>
    976d:	48 89 43 20          	mov    %rax,0x20(%rbx)
    9771:	48 85 c0             	test   %rax,%rax
    9774:	75 e0                	jne    9756 <ema_set_eaccept_full+0x16>
    9776:	b8 0c 00 00 00       	mov    $0xc,%eax
    977b:	5b                   	pop    %rbx
    977c:	c3                   	ret    
    977d:	0f 1f 00             	nopl   (%rax)

0000000000009780 <ema_clear_eaccept_full>:
    9780:	f3 0f 1e fa          	endbr64 
    9784:	53                   	push   %rbx
    9785:	48 89 fb             	mov    %rdi,%rbx
    9788:	48 8b 7f 20          	mov    0x20(%rdi),%rdi
    978c:	48 85 ff             	test   %rdi,%rdi
    978f:	74 0f                	je     97a0 <ema_clear_eaccept_full+0x20>
    9791:	e8 ea fa ff ff       	call   9280 <bit_array_reset_all>
    9796:	31 c0                	xor    %eax,%eax
    9798:	5b                   	pop    %rbx
    9799:	c3                   	ret    
    979a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    97a0:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    97a4:	48 c1 ef 0c          	shr    $0xc,%rdi
    97a8:	e8 d3 f6 ff ff       	call   8e80 <bit_array_new_reset>
    97ad:	48 89 43 20          	mov    %rax,0x20(%rbx)
    97b1:	48 85 c0             	test   %rax,%rax
    97b4:	75 e0                	jne    9796 <ema_clear_eaccept_full+0x16>
    97b6:	b8 0c 00 00 00       	mov    $0xc,%eax
    97bb:	5b                   	pop    %rbx
    97bc:	c3                   	ret    
    97bd:	0f 1f 00             	nopl   (%rax)

00000000000097c0 <ema_set_eaccept>:
    97c0:	f3 0f 1e fa          	endbr64 
    97c4:	48 85 ff             	test   %rdi,%rdi
    97c7:	74 6f                	je     9838 <ema_set_eaccept+0x78>
    97c9:	55                   	push   %rbp
    97ca:	48 89 fd             	mov    %rdi,%rbp
    97cd:	48 83 ec 10          	sub    $0x10,%rsp
    97d1:	48 8b 07             	mov    (%rdi),%rax
    97d4:	48 8b 7f 20          	mov    0x20(%rdi),%rdi
    97d8:	48 29 c6             	sub    %rax,%rsi
    97db:	48 29 c2             	sub    %rax,%rdx
    97de:	48 c1 ee 0c          	shr    $0xc,%rsi
    97e2:	48 c1 ea 0c          	shr    $0xc,%rdx
    97e6:	48 85 ff             	test   %rdi,%rdi
    97e9:	74 15                	je     9800 <ema_set_eaccept+0x40>
    97eb:	48 29 f2             	sub    %rsi,%rdx
    97ee:	e8 cd f8 ff ff       	call   90c0 <bit_array_set_range>
    97f3:	31 c0                	xor    %eax,%eax
    97f5:	48 83 c4 10          	add    $0x10,%rsp
    97f9:	5d                   	pop    %rbp
    97fa:	c3                   	ret    
    97fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9800:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
    9804:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    9809:	48 89 34 24          	mov    %rsi,(%rsp)
    980d:	48 c1 ef 0c          	shr    $0xc,%rdi
    9811:	e8 6a f6 ff ff       	call   8e80 <bit_array_new_reset>
    9816:	48 8b 34 24          	mov    (%rsp),%rsi
    981a:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    981f:	48 85 c0             	test   %rax,%rax
    9822:	48 89 45 20          	mov    %rax,0x20(%rbp)
    9826:	48 89 c7             	mov    %rax,%rdi
    9829:	75 c0                	jne    97eb <ema_set_eaccept+0x2b>
    982b:	b8 0c 00 00 00       	mov    $0xc,%eax
    9830:	eb c3                	jmp    97f5 <ema_set_eaccept+0x35>
    9832:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9838:	b8 16 00 00 00       	mov    $0x16,%eax
    983d:	c3                   	ret    
    983e:	66 90                	xchg   %ax,%ax

0000000000009840 <ema_page_committed>:
    9840:	f3 0f 1e fa          	endbr64 
    9844:	48 8b 47 20          	mov    0x20(%rdi),%rax
    9848:	48 85 c0             	test   %rax,%rax
    984b:	74 13                	je     9860 <ema_page_committed+0x20>
    984d:	48 2b 37             	sub    (%rdi),%rsi
    9850:	48 89 c7             	mov    %rax,%rdi
    9853:	48 c1 ee 0c          	shr    $0xc,%rsi
    9857:	e9 74 f6 ff ff       	jmp    8ed0 <bit_array_test>
    985c:	0f 1f 40 00          	nopl   0x0(%rax)
    9860:	31 c0                	xor    %eax,%eax
    9862:	c3                   	ret    
    9863:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    986a:	00 00 00 
    986d:	0f 1f 00             	nopl   (%rax)

0000000000009870 <search_ema>:
    9870:	f3 0f 1e fa          	endbr64 
    9874:	48 8b 0f             	mov    (%rdi),%rcx
    9877:	48 8b 41 38          	mov    0x38(%rcx),%rax
    987b:	48 39 c1             	cmp    %rax,%rcx
    987e:	74 1a                	je     989a <search_ema+0x2a>
    9880:	48 8b 10             	mov    (%rax),%rdx
    9883:	48 39 d6             	cmp    %rdx,%rsi
    9886:	72 09                	jb     9891 <search_ema+0x21>
    9888:	48 03 50 08          	add    0x8(%rax),%rdx
    988c:	48 39 d6             	cmp    %rdx,%rsi
    988f:	72 0b                	jb     989c <search_ema+0x2c>
    9891:	48 8b 40 38          	mov    0x38(%rax),%rax
    9895:	48 39 c1             	cmp    %rax,%rcx
    9898:	75 e6                	jne    9880 <search_ema+0x10>
    989a:	31 c0                	xor    %eax,%eax
    989c:	c3                   	ret    
    989d:	0f 1f 00             	nopl   (%rax)

00000000000098a0 <insert_ema>:
    98a0:	f3 0f 1e fa          	endbr64 
    98a4:	48 8b 56 40          	mov    0x40(%rsi),%rdx
    98a8:	66 48 0f 6e c6       	movq   %rsi,%xmm0
    98ad:	48 89 f8             	mov    %rdi,%rax
    98b0:	66 48 0f 6e ca       	movq   %rdx,%xmm1
    98b5:	66 0f 6c c1          	punpcklqdq %xmm1,%xmm0
    98b9:	0f 11 47 38          	movups %xmm0,0x38(%rdi)
    98bd:	48 89 7a 38          	mov    %rdi,0x38(%rdx)
    98c1:	48 89 7e 40          	mov    %rdi,0x40(%rsi)
    98c5:	c3                   	ret    
    98c6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    98cd:	00 00 00 

00000000000098d0 <push_back_ema>:
    98d0:	f3 0f 1e fa          	endbr64 
    98d4:	48 8b 07             	mov    (%rdi),%rax
    98d7:	48 8b 50 40          	mov    0x40(%rax),%rdx
    98db:	66 48 0f 6e c0       	movq   %rax,%xmm0
    98e0:	66 48 0f 6e ca       	movq   %rdx,%xmm1
    98e5:	66 0f 6c c1          	punpcklqdq %xmm1,%xmm0
    98e9:	0f 11 46 38          	movups %xmm0,0x38(%rsi)
    98ed:	48 89 72 38          	mov    %rsi,0x38(%rdx)
    98f1:	48 89 70 40          	mov    %rsi,0x40(%rax)
    98f5:	c3                   	ret    
    98f6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    98fd:	00 00 00 

0000000000009900 <search_ema_range>:
    9900:	f3 0f 1e fa          	endbr64 
    9904:	4c 8b 0f             	mov    (%rdi),%r9
    9907:	49 89 fa             	mov    %rdi,%r10
    990a:	49 8b 41 38          	mov    0x38(%r9),%rax
    990e:	49 39 c1             	cmp    %rax,%r9
    9911:	75 0e                	jne    9921 <search_ema_range+0x21>
    9913:	eb 4b                	jmp    9960 <search_ema_range+0x60>
    9915:	0f 1f 00             	nopl   (%rax)
    9918:	48 8b 40 38          	mov    0x38(%rax),%rax
    991c:	49 39 c1             	cmp    %rax,%r9
    991f:	74 3f                	je     9960 <search_ema_range+0x60>
    9921:	48 8b 38             	mov    (%rax),%rdi
    9924:	48 03 78 08          	add    0x8(%rax),%rdi
    9928:	48 39 fe             	cmp    %rdi,%rsi
    992b:	73 eb                	jae    9918 <search_ema_range+0x18>
    992d:	49 39 c1             	cmp    %rax,%r9
    9930:	74 2e                	je     9960 <search_ema_range+0x60>
    9932:	48 39 10             	cmp    %rdx,(%rax)
    9935:	73 29                	jae    9960 <search_ema_range+0x60>
    9937:	48 89 01             	mov    %rax,(%rcx)
    993a:	49 8b 0a             	mov    (%r10),%rcx
    993d:	48 39 c1             	cmp    %rax,%rcx
    9940:	74 14                	je     9956 <search_ema_range+0x56>
    9942:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9948:	48 8b 40 38          	mov    0x38(%rax),%rax
    994c:	48 39 c1             	cmp    %rax,%rcx
    994f:	74 05                	je     9956 <search_ema_range+0x56>
    9951:	48 39 10             	cmp    %rdx,(%rax)
    9954:	72 f2                	jb     9948 <search_ema_range+0x48>
    9956:	31 d2                	xor    %edx,%edx
    9958:	49 89 00             	mov    %rax,(%r8)
    995b:	89 d0                	mov    %edx,%eax
    995d:	c3                   	ret    
    995e:	66 90                	xchg   %ax,%ax
    9960:	48 c7 01 00 00 00 00 	movq   $0x0,(%rcx)
    9967:	31 c0                	xor    %eax,%eax
    9969:	ba ff ff ff ff       	mov    $0xffffffff,%edx
    996e:	eb e8                	jmp    9958 <search_ema_range+0x58>

0000000000009970 <ema_split>:
    9970:	f3 0f 1e fa          	endbr64 
    9974:	41 56                	push   %r14
    9976:	41 89 d6             	mov    %edx,%r14d
    9979:	41 55                	push   %r13
    997b:	49 89 cd             	mov    %rcx,%r13
    997e:	41 54                	push   %r12
    9980:	49 89 f4             	mov    %rsi,%r12
    9983:	55                   	push   %rbp
    9984:	53                   	push   %rbx
    9985:	48 89 fb             	mov    %rdi,%rbx
    9988:	bf 48 00 00 00       	mov    $0x48,%edi
    998d:	48 83 ec 30          	sub    $0x30,%rsp
    9991:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    9998:	00 00 
    999a:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    999f:	31 c0                	xor    %eax,%eax
    99a1:	e8 0a 1a 00 00       	call   b3b0 <emalloc>
    99a6:	48 85 c0             	test   %rax,%rax
    99a9:	0f 84 39 01 00 00    	je     9ae8 <ema_split+0x178>
    99af:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
    99b6:	00 00 
    99b8:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    99bc:	48 89 c5             	mov    %rax,%rbp
    99bf:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    99c6:	00 00 
    99c8:	48 85 ff             	test   %rdi,%rdi
    99cb:	74 21                	je     99ee <ema_split+0x7e>
    99cd:	4c 89 e6             	mov    %r12,%rsi
    99d0:	48 8d 4c 24 20       	lea    0x20(%rsp),%rcx
    99d5:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
    99da:	48 2b 33             	sub    (%rbx),%rsi
    99dd:	48 c1 ee 0c          	shr    $0xc,%rsi
    99e1:	e8 fa f8 ff ff       	call   92e0 <bit_array_split>
    99e6:	85 c0                	test   %eax,%eax
    99e8:	0f 85 e2 00 00 00    	jne    9ad0 <ema_split+0x160>
    99ee:	ba 48 00 00 00       	mov    $0x48,%edx
    99f3:	48 89 de             	mov    %rbx,%rsi
    99f6:	48 89 ef             	mov    %rbp,%rdi
    99f9:	e8 62 6c 00 00       	call   10660 <memcpy>
    99fe:	45 84 f6             	test   %r14b,%r14b
    9a01:	0f 85 99 00 00 00    	jne    9aa0 <ema_split+0x130>
    9a07:	48 8b 43 38          	mov    0x38(%rbx),%rax
    9a0b:	48 89 d9             	mov    %rbx,%rcx
    9a0e:	48 8b 50 40          	mov    0x40(%rax),%rdx
    9a12:	66 48 0f 6e c0       	movq   %rax,%xmm0
    9a17:	66 48 0f 6e da       	movq   %rdx,%xmm3
    9a1c:	66 0f 6c c3          	punpcklqdq %xmm3,%xmm0
    9a20:	0f 11 45 38          	movups %xmm0,0x38(%rbp)
    9a24:	48 89 6a 38          	mov    %rbp,0x38(%rdx)
    9a28:	48 89 ea             	mov    %rbp,%rdx
    9a2b:	48 89 68 40          	mov    %rbp,0x40(%rax)
    9a2f:	48 8b 03             	mov    (%rbx),%rax
    9a32:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    9a36:	4c 89 e7             	mov    %r12,%rdi
    9a39:	48 29 c7             	sub    %rax,%rdi
    9a3c:	66 48 0f 6e c0       	movq   %rax,%xmm0
    9a41:	48 01 f0             	add    %rsi,%rax
    9a44:	66 48 0f 6e cf       	movq   %rdi,%xmm1
    9a49:	4c 29 e0             	sub    %r12,%rax
    9a4c:	48 83 7b 20 00       	cmpq   $0x0,0x20(%rbx)
    9a51:	66 0f 6c c1          	punpcklqdq %xmm1,%xmm0
    9a55:	0f 11 01             	movups %xmm0,(%rcx)
    9a58:	4c 89 22             	mov    %r12,(%rdx)
    9a5b:	48 89 42 08          	mov    %rax,0x8(%rdx)
    9a5f:	74 12                	je     9a73 <ema_split+0x103>
    9a61:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    9a66:	48 89 41 20          	mov    %rax,0x20(%rcx)
    9a6a:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    9a6f:	48 89 42 20          	mov    %rax,0x20(%rdx)
    9a73:	49 89 6d 00          	mov    %rbp,0x0(%r13)
    9a77:	31 c0                	xor    %eax,%eax
    9a79:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    9a7e:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    9a85:	00 00 
    9a87:	75 66                	jne    9aef <ema_split+0x17f>
    9a89:	48 83 c4 30          	add    $0x30,%rsp
    9a8d:	5b                   	pop    %rbx
    9a8e:	5d                   	pop    %rbp
    9a8f:	41 5c                	pop    %r12
    9a91:	41 5d                	pop    %r13
    9a93:	41 5e                	pop    %r14
    9a95:	c3                   	ret    
    9a96:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    9a9d:	00 00 00 
    9aa0:	48 8b 43 40          	mov    0x40(%rbx),%rax
    9aa4:	66 48 0f 6e c3       	movq   %rbx,%xmm0
    9aa9:	48 89 da             	mov    %rbx,%rdx
    9aac:	48 89 e9             	mov    %rbp,%rcx
    9aaf:	66 48 0f 6e d0       	movq   %rax,%xmm2
    9ab4:	66 0f 6c c2          	punpcklqdq %xmm2,%xmm0
    9ab8:	0f 11 45 38          	movups %xmm0,0x38(%rbp)
    9abc:	48 89 68 38          	mov    %rbp,0x38(%rax)
    9ac0:	48 89 6b 40          	mov    %rbp,0x40(%rbx)
    9ac4:	e9 66 ff ff ff       	jmp    9a2f <ema_split+0xbf>
    9ac9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9ad0:	48 89 ef             	mov    %rbp,%rdi
    9ad3:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    9ad7:	e8 54 1b 00 00       	call   b630 <efree>
    9adc:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    9ae0:	eb 97                	jmp    9a79 <ema_split+0x109>
    9ae2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9ae8:	b8 0c 00 00 00       	mov    $0xc,%eax
    9aed:	eb 8a                	jmp    9a79 <ema_split+0x109>
    9aef:	e8 7c 6e 00 00       	call   10970 <__stack_chk_fail>
    9af4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    9afb:	00 00 00 
    9afe:	66 90                	xchg   %ax,%ax

0000000000009b00 <ema_split_ex>:
    9b00:	f3 0f 1e fa          	endbr64 
    9b04:	41 54                	push   %r12
    9b06:	49 89 cc             	mov    %rcx,%r12
    9b09:	55                   	push   %rbp
    9b0a:	48 89 d5             	mov    %rdx,%rbp
    9b0d:	53                   	push   %rbx
    9b0e:	48 89 fb             	mov    %rdi,%rbx
    9b11:	48 83 ec 10          	sub    $0x10,%rsp
    9b15:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    9b1c:	00 00 
    9b1e:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    9b23:	48 8b 07             	mov    (%rdi),%rax
    9b26:	48 39 f0             	cmp    %rsi,%rax
    9b29:	72 35                	jb     9b60 <ema_split_ex+0x60>
    9b2b:	48 03 43 08          	add    0x8(%rbx),%rax
    9b2f:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    9b36:	00 
    9b37:	48 39 c5             	cmp    %rax,%rbp
    9b3a:	72 44                	jb     9b80 <ema_split_ex+0x80>
    9b3c:	48 89 d8             	mov    %rbx,%rax
    9b3f:	49 89 04 24          	mov    %rax,(%r12)
    9b43:	31 c0                	xor    %eax,%eax
    9b45:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    9b4a:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    9b51:	00 00 
    9b53:	75 5b                	jne    9bb0 <ema_split_ex+0xb0>
    9b55:	48 83 c4 10          	add    $0x10,%rsp
    9b59:	5b                   	pop    %rbx
    9b5a:	5d                   	pop    %rbp
    9b5b:	41 5c                	pop    %r12
    9b5d:	c3                   	ret    
    9b5e:	66 90                	xchg   %ax,%ax
    9b60:	31 d2                	xor    %edx,%edx
    9b62:	48 89 e1             	mov    %rsp,%rcx
    9b65:	e8 06 fe ff ff       	call   9970 <ema_split>
    9b6a:	85 c0                	test   %eax,%eax
    9b6c:	75 d7                	jne    9b45 <ema_split_ex+0x45>
    9b6e:	48 8b 14 24          	mov    (%rsp),%rdx
    9b72:	48 85 d2             	test   %rdx,%rdx
    9b75:	74 31                	je     9ba8 <ema_split_ex+0xa8>
    9b77:	48 8b 02             	mov    (%rdx),%rax
    9b7a:	48 89 d3             	mov    %rdx,%rbx
    9b7d:	eb ac                	jmp    9b2b <ema_split_ex+0x2b>
    9b7f:	90                   	nop
    9b80:	48 89 e1             	mov    %rsp,%rcx
    9b83:	ba 01 00 00 00       	mov    $0x1,%edx
    9b88:	48 89 ee             	mov    %rbp,%rsi
    9b8b:	48 89 df             	mov    %rbx,%rdi
    9b8e:	e8 dd fd ff ff       	call   9970 <ema_split>
    9b93:	85 c0                	test   %eax,%eax
    9b95:	75 ae                	jne    9b45 <ema_split_ex+0x45>
    9b97:	48 8b 04 24          	mov    (%rsp),%rax
    9b9b:	48 85 c0             	test   %rax,%rax
    9b9e:	75 9f                	jne    9b3f <ema_split_ex+0x3f>
    9ba0:	eb 9a                	jmp    9b3c <ema_split_ex+0x3c>
    9ba2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9ba8:	48 8b 03             	mov    (%rbx),%rax
    9bab:	e9 7b ff ff ff       	jmp    9b2b <ema_split_ex+0x2b>
    9bb0:	e8 bb 6d 00 00       	call   10970 <__stack_chk_fail>
    9bb5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    9bbc:	00 00 00 
    9bbf:	90                   	nop

0000000000009bc0 <find_free_region>:
    9bc0:	f3 0f 1e fa          	endbr64 
    9bc4:	41 57                	push   %r15
    9bc6:	49 89 cf             	mov    %rcx,%r15
    9bc9:	41 56                	push   %r14
    9bcb:	49 89 fe             	mov    %rdi,%r14
    9bce:	41 55                	push   %r13
    9bd0:	49 89 d5             	mov    %rdx,%r13
    9bd3:	41 54                	push   %r12
    9bd5:	49 f7 dd             	neg    %r13
    9bd8:	55                   	push   %rbp
    9bd9:	48 89 f5             	mov    %rsi,%rbp
    9bdc:	53                   	push   %rbx
    9bdd:	48 89 d3             	mov    %rdx,%rbx
    9be0:	48 83 ec 18          	sub    $0x18,%rsp
    9be4:	4c 8b 27             	mov    (%rdi),%r12
    9be7:	49 8b 4c 24 38       	mov    0x38(%r12),%rcx
    9bec:	49 c7 00 00 00 00 00 	movq   $0x0,(%r8)
    9bf3:	49 c7 07 00 00 00 00 	movq   $0x0,(%r15)
    9bfa:	49 39 cc             	cmp    %rcx,%r12
    9bfd:	0f 84 a5 00 00 00    	je     9ca8 <find_free_region+0xe8>
    9c03:	48 8b 51 38          	mov    0x38(%rcx),%rdx
    9c07:	4c 8b 11             	mov    (%rcx),%r10
    9c0a:	48 8d 73 ff          	lea    -0x1(%rbx),%rsi
    9c0e:	49 39 d4             	cmp    %rdx,%r12
    9c11:	0f 84 02 01 00 00    	je     9d19 <find_free_region+0x159>
    9c17:	4c 8b 0d e2 0d 02 00 	mov    0x20de2(%rip),%r9        # 2aa00 <mm_user_end>
    9c1e:	48 89 c8             	mov    %rcx,%rax
    9c21:	48 8d 3d 40 04 01 00 	lea    0x10440(%rip),%rdi        # 1a068 <g_rts_ema_root>
    9c28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    9c2f:	00 
    9c30:	48 8b 58 08          	mov    0x8(%rax),%rbx
    9c34:	48 01 f3             	add    %rsi,%rbx
    9c37:	48 89 d8             	mov    %rbx,%rax
    9c3a:	4c 01 d0             	add    %r10,%rax
    9c3d:	4c 8b 12             	mov    (%rdx),%r10
    9c40:	4c 21 e8             	and    %r13,%rax
    9c43:	49 39 c2             	cmp    %rax,%r10
    9c46:	72 48                	jb     9c90 <find_free_region+0xd0>
    9c48:	4d 89 d3             	mov    %r10,%r11
    9c4b:	49 29 c3             	sub    %rax,%r11
    9c4e:	49 39 eb             	cmp    %rbp,%r11
    9c51:	72 3d                	jb     9c90 <find_free_region+0xd0>
    9c53:	49 39 fe             	cmp    %rdi,%r14
    9c56:	75 16                	jne    9c6e <find_free_region+0xae>
    9c58:	49 89 eb             	mov    %rbp,%r11
    9c5b:	49 01 c3             	add    %rax,%r11
    9c5e:	72 30                	jb     9c90 <find_free_region+0xd0>
    9c60:	4c 39 c8             	cmp    %r9,%rax
    9c63:	73 09                	jae    9c6e <find_free_region+0xae>
    9c65:	4c 39 1d 9c 0d 02 00 	cmp    %r11,0x20d9c(%rip)        # 2aa08 <mm_user_base>
    9c6c:	72 22                	jb     9c90 <find_free_region+0xd0>
    9c6e:	49 89 10             	mov    %rdx,(%r8)
    9c71:	49 89 07             	mov    %rax,(%r15)
    9c74:	48 83 c4 18          	add    $0x18,%rsp
    9c78:	b8 01 00 00 00       	mov    $0x1,%eax
    9c7d:	5b                   	pop    %rbx
    9c7e:	5d                   	pop    %rbp
    9c7f:	41 5c                	pop    %r12
    9c81:	41 5d                	pop    %r13
    9c83:	41 5e                	pop    %r14
    9c85:	41 5f                	pop    %r15
    9c87:	c3                   	ret    
    9c88:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    9c8f:	00 
    9c90:	48 8b 5a 38          	mov    0x38(%rdx),%rbx
    9c94:	48 89 d0             	mov    %rdx,%rax
    9c97:	49 39 dc             	cmp    %rbx,%r12
    9c9a:	0f 84 80 00 00 00    	je     9d20 <find_free_region+0x160>
    9ca0:	48 89 da             	mov    %rbx,%rdx
    9ca3:	eb 8b                	jmp    9c30 <find_free_region+0x70>
    9ca5:	0f 1f 00             	nopl   (%rax)
    9ca8:	48 8d 05 b9 03 01 00 	lea    0x103b9(%rip),%rax        # 1a068 <g_rts_ema_root>
    9caf:	48 8b 15 52 0d 02 00 	mov    0x20d52(%rip),%rdx        # 2aa08 <mm_user_base>
    9cb6:	48 39 c7             	cmp    %rax,%rdi
    9cb9:	74 25                	je     9ce0 <find_free_region+0x120>
    9cbb:	48 8d 44 1a ff       	lea    -0x1(%rdx,%rbx,1),%rax
    9cc0:	4c 21 e8             	and    %r13,%rax
    9cc3:	48 01 c5             	add    %rax,%rbp
    9cc6:	72 40                	jb     9d08 <find_free_region+0x148>
    9cc8:	48 39 d0             	cmp    %rdx,%rax
    9ccb:	72 3b                	jb     9d08 <find_free_region+0x148>
    9ccd:	48 39 2d 2c 0d 02 00 	cmp    %rbp,0x20d2c(%rip)        # 2aa00 <mm_user_end>
    9cd4:	72 32                	jb     9d08 <find_free_region+0x148>
    9cd6:	49 89 07             	mov    %rax,(%r15)
    9cd9:	4d 89 20             	mov    %r12,(%r8)
    9cdc:	eb 96                	jmp    9c74 <find_free_region+0xb4>
    9cde:	66 90                	xchg   %ax,%ax
    9ce0:	48 39 f2             	cmp    %rsi,%rdx
    9ce3:	0f 83 be 01 00 00    	jae    9ea7 <find_free_region+0x2e7>
    9ce9:	48 8b 05 10 0d 02 00 	mov    0x20d10(%rip),%rax        # 2aa00 <mm_user_end>
    9cf0:	4c 8d 74 03 ff       	lea    -0x1(%rbx,%rax,1),%r14
    9cf5:	48 89 e8             	mov    %rbp,%rax
    9cf8:	4d 21 ee             	and    %r13,%r14
    9cfb:	4c 01 f0             	add    %r14,%rax
    9cfe:	0f 83 e4 00 00 00    	jae    9de8 <find_free_region+0x228>
    9d04:	0f 1f 40 00          	nopl   0x0(%rax)
    9d08:	31 c0                	xor    %eax,%eax
    9d0a:	48 83 c4 18          	add    $0x18,%rsp
    9d0e:	5b                   	pop    %rbx
    9d0f:	5d                   	pop    %rbp
    9d10:	41 5c                	pop    %r12
    9d12:	41 5d                	pop    %r13
    9d14:	41 5e                	pop    %r14
    9d16:	41 5f                	pop    %r15
    9d18:	c3                   	ret    
    9d19:	48 89 d3             	mov    %rdx,%rbx
    9d1c:	48 89 ca             	mov    %rcx,%rdx
    9d1f:	90                   	nop
    9d20:	4d 8d 24 32          	lea    (%r10,%rsi,1),%r12
    9d24:	4c 03 62 08          	add    0x8(%rdx),%r12
    9d28:	48 89 ee             	mov    %rbp,%rsi
    9d2b:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    9d30:	4d 21 ec             	and    %r13,%r12
    9d33:	48 89 0c 24          	mov    %rcx,(%rsp)
    9d37:	4c 89 e7             	mov    %r12,%rdi
    9d3a:	e8 71 bc ff ff       	call   59b0 <sgx_mm_is_within_enclave>
    9d3f:	48 8b 0c 24          	mov    (%rsp),%rcx
    9d43:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
    9d48:	84 c0                	test   %al,%al
    9d4a:	74 4c                	je     9d98 <find_free_region+0x1d8>
    9d4c:	48 89 ee             	mov    %rbp,%rsi
    9d4f:	31 d2                	xor    %edx,%edx
    9d51:	48 8d 05 10 03 01 00 	lea    0x10310(%rip),%rax        # 1a068 <g_rts_ema_root>
    9d58:	4c 01 e6             	add    %r12,%rsi
    9d5b:	0f 92 c2             	setb   %dl
    9d5e:	49 39 c6             	cmp    %rax,%r14
    9d61:	0f 84 a7 00 00 00    	je     9e0e <find_free_region+0x24e>
    9d67:	48 85 d2             	test   %rdx,%rdx
    9d6a:	0f 85 20 01 00 00    	jne    9e90 <find_free_region+0x2d0>
    9d70:	4c 3b 25 91 0c 02 00 	cmp    0x20c91(%rip),%r12        # 2aa08 <mm_user_base>
    9d77:	0f 82 13 01 00 00    	jb     9e90 <find_free_region+0x2d0>
    9d7d:	48 39 35 7c 0c 02 00 	cmp    %rsi,0x20c7c(%rip)        # 2aa00 <mm_user_end>
    9d84:	0f 82 06 01 00 00    	jb     9e90 <find_free_region+0x2d0>
    9d8a:	49 89 18             	mov    %rbx,(%r8)
    9d8d:	4d 89 27             	mov    %r12,(%r15)
    9d90:	e9 df fe ff ff       	jmp    9c74 <find_free_region+0xb4>
    9d95:	0f 1f 00             	nopl   (%rax)
    9d98:	48 8b 19             	mov    (%rcx),%rbx
    9d9b:	48 39 eb             	cmp    %rbp,%rbx
    9d9e:	0f 82 64 ff ff ff    	jb     9d08 <find_free_region+0x148>
    9da4:	48 29 eb             	sub    %rbp,%rbx
    9da7:	48 8d 05 ba 02 01 00 	lea    0x102ba(%rip),%rax        # 1a068 <g_rts_ema_root>
    9dae:	4c 21 eb             	and    %r13,%rbx
    9db1:	49 39 c6             	cmp    %rax,%r14
    9db4:	0f 84 85 00 00 00    	je     9e3f <find_free_region+0x27f>
    9dba:	48 01 dd             	add    %rbx,%rbp
    9dbd:	0f 82 45 ff ff ff    	jb     9d08 <find_free_region+0x148>
    9dc3:	48 3b 1d 3e 0c 02 00 	cmp    0x20c3e(%rip),%rbx        # 2aa08 <mm_user_base>
    9dca:	0f 82 38 ff ff ff    	jb     9d08 <find_free_region+0x148>
    9dd0:	48 39 2d 29 0c 02 00 	cmp    %rbp,0x20c29(%rip)        # 2aa00 <mm_user_end>
    9dd7:	0f 82 2b ff ff ff    	jb     9d08 <find_free_region+0x148>
    9ddd:	49 89 1f             	mov    %rbx,(%r15)
    9de0:	49 89 08             	mov    %rcx,(%r8)
    9de3:	e9 8c fe ff ff       	jmp    9c74 <find_free_region+0xb4>
    9de8:	48 89 ee             	mov    %rbp,%rsi
    9deb:	4c 89 f7             	mov    %r14,%rdi
    9dee:	4c 89 04 24          	mov    %r8,(%rsp)
    9df2:	e8 b9 bb ff ff       	call   59b0 <sgx_mm_is_within_enclave>
    9df7:	4c 8b 04 24          	mov    (%rsp),%r8
    9dfb:	84 c0                	test   %al,%al
    9dfd:	0f 84 05 ff ff ff    	je     9d08 <find_free_region+0x148>
    9e03:	4d 89 37             	mov    %r14,(%r15)
    9e06:	4d 89 20             	mov    %r12,(%r8)
    9e09:	e9 66 fe ff ff       	jmp    9c74 <find_free_region+0xb4>
    9e0e:	48 85 d2             	test   %rdx,%rdx
    9e11:	75 1a                	jne    9e2d <find_free_region+0x26d>
    9e13:	4c 3b 25 e6 0b 02 00 	cmp    0x20be6(%rip),%r12        # 2aa00 <mm_user_end>
    9e1a:	0f 83 6a ff ff ff    	jae    9d8a <find_free_region+0x1ca>
    9e20:	48 39 35 e1 0b 02 00 	cmp    %rsi,0x20be1(%rip)        # 2aa08 <mm_user_base>
    9e27:	0f 83 5d ff ff ff    	jae    9d8a <find_free_region+0x1ca>
    9e2d:	48 8b 19             	mov    (%rcx),%rbx
    9e30:	48 39 eb             	cmp    %rbp,%rbx
    9e33:	0f 82 cf fe ff ff    	jb     9d08 <find_free_region+0x148>
    9e39:	48 29 eb             	sub    %rbp,%rbx
    9e3c:	4c 21 eb             	and    %r13,%rbx
    9e3f:	48 89 ee             	mov    %rbp,%rsi
    9e42:	48 89 df             	mov    %rbx,%rdi
    9e45:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    9e4a:	48 89 0c 24          	mov    %rcx,(%rsp)
    9e4e:	e8 5d bb ff ff       	call   59b0 <sgx_mm_is_within_enclave>
    9e53:	84 c0                	test   %al,%al
    9e55:	0f 84 ad fe ff ff    	je     9d08 <find_free_region+0x148>
    9e5b:	48 01 dd             	add    %rbx,%rbp
    9e5e:	0f 82 a4 fe ff ff    	jb     9d08 <find_free_region+0x148>
    9e64:	48 3b 1d 95 0b 02 00 	cmp    0x20b95(%rip),%rbx        # 2aa00 <mm_user_end>
    9e6b:	48 8b 0c 24          	mov    (%rsp),%rcx
    9e6f:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
    9e74:	0f 83 63 ff ff ff    	jae    9ddd <find_free_region+0x21d>
    9e7a:	48 39 2d 87 0b 02 00 	cmp    %rbp,0x20b87(%rip)        # 2aa08 <mm_user_base>
    9e81:	0f 83 56 ff ff ff    	jae    9ddd <find_free_region+0x21d>
    9e87:	31 c0                	xor    %eax,%eax
    9e89:	e9 7c fe ff ff       	jmp    9d0a <find_free_region+0x14a>
    9e8e:	66 90                	xchg   %ax,%ax
    9e90:	48 8b 19             	mov    (%rcx),%rbx
    9e93:	48 39 eb             	cmp    %rbp,%rbx
    9e96:	0f 82 6c fe ff ff    	jb     9d08 <find_free_region+0x148>
    9e9c:	48 29 eb             	sub    %rbp,%rbx
    9e9f:	4c 21 eb             	and    %r13,%rbx
    9ea2:	e9 13 ff ff ff       	jmp    9dba <find_free_region+0x1fa>
    9ea7:	48 29 f2             	sub    %rsi,%rdx
    9eaa:	4c 89 04 24          	mov    %r8,(%rsp)
    9eae:	4c 21 ea             	and    %r13,%rdx
    9eb1:	48 89 d7             	mov    %rdx,%rdi
    9eb4:	49 89 d6             	mov    %rdx,%r14
    9eb7:	e8 f4 ba ff ff       	call   59b0 <sgx_mm_is_within_enclave>
    9ebc:	4c 8b 04 24          	mov    (%rsp),%r8
    9ec0:	84 c0                	test   %al,%al
    9ec2:	0f 85 3b ff ff ff    	jne    9e03 <find_free_region+0x243>
    9ec8:	e9 1c fe ff ff       	jmp    9ce9 <find_free_region+0x129>
    9ecd:	0f 1f 00             	nopl   (%rax)

0000000000009ed0 <find_free_region_at>:
    9ed0:	f3 0f 1e fa          	endbr64 
    9ed4:	41 55                	push   %r13
    9ed6:	49 89 cd             	mov    %rcx,%r13
    9ed9:	41 54                	push   %r12
    9edb:	49 89 fc             	mov    %rdi,%r12
    9ede:	55                   	push   %rbp
    9edf:	48 89 d5             	mov    %rdx,%rbp
    9ee2:	53                   	push   %rbx
    9ee3:	48 89 f3             	mov    %rsi,%rbx
    9ee6:	48 89 d6             	mov    %rdx,%rsi
    9ee9:	48 89 df             	mov    %rbx,%rdi
    9eec:	48 83 ec 08          	sub    $0x8,%rsp
    9ef0:	e8 bb ba ff ff       	call   59b0 <sgx_mm_is_within_enclave>
    9ef5:	31 c9                	xor    %ecx,%ecx
    9ef7:	84 c0                	test   %al,%al
    9ef9:	74 5f                	je     9f5a <find_free_region_at+0x8a>
    9efb:	31 f6                	xor    %esi,%esi
    9efd:	48 8d 15 64 01 01 00 	lea    0x10164(%rip),%rdx        # 1a068 <g_rts_ema_root>
    9f04:	48 01 dd             	add    %rbx,%rbp
    9f07:	40 0f 92 c6          	setb   %sil
    9f0b:	49 39 d4             	cmp    %rdx,%r12
    9f0e:	0f 84 7c 00 00 00    	je     9f90 <find_free_region_at+0xc0>
    9f14:	48 85 f6             	test   %rsi,%rsi
    9f17:	75 5e                	jne    9f77 <find_free_region_at+0xa7>
    9f19:	48 3b 1d e8 0a 02 00 	cmp    0x20ae8(%rip),%rbx        # 2aa08 <mm_user_base>
    9f20:	72 55                	jb     9f77 <find_free_region_at+0xa7>
    9f22:	48 39 2d d7 0a 02 00 	cmp    %rbp,0x20ad7(%rip)        # 2aa00 <mm_user_end>
    9f29:	72 4c                	jb     9f77 <find_free_region_at+0xa7>
    9f2b:	49 8b 14 24          	mov    (%r12),%rdx
    9f2f:	48 8b 4a 38          	mov    0x38(%rdx),%rcx
    9f33:	48 39 ca             	cmp    %rcx,%rdx
    9f36:	75 1a                	jne    9f52 <find_free_region_at+0x82>
    9f38:	eb 20                	jmp    9f5a <find_free_region_at+0x8a>
    9f3a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9f40:	48 03 71 08          	add    0x8(%rcx),%rsi
    9f44:	48 39 f3             	cmp    %rsi,%rbx
    9f47:	72 27                	jb     9f70 <find_free_region_at+0xa0>
    9f49:	48 8b 49 38          	mov    0x38(%rcx),%rcx
    9f4d:	48 39 ca             	cmp    %rcx,%rdx
    9f50:	74 08                	je     9f5a <find_free_region_at+0x8a>
    9f52:	48 8b 31             	mov    (%rcx),%rsi
    9f55:	48 39 ee             	cmp    %rbp,%rsi
    9f58:	72 e6                	jb     9f40 <find_free_region_at+0x70>
    9f5a:	49 89 4d 00          	mov    %rcx,0x0(%r13)
    9f5e:	48 83 c4 08          	add    $0x8,%rsp
    9f62:	5b                   	pop    %rbx
    9f63:	5d                   	pop    %rbp
    9f64:	41 5c                	pop    %r12
    9f66:	41 5d                	pop    %r13
    9f68:	c3                   	ret    
    9f69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9f70:	48 39 ca             	cmp    %rcx,%rdx
    9f73:	74 e5                	je     9f5a <find_free_region_at+0x8a>
    9f75:	31 c9                	xor    %ecx,%ecx
    9f77:	31 c0                	xor    %eax,%eax
    9f79:	49 89 4d 00          	mov    %rcx,0x0(%r13)
    9f7d:	48 83 c4 08          	add    $0x8,%rsp
    9f81:	5b                   	pop    %rbx
    9f82:	5d                   	pop    %rbp
    9f83:	41 5c                	pop    %r12
    9f85:	41 5d                	pop    %r13
    9f87:	c3                   	ret    
    9f88:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    9f8f:	00 
    9f90:	48 85 f6             	test   %rsi,%rsi
    9f93:	75 e2                	jne    9f77 <find_free_region_at+0xa7>
    9f95:	48 3b 1d 64 0a 02 00 	cmp    0x20a64(%rip),%rbx        # 2aa00 <mm_user_end>
    9f9c:	73 8d                	jae    9f2b <find_free_region_at+0x5b>
    9f9e:	48 39 2d 63 0a 02 00 	cmp    %rbp,0x20a63(%rip)        # 2aa08 <mm_user_base>
    9fa5:	73 84                	jae    9f2b <find_free_region_at+0x5b>
    9fa7:	31 c0                	xor    %eax,%eax
    9fa9:	eb ce                	jmp    9f79 <find_free_region_at+0xa9>
    9fab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000009fb0 <ema_new>:
    9fb0:	f3 0f 1e fa          	endbr64 
    9fb4:	53                   	push   %rbx
    9fb5:	48 83 ec 50          	sub    $0x50,%rsp
    9fb9:	64 4c 8b 14 25 28 00 	mov    %fs:0x28,%r10
    9fc0:	00 00 
    9fc2:	4c 89 54 24 48       	mov    %r10,0x48(%rsp)
    9fc7:	45 31 d2             	xor    %r10d,%r10d
    9fca:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
    9fcf:	89 54 24 10          	mov    %edx,0x10(%rsp)
    9fd3:	48 89 e3             	mov    %rsp,%rbx
    9fd6:	48 89 3c 24          	mov    %rdi,(%rsp)
    9fda:	bf 48 00 00 00       	mov    $0x48,%edi
    9fdf:	48 8b 50 40          	mov    0x40(%rax),%rdx
    9fe3:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    9fe8:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    9fed:	48 89 54 24 40       	mov    %rdx,0x40(%rsp)
    9ff2:	48 89 5a 38          	mov    %rbx,0x38(%rdx)
    9ff6:	48 89 58 40          	mov    %rbx,0x40(%rax)
    9ffa:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
    9fff:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    a006:	00 00 
    a008:	4c 89 44 24 28       	mov    %r8,0x28(%rsp)
    a00d:	4c 89 4c 24 30       	mov    %r9,0x30(%rsp)
    a012:	e8 99 13 00 00       	call   b3b0 <emalloc>
    a017:	48 85 c0             	test   %rax,%rax
    a01a:	74 6c                	je     a088 <ema_new+0xd8>
    a01c:	66 0f 6f 0c 24       	movdqa (%rsp),%xmm1
    a021:	0f 11 08             	movups %xmm1,(%rax)
    a024:	66 0f 6f 54 24 10    	movdqa 0x10(%rsp),%xmm2
    a02a:	0f 11 50 10          	movups %xmm2,0x10(%rax)
    a02e:	66 0f 6f 5c 24 20    	movdqa 0x20(%rsp),%xmm3
    a034:	0f 11 58 20          	movups %xmm3,0x20(%rax)
    a038:	66 0f 6f 64 24 30    	movdqa 0x30(%rsp),%xmm4
    a03e:	0f 11 60 30          	movups %xmm4,0x30(%rax)
    a042:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
    a047:	48 89 50 40          	mov    %rdx,0x40(%rax)
    a04b:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
    a050:	48 89 42 38          	mov    %rax,0x38(%rdx)
    a054:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
    a059:	48 89 42 40          	mov    %rax,0x40(%rdx)
    a05d:	66 48 0f 6e c2       	movq   %rdx,%xmm0
    a062:	0f 16 44 24 40       	movhps 0x40(%rsp),%xmm0
    a067:	0f 11 40 38          	movups %xmm0,0x38(%rax)
    a06b:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
    a070:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    a077:	00 00 
    a079:	75 2d                	jne    a0a8 <ema_new+0xf8>
    a07b:	48 83 c4 50          	add    $0x50,%rsp
    a07f:	5b                   	pop    %rbx
    a080:	c3                   	ret    
    a081:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a088:	48 8b 4c 24 40       	mov    0x40(%rsp),%rcx
    a08d:	48 39 59 38          	cmp    %rbx,0x38(%rcx)
    a091:	75 1a                	jne    a0ad <ema_new+0xfd>
    a093:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
    a098:	48 39 5a 40          	cmp    %rbx,0x40(%rdx)
    a09c:	75 0f                	jne    a0ad <ema_new+0xfd>
    a09e:	48 89 51 38          	mov    %rdx,0x38(%rcx)
    a0a2:	48 89 4a 40          	mov    %rcx,0x40(%rdx)
    a0a6:	eb c3                	jmp    a06b <ema_new+0xbb>
    a0a8:	e8 c3 68 00 00       	call   10970 <__stack_chk_fail>
    a0ad:	e8 85 82 00 00       	call   12337 <abort>
    a0b2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a0b9:	00 00 00 
    a0bc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000a0c0 <ema_destroy>:
    a0c0:	f3 0f 1e fa          	endbr64 
    a0c4:	53                   	push   %rbx
    a0c5:	48 89 fb             	mov    %rdi,%rbx
    a0c8:	48 85 ff             	test   %rdi,%rdi
    a0cb:	74 1c                	je     a0e9 <ema_destroy+0x29>
    a0cd:	48 8b 47 40          	mov    0x40(%rdi),%rax
    a0d1:	48 3b 78 38          	cmp    0x38(%rax),%rdi
    a0d5:	75 29                	jne    a100 <ema_destroy+0x40>
    a0d7:	48 8b 57 38          	mov    0x38(%rdi),%rdx
    a0db:	48 3b 7a 40          	cmp    0x40(%rdx),%rdi
    a0df:	75 1f                	jne    a100 <ema_destroy+0x40>
    a0e1:	48 89 50 38          	mov    %rdx,0x38(%rax)
    a0e5:	48 89 42 40          	mov    %rax,0x40(%rdx)
    a0e9:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    a0ed:	48 85 ff             	test   %rdi,%rdi
    a0f0:	74 05                	je     a0f7 <ema_destroy+0x37>
    a0f2:	e8 b9 ed ff ff       	call   8eb0 <bit_array_delete>
    a0f7:	48 89 df             	mov    %rbx,%rdi
    a0fa:	5b                   	pop    %rbx
    a0fb:	e9 30 15 00 00       	jmp    b630 <efree>
    a100:	e8 32 82 00 00       	call   12337 <abort>
    a105:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a10c:	00 00 00 
    a10f:	90                   	nop

000000000000a110 <destroy_ema_root>:
    a110:	f3 0f 1e fa          	endbr64 
    a114:	55                   	push   %rbp
    a115:	53                   	push   %rbx
    a116:	48 83 ec 08          	sub    $0x8,%rsp
    a11a:	48 8b 07             	mov    (%rdi),%rax
    a11d:	48 8b 58 38          	mov    0x38(%rax),%rbx
    a121:	48 39 d8             	cmp    %rbx,%rax
    a124:	74 1c                	je     a142 <destroy_ema_root+0x32>
    a126:	48 89 fd             	mov    %rdi,%rbp
    a129:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a130:	48 89 df             	mov    %rbx,%rdi
    a133:	48 8b 5b 38          	mov    0x38(%rbx),%rbx
    a137:	e8 84 ff ff ff       	call   a0c0 <ema_destroy>
    a13c:	48 39 5d 00          	cmp    %rbx,0x0(%rbp)
    a140:	75 ee                	jne    a130 <destroy_ema_root+0x20>
    a142:	48 83 c4 08          	add    $0x8,%rsp
    a146:	5b                   	pop    %rbx
    a147:	5d                   	pop    %rbp
    a148:	c3                   	ret    
    a149:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000a150 <do_commit>:
    a150:	f3 0f 1e fa          	endbr64 
    a154:	55                   	push   %rbp
    a155:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a159:	48 83 ca 08          	or     $0x8,%rdx
    a15d:	48 89 e5             	mov    %rsp,%rbp
    a160:	41 55                	push   %r13
    a162:	41 54                	push   %r12
    a164:	49 89 fc             	mov    %rdi,%r12
    a167:	53                   	push   %rbx
    a168:	48 8d 1c 37          	lea    (%rdi,%rsi,1),%rbx
    a16c:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    a170:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    a174:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a17b:	00 00 
    a17d:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    a182:	31 c0                	xor    %eax,%eax
    a184:	48 89 14 24          	mov    %rdx,(%rsp)
    a188:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    a18f:	00 00 
    a191:	0f 11 44 24 08       	movups %xmm0,0x8(%rsp)
    a196:	0f 11 44 24 18       	movups %xmm0,0x18(%rsp)
    a19b:	0f 11 44 24 28       	movups %xmm0,0x28(%rsp)
    a1a0:	84 c9                	test   %cl,%cl
    a1a2:	74 4c                	je     a1f0 <do_commit+0xa0>
    a1a4:	49 89 e5             	mov    %rsp,%r13
    a1a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    a1ae:	00 00 
    a1b0:	48 81 eb 00 10 00 00 	sub    $0x1000,%rbx
    a1b7:	4c 89 ef             	mov    %r13,%rdi
    a1ba:	48 89 de             	mov    %rbx,%rsi
    a1bd:	e8 fd 80 00 00       	call   122bf <do_eaccept>
    a1c2:	85 c0                	test   %eax,%eax
    a1c4:	75 57                	jne    a21d <do_commit+0xcd>
    a1c6:	49 39 dc             	cmp    %rbx,%r12
    a1c9:	72 e5                	jb     a1b0 <do_commit+0x60>
    a1cb:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    a1d0:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    a1d7:	00 00 
    a1d9:	75 47                	jne    a222 <do_commit+0xd2>
    a1db:	48 8d 65 e8          	lea    -0x18(%rbp),%rsp
    a1df:	31 c0                	xor    %eax,%eax
    a1e1:	5b                   	pop    %rbx
    a1e2:	41 5c                	pop    %r12
    a1e4:	41 5d                	pop    %r13
    a1e6:	5d                   	pop    %rbp
    a1e7:	c3                   	ret    
    a1e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a1ef:	00 
    a1f0:	48 39 df             	cmp    %rbx,%rdi
    a1f3:	73 d6                	jae    a1cb <do_commit+0x7b>
    a1f5:	49 89 e5             	mov    %rsp,%r13
    a1f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a1ff:	00 
    a200:	4c 89 e6             	mov    %r12,%rsi
    a203:	4c 89 ef             	mov    %r13,%rdi
    a206:	e8 b4 80 00 00       	call   122bf <do_eaccept>
    a20b:	85 c0                	test   %eax,%eax
    a20d:	75 0e                	jne    a21d <do_commit+0xcd>
    a20f:	49 81 c4 00 10 00 00 	add    $0x1000,%r12
    a216:	49 39 dc             	cmp    %rbx,%r12
    a219:	72 e5                	jb     a200 <do_commit+0xb0>
    a21b:	eb ae                	jmp    a1cb <do_commit+0x7b>
    a21d:	e8 15 81 00 00       	call   12337 <abort>
    a222:	e8 49 67 00 00       	call   10970 <__stack_chk_fail>
    a227:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    a22e:	00 00 

000000000000a230 <ema_do_commit>:
    a230:	f3 0f 1e fa          	endbr64 
    a234:	55                   	push   %rbp
    a235:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a239:	48 89 e5             	mov    %rsp,%rbp
    a23c:	41 57                	push   %r15
    a23e:	41 56                	push   %r14
    a240:	41 55                	push   %r13
    a242:	41 54                	push   %r12
    a244:	53                   	push   %rbx
    a245:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    a249:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    a24d:	4c 8b 77 08          	mov    0x8(%rdi),%r14
    a251:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a258:	00 00 
    a25a:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    a25f:	48 8b 07             	mov    (%rdi),%rax
    a262:	48 c7 04 24 0b 02 00 	movq   $0x20b,(%rsp)
    a269:	00 
    a26a:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    a271:	00 00 
    a273:	0f 11 44 24 08       	movups %xmm0,0x8(%rsp)
    a278:	0f 11 44 24 18       	movups %xmm0,0x18(%rsp)
    a27d:	0f 11 44 24 28       	movups %xmm0,0x28(%rsp)
    a282:	48 39 f0             	cmp    %rsi,%rax
    a285:	48 0f 43 f0          	cmovae %rax,%rsi
    a289:	49 01 c6             	add    %rax,%r14
    a28c:	49 39 d6             	cmp    %rdx,%r14
    a28f:	4c 0f 47 f2          	cmova  %rdx,%r14
    a293:	4c 39 f6             	cmp    %r14,%rsi
    a296:	73 61                	jae    a2f9 <ema_do_commit+0xc9>
    a298:	49 89 fd             	mov    %rdi,%r13
    a29b:	48 89 f3             	mov    %rsi,%rbx
    a29e:	49 89 e7             	mov    %rsp,%r15
    a2a1:	eb 15                	jmp    a2b8 <ema_do_commit+0x88>
    a2a3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a2a8:	48 81 c3 00 10 00 00 	add    $0x1000,%rbx
    a2af:	4c 39 f3             	cmp    %r14,%rbx
    a2b2:	73 45                	jae    a2f9 <ema_do_commit+0xc9>
    a2b4:	49 8b 45 00          	mov    0x0(%r13),%rax
    a2b8:	49 89 dc             	mov    %rbx,%r12
    a2bb:	49 8b 7d 20          	mov    0x20(%r13),%rdi
    a2bf:	49 29 c4             	sub    %rax,%r12
    a2c2:	49 c1 ec 0c          	shr    $0xc,%r12
    a2c6:	4c 89 e6             	mov    %r12,%rsi
    a2c9:	e8 02 ec ff ff       	call   8ed0 <bit_array_test>
    a2ce:	84 c0                	test   %al,%al
    a2d0:	75 d6                	jne    a2a8 <ema_do_commit+0x78>
    a2d2:	48 89 de             	mov    %rbx,%rsi
    a2d5:	4c 89 ff             	mov    %r15,%rdi
    a2d8:	e8 e2 7f 00 00       	call   122bf <do_eaccept>
    a2dd:	85 c0                	test   %eax,%eax
    a2df:	75 1a                	jne    a2fb <ema_do_commit+0xcb>
    a2e1:	49 8b 7d 20          	mov    0x20(%r13),%rdi
    a2e5:	4c 89 e6             	mov    %r12,%rsi
    a2e8:	48 81 c3 00 10 00 00 	add    $0x1000,%rbx
    a2ef:	e8 ac ed ff ff       	call   90a0 <bit_array_set>
    a2f4:	4c 39 f3             	cmp    %r14,%rbx
    a2f7:	72 bb                	jb     a2b4 <ema_do_commit+0x84>
    a2f9:	31 c0                	xor    %eax,%eax
    a2fb:	48 8b 54 24 78       	mov    0x78(%rsp),%rdx
    a300:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    a307:	00 00 
    a309:	75 0f                	jne    a31a <ema_do_commit+0xea>
    a30b:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    a30f:	5b                   	pop    %rbx
    a310:	41 5c                	pop    %r12
    a312:	41 5d                	pop    %r13
    a314:	41 5e                	pop    %r14
    a316:	41 5f                	pop    %r15
    a318:	5d                   	pop    %rbp
    a319:	c3                   	ret    
    a31a:	e8 51 66 00 00       	call   10970 <__stack_chk_fail>
    a31f:	90                   	nop

000000000000a320 <ema_do_commit_loop>:
    a320:	f3 0f 1e fa          	endbr64 
    a324:	41 55                	push   %r13
    a326:	41 54                	push   %r12
    a328:	55                   	push   %rbp
    a329:	53                   	push   %rbx
    a32a:	48 89 cb             	mov    %rcx,%rbx
    a32d:	48 83 ec 08          	sub    $0x8,%rsp
    a331:	48 8b 0f             	mov    (%rdi),%rcx
    a334:	48 39 f7             	cmp    %rsi,%rdi
    a337:	0f 84 9b 00 00 00    	je     a3d8 <ema_do_commit_loop+0xb8>
    a33d:	49 89 f5             	mov    %rsi,%r13
    a340:	48 89 d5             	mov    %rdx,%rbp
    a343:	48 89 f8             	mov    %rdi,%rax
    a346:	eb 26                	jmp    a36e <ema_do_commit_loop+0x4e>
    a348:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a34f:	00 
    a350:	f6 40 10 01          	testb  $0x1,0x10(%rax)
    a354:	75 27                	jne    a37d <ema_do_commit_loop+0x5d>
    a356:	48 03 48 08          	add    0x8(%rax),%rcx
    a35a:	48 8b 40 38          	mov    0x38(%rax),%rax
    a35e:	48 89 ca             	mov    %rcx,%rdx
    a361:	49 39 c5             	cmp    %rax,%r13
    a364:	74 3a                	je     a3a0 <ema_do_commit_loop+0x80>
    a366:	48 8b 08             	mov    (%rax),%rcx
    a369:	48 39 d1             	cmp    %rdx,%rcx
    a36c:	75 22                	jne    a390 <ema_do_commit_loop+0x70>
    a36e:	48 8b 50 18          	mov    0x18(%rax),%rdx
    a372:	48 f7 d2             	not    %rdx
    a375:	f7 c2 02 02 00 00    	test   $0x202,%edx
    a37b:	74 d3                	je     a350 <ema_do_commit_loop+0x30>
    a37d:	b8 0d 00 00 00       	mov    $0xd,%eax
    a382:	48 83 c4 08          	add    $0x8,%rsp
    a386:	5b                   	pop    %rbx
    a387:	5d                   	pop    %rbp
    a388:	41 5c                	pop    %r12
    a38a:	41 5d                	pop    %r13
    a38c:	c3                   	ret    
    a38d:	0f 1f 00             	nopl   (%rax)
    a390:	48 83 c4 08          	add    $0x8,%rsp
    a394:	b8 16 00 00 00       	mov    $0x16,%eax
    a399:	5b                   	pop    %rbx
    a39a:	5d                   	pop    %rbp
    a39b:	41 5c                	pop    %r12
    a39d:	41 5d                	pop    %r13
    a39f:	c3                   	ret    
    a3a0:	b8 16 00 00 00       	mov    $0x16,%eax
    a3a5:	48 39 d9             	cmp    %rbx,%rcx
    a3a8:	73 1c                	jae    a3c6 <ema_do_commit_loop+0xa6>
    a3aa:	eb d6                	jmp    a382 <ema_do_commit_loop+0x62>
    a3ac:	0f 1f 40 00          	nopl   0x0(%rax)
    a3b0:	48 89 da             	mov    %rbx,%rdx
    a3b3:	48 89 ee             	mov    %rbp,%rsi
    a3b6:	4c 8b 67 38          	mov    0x38(%rdi),%r12
    a3ba:	e8 71 fe ff ff       	call   a230 <ema_do_commit>
    a3bf:	85 c0                	test   %eax,%eax
    a3c1:	75 bf                	jne    a382 <ema_do_commit_loop+0x62>
    a3c3:	4c 89 e7             	mov    %r12,%rdi
    a3c6:	4c 39 ef             	cmp    %r13,%rdi
    a3c9:	75 e5                	jne    a3b0 <ema_do_commit_loop+0x90>
    a3cb:	31 c0                	xor    %eax,%eax
    a3cd:	48 83 c4 08          	add    $0x8,%rsp
    a3d1:	5b                   	pop    %rbx
    a3d2:	5d                   	pop    %rbp
    a3d3:	41 5c                	pop    %r12
    a3d5:	41 5d                	pop    %r13
    a3d7:	c3                   	ret    
    a3d8:	b8 16 00 00 00       	mov    $0x16,%eax
    a3dd:	48 39 d9             	cmp    %rbx,%rcx
    a3e0:	72 a0                	jb     a382 <ema_do_commit_loop+0x62>
    a3e2:	31 c0                	xor    %eax,%eax
    a3e4:	eb e7                	jmp    a3cd <ema_do_commit_loop+0xad>
    a3e6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a3ed:	00 00 00 

000000000000a3f0 <ema_change_to_tcs>:
    a3f0:	f3 0f 1e fa          	endbr64 
    a3f4:	55                   	push   %rbp
    a3f5:	48 89 e5             	mov    %rsp,%rbp
    a3f8:	41 56                	push   %r14
    a3fa:	41 55                	push   %r13
    a3fc:	41 54                	push   %r12
    a3fe:	53                   	push   %rbx
    a3ff:	48 89 fb             	mov    %rdi,%rbx
    a402:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    a406:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
    a40d:	4c 8b 6f 18          	mov    0x18(%rdi),%r13
    a411:	48 8b 7f 20          	mov    0x20(%rdi),%rdi
    a415:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a41c:	00 00 
    a41e:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
    a425:	00 
    a426:	31 c0                	xor    %eax,%eax
    a428:	45 89 ee             	mov    %r13d,%r14d
    a42b:	41 81 e6 00 ff 00 00 	and    $0xff00,%r14d
    a432:	48 85 ff             	test   %rdi,%rdi
    a435:	74 33                	je     a46a <ema_change_to_tcs+0x7a>
    a437:	49 89 f4             	mov    %rsi,%r12
    a43a:	48 2b 33             	sub    (%rbx),%rsi
    a43d:	48 c1 ee 0c          	shr    $0xc,%rsi
    a441:	e8 8a ea ff ff       	call   8ed0 <bit_array_test>
    a446:	84 c0                	test   %al,%al
    a448:	74 20                	je     a46a <ema_change_to_tcs+0x7a>
    a44a:	41 81 fe 00 01 00 00 	cmp    $0x100,%r14d
    a451:	0f 84 e1 00 00 00    	je     a538 <ema_change_to_tcs+0x148>
    a457:	41 83 e5 07          	and    $0x7,%r13d
    a45b:	41 83 fd 03          	cmp    $0x3,%r13d
    a45f:	75 09                	jne    a46a <ema_change_to_tcs+0x7a>
    a461:	41 81 fe 00 02 00 00 	cmp    $0x200,%r14d
    a468:	74 2e                	je     a498 <ema_change_to_tcs+0xa8>
    a46a:	b8 0d 00 00 00       	mov    $0xd,%eax
    a46f:	48 8b 94 24 b8 00 00 	mov    0xb8(%rsp),%rdx
    a476:	00 
    a477:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    a47e:	00 00 
    a480:	0f 85 c4 00 00 00    	jne    a54a <ema_change_to_tcs+0x15a>
    a486:	48 8d 65 e0          	lea    -0x20(%rbp),%rsp
    a48a:	5b                   	pop    %rbx
    a48b:	41 5c                	pop    %r12
    a48d:	41 5d                	pop    %r13
    a48f:	41 5e                	pop    %r14
    a491:	5d                   	pop    %rbp
    a492:	c3                   	ret    
    a493:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a498:	b9 03 01 00 00       	mov    $0x103,%ecx
    a49d:	ba 03 02 00 00       	mov    $0x203,%edx
    a4a2:	be 00 10 00 00       	mov    $0x1000,%esi
    a4a7:	4c 89 e7             	mov    %r12,%rdi
    a4aa:	e8 71 b3 ff ff       	call   5820 <sgx_mm_modify_ocall>
    a4af:	85 c0                	test   %eax,%eax
    a4b1:	0f 85 89 00 00 00    	jne    a540 <ema_change_to_tcs+0x150>
    a4b7:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a4bb:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
    a4c0:	4c 89 e6             	mov    %r12,%rsi
    a4c3:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
    a4ca:	00 00 
    a4cc:	48 c7 44 24 40 10 01 	movq   $0x110,0x40(%rsp)
    a4d3:	00 00 
    a4d5:	0f 11 44 24 48       	movups %xmm0,0x48(%rsp)
    a4da:	0f 11 44 24 58       	movups %xmm0,0x58(%rsp)
    a4df:	0f 11 44 24 68       	movups %xmm0,0x68(%rsp)
    a4e4:	e8 d6 7d 00 00       	call   122bf <do_eaccept>
    a4e9:	85 c0                	test   %eax,%eax
    a4eb:	75 62                	jne    a54f <ema_change_to_tcs+0x15f>
    a4ed:	48 8d 4c 24 38       	lea    0x38(%rsp),%rcx
    a4f2:	49 8d 94 24 00 10 00 	lea    0x1000(%r12),%rdx
    a4f9:	00 
    a4fa:	4c 89 e6             	mov    %r12,%rsi
    a4fd:	48 89 df             	mov    %rbx,%rdi
    a500:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    a507:	00 00 
    a509:	e8 f2 f5 ff ff       	call   9b00 <ema_split_ex>
    a50e:	85 c0                	test   %eax,%eax
    a510:	0f 85 59 ff ff ff    	jne    a46f <ema_change_to_tcs+0x7f>
    a516:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
    a51b:	48 8b 51 18          	mov    0x18(%rcx),%rdx
    a51f:	48 81 e2 f8 00 ff ff 	and    $0xffffffffffff00f8,%rdx
    a526:	80 ce 01             	or     $0x1,%dh
    a529:	48 89 51 18          	mov    %rdx,0x18(%rcx)
    a52d:	e9 3d ff ff ff       	jmp    a46f <ema_change_to_tcs+0x7f>
    a532:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a538:	31 c0                	xor    %eax,%eax
    a53a:	e9 30 ff ff ff       	jmp    a46f <ema_change_to_tcs+0x7f>
    a53f:	90                   	nop
    a540:	b8 0e 00 00 00       	mov    $0xe,%eax
    a545:	e9 25 ff ff ff       	jmp    a46f <ema_change_to_tcs+0x7f>
    a54a:	e8 21 64 00 00       	call   10970 <__stack_chk_fail>
    a54f:	e8 e3 7d 00 00       	call   12337 <abort>
    a554:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a55b:	00 00 00 
    a55e:	66 90                	xchg   %ax,%ax

000000000000a560 <ema_modify_permissions>:
    a560:	f3 0f 1e fa          	endbr64 
    a564:	55                   	push   %rbp
    a565:	48 89 e5             	mov    %rsp,%rbp
    a568:	41 57                	push   %r15
    a56a:	41 56                	push   %r14
    a56c:	41 55                	push   %r13
    a56e:	41 54                	push   %r12
    a570:	53                   	push   %rbx
    a571:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    a575:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
    a57c:	89 4c 24 20          	mov    %ecx,0x20(%rsp)
    a580:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a587:	00 00 
    a589:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
    a590:	00 
    a591:	48 8b 47 18          	mov    0x18(%rdi),%rax
    a595:	41 89 c4             	mov    %eax,%r12d
    a598:	41 83 e4 07          	and    $0x7,%r12d
    a59c:	41 39 cc             	cmp    %ecx,%r12d
    a59f:	0f 84 e2 00 00 00    	je     a687 <ema_modify_permissions+0x127>
    a5a5:	49 89 fd             	mov    %rdi,%r13
    a5a8:	89 c7                	mov    %eax,%edi
    a5aa:	49 89 f7             	mov    %rsi,%r15
    a5ad:	44 8b 74 24 20       	mov    0x20(%rsp),%r14d
    a5b2:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    a5b6:	81 e7 00 ff 00 00    	and    $0xff00,%edi
    a5bc:	44 89 f1             	mov    %r14d,%ecx
    a5bf:	89 7c 24 0c          	mov    %edi,0xc(%rsp)
    a5c3:	48 39 f3             	cmp    %rsi,%rbx
    a5c6:	4c 0f 43 fb          	cmovae %rbx,%r15
    a5ca:	49 03 5d 08          	add    0x8(%r13),%rbx
    a5ce:	48 39 d3             	cmp    %rdx,%rbx
    a5d1:	48 0f 47 da          	cmova  %rdx,%rbx
    a5d5:	89 c2                	mov    %eax,%edx
    a5d7:	09 f9                	or     %edi,%ecx
    a5d9:	4c 89 ff             	mov    %r15,%rdi
    a5dc:	81 e2 07 ff 00 00    	and    $0xff07,%edx
    a5e2:	4c 89 7c 24 18       	mov    %r15,0x18(%rsp)
    a5e7:	48 89 de             	mov    %rbx,%rsi
    a5ea:	4c 29 fe             	sub    %r15,%rsi
    a5ed:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    a5f2:	e8 29 b2 ff ff       	call   5820 <sgx_mm_modify_ocall>
    a5f7:	85 c0                	test   %eax,%eax
    a5f9:	0f 85 21 01 00 00    	jne    a720 <ema_modify_permissions+0x1c0>
    a5ff:	44 89 f0             	mov    %r14d,%eax
    a602:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a606:	48 8d 54 24 40       	lea    0x40(%rsp),%rdx
    a60b:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
    a612:	00 00 
    a614:	0d 20 02 00 00       	or     $0x220,%eax
    a619:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
    a61e:	48 98                	cltq   
    a620:	0f 11 44 24 48       	movups %xmm0,0x48(%rsp)
    a625:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    a62a:	44 89 f0             	mov    %r14d,%eax
    a62d:	45 09 e6             	or     %r12d,%r14d
    a630:	83 e0 06             	and    $0x6,%eax
    a633:	0f 11 44 24 58       	movups %xmm0,0x58(%rsp)
    a638:	89 44 24 24          	mov    %eax,0x24(%rsp)
    a63c:	0f 11 44 24 68       	movups %xmm0,0x68(%rsp)
    a641:	49 39 df             	cmp    %rbx,%r15
    a644:	72 76                	jb     a6bc <ema_modify_permissions+0x15c>
    a646:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a64d:	00 00 00 
    a650:	49 8b 45 00          	mov    0x0(%r13),%rax
    a654:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    a659:	48 39 d0             	cmp    %rdx,%rax
    a65c:	0f 82 ce 00 00 00    	jb     a730 <ema_modify_permissions+0x1d0>
    a662:	49 03 45 08          	add    0x8(%r13),%rax
    a666:	48 39 c3             	cmp    %rax,%rbx
    a669:	0f 82 f9 00 00 00    	jb     a768 <ema_modify_permissions+0x208>
    a66f:	49 8b 45 18          	mov    0x18(%r13),%rax
    a673:	48 63 54 24 20       	movslq 0x20(%rsp),%rdx
    a678:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    a67c:	48 09 d0             	or     %rdx,%rax
    a67f:	49 89 45 18          	mov    %rax,0x18(%r13)
    a683:	85 d2                	test   %edx,%edx
    a685:	74 79                	je     a700 <ema_modify_permissions+0x1a0>
    a687:	31 c0                	xor    %eax,%eax
    a689:	48 8b 94 24 b8 00 00 	mov    0xb8(%rsp),%rdx
    a690:	00 
    a691:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    a698:	00 00 
    a69a:	0f 85 f8 00 00 00    	jne    a798 <ema_modify_permissions+0x238>
    a6a0:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    a6a4:	5b                   	pop    %rbx
    a6a5:	41 5c                	pop    %r12
    a6a7:	41 5d                	pop    %r13
    a6a9:	41 5e                	pop    %r14
    a6ab:	41 5f                	pop    %r15
    a6ad:	5d                   	pop    %rbp
    a6ae:	c3                   	ret    
    a6af:	90                   	nop
    a6b0:	49 81 c7 00 10 00 00 	add    $0x1000,%r15
    a6b7:	49 39 df             	cmp    %rbx,%r15
    a6ba:	73 94                	jae    a650 <ema_modify_permissions+0xf0>
    a6bc:	45 39 f4             	cmp    %r14d,%r12d
    a6bf:	74 0d                	je     a6ce <ema_modify_permissions+0x16e>
    a6c1:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
    a6c6:	4c 89 fe             	mov    %r15,%rsi
    a6c9:	e8 2d 7c 00 00       	call   122fb <do_emodpe>
    a6ce:	83 7c 24 24 06       	cmpl   $0x6,0x24(%rsp)
    a6d3:	74 db                	je     a6b0 <ema_modify_permissions+0x150>
    a6d5:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
    a6da:	4c 89 fe             	mov    %r15,%rsi
    a6dd:	e8 dd 7b 00 00       	call   122bf <do_eaccept>
    a6e2:	85 c0                	test   %eax,%eax
    a6e4:	75 a3                	jne    a689 <ema_modify_permissions+0x129>
    a6e6:	49 81 c7 00 10 00 00 	add    $0x1000,%r15
    a6ed:	49 39 df             	cmp    %rbx,%r15
    a6f0:	0f 83 5a ff ff ff    	jae    a650 <ema_modify_permissions+0xf0>
    a6f6:	45 39 f4             	cmp    %r14d,%r12d
    a6f9:	74 da                	je     a6d5 <ema_modify_permissions+0x175>
    a6fb:	eb c4                	jmp    a6c1 <ema_modify_permissions+0x161>
    a6fd:	0f 1f 00             	nopl   (%rax)
    a700:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
    a704:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    a709:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    a70e:	89 ca                	mov    %ecx,%edx
    a710:	e8 0b b1 ff ff       	call   5820 <sgx_mm_modify_ocall>
    a715:	85 c0                	test   %eax,%eax
    a717:	0f 84 6a ff ff ff    	je     a687 <ema_modify_permissions+0x127>
    a71d:	0f 1f 00             	nopl   (%rax)
    a720:	b8 0e 00 00 00       	mov    $0xe,%eax
    a725:	e9 5f ff ff ff       	jmp    a689 <ema_modify_permissions+0x129>
    a72a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a730:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    a735:	31 d2                	xor    %edx,%edx
    a737:	48 8d 4c 24 38       	lea    0x38(%rsp),%rcx
    a73c:	4c 89 ef             	mov    %r13,%rdi
    a73f:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    a746:	00 00 
    a748:	e8 23 f2 ff ff       	call   9970 <ema_split>
    a74d:	85 c0                	test   %eax,%eax
    a74f:	0f 85 34 ff ff ff    	jne    a689 <ema_modify_permissions+0x129>
    a755:	4c 8b 6c 24 38       	mov    0x38(%rsp),%r13
    a75a:	49 8b 45 00          	mov    0x0(%r13),%rax
    a75e:	e9 ff fe ff ff       	jmp    a662 <ema_modify_permissions+0x102>
    a763:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a768:	4c 89 ef             	mov    %r13,%rdi
    a76b:	48 8d 4c 24 38       	lea    0x38(%rsp),%rcx
    a770:	ba 01 00 00 00       	mov    $0x1,%edx
    a775:	48 89 de             	mov    %rbx,%rsi
    a778:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    a77f:	00 00 
    a781:	e8 ea f1 ff ff       	call   9970 <ema_split>
    a786:	4c 8b 6c 24 38       	mov    0x38(%rsp),%r13
    a78b:	85 c0                	test   %eax,%eax
    a78d:	0f 84 dc fe ff ff    	je     a66f <ema_modify_permissions+0x10f>
    a793:	e9 f1 fe ff ff       	jmp    a689 <ema_modify_permissions+0x129>
    a798:	e8 d3 61 00 00       	call   10970 <__stack_chk_fail>
    a79d:	0f 1f 00             	nopl   (%rax)

000000000000a7a0 <ema_do_uncommit>:
    a7a0:	f3 0f 1e fa          	endbr64 
    a7a4:	41 55                	push   %r13
    a7a6:	49 89 f5             	mov    %rsi,%r13
    a7a9:	41 54                	push   %r12
    a7ab:	53                   	push   %rbx
    a7ac:	48 83 ec 10          	sub    $0x10,%rsp
    a7b0:	48 8b 07             	mov    (%rdi),%rax
    a7b3:	44 8b 67 18          	mov    0x18(%rdi),%r12d
    a7b7:	48 39 f0             	cmp    %rsi,%rax
    a7ba:	4c 0f 43 e8          	cmovae %rax,%r13
    a7be:	48 03 47 08          	add    0x8(%rdi),%rax
    a7c2:	48 39 d0             	cmp    %rdx,%rax
    a7c5:	48 0f 47 c2          	cmova  %rdx,%rax
    a7c9:	48 89 c3             	mov    %rax,%rbx
    a7cc:	41 83 e4 07          	and    $0x7,%r12d
    a7d0:	74 1e                	je     a7f0 <ema_do_uncommit+0x50>
    a7d2:	48 83 c4 10          	add    $0x10,%rsp
    a7d6:	44 89 e1             	mov    %r12d,%ecx
    a7d9:	48 89 da             	mov    %rbx,%rdx
    a7dc:	4c 89 ee             	mov    %r13,%rsi
    a7df:	5b                   	pop    %rbx
    a7e0:	41 5c                	pop    %r12
    a7e2:	41 5d                	pop    %r13
    a7e4:	e9 37 ed ff ff       	jmp    9520 <ema_do_uncommit_real>
    a7e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a7f0:	b9 01 00 00 00       	mov    $0x1,%ecx
    a7f5:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    a7fa:	e8 61 fd ff ff       	call   a560 <ema_modify_permissions>
    a7ff:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    a804:	eb cc                	jmp    a7d2 <ema_do_uncommit+0x32>
    a806:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a80d:	00 00 00 

000000000000a810 <ema_do_dealloc>:
    a810:	f3 0f 1e fa          	endbr64 
    a814:	41 54                	push   %r12
    a816:	49 89 f4             	mov    %rsi,%r12
    a819:	55                   	push   %rbp
    a81a:	53                   	push   %rbx
    a81b:	48 89 fb             	mov    %rdi,%rbx
    a81e:	48 83 ec 10          	sub    $0x10,%rsp
    a822:	48 8b 6f 08          	mov    0x8(%rdi),%rbp
    a826:	48 8b 4f 18          	mov    0x18(%rdi),%rcx
    a82a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a831:	00 00 
    a833:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    a838:	48 8b 07             	mov    (%rdi),%rax
    a83b:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    a842:	00 
    a843:	48 39 f0             	cmp    %rsi,%rax
    a846:	4c 0f 43 e0          	cmovae %rax,%r12
    a84a:	48 01 c5             	add    %rax,%rbp
    a84d:	48 39 d5             	cmp    %rdx,%rbp
    a850:	48 0f 47 ea          	cmova  %rdx,%rbp
    a854:	f6 47 10 01          	testb  $0x1,0x10(%rdi)
    a858:	75 1c                	jne    a876 <ema_do_dealloc+0x66>
    a85a:	83 e1 07             	and    $0x7,%ecx
    a85d:	74 71                	je     a8d0 <ema_do_dealloc+0xc0>
    a85f:	31 c9                	xor    %ecx,%ecx
    a861:	48 89 ea             	mov    %rbp,%rdx
    a864:	4c 89 e6             	mov    %r12,%rsi
    a867:	48 89 df             	mov    %rbx,%rdi
    a86a:	e8 b1 ec ff ff       	call   9520 <ema_do_uncommit_real>
    a86f:	85 c0                	test   %eax,%eax
    a871:	75 3e                	jne    a8b1 <ema_do_dealloc+0xa1>
    a873:	48 8b 03             	mov    (%rbx),%rax
    a876:	4c 39 e0             	cmp    %r12,%rax
    a879:	72 65                	jb     a8e0 <ema_do_dealloc+0xd0>
    a87b:	48 03 43 08          	add    0x8(%rbx),%rax
    a87f:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    a886:	00 
    a887:	48 39 c5             	cmp    %rax,%rbp
    a88a:	73 1b                	jae    a8a7 <ema_do_dealloc+0x97>
    a88c:	48 89 e1             	mov    %rsp,%rcx
    a88f:	ba 01 00 00 00       	mov    $0x1,%edx
    a894:	48 89 ee             	mov    %rbp,%rsi
    a897:	48 89 df             	mov    %rbx,%rdi
    a89a:	e8 d1 f0 ff ff       	call   9970 <ema_split>
    a89f:	85 c0                	test   %eax,%eax
    a8a1:	75 0e                	jne    a8b1 <ema_do_dealloc+0xa1>
    a8a3:	48 8b 1c 24          	mov    (%rsp),%rbx
    a8a7:	48 89 df             	mov    %rbx,%rdi
    a8aa:	e8 11 f8 ff ff       	call   a0c0 <ema_destroy>
    a8af:	31 c0                	xor    %eax,%eax
    a8b1:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    a8b6:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    a8bd:	00 00 
    a8bf:	75 3f                	jne    a900 <ema_do_dealloc+0xf0>
    a8c1:	48 83 c4 10          	add    $0x10,%rsp
    a8c5:	5b                   	pop    %rbx
    a8c6:	5d                   	pop    %rbp
    a8c7:	41 5c                	pop    %r12
    a8c9:	c3                   	ret    
    a8ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a8d0:	b9 01 00 00 00       	mov    $0x1,%ecx
    a8d5:	e8 86 fc ff ff       	call   a560 <ema_modify_permissions>
    a8da:	eb 83                	jmp    a85f <ema_do_dealloc+0x4f>
    a8dc:	0f 1f 40 00          	nopl   0x0(%rax)
    a8e0:	31 d2                	xor    %edx,%edx
    a8e2:	48 89 e1             	mov    %rsp,%rcx
    a8e5:	4c 89 e6             	mov    %r12,%rsi
    a8e8:	48 89 df             	mov    %rbx,%rdi
    a8eb:	e8 80 f0 ff ff       	call   9970 <ema_split>
    a8f0:	85 c0                	test   %eax,%eax
    a8f2:	75 bd                	jne    a8b1 <ema_do_dealloc+0xa1>
    a8f4:	48 8b 1c 24          	mov    (%rsp),%rbx
    a8f8:	48 8b 03             	mov    (%rbx),%rax
    a8fb:	e9 7b ff ff ff       	jmp    a87b <ema_do_dealloc+0x6b>
    a900:	e8 6b 60 00 00       	call   10970 <__stack_chk_fail>
    a905:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a90c:	00 00 00 
    a90f:	90                   	nop

000000000000a910 <ema_do_dealloc_loop>:
    a910:	f3 0f 1e fa          	endbr64 
    a914:	41 55                	push   %r13
    a916:	49 89 d5             	mov    %rdx,%r13
    a919:	41 54                	push   %r12
    a91b:	49 89 cc             	mov    %rcx,%r12
    a91e:	55                   	push   %rbp
    a91f:	48 89 f5             	mov    %rsi,%rbp
    a922:	53                   	push   %rbx
    a923:	48 83 ec 08          	sub    $0x8,%rsp
    a927:	eb 1d                	jmp    a946 <ema_do_dealloc_loop+0x36>
    a929:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a930:	4c 89 e2             	mov    %r12,%rdx
    a933:	4c 89 ee             	mov    %r13,%rsi
    a936:	48 8b 5f 38          	mov    0x38(%rdi),%rbx
    a93a:	e8 d1 fe ff ff       	call   a810 <ema_do_dealloc>
    a93f:	85 c0                	test   %eax,%eax
    a941:	75 0a                	jne    a94d <ema_do_dealloc_loop+0x3d>
    a943:	48 89 df             	mov    %rbx,%rdi
    a946:	48 39 ef             	cmp    %rbp,%rdi
    a949:	75 e5                	jne    a930 <ema_do_dealloc_loop+0x20>
    a94b:	31 c0                	xor    %eax,%eax
    a94d:	48 83 c4 08          	add    $0x8,%rsp
    a951:	5b                   	pop    %rbx
    a952:	5d                   	pop    %rbp
    a953:	41 5c                	pop    %r12
    a955:	41 5d                	pop    %r13
    a957:	c3                   	ret    
    a958:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a95f:	00 

000000000000a960 <ema_do_uncommit_loop>:
    a960:	f3 0f 1e fa          	endbr64 
    a964:	41 57                	push   %r15
    a966:	41 56                	push   %r14
    a968:	41 55                	push   %r13
    a96a:	41 54                	push   %r12
    a96c:	49 89 d4             	mov    %rdx,%r12
    a96f:	55                   	push   %rbp
    a970:	48 89 cd             	mov    %rcx,%rbp
    a973:	53                   	push   %rbx
    a974:	48 83 ec 18          	sub    $0x18,%rsp
    a978:	48 8b 17             	mov    (%rdi),%rdx
    a97b:	48 39 f7             	cmp    %rsi,%rdi
    a97e:	0f 84 d9 00 00 00    	je     aa5d <ema_do_uncommit_loop+0xfd>
    a984:	49 89 ff             	mov    %rdi,%r15
    a987:	48 89 f3             	mov    %rsi,%rbx
    a98a:	48 89 f8             	mov    %rdi,%rax
    a98d:	0f 1f 00             	nopl   (%rax)
    a990:	f6 40 10 01          	testb  $0x1,0x10(%rax)
    a994:	75 32                	jne    a9c8 <ema_do_uncommit_loop+0x68>
    a996:	48 8b 48 08          	mov    0x8(%rax),%rcx
    a99a:	48 8b 40 38          	mov    0x38(%rax),%rax
    a99e:	48 01 d1             	add    %rdx,%rcx
    a9a1:	48 39 c3             	cmp    %rax,%rbx
    a9a4:	74 3a                	je     a9e0 <ema_do_uncommit_loop+0x80>
    a9a6:	48 8b 10             	mov    (%rax),%rdx
    a9a9:	48 39 ca             	cmp    %rcx,%rdx
    a9ac:	74 e2                	je     a990 <ema_do_uncommit_loop+0x30>
    a9ae:	b8 16 00 00 00       	mov    $0x16,%eax
    a9b3:	48 83 c4 18          	add    $0x18,%rsp
    a9b7:	5b                   	pop    %rbx
    a9b8:	5d                   	pop    %rbp
    a9b9:	41 5c                	pop    %r12
    a9bb:	41 5d                	pop    %r13
    a9bd:	41 5e                	pop    %r14
    a9bf:	41 5f                	pop    %r15
    a9c1:	c3                   	ret    
    a9c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a9c8:	48 83 c4 18          	add    $0x18,%rsp
    a9cc:	b8 0d 00 00 00       	mov    $0xd,%eax
    a9d1:	5b                   	pop    %rbx
    a9d2:	5d                   	pop    %rbp
    a9d3:	41 5c                	pop    %r12
    a9d5:	41 5d                	pop    %r13
    a9d7:	41 5e                	pop    %r14
    a9d9:	41 5f                	pop    %r15
    a9db:	c3                   	ret    
    a9dc:	0f 1f 40 00          	nopl   0x0(%rax)
    a9e0:	b8 16 00 00 00       	mov    $0x16,%eax
    a9e5:	48 39 e9             	cmp    %rbp,%rcx
    a9e8:	73 1e                	jae    aa08 <ema_do_uncommit_loop+0xa8>
    a9ea:	eb c7                	jmp    a9b3 <ema_do_uncommit_loop+0x53>
    a9ec:	0f 1f 40 00          	nopl   0x0(%rax)
    a9f0:	44 89 c1             	mov    %r8d,%ecx
    a9f3:	4c 89 f2             	mov    %r14,%rdx
    a9f6:	4c 89 ce             	mov    %r9,%rsi
    a9f9:	4c 89 ff             	mov    %r15,%rdi
    a9fc:	e8 1f eb ff ff       	call   9520 <ema_do_uncommit_real>
    aa01:	85 c0                	test   %eax,%eax
    aa03:	75 ae                	jne    a9b3 <ema_do_uncommit_loop+0x53>
    aa05:	4d 89 ef             	mov    %r13,%r15
    aa08:	49 39 df             	cmp    %rbx,%r15
    aa0b:	74 5e                	je     aa6b <ema_do_uncommit_loop+0x10b>
    aa0d:	49 8b 07             	mov    (%r15),%rax
    aa10:	45 8b 47 18          	mov    0x18(%r15),%r8d
    aa14:	4d 8b 6f 38          	mov    0x38(%r15),%r13
    aa18:	49 39 c4             	cmp    %rax,%r12
    aa1b:	49 89 c1             	mov    %rax,%r9
    aa1e:	4d 0f 43 cc          	cmovae %r12,%r9
    aa22:	49 03 47 08          	add    0x8(%r15),%rax
    aa26:	48 39 e8             	cmp    %rbp,%rax
    aa29:	48 0f 47 c5          	cmova  %rbp,%rax
    aa2d:	49 89 c6             	mov    %rax,%r14
    aa30:	41 83 e0 07          	and    $0x7,%r8d
    aa34:	75 ba                	jne    a9f0 <ema_do_uncommit_loop+0x90>
    aa36:	b9 01 00 00 00       	mov    $0x1,%ecx
    aa3b:	48 89 ea             	mov    %rbp,%rdx
    aa3e:	4c 89 e6             	mov    %r12,%rsi
    aa41:	4c 89 ff             	mov    %r15,%rdi
    aa44:	44 89 44 24 0c       	mov    %r8d,0xc(%rsp)
    aa49:	4c 89 0c 24          	mov    %r9,(%rsp)
    aa4d:	e8 0e fb ff ff       	call   a560 <ema_modify_permissions>
    aa52:	44 8b 44 24 0c       	mov    0xc(%rsp),%r8d
    aa57:	4c 8b 0c 24          	mov    (%rsp),%r9
    aa5b:	eb 93                	jmp    a9f0 <ema_do_uncommit_loop+0x90>
    aa5d:	b8 16 00 00 00       	mov    $0x16,%eax
    aa62:	48 39 ca             	cmp    %rcx,%rdx
    aa65:	0f 82 48 ff ff ff    	jb     a9b3 <ema_do_uncommit_loop+0x53>
    aa6b:	48 83 c4 18          	add    $0x18,%rsp
    aa6f:	31 c0                	xor    %eax,%eax
    aa71:	5b                   	pop    %rbx
    aa72:	5d                   	pop    %rbp
    aa73:	41 5c                	pop    %r12
    aa75:	41 5d                	pop    %r13
    aa77:	41 5e                	pop    %r14
    aa79:	41 5f                	pop    %r15
    aa7b:	c3                   	ret    
    aa7c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000aa80 <ema_modify_permissions_loop>:
    aa80:	f3 0f 1e fa          	endbr64 
    aa84:	41 57                	push   %r15
    aa86:	41 56                	push   %r14
    aa88:	41 55                	push   %r13
    aa8a:	41 54                	push   %r12
    aa8c:	55                   	push   %rbp
    aa8d:	48 89 d5             	mov    %rdx,%rbp
    aa90:	53                   	push   %rbx
    aa91:	48 89 cb             	mov    %rcx,%rbx
    aa94:	48 83 ec 08          	sub    $0x8,%rsp
    aa98:	48 8b 17             	mov    (%rdi),%rdx
    aa9b:	48 39 f7             	cmp    %rsi,%rdi
    aa9e:	0f 84 de 00 00 00    	je     ab82 <ema_modify_permissions_loop+0x102>
    aaa4:	49 89 fe             	mov    %rdi,%r14
    aaa7:	49 89 f4             	mov    %rsi,%r12
    aaaa:	45 89 c5             	mov    %r8d,%r13d
    aaad:	49 89 ff             	mov    %rdi,%r15
    aab0:	41 f6 47 19 02       	testb  $0x2,0x19(%r15)
    aab5:	74 79                	je     ab30 <ema_modify_permissions_loop+0xb0>
    aab7:	41 f6 47 10 01       	testb  $0x1,0x10(%r15)
    aabc:	75 72                	jne    ab30 <ema_modify_permissions_loop+0xb0>
    aabe:	48 39 d5             	cmp    %rdx,%rbp
    aac1:	48 89 d6             	mov    %rdx,%rsi
    aac4:	49 8b 47 08          	mov    0x8(%r15),%rax
    aac8:	49 8b 7f 20          	mov    0x20(%r15),%rdi
    aacc:	48 0f 43 f5          	cmovae %rbp,%rsi
    aad0:	48 01 d0             	add    %rdx,%rax
    aad3:	48 29 d6             	sub    %rdx,%rsi
    aad6:	48 c1 ee 0c          	shr    $0xc,%rsi
    aada:	48 39 d8             	cmp    %rbx,%rax
    aadd:	48 0f 47 c3          	cmova  %rbx,%rax
    aae1:	48 29 d0             	sub    %rdx,%rax
    aae4:	48 c1 e8 0c          	shr    $0xc,%rax
    aae8:	48 85 ff             	test   %rdi,%rdi
    aaeb:	74 27                	je     ab14 <ema_modify_permissions_loop+0x94>
    aaed:	48 29 f0             	sub    %rsi,%rax
    aaf0:	48 89 c2             	mov    %rax,%rdx
    aaf3:	e8 28 e4 ff ff       	call   8f20 <bit_array_test_range>
    aaf8:	84 c0                	test   %al,%al
    aafa:	74 18                	je     ab14 <ema_modify_permissions_loop+0x94>
    aafc:	49 8b 47 08          	mov    0x8(%r15),%rax
    ab00:	49 03 07             	add    (%r15),%rax
    ab03:	4d 8b 7f 38          	mov    0x38(%r15),%r15
    ab07:	4d 39 fc             	cmp    %r15,%r12
    ab0a:	74 3c                	je     ab48 <ema_modify_permissions_loop+0xc8>
    ab0c:	49 8b 17             	mov    (%r15),%rdx
    ab0f:	48 39 d0             	cmp    %rdx,%rax
    ab12:	74 9c                	je     aab0 <ema_modify_permissions_loop+0x30>
    ab14:	b8 16 00 00 00       	mov    $0x16,%eax
    ab19:	48 83 c4 08          	add    $0x8,%rsp
    ab1d:	5b                   	pop    %rbx
    ab1e:	5d                   	pop    %rbp
    ab1f:	41 5c                	pop    %r12
    ab21:	41 5d                	pop    %r13
    ab23:	41 5e                	pop    %r14
    ab25:	41 5f                	pop    %r15
    ab27:	c3                   	ret    
    ab28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    ab2f:	00 
    ab30:	48 83 c4 08          	add    $0x8,%rsp
    ab34:	b8 0d 00 00 00       	mov    $0xd,%eax
    ab39:	5b                   	pop    %rbx
    ab3a:	5d                   	pop    %rbp
    ab3b:	41 5c                	pop    %r12
    ab3d:	41 5d                	pop    %r13
    ab3f:	41 5e                	pop    %r14
    ab41:	41 5f                	pop    %r15
    ab43:	c3                   	ret    
    ab44:	0f 1f 40 00          	nopl   0x0(%rax)
    ab48:	48 39 d8             	cmp    %rbx,%rax
    ab4b:	73 1f                	jae    ab6c <ema_modify_permissions_loop+0xec>
    ab4d:	eb c5                	jmp    ab14 <ema_modify_permissions_loop+0x94>
    ab4f:	90                   	nop
    ab50:	44 89 e9             	mov    %r13d,%ecx
    ab53:	48 89 da             	mov    %rbx,%rdx
    ab56:	48 89 ee             	mov    %rbp,%rsi
    ab59:	4c 89 f7             	mov    %r14,%rdi
    ab5c:	4d 8b 7e 38          	mov    0x38(%r14),%r15
    ab60:	e8 fb f9 ff ff       	call   a560 <ema_modify_permissions>
    ab65:	85 c0                	test   %eax,%eax
    ab67:	75 b0                	jne    ab19 <ema_modify_permissions_loop+0x99>
    ab69:	4d 89 fe             	mov    %r15,%r14
    ab6c:	4d 39 f4             	cmp    %r14,%r12
    ab6f:	75 df                	jne    ab50 <ema_modify_permissions_loop+0xd0>
    ab71:	31 c0                	xor    %eax,%eax
    ab73:	48 83 c4 08          	add    $0x8,%rsp
    ab77:	5b                   	pop    %rbx
    ab78:	5d                   	pop    %rbp
    ab79:	41 5c                	pop    %r12
    ab7b:	41 5d                	pop    %r13
    ab7d:	41 5e                	pop    %r14
    ab7f:	41 5f                	pop    %r15
    ab81:	c3                   	ret    
    ab82:	48 39 ca             	cmp    %rcx,%rdx
    ab85:	72 8d                	jb     ab14 <ema_modify_permissions_loop+0x94>
    ab87:	31 c0                	xor    %eax,%eax
    ab89:	eb e8                	jmp    ab73 <ema_modify_permissions_loop+0xf3>
    ab8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000ab90 <ema_do_commit_data>:
    ab90:	f3 0f 1e fa          	endbr64 
    ab94:	55                   	push   %rbp
    ab95:	41 81 c8 00 02 00 00 	or     $0x200,%r8d
    ab9c:	66 0f ef c0          	pxor   %xmm0,%xmm0
    aba0:	4d 63 c0             	movslq %r8d,%r8
    aba3:	48 89 e5             	mov    %rsp,%rbp
    aba6:	41 57                	push   %r15
    aba8:	41 56                	push   %r14
    abaa:	49 89 f6             	mov    %rsi,%r14
    abad:	41 55                	push   %r13
    abaf:	41 54                	push   %r12
    abb1:	49 89 d4             	mov    %rdx,%r12
    abb4:	53                   	push   %rbx
    abb5:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    abb9:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
    abc0:	48 89 7c 24 38       	mov    %rdi,0x38(%rsp)
    abc5:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    abcc:	00 00 
    abce:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
    abd5:	00 
    abd6:	31 c0                	xor    %eax,%eax
    abd8:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
    abdd:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
    abe4:	00 00 
    abe6:	0f 11 44 24 48       	movups %xmm0,0x48(%rsp)
    abeb:	0f 11 44 24 58       	movups %xmm0,0x58(%rsp)
    abf0:	0f 11 44 24 68       	movups %xmm0,0x68(%rsp)
    abf5:	48 39 d6             	cmp    %rdx,%rsi
    abf8:	73 46                	jae    ac40 <ema_do_commit_data+0xb0>
    abfa:	48 29 f1             	sub    %rsi,%rcx
    abfd:	49 89 f7             	mov    %rsi,%r15
    ac00:	4c 8d 6c 24 40       	lea    0x40(%rsp),%r13
    ac05:	48 89 cb             	mov    %rcx,%rbx
    ac08:	eb 12                	jmp    ac1c <ema_do_commit_data+0x8c>
    ac0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    ac10:	49 81 c7 00 10 00 00 	add    $0x1000,%r15
    ac17:	4d 39 e7             	cmp    %r12,%r15
    ac1a:	73 24                	jae    ac40 <ema_do_commit_data+0xb0>
    ac1c:	4a 8d 14 3b          	lea    (%rbx,%r15,1),%rdx
    ac20:	4c 89 fe             	mov    %r15,%rsi
    ac23:	4c 89 ef             	mov    %r13,%rdi
    ac26:	e8 b2 76 00 00       	call   122dd <do_eacceptcopy>
    ac2b:	85 c0                	test   %eax,%eax
    ac2d:	74 e1                	je     ac10 <ema_do_commit_data+0x80>
    ac2f:	b8 0e 00 00 00       	mov    $0xe,%eax
    ac34:	eb 1a                	jmp    ac50 <ema_do_commit_data+0xc0>
    ac36:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    ac3d:	00 00 00 
    ac40:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
    ac45:	4c 89 e2             	mov    %r12,%rdx
    ac48:	4c 89 f6             	mov    %r14,%rsi
    ac4b:	e8 70 eb ff ff       	call   97c0 <ema_set_eaccept>
    ac50:	48 8b 94 24 b8 00 00 	mov    0xb8(%rsp),%rdx
    ac57:	00 
    ac58:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    ac5f:	00 00 
    ac61:	75 0f                	jne    ac72 <ema_do_commit_data+0xe2>
    ac63:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    ac67:	5b                   	pop    %rbx
    ac68:	41 5c                	pop    %r12
    ac6a:	41 5d                	pop    %r13
    ac6c:	41 5e                	pop    %r14
    ac6e:	41 5f                	pop    %r15
    ac70:	5d                   	pop    %rbp
    ac71:	c3                   	ret    
    ac72:	e8 f9 5c 00 00       	call   10970 <__stack_chk_fail>
    ac77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    ac7e:	00 00 

000000000000ac80 <ema_do_commit_data_loop>:
    ac80:	f3 0f 1e fa          	endbr64 
    ac84:	41 57                	push   %r15
    ac86:	41 56                	push   %r14
    ac88:	41 55                	push   %r13
    ac8a:	41 54                	push   %r12
    ac8c:	55                   	push   %rbp
    ac8d:	53                   	push   %rbx
    ac8e:	48 89 cb             	mov    %rcx,%rbx
    ac91:	48 83 ec 18          	sub    $0x18,%rsp
    ac95:	48 8b 0f             	mov    (%rdi),%rcx
    ac98:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    ac9d:	44 89 4c 24 04       	mov    %r9d,0x4(%rsp)
    aca2:	48 39 f7             	cmp    %rsi,%rdi
    aca5:	0f 84 a2 00 00 00    	je     ad4d <ema_do_commit_data_loop+0xcd>
    acab:	48 89 fd             	mov    %rdi,%rbp
    acae:	49 89 f4             	mov    %rsi,%r12
    acb1:	49 89 d7             	mov    %rdx,%r15
    acb4:	49 89 fd             	mov    %rdi,%r13
    acb7:	eb 72                	jmp    ad2b <ema_do_commit_data_loop+0xab>
    acb9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    acc0:	41 8b 45 10          	mov    0x10(%r13),%eax
    acc4:	a8 01                	test   $0x1,%al
    acc6:	75 71                	jne    ad39 <ema_do_commit_data_loop+0xb9>
    acc8:	a8 04                	test   $0x4,%al
    acca:	0f 84 86 00 00 00    	je     ad56 <ema_do_commit_data_loop+0xd6>
    acd0:	49 8b 7d 20          	mov    0x20(%r13),%rdi
    acd4:	49 8b 45 08          	mov    0x8(%r13),%rax
    acd8:	48 85 ff             	test   %rdi,%rdi
    acdb:	74 39                	je     ad16 <ema_do_commit_data_loop+0x96>
    acdd:	49 39 cf             	cmp    %rcx,%r15
    ace0:	48 89 ce             	mov    %rcx,%rsi
    ace3:	49 0f 43 f7          	cmovae %r15,%rsi
    ace7:	48 01 c8             	add    %rcx,%rax
    acea:	48 29 ce             	sub    %rcx,%rsi
    aced:	48 c1 ee 0c          	shr    $0xc,%rsi
    acf1:	48 39 d8             	cmp    %rbx,%rax
    acf4:	48 0f 47 c3          	cmova  %rbx,%rax
    acf8:	48 89 c2             	mov    %rax,%rdx
    acfb:	48 29 ca             	sub    %rcx,%rdx
    acfe:	48 c1 ea 0c          	shr    $0xc,%rdx
    ad02:	48 29 f2             	sub    %rsi,%rdx
    ad05:	e8 d6 e2 ff ff       	call   8fe0 <bit_array_test_range_any>
    ad0a:	84 c0                	test   %al,%al
    ad0c:	75 2b                	jne    ad39 <ema_do_commit_data_loop+0xb9>
    ad0e:	49 8b 4d 00          	mov    0x0(%r13),%rcx
    ad12:	49 8b 45 08          	mov    0x8(%r13),%rax
    ad16:	4d 8b 6d 38          	mov    0x38(%r13),%r13
    ad1a:	48 01 c8             	add    %rcx,%rax
    ad1d:	4d 39 ec             	cmp    %r13,%r12
    ad20:	74 4e                	je     ad70 <ema_do_commit_data_loop+0xf0>
    ad22:	49 8b 4d 00          	mov    0x0(%r13),%rcx
    ad26:	48 39 c8             	cmp    %rcx,%rax
    ad29:	75 2b                	jne    ad56 <ema_do_commit_data_loop+0xd6>
    ad2b:	49 8b 45 18          	mov    0x18(%r13),%rax
    ad2f:	48 f7 d0             	not    %rax
    ad32:	a9 02 02 00 00       	test   $0x202,%eax
    ad37:	74 87                	je     acc0 <ema_do_commit_data_loop+0x40>
    ad39:	b8 0d 00 00 00       	mov    $0xd,%eax
    ad3e:	48 83 c4 18          	add    $0x18,%rsp
    ad42:	5b                   	pop    %rbx
    ad43:	5d                   	pop    %rbp
    ad44:	41 5c                	pop    %r12
    ad46:	41 5d                	pop    %r13
    ad48:	41 5e                	pop    %r14
    ad4a:	41 5f                	pop    %r15
    ad4c:	c3                   	ret    
    ad4d:	48 39 d9             	cmp    %rbx,%rcx
    ad50:	0f 83 98 00 00 00    	jae    adee <ema_do_commit_data_loop+0x16e>
    ad56:	48 83 c4 18          	add    $0x18,%rsp
    ad5a:	b8 16 00 00 00       	mov    $0x16,%eax
    ad5f:	5b                   	pop    %rbx
    ad60:	5d                   	pop    %rbp
    ad61:	41 5c                	pop    %r12
    ad63:	41 5d                	pop    %r13
    ad65:	41 5e                	pop    %r14
    ad67:	41 5f                	pop    %r15
    ad69:	c3                   	ret    
    ad6a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    ad70:	48 39 d8             	cmp    %rbx,%rax
    ad73:	72 e1                	jb     ad56 <ema_do_commit_data_loop+0xd6>
    ad75:	49 89 ee             	mov    %rbp,%r14
    ad78:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    ad7f:	00 
    ad80:	49 8b 16             	mov    (%r14),%rdx
    ad83:	4c 89 fe             	mov    %r15,%rsi
    ad86:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    ad8b:	4c 89 f7             	mov    %r14,%rdi
    ad8e:	44 8b 44 24 04       	mov    0x4(%rsp),%r8d
    ad93:	4c 39 fa             	cmp    %r15,%rdx
    ad96:	48 0f 43 f2          	cmovae %rdx,%rsi
    ad9a:	49 03 56 08          	add    0x8(%r14),%rdx
    ad9e:	48 89 f1             	mov    %rsi,%rcx
    ada1:	4c 29 f9             	sub    %r15,%rcx
    ada4:	48 01 c1             	add    %rax,%rcx
    ada7:	48 39 da             	cmp    %rbx,%rdx
    adaa:	48 0f 47 d3          	cmova  %rbx,%rdx
    adae:	e8 dd fd ff ff       	call   ab90 <ema_do_commit_data>
    adb3:	85 c0                	test   %eax,%eax
    adb5:	75 87                	jne    ad3e <ema_do_commit_data_loop+0xbe>
    adb7:	4d 8b 76 38          	mov    0x38(%r14),%r14
    adbb:	4d 39 ee             	cmp    %r13,%r14
    adbe:	75 c0                	jne    ad80 <ema_do_commit_data_loop+0x100>
    adc0:	49 39 ec             	cmp    %rbp,%r12
    adc3:	74 29                	je     adee <ema_do_commit_data_loop+0x16e>
    adc5:	0f 1f 00             	nopl   (%rax)
    adc8:	8b 4c 24 04          	mov    0x4(%rsp),%ecx
    adcc:	48 89 da             	mov    %rbx,%rdx
    adcf:	4c 89 fe             	mov    %r15,%rsi
    add2:	48 89 ef             	mov    %rbp,%rdi
    add5:	4c 8b 75 38          	mov    0x38(%rbp),%r14
    add9:	e8 82 f7 ff ff       	call   a560 <ema_modify_permissions>
    adde:	85 c0                	test   %eax,%eax
    ade0:	0f 85 58 ff ff ff    	jne    ad3e <ema_do_commit_data_loop+0xbe>
    ade6:	4c 89 f5             	mov    %r14,%rbp
    ade9:	49 39 ec             	cmp    %rbp,%r12
    adec:	75 da                	jne    adc8 <ema_do_commit_data_loop+0x148>
    adee:	48 83 c4 18          	add    $0x18,%rsp
    adf2:	31 c0                	xor    %eax,%eax
    adf4:	5b                   	pop    %rbx
    adf5:	5d                   	pop    %rbp
    adf6:	41 5c                	pop    %r12
    adf8:	41 5d                	pop    %r13
    adfa:	41 5e                	pop    %r14
    adfc:	41 5f                	pop    %r15
    adfe:	c3                   	ret    
    adff:	90                   	nop

000000000000ae00 <ema_realloc_from_reserve_range>:
    ae00:	f3 0f 1e fa          	endbr64 
    ae04:	41 57                	push   %r15
    ae06:	41 56                	push   %r14
    ae08:	41 55                	push   %r13
    ae0a:	49 89 d5             	mov    %rdx,%r13
    ae0d:	41 54                	push   %r12
    ae0f:	49 89 cc             	mov    %rcx,%r12
    ae12:	55                   	push   %rbp
    ae13:	48 89 fd             	mov    %rdi,%rbp
    ae16:	53                   	push   %rbx
    ae17:	48 89 f3             	mov    %rsi,%rbx
    ae1a:	48 83 ec 28          	sub    $0x28,%rsp
    ae1e:	4c 8b 37             	mov    (%rdi),%r14
    ae21:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
    ae26:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    ae2b:	44 89 44 24 04       	mov    %r8d,0x4(%rsp)
    ae30:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    ae35:	48 39 f7             	cmp    %rsi,%rdi
    ae38:	74 4a                	je     ae84 <ema_realloc_from_reserve_range+0x84>
    ae3a:	49 89 ff             	mov    %rdi,%r15
    ae3d:	eb 1a                	jmp    ae59 <ema_realloc_from_reserve_range+0x59>
    ae3f:	90                   	nop
    ae40:	4d 39 37             	cmp    %r14,(%r15)
    ae43:	75 20                	jne    ae65 <ema_realloc_from_reserve_range+0x65>
    ae45:	41 f6 47 10 01       	testb  $0x1,0x10(%r15)
    ae4a:	74 19                	je     ae65 <ema_realloc_from_reserve_range+0x65>
    ae4c:	4d 03 77 08          	add    0x8(%r15),%r14
    ae50:	4d 8b 7f 38          	mov    0x38(%r15),%r15
    ae54:	49 39 df             	cmp    %rbx,%r15
    ae57:	74 27                	je     ae80 <ema_realloc_from_reserve_range+0x80>
    ae59:	4c 89 ff             	mov    %r15,%rdi
    ae5c:	e8 7f 07 00 00       	call   b5e0 <can_erealloc>
    ae61:	85 c0                	test   %eax,%eax
    ae63:	75 db                	jne    ae40 <ema_realloc_from_reserve_range+0x40>
    ae65:	48 83 c4 28          	add    $0x28,%rsp
    ae69:	31 c0                	xor    %eax,%eax
    ae6b:	5b                   	pop    %rbx
    ae6c:	5d                   	pop    %rbp
    ae6d:	41 5c                	pop    %r12
    ae6f:	41 5d                	pop    %r13
    ae71:	41 5e                	pop    %r14
    ae73:	41 5f                	pop    %r15
    ae75:	c3                   	ret    
    ae76:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    ae7d:	00 00 00 
    ae80:	4c 8b 75 00          	mov    0x0(%rbp),%r14
    ae84:	48 8b 5b 40          	mov    0x40(%rbx),%rbx
    ae88:	4d 39 ee             	cmp    %r13,%r14
    ae8b:	72 6b                	jb     aef8 <ema_realloc_from_reserve_range+0xf8>
    ae8d:	48 8b 43 08          	mov    0x8(%rbx),%rax
    ae91:	48 03 03             	add    (%rbx),%rax
    ae94:	49 39 c4             	cmp    %rax,%r12
    ae97:	0f 82 88 00 00 00    	jb     af25 <ema_realloc_from_reserve_range+0x125>
    ae9d:	48 8b 6b 38          	mov    0x38(%rbx),%rbp
    aea1:	48 89 6c 24 10       	mov    %rbp,0x10(%rsp)
    aea6:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
    aeab:	48 39 dd             	cmp    %rbx,%rbp
    aeae:	74 11                	je     aec1 <ema_realloc_from_reserve_range+0xc1>
    aeb0:	48 89 df             	mov    %rbx,%rdi
    aeb3:	48 8b 5b 38          	mov    0x38(%rbx),%rbx
    aeb7:	e8 04 f2 ff ff       	call   a0c0 <ema_destroy>
    aebc:	48 39 dd             	cmp    %rbx,%rbp
    aebf:	75 ef                	jne    aeb0 <ema_realloc_from_reserve_range+0xb0>
    aec1:	48 83 ec 08          	sub    $0x8,%rsp
    aec5:	4c 89 e6             	mov    %r12,%rsi
    aec8:	4c 89 ef             	mov    %r13,%rdi
    aecb:	55                   	push   %rbp
    aecc:	4c 8b 4c 24 78       	mov    0x78(%rsp),%r9
    aed1:	4c 29 ee             	sub    %r13,%rsi
    aed4:	4c 8b 44 24 70       	mov    0x70(%rsp),%r8
    aed9:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    aede:	8b 54 24 14          	mov    0x14(%rsp),%edx
    aee2:	e8 c9 f0 ff ff       	call   9fb0 <ema_new>
    aee7:	5a                   	pop    %rdx
    aee8:	59                   	pop    %rcx
    aee9:	48 83 c4 28          	add    $0x28,%rsp
    aeed:	5b                   	pop    %rbx
    aeee:	5d                   	pop    %rbp
    aeef:	41 5c                	pop    %r12
    aef1:	41 5d                	pop    %r13
    aef3:	41 5e                	pop    %r14
    aef5:	41 5f                	pop    %r15
    aef7:	c3                   	ret    
    aef8:	31 d2                	xor    %edx,%edx
    aefa:	48 8d 4c 24 18       	lea    0x18(%rsp),%rcx
    aeff:	4c 89 ee             	mov    %r13,%rsi
    af02:	48 89 ef             	mov    %rbp,%rdi
    af05:	e8 66 ea ff ff       	call   9970 <ema_split>
    af0a:	85 c0                	test   %eax,%eax
    af0c:	0f 85 53 ff ff ff    	jne    ae65 <ema_realloc_from_reserve_range+0x65>
    af12:	48 39 dd             	cmp    %rbx,%rbp
    af15:	0f 85 72 ff ff ff    	jne    ae8d <ema_realloc_from_reserve_range+0x8d>
    af1b:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
    af20:	e9 68 ff ff ff       	jmp    ae8d <ema_realloc_from_reserve_range+0x8d>
    af25:	31 d2                	xor    %edx,%edx
    af27:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
    af2c:	4c 89 e6             	mov    %r12,%rsi
    af2f:	48 89 df             	mov    %rbx,%rdi
    af32:	e8 39 ea ff ff       	call   9970 <ema_split>
    af37:	85 c0                	test   %eax,%eax
    af39:	0f 85 26 ff ff ff    	jne    ae65 <ema_realloc_from_reserve_range+0x65>
    af3f:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
    af44:	e9 5d ff ff ff       	jmp    aea6 <ema_realloc_from_reserve_range+0xa6>
    af49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000af50 <ema_do_alloc>:
    af50:	f3 0f 1e fa          	endbr64 
    af54:	41 55                	push   %r13
    af56:	41 54                	push   %r12
    af58:	55                   	push   %rbp
    af59:	53                   	push   %rbx
    af5a:	48 83 ec 08          	sub    $0x8,%rsp
    af5e:	8b 6f 10             	mov    0x10(%rdi),%ebp
    af61:	40 f6 c5 01          	test   $0x1,%bpl
    af65:	74 11                	je     af78 <ema_do_alloc+0x28>
    af67:	31 c0                	xor    %eax,%eax
    af69:	48 83 c4 08          	add    $0x8,%rsp
    af6d:	5b                   	pop    %rbx
    af6e:	5d                   	pop    %rbp
    af6f:	41 5c                	pop    %r12
    af71:	41 5d                	pop    %r13
    af73:	c3                   	ret    
    af74:	0f 1f 40 00          	nopl   0x0(%rax)
    af78:	4c 8b 6f 08          	mov    0x8(%rdi),%r13
    af7c:	8b 57 18             	mov    0x18(%rdi),%edx
    af7f:	48 89 fb             	mov    %rdi,%rbx
    af82:	89 e9                	mov    %ebp,%ecx
    af84:	4c 8b 27             	mov    (%rdi),%r12
    af87:	81 e2 00 ff 00 00    	and    $0xff00,%edx
    af8d:	4c 89 ee             	mov    %r13,%rsi
    af90:	4c 89 e7             	mov    %r12,%rdi
    af93:	e8 f8 a7 ff ff       	call   5790 <sgx_mm_alloc_ocall>
    af98:	89 c2                	mov    %eax,%edx
    af9a:	b8 0e 00 00 00       	mov    $0xe,%eax
    af9f:	85 d2                	test   %edx,%edx
    afa1:	75 c6                	jne    af69 <ema_do_alloc+0x19>
    afa3:	40 f6 c5 02          	test   $0x2,%bpl
    afa7:	74 37                	je     afe0 <ema_do_alloc+0x90>
    afa9:	89 e9                	mov    %ebp,%ecx
    afab:	48 8b 53 18          	mov    0x18(%rbx),%rdx
    afaf:	4c 89 ee             	mov    %r13,%rsi
    afb2:	4c 89 e7             	mov    %r12,%rdi
    afb5:	c1 e9 04             	shr    $0x4,%ecx
    afb8:	83 f1 01             	xor    $0x1,%ecx
    afbb:	83 e1 01             	and    $0x1,%ecx
    afbe:	e8 8d f1 ff ff       	call   a150 <do_commit>
    afc3:	85 c0                	test   %eax,%eax
    afc5:	75 a2                	jne    af69 <ema_do_alloc+0x19>
    afc7:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    afcb:	48 85 ff             	test   %rdi,%rdi
    afce:	74 50                	je     b020 <ema_do_alloc+0xd0>
    afd0:	e8 ab e1 ff ff       	call   9180 <bit_array_set_all>
    afd5:	31 c0                	xor    %eax,%eax
    afd7:	eb 90                	jmp    af69 <ema_do_alloc+0x19>
    afd9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    afe0:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    afe4:	48 85 ff             	test   %rdi,%rdi
    afe7:	74 0f                	je     aff8 <ema_do_alloc+0xa8>
    afe9:	e8 92 e2 ff ff       	call   9280 <bit_array_reset_all>
    afee:	31 c0                	xor    %eax,%eax
    aff0:	e9 74 ff ff ff       	jmp    af69 <ema_do_alloc+0x19>
    aff5:	0f 1f 00             	nopl   (%rax)
    aff8:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    affc:	48 c1 ef 0c          	shr    $0xc,%rdi
    b000:	e8 7b de ff ff       	call   8e80 <bit_array_new_reset>
    b005:	48 89 43 20          	mov    %rax,0x20(%rbx)
    b009:	48 85 c0             	test   %rax,%rax
    b00c:	0f 85 55 ff ff ff    	jne    af67 <ema_do_alloc+0x17>
    b012:	b8 0c 00 00 00       	mov    $0xc,%eax
    b017:	e9 4d ff ff ff       	jmp    af69 <ema_do_alloc+0x19>
    b01c:	0f 1f 40 00          	nopl   0x0(%rax)
    b020:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    b024:	48 c1 ef 0c          	shr    $0xc,%rdi
    b028:	e8 23 de ff ff       	call   8e50 <bit_array_new_set>
    b02d:	48 89 43 20          	mov    %rax,0x20(%rbx)
    b031:	48 85 c0             	test   %rax,%rax
    b034:	74 dc                	je     b012 <ema_do_alloc+0xc2>
    b036:	31 c0                	xor    %eax,%eax
    b038:	e9 2c ff ff ff       	jmp    af69 <ema_do_alloc+0x19>
    b03d:	0f 1f 00             	nopl   (%rax)

000000000000b040 <add_reserve>:
    b040:	41 54                	push   %r12
    b042:	55                   	push   %rbp
    b043:	53                   	push   %rbx
    b044:	31 db                	xor    %ebx,%ebx
    b046:	48 83 ec 10          	sub    $0x10,%rsp
    b04a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    b051:	00 00 
    b053:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    b058:	31 c0                	xor    %eax,%eax
    b05a:	80 3d 5f f1 00 00 00 	cmpb   $0x0,0xf15f(%rip)        # 1a1c0 <adding_reserve>
    b061:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    b068:	00 
    b069:	74 25                	je     b090 <add_reserve+0x50>
    b06b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    b070:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    b077:	00 00 
    b079:	0f 85 fb 00 00 00    	jne    b17a <add_reserve+0x13a>
    b07f:	48 83 c4 10          	add    $0x10,%rsp
    b083:	89 d8                	mov    %ebx,%eax
    b085:	5b                   	pop    %rbx
    b086:	5d                   	pop    %rbp
    b087:	41 5c                	pop    %r12
    b089:	c3                   	ret    
    b08a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b090:	48 8b 35 31 f0 00 00 	mov    0xf031(%rip),%rsi        # 1a0c8 <reserve_size_increment>
    b097:	49 89 e4             	mov    %rsp,%r12
    b09a:	48 89 fd             	mov    %rdi,%rbp
    b09d:	ba 01 00 00 00       	mov    $0x1,%edx
    b0a2:	4d 89 e1             	mov    %r12,%r9
    b0a5:	c6 05 14 f1 00 00 01 	movb   $0x1,0xf114(%rip)        # 1a1c0 <adding_reserve>
    b0ac:	48 39 f7             	cmp    %rsi,%rdi
    b0af:	48 0f 43 f7          	cmovae %rdi,%rsi
    b0b3:	45 31 c0             	xor    %r8d,%r8d
    b0b6:	31 c9                	xor    %ecx,%ecx
    b0b8:	31 ff                	xor    %edi,%edi
    b0ba:	48 89 35 07 f0 00 00 	mov    %rsi,0xf007(%rip)        # 1a0c8 <reserve_size_increment>
    b0c1:	48 81 c6 00 00 01 00 	add    $0x10000,%rsi
    b0c8:	e8 a3 0d 00 00       	call   be70 <sgx_mm_alloc>
    b0cd:	89 c3                	mov    %eax,%ebx
    b0cf:	85 c0                	test   %eax,%eax
    b0d1:	75 2a                	jne    b0fd <add_reserve+0xbd>
    b0d3:	48 8b 04 24          	mov    (%rsp),%rax
    b0d7:	48 8b 35 ea ef 00 00 	mov    0xefea(%rip),%rsi        # 1a0c8 <reserve_size_increment>
    b0de:	4d 89 e1             	mov    %r12,%r9
    b0e1:	31 c9                	xor    %ecx,%ecx
    b0e3:	45 31 c0             	xor    %r8d,%r8d
    b0e6:	ba 44 00 00 00       	mov    $0x44,%edx
    b0eb:	48 8d b8 00 80 00 00 	lea    0x8000(%rax),%rdi
    b0f2:	e8 79 0d 00 00       	call   be70 <sgx_mm_alloc>
    b0f7:	89 c3                	mov    %eax,%ebx
    b0f9:	85 c0                	test   %eax,%eax
    b0fb:	74 13                	je     b110 <add_reserve+0xd0>
    b0fd:	c6 05 bc f0 00 00 00 	movb   $0x0,0xf0bc(%rip)        # 1a1c0 <adding_reserve>
    b104:	e9 62 ff ff ff       	jmp    b06b <add_reserve+0x2b>
    b109:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b110:	48 8b 3c 24          	mov    (%rsp),%rdi
    b114:	48 89 ee             	mov    %rbp,%rsi
    b117:	e8 44 0e 00 00       	call   bf60 <sgx_mm_commit>
    b11c:	48 8b 04 24          	mov    (%rsp),%rax
    b120:	48 8b 15 a1 f0 00 00 	mov    0xf0a1(%rip),%rdx        # 1a1c8 <reserve_list>
    b127:	c6 05 92 f0 00 00 00 	movb   $0x0,0xf092(%rip)        # 1a1c0 <adding_reserve>
    b12e:	66 48 0f 6e c0       	movq   %rax,%xmm0
    b133:	48 89 50 18          	mov    %rdx,0x18(%rax)
    b137:	ba 00 00 00 10       	mov    $0x10000000,%edx
    b13c:	0f 16 05 85 ef 00 00 	movhps 0xef85(%rip),%xmm0        # 1a0c8 <reserve_size_increment>
    b143:	66 0f d4 05 55 7f 00 	paddq  0x7f55(%rip),%xmm0        # 130a0 <g_dyn_entry_table+0x70>
    b14a:	00 
    b14b:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    b152:	00 
    b153:	48 89 05 6e f0 00 00 	mov    %rax,0xf06e(%rip)        # 1a1c8 <reserve_list>
    b15a:	0f 11 00             	movups %xmm0,(%rax)
    b15d:	48 8b 05 64 ef 00 00 	mov    0xef64(%rip),%rax        # 1a0c8 <reserve_size_increment>
    b164:	48 01 c0             	add    %rax,%rax
    b167:	48 39 d0             	cmp    %rdx,%rax
    b16a:	48 0f 47 c2          	cmova  %rdx,%rax
    b16e:	48 89 05 53 ef 00 00 	mov    %rax,0xef53(%rip)        # 1a0c8 <reserve_size_increment>
    b175:	e9 f1 fe ff ff       	jmp    b06b <add_reserve+0x2b>
    b17a:	e8 f1 57 00 00       	call   10970 <__stack_chk_fail>
    b17f:	90                   	nop

000000000000b180 <remove_from_list>:
    b180:	48 8b 07             	mov    (%rdi),%rax
    b183:	48 23 05 46 ef 00 00 	and    0xef46(%rip),%rax        # 1a0d0 <size_mask>
    b18a:	48 89 c2             	mov    %rax,%rdx
    b18d:	48 8b 06             	mov    (%rsi),%rax
    b190:	48 39 f8             	cmp    %rdi,%rax
    b193:	74 43                	je     b1d8 <remove_from_list+0x58>
    b195:	48 83 fa 10          	cmp    $0x10,%rdx
    b199:	76 25                	jbe    b1c0 <remove_from_list+0x40>
    b19b:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    b19f:	48 8b 47 08          	mov    0x8(%rdi),%rax
    b1a3:	48 85 d2             	test   %rdx,%rdx
    b1a6:	74 04                	je     b1ac <remove_from_list+0x2c>
    b1a8:	48 89 42 08          	mov    %rax,0x8(%rdx)
    b1ac:	48 85 c0             	test   %rax,%rax
    b1af:	74 23                	je     b1d4 <remove_from_list+0x54>
    b1b1:	48 89 50 10          	mov    %rdx,0x10(%rax)
    b1b5:	c3                   	ret    
    b1b6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b1bd:	00 00 00 
    b1c0:	48 89 c2             	mov    %rax,%rdx
    b1c3:	48 8b 40 08          	mov    0x8(%rax),%rax
    b1c7:	48 39 f8             	cmp    %rdi,%rax
    b1ca:	75 f4                	jne    b1c0 <remove_from_list+0x40>
    b1cc:	48 8b 40 08          	mov    0x8(%rax),%rax
    b1d0:	48 89 42 08          	mov    %rax,0x8(%rdx)
    b1d4:	c3                   	ret    
    b1d5:	0f 1f 00             	nopl   (%rax)
    b1d8:	48 8b 40 08          	mov    0x8(%rax),%rax
    b1dc:	48 89 06             	mov    %rax,(%rsi)
    b1df:	48 85 c0             	test   %rax,%rax
    b1e2:	74 f0                	je     b1d4 <remove_from_list+0x54>
    b1e4:	48 83 fa 10          	cmp    $0x10,%rdx
    b1e8:	76 ea                	jbe    b1d4 <remove_from_list+0x54>
    b1ea:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    b1f1:	00 
    b1f2:	c3                   	ret    
    b1f3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b1fa:	00 00 00 
    b1fd:	0f 1f 00             	nopl   (%rax)

000000000000b200 <put_free_block>:
    b200:	48 8b 05 c9 ee 00 00 	mov    0xeec9(%rip),%rax        # 1a0d0 <size_mask>
    b207:	48 8b 17             	mov    (%rdi),%rdx
    b20a:	48 21 c2             	and    %rax,%rdx
    b20d:	48 81 fa 08 08 00 00 	cmp    $0x808,%rdx
    b214:	76 2a                	jbe    b240 <put_free_block+0x40>
    b216:	48 8b 15 b3 ef 00 00 	mov    0xefb3(%rip),%rdx        # 1a1d0 <large_block_list>
    b21d:	48 89 57 08          	mov    %rdx,0x8(%rdi)
    b221:	48 85 d2             	test   %rdx,%rdx
    b224:	74 0d                	je     b233 <put_free_block+0x33>
    b226:	48 23 02             	and    (%rdx),%rax
    b229:	48 83 f8 10          	cmp    $0x10,%rax
    b22d:	76 04                	jbe    b233 <put_free_block+0x33>
    b22f:	48 89 7a 10          	mov    %rdi,0x10(%rdx)
    b233:	48 89 3d 96 ef 00 00 	mov    %rdi,0xef96(%rip)        # 1a1d0 <large_block_list>
    b23a:	c3                   	ret    
    b23b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b240:	48 8d 4a f0          	lea    -0x10(%rdx),%rcx
    b244:	48 8d 35 95 ef 00 00 	lea    0xef95(%rip),%rsi        # 1a1e0 <exact_block_list>
    b24b:	48 c1 e9 03          	shr    $0x3,%rcx
    b24f:	48 83 fa 0f          	cmp    $0xf,%rdx
    b253:	ba 00 00 00 00       	mov    $0x0,%edx
    b258:	48 0f 47 d1          	cmova  %rcx,%rdx
    b25c:	48 8b 0c d6          	mov    (%rsi,%rdx,8),%rcx
    b260:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
    b264:	48 85 c9             	test   %rcx,%rcx
    b267:	74 0d                	je     b276 <put_free_block+0x76>
    b269:	48 23 01             	and    (%rcx),%rax
    b26c:	48 83 f8 10          	cmp    $0x10,%rax
    b270:	76 04                	jbe    b276 <put_free_block+0x76>
    b272:	48 89 79 10          	mov    %rdi,0x10(%rcx)
    b276:	48 89 3c d6          	mov    %rdi,(%rsi,%rdx,8)
    b27a:	c3                   	ret    
    b27b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000b280 <neighbor_right>:
    b280:	4c 8b 05 49 ee 00 00 	mov    0xee49(%rip),%r8        # 1a0d0 <size_mask>
    b287:	4c 89 c2             	mov    %r8,%rdx
    b28a:	48 23 17             	and    (%rdi),%rdx
    b28d:	48 8d 04 17          	lea    (%rdi,%rdx,1),%rax
    b291:	74 2f                	je     b2c2 <neighbor_right+0x42>
    b293:	48 8b 0d 2e ef 00 00 	mov    0xef2e(%rip),%rcx        # 1a1c8 <reserve_list>
    b29a:	48 85 c9             	test   %rcx,%rcx
    b29d:	74 23                	je     b2c2 <neighbor_right+0x42>
    b29f:	48 89 ca             	mov    %rcx,%rdx
    b2a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b2a8:	48 8b 32             	mov    (%rdx),%rsi
    b2ab:	48 39 f7             	cmp    %rsi,%rdi
    b2ae:	72 09                	jb     b2b9 <neighbor_right+0x39>
    b2b0:	48 03 72 10          	add    0x10(%rdx),%rsi
    b2b4:	48 39 c6             	cmp    %rax,%rsi
    b2b7:	73 0f                	jae    b2c8 <neighbor_right+0x48>
    b2b9:	48 8b 52 18          	mov    0x18(%rdx),%rdx
    b2bd:	48 85 d2             	test   %rdx,%rdx
    b2c0:	75 e6                	jne    b2a8 <neighbor_right+0x28>
    b2c2:	31 c0                	xor    %eax,%eax
    b2c4:	c3                   	ret    
    b2c5:	0f 1f 00             	nopl   (%rax)
    b2c8:	74 f8                	je     b2c2 <neighbor_right+0x42>
    b2ca:	4c 23 00             	and    (%rax),%r8
    b2cd:	74 f3                	je     b2c2 <neighbor_right+0x42>
    b2cf:	4a 8d 3c 00          	lea    (%rax,%r8,1),%rdi
    b2d3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b2d8:	48 8b 31             	mov    (%rcx),%rsi
    b2db:	48 39 f0             	cmp    %rsi,%rax
    b2de:	72 09                	jb     b2e9 <neighbor_right+0x69>
    b2e0:	48 03 71 10          	add    0x10(%rcx),%rsi
    b2e4:	48 39 fe             	cmp    %rdi,%rsi
    b2e7:	73 0f                	jae    b2f8 <neighbor_right+0x78>
    b2e9:	48 8b 49 18          	mov    0x18(%rcx),%rcx
    b2ed:	48 85 c9             	test   %rcx,%rcx
    b2f0:	75 e6                	jne    b2d8 <neighbor_right+0x58>
    b2f2:	31 c0                	xor    %eax,%eax
    b2f4:	c3                   	ret    
    b2f5:	0f 1f 00             	nopl   (%rax)
    b2f8:	48 39 d1             	cmp    %rdx,%rcx
    b2fb:	ba 00 00 00 00       	mov    $0x0,%edx
    b300:	48 0f 45 c2          	cmovne %rdx,%rax
    b304:	c3                   	ret    
    b305:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b30c:	00 00 00 
    b30f:	90                   	nop

000000000000b310 <payload_to_block>:
    b310:	f3 0f 1e fa          	endbr64 
    b314:	48 89 f8             	mov    %rdi,%rax
    b317:	48 2b 05 ba ed 00 00 	sub    0xedba(%rip),%rax        # 1a0d8 <header_size>
    b31e:	c3                   	ret    
    b31f:	90                   	nop

000000000000b320 <block_to_payload>:
    b320:	f3 0f 1e fa          	endbr64 
    b324:	48 8d 47 08          	lea    0x8(%rdi),%rax
    b328:	c3                   	ret    
    b329:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000b330 <is_alloced>:
    b330:	f3 0f 1e fa          	endbr64 
    b334:	48 8b 07             	mov    (%rdi),%rax
    b337:	83 e0 01             	and    $0x1,%eax
    b33a:	c3                   	ret    
    b33b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000b340 <block_size>:
    b340:	f3 0f 1e fa          	endbr64 
    b344:	48 8b 07             	mov    (%rdi),%rax
    b347:	48 23 05 82 ed 00 00 	and    0xed82(%rip),%rax        # 1a0d0 <size_mask>
    b34e:	c3                   	ret    
    b34f:	90                   	nop

000000000000b350 <block_end>:
    b350:	f3 0f 1e fa          	endbr64 
    b354:	48 8b 07             	mov    (%rdi),%rax
    b357:	48 23 05 72 ed 00 00 	and    0xed72(%rip),%rax        # 1a0d0 <size_mask>
    b35e:	48 01 f8             	add    %rdi,%rax
    b361:	c3                   	ret    
    b362:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b369:	00 00 00 
    b36c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000b370 <emalloc_init_with_reserved_mem>:
    b370:	f3 0f 1e fa          	endbr64 
    b374:	48 83 ec 08          	sub    $0x8,%rsp
    b378:	e8 c3 fc ff ff       	call   b040 <add_reserve>
    b37d:	85 c0                	test   %eax,%eax
    b37f:	75 17                	jne    b398 <emalloc_init_with_reserved_mem+0x28>
    b381:	48 c7 05 3c ed 00 00 	movq   $0x10000,0xed3c(%rip)        # 1a0c8 <reserve_size_increment>
    b388:	00 00 01 00 
    b38c:	48 83 c4 08          	add    $0x8,%rsp
    b390:	c3                   	ret    
    b391:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b398:	b8 0c 00 00 00       	mov    $0xc,%eax
    b39d:	48 83 c4 08          	add    $0x8,%rsp
    b3a1:	c3                   	ret    
    b3a2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b3a9:	00 00 00 
    b3ac:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000b3b0 <emalloc>:
    b3b0:	f3 0f 1e fa          	endbr64 
    b3b4:	48 8b 05 1d ed 00 00 	mov    0xed1d(%rip),%rax        # 1a0d8 <header_size>
    b3bb:	53                   	push   %rbx
    b3bc:	bb 10 00 00 00       	mov    $0x10,%ebx
    b3c1:	48 8d 44 38 07       	lea    0x7(%rax,%rdi,1),%rax
    b3c6:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    b3ca:	48 39 d8             	cmp    %rbx,%rax
    b3cd:	48 0f 43 d8          	cmovae %rax,%rbx
    b3d1:	80 3d e8 ed 00 00 00 	cmpb   $0x0,0xede8(%rip)        # 1a1c0 <adding_reserve>
    b3d8:	74 36                	je     b410 <emalloc+0x60>
    b3da:	48 8b 05 ff f5 00 00 	mov    0xf5ff(%rip),%rax        # 1a9e0 <meta_used>
    b3e1:	48 8d 14 03          	lea    (%rbx,%rax,1),%rdx
    b3e5:	48 81 fa 00 00 01 00 	cmp    $0x10000,%rdx
    b3ec:	0f 87 1c 01 00 00    	ja     b50e <emalloc+0x15e>
    b3f2:	48 8d 0d 07 f6 00 00 	lea    0xf607(%rip),%rcx        # 1aa00 <meta_reserve>
    b3f9:	48 83 cb 01          	or     $0x1,%rbx
    b3fd:	48 89 15 dc f5 00 00 	mov    %rdx,0xf5dc(%rip)        # 1a9e0 <meta_used>
    b404:	48 01 c8             	add    %rcx,%rax
    b407:	48 89 18             	mov    %rbx,(%rax)
    b40a:	48 83 c0 08          	add    $0x8,%rax
    b40e:	5b                   	pop    %rbx
    b40f:	c3                   	ret    
    b410:	48 3d 08 08 00 00    	cmp    $0x808,%rax
    b416:	0f 86 74 01 00 00    	jbe    b590 <emalloc+0x1e0>
    b41c:	48 8b 05 ad ed 00 00 	mov    0xedad(%rip),%rax        # 1a1d0 <large_block_list>
    b423:	48 85 c0             	test   %rax,%rax
    b426:	0f 84 ec 00 00 00    	je     b518 <emalloc+0x168>
    b42c:	45 31 c0             	xor    %r8d,%r8d
    b42f:	90                   	nop
    b430:	48 8b 10             	mov    (%rax),%rdx
    b433:	48 39 da             	cmp    %rbx,%rdx
    b436:	72 3e                	jb     b476 <emalloc+0xc6>
    b438:	4d 85 c0             	test   %r8,%r8
    b43b:	74 7b                	je     b4b8 <emalloc+0x108>
    b43d:	49 3b 10             	cmp    (%r8),%rdx
    b440:	48 8b 48 08          	mov    0x8(%rax),%rcx
    b444:	73 20                	jae    b466 <emalloc+0xb6>
    b446:	48 85 c9             	test   %rcx,%rcx
    b449:	0f 84 89 01 00 00    	je     b5d8 <emalloc+0x228>
    b44f:	48 8b 11             	mov    (%rcx),%rdx
    b452:	49 89 c0             	mov    %rax,%r8
    b455:	48 39 da             	cmp    %rbx,%rdx
    b458:	72 19                	jb     b473 <emalloc+0xc3>
    b45a:	48 89 c8             	mov    %rcx,%rax
    b45d:	49 3b 10             	cmp    (%r8),%rdx
    b460:	48 8b 48 08          	mov    0x8(%rax),%rcx
    b464:	72 e0                	jb     b446 <emalloc+0x96>
    b466:	48 85 c9             	test   %rcx,%rcx
    b469:	74 14                	je     b47f <emalloc+0xcf>
    b46b:	48 8b 11             	mov    (%rcx),%rdx
    b46e:	48 39 da             	cmp    %rbx,%rdx
    b471:	73 e7                	jae    b45a <emalloc+0xaa>
    b473:	48 89 c8             	mov    %rcx,%rax
    b476:	48 8b 40 08          	mov    0x8(%rax),%rax
    b47a:	48 85 c0             	test   %rax,%rax
    b47d:	75 b1                	jne    b430 <emalloc+0x80>
    b47f:	4d 85 c0             	test   %r8,%r8
    b482:	0f 84 90 00 00 00    	je     b518 <emalloc+0x168>
    b488:	48 8d 35 41 ed 00 00 	lea    0xed41(%rip),%rsi        # 1a1d0 <large_block_list>
    b48f:	4c 89 c7             	mov    %r8,%rdi
    b492:	e8 e9 fc ff ff       	call   b180 <remove_from_list>
    b497:	49 8b 00             	mov    (%r8),%rax
    b49a:	48 8d 53 10          	lea    0x10(%rbx),%rdx
    b49e:	48 39 d0             	cmp    %rdx,%rax
    b4a1:	0f 83 c9 00 00 00    	jae    b570 <emalloc+0x1c0>
    b4a7:	48 83 cb 01          	or     $0x1,%rbx
    b4ab:	49 8d 40 08          	lea    0x8(%r8),%rax
    b4af:	49 89 18             	mov    %rbx,(%r8)
    b4b2:	5b                   	pop    %rbx
    b4b3:	c3                   	ret    
    b4b4:	0f 1f 40 00          	nopl   0x0(%rax)
    b4b8:	49 89 c0             	mov    %rax,%r8
    b4bb:	eb b9                	jmp    b476 <emalloc+0xc6>
    b4bd:	0f 1f 00             	nopl   (%rax)
    b4c0:	48 8d bb 1f 00 01 00 	lea    0x1001f(%rbx),%rdi
    b4c7:	66 31 ff             	xor    %di,%di
    b4ca:	e8 71 fb ff ff       	call   b040 <add_reserve>
    b4cf:	85 c0                	test   %eax,%eax
    b4d1:	75 3b                	jne    b50e <emalloc+0x15e>
    b4d3:	48 8b 15 ee ec 00 00 	mov    0xecee(%rip),%rdx        # 1a1c8 <reserve_list>
    b4da:	48 85 d2             	test   %rdx,%rdx
    b4dd:	75 12                	jne    b4f1 <emalloc+0x141>
    b4df:	eb 2d                	jmp    b50e <emalloc+0x15e>
    b4e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b4e8:	48 8b 52 18          	mov    0x18(%rdx),%rdx
    b4ec:	48 85 d2             	test   %rdx,%rdx
    b4ef:	74 1d                	je     b50e <emalloc+0x15e>
    b4f1:	48 8b 42 10          	mov    0x10(%rdx),%rax
    b4f5:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
    b4f9:	48 29 c1             	sub    %rax,%rcx
    b4fc:	48 39 d9             	cmp    %rbx,%rcx
    b4ff:	72 e7                	jb     b4e8 <emalloc+0x138>
    b501:	48 8d 0c 03          	lea    (%rbx,%rax,1),%rcx
    b505:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
    b509:	48 03 02             	add    (%rdx),%rax
    b50c:	75 4c                	jne    b55a <emalloc+0x1aa>
    b50e:	31 c0                	xor    %eax,%eax
    b510:	5b                   	pop    %rbx
    b511:	c3                   	ret    
    b512:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b518:	48 8b 15 a9 ec 00 00 	mov    0xeca9(%rip),%rdx        # 1a1c8 <reserve_list>
    b51f:	48 85 d2             	test   %rdx,%rdx
    b522:	75 15                	jne    b539 <emalloc+0x189>
    b524:	eb 9a                	jmp    b4c0 <emalloc+0x110>
    b526:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b52d:	00 00 00 
    b530:	48 8b 52 18          	mov    0x18(%rdx),%rdx
    b534:	48 85 d2             	test   %rdx,%rdx
    b537:	74 87                	je     b4c0 <emalloc+0x110>
    b539:	48 8b 42 10          	mov    0x10(%rdx),%rax
    b53d:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
    b541:	48 29 c1             	sub    %rax,%rcx
    b544:	48 39 d9             	cmp    %rbx,%rcx
    b547:	72 e7                	jb     b530 <emalloc+0x180>
    b549:	48 8d 0c 03          	lea    (%rbx,%rax,1),%rcx
    b54d:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
    b551:	48 03 02             	add    (%rdx),%rax
    b554:	0f 84 66 ff ff ff    	je     b4c0 <emalloc+0x110>
    b55a:	48 83 cb 01          	or     $0x1,%rbx
    b55e:	48 83 c0 08          	add    $0x8,%rax
    b562:	48 89 58 f8          	mov    %rbx,-0x8(%rax)
    b566:	5b                   	pop    %rbx
    b567:	c3                   	ret    
    b568:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    b56f:	00 
    b570:	49 8d 3c 18          	lea    (%r8,%rbx,1),%rdi
    b574:	48 29 d8             	sub    %rbx,%rax
    b577:	49 89 18             	mov    %rbx,(%r8)
    b57a:	48 89 07             	mov    %rax,(%rdi)
    b57d:	e8 7e fc ff ff       	call   b200 <put_free_block>
    b582:	e9 20 ff ff ff       	jmp    b4a7 <emalloc+0xf7>
    b587:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    b58e:	00 00 
    b590:	48 8d 43 f0          	lea    -0x10(%rbx),%rax
    b594:	48 8d 15 45 ec 00 00 	lea    0xec45(%rip),%rdx        # 1a1e0 <exact_block_list>
    b59b:	48 c1 e8 03          	shr    $0x3,%rax
    b59f:	4c 8b 04 c2          	mov    (%rdx,%rax,8),%r8
    b5a3:	4d 85 c0             	test   %r8,%r8
    b5a6:	0f 84 6c ff ff ff    	je     b518 <emalloc+0x168>
    b5ac:	49 8b 48 08          	mov    0x8(%r8),%rcx
    b5b0:	48 89 0c c2          	mov    %rcx,(%rdx,%rax,8)
    b5b4:	48 85 c9             	test   %rcx,%rcx
    b5b7:	0f 84 ea fe ff ff    	je     b4a7 <emalloc+0xf7>
    b5bd:	48 85 c0             	test   %rax,%rax
    b5c0:	0f 84 e1 fe ff ff    	je     b4a7 <emalloc+0xf7>
    b5c6:	48 c7 41 10 00 00 00 	movq   $0x0,0x10(%rcx)
    b5cd:	00 
    b5ce:	e9 d4 fe ff ff       	jmp    b4a7 <emalloc+0xf7>
    b5d3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b5d8:	49 89 c0             	mov    %rax,%r8
    b5db:	e9 9f fe ff ff       	jmp    b47f <emalloc+0xcf>

000000000000b5e0 <can_erealloc>:
    b5e0:	f3 0f 1e fa          	endbr64 
    b5e4:	80 3d d5 eb 00 00 00 	cmpb   $0x0,0xebd5(%rip)        # 1a1c0 <adding_reserve>
    b5eb:	b8 01 00 00 00       	mov    $0x1,%eax
    b5f0:	75 30                	jne    b622 <can_erealloc+0x42>
    b5f2:	48 2b 3d df ea 00 00 	sub    0xeadf(%rip),%rdi        # 1a0d8 <header_size>
    b5f9:	48 8d 15 00 f4 01 00 	lea    0x1f400(%rip),%rdx        # 2aa00 <mm_user_end>
    b600:	48 39 d7             	cmp    %rdx,%rdi
    b603:	73 1d                	jae    b622 <can_erealloc+0x42>
    b605:	48 8b 05 c4 ea 00 00 	mov    0xeac4(%rip),%rax        # 1a0d0 <size_mask>
    b60c:	48 23 07             	and    (%rdi),%rax
    b60f:	48 01 c7             	add    %rax,%rdi
    b612:	48 8d 82 00 00 ff ff 	lea    -0x10000(%rdx),%rax
    b619:	48 39 f8             	cmp    %rdi,%rax
    b61c:	0f 93 c0             	setae  %al
    b61f:	0f b6 c0             	movzbl %al,%eax
    b622:	c3                   	ret    
    b623:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b62a:	00 00 00 
    b62d:	0f 1f 00             	nopl   (%rax)

000000000000b630 <efree>:
    b630:	f3 0f 1e fa          	endbr64 
    b634:	48 2b 3d 9d ea 00 00 	sub    0xea9d(%rip),%rdi        # 1a0d8 <header_size>
    b63b:	41 54                	push   %r12
    b63d:	48 8d 05 bc f3 01 00 	lea    0x1f3bc(%rip),%rax        # 2aa00 <mm_user_end>
    b644:	55                   	push   %rbp
    b645:	4c 8b 1d 84 ea 00 00 	mov    0xea84(%rip),%r11        # 1a0d0 <size_mask>
    b64c:	49 89 fc             	mov    %rdi,%r12
    b64f:	53                   	push   %rbx
    b650:	4c 8b 0f             	mov    (%rdi),%r9
    b653:	4d 21 d9             	and    %r11,%r9
    b656:	48 39 c7             	cmp    %rax,%rdi
    b659:	73 14                	jae    b66f <efree+0x3f>
    b65b:	49 8d 04 39          	lea    (%r9,%rdi,1),%rax
    b65f:	48 8d 15 9a f3 00 00 	lea    0xf39a(%rip),%rdx        # 1aa00 <meta_reserve>
    b666:	48 39 c2             	cmp    %rax,%rdx
    b669:	0f 82 f9 00 00 00    	jb     b768 <efree+0x138>
    b66f:	4d 85 c9             	test   %r9,%r9
    b672:	74 2e                	je     b6a2 <efree+0x72>
    b674:	4c 8b 15 4d eb 00 00 	mov    0xeb4d(%rip),%r10        # 1a1c8 <reserve_list>
    b67b:	4d 85 d2             	test   %r10,%r10
    b67e:	74 22                	je     b6a2 <efree+0x72>
    b680:	4b 8d 14 21          	lea    (%r9,%r12,1),%rdx
    b684:	0f 1f 40 00          	nopl   0x0(%rax)
    b688:	49 8b 02             	mov    (%r10),%rax
    b68b:	49 39 c4             	cmp    %rax,%r12
    b68e:	72 09                	jb     b699 <efree+0x69>
    b690:	49 03 42 10          	add    0x10(%r10),%rax
    b694:	48 39 d0             	cmp    %rdx,%rax
    b697:	73 17                	jae    b6b0 <efree+0x80>
    b699:	4d 8b 52 18          	mov    0x18(%r10),%r10
    b69d:	4d 85 d2             	test   %r10,%r10
    b6a0:	75 e6                	jne    b688 <efree+0x58>
    b6a2:	e8 90 6c 00 00       	call   12337 <abort>
    b6a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    b6ae:	00 00 
    b6b0:	4d 89 0c 24          	mov    %r9,(%r12)
    b6b4:	49 c7 44 24 08 00 00 	movq   $0x0,0x8(%r12)
    b6bb:	00 00 
    b6bd:	49 83 f9 10          	cmp    $0x10,%r9
    b6c1:	0f 87 b9 00 00 00    	ja     b780 <efree+0x150>
    b6c7:	4c 89 e7             	mov    %r12,%rdi
    b6ca:	48 8d 1d 0f eb 00 00 	lea    0xeb0f(%rip),%rbx        # 1a1e0 <exact_block_list>
    b6d1:	48 8d 2d f8 ea 00 00 	lea    0xeaf8(%rip),%rbp        # 1a1d0 <large_block_list>
    b6d8:	e8 a3 fb ff ff       	call   b280 <neighbor_right>
    b6dd:	48 89 c7             	mov    %rax,%rdi
    b6e0:	48 85 c0             	test   %rax,%rax
    b6e3:	75 3c                	jne    b721 <efree+0xf1>
    b6e5:	e9 3d 01 00 00       	jmp    b827 <efree+0x1f7>
    b6ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b6f0:	48 89 de             	mov    %rbx,%rsi
    b6f3:	48 83 f9 0f          	cmp    $0xf,%rcx
    b6f7:	76 0b                	jbe    b704 <efree+0xd4>
    b6f9:	48 8d 71 f0          	lea    -0x10(%rcx),%rsi
    b6fd:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
    b701:	48 01 de             	add    %rbx,%rsi
    b704:	e8 77 fa ff ff       	call   b180 <remove_from_list>
    b709:	49 03 0c 24          	add    (%r12),%rcx
    b70d:	49 89 0c 24          	mov    %rcx,(%r12)
    b711:	49 89 c9             	mov    %rcx,%r9
    b714:	e8 67 fb ff ff       	call   b280 <neighbor_right>
    b719:	48 89 c7             	mov    %rax,%rdi
    b71c:	48 85 c0             	test   %rax,%rax
    b71f:	74 23                	je     b744 <efree+0x114>
    b721:	48 8b 0f             	mov    (%rdi),%rcx
    b724:	f6 c1 01             	test   $0x1,%cl
    b727:	75 17                	jne    b740 <efree+0x110>
    b729:	4c 21 d9             	and    %r11,%rcx
    b72c:	48 81 f9 08 08 00 00 	cmp    $0x808,%rcx
    b733:	76 bb                	jbe    b6f0 <efree+0xc0>
    b735:	48 89 ee             	mov    %rbp,%rsi
    b738:	e8 43 fa ff ff       	call   b180 <remove_from_list>
    b73d:	eb ca                	jmp    b709 <efree+0xd9>
    b73f:	90                   	nop
    b740:	4d 8b 0c 24          	mov    (%r12),%r9
    b744:	4d 21 cb             	and    %r9,%r11
    b747:	49 8b 1a             	mov    (%r10),%rbx
    b74a:	4c 89 e0             	mov    %r12,%rax
    b74d:	48 29 d8             	sub    %rbx,%rax
    b750:	49 01 c3             	add    %rax,%r11
    b753:	4d 3b 5a 10          	cmp    0x10(%r10),%r11
    b757:	74 37                	je     b790 <efree+0x160>
    b759:	5b                   	pop    %rbx
    b75a:	4c 89 e7             	mov    %r12,%rdi
    b75d:	5d                   	pop    %rbp
    b75e:	41 5c                	pop    %r12
    b760:	e9 9b fa ff ff       	jmp    b200 <put_free_block>
    b765:	0f 1f 00             	nopl   (%rax)
    b768:	80 3d 51 ea 00 00 00 	cmpb   $0x0,0xea51(%rip)        # 1a1c0 <adding_reserve>
    b76f:	0f 84 2d ff ff ff    	je     b6a2 <efree+0x72>
    b775:	5b                   	pop    %rbx
    b776:	5d                   	pop    %rbp
    b777:	41 5c                	pop    %r12
    b779:	c3                   	ret    
    b77a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b780:	49 c7 44 24 10 00 00 	movq   $0x0,0x10(%r12)
    b787:	00 00 
    b789:	e9 39 ff ff ff       	jmp    b6c7 <efree+0x97>
    b78e:	66 90                	xchg   %ax,%ax
    b790:	48 8b 0d 39 ea 00 00 	mov    0xea39(%rip),%rcx        # 1a1d0 <large_block_list>
    b797:	4d 29 cb             	sub    %r9,%r11
    b79a:	4d 89 5a 10          	mov    %r11,0x10(%r10)
    b79e:	4e 8d 04 1b          	lea    (%rbx,%r11,1),%r8
    b7a2:	48 85 c9             	test   %rcx,%rcx
    b7a5:	75 12                	jne    b7b9 <efree+0x189>
    b7a7:	eb 6d                	jmp    b816 <efree+0x1e6>
    b7a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b7b0:	48 8b 49 08          	mov    0x8(%rcx),%rcx
    b7b4:	48 85 c9             	test   %rcx,%rcx
    b7b7:	74 5d                	je     b816 <efree+0x1e6>
    b7b9:	48 8b 01             	mov    (%rcx),%rax
    b7bc:	48 01 c8             	add    %rcx,%rax
    b7bf:	49 39 c0             	cmp    %rax,%r8
    b7c2:	75 ec                	jne    b7b0 <efree+0x180>
    b7c4:	48 8d 35 05 ea 00 00 	lea    0xea05(%rip),%rsi        # 1a1d0 <large_block_list>
    b7cb:	48 89 cf             	mov    %rcx,%rdi
    b7ce:	e8 ad f9 ff ff       	call   b180 <remove_from_list>
    b7d3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b7d8:	4c 2b 01             	sub    (%rcx),%r8
    b7db:	48 8b 0d ee e9 00 00 	mov    0xe9ee(%rip),%rcx        # 1a1d0 <large_block_list>
    b7e2:	48 85 c9             	test   %rcx,%rcx
    b7e5:	75 12                	jne    b7f9 <efree+0x1c9>
    b7e7:	eb 36                	jmp    b81f <efree+0x1ef>
    b7e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b7f0:	48 8b 49 08          	mov    0x8(%rcx),%rcx
    b7f4:	48 85 c9             	test   %rcx,%rcx
    b7f7:	74 17                	je     b810 <efree+0x1e0>
    b7f9:	48 8b 01             	mov    (%rcx),%rax
    b7fc:	48 01 c8             	add    %rcx,%rax
    b7ff:	49 39 c0             	cmp    %rax,%r8
    b802:	75 ec                	jne    b7f0 <efree+0x1c0>
    b804:	48 89 cf             	mov    %rcx,%rdi
    b807:	e8 74 f9 ff ff       	call   b180 <remove_from_list>
    b80c:	eb ca                	jmp    b7d8 <efree+0x1a8>
    b80e:	66 90                	xchg   %ax,%ax
    b810:	4d 89 c3             	mov    %r8,%r11
    b813:	49 29 db             	sub    %rbx,%r11
    b816:	4d 89 5a 10          	mov    %r11,0x10(%r10)
    b81a:	5b                   	pop    %rbx
    b81b:	5d                   	pop    %rbp
    b81c:	41 5c                	pop    %r12
    b81e:	c3                   	ret    
    b81f:	49 29 d8             	sub    %rbx,%r8
    b822:	4d 89 c3             	mov    %r8,%r11
    b825:	eb ef                	jmp    b816 <efree+0x1e6>
    b827:	4d 89 cb             	mov    %r9,%r11
    b82a:	e9 18 ff ff ff       	jmp    b747 <efree+0x117>
    b82f:	90                   	nop

000000000000b830 <mm_init_ema>:
    b830:	f3 0f 1e fa          	endbr64 
    b834:	41 57                	push   %r15
    b836:	4d 89 cf             	mov    %r9,%r15
    b839:	41 56                	push   %r14
    b83b:	4d 89 c6             	mov    %r8,%r14
    b83e:	41 55                	push   %r13
    b840:	41 89 cd             	mov    %ecx,%r13d
    b843:	41 54                	push   %r12
    b845:	41 89 d4             	mov    %edx,%r12d
    b848:	55                   	push   %rbp
    b849:	48 89 f5             	mov    %rsi,%rbp
    b84c:	53                   	push   %rbx
    b84d:	48 89 fb             	mov    %rdi,%rbx
    b850:	48 83 ec 18          	sub    $0x18,%rsp
    b854:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    b85b:	00 00 
    b85d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    b862:	31 c0                	xor    %eax,%eax
    b864:	e8 47 a1 ff ff       	call   59b0 <sgx_mm_is_within_enclave>
    b869:	89 c2                	mov    %eax,%edx
    b86b:	b8 0d 00 00 00       	mov    $0xd,%eax
    b870:	84 d2                	test   %dl,%dl
    b872:	0f 84 7d 00 00 00    	je     b8f5 <mm_init_ema+0xc5>
    b878:	41 f7 c4 7e f8 ff ff 	test   $0xfffff87e,%r12d
    b87f:	75 6f                	jne    b8f0 <mm_init_ema+0xc0>
    b881:	41 83 fd 07          	cmp    $0x7,%r13d
    b885:	77 69                	ja     b8f0 <mm_init_ema+0xc0>
    b887:	48 89 e1             	mov    %rsp,%rcx
    b88a:	48 89 ea             	mov    %rbp,%rdx
    b88d:	48 8d 3d d4 e7 00 00 	lea    0xe7d4(%rip),%rdi        # 1a068 <g_rts_ema_root>
    b894:	48 89 de             	mov    %rbx,%rsi
    b897:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    b89e:	00 
    b89f:	e8 2c e6 ff ff       	call   9ed0 <find_free_region_at>
    b8a4:	84 c0                	test   %al,%al
    b8a6:	74 48                	je     b8f0 <mm_init_ema+0xc0>
    b8a8:	48 83 ec 08          	sub    $0x8,%rsp
    b8ac:	44 89 e1             	mov    %r12d,%ecx
    b8af:	41 0f b6 d4          	movzbl %r12b,%edx
    b8b3:	48 89 df             	mov    %rbx,%rdi
    b8b6:	ff 74 24 08          	push   0x8(%rsp)
    b8ba:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    b8c0:	4d 89 f9             	mov    %r15,%r9
    b8c3:	4d 89 f0             	mov    %r14,%r8
    b8c6:	44 09 e9             	or     %r13d,%ecx
    b8c9:	48 89 ee             	mov    %rbp,%rsi
    b8cc:	48 63 c9             	movslq %ecx,%rcx
    b8cf:	e8 dc e6 ff ff       	call   9fb0 <ema_new>
    b8d4:	48 89 c7             	mov    %rax,%rdi
    b8d7:	58                   	pop    %rax
    b8d8:	5a                   	pop    %rdx
    b8d9:	48 85 ff             	test   %rdi,%rdi
    b8dc:	74 3a                	je     b918 <mm_init_ema+0xe8>
    b8de:	31 c0                	xor    %eax,%eax
    b8e0:	41 83 e4 01          	and    $0x1,%r12d
    b8e4:	75 0f                	jne    b8f5 <mm_init_ema+0xc5>
    b8e6:	e8 55 de ff ff       	call   9740 <ema_set_eaccept_full>
    b8eb:	eb 08                	jmp    b8f5 <mm_init_ema+0xc5>
    b8ed:	0f 1f 00             	nopl   (%rax)
    b8f0:	b8 16 00 00 00       	mov    $0x16,%eax
    b8f5:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    b8fa:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    b901:	00 00 
    b903:	75 1a                	jne    b91f <mm_init_ema+0xef>
    b905:	48 83 c4 18          	add    $0x18,%rsp
    b909:	5b                   	pop    %rbx
    b90a:	5d                   	pop    %rbp
    b90b:	41 5c                	pop    %r12
    b90d:	41 5d                	pop    %r13
    b90f:	41 5e                	pop    %r14
    b911:	41 5f                	pop    %r15
    b913:	c3                   	ret    
    b914:	0f 1f 40 00          	nopl   0x0(%rax)
    b918:	b8 0c 00 00 00       	mov    $0xc,%eax
    b91d:	eb d6                	jmp    b8f5 <mm_init_ema+0xc5>
    b91f:	e8 4c 50 00 00       	call   10970 <__stack_chk_fail>
    b924:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b92b:	00 00 00 
    b92e:	66 90                	xchg   %ax,%ax

000000000000b930 <mm_alloc>:
    b930:	f3 0f 1e fa          	endbr64 
    b934:	48 83 ec 10          	sub    $0x10,%rsp
    b938:	48 8d 05 29 e7 00 00 	lea    0xe729(%rip),%rax        # 1a068 <g_rts_ema_root>
    b93f:	50                   	push   %rax
    b940:	e8 2b 02 00 00       	call   bb70 <mm_alloc_internal>
    b945:	48 83 c4 18          	add    $0x18,%rsp
    b949:	c3                   	ret    
    b94a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000b950 <mm_commit>:
    b950:	f3 0f 1e fa          	endbr64 
    b954:	48 8d 15 0d e7 00 00 	lea    0xe70d(%rip),%rdx        # 1a068 <g_rts_ema_root>
    b95b:	e9 40 05 00 00       	jmp    bea0 <mm_commit_internal>

000000000000b960 <mm_uncommit>:
    b960:	f3 0f 1e fa          	endbr64 
    b964:	48 8d 15 fd e6 00 00 	lea    0xe6fd(%rip),%rdx        # 1a068 <g_rts_ema_root>
    b96b:	e9 00 06 00 00       	jmp    bf70 <mm_uncommit_internal>

000000000000b970 <mm_dealloc>:
    b970:	f3 0f 1e fa          	endbr64 
    b974:	48 8d 15 ed e6 00 00 	lea    0xe6ed(%rip),%rdx        # 1a068 <g_rts_ema_root>
    b97b:	e9 c0 06 00 00       	jmp    c040 <mm_dealloc_internal>

000000000000b980 <mm_commit_data>:
    b980:	f3 0f 1e fa          	endbr64 
    b984:	4c 8d 05 dd e6 00 00 	lea    0xe6dd(%rip),%r8        # 1a068 <g_rts_ema_root>
    b98b:	e9 80 07 00 00       	jmp    c110 <mm_commit_data_internal>

000000000000b990 <mm_modify_type>:
    b990:	f3 0f 1e fa          	endbr64 
    b994:	48 8d 0d cd e6 00 00 	lea    0xe6cd(%rip),%rcx        # 1a068 <g_rts_ema_root>
    b99b:	e9 90 08 00 00       	jmp    c230 <mm_modify_type_internal>

000000000000b9a0 <mm_modify_permissions>:
    b9a0:	f3 0f 1e fa          	endbr64 
    b9a4:	48 8d 0d bd e6 00 00 	lea    0xe6bd(%rip),%rcx        # 1a068 <g_rts_ema_root>
    b9ab:	e9 40 0a 00 00       	jmp    c3f0 <mm_modify_permissions_internal>

000000000000b9b0 <sgx_mm_enclave_pfhandler>:
    b9b0:	f3 0f 1e fa          	endbr64 
    b9b4:	41 56                	push   %r14
    b9b6:	41 55                	push   %r13
    b9b8:	49 89 fd             	mov    %rdi,%r13
    b9bb:	41 54                	push   %r12
    b9bd:	55                   	push   %rbp
    b9be:	53                   	push   %rbx
    b9bf:	31 db                	xor    %ebx,%ebx
    b9c1:	48 83 ec 10          	sub    $0x10,%rsp
    b9c5:	4c 8b 37             	mov    (%rdi),%r14
    b9c8:	48 8b 3d 41 f0 01 00 	mov    0x1f041(%rip),%rdi        # 2aa10 <mm_lock>
    b9cf:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    b9d6:	00 00 
    b9d8:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    b9dd:	31 c0                	xor    %eax,%eax
    b9df:	e8 6c 9f ff ff       	call   5950 <sgx_mm_mutex_lock>
    b9e4:	85 c0                	test   %eax,%eax
    b9e6:	74 28                	je     ba10 <sgx_mm_enclave_pfhandler+0x60>
    b9e8:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    b9ed:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    b9f4:	00 00 
    b9f6:	0f 85 50 01 00 00    	jne    bb4c <sgx_mm_enclave_pfhandler+0x19c>
    b9fc:	48 83 c4 10          	add    $0x10,%rsp
    ba00:	89 d8                	mov    %ebx,%eax
    ba02:	5b                   	pop    %rbx
    ba03:	5d                   	pop    %rbp
    ba04:	41 5c                	pop    %r12
    ba06:	41 5d                	pop    %r13
    ba08:	41 5e                	pop    %r14
    ba0a:	c3                   	ret    
    ba0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    ba10:	49 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%r14
    ba17:	48 8d 3d e2 e5 00 00 	lea    0xe5e2(%rip),%rdi        # 1a000 <g_user_ema_root>
    ba1e:	89 c3                	mov    %eax,%ebx
    ba20:	4c 89 f6             	mov    %r14,%rsi
    ba23:	e8 48 de ff ff       	call   9870 <search_ema>
    ba28:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    ba2f:	00 
    ba30:	48 89 c5             	mov    %rax,%rbp
    ba33:	48 85 c0             	test   %rax,%rax
    ba36:	0f 84 b4 00 00 00    	je     baf0 <sgx_mm_enclave_pfhandler+0x140>
    ba3c:	48 89 e6             	mov    %rsp,%rsi
    ba3f:	48 89 ef             	mov    %rbp,%rdi
    ba42:	e8 d9 dc ff ff       	call   9720 <ema_fault_handler>
    ba47:	49 89 c4             	mov    %rax,%r12
    ba4a:	48 85 c0             	test   %rax,%rax
    ba4d:	74 21                	je     ba70 <sgx_mm_enclave_pfhandler+0xc0>
    ba4f:	48 8b 3d ba ef 01 00 	mov    0x1efba(%rip),%rdi        # 2aa10 <mm_lock>
    ba56:	e8 15 9f ff ff       	call   5970 <sgx_mm_mutex_unlock>
    ba5b:	48 8b 34 24          	mov    (%rsp),%rsi
    ba5f:	4c 89 ef             	mov    %r13,%rdi
    ba62:	41 ff d4             	call   *%r12
    ba65:	89 c3                	mov    %eax,%ebx
    ba67:	e9 7c ff ff ff       	jmp    b9e8 <sgx_mm_enclave_pfhandler+0x38>
    ba6c:	0f 1f 40 00          	nopl   0x0(%rax)
    ba70:	4c 89 f6             	mov    %r14,%rsi
    ba73:	48 89 ef             	mov    %rbp,%rdi
    ba76:	e8 c5 dd ff ff       	call   9840 <ema_page_committed>
    ba7b:	84 c0                	test   %al,%al
    ba7d:	74 31                	je     bab0 <sgx_mm_enclave_pfhandler+0x100>
    ba7f:	41 f6 45 08 02       	testb  $0x2,0x8(%r13)
    ba84:	0f 84 86 00 00 00    	je     bb10 <sgx_mm_enclave_pfhandler+0x160>
    ba8a:	48 89 ef             	mov    %rbp,%rdi
    ba8d:	e8 7e dc ff ff       	call   9710 <get_ema_si_flags>
    ba92:	48 d1 e8             	shr    %rax
    ba95:	48 89 c3             	mov    %rax,%rbx
    ba98:	83 e3 01             	and    $0x1,%ebx
    ba9b:	f7 db                	neg    %ebx
    ba9d:	48 8b 3d 6c ef 01 00 	mov    0x1ef6c(%rip),%rdi        # 2aa10 <mm_lock>
    baa4:	e8 c7 9e ff ff       	call   5970 <sgx_mm_mutex_unlock>
    baa9:	e9 3a ff ff ff       	jmp    b9e8 <sgx_mm_enclave_pfhandler+0x38>
    baae:	66 90                	xchg   %ax,%ax
    bab0:	48 89 ef             	mov    %rbp,%rdi
    bab3:	e8 48 dc ff ff       	call   9700 <get_ema_alloc_flags>
    bab8:	a8 04                	test   $0x4,%al
    baba:	0f 84 91 00 00 00    	je     bb51 <sgx_mm_enclave_pfhandler+0x1a1>
    bac0:	41 f6 45 08 02       	testb  $0x2,0x8(%r13)
    bac5:	74 69                	je     bb30 <sgx_mm_enclave_pfhandler+0x180>
    bac7:	48 89 ef             	mov    %rbp,%rdi
    baca:	e8 41 dc ff ff       	call   9710 <get_ema_si_flags>
    bacf:	a8 02                	test   $0x2,%al
    bad1:	74 ca                	je     ba9d <sgx_mm_enclave_pfhandler+0xed>
    bad3:	49 8d 96 00 10 00 00 	lea    0x1000(%r14),%rdx
    bada:	4c 89 f6             	mov    %r14,%rsi
    badd:	48 89 ef             	mov    %rbp,%rdi
    bae0:	e8 4b e7 ff ff       	call   a230 <ema_do_commit>
    bae5:	85 c0                	test   %eax,%eax
    bae7:	75 68                	jne    bb51 <sgx_mm_enclave_pfhandler+0x1a1>
    bae9:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
    baee:	eb ad                	jmp    ba9d <sgx_mm_enclave_pfhandler+0xed>
    baf0:	4c 89 f6             	mov    %r14,%rsi
    baf3:	48 8d 3d 6e e5 00 00 	lea    0xe56e(%rip),%rdi        # 1a068 <g_rts_ema_root>
    bafa:	e8 71 dd ff ff       	call   9870 <search_ema>
    baff:	48 89 c5             	mov    %rax,%rbp
    bb02:	48 85 c0             	test   %rax,%rax
    bb05:	0f 85 31 ff ff ff    	jne    ba3c <sgx_mm_enclave_pfhandler+0x8c>
    bb0b:	eb 90                	jmp    ba9d <sgx_mm_enclave_pfhandler+0xed>
    bb0d:	0f 1f 00             	nopl   (%rax)
    bb10:	48 89 ef             	mov    %rbp,%rdi
    bb13:	e8 f8 db ff ff       	call   9710 <get_ema_si_flags>
    bb18:	a8 01                	test   $0x1,%al
    bb1a:	0f 84 7d ff ff ff    	je     ba9d <sgx_mm_enclave_pfhandler+0xed>
    bb20:	41 f6 45 08 02       	testb  $0x2,0x8(%r13)
    bb25:	74 c2                	je     bae9 <sgx_mm_enclave_pfhandler+0x139>
    bb27:	e9 5e ff ff ff       	jmp    ba8a <sgx_mm_enclave_pfhandler+0xda>
    bb2c:	0f 1f 40 00          	nopl   0x0(%rax)
    bb30:	48 89 ef             	mov    %rbp,%rdi
    bb33:	e8 d8 db ff ff       	call   9710 <get_ema_si_flags>
    bb38:	a8 01                	test   $0x1,%al
    bb3a:	0f 84 5d ff ff ff    	je     ba9d <sgx_mm_enclave_pfhandler+0xed>
    bb40:	41 f6 45 08 02       	testb  $0x2,0x8(%r13)
    bb45:	74 8c                	je     bad3 <sgx_mm_enclave_pfhandler+0x123>
    bb47:	e9 7b ff ff ff       	jmp    bac7 <sgx_mm_enclave_pfhandler+0x117>
    bb4c:	e8 1f 4e 00 00       	call   10970 <__stack_chk_fail>
    bb51:	48 8b 3d b8 ee 01 00 	mov    0x1eeb8(%rip),%rdi        # 2aa10 <mm_lock>
    bb58:	e8 13 9e ff ff       	call   5970 <sgx_mm_mutex_unlock>
    bb5d:	e8 d5 67 00 00       	call   12337 <abort>
    bb62:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    bb69:	00 00 00 
    bb6c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000bb70 <mm_alloc_internal>:
    bb70:	f3 0f 1e fa          	endbr64 
    bb74:	41 57                	push   %r15
    bb76:	41 56                	push   %r14
    bb78:	41 55                	push   %r13
    bb7a:	41 54                	push   %r12
    bb7c:	55                   	push   %rbp
    bb7d:	53                   	push   %rbx
    bb7e:	48 83 ec 68          	sub    $0x68,%rsp
    bb82:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    bb89:	00 00 
    bb8b:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    bb90:	31 c0                	xor    %eax,%eax
    bb92:	4c 8b b4 24 a0 00 00 	mov    0xa0(%rsp),%r14
    bb99:	00 
    bb9a:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
    bba1:	00 00 
    bba3:	f6 c2 07             	test   $0x7,%dl
    bba6:	74 60                	je     bc08 <mm_alloc_internal+0x98>
    bba8:	4c 89 c5             	mov    %r8,%rbp
    bbab:	89 d0                	mov    %edx,%eax
    bbad:	41 89 d0             	mov    %edx,%r8d
    bbb0:	25 00 ff 00 00       	and    $0xff00,%eax
    bbb5:	41 81 e0 00 ff 00 00 	and    $0xff00,%r8d
    bbbc:	f6 c6 f8             	test   $0xf8,%dh
    bbbf:	75 47                	jne    bc08 <mm_alloc_internal+0x98>
    bbc1:	85 c0                	test   %eax,%eax
    bbc3:	b8 00 02 00 00       	mov    $0x200,%eax
    bbc8:	49 89 f7             	mov    %rsi,%r15
    bbcb:	4c 0f 44 c0          	cmove  %rax,%r8
    bbcf:	f7 c6 ff 0f 00 00    	test   $0xfff,%esi
    bbd5:	75 31                	jne    bc08 <mm_alloc_internal+0x98>
    bbd7:	48 89 cb             	mov    %rcx,%rbx
    bbda:	89 d1                	mov    %edx,%ecx
    bbdc:	4d 89 cc             	mov    %r9,%r12
    bbdf:	c1 e9 18             	shr    $0x18,%ecx
    bbe2:	74 54                	je     bc38 <mm_alloc_internal+0xc8>
    bbe4:	83 f9 0b             	cmp    $0xb,%ecx
    bbe7:	76 1f                	jbe    bc08 <mm_alloc_internal+0x98>
    bbe9:	b8 01 00 00 00       	mov    $0x1,%eax
    bbee:	49 c7 c5 ff ff ff ff 	mov    $0xffffffffffffffff,%r13
    bbf5:	48 d3 e0             	shl    %cl,%rax
    bbf8:	49 d3 e5             	shl    %cl,%r13
    bbfb:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    bc00:	49 f7 d5             	not    %r13
    bc03:	eb 42                	jmp    bc47 <mm_alloc_internal+0xd7>
    bc05:	0f 1f 00             	nopl   (%rax)
    bc08:	b9 16 00 00 00       	mov    $0x16,%ecx
    bc0d:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
    bc12:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    bc19:	00 00 
    bc1b:	0f 85 41 02 00 00    	jne    be62 <mm_alloc_internal+0x2f2>
    bc21:	48 83 c4 68          	add    $0x68,%rsp
    bc25:	89 c8                	mov    %ecx,%eax
    bc27:	5b                   	pop    %rbx
    bc28:	5d                   	pop    %rbp
    bc29:	41 5c                	pop    %r12
    bc2b:	41 5d                	pop    %r13
    bc2d:	41 5e                	pop    %r14
    bc2f:	41 5f                	pop    %r15
    bc31:	c3                   	ret    
    bc32:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    bc38:	48 c7 44 24 08 00 10 	movq   $0x1000,0x8(%rsp)
    bc3f:	00 00 
    bc41:	41 bd ff 0f 00 00    	mov    $0xfff,%r13d
    bc47:	48 89 7c 24 38       	mov    %rdi,0x38(%rsp)
    bc4c:	49 21 fd             	and    %rdi,%r13
    bc4f:	75 b7                	jne    bc08 <mm_alloc_internal+0x98>
    bc51:	48 85 ff             	test   %rdi,%rdi
    bc54:	74 23                	je     bc79 <mm_alloc_internal+0x109>
    bc56:	4c 89 fe             	mov    %r15,%rsi
    bc59:	89 54 24 1c          	mov    %edx,0x1c(%rsp)
    bc5d:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
    bc62:	e8 49 9d ff ff       	call   59b0 <sgx_mm_is_within_enclave>
    bc67:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
    bc6c:	8b 54 24 1c          	mov    0x1c(%rsp),%edx
    bc70:	b9 0d 00 00 00       	mov    $0xd,%ecx
    bc75:	84 c0                	test   %al,%al
    bc77:	74 94                	je     bc0d <mm_alloc_internal+0x9d>
    bc79:	48 8b 3d 90 ed 01 00 	mov    0x1ed90(%rip),%rdi        # 2aa10 <mm_lock>
    bc80:	89 54 24 1c          	mov    %edx,0x1c(%rsp)
    bc84:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
    bc89:	e8 c2 9c ff ff       	call   5950 <sgx_mm_mutex_lock>
    bc8e:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
    bc93:	8b 54 24 1c          	mov    0x1c(%rsp),%edx
    bc97:	b9 0e 00 00 00       	mov    $0xe,%ecx
    bc9c:	85 c0                	test   %eax,%eax
    bc9e:	0f 85 69 ff ff ff    	jne    bc0d <mm_alloc_internal+0x9d>
    bca4:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
    bca9:	49 83 c8 03          	or     $0x3,%r8
    bcad:	0f b6 c2             	movzbl %dl,%eax
    bcb0:	f6 c2 01             	test   $0x1,%dl
    bcb3:	89 44 24 10          	mov    %eax,0x10(%rsp)
    bcb7:	4d 0f 44 e8          	cmove  %r8,%r13
    bcbb:	48 85 f6             	test   %rsi,%rsi
    bcbe:	0f 85 9c 00 00 00    	jne    bd60 <mm_alloc_internal+0x1f0>
    bcc4:	4c 8d 44 24 40       	lea    0x40(%rsp),%r8
    bcc9:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    bcce:	48 8d 4c 24 38       	lea    0x38(%rsp),%rcx
    bcd3:	4c 89 fe             	mov    %r15,%rsi
    bcd6:	4c 89 f7             	mov    %r14,%rdi
    bcd9:	e8 e2 de ff ff       	call   9bc0 <find_free_region>
    bcde:	84 c0                	test   %al,%al
    bce0:	0f 84 0a 01 00 00    	je     bdf0 <mm_alloc_internal+0x280>
    bce6:	48 83 ec 08          	sub    $0x8,%rsp
    bcea:	49 89 e9             	mov    %rbp,%r9
    bced:	49 89 d8             	mov    %rbx,%r8
    bcf0:	4c 89 e9             	mov    %r13,%rcx
    bcf3:	ff 74 24 48          	push   0x48(%rsp)
    bcf7:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
    bcfc:	4c 89 fe             	mov    %r15,%rsi
    bcff:	8b 54 24 20          	mov    0x20(%rsp),%edx
    bd03:	e8 a8 e2 ff ff       	call   9fb0 <ema_new>
    bd08:	48 89 c7             	mov    %rax,%rdi
    bd0b:	58                   	pop    %rax
    bd0c:	5a                   	pop    %rdx
    bd0d:	48 85 ff             	test   %rdi,%rdi
    bd10:	0f 84 da 00 00 00    	je     bdf0 <mm_alloc_internal+0x280>
    bd16:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    bd1b:	e8 30 f2 ff ff       	call   af50 <ema_do_alloc>
    bd20:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    bd25:	85 c0                	test   %eax,%eax
    bd27:	89 c1                	mov    %eax,%ecx
    bd29:	0f 85 21 01 00 00    	jne    be50 <mm_alloc_internal+0x2e0>
    bd2f:	4d 85 e4             	test   %r12,%r12
    bd32:	74 09                	je     bd3d <mm_alloc_internal+0x1cd>
    bd34:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    bd39:	49 89 04 24          	mov    %rax,(%r12)
    bd3d:	48 8b 3d cc ec 01 00 	mov    0x1eccc(%rip),%rdi        # 2aa10 <mm_lock>
    bd44:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
    bd48:	e8 23 9c ff ff       	call   5970 <sgx_mm_mutex_unlock>
    bd4d:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
    bd51:	e9 b7 fe ff ff       	jmp    bc0d <mm_alloc_internal+0x9d>
    bd56:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    bd5d:	00 00 00 
    bd60:	83 e2 40             	and    $0x40,%edx
    bd63:	4a 8d 04 3e          	lea    (%rsi,%r15,1),%rax
    bd67:	48 8d 4c 24 48       	lea    0x48(%rsp),%rcx
    bd6c:	4c 89 f7             	mov    %r14,%rdi
    bd6f:	89 54 24 1c          	mov    %edx,0x1c(%rsp)
    bd73:	4c 8d 44 24 50       	lea    0x50(%rsp),%r8
    bd78:	48 89 c2             	mov    %rax,%rdx
    bd7b:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
    bd82:	00 00 
    bd84:	48 c7 44 24 50 00 00 	movq   $0x0,0x50(%rsp)
    bd8b:	00 00 
    bd8d:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    bd92:	48 89 74 24 28       	mov    %rsi,0x28(%rsp)
    bd97:	e8 64 db ff ff       	call   9900 <search_ema_range>
    bd9c:	85 c0                	test   %eax,%eax
    bd9e:	75 60                	jne    be00 <mm_alloc_internal+0x290>
    bda0:	55                   	push   %rbp
    bda1:	4d 89 e9             	mov    %r13,%r9
    bda4:	53                   	push   %rbx
    bda5:	48 8b 7c 24 58       	mov    0x58(%rsp),%rdi
    bdaa:	44 8b 44 24 20       	mov    0x20(%rsp),%r8d
    bdaf:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
    bdb4:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
    bdb9:	48 8b 74 24 60       	mov    0x60(%rsp),%rsi
    bdbe:	e8 3d f0 ff ff       	call   ae00 <ema_realloc_from_reserve_range>
    bdc3:	41 58                	pop    %r8
    bdc5:	41 59                	pop    %r9
    bdc7:	48 89 c7             	mov    %rax,%rdi
    bdca:	48 85 c0             	test   %rax,%rax
    bdcd:	0f 85 43 ff ff ff    	jne    bd16 <mm_alloc_internal+0x1a6>
    bdd3:	8b 7c 24 1c          	mov    0x1c(%rsp),%edi
    bdd7:	b9 11 00 00 00       	mov    $0x11,%ecx
    bddc:	85 ff                	test   %edi,%edi
    bdde:	0f 84 e0 fe ff ff    	je     bcc4 <mm_alloc_internal+0x154>
    bde4:	e9 54 ff ff ff       	jmp    bd3d <mm_alloc_internal+0x1cd>
    bde9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    bdf0:	b9 0c 00 00 00       	mov    $0xc,%ecx
    bdf5:	e9 43 ff ff ff       	jmp    bd3d <mm_alloc_internal+0x1cd>
    bdfa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    be00:	4c 8d 44 24 40       	lea    0x40(%rsp),%r8
    be05:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
    be0a:	4c 89 fa             	mov    %r15,%rdx
    be0d:	4c 89 f7             	mov    %r14,%rdi
    be10:	4c 89 c1             	mov    %r8,%rcx
    be13:	4c 89 44 24 20       	mov    %r8,0x20(%rsp)
    be18:	e8 b3 e0 ff ff       	call   9ed0 <find_free_region_at>
    be1d:	3c 01                	cmp    $0x1,%al
    be1f:	0f 84 c1 fe ff ff    	je     bce6 <mm_alloc_internal+0x176>
    be25:	8b 74 24 1c          	mov    0x1c(%rsp),%esi
    be29:	b9 01 00 00 00       	mov    $0x1,%ecx
    be2e:	85 f6                	test   %esi,%esi
    be30:	0f 85 07 ff ff ff    	jne    bd3d <mm_alloc_internal+0x1cd>
    be36:	84 c0                	test   %al,%al
    be38:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
    be3d:	0f 84 86 fe ff ff    	je     bcc9 <mm_alloc_internal+0x159>
    be43:	e9 9e fe ff ff       	jmp    bce6 <mm_alloc_internal+0x176>
    be48:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    be4f:	00 
    be50:	89 44 24 08          	mov    %eax,0x8(%rsp)
    be54:	e8 67 e2 ff ff       	call   a0c0 <ema_destroy>
    be59:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
    be5d:	e9 db fe ff ff       	jmp    bd3d <mm_alloc_internal+0x1cd>
    be62:	e8 09 4b 00 00       	call   10970 <__stack_chk_fail>
    be67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    be6e:	00 00 

000000000000be70 <sgx_mm_alloc>:
    be70:	f3 0f 1e fa          	endbr64 
    be74:	f6 c2 80             	test   $0x80,%dl
    be77:	75 17                	jne    be90 <sgx_mm_alloc+0x20>
    be79:	48 83 ec 10          	sub    $0x10,%rsp
    be7d:	48 8d 05 7c e1 00 00 	lea    0xe17c(%rip),%rax        # 1a000 <g_user_ema_root>
    be84:	50                   	push   %rax
    be85:	e8 e6 fc ff ff       	call   bb70 <mm_alloc_internal>
    be8a:	48 83 c4 18          	add    $0x18,%rsp
    be8e:	c3                   	ret    
    be8f:	90                   	nop
    be90:	b8 16 00 00 00       	mov    $0x16,%eax
    be95:	c3                   	ret    
    be96:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    be9d:	00 00 00 

000000000000bea0 <mm_commit_internal>:
    bea0:	f3 0f 1e fa          	endbr64 
    bea4:	41 55                	push   %r13
    bea6:	49 89 d5             	mov    %rdx,%r13
    bea9:	41 54                	push   %r12
    beab:	49 89 fc             	mov    %rdi,%r12
    beae:	55                   	push   %rbp
    beaf:	48 89 f5             	mov    %rsi,%rbp
    beb2:	53                   	push   %rbx
    beb3:	bb 0e 00 00 00       	mov    $0xe,%ebx
    beb8:	48 83 ec 28          	sub    $0x28,%rsp
    bebc:	48 8b 3d 4d eb 01 00 	mov    0x1eb4d(%rip),%rdi        # 2aa10 <mm_lock>
    bec3:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    beca:	00 00 
    becc:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    bed1:	31 c0                	xor    %eax,%eax
    bed3:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    beda:	00 00 
    bedc:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    bee3:	00 00 
    bee5:	e8 66 9a ff ff       	call   5950 <sgx_mm_mutex_lock>
    beea:	85 c0                	test   %eax,%eax
    beec:	75 47                	jne    bf35 <mm_commit_internal+0x95>
    beee:	4c 01 e5             	add    %r12,%rbp
    bef1:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    bef6:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    befb:	4c 89 e6             	mov    %r12,%rsi
    befe:	48 89 ea             	mov    %rbp,%rdx
    bf01:	4c 89 ef             	mov    %r13,%rdi
    bf04:	bb 16 00 00 00       	mov    $0x16,%ebx
    bf09:	e8 f2 d9 ff ff       	call   9900 <search_ema_range>
    bf0e:	85 c0                	test   %eax,%eax
    bf10:	78 17                	js     bf29 <mm_commit_internal+0x89>
    bf12:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    bf17:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    bf1c:	48 89 e9             	mov    %rbp,%rcx
    bf1f:	4c 89 e2             	mov    %r12,%rdx
    bf22:	e8 f9 e3 ff ff       	call   a320 <ema_do_commit_loop>
    bf27:	89 c3                	mov    %eax,%ebx
    bf29:	48 8b 3d e0 ea 01 00 	mov    0x1eae0(%rip),%rdi        # 2aa10 <mm_lock>
    bf30:	e8 3b 9a ff ff       	call   5970 <sgx_mm_mutex_unlock>
    bf35:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    bf3a:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    bf41:	00 00 
    bf43:	75 0d                	jne    bf52 <mm_commit_internal+0xb2>
    bf45:	48 83 c4 28          	add    $0x28,%rsp
    bf49:	89 d8                	mov    %ebx,%eax
    bf4b:	5b                   	pop    %rbx
    bf4c:	5d                   	pop    %rbp
    bf4d:	41 5c                	pop    %r12
    bf4f:	41 5d                	pop    %r13
    bf51:	c3                   	ret    
    bf52:	e8 19 4a 00 00       	call   10970 <__stack_chk_fail>
    bf57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    bf5e:	00 00 

000000000000bf60 <sgx_mm_commit>:
    bf60:	f3 0f 1e fa          	endbr64 
    bf64:	48 8d 15 95 e0 00 00 	lea    0xe095(%rip),%rdx        # 1a000 <g_user_ema_root>
    bf6b:	e9 30 ff ff ff       	jmp    bea0 <mm_commit_internal>

000000000000bf70 <mm_uncommit_internal>:
    bf70:	f3 0f 1e fa          	endbr64 
    bf74:	41 55                	push   %r13
    bf76:	49 89 d5             	mov    %rdx,%r13
    bf79:	41 54                	push   %r12
    bf7b:	49 89 fc             	mov    %rdi,%r12
    bf7e:	55                   	push   %rbp
    bf7f:	48 89 f5             	mov    %rsi,%rbp
    bf82:	53                   	push   %rbx
    bf83:	bb 0e 00 00 00       	mov    $0xe,%ebx
    bf88:	48 83 ec 28          	sub    $0x28,%rsp
    bf8c:	48 8b 3d 7d ea 01 00 	mov    0x1ea7d(%rip),%rdi        # 2aa10 <mm_lock>
    bf93:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    bf9a:	00 00 
    bf9c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    bfa1:	31 c0                	xor    %eax,%eax
    bfa3:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    bfaa:	00 00 
    bfac:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    bfb3:	00 00 
    bfb5:	e8 96 99 ff ff       	call   5950 <sgx_mm_mutex_lock>
    bfba:	85 c0                	test   %eax,%eax
    bfbc:	75 47                	jne    c005 <mm_uncommit_internal+0x95>
    bfbe:	4c 01 e5             	add    %r12,%rbp
    bfc1:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    bfc6:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    bfcb:	4c 89 e6             	mov    %r12,%rsi
    bfce:	48 89 ea             	mov    %rbp,%rdx
    bfd1:	4c 89 ef             	mov    %r13,%rdi
    bfd4:	bb 16 00 00 00       	mov    $0x16,%ebx
    bfd9:	e8 22 d9 ff ff       	call   9900 <search_ema_range>
    bfde:	85 c0                	test   %eax,%eax
    bfe0:	78 17                	js     bff9 <mm_uncommit_internal+0x89>
    bfe2:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    bfe7:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    bfec:	48 89 e9             	mov    %rbp,%rcx
    bfef:	4c 89 e2             	mov    %r12,%rdx
    bff2:	e8 69 e9 ff ff       	call   a960 <ema_do_uncommit_loop>
    bff7:	89 c3                	mov    %eax,%ebx
    bff9:	48 8b 3d 10 ea 01 00 	mov    0x1ea10(%rip),%rdi        # 2aa10 <mm_lock>
    c000:	e8 6b 99 ff ff       	call   5970 <sgx_mm_mutex_unlock>
    c005:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    c00a:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    c011:	00 00 
    c013:	75 0d                	jne    c022 <mm_uncommit_internal+0xb2>
    c015:	48 83 c4 28          	add    $0x28,%rsp
    c019:	89 d8                	mov    %ebx,%eax
    c01b:	5b                   	pop    %rbx
    c01c:	5d                   	pop    %rbp
    c01d:	41 5c                	pop    %r12
    c01f:	41 5d                	pop    %r13
    c021:	c3                   	ret    
    c022:	e8 49 49 00 00       	call   10970 <__stack_chk_fail>
    c027:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    c02e:	00 00 

000000000000c030 <sgx_mm_uncommit>:
    c030:	f3 0f 1e fa          	endbr64 
    c034:	48 8d 15 c5 df 00 00 	lea    0xdfc5(%rip),%rdx        # 1a000 <g_user_ema_root>
    c03b:	e9 30 ff ff ff       	jmp    bf70 <mm_uncommit_internal>

000000000000c040 <mm_dealloc_internal>:
    c040:	f3 0f 1e fa          	endbr64 
    c044:	41 55                	push   %r13
    c046:	49 89 d5             	mov    %rdx,%r13
    c049:	41 54                	push   %r12
    c04b:	49 89 fc             	mov    %rdi,%r12
    c04e:	55                   	push   %rbp
    c04f:	48 89 f5             	mov    %rsi,%rbp
    c052:	53                   	push   %rbx
    c053:	bb 0e 00 00 00       	mov    $0xe,%ebx
    c058:	48 83 ec 28          	sub    $0x28,%rsp
    c05c:	48 8b 3d ad e9 01 00 	mov    0x1e9ad(%rip),%rdi        # 2aa10 <mm_lock>
    c063:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c06a:	00 00 
    c06c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    c071:	31 c0                	xor    %eax,%eax
    c073:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    c07a:	00 00 
    c07c:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    c083:	00 00 
    c085:	e8 c6 98 ff ff       	call   5950 <sgx_mm_mutex_lock>
    c08a:	85 c0                	test   %eax,%eax
    c08c:	75 47                	jne    c0d5 <mm_dealloc_internal+0x95>
    c08e:	4c 01 e5             	add    %r12,%rbp
    c091:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    c096:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    c09b:	4c 89 e6             	mov    %r12,%rsi
    c09e:	48 89 ea             	mov    %rbp,%rdx
    c0a1:	4c 89 ef             	mov    %r13,%rdi
    c0a4:	bb 16 00 00 00       	mov    $0x16,%ebx
    c0a9:	e8 52 d8 ff ff       	call   9900 <search_ema_range>
    c0ae:	85 c0                	test   %eax,%eax
    c0b0:	78 17                	js     c0c9 <mm_dealloc_internal+0x89>
    c0b2:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    c0b7:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    c0bc:	48 89 e9             	mov    %rbp,%rcx
    c0bf:	4c 89 e2             	mov    %r12,%rdx
    c0c2:	e8 49 e8 ff ff       	call   a910 <ema_do_dealloc_loop>
    c0c7:	89 c3                	mov    %eax,%ebx
    c0c9:	48 8b 3d 40 e9 01 00 	mov    0x1e940(%rip),%rdi        # 2aa10 <mm_lock>
    c0d0:	e8 9b 98 ff ff       	call   5970 <sgx_mm_mutex_unlock>
    c0d5:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    c0da:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    c0e1:	00 00 
    c0e3:	75 0d                	jne    c0f2 <mm_dealloc_internal+0xb2>
    c0e5:	48 83 c4 28          	add    $0x28,%rsp
    c0e9:	89 d8                	mov    %ebx,%eax
    c0eb:	5b                   	pop    %rbx
    c0ec:	5d                   	pop    %rbp
    c0ed:	41 5c                	pop    %r12
    c0ef:	41 5d                	pop    %r13
    c0f1:	c3                   	ret    
    c0f2:	e8 79 48 00 00       	call   10970 <__stack_chk_fail>
    c0f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    c0fe:	00 00 

000000000000c100 <sgx_mm_dealloc>:
    c100:	f3 0f 1e fa          	endbr64 
    c104:	48 8d 15 f5 de 00 00 	lea    0xdef5(%rip),%rdx        # 1a000 <g_user_ema_root>
    c10b:	e9 30 ff ff ff       	jmp    c040 <mm_dealloc_internal>

000000000000c110 <mm_commit_data_internal>:
    c110:	f3 0f 1e fa          	endbr64 
    c114:	41 57                	push   %r15
    c116:	41 56                	push   %r14
    c118:	41 55                	push   %r13
    c11a:	41 54                	push   %r12
    c11c:	55                   	push   %rbp
    c11d:	53                   	push   %rbx
    c11e:	48 83 ec 28          	sub    $0x28,%rsp
    c122:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c129:	00 00 
    c12b:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    c130:	31 c0                	xor    %eax,%eax
    c132:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    c139:	00 00 
    c13b:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    c142:	00 00 
    c144:	48 85 f6             	test   %rsi,%rsi
    c147:	0f 84 a3 00 00 00    	je     c1f0 <mm_commit_data_internal+0xe0>
    c14d:	48 89 d0             	mov    %rdx,%rax
    c150:	49 89 fc             	mov    %rdi,%r12
    c153:	48 89 f3             	mov    %rsi,%rbx
    c156:	48 89 d5             	mov    %rdx,%rbp
    c159:	48 09 f0             	or     %rsi,%rax
    c15c:	48 09 f8             	or     %rdi,%rax
    c15f:	a9 ff 0f 00 00       	test   $0xfff,%eax
    c164:	0f 85 86 00 00 00    	jne    c1f0 <mm_commit_data_internal+0xe0>
    c16a:	41 89 cf             	mov    %ecx,%r15d
    c16d:	83 f9 07             	cmp    $0x7,%ecx
    c170:	77 7e                	ja     c1f0 <mm_commit_data_internal+0xe0>
    c172:	48 89 d7             	mov    %rdx,%rdi
    c175:	4d 89 c6             	mov    %r8,%r14
    c178:	e8 33 98 ff ff       	call   59b0 <sgx_mm_is_within_enclave>
    c17d:	84 c0                	test   %al,%al
    c17f:	74 6f                	je     c1f0 <mm_commit_data_internal+0xe0>
    c181:	48 8b 3d 88 e8 01 00 	mov    0x1e888(%rip),%rdi        # 2aa10 <mm_lock>
    c188:	41 bd 0e 00 00 00    	mov    $0xe,%r13d
    c18e:	e8 bd 97 ff ff       	call   5950 <sgx_mm_mutex_lock>
    c193:	85 c0                	test   %eax,%eax
    c195:	75 5f                	jne    c1f6 <mm_commit_data_internal+0xe6>
    c197:	4c 01 e3             	add    %r12,%rbx
    c19a:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    c19f:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    c1a4:	4c 89 e6             	mov    %r12,%rsi
    c1a7:	48 89 da             	mov    %rbx,%rdx
    c1aa:	4c 89 f7             	mov    %r14,%rdi
    c1ad:	41 bd 16 00 00 00    	mov    $0x16,%r13d
    c1b3:	e8 48 d7 ff ff       	call   9900 <search_ema_range>
    c1b8:	85 c0                	test   %eax,%eax
    c1ba:	78 1e                	js     c1da <mm_commit_data_internal+0xca>
    c1bc:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    c1c1:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    c1c6:	45 89 f9             	mov    %r15d,%r9d
    c1c9:	49 89 e8             	mov    %rbp,%r8
    c1cc:	48 89 d9             	mov    %rbx,%rcx
    c1cf:	4c 89 e2             	mov    %r12,%rdx
    c1d2:	e8 a9 ea ff ff       	call   ac80 <ema_do_commit_data_loop>
    c1d7:	41 89 c5             	mov    %eax,%r13d
    c1da:	48 8b 3d 2f e8 01 00 	mov    0x1e82f(%rip),%rdi        # 2aa10 <mm_lock>
    c1e1:	e8 8a 97 ff ff       	call   5970 <sgx_mm_mutex_unlock>
    c1e6:	eb 0e                	jmp    c1f6 <mm_commit_data_internal+0xe6>
    c1e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    c1ef:	00 
    c1f0:	41 bd 16 00 00 00    	mov    $0x16,%r13d
    c1f6:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    c1fb:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    c202:	00 00 
    c204:	75 12                	jne    c218 <mm_commit_data_internal+0x108>
    c206:	48 83 c4 28          	add    $0x28,%rsp
    c20a:	44 89 e8             	mov    %r13d,%eax
    c20d:	5b                   	pop    %rbx
    c20e:	5d                   	pop    %rbp
    c20f:	41 5c                	pop    %r12
    c211:	41 5d                	pop    %r13
    c213:	41 5e                	pop    %r14
    c215:	41 5f                	pop    %r15
    c217:	c3                   	ret    
    c218:	e8 53 47 00 00       	call   10970 <__stack_chk_fail>
    c21d:	0f 1f 00             	nopl   (%rax)

000000000000c220 <sgx_mm_commit_data>:
    c220:	f3 0f 1e fa          	endbr64 
    c224:	4c 8d 05 d5 dd 00 00 	lea    0xddd5(%rip),%r8        # 1a000 <g_user_ema_root>
    c22b:	e9 e0 fe ff ff       	jmp    c110 <mm_commit_data_internal>

000000000000c230 <mm_modify_type_internal>:
    c230:	f3 0f 1e fa          	endbr64 
    c234:	41 54                	push   %r12
    c236:	55                   	push   %rbp
    c237:	bd 01 00 00 00       	mov    $0x1,%ebp
    c23c:	53                   	push   %rbx
    c23d:	48 83 ec 20          	sub    $0x20,%rsp
    c241:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c248:	00 00 
    c24a:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    c24f:	31 c0                	xor    %eax,%eax
    c251:	81 fa 00 01 00 00    	cmp    $0x100,%edx
    c257:	0f 85 83 00 00 00    	jne    c2e0 <mm_modify_type_internal+0xb0>
    c25d:	48 81 fe 00 10 00 00 	cmp    $0x1000,%rsi
    c264:	0f 85 96 00 00 00    	jne    c300 <mm_modify_type_internal+0xd0>
    c26a:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    c271:	00 00 
    c273:	49 89 fc             	mov    %rdi,%r12
    c276:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    c27d:	00 00 
    c27f:	f7 c7 ff 0f 00 00    	test   $0xfff,%edi
    c285:	75 79                	jne    c300 <mm_modify_type_internal+0xd0>
    c287:	48 8b 3d 82 e7 01 00 	mov    0x1e782(%rip),%rdi        # 2aa10 <mm_lock>
    c28e:	48 89 cb             	mov    %rcx,%rbx
    c291:	bd 0e 00 00 00       	mov    $0xe,%ebp
    c296:	e8 b5 96 ff ff       	call   5950 <sgx_mm_mutex_lock>
    c29b:	85 c0                	test   %eax,%eax
    c29d:	75 41                	jne    c2e0 <mm_modify_type_internal+0xb0>
    c29f:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    c2a4:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    c2a9:	4c 89 e6             	mov    %r12,%rsi
    c2ac:	48 89 df             	mov    %rbx,%rdi
    c2af:	49 8d 94 24 00 10 00 	lea    0x1000(%r12),%rdx
    c2b6:	00 
    c2b7:	bd 16 00 00 00       	mov    $0x16,%ebp
    c2bc:	e8 3f d6 ff ff       	call   9900 <search_ema_range>
    c2c1:	85 c0                	test   %eax,%eax
    c2c3:	78 0f                	js     c2d4 <mm_modify_type_internal+0xa4>
    c2c5:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    c2ca:	4c 89 e6             	mov    %r12,%rsi
    c2cd:	e8 1e e1 ff ff       	call   a3f0 <ema_change_to_tcs>
    c2d2:	89 c5                	mov    %eax,%ebp
    c2d4:	48 8b 3d 35 e7 01 00 	mov    0x1e735(%rip),%rdi        # 2aa10 <mm_lock>
    c2db:	e8 90 96 ff ff       	call   5970 <sgx_mm_mutex_unlock>
    c2e0:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    c2e5:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    c2ec:	00 00 
    c2ee:	75 17                	jne    c307 <mm_modify_type_internal+0xd7>
    c2f0:	48 83 c4 20          	add    $0x20,%rsp
    c2f4:	89 e8                	mov    %ebp,%eax
    c2f6:	5b                   	pop    %rbx
    c2f7:	5d                   	pop    %rbp
    c2f8:	41 5c                	pop    %r12
    c2fa:	c3                   	ret    
    c2fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    c300:	bd 16 00 00 00       	mov    $0x16,%ebp
    c305:	eb d9                	jmp    c2e0 <mm_modify_type_internal+0xb0>
    c307:	e8 64 46 00 00       	call   10970 <__stack_chk_fail>
    c30c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000c310 <sgx_mm_modify_type>:
    c310:	f3 0f 1e fa          	endbr64 
    c314:	55                   	push   %rbp
    c315:	53                   	push   %rbx
    c316:	bb 01 00 00 00       	mov    $0x1,%ebx
    c31b:	48 83 ec 28          	sub    $0x28,%rsp
    c31f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c326:	00 00 
    c328:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    c32d:	31 c0                	xor    %eax,%eax
    c32f:	81 fa 00 01 00 00    	cmp    $0x100,%edx
    c335:	0f 85 85 00 00 00    	jne    c3c0 <sgx_mm_modify_type+0xb0>
    c33b:	48 81 fe 00 10 00 00 	cmp    $0x1000,%rsi
    c342:	0f 85 98 00 00 00    	jne    c3e0 <sgx_mm_modify_type+0xd0>
    c348:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    c34f:	00 00 
    c351:	48 89 fd             	mov    %rdi,%rbp
    c354:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    c35b:	00 00 
    c35d:	f7 c7 ff 0f 00 00    	test   $0xfff,%edi
    c363:	75 7b                	jne    c3e0 <sgx_mm_modify_type+0xd0>
    c365:	48 8b 3d a4 e6 01 00 	mov    0x1e6a4(%rip),%rdi        # 2aa10 <mm_lock>
    c36c:	bb 0e 00 00 00       	mov    $0xe,%ebx
    c371:	e8 da 95 ff ff       	call   5950 <sgx_mm_mutex_lock>
    c376:	85 c0                	test   %eax,%eax
    c378:	75 46                	jne    c3c0 <sgx_mm_modify_type+0xb0>
    c37a:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    c37f:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    c384:	48 89 ee             	mov    %rbp,%rsi
    c387:	bb 16 00 00 00       	mov    $0x16,%ebx
    c38c:	48 8d 95 00 10 00 00 	lea    0x1000(%rbp),%rdx
    c393:	48 8d 3d 66 dc 00 00 	lea    0xdc66(%rip),%rdi        # 1a000 <g_user_ema_root>
    c39a:	e8 61 d5 ff ff       	call   9900 <search_ema_range>
    c39f:	85 c0                	test   %eax,%eax
    c3a1:	78 0f                	js     c3b2 <sgx_mm_modify_type+0xa2>
    c3a3:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    c3a8:	48 89 ee             	mov    %rbp,%rsi
    c3ab:	e8 40 e0 ff ff       	call   a3f0 <ema_change_to_tcs>
    c3b0:	89 c3                	mov    %eax,%ebx
    c3b2:	48 8b 3d 57 e6 01 00 	mov    0x1e657(%rip),%rdi        # 2aa10 <mm_lock>
    c3b9:	e8 b2 95 ff ff       	call   5970 <sgx_mm_mutex_unlock>
    c3be:	66 90                	xchg   %ax,%ax
    c3c0:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    c3c5:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    c3cc:	00 00 
    c3ce:	75 17                	jne    c3e7 <sgx_mm_modify_type+0xd7>
    c3d0:	48 83 c4 28          	add    $0x28,%rsp
    c3d4:	89 d8                	mov    %ebx,%eax
    c3d6:	5b                   	pop    %rbx
    c3d7:	5d                   	pop    %rbp
    c3d8:	c3                   	ret    
    c3d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c3e0:	bb 16 00 00 00       	mov    $0x16,%ebx
    c3e5:	eb d9                	jmp    c3c0 <sgx_mm_modify_type+0xb0>
    c3e7:	e8 84 45 00 00       	call   10970 <__stack_chk_fail>
    c3ec:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000c3f0 <mm_modify_permissions_internal>:
    c3f0:	f3 0f 1e fa          	endbr64 
    c3f4:	41 56                	push   %r14
    c3f6:	41 55                	push   %r13
    c3f8:	41 54                	push   %r12
    c3fa:	41 bc 16 00 00 00    	mov    $0x16,%r12d
    c400:	55                   	push   %rbp
    c401:	53                   	push   %rbx
    c402:	48 83 ec 20          	sub    $0x20,%rsp
    c406:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c40d:	00 00 
    c40f:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    c414:	31 c0                	xor    %eax,%eax
    c416:	48 85 f6             	test   %rsi,%rsi
    c419:	0f 84 9b 00 00 00    	je     c4ba <mm_modify_permissions_internal+0xca>
    c41f:	48 89 f8             	mov    %rdi,%rax
    c422:	48 89 fd             	mov    %rdi,%rbp
    c425:	48 89 f3             	mov    %rsi,%rbx
    c428:	48 09 f0             	or     %rsi,%rax
    c42b:	a9 ff 0f 00 00       	test   $0xfff,%eax
    c430:	0f 85 84 00 00 00    	jne    c4ba <mm_modify_permissions_internal+0xca>
    c436:	89 d0                	mov    %edx,%eax
    c438:	41 89 d6             	mov    %edx,%r14d
    c43b:	83 e0 05             	and    $0x5,%eax
    c43e:	83 f8 04             	cmp    $0x4,%eax
    c441:	74 77                	je     c4ba <mm_modify_permissions_internal+0xca>
    c443:	48 8b 3d c6 e5 01 00 	mov    0x1e5c6(%rip),%rdi        # 2aa10 <mm_lock>
    c44a:	49 89 cd             	mov    %rcx,%r13
    c44d:	41 bc 0e 00 00 00    	mov    $0xe,%r12d
    c453:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    c45a:	00 00 
    c45c:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    c463:	00 00 
    c465:	e8 e6 94 ff ff       	call   5950 <sgx_mm_mutex_lock>
    c46a:	85 c0                	test   %eax,%eax
    c46c:	75 4c                	jne    c4ba <mm_modify_permissions_internal+0xca>
    c46e:	48 01 eb             	add    %rbp,%rbx
    c471:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    c476:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    c47b:	48 89 ee             	mov    %rbp,%rsi
    c47e:	48 89 da             	mov    %rbx,%rdx
    c481:	4c 89 ef             	mov    %r13,%rdi
    c484:	41 bc 16 00 00 00    	mov    $0x16,%r12d
    c48a:	e8 71 d4 ff ff       	call   9900 <search_ema_range>
    c48f:	85 c0                	test   %eax,%eax
    c491:	78 1b                	js     c4ae <mm_modify_permissions_internal+0xbe>
    c493:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    c498:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    c49d:	45 89 f0             	mov    %r14d,%r8d
    c4a0:	48 89 d9             	mov    %rbx,%rcx
    c4a3:	48 89 ea             	mov    %rbp,%rdx
    c4a6:	e8 d5 e5 ff ff       	call   aa80 <ema_modify_permissions_loop>
    c4ab:	41 89 c4             	mov    %eax,%r12d
    c4ae:	48 8b 3d 5b e5 01 00 	mov    0x1e55b(%rip),%rdi        # 2aa10 <mm_lock>
    c4b5:	e8 b6 94 ff ff       	call   5970 <sgx_mm_mutex_unlock>
    c4ba:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    c4bf:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    c4c6:	00 00 
    c4c8:	75 10                	jne    c4da <mm_modify_permissions_internal+0xea>
    c4ca:	48 83 c4 20          	add    $0x20,%rsp
    c4ce:	44 89 e0             	mov    %r12d,%eax
    c4d1:	5b                   	pop    %rbx
    c4d2:	5d                   	pop    %rbp
    c4d3:	41 5c                	pop    %r12
    c4d5:	41 5d                	pop    %r13
    c4d7:	41 5e                	pop    %r14
    c4d9:	c3                   	ret    
    c4da:	e8 91 44 00 00       	call   10970 <__stack_chk_fail>
    c4df:	90                   	nop

000000000000c4e0 <sgx_mm_modify_permissions>:
    c4e0:	f3 0f 1e fa          	endbr64 
    c4e4:	48 8d 0d 15 db 00 00 	lea    0xdb15(%rip),%rcx        # 1a000 <g_user_ema_root>
    c4eb:	e9 00 ff ff ff       	jmp    c3f0 <mm_modify_permissions_internal>

000000000000c4f0 <sgx_mm_init>:
    c4f0:	f3 0f 1e fa          	endbr64 
    c4f4:	55                   	push   %rbp
    c4f5:	48 89 fd             	mov    %rdi,%rbp
    c4f8:	53                   	push   %rbx
    c4f9:	48 89 f3             	mov    %rsi,%rbx
    c4fc:	48 83 ec 08          	sub    $0x8,%rsp
    c500:	e8 0b 94 ff ff       	call   5910 <sgx_mm_mutex_create>
    c505:	48 89 05 04 e5 01 00 	mov    %rax,0x1e504(%rip)        # 2aa10 <mm_lock>
    c50c:	48 85 c0             	test   %rax,%rax
    c50f:	74 2f                	je     c540 <sgx_mm_init+0x50>
    c511:	48 8d 3d 98 f4 ff ff 	lea    -0xb68(%rip),%rdi        # b9b0 <sgx_mm_enclave_pfhandler>
    c518:	48 89 2d e9 e4 01 00 	mov    %rbp,0x1e4e9(%rip)        # 2aa08 <mm_user_base>
    c51f:	48 89 1d da e4 01 00 	mov    %rbx,0x1e4da(%rip)        # 2aa00 <mm_user_end>
    c526:	e8 85 93 ff ff       	call   58b0 <sgx_mm_register_pfhandler>
    c52b:	84 c0                	test   %al,%al
    c52d:	74 11                	je     c540 <sgx_mm_init+0x50>
    c52f:	48 83 c4 08          	add    $0x8,%rsp
    c533:	31 c0                	xor    %eax,%eax
    c535:	5b                   	pop    %rbx
    c536:	5d                   	pop    %rbp
    c537:	c3                   	ret    
    c538:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    c53f:	00 
    c540:	48 83 c4 08          	add    $0x8,%rsp
    c544:	b8 0e 00 00 00       	mov    $0xe,%eax
    c549:	5b                   	pop    %rbx
    c54a:	5d                   	pop    %rbp
    c54b:	c3                   	ret    
    c54c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000c550 <alloca>:
    c550:	f3 0f 1e fa          	endbr64 
    c554:	5a                   	pop    %rdx
    c555:	48 89 e1             	mov    %rsp,%rcx
    c558:	48 83 c7 0f          	add    $0xf,%rdi
    c55c:	48 83 e7 f0          	and    $0xfffffffffffffff0,%rdi
    c560:	48 29 fc             	sub    %rdi,%rsp
    c563:	48 89 e0             	mov    %rsp,%rax
    c566:	3e ff e2             	notrack jmp *%rdx
    c569:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000c570 <heap_init>:
    c570:	f3 0f 1e fa          	endbr64 
    c574:	48 89 f8             	mov    %rdi,%rax
    c577:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    c57d:	48 85 ff             	test   %rdi,%rdi
    c580:	75 0e                	jne    c590 <heap_init+0x20>
    c582:	44 89 c0             	mov    %r8d,%eax
    c585:	c3                   	ret    
    c586:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    c58d:	00 00 00 
    c590:	48 89 f7             	mov    %rsi,%rdi
    c593:	49 89 c1             	mov    %rax,%r9
    c596:	48 09 d7             	or     %rdx,%rdi
    c599:	41 81 e1 ff 0f 00 00 	and    $0xfff,%r9d
    c5a0:	81 e7 ff 0f 00 00    	and    $0xfff,%edi
    c5a6:	48 0b 3d a3 b8 00 00 	or     0xb8a3(%rip),%rdi        # 17e50 <heap_base>
    c5ad:	4c 09 cf             	or     %r9,%rdi
    c5b0:	75 d0                	jne    c582 <heap_init+0x12>
    c5b2:	45 31 c0             	xor    %r8d,%r8d
    c5b5:	48 89 05 94 b8 00 00 	mov    %rax,0xb894(%rip)        # 17e50 <heap_base>
    c5bc:	48 89 35 85 b8 00 00 	mov    %rsi,0xb885(%rip)        # 17e48 <heap_size>
    c5c3:	44 89 c0             	mov    %r8d,%eax
    c5c6:	48 89 15 6b b8 00 00 	mov    %rdx,0xb86b(%rip)        # 17e38 <heap_min_size>
    c5cd:	89 0d 6d b8 00 00    	mov    %ecx,0xb86d(%rip)        # 17e40 <is_edmm_supported>
    c5d3:	c3                   	ret    
    c5d4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    c5db:	00 00 00 
    c5de:	66 90                	xchg   %ax,%ax

000000000000c5e0 <sbrk>:
    c5e0:	f3 0f 1e fa          	endbr64 
    c5e4:	55                   	push   %rbp
    c5e5:	53                   	push   %rbx
    c5e6:	48 83 ec 08          	sub    $0x8,%rsp
    c5ea:	48 8b 05 5f b8 00 00 	mov    0xb85f(%rip),%rax        # 17e50 <heap_base>
    c5f1:	48 85 c0             	test   %rax,%rax
    c5f4:	0f 84 e6 00 00 00    	je     c6e0 <sbrk+0x100>
    c5fa:	48 8b 1d 17 e4 01 00 	mov    0x1e417(%rip),%rbx        # 2aa18 <heap_used.0>
    c601:	48 85 ff             	test   %rdi,%rdi
    c604:	0f 88 86 00 00 00    	js     c690 <sbrk+0xb0>
    c60a:	48 89 fa             	mov    %rdi,%rdx
    c60d:	48 01 da             	add    %rbx,%rdx
    c610:	0f 82 ca 00 00 00    	jb     c6e0 <sbrk+0x100>
    c616:	48 39 15 2b b8 00 00 	cmp    %rdx,0xb82b(%rip)        # 17e48 <heap_size>
    c61d:	0f 82 bd 00 00 00    	jb     c6e0 <sbrk+0x100>
    c623:	48 8d 2c 18          	lea    (%rax,%rbx,1),%rbp
    c627:	48 85 ff             	test   %rdi,%rdi
    c62a:	74 53                	je     c67f <sbrk+0x9f>
    c62c:	48 8b 0d ed e3 01 00 	mov    0x1e3ed(%rip),%rcx        # 2aa20 <g_peak_heap_used>
    c633:	48 89 15 de e3 01 00 	mov    %rdx,0x1e3de(%rip)        # 2aa18 <heap_used.0>
    c63a:	48 39 d1             	cmp    %rdx,%rcx
    c63d:	48 0f 42 ca          	cmovb  %rdx,%rcx
    c641:	48 89 0d d8 e3 01 00 	mov    %rcx,0x1e3d8(%rip)        # 2aa20 <g_peak_heap_used>
    c648:	8b 0d f2 b7 00 00    	mov    0xb7f2(%rip),%ecx        # 17e40 <is_edmm_supported>
    c64e:	85 c9                	test   %ecx,%ecx
    c650:	74 2d                	je     c67f <sbrk+0x9f>
    c652:	48 8b 0d df b7 00 00 	mov    0xb7df(%rip),%rcx        # 17e38 <heap_min_size>
    c659:	48 39 d1             	cmp    %rdx,%rcx
    c65c:	73 21                	jae    c67f <sbrk+0x9f>
    c65e:	49 89 e8             	mov    %rbp,%r8
    c661:	48 39 d9             	cmp    %rbx,%rcx
    c664:	72 0a                	jb     c670 <sbrk+0x90>
    c666:	48 29 ca             	sub    %rcx,%rdx
    c669:	4c 8d 04 08          	lea    (%rax,%rcx,1),%r8
    c66d:	48 89 d7             	mov    %rdx,%rdi
    c670:	48 89 fe             	mov    %rdi,%rsi
    c673:	4c 89 c7             	mov    %r8,%rdi
    c676:	e8 d5 f2 ff ff       	call   b950 <mm_commit>
    c67b:	85 c0                	test   %eax,%eax
    c67d:	75 56                	jne    c6d5 <sbrk+0xf5>
    c67f:	48 83 c4 08          	add    $0x8,%rsp
    c683:	48 89 e8             	mov    %rbp,%rax
    c686:	5b                   	pop    %rbx
    c687:	5d                   	pop    %rbp
    c688:	c3                   	ret    
    c689:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c690:	48 89 fe             	mov    %rdi,%rsi
    c693:	48 f7 de             	neg    %rsi
    c696:	48 39 f3             	cmp    %rsi,%rbx
    c699:	72 45                	jb     c6e0 <sbrk+0x100>
    c69b:	44 8b 05 9e b7 00 00 	mov    0xb79e(%rip),%r8d        # 17e40 <is_edmm_supported>
    c6a2:	48 01 df             	add    %rbx,%rdi
    c6a5:	48 89 3d 6c e3 01 00 	mov    %rdi,0x1e36c(%rip)        # 2aa18 <heap_used.0>
    c6ac:	48 8d 2c 38          	lea    (%rax,%rdi,1),%rbp
    c6b0:	45 85 c0             	test   %r8d,%r8d
    c6b3:	74 ca                	je     c67f <sbrk+0x9f>
    c6b5:	48 8b 15 7c b7 00 00 	mov    0xb77c(%rip),%rdx        # 17e38 <heap_min_size>
    c6bc:	48 39 da             	cmp    %rbx,%rdx
    c6bf:	73 be                	jae    c67f <sbrk+0x9f>
    c6c1:	48 89 e9             	mov    %rbp,%rcx
    c6c4:	48 39 fa             	cmp    %rdi,%rdx
    c6c7:	73 27                	jae    c6f0 <sbrk+0x110>
    c6c9:	48 89 cf             	mov    %rcx,%rdi
    c6cc:	e8 8f f2 ff ff       	call   b960 <mm_uncommit>
    c6d1:	85 c0                	test   %eax,%eax
    c6d3:	74 aa                	je     c67f <sbrk+0x9f>
    c6d5:	48 89 1d 3c e3 01 00 	mov    %rbx,0x1e33c(%rip)        # 2aa18 <heap_used.0>
    c6dc:	0f 1f 40 00          	nopl   0x0(%rax)
    c6e0:	48 c7 c5 ff ff ff ff 	mov    $0xffffffffffffffff,%rbp
    c6e7:	eb 96                	jmp    c67f <sbrk+0x9f>
    c6e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c6f0:	48 89 de             	mov    %rbx,%rsi
    c6f3:	48 8d 0c 10          	lea    (%rax,%rdx,1),%rcx
    c6f7:	48 29 d6             	sub    %rdx,%rsi
    c6fa:	eb cd                	jmp    c6c9 <sbrk+0xe9>
    c6fc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000c700 <sgx_spin_lock>:
    c700:	f3 0f 1e fa          	endbr64 
    c704:	48 83 ec 18          	sub    $0x18,%rsp
    c708:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c70f:	00 00 
    c711:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    c716:	b8 01 00 00 00       	mov    $0x1,%eax
    c71b:	f0 87 07             	lock xchg %eax,(%rdi)
    c71e:	89 44 24 04          	mov    %eax,0x4(%rsp)
    c722:	8b 54 24 04          	mov    0x4(%rsp),%edx
    c726:	85 d2                	test   %edx,%edx
    c728:	74 48                	je     c772 <sgx_spin_lock+0x72>
    c72a:	48 89 f9             	mov    %rdi,%rcx
    c72d:	be 01 00 00 00       	mov    $0x1,%esi
    c732:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    c738:	ba 02 00 00 00       	mov    $0x2,%edx
    c73d:	0f 1f 00             	nopl   (%rax)
    c740:	85 d2                	test   %edx,%edx
    c742:	7e 0d                	jle    c751 <sgx_spin_lock+0x51>
    c744:	31 c0                	xor    %eax,%eax
    c746:	f3 90                	pause  
    c748:	f3 90                	pause  
    c74a:	83 c0 02             	add    $0x2,%eax
    c74d:	39 c2                	cmp    %eax,%edx
    c74f:	75 f5                	jne    c746 <sgx_spin_lock+0x46>
    c751:	b8 00 04 00 00       	mov    $0x400,%eax
    c756:	01 d2                	add    %edx,%edx
    c758:	39 c2                	cmp    %eax,%edx
    c75a:	0f 4f d0             	cmovg  %eax,%edx
    c75d:	8b 01                	mov    (%rcx),%eax
    c75f:	85 c0                	test   %eax,%eax
    c761:	75 dd                	jne    c740 <sgx_spin_lock+0x40>
    c763:	f0 87 31             	lock xchg %esi,(%rcx)
    c766:	89 74 24 04          	mov    %esi,0x4(%rsp)
    c76a:	8b 44 24 04          	mov    0x4(%rsp),%eax
    c76e:	85 c0                	test   %eax,%eax
    c770:	75 c6                	jne    c738 <sgx_spin_lock+0x38>
    c772:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    c777:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    c77e:	00 00 
    c780:	75 07                	jne    c789 <sgx_spin_lock+0x89>
    c782:	31 c0                	xor    %eax,%eax
    c784:	48 83 c4 18          	add    $0x18,%rsp
    c788:	c3                   	ret    
    c789:	e8 e2 41 00 00       	call   10970 <__stack_chk_fail>
    c78e:	66 90                	xchg   %ax,%ax

000000000000c790 <sgx_spin_unlock>:
    c790:	f3 0f 1e fa          	endbr64 
    c794:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
    c79a:	31 c0                	xor    %eax,%eax
    c79c:	c3                   	ret    
    c79d:	0f 1f 00             	nopl   (%rax)

000000000000c7a0 <dispose_chunk>:
    c7a0:	55                   	push   %rbp
    c7a1:	48 89 f0             	mov    %rsi,%rax
    c7a4:	48 01 d6             	add    %rdx,%rsi
    c7a7:	53                   	push   %rbx
    c7a8:	48 83 ec 08          	sub    $0x8,%rsp
    c7ac:	48 8b 48 08          	mov    0x8(%rax),%rcx
    c7b0:	f6 c1 01             	test   $0x1,%cl
    c7b3:	0f 85 f7 00 00 00    	jne    c8b0 <dispose_chunk+0x110>
    c7b9:	83 e1 03             	and    $0x3,%ecx
    c7bc:	4c 8b 08             	mov    (%rax),%r9
    c7bf:	0f 84 64 01 00 00    	je     c929 <dispose_chunk+0x189>
    c7c5:	4c 8b 47 18          	mov    0x18(%rdi),%r8
    c7c9:	4c 29 c8             	sub    %r9,%rax
    c7cc:	4c 01 ca             	add    %r9,%rdx
    c7cf:	4c 39 c0             	cmp    %r8,%rax
    c7d2:	0f 82 38 03 00 00    	jb     cb10 <dispose_chunk+0x370>
    c7d8:	48 39 47 20          	cmp    %rax,0x20(%rdi)
    c7dc:	0f 84 2e 04 00 00    	je     cc10 <dispose_chunk+0x470>
    c7e2:	4c 89 c9             	mov    %r9,%rcx
    c7e5:	48 c1 e9 03          	shr    $0x3,%rcx
    c7e9:	49 81 f9 ff 00 00 00 	cmp    $0xff,%r9
    c7f0:	0f 86 4a 03 00 00    	jbe    cb40 <dispose_chunk+0x3a0>
    c7f6:	4c 8b 50 18          	mov    0x18(%rax),%r10
    c7fa:	48 8b 58 30          	mov    0x30(%rax),%rbx
    c7fe:	49 39 c2             	cmp    %rax,%r10
    c801:	0f 84 89 05 00 00    	je     cd90 <dispose_chunk+0x5f0>
    c807:	48 8b 48 10          	mov    0x10(%rax),%rcx
    c80b:	4c 39 c1             	cmp    %r8,%rcx
    c80e:	0f 82 fc 02 00 00    	jb     cb10 <dispose_chunk+0x370>
    c814:	48 39 41 18          	cmp    %rax,0x18(%rcx)
    c818:	0f 85 f2 02 00 00    	jne    cb10 <dispose_chunk+0x370>
    c81e:	49 39 42 10          	cmp    %rax,0x10(%r10)
    c822:	0f 85 e8 02 00 00    	jne    cb10 <dispose_chunk+0x370>
    c828:	4c 89 51 18          	mov    %r10,0x18(%rcx)
    c82c:	49 89 4a 10          	mov    %rcx,0x10(%r10)
    c830:	48 85 db             	test   %rbx,%rbx
    c833:	74 7f                	je     c8b4 <dispose_chunk+0x114>
    c835:	44 8b 48 38          	mov    0x38(%rax),%r9d
    c839:	4c 89 c9             	mov    %r9,%rcx
    c83c:	4d 8d 59 4a          	lea    0x4a(%r9),%r11
    c840:	4a 39 84 cf 58 02 00 	cmp    %rax,0x258(%rdi,%r9,8)
    c847:	00 
    c848:	0f 84 32 06 00 00    	je     ce80 <dispose_chunk+0x6e0>
    c84e:	4c 39 c3             	cmp    %r8,%rbx
    c851:	0f 82 b9 02 00 00    	jb     cb10 <dispose_chunk+0x370>
    c857:	48 39 43 20          	cmp    %rax,0x20(%rbx)
    c85b:	0f 84 9c 06 00 00    	je     cefd <dispose_chunk+0x75d>
    c861:	4c 89 53 28          	mov    %r10,0x28(%rbx)
    c865:	4d 85 d2             	test   %r10,%r10
    c868:	74 4a                	je     c8b4 <dispose_chunk+0x114>
    c86a:	4d 39 c2             	cmp    %r8,%r10
    c86d:	0f 82 9d 02 00 00    	jb     cb10 <dispose_chunk+0x370>
    c873:	48 8b 48 20          	mov    0x20(%rax),%rcx
    c877:	49 89 5a 30          	mov    %rbx,0x30(%r10)
    c87b:	48 85 c9             	test   %rcx,%rcx
    c87e:	74 11                	je     c891 <dispose_chunk+0xf1>
    c880:	4c 39 c1             	cmp    %r8,%rcx
    c883:	0f 82 87 02 00 00    	jb     cb10 <dispose_chunk+0x370>
    c889:	49 89 4a 20          	mov    %rcx,0x20(%r10)
    c88d:	4c 89 51 30          	mov    %r10,0x30(%rcx)
    c891:	48 8b 48 28          	mov    0x28(%rax),%rcx
    c895:	48 85 c9             	test   %rcx,%rcx
    c898:	74 1a                	je     c8b4 <dispose_chunk+0x114>
    c89a:	4c 39 c1             	cmp    %r8,%rcx
    c89d:	0f 82 6d 02 00 00    	jb     cb10 <dispose_chunk+0x370>
    c8a3:	49 89 4a 28          	mov    %rcx,0x28(%r10)
    c8a7:	4c 89 51 30          	mov    %r10,0x30(%rcx)
    c8ab:	eb 07                	jmp    c8b4 <dispose_chunk+0x114>
    c8ad:	0f 1f 00             	nopl   (%rax)
    c8b0:	4c 8b 47 18          	mov    0x18(%rdi),%r8
    c8b4:	4c 39 c6             	cmp    %r8,%rsi
    c8b7:	0f 82 53 02 00 00    	jb     cb10 <dispose_chunk+0x370>
    c8bd:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    c8c1:	f6 c1 02             	test   $0x2,%cl
    c8c4:	74 6a                	je     c930 <dispose_chunk+0x190>
    c8c6:	48 83 e1 fe          	and    $0xfffffffffffffffe,%rcx
    c8ca:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
    c8ce:	48 89 d1             	mov    %rdx,%rcx
    c8d1:	48 83 c9 01          	or     $0x1,%rcx
    c8d5:	48 89 48 08          	mov    %rcx,0x8(%rax)
    c8d9:	48 89 14 10          	mov    %rdx,(%rax,%rdx,1)
    c8dd:	48 89 d1             	mov    %rdx,%rcx
    c8e0:	48 c1 e9 03          	shr    $0x3,%rcx
    c8e4:	48 81 fa ff 00 00 00 	cmp    $0xff,%rdx
    c8eb:	0f 87 57 01 00 00    	ja     ca48 <dispose_chunk+0x2a8>
    c8f1:	8d 54 09 09          	lea    0x9(%rcx,%rcx,1),%edx
    c8f5:	44 8b 0f             	mov    (%rdi),%r9d
    c8f8:	48 8d 34 d7          	lea    (%rdi,%rdx,8),%rsi
    c8fc:	ba 01 00 00 00       	mov    $0x1,%edx
    c901:	d3 e2                	shl    %cl,%edx
    c903:	41 85 d1             	test   %edx,%r9d
    c906:	0f 84 24 02 00 00    	je     cb30 <dispose_chunk+0x390>
    c90c:	48 8b 56 10          	mov    0x10(%rsi),%rdx
    c910:	4c 39 c2             	cmp    %r8,%rdx
    c913:	0f 82 f7 01 00 00    	jb     cb10 <dispose_chunk+0x370>
    c919:	48 89 46 10          	mov    %rax,0x10(%rsi)
    c91d:	48 89 42 18          	mov    %rax,0x18(%rdx)
    c921:	48 89 50 10          	mov    %rdx,0x10(%rax)
    c925:	48 89 70 18          	mov    %rsi,0x18(%rax)
    c929:	48 83 c4 08          	add    $0x8,%rsp
    c92d:	5b                   	pop    %rbx
    c92e:	5d                   	pop    %rbp
    c92f:	c3                   	ret    
    c930:	48 8b 5f 20          	mov    0x20(%rdi),%rbx
    c934:	48 39 77 28          	cmp    %rsi,0x28(%rdi)
    c938:	0f 84 22 03 00 00    	je     cc60 <dispose_chunk+0x4c0>
    c93e:	48 39 f3             	cmp    %rsi,%rbx
    c941:	0f 84 89 03 00 00    	je     ccd0 <dispose_chunk+0x530>
    c947:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    c94b:	49 89 cb             	mov    %rcx,%r11
    c94e:	48 01 ca             	add    %rcx,%rdx
    c951:	49 c1 eb 03          	shr    $0x3,%r11
    c955:	48 81 f9 f8 00 00 00 	cmp    $0xf8,%rcx
    c95c:	0f 86 7e 01 00 00    	jbe    cae0 <dispose_chunk+0x340>
    c962:	4c 8b 56 18          	mov    0x18(%rsi),%r10
    c966:	48 8b 6e 30          	mov    0x30(%rsi),%rbp
    c96a:	49 39 f2             	cmp    %rsi,%r10
    c96d:	0f 84 7d 03 00 00    	je     ccf0 <dispose_chunk+0x550>
    c973:	48 8b 4e 10          	mov    0x10(%rsi),%rcx
    c977:	4c 39 c1             	cmp    %r8,%rcx
    c97a:	0f 82 90 01 00 00    	jb     cb10 <dispose_chunk+0x370>
    c980:	48 39 71 18          	cmp    %rsi,0x18(%rcx)
    c984:	0f 85 86 01 00 00    	jne    cb10 <dispose_chunk+0x370>
    c98a:	49 39 72 10          	cmp    %rsi,0x10(%r10)
    c98e:	0f 85 7c 01 00 00    	jne    cb10 <dispose_chunk+0x370>
    c994:	4c 89 51 18          	mov    %r10,0x18(%rcx)
    c998:	49 89 4a 10          	mov    %rcx,0x10(%r10)
    c99c:	48 85 ed             	test   %rbp,%rbp
    c99f:	74 7f                	je     ca20 <dispose_chunk+0x280>
    c9a1:	44 8b 4e 38          	mov    0x38(%rsi),%r9d
    c9a5:	4c 89 c9             	mov    %r9,%rcx
    c9a8:	4d 8d 59 4a          	lea    0x4a(%r9),%r11
    c9ac:	4a 39 b4 cf 58 02 00 	cmp    %rsi,0x258(%rdi,%r9,8)
    c9b3:	00 
    c9b4:	0f 84 76 04 00 00    	je     ce30 <dispose_chunk+0x690>
    c9ba:	4c 39 c5             	cmp    %r8,%rbp
    c9bd:	0f 82 4d 01 00 00    	jb     cb10 <dispose_chunk+0x370>
    c9c3:	48 39 75 20          	cmp    %rsi,0x20(%rbp)
    c9c7:	0f 84 27 05 00 00    	je     cef4 <dispose_chunk+0x754>
    c9cd:	4c 89 55 28          	mov    %r10,0x28(%rbp)
    c9d1:	4d 85 d2             	test   %r10,%r10
    c9d4:	74 4a                	je     ca20 <dispose_chunk+0x280>
    c9d6:	4d 39 c2             	cmp    %r8,%r10
    c9d9:	0f 82 31 01 00 00    	jb     cb10 <dispose_chunk+0x370>
    c9df:	48 8b 4e 20          	mov    0x20(%rsi),%rcx
    c9e3:	49 89 6a 30          	mov    %rbp,0x30(%r10)
    c9e7:	48 85 c9             	test   %rcx,%rcx
    c9ea:	74 11                	je     c9fd <dispose_chunk+0x25d>
    c9ec:	4c 39 c1             	cmp    %r8,%rcx
    c9ef:	0f 82 1b 01 00 00    	jb     cb10 <dispose_chunk+0x370>
    c9f5:	49 89 4a 20          	mov    %rcx,0x20(%r10)
    c9f9:	4c 89 51 30          	mov    %r10,0x30(%rcx)
    c9fd:	48 8b 4e 28          	mov    0x28(%rsi),%rcx
    ca01:	48 85 c9             	test   %rcx,%rcx
    ca04:	74 1a                	je     ca20 <dispose_chunk+0x280>
    ca06:	4c 39 c1             	cmp    %r8,%rcx
    ca09:	0f 82 01 01 00 00    	jb     cb10 <dispose_chunk+0x370>
    ca0f:	49 89 4a 28          	mov    %rcx,0x28(%r10)
    ca13:	4c 89 51 30          	mov    %r10,0x30(%rcx)
    ca17:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    ca1e:	00 00 
    ca20:	48 89 d1             	mov    %rdx,%rcx
    ca23:	48 83 c9 01          	or     $0x1,%rcx
    ca27:	48 89 48 08          	mov    %rcx,0x8(%rax)
    ca2b:	48 89 14 10          	mov    %rdx,(%rax,%rdx,1)
    ca2f:	48 39 d8             	cmp    %rbx,%rax
    ca32:	0f 85 a5 fe ff ff    	jne    c8dd <dispose_chunk+0x13d>
    ca38:	48 89 57 08          	mov    %rdx,0x8(%rdi)
    ca3c:	e9 e8 fe ff ff       	jmp    c929 <dispose_chunk+0x189>
    ca41:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    ca48:	48 89 d6             	mov    %rdx,%rsi
    ca4b:	48 c1 ee 08          	shr    $0x8,%rsi
    ca4f:	89 f1                	mov    %esi,%ecx
    ca51:	85 f6                	test   %esi,%esi
    ca53:	0f 84 bf 00 00 00    	je     cb18 <dispose_chunk+0x378>
    ca59:	81 fe ff ff 00 00    	cmp    $0xffff,%esi
    ca5f:	0f 87 e3 01 00 00    	ja     cc48 <dispose_chunk+0x4a8>
    ca65:	0f bd f1             	bsr    %ecx,%esi
    ca68:	b9 26 00 00 00       	mov    $0x26,%ecx
    ca6d:	48 89 d3             	mov    %rdx,%rbx
    ca70:	41 b9 1f 00 00 00    	mov    $0x1f,%r9d
    ca76:	83 f6 1f             	xor    $0x1f,%esi
    ca79:	29 f1                	sub    %esi,%ecx
    ca7b:	41 29 f1             	sub    %esi,%r9d
    ca7e:	be 01 00 00 00       	mov    $0x1,%esi
    ca83:	48 d3 eb             	shr    %cl,%rbx
    ca86:	48 89 d9             	mov    %rbx,%rcx
    ca89:	83 e1 01             	and    $0x1,%ecx
    ca8c:	42 8d 0c 49          	lea    (%rcx,%r9,2),%ecx
    ca90:	44 8d 49 4b          	lea    0x4b(%rcx),%r9d
    ca94:	d3 e6                	shl    %cl,%esi
    ca96:	49 c1 e1 03          	shl    $0x3,%r9
    ca9a:	44 8b 57 04          	mov    0x4(%rdi),%r10d
    ca9e:	66 48 0f 6e c8       	movq   %rax,%xmm1
    caa3:	66 0f ef c0          	pxor   %xmm0,%xmm0
    caa7:	89 48 38             	mov    %ecx,0x38(%rax)
    caaa:	66 0f 6c c9          	punpcklqdq %xmm1,%xmm1
    caae:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    cab2:	44 85 d6             	test   %r10d,%esi
    cab5:	0f 85 c5 00 00 00    	jne    cb80 <dispose_chunk+0x3e0>
    cabb:	44 09 d6             	or     %r10d,%esi
    cabe:	49 01 f9             	add    %rdi,%r9
    cac1:	89 77 04             	mov    %esi,0x4(%rdi)
    cac4:	48 89 84 cf 58 02 00 	mov    %rax,0x258(%rdi,%rcx,8)
    cacb:	00 
    cacc:	4c 89 48 30          	mov    %r9,0x30(%rax)
    cad0:	0f 11 48 10          	movups %xmm1,0x10(%rax)
    cad4:	48 83 c4 08          	add    $0x8,%rsp
    cad8:	5b                   	pop    %rbx
    cad9:	5d                   	pop    %rbp
    cada:	c3                   	ret    
    cadb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    cae0:	43 8d 4c 1b 09       	lea    0x9(%r11,%r11,1),%ecx
    cae5:	4c 8b 4e 10          	mov    0x10(%rsi),%r9
    cae9:	4c 8b 56 18          	mov    0x18(%rsi),%r10
    caed:	48 8d 0c cf          	lea    (%rdi,%rcx,8),%rcx
    caf1:	4c 39 c9             	cmp    %r9,%rcx
    caf4:	0f 85 53 03 00 00    	jne    ce4d <dispose_chunk+0x6ad>
    cafa:	4d 39 d1             	cmp    %r10,%r9
    cafd:	0f 84 75 02 00 00    	je     cd78 <dispose_chunk+0x5d8>
    cb03:	4d 39 c2             	cmp    %r8,%r10
    cb06:	0f 83 aa 01 00 00    	jae    ccb6 <dispose_chunk+0x516>
    cb0c:	0f 1f 40 00          	nopl   0x0(%rax)
    cb10:	e8 22 58 00 00       	call   12337 <abort>
    cb15:	0f 1f 00             	nopl   (%rax)
    cb18:	be 01 00 00 00       	mov    $0x1,%esi
    cb1d:	41 b9 58 02 00 00    	mov    $0x258,%r9d
    cb23:	e9 72 ff ff ff       	jmp    ca9a <dispose_chunk+0x2fa>
    cb28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    cb2f:	00 
    cb30:	41 09 d1             	or     %edx,%r9d
    cb33:	48 89 f2             	mov    %rsi,%rdx
    cb36:	44 89 0f             	mov    %r9d,(%rdi)
    cb39:	e9 db fd ff ff       	jmp    c919 <dispose_chunk+0x179>
    cb3e:	66 90                	xchg   %ax,%ax
    cb40:	44 8d 5c 09 09       	lea    0x9(%rcx,%rcx,1),%r11d
    cb45:	4c 8b 48 10          	mov    0x10(%rax),%r9
    cb49:	4c 8b 50 18          	mov    0x18(%rax),%r10
    cb4d:	4e 8d 1c df          	lea    (%rdi,%r11,8),%r11
    cb51:	4d 39 cb             	cmp    %r9,%r11
    cb54:	0f 85 46 03 00 00    	jne    cea0 <dispose_chunk+0x700>
    cb5a:	4d 39 d1             	cmp    %r10,%r9
    cb5d:	0f 84 b5 02 00 00    	je     ce18 <dispose_chunk+0x678>
    cb63:	4d 39 c2             	cmp    %r8,%r10
    cb66:	72 a8                	jb     cb10 <dispose_chunk+0x370>
    cb68:	49 39 42 10          	cmp    %rax,0x10(%r10)
    cb6c:	75 a2                	jne    cb10 <dispose_chunk+0x370>
    cb6e:	4d 89 51 18          	mov    %r10,0x18(%r9)
    cb72:	4d 89 4a 10          	mov    %r9,0x10(%r10)
    cb76:	e9 39 fd ff ff       	jmp    c8b4 <dispose_chunk+0x114>
    cb7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    cb80:	89 ce                	mov    %ecx,%esi
    cb82:	48 8b b4 f7 58 02 00 	mov    0x258(%rdi,%rsi,8),%rsi
    cb89:	00 
    cb8a:	48 89 d7             	mov    %rdx,%rdi
    cb8d:	83 f9 1f             	cmp    $0x1f,%ecx
    cb90:	74 34                	je     cbc6 <dispose_chunk+0x426>
    cb92:	89 cf                	mov    %ecx,%edi
    cb94:	b9 39 00 00 00       	mov    $0x39,%ecx
    cb99:	d1 ef                	shr    %edi
    cb9b:	29 f9                	sub    %edi,%ecx
    cb9d:	48 89 d7             	mov    %rdx,%rdi
    cba0:	48 d3 e7             	shl    %cl,%rdi
    cba3:	eb 21                	jmp    cbc6 <dispose_chunk+0x426>
    cba5:	0f 1f 00             	nopl   (%rax)
    cba8:	48 89 f9             	mov    %rdi,%rcx
    cbab:	48 01 ff             	add    %rdi,%rdi
    cbae:	48 c1 e9 3f          	shr    $0x3f,%rcx
    cbb2:	48 83 c1 04          	add    $0x4,%rcx
    cbb6:	4c 8b 0c ce          	mov    (%rsi,%rcx,8),%r9
    cbba:	4d 85 c9             	test   %r9,%r9
    cbbd:	0f 84 d5 00 00 00    	je     cc98 <dispose_chunk+0x4f8>
    cbc3:	4c 89 ce             	mov    %r9,%rsi
    cbc6:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    cbca:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    cbce:	48 39 d1             	cmp    %rdx,%rcx
    cbd1:	75 d5                	jne    cba8 <dispose_chunk+0x408>
    cbd3:	48 8b 56 10          	mov    0x10(%rsi),%rdx
    cbd7:	66 48 0f 6e d6       	movq   %rsi,%xmm2
    cbdc:	66 48 0f 6e c2       	movq   %rdx,%xmm0
    cbe1:	66 0f 6c c2          	punpcklqdq %xmm2,%xmm0
    cbe5:	4c 39 c6             	cmp    %r8,%rsi
    cbe8:	0f 82 22 ff ff ff    	jb     cb10 <dispose_chunk+0x370>
    cbee:	4c 39 c2             	cmp    %r8,%rdx
    cbf1:	0f 82 19 ff ff ff    	jb     cb10 <dispose_chunk+0x370>
    cbf7:	48 89 42 18          	mov    %rax,0x18(%rdx)
    cbfb:	48 89 46 10          	mov    %rax,0x10(%rsi)
    cbff:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
    cc06:	00 
    cc07:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    cc0b:	e9 19 fd ff ff       	jmp    c929 <dispose_chunk+0x189>
    cc10:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    cc14:	49 89 c9             	mov    %rcx,%r9
    cc17:	49 f7 d1             	not    %r9
    cc1a:	41 83 e1 03          	and    $0x3,%r9d
    cc1e:	0f 85 90 fc ff ff    	jne    c8b4 <dispose_chunk+0x114>
    cc24:	48 83 e1 fe          	and    $0xfffffffffffffffe,%rcx
    cc28:	48 89 57 08          	mov    %rdx,0x8(%rdi)
    cc2c:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
    cc30:	48 89 d1             	mov    %rdx,%rcx
    cc33:	48 83 c9 01          	or     $0x1,%rcx
    cc37:	48 89 48 08          	mov    %rcx,0x8(%rax)
    cc3b:	48 89 16             	mov    %rdx,(%rsi)
    cc3e:	e9 e6 fc ff ff       	jmp    c929 <dispose_chunk+0x189>
    cc43:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    cc48:	be 00 00 00 80       	mov    $0x80000000,%esi
    cc4d:	41 b9 50 03 00 00    	mov    $0x350,%r9d
    cc53:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    cc58:	e9 3d fe ff ff       	jmp    ca9a <dispose_chunk+0x2fa>
    cc5d:	0f 1f 00             	nopl   (%rax)
    cc60:	48 03 57 10          	add    0x10(%rdi),%rdx
    cc64:	48 89 47 28          	mov    %rax,0x28(%rdi)
    cc68:	48 89 57 10          	mov    %rdx,0x10(%rdi)
    cc6c:	48 83 ca 01          	or     $0x1,%rdx
    cc70:	48 89 50 08          	mov    %rdx,0x8(%rax)
    cc74:	48 39 d8             	cmp    %rbx,%rax
    cc77:	0f 85 ac fc ff ff    	jne    c929 <dispose_chunk+0x189>
    cc7d:	48 c7 47 20 00 00 00 	movq   $0x0,0x20(%rdi)
    cc84:	00 
    cc85:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
    cc8c:	00 
    cc8d:	e9 97 fc ff ff       	jmp    c929 <dispose_chunk+0x189>
    cc92:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    cc98:	48 8d 14 ce          	lea    (%rsi,%rcx,8),%rdx
    cc9c:	4c 39 c2             	cmp    %r8,%rdx
    cc9f:	0f 82 6b fe ff ff    	jb     cb10 <dispose_chunk+0x370>
    cca5:	48 89 04 ce          	mov    %rax,(%rsi,%rcx,8)
    cca9:	48 89 70 30          	mov    %rsi,0x30(%rax)
    ccad:	0f 11 48 10          	movups %xmm1,0x10(%rax)
    ccb1:	e9 73 fc ff ff       	jmp    c929 <dispose_chunk+0x189>
    ccb6:	49 39 72 10          	cmp    %rsi,0x10(%r10)
    ccba:	0f 85 50 fe ff ff    	jne    cb10 <dispose_chunk+0x370>
    ccc0:	4d 89 51 18          	mov    %r10,0x18(%r9)
    ccc4:	4d 89 4a 10          	mov    %r9,0x10(%r10)
    ccc8:	e9 53 fd ff ff       	jmp    ca20 <dispose_chunk+0x280>
    cccd:	0f 1f 00             	nopl   (%rax)
    ccd0:	48 03 57 08          	add    0x8(%rdi),%rdx
    ccd4:	48 89 47 20          	mov    %rax,0x20(%rdi)
    ccd8:	48 89 d1             	mov    %rdx,%rcx
    ccdb:	48 89 57 08          	mov    %rdx,0x8(%rdi)
    ccdf:	48 83 c9 01          	or     $0x1,%rcx
    cce3:	48 89 48 08          	mov    %rcx,0x8(%rax)
    cce7:	48 89 14 10          	mov    %rdx,(%rax,%rdx,1)
    cceb:	e9 39 fc ff ff       	jmp    c929 <dispose_chunk+0x189>
    ccf0:	48 8b 4e 28          	mov    0x28(%rsi),%rcx
    ccf4:	4c 8d 4e 28          	lea    0x28(%rsi),%r9
    ccf8:	48 85 c9             	test   %rcx,%rcx
    ccfb:	0f 84 cf 01 00 00    	je     ced0 <dispose_chunk+0x730>
    cd01:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    cd08:	4d 89 cb             	mov    %r9,%r11
    cd0b:	49 89 ca             	mov    %rcx,%r10
    cd0e:	4c 8d 49 28          	lea    0x28(%rcx),%r9
    cd12:	48 8b 49 28          	mov    0x28(%rcx),%rcx
    cd16:	48 85 c9             	test   %rcx,%rcx
    cd19:	75 ed                	jne    cd08 <dispose_chunk+0x568>
    cd1b:	49 8b 4a 20          	mov    0x20(%r10),%rcx
    cd1f:	4d 8d 4a 20          	lea    0x20(%r10),%r9
    cd23:	48 85 c9             	test   %rcx,%rcx
    cd26:	75 e0                	jne    cd08 <dispose_chunk+0x568>
    cd28:	4d 39 c3             	cmp    %r8,%r11
    cd2b:	0f 82 df fd ff ff    	jb     cb10 <dispose_chunk+0x370>
    cd31:	49 c7 03 00 00 00 00 	movq   $0x0,(%r11)
    cd38:	48 85 ed             	test   %rbp,%rbp
    cd3b:	0f 84 df fc ff ff    	je     ca20 <dispose_chunk+0x280>
    cd41:	8b 4e 38             	mov    0x38(%rsi),%ecx
    cd44:	4c 8d 49 4a          	lea    0x4a(%rcx),%r9
    cd48:	48 39 b4 cf 58 02 00 	cmp    %rsi,0x258(%rdi,%rcx,8)
    cd4f:	00 
    cd50:	0f 84 b0 01 00 00    	je     cf06 <dispose_chunk+0x766>
    cd56:	4c 39 c5             	cmp    %r8,%rbp
    cd59:	0f 82 b1 fd ff ff    	jb     cb10 <dispose_chunk+0x370>
    cd5f:	48 39 75 20          	cmp    %rsi,0x20(%rbp)
    cd63:	0f 84 b1 01 00 00    	je     cf1a <dispose_chunk+0x77a>
    cd69:	4c 89 55 28          	mov    %r10,0x28(%rbp)
    cd6d:	e9 64 fc ff ff       	jmp    c9d6 <dispose_chunk+0x236>
    cd72:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    cd78:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    cd7d:	44 89 d9             	mov    %r11d,%ecx
    cd80:	d3 c6                	rol    %cl,%esi
    cd82:	21 37                	and    %esi,(%rdi)
    cd84:	e9 97 fc ff ff       	jmp    ca20 <dispose_chunk+0x280>
    cd89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    cd90:	48 8b 48 28          	mov    0x28(%rax),%rcx
    cd94:	4c 8d 48 28          	lea    0x28(%rax),%r9
    cd98:	48 85 c9             	test   %rcx,%rcx
    cd9b:	0f 84 41 01 00 00    	je     cee2 <dispose_chunk+0x742>
    cda1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    cda8:	4d 89 cb             	mov    %r9,%r11
    cdab:	49 89 ca             	mov    %rcx,%r10
    cdae:	4c 8d 49 28          	lea    0x28(%rcx),%r9
    cdb2:	48 8b 49 28          	mov    0x28(%rcx),%rcx
    cdb6:	48 85 c9             	test   %rcx,%rcx
    cdb9:	75 ed                	jne    cda8 <dispose_chunk+0x608>
    cdbb:	49 8b 4a 20          	mov    0x20(%r10),%rcx
    cdbf:	4d 8d 4a 20          	lea    0x20(%r10),%r9
    cdc3:	48 85 c9             	test   %rcx,%rcx
    cdc6:	75 e0                	jne    cda8 <dispose_chunk+0x608>
    cdc8:	4d 39 c3             	cmp    %r8,%r11
    cdcb:	0f 82 3f fd ff ff    	jb     cb10 <dispose_chunk+0x370>
    cdd1:	49 c7 03 00 00 00 00 	movq   $0x0,(%r11)
    cdd8:	48 85 db             	test   %rbx,%rbx
    cddb:	0f 84 d3 fa ff ff    	je     c8b4 <dispose_chunk+0x114>
    cde1:	8b 48 38             	mov    0x38(%rax),%ecx
    cde4:	4c 8d 49 4a          	lea    0x4a(%rcx),%r9
    cde8:	48 39 84 cf 58 02 00 	cmp    %rax,0x258(%rdi,%rcx,8)
    cdef:	00 
    cdf0:	0f 84 1a 01 00 00    	je     cf10 <dispose_chunk+0x770>
    cdf6:	4c 39 c3             	cmp    %r8,%rbx
    cdf9:	0f 82 11 fd ff ff    	jb     cb10 <dispose_chunk+0x370>
    cdff:	48 39 43 20          	cmp    %rax,0x20(%rbx)
    ce03:	0f 84 1a 01 00 00    	je     cf23 <dispose_chunk+0x783>
    ce09:	4c 89 53 28          	mov    %r10,0x28(%rbx)
    ce0d:	e9 58 fa ff ff       	jmp    c86a <dispose_chunk+0xca>
    ce12:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    ce18:	41 b9 fe ff ff ff    	mov    $0xfffffffe,%r9d
    ce1e:	41 d3 c1             	rol    %cl,%r9d
    ce21:	44 21 0f             	and    %r9d,(%rdi)
    ce24:	e9 8b fa ff ff       	jmp    c8b4 <dispose_chunk+0x114>
    ce29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    ce30:	4e 89 54 df 08       	mov    %r10,0x8(%rdi,%r11,8)
    ce35:	4d 85 d2             	test   %r10,%r10
    ce38:	0f 85 98 fb ff ff    	jne    c9d6 <dispose_chunk+0x236>
    ce3e:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    ce43:	d3 c6                	rol    %cl,%esi
    ce45:	21 77 04             	and    %esi,0x4(%rdi)
    ce48:	e9 d3 fb ff ff       	jmp    ca20 <dispose_chunk+0x280>
    ce4d:	4d 39 c1             	cmp    %r8,%r9
    ce50:	0f 82 ba fc ff ff    	jb     cb10 <dispose_chunk+0x370>
    ce56:	49 39 71 18          	cmp    %rsi,0x18(%r9)
    ce5a:	0f 85 b0 fc ff ff    	jne    cb10 <dispose_chunk+0x370>
    ce60:	4d 39 d1             	cmp    %r10,%r9
    ce63:	0f 84 0f ff ff ff    	je     cd78 <dispose_chunk+0x5d8>
    ce69:	4c 39 d1             	cmp    %r10,%rcx
    ce6c:	0f 84 4e fe ff ff    	je     ccc0 <dispose_chunk+0x520>
    ce72:	e9 8c fc ff ff       	jmp    cb03 <dispose_chunk+0x363>
    ce77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    ce7e:	00 00 
    ce80:	4e 89 54 df 08       	mov    %r10,0x8(%rdi,%r11,8)
    ce85:	4d 85 d2             	test   %r10,%r10
    ce88:	0f 85 dc f9 ff ff    	jne    c86a <dispose_chunk+0xca>
    ce8e:	41 b9 fe ff ff ff    	mov    $0xfffffffe,%r9d
    ce94:	41 d3 c1             	rol    %cl,%r9d
    ce97:	44 21 4f 04          	and    %r9d,0x4(%rdi)
    ce9b:	e9 14 fa ff ff       	jmp    c8b4 <dispose_chunk+0x114>
    cea0:	4d 39 c1             	cmp    %r8,%r9
    cea3:	0f 82 67 fc ff ff    	jb     cb10 <dispose_chunk+0x370>
    cea9:	49 39 41 18          	cmp    %rax,0x18(%r9)
    cead:	0f 85 5d fc ff ff    	jne    cb10 <dispose_chunk+0x370>
    ceb3:	4d 39 d1             	cmp    %r10,%r9
    ceb6:	0f 84 5c ff ff ff    	je     ce18 <dispose_chunk+0x678>
    cebc:	4d 39 d3             	cmp    %r10,%r11
    cebf:	0f 84 a9 fc ff ff    	je     cb6e <dispose_chunk+0x3ce>
    cec5:	e9 99 fc ff ff       	jmp    cb63 <dispose_chunk+0x3c3>
    ceca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    ced0:	48 8b 4e 20          	mov    0x20(%rsi),%rcx
    ced4:	48 85 c9             	test   %rcx,%rcx
    ced7:	74 53                	je     cf2c <dispose_chunk+0x78c>
    ced9:	4c 8d 4e 20          	lea    0x20(%rsi),%r9
    cedd:	e9 26 fe ff ff       	jmp    cd08 <dispose_chunk+0x568>
    cee2:	48 8b 48 20          	mov    0x20(%rax),%rcx
    cee6:	48 85 c9             	test   %rcx,%rcx
    cee9:	74 75                	je     cf60 <dispose_chunk+0x7c0>
    ceeb:	4c 8d 48 20          	lea    0x20(%rax),%r9
    ceef:	e9 b4 fe ff ff       	jmp    cda8 <dispose_chunk+0x608>
    cef4:	4c 89 55 20          	mov    %r10,0x20(%rbp)
    cef8:	e9 d4 fa ff ff       	jmp    c9d1 <dispose_chunk+0x231>
    cefd:	4c 89 53 20          	mov    %r10,0x20(%rbx)
    cf01:	e9 5f f9 ff ff       	jmp    c865 <dispose_chunk+0xc5>
    cf06:	4e 89 54 cf 08       	mov    %r10,0x8(%rdi,%r9,8)
    cf0b:	e9 c6 fa ff ff       	jmp    c9d6 <dispose_chunk+0x236>
    cf10:	4e 89 54 cf 08       	mov    %r10,0x8(%rdi,%r9,8)
    cf15:	e9 50 f9 ff ff       	jmp    c86a <dispose_chunk+0xca>
    cf1a:	4c 89 55 20          	mov    %r10,0x20(%rbp)
    cf1e:	e9 b3 fa ff ff       	jmp    c9d6 <dispose_chunk+0x236>
    cf23:	4c 89 53 20          	mov    %r10,0x20(%rbx)
    cf27:	e9 3e f9 ff ff       	jmp    c86a <dispose_chunk+0xca>
    cf2c:	48 85 ed             	test   %rbp,%rbp
    cf2f:	0f 84 eb fa ff ff    	je     ca20 <dispose_chunk+0x280>
    cf35:	44 8b 4e 38          	mov    0x38(%rsi),%r9d
    cf39:	4c 89 c9             	mov    %r9,%rcx
    cf3c:	4a 39 b4 cf 58 02 00 	cmp    %rsi,0x258(%rdi,%r9,8)
    cf43:	00 
    cf44:	74 4f                	je     cf95 <dispose_chunk+0x7f5>
    cf46:	4c 39 c5             	cmp    %r8,%rbp
    cf49:	0f 82 c1 fb ff ff    	jb     cb10 <dispose_chunk+0x370>
    cf4f:	48 39 75 20          	cmp    %rsi,0x20(%rbp)
    cf53:	74 60                	je     cfb5 <dispose_chunk+0x815>
    cf55:	31 c9                	xor    %ecx,%ecx
    cf57:	48 89 4d 28          	mov    %rcx,0x28(%rbp)
    cf5b:	e9 c0 fa ff ff       	jmp    ca20 <dispose_chunk+0x280>
    cf60:	48 85 db             	test   %rbx,%rbx
    cf63:	0f 84 4b f9 ff ff    	je     c8b4 <dispose_chunk+0x114>
    cf69:	44 8b 48 38          	mov    0x38(%rax),%r9d
    cf6d:	4c 89 c9             	mov    %r9,%rcx
    cf70:	4a 39 84 cf 58 02 00 	cmp    %rax,0x258(%rdi,%r9,8)
    cf77:	00 
    cf78:	74 2b                	je     cfa5 <dispose_chunk+0x805>
    cf7a:	4c 39 c3             	cmp    %r8,%rbx
    cf7d:	0f 82 8d fb ff ff    	jb     cb10 <dispose_chunk+0x370>
    cf83:	48 39 43 20          	cmp    %rax,0x20(%rbx)
    cf87:	74 37                	je     cfc0 <dispose_chunk+0x820>
    cf89:	45 31 db             	xor    %r11d,%r11d
    cf8c:	4c 89 5b 28          	mov    %r11,0x28(%rbx)
    cf90:	e9 1f f9 ff ff       	jmp    c8b4 <dispose_chunk+0x114>
    cf95:	45 31 d2             	xor    %r10d,%r10d
    cf98:	4e 89 94 cf 58 02 00 	mov    %r10,0x258(%rdi,%r9,8)
    cf9f:	00 
    cfa0:	e9 99 fe ff ff       	jmp    ce3e <dispose_chunk+0x69e>
    cfa5:	45 31 d2             	xor    %r10d,%r10d
    cfa8:	4e 89 94 cf 58 02 00 	mov    %r10,0x258(%rdi,%r9,8)
    cfaf:	00 
    cfb0:	e9 d9 fe ff ff       	jmp    ce8e <dispose_chunk+0x6ee>
    cfb5:	31 f6                	xor    %esi,%esi
    cfb7:	48 89 75 20          	mov    %rsi,0x20(%rbp)
    cfbb:	e9 60 fa ff ff       	jmp    ca20 <dispose_chunk+0x280>
    cfc0:	31 ed                	xor    %ebp,%ebp
    cfc2:	48 89 6b 20          	mov    %rbp,0x20(%rbx)
    cfc6:	e9 e9 f8 ff ff       	jmp    c8b4 <dispose_chunk+0x114>
    cfcb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000cfd0 <init_mparams.isra.0>:
    cfd0:	48 83 ec 18          	sub    $0x18,%rsp
    cfd4:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    cfdb:	00 00 
    cfdd:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    cfe2:	b8 01 00 00 00       	mov    $0x1,%eax
    cfe7:	87 05 43 de 01 00    	xchg   %eax,0x1de43(%rip)        # 2ae30 <malloc_global_mutex>
    cfed:	85 c0                	test   %eax,%eax
    cfef:	0f 85 8b 00 00 00    	jne    d080 <init_mparams.isra.0+0xb0>
    cff5:	48 83 3d 03 de 01 00 	cmpq   $0x0,0x1de03(%rip)        # 2ae00 <mparams>
    cffc:	00 
    cffd:	75 5d                	jne    d05c <init_mparams.isra.0+0x8c>
    cfff:	66 0f 6f 05 a9 60 00 	movdqa 0x60a9(%rip),%xmm0        # 130b0 <g_dyn_entry_table+0x80>
    d006:	00 
    d007:	48 89 e7             	mov    %rsp,%rdi
    d00a:	be 08 00 00 00       	mov    $0x8,%esi
    d00f:	c7 05 0f de 01 00 02 	movl   $0x2,0x1de0f(%rip)        # 2ae28 <mparams+0x28>
    d016:	00 00 00 
    d019:	48 c7 05 8c dd 01 00 	movq   $0x2,0x1dd8c(%rip)        # 2adb0 <_gm_+0x370>
    d020:	02 00 00 00 
    d024:	0f 11 05 dd dd 01 00 	movups %xmm0,0x1dddd(%rip)        # 2ae08 <mparams+0x8>
    d02b:	66 0f 6f 05 8d 60 00 	movdqa 0x608d(%rip),%xmm0        # 130c0 <g_dyn_entry_table+0x90>
    d032:	00 
    d033:	0f 11 05 de dd 01 00 	movups %xmm0,0x1ddde(%rip)        # 2ae18 <mparams+0x18>
    d03a:	e8 b1 8c ff ff       	call   5cf0 <sgx_read_rand>
    d03f:	85 c0                	test   %eax,%eax
    d041:	75 69                	jne    d0ac <init_mparams.isra.0+0xdc>
    d043:	48 8b 04 24          	mov    (%rsp),%rax
    d047:	48 35 55 55 55 55    	xor    $0x55555555,%rax
    d04d:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    d051:	48 83 c8 08          	or     $0x8,%rax
    d055:	48 89 05 a4 dd 01 00 	mov    %rax,0x1dda4(%rip)        # 2ae00 <mparams>
    d05c:	c7 05 ca dd 01 00 00 	movl   $0x0,0x1ddca(%rip)        # 2ae30 <malloc_global_mutex>
    d063:	00 00 00 
    d066:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    d06b:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    d072:	00 00 
    d074:	75 31                	jne    d0a7 <init_mparams.isra.0+0xd7>
    d076:	48 83 c4 18          	add    $0x18,%rsp
    d07a:	c3                   	ret    
    d07b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    d080:	48 8d 15 a9 dd 01 00 	lea    0x1dda9(%rip),%rdx        # 2ae30 <malloc_global_mutex>
    d087:	b9 01 00 00 00       	mov    $0x1,%ecx
    d08c:	0f 1f 40 00          	nopl   0x0(%rax)
    d090:	8b 02                	mov    (%rdx),%eax
    d092:	85 c0                	test   %eax,%eax
    d094:	75 fa                	jne    d090 <init_mparams.isra.0+0xc0>
    d096:	89 c8                	mov    %ecx,%eax
    d098:	87 05 92 dd 01 00    	xchg   %eax,0x1dd92(%rip)        # 2ae30 <malloc_global_mutex>
    d09e:	85 c0                	test   %eax,%eax
    d0a0:	75 ee                	jne    d090 <init_mparams.isra.0+0xc0>
    d0a2:	e9 4e ff ff ff       	jmp    cff5 <init_mparams.isra.0+0x25>
    d0a7:	e8 c4 38 00 00       	call   10970 <__stack_chk_fail>
    d0ac:	e8 86 52 00 00       	call   12337 <abort>
    d0b1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    d0b8:	00 00 00 
    d0bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000d0c0 <dlmalloc>:
    d0c0:	f3 0f 1e fa          	endbr64 
    d0c4:	41 57                	push   %r15
    d0c6:	41 56                	push   %r14
    d0c8:	41 55                	push   %r13
    d0ca:	41 54                	push   %r12
    d0cc:	55                   	push   %rbp
    d0cd:	48 89 fd             	mov    %rdi,%rbp
    d0d0:	53                   	push   %rbx
    d0d1:	48 83 ec 18          	sub    $0x18,%rsp
    d0d5:	48 83 3d 23 dd 01 00 	cmpq   $0x0,0x1dd23(%rip)        # 2ae00 <mparams>
    d0dc:	00 
    d0dd:	0f 84 55 01 00 00    	je     d238 <dlmalloc+0x178>
    d0e3:	f6 05 c6 dc 01 00 02 	testb  $0x2,0x1dcc6(%rip)        # 2adb0 <_gm_+0x370>
    d0ea:	0f 85 5a 01 00 00    	jne    d24a <dlmalloc+0x18a>
    d0f0:	48 81 fd e0 00 00 00 	cmp    $0xe0,%rbp
    d0f7:	0f 87 fb 00 00 00    	ja     d1f8 <dlmalloc+0x138>
    d0fd:	48 83 fd 0e          	cmp    $0xe,%rbp
    d101:	0f 87 d9 00 00 00    	ja     d1e0 <dlmalloc+0x120>
    d107:	b9 04 00 00 00       	mov    $0x4,%ecx
    d10c:	41 bc 20 00 00 00    	mov    $0x20,%r12d
    d112:	8b 15 28 d9 01 00    	mov    0x1d928(%rip),%edx        # 2aa40 <_gm_>
    d118:	4c 8d 2d 21 d9 01 00 	lea    0x1d921(%rip),%r13        # 2aa40 <_gm_>
    d11f:	89 d0                	mov    %edx,%eax
    d121:	d3 e8                	shr    %cl,%eax
    d123:	a8 03                	test   $0x3,%al
    d125:	0f 84 d5 01 00 00    	je     d300 <dlmalloc+0x240>
    d12b:	f7 d0                	not    %eax
    d12d:	83 e0 01             	and    $0x1,%eax
    d130:	01 c1                	add    %eax,%ecx
    d132:	8d 44 09 09          	lea    0x9(%rcx,%rcx,1),%eax
    d136:	49 8d 74 c5 00       	lea    0x0(%r13,%rax,8),%rsi
    d13b:	48 8b 5e 10          	mov    0x10(%rsi),%rbx
    d13f:	48 8b 43 10          	mov    0x10(%rbx),%rax
    d143:	48 39 c6             	cmp    %rax,%rsi
    d146:	0f 84 a4 07 00 00    	je     d8f0 <dlmalloc+0x830>
    d14c:	48 3b 05 05 d9 01 00 	cmp    0x1d905(%rip),%rax        # 2aa58 <_gm_+0x18>
    d153:	0f 82 c7 05 00 00    	jb     d720 <dlmalloc+0x660>
    d159:	48 39 58 18          	cmp    %rbx,0x18(%rax)
    d15d:	0f 85 bd 05 00 00    	jne    d720 <dlmalloc+0x660>
    d163:	48 89 70 18          	mov    %rsi,0x18(%rax)
    d167:	48 89 46 10          	mov    %rax,0x10(%rsi)
    d16b:	c1 e1 03             	shl    $0x3,%ecx
    d16e:	89 c8                	mov    %ecx,%eax
    d170:	83 c8 03             	or     $0x3,%eax
    d173:	48 89 43 08          	mov    %rax,0x8(%rbx)
    d177:	48 8d 04 0b          	lea    (%rbx,%rcx,1),%rax
    d17b:	48 83 c3 10          	add    $0x10,%rbx
    d17f:	48 83 48 08 01       	orq    $0x1,0x8(%rax)
    d184:	4c 33 2d 75 dc 01 00 	xor    0x1dc75(%rip),%r13        # 2ae00 <mparams>
    d18b:	4c 89 28             	mov    %r13,(%rax)
    d18e:	48 85 db             	test   %rbx,%rbx
    d191:	0f 84 96 00 00 00    	je     d22d <dlmalloc+0x16d>
    d197:	e8 74 a1 ff ff       	call   7310 <get_heap_base>
    d19c:	48 39 c3             	cmp    %rax,%rbx
    d19f:	0f 82 7b 05 00 00    	jb     d720 <dlmalloc+0x660>
    d1a5:	48 01 dd             	add    %rbx,%rbp
    d1a8:	0f 82 72 05 00 00    	jb     d720 <dlmalloc+0x660>
    d1ae:	31 ff                	xor    %edi,%edi
    d1b0:	e8 2b f4 ff ff       	call   c5e0 <sbrk>
    d1b5:	48 39 e8             	cmp    %rbp,%rax
    d1b8:	0f 82 62 05 00 00    	jb     d720 <dlmalloc+0x660>
    d1be:	f6 05 eb db 01 00 02 	testb  $0x2,0x1dbeb(%rip)        # 2adb0 <_gm_+0x370>
    d1c5:	0f 85 35 05 00 00    	jne    d700 <dlmalloc+0x640>
    d1cb:	48 83 c4 18          	add    $0x18,%rsp
    d1cf:	48 89 d8             	mov    %rbx,%rax
    d1d2:	5b                   	pop    %rbx
    d1d3:	5d                   	pop    %rbp
    d1d4:	41 5c                	pop    %r12
    d1d6:	41 5d                	pop    %r13
    d1d8:	41 5e                	pop    %r14
    d1da:	41 5f                	pop    %r15
    d1dc:	c3                   	ret    
    d1dd:	0f 1f 00             	nopl   (%rax)
    d1e0:	4c 8d 65 1f          	lea    0x1f(%rbp),%r12
    d1e4:	49 83 e4 f0          	and    $0xfffffffffffffff0,%r12
    d1e8:	4c 89 e1             	mov    %r12,%rcx
    d1eb:	48 c1 e9 03          	shr    $0x3,%rcx
    d1ef:	e9 1e ff ff ff       	jmp    d112 <dlmalloc+0x52>
    d1f4:	0f 1f 40 00          	nopl   0x0(%rax)
    d1f8:	4c 8b 05 49 d8 01 00 	mov    0x1d849(%rip),%r8        # 2aa48 <_gm_+0x8>
    d1ff:	4c 8d 2d 3a d8 01 00 	lea    0x1d83a(%rip),%r13        # 2aa40 <_gm_>
    d206:	4c 89 c6             	mov    %r8,%rsi
    d209:	48 81 fd 7f ff ff ff 	cmp    $0xffffffffffffff7f,%rbp
    d210:	76 76                	jbe    d288 <dlmalloc+0x1c8>
    d212:	48 8b 05 e7 db 01 00 	mov    0x1dbe7(%rip),%rax        # 2ae00 <mparams>
    d219:	49 83 f8 ff          	cmp    $0xffffffffffffffff,%r8
    d21d:	0f 84 5d 02 00 00    	je     d480 <dlmalloc+0x3c0>
    d223:	48 85 c0             	test   %rax,%rax
    d226:	75 05                	jne    d22d <dlmalloc+0x16d>
    d228:	e8 a3 fd ff ff       	call   cfd0 <init_mparams.isra.0>
    d22d:	31 db                	xor    %ebx,%ebx
    d22f:	eb 8d                	jmp    d1be <dlmalloc+0xfe>
    d231:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    d238:	e8 93 fd ff ff       	call   cfd0 <init_mparams.isra.0>
    d23d:	f6 05 6c db 01 00 02 	testb  $0x2,0x1db6c(%rip)        # 2adb0 <_gm_+0x370>
    d244:	0f 84 a6 fe ff ff    	je     d0f0 <dlmalloc+0x30>
    d24a:	b8 01 00 00 00       	mov    $0x1,%eax
    d24f:	87 05 5f db 01 00    	xchg   %eax,0x1db5f(%rip)        # 2adb4 <_gm_+0x374>
    d255:	85 c0                	test   %eax,%eax
    d257:	0f 84 93 fe ff ff    	je     d0f0 <dlmalloc+0x30>
    d25d:	ba 01 00 00 00       	mov    $0x1,%edx
    d262:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    d268:	8b 05 46 db 01 00    	mov    0x1db46(%rip),%eax        # 2adb4 <_gm_+0x374>
    d26e:	85 c0                	test   %eax,%eax
    d270:	75 f6                	jne    d268 <dlmalloc+0x1a8>
    d272:	89 d0                	mov    %edx,%eax
    d274:	87 05 3a db 01 00    	xchg   %eax,0x1db3a(%rip)        # 2adb4 <_gm_+0x374>
    d27a:	85 c0                	test   %eax,%eax
    d27c:	75 ea                	jne    d268 <dlmalloc+0x1a8>
    d27e:	e9 6d fe ff ff       	jmp    d0f0 <dlmalloc+0x30>
    d283:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    d288:	44 8b 0d b5 d7 01 00 	mov    0x1d7b5(%rip),%r9d        # 2aa44 <_gm_+0x4>
    d28f:	4c 8d 65 1f          	lea    0x1f(%rbp),%r12
    d293:	49 83 e4 f0          	and    $0xfffffffffffffff0,%r12
    d297:	45 85 c9             	test   %r9d,%r9d
    d29a:	0f 85 20 02 00 00    	jne    d4c0 <dlmalloc+0x400>
    d2a0:	4c 39 e6             	cmp    %r12,%rsi
    d2a3:	0f 83 7f 01 00 00    	jae    d428 <dlmalloc+0x368>
    d2a9:	48 8b 05 a0 d7 01 00 	mov    0x1d7a0(%rip),%rax        # 2aa50 <_gm_+0x10>
    d2b0:	48 8b 15 49 db 01 00 	mov    0x1db49(%rip),%rdx        # 2ae00 <mparams>
    d2b7:	49 39 c4             	cmp    %rax,%r12
    d2ba:	0f 83 b0 06 00 00    	jae    d970 <dlmalloc+0x8b0>
    d2c0:	48 8b 1d a1 d7 01 00 	mov    0x1d7a1(%rip),%rbx        # 2aa68 <_gm_+0x28>
    d2c7:	4c 29 e0             	sub    %r12,%rax
    d2ca:	4c 31 ea             	xor    %r13,%rdx
    d2cd:	48 89 05 7c d7 01 00 	mov    %rax,0x1d77c(%rip)        # 2aa50 <_gm_+0x10>
    d2d4:	48 83 c8 01          	or     $0x1,%rax
    d2d8:	4a 8d 0c 23          	lea    (%rbx,%r12,1),%rcx
    d2dc:	49 83 cc 03          	or     $0x3,%r12
    d2e0:	48 89 0d 81 d7 01 00 	mov    %rcx,0x1d781(%rip)        # 2aa68 <_gm_+0x28>
    d2e7:	48 89 41 08          	mov    %rax,0x8(%rcx)
    d2eb:	4c 89 63 08          	mov    %r12,0x8(%rbx)
    d2ef:	48 89 11             	mov    %rdx,(%rcx)
    d2f2:	48 83 c3 10          	add    $0x10,%rbx
    d2f6:	e9 93 fe ff ff       	jmp    d18e <dlmalloc+0xce>
    d2fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    d300:	48 8b 35 41 d7 01 00 	mov    0x1d741(%rip),%rsi        # 2aa48 <_gm_+0x8>
    d307:	4c 39 e6             	cmp    %r12,%rsi
    d30a:	0f 83 18 01 00 00    	jae    d428 <dlmalloc+0x368>
    d310:	85 c0                	test   %eax,%eax
    d312:	0f 84 10 04 00 00    	je     d728 <dlmalloc+0x668>
    d318:	bf 01 00 00 00       	mov    $0x1,%edi
    d31d:	d3 e0                	shl    %cl,%eax
    d31f:	41 89 f9             	mov    %edi,%r9d
    d322:	41 d3 e1             	shl    %cl,%r9d
    d325:	45 01 c9             	add    %r9d,%r9d
    d328:	45 89 c8             	mov    %r9d,%r8d
    d32b:	41 f7 d8             	neg    %r8d
    d32e:	45 09 c8             	or     %r9d,%r8d
    d331:	44 21 c0             	and    %r8d,%eax
    d334:	89 c1                	mov    %eax,%ecx
    d336:	f7 d9                	neg    %ecx
    d338:	21 c1                	and    %eax,%ecx
    d33a:	f3 0f bc c9          	tzcnt  %ecx,%ecx
    d33e:	8d 44 09 09          	lea    0x9(%rcx,%rcx,1),%eax
    d342:	4d 8d 44 c5 00       	lea    0x0(%r13,%rax,8),%r8
    d347:	49 8b 58 10          	mov    0x10(%r8),%rbx
    d34b:	48 8b 43 10          	mov    0x10(%rbx),%rax
    d34f:	49 39 c0             	cmp    %rax,%r8
    d352:	0f 84 d1 05 00 00    	je     d929 <dlmalloc+0x869>
    d358:	48 3b 05 f9 d6 01 00 	cmp    0x1d6f9(%rip),%rax        # 2aa58 <_gm_+0x18>
    d35f:	0f 82 bb 03 00 00    	jb     d720 <dlmalloc+0x660>
    d365:	48 39 58 18          	cmp    %rbx,0x18(%rax)
    d369:	0f 85 b1 03 00 00    	jne    d720 <dlmalloc+0x660>
    d36f:	4c 89 40 18          	mov    %r8,0x18(%rax)
    d373:	49 89 40 10          	mov    %rax,0x10(%r8)
    d377:	8d 04 cd 00 00 00 00 	lea    0x0(,%rcx,8),%eax
    d37e:	48 8b 3d 7b da 01 00 	mov    0x1da7b(%rip),%rdi        # 2ae00 <mparams>
    d385:	48 89 c2             	mov    %rax,%rdx
    d388:	48 89 c1             	mov    %rax,%rcx
    d38b:	48 01 d8             	add    %rbx,%rax
    d38e:	4c 29 e2             	sub    %r12,%rdx
    d391:	4c 31 ef             	xor    %r13,%rdi
    d394:	48 83 fa 1f          	cmp    $0x1f,%rdx
    d398:	0f 86 8d 0d 00 00    	jbe    e12b <dlmalloc+0x106b>
    d39e:	4c 89 e1             	mov    %r12,%rcx
    d3a1:	49 01 dc             	add    %rbx,%r12
    d3a4:	48 83 c9 03          	or     $0x3,%rcx
    d3a8:	48 89 4b 08          	mov    %rcx,0x8(%rbx)
    d3ac:	48 89 d1             	mov    %rdx,%rcx
    d3af:	48 83 c9 01          	or     $0x1,%rcx
    d3b3:	49 89 3c 24          	mov    %rdi,(%r12)
    d3b7:	49 89 4c 24 08       	mov    %rcx,0x8(%r12)
    d3bc:	48 89 10             	mov    %rdx,(%rax)
    d3bf:	48 85 f6             	test   %rsi,%rsi
    d3c2:	74 4d                	je     d411 <dlmalloc+0x351>
    d3c4:	48 c1 ee 03          	shr    $0x3,%rsi
    d3c8:	bf 01 00 00 00       	mov    $0x1,%edi
    d3cd:	48 8b 05 8c d6 01 00 	mov    0x1d68c(%rip),%rax        # 2aa60 <_gm_+0x20>
    d3d4:	48 89 f1             	mov    %rsi,%rcx
    d3d7:	8d 74 36 09          	lea    0x9(%rsi,%rsi,1),%esi
    d3db:	4d 8d 44 f5 00       	lea    0x0(%r13,%rsi,8),%r8
    d3e0:	8b 35 5a d6 01 00    	mov    0x1d65a(%rip),%esi        # 2aa40 <_gm_>
    d3e6:	d3 e7                	shl    %cl,%edi
    d3e8:	85 fe                	test   %edi,%esi
    d3ea:	0f 84 a9 10 00 00    	je     e499 <dlmalloc+0x13d9>
    d3f0:	49 8b 48 10          	mov    0x10(%r8),%rcx
    d3f4:	48 3b 0d 5d d6 01 00 	cmp    0x1d65d(%rip),%rcx        # 2aa58 <_gm_+0x18>
    d3fb:	0f 82 1f 03 00 00    	jb     d720 <dlmalloc+0x660>
    d401:	49 89 40 10          	mov    %rax,0x10(%r8)
    d405:	48 89 41 18          	mov    %rax,0x18(%rcx)
    d409:	48 89 48 10          	mov    %rcx,0x10(%rax)
    d40d:	4c 89 40 18          	mov    %r8,0x18(%rax)
    d411:	48 89 15 30 d6 01 00 	mov    %rdx,0x1d630(%rip)        # 2aa48 <_gm_+0x8>
    d418:	4c 89 25 41 d6 01 00 	mov    %r12,0x1d641(%rip)        # 2aa60 <_gm_+0x20>
    d41f:	e9 ce fe ff ff       	jmp    d2f2 <dlmalloc+0x232>
    d424:	0f 1f 40 00          	nopl   0x0(%rax)
    d428:	48 8b 1d 31 d6 01 00 	mov    0x1d631(%rip),%rbx        # 2aa60 <_gm_+0x20>
    d42f:	48 8b 3d ca d9 01 00 	mov    0x1d9ca(%rip),%rdi        # 2ae00 <mparams>
    d436:	48 89 f2             	mov    %rsi,%rdx
    d439:	4c 29 e2             	sub    %r12,%rdx
    d43c:	48 8d 04 33          	lea    (%rbx,%rsi,1),%rax
    d440:	4c 31 ef             	xor    %r13,%rdi
    d443:	48 83 fa 1f          	cmp    $0x1f,%rdx
    d447:	0f 86 83 0a 00 00    	jbe    ded0 <dlmalloc+0xe10>
    d44d:	48 89 d6             	mov    %rdx,%rsi
    d450:	4a 8d 0c 23          	lea    (%rbx,%r12,1),%rcx
    d454:	49 83 cc 03          	or     $0x3,%r12
    d458:	48 89 15 e9 d5 01 00 	mov    %rdx,0x1d5e9(%rip)        # 2aa48 <_gm_+0x8>
    d45f:	48 83 ce 01          	or     $0x1,%rsi
    d463:	48 89 0d f6 d5 01 00 	mov    %rcx,0x1d5f6(%rip)        # 2aa60 <_gm_+0x20>
    d46a:	48 89 71 08          	mov    %rsi,0x8(%rcx)
    d46e:	48 89 10             	mov    %rdx,(%rax)
    d471:	4c 89 63 08          	mov    %r12,0x8(%rbx)
    d475:	48 89 39             	mov    %rdi,(%rcx)
    d478:	e9 75 fe ff ff       	jmp    d2f2 <dlmalloc+0x232>
    d47d:	0f 1f 00             	nopl   (%rax)
    d480:	48 8b 1d d9 d5 01 00 	mov    0x1d5d9(%rip),%rbx        # 2aa60 <_gm_+0x20>
    d487:	48 c7 c6 ff ff ff ff 	mov    $0xffffffffffffffff,%rsi
    d48e:	48 8d 43 ff          	lea    -0x1(%rbx),%rax
    d492:	48 c7 05 ab d5 01 00 	movq   $0x0,0x1d5ab(%rip)        # 2aa48 <_gm_+0x8>
    d499:	00 00 00 00 
    d49d:	48 c7 05 b8 d5 01 00 	movq   $0x0,0x1d5b8(%rip)        # 2aa60 <_gm_+0x20>
    d4a4:	00 00 00 00 
    d4a8:	48 89 73 08          	mov    %rsi,0x8(%rbx)
    d4ac:	48 83 48 08 01       	orq    $0x1,0x8(%rax)
    d4b1:	4c 33 2d 48 d9 01 00 	xor    0x1d948(%rip),%r13        # 2ae00 <mparams>
    d4b8:	4c 89 28             	mov    %r13,(%rax)
    d4bb:	e9 32 fe ff ff       	jmp    d2f2 <dlmalloc+0x232>
    d4c0:	4c 89 e0             	mov    %r12,%rax
    d4c3:	4c 89 e7             	mov    %r12,%rdi
    d4c6:	48 c1 e8 08          	shr    $0x8,%rax
    d4ca:	48 f7 df             	neg    %rdi
    d4cd:	41 89 c2             	mov    %eax,%r10d
    d4d0:	85 c0                	test   %eax,%eax
    d4d2:	0f 85 28 04 00 00    	jne    d900 <dlmalloc+0x840>
    d4d8:	48 8b 15 b9 d7 01 00 	mov    0x1d7b9(%rip),%rdx        # 2ac98 <_gm_+0x258>
    d4df:	b9 39 00 00 00       	mov    $0x39,%ecx
    d4e4:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    d4e9:	48 85 d2             	test   %rdx,%rdx
    d4ec:	0f 84 52 04 00 00    	je     d944 <dlmalloc+0x884>
    d4f2:	4d 89 e3             	mov    %r12,%r11
    d4f5:	49 d3 e3             	shl    %cl,%r11
    d4f8:	31 c9                	xor    %ecx,%ecx
    d4fa:	31 db                	xor    %ebx,%ebx
    d4fc:	eb 05                	jmp    d503 <dlmalloc+0x443>
    d4fe:	66 90                	xchg   %ax,%ax
    d500:	4d 01 db             	add    %r11,%r11
    d503:	48 8b 42 08          	mov    0x8(%rdx),%rax
    d507:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    d50b:	4c 29 e0             	sub    %r12,%rax
    d50e:	48 39 f8             	cmp    %rdi,%rax
    d511:	73 0f                	jae    d522 <dlmalloc+0x462>
    d513:	48 85 c0             	test   %rax,%rax
    d516:	0f 84 c3 0b 00 00    	je     e0df <dlmalloc+0x101f>
    d51c:	48 89 c7             	mov    %rax,%rdi
    d51f:	48 89 d3             	mov    %rdx,%rbx
    d522:	48 8b 42 28          	mov    0x28(%rdx),%rax
    d526:	4d 89 de             	mov    %r11,%r14
    d529:	49 c1 ee 3f          	shr    $0x3f,%r14
    d52d:	4a 8b 54 f2 20       	mov    0x20(%rdx,%r14,8),%rdx
    d532:	48 85 c0             	test   %rax,%rax
    d535:	74 07                	je     d53e <dlmalloc+0x47e>
    d537:	48 39 d0             	cmp    %rdx,%rax
    d53a:	48 0f 45 c8          	cmovne %rax,%rcx
    d53e:	48 85 d2             	test   %rdx,%rdx
    d541:	75 bd                	jne    d500 <dlmalloc+0x440>
    d543:	48 89 c8             	mov    %rcx,%rax
    d546:	48 09 d8             	or     %rbx,%rax
    d549:	0f 84 eb 03 00 00    	je     d93a <dlmalloc+0x87a>
    d54f:	48 85 c9             	test   %rcx,%rcx
    d552:	75 0f                	jne    d563 <dlmalloc+0x4a3>
    d554:	eb 35                	jmp    d58b <dlmalloc+0x4cb>
    d556:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    d55d:	00 00 00 
    d560:	48 89 c1             	mov    %rax,%rcx
    d563:	48 8b 41 08          	mov    0x8(%rcx),%rax
    d567:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    d56b:	4c 29 e0             	sub    %r12,%rax
    d56e:	48 39 f8             	cmp    %rdi,%rax
    d571:	73 06                	jae    d579 <dlmalloc+0x4b9>
    d573:	48 89 c7             	mov    %rax,%rdi
    d576:	48 89 cb             	mov    %rcx,%rbx
    d579:	48 8b 41 20          	mov    0x20(%rcx),%rax
    d57d:	48 85 c0             	test   %rax,%rax
    d580:	75 de                	jne    d560 <dlmalloc+0x4a0>
    d582:	48 8b 41 28          	mov    0x28(%rcx),%rax
    d586:	48 85 c0             	test   %rax,%rax
    d589:	75 d5                	jne    d560 <dlmalloc+0x4a0>
    d58b:	48 85 db             	test   %rbx,%rbx
    d58e:	0f 84 0c fd ff ff    	je     d2a0 <dlmalloc+0x1e0>
    d594:	4c 89 c0             	mov    %r8,%rax
    d597:	4c 29 e0             	sub    %r12,%rax
    d59a:	48 39 c7             	cmp    %rax,%rdi
    d59d:	0f 83 fd fc ff ff    	jae    d2a0 <dlmalloc+0x1e0>
    d5a3:	4c 8b 1d ae d4 01 00 	mov    0x1d4ae(%rip),%r11        # 2aa58 <_gm_+0x18>
    d5aa:	4c 39 db             	cmp    %r11,%rbx
    d5ad:	0f 82 6d 01 00 00    	jb     d720 <dlmalloc+0x660>
    d5b3:	4e 8d 14 23          	lea    (%rbx,%r12,1),%r10
    d5b7:	4c 39 d3             	cmp    %r10,%rbx
    d5ba:	0f 83 60 01 00 00    	jae    d720 <dlmalloc+0x660>
    d5c0:	4c 8b 73 18          	mov    0x18(%rbx),%r14
    d5c4:	4c 8b 7b 30          	mov    0x30(%rbx),%r15
    d5c8:	4c 39 f3             	cmp    %r14,%rbx
    d5cb:	0f 84 2d 0d 00 00    	je     e2fe <dlmalloc+0x123e>
    d5d1:	48 8b 43 10          	mov    0x10(%rbx),%rax
    d5d5:	4c 39 d8             	cmp    %r11,%rax
    d5d8:	0f 82 42 01 00 00    	jb     d720 <dlmalloc+0x660>
    d5de:	48 3b 58 18          	cmp    0x18(%rax),%rbx
    d5e2:	0f 85 38 01 00 00    	jne    d720 <dlmalloc+0x660>
    d5e8:	49 3b 5e 10          	cmp    0x10(%r14),%rbx
    d5ec:	0f 85 2e 01 00 00    	jne    d720 <dlmalloc+0x660>
    d5f2:	4c 89 70 18          	mov    %r14,0x18(%rax)
    d5f6:	49 89 46 10          	mov    %rax,0x10(%r14)
    d5fa:	4d 85 ff             	test   %r15,%r15
    d5fd:	74 71                	je     d670 <dlmalloc+0x5b0>
    d5ff:	8b 53 38             	mov    0x38(%rbx),%edx
    d602:	48 89 d0             	mov    %rdx,%rax
    d605:	49 3b 9c d5 58 02 00 	cmp    0x258(%r13,%rdx,8),%rbx
    d60c:	00 
    d60d:	0f 84 ca 0f 00 00    	je     e5dd <dlmalloc+0x151d>
    d613:	4d 39 df             	cmp    %r11,%r15
    d616:	0f 82 04 01 00 00    	jb     d720 <dlmalloc+0x660>
    d61c:	49 3b 5f 20          	cmp    0x20(%r15),%rbx
    d620:	0f 84 3e 11 00 00    	je     e764 <dlmalloc+0x16a4>
    d626:	4d 89 77 28          	mov    %r14,0x28(%r15)
    d62a:	4d 85 f6             	test   %r14,%r14
    d62d:	74 41                	je     d670 <dlmalloc+0x5b0>
    d62f:	4d 39 de             	cmp    %r11,%r14
    d632:	0f 82 e8 00 00 00    	jb     d720 <dlmalloc+0x660>
    d638:	48 8b 43 20          	mov    0x20(%rbx),%rax
    d63c:	4d 89 7e 30          	mov    %r15,0x30(%r14)
    d640:	48 85 c0             	test   %rax,%rax
    d643:	74 11                	je     d656 <dlmalloc+0x596>
    d645:	4c 39 d8             	cmp    %r11,%rax
    d648:	0f 82 d2 00 00 00    	jb     d720 <dlmalloc+0x660>
    d64e:	49 89 46 20          	mov    %rax,0x20(%r14)
    d652:	4c 89 70 30          	mov    %r14,0x30(%rax)
    d656:	48 8b 43 28          	mov    0x28(%rbx),%rax
    d65a:	48 85 c0             	test   %rax,%rax
    d65d:	74 11                	je     d670 <dlmalloc+0x5b0>
    d65f:	4c 39 d8             	cmp    %r11,%rax
    d662:	0f 82 b8 00 00 00    	jb     d720 <dlmalloc+0x660>
    d668:	49 89 46 28          	mov    %rax,0x28(%r14)
    d66c:	4c 89 70 30          	mov    %r14,0x30(%rax)
    d670:	48 8b 15 89 d7 01 00 	mov    0x1d789(%rip),%rdx        # 2ae00 <mparams>
    d677:	4c 31 ea             	xor    %r13,%rdx
    d67a:	48 83 ff 1f          	cmp    $0x1f,%rdi
    d67e:	0f 86 fa 0c 00 00    	jbe    e37e <dlmalloc+0x12be>
    d684:	4c 89 e0             	mov    %r12,%rax
    d687:	48 89 f9             	mov    %rdi,%rcx
    d68a:	48 83 c8 03          	or     $0x3,%rax
    d68e:	48 c1 e9 03          	shr    $0x3,%rcx
    d692:	48 89 43 08          	mov    %rax,0x8(%rbx)
    d696:	48 89 f8             	mov    %rdi,%rax
    d699:	48 83 c8 01          	or     $0x1,%rax
    d69d:	49 89 12             	mov    %rdx,(%r10)
    d6a0:	49 89 42 08          	mov    %rax,0x8(%r10)
    d6a4:	49 89 3c 3a          	mov    %rdi,(%r10,%rdi,1)
    d6a8:	48 81 ff ff 00 00 00 	cmp    $0xff,%rdi
    d6af:	0f 87 e8 0c 00 00    	ja     e39d <dlmalloc+0x12dd>
    d6b5:	8d 44 09 09          	lea    0x9(%rcx,%rcx,1),%eax
    d6b9:	8b 35 81 d3 01 00    	mov    0x1d381(%rip),%esi        # 2aa40 <_gm_>
    d6bf:	49 8d 54 c5 00       	lea    0x0(%r13,%rax,8),%rdx
    d6c4:	b8 01 00 00 00       	mov    $0x1,%eax
    d6c9:	d3 e0                	shl    %cl,%eax
    d6cb:	85 c6                	test   %eax,%esi
    d6cd:	0f 84 39 10 00 00    	je     e70c <dlmalloc+0x164c>
    d6d3:	48 8b 42 10          	mov    0x10(%rdx),%rax
    d6d7:	4c 39 d8             	cmp    %r11,%rax
    d6da:	72 44                	jb     d720 <dlmalloc+0x660>
    d6dc:	4c 89 52 10          	mov    %r10,0x10(%rdx)
    d6e0:	4c 89 50 18          	mov    %r10,0x18(%rax)
    d6e4:	49 89 42 10          	mov    %rax,0x10(%r10)
    d6e8:	49 89 52 18          	mov    %rdx,0x18(%r10)
    d6ec:	48 83 c3 10          	add    $0x10,%rbx
    d6f0:	4c 89 c6             	mov    %r8,%rsi
    d6f3:	0f 85 9e fa ff ff    	jne    d197 <dlmalloc+0xd7>
    d6f9:	e9 a2 fb ff ff       	jmp    d2a0 <dlmalloc+0x1e0>
    d6fe:	66 90                	xchg   %ax,%ax
    d700:	c7 05 aa d6 01 00 00 	movl   $0x0,0x1d6aa(%rip)        # 2adb4 <_gm_+0x374>
    d707:	00 00 00 
    d70a:	e9 bc fa ff ff       	jmp    d1cb <dlmalloc+0x10b>
    d70f:	48 8b 42 10          	mov    0x10(%rdx),%rax
    d713:	48 3b 05 3e d3 01 00 	cmp    0x1d33e(%rip),%rax        # 2aa58 <_gm_+0x18>
    d71a:	0f 83 57 06 00 00    	jae    dd77 <dlmalloc+0xcb7>
    d720:	e8 12 4c 00 00       	call   12337 <abort>
    d725:	0f 1f 00             	nopl   (%rax)
    d728:	44 8b 0d 15 d3 01 00 	mov    0x1d315(%rip),%r9d        # 2aa44 <_gm_+0x4>
    d72f:	45 85 c9             	test   %r9d,%r9d
    d732:	0f 84 71 fb ff ff    	je     d2a9 <dlmalloc+0x1e9>
    d738:	44 89 c8             	mov    %r9d,%eax
    d73b:	f7 d8                	neg    %eax
    d73d:	44 21 c8             	and    %r9d,%eax
    d740:	f3 0f bc c0          	tzcnt  %eax,%eax
    d744:	49 8b 84 c5 58 02 00 	mov    0x258(%r13,%rax,8),%rax
    d74b:	00 
    d74c:	48 8b 78 08          	mov    0x8(%rax),%rdi
    d750:	48 89 c3             	mov    %rax,%rbx
    d753:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    d757:	4c 29 e7             	sub    %r12,%rdi
    d75a:	eb 1d                	jmp    d779 <dlmalloc+0x6b9>
    d75c:	0f 1f 40 00          	nopl   0x0(%rax)
    d760:	48 8b 41 08          	mov    0x8(%rcx),%rax
    d764:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    d768:	4c 29 e0             	sub    %r12,%rax
    d76b:	48 39 f8             	cmp    %rdi,%rax
    d76e:	73 06                	jae    d776 <dlmalloc+0x6b6>
    d770:	48 89 c7             	mov    %rax,%rdi
    d773:	48 89 cb             	mov    %rcx,%rbx
    d776:	48 89 c8             	mov    %rcx,%rax
    d779:	48 8b 48 20          	mov    0x20(%rax),%rcx
    d77d:	48 85 c9             	test   %rcx,%rcx
    d780:	75 de                	jne    d760 <dlmalloc+0x6a0>
    d782:	48 8b 48 28          	mov    0x28(%rax),%rcx
    d786:	48 85 c9             	test   %rcx,%rcx
    d789:	75 d5                	jne    d760 <dlmalloc+0x6a0>
    d78b:	4c 8b 1d c6 d2 01 00 	mov    0x1d2c6(%rip),%r11        # 2aa58 <_gm_+0x18>
    d792:	4c 39 db             	cmp    %r11,%rbx
    d795:	72 89                	jb     d720 <dlmalloc+0x660>
    d797:	4e 8d 14 23          	lea    (%rbx,%r12,1),%r10
    d79b:	4c 39 d3             	cmp    %r10,%rbx
    d79e:	73 80                	jae    d720 <dlmalloc+0x660>
    d7a0:	4c 8b 43 18          	mov    0x18(%rbx),%r8
    d7a4:	4c 8b 73 30          	mov    0x30(%rbx),%r14
    d7a8:	49 39 d8             	cmp    %rbx,%r8
    d7ab:	0f 84 36 0d 00 00    	je     e4e7 <dlmalloc+0x1427>
    d7b1:	48 8b 43 10          	mov    0x10(%rbx),%rax
    d7b5:	4c 39 d8             	cmp    %r11,%rax
    d7b8:	0f 82 62 ff ff ff    	jb     d720 <dlmalloc+0x660>
    d7be:	48 39 58 18          	cmp    %rbx,0x18(%rax)
    d7c2:	0f 85 58 ff ff ff    	jne    d720 <dlmalloc+0x660>
    d7c8:	49 39 58 10          	cmp    %rbx,0x10(%r8)
    d7cc:	0f 85 4e ff ff ff    	jne    d720 <dlmalloc+0x660>
    d7d2:	4c 89 40 18          	mov    %r8,0x18(%rax)
    d7d6:	49 89 40 10          	mov    %rax,0x10(%r8)
    d7da:	4d 85 f6             	test   %r14,%r14
    d7dd:	74 71                	je     d850 <dlmalloc+0x790>
    d7df:	8b 4b 38             	mov    0x38(%rbx),%ecx
    d7e2:	48 89 c8             	mov    %rcx,%rax
    d7e5:	49 39 9c cd 58 02 00 	cmp    %rbx,0x258(%r13,%rcx,8)
    d7ec:	00 
    d7ed:	0f 84 14 10 00 00    	je     e807 <dlmalloc+0x1747>
    d7f3:	4d 39 de             	cmp    %r11,%r14
    d7f6:	0f 82 24 ff ff ff    	jb     d720 <dlmalloc+0x660>
    d7fc:	49 39 5e 20          	cmp    %rbx,0x20(%r14)
    d800:	0f 84 00 11 00 00    	je     e906 <dlmalloc+0x1846>
    d806:	4d 89 46 28          	mov    %r8,0x28(%r14)
    d80a:	4d 85 c0             	test   %r8,%r8
    d80d:	74 41                	je     d850 <dlmalloc+0x790>
    d80f:	4d 39 d8             	cmp    %r11,%r8
    d812:	0f 82 08 ff ff ff    	jb     d720 <dlmalloc+0x660>
    d818:	48 8b 43 20          	mov    0x20(%rbx),%rax
    d81c:	4d 89 70 30          	mov    %r14,0x30(%r8)
    d820:	48 85 c0             	test   %rax,%rax
    d823:	74 11                	je     d836 <dlmalloc+0x776>
    d825:	4c 39 d8             	cmp    %r11,%rax
    d828:	0f 82 f2 fe ff ff    	jb     d720 <dlmalloc+0x660>
    d82e:	49 89 40 20          	mov    %rax,0x20(%r8)
    d832:	4c 89 40 30          	mov    %r8,0x30(%rax)
    d836:	48 8b 43 28          	mov    0x28(%rbx),%rax
    d83a:	48 85 c0             	test   %rax,%rax
    d83d:	74 11                	je     d850 <dlmalloc+0x790>
    d83f:	4c 39 d8             	cmp    %r11,%rax
    d842:	0f 82 d8 fe ff ff    	jb     d720 <dlmalloc+0x660>
    d848:	49 89 40 28          	mov    %rax,0x28(%r8)
    d84c:	4c 89 40 30          	mov    %r8,0x30(%rax)
    d850:	48 8b 05 a9 d5 01 00 	mov    0x1d5a9(%rip),%rax        # 2ae00 <mparams>
    d857:	4c 31 e8             	xor    %r13,%rax
    d85a:	48 83 ff 1f          	cmp    $0x1f,%rdi
    d85e:	0f 86 d2 0d 00 00    	jbe    e636 <dlmalloc+0x1576>
    d864:	4c 89 e1             	mov    %r12,%rcx
    d867:	48 83 c9 03          	or     $0x3,%rcx
    d86b:	48 89 4b 08          	mov    %rcx,0x8(%rbx)
    d86f:	49 89 02             	mov    %rax,(%r10)
    d872:	48 89 f8             	mov    %rdi,%rax
    d875:	48 83 c8 01          	or     $0x1,%rax
    d879:	49 89 42 08          	mov    %rax,0x8(%r10)
    d87d:	49 89 3c 3a          	mov    %rdi,(%r10,%rdi,1)
    d881:	48 85 f6             	test   %rsi,%rsi
    d884:	74 46                	je     d8cc <dlmalloc+0x80c>
    d886:	48 c1 ee 03          	shr    $0x3,%rsi
    d88a:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    d890:	48 8b 05 c9 d1 01 00 	mov    0x1d1c9(%rip),%rax        # 2aa60 <_gm_+0x20>
    d897:	48 89 f1             	mov    %rsi,%rcx
    d89a:	8d 74 36 09          	lea    0x9(%rsi,%rsi,1),%esi
    d89e:	41 d3 e0             	shl    %cl,%r8d
    d8a1:	4d 8d 4c f5 00       	lea    0x0(%r13,%rsi,8),%r9
    d8a6:	44 85 c2             	test   %r8d,%edx
    d8a9:	0f 84 79 0f 00 00    	je     e828 <dlmalloc+0x1768>
    d8af:	49 8b 51 10          	mov    0x10(%r9),%rdx
    d8b3:	4c 39 da             	cmp    %r11,%rdx
    d8b6:	0f 82 64 fe ff ff    	jb     d720 <dlmalloc+0x660>
    d8bc:	49 89 41 10          	mov    %rax,0x10(%r9)
    d8c0:	48 89 42 18          	mov    %rax,0x18(%rdx)
    d8c4:	48 89 50 10          	mov    %rdx,0x10(%rax)
    d8c8:	4c 89 48 18          	mov    %r9,0x18(%rax)
    d8cc:	48 89 3d 75 d1 01 00 	mov    %rdi,0x1d175(%rip)        # 2aa48 <_gm_+0x8>
    d8d3:	4c 89 15 86 d1 01 00 	mov    %r10,0x1d186(%rip)        # 2aa60 <_gm_+0x20>
    d8da:	48 83 c3 10          	add    $0x10,%rbx
    d8de:	0f 85 b3 f8 ff ff    	jne    d197 <dlmalloc+0xd7>
    d8e4:	48 8b 35 5d d1 01 00 	mov    0x1d15d(%rip),%rsi        # 2aa48 <_gm_+0x8>
    d8eb:	e9 b0 f9 ff ff       	jmp    d2a0 <dlmalloc+0x1e0>
    d8f0:	0f b3 ca             	btr    %ecx,%edx
    d8f3:	89 15 47 d1 01 00    	mov    %edx,0x1d147(%rip)        # 2aa40 <_gm_>
    d8f9:	e9 6d f8 ff ff       	jmp    d16b <dlmalloc+0xab>
    d8fe:	66 90                	xchg   %ax,%ax
    d900:	3d ff ff 00 00       	cmp    $0xffff,%eax
    d905:	0f 86 85 07 00 00    	jbe    e090 <dlmalloc+0xfd0>
    d90b:	48 8b 15 7e d4 01 00 	mov    0x1d47e(%rip),%rdx        # 2ad90 <_gm_+0x350>
    d912:	4d 89 e3             	mov    %r12,%r11
    d915:	41 ba 1f 00 00 00    	mov    $0x1f,%r10d
    d91b:	48 85 d2             	test   %rdx,%rdx
    d91e:	0f 85 d4 fb ff ff    	jne    d4f8 <dlmalloc+0x438>
    d924:	e9 77 f9 ff ff       	jmp    d2a0 <dlmalloc+0x1e0>
    d929:	d3 e7                	shl    %cl,%edi
    d92b:	f7 d7                	not    %edi
    d92d:	21 d7                	and    %edx,%edi
    d92f:	89 3d 0b d1 01 00    	mov    %edi,0x1d10b(%rip)        # 2aa40 <_gm_>
    d935:	e9 3d fa ff ff       	jmp    d377 <dlmalloc+0x2b7>
    d93a:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    d93f:	44 89 d1             	mov    %r10d,%ecx
    d942:	d3 e0                	shl    %cl,%eax
    d944:	44 21 c8             	and    %r9d,%eax
    d947:	0f 84 53 f9 ff ff    	je     d2a0 <dlmalloc+0x1e0>
    d94d:	89 c2                	mov    %eax,%edx
    d94f:	31 db                	xor    %ebx,%ebx
    d951:	f7 da                	neg    %edx
    d953:	21 d0                	and    %edx,%eax
    d955:	f3 0f bc c0          	tzcnt  %eax,%eax
    d959:	49 8b 8c c5 58 02 00 	mov    0x258(%r13,%rax,8),%rcx
    d960:	00 
    d961:	48 85 c9             	test   %rcx,%rcx
    d964:	0f 85 f9 fb ff ff    	jne    d563 <dlmalloc+0x4a3>
    d96a:	e9 31 f9 ff ff       	jmp    d2a0 <dlmalloc+0x1e0>
    d96f:	90                   	nop
    d970:	48 85 d2             	test   %rdx,%rdx
    d973:	0f 84 74 12 00 00    	je     ebed <dlmalloc+0x1b2d>
    d979:	48 8b 05 90 d4 01 00 	mov    0x1d490(%rip),%rax        # 2ae10 <mparams+0x10>
    d980:	49 8d 4c 04 5f       	lea    0x5f(%r12,%rax,1),%rcx
    d985:	48 f7 d8             	neg    %rax
    d988:	48 21 c1             	and    %rax,%rcx
    d98b:	49 39 cc             	cmp    %rcx,%r12
    d98e:	0f 83 99 f8 ff ff    	jae    d22d <dlmalloc+0x16d>
    d994:	48 8b 05 0d d4 01 00 	mov    0x1d40d(%rip),%rax        # 2ada8 <_gm_+0x368>
    d99b:	48 85 c0             	test   %rax,%rax
    d99e:	74 1d                	je     d9bd <dlmalloc+0x8fd>
    d9a0:	48 8b 15 f1 d3 01 00 	mov    0x1d3f1(%rip),%rdx        # 2ad98 <_gm_+0x358>
    d9a7:	48 8d 34 11          	lea    (%rcx,%rdx,1),%rsi
    d9ab:	48 39 f2             	cmp    %rsi,%rdx
    d9ae:	0f 83 79 f8 ff ff    	jae    d22d <dlmalloc+0x16d>
    d9b4:	48 39 f0             	cmp    %rsi,%rax
    d9b7:	0f 82 70 f8 ff ff    	jb     d22d <dlmalloc+0x16d>
    d9bd:	f6 05 ec d3 01 00 04 	testb  $0x4,0x1d3ec(%rip)        # 2adb0 <_gm_+0x370>
    d9c4:	0f 85 b9 00 00 00    	jne    da83 <dlmalloc+0x9c3>
    d9ca:	48 8b 15 97 d0 01 00 	mov    0x1d097(%rip),%rdx        # 2aa68 <_gm_+0x28>
    d9d1:	48 85 d2             	test   %rdx,%rdx
    d9d4:	0f 84 b6 05 00 00    	je     df90 <dlmalloc+0xed0>
    d9da:	4c 8d 35 d7 d3 01 00 	lea    0x1d3d7(%rip),%r14        # 2adb8 <_gm_+0x378>
    d9e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    d9e8:	49 8b 06             	mov    (%r14),%rax
    d9eb:	48 39 c2             	cmp    %rax,%rdx
    d9ee:	72 0d                	jb     d9fd <dlmalloc+0x93d>
    d9f0:	49 03 46 08          	add    0x8(%r14),%rax
    d9f4:	48 39 c2             	cmp    %rax,%rdx
    d9f7:	0f 82 44 07 00 00    	jb     e141 <dlmalloc+0x1081>
    d9fd:	4d 8b 76 10          	mov    0x10(%r14),%r14
    da01:	4d 85 f6             	test   %r14,%r14
    da04:	75 e2                	jne    d9e8 <dlmalloc+0x928>
    da06:	b8 01 00 00 00       	mov    $0x1,%eax
    da0b:	87 05 1f d4 01 00    	xchg   %eax,0x1d41f(%rip)        # 2ae30 <malloc_global_mutex>
    da11:	85 c0                	test   %eax,%eax
    da13:	0f 84 8a 05 00 00    	je     dfa3 <dlmalloc+0xee3>
    da19:	45 31 f6             	xor    %r14d,%r14d
    da1c:	48 8d 15 0d d4 01 00 	lea    0x1d40d(%rip),%rdx        # 2ae30 <malloc_global_mutex>
    da23:	be 01 00 00 00       	mov    $0x1,%esi
    da28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    da2f:	00 
    da30:	8b 02                	mov    (%rdx),%eax
    da32:	85 c0                	test   %eax,%eax
    da34:	75 fa                	jne    da30 <dlmalloc+0x970>
    da36:	89 f0                	mov    %esi,%eax
    da38:	87 05 f2 d3 01 00    	xchg   %eax,0x1d3f2(%rip)        # 2ae30 <malloc_global_mutex>
    da3e:	85 c0                	test   %eax,%eax
    da40:	75 ee                	jne    da30 <dlmalloc+0x970>
    da42:	4d 85 f6             	test   %r14,%r14
    da45:	0f 84 58 05 00 00    	je     dfa3 <dlmalloc+0xee3>
    da4b:	48 8b 05 be d3 01 00 	mov    0x1d3be(%rip),%rax        # 2ae10 <mparams+0x10>
    da52:	4c 8d 78 5f          	lea    0x5f(%rax),%r15
    da56:	4c 2b 3d f3 cf 01 00 	sub    0x1cff3(%rip),%r15        # 2aa50 <_gm_+0x10>
    da5d:	48 f7 d8             	neg    %rax
    da60:	4d 01 e7             	add    %r12,%r15
    da63:	49 21 c7             	and    %rax,%r15
    da66:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
    da6d:	ff ff 7f 
    da70:	4c 39 f8             	cmp    %r15,%rax
    da73:	0f 83 73 06 00 00    	jae    e0ec <dlmalloc+0x102c>
    da79:	c7 05 ad d3 01 00 00 	movl   $0x0,0x1d3ad(%rip)        # 2ae30 <malloc_global_mutex>
    da80:	00 00 00 
    da83:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
    da8a:	ff ff 7f 
    da8d:	48 39 c8             	cmp    %rcx,%rax
    da90:	73 16                	jae    daa8 <dlmalloc+0x9e8>
    da92:	e8 a9 33 00 00       	call   10e40 <__errno_location>
    da97:	31 db                	xor    %ebx,%ebx
    da99:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
    da9f:	e9 1a f7 ff ff       	jmp    d1be <dlmalloc+0xfe>
    daa4:	0f 1f 40 00          	nopl   0x0(%rax)
    daa8:	b8 01 00 00 00       	mov    $0x1,%eax
    daad:	87 05 7d d3 01 00    	xchg   %eax,0x1d37d(%rip)        # 2ae30 <malloc_global_mutex>
    dab3:	48 8d 15 76 d3 01 00 	lea    0x1d376(%rip),%rdx        # 2ae30 <malloc_global_mutex>
    daba:	be 01 00 00 00       	mov    $0x1,%esi
    dabf:	85 c0                	test   %eax,%eax
    dac1:	0f 85 11 03 00 00    	jne    ddd8 <dlmalloc+0xd18>
    dac7:	48 89 cf             	mov    %rcx,%rdi
    daca:	e8 11 eb ff ff       	call   c5e0 <sbrk>
    dacf:	31 ff                	xor    %edi,%edi
    dad1:	48 89 c3             	mov    %rax,%rbx
    dad4:	e8 07 eb ff ff       	call   c5e0 <sbrk>
    dad9:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
    dadd:	0f 95 c1             	setne  %cl
    dae0:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    dae4:	c7 05 42 d3 01 00 00 	movl   $0x0,0x1d342(%rip)        # 2ae30 <malloc_global_mutex>
    daeb:	00 00 00 
    daee:	0f 95 c2             	setne  %dl
    daf1:	84 d1                	test   %dl,%cl
    daf3:	74 9d                	je     da92 <dlmalloc+0x9d2>
    daf5:	48 39 c3             	cmp    %rax,%rbx
    daf8:	73 98                	jae    da92 <dlmalloc+0x9d2>
    dafa:	48 29 d8             	sub    %rbx,%rax
    dafd:	49 89 c7             	mov    %rax,%r15
    db00:	49 8d 44 24 50       	lea    0x50(%r12),%rax
    db05:	4c 39 f8             	cmp    %r15,%rax
    db08:	73 88                	jae    da92 <dlmalloc+0x9d2>
    db0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    db10:	48 8b 05 81 d2 01 00 	mov    0x1d281(%rip),%rax        # 2ad98 <_gm_+0x358>
    db17:	4c 01 f8             	add    %r15,%rax
    db1a:	48 39 05 7f d2 01 00 	cmp    %rax,0x1d27f(%rip)        # 2ada0 <_gm_+0x360>
    db21:	48 89 05 70 d2 01 00 	mov    %rax,0x1d270(%rip)        # 2ad98 <_gm_+0x358>
    db28:	73 07                	jae    db31 <dlmalloc+0xa71>
    db2a:	48 89 05 6f d2 01 00 	mov    %rax,0x1d26f(%rip)        # 2ada0 <_gm_+0x360>
    db31:	48 8b 35 30 cf 01 00 	mov    0x1cf30(%rip),%rsi        # 2aa68 <_gm_+0x28>
    db38:	48 8d 05 79 d2 01 00 	lea    0x1d279(%rip),%rax        # 2adb8 <_gm_+0x378>
    db3f:	48 85 f6             	test   %rsi,%rsi
    db42:	75 15                	jne    db59 <dlmalloc+0xa99>
    db44:	e9 a7 02 00 00       	jmp    ddf0 <dlmalloc+0xd30>
    db49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    db50:	48 8b 40 10          	mov    0x10(%rax),%rax
    db54:	48 85 c0             	test   %rax,%rax
    db57:	74 27                	je     db80 <dlmalloc+0xac0>
    db59:	48 8b 10             	mov    (%rax),%rdx
    db5c:	48 8b 48 08          	mov    0x8(%rax),%rcx
    db60:	48 8d 3c 0a          	lea    (%rdx,%rcx,1),%rdi
    db64:	48 39 fb             	cmp    %rdi,%rbx
    db67:	75 e7                	jne    db50 <dlmalloc+0xa90>
    db69:	f6 40 18 08          	testb  $0x8,0x18(%rax)
    db6d:	75 11                	jne    db80 <dlmalloc+0xac0>
    db6f:	48 39 d6             	cmp    %rdx,%rsi
    db72:	72 0c                	jb     db80 <dlmalloc+0xac0>
    db74:	48 39 de             	cmp    %rbx,%rsi
    db77:	0f 82 ed 09 00 00    	jb     e56a <dlmalloc+0x14aa>
    db7d:	0f 1f 00             	nopl   (%rax)
    db80:	48 3b 1d d1 ce 01 00 	cmp    0x1ced1(%rip),%rbx        # 2aa58 <_gm_+0x18>
    db87:	73 07                	jae    db90 <dlmalloc+0xad0>
    db89:	48 89 1d c8 ce 01 00 	mov    %rbx,0x1cec8(%rip)        # 2aa58 <_gm_+0x18>
    db90:	4a 8d 14 3b          	lea    (%rbx,%r15,1),%rdx
    db94:	48 8d 05 1d d2 01 00 	lea    0x1d21d(%rip),%rax        # 2adb8 <_gm_+0x378>
    db9b:	eb 10                	jmp    dbad <dlmalloc+0xaed>
    db9d:	0f 1f 00             	nopl   (%rax)
    dba0:	48 8b 40 10          	mov    0x10(%rax),%rax
    dba4:	48 85 c0             	test   %rax,%rax
    dba7:	0f 84 b3 05 00 00    	je     e160 <dlmalloc+0x10a0>
    dbad:	48 39 10             	cmp    %rdx,(%rax)
    dbb0:	75 ee                	jne    dba0 <dlmalloc+0xae0>
    dbb2:	44 8b 48 18          	mov    0x18(%rax),%r9d
    dbb6:	49 89 d8             	mov    %rbx,%r8
    dbb9:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
    dbbd:	41 83 e0 0f          	and    $0xf,%r8d
    dbc1:	41 83 e1 08          	and    $0x8,%r9d
    dbc5:	0f 84 a5 05 00 00    	je     e170 <dlmalloc+0x10b0>
    dbcb:	48 8d 05 e6 d1 01 00 	lea    0x1d1e6(%rip),%rax        # 2adb8 <_gm_+0x378>
    dbd2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    dbd8:	48 8b 10             	mov    (%rax),%rdx
    dbdb:	48 39 d6             	cmp    %rdx,%rsi
    dbde:	72 09                	jb     dbe9 <dlmalloc+0xb29>
    dbe0:	48 03 50 08          	add    0x8(%rax),%rdx
    dbe4:	48 39 d6             	cmp    %rdx,%rsi
    dbe7:	72 19                	jb     dc02 <dlmalloc+0xb42>
    dbe9:	48 8b 40 10          	mov    0x10(%rax),%rax
    dbed:	48 85 c0             	test   %rax,%rax
    dbf0:	75 e6                	jne    dbd8 <dlmalloc+0xb18>
    dbf2:	48 8b 14 25 08 00 00 	mov    0x8,%rdx
    dbf9:	00 
    dbfa:	48 03 14 25 00 00 00 	add    0x0,%rdx
    dc01:	00 
    dc02:	48 8d 42 b1          	lea    -0x4f(%rdx),%rax
    dc06:	48 c7 c1 a1 ff ff ff 	mov    $0xffffffffffffffa1,%rcx
    dc0d:	a8 0f                	test   $0xf,%al
    dc0f:	74 0a                	je     dc1b <dlmalloc+0xb5b>
    dc11:	48 f7 d8             	neg    %rax
    dc14:	83 e0 0f             	and    $0xf,%eax
    dc17:	48 8d 48 a1          	lea    -0x5f(%rax),%rcx
    dc1b:	48 01 d1             	add    %rdx,%rcx
    dc1e:	48 8d 46 20          	lea    0x20(%rsi),%rax
    dc22:	4d 8d 4f b0          	lea    -0x50(%r15),%r9
    dc26:	48 39 c1             	cmp    %rax,%rcx
    dc29:	48 0f 42 ce          	cmovb  %rsi,%rcx
    dc2d:	4c 8d 51 10          	lea    0x10(%rcx),%r10
    dc31:	4d 85 c0             	test   %r8,%r8
    dc34:	0f 84 86 02 00 00    	je     dec0 <dlmalloc+0xe00>
    dc3a:	48 f7 df             	neg    %rdi
    dc3d:	4c 89 c8             	mov    %r9,%rax
    dc40:	83 e7 0f             	and    $0xf,%edi
    dc43:	4c 8d 04 3b          	lea    (%rbx,%rdi,1),%r8
    dc47:	48 29 f8             	sub    %rdi,%rax
    dc4a:	48 89 05 ff cd 01 00 	mov    %rax,0x1cdff(%rip)        # 2aa50 <_gm_+0x10>
    dc51:	48 83 c8 01          	or     $0x1,%rax
    dc55:	f3 0f 6f 15 5b d1 01 	movdqu 0x1d15b(%rip),%xmm2        # 2adb8 <_gm_+0x378>
    dc5c:	00 
    dc5d:	4c 89 05 04 ce 01 00 	mov    %r8,0x1ce04(%rip)        # 2aa68 <_gm_+0x28>
    dc64:	49 89 40 08          	mov    %rax,0x8(%r8)
    dc68:	48 8b 05 b1 d1 01 00 	mov    0x1d1b1(%rip),%rax        # 2ae20 <mparams+0x20>
    dc6f:	4a c7 44 0b 08 50 00 	movq   $0x50,0x8(%rbx,%r9,1)
    dc76:	00 00 
    dc78:	48 89 05 f1 cd 01 00 	mov    %rax,0x1cdf1(%rip)        # 2aa70 <_gm_+0x30>
    dc7f:	48 8b 05 7a d1 01 00 	mov    0x1d17a(%rip),%rax        # 2ae00 <mparams>
    dc86:	0f 11 51 10          	movups %xmm2,0x10(%rcx)
    dc8a:	f3 0f 6f 1d 36 d1 01 	movdqu 0x1d136(%rip),%xmm3        # 2adc8 <_gm_+0x388>
    dc91:	00 
    dc92:	4c 31 e8             	xor    %r13,%rax
    dc95:	48 c7 41 08 33 00 00 	movq   $0x33,0x8(%rcx)
    dc9c:	00 
    dc9d:	48 89 41 30          	mov    %rax,0x30(%rcx)
    dca1:	48 8d 41 38          	lea    0x38(%rcx),%rax
    dca5:	48 89 c7             	mov    %rax,%rdi
    dca8:	48 8d 41 40          	lea    0x40(%rcx),%rax
    dcac:	0f 11 59 20          	movups %xmm3,0x20(%rcx)
    dcb0:	48 f7 d7             	not    %rdi
    dcb3:	48 89 1d fe d0 01 00 	mov    %rbx,0x1d0fe(%rip)        # 2adb8 <_gm_+0x378>
    dcba:	48 01 d7             	add    %rdx,%rdi
    dcbd:	4c 89 3d fc d0 01 00 	mov    %r15,0x1d0fc(%rip)        # 2adc0 <_gm_+0x380>
    dcc4:	48 c1 ef 03          	shr    $0x3,%rdi
    dcc8:	4c 89 15 f9 d0 01 00 	mov    %r10,0x1d0f9(%rip)        # 2adc8 <_gm_+0x388>
    dccf:	c7 05 f7 d0 01 00 00 	movl   $0x0,0x1d0f7(%rip)        # 2add0 <_gm_+0x390>
    dcd6:	00 00 00 
    dcd9:	83 e7 01             	and    $0x1,%edi
    dcdc:	48 c7 41 38 0b 00 00 	movq   $0xb,0x38(%rcx)
    dce3:	00 
    dce4:	48 39 d0             	cmp    %rdx,%rax
    dce7:	73 2f                	jae    dd18 <dlmalloc+0xc58>
    dce9:	48 85 ff             	test   %rdi,%rdi
    dcec:	74 12                	je     dd00 <dlmalloc+0xc40>
    dcee:	48 c7 00 0b 00 00 00 	movq   $0xb,(%rax)
    dcf5:	48 8d 41 48          	lea    0x48(%rcx),%rax
    dcf9:	48 39 d0             	cmp    %rdx,%rax
    dcfc:	73 1a                	jae    dd18 <dlmalloc+0xc58>
    dcfe:	66 90                	xchg   %ax,%ax
    dd00:	48 c7 00 0b 00 00 00 	movq   $0xb,(%rax)
    dd07:	48 83 c0 10          	add    $0x10,%rax
    dd0b:	48 c7 40 f8 0b 00 00 	movq   $0xb,-0x8(%rax)
    dd12:	00 
    dd13:	48 39 d0             	cmp    %rdx,%rax
    dd16:	72 e8                	jb     dd00 <dlmalloc+0xc40>
    dd18:	48 39 ce             	cmp    %rcx,%rsi
    dd1b:	0f 84 5f 02 00 00    	je     df80 <dlmalloc+0xec0>
    dd21:	48 89 ca             	mov    %rcx,%rdx
    dd24:	48 83 61 08 fe       	andq   $0xfffffffffffffffe,0x8(%rcx)
    dd29:	48 29 f2             	sub    %rsi,%rdx
    dd2c:	48 89 d0             	mov    %rdx,%rax
    dd2f:	48 83 c8 01          	or     $0x1,%rax
    dd33:	48 89 46 08          	mov    %rax,0x8(%rsi)
    dd37:	48 89 11             	mov    %rdx,(%rcx)
    dd3a:	48 89 d1             	mov    %rdx,%rcx
    dd3d:	48 c1 e9 03          	shr    $0x3,%rcx
    dd41:	48 81 fa ff 00 00 00 	cmp    $0xff,%rdx
    dd48:	0f 87 92 01 00 00    	ja     dee0 <dlmalloc+0xe20>
    dd4e:	8d 44 09 09          	lea    0x9(%rcx,%rcx,1),%eax
    dd52:	8b 3d e8 cc 01 00    	mov    0x1cce8(%rip),%edi        # 2aa40 <_gm_>
    dd58:	49 8d 54 c5 00       	lea    0x0(%r13,%rax,8),%rdx
    dd5d:	b8 01 00 00 00       	mov    $0x1,%eax
    dd62:	d3 e0                	shl    %cl,%eax
    dd64:	85 c7                	test   %eax,%edi
    dd66:	0f 85 a3 f9 ff ff    	jne    d70f <dlmalloc+0x64f>
    dd6c:	09 c7                	or     %eax,%edi
    dd6e:	48 89 d0             	mov    %rdx,%rax
    dd71:	89 3d c9 cc 01 00    	mov    %edi,0x1ccc9(%rip)        # 2aa40 <_gm_>
    dd77:	48 89 72 10          	mov    %rsi,0x10(%rdx)
    dd7b:	48 89 70 18          	mov    %rsi,0x18(%rax)
    dd7f:	48 89 56 18          	mov    %rdx,0x18(%rsi)
    dd83:	48 89 46 10          	mov    %rax,0x10(%rsi)
    dd87:	48 8b 05 c2 cc 01 00 	mov    0x1ccc2(%rip),%rax        # 2aa50 <_gm_+0x10>
    dd8e:	49 39 c4             	cmp    %rax,%r12
    dd91:	0f 83 fb fc ff ff    	jae    da92 <dlmalloc+0x9d2>
    dd97:	48 8b 1d ca cc 01 00 	mov    0x1ccca(%rip),%rbx        # 2aa68 <_gm_+0x28>
    dd9e:	4c 29 e0             	sub    %r12,%rax
    dda1:	4c 33 2d 58 d0 01 00 	xor    0x1d058(%rip),%r13        # 2ae00 <mparams>
    dda8:	48 89 05 a1 cc 01 00 	mov    %rax,0x1cca1(%rip)        # 2aa50 <_gm_+0x10>
    ddaf:	48 83 c8 01          	or     $0x1,%rax
    ddb3:	4a 8d 14 23          	lea    (%rbx,%r12,1),%rdx
    ddb7:	49 83 cc 03          	or     $0x3,%r12
    ddbb:	48 89 15 a6 cc 01 00 	mov    %rdx,0x1cca6(%rip)        # 2aa68 <_gm_+0x28>
    ddc2:	48 89 42 08          	mov    %rax,0x8(%rdx)
    ddc6:	4c 89 63 08          	mov    %r12,0x8(%rbx)
    ddca:	4c 89 2a             	mov    %r13,(%rdx)
    ddcd:	e9 20 f5 ff ff       	jmp    d2f2 <dlmalloc+0x232>
    ddd2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    ddd8:	8b 02                	mov    (%rdx),%eax
    ddda:	85 c0                	test   %eax,%eax
    dddc:	75 fa                	jne    ddd8 <dlmalloc+0xd18>
    ddde:	89 f0                	mov    %esi,%eax
    dde0:	87 05 4a d0 01 00    	xchg   %eax,0x1d04a(%rip)        # 2ae30 <malloc_global_mutex>
    dde6:	85 c0                	test   %eax,%eax
    dde8:	75 ee                	jne    ddd8 <dlmalloc+0xd18>
    ddea:	e9 d8 fc ff ff       	jmp    dac7 <dlmalloc+0xa07>
    ddef:	90                   	nop
    ddf0:	48 8b 05 61 cc 01 00 	mov    0x1cc61(%rip),%rax        # 2aa58 <_gm_+0x18>
    ddf7:	48 85 c0             	test   %rax,%rax
    ddfa:	74 05                	je     de01 <dlmalloc+0xd41>
    ddfc:	48 39 c3             	cmp    %rax,%rbx
    ddff:	73 07                	jae    de08 <dlmalloc+0xd48>
    de01:	48 89 1d 50 cc 01 00 	mov    %rbx,0x1cc50(%rip)        # 2aa58 <_gm_+0x18>
    de08:	48 8b 05 f1 cf 01 00 	mov    0x1cff1(%rip),%rax        # 2ae00 <mparams>
    de0f:	48 89 1d a2 cf 01 00 	mov    %rbx,0x1cfa2(%rip)        # 2adb8 <_gm_+0x378>
    de16:	4c 89 3d a3 cf 01 00 	mov    %r15,0x1cfa3(%rip)        # 2adc0 <_gm_+0x380>
    de1d:	c7 05 a9 cf 01 00 00 	movl   $0x0,0x1cfa9(%rip)        # 2add0 <_gm_+0x390>
    de24:	00 00 00 
    de27:	48 c7 05 46 cc 01 00 	movq   $0xffffffffffffffff,0x1cc46(%rip)        # 2aa78 <_gm_+0x38>
    de2e:	ff ff ff ff 
    de32:	48 89 05 47 cc 01 00 	mov    %rax,0x1cc47(%rip)        # 2aa80 <_gm_+0x40>
    de39:	48 8d 05 48 cc 01 00 	lea    0x1cc48(%rip),%rax        # 2aa88 <_gm_+0x48>
    de40:	48 8d 90 00 02 00 00 	lea    0x200(%rax),%rdx
    de47:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    de4e:	00 00 
    de50:	66 48 0f 6e c0       	movq   %rax,%xmm0
    de55:	48 83 c0 10          	add    $0x10,%rax
    de59:	66 0f 6c c0          	punpcklqdq %xmm0,%xmm0
    de5d:	0f 11 00             	movups %xmm0,(%rax)
    de60:	48 39 d0             	cmp    %rdx,%rax
    de63:	75 eb                	jne    de50 <dlmalloc+0xd90>
    de65:	49 83 ef 50          	sub    $0x50,%r15
    de69:	48 8d 53 10          	lea    0x10(%rbx),%rdx
    de6d:	f6 c3 0f             	test   $0xf,%bl
    de70:	0f 84 aa 02 00 00    	je     e120 <dlmalloc+0x1060>
    de76:	48 f7 da             	neg    %rdx
    de79:	4c 89 f8             	mov    %r15,%rax
    de7c:	83 e2 0f             	and    $0xf,%edx
    de7f:	48 8d 0c 13          	lea    (%rbx,%rdx,1),%rcx
    de83:	48 29 d0             	sub    %rdx,%rax
    de86:	48 89 c2             	mov    %rax,%rdx
    de89:	48 89 0d d8 cb 01 00 	mov    %rcx,0x1cbd8(%rip)        # 2aa68 <_gm_+0x28>
    de90:	48 83 ca 01          	or     $0x1,%rdx
    de94:	48 89 05 b5 cb 01 00 	mov    %rax,0x1cbb5(%rip)        # 2aa50 <_gm_+0x10>
    de9b:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    de9f:	48 8b 15 7a cf 01 00 	mov    0x1cf7a(%rip),%rdx        # 2ae20 <mparams+0x20>
    dea6:	4a c7 44 3b 08 50 00 	movq   $0x50,0x8(%rbx,%r15,1)
    dead:	00 00 
    deaf:	48 89 15 ba cb 01 00 	mov    %rdx,0x1cbba(%rip)        # 2aa70 <_gm_+0x30>
    deb6:	e9 d3 fe ff ff       	jmp    dd8e <dlmalloc+0xcce>
    debb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    dec0:	4c 89 c8             	mov    %r9,%rax
    dec3:	49 89 d8             	mov    %rbx,%r8
    dec6:	e9 7f fd ff ff       	jmp    dc4a <dlmalloc+0xb8a>
    decb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    ded0:	48 83 ce 03          	or     $0x3,%rsi
    ded4:	e9 b9 f5 ff ff       	jmp    d492 <dlmalloc+0x3d2>
    ded9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    dee0:	48 89 d0             	mov    %rdx,%rax
    dee3:	48 c1 e8 08          	shr    $0x8,%rax
    dee7:	89 c1                	mov    %eax,%ecx
    dee9:	85 c0                	test   %eax,%eax
    deeb:	0f 84 60 03 00 00    	je     e251 <dlmalloc+0x1191>
    def1:	3d ff ff 00 00       	cmp    $0xffff,%eax
    def6:	0f 87 ad 05 00 00    	ja     e4a9 <dlmalloc+0x13e9>
    defc:	0f bd c1             	bsr    %ecx,%eax
    deff:	b9 26 00 00 00       	mov    $0x26,%ecx
    df04:	48 89 d3             	mov    %rdx,%rbx
    df07:	bf 1f 00 00 00       	mov    $0x1f,%edi
    df0c:	83 f0 1f             	xor    $0x1f,%eax
    df0f:	29 c1                	sub    %eax,%ecx
    df11:	29 c7                	sub    %eax,%edi
    df13:	48 d3 eb             	shr    %cl,%rbx
    df16:	48 89 d9             	mov    %rbx,%rcx
    df19:	83 e1 01             	and    $0x1,%ecx
    df1c:	8d 0c 79             	lea    (%rcx,%rdi,2),%ecx
    df1f:	bf 01 00 00 00       	mov    $0x1,%edi
    df24:	44 8d 41 4b          	lea    0x4b(%rcx),%r8d
    df28:	d3 e7                	shl    %cl,%edi
    df2a:	49 c1 e0 03          	shl    $0x3,%r8
    df2e:	8b 05 10 cb 01 00    	mov    0x1cb10(%rip),%eax        # 2aa44 <_gm_+0x4>
    df34:	66 48 0f 6e ce       	movq   %rsi,%xmm1
    df39:	66 0f ef c0          	pxor   %xmm0,%xmm0
    df3d:	89 4e 38             	mov    %ecx,0x38(%rsi)
    df40:	66 0f 6c c9          	punpcklqdq %xmm1,%xmm1
    df44:	0f 11 46 20          	movups %xmm0,0x20(%rsi)
    df48:	85 f8                	test   %edi,%eax
    df4a:	0f 85 11 03 00 00    	jne    e261 <dlmalloc+0x11a1>
    df50:	09 f8                	or     %edi,%eax
    df52:	4d 01 e8             	add    %r13,%r8
    df55:	49 89 b4 cd 58 02 00 	mov    %rsi,0x258(%r13,%rcx,8)
    df5c:	00 
    df5d:	89 05 e1 ca 01 00    	mov    %eax,0x1cae1(%rip)        # 2aa44 <_gm_+0x4>
    df63:	48 8b 05 e6 ca 01 00 	mov    0x1cae6(%rip),%rax        # 2aa50 <_gm_+0x10>
    df6a:	4c 89 46 30          	mov    %r8,0x30(%rsi)
    df6e:	0f 11 4e 10          	movups %xmm1,0x10(%rsi)
    df72:	e9 17 fe ff ff       	jmp    dd8e <dlmalloc+0xcce>
    df77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    df7e:	00 00 
    df80:	48 8b 05 c9 ca 01 00 	mov    0x1cac9(%rip),%rax        # 2aa50 <_gm_+0x10>
    df87:	e9 02 fe ff ff       	jmp    dd8e <dlmalloc+0xcce>
    df8c:	0f 1f 40 00          	nopl   0x0(%rax)
    df90:	b8 01 00 00 00       	mov    $0x1,%eax
    df95:	87 05 95 ce 01 00    	xchg   %eax,0x1ce95(%rip)        # 2ae30 <malloc_global_mutex>
    df9b:	85 c0                	test   %eax,%eax
    df9d:	0f 85 76 fa ff ff    	jne    da19 <dlmalloc+0x959>
    dfa3:	31 ff                	xor    %edi,%edi
    dfa5:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    dfaa:	e8 31 e6 ff ff       	call   c5e0 <sbrk>
    dfaf:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    dfb4:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    dfb8:	49 89 c6             	mov    %rax,%r14
    dfbb:	0f 84 b8 fa ff ff    	je     da79 <dlmalloc+0x9b9>
    dfc1:	48 8b 15 40 ce 01 00 	mov    0x1ce40(%rip),%rdx        # 2ae08 <mparams+0x8>
    dfc8:	49 89 cf             	mov    %rcx,%r15
    dfcb:	48 8d 42 ff          	lea    -0x1(%rdx),%rax
    dfcf:	49 85 c6             	test   %rax,%r14
    dfd2:	74 0f                	je     dfe3 <dlmalloc+0xf23>
    dfd4:	4c 01 f0             	add    %r14,%rax
    dfd7:	48 f7 da             	neg    %rdx
    dfda:	4d 29 f7             	sub    %r14,%r15
    dfdd:	48 21 d0             	and    %rdx,%rax
    dfe0:	49 01 c7             	add    %rax,%r15
    dfe3:	48 8b 05 ae cd 01 00 	mov    0x1cdae(%rip),%rax        # 2ad98 <_gm_+0x358>
    dfea:	4d 39 fc             	cmp    %r15,%r12
    dfed:	0f 83 86 fa ff ff    	jae    da79 <dlmalloc+0x9b9>
    dff3:	48 ba fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rdx
    dffa:	ff ff 7f 
    dffd:	4c 39 fa             	cmp    %r15,%rdx
    e000:	0f 82 73 fa ff ff    	jb     da79 <dlmalloc+0x9b9>
    e006:	48 8b 15 9b cd 01 00 	mov    0x1cd9b(%rip),%rdx        # 2ada8 <_gm_+0x368>
    e00d:	48 85 d2             	test   %rdx,%rdx
    e010:	74 16                	je     e028 <dlmalloc+0xf68>
    e012:	4a 8d 34 38          	lea    (%rax,%r15,1),%rsi
    e016:	48 39 f0             	cmp    %rsi,%rax
    e019:	0f 83 5a fa ff ff    	jae    da79 <dlmalloc+0x9b9>
    e01f:	48 39 f2             	cmp    %rsi,%rdx
    e022:	0f 82 51 fa ff ff    	jb     da79 <dlmalloc+0x9b9>
    e028:	4c 89 ff             	mov    %r15,%rdi
    e02b:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    e030:	e8 ab e5 ff ff       	call   c5e0 <sbrk>
    e035:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    e03a:	49 39 c6             	cmp    %rax,%r14
    e03d:	48 89 c3             	mov    %rax,%rbx
    e040:	74 3c                	je     e07e <dlmalloc+0xfbe>
    e042:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
    e046:	0f 84 2d fa ff ff    	je     da79 <dlmalloc+0x9b9>
    e04c:	49 8d 44 24 60       	lea    0x60(%r12),%rax
    e051:	49 39 c7             	cmp    %rax,%r15
    e054:	73 28                	jae    e07e <dlmalloc+0xfbe>
    e056:	48 8b 05 b3 cd 01 00 	mov    0x1cdb3(%rip),%rax        # 2ae10 <mparams+0x10>
    e05d:	4d 8d 74 04 5f       	lea    0x5f(%r12,%rax,1),%r14
    e062:	48 f7 d8             	neg    %rax
    e065:	4d 29 fe             	sub    %r15,%r14
    e068:	49 21 c6             	and    %rax,%r14
    e06b:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
    e072:	ff ff 7f 
    e075:	4c 39 f0             	cmp    %r14,%rax
    e078:	0f 83 91 08 00 00    	jae    e90f <dlmalloc+0x184f>
    e07e:	c7 05 a8 cd 01 00 00 	movl   $0x0,0x1cda8(%rip)        # 2ae30 <malloc_global_mutex>
    e085:	00 00 00 
    e088:	e9 83 fa ff ff       	jmp    db10 <dlmalloc+0xa50>
    e08d:	0f 1f 00             	nopl   (%rax)
    e090:	44 0f bd d0          	bsr    %eax,%r10d
    e094:	b9 26 00 00 00       	mov    $0x26,%ecx
    e099:	4c 89 e0             	mov    %r12,%rax
    e09c:	ba 1f 00 00 00       	mov    $0x1f,%edx
    e0a1:	41 83 f2 1f          	xor    $0x1f,%r10d
    e0a5:	44 29 d1             	sub    %r10d,%ecx
    e0a8:	44 29 d2             	sub    %r10d,%edx
    e0ab:	48 d3 e8             	shr    %cl,%rax
    e0ae:	83 e0 01             	and    $0x1,%eax
    e0b1:	8d 04 50             	lea    (%rax,%rdx,2),%eax
    e0b4:	49 8b 94 c5 58 02 00 	mov    0x258(%r13,%rax,8),%rdx
    e0bb:	00 
    e0bc:	49 89 c2             	mov    %rax,%r10
    e0bf:	48 85 d2             	test   %rdx,%rdx
    e0c2:	0f 84 72 f8 ff ff    	je     d93a <dlmalloc+0x87a>
    e0c8:	83 f8 1f             	cmp    $0x1f,%eax
    e0cb:	0f 84 d4 09 00 00    	je     eaa5 <dlmalloc+0x19e5>
    e0d1:	d1 e8                	shr    %eax
    e0d3:	b9 39 00 00 00       	mov    $0x39,%ecx
    e0d8:	29 c1                	sub    %eax,%ecx
    e0da:	e9 13 f4 ff ff       	jmp    d4f2 <dlmalloc+0x432>
    e0df:	48 89 d3             	mov    %rdx,%rbx
    e0e2:	31 ff                	xor    %edi,%edi
    e0e4:	48 89 d1             	mov    %rdx,%rcx
    e0e7:	e9 77 f4 ff ff       	jmp    d563 <dlmalloc+0x4a3>
    e0ec:	4c 89 ff             	mov    %r15,%rdi
    e0ef:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    e0f4:	e8 e7 e4 ff ff       	call   c5e0 <sbrk>
    e0f9:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    e0fe:	48 89 c3             	mov    %rax,%rbx
    e101:	49 8b 46 08          	mov    0x8(%r14),%rax
    e105:	49 03 06             	add    (%r14),%rax
    e108:	48 39 c3             	cmp    %rax,%rbx
    e10b:	0f 85 31 ff ff ff    	jne    e042 <dlmalloc+0xf82>
    e111:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
    e115:	0f 85 63 ff ff ff    	jne    e07e <dlmalloc+0xfbe>
    e11b:	e9 59 f9 ff ff       	jmp    da79 <dlmalloc+0x9b9>
    e120:	4c 89 f8             	mov    %r15,%rax
    e123:	48 89 d9             	mov    %rbx,%rcx
    e126:	e9 5b fd ff ff       	jmp    de86 <dlmalloc+0xdc6>
    e12b:	83 c9 03             	or     $0x3,%ecx
    e12e:	89 ce                	mov    %ecx,%esi
    e130:	48 89 73 08          	mov    %rsi,0x8(%rbx)
    e134:	48 89 38             	mov    %rdi,(%rax)
    e137:	48 83 48 08 01       	orq    $0x1,0x8(%rax)
    e13c:	e9 b1 f1 ff ff       	jmp    d2f2 <dlmalloc+0x232>
    e141:	b8 01 00 00 00       	mov    $0x1,%eax
    e146:	87 05 e4 cc 01 00    	xchg   %eax,0x1cce4(%rip)        # 2ae30 <malloc_global_mutex>
    e14c:	85 c0                	test   %eax,%eax
    e14e:	0f 84 f7 f8 ff ff    	je     da4b <dlmalloc+0x98b>
    e154:	e9 c3 f8 ff ff       	jmp    da1c <dlmalloc+0x95c>
    e159:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    e160:	49 89 d8             	mov    %rbx,%r8
    e163:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
    e167:	41 83 e0 0f          	and    $0xf,%r8d
    e16b:	e9 5b fa ff ff       	jmp    dbcb <dlmalloc+0xb0b>
    e170:	4c 01 78 08          	add    %r15,0x8(%rax)
    e174:	49 89 d2             	mov    %rdx,%r10
    e177:	48 89 18             	mov    %rbx,(%rax)
    e17a:	4d 85 c0             	test   %r8,%r8
    e17d:	74 09                	je     e188 <dlmalloc+0x10c8>
    e17f:	48 f7 df             	neg    %rdi
    e182:	83 e7 0f             	and    $0xf,%edi
    e185:	48 01 fb             	add    %rdi,%rbx
    e188:	48 8d 42 10          	lea    0x10(%rdx),%rax
    e18c:	f6 c2 0f             	test   $0xf,%dl
    e18f:	74 0a                	je     e19b <dlmalloc+0x10db>
    e191:	48 f7 d8             	neg    %rax
    e194:	83 e0 0f             	and    $0xf,%eax
    e197:	4c 8d 14 02          	lea    (%rdx,%rax,1),%r10
    e19b:	48 8b 0d 5e cc 01 00 	mov    0x1cc5e(%rip),%rcx        # 2ae00 <mparams>
    e1a2:	4c 89 d0             	mov    %r10,%rax
    e1a5:	4a 8d 14 23          	lea    (%rbx,%r12,1),%rdx
    e1a9:	48 29 d8             	sub    %rbx,%rax
    e1ac:	4c 29 e0             	sub    %r12,%rax
    e1af:	4c 31 e9             	xor    %r13,%rcx
    e1b2:	49 83 cc 03          	or     $0x3,%r12
    e1b6:	4c 89 63 08          	mov    %r12,0x8(%rbx)
    e1ba:	48 89 0a             	mov    %rcx,(%rdx)
    e1bd:	4c 39 d6             	cmp    %r10,%rsi
    e1c0:	0f 84 38 04 00 00    	je     e5fe <dlmalloc+0x153e>
    e1c6:	4c 39 15 93 c8 01 00 	cmp    %r10,0x1c893(%rip)        # 2aa60 <_gm_+0x20>
    e1cd:	0f 84 49 05 00 00    	je     e71c <dlmalloc+0x165c>
    e1d3:	49 8b 72 08          	mov    0x8(%r10),%rsi
    e1d7:	4c 89 d1             	mov    %r10,%rcx
    e1da:	48 89 f7             	mov    %rsi,%rdi
    e1dd:	83 e7 03             	and    $0x3,%edi
    e1e0:	48 83 ff 01          	cmp    $0x1,%rdi
    e1e4:	0f 84 a2 05 00 00    	je     e78c <dlmalloc+0x16cc>
    e1ea:	48 83 e6 fe          	and    $0xfffffffffffffffe,%rsi
    e1ee:	49 89 72 08          	mov    %rsi,0x8(%r10)
    e1f2:	48 89 c6             	mov    %rax,%rsi
    e1f5:	48 83 ce 01          	or     $0x1,%rsi
    e1f9:	48 89 72 08          	mov    %rsi,0x8(%rdx)
    e1fd:	48 89 01             	mov    %rax,(%rcx)
    e200:	48 89 c1             	mov    %rax,%rcx
    e203:	48 c1 e9 03          	shr    $0x3,%rcx
    e207:	48 3d ff 00 00 00    	cmp    $0xff,%rax
    e20d:	0f 87 42 04 00 00    	ja     e655 <dlmalloc+0x1595>
    e213:	bf 01 00 00 00       	mov    $0x1,%edi
    e218:	8b 35 22 c8 01 00    	mov    0x1c822(%rip),%esi        # 2aa40 <_gm_>
    e21e:	8d 44 09 09          	lea    0x9(%rcx,%rcx,1),%eax
    e222:	d3 e7                	shl    %cl,%edi
    e224:	49 8d 44 c5 00       	lea    0x0(%r13,%rax,8),%rax
    e229:	85 fe                	test   %edi,%esi
    e22b:	0f 85 08 06 00 00    	jne    e839 <dlmalloc+0x1779>
    e231:	09 fe                	or     %edi,%esi
    e233:	48 89 c1             	mov    %rax,%rcx
    e236:	89 35 04 c8 01 00    	mov    %esi,0x1c804(%rip)        # 2aa40 <_gm_>
    e23c:	48 89 50 10          	mov    %rdx,0x10(%rax)
    e240:	48 89 51 18          	mov    %rdx,0x18(%rcx)
    e244:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
    e248:	48 89 42 18          	mov    %rax,0x18(%rdx)
    e24c:	e9 a1 f0 ff ff       	jmp    d2f2 <dlmalloc+0x232>
    e251:	bf 01 00 00 00       	mov    $0x1,%edi
    e256:	41 b8 58 02 00 00    	mov    $0x258,%r8d
    e25c:	e9 cd fc ff ff       	jmp    df2e <dlmalloc+0xe6e>
    e261:	89 c8                	mov    %ecx,%eax
    e263:	49 89 d0             	mov    %rdx,%r8
    e266:	49 8b bc c5 58 02 00 	mov    0x258(%r13,%rax,8),%rdi
    e26d:	00 
    e26e:	83 f9 1f             	cmp    $0x1f,%ecx
    e271:	74 33                	je     e2a6 <dlmalloc+0x11e6>
    e273:	89 c8                	mov    %ecx,%eax
    e275:	b9 39 00 00 00       	mov    $0x39,%ecx
    e27a:	d1 e8                	shr    %eax
    e27c:	29 c1                	sub    %eax,%ecx
    e27e:	49 d3 e0             	shl    %cl,%r8
    e281:	eb 23                	jmp    e2a6 <dlmalloc+0x11e6>
    e283:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    e288:	4c 89 c0             	mov    %r8,%rax
    e28b:	4d 01 c0             	add    %r8,%r8
    e28e:	48 c1 e8 3f          	shr    $0x3f,%rax
    e292:	48 83 c0 04          	add    $0x4,%rax
    e296:	48 8b 0c c7          	mov    (%rdi,%rax,8),%rcx
    e29a:	48 85 c9             	test   %rcx,%rcx
    e29d:	0f 84 1b 02 00 00    	je     e4be <dlmalloc+0x13fe>
    e2a3:	48 89 cf             	mov    %rcx,%rdi
    e2a6:	48 8b 47 08          	mov    0x8(%rdi),%rax
    e2aa:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    e2ae:	48 39 c2             	cmp    %rax,%rdx
    e2b1:	75 d5                	jne    e288 <dlmalloc+0x11c8>
    e2b3:	48 8b 47 10          	mov    0x10(%rdi),%rax
    e2b7:	48 8b 15 9a c7 01 00 	mov    0x1c79a(%rip),%rdx        # 2aa58 <_gm_+0x18>
    e2be:	66 48 0f 6e e7       	movq   %rdi,%xmm4
    e2c3:	66 48 0f 6e c0       	movq   %rax,%xmm0
    e2c8:	66 0f 6c c4          	punpcklqdq %xmm4,%xmm0
    e2cc:	48 39 d7             	cmp    %rdx,%rdi
    e2cf:	0f 82 4b f4 ff ff    	jb     d720 <dlmalloc+0x660>
    e2d5:	48 39 d0             	cmp    %rdx,%rax
    e2d8:	0f 82 42 f4 ff ff    	jb     d720 <dlmalloc+0x660>
    e2de:	48 89 70 18          	mov    %rsi,0x18(%rax)
    e2e2:	48 8b 05 67 c7 01 00 	mov    0x1c767(%rip),%rax        # 2aa50 <_gm_+0x10>
    e2e9:	48 89 77 10          	mov    %rsi,0x10(%rdi)
    e2ed:	48 c7 46 30 00 00 00 	movq   $0x0,0x30(%rsi)
    e2f4:	00 
    e2f5:	0f 11 46 10          	movups %xmm0,0x10(%rsi)
    e2f9:	e9 90 fa ff ff       	jmp    dd8e <dlmalloc+0xcce>
    e2fe:	48 8b 43 28          	mov    0x28(%rbx),%rax
    e302:	48 8d 53 28          	lea    0x28(%rbx),%rdx
    e306:	48 85 c0             	test   %rax,%rax
    e309:	0f 84 11 03 00 00    	je     e620 <dlmalloc+0x1560>
    e30f:	90                   	nop
    e310:	48 89 d6             	mov    %rdx,%rsi
    e313:	48 89 c1             	mov    %rax,%rcx
    e316:	48 8d 50 28          	lea    0x28(%rax),%rdx
    e31a:	48 8b 40 28          	mov    0x28(%rax),%rax
    e31e:	48 85 c0             	test   %rax,%rax
    e321:	75 ed                	jne    e310 <dlmalloc+0x1250>
    e323:	48 8b 41 20          	mov    0x20(%rcx),%rax
    e327:	48 8d 51 20          	lea    0x20(%rcx),%rdx
    e32b:	48 85 c0             	test   %rax,%rax
    e32e:	75 e0                	jne    e310 <dlmalloc+0x1250>
    e330:	4c 39 de             	cmp    %r11,%rsi
    e333:	0f 82 e7 f3 ff ff    	jb     d720 <dlmalloc+0x660>
    e339:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
    e340:	4d 85 ff             	test   %r15,%r15
    e343:	0f 84 27 f3 ff ff    	je     d670 <dlmalloc+0x5b0>
    e349:	41 8b 46 38          	mov    0x38(%r14),%eax
    e34d:	48 8d 50 4a          	lea    0x4a(%rax),%rdx
    e351:	4d 3b b4 c5 58 02 00 	cmp    0x258(%r13,%rax,8),%r14
    e358:	00 
    e359:	0f 84 9e 04 00 00    	je     e7fd <dlmalloc+0x173d>
    e35f:	4d 39 df             	cmp    %r11,%r15
    e362:	0f 82 b8 f3 ff ff    	jb     d720 <dlmalloc+0x660>
    e368:	49 3b 5f 20          	cmp    0x20(%r15),%rbx
    e36c:	0f 84 cb 05 00 00    	je     e93d <dlmalloc+0x187d>
    e372:	49 89 4f 28          	mov    %rcx,0x28(%r15)
    e376:	49 89 ce             	mov    %rcx,%r14
    e379:	e9 b1 f2 ff ff       	jmp    d62f <dlmalloc+0x56f>
    e37e:	49 8d 04 3c          	lea    (%r12,%rdi,1),%rax
    e382:	48 89 c1             	mov    %rax,%rcx
    e385:	48 01 d8             	add    %rbx,%rax
    e388:	48 83 c9 03          	or     $0x3,%rcx
    e38c:	48 89 4b 08          	mov    %rcx,0x8(%rbx)
    e390:	48 83 48 08 01       	orq    $0x1,0x8(%rax)
    e395:	48 89 10             	mov    %rdx,(%rax)
    e398:	e9 4f f3 ff ff       	jmp    d6ec <dlmalloc+0x62c>
    e39d:	48 89 fa             	mov    %rdi,%rdx
    e3a0:	48 c1 ea 08          	shr    $0x8,%rdx
    e3a4:	89 d0                	mov    %edx,%eax
    e3a6:	85 d2                	test   %edx,%edx
    e3a8:	0f 84 20 02 00 00    	je     e5ce <dlmalloc+0x150e>
    e3ae:	81 fa ff ff 00 00    	cmp    $0xffff,%edx
    e3b4:	0f 87 be 03 00 00    	ja     e778 <dlmalloc+0x16b8>
    e3ba:	0f bd c0             	bsr    %eax,%eax
    e3bd:	b9 26 00 00 00       	mov    $0x26,%ecx
    e3c2:	48 89 fa             	mov    %rdi,%rdx
    e3c5:	83 f0 1f             	xor    $0x1f,%eax
    e3c8:	29 c1                	sub    %eax,%ecx
    e3ca:	48 d3 ea             	shr    %cl,%rdx
    e3cd:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    e3d2:	83 e2 01             	and    $0x1,%edx
    e3d5:	29 c1                	sub    %eax,%ecx
    e3d7:	8d 04 4a             	lea    (%rdx,%rcx,2),%eax
    e3da:	ba 01 00 00 00       	mov    $0x1,%edx
    e3df:	89 c1                	mov    %eax,%ecx
    e3e1:	8d 70 4b             	lea    0x4b(%rax),%esi
    e3e4:	d3 e2                	shl    %cl,%edx
    e3e6:	48 c1 e6 03          	shl    $0x3,%rsi
    e3ea:	89 d1                	mov    %edx,%ecx
    e3ec:	8b 15 52 c6 01 00    	mov    0x1c652(%rip),%edx        # 2aa44 <_gm_+0x4>
    e3f2:	66 49 0f 6e ca       	movq   %r10,%xmm1
    e3f7:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e3fb:	41 89 42 38          	mov    %eax,0x38(%r10)
    e3ff:	66 0f 6c c9          	punpcklqdq %xmm1,%xmm1
    e403:	41 0f 11 42 20       	movups %xmm0,0x20(%r10)
    e408:	85 ca                	test   %ecx,%edx
    e40a:	0f 84 db 02 00 00    	je     e6eb <dlmalloc+0x162b>
    e410:	89 c2                	mov    %eax,%edx
    e412:	48 89 fe             	mov    %rdi,%rsi
    e415:	49 8b 94 d5 58 02 00 	mov    0x258(%r13,%rdx,8),%rdx
    e41c:	00 
    e41d:	83 f8 1f             	cmp    $0x1f,%eax
    e420:	74 2c                	je     e44e <dlmalloc+0x138e>
    e422:	d1 e8                	shr    %eax
    e424:	b9 39 00 00 00       	mov    $0x39,%ecx
    e429:	29 c1                	sub    %eax,%ecx
    e42b:	48 d3 e6             	shl    %cl,%rsi
    e42e:	eb 1e                	jmp    e44e <dlmalloc+0x138e>
    e430:	48 89 f0             	mov    %rsi,%rax
    e433:	48 01 f6             	add    %rsi,%rsi
    e436:	48 c1 e8 3f          	shr    $0x3f,%rax
    e43a:	48 83 c0 04          	add    $0x4,%rax
    e43e:	48 8b 0c c2          	mov    (%rdx,%rax,8),%rcx
    e442:	48 85 c9             	test   %rcx,%rcx
    e445:	0f 84 fa 02 00 00    	je     e745 <dlmalloc+0x1685>
    e44b:	48 89 ca             	mov    %rcx,%rdx
    e44e:	48 8b 42 08          	mov    0x8(%rdx),%rax
    e452:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    e456:	48 39 f8             	cmp    %rdi,%rax
    e459:	75 d5                	jne    e430 <dlmalloc+0x1370>
    e45b:	48 8b 42 10          	mov    0x10(%rdx),%rax
    e45f:	66 48 0f 6e ea       	movq   %rdx,%xmm5
    e464:	66 48 0f 6e c0       	movq   %rax,%xmm0
    e469:	66 0f 6c c5          	punpcklqdq %xmm5,%xmm0
    e46d:	4c 39 da             	cmp    %r11,%rdx
    e470:	0f 82 aa f2 ff ff    	jb     d720 <dlmalloc+0x660>
    e476:	4c 39 d8             	cmp    %r11,%rax
    e479:	0f 82 a1 f2 ff ff    	jb     d720 <dlmalloc+0x660>
    e47f:	4c 89 50 18          	mov    %r10,0x18(%rax)
    e483:	4c 89 52 10          	mov    %r10,0x10(%rdx)
    e487:	49 c7 42 30 00 00 00 	movq   $0x0,0x30(%r10)
    e48e:	00 
    e48f:	41 0f 11 42 10       	movups %xmm0,0x10(%r10)
    e494:	e9 53 f2 ff ff       	jmp    d6ec <dlmalloc+0x62c>
    e499:	09 fe                	or     %edi,%esi
    e49b:	4c 89 c1             	mov    %r8,%rcx
    e49e:	89 35 9c c5 01 00    	mov    %esi,0x1c59c(%rip)        # 2aa40 <_gm_>
    e4a4:	e9 58 ef ff ff       	jmp    d401 <dlmalloc+0x341>
    e4a9:	bf 00 00 00 80       	mov    $0x80000000,%edi
    e4ae:	41 b8 50 03 00 00    	mov    $0x350,%r8d
    e4b4:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    e4b9:	e9 70 fa ff ff       	jmp    df2e <dlmalloc+0xe6e>
    e4be:	48 8d 14 c7          	lea    (%rdi,%rax,8),%rdx
    e4c2:	48 3b 15 8f c5 01 00 	cmp    0x1c58f(%rip),%rdx        # 2aa58 <_gm_+0x18>
    e4c9:	0f 82 51 f2 ff ff    	jb     d720 <dlmalloc+0x660>
    e4cf:	48 89 34 c7          	mov    %rsi,(%rdi,%rax,8)
    e4d3:	48 8b 05 76 c5 01 00 	mov    0x1c576(%rip),%rax        # 2aa50 <_gm_+0x10>
    e4da:	48 89 7e 30          	mov    %rdi,0x30(%rsi)
    e4de:	0f 11 4e 10          	movups %xmm1,0x10(%rsi)
    e4e2:	e9 a7 f8 ff ff       	jmp    dd8e <dlmalloc+0xcce>
    e4e7:	48 8b 43 28          	mov    0x28(%rbx),%rax
    e4eb:	48 8d 4b 28          	lea    0x28(%rbx),%rcx
    e4ef:	48 85 c0             	test   %rax,%rax
    e4f2:	0f 84 f8 03 00 00    	je     e8f0 <dlmalloc+0x1830>
    e4f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    e4ff:	00 
    e500:	49 89 c9             	mov    %rcx,%r9
    e503:	49 89 c0             	mov    %rax,%r8
    e506:	48 8d 48 28          	lea    0x28(%rax),%rcx
    e50a:	48 8b 40 28          	mov    0x28(%rax),%rax
    e50e:	48 85 c0             	test   %rax,%rax
    e511:	75 ed                	jne    e500 <dlmalloc+0x1440>
    e513:	49 8b 40 20          	mov    0x20(%r8),%rax
    e517:	49 8d 48 20          	lea    0x20(%r8),%rcx
    e51b:	48 85 c0             	test   %rax,%rax
    e51e:	75 e0                	jne    e500 <dlmalloc+0x1440>
    e520:	4d 39 d9             	cmp    %r11,%r9
    e523:	0f 82 f7 f1 ff ff    	jb     d720 <dlmalloc+0x660>
    e529:	49 c7 01 00 00 00 00 	movq   $0x0,(%r9)
    e530:	4d 85 f6             	test   %r14,%r14
    e533:	0f 84 17 f3 ff ff    	je     d850 <dlmalloc+0x790>
    e539:	8b 43 38             	mov    0x38(%rbx),%eax
    e53c:	48 8d 48 4a          	lea    0x4a(%rax),%rcx
    e540:	49 3b 9c c5 58 02 00 	cmp    0x258(%r13,%rax,8),%rbx
    e547:	00 
    e548:	0f 84 0e 05 00 00    	je     ea5c <dlmalloc+0x199c>
    e54e:	4d 39 de             	cmp    %r11,%r14
    e551:	0f 82 c9 f1 ff ff    	jb     d720 <dlmalloc+0x660>
    e557:	49 3b 5e 20          	cmp    0x20(%r14),%rbx
    e55b:	0f 84 3b 05 00 00    	je     ea9c <dlmalloc+0x19dc>
    e561:	4d 89 46 28          	mov    %r8,0x28(%r14)
    e565:	e9 a5 f2 ff ff       	jmp    d80f <dlmalloc+0x74f>
    e56a:	4c 01 f9             	add    %r15,%rcx
    e56d:	4c 03 3d dc c4 01 00 	add    0x1c4dc(%rip),%r15        # 2aa50 <_gm_+0x10>
    e574:	48 89 48 08          	mov    %rcx,0x8(%rax)
    e578:	48 8d 46 10          	lea    0x10(%rsi),%rax
    e57c:	40 f6 c6 0f          	test   $0xf,%sil
    e580:	0f 84 e7 01 00 00    	je     e76d <dlmalloc+0x16ad>
    e586:	48 f7 d8             	neg    %rax
    e589:	83 e0 0f             	and    $0xf,%eax
    e58c:	48 89 c2             	mov    %rax,%rdx
    e58f:	48 8d 0c 06          	lea    (%rsi,%rax,1),%rcx
    e593:	4c 89 f8             	mov    %r15,%rax
    e596:	48 29 d0             	sub    %rdx,%rax
    e599:	48 89 c2             	mov    %rax,%rdx
    e59c:	48 89 0d c5 c4 01 00 	mov    %rcx,0x1c4c5(%rip)        # 2aa68 <_gm_+0x28>
    e5a3:	48 83 ca 01          	or     $0x1,%rdx
    e5a7:	48 89 05 a2 c4 01 00 	mov    %rax,0x1c4a2(%rip)        # 2aa50 <_gm_+0x10>
    e5ae:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    e5b2:	48 8b 15 67 c8 01 00 	mov    0x1c867(%rip),%rdx        # 2ae20 <mparams+0x20>
    e5b9:	4a c7 44 3e 08 50 00 	movq   $0x50,0x8(%rsi,%r15,1)
    e5c0:	00 00 
    e5c2:	48 89 15 a7 c4 01 00 	mov    %rdx,0x1c4a7(%rip)        # 2aa70 <_gm_+0x30>
    e5c9:	e9 c0 f7 ff ff       	jmp    dd8e <dlmalloc+0xcce>
    e5ce:	b9 01 00 00 00       	mov    $0x1,%ecx
    e5d3:	be 58 02 00 00       	mov    $0x258,%esi
    e5d8:	e9 0f fe ff ff       	jmp    e3ec <dlmalloc+0x132c>
    e5dd:	4d 89 b4 d5 58 02 00 	mov    %r14,0x258(%r13,%rdx,8)
    e5e4:	00 
    e5e5:	4d 85 f6             	test   %r14,%r14
    e5e8:	0f 85 41 f0 ff ff    	jne    d62f <dlmalloc+0x56f>
    e5ee:	41 0f b3 c1          	btr    %eax,%r9d
    e5f2:	44 89 0d 4b c4 01 00 	mov    %r9d,0x1c44b(%rip)        # 2aa44 <_gm_+0x4>
    e5f9:	e9 72 f0 ff ff       	jmp    d670 <dlmalloc+0x5b0>
    e5fe:	48 03 05 4b c4 01 00 	add    0x1c44b(%rip),%rax        # 2aa50 <_gm_+0x10>
    e605:	48 89 15 5c c4 01 00 	mov    %rdx,0x1c45c(%rip)        # 2aa68 <_gm_+0x28>
    e60c:	48 89 05 3d c4 01 00 	mov    %rax,0x1c43d(%rip)        # 2aa50 <_gm_+0x10>
    e613:	48 83 c8 01          	or     $0x1,%rax
    e617:	48 89 42 08          	mov    %rax,0x8(%rdx)
    e61b:	e9 d2 ec ff ff       	jmp    d2f2 <dlmalloc+0x232>
    e620:	48 8b 43 20          	mov    0x20(%rbx),%rax
    e624:	48 85 c0             	test   %rax,%rax
    e627:	0f 84 f0 03 00 00    	je     ea1d <dlmalloc+0x195d>
    e62d:	48 8d 53 20          	lea    0x20(%rbx),%rdx
    e631:	e9 da fc ff ff       	jmp    e310 <dlmalloc+0x1250>
    e636:	49 8d 14 3c          	lea    (%r12,%rdi,1),%rdx
    e63a:	48 89 d1             	mov    %rdx,%rcx
    e63d:	48 01 da             	add    %rbx,%rdx
    e640:	48 83 c9 03          	or     $0x3,%rcx
    e644:	48 89 4b 08          	mov    %rcx,0x8(%rbx)
    e648:	48 83 4a 08 01       	orq    $0x1,0x8(%rdx)
    e64d:	48 89 02             	mov    %rax,(%rdx)
    e650:	e9 85 f2 ff ff       	jmp    d8da <dlmalloc+0x81a>
    e655:	48 89 c6             	mov    %rax,%rsi
    e658:	48 c1 ee 08          	shr    $0x8,%rsi
    e65c:	89 f1                	mov    %esi,%ecx
    e65e:	85 f6                	test   %esi,%esi
    e660:	0f 84 7b 02 00 00    	je     e8e1 <dlmalloc+0x1821>
    e666:	81 fe ff ff 00 00    	cmp    $0xffff,%esi
    e66c:	0f 87 16 04 00 00    	ja     ea88 <dlmalloc+0x19c8>
    e672:	0f bd c9             	bsr    %ecx,%ecx
    e675:	48 89 c7             	mov    %rax,%rdi
    e678:	89 ce                	mov    %ecx,%esi
    e67a:	b9 26 00 00 00       	mov    $0x26,%ecx
    e67f:	83 f6 1f             	xor    $0x1f,%esi
    e682:	29 f1                	sub    %esi,%ecx
    e684:	48 d3 ef             	shr    %cl,%rdi
    e687:	48 89 f9             	mov    %rdi,%rcx
    e68a:	bf 1f 00 00 00       	mov    $0x1f,%edi
    e68f:	29 f7                	sub    %esi,%edi
    e691:	83 e1 01             	and    $0x1,%ecx
    e694:	8d 0c 79             	lea    (%rcx,%rdi,2),%ecx
    e697:	bf 01 00 00 00       	mov    $0x1,%edi
    e69c:	8d 71 4b             	lea    0x4b(%rcx),%esi
    e69f:	d3 e7                	shl    %cl,%edi
    e6a1:	48 c1 e6 03          	shl    $0x3,%rsi
    e6a5:	44 8b 05 98 c3 01 00 	mov    0x1c398(%rip),%r8d        # 2aa44 <_gm_+0x4>
    e6ac:	66 48 0f 6e c2       	movq   %rdx,%xmm0
    e6b1:	66 0f ef c9          	pxor   %xmm1,%xmm1
    e6b5:	89 4a 38             	mov    %ecx,0x38(%rdx)
    e6b8:	66 0f 6c c0          	punpcklqdq %xmm0,%xmm0
    e6bc:	0f 11 4a 20          	movups %xmm1,0x20(%rdx)
    e6c0:	41 85 f8             	test   %edi,%r8d
    e6c3:	0f 85 86 01 00 00    	jne    e84f <dlmalloc+0x178f>
    e6c9:	41 09 f8             	or     %edi,%r8d
    e6cc:	4c 01 ee             	add    %r13,%rsi
    e6cf:	49 89 94 cd 58 02 00 	mov    %rdx,0x258(%r13,%rcx,8)
    e6d6:	00 
    e6d7:	44 89 05 66 c3 01 00 	mov    %r8d,0x1c366(%rip)        # 2aa44 <_gm_+0x4>
    e6de:	48 89 72 30          	mov    %rsi,0x30(%rdx)
    e6e2:	0f 11 42 10          	movups %xmm0,0x10(%rdx)
    e6e6:	e9 07 ec ff ff       	jmp    d2f2 <dlmalloc+0x232>
    e6eb:	09 ca                	or     %ecx,%edx
    e6ed:	4c 01 ee             	add    %r13,%rsi
    e6f0:	4d 89 94 c5 58 02 00 	mov    %r10,0x258(%r13,%rax,8)
    e6f7:	00 
    e6f8:	89 15 46 c3 01 00    	mov    %edx,0x1c346(%rip)        # 2aa44 <_gm_+0x4>
    e6fe:	49 89 72 30          	mov    %rsi,0x30(%r10)
    e702:	41 0f 11 4a 10       	movups %xmm1,0x10(%r10)
    e707:	e9 e0 ef ff ff       	jmp    d6ec <dlmalloc+0x62c>
    e70c:	09 c6                	or     %eax,%esi
    e70e:	48 89 d0             	mov    %rdx,%rax
    e711:	89 35 29 c3 01 00    	mov    %esi,0x1c329(%rip)        # 2aa40 <_gm_>
    e717:	e9 c0 ef ff ff       	jmp    d6dc <dlmalloc+0x61c>
    e71c:	48 03 05 25 c3 01 00 	add    0x1c325(%rip),%rax        # 2aa48 <_gm_+0x8>
    e723:	48 89 15 36 c3 01 00 	mov    %rdx,0x1c336(%rip)        # 2aa60 <_gm_+0x20>
    e72a:	48 89 c1             	mov    %rax,%rcx
    e72d:	48 89 05 14 c3 01 00 	mov    %rax,0x1c314(%rip)        # 2aa48 <_gm_+0x8>
    e734:	48 83 c9 01          	or     $0x1,%rcx
    e738:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
    e73c:	48 89 04 02          	mov    %rax,(%rdx,%rax,1)
    e740:	e9 ad eb ff ff       	jmp    d2f2 <dlmalloc+0x232>
    e745:	48 8d 0c c2          	lea    (%rdx,%rax,8),%rcx
    e749:	4c 39 d9             	cmp    %r11,%rcx
    e74c:	0f 82 ce ef ff ff    	jb     d720 <dlmalloc+0x660>
    e752:	4c 89 14 c2          	mov    %r10,(%rdx,%rax,8)
    e756:	49 89 52 30          	mov    %rdx,0x30(%r10)
    e75a:	41 0f 11 4a 10       	movups %xmm1,0x10(%r10)
    e75f:	e9 88 ef ff ff       	jmp    d6ec <dlmalloc+0x62c>
    e764:	4d 89 77 20          	mov    %r14,0x20(%r15)
    e768:	e9 bd ee ff ff       	jmp    d62a <dlmalloc+0x56a>
    e76d:	4c 89 f8             	mov    %r15,%rax
    e770:	48 89 f1             	mov    %rsi,%rcx
    e773:	e9 21 fe ff ff       	jmp    e599 <dlmalloc+0x14d9>
    e778:	b9 00 00 00 80       	mov    $0x80000000,%ecx
    e77d:	be 50 03 00 00       	mov    $0x350,%esi
    e782:	b8 1f 00 00 00       	mov    $0x1f,%eax
    e787:	e9 60 fc ff ff       	jmp    e3ec <dlmalloc+0x132c>
    e78c:	49 89 f0             	mov    %rsi,%r8
    e78f:	48 89 f1             	mov    %rsi,%rcx
    e792:	49 83 e0 f8          	and    $0xfffffffffffffff8,%r8
    e796:	48 c1 e9 03          	shr    $0x3,%rcx
    e79a:	48 81 fe ff 00 00 00 	cmp    $0xff,%rsi
    e7a1:	0f 87 9f 01 00 00    	ja     e946 <dlmalloc+0x1886>
    e7a7:	44 8d 5c 09 09       	lea    0x9(%rcx,%rcx,1),%r11d
    e7ac:	49 8b 7a 10          	mov    0x10(%r10),%rdi
    e7b0:	49 8b 72 18          	mov    0x18(%r10),%rsi
    e7b4:	4f 8d 5c dd 00       	lea    0x0(%r13,%r11,8),%r11
    e7b9:	4c 39 df             	cmp    %r11,%rdi
    e7bc:	0f 85 84 03 00 00    	jne    eb46 <dlmalloc+0x1a86>
    e7c2:	48 39 fe             	cmp    %rdi,%rsi
    e7c5:	0f 84 69 03 00 00    	je     eb34 <dlmalloc+0x1a74>
    e7cb:	48 3b 35 86 c2 01 00 	cmp    0x1c286(%rip),%rsi        # 2aa58 <_gm_+0x18>
    e7d2:	0f 82 48 ef ff ff    	jb     d720 <dlmalloc+0x660>
    e7d8:	4c 39 56 10          	cmp    %r10,0x10(%rsi)
    e7dc:	0f 85 3e ef ff ff    	jne    d720 <dlmalloc+0x660>
    e7e2:	48 89 77 18          	mov    %rsi,0x18(%rdi)
    e7e6:	48 89 7e 10          	mov    %rdi,0x10(%rsi)
    e7ea:	4d 01 c2             	add    %r8,%r10
    e7ed:	4c 01 c0             	add    %r8,%rax
    e7f0:	49 8b 72 08          	mov    0x8(%r10),%rsi
    e7f4:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    e7f8:	e9 ed f9 ff ff       	jmp    e1ea <dlmalloc+0x112a>
    e7fd:	49 89 4c d5 08       	mov    %rcx,0x8(%r13,%rdx,8)
    e802:	e9 6f fb ff ff       	jmp    e376 <dlmalloc+0x12b6>
    e807:	4d 89 84 cd 58 02 00 	mov    %r8,0x258(%r13,%rcx,8)
    e80e:	00 
    e80f:	4d 85 c0             	test   %r8,%r8
    e812:	0f 85 f7 ef ff ff    	jne    d80f <dlmalloc+0x74f>
    e818:	41 0f b3 c1          	btr    %eax,%r9d
    e81c:	44 89 0d 21 c2 01 00 	mov    %r9d,0x1c221(%rip)        # 2aa44 <_gm_+0x4>
    e823:	e9 28 f0 ff ff       	jmp    d850 <dlmalloc+0x790>
    e828:	44 09 c2             	or     %r8d,%edx
    e82b:	89 15 0f c2 01 00    	mov    %edx,0x1c20f(%rip)        # 2aa40 <_gm_>
    e831:	4c 89 ca             	mov    %r9,%rdx
    e834:	e9 83 f0 ff ff       	jmp    d8bc <dlmalloc+0x7fc>
    e839:	48 8b 48 10          	mov    0x10(%rax),%rcx
    e83d:	48 3b 0d 14 c2 01 00 	cmp    0x1c214(%rip),%rcx        # 2aa58 <_gm_+0x18>
    e844:	0f 83 f2 f9 ff ff    	jae    e23c <dlmalloc+0x117c>
    e84a:	e9 d1 ee ff ff       	jmp    d720 <dlmalloc+0x660>
    e84f:	89 ce                	mov    %ecx,%esi
    e851:	49 8b b4 f5 58 02 00 	mov    0x258(%r13,%rsi,8),%rsi
    e858:	00 
    e859:	83 f9 1f             	cmp    $0x1f,%ecx
    e85c:	74 0b                	je     e869 <dlmalloc+0x17a9>
    e85e:	d1 e9                	shr    %ecx
    e860:	41 b9 39 00 00 00    	mov    $0x39,%r9d
    e866:	41 29 c9             	sub    %ecx,%r9d
    e869:	48 89 c7             	mov    %rax,%rdi
    e86c:	44 89 c9             	mov    %r9d,%ecx
    e86f:	48 d3 e7             	shl    %cl,%rdi
    e872:	eb 1e                	jmp    e892 <dlmalloc+0x17d2>
    e874:	48 89 f9             	mov    %rdi,%rcx
    e877:	48 01 ff             	add    %rdi,%rdi
    e87a:	48 c1 e9 3f          	shr    $0x3f,%rcx
    e87e:	48 83 c1 04          	add    $0x4,%rcx
    e882:	4c 8b 04 ce          	mov    (%rsi,%rcx,8),%r8
    e886:	4d 85 c0             	test   %r8,%r8
    e889:	0f 84 d7 01 00 00    	je     ea66 <dlmalloc+0x19a6>
    e88f:	4c 89 c6             	mov    %r8,%rsi
    e892:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    e896:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    e89a:	48 39 c8             	cmp    %rcx,%rax
    e89d:	75 d5                	jne    e874 <dlmalloc+0x17b4>
    e89f:	48 8b 46 10          	mov    0x10(%rsi),%rax
    e8a3:	48 8b 0d ae c1 01 00 	mov    0x1c1ae(%rip),%rcx        # 2aa58 <_gm_+0x18>
    e8aa:	66 48 0f 6e f6       	movq   %rsi,%xmm6
    e8af:	66 48 0f 6e c0       	movq   %rax,%xmm0
    e8b4:	66 0f 6c c6          	punpcklqdq %xmm6,%xmm0
    e8b8:	48 39 c8             	cmp    %rcx,%rax
    e8bb:	0f 82 5f ee ff ff    	jb     d720 <dlmalloc+0x660>
    e8c1:	48 39 ce             	cmp    %rcx,%rsi
    e8c4:	0f 82 56 ee ff ff    	jb     d720 <dlmalloc+0x660>
    e8ca:	48 89 50 18          	mov    %rdx,0x18(%rax)
    e8ce:	31 c0                	xor    %eax,%eax
    e8d0:	48 89 56 10          	mov    %rdx,0x10(%rsi)
    e8d4:	48 89 42 30          	mov    %rax,0x30(%rdx)
    e8d8:	0f 11 42 10          	movups %xmm0,0x10(%rdx)
    e8dc:	e9 11 ea ff ff       	jmp    d2f2 <dlmalloc+0x232>
    e8e1:	bf 01 00 00 00       	mov    $0x1,%edi
    e8e6:	be 58 02 00 00       	mov    $0x258,%esi
    e8eb:	e9 b5 fd ff ff       	jmp    e6a5 <dlmalloc+0x15e5>
    e8f0:	48 8b 43 20          	mov    0x20(%rbx),%rax
    e8f4:	48 85 c0             	test   %rax,%rax
    e8f7:	0f 84 b0 01 00 00    	je     eaad <dlmalloc+0x19ed>
    e8fd:	48 8d 4b 20          	lea    0x20(%rbx),%rcx
    e901:	e9 fa fb ff ff       	jmp    e500 <dlmalloc+0x1440>
    e906:	4d 89 46 20          	mov    %r8,0x20(%r14)
    e90a:	e9 fb ee ff ff       	jmp    d80a <dlmalloc+0x74a>
    e90f:	4c 89 f7             	mov    %r14,%rdi
    e912:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    e917:	e8 c4 dc ff ff       	call   c5e0 <sbrk>
    e91c:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    e921:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    e925:	0f 84 5b 02 00 00    	je     eb86 <dlmalloc+0x1ac6>
    e92b:	4d 01 f7             	add    %r14,%r15
    e92e:	c7 05 f8 c4 01 00 00 	movl   $0x0,0x1c4f8(%rip)        # 2ae30 <malloc_global_mutex>
    e935:	00 00 00 
    e938:	e9 d3 f1 ff ff       	jmp    db10 <dlmalloc+0xa50>
    e93d:	49 89 4f 20          	mov    %rcx,0x20(%r15)
    e941:	e9 30 fa ff ff       	jmp    e376 <dlmalloc+0x12b6>
    e946:	49 8b 72 18          	mov    0x18(%r10),%rsi
    e94a:	4d 8b 62 30          	mov    0x30(%r10),%r12
    e94e:	4c 39 d6             	cmp    %r10,%rsi
    e951:	0f 84 96 01 00 00    	je     eaed <dlmalloc+0x1a2d>
    e957:	49 8b 4a 10          	mov    0x10(%r10),%rcx
    e95b:	48 3b 0d f6 c0 01 00 	cmp    0x1c0f6(%rip),%rcx        # 2aa58 <_gm_+0x18>
    e962:	0f 82 b8 ed ff ff    	jb     d720 <dlmalloc+0x660>
    e968:	4c 39 51 18          	cmp    %r10,0x18(%rcx)
    e96c:	0f 85 ae ed ff ff    	jne    d720 <dlmalloc+0x660>
    e972:	4c 39 56 10          	cmp    %r10,0x10(%rsi)
    e976:	0f 85 a4 ed ff ff    	jne    d720 <dlmalloc+0x660>
    e97c:	48 89 71 18          	mov    %rsi,0x18(%rcx)
    e980:	48 89 4e 10          	mov    %rcx,0x10(%rsi)
    e984:	4d 85 e4             	test   %r12,%r12
    e987:	0f 84 5d fe ff ff    	je     e7ea <dlmalloc+0x172a>
    e98d:	41 8b 7a 38          	mov    0x38(%r10),%edi
    e991:	48 89 f9             	mov    %rdi,%rcx
    e994:	4c 8d 5f 4a          	lea    0x4a(%rdi),%r11
    e998:	4d 39 94 fd 58 02 00 	cmp    %r10,0x258(%r13,%rdi,8)
    e99f:	00 
    e9a0:	0f 84 0e 02 00 00    	je     ebb4 <dlmalloc+0x1af4>
    e9a6:	4c 3b 25 ab c0 01 00 	cmp    0x1c0ab(%rip),%r12        # 2aa58 <_gm_+0x18>
    e9ad:	0f 82 6d ed ff ff    	jb     d720 <dlmalloc+0x660>
    e9b3:	4d 39 54 24 20       	cmp    %r10,0x20(%r12)
    e9b8:	0f 84 ec 01 00 00    	je     ebaa <dlmalloc+0x1aea>
    e9be:	49 89 74 24 28       	mov    %rsi,0x28(%r12)
    e9c3:	48 85 f6             	test   %rsi,%rsi
    e9c6:	0f 84 1e fe ff ff    	je     e7ea <dlmalloc+0x172a>
    e9cc:	48 8b 3d 85 c0 01 00 	mov    0x1c085(%rip),%rdi        # 2aa58 <_gm_+0x18>
    e9d3:	48 39 fe             	cmp    %rdi,%rsi
    e9d6:	0f 82 44 ed ff ff    	jb     d720 <dlmalloc+0x660>
    e9dc:	49 8b 4a 20          	mov    0x20(%r10),%rcx
    e9e0:	4c 89 66 30          	mov    %r12,0x30(%rsi)
    e9e4:	48 85 c9             	test   %rcx,%rcx
    e9e7:	74 11                	je     e9fa <dlmalloc+0x193a>
    e9e9:	48 39 f9             	cmp    %rdi,%rcx
    e9ec:	0f 82 2e ed ff ff    	jb     d720 <dlmalloc+0x660>
    e9f2:	48 89 4e 20          	mov    %rcx,0x20(%rsi)
    e9f6:	48 89 71 30          	mov    %rsi,0x30(%rcx)
    e9fa:	49 8b 4a 28          	mov    0x28(%r10),%rcx
    e9fe:	48 85 c9             	test   %rcx,%rcx
    ea01:	0f 84 e3 fd ff ff    	je     e7ea <dlmalloc+0x172a>
    ea07:	48 39 f9             	cmp    %rdi,%rcx
    ea0a:	0f 82 10 ed ff ff    	jb     d720 <dlmalloc+0x660>
    ea10:	48 89 4e 28          	mov    %rcx,0x28(%rsi)
    ea14:	48 89 71 30          	mov    %rsi,0x30(%rcx)
    ea18:	e9 cd fd ff ff       	jmp    e7ea <dlmalloc+0x172a>
    ea1d:	4d 85 ff             	test   %r15,%r15
    ea20:	0f 84 4a ec ff ff    	je     d670 <dlmalloc+0x5b0>
    ea26:	8b 53 38             	mov    0x38(%rbx),%edx
    ea29:	48 89 d0             	mov    %rdx,%rax
    ea2c:	48 8d 4a 4a          	lea    0x4a(%rdx),%rcx
    ea30:	49 3b 9c d5 58 02 00 	cmp    0x258(%r13,%rdx,8),%rbx
    ea37:	00 
    ea38:	0f 84 a2 01 00 00    	je     ebe0 <dlmalloc+0x1b20>
    ea3e:	4d 39 df             	cmp    %r11,%r15
    ea41:	0f 82 d9 ec ff ff    	jb     d720 <dlmalloc+0x660>
    ea47:	4d 39 77 20          	cmp    %r14,0x20(%r15)
    ea4b:	0f 84 83 01 00 00    	je     ebd4 <dlmalloc+0x1b14>
    ea51:	31 f6                	xor    %esi,%esi
    ea53:	49 89 77 28          	mov    %rsi,0x28(%r15)
    ea57:	e9 14 ec ff ff       	jmp    d670 <dlmalloc+0x5b0>
    ea5c:	4d 89 44 cd 08       	mov    %r8,0x8(%r13,%rcx,8)
    ea61:	e9 a9 ed ff ff       	jmp    d80f <dlmalloc+0x74f>
    ea66:	48 8d 04 ce          	lea    (%rsi,%rcx,8),%rax
    ea6a:	48 3b 05 e7 bf 01 00 	cmp    0x1bfe7(%rip),%rax        # 2aa58 <_gm_+0x18>
    ea71:	0f 82 a9 ec ff ff    	jb     d720 <dlmalloc+0x660>
    ea77:	48 89 14 ce          	mov    %rdx,(%rsi,%rcx,8)
    ea7b:	48 89 72 30          	mov    %rsi,0x30(%rdx)
    ea7f:	0f 11 42 10          	movups %xmm0,0x10(%rdx)
    ea83:	e9 6a e8 ff ff       	jmp    d2f2 <dlmalloc+0x232>
    ea88:	bf 00 00 00 80       	mov    $0x80000000,%edi
    ea8d:	be 50 03 00 00       	mov    $0x350,%esi
    ea92:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    ea97:	e9 09 fc ff ff       	jmp    e6a5 <dlmalloc+0x15e5>
    ea9c:	4d 89 46 20          	mov    %r8,0x20(%r14)
    eaa0:	e9 6a ed ff ff       	jmp    d80f <dlmalloc+0x74f>
    eaa5:	4d 89 e3             	mov    %r12,%r11
    eaa8:	e9 4b ea ff ff       	jmp    d4f8 <dlmalloc+0x438>
    eaad:	4d 85 f6             	test   %r14,%r14
    eab0:	0f 84 9a ed ff ff    	je     d850 <dlmalloc+0x790>
    eab6:	8b 4b 38             	mov    0x38(%rbx),%ecx
    eab9:	48 89 c8             	mov    %rcx,%rax
    eabc:	4c 8d 41 4a          	lea    0x4a(%rcx),%r8
    eac0:	49 3b 9c cd 58 02 00 	cmp    0x258(%r13,%rcx,8),%rbx
    eac7:	00 
    eac8:	0f 84 34 01 00 00    	je     ec02 <dlmalloc+0x1b42>
    eace:	4d 39 de             	cmp    %r11,%r14
    ead1:	0f 82 49 ec ff ff    	jb     d720 <dlmalloc+0x660>
    ead7:	49 3b 5e 20          	cmp    0x20(%r14),%rbx
    eadb:	0f 84 16 01 00 00    	je     ebf7 <dlmalloc+0x1b37>
    eae1:	45 31 ff             	xor    %r15d,%r15d
    eae4:	4d 89 7e 28          	mov    %r15,0x28(%r14)
    eae8:	e9 63 ed ff ff       	jmp    d850 <dlmalloc+0x790>
    eaed:	49 8b 72 28          	mov    0x28(%r10),%rsi
    eaf1:	48 85 f6             	test   %rsi,%rsi
    eaf4:	74 7a                	je     eb70 <dlmalloc+0x1ab0>
    eaf6:	49 8d 7a 28          	lea    0x28(%r10),%rdi
    eafa:	48 89 f1             	mov    %rsi,%rcx
    eafd:	49 89 fb             	mov    %rdi,%r11
    eb00:	48 89 ce             	mov    %rcx,%rsi
    eb03:	48 8d 79 28          	lea    0x28(%rcx),%rdi
    eb07:	48 8b 49 28          	mov    0x28(%rcx),%rcx
    eb0b:	48 85 c9             	test   %rcx,%rcx
    eb0e:	75 ed                	jne    eafd <dlmalloc+0x1a3d>
    eb10:	48 8b 4e 20          	mov    0x20(%rsi),%rcx
    eb14:	48 8d 7e 20          	lea    0x20(%rsi),%rdi
    eb18:	48 85 c9             	test   %rcx,%rcx
    eb1b:	75 e0                	jne    eafd <dlmalloc+0x1a3d>
    eb1d:	4c 3b 1d 34 bf 01 00 	cmp    0x1bf34(%rip),%r11        # 2aa58 <_gm_+0x18>
    eb24:	0f 82 f6 eb ff ff    	jb     d720 <dlmalloc+0x660>
    eb2a:	31 c9                	xor    %ecx,%ecx
    eb2c:	49 89 0b             	mov    %rcx,(%r11)
    eb2f:	e9 50 fe ff ff       	jmp    e984 <dlmalloc+0x18c4>
    eb34:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    eb39:	d3 c6                	rol    %cl,%esi
    eb3b:	21 35 ff be 01 00    	and    %esi,0x1beff(%rip)        # 2aa40 <_gm_>
    eb41:	e9 a4 fc ff ff       	jmp    e7ea <dlmalloc+0x172a>
    eb46:	48 3b 3d 0b bf 01 00 	cmp    0x1bf0b(%rip),%rdi        # 2aa58 <_gm_+0x18>
    eb4d:	0f 82 cd eb ff ff    	jb     d720 <dlmalloc+0x660>
    eb53:	4c 39 57 18          	cmp    %r10,0x18(%rdi)
    eb57:	0f 85 c3 eb ff ff    	jne    d720 <dlmalloc+0x660>
    eb5d:	48 39 f7             	cmp    %rsi,%rdi
    eb60:	74 d2                	je     eb34 <dlmalloc+0x1a74>
    eb62:	4c 39 de             	cmp    %r11,%rsi
    eb65:	0f 84 77 fc ff ff    	je     e7e2 <dlmalloc+0x1722>
    eb6b:	e9 5b fc ff ff       	jmp    e7cb <dlmalloc+0x170b>
    eb70:	49 8b 72 20          	mov    0x20(%r10),%rsi
    eb74:	48 85 f6             	test   %rsi,%rsi
    eb77:	0f 84 07 fe ff ff    	je     e984 <dlmalloc+0x18c4>
    eb7d:	49 8d 7a 20          	lea    0x20(%r10),%rdi
    eb81:	e9 74 ff ff ff       	jmp    eafa <dlmalloc+0x1a3a>
    eb86:	4c 89 ff             	mov    %r15,%rdi
    eb89:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    eb8e:	48 f7 df             	neg    %rdi
    eb91:	e8 4a da ff ff       	call   c5e0 <sbrk>
    eb96:	c7 05 90 c2 01 00 00 	movl   $0x0,0x1c290(%rip)        # 2ae30 <malloc_global_mutex>
    eb9d:	00 00 00 
    eba0:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    eba5:	e9 d9 ee ff ff       	jmp    da83 <dlmalloc+0x9c3>
    ebaa:	49 89 74 24 20       	mov    %rsi,0x20(%r12)
    ebaf:	e9 0f fe ff ff       	jmp    e9c3 <dlmalloc+0x1903>
    ebb4:	4b 89 74 dd 08       	mov    %rsi,0x8(%r13,%r11,8)
    ebb9:	48 85 f6             	test   %rsi,%rsi
    ebbc:	0f 85 0a fe ff ff    	jne    e9cc <dlmalloc+0x190c>
    ebc2:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    ebc7:	d3 c6                	rol    %cl,%esi
    ebc9:	21 35 75 be 01 00    	and    %esi,0x1be75(%rip)        # 2aa44 <_gm_+0x4>
    ebcf:	e9 16 fc ff ff       	jmp    e7ea <dlmalloc+0x172a>
    ebd4:	45 31 c9             	xor    %r9d,%r9d
    ebd7:	4d 89 4f 20          	mov    %r9,0x20(%r15)
    ebdb:	e9 90 ea ff ff       	jmp    d670 <dlmalloc+0x5b0>
    ebe0:	45 31 f6             	xor    %r14d,%r14d
    ebe3:	4d 89 74 cd 08       	mov    %r14,0x8(%r13,%rcx,8)
    ebe8:	e9 01 fa ff ff       	jmp    e5ee <dlmalloc+0x152e>
    ebed:	e8 de e3 ff ff       	call   cfd0 <init_mparams.isra.0>
    ebf2:	e9 82 ed ff ff       	jmp    d979 <dlmalloc+0x8b9>
    ebf7:	31 c0                	xor    %eax,%eax
    ebf9:	49 89 46 20          	mov    %rax,0x20(%r14)
    ebfd:	e9 4e ec ff ff       	jmp    d850 <dlmalloc+0x790>
    ec02:	31 c9                	xor    %ecx,%ecx
    ec04:	4b 89 4c c5 08       	mov    %rcx,0x8(%r13,%r8,8)
    ec09:	e9 0a fc ff ff       	jmp    e818 <dlmalloc+0x1758>
    ec0e:	66 90                	xchg   %ax,%ax

000000000000ec10 <internal_memalign.constprop.0>:
    ec10:	41 55                	push   %r13
    ec12:	41 54                	push   %r12
    ec14:	55                   	push   %rbp
    ec15:	53                   	push   %rbx
    ec16:	bb 20 00 00 00       	mov    $0x20,%ebx
    ec1b:	48 83 ec 18          	sub    $0x18,%rsp
    ec1f:	48 39 df             	cmp    %rbx,%rdi
    ec22:	48 0f 43 df          	cmovae %rdi,%rbx
    ec26:	48 8d 43 ff          	lea    -0x1(%rbx),%rax
    ec2a:	48 85 d8             	test   %rbx,%rax
    ec2d:	74 49                	je     ec78 <internal_memalign.constprop.0+0x68>
    ec2f:	48 83 ff 20          	cmp    $0x20,%rdi
    ec33:	0f 86 17 02 00 00    	jbe    ee50 <internal_memalign.constprop.0+0x240>
    ec39:	b8 20 00 00 00       	mov    $0x20,%eax
    ec3e:	66 90                	xchg   %ax,%ax
    ec40:	48 01 c0             	add    %rax,%rax
    ec43:	48 39 d8             	cmp    %rbx,%rax
    ec46:	72 f8                	jb     ec40 <internal_memalign.constprop.0+0x30>
    ec48:	48 c7 c2 80 ff ff ff 	mov    $0xffffffffffffff80,%rdx
    ec4f:	48 89 c3             	mov    %rax,%rbx
    ec52:	48 29 c2             	sub    %rax,%rdx
    ec55:	48 39 d6             	cmp    %rdx,%rsi
    ec58:	72 2d                	jb     ec87 <internal_memalign.constprop.0+0x77>
    ec5a:	e8 e1 21 00 00       	call   10e40 <__errno_location>
    ec5f:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
    ec65:	48 83 c4 18          	add    $0x18,%rsp
    ec69:	31 c0                	xor    %eax,%eax
    ec6b:	5b                   	pop    %rbx
    ec6c:	5d                   	pop    %rbp
    ec6d:	41 5c                	pop    %r12
    ec6f:	41 5d                	pop    %r13
    ec71:	c3                   	ret    
    ec72:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    ec78:	48 c7 c2 80 ff ff ff 	mov    $0xffffffffffffff80,%rdx
    ec7f:	48 29 da             	sub    %rbx,%rdx
    ec82:	48 39 d6             	cmp    %rdx,%rsi
    ec85:	73 d3                	jae    ec5a <internal_memalign.constprop.0+0x4a>
    ec87:	48 8d 46 1f          	lea    0x1f(%rsi),%rax
    ec8b:	ba 20 00 00 00       	mov    $0x20,%edx
    ec90:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
    ec94:	48 83 fe 0e          	cmp    $0xe,%rsi
    ec98:	48 0f 47 d0          	cmova  %rax,%rdx
    ec9c:	48 8d 7c 13 10       	lea    0x10(%rbx,%rdx,1),%rdi
    eca1:	49 89 d4             	mov    %rdx,%r12
    eca4:	e8 17 e4 ff ff       	call   d0c0 <dlmalloc>
    eca9:	48 85 c0             	test   %rax,%rax
    ecac:	74 b7                	je     ec65 <internal_memalign.constprop.0+0x55>
    ecae:	44 8b 2d fb c0 01 00 	mov    0x1c0fb(%rip),%r13d        # 2adb0 <_gm_+0x370>
    ecb5:	48 8d 70 f0          	lea    -0x10(%rax),%rsi
    ecb9:	41 83 e5 02          	and    $0x2,%r13d
    ecbd:	0f 85 9d 00 00 00    	jne    ed60 <internal_memalign.constprop.0+0x150>
    ecc3:	48 8d 6b ff          	lea    -0x1(%rbx),%rbp
    ecc7:	48 85 e8             	test   %rbp,%rax
    ecca:	75 3c                	jne    ed08 <internal_memalign.constprop.0+0xf8>
    eccc:	48 8b 50 f8          	mov    -0x8(%rax),%rdx
    ecd0:	48 89 f5             	mov    %rsi,%rbp
    ecd3:	f6 c2 03             	test   $0x3,%dl
    ecd6:	74 15                	je     eced <internal_memalign.constprop.0+0xdd>
    ecd8:	48 89 d1             	mov    %rdx,%rcx
    ecdb:	49 8d 74 24 20       	lea    0x20(%r12),%rsi
    ece0:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    ece4:	48 39 ce             	cmp    %rcx,%rsi
    ece7:	0f 82 a3 00 00 00    	jb     ed90 <internal_memalign.constprop.0+0x180>
    eced:	45 85 ed             	test   %r13d,%r13d
    ecf0:	0f 85 72 01 00 00    	jne    ee68 <internal_memalign.constprop.0+0x258>
    ecf6:	48 83 c4 18          	add    $0x18,%rsp
    ecfa:	5b                   	pop    %rbx
    ecfb:	5d                   	pop    %rbp
    ecfc:	41 5c                	pop    %r12
    ecfe:	41 5d                	pop    %r13
    ed00:	c3                   	ret    
    ed01:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    ed08:	48 89 da             	mov    %rbx,%rdx
    ed0b:	48 01 c5             	add    %rax,%rbp
    ed0e:	48 f7 da             	neg    %rdx
    ed11:	48 21 d5             	and    %rdx,%rbp
    ed14:	48 83 ed 10          	sub    $0x10,%rbp
    ed18:	48 89 e9             	mov    %rbp,%rcx
    ed1b:	48 29 f1             	sub    %rsi,%rcx
    ed1e:	48 83 f9 1f          	cmp    $0x1f,%rcx
    ed22:	77 09                	ja     ed2d <internal_memalign.constprop.0+0x11d>
    ed24:	48 01 dd             	add    %rbx,%rbp
    ed27:	48 89 e9             	mov    %rbp,%rcx
    ed2a:	48 29 f1             	sub    %rsi,%rcx
    ed2d:	48 8b 78 f8          	mov    -0x8(%rax),%rdi
    ed31:	48 8d 5d 10          	lea    0x10(%rbp),%rbx
    ed35:	48 89 fa             	mov    %rdi,%rdx
    ed38:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    ed3c:	48 29 ca             	sub    %rcx,%rdx
    ed3f:	83 e7 03             	and    $0x3,%edi
    ed42:	0f 85 a8 00 00 00    	jne    edf0 <internal_memalign.constprop.0+0x1e0>
    ed48:	48 03 48 f0          	add    -0x10(%rax),%rcx
    ed4c:	48 89 55 08          	mov    %rdx,0x8(%rbp)
    ed50:	48 89 d8             	mov    %rbx,%rax
    ed53:	48 89 4d 00          	mov    %rcx,0x0(%rbp)
    ed57:	e9 77 ff ff ff       	jmp    ecd3 <internal_memalign.constprop.0+0xc3>
    ed5c:	0f 1f 40 00          	nopl   0x0(%rax)
    ed60:	ba 01 00 00 00       	mov    $0x1,%edx
    ed65:	87 15 49 c0 01 00    	xchg   %edx,0x1c049(%rip)        # 2adb4 <_gm_+0x374>
    ed6b:	85 d2                	test   %edx,%edx
    ed6d:	0f 85 0d 01 00 00    	jne    ee80 <internal_memalign.constprop.0+0x270>
    ed73:	44 8b 2d 36 c0 01 00 	mov    0x1c036(%rip),%r13d        # 2adb0 <_gm_+0x370>
    ed7a:	48 8d 6b ff          	lea    -0x1(%rbx),%rbp
    ed7e:	41 83 e5 02          	and    $0x2,%r13d
    ed82:	48 85 e8             	test   %rbp,%rax
    ed85:	75 81                	jne    ed08 <internal_memalign.constprop.0+0xf8>
    ed87:	e9 40 ff ff ff       	jmp    eccc <internal_memalign.constprop.0+0xbc>
    ed8c:	0f 1f 40 00          	nopl   0x0(%rax)
    ed90:	83 e2 01             	and    $0x1,%edx
    ed93:	49 89 c8             	mov    %rcx,%r8
    ed96:	4a 8d 74 25 00       	lea    0x0(%rbp,%r12,1),%rsi
    ed9b:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    eda0:	4c 09 e2             	or     %r12,%rdx
    eda3:	4d 29 e0             	sub    %r12,%r8
    eda6:	48 8d 3d 93 bc 01 00 	lea    0x1bc93(%rip),%rdi        # 2aa40 <_gm_>
    edad:	48 83 ca 02          	or     $0x2,%rdx
    edb1:	4d 89 c1             	mov    %r8,%r9
    edb4:	48 89 55 08          	mov    %rdx,0x8(%rbp)
    edb8:	48 8b 15 41 c0 01 00 	mov    0x1c041(%rip),%rdx        # 2ae00 <mparams>
    edbf:	48 01 cd             	add    %rcx,%rbp
    edc2:	49 83 c9 03          	or     $0x3,%r9
    edc6:	4c 89 4e 08          	mov    %r9,0x8(%rsi)
    edca:	48 31 fa             	xor    %rdi,%rdx
    edcd:	48 89 16             	mov    %rdx,(%rsi)
    edd0:	48 83 4d 08 01       	orq    $0x1,0x8(%rbp)
    edd5:	48 89 55 00          	mov    %rdx,0x0(%rbp)
    edd9:	4c 89 c2             	mov    %r8,%rdx
    eddc:	e8 bf d9 ff ff       	call   c7a0 <dispose_chunk>
    ede1:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    ede6:	e9 02 ff ff ff       	jmp    eced <internal_memalign.constprop.0+0xdd>
    edeb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    edf0:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
    edf4:	4c 8b 05 05 c0 01 00 	mov    0x1c005(%rip),%r8        # 2ae00 <mparams>
    edfb:	83 e7 01             	and    $0x1,%edi
    edfe:	48 09 d7             	or     %rdx,%rdi
    ee01:	48 01 ea             	add    %rbp,%rdx
    ee04:	48 83 cf 02          	or     $0x2,%rdi
    ee08:	48 89 7d 08          	mov    %rdi,0x8(%rbp)
    ee0c:	48 8d 3d 2d bc 01 00 	lea    0x1bc2d(%rip),%rdi        # 2aa40 <_gm_>
    ee13:	49 31 f8             	xor    %rdi,%r8
    ee16:	48 83 4a 08 01       	orq    $0x1,0x8(%rdx)
    ee1b:	4c 89 02             	mov    %r8,(%rdx)
    ee1e:	48 8b 50 f8          	mov    -0x8(%rax),%rdx
    ee22:	83 e2 01             	and    $0x1,%edx
    ee25:	48 09 ca             	or     %rcx,%rdx
    ee28:	48 83 ca 02          	or     $0x2,%rdx
    ee2c:	48 89 50 f8          	mov    %rdx,-0x8(%rax)
    ee30:	48 89 ca             	mov    %rcx,%rdx
    ee33:	48 83 4d 08 01       	orq    $0x1,0x8(%rbp)
    ee38:	4c 89 45 00          	mov    %r8,0x0(%rbp)
    ee3c:	e8 5f d9 ff ff       	call   c7a0 <dispose_chunk>
    ee41:	48 8b 55 08          	mov    0x8(%rbp),%rdx
    ee45:	48 89 d8             	mov    %rbx,%rax
    ee48:	e9 86 fe ff ff       	jmp    ecd3 <internal_memalign.constprop.0+0xc3>
    ee4d:	0f 1f 00             	nopl   (%rax)
    ee50:	48 c7 c2 60 ff ff ff 	mov    $0xffffffffffffff60,%rdx
    ee57:	bb 20 00 00 00       	mov    $0x20,%ebx
    ee5c:	e9 21 fe ff ff       	jmp    ec82 <internal_memalign.constprop.0+0x72>
    ee61:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    ee68:	c7 05 42 bf 01 00 00 	movl   $0x0,0x1bf42(%rip)        # 2adb4 <_gm_+0x374>
    ee6f:	00 00 00 
    ee72:	48 83 c4 18          	add    $0x18,%rsp
    ee76:	5b                   	pop    %rbx
    ee77:	5d                   	pop    %rbp
    ee78:	41 5c                	pop    %r12
    ee7a:	41 5d                	pop    %r13
    ee7c:	c3                   	ret    
    ee7d:	0f 1f 00             	nopl   (%rax)
    ee80:	b9 01 00 00 00       	mov    $0x1,%ecx
    ee85:	0f 1f 00             	nopl   (%rax)
    ee88:	8b 15 26 bf 01 00    	mov    0x1bf26(%rip),%edx        # 2adb4 <_gm_+0x374>
    ee8e:	85 d2                	test   %edx,%edx
    ee90:	75 f6                	jne    ee88 <internal_memalign.constprop.0+0x278>
    ee92:	89 ca                	mov    %ecx,%edx
    ee94:	87 15 1a bf 01 00    	xchg   %edx,0x1bf1a(%rip)        # 2adb4 <_gm_+0x374>
    ee9a:	85 d2                	test   %edx,%edx
    ee9c:	75 ea                	jne    ee88 <internal_memalign.constprop.0+0x278>
    ee9e:	e9 d0 fe ff ff       	jmp    ed73 <internal_memalign.constprop.0+0x163>
    eea3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    eeaa:	00 00 00 
    eead:	0f 1f 00             	nopl   (%rax)

000000000000eeb0 <dlfree>:
    eeb0:	f3 0f 1e fa          	endbr64 
    eeb4:	48 85 ff             	test   %rdi,%rdi
    eeb7:	0f 84 db 01 00 00    	je     f098 <dlfree+0x1e8>
    eebd:	41 55                	push   %r13
    eebf:	48 89 f8             	mov    %rdi,%rax
    eec2:	48 8d 57 f0          	lea    -0x10(%rdi),%rdx
    eec6:	41 54                	push   %r12
    eec8:	55                   	push   %rbp
    eec9:	53                   	push   %rbx
    eeca:	48 83 ec 08          	sub    $0x8,%rsp
    eece:	48 8b 4f f8          	mov    -0x8(%rdi),%rcx
    eed2:	48 8b 35 27 bf 01 00 	mov    0x1bf27(%rip),%rsi        # 2ae00 <mparams>
    eed9:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    eedd:	48 8b 5c 0f f0       	mov    -0x10(%rdi,%rcx,1),%rbx
    eee2:	48 31 f3             	xor    %rsi,%rbx
    eee5:	48 3b 73 40          	cmp    0x40(%rbx),%rsi
    eee9:	0f 85 89 02 00 00    	jne    f178 <dlfree+0x2c8>
    eeef:	f6 83 70 03 00 00 02 	testb  $0x2,0x370(%rbx)
    eef6:	0f 85 54 01 00 00    	jne    f050 <dlfree+0x1a0>
    eefc:	4c 8b 4b 18          	mov    0x18(%rbx),%r9
    ef00:	4c 39 ca             	cmp    %r9,%rdx
    ef03:	0f 82 87 01 00 00    	jb     f090 <dlfree+0x1e0>
    ef09:	48 8b 48 f8          	mov    -0x8(%rax),%rcx
    ef0d:	49 89 c8             	mov    %rcx,%r8
    ef10:	41 83 e0 03          	and    $0x3,%r8d
    ef14:	49 83 f8 01          	cmp    $0x1,%r8
    ef18:	0f 84 72 01 00 00    	je     f090 <dlfree+0x1e0>
    ef1e:	48 89 ce             	mov    %rcx,%rsi
    ef21:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
    ef25:	83 e1 01             	and    $0x1,%ecx
    ef28:	48 8d 3c 32          	lea    (%rdx,%rsi,1),%rdi
    ef2c:	0f 84 9e 00 00 00    	je     efd0 <dlfree+0x120>
    ef32:	48 39 fa             	cmp    %rdi,%rdx
    ef35:	0f 83 55 01 00 00    	jae    f090 <dlfree+0x1e0>
    ef3b:	48 8b 47 08          	mov    0x8(%rdi),%rax
    ef3f:	a8 01                	test   $0x1,%al
    ef41:	0f 84 49 01 00 00    	je     f090 <dlfree+0x1e0>
    ef47:	a8 02                	test   $0x2,%al
    ef49:	0f 84 51 01 00 00    	je     f0a0 <dlfree+0x1f0>
    ef4f:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    ef53:	48 89 47 08          	mov    %rax,0x8(%rdi)
    ef57:	48 89 f0             	mov    %rsi,%rax
    ef5a:	48 83 c8 01          	or     $0x1,%rax
    ef5e:	48 89 42 08          	mov    %rax,0x8(%rdx)
    ef62:	48 89 34 32          	mov    %rsi,(%rdx,%rsi,1)
    ef66:	48 89 f1             	mov    %rsi,%rcx
    ef69:	48 c1 e9 03          	shr    $0x3,%rcx
    ef6d:	48 81 fe ff 00 00 00 	cmp    $0xff,%rsi
    ef74:	0f 87 ce 01 00 00    	ja     f148 <dlfree+0x298>
    ef7a:	8d 44 09 09          	lea    0x9(%rcx,%rcx,1),%eax
    ef7e:	8b 3b                	mov    (%rbx),%edi
    ef80:	48 8d 34 c3          	lea    (%rbx,%rax,8),%rsi
    ef84:	b8 01 00 00 00       	mov    $0x1,%eax
    ef89:	d3 e0                	shl    %cl,%eax
    ef8b:	85 c7                	test   %eax,%edi
    ef8d:	0f 84 35 06 00 00    	je     f5c8 <dlfree+0x718>
    ef93:	48 8b 46 10          	mov    0x10(%rsi),%rax
    ef97:	4c 39 c8             	cmp    %r9,%rax
    ef9a:	0f 82 d8 01 00 00    	jb     f178 <dlfree+0x2c8>
    efa0:	48 89 56 10          	mov    %rdx,0x10(%rsi)
    efa4:	48 89 50 18          	mov    %rdx,0x18(%rax)
    efa8:	48 89 42 10          	mov    %rax,0x10(%rdx)
    efac:	48 89 72 18          	mov    %rsi,0x18(%rdx)
    efb0:	f6 83 70 03 00 00 02 	testb  $0x2,0x370(%rbx)
    efb7:	0f 85 73 01 00 00    	jne    f130 <dlfree+0x280>
    efbd:	48 83 c4 08          	add    $0x8,%rsp
    efc1:	5b                   	pop    %rbx
    efc2:	5d                   	pop    %rbp
    efc3:	41 5c                	pop    %r12
    efc5:	41 5d                	pop    %r13
    efc7:	c3                   	ret    
    efc8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    efcf:	00 
    efd0:	48 8b 40 f0          	mov    -0x10(%rax),%rax
    efd4:	4d 85 c0             	test   %r8,%r8
    efd7:	74 d7                	je     efb0 <dlfree+0x100>
    efd9:	48 29 c2             	sub    %rax,%rdx
    efdc:	48 01 c6             	add    %rax,%rsi
    efdf:	4c 39 ca             	cmp    %r9,%rdx
    efe2:	0f 82 a8 00 00 00    	jb     f090 <dlfree+0x1e0>
    efe8:	48 39 53 20          	cmp    %rdx,0x20(%rbx)
    efec:	0f 84 9e 05 00 00    	je     f590 <dlfree+0x6e0>
    eff2:	48 89 c1             	mov    %rax,%rcx
    eff5:	48 c1 e9 03          	shr    $0x3,%rcx
    eff9:	48 3d ff 00 00 00    	cmp    $0xff,%rax
    efff:	0f 87 6b 02 00 00    	ja     f270 <dlfree+0x3c0>
    f005:	44 8d 54 09 09       	lea    0x9(%rcx,%rcx,1),%r10d
    f00a:	48 8b 42 10          	mov    0x10(%rdx),%rax
    f00e:	4c 8b 42 18          	mov    0x18(%rdx),%r8
    f012:	4e 8d 14 d3          	lea    (%rbx,%r10,8),%r10
    f016:	49 39 c2             	cmp    %rax,%r10
    f019:	0f 85 ae 07 00 00    	jne    f7cd <dlfree+0x91d>
    f01f:	4c 39 c0             	cmp    %r8,%rax
    f022:	0f 84 28 05 00 00    	je     f550 <dlfree+0x6a0>
    f028:	4d 39 c8             	cmp    %r9,%r8
    f02b:	0f 82 47 01 00 00    	jb     f178 <dlfree+0x2c8>
    f031:	49 39 50 10          	cmp    %rdx,0x10(%r8)
    f035:	0f 85 3d 01 00 00    	jne    f178 <dlfree+0x2c8>
    f03b:	4c 89 40 18          	mov    %r8,0x18(%rax)
    f03f:	49 89 40 10          	mov    %rax,0x10(%r8)
    f043:	e9 ea fe ff ff       	jmp    ef32 <dlfree+0x82>
    f048:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    f04f:	00 
    f050:	48 8d b3 74 03 00 00 	lea    0x374(%rbx),%rsi
    f057:	b9 01 00 00 00       	mov    $0x1,%ecx
    f05c:	87 0e                	xchg   %ecx,(%rsi)
    f05e:	85 c9                	test   %ecx,%ecx
    f060:	0f 84 96 fe ff ff    	je     eefc <dlfree+0x4c>
    f066:	bf 01 00 00 00       	mov    $0x1,%edi
    f06b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    f070:	8b 8b 74 03 00 00    	mov    0x374(%rbx),%ecx
    f076:	85 c9                	test   %ecx,%ecx
    f078:	75 f6                	jne    f070 <dlfree+0x1c0>
    f07a:	89 f9                	mov    %edi,%ecx
    f07c:	87 0e                	xchg   %ecx,(%rsi)
    f07e:	85 c9                	test   %ecx,%ecx
    f080:	75 ee                	jne    f070 <dlfree+0x1c0>
    f082:	e9 75 fe ff ff       	jmp    eefc <dlfree+0x4c>
    f087:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    f08e:	00 00 
    f090:	e8 a2 32 00 00       	call   12337 <abort>
    f095:	0f 1f 00             	nopl   (%rax)
    f098:	c3                   	ret    
    f099:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f0a0:	4c 8b 5b 20          	mov    0x20(%rbx),%r11
    f0a4:	48 39 7b 28          	cmp    %rdi,0x28(%rbx)
    f0a8:	0f 84 72 05 00 00    	je     f620 <dlfree+0x770>
    f0ae:	49 39 fb             	cmp    %rdi,%r11
    f0b1:	0f 84 91 06 00 00    	je     f748 <dlfree+0x898>
    f0b7:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    f0bb:	48 89 c1             	mov    %rax,%rcx
    f0be:	48 01 c6             	add    %rax,%rsi
    f0c1:	48 c1 e9 03          	shr    $0x3,%rcx
    f0c5:	48 3d f8 00 00 00    	cmp    $0xf8,%rax
    f0cb:	0f 87 67 02 00 00    	ja     f338 <dlfree+0x488>
    f0d1:	44 8d 54 09 09       	lea    0x9(%rcx,%rcx,1),%r10d
    f0d6:	48 8b 47 10          	mov    0x10(%rdi),%rax
    f0da:	4c 8b 47 18          	mov    0x18(%rdi),%r8
    f0de:	4e 8d 14 d3          	lea    (%rbx,%r10,8),%r10
    f0e2:	49 39 c2             	cmp    %rax,%r10
    f0e5:	0f 85 73 04 00 00    	jne    f55e <dlfree+0x6ae>
    f0eb:	4c 39 c0             	cmp    %r8,%rax
    f0ee:	0f 84 7c 06 00 00    	je     f770 <dlfree+0x8c0>
    f0f4:	4d 39 c8             	cmp    %r9,%r8
    f0f7:	72 7f                	jb     f178 <dlfree+0x2c8>
    f0f9:	49 39 78 10          	cmp    %rdi,0x10(%r8)
    f0fd:	75 79                	jne    f178 <dlfree+0x2c8>
    f0ff:	4c 89 40 18          	mov    %r8,0x18(%rax)
    f103:	49 89 40 10          	mov    %rax,0x10(%r8)
    f107:	48 89 f0             	mov    %rsi,%rax
    f10a:	48 83 c8 01          	or     $0x1,%rax
    f10e:	48 89 42 08          	mov    %rax,0x8(%rdx)
    f112:	48 89 34 32          	mov    %rsi,(%rdx,%rsi,1)
    f116:	4c 39 da             	cmp    %r11,%rdx
    f119:	0f 85 47 fe ff ff    	jne    ef66 <dlfree+0xb6>
    f11f:	48 89 73 08          	mov    %rsi,0x8(%rbx)
    f123:	e9 88 fe ff ff       	jmp    efb0 <dlfree+0x100>
    f128:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    f12f:	00 
    f130:	c7 83 74 03 00 00 00 	movl   $0x0,0x374(%rbx)
    f137:	00 00 00 
    f13a:	48 83 c4 08          	add    $0x8,%rsp
    f13e:	5b                   	pop    %rbx
    f13f:	5d                   	pop    %rbp
    f140:	41 5c                	pop    %r12
    f142:	41 5d                	pop    %r13
    f144:	c3                   	ret    
    f145:	0f 1f 00             	nopl   (%rax)
    f148:	48 89 f0             	mov    %rsi,%rax
    f14b:	48 c1 e8 08          	shr    $0x8,%rax
    f14f:	89 c1                	mov    %eax,%ecx
    f151:	85 c0                	test   %eax,%eax
    f153:	74 2b                	je     f180 <dlfree+0x2d0>
    f155:	3d ff ff 00 00       	cmp    $0xffff,%eax
    f15a:	0f 86 a0 02 00 00    	jbe    f400 <dlfree+0x550>
    f160:	b8 00 00 00 80       	mov    $0x80000000,%eax
    f165:	bf 50 03 00 00       	mov    $0x350,%edi
    f16a:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    f16f:	eb 19                	jmp    f18a <dlfree+0x2da>
    f171:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f178:	e8 ba 31 00 00       	call   12337 <abort>
    f17d:	0f 1f 00             	nopl   (%rax)
    f180:	b8 01 00 00 00       	mov    $0x1,%eax
    f185:	bf 58 02 00 00       	mov    $0x258,%edi
    f18a:	44 8b 43 04          	mov    0x4(%rbx),%r8d
    f18e:	66 48 0f 6e ca       	movq   %rdx,%xmm1
    f193:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f197:	89 4a 38             	mov    %ecx,0x38(%rdx)
    f19a:	66 0f 6c c9          	punpcklqdq %xmm1,%xmm1
    f19e:	0f 11 42 20          	movups %xmm0,0x20(%rdx)
    f1a2:	44 85 c0             	test   %r8d,%eax
    f1a5:	0f 84 2d 04 00 00    	je     f5d8 <dlfree+0x728>
    f1ab:	89 c8                	mov    %ecx,%eax
    f1ad:	49 89 f0             	mov    %rsi,%r8
    f1b0:	48 8b bc c3 58 02 00 	mov    0x258(%rbx,%rax,8),%rdi
    f1b7:	00 
    f1b8:	83 f9 1f             	cmp    $0x1f,%ecx
    f1bb:	74 31                	je     f1ee <dlfree+0x33e>
    f1bd:	89 c8                	mov    %ecx,%eax
    f1bf:	b9 39 00 00 00       	mov    $0x39,%ecx
    f1c4:	d1 e8                	shr    %eax
    f1c6:	29 c1                	sub    %eax,%ecx
    f1c8:	49 d3 e0             	shl    %cl,%r8
    f1cb:	eb 21                	jmp    f1ee <dlfree+0x33e>
    f1cd:	0f 1f 00             	nopl   (%rax)
    f1d0:	4c 89 c0             	mov    %r8,%rax
    f1d3:	4d 01 c0             	add    %r8,%r8
    f1d6:	48 c1 e8 3f          	shr    $0x3f,%rax
    f1da:	48 83 c0 04          	add    $0x4,%rax
    f1de:	48 8b 0c c7          	mov    (%rdi,%rax,8),%rcx
    f1e2:	48 85 c9             	test   %rcx,%rcx
    f1e5:	0f 84 15 04 00 00    	je     f600 <dlfree+0x750>
    f1eb:	48 89 cf             	mov    %rcx,%rdi
    f1ee:	48 8b 47 08          	mov    0x8(%rdi),%rax
    f1f2:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    f1f6:	48 39 f0             	cmp    %rsi,%rax
    f1f9:	75 d5                	jne    f1d0 <dlfree+0x320>
    f1fb:	48 8b 47 10          	mov    0x10(%rdi),%rax
    f1ff:	66 48 0f 6e d7       	movq   %rdi,%xmm2
    f204:	66 48 0f 6e c0       	movq   %rax,%xmm0
    f209:	66 0f 6c c2          	punpcklqdq %xmm2,%xmm0
    f20d:	4c 39 cf             	cmp    %r9,%rdi
    f210:	0f 82 62 ff ff ff    	jb     f178 <dlfree+0x2c8>
    f216:	4c 39 c8             	cmp    %r9,%rax
    f219:	0f 82 59 ff ff ff    	jb     f178 <dlfree+0x2c8>
    f21f:	48 89 50 18          	mov    %rdx,0x18(%rax)
    f223:	48 89 57 10          	mov    %rdx,0x10(%rdi)
    f227:	48 c7 42 30 00 00 00 	movq   $0x0,0x30(%rdx)
    f22e:	00 
    f22f:	0f 11 42 10          	movups %xmm0,0x10(%rdx)
    f233:	48 83 6b 38 01       	subq   $0x1,0x38(%rbx)
    f238:	0f 85 72 fd ff ff    	jne    efb0 <dlfree+0x100>
    f23e:	48 8b 83 88 03 00 00 	mov    0x388(%rbx),%rax
    f245:	48 85 c0             	test   %rax,%rax
    f248:	74 0f                	je     f259 <dlfree+0x3a9>
    f24a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    f250:	48 8b 40 10          	mov    0x10(%rax),%rax
    f254:	48 85 c0             	test   %rax,%rax
    f257:	75 f7                	jne    f250 <dlfree+0x3a0>
    f259:	48 c7 43 38 ff ff ff 	movq   $0xffffffffffffffff,0x38(%rbx)
    f260:	ff 
    f261:	e9 4a fd ff ff       	jmp    efb0 <dlfree+0x100>
    f266:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    f26d:	00 00 00 
    f270:	4c 8b 42 18          	mov    0x18(%rdx),%r8
    f274:	4c 8b 5a 30          	mov    0x30(%rdx),%r11
    f278:	49 39 d0             	cmp    %rdx,%r8
    f27b:	0f 84 bf 01 00 00    	je     f440 <dlfree+0x590>
    f281:	48 8b 42 10          	mov    0x10(%rdx),%rax
    f285:	4c 39 c8             	cmp    %r9,%rax
    f288:	0f 82 ea fe ff ff    	jb     f178 <dlfree+0x2c8>
    f28e:	48 39 50 18          	cmp    %rdx,0x18(%rax)
    f292:	0f 85 e0 fe ff ff    	jne    f178 <dlfree+0x2c8>
    f298:	49 39 50 10          	cmp    %rdx,0x10(%r8)
    f29c:	0f 85 d6 fe ff ff    	jne    f178 <dlfree+0x2c8>
    f2a2:	4c 89 40 18          	mov    %r8,0x18(%rax)
    f2a6:	49 89 40 10          	mov    %rax,0x10(%r8)
    f2aa:	4d 85 db             	test   %r11,%r11
    f2ad:	0f 84 7f fc ff ff    	je     ef32 <dlfree+0x82>
    f2b3:	8b 42 38             	mov    0x38(%rdx),%eax
    f2b6:	48 89 c1             	mov    %rax,%rcx
    f2b9:	4c 8d 50 4a          	lea    0x4a(%rax),%r10
    f2bd:	48 39 94 c3 58 02 00 	cmp    %rdx,0x258(%rbx,%rax,8)
    f2c4:	00 
    f2c5:	0f 84 c8 04 00 00    	je     f793 <dlfree+0x8e3>
    f2cb:	4d 39 cb             	cmp    %r9,%r11
    f2ce:	0f 82 a4 fe ff ff    	jb     f178 <dlfree+0x2c8>
    f2d4:	49 39 53 20          	cmp    %rdx,0x20(%r11)
    f2d8:	0f 84 4a 05 00 00    	je     f828 <dlfree+0x978>
    f2de:	4d 89 43 28          	mov    %r8,0x28(%r11)
    f2e2:	4d 85 c0             	test   %r8,%r8
    f2e5:	0f 84 47 fc ff ff    	je     ef32 <dlfree+0x82>
    f2eb:	4d 39 c8             	cmp    %r9,%r8
    f2ee:	0f 82 84 fe ff ff    	jb     f178 <dlfree+0x2c8>
    f2f4:	48 8b 42 20          	mov    0x20(%rdx),%rax
    f2f8:	4d 89 58 30          	mov    %r11,0x30(%r8)
    f2fc:	48 85 c0             	test   %rax,%rax
    f2ff:	74 11                	je     f312 <dlfree+0x462>
    f301:	4c 39 c8             	cmp    %r9,%rax
    f304:	0f 82 6e fe ff ff    	jb     f178 <dlfree+0x2c8>
    f30a:	49 89 40 20          	mov    %rax,0x20(%r8)
    f30e:	4c 89 40 30          	mov    %r8,0x30(%rax)
    f312:	48 8b 42 28          	mov    0x28(%rdx),%rax
    f316:	48 85 c0             	test   %rax,%rax
    f319:	0f 84 13 fc ff ff    	je     ef32 <dlfree+0x82>
    f31f:	4c 39 c8             	cmp    %r9,%rax
    f322:	0f 82 50 fe ff ff    	jb     f178 <dlfree+0x2c8>
    f328:	49 89 40 28          	mov    %rax,0x28(%r8)
    f32c:	4c 89 40 30          	mov    %r8,0x30(%rax)
    f330:	e9 fd fb ff ff       	jmp    ef32 <dlfree+0x82>
    f335:	0f 1f 00             	nopl   (%rax)
    f338:	4c 8b 47 18          	mov    0x18(%rdi),%r8
    f33c:	48 8b 6f 30          	mov    0x30(%rdi),%rbp
    f340:	49 39 f8             	cmp    %rdi,%r8
    f343:	0f 84 7f 01 00 00    	je     f4c8 <dlfree+0x618>
    f349:	48 8b 47 10          	mov    0x10(%rdi),%rax
    f34d:	4c 39 c8             	cmp    %r9,%rax
    f350:	0f 82 22 fe ff ff    	jb     f178 <dlfree+0x2c8>
    f356:	48 39 78 18          	cmp    %rdi,0x18(%rax)
    f35a:	0f 85 18 fe ff ff    	jne    f178 <dlfree+0x2c8>
    f360:	49 39 78 10          	cmp    %rdi,0x10(%r8)
    f364:	0f 85 0e fe ff ff    	jne    f178 <dlfree+0x2c8>
    f36a:	4c 89 40 18          	mov    %r8,0x18(%rax)
    f36e:	49 89 40 10          	mov    %rax,0x10(%r8)
    f372:	48 85 ed             	test   %rbp,%rbp
    f375:	0f 84 8c fd ff ff    	je     f107 <dlfree+0x257>
    f37b:	8b 47 38             	mov    0x38(%rdi),%eax
    f37e:	48 89 c1             	mov    %rax,%rcx
    f381:	4c 8d 50 4a          	lea    0x4a(%rax),%r10
    f385:	48 39 bc c3 58 02 00 	cmp    %rdi,0x258(%rbx,%rax,8)
    f38c:	00 
    f38d:	0f 84 1d 04 00 00    	je     f7b0 <dlfree+0x900>
    f393:	4c 39 cd             	cmp    %r9,%rbp
    f396:	0f 82 dc fd ff ff    	jb     f178 <dlfree+0x2c8>
    f39c:	48 39 7d 20          	cmp    %rdi,0x20(%rbp)
    f3a0:	0f 84 8b 04 00 00    	je     f831 <dlfree+0x981>
    f3a6:	4c 89 45 28          	mov    %r8,0x28(%rbp)
    f3aa:	4d 85 c0             	test   %r8,%r8
    f3ad:	0f 84 54 fd ff ff    	je     f107 <dlfree+0x257>
    f3b3:	4d 39 c8             	cmp    %r9,%r8
    f3b6:	0f 82 bc fd ff ff    	jb     f178 <dlfree+0x2c8>
    f3bc:	48 8b 47 20          	mov    0x20(%rdi),%rax
    f3c0:	49 89 68 30          	mov    %rbp,0x30(%r8)
    f3c4:	48 85 c0             	test   %rax,%rax
    f3c7:	74 11                	je     f3da <dlfree+0x52a>
    f3c9:	4c 39 c8             	cmp    %r9,%rax
    f3cc:	0f 82 a6 fd ff ff    	jb     f178 <dlfree+0x2c8>
    f3d2:	49 89 40 20          	mov    %rax,0x20(%r8)
    f3d6:	4c 89 40 30          	mov    %r8,0x30(%rax)
    f3da:	48 8b 47 28          	mov    0x28(%rdi),%rax
    f3de:	48 85 c0             	test   %rax,%rax
    f3e1:	0f 84 20 fd ff ff    	je     f107 <dlfree+0x257>
    f3e7:	4c 39 c8             	cmp    %r9,%rax
    f3ea:	0f 82 88 fd ff ff    	jb     f178 <dlfree+0x2c8>
    f3f0:	49 89 40 28          	mov    %rax,0x28(%r8)
    f3f4:	4c 89 40 30          	mov    %r8,0x30(%rax)
    f3f8:	e9 0a fd ff ff       	jmp    f107 <dlfree+0x257>
    f3fd:	0f 1f 00             	nopl   (%rax)
    f400:	0f bd c1             	bsr    %ecx,%eax
    f403:	b9 26 00 00 00       	mov    $0x26,%ecx
    f408:	48 89 f7             	mov    %rsi,%rdi
    f40b:	83 f0 1f             	xor    $0x1f,%eax
    f40e:	29 c1                	sub    %eax,%ecx
    f410:	48 d3 ef             	shr    %cl,%rdi
    f413:	48 89 f9             	mov    %rdi,%rcx
    f416:	bf 1f 00 00 00       	mov    $0x1f,%edi
    f41b:	29 c7                	sub    %eax,%edi
    f41d:	83 e1 01             	and    $0x1,%ecx
    f420:	b8 01 00 00 00       	mov    $0x1,%eax
    f425:	8d 0c 79             	lea    (%rcx,%rdi,2),%ecx
    f428:	8d 79 4b             	lea    0x4b(%rcx),%edi
    f42b:	d3 e0                	shl    %cl,%eax
    f42d:	48 c1 e7 03          	shl    $0x3,%rdi
    f431:	e9 54 fd ff ff       	jmp    f18a <dlfree+0x2da>
    f436:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    f43d:	00 00 00 
    f440:	48 8b 42 28          	mov    0x28(%rdx),%rax
    f444:	48 8d 4a 28          	lea    0x28(%rdx),%rcx
    f448:	48 85 c0             	test   %rax,%rax
    f44b:	0f 84 af 03 00 00    	je     f800 <dlfree+0x950>
    f451:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f458:	49 89 ca             	mov    %rcx,%r10
    f45b:	49 89 c0             	mov    %rax,%r8
    f45e:	48 8d 48 28          	lea    0x28(%rax),%rcx
    f462:	48 8b 40 28          	mov    0x28(%rax),%rax
    f466:	48 85 c0             	test   %rax,%rax
    f469:	75 ed                	jne    f458 <dlfree+0x5a8>
    f46b:	49 8b 40 20          	mov    0x20(%r8),%rax
    f46f:	49 8d 48 20          	lea    0x20(%r8),%rcx
    f473:	48 85 c0             	test   %rax,%rax
    f476:	75 e0                	jne    f458 <dlfree+0x5a8>
    f478:	4d 39 ca             	cmp    %r9,%r10
    f47b:	0f 82 f7 fc ff ff    	jb     f178 <dlfree+0x2c8>
    f481:	49 c7 02 00 00 00 00 	movq   $0x0,(%r10)
    f488:	4d 85 db             	test   %r11,%r11
    f48b:	0f 84 a1 fa ff ff    	je     ef32 <dlfree+0x82>
    f491:	8b 42 38             	mov    0x38(%rdx),%eax
    f494:	48 8d 48 4a          	lea    0x4a(%rax),%rcx
    f498:	48 39 94 c3 58 02 00 	cmp    %rdx,0x258(%rbx,%rax,8)
    f49f:	00 
    f4a0:	0f 84 a2 03 00 00    	je     f848 <dlfree+0x998>
    f4a6:	4d 39 cb             	cmp    %r9,%r11
    f4a9:	0f 82 c9 fc ff ff    	jb     f178 <dlfree+0x2c8>
    f4af:	49 39 53 20          	cmp    %rdx,0x20(%r11)
    f4b3:	0f 84 ac 03 00 00    	je     f865 <dlfree+0x9b5>
    f4b9:	4d 89 43 28          	mov    %r8,0x28(%r11)
    f4bd:	e9 29 fe ff ff       	jmp    f2eb <dlfree+0x43b>
    f4c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    f4c8:	48 8b 47 28          	mov    0x28(%rdi),%rax
    f4cc:	48 8d 4f 28          	lea    0x28(%rdi),%rcx
    f4d0:	48 85 c0             	test   %rax,%rax
    f4d3:	0f 84 39 03 00 00    	je     f812 <dlfree+0x962>
    f4d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f4e0:	49 89 ca             	mov    %rcx,%r10
    f4e3:	49 89 c0             	mov    %rax,%r8
    f4e6:	48 8d 48 28          	lea    0x28(%rax),%rcx
    f4ea:	48 8b 40 28          	mov    0x28(%rax),%rax
    f4ee:	48 85 c0             	test   %rax,%rax
    f4f1:	75 ed                	jne    f4e0 <dlfree+0x630>
    f4f3:	49 8b 40 20          	mov    0x20(%r8),%rax
    f4f7:	49 8d 48 20          	lea    0x20(%r8),%rcx
    f4fb:	48 85 c0             	test   %rax,%rax
    f4fe:	75 e0                	jne    f4e0 <dlfree+0x630>
    f500:	4d 39 ca             	cmp    %r9,%r10
    f503:	0f 82 6f fc ff ff    	jb     f178 <dlfree+0x2c8>
    f509:	49 c7 02 00 00 00 00 	movq   $0x0,(%r10)
    f510:	48 85 ed             	test   %rbp,%rbp
    f513:	0f 84 ee fb ff ff    	je     f107 <dlfree+0x257>
    f519:	8b 47 38             	mov    0x38(%rdi),%eax
    f51c:	48 8d 48 4a          	lea    0x4a(%rax),%rcx
    f520:	48 39 bc c3 58 02 00 	cmp    %rdi,0x258(%rbx,%rax,8)
    f527:	00 
    f528:	0f 84 24 03 00 00    	je     f852 <dlfree+0x9a2>
    f52e:	4c 39 cd             	cmp    %r9,%rbp
    f531:	0f 82 41 fc ff ff    	jb     f178 <dlfree+0x2c8>
    f537:	48 39 7d 20          	cmp    %rdi,0x20(%rbp)
    f53b:	0f 84 1b 03 00 00    	je     f85c <dlfree+0x9ac>
    f541:	4c 89 45 28          	mov    %r8,0x28(%rbp)
    f545:	e9 69 fe ff ff       	jmp    f3b3 <dlfree+0x503>
    f54a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    f550:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    f555:	d3 c0                	rol    %cl,%eax
    f557:	21 03                	and    %eax,(%rbx)
    f559:	e9 d4 f9 ff ff       	jmp    ef32 <dlfree+0x82>
    f55e:	4c 39 c8             	cmp    %r9,%rax
    f561:	0f 82 11 fc ff ff    	jb     f178 <dlfree+0x2c8>
    f567:	48 39 78 18          	cmp    %rdi,0x18(%rax)
    f56b:	0f 85 07 fc ff ff    	jne    f178 <dlfree+0x2c8>
    f571:	4c 39 c0             	cmp    %r8,%rax
    f574:	0f 84 f6 01 00 00    	je     f770 <dlfree+0x8c0>
    f57a:	4d 39 c2             	cmp    %r8,%r10
    f57d:	0f 84 7c fb ff ff    	je     f0ff <dlfree+0x24f>
    f583:	e9 6c fb ff ff       	jmp    f0f4 <dlfree+0x244>
    f588:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    f58f:	00 
    f590:	48 8b 47 08          	mov    0x8(%rdi),%rax
    f594:	48 89 c1             	mov    %rax,%rcx
    f597:	48 f7 d1             	not    %rcx
    f59a:	83 e1 03             	and    $0x3,%ecx
    f59d:	0f 85 8f f9 ff ff    	jne    ef32 <dlfree+0x82>
    f5a3:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    f5a7:	48 89 73 08          	mov    %rsi,0x8(%rbx)
    f5ab:	48 89 47 08          	mov    %rax,0x8(%rdi)
    f5af:	48 89 f0             	mov    %rsi,%rax
    f5b2:	48 83 c8 01          	or     $0x1,%rax
    f5b6:	48 89 42 08          	mov    %rax,0x8(%rdx)
    f5ba:	48 89 37             	mov    %rsi,(%rdi)
    f5bd:	e9 ee f9 ff ff       	jmp    efb0 <dlfree+0x100>
    f5c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    f5c8:	09 c7                	or     %eax,%edi
    f5ca:	48 89 f0             	mov    %rsi,%rax
    f5cd:	89 3b                	mov    %edi,(%rbx)
    f5cf:	e9 cc f9 ff ff       	jmp    efa0 <dlfree+0xf0>
    f5d4:	0f 1f 40 00          	nopl   0x0(%rax)
    f5d8:	44 09 c0             	or     %r8d,%eax
    f5db:	48 01 df             	add    %rbx,%rdi
    f5de:	89 43 04             	mov    %eax,0x4(%rbx)
    f5e1:	48 89 94 cb 58 02 00 	mov    %rdx,0x258(%rbx,%rcx,8)
    f5e8:	00 
    f5e9:	48 89 7a 30          	mov    %rdi,0x30(%rdx)
    f5ed:	0f 11 4a 10          	movups %xmm1,0x10(%rdx)
    f5f1:	e9 3d fc ff ff       	jmp    f233 <dlfree+0x383>
    f5f6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    f5fd:	00 00 00 
    f600:	48 8d 0c c7          	lea    (%rdi,%rax,8),%rcx
    f604:	4c 39 c9             	cmp    %r9,%rcx
    f607:	0f 82 6b fb ff ff    	jb     f178 <dlfree+0x2c8>
    f60d:	48 89 14 c7          	mov    %rdx,(%rdi,%rax,8)
    f611:	48 89 7a 30          	mov    %rdi,0x30(%rdx)
    f615:	0f 11 4a 10          	movups %xmm1,0x10(%rdx)
    f619:	e9 15 fc ff ff       	jmp    f233 <dlfree+0x383>
    f61e:	66 90                	xchg   %ax,%ax
    f620:	48 03 73 10          	add    0x10(%rbx),%rsi
    f624:	48 89 53 28          	mov    %rdx,0x28(%rbx)
    f628:	48 89 f0             	mov    %rsi,%rax
    f62b:	48 89 73 10          	mov    %rsi,0x10(%rbx)
    f62f:	48 83 c8 01          	or     $0x1,%rax
    f633:	48 89 42 08          	mov    %rax,0x8(%rdx)
    f637:	4c 39 da             	cmp    %r11,%rdx
    f63a:	0f 84 3e 01 00 00    	je     f77e <dlfree+0x8ce>
    f640:	48 39 73 30          	cmp    %rsi,0x30(%rbx)
    f644:	0f 83 66 f9 ff ff    	jae    efb0 <dlfree+0x100>
    f64a:	48 83 3d ae b7 01 00 	cmpq   $0x0,0x1b7ae(%rip)        # 2ae00 <mparams>
    f651:	00 
    f652:	0f 84 e2 01 00 00    	je     f83a <dlfree+0x98a>
    f658:	48 85 d2             	test   %rdx,%rdx
    f65b:	0f 84 4f f9 ff ff    	je     efb0 <dlfree+0x100>
    f661:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
    f665:	48 83 f9 50          	cmp    $0x50,%rcx
    f669:	0f 86 a7 00 00 00    	jbe    f716 <dlfree+0x866>
    f66f:	48 8b 35 9a b7 01 00 	mov    0x1b79a(%rip),%rsi        # 2ae10 <mparams+0x10>
    f676:	48 8d ab 78 03 00 00 	lea    0x378(%rbx),%rbp
    f67d:	0f 1f 00             	nopl   (%rax)
    f680:	48 8b 45 00          	mov    0x0(%rbp),%rax
    f684:	48 39 c2             	cmp    %rax,%rdx
    f687:	72 09                	jb     f692 <dlfree+0x7e2>
    f689:	48 03 45 08          	add    0x8(%rbp),%rax
    f68d:	48 39 c2             	cmp    %rax,%rdx
    f690:	72 09                	jb     f69b <dlfree+0x7eb>
    f692:	48 8b 6d 10          	mov    0x10(%rbp),%rbp
    f696:	48 85 ed             	test   %rbp,%rbp
    f699:	75 e5                	jne    f680 <dlfree+0x7d0>
    f69b:	f6 45 18 08          	testb  $0x8,0x18(%rbp)
    f69f:	75 75                	jne    f716 <dlfree+0x866>
    f6a1:	48 8d 44 31 af       	lea    -0x51(%rcx,%rsi,1),%rax
    f6a6:	31 d2                	xor    %edx,%edx
    f6a8:	48 f7 f6             	div    %rsi
    f6ab:	48 83 e8 01          	sub    $0x1,%rax
    f6af:	48 0f af c6          	imul   %rsi,%rax
    f6b3:	49 89 c4             	mov    %rax,%r12
    f6b6:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
    f6bd:	ff ff 7f 
    f6c0:	4c 39 e0             	cmp    %r12,%rax
    f6c3:	73 0d                	jae    f6d2 <dlfree+0x822>
    f6c5:	49 bc 00 00 00 00 00 	movabs $0x8000000000000000,%r12
    f6cc:	00 00 80 
    f6cf:	49 29 f4             	sub    %rsi,%r12
    f6d2:	b8 01 00 00 00       	mov    $0x1,%eax
    f6d7:	87 05 53 b7 01 00    	xchg   %eax,0x1b753(%rip)        # 2ae30 <malloc_global_mutex>
    f6dd:	48 8d 15 4c b7 01 00 	lea    0x1b74c(%rip),%rdx        # 2ae30 <malloc_global_mutex>
    f6e4:	b9 01 00 00 00       	mov    $0x1,%ecx
    f6e9:	85 c0                	test   %eax,%eax
    f6eb:	75 40                	jne    f72d <dlfree+0x87d>
    f6ed:	31 ff                	xor    %edi,%edi
    f6ef:	e8 ec ce ff ff       	call   c5e0 <sbrk>
    f6f4:	49 89 c5             	mov    %rax,%r13
    f6f7:	48 8b 45 08          	mov    0x8(%rbp),%rax
    f6fb:	48 03 45 00          	add    0x0(%rbp),%rax
    f6ff:	49 39 c5             	cmp    %rax,%r13
    f702:	0f 84 e5 01 00 00    	je     f8ed <dlfree+0xa3d>
    f708:	c7 05 1e b7 01 00 00 	movl   $0x0,0x1b71e(%rip)        # 2ae30 <malloc_global_mutex>
    f70f:	00 00 00 
    f712:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
    f716:	48 39 4b 30          	cmp    %rcx,0x30(%rbx)
    f71a:	0f 83 90 f8 ff ff    	jae    efb0 <dlfree+0x100>
    f720:	48 c7 43 30 ff ff ff 	movq   $0xffffffffffffffff,0x30(%rbx)
    f727:	ff 
    f728:	e9 83 f8 ff ff       	jmp    efb0 <dlfree+0x100>
    f72d:	8b 02                	mov    (%rdx),%eax
    f72f:	85 c0                	test   %eax,%eax
    f731:	75 fa                	jne    f72d <dlfree+0x87d>
    f733:	89 c8                	mov    %ecx,%eax
    f735:	87 05 f5 b6 01 00    	xchg   %eax,0x1b6f5(%rip)        # 2ae30 <malloc_global_mutex>
    f73b:	85 c0                	test   %eax,%eax
    f73d:	75 ee                	jne    f72d <dlfree+0x87d>
    f73f:	eb ac                	jmp    f6ed <dlfree+0x83d>
    f741:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f748:	48 03 73 08          	add    0x8(%rbx),%rsi
    f74c:	48 89 53 20          	mov    %rdx,0x20(%rbx)
    f750:	48 89 f0             	mov    %rsi,%rax
    f753:	48 89 73 08          	mov    %rsi,0x8(%rbx)
    f757:	48 83 c8 01          	or     $0x1,%rax
    f75b:	48 89 42 08          	mov    %rax,0x8(%rdx)
    f75f:	48 89 34 32          	mov    %rsi,(%rdx,%rsi,1)
    f763:	e9 48 f8 ff ff       	jmp    efb0 <dlfree+0x100>
    f768:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    f76f:	00 
    f770:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    f775:	d3 c0                	rol    %cl,%eax
    f777:	21 03                	and    %eax,(%rbx)
    f779:	e9 89 f9 ff ff       	jmp    f107 <dlfree+0x257>
    f77e:	48 c7 43 20 00 00 00 	movq   $0x0,0x20(%rbx)
    f785:	00 
    f786:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
    f78d:	00 
    f78e:	e9 ad fe ff ff       	jmp    f640 <dlfree+0x790>
    f793:	4e 89 44 d3 08       	mov    %r8,0x8(%rbx,%r10,8)
    f798:	4d 85 c0             	test   %r8,%r8
    f79b:	0f 85 4a fb ff ff    	jne    f2eb <dlfree+0x43b>
    f7a1:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    f7a6:	d3 c0                	rol    %cl,%eax
    f7a8:	21 43 04             	and    %eax,0x4(%rbx)
    f7ab:	e9 82 f7 ff ff       	jmp    ef32 <dlfree+0x82>
    f7b0:	4e 89 44 d3 08       	mov    %r8,0x8(%rbx,%r10,8)
    f7b5:	4d 85 c0             	test   %r8,%r8
    f7b8:	0f 85 f5 fb ff ff    	jne    f3b3 <dlfree+0x503>
    f7be:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    f7c3:	d3 c0                	rol    %cl,%eax
    f7c5:	21 43 04             	and    %eax,0x4(%rbx)
    f7c8:	e9 3a f9 ff ff       	jmp    f107 <dlfree+0x257>
    f7cd:	4c 39 c8             	cmp    %r9,%rax
    f7d0:	0f 82 a2 f9 ff ff    	jb     f178 <dlfree+0x2c8>
    f7d6:	48 39 50 18          	cmp    %rdx,0x18(%rax)
    f7da:	0f 85 98 f9 ff ff    	jne    f178 <dlfree+0x2c8>
    f7e0:	4c 39 c0             	cmp    %r8,%rax
    f7e3:	0f 84 67 fd ff ff    	je     f550 <dlfree+0x6a0>
    f7e9:	4d 39 c2             	cmp    %r8,%r10
    f7ec:	0f 84 49 f8 ff ff    	je     f03b <dlfree+0x18b>
    f7f2:	e9 31 f8 ff ff       	jmp    f028 <dlfree+0x178>
    f7f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    f7fe:	00 00 
    f800:	48 8b 42 20          	mov    0x20(%rdx),%rax
    f804:	48 85 c0             	test   %rax,%rax
    f807:	74 65                	je     f86e <dlfree+0x9be>
    f809:	48 8d 4a 20          	lea    0x20(%rdx),%rcx
    f80d:	e9 46 fc ff ff       	jmp    f458 <dlfree+0x5a8>
    f812:	48 8b 47 20          	mov    0x20(%rdi),%rax
    f816:	48 85 c0             	test   %rax,%rax
    f819:	0f 84 8f 00 00 00    	je     f8ae <dlfree+0x9fe>
    f81f:	48 8d 4f 20          	lea    0x20(%rdi),%rcx
    f823:	e9 b8 fc ff ff       	jmp    f4e0 <dlfree+0x630>
    f828:	4d 89 43 20          	mov    %r8,0x20(%r11)
    f82c:	e9 b1 fa ff ff       	jmp    f2e2 <dlfree+0x432>
    f831:	4c 89 45 20          	mov    %r8,0x20(%rbp)
    f835:	e9 70 fb ff ff       	jmp    f3aa <dlfree+0x4fa>
    f83a:	e8 91 d7 ff ff       	call   cfd0 <init_mparams.isra.0>
    f83f:	48 8b 53 28          	mov    0x28(%rbx),%rdx
    f843:	e9 10 fe ff ff       	jmp    f658 <dlfree+0x7a8>
    f848:	4c 89 44 cb 08       	mov    %r8,0x8(%rbx,%rcx,8)
    f84d:	e9 99 fa ff ff       	jmp    f2eb <dlfree+0x43b>
    f852:	4c 89 44 cb 08       	mov    %r8,0x8(%rbx,%rcx,8)
    f857:	e9 57 fb ff ff       	jmp    f3b3 <dlfree+0x503>
    f85c:	4c 89 45 20          	mov    %r8,0x20(%rbp)
    f860:	e9 4e fb ff ff       	jmp    f3b3 <dlfree+0x503>
    f865:	4d 89 43 20          	mov    %r8,0x20(%r11)
    f869:	e9 7d fa ff ff       	jmp    f2eb <dlfree+0x43b>
    f86e:	4d 85 db             	test   %r11,%r11
    f871:	0f 84 bb f6 ff ff    	je     ef32 <dlfree+0x82>
    f877:	8b 42 38             	mov    0x38(%rdx),%eax
    f87a:	48 89 c1             	mov    %rax,%rcx
    f87d:	4c 8d 40 4a          	lea    0x4a(%rax),%r8
    f881:	48 39 94 c3 58 02 00 	cmp    %rdx,0x258(%rbx,%rax,8)
    f888:	00 
    f889:	0f 84 fd 00 00 00    	je     f98c <dlfree+0xadc>
    f88f:	4d 39 cb             	cmp    %r9,%r11
    f892:	0f 82 e0 f8 ff ff    	jb     f178 <dlfree+0x2c8>
    f898:	49 3b 53 20          	cmp    0x20(%r11),%rdx
    f89c:	0f 84 02 01 00 00    	je     f9a4 <dlfree+0xaf4>
    f8a2:	45 31 c0             	xor    %r8d,%r8d
    f8a5:	4d 89 43 28          	mov    %r8,0x28(%r11)
    f8a9:	e9 84 f6 ff ff       	jmp    ef32 <dlfree+0x82>
    f8ae:	48 85 ed             	test   %rbp,%rbp
    f8b1:	0f 84 50 f8 ff ff    	je     f107 <dlfree+0x257>
    f8b7:	8b 47 38             	mov    0x38(%rdi),%eax
    f8ba:	48 89 c1             	mov    %rax,%rcx
    f8bd:	4c 8d 40 4a          	lea    0x4a(%rax),%r8
    f8c1:	48 3b bc c3 58 02 00 	cmp    0x258(%rbx,%rax,8),%rdi
    f8c8:	00 
    f8c9:	0f 84 b1 00 00 00    	je     f980 <dlfree+0xad0>
    f8cf:	4c 39 cd             	cmp    %r9,%rbp
    f8d2:	0f 82 a0 f8 ff ff    	jb     f178 <dlfree+0x2c8>
    f8d8:	48 39 7d 20          	cmp    %rdi,0x20(%rbp)
    f8dc:	0f 84 b7 00 00 00    	je     f999 <dlfree+0xae9>
    f8e2:	31 c0                	xor    %eax,%eax
    f8e4:	48 89 45 28          	mov    %rax,0x28(%rbp)
    f8e8:	e9 1a f8 ff ff       	jmp    f107 <dlfree+0x257>
    f8ed:	4c 89 e7             	mov    %r12,%rdi
    f8f0:	48 f7 df             	neg    %rdi
    f8f3:	e8 e8 cc ff ff       	call   c5e0 <sbrk>
    f8f8:	31 ff                	xor    %edi,%edi
    f8fa:	49 89 c4             	mov    %rax,%r12
    f8fd:	e8 de cc ff ff       	call   c5e0 <sbrk>
    f902:	49 83 c4 01          	add    $0x1,%r12
    f906:	0f 84 fc fd ff ff    	je     f708 <dlfree+0x858>
    f90c:	4c 39 e8             	cmp    %r13,%rax
    f90f:	0f 83 f3 fd ff ff    	jae    f708 <dlfree+0x858>
    f915:	49 29 c5             	sub    %rax,%r13
    f918:	c7 05 0e b5 01 00 00 	movl   $0x0,0x1b50e(%rip)        # 2ae30 <malloc_global_mutex>
    f91f:	00 00 00 
    f922:	48 8b 43 28          	mov    0x28(%rbx),%rax
    f926:	48 8b 53 10          	mov    0x10(%rbx),%rdx
    f92a:	4c 29 6d 08          	sub    %r13,0x8(%rbp)
    f92e:	48 89 c6             	mov    %rax,%rsi
    f931:	4c 29 ea             	sub    %r13,%rdx
    f934:	48 8d 48 10          	lea    0x10(%rax),%rcx
    f938:	4c 29 ab 58 03 00 00 	sub    %r13,0x358(%rbx)
    f93f:	83 e6 0f             	and    $0xf,%esi
    f942:	74 09                	je     f94d <dlfree+0xa9d>
    f944:	48 f7 d9             	neg    %rcx
    f947:	48 89 ce             	mov    %rcx,%rsi
    f94a:	83 e6 0f             	and    $0xf,%esi
    f94d:	48 89 d1             	mov    %rdx,%rcx
    f950:	48 8d 3c 30          	lea    (%rax,%rsi,1),%rdi
    f954:	48 29 f1             	sub    %rsi,%rcx
    f957:	48 89 7b 28          	mov    %rdi,0x28(%rbx)
    f95b:	48 89 4b 10          	mov    %rcx,0x10(%rbx)
    f95f:	48 83 c9 01          	or     $0x1,%rcx
    f963:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
    f967:	48 c7 44 10 08 50 00 	movq   $0x50,0x8(%rax,%rdx,1)
    f96e:	00 00 
    f970:	48 8b 05 a9 b4 01 00 	mov    0x1b4a9(%rip),%rax        # 2ae20 <mparams+0x20>
    f977:	48 89 43 30          	mov    %rax,0x30(%rbx)
    f97b:	e9 30 f6 ff ff       	jmp    efb0 <dlfree+0x100>
    f980:	31 ff                	xor    %edi,%edi
    f982:	4a 89 7c c3 08       	mov    %rdi,0x8(%rbx,%r8,8)
    f987:	e9 32 fe ff ff       	jmp    f7be <dlfree+0x90e>
    f98c:	45 31 db             	xor    %r11d,%r11d
    f98f:	4e 89 5c c3 08       	mov    %r11,0x8(%rbx,%r8,8)
    f994:	e9 08 fe ff ff       	jmp    f7a1 <dlfree+0x8f1>
    f999:	31 c9                	xor    %ecx,%ecx
    f99b:	48 89 4d 20          	mov    %rcx,0x20(%rbp)
    f99f:	e9 63 f7 ff ff       	jmp    f107 <dlfree+0x257>
    f9a4:	45 31 d2             	xor    %r10d,%r10d
    f9a7:	4d 89 53 20          	mov    %r10,0x20(%r11)
    f9ab:	e9 82 f5 ff ff       	jmp    ef32 <dlfree+0x82>

000000000000f9b0 <calloc>:
    f9b0:	f3 0f 1e fa          	endbr64 
    f9b4:	55                   	push   %rbp
    f9b5:	53                   	push   %rbx
    f9b6:	48 89 fb             	mov    %rdi,%rbx
    f9b9:	48 83 ec 08          	sub    $0x8,%rsp
    f9bd:	48 85 ff             	test   %rdi,%rdi
    f9c0:	74 1b                	je     f9dd <calloc+0x2d>
    f9c2:	48 89 f8             	mov    %rdi,%rax
    f9c5:	48 f7 e6             	mul    %rsi
    f9c8:	0f 90 c2             	seto   %dl
    f9cb:	48 09 fe             	or     %rdi,%rsi
    f9ce:	48 89 c3             	mov    %rax,%rbx
    f9d1:	0f b6 d2             	movzbl %dl,%edx
    f9d4:	48 81 fe ff ff 00 00 	cmp    $0xffff,%rsi
    f9db:	77 2b                	ja     fa08 <calloc+0x58>
    f9dd:	48 89 df             	mov    %rbx,%rdi
    f9e0:	e8 db d6 ff ff       	call   d0c0 <dlmalloc>
    f9e5:	48 89 c5             	mov    %rax,%rbp
    f9e8:	48 85 c0             	test   %rax,%rax
    f9eb:	74 0d                	je     f9fa <calloc+0x4a>
    f9ed:	48 89 da             	mov    %rbx,%rdx
    f9f0:	31 f6                	xor    %esi,%esi
    f9f2:	48 89 c7             	mov    %rax,%rdi
    f9f5:	e8 a6 0e 00 00       	call   108a0 <memset>
    f9fa:	48 83 c4 08          	add    $0x8,%rsp
    f9fe:	48 89 e8             	mov    %rbp,%rax
    fa01:	5b                   	pop    %rbx
    fa02:	5d                   	pop    %rbp
    fa03:	c3                   	ret    
    fa04:	0f 1f 40 00          	nopl   0x0(%rax)
    fa08:	48 85 d2             	test   %rdx,%rdx
    fa0b:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    fa12:	48 0f 45 d8          	cmovne %rax,%rbx
    fa16:	eb c5                	jmp    f9dd <calloc+0x2d>
    fa18:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    fa1f:	00 

000000000000fa20 <dlrealloc>:
    fa20:	f3 0f 1e fa          	endbr64 
    fa24:	41 57                	push   %r15
    fa26:	41 56                	push   %r14
    fa28:	41 55                	push   %r13
    fa2a:	41 54                	push   %r12
    fa2c:	55                   	push   %rbp
    fa2d:	53                   	push   %rbx
    fa2e:	48 89 f3             	mov    %rsi,%rbx
    fa31:	48 83 ec 08          	sub    $0x8,%rsp
    fa35:	48 85 ff             	test   %rdi,%rdi
    fa38:	0f 84 f2 01 00 00    	je     fc30 <dlrealloc+0x210>
    fa3e:	48 81 fe 7f ff ff ff 	cmp    $0xffffffffffffff7f,%rsi
    fa45:	0f 87 05 02 00 00    	ja     fc50 <dlrealloc+0x230>
    fa4b:	48 89 fd             	mov    %rdi,%rbp
    fa4e:	48 85 f6             	test   %rsi,%rsi
    fa51:	0f 84 11 02 00 00    	je     fc68 <dlrealloc+0x248>
    fa57:	48 8d 46 1f          	lea    0x1f(%rsi),%rax
    fa5b:	ba 20 00 00 00       	mov    $0x20,%edx
    fa60:	4c 8d 6f f0          	lea    -0x10(%rdi),%r13
    fa64:	48 8b 0d 95 b3 01 00 	mov    0x1b395(%rip),%rcx        # 2ae00 <mparams>
    fa6b:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
    fa6f:	48 83 fe 0e          	cmp    $0xe,%rsi
    fa73:	48 8b 77 f8          	mov    -0x8(%rdi),%rsi
    fa77:	48 0f 46 c2          	cmovbe %rdx,%rax
    fa7b:	48 89 f2             	mov    %rsi,%rdx
    fa7e:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    fa82:	49 8d 7c 15 00       	lea    0x0(%r13,%rdx,1),%rdi
    fa87:	4c 8b 27             	mov    (%rdi),%r12
    fa8a:	49 31 cc             	xor    %rcx,%r12
    fa8d:	49 3b 4c 24 40       	cmp    0x40(%r12),%rcx
    fa92:	0f 85 90 01 00 00    	jne    fc28 <dlrealloc+0x208>
    fa98:	41 f6 84 24 70 03 00 	testb  $0x2,0x370(%r12)
    fa9f:	00 02 
    faa1:	0f 85 89 00 00 00    	jne    fb30 <dlrealloc+0x110>
    faa7:	4d 8b 44 24 18       	mov    0x18(%r12),%r8
    faac:	4d 39 c5             	cmp    %r8,%r13
    faaf:	0f 82 73 01 00 00    	jb     fc28 <dlrealloc+0x208>
    fab5:	48 89 f1             	mov    %rsi,%rcx
    fab8:	83 e1 03             	and    $0x3,%ecx
    fabb:	48 83 f9 01          	cmp    $0x1,%rcx
    fabf:	0f 84 63 01 00 00    	je     fc28 <dlrealloc+0x208>
    fac5:	49 39 fd             	cmp    %rdi,%r13
    fac8:	0f 83 5a 01 00 00    	jae    fc28 <dlrealloc+0x208>
    face:	4c 8b 4f 08          	mov    0x8(%rdi),%r9
    fad2:	41 f6 c1 01          	test   $0x1,%r9b
    fad6:	0f 84 4c 01 00 00    	je     fc28 <dlrealloc+0x208>
    fadc:	48 85 c9             	test   %rcx,%rcx
    fadf:	0f 84 8b 00 00 00    	je     fb70 <dlrealloc+0x150>
    fae5:	48 39 c2             	cmp    %rax,%rdx
    fae8:	0f 82 82 01 00 00    	jb     fc70 <dlrealloc+0x250>
    faee:	48 29 c2             	sub    %rax,%rdx
    faf1:	49 89 d6             	mov    %rdx,%r14
    faf4:	48 83 fa 1f          	cmp    $0x1f,%rdx
    faf8:	0f 87 fa 02 00 00    	ja     fdf8 <dlrealloc+0x3d8>
    fafe:	41 8b 8c 24 70 03 00 	mov    0x370(%r12),%ecx
    fb05:	00 
    fb06:	83 e1 02             	and    $0x2,%ecx
    fb09:	0f 85 31 02 00 00    	jne    fd40 <dlrealloc+0x320>
    fb0f:	4d 85 ed             	test   %r13,%r13
    fb12:	0f 84 94 00 00 00    	je     fbac <dlrealloc+0x18c>
    fb18:	49 89 ec             	mov    %rbp,%r12
    fb1b:	48 83 c4 08          	add    $0x8,%rsp
    fb1f:	4c 89 e0             	mov    %r12,%rax
    fb22:	5b                   	pop    %rbx
    fb23:	5d                   	pop    %rbp
    fb24:	41 5c                	pop    %r12
    fb26:	41 5d                	pop    %r13
    fb28:	41 5e                	pop    %r14
    fb2a:	41 5f                	pop    %r15
    fb2c:	c3                   	ret    
    fb2d:	0f 1f 00             	nopl   (%rax)
    fb30:	49 8d 8c 24 74 03 00 	lea    0x374(%r12),%rcx
    fb37:	00 
    fb38:	ba 01 00 00 00       	mov    $0x1,%edx
    fb3d:	87 11                	xchg   %edx,(%rcx)
    fb3f:	85 d2                	test   %edx,%edx
    fb41:	0f 85 b9 00 00 00    	jne    fc00 <dlrealloc+0x1e0>
    fb47:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    fb4b:	4d 8b 44 24 18       	mov    0x18(%r12),%r8
    fb50:	48 89 f2             	mov    %rsi,%rdx
    fb53:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    fb57:	49 8d 7c 15 00       	lea    0x0(%r13,%rdx,1),%rdi
    fb5c:	4d 39 c5             	cmp    %r8,%r13
    fb5f:	0f 83 50 ff ff ff    	jae    fab5 <dlrealloc+0x95>
    fb65:	e9 be 00 00 00       	jmp    fc28 <dlrealloc+0x208>
    fb6a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    fb70:	41 8b 8c 24 70 03 00 	mov    0x370(%r12),%ecx
    fb77:	00 
    fb78:	89 ce                	mov    %ecx,%esi
    fb7a:	83 e6 02             	and    $0x2,%esi
    fb7d:	48 3d f8 00 00 00    	cmp    $0xf8,%rax
    fb83:	76 1f                	jbe    fba4 <dlrealloc+0x184>
    fb85:	48 8d 78 08          	lea    0x8(%rax),%rdi
    fb89:	48 39 fa             	cmp    %rdi,%rdx
    fb8c:	72 16                	jb     fba4 <dlrealloc+0x184>
    fb8e:	48 29 c2             	sub    %rax,%rdx
    fb91:	48 8b 05 78 b2 01 00 	mov    0x1b278(%rip),%rax        # 2ae10 <mparams+0x10>
    fb98:	48 01 c0             	add    %rax,%rax
    fb9b:	48 39 d0             	cmp    %rdx,%rax
    fb9e:	0f 83 62 ff ff ff    	jae    fb06 <dlrealloc+0xe6>
    fba4:	85 f6                	test   %esi,%esi
    fba6:	0f 85 c4 01 00 00    	jne    fd70 <dlrealloc+0x350>
    fbac:	48 89 df             	mov    %rbx,%rdi
    fbaf:	e8 0c d5 ff ff       	call   d0c0 <dlmalloc>
    fbb4:	49 89 c4             	mov    %rax,%r12
    fbb7:	48 85 c0             	test   %rax,%rax
    fbba:	0f 84 5b ff ff ff    	je     fb1b <dlrealloc+0xfb>
    fbc0:	4c 8b 6d f8          	mov    -0x8(%rbp),%r13
    fbc4:	48 89 ee             	mov    %rbp,%rsi
    fbc7:	48 89 c7             	mov    %rax,%rdi
    fbca:	49 83 e5 f8          	and    $0xfffffffffffffff8,%r13
    fbce:	49 83 ed 10          	sub    $0x10,%r13
    fbd2:	4c 39 eb             	cmp    %r13,%rbx
    fbd5:	49 0f 47 dd          	cmova  %r13,%rbx
    fbd9:	48 89 da             	mov    %rbx,%rdx
    fbdc:	e8 7f 0a 00 00       	call   10660 <memcpy>
    fbe1:	48 89 ef             	mov    %rbp,%rdi
    fbe4:	4c 89 ea             	mov    %r13,%rdx
    fbe7:	31 f6                	xor    %esi,%esi
    fbe9:	e8 b2 0c 00 00       	call   108a0 <memset>
    fbee:	48 89 ef             	mov    %rbp,%rdi
    fbf1:	e8 ba f2 ff ff       	call   eeb0 <dlfree>
    fbf6:	e9 20 ff ff ff       	jmp    fb1b <dlrealloc+0xfb>
    fbfb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    fc00:	be 01 00 00 00       	mov    $0x1,%esi
    fc05:	0f 1f 00             	nopl   (%rax)
    fc08:	41 8b 94 24 74 03 00 	mov    0x374(%r12),%edx
    fc0f:	00 
    fc10:	85 d2                	test   %edx,%edx
    fc12:	75 f4                	jne    fc08 <dlrealloc+0x1e8>
    fc14:	89 f2                	mov    %esi,%edx
    fc16:	87 11                	xchg   %edx,(%rcx)
    fc18:	85 d2                	test   %edx,%edx
    fc1a:	75 ec                	jne    fc08 <dlrealloc+0x1e8>
    fc1c:	e9 26 ff ff ff       	jmp    fb47 <dlrealloc+0x127>
    fc21:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    fc28:	e8 0a 27 00 00       	call   12337 <abort>
    fc2d:	0f 1f 00             	nopl   (%rax)
    fc30:	48 83 c4 08          	add    $0x8,%rsp
    fc34:	48 89 f7             	mov    %rsi,%rdi
    fc37:	5b                   	pop    %rbx
    fc38:	5d                   	pop    %rbp
    fc39:	41 5c                	pop    %r12
    fc3b:	41 5d                	pop    %r13
    fc3d:	41 5e                	pop    %r14
    fc3f:	41 5f                	pop    %r15
    fc41:	e9 7a d4 ff ff       	jmp    d0c0 <dlmalloc>
    fc46:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    fc4d:	00 00 00 
    fc50:	e8 eb 11 00 00       	call   10e40 <__errno_location>
    fc55:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
    fc5b:	45 31 e4             	xor    %r12d,%r12d
    fc5e:	e9 b8 fe ff ff       	jmp    fb1b <dlrealloc+0xfb>
    fc63:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    fc68:	e8 43 f2 ff ff       	call   eeb0 <dlfree>
    fc6d:	eb ec                	jmp    fc5b <dlrealloc+0x23b>
    fc6f:	90                   	nop
    fc70:	49 39 7c 24 28       	cmp    %rdi,0x28(%r12)
    fc75:	0f 84 d5 01 00 00    	je     fe50 <dlrealloc+0x430>
    fc7b:	49 39 7c 24 20       	cmp    %rdi,0x20(%r12)
    fc80:	0f 84 02 01 00 00    	je     fd88 <dlrealloc+0x368>
    fc86:	41 f6 c1 02          	test   $0x2,%r9b
    fc8a:	0f 85 c8 00 00 00    	jne    fd58 <dlrealloc+0x338>
    fc90:	49 83 e1 f8          	and    $0xfffffffffffffff8,%r9
    fc94:	4e 8d 14 0a          	lea    (%rdx,%r9,1),%r10
    fc98:	49 39 c2             	cmp    %rax,%r10
    fc9b:	0f 82 b7 00 00 00    	jb     fd58 <dlrealloc+0x338>
    fca1:	4c 89 d2             	mov    %r10,%rdx
    fca4:	4c 89 c9             	mov    %r9,%rcx
    fca7:	48 29 c2             	sub    %rax,%rdx
    fcaa:	48 c1 e9 03          	shr    $0x3,%rcx
    fcae:	49 81 f9 f8 00 00 00 	cmp    $0xf8,%r9
    fcb5:	0f 87 f2 01 00 00    	ja     fead <dlrealloc+0x48d>
    fcbb:	44 8d 74 09 09       	lea    0x9(%rcx,%rcx,1),%r14d
    fcc0:	4c 8b 4f 10          	mov    0x10(%rdi),%r9
    fcc4:	4c 8b 5f 18          	mov    0x18(%rdi),%r11
    fcc8:	4f 8d 34 f4          	lea    (%r12,%r14,8),%r14
    fccc:	4d 39 f1             	cmp    %r14,%r9
    fccf:	0f 85 c6 03 00 00    	jne    1009b <dlrealloc+0x67b>
    fcd5:	4d 39 cb             	cmp    %r9,%r11
    fcd8:	0f 84 7c 03 00 00    	je     1005a <dlrealloc+0x63a>
    fcde:	4d 39 c3             	cmp    %r8,%r11
    fce1:	0f 82 41 ff ff ff    	jb     fc28 <dlrealloc+0x208>
    fce7:	49 39 7b 10          	cmp    %rdi,0x10(%r11)
    fceb:	0f 85 37 ff ff ff    	jne    fc28 <dlrealloc+0x208>
    fcf1:	4d 89 59 18          	mov    %r11,0x18(%r9)
    fcf5:	4d 89 4b 10          	mov    %r9,0x10(%r11)
    fcf9:	48 8b 3d 00 b1 01 00 	mov    0x1b100(%rip),%rdi        # 2ae00 <mparams>
    fd00:	83 e6 01             	and    $0x1,%esi
    fd03:	4b 8d 4c 15 00       	lea    0x0(%r13,%r10,1),%rcx
    fd08:	4c 31 e7             	xor    %r12,%rdi
    fd0b:	48 83 fa 1f          	cmp    $0x1f,%rdx
    fd0f:	0f 87 88 02 00 00    	ja     ff9d <dlrealloc+0x57d>
    fd15:	4c 89 d2             	mov    %r10,%rdx
    fd18:	48 09 f2             	or     %rsi,%rdx
    fd1b:	48 83 ca 02          	or     $0x2,%rdx
    fd1f:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
    fd23:	48 89 39             	mov    %rdi,(%rcx)
    fd26:	48 83 49 08 01       	orq    $0x1,0x8(%rcx)
    fd2b:	41 8b 8c 24 70 03 00 	mov    0x370(%r12),%ecx
    fd32:	00 
    fd33:	e9 ce fd ff ff       	jmp    fb06 <dlrealloc+0xe6>
    fd38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    fd3f:	00 
    fd40:	41 c7 84 24 74 03 00 	movl   $0x0,0x374(%r12)
    fd47:	00 00 00 00 00 
    fd4c:	e9 be fd ff ff       	jmp    fb0f <dlrealloc+0xef>
    fd51:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    fd58:	41 f6 84 24 70 03 00 	testb  $0x2,0x370(%r12)
    fd5f:	00 02 
    fd61:	0f 84 45 fe ff ff    	je     fbac <dlrealloc+0x18c>
    fd67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    fd6e:	00 00 
    fd70:	41 c7 84 24 74 03 00 	movl   $0x0,0x374(%r12)
    fd77:	00 00 00 00 00 
    fd7c:	e9 2b fe ff ff       	jmp    fbac <dlrealloc+0x18c>
    fd81:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    fd88:	49 03 54 24 08       	add    0x8(%r12),%rdx
    fd8d:	41 8b 8c 24 70 03 00 	mov    0x370(%r12),%ecx
    fd94:	00 
    fd95:	48 39 c2             	cmp    %rax,%rdx
    fd98:	0f 82 01 01 00 00    	jb     fe9f <dlrealloc+0x47f>
    fd9e:	4c 8b 05 5b b0 01 00 	mov    0x1b05b(%rip),%r8        # 2ae00 <mparams>
    fda5:	49 89 d1             	mov    %rdx,%r9
    fda8:	49 8d 7c 15 00       	lea    0x0(%r13,%rdx,1),%rdi
    fdad:	83 e6 01             	and    $0x1,%esi
    fdb0:	49 29 c1             	sub    %rax,%r9
    fdb3:	4d 31 e0             	xor    %r12,%r8
    fdb6:	49 83 f9 1f          	cmp    $0x1f,%r9
    fdba:	0f 86 b3 01 00 00    	jbe    ff73 <dlrealloc+0x553>
    fdc0:	49 8d 54 05 00       	lea    0x0(%r13,%rax,1),%rdx
    fdc5:	48 09 c6             	or     %rax,%rsi
    fdc8:	4c 89 c8             	mov    %r9,%rax
    fdcb:	48 83 ce 02          	or     $0x2,%rsi
    fdcf:	48 83 c8 01          	or     $0x1,%rax
    fdd3:	48 89 75 f8          	mov    %rsi,-0x8(%rbp)
    fdd7:	4c 89 02             	mov    %r8,(%rdx)
    fdda:	48 89 42 08          	mov    %rax,0x8(%rdx)
    fdde:	4c 89 0f             	mov    %r9,(%rdi)
    fde1:	48 83 67 08 fe       	andq   $0xfffffffffffffffe,0x8(%rdi)
    fde6:	4d 89 4c 24 08       	mov    %r9,0x8(%r12)
    fdeb:	49 89 54 24 20       	mov    %rdx,0x20(%r12)
    fdf0:	e9 11 fd ff ff       	jmp    fb06 <dlrealloc+0xe6>
    fdf5:	0f 1f 00             	nopl   (%rax)
    fdf8:	83 e6 01             	and    $0x1,%esi
    fdfb:	4d 8d 7c 05 00       	lea    0x0(%r13,%rax,1),%r15
    fe00:	48 83 ca 03          	or     $0x3,%rdx
    fe04:	48 09 c6             	or     %rax,%rsi
    fe07:	48 8b 05 f2 af 01 00 	mov    0x1aff2(%rip),%rax        # 2ae00 <mparams>
    fe0e:	48 83 ce 02          	or     $0x2,%rsi
    fe12:	4c 31 e0             	xor    %r12,%rax
    fe15:	48 89 75 f8          	mov    %rsi,-0x8(%rbp)
    fe19:	31 f6                	xor    %esi,%esi
    fe1b:	49 89 57 08          	mov    %rdx,0x8(%r15)
    fe1f:	49 8d 56 f0          	lea    -0x10(%r14),%rdx
    fe23:	49 89 07             	mov    %rax,(%r15)
    fe26:	48 83 4f 08 01       	orq    $0x1,0x8(%rdi)
    fe2b:	48 89 07             	mov    %rax,(%rdi)
    fe2e:	49 8d 7f 10          	lea    0x10(%r15),%rdi
    fe32:	e8 69 0a 00 00       	call   108a0 <memset>
    fe37:	4c 89 f2             	mov    %r14,%rdx
    fe3a:	4c 89 fe             	mov    %r15,%rsi
    fe3d:	4c 89 e7             	mov    %r12,%rdi
    fe40:	e8 5b c9 ff ff       	call   c7a0 <dispose_chunk>
    fe45:	e9 b4 fc ff ff       	jmp    fafe <dlrealloc+0xde>
    fe4a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    fe50:	49 03 54 24 10       	add    0x10(%r12),%rdx
    fe55:	41 8b 8c 24 70 03 00 	mov    0x370(%r12),%ecx
    fe5c:	00 
    fe5d:	48 39 d0             	cmp    %rdx,%rax
    fe60:	73 3d                	jae    fe9f <dlrealloc+0x47f>
    fe62:	83 e6 01             	and    $0x1,%esi
    fe65:	49 8d 7c 05 00       	lea    0x0(%r13,%rax,1),%rdi
    fe6a:	48 29 c2             	sub    %rax,%rdx
    fe6d:	48 09 c6             	or     %rax,%rsi
    fe70:	48 8b 05 89 af 01 00 	mov    0x1af89(%rip),%rax        # 2ae00 <mparams>
    fe77:	48 83 ce 02          	or     $0x2,%rsi
    fe7b:	4c 31 e0             	xor    %r12,%rax
    fe7e:	48 89 75 f8          	mov    %rsi,-0x8(%rbp)
    fe82:	48 89 07             	mov    %rax,(%rdi)
    fe85:	48 89 d0             	mov    %rdx,%rax
    fe88:	48 83 c8 01          	or     $0x1,%rax
    fe8c:	48 89 47 08          	mov    %rax,0x8(%rdi)
    fe90:	49 89 7c 24 28       	mov    %rdi,0x28(%r12)
    fe95:	49 89 54 24 10       	mov    %rdx,0x10(%r12)
    fe9a:	e9 67 fc ff ff       	jmp    fb06 <dlrealloc+0xe6>
    fe9f:	83 e1 02             	and    $0x2,%ecx
    fea2:	0f 84 04 fd ff ff    	je     fbac <dlrealloc+0x18c>
    fea8:	e9 c3 fe ff ff       	jmp    fd70 <dlrealloc+0x350>
    fead:	4c 8b 5f 18          	mov    0x18(%rdi),%r11
    feb1:	4c 8b 7f 30          	mov    0x30(%rdi),%r15
    feb5:	49 39 fb             	cmp    %rdi,%r11
    feb8:	0f 84 1d 01 00 00    	je     ffdb <dlrealloc+0x5bb>
    febe:	48 8b 4f 10          	mov    0x10(%rdi),%rcx
    fec2:	4c 39 c1             	cmp    %r8,%rcx
    fec5:	0f 82 5d fd ff ff    	jb     fc28 <dlrealloc+0x208>
    fecb:	48 39 79 18          	cmp    %rdi,0x18(%rcx)
    fecf:	0f 85 53 fd ff ff    	jne    fc28 <dlrealloc+0x208>
    fed5:	49 39 7b 10          	cmp    %rdi,0x10(%r11)
    fed9:	0f 85 49 fd ff ff    	jne    fc28 <dlrealloc+0x208>
    fedf:	4c 89 59 18          	mov    %r11,0x18(%rcx)
    fee3:	49 89 4b 10          	mov    %rcx,0x10(%r11)
    fee7:	4d 85 ff             	test   %r15,%r15
    feea:	0f 84 09 fe ff ff    	je     fcf9 <dlrealloc+0x2d9>
    fef0:	44 8b 4f 38          	mov    0x38(%rdi),%r9d
    fef4:	4c 89 c9             	mov    %r9,%rcx
    fef7:	4d 8d 71 4a          	lea    0x4a(%r9),%r14
    fefb:	4b 3b bc cc 58 02 00 	cmp    0x258(%r12,%r9,8),%rdi
    ff02:	00 
    ff03:	0f 84 61 01 00 00    	je     1006a <dlrealloc+0x64a>
    ff09:	4d 39 c7             	cmp    %r8,%r15
    ff0c:	0f 82 16 fd ff ff    	jb     fc28 <dlrealloc+0x208>
    ff12:	49 3b 7f 20          	cmp    0x20(%r15),%rdi
    ff16:	0f 84 a5 01 00 00    	je     100c1 <dlrealloc+0x6a1>
    ff1c:	4d 89 5f 28          	mov    %r11,0x28(%r15)
    ff20:	4d 85 db             	test   %r11,%r11
    ff23:	0f 84 d0 fd ff ff    	je     fcf9 <dlrealloc+0x2d9>
    ff29:	4d 39 c3             	cmp    %r8,%r11
    ff2c:	0f 82 f6 fc ff ff    	jb     fc28 <dlrealloc+0x208>
    ff32:	48 8b 4f 20          	mov    0x20(%rdi),%rcx
    ff36:	4d 89 7b 30          	mov    %r15,0x30(%r11)
    ff3a:	48 85 c9             	test   %rcx,%rcx
    ff3d:	74 11                	je     ff50 <dlrealloc+0x530>
    ff3f:	4c 39 c1             	cmp    %r8,%rcx
    ff42:	0f 82 e0 fc ff ff    	jb     fc28 <dlrealloc+0x208>
    ff48:	49 89 4b 20          	mov    %rcx,0x20(%r11)
    ff4c:	4c 89 59 30          	mov    %r11,0x30(%rcx)
    ff50:	48 8b 4f 28          	mov    0x28(%rdi),%rcx
    ff54:	48 85 c9             	test   %rcx,%rcx
    ff57:	0f 84 9c fd ff ff    	je     fcf9 <dlrealloc+0x2d9>
    ff5d:	4c 39 c1             	cmp    %r8,%rcx
    ff60:	0f 82 c2 fc ff ff    	jb     fc28 <dlrealloc+0x208>
    ff66:	49 89 4b 28          	mov    %rcx,0x28(%r11)
    ff6a:	4c 89 59 30          	mov    %r11,0x30(%rcx)
    ff6e:	e9 86 fd ff ff       	jmp    fcf9 <dlrealloc+0x2d9>
    ff73:	48 09 f2             	or     %rsi,%rdx
    ff76:	48 83 ca 02          	or     $0x2,%rdx
    ff7a:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
    ff7e:	4c 89 07             	mov    %r8,(%rdi)
    ff81:	48 83 4f 08 01       	orq    $0x1,0x8(%rdi)
    ff86:	49 c7 44 24 08 00 00 	movq   $0x0,0x8(%r12)
    ff8d:	00 00 
    ff8f:	49 c7 44 24 20 00 00 	movq   $0x0,0x20(%r12)
    ff96:	00 00 
    ff98:	e9 69 fb ff ff       	jmp    fb06 <dlrealloc+0xe6>
    ff9d:	4d 8d 44 05 00       	lea    0x0(%r13,%rax,1),%r8
    ffa2:	48 09 f0             	or     %rsi,%rax
    ffa5:	48 83 c8 02          	or     $0x2,%rax
    ffa9:	4c 89 c6             	mov    %r8,%rsi
    ffac:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    ffb0:	48 89 d0             	mov    %rdx,%rax
    ffb3:	48 83 c8 03          	or     $0x3,%rax
    ffb7:	49 89 38             	mov    %rdi,(%r8)
    ffba:	49 89 40 08          	mov    %rax,0x8(%r8)
    ffbe:	48 83 49 08 01       	orq    $0x1,0x8(%rcx)
    ffc3:	48 89 39             	mov    %rdi,(%rcx)
    ffc6:	4c 89 e7             	mov    %r12,%rdi
    ffc9:	e8 d2 c7 ff ff       	call   c7a0 <dispose_chunk>
    ffce:	41 8b 8c 24 70 03 00 	mov    0x370(%r12),%ecx
    ffd5:	00 
    ffd6:	e9 2b fb ff ff       	jmp    fb06 <dlrealloc+0xe6>
    ffdb:	48 8b 4f 28          	mov    0x28(%rdi),%rcx
    ffdf:	4c 8d 4f 28          	lea    0x28(%rdi),%r9
    ffe3:	48 85 c9             	test   %rcx,%rcx
    ffe6:	0f 84 9d 00 00 00    	je     10089 <dlrealloc+0x669>
    ffec:	0f 1f 40 00          	nopl   0x0(%rax)
    fff0:	4d 89 ce             	mov    %r9,%r14
    fff3:	49 89 cb             	mov    %rcx,%r11
    fff6:	4c 8d 49 28          	lea    0x28(%rcx),%r9
    fffa:	48 8b 49 28          	mov    0x28(%rcx),%rcx
    fffe:	48 85 c9             	test   %rcx,%rcx
   10001:	75 ed                	jne    fff0 <dlrealloc+0x5d0>
   10003:	49 8b 4b 20          	mov    0x20(%r11),%rcx
   10007:	4d 8d 4b 20          	lea    0x20(%r11),%r9
   1000b:	48 85 c9             	test   %rcx,%rcx
   1000e:	75 e0                	jne    fff0 <dlrealloc+0x5d0>
   10010:	4d 39 c6             	cmp    %r8,%r14
   10013:	0f 82 0f fc ff ff    	jb     fc28 <dlrealloc+0x208>
   10019:	49 c7 06 00 00 00 00 	movq   $0x0,(%r14)
   10020:	4d 85 ff             	test   %r15,%r15
   10023:	0f 84 d0 fc ff ff    	je     fcf9 <dlrealloc+0x2d9>
   10029:	8b 4f 38             	mov    0x38(%rdi),%ecx
   1002c:	4c 8d 49 4a          	lea    0x4a(%rcx),%r9
   10030:	49 3b bc cc 58 02 00 	cmp    0x258(%r12,%rcx,8),%rdi
   10037:	00 
   10038:	0f 84 8c 00 00 00    	je     100ca <dlrealloc+0x6aa>
   1003e:	4d 39 c7             	cmp    %r8,%r15
   10041:	0f 82 e1 fb ff ff    	jb     fc28 <dlrealloc+0x208>
   10047:	49 3b 7f 20          	cmp    0x20(%r15),%rdi
   1004b:	0f 84 bb 00 00 00    	je     1010c <dlrealloc+0x6ec>
   10051:	4d 89 5f 28          	mov    %r11,0x28(%r15)
   10055:	e9 cf fe ff ff       	jmp    ff29 <dlrealloc+0x509>
   1005a:	bf fe ff ff ff       	mov    $0xfffffffe,%edi
   1005f:	d3 c7                	rol    %cl,%edi
   10061:	41 21 3c 24          	and    %edi,(%r12)
   10065:	e9 8f fc ff ff       	jmp    fcf9 <dlrealloc+0x2d9>
   1006a:	4f 89 5c f4 08       	mov    %r11,0x8(%r12,%r14,8)
   1006f:	4d 85 db             	test   %r11,%r11
   10072:	0f 85 b1 fe ff ff    	jne    ff29 <dlrealloc+0x509>
   10078:	bf fe ff ff ff       	mov    $0xfffffffe,%edi
   1007d:	d3 c7                	rol    %cl,%edi
   1007f:	41 21 7c 24 04       	and    %edi,0x4(%r12)
   10084:	e9 70 fc ff ff       	jmp    fcf9 <dlrealloc+0x2d9>
   10089:	48 8b 4f 20          	mov    0x20(%rdi),%rcx
   1008d:	48 85 c9             	test   %rcx,%rcx
   10090:	74 42                	je     100d4 <dlrealloc+0x6b4>
   10092:	4c 8d 4f 20          	lea    0x20(%rdi),%r9
   10096:	e9 55 ff ff ff       	jmp    fff0 <dlrealloc+0x5d0>
   1009b:	4d 39 c1             	cmp    %r8,%r9
   1009e:	0f 82 84 fb ff ff    	jb     fc28 <dlrealloc+0x208>
   100a4:	49 39 79 18          	cmp    %rdi,0x18(%r9)
   100a8:	0f 85 7a fb ff ff    	jne    fc28 <dlrealloc+0x208>
   100ae:	4d 39 d9             	cmp    %r11,%r9
   100b1:	74 a7                	je     1005a <dlrealloc+0x63a>
   100b3:	4d 39 f3             	cmp    %r14,%r11
   100b6:	0f 84 35 fc ff ff    	je     fcf1 <dlrealloc+0x2d1>
   100bc:	e9 1d fc ff ff       	jmp    fcde <dlrealloc+0x2be>
   100c1:	4d 89 5f 20          	mov    %r11,0x20(%r15)
   100c5:	e9 56 fe ff ff       	jmp    ff20 <dlrealloc+0x500>
   100ca:	4f 89 5c cc 08       	mov    %r11,0x8(%r12,%r9,8)
   100cf:	e9 55 fe ff ff       	jmp    ff29 <dlrealloc+0x509>
   100d4:	4d 85 ff             	test   %r15,%r15
   100d7:	0f 84 1c fc ff ff    	je     fcf9 <dlrealloc+0x2d9>
   100dd:	44 8b 4f 38          	mov    0x38(%rdi),%r9d
   100e1:	4c 89 c9             	mov    %r9,%rcx
   100e4:	4d 8d 59 4a          	lea    0x4a(%r9),%r11
   100e8:	4b 3b bc cc 58 02 00 	cmp    0x258(%r12,%r9,8),%rdi
   100ef:	00 
   100f0:	74 2e                	je     10120 <dlrealloc+0x700>
   100f2:	4d 39 c7             	cmp    %r8,%r15
   100f5:	0f 82 2d fb ff ff    	jb     fc28 <dlrealloc+0x208>
   100fb:	49 39 7f 20          	cmp    %rdi,0x20(%r15)
   100ff:	74 14                	je     10115 <dlrealloc+0x6f5>
   10101:	31 c9                	xor    %ecx,%ecx
   10103:	49 89 4f 28          	mov    %rcx,0x28(%r15)
   10107:	e9 ed fb ff ff       	jmp    fcf9 <dlrealloc+0x2d9>
   1010c:	4d 89 5f 20          	mov    %r11,0x20(%r15)
   10110:	e9 14 fe ff ff       	jmp    ff29 <dlrealloc+0x509>
   10115:	31 ff                	xor    %edi,%edi
   10117:	49 89 7f 20          	mov    %rdi,0x20(%r15)
   1011b:	e9 d9 fb ff ff       	jmp    fcf9 <dlrealloc+0x2d9>
   10120:	45 31 c0             	xor    %r8d,%r8d
   10123:	4f 89 44 dc 08       	mov    %r8,0x8(%r12,%r11,8)
   10128:	e9 4b ff ff ff       	jmp    10078 <dlrealloc+0x658>
   1012d:	0f 1f 00             	nopl   (%rax)

0000000000010130 <dlmemalign>:
   10130:	f3 0f 1e fa          	endbr64 
   10134:	48 83 ff 10          	cmp    $0x10,%rdi
   10138:	76 06                	jbe    10140 <dlmemalign+0x10>
   1013a:	e9 d1 ea ff ff       	jmp    ec10 <internal_memalign.constprop.0>
   1013f:	90                   	nop
   10140:	48 89 f7             	mov    %rsi,%rdi
   10143:	e9 78 cf ff ff       	jmp    d0c0 <dlmalloc>
   10148:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1014f:	00 

0000000000010150 <dlposix_memalign>:
   10150:	f3 0f 1e fa          	endbr64 
   10154:	53                   	push   %rbx
   10155:	48 89 fb             	mov    %rdi,%rbx
   10158:	48 89 f7             	mov    %rsi,%rdi
   1015b:	48 89 d6             	mov    %rdx,%rsi
   1015e:	48 83 ff 10          	cmp    $0x10,%rdi
   10162:	74 6c                	je     101d0 <dlposix_memalign+0x80>
   10164:	48 89 f9             	mov    %rdi,%rcx
   10167:	49 89 f8             	mov    %rdi,%r8
   1016a:	ba 16 00 00 00       	mov    $0x16,%edx
   1016f:	48 c1 e9 03          	shr    $0x3,%rcx
   10173:	41 83 e0 07          	and    $0x7,%r8d
   10177:	48 83 ff 07          	cmp    $0x7,%rdi
   1017b:	76 36                	jbe    101b3 <dlposix_memalign+0x63>
   1017d:	48 8d 41 ff          	lea    -0x1(%rcx),%rax
   10181:	48 21 c8             	and    %rcx,%rax
   10184:	4c 09 c0             	or     %r8,%rax
   10187:	75 2a                	jne    101b3 <dlposix_memalign+0x63>
   10189:	48 c7 c0 80 ff ff ff 	mov    $0xffffffffffffff80,%rax
   10190:	48 29 f8             	sub    %rdi,%rax
   10193:	48 39 f0             	cmp    %rsi,%rax
   10196:	72 28                	jb     101c0 <dlposix_memalign+0x70>
   10198:	b8 20 00 00 00       	mov    $0x20,%eax
   1019d:	48 39 c7             	cmp    %rax,%rdi
   101a0:	48 0f 42 f8          	cmovb  %rax,%rdi
   101a4:	e8 67 ea ff ff       	call   ec10 <internal_memalign.constprop.0>
   101a9:	48 85 c0             	test   %rax,%rax
   101ac:	74 12                	je     101c0 <dlposix_memalign+0x70>
   101ae:	48 89 03             	mov    %rax,(%rbx)
   101b1:	31 d2                	xor    %edx,%edx
   101b3:	89 d0                	mov    %edx,%eax
   101b5:	5b                   	pop    %rbx
   101b6:	c3                   	ret    
   101b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   101be:	00 00 
   101c0:	ba 0c 00 00 00       	mov    $0xc,%edx
   101c5:	5b                   	pop    %rbx
   101c6:	89 d0                	mov    %edx,%eax
   101c8:	c3                   	ret    
   101c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   101d0:	48 89 d7             	mov    %rdx,%rdi
   101d3:	e8 e8 ce ff ff       	call   d0c0 <dlmalloc>
   101d8:	eb cf                	jmp    101a9 <dlposix_memalign+0x59>
   101da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000101e0 <dlmallinfo>:
   101e0:	f3 0f 1e fa          	endbr64 
   101e4:	41 55                	push   %r13
   101e6:	41 54                	push   %r12
   101e8:	55                   	push   %rbp
   101e9:	53                   	push   %rbx
   101ea:	48 89 fb             	mov    %rdi,%rbx
   101ed:	48 83 ec 08          	sub    $0x8,%rsp
   101f1:	48 83 3d 07 ac 01 00 	cmpq   $0x0,0x1ac07(%rip)        # 2ae00 <mparams>
   101f8:	00 
   101f9:	0f 84 89 01 00 00    	je     10388 <dlmallinfo+0x1a8>
   101ff:	44 8b 1d aa ab 01 00 	mov    0x1abaa(%rip),%r11d        # 2adb0 <_gm_+0x370>
   10206:	41 83 e3 02          	and    $0x2,%r11d
   1020a:	0f 85 16 01 00 00    	jne    10326 <dlmallinfo+0x146>
   10210:	48 8b 3d 51 a8 01 00 	mov    0x1a851(%rip),%rdi        # 2aa68 <_gm_+0x28>
   10217:	48 85 ff             	test   %rdi,%rdi
   1021a:	0f 84 f4 00 00 00    	je     10314 <dlmallinfo+0x134>
   10220:	48 8b 2d 29 a8 01 00 	mov    0x1a829(%rip),%rbp        # 2aa50 <_gm_+0x10>
   10227:	41 b9 01 00 00 00    	mov    $0x1,%r9d
   1022d:	4c 8d 15 84 ab 01 00 	lea    0x1ab84(%rip),%r10        # 2adb8 <_gm_+0x378>
   10234:	4c 8d 45 50          	lea    0x50(%rbp),%r8
   10238:	4c 89 c1             	mov    %r8,%rcx
   1023b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10240:	49 8b 32             	mov    (%r10),%rsi
   10243:	48 8d 46 10          	lea    0x10(%rsi),%rax
   10247:	40 f6 c6 0f          	test   $0xf,%sil
   1024b:	0f 84 af 00 00 00    	je     10300 <dlmallinfo+0x120>
   10251:	48 f7 d8             	neg    %rax
   10254:	83 e0 0f             	and    $0xf,%eax
   10257:	48 01 f0             	add    %rsi,%rax
   1025a:	72 4a                	jb     102a6 <dlmallinfo+0xc6>
   1025c:	4d 8b 6a 08          	mov    0x8(%r10),%r13
   10260:	49 01 f5             	add    %rsi,%r13
   10263:	4c 39 e8             	cmp    %r13,%rax
   10266:	72 39                	jb     102a1 <dlmallinfo+0xc1>
   10268:	eb 3c                	jmp    102a6 <dlmallinfo+0xc6>
   1026a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10270:	48 8b 50 08          	mov    0x8(%rax),%rdx
   10274:	48 83 fa 0b          	cmp    $0xb,%rdx
   10278:	74 2c                	je     102a6 <dlmallinfo+0xc6>
   1027a:	49 89 d4             	mov    %rdx,%r12
   1027d:	83 e2 03             	and    $0x3,%edx
   10280:	49 83 e4 f8          	and    $0xfffffffffffffff8,%r12
   10284:	4c 01 e1             	add    %r12,%rcx
   10287:	48 83 fa 01          	cmp    $0x1,%rdx
   1028b:	75 07                	jne    10294 <dlmallinfo+0xb4>
   1028d:	4d 01 e0             	add    %r12,%r8
   10290:	49 83 c1 01          	add    $0x1,%r9
   10294:	4c 01 e0             	add    %r12,%rax
   10297:	48 39 f0             	cmp    %rsi,%rax
   1029a:	72 0a                	jb     102a6 <dlmallinfo+0xc6>
   1029c:	4c 39 e8             	cmp    %r13,%rax
   1029f:	73 05                	jae    102a6 <dlmallinfo+0xc6>
   102a1:	48 39 f8             	cmp    %rdi,%rax
   102a4:	75 ca                	jne    10270 <dlmallinfo+0x90>
   102a6:	4d 8b 52 10          	mov    0x10(%r10),%r10
   102aa:	4d 85 d2             	test   %r10,%r10
   102ad:	75 91                	jne    10240 <dlmallinfo+0x60>
   102af:	48 8b 05 e2 aa 01 00 	mov    0x1aae2(%rip),%rax        # 2ad98 <_gm_+0x358>
   102b6:	89 ca                	mov    %ecx,%edx
   102b8:	89 c6                	mov    %eax,%esi
   102ba:	44 29 c0             	sub    %r8d,%eax
   102bd:	29 ce                	sub    %ecx,%esi
   102bf:	8b 0d db aa 01 00    	mov    0x1aadb(%rip),%ecx        # 2ada0 <_gm_+0x360>
   102c5:	45 85 db             	test   %r11d,%r11d
   102c8:	75 3e                	jne    10308 <dlmallinfo+0x128>
   102ca:	89 43 1c             	mov    %eax,0x1c(%rbx)
   102cd:	48 89 d8             	mov    %rbx,%rax
   102d0:	89 13                	mov    %edx,(%rbx)
   102d2:	44 89 4b 04          	mov    %r9d,0x4(%rbx)
   102d6:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
   102dd:	00 
   102de:	89 73 10             	mov    %esi,0x10(%rbx)
   102e1:	89 4b 14             	mov    %ecx,0x14(%rbx)
   102e4:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%rbx)
   102eb:	44 89 43 20          	mov    %r8d,0x20(%rbx)
   102ef:	89 6b 24             	mov    %ebp,0x24(%rbx)
   102f2:	48 83 c4 08          	add    $0x8,%rsp
   102f6:	5b                   	pop    %rbx
   102f7:	5d                   	pop    %rbp
   102f8:	41 5c                	pop    %r12
   102fa:	41 5d                	pop    %r13
   102fc:	c3                   	ret    
   102fd:	0f 1f 00             	nopl   (%rax)
   10300:	48 89 f0             	mov    %rsi,%rax
   10303:	e9 54 ff ff ff       	jmp    1025c <dlmallinfo+0x7c>
   10308:	c7 05 a2 aa 01 00 00 	movl   $0x0,0x1aaa2(%rip)        # 2adb4 <_gm_+0x374>
   1030f:	00 00 00 
   10312:	eb b6                	jmp    102ca <dlmallinfo+0xea>
   10314:	31 ed                	xor    %ebp,%ebp
   10316:	45 31 c0             	xor    %r8d,%r8d
   10319:	31 c0                	xor    %eax,%eax
   1031b:	31 c9                	xor    %ecx,%ecx
   1031d:	31 f6                	xor    %esi,%esi
   1031f:	45 31 c9             	xor    %r9d,%r9d
   10322:	31 d2                	xor    %edx,%edx
   10324:	eb a4                	jmp    102ca <dlmallinfo+0xea>
   10326:	b8 01 00 00 00       	mov    $0x1,%eax
   1032b:	87 05 83 aa 01 00    	xchg   %eax,0x1aa83(%rip)        # 2adb4 <_gm_+0x374>
   10331:	ba 01 00 00 00       	mov    $0x1,%edx
   10336:	85 c0                	test   %eax,%eax
   10338:	75 36                	jne    10370 <dlmallinfo+0x190>
   1033a:	44 8b 1d 6f aa 01 00 	mov    0x1aa6f(%rip),%r11d        # 2adb0 <_gm_+0x370>
   10341:	48 8b 3d 20 a7 01 00 	mov    0x1a720(%rip),%rdi        # 2aa68 <_gm_+0x28>
   10348:	41 83 e3 02          	and    $0x2,%r11d
   1034c:	48 85 ff             	test   %rdi,%rdi
   1034f:	0f 85 cb fe ff ff    	jne    10220 <dlmallinfo+0x40>
   10355:	31 ed                	xor    %ebp,%ebp
   10357:	45 31 c0             	xor    %r8d,%r8d
   1035a:	31 c0                	xor    %eax,%eax
   1035c:	31 c9                	xor    %ecx,%ecx
   1035e:	31 f6                	xor    %esi,%esi
   10360:	45 31 c9             	xor    %r9d,%r9d
   10363:	31 d2                	xor    %edx,%edx
   10365:	e9 5b ff ff ff       	jmp    102c5 <dlmallinfo+0xe5>
   1036a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10370:	8b 05 3e aa 01 00    	mov    0x1aa3e(%rip),%eax        # 2adb4 <_gm_+0x374>
   10376:	85 c0                	test   %eax,%eax
   10378:	75 f6                	jne    10370 <dlmallinfo+0x190>
   1037a:	89 d0                	mov    %edx,%eax
   1037c:	87 05 32 aa 01 00    	xchg   %eax,0x1aa32(%rip)        # 2adb4 <_gm_+0x374>
   10382:	85 c0                	test   %eax,%eax
   10384:	75 ea                	jne    10370 <dlmallinfo+0x190>
   10386:	eb b2                	jmp    1033a <dlmallinfo+0x15a>
   10388:	e8 43 cc ff ff       	call   cfd0 <init_mparams.isra.0>
   1038d:	e9 6d fe ff ff       	jmp    101ff <dlmallinfo+0x1f>
   10392:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   10399:	00 00 00 
   1039c:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000103a0 <__memcpy.part.0>:
   103a0:	48 89 f0             	mov    %rsi,%rax
   103a3:	48 89 f1             	mov    %rsi,%rcx
   103a6:	48 09 f8             	or     %rdi,%rax
   103a9:	a8 07                	test   $0x7,%al
   103ab:	74 43                	je     103f0 <__memcpy.part.0+0x50>
   103ad:	48 89 f0             	mov    %rsi,%rax
   103b0:	48 31 f8             	xor    %rdi,%rax
   103b3:	a8 07                	test   $0x7,%al
   103b5:	75 0a                	jne    103c1 <__memcpy.part.0+0x21>
   103b7:	48 83 fa 07          	cmp    $0x7,%rdx
   103bb:	0f 87 87 00 00 00    	ja     10448 <__memcpy.part.0+0xa8>
   103c1:	45 31 c9             	xor    %r9d,%r9d
   103c4:	45 31 c0             	xor    %r8d,%r8d
   103c7:	45 31 d2             	xor    %r10d,%r10d
   103ca:	31 c0                	xor    %eax,%eax
   103cc:	0f 1f 40 00          	nopl   0x0(%rax)
   103d0:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
   103d4:	40 88 34 07          	mov    %sil,(%rdi,%rax,1)
   103d8:	48 83 c0 01          	add    $0x1,%rax
   103dc:	48 39 c2             	cmp    %rax,%rdx
   103df:	75 ef                	jne    103d0 <__memcpy.part.0+0x30>
   103e1:	48 01 d1             	add    %rdx,%rcx
   103e4:	48 01 d7             	add    %rdx,%rdi
   103e7:	4c 89 d2             	mov    %r10,%rdx
   103ea:	eb 12                	jmp    103fe <__memcpy.part.0+0x5e>
   103ec:	0f 1f 40 00          	nopl   0x0(%rax)
   103f0:	49 89 d0             	mov    %rdx,%r8
   103f3:	49 89 d1             	mov    %rdx,%r9
   103f6:	49 c1 e8 03          	shr    $0x3,%r8
   103fa:	41 83 e1 07          	and    $0x7,%r9d
   103fe:	48 83 fa 07          	cmp    $0x7,%rdx
   10402:	76 23                	jbe    10427 <__memcpy.part.0+0x87>
   10404:	4a 8d 34 c5 00 00 00 	lea    0x0(,%r8,8),%rsi
   1040b:	00 
   1040c:	31 c0                	xor    %eax,%eax
   1040e:	66 90                	xchg   %ax,%ax
   10410:	48 8b 14 01          	mov    (%rcx,%rax,1),%rdx
   10414:	48 89 14 07          	mov    %rdx,(%rdi,%rax,1)
   10418:	48 83 c0 08          	add    $0x8,%rax
   1041c:	48 39 f0             	cmp    %rsi,%rax
   1041f:	75 ef                	jne    10410 <__memcpy.part.0+0x70>
   10421:	48 01 c1             	add    %rax,%rcx
   10424:	48 01 c7             	add    %rax,%rdi
   10427:	4d 85 c9             	test   %r9,%r9
   1042a:	74 14                	je     10440 <__memcpy.part.0+0xa0>
   1042c:	31 c0                	xor    %eax,%eax
   1042e:	66 90                	xchg   %ax,%ax
   10430:	0f b6 14 01          	movzbl (%rcx,%rax,1),%edx
   10434:	88 14 07             	mov    %dl,(%rdi,%rax,1)
   10437:	48 83 c0 01          	add    $0x1,%rax
   1043b:	49 39 c1             	cmp    %rax,%r9
   1043e:	75 f0                	jne    10430 <__memcpy.part.0+0x90>
   10440:	c3                   	ret    
   10441:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10448:	48 89 f0             	mov    %rsi,%rax
   1044b:	83 e0 07             	and    $0x7,%eax
   1044e:	4c 8d 54 10 f8       	lea    -0x8(%rax,%rdx,1),%r10
   10453:	ba 08 00 00 00       	mov    $0x8,%edx
   10458:	4d 89 d0             	mov    %r10,%r8
   1045b:	4d 89 d1             	mov    %r10,%r9
   1045e:	48 29 c2             	sub    %rax,%rdx
   10461:	49 c1 e8 03          	shr    $0x3,%r8
   10465:	41 83 e1 07          	and    $0x7,%r9d
   10469:	e9 5c ff ff ff       	jmp    103ca <__memcpy.part.0+0x2a>
   1046e:	66 90                	xchg   %ax,%ax

0000000000010470 <__memcpy>:
   10470:	f3 0f 1e fa          	endbr64 
   10474:	49 89 fb             	mov    %rdi,%r11
   10477:	48 85 d2             	test   %rdx,%rdx
   1047a:	74 0a                	je     10486 <__memcpy+0x16>
   1047c:	48 39 f7             	cmp    %rsi,%rdi
   1047f:	74 05                	je     10486 <__memcpy+0x16>
   10481:	e8 1a ff ff ff       	call   103a0 <__memcpy.part.0>
   10486:	4c 89 d8             	mov    %r11,%rax
   10489:	c3                   	ret    
   1048a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000010490 <memcpy_verw>:
   10490:	f3 0f 1e fa          	endbr64 
   10494:	41 56                	push   %r14
   10496:	41 55                	push   %r13
   10498:	49 89 fd             	mov    %rdi,%r13
   1049b:	41 54                	push   %r12
   1049d:	55                   	push   %rbp
   1049e:	53                   	push   %rbx
   1049f:	48 85 d2             	test   %rdx,%rdx
   104a2:	0f 84 8f 00 00 00    	je     10537 <memcpy_verw+0xa7>
   104a8:	48 89 f3             	mov    %rsi,%rbx
   104ab:	48 39 f7             	cmp    %rsi,%rdi
   104ae:	0f 84 83 00 00 00    	je     10537 <memcpy_verw+0xa7>
   104b4:	49 89 d4             	mov    %rdx,%r12
   104b7:	48 89 fd             	mov    %rdi,%rbp
   104ba:	48 83 fa 07          	cmp    $0x7,%rdx
   104be:	77 25                	ja     104e5 <memcpy_verw+0x55>
   104c0:	eb 5b                	jmp    1051d <memcpy_verw+0x8d>
   104c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   104c8:	48 89 de             	mov    %rbx,%rsi
   104cb:	48 89 ef             	mov    %rbp,%rdi
   104ce:	49 83 ec 01          	sub    $0x1,%r12
   104d2:	48 83 c3 01          	add    $0x1,%rbx
   104d6:	e8 75 09 00 00       	call   10e50 <__memcpy_verw>
   104db:	48 83 c5 01          	add    $0x1,%rbp
   104df:	49 83 fc 07          	cmp    $0x7,%r12
   104e3:	76 33                	jbe    10518 <memcpy_verw+0x88>
   104e5:	48 89 e8             	mov    %rbp,%rax
   104e8:	48 09 d8             	or     %rbx,%rax
   104eb:	a8 07                	test   $0x7,%al
   104ed:	75 d9                	jne    104c8 <memcpy_verw+0x38>
   104ef:	4d 89 e3             	mov    %r12,%r11
   104f2:	49 83 e3 f8          	and    $0xfffffffffffffff8,%r11
   104f6:	48 39 dd             	cmp    %rbx,%rbp
   104f9:	74 0e                	je     10509 <memcpy_verw+0x79>
   104fb:	4c 89 da             	mov    %r11,%rdx
   104fe:	48 89 de             	mov    %rbx,%rsi
   10501:	48 89 ef             	mov    %rbp,%rdi
   10504:	e8 97 fe ff ff       	call   103a0 <__memcpy.part.0>
   10509:	4d 29 dc             	sub    %r11,%r12
   1050c:	4c 01 db             	add    %r11,%rbx
   1050f:	4c 01 dd             	add    %r11,%rbp
   10512:	49 83 fc 07          	cmp    $0x7,%r12
   10516:	77 cd                	ja     104e5 <memcpy_verw+0x55>
   10518:	4d 85 e4             	test   %r12,%r12
   1051b:	74 1a                	je     10537 <memcpy_verw+0xa7>
   1051d:	45 31 f6             	xor    %r14d,%r14d
   10520:	4a 8d 34 33          	lea    (%rbx,%r14,1),%rsi
   10524:	4a 8d 7c 35 00       	lea    0x0(%rbp,%r14,1),%rdi
   10529:	49 83 c6 01          	add    $0x1,%r14
   1052d:	e8 1e 09 00 00       	call   10e50 <__memcpy_verw>
   10532:	4d 39 e6             	cmp    %r12,%r14
   10535:	72 e9                	jb     10520 <memcpy_verw+0x90>
   10537:	5b                   	pop    %rbx
   10538:	4c 89 e8             	mov    %r13,%rax
   1053b:	5d                   	pop    %rbp
   1053c:	41 5c                	pop    %r12
   1053e:	41 5d                	pop    %r13
   10540:	41 5e                	pop    %r14
   10542:	c3                   	ret    
   10543:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1054a:	00 00 00 
   1054d:	0f 1f 00             	nopl   (%rax)

0000000000010550 <copy_external_memory>:
   10550:	41 57                	push   %r15
   10552:	66 0f ef c0          	pxor   %xmm0,%xmm0
   10556:	41 56                	push   %r14
   10558:	41 55                	push   %r13
   1055a:	41 54                	push   %r12
   1055c:	55                   	push   %rbp
   1055d:	53                   	push   %rbx
   1055e:	48 83 ec 38          	sub    $0x38,%rsp
   10562:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   10569:	00 00 
   1056b:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   10570:	31 c0                	xor    %eax,%eax
   10572:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   10577:	48 85 d2             	test   %rdx,%rdx
   1057a:	74 2d                	je     105a9 <copy_external_memory+0x59>
   1057c:	41 89 f6             	mov    %esi,%r14d
   1057f:	49 89 fd             	mov    %rdi,%r13
   10582:	48 89 f3             	mov    %rsi,%rbx
   10585:	41 89 cc             	mov    %ecx,%r12d
   10588:	41 83 e6 07          	and    $0x7,%r14d
   1058c:	75 52                	jne    105e0 <copy_external_memory+0x90>
   1058e:	48 83 fa 08          	cmp    $0x8,%rdx
   10592:	75 4c                	jne    105e0 <copy_external_memory+0x90>
   10594:	45 84 e4             	test   %r12b,%r12b
   10597:	75 37                	jne    105d0 <copy_external_memory+0x80>
   10599:	4c 39 eb             	cmp    %r13,%rbx
   1059c:	74 0b                	je     105a9 <copy_external_memory+0x59>
   1059e:	48 89 de             	mov    %rbx,%rsi
   105a1:	4c 89 ef             	mov    %r13,%rdi
   105a4:	e8 f7 fd ff ff       	call   103a0 <__memcpy.part.0>
   105a9:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   105ae:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
   105b5:	00 00 
   105b7:	75 7f                	jne    10638 <copy_external_memory+0xe8>
   105b9:	48 83 c4 38          	add    $0x38,%rsp
   105bd:	5b                   	pop    %rbx
   105be:	5d                   	pop    %rbp
   105bf:	41 5c                	pop    %r12
   105c1:	41 5d                	pop    %r13
   105c3:	41 5e                	pop    %r14
   105c5:	41 5f                	pop    %r15
   105c7:	c3                   	ret    
   105c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   105cf:	00 
   105d0:	48 89 de             	mov    %rbx,%rsi
   105d3:	4c 89 ef             	mov    %r13,%rdi
   105d6:	e8 b5 fe ff ff       	call   10490 <memcpy_verw>
   105db:	eb cc                	jmp    105a9 <copy_external_memory+0x59>
   105dd:	0f 1f 00             	nopl   (%rax)
   105e0:	45 89 f7             	mov    %r14d,%r15d
   105e3:	48 89 de             	mov    %rbx,%rsi
   105e6:	48 8d 6c 24 10       	lea    0x10(%rsp),%rbp
   105eb:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   105f0:	4c 29 fe             	sub    %r15,%rsi
   105f3:	48 89 ef             	mov    %rbp,%rdi
   105f6:	e8 75 08 00 00       	call   10e70 <__memcpy_8a>
   105fb:	45 85 f6             	test   %r14d,%r14d
   105fe:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   10603:	74 0a                	je     1060f <copy_external_memory+0xbf>
   10605:	49 8d 04 17          	lea    (%r15,%rdx,1),%rax
   10609:	48 83 f8 08          	cmp    $0x8,%rax
   1060d:	77 11                	ja     10620 <copy_external_memory+0xd0>
   1060f:	4a 8d 5c 3d 00       	lea    0x0(%rbp,%r15,1),%rbx
   10614:	45 84 e4             	test   %r12b,%r12b
   10617:	74 80                	je     10599 <copy_external_memory+0x49>
   10619:	eb b5                	jmp    105d0 <copy_external_memory+0x80>
   1061b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10620:	4c 29 fb             	sub    %r15,%rbx
   10623:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   10628:	48 8d 73 08          	lea    0x8(%rbx),%rsi
   1062c:	e8 3f 08 00 00       	call   10e70 <__memcpy_8a>
   10631:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   10636:	eb d7                	jmp    1060f <copy_external_memory+0xbf>
   10638:	e8 33 03 00 00       	call   10970 <__stack_chk_fail>
   1063d:	0f 1f 00             	nopl   (%rax)

0000000000010640 <memcpy_nochecks>:
   10640:	f3 0f 1e fa          	endbr64 
   10644:	49 89 fb             	mov    %rdi,%r11
   10647:	48 85 d2             	test   %rdx,%rdx
   1064a:	74 0a                	je     10656 <memcpy_nochecks+0x16>
   1064c:	48 39 f7             	cmp    %rsi,%rdi
   1064f:	74 05                	je     10656 <memcpy_nochecks+0x16>
   10651:	e8 4a fd ff ff       	call   103a0 <__memcpy.part.0>
   10656:	4c 89 d8             	mov    %r11,%rax
   10659:	c3                   	ret    
   1065a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000010660 <memcpy>:
   10660:	f3 0f 1e fa          	endbr64 
   10664:	41 57                	push   %r15
   10666:	41 56                	push   %r14
   10668:	41 55                	push   %r13
   1066a:	49 89 fd             	mov    %rdi,%r13
   1066d:	41 54                	push   %r12
   1066f:	55                   	push   %rbp
   10670:	53                   	push   %rbx
   10671:	48 83 ec 18          	sub    $0x18,%rsp
   10675:	48 85 d2             	test   %rdx,%rdx
   10678:	0f 84 d4 00 00 00    	je     10752 <memcpy+0xf2>
   1067e:	48 89 f3             	mov    %rsi,%rbx
   10681:	48 39 f7             	cmp    %rsi,%rdi
   10684:	0f 84 c8 00 00 00    	je     10752 <memcpy+0xf2>
   1068a:	48 89 d6             	mov    %rdx,%rsi
   1068d:	48 89 df             	mov    %rbx,%rdi
   10690:	48 89 d5             	mov    %rdx,%rbp
   10693:	e8 58 54 ff ff       	call   5af0 <sgx_is_within_enclave>
   10698:	48 89 ee             	mov    %rbp,%rsi
   1069b:	4c 89 ef             	mov    %r13,%rdi
   1069e:	41 89 c4             	mov    %eax,%r12d
   106a1:	e8 4a 54 ff ff       	call   5af0 <sgx_is_within_enclave>
   106a6:	45 85 e4             	test   %r12d,%r12d
   106a9:	0f 85 b9 00 00 00    	jne    10768 <memcpy+0x108>
   106af:	85 c0                	test   %eax,%eax
   106b1:	4d 89 ec             	mov    %r13,%r12
   106b4:	0f 94 c0             	sete   %al
   106b7:	0f b6 c0             	movzbl %al,%eax
   106ba:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   106be:	48 83 fd 07          	cmp    $0x7,%rbp
   106c2:	77 38                	ja     106fc <memcpy+0x9c>
   106c4:	eb 7a                	jmp    10740 <memcpy+0xe0>
   106c6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   106cd:	00 00 00 
   106d0:	41 be 08 00 00 00    	mov    $0x8,%r14d
   106d6:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
   106da:	48 89 de             	mov    %rbx,%rsi
   106dd:	4c 89 e7             	mov    %r12,%rdi
   106e0:	4d 29 fe             	sub    %r15,%r14
   106e3:	49 8d 6c 2f f8       	lea    -0x8(%r15,%rbp,1),%rbp
   106e8:	4c 89 f2             	mov    %r14,%rdx
   106eb:	4c 01 f3             	add    %r14,%rbx
   106ee:	4d 01 f4             	add    %r14,%r12
   106f1:	e8 5a fe ff ff       	call   10550 <copy_external_memory>
   106f6:	48 83 fd 07          	cmp    $0x7,%rbp
   106fa:	76 44                	jbe    10740 <memcpy+0xe0>
   106fc:	48 89 d8             	mov    %rbx,%rax
   106ff:	4d 89 e7             	mov    %r12,%r15
   10702:	4c 09 e0             	or     %r12,%rax
   10705:	41 83 e7 07          	and    $0x7,%r15d
   10709:	a8 07                	test   $0x7,%al
   1070b:	75 c3                	jne    106d0 <memcpy+0x70>
   1070d:	49 89 eb             	mov    %rbp,%r11
   10710:	49 83 e3 f8          	and    $0xfffffffffffffff8,%r11
   10714:	4c 39 e3             	cmp    %r12,%rbx
   10717:	74 0e                	je     10727 <memcpy+0xc7>
   10719:	4c 89 da             	mov    %r11,%rdx
   1071c:	48 89 de             	mov    %rbx,%rsi
   1071f:	4c 89 e7             	mov    %r12,%rdi
   10722:	e8 79 fc ff ff       	call   103a0 <__memcpy.part.0>
   10727:	4c 29 dd             	sub    %r11,%rbp
   1072a:	4c 01 db             	add    %r11,%rbx
   1072d:	4d 01 dc             	add    %r11,%r12
   10730:	48 83 fd 07          	cmp    $0x7,%rbp
   10734:	77 c6                	ja     106fc <memcpy+0x9c>
   10736:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1073d:	00 00 00 
   10740:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
   10744:	48 89 ea             	mov    %rbp,%rdx
   10747:	48 89 de             	mov    %rbx,%rsi
   1074a:	4c 89 e7             	mov    %r12,%rdi
   1074d:	e8 fe fd ff ff       	call   10550 <copy_external_memory>
   10752:	48 83 c4 18          	add    $0x18,%rsp
   10756:	4c 89 e8             	mov    %r13,%rax
   10759:	5b                   	pop    %rbx
   1075a:	5d                   	pop    %rbp
   1075b:	41 5c                	pop    %r12
   1075d:	41 5d                	pop    %r13
   1075f:	41 5e                	pop    %r14
   10761:	41 5f                	pop    %r15
   10763:	c3                   	ret    
   10764:	0f 1f 40 00          	nopl   0x0(%rax)
   10768:	48 89 ea             	mov    %rbp,%rdx
   1076b:	48 89 de             	mov    %rbx,%rsi
   1076e:	4c 89 ef             	mov    %r13,%rdi
   10771:	85 c0                	test   %eax,%eax
   10773:	75 1b                	jne    10790 <memcpy+0x130>
   10775:	48 83 c4 18          	add    $0x18,%rsp
   10779:	5b                   	pop    %rbx
   1077a:	5d                   	pop    %rbp
   1077b:	41 5c                	pop    %r12
   1077d:	41 5d                	pop    %r13
   1077f:	41 5e                	pop    %r14
   10781:	41 5f                	pop    %r15
   10783:	e9 08 fd ff ff       	jmp    10490 <memcpy_verw>
   10788:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1078f:	00 
   10790:	e8 0b fc ff ff       	call   103a0 <__memcpy.part.0>
   10795:	eb bb                	jmp    10752 <memcpy+0xf2>
   10797:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1079e:	00 00 

00000000000107a0 <memset_verw>:
   107a0:	f3 0f 1e fa          	endbr64 
   107a4:	41 56                	push   %r14
   107a6:	41 55                	push   %r13
   107a8:	41 54                	push   %r12
   107aa:	49 89 fc             	mov    %rdi,%r12
   107ad:	55                   	push   %rbp
   107ae:	53                   	push   %rbx
   107af:	48 83 ec 20          	sub    $0x20,%rsp
   107b3:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   107ba:	00 00 
   107bc:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   107c1:	31 c0                	xor    %eax,%eax
   107c3:	48 85 d2             	test   %rdx,%rdx
   107c6:	0f 84 a0 00 00 00    	je     1086c <memset_verw+0xcc>
   107cc:	48 85 ff             	test   %rdi,%rdi
   107cf:	0f 84 97 00 00 00    	je     1086c <memset_verw+0xcc>
   107d5:	4c 8d 6c 24 10       	lea    0x10(%rsp),%r13
   107da:	48 89 d5             	mov    %rdx,%rbp
   107dd:	ba 08 00 00 00       	mov    $0x8,%edx
   107e2:	4c 89 e3             	mov    %r12,%rbx
   107e5:	4c 89 ef             	mov    %r13,%rdi
   107e8:	40 88 74 24 0f       	mov    %sil,0xf(%rsp)
   107ed:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   107f4:	00 00 
   107f6:	e8 85 06 00 00       	call   10e80 <__memset>
   107fb:	48 83 fd 07          	cmp    $0x7,%rbp
   107ff:	76 4b                	jbe    1084c <memset_verw+0xac>
   10801:	4c 8d 74 24 0f       	lea    0xf(%rsp),%r14
   10806:	eb 21                	jmp    10829 <memset_verw+0x89>
   10808:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1080f:	00 
   10810:	48 89 df             	mov    %rbx,%rdi
   10813:	4c 89 ee             	mov    %r13,%rsi
   10816:	48 83 ed 08          	sub    $0x8,%rbp
   1081a:	48 83 c3 08          	add    $0x8,%rbx
   1081e:	e8 4d 06 00 00       	call   10e70 <__memcpy_8a>
   10823:	48 83 fd 07          	cmp    $0x7,%rbp
   10827:	76 1e                	jbe    10847 <memset_verw+0xa7>
   10829:	f6 c3 07             	test   $0x7,%bl
   1082c:	74 e2                	je     10810 <memset_verw+0x70>
   1082e:	48 89 df             	mov    %rbx,%rdi
   10831:	4c 89 f6             	mov    %r14,%rsi
   10834:	48 83 ed 01          	sub    $0x1,%rbp
   10838:	48 83 c3 01          	add    $0x1,%rbx
   1083c:	e8 0f 06 00 00       	call   10e50 <__memcpy_verw>
   10841:	48 83 fd 07          	cmp    $0x7,%rbp
   10845:	77 e2                	ja     10829 <memset_verw+0x89>
   10847:	48 85 ed             	test   %rbp,%rbp
   1084a:	74 20                	je     1086c <memset_verw+0xcc>
   1084c:	48 01 dd             	add    %rbx,%rbp
   1084f:	4c 8d 6c 24 0f       	lea    0xf(%rsp),%r13
   10854:	0f 1f 40 00          	nopl   0x0(%rax)
   10858:	48 89 df             	mov    %rbx,%rdi
   1085b:	4c 89 ee             	mov    %r13,%rsi
   1085e:	48 83 c3 01          	add    $0x1,%rbx
   10862:	e8 e9 05 00 00       	call   10e50 <__memcpy_verw>
   10867:	48 39 eb             	cmp    %rbp,%rbx
   1086a:	75 ec                	jne    10858 <memset_verw+0xb8>
   1086c:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   10871:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
   10878:	00 00 
   1087a:	75 10                	jne    1088c <memset_verw+0xec>
   1087c:	48 83 c4 20          	add    $0x20,%rsp
   10880:	4c 89 e0             	mov    %r12,%rax
   10883:	5b                   	pop    %rbx
   10884:	5d                   	pop    %rbp
   10885:	41 5c                	pop    %r12
   10887:	41 5d                	pop    %r13
   10889:	41 5e                	pop    %r14
   1088b:	c3                   	ret    
   1088c:	e8 df 00 00 00       	call   10970 <__stack_chk_fail>
   10891:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   10898:	00 00 00 
   1089b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000108a0 <memset>:
   108a0:	f3 0f 1e fa          	endbr64 
   108a4:	e9 d7 05 00 00       	jmp    10e80 <__memset>
   108a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000108b0 <memset_s>:
   108b0:	f3 0f 1e fa          	endbr64 
   108b4:	53                   	push   %rbx
   108b5:	48 85 ff             	test   %rdi,%rdi
   108b8:	74 3e                	je     108f8 <memset_s+0x48>
   108ba:	48 89 f0             	mov    %rsi,%rax
   108bd:	89 d6                	mov    %edx,%esi
   108bf:	48 39 c8             	cmp    %rcx,%rax
   108c2:	73 1c                	jae    108e0 <memset_s+0x30>
   108c4:	48 8b 0d 8d 75 00 00 	mov    0x758d(%rip),%rcx        # 17e58 <__memset_vp>
   108cb:	48 89 c2             	mov    %rax,%rdx
   108ce:	bb 4b 00 00 00       	mov    $0x4b,%ebx
   108d3:	ff d1                	call   *%rcx
   108d5:	e8 66 05 00 00       	call   10e40 <__errno_location>
   108da:	89 18                	mov    %ebx,(%rax)
   108dc:	89 d8                	mov    %ebx,%eax
   108de:	5b                   	pop    %rbx
   108df:	c3                   	ret    
   108e0:	31 db                	xor    %ebx,%ebx
   108e2:	48 8b 05 6f 75 00 00 	mov    0x756f(%rip),%rax        # 17e58 <__memset_vp>
   108e9:	48 89 ca             	mov    %rcx,%rdx
   108ec:	ff d0                	call   *%rax
   108ee:	89 d8                	mov    %ebx,%eax
   108f0:	5b                   	pop    %rbx
   108f1:	c3                   	ret    
   108f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   108f8:	bb 16 00 00 00       	mov    $0x16,%ebx
   108fd:	eb d6                	jmp    108d5 <memset_s+0x25>
   108ff:	90                   	nop

0000000000010900 <memset_verw_s>:
   10900:	f3 0f 1e fa          	endbr64 
   10904:	53                   	push   %rbx
   10905:	48 85 ff             	test   %rdi,%rdi
   10908:	74 36                	je     10940 <memset_verw_s+0x40>
   1090a:	48 89 f0             	mov    %rsi,%rax
   1090d:	89 d6                	mov    %edx,%esi
   1090f:	48 39 c8             	cmp    %rcx,%rax
   10912:	73 1c                	jae    10930 <memset_verw_s+0x30>
   10914:	48 89 c2             	mov    %rax,%rdx
   10917:	bb 4b 00 00 00       	mov    $0x4b,%ebx
   1091c:	e8 7f fe ff ff       	call   107a0 <memset_verw>
   10921:	e8 1a 05 00 00       	call   10e40 <__errno_location>
   10926:	89 18                	mov    %ebx,(%rax)
   10928:	89 d8                	mov    %ebx,%eax
   1092a:	5b                   	pop    %rbx
   1092b:	c3                   	ret    
   1092c:	0f 1f 40 00          	nopl   0x0(%rax)
   10930:	31 db                	xor    %ebx,%ebx
   10932:	48 89 ca             	mov    %rcx,%rdx
   10935:	e8 66 fe ff ff       	call   107a0 <memset_verw>
   1093a:	89 d8                	mov    %ebx,%eax
   1093c:	5b                   	pop    %rbx
   1093d:	c3                   	ret    
   1093e:	66 90                	xchg   %ax,%ax
   10940:	bb 16 00 00 00       	mov    $0x16,%ebx
   10945:	eb da                	jmp    10921 <memset_verw_s+0x21>
   10947:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1094e:	00 00 

0000000000010950 <sgx_init_string_lib>:
   10950:	f3 0f 1e fa          	endbr64 
   10954:	31 c0                	xor    %eax,%eax
   10956:	c3                   	ret    
   10957:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1095e:	00 00 

0000000000010960 <strlen>:
   10960:	f3 0f 1e fa          	endbr64 
   10964:	e9 77 05 00 00       	jmp    10ee0 <_strlen>
   10969:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000010970 <__stack_chk_fail>:
   10970:	f3 0f 1e fa          	endbr64 
   10974:	50                   	push   %rax
   10975:	58                   	pop    %rax
   10976:	48 83 ec 08          	sub    $0x8,%rsp
   1097a:	e8 b8 19 00 00       	call   12337 <abort>
   1097f:	90                   	nop

0000000000010980 <__stack_chk_fail_local>:
   10980:	f3 0f 1e fa          	endbr64 
   10984:	50                   	push   %rax
   10985:	58                   	pop    %rax
   10986:	48 83 ec 08          	sub    $0x8,%rsp
   1098a:	e8 a8 19 00 00       	call   12337 <abort>
   1098f:	90                   	nop

0000000000010990 <__intel_security_check_cookie>:
   10990:	f3 0f 1e fa          	endbr64 
   10994:	48 39 3d 6d 74 00 00 	cmp    %rdi,0x746d(%rip)        # 17e08 <__intel_security_cookie>
   1099b:	75 01                	jne    1099e <__intel_security_check_cookie+0xe>
   1099d:	c3                   	ret    
   1099e:	50                   	push   %rax
   1099f:	e8 93 19 00 00       	call   12337 <abort>
   109a4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   109ab:	00 00 00 
   109ae:	66 90                	xchg   %ax,%ax

00000000000109b0 <sgx_thread_spin_init>:
   109b0:	f3 0f 1e fa          	endbr64 
   109b4:	48 85 ff             	test   %rdi,%rdi
   109b7:	74 37                	je     109f0 <sgx_thread_spin_init+0x40>
   109b9:	53                   	push   %rbx
   109ba:	be 18 00 00 00       	mov    $0x18,%esi
   109bf:	48 89 fb             	mov    %rdi,%rbx
   109c2:	e8 29 51 ff ff       	call   5af0 <sgx_is_within_enclave>
   109c7:	85 c0                	test   %eax,%eax
   109c9:	74 1d                	je     109e8 <sgx_thread_spin_init+0x38>
   109cb:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   109d2:	31 c0                	xor    %eax,%eax
   109d4:	48 c7 43 10 00 00 00 	movq   $0x0,0x10(%rbx)
   109db:	00 
   109dc:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%rbx)
   109e3:	5b                   	pop    %rbx
   109e4:	c3                   	ret    
   109e5:	0f 1f 00             	nopl   (%rax)
   109e8:	b8 16 00 00 00       	mov    $0x16,%eax
   109ed:	5b                   	pop    %rbx
   109ee:	c3                   	ret    
   109ef:	90                   	nop
   109f0:	b8 16 00 00 00       	mov    $0x16,%eax
   109f5:	c3                   	ret    
   109f6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   109fd:	00 00 00 

0000000000010a00 <sgx_thread_spin_destroy>:
   10a00:	f3 0f 1e fa          	endbr64 
   10a04:	48 85 ff             	test   %rdi,%rdi
   10a07:	74 6f                	je     10a78 <sgx_thread_spin_destroy+0x78>
   10a09:	55                   	push   %rbp
   10a0a:	be 18 00 00 00       	mov    $0x18,%esi
   10a0f:	53                   	push   %rbx
   10a10:	48 89 fb             	mov    %rdi,%rbx
   10a13:	48 83 ec 08          	sub    $0x8,%rsp
   10a17:	e8 d4 50 ff ff       	call   5af0 <sgx_is_within_enclave>
   10a1c:	85 c0                	test   %eax,%eax
   10a1e:	74 30                	je     10a50 <sgx_thread_spin_destroy+0x50>
   10a20:	48 8d 6b 08          	lea    0x8(%rbx),%rbp
   10a24:	48 89 ef             	mov    %rbp,%rdi
   10a27:	e8 d4 bc ff ff       	call   c700 <sgx_spin_lock>
   10a2c:	48 83 7b 10 00       	cmpq   $0x0,0x10(%rbx)
   10a31:	75 2d                	jne    10a60 <sgx_thread_spin_destroy+0x60>
   10a33:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   10a3a:	48 89 ef             	mov    %rbp,%rdi
   10a3d:	e8 4e bd ff ff       	call   c790 <sgx_spin_unlock>
   10a42:	48 83 c4 08          	add    $0x8,%rsp
   10a46:	31 c0                	xor    %eax,%eax
   10a48:	5b                   	pop    %rbx
   10a49:	5d                   	pop    %rbp
   10a4a:	c3                   	ret    
   10a4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10a50:	48 83 c4 08          	add    $0x8,%rsp
   10a54:	b8 16 00 00 00       	mov    $0x16,%eax
   10a59:	5b                   	pop    %rbx
   10a5a:	5d                   	pop    %rbp
   10a5b:	c3                   	ret    
   10a5c:	0f 1f 40 00          	nopl   0x0(%rax)
   10a60:	48 89 ef             	mov    %rbp,%rdi
   10a63:	e8 28 bd ff ff       	call   c790 <sgx_spin_unlock>
   10a68:	48 83 c4 08          	add    $0x8,%rsp
   10a6c:	b8 10 00 00 00       	mov    $0x10,%eax
   10a71:	5b                   	pop    %rbx
   10a72:	5d                   	pop    %rbp
   10a73:	c3                   	ret    
   10a74:	0f 1f 40 00          	nopl   0x0(%rax)
   10a78:	b8 16 00 00 00       	mov    $0x16,%eax
   10a7d:	c3                   	ret    
   10a7e:	66 90                	xchg   %ax,%ax

0000000000010a80 <sgx_thread_spin_trylock>:
   10a80:	f3 0f 1e fa          	endbr64 
   10a84:	48 85 ff             	test   %rdi,%rdi
   10a87:	74 7f                	je     10b08 <sgx_thread_spin_trylock+0x88>
   10a89:	41 54                	push   %r12
   10a8b:	be 18 00 00 00       	mov    $0x18,%esi
   10a90:	55                   	push   %rbp
   10a91:	53                   	push   %rbx
   10a92:	48 89 fb             	mov    %rdi,%rbx
   10a95:	e8 56 50 ff ff       	call   5af0 <sgx_is_within_enclave>
   10a9a:	85 c0                	test   %eax,%eax
   10a9c:	74 42                	je     10ae0 <sgx_thread_spin_trylock+0x60>
   10a9e:	e8 a0 14 00 00       	call   11f43 <get_thread_data>
   10aa3:	4c 8d 63 08          	lea    0x8(%rbx),%r12
   10aa7:	4c 89 e7             	mov    %r12,%rdi
   10aaa:	48 89 c5             	mov    %rax,%rbp
   10aad:	e8 4e bc ff ff       	call   c700 <sgx_spin_lock>
   10ab2:	48 8b 43 10          	mov    0x10(%rbx),%rax
   10ab6:	48 39 e8             	cmp    %rbp,%rax
   10ab9:	74 09                	je     10ac4 <sgx_thread_spin_trylock+0x44>
   10abb:	48 85 c0             	test   %rax,%rax
   10abe:	75 30                	jne    10af0 <sgx_thread_spin_trylock+0x70>
   10ac0:	48 89 6b 10          	mov    %rbp,0x10(%rbx)
   10ac4:	48 83 03 01          	addq   $0x1,(%rbx)
   10ac8:	4c 89 e7             	mov    %r12,%rdi
   10acb:	e8 c0 bc ff ff       	call   c790 <sgx_spin_unlock>
   10ad0:	5b                   	pop    %rbx
   10ad1:	31 c0                	xor    %eax,%eax
   10ad3:	5d                   	pop    %rbp
   10ad4:	41 5c                	pop    %r12
   10ad6:	c3                   	ret    
   10ad7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   10ade:	00 00 
   10ae0:	5b                   	pop    %rbx
   10ae1:	b8 16 00 00 00       	mov    $0x16,%eax
   10ae6:	5d                   	pop    %rbp
   10ae7:	41 5c                	pop    %r12
   10ae9:	c3                   	ret    
   10aea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10af0:	4c 89 e7             	mov    %r12,%rdi
   10af3:	e8 98 bc ff ff       	call   c790 <sgx_spin_unlock>
   10af8:	5b                   	pop    %rbx
   10af9:	b8 10 00 00 00       	mov    $0x10,%eax
   10afe:	5d                   	pop    %rbp
   10aff:	41 5c                	pop    %r12
   10b01:	c3                   	ret    
   10b02:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10b08:	b8 16 00 00 00       	mov    $0x16,%eax
   10b0d:	c3                   	ret    
   10b0e:	66 90                	xchg   %ax,%ax

0000000000010b10 <sgx_thread_spin_unlock>:
   10b10:	f3 0f 1e fa          	endbr64 
   10b14:	48 85 ff             	test   %rdi,%rdi
   10b17:	0f 84 8b 00 00 00    	je     10ba8 <sgx_thread_spin_unlock+0x98>
   10b1d:	41 54                	push   %r12
   10b1f:	be 18 00 00 00       	mov    $0x18,%esi
   10b24:	55                   	push   %rbp
   10b25:	53                   	push   %rbx
   10b26:	48 89 fb             	mov    %rdi,%rbx
   10b29:	e8 c2 4f ff ff       	call   5af0 <sgx_is_within_enclave>
   10b2e:	85 c0                	test   %eax,%eax
   10b30:	74 56                	je     10b88 <sgx_thread_spin_unlock+0x78>
   10b32:	e8 0c 14 00 00       	call   11f43 <get_thread_data>
   10b37:	4c 8d 63 08          	lea    0x8(%rbx),%r12
   10b3b:	4c 89 e7             	mov    %r12,%rdi
   10b3e:	48 89 c5             	mov    %rax,%rbp
   10b41:	e8 ba bb ff ff       	call   c700 <sgx_spin_lock>
   10b46:	48 8b 43 10          	mov    0x10(%rbx),%rax
   10b4a:	48 85 c0             	test   %rax,%rax
   10b4d:	74 21                	je     10b70 <sgx_thread_spin_unlock+0x60>
   10b4f:	48 39 e8             	cmp    %rbp,%rax
   10b52:	75 1c                	jne    10b70 <sgx_thread_spin_unlock+0x60>
   10b54:	48 83 2b 01          	subq   $0x1,(%rbx)
   10b58:	74 3e                	je     10b98 <sgx_thread_spin_unlock+0x88>
   10b5a:	4c 89 e7             	mov    %r12,%rdi
   10b5d:	e8 2e bc ff ff       	call   c790 <sgx_spin_unlock>
   10b62:	5b                   	pop    %rbx
   10b63:	31 c0                	xor    %eax,%eax
   10b65:	5d                   	pop    %rbp
   10b66:	41 5c                	pop    %r12
   10b68:	c3                   	ret    
   10b69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10b70:	4c 89 e7             	mov    %r12,%rdi
   10b73:	e8 18 bc ff ff       	call   c790 <sgx_spin_unlock>
   10b78:	5b                   	pop    %rbx
   10b79:	b8 01 00 00 00       	mov    $0x1,%eax
   10b7e:	5d                   	pop    %rbp
   10b7f:	41 5c                	pop    %r12
   10b81:	c3                   	ret    
   10b82:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10b88:	5b                   	pop    %rbx
   10b89:	b8 16 00 00 00       	mov    $0x16,%eax
   10b8e:	5d                   	pop    %rbp
   10b8f:	41 5c                	pop    %r12
   10b91:	c3                   	ret    
   10b92:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10b98:	48 c7 43 10 00 00 00 	movq   $0x0,0x10(%rbx)
   10b9f:	00 
   10ba0:	eb b8                	jmp    10b5a <sgx_thread_spin_unlock+0x4a>
   10ba2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10ba8:	b8 16 00 00 00       	mov    $0x16,%eax
   10bad:	c3                   	ret    
   10bae:	66 90                	xchg   %ax,%ax

0000000000010bb0 <memcpy_s>:
   10bb0:	f3 0f 1e fa          	endbr64 
   10bb4:	48 85 c9             	test   %rcx,%rcx
   10bb7:	74 4f                	je     10c08 <memcpy_s+0x58>
   10bb9:	53                   	push   %rbx
   10bba:	48 85 ff             	test   %rdi,%rdi
   10bbd:	74 51                	je     10c10 <memcpy_s+0x60>
   10bbf:	48 89 d3             	mov    %rdx,%rbx
   10bc2:	48 85 d2             	test   %rdx,%rdx
   10bc5:	74 19                	je     10be0 <memcpy_s+0x30>
   10bc7:	48 39 ce             	cmp    %rcx,%rsi
   10bca:	72 14                	jb     10be0 <memcpy_s+0x30>
   10bcc:	48 89 de             	mov    %rbx,%rsi
   10bcf:	48 89 ca             	mov    %rcx,%rdx
   10bd2:	e8 89 fa ff ff       	call   10660 <memcpy>
   10bd7:	31 c0                	xor    %eax,%eax
   10bd9:	5b                   	pop    %rbx
   10bda:	c3                   	ret    
   10bdb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10be0:	48 89 f2             	mov    %rsi,%rdx
   10be3:	31 f6                	xor    %esi,%esi
   10be5:	e8 b6 fc ff ff       	call   108a0 <memset>
   10bea:	48 85 db             	test   %rbx,%rbx
   10bed:	74 21                	je     10c10 <memcpy_s+0x60>
   10bef:	e8 4c 02 00 00       	call   10e40 <__errno_location>
   10bf4:	c7 00 22 00 00 00    	movl   $0x22,(%rax)
   10bfa:	b8 22 00 00 00       	mov    $0x22,%eax
   10bff:	5b                   	pop    %rbx
   10c00:	c3                   	ret    
   10c01:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10c08:	31 c0                	xor    %eax,%eax
   10c0a:	c3                   	ret    
   10c0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10c10:	e8 2b 02 00 00       	call   10e40 <__errno_location>
   10c15:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   10c1b:	b8 16 00 00 00       	mov    $0x16,%eax
   10c20:	5b                   	pop    %rbx
   10c21:	c3                   	ret    
   10c22:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   10c29:	00 00 00 
   10c2c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000010c30 <memcpy_verw_s>:
   10c30:	f3 0f 1e fa          	endbr64 
   10c34:	48 85 c9             	test   %rcx,%rcx
   10c37:	74 4f                	je     10c88 <memcpy_verw_s+0x58>
   10c39:	53                   	push   %rbx
   10c3a:	48 85 ff             	test   %rdi,%rdi
   10c3d:	74 51                	je     10c90 <memcpy_verw_s+0x60>
   10c3f:	48 89 d3             	mov    %rdx,%rbx
   10c42:	48 85 d2             	test   %rdx,%rdx
   10c45:	74 19                	je     10c60 <memcpy_verw_s+0x30>
   10c47:	48 39 ce             	cmp    %rcx,%rsi
   10c4a:	72 14                	jb     10c60 <memcpy_verw_s+0x30>
   10c4c:	48 89 de             	mov    %rbx,%rsi
   10c4f:	48 89 ca             	mov    %rcx,%rdx
   10c52:	e8 39 f8 ff ff       	call   10490 <memcpy_verw>
   10c57:	31 c0                	xor    %eax,%eax
   10c59:	5b                   	pop    %rbx
   10c5a:	c3                   	ret    
   10c5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10c60:	48 89 f2             	mov    %rsi,%rdx
   10c63:	31 f6                	xor    %esi,%esi
   10c65:	e8 36 fb ff ff       	call   107a0 <memset_verw>
   10c6a:	48 85 db             	test   %rbx,%rbx
   10c6d:	74 21                	je     10c90 <memcpy_verw_s+0x60>
   10c6f:	e8 cc 01 00 00       	call   10e40 <__errno_location>
   10c74:	c7 00 22 00 00 00    	movl   $0x22,(%rax)
   10c7a:	b8 22 00 00 00       	mov    $0x22,%eax
   10c7f:	5b                   	pop    %rbx
   10c80:	c3                   	ret    
   10c81:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10c88:	31 c0                	xor    %eax,%eax
   10c8a:	c3                   	ret    
   10c8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10c90:	e8 ab 01 00 00       	call   10e40 <__errno_location>
   10c95:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   10c9b:	b8 16 00 00 00       	mov    $0x16,%eax
   10ca0:	5b                   	pop    %rbx
   10ca1:	c3                   	ret    

0000000000010ca2 <setjmp>:
   10ca2:	f3 0f 1e fa          	endbr64 
   10ca6:	50                   	push   %rax
   10ca7:	53                   	push   %rbx
   10ca8:	51                   	push   %rcx
   10ca9:	52                   	push   %rdx
   10caa:	56                   	push   %rsi
   10cab:	57                   	push   %rdi
   10cac:	41 50                	push   %r8
   10cae:	41 51                	push   %r9
   10cb0:	41 52                	push   %r10
   10cb2:	41 53                	push   %r11
   10cb4:	41 54                	push   %r12
   10cb6:	41 55                	push   %r13
   10cb8:	41 56                	push   %r14
   10cba:	41 57                	push   %r15
   10cbc:	48 c7 c6 08 00 00 00 	mov    $0x8,%rsi
   10cc3:	e8 28 4e ff ff       	call   5af0 <sgx_is_within_enclave>
   10cc8:	83 f8 00             	cmp    $0x0,%eax
   10ccb:	74 60                	je     10d2d <.crash>
   10ccd:	41 5f                	pop    %r15
   10ccf:	41 5e                	pop    %r14
   10cd1:	41 5d                	pop    %r13
   10cd3:	41 5c                	pop    %r12
   10cd5:	41 5b                	pop    %r11
   10cd7:	41 5a                	pop    %r10
   10cd9:	41 59                	pop    %r9
   10cdb:	41 58                	pop    %r8
   10cdd:	5f                   	pop    %rdi
   10cde:	5e                   	pop    %rsi
   10cdf:	5a                   	pop    %rdx
   10ce0:	59                   	pop    %rcx
   10ce1:	5b                   	pop    %rbx
   10ce2:	58                   	pop    %rax
   10ce3:	4c 8b 1c 24          	mov    (%rsp),%r11
   10ce7:	48 89 1f             	mov    %rbx,(%rdi)
   10cea:	48 89 6f 08          	mov    %rbp,0x8(%rdi)
   10cee:	4c 89 67 10          	mov    %r12,0x10(%rdi)
   10cf2:	4c 89 6f 18          	mov    %r13,0x18(%rdi)
   10cf6:	4c 89 77 20          	mov    %r14,0x20(%rdi)
   10cfa:	4c 89 7f 28          	mov    %r15,0x28(%rdi)
   10cfe:	48 89 67 30          	mov    %rsp,0x30(%rdi)
   10d02:	4c 89 5f 38          	mov    %r11,0x38(%rdi)
   10d06:	e8 46 12 00 00       	call   11f51 <get_stack_guard>
   10d0b:	48 31 07             	xor    %rax,(%rdi)
   10d0e:	48 31 47 08          	xor    %rax,0x8(%rdi)
   10d12:	48 31 47 10          	xor    %rax,0x10(%rdi)
   10d16:	48 31 47 18          	xor    %rax,0x18(%rdi)
   10d1a:	48 31 47 20          	xor    %rax,0x20(%rdi)
   10d1e:	48 31 47 28          	xor    %rax,0x28(%rdi)
   10d22:	48 31 47 30          	xor    %rax,0x30(%rdi)
   10d26:	48 31 47 38          	xor    %rax,0x38(%rdi)
   10d2a:	31 c0                	xor    %eax,%eax
   10d2c:	c3                   	ret    

0000000000010d2d <.crash>:
   10d2d:	0f 0b                	ud2    

0000000000010d2f <longjmp>:
   10d2f:	f3 0f 1e fa          	endbr64 
   10d33:	50                   	push   %rax
   10d34:	53                   	push   %rbx
   10d35:	51                   	push   %rcx
   10d36:	52                   	push   %rdx
   10d37:	56                   	push   %rsi
   10d38:	57                   	push   %rdi
   10d39:	41 50                	push   %r8
   10d3b:	41 51                	push   %r9
   10d3d:	41 52                	push   %r10
   10d3f:	41 53                	push   %r11
   10d41:	41 54                	push   %r12
   10d43:	41 55                	push   %r13
   10d45:	41 56                	push   %r14
   10d47:	41 57                	push   %r15
   10d49:	57                   	push   %rdi
   10d4a:	48 c7 c6 08 00 00 00 	mov    $0x8,%rsi
   10d51:	e8 9a 4d ff ff       	call   5af0 <sgx_is_within_enclave>
   10d56:	83 f8 00             	cmp    $0x0,%eax
   10d59:	74 d2                	je     10d2d <.crash>
   10d5b:	5f                   	pop    %rdi
   10d5c:	48 8b 57 30          	mov    0x30(%rdi),%rdx
   10d60:	e8 ec 11 00 00       	call   11f51 <get_stack_guard>
   10d65:	48 31 c2             	xor    %rax,%rdx
   10d68:	52                   	push   %rdx
   10d69:	5f                   	pop    %rdi
   10d6a:	e8 b1 68 ff ff       	call   7620 <is_valid_sp>
   10d6f:	83 f8 00             	cmp    $0x0,%eax
   10d72:	74 b9                	je     10d2d <.crash>
   10d74:	41 5f                	pop    %r15
   10d76:	41 5e                	pop    %r14
   10d78:	41 5d                	pop    %r13
   10d7a:	41 5c                	pop    %r12
   10d7c:	41 5b                	pop    %r11
   10d7e:	41 5a                	pop    %r10
   10d80:	41 59                	pop    %r9
   10d82:	41 58                	pop    %r8
   10d84:	5f                   	pop    %rdi
   10d85:	5e                   	pop    %rsi
   10d86:	5a                   	pop    %rdx
   10d87:	59                   	pop    %rcx
   10d88:	5b                   	pop    %rbx
   10d89:	58                   	pop    %rax
   10d8a:	89 f0                	mov    %esi,%eax
   10d8c:	48 8b 1f             	mov    (%rdi),%rbx
   10d8f:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   10d93:	4c 8b 67 10          	mov    0x10(%rdi),%r12
   10d97:	4c 8b 6f 18          	mov    0x18(%rdi),%r13
   10d9b:	4c 8b 77 20          	mov    0x20(%rdi),%r14
   10d9f:	4c 8b 7f 28          	mov    0x28(%rdi),%r15
   10da3:	48 8b 57 30          	mov    0x30(%rdi),%rdx
   10da7:	48 8b 4f 38          	mov    0x38(%rdi),%rcx
   10dab:	50                   	push   %rax
   10dac:	e8 a0 11 00 00       	call   11f51 <get_stack_guard>
   10db1:	48 31 c3             	xor    %rax,%rbx
   10db4:	48 31 c6             	xor    %rax,%rsi
   10db7:	49 31 c4             	xor    %rax,%r12
   10dba:	49 31 c5             	xor    %rax,%r13
   10dbd:	49 31 c6             	xor    %rax,%r14
   10dc0:	49 31 c7             	xor    %rax,%r15
   10dc3:	48 31 c2             	xor    %rax,%rdx
   10dc6:	48 31 c1             	xor    %rax,%rcx
   10dc9:	58                   	pop    %rax
   10dca:	48 89 f5             	mov    %rsi,%rbp
   10dcd:	48 89 0a             	mov    %rcx,(%rdx)
   10dd0:	48 89 d4             	mov    %rdx,%rsp
   10dd3:	85 c0                	test   %eax,%eax
   10dd5:	75 02                	jne    10dd9 <longjmp+0xaa>
   10dd7:	ff c0                	inc    %eax
   10dd9:	c3                   	ret    
   10dda:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000010de0 <rsrv_mem_init>:
   10de0:	f3 0f 1e fa          	endbr64 
   10de4:	48 85 ff             	test   %rdi,%rdi
   10de7:	74 47                	je     10e30 <rsrv_mem_init+0x50>
   10de9:	48 89 f0             	mov    %rsi,%rax
   10dec:	b9 01 00 00 00       	mov    $0x1,%ecx
   10df1:	48 09 d0             	or     %rdx,%rax
   10df4:	48 09 f8             	or     %rdi,%rax
   10df7:	a9 ff 0f 00 00       	test   $0xfff,%eax
   10dfc:	74 0a                	je     10e08 <rsrv_mem_init+0x28>
   10dfe:	89 c8                	mov    %ecx,%eax
   10e00:	c3                   	ret    
   10e01:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10e08:	48 89 f0             	mov    %rsi,%rax
   10e0b:	48 03 05 5e 70 00 00 	add    0x705e(%rip),%rax        # 17e70 <rsrv_mem_base>
   10e12:	72 ea                	jb     10dfe <rsrv_mem_init+0x1e>
   10e14:	31 c9                	xor    %ecx,%ecx
   10e16:	48 89 3d 53 70 00 00 	mov    %rdi,0x7053(%rip)        # 17e70 <rsrv_mem_base>
   10e1d:	48 89 35 44 70 00 00 	mov    %rsi,0x7044(%rip)        # 17e68 <rsrv_mem_size>
   10e24:	89 c8                	mov    %ecx,%eax
   10e26:	48 89 15 33 70 00 00 	mov    %rdx,0x7033(%rip)        # 17e60 <rsrv_mem_min_size>
   10e2d:	c3                   	ret    
   10e2e:	66 90                	xchg   %ax,%ax
   10e30:	b9 01 00 00 00       	mov    $0x1,%ecx
   10e35:	89 c8                	mov    %ecx,%eax
   10e37:	c3                   	ret    
   10e38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   10e3f:	00 

0000000000010e40 <__errno_location>:
   10e40:	f3 0f 1e fa          	endbr64 
   10e44:	e9 27 67 ff ff       	jmp    7570 <get_errno_addr>
   10e49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000010e50 <__memcpy_verw>:
   10e50:	8a 06                	mov    (%rsi),%al
   10e52:	48 83 ec 08          	sub    $0x8,%rsp
   10e56:	8c 1c 24             	mov    %ds,(%rsp)
   10e59:	0f 00 2c 24          	verw   (%rsp)
   10e5d:	88 07                	mov    %al,(%rdi)
   10e5f:	0f ae f0             	mfence 
   10e62:	0f ae e8             	lfence 
   10e65:	48 83 c4 08          	add    $0x8,%rsp
   10e69:	48 89 f8             	mov    %rdi,%rax
   10e6c:	c3                   	ret    
   10e6d:	cc                   	int3   
   10e6e:	cc                   	int3   
   10e6f:	cc                   	int3   

0000000000010e70 <__memcpy_8a>:
   10e70:	48 8b 06             	mov    (%rsi),%rax
   10e73:	48 89 07             	mov    %rax,(%rdi)
   10e76:	48 89 f8             	mov    %rdi,%rax
   10e79:	c3                   	ret    
   10e7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000010e80 <__memset>:
   10e80:	48 89 f0             	mov    %rsi,%rax
   10e83:	48 25 ff 00 00 00    	and    $0xff,%rax
   10e89:	48 89 d1             	mov    %rdx,%rcx
   10e8c:	49 89 fb             	mov    %rdi,%r11
   10e8f:	fc                   	cld    
   10e90:	48 83 f9 0f          	cmp    $0xf,%rcx
   10e94:	7e 38                	jle    10ece <L1>
   10e96:	88 c4                	mov    %al,%ah
   10e98:	89 c2                	mov    %eax,%edx
   10e9a:	c1 e0 10             	shl    $0x10,%eax
   10e9d:	09 d0                	or     %edx,%eax
   10e9f:	89 c2                	mov    %eax,%edx
   10ea1:	48 c1 e0 20          	shl    $0x20,%rax
   10ea5:	48 09 d0             	or     %rdx,%rax
   10ea8:	48 89 fa             	mov    %rdi,%rdx
   10eab:	48 f7 da             	neg    %rdx
   10eae:	48 83 e2 07          	and    $0x7,%rdx
   10eb2:	49 89 c8             	mov    %rcx,%r8
   10eb5:	49 29 d0             	sub    %rdx,%r8
   10eb8:	48 89 d1             	mov    %rdx,%rcx
   10ebb:	f3 aa                	rep stos %al,%es:(%rdi)
   10ebd:	4c 89 c1             	mov    %r8,%rcx
   10ec0:	48 c1 e9 03          	shr    $0x3,%rcx
   10ec4:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   10ec7:	4c 89 c1             	mov    %r8,%rcx
   10eca:	48 83 e1 07          	and    $0x7,%rcx

0000000000010ece <L1>:
   10ece:	f3 aa                	rep stos %al,%es:(%rdi)
   10ed0:	4c 89 d8             	mov    %r11,%rax
   10ed3:	c3                   	ret    
   10ed4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   10edb:	00 00 00 
   10ede:	66 90                	xchg   %ax,%ax

0000000000010ee0 <_strlen>:
   10ee0:	49 b8 01 01 01 01 01 	movabs $0x101010101010101,%r8
   10ee7:	01 01 01 
   10eea:	40 f6 c7 07          	test   $0x7,%dil
   10eee:	48 89 f8             	mov    %rdi,%rax
   10ef1:	49 b9 80 80 80 80 80 	movabs $0x8080808080808080,%r9
   10ef8:	80 80 80 
   10efb:	75 33                	jne    10f30 <_strlen+0x50>
   10efd:	0f 1f 00             	nopl   (%rax)
   10f00:	48 8b 10             	mov    (%rax),%rdx
   10f03:	48 83 c0 08          	add    $0x8,%rax
   10f07:	48 89 d1             	mov    %rdx,%rcx
   10f0a:	4c 29 c2             	sub    %r8,%rdx
   10f0d:	48 f7 d1             	not    %rcx
   10f10:	4c 21 ca             	and    %r9,%rdx
   10f13:	74 eb                	je     10f00 <_strlen+0x20>
   10f15:	48 21 ca             	and    %rcx,%rdx
   10f18:	74 e6                	je     10f00 <_strlen+0x20>
   10f1a:	48 29 f8             	sub    %rdi,%rax
   10f1d:	48 0f bc d2          	bsf    %rdx,%rdx
   10f21:	48 c1 ea 03          	shr    $0x3,%rdx
   10f25:	48 8d 44 10 f8       	lea    -0x8(%rax,%rdx,1),%rax
   10f2a:	c3                   	ret    
   10f2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10f30:	88 c1                	mov    %al,%cl
   10f32:	48 c7 c6 01 00 00 00 	mov    $0x1,%rsi
   10f39:	80 e1 07             	and    $0x7,%cl
   10f3c:	24 f8                	and    $0xf8,%al
   10f3e:	c0 e1 03             	shl    $0x3,%cl
   10f41:	48 8b 10             	mov    (%rax),%rdx
   10f44:	48 d3 e6             	shl    %cl,%rsi
   10f47:	48 ff ce             	dec    %rsi
   10f4a:	48 09 f2             	or     %rsi,%rdx
   10f4d:	eb b4                	jmp    10f03 <_strlen+0x23>
   10f4f:	90                   	nop

0000000000010f50 <sgx_init_crypto_lib>:
   10f50:	f3 0f 1e fa          	endbr64 
   10f54:	e9 07 00 00 00       	jmp    10f60 <init_ipp_cpuid>
   10f59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000010f60 <init_ipp_cpuid>:
   10f60:	f3 0f 1e fa          	endbr64 
   10f64:	48 83 3d 84 70 00 00 	cmpq   $0x0,0x7084(%rip)        # 17ff0 <ippcpSetCpuFeatures>
   10f6b:	00 
   10f6c:	0f 84 2e 02 00 00    	je     111a0 <init_ipp_cpuid+0x240>
   10f72:	48 89 f8             	mov    %rdi,%rax
   10f75:	ba 02 00 00 00       	mov    $0x2,%edx
   10f7a:	f6 c4 02             	test   $0x2,%ah
   10f7d:	0f 84 1f 02 00 00    	je     111a2 <init_ipp_cpuid+0x242>
   10f83:	48 89 fa             	mov    %rdi,%rdx
   10f86:	48 83 ec 08          	sub    $0x8,%rsp
   10f8a:	48 b9 00 00 00 00 08 	movabs $0x800000000,%rcx
   10f91:	00 00 00 
   10f94:	81 e2 00 08 00 00    	and    $0x800,%edx
   10f9a:	48 83 fa 01          	cmp    $0x1,%rdx
   10f9e:	48 19 ff             	sbb    %rdi,%rdi
   10fa1:	48 83 e7 e0          	and    $0xffffffffffffffe0,%rdi
   10fa5:	48 83 c7 7f          	add    $0x7f,%rdi
   10fa9:	48 89 fa             	mov    %rdi,%rdx
   10fac:	80 ca 80             	or     $0x80,%dl
   10faf:	f6 c4 04             	test   $0x4,%ah
   10fb2:	48 0f 45 fa          	cmovne %rdx,%rdi
   10fb6:	48 89 fa             	mov    %rdi,%rdx
   10fb9:	80 ce 03             	or     $0x3,%dh
   10fbc:	a9 00 00 01 00       	test   $0x10000,%eax
   10fc1:	48 0f 45 fa          	cmovne %rdx,%rdi
   10fc5:	48 89 fa             	mov    %rdi,%rdx
   10fc8:	80 ce 04             	or     $0x4,%dh
   10fcb:	f6 c4 40             	test   $0x40,%ah
   10fce:	48 0f 45 fa          	cmovne %rdx,%rdi
   10fd2:	48 89 fa             	mov    %rdi,%rdx
   10fd5:	80 ce 08             	or     $0x8,%dh
   10fd8:	f6 c4 20             	test   $0x20,%ah
   10fdb:	48 0f 45 fa          	cmovne %rdx,%rdi
   10fdf:	48 89 fa             	mov    %rdi,%rdx
   10fe2:	80 ce 20             	or     $0x20,%dh
   10fe5:	a9 00 00 02 00       	test   $0x20000,%eax
   10fea:	48 0f 45 fa          	cmovne %rdx,%rdi
   10fee:	48 89 fa             	mov    %rdi,%rdx
   10ff1:	80 ce 40             	or     $0x40,%dh
   10ff4:	f6 c4 80             	test   $0x80,%ah
   10ff7:	48 0f 45 fa          	cmovne %rdx,%rdi
   10ffb:	48 89 fa             	mov    %rdi,%rdx
   10ffe:	80 ce 80             	or     $0x80,%dh
   11001:	a9 00 00 80 00       	test   $0x800000,%eax
   11006:	48 0f 45 fa          	cmovne %rdx,%rdi
   1100a:	48 89 fa             	mov    %rdi,%rdx
   1100d:	48 81 ca 00 00 01 00 	or     $0x10000,%rdx
   11014:	a9 00 00 00 10       	test   $0x10000000,%eax
   11019:	48 0f 45 fa          	cmovne %rdx,%rdi
   1101d:	48 89 fa             	mov    %rdi,%rdx
   11020:	48 81 ca 00 00 02 00 	or     $0x20000,%rdx
   11027:	a9 00 00 00 20       	test   $0x20000000,%eax
   1102c:	48 0f 45 fa          	cmovne %rdx,%rdi
   11030:	48 89 fa             	mov    %rdi,%rdx
   11033:	48 81 ca 00 00 08 00 	or     $0x80000,%rdx
   1103a:	48 85 c8             	test   %rcx,%rax
   1103d:	48 0f 45 fa          	cmovne %rdx,%rdi
   11041:	a9 00 00 00 08       	test   $0x8000000,%eax
   11046:	74 0d                	je     11055 <init_ipp_cpuid+0xf5>
   11048:	48 ba 00 00 10 00 02 	movabs $0x200100000,%rdx
   1104f:	00 00 00 
   11052:	48 09 d7             	or     %rdx,%rdi
   11055:	48 b9 00 00 00 00 02 	movabs $0x200000000,%rcx
   1105c:	00 00 00 
   1105f:	48 89 fa             	mov    %rdi,%rdx
   11062:	48 81 ca 00 00 80 00 	or     $0x800000,%rdx
   11069:	48 85 c8             	test   %rcx,%rax
   1106c:	48 b9 00 00 00 00 01 	movabs $0x100000000,%rcx
   11073:	00 00 00 
   11076:	48 0f 45 fa          	cmovne %rdx,%rdi
   1107a:	48 89 fa             	mov    %rdi,%rdx
   1107d:	48 81 ca 00 00 40 00 	or     $0x400000,%rdx
   11084:	48 85 c8             	test   %rcx,%rax
   11087:	48 b9 00 00 00 00 04 	movabs $0x400000000,%rcx
   1108e:	00 00 00 
   11091:	48 0f 45 fa          	cmovne %rdx,%rdi
   11095:	48 89 fa             	mov    %rdi,%rdx
   11098:	48 81 ca 00 00 20 00 	or     $0x200000,%rdx
   1109f:	48 85 c8             	test   %rcx,%rax
   110a2:	48 b9 00 00 00 00 20 	movabs $0x2000000000,%rcx
   110a9:	00 00 00 
   110ac:	48 0f 45 fa          	cmovne %rdx,%rdi
   110b0:	48 89 fa             	mov    %rdi,%rdx
   110b3:	48 81 ca 00 00 00 02 	or     $0x2000000,%rdx
   110ba:	a9 00 00 00 01       	test   $0x1000000,%eax
   110bf:	48 0f 45 fa          	cmovne %rdx,%rdi
   110c3:	48 89 fa             	mov    %rdi,%rdx
   110c6:	48 81 ca 00 00 00 01 	or     $0x1000000,%rdx
   110cd:	48 85 c8             	test   %rcx,%rax
   110d0:	48 b9 00 00 00 00 40 	movabs $0x4000000000,%rcx
   110d7:	00 00 00 
   110da:	48 0f 45 fa          	cmovne %rdx,%rdi
   110de:	48 89 fa             	mov    %rdi,%rdx
   110e1:	48 81 ca 00 00 00 04 	or     $0x4000000,%rdx
   110e8:	48 85 c8             	test   %rcx,%rax
   110eb:	48 b9 00 00 00 00 80 	movabs $0x8000000000,%rcx
   110f2:	00 00 00 
   110f5:	48 0f 45 fa          	cmovne %rdx,%rdi
   110f9:	48 89 fa             	mov    %rdi,%rdx
   110fc:	48 81 ca 00 00 00 08 	or     $0x8000000,%rdx
   11103:	48 85 c8             	test   %rcx,%rax
   11106:	48 b9 00 00 00 00 00 	movabs $0x20000000000,%rcx
   1110d:	02 00 00 
   11110:	48 0f 45 fa          	cmovne %rdx,%rdi
   11114:	48 89 fa             	mov    %rdi,%rdx
   11117:	48 81 ca 00 00 00 40 	or     $0x40000000,%rdx
   1111e:	48 85 c8             	test   %rcx,%rax
   11121:	48 b9 00 00 00 00 00 	movabs $0x10000000000,%rcx
   11128:	01 00 00 
   1112b:	48 0f 45 fa          	cmovne %rdx,%rdi
   1112f:	48 89 fa             	mov    %rdi,%rdx
   11132:	48 81 ca 00 00 00 20 	or     $0x20000000,%rdx
   11139:	48 85 c8             	test   %rcx,%rax
   1113c:	48 0f 45 fa          	cmovne %rdx,%rdi
   11140:	48 0f ba e0 2e       	bt     $0x2e,%rax
   11145:	73 05                	jae    1114c <init_ipp_cpuid+0x1ec>
   11147:	48 0f ba ef 23       	bts    $0x23,%rdi
   1114c:	a9 00 00 00 40       	test   $0x40000000,%eax
   11151:	74 05                	je     11158 <init_ipp_cpuid+0x1f8>
   11153:	48 0f ba ef 20       	bts    $0x20,%rdi
   11158:	48 0f ba e0 2d       	bt     $0x2d,%rax
   1115d:	73 05                	jae    11164 <init_ipp_cpuid+0x204>
   1115f:	48 0f ba ef 22       	bts    $0x22,%rdi
   11164:	48 0f ba e0 2c       	bt     $0x2c,%rax
   11169:	73 05                	jae    11170 <init_ipp_cpuid+0x210>
   1116b:	48 0f ba ef 25       	bts    $0x25,%rdi
   11170:	48 0f ba e0 2f       	bt     $0x2f,%rax
   11175:	73 05                	jae    1117c <init_ipp_cpuid+0x21c>
   11177:	48 0f ba ef 24       	bts    $0x24,%rdi
   1117c:	48 0f ba ef 3f       	bts    $0x3f,%rdi
   11181:	e8 92 fe fe ff       	call   1018 <ippcpSetCpuFeatures@plt>
   11186:	31 d2                	xor    %edx,%edx
   11188:	85 c0                	test   %eax,%eax
   1118a:	0f 95 c2             	setne  %dl
   1118d:	48 83 c4 08          	add    $0x8,%rsp
   11191:	01 d2                	add    %edx,%edx
   11193:	89 d0                	mov    %edx,%eax
   11195:	c3                   	ret    
   11196:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1119d:	00 00 00 
   111a0:	31 d2                	xor    %edx,%edx
   111a2:	89 d0                	mov    %edx,%eax
   111a4:	c3                   	ret    
   111a5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   111ac:	00 00 00 
   111af:	90                   	nop

00000000000111b0 <sgx_create_report>:
   111b0:	f3 0f 1e fa          	endbr64 
   111b4:	55                   	push   %rbp
   111b5:	48 89 e5             	mov    %rsp,%rbp
   111b8:	41 57                	push   %r15
   111ba:	49 89 f7             	mov    %rsi,%r15
   111bd:	31 f6                	xor    %esi,%esi
   111bf:	41 56                	push   %r14
   111c1:	41 55                	push   %r13
   111c3:	49 89 fd             	mov    %rdi,%r13
   111c6:	41 54                	push   %r12
   111c8:	53                   	push   %rbx
   111c9:	48 89 d3             	mov    %rdx,%rbx
   111cc:	ba 40 00 00 00       	mov    $0x40,%edx
   111d1:	48 81 e4 00 fe ff ff 	and    $0xfffffffffffffe00,%rsp
   111d8:	48 81 ec 00 08 00 00 	sub    $0x800,%rsp
   111df:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   111e6:	00 00 
   111e8:	48 89 84 24 f8 07 00 	mov    %rax,0x7f8(%rsp)
   111ef:	00 
   111f0:	31 c0                	xor    %eax,%eax
   111f2:	48 8d 84 24 80 01 00 	lea    0x180(%rsp),%rax
   111f9:	00 
   111fa:	4c 8d b4 24 00 04 00 	lea    0x400(%rsp),%r14
   11201:	00 
   11202:	48 89 c7             	mov    %rax,%rdi
   11205:	48 89 84 24 78 01 00 	mov    %rax,0x178(%rsp)
   1120c:	00 
   1120d:	4c 8d a4 24 00 02 00 	lea    0x200(%rsp),%r12
   11214:	00 
   11215:	e8 66 fc ff ff       	call   10e80 <__memset>
   1121a:	31 f6                	xor    %esi,%esi
   1121c:	ba 00 02 00 00       	mov    $0x200,%edx
   11221:	4c 89 f7             	mov    %r14,%rdi
   11224:	e8 57 fc ff ff       	call   10e80 <__memset>
   11229:	31 f6                	xor    %esi,%esi
   1122b:	ba b0 01 00 00       	mov    $0x1b0,%edx
   11230:	4c 89 e7             	mov    %r12,%rdi
   11233:	e8 48 fc ff ff       	call   10e80 <__memset>
   11238:	4d 85 ed             	test   %r13,%r13
   1123b:	74 23                	je     11260 <sgx_create_report+0xb0>
   1123d:	be 00 02 00 00       	mov    $0x200,%esi
   11242:	4c 89 ef             	mov    %r13,%rdi
   11245:	e8 a6 48 ff ff       	call   5af0 <sgx_is_within_enclave>
   1124a:	85 c0                	test   %eax,%eax
   1124c:	0f 84 be 00 00 00    	je     11310 <sgx_create_report+0x160>
   11252:	b9 40 00 00 00       	mov    $0x40,%ecx
   11257:	4c 89 f7             	mov    %r14,%rdi
   1125a:	4c 89 ee             	mov    %r13,%rsi
   1125d:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
   11260:	4d 85 ff             	test   %r15,%r15
   11263:	74 4c                	je     112b1 <sgx_create_report+0x101>
   11265:	be 40 00 00 00       	mov    $0x40,%esi
   1126a:	4c 89 ff             	mov    %r15,%rdi
   1126d:	e8 7e 48 ff ff       	call   5af0 <sgx_is_within_enclave>
   11272:	85 c0                	test   %eax,%eax
   11274:	0f 84 96 00 00 00    	je     11310 <sgx_create_report+0x160>
   1127a:	f3 41 0f 6f 0f       	movdqu (%r15),%xmm1
   1127f:	f3 41 0f 6f 57 10    	movdqu 0x10(%r15),%xmm2
   11285:	f3 41 0f 6f 5f 20    	movdqu 0x20(%r15),%xmm3
   1128b:	f3 41 0f 6f 67 30    	movdqu 0x30(%r15),%xmm4
   11291:	0f 29 8c 24 80 01 00 	movaps %xmm1,0x180(%rsp)
   11298:	00 
   11299:	0f 29 94 24 90 01 00 	movaps %xmm2,0x190(%rsp)
   112a0:	00 
   112a1:	0f 29 9c 24 a0 01 00 	movaps %xmm3,0x1a0(%rsp)
   112a8:	00 
   112a9:	0f 29 a4 24 b0 01 00 	movaps %xmm4,0x1b0(%rsp)
   112b0:	00 
   112b1:	48 85 db             	test   %rbx,%rbx
   112b4:	74 5a                	je     11310 <sgx_create_report+0x160>
   112b6:	be b0 01 00 00       	mov    $0x1b0,%esi
   112bb:	48 89 df             	mov    %rbx,%rdi
   112be:	e8 2d 48 ff ff       	call   5af0 <sgx_is_within_enclave>
   112c3:	85 c0                	test   %eax,%eax
   112c5:	74 49                	je     11310 <sgx_create_report+0x160>
   112c7:	48 8b b4 24 78 01 00 	mov    0x178(%rsp),%rsi
   112ce:	00 
   112cf:	4c 89 e2             	mov    %r12,%rdx
   112d2:	4c 89 f7             	mov    %r14,%rdi
   112d5:	e8 a6 0f 00 00       	call   12280 <do_ereport>
   112da:	89 c2                	mov    %eax,%edx
   112dc:	b8 01 00 00 00       	mov    $0x1,%eax
   112e1:	85 d2                	test   %edx,%edx
   112e3:	75 30                	jne    11315 <sgx_create_report+0x165>
   112e5:	31 c0                	xor    %eax,%eax
   112e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   112ee:	00 00 
   112f0:	66 41 0f 6f 04 04    	movdqa (%r12,%rax,1),%xmm0
   112f6:	0f 11 04 03          	movups %xmm0,(%rbx,%rax,1)
   112fa:	48 83 c0 10          	add    $0x10,%rax
   112fe:	48 3d b0 01 00 00    	cmp    $0x1b0,%rax
   11304:	75 ea                	jne    112f0 <sgx_create_report+0x140>
   11306:	31 c0                	xor    %eax,%eax
   11308:	eb 0b                	jmp    11315 <sgx_create_report+0x165>
   1130a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   11310:	b8 02 00 00 00       	mov    $0x2,%eax
   11315:	48 8b 94 24 f8 07 00 	mov    0x7f8(%rsp),%rdx
   1131c:	00 
   1131d:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   11324:	00 00 
   11326:	75 0f                	jne    11337 <sgx_create_report+0x187>
   11328:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
   1132c:	5b                   	pop    %rbx
   1132d:	41 5c                	pop    %r12
   1132f:	41 5d                	pop    %r13
   11331:	41 5e                	pop    %r14
   11333:	41 5f                	pop    %r15
   11335:	5d                   	pop    %rbp
   11336:	c3                   	ret    
   11337:	e8 34 f6 ff ff       	call   10970 <__stack_chk_fail>
   1133c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000011340 <sgx_self_report>:
   11340:	f3 0f 1e fa          	endbr64 
   11344:	55                   	push   %rbp
   11345:	53                   	push   %rbx
   11346:	48 8d 1d 13 9b 01 00 	lea    0x19b13(%rip),%rbx        # 2ae60 <_ZZ15sgx_self_reportE7_report>
   1134d:	48 83 ec 08          	sub    $0x8,%rsp
   11351:	48 83 3d 37 9b 01 00 	cmpq   $0x0,0x19b37(%rip)        # 2ae90 <_ZZ15sgx_self_reportE7_report+0x30>
   11358:	00 
   11359:	74 0d                	je     11368 <sgx_self_report+0x28>
   1135b:	48 83 c4 08          	add    $0x8,%rsp
   1135f:	48 89 d8             	mov    %rbx,%rax
   11362:	5b                   	pop    %rbx
   11363:	5d                   	pop    %rbp
   11364:	c3                   	ret    
   11365:	0f 1f 00             	nopl   (%rax)
   11368:	48 8d 2d d1 9a 01 00 	lea    0x19ad1(%rip),%rbp        # 2ae40 <_ZZ15sgx_self_reportE11report_lock>
   1136f:	48 89 ef             	mov    %rbp,%rdi
   11372:	e8 89 b3 ff ff       	call   c700 <sgx_spin_lock>
   11377:	48 83 3d 11 9b 01 00 	cmpq   $0x0,0x19b11(%rip)        # 2ae90 <_ZZ15sgx_self_reportE7_report+0x30>
   1137e:	00 
   1137f:	74 17                	je     11398 <sgx_self_report+0x58>
   11381:	48 89 ef             	mov    %rbp,%rdi
   11384:	e8 07 b4 ff ff       	call   c790 <sgx_spin_unlock>
   11389:	48 83 c4 08          	add    $0x8,%rsp
   1138d:	48 89 d8             	mov    %rbx,%rax
   11390:	5b                   	pop    %rbx
   11391:	5d                   	pop    %rbp
   11392:	c3                   	ret    
   11393:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   11398:	48 89 da             	mov    %rbx,%rdx
   1139b:	31 f6                	xor    %esi,%esi
   1139d:	31 ff                	xor    %edi,%edi
   1139f:	e8 0c fe ff ff       	call   111b0 <sgx_create_report>
   113a4:	eb db                	jmp    11381 <sgx_self_report+0x41>

Disassembly of section .nipx:

0000000000011400 <init_enclave>:
   11400:	f3 0f 1e fa          	endbr64 
   11404:	41 54                	push   %r12
   11406:	55                   	push   %rbp
   11407:	53                   	push   %rbx
   11408:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
   1140f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   11416:	00 00 
   11418:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
   1141f:	00 
   11420:	31 c0                	xor    %eax,%eax
   11422:	48 85 ff             	test   %rdi,%rdi
   11425:	0f 84 f5 02 00 00    	je     11720 <init_enclave+0x320>
   1142b:	48 89 f3             	mov    %rsi,%rbx
   1142e:	48 85 f6             	test   %rsi,%rsi
   11431:	0f 84 e9 02 00 00    	je     11720 <init_enclave+0x320>
   11437:	48 83 3d 91 6b 00 00 	cmpq   $0x0,0x6b91(%rip)        # 17fd0 <_Z9pcl_entryPvS_>
   1143e:	00 
   1143f:	48 89 fd             	mov    %rdi,%rbp
   11442:	74 10                	je     11454 <init_enclave+0x54>
   11444:	0f ae e8             	lfence 
   11447:	e8 c4 fb fe ff       	call   1010 <_Z9pcl_entryPvS_@plt>
   1144c:	85 c0                	test   %eax,%eax
   1144e:	0f 85 cc 02 00 00    	jne    11720 <init_enclave+0x320>
   11454:	48 89 ef             	mov    %rbp,%rdi
   11457:	e8 04 6f ff ff       	call   8360 <relocate_enclave>
   1145c:	89 c5                	mov    %eax,%ebp
   1145e:	85 c0                	test   %eax,%eax
   11460:	0f 85 ba 02 00 00    	jne    11720 <init_enclave+0x320>
   11466:	e8 8d 0a 00 00       	call   11ef8 <get_enclave_base>
   1146b:	48 8d 15 0e 1d 00 00 	lea    0x1d0e(%rip),%rdx        # 13180 <g_global_data>
   11472:	48 89 05 a7 69 00 00 	mov    %rax,0x69a7(%rip)        # 17e20 <g_enclave_base>
   11479:	48 8b 8a d0 06 00 00 	mov    0x6d0(%rdx),%rcx
   11480:	48 89 0d 91 69 00 00 	mov    %rcx,0x6991(%rip)        # 17e18 <g_enclave_size>
   11487:	48 8b 8a c0 06 00 00 	mov    0x6c0(%rdx),%rcx
   1148e:	48 85 c9             	test   %rcx,%rcx
   11491:	74 1e                	je     114b1 <init_enclave+0xb1>
   11493:	48 8b 8a c0 06 00 00 	mov    0x6c0(%rdx),%rcx
   1149a:	48 39 c8             	cmp    %rcx,%rax
   1149d:	0f 85 84 02 00 00    	jne    11727 <init_enclave+0x327>
   114a3:	48 8b 82 c8 06 00 00 	mov    0x6c8(%rdx),%rax
   114aa:	48 89 05 6f 69 00 00 	mov    %rax,0x696f(%rip)        # 17e20 <g_enclave_base>
   114b1:	be b0 00 00 00       	mov    $0xb0,%esi
   114b6:	48 89 df             	mov    %rbx,%rdi
   114b9:	e8 92 46 ff ff       	call   5b50 <sgx_is_outside_enclave>
   114be:	85 c0                	test   %eax,%eax
   114c0:	0f 84 5a 02 00 00    	je     11720 <init_enclave+0x320>
   114c6:	0f ae e8             	lfence 
   114c9:	f3 0f 6f 03          	movdqu (%rbx),%xmm0
   114cd:	f3 0f 6f 4b 10       	movdqu 0x10(%rbx),%xmm1
   114d2:	f3 0f 6f 53 20       	movdqu 0x20(%rbx),%xmm2
   114d7:	f3 0f 6f 5b 30       	movdqu 0x30(%rbx),%xmm3
   114dc:	f3 0f 6f 63 40       	movdqu 0x40(%rbx),%xmm4
   114e1:	0f 29 04 24          	movaps %xmm0,(%rsp)
   114e5:	f3 0f 6f 6b 50       	movdqu 0x50(%rbx),%xmm5
   114ea:	f3 0f 6f 73 60       	movdqu 0x60(%rbx),%xmm6
   114ef:	0f 29 4c 24 10       	movaps %xmm1,0x10(%rsp)
   114f4:	f3 0f 6f 7b 70       	movdqu 0x70(%rbx),%xmm7
   114f9:	f3 0f 6f 83 80 00 00 	movdqu 0x80(%rbx),%xmm0
   11500:	00 
   11501:	0f 29 54 24 20       	movaps %xmm2,0x20(%rsp)
   11506:	f3 0f 6f 8b 90 00 00 	movdqu 0x90(%rbx),%xmm1
   1150d:	00 
   1150e:	f3 0f 6f 93 a0 00 00 	movdqu 0xa0(%rbx),%xmm2
   11515:	00 
   11516:	0f 29 5c 24 30       	movaps %xmm3,0x30(%rsp)
   1151b:	0f 29 64 24 40       	movaps %xmm4,0x40(%rsp)
   11520:	0f 29 6c 24 50       	movaps %xmm5,0x50(%rsp)
   11525:	0f 29 74 24 60       	movaps %xmm6,0x60(%rsp)
   1152a:	0f 29 7c 24 70       	movaps %xmm7,0x70(%rsp)
   1152f:	0f 29 84 24 80 00 00 	movaps %xmm0,0x80(%rsp)
   11536:	00 
   11537:	0f 29 8c 24 90 00 00 	movaps %xmm1,0x90(%rsp)
   1153e:	00 
   1153f:	0f 29 94 24 a0 00 00 	movaps %xmm2,0xa0(%rsp)
   11546:	00 
   11547:	f6 44 24 13 40       	testb  $0x40,0x13(%rsp)
   1154c:	0f 85 8e 01 00 00    	jne    116e0 <init_enclave+0x2e0>
   11552:	b9 14 00 00 00       	mov    $0x14,%ecx
   11557:	b8 9c 00 00 00       	mov    $0x9c,%eax
   1155c:	48 8d 14 04          	lea    (%rsp,%rax,1),%rdx
   11560:	48 8d 41 ff          	lea    -0x1(%rcx),%rax
   11564:	83 e0 01             	and    $0x1,%eax
   11567:	c6 02 00             	movb   $0x0,(%rdx)
   1156a:	48 89 c6             	mov    %rax,%rsi
   1156d:	b8 01 00 00 00       	mov    $0x1,%eax
   11572:	48 39 c8             	cmp    %rcx,%rax
   11575:	73 2b                	jae    115a2 <init_enclave+0x1a2>
   11577:	48 85 f6             	test   %rsi,%rsi
   1157a:	74 14                	je     11590 <init_enclave+0x190>
   1157c:	b8 02 00 00 00       	mov    $0x2,%eax
   11581:	c6 42 01 00          	movb   $0x0,0x1(%rdx)
   11585:	48 39 c8             	cmp    %rcx,%rax
   11588:	73 18                	jae    115a2 <init_enclave+0x1a2>
   1158a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   11590:	c6 04 02 00          	movb   $0x0,(%rdx,%rax,1)
   11594:	48 83 c0 02          	add    $0x2,%rax
   11598:	c6 44 10 ff 00       	movb   $0x0,-0x1(%rax,%rdx,1)
   1159d:	48 39 c8             	cmp    %rcx,%rax
   115a0:	72 ee                	jb     11590 <init_enclave+0x190>
   115a2:	8b 84 24 ac 00 00 00 	mov    0xac(%rsp),%eax
   115a9:	48 8d 5c 24 0c       	lea    0xc(%rsp),%rbx
   115ae:	89 05 5c 68 00 00    	mov    %eax,0x685c(%rip)        # 17e10 <g_cpu_core_num>
   115b4:	8b 44 24 08          	mov    0x8(%rsp),%eax
   115b8:	89 05 6a 68 00 00    	mov    %eax,0x686a(%rip)        # 17e28 <g_sdk_version>
   115be:	85 c0                	test   %eax,%eax
   115c0:	74 1a                	je     115dc <init_enclave+0x1dc>
   115c2:	83 f8 04             	cmp    $0x4,%eax
   115c5:	0f 8e 55 01 00 00    	jle    11720 <init_enclave+0x320>
   115cb:	48 8d 5c 24 0c       	lea    0xc(%rsp),%rbx
   115d0:	31 f6                	xor    %esi,%esi
   115d2:	48 89 df             	mov    %rbx,%rdi
   115d5:	e8 b6 5f ff ff       	call   7590 <feature_supported>
   115da:	89 c5                	mov    %eax,%ebp
   115dc:	48 89 df             	mov    %rbx,%rdi
   115df:	be 01 00 00 00       	mov    $0x1,%esi
   115e4:	89 2d 42 68 00 00    	mov    %ebp,0x6842(%rip)        # 17e2c <EDMM_supported>
   115ea:	e8 a1 5f ff ff       	call   7590 <feature_supported>
   115ef:	44 8b 25 36 68 00 00 	mov    0x6836(%rip),%r12d        # 17e2c <EDMM_supported>
   115f6:	89 05 18 68 00 00    	mov    %eax,0x6818(%rip)        # 17e14 <g_aexnotify_supported>
   115fc:	e8 9f 5d ff ff       	call   73a0 <get_heap_min_size>
   11601:	48 89 c5             	mov    %rax,%rbp
   11604:	e8 27 5d ff ff       	call   7330 <get_heap_size>
   11609:	48 89 c3             	mov    %rax,%rbx
   1160c:	e8 ff 5c ff ff       	call   7310 <get_heap_base>
   11611:	44 89 e1             	mov    %r12d,%ecx
   11614:	48 89 ea             	mov    %rbp,%rdx
   11617:	48 89 de             	mov    %rbx,%rsi
   1161a:	48 89 c7             	mov    %rax,%rdi
   1161d:	e8 4e af ff ff       	call   c570 <heap_init>
   11622:	85 c0                	test   %eax,%eax
   11624:	0f 85 f6 00 00 00    	jne    11720 <init_enclave+0x320>
   1162a:	e8 b1 6a ff ff       	call   80e0 <get_xfeature_state>
   1162f:	48 8b 3c 24          	mov    (%rsp),%rdi
   11633:	48 89 c2             	mov    %rax,%rdx
   11636:	48 81 e7 ff e7 ff e1 	and    $0xffffffffe1ffe7ff,%rdi
   1163d:	f6 44 24 13 40       	testb  $0x40,0x13(%rsp)
   11642:	74 08                	je     1164c <init_enclave+0x24c>
   11644:	48 8b bc 24 a4 00 00 	mov    0xa4(%rsp),%rdi
   1164b:	00 
   1164c:	83 3d d5 67 00 00 01 	cmpl   $0x1,0x67d5(%rip)        # 17e28 <g_sdk_version>
   11653:	7f 0f                	jg     11664 <init_enclave+0x264>
   11655:	48 83 bc 24 9c 00 00 	cmpq   $0x0,0x9c(%rsp)
   1165c:	00 00 
   1165e:	0f 84 a4 00 00 00    	je     11708 <init_enclave+0x308>
   11664:	48 8d 74 24 14       	lea    0x14(%rsp),%rsi
   11669:	e8 62 43 ff ff       	call   59d0 <init_optimized_libs>
   1166e:	85 c0                	test   %eax,%eax
   11670:	0f 85 aa 00 00 00    	jne    11720 <init_enclave+0x320>
   11676:	e8 25 5e ff ff       	call   74a0 <get_rsrv_size>
   1167b:	48 85 c0             	test   %rax,%rax
   1167e:	74 27                	je     116a7 <init_enclave+0x2a7>
   11680:	e8 8b 5e ff ff       	call   7510 <get_rsrv_min_size>
   11685:	48 89 c5             	mov    %rax,%rbp
   11688:	e8 13 5e ff ff       	call   74a0 <get_rsrv_size>
   1168d:	48 89 c3             	mov    %rax,%rbx
   11690:	e8 6b 5d ff ff       	call   7400 <get_rsrv_base>
   11695:	48 89 ea             	mov    %rbp,%rdx
   11698:	48 89 de             	mov    %rbx,%rsi
   1169b:	48 89 c7             	mov    %rax,%rdi
   1169e:	e8 3d f7 ff ff       	call   10de0 <rsrv_mem_init>
   116a3:	85 c0                	test   %eax,%eax
   116a5:	75 79                	jne    11720 <init_enclave+0x320>
   116a7:	be 08 00 00 00       	mov    $0x8,%esi
   116ac:	48 8d 3d 55 67 00 00 	lea    0x6755(%rip),%rdi        # 17e08 <__intel_security_cookie>
   116b3:	e8 38 46 ff ff       	call   5cf0 <sgx_read_rand>
   116b8:	f7 d8                	neg    %eax
   116ba:	19 c0                	sbb    %eax,%eax
   116bc:	48 8b 94 24 b8 00 00 	mov    0xb8(%rsp),%rdx
   116c3:	00 
   116c4:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   116cb:	00 00 
   116cd:	75 5d                	jne    1172c <init_enclave+0x32c>
   116cf:	48 81 c4 c0 00 00 00 	add    $0xc0,%rsp
   116d6:	5b                   	pop    %rbx
   116d7:	5d                   	pop    %rbp
   116d8:	41 5c                	pop    %r12
   116da:	c3                   	ret    
   116db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   116e0:	48 8b 84 24 9c 00 00 	mov    0x9c(%rsp),%rax
   116e7:	00 
   116e8:	b9 b0 00 00 00       	mov    $0xb0,%ecx
   116ed:	48 29 c1             	sub    %rax,%rcx
   116f0:	48 3d af 00 00 00    	cmp    $0xaf,%rax
   116f6:	0f 86 60 fe ff ff    	jbe    1155c <init_enclave+0x15c>
   116fc:	e9 a1 fe ff ff       	jmp    115a2 <init_enclave+0x1a2>
   11701:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   11708:	31 f6                	xor    %esi,%esi
   1170a:	e8 c1 42 ff ff       	call   59d0 <init_optimized_libs>
   1170f:	85 c0                	test   %eax,%eax
   11711:	0f 84 5f ff ff ff    	je     11676 <init_enclave+0x276>
   11717:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1171e:	00 00 
   11720:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   11725:	eb 95                	jmp    116bc <init_enclave+0x2bc>
   11727:	e8 0b 0c 00 00       	call   12337 <abort>
   1172c:	e8 3f f2 ff ff       	call   10970 <__stack_chk_fail>
   11731:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   11738:	00 00 00 00 
   1173c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000011740 <do_init_enclave>:
   11740:	f3 0f 1e fa          	endbr64 
   11744:	41 54                	push   %r12
   11746:	49 89 f4             	mov    %rsi,%r12
   11749:	55                   	push   %rbp
   1174a:	48 89 fd             	mov    %rdi,%rbp
   1174d:	53                   	push   %rbx
   1174e:	e8 a5 07 00 00       	call   11ef8 <get_enclave_base>
   11753:	48 89 c3             	mov    %rax,%rbx
   11756:	e8 c8 07 00 00       	call   11f23 <lock_enclave>
   1175b:	85 c0                	test   %eax,%eax
   1175d:	74 11                	je     11770 <do_init_enclave+0x30>
   1175f:	bd 01 00 00 00       	mov    $0x1,%ebp
   11764:	89 e8                	mov    %ebp,%eax
   11766:	5b                   	pop    %rbx
   11767:	5d                   	pop    %rbp
   11768:	41 5c                	pop    %r12
   1176a:	c3                   	ret    
   1176b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   11770:	48 89 ee             	mov    %rbp,%rsi
   11773:	48 89 df             	mov    %rbx,%rdi
   11776:	e8 85 fc ff ff       	call   11400 <init_enclave>
   1177b:	85 c0                	test   %eax,%eax
   1177d:	75 e0                	jne    1175f <do_init_enclave+0x1f>
   1177f:	be 01 00 00 00       	mov    $0x1,%esi
   11784:	4c 89 e7             	mov    %r12,%rdi
   11787:	e8 94 53 ff ff       	call   6b20 <do_init_thread>
   1178c:	89 c5                	mov    %eax,%ebp
   1178e:	85 c0                	test   %eax,%eax
   11790:	75 cd                	jne    1175f <do_init_enclave+0x1f>
   11792:	8b 15 94 66 00 00    	mov    0x6694(%rip),%edx        # 17e2c <EDMM_supported>
   11798:	85 d2                	test   %edx,%edx
   1179a:	0f 84 f0 00 00 00    	je     11890 <do_init_enclave+0x150>
   117a0:	e8 fb 5b ff ff       	call   73a0 <get_heap_min_size>
   117a5:	4c 8d 25 d4 19 00 00 	lea    0x19d4(%rip),%r12        # 13180 <g_global_data>
   117ac:	31 d2                	xor    %edx,%edx
   117ae:	48 89 c6             	mov    %rax,%rsi
   117b1:	48 89 c1             	mov    %rax,%rcx
   117b4:	49 8b 7c 24 10       	mov    0x10(%r12),%rdi
   117b9:	48 01 df             	add    %rbx,%rdi
   117bc:	e8 ef f0 ff ff       	call   108b0 <memset_s>
   117c1:	48 8d 05 98 66 00 00 	lea    0x6698(%rip),%rax        # 17e60 <rsrv_mem_min_size>
   117c8:	49 8b 7c 24 20       	mov    0x20(%r12),%rdi
   117cd:	31 d2                	xor    %edx,%edx
   117cf:	48 8b 30             	mov    (%rax),%rsi
   117d2:	48 01 df             	add    %rbx,%rdi
   117d5:	48 89 f1             	mov    %rsi,%rcx
   117d8:	e8 d3 f0 ff ff       	call   108b0 <memset_s>
   117dd:	bf 02 00 00 00       	mov    $0x2,%edi
   117e2:	e8 2e 07 00 00       	call   11f15 <set_enclave_state>
   117e7:	8b 05 3f 66 00 00    	mov    0x663f(%rip),%eax        # 17e2c <EDMM_supported>
   117ed:	85 c0                	test   %eax,%eax
   117ef:	0f 84 6f ff ff ff    	je     11764 <do_init_enclave+0x24>
   117f5:	41 8b 84 24 58 01 00 	mov    0x158(%r12),%eax
   117fc:	00 
   117fd:	49 8d ac 24 60 01 00 	lea    0x160(%r12),%rbp
   11804:	00 
   11805:	48 c1 e0 05          	shl    $0x5,%rax
   11809:	48 01 e8             	add    %rbp,%rax
   1180c:	48 39 c5             	cmp    %rax,%rbp
   1180f:	72 10                	jb     11821 <do_init_enclave+0xe1>
   11811:	eb 15                	jmp    11828 <do_init_enclave+0xe8>
   11813:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   11818:	48 83 c5 20          	add    $0x20,%rbp
   1181c:	48 39 c5             	cmp    %rax,%rbp
   1181f:	73 07                	jae    11828 <do_init_enclave+0xe8>
   11821:	66 83 7d 00 17       	cmpw   $0x17,0x0(%rbp)
   11826:	75 f0                	jne    11818 <do_init_enclave+0xd8>
   11828:	48 39 e8             	cmp    %rbp,%rax
   1182b:	0f 84 9f 00 00 00    	je     118d0 <do_init_enclave+0x190>
   11831:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
   11835:	8b 75 04             	mov    0x4(%rbp),%esi
   11838:	48 01 df             	add    %rbx,%rdi
   1183b:	48 c1 e6 0c          	shl    $0xc,%rsi
   1183f:	48 01 fe             	add    %rdi,%rsi
   11842:	0f 82 17 ff ff ff    	jb     1175f <do_init_enclave+0x1f>
   11848:	e8 a3 ac ff ff       	call   c4f0 <sgx_mm_init>
   1184d:	85 c0                	test   %eax,%eax
   1184f:	0f 85 0a ff ff ff    	jne    1175f <do_init_enclave+0x1f>
   11855:	49 8b bc 24 d8 06 00 	mov    0x6d8(%r12),%rdi
   1185c:	00 
   1185d:	e8 0e 9b ff ff       	call   b370 <emalloc_init_with_reserved_mem>
   11862:	85 c0                	test   %eax,%eax
   11864:	0f 85 f5 fe ff ff    	jne    1175f <do_init_enclave+0x1f>
   1186a:	48 89 ea             	mov    %rbp,%rdx
   1186d:	49 8d b4 24 60 01 00 	lea    0x160(%r12),%rsi
   11874:	00 
   11875:	48 89 df             	mov    %rbx,%rdi
   11878:	31 ed                	xor    %ebp,%ebp
   1187a:	e8 d1 3e ff ff       	call   5750 <init_rts_emas>
   1187f:	85 c0                	test   %eax,%eax
   11881:	40 0f 95 c5          	setne  %bpl
   11885:	e9 da fe ff ff       	jmp    11764 <do_init_enclave+0x24>
   1188a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   11890:	4c 8d 25 e9 18 00 00 	lea    0x18e9(%rip),%r12        # 13180 <g_global_data>
   11897:	31 d2                	xor    %edx,%edx
   11899:	49 8b 4c 24 18       	mov    0x18(%r12),%rcx
   1189e:	49 8b 74 24 18       	mov    0x18(%r12),%rsi
   118a3:	49 8b 7c 24 10       	mov    0x10(%r12),%rdi
   118a8:	48 01 df             	add    %rbx,%rdi
   118ab:	e8 00 f0 ff ff       	call   108b0 <memset_s>
   118b0:	49 8b 4c 24 28       	mov    0x28(%r12),%rcx
   118b5:	49 8b 74 24 28       	mov    0x28(%r12),%rsi
   118ba:	31 d2                	xor    %edx,%edx
   118bc:	49 8b 7c 24 20       	mov    0x20(%r12),%rdi
   118c1:	48 01 df             	add    %rbx,%rdi
   118c4:	e8 e7 ef ff ff       	call   108b0 <memset_s>
   118c9:	e9 0f ff ff ff       	jmp    117dd <do_init_enclave+0x9d>
   118ce:	66 90                	xchg   %ax,%ax
   118d0:	31 f6                	xor    %esi,%esi
   118d2:	31 ff                	xor    %edi,%edi
   118d4:	e9 6f ff ff ff       	jmp    11848 <do_init_enclave+0x108>
   118d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000118e0 <sgx_is_enclave_crashed>:
   118e0:	f3 0f 1e fa          	endbr64 
   118e4:	48 83 ec 08          	sub    $0x8,%rsp
   118e8:	e8 17 06 00 00       	call   11f04 <get_enclave_state>
   118ed:	83 f8 03             	cmp    $0x3,%eax
   118f0:	0f 94 c0             	sete   %al
   118f3:	48 83 c4 08          	add    $0x8,%rsp
   118f7:	0f b6 c0             	movzbl %al,%eax
   118fa:	c3                   	ret    
   118fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000011900 <enter_enclave>:
   11900:	f3 0f 1e fa          	endbr64 
   11904:	41 55                	push   %r13
   11906:	49 89 d5             	mov    %rdx,%r13
   11909:	41 54                	push   %r12
   1190b:	49 89 f4             	mov    %rsi,%r12
   1190e:	55                   	push   %rbp
   1190f:	89 cd                	mov    %ecx,%ebp
   11911:	53                   	push   %rbx
   11912:	89 fb                	mov    %edi,%ebx
   11914:	48 83 ec 18          	sub    $0x18,%rsp
   11918:	e8 c3 ff ff ff       	call   118e0 <sgx_is_enclave_crashed>
   1191d:	85 c0                	test   %eax,%eax
   1191f:	75 67                	jne    11988 <enter_enclave+0x88>
   11921:	83 fb ff             	cmp    $0xffffffff,%ebx
   11924:	75 2a                	jne    11950 <enter_enclave+0x50>
   11926:	85 ed                	test   %ebp,%ebp
   11928:	75 34                	jne    1195e <enter_enclave+0x5e>
   1192a:	4c 89 ee             	mov    %r13,%rsi
   1192d:	4c 89 e7             	mov    %r12,%rdi
   11930:	e8 0b fe ff ff       	call   11740 <do_init_enclave>
   11935:	89 c3                	mov    %eax,%ebx
   11937:	89 d8                	mov    %ebx,%eax
   11939:	83 fb 01             	cmp    $0x1,%ebx
   1193c:	74 29                	je     11967 <enter_enclave+0x67>
   1193e:	48 83 c4 18          	add    $0x18,%rsp
   11942:	5b                   	pop    %rbx
   11943:	5d                   	pop    %rbp
   11944:	41 5c                	pop    %r12
   11946:	41 5d                	pop    %r13
   11948:	c3                   	ret    
   11949:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   11950:	e8 af 05 00 00       	call   11f04 <get_enclave_state>
   11955:	83 f8 02             	cmp    $0x2,%eax
   11958:	75 0d                	jne    11967 <enter_enclave+0x67>
   1195a:	85 ed                	test   %ebp,%ebp
   1195c:	74 42                	je     119a0 <enter_enclave+0xa0>
   1195e:	83 fd 01             	cmp    $0x1,%ebp
   11961:	0f 84 e9 00 00 00    	je     11a50 <enter_enclave+0x150>
   11967:	bf 03 00 00 00       	mov    $0x3,%edi
   1196c:	e8 a4 05 00 00       	call   11f15 <set_enclave_state>
   11971:	b8 01 00 00 00       	mov    $0x1,%eax
   11976:	48 83 c4 18          	add    $0x18,%rsp
   1197a:	5b                   	pop    %rbx
   1197b:	5d                   	pop    %rbp
   1197c:	41 5c                	pop    %r12
   1197e:	41 5d                	pop    %r13
   11980:	c3                   	ret    
   11981:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   11988:	48 83 c4 18          	add    $0x18,%rsp
   1198c:	b8 06 10 00 00       	mov    $0x1006,%eax
   11991:	5b                   	pop    %rbx
   11992:	5d                   	pop    %rbp
   11993:	41 5c                	pop    %r12
   11995:	41 5d                	pop    %r13
   11997:	c3                   	ret    
   11998:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1199f:	00 
   119a0:	85 db                	test   %ebx,%ebx
   119a2:	79 2c                	jns    119d0 <enter_enclave+0xd0>
   119a4:	83 fb fa             	cmp    $0xfffffffa,%ebx
   119a7:	74 27                	je     119d0 <enter_enclave+0xd0>
   119a9:	83 fb fe             	cmp    $0xfffffffe,%ebx
   119ac:	0f 84 ce 00 00 00    	je     11a80 <enter_enclave+0x180>
   119b2:	83 fb fc             	cmp    $0xfffffffc,%ebx
   119b5:	0f 84 d5 00 00 00    	je     11a90 <enter_enclave+0x190>
   119bb:	83 fb fb             	cmp    $0xfffffffb,%ebx
   119be:	75 a7                	jne    11967 <enter_enclave+0x67>
   119c0:	4c 89 ef             	mov    %r13,%rdi
   119c3:	e8 f8 56 ff ff       	call   70c0 <do_uninit_enclave>
   119c8:	89 c3                	mov    %eax,%ebx
   119ca:	e9 68 ff ff ff       	jmp    11937 <enter_enclave+0x37>
   119cf:	90                   	nop
   119d0:	e8 6e 05 00 00       	call   11f43 <get_thread_data>
   119d5:	48 85 c0             	test   %rax,%rax
   119d8:	0f 84 c2 00 00 00    	je     11aa0 <enter_enclave+0x1a0>
   119de:	48 8b 48 08          	mov    0x8(%rax),%rcx
   119e2:	48 39 48 10          	cmp    %rcx,0x10(%rax)
   119e6:	75 40                	jne    11a28 <enter_enclave+0x128>
   119e8:	48 8d 05 91 17 00 00 	lea    0x1791(%rip),%rax        # 13180 <g_global_data>
   119ef:	48 8b 50 38          	mov    0x38(%rax),%rdx
   119f3:	48 85 d2             	test   %rdx,%rdx
   119f6:	74 30                	je     11a28 <enter_enclave+0x128>
   119f8:	48 8b 68 50          	mov    0x50(%rax),%rbp
   119fc:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   11a01:	be 08 00 00 00       	mov    $0x8,%esi
   11a06:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
   11a0d:	00 00 
   11a0f:	4c 01 ed             	add    %r13,%rbp
   11a12:	e8 d9 42 ff ff       	call   5cf0 <sgx_read_rand>
   11a17:	85 c0                	test   %eax,%eax
   11a19:	0f 85 8d 00 00 00    	jne    11aac <enter_enclave+0x1ac>
   11a1f:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   11a24:	48 89 45 28          	mov    %rax,0x28(%rbp)
   11a28:	89 df                	mov    %ebx,%edi
   11a2a:	4c 89 ea             	mov    %r13,%rdx
   11a2d:	4c 89 e6             	mov    %r12,%rsi
   11a30:	e8 4b 53 ff ff       	call   6d80 <do_ecall>
   11a35:	89 c3                	mov    %eax,%ebx
   11a37:	89 d8                	mov    %ebx,%eax
   11a39:	83 fb 01             	cmp    $0x1,%ebx
   11a3c:	0f 85 fc fe ff ff    	jne    1193e <enter_enclave+0x3e>
   11a42:	e9 20 ff ff ff       	jmp    11967 <enter_enclave+0x67>
   11a47:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   11a4e:	00 00 
   11a50:	4c 89 ef             	mov    %r13,%rdi
   11a53:	e8 d8 62 ff ff       	call   7d30 <trts_handle_exception>
   11a58:	4c 89 ef             	mov    %r13,%rdi
   11a5b:	89 c3                	mov    %eax,%ebx
   11a5d:	e8 be 43 ff ff       	call   5e20 <check_static_stack_canary>
   11a62:	89 c2                	mov    %eax,%edx
   11a64:	b8 09 10 00 00       	mov    $0x1009,%eax
   11a69:	85 d2                	test   %edx,%edx
   11a6b:	0f 85 05 ff ff ff    	jne    11976 <enter_enclave+0x76>
   11a71:	e9 c1 fe ff ff       	jmp    11937 <enter_enclave+0x37>
   11a76:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11a7d:	00 00 00 
   11a80:	4c 89 e7             	mov    %r12,%rdi
   11a83:	e8 88 57 ff ff       	call   7210 <do_oret>
   11a88:	89 c3                	mov    %eax,%ebx
   11a8a:	e9 a8 fe ff ff       	jmp    11937 <enter_enclave+0x37>
   11a8f:	90                   	nop
   11a90:	4c 89 e7             	mov    %r12,%rdi
   11a93:	e8 48 55 ff ff       	call   6fe0 <do_ecall_add_thread>
   11a98:	89 c3                	mov    %eax,%ebx
   11a9a:	e9 98 fe ff ff       	jmp    11937 <enter_enclave+0x37>
   11a9f:	90                   	nop
   11aa0:	48 8d 05 d9 16 00 00 	lea    0x16d9(%rip),%rax        # 13180 <g_global_data>
   11aa7:	e9 4c ff ff ff       	jmp    119f8 <enter_enclave+0xf8>
   11aac:	e8 86 08 00 00       	call   12337 <abort>

0000000000011ab1 <restore_xregs>:
   11ab1:	f3 0f 1e fa          	endbr64 
   11ab5:	48 89 f9             	mov    %rdi,%rcx
   11ab8:	48 8d 05 85 86 00 00 	lea    0x8685(%rip),%rax        # 1a144 <g_xsave_enabled>
   11abf:	8b 00                	mov    (%rax),%eax
   11ac1:	83 f8 00             	cmp    $0x0,%eax
   11ac4:	74 16                	je     11adc <restore_xregs+0x2b>
   11ac6:	48 31 c0             	xor    %rax,%rax
   11ac9:	48 31 d2             	xor    %rdx,%rdx
   11acc:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   11ad1:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   11ad6:	48 0f ae 29          	xrstor64 (%rcx)
   11ada:	eb 04                	jmp    11ae0 <restore_xregs+0x2f>
   11adc:	48 0f ae 09          	fxrstor64 (%rcx)
   11ae0:	c3                   	ret    

0000000000011ae1 <save_xregs>:
   11ae1:	f3 0f 1e fa          	endbr64 
   11ae5:	48 89 f9             	mov    %rdi,%rcx
   11ae8:	48 8d 05 55 86 00 00 	lea    0x8655(%rip),%rax        # 1a144 <g_xsave_enabled>
   11aef:	9b                   	fwait
   11af0:	8b 00                	mov    (%rax),%eax
   11af2:	83 f8 00             	cmp    $0x0,%eax
   11af5:	74 16                	je     11b0d <save_xregs+0x2c>
   11af7:	48 31 c0             	xor    %rax,%rax
   11afa:	48 31 d2             	xor    %rdx,%rdx
   11afd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   11b02:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   11b07:	48 0f c7 21          	xsavec64 (%rcx)
   11b0b:	eb 04                	jmp    11b11 <save_xregs+0x30>
   11b0d:	48 0f ae 01          	fxsave64 (%rcx)
   11b11:	c3                   	ret    

0000000000011b12 <__x86_return_thunk>:
   11b12:	c3                   	ret    

0000000000011b13 <__x86_indirect_thunk_rax>:
   11b13:	ff e0                	jmp    *%rax

0000000000011b15 <__x86_indirect_thunk_rbx>:
   11b15:	ff e3                	jmp    *%rbx

0000000000011b17 <__x86_indirect_thunk_rcx>:
   11b17:	ff e1                	jmp    *%rcx

0000000000011b19 <__x86_indirect_thunk_rdx>:
   11b19:	ff e2                	jmp    *%rdx

0000000000011b1b <__x86_indirect_thunk_rbp>:
   11b1b:	ff e5                	jmp    *%rbp

0000000000011b1d <__x86_indirect_thunk_rsi>:
   11b1d:	ff e6                	jmp    *%rsi

0000000000011b1f <__x86_indirect_thunk_rdi>:
   11b1f:	ff e7                	jmp    *%rdi

0000000000011b21 <__x86_indirect_thunk_r8>:
   11b21:	41 ff e0             	jmp    *%r8

0000000000011b24 <__x86_indirect_thunk_r9>:
   11b24:	41 ff e1             	jmp    *%r9

0000000000011b27 <__x86_indirect_thunk_r10>:
   11b27:	41 ff e2             	jmp    *%r10

0000000000011b2a <__x86_indirect_thunk_r11>:
   11b2a:	41 ff e3             	jmp    *%r11

0000000000011b2d <__x86_indirect_thunk_r12>:
   11b2d:	41 ff e4             	jmp    *%r12

0000000000011b30 <__x86_indirect_thunk_r13>:
   11b30:	41 ff e5             	jmp    *%r13

0000000000011b33 <__x86_indirect_thunk_r14>:
   11b33:	41 ff e6             	jmp    *%r14

0000000000011b36 <__x86_indirect_thunk_r15>:
   11b36:	41 ff e7             	jmp    *%r15
   11b39:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11b40:	00 00 00 
   11b43:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11b4a:	00 00 00 
   11b4d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11b54:	00 00 00 
   11b57:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11b5e:	00 00 00 
   11b61:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11b68:	00 00 00 
   11b6b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11b72:	00 00 00 
   11b75:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11b7c:	00 00 00 
   11b7f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11b86:	00 00 00 
   11b89:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11b90:	00 00 00 
   11b93:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11b9a:	00 00 00 
   11b9d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11ba4:	00 00 00 
   11ba7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11bae:	00 00 00 
   11bb1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11bb8:	00 00 00 
   11bbb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11bc2:	00 00 00 
   11bc5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11bcc:	00 00 00 
   11bcf:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11bd6:	00 00 00 
   11bd9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11be0:	00 00 00 
   11be3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11bea:	00 00 00 
   11bed:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11bf4:	00 00 00 
   11bf7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   11bfe:	00 00 

0000000000011c00 <constant_time_apply_sgxstep_mitigation_and_continue_execution>:
   11c00:	f3 0f 1e fa          	endbr64 
   11c04:	48 8b 67 20          	mov    0x20(%rdi),%rsp
   11c08:	48 8b 87 88 00 00 00 	mov    0x88(%rdi),%rax
   11c0f:	49 89 c2             	mov    %rax,%r10
   11c12:	80 38 c3             	cmpb   $0xc3,(%rax)
   11c15:	48 0f 44 04 24       	cmove  (%rsp),%rax
   11c1a:	48 89 e5             	mov    %rsp,%rbp
   11c1d:	48 8d 5c 24 08       	lea    0x8(%rsp),%rbx
   11c22:	48 0f 44 eb          	cmove  %rbx,%rbp
   11c26:	48 8d 1d c3 02 00 00 	lea    0x2c3(%rip),%rbx        # 11ef0 <__ct_mitigation_end>
   11c2d:	48 29 c3             	sub    %rax,%rbx
   11c30:	48 81 fb e6 00 00 00 	cmp    $0xe6,%rbx
   11c37:	48 0f 42 e5          	cmovb  %rbp,%rsp
   11c3b:	48 89 67 20          	mov    %rsp,0x20(%rdi)
   11c3f:	4c 0f 42 94 24 78 ff 	cmovb  -0x88(%rsp),%r10
   11c46:	ff ff 
   11c48:	4c 89 94 24 78 ff ff 	mov    %r10,-0x88(%rsp)
   11c4f:	ff 
   11c50:	48 8b 87 80 00 00 00 	mov    0x80(%rdi),%rax
   11c57:	48 89 84 24 38 ff ff 	mov    %rax,-0xc8(%rsp)
   11c5e:	ff 
   11c5f:	48 8b 44 24 f8       	mov    -0x8(%rsp),%rax
   11c64:	48 0f 42 84 24 30 ff 	cmovb  -0xd0(%rsp),%rax
   11c6b:	ff ff 
   11c6d:	48 89 84 24 30 ff ff 	mov    %rax,-0xd0(%rsp)
   11c74:	ff 
   11c75:	48 89 b4 24 28 ff ff 	mov    %rsi,-0xd8(%rsp)
   11c7c:	ff 
   11c7d:	48 0f 42 94 24 20 ff 	cmovb  -0xe0(%rsp),%rdx
   11c84:	ff ff 
   11c86:	48 0f 42 8c 24 18 ff 	cmovb  -0xe8(%rsp),%rcx
   11c8d:	ff ff 
   11c8f:	4c 0f 42 84 24 10 ff 	cmovb  -0xf0(%rsp),%r8
   11c96:	ff ff 
   11c98:	4c 0f 42 8c 24 08 ff 	cmovb  -0xf8(%rsp),%r9
   11c9f:	ff ff 
   11ca1:	48 89 94 24 20 ff ff 	mov    %rdx,-0xe0(%rsp)
   11ca8:	ff 
   11ca9:	48 89 8c 24 18 ff ff 	mov    %rcx,-0xe8(%rsp)
   11cb0:	ff 
   11cb1:	4c 89 84 24 10 ff ff 	mov    %r8,-0xf0(%rsp)
   11cb8:	ff 
   11cb9:	4c 89 8c 24 08 ff ff 	mov    %r9,-0xf8(%rsp)
   11cc0:	ff 
   11cc1:	4c 8b 47 40          	mov    0x40(%rdi),%r8
   11cc5:	4c 8b 4f 48          	mov    0x48(%rdi),%r9
   11cc9:	4c 8b 57 50          	mov    0x50(%rdi),%r10
   11ccd:	4c 8b 5f 58          	mov    0x58(%rdi),%r11
   11cd1:	4c 8b 67 60          	mov    0x60(%rdi),%r12
   11cd5:	4c 8b 6f 68          	mov    0x68(%rdi),%r13
   11cd9:	4c 8b 77 70          	mov    0x70(%rdi),%r14
   11cdd:	4c 8b 7f 78          	mov    0x78(%rdi),%r15
   11ce1:	48 8b 07             	mov    (%rdi),%rax
   11ce4:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
   11ce8:	48 8b 57 10          	mov    0x10(%rdi),%rdx
   11cec:	48 8b 5f 18          	mov    0x18(%rdi),%rbx
   11cf0:	48 8b 6f 28          	mov    0x28(%rdi),%rbp
   11cf4:	48 8b 77 30          	mov    0x30(%rdi),%rsi
   11cf8:	48 8b 7f 38          	mov    0x38(%rdi),%rdi
   11cfc:	48 0f 42 84 24 70 ff 	cmovb  -0x90(%rsp),%rax
   11d03:	ff ff 
   11d05:	48 0f 42 8c 24 68 ff 	cmovb  -0x98(%rsp),%rcx
   11d0c:	ff ff 
   11d0e:	48 0f 42 94 24 60 ff 	cmovb  -0xa0(%rsp),%rdx
   11d15:	ff ff 
   11d17:	48 0f 42 9c 24 58 ff 	cmovb  -0xa8(%rsp),%rbx
   11d1e:	ff ff 
   11d20:	48 0f 42 ac 24 50 ff 	cmovb  -0xb0(%rsp),%rbp
   11d27:	ff ff 
   11d29:	48 0f 42 b4 24 48 ff 	cmovb  -0xb8(%rsp),%rsi
   11d30:	ff ff 
   11d32:	48 0f 42 bc 24 40 ff 	cmovb  -0xc0(%rsp),%rdi
   11d39:	ff ff 
   11d3b:	48 89 84 24 70 ff ff 	mov    %rax,-0x90(%rsp)
   11d42:	ff 
   11d43:	48 89 8c 24 68 ff ff 	mov    %rcx,-0x98(%rsp)
   11d4a:	ff 
   11d4b:	48 89 94 24 60 ff ff 	mov    %rdx,-0xa0(%rsp)
   11d52:	ff 
   11d53:	48 89 9c 24 58 ff ff 	mov    %rbx,-0xa8(%rsp)
   11d5a:	ff 
   11d5b:	48 89 ac 24 50 ff ff 	mov    %rbp,-0xb0(%rsp)
   11d62:	ff 
   11d63:	48 89 b4 24 48 ff ff 	mov    %rsi,-0xb8(%rsp)
   11d6a:	ff 
   11d6b:	48 89 bc 24 40 ff ff 	mov    %rdi,-0xc0(%rsp)
   11d72:	ff 
   11d73:	48 8b ac 24 20 ff ff 	mov    -0xe0(%rsp),%rbp
   11d7a:	ff 
   11d7b:	48 8b b4 24 18 ff ff 	mov    -0xe8(%rsp),%rsi
   11d82:	ff 
   11d83:	48 8b 94 24 10 ff ff 	mov    -0xf0(%rsp),%rdx
   11d8a:	ff 
   11d8b:	48 8b bc 24 08 ff ff 	mov    -0xf8(%rsp),%rdi
   11d92:	ff 
   11d93:	40 d0 ed             	shr    %bpl
   11d96:	48 89 eb             	mov    %rbp,%rbx
   11d99:	73 07                	jae    11da2 <.restore_flags>
   11d9b:	48 81 eb 00 10 00 00 	sub    $0x1000,%rbx

0000000000011da2 <.restore_flags>:
   11da2:	48 8d 84 24 38 ff ff 	lea    -0xc8(%rsp),%rax
   11da9:	ff 
   11daa:	48 94                	xchg   %rax,%rsp
   11dac:	9d                   	popf   
   11dad:	48 94                	xchg   %rax,%rsp
   11daf:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   11db6:	00 00 00 00 
   11dba:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   11dc1:	00 00 00 00 
   11dc5:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   11dcc:	00 00 00 00 
   11dd0:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   11dd7:	00 00 00 00 
   11ddb:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   11de2:	00 00 00 00 
   11de6:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   11ded:	00 00 00 00 
   11df1:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   11df8:	00 00 00 00 
   11dfc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000011e00 <.ct_enable_aexnotify>:
   11e00:	48 8b 84 24 28 ff ff 	mov    -0xd8(%rsp),%rax
   11e07:	ff 
   11e08:	c6 00 01             	movb   $0x1,(%rax)

0000000000011e0b <__ct_mitigation_begin>:
   11e0b:	0f ae e8             	lfence 

0000000000011e0e <.ct_check_write>:
   11e0e:	b9 3f 00 00 00       	mov    $0x3f,%ecx
   11e13:	c4 e2 f1 f7 ce       	shlx   %rcx,%rsi,%rcx
   11e18:	e3 08                	jrcxz  11e22 <.ct_clear_low_bits_of_rdx>
   11e1a:	48 8d 76 ff          	lea    -0x1(%rsi),%rsi
   11e1e:	8a 02                	mov    (%rdx),%al
   11e20:	88 02                	mov    %al,(%rdx)

0000000000011e22 <.ct_clear_low_bits_of_rdx>:
   11e22:	b9 0c 00 00 00       	mov    $0xc,%ecx
   11e27:	c4 e2 f3 f7 d2       	shrx   %rcx,%rdx,%rdx
   11e2c:	c4 e2 f1 f7 d2       	shlx   %rcx,%rdx,%rdx

0000000000011e31 <.ct_check_execute>:
   11e31:	ff d7                	call   *%rdi
   11e33:	b9 00 10 00 00       	mov    $0x1000,%ecx
   11e38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   11e3f:	00 

0000000000011e40 <.ct_warm_caches_and_tlbs>:
   11e40:	67 8d 49 c0          	lea    -0x40(%ecx),%ecx
   11e44:	8b 04 0e             	mov    (%rsi,%rcx,1),%eax
   11e47:	8b 44 0d 00          	mov    0x0(%rbp,%rcx,1),%eax
   11e4b:	8b 04 0b             	mov    (%rbx,%rcx,1),%eax
   11e4e:	8b 04 0a             	mov    (%rdx,%rcx,1),%eax
   11e51:	e3 02                	jrcxz  11e55 <.ct_restore_state>
   11e53:	eb eb                	jmp    11e40 <.ct_warm_caches_and_tlbs>

0000000000011e55 <.ct_restore_state>:
   11e55:	40 0f b6 ce          	movzbl %sil,%ecx
   11e59:	48 8b bc 24 30 ff ff 	mov    -0xd0(%rsp),%rdi
   11e60:	ff 
   11e61:	48 89 7c 24 f8       	mov    %rdi,-0x8(%rsp)
   11e66:	48 8b bc 24 40 ff ff 	mov    -0xc0(%rsp),%rdi
   11e6d:	ff 
   11e6e:	48 8b b4 24 48 ff ff 	mov    -0xb8(%rsp),%rsi
   11e75:	ff 
   11e76:	48 8b ac 24 50 ff ff 	mov    -0xb0(%rsp),%rbp
   11e7d:	ff 
   11e7e:	48 8b 9c 24 58 ff ff 	mov    -0xa8(%rsp),%rbx
   11e85:	ff 
   11e86:	48 8b 94 24 60 ff ff 	mov    -0xa0(%rsp),%rdx
   11e8d:	ff 
   11e8e:	48 8b 84 24 70 ff ff 	mov    -0x90(%rsp),%rax
   11e95:	ff 
   11e96:	e3 50                	jrcxz  11ee8 <.ct_restore_rcx>
   11e98:	48 8d 24 24          	lea    (%rsp),%rsp
   11e9c:	48 8d 24 24          	lea    (%rsp),%rsp
   11ea0:	48 8d 24 24          	lea    (%rsp),%rsp
   11ea4:	48 8d 24 24          	lea    (%rsp),%rsp
   11ea8:	48 8d 24 24          	lea    (%rsp),%rsp
   11eac:	48 8d 24 24          	lea    (%rsp),%rsp
   11eb0:	48 8d 24 24          	lea    (%rsp),%rsp
   11eb4:	48 8d 24 24          	lea    (%rsp),%rsp
   11eb8:	48 8d 24 24          	lea    (%rsp),%rsp
   11ebc:	48 8d 24 24          	lea    (%rsp),%rsp
   11ec0:	48 8d 24 24          	lea    (%rsp),%rsp
   11ec4:	48 8d 24 24          	lea    (%rsp),%rsp
   11ec8:	48 8d 24 24          	lea    (%rsp),%rsp
   11ecc:	48 8d 24 24          	lea    (%rsp),%rsp
   11ed0:	48 8d 24 24          	lea    (%rsp),%rsp
   11ed4:	48 8d 24 24          	lea    (%rsp),%rsp
   11ed8:	48 8d 24 24          	lea    (%rsp),%rsp
   11edc:	48 8d 24 24          	lea    (%rsp),%rsp
   11ee0:	48 8d 24 24          	lea    (%rsp),%rsp
   11ee4:	48 8d 24 24          	lea    (%rsp),%rsp

0000000000011ee8 <.ct_restore_rcx>:
   11ee8:	48 8b 8c 24 68 ff ff 	mov    -0x98(%rsp),%rcx
   11eef:	ff 

0000000000011ef0 <__ct_mitigation_end>:
   11ef0:	ff a4 24 78 ff ff ff 	jmp    *-0x88(%rsp)

0000000000011ef7 <__ct_mitigation_ret>:
   11ef7:	c3                   	ret    

0000000000011ef8 <get_enclave_base>:
   11ef8:	f3 0f 1e fa          	endbr64 
   11efc:	48 8d 05 fd e0 fe ff 	lea    -0x11f03(%rip),%rax        # 0 <__ImageBase>
   11f03:	c3                   	ret    

0000000000011f04 <get_enclave_state>:
   11f04:	f3 0f 1e fa          	endbr64 
   11f08:	48 8d 0d 31 82 00 00 	lea    0x8231(%rip),%rcx        # 1a140 <g_enclave_state>
   11f0f:	48 31 c0             	xor    %rax,%rax
   11f12:	8b 01                	mov    (%rcx),%eax
   11f14:	c3                   	ret    

0000000000011f15 <set_enclave_state>:
   11f15:	f3 0f 1e fa          	endbr64 
   11f19:	48 8d 05 20 82 00 00 	lea    0x8220(%rip),%rax        # 1a140 <g_enclave_state>
   11f20:	89 38                	mov    %edi,(%rax)
   11f22:	c3                   	ret    

0000000000011f23 <lock_enclave>:
   11f23:	f3 0f 1e fa          	endbr64 
   11f27:	48 8d 15 12 82 00 00 	lea    0x8212(%rip),%rdx        # 1a140 <g_enclave_state>
   11f2e:	48 31 c0             	xor    %rax,%rax
   11f31:	b8 00 00 00 00       	mov    $0x0,%eax
   11f36:	48 31 c9             	xor    %rcx,%rcx
   11f39:	b9 01 00 00 00       	mov    $0x1,%ecx
   11f3e:	f0 0f b1 0a          	lock cmpxchg %ecx,(%rdx)
   11f42:	c3                   	ret    

0000000000011f43 <get_thread_data>:
   11f43:	f3 0f 1e fa          	endbr64 
   11f47:	65 48 8b 04 25 00 00 	mov    %gs:0x0,%rax
   11f4e:	00 00 
   11f50:	c3                   	ret    

0000000000011f51 <get_stack_guard>:
   11f51:	f3 0f 1e fa          	endbr64 
   11f55:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
   11f5c:	00 00 
   11f5e:	c3                   	ret    

0000000000011f5f <enclave_entry>:
   11f5f:	f3 0f 1e fa          	endbr64 
   11f63:	48 31 d2             	xor    %rdx,%rdx
   11f66:	48 01 d2             	add    %rdx,%rdx
   11f69:	fc                   	cld    
   11f6a:	4d 31 c0             	xor    %r8,%r8
   11f6d:	4d 31 c9             	xor    %r9,%r9
   11f70:	4d 31 d2             	xor    %r10,%r10
   11f73:	4d 31 db             	xor    %r11,%r11
   11f76:	4d 31 e4             	xor    %r12,%r12
   11f79:	4d 31 ed             	xor    %r13,%r13
   11f7c:	4d 31 f6             	xor    %r14,%r14
   11f7f:	4d 31 ff             	xor    %r15,%r15
   11f82:	48 83 f8 00          	cmp    $0x0,%rax
   11f86:	0f 85 07 01 00 00    	jne    12093 <enclave_entry+0x134>
   11f8c:	65 48 8b 04 25 08 00 	mov    %gs:0x8,%rax
   11f93:	00 00 
   11f95:	48 83 f8 00          	cmp    $0x0,%rax
   11f99:	75 0f                	jne    11faa <enclave_entry+0x4b>
   11f9b:	48 89 d8             	mov    %rbx,%rax
   11f9e:	48 2d 00 00 01 00    	sub    $0x10000,%rax
   11fa4:	48 2d 00 04 00 00    	sub    $0x400,%rax
   11faa:	48 94                	xchg   %rax,%rsp
   11fac:	51                   	push   %rcx
   11fad:	55                   	push   %rbp
   11fae:	48 89 e5             	mov    %rsp,%rbp
   11fb1:	9c                   	pushf  
   11fb2:	48 f7 14 24          	notq   (%rsp)
   11fb6:	48 81 0c 24 00 00 04 	orq    $0x40000,(%rsp)
   11fbd:	00 
   11fbe:	48 f7 14 24          	notq   (%rsp)
   11fc2:	9d                   	popf   
   11fc3:	48 83 ec 30          	sub    $0x30,%rsp
   11fc7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   11fcb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   11fcf:	48 89 5d e0          	mov    %rbx,-0x20(%rbp)
   11fd3:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
   11fd7:	48 89 7d d0          	mov    %rdi,-0x30(%rbp)
   11fdb:	48 83 ec 20          	sub    $0x20,%rsp
   11fdf:	48 8d 3d 9a 18 00 00 	lea    0x189a(%rip),%rdi        # 13880 <SYNTHETIC_STATE>
   11fe6:	e8 c6 fa ff ff       	call   11ab1 <restore_xregs>
   11feb:	0f ae e8             	lfence 
   11fee:	48 83 c4 20          	add    $0x20,%rsp
   11ff2:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
   11ff6:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
   11ffa:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   11ffe:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   12002:	e8 f9 f8 ff ff       	call   11900 <enter_enclave>
   12007:	48 89 c3             	mov    %rax,%rbx
   1200a:	48 8d 3d 6f 18 00 00 	lea    0x186f(%rip),%rdi        # 13880 <SYNTHETIC_STATE>
   12011:	e8 9b fa ff ff       	call   11ab1 <restore_xregs>
   12016:	0f ae e8             	lfence 
   12019:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1201d:	48 83 f8 00          	cmp    $0x0,%rax
   12021:	75 2c                	jne    1204f <enclave_entry+0xf0>
   12023:	65 48 8b 04 25 00 00 	mov    %gs:0x0,%rax
   1202a:	00 00 
   1202c:	48 83 f8 00          	cmp    $0x0,%rax
   12030:	74 1d                	je     1204f <enclave_entry+0xf0>
   12032:	48 8b 50 20          	mov    0x20(%rax),%rdx
   12036:	8a 8a a7 00 00 00    	mov    0xa7(%rdx),%cl
   1203c:	80 f9 00             	cmp    $0x0,%cl
   1203f:	74 0e                	je     1204f <enclave_entry+0xf0>
   12041:	c6 82 a7 00 00 00 00 	movb   $0x0,0xa7(%rdx)
   12048:	c7 40 50 01 00 00 00 	movl   $0x1,0x50(%rax)
   1204f:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
   12056:	48 89 de             	mov    %rbx,%rsi
   12059:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1205d:	48 89 ec             	mov    %rbp,%rsp
   12060:	5d                   	pop    %rbp
   12061:	5b                   	pop    %rbx
   12062:	48 89 d4             	mov    %rdx,%rsp
   12065:	48 31 c9             	xor    %rcx,%rcx
   12068:	48 31 d2             	xor    %rdx,%rdx
   1206b:	4d 31 c0             	xor    %r8,%r8
   1206e:	4d 31 c9             	xor    %r9,%r9
   12071:	4d 31 d2             	xor    %r10,%r10
   12074:	4d 31 db             	xor    %r11,%r11
   12077:	4d 31 e4             	xor    %r12,%r12
   1207a:	4d 31 ed             	xor    %r13,%r13
   1207d:	4d 31 f6             	xor    %r14,%r14
   12080:	4d 31 ff             	xor    %r15,%r15
   12083:	48 01 d2             	add    %rdx,%rdx
   12086:	fc                   	cld    
   12087:	48 c7 c0 04 00 00 00 	mov    $0x4,%rax
   1208e:	0f 01 d7             	enclu  
   12091:	0f 0b                	ud2    
   12093:	48 89 c2             	mov    %rax,%rdx
   12096:	48 89 d8             	mov    %rbx,%rax
   12099:	48 2d 00 00 01 00    	sub    $0x10000,%rax
   1209f:	e9 06 ff ff ff       	jmp    11faa <enclave_entry+0x4b>
   120a4:	0f 0b                	ud2    

00000000000120a6 <do_ocall>:
   120a6:	f3 0f 1e fa          	endbr64 
   120aa:	55                   	push   %rbp
   120ab:	48 89 e5             	mov    %rsp,%rbp
   120ae:	48 89 7d 10          	mov    %rdi,0x10(%rbp)
   120b2:	48 89 75 18          	mov    %rsi,0x18(%rbp)
   120b6:	65 48 8b 04 25 38 00 	mov    %gs:0x38,%rax
   120bd:	00 00 
   120bf:	48 29 c4             	sub    %rax,%rsp
   120c2:	48 c7 c0 3f 00 00 00 	mov    $0x3f,%rax
   120c9:	48 f7 d0             	not    %rax
   120cc:	48 21 c4             	and    %rax,%rsp
   120cf:	48 89 e1             	mov    %rsp,%rcx
   120d2:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
   120d9:	48 89 8c 24 98 00 00 	mov    %rcx,0x98(%rsp)
   120e0:	00 
   120e1:	48 89 5c 24 70       	mov    %rbx,0x70(%rsp)
   120e6:	48 89 74 24 68       	mov    %rsi,0x68(%rsp)
   120eb:	48 89 7c 24 60       	mov    %rdi,0x60(%rsp)
   120f0:	48 89 6c 24 58       	mov    %rbp,0x58(%rsp)
   120f5:	4c 89 64 24 50       	mov    %r12,0x50(%rsp)
   120fa:	4c 89 6c 24 48       	mov    %r13,0x48(%rsp)
   120ff:	4c 89 74 24 40       	mov    %r14,0x40(%rsp)
   12104:	4c 89 7c 24 38       	mov    %r15,0x38(%rsp)
   12109:	48 8b bc 24 98 00 00 	mov    0x98(%rsp),%rdi
   12110:	00 
   12111:	65 48 8b 04 25 38 00 	mov    %gs:0x38,%rax
   12118:	00 00 
   1211a:	48 89 c1             	mov    %rax,%rcx
   1211d:	48 c1 e9 02          	shr    $0x2,%rcx
   12121:	48 31 c0             	xor    %rax,%rax
   12124:	fc                   	cld    
   12125:	f3 ab                	rep stos %eax,%es:(%rdi)
   12127:	48 8b bc 24 98 00 00 	mov    0x98(%rsp),%rdi
   1212e:	00 
   1212f:	48 89 3c 24          	mov    %rdi,(%rsp)
   12133:	e8 a9 f9 ff ff       	call   11ae1 <save_xregs>
   12138:	48 8d 3d 41 17 00 00 	lea    0x1741(%rip),%rdi        # 13880 <SYNTHETIC_STATE>
   1213f:	48 89 3c 24          	mov    %rdi,(%rsp)
   12143:	e8 69 f9 ff ff       	call   11ab1 <restore_xregs>
   12148:	0f ae e8             	lfence 
   1214b:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
   12150:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   12155:	48 c7 c0 44 49 43 4f 	mov    $0x4f434944,%rax
   1215c:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   12161:	48 89 7c 24 28       	mov    %rdi,0x28(%rsp)
   12166:	65 48 8b 04 25 00 00 	mov    %gs:0x0,%rax
   1216d:	00 00 
   1216f:	48 89 c3             	mov    %rax,%rbx
   12172:	48 89 e7             	mov    %rsp,%rdi
   12175:	e8 56 50 ff ff       	call   71d0 <update_ocall_lastsp>
   1217a:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
   1217f:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   12184:	48 8b 53 20          	mov    0x20(%rbx),%rdx
   12188:	8a 8a a7 00 00 00    	mov    0xa7(%rdx),%cl
   1218e:	80 f9 00             	cmp    $0x0,%cl
   12191:	74 0e                	je     121a1 <do_ocall+0xfb>
   12193:	c6 82 a7 00 00 00 00 	movb   $0x0,0xa7(%rdx)
   1219a:	c7 43 50 01 00 00 00 	movl   $0x1,0x50(%rbx)
   121a1:	48 8b aa 98 00 00 00 	mov    0x98(%rdx),%rbp
   121a8:	48 8b a2 90 00 00 00 	mov    0x90(%rdx),%rsp
   121af:	48 8b 58 f8          	mov    -0x8(%rax),%rbx
   121b3:	48 c7 c0 04 00 00 00 	mov    $0x4,%rax
   121ba:	48 31 c9             	xor    %rcx,%rcx
   121bd:	48 31 d2             	xor    %rdx,%rdx
   121c0:	4d 31 c0             	xor    %r8,%r8
   121c3:	4d 31 c9             	xor    %r9,%r9
   121c6:	4d 31 d2             	xor    %r10,%r10
   121c9:	4d 31 db             	xor    %r11,%r11
   121cc:	4d 31 e4             	xor    %r12,%r12
   121cf:	4d 31 ed             	xor    %r13,%r13
   121d2:	4d 31 f6             	xor    %r14,%r14
   121d5:	4d 31 ff             	xor    %r15,%r15
   121d8:	48 01 d2             	add    %rdx,%rdx
   121db:	fc                   	cld    
   121dc:	0f 01 d7             	enclu  

00000000000121df <__morestack>:
   121df:	f3 0f 1e fa          	endbr64 
   121e3:	55                   	push   %rbp
   121e4:	48 89 e5             	mov    %rsp,%rbp
   121e7:	48 83 ec 20          	sub    $0x20,%rsp
   121eb:	e8 b6 fe ff ff       	call   120a6 <do_ocall>
   121f0:	c9                   	leave  
   121f1:	c3                   	ret    

00000000000121f2 <asm_oret>:
   121f2:	f3 0f 1e fa          	endbr64 
   121f6:	48 89 e3             	mov    %rsp,%rbx
   121f9:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   121fe:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   12203:	48 8b 63 08          	mov    0x8(%rbx),%rsp
   12207:	48 8b bc 24 98 00 00 	mov    0x98(%rsp),%rdi
   1220e:	00 
   1220f:	e8 9d f8 ff ff       	call   11ab1 <restore_xregs>
   12214:	0f ae e8             	lfence 
   12217:	48 31 c0             	xor    %rax,%rax
   1221a:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
   1221f:	48 29 f9             	sub    %rdi,%rcx
   12222:	48 83 e9 08          	sub    $0x8,%rcx
   12226:	48 c1 e9 02          	shr    $0x2,%rcx
   1222a:	fc                   	cld    
   1222b:	f3 ab                	rep stos %eax,%es:(%rdi)
   1222d:	48 8b 43 10          	mov    0x10(%rbx),%rax
   12231:	4c 8b 7c 24 38       	mov    0x38(%rsp),%r15
   12236:	4c 8b 74 24 40       	mov    0x40(%rsp),%r14
   1223b:	4c 8b 6c 24 48       	mov    0x48(%rsp),%r13
   12240:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   12245:	48 8b 6c 24 58       	mov    0x58(%rsp),%rbp
   1224a:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
   1224f:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   12254:	48 8b 5c 24 70       	mov    0x70(%rsp),%rbx
   12259:	48 89 ec             	mov    %rbp,%rsp
   1225c:	5d                   	pop    %rbp
   1225d:	c3                   	ret    
   1225e:	0f 0b                	ud2    

0000000000012260 <do_egetkey>:
   12260:	f3 0f 1e fa          	endbr64 
   12264:	53                   	push   %rbx
   12265:	51                   	push   %rcx
   12266:	52                   	push   %rdx
   12267:	48 89 fb             	mov    %rdi,%rbx
   1226a:	48 89 f1             	mov    %rsi,%rcx
   1226d:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
   12274:	0f 01 d7             	enclu  
   12277:	74 03                	je     1227c <do_egetkey+0x1c>
   12279:	48 31 c0             	xor    %rax,%rax
   1227c:	5a                   	pop    %rdx
   1227d:	59                   	pop    %rcx
   1227e:	5b                   	pop    %rbx
   1227f:	c3                   	ret    

0000000000012280 <do_ereport>:
   12280:	f3 0f 1e fa          	endbr64 
   12284:	53                   	push   %rbx
   12285:	51                   	push   %rcx
   12286:	52                   	push   %rdx
   12287:	48 89 fb             	mov    %rdi,%rbx
   1228a:	48 89 f1             	mov    %rsi,%rcx
   1228d:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
   12294:	f8                   	clc    

0000000000012295 <Lereport_inst>:
   12295:	0f 01 d7             	enclu  
   12298:	0f 92 c0             	setb   %al
   1229b:	5a                   	pop    %rdx
   1229c:	59                   	pop    %rcx
   1229d:	5b                   	pop    %rbx
   1229e:	c3                   	ret    

000000000001229f <do_everifyreport2>:
   1229f:	f3 0f 1e fa          	endbr64 
   122a3:	53                   	push   %rbx
   122a4:	51                   	push   %rcx
   122a5:	52                   	push   %rdx
   122a6:	48 89 fb             	mov    %rdi,%rbx
   122a9:	48 89 f1             	mov    %rsi,%rcx
   122ac:	48 c7 c0 08 00 00 00 	mov    $0x8,%rax

00000000000122b3 <Leverifyreport2_inst>:
   122b3:	0f 01 d7             	enclu  
   122b6:	74 03                	je     122bb <Leverifyreport2_inst+0x8>
   122b8:	48 31 c0             	xor    %rax,%rax
   122bb:	5a                   	pop    %rdx
   122bc:	59                   	pop    %rcx
   122bd:	5b                   	pop    %rbx
   122be:	c3                   	ret    

00000000000122bf <do_eaccept>:
   122bf:	f3 0f 1e fa          	endbr64 
   122c3:	53                   	push   %rbx
   122c4:	51                   	push   %rcx
   122c5:	52                   	push   %rdx
   122c6:	48 89 fb             	mov    %rdi,%rbx
   122c9:	48 89 f1             	mov    %rsi,%rcx
   122cc:	b8 05 00 00 00       	mov    $0x5,%eax
   122d1:	0f 01 d7             	enclu  
   122d4:	83 f8 00             	cmp    $0x0,%eax
   122d7:	75 5e                	jne    12337 <abort>
   122d9:	5a                   	pop    %rdx
   122da:	59                   	pop    %rcx
   122db:	5b                   	pop    %rbx
   122dc:	c3                   	ret    

00000000000122dd <do_eacceptcopy>:
   122dd:	f3 0f 1e fa          	endbr64 
   122e1:	53                   	push   %rbx
   122e2:	51                   	push   %rcx
   122e3:	52                   	push   %rdx
   122e4:	48 89 fb             	mov    %rdi,%rbx
   122e7:	48 89 f1             	mov    %rsi,%rcx
   122ea:	b8 07 00 00 00       	mov    $0x7,%eax
   122ef:	0f 01 d7             	enclu  
   122f2:	83 f8 00             	cmp    $0x0,%eax
   122f5:	75 40                	jne    12337 <abort>
   122f7:	5a                   	pop    %rdx
   122f8:	59                   	pop    %rcx
   122f9:	5b                   	pop    %rbx
   122fa:	c3                   	ret    

00000000000122fb <do_emodpe>:
   122fb:	f3 0f 1e fa          	endbr64 
   122ff:	53                   	push   %rbx
   12300:	51                   	push   %rcx
   12301:	52                   	push   %rdx
   12302:	48 89 fb             	mov    %rdi,%rbx
   12305:	48 89 f1             	mov    %rsi,%rcx
   12308:	b8 06 00 00 00       	mov    $0x6,%eax
   1230d:	0f 01 d7             	enclu  
   12310:	5a                   	pop    %rdx
   12311:	59                   	pop    %rcx
   12312:	5b                   	pop    %rbx
   12313:	c3                   	ret    

0000000000012314 <do_rdrand>:
   12314:	f3 0f 1e fa          	endbr64 
   12318:	b9 0a 00 00 00       	mov    $0xa,%ecx
   1231d:	0f c7 f0             	rdrand %eax
   12320:	72 08                	jb     1232a <do_rdrand+0x16>
   12322:	ff c9                	dec    %ecx
   12324:	75 f7                	jne    1231d <do_rdrand+0x9>
   12326:	48 31 c0             	xor    %rax,%rax
   12329:	c3                   	ret    
   1232a:	48 89 f9             	mov    %rdi,%rcx
   1232d:	89 01                	mov    %eax,(%rcx)
   1232f:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
   12336:	c3                   	ret    

0000000000012337 <abort>:
   12337:	f3 0f 1e fa          	endbr64 
   1233b:	48 8d 05 fe 7d 00 00 	lea    0x7dfe(%rip),%rax        # 1a140 <g_enclave_state>
   12342:	c7 00 03 00 00 00    	movl   $0x3,(%rax)
   12348:	0f 0b                	ud2    

000000000001234a <continue_execution>:
   1234a:	f3 0f 1e fa          	endbr64 
   1234e:	48 89 f9             	mov    %rdi,%rcx
   12351:	48 8b 01             	mov    (%rcx),%rax
   12354:	50                   	push   %rax
   12355:	48 8b 41 08          	mov    0x8(%rcx),%rax
   12359:	50                   	push   %rax
   1235a:	48 8b 41 20          	mov    0x20(%rcx),%rax
   1235e:	48 2d 88 00 00 00    	sub    $0x88,%rax
   12364:	48 8b 51 10          	mov    0x10(%rcx),%rdx
   12368:	48 8b 59 18          	mov    0x18(%rcx),%rbx
   1236c:	48 8b 69 28          	mov    0x28(%rcx),%rbp
   12370:	48 8b 71 30          	mov    0x30(%rcx),%rsi
   12374:	48 8b 79 38          	mov    0x38(%rcx),%rdi
   12378:	4c 8b 41 40          	mov    0x40(%rcx),%r8
   1237c:	4c 8b 49 48          	mov    0x48(%rcx),%r9
   12380:	4c 8b 51 50          	mov    0x50(%rcx),%r10
   12384:	4c 8b 59 58          	mov    0x58(%rcx),%r11
   12388:	4c 8b 61 60          	mov    0x60(%rcx),%r12
   1238c:	4c 8b 69 68          	mov    0x68(%rcx),%r13
   12390:	4c 8b 71 70          	mov    0x70(%rcx),%r14
   12394:	4c 8b 79 78          	mov    0x78(%rcx),%r15
   12398:	ff b1 80 00 00 00    	push   0x80(%rcx)
   1239e:	9d                   	popf   
   1239f:	48 8b 89 88 00 00 00 	mov    0x88(%rcx),%rcx
   123a6:	48 89 08             	mov    %rcx,(%rax)
   123a9:	59                   	pop    %rcx
   123aa:	5c                   	pop    %rsp
   123ab:	48 94                	xchg   %rax,%rsp
   123ad:	c2 80 00             	ret    $0x80

00000000000123b0 <second_phase>:
   123b0:	f3 0f 1e fa          	endbr64 
   123b4:	48 89 f4             	mov    %rsi,%rsp
   123b7:	48 c7 c0 09 00 00 00 	mov    $0x9,%rax
   123be:	0f 01 d7             	enclu  
   123c1:	ff e2                	jmp    *%rdx

Disassembly of section .rodata:

0000000000013000 <g_dyn_entry_table-0x30>:
   13000:	73 75                	jae    13077 <g_dyn_entry_table+0x47>
   13002:	6d                   	insl   (%dx),%es:(%rdi)
   13003:	70 00                	jo     13005 <second_phase+0xc55>
   13005:	70 72                	jo     13079 <g_dyn_entry_table+0x49>
   13007:	6f                   	outsl  %ds:(%rsi),(%dx)
   13008:	64 70 00             	fs jo  1300b <second_phase+0xc5b>
   1300b:	53                   	push   %rbx
   1300c:	65 63 72 65          	movsxd %gs:0x65(%rdx),%esi
   13010:	74 20                	je     13032 <g_dyn_entry_table+0x2>
   13012:	6f                   	outsl  %ds:(%rsi),(%dx)
   13013:	6b 00 53             	imul   $0x53,(%rax),%eax
   13016:	65 63 72 65          	movsxd %gs:0x65(%rdx),%esi
   1301a:	74 20                	je     1303c <g_dyn_entry_table+0xc>
   1301c:	77 72                	ja     13090 <g_dyn_entry_table+0x60>
   1301e:	6f                   	outsl  %ds:(%rsi),(%dx)
   1301f:	6e                   	outsb  %ds:(%rsi),(%dx)
   13020:	67 00 00             	add    %al,(%eax)
	...

0000000000013030 <g_dyn_entry_table>:
   13030:	02 00                	add    (%rax),%al
	...
   1303e:	00 00                	add    %al,(%rax)
   13040:	40                   	rex
   13041:	40                   	rex
   13042:	40                   	rex
   13043:	40                   	rex
   13044:	40                   	rex
   13045:	40                   	rex
   13046:	40                   	rex
   13047:	40 00 00             	rex add %al,(%rax)
   1304a:	00 00                	add    %al,(%rax)
   1304c:	00 00                	add    %al,(%rax)
   1304e:	00 00                	add    %al,(%rax)
   13050:	20 20                	and    %ah,(%rax)
   13052:	20 20                	and    %ah,(%rax)
   13054:	20 20                	and    %ah,(%rax)
   13056:	20 20                	and    %ah,(%rax)
	...
   13060:	30 30                	xor    %dh,(%rax)
   13062:	30 30                	xor    %dh,(%rax)
   13064:	30 30                	xor    %dh,(%rax)
   13066:	30 30                	xor    %dh,(%rax)
	...
   13070:	03 03                	add    (%rbx),%eax
   13072:	03 03                	add    (%rbx),%eax
   13074:	03 03                	add    (%rbx),%eax
   13076:	03 03                	add    (%rbx),%eax
	...
   13080:	01 01                	add    %eax,(%rcx)
   13082:	01 01                	add    %eax,(%rcx)
   13084:	01 01                	add    %eax,(%rcx)
   13086:	01 01                	add    %eax,(%rcx)
	...
   13090:	02 02                	add    (%rdx),%al
   13092:	02 02                	add    (%rdx),%al
   13094:	02 02                	add    (%rdx),%al
   13096:	02 02                	add    (%rdx),%al
	...
   130a0:	20 00                	and    %al,(%rax)
   130a2:	00 00                	add    %al,(%rax)
   130a4:	00 00                	add    %al,(%rax)
   130a6:	00 00                	add    %al,(%rax)
   130a8:	e0 ff                	loopne 130a9 <g_dyn_entry_table+0x79>
   130aa:	ff                   	(bad)  
   130ab:	ff                   	(bad)  
   130ac:	ff                   	(bad)  
   130ad:	ff                   	(bad)  
   130ae:	ff                   	(bad)  
   130af:	ff 00                	incl   (%rax)
   130b1:	10 00                	adc    %al,(%rax)
   130b3:	00 00                	add    %al,(%rax)
   130b5:	00 00                	add    %al,(%rax)
   130b7:	00 00                	add    %al,(%rax)
   130b9:	10 00                	adc    %al,(%rax)
   130bb:	00 00                	add    %al,(%rax)
   130bd:	00 00                	add    %al,(%rax)
   130bf:	00 ff                	add    %bh,%bh
   130c1:	ff                   	(bad)  
   130c2:	ff                   	(bad)  
   130c3:	ff                   	(bad)  
   130c4:	ff                   	(bad)  
   130c5:	ff                   	(bad)  
   130c6:	ff                   	(bad)  
   130c7:	ff 00                	incl   (%rax)
   130c9:	00 20                	add    %ah,(%rax)
   130cb:	00 00                	add    %al,(%rax)
   130cd:	00 00                	add    %al,(%rax)
   130cf:	00 b0 51 ff ff 80    	add    %dh,-0x7f0000af(%rax)
   130d5:	51                   	push   %rcx
   130d6:	ff                   	(bad)  
   130d7:	ff 72 51             	push   0x51(%rdx)
   130da:	ff                   	(bad)  
   130db:	ff 72 51             	push   0x51(%rdx)
   130de:	ff                   	(bad)  
   130df:	ff 72 51             	push   0x51(%rdx)
   130e2:	ff                   	(bad)  
   130e3:	ff 72 51             	push   0x51(%rdx)
   130e6:	ff                   	(bad)  
   130e7:	ff 80 51 ff ff 80    	incl   -0x7f0000af(%rax)
   130ed:	51                   	push   %rcx
   130ee:	ff                   	(bad)  
   130ef:	ff 10                	call   *(%rax)
   130f1:	52                   	push   %rdx
   130f2:	ff                   	(bad)  
   130f3:	ff 72 51             	push   0x51(%rdx)
   130f6:	ff                   	(bad)  
   130f7:	ff 72 51             	push   0x51(%rdx)
   130fa:	ff                   	(bad)  
   130fb:	ff 72 51             	push   0x51(%rdx)
   130fe:	ff                   	(bad)  
   130ff:	ff 72 51             	push   0x51(%rdx)
   13102:	ff                   	(bad)  
   13103:	ff 72 51             	push   0x51(%rdx)
   13106:	ff                   	(bad)  
   13107:	ff 72 51             	push   0x51(%rdx)
   1310a:	ff                   	(bad)  
   1310b:	ff 72 51             	push   0x51(%rdx)
   1310e:	ff                   	(bad)  
   1310f:	ff 00                	incl   (%rax)
   13111:	52                   	push   %rdx
   13112:	ff                   	(bad)  
   13113:	ff d0                	call   *%rax
   13115:	51                   	push   %rcx
   13116:	ff                   	(bad)  
   13117:	ff 00                	incl   (%rax)
   13119:	51                   	push   %rcx
   1311a:	ff                   	(bad)  
   1311b:	ff 1c 53             	lcall  *(%rbx,%rdx,2)
   1311e:	ff                   	(bad)  
   1311f:	ff 1c 53             	lcall  *(%rbx,%rdx,2)
   13122:	ff                   	(bad)  
   13123:	ff e4                	jmp    *%rsp
   13125:	53                   	push   %rbx
   13126:	ff                   	(bad)  
   13127:	ff 1c 53             	lcall  *(%rbx,%rdx,2)
   1312a:	ff                   	(bad)  
   1312b:	ff 1c 53             	lcall  *(%rbx,%rdx,2)
   1312e:	ff                   	(bad)  
   1312f:	ff 1c 53             	lcall  *(%rbx,%rdx,2)
   13132:	ff                   	(bad)  
   13133:	ff 14 53             	call   *(%rbx,%rdx,2)
   13136:	ff                   	(bad)  
   13137:	ff c4                	inc    %esp
   13139:	53                   	push   %rbx
   1313a:	ff                   	(bad)  
   1313b:	ff ac 53 ff ff 04 54 	ljmp   *0x5404ffff(%rbx,%rdx,2)
   13142:	ff                   	(bad)  
   13143:	ff 1c 53             	lcall  *(%rbx,%rdx,2)
   13146:	ff                   	(bad)  
   13147:	ff 1c 53             	lcall  *(%rbx,%rdx,2)
   1314a:	ff                   	(bad)  
   1314b:	ff 1c 53             	lcall  *(%rbx,%rdx,2)
   1314e:	ff                   	(bad)  
   1314f:	ff 1c 53             	lcall  *(%rbx,%rdx,2)
   13152:	ff                   	(bad)  
   13153:	ff 1c 53             	lcall  *(%rbx,%rdx,2)
   13156:	ff                   	(bad)  
   13157:	ff 1c 53             	lcall  *(%rbx,%rdx,2)
   1315a:	ff                   	(bad)  
   1315b:	ff 1c 53             	lcall  *(%rbx,%rdx,2)
   1315e:	ff                   	(bad)  
   1315f:	ff 1c 53             	lcall  *(%rbx,%rdx,2)
   13162:	ff                   	(bad)  
   13163:	ff 1c 53             	lcall  *(%rbx,%rdx,2)
   13166:	ff                   	(bad)  
   13167:	ff 1c 53             	lcall  *(%rbx,%rdx,2)
   1316a:	ff                   	(bad)  
   1316b:	ff 1c 53             	lcall  *(%rbx,%rdx,2)
   1316e:	ff                   	(bad)  
   1316f:	ff 1c 53             	lcall  *(%rbx,%rdx,2)
   13172:	ff                   	(bad)  
   13173:	ff 1c 53             	lcall  *(%rbx,%rdx,2)
   13176:	ff                   	(bad)  
   13177:	ff                   	.byte 0xff
   13178:	94                   	xchg   %eax,%esp
   13179:	53                   	push   %rbx
   1317a:	ff                   	(bad)  
   1317b:	ff                   	.byte 0xff

Disassembly of section .niprod:

0000000000013180 <g_global_data>:
   13180:	64 00 17             	add    %dl,%fs:(%rdi)
   13183:	00 02                	add    %al,(%rdx)
   13185:	00 00                	add    %al,(%rax)
   13187:	00 01                	add    %al,(%rcx)
   13189:	00 00                	add    %al,(%rax)
   1318b:	00 00                	add    %al,(%rax)
   1318d:	00 00                	add    %al,(%rax)
   1318f:	00 02                	add    %al,(%rdx)
   13191:	00 00                	add    %al,(%rax)
   13193:	00 00                	add    %al,(%rax)
   13195:	00 00                	add    %al,(%rax)
   13197:	00 03                	add    %al,(%rbx)
   13199:	00 00                	add    %al,(%rax)
   1319b:	00 00                	add    %al,(%rax)
   1319d:	00 00                	add    %al,(%rax)
   1319f:	00 04 00             	add    %al,(%rax,%rax,1)
   131a2:	00 00                	add    %al,(%rax)
   131a4:	00 00                	add    %al,(%rax)
   131a6:	00 00                	add    %al,(%rax)
   131a8:	05 00 00 00 00       	add    $0x0,%eax
   131ad:	00 00                	add    %al,(%rax)
   131af:	00 06                	add    %al,(%rsi)
	...

0000000000013880 <SYNTHETIC_STATE>:
   13880:	7f 03                	jg     13885 <SYNTHETIC_STATE+0x5>
	...
   13896:	00 00                	add    %al,(%rax)
   13898:	bf 1f 00 00 ff       	mov    $0xff00001f,%edi
   1389d:	ff 00                	incl   (%rax)
	...
   13a7f:	00 02                	add    %al,(%rdx)
   13a81:	00 00                	add    %al,(%rax)
   13a83:	00 00                	add    %al,(%rax)
   13a85:	00 00                	add    %al,(%rax)
   13a87:	00 02                	add    %al,(%rdx)
   13a89:	00 00                	add    %al,(%rax)
   13a8b:	00 00                	add    %al,(%rax)
   13a8d:	00 00                	add    %al,(%rax)
   13a8f:	80 00 00             	addb   $0x0,(%rax)
	...

Disassembly of section .eh_frame_hdr:

0000000000013ac0 <__GNU_EH_FRAME_HDR>:
   13ac0:	01 1b                	add    %ebx,(%rbx)
   13ac2:	03 3b                	add    (%rbx),%edi
   13ac4:	2c 08                	sub    $0x8,%al
   13ac6:	00 00                	add    %al,(%rax)
   13ac8:	04 01                	add    $0x1,%al
   13aca:	00 00                	add    %al,(%rax)
   13acc:	40 d5                	rex (bad) 
   13ace:	fe                   	(bad)  
   13acf:	ff a8 08 00 00 50    	ljmp   *0x50000008(%rax)
   13ad5:	d5                   	(bad)  
   13ad6:	fe                   	(bad)  
   13ad7:	ff d0                	call   *%rax
   13ad9:	08 00                	or     %al,(%rax)
   13adb:	00 40 e5             	add    %al,-0x1b(%rax)
   13ade:	fe                   	(bad)  
   13adf:	ff                   	(bad)  
   13ae0:	d8 0c 00             	fmuls  (%rax,%rax,1)
   13ae3:	00 50 e5             	add    %dl,-0x1b(%rax)
   13ae6:	fe                   	(bad)  
   13ae7:	ff 10                	call   *(%rax)
   13ae9:	2d 00 00 70 e5       	sub    $0xe5700000,%eax
   13aee:	fe                   	(bad)  
   13aef:	ff 28                	ljmp   *(%rax)
   13af1:	2f                   	(bad)  
   13af2:	00 00                	add    %al,(%rax)
   13af4:	90                   	nop
   13af5:	e5 fe                	in     $0xfe,%eax
   13af7:	ff 70 2f             	push   0x2f(%rax)
   13afa:	00 00                	add    %al,(%rax)
   13afc:	a3 e5 fe ff 48 08 00 	movabs %eax,0xff00000848fffee5
   13b03:	00 ff 
   13b05:	e5 fe                	in     $0xfe,%eax
   13b07:	ff 64 08 00          	jmp    *0x0(%rax,%rcx,1)
   13b0b:	00 1c e6             	add    %bl,(%rsi,%riz,8)
   13b0e:	fe                   	(bad)  
   13b0f:	ff                   	(bad)  
   13b10:	78 08                	js     13b1a <__GNU_EH_FRAME_HDR+0x5a>
   13b12:	00 00                	add    %al,(%rax)
   13b14:	52                   	push   %rdx
   13b15:	e6 fe                	out    %al,$0xfe
   13b17:	ff 90 08 00 00 46    	call   *0x46000008(%rax)
   13b1d:	05 ff ff e8 08       	add    $0x8e8ffff,%eax
   13b22:	00 00                	add    %al,(%rax)
   13b24:	5f                   	pop    %rdi
   13b25:	05 ff ff 00 09       	add    $0x900ffff,%eax
   13b2a:	00 00                	add    %al,(%rax)
   13b2c:	c1 05 ff ff 24 09 00 	roll   $0x0,0x924ffff(%rip)        # 9263b32 <_end+0x9238b22>
   13b33:	00 27                	add    %ah,(%rdi)
   13b35:	06                   	(bad)  
   13b36:	ff                   	(bad)  
   13b37:	ff 48 09             	decl   0x9(%rax)
   13b3a:	00 00                	add    %al,(%rax)
   13b3c:	8a 06                	mov    (%rsi),%al
   13b3e:	ff                   	(bad)  
   13b3f:	ff 6c 09 00          	ljmp   *0x0(%rcx,%rcx,1)
   13b43:	00 73 07             	add    %dh,0x7(%rbx)
   13b46:	ff                   	(bad)  
   13b47:	ff a4 09 00 00 90 08 	jmp    *0x8900000(%rcx,%rcx,1)
   13b4e:	ff                   	(bad)  
   13b4f:	ff e0                	jmp    *%rax
   13b51:	09 00                	or     %eax,(%rax)
   13b53:	00 30                	add    %dh,(%rax)
   13b55:	09 ff                	or     %edi,%edi
   13b57:	ff f4                	push   %rsp
   13b59:	09 00                	or     %eax,(%rax)
   13b5b:	00 80 1a ff ff 28    	add    %al,0x28ffff1a(%rax)
   13b61:	0a 00                	or     (%rax),%al
   13b63:	00 90 1c ff ff 98    	add    %dl,-0x670000e4(%rax)
   13b69:	0a 00                	or     (%rax),%al
   13b6b:	00 d0                	add    %dl,%al
   13b6d:	1c ff                	sbb    $0xff,%al
   13b6f:	ff d0                	call   *%rax
   13b71:	0a 00                	or     (%rax),%al
   13b73:	00 60 1d             	add    %ah,0x1d(%rax)
   13b76:	ff                   	(bad)  
   13b77:	ff 1c 0b             	lcall  *(%rbx,%rcx,1)
   13b7a:	00 00                	add    %al,(%rax)
   13b7c:	f0 1d ff ff 68 0b    	lock sbb $0xb68ffff,%eax
   13b82:	00 00                	add    %al,(%rax)
   13b84:	20 1e                	and    %bl,(%rsi)
   13b86:	ff                   	(bad)  
   13b87:	ff                   	(bad)  
   13b88:	7c 0b                	jl     13b95 <__GNU_EH_FRAME_HDR+0xd5>
   13b8a:	00 00                	add    %al,(%rax)
   13b8c:	50                   	push   %rax
   13b8d:	1e                   	(bad)  
   13b8e:	ff                   	(bad)  
   13b8f:	ff 90 0b 00 00 90    	call   *-0x6ffffff5(%rax)
   13b95:	1e                   	(bad)  
   13b96:	ff                   	(bad)  
   13b97:	ff a8 0b 00 00 b0    	ljmp   *-0x4ffffff5(%rax)
   13b9d:	1e                   	(bad)  
   13b9e:	ff                   	(bad)  
   13b9f:	ff c4                	inc    %esp
   13ba1:	0b 00                	or     (%rax),%eax
   13ba3:	00 c0                	add    %al,%al
   13ba5:	1e                   	(bad)  
   13ba6:	ff                   	(bad)  
   13ba7:	ff                   	(bad)  
   13ba8:	d8 0b                	fmuls  (%rbx)
   13baa:	00 00                	add    %al,(%rax)
   13bac:	f0 1e                	lock (bad) 
   13bae:	ff                   	(bad)  
   13baf:	ff 00                	incl   (%rax)
   13bb1:	0c 00                	or     $0x0,%al
   13bb3:	00 10                	add    %dl,(%rax)
   13bb5:	1f                   	(bad)  
   13bb6:	ff                   	(bad)  
   13bb7:	ff 80 0c 00 00 30    	incl   0x3000000c(%rax)
   13bbd:	20 ff                	and    %bh,%bh
   13bbf:	ff                   	(bad)  
   13bc0:	ec                   	in     (%dx),%al
   13bc1:	0c 00                	or     $0x0,%al
   13bc3:	00 90 20 ff ff 00    	add    %dl,0xffff20(%rax)
   13bc9:	0d 00 00 f0 20       	or     $0x20f00000,%eax
   13bce:	ff                   	(bad)  
   13bcf:	ff 14 0d 00 00 d0 21 	call   *0x21d00000(,%rcx,1)
   13bd6:	ff                   	(bad)  
   13bd7:	ff 34 0d 00 00 30 22 	push   0x22300000(,%rcx,1)
   13bde:	ff                   	(bad)  
   13bdf:	ff 4c 0d 00          	decl   0x0(%rbp,%rcx,1)
   13be3:	00 60 23             	add    %ah,0x23(%rax)
   13be6:	ff                   	(bad)  
   13be7:	ff 88 0d 00 00 80    	decl   -0x7ffffff3(%rax)
   13bed:	23 ff                	and    %edi,%edi
   13bef:	ff 9c 0d 00 00 b0 23 	lcall  *0x23b00000(%rbp,%rcx,1)
   13bf6:	ff                   	(bad)  
   13bf7:	ff                   	(bad)  
   13bf8:	b8 0d 00 00 e0       	mov    $0xe000000d,%eax
   13bfd:	23 ff                	and    %edi,%edi
   13bff:	ff                   	(bad)  
   13c00:	d8 0d 00 00 a0 24    	fmuls  0x24a00000(%rip)        # 24a13c06 <_end+0x249e8bf6>
   13c06:	ff                   	(bad)  
   13c07:	ff 14 0e             	call   *(%rsi,%rcx,1)
   13c0a:	00 00                	add    %al,(%rax)
   13c0c:	80 26 ff             	andb   $0xff,(%rsi)
   13c0f:	ff 6c 0e 00          	ljmp   *0x0(%rsi,%rcx,1)
   13c13:	00 e0                	add    %ah,%al
   13c15:	26 ff                	es (bad) 
   13c17:	ff 80 0e 00 00 40    	incl   0x4000000e(%rax)
   13c1d:	27                   	(bad)  
   13c1e:	ff                   	(bad)  
   13c1f:	ff 9c 0e 00 00 b0 27 	lcall  *0x27b00000(%rsi,%rcx,1)
   13c26:	ff                   	(bad)  
   13c27:	ff b0 0e 00 00 10    	push   0x1000000e(%rax)
   13c2d:	28 ff                	sub    %bh,%bh
   13c2f:	ff c4                	inc    %esp
   13c31:	0e                   	(bad)  
   13c32:	00 00                	add    %al,(%rax)
   13c34:	d0 29                	shrb   (%rcx)
   13c36:	ff                   	(bad)  
   13c37:	ff 08                	decl   (%rax)
   13c39:	0f 00 00             	sldt   (%rax)
   13c3c:	30 2a                	xor    %ch,(%rdx)
   13c3e:	ff                   	(bad)  
   13c3f:	ff                   	(bad)  
   13c40:	3c 0f                	cmp    $0xf,%al
   13c42:	00 00                	add    %al,(%rax)
   13c44:	00 2b                	add    %ch,(%rbx)
   13c46:	ff                   	(bad)  
   13c47:	ff 80 0f 00 00 20    	incl   0x2000000f(%rax)
   13c4d:	2c ff                	sub    $0xff,%al
   13c4f:	ff c8                	dec    %eax
   13c51:	0f 00 00             	sldt   (%rax)
   13c54:	60                   	(bad)  
   13c55:	2c ff                	sub    $0xff,%al
   13c57:	ff f0                	push   %rax
   13c59:	0f 00 00             	sldt   (%rax)
   13c5c:	70 2c                	jo     13c8a <__GNU_EH_FRAME_HDR+0x1ca>
   13c5e:	ff                   	(bad)  
   13c5f:	ff 04 10             	incl   (%rax,%rdx,1)
   13c62:	00 00                	add    %al,(%rax)
   13c64:	40 2d ff ff 30 10    	rex sub $0x1030ffff,%eax
   13c6a:	00 00                	add    %al,(%rax)
   13c6c:	20 2e                	and    %ch,(%rsi)
   13c6e:	ff                   	(bad)  
   13c6f:	ff 88 10 00 00 e0    	decl   -0x1ffffff0(%rax)
   13c75:	2f                   	(bad)  
   13c76:	ff                   	(bad)  
   13c77:	ff                   	(bad)  
   13c78:	e8 10 00 00 f0       	call   fffffffff0013c8d <_end+0xffffffffeffe8c7d>
   13c7d:	2f                   	(bad)  
   13c7e:	ff                   	(bad)  
   13c7f:	ff                   	(bad)  
   13c80:	fc                   	cld    
   13c81:	10 00                	adc    %al,(%rax)
   13c83:	00 00                	add    %al,(%rax)
   13c85:	30 ff                	xor    %bh,%bh
   13c87:	ff 10                	call   *(%rax)
   13c89:	11 00                	adc    %eax,(%rax)
   13c8b:	00 10                	add    %dl,(%rax)
   13c8d:	30 ff                	xor    %bh,%bh
   13c8f:	ff 24 11             	jmp    *(%rcx,%rdx,1)
   13c92:	00 00                	add    %al,(%rax)
   13c94:	20 30                	and    %dh,(%rax)
   13c96:	ff                   	(bad)  
   13c97:	ff                   	(bad)  
   13c98:	38 11                	cmp    %dl,(%rcx)
   13c9a:	00 00                	add    %al,(%rax)
   13c9c:	30 30                	xor    %dh,(%rax)
   13c9e:	ff                   	(bad)  
   13c9f:	ff 4c 11 00          	decl   0x0(%rcx,%rdx,1)
   13ca3:	00 40 30             	add    %al,0x30(%rax)
   13ca6:	ff                   	(bad)  
   13ca7:	ff 60 11             	jmp    *0x11(%rax)
   13caa:	00 00                	add    %al,(%rax)
   13cac:	50                   	push   %rax
   13cad:	30 ff                	xor    %bh,%bh
   13caf:	ff 74 11 00          	push   0x0(%rcx,%rdx,1)
   13cb3:	00 60 30             	add    %ah,0x30(%rax)
   13cb6:	ff                   	(bad)  
   13cb7:	ff 88 11 00 00 c0    	decl   -0x3fffffef(%rax)
   13cbd:	32 ff                	xor    %bh,%bh
   13cbf:	ff d4                	call   *%rsp
   13cc1:	11 00                	adc    %eax,(%rax)
   13cc3:	00 20                	add    %ah,(%rax)
   13cc5:	35 ff ff f8 11       	xor    $0x11f8ffff,%eax
   13cca:	00 00                	add    %al,(%rax)
   13ccc:	00 36                	add    %dh,(%rsi)
   13cce:	ff                   	(bad)  
   13ccf:	ff 24 12             	jmp    *(%rdx,%rdx,1)
   13cd2:	00 00                	add    %al,(%rax)
   13cd4:	e0 36                	loopne 13d0c <__GNU_EH_FRAME_HDR+0x24c>
   13cd6:	ff                   	(bad)  
   13cd7:	ff c0                	inc    %eax
   13cd9:	12 00                	adc    (%rax),%al
   13cdb:	00 10                	add    %dl,(%rax)
   13cdd:	37                   	(bad)  
   13cde:	ff                   	(bad)  
   13cdf:	ff d4                	call   *%rsp
   13ce1:	12 00                	adc    (%rax),%al
   13ce3:	00 50 37             	add    %dl,0x37(%rax)
   13ce6:	ff                   	(bad)  
   13ce7:	ff f0                	push   %rax
   13ce9:	12 00                	adc    (%rax),%al
   13ceb:	00 10                	add    %dl,(%rax)
   13ced:	38 ff                	cmp    %bh,%bh
   13cef:	ff 20                	jmp    *(%rax)
   13cf1:	13 00                	adc    (%rax),%eax
   13cf3:	00 20                	add    %ah,(%rax)
   13cf5:	38 ff                	cmp    %bh,%bh
   13cf7:	ff 34 13             	push   (%rbx,%rdx,1)
   13cfa:	00 00                	add    %al,(%rax)
   13cfc:	50                   	push   %rax
   13cfd:	38 ff                	cmp    %bh,%bh
   13cff:	ff 4c 13 00          	decl   0x0(%rbx,%rdx,1)
   13d03:	00 70 38             	add    %dh,0x38(%rax)
   13d06:	ff                   	(bad)  
   13d07:	ff 64 13 00          	jmp    *0x0(%rbx,%rdx,1)
   13d0b:	00 e0                	add    %ah,%al
   13d0d:	38 ff                	cmp    %bh,%bh
   13d0f:	ff                   	(bad)  
   13d10:	78 13                	js     13d25 <__GNU_EH_FRAME_HDR+0x265>
   13d12:	00 00                	add    %al,(%rax)
   13d14:	40 39 ff             	rex cmp %edi,%edi
   13d17:	ff 8c 13 00 00 60 39 	decl   0x39600000(%rbx,%rdx,1)
   13d1e:	ff                   	(bad)  
   13d1f:	ff a4 13 00 00 e0 39 	jmp    *0x39e00000(%rbx,%rdx,1)
   13d26:	ff                   	(bad)  
   13d27:	ff                   	(bad)  
   13d28:	bc 13 00 00 50       	mov    $0x50000013,%esp
   13d2d:	3a ff                	cmp    %bh,%bh
   13d2f:	ff d0                	call   *%rax
   13d31:	13 00                	adc    (%rax),%eax
   13d33:	00 b0 3a ff ff e4    	add    %dh,-0x1b0000c6(%rax)
   13d39:	13 00                	adc    (%rax),%eax
   13d3b:	00 d0                	add    %dl,%al
   13d3d:	3a ff                	cmp    %bh,%bh
   13d3f:	ff                   	(bad)  
   13d40:	fc                   	cld    
   13d41:	13 00                	adc    (%rax),%eax
   13d43:	00 20                	add    %ah,(%rax)
   13d45:	3b ff                	cmp    %edi,%edi
   13d47:	ff 10                	call   *(%rax)
   13d49:	14 00                	adc    $0x0,%al
   13d4b:	00 60 3b             	add    %ah,0x3b(%rax)
   13d4e:	ff                   	(bad)  
   13d4f:	ff                   	(bad)  
   13d50:	38 14 00             	cmp    %dl,(%rax,%rax,1)
   13d53:	00 90 3b ff ff 54    	add    %dl,0x54ffff3b(%rax)
   13d59:	14 00                	adc    $0x0,%al
   13d5b:	00 c0                	add    %al,%al
   13d5d:	3b ff                	cmp    %edi,%edi
   13d5f:	ff 6c 14 00          	ljmp   *0x0(%rsp,%rdx,1)
   13d63:	00 f0                	add    %dh,%al
   13d65:	3b ff                	cmp    %edi,%edi
   13d67:	ff 80 14 00 00 10    	incl   0x10000014(%rax)
   13d6d:	3c ff                	cmp    $0xff,%al
   13d6f:	ff 98 14 00 00 30    	lcall  *0x30000014(%rax)
   13d75:	3c ff                	cmp    $0xff,%al
   13d77:	ff ac 14 00 00 50 3c 	ljmp   *0x3c500000(%rsp,%rdx,1)
   13d7e:	ff                   	(bad)  
   13d7f:	ff c0                	inc    %eax
   13d81:	14 00                	adc    $0x0,%al
   13d83:	00 80 3c ff ff e0    	add    %al,-0x1f0000c4(%rax)
   13d89:	14 00                	adc    $0x0,%al
   13d8b:	00 70 40             	add    %dh,0x40(%rax)
   13d8e:	ff                   	(bad)  
   13d8f:	ff 04 15 00 00 c0 41 	incl   0x41c00000(,%rdx,1)
   13d96:	ff                   	(bad)  
   13d97:	ff 40 15             	incl   0x15(%rax)
   13d9a:	00 00                	add    %al,(%rax)
   13d9c:	70 42                	jo     13de0 <__GNU_EH_FRAME_HDR+0x320>
   13d9e:	ff                   	(bad)  
   13d9f:	ff                   	(bad)  
   13da0:	7c 15                	jl     13db7 <__GNU_EH_FRAME_HDR+0x2f7>
   13da2:	00 00                	add    %al,(%rax)
   13da4:	20 46 ff             	and    %al,-0x1(%rsi)
   13da7:	ff c8                	dec    %eax
   13da9:	15 00 00 50 46       	adc    $0x46500000,%eax
   13dae:	ff                   	(bad)  
   13daf:	ff e0                	jmp    *%rax
   13db1:	15 00 00 c0 46       	adc    $0x46c00000,%eax
   13db6:	ff                   	(bad)  
   13db7:	ff f4                	push   %rsp
   13db9:	15 00 00 a0 48       	adc    $0x48a00000,%eax
   13dbe:	ff                   	(bad)  
   13dbf:	ff 2c 16             	ljmp   *(%rsi,%rdx,1)
   13dc2:	00 00                	add    %al,(%rax)
   13dc4:	d0 4a ff             	rorb   -0x1(%rdx)
   13dc7:	ff a8 16 00 00 70    	ljmp   *0x70000016(%rax)
   13dcd:	4b ff                	rex.WXB (bad) 
   13dcf:	ff                   	(bad)  
   13dd0:	bc 16 00 00 60       	mov    $0x60000016,%esp
   13dd5:	4c ff                	rex.WR (bad) 
   13dd7:	ff d0                	call   *%rax
   13dd9:	16                   	(bad)  
   13dda:	00 00                	add    %al,(%rax)
   13ddc:	50                   	push   %rax
   13ddd:	4d ff                	rex.WRB (bad) 
   13ddf:	ff e4                	jmp    *%rsp
   13de1:	16                   	(bad)  
   13de2:	00 00                	add    %al,(%rax)
   13de4:	30 4f ff             	xor    %cl,-0x1(%rdi)
   13de7:	ff                   	(bad)  
   13de8:	38 17                	cmp    %dl,(%rdi)
   13dea:	00 00                	add    %al,(%rax)
   13dec:	30 50 ff             	xor    %dl,-0x1(%rax)
   13def:	ff 88 17 00 00 60    	decl   0x60000017(%rax)
   13df5:	51                   	push   %rcx
   13df6:	ff                   	(bad)  
   13df7:	ff c4                	inc    %esp
   13df9:	17                   	(bad)  
   13dfa:	00 00                	add    %al,(%rax)
   13dfc:	80 51 ff ff          	adcb   $0xff,-0x1(%rcx)
   13e00:	d8 17                	fcoms  (%rdi)
   13e02:	00 00                	add    %al,(%rax)
   13e04:	20 52 ff             	and    %dl,-0x1(%rdx)
   13e07:	ff 04 18             	incl   (%rax,%rbx,1)
   13e0a:	00 00                	add    %al,(%rax)
   13e0c:	f0 52                	lock push %rdx
   13e0e:	ff                   	(bad)  
   13e0f:	ff 70 19             	push   0x19(%rax)
   13e12:	00 00                	add    %al,(%rax)
   13e14:	10 53 ff             	adc    %dl,-0x1(%rbx)
   13e17:	ff 40 1a             	incl   0x1a(%rax)
   13e1a:	00 00                	add    %al,(%rax)
   13e1c:	90                   	nop
   13e1d:	53                   	push   %rbx
   13e1e:	ff                   	(bad)  
   13e1f:	ff 70 1a             	push   0x1a(%rax)
   13e22:	00 00                	add    %al,(%rax)
   13e24:	c0 53 ff ff          	rclb   $0xff,-0x1(%rbx)
   13e28:	8c 1a                	mov    %ds,(%rdx)
   13e2a:	00 00                	add    %al,(%rax)
   13e2c:	f0 53                	lock push %rbx
   13e2e:	ff                   	(bad)  
   13e2f:	ff a8 1a 00 00 10    	ljmp   *0x1000001a(%rax)
   13e35:	54                   	push   %rsp
   13e36:	ff                   	(bad)  
   13e37:	ff c4                	inc    %esp
   13e39:	1a 00                	sbb    (%rax),%al
   13e3b:	00 40 54             	add    %al,0x54(%rax)
   13e3e:	ff                   	(bad)  
   13e3f:	ff                   	(bad)  
   13e40:	d8 1a                	fcomps (%rdx)
   13e42:	00 00                	add    %al,(%rax)
   13e44:	60                   	(bad)  
   13e45:	54                   	push   %rsp
   13e46:	ff                   	(bad)  
   13e47:	ff                   	(bad)  
   13e48:	ec                   	in     (%dx),%al
   13e49:	1a 00                	sbb    (%rax),%al
   13e4b:	00 20                	add    %ah,(%rax)
   13e4d:	55                   	push   %rbp
   13e4e:	ff                   	(bad)  
   13e4f:	ff 00                	incl   (%rax)
   13e51:	1b 00                	sbb    (%rax),%eax
   13e53:	00 e0                	add    %ah,%al
   13e55:	55                   	push   %rbp
   13e56:	ff                   	(bad)  
   13e57:	ff 14 1b             	call   *(%rbx,%rbx,1)
   13e5a:	00 00                	add    %al,(%rax)
   13e5c:	00 56 ff             	add    %dl,-0x1(%rsi)
   13e5f:	ff 28                	ljmp   *(%rax)
   13e61:	1b 00                	sbb    (%rax),%eax
   13e63:	00 c0                	add    %al,%al
   13e65:	56                   	push   %rsi
   13e66:	ff                   	(bad)  
   13e67:	ff                   	(bad)  
   13e68:	3c 1b                	cmp    $0x1b,%al
   13e6a:	00 00                	add    %al,(%rax)
   13e6c:	e0 56                	loopne 13ec4 <__GNU_EH_FRAME_HDR+0x404>
   13e6e:	ff                   	(bad)  
   13e6f:	ff 50 1b             	call   *0x1b(%rax)
   13e72:	00 00                	add    %al,(%rax)
   13e74:	00 57 ff             	add    %dl,-0x1(%rdi)
   13e77:	ff 64 1b 00          	jmp    *0x0(%rbx,%rbx,1)
   13e7b:	00 c0                	add    %al,%al
   13e7d:	57                   	push   %rdi
   13e7e:	ff                   	(bad)  
   13e7f:	ff                   	(bad)  
   13e80:	78 1b                	js     13e9d <__GNU_EH_FRAME_HDR+0x3dd>
   13e82:	00 00                	add    %al,(%rax)
   13e84:	e0 57                	loopne 13edd <__GNU_EH_FRAME_HDR+0x41d>
   13e86:	ff                   	(bad)  
   13e87:	ff 8c 1b 00 00 20 58 	decl   0x58200000(%rbx,%rbx,1)
   13e8e:	ff                   	(bad)  
   13e8f:	ff                   	(bad)  
   13e90:	b8 1b 00 00 60       	mov    $0x6000001b,%eax
   13e95:	5a                   	pop    %rdx
   13e96:	ff                   	(bad)  
   13e97:	ff 08                	decl   (%rax)
   13e99:	1c 00                	sbb    $0x0,%al
   13e9b:	00 40 5c             	add    %al,0x5c(%rax)
   13e9e:	ff                   	(bad)  
   13e9f:	ff                   	(bad)  
   13ea0:	38 1c 00             	cmp    %bl,(%rax,%rax,1)
   13ea3:	00 50 5c             	add    %dl,0x5c(%rax)
   13ea6:	ff                   	(bad)  
   13ea7:	ff 4c 1c 00          	decl   0x0(%rsp,%rbx,1)
   13eab:	00 60 5c             	add    %ah,0x5c(%rax)
   13eae:	ff                   	(bad)  
   13eaf:	ff 60 1c             	jmp    *0x1c(%rax)
   13eb2:	00 00                	add    %al,(%rax)
   13eb4:	80 5c ff ff 74       	sbbb   $0x74,-0x1(%rdi,%rdi,8)
   13eb9:	1c 00                	sbb    $0x0,%al
   13ebb:	00 c0                	add    %al,%al
   13ebd:	5c                   	pop    %rsp
   13ebe:	ff                   	(bad)  
   13ebf:	ff 94 1c 00 00 00 5d 	call   *0x5d000000(%rsp,%rbx,1)
   13ec6:	ff                   	(bad)  
   13ec7:	ff b4 1c 00 00 80 5d 	push   0x5d800000(%rsp,%rbx,1)
   13ece:	ff                   	(bad)  
   13ecf:	ff                   	(bad)  
   13ed0:	dc 1c 00             	fcompl (%rax,%rax,1)
   13ed3:	00 b0 5d ff ff f0    	add    %dh,-0xf0000a3(%rax)
   13ed9:	1c 00                	sbb    $0x0,%al
   13edb:	00 e0                	add    %ah,%al
   13edd:	5d                   	pop    %rbp
   13ede:	ff                   	(bad)  
   13edf:	ff 04 1d 00 00 10 5e 	incl   0x5e100000(,%rbx,1)
   13ee6:	ff                   	(bad)  
   13ee7:	ff 18                	lcall  *(%rax)
   13ee9:	1d 00 00 40 5e       	sbb    $0x5e400000,%eax
   13eee:	ff                   	(bad)  
   13eef:	ff 2c 1d 00 00 b0 5e 	ljmp   *0x5eb00000(,%rbx,1)
   13ef6:	ff                   	(bad)  
   13ef7:	ff 40 1d             	incl   0x1d(%rax)
   13efa:	00 00                	add    %al,(%rax)
   13efc:	40 60                	rex (bad) 
   13efe:	ff                   	(bad)  
   13eff:	ff 84 1d 00 00 00 61 	incl   0x61000000(%rbp,%rbx,1)
   13f06:	ff                   	(bad)  
   13f07:	ff                   	(bad)  
   13f08:	b8 1d 00 00 10       	mov    $0x1000001d,%eax
   13f0d:	64 ff                	fs (bad) 
   13f0f:	ff 1c 1e             	lcall  *(%rsi,%rbx,1)
   13f12:	00 00                	add    %al,(%rax)
   13f14:	f0 64 ff             	lock fs (bad) 
   13f17:	ff 6c 1e 00          	ljmp   *0x0(%rsi,%rbx,1)
   13f1b:	00 00                	add    %al,(%rax)
   13f1d:	66 ff                	data16 (bad) 
   13f1f:	ff 90 1e 00 00 50    	call   *0x5000001e(%rax)
   13f25:	66 ff                	data16 (bad) 
   13f27:	ff ac 1e 00 00 90 66 	ljmp   *0x66900000(%rsi,%rbx,1)
   13f2e:	ff                   	(bad)  
   13f2f:	ff d4                	call   *%rsp
   13f31:	1e                   	(bad)  
   13f32:	00 00                	add    %al,(%rax)
   13f34:	70 67                	jo     13f9d <__GNU_EH_FRAME_HDR+0x4dd>
   13f36:	ff                   	(bad)  
   13f37:	ff 00                	incl   (%rax)
   13f39:	1f                   	(bad)  
   13f3a:	00 00                	add    %al,(%rax)
   13f3c:	60                   	(bad)  
   13f3d:	68 ff ff 2c 1f       	push   $0x1f2cffff
   13f42:	00 00                	add    %al,(%rax)
   13f44:	30 69 ff             	xor    %ch,-0x1(%rcx)
   13f47:	ff 8c 1f 00 00 a0 6a 	decl   0x6aa00000(%rdi,%rbx,1)
   13f4e:	ff                   	(bad)  
   13f4f:	ff                   	(bad)  
   13f50:	b8 1f 00 00 e0       	mov    $0xe000001f,%eax
   13f55:	6c                   	insb   (%dx),%es:(%rdi)
   13f56:	ff                   	(bad)  
   13f57:	ff                   	(bad)  
   13f58:	e8 1f 00 00 50       	call   50013f7c <_end+0x4ffe8f6c>
   13f5d:	6d                   	insl   (%dx),%es:(%rdi)
   13f5e:	ff                   	(bad)  
   13f5f:	ff 1c 20             	lcall  *(%rax,%riz,1)
   13f62:	00 00                	add    %al,(%rax)
   13f64:	50                   	push   %rax
   13f65:	6e                   	outsb  %ds:(%rsi),(%dx)
   13f66:	ff                   	(bad)  
   13f67:	ff 50 20             	call   *0x20(%rax)
   13f6a:	00 00                	add    %al,(%rax)
   13f6c:	a0 6e ff ff 88 20 00 	movabs 0xc000002088ffff6e,%al
   13f73:	00 c0 
   13f75:	6f                   	outsl  %ds:(%rsi),(%dx)
   13f76:	ff                   	(bad)  
   13f77:	ff 00                	incl   (%rax)
   13f79:	21 00                	and    %eax,(%rax)
   13f7b:	00 d0                	add    %dl,%al
   13f7d:	70 ff                	jo     13f7e <__GNU_EH_FRAME_HDR+0x4be>
   13f7f:	ff                   	(bad)  
   13f80:	7c 21                	jl     13fa3 <__GNU_EH_FRAME_HDR+0x4e3>
   13f82:	00 00                	add    %al,(%rax)
   13f84:	c0 71 ff ff          	shlb   $0xff,-0x1(%rcx)
   13f88:	ac                   	lods   %ds:(%rsi),%al
   13f89:	21 00                	and    %eax,(%rax)
   13f8b:	00 40 73             	add    %al,0x73(%rax)
   13f8e:	ff                   	(bad)  
   13f8f:	ff 28                	ljmp   *(%rax)
   13f91:	22 00                	and    (%rax),%al
   13f93:	00 90 74 ff ff 98    	add    %dl,-0x6700008c(%rax)
   13f99:	22 00                	and    (%rax),%al
   13f9b:	00 80 75 ff ff d8    	add    %al,-0x2700008b(%rax)
   13fa1:	22 00                	and    (%rax),%al
   13fa3:	00 c0                	add    %al,%al
   13fa5:	76 ff                	jbe    13fa6 <__GNU_EH_FRAME_HDR+0x4e6>
   13fa7:	ff 0c 23             	decl   (%rbx,%riz,1)
   13faa:	00 00                	add    %al,(%rax)
   13fac:	40 77 ff             	rex ja 13fae <__GNU_EH_FRAME_HDR+0x4ee>
   13faf:	ff 20                	jmp    *(%rax)
   13fb1:	23 00                	and    (%rax),%eax
   13fb3:	00 c0                	add    %al,%al
   13fb5:	77 ff                	ja     13fb6 <__GNU_EH_FRAME_HDR+0x4f6>
   13fb7:	ff 34 23             	push   (%rbx,%riz,1)
   13fba:	00 00                	add    %al,(%rax)
   13fbc:	50                   	push   %rax
   13fbd:	78 ff                	js     13fbe <__GNU_EH_FRAME_HDR+0x4fe>
   13fbf:	ff 48 23             	decl   0x23(%rax)
   13fc2:	00 00                	add    %al,(%rax)
   13fc4:	60                   	(bad)  
   13fc5:	78 ff                	js     13fc6 <__GNU_EH_FRAME_HDR+0x506>
   13fc7:	ff 5c 23 00          	lcall  *0x0(%rbx,%riz,1)
   13fcb:	00 70 78             	add    %dh,0x78(%rax)
   13fce:	ff                   	(bad)  
   13fcf:	ff 70 23             	push   0x23(%rax)
   13fd2:	00 00                	add    %al,(%rax)
   13fd4:	80 78 ff ff          	cmpb   $0xff,-0x1(%rax)
   13fd8:	84 23                	test   %ah,(%rbx)
   13fda:	00 00                	add    %al,(%rax)
   13fdc:	90                   	nop
   13fdd:	78 ff                	js     13fde <__GNU_EH_FRAME_HDR+0x51e>
   13fdf:	ff 98 23 00 00 b0    	lcall  *-0x4fffffdd(%rax)
   13fe5:	78 ff                	js     13fe6 <__GNU_EH_FRAME_HDR+0x526>
   13fe7:	ff ac 23 00 00 f0 78 	ljmp   *0x78f00000(%rbx,%riz,1)
   13fee:	ff                   	(bad)  
   13fef:	ff cc                	dec    %esp
   13ff1:	23 00                	and    (%rax),%eax
   13ff3:	00 20                	add    %ah,(%rax)
   13ff5:	7b ff                	jnp    13ff6 <__GNU_EH_FRAME_HDR+0x536>
   13ff7:	ff 00                	incl   (%rax)
   13ff9:	24 00                	and    $0x0,%al
   13ffb:	00 70 7b             	add    %dh,0x7b(%rax)
   13ffe:	ff                   	(bad)  
   13fff:	ff 14 24             	call   *(%rsp)
   14002:	00 00                	add    %al,(%rax)
   14004:	70 7d                	jo     14083 <__GNU_EH_FRAME_HDR+0x5c3>
   14006:	ff                   	(bad)  
   14007:	ff 60 24             	jmp    *0x24(%rax)
   1400a:	00 00                	add    %al,(%rax)
   1400c:	70 7e                	jo     1408c <__GNU_EH_FRAME_HDR+0x5cc>
   1400e:	ff                   	(bad)  
   1400f:	ff                   	(bad)  
   14010:	b8 24 00 00 90       	mov    $0x90000024,%eax
   14015:	7e ff                	jle    14016 <__GNU_EH_FRAME_HDR+0x556>
   14017:	ff d4                	call   *%rsp
   14019:	24 00                	and    $0x0,%al
   1401b:	00 a0 7e ff ff e8    	add    %ah,-0x17000082(%rax)
   14021:	24 00                	and    $0x0,%al
   14023:	00 b0 7e ff ff fc    	add    %dh,-0x3000082(%rax)
   14029:	24 00                	and    $0x0,%al
   1402b:	00 c0                	add    %al,%al
   1402d:	7e ff                	jle    1402e <__GNU_EH_FRAME_HDR+0x56e>
   1402f:	ff 10                	call   *(%rax)
   14031:	25 00 00 d0 7e       	and    $0x7ed00000,%eax
   14036:	ff                   	(bad)  
   14037:	ff 24 25 00 00 e0 7e 	jmp    *0x7ee00000
   1403e:	ff                   	(bad)  
   1403f:	ff                   	(bad)  
   14040:	38 25 00 00 f0 7e    	cmp    %ah,0x7ef00000(%rip)        # 7ef14046 <_end+0x7eee9036>
   14046:	ff                   	(bad)  
   14047:	ff 50 25             	call   *0x25(%rax)
   1404a:	00 00                	add    %al,(%rax)
   1404c:	b0 80                	mov    $0x80,%al
   1404e:	ff                   	(bad)  
   1404f:	ff 94 25 00 00 b0 83 	call   *-0x7c500000(%rbp,%riz,1)
   14056:	ff                   	(bad)  
   14057:	ff 04 26             	incl   (%rsi,%riz,1)
   1405a:	00 00                	add    %al,(%rax)
   1405c:	e0 83                	loopne 13fe1 <__GNU_EH_FRAME_HDR+0x521>
   1405e:	ff                   	(bad)  
   1405f:	ff 20                	jmp    *(%rax)
   14061:	26 00 00             	es add %al,(%rax)
   14064:	a0 84 ff ff 5c 26 00 	movabs 0xb00000265cffff84,%al
   1406b:	00 b0 
   1406d:	84 ff                	test   %bh,%bh
   1406f:	ff 70 26             	push   0x26(%rax)
   14072:	00 00                	add    %al,(%rax)
   14074:	70 85                	jo     13ffb <__GNU_EH_FRAME_HDR+0x53b>
   14076:	ff                   	(bad)  
   14077:	ff ac 26 00 00 80 85 	ljmp   *-0x7a800000(%rsi,%riz,1)
   1407e:	ff                   	(bad)  
   1407f:	ff c0                	inc    %eax
   14081:	26 00 00             	es add %al,(%rax)
   14084:	40 86 ff             	xchg   %dil,%dil
   14087:	ff                   	(bad)  
   14088:	fc                   	cld    
   14089:	26 00 00             	es add %al,(%rax)
   1408c:	50                   	push   %rax
   1408d:	86 ff                	xchg   %bh,%bh
   1408f:	ff 10                	call   *(%rax)
   14091:	27                   	(bad)  
   14092:	00 00                	add    %al,(%rax)
   14094:	60                   	(bad)  
   14095:	87 ff                	xchg   %edi,%edi
   14097:	ff 5c 27 00          	lcall  *0x0(%rdi,%riz,1)
   1409b:	00 70 87             	add    %dh,-0x79(%rax)
   1409e:	ff                   	(bad)  
   1409f:	ff 70 27             	push   0x27(%rax)
   140a2:	00 00                	add    %al,(%rax)
   140a4:	50                   	push   %rax
   140a5:	88 ff                	mov    %bh,%bh
   140a7:	ff a4 27 00 00 30 89 	jmp    *-0x76d00000(%rdi,%riz,1)
   140ae:	ff                   	(bad)  
   140af:	ff d0                	call   *%rax
   140b1:	27                   	(bad)  
   140b2:	00 00                	add    %al,(%rax)
   140b4:	20 8a ff ff 14 28    	and    %cl,0x2814ffff(%rdx)
   140ba:	00 00                	add    %al,(%rax)
   140bc:	30 8a ff ff 28 28    	xor    %cl,0x2828ffff(%rdx)
   140c2:	00 00                	add    %al,(%rax)
   140c4:	b0 8a                	mov    $0x8a,%al
   140c6:	ff                   	(bad)  
   140c7:	ff 60 28             	jmp    *0x28(%rax)
   140ca:	00 00                	add    %al,(%rax)
   140cc:	20 8b ff ff 74 28    	and    %cl,0x2874ffff(%rbx)
   140d2:	00 00                	add    %al,(%rax)
   140d4:	40 8c ff             	rex mov %?,%edi
   140d7:	ff a0 28 00 00 d0    	jmp    *-0x2fffffd8(%rax)
   140dd:	8c ff                	mov    %?,%edi
   140df:	ff                   	(bad)  
   140e0:	bc 28 00 00 e0       	mov    $0xe0000028,%esp
   140e5:	8c ff                	mov    %?,%edi
   140e7:	ff d0                	call   *%rax
   140e9:	28 00                	sub    %al,(%rax)
   140eb:	00 10                	add    %dl,(%rax)
   140ed:	95                   	xchg   %eax,%ebp
   140ee:	ff                   	(bad)  
   140ef:	ff 0c 29             	decl   (%rcx,%rbp,1)
   140f2:	00 00                	add    %al,(%rax)
   140f4:	00 96 ff ff 28 29    	add    %dl,0x2928ffff(%rsi)
   140fa:	00 00                	add    %al,(%rax)
   140fc:	50                   	push   %rax
   140fd:	b1 ff                	mov    $0xff,%cl
   140ff:	ff 74 29 00          	push   0x0(%rcx,%rbp,1)
   14103:	00 f0                	add    %dh,%al
   14105:	b3 ff                	mov    $0xff,%bl
   14107:	ff                   	(bad)  
   14108:	d8 29                	fsubrs (%rcx)
   1410a:	00 00                	add    %al,(%rax)
   1410c:	f0 be ff ff 3c 2a    	lock mov $0x2a3cffff,%esi
   14112:	00 00                	add    %al,(%rax)
   14114:	60                   	(bad)  
   14115:	bf ff ff 68 2a       	mov    $0x2a68ffff,%edi
   1411a:	00 00                	add    %al,(%rax)
   1411c:	70 c6                	jo     140e4 <__GNU_EH_FRAME_HDR+0x624>
   1411e:	ff                   	(bad)  
   1411f:	ff d0                	call   *%rax
   14121:	2a 00                	sub    (%rax),%al
   14123:	00 90 c6 ff ff e4    	add    %dl,-0x1b00003a(%rax)
   14129:	2a 00                	sub    (%rax),%al
   1412b:	00 20                	add    %ah,(%rax)
   1412d:	c7                   	(bad)  
   1412e:	ff                   	(bad)  
   1412f:	ff 08                	decl   (%rax)
   14131:	2b 00                	sub    (%rax),%eax
   14133:	00 e0                	add    %ah,%al
   14135:	c8 ff ff 48          	enter  $0xffff,$0x48
   14139:	2b 00                	sub    (%rax),%eax
   1413b:	00 b0 c9 ff ff 5c    	add    %dh,0x5cffffc9(%rax)
   14141:	2b 00                	sub    (%rax),%eax
   14143:	00 d0                	add    %dl,%al
   14145:	c9                   	leave  
   14146:	ff                   	(bad)  
   14147:	ff 70 2b             	push   0x2b(%rax)
   1414a:	00 00                	add    %al,(%rax)
   1414c:	90                   	nop
   1414d:	ca ff ff             	lret   $0xffff
   14150:	ac                   	lods   %ds:(%rsi),%al
   14151:	2b 00                	sub    (%rax),%eax
   14153:	00 80 cb ff ff f8    	add    %al,-0x7000035(%rax)
   14159:	2b 00                	sub    (%rax),%eax
   1415b:	00 a0 cb ff ff 0c    	add    %ah,0xcffffcb(%rax)
   14161:	2c 00                	sub    $0x0,%al
   14163:	00 e0                	add    %ah,%al
   14165:	cc                   	int3   
   14166:	ff                   	(bad)  
   14167:	ff 70 2c             	push   0x2c(%rax)
   1416a:	00 00                	add    %al,(%rax)
   1416c:	e0 cd                	loopne 1413b <__GNU_EH_FRAME_HDR+0x67b>
   1416e:	ff                   	(bad)  
   1416f:	ff b4 2c 00 00 f0 cd 	push   -0x32100000(%rsp,%rbp,1)
   14176:	ff                   	(bad)  
   14177:	ff c8                	dec    %eax
   14179:	2c 00                	sub    $0x0,%al
   1417b:	00 40 ce             	add    %al,-0x32(%rax)
   1417e:	ff                   	(bad)  
   1417f:	ff                   	(bad)  
   14180:	ec                   	in     (%dx),%al
   14181:	2c 00                	sub    $0x0,%al
   14183:	00 90 ce ff ff 24    	add    %dl,0x24ffffce(%rax)
   14189:	2d 00 00 a0 ce       	sub    $0xcea00000,%eax
   1418e:	ff                   	(bad)  
   1418f:	ff                   	(bad)  
   14190:	38 2d 00 00 b0 ce    	cmp    %ch,-0x31500000(%rip)        # ffffffffceb14196 <_end+0xffffffffceae9186>
   14196:	ff                   	(bad)  
   14197:	ff 50 2d             	call   *0x2d(%rax)
   1419a:	00 00                	add    %al,(%rax)
   1419c:	c0 ce ff             	ror    $0xff,%dh
   1419f:	ff 6c 2d 00          	ljmp   *0x0(%rbp,%rbp,1)
   141a3:	00 d0                	add    %dl,%al
   141a5:	ce                   	(bad)  
   141a6:	ff                   	(bad)  
   141a7:	ff 88 2d 00 00 f0    	decl   -0xfffffd3(%rax)
   141ad:	ce                   	(bad)  
   141ae:	ff                   	(bad)  
   141af:	ff a0 2d 00 00 40    	jmp    *0x4000002d(%rax)
   141b5:	cf                   	iret   
   141b6:	ff                   	(bad)  
   141b7:	ff c4                	inc    %esp
   141b9:	2d 00 00 c0 cf       	sub    $0xcfc00000,%eax
   141be:	ff                   	(bad)  
   141bf:	ff 08                	decl   (%rax)
   141c1:	2e 00 00             	cs add %al,(%rax)
   141c4:	50                   	push   %rax
   141c5:	d0 ff                	sar    %bh
   141c7:	ff 50 2e             	call   *0x2e(%rax)
   141ca:	00 00                	add    %al,(%rax)
   141cc:	f0 d0 ff             	lock sar %bh
   141cf:	ff a0 2e 00 00 70    	jmp    *0x7000002e(%rax)
   141d5:	d1 ff                	sar    %edi
   141d7:	ff cc                	dec    %esp
   141d9:	2e 00 00             	cs add %al,(%rax)
   141dc:	20 d3                	and    %dl,%bl
   141de:	ff                   	(bad)  
   141df:	ff                   	(bad)  
   141e0:	f8                   	clc    
   141e1:	2e 00 00             	cs add %al,(%rax)
   141e4:	80 d3 ff             	adc    $0xff,%bl
   141e7:	ff 10                	call   *(%rax)
   141e9:	2f                   	(bad)  
   141ea:	00 00                	add    %al,(%rax)
   141ec:	90                   	nop
   141ed:	d4                   	(bad)  
   141ee:	ff                   	(bad)  
   141ef:	ff                   	(bad)  
   141f0:	3c 2f                	cmp    $0x2f,%al
   141f2:	00 00                	add    %al,(%rax)
   141f4:	a0 d4 ff ff 50 2f 00 	movabs 0xf000002f50ffffd4,%al
   141fb:	00 f0 
   141fd:	d6                   	(bad)  
   141fe:	ff                   	(bad)  
   141ff:	ff 84 2f 00 00 80 d8 	incl   -0x27800000(%rdi,%rbp,1)
   14206:	ff                   	(bad)  
   14207:	ff b4 2f 00 00 40 d9 	push   -0x26c00000(%rdi,%rbp,1)
   1420e:	ff                   	(bad)  
   1420f:	ff 18                	lcall  *(%rax)
   14211:	0c 00                	or     $0x0,%al
   14213:	00 80 dc ff ff 50    	add    %al,0x50ffffdc(%rax)
   14219:	0c 00                	or     $0x0,%al
   1421b:	00 20                	add    %ah,(%rax)
   1421d:	de ff                	fdivrp %st,%st(7)
   1421f:	ff c0                	inc    %eax
   14221:	0c 00                	or     $0x0,%al
   14223:	00 40 de             	add    %al,-0x22(%rax)
   14226:	ff                   	(bad)  
   14227:	ff 60 12             	jmp    *0x12(%rax)
   1422a:	00 00                	add    %al,(%rax)
   1422c:	52                   	push   %rdx
   1422d:	e0 ff                	loopne 1422e <__GNU_EH_FRAME_HDR+0x76e>
   1422f:	ff 30                	push   (%rax)
   14231:	18 00                	sbb    %al,(%rax)
   14233:	00 53 e0             	add    %dl,-0x20(%rbx)
   14236:	ff                   	(bad)  
   14237:	ff 44 18 00          	incl   0x0(%rax,%rbx,1)
   1423b:	00 55 e0             	add    %dl,-0x20(%rbp)
   1423e:	ff                   	(bad)  
   1423f:	ff 58 18             	lcall  *0x18(%rax)
   14242:	00 00                	add    %al,(%rax)
   14244:	57                   	push   %rdi
   14245:	e0 ff                	loopne 14246 <__GNU_EH_FRAME_HDR+0x786>
   14247:	ff 6c 18 00          	ljmp   *0x0(%rax,%rbx,1)
   1424b:	00 59 e0             	add    %bl,-0x20(%rcx)
   1424e:	ff                   	(bad)  
   1424f:	ff 80 18 00 00 5b    	incl   0x5b000018(%rax)
   14255:	e0 ff                	loopne 14256 <__GNU_EH_FRAME_HDR+0x796>
   14257:	ff 94 18 00 00 5d e0 	call   *-0x1fa30000(%rax,%rbx,1)
   1425e:	ff                   	(bad)  
   1425f:	ff a8 18 00 00 5f    	ljmp   *0x5f000018(%rax)
   14265:	e0 ff                	loopne 14266 <__GNU_EH_FRAME_HDR+0x7a6>
   14267:	ff                   	(bad)  
   14268:	bc 18 00 00 61       	mov    $0x61000018,%esp
   1426d:	e0 ff                	loopne 1426e <__GNU_EH_FRAME_HDR+0x7ae>
   1426f:	ff d0                	call   *%rax
   14271:	18 00                	sbb    %al,(%rax)
   14273:	00 64 e0 ff          	add    %ah,-0x1(%rax,%riz,8)
   14277:	ff e4                	jmp    *%rsp
   14279:	18 00                	sbb    %al,(%rax)
   1427b:	00 67 e0             	add    %ah,-0x20(%rdi)
   1427e:	ff                   	(bad)  
   1427f:	ff                   	(bad)  
   14280:	f8                   	clc    
   14281:	18 00                	sbb    %al,(%rax)
   14283:	00 6a e0             	add    %ch,-0x20(%rdx)
   14286:	ff                   	(bad)  
   14287:	ff 0c 19             	decl   (%rcx,%rbx,1)
   1428a:	00 00                	add    %al,(%rax)
   1428c:	6d                   	insl   (%dx),%es:(%rdi)
   1428d:	e0 ff                	loopne 1428e <__GNU_EH_FRAME_HDR+0x7ce>
   1428f:	ff 20                	jmp    *(%rax)
   14291:	19 00                	sbb    %eax,(%rax)
   14293:	00 70 e0             	add    %dh,-0x20(%rax)
   14296:	ff                   	(bad)  
   14297:	ff 34 19             	push   (%rcx,%rbx,1)
   1429a:	00 00                	add    %al,(%rax)
   1429c:	73 e0                	jae    1427e <__GNU_EH_FRAME_HDR+0x7be>
   1429e:	ff                   	(bad)  
   1429f:	ff 48 19             	decl   0x19(%rax)
   142a2:	00 00                	add    %al,(%rax)
   142a4:	76 e0                	jbe    14286 <__GNU_EH_FRAME_HDR+0x7c6>
   142a6:	ff                   	(bad)  
   142a7:	ff 5c 19 00          	lcall  *0x0(%rcx,%rbx,1)
   142ab:	00 a3 e4 ff ff 90    	add    %ah,-0x6f00001c(%rbx)
   142b1:	19 00                	sbb    %eax,(%rax)
   142b3:	00 23                	add    %ah,(%rbx)
   142b5:	e7 ff                	out    %eax,$0xff
   142b7:	ff ac 19 00 00 a4 e7 	ljmp   *-0x185c0000(%rcx,%rbx,1)
   142be:	ff                   	(bad)  
   142bf:	ff c8                	dec    %eax
   142c1:	19 00                	sbb    %eax,(%rax)
   142c3:	00 c4                	add    %al,%ah
   142c5:	e7 ff                	out    %eax,$0xff
   142c7:	ff                   	(bad)  
   142c8:	dc 19                	fcompl (%rcx)
   142ca:	00 00                	add    %al,(%rax)
   142cc:	e3 e7                	jrcxz  142b5 <__GNU_EH_FRAME_HDR+0x7f5>
   142ce:	ff                   	(bad)  
   142cf:	ff f0                	push   %rax
   142d1:	19 00                	sbb    %eax,(%rax)
   142d3:	00 03                	add    %al,(%rbx)
   142d5:	e8 ff ff 04 1a       	call   1a0642d9 <_end+0x1a0392c9>
   142da:	00 00                	add    %al,(%rax)
   142dc:	21 e8                	and    %ebp,%eax
   142de:	ff                   	(bad)  
   142df:	ff 18                	lcall  *(%rax)
   142e1:	1a 00                	sbb    (%rax),%al
   142e3:	00 3f                	add    %bh,(%rdi)
   142e5:	e8 ff ff 2c 1a       	call   1a2e42e9 <_end+0x1a2b92d9>
	...

Disassembly of section .eh_frame:

00000000000142f0 <.eh_frame>:
   142f0:	14 00                	adc    $0x0,%al
   142f2:	00 00                	add    %al,(%rax)
   142f4:	00 00                	add    %al,(%rax)
   142f6:	00 00                	add    %al,(%rax)
   142f8:	01 7a 52             	add    %edi,0x52(%rdx)
   142fb:	00 01                	add    %al,(%rcx)
   142fd:	78 10                	js     1430f <__GNU_EH_FRAME_HDR+0x84f>
   142ff:	01 1b                	add    %ebx,(%rbx)
   14301:	0c 07                	or     $0x7,%al
   14303:	08 90 01 00 00 18    	or     %dl,0x18000001(%rax)
   14309:	00 00                	add    %al,(%rax)
   1430b:	00 1c 00             	add    %bl,(%rax,%rax,1)
   1430e:	00 00                	add    %al,(%rax)
   14310:	53                   	push   %rbx
   14311:	dd fe                	(bad)  
   14313:	ff 5c 00 00          	lcall  *0x0(%rax,%rax,1)
   14317:	00 00                	add    %al,(%rax)
   14319:	45 0e                	rex.RB (bad) 
   1431b:	10 83 02 02 56 0e    	adc    %al,0xe560202(%rbx)
   14321:	08 00                	or     %al,(%rax)
   14323:	00 10                	add    %dl,(%rax)
   14325:	00 00                	add    %al,(%rax)
   14327:	00 38                	add    %bh,(%rax)
   14329:	00 00                	add    %al,(%rax)
   1432b:	00 93 dd fe ff 1d    	add    %dl,0x1dfffedd(%rbx)
   14331:	00 00                	add    %al,(%rax)
   14333:	00 00                	add    %al,(%rax)
   14335:	00 00                	add    %al,(%rax)
   14337:	00 14 00             	add    %dl,(%rax,%rax,1)
   1433a:	00 00                	add    %al,(%rax)
   1433c:	4c 00 00             	rex.WR add %r8b,(%rax)
   1433f:	00 9c dd fe ff 36 00 	add    %bl,0x36fffe(%rbp,%rbx,8)
   14346:	00 00                	add    %al,(%rax)
   14348:	00 45 0e             	add    %al,0xe(%rbp)
   1434b:	10 6c 0e 08          	adc    %ch,0x8(%rsi,%rcx,1)
   1434f:	00 14 00             	add    %dl,(%rax,%rax,1)
   14352:	00 00                	add    %al,(%rax)
   14354:	64 00 00             	add    %al,%fs:(%rax)
   14357:	00 ba dd fe ff 23    	add    %bh,0x23fffedd(%rdx)
	...
   14365:	00 00                	add    %al,(%rax)
   14367:	00 24 00             	add    %ah,(%rax,%rax,1)
   1436a:	00 00                	add    %al,(%rax)
   1436c:	7c 00                	jl     1436e <__GNU_EH_FRAME_HDR+0x8ae>
   1436e:	00 00                	add    %al,(%rax)
   14370:	90                   	nop
   14371:	cc                   	int3   
   14372:	fe                   	(bad)  
   14373:	ff 10                	call   *(%rax)
   14375:	00 00                	add    %al,(%rax)
   14377:	00 00                	add    %al,(%rax)
   14379:	0e                   	(bad)  
   1437a:	10 46 0e             	adc    %al,0xe(%rsi)
   1437d:	18 4a 0f             	sbb    %cl,0xf(%rdx)
   14380:	0b 77 08             	or     0x8(%rdi),%esi
   14383:	80 00 3f             	addb   $0x3f,(%rax)
   14386:	1a 3b                	sbb    (%rbx),%bh
   14388:	2a 33                	sub    (%rbx),%dh
   1438a:	24 22                	and    $0x22,%al
   1438c:	00 00                	add    %al,(%rax)
   1438e:	00 00                	add    %al,(%rax)
   14390:	14 00                	adc    $0x0,%al
   14392:	00 00                	add    %al,(%rax)
   14394:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
   14395:	00 00                	add    %al,(%rax)
   14397:	00 78 cc             	add    %bh,-0x34(%rax)
   1439a:	fe                   	(bad)  
   1439b:	ff 10                	call   *(%rax)
	...
   143a5:	00 00                	add    %al,(%rax)
   143a7:	00 14 00             	add    %dl,(%rax,%rax,1)
   143aa:	00 00                	add    %al,(%rax)
   143ac:	bc 00 00 00 56       	mov    $0x56000000,%esp
   143b1:	fc                   	cld    
   143b2:	fe                   	(bad)  
   143b3:	ff 19                	lcall  *(%rcx)
   143b5:	00 00                	add    %al,(%rax)
   143b7:	00 00                	add    %al,(%rax)
   143b9:	4a 0e                	rex.WX (bad) 
   143bb:	10 48 0e             	adc    %cl,0xe(%rax)
   143be:	08 00                	or     %al,(%rax)
   143c0:	20 00                	and    %al,(%rax)
   143c2:	00 00                	add    %al,(%rax)
   143c4:	d4                   	(bad)  
   143c5:	00 00                	add    %al,(%rax)
   143c7:	00 57 fc             	add    %dl,-0x4(%rdi)
   143ca:	fe                   	(bad)  
   143cb:	ff 62 00             	jmp    *0x0(%rdx)
   143ce:	00 00                	add    %al,(%rax)
   143d0:	00 4a 0e             	add    %cl,0xe(%rdx)
   143d3:	10 83 02 4c 0e 20    	adc    %al,0x200e4c02(%rbx)
   143d9:	02 44 0e 10          	add    0x10(%rsi,%rcx,1),%al
   143dd:	41 0e                	rex.B (bad) 
   143df:	08 41 c3             	or     %al,-0x3d(%rcx)
   143e2:	00 00                	add    %al,(%rax)
   143e4:	20 00                	and    %al,(%rax)
   143e6:	00 00                	add    %al,(%rax)
   143e8:	f8                   	clc    
   143e9:	00 00                	add    %al,(%rax)
   143eb:	00 95 fc fe ff 66    	add    %dl,0x66fffefc(%rbp)
   143f1:	00 00                	add    %al,(%rax)
   143f3:	00 00                	add    %al,(%rax)
   143f5:	4a 0e                	rex.WX (bad) 
   143f7:	10 83 02 4c 0e 20    	adc    %al,0x200e4c02(%rbx)
   143fd:	02 48 0e             	add    0xe(%rax),%cl
   14400:	10 41 0e             	adc    %al,0xe(%rcx)
   14403:	08 41 c3             	or     %al,-0x3d(%rcx)
   14406:	00 00                	add    %al,(%rax)
   14408:	20 00                	and    %al,(%rax)
   1440a:	00 00                	add    %al,(%rax)
   1440c:	1c 01                	sbb    $0x1,%al
   1440e:	00 00                	add    %al,(%rax)
   14410:	d7                   	xlat   %ds:(%rbx)
   14411:	fc                   	cld    
   14412:	fe                   	(bad)  
   14413:	ff 63 00             	jmp    *0x0(%rbx)
   14416:	00 00                	add    %al,(%rax)
   14418:	00 4a 0e             	add    %cl,0xe(%rdx)
   1441b:	10 83 02 4c 0e 20    	adc    %al,0x200e4c02(%rbx)
   14421:	02 45 0e             	add    0xe(%rbp),%al
   14424:	10 41 0e             	adc    %al,0xe(%rcx)
   14427:	08 41 c3             	or     %al,-0x3d(%rcx)
   1442a:	00 00                	add    %al,(%rax)
   1442c:	34 00                	xor    $0x0,%al
   1442e:	00 00                	add    %al,(%rax)
   14430:	40 01 00             	rex add %eax,(%rax)
   14433:	00 16                	add    %dl,(%rsi)
   14435:	fd                   	std    
   14436:	fe                   	(bad)  
   14437:	ff                   	(bad)  
   14438:	e9 00 00 00 00       	jmp    1443d <__GNU_EH_FRAME_HDR+0x97d>
   1443d:	46 0e                	rex.RX (bad) 
   1443f:	10 8d 02 42 0e 18    	adc    %cl,0x180e4202(%rbp)
   14445:	8c 03                	mov    %es,(%rbx)
   14447:	41 0e                	rex.B (bad) 
   14449:	20 86 04 43 0e 28    	and    %al,0x280e4304(%rsi)
   1444f:	83 05 47 0e 50 02 cf 	addl   $0xffffffcf,0x2500e47(%rip)        # 251529d <_end+0x24ea28d>
   14456:	0e                   	(bad)  
   14457:	28 41 0e             	sub    %al,0xe(%rcx)
   1445a:	20 41 0e             	and    %al,0xe(%rcx)
   1445d:	18 42 0e             	sbb    %al,0xe(%rdx)
   14460:	10 42 0e             	adc    %al,0xe(%rdx)
   14463:	08 38                	or     %bh,(%rax)
   14465:	00 00                	add    %al,(%rax)
   14467:	00 78 01             	add    %bh,0x1(%rax)
   1446a:	00 00                	add    %al,(%rax)
   1446c:	c7                   	(bad)  
   1446d:	fd                   	std    
   1446e:	fe                   	(bad)  
   1446f:	ff 11                	call   *(%rcx)
   14471:	01 00                	add    %eax,(%rax)
   14473:	00 00                	add    %al,(%rax)
   14475:	46 0e                	rex.RX (bad) 
   14477:	10 8d 02 42 0e 18    	adc    %cl,0x180e4202(%rbp)
   1447d:	8c 03                	mov    %es,(%rbx)
   1447f:	44 0e                	rex.R (bad) 
   14481:	20 86 04 41 0e 28    	and    %al,0x280e4104(%rsi)
   14487:	83 05 47 0e 50 02 f6 	addl   $0xfffffff6,0x2500e47(%rip)        # 25152d5 <_end+0x24ea2c5>
   1448e:	0e                   	(bad)  
   1448f:	28 41 0e             	sub    %al,0xe(%rcx)
   14492:	20 41 0e             	and    %al,0xe(%rcx)
   14495:	18 42 0e             	sbb    %al,0xe(%rdx)
   14498:	10 42 0e             	adc    %al,0xe(%rdx)
   1449b:	08 00                	or     %al,(%rax)
   1449d:	00 00                	add    %al,(%rax)
   1449f:	00 10                	add    %dl,(%rax)
   144a1:	00 00                	add    %al,(%rax)
   144a3:	00 b4 01 00 00 a8 fe 	add    %dh,-0x1580000(%rcx,%rax,1)
   144aa:	fe                   	(bad)  
   144ab:	ff 94 00 00 00 00 00 	call   *0x0(%rax,%rax,1)
   144b2:	00 00                	add    %al,(%rax)
   144b4:	30 00                	xor    %al,(%rax)
   144b6:	00 00                	add    %al,(%rax)
   144b8:	c8 01 00 00          	enter  $0x1,$0x0
   144bc:	34 ff                	xor    $0xff,%al
   144be:	fe                   	(bad)  
   144bf:	ff 50 11             	call   *0x11(%rax)
   144c2:	00 00                	add    %al,(%rax)
   144c4:	00 45 0e             	add    %al,0xe(%rbp)
   144c7:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
   144cd:	54                   	push   %rsp
   144ce:	8f 03                	pop    (%rbx)
   144d0:	8e 04 8d 05 8c 06 83 	mov    -0x7cf973fb(,%rcx,4),%es
   144d7:	07                   	(bad)  
   144d8:	03 30                	add    (%rax),%esi
   144da:	10 0a                	adc    %cl,(%rdx)
   144dc:	0c 07                	or     $0x7,%al
   144de:	08 44 0b 00          	or     %al,0x0(%rbx,%rcx,1)
   144e2:	00 00                	add    %al,(%rax)
   144e4:	00 00                	add    %al,(%rax)
   144e6:	00 00                	add    %al,(%rax)
   144e8:	6c                   	insb   (%dx),%es:(%rdi)
   144e9:	00 00                	add    %al,(%rax)
   144eb:	00 fc                	add    %bh,%ah
   144ed:	01 00                	add    %eax,(%rax)
   144ef:	00 50 10             	add    %dl,0x10(%rax)
   144f2:	ff                   	(bad)  
   144f3:	ff 03                	incl   (%rbx)
   144f5:	02 00                	add    (%rax),%al
   144f7:	00 00                	add    %al,(%rax)
   144f9:	4b 0e                	rex.WXB (bad) 
   144fb:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   14501:	8e 03                	mov    (%rbx),%es
   14503:	45 0e                	rex.RB (bad) 
   14505:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
   1450b:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff86315352 <_end+0xffffffff862ea342>
   14511:	06                   	(bad)  
   14512:	41 0e                	rex.B (bad) 
   14514:	38 83 07 47 0e 40    	cmp    %al,0x400e4707(%rbx)
   1451a:	02 a1 0a 0e 38 43    	add    0x43380e0a(%rcx),%ah
   14520:	0e                   	(bad)  
   14521:	30 41 0e             	xor    %al,0xe(%rcx)
   14524:	28 42 0e             	sub    %al,0xe(%rdx)
   14527:	20 42 0e             	and    %al,0xe(%rdx)
   1452a:	18 42 0e             	sbb    %al,0xe(%rdx)
   1452d:	10 42 0e             	adc    %al,0xe(%rdx)
   14530:	08 43 0b             	or     %al,0xb(%rbx)
   14533:	65 0a 0e             	or     %gs:(%rsi),%cl
   14536:	38 41 0e             	cmp    %al,0xe(%rcx)
   14539:	30 41 0e             	xor    %al,0xe(%rcx)
   1453c:	28 42 0e             	sub    %al,0xe(%rdx)
   1453f:	20 42 0e             	and    %al,0xe(%rdx)
   14542:	18 42 0e             	sbb    %al,0xe(%rdx)
   14545:	10 42 0e             	adc    %al,0xe(%rdx)
   14548:	08 41 0b             	or     %al,0xb(%rcx)
   1454b:	03 00                	add    (%rax),%eax
   1454d:	01 0e                	add    %ecx,(%rsi)
   1454f:	08 c3                	or     %al,%bl
   14551:	c6                   	(bad)  
   14552:	cc                   	int3   
   14553:	cd ce                	int    $0xce
   14555:	cf                   	iret   
   14556:	00 00                	add    %al,(%rax)
   14558:	34 00                	xor    $0x0,%al
   1455a:	00 00                	add    %al,(%rax)
   1455c:	6c                   	insb   (%dx),%es:(%rdi)
   1455d:	02 00                	add    (%rax),%al
   1455f:	00 f0                	add    %dh,%al
   14561:	11 ff                	adc    %edi,%edi
   14563:	ff 33                	push   (%rbx)
   14565:	00 00                	add    %al,(%rax)
   14567:	00 00                	add    %al,(%rax)
   14569:	45 0e                	rex.RB (bad) 
   1456b:	10 86 02 44 0e 18    	adc    %al,0x180e4402(%rsi)
   14571:	83 03 47             	addl   $0x47,(%rbx)
   14574:	0e                   	(bad)  
   14575:	20 4d 0a             	and    %cl,0xa(%rbp)
   14578:	0e                   	(bad)  
   14579:	18 41 0e             	sbb    %al,0xe(%rcx)
   1457c:	10 41 0e             	adc    %al,0xe(%rcx)
   1457f:	08 41 0b             	or     %al,0xb(%rcx)
   14582:	44 0e                	rex.R (bad) 
   14584:	18 49 0e             	sbb    %cl,0xe(%rcx)
   14587:	10 41 0e             	adc    %al,0xe(%rcx)
   1458a:	08 00                	or     %al,(%rax)
   1458c:	00 00                	add    %al,(%rax)
   1458e:	00 00                	add    %al,(%rax)
   14590:	48 00 00             	rex.W add %al,(%rax)
   14593:	00 a4 02 00 00 f8 11 	add    %ah,0x11f80000(%rdx,%rax,1)
   1459a:	ff                   	(bad)  
   1459b:	ff 85 00 00 00 00    	incl   0x0(%rbp)
   145a1:	46 0e                	rex.RX (bad) 
   145a3:	10 8e 02 45 0e 18    	adc    %cl,0x180e4502(%rsi)
   145a9:	8d 03                	lea    (%rbx),%eax
   145ab:	4a 0e                	rex.WX (bad) 
   145ad:	20 8c 04 44 0e 28 86 	and    %cl,-0x79d7f1bc(%rsp,%rax,1)
   145b4:	05 43 0e 30 83       	add    $0x83300e43,%eax
   145b9:	06                   	(bad)  
   145ba:	78 0a                	js     145c6 <__GNU_EH_FRAME_HDR+0xb06>
   145bc:	0e                   	(bad)  
   145bd:	28 43 0e             	sub    %al,0xe(%rbx)
   145c0:	20 42 0e             	and    %al,0xe(%rdx)
   145c3:	18 42 0e             	sbb    %al,0xe(%rdx)
   145c6:	10 42 0e             	adc    %al,0xe(%rdx)
   145c9:	08 43 0b             	or     %al,0xb(%rbx)
   145cc:	5b                   	pop    %rbx
   145cd:	0e                   	(bad)  
   145ce:	28 43 0e             	sub    %al,0xe(%rbx)
   145d1:	20 42 0e             	and    %al,0xe(%rdx)
   145d4:	18 42 0e             	sbb    %al,0xe(%rdx)
   145d7:	10 42 0e             	adc    %al,0xe(%rdx)
   145da:	08 00                	or     %al,(%rax)
   145dc:	48 00 00             	rex.W add %al,(%rax)
   145df:	00 f0                	add    %dh,%al
   145e1:	02 00                	add    (%rax),%al
   145e3:	00 3c 12             	add    %bh,(%rdx,%rdx,1)
   145e6:	ff                   	(bad)  
   145e7:	ff 85 00 00 00 00    	incl   0x0(%rbp)
   145ed:	46 0e                	rex.RX (bad) 
   145ef:	10 8e 02 45 0e 18    	adc    %cl,0x180e4502(%rsi)
   145f5:	8d 03                	lea    (%rbx),%eax
   145f7:	4a 0e                	rex.WX (bad) 
   145f9:	20 8c 04 44 0e 28 86 	and    %cl,-0x79d7f1bc(%rsp,%rax,1)
   14600:	05 43 0e 30 83       	add    $0x83300e43,%eax
   14605:	06                   	(bad)  
   14606:	78 0a                	js     14612 <__GNU_EH_FRAME_HDR+0xb52>
   14608:	0e                   	(bad)  
   14609:	28 43 0e             	sub    %al,0xe(%rbx)
   1460c:	20 42 0e             	and    %al,0xe(%rdx)
   1460f:	18 42 0e             	sbb    %al,0xe(%rdx)
   14612:	10 42 0e             	adc    %al,0xe(%rdx)
   14615:	08 43 0b             	or     %al,0xb(%rbx)
   14618:	5b                   	pop    %rbx
   14619:	0e                   	(bad)  
   1461a:	28 43 0e             	sub    %al,0xe(%rbx)
   1461d:	20 42 0e             	and    %al,0xe(%rdx)
   14620:	18 42 0e             	sbb    %al,0xe(%rdx)
   14623:	10 42 0e             	adc    %al,0xe(%rdx)
   14626:	08 00                	or     %al,(%rax)
   14628:	10 00                	adc    %al,(%rax)
   1462a:	00 00                	add    %al,(%rax)
   1462c:	3c 03                	cmp    $0x3,%al
   1462e:	00 00                	add    %al,(%rax)
   14630:	80 12 ff             	adcb   $0xff,(%rdx)
   14633:	ff 25 00 00 00 00    	jmp    *0x0(%rip)        # 14639 <__GNU_EH_FRAME_HDR+0xb79>
   14639:	00 00                	add    %al,(%rax)
   1463b:	00 10                	add    %dl,(%rax)
   1463d:	00 00                	add    %al,(%rax)
   1463f:	00 50 03             	add    %dl,0x3(%rax)
   14642:	00 00                	add    %al,(%rax)
   14644:	9c                   	pushf  
   14645:	12 ff                	adc    %bh,%bh
   14647:	ff 21                	jmp    *(%rcx)
   14649:	00 00                	add    %al,(%rax)
   1464b:	00 00                	add    %al,(%rax)
   1464d:	00 00                	add    %al,(%rax)
   1464f:	00 14 00             	add    %dl,(%rax,%rax,1)
   14652:	00 00                	add    %al,(%rax)
   14654:	64 03 00             	add    %fs:(%rax),%eax
   14657:	00 b8 12 ff ff 32    	add    %bh,0x32ffff12(%rax)
   1465d:	00 00                	add    %al,(%rax)
   1465f:	00 00                	add    %al,(%rax)
   14661:	48 0e                	rex.W (bad) 
   14663:	10 69 0e             	adc    %ch,0xe(%rcx)
   14666:	08 00                	or     %al,(%rax)
   14668:	18 00                	sbb    %al,(%rax)
   1466a:	00 00                	add    %al,(%rax)
   1466c:	7c 03                	jl     14671 <__GNU_EH_FRAME_HDR+0xbb1>
   1466e:	00 00                	add    %al,(%rax)
   14670:	e0 12                	loopne 14684 <__GNU_EH_FRAME_HDR+0xbc4>
   14672:	ff                   	(bad)  
   14673:	ff 1e                	lcall  *(%rsi)
   14675:	00 00                	add    %al,(%rax)
   14677:	00 00                	add    %al,(%rax)
   14679:	45 0e                	rex.RB (bad) 
   1467b:	10 83 02 58 0e 08    	adc    %al,0x80e5802(%rbx)
   14681:	00 00                	add    %al,(%rax)
   14683:	00 10                	add    %dl,(%rax)
   14685:	00 00                	add    %al,(%rax)
   14687:	00 98 03 00 00 e4    	add    %bl,-0x1bfffffd(%rax)
   1468d:	12 ff                	adc    %bh,%bh
   1468f:	ff 09                	decl   (%rcx)
   14691:	00 00                	add    %al,(%rax)
   14693:	00 00                	add    %al,(%rax)
   14695:	00 00                	add    %al,(%rax)
   14697:	00 24 00             	add    %ah,(%rax,%rax,1)
   1469a:	00 00                	add    %al,(%rax)
   1469c:	ac                   	lods   %ds:(%rsi),%al
   1469d:	03 00                	add    (%rax),%eax
   1469f:	00 e0                	add    %ah,%al
   146a1:	12 ff                	adc    %bh,%bh
   146a3:	ff 25 00 00 00 00    	jmp    *0x0(%rip)        # 146a9 <__GNU_EH_FRAME_HDR+0xbe9>
   146a9:	45 0e                	rex.RB (bad) 
   146ab:	10 86 02 41 0e 18    	adc    %al,0x180e4102(%rsi)
   146b1:	83 03 47             	addl   $0x47,(%rbx)
   146b4:	0e                   	(bad)  
   146b5:	20 53 0e             	and    %dl,0xe(%rbx)
   146b8:	18 43 0e             	sbb    %al,0xe(%rbx)
   146bb:	10 41 0e             	adc    %al,0xe(%rcx)
   146be:	08 00                	or     %al,(%rax)
   146c0:	14 00                	adc    $0x0,%al
   146c2:	00 00                	add    %al,(%rax)
   146c4:	d4                   	(bad)  
   146c5:	03 00                	add    (%rax),%eax
   146c7:	00 e8                	add    %ch,%al
   146c9:	12 ff                	adc    %bh,%bh
   146cb:	ff 17                	call   *(%rdi)
   146cd:	00 00                	add    %al,(%rax)
   146cf:	00 00                	add    %al,(%rax)
   146d1:	48 0e                	rex.W (bad) 
   146d3:	10 4e 0e             	adc    %cl,0xe(%rsi)
   146d6:	08 00                	or     %al,(%rax)
   146d8:	34 00                	xor    $0x0,%al
   146da:	00 00                	add    %al,(%rax)
   146dc:	ec                   	in     (%dx),%al
   146dd:	03 00                	add    (%rax),%eax
   146df:	00 20                	add    %ah,(%rax)
   146e1:	cd ff                	int    $0xff
   146e3:	ff 31                	push   (%rcx)
   146e5:	03 00                	add    (%rax),%eax
   146e7:	00 00                	add    %al,(%rax)
   146e9:	46 0e                	rex.RX (bad) 
   146eb:	10 8c 02 41 0e 18 86 	adc    %cl,-0x79e7f1bf(%rdx,%rax,1)
   146f2:	03 41 0e             	add    0xe(%rcx),%eax
   146f5:	20 83 04 47 0e e0    	and    %al,-0x1ff1b8fc(%rbx)
   146fb:	01 03                	add    %eax,(%rbx)
   146fd:	c7 02 0a 0e 20 41    	movl   $0x41200e0a,(%rdx)
   14703:	0e                   	(bad)  
   14704:	18 41 0e             	sbb    %al,0xe(%rcx)
   14707:	10 42 0e             	adc    %al,0xe(%rdx)
   1470a:	08 46 0b             	or     %al,0xb(%rsi)
   1470d:	00 00                	add    %al,(%rax)
   1470f:	00 2c 00             	add    %ch,(%rax,%rax,1)
   14712:	00 00                	add    %al,(%rax)
   14714:	24 04                	and    $0x4,%al
   14716:	00 00                	add    %al,(%rax)
   14718:	28 d0                	sub    %dl,%al
   1471a:	ff                   	(bad)  
   1471b:	ff 99 01 00 00 00    	lcall  *0x1(%rcx)
   14721:	46 0e                	rex.RX (bad) 
   14723:	10 8c 02 44 0e 18 86 	adc    %cl,-0x79e7f1bc(%rdx,%rax,1)
   1472a:	03 44 0e 20          	add    0x20(%rsi,%rcx,1),%eax
   1472e:	83 04 59 0a          	addl   $0xa,(%rcx,%rbx,2)
   14732:	0e                   	(bad)  
   14733:	18 41 0e             	sbb    %al,0xe(%rcx)
   14736:	10 42 0e             	adc    %al,0xe(%rdx)
   14739:	08 46 0b             	or     %al,0xb(%rsi)
   1473c:	00 00                	add    %al,(%rax)
   1473e:	00 00                	add    %al,(%rax)
   14740:	3c 00                	cmp    $0x0,%al
   14742:	00 00                	add    %al,(%rax)
   14744:	54                   	push   %rsp
   14745:	04 00                	add    $0x0,%al
   14747:	00 88 12 ff ff 19    	add    %cl,0x19ffff12(%rax)
   1474d:	01 00                	add    %eax,(%rax)
   1474f:	00 00                	add    %al,(%rax)
   14751:	46 0e                	rex.RX (bad) 
   14753:	10 8c 02 44 0e 18 86 	adc    %cl,-0x79e7f1bc(%rdx,%rax,1)
   1475a:	03 44 0e 20          	add    0x20(%rsi,%rcx,1),%eax
   1475e:	83 04 02 cc          	addl   $0xffffffcc,(%rdx,%rax,1)
   14762:	0a 0e                	or     (%rsi),%cl
   14764:	18 41 0e             	sbb    %al,0xe(%rcx)
   14767:	10 44 0e 08          	adc    %al,0x8(%rsi,%rcx,1)
   1476b:	49 0b 4e 0a          	or     0xa(%r14),%rcx
   1476f:	0e                   	(bad)  
   14770:	18 46 0e             	sbb    %al,0xe(%rsi)
   14773:	10 42 0e             	adc    %al,0xe(%rdx)
   14776:	08 42 0b             	or     %al,0xb(%rdx)
   14779:	00 00                	add    %al,(%rax)
   1477b:	00 00                	add    %al,(%rax)
   1477d:	00 00                	add    %al,(%rax)
   1477f:	00 14 00             	add    %dl,(%rax,%rax,1)
   14782:	00 00                	add    %al,(%rax)
   14784:	94                   	xchg   %eax,%esp
   14785:	04 00                	add    $0x0,%al
   14787:	00 58 d1             	add    %bl,-0x2f(%rax)
   1478a:	ff                   	(bad)  
   1478b:	ff 1b                	lcall  *(%rbx)
   1478d:	00 00                	add    %al,(%rax)
   1478f:	00 00                	add    %al,(%rax)
   14791:	48 0e                	rex.W (bad) 
   14793:	10 4f 0e             	adc    %cl,0xe(%rdi)
   14796:	08 00                	or     %al,(%rax)
   14798:	10 00                	adc    %al,(%rax)
   1479a:	00 00                	add    %al,(%rax)
   1479c:	ac                   	lods   %ds:(%rsi),%al
   1479d:	04 00                	add    $0x0,%al
   1479f:	00 60 d8             	add    %ah,-0x28(%rax)
   147a2:	fe                   	(bad)  
   147a3:	ff 0f                	decl   (%rdi)
   147a5:	00 00                	add    %al,(%rax)
   147a7:	00 00                	add    %al,(%rax)
   147a9:	00 00                	add    %al,(%rax)
   147ab:	00 10                	add    %dl,(%rax)
   147ad:	00 00                	add    %al,(%rax)
   147af:	00 c0                	add    %al,%al
   147b1:	04 00                	add    $0x0,%al
   147b3:	00 3c 13             	add    %bh,(%rbx,%rdx,1)
   147b6:	ff                   	(bad)  
   147b7:	ff 52 00             	call   *0x0(%rdx)
   147ba:	00 00                	add    %al,(%rax)
   147bc:	00 00                	add    %al,(%rax)
   147be:	00 00                	add    %al,(%rax)
   147c0:	10 00                	adc    %al,(%rax)
   147c2:	00 00                	add    %al,(%rax)
   147c4:	d4                   	(bad)  
   147c5:	04 00                	add    $0x0,%al
   147c7:	00 88 13 ff ff 53    	add    %cl,0x53ffff13(%rax)
   147cd:	00 00                	add    %al,(%rax)
   147cf:	00 00                	add    %al,(%rax)
   147d1:	00 00                	add    %al,(%rax)
   147d3:	00 1c 00             	add    %bl,(%rax,%rax,1)
   147d6:	00 00                	add    %al,(%rax)
   147d8:	e8 04 00 00 d4       	call   ffffffffd40147e1 <_end+0xffffffffd3fe97d1>
   147dd:	13 ff                	adc    %edi,%edi
   147df:	ff d7                	call   *%rdi
   147e1:	00 00                	add    %al,(%rax)
   147e3:	00 00                	add    %al,(%rax)
   147e5:	45 0e                	rex.RB (bad) 
   147e7:	10 83 02 47 0e 20    	adc    %al,0x200e4702(%rbx)
   147ed:	02 c6                	add    %dh,%al
   147ef:	0e                   	(bad)  
   147f0:	10 44 0e 08          	adc    %al,0x8(%rsi,%rcx,1)
   147f4:	14 00                	adc    $0x0,%al
   147f6:	00 00                	add    %al,(%rax)
   147f8:	08 05 00 00 94 14    	or     %al,0x14940000(%rip)        # 149547fe <_end+0x149297ee>
   147fe:	ff                   	(bad)  
   147ff:	ff 5c 00 00          	lcall  *0x0(%rax,%rax,1)
   14803:	00 00                	add    %al,(%rax)
   14805:	48 0e                	rex.W (bad) 
   14807:	10 02                	adc    %al,(%rdx)
   14809:	53                   	push   %rbx
   1480a:	0e                   	(bad)  
   1480b:	08 38                	or     %bh,(%rax)
   1480d:	00 00                	add    %al,(%rax)
   1480f:	00 20                	add    %ah,(%rax)
   14811:	05 00 00 dc 14       	add    $0x14dc0000,%eax
   14816:	ff                   	(bad)  
   14817:	ff 2f                	ljmp   *(%rdi)
   14819:	01 00                	add    %eax,(%rax)
   1481b:	00 00                	add    %al,(%rax)
   1481d:	46 0e                	rex.RX (bad) 
   1481f:	10 8d 02 42 0e 18    	adc    %cl,0x180e4202(%rbp)
   14825:	8c 03                	mov    %es,(%rbx)
   14827:	41 0e                	rex.B (bad) 
   14829:	20 86 04 41 0e 28    	and    %al,0x280e4104(%rsi)
   1482f:	83 05 44 0e 40 02 8a 	addl   $0xffffff8a,0x2400e44(%rip)        # 241567a <_end+0x23ea66a>
   14836:	0a 0e                	or     (%rsi),%cl
   14838:	28 43 0e             	sub    %al,0xe(%rbx)
   1483b:	20 41 0e             	and    %al,0xe(%rcx)
   1483e:	18 42 0e             	sbb    %al,0xe(%rdx)
   14841:	10 42 0e             	adc    %al,0xe(%rdx)
   14844:	08 48 0b             	or     %cl,0xb(%rax)
   14847:	00 10                	add    %dl,(%rax)
   14849:	00 00                	add    %al,(%rax)
   1484b:	00 5c 05 00          	add    %bl,0x0(%rbp,%rax,1)
   1484f:	00 d0                	add    %dl,%al
   14851:	15 ff ff 1e 00       	adc    $0x1effff,%eax
   14856:	00 00                	add    %al,(%rax)
   14858:	00 00                	add    %al,(%rax)
   1485a:	00 00                	add    %al,(%rax)
   1485c:	18 00                	sbb    %al,(%rax)
   1485e:	00 00                	add    %al,(%rax)
   14860:	70 05                	jo     14867 <__GNU_EH_FRAME_HDR+0xda7>
   14862:	00 00                	add    %al,(%rax)
   14864:	dc 15 ff ff 23 00    	fcoml  0x23ffff(%rip)        # 254869 <_end+0x229859>
   1486a:	00 00                	add    %al,(%rax)
   1486c:	00 45 0e             	add    %al,0xe(%rbp)
   1486f:	10 83 02 5d 0e 08    	adc    %al,0x80e5d02(%rbx)
   14875:	00 00                	add    %al,(%rax)
   14877:	00 1c 00             	add    %bl,(%rax,%rax,1)
   1487a:	00 00                	add    %al,(%rax)
   1487c:	8c 05 00 00 f0 15    	mov    %es,0x15f00000(%rip)        # 15f14882 <_end+0x15ee9872>
   14882:	ff                   	(bad)  
   14883:	ff 22                	jmp    *(%rdx)
   14885:	00 00                	add    %al,(%rax)
   14887:	00 00                	add    %al,(%rax)
   14889:	45 0e                	rex.RB (bad) 
   1488b:	10 83 02 5c 0e 08    	adc    %al,0x80e5c02(%rbx)
   14891:	00 00                	add    %al,(%rax)
   14893:	00 00                	add    %al,(%rax)
   14895:	00 00                	add    %al,(%rax)
   14897:	00 38                	add    %bh,(%rax)
   14899:	00 00                	add    %al,(%rax)
   1489b:	00 ac 05 00 00 00 16 	add    %ch,0x16000000(%rbp,%rax,1)
   148a2:	ff                   	(bad)  
   148a3:	ff b7 00 00 00 00    	push   0x0(%rdi)
   148a9:	42 0e                	rex.X (bad) 
   148ab:	10 8d 02 45 0e 18    	adc    %cl,0x180e4502(%rbp)
   148b1:	8c 03                	mov    %es,(%rbx)
   148b3:	41 0e                	rex.B (bad) 
   148b5:	20 86 04 41 0e 28    	and    %al,0x280e4104(%rsi)
   148bb:	83 05 44 0e 30 02 9a 	addl   $0xffffff9a,0x2300e44(%rip)        # 2315706 <_end+0x22ea6f6>
   148c2:	0a 0e                	or     (%rsi),%cl
   148c4:	28 41 0e             	sub    %al,0xe(%rcx)
   148c7:	20 41 0e             	and    %al,0xe(%rcx)
   148ca:	18 42 0e             	sbb    %al,0xe(%rdx)
   148cd:	10 42 0e             	adc    %al,0xe(%rdx)
   148d0:	08 43 0b             	or     %al,0xb(%rbx)
   148d3:	00 54 00 00          	add    %dl,0x0(%rax,%rax,1)
   148d7:	00 e8                	add    %ch,%al
   148d9:	05 00 00 84 16       	add    $0x16840000,%eax
   148de:	ff                   	(bad)  
   148df:	ff d6                	call   *%rsi
   148e1:	01 00                	add    %eax,(%rax)
   148e3:	00 00                	add    %al,(%rax)
   148e5:	4f 0e                	rex.WRXB (bad) 
   148e7:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   148ed:	8e 03                	mov    (%rbx),%es
   148ef:	42 0e                	rex.X (bad) 
   148f1:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   148f7:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff86315741 <_end+0xffffffff862ea731>
   148fd:	06                   	(bad)  
   148fe:	44 0e                	rex.R (bad) 
   14900:	38 83 07 47 0e 40    	cmp    %al,0x400e4707(%rbx)
   14906:	02 50 0a             	add    0xa(%rax),%dl
   14909:	0e                   	(bad)  
   1490a:	38 41 0e             	cmp    %al,0xe(%rcx)
   1490d:	30 41 0e             	xor    %al,0xe(%rcx)
   14910:	28 42 0e             	sub    %al,0xe(%rdx)
   14913:	20 42 0e             	and    %al,0xe(%rdx)
   14916:	18 42 0e             	sbb    %al,0xe(%rdx)
   14919:	10 42 0e             	adc    %al,0xe(%rdx)
   1491c:	08 42 0b             	or     %al,0xb(%rdx)
   1491f:	03 50 01             	add    0x1(%rax),%edx
   14922:	0e                   	(bad)  
   14923:	08 c3                	or     %al,%bl
   14925:	c6                   	(bad)  
   14926:	cc                   	int3   
   14927:	cd ce                	int    $0xce
   14929:	cf                   	iret   
   1492a:	00 00                	add    %al,(%rax)
   1492c:	10 00                	adc    %al,(%rax)
   1492e:	00 00                	add    %al,(%rax)
   14930:	40 06                	rex (bad) 
   14932:	00 00                	add    %al,(%rax)
   14934:	0c 18                	or     $0x18,%al
   14936:	ff                   	(bad)  
   14937:	ff 53 00             	call   *0x0(%rbx)
   1493a:	00 00                	add    %al,(%rax)
   1493c:	00 00                	add    %al,(%rax)
   1493e:	00 00                	add    %al,(%rax)
   14940:	18 00                	sbb    %al,(%rax)
   14942:	00 00                	add    %al,(%rax)
   14944:	54                   	push   %rsp
   14945:	06                   	(bad)  
   14946:	00 00                	add    %al,(%rax)
   14948:	58                   	pop    %rax
   14949:	18 ff                	sbb    %bh,%bh
   1494b:	ff 5c 00 00          	lcall  *0x0(%rax,%rax,1)
   1494f:	00 00                	add    %al,(%rax)
   14951:	48 0e                	rex.W (bad) 
   14953:	30 79 0a             	xor    %bh,0xa(%rcx)
   14956:	0e                   	(bad)  
   14957:	08 47 0b             	or     %al,0xb(%rdi)
   1495a:	00 00                	add    %al,(%rax)
   1495c:	10 00                	adc    %al,(%rax)
   1495e:	00 00                	add    %al,(%rax)
   14960:	70 06                	jo     14968 <__GNU_EH_FRAME_HDR+0xea8>
   14962:	00 00                	add    %al,(%rax)
   14964:	9c                   	pushf  
   14965:	18 ff                	sbb    %bh,%bh
   14967:	ff 6b 00             	ljmp   *0x0(%rbx)
   1496a:	00 00                	add    %al,(%rax)
   1496c:	00 00                	add    %al,(%rax)
   1496e:	00 00                	add    %al,(%rax)
   14970:	10 00                	adc    %al,(%rax)
   14972:	00 00                	add    %al,(%rax)
   14974:	84 06                	test   %al,(%rsi)
   14976:	00 00                	add    %al,(%rax)
   14978:	f8                   	clc    
   14979:	18 ff                	sbb    %bh,%bh
   1497b:	ff 5b 00             	lcall  *0x0(%rbx)
   1497e:	00 00                	add    %al,(%rax)
   14980:	00 00                	add    %al,(%rax)
   14982:	00 00                	add    %al,(%rax)
   14984:	40 00 00             	rex add %al,(%rax)
   14987:	00 98 06 00 00 44    	add    %bl,0x44000006(%rax)
   1498d:	19 ff                	sbb    %edi,%edi
   1498f:	ff                   	(bad)  
   14990:	bd 01 00 00 00       	mov    $0x1,%ebp
   14995:	46 0e                	rex.RX (bad) 
   14997:	10 8e 02 42 0e 18    	adc    %cl,0x180e4202(%rsi)
   1499d:	8d 03                	lea    (%rbx),%eax
   1499f:	42 0e                	rex.X (bad) 
   149a1:	20 8c 04 41 0e 28 86 	and    %cl,-0x79d7f1bf(%rsp,%rax,1)
   149a8:	05 41 0e 30 83       	add    $0x83300e41,%eax
   149ad:	06                   	(bad)  
   149ae:	47 0e                	rex.RXB (bad) 
   149b0:	40 02 b0 0a 0e 30 41 	add    0x41300e0a(%rax),%sil
   149b7:	0e                   	(bad)  
   149b8:	28 41 0e             	sub    %al,0xe(%rcx)
   149bb:	20 42 0e             	and    %al,0xe(%rdx)
   149be:	18 42 0e             	sbb    %al,0xe(%rdx)
   149c1:	10 42 0e             	adc    %al,0xe(%rdx)
   149c4:	08 45 0b             	or     %al,0xb(%rbp)
   149c7:	00 30                	add    %dh,(%rax)
   149c9:	00 00                	add    %al,(%rax)
   149cb:	00 dc                	add    %bl,%ah
   149cd:	06                   	(bad)  
   149ce:	00 00                	add    %al,(%rax)
   149d0:	c0 1a ff             	rcrb   $0xff,(%rdx)
   149d3:	ff 5c 00 00          	lcall  *0x0(%rax,%rax,1)
   149d7:	00 00                	add    %al,(%rax)
   149d9:	45 0e                	rex.RB (bad) 
   149db:	10 86 02 43 0e 18    	adc    %al,0x180e4302(%rsi)
   149e1:	83 03 44             	addl   $0x44,(%rbx)
   149e4:	0e                   	(bad)  
   149e5:	20 7a 0a             	and    %bh,0xa(%rdx)
   149e8:	0e                   	(bad)  
   149e9:	18 43 0e             	sbb    %al,0xe(%rbx)
   149ec:	10 41 0e             	adc    %al,0xe(%rcx)
   149ef:	08 46 0b             	or     %al,0xb(%rsi)
   149f2:	44 0e                	rex.R (bad) 
   149f4:	18 46 0e             	sbb    %al,0xe(%rsi)
   149f7:	10 41 0e             	adc    %al,0xe(%rcx)
   149fa:	08 00                	or     %al,(%rax)
   149fc:	40 00 00             	rex add %al,(%rax)
   149ff:	00 10                	add    %dl,(%rax)
   14a01:	07                   	(bad)  
   14a02:	00 00                	add    %al,(%rax)
   14a04:	ec                   	in     (%dx),%al
   14a05:	1a ff                	sbb    %bh,%bh
   14a07:	ff ce                	dec    %esi
   14a09:	00 00                	add    %al,(%rax)
   14a0b:	00 00                	add    %al,(%rax)
   14a0d:	4f 0e                	rex.WRXB (bad) 
   14a0f:	10 8d 02 47 0e 18    	adc    %cl,0x180e4702(%rbp)
   14a15:	8c 03                	mov    %es,(%rbx)
   14a17:	44 0e                	rex.R (bad) 
   14a19:	20 86 04 41 0e 28    	and    %al,0x280e4104(%rsi)
   14a1f:	83 05 44 0e 30 73 0a 	addl   $0xa,0x73300e44(%rip)        # 7331586a <_end+0x732ea85a>
   14a26:	0e                   	(bad)  
   14a27:	28 41 0e             	sub    %al,0xe(%rcx)
   14a2a:	20 41 0e             	and    %al,0xe(%rcx)
   14a2d:	18 42 0e             	sbb    %al,0xe(%rdx)
   14a30:	10 42 0e             	adc    %al,0xe(%rdx)
   14a33:	08 48 0b             	or     %cl,0xb(%rax)
   14a36:	02 68 0e             	add    0xe(%rax),%ch
   14a39:	08 c3                	or     %al,%bl
   14a3b:	c6                   	(bad)  
   14a3c:	cc                   	int3   
   14a3d:	cd 00                	int    $0x0
   14a3f:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
   14a43:	00 54 07 00          	add    %dl,0x0(%rdi,%rax,1)
   14a47:	00 78 1b             	add    %bh,0x1b(%rax)
   14a4a:	ff                   	(bad)  
   14a4b:	ff 19                	lcall  *(%rcx)
   14a4d:	01 00                	add    %eax,(%rax)
   14a4f:	00 00                	add    %al,(%rax)
   14a51:	46 0e                	rex.RX (bad) 
   14a53:	10 8c 02 41 0e 18 86 	adc    %cl,-0x79e7f1bf(%rdx,%rax,1)
   14a5a:	03 41 0e             	add    0xe(%rcx),%eax
   14a5d:	20 83 04 02 6c 0a    	and    %al,0xa6c0204(%rbx)
   14a63:	0e                   	(bad)  
   14a64:	18 41 0e             	sbb    %al,0xe(%rcx)
   14a67:	10 42 0e             	adc    %al,0xe(%rdx)
   14a6a:	08 49 0b             	or     %cl,0xb(%rcx)
   14a6d:	02 5f 0a             	add    0xa(%rdi),%bl
   14a70:	0e                   	(bad)  
   14a71:	18 41 0e             	sbb    %al,0xe(%rcx)
   14a74:	10 42 0e             	adc    %al,0xe(%rdx)
   14a77:	08 46 0b             	or     %al,0xb(%rsi)
   14a7a:	57                   	push   %rdi
   14a7b:	0a 0e                	or     (%rsi),%cl
   14a7d:	18 41 0e             	sbb    %al,0xe(%rcx)
   14a80:	10 45 0e             	adc    %al,0xe(%rbp)
   14a83:	08 4b 0b             	or     %cl,0xb(%rbx)
   14a86:	00 00                	add    %al,(%rax)
   14a88:	24 00                	and    $0x0,%al
   14a8a:	00 00                	add    %al,(%rax)
   14a8c:	9c                   	pushf  
   14a8d:	07                   	(bad)  
   14a8e:	00 00                	add    %al,(%rax)
   14a90:	50                   	push   %rax
   14a91:	1c ff                	sbb    $0xff,%al
   14a93:	ff                   	(bad)  
   14a94:	3b 00                	cmp    (%rax),%eax
   14a96:	00 00                	add    %al,(%rax)
   14a98:	00 45 0e             	add    %al,0xe(%rbp)
   14a9b:	10 86 02 44 0e 18    	adc    %al,0x180e4402(%rsi)
   14aa1:	83 03 44             	addl   $0x44,(%rbx)
   14aa4:	0e                   	(bad)  
   14aa5:	20 69 0e             	and    %ch,0xe(%rcx)
   14aa8:	18 43 0e             	sbb    %al,0xe(%rbx)
   14aab:	10 41 0e             	adc    %al,0xe(%rcx)
   14aae:	08 00                	or     %al,(%rax)
   14ab0:	10 00                	adc    %al,(%rax)
   14ab2:	00 00                	add    %al,(%rax)
   14ab4:	c4                   	(bad)  
   14ab5:	07                   	(bad)  
   14ab6:	00 00                	add    %al,(%rax)
   14ab8:	68 1c ff ff 07       	push   $0x7ffff1c
   14abd:	00 00                	add    %al,(%rax)
   14abf:	00 00                	add    %al,(%rax)
   14ac1:	00 00                	add    %al,(%rax)
   14ac3:	00 28                	add    %ch,(%rax)
   14ac5:	00 00                	add    %al,(%rax)
   14ac7:	00 d8                	add    %bl,%al
   14ac9:	07                   	(bad)  
   14aca:	00 00                	add    %al,(%rax)
   14acc:	64 1c ff             	fs sbb $0xff,%al
   14acf:	ff c7                	inc    %edi
   14ad1:	00 00                	add    %al,(%rax)
   14ad3:	00 00                	add    %al,(%rax)
   14ad5:	41 0e                	rex.B (bad) 
   14ad7:	10 86 02 41 0e 18    	adc    %al,0x180e4102(%rsi)
   14add:	83 03 47             	addl   $0x47,(%rbx)
   14ae0:	0e                   	(bad)  
   14ae1:	30 02                	xor    %al,(%rdx)
   14ae3:	5b                   	pop    %rbx
   14ae4:	0a 0e                	or     (%rsi),%cl
   14ae6:	18 41 0e             	sbb    %al,0xe(%rcx)
   14ae9:	10 41 0e             	adc    %al,0xe(%rcx)
   14aec:	08 4a 0b             	or     %cl,0xb(%rdx)
   14aef:	00 54 00 00          	add    %dl,0x0(%rax,%rax,1)
   14af3:	00 04 08             	add    %al,(%rax,%rcx,1)
   14af6:	00 00                	add    %al,(%rax)
   14af8:	08 1d ff ff db 00    	or     %bl,0xdbffff(%rip)        # dd4afd <_end+0xda9aed>
   14afe:	00 00                	add    %al,(%rax)
   14b00:	00 4b 0e             	add    %cl,0xe(%rbx)
   14b03:	10 8e 02 42 0e 18    	adc    %cl,0x180e4202(%rsi)
   14b09:	8d 03                	lea    (%rbx),%eax
   14b0b:	45 0e                	rex.RB (bad) 
   14b0d:	20 8c 04 44 0e 28 86 	and    %cl,-0x79d7f1bc(%rsp,%rax,1)
   14b14:	05 41 0e 30 83       	add    $0x83300e41,%eax
   14b19:	06                   	(bad)  
   14b1a:	02 7a 0a             	add    0xa(%rdx),%bh
   14b1d:	0e                   	(bad)  
   14b1e:	28 41 0e             	sub    %al,0xe(%rcx)
   14b21:	20 42 0e             	and    %al,0xe(%rdx)
   14b24:	18 42 0e             	sbb    %al,0xe(%rdx)
   14b27:	10 42 0e             	adc    %al,0xe(%rdx)
   14b2a:	08 48 0b             	or     %cl,0xb(%rax)
   14b2d:	41 0a 0e             	or     (%r14),%cl
   14b30:	28 43 0e             	sub    %al,0xe(%rbx)
   14b33:	20 42 0e             	and    %al,0xe(%rdx)
   14b36:	18 42 0e             	sbb    %al,0xe(%rdx)
   14b39:	10 42 0e             	adc    %al,0xe(%rdx)
   14b3c:	08 46 0b             	or     %al,0xb(%rsi)
   14b3f:	68 0e 08 c3 c6       	push   $0xffffffffc6c3080e
   14b44:	cc                   	int3   
   14b45:	cd ce                	int    $0xce
   14b47:	00 5c 00 00          	add    %bl,0x0(%rax,%rax,1)
   14b4b:	00 5c 08 00          	add    %bl,0x0(%rax,%rcx,1)
   14b4f:	00 90 1d ff ff bc    	add    %dl,-0x430000e3(%rax)
   14b55:	01 00                	add    %eax,(%rax)
   14b57:	00 00                	add    %al,(%rax)
   14b59:	46 0e                	rex.RX (bad) 
   14b5b:	10 8d 02 42 0e 18    	adc    %cl,0x180e4202(%rbp)
   14b61:	8c 03                	mov    %es,(%rbx)
   14b63:	41 0e                	rex.B (bad) 
   14b65:	20 86 04 44 0e 28    	and    %al,0x280e4404(%rsi)
   14b6b:	83 05 46 0e 30 02 97 	addl   $0xffffff97,0x2300e46(%rip)        # 23159b8 <_end+0x22ea9a8>
   14b72:	0a 0e                	or     (%rsi),%cl
   14b74:	28 44 0e 20          	sub    %al,0x20(%rsi,%rcx,1)
   14b78:	41 0e                	rex.B (bad) 
   14b7a:	18 42 0e             	sbb    %al,0xe(%rdx)
   14b7d:	10 42 0e             	adc    %al,0xe(%rdx)
   14b80:	08 45 0b             	or     %al,0xb(%rbp)
   14b83:	4e 0a 0e             	rex.WRX or (%rsi),%r9b
   14b86:	28 44 0e 20          	sub    %al,0x20(%rsi,%rcx,1)
   14b8a:	41 0e                	rex.B (bad) 
   14b8c:	18 42 0e             	sbb    %al,0xe(%rdx)
   14b8f:	10 42 0e             	adc    %al,0xe(%rdx)
   14b92:	08 49 0b             	or     %cl,0xb(%rcx)
   14b95:	53                   	push   %rbx
   14b96:	0a 0e                	or     (%rsi),%cl
   14b98:	28 47 0e             	sub    %al,0xe(%rdi)
   14b9b:	20 44 0e 18          	and    %al,0x18(%rsi,%rcx,1)
   14b9f:	42 0e                	rex.X (bad) 
   14ba1:	10 42 0e             	adc    %al,0xe(%rdx)
   14ba4:	08 46 0b             	or     %al,0xb(%rsi)
   14ba7:	00 10                	add    %dl,(%rax)
   14ba9:	00 00                	add    %al,(%rax)
   14bab:	00 bc 08 00 00 f0 1e 	add    %bh,0x1ef00000(%rax,%rcx,1)
   14bb2:	ff                   	(bad)  
   14bb3:	ff 05 00 00 00 00    	incl   0x0(%rip)        # 14bb9 <__GNU_EH_FRAME_HDR+0x10f9>
   14bb9:	00 00                	add    %al,(%rax)
   14bbb:	00 10                	add    %dl,(%rax)
   14bbd:	00 00                	add    %al,(%rax)
   14bbf:	00 d0                	add    %dl,%al
   14bc1:	08 00                	or     %al,(%rax)
   14bc3:	00 ec                	add    %ch,%ah
   14bc5:	1e                   	(bad)  
   14bc6:	ff                   	(bad)  
   14bc7:	ff 07                	incl   (%rdi)
   14bc9:	00 00                	add    %al,(%rax)
   14bcb:	00 00                	add    %al,(%rax)
   14bcd:	00 00                	add    %al,(%rax)
   14bcf:	00 10                	add    %dl,(%rax)
   14bd1:	00 00                	add    %al,(%rax)
   14bd3:	00 e4                	add    %ah,%ah
   14bd5:	08 00                	or     %al,(%rax)
   14bd7:	00 e8                	add    %ch,%al
   14bd9:	1e                   	(bad)  
   14bda:	ff                   	(bad)  
   14bdb:	ff 05 00 00 00 00    	incl   0x0(%rip)        # 14be1 <__GNU_EH_FRAME_HDR+0x1121>
   14be1:	00 00                	add    %al,(%rax)
   14be3:	00 10                	add    %dl,(%rax)
   14be5:	00 00                	add    %al,(%rax)
   14be7:	00 f8                	add    %bh,%al
   14be9:	08 00                	or     %al,(%rax)
   14beb:	00 e4                	add    %ah,%ah
   14bed:	1e                   	(bad)  
   14bee:	ff                   	(bad)  
   14bef:	ff 07                	incl   (%rdi)
   14bf1:	00 00                	add    %al,(%rax)
   14bf3:	00 00                	add    %al,(%rax)
   14bf5:	00 00                	add    %al,(%rax)
   14bf7:	00 10                	add    %dl,(%rax)
   14bf9:	00 00                	add    %al,(%rax)
   14bfb:	00 0c 09             	add    %cl,(%rcx,%rcx,1)
   14bfe:	00 00                	add    %al,(%rax)
   14c00:	e0 1e                	loopne 14c20 <__GNU_EH_FRAME_HDR+0x1160>
   14c02:	ff                   	(bad)  
   14c03:	ff 05 00 00 00 00    	incl   0x0(%rip)        # 14c09 <__GNU_EH_FRAME_HDR+0x1149>
   14c09:	00 00                	add    %al,(%rax)
   14c0b:	00 10                	add    %dl,(%rax)
   14c0d:	00 00                	add    %al,(%rax)
   14c0f:	00 20                	add    %ah,(%rax)
   14c11:	09 00                	or     %eax,(%rax)
   14c13:	00 dc                	add    %bl,%ah
   14c15:	1e                   	(bad)  
   14c16:	ff                   	(bad)  
   14c17:	ff 05 00 00 00 00    	incl   0x0(%rip)        # 14c1d <__GNU_EH_FRAME_HDR+0x115d>
   14c1d:	00 00                	add    %al,(%rax)
   14c1f:	00 10                	add    %dl,(%rax)
   14c21:	00 00                	add    %al,(%rax)
   14c23:	00 34 09             	add    %dh,(%rcx,%rcx,1)
   14c26:	00 00                	add    %al,(%rax)
   14c28:	d8 1e                	fcomps (%rsi)
   14c2a:	ff                   	(bad)  
   14c2b:	ff 05 00 00 00 00    	incl   0x0(%rip)        # 14c31 <__GNU_EH_FRAME_HDR+0x1171>
   14c31:	00 00                	add    %al,(%rax)
   14c33:	00 10                	add    %dl,(%rax)
   14c35:	00 00                	add    %al,(%rax)
   14c37:	00 48 09             	add    %cl,0x9(%rax)
   14c3a:	00 00                	add    %al,(%rax)
   14c3c:	d4                   	(bad)  
   14c3d:	1e                   	(bad)  
   14c3e:	ff                   	(bad)  
   14c3f:	ff 05 00 00 00 00    	incl   0x0(%rip)        # 14c45 <__GNU_EH_FRAME_HDR+0x1185>
   14c45:	00 00                	add    %al,(%rax)
   14c47:	00 48 00             	add    %cl,0x0(%rax)
   14c4a:	00 00                	add    %al,(%rax)
   14c4c:	5c                   	pop    %rsp
   14c4d:	09 00                	or     %eax,(%rax)
   14c4f:	00 d0                	add    %dl,%al
   14c51:	1e                   	(bad)  
   14c52:	ff                   	(bad)  
   14c53:	ff 5f 02             	lcall  *0x2(%rdi)
   14c56:	00 00                	add    %al,(%rax)
   14c58:	00 46 0e             	add    %al,0xe(%rsi)
   14c5b:	10 8f 02 4c 0e 18    	adc    %cl,0x180e4c02(%rdi)
   14c61:	8e 03                	mov    (%rbx),%es
   14c63:	46 0e                	rex.RX (bad) 
   14c65:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   14c6b:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff86315ab5 <_end+0xffffffff862eaaa5>
   14c71:	06                   	(bad)  
   14c72:	44 0e                	rex.R (bad) 
   14c74:	38 83 07 44 0e 70    	cmp    %al,0x700e4407(%rbx)
   14c7a:	03 38                	add    (%rax),%edi
   14c7c:	01 0a                	add    %ecx,(%rdx)
   14c7e:	0e                   	(bad)  
   14c7f:	38 41 0e             	cmp    %al,0xe(%rcx)
   14c82:	30 41 0e             	xor    %al,0xe(%rcx)
   14c85:	28 42 0e             	sub    %al,0xe(%rdx)
   14c88:	20 42 0e             	and    %al,0xe(%rdx)
   14c8b:	18 42 0e             	sbb    %al,0xe(%rdx)
   14c8e:	10 42 0e             	adc    %al,0xe(%rdx)
   14c91:	08 48 0b             	or     %cl,0xb(%rax)
   14c94:	20 00                	and    %al,(%rax)
   14c96:	00 00                	add    %al,(%rax)
   14c98:	a8 09                	test   $0x9,%al
   14c9a:	00 00                	add    %al,(%rax)
   14c9c:	e4 20                	in     $0x20,%al
   14c9e:	ff                   	(bad)  
   14c9f:	ff 5b 02             	lcall  *0x2(%rbx)
   14ca2:	00 00                	add    %al,(%rax)
   14ca4:	00 45 0e             	add    %al,0xe(%rbp)
   14ca7:	10 83 02 47 0e 90    	adc    %al,-0x6ff1b8fe(%rbx)
   14cad:	01 02                	add    %eax,(%rdx)
   14caf:	42 0a 0e             	rex.X or (%rsi),%cl
   14cb2:	10 41 0e             	adc    %al,0xe(%rcx)
   14cb5:	08 41 0b             	or     %al,0xb(%rcx)
   14cb8:	28 00                	sub    %al,(%rax)
   14cba:	00 00                	add    %al,(%rax)
   14cbc:	cc                   	int3   
   14cbd:	09 00                	or     %eax,(%rax)
   14cbf:	00 20                	add    %ah,(%rax)
   14cc1:	23 ff                	and    %edi,%edi
   14cc3:	ff                   	(bad)  
   14cc4:	df 00                	filds  (%rax)
   14cc6:	00 00                	add    %al,(%rax)
   14cc8:	00 45 0e             	add    %al,0xe(%rbp)
   14ccb:	10 86 02 41 0e 18    	adc    %al,0x180e4102(%rsi)
   14cd1:	83 03 47             	addl   $0x47,(%rbx)
   14cd4:	0e                   	(bad)  
   14cd5:	20 02                	and    %al,(%rdx)
   14cd7:	bc 0a 0e 18 43       	mov    $0x43180e0a,%esp
   14cdc:	0e                   	(bad)  
   14cdd:	10 41 0e             	adc    %al,0xe(%rcx)
   14ce0:	08 41 0b             	or     %al,0xb(%rcx)
   14ce3:	00 38                	add    %bh,(%rax)
   14ce5:	00 00                	add    %al,(%rax)
   14ce7:	00 f8                	add    %bh,%al
   14ce9:	09 00                	or     %eax,(%rax)
   14ceb:	00 d4                	add    %dl,%ah
   14ced:	23 ff                	and    %edi,%edi
   14cef:	ff                   	(bad)  
   14cf0:	df 00                	filds  (%rax)
   14cf2:	00 00                	add    %al,(%rax)
   14cf4:	00 4d 0e             	add    %cl,0xe(%rbp)
   14cf7:	10 8c 02 41 0e 18 86 	adc    %cl,-0x79e7f1bf(%rdx,%rax,1)
   14cfe:	03 41 0e             	add    0xe(%rcx),%eax
   14d01:	20 83 04 02 97 0a    	and    %al,0xa970204(%rbx)
   14d07:	0e                   	(bad)  
   14d08:	18 43 0e             	sbb    %al,0xe(%rbx)
   14d0b:	10 42 0e             	adc    %al,0xe(%rdx)
   14d0e:	08 45 0b             	or     %al,0xb(%rbp)
   14d11:	58                   	pop    %rax
   14d12:	0a 0e                	or     (%rsi),%cl
   14d14:	18 46 0e             	sbb    %al,0xe(%rsi)
   14d17:	10 42 0e             	adc    %al,0xe(%rdx)
   14d1a:	08 48 0b             	or     %cl,0xb(%rax)
   14d1d:	00 00                	add    %al,(%rax)
   14d1f:	00 5c 00 00          	add    %bl,0x0(%rax,%rax,1)
   14d23:	00 34 0a             	add    %dh,(%rdx,%rcx,1)
   14d26:	00 00                	add    %al,(%rax)
   14d28:	d8 cb                	fmul   %st(3),%st
   14d2a:	ff                   	(bad)  
   14d2b:	ff b1 01 00 00 00    	push   0x1(%rcx)
   14d31:	46 0e                	rex.RX (bad) 
   14d33:	10 8d 02 45 0e 18    	adc    %cl,0x180e4502(%rbp)
   14d39:	8c 03                	mov    %es,(%rbx)
   14d3b:	44 0e                	rex.R (bad) 
   14d3d:	20 86 04 43 0e 28    	and    %al,0x280e4304(%rsi)
   14d43:	83 05 46 0e 40 6a 0a 	addl   $0xa,0x6a400e46(%rip)        # 6a415b90 <_end+0x6a3eab80>
   14d4a:	0e                   	(bad)  
   14d4b:	28 41 0e             	sub    %al,0xe(%rcx)
   14d4e:	20 41 0e             	and    %al,0xe(%rcx)
   14d51:	18 42 0e             	sbb    %al,0xe(%rdx)
   14d54:	10 42 0e             	adc    %al,0xe(%rdx)
   14d57:	08 48 0b             	or     %cl,0xb(%rax)
   14d5a:	6a 0a                	push   $0xa
   14d5c:	0e                   	(bad)  
   14d5d:	28 41 0e             	sub    %al,0xe(%rcx)
   14d60:	20 41 0e             	and    %al,0xe(%rcx)
   14d63:	18 42 0e             	sbb    %al,0xe(%rdx)
   14d66:	10 42 0e             	adc    %al,0xe(%rdx)
   14d69:	08 48 0b             	or     %cl,0xb(%rax)
   14d6c:	44 0a 0e             	or     (%rsi),%r9b
   14d6f:	28 46 0e             	sub    %al,0xe(%rsi)
   14d72:	20 41 0e             	and    %al,0xe(%rcx)
   14d75:	18 42 0e             	sbb    %al,0xe(%rdx)
   14d78:	10 42 0e             	adc    %al,0xe(%rdx)
   14d7b:	08 49 0b             	or     %cl,0xb(%rcx)
   14d7e:	00 00                	add    %al,(%rax)
   14d80:	10 00                	adc    %al,(%rax)
   14d82:	00 00                	add    %al,(%rax)
   14d84:	94                   	xchg   %eax,%esp
   14d85:	0a 00                	or     (%rax),%al
   14d87:	00 18                	add    %bl,(%rax)
   14d89:	24 ff                	and    $0xff,%al
   14d8b:	ff 2e                	ljmp   *(%rsi)
   14d8d:	00 00                	add    %al,(%rax)
   14d8f:	00 00                	add    %al,(%rax)
   14d91:	00 00                	add    %al,(%rax)
   14d93:	00 18                	add    %bl,(%rax)
   14d95:	00 00                	add    %al,(%rax)
   14d97:	00 a8 0a 00 00 34    	add    %ch,0x3400000a(%rax)
   14d9d:	24 ff                	and    $0xff,%al
   14d9f:	ff                   	(bad)  
   14da0:	3b 00                	cmp    (%rax),%eax
   14da2:	00 00                	add    %al,(%rax)
   14da4:	00 45 0e             	add    %al,0xe(%rbp)
   14da7:	10 83 02 75 0e 08    	adc    %al,0x80e7502(%rbx)
   14dad:	00 00                	add    %al,(%rax)
   14daf:	00 2c 00             	add    %ch,(%rax,%rax,1)
   14db2:	00 00                	add    %al,(%rax)
   14db4:	c4                   	(bad)  
   14db5:	0a 00                	or     (%rax),%al
   14db7:	00 58 24             	add    %bl,0x24(%rax)
   14dba:	ff                   	(bad)  
   14dbb:	ff                   	(bad)  
   14dbc:	bc 00 00 00 00       	mov    $0x0,%esp
   14dc1:	45 0e                	rex.RB (bad) 
   14dc3:	10 86 02 44 0e 18    	adc    %al,0x180e4402(%rsi)
   14dc9:	83 03 44             	addl   $0x44,(%rbx)
   14dcc:	0e                   	(bad)  
   14dcd:	30 02                	xor    %al,(%rdx)
   14dcf:	43 0a 0e             	rex.XB or (%r14),%cl
   14dd2:	18 46 0e             	sbb    %al,0xe(%rsi)
   14dd5:	10 41 0e             	adc    %al,0xe(%rcx)
   14dd8:	08 49 0b             	or     %cl,0xb(%rcx)
   14ddb:	00 00                	add    %al,(%rax)
   14ddd:	00 00                	add    %al,(%rax)
   14ddf:	00 10                	add    %dl,(%rax)
   14de1:	00 00                	add    %al,(%rax)
   14de3:	00 f4                	add    %dh,%ah
   14de5:	0a 00                	or     (%rax),%al
   14de7:	00 e8                	add    %ch,%al
   14de9:	24 ff                	and    $0xff,%al
   14deb:	ff 10                	call   *(%rax)
   14ded:	00 00                	add    %al,(%rax)
   14def:	00 00                	add    %al,(%rax)
   14df1:	00 00                	add    %al,(%rax)
   14df3:	00 14 00             	add    %dl,(%rax,%rax,1)
   14df6:	00 00                	add    %al,(%rax)
   14df8:	08 0b                	or     %cl,(%rbx)
   14dfa:	00 00                	add    %al,(%rax)
   14dfc:	e4 24                	in     $0x24,%al
   14dfe:	ff                   	(bad)  
   14dff:	ff 22                	jmp    *(%rdx)
   14e01:	00 00                	add    %al,(%rax)
   14e03:	00 00                	add    %al,(%rax)
   14e05:	48 0e                	rex.W (bad) 
   14e07:	10 54 0e 08          	adc    %dl,0x8(%rsi,%rcx,1)
   14e0b:	00 14 00             	add    %dl,(%rax,%rax,1)
   14e0e:	00 00                	add    %al,(%rax)
   14e10:	20 0b                	and    %cl,(%rbx)
   14e12:	00 00                	add    %al,(%rax)
   14e14:	fc                   	cld    
   14e15:	24 ff                	and    $0xff,%al
   14e17:	ff 20                	jmp    *(%rax)
   14e19:	00 00                	add    %al,(%rax)
   14e1b:	00 00                	add    %al,(%rax)
   14e1d:	48 0e                	rex.W (bad) 
   14e1f:	10 54 0e 08          	adc    %dl,0x8(%rsi,%rcx,1)
   14e23:	00 10                	add    %dl,(%rax)
   14e25:	00 00                	add    %al,(%rax)
   14e27:	00 38                	add    %bh,(%rax)
   14e29:	0b 00                	or     (%rax),%eax
   14e2b:	00 04 25 ff ff 61 00 	add    %al,0x61ffff
   14e32:	00 00                	add    %al,(%rax)
   14e34:	00 00                	add    %al,(%rax)
   14e36:	00 00                	add    %al,(%rax)
   14e38:	10 00                	adc    %al,(%rax)
   14e3a:	00 00                	add    %al,(%rax)
   14e3c:	4c 0b 00             	or     (%rax),%r8
   14e3f:	00 60 25             	add    %ah,0x25(%rax)
   14e42:	ff                   	(bad)  
   14e43:	ff 53 00             	call   *0x0(%rbx)
   14e46:	00 00                	add    %al,(%rax)
   14e48:	00 00                	add    %al,(%rax)
   14e4a:	00 00                	add    %al,(%rax)
   14e4c:	14 00                	adc    $0x0,%al
   14e4e:	00 00                	add    %al,(%rax)
   14e50:	60                   	(bad)  
   14e51:	0b 00                	or     (%rax),%eax
   14e53:	00 ac 25 ff ff 20 00 	add    %ch,0x20ffff(%rbp,%riz,1)
   14e5a:	00 00                	add    %al,(%rax)
   14e5c:	00 48 0e             	add    %cl,0xe(%rax)
   14e5f:	10 54 0e 08          	adc    %dl,0x8(%rsi,%rcx,1)
   14e63:	00 14 00             	add    %dl,(%rax,%rax,1)
   14e66:	00 00                	add    %al,(%rax)
   14e68:	78 0b                	js     14e75 <__GNU_EH_FRAME_HDR+0x13b5>
   14e6a:	00 00                	add    %al,(%rax)
   14e6c:	b4 25                	mov    $0x25,%ah
   14e6e:	ff                   	(bad)  
   14e6f:	ff                   	(bad)  
   14e70:	78 00                	js     14e72 <__GNU_EH_FRAME_HDR+0x13b2>
   14e72:	00 00                	add    %al,(%rax)
   14e74:	00 48 0e             	add    %cl,0xe(%rax)
   14e77:	10 02                	adc    %al,(%rdx)
   14e79:	6c                   	insb   (%dx),%es:(%rdi)
   14e7a:	0e                   	(bad)  
   14e7b:	08 10                	or     %dl,(%rax)
   14e7d:	00 00                	add    %al,(%rax)
   14e7f:	00 90 0b 00 00 1c    	add    %dl,0x1c00000b(%rax)
   14e85:	26 ff                	es (bad) 
   14e87:	ff 61 00             	jmp    *0x0(%rcx)
   14e8a:	00 00                	add    %al,(%rax)
   14e8c:	00 00                	add    %al,(%rax)
   14e8e:	00 00                	add    %al,(%rax)
   14e90:	10 00                	adc    %al,(%rax)
   14e92:	00 00                	add    %al,(%rax)
   14e94:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
   14e95:	0b 00                	or     (%rax),%eax
   14e97:	00 78 26             	add    %bh,0x26(%rax)
   14e9a:	ff                   	(bad)  
   14e9b:	ff 53 00             	call   *0x0(%rbx)
   14e9e:	00 00                	add    %al,(%rax)
   14ea0:	00 00                	add    %al,(%rax)
   14ea2:	00 00                	add    %al,(%rax)
   14ea4:	14 00                	adc    $0x0,%al
   14ea6:	00 00                	add    %al,(%rax)
   14ea8:	b8 0b 00 00 c4       	mov    $0xc400000b,%eax
   14ead:	26 ff                	es (bad) 
   14eaf:	ff 16                	call   *(%rsi)
   14eb1:	00 00                	add    %al,(%rax)
   14eb3:	00 00                	add    %al,(%rax)
   14eb5:	48 0e                	rex.W (bad) 
   14eb7:	10 49 0e             	adc    %cl,0xe(%rcx)
   14eba:	08 00                	or     %al,(%rax)
   14ebc:	10 00                	adc    %al,(%rax)
   14ebe:	00 00                	add    %al,(%rax)
   14ec0:	d0 0b                	rorb   (%rbx)
   14ec2:	00 00                	add    %al,(%rax)
   14ec4:	cc                   	int3   
   14ec5:	26 ff                	es (bad) 
   14ec7:	ff 43 00             	incl   0x0(%rbx)
   14eca:	00 00                	add    %al,(%rax)
   14ecc:	00 00                	add    %al,(%rax)
   14ece:	00 00                	add    %al,(%rax)
   14ed0:	24 00                	and    $0x0,%al
   14ed2:	00 00                	add    %al,(%rax)
   14ed4:	e4 0b                	in     $0xb,%al
   14ed6:	00 00                	add    %al,(%rax)
   14ed8:	08 27                	or     %ah,(%rdi)
   14eda:	ff                   	(bad)  
   14edb:	ff                   	(bad)  
   14edc:	3f                   	(bad)  
   14edd:	00 00                	add    %al,(%rax)
   14edf:	00 00                	add    %al,(%rax)
   14ee1:	45 0e                	rex.RB (bad) 
   14ee3:	10 86 02 44 0e 18    	adc    %al,0x180e4402(%rsi)
   14ee9:	83 03 47             	addl   $0x47,(%rbx)
   14eec:	0e                   	(bad)  
   14eed:	20 6a 0e             	and    %ch,0xe(%rdx)
   14ef0:	18 43 0e             	sbb    %al,0xe(%rbx)
   14ef3:	10 41 0e             	adc    %al,0xe(%rcx)
   14ef6:	08 00                	or     %al,(%rax)
   14ef8:	18 00                	sbb    %al,(%rax)
   14efa:	00 00                	add    %al,(%rax)
   14efc:	0c 0c                	or     $0xc,%al
   14efe:	00 00                	add    %al,(%rax)
   14f00:	20 27                	and    %ah,(%rdi)
   14f02:	ff                   	(bad)  
   14f03:	ff 2e                	ljmp   *(%rsi)
   14f05:	00 00                	add    %al,(%rax)
   14f07:	00 00                	add    %al,(%rax)
   14f09:	51                   	push   %rcx
   14f0a:	0e                   	(bad)  
   14f0b:	10 83 02 57 0e 08    	adc    %al,0x80e5702(%rbx)
   14f11:	00 00                	add    %al,(%rax)
   14f13:	00 14 00             	add    %dl,(%rax,%rax,1)
   14f16:	00 00                	add    %al,(%rax)
   14f18:	28 0c 00             	sub    %cl,(%rax,%rax,1)
   14f1b:	00 34 27             	add    %dh,(%rdi,%riz,1)
   14f1e:	ff                   	(bad)  
   14f1f:	ff 22                	jmp    *(%rdx)
   14f21:	00 00                	add    %al,(%rax)
   14f23:	00 00                	add    %al,(%rax)
   14f25:	48 0e                	rex.W (bad) 
   14f27:	10 59 0e             	adc    %bl,0xe(%rcx)
   14f2a:	08 00                	or     %al,(%rax)
   14f2c:	10 00                	adc    %al,(%rax)
   14f2e:	00 00                	add    %al,(%rax)
   14f30:	40 0c 00             	rex or $0x0,%al
   14f33:	00 4c 27 ff          	add    %cl,-0x1(%rdi,%riz,1)
   14f37:	ff 25 00 00 00 00    	jmp    *0x0(%rip)        # 14f3d <__GNU_EH_FRAME_HDR+0x147d>
   14f3d:	00 00                	add    %al,(%rax)
   14f3f:	00 14 00             	add    %dl,(%rax,%rax,1)
   14f42:	00 00                	add    %al,(%rax)
   14f44:	54                   	push   %rsp
   14f45:	0c 00                	or     $0x0,%al
   14f47:	00 68 27             	add    %ch,0x27(%rax)
   14f4a:	ff                   	(bad)  
   14f4b:	ff 19                	lcall  *(%rcx)
   14f4d:	00 00                	add    %al,(%rax)
   14f4f:	00 00                	add    %al,(%rax)
   14f51:	48 0e                	rex.W (bad) 
   14f53:	10 49 0e             	adc    %cl,0xe(%rcx)
   14f56:	08 00                	or     %al,(%rax)
   14f58:	10 00                	adc    %al,(%rax)
   14f5a:	00 00                	add    %al,(%rax)
   14f5c:	6c                   	insb   (%dx),%es:(%rdi)
   14f5d:	0c 00                	or     $0x0,%al
   14f5f:	00 70 27             	add    %dh,0x27(%rax)
   14f62:	ff                   	(bad)  
   14f63:	ff 16                	call   *(%rsi)
   14f65:	00 00                	add    %al,(%rax)
   14f67:	00 00                	add    %al,(%rax)
   14f69:	00 00                	add    %al,(%rax)
   14f6b:	00 10                	add    %dl,(%rax)
   14f6d:	00 00                	add    %al,(%rax)
   14f6f:	00 80 0c 00 00 7c    	add    %al,0x7c00000c(%rax)
   14f75:	27                   	(bad)  
   14f76:	ff                   	(bad)  
   14f77:	ff 13                	call   *(%rbx)
   14f79:	00 00                	add    %al,(%rax)
   14f7b:	00 00                	add    %al,(%rax)
   14f7d:	00 00                	add    %al,(%rax)
   14f7f:	00 1c 00             	add    %bl,(%rax,%rax,1)
   14f82:	00 00                	add    %al,(%rax)
   14f84:	94                   	xchg   %eax,%esp
   14f85:	0c 00                	or     $0x0,%al
   14f87:	00 88 27 ff ff 2f    	add    %cl,0x2fffff27(%rax)
   14f8d:	00 00                	add    %al,(%rax)
   14f8f:	00 00                	add    %al,(%rax)
   14f91:	48 0e                	rex.W (bad) 
   14f93:	10 59 0a             	adc    %bl,0xa(%rcx)
   14f96:	0e                   	(bad)  
   14f97:	08 47 0b             	or     %al,0xb(%rdi)
   14f9a:	46 0e                	rex.RX (bad) 
   14f9c:	08 00                	or     %al,(%rax)
   14f9e:	00 00                	add    %al,(%rax)
   14fa0:	20 00                	and    %al,(%rax)
   14fa2:	00 00                	add    %al,(%rax)
   14fa4:	b4 0c                	mov    $0xc,%ah
   14fa6:	00 00                	add    %al,(%rax)
   14fa8:	98                   	cwtl   
   14fa9:	27                   	(bad)  
   14faa:	ff                   	(bad)  
   14fab:	ff                   	(bad)  
   14fac:	ed                   	in     (%dx),%eax
   14fad:	03 00                	add    (%rax),%eax
   14faf:	00 00                	add    %al,(%rax)
   14fb1:	45 0e                	rex.RB (bad) 
   14fb3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
   14fb9:	49 8f 03             	rex.WB pop (%r11)
   14fbc:	8e 04 8d 05 8c 06 83 	mov    -0x7cf973fb(,%rcx,4),%es
   14fc3:	07                   	(bad)  
   14fc4:	38 00                	cmp    %al,(%rax)
   14fc6:	00 00                	add    %al,(%rax)
   14fc8:	d8 0c 00             	fmuls  (%rax,%rax,1)
   14fcb:	00 64 2b ff          	add    %ah,-0x1(%rbx,%rbp,1)
   14fcf:	ff 4e 01             	decl   0x1(%rsi)
   14fd2:	00 00                	add    %al,(%rax)
   14fd4:	00 46 0e             	add    %al,0xe(%rsi)
   14fd7:	10 8d 02 42 0e 18    	adc    %cl,0x180e4202(%rbp)
   14fdd:	8c 03                	mov    %es,(%rbx)
   14fdf:	44 0e                	rex.R (bad) 
   14fe1:	20 86 04 44 0e 28    	and    %al,0x280e4404(%rsi)
   14fe7:	83 05 44 0e 40 02 bb 	addl   $0xffffffbb,0x2400e44(%rip)        # 2415e32 <_end+0x23eae22>
   14fee:	0a 0e                	or     (%rsi),%cl
   14ff0:	28 44 0e 20          	sub    %al,0x20(%rsi,%rcx,1)
   14ff4:	41 0e                	rex.B (bad) 
   14ff6:	18 42 0e             	sbb    %al,0xe(%rdx)
   14ff9:	10 42 0e             	adc    %al,0xe(%rdx)
   14ffc:	08 48 0b             	or     %cl,0xb(%rax)
   14fff:	00 38                	add    %bh,(%rax)
   15001:	00 00                	add    %al,(%rax)
   15003:	00 14 0d 00 00 78 2c 	add    %dl,0x2c780000(,%rcx,1)
   1500a:	ff                   	(bad)  
   1500b:	ff ab 00 00 00 00    	ljmp   *0x0(%rbx)
   15011:	4e 0e                	rex.WRX (bad) 
   15013:	10 86 02 48 0e 18    	adc    %al,0x180e4802(%rsi)
   15019:	83 03 4a             	addl   $0x4a,(%rbx)
   1501c:	0e                   	(bad)  
   1501d:	20 7d 0a             	and    %bh,0xa(%rbp)
   15020:	0e                   	(bad)  
   15021:	18 43 0e             	sbb    %al,0xe(%rbx)
   15024:	10 41 0e             	adc    %al,0xe(%rcx)
   15027:	08 47 0b             	or     %al,0xb(%rdi)
   1502a:	5c                   	pop    %rsp
   1502b:	0a 0e                	or     (%rsi),%cl
   1502d:	18 46 0e             	sbb    %al,0xe(%rsi)
   15030:	10 41 0e             	adc    %al,0xe(%rcx)
   15033:	08 45 0b             	or     %al,0xb(%rbp)
   15036:	58                   	pop    %rax
   15037:	0e                   	(bad)  
   15038:	08 c3                	or     %al,%bl
   1503a:	c6 00 48             	movb   $0x48,(%rax)
   1503d:	00 00                	add    %al,(%rax)
   1503f:	00 50 0d             	add    %dl,0xd(%rax)
   15042:	00 00                	add    %al,(%rax)
   15044:	ec                   	in     (%dx),%al
   15045:	2c ff                	sub    $0xff,%al
   15047:	ff af 03 00 00 00    	ljmp   *0x3(%rdi)
   1504d:	46 0e                	rex.RX (bad) 
   1504f:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   15055:	8e 03                	mov    (%rbx),%es
   15057:	42 0e                	rex.X (bad) 
   15059:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   1505f:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff86315ea6 <_end+0xffffffff862eae96>
   15065:	06                   	(bad)  
   15066:	41 0e                	rex.B (bad) 
   15068:	38 83 07 47 0e 40    	cmp    %al,0x400e4707(%rbx)
   1506e:	02 5e 0a             	add    0xa(%rsi),%bl
   15071:	0e                   	(bad)  
   15072:	38 41 0e             	cmp    %al,0xe(%rcx)
   15075:	30 41 0e             	xor    %al,0xe(%rcx)
   15078:	28 42 0e             	sub    %al,0xe(%rdx)
   1507b:	20 42 0e             	and    %al,0xe(%rdx)
   1507e:	18 42 0e             	sbb    %al,0xe(%rdx)
   15081:	10 42 0e             	adc    %al,0xe(%rdx)
   15084:	08 43 0b             	or     %al,0xb(%rbx)
   15087:	00 14 00             	add    %dl,(%rax,%rax,1)
   1508a:	00 00                	add    %al,(%rax)
   1508c:	9c                   	pushf  
   1508d:	0d 00 00 50 30       	or     $0x30500000,%eax
   15092:	ff                   	(bad)  
   15093:	ff 25 00 00 00 00    	jmp    *0x0(%rip)        # 15099 <__GNU_EH_FRAME_HDR+0x15d9>
   15099:	48 0e                	rex.W (bad) 
   1509b:	10 5c 0e 08          	adc    %bl,0x8(%rsi,%rcx,1)
   1509f:	00 10                	add    %dl,(%rax)
   150a1:	00 00                	add    %al,(%rax)
   150a3:	00 b4 0d 00 00 68 30 	add    %dh,0x30680000(%rbp,%rcx,1)
   150aa:	ff                   	(bad)  
   150ab:	ff 6e 00             	ljmp   *0x0(%rsi)
   150ae:	00 00                	add    %al,(%rax)
   150b0:	00 00                	add    %al,(%rax)
   150b2:	00 00                	add    %al,(%rax)
   150b4:	34 00                	xor    $0x0,%al
   150b6:	00 00                	add    %al,(%rax)
   150b8:	c8 0d 00 00          	enter  $0xd,$0x0
   150bc:	c4                   	(bad)  
   150bd:	30 ff                	xor    %bh,%bh
   150bf:	ff                   	(bad)  
   150c0:	d8 01                	fadds  (%rcx)
   150c2:	00 00                	add    %al,(%rax)
   150c4:	00 54 0e 10          	add    %dl,0x10(%rsi,%rcx,1)
   150c8:	86 02                	xchg   %al,(%rdx)
   150ca:	4d 0e                	rex.WRB (bad) 
   150cc:	18 83 03 02 a7 0a    	sbb    %al,0xaa70203(%rbx)
   150d2:	0e                   	(bad)  
   150d3:	10 41 0e             	adc    %al,0xe(%rcx)
   150d6:	08 47 0b             	or     %al,0xb(%rdi)
   150d9:	02 44 0a 0e          	add    0xe(%rdx,%rcx,1),%al
   150dd:	10 41 0e             	adc    %al,0xe(%rcx)
   150e0:	08 4b 0b             	or     %cl,0xb(%rbx)
   150e3:	02 b5 0e 08 c3 c6    	add    -0x393cf7f2(%rbp),%dh
   150e9:	00 00                	add    %al,(%rax)
   150eb:	00 78 00             	add    %bh,0x0(%rax)
   150ee:	00 00                	add    %al,(%rax)
   150f0:	00 0e                	add    %cl,(%rsi)
   150f2:	00 00                	add    %al,(%rax)
   150f4:	6c                   	insb   (%dx),%es:(%rdi)
   150f5:	32 ff                	xor    %bh,%bh
   150f7:	ff 21                	jmp    *(%rcx)
   150f9:	02 00                	add    (%rax),%al
   150fb:	00 00                	add    %al,(%rax)
   150fd:	66 0e                	data16 (bad) 
   150ff:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   15105:	8e 03                	mov    (%rbx),%es
   15107:	42 0e                	rex.X (bad) 
   15109:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   1510f:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff86315f56 <_end+0xffffffff862eaf46>
   15115:	06                   	(bad)  
   15116:	41 0e                	rex.B (bad) 
   15118:	38 83 07 47 0e 40    	cmp    %al,0x400e4707(%rbx)
   1511e:	03 0b                	add    (%rbx),%ecx
   15120:	01 0a                	add    %ecx,(%rdx)
   15122:	0e                   	(bad)  
   15123:	38 46 0e             	cmp    %al,0xe(%rsi)
   15126:	30 41 0e             	xor    %al,0xe(%rcx)
   15129:	28 42 0e             	sub    %al,0xe(%rdx)
   1512c:	20 42 0e             	and    %al,0xe(%rdx)
   1512f:	18 42 0e             	sbb    %al,0xe(%rdx)
   15132:	10 42 0e             	adc    %al,0xe(%rdx)
   15135:	08 41 0b             	or     %al,0xb(%rcx)
   15138:	02 90 0e 08 c3 c6    	add    -0x393cf7f2(%rax),%dl
   1513e:	cc                   	int3   
   1513f:	cd ce                	int    $0xce
   15141:	cf                   	iret   
   15142:	50                   	push   %rax
   15143:	0e                   	(bad)  
   15144:	40 83 07 86          	rex addl $0xffffff86,(%rdi)
   15148:	06                   	(bad)  
   15149:	8c 05 8d 04 8e 03    	mov    %es,0x38e048d(%rip)        # 38f55dc <_end+0x38ca5cc>
   1514f:	8f 02                	pop    (%rdx)
   15151:	64 0e                	fs (bad) 
   15153:	38 43 0e             	cmp    %al,0xe(%rbx)
   15156:	30 41 0e             	xor    %al,0xe(%rcx)
   15159:	28 42 0e             	sub    %al,0xe(%rdx)
   1515c:	20 42 0e             	and    %al,0xe(%rdx)
   1515f:	18 42 0e             	sbb    %al,0xe(%rdx)
   15162:	10 42 0e             	adc    %al,0xe(%rdx)
   15165:	08 00                	or     %al,(%rax)
   15167:	00 10                	add    %dl,(%rax)
   15169:	00 00                	add    %al,(%rax)
   1516b:	00 7c 0e 00          	add    %bh,0x0(%rsi,%rcx,1)
   1516f:	00 20                	add    %ah,(%rax)
   15171:	34 ff                	xor    $0xff,%al
   15173:	ff 96 00 00 00 00    	call   *0x0(%rsi)
   15179:	00 00                	add    %al,(%rax)
   1517b:	00 10                	add    %dl,(%rax)
   1517d:	00 00                	add    %al,(%rax)
   1517f:	00 90 0e 00 00 ac    	add    %dl,-0x53fffff2(%rax)
   15185:	34 ff                	xor    $0xff,%al
   15187:	ff e4                	jmp    *%rsp
   15189:	00 00                	add    %al,(%rax)
   1518b:	00 00                	add    %al,(%rax)
   1518d:	00 00                	add    %al,(%rax)
   1518f:	00 10                	add    %dl,(%rax)
   15191:	00 00                	add    %al,(%rax)
   15193:	00 a4 0e 00 00 88 35 	add    %ah,0x35880000(%rsi,%rcx,1)
   1519a:	ff                   	(bad)  
   1519b:	ff e4                	jmp    *%rsp
   1519d:	00 00                	add    %al,(%rax)
   1519f:	00 00                	add    %al,(%rax)
   151a1:	00 00                	add    %al,(%rax)
   151a3:	00 50 00             	add    %dl,0x0(%rax)
   151a6:	00 00                	add    %al,(%rax)
   151a8:	b8 0e 00 00 64       	mov    $0x6400000e,%eax
   151ad:	36 ff                	ss (bad) 
   151af:	ff d1                	call   *%rcx
   151b1:	01 00                	add    %eax,(%rax)
   151b3:	00 00                	add    %al,(%rax)
   151b5:	4f 0e                	rex.WRXB (bad) 
   151b7:	10 8e 02 42 0e 18    	adc    %cl,0x180e4202(%rsi)
   151bd:	8d 03                	lea    (%rbx),%eax
   151bf:	45 0e                	rex.RB (bad) 
   151c1:	20 8c 04 41 0e 28 86 	and    %cl,-0x79d7f1bf(%rsp,%rax,1)
   151c8:	05 41 0e 30 83       	add    $0x83300e41,%eax
   151cd:	06                   	(bad)  
   151ce:	02 ce                	add    %dh,%cl
   151d0:	0a 0e                	or     (%rsi),%cl
   151d2:	28 41 0e             	sub    %al,0xe(%rcx)
   151d5:	20 42 0e             	and    %al,0xe(%rdx)
   151d8:	18 42 0e             	sbb    %al,0xe(%rdx)
   151db:	10 42 0e             	adc    %al,0xe(%rdx)
   151de:	08 43 0b             	or     %al,0xb(%rbx)
   151e1:	02 d1                	add    %cl,%dl
   151e3:	0e                   	(bad)  
   151e4:	28 43 0e             	sub    %al,0xe(%rbx)
   151e7:	20 42 0e             	and    %al,0xe(%rdx)
   151ea:	18 42 0e             	sbb    %al,0xe(%rdx)
   151ed:	10 42 0e             	adc    %al,0xe(%rdx)
   151f0:	08 41 c3             	or     %al,-0x3d(%rcx)
   151f3:	c6                   	(bad)  
   151f4:	cc                   	int3   
   151f5:	cd ce                	int    $0xce
   151f7:	00 4c 00 00          	add    %cl,0x0(%rax,%rax,1)
   151fb:	00 0c 0f             	add    %cl,(%rdi,%rcx,1)
   151fe:	00 00                	add    %al,(%rax)
   15200:	f0 37                	lock (bad) 
   15202:	ff                   	(bad)  
   15203:	ff                   	(bad)  
   15204:	fb                   	sti    
   15205:	00 00                	add    %al,(%rax)
   15207:	00 00                	add    %al,(%rax)
   15209:	4f 0e                	rex.WRXB (bad) 
   1520b:	10 8d 02 45 0e 18    	adc    %cl,0x180e4502(%rbp)
   15211:	8c 03                	mov    %es,(%rbx)
   15213:	41 0e                	rex.B (bad) 
   15215:	20 86 04 41 0e 28    	and    %al,0x280e4104(%rsi)
   1521b:	83 05 44 0e 30 02 be 	addl   $0xffffffbe,0x2300e44(%rip)        # 2316066 <_end+0x22eb056>
   15222:	0a 0e                	or     (%rsi),%cl
   15224:	28 46 0e             	sub    %al,0xe(%rsi)
   15227:	20 41 0e             	and    %al,0xe(%rcx)
   1522a:	18 42 0e             	sbb    %al,0xe(%rdx)
   1522d:	10 42 0e             	adc    %al,0xe(%rdx)
   15230:	08 45 0b             	or     %al,0xb(%rbp)
   15233:	44 0e                	rex.R (bad) 
   15235:	28 43 0e             	sub    %al,0xe(%rbx)
   15238:	20 41 0e             	and    %al,0xe(%rcx)
   1523b:	18 42 0e             	sbb    %al,0xe(%rdx)
   1523e:	10 42 0e             	adc    %al,0xe(%rdx)
   15241:	08 41 c3             	or     %al,-0x3d(%rcx)
   15244:	c6                   	(bad)  
   15245:	cc                   	int3   
   15246:	cd 00                	int    $0x0
   15248:	38 00                	cmp    %al,(%rax)
   1524a:	00 00                	add    %al,(%rax)
   1524c:	5c                   	pop    %rsp
   1524d:	0f 00 00             	sldt   (%rax)
   15250:	a0 38 ff ff 26 01 00 	movabs 0x126ffff38,%al
   15257:	00 00 
   15259:	46 0e                	rex.RX (bad) 
   1525b:	10 8d 02 45 0e 18    	adc    %cl,0x180e4502(%rbp)
   15261:	8c 03                	mov    %es,(%rbx)
   15263:	44 0e                	rex.R (bad) 
   15265:	20 86 04 44 0e 28    	and    %al,0x280e4404(%rsi)
   1526b:	83 05 44 0e 40 02 9d 	addl   $0xffffff9d,0x2400e44(%rip)        # 24160b6 <_end+0x23eb0a6>
   15272:	0a 0e                	or     (%rsi),%cl
   15274:	28 41 0e             	sub    %al,0xe(%rcx)
   15277:	20 41 0e             	and    %al,0xe(%rcx)
   1527a:	18 42 0e             	sbb    %al,0xe(%rdx)
   1527d:	10 42 0e             	adc    %al,0xe(%rdx)
   15280:	08 46 0b             	or     %al,0xb(%rsi)
   15283:	00 10                	add    %dl,(%rax)
   15285:	00 00                	add    %al,(%rax)
   15287:	00 98 0f 00 00 94    	add    %bl,-0x6bfffff1(%rax)
   1528d:	39 ff                	cmp    %edi,%edi
   1528f:	ff 12                	call   *(%rdx)
   15291:	00 00                	add    %al,(%rax)
   15293:	00 00                	add    %al,(%rax)
   15295:	00 00                	add    %al,(%rax)
   15297:	00 28                	add    %ch,(%rax)
   15299:	00 00                	add    %al,(%rax)
   1529b:	00 ac 0f 00 00 a0 39 	add    %ch,0x39a00000(%rdi,%rcx,1)
   152a2:	ff                   	(bad)  
   152a3:	ff 97 00 00 00 00    	call   *0x0(%rdi)
   152a9:	45 0e                	rex.RB (bad) 
   152ab:	10 86 02 41 0e 18    	adc    %al,0x180e4102(%rsi)
   152b1:	83 03 44             	addl   $0x44,(%rbx)
   152b4:	0e                   	(bad)  
   152b5:	40 02 85 0a 0e 18 41 	rex add 0x41180e0a(%rbp),%al
   152bc:	0e                   	(bad)  
   152bd:	10 41 0e             	adc    %al,0xe(%rcx)
   152c0:	08 41 0b             	or     %al,0xb(%rcx)
   152c3:	00 28                	add    %ch,(%rax)
   152c5:	00 00                	add    %al,(%rax)
   152c7:	00 d8                	add    %bl,%al
   152c9:	0f 00 00             	sldt   (%rax)
   152cc:	14 3a                	adc    $0x3a,%al
   152ce:	ff                   	(bad)  
   152cf:	ff c7                	inc    %edi
   152d1:	00 00                	add    %al,(%rax)
   152d3:	00 00                	add    %al,(%rax)
   152d5:	45 0e                	rex.RB (bad) 
   152d7:	10 86 02 41 0e 18    	adc    %al,0x180e4102(%rsi)
   152dd:	83 03 44             	addl   $0x44,(%rbx)
   152e0:	0e                   	(bad)  
   152e1:	40 02 b5 0a 0e 18 41 	add    0x41180e0a(%rbp),%sil
   152e8:	0e                   	(bad)  
   152e9:	10 41 0e             	adc    %al,0xe(%rcx)
   152ec:	08 41 0b             	or     %al,0xb(%rcx)
   152ef:	00 10                	add    %dl,(%rax)
   152f1:	00 00                	add    %al,(%rax)
   152f3:	00 04 10             	add    %al,(%rax,%rdx,1)
   152f6:	00 00                	add    %al,(%rax)
   152f8:	1a c8                	sbb    %al,%cl
   152fa:	ff                   	(bad)  
   152fb:	ff 01                	incl   (%rcx)
   152fd:	00 00                	add    %al,(%rax)
   152ff:	00 00                	add    %al,(%rax)
   15301:	00 00                	add    %al,(%rax)
   15303:	00 10                	add    %dl,(%rax)
   15305:	00 00                	add    %al,(%rax)
   15307:	00 18                	add    %bl,(%rax)
   15309:	10 00                	adc    %al,(%rax)
   1530b:	00 07                	add    %al,(%rdi)
   1530d:	c8 ff ff 02          	enter  $0xffff,$0x2
   15311:	00 00                	add    %al,(%rax)
   15313:	00 00                	add    %al,(%rax)
   15315:	00 00                	add    %al,(%rax)
   15317:	00 10                	add    %dl,(%rax)
   15319:	00 00                	add    %al,(%rax)
   1531b:	00 2c 10             	add    %ch,(%rax,%rdx,1)
   1531e:	00 00                	add    %al,(%rax)
   15320:	f5                   	cmc    
   15321:	c7                   	(bad)  
   15322:	ff                   	(bad)  
   15323:	ff 02                	incl   (%rdx)
   15325:	00 00                	add    %al,(%rax)
   15327:	00 00                	add    %al,(%rax)
   15329:	00 00                	add    %al,(%rax)
   1532b:	00 10                	add    %dl,(%rax)
   1532d:	00 00                	add    %al,(%rax)
   1532f:	00 40 10             	add    %al,0x10(%rax)
   15332:	00 00                	add    %al,(%rax)
   15334:	e3 c7                	jrcxz  152fd <__GNU_EH_FRAME_HDR+0x183d>
   15336:	ff                   	(bad)  
   15337:	ff 02                	incl   (%rdx)
   15339:	00 00                	add    %al,(%rax)
   1533b:	00 00                	add    %al,(%rax)
   1533d:	00 00                	add    %al,(%rax)
   1533f:	00 10                	add    %dl,(%rax)
   15341:	00 00                	add    %al,(%rax)
   15343:	00 54 10 00          	add    %dl,0x0(%rax,%rdx,1)
   15347:	00 d1                	add    %dl,%cl
   15349:	c7                   	(bad)  
   1534a:	ff                   	(bad)  
   1534b:	ff 02                	incl   (%rdx)
   1534d:	00 00                	add    %al,(%rax)
   1534f:	00 00                	add    %al,(%rax)
   15351:	00 00                	add    %al,(%rax)
   15353:	00 10                	add    %dl,(%rax)
   15355:	00 00                	add    %al,(%rax)
   15357:	00 68 10             	add    %ch,0x10(%rax)
   1535a:	00 00                	add    %al,(%rax)
   1535c:	bf c7 ff ff 02       	mov    $0x2ffffc7,%edi
   15361:	00 00                	add    %al,(%rax)
   15363:	00 00                	add    %al,(%rax)
   15365:	00 00                	add    %al,(%rax)
   15367:	00 10                	add    %dl,(%rax)
   15369:	00 00                	add    %al,(%rax)
   1536b:	00 7c 10 00          	add    %bh,0x0(%rax,%rdx,1)
   1536f:	00 ad c7 ff ff 02    	add    %ch,0x2ffffc7(%rbp)
   15375:	00 00                	add    %al,(%rax)
   15377:	00 00                	add    %al,(%rax)
   15379:	00 00                	add    %al,(%rax)
   1537b:	00 10                	add    %dl,(%rax)
   1537d:	00 00                	add    %al,(%rax)
   1537f:	00 90 10 00 00 9b    	add    %dl,-0x64fffff0(%rax)
   15385:	c7                   	(bad)  
   15386:	ff                   	(bad)  
   15387:	ff 02                	incl   (%rdx)
   15389:	00 00                	add    %al,(%rax)
   1538b:	00 00                	add    %al,(%rax)
   1538d:	00 00                	add    %al,(%rax)
   1538f:	00 10                	add    %dl,(%rax)
   15391:	00 00                	add    %al,(%rax)
   15393:	00 a4 10 00 00 89 c7 	add    %ah,-0x38770000(%rax,%rdx,1)
   1539a:	ff                   	(bad)  
   1539b:	ff 03                	incl   (%rbx)
   1539d:	00 00                	add    %al,(%rax)
   1539f:	00 00                	add    %al,(%rax)
   153a1:	00 00                	add    %al,(%rax)
   153a3:	00 10                	add    %dl,(%rax)
   153a5:	00 00                	add    %al,(%rax)
   153a7:	00 b8 10 00 00 78    	add    %bh,0x78000010(%rax)
   153ad:	c7                   	(bad)  
   153ae:	ff                   	(bad)  
   153af:	ff 03                	incl   (%rbx)
   153b1:	00 00                	add    %al,(%rax)
   153b3:	00 00                	add    %al,(%rax)
   153b5:	00 00                	add    %al,(%rax)
   153b7:	00 10                	add    %dl,(%rax)
   153b9:	00 00                	add    %al,(%rax)
   153bb:	00 cc                	add    %cl,%ah
   153bd:	10 00                	adc    %al,(%rax)
   153bf:	00 67 c7             	add    %ah,-0x39(%rdi)
   153c2:	ff                   	(bad)  
   153c3:	ff 03                	incl   (%rbx)
   153c5:	00 00                	add    %al,(%rax)
   153c7:	00 00                	add    %al,(%rax)
   153c9:	00 00                	add    %al,(%rax)
   153cb:	00 10                	add    %dl,(%rax)
   153cd:	00 00                	add    %al,(%rax)
   153cf:	00 e0                	add    %ah,%al
   153d1:	10 00                	adc    %al,(%rax)
   153d3:	00 56 c7             	add    %dl,-0x39(%rsi)
   153d6:	ff                   	(bad)  
   153d7:	ff 03                	incl   (%rbx)
   153d9:	00 00                	add    %al,(%rax)
   153db:	00 00                	add    %al,(%rax)
   153dd:	00 00                	add    %al,(%rax)
   153df:	00 10                	add    %dl,(%rax)
   153e1:	00 00                	add    %al,(%rax)
   153e3:	00 f4                	add    %dh,%ah
   153e5:	10 00                	adc    %al,(%rax)
   153e7:	00 45 c7             	add    %al,-0x39(%rbp)
   153ea:	ff                   	(bad)  
   153eb:	ff 03                	incl   (%rbx)
   153ed:	00 00                	add    %al,(%rax)
   153ef:	00 00                	add    %al,(%rax)
   153f1:	00 00                	add    %al,(%rax)
   153f3:	00 10                	add    %dl,(%rax)
   153f5:	00 00                	add    %al,(%rax)
   153f7:	00 08                	add    %cl,(%rax)
   153f9:	11 00                	adc    %eax,(%rax)
   153fb:	00 34 c7             	add    %dh,(%rdi,%rax,8)
   153fe:	ff                   	(bad)  
   153ff:	ff 03                	incl   (%rbx)
   15401:	00 00                	add    %al,(%rax)
   15403:	00 00                	add    %al,(%rax)
   15405:	00 00                	add    %al,(%rax)
   15407:	00 10                	add    %dl,(%rax)
   15409:	00 00                	add    %al,(%rax)
   1540b:	00 1c 11             	add    %bl,(%rcx,%rdx,1)
   1540e:	00 00                	add    %al,(%rax)
   15410:	23 c7                	and    %edi,%eax
   15412:	ff                   	(bad)  
   15413:	ff 03                	incl   (%rbx)
   15415:	00 00                	add    %al,(%rax)
   15417:	00 00                	add    %al,(%rax)
   15419:	00 00                	add    %al,(%rax)
   1541b:	00 10                	add    %dl,(%rax)
   1541d:	00 00                	add    %al,(%rax)
   1541f:	00 30                	add    %dh,(%rax)
   15421:	11 00                	adc    %eax,(%rax)
   15423:	00 12                	add    %dl,(%rdx)
   15425:	c7                   	(bad)  
   15426:	ff                   	(bad)  
   15427:	ff 03                	incl   (%rbx)
   15429:	00 00                	add    %al,(%rax)
   1542b:	00 00                	add    %al,(%rax)
   1542d:	00 00                	add    %al,(%rax)
   1542f:	00 1c 00             	add    %bl,(%rax,%rax,1)
   15432:	00 00                	add    %al,(%rax)
   15434:	44 11 00             	adc    %r8d,(%rax)
   15437:	00 78 39             	add    %bh,0x39(%rax)
   1543a:	ff                   	(bad)  
   1543b:	ff 17                	call   *(%rdi)
   1543d:	00 00                	add    %al,(%rax)
   1543f:	00 00                	add    %al,(%rax)
   15441:	45 0e                	rex.RB (bad) 
   15443:	10 83 02 51 0e 08    	adc    %al,0x80e5102(%rbx)
   15449:	00 00                	add    %al,(%rax)
   1544b:	00 00                	add    %al,(%rax)
   1544d:	00 00                	add    %al,(%rax)
   1544f:	00 18                	add    %bl,(%rax)
   15451:	00 00                	add    %al,(%rax)
   15453:	00 64 11 00          	add    %ah,0x0(%rcx,%rdx,1)
   15457:	00 0b                	add    %cl,(%rbx)
   15459:	cb                   	lret   
   1545a:	ff                   	(bad)  
   1545b:	ff 43 01             	incl   0x1(%rbx)
   1545e:	00 00                	add    %al,(%rax)
   15460:	00 02                	add    %al,(%rdx)
   15462:	4b 0e                	rex.WXB (bad) 
   15464:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
   1546a:	00 00                	add    %al,(%rax)
   1546c:	18 00                	sbb    %al,(%rax)
   1546e:	00 00                	add    %al,(%rax)
   15470:	80 11 00             	adcb   $0x0,(%rcx)
   15473:	00 6f cd             	add    %ch,-0x33(%rdi)
   15476:	ff                   	(bad)  
   15477:	ff 0f                	decl   (%rdi)
   15479:	00 00                	add    %al,(%rax)
   1547b:	00 00                	add    %al,(%rax)
   1547d:	41 0e                	rex.B (bad) 
   1547f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
   15485:	00 00                	add    %al,(%rax)
   15487:	00 10                	add    %dl,(%rax)
   15489:	00 00                	add    %al,(%rax)
   1548b:	00 9c 11 00 00 d4 cd 	add    %bl,-0x322c0000(%rcx,%rdx,1)
   15492:	ff                   	(bad)  
   15493:	ff 1c 00             	lcall  *(%rax,%rax,1)
   15496:	00 00                	add    %al,(%rax)
   15498:	00 00                	add    %al,(%rax)
   1549a:	00 00                	add    %al,(%rax)
   1549c:	10 00                	adc    %al,(%rax)
   1549e:	00 00                	add    %al,(%rax)
   154a0:	b0 11                	mov    $0x11,%al
   154a2:	00 00                	add    %al,(%rax)
   154a4:	e0 cd                	loopne 15473 <__GNU_EH_FRAME_HDR+0x19b3>
   154a6:	ff                   	(bad)  
   154a7:	ff 1b                	lcall  *(%rbx)
   154a9:	00 00                	add    %al,(%rax)
   154ab:	00 00                	add    %al,(%rax)
   154ad:	00 00                	add    %al,(%rax)
   154af:	00 10                	add    %dl,(%rax)
   154b1:	00 00                	add    %al,(%rax)
   154b3:	00 c4                	add    %al,%ah
   154b5:	11 00                	adc    %eax,(%rax)
   154b7:	00 eb                	add    %ch,%bl
   154b9:	cd ff                	int    $0xff
   154bb:	ff 1c 00             	lcall  *(%rax,%rax,1)
   154be:	00 00                	add    %al,(%rax)
   154c0:	00 00                	add    %al,(%rax)
   154c2:	00 00                	add    %al,(%rax)
   154c4:	10 00                	adc    %al,(%rax)
   154c6:	00 00                	add    %al,(%rax)
   154c8:	d8 11                	fcoms  (%rcx)
   154ca:	00 00                	add    %al,(%rax)
   154cc:	f7 cd ff ff 1a 00    	test   $0x1affff,%ebp
   154d2:	00 00                	add    %al,(%rax)
   154d4:	00 00                	add    %al,(%rax)
   154d6:	00 00                	add    %al,(%rax)
   154d8:	10 00                	adc    %al,(%rax)
   154da:	00 00                	add    %al,(%rax)
   154dc:	ec                   	in     (%dx),%al
   154dd:	11 00                	adc    %eax,(%rax)
   154df:	00 01                	add    %al,(%rcx)
   154e1:	ce                   	(bad)  
   154e2:	ff                   	(bad)  
   154e3:	ff 1a                	lcall  *(%rdx)
   154e5:	00 00                	add    %al,(%rax)
   154e7:	00 00                	add    %al,(%rax)
   154e9:	00 00                	add    %al,(%rax)
   154eb:	00 10                	add    %dl,(%rax)
   154ed:	00 00                	add    %al,(%rax)
   154ef:	00 00                	add    %al,(%rax)
   154f1:	12 00                	adc    (%rax),%al
   154f3:	00 0b                	add    %cl,(%rbx)
   154f5:	ce                   	(bad)  
   154f6:	ff                   	(bad)  
   154f7:	ff 15 00 00 00 00    	call   *0x0(%rip)        # 154fd <__GNU_EH_FRAME_HDR+0x1a3d>
   154fd:	00 00                	add    %al,(%rax)
   154ff:	00 2c 00             	add    %ch,(%rax,%rax,1)
   15502:	00 00                	add    %al,(%rax)
   15504:	14 12                	adc    $0x12,%al
   15506:	00 00                	add    %al,(%rax)
   15508:	c8 38 ff ff          	enter  $0xff38,$0xff
   1550c:	74 00                	je     1550e <__GNU_EH_FRAME_HDR+0x1a4e>
   1550e:	00 00                	add    %al,(%rax)
   15510:	00 46 0e             	add    %al,0xe(%rsi)
   15513:	10 8c 02 41 0e 18 86 	adc    %cl,-0x79e7f1bf(%rdx,%rax,1)
   1551a:	03 41 0e             	add    0xe(%rcx),%eax
   1551d:	20 83 04 02 4d 0a    	and    %al,0xa4d0204(%rbx)
   15523:	0e                   	(bad)  
   15524:	18 41 0e             	sbb    %al,0xe(%rcx)
   15527:	10 42 0e             	adc    %al,0xe(%rdx)
   1552a:	08 48 0b             	or     %cl,0xb(%rax)
   1552d:	00 00                	add    %al,(%rax)
   1552f:	00 18                	add    %bl,(%rax)
   15531:	00 00                	add    %al,(%rax)
   15533:	00 44 12 00          	add    %al,0x0(%rdx,%rdx,1)
   15537:	00 18                	add    %bl,(%rax)
   15539:	39 ff                	cmp    %edi,%edi
   1553b:	ff 28                	ljmp   *(%rax)
   1553d:	00 00                	add    %al,(%rax)
   1553f:	00 00                	add    %al,(%rax)
   15541:	45 0e                	rex.RB (bad) 
   15543:	10 83 02 62 0e 08    	adc    %al,0x80e6202(%rbx)
   15549:	00 00                	add    %al,(%rax)
   1554b:	00 18                	add    %bl,(%rax)
   1554d:	00 00                	add    %al,(%rax)
   1554f:	00 60 12             	add    %ah,0x12(%rax)
   15552:	00 00                	add    %al,(%rax)
   15554:	2c 39                	sub    $0x39,%al
   15556:	ff                   	(bad)  
   15557:	ff 25 00 00 00 00    	jmp    *0x0(%rip)        # 1555d <__GNU_EH_FRAME_HDR+0x1a9d>
   1555d:	45 0e                	rex.RB (bad) 
   1555f:	10 83 02 5f 0e 08    	adc    %al,0x80e5f02(%rbx)
   15565:	00 00                	add    %al,(%rax)
   15567:	00 18                	add    %bl,(%rax)
   15569:	00 00                	add    %al,(%rax)
   1556b:	00 7c 12 00          	add    %bh,0x0(%rdx,%rdx,1)
   1556f:	00 40 39             	add    %al,0x39(%rax)
   15572:	ff                   	(bad)  
   15573:	ff 1a                	lcall  *(%rdx)
   15575:	00 00                	add    %al,(%rax)
   15577:	00 00                	add    %al,(%rax)
   15579:	45 0e                	rex.RB (bad) 
   1557b:	10 83 02 50 0e 08    	adc    %al,0x80e5002(%rbx)
   15581:	00 00                	add    %al,(%rax)
   15583:	00 10                	add    %dl,(%rax)
   15585:	00 00                	add    %al,(%rax)
   15587:	00 98 12 00 00 44    	add    %bl,0x44000012(%rax)
   1558d:	39 ff                	cmp    %edi,%edi
   1558f:	ff 23                	jmp    *(%rbx)
   15591:	00 00                	add    %al,(%rax)
   15593:	00 00                	add    %al,(%rax)
   15595:	00 00                	add    %al,(%rax)
   15597:	00 10                	add    %dl,(%rax)
   15599:	00 00                	add    %al,(%rax)
   1559b:	00 ac 12 00 00 60 39 	add    %ch,0x39600000(%rdx,%rdx,1)
   155a2:	ff                   	(bad)  
   155a3:	ff 15 00 00 00 00    	call   *0x0(%rip)        # 155a9 <__GNU_EH_FRAME_HDR+0x1ae9>
   155a9:	00 00                	add    %al,(%rax)
   155ab:	00 10                	add    %dl,(%rax)
   155ad:	00 00                	add    %al,(%rax)
   155af:	00 c0                	add    %al,%al
   155b1:	12 00                	adc    (%rax),%al
   155b3:	00 6c 39 ff          	add    %ch,-0x1(%rcx,%rdi,1)
   155b7:	ff                   	(bad)  
   155b8:	bd 00 00 00 00       	mov    $0x0,%ebp
   155bd:	00 00                	add    %al,(%rax)
   155bf:	00 10                	add    %dl,(%rax)
   155c1:	00 00                	add    %al,(%rax)
   155c3:	00 d4                	add    %dl,%ah
   155c5:	12 00                	adc    (%rax),%al
   155c7:	00 18                	add    %bl,(%rax)
   155c9:	3a ff                	cmp    %bh,%bh
   155cb:	ff                   	(bad)  
   155cc:	bd 00 00 00 00       	mov    $0x0,%ebp
   155d1:	00 00                	add    %al,(%rax)
   155d3:	00 10                	add    %dl,(%rax)
   155d5:	00 00                	add    %al,(%rax)
   155d7:	00 e8                	add    %ch,%al
   155d9:	12 00                	adc    (%rax),%al
   155db:	00 c4                	add    %al,%ah
   155dd:	3a ff                	cmp    %bh,%bh
   155df:	ff 1f                	lcall  *(%rdi)
   155e1:	00 00                	add    %al,(%rax)
   155e3:	00 00                	add    %al,(%rax)
   155e5:	00 00                	add    %al,(%rax)
   155e7:	00 10                	add    %dl,(%rax)
   155e9:	00 00                	add    %al,(%rax)
   155eb:	00 fc                	add    %bh,%ah
   155ed:	12 00                	adc    (%rax),%al
   155ef:	00 d0                	add    %dl,%al
   155f1:	3a ff                	cmp    %bh,%bh
   155f3:	ff b5 00 00 00 00    	push   0x0(%rbp)
   155f9:	00 00                	add    %al,(%rax)
   155fb:	00 10                	add    %dl,(%rax)
   155fd:	00 00                	add    %al,(%rax)
   155ff:	00 10                	add    %dl,(%rax)
   15601:	13 00                	adc    (%rax),%eax
   15603:	00 7c 3b ff          	add    %bh,-0x1(%rbx,%rdi,1)
   15607:	ff 15 00 00 00 00    	call   *0x0(%rip)        # 1560d <__GNU_EH_FRAME_HDR+0x1b4d>
   1560d:	00 00                	add    %al,(%rax)
   1560f:	00 10                	add    %dl,(%rax)
   15611:	00 00                	add    %al,(%rax)
   15613:	00 24 13             	add    %ah,(%rbx,%rdx,1)
   15616:	00 00                	add    %al,(%rax)
   15618:	88 3b                	mov    %bh,(%rbx)
   1561a:	ff                   	(bad)  
   1561b:	ff 17                	call   *(%rdi)
   1561d:	00 00                	add    %al,(%rax)
   1561f:	00 00                	add    %al,(%rax)
   15621:	00 00                	add    %al,(%rax)
   15623:	00 10                	add    %dl,(%rax)
   15625:	00 00                	add    %al,(%rax)
   15627:	00 38                	add    %bh,(%rax)
   15629:	13 00                	adc    (%rax),%eax
   1562b:	00 94 3b ff ff b5 00 	add    %dl,0xb5ffff(%rbx,%rdi,1)
   15632:	00 00                	add    %al,(%rax)
   15634:	00 00                	add    %al,(%rax)
   15636:	00 00                	add    %al,(%rax)
   15638:	10 00                	adc    %al,(%rax)
   1563a:	00 00                	add    %al,(%rax)
   1563c:	4c 13 00             	adc    (%rax),%r8
   1563f:	00 40 3c             	add    %al,0x3c(%rax)
   15642:	ff                   	(bad)  
   15643:	ff 12                	call   *(%rdx)
   15645:	00 00                	add    %al,(%rax)
   15647:	00 00                	add    %al,(%rax)
   15649:	00 00                	add    %al,(%rax)
   1564b:	00 28                	add    %ch,(%rax)
   1564d:	00 00                	add    %al,(%rax)
   1564f:	00 60 13             	add    %ah,0x13(%rax)
   15652:	00 00                	add    %al,(%rax)
   15654:	4c 3c ff             	rex.WR cmp $0xff,%al
   15657:	ff 37                	push   (%rdi)
   15659:	00 00                	add    %al,(%rax)
   1565b:	00 00                	add    %al,(%rax)
   1565d:	46 0e                	rex.RX (bad) 
   1565f:	10 8c 02 44 0e 18 86 	adc    %cl,-0x79e7f1bc(%rdx,%rax,1)
   15666:	03 44 0e 20          	add    0x20(%rsi,%rcx,1),%eax
   1566a:	83 04 65 0e 18 41 0e 	addl   $0x10,0xe41180e(,%riz,2)
   15671:	10 
   15672:	42 0e                	rex.X (bad) 
   15674:	08 00                	or     %al,(%rax)
   15676:	00 00                	add    %al,(%rax)
   15678:	4c 00 00             	rex.WR add %r8b,(%rax)
   1567b:	00 8c 13 00 00 60 3c 	add    %cl,0x3c600000(%rbx,%rdx,1)
   15682:	ff                   	(bad)  
   15683:	ff 31                	push   (%rcx)
   15685:	02 00                	add    (%rax),%al
   15687:	00 00                	add    %al,(%rax)
   15689:	46 0e                	rex.RX (bad) 
   1568b:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   15691:	8e 03                	mov    (%rbx),%es
   15693:	42 0e                	rex.X (bad) 
   15695:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   1569b:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff863164e2 <_end+0xffffffff862eb4d2>
   156a1:	06                   	(bad)  
   156a2:	41 0e                	rex.B (bad) 
   156a4:	38 83 07 47 0e 70    	cmp    %al,0x700e4707(%rbx)
   156aa:	75 0a                	jne    156b6 <__GNU_EH_FRAME_HDR+0x1bf6>
   156ac:	0e                   	(bad)  
   156ad:	38 41 0e             	cmp    %al,0xe(%rcx)
   156b0:	30 41 0e             	xor    %al,0xe(%rcx)
   156b3:	28 42 0e             	sub    %al,0xe(%rdx)
   156b6:	20 42 0e             	and    %al,0xe(%rdx)
   156b9:	18 42 0e             	sbb    %al,0xe(%rdx)
   156bc:	10 42 0e             	adc    %al,0xe(%rdx)
   156bf:	08 44 0b 00          	or     %al,0x0(%rbx,%rcx,1)
   156c3:	00 00                	add    %al,(%rax)
   156c5:	00 00                	add    %al,(%rax)
   156c7:	00 2c 00             	add    %ch,(%rax,%rax,1)
   156ca:	00 00                	add    %al,(%rax)
   156cc:	dc 13                	fcoml  (%rbx)
   156ce:	00 00                	add    %al,(%rax)
   156d0:	50                   	push   %rax
   156d1:	3e ff                	ds (bad) 
   156d3:	ff                   	(bad)  
   156d4:	df 01                	filds  (%rcx)
   156d6:	00 00                	add    %al,(%rax)
   156d8:	00 41 0e             	add    %al,0xe(%rcx)
   156db:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
   156e1:	54                   	push   %rsp
   156e2:	8f 03                	pop    (%rbx)
   156e4:	8e 04 8d 05 8c 06 83 	mov    -0x7cf973fb(,%rcx,4),%es
   156eb:	07                   	(bad)  
   156ec:	03 ae 01 0a 0c 07    	add    0x70c0a01(%rsi),%ebp
   156f2:	08 41 0b             	or     %al,0xb(%rcx)
   156f5:	00 00                	add    %al,(%rax)
   156f7:	00 10                	add    %dl,(%rax)
   156f9:	00 00                	add    %al,(%rax)
   156fb:	00 0c 14             	add    %cl,(%rsp,%rdx,1)
   156fe:	00 00                	add    %al,(%rax)
   15700:	00 40 ff             	add    %al,-0x1(%rax)
   15703:	ff 08                	decl   (%rax)
   15705:	00 00                	add    %al,(%rax)
   15707:	00 00                	add    %al,(%rax)
   15709:	00 00                	add    %al,(%rax)
   1570b:	00 10                	add    %dl,(%rax)
   1570d:	00 00                	add    %al,(%rax)
   1570f:	00 20                	add    %ah,(%rax)
   15711:	14 00                	adc    $0x0,%al
   15713:	00 fc                	add    %bh,%ah
   15715:	3f                   	(bad)  
   15716:	ff                   	(bad)  
   15717:	ff 09                	decl   (%rcx)
   15719:	00 00                	add    %al,(%rax)
   1571b:	00 00                	add    %al,(%rax)
   1571d:	00 00                	add    %al,(%rax)
   1571f:	00 10                	add    %dl,(%rax)
   15721:	00 00                	add    %al,(%rax)
   15723:	00 34 14             	add    %dh,(%rsp,%rdx,1)
   15726:	00 00                	add    %al,(%rax)
   15728:	f8                   	clc    
   15729:	3f                   	(bad)  
   1572a:	ff                   	(bad)  
   1572b:	ff 15 00 00 00 00    	call   *0x0(%rip)        # 15731 <__GNU_EH_FRAME_HDR+0x1c71>
   15731:	00 00                	add    %al,(%rax)
   15733:	00 1c 00             	add    %bl,(%rax,%rax,1)
   15736:	00 00                	add    %al,(%rax)
   15738:	48 14 00             	rex.W adc $0x0,%al
   1573b:	00 04 40             	add    %al,(%rax,%rax,2)
   1573e:	ff                   	(bad)  
   1573f:	ff                   	(bad)  
   15740:	3d 00 00 00 00       	cmp    $0x0,%eax
   15745:	45 0e                	rex.RB (bad) 
   15747:	10 83 02 54 0a 0e    	adc    %al,0xe0a5402(%rbx)
   1574d:	08 47 0b             	or     %al,0xb(%rdi)
   15750:	5c                   	pop    %rsp
   15751:	0e                   	(bad)  
   15752:	08 00                	or     %al,(%rax)
   15754:	1c 00                	sbb    $0x0,%al
   15756:	00 00                	add    %al,(%rax)
   15758:	68 14 00 00 24       	push   $0x24000014
   1575d:	40 ff                	rex (bad) 
   1575f:	ff                   	(bad)  
   15760:	3d 00 00 00 00       	cmp    $0x0,%eax
   15765:	45 0e                	rex.RB (bad) 
   15767:	10 83 02 54 0a 0e    	adc    %al,0xe0a5402(%rbx)
   1576d:	08 47 0b             	or     %al,0xb(%rdi)
   15770:	5c                   	pop    %rsp
   15771:	0e                   	(bad)  
   15772:	08 00                	or     %al,(%rax)
   15774:	24 00                	and    $0x0,%al
   15776:	00 00                	add    %al,(%rax)
   15778:	88 14 00             	mov    %dl,(%rax,%rax,1)
   1577b:	00 44 40 ff          	add    %al,-0x1(%rax,%rax,2)
   1577f:	ff                   	(bad)  
   15780:	7e 00                	jle    15782 <__GNU_EH_FRAME_HDR+0x1cc2>
   15782:	00 00                	add    %al,(%rax)
   15784:	00 4a 0e             	add    %cl,0xe(%rdx)
   15787:	10 86 02 47 0e 20    	adc    %al,0x200e4702(%rsi)
   1578d:	68 0a 0e 10 41       	push   $0x41100e0a
   15792:	0e                   	(bad)  
   15793:	08 46 0b             	or     %al,0xb(%rsi)
   15796:	78 0e                	js     157a6 <__GNU_EH_FRAME_HDR+0x1ce6>
   15798:	08 c6                	or     %al,%dh
   1579a:	00 00                	add    %al,(%rax)
   1579c:	10 00                	adc    %al,(%rax)
   1579e:	00 00                	add    %al,(%rax)
   157a0:	b0 14                	mov    $0x14,%al
   157a2:	00 00                	add    %al,(%rax)
   157a4:	9c                   	pushf  
   157a5:	40 ff                	rex (bad) 
   157a7:	ff 23                	jmp    *(%rbx)
   157a9:	00 00                	add    %al,(%rax)
   157ab:	00 00                	add    %al,(%rax)
   157ad:	00 00                	add    %al,(%rax)
   157af:	00 10                	add    %dl,(%rax)
   157b1:	00 00                	add    %al,(%rax)
   157b3:	00 c4                	add    %al,%ah
   157b5:	14 00                	adc    $0x0,%al
   157b7:	00 b8 40 ff ff 2d    	add    %bh,0x2dffff40(%rax)
   157bd:	00 00                	add    %al,(%rax)
   157bf:	00 00                	add    %al,(%rax)
   157c1:	00 00                	add    %al,(%rax)
   157c3:	00 10                	add    %dl,(%rax)
   157c5:	00 00                	add    %al,(%rax)
   157c7:	00 d8                	add    %bl,%al
   157c9:	14 00                	adc    $0x0,%al
   157cb:	00 d4                	add    %dl,%ah
   157cd:	40 ff                	rex (bad) 
   157cf:	ff 26                	jmp    *(%rsi)
   157d1:	00 00                	add    %al,(%rax)
   157d3:	00 00                	add    %al,(%rax)
   157d5:	00 00                	add    %al,(%rax)
   157d7:	00 10                	add    %dl,(%rax)
   157d9:	00 00                	add    %al,(%rax)
   157db:	00 ec                	add    %ch,%ah
   157dd:	14 00                	adc    $0x0,%al
   157df:	00 f0                	add    %dh,%al
   157e1:	40 ff                	rex (bad) 
   157e3:	ff 26                	jmp    *(%rsi)
   157e5:	00 00                	add    %al,(%rax)
   157e7:	00 00                	add    %al,(%rax)
   157e9:	00 00                	add    %al,(%rax)
   157eb:	00 10                	add    %dl,(%rax)
   157ed:	00 00                	add    %al,(%rax)
   157ef:	00 00                	add    %al,(%rax)
   157f1:	15 00 00 0c 41       	adc    $0x410c0000,%eax
   157f6:	ff                   	(bad)  
   157f7:	ff 70 00             	push   0x0(%rax)
   157fa:	00 00                	add    %al,(%rax)
   157fc:	00 00                	add    %al,(%rax)
   157fe:	00 00                	add    %al,(%rax)
   15800:	40 00 00             	rex add %al,(%rax)
   15803:	00 14 15 00 00 68 41 	add    %dl,0x41680000(,%rdx,1)
   1580a:	ff                   	(bad)  
   1580b:	ff 84 01 00 00 00 46 	incl   0x46000000(%rcx,%rax,1)
   15812:	0e                   	(bad)  
   15813:	10 8e 02 45 0e 18    	adc    %cl,0x180e4502(%rsi)
   15819:	8d 03                	lea    (%rbx),%eax
   1581b:	45 0e                	rex.RB (bad) 
   1581d:	20 8c 04 44 0e 28 86 	and    %cl,-0x79d7f1bc(%rsp,%rax,1)
   15824:	05 41 0e 30 83       	add    $0x83300e41,%eax
   15829:	06                   	(bad)  
   1582a:	4c 0e                	rex.WR (bad) 
   1582c:	60                   	(bad)  
   1582d:	02 fc                	add    %ah,%bh
   1582f:	0a 0e                	or     (%rsi),%cl
   15831:	30 41 0e             	xor    %al,0xe(%rcx)
   15834:	28 41 0e             	sub    %al,0xe(%rcx)
   15837:	20 42 0e             	and    %al,0xe(%rdx)
   1583a:	18 42 0e             	sbb    %al,0xe(%rdx)
   1583d:	10 42 0e             	adc    %al,0xe(%rdx)
   15840:	08 4b 0b             	or     %cl,0xb(%rbx)
   15843:	00 30                	add    %dh,(%rax)
   15845:	00 00                	add    %al,(%rax)
   15847:	00 58 15             	add    %bl,0x15(%rax)
   1584a:	00 00                	add    %al,(%rax)
   1584c:	b4 42                	mov    $0x42,%ah
   1584e:	ff                   	(bad)  
   1584f:	ff b5 00 00 00 00    	push   0x0(%rbp)
   15855:	46 0e                	rex.RX (bad) 
   15857:	10 8c 02 44 0e 18 86 	adc    %cl,-0x79e7f1bc(%rdx,%rax,1)
   1585e:	03 44 0e 20          	add    0x20(%rsi,%rcx,1),%eax
   15862:	83 04 47 0e          	addl   $0xe,(%rdi,%rax,2)
   15866:	30 02                	xor    %al,(%rdx)
   15868:	44 0a 0e             	or     (%rsi),%r9b
   1586b:	20 41 0e             	and    %al,0xe(%rcx)
   1586e:	18 41 0e             	sbb    %al,0xe(%rcx)
   15871:	10 42 0e             	adc    %al,0xe(%rdx)
   15874:	08 43 0b             	or     %al,0xb(%rbx)
   15877:	00 60 00             	add    %ah,0x0(%rax)
   1587a:	00 00                	add    %al,(%rax)
   1587c:	8c 15 00 00 40 43    	mov    %ss,0x43400000(%rip)        # 43415882 <_end+0x433ea872>
   15882:	ff                   	(bad)  
   15883:	ff 0d 03 00 00 00    	decl   0x3(%rip)        # 1588c <__GNU_EH_FRAME_HDR+0x1dcc>
   15889:	46 0e                	rex.RX (bad) 
   1588b:	10 8f 02 45 0e 18    	adc    %cl,0x180e4502(%rdi)
   15891:	8e 03                	mov    (%rbx),%es
   15893:	45 0e                	rex.RB (bad) 
   15895:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
   1589b:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff863166e5 <_end+0xffffffff862eb6d5>
   158a1:	06                   	(bad)  
   158a2:	44 0e                	rex.R (bad) 
   158a4:	38 83 07 47 0e 50    	cmp    %al,0x500e4707(%rbx)
   158aa:	02 94 0a 0e 38 46 0e 	add    0xe46380e(%rdx,%rcx,1),%dl
   158b1:	30 41 0e             	xor    %al,0xe(%rcx)
   158b4:	28 42 0e             	sub    %al,0xe(%rdx)
   158b7:	20 42 0e             	and    %al,0xe(%rdx)
   158ba:	18 42 0e             	sbb    %al,0xe(%rdx)
   158bd:	10 42 0e             	adc    %al,0xe(%rdx)
   158c0:	08 49 0b             	or     %cl,0xb(%rcx)
   158c3:	02 7e 0a             	add    0xa(%rsi),%bh
   158c6:	0e                   	(bad)  
   158c7:	38 41 0e             	cmp    %al,0xe(%rcx)
   158ca:	30 41 0e             	xor    %al,0xe(%rcx)
   158cd:	28 42 0e             	sub    %al,0xe(%rdx)
   158d0:	20 42 0e             	and    %al,0xe(%rdx)
   158d3:	18 42 0e             	sbb    %al,0xe(%rdx)
   158d6:	10 42 0e             	adc    %al,0xe(%rdx)
   158d9:	08 41 0b             	or     %al,0xb(%rcx)
   158dc:	4c 00 00             	rex.WR add %r8b,(%rax)
   158df:	00 f0                	add    %dh,%al
   158e1:	15 00 00 ec 45       	adc    $0x45ec0000,%eax
   158e6:	ff                   	(bad)  
   158e7:	ff                   	(bad)  
   158e8:	db 00                	fildl  (%rax)
   158ea:	00 00                	add    %al,(%rax)
   158ec:	00 46 0e             	add    %al,0xe(%rsi)
   158ef:	10 8d 02 45 0e 18    	adc    %cl,0x180e4502(%rbp)
   158f5:	8c 03                	mov    %es,(%rbx)
   158f7:	44 0e                	rex.R (bad) 
   158f9:	20 86 04 44 0e 28    	and    %al,0x280e4404(%rsi)
   158ff:	83 05 4d 0e 30 02 72 	addl   $0x72,0x2300e4d(%rip)        # 2316753 <_end+0x22eb743>
   15906:	0a 0e                	or     (%rsi),%cl
   15908:	28 41 0e             	sub    %al,0xe(%rcx)
   1590b:	20 41 0e             	and    %al,0xe(%rcx)
   1590e:	18 42 0e             	sbb    %al,0xe(%rdx)
   15911:	10 42 0e             	adc    %al,0xe(%rdx)
   15914:	08 48 0b             	or     %cl,0xb(%rax)
   15917:	51                   	push   %rcx
   15918:	0a 0e                	or     (%rsi),%cl
   1591a:	28 41 0e             	sub    %al,0xe(%rcx)
   1591d:	20 41 0e             	and    %al,0xe(%rcx)
   15920:	18 42 0e             	sbb    %al,0xe(%rdx)
   15923:	10 42 0e             	adc    %al,0xe(%rdx)
   15926:	08 49 0b             	or     %cl,0xb(%rcx)
   15929:	00 00                	add    %al,(%rax)
   1592b:	00 20                	add    %ah,(%rax)
   1592d:	00 00                	add    %al,(%rax)
   1592f:	00 40 16             	add    %al,0x16(%rax)
   15932:	00 00                	add    %al,(%rax)
   15934:	7c 46                	jl     1597c <__GNU_EH_FRAME_HDR+0x1ebc>
   15936:	ff                   	(bad)  
   15937:	ff 02                	incl   (%rdx)
   15939:	01 00                	add    %eax,(%rax)
   1593b:	00 00                	add    %al,(%rax)
   1593d:	45 0e                	rex.RB (bad) 
   1593f:	10 83 02 44 0e 60    	adc    %al,0x600e4402(%rbx)
   15945:	02 c6                	add    %dh,%al
   15947:	0a 0e                	or     (%rsi),%cl
   15949:	10 41 0e             	adc    %al,0xe(%rcx)
   1594c:	08 48 0b             	or     %cl,0xb(%rax)
   1594f:	00 18                	add    %bl,(%rax)
   15951:	00 00                	add    %al,(%rax)
   15953:	00 64 16 00          	add    %ah,0x0(%rsi,%rdx,1)
   15957:	00 68 47             	add    %ch,0x47(%rax)
   1595a:	ff                   	(bad)  
   1595b:	ff 45 00             	incl   0x0(%rbp)
   1595e:	00 00                	add    %al,(%rax)
   15960:	00 45 0e             	add    %al,0xe(%rbp)
   15963:	10 83 02 76 0a 0e    	adc    %al,0xe0a7602(%rbx)
   15969:	08 45 0b             	or     %al,0xb(%rbp)
   1596c:	24 00                	and    $0x0,%al
   1596e:	00 00                	add    %al,(%rax)
   15970:	80 16 00             	adcb   $0x0,(%rsi)
   15973:	00 9c 47 ff ff 39 00 	add    %bl,0x39ffff(%rdi,%rax,2)
   1597a:	00 00                	add    %al,(%rax)
   1597c:	00 45 0e             	add    %al,0xe(%rbp)
   1597f:	10 86 02 41 0e 18    	adc    %al,0x180e4102(%rsi)
   15985:	83 03 44             	addl   $0x44,(%rbx)
   15988:	0e                   	(bad)  
   15989:	20 6c 0e 18          	and    %ch,0x18(%rsi,%rcx,1)
   1598d:	41 0e                	rex.B (bad) 
   1598f:	10 41 0e             	adc    %al,0xe(%rcx)
   15992:	08 00                	or     %al,(%rax)
   15994:	28 00                	sub    %al,(%rax)
   15996:	00 00                	add    %al,(%rax)
   15998:	a8 16                	test   $0x16,%al
   1599a:	00 00                	add    %al,(%rax)
   1599c:	b4 47                	mov    $0x47,%ah
   1599e:	ff                   	(bad)  
   1599f:	ff d7                	call   *%rdi
   159a1:	00 00                	add    %al,(%rax)
   159a3:	00 00                	add    %al,(%rax)
   159a5:	45 0e                	rex.RB (bad) 
   159a7:	10 86 02 4b 0d 06    	adc    %al,0x60d4b02(%rsi)
   159ad:	44 8d 03             	lea    (%rbx),%r8d
   159b0:	8c 04 44             	mov    %es,(%rsp,%rax,2)
   159b3:	83 05 02 7f 0a 0c 07 	addl   $0x7,0xc0a7f02(%rip)        # c0bd8bc <_end+0xc0928ac>
   159ba:	08 49 0b             	or     %cl,0xb(%rcx)
   159bd:	00 00                	add    %al,(%rax)
   159bf:	00 28                	add    %ch,(%rax)
   159c1:	00 00                	add    %al,(%rax)
   159c3:	00 d4                	add    %dl,%ah
   159c5:	16                   	(bad)  
   159c6:	00 00                	add    %al,(%rax)
   159c8:	68 48 ff ff ef       	push   $0xffffffffefffff48
   159cd:	00 00                	add    %al,(%rax)
   159cf:	00 00                	add    %al,(%rax)
   159d1:	45 0e                	rex.RB (bad) 
   159d3:	10 86 02 47 0d 06    	adc    %al,0x60d4702(%rsi)
   159d9:	51                   	push   %rcx
   159da:	8f 03                	pop    (%rbx)
   159dc:	8e 04 8d 05 8c 06 83 	mov    -0x7cf973fb(,%rcx,4),%es
   159e3:	07                   	(bad)  
   159e4:	02 cc                	add    %ah,%cl
   159e6:	0a 0c 07             	or     (%rdi,%rax,1),%cl
   159e9:	08 41 0b             	or     %al,0xb(%rcx)
   159ec:	5c                   	pop    %rsp
   159ed:	00 00                	add    %al,(%rax)
   159ef:	00 00                	add    %al,(%rax)
   159f1:	17                   	(bad)  
   159f2:	00 00                	add    %al,(%rax)
   159f4:	2c 49                	sub    $0x49,%al
   159f6:	ff                   	(bad)  
   159f7:	ff c6                	inc    %esi
   159f9:	00 00                	add    %al,(%rax)
   159fb:	00 00                	add    %al,(%rax)
   159fd:	46 0e                	rex.RX (bad) 
   159ff:	10 8d 02 42 0e 18    	adc    %cl,0x180e4202(%rbp)
   15a05:	8c 03                	mov    %es,(%rbx)
   15a07:	41 0e                	rex.B (bad) 
   15a09:	20 86 04 41 0e 28    	and    %al,0x280e4104(%rsi)
   15a0f:	83 05 47 0e 30 02 55 	addl   $0x55,0x2300e47(%rip)        # 231685d <_end+0x22eb84d>
   15a16:	0a 0e                	or     (%rsi),%cl
   15a18:	28 41 0e             	sub    %al,0xe(%rcx)
   15a1b:	20 41 0e             	and    %al,0xe(%rcx)
   15a1e:	18 42 0e             	sbb    %al,0xe(%rdx)
   15a21:	10 42 0e             	adc    %al,0xe(%rdx)
   15a24:	08 44 0b 44          	or     %al,0x44(%rbx,%rcx,1)
   15a28:	0a 0e                	or     (%rsi),%cl
   15a2a:	28 46 0e             	sub    %al,0xe(%rsi)
   15a2d:	20 41 0e             	and    %al,0xe(%rcx)
   15a30:	18 42 0e             	sbb    %al,0xe(%rdx)
   15a33:	10 42 0e             	adc    %al,0xe(%rdx)
   15a36:	08 41 0b             	or     %al,0xb(%rcx)
   15a39:	71 0a                	jno    15a45 <__GNU_EH_FRAME_HDR+0x1f85>
   15a3b:	0e                   	(bad)  
   15a3c:	28 41 0e             	sub    %al,0xe(%rcx)
   15a3f:	20 41 0e             	and    %al,0xe(%rcx)
   15a42:	18 42 0e             	sbb    %al,0xe(%rdx)
   15a45:	10 42 0e             	adc    %al,0xe(%rdx)
   15a48:	08 41 0b             	or     %al,0xb(%rcx)
   15a4b:	00 28                	add    %ch,(%rax)
   15a4d:	00 00                	add    %al,(%rax)
   15a4f:	00 60 17             	add    %ah,0x17(%rax)
   15a52:	00 00                	add    %al,(%rax)
   15a54:	9c                   	pushf  
   15a55:	49 ff                	rex.WB (bad) 
   15a57:	ff 64 01 00          	jmp    *0x0(%rcx,%rax,1)
   15a5b:	00 00                	add    %al,(%rax)
   15a5d:	45 0e                	rex.RB (bad) 
   15a5f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
   15a65:	47 8e 03             	rex.RXB mov (%r11),%es
   15a68:	8d 04 8c             	lea    (%rsp,%rcx,4),%eax
   15a6b:	05 83 06 02 93       	add    $0x93020683,%eax
   15a70:	0a 0c 07             	or     (%rdi,%rax,1),%cl
   15a73:	08 46 0b             	or     %al,0xb(%rsi)
   15a76:	00 00                	add    %al,(%rax)
   15a78:	2c 00                	sub    $0x0,%al
   15a7a:	00 00                	add    %al,(%rax)
   15a7c:	8c 17                	mov    %ss,(%rdi)
   15a7e:	00 00                	add    %al,(%rax)
   15a80:	e0 4a                	loopne 15acc <__GNU_EH_FRAME_HDR+0x200c>
   15a82:	ff                   	(bad)  
   15a83:	ff                   	(bad)  
   15a84:	3d 02 00 00 00       	cmp    $0x2,%eax
   15a89:	45 0e                	rex.RB (bad) 
   15a8b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
   15a91:	54                   	push   %rsp
   15a92:	8f 03                	pop    (%rbx)
   15a94:	8e 04 8d 05 8c 06 83 	mov    -0x7cf973fb(,%rcx,4),%es
   15a9b:	07                   	(bad)  
   15a9c:	03 32                	add    (%rdx),%esi
   15a9e:	01 0a                	add    %ecx,(%rdx)
   15aa0:	0c 07                	or     $0x7,%al
   15aa2:	08 42 0b             	or     %al,0xb(%rdx)
   15aa5:	00 00                	add    %al,(%rax)
   15aa7:	00 30                	add    %dh,(%rax)
   15aa9:	00 00                	add    %al,(%rax)
   15aab:	00 bc 17 00 00 f0 4c 	add    %bh,0x4cf00000(%rdi,%rdx,1)
   15ab2:	ff                   	(bad)  
   15ab3:	ff 66 00             	jmp    *0x0(%rsi)
   15ab6:	00 00                	add    %al,(%rax)
   15ab8:	00 46 0e             	add    %al,0xe(%rsi)
   15abb:	10 8d 02 45 0e 18    	adc    %cl,0x180e4502(%rbp)
   15ac1:	8c 03                	mov    %es,(%rbx)
   15ac3:	41 0e                	rex.B (bad) 
   15ac5:	20 83 04 44 0e 30    	and    %al,0x300e4404(%rbx)
   15acb:	66 0a 0e             	data16 or (%rsi),%cl
   15ace:	20 4a 0e             	and    %cl,0xe(%rdx)
   15ad1:	18 42 0e             	sbb    %al,0xe(%rdx)
   15ad4:	10 42 0e             	adc    %al,0xe(%rdx)
   15ad7:	08 4c 0b 00          	or     %cl,0x0(%rbx,%rcx,1)
   15adb:	00 30                	add    %dh,(%rax)
   15add:	00 00                	add    %al,(%rax)
   15adf:	00 f0                	add    %dh,%al
   15ae1:	17                   	(bad)  
   15ae2:	00 00                	add    %al,(%rax)
   15ae4:	2c 4d                	sub    $0x4d,%al
   15ae6:	ff                   	(bad)  
   15ae7:	ff f5                	push   %rbp
   15ae9:	00 00                	add    %al,(%rax)
   15aeb:	00 00                	add    %al,(%rax)
   15aed:	46 0e                	rex.RX (bad) 
   15aef:	10 8c 02 44 0e 18 86 	adc    %cl,-0x79e7f1bc(%rdx,%rax,1)
   15af6:	03 41 0e             	add    0xe(%rcx),%eax
   15af9:	20 83 04 47 0e 30    	and    %al,0x300e4704(%rbx)
   15aff:	02 a3 0a 0e 20 41    	add    0x41200e0a(%rbx),%ah
   15b05:	0e                   	(bad)  
   15b06:	18 41 0e             	sbb    %al,0xe(%rcx)
   15b09:	10 42 0e             	adc    %al,0xe(%rdx)
   15b0c:	08 47 0b             	or     %al,0xb(%rdi)
   15b0f:	00 34 00             	add    %dh,(%rax,%rax,1)
   15b12:	00 00                	add    %al,(%rax)
   15b14:	24 18                	and    $0x18,%al
   15b16:	00 00                	add    %al,(%rax)
   15b18:	f8                   	clc    
   15b19:	4d ff                	rex.WRB (bad) 
   15b1b:	ff 48 00             	decl   0x0(%rax)
   15b1e:	00 00                	add    %al,(%rax)
   15b20:	00 46 0e             	add    %al,0xe(%rsi)
   15b23:	10 8d 02 45 0e 18    	adc    %cl,0x180e4502(%rbp)
   15b29:	8c 03                	mov    %es,(%rbx)
   15b2b:	44 0e                	rex.R (bad) 
   15b2d:	20 86 04 44 0e 28    	and    %al,0x280e4404(%rsi)
   15b33:	83 05 44 0e 30 6a 0e 	addl   $0xe,0x6a300e44(%rip)        # 6a31697e <_end+0x6a2eb96e>
   15b3a:	28 41 0e             	sub    %al,0xe(%rcx)
   15b3d:	20 41 0e             	and    %al,0xe(%rcx)
   15b40:	18 42 0e             	sbb    %al,0xe(%rdx)
   15b43:	10 42 0e             	adc    %al,0xe(%rdx)
   15b46:	08 00                	or     %al,(%rax)
   15b48:	74 00                	je     15b4a <__GNU_EH_FRAME_HDR+0x208a>
   15b4a:	00 00                	add    %al,(%rax)
   15b4c:	5c                   	pop    %rsp
   15b4d:	18 00                	sbb    %al,(%rax)
   15b4f:	00 10                	add    %dl,(%rax)
   15b51:	4e ff                	rex.WRX (bad) 
   15b53:	ff 1c 01             	lcall  *(%rcx,%rax,1)
   15b56:	00 00                	add    %al,(%rax)
   15b58:	00 46 0e             	add    %al,0xe(%rsi)
   15b5b:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   15b61:	8e 03                	mov    (%rbx),%es
   15b63:	42 0e                	rex.X (bad) 
   15b65:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   15b6b:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff863169b5 <_end+0xffffffff862eb9a5>
   15b71:	06                   	(bad)  
   15b72:	44 0e                	rex.R (bad) 
   15b74:	38 83 07 44 0e 50    	cmp    %al,0x500e4407(%rbx)
   15b7a:	7f 0a                	jg     15b86 <__GNU_EH_FRAME_HDR+0x20c6>
   15b7c:	0e                   	(bad)  
   15b7d:	38 41 0e             	cmp    %al,0xe(%rcx)
   15b80:	30 41 0e             	xor    %al,0xe(%rcx)
   15b83:	28 42 0e             	sub    %al,0xe(%rdx)
   15b86:	20 42 0e             	and    %al,0xe(%rdx)
   15b89:	18 42 0e             	sbb    %al,0xe(%rdx)
   15b8c:	10 42 0e             	adc    %al,0xe(%rdx)
   15b8f:	08 47 0b             	or     %al,0xb(%rdi)
   15b92:	44 0a 0e             	or     (%rsi),%r9b
   15b95:	38 46 0e             	cmp    %al,0xe(%rsi)
   15b98:	30 41 0e             	xor    %al,0xe(%rcx)
   15b9b:	28 42 0e             	sub    %al,0xe(%rdx)
   15b9e:	20 42 0e             	and    %al,0xe(%rdx)
   15ba1:	18 42 0e             	sbb    %al,0xe(%rdx)
   15ba4:	10 42 0e             	adc    %al,0xe(%rdx)
   15ba7:	08 45 0b             	or     %al,0xb(%rbp)
   15baa:	02 8f 0e 38 43 0e    	add    0xe43380e(%rdi),%cl
   15bb0:	30 41 0e             	xor    %al,0xe(%rcx)
   15bb3:	28 42 0e             	sub    %al,0xe(%rdx)
   15bb6:	20 42 0e             	and    %al,0xe(%rdx)
   15bb9:	18 42 0e             	sbb    %al,0xe(%rdx)
   15bbc:	10 42 0e             	adc    %al,0xe(%rdx)
   15bbf:	08 78 00             	or     %bh,0x0(%rax)
   15bc2:	00 00                	add    %al,(%rax)
   15bc4:	d4                   	(bad)  
   15bc5:	18 00                	sbb    %al,(%rax)
   15bc7:	00 b8 4e ff ff 0b    	add    %bh,0xbffff4e(%rax)
   15bcd:	01 00                	add    %eax,(%rax)
   15bcf:	00 00                	add    %al,(%rax)
   15bd1:	46 0e                	rex.RX (bad) 
   15bd3:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   15bd9:	8e 03                	mov    (%rbx),%es
   15bdb:	42 0e                	rex.X (bad) 
   15bdd:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   15be3:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff86316a2a <_end+0xffffffff862eba1a>
   15be9:	06                   	(bad)  
   15bea:	44 0e                	rex.R (bad) 
   15bec:	38 83 07 47 0e 40    	cmp    %al,0x400e4707(%rbx)
   15bf2:	02 85 0a 0e 38 41    	add    0x41380e0a(%rbp),%al
   15bf8:	0e                   	(bad)  
   15bf9:	30 41 0e             	xor    %al,0xe(%rcx)
   15bfc:	28 42 0e             	sub    %al,0xe(%rdx)
   15bff:	20 42 0e             	and    %al,0xe(%rdx)
   15c02:	18 42 0e             	sbb    %al,0xe(%rdx)
   15c05:	10 42 0e             	adc    %al,0xe(%rdx)
   15c08:	08 49 0b             	or     %cl,0xb(%rcx)
   15c0b:	44 0a 0e             	or     (%rsi),%r9b
   15c0e:	38 46 0e             	cmp    %al,0xe(%rsi)
   15c11:	30 41 0e             	xor    %al,0xe(%rcx)
   15c14:	28 42 0e             	sub    %al,0xe(%rdx)
   15c17:	20 42 0e             	and    %al,0xe(%rdx)
   15c1a:	18 42 0e             	sbb    %al,0xe(%rdx)
   15c1d:	10 42 0e             	adc    %al,0xe(%rdx)
   15c20:	08 45 0b             	or     %al,0xb(%rbp)
   15c23:	6f                   	outsl  %ds:(%rsi),(%dx)
   15c24:	0a 0e                	or     (%rsi),%cl
   15c26:	38 41 0e             	cmp    %al,0xe(%rcx)
   15c29:	30 41 0e             	xor    %al,0xe(%rcx)
   15c2c:	28 42 0e             	sub    %al,0xe(%rdx)
   15c2f:	20 42 0e             	and    %al,0xe(%rdx)
   15c32:	18 42 0e             	sbb    %al,0xe(%rdx)
   15c35:	10 42 0e             	adc    %al,0xe(%rdx)
   15c38:	08 41 0b             	or     %al,0xb(%rcx)
   15c3b:	00 2c 00             	add    %ch,(%rax,%rax,1)
   15c3e:	00 00                	add    %al,(%rax)
   15c40:	50                   	push   %rax
   15c41:	19 00                	sbb    %eax,(%rax)
   15c43:	00 4c 4f ff          	add    %cl,-0x1(%rdi,%rcx,2)
   15c47:	ff e7                	jmp    *%rdi
   15c49:	00 00                	add    %al,(%rax)
   15c4b:	00 00                	add    %al,(%rax)
   15c4d:	45 0e                	rex.RB (bad) 
   15c4f:	10 86 02 51 0d 06    	adc    %al,0x60d5102(%rsi)
   15c55:	44 8f 03             	rex.R pop (%rbx)
   15c58:	8e 04 47             	mov    (%rdi,%rax,2),%es
   15c5b:	8d 05 8c 06 4f 83    	lea    -0x7cb0f974(%rip),%eax        # ffffffff835062ed <_end+0xffffffff834db2dd>
   15c61:	07                   	(bad)  
   15c62:	02 b1 0a 0c 07 08    	add    0x8070c0a(%rcx),%dh
   15c68:	41 0b 00             	or     (%r8),%eax
   15c6b:	00 78 00             	add    %bh,0x0(%rax)
   15c6e:	00 00                	add    %al,(%rax)
   15c70:	80 19 00             	sbbb   $0x0,(%rcx)
   15c73:	00 0c 50             	add    %cl,(%rax,%rdx,2)
   15c76:	ff                   	(bad)  
   15c77:	ff                   	(bad)  
   15c78:	7f 01                	jg     15c7b <__GNU_EH_FRAME_HDR+0x21bb>
   15c7a:	00 00                	add    %al,(%rax)
   15c7c:	00 46 0e             	add    %al,0xe(%rsi)
   15c7f:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   15c85:	8e 03                	mov    (%rbx),%es
   15c87:	42 0e                	rex.X (bad) 
   15c89:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   15c8f:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff86316ad6 <_end+0xffffffff862ebac6>
   15c95:	06                   	(bad)  
   15c96:	41 0e                	rex.B (bad) 
   15c98:	38 83 07 47 0e 50    	cmp    %al,0x500e4707(%rbx)
   15c9e:	02 ad 0a 0e 38 41    	add    0x41380e0a(%rbp),%ch
   15ca4:	0e                   	(bad)  
   15ca5:	30 41 0e             	xor    %al,0xe(%rcx)
   15ca8:	28 42 0e             	sub    %al,0xe(%rdx)
   15cab:	20 42 0e             	and    %al,0xe(%rdx)
   15cae:	18 42 0e             	sbb    %al,0xe(%rdx)
   15cb1:	10 42 0e             	adc    %al,0xe(%rdx)
   15cb4:	08 41 0b             	or     %al,0xb(%rcx)
   15cb7:	4d 0a 0e             	rex.WRB or (%r14),%r9b
   15cba:	38 46 0e             	cmp    %al,0xe(%rsi)
   15cbd:	30 41 0e             	xor    %al,0xe(%rcx)
   15cc0:	28 42 0e             	sub    %al,0xe(%rdx)
   15cc3:	20 42 0e             	and    %al,0xe(%rdx)
   15cc6:	18 42 0e             	sbb    %al,0xe(%rdx)
   15cc9:	10 42 0e             	adc    %al,0xe(%rdx)
   15ccc:	08 47 0b             	or     %al,0xb(%rdi)
   15ccf:	02 82 0e 38 43 0e    	add    0xe43380e(%rdx),%al
   15cd5:	30 41 0e             	xor    %al,0xe(%rcx)
   15cd8:	28 42 0e             	sub    %al,0xe(%rdx)
   15cdb:	20 42 0e             	and    %al,0xe(%rdx)
   15cde:	18 42 0e             	sbb    %al,0xe(%rdx)
   15ce1:	10 42 0e             	adc    %al,0xe(%rdx)
   15ce4:	08 00                	or     %al,(%rax)
   15ce6:	00 00                	add    %al,(%rax)
   15ce8:	6c                   	insb   (%dx),%es:(%rdi)
   15ce9:	00 00                	add    %al,(%rax)
   15ceb:	00 fc                	add    %bh,%ah
   15ced:	19 00                	sbb    %eax,(%rax)
   15cef:	00 10                	add    %dl,(%rax)
   15cf1:	51                   	push   %rcx
   15cf2:	ff                   	(bad)  
   15cf3:	ff 49 01             	decl   0x1(%rcx)
   15cf6:	00 00                	add    %al,(%rax)
   15cf8:	00 46 0e             	add    %al,0xe(%rsi)
   15cfb:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   15d01:	8e 03                	mov    (%rbx),%es
   15d03:	42 0e                	rex.X (bad) 
   15d05:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
   15d0b:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff86316b55 <_end+0xffffffff862ebb45>
   15d11:	06                   	(bad)  
   15d12:	44 0e                	rex.R (bad) 
   15d14:	38 83 07 47 0e 60    	cmp    %al,0x600e4707(%rbx)
   15d1a:	02 4b 0a             	add    0xa(%rbx),%cl
   15d1d:	0e                   	(bad)  
   15d1e:	38 43 0e             	cmp    %al,0xe(%rbx)
   15d21:	30 41 0e             	xor    %al,0xe(%rcx)
   15d24:	28 42 0e             	sub    %al,0xe(%rdx)
   15d27:	20 42 0e             	and    %al,0xe(%rdx)
   15d2a:	18 42 0e             	sbb    %al,0xe(%rdx)
   15d2d:	10 42 0e             	adc    %al,0xe(%rdx)
   15d30:	08 4b 0b             	or     %cl,0xb(%rbx)
   15d33:	02 45 0e             	add    0xe(%rbp),%al
   15d36:	68 47 0e 70 5c       	push   $0x5c700e47
   15d3b:	0e                   	(bad)  
   15d3c:	68 41 0e 60 44       	push   $0x44600e41
   15d41:	0a 0e                	or     (%rsi),%cl
   15d43:	38 41 0e             	cmp    %al,0xe(%rcx)
   15d46:	30 41 0e             	xor    %al,0xe(%rcx)
   15d49:	28 42 0e             	sub    %al,0xe(%rdx)
   15d4c:	20 42 0e             	and    %al,0xe(%rdx)
   15d4f:	18 42 0e             	sbb    %al,0xe(%rdx)
   15d52:	10 42 0e             	adc    %al,0xe(%rdx)
   15d55:	08 41 0b             	or     %al,0xb(%rcx)
   15d58:	3c 00                	cmp    $0x0,%al
   15d5a:	00 00                	add    %al,(%rax)
   15d5c:	6c                   	insb   (%dx),%es:(%rdi)
   15d5d:	1a 00                	sbb    (%rax),%al
   15d5f:	00 f0                	add    %dh,%al
   15d61:	51                   	push   %rcx
   15d62:	ff                   	(bad)  
   15d63:	ff                   	(bad)  
   15d64:	ed                   	in     (%dx),%eax
   15d65:	00 00                	add    %al,(%rax)
   15d67:	00 00                	add    %al,(%rax)
   15d69:	46 0e                	rex.RX (bad) 
   15d6b:	10 8d 02 42 0e 18    	adc    %cl,0x180e4202(%rbp)
   15d71:	8c 03                	mov    %es,(%rbx)
   15d73:	41 0e                	rex.B (bad) 
   15d75:	20 86 04 41 0e 28    	and    %al,0x280e4104(%rsi)
   15d7b:	83 05 44 0e 30 4f 0a 	addl   $0xa,0x4f300e44(%rip)        # 4f316bc6 <_end+0x4f2ebbb6>
   15d82:	0e                   	(bad)  
   15d83:	28 41 0e             	sub    %al,0xe(%rcx)
   15d86:	20 41 0e             	and    %al,0xe(%rcx)
   15d89:	18 42 0e             	sbb    %al,0xe(%rdx)
   15d8c:	10 42 0e             	adc    %al,0xe(%rdx)
   15d8f:	08 45 0b             	or     %al,0xb(%rbp)
   15d92:	00 00                	add    %al,(%rax)
   15d94:	00 00                	add    %al,(%rax)
   15d96:	00 00                	add    %al,(%rax)
   15d98:	30 00                	xor    %al,(%rax)
   15d9a:	00 00                	add    %al,(%rax)
   15d9c:	ac                   	lods   %ds:(%rsi),%al
   15d9d:	1a 00                	sbb    (%rax),%al
   15d9f:	00 a0 52 ff ff 3f    	add    %ah,0x3fffff52(%rax)
   15da5:	01 00                	add    %eax,(%rax)
   15da7:	00 00                	add    %al,(%rax)
   15da9:	42 0e                	rex.X (bad) 
   15dab:	10 8c 02 41 0e 18 86 	adc    %cl,-0x79e7f1bf(%rdx,%rax,1)
   15db2:	03 41 0e             	add    0xe(%rcx),%eax
   15db5:	20 83 04 46 0e 30    	and    %al,0x300e4604(%rbx)
   15dbb:	79 0a                	jns    15dc7 <__GNU_EH_FRAME_HDR+0x2307>
   15dbd:	0e                   	(bad)  
   15dbe:	20 43 0e             	and    %al,0xe(%rbx)
   15dc1:	18 41 0e             	sbb    %al,0xe(%rcx)
   15dc4:	10 42 0e             	adc    %al,0xe(%rdx)
   15dc7:	08 47 0b             	or     %al,0xb(%rdi)
   15dca:	00 00                	add    %al,(%rax)
   15dcc:	10 00                	adc    %al,(%rax)
   15dce:	00 00                	add    %al,(%rax)
   15dd0:	e0 1a                	loopne 15dec <__GNU_EH_FRAME_HDR+0x232c>
   15dd2:	00 00                	add    %al,(%rax)
   15dd4:	ac                   	lods   %ds:(%rsi),%al
   15dd5:	53                   	push   %rbx
   15dd6:	ff                   	(bad)  
   15dd7:	ff 73 00             	push   0x0(%rbx)
   15dda:	00 00                	add    %al,(%rax)
   15ddc:	00 00                	add    %al,(%rax)
   15dde:	00 00                	add    %al,(%rax)
   15de0:	10 00                	adc    %al,(%rax)
   15de2:	00 00                	add    %al,(%rax)
   15de4:	f4                   	hlt    
   15de5:	1a 00                	sbb    (%rax),%al
   15de7:	00 18                	add    %bl,(%rax)
   15de9:	54                   	push   %rsp
   15dea:	ff                   	(bad)  
   15deb:	ff                   	(bad)  
   15dec:	7b 00                	jnp    15dee <__GNU_EH_FRAME_HDR+0x232e>
   15dee:	00 00                	add    %al,(%rax)
   15df0:	00 00                	add    %al,(%rax)
   15df2:	00 00                	add    %al,(%rax)
   15df4:	10 00                	adc    %al,(%rax)
   15df6:	00 00                	add    %al,(%rax)
   15df8:	08 1b                	or     %bl,(%rbx)
   15dfa:	00 00                	add    %al,(%rax)
   15dfc:	84 54 ff ff          	test   %dl,-0x1(%rdi,%rdi,8)
   15e00:	85 00                	test   %eax,(%rax)
   15e02:	00 00                	add    %al,(%rax)
   15e04:	00 00                	add    %al,(%rax)
   15e06:	00 00                	add    %al,(%rax)
   15e08:	10 00                	adc    %al,(%rax)
   15e0a:	00 00                	add    %al,(%rax)
   15e0c:	1c 1b                	sbb    $0x1b,%al
   15e0e:	00 00                	add    %al,(%rax)
   15e10:	00 55 ff             	add    %dl,-0x1(%rbp)
   15e13:	ff 0f                	decl   (%rdi)
   15e15:	00 00                	add    %al,(%rax)
   15e17:	00 00                	add    %al,(%rax)
   15e19:	00 00                	add    %al,(%rax)
   15e1b:	00 10                	add    %dl,(%rax)
   15e1d:	00 00                	add    %al,(%rax)
   15e1f:	00 30                	add    %dh,(%rax)
   15e21:	1b 00                	sbb    (%rax),%eax
   15e23:	00 fc                	add    %bh,%ah
   15e25:	54                   	push   %rsp
   15e26:	ff                   	(bad)  
   15e27:	ff 09                	decl   (%rcx)
   15e29:	00 00                	add    %al,(%rax)
   15e2b:	00 00                	add    %al,(%rax)
   15e2d:	00 00                	add    %al,(%rax)
   15e2f:	00 10                	add    %dl,(%rax)
   15e31:	00 00                	add    %al,(%rax)
   15e33:	00 44 1b 00          	add    %al,0x0(%rbx,%rbx,1)
   15e37:	00 f8                	add    %bh,%al
   15e39:	54                   	push   %rsp
   15e3a:	ff                   	(bad)  
   15e3b:	ff 0b                	decl   (%rbx)
   15e3d:	00 00                	add    %al,(%rax)
   15e3f:	00 00                	add    %al,(%rax)
   15e41:	00 00                	add    %al,(%rax)
   15e43:	00 10                	add    %dl,(%rax)
   15e45:	00 00                	add    %al,(%rax)
   15e47:	00 58 1b             	add    %bl,0x1b(%rax)
   15e4a:	00 00                	add    %al,(%rax)
   15e4c:	f4                   	hlt    
   15e4d:	54                   	push   %rsp
   15e4e:	ff                   	(bad)  
   15e4f:	ff 0f                	decl   (%rdi)
   15e51:	00 00                	add    %al,(%rax)
   15e53:	00 00                	add    %al,(%rax)
   15e55:	00 00                	add    %al,(%rax)
   15e57:	00 10                	add    %dl,(%rax)
   15e59:	00 00                	add    %al,(%rax)
   15e5b:	00 6c 1b 00          	add    %ch,0x0(%rbx,%rbx,1)
   15e5f:	00 f0                	add    %dh,%al
   15e61:	54                   	push   %rsp
   15e62:	ff                   	(bad)  
   15e63:	ff 12                	call   *(%rdx)
   15e65:	00 00                	add    %al,(%rax)
   15e67:	00 00                	add    %al,(%rax)
   15e69:	00 00                	add    %al,(%rax)
   15e6b:	00 1c 00             	add    %bl,(%rax,%rax,1)
   15e6e:	00 00                	add    %al,(%rax)
   15e70:	80 1b 00             	sbbb   $0x0,(%rbx)
   15e73:	00 fc                	add    %bh,%ah
   15e75:	54                   	push   %rsp
   15e76:	ff                   	(bad)  
   15e77:	ff 32                	push   (%rdx)
   15e79:	00 00                	add    %al,(%rax)
   15e7b:	00 00                	add    %al,(%rax)
   15e7d:	48 0e                	rex.W (bad) 
   15e7f:	10 58 0a             	adc    %bl,0xa(%rax)
   15e82:	0e                   	(bad)  
   15e83:	08 48 0b             	or     %cl,0xb(%rax)
   15e86:	49 0e                	rex.WB (bad) 
   15e88:	08 00                	or     %al,(%rax)
   15e8a:	00 00                	add    %al,(%rax)
   15e8c:	30 00                	xor    %al,(%rax)
   15e8e:	00 00                	add    %al,(%rax)
   15e90:	a0 1b 00 00 1c 55 ff 	movabs 0x30ffff551c00001b,%al
   15e97:	ff 30 
   15e99:	02 00                	add    (%rax),%al
   15e9b:	00 00                	add    %al,(%rax)
   15e9d:	4c 0e                	rex.WR (bad) 
   15e9f:	10 83 02 02 53 0a    	adc    %al,0xa530202(%rbx)
   15ea5:	0e                   	(bad)  
   15ea6:	08 41 0b             	or     %al,0xb(%rcx)
   15ea9:	02 a3 0a 0e 08 45    	add    0x45080e0a(%rbx),%ah
   15eaf:	0b 02                	or     (%rdx),%eax
   15eb1:	59                   	pop    %rcx
   15eb2:	0a 0e                	or     (%rsi),%cl
   15eb4:	08 47 0b             	or     %al,0xb(%rdi)
   15eb7:	02 4f 0a             	add    0xa(%rdi),%cl
   15eba:	0e                   	(bad)  
   15ebb:	08 49 0b             	or     %cl,0xb(%rcx)
   15ebe:	00 00                	add    %al,(%rax)
   15ec0:	10 00                	adc    %al,(%rax)
   15ec2:	00 00                	add    %al,(%rax)
   15ec4:	d4                   	(bad)  
   15ec5:	1b 00                	sbb    (%rax),%eax
   15ec7:	00 18                	add    %bl,(%rax)
   15ec9:	57                   	push   %rdi
   15eca:	ff                   	(bad)  
   15ecb:	ff 43 00             	incl   0x0(%rbx)
   15ece:	00 00                	add    %al,(%rax)
   15ed0:	00 00                	add    %al,(%rax)
   15ed2:	00 00                	add    %al,(%rax)
   15ed4:	48 00 00             	rex.W add %al,(%rax)
   15ed7:	00 e8                	add    %ch,%al
   15ed9:	1b 00                	sbb    (%rax),%eax
   15edb:	00 54 57 ff          	add    %dl,-0x1(%rdi,%rdx,2)
   15edf:	ff                   	(bad)  
   15ee0:	ff 01                	incl   (%rcx)
   15ee2:	00 00                	add    %al,(%rax)
   15ee4:	00 4d 0e             	add    %cl,0xe(%rbp)
   15ee7:	10 8c 02 48 0e 18 86 	adc    %cl,-0x79e7f1b8(%rdx,%rax,1)
   15eee:	03 4b 0e             	add    0xe(%rbx),%ecx
   15ef1:	20 83 04 03 0a 01    	and    %al,0x10a0304(%rbx)
   15ef7:	0a 0e                	or     (%rsi),%cl
   15ef9:	18 44 0e 10          	sbb    %al,0x10(%rsi,%rcx,1)
   15efd:	42 0e                	rex.X (bad) 
   15eff:	08 48 0b             	or     %cl,0xb(%rax)
   15f02:	4e 0a 0e             	rex.WRX or (%rsi),%r9b
   15f05:	18 41 0e             	sbb    %al,0xe(%rcx)
   15f08:	10 42 0e             	adc    %al,0xe(%rdx)
   15f0b:	08 47 0b             	or     %al,0xb(%rdi)
   15f0e:	02 9b 0a 0e 18 41    	add    0x41180e0a(%rbx),%bl
   15f14:	0e                   	(bad)  
   15f15:	10 42 0e             	adc    %al,0xe(%rdx)
   15f18:	08 41 0b             	or     %al,0xb(%rcx)
   15f1b:	00 00                	add    %al,(%rax)
   15f1d:	00 00                	add    %al,(%rax)
   15f1f:	00 54 00 00          	add    %dl,0x0(%rax,%rax,1)
   15f23:	00 34 1c             	add    %dh,(%rsp,%rbx,1)
   15f26:	00 00                	add    %al,(%rax)
   15f28:	08 59 ff             	or     %bl,-0x1(%rcx)
   15f2b:	ff f4                	push   %rsp
   15f2d:	00 00                	add    %al,(%rax)
   15f2f:	00 00                	add    %al,(%rax)
   15f31:	46 0e                	rex.RX (bad) 
   15f33:	10 8f 02 45 0e 18    	adc    %cl,0x180e4502(%rdi)
   15f39:	8e 03                	mov    (%rbx),%es
   15f3b:	45 0e                	rex.RB (bad) 
   15f3d:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
   15f43:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff86316d8d <_end+0xffffffff862ebd7d>
   15f49:	06                   	(bad)  
   15f4a:	44 0e                	rex.R (bad) 
   15f4c:	38 83 07 47 0e 50    	cmp    %al,0x500e4707(%rbx)
   15f52:	02 58 0e             	add    0xe(%rax),%bl
   15f55:	58                   	pop    %rax
   15f56:	4e 0e                	rex.WRX (bad) 
   15f58:	60                   	(bad)  
   15f59:	5e                   	pop    %rsi
   15f5a:	0e                   	(bad)  
   15f5b:	58                   	pop    %rax
   15f5c:	41 0e                	rex.B (bad) 
   15f5e:	50                   	push   %rax
   15f5f:	70 0a                	jo     15f6b <__GNU_EH_FRAME_HDR+0x24ab>
   15f61:	0e                   	(bad)  
   15f62:	38 41 0e             	cmp    %al,0xe(%rcx)
   15f65:	30 41 0e             	xor    %al,0xe(%rcx)
   15f68:	28 42 0e             	sub    %al,0xe(%rdx)
   15f6b:	20 42 0e             	and    %al,0xe(%rdx)
   15f6e:	18 42 0e             	sbb    %al,0xe(%rdx)
   15f71:	10 42 0e             	adc    %al,0xe(%rdx)
   15f74:	08 45 0b             	or     %al,0xb(%rbp)
   15f77:	00 18                	add    %bl,(%rax)
   15f79:	00 00                	add    %al,(%rax)
   15f7b:	00 8c 1c 00 00 b0 59 	add    %cl,0x59b00000(%rsp,%rbx,1)
   15f82:	ff                   	(bad)  
   15f83:	ff 1a                	lcall  *(%rdx)
   15f85:	00 00                	add    %al,(%rax)
   15f87:	00 00                	add    %al,(%rax)
   15f89:	48 0e                	rex.W (bad) 
   15f8b:	18 48 0e             	sbb    %cl,0xe(%rax)
   15f8e:	20 49 0e             	and    %cl,0xe(%rcx)
   15f91:	08 00                	or     %al,(%rax)
   15f93:	00 10                	add    %dl,(%rax)
   15f95:	00 00                	add    %al,(%rax)
   15f97:	00 a8 1c 00 00 b4    	add    %ch,-0x4bffffe4(%rax)
   15f9d:	59                   	pop    %rcx
   15f9e:	ff                   	(bad)  
   15f9f:	ff 10                	call   *(%rax)
   15fa1:	00 00                	add    %al,(%rax)
   15fa3:	00 00                	add    %al,(%rax)
   15fa5:	00 00                	add    %al,(%rax)
   15fa7:	00 10                	add    %dl,(%rax)
   15fa9:	00 00                	add    %al,(%rax)
   15fab:	00 bc 1c 00 00 b0 59 	add    %bh,0x59b00000(%rsp,%rbx,1)
   15fb2:	ff                   	(bad)  
   15fb3:	ff 10                	call   *(%rax)
   15fb5:	00 00                	add    %al,(%rax)
   15fb7:	00 00                	add    %al,(%rax)
   15fb9:	00 00                	add    %al,(%rax)
   15fbb:	00 10                	add    %dl,(%rax)
   15fbd:	00 00                	add    %al,(%rax)
   15fbf:	00 d0                	add    %dl,%al
   15fc1:	1c 00                	sbb    $0x0,%al
   15fc3:	00 ac 59 ff ff 10 00 	add    %ch,0x10ffff(%rcx,%rbx,2)
   15fca:	00 00                	add    %al,(%rax)
   15fcc:	00 00                	add    %al,(%rax)
   15fce:	00 00                	add    %al,(%rax)
   15fd0:	10 00                	adc    %al,(%rax)
   15fd2:	00 00                	add    %al,(%rax)
   15fd4:	e4 1c                	in     $0x1c,%al
   15fd6:	00 00                	add    %al,(%rax)
   15fd8:	a8 59                	test   $0x59,%al
   15fda:	ff                   	(bad)  
   15fdb:	ff 10                	call   *(%rax)
   15fdd:	00 00                	add    %al,(%rax)
   15fdf:	00 00                	add    %al,(%rax)
   15fe1:	00 00                	add    %al,(%rax)
   15fe3:	00 10                	add    %dl,(%rax)
   15fe5:	00 00                	add    %al,(%rax)
   15fe7:	00 f8                	add    %bh,%al
   15fe9:	1c 00                	sbb    $0x0,%al
   15feb:	00 a4 59 ff ff 10 00 	add    %ah,0x10ffff(%rcx,%rbx,2)
   15ff2:	00 00                	add    %al,(%rax)
   15ff4:	00 00                	add    %al,(%rax)
   15ff6:	00 00                	add    %al,(%rax)
   15ff8:	14 00                	adc    $0x0,%al
   15ffa:	00 00                	add    %al,(%rax)
   15ffc:	0c 1d                	or     $0x1d,%al
   15ffe:	00 00                	add    %al,(%rax)
   16000:	a0 59 ff ff 10 00 00 	movabs 0x10ffff59,%al
   16007:	00 00 
   16009:	00 00                	add    %al,(%rax)
   1600b:	00 00                	add    %al,(%rax)
   1600d:	00 00                	add    %al,(%rax)
   1600f:	00 40 00             	add    %al,0x0(%rax)
   16012:	00 00                	add    %al,(%rax)
   16014:	24 1d                	and    $0x1d,%al
   16016:	00 00                	add    %al,(%rax)
   16018:	98                   	cwtl   
   16019:	59                   	pop    %rcx
   1601a:	ff                   	(bad)  
   1601b:	ff b2 01 00 00 00    	push   0x1(%rdx)
   16021:	46 0e                	rex.RX (bad) 
   16023:	10 8e 02 42 0e 18    	adc    %cl,0x180e4202(%rsi)
   16029:	8d 03                	lea    (%rbx),%eax
   1602b:	45 0e                	rex.RB (bad) 
   1602d:	20 8c 04 41 0e 28 86 	and    %cl,-0x79d7f1bf(%rsp,%rax,1)
   16034:	05 41 0e 30 83       	add    $0x83300e41,%eax
   16039:	06                   	(bad)  
   1603a:	46 0e                	rex.RX (bad) 
   1603c:	40 7b 0a             	rex jnp 16049 <__GNU_EH_FRAME_HDR+0x2589>
   1603f:	0e                   	(bad)  
   16040:	30 43 0e             	xor    %al,0xe(%rbx)
   16043:	28 41 0e             	sub    %al,0xe(%rcx)
   16046:	20 42 0e             	and    %al,0xe(%rdx)
   16049:	18 42 0e             	sbb    %al,0xe(%rdx)
   1604c:	10 42 0e             	adc    %al,0xe(%rdx)
   1604f:	08 46 0b             	or     %al,0xb(%rsi)
   16052:	00 00                	add    %al,(%rax)
   16054:	6c                   	insb   (%dx),%es:(%rdi)
   16055:	00 00                	add    %al,(%rax)
   16057:	00 68 1d             	add    %ch,0x1d(%rax)
   1605a:	00 00                	add    %al,(%rax)
   1605c:	14 5b                	adc    $0x5b,%al
   1605e:	ff                   	(bad)  
   1605f:	ff f7                	push   %rdi
   16061:	02 00                	add    (%rax),%al
   16063:	00 00                	add    %al,(%rax)
   16065:	46 0e                	rex.RX (bad) 
   16067:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   1606d:	8e 03                	mov    (%rbx),%es
   1606f:	42 0e                	rex.X (bad) 
   16071:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   16077:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff86316ebe <_end+0xffffffff862ebeae>
   1607d:	06                   	(bad)  
   1607e:	41 0e                	rex.B (bad) 
   16080:	38 83 07 44 0e a0    	cmp    %al,-0x5ff1bbf9(%rbx)
   16086:	01 02                	add    %eax,(%rdx)
   16088:	a3 0a 0e 38 43 0e 30 	movabs %eax,0xe41300e43380e0a
   1608f:	41 0e 
   16091:	28 42 0e             	sub    %al,0xe(%rdx)
   16094:	20 42 0e             	and    %al,0xe(%rdx)
   16097:	18 42 0e             	sbb    %al,0xe(%rdx)
   1609a:	10 42 0e             	adc    %al,0xe(%rdx)
   1609d:	08 47 0b             	or     %al,0xb(%rdi)
   160a0:	02 b2 0e a8 01 4d    	add    0x4d01a80e(%rdx),%dh
   160a6:	0e                   	(bad)  
   160a7:	b0 01                	mov    $0x1,%al
   160a9:	55                   	push   %rbp
   160aa:	0e                   	(bad)  
   160ab:	a8 01                	test   $0x1,%al
   160ad:	41 0e                	rex.B (bad) 
   160af:	a0 01 02 94 0e a8 01 	movabs 0xe4401a80e940201,%al
   160b6:	44 0e 
   160b8:	b0 01                	mov    $0x1,%al
   160ba:	60                   	(bad)  
   160bb:	0e                   	(bad)  
   160bc:	a8 01                	test   $0x1,%al
   160be:	42 0e                	rex.X (bad) 
   160c0:	a0 01 00 00 18 00 00 	movabs 0xd800000018000001,%al
   160c7:	00 d8 
   160c9:	1d 00 00 a4 5d       	sbb    $0x5da40000,%eax
   160ce:	ff                   	(bad)  
   160cf:	ff 26                	jmp    *(%rsi)
   160d1:	00 00                	add    %al,(%rax)
   160d3:	00 00                	add    %al,(%rax)
   160d5:	4d 0e                	rex.WRB (bad) 
   160d7:	18 48 0e             	sbb    %cl,0xe(%rax)
   160da:	20 49 0e             	and    %cl,0xe(%rcx)
   160dd:	08 00                	or     %al,(%rax)
   160df:	00 38                	add    %bh,(%rax)
   160e1:	00 00                	add    %al,(%rax)
   160e3:	00 f4                	add    %dh,%ah
   160e5:	1d 00 00 b8 5d       	sbb    $0x5db80000,%eax
   160ea:	ff                   	(bad)  
   160eb:	ff b7 00 00 00 00    	push   0x0(%rdi)
   160f1:	46 0e                	rex.RX (bad) 
   160f3:	10 8d 02 45 0e 18    	adc    %cl,0x180e4502(%rbp)
   160f9:	8c 03                	mov    %es,(%rbx)
   160fb:	44 0e                	rex.R (bad) 
   160fd:	20 86 04 44 0e 28    	and    %al,0x280e4404(%rsi)
   16103:	83 05 49 0e 50 02 8d 	addl   $0xffffff8d,0x2500e49(%rip)        # 2516f53 <_end+0x24ebf43>
   1610a:	0a 0e                	or     (%rsi),%cl
   1610c:	28 43 0e             	sub    %al,0xe(%rbx)
   1610f:	20 41 0e             	and    %al,0xe(%rcx)
   16112:	18 42 0e             	sbb    %al,0xe(%rdx)
   16115:	10 42 0e             	adc    %al,0xe(%rdx)
   16118:	08 41 0b             	or     %al,0xb(%rcx)
   1611b:	00 10                	add    %dl,(%rax)
   1611d:	00 00                	add    %al,(%rax)
   1611f:	00 30                	add    %dh,(%rax)
   16121:	1e                   	(bad)  
   16122:	00 00                	add    %al,(%rax)
   16124:	3c 5e                	cmp    $0x5e,%al
   16126:	ff                   	(bad)  
   16127:	ff 10                	call   *(%rax)
   16129:	00 00                	add    %al,(%rax)
   1612b:	00 00                	add    %al,(%rax)
   1612d:	00 00                	add    %al,(%rax)
   1612f:	00 38                	add    %bh,(%rax)
   16131:	00 00                	add    %al,(%rax)
   16133:	00 44 1e 00          	add    %al,0x0(%rsi,%rbx,1)
   16137:	00 38                	add    %bh,(%rax)
   16139:	5e                   	pop    %rsi
   1613a:	ff                   	(bad)  
   1613b:	ff b7 00 00 00 00    	push   0x0(%rdi)
   16141:	46 0e                	rex.RX (bad) 
   16143:	10 8d 02 45 0e 18    	adc    %cl,0x180e4502(%rbp)
   16149:	8c 03                	mov    %es,(%rbx)
   1614b:	44 0e                	rex.R (bad) 
   1614d:	20 86 04 44 0e 28    	and    %al,0x280e4404(%rsi)
   16153:	83 05 49 0e 50 02 8d 	addl   $0xffffff8d,0x2500e49(%rip)        # 2516fa3 <_end+0x24ebf93>
   1615a:	0a 0e                	or     (%rsi),%cl
   1615c:	28 43 0e             	sub    %al,0xe(%rbx)
   1615f:	20 41 0e             	and    %al,0xe(%rcx)
   16162:	18 42 0e             	sbb    %al,0xe(%rdx)
   16165:	10 42 0e             	adc    %al,0xe(%rdx)
   16168:	08 41 0b             	or     %al,0xb(%rcx)
   1616b:	00 10                	add    %dl,(%rax)
   1616d:	00 00                	add    %al,(%rax)
   1616f:	00 80 1e 00 00 bc    	add    %al,-0x43ffffe2(%rax)
   16175:	5e                   	pop    %rsi
   16176:	ff                   	(bad)  
   16177:	ff 10                	call   *(%rax)
   16179:	00 00                	add    %al,(%rax)
   1617b:	00 00                	add    %al,(%rax)
   1617d:	00 00                	add    %al,(%rax)
   1617f:	00 38                	add    %bh,(%rax)
   16181:	00 00                	add    %al,(%rax)
   16183:	00 94 1e 00 00 b8 5e 	add    %dl,0x5eb80000(%rsi,%rbx,1)
   1618a:	ff                   	(bad)  
   1618b:	ff b7 00 00 00 00    	push   0x0(%rdi)
   16191:	46 0e                	rex.RX (bad) 
   16193:	10 8d 02 45 0e 18    	adc    %cl,0x180e4502(%rbp)
   16199:	8c 03                	mov    %es,(%rbx)
   1619b:	44 0e                	rex.R (bad) 
   1619d:	20 86 04 44 0e 28    	and    %al,0x280e4404(%rsi)
   161a3:	83 05 49 0e 50 02 8d 	addl   $0xffffff8d,0x2500e49(%rip)        # 2516ff3 <_end+0x24ebfe3>
   161aa:	0a 0e                	or     (%rsi),%cl
   161ac:	28 43 0e             	sub    %al,0xe(%rbx)
   161af:	20 41 0e             	and    %al,0xe(%rcx)
   161b2:	18 42 0e             	sbb    %al,0xe(%rdx)
   161b5:	10 42 0e             	adc    %al,0xe(%rdx)
   161b8:	08 41 0b             	or     %al,0xb(%rcx)
   161bb:	00 10                	add    %dl,(%rax)
   161bd:	00 00                	add    %al,(%rax)
   161bf:	00 d0                	add    %dl,%al
   161c1:	1e                   	(bad)  
   161c2:	00 00                	add    %al,(%rax)
   161c4:	3c 5f                	cmp    $0x5f,%al
   161c6:	ff                   	(bad)  
   161c7:	ff 10                	call   *(%rax)
   161c9:	00 00                	add    %al,(%rax)
   161cb:	00 00                	add    %al,(%rax)
   161cd:	00 00                	add    %al,(%rax)
   161cf:	00 48 00             	add    %cl,0x0(%rax)
   161d2:	00 00                	add    %al,(%rax)
   161d4:	e4 1e                	in     $0x1e,%al
   161d6:	00 00                	add    %al,(%rax)
   161d8:	38 5f ff             	cmp    %bl,-0x1(%rdi)
   161db:	ff 0d 01 00 00 00    	decl   0x1(%rip)        # 161e2 <__GNU_EH_FRAME_HDR+0x2722>
   161e1:	46 0e                	rex.RX (bad) 
   161e3:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   161e9:	8e 03                	mov    (%rbx),%es
   161eb:	42 0e                	rex.X (bad) 
   161ed:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   161f3:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff8631703a <_end+0xffffffff862ec02a>
   161f9:	06                   	(bad)  
   161fa:	41 0e                	rex.B (bad) 
   161fc:	38 83 07 44 0e 60    	cmp    %al,0x600e4407(%rbx)
   16202:	02 e8                	add    %al,%ch
   16204:	0a 0e                	or     (%rsi),%cl
   16206:	38 44 0e 30          	cmp    %al,0x30(%rsi,%rcx,1)
   1620a:	41 0e                	rex.B (bad) 
   1620c:	28 42 0e             	sub    %al,0xe(%rdx)
   1620f:	20 42 0e             	and    %al,0xe(%rdx)
   16212:	18 42 0e             	sbb    %al,0xe(%rdx)
   16215:	10 42 0e             	adc    %al,0xe(%rdx)
   16218:	08 41 0b             	or     %al,0xb(%rcx)
   1621b:	00 10                	add    %dl,(%rax)
   1621d:	00 00                	add    %al,(%rax)
   1621f:	00 30                	add    %dh,(%rax)
   16221:	1f                   	(bad)  
   16222:	00 00                	add    %al,(%rax)
   16224:	fc                   	cld    
   16225:	5f                   	pop    %rdi
   16226:	ff                   	(bad)  
   16227:	ff 10                	call   *(%rax)
   16229:	00 00                	add    %al,(%rax)
   1622b:	00 00                	add    %al,(%rax)
   1622d:	00 00                	add    %al,(%rax)
   1622f:	00 30                	add    %dh,(%rax)
   16231:	00 00                	add    %al,(%rax)
   16233:	00 44 1f 00          	add    %al,0x0(%rdi,%rbx,1)
   16237:	00 f8                	add    %bh,%al
   16239:	5f                   	pop    %rdi
   1623a:	ff                   	(bad)  
   1623b:	ff                   	(bad)  
   1623c:	dc 00                	faddl  (%rax)
   1623e:	00 00                	add    %al,(%rax)
   16240:	00 46 0e             	add    %al,0xe(%rsi)
   16243:	10 8c 02 41 0e 18 86 	adc    %cl,-0x79e7f1bf(%rdx,%rax,1)
   1624a:	03 46 0e             	add    0xe(%rsi),%eax
   1624d:	20 83 04 44 0e 40    	and    %al,0x400e4404(%rbx)
   16253:	02 b3 0a 0e 20 43    	add    0x43200e0a(%rbx),%dh
   16259:	0e                   	(bad)  
   1625a:	18 41 0e             	sbb    %al,0xe(%rcx)
   1625d:	10 42 0e             	adc    %al,0xe(%rdx)
   16260:	08 46 0b             	or     %al,0xb(%rsi)
   16263:	00 28                	add    %ch,(%rax)
   16265:	00 00                	add    %al,(%rax)
   16267:	00 78 1f             	add    %bh,0x1f(%rax)
   1626a:	00 00                	add    %al,(%rax)
   1626c:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
   1626d:	60                   	(bad)  
   1626e:	ff                   	(bad)  
   1626f:	ff                   	(bad)  
   16270:	dc 00                	faddl  (%rax)
   16272:	00 00                	add    %al,(%rax)
   16274:	00 45 0e             	add    %al,0xe(%rbp)
   16277:	10 86 02 41 0e 18    	adc    %al,0x180e4102(%rsi)
   1627d:	83 03 49             	addl   $0x49,(%rbx)
   16280:	0e                   	(bad)  
   16281:	40 02 b5 0a 0e 18 43 	add    0x43180e0a(%rbp),%sil
   16288:	0e                   	(bad)  
   16289:	10 41 0e             	adc    %al,0xe(%rcx)
   1628c:	08 48 0b             	or     %cl,0xb(%rax)
   1628f:	00 40 00             	add    %al,0x0(%rax)
   16292:	00 00                	add    %al,(%rax)
   16294:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
   16295:	1f                   	(bad)  
   16296:	00 00                	add    %al,(%rax)
   16298:	58                   	pop    %rax
   16299:	61                   	(bad)  
   1629a:	ff                   	(bad)  
   1629b:	ff                   	(bad)  
   1629c:	ef                   	out    %eax,(%dx)
   1629d:	00 00                	add    %al,(%rax)
   1629f:	00 00                	add    %al,(%rax)
   162a1:	46 0e                	rex.RX (bad) 
   162a3:	10 8e 02 42 0e 18    	adc    %cl,0x180e4202(%rsi)
   162a9:	8d 03                	lea    (%rbx),%eax
   162ab:	42 0e                	rex.X (bad) 
   162ad:	20 8c 04 47 0e 28 86 	and    %cl,-0x79d7f1b9(%rsp,%rax,1)
   162b4:	05 41 0e 30 83       	add    $0x83300e41,%eax
   162b9:	06                   	(bad)  
   162ba:	44 0e                	rex.R (bad) 
   162bc:	50                   	push   %rax
   162bd:	02 c8                	add    %al,%cl
   162bf:	0a 0e                	or     (%rsi),%cl
   162c1:	30 44 0e 28          	xor    %al,0x28(%rsi,%rcx,1)
   162c5:	41 0e                	rex.B (bad) 
   162c7:	20 42 0e             	and    %al,0xe(%rdx)
   162ca:	18 42 0e             	sbb    %al,0xe(%rdx)
   162cd:	10 42 0e             	adc    %al,0xe(%rdx)
   162d0:	08 41 0b             	or     %al,0xb(%rcx)
   162d3:	00 10                	add    %dl,(%rax)
   162d5:	00 00                	add    %al,(%rax)
   162d7:	00 e8                	add    %ch,%al
   162d9:	1f                   	(bad)  
   162da:	00 00                	add    %al,(%rax)
   162dc:	04 62                	add    $0x62,%al
   162de:	ff                   	(bad)  
   162df:	ff 10                	call   *(%rax)
   162e1:	00 00                	add    %al,(%rax)
   162e3:	00 00                	add    %al,(%rax)
   162e5:	00 00                	add    %al,(%rax)
   162e7:	00 34 00             	add    %dh,(%rax,%rax,1)
   162ea:	00 00                	add    %al,(%rax)
   162ec:	fc                   	cld    
   162ed:	1f                   	(bad)  
   162ee:	00 00                	add    %al,(%rax)
   162f0:	00 62 ff             	add    %ah,-0x1(%rdx)
   162f3:	ff 5c 00 00          	lcall  *0x0(%rax,%rax,1)
   162f7:	00 00                	add    %al,(%rax)
   162f9:	45 0e                	rex.RB (bad) 
   162fb:	10 86 02 44 0e 18    	adc    %al,0x180e4402(%rsi)
   16301:	83 03 47             	addl   $0x47,(%rbx)
   16304:	0e                   	(bad)  
   16305:	20 73 0a             	and    %dh,0xa(%rbx)
   16308:	0e                   	(bad)  
   16309:	18 43 0e             	sbb    %al,0xe(%rbx)
   1630c:	10 41 0e             	adc    %al,0xe(%rcx)
   1630f:	08 49 0b             	or     %cl,0xb(%rcx)
   16312:	44 0e                	rex.R (bad) 
   16314:	18 46 0e             	sbb    %al,0xe(%rsi)
   16317:	10 41 0e             	adc    %al,0xe(%rcx)
   1631a:	08 00                	or     %al,(%rax)
   1631c:	00 00                	add    %al,(%rax)
   1631e:	00 00                	add    %al,(%rax)
   16320:	10 00                	adc    %al,(%rax)
   16322:	00 00                	add    %al,(%rax)
   16324:	34 20                	xor    $0x20,%al
   16326:	00 00                	add    %al,(%rax)
   16328:	48 62                	(bad)  
   1632a:	ff                   	(bad)  
   1632b:	ff 64 00 00          	jmp    *0x0(%rax,%rax,1)
   1632f:	00 00                	add    %al,(%rax)
   16331:	00 00                	add    %al,(%rax)
   16333:	00 28                	add    %ch,(%rax)
   16335:	00 00                	add    %al,(%rax)
   16337:	00 48 20             	add    %cl,0x20(%rax)
   1633a:	00 00                	add    %al,(%rax)
   1633c:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
   1633d:	62                   	(bad)  
   1633e:	ff                   	(bad)  
   1633f:	ff 1c 01             	lcall  *(%rcx,%rax,1)
   16342:	00 00                	add    %al,(%rax)
   16344:	00 45 0e             	add    %al,0xe(%rbp)
   16347:	10 86 02 41 0e 18    	adc    %al,0x180e4102(%rsi)
   1634d:	83 03 44             	addl   $0x44,(%rbx)
   16350:	0e                   	(bad)  
   16351:	20 02                	and    %al,(%rdx)
   16353:	99                   	cltd   
   16354:	0a 0e                	or     (%rsi),%cl
   16356:	18 44 0e 10          	sbb    %al,0x10(%rsi,%rcx,1)
   1635a:	41 0e                	rex.B (bad) 
   1635c:	08 48 0b             	or     %cl,0xb(%rax)
   1635f:	00 18                	add    %bl,(%rax)
   16361:	00 00                	add    %al,(%rax)
   16363:	00 74 20 00          	add    %dh,0x0(%rax,%riz,1)
   16367:	00 98 63 ff ff 8e    	add    %bl,-0x7100009d(%rax)
   1636d:	00 00                	add    %al,(%rax)
   1636f:	00 00                	add    %al,(%rax)
   16371:	48 0e                	rex.W (bad) 
   16373:	20 02                	and    %al,(%rdx)
   16375:	80 0a 0e             	orb    $0xe,(%rdx)
   16378:	08 41 0b             	or     %al,0xb(%rcx)
   1637b:	00 10                	add    %dl,(%rax)
   1637d:	00 00                	add    %al,(%rax)
   1637f:	00 90 20 00 00 0c    	add    %dl,0xc000020(%rax)
   16385:	64 ff                	fs (bad) 
   16387:	ff 0d 00 00 00 00    	decl   0x0(%rip)        # 1638d <__GNU_EH_FRAME_HDR+0x28cd>
   1638d:	00 00                	add    %al,(%rax)
   1638f:	00 38                	add    %bh,(%rax)
   16391:	00 00                	add    %al,(%rax)
   16393:	00 a4 20 00 00 08 64 	add    %ah,0x64080000(%rax,%riz,1)
   1639a:	ff                   	(bad)  
   1639b:	ff 2b                	ljmp   *(%rbx)
   1639d:	08 00                	or     %al,(%rax)
   1639f:	00 00                	add    %al,(%rax)
   163a1:	41 0e                	rex.B (bad) 
   163a3:	10 86 02 47 0e 18    	adc    %al,0x180e4702(%rsi)
   163a9:	83 03 44             	addl   $0x44,(%rbx)
   163ac:	0e                   	(bad)  
   163ad:	20 03                	and    %al,(%rbx)
   163af:	81 01 0a 0e 18 41    	addl   $0x41180e0a,(%rcx)
   163b5:	0e                   	(bad)  
   163b6:	10 41 0e             	adc    %al,0xe(%rcx)
   163b9:	08 41 0b             	or     %al,0xb(%rcx)
   163bc:	03 a8 01 0a 0e 18    	add    0x180e0a01(%rax),%ebp
   163c2:	41 0e                	rex.B (bad) 
   163c4:	10 41 0e             	adc    %al,0xe(%rcx)
   163c7:	08 46 0b             	or     %al,0xb(%rsi)
   163ca:	00 00                	add    %al,(%rax)
   163cc:	18 00                	sbb    %al,(%rax)
   163ce:	00 00                	add    %al,(%rax)
   163d0:	e0 20                	loopne 163f2 <__GNU_EH_FRAME_HDR+0x2932>
   163d2:	00 00                	add    %al,(%rax)
   163d4:	fc                   	cld    
   163d5:	6b ff ff             	imul   $0xffffffff,%edi,%edi
   163d8:	e1 00                	loope  163da <__GNU_EH_FRAME_HDR+0x291a>
   163da:	00 00                	add    %al,(%rax)
   163dc:	00 44 0e 20          	add    %al,0x20(%rsi,%rcx,1)
   163e0:	02 a6 0a 0e 08 46    	add    0x46080e0a(%rsi),%ah
   163e6:	0b 00                	or     (%rax),%eax
   163e8:	48 00 00             	rex.W add %al,(%rax)
   163eb:	00 fc                	add    %bh,%ah
   163ed:	20 00                	and    %al,(%rax)
   163ef:	00 d0                	add    %dl,%al
   163f1:	6c                   	insb   (%dx),%es:(%rdi)
   163f2:	ff                   	(bad)  
   163f3:	ff 4e 1b             	decl   0x1b(%rsi)
   163f6:	00 00                	add    %al,(%rax)
   163f8:	00 46 0e             	add    %al,0xe(%rsi)
   163fb:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   16401:	8e 03                	mov    (%rbx),%es
   16403:	42 0e                	rex.X (bad) 
   16405:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   1640b:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff86317252 <_end+0xffffffff862ec242>
   16411:	06                   	(bad)  
   16412:	44 0e                	rex.R (bad) 
   16414:	38 83 07 44 0e 50    	cmp    %al,0x500e4407(%rbx)
   1641a:	02 fa                	add    %dl,%bh
   1641c:	0a 0e                	or     (%rsi),%cl
   1641e:	38 44 0e 30          	cmp    %al,0x30(%rsi,%rcx,1)
   16422:	41 0e                	rex.B (bad) 
   16424:	28 42 0e             	sub    %al,0xe(%rdx)
   16427:	20 42 0e             	and    %al,0xe(%rdx)
   1642a:	18 42 0e             	sbb    %al,0xe(%rdx)
   1642d:	10 42 0e             	adc    %al,0xe(%rdx)
   16430:	08 44 0b 00          	or     %al,0x0(%rbx,%rcx,1)
   16434:	60                   	(bad)  
   16435:	00 00                	add    %al,(%rax)
   16437:	00 48 21             	add    %cl,0x21(%rax)
   1643a:	00 00                	add    %al,(%rax)
   1643c:	d4                   	(bad)  
   1643d:	87 ff                	xchg   %edi,%edi
   1643f:	ff 93 02 00 00 00    	call   *0x2(%rbx)
   16445:	42 0e                	rex.X (bad) 
   16447:	10 8d 02 42 0e 18    	adc    %cl,0x180e4202(%rbp)
   1644d:	8c 03                	mov    %es,(%rbx)
   1644f:	41 0e                	rex.B (bad) 
   16451:	20 86 04 41 0e 28    	and    %al,0x280e4104(%rsi)
   16457:	83 05 49 0e 40 02 4a 	addl   $0x4a,0x2400e49(%rip)        # 24172a7 <_end+0x23ec297>
   1645e:	0a 0e                	or     (%rsi),%cl
   16460:	28 43 0e             	sub    %al,0xe(%rbx)
   16463:	20 41 0e             	and    %al,0xe(%rcx)
   16466:	18 42 0e             	sbb    %al,0xe(%rdx)
   16469:	10 42 0e             	adc    %al,0xe(%rdx)
   1646c:	08 47 0b             	or     %al,0xb(%rdi)
   1646f:	02 82 0a 0e 28 41    	add    0x41280e0a(%rdx),%al
   16475:	0e                   	(bad)  
   16476:	20 41 0e             	and    %al,0xe(%rcx)
   16479:	18 42 0e             	sbb    %al,0xe(%rdx)
   1647c:	10 42 0e             	adc    %al,0xe(%rdx)
   1647f:	08 48 0b             	or     %cl,0xb(%rax)
   16482:	03 6e 01             	add    0x1(%rsi),%ebp
   16485:	0a 0e                	or     (%rsi),%cl
   16487:	28 41 0e             	sub    %al,0xe(%rcx)
   1648a:	20 41 0e             	and    %al,0xe(%rcx)
   1648d:	18 42 0e             	sbb    %al,0xe(%rdx)
   16490:	10 42 0e             	adc    %al,0xe(%rdx)
   16493:	08 44 0b 00          	or     %al,0x0(%rbx,%rcx,1)
   16497:	00 60 00             	add    %ah,0x0(%rax)
   1649a:	00 00                	add    %al,(%rax)
   1649c:	ac                   	lods   %ds:(%rsi),%al
   1649d:	21 00                	and    %eax,(%rax)
   1649f:	00 10                	add    %dl,(%rax)
   164a1:	8a ff                	mov    %bh,%bh
   164a3:	ff 00                	incl   (%rax)
   164a5:	0b 00                	or     (%rax),%eax
   164a7:	00 00                	add    %al,(%rax)
   164a9:	4f 0e                	rex.WRXB (bad) 
   164ab:	10 8d 02 49 0e 18    	adc    %cl,0x180e4902(%rbp)
   164b1:	8c 03                	mov    %es,(%rbx)
   164b3:	41 0e                	rex.B (bad) 
   164b5:	20 86 04 41 0e 28    	and    %al,0x280e4104(%rsi)
   164bb:	83 05 44 0e 30 02 f3 	addl   $0xfffffff3,0x2300e44(%rip)        # 2317306 <_end+0x22ec2f6>
   164c2:	0a 0e                	or     (%rsi),%cl
   164c4:	28 41 0e             	sub    %al,0xe(%rcx)
   164c7:	20 41 0e             	and    %al,0xe(%rcx)
   164ca:	18 42 0e             	sbb    %al,0xe(%rdx)
   164cd:	10 42 0e             	adc    %al,0xe(%rdx)
   164d0:	08 49 0b             	or     %cl,0xb(%rcx)
   164d3:	02 c8                	add    %al,%cl
   164d5:	0e                   	(bad)  
   164d6:	08 c3                	or     %al,%bl
   164d8:	c6                   	(bad)  
   164d9:	cc                   	int3   
   164da:	cd 48                	int    $0x48
   164dc:	0e                   	(bad)  
   164dd:	30 83 05 86 04 8c    	xor    %al,-0x73fb79fb(%rbx)
   164e3:	03 8d 02 02 9e 0a    	add    0xa9e0202(%rbp),%ecx
   164e9:	0e                   	(bad)  
   164ea:	28 41 0e             	sub    %al,0xe(%rcx)
   164ed:	20 41 0e             	and    %al,0xe(%rcx)
   164f0:	18 42 0e             	sbb    %al,0xe(%rdx)
   164f3:	10 42 0e             	adc    %al,0xe(%rdx)
   164f6:	08 44 0b 00          	or     %al,0x0(%rbx,%rcx,1)
   164fa:	00 00                	add    %al,(%rax)
   164fc:	28 00                	sub    %al,(%rax)
   164fe:	00 00                	add    %al,(%rax)
   16500:	10 22                	adc    %ah,(%rdx)
   16502:	00 00                	add    %al,(%rax)
   16504:	ac                   	lods   %ds:(%rsi),%al
   16505:	94                   	xchg   %eax,%esp
   16506:	ff                   	(bad)  
   16507:	ff 68 00             	ljmp   *0x0(%rax)
   1650a:	00 00                	add    %al,(%rax)
   1650c:	00 45 0e             	add    %al,0xe(%rbp)
   1650f:	10 86 02 41 0e 18    	adc    %al,0x180e4102(%rsi)
   16515:	83 03 47             	addl   $0x47,(%rbx)
   16518:	0e                   	(bad)  
   16519:	20 02                	and    %al,(%rdx)
   1651b:	41 0a 0e             	or     (%r14),%cl
   1651e:	18 44 0e 10          	sbb    %al,0x10(%rsi,%rcx,1)
   16522:	41 0e                	rex.B (bad) 
   16524:	08 45 0b             	or     %al,0xb(%rbp)
   16527:	00 64 00 00          	add    %ah,0x0(%rax,%rax,1)
   1652b:	00 3c 22             	add    %bh,(%rdx,%riz,1)
   1652e:	00 00                	add    %al,(%rax)
   16530:	f0 94                	lock xchg %eax,%esp
   16532:	ff                   	(bad)  
   16533:	ff 0d 07 00 00 00    	decl   0x7(%rip)        # 16540 <__GNU_EH_FRAME_HDR+0x2a80>
   16539:	46 0e                	rex.RX (bad) 
   1653b:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   16541:	8e 03                	mov    (%rbx),%es
   16543:	42 0e                	rex.X (bad) 
   16545:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   1654b:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff86317392 <_end+0xffffffff862ec382>
   16551:	06                   	(bad)  
   16552:	41 0e                	rex.B (bad) 
   16554:	38 83 07 47 0e 40    	cmp    %al,0x400e4707(%rbx)
   1655a:	02 ea                	add    %dl,%ch
   1655c:	0a 0e                	or     (%rsi),%cl
   1655e:	38 44 0e 30          	cmp    %al,0x30(%rsi,%rcx,1)
   16562:	41 0e                	rex.B (bad) 
   16564:	28 42 0e             	sub    %al,0xe(%rdx)
   16567:	20 42 0e             	and    %al,0xe(%rdx)
   1656a:	18 42 0e             	sbb    %al,0xe(%rdx)
   1656d:	10 42 0e             	adc    %al,0xe(%rdx)
   16570:	08 44 0b 03          	or     %al,0x3(%rbx,%rcx,1)
   16574:	04 01                	add    $0x1,%al
   16576:	0a 0e                	or     (%rsi),%cl
   16578:	38 44 0e 30          	cmp    %al,0x30(%rsi,%rcx,1)
   1657c:	41 0e                	rex.B (bad) 
   1657e:	28 42 0e             	sub    %al,0xe(%rdx)
   16581:	20 42 0e             	and    %al,0xe(%rdx)
   16584:	18 42 0e             	sbb    %al,0xe(%rdx)
   16587:	10 42 0e             	adc    %al,0xe(%rdx)
   1658a:	08 4f 0b             	or     %cl,0xb(%rdi)
   1658d:	00 00                	add    %al,(%rax)
   1658f:	00 10                	add    %dl,(%rax)
   16591:	00 00                	add    %al,(%rax)
   16593:	00 a4 22 00 00 98 9b 	add    %ah,-0x64680000(%rdx,%riz,1)
   1659a:	ff                   	(bad)  
   1659b:	ff 18                	lcall  *(%rax)
   1659d:	00 00                	add    %al,(%rax)
   1659f:	00 00                	add    %al,(%rax)
   165a1:	00 00                	add    %al,(%rax)
   165a3:	00 20                	add    %ah,(%rax)
   165a5:	00 00                	add    %al,(%rax)
   165a7:	00 b8 22 00 00 a4    	add    %bh,-0x5bffffde(%rax)
   165ad:	9b                   	fwait
   165ae:	ff                   	(bad)  
   165af:	ff 8a 00 00 00 00    	decl   0x0(%rdx)
   165b5:	45 0e                	rex.RB (bad) 
   165b7:	10 83 02 02 61 0a    	adc    %al,0xa610202(%rbx)
   165bd:	0e                   	(bad)  
   165be:	08 4a 0b             	or     %cl,0xb(%rdx)
   165c1:	46 0a 0e             	rex.RX or (%rsi),%r9b
   165c4:	08 4a 0b             	or     %cl,0xb(%rdx)
   165c7:	00 3c 00             	add    %bh,(%rax,%rax,1)
   165ca:	00 00                	add    %al,(%rax)
   165cc:	dc 22                	fsubl  (%rdx)
   165ce:	00 00                	add    %al,(%rax)
   165d0:	10 9c ff ff b2 01 00 	adc    %bl,0x1b2ff(%rdi,%rdi,8)
   165d7:	00 00                	add    %al,(%rax)
   165d9:	46 0e                	rex.RX (bad) 
   165db:	10 8d 02 42 0e 18    	adc    %cl,0x180e4202(%rbp)
   165e1:	8c 03                	mov    %es,(%rbx)
   165e3:	41 0e                	rex.B (bad) 
   165e5:	20 86 04 41 0e 28    	and    %al,0x280e4104(%rsi)
   165eb:	83 05 47 0e 30 03 05 	addl   $0x5,0x3300e47(%rip)        # 3317439 <_end+0x32ec429>
   165f2:	01 0a                	add    %ecx,(%rdx)
   165f4:	0e                   	(bad)  
   165f5:	28 41 0e             	sub    %al,0xe(%rcx)
   165f8:	20 41 0e             	and    %al,0xe(%rcx)
   165fb:	18 42 0e             	sbb    %al,0xe(%rdx)
   165fe:	10 42 0e             	adc    %al,0xe(%rdx)
   16601:	08 44 0b 00          	or     %al,0x0(%rbx,%rcx,1)
   16605:	00 00                	add    %al,(%rax)
   16607:	00 10                	add    %dl,(%rax)
   16609:	00 00                	add    %al,(%rax)
   1660b:	00 1c 23             	add    %bl,(%rbx,%riz,1)
   1660e:	00 00                	add    %al,(%rax)
   16610:	90                   	nop
   16611:	9d                   	popf   
   16612:	ff                   	(bad)  
   16613:	ff ce                	dec    %esi
   16615:	00 00                	add    %al,(%rax)
   16617:	00 00                	add    %al,(%rax)
   16619:	00 00                	add    %al,(%rax)
   1661b:	00 10                	add    %dl,(%rax)
   1661d:	00 00                	add    %al,(%rax)
   1661f:	00 30                	add    %dh,(%rax)
   16621:	23 00                	and    (%rax),%eax
   16623:	00 4c 9e ff          	add    %cl,-0x1(%rsi,%rbx,4)
   16627:	ff 1a                	lcall  *(%rdx)
   16629:	00 00                	add    %al,(%rax)
   1662b:	00 00                	add    %al,(%rax)
   1662d:	00 00                	add    %al,(%rax)
   1662f:	00 38                	add    %bh,(%rax)
   16631:	00 00                	add    %al,(%rax)
   16633:	00 44 23 00          	add    %al,0x0(%rbx,%riz,1)
   16637:	00 58 9e             	add    %bl,-0x62(%rax)
   1663a:	ff                   	(bad)  
   1663b:	ff b3 00 00 00 00    	push   0x0(%rbx)
   16641:	46 0e                	rex.RX (bad) 
   16643:	10 8e 02 42 0e 18    	adc    %cl,0x180e4202(%rsi)
   16649:	8d 03                	lea    (%rbx),%eax
   1664b:	45 0e                	rex.RB (bad) 
   1664d:	20 8c 04 41 0e 28 86 	and    %cl,-0x79d7f1bf(%rsp,%rax,1)
   16654:	05 41 0e 30 83       	add    $0x83300e41,%eax
   16659:	06                   	(bad)  
   1665a:	02 99 0e 28 44 0e    	add    0xe44280e(%rcx),%bl
   16660:	20 42 0e             	and    %al,0xe(%rdx)
   16663:	18 42 0e             	sbb    %al,0xe(%rdx)
   16666:	10 42 0e             	adc    %al,0xe(%rdx)
   16669:	08 00                	or     %al,(%rax)
   1666b:	00 48 00             	add    %cl,0x0(%rax)
   1666e:	00 00                	add    %al,(%rax)
   16670:	80 23 00             	andb   $0x0,(%rbx)
   16673:	00 dc                	add    %bl,%ah
   16675:	9e                   	sahf   
   16676:	ff                   	(bad)  
   16677:	ff                   	(bad)  
   16678:	ed                   	in     (%dx),%eax
   16679:	00 00                	add    %al,(%rax)
   1667b:	00 00                	add    %al,(%rax)
   1667d:	42 0e                	rex.X (bad) 
   1667f:	10 8f 02 46 0e 18    	adc    %cl,0x180e4602(%rdi)
   16685:	8e 03                	mov    (%rbx),%es
   16687:	42 0e                	rex.X (bad) 
   16689:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
   1668f:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff863174d6 <_end+0xffffffff862ec4c6>
   16695:	06                   	(bad)  
   16696:	41 0e                	rex.B (bad) 
   16698:	38 83 07 44 0e 70    	cmp    %al,0x700e4407(%rbx)
   1669e:	02 5b 0a             	add    0xa(%rbx),%bl
   166a1:	0e                   	(bad)  
   166a2:	38 41 0e             	cmp    %al,0xe(%rcx)
   166a5:	30 41 0e             	xor    %al,0xe(%rcx)
   166a8:	28 42 0e             	sub    %al,0xe(%rdx)
   166ab:	20 42 0e             	and    %al,0xe(%rdx)
   166ae:	18 42 0e             	sbb    %al,0xe(%rdx)
   166b1:	10 42 0e             	adc    %al,0xe(%rdx)
   166b4:	08 49 0b             	or     %cl,0xb(%rcx)
   166b7:	00 10                	add    %dl,(%rax)
   166b9:	00 00                	add    %al,(%rax)
   166bb:	00 cc                	add    %cl,%ah
   166bd:	23 00                	and    (%rax),%eax
   166bf:	00 80 9f ff ff 1a    	add    %al,0x1affff9f(%rax)
   166c5:	00 00                	add    %al,(%rax)
   166c7:	00 00                	add    %al,(%rax)
   166c9:	00 00                	add    %al,(%rax)
   166cb:	00 60 00             	add    %ah,0x0(%rax)
   166ce:	00 00                	add    %al,(%rax)
   166d0:	e0 23                	loopne 166f5 <__GNU_EH_FRAME_HDR+0x2c35>
   166d2:	00 00                	add    %al,(%rax)
   166d4:	8c 9f ff ff 37 01    	mov    %ds,0x137ffff(%rdi)
   166da:	00 00                	add    %al,(%rax)
   166dc:	00 46 0e             	add    %al,0xe(%rsi)
   166df:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
   166e5:	8e 03                	mov    (%rbx),%es
   166e7:	42 0e                	rex.X (bad) 
   166e9:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
   166ef:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff86317536 <_end+0xffffffff862ec526>
   166f5:	06                   	(bad)  
   166f6:	41 0e                	rex.B (bad) 
   166f8:	38 83 07 44 0e 50    	cmp    %al,0x500e4407(%rbx)
   166fe:	02 e1                	add    %cl,%ah
   16700:	0a 0e                	or     (%rsi),%cl
   16702:	38 44 0e 30          	cmp    %al,0x30(%rsi,%rcx,1)
   16706:	41 0e                	rex.B (bad) 
   16708:	28 42 0e             	sub    %al,0xe(%rdx)
   1670b:	20 42 0e             	and    %al,0xe(%rdx)
   1670e:	18 42 0e             	sbb    %al,0xe(%rdx)
   16711:	10 42 0e             	adc    %al,0xe(%rdx)
   16714:	08 45 0b             	or     %al,0xb(%rbp)
   16717:	51                   	push   %rcx
   16718:	0a 0e                	or     (%rsi),%cl
   1671a:	38 41 0e             	cmp    %al,0xe(%rcx)
   1671d:	30 41 0e             	xor    %al,0xe(%rcx)
   16720:	28 42 0e             	sub    %al,0xe(%rdx)
   16723:	20 42 0e             	and    %al,0xe(%rdx)
   16726:	18 42 0e             	sbb    %al,0xe(%rdx)
   16729:	10 42 0e             	adc    %al,0xe(%rdx)
   1672c:	08 4d 0b             	or     %cl,0xb(%rbp)
   1672f:	00 40 00             	add    %al,0x0(%rax)
   16732:	00 00                	add    %al,(%rax)
   16734:	44 24 00             	rex.R and $0x0,%al
   16737:	00 68 a0             	add    %ch,-0x60(%rax)
   1673a:	ff                   	(bad)  
   1673b:	ff f1                	push   %rcx
   1673d:	00 00                	add    %al,(%rax)
   1673f:	00 00                	add    %al,(%rax)
   16741:	46 0e                	rex.RX (bad) 
   16743:	10 8e 02 42 0e 18    	adc    %cl,0x180e4202(%rsi)
   16749:	8d 03                	lea    (%rbx),%eax
   1674b:	42 0e                	rex.X (bad) 
   1674d:	20 8c 04 44 0e 28 86 	and    %cl,-0x79d7f1bc(%rsp,%rax,1)
   16754:	05 41 0e 30 83       	add    $0x83300e41,%eax
   16759:	06                   	(bad)  
   1675a:	44 0e                	rex.R (bad) 
   1675c:	50                   	push   %rax
   1675d:	02 cd                	add    %ch,%cl
   1675f:	0a 0e                	or     (%rsi),%cl
   16761:	30 44 0e 28          	xor    %al,0x28(%rsi,%rcx,1)
   16765:	41 0e                	rex.B (bad) 
   16767:	20 42 0e             	and    %al,0xe(%rdx)
   1676a:	18 42 0e             	sbb    %al,0xe(%rdx)
   1676d:	10 42 0e             	adc    %al,0xe(%rdx)
   16770:	08 41 0b             	or     %al,0xb(%rcx)
   16773:	00 10                	add    %dl,(%rax)
   16775:	00 00                	add    %al,(%rax)
   16777:	00 88 24 00 00 24    	add    %cl,0x24000024(%rax)
   1677d:	a1 ff ff 09 00 00 00 	movabs 0x9ffff,%eax
   16784:	00 00 
   16786:	00 00                	add    %al,(%rax)
   16788:	20 00                	and    %al,(%rax)
   1678a:	00 00                	add    %al,(%rax)
   1678c:	9c                   	pushf  
   1678d:	24 00                	and    $0x0,%al
   1678f:	00 20                	add    %ah,(%rax)
   16791:	a1 ff ff 4f 00 00 00 	movabs 0x45000000004fffff,%eax
   16798:	00 45 
   1679a:	0e                   	(bad)  
   1679b:	10 83 02 6a 0a 0e    	adc    %al,0xe0a6a02(%rbx)
   167a1:	08 41 0b             	or     %al,0xb(%rcx)
   167a4:	51                   	push   %rcx
   167a5:	0a 0e                	or     (%rsi),%cl
   167a7:	08 47 0b             	or     %al,0xb(%rdi)
   167aa:	00 00                	add    %al,(%rax)
   167ac:	20 00                	and    %al,(%rax)
   167ae:	00 00                	add    %al,(%rax)
   167b0:	c0 24 00 00          	shlb   $0x0,(%rax,%rax,1)
   167b4:	4c a1 ff ff 47 00 00 	rex.WR movabs 0x450000000047ffff,%rax
   167bb:	00 00 45 
   167be:	0e                   	(bad)  
   167bf:	10 83 02 66 0a 0e    	adc    %al,0xe0a6602(%rbx)
   167c5:	08 45 0b             	or     %al,0xb(%rbp)
   167c8:	4d 0a 0e             	rex.WRB or (%r14),%r9b
   167cb:	08 43 0b             	or     %al,0xb(%rbx)
   167ce:	00 00                	add    %al,(%rax)
   167d0:	10 00                	adc    %al,(%rax)
   167d2:	00 00                	add    %al,(%rax)
   167d4:	e4 24                	in     $0x24,%al
   167d6:	00 00                	add    %al,(%rax)
   167d8:	38 b8 fe ff 13 00    	cmp    %bh,0x13fffe(%rax)
   167de:	00 00                	add    %al,(%rax)
   167e0:	00 00                	add    %al,(%rax)
   167e2:	00 00                	add    %al,(%rax)
   167e4:	10 00                	adc    %al,(%rax)
   167e6:	00 00                	add    %al,(%rax)
   167e8:	f8                   	clc    
   167e9:	24 00                	and    $0x0,%al
   167eb:	00 64 a1 ff          	add    %ah,-0x1(%rcx,%riz,4)
   167ef:	ff 07                	incl   (%rdi)
   167f1:	00 00                	add    %al,(%rax)
   167f3:	00 00                	add    %al,(%rax)
   167f5:	00 00                	add    %al,(%rax)
   167f7:	00 14 00             	add    %dl,(%rax,%rax,1)
   167fa:	00 00                	add    %al,(%rax)
   167fc:	0c 25                	or     $0x25,%al
   167fe:	00 00                	add    %al,(%rax)
   16800:	60                   	(bad)  
   16801:	a1 ff ff 09 00 00 00 	movabs 0x9ffff,%eax
   16808:	00 00 
   1680a:	00 00                	add    %al,(%rax)
   1680c:	00 00                	add    %al,(%rax)
   1680e:	00 00                	add    %al,(%rax)
   16810:	18 00                	sbb    %al,(%rax)
   16812:	00 00                	add    %al,(%rax)
   16814:	24 25                	and    $0x25,%al
   16816:	00 00                	add    %al,(%rax)
   16818:	58                   	pop    %rax
   16819:	a1 ff ff 0f 00 00 00 	movabs 0x45000000000fffff,%eax
   16820:	00 45 
   16822:	0e                   	(bad)  
   16823:	10 41 0e             	adc    %al,0xe(%rcx)
   16826:	08 44 0e 10          	or     %al,0x10(%rsi,%rcx,1)
   1682a:	00 00                	add    %al,(%rax)
   1682c:	18 00                	sbb    %al,(%rax)
   1682e:	00 00                	add    %al,(%rax)
   16830:	40 25 00 00 4c a1    	rex and $0xa14c0000,%eax
   16836:	ff                   	(bad)  
   16837:	ff 0f                	decl   (%rdi)
   16839:	00 00                	add    %al,(%rax)
   1683b:	00 00                	add    %al,(%rax)
   1683d:	45 0e                	rex.RB (bad) 
   1683f:	10 41 0e             	adc    %al,0xe(%rcx)
   16842:	08 44 0e 10          	or     %al,0x10(%rsi,%rcx,1)
   16846:	00 00                	add    %al,(%rax)
   16848:	14 00                	adc    $0x0,%al
   1684a:	00 00                	add    %al,(%rax)
   1684c:	5c                   	pop    %rsp
   1684d:	25 00 00 40 a1       	and    $0xa1400000,%eax
   16852:	ff                   	(bad)  
   16853:	ff 14 00             	call   *(%rax,%rax,1)
   16856:	00 00                	add    %al,(%rax)
   16858:	00 4f 0e             	add    %cl,0xe(%rdi)
   1685b:	10 00                	adc    %al,(%rax)
   1685d:	00 00                	add    %al,(%rax)
   1685f:	00 20                	add    %ah,(%rax)
   16861:	00 00                	add    %al,(%rax)
   16863:	00 74 25 00          	add    %dh,0x0(%rbp,%riz,1)
   16867:	00 48 a1             	add    %cl,-0x5f(%rax)
   1686a:	ff                   	(bad)  
   1686b:	ff 46 00             	incl   0x0(%rsi)
   1686e:	00 00                	add    %al,(%rax)
   16870:	00 4a 0e             	add    %cl,0xe(%rdx)
   16873:	10 83 02 6a 0a 0e    	adc    %al,0xe0a6a02(%rbx)
   16879:	08 44 0b 46          	or     %al,0x46(%rbx,%rcx,1)
   1687d:	0e                   	(bad)  
   1687e:	08 42 c3             	or     %al,-0x3d(%rdx)
   16881:	00 00                	add    %al,(%rax)
   16883:	00 40 00             	add    %al,0x0(%rax)
   16886:	00 00                	add    %al,(%rax)
   16888:	98                   	cwtl   
   16889:	25 00 00 74 a1       	and    $0xa1740000,%eax
   1688e:	ff                   	(bad)  
   1688f:	ff                   	(bad)  
   16890:	7e 00                	jle    16892 <__GNU_EH_FRAME_HDR+0x2dd2>
   16892:	00 00                	add    %al,(%rax)
   16894:	00 4a 0e             	add    %cl,0xe(%rdx)
   16897:	10 86 02 46 0e 18    	adc    %al,0x180e4602(%rsi)
   1689d:	83 03 47             	addl   $0x47,(%rbx)
   168a0:	0e                   	(bad)  
   168a1:	20 6f 0a             	and    %ch,0xa(%rdi)
   168a4:	0e                   	(bad)  
   168a5:	18 43 0e             	sbb    %al,0xe(%rbx)
   168a8:	10 41 0e             	adc    %al,0xe(%rcx)
   168ab:	08 46 0b             	or     %al,0xb(%rsi)
   168ae:	44 0a 0e             	or     (%rsi),%r9b
   168b1:	18 46 0e             	sbb    %al,0xe(%rsi)
   168b4:	10 41 0e             	adc    %al,0xe(%rcx)
   168b7:	08 45 0b             	or     %al,0xb(%rbp)
   168ba:	4c 0e                	rex.WR (bad) 
   168bc:	18 46 0e             	sbb    %al,0xe(%rsi)
   168bf:	10 41 0e             	adc    %al,0xe(%rcx)
   168c2:	08 45 c3             	or     %al,-0x3d(%rbp)
   168c5:	c6 00 00             	movb   $0x0,(%rax)
   168c8:	44 00 00             	add    %r8b,(%rax)
   168cb:	00 dc                	add    %bl,%ah
   168cd:	25 00 00 b0 a1       	and    $0xa1b00000,%eax
   168d2:	ff                   	(bad)  
   168d3:	ff 8e 00 00 00 00    	decl   0x0(%rsi)
   168d9:	4b 0e                	rex.WXB (bad) 
   168db:	10 8c 02 46 0e 18 86 	adc    %cl,-0x79e7f1ba(%rdx,%rax,1)
   168e2:	03 41 0e             	add    0xe(%rcx),%eax
   168e5:	20 83 04 7f 0a 0e    	and    %al,0xe0a7f04(%rbx)
   168eb:	18 43 0e             	sbb    %al,0xe(%rbx)
   168ee:	10 42 0e             	adc    %al,0xe(%rdx)
   168f1:	08 4a 0b             	or     %cl,0xb(%rdx)
   168f4:	41 0a 0e             	or     (%r14),%cl
   168f7:	18 46 0e             	sbb    %al,0xe(%rsi)
   168fa:	10 42 0e             	adc    %al,0xe(%rdx)
   168fd:	08 47 0b             	or     %al,0xb(%rdi)
   16900:	49 0e                	rex.WB (bad) 
   16902:	18 46 0e             	sbb    %al,0xe(%rsi)
   16905:	10 42 0e             	adc    %al,0xe(%rdx)
   16908:	08 47 c3             	or     %al,-0x3d(%rdi)
   1690b:	c6                   	(bad)  
   1690c:	cc                   	int3   
   1690d:	00 00                	add    %al,(%rax)
   1690f:	00 4c 00 00          	add    %cl,0x0(%rax,%rax,1)
   16913:	00 24 26             	add    %ah,(%rsi,%riz,1)
   16916:	00 00                	add    %al,(%rax)
   16918:	f8                   	clc    
   16919:	a1 ff ff 9e 00 00 00 	movabs 0x4f000000009effff,%eax
   16920:	00 4f 
   16922:	0e                   	(bad)  
   16923:	10 8c 02 46 0e 18 86 	adc    %cl,-0x79e7f1ba(%rdx,%rax,1)
   1692a:	03 41 0e             	add    0xe(%rcx),%eax
   1692d:	20 83 04 7d 0a 0e    	and    %al,0xe0a7d04(%rbx)
   16933:	18 43 0e             	sbb    %al,0xe(%rbx)
   16936:	10 42 0e             	adc    %al,0xe(%rdx)
   16939:	08 48 0b             	or     %cl,0xb(%rax)
   1693c:	49 0a 0e             	rex.WB or (%r14),%cl
   1693f:	18 46 0e             	sbb    %al,0xe(%rsi)
   16942:	10 42 0e             	adc    %al,0xe(%rdx)
   16945:	08 47 0b             	or     %al,0xb(%rdi)
   16948:	41 0a 0e             	or     (%r14),%cl
   1694b:	18 46 0e             	sbb    %al,0xe(%rsi)
   1694e:	10 42 0e             	adc    %al,0xe(%rdx)
   16951:	08 47 0b             	or     %al,0xb(%rdi)
   16954:	50                   	push   %rax
   16955:	0e                   	(bad)  
   16956:	08 c3                	or     %al,%bl
   16958:	c6                   	(bad)  
   16959:	cc                   	int3   
   1695a:	00 00                	add    %al,(%rax)
   1695c:	00 00                	add    %al,(%rax)
   1695e:	00 00                	add    %al,(%rax)
   16960:	28 00                	sub    %al,(%rax)
   16962:	00 00                	add    %al,(%rax)
   16964:	74 26                	je     1698c <__GNU_EH_FRAME_HDR+0x2ecc>
   16966:	00 00                	add    %al,(%rax)
   16968:	48 a2 ff ff 72 00 00 	rex.W movabs %al,0x4a0000000072ffff
   1696f:	00 00 4a 
   16972:	0e                   	(bad)  
   16973:	10 83 02 60 0a 0e    	adc    %al,0xe0a6002(%rbx)
   16979:	08 46 0b             	or     %al,0xb(%rsi)
   1697c:	60                   	(bad)  
   1697d:	0e                   	(bad)  
   1697e:	08 48 c3             	or     %cl,-0x3d(%rax)
   16981:	48 0e                	rex.W (bad) 
   16983:	10 83 02 51 0e 08    	adc    %al,0x80e5102(%rbx)
   16989:	00 00                	add    %al,(%rax)
   1698b:	00 28                	add    %ch,(%rax)
   1698d:	00 00                	add    %al,(%rax)
   1698f:	00 a0 26 00 00 9c    	add    %ah,-0x63ffffda(%rax)
   16995:	a2 ff ff 72 00 00 00 	movabs %al,0x4a0000000072ffff
   1699c:	00 4a 
   1699e:	0e                   	(bad)  
   1699f:	10 83 02 60 0a 0e    	adc    %al,0xe0a6002(%rbx)
   169a5:	08 46 0b             	or     %al,0xb(%rsi)
   169a8:	60                   	(bad)  
   169a9:	0e                   	(bad)  
   169aa:	08 48 c3             	or     %cl,-0x3d(%rax)
   169ad:	48 0e                	rex.W (bad) 
   169af:	10 83 02 51 0e 08    	adc    %al,0x80e5102(%rbx)
   169b5:	00 00                	add    %al,(%rax)
   169b7:	00 14 00             	add    %dl,(%rax,%rax,1)
   169ba:	00 00                	add    %al,(%rax)
   169bc:	cc                   	int3   
   169bd:	26 00 00             	es add %al,(%rax)
   169c0:	20 a4 ff ff 58 00 00 	and    %ah,0x58ff(%rdi,%rdi,8)
	...
   169cf:	00 14 00             	add    %dl,(%rax,%rax,1)
   169d2:	00 00                	add    %al,(%rax)
   169d4:	e4 26                	in     $0x26,%al
   169d6:	00 00                	add    %al,(%rax)
   169d8:	68 a4 ff ff 09       	push   $0x9ffffa4
	...
   169e5:	00 00                	add    %al,(%rax)
   169e7:	00 10                	add    %dl,(%rax)
   169e9:	00 00                	add    %al,(%rax)
   169eb:	00 fc                	add    %bh,%ah
   169ed:	26 00 00             	es add %al,(%rax)
   169f0:	40 b6 fe             	mov    $0xfe,%sil
   169f3:	ff 13                	call   *(%rbx)
   169f5:	00 00                	add    %al,(%rax)
   169f7:	00 00                	add    %al,(%rax)
   169f9:	00 00                	add    %al,(%rax)
   169fb:	00 10                	add    %dl,(%rax)
   169fd:	00 00                	add    %al,(%rax)
   169ff:	00 10                	add    %dl,(%rax)
   16a01:	27                   	(bad)  
   16a02:	00 00                	add    %al,(%rax)
   16a04:	4c a5                	rex.WR movsq %ds:(%rsi),%es:(%rdi)
   16a06:	ff                   	(bad)  
   16a07:	ff 09                	decl   (%rcx)
   16a09:	00 00                	add    %al,(%rax)
   16a0b:	00 00                	add    %al,(%rax)
   16a0d:	00 00                	add    %al,(%rax)
   16a0f:	00 1c 00             	add    %bl,(%rax,%rax,1)
   16a12:	00 00                	add    %al,(%rax)
   16a14:	24 27                	and    $0x27,%al
   16a16:	00 00                	add    %al,(%rax)
   16a18:	48 a5                	movsq  %ds:(%rsi),%es:(%rdi)
   16a1a:	ff                   	(bad)  
   16a1b:	ff 45 02             	incl   0x2(%rbp)
   16a1e:	00 00                	add    %al,(%rax)
   16a20:	00 6a 0e             	add    %ch,0xe(%rdx)
   16a23:	10 03                	adc    %al,(%rbx)
   16a25:	07                   	(bad)  
   16a26:	02 0e                	add    (%rsi),%cl
   16a28:	08 00                	or     %al,(%rax)
   16a2a:	00 00                	add    %al,(%rax)
   16a2c:	00 00                	add    %al,(%rax)
   16a2e:	00 00                	add    %al,(%rax)
   16a30:	10 00                	adc    %al,(%rax)
   16a32:	00 00                	add    %al,(%rax)
   16a34:	44 27                	rex.R (bad) 
   16a36:	00 00                	add    %al,(%rax)
   16a38:	18 b6 fe ff 13 00    	sbb    %dh,0x13fffe(%rsi)
   16a3e:	00 00                	add    %al,(%rax)
   16a40:	00 00                	add    %al,(%rax)
   16a42:	00 00                	add    %al,(%rax)
   16a44:	2c 00                	sub    $0x0,%al
   16a46:	00 00                	add    %al,(%rax)
   16a48:	58                   	pop    %rax
   16a49:	27                   	(bad)  
   16a4a:	00 00                	add    %al,(%rax)
   16a4c:	64 a7                	cmpsl  %es:(%rdi),%fs:(%rsi)
   16a4e:	ff                   	(bad)  
   16a4f:	ff 8c 01 00 00 00 45 	decl   0x45000000(%rcx,%rax,1)
   16a56:	0e                   	(bad)  
   16a57:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
   16a5d:	42 8f 03             	rex.X pop (%rbx)
   16a60:	49 8e 04 8d 05 46 8c 	rex.WB mov 0x68c4605(,%rcx,4),%es
   16a67:	06 
   16a68:	83 07 03             	addl   $0x3,(%rdi)
   16a6b:	6d                   	insl   (%dx),%es:(%rdi)
   16a6c:	01 0a                	add    %ecx,(%rdx)
   16a6e:	0c 07                	or     $0x7,%al
   16a70:	08 41 0b             	or     %al,0xb(%rcx)
   16a73:	00 34 00             	add    %dh,(%rax,%rax,1)
   16a76:	00 00                	add    %al,(%rax)
   16a78:	88 27                	mov    %ah,(%rdi)
   16a7a:	00 00                	add    %al,(%rax)
   16a7c:	c4                   	(bad)  
   16a7d:	a8 ff                	test   $0xff,%al
   16a7f:	ff 66 00             	jmp    *0x0(%rsi)
   16a82:	00 00                	add    %al,(%rax)
   16a84:	00 45 0e             	add    %al,0xe(%rbp)
   16a87:	10 86 02 41 0e 18    	adc    %al,0x180e4102(%rsi)
   16a8d:	83 03 4b             	addl   $0x4b,(%rbx)
   16a90:	0e                   	(bad)  
   16a91:	20 4e 0a             	and    %cl,0xa(%rsi)
   16a94:	0e                   	(bad)  
   16a95:	18 44 0e 10          	sbb    %al,0x10(%rsi,%rcx,1)
   16a99:	41 0e                	rex.B (bad) 
   16a9b:	08 44 0b 65          	or     %al,0x65(%rbx,%rcx,1)
   16a9f:	0a 0e                	or     (%rsi),%cl
   16aa1:	18 44 0e 10          	sbb    %al,0x10(%rsi,%rcx,1)
   16aa5:	41 0e                	rex.B (bad) 
   16aa7:	08 46 0b             	or     %al,0xb(%rsi)
	...

Disassembly of section .fini_array:

0000000000017da0 <.fini_array>:
   17da0:	00 20                	add    %ah,(%rax)
   17da2:	00 00                	add    %al,(%rax)
   17da4:	00 00                	add    %al,(%rax)
   17da6:	00 00                	add    %al,(%rax)
   17da8:	10 20                	adc    %ah,(%rax)
   17daa:	00 00                	add    %al,(%rax)
   17dac:	00 00                	add    %al,(%rax)
   17dae:	00 00                	add    %al,(%rax)
   17db0:	30 20                	xor    %ah,(%rax)
   17db2:	00 00                	add    %al,(%rax)
   17db4:	00 00                	add    %al,(%rax)
   17db6:	00 00                	add    %al,(%rax)
   17db8:	50                   	push   %rax
   17db9:	20 00                	and    %al,(%rax)
   17dbb:	00 00                	add    %al,(%rax)
   17dbd:	00 00                	add    %al,(%rax)
	...

Disassembly of section .data.rel.ro:

0000000000017dc0 <g_ecall_table>:
   17dc0:	04 00                	add    $0x0,%al
   17dc2:	00 00                	add    %al,(%rax)
   17dc4:	00 00                	add    %al,(%rax)
   17dc6:	00 00                	add    %al,(%rax)
   17dc8:	e7 40                	out    %eax,$0x40
	...
   17dd6:	00 00                	add    %al,(%rax)
   17dd8:	81 40 00 00 00 00 00 	addl   $0x0,0x0(%rax)
	...
   17de7:	00 06                	add    %al,(%rsi)
   17de9:	40 00 00             	rex add %al,(%rax)
	...
   17df8:	1f                   	(bad)  
   17df9:	40 00 00             	rex add %al,(%rax)
	...

0000000000017e08 <__intel_security_cookie>:
	...

0000000000017e10 <g_cpu_core_num>:
   17e10:	00 00                	add    %al,(%rax)
	...

0000000000017e14 <g_aexnotify_supported>:
   17e14:	00 00                	add    %al,(%rax)
	...

0000000000017e18 <g_enclave_size>:
	...

0000000000017e20 <g_enclave_base>:
	...

0000000000017e28 <g_sdk_version>:
   17e28:	00 00                	add    %al,(%rax)
	...

0000000000017e2c <EDMM_supported>:
   17e2c:	00 00                	add    %al,(%rax)
	...

0000000000017e30 <g_cpu_feature_indicator>:
	...

0000000000017e38 <heap_min_size>:
	...

0000000000017e40 <is_edmm_supported>:
	...

0000000000017e48 <heap_size>:
	...

0000000000017e50 <heap_base>:
	...

0000000000017e58 <__memset_vp>:
   17e58:	a0 08 01 00 00 00 00 	movabs 0x108,%al
   17e5f:	00  

0000000000017e60 <rsrv_mem_min_size>:
	...

0000000000017e68 <rsrv_mem_size>:
	...

0000000000017e70 <rsrv_mem_base>:
	...

Disassembly of section .dynamic:

0000000000017e78 <_DYNAMIC>:
   17e78:	1a 00                	sbb    (%rax),%al
   17e7a:	00 00                	add    %al,(%rax)
   17e7c:	00 00                	add    %al,(%rax)
   17e7e:	00 00                	add    %al,(%rax)
   17e80:	a0 7d 01 00 00 00 00 	movabs 0x1c0000000000017d,%al
   17e87:	00 1c 
   17e89:	00 00                	add    %al,(%rax)
   17e8b:	00 00                	add    %al,(%rax)
   17e8d:	00 00                	add    %al,(%rax)
   17e8f:	00 20                	add    %ah,(%rax)
   17e91:	00 00                	add    %al,(%rax)
   17e93:	00 00                	add    %al,(%rax)
   17e95:	00 00                	add    %al,(%rax)
   17e97:	00 f5                	add    %dh,%ch
   17e99:	fe                   	(bad)  
   17e9a:	ff 6f 00             	ljmp   *0x0(%rdi)
   17e9d:	00 00                	add    %al,(%rax)
   17e9f:	00 90 03 00 00 00    	add    %dl,0x3(%rax)
   17ea5:	00 00                	add    %al,(%rax)
   17ea7:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 17ead <_DYNAMIC+0x35>
   17ead:	00 00                	add    %al,(%rax)
   17eaf:	00 08                	add    %cl,(%rax)
   17eb1:	08 00                	or     %al,(%rax)
   17eb3:	00 00                	add    %al,(%rax)
   17eb5:	00 00                	add    %al,(%rax)
   17eb7:	00 06                	add    %al,(%rsi)
   17eb9:	00 00                	add    %al,(%rax)
   17ebb:	00 00                	add    %al,(%rax)
   17ebd:	00 00                	add    %al,(%rax)
   17ebf:	00 90 04 00 00 00    	add    %dl,0x4(%rax)
   17ec5:	00 00                	add    %al,(%rax)
   17ec7:	00 0a                	add    %cl,(%rdx)
   17ec9:	00 00                	add    %al,(%rax)
   17ecb:	00 00                	add    %al,(%rax)
   17ecd:	00 00                	add    %al,(%rax)
   17ecf:	00 ec                	add    %ch,%ah
   17ed1:	01 00                	add    %eax,(%rax)
   17ed3:	00 00                	add    %al,(%rax)
   17ed5:	00 00                	add    %al,(%rax)
   17ed7:	00 0b                	add    %cl,(%rbx)
   17ed9:	00 00                	add    %al,(%rax)
   17edb:	00 00                	add    %al,(%rax)
   17edd:	00 00                	add    %al,(%rax)
   17edf:	00 18                	add    %bl,(%rax)
   17ee1:	00 00                	add    %al,(%rax)
   17ee3:	00 00                	add    %al,(%rax)
   17ee5:	00 00                	add    %al,(%rax)
   17ee7:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 17eed <_DYNAMIC+0x75>
	...
   17ef5:	00 00                	add    %al,(%rax)
   17ef7:	00 03                	add    %al,(%rbx)
   17ef9:	00 00                	add    %al,(%rax)
   17efb:	00 00                	add    %al,(%rax)
   17efd:	00 00                	add    %al,(%rax)
   17eff:	00 b8 7f 01 00 00    	add    %bh,0x17f(%rax)
   17f05:	00 00                	add    %al,(%rax)
   17f07:	00 07                	add    %al,(%rdi)
   17f09:	00 00                	add    %al,(%rax)
   17f0b:	00 00                	add    %al,(%rax)
   17f0d:	00 00                	add    %al,(%rax)
   17f0f:	00 f8                	add    %bh,%al
   17f11:	09 00                	or     %eax,(%rax)
   17f13:	00 00                	add    %al,(%rax)
   17f15:	00 00                	add    %al,(%rax)
   17f17:	00 08                	add    %cl,(%rax)
   17f19:	00 00                	add    %al,(%rax)
   17f1b:	00 00                	add    %al,(%rax)
   17f1d:	00 00                	add    %al,(%rax)
   17f1f:	00 f8                	add    %bh,%al
   17f21:	01 00                	add    %eax,(%rax)
   17f23:	00 00                	add    %al,(%rax)
   17f25:	00 00                	add    %al,(%rax)
   17f27:	00 09                	add    %cl,(%rcx)
   17f29:	00 00                	add    %al,(%rax)
   17f2b:	00 00                	add    %al,(%rax)
   17f2d:	00 00                	add    %al,(%rax)
   17f2f:	00 18                	add    %bl,(%rax)
   17f31:	00 00                	add    %al,(%rax)
   17f33:	00 00                	add    %al,(%rax)
   17f35:	00 00                	add    %al,(%rax)
   17f37:	00 1e                	add    %bl,(%rsi)
   17f39:	00 00                	add    %al,(%rax)
   17f3b:	00 00                	add    %al,(%rax)
   17f3d:	00 00                	add    %al,(%rax)
   17f3f:	00 08                	add    %cl,(%rax)
   17f41:	00 00                	add    %al,(%rax)
   17f43:	00 00                	add    %al,(%rax)
   17f45:	00 00                	add    %al,(%rax)
   17f47:	00 fb                	add    %bh,%bl
   17f49:	ff                   	(bad)  
   17f4a:	ff 6f 00             	ljmp   *0x0(%rdi)
   17f4d:	00 00                	add    %al,(%rax)
   17f4f:	00 01                	add    %al,(%rcx)
   17f51:	00 00                	add    %al,(%rax)
   17f53:	08 00                	or     %al,(%rax)
   17f55:	00 00                	add    %al,(%rax)
   17f57:	00 f9                	add    %bh,%cl
   17f59:	ff                   	(bad)  
   17f5a:	ff 6f 00             	ljmp   *0x0(%rdi)
   17f5d:	00 00                	add    %al,(%rax)
   17f5f:	00 13                	add    %dl,(%rbx)
	...

Disassembly of section .got:

0000000000017fb8 <_GLOBAL_OFFSET_TABLE_>:
   17fb8:	78 7e                	js     18038 <extended+0x18>
   17fba:	01 00                	add    %eax,(%rax)
	...
   17fd8:	b3 22                	mov    $0x22,%bl
   17fda:	01 00                	add    %eax,(%rax)
   17fdc:	00 00                	add    %al,(%rax)
   17fde:	00 00                	add    %al,(%rax)
   17fe0:	95                   	xchg   %eax,%ebp
   17fe1:	22 01                	and    (%rcx),%al
   17fe3:	00 00                	add    %al,(%rax)
   17fe5:	00 00                	add    %al,(%rax)
   17fe7:	00 00                	add    %al,(%rax)
   17fe9:	90                   	nop
   17fea:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .data:

0000000000018000 <secret>:
   18000:	d2 04 00             	rolb   %cl,(%rax,%rax,1)
	...

0000000000018010 <extension_2op_table>:
   18010:	5a                   	pop    %rdx
   18011:	05 00 a9 08 00       	add    $0x8a900,%eax
   18016:	5a                   	pop    %rdx
   18017:	50                   	push   %rax
   18018:	96                   	xchg   %eax,%esi
   18019:	40 55                	rex push %rbp
   1801b:	00 00                	add    %al,(%rax)
   1801d:	00 00                	add    %al,(%rax)
	...

0000000000018020 <extended>:
   18020:	c1 d8 90             	rcr    $0x90,%eax
   18023:	90                   	nop
   18024:	80 80 80 80 80 80 80 	addb   $0x80,-0x7f7f7f80(%rax)
   1802b:	80 80 90 80 93 94 a4 	addb   $0xa4,-0x6b6c7f70(%rax)
   18032:	93                   	xchg   %eax,%ebx
   18033:	a3 94 94 93 a3 e8 82 	movabs %eax,0x645482e8a3939494
   1803a:	54 64 
   1803c:	82                   	(bad)  
   1803d:	82                   	(bad)  
   1803e:	82                   	(bad)  
   1803f:	82                   	(bad)  
   18040:	80 80 80 80 80 80 80 	addb   $0x80,-0x7f7f7f80(%rax)
   18047:	80 94 a4 93 a4 93 93 	adcb   $0x92,-0x6c6c5b6d(%rsp,%riz,4)
   1804e:	92 
   1804f:	92                   	xchg   %eax,%edx
   18050:	80 80 80 80 80 80 80 	addb   $0x80,-0x7f7f7f80(%rax)
   18057:	80 80 80 80 80 80 80 	addb   $0x80,-0x7f7f7f80(%rax)
   1805e:	80 80 92 92 92 92 92 	addb   $0x92,-0x6d6d6d6e(%rax)
   18065:	92                   	xchg   %eax,%edx
   18066:	92                   	xchg   %eax,%edx
   18067:	92                   	xchg   %eax,%edx
   18068:	92                   	xchg   %eax,%edx
   18069:	92                   	xchg   %eax,%edx
   1806a:	92                   	xchg   %eax,%edx
   1806b:	92                   	xchg   %eax,%edx
   1806c:	92                   	xchg   %eax,%edx
   1806d:	92                   	xchg   %eax,%edx
   1806e:	92                   	xchg   %eax,%edx
   1806f:	92                   	xchg   %eax,%edx
   18070:	80 94 94 94 94 94 94 	adcb   $0x94,-0x6b6b6b6c(%rsp,%rdx,4)
   18077:	94 
   18078:	94                   	xchg   %eax,%esp
   18079:	94                   	xchg   %eax,%esp
   1807a:	93                   	xchg   %eax,%ebx
   1807b:	94                   	xchg   %eax,%esp
   1807c:	94                   	xchg   %eax,%esp
   1807d:	94                   	xchg   %eax,%esp
   1807e:	94                   	xchg   %eax,%esp
   1807f:	94                   	xchg   %eax,%esp
   18080:	92                   	xchg   %eax,%edx
   18081:	92                   	xchg   %eax,%edx
   18082:	92                   	xchg   %eax,%edx
   18083:	93                   	xchg   %eax,%ebx
   18084:	93                   	xchg   %eax,%ebx
   18085:	93                   	xchg   %eax,%ebx
   18086:	93                   	xchg   %eax,%ebx
   18087:	93                   	xchg   %eax,%ebx
   18088:	93                   	xchg   %eax,%ebx
   18089:	93                   	xchg   %eax,%ebx
   1808a:	93                   	xchg   %eax,%ebx
   1808b:	93                   	xchg   %eax,%ebx
   1808c:	94                   	xchg   %eax,%esp
   1808d:	94                   	xchg   %eax,%esp
   1808e:	92                   	xchg   %eax,%edx
   1808f:	93                   	xchg   %eax,%ebx
   18090:	94                   	xchg   %eax,%esp
   18091:	80 80 80 93 93 93 80 	addb   $0x80,-0x6c6c6c80(%rax)
   18098:	80 80 40 80 94 94 42 	addb   $0x42,-0x6b6b7fc0(%rax)
   1809f:	a3 80 80 80 80 80 80 	movabs %eax,0x8080808080808080
   180a6:	80 80 
   180a8:	80 80 80 80 80 80 80 	addb   $0x80,-0x7f7f7f80(%rax)
   180af:	80 a0 a0 a0 a0 a0 a0 	andb   $0xa0,-0x5f5f5f60(%rax)
   180b6:	a0 a0 a0 a0 a0 a0 a0 	movabs 0xa0a0a0a0a0a0a0a0,%al
   180bd:	a0 a0 
   180bf:	a0 80 80 80 92 a2 a2 	movabs 0x8080a2a292808080,%al
   180c6:	80 80 
   180c8:	80 80 80 a2 a2 a2 e0 	addb   $0xe0,-0x5d5d5d80(%rax)
   180cf:	92                   	xchg   %eax,%edx
   180d0:	a0 a2 92 a2 92 92 90 	movabs 0x9291909292a292a2,%al
   180d7:	91 92 
   180d9:	80 ca a2             	or     $0xa2,%dl
   180dc:	92                   	xchg   %eax,%edx
   180dd:	92                   	xchg   %eax,%edx
   180de:	90                   	nop
   180df:	91                   	xchg   %eax,%ecx
   180e0:	a0 a2 94 a3 91 80 94 	movabs 0x80d3948091a394a2,%al
   180e7:	d3 80 
   180e9:	80 80 80 80 80 80 80 	addb   $0x80,-0x7f7f7f80(%rax)
   180f0:	94                   	xchg   %eax,%esp
   180f1:	93                   	xchg   %eax,%ebx
   180f2:	93                   	xchg   %eax,%ebx
   180f3:	93                   	xchg   %eax,%ebx
   180f4:	93                   	xchg   %eax,%ebx
   180f5:	93                   	xchg   %eax,%ebx
   180f6:	a3 80 93 93 93 93 93 	movabs %eax,0x9393939393939380
   180fd:	93 93 
   180ff:	93                   	xchg   %eax,%ebx
   18100:	93                   	xchg   %eax,%ebx
   18101:	93                   	xchg   %eax,%ebx
   18102:	93                   	xchg   %eax,%ebx
   18103:	93                   	xchg   %eax,%ebx
   18104:	93                   	xchg   %eax,%ebx
   18105:	93                   	xchg   %eax,%ebx
   18106:	94                   	xchg   %eax,%esp
   18107:	a3 93 93 93 93 93 93 	movabs %eax,0x9393939393939393
   1810e:	93 93 
   18110:	94                   	xchg   %eax,%esp
   18111:	93                   	xchg   %eax,%ebx
   18112:	93                   	xchg   %eax,%ebx
   18113:	93                   	xchg   %eax,%ebx
   18114:	93                   	xchg   %eax,%ebx
   18115:	93                   	xchg   %eax,%ebx
   18116:	93                   	xchg   %eax,%ebx
   18117:	80 93 93 93 93 93 93 	adcb   $0x93,-0x6c6c6c6d(%rbx)
   1811e:	93                   	xchg   %eax,%ebx
   1811f:	80       	sbbb   $0x90,-0x6f696b66(%rax)

0000000000018120 <standard>:
   18120:	98                   	cwtl   
   18121:	9a                   	(bad)  
   18122:	94                   	xchg   %eax,%esp
   18123:	96                   	xchg   %eax,%esi
   18124:	90                   	nop
   18125:	90                   	nop
   18126:	90                   	nop
   18127:	90                   	nop
   18128:	98                   	cwtl   
   18129:	9a                   	(bad)  
   1812a:	94                   	xchg   %eax,%esp
   1812b:	96                   	xchg   %eax,%esi
   1812c:	90                   	nop
   1812d:	90                   	nop
   1812e:	90                   	nop
   1812f:	80 98 9a 94 96 90 90 	sbbb   $0x90,-0x6f696b66(%rax)
   18136:	90                   	nop
   18137:	90                   	nop
   18138:	98                   	cwtl   
   18139:	9a                   	(bad)  
   1813a:	94                   	xchg   %eax,%esp
   1813b:	96                   	xchg   %eax,%esi
   1813c:	90                   	nop
   1813d:	90                   	nop
   1813e:	90                   	nop
   1813f:	90                   	nop
   18140:	98                   	cwtl   
   18141:	9a                   	(bad)  
   18142:	94                   	xchg   %eax,%esp
   18143:	96                   	xchg   %eax,%esi
   18144:	90                   	nop
   18145:	90                   	nop
   18146:	13 90 98 9a 94 96    	adc    -0x696b6568(%rax),%edx
   1814c:	90                   	nop
   1814d:	90                   	nop
   1814e:	10 90 98 9a 94 96    	adc    %dl,-0x696b6568(%rax)
   18154:	90                   	nop
   18155:	90                   	nop
   18156:	11 90 94 96 94 96    	adc    %edx,-0x696b696c(%rax)
   1815c:	90                   	nop
   1815d:	90                   	nop
   1815e:	12 90 40 40 40 40    	adc    0x40404040(%rax),%dl
   18164:	40                   	rex
   18165:	40                   	rex
   18166:	40                   	rex
   18167:	40                   	rex
   18168:	40                   	rex
   18169:	40                   	rex
   1816a:	40                   	rex
   1816b:	40                   	rex
   1816c:	40                   	rex
   1816d:	40                   	rex
   1816e:	40                   	rex
   1816f:	40 b0 b0             	rex mov $0xb0,%al
   18172:	b0 b0                	mov    $0xb0,%al
   18174:	b0 b0                	mov    $0xb0,%al
   18176:	b0 b0                	mov    $0xb0,%al
   18178:	90                   	nop
   18179:	90                   	nop
   1817a:	90                   	nop
   1817b:	90                   	nop
   1817c:	90                   	nop
   1817d:	90                   	nop
   1817e:	90                   	nop
   1817f:	90                   	nop
   18180:	b0 90                	mov    $0x90,%al
   18182:	90                   	nop
   18183:	95                   	xchg   %eax,%ebp
   18184:	14 15                	adc    $0x15,%al
   18186:	20 30                	and    %dh,(%rax)
   18188:	b0 96                	mov    $0x96,%al
   1818a:	b0 96                	mov    $0x96,%al
   1818c:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1818d:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1818e:	a0 a0 90 90 90 90 90 	movabs 0x90909090909090a0,%al
   18195:	90 90 
   18197:	90                   	nop
   18198:	90                   	nop
   18199:	90                   	nop
   1819a:	90                   	nop
   1819b:	90                   	nop
   1819c:	90                   	nop
   1819d:	90                   	nop
   1819e:	90                   	nop
   1819f:	90                   	nop
   181a0:	c4                   	(bad)  
   181a1:	c6 c4 c6             	mov    $0xc6,%ah
   181a4:	94                   	xchg   %eax,%esp
   181a5:	96                   	xchg   %eax,%esi
   181a6:	94                   	xchg   %eax,%esp
   181a7:	96                   	xchg   %eax,%esi
   181a8:	98                   	cwtl   
   181a9:	9a                   	(bad)  
   181aa:	94                   	xchg   %eax,%esp
   181ab:	96                   	xchg   %eax,%esi
   181ac:	99                   	cltd   
   181ad:	90                   	nop
   181ae:	95                   	xchg   %eax,%ebp
   181af:	9a                   	(bad)  
   181b0:	90                   	nop
   181b1:	90                   	nop
   181b2:	90                   	nop
   181b3:	90                   	nop
   181b4:	90                   	nop
   181b5:	90                   	nop
   181b6:	90                   	nop
   181b7:	90                   	nop
   181b8:	90                   	nop
   181b9:	90                   	nop
   181ba:	b0 90                	mov    $0x90,%al
   181bc:	b0 90                	mov    $0x90,%al
   181be:	90                   	nop
   181bf:	90                   	nop
   181c0:	90                   	nop
   181c1:	90                   	nop
   181c2:	90                   	nop
   181c3:	90                   	nop
   181c4:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   181c5:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   181c6:	a0 a0 90 90 a5 a5 a0 	movabs 0xa4a0a0a5a59090a0,%al
   181cd:	a0 a4 
   181cf:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
   181d0:	90                   	nop
   181d1:	90                   	nop
   181d2:	90                   	nop
   181d3:	90                   	nop
   181d4:	90                   	nop
   181d5:	90                   	nop
   181d6:	90                   	nop
   181d7:	90                   	nop
   181d8:	90                   	nop
   181d9:	90                   	nop
   181da:	90                   	nop
   181db:	90                   	nop
   181dc:	90                   	nop
   181dd:	90                   	nop
   181de:	90                   	nop
   181df:	90                   	nop
   181e0:	d8 da                	fcomp  %st(2)
   181e2:	90                   	nop
   181e3:	90                   	nop
   181e4:	90                   	nop
   181e5:	90                   	nop
   181e6:	f8                   	clc    
   181e7:	fa                   	cli    
   181e8:	90                   	nop
   181e9:	90                   	nop
   181ea:	90                   	nop
   181eb:	90                   	nop
   181ec:	90                   	nop
   181ed:	90                   	nop
   181ee:	90                   	nop
   181ef:	90                   	nop
   181f0:	d8 da                	fcomp  %st(2)
   181f2:	d8 da                	fcomp  %st(2)
   181f4:	90                   	nop
   181f5:	90                   	nop
   181f6:	90                   	nop
   181f7:	90                   	nop
   181f8:	90                   	nop
   181f9:	90                   	nop
   181fa:	90                   	nop
   181fb:	90                   	nop
   181fc:	90                   	nop
   181fd:	90                   	nop
   181fe:	90                   	nop
   181ff:	90                   	nop
   18200:	90                   	nop
   18201:	90                   	nop
   18202:	90                   	nop
   18203:	90                   	nop
   18204:	90                   	nop
   18205:	90                   	nop
   18206:	90                   	nop
   18207:	90                   	nop
   18208:	b0 90                	mov    $0x90,%al
   1820a:	90                   	nop
   1820b:	90                   	nop
   1820c:	90                   	nop
   1820d:	90                   	nop
   1820e:	90                   	nop
   1820f:	90                   	nop
   18210:	03 90 01 02 90 90    	add    -0x6f6ffdff(%rax),%edx
   18216:	e4 e6                	in     $0xe6,%al
   18218:	90                   	nop
   18219:	90                   	nop
   1821a:	90                   	nop
   1821b:	90                   	nop
   1821c:	90                   	nop
   1821d:	90                   	nop
   1821e:	f8                   	clc    
   1821f:	f6               	testb  $0x0,(%rcx)

0000000000018220 <_ZL16g_is_first_ecall>:
   18220:	01 00                	add    %eax,(%rax)
	...

0000000000018230 <sgx_trts_version>:
   18230:	53                   	push   %rbx
   18231:	47 58                	rex.RXB pop %r8
   18233:	5f                   	pop    %rdi
   18234:	54                   	push   %rsp
   18235:	52                   	push   %rdx
   18236:	54                   	push   %rsp
   18237:	53                   	push   %rbx
   18238:	5f                   	pop    %rdi
   18239:	56                   	push   %rsi
   1823a:	45 52                	rex.RB push %r10
   1823c:	53                   	push   %rbx
   1823d:	49                   	rex.WB
   1823e:	4f                   	rex.WRXB
   1823f:	4e 5f                	rex.WRX pop %rdi
   18241:	32 2e                	xor    (%rsi),%ch
   18243:	32 33                	xor    (%rbx),%dh
   18245:	2e 31 30             	cs xor %esi,(%rax)
   18248:	30 2e                	xor    %ch,(%rsi)
   1824a:	32 00                	xor    (%rax),%al
   1824c:	00 00                	add    %al,(%rax)
	...

0000000000018250 <__dso_handle>:
   18250:	50                   	push   %rax
   18251:	82                   	(bad)  
   18252:	01 00                	add    %eax,(%rax)
	...

0000000000019000 <aex_notify_c3_cache>:
	...

000000000001a000 <g_user_ema_root>:
   1a000:	20 a0 01 00 00 00    	and    %ah,0x1(%rax)
	...

000000000001a020 <user_ema_guard>:
	...
   1a058:	20 a0 01 00 00 00    	and    %ah,0x1(%rax)
   1a05e:	00 00                	add    %al,(%rax)
   1a060:	20 a0 01 00 00 00    	and    %ah,0x1(%rax)
	...

000000000001a068 <g_rts_ema_root>:
   1a068:	80 a0 01 00 00 00 00 	andb   $0x0,0x1(%rax)
	...

000000000001a080 <rts_ema_guard>:
	...
   1a0b8:	80 a0 01 00 00 00 00 	andb   $0x0,0x1(%rax)
   1a0bf:	00 80 a0 01 00 00    	add    %al,0x1a0(%rax)
   1a0c5:	00 00                	add    %al,(%rax)
	...

000000000001a0c8 <reserve_size_increment>:
   1a0c8:	00 00                	add    %al,(%rax)
   1a0ca:	01 00                	add    %eax,(%rax)
   1a0cc:	00 00                	add    %al,(%rax)
	...

000000000001a0d0 <size_mask>:
   1a0d0:	f8                   	clc    
   1a0d1:	ff                   	(bad)  
   1a0d2:	ff                   	(bad)  
   1a0d3:	ff                   	(bad)  
   1a0d4:	ff                   	(bad)  
   1a0d5:	ff                   	(bad)  
   1a0d6:	ff                   	(bad)  
   1a0d7:	ff                 	decl   (%rax)

000000000001a0d8 <header_size>:
   1a0d8:	08 00                	or     %al,(%rax)
   1a0da:	00 00                	add    %al,(%rax)
   1a0dc:	00 00                	add    %al,(%rax)
	...

000000000001a0e0 <sgx_tstdc_version>:
   1a0e0:	53                   	push   %rbx
   1a0e1:	47 58                	rex.RXB pop %r8
   1a0e3:	5f                   	pop    %rdi
   1a0e4:	54                   	push   %rsp
   1a0e5:	53                   	push   %rbx
   1a0e6:	54                   	push   %rsp
   1a0e7:	44                   	rex.R
   1a0e8:	43 5f                	rex.XB pop %r15
   1a0ea:	56                   	push   %rsi
   1a0eb:	45 52                	rex.RB push %r10
   1a0ed:	53                   	push   %rbx
   1a0ee:	49                   	rex.WB
   1a0ef:	4f                   	rex.WRXB
   1a0f0:	4e 5f                	rex.WRX pop %rdi
   1a0f2:	32 2e                	xor    (%rsi),%ch
   1a0f4:	32 33                	xor    (%rbx),%dh
   1a0f6:	2e 31 30             	cs xor %esi,(%rax)
   1a0f9:	30 2e                	xor    %ch,(%rsi)
   1a0fb:	32 00                	xor    (%rax),%al
   1a0fd:	00 00                	add    %al,(%rax)
	...

000000000001a100 <sgx_tcrypto_version>:
   1a100:	53                   	push   %rbx
   1a101:	47 58                	rex.RXB pop %r8
   1a103:	5f                   	pop    %rdi
   1a104:	54                   	push   %rsp
   1a105:	43 52                	rex.XB push %r10
   1a107:	59                   	pop    %rcx
   1a108:	50                   	push   %rax
   1a109:	54                   	push   %rsp
   1a10a:	4f 5f                	rex.WRXB pop %r15
   1a10c:	56                   	push   %rsi
   1a10d:	45 52                	rex.RB push %r10
   1a10f:	53                   	push   %rbx
   1a110:	49                   	rex.WB
   1a111:	4f                   	rex.WRXB
   1a112:	4e 5f                	rex.WRX pop %rdi
   1a114:	32 2e                	xor    (%rsi),%ch
   1a116:	32 33                	xor    (%rbx),%dh
   1a118:	2e 31 30             	cs xor %esi,(%rax)
   1a11b:	30 2e                	xor    %ch,(%rsi)
   1a11d:	32 00                	xor    (%rax),%al
	...

000000000001a120 <sgx_tservice_version>:
   1a120:	53                   	push   %rbx
   1a121:	47 58                	rex.RXB pop %r8
   1a123:	5f                   	pop    %rdi
   1a124:	54                   	push   %rsp
   1a125:	53                   	push   %rbx
   1a126:	45 52                	rex.RB push %r10
   1a128:	56                   	push   %rsi
   1a129:	49                   	rex.WB
   1a12a:	43                   	rex.XB
   1a12b:	45 5f                	rex.RB pop %r15
   1a12d:	56                   	push   %rsi
   1a12e:	45 52                	rex.RB push %r10
   1a130:	53                   	push   %rbx
   1a131:	49                   	rex.WB
   1a132:	4f                   	rex.WRXB
   1a133:	4e 5f                	rex.WRX pop %rdi
   1a135:	32 2e                	xor    (%rsi),%ch
   1a137:	32 33                	xor    (%rbx),%dh
   1a139:	2e 31 30             	cs xor %esi,(%rax)
   1a13c:	30 2e                	xor    %ch,(%rsi)
   1a13e:	32 00                	xor    (%rax),%al

Disassembly of section .nipd:

000000000001a140 <g_enclave_state>:
   1a140:	00 00                	add    %al,(%rax)
	...

000000000001a144 <g_xsave_enabled>:
   1a144:	00 00                	add    %al,(%rax)
	...

Disassembly of section .bss:

000000000001a160 <msp>:
	...

000000000001a170 <g_uninit_flag>:
   1a170:	00 00                	add    %al,(%rax)
	...

000000000001a174 <_ZL10g_ife_lock>:
   1a174:	00 00                	add    %al,(%rax)
	...

000000000001a178 <_ZL12g_tcs_cookie>:
	...

000000000001a180 <_ZL10g_tcs_node>:
	...

000000000001a188 <g_mm_pfhandler>:
	...

000000000001a190 <_ZL12g_veh_cookie>:
	...

000000000001a198 <_ZL14g_handler_lock>:
	...

000000000001a1a0 <_ZL12g_first_node>:
	...

000000000001a1a8 <g_exit_function_cookie>:
	...

000000000001a1b0 <g_exit_function_lock>:
	...

000000000001a1b8 <g_exit_function>:
	...

000000000001a1c0 <adding_reserve>:
	...

000000000001a1c8 <reserve_list>:
	...

000000000001a1d0 <large_block_list>:
	...

000000000001a1e0 <exact_block_list>:
	...

000000000001a9e0 <meta_used>:
	...

000000000001aa00 <meta_reserve>:
	...

000000000002aa00 <mm_user_end>:
	...

000000000002aa08 <mm_user_base>:
	...

000000000002aa10 <mm_lock>:
	...

000000000002aa18 <heap_used.0>:
	...

000000000002aa20 <g_peak_heap_used>:
	...

000000000002aa40 <_gm_>:
	...

000000000002ae00 <mparams>:
	...

000000000002ae30 <malloc_global_mutex>:
	...

000000000002ae38 <g_peak_rsrv_mem_committed>:
	...

000000000002ae40 <_ZZ15sgx_self_reportE11report_lock>:
	...

000000000002ae60 <_ZZ15sgx_self_reportE7_report>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <__ImageBase+0x78>
   a:	74 75                	je     81 <__ImageBase+0x81>
   c:	20 31                	and    %dh,(%rcx)
   e:	33 2e                	xor    (%rsi),%ebp
  10:	33 2e                	xor    (%rsi),%ebp
  12:	30 2d 36 75 62 75    	xor    %ch,0x75627536(%rip)        # 7562754e <_end+0x755fc53e>
  18:	6e                   	outsb  %ds:(%rsi),(%dx)
  19:	74 75                	je     90 <__ImageBase+0x90>
  1b:	32 7e 32             	xor    0x32(%rsi),%bh
  1e:	34 2e                	xor    $0x2e,%al
  20:	30 34 29             	xor    %dh,(%rcx,%rbp,1)
  23:	20 31                	and    %dh,(%rcx)
  25:	33 2e                	xor    (%rsi),%ebp
  27:	33 2e                	xor    (%rsi),%ebp
  29:	30 00                	xor    %al,(%rax)

Disassembly of section .note.sgxmeta:

0000000000000000 <.note.sgxmeta>:
       0:	0d 00 00 00 00       	or     $0x0,%eax
       5:	50                   	push   %rax
       6:	00 00                	add    %al,(%rax)
       8:	01 00                	add    %eax,(%rax)
       a:	00 00                	add    %al,(%rax)
       c:	73 67                	jae    75 <__ImageBase+0x75>
       e:	78 5f                	js     6f <__ImageBase+0x6f>
      10:	6d                   	insl   (%dx),%es:(%rdi)
      11:	65 74 61             	gs je  75 <__ImageBase+0x75>
      14:	64 61                	fs (bad) 
      16:	74 61                	je     79 <__ImageBase+0x79>
      18:	00 4c 0e 5d          	add    %cl,0x5d(%rsi,%rcx,1)
      1c:	63 94 02 a8 86 04 00 	movsxd 0x486a8(%rdx,%rax,1),%edx
      23:	00 00                	add    %al,(%rax)
      25:	01 00                	add    %eax,(%rax)
      27:	00 00                	add    %al,(%rax)
      29:	70 10                	jo     3b <__ImageBase+0x3b>
      2b:	00 00                	add    %al,(%rax)
      2d:	01 00                	add    %eax,(%rax)
      2f:	00 00                	add    %al,(%rax)
      31:	01 00                	add    %eax,(%rax)
      33:	00 00                	add    %al,(%rax)
      35:	80 0a 00             	orb    $0x0,(%rdx)
      38:	00 00                	add    %al,(%rax)
      3a:	00 00                	add    %al,(%rax)
      3c:	00 01                	add    %al,(%rcx)
      3e:	00 00                	add    %al,(%rax)
      40:	00 00                	add    %al,(%rax)
      42:	00 40 00             	add    %al,0x0(%rax)
      45:	00 00                	add    %al,(%rax)
      47:	00 00                	add    %al,(%rax)
      49:	04 00                	add    $0x0,%al
      4b:	00 00                	add    %al,(%rax)
      4d:	00 00                	add    %al,(%rax)
      4f:	00 00                	add    %al,(%rax)
      51:	e7 00                	out    %eax,$0x0
      53:	00 00                	add    %al,(%rax)
      55:	00 00                	add    %al,(%rax)
      57:	00 00                	add    %al,(%rax)
      59:	06                   	(bad)  
      5a:	00 00                	add    %al,(%rax)
      5c:	00 e1                	add    %ah,%cl
      5e:	00 00                	add    %al,(%rax)
      60:	00 00                	add    %al,(%rax)
      62:	00 01                	add    %al,(%rcx)
	...
      6c:	00 19                	add    %bl,(%rcx)
      6e:	04 25                	add    $0x25,%al
      70:	20 01                	and    %al,(%rcx)
      72:	01 00                	add    %eax,(%rax)
      74:	00 60 00             	add    %ah,0x0(%rax)
      77:	00 00                	add    %al,(%rax)
      79:	60                   	(bad)  
      7a:	00 00                	add    %al,(%rax)
      7c:	00 01                	add    %al,(%rcx)
	...
      d6:	00 00                	add    %al,(%rax)
      d8:	00 0d 5b d0 bf de    	add    %cl,-0x21402fa5(%rip)        # ffffffffdebfd139 <_end+0xffffffffdebd2129>
      de:	b1 3e                	mov    $0x3e,%cl
      e0:	f1                   	icebp  
      e1:	59                   	pop    %rcx
      e2:	2e 09 75 a3          	cs or  %esi,-0x5d(%rbp)
      e6:	2e ec                	cs in  (%dx),%al
      e8:	5c                   	pop    %rsp
      e9:	3e ee                	ds out %al,(%dx)
      eb:	c6                   	(bad)  
      ec:	77 a8                	ja     96 <__ImageBase+0x96>
      ee:	df e3                	(bad)  
      f0:	bf d3 03 c3 81       	mov    $0x81c303d3,%edi
      f5:	90                   	nop
      f6:	6e                   	outsb  %ds:(%rsi),(%dx)
      f7:	c2 8e bd             	ret    $0xbd8e
      fa:	07                   	(bad)  
      fb:	29 46 ec             	sub    %eax,-0x14(%rsi)
      fe:	f2 c3                	bnd ret 
     100:	b6 0d                	mov    $0xd,%dh
     102:	9e                   	sahf   
     103:	dc 3a                	fdivrl (%rdx)
     105:	f2 07                	repnz (bad) 
     107:	b6 23                	mov    $0x23,%dh
     109:	22 78 46             	and    0x46(%rax),%bh
     10c:	72 25                	jb     133 <__ImageBase+0x133>
     10e:	48 3b ea             	cmp    %rdx,%rbp
     111:	1d f4 d6 f4 c1       	sbb    $0xc1f4d6f4,%eax
     116:	f4                   	hlt    
     117:	5c                   	pop    %rsp
     118:	b5 c7                	mov    $0xc7,%ch
     11a:	b4 56                	mov    $0x56,%ah
     11c:	e2 8b                	loop   a9 <__ImageBase+0xa9>
     11e:	3c b7                	cmp    $0xb7,%al
     120:	55                   	push   %rbp
     121:	5d                   	pop    %rbp
     122:	ae                   	scas   %es:(%rdi),%al
     123:	7f 6f                	jg     194 <__ImageBase+0x194>
     125:	b9 54 42 89 fb       	mov    $0xfb894254,%ecx
     12a:	ed                   	in     (%dx),%eax
     12b:	f7 e7                	mul    %edi
     12d:	ba e2 50 26 95       	mov    $0x952650e2,%edx
     132:	b6 88                	mov    $0x88,%dh
     134:	1e                   	(bad)  
     135:	7e f6                	jle    12d <__ImageBase+0x12d>
     137:	0a df                	or     %bh,%bl
     139:	5e                   	pop    %rsi
     13a:	8d                   	(bad)  
     13b:	f9                   	stc    
     13c:	f2 a4                	repnz movsb %ds:(%rsi),%es:(%rdi)
     13e:	e5 5a                	in     $0x5a,%eax
     140:	aa                   	stos   %al,%es:(%rdi)
     141:	82                   	(bad)  
     142:	8d 42 e0             	lea    -0x20(%rdx),%eax
     145:	e8 88 66 77 c0       	call   ffffffffc07767d2 <_end+0xffffffffc074b7c2>
     14a:	1a a7 8f 64 66 35    	sbb    0x3566648f(%rdi),%ah
     150:	e6 ee                	out    %al,$0xee
     152:	88 80 7c 2c 87 6a    	mov    %al,0x6a872c7c(%rax)
     158:	6c                   	insb   (%dx),%es:(%rdi)
     159:	37                   	(bad)  
     15a:	d5                   	(bad)  
     15b:	71 58                	jno    1b5 <__ImageBase+0x1b5>
     15d:	e1 e9                	loope  148 <__ImageBase+0x148>
     15f:	26 d8 39             	es fdivrs (%rcx)
     162:	2a 36                	sub    (%rsi),%dh
     164:	df 7a 25             	fistpll 0x25(%rdx)
     167:	38 6b 25             	cmp    %ch,0x25(%rbx)
     16a:	2e 76 4f             	jbe,pn 1bc <__ImageBase+0x1bc>
     16d:	53                   	push   %rbx
     16e:	35 0f 80 ab 5b       	xor    $0x5bab800f,%eax
     173:	dd 0f                	fisttpll (%rdi)
     175:	8a bc 43 91 bf 2a 27 	mov    0x272abf91(%rbx,%rax,2),%bh
     17c:	3c 19                	cmp    $0x19,%al
     17e:	dd 3e                	fnstsw (%rsi)
     180:	ad                   	lods   %ds:(%rsi),%eax
     181:	97                   	xchg   %eax,%edi
     182:	11 a2 0e b3 73 d9    	adc    %esp,-0x268c4cf2(%rdx)
     188:	75 b3                	jne    13d <__ImageBase+0x13d>
     18a:	42 63 ef             	rex.X movsxd %edi,%ebp
     18d:	21 89 45 24 c6 cc    	and    %ecx,-0x3339dbbb(%rcx)
     193:	cb                   	lret   
     194:	eb 30                	jmp    1c6 <__ImageBase+0x1c6>
     196:	dd 76 ae             	fnsave -0x52(%rsi)
     199:	f1                   	icebp  
     19a:	ee                   	out    %al,(%dx)
     19b:	34 25                	xor    $0x25,%al
     19d:	1b 00                	sbb    (%rax),%eax
     19f:	50                   	push   %rax
     1a0:	7d 49                	jge    1eb <__ImageBase+0x1eb>
     1a2:	77 a5                	ja     149 <__ImageBase+0x149>
     1a4:	24 90                	and    $0x90,%al
     1a6:	7b 92                	jnp    13a <__ImageBase+0x13a>
     1a8:	24 96                	and    $0x96,%al
     1aa:	1b e6                	sbb    %esi,%esp
     1ac:	98                   	cwtl   
     1ad:	d6                   	(bad)  
     1ae:	42                   	rex.X
     1af:	36 3c 44             	ss cmp $0x44,%al
     1b2:	0c 6f                	or     $0x6f,%al
     1b4:	01 63 06             	add    %esp,0x6(%rbx)
     1b7:	17                   	(bad)  
     1b8:	8d 42 ac             	lea    -0x54(%rdx),%eax
     1bb:	7b 8b                	jnp    148 <__ImageBase+0x148>
     1bd:	a9 6d eb 67 dc       	test   $0xdc67eb6d,%eax
     1c2:	e7 ee                	out    %eax,$0xee
     1c4:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
     1c5:	ea                   	(bad)  
     1c6:	7e 59                	jle    221 <__ImageBase+0x221>
     1c8:	5e                   	pop    %rsi
     1c9:	05 96 f8 3d 2b       	add    $0x2b3df896,%eax
     1ce:	88 6d ee             	mov    %ch,-0x12(%rbp)
     1d1:	cd b6                	int    $0xb6
     1d3:	8b c0                	mov    %eax,%eax
     1d5:	10 da                	adc    %bl,%dl
     1d7:	bf 59 bb a0 ed       	mov    $0xeda0bb59,%edi
     1dc:	87 d3                	xchg   %edx,%ebx
     1de:	48                   	rex.W
     1df:	43 f1                	rex.XB icebp 
     1e1:	69 32 c8 06 7c 5c    	imul   $0x5c7c06c8,(%rdx),%esi
     1e7:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
     1e8:	c5 1a a9             	(bad)
     1eb:	e9 e1 00 20 a9       	jmp    ffffffffa92002d1 <_end+0xffffffffa91d52c1>
     1f0:	8d                   	(bad)  
     1f1:	e1 42                	loope  235 <__ImageBase+0x235>
     1f3:	9d                   	popf   
     1f4:	2b 71 4a             	sub    0x4a(%rcx),%esi
     1f7:	ff cb                	dec    %ebx
     1f9:	b6 d2                	mov    $0xd2,%dh
     1fb:	ac                   	lods   %ds:(%rsi),%al
     1fc:	c5 95 69 dd          	vpunpckhwd %ymm5,%ymm13,%ymm3
     200:	fa                   	cli    
     201:	ff 81 f2 06 b8 41    	incl   0x41b806f2(%rcx)
     207:	08 66 18             	or     %ah,0x18(%rsi)
     20a:	a3 bd a5 69 74 74 d9 	movabs %eax,0x8051d9747469a5bd
     211:	51 80 
     213:	ea                   	(bad)  
     214:	ac                   	lods   %ds:(%rsi),%al
     215:	87 23                	xchg   %esp,(%rbx)
     217:	0c 35                	or     $0x35,%al
     219:	cf                   	iret   
     21a:	05 ea db b0 b7       	add    $0xb7b0dbea,%eax
     21f:	e6 f8                	out    %al,$0xf8
     221:	5c                   	pop    %rsp
     222:	b5 05                	mov    $0x5,%ch
     224:	ff                   	(bad)  
     225:	7b 39                	jnp    260 <__ImageBase+0x260>
     227:	54                   	push   %rsp
     228:	a2 c3 73 4b d4 e3 c7 	movabs %al,0x2a18c7e3d44b73c3
     22f:	18 2a 
     231:	bb f1 76 d9 1c       	mov    $0x1cd976f1,%ebx
     236:	8d 57 1b             	lea    0x1b(%rdi),%edx
     239:	a1 36 85 7a e6 8d 65 	movabs 0xf30b658de67a8536,%eax
     240:	0b f3 
     242:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
     243:	8c 5b 93             	mov    %ds,-0x6d(%rbx)
     246:	9f                   	lahf   
     247:	b7 78                	mov    $0x78,%bh
     249:	6d                   	insl   (%dx),%es:(%rdi)
     24a:	1d ba 6e d7 93       	sbb    $0x93d76eba,%eax
     24f:	17                   	(bad)  
     250:	9f                   	lahf   
     251:	99                   	cltd   
     252:	09 d2                	or     %edx,%edx
     254:	02 fb                	add    %bl,%bh
     256:	38 0b                	cmp    %cl,(%rbx)
     258:	98                   	cwtl   
     259:	03 00                	add    (%rax),%eax
     25b:	00 00                	add    %al,(%rax)
     25d:	7e 0e                	jle    26d <__ImageBase+0x26d>
     25f:	b6 33                	mov    $0x33,%dh
     261:	4d 2c ec             	rex.WRB sub $0xec,%al
     264:	71 4a                	jno    2b0 <__ImageBase+0x2b0>
     266:	e2 0b                	loop   273 <__ImageBase+0x273>
     268:	ed                   	in     (%dx),%eax
     269:	ef                   	out    %eax,(%dx)
     26a:	e5 fe                	in     $0xfe,%eax
     26c:	d0 35 d4 7f 98 88    	shlb   -0x7767802c(%rip)        # ffffffff88988246 <_end+0xffffffff8895d236>
     272:	8e 3f                	mov    (%rdi),%?
     274:	51                   	push   %rcx
     275:	b0 0e                	mov    $0xe,%al
     277:	5e                   	pop    %rsi
     278:	cd ce                	int    $0xce
     27a:	53                   	push   %rbx
     27b:	e4 4d                	in     $0x4d,%al
     27d:	ba 98 6c 7f 0f       	mov    $0xf7f6c98,%edx
     282:	6e                   	outsb  %ds:(%rsi),(%dx)
     283:	8d 6c b1 23          	lea    0x23(%rcx,%rsi,4),%ebp
     287:	e7 7e                	out    %eax,$0x7e
     289:	1d ba 04 14 87       	sbb    $0x871404ba,%eax
     28e:	38 87 4b ee 0f 2b    	cmp    %al,0x2b0fee4b(%rdi)
     294:	a0 65 28 5d cf 24 dd 	movabs 0xe8ffdd24cf5d2865,%al
     29b:	ff e8 
     29d:	c4                   	(bad)  
     29e:	f3 31 38             	repz xor %edi,(%rax)
     2a1:	12 68 8e             	adc    -0x72(%rax),%ch
     2a4:	81 e7 58 96 5c 1f    	and    $0x1f5c9658,%edi
     2aa:	b5 8e                	mov    $0x8e,%ch
     2ac:	66 90                	xchg   %ax,%ax
     2ae:	f1                   	icebp  
     2af:	dd a4 3c 83 9c e4 f1 	frstor -0xe1b637d(%rsp,%rdi,1)
     2b6:	51                   	push   %rcx
     2b7:	a9 7c 5f 70 6b       	test   $0x6b705f7c,%eax
     2bc:	93                   	xchg   %eax,%ebx
     2bd:	af                   	scas   %es:(%rdi),%eax
     2be:	f7 e9                	imul   %ecx
     2c0:	b1 84                	mov    $0x84,%cl
     2c2:	ef                   	out    %eax,(%dx)
     2c3:	72 f6                	jb     2bb <__ImageBase+0x2bb>
     2c5:	bc fe e3 b4 35       	mov    $0x35b4e3fe,%esp
     2ca:	54                   	push   %rsp
     2cb:	c2 1e 16             	ret    $0x161e
     2ce:	28 36                	sub    %dh,(%rsi)
     2d0:	63 34 bd 86 ec b4 cc 	movsxd -0x334b137a(,%rdi,4),%esi
     2d7:	92                   	xchg   %eax,%edx
     2d8:	94                   	xchg   %eax,%esp
     2d9:	28 81 12 aa 1f 5e    	sub    %al,0x5e1faa12(%rcx)
     2df:	46 81 9e 77 59 e0 cb 	rex.RX sbbl $0x6632e4a5,-0x341fa689(%rsi)
     2e6:	a5 e4 32 66 
     2ea:	58                   	pop    %rax
     2eb:	9a                   	(bad)  
     2ec:	b1 54                	mov    $0x54,%cl
     2ee:	4f 0b 7d f4          	rex.WRXB or -0xc(%r13),%r15
     2f2:	33 4e ff             	xor    -0x1(%rsi),%ecx
     2f5:	4d ca 93 15          	rex.WRB lretq $0x1593
     2f9:	b3 26                	mov    $0x26,%bl
     2fb:	a1 34 a3 be 6d ac 23 	movabs 0x322423ac6dbea334,%eax
     302:	24 32 
     304:	f3 91                	repz xchg %eax,%ecx
     306:	e1 74                	loope  37c <__ImageBase+0x37c>
     308:	b4 ed                	mov    $0xed,%ah
     30a:	b6 22                	mov    $0x22,%dh
     30c:	f0 cb                	lock lret 
     30e:	41 fb                	rex.B sti 
     310:	ae                   	scas   %es:(%rdi),%al
     311:	76 c0                	jbe    2d3 <__ImageBase+0x2d3>
     313:	82                   	(bad)  
     314:	3a 64 11 ee          	cmp    -0x12(%rcx,%rdx,1),%ah
     318:	14 6c                	adc    $0x6c,%al
     31a:	2c 25                	sub    $0x25,%al
     31c:	e7 30                	out    %eax,$0x30
     31e:	fb                   	sti    
     31f:	03 e4                	add    %esp,%esp
     321:	b8 65 d2 66 e0       	mov    $0xe066d265,%eax
     326:	39 9f 45 af ca 52    	cmp    %ebx,0x52caaf45(%rdi)
     32c:	4b cf                	rex.WXB iretq 
     32e:	4c 97                	rex.WR xchg %rax,%rdi
     330:	f5                   	cmc    
     331:	50                   	push   %rax
     332:	4c 0e                	rex.WR (bad) 
     334:	d2 a0 aa 21 ef ba    	shlb   %cl,-0x4510de56(%rax)
     33a:	05 ba 0f f6 9f       	add    $0x9ff60fba,%eax
     33f:	32 a4 b7 b7 48 55 b8 	xor    -0x47aab749(%rdi,%rsi,4),%ah
     346:	ea                   	(bad)  
     347:	f1                   	icebp  
     348:	30 a4 33 d1 51 83 3f 	xor    %ah,0x3f8351d1(%rbx,%rsi,1)
     34f:	ad                   	lods   %ds:(%rsi),%eax
     350:	57                   	push   %rdi
     351:	4b                   	rex.WXB
     352:	42 38 7c 32 9e       	cmp    %dil,-0x62(%rdx,%r14,1)
     357:	fa                   	cli    
     358:	ca 42 e8             	lret   $0xe842
     35b:	ea                   	(bad)  
     35c:	5b                   	pop    %rbx
     35d:	b8 e7 3c db 7b       	mov    $0x7bdb3ce7,%eax
     362:	6d                   	insl   (%dx),%es:(%rdi)
     363:	ef                   	out    %eax,(%dx)
     364:	ba 1f aa fe 72       	mov    $0x72feaa1f,%edx
     369:	00 06                	add    %al,(%rsi)
     36b:	c8 32 a8 c9          	enter  $0xa832,$0xc9
     36f:	39 89 47 4a fe 02    	cmp    %ecx,0x2fe4a47(%rcx)
     375:	8f                   	(bad)  
     376:	f3 2d 6e 87 47 9e    	repz sub $0x9e47876e,%eax
     37c:	8a 08                	mov    (%rax),%cl
     37e:	9d                   	popf   
     37f:	6f                   	outsl  %ds:(%rsi),(%dx)
     380:	38 8c cc 3d 0e f0 58 	cmp    %cl,0x58f00e3d(%rsp,%rcx,8)
     387:	4b                   	rex.WXB
     388:	f0 18 26             	lock sbb %ah,(%rsi)
     38b:	79 46                	jns    3d3 <__ImageBase+0x3d3>
     38d:	1f                   	(bad)  
     38e:	91                   	xchg   %eax,%ecx
     38f:	21 6a ce             	and    %ebp,-0x32(%rdx)
     392:	5c                   	pop    %rsp
     393:	e3 19                	jrcxz  3ae <__ImageBase+0x3ae>
     395:	35 79 0f f3 5e       	xor    $0x5ef30f79,%eax
     39a:	ea                   	(bad)  
     39b:	c2 6d d8             	ret    $0xd86d
     39e:	bc fa 85 20 3f       	mov    $0x3f2085fa,%esp
     3a3:	d4                   	(bad)  
     3a4:	71 66                	jno    40c <__ImageBase+0x40c>
     3a6:	94                   	xchg   %eax,%esp
     3a7:	cc                   	int3   
     3a8:	b6 44                	mov    $0x44,%dh
     3aa:	68 c5 45 a1 e2       	push   $0xffffffffe2a145c5
     3af:	ce                   	(bad)  
     3b0:	ea                   	(bad)  
     3b1:	7b a9                	jnp    35c <__ImageBase+0x35c>
     3b3:	6a fd                	push   $0xfffffffffffffffd
     3b5:	b9 41 b3 10 ad       	mov    $0xad10b341,%ecx
     3ba:	ac                   	lods   %ds:(%rsi),%al
     3bb:	ca ca f5             	lret   $0xf5ca
     3be:	f8                   	clc    
     3bf:	b3 16                	mov    $0x16,%bl
     3c1:	db f2                	fcomi  %st(2),%st
     3c3:	85 ef                	test   %ebp,%edi
     3c5:	53                   	push   %rbx
     3c6:	25 13 15 a1 93       	and    $0x93a11513,%eax
     3cb:	bc 75 e3 90 88       	mov    $0x8890e375,%esp
     3d0:	d8 ed                	fsubr  %st(5),%st
     3d2:	70 8f                	jo     363 <__ImageBase+0x363>
     3d4:	81 01 96 b3 bf 9a    	addl   $0x9abfb396,(%rcx)
     3da:	7b b5                	jnp    391 <__ImageBase+0x391>
     3dc:	0c 00                	or     $0x0,%al
     3de:	00 00                	add    %al,(%rax)
     3e0:	00 ff                	add    %bh,%bh
     3e2:	ff                   	(bad)  
     3e3:	ff                   	(bad)  
     3e4:	ff 00                	incl   (%rax)
	...
     3f6:	00 00                	add    %al,(%rax)
     3f8:	00 04 00             	add    %al,(%rax,%rax,1)
     3fb:	00 00                	add    %al,(%rax)
     3fd:	00 00                	add    %al,(%rax)
     3ff:	00 00                	add    %al,(%rax)
     401:	03 00                	add    (%rax),%eax
     403:	00 00                	add    %al,(%rax)
     405:	00 00                	add    %al,(%rax)
     407:	00 00                	add    %al,(%rax)
     409:	fd                   	std    
     40a:	ff                   	(bad)  
     40b:	ff                   	(bad)  
     40c:	ff                   	(bad)  
     40d:	ff                   	(bad)  
     40e:	ff 00                	incl   (%rax)
     410:	ff 1b                	lcall  *(%rbx)
     412:	ff                   	(bad)  
     413:	ff                   	(bad)  
     414:	ff                   	(bad)  
     415:	ff                   	(bad)  
     416:	ff                   	(bad)  
     417:	ff                   	(bad)  
     418:	ff 30                	push   (%rax)
     41a:	1d b2 fe ad 44       	sbb    $0x44adfeb2,%eax
     41f:	57                   	push   %rdi
     420:	16                   	(bad)  
     421:	89 2f                	mov    %ebp,(%rdi)
     423:	47 75 a7             	rex.RXB jne 3cd <__ImageBase+0x3cd>
     426:	4b 03 a1 6e 6e 26 f3 	rex.WXB add -0xcd99192(%r9),%rsp
     42d:	75 63                	jne    492 <__ImageBase+0x492>
     42f:	26 0a 00             	es or  (%rax),%al
     432:	d6                   	(bad)  
     433:	6d                   	insl   (%dx),%es:(%rdi)
     434:	f2 42 16             	repnz rex.X (bad) 
     437:	16                   	(bad)  
     438:	37                   	(bad)  
	...
     469:	3f                   	(bad)  
     46a:	9f                   	lahf   
     46b:	1a 2c 5c             	sbb    (%rsp,%rbx,2),%ch
     46e:	29 f9                	sub    %edi,%ecx
     470:	15 ee d5 49 7c       	adc    $0x7c49d5ee,%eax
     475:	b8 79 af e9 f6       	mov    $0xf6e9af79,%eax
     47a:	fe                   	(bad)  
     47b:	19 a3 1b a7 40 8b    	sbb    %esp,-0x74bf58e5(%rbx)
     481:	94                   	xchg   %eax,%esp
     482:	b5 72                	mov    $0x72,%ch
     484:	38 a4 91 03 ce 73 f4 	cmp    %ah,-0xb8c31fd(%rcx,%rdx,4)
     48b:	01 6f df             	add    %ebp,-0x21(%rdi)
     48e:	52                   	push   %rdx
     48f:	83 5a e1 ca          	sbbl   $0xffffffca,-0x1f(%rdx)
     493:	73 12                	jae    4a7 <__ImageBase+0x4a7>
     495:	da d9                	fcmovu %st(1),%st
     497:	34 4c                	xor    $0x4c,%al
     499:	1c 78                	sbb    $0x78,%al
     49b:	81 22 6e b5 72 f9    	andl   $0xf972b56e,(%rdx)
     4a1:	b2 3a                	mov    $0x3a,%dl
     4a3:	ee                   	out    %al,(%dx)
     4a4:	68 84 a1 5a c1       	push   $0xffffffffc15aa184
     4a9:	d4                   	(bad)  
     4aa:	d6                   	(bad)  
     4ab:	9d                   	popf   
     4ac:	33 53 6e             	xor    0x6e(%rbx),%edx
     4af:	bd 0e 22 3d 54       	mov    $0x543d220e,%ebp
     4b4:	ae                   	scas   %es:(%rdi),%al
     4b5:	a3 23 f0 e4 90 bc 13 	movabs %eax,0xe2a113bc90e4f023
     4bc:	a1 e2 
     4be:	14 b4                	adc    $0xb4,%al
     4c0:	78 6c                	js     52e <__ImageBase+0x52e>
     4c2:	2f                   	(bad)  
     4c3:	60                   	(bad)  
     4c4:	5e                   	pop    %rsi
     4c5:	08 fd                	or     %bh,%ch
     4c7:	05 8d 53 ca 62       	add    $0x62ca538d,%eax
     4cc:	9c                   	pushf  
     4cd:	52                   	push   %rdx
     4ce:	11 ec                	adc    %ebp,%esp
     4d0:	d3 de                	rcr    %cl,%esi
     4d2:	eb d7                	jmp    4ab <__ImageBase+0x4ab>
     4d4:	a1 05 fa e6 95 9a 1b 	movabs 0xf3ae1b9a95e6fa05,%eax
     4db:	ae f3 
     4dd:	86 1f                	xchg   %bl,(%rdi)
     4df:	c6                   	(bad)  
     4e0:	b9 0e 85 16 4d       	mov    $0x4d16850e,%ecx
     4e5:	f7 ce 4b 63 22 f4    	test   $0xf422634b,%esi
     4eb:	50                   	push   %rax
     4ec:	55                   	push   %rbp
     4ed:	f7 5f 14             	negl   0x14(%rdi)
     4f0:	9d                   	popf   
     4f1:	ee                   	out    %al,(%dx)
     4f2:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
     4f3:	06                   	(bad)  
     4f4:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
     4f5:	4a 6b c2 27          	rex.WX imul $0x27,%rdx,%rax
     4f9:	9a                   	(bad)  
     4fa:	84 c3                	test   %al,%bl
     4fc:	73 ea                	jae    4e8 <__ImageBase+0x4e8>
     4fe:	35 d7 d8 dc 57       	xor    $0x57dcd8d7,%eax
     503:	d2 24 5e             	shlb   %cl,(%rsi,%rbx,2)
     506:	12 6c 76 98          	adc    -0x68(%rsi,%rsi,2),%ch
     50a:	6c                   	insb   (%dx),%es:(%rdi)
     50b:	81 b0 f8 db c9 af 89 	xorl   $0xf04d5d89,-0x50362408(%rax)
     512:	5d 4d f0 
     515:	c0 48 9d 63          	rorb   $0x63,-0x63(%rax)
     519:	33 f0                	xor    %eax,%esi
     51b:	da df                	fcmovu %st(7),%st
     51d:	bd 79 f9 8e 52       	mov    $0x528ef979,%ebp
     522:	4d 2a f1             	rex.WRB sub %r9b,%r14b
     525:	1e                   	(bad)  
     526:	c9                   	leave  
     527:	5c                   	pop    %rsp
     528:	33 4e e3             	xor    -0x1d(%rsi),%ecx
     52b:	b2 f1                	mov    $0xf1,%dl
     52d:	1b 79 9f             	sbb    -0x61(%rcx),%edi
     530:	df 3f                	fistpll (%rdi)
     532:	ab                   	stos   %eax,%es:(%rdi)
     533:	63 cd                	movsxd %ebp,%ecx
     535:	9c                   	pushf  
     536:	17                   	(bad)  
     537:	e3 99                	jrcxz  4d2 <__ImageBase+0x4d2>
     539:	43 6f                	rex.XB outsl %ds:(%rsi),(%dx)
     53b:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
     53c:	59                   	pop    %rcx
     53d:	c0 59 4d a6          	rcrb   $0xa6,0x4d(%rcx)
     541:	54                   	push   %rsp
     542:	f1                   	icebp  
     543:	cf                   	iret   
     544:	fa                   	cli    
     545:	04 03                	add    $0x3,%al
     547:	06                   	(bad)  
     548:	ad                   	lods   %ds:(%rsi),%eax
     549:	f1                   	icebp  
     54a:	1f                   	(bad)  
     54b:	7a f7                	jp     544 <__ImageBase+0x544>
     54d:	50                   	push   %rax
     54e:	4f af                	rex.WRXB scas %es:(%rdi),%rax
     550:	1a 24 47             	sbb    (%rdi,%rax,2),%ah
     553:	cf                   	iret   
     554:	3f                   	(bad)  
     555:	fa                   	cli    
     556:	f6 2a                	imulb  (%rdx)
     558:	77 f5                	ja     54f <__ImageBase+0x54f>
     55a:	c8 dc e6 a9          	enter  $0xe6dc,$0xa9
     55e:	25 63 ad 32 4f       	and    $0x4f32ad63,%eax
     563:	37                   	(bad)  
     564:	98                   	cwtl   
     565:	dc d6                	(bad)  
     567:	e9 77 78 b6 2b       	jmp    2bb67de3 <_end+0x2bb3cdd3>
     56c:	d3 42 ef             	roll   %cl,-0x11(%rdx)
     56f:	28 4f bf             	sub    %cl,-0x41(%rdi)
     572:	83 82 e1 85 89 ac 40 	addl   $0x40,-0x53767a1f(%rdx)
     579:	e6 45                	out    %al,$0x45
     57b:	1e                   	(bad)  
     57c:	fe                   	(bad)  
     57d:	dc fe                	fdivr  %st,%st(6)
     57f:	e8 e7 ed 1d c3       	call   ffffffffc31df36b <_end+0xffffffffc31b435b>
     584:	ce                   	(bad)  
     585:	ee                   	out    %al,(%dx)
     586:	95                   	xchg   %eax,%ebp
     587:	30 4d 64             	xor    %cl,0x64(%rbp)
     58a:	ee                   	out    %al,(%dx)
     58b:	15 e5 22 00 6a       	adc    $0x6a0022e5,%eax
     590:	4d 79 e9             	rex.WRB jns 57c <__ImageBase+0x57c>
     593:	ca 12 81             	lret   $0x8112
     596:	d7                   	xlat   %ds:(%rbx)
     597:	71 3f                	jno    5d8 <__ImageBase+0x5d8>
     599:	79 30                	jns    5cb <__ImageBase+0x5cb>
     59b:	a1 b9 67 91 e9 d4 d2 	movabs 0x5285d2d4e99167b9,%eax
     5a2:	85 52 
     5a4:	64 da 21             	fisubl %fs:(%rcx)
     5a7:	4c d3 87 d7 d8 3a e5 	rex.WR rolq %cl,-0x1ac52729(%rdi)
     5ae:	86 d8                	xchg   %bl,%al
     5b0:	78 32                	js     5e4 <__ImageBase+0x5e4>
     5b2:	ab                   	stos   %eax,%es:(%rdi)
     5b3:	d7                   	xlat   %ds:(%rbx)
     5b4:	8b 11                	mov    (%rcx),%edx
     5b6:	c2 f7 2f             	ret    $0x2ff7
     5b9:	c9                   	leave  
     5ba:	57                   	push   %rdi
     5bb:	f6 53 12             	notb   0x12(%rbx)
     5be:	5f                   	pop    %rdi
     5bf:	63 4b 19             	movsxd 0x19(%rbx),%ecx
     5c2:	b1 7e                	mov    $0x7e,%cl
     5c4:	5c                   	pop    %rsp
     5c5:	4b 82                	rex.WXB (bad) 
     5c7:	1c 1e                	sbb    $0x1e,%al
     5c9:	96                   	xchg   %eax,%esi
     5ca:	b9 05 bc 03 91       	mov    $0x9103bc05,%ecx
     5cf:	ac                   	lods   %ds:(%rsi),%al
     5d0:	a2 95 66 84 25 fd f5 	movabs %al,0x21d4f5fd25846695
     5d7:	d4 21 
     5d9:	01 df                	add    %ebx,%edi
     5db:	29 dc                	sub    %ebx,%esp
     5dd:	0d a6 1d a9 68       	or     $0x68a91da6,%eax
     5e2:	da de                	fcmovu %st(6),%st
     5e4:	c4                   	(bad)  
     5e5:	11 f3                	adc    %esi,%ebx
     5e7:	0f 01 17             	lgdt   (%rdi)
     5ea:	b6 fd                	mov    $0xfd,%dh
     5ec:	6c                   	insb   (%dx),%es:(%rdi)
     5ed:	ab                   	stos   %eax,%es:(%rdi)
     5ee:	f3 38 56 88          	repz cmp %dl,-0x78(%rsi)
     5f2:	cc                   	int3   
     5f3:	7e b4                	jle    5a9 <__ImageBase+0x5a9>
     5f5:	b7 d8                	mov    $0xd8,%bh
     5f7:	ac                   	lods   %ds:(%rsi),%al
     5f8:	6d                   	insl   (%dx),%es:(%rdi)
     5f9:	c3                   	ret    
     5fa:	d7                   	xlat   %ds:(%rbx)
     5fb:	a1 85 e7 43 fe 3c 5a 	movabs 0xfe2b5a3cfe43e785,%eax
     602:	2b fe 
     604:	72 44                	jb     64a <__ImageBase+0x64a>
     606:	02 5c 88 cd          	add    -0x33(%rax,%rcx,4),%bl
     60a:	73 ae                	jae    5ba <__ImageBase+0x5ba>
     60c:	d2 cc                	ror    %cl,%ah
     60e:	68 90 6b 87 56       	push   $0x56876b90
     613:	eb 7d                	jmp    692 <__ImageBase+0x692>
     615:	bb 48 99 79 14       	mov    $0x14799948,%ebx
     61a:	f9                   	stc    
     61b:	1c 19                	sbb    $0x19,%al
     61d:	21 08                	and    %ecx,(%rax)
     61f:	fc                   	cld    
     620:	89 49 ca             	mov    %ecx,-0x36(%rcx)
     623:	3d df 74 03 7c       	cmp    $0x7c0374df,%eax
     628:	5a                   	pop    %rdx
     629:	38 c3                	cmp    %al,%bl
     62b:	14 50                	adc    $0x50,%al
     62d:	be 25 61 b8 f8       	mov    $0xf8b86125,%esi
     632:	22 bf 58 9a 27 d8    	and    -0x27d865a8(%rdi),%bh
     638:	27                   	(bad)  
     639:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
     63a:	eb 4b                	jmp    687 <__ImageBase+0x687>
     63c:	c0 dd c0             	rcr    $0xc0,%ch
     63f:	96                   	xchg   %eax,%esi
     640:	c6                   	(bad)  
     641:	35 82 e1 28 ab       	xor    $0xab28e182,%eax
     646:	b2 c2                	mov    $0xc2,%dl
     648:	52                   	push   %rdx
     649:	02 a6 da da 4a e2    	add    -0x1db52526(%rsi),%ah
     64f:	88 cb                	mov    %cl,%bl
     651:	ee                   	out    %al,(%dx)
     652:	7e cb                	jle    61f <__ImageBase+0x61f>
     654:	43 62                	rex.XB (bad) 
     656:	dc 9d 5c fa e2 15    	fcompl 0x15e2fa5c(%rbp)
     65c:	b3 03                	mov    $0x3,%bl
     65e:	d4                   	(bad)  
     65f:	18 eb                	sbb    %ch,%bl
     661:	b5 64                	mov    $0x64,%ch
     663:	c5 9f 11             	(bad)
     666:	8c eb                	mov    %gs,%ebx
     668:	0a 32                	or     (%rdx),%dh
     66a:	73 8c                	jae    5f8 <__ImageBase+0x5f8>
     66c:	d9 a7 ff 64 4a d5    	fldenv -0x2ab59b01(%rdi)
     672:	75 a6                	jne    61a <__ImageBase+0x61a>
     674:	29 5f 81             	sub    %ebx,-0x7f(%rdi)
     677:	e1 46                	loope  6bf <__ImageBase+0x6bf>
     679:	49 5a                	rex.WB pop %r10
     67b:	2f                   	(bad)  
     67c:	e7 a4                	out    %eax,$0xa4
     67e:	97                   	xchg   %eax,%edi
     67f:	f1                   	icebp  
     680:	7e 8a                	jle    60c <__ImageBase+0x60c>
     682:	66 a0 0a 56 10 3c a9 	data16 movabs 0x23dec4a93c10560a,%al
     689:	c4 de 23 
     68c:	1f                   	(bad)  
     68d:	58                   	pop    %rax
     68e:	2d 49 62 79 88       	sub    $0x88796249,%eax
     693:	16                   	(bad)  
     694:	f5                   	cmc    
     695:	11 96 4b 6f 39 4d    	adc    %edx,0x4d396f4b(%rsi)
     69b:	3a f6                	cmp    %dh,%dh
     69d:	89 2f                	mov    %ebp,(%rdi)
     69f:	2c ec                	sub    $0xec,%al
     6a1:	f8                   	clc    
     6a2:	33 32                	xor    (%rdx),%esi
     6a4:	46 e9 7d 56 cb 0c    	rex.RX jmp ccb5d27 <_end+0xcc8ad17>
     6aa:	cc                   	int3   
     6ab:	38 e9                	cmp    %ch,%cl
     6ad:	93                   	xchg   %eax,%ebx
     6ae:	3e a7                	cmpsl  %es:(%rdi),%ds:(%rsi)
     6b0:	c7                   	(bad)  
     6b1:	20 9a 32 5c 22 fc    	and    %bl,-0x3dda3ce(%rdx)
     6b7:	c1 37 0f             	shll   $0xf,(%rdi)
     6ba:	dd e1                	fucom  %st(1)
     6bc:	42 6d                	rex.X insl (%dx),%es:(%rdi)
     6be:	ba c2 c8 79 3b       	mov    $0x3b79c8c2,%edx
     6c3:	ea                   	(bad)  
     6c4:	f5                   	cmc    
     6c5:	2b 11                	sub    (%rcx),%edx
     6c7:	03 53 df             	add    -0x21(%rbx),%edx
     6ca:	d8 58 b9             	fcomps -0x47(%rax)
     6cd:	d8 68 be             	fsubrs -0x42(%rax)
     6d0:	2a 73 0e             	sub    0xe(%rbx),%dh
     6d3:	ca 0a 89             	lret   $0x890a
     6d6:	c0 2b 6f             	shrb   $0x6f,(%rbx)
     6d9:	2d 3d ef 34 f1       	sub    $0xf134ef3d,%eax
     6de:	79 c0                	jns    6a0 <__ImageBase+0x6a0>
     6e0:	89 23                	mov    %esp,(%rbx)
     6e2:	09 2c 91             	or     %ebp,(%rcx,%rdx,4)
     6e5:	aa                   	stos   %al,%es:(%rdi)
     6e6:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
     6e7:	77 d6                	ja     6bf <__ImageBase+0x6bf>
     6e9:	99                   	cltd   
     6ea:	05 30 85 dc 69       	add    $0x69dc8530,%eax
     6ef:	69 eb a3 f7 f4 2f    	imul   $0x2ff4f7a3,%ebx,%ebp
     6f5:	3a d1                	cmp    %cl,%dl
     6f7:	bb 55 6b 80 72       	mov    $0x72806b55,%ebx
     6fc:	d8 3f                	fdivrs (%rdi)
     6fe:	03 22                	add    (%rdx),%esp
     700:	13 86 99 3e fa d2    	adc    -0x2d05c167(%rsi),%eax
     706:	4d d7                	rex.WRB xlat %ds:(%rbx)
     708:	96                   	xchg   %eax,%esi
     709:	bd 16 86 76 ea       	mov    $0xea768616,%ebp
     70e:	5d                   	pop    %rbp
     70f:	d9 85 ad b9 a4 79    	flds   0x79a4b9ad(%rbp)
     715:	55                   	push   %rbp
     716:	b9 d8 0c 54 fa       	mov    $0xfa540cd8,%ecx
     71b:	95                   	xchg   %eax,%ebp
     71c:	90                   	nop
     71d:	5b                   	pop    %rbx
     71e:	1e                   	(bad)  
     71f:	44 d2 d7             	rex.R rcl %cl,%dil
     722:	fb                   	sti    
     723:	82                   	(bad)  
     724:	fc                   	cld    
     725:	c4                   	(bad)  
     726:	53                   	push   %rbx
     727:	97                   	xchg   %eax,%edi
     728:	48 f8                	rex.W clc 
     72a:	47 c8 4a dc 66       	rex.RXB enter $0xdc4a,$0x66
     72f:	7f f2                	jg     723 <__ImageBase+0x723>
     731:	2d 5c 59 2b e9       	sub    $0xe92b595c,%eax
     736:	7e 4b                	jle    783 <__ImageBase+0x783>
     738:	10 1c 1f             	adc    %bl,(%rdi,%rbx,1)
     73b:	ff 41 a4             	incl   -0x5c(%rcx)
     73e:	fb                   	sti    
     73f:	16                   	(bad)  
     740:	4e 56                	rex.WRX push %rsi
     742:	a2 95 be 20 99 07 f1 	movabs %al,0x2d02f1079920be95
     749:	02 2d 
     74b:	34 fa                	xor    $0xfa,%al
     74d:	51                   	push   %rcx
     74e:	e1 30                	loope  780 <__ImageBase+0x780>
     750:	e9 33 f9 c7 37       	jmp    37c80088 <_end+0x37c55078>
     755:	7e a5                	jle    6fc <__ImageBase+0x6fc>
     757:	a8 fb                	test   $0xfb,%al
     759:	66 2a 06             	data16 sub (%rsi),%al
     75c:	18 be 97 4c 45 0a    	sbb    %bh,0xa454c97(%rsi)
     762:	6b 3d 40 46 61 fb 0a 	imul   $0xa,-0x49eb9c0(%rip),%edi        # fffffffffb614da9 <_end+0xfffffffffb5e9d99>
     769:	90                   	nop
     76a:	0e                   	(bad)  
     76b:	00 00                	add    %al,(%rax)
     76d:	80 00 00             	addb   $0x0,(%rax)
     770:	00 10                	add    %dl,(%rax)
     772:	0f 00 00             	sldt   (%rax)
     775:	60                   	(bad)  
     776:	01 00                	add    %eax,(%rax)
	...
     788:	00 00                	add    %al,(%rax)
     78a:	10 00                	adc    %al,(%rax)
	...
     794:	00 02                	add    %al,(%rdx)
     796:	00 00                	add    %al,(%rax)
     798:	00 5f 1f             	add    %bl,0x1f(%rdi)
     79b:	01 00                	add    %eax,(%rax)
	...
     7a9:	00 30                	add    %dh,(%rax)
     7ab:	01 00                	add    %eax,(%rax)
     7ad:	00 00                	add    %al,(%rax)
     7af:	00 00                	add    %al,(%rax)
     7b1:	00 30                	add    %dh,(%rax)
     7b3:	01 00                	add    %eax,(%rax)
     7b5:	00 00                	add    %al,(%rax)
     7b7:	00 00                	add    %al,(%rax)
     7b9:	ff                   	(bad)  
     7ba:	ff                   	(bad)  
     7bb:	ff                   	(bad)  
     7bc:	ff                   	(bad)  
     7bd:	ff                   	(bad)  
     7be:	ff                   	(bad)  
     7bf:	ff                   	(bad)  
     7c0:	ff 00                	incl   (%rax)
	...
     7ca:	00 40 00             	add    %al,0x0(%rax)
     7cd:	00 00                	add    %al,(%rax)
     7cf:	00 00                	add    %al,(%rax)
     7d1:	00 c0                	add    %al,%al
     7d3:	02 00                	add    (%rax),%al
     7d5:	00 00                	add    %al,(%rax)
     7d7:	00 00                	add    %al,(%rax)
     7d9:	00 00                	add    %al,(%rax)
     7db:	10 00                	adc    %al,(%rax)
	...
     7f9:	01 00                	add    %eax,(%rax)
     7fb:	00 00                	add    %al,(%rax)
     7fd:	00 00                	add    %al,(%rax)
     7ff:	00 00                	add    %al,(%rax)
     801:	02 00                	add    (%rax),%al
     803:	00 00                	add    %al,(%rax)
     805:	00 00                	add    %al,(%rax)
     807:	00 00                	add    %al,(%rax)
     809:	02 00                	add    (%rax),%al
     80b:	00 00                	add    %al,(%rax)
     80d:	00 00                	add    %al,(%rax)
     80f:	00 00                	add    %al,(%rax)
     811:	00 30                	add    %dh,(%rax)
     813:	01 00                	add    %eax,(%rax)
     815:	00 00                	add    %al,(%rax)
     817:	00 00                	add    %al,(%rax)
     819:	00 00                	add    %al,(%rax)
     81b:	ff                   	(bad)  
     81c:	ff                   	(bad)  
     81d:	ff                   	(bad)  
     81e:	ff                   	(bad)  
     81f:	ff                   	(bad)  
     820:	ff 00                	incl   (%rax)
     822:	00 ff                	add    %bh,%bh
     824:	ff                   	(bad)  
     825:	ff                   	(bad)  
     826:	ff                   	(bad)  
     827:	ff                   	(bad)  
     828:	ff 00                	incl   (%rax)
     82a:	00 fb                	add    %bh,%bl
     82c:	ff                   	(bad)  
     82d:	ff                   	(bad)  
     82e:	ff                   	(bad)  
     82f:	ff                   	(bad)  
     830:	ff 48 1f             	decl   0x1f(%rax)
	...
     847:	00 00                	add    %al,(%rax)
     849:	80 0a 00             	orb    $0x0,(%rdx)
	...
     868:	00 00                	add    %al,(%rax)
     86a:	10 00                	adc    %al,(%rax)
	...
     878:	00 00                	add    %al,(%rax)
     87a:	30 01                	xor    %al,(%rcx)
     87c:	00 00                	add    %al,(%rax)
     87e:	00 00                	add    %al,(%rax)
     880:	00 68 30             	add    %ch,0x30(%rax)
     883:	01 00                	add    %eax,(%rax)
	...
     8e1:	00 10                	add    %dl,(%rax)
	...
     8eb:	00 00                	add    %al,(%rax)
     8ed:	02 00                	add    (%rax),%al
     8ef:	00 00                	add    %al,(%rax)
     8f1:	5f                   	pop    %rdi
     8f2:	1f                   	(bad)  
     8f3:	01 00                	add    %eax,(%rax)
	...
     901:	00 30                	add    %dh,(%rax)
     903:	01 00                	add    %eax,(%rax)
     905:	00 00                	add    %al,(%rax)
     907:	00 00                	add    %al,(%rax)
     909:	00 30                	add    %dh,(%rax)
     90b:	01 00                	add    %eax,(%rax)
     90d:	00 00                	add    %al,(%rax)
     90f:	00 00                	add    %al,(%rax)
     911:	ff                   	(bad)  
     912:	ff                   	(bad)  
     913:	ff                   	(bad)  
     914:	ff                   	(bad)  
     915:	ff                   	(bad)  
     916:	ff                   	(bad)  
     917:	ff                   	(bad)  
     918:	ff 13                	call   *(%rbx)
     91a:	00 00                	add    %al,(%rax)
     91c:	00 00                	add    %al,(%rax)
     91e:	00 00                	add    %al,(%rax)
     920:	00 01                	add    %al,(%rcx)
     922:	00 01                	add    %al,(%rcx)
     924:	00 01                	add    %al,(%rcx)
     926:	00 00                	add    %al,(%rax)
     928:	00 00                	add    %al,(%rax)
     92a:	c0 02 00             	rolb   $0x0,(%rdx)
	...
     939:	03 02                	add    (%rdx),%eax
     93b:	00 00                	add    %al,(%rax)
     93d:	00 00                	add    %al,(%rax)
     93f:	00 00                	add    %al,(%rax)
     941:	02 00                	add    (%rax),%al
     943:	19 00                	sbb    %eax,(%rax)
     945:	ff 00                	incl   (%rax)
     947:	00 00                	add    %al,(%rax)
     949:	00 d0                	add    %dl,%al
     94b:	02 00                	add    (%rax),%al
	...
     959:	03 02                	add    (%rdx),%eax
     95b:	00 00                	add    %al,(%rax)
     95d:	00 00                	add    %al,(%rax)
     95f:	00 00                	add    %al,(%rax)
     961:	0a 00                	or     (%rax),%al
     963:	00 00                	add    %al,(%rax)
     965:	10 00                	adc    %al,(%rax)
     967:	00 00                	add    %al,(%rax)
     969:	00 c0                	add    %al,%al
     96b:	12 00                	adc    (%rax),%al
	...
     981:	07                   	(bad)  
     982:	00 5b 00             	add    %bl,0x0(%rbx)
     985:	3e 00 00             	ds add %al,(%rax)
     988:	00 00                	add    %al,(%rax)
     98a:	c0 13 00             	rclb   $0x0,(%rbx)
     98d:	00 00                	add    %al,(%rax)
     98f:	00 00                	add    %al,(%rax)
     991:	cc                   	int3   
     992:	cc                   	int3   
     993:	cc                   	int3   
     994:	cc                   	int3   
     995:	00 00                	add    %al,(%rax)
     997:	00 00                	add    %al,(%rax)
     999:	03 02                	add    (%rdx),%eax
     99b:	00 00                	add    %al,(%rax)
     99d:	00 00                	add    %al,(%rax)
     99f:	00 00                	add    %al,(%rax)
     9a1:	08 00                	or     %al,(%rax)
     9a3:	03 00                	add    (%rax),%eax
     9a5:	02 00                	add    (%rax),%al
     9a7:	00 00                	add    %al,(%rax)
     9a9:	00 a0 17 00 00 00    	add    %ah,0x17(%rax)
     9af:	00 00                	add    %al,(%rax)
     9b1:	cc                   	int3   
     9b2:	cc                   	int3   
     9b3:	cc                   	int3   
     9b4:	cc                   	int3   
     9b5:	00 00                	add    %al,(%rax)
     9b7:	00 00                	add    %al,(%rax)
     9b9:	03 02                	add    (%rdx),%eax
     9bb:	00 00                	add    %al,(%rax)
     9bd:	00 00                	add    %al,(%rax)
     9bf:	00 00                	add    %al,(%rax)
     9c1:	0a 00                	or     (%rax),%al
     9c3:	00 00                	add    %al,(%rax)
     9c5:	10 00                	adc    %al,(%rax)
     9c7:	00 00                	add    %al,(%rax)
     9c9:	00 c0                	add    %al,%al
     9cb:	17                   	(bad)  
	...
     9e0:	00 04 00             	add    %al,(%rax,%rax,1)
     9e3:	03 00                	add    (%rax),%eax
     9e5:	01 00                	add    %eax,(%rax)
     9e7:	00 00                	add    %al,(%rax)
     9e9:	00 c0                	add    %al,%al
     9eb:	18 00                	sbb    %al,(%rax)
     9ed:	00 00                	add    %al,(%rax)
     9ef:	00 00                	add    %al,(%rax)
     9f1:	48 00 00             	rex.W add %al,(%rax)
     9f4:	00 60 07             	add    %ah,0x7(%rax)
     9f7:	00 00                	add    %al,(%rax)
     9f9:	00 01                	add    %al,(%rcx)
     9fb:	00 00                	add    %al,(%rax)
     9fd:	00 00                	add    %al,(%rax)
     9ff:	00 00                	add    %al,(%rax)
     a01:	06                   	(bad)  
     a02:	00 03                	add    %al,(%rbx)
     a04:	00 02                	add    %al,(%rdx)
     a06:	00 00                	add    %al,(%rax)
     a08:	00 00                	add    %al,(%rax)
     a0a:	d0 18                	rcrb   (%rax)
	...
     a18:	00 03                	add    %al,(%rbx)
     a1a:	02 00                	add    (%rax),%al
     a1c:	00 00                	add    %al,(%rax)
     a1e:	00 00                	add    %al,(%rax)
     a20:	00 0a                	add    %cl,(%rdx)
     a22:	00 00                	add    %al,(%rax)
     a24:	00 10                	add    %dl,(%rax)
     a26:	00 00                	add    %al,(%rax)
     a28:	00 00                	add    %al,(%rax)
     a2a:	f0 18 00             	lock sbb %al,(%rax)
	...
     a41:	05 00 03 00 01       	add    $0x1000300,%eax
     a46:	00 00                	add    %al,(%rax)
     a48:	00 00                	add    %al,(%rax)
     a4a:	f0 19 00             	lock sbb %eax,(%rax)
	...
     a59:	03 02                	add    (%rdx),%eax
     a5b:	00 00                	add    %al,(%rax)
     a5d:	00 00                	add    %al,(%rax)
     a5f:	00 00                	add    %al,(%rax)
     a61:	0a 00                	or     (%rax),%al
     a63:	00 00                	add    %al,(%rax)
     a65:	10 00                	adc    %al,(%rax)
     a67:	00 00                	add    %al,(%rax)
     a69:	00 00                	add    %al,(%rax)
     a6b:	1a 00                	sbb    (%rax),%al
	...
     a81:	07                   	(bad)  
     a82:	00 43 00             	add    %al,0x0(%rbx)
     a85:	3e 00 00             	ds add %al,(%rax)
     a88:	00 00                	add    %al,(%rax)
     a8a:	00 1b                	add    %bl,(%rbx)
     a8c:	00 00                	add    %al,(%rax)
     a8e:	00 00                	add    %al,(%rax)
     a90:	00 cc                	add    %cl,%ah
     a92:	cc                   	int3   
     a93:	cc                   	int3   
     a94:	cc                   	int3   
     a95:	00 00                	add    %al,(%rax)
     a97:	00 00                	add    %al,(%rax)
     a99:	03 02                	add    (%rdx),%eax
     a9b:	00 00                	add    %al,(%rax)
     a9d:	00 00                	add    %al,(%rax)
     a9f:	00 00                	add    %al,(%rax)
     aa1:	08 00                	or     %al,(%rax)
     aa3:	03 00                	add    (%rax),%eax
     aa5:	02 00                	add    (%rax),%al
     aa7:	00 00                	add    %al,(%rax)
     aa9:	00 e0                	add    %ah,%al
     aab:	1e                   	(bad)  
     aac:	00 00                	add    %al,(%rax)
     aae:	00 00                	add    %al,(%rax)
     ab0:	00 cc                	add    %cl,%ah
     ab2:	cc                   	int3   
     ab3:	cc                   	int3   
     ab4:	cc                   	int3   
     ab5:	00 00                	add    %al,(%rax)
     ab7:	00 00                	add    %al,(%rax)
     ab9:	03 02                	add    (%rdx),%eax
     abb:	00 00                	add    %al,(%rax)
     abd:	00 00                	add    %al,(%rax)
     abf:	00 00                	add    %al,(%rax)
     ac1:	0a 00                	or     (%rax),%al
     ac3:	00 00                	add    %al,(%rax)
     ac5:	10 00                	adc    %al,(%rax)
     ac7:	00 00                	add    %al,(%rax)
     ac9:	00 00                	add    %al,(%rax)
     acb:	1f                   	(bad)  
	...
     ae0:	00 04 00             	add    %al,(%rax,%rax,1)
     ae3:	03 00                	add    (%rax),%eax
     ae5:	01 00                	add    %eax,(%rax)
     ae7:	00 00                	add    %al,(%rax)
     ae9:	00 00                	add    %al,(%rax)
     aeb:	20 00                	and    %al,(%rax)
     aed:	00 00                	add    %al,(%rax)
     aef:	00 00                	add    %al,(%rax)
     af1:	48 00 00             	rex.W add %al,(%rax)
     af4:	00 60 07             	add    %ah,0x7(%rax)
     af7:	00 00                	add    %al,(%rax)
     af9:	00 01                	add    %al,(%rcx)
     afb:	00 00                	add    %al,(%rax)
     afd:	00 00                	add    %al,(%rax)
     aff:	00 00                	add    %al,(%rax)
     b01:	06                   	(bad)  
     b02:	00 03                	add    %al,(%rbx)
     b04:	00 02                	add    %al,(%rdx)
     b06:	00 00                	add    %al,(%rax)
     b08:	00 00                	add    %al,(%rax)
     b0a:	10 20                	adc    %ah,(%rax)
	...
     b18:	00 03                	add    %al,(%rbx)
     b1a:	02 00                	add    (%rax),%al
     b1c:	00 00                	add    %al,(%rax)
     b1e:	00 00                	add    %al,(%rax)
     b20:	00 0a                	add    %cl,(%rdx)
     b22:	00 00                	add    %al,(%rax)
     b24:	00 10                	add    %dl,(%rax)
     b26:	00 00                	add    %al,(%rax)
     b28:	00 00                	add    %al,(%rax)
     b2a:	30 20                	xor    %ah,(%rax)
	...
     b40:	00 05 00 03 00 01    	add    %al,0x1000300(%rip)        # 1000e46 <_end+0xfd5e36>
     b46:	00 00                	add    %al,(%rax)
     b48:	00 00                	add    %al,(%rax)
     b4a:	30 21                	xor    %ah,(%rcx)
	...
     b58:	00 03                	add    %al,(%rbx)
     b5a:	02 00                	add    (%rax),%al
     b5c:	00 00                	add    %al,(%rax)
     b5e:	00 00                	add    %al,(%rax)
     b60:	00 0a                	add    %cl,(%rdx)
     b62:	00 00                	add    %al,(%rax)
     b64:	00 ec                	add    %ch,%ah
     b66:	01 00                	add    %eax,(%rax)
     b68:	00 00                	add    %al,(%rax)
     b6a:	40 21 00             	rex and %eax,(%rax)
	...
     e91:	00 00                	add    %al,(%rax)
     e93:	40 00 00             	rex add %al,(%rax)
	...
     ea6:	00 00                	add    %al,(%rax)
     ea8:	00 80 31 01 00 00    	add    %al,0x131(%rax)
     eae:	00 00                	add    %al,(%rax)
     eb0:	00 a8 07 00 00 e0    	add    %ch,-0x1ffffff9(%rax)
     eb6:	06                   	(bad)  
	...
     ec7:	00 00                	add    %al,(%rax)
     ec9:	3c 00                	cmp    $0x0,%al
     ecb:	00 00                	add    %al,(%rax)
     ecd:	00 00                	add    %al,(%rax)
     ecf:	00 00                	add    %al,(%rax)
     ed1:	88 0e                	mov    %cl,(%rsi)
     ed3:	00 00                	add    %al,(%rax)
     ed5:	02 00                	add    (%rax),%al
	...
     ee7:	00 00                	add    %al,(%rax)
     ee9:	28 00                	sub    %al,(%rax)
     eeb:	00 00                	add    %al,(%rax)
     eed:	00 00                	add    %al,(%rax)
     eef:	00 00                	add    %al,(%rax)
     ef1:	88 0e                	mov    %cl,(%rsi)
     ef3:	00 00                	add    %al,(%rax)
     ef5:	08 00                	or     %al,(%rax)
	...
     f07:	00 00                	add    %al,(%rax)
     f09:	3e 00 00             	ds add %al,(%rax)
     f0c:	00 00                	add    %al,(%rax)
     f0e:	00 00                	add    %al,(%rax)
     f10:	00 88 0e 00 00 02    	add    %cl,0x200000e(%rax)
	...
     f26:	00 00                	add    %al,(%rax)
     f28:	00 01                	add    %al,(%rcx)
     f2a:	00 01                	add    %al,(%rcx)
     f2c:	00 01                	add    %al,(%rcx)
     f2e:	00 00                	add    %al,(%rax)
     f30:	00 00                	add    %al,(%rax)
     f32:	c0 02 00             	rolb   $0x0,(%rdx)
	...
     f41:	03 02                	add    (%rdx),%eax
     f43:	00 00                	add    %al,(%rax)
     f45:	00 00                	add    %al,(%rax)
     f47:	00 00                	add    %al,(%rax)
     f49:	02 00                	add    (%rax),%al
     f4b:	11 00                	adc    %eax,(%rax)
     f4d:	ff 00                	incl   (%rax)
     f4f:	00 00                	add    %al,(%rax)
     f51:	00 d0                	add    %dl,%al
     f53:	02 00                	add    (%rax),%al
	...
     f61:	03 02                	add    (%rdx),%eax
     f63:	00 00                	add    %al,(%rax)
     f65:	00 00                	add    %al,(%rax)
     f67:	00 00                	add    %al,(%rax)
     f69:	0a 00                	or     (%rax),%al
     f6b:	00 00                	add    %al,(%rax)
     f6d:	10 00                	adc    %al,(%rax)
     f6f:	00 00                	add    %al,(%rax)
     f71:	00 c0                	add    %al,%al
     f73:	12 00                	adc    (%rax),%al
	...
     f89:	07                   	(bad)  
     f8a:	00 53 00             	add    %dl,0x0(%rbx)
     f8d:	3e 00 00             	ds add %al,(%rax)
     f90:	00 00                	add    %al,(%rax)
     f92:	c0 13 00             	rclb   $0x0,(%rbx)
     f95:	00 00                	add    %al,(%rax)
     f97:	00 00                	add    %al,(%rax)
     f99:	cc                   	int3   
     f9a:	cc                   	int3   
     f9b:	cc                   	int3   
     f9c:	cc                   	int3   
     f9d:	00 00                	add    %al,(%rax)
     f9f:	00 00                	add    %al,(%rax)
     fa1:	03 02                	add    (%rdx),%eax
     fa3:	00 00                	add    %al,(%rax)
     fa5:	00 00                	add    %al,(%rax)
     fa7:	00 00                	add    %al,(%rax)
     fa9:	08 00                	or     %al,(%rax)
     fab:	03 00                	add    (%rax),%eax
     fad:	02 00                	add    (%rax),%al
     faf:	00 00                	add    %al,(%rax)
     fb1:	00 a0 17 00 00 00    	add    %ah,0x17(%rax)
     fb7:	00 00                	add    %al,(%rax)
     fb9:	cc                   	int3   
     fba:	cc                   	int3   
     fbb:	cc                   	int3   
     fbc:	cc                   	int3   
     fbd:	00 00                	add    %al,(%rax)
     fbf:	00 00                	add    %al,(%rax)
     fc1:	03 02                	add    (%rdx),%eax
     fc3:	00 00                	add    %al,(%rax)
     fc5:	00 00                	add    %al,(%rax)
     fc7:	00 00                	add    %al,(%rax)
     fc9:	0a 00                	or     (%rax),%al
     fcb:	00 00                	add    %al,(%rax)
     fcd:	10 00                	adc    %al,(%rax)
     fcf:	00 00                	add    %al,(%rax)
     fd1:	00 c0                	add    %al,%al
     fd3:	17                   	(bad)  
	...
     fe8:	00 04 00             	add    %al,(%rax,%rax,1)
     feb:	03 00                	add    (%rax),%eax
     fed:	01 00                	add    %eax,(%rax)
     fef:	00 00                	add    %al,(%rax)
     ff1:	00 c0                	add    %al,%al
     ff3:	18 00                	sbb    %al,(%rax)
     ff5:	00 00                	add    %al,(%rax)
     ff7:	00 00                	add    %al,(%rax)
     ff9:	48 00 00             	rex.W add %al,(%rax)
     ffc:	00 60 07             	add    %ah,0x7(%rax)
     fff:	00 00                	add    %al,(%rax)
    1001:	00 01                	add    %al,(%rcx)
    1003:	00 00                	add    %al,(%rax)
    1005:	00 00                	add    %al,(%rax)
    1007:	00 00                	add    %al,(%rax)
    1009:	06                   	(bad)  
    100a:	00 03                	add    %al,(%rbx)
    100c:	00 02                	add    %al,(%rdx)
    100e:	00 00                	add    %al,(%rax)
    1010:	00 00                	add    %al,(%rax)
    1012:	d0 18                	rcrb   (%rax)
	...
    1020:	00 03                	add    %al,(%rbx)
    1022:	02 00                	add    (%rax),%al
    1024:	00 00                	add    %al,(%rax)
    1026:	00 00                	add    %al,(%rax)
    1028:	00 0a                	add    %cl,(%rdx)
    102a:	00 00                	add    %al,(%rax)
    102c:	00 10                	add    %dl,(%rax)
    102e:	00 00                	add    %al,(%rax)
    1030:	00 00                	add    %al,(%rax)
    1032:	f0 18 00             	lock sbb %al,(%rax)
	...
    1049:	05 00 03 00 01       	add    $0x1000300,%eax
    104e:	00 00                	add    %al,(%rax)
    1050:	00 00                	add    %al,(%rax)
    1052:	f0 19 00             	lock sbb %eax,(%rax)
	...
    1061:	03 02                	add    (%rdx),%eax
    1063:	00 00                	add    %al,(%rax)
    1065:	00 00                	add    %al,(%rax)
    1067:	00 00                	add    %al,(%rax)
    1069:	09 10                	or     %edx,(%rax)
    106b:	08 00                	or     %al,(%rax)
    106d:	01 00                	add    %eax,(%rax)
    106f:	00 00                	add    %al,(%rax)
    1071:	00 40 07             	add    %al,0x7(%rax)
	...

Disassembly of section .debug_aranges:

0000000000000000 <.debug_aranges>:
   0:	2c 00                	sub    $0x0,%al
   2:	00 00                	add    %al,(%rax)
   4:	02 00                	add    (%rax),%al
   6:	00 00                	add    %al,(%rax)
   8:	00 00                	add    %al,(%rax)
   a:	08 00                	or     %al,(%rax)
   c:	00 00                	add    %al,(%rax)
   e:	00 00                	add    %al,(%rax)
  10:	63 20                	movsxd (%rax),%esp
  12:	00 00                	add    %al,(%rax)
  14:	00 00                	add    %al,(%rax)
  16:	00 00                	add    %al,(%rax)
  18:	d2 00                	rolb   %cl,(%rax)
	...
  2e:	00 00                	add    %al,(%rax)
  30:	2c 00                	sub    $0x0,%al
  32:	00 00                	add    %al,(%rax)
  34:	02 00                	add    (%rax),%al
  36:	ee                   	out    %al,(%dx)
  37:	02 00                	add    (%rax),%al
  39:	00 08                	add    %cl,(%rax)
  3b:	00 00                	add    %al,(%rax)
  3d:	00 00                	add    %al,(%rax)
  3f:	00 00                	add    %al,(%rax)
  41:	30 00                	xor    %al,(%rax)
  43:	00 00                	add    %al,(%rax)
  45:	00 00                	add    %al,(%rax)
  47:	00 06                	add    %al,(%rsi)
  49:	10 00                	adc    %al,(%rax)
	...
  5f:	00 2c 00             	add    %ch,(%rax,%rax,1)
  62:	00 00                	add    %al,(%rax)
  64:	02 00                	add    (%rax),%al
  66:	17                   	(bad)  
  67:	03 00                	add    (%rax),%eax
  69:	00 08                	add    %cl,(%rax)
  6b:	00 00                	add    %al,(%rax)
  6d:	00 00                	add    %al,(%rax)
  6f:	00 06                	add    %al,(%rsi)
  71:	40 00 00             	rex add %al,(%rax)
  74:	00 00                	add    %al,(%rax)
  76:	00 00                	add    %al,(%rax)
  78:	3e 03 00             	ds add (%rax),%eax
	...

Disassembly of section .debug_info:

0000000000000000 <.debug_info>:
   0:	ea                   	(bad)  
   1:	02 00                	add    (%rax),%al
   3:	00 05 00 01 08 00    	add    %al,0x80100(%rip)        # 80109 <_end+0x550f9>
   9:	00 00                	add    %al,(%rax)
   b:	00 0c 24             	add    %cl,(%rsp)
   e:	00 00                	add    %al,(%rax)
  10:	00 1d 00 00 00 00    	add    %bl,0x0(%rip)        # 16 <__ImageBase+0x16>
  16:	07                   	(bad)  
  17:	00 00                	add    %al,(%rax)
  19:	00 63 20             	add    %ah,0x20(%rbx)
  1c:	00 00                	add    %al,(%rax)
  1e:	00 00                	add    %al,(%rax)
  20:	00 00                	add    %al,(%rax)
  22:	d2 00                	rolb   %cl,(%rax)
	...
  2c:	00 00                	add    %al,(%rax)
  2e:	01 01                	add    %eax,(%rcx)
  30:	06                   	(bad)  
  31:	cb                   	lret   
  32:	00 00                	add    %al,(%rax)
  34:	00 01                	add    %al,(%rcx)
  36:	01 08                	add    %ecx,(%rax)
  38:	c9                   	leave  
  39:	00 00                	add    %al,(%rax)
  3b:	00 01                	add    %al,(%rcx)
  3d:	02 05 1c 01 00 00    	add    0x11c(%rip),%al        # 15f <__ImageBase+0x15f>
  43:	01 02                	add    %eax,(%rdx)
  45:	07                   	(bad)  
  46:	e9 00 00 00 0d       	jmp    d00004b <_end+0xcfd503b>
  4b:	04 05                	add    $0x5,%al
  4d:	69 6e 74 00 01 04 07 	imul   $0x7040100,0x74(%rsi),%ebp
  54:	dc 00                	faddl  (%rax)
  56:	00 00                	add    %al,(%rax)
  58:	01 08                	add    %ecx,(%rax)
  5a:	05 13 01 00 00       	add    $0x113,%eax
  5f:	04 26                	add    $0x26,%al
  61:	01 00                	add    %eax,(%rax)
  63:	00 02                	add    %al,(%rdx)
  65:	2f                   	(bad)  
  66:	1d 6b 00 00 00       	sbb    $0x6b,%eax
  6b:	01 08                	add    %ecx,(%rax)
  6d:	07                   	(bad)  
  6e:	d7                   	xlat   %ds:(%rbx)
  6f:	00 00                	add    %al,(%rax)
  71:	00 04 31             	add    %al,(%rcx,%rsi,1)
  74:	01 00                	add    %eax,(%rax)
  76:	00 02                	add    %al,(%rdx)
  78:	66 1d 6b 00          	sbb    $0x6b,%ax
  7c:	00 00                	add    %al,(%rax)
  7e:	01 08                	add    %ecx,(%rax)
  80:	04 fc                	add    $0xfc,%al
  82:	00 00                	add    %al,(%rax)
  84:	00 01                	add    %al,(%rcx)
  86:	04 04                	add    $0x4,%al
  88:	1e                   	(bad)  
  89:	00 00                	add    %al,(%rax)
  8b:	00 06                	add    %al,(%rsi)
  8d:	4a 00 00             	rex.WX add %al,(%rax)
  90:	00 01                	add    %al,(%rcx)
  92:	01 06                	add    %eax,(%rsi)
  94:	d2 00                	rolb   %cl,(%rax)
  96:	00 00                	add    %al,(%rax)
  98:	04 28                	add    $0x28,%al
  9a:	01 00                	add    %eax,(%rax)
  9c:	00 03                	add    %al,(%rbx)
  9e:	3f                   	(bad)  
  9f:	19 5f 00             	sbb    %ebx,0x0(%rdi)
  a2:	00 00                	add    %al,(%rax)
  a4:	04 33                	add    $0x33,%al
  a6:	01 00                	add    %eax,(%rax)
  a8:	00 04 2a             	add    %al,(%rdx,%rbp,1)
  ab:	15 72 00 00 00       	adc    $0x72,%eax
  b0:	01 08                	add    %ecx,(%rax)
  b2:	05 0e 01 00 00       	add    $0x10e,%eax
  b7:	0e                   	(bad)  
  b8:	14 00                	adc    $0x0,%al
  ba:	00 00                	add    %al,(%rax)
  bc:	10 05 03 08 db 00    	adc    %al,0xdb0803(%rip)        # db08c5 <_end+0xd858b5>
  c2:	00 00                	add    %al,(%rax)
  c4:	09 09                	or     %ecx,(%rcx)
  c6:	01 00                	add    %eax,(%rax)
  c8:	00 04 8c             	add    %al,(%rsp,%rcx,4)
  cb:	00 00                	add    %al,(%rax)
  cd:	00 00                	add    %al,(%rax)
  cf:	09 03                	or     %eax,(%rbx)
  d1:	01 00                	add    %eax,(%rax)
  d3:	00 05 8c 00 00 00    	add    %al,0x8c(%rip)        # 165 <__ImageBase+0x165>
  d9:	08 00                	or     %al,(%rax)
  db:	0f bf 0a             	movswl (%rdx),%ecx
  de:	00 00                	add    %al,(%rax)
  e0:	01 08                	add    %ecx,(%rax)
  e2:	05 4a 00 00 00       	add    $0x4a,%eax
  e7:	09 03                	or     %eax,(%rbx)
  e9:	00 80 01 00 00 00    	add    %al,0x1(%rax)
  ef:	00 00                	add    %al,(%rax)
  f1:	10 6d 73             	adc    %ch,0x73(%rbp)
  f4:	70 00                	jo     f6 <__ImageBase+0xf6>
  f6:	01 0a                	add    %ecx,(%rdx)
  f8:	12 b7 00 00 00 09    	adc    0x9000000(%rdi),%dh
  fe:	03 60 a1             	add    -0x5f(%rax),%esp
 101:	01 00                	add    %eax,(%rax)
 103:	00 00                	add    %al,(%rax)
 105:	00 00                	add    %al,(%rax)
 107:	05 3a 01 00 00       	add    $0x13a,%eax
 10c:	26 09 4a 00          	es or  %ecx,0x0(%rdx)
 110:	00 00                	add    %al,(%rax)
 112:	18 01                	sbb    %al,(%rcx)
 114:	00 00                	add    %al,(%rax)
 116:	03 00                	add    (%rax),%eax
 118:	05 00 00 00 00       	add    $0x0,%eax
 11d:	1f                   	(bad)  
 11e:	05 4a 00 00 00       	add    $0x4a,%eax
 123:	29 01                	sub    %eax,(%rcx)
 125:	00 00                	add    %al,(%rax)
 127:	03 00                	add    (%rax),%eax
 129:	11 46 01             	adc    %eax,0x1(%rsi)
 12c:	00 00                	add    %al,(%rax)
 12e:	06                   	(bad)  
 12f:	40 0c 4a             	rex or $0x4a,%al
 132:	00 00                	add    %al,(%rax)
 134:	00 44 01 00          	add    %al,0x0(%rcx,%rax,1)
 138:	00 0a                	add    %cl,(%rdx)
 13a:	44 01 00             	add    %r8d,(%rax)
 13d:	00 0a                	add    %cl,(%rdx)
 13f:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
 140:	00 00                	add    %al,(%rax)
 142:	00 00                	add    %al,(%rax)
 144:	06                   	(bad)  
 145:	49 01 00             	add    %rax,(%r8)
 148:	00 12                	add    %dl,(%rdx)
 14a:	07                   	(bad)  
 14b:	b3 0a                	mov    $0xa,%bl
 14d:	00 00                	add    %al,(%rax)
 14f:	24 12                	and    $0x12,%al
 151:	21 00                	and    %eax,(%rax)
 153:	00 00                	add    %al,(%rax)
 155:	00 00                	add    %al,(%rax)
 157:	00 23                	add    %ah,(%rbx)
 159:	00 00                	add    %al,(%rax)
 15b:	00 00                	add    %al,(%rax)
 15d:	00 00                	add    %al,(%rax)
 15f:	00 01                	add    %al,(%rcx)
 161:	9c                   	pushf  
 162:	cc                   	int3   
 163:	01 00                	add    %eax,(%rax)
 165:	00 0b                	add    %cl,(%rbx)
 167:	73 00                	jae    169 <__ImageBase+0x169>
 169:	24 1d                	and    $0x1d,%al
 16b:	4a 00 00             	rex.WX add %al,(%rax)
 16e:	00 14 00             	add    %dl,(%rax,%rax,1)
 171:	00 00                	add    %al,(%rax)
 173:	0c 00                	or     $0x0,%al
 175:	00 00                	add    %al,(%rax)
 177:	13 1e                	adc    (%rsi),%ebx
 179:	21 00                	and    %eax,(%rax)
 17b:	00 00                	add    %al,(%rax)
 17d:	00 00                	add    %al,(%rax)
 17f:	00 09                	add    %cl,(%rcx)
 181:	00 00                	add    %al,(%rax)
 183:	00 00                	add    %al,(%rax)
 185:	00 00                	add    %al,(%rax)
 187:	00 9b 01 00 00 14    	add    %bl,0x14000001(%rbx)
 18d:	3a 01                	cmp    (%rcx),%al
 18f:	00 00                	add    %al,(%rax)
 191:	01 26                	add    %esp,(%rsi)
 193:	09 4a 00             	or     %ecx,0x0(%rdx)
 196:	00 00                	add    %al,(%rax)
 198:	03 00                	add    (%rax),%eax
 19a:	00 15 27 21 00 00    	add    %dl,0x2127(%rip)        # 22c7 <ecall_check_secret+0x1b5>
 1a0:	00 00                	add    %al,(%rax)
 1a2:	00 00                	add    %al,(%rax)
 1a4:	0e                   	(bad)  
 1a5:	00 00                	add    %al,(%rax)
 1a7:	00 00                	add    %al,(%rax)
 1a9:	00 00                	add    %al,(%rax)
 1ab:	00 05 3a 01 00 00    	add    %al,0x13a(%rip)        # 2eb <__ImageBase+0x2eb>
 1b1:	26 09 4a 00          	es or  %ecx,0x0(%rdx)
 1b5:	00 00                	add    %al,(%rax)
 1b7:	bd 01 00 00 03       	mov    $0x3000001,%ebp
 1bc:	00 16                	add    %dl,(%rsi)
 1be:	35 21 00 00 00       	xor    $0x21,%eax
 1c3:	00 00                	add    %al,(%rax)
 1c5:	00 07                	add    %al,(%rdi)
 1c7:	01 00                	add    %eax,(%rax)
 1c9:	00 00                	add    %al,(%rax)
 1cb:	00 17                	add    %dl,(%rdi)
 1cd:	9d                   	popf   
 1ce:	08 00                	or     %al,(%rax)
 1d0:	00 01                	add    %al,(%rcx)
 1d2:	1c 06                	sbb    $0x6,%al
 1d4:	dc 20                	fsubl  (%rax)
 1d6:	00 00                	add    %al,(%rax)
 1d8:	00 00                	add    %al,(%rax)
 1da:	00 00                	add    %al,(%rax)
 1dc:	36 00 00             	ss add %al,(%rax)
 1df:	00 00                	add    %al,(%rax)
 1e1:	00 00                	add    %al,(%rax)
 1e3:	00 01                	add    %al,(%rcx)
 1e5:	9c                   	pushf  
 1e6:	36 02 00             	ss add (%rax),%al
 1e9:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 1ef <__ImageBase+0x1ef>
 1ef:	1f                   	(bad)  
 1f0:	05 4a 00 00 00       	add    $0x4a,%eax
 1f5:	fb                   	sti    
 1f6:	01 00                	add    %eax,(%rax)
 1f8:	00 03                	add    %al,(%rbx)
 1fa:	00 08                	add    %cl,(%rax)
 1fc:	f9                   	stc    
 1fd:	20 00                	and    %al,(%rax)
 1ff:	00 00                	add    %al,(%rax)
 201:	00 00                	add    %al,(%rax)
 203:	00 18                	add    %bl,(%rax)
 205:	01 00                	add    %eax,(%rax)
 207:	00 1a                	add    %bl,(%rdx)
 209:	02 00                	add    (%rax),%al
 20b:	00 02                	add    %al,(%rdx)
 20d:	01 55 09             	add    %edx,0x9(%rbp)
 210:	03 00                	add    (%rax),%eax
 212:	30 01                	xor    %al,(%rcx)
 214:	00 00                	add    %al,(%rax)
 216:	00 00                	add    %al,(%rax)
 218:	00 00                	add    %al,(%rax)
 21a:	18 12                	sbb    %dl,(%rdx)
 21c:	21 00                	and    %eax,(%rax)
 21e:	00 00                	add    %al,(%rax)
 220:	00 00                	add    %al,(%rax)
 222:	00 18                	add    %bl,(%rax)
 224:	01 00                	add    %eax,(%rax)
 226:	00 02                	add    %al,(%rdx)
 228:	01 55 09             	add    %edx,0x9(%rbp)
 22b:	03 05 30 01 00 00    	add    0x130(%rip),%eax        # 361 <__ImageBase+0x361>
 231:	00 00                	add    %al,(%rax)
 233:	00 00                	add    %al,(%rax)
 235:	00 07                	add    %al,(%rdi)
 237:	a9 03 00 00 17       	test   $0x17000003,%eax
 23c:	bf 20 00 00 00       	mov    $0x20,%edi
 241:	00 00                	add    %al,(%rax)
 243:	00 1d 00 00 00 00    	add    %bl,0x0(%rip)        # 249 <__ImageBase+0x249>
 249:	00 00                	add    %al,(%rax)
 24b:	00 01                	add    %al,(%rcx)
 24d:	9c                   	pushf  
 24e:	70 02                	jo     252 <__ImageBase+0x252>
 250:	00 00                	add    %al,(%rax)
 252:	0b 69 00             	or     0x0(%rcx),%ebp
 255:	17                   	(bad)  
 256:	21 4a 00             	and    %ecx,0x0(%rdx)
 259:	00 00                	add    %al,(%rax)
 25b:	3b 00                	cmp    (%rax),%eax
 25d:	00 00                	add    %al,(%rax)
 25f:	37                   	(bad)  
 260:	00 00                	add    %al,(%rax)
 262:	00 19                	add    %bl,(%rcx)
 264:	6a 00                	push   $0x0
 266:	01 17                	add    %edx,(%rdi)
 268:	28 4a 00             	sub    %cl,0x0(%rdx)
 26b:	00 00                	add    %al,(%rax)
 26d:	01 54 00 07          	add    %edx,0x7(%rax,%rax,1)
 271:	c9                   	leave  
 272:	07                   	(bad)  
 273:	00 00                	add    %al,(%rax)
 275:	0c 63                	or     $0x63,%al
 277:	20 00                	and    %al,(%rax)
 279:	00 00                	add    %al,(%rax)
 27b:	00 00                	add    %al,(%rax)
 27d:	00 5c 00 00          	add    %bl,0x0(%rax,%rax,1)
 281:	00 00                	add    %al,(%rax)
 283:	00 00                	add    %al,(%rax)
 285:	00 01                	add    %al,(%rcx)
 287:	9c                   	pushf  
 288:	e8 02 00 00 1a       	call   1a00028f <_end+0x19fd527f>
 28d:	78 08                	js     297 <__ImageBase+0x297>
 28f:	00 00                	add    %al,(%rax)
 291:	01 0c 32             	add    %ecx,(%rdx,%rsi,1)
 294:	e8 02 00 00 4f       	call   4f00029b <_end+0x4efd528b>
 299:	00 00                	add    %al,(%rax)
 29b:	00 49 00             	add    %cl,0x0(%rcx)
 29e:	00 00                	add    %al,(%rax)
 2a0:	08 75 20             	or     %dh,0x20(%rbp)
 2a3:	00 00                	add    %al,(%rax)
 2a5:	00 00                	add    %al,(%rax)
 2a7:	00 00                	add    %al,(%rax)
 2a9:	29 01                	sub    %eax,(%rcx)
 2ab:	00 00                	add    %al,(%rax)
 2ad:	bd 02 00 00 02       	mov    $0x2000002,%ebp
 2b2:	01 55 02             	add    %edx,0x2(%rbp)
 2b5:	73 00                	jae    2b7 <__ImageBase+0x2b7>
 2b7:	02 01                	add    (%rcx),%al
 2b9:	54                   	push   %rsp
 2ba:	01 40 00             	add    %eax,0x0(%rax)
 2bd:	08 92 20 00 00 00    	or     %dl,0x20(%rdx)
 2c3:	00 00                	add    %al,(%rax)
 2c5:	00 29                	add    %ch,(%rcx)
 2c7:	01 00                	add    %eax,(%rax)
 2c9:	00 d4                	add    %dl,%ah
 2cb:	02 00                	add    (%rax),%al
 2cd:	00 02                	add    %al,(%rdx)
 2cf:	01 54 01 34          	add    %edx,0x34(%rcx,%rax,1)
 2d3:	00 1b                	add    %bl,(%rbx)
 2d5:	b9 20 00 00 00       	mov    $0x20,%ecx
 2da:	00 00                	add    %al,(%rax)
 2dc:	00 29                	add    %ch,(%rcx)
 2de:	01 00                	add    %eax,(%rax)
 2e0:	00 02                	add    %al,(%rdx)
 2e2:	01 54 01 34          	add    %edx,0x34(%rcx,%rax,1)
 2e6:	00 00                	add    %al,(%rax)
 2e8:	06                   	(bad)  
 2e9:	b7 00                	mov    $0x0,%bh
 2eb:	00 00                	add    %al,(%rax)
 2ed:	00 25 00 00 00 05    	add    %ah,0x5000000(%rip)        # 50002f3 <_end+0x4fd52e3>
 2f3:	00 01                	add    %al,(%rcx)
 2f5:	08 97 01 00 00 01    	or     %dl,0x1000001(%rdi)
 2fb:	18 01                	sbb    %al,(%rcx)
 2fd:	00 00                	add    %al,(%rax)
 2ff:	00 30                	add    %dh,(%rax)
 301:	00 00                	add    %al,(%rax)
 303:	00 00                	add    %al,(%rax)
 305:	00 00                	add    %al,(%rax)
 307:	86 20                	xchg   %ah,(%rax)
 309:	5d                   	pop    %rbp
 30a:	01 00                	add    %eax,(%rax)
 30c:	00 63 01             	add    %ah,0x1(%rbx)
 30f:	00 00                	add    %al,(%rax)
 311:	7f 01                	jg     314 <__ImageBase+0x314>
 313:	00 00                	add    %al,(%rax)
 315:	01 80 a1 0c 00 00    	add    %eax,0xca1(%rax)
 31b:	05 00 01 08 ab       	add    $0xab080100,%eax
 320:	01 00                	add    %eax,(%rax)
 322:	00 24 24             	add    %ah,(%rsp)
 325:	00 00                	add    %al,(%rax)
 327:	00 1d bb 00 00 00    	add    %bl,0xbb(%rip)        # 3e8 <__ImageBase+0x3e8>
 32d:	07                   	(bad)  
 32e:	00 00                	add    %al,(%rax)
 330:	00 06                	add    %al,(%rsi)
 332:	40 00 00             	rex add %al,(%rax)
 335:	00 00                	add    %al,(%rax)
 337:	00 00                	add    %al,(%rax)
 339:	3e 03 00             	ds add (%rax),%eax
 33c:	00 00                	add    %al,(%rax)
 33e:	00 00                	add    %al,(%rax)
 340:	00 61 01             	add    %ah,0x1(%rcx)
 343:	00 00                	add    %al,(%rax)
 345:	07                   	(bad)  
 346:	01 06                	add    %eax,(%rsi)
 348:	cb                   	lret   
 349:	00 00                	add    %al,(%rax)
 34b:	00 06                	add    %al,(%rsi)
 34d:	dc 01                	faddl  (%rcx)
 34f:	00 00                	add    %al,(%rax)
 351:	02 28                	add    (%rax),%ch
 353:	1d 41 00 00 00       	sbb    $0x41,%eax
 358:	07                   	(bad)  
 359:	01 08                	add    %ecx,(%rax)
 35b:	c9                   	leave  
 35c:	00 00                	add    %al,(%rax)
 35e:	00 07                	add    %al,(%rdi)
 360:	02 05 1c 01 00 00    	add    0x11c(%rip),%al        # 482 <__ImageBase+0x482>
 366:	07                   	(bad)  
 367:	02 07                	add    (%rdi),%al
 369:	e9 00 00 00 25       	jmp    2500036e <_end+0x24fd535e>
 36e:	04 05                	add    $0x5,%al
 370:	69 6e 74 00 07 04 07 	imul   $0x7040700,0x74(%rsi),%ebp
 377:	dc 00                	faddl  (%rax)
 379:	00 00                	add    %al,(%rax)
 37b:	11 5d 00             	adc    %ebx,0x0(%rbp)
 37e:	00 00                	add    %al,(%rax)
 380:	07                   	(bad)  
 381:	08 05 13 01 00 00    	or     %al,0x113(%rip)        # 49a <__ImageBase+0x49a>
 387:	06                   	(bad)  
 388:	26 01 00             	es add %eax,(%rax)
 38b:	00 02                	add    %al,(%rdx)
 38d:	2f                   	(bad)  
 38e:	1d 7c 00 00 00       	sbb    $0x7c,%eax
 393:	07                   	(bad)  
 394:	08 07                	or     %al,(%rdi)
 396:	d7                   	xlat   %ds:(%rbx)
 397:	00 00                	add    %al,(%rax)
 399:	00 06                	add    %al,(%rsi)
 39b:	67 08 00             	or     %al,(%eax)
 39e:	00 02                	add    %al,(%rdx)
 3a0:	62                   	(bad)  
 3a1:	1d 70 00 00 00       	sbb    $0x70,%eax
 3a6:	06                   	(bad)  
 3a7:	31 01                	xor    %eax,(%rcx)
 3a9:	00 00                	add    %al,(%rax)
 3ab:	02 66 1d             	add    0x1d(%rsi),%ah
 3ae:	7c 00                	jl     3b0 <__ImageBase+0x3b0>
 3b0:	00 00                	add    %al,(%rax)
 3b2:	07                   	(bad)  
 3b3:	08 04 fc             	or     %al,(%rsp,%rdi,8)
 3b6:	00 00                	add    %al,(%rax)
 3b8:	00 07                	add    %al,(%rdi)
 3ba:	04 04                	add    $0x4,%al
 3bc:	1e                   	(bad)  
 3bd:	00 00                	add    %al,(%rax)
 3bf:	00 26                	add    %ah,(%rsi)
 3c1:	08 09                	or     %cl,(%rcx)
 3c3:	56                   	push   %rsi
 3c4:	00 00                	add    %al,(%rax)
 3c6:	00 07                	add    %al,(%rdi)
 3c8:	01 06                	add    %eax,(%rsi)
 3ca:	d2 00                	rolb   %cl,(%rax)
 3cc:	00 00                	add    %al,(%rax)
 3ce:	11 b0 00 00 00 06    	adc    %esi,0x6000000(%rax)
 3d4:	de 01                	fiadds (%rcx)
 3d6:	00 00                	add    %al,(%rax)
 3d8:	03 21                	add    (%rcx),%esp
 3da:	19 35 00 00 00 06    	sbb    %esi,0x6000000(%rip)        # 60003e0 <_end+0x5fd53d0>
 3e0:	28 01                	sub    %al,(%rcx)
 3e2:	00 00                	add    %al,(%rax)
 3e4:	03 3f                	add    (%rdi),%edi
 3e6:	19 70 00             	sbb    %esi,0x0(%rax)
 3e9:	00 00                	add    %al,(%rax)
 3eb:	06                   	(bad)  
 3ec:	69 08 00 00 03 5e    	imul   $0x5e030000,(%rax),%ecx
 3f2:	19 83 00 00 00 06    	sbb    %eax,0x6000000(%rbx)
 3f8:	33 01                	xor    (%rcx),%eax
 3fa:	00 00                	add    %al,(%rax)
 3fc:	04 5e                	add    $0x5e,%al
 3fe:	15 8f 00 00 00       	adc    $0x8f,%eax
 403:	27                   	(bad)  
 404:	77 07                	ja     40d <__ImageBase+0x40d>
 406:	00 00                	add    %al,(%rax)
 408:	07                   	(bad)  
 409:	04 5d                	add    $0x5d,%al
 40b:	00 00                	add    %al,(%rax)
 40d:	00 05 25 0e f5 02    	add    %al,0x2f50e25(%rip)        # 2f51238 <_end+0x2f26228>
 413:	00 00                	add    %al,(%rax)
 415:	0a 8f 07 00 00 00    	or     0x7(%rdi),%cl
 41b:	0a 8d 01 00 00 01    	or     0x1000001(%rbp),%cl
 421:	0a e3                	or     %bl,%ah
 423:	07                   	(bad)  
 424:	00 00                	add    %al,(%rax)
 426:	02 0a                	add    (%rdx),%cl
 428:	7e 0b                	jle    435 <__ImageBase+0x435>
 42a:	00 00                	add    %al,(%rax)
 42c:	03 0a                	add    (%rdx),%ecx
 42e:	3f                   	(bad)  
 42f:	08 00                	or     %al,(%rax)
 431:	00 04 0a             	add    %al,(%rdx,%rcx,1)
 434:	17                   	(bad)  
 435:	07                   	(bad)  
 436:	00 00                	add    %al,(%rax)
 438:	05 0a 31 09 00       	add    $0x9310a,%eax
 43d:	00 08                	add    %cl,(%rax)
 43f:	0a be 01 00 00 09    	or     0x9000001(%rsi),%bh
 445:	0a 88 03 00 00 0a    	or     0xa000003(%rax),%cl
 44b:	01 fb                	add    %edi,%ebx
 44d:	08 00                	or     %al,(%rax)
 44f:	00 01                	add    %al,(%rcx)
 451:	10 01                	adc    %al,(%rcx)
 453:	1a 03                	sbb    (%rbx),%al
 455:	00 00                	add    %al,(%rax)
 457:	03 10                	add    (%rax),%edx
 459:	01 2f                	add    %ebp,(%rdi)
 45b:	07                   	(bad)  
 45c:	00 00                	add    %al,(%rax)
 45e:	06                   	(bad)  
 45f:	10 01                	adc    %al,(%rcx)
 461:	0e                   	(bad)  
 462:	04 00                	add    $0x0,%al
 464:	00 07                	add    %al,(%rdi)
 466:	10 01                	adc    %al,(%rcx)
 468:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
 469:	09 00                	or     %eax,(%rax)
 46b:	00 08                	add    %cl,(%rax)
 46d:	10 01                	adc    %al,(%rcx)
 46f:	90                   	nop
 470:	0a 00                	or     (%rax),%al
 472:	00 09                	add    %cl,(%rcx)
 474:	10 01                	adc    %al,(%rcx)
 476:	d9 03                	flds   (%rbx)
 478:	00 00                	add    %al,(%rax)
 47a:	00 20                	add    %ah,(%rax)
 47c:	01 f4                	add    %esi,%esp
 47e:	03 00                	add    (%rax),%eax
 480:	00 01                	add    %al,(%rcx)
 482:	20 01                	and    %al,(%rcx)
 484:	04 02                	add    $0x2,%al
 486:	00 00                	add    %al,(%rax)
 488:	02 20                	add    (%rax),%ah
 48a:	01 21                	add    %esp,(%rcx)
 48c:	02 00                	add    (%rax),%al
 48e:	00 03                	add    %al,(%rbx)
 490:	20 01                	and    %al,(%rcx)
 492:	77 0a                	ja     49e <__ImageBase+0x49e>
 494:	00 00                	add    %al,(%rax)
 496:	04 20                	add    $0x20,%al
 498:	01 5f 07             	add    %ebx,0x7(%rdi)
 49b:	00 00                	add    %al,(%rax)
 49d:	05 20 01 da 09       	add    $0x9da0120,%eax
 4a2:	00 00                	add    %al,(%rax)
 4a4:	06                   	(bad)  
 4a5:	20 01                	and    %al,(%rcx)
 4a7:	60                   	(bad)  
 4a8:	0b 00                	or     (%rax),%eax
 4aa:	00 07                	add    %al,(%rdi)
 4ac:	20 01                	and    %al,(%rcx)
 4ae:	30 04 00             	xor    %al,(%rax,%rax,1)
 4b1:	00 09                	add    %cl,(%rcx)
 4b3:	20 01                	and    %al,(%rcx)
 4b5:	49 07                	rex.WB (bad) 
 4b7:	00 00                	add    %al,(%rax)
 4b9:	0c 20                	or     $0x20,%al
 4bb:	01 cf                	add    %ecx,%edi
 4bd:	08 00                	or     %al,(%rax)
 4bf:	00 0d 20 01 a2 01    	add    %cl,0x1a20120(%rip)        # 1a205e5 <_end+0x19f55d5>
 4c5:	00 00                	add    %al,(%rax)
 4c7:	0e                   	(bad)  
 4c8:	20 01                	and    %al,(%rcx)
 4ca:	64 02 00             	add    %fs:(%rax),%al
 4cd:	00 0f                	add    %cl,(%rdi)
 4cf:	20 01                	and    %al,(%rcx)
 4d1:	51                   	push   %rcx
 4d2:	09 00                	or     %eax,(%rax)
 4d4:	00 10                	add    %dl,(%rax)
 4d6:	20 01                	and    %al,(%rcx)
 4d8:	b0 08                	mov    $0x8,%al
 4da:	00 00                	add    %al,(%rax)
 4dc:	11 20                	adc    %esp,(%rax)
 4de:	01 46 0a             	add    %eax,0xa(%rsi)
 4e1:	00 00                	add    %al,(%rax)
 4e3:	01 30                	add    %esi,(%rax)
 4e5:	01 9f 06 00 00 02    	add    %ebx,0x2000006(%rdi)
 4eb:	30 01                	xor    %al,(%rcx)
 4ed:	b2 04                	mov    $0x4,%dl
 4ef:	00 00                	add    %al,(%rax)
 4f1:	03 30                	add    (%rax),%esi
 4f3:	01 2f                	add    %ebp,(%rdi)
 4f5:	03 00                	add    (%rax),%eax
 4f7:	00 04 30             	add    %al,(%rax,%rsi,1)
 4fa:	01 c0                	add    %eax,%eax
 4fc:	09 00                	or     %eax,(%rax)
 4fe:	00 05 30 01 e8 05    	add    %al,0x5e80130(%rip)        # 5e80634 <_end+0x5e55624>
 504:	00 00                	add    %al,(%rax)
 506:	01 40 01             	add    %eax,0x1(%rax)
 509:	68 04 00 00 02       	push   $0x2000004
 50e:	40 01 53 06          	rex add %edx,0x6(%rbx)
 512:	00 00                	add    %al,(%rax)
 514:	03 40 01             	add    0x1(%rax),%eax
 517:	33 05 00 00 04 40    	xor    0x40040000(%rip),%eax        # 4004051d <_end+0x4001550d>
 51d:	01 a3 05 00 00 05    	add    %esp,0x5000005(%rbx)
 523:	40 01 48 0b          	rex add %ecx,0xb(%rax)
 527:	00 00                	add    %al,(%rax)
 529:	06                   	(bad)  
 52a:	40 01 5d 0a          	rex add %ebx,0xa(%rbp)
 52e:	00 00                	add    %al,(%rax)
 530:	07                   	(bad)  
 531:	40 01 fa             	rex add %edi,%edx
 534:	06                   	(bad)  
 535:	00 00                	add    %al,(%rax)
 537:	08 40 01             	or     %al,0x1(%rax)
 53a:	7c 05                	jl     541 <__ImageBase+0x541>
 53c:	00 00                	add    %al,(%rax)
 53e:	0a 40 01             	or     0x1(%rax),%al
 541:	e6 01                	out    %al,$0x1
 543:	00 00                	add    %al,(%rax)
 545:	0c 40                	or     $0x40,%al
 547:	01 4b 04             	add    %ecx,0x4(%rbx)
 54a:	00 00                	add    %al,(%rax)
 54c:	0d 40 01 23 0a       	or     $0xa230140,%eax
 551:	00 00                	add    %al,(%rax)
 553:	0e                   	(bad)  
 554:	40 01 8b 05 00 00 0f 	rex add %ecx,0xf000005(%rbx)
 55b:	40 01 68 09          	rex add %ebp,0x9(%rax)
 55f:	00 00                	add    %al,(%rax)
 561:	11 40 01             	adc    %eax,0x1(%rax)
 564:	13 05 00 00 12 40    	adc    0x40120000(%rip),%eax        # 4012056a <_end+0x400f555a>
 56a:	01 47 02             	add    %eax,0x2(%rdi)
 56d:	00 00                	add    %al,(%rax)
 56f:	13 40 01             	adc    0x1(%rax),%eax
 572:	ae                   	scas   %es:(%rdi),%al
 573:	07                   	(bad)  
 574:	00 00                	add    %al,(%rax)
 576:	02 50 01             	add    0x1(%rax),%dl
 579:	e2 06                	loop   581 <__ImageBase+0x581>
 57b:	00 00                	add    %al,(%rax)
 57d:	01 60 01             	add    %esp,0x1(%rax)
 580:	37                   	(bad)  
 581:	06                   	(bad)  
 582:	00 00                	add    %al,(%rax)
 584:	02 60 01             	add    0x1(%rax),%ah
 587:	16                   	(bad)  
 588:	09 00                	or     %eax,(%rax)
 58a:	00 03                	add    %al,(%rbx)
 58c:	60                   	(bad)  
 58d:	01 92 04 00 00 04    	add    %edx,0x4000004(%rdx)
 593:	60                   	(bad)  
 594:	01 0d 08 00 00 05    	add    %ecx,0x5000008(%rip)        # 50005a2 <_end+0x4fd5592>
 59a:	60                   	(bad)  
 59b:	01 d5                	add    %edx,%ebp
 59d:	04 00                	add    $0x0,%al
 59f:	00 01                	add    %al,(%rcx)
 5a1:	70 01                	jo     5a4 <__ImageBase+0x5a4>
 5a3:	d9 02                	flds   (%rdx)
 5a5:	00 00                	add    %al,(%rax)
 5a7:	02 70 01             	add    0x1(%rax),%dh
 5aa:	06                   	(bad)  
 5ab:	0a 00                	or     (%rax),%al
 5ad:	00 03                	add    %al,(%rbx)
 5af:	70 01                	jo     5b2 <__ImageBase+0x5b2>
 5b1:	8b 02                	mov    (%rdx),%eax
 5b3:	00 00                	add    %al,(%rax)
 5b5:	04 70                	add    $0x70,%al
 5b7:	01 bb 06 00 00 05    	add    %edi,0x5000006(%rbx)
 5bd:	70 01                	jo     5c0 <__ImageBase+0x5c0>
 5bf:	f2 02 00             	repnz add (%rax),%al
 5c2:	00 06                	add    %al,(%rsi)
 5c4:	70 01                	jo     5c7 <__ImageBase+0x5c7>
 5c6:	c1 05 00 00 07 70 01 	roll   $0x1,0x70070000(%rip)        # 700705cd <_end+0x700455bd>
 5cd:	57                   	push   %rdi
 5ce:	05 00 00 08 70       	add    $0x70080000,%eax
 5d3:	01 6c 03 00          	add    %ebp,0x0(%rbx,%rax,1)
 5d7:	00 09                	add    %cl,(%rcx)
 5d9:	70 01                	jo     5dc <__ImageBase+0x5dc>
 5db:	f6 0a 00             	testb  $0x0,(%rdx)
 5de:	00 01                	add    %al,(%rcx)
 5e0:	80 01 20             	addb   $0x20,(%rcx)
 5e3:	0b 00                	or     (%rax),%eax
 5e5:	00 02                	add    %al,(%rdx)
 5e7:	80 01 17             	addb   $0x17,(%rcx)
 5ea:	06                   	(bad)  
 5eb:	00 00                	add    %al,(%rax)
 5ed:	03 80 01 d2 0a 00    	add    0xad201(%rax),%eax
 5f3:	00 04 80             	add    %al,(%rax,%rax,4)
 5f6:	01 48 03             	add    %ecx,0x3(%rax)
 5f9:	00 00                	add    %al,(%rax)
 5fb:	05 80 01 7f 09       	add    $0x97f0180,%eax
 600:	00 00                	add    %al,(%rax)
 602:	01 90 01 71 06 00    	add    %edx,0x67101(%rax)
 608:	00 01                	add    %al,(%rcx)
 60a:	f0 00 06             	lock add %al,(%rsi)
 60d:	74 07                	je     616 <__ImageBase+0x616>
 60f:	00 00                	add    %al,(%rax)
 611:	05 7e 03 ec 00       	add    $0xec037e,%eax
 616:	00 00                	add    %al,(%rax)
 618:	07                   	(bad)  
 619:	08 05 0e 01 00 00    	or     %al,0x10e(%rip)        # 72d <__ImageBase+0x72d>
 61f:	0f 14 00             	unpcklps (%rax),%xmm0
 622:	00 00                	add    %al,(%rax)
 624:	10 06                	adc    %al,(%rsi)
 626:	14 2f                	adc    $0x2f,%al
 628:	03 00                	add    (%rax),%eax
 62a:	00 04 09             	add    %al,(%rcx,%rcx,1)
 62d:	01 00                	add    %eax,(%rax)
 62f:	00 06                	add    %al,(%rsi)
 631:	15 07 ab 00 00       	adc    $0xab07,%eax
 636:	00 00                	add    %al,(%rax)
 638:	04 03                	add    $0x3,%al
 63a:	01 00                	add    %eax,(%rax)
 63c:	00 06                	add    %al,(%rsi)
 63e:	16                   	(bad)  
 63f:	07                   	(bad)  
 640:	ab                   	stos   %eax,%es:(%rdi)
 641:	00 00                	add    %al,(%rax)
 643:	00 08                	add    %cl,(%rax)
 645:	00 06                	add    %al,(%rsi)
 647:	9b                   	fwait
 648:	07                   	(bad)  
 649:	00 00                	add    %al,(%rax)
 64b:	07                   	(bad)  
 64c:	30 0d 56 00 00 00    	xor    %cl,0x56(%rip)        # 6a8 <__ImageBase+0x6a8>
 652:	0f ef 04 00          	pxor   (%rax,%rax,1),%mm0
 656:	00 08                	add    %cl,(%rax)
 658:	01 1e                	add    %ebx,(%rsi)
 65a:	55                   	push   %rbp
 65b:	03 00                	add    (%rax),%eax
 65d:	00 04 06             	add    %al,(%rsi,%rax,1)
 660:	06                   	(bad)  
 661:	00 00                	add    %al,(%rax)
 663:	01 1f                	add    %ebx,(%rdi)
 665:	14 55                	adc    $0x55,%al
 667:	03 00                	add    (%rax),%eax
 669:	00 00                	add    %al,(%rax)
 66b:	00 09                	add    %cl,(%rcx)
 66d:	08 03                	or     %al,(%rbx)
 66f:	00 00                	add    %al,(%rax)
 671:	06                   	(bad)  
 672:	ef                   	out    %eax,(%dx)
 673:	04 00                	add    $0x0,%al
 675:	00 01                	add    %al,(%rcx)
 677:	20 03                	and    %al,(%rbx)
 679:	3b 03                	cmp    (%rbx),%eax
 67b:	00 00                	add    %al,(%rax)
 67d:	0f                   	xstore-rng (bad)
 67e:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
 67f:	02 00                	add    (%rax),%al
 681:	00 08                	add    %cl,(%rax)
 683:	01 22                	add    %esp,(%rdx)
 685:	8d 03                	lea    (%rbx),%eax
 687:	00 00                	add    %al,(%rax)
 689:	04 cb                	add    $0xcb,%al
 68b:	04 00                	add    $0x0,%al
 68d:	00 01                	add    %al,(%rcx)
 68f:	23 06                	and    (%rsi),%eax
 691:	56                   	push   %rsi
 692:	00 00                	add    %al,(%rax)
 694:	00 00                	add    %al,(%rax)
 696:	04 d0                	add    $0xd0,%al
 698:	04 00                	add    $0x0,%al
 69a:	00 01                	add    %al,(%rcx)
 69c:	24 06                	and    $0x6,%al
 69e:	56                   	push   %rsi
 69f:	00 00                	add    %al,(%rax)
 6a1:	00 04 00             	add    %al,(%rax,%rax,1)
 6a4:	06                   	(bad)  
 6a5:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
 6a6:	02 00                	add    (%rax),%al
 6a8:	00 01                	add    %al,(%rcx)
 6aa:	25 03 66 03 00       	and    $0x36603,%eax
 6af:	00 0f                	add    %cl,(%rdi)
 6b1:	ee                   	out    %al,(%dx)
 6b2:	09 00                	or     %eax,(%rax)
 6b4:	00 04 01             	add    %al,(%rcx,%rax,1)
 6b7:	27                   	(bad)  
 6b8:	b3 03                	mov    $0x3,%bl
 6ba:	00 00                	add    %al,(%rax)
 6bc:	04 0e                	add    $0xe,%al
 6be:	05 00 00 01 28       	add    $0x28010000,%eax
 6c3:	06                   	(bad)  
 6c4:	56                   	push   %rsi
 6c5:	00 00                	add    %al,(%rax)
 6c7:	00 00                	add    %al,(%rax)
 6c9:	00 06                	add    %al,(%rsi)
 6cb:	ee                   	out    %al,(%dx)
 6cc:	09 00                	or     %eax,(%rax)
 6ce:	00 01                	add    %al,(%rcx)
 6d0:	29 03                	sub    %eax,(%rbx)
 6d2:	99                   	cltd   
 6d3:	03 00                	add    (%rax),%eax
 6d5:	00 0f                	add    %cl,(%rdi)
 6d7:	56                   	push   %rsi
 6d8:	08 00                	or     %al,(%rax)
 6da:	00 08                	add    %cl,(%rax)
 6dc:	01 2b                	add    %ebp,(%rbx)
 6de:	d9 03                	flds   (%rbx)
 6e0:	00 00                	add    %al,(%rax)
 6e2:	04 fd                	add    $0xfd,%al
 6e4:	01 00                	add    %eax,(%rax)
 6e6:	00 01                	add    %al,(%rcx)
 6e8:	2c 0e                	sub    $0xe,%al
 6ea:	d9 03                	flds   (%rbx)
 6ec:	00 00                	add    %al,(%rax)
 6ee:	00 00                	add    %al,(%rax)
 6f0:	09 b7 00 00 00 06    	or     %esi,0x6000000(%rdi)
 6f6:	56                   	push   %rsi
 6f7:	08 00                	or     %al,(%rax)
 6f9:	00 01                	add    %al,(%rcx)
 6fb:	2d 03 bf 03 00       	sub    $0x3bf03,%eax
 700:	00 0f                	add    %cl,(%rdi)
 702:	c0 03 00             	rolb   $0x0,(%rbx)
 705:	00 10                	add    %dl,(%rax)
 707:	01 2f                	add    %ebp,(%rdi)
 709:	11 04 00             	adc    %eax,(%rax,%rax,1)
 70c:	00 04 fd 01 00 00 01 	add    %al,0x1000001(,%rdi,8)
 713:	30 0e                	xor    %cl,(%rsi)
 715:	d9 03                	flds   (%rbx)
 717:	00 00                	add    %al,(%rax)
 719:	00 04 ad 04 00 00 01 	add    %al,0x1000004(,%rbp,4)
 720:	31 0b                	xor    %ecx,(%rbx)
 722:	c8 00 00 00          	enter  $0x0,$0x0
 726:	08 00                	or     %al,(%rax)
 728:	06                   	(bad)  
 729:	c0 03 00             	rolb   $0x0,(%rbx)
 72c:	00 01                	add    %al,(%rcx)
 72e:	32 03                	xor    (%rbx),%al
 730:	ea                   	(bad)  
 731:	03 00                	add    (%rax),%eax
 733:	00 14 10             	add    %dl,(%rax,%rdx,1)
 736:	7e 02                	jle    73a <__ImageBase+0x73a>
 738:	4d 04 00             	rex.WRB add $0x0,%al
 73b:	00 04 8e             	add    %al,(%rsi,%rcx,4)
 73e:	08 00                	or     %al,(%rax)
 740:	00 01                	add    %al,(%rcx)
 742:	7e 10                	jle    754 <__ImageBase+0x754>
 744:	a9 00 00 00 00       	test   $0x0,%eax
 749:	04 86                	add    $0x86,%al
 74b:	08 00                	or     %al,(%rax)
 74d:	00 01                	add    %al,(%rcx)
 74f:	7e 24                	jle    775 <__ImageBase+0x775>
 751:	bc 00 00 00 08       	mov    $0x8000000,%esp
 756:	04 ff                	add    $0xff,%al
 758:	07                   	(bad)  
 759:	00 00                	add    %al,(%rax)
 75b:	01 7e 35             	add    %edi,0x35(%rsi)
 75e:	bc 00 00 00 09       	mov    $0x9000000,%esp
 763:	00 14 48             	add    %dl,(%rax,%rcx,2)
 766:	7c 13                	jl     77b <__ImageBase+0x77b>
 768:	70 04                	jo     76e <__ImageBase+0x76e>
 76a:	00 00                	add    %al,(%rax)
 76c:	04 82                	add    $0x82,%al
 76e:	04 00                	add    $0x0,%al
 770:	00 01                	add    %al,(%rcx)
 772:	7d 09                	jge    77d <__ImageBase+0x77d>
 774:	e0 00                	loopne 776 <__ImageBase+0x776>
 776:	00 00                	add    %al,(%rax)
 778:	00 04 3a             	add    %al,(%rdx,%rdi,1)
 77b:	0a 00                	or     (%rax),%al
 77d:	00 01                	add    %al,(%rcx)
 77f:	7e 45                	jle    7c6 <__ImageBase+0x7c6>
 781:	75 04                	jne    787 <__ImageBase+0x787>
 783:	00 00                	add    %al,(%rax)
 785:	08 00                	or     %al,(%rax)
 787:	11 4d 04             	adc    %ecx,0x4(%rbp)
 78a:	00 00                	add    %al,(%rax)
 78c:	1e                   	(bad)  
 78d:	1d 04 00 00 85       	sbb    $0x85000004,%eax
 792:	04 00                	add    $0x0,%al
 794:	00 15 7c 00 00 00    	add    %dl,0x7c(%rip)        # 816 <__ImageBase+0x816>
 79a:	03 00                	add    (%rax),%eax
 79c:	1f                   	(bad)  
 79d:	38 0a                	cmp    %cl,(%rdx)
 79f:	00 00                	add    %al,(%rax)
 7a1:	7f 70                	jg     813 <__ImageBase+0x813>
 7a3:	04 00                	add    $0x0,%al
 7a5:	00 09                	add    %cl,(%rcx)
 7a7:	03 c0                	add    %eax,%eax
 7a9:	7d 01                	jge    7ac <__ImageBase+0x7ac>
 7ab:	00 00                	add    %al,(%rax)
 7ad:	00 00                	add    %al,(%rax)
 7af:	00 14 10             	add    %dl,(%rax,%rdx,1)
 7b2:	89 13                	mov    %edx,(%rbx)
 7b4:	bc 04 00 00 04       	mov    $0x4000004,%esp
 7b9:	17                   	(bad)  
 7ba:	0b 00                	or     (%rax),%eax
 7bc:	00 01                	add    %al,(%rcx)
 7be:	8a 09                	mov    (%rcx),%cl
 7c0:	e0 00                	loopne 7c2 <__ImageBase+0x7c2>
 7c2:	00 00                	add    %al,(%rax)
 7c4:	00 04 ef             	add    %al,(%rdi,%rbp,8)
 7c7:	08 00                	or     %al,(%rax)
 7c9:	00 01                	add    %al,(%rcx)
 7cb:	8b 0a                	mov    (%rdx),%ecx
 7cd:	c1 04 00 00          	roll   $0x0,(%rax,%rax,1)
 7d1:	08 00                	or     %al,(%rax)
 7d3:	11 99 04 00 00 1e    	adc    %ebx,0x1e000004(%rcx)
 7d9:	bc 00 00 00 d7       	mov    $0xd7000000,%esp
 7de:	04 00                	add    $0x0,%al
 7e0:	00 15 7c 00 00 00    	add    %dl,0x7c(%rip)        # 862 <__ImageBase+0x862>
 7e6:	01 15 7c 00 00 00    	add    %edx,0x7c(%rip)        # 868 <__ImageBase+0x868>
 7ec:	03 00                	add    (%rax),%eax
 7ee:	1f                   	(bad)  
 7ef:	e9 08 00 00 8c       	jmp    ffffffff8c0007fc <_end+0xffffffff8bfd57ec>
 7f4:	bc 04 00 00 09       	mov    $0x9000004,%esp
 7f9:	03 30                	add    (%rax),%esi
 7fb:	30 01                	xor    %al,(%rcx)
 7fd:	00 00                	add    %al,(%rax)
 7ff:	00 00                	add    %al,(%rax)
 801:	00 0d 3d 02 00 00    	add    %cl,0x23d(%rip)        # a44 <__ImageBase+0xa44>
 807:	08 68 15             	or     %ch,0x15(%rax)
 80a:	f5                   	cmc    
 80b:	02 00                	add    (%rax),%al
 80d:	00 06                	add    %al,(%rsi)
 80f:	05 00 00 03 64       	add    $0x64030000,%eax
 814:	00 00                	add    %al,(%rax)
 816:	00 03                	add    %al,(%rbx)
 818:	a9 00 00 00 00       	test   $0x0,%eax
 81d:	0d 81 07 00 00       	or     $0x781,%eax
 822:	09 4d 10             	or     %ecx,0x10(%rbp)
 825:	2f                   	(bad)  
 826:	03 00                	add    (%rax),%eax
 828:	00 2b                	add    %ch,(%rbx)
 82a:	05 00 00 03 a9       	add    $0xa9030000,%eax
 82f:	00 00                	add    %al,(%rax)
 831:	00 03                	add    %al,(%rbx)
 833:	e0 00                	loopne 835 <__ImageBase+0x835>
 835:	00 00                	add    %al,(%rax)
 837:	03 2b                	add    (%rbx),%ebp
 839:	05 00 00 03 e0       	add    $0xe0030000,%eax
 83e:	00 00                	add    %al,(%rax)
 840:	00 00                	add    %al,(%rax)
 842:	09 30                	or     %esi,(%rax)
 844:	05 00 00 28 16       	add    $0x16280000,%eax
 849:	a3 07 00 00 08 4d 0d 	movabs %eax,0xc60d0d4d08000007
 850:	0d c6 
 852:	0a 00                	or     (%rax),%al
 854:	00 08                	add    %cl,(%rax)
 856:	45 0e                	rex.RB (bad) 
 858:	a9 00 00 00 4f       	test   $0x4f000000,%eax
 85d:	05 00 00 03 e0       	add    $0xe0030000,%eax
 862:	00 00                	add    %al,(%rax)
 864:	00 00                	add    %al,(%rax)
 866:	0d c3 02 00 00       	or     $0x2c3,%eax
 86b:	0a 35 0c 56 00 00    	or     0x560c(%rip),%dh        # 5e7d <sgx_wrpkru+0xd>
 871:	00 6a 05             	add    %ch,0x5(%rdx)
 874:	00 00                	add    %al,(%rax)
 876:	03 2b                	add    (%rbx),%ebp
 878:	05 00 00 03 e0       	add    $0xe0030000,%eax
 87d:	00 00                	add    %al,(%rax)
 87f:	00 00                	add    %al,(%rax)
 881:	0d 8b 04 00 00       	or     $0x48b,%eax
 886:	07                   	(bad)  
 887:	4b 16                	rex.WXB (bad) 
 889:	e0 00                	loopne 88b <__ImageBase+0x88b>
 88b:	00 00                	add    %al,(%rax)
 88d:	80 05 00 00 03 d9 03 	addb   $0x3,-0x26fd0000(%rip)        # ffffffffd9030894 <_end+0xffffffffd9005884>
 894:	00 00                	add    %al,(%rax)
 896:	00 17                	add    %dl,(%rdi)
 898:	c9                   	leave  
 899:	07                   	(bad)  
 89a:	00 00                	add    %al,(%rax)
 89c:	1a 90 05 00 00 03    	sbb    0x3000005(%rax),%dl
 8a2:	55                   	push   %rbp
 8a3:	03 00                	add    (%rax),%eax
 8a5:	00 00                	add    %al,(%rax)
 8a7:	17                   	(bad)  
 8a8:	a9 03 00 00 1b       	test   $0x1b000003,%eax
 8ad:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
 8ae:	05 00 00 03 56       	add    $0x56030000,%eax
 8b3:	00 00                	add    %al,(%rax)
 8b5:	00 03                	add    %al,(%rbx)
 8b7:	56                   	push   %rsi
 8b8:	00 00                	add    %al,(%rax)
 8ba:	00 00                	add    %al,(%rax)
 8bc:	16                   	(bad)  
 8bd:	9d                   	popf   
 8be:	08 00                	or     %al,(%rax)
 8c0:	00 06                	add    %al,(%rsi)
 8c2:	1c 06                	sbb    $0x6,%al
 8c4:	17                   	(bad)  
 8c5:	b3 0a                	mov    $0xa,%bl
 8c7:	00 00                	add    %al,(%rax)
 8c9:	1d bd 05 00 00       	sbb    $0x5bd,%eax
 8ce:	03 56 00             	add    0x0(%rsi),%edx
 8d1:	00 00                	add    %al,(%rax)
 8d3:	00 0d 82 02 00 00    	add    %cl,0x282(%rip)        # b5b <__ImageBase+0xb5b>
 8d9:	09 4c 10 2f          	or     %ecx,0x2f(%rax,%rdx,1)
 8dd:	03 00                	add    (%rax),%eax
 8df:	00 e2                	add    %ah,%dl
 8e1:	05 00 00 03 a9       	add    $0xa9030000,%eax
 8e6:	00 00                	add    %al,(%rax)
 8e8:	00 03                	add    %al,(%rbx)
 8ea:	e0 00                	loopne 8ec <__ImageBase+0x8ec>
 8ec:	00 00                	add    %al,(%rax)
 8ee:	03 2b                	add    (%rbx),%ebp
 8f0:	05 00 00 03 e0       	add    $0xe0030000,%eax
 8f5:	00 00                	add    %al,(%rax)
 8f7:	00 00                	add    %al,(%rax)
 8f9:	16                   	(bad)  
 8fa:	29 08                	sub    %ecx,(%rax)
 8fc:	00 00                	add    %al,(%rax)
 8fe:	0b 29                	or     (%rcx),%ebp
 900:	0d 0d 46 01 00       	or     $0x1460d,%eax
 905:	00 0a                	add    %cl,(%rdx)
 907:	40 0c 56             	rex or $0x56,%al
 90a:	00 00                	add    %al,(%rax)
 90c:	00 05 06 00 00 03    	add    %al,0x3000006(%rip)        # 3000918 <_end+0x2fd5908>
 912:	2b 05 00 00 03 e0    	sub    -0x1ffd0000(%rip),%eax        # ffffffffe0030918 <_end+0xffffffffe0005908>
 918:	00 00                	add    %al,(%rax)
 91a:	00 00                	add    %al,(%rax)
 91c:	20 00                	and    %al,(%rax)
 91e:	00 00                	add    %al,(%rax)
 920:	00 c8                	add    %cl,%al
 922:	f5                   	cmc    
 923:	02 00                	add    (%rax),%al
 925:	00 33                	add    %dh,(%rbx)
 927:	42 00 00             	rex.X add %al,(%rax)
 92a:	00 00                	add    %al,(%rax)
 92c:	00 00                	add    %al,(%rax)
 92e:	11 01                	adc    %eax,(%rcx)
 930:	00 00                	add    %al,(%rax)
 932:	00 00                	add    %al,(%rax)
 934:	00 00                	add    %al,(%rax)
 936:	01 9c 94 07 00 00 12 	add    %ebx,0x12000007(%rsp,%rdx,4)
 93d:	73 74                	jae    9b3 <__ImageBase+0x9b3>
 93f:	72 00                	jb     941 <__ImageBase+0x941>
 941:	c8 38 d9 03          	enter  $0xd938,$0x3
 945:	00 00                	add    %al,(%rax)
 947:	74 00                	je     949 <__ImageBase+0x949>
 949:	00 00                	add    %al,(%rax)
 94b:	6e                   	outsb  %ds:(%rsi),(%dx)
 94c:	00 00                	add    %al,(%rax)
 94e:	00 12                	add    %dl,(%rdx)
 950:	61                   	(bad)  
 951:	00 c8                	add    %cl,%al
 953:	46 c8 00 00 00       	rex.RX enter $0x0,$0x0
 958:	8f 00                	pop    (%rax)
 95a:	00 00                	add    %al,(%rax)
 95c:	8d 00                	lea    (%rax),%eax
 95e:	00 00                	add    %al,(%rax)
 960:	13 a8 0a 00 00 ca    	adc    -0x35fffff6(%rax),%ebp
 966:	0f f5 02             	pmaddwd (%rdx),%mm0
 969:	00 00                	add    %al,(%rax)
 96b:	9d                   	popf   
 96c:	00 00                	add    %al,(%rax)
 96e:	00 97 00 00 00 0b    	add    %dl,0xb000000(%rdi)
 974:	73 05                	jae    97b <__ImageBase+0x97b>
 976:	00 00                	add    %al,(%rax)
 978:	cb                   	lret   
 979:	09 e0                	or     %esp,%eax
 97b:	00 00                	add    %al,(%rax)
 97d:	00 21                	add    %ah,(%rcx)
 97f:	6d                   	insl   (%dx),%es:(%rdi)
 980:	73 00                	jae    982 <__ImageBase+0x982>
 982:	cd 1c                	int    $0x1c
 984:	94                   	xchg   %eax,%esp
 985:	07                   	(bad)  
 986:	00 00                	add    %al,(%rax)
 988:	be 00 00 00 b6       	mov    $0xb6000000,%esi
 98d:	00 00                	add    %al,(%rax)
 98f:	00 13                	add    %dl,(%rbx)
 991:	cf                   	iret   
 992:	01 00                	add    %eax,(%rax)
 994:	00 ce                	add    %cl,%dh
 996:	09 e0                	or     %esp,%eax
 998:	00 00                	add    %al,(%rax)
 99a:	00 e7                	add    %ah,%bh
 99c:	00 00                	add    %al,(%rax)
 99e:	00 dd                	add    %bl,%ch
 9a0:	00 00                	add    %al,(%rax)
 9a2:	00 22                	add    %ah,(%rdx)
 9a4:	2a 04 00             	sub    (%rax,%rax,1),%al
 9a7:	00 cf                	add    %cl,%bh
 9a9:	a9 00 00 00 02       	test   $0x2000000,%eax
 9ae:	91                   	xchg   %eax,%ecx
 9af:	48 05 56 42 00 00    	add    $0x4256,%rax
 9b5:	00 00                	add    %al,(%rax)
 9b7:	00 00                	add    %al,(%rax)
 9b9:	6a 05                	push   $0x5
 9bb:	00 00                	add    %al,(%rax)
 9bd:	b1 06                	mov    $0x6,%cl
 9bf:	00 00                	add    %al,(%rax)
 9c1:	02 01                	add    (%rcx),%al
 9c3:	55                   	push   %rbp
 9c4:	02 73 00             	add    0x0(%rbx),%dh
 9c7:	00 05 74 42 00 00    	add    %al,0x4274(%rip)        # 4c41 <ct_decode+0x851>
 9cd:	00 00                	add    %al,(%rax)
 9cf:	00 00                	add    %al,(%rax)
 9d1:	4f 05 00 00 cf 06    	rex.WRXB add $0x6cf0000,%rax
 9d7:	00 00                	add    %al,(%rax)
 9d9:	02 01                	add    (%rcx),%al
 9db:	55                   	push   %rbp
 9dc:	02 73 00             	add    0x0(%rbx),%dh
 9df:	02 01                	add    (%rcx),%al
 9e1:	54                   	push   %rsp
 9e2:	02 7c 00 00          	add    0x0(%rax,%rax,1),%bh
 9e6:	05 98 42 00 00       	add    $0x4298,%eax
 9eb:	00 00                	add    %al,(%rax)
 9ed:	00 00                	add    %al,(%rax)
 9ef:	39 05 00 00 e7 06    	cmp    %eax,0x6e70000(%rip)        # 6e709f5 <_end+0x6e459e5>
 9f5:	00 00                	add    %al,(%rax)
 9f7:	02 01                	add    (%rcx),%al
 9f9:	55                   	push   %rbp
 9fa:	02 7d 10             	add    0x10(%rbp),%bh
 9fd:	00 0c ac             	add    %cl,(%rsp,%rbp,4)
 a00:	42 00 00             	rex.X add %al,(%rax)
 a03:	00 00                	add    %al,(%rax)
 a05:	00 00                	add    %al,(%rax)
 a07:	31 05 00 00 05 db    	xor    %eax,-0x24fb0000(%rip)        # ffffffffdb050a0d <_end+0xffffffffdb0259fd>
 a0d:	42 00 00             	rex.X add %al,(%rax)
 a10:	00 00                	add    %al,(%rax)
 a12:	00 00                	add    %al,(%rax)
 a14:	06                   	(bad)  
 a15:	05 00 00 1c 07       	add    $0x71c0000,%eax
 a1a:	00 00                	add    %al,(%rax)
 a1c:	02 01                	add    (%rcx),%al
 a1e:	55                   	push   %rbp
 a1f:	02 76 00             	add    0x0(%rsi),%dh
 a22:	02 01                	add    (%rcx),%al
 a24:	54                   	push   %rsp
 a25:	01 38                	add    %edi,(%rax)
 a27:	02 01                	add    (%rcx),%al
 a29:	51                   	push   %rcx
 a2a:	02 91 48 02 01 52    	add    0x52010248(%rcx),%dl
 a30:	01 38                	add    %edi,(%rax)
 a32:	00 05 f2 42 00 00    	add    %al,0x42f2(%rip)        # 4d2a <ct_decode+0x93a>
 a38:	00 00                	add    %al,(%rax)
 a3a:	00 00                	add    %al,(%rax)
 a3c:	06                   	(bad)  
 a3d:	05 00 00 40 07       	add    $0x7400000,%eax
 a42:	00 00                	add    %al,(%rax)
 a44:	02 01                	add    (%rcx),%al
 a46:	54                   	push   %rsp
 a47:	02 7d 00             	add    0x0(%rbp),%bh
 a4a:	02 01                	add    (%rcx),%al
 a4c:	51                   	push   %rcx
 a4d:	02 73 00             	add    0x0(%rbx),%dh
 a50:	02 01                	add    (%rcx),%al
 a52:	52                   	push   %rdx
 a53:	02 7c 00 00          	add    0x0(%rax,%rax,1),%bh
 a57:	05 1b 43 00 00       	add    $0x431b,%eax
 a5c:	00 00                	add    %al,(%rax)
 a5e:	00 00                	add    %al,(%rax)
 a60:	06                   	(bad)  
 a61:	05 00 00 69 07       	add    $0x7690000,%eax
 a66:	00 00                	add    %al,(%rax)
 a68:	02 01                	add    (%rcx),%al
 a6a:	55                   	push   %rbp
 a6b:	02 76 08             	add    0x8(%rsi),%dh
 a6e:	02 01                	add    (%rcx),%al
 a70:	54                   	push   %rsp
 a71:	01 38                	add    %edi,(%rax)
 a73:	02 01                	add    (%rcx),%al
 a75:	51                   	push   %rcx
 a76:	03 91 b8 7f 02 01    	add    0x1027fb8(%rcx),%edx
 a7c:	52                   	push   %rdx
 a7d:	01 38                	add    %edi,(%rax)
 a7f:	00 05 2c 43 00 00    	add    %al,0x432c(%rip)        # 4db1 <ct_decode+0x9c1>
 a85:	00 00                	add    %al,(%rax)
 a87:	00 00                	add    %al,(%rax)
 a89:	eb 04                	jmp    a8f <__ImageBase+0xa8f>
 a8b:	00 00                	add    %al,(%rax)
 a8d:	86 07                	xchg   %al,(%rdi)
 a8f:	00 00                	add    %al,(%rax)
 a91:	02 01                	add    (%rcx),%al
 a93:	55                   	push   %rbp
 a94:	01 31                	add    %esi,(%rcx)
 a96:	02 01                	add    (%rcx),%al
 a98:	54                   	push   %rsp
 a99:	02 76 00             	add    0x0(%rsi),%dh
 a9c:	00 0c 35 43 00 00 00 	add    %cl,0x43(,%rsi,1)
 aa3:	00 00                	add    %al,(%rax)
 aa5:	00 31                	add    %dh,(%rcx)
 aa7:	05 00 00 00 09       	add    $0x9000000,%eax
 aac:	11 04 00             	adc    %eax,(%rax,%rax,1)
 aaf:	00 20                	add    %ah,(%rax)
 ab1:	3a 01                	cmp    (%rcx),%al
 ab3:	00 00                	add    %al,(%rax)
 ab5:	95                   	xchg   %eax,%ebp
 ab6:	f5                   	cmc    
 ab7:	02 00                	add    (%rax),%al
 ab9:	00 4a 41             	add    %cl,0x41(%rdx)
 abc:	00 00                	add    %al,(%rax)
 abe:	00 00                	add    %al,(%rax)
 ac0:	00 00                	add    %al,(%rax)
 ac2:	e9 00 00 00 00       	jmp    ac7 <__ImageBase+0xac7>
 ac7:	00 00                	add    %al,(%rax)
 ac9:	00 01                	add    %al,(%rcx)
 acb:	9c                   	pushf  
 acc:	ee                   	out    %al,(%dx)
 acd:	08 00                	or     %al,(%rax)
 acf:	00 12                	add    %dl,(%rdx)
 ad1:	73 74                	jae    b47 <__ImageBase+0xb47>
 ad3:	72 00                	jb     ad5 <__ImageBase+0xad5>
 ad5:	95                   	xchg   %eax,%ebp
 ad6:	30 d9                	xor    %bl,%cl
 ad8:	03 00                	add    (%rax),%eax
 ada:	00 17                	add    %dl,(%rdi)
 adc:	01 00                	add    %eax,(%rax)
 ade:	00 11                	add    %dl,(%rcx)
 ae0:	01 00                	add    %eax,(%rax)
 ae2:	00 13                	add    %dl,(%rbx)
 ae4:	a8 0a                	test   $0xa,%al
 ae6:	00 00                	add    %al,(%rax)
 ae8:	97                   	xchg   %eax,%edi
 ae9:	0f f5 02             	pmaddwd (%rdx),%mm0
 aec:	00 00                	add    %al,(%rax)
 aee:	36 01 00             	ss add %eax,(%rax)
 af1:	00 30                	add    %dh,(%rax)
 af3:	01 00                	add    %eax,(%rax)
 af5:	00 0b                	add    %cl,(%rbx)
 af7:	73 05                	jae    afe <__ImageBase+0xafe>
 af9:	00 00                	add    %al,(%rax)
 afb:	98                   	cwtl   
 afc:	09 e0                	or     %esp,%eax
 afe:	00 00                	add    %al,(%rax)
 b00:	00 21                	add    %ah,(%rcx)
 b02:	6d                   	insl   (%dx),%es:(%rdi)
 b03:	73 00                	jae    b05 <__ImageBase+0xb05>
 b05:	9a                   	(bad)  
 b06:	14 ee                	adc    $0xee,%al
 b08:	08 00                	or     %al,(%rax)
 b0a:	00 57 01             	add    %dl,0x1(%rdi)
 b0d:	00 00                	add    %al,(%rax)
 b0f:	4f 01 00             	rex.WRXB add %r8,(%r8)
 b12:	00 13                	add    %dl,(%rbx)
 b14:	cf                   	iret   
 b15:	01 00                	add    %eax,(%rax)
 b17:	00 9b 09 e0 00 00    	add    %bl,0xe009(%rbx)
 b1d:	00 80 01 00 00 76    	add    %al,0x76000001(%rax)
 b23:	01 00                	add    %eax,(%rax)
 b25:	00 22                	add    %ah,(%rdx)
 b27:	2a 04 00             	sub    (%rax,%rax,1),%al
 b2a:	00 9c a9 00 00 00 02 	add    %bl,0x2000000(%rcx,%rbp,4)
 b31:	91                   	xchg   %eax,%ecx
 b32:	48 05 67 41 00 00    	add    $0x4167,%rax
 b38:	00 00                	add    %al,(%rax)
 b3a:	00 00                	add    %al,(%rax)
 b3c:	6a 05                	push   $0x5
 b3e:	00 00                	add    %al,(%rax)
 b40:	34 08                	xor    $0x8,%al
 b42:	00 00                	add    %al,(%rax)
 b44:	02 01                	add    (%rcx),%al
 b46:	55                   	push   %rbp
 b47:	02 73 00             	add    0x0(%rbx),%dh
 b4a:	00 05 85 41 00 00    	add    %al,0x4185(%rip)        # 4cd5 <ct_decode+0x8e5>
 b50:	00 00                	add    %al,(%rax)
 b52:	00 00                	add    %al,(%rax)
 b54:	4f 05 00 00 52 08    	rex.WRXB add $0x8520000,%rax
 b5a:	00 00                	add    %al,(%rax)
 b5c:	02 01                	add    (%rcx),%al
 b5e:	55                   	push   %rbp
 b5f:	02 73 00             	add    0x0(%rbx),%dh
 b62:	02 01                	add    (%rcx),%al
 b64:	54                   	push   %rsp
 b65:	02 76 00             	add    0x0(%rsi),%dh
 b68:	00 05 a9 41 00 00    	add    %al,0x41a9(%rip)        # 4d17 <ct_decode+0x927>
 b6e:	00 00                	add    %al,(%rax)
 b70:	00 00                	add    %al,(%rax)
 b72:	39 05 00 00 6a 08    	cmp    %eax,0x86a0000(%rip)        # 86a0b78 <_end+0x8675b68>
 b78:	00 00                	add    %al,(%rax)
 b7a:	02 01                	add    (%rcx),%al
 b7c:	55                   	push   %rbp
 b7d:	02 7d 08             	add    0x8(%rbp),%bh
 b80:	00 0c bd 41 00 00 00 	add    %cl,0x41(,%rdi,4)
 b87:	00 00                	add    %al,(%rax)
 b89:	00 31                	add    %dh,(%rcx)
 b8b:	05 00 00 05 e9       	add    $0xe9050000,%eax
 b90:	41 00 00             	add    %al,(%r8)
 b93:	00 00                	add    %al,(%rax)
 b95:	00 00                	add    %al,(%rax)
 b97:	06                   	(bad)  
 b98:	05 00 00 9f 08       	add    $0x89f0000,%eax
 b9d:	00 00                	add    %al,(%rax)
 b9f:	02 01                	add    (%rcx),%al
 ba1:	55                   	push   %rbp
 ba2:	02 7c 00 02          	add    0x2(%rax,%rax,1),%bh
 ba6:	01 54 01 38          	add    %edx,0x38(%rcx,%rax,1)
 baa:	02 01                	add    (%rcx),%al
 bac:	51                   	push   %rcx
 bad:	02 91 48 02 01 52    	add    0x52010248(%rcx),%dl
 bb3:	01 38                	add    %edi,(%rax)
 bb5:	00 05 00 42 00 00    	add    %al,0x4200(%rip)        # 4dbb <ct_decode+0x9cb>
 bbb:	00 00                	add    %al,(%rax)
 bbd:	00 00                	add    %al,(%rax)
 bbf:	06                   	(bad)  
 bc0:	05 00 00 c3 08       	add    $0x8c30000,%eax
 bc5:	00 00                	add    %al,(%rax)
 bc7:	02 01                	add    (%rcx),%al
 bc9:	54                   	push   %rsp
 bca:	02 7d 00             	add    0x0(%rbp),%bh
 bcd:	02 01                	add    (%rcx),%al
 bcf:	51                   	push   %rcx
 bd0:	02 73 00             	add    0x0(%rbx),%dh
 bd3:	02 01                	add    (%rcx),%al
 bd5:	52                   	push   %rdx
 bd6:	02 76 00             	add    0x0(%rsi),%dh
 bd9:	00 05 1b 42 00 00    	add    %al,0x421b(%rip)        # 4dfa <ct_decode+0xa0a>
 bdf:	00 00                	add    %al,(%rax)
 be1:	00 00                	add    %al,(%rax)
 be3:	eb 04                	jmp    be9 <__ImageBase+0xbe9>
 be5:	00 00                	add    %al,(%rax)
 be7:	e0 08                	loopne bf1 <__ImageBase+0xbf1>
 be9:	00 00                	add    %al,(%rax)
 beb:	02 01                	add    (%rcx),%al
 bed:	55                   	push   %rbp
 bee:	01 30                	add    %esi,(%rax)
 bf0:	02 01                	add    (%rcx),%al
 bf2:	54                   	push   %rsp
 bf3:	02 7c 00 00          	add    0x0(%rax,%rax,1),%bh
 bf7:	0c 24                	or     $0x24,%al
 bf9:	42 00 00             	rex.X add %al,(%rax)
 bfc:	00 00                	add    %al,(%rax)
 bfe:	00 00                	add    %al,(%rax)
 c00:	31 05 00 00 00 09    	xor    %eax,0x9000000(%rip)        # 9000c06 <_end+0x8fd5bf6>
 c06:	de 03                	fiadds (%rbx)
 c08:	00 00                	add    %al,(%rax)
 c0a:	18 af 0a 00 00 67    	sbb    %ch,0x6700000a(%rdi)
 c10:	f5                   	cmc    
 c11:	02 00                	add    (%rax),%al
 c13:	00 2d 09 00 00 19    	add    %ch,0x19000009(%rip)        # 19000c22 <_end+0x18fd5c12>
 c19:	70 6d                	jo     c88 <__ImageBase+0xc88>
 c1b:	73 00                	jae    c1d <__ImageBase+0xc1d>
 c1d:	67 3c a9             	addr32 cmp $0xa9,%al
 c20:	00 00                	add    %al,(%rax)
 c22:	00 1a                	add    %bl,(%rdx)
 c24:	6d                   	insl   (%dx),%es:(%rdi)
 c25:	73 00                	jae    c27 <__ImageBase+0xc27>
 c27:	6e                   	outsb  %ds:(%rsi),(%dx)
 c28:	1b 2d 09 00 00 0b    	sbb    0xb000009(%rip),%ebp        # b000c37 <_end+0xafd5c27>
 c2e:	e0 05                	loopne c35 <__ImageBase+0xc35>
 c30:	00 00                	add    %al,(%rax)
 c32:	6f                   	outsl  %ds:(%rsi),(%dx)
 c33:	1a b3 03 00 00 0b    	sbb    0xb000003(%rbx),%dh
 c39:	a8 0a                	test   $0xa,%al
 c3b:	00 00                	add    %al,(%rax)
 c3d:	73 0f                	jae    c4e <__ImageBase+0xc4e>
 c3f:	f5                   	cmc    
 c40:	02 00                	add    (%rax),%al
 c42:	00 00                	add    %al,(%rax)
 c44:	09 b3 03 00 00 29    	or     %esi,0x29000003(%rbx)
 c4a:	99                   	cltd   
 c4b:	08 00                	or     %al,(%rax)
 c4d:	00 01                	add    %al,(%rcx)
 c4f:	5f                   	pop    %rdi
 c50:	1f                   	(bad)  
 c51:	f5                   	cmc    
 c52:	02 00                	add    (%rax),%al
 c54:	00 06                	add    %al,(%rsi)
 c56:	40 00 00             	rex add %al,(%rax)
 c59:	00 00                	add    %al,(%rax)
 c5b:	00 00                	add    %al,(%rax)
 c5d:	19 00                	sbb    %eax,(%rax)
 c5f:	00 00                	add    %al,(%rax)
 c61:	00 00                	add    %al,(%rax)
 c63:	00 00                	add    %al,(%rax)
 c65:	01 9c 82 09 00 00 12 	add    %ebx,0x12000009(%rdx,%rax,4)
 c6c:	70 6d                	jo     cdb <__ImageBase+0xcdb>
 c6e:	73 00                	jae    c70 <__ImageBase+0xc70>
 c70:	5f                   	pop    %rdi
 c71:	3c a9                	cmp    $0xa9,%al
 c73:	00 00                	add    %al,(%rax)
 c75:	00 b0 01 00 00 aa    	add    %dh,-0x55ffffff(%rax)
 c7b:	01 00                	add    %eax,(%rax)
 c7d:	00 2a                	add    %ch,(%rdx)
 c7f:	a8 0a                	test   $0xa,%al
 c81:	00 00                	add    %al,(%rax)
 c83:	01 61 0f             	add    %esp,0xf(%rcx)
 c86:	f5                   	cmc    
 c87:	02 00                	add    (%rax),%al
 c89:	00 00                	add    %al,(%rax)
 c8b:	0c 15                	or     $0x15,%al
 c8d:	40 00 00             	rex add %al,(%rax)
 c90:	00 00                	add    %al,(%rax)
 c92:	00 00                	add    %al,(%rax)
 c94:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
 c95:	05 00 00 00 18       	add    $0x18000000,%eax
 c9a:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
 c9b:	03 00                	add    (%rax),%eax
 c9d:	00 4a f5             	add    %cl,-0xb(%rdx)
 ca0:	02 00                	add    (%rax),%al
 ca2:	00 bc 09 00 00 19 70 	add    %bh,0x70190000(%rcx,%rcx,1)
 ca9:	6d                   	insl   (%dx),%es:(%rdi)
 caa:	73 00                	jae    cac <__ImageBase+0xcac>
 cac:	4a                   	rex.WX
 cad:	40 a9 00 00 00 1a    	rex test $0x1a000000,%eax
 cb3:	6d                   	insl   (%dx),%es:(%rdi)
 cb4:	73 00                	jae    cb6 <__ImageBase+0xcb6>
 cb6:	51                   	push   %rcx
 cb7:	1f                   	(bad)  
 cb8:	bc 09 00 00 0b       	mov    $0xb000009,%esp
 cbd:	e0 05                	loopne cc4 <__ImageBase+0xcc4>
 cbf:	00 00                	add    %al,(%rax)
 cc1:	52                   	push   %rdx
 cc2:	1e                   	(bad)  
 cc3:	8d 03                	lea    (%rbx),%eax
 cc5:	00 00                	add    %al,(%rax)
 cc7:	0b a8 0a 00 00 56    	or     0x5600000a(%rax),%ebp
 ccd:	0f f5 02             	pmaddwd (%rdx),%mm0
 cd0:	00 00                	add    %al,(%rax)
 cd2:	00 09                	add    %cl,(%rcx)
 cd4:	8d 03                	lea    (%rbx),%eax
 cd6:	00 00                	add    %al,(%rax)
 cd8:	18 c5                	sbb    %al,%ch
 cda:	07                   	(bad)  
 cdb:	00 00                	add    %al,(%rax)
 cdd:	34 f5                	xor    $0xf5,%al
 cdf:	02 00                	add    (%rax),%al
 ce1:	00 06                	add    %al,(%rsi)
 ce3:	0a 00                	or     (%rax),%al
 ce5:	00 19                	add    %bl,(%rcx)
 ce7:	70 6d                	jo     d56 <__ImageBase+0xd56>
 ce9:	73 00                	jae    ceb <__ImageBase+0xceb>
 ceb:	34 43                	xor    $0x43,%al
 ced:	a9 00 00 00 1a       	test   $0x1a000000,%eax
 cf2:	6d                   	insl   (%dx),%es:(%rdi)
 cf3:	73 00                	jae    cf5 <__ImageBase+0xcf5>
 cf5:	3b 22                	cmp    (%rdx),%esp
 cf7:	06                   	(bad)  
 cf8:	0a 00                	or     (%rax),%al
 cfa:	00 0b                	add    %cl,(%rbx)
 cfc:	e0 05                	loopne d03 <__ImageBase+0xd03>
 cfe:	00 00                	add    %al,(%rax)
 d00:	3c 21                	cmp    $0x21,%al
 d02:	5a                   	pop    %rdx
 d03:	03 00                	add    (%rax),%eax
 d05:	00 0b                	add    %cl,(%rbx)
 d07:	a8 0a                	test   $0xa,%al
 d09:	00 00                	add    %al,(%rax)
 d0b:	40 0f f5 02          	rex pmaddwd (%rdx),%mm0
 d0f:	00 00                	add    %al,(%rax)
 d11:	0b 73 08             	or     0x8(%rbx),%esi
 d14:	00 00                	add    %al,(%rax)
 d16:	41 14 55             	rex.B adc $0x55,%al
 d19:	03 00                	add    (%rax),%eax
 d1b:	00 00                	add    %al,(%rax)
 d1d:	09 5a 03             	or     %ebx,0x3(%rdx)
 d20:	00 00                	add    %al,(%rax)
 d22:	23 f3                	and    %ebx,%esi
 d24:	08 00                	or     %al,(%rax)
 d26:	00 1f                	add    %bl,(%rdi)
 d28:	40 00 00             	rex add %al,(%rax)
 d2b:	00 00                	add    %al,(%rax)
 d2d:	00 00                	add    %al,(%rax)
 d2f:	62                   	(bad)  
 d30:	00 00                	add    %al,(%rax)
 d32:	00 00                	add    %al,(%rax)
 d34:	00 00                	add    %al,(%rax)
 d36:	00 01                	add    %al,(%rcx)
 d38:	9c                   	pushf  
 d39:	e4 0a                	in     $0xa,%al
 d3b:	00 00                	add    %al,(%rax)
 d3d:	10 01                	adc    %al,(%rcx)
 d3f:	09 00                	or     %eax,(%rax)
 d41:	00 cb                	add    %cl,%bl
 d43:	01 00                	add    %eax,(%rax)
 d45:	00 c3                	add    %al,%bl
 d47:	01 00                	add    %eax,(%rax)
 d49:	00 08                	add    %cl,(%rax)
 d4b:	0c 09                	or     $0x9,%al
 d4d:	00 00                	add    %al,(%rax)
 d4f:	08 16                	or     %dl,(%rsi)
 d51:	09 00                	or     %eax,(%rax)
 d53:	00 08                	add    %cl,(%rax)
 d55:	21 09                	and    %ecx,(%rcx)
 d57:	00 00                	add    %al,(%rax)
 d59:	1b f3                	sbb    %ebx,%esi
 d5b:	08 00                	or     %al,(%rax)
 d5d:	00 45 40             	add    %al,0x40(%rbp)
 d60:	00 00                	add    %al,(%rax)
 d62:	00 00                	add    %al,(%rax)
 d64:	00 00                	add    %al,(%rax)
 d66:	00 45 40             	add    %al,0x40(%rbp)
 d69:	00 00                	add    %al,(%rax)
 d6b:	00 00                	add    %al,(%rax)
 d6d:	00 00                	add    %al,(%rax)
 d6f:	30 00                	xor    %al,(%rax)
 d71:	00 00                	add    %al,(%rax)
 d73:	00 00                	add    %al,(%rax)
 d75:	00 00                	add    %al,(%rax)
 d77:	67 ca 0a 00          	addr32 lret $0xa
 d7b:	00 10                	add    %dl,(%rax)
 d7d:	01 09                	add    %ecx,(%rcx)
 d7f:	00 00                	add    %al,(%rax)
 d81:	e5 01                	in     $0x1,%eax
 d83:	00 00                	add    %al,(%rax)
 d85:	e3 01                	jrcxz  d88 <__ImageBase+0xd88>
 d87:	00 00                	add    %al,(%rax)
 d89:	0e                   	(bad)  
 d8a:	0c 09                	or     $0x9,%al
 d8c:	00 00                	add    %al,(%rax)
 d8e:	ed                   	in     (%dx),%eax
 d8f:	01 00                	add    %eax,(%rax)
 d91:	00 eb                	add    %ch,%bl
 d93:	01 00                	add    %eax,(%rax)
 d95:	00 1c 16             	add    %bl,(%rsi,%rdx,1)
 d98:	09 00                	or     %eax,(%rax)
 d9a:	00 02                	add    %al,(%rdx)
 d9c:	91                   	xchg   %eax,%ecx
 d9d:	6c                   	insb   (%dx),%es:(%rdi)
 d9e:	0e                   	(bad)  
 d9f:	21 09                	and    %ecx,(%rcx)
 da1:	00 00                	add    %al,(%rax)
 da3:	f5                   	cmc    
 da4:	01 00                	add    %eax,(%rax)
 da6:	00 f3                	add    %dh,%bl
 da8:	01 00                	add    %eax,(%rax)
 daa:	00 05 5f 40 00 00    	add    %al,0x405f(%rip)        # 4e0f <ct_decode+0xa1f>
 db0:	00 00                	add    %al,(%rax)
 db2:	00 00                	add    %al,(%rax)
 db4:	bd 05 00 00 bc       	mov    $0xbc000005,%ebp
 db9:	0a 00                	or     (%rax),%al
 dbb:	00 02                	add    %al,(%rdx)
 dbd:	01 55 02             	add    %edx,0x2(%rbp)
 dc0:	91                   	xchg   %eax,%ecx
 dc1:	6c                   	insb   (%dx),%es:(%rdi)
 dc2:	02 01                	add    (%rcx),%al
 dc4:	54                   	push   %rsp
 dc5:	01 34 02             	add    %esi,(%rdx,%rax,1)
 dc8:	01 51 02             	add    %edx,0x2(%rcx)
 dcb:	73 00                	jae    dcd <__ImageBase+0xdcd>
 dcd:	02 01                	add    (%rcx),%al
 dcf:	52                   	push   %rdx
 dd0:	01 34 00             	add    %esi,(%rax,%rax,1)
 dd3:	0c 73                	or     $0x73,%al
 dd5:	40 00 00             	rex add %al,(%rax)
 dd8:	00 00                	add    %al,(%rax)
 dda:	00 00                	add    %al,(%rax)
 ddc:	ad                   	lods   %ds:(%rsi),%eax
 ddd:	05 00 00 00 1d       	add    $0x1d000000,%eax
 de2:	3a 40 00             	cmp    0x0(%rax),%al
 de5:	00 00                	add    %al,(%rax)
 de7:	00 00                	add    %al,(%rax)
 de9:	00 ea                	add    %ch,%dl
 deb:	05 00 00 02 01       	add    $0x1020000,%eax
 df0:	55                   	push   %rbp
 df1:	02 73 00             	add    0x0(%rbx),%dh
 df4:	02 01                	add    (%rcx),%al
 df6:	54                   	push   %rsp
 df7:	01 34 00             	add    %esi,(%rax,%rax,1)
 dfa:	00 23                	add    %ah,(%rbx)
 dfc:	82                   	(bad)  
 dfd:	09 00                	or     %eax,(%rax)
 dff:	00 81 40 00 00 00    	add    %al,0x40(%rcx)
 e05:	00 00                	add    %al,(%rax)
 e07:	00 66 00             	add    %ah,0x0(%rsi)
 e0a:	00 00                	add    %al,(%rax)
 e0c:	00 00                	add    %al,(%rax)
 e0e:	00 00                	add    %al,(%rax)
 e10:	01 9c bd 0b 00 00 10 	add    %ebx,0x1000000b(%rbp,%rdi,4)
 e17:	90                   	nop
 e18:	09 00                	or     %eax,(%rax)
 e1a:	00 04 02             	add    %al,(%rdx,%rax,1)
 e1d:	00 00                	add    %al,(%rax)
 e1f:	fc                   	cld    
 e20:	01 00                	add    %eax,(%rax)
 e22:	00 08                	add    %cl,(%rax)
 e24:	9b                   	fwait
 e25:	09 00                	or     %eax,(%rax)
 e27:	00 08                	add    %cl,(%rax)
 e29:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
 e2a:	09 00                	or     %eax,(%rax)
 e2c:	00 08                	add    %cl,(%rax)
 e2e:	b0 09                	mov    $0x9,%al
 e30:	00 00                	add    %al,(%rax)
 e32:	1b 82 09 00 00 a7    	sbb    -0x58fffff7(%rdx),%eax
 e38:	40 00 00             	rex add %al,(%rax)
 e3b:	00 00                	add    %al,(%rax)
 e3d:	00 00                	add    %al,(%rax)
 e3f:	00 a7 40 00 00 00    	add    %ah,0x40(%rdi)
 e45:	00 00                	add    %al,(%rax)
 e47:	00 34 00             	add    %dh,(%rax,%rax,1)
 e4a:	00 00                	add    %al,(%rax)
 e4c:	00 00                	add    %al,(%rax)
 e4e:	00 00                	add    %al,(%rax)
 e50:	4a a3 0b 00 00 10 90 	rex.WX movabs %rax,0x9901000000b
 e57:	09 00 00 
 e5a:	25 02 00 00 23       	and    $0x23000002,%eax
 e5f:	02 00                	add    (%rax),%al
 e61:	00 0e                	add    %cl,(%rsi)
 e63:	9b                   	fwait
 e64:	09 00                	or     %eax,(%rax)
 e66:	00 2f                	add    %ch,(%rdi)
 e68:	02 00                	add    (%rax),%al
 e6a:	00 2d 02 00 00 1c    	add    %ch,0x1c000002(%rip)        # 1c000e72 <_end+0x1bfd5e62>
 e70:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
 e71:	09 00                	or     %eax,(%rax)
 e73:	00 02                	add    %al,(%rdx)
 e75:	91                   	xchg   %eax,%ecx
 e76:	68 0e b0 09 00       	push   $0x9b00e
 e7b:	00 39                	add    %bh,(%rcx)
 e7d:	02 00                	add    (%rax),%al
 e7f:	00 37                	add    %dh,(%rdi)
 e81:	02 00                	add    (%rax),%al
 e83:	00 05 c1 40 00 00    	add    %al,0x40c1(%rip)        # 4f4a <ct_decode+0xb5a>
 e89:	00 00                	add    %al,(%rax)
 e8b:	00 00                	add    %al,(%rax)
 e8d:	bd 05 00 00 95       	mov    $0x95000005,%ebp
 e92:	0b 00                	or     (%rax),%eax
 e94:	00 02                	add    %al,(%rdx)
 e96:	01 55 02             	add    %edx,0x2(%rbp)
 e99:	91                   	xchg   %eax,%ecx
 e9a:	68 02 01 54 01       	push   $0x1540102
 e9f:	38 02                	cmp    %al,(%rdx)
 ea1:	01 51 02             	add    %edx,0x2(%rcx)
 ea4:	73 00                	jae    ea6 <__ImageBase+0xea6>
 ea6:	02 01                	add    (%rcx),%al
 ea8:	52                   	push   %rdx
 ea9:	01 38                	add    %edi,(%rax)
 eab:	00 0c d9             	add    %cl,(%rcx,%rbx,8)
 eae:	40 00 00             	rex add %al,(%rax)
 eb1:	00 00                	add    %al,(%rax)
 eb3:	00 00                	add    %al,(%rax)
 eb5:	90                   	nop
 eb6:	05 00 00 00 1d       	add    $0x1d000000,%eax
 ebb:	9c                   	pushf  
 ebc:	40 00 00             	rex add %al,(%rax)
 ebf:	00 00                	add    %al,(%rax)
 ec1:	00 00                	add    %al,(%rax)
 ec3:	ea                   	(bad)  
 ec4:	05 00 00 02 01       	add    $0x1020000,%eax
 ec9:	55                   	push   %rbp
 eca:	02 73 00             	add    0x0(%rbx),%dh
 ecd:	02 01                	add    (%rcx),%al
 ecf:	54                   	push   %rsp
 ed0:	01 38                	add    %edi,(%rax)
 ed2:	00 00                	add    %al,(%rax)
 ed4:	2b c1                	sub    %ecx,%eax
 ed6:	09 00                	or     %eax,(%rax)
 ed8:	00 e7                	add    %ah,%bh
 eda:	40 00 00             	rex add %al,(%rax)
 edd:	00 00                	add    %al,(%rax)
 edf:	00 00                	add    %al,(%rax)
 ee1:	63 00                	movsxd (%rax),%eax
 ee3:	00 00                	add    %al,(%rax)
 ee5:	00 00                	add    %al,(%rax)
 ee7:	00 00                	add    %al,(%rax)
 ee9:	01 9c 10 cf 09 00 00 	add    %ebx,0x9cf(%rax,%rdx,1)
 ef0:	4a 02 00             	rex.WX add (%rax),%al
 ef3:	00 42 02             	add    %al,0x2(%rdx)
 ef6:	00 00                	add    %al,(%rax)
 ef8:	08 da                	or     %bl,%dl
 efa:	09 00                	or     %eax,(%rax)
 efc:	00 08                	add    %cl,(%rax)
 efe:	e4 09                	in     $0x9,%al
 f00:	00 00                	add    %al,(%rax)
 f02:	08 ef                	or     %ch,%bh
 f04:	09 00                	or     %eax,(%rax)
 f06:	00 08                	add    %cl,(%rax)
 f08:	fa                   	cli    
 f09:	09 00                	or     %eax,(%rax)
 f0b:	00 1b                	add    %bl,(%rbx)
 f0d:	c1 09 00             	rorl   $0x0,(%rcx)
 f10:	00 0d 41 00 00 00    	add    %cl,0x41(%rip)        # f57 <__ImageBase+0xf57>
 f16:	00 00                	add    %al,(%rax)
 f18:	00 00                	add    %al,(%rax)
 f1a:	0d 41 00 00 00       	or     $0x41,%eax
 f1f:	00 00                	add    %al,(%rax)
 f21:	00 31                	add    %dh,(%rcx)
 f23:	00 00                	add    %al,(%rax)
 f25:	00 00                	add    %al,(%rax)
 f27:	00 00                	add    %al,(%rax)
 f29:	00 34 8a             	add    %dh,(%rdx,%rcx,4)
 f2c:	0c 00                	or     $0x0,%al
 f2e:	00 10                	add    %dl,(%rax)
 f30:	cf                   	iret   
 f31:	09 00                	or     %eax,(%rax)
 f33:	00 6c 02 00          	add    %ch,0x0(%rdx,%rax,1)
 f37:	00 6a 02             	add    %ch,0x2(%rdx)
 f3a:	00 00                	add    %al,(%rax)
 f3c:	0e                   	(bad)  
 f3d:	da 09                	fimull (%rcx)
 f3f:	00 00                	add    %al,(%rax)
 f41:	76 02                	jbe    f45 <__ImageBase+0xf45>
 f43:	00 00                	add    %al,(%rax)
 f45:	74 02                	je     f49 <__ImageBase+0xf49>
 f47:	00 00                	add    %al,(%rax)
 f49:	1c e4                	sbb    $0xe4,%al
 f4b:	09 00                	or     %eax,(%rax)
 f4d:	00 02                	add    %al,(%rdx)
 f4f:	91                   	xchg   %eax,%ecx
 f50:	68 0e ef 09 00       	push   $0x9ef0e
 f55:	00 80 02 00 00 7e    	add    %al,0x7e000002(%rax)
 f5b:	02 00                	add    (%rax),%al
 f5d:	00 0e                	add    %cl,(%rsi)
 f5f:	fa                   	cli    
 f60:	09 00                	or     %eax,(%rax)
 f62:	00 8b 02 00 00 89    	add    %cl,-0x76fffffe(%rbx)
 f68:	02 00                	add    (%rax),%al
 f6a:	00 05 27 41 00 00    	add    %al,0x4127(%rip)        # 5097 <ct_decode+0xca7>
 f70:	00 00                	add    %al,(%rax)
 f72:	00 00                	add    %al,(%rax)
 f74:	bd 05 00 00 7c       	mov    $0x7c000005,%ebp
 f79:	0c 00                	or     $0x0,%al
 f7b:	00 02                	add    %al,(%rdx)
 f7d:	01 55 02             	add    %edx,0x2(%rbp)
 f80:	91                   	xchg   %eax,%ecx
 f81:	68 02 01 54 01       	push   $0x1540102
 f86:	38 02                	cmp    %al,(%rdx)
 f88:	01 51 02             	add    %edx,0x2(%rcx)
 f8b:	73 00                	jae    f8d <__ImageBase+0xf8d>
 f8d:	02 01                	add    (%rcx),%al
 f8f:	52                   	push   %rdx
 f90:	01 38                	add    %edi,(%rax)
 f92:	00 0c 3c             	add    %cl,(%rsp,%rdi,1)
 f95:	41 00 00             	add    %al,(%r8)
 f98:	00 00                	add    %al,(%rax)
 f9a:	00 00                	add    %al,(%rax)
 f9c:	80 05 00 00 00 1d 02 	addb   $0x2,0x1d000000(%rip)        # 1d000fa3 <_end+0x1cfd5f93>
 fa3:	41 00 00             	add    %al,(%r8)
 fa6:	00 00                	add    %al,(%rax)
 fa8:	00 00                	add    %al,(%rax)
 faa:	ea                   	(bad)  
 fab:	05 00 00 02 01       	add    $0x1020000,%eax
 fb0:	55                   	push   %rbp
 fb1:	02 73 00             	add    0x0(%rbx),%dh
 fb4:	02 01                	add    (%rcx),%al
 fb6:	54                   	push   %rsp
 fb7:	01 38                	add    %edi,(%rax)
 fb9:	00 00                	add    %al,(%rax)
	...

Disassembly of section .debug_abbrev:

0000000000000000 <.debug_abbrev>:
   0:	01 24 00             	add    %esp,(%rax,%rax,1)
   3:	0b 0b                	or     (%rbx),%ecx
   5:	3e 0b 03             	ds or  (%rbx),%eax
   8:	0e                   	(bad)  
   9:	00 00                	add    %al,(%rax)
   b:	02 49 00             	add    0x0(%rcx),%cl
   e:	02 18                	add    (%rax),%bl
  10:	7e 18                	jle    2a <__ImageBase+0x2a>
  12:	00 00                	add    %al,(%rax)
  14:	03 18                	add    (%rax),%ebx
  16:	00 00                	add    %al,(%rax)
  18:	00 04 16             	add    %al,(%rsi,%rdx,1)
  1b:	00 03                	add    %al,(%rbx)
  1d:	0e                   	(bad)  
  1e:	3a 0b                	cmp    (%rbx),%cl
  20:	3b 0b                	cmp    (%rbx),%ecx
  22:	39 0b                	cmp    %ecx,(%rbx)
  24:	49 13 00             	adc    (%r8),%rax
  27:	00 05 2e 01 3f 19    	add    %al,0x193f012e(%rip)        # 193f015b <_end+0x193c514b>
  2d:	03 0e                	add    (%rsi),%ecx
  2f:	3a 21                	cmp    (%rcx),%ah
  31:	01 3b                	add    %edi,(%rbx)
  33:	0b 39                	or     (%rcx),%edi
  35:	0b 49 13             	or     0x13(%rcx),%ecx
  38:	3c 19                	cmp    $0x19,%al
  3a:	01 13                	add    %edx,(%rbx)
  3c:	00 00                	add    %al,(%rax)
  3e:	06                   	(bad)  
  3f:	0f 00 0b             	str    (%rbx)
  42:	21 08                	and    %ecx,(%rax)
  44:	49 13 00             	adc    (%r8),%rax
  47:	00 07                	add    %al,(%rdi)
  49:	2e 01 3f             	cs add %edi,(%rdi)
  4c:	19 03                	sbb    %eax,(%rbx)
  4e:	0e                   	(bad)  
  4f:	3a 21                	cmp    (%rcx),%ah
  51:	01 3b                	add    %edi,(%rbx)
  53:	0b 39                	or     (%rcx),%edi
  55:	21 06                	and    %eax,(%rsi)
  57:	27                   	(bad)  
  58:	19 11                	sbb    %edx,(%rcx)
  5a:	01 12                	add    %edx,(%rdx)
  5c:	07                   	(bad)  
  5d:	40 18 7a 19          	sbb    %dil,0x19(%rdx)
  61:	01 13                	add    %edx,(%rbx)
  63:	00 00                	add    %al,(%rax)
  65:	08 48 01             	or     %cl,0x1(%rax)
  68:	7d 01                	jge    6b <__ImageBase+0x6b>
  6a:	7f 13                	jg     7f <__ImageBase+0x7f>
  6c:	01 13                	add    %edx,(%rbx)
  6e:	00 00                	add    %al,(%rax)
  70:	09 0d 00 03 0e 3a    	or     %ecx,0x3a0e0300(%rip)        # 3a0e0376 <_end+0x3a0b5366>
  76:	21 05 3b 0b 39 21    	and    %eax,0x21390b3b(%rip)        # 21390bb7 <_end+0x21365ba7>
  7c:	0a 49 13             	or     0x13(%rcx),%cl
  7f:	38 0b                	cmp    %cl,(%rbx)
  81:	00 00                	add    %al,(%rax)
  83:	0a 05 00 49 13 00    	or     0x134900(%rip),%al        # 134989 <_end+0x109979>
  89:	00 0b                	add    %cl,(%rbx)
  8b:	05 00 03 08 3a       	add    $0x3a080300,%eax
  90:	21 01                	and    %eax,(%rcx)
  92:	3b 0b                	cmp    (%rbx),%ecx
  94:	39 0b                	cmp    %ecx,(%rbx)
  96:	49 13 02             	adc    (%r10),%rax
  99:	17                   	(bad)  
  9a:	b7 42                	mov    $0x42,%bh
  9c:	17                   	(bad)  
  9d:	00 00                	add    %al,(%rax)
  9f:	0c 11                	or     $0x11,%al
  a1:	01 25 0e 13 0b 03    	add    %esp,0x30b130e(%rip)        # 30b13b5 <_end+0x30863a5>
  a7:	1f                   	(bad)  
  a8:	1b 1f                	sbb    (%rdi),%ebx
  aa:	11 01                	adc    %eax,(%rcx)
  ac:	12 07                	adc    (%rdi),%al
  ae:	10 17                	adc    %dl,(%rdi)
  b0:	00 00                	add    %al,(%rax)
  b2:	0d 24 00 0b 0b       	or     $0xb0b0024,%eax
  b7:	3e 0b 03             	ds or  (%rbx),%eax
  ba:	08 00                	or     %al,(%rax)
  bc:	00 0e                	add    %cl,(%rsi)
  be:	13 01                	adc    (%rcx),%eax
  c0:	03 0e                	add    (%rsi),%ecx
  c2:	0b 0b                	or     (%rbx),%ecx
  c4:	3a 0b                	cmp    (%rbx),%cl
  c6:	3b 0b                	cmp    (%rbx),%ecx
  c8:	39 0b                	cmp    %ecx,(%rbx)
  ca:	01 13                	add    %edx,(%rbx)
  cc:	00 00                	add    %al,(%rax)
  ce:	0f 34                	sysenter 
  d0:	00 03                	add    %al,(%rbx)
  d2:	0e                   	(bad)  
  d3:	3a 0b                	cmp    (%rbx),%cl
  d5:	3b 0b                	cmp    (%rbx),%ecx
  d7:	39 0b                	cmp    %ecx,(%rbx)
  d9:	49 13 3f             	adc    (%r15),%rdi
  dc:	19 02                	sbb    %eax,(%rdx)
  de:	18 00                	sbb    %al,(%rax)
  e0:	00 10                	add    %dl,(%rax)
  e2:	34 00                	xor    $0x0,%al
  e4:	03 08                	add    (%rax),%ecx
  e6:	3a 0b                	cmp    (%rbx),%cl
  e8:	3b 0b                	cmp    (%rbx),%ecx
  ea:	39 0b                	cmp    %ecx,(%rbx)
  ec:	49 13 3f             	adc    (%r15),%rdi
  ef:	19 02                	sbb    %eax,(%rdx)
  f1:	18 00                	sbb    %al,(%rax)
  f3:	00 11                	add    %dl,(%rcx)
  f5:	2e 01 3f             	cs add %edi,(%rdi)
  f8:	19 03                	sbb    %eax,(%rbx)
  fa:	0e                   	(bad)  
  fb:	3a 0b                	cmp    (%rbx),%cl
  fd:	3b 0b                	cmp    (%rbx),%ecx
  ff:	39 0b                	cmp    %ecx,(%rbx)
 101:	27                   	(bad)  
 102:	19 49 13             	sbb    %ecx,0x13(%rcx)
 105:	3c 19                	cmp    $0x19,%al
 107:	01 13                	add    %edx,(%rbx)
 109:	00 00                	add    %al,(%rax)
 10b:	12 26                	adc    (%rsi),%ah
 10d:	00 00                	add    %al,(%rax)
 10f:	00 13                	add    %dl,(%rbx)
 111:	0b 01                	or     (%rcx),%eax
 113:	11 01                	adc    %eax,(%rcx)
 115:	12 07                	adc    (%rdi),%al
 117:	01 13                	add    %edx,(%rbx)
 119:	00 00                	add    %al,(%rax)
 11b:	14 2e                	adc    $0x2e,%al
 11d:	01 3f                	add    %edi,(%rdi)
 11f:	19 03                	sbb    %eax,(%rbx)
 121:	0e                   	(bad)  
 122:	3a 0b                	cmp    (%rbx),%cl
 124:	3b 0b                	cmp    (%rbx),%ecx
 126:	39 0b                	cmp    %ecx,(%rbx)
 128:	49 13 3c 19          	adc    (%r9,%rbx,1),%rdi
 12c:	00 00                	add    %al,(%rax)
 12e:	15 0b 01 11 01       	adc    $0x111010b,%eax
 133:	12 07                	adc    (%rdi),%al
 135:	00 00                	add    %al,(%rax)
 137:	16                   	(bad)  
 138:	48 00 7d 01          	rex.W add %dil,0x1(%rbp)
 13c:	82                   	(bad)  
 13d:	01 19                	add    %ebx,(%rcx)
 13f:	7f 13                	jg     154 <__ImageBase+0x154>
 141:	00 00                	add    %al,(%rax)
 143:	17                   	(bad)  
 144:	2e 01 3f             	cs add %edi,(%rdi)
 147:	19 03                	sbb    %eax,(%rbx)
 149:	0e                   	(bad)  
 14a:	3a 0b                	cmp    (%rbx),%cl
 14c:	3b 0b                	cmp    (%rbx),%ecx
 14e:	39 0b                	cmp    %ecx,(%rbx)
 150:	11 01                	adc    %eax,(%rcx)
 152:	12 07                	adc    (%rdi),%al
 154:	40 18 7a 19          	sbb    %dil,0x19(%rdx)
 158:	01 13                	add    %edx,(%rbx)
 15a:	00 00                	add    %al,(%rax)
 15c:	18 48 01             	sbb    %cl,0x1(%rax)
 15f:	7d 01                	jge    162 <__ImageBase+0x162>
 161:	82                   	(bad)  
 162:	01 19                	add    %ebx,(%rcx)
 164:	7f 13                	jg     179 <__ImageBase+0x179>
 166:	00 00                	add    %al,(%rax)
 168:	19 05 00 03 08 3a    	sbb    %eax,0x3a080300(%rip)        # 3a08046e <_end+0x3a05545e>
 16e:	0b 3b                	or     (%rbx),%edi
 170:	0b 39                	or     (%rcx),%edi
 172:	0b 49 13             	or     0x13(%rcx),%ecx
 175:	02 18                	add    (%rax),%bl
 177:	00 00                	add    %al,(%rax)
 179:	1a 05 00 03 0e 3a    	sbb    0x3a0e0300(%rip),%al        # 3a0e047f <_end+0x3a0b546f>
 17f:	0b 3b                	or     (%rbx),%edi
 181:	0b 39                	or     (%rcx),%edi
 183:	0b 49 13             	or     0x13(%rcx),%ecx
 186:	02 17                	add    (%rdi),%dl
 188:	b7 42                	mov    $0x42,%bh
 18a:	17                   	(bad)  
 18b:	00 00                	add    %al,(%rax)
 18d:	1b 48 01             	sbb    0x1(%rax),%ecx
 190:	7d 01                	jge    193 <__ImageBase+0x193>
 192:	7f 13                	jg     1a7 <__ImageBase+0x1a7>
 194:	00 00                	add    %al,(%rax)
 196:	00 01                	add    %al,(%rcx)
 198:	11 00                	adc    %eax,(%rax)
 19a:	10 17                	adc    %dl,(%rdi)
 19c:	11 01                	adc    %eax,(%rcx)
 19e:	12 0f                	adc    (%rdi),%cl
 1a0:	03 0e                	add    (%rsi),%ecx
 1a2:	1b 0e                	sbb    (%rsi),%ecx
 1a4:	25 0e 13 05 00       	and    $0x5130e,%eax
 1a9:	00 00                	add    %al,(%rax)
 1ab:	01 28                	add    %ebp,(%rax)
 1ad:	00 03                	add    %al,(%rbx)
 1af:	0e                   	(bad)  
 1b0:	1c 05                	sbb    $0x5,%al
 1b2:	00 00                	add    %al,(%rax)
 1b4:	02 49 00             	add    0x0(%rcx),%cl
 1b7:	02 18                	add    (%rax),%bl
 1b9:	7e 18                	jle    1d3 <__ImageBase+0x1d3>
 1bb:	00 00                	add    %al,(%rax)
 1bd:	03 05 00 49 13 00    	add    0x134900(%rip),%eax        # 134ac3 <_end+0x109ab3>
 1c3:	00 04 0d 00 03 0e 3a 	add    %al,0x3a0e0300(,%rcx,1)
 1ca:	0b 3b                	or     (%rbx),%edi
 1cc:	0b 39                	or     (%rcx),%edi
 1ce:	0b 49 13             	or     0x13(%rcx),%ecx
 1d1:	38 0b                	cmp    %cl,(%rbx)
 1d3:	00 00                	add    %al,(%rax)
 1d5:	05 48 01 7d 01       	add    $0x17d0148,%eax
 1da:	7f 13                	jg     1ef <__ImageBase+0x1ef>
 1dc:	01 13                	add    %edx,(%rbx)
 1de:	00 00                	add    %al,(%rax)
 1e0:	06                   	(bad)  
 1e1:	16                   	(bad)  
 1e2:	00 03                	add    %al,(%rbx)
 1e4:	0e                   	(bad)  
 1e5:	3a 0b                	cmp    (%rbx),%cl
 1e7:	3b 0b                	cmp    (%rbx),%ecx
 1e9:	39 0b                	cmp    %ecx,(%rbx)
 1eb:	49 13 00             	adc    (%r8),%rax
 1ee:	00 07                	add    %al,(%rdi)
 1f0:	24 00                	and    $0x0,%al
 1f2:	0b 0b                	or     (%rbx),%ecx
 1f4:	3e 0b 03             	ds or  (%rbx),%eax
 1f7:	0e                   	(bad)  
 1f8:	00 00                	add    %al,(%rax)
 1fa:	08 34 00             	or     %dh,(%rax,%rax,1)
 1fd:	31 13                	xor    %edx,(%rbx)
 1ff:	00 00                	add    %al,(%rax)
 201:	09 0f                	or     %ecx,(%rdi)
 203:	00 0b                	add    %cl,(%rbx)
 205:	21 08                	and    %ecx,(%rax)
 207:	49 13 00             	adc    (%r8),%rax
 20a:	00 0a                	add    %cl,(%rdx)
 20c:	28 00                	sub    %al,(%rax)
 20e:	03 0e                	add    (%rsi),%ecx
 210:	1c 0b                	sbb    $0xb,%al
 212:	00 00                	add    %al,(%rax)
 214:	0b 34 00             	or     (%rax,%rax,1),%esi
 217:	03 0e                	add    (%rsi),%ecx
 219:	3a 21                	cmp    (%rcx),%ah
 21b:	01 3b                	add    %edi,(%rbx)
 21d:	0b 39                	or     (%rcx),%edi
 21f:	0b 49 13             	or     0x13(%rcx),%ecx
 222:	00 00                	add    %al,(%rax)
 224:	0c 48                	or     $0x48,%al
 226:	00 7d 01             	add    %bh,0x1(%rbp)
 229:	7f 13                	jg     23e <__ImageBase+0x23e>
 22b:	00 00                	add    %al,(%rax)
 22d:	0d 2e 01 3f 19       	or     $0x193f012e,%eax
 232:	03 0e                	add    (%rsi),%ecx
 234:	3a 0b                	cmp    (%rbx),%cl
 236:	3b 0b                	cmp    (%rbx),%ecx
 238:	39 0b                	cmp    %ecx,(%rbx)
 23a:	27                   	(bad)  
 23b:	19 49 13             	sbb    %ecx,0x13(%rcx)
 23e:	3c 19                	cmp    $0x19,%al
 240:	01 13                	add    %edx,(%rbx)
 242:	00 00                	add    %al,(%rax)
 244:	0e                   	(bad)  
 245:	34 00                	xor    $0x0,%al
 247:	31 13                	xor    %edx,(%rbx)
 249:	02 17                	add    (%rdi),%dl
 24b:	b7 42                	mov    $0x42,%bh
 24d:	17                   	(bad)  
 24e:	00 00                	add    %al,(%rax)
 250:	0f 13 01             	movlps %xmm0,(%rcx)
 253:	03 0e                	add    (%rsi),%ecx
 255:	0b 0b                	or     (%rbx),%ecx
 257:	3a 0b                	cmp    (%rbx),%cl
 259:	3b 0b                	cmp    (%rbx),%ecx
 25b:	39 21                	cmp    %esp,(%rcx)
 25d:	10 01                	adc    %al,(%rcx)
 25f:	13 00                	adc    (%rax),%eax
 261:	00 10                	add    %dl,(%rax)
 263:	05 00 31 13 02       	add    $0x2133100,%eax
 268:	17                   	(bad)  
 269:	b7 42                	mov    $0x42,%bh
 26b:	17                   	(bad)  
 26c:	00 00                	add    %al,(%rax)
 26e:	11 26                	adc    %esp,(%rsi)
 270:	00 49 13             	add    %cl,0x13(%rcx)
 273:	00 00                	add    %al,(%rax)
 275:	12 05 00 03 08 3a    	adc    0x3a080300(%rip),%al        # 3a08057b <_end+0x3a05556b>
 27b:	21 01                	and    %eax,(%rcx)
 27d:	3b 0b                	cmp    (%rbx),%ecx
 27f:	39 0b                	cmp    %ecx,(%rbx)
 281:	49 13 02             	adc    (%r10),%rax
 284:	17                   	(bad)  
 285:	b7 42                	mov    $0x42,%bh
 287:	17                   	(bad)  
 288:	00 00                	add    %al,(%rax)
 28a:	13 34 00             	adc    (%rax,%rax,1),%esi
 28d:	03 0e                	add    (%rsi),%ecx
 28f:	3a 21                	cmp    (%rcx),%ah
 291:	01 3b                	add    %edi,(%rbx)
 293:	0b 39                	or     (%rcx),%edi
 295:	0b 49 13             	or     0x13(%rcx),%ecx
 298:	02 17                	add    (%rdi),%dl
 29a:	b7 42                	mov    $0x42,%bh
 29c:	17                   	(bad)  
 29d:	00 00                	add    %al,(%rax)
 29f:	14 13                	adc    $0x13,%al
 2a1:	01 0b                	add    %ecx,(%rbx)
 2a3:	0b 3a                	or     (%rdx),%edi
 2a5:	21 01                	and    %eax,(%rcx)
 2a7:	3b 0b                	cmp    (%rbx),%ecx
 2a9:	39 0b                	cmp    %ecx,(%rbx)
 2ab:	01 13                	add    %edx,(%rbx)
 2ad:	00 00                	add    %al,(%rax)
 2af:	15 21 00 49 13       	adc    $0x13490021,%eax
 2b4:	2f                   	(bad)  
 2b5:	0b 00                	or     (%rax),%eax
 2b7:	00 16                	add    %dl,(%rsi)
 2b9:	2e 00 3f             	cs add %bh,(%rdi)
 2bc:	19 03                	sbb    %eax,(%rbx)
 2be:	0e                   	(bad)  
 2bf:	3a 0b                	cmp    (%rbx),%cl
 2c1:	3b 0b                	cmp    (%rbx),%ecx
 2c3:	39 0b                	cmp    %ecx,(%rbx)
 2c5:	27                   	(bad)  
 2c6:	19 3c 19             	sbb    %edi,(%rcx,%rbx,1)
 2c9:	00 00                	add    %al,(%rax)
 2cb:	17                   	(bad)  
 2cc:	2e 01 3f             	cs add %edi,(%rdi)
 2cf:	19 03                	sbb    %eax,(%rbx)
 2d1:	0e                   	(bad)  
 2d2:	3a 21                	cmp    (%rcx),%ah
 2d4:	06                   	(bad)  
 2d5:	3b 0b                	cmp    (%rbx),%ecx
 2d7:	39 21                	cmp    %esp,(%rcx)
 2d9:	06                   	(bad)  
 2da:	27                   	(bad)  
 2db:	19 3c 19             	sbb    %edi,(%rcx,%rbx,1)
 2de:	01 13                	add    %edx,(%rbx)
 2e0:	00 00                	add    %al,(%rax)
 2e2:	18 2e                	sbb    %ch,(%rsi)
 2e4:	01 03                	add    %eax,(%rbx)
 2e6:	0e                   	(bad)  
 2e7:	3a 21                	cmp    (%rcx),%ah
 2e9:	01 3b                	add    %edi,(%rbx)
 2eb:	0b 39                	or     (%rcx),%edi
 2ed:	21 1f                	and    %ebx,(%rdi)
 2ef:	27                   	(bad)  
 2f0:	19 49 13             	sbb    %ecx,0x13(%rcx)
 2f3:	20 21                	and    %ah,(%rcx)
 2f5:	01 01                	add    %eax,(%rcx)
 2f7:	13 00                	adc    (%rax),%eax
 2f9:	00 19                	add    %bl,(%rcx)
 2fb:	05 00 03 08 3a       	add    $0x3a080300,%eax
 300:	21 01                	and    %eax,(%rcx)
 302:	3b 0b                	cmp    (%rbx),%ecx
 304:	39 0b                	cmp    %ecx,(%rbx)
 306:	49 13 00             	adc    (%r8),%rax
 309:	00 1a                	add    %bl,(%rdx)
 30b:	34 00                	xor    $0x0,%al
 30d:	03 08                	add    (%rax),%ecx
 30f:	3a 21                	cmp    (%rcx),%ah
 311:	01 3b                	add    %edi,(%rbx)
 313:	0b 39                	or     (%rcx),%edi
 315:	0b 49 13             	or     0x13(%rcx),%ecx
 318:	00 00                	add    %al,(%rax)
 31a:	1b 1d 01 31 13 52    	sbb    0x52133101(%rip),%ebx        # 52133421 <_end+0x52108411>
 320:	01 b8 42 0b 11 01    	add    %edi,0x1110b42(%rax)
 326:	12 07                	adc    (%rdi),%al
 328:	58                   	pop    %rax
 329:	21 01                	and    %eax,(%rcx)
 32b:	59                   	pop    %rcx
 32c:	0b 57 21             	or     0x21(%rdi),%edx
 32f:	1f                   	(bad)  
 330:	01 13                	add    %edx,(%rbx)
 332:	00 00                	add    %al,(%rax)
 334:	1c 34                	sbb    $0x34,%al
 336:	00 31                	add    %dh,(%rcx)
 338:	13 02                	adc    (%rdx),%eax
 33a:	18 00                	sbb    %al,(%rax)
 33c:	00 1d 48 01 7d 01    	add    %bl,0x17d0148(%rip)        # 17d048a <_end+0x17a547a>
 342:	7f 13                	jg     357 <__ImageBase+0x357>
 344:	00 00                	add    %al,(%rax)
 346:	1e                   	(bad)  
 347:	01 01                	add    %eax,(%rcx)
 349:	49 13 01             	adc    (%r9),%rax
 34c:	13 00                	adc    (%rax),%eax
 34e:	00 1f                	add    %bl,(%rdi)
 350:	34 00                	xor    $0x0,%al
 352:	03 0e                	add    (%rsi),%ecx
 354:	3a 21                	cmp    (%rcx),%ah
 356:	01 3b                	add    %edi,(%rbx)
 358:	0b 39                	or     (%rcx),%edi
 35a:	21 03                	and    %eax,(%rbx)
 35c:	49 13 3f             	adc    (%r15),%rdi
 35f:	19 02                	sbb    %eax,(%rdx)
 361:	18 00                	sbb    %al,(%rax)
 363:	00 20                	add    %ah,(%rax)
 365:	2e 01 3f             	cs add %edi,(%rdi)
 368:	19 03                	sbb    %eax,(%rbx)
 36a:	0e                   	(bad)  
 36b:	3a 21                	cmp    (%rcx),%ah
 36d:	01 3b                	add    %edi,(%rbx)
 36f:	0b 39                	or     (%rcx),%edi
 371:	21 18                	and    %ebx,(%rax)
 373:	27                   	(bad)  
 374:	19 49 13             	sbb    %ecx,0x13(%rcx)
 377:	11 01                	adc    %eax,(%rcx)
 379:	12 07                	adc    (%rdi),%al
 37b:	40 18 7a 19          	sbb    %dil,0x19(%rdx)
 37f:	01 13                	add    %edx,(%rbx)
 381:	00 00                	add    %al,(%rax)
 383:	21 34 00             	and    %esi,(%rax,%rax,1)
 386:	03 08                	add    (%rax),%ecx
 388:	3a 21                	cmp    (%rcx),%ah
 38a:	01 3b                	add    %edi,(%rbx)
 38c:	0b 39                	or     (%rcx),%edi
 38e:	0b 49 13             	or     0x13(%rcx),%ecx
 391:	02 17                	add    (%rdi),%dl
 393:	b7 42                	mov    $0x42,%bh
 395:	17                   	(bad)  
 396:	00 00                	add    %al,(%rax)
 398:	22 34 00             	and    (%rax,%rax,1),%dh
 39b:	03 0e                	add    (%rsi),%ecx
 39d:	3a 21                	cmp    (%rcx),%ah
 39f:	01 3b                	add    %edi,(%rbx)
 3a1:	0b 39                	or     (%rcx),%edi
 3a3:	21 08                	and    %ecx,(%rax)
 3a5:	49 13 02             	adc    (%r10),%rax
 3a8:	18 00                	sbb    %al,(%rax)
 3aa:	00 23                	add    %ah,(%rbx)
 3ac:	2e 01 31             	cs add %esi,(%rcx)
 3af:	13 11                	adc    (%rcx),%edx
 3b1:	01 12                	add    %edx,(%rdx)
 3b3:	07                   	(bad)  
 3b4:	40 18 7a 19          	sbb    %dil,0x19(%rdx)
 3b8:	01 13                	add    %edx,(%rbx)
 3ba:	00 00                	add    %al,(%rax)
 3bc:	24 11                	and    $0x11,%al
 3be:	01 25 0e 13 0b 03    	add    %esp,0x30b130e(%rip)        # 30b16d2 <_end+0x30866c2>
 3c4:	1f                   	(bad)  
 3c5:	1b 1f                	sbb    (%rdi),%ebx
 3c7:	11 01                	adc    %eax,(%rcx)
 3c9:	12 07                	adc    (%rdi),%al
 3cb:	10 17                	adc    %dl,(%rdi)
 3cd:	00 00                	add    %al,(%rax)
 3cf:	25 24 00 0b 0b       	and    $0xb0b0024,%eax
 3d4:	3e 0b 03             	ds or  (%rbx),%eax
 3d7:	08 00                	or     %al,(%rax)
 3d9:	00 26                	add    %ah,(%rsi)
 3db:	0f 00 0b             	str    (%rbx)
 3de:	0b 00                	or     (%rax),%eax
 3e0:	00 27                	add    %ah,(%rdi)
 3e2:	04 01                	add    $0x1,%al
 3e4:	03 0e                	add    (%rsi),%ecx
 3e6:	3e 0b 0b             	ds or  (%rbx),%ecx
 3e9:	0b 49 13             	or     0x13(%rcx),%ecx
 3ec:	3a 0b                	cmp    (%rbx),%cl
 3ee:	3b 0b                	cmp    (%rbx),%ecx
 3f0:	39 0b                	cmp    %ecx,(%rbx)
 3f2:	01 13                	add    %edx,(%rbx)
 3f4:	00 00                	add    %al,(%rax)
 3f6:	28 26                	sub    %ah,(%rsi)
 3f8:	00 00                	add    %al,(%rax)
 3fa:	00 29                	add    %ch,(%rcx)
 3fc:	2e 01 03             	cs add %eax,(%rbx)
 3ff:	0e                   	(bad)  
 400:	3a 0b                	cmp    (%rbx),%cl
 402:	3b 0b                	cmp    (%rbx),%ecx
 404:	39 0b                	cmp    %ecx,(%rbx)
 406:	27                   	(bad)  
 407:	19 49 13             	sbb    %ecx,0x13(%rcx)
 40a:	11 01                	adc    %eax,(%rcx)
 40c:	12 07                	adc    (%rdi),%al
 40e:	40 18 7a 19          	sbb    %dil,0x19(%rdx)
 412:	01 13                	add    %edx,(%rbx)
 414:	00 00                	add    %al,(%rax)
 416:	2a 34 00             	sub    (%rax,%rax,1),%dh
 419:	03 0e                	add    (%rsi),%ecx
 41b:	3a 0b                	cmp    (%rbx),%cl
 41d:	3b 0b                	cmp    (%rbx),%ecx
 41f:	39 0b                	cmp    %ecx,(%rbx)
 421:	49 13 1c 0b          	adc    (%r11,%rcx,1),%rbx
 425:	00 00                	add    %al,(%rax)
 427:	2b 2e                	sub    (%rsi),%ebp
 429:	01 31                	add    %esi,(%rcx)
 42b:	13 11                	adc    (%rcx),%edx
 42d:	01 12                	add    %edx,(%rdx)
 42f:	07                   	(bad)  
 430:	40 18 7a 19          	sbb    %dil,0x19(%rdx)
 434:	00 00                	add    %al,(%rax)
	...

Disassembly of section .debug_line:

0000000000000000 <.debug_line>:
   0:	14 01                	adc    $0x1,%al
   2:	00 00                	add    %al,(%rax)
   4:	05 00 08 00 53       	add    $0x53000800,%eax
   9:	00 00                	add    %al,(%rax)
   b:	00 01                	add    %al,(%rcx)
   d:	01 01                	add    %eax,(%rcx)
   f:	fb                   	sti    
  10:	0e                   	(bad)  
  11:	0d 00 01 01 01       	or     $0x1010100,%eax
  16:	01 00                	add    %eax,(%rax)
  18:	00 00                	add    %al,(%rax)
  1a:	01 00                	add    %eax,(%rax)
  1c:	00 01                	add    %al,(%rcx)
  1e:	01 01                	add    %eax,(%rcx)
  20:	1f                   	(bad)  
  21:	05 07 00 00 00       	add    $0x7,%eax
  26:	23 00                	and    (%rax),%eax
  28:	00 00                	add    %al,(%rax)
  2a:	47 00 00             	rex.RXB add %r8b,(%r8)
  2d:	00 67 00             	add    %ah,0x0(%rdi)
  30:	00 00                	add    %al,(%rax)
  32:	6a 00                	push   $0x0
  34:	00 00                	add    %al,(%rax)
  36:	02 01                	add    (%rcx),%al
  38:	1f                   	(bad)  
  39:	02 0f                	add    (%rdi),%cl
  3b:	07                   	(bad)  
	...
  44:	00 00                	add    %al,(%rax)
  46:	84 00                	test   %al,(%rax)
  48:	00 00                	add    %al,(%rax)
  4a:	01 8d 00 00 00 01    	add    %ecx,0x1000000(%rbp)
  50:	96                   	xchg   %eax,%esi
  51:	00 00                	add    %al,(%rax)
  53:	00 02                	add    %al,(%rdx)
  55:	9f                   	lahf   
  56:	00 00                	add    %al,(%rax)
  58:	00 03                	add    %al,(%rbx)
  5a:	aa                   	stos   %al,%es:(%rdi)
  5b:	00 00                	add    %al,(%rax)
  5d:	00 04 05 41 00 09 02 	add    %al,0x2090041(,%rax,1)
  64:	63 20                	movsxd (%rax),%esp
  66:	00 00                	add    %al,(%rax)
  68:	00 00                	add    %al,(%rax)
  6a:	00 00                	add    %al,(%rax)
  6c:	03 0b                	add    (%rbx),%ecx
  6e:	01 06                	add    %eax,(%rsi)
  70:	01 05 05 06 4b 05    	add    %eax,0x54b0605(%rip)        # 54b067b <_end+0x548566b>
  76:	41 06                	rex.B (bad) 
  78:	11 05 09 21 05 41    	adc    %eax,0x41052109(%rip)        # 41052187 <_end+0x41027177>
  7e:	57                   	push   %rdi
  7f:	05 09 3d 05 08       	add    $0x8053d09,%eax
  84:	00 02                	add    %al,(%rdx)
  86:	04 01                	add    $0x1,%al
  88:	58                   	pop    %rax
  89:	05 09 06 4b 05       	add    $0x54b0609,%eax
  8e:	0d 06 01 05 0f       	or     $0xf050106,%eax
  93:	3d 05 0d 57 05       	cmp    $0x5570d05,%eax
  98:	09 06                	or     %eax,(%rsi)
  9a:	bb 05 0f 06 01       	mov    $0x1060f05,%ebx
  9f:	05 0c 00 02 04       	add    $0x402000c,%eax
  a4:	01 58 05             	add    %ebx,0x5(%rax)
  a7:	0d 06 4b 05 17       	or     $0x17054b06,%eax
  ac:	06                   	(bad)  
  ad:	13 05 40 00 02 04    	adc    0x4020040(%rip),%eax        # 40200f3 <_end+0x3ff50e3>
  b3:	01 08                	add    %ecx,(%rax)
  b5:	1e                   	(bad)  
  b6:	05 0d 00 02 04       	add    $0x402000d,%eax
  bb:	01 08                	add    %ecx,(%rax)
  bd:	12 05 01 50 20 05    	adc    0x5205001(%rip),%al        # 52050c4 <_end+0x51da0b4>
  c3:	2b 06                	sub    (%rsi),%eax
  c5:	22 06                	and    (%rsi),%al
  c7:	01 05 09 06 4b 05    	add    %eax,0x54b0609(%rip)        # 54b06d6 <_end+0x54856c6>
  cd:	19 06                	sbb    %eax,(%rsi)
  cf:	01 05 1a 9f 05 19    	add    %eax,0x19059f1a(%rip)        # 19059fef <_end+0x1902efdf>
  d5:	3b 05 09 06 2f 05    	cmp    0x52f0609(%rip),%eax        # 52f06e4 <_end+0x52c56d4>
  db:	16                   	(bad)  
  dc:	06                   	(bad)  
  dd:	01 05 01 91 05 1a    	add    %eax,0x1a059101(%rip)        # 1a0591e4 <_end+0x1a02e1d4>
  e3:	06                   	(bad)  
  e4:	22 05 05 4d 05 1a    	and    0x1a054d05(%rip),%al        # 1a054def <_end+0x1a029ddf>
  ea:	06                   	(bad)  
  eb:	0f 05                	syscall 
  ed:	05 23 06 08 75       	add    $0x75080623,%eax
  f2:	05 01 06 08 30       	add    $0x30080601,%eax
  f7:	05 05 1e 05 1f       	add    $0x1f051e05,%eax
  fc:	06                   	(bad)  
  fd:	5c                   	pop    %rsp
  fe:	06                   	(bad)  
  ff:	01 05 05 06 4b 05    	add    %eax,0x54b0605(%rip)        # 54b070a <_end+0x54856fa>
 105:	07                   	(bad)  
 106:	06                   	(bad)  
 107:	01 05 09 06 83 06    	add    %eax,0x6830609(%rip)        # 6830716 <_end+0x6805706>
 10d:	74 2e                	je     13d <__ImageBase+0x13d>
 10f:	06                   	(bad)  
 110:	14 06                	adc    $0x6,%al
 112:	74 02                	je     116 <__ImageBase+0x116>
 114:	07                   	(bad)  
 115:	00 01                	add    %al,(%rcx)
 117:	01 45 00             	add    %eax,0x0(%rbp)
 11a:	00 00                	add    %al,(%rax)
 11c:	05 00 08 00 2a       	add    $0x2a000800,%eax
 121:	00 00                	add    %al,(%rax)
 123:	00 01                	add    %al,(%rcx)
 125:	01 01                	add    %eax,(%rcx)
 127:	fb                   	sti    
 128:	0e                   	(bad)  
 129:	0d 00 01 01 01       	or     $0x1010100,%eax
 12e:	01 00                	add    %eax,(%rax)
 130:	00 00                	add    %al,(%rax)
 132:	01 00                	add    %eax,(%rax)
 134:	00 01                	add    %al,(%rcx)
 136:	01 01                	add    %eax,(%rcx)
 138:	1f                   	(bad)  
 139:	01 07                	add    %eax,(%rdi)
 13b:	00 00                	add    %al,(%rax)
 13d:	00 02                	add    %al,(%rdx)
 13f:	01 1f                	add    %ebx,(%rdi)
 141:	02 0f                	add    (%rdi),%cl
 143:	02 b5 00 00 00 00    	add    0x0(%rbp),%dh
 149:	b5 00                	mov    $0x0,%ch
 14b:	00 00                	add    %al,(%rax)
 14d:	00 00                	add    %al,(%rax)
 14f:	09 02                	or     %eax,(%rdx)
 151:	00 30                	add    %dh,(%rax)
 153:	00 00                	add    %al,(%rax)
 155:	00 00                	add    %al,(%rax)
 157:	00 00                	add    %al,(%rax)
 159:	16                   	(bad)  
 15a:	59                   	pop    %rcx
 15b:	02 81 20 00 01 01    	add    0x1010020(%rcx),%al
 161:	a0 03 00 00 05 00 08 	movabs 0x6800080005000003,%al
 168:	00 68 
 16a:	00 00                	add    %al,(%rax)
 16c:	00 01                	add    %al,(%rcx)
 16e:	01 01                	add    %eax,(%rcx)
 170:	fb                   	sti    
 171:	0e                   	(bad)  
 172:	0d 00 01 01 01       	or     $0x1010100,%eax
 177:	01 00                	add    %eax,(%rax)
 179:	00 00                	add    %al,(%rax)
 17b:	01 00                	add    %eax,(%rax)
 17d:	00 01                	add    %al,(%rcx)
 17f:	01 01                	add    %eax,(%rcx)
 181:	1f                   	(bad)  
 182:	04 07                	add    $0x7,%al
 184:	00 00                	add    %al,(%rax)
 186:	00 23                	add    %ah,(%rbx)
 188:	00 00                	add    %al,(%rax)
 18a:	00 47 00             	add    %al,0x0(%rdi)
 18d:	00 00                	add    %al,(%rax)
 18f:	6a 00                	push   $0x0
 191:	00 00                	add    %al,(%rax)
 193:	02 01                	add    (%rcx),%al
 195:	1f                   	(bad)  
 196:	02 0f                	add    (%rdi),%cl
 198:	0c bb                	or     $0xbb,%al
 19a:	00 00                	add    %al,(%rax)
 19c:	00 00                	add    %al,(%rax)
 19e:	bb 00 00 00 00       	mov    $0x0,%ebx
 1a3:	84 00                	test   %al,(%rax)
 1a5:	00 00                	add    %al,(%rax)
 1a7:	01 8d 00 00 00 01    	add    %ecx,0x1000000(%rbp)
 1ad:	c4                   	(bad)  
 1ae:	00 00                	add    %al,(%rax)
 1b0:	00 02                	add    %al,(%rdx)
 1b2:	cc                   	int3   
 1b3:	00 00                	add    %al,(%rax)
 1b5:	00 03                	add    %al,(%rbx)
 1b7:	d8 00                	fadds  (%rax)
 1b9:	00 00                	add    %al,(%rax)
 1bb:	00 96 00 00 00 02    	add    %dl,0x2000000(%rsi)
 1c1:	e1 00                	loope  1c3 <__ImageBase+0x1c3>
 1c3:	00 00                	add    %al,(%rax)
 1c5:	03 ef                	add    %edi,%ebp
 1c7:	00 00                	add    %al,(%rax)
 1c9:	00 02                	add    %al,(%rdx)
 1cb:	aa                   	stos   %al,%es:(%rdi)
 1cc:	00 00                	add    %al,(%rax)
 1ce:	00 03                	add    %al,(%rbx)
 1d0:	fc                   	cld    
 1d1:	00 00                	add    %al,(%rax)
 1d3:	00 03                	add    %al,(%rbx)
 1d5:	05 01 00 09 02       	add    $0x2090001,%eax
 1da:	06                   	(bad)  
 1db:	40 00 00             	rex add %al,(%rax)
 1de:	00 00                	add    %al,(%rax)
 1e0:	00 00                	add    %al,(%rax)
 1e2:	03 df                	add    %edi,%ebx
 1e4:	00 01                	add    %al,(%rcx)
 1e6:	06                   	(bad)  
 1e7:	01 05 02 06 4b 13    	add    %eax,0x134b0602(%rip)        # 134b07ef <_end+0x134857df>
 1ed:	05 05 06 01 05       	add    $0x5010605,%eax
 1f2:	02 06                	add    (%rsi),%al
 1f4:	59                   	pop    %rcx
 1f5:	05 01 06 0f 05       	add    $0x50f0601,%eax
 1fa:	02 23                	add    (%rbx),%ah
 1fc:	06                   	(bad)  
 1fd:	59                   	pop    %rcx
 1fe:	05 09 06 01 05       	add    $0x5010609,%eax
 203:	01 2f                	add    %ebp,(%rdi)
 205:	2e 06                	cs (bad) 
 207:	69 06 01 05 02 06    	imul   $0x6020501,(%rsi),%eax
 20d:	4b 01 05 01 06 57 05 	rex.WXB add %rax,0x5570601(%rip)        # 5570815 <_end+0x5545805>
 214:	02 00                	add    (%rax),%al
 216:	02 04 02             	add    (%rdx,%rax,1),%al
 219:	21 05 01 81 05 02    	and    %eax,0x2058101(%rip)        # 2058320 <_end+0x202d310>
 21f:	00 02                	add    %al,(%rdx)
 221:	04 02                	add    $0x2,%al
 223:	4b 00 02             	rex.WXB add %al,(%r10)
 226:	04 01                	add    $0x1,%al
 228:	58                   	pop    %rax
 229:	00 02                	add    %al,(%rdx)
 22b:	04 03                	add    $0x3,%al
 22d:	4a 05 1f 06 72 05    	rex.WX add $0x572061f,%rax
 233:	02 00                	add    (%rax),%al
 235:	02 04 04             	add    (%rsp,%rax,1),%al
 238:	14 16                	adc    $0x16,%al
 23a:	3d 13 13 05 06       	cmp    $0x6051313,%eax
 23f:	06                   	(bad)  
 240:	01 05 0a 08 83 05    	add    %eax,0x583080a(%rip)        # 5830a50 <_end+0x5805a40>
 246:	05 00 02 04 01       	add    $0x1040200,%eax
 24b:	57                   	push   %rdi
 24c:	05 02 06 4d 15       	add    $0x154d0602,%eax
 251:	93                   	xchg   %eax,%ebx
 252:	05 09 06 01 2e       	add    $0x2e010609,%eax
 257:	05 01 13 58 05       	add    $0x5581301,%eax
 25c:	02 00                	add    (%rax),%al
 25e:	02 04 03             	add    (%rbx,%rax,1),%al
 261:	03 6f 20             	add    0x20(%rdi),%ebp
 264:	05 01 03 11 58       	add    $0x58110301,%eax
 269:	06                   	(bad)  
 26a:	03 51 20             	add    0x20(%rcx),%edx
 26d:	06                   	(bad)  
 26e:	01 05 02 06 4b 01    	add    %eax,0x14b0602(%rip)        # 14b0876 <_end+0x1485866>
 274:	05 01 06 57 05       	add    $0x5570601,%eax
 279:	02 00                	add    (%rax),%al
 27b:	02 04 02             	add    (%rdx,%rax,1),%al
 27e:	21 05 01 81 05 02    	and    %eax,0x2058101(%rip)        # 2058385 <_end+0x202d375>
 284:	00 02                	add    %al,(%rdx)
 286:	04 02                	add    $0x2,%al
 288:	4b 00 02             	rex.WXB add %al,(%r10)
 28b:	04 01                	add    $0x1,%al
 28d:	58                   	pop    %rax
 28e:	00 02                	add    %al,(%rdx)
 290:	04 03                	add    $0x3,%al
 292:	4a 05 1f 06 72 05    	rex.WX add $0x572061f,%rax
 298:	02 00                	add    (%rax),%al
 29a:	02 04 04             	add    (%rsp,%rax,1),%al
 29d:	14 16                	adc    $0x16,%al
 29f:	3d 13 13 05 06       	cmp    $0x6051313,%eax
 2a4:	06                   	(bad)  
 2a5:	01 05 0a 08 83 05    	add    %eax,0x583080a(%rip)        # 5830ab5 <_end+0x5805aa5>
 2ab:	05 00 02 04 01       	add    $0x1040200,%eax
 2b0:	57                   	push   %rdi
 2b1:	05 02 06 4d 15       	add    $0x154d0602,%eax
 2b6:	cb                   	lret   
 2b7:	05 09 06 01 2e       	add    $0x2e010609,%eax
 2bc:	05 01 13 58 05       	add    $0x5581301,%eax
 2c1:	02 00                	add    (%rax),%al
 2c3:	02 04 03             	add    (%rbx,%rax,1),%al
 2c6:	03 6f 20             	add    0x20(%rdi),%ebp
 2c9:	05 01 03 11 58       	add    $0x58110301,%eax
 2ce:	06                   	(bad)  
 2cf:	03 58 20             	add    0x20(%rax),%ebx
 2d2:	06                   	(bad)  
 2d3:	01 05 02 06 4b 01    	add    %eax,0x14b0602(%rip)        # 14b08db <_end+0x14858cb>
 2d9:	05 01 06 57 05       	add    $0x5570601,%eax
 2de:	02 00                	add    (%rax),%al
 2e0:	02 04 02             	add    (%rdx,%rax,1),%al
 2e3:	21 05 01 81 05 02    	and    %eax,0x2058101(%rip)        # 20583ea <_end+0x202d3da>
 2e9:	00 02                	add    %al,(%rdx)
 2eb:	04 02                	add    $0x2,%al
 2ed:	4b 00 02             	rex.WXB add %al,(%r10)
 2f0:	04 01                	add    $0x1,%al
 2f2:	58                   	pop    %rax
 2f3:	00 02                	add    %al,(%rdx)
 2f5:	04 03                	add    $0x3,%al
 2f7:	4a 05 1f 06 72 05    	rex.WX add $0x572061f,%rax
 2fd:	02 00                	add    (%rax),%al
 2ff:	02 04 04             	add    (%rsp,%rax,1),%al
 302:	14 16                	adc    $0x16,%al
 304:	3d 13 13 05 06       	cmp    $0x6051313,%eax
 309:	06                   	(bad)  
 30a:	01 05 0a 08 83 05    	add    %eax,0x583080a(%rip)        # 5830b1a <_end+0x5805b0a>
 310:	05 00 02 04 01       	add    $0x1040200,%eax
 315:	57                   	push   %rdi
 316:	05 02 06 4d 13       	add    $0x134d0602,%eax
 31b:	15 a1 05 09 06       	adc    $0x60905a1,%eax
 320:	01 2e                	add    %ebp,(%rsi)
 322:	05 01 13 58 05       	add    $0x5581301,%eax
 327:	02 00                	add    (%rax),%al
 329:	02 04 03             	add    (%rbx,%rax,1),%al
 32c:	03 6e 20             	add    0x20(%rsi),%ebp
 32f:	05 01 03 12 58       	add    $0x58120301,%eax
 334:	06                   	(bad)  
 335:	03 ce                	add    %esi,%ecx
 337:	00 20                	add    %ah,(%rax)
 339:	06                   	(bad)  
 33a:	01 05 02 06 4b 13    	add    %eax,0x134b0602(%rip)        # 134b0942 <_end+0x13485932>
 340:	05 01 06 10 05       	add    $0x5100601,%eax
 345:	2a e6                	sub    %dh,%ah
 347:	05 1a 00 02 04       	add    $0x402001a,%eax
 34c:	01 58 05             	add    %ebx,0x5(%rax)
 34f:	2a 00                	sub    (%rax),%al
 351:	02 04 01             	add    (%rcx,%rax,1),%al
 354:	58                   	pop    %rax
 355:	05 02 06 4c 13       	add    $0x134c0602,%eax
 35a:	13 05 08 06 01 05    	adc    0x5010608(%rip),%eax        # 5010968 <_end+0x4fe5958>
 360:	02 06                	add    (%rsi),%al
 362:	77 01                	ja     365 <__ImageBase+0x365>
 364:	00 02                	add    %al,(%rdx)
 366:	04 01                	add    $0x1,%al
 368:	06                   	(bad)  
 369:	58                   	pop    %rax
 36a:	05 06 00 02 04       	add    $0x4020006,%eax
 36f:	01 68 05             	add    %ebp,0x5(%rax)
 372:	02 00                	add    (%rax),%al
 374:	02 04 01             	add    (%rcx,%rax,1),%al
 377:	3a 00                	cmp    (%rax),%al
 379:	02 04 03             	add    (%rbx,%rax,1),%al
 37c:	90                   	nop
 37d:	05 06 00 02 04       	add    $0x4020006,%eax
 382:	02 a0 00 02 04 04    	add    0x4040200(%rax),%ah
 388:	3c 05                	cmp    $0x5,%al
 38a:	05 00 02 04 08       	add    $0x8040200,%eax
 38f:	4a 05 02 06 a1 05    	rex.WX add $0x5a10602,%rax
 395:	0a 06                	or     (%rsi),%al
 397:	01 58 05             	add    %ebx,0x5(%rax)
 39a:	02 06                	add    (%rsi),%al
 39c:	3d 05 05 06 01       	cmp    $0x1060505,%eax
 3a1:	05 08 00 02 04       	add    $0x4020008,%eax
 3a6:	01 57 05             	add    %edx,0x5(%rdi)
 3a9:	03 06                	add    (%rsi),%eax
 3ab:	76 59                	jbe    406 <__ImageBase+0x406>
 3ad:	05 0a 06 01 05       	add    $0x501060a,%eax
 3b2:	02 06                	add    (%rsi),%al
 3b4:	76 13                	jbe    3c9 <__ImageBase+0x3c9>
 3b6:	05 21 06 01 4a       	add    $0x4a010621,%eax
 3bb:	05 02 06 59 14       	add    $0x14590602,%eax
 3c0:	05 05 06 01 05       	add    $0x5010605,%eax
 3c5:	03 06                	add    (%rsi),%eax
 3c7:	59                   	pop    %rcx
 3c8:	05 07 06 01 05       	add    $0x5010607,%eax
 3cd:	06                   	(bad)  
 3ce:	00 02                	add    %al,(%rdx)
 3d0:	04 01                	add    $0x1,%al
 3d2:	08 66 05             	or     %ah,0x5(%rsi)
 3d5:	03 06                	add    (%rsi),%eax
 3d7:	4e 16                	rex.WRX (bad) 
 3d9:	05 07 06 01 05       	add    $0x5010607,%eax
 3de:	06                   	(bad)  
 3df:	00 02                	add    %al,(%rdx)
 3e1:	04 01                	add    $0x1,%al
 3e3:	08 2e                	or     %ch,(%rsi)
 3e5:	05 03 06 4e 05       	add    $0x54e0603,%eax
 3ea:	22 06                	and    (%rsi),%al
 3ec:	01 05 03 06 59 06    	add    %eax,0x6590603(%rip)        # 65909f5 <_end+0x65659e5>
 3f2:	01 06                	add    %eax,(%rsi)
 3f4:	30 05 0e 06 01 05    	xor    %al,0x501060e(%rip)        # 5010a08 <_end+0x4fe59f8>
 3fa:	02 06                	add    (%rsi),%al
 3fc:	69 05 0b 06 01 05 02 	imul   $0x13d80602,0x501060b(%rip),%eax        # 5010a11 <_end+0x4fe5a01>
 403:	06 d8 13 
 406:	13 06                	adc    (%rsi),%eax
 408:	58                   	pop    %rax
 409:	06                   	(bad)  
 40a:	4b 05 01 06 13 58    	rex.WXB add $0x58130601,%rax
 410:	06                   	(bad)  
 411:	69 06 01 05 02 06    	imul   $0x6020501,(%rsi),%eax
 417:	4b 13 05 01 06 10 f2 	rex.WXB adc -0xdeff9ff(%rip),%rax        # fffffffff2100a1f <_end+0xfffffffff20d5a0f>
 41e:	05 2a 5a 05 1a       	add    $0x1a055a2a,%eax
 423:	00 02                	add    %al,(%rdx)
 425:	04 01                	add    $0x1,%al
 427:	58                   	pop    %rax
 428:	05 2a 00 02 04       	add    $0x402002a,%eax
 42d:	01 58 05             	add    %ebx,0x5(%rax)
 430:	02 06                	add    (%rsi),%al
 432:	4c 13 13             	adc    (%rbx),%r10
 435:	05 08 06 01 05       	add    $0x5010608,%eax
 43a:	02 06                	add    (%rsi),%al
 43c:	77 01                	ja     43f <__ImageBase+0x43f>
 43e:	00 02                	add    %al,(%rdx)
 440:	04 01                	add    $0x1,%al
 442:	06                   	(bad)  
 443:	58                   	pop    %rax
 444:	05 06 00 02 04       	add    $0x4020006,%eax
 449:	01 68 05             	add    %ebp,0x5(%rax)
 44c:	02 00                	add    (%rax),%al
 44e:	02 04 01             	add    (%rcx,%rax,1),%al
 451:	3a 00                	cmp    (%rax),%al
 453:	02 04 03             	add    (%rbx,%rax,1),%al
 456:	90                   	nop
 457:	05 06 00 02 04       	add    $0x4020006,%eax
 45c:	02 a0 00 02 04 04    	add    0x4040200(%rax),%ah
 462:	3c 05                	cmp    $0x5,%al
 464:	05 00 02 04 08       	add    $0x8040200,%eax
 469:	4a 05 02 06 a1 05    	rex.WX add $0x5a10602,%rax
 46f:	0a 06                	or     (%rsi),%al
 471:	01 58 05             	add    %ebx,0x5(%rax)
 474:	02 06                	add    (%rsi),%al
 476:	3d 05 05 06 01       	cmp    $0x1060505,%eax
 47b:	05 08 00 02 04       	add    $0x4020008,%eax
 480:	01 57 05             	add    %edx,0x5(%rdi)
 483:	03 06                	add    (%rsi),%eax
 485:	76 59                	jbe    4e0 <__ImageBase+0x4e0>
 487:	05 0a 06 01 05       	add    $0x501060a,%eax
 48c:	02 06                	add    (%rsi),%al
 48e:	a0 13 05 21 06 01 4a 	movabs 0x2054a0106210513,%al
 495:	05 02 
 497:	06                   	(bad)  
 498:	59                   	pop    %rcx
 499:	14 05                	adc    $0x5,%al
 49b:	05 06 01 05 03       	add    $0x3050106,%eax
 4a0:	06                   	(bad)  
 4a1:	59                   	pop    %rcx
 4a2:	05 07 06 01 05       	add    $0x5010607,%eax
 4a7:	06                   	(bad)  
 4a8:	00 02                	add    %al,(%rdx)
 4aa:	04 01                	add    $0x1,%al
 4ac:	08 66 05             	or     %ah,0x5(%rsi)
 4af:	03 06                	add    (%rsi),%eax
 4b1:	4e 16                	rex.WRX (bad) 
 4b3:	05 07 06 01 05       	add    $0x5010607,%eax
 4b8:	06                   	(bad)  
 4b9:	00 02                	add    %al,(%rdx)
 4bb:	04 01                	add    $0x1,%al
 4bd:	08 2e                	or     %ch,(%rsi)
 4bf:	05 03 06 4e 05       	add    $0x54e0603,%eax
 4c4:	22 06                	and    (%rsi),%al
 4c6:	01 05 03 06 59 06    	add    %eax,0x6590603(%rip)        # 6590acf <_end+0x6565abf>
 4cc:	01 06                	add    %eax,(%rsi)
 4ce:	30 05 0e 06 01 05    	xor    %al,0x501060e(%rip)        # 5010ae2 <_end+0x4fe5ad2>
 4d4:	02 06                	add    (%rsi),%al
 4d6:	69 05 06 06 01 05 14 	imul   $0x6055814,0x5010606(%rip),%eax        # 5010ae6 <_end+0x4fe5ad6>
 4dd:	58 05 06 
 4e0:	4a 05 05 00 02 04    	rex.WX add $0x4020005,%rax
 4e6:	01 e4                	add    %esp,%esp
 4e8:	05 02 06 4f 05       	add    $0x54f0602,%eax
 4ed:	0b 06                	or     (%rsi),%eax
 4ef:	01 05 02 06 08 14    	add    %eax,0x14080602(%rip)        # 14080af7 <_end+0x14055ae7>
 4f5:	13 13                	adc    (%rbx),%edx
 4f7:	06                   	(bad)  
 4f8:	58                   	pop    %rax
 4f9:	06                   	(bad)  
 4fa:	4b 05 01 06 13 58    	rex.WXB add $0x58130601,%rax
 500:	02 06                	add    (%rsi),%al
 502:	00 01                	add    %al,(%rcx)
 504:	01                   	.byte 0x1

Disassembly of section .debug_str:

0000000000000000 <.debug_str>:
   0:	6f                   	outsl  %ds:(%rsi),(%dx)
   1:	63 61 6c             	movsxd 0x6c(%rcx),%esp
   4:	6c                   	insb   (%dx),%es:(%rdi)
   5:	5f                   	pop    %rdi
   6:	70 72                	jo     7a <__ImageBase+0x7a>
   8:	69 6e 74 5f 61 64 64 	imul   $0x6464615f,0x74(%rsi),%ebp
   f:	72 65                	jb     76 <__ImageBase+0x76>
  11:	73 73                	jae    86 <__ImageBase+0x86>
  13:	00 6d 79             	add    %ch,0x79(%rbp)
  16:	5f                   	pop    %rdi
  17:	73 74                	jae    8d <__ImageBase+0x8d>
  19:	72 75                	jb     90 <__ImageBase+0x90>
  1b:	63 74 00 66          	movsxd 0x66(%rax,%rax,1),%esi
  1f:	6c                   	insb   (%dx),%es:(%rdi)
  20:	6f                   	outsl  %ds:(%rsi),(%dx)
  21:	61                   	(bad)  
  22:	74 00                	je     24 <__ImageBase+0x24>
  24:	47                   	rex.RXB
  25:	4e 55                	rex.WRX push %rbp
  27:	20 43 31             	and    %al,0x31(%rbx)
  2a:	37                   	(bad)  
  2b:	20 31                	and    %dh,(%rcx)
  2d:	33 2e                	xor    (%rsi),%ebp
  2f:	33 2e                	xor    (%rsi),%ebp
  31:	30 20                	xor    %ah,(%rax)
  33:	2d 6d 74 75 6e       	sub    $0x6e75746d,%eax
  38:	65 3d 67 65 6e 65    	gs cmp $0x656e6567,%eax
  3e:	72 69                	jb     a9 <__ImageBase+0xa9>
  40:	63 20                	movsxd (%rax),%esp
  42:	2d 6d 61 72 63       	sub    $0x6372616d,%eax
  47:	68 3d 78 38 36       	push   $0x3638783d
  4c:	2d 36 34 20 2d       	sub    $0x2d203436,%eax
  51:	67 20 2d 4f 73 20 2d 	and    %ch,0x2d20734f(%eip)        # 2d2073a7 <_end+0x2d1dc397>
  58:	66 76 69             	data16 jbe c4 <__ImageBase+0xc4>
  5b:	73 69                	jae    c6 <__ImageBase+0xc6>
  5d:	62                   	(bad)  
  5e:	69 6c 69 74 79 3d 68 	imul   $0x69683d79,0x74(%rcx,%rbp,2),%ebp
  65:	69 
  66:	64 64 65 6e          	fs fs outsb %gs:(%rsi),(%dx)
  6a:	20 2d 66 70 69 65    	and    %ch,0x65697066(%rip)        # 656970d6 <_end+0x6566c0c6>
  70:	20 2d 66 73 74 61    	and    %ch,0x61747366(%rip)        # 617473dc <_end+0x6171c3cc>
  76:	63 6b 2d             	movsxd 0x2d(%rbx),%ebp
  79:	70 72                	jo     ed <__ImageBase+0xed>
  7b:	6f                   	outsl  %ds:(%rsi),(%dx)
  7c:	74 65                	je     e3 <__ImageBase+0xe3>
  7e:	63 74 6f 72          	movsxd 0x72(%rdi,%rbp,2),%esi
  82:	20 2d 66 61 73 79    	and    %ch,0x79736166(%rip)        # 797361ee <_end+0x7970b1de>
  88:	6e                   	outsb  %ds:(%rsi),(%dx)
  89:	63 68 72             	movsxd 0x72(%rax),%ebp
  8c:	6f                   	outsl  %ds:(%rsi),(%dx)
  8d:	6e                   	outsb  %ds:(%rsi),(%dx)
  8e:	6f                   	outsl  %ds:(%rsi),(%dx)
  8f:	75 73                	jne    104 <__ImageBase+0x104>
  91:	2d 75 6e 77 69       	sub    $0x69776e75,%eax
  96:	6e                   	outsb  %ds:(%rsi),(%dx)
  97:	64 2d 74 61 62 6c    	fs sub $0x6c626174,%eax
  9d:	65 73 20             	gs jae c0 <__ImageBase+0xc0>
  a0:	2d 66 73 74 61       	sub    $0x61747366,%eax
  a5:	63 6b 2d             	movsxd 0x2d(%rbx),%ebp
  a8:	63 6c 61 73          	movsxd 0x73(%rcx,%riz,2),%ebp
  ac:	68 2d 70 72 6f       	push   $0x6f72702d
  b1:	74 65                	je     118 <__ImageBase+0x118>
  b3:	63 74 69 6f          	movsxd 0x6f(%rcx,%rbp,2),%esi
  b7:	6e                   	outsb  %ds:(%rsi),(%dx)
  b8:	20 2d 66 63 66 2d    	and    %ch,0x2d666366(%rip)        # 2d666424 <_end+0x2d63b414>
  be:	70 72                	jo     132 <__ImageBase+0x132>
  c0:	6f                   	outsl  %ds:(%rsi),(%dx)
  c1:	74 65                	je     128 <__ImageBase+0x128>
  c3:	63 74 69 6f          	movsxd 0x6f(%rcx,%rbp,2),%esi
  c7:	6e                   	outsb  %ds:(%rsi),(%dx)
  c8:	00 75 6e             	add    %dh,0x6e(%rbp)
  cb:	73 69                	jae    136 <__ImageBase+0x136>
  cd:	67 6e                	outsb  %ds:(%esi),(%dx)
  cf:	65 64 20 63 68       	gs and %ah,%fs:0x68(%rbx)
  d4:	61                   	(bad)  
  d5:	72 00                	jb     d7 <__ImageBase+0xd7>
  d7:	6c                   	insb   (%dx),%es:(%rdi)
  d8:	6f                   	outsl  %ds:(%rsi),(%dx)
  d9:	6e                   	outsb  %ds:(%rsi),(%dx)
  da:	67 20 75 6e          	and    %dh,0x6e(%ebp)
  de:	73 69                	jae    149 <__ImageBase+0x149>
  e0:	67 6e                	outsb  %ds:(%esi),(%dx)
  e2:	65 64 20 69 6e       	gs and %ch,%fs:0x6e(%rcx)
  e7:	74 00                	je     e9 <__ImageBase+0xe9>
  e9:	73 68                	jae    153 <__ImageBase+0x153>
  eb:	6f                   	outsl  %ds:(%rsi),(%dx)
  ec:	72 74                	jb     162 <__ImageBase+0x162>
  ee:	20 75 6e             	and    %dh,0x6e(%rbp)
  f1:	73 69                	jae    15c <__ImageBase+0x15c>
  f3:	67 6e                	outsb  %ds:(%esi),(%dx)
  f5:	65 64 20 69 6e       	gs and %ch,%fs:0x6e(%rcx)
  fa:	74 00                	je     fc <__ImageBase+0xfc>
  fc:	64 6f                	outsl  %fs:(%rsi),(%dx)
  fe:	75 62                	jne    162 <__ImageBase+0x162>
 100:	6c                   	insb   (%dx),%es:(%rdi)
 101:	65 00 70 72          	add    %dh,%gs:0x72(%rax)
 105:	6f                   	outsl  %ds:(%rsi),(%dx)
 106:	64 70 00             	fs jo  109 <__ImageBase+0x109>
 109:	73 75                	jae    180 <__ImageBase+0x180>
 10b:	6d                   	insl   (%dx),%es:(%rdi)
 10c:	70 00                	jo     10e <__ImageBase+0x10e>
 10e:	6c                   	insb   (%dx),%es:(%rdi)
 10f:	6f                   	outsl  %ds:(%rsi),(%dx)
 110:	6e                   	outsb  %ds:(%rsi),(%dx)
 111:	67 20 6c 6f 6e       	and    %ch,0x6e(%edi,%ebp,2)
 116:	67 20 69 6e          	and    %ch,0x6e(%ecx)
 11a:	74 00                	je     11c <__ImageBase+0x11c>
 11c:	73 68                	jae    186 <__ImageBase+0x186>
 11e:	6f                   	outsl  %ds:(%rsi),(%dx)
 11f:	72 74                	jb     195 <__ImageBase+0x195>
 121:	20 69 6e             	and    %ch,0x6e(%rcx)
 124:	74 00                	je     126 <__ImageBase+0x126>
 126:	5f                   	pop    %rdi
 127:	5f                   	pop    %rdi
 128:	75 69                	jne    193 <__ImageBase+0x193>
 12a:	6e                   	outsb  %ds:(%rsi),(%dx)
 12b:	74 36                	je     163 <__ImageBase+0x163>
 12d:	34 5f                	xor    $0x5f,%al
 12f:	74 00                	je     131 <__ImageBase+0x131>
 131:	5f                   	pop    %rdi
 132:	5f                   	pop    %rdi
 133:	73 69                	jae    19e <__ImageBase+0x19e>
 135:	7a 65                	jp     19c <__ImageBase+0x19c>
 137:	5f                   	pop    %rdi
 138:	74 00                	je     13a <__ImageBase+0x13a>
 13a:	6f                   	outsl  %ds:(%rsi),(%dx)
 13b:	63 61 6c             	movsxd 0x6c(%rcx),%esp
 13e:	6c                   	insb   (%dx),%es:(%rdi)
 13f:	5f                   	pop    %rdi
 140:	70 72                	jo     1b4 <__ImageBase+0x1b4>
 142:	69 6e 74 00 73 67 78 	imul   $0x78677300,0x74(%rsi),%ebp
 149:	5f                   	pop    %rdi
 14a:	69 73 5f 6f 75 74 73 	imul   $0x7374756f,0x5f(%rbx),%esi
 151:	69 64 65 5f 65 6e 63 	imul   $0x6c636e65,0x5f(%rbp,%riz,2),%esp
 158:	6c 
 159:	61                   	(bad)  
 15a:	76 65                	jbe    1c1 <__ImageBase+0x1c1>
 15c:	00 61 73             	add    %ah,0x73(%rcx)
 15f:	6d                   	insl   (%dx),%es:(%rdi)
 160:	2e 53                	cs push %rbx
 162:	00 2f                	add    %ch,(%rdi)
 164:	68 6f 6d 65 2f       	push   $0x2f656d6f
 169:	6a 61                	push   $0x61
 16b:	6e                   	outsb  %ds:(%rsi),(%dx)
 16c:	2f                   	(bad)  
 16d:	70 6f                	jo     1de <__ImageBase+0x1de>
 16f:	69 6e 74 65 72 73 73 	imul   $0x73737265,0x74(%rsi),%ebp
 176:	2f                   	(bad)  
 177:	45 6e                	rex.RB outsb %ds:(%rsi),(%dx)
 179:	63 6c 61 76          	movsxd 0x76(%rcx,%riz,2),%ebp
 17d:	65 00 47 4e          	add    %al,%gs:0x4e(%rdi)
 181:	55                   	push   %rbp
 182:	20 41 53             	and    %al,0x53(%rcx)
 185:	20 32                	and    %dh,(%rdx)
 187:	2e 33 36             	cs xor (%rsi),%esi
 18a:	2e 31 00             	cs xor %eax,(%rax)
 18d:	53                   	push   %rbx
 18e:	47 58                	rex.RXB pop %r8
 190:	5f                   	pop    %rdi
 191:	45 52                	rex.RB push %r10
 193:	52                   	push   %rdx
 194:	4f 52                	rex.WRXB push %r10
 196:	5f                   	pop    %rdi
 197:	55                   	push   %rbp
 198:	4e                   	rex.WRX
 199:	45 58                	rex.RB pop %r8
 19b:	50                   	push   %rax
 19c:	45                   	rex.RB
 19d:	43 54                	rex.XB push %r12
 19f:	45                   	rex.RB
 1a0:	44 00 53 47          	add    %r10b,0x47(%rbx)
 1a4:	58                   	pop    %rax
 1a5:	5f                   	pop    %rdi
 1a6:	45 52                	rex.RB push %r10
 1a8:	52                   	push   %rdx
 1a9:	4f 52                	rex.WRXB push %r10
 1ab:	5f                   	pop    %rdi
 1ac:	4d                   	rex.WRB
 1ad:	4f                   	rex.WRXB
 1ae:	44                   	rex.R
 1af:	45 5f                	rex.RB pop %r15
 1b1:	49                   	rex.WB
 1b2:	4e                   	rex.WRX
 1b3:	43                   	rex.XB
 1b4:	4f                   	rex.WRXB
 1b5:	4d 50                	rex.WRB push %r8
 1b7:	41 54                	push   %r12
 1b9:	49                   	rex.WB
 1ba:	42                   	rex.X
 1bb:	4c                   	rex.WR
 1bc:	45 00 53 47          	add    %r10b,0x47(%r11)
 1c0:	58                   	pop    %rax
 1c1:	5f                   	pop    %rdi
 1c2:	50                   	push   %rax
 1c3:	54                   	push   %rsp
 1c4:	48 52                	rex.W push %rdx
 1c6:	45                   	rex.RB
 1c7:	41                   	rex.B
 1c8:	44 5f                	rex.R pop %rdi
 1ca:	45 58                	rex.RB pop %r8
 1cc:	49 54                	rex.WB push %r12
 1ce:	00 6f 63             	add    %ch,0x63(%rdi)
 1d1:	61                   	(bad)  
 1d2:	6c                   	insb   (%dx),%es:(%rdi)
 1d3:	6c                   	insb   (%dx),%es:(%rdi)
 1d4:	6f                   	outsl  %ds:(%rsi),(%dx)
 1d5:	63 5f 73             	movsxd 0x73(%rdi),%ebx
 1d8:	69 7a 65 00 5f 5f 75 	imul   $0x755f5f00,0x65(%rdx),%edi
 1df:	69 6e 74 38 5f 74 00 	imul   $0x745f38,0x74(%rsi),%ebp
 1e6:	53                   	push   %rbx
 1e7:	47 58                	rex.RXB pop %r8
 1e9:	5f                   	pop    %rdi
 1ea:	45 52                	rex.RB push %r10
 1ec:	52                   	push   %rdx
 1ed:	4f 52                	rex.WRXB push %r10
 1ef:	5f                   	pop    %rdi
 1f0:	4d                   	rex.WRB
 1f1:	43 5f                	rex.XB pop %r15
 1f3:	4e                   	rex.WRX
 1f4:	4f 54                	rex.WRXB push %r12
 1f6:	5f                   	pop    %rdi
 1f7:	46                   	rex.RX
 1f8:	4f 55                	rex.WRXB push %r13
 1fa:	4e                   	rex.WRX
 1fb:	44 00 6d 73          	add    %r13b,0x73(%rbp)
 1ff:	5f                   	pop    %rdi
 200:	73 74                	jae    276 <__ImageBase+0x276>
 202:	72 00                	jb     204 <__ImageBase+0x204>
 204:	53                   	push   %rbx
 205:	47 58                	rex.RXB pop %r8
 207:	5f                   	pop    %rdi
 208:	45 52                	rex.RB push %r10
 20a:	52                   	push   %rdx
 20b:	4f 52                	rex.WRXB push %r10
 20d:	5f                   	pop    %rdi
 20e:	49                   	rex.WB
 20f:	4e 56                	rex.WRX push %rsi
 211:	41                   	rex.B
 212:	4c                   	rex.WR
 213:	49                   	rex.WB
 214:	44 5f                	rex.R pop %rdi
 216:	45                   	rex.RB
 217:	4e                   	rex.WRX
 218:	43                   	rex.XB
 219:	4c                   	rex.WR
 21a:	41 56                	push   %r14
 21c:	45 5f                	rex.RB pop %r15
 21e:	49                   	rex.WB
 21f:	44 00 53 47          	add    %r10b,0x47(%rbx)
 223:	58                   	pop    %rax
 224:	5f                   	pop    %rdi
 225:	45 52                	rex.RB push %r10
 227:	52                   	push   %rdx
 228:	4f 52                	rex.WRXB push %r10
 22a:	5f                   	pop    %rdi
 22b:	49                   	rex.WB
 22c:	4e 56                	rex.WRX push %rsi
 22e:	41                   	rex.B
 22f:	4c                   	rex.WR
 230:	49                   	rex.WB
 231:	44 5f                	rex.R pop %rdi
 233:	53                   	push   %rbx
 234:	49                   	rex.WB
 235:	47                   	rex.RXB
 236:	4e                   	rex.WRX
 237:	41 54                	push   %r12
 239:	55                   	push   %rbp
 23a:	52                   	push   %rdx
 23b:	45 00 73 67          	add    %r14b,0x67(%r11)
 23f:	78 5f                	js     2a0 <__ImageBase+0x2a0>
 241:	6f                   	outsl  %ds:(%rsi),(%dx)
 242:	63 61 6c             	movsxd 0x6c(%rcx),%esp
 245:	6c                   	insb   (%dx),%es:(%rdi)
 246:	00 53 47             	add    %dl,0x47(%rbx)
 249:	58                   	pop    %rax
 24a:	5f                   	pop    %rdi
 24b:	45 52                	rex.RB push %r10
 24d:	52                   	push   %rdx
 24e:	4f 52                	rex.WRXB push %r10
 250:	5f                   	pop    %rdi
 251:	55                   	push   %rbp
 252:	4e 53                	rex.WRX push %rbx
 254:	55                   	push   %rbp
 255:	50                   	push   %rax
 256:	50                   	push   %rax
 257:	4f 52                	rex.WRXB push %r10
 259:	54                   	push   %rsp
 25a:	45                   	rex.RB
 25b:	44 5f                	rex.R pop %rdi
 25d:	43                   	rex.XB
 25e:	4f                   	rex.WRXB
 25f:	4e                   	rex.WRX
 260:	46                   	rex.RX
 261:	49                   	rex.WB
 262:	47 00 53 47          	rex.RXB add %r10b,0x47(%r11)
 266:	58                   	pop    %rax
 267:	5f                   	pop    %rdi
 268:	45 52                	rex.RB push %r10
 26a:	52                   	push   %rdx
 26b:	4f 52                	rex.WRXB push %r10
 26d:	5f                   	pop    %rdi
 26e:	45                   	rex.RB
 26f:	4e                   	rex.WRX
 270:	43                   	rex.XB
 271:	4c                   	rex.WR
 272:	41 56                	push   %r14
 274:	45 5f                	rex.RB pop %r15
 276:	46                   	rex.RX
 277:	49                   	rex.WB
 278:	4c                   	rex.WR
 279:	45 5f                	rex.RB pop %r15
 27b:	41                   	rex.B
 27c:	43                   	rex.XB
 27d:	43                   	rex.XB
 27e:	45 53                	rex.RB push %r11
 280:	53                   	push   %rbx
 281:	00 6d 65             	add    %ch,0x65(%rbp)
 284:	6d                   	insl   (%dx),%es:(%rdi)
 285:	63 70 79             	movsxd 0x79(%rax),%esi
 288:	5f                   	pop    %rdi
 289:	73 00                	jae    28b <__ImageBase+0x28b>
 28b:	53                   	push   %rbx
 28c:	47 58                	rex.RXB pop %r8
 28e:	5f                   	pop    %rdi
 28f:	45 52                	rex.RB push %r10
 291:	52                   	push   %rdx
 292:	4f 52                	rex.WRXB push %r10
 294:	5f                   	pop    %rdi
 295:	46                   	rex.RX
 296:	49                   	rex.WB
 297:	4c                   	rex.WR
 298:	45 5f                	rex.RB pop %r15
 29a:	4e                   	rex.WRX
 29b:	4f 54                	rex.WRXB push %r12
 29d:	5f                   	pop    %rdi
 29e:	53                   	push   %rbx
 29f:	47 58                	rex.RXB pop %r8
 2a1:	5f                   	pop    %rdi
 2a2:	46                   	rex.RX
 2a3:	49                   	rex.WB
 2a4:	4c                   	rex.WR
 2a5:	45 00 6d 73          	add    %r13b,0x73(%r13)
 2a9:	5f                   	pop    %rdi
 2aa:	65 63 61 6c          	movsxd %gs:0x6c(%rcx),%esp
 2ae:	6c                   	insb   (%dx),%es:(%rdi)
 2af:	5f                   	pop    %rdi
 2b0:	63 6f 6d             	movsxd 0x6d(%rdi),%ebp
 2b3:	70 75                	jo     32a <__ImageBase+0x32a>
 2b5:	74 65                	je     31c <__ImageBase+0x31c>
 2b7:	5f                   	pop    %rdi
 2b8:	72 65                	jb     31f <__ImageBase+0x31f>
 2ba:	73 70                	jae    32c <__ImageBase+0x32c>
 2bc:	6f                   	outsl  %ds:(%rsi),(%dx)
 2bd:	6e                   	outsb  %ds:(%rsi),(%dx)
 2be:	73 65                	jae    325 <__ImageBase+0x325>
 2c0:	5f                   	pop    %rdi
 2c1:	74 00                	je     2c3 <__ImageBase+0x2c3>
 2c3:	73 67                	jae    32c <__ImageBase+0x32c>
 2c5:	78 5f                	js     326 <__ImageBase+0x326>
 2c7:	69 73 5f 77 69 74 68 	imul   $0x68746977,0x5f(%rbx),%esi
 2ce:	69 6e 5f 65 6e 63 6c 	imul   $0x6c636e65,0x5f(%rsi),%ebp
 2d5:	61                   	(bad)  
 2d6:	76 65                	jbe    33d <__ImageBase+0x33d>
 2d8:	00 53 47             	add    %dl,0x47(%rbx)
 2db:	58                   	pop    %rax
 2dc:	5f                   	pop    %rdi
 2dd:	45 52                	rex.RB push %r10
 2df:	52                   	push   %rdx
 2e0:	4f 52                	rex.WRXB push %r10
 2e2:	5f                   	pop    %rdi
 2e3:	46                   	rex.RX
 2e4:	49                   	rex.WB
 2e5:	4c                   	rex.WR
 2e6:	45 5f                	rex.RB pop %r15
 2e8:	4e                   	rex.WRX
 2e9:	4f 5f                	rex.WRXB pop %r15
 2eb:	4b                   	rex.WXB
 2ec:	45 59                	rex.RB pop %r9
 2ee:	5f                   	pop    %rdi
 2ef:	49                   	rex.WB
 2f0:	44 00 53 47          	add    %r10b,0x47(%rbx)
 2f4:	58                   	pop    %rax
 2f5:	5f                   	pop    %rdi
 2f6:	45 52                	rex.RB push %r10
 2f8:	52                   	push   %rdx
 2f9:	4f 52                	rex.WRXB push %r10
 2fb:	5f                   	pop    %rdi
 2fc:	46                   	rex.RX
 2fd:	49                   	rex.WB
 2fe:	4c                   	rex.WR
 2ff:	45 5f                	rex.RB pop %r15
 301:	43                   	rex.XB
 302:	41                   	rex.B
 303:	4e 54                	rex.WRX push %rsp
 305:	5f                   	pop    %rdi
 306:	57                   	push   %rdi
 307:	52                   	push   %rdx
 308:	49 54                	rex.WB push %r12
 30a:	45 5f                	rex.RB pop %r15
 30c:	52                   	push   %rdx
 30d:	45                   	rex.RB
 30e:	43                   	rex.XB
 30f:	4f 56                	rex.WRXB push %r14
 311:	45 52                	rex.RB push %r10
 313:	59                   	pop    %rcx
 314:	5f                   	pop    %rdi
 315:	46                   	rex.RX
 316:	49                   	rex.WB
 317:	4c                   	rex.WR
 318:	45 00 53 47          	add    %r10b,0x47(%r11)
 31c:	58                   	pop    %rax
 31d:	5f                   	pop    %rdi
 31e:	45 52                	rex.RB push %r10
 320:	52                   	push   %rdx
 321:	4f 52                	rex.WRXB push %r10
 323:	5f                   	pop    %rdi
 324:	4f 55                	rex.WRXB push %r13
 326:	54                   	push   %rsp
 327:	5f                   	pop    %rdi
 328:	4f                   	rex.WRXB
 329:	46 5f                	rex.RX pop %rdi
 32b:	54                   	push   %rsp
 32c:	43 53                	rex.XB push %r11
 32e:	00 53 47             	add    %dl,0x47(%rbx)
 331:	58                   	pop    %rax
 332:	5f                   	pop    %rdi
 333:	45 52                	rex.RB push %r10
 335:	52                   	push   %rdx
 336:	4f 52                	rex.WRXB push %r10
 338:	5f                   	pop    %rdi
 339:	49                   	rex.WB
 33a:	4e 56                	rex.WRX push %rsi
 33c:	41                   	rex.B
 33d:	4c                   	rex.WR
 33e:	49                   	rex.WB
 33f:	44 5f                	rex.R pop %rdi
 341:	49 53                	rex.WB push %r11
 343:	56                   	push   %rsi
 344:	53                   	push   %rbx
 345:	56                   	push   %rsi
 346:	4e 00 53 47          	rex.WRX add %r10b,0x47(%rbx)
 34a:	58                   	pop    %rax
 34b:	5f                   	pop    %rdi
 34c:	45 52                	rex.RB push %r10
 34e:	52                   	push   %rdx
 34f:	4f 52                	rex.WRXB push %r10
 351:	5f                   	pop    %rdi
 352:	50                   	push   %rax
 353:	4c                   	rex.WR
 354:	41 54                	push   %r12
 356:	46                   	rex.RX
 357:	4f 52                	rex.WRXB push %r10
 359:	4d 5f                	rex.WRB pop %r15
 35b:	43                   	rex.XB
 35c:	45 52                	rex.RB push %r10
 35e:	54                   	push   %rsp
 35f:	5f                   	pop    %rdi
 360:	55                   	push   %rbp
 361:	4e                   	rex.WRX
 362:	41 56                	push   %r14
 364:	41                   	rex.B
 365:	49                   	rex.WB
 366:	4c                   	rex.WR
 367:	41                   	rex.B
 368:	42                   	rex.X
 369:	4c                   	rex.WR
 36a:	45 00 53 47          	add    %r10b,0x47(%r11)
 36e:	58                   	pop    %rax
 36f:	5f                   	pop    %rdi
 370:	45 52                	rex.RB push %r10
 372:	52                   	push   %rdx
 373:	4f 52                	rex.WRXB push %r10
 375:	5f                   	pop    %rdi
 376:	46                   	rex.RX
 377:	49                   	rex.WB
 378:	4c                   	rex.WR
 379:	45 5f                	rex.RB pop %r15
 37b:	43                   	rex.XB
 37c:	4c                   	rex.WR
 37d:	4f 53                	rex.WRXB push %r11
 37f:	45 5f                	rex.RB pop %r15
 381:	46                   	rex.RX
 382:	41                   	rex.B
 383:	49                   	rex.WB
 384:	4c                   	rex.WR
 385:	45                   	rex.RB
 386:	44 00 53 47          	add    %r10b,0x47(%rbx)
 38a:	58                   	pop    %rax
 38b:	5f                   	pop    %rdi
 38c:	45 52                	rex.RB push %r10
 38e:	52                   	push   %rdx
 38f:	4f 52                	rex.WRXB push %r10
 391:	5f                   	pop    %rdi
 392:	4d                   	rex.WRB
 393:	45                   	rex.RB
 394:	4d                   	rex.WRB
 395:	4f 52                	rex.WRXB push %r10
 397:	59                   	pop    %rcx
 398:	5f                   	pop    %rdi
 399:	4d                   	rex.WRB
 39a:	41 50                	push   %r8
 39c:	5f                   	pop    %rdi
 39d:	46                   	rex.RX
 39e:	41                   	rex.B
 39f:	49                   	rex.WB
 3a0:	4c 55                	rex.WR push %rbp
 3a2:	52                   	push   %rdx
 3a3:	45 00 73 67          	add    %r14b,0x67(%r11)
 3a7:	78 5f                	js     408 <__ImageBase+0x408>
 3a9:	65 63 61 6c          	movsxd %gs:0x6c(%rcx),%esp
 3ad:	6c                   	insb   (%dx),%es:(%rdi)
 3ae:	5f                   	pop    %rdi
 3af:	63 6f 6d             	movsxd 0x6d(%rdi),%ebp
 3b2:	70 75                	jo     429 <__ImageBase+0x429>
 3b4:	74 65                	je     41b <__ImageBase+0x41b>
 3b6:	5f                   	pop    %rdi
 3b7:	72 65                	jb     41e <__ImageBase+0x41e>
 3b9:	73 70                	jae    42b <__ImageBase+0x42b>
 3bb:	6f                   	outsl  %ds:(%rsi),(%dx)
 3bc:	6e                   	outsb  %ds:(%rsi),(%dx)
 3bd:	73 65                	jae    424 <__ImageBase+0x424>
 3bf:	00 6d 73             	add    %ch,0x73(%rbp)
 3c2:	5f                   	pop    %rdi
 3c3:	6f                   	outsl  %ds:(%rsi),(%dx)
 3c4:	63 61 6c             	movsxd 0x6c(%rcx),%esp
 3c7:	6c                   	insb   (%dx),%es:(%rdi)
 3c8:	5f                   	pop    %rdi
 3c9:	70 72                	jo     43d <__ImageBase+0x43d>
 3cb:	69 6e 74 5f 61 64 64 	imul   $0x6464615f,0x74(%rsi),%ebp
 3d2:	72 65                	jb     439 <__ImageBase+0x439>
 3d4:	73 73                	jae    449 <__ImageBase+0x449>
 3d6:	5f                   	pop    %rdi
 3d7:	74 00                	je     3d9 <__ImageBase+0x3d9>
 3d9:	53                   	push   %rbx
 3da:	47 58                	rex.RXB pop %r8
 3dc:	5f                   	pop    %rdi
 3dd:	45 52                	rex.RB push %r10
 3df:	52                   	push   %rdx
 3e0:	4f 52                	rex.WRXB push %r10
 3e2:	5f                   	pop    %rdi
 3e3:	55                   	push   %rbp
 3e4:	4e                   	rex.WRX
 3e5:	44                   	rex.R
 3e6:	45                   	rex.RB
 3e7:	46                   	rex.RX
 3e8:	49                   	rex.WB
 3e9:	4e                   	rex.WRX
 3ea:	45                   	rex.RB
 3eb:	44 5f                	rex.R pop %rdi
 3ed:	53                   	push   %rbx
 3ee:	59                   	pop    %rcx
 3ef:	4d                   	rex.WRB
 3f0:	42                   	rex.X
 3f1:	4f                   	rex.WRXB
 3f2:	4c 00 53 47          	rex.WR add %r10b,0x47(%rbx)
 3f6:	58                   	pop    %rax
 3f7:	5f                   	pop    %rdi
 3f8:	45 52                	rex.RB push %r10
 3fa:	52                   	push   %rdx
 3fb:	4f 52                	rex.WRXB push %r10
 3fd:	5f                   	pop    %rdi
 3fe:	49                   	rex.WB
 3ff:	4e 56                	rex.WRX push %rsi
 401:	41                   	rex.B
 402:	4c                   	rex.WR
 403:	49                   	rex.WB
 404:	44 5f                	rex.R pop %rdi
 406:	45                   	rex.RB
 407:	4e                   	rex.WRX
 408:	43                   	rex.XB
 409:	4c                   	rex.WR
 40a:	41 56                	push   %r14
 40c:	45 00 53 47          	add    %r10b,0x47(%r11)
 410:	58                   	pop    %rax
 411:	5f                   	pop    %rdi
 412:	45 52                	rex.RB push %r10
 414:	52                   	push   %rdx
 415:	4f 52                	rex.WRXB push %r10
 417:	5f                   	pop    %rdi
 418:	45                   	rex.RB
 419:	43                   	rex.XB
 41a:	41                   	rex.B
 41b:	4c                   	rex.WR
 41c:	4c 5f                	rex.WR pop %rdi
 41e:	4e                   	rex.WRX
 41f:	4f 54                	rex.WRXB push %r12
 421:	5f                   	pop    %rdi
 422:	41                   	rex.B
 423:	4c                   	rex.WR
 424:	4c                   	rex.WR
 425:	4f 57                	rex.WRXB push %r15
 427:	45                   	rex.RB
 428:	44 00 5f 5f          	add    %r11b,0x5f(%rdi)
 42c:	74 6d                	je     49b <__ImageBase+0x49b>
 42e:	70 00                	jo     430 <__ImageBase+0x430>
 430:	53                   	push   %rbx
 431:	47 58                	rex.RXB pop %r8
 433:	5f                   	pop    %rdi
 434:	45 52                	rex.RB push %r10
 436:	52                   	push   %rdx
 437:	4f 52                	rex.WRXB push %r10
 439:	5f                   	pop    %rdi
 43a:	49                   	rex.WB
 43b:	4e 56                	rex.WRX push %rsi
 43d:	41                   	rex.B
 43e:	4c                   	rex.WR
 43f:	49                   	rex.WB
 440:	44 5f                	rex.R pop %rdi
 442:	4d                   	rex.WRB
 443:	45 54                	rex.RB push %r12
 445:	41                   	rex.B
 446:	44                   	rex.R
 447:	41 54                	push   %r12
 449:	41 00 53 47          	add    %dl,0x47(%r11)
 44d:	58                   	pop    %rax
 44e:	5f                   	pop    %rdi
 44f:	45 52                	rex.RB push %r10
 451:	52                   	push   %rdx
 452:	4f 52                	rex.WRXB push %r10
 454:	5f                   	pop    %rdi
 455:	4d                   	rex.WRB
 456:	43 5f                	rex.XB pop %r15
 458:	4e                   	rex.WRX
 459:	4f 5f                	rex.WRXB pop %r15
 45b:	41                   	rex.B
 45c:	43                   	rex.XB
 45d:	43                   	rex.XB
 45e:	45 53                	rex.RB push %r11
 460:	53                   	push   %rbx
 461:	5f                   	pop    %rdi
 462:	52                   	push   %rdx
 463:	49                   	rex.WB
 464:	47                   	rex.RXB
 465:	48 54                	rex.W push %rsp
 467:	00 53 47             	add    %dl,0x47(%rbx)
 46a:	58                   	pop    %rax
 46b:	5f                   	pop    %rdi
 46c:	45 52                	rex.RB push %r10
 46e:	52                   	push   %rdx
 46f:	4f 52                	rex.WRXB push %r10
 471:	5f                   	pop    %rdi
 472:	53                   	push   %rbx
 473:	45 52                	rex.RB push %r10
 475:	56                   	push   %rsi
 476:	49                   	rex.WB
 477:	43                   	rex.XB
 478:	45 5f                	rex.RB pop %r15
 47a:	54                   	push   %rsp
 47b:	49                   	rex.WB
 47c:	4d                   	rex.WRB
 47d:	45                   	rex.RB
 47e:	4f 55                	rex.WRXB push %r13
 480:	54                   	push   %rsp
 481:	00 6e 72             	add    %ch,0x72(%rsi)
 484:	5f                   	pop    %rdi
 485:	65 63 61 6c          	movsxd %gs:0x6c(%rcx),%esp
 489:	6c                   	insb   (%dx),%es:(%rdi)
 48a:	00 73 74             	add    %dh,0x74(%rbx)
 48d:	72 6c                	jb     4fb <__ImageBase+0x4fb>
 48f:	65 6e                	outsb  %gs:(%rsi),(%dx)
 491:	00 53 47             	add    %dl,0x47(%rbx)
 494:	58                   	pop    %rax
 495:	5f                   	pop    %rdi
 496:	45 52                	rex.RB push %r10
 498:	52                   	push   %rdx
 499:	4f 52                	rex.WRXB push %r10
 49b:	5f                   	pop    %rdi
 49c:	50                   	push   %rax
 49d:	43                   	rex.XB
 49e:	4c 5f                	rex.WR pop %rdi
 4a0:	53                   	push   %rbx
 4a1:	48                   	rex.W
 4a2:	41 5f                	pop    %r15
 4a4:	4d                   	rex.WRB
 4a5:	49 53                	rex.WB push %r11
 4a7:	4d                   	rex.WRB
 4a8:	41 54                	push   %r12
 4aa:	43                   	rex.XB
 4ab:	48 00 6d 73          	rex.W add %bpl,0x73(%rbp)
 4af:	5f                   	pop    %rdi
 4b0:	61                   	(bad)  
 4b1:	00 53 47             	add    %dl,0x47(%rbx)
 4b4:	58                   	pop    %rax
 4b5:	5f                   	pop    %rdi
 4b6:	45 52                	rex.RB push %r10
 4b8:	52                   	push   %rdx
 4b9:	4f 52                	rex.WRXB push %r10
 4bb:	5f                   	pop    %rdi
 4bc:	49                   	rex.WB
 4bd:	4e 56                	rex.WRX push %rsi
 4bf:	41                   	rex.B
 4c0:	4c                   	rex.WR
 4c1:	49                   	rex.WB
 4c2:	44 5f                	rex.R pop %rdi
 4c4:	43 50                	rex.XB push %r8
 4c6:	55                   	push   %rbp
 4c7:	53                   	push   %rbx
 4c8:	56                   	push   %rsi
 4c9:	4e 00 6d 73          	rex.WRX add %r13b,0x73(%rbp)
 4cd:	5f                   	pop    %rdi
 4ce:	69 00 6d 73 5f 6a    	imul   $0x6a5f736d,(%rax),%eax
 4d4:	00 53 47             	add    %dl,0x47(%rbx)
 4d7:	58                   	pop    %rax
 4d8:	5f                   	pop    %rdi
 4d9:	45 52                	rex.RB push %r10
 4db:	52                   	push   %rdx
 4dc:	4f 52                	rex.WRXB push %r10
 4de:	5f                   	pop    %rdi
 4df:	46                   	rex.RX
 4e0:	49                   	rex.WB
 4e1:	4c                   	rex.WR
 4e2:	45 5f                	rex.RB pop %r15
 4e4:	42                   	rex.X
 4e5:	41                   	rex.B
 4e6:	44 5f                	rex.R pop %rdi
 4e8:	53                   	push   %rbx
 4e9:	54                   	push   %rsp
 4ea:	41 54                	push   %r12
 4ec:	55                   	push   %rbp
 4ed:	53                   	push   %rbx
 4ee:	00 6d 73             	add    %ch,0x73(%rbp)
 4f1:	5f                   	pop    %rdi
 4f2:	65 63 61 6c          	movsxd %gs:0x6c(%rcx),%esp
 4f6:	6c                   	insb   (%dx),%es:(%rdi)
 4f7:	5f                   	pop    %rdi
 4f8:	75 70                	jne    56a <__ImageBase+0x56a>
 4fa:	64 61                	fs (bad) 
 4fc:	74 65                	je     563 <__ImageBase+0x563>
 4fe:	5f                   	pop    %rdi
 4ff:	72 65                	jb     566 <__ImageBase+0x566>
 501:	73 70                	jae    573 <__ImageBase+0x573>
 503:	6f                   	outsl  %ds:(%rsi),(%dx)
 504:	6e                   	outsb  %ds:(%rsi),(%dx)
 505:	73 65                	jae    56c <__ImageBase+0x56c>
 507:	5f                   	pop    %rdi
 508:	6c                   	insb   (%dx),%es:(%rdi)
 509:	6f                   	outsl  %ds:(%rsi),(%dx)
 50a:	63 5f 74             	movsxd 0x74(%rdi),%ebx
 50d:	00 6d 73             	add    %ch,0x73(%rbp)
 510:	5f                   	pop    %rdi
 511:	73 00                	jae    513 <__ImageBase+0x513>
 513:	53                   	push   %rbx
 514:	47 58                	rex.RXB pop %r8
 516:	5f                   	pop    %rdi
 517:	45 52                	rex.RB push %r10
 519:	52                   	push   %rdx
 51a:	4f 52                	rex.WRXB push %r10
 51c:	5f                   	pop    %rdi
 51d:	55                   	push   %rbp
 51e:	4e 52                	rex.WRX push %rdx
 520:	45                   	rex.RB
 521:	43                   	rex.XB
 522:	4f                   	rex.WRXB
 523:	47                   	rex.RXB
 524:	4e                   	rex.WRX
 525:	49 5a                	rex.WB pop %r10
 527:	45                   	rex.RB
 528:	44 5f                	rex.R pop %rdi
 52a:	50                   	push   %rax
 52b:	4c                   	rex.WR
 52c:	41 54                	push   %r12
 52e:	46                   	rex.RX
 52f:	4f 52                	rex.WRXB push %r10
 531:	4d 00 53 47          	rex.WRB add %r10b,0x47(%r11)
 535:	58                   	pop    %rax
 536:	5f                   	pop    %rdi
 537:	45 52                	rex.RB push %r10
 539:	52                   	push   %rdx
 53a:	4f 52                	rex.WRXB push %r10
 53c:	5f                   	pop    %rdi
 53d:	53                   	push   %rbx
 53e:	45 52                	rex.RB push %r10
 540:	56                   	push   %rsi
 541:	49                   	rex.WB
 542:	43                   	rex.XB
 543:	45 5f                	rex.RB pop %r15
 545:	49                   	rex.WB
 546:	4e 56                	rex.WRX push %rsi
 548:	41                   	rex.B
 549:	4c                   	rex.WR
 54a:	49                   	rex.WB
 54b:	44 5f                	rex.R pop %rdi
 54d:	50                   	push   %rax
 54e:	52                   	push   %rdx
 54f:	49 56                	rex.WB push %r14
 551:	49                   	rex.WB
 552:	4c                   	rex.WR
 553:	45                   	rex.RB
 554:	47                   	rex.RXB
 555:	45 00 53 47          	add    %r10b,0x47(%r11)
 559:	58                   	pop    %rax
 55a:	5f                   	pop    %rdi
 55b:	45 52                	rex.RB push %r10
 55d:	52                   	push   %rdx
 55e:	4f 52                	rex.WRXB push %r10
 560:	5f                   	pop    %rdi
 561:	46                   	rex.RX
 562:	49                   	rex.WB
 563:	4c                   	rex.WR
 564:	45 5f                	rex.RB pop %r15
 566:	46                   	rex.RX
 567:	4c 55                	rex.WR push %rbp
 569:	53                   	push   %rbx
 56a:	48 5f                	rex.W pop %rdi
 56c:	46                   	rex.RX
 56d:	41                   	rex.B
 56e:	49                   	rex.WB
 56f:	4c                   	rex.WR
 570:	45                   	rex.RB
 571:	44 00 5f 6c          	add    %r11b,0x6c(%rdi)
 575:	65 6e                	outsb  %gs:(%rsi),(%dx)
 577:	5f                   	pop    %rdi
 578:	73 74                	jae    5ee <__ImageBase+0x5ee>
 57a:	72 00                	jb     57c <__ImageBase+0x57c>
 57c:	53                   	push   %rbx
 57d:	47 58                	rex.RXB pop %r8
 57f:	5f                   	pop    %rdi
 580:	45 52                	rex.RB push %r10
 582:	52                   	push   %rdx
 583:	4f 52                	rex.WRXB push %r10
 585:	5f                   	pop    %rdi
 586:	42 55                	rex.X push %rbp
 588:	53                   	push   %rbx
 589:	59                   	pop    %rcx
 58a:	00 53 47             	add    %dl,0x47(%rbx)
 58d:	58                   	pop    %rax
 58e:	5f                   	pop    %rdi
 58f:	45 52                	rex.RB push %r10
 591:	52                   	push   %rdx
 592:	4f 52                	rex.WRXB push %r10
 594:	5f                   	pop    %rdi
 595:	4d                   	rex.WRB
 596:	43 5f                	rex.XB pop %r15
 598:	4f 56                	rex.WRXB push %r14
 59a:	45 52                	rex.RB push %r10
 59c:	5f                   	pop    %rdi
 59d:	51                   	push   %rcx
 59e:	55                   	push   %rbp
 59f:	4f 54                	rex.WRXB push %r12
 5a1:	41 00 53 47          	add    %dl,0x47(%r11)
 5a5:	58                   	pop    %rax
 5a6:	5f                   	pop    %rdi
 5a7:	45 52                	rex.RB push %r10
 5a9:	52                   	push   %rdx
 5aa:	4f 52                	rex.WRXB push %r10
 5ac:	5f                   	pop    %rdi
 5ad:	45 50                	rex.RB push %r8
 5af:	49                   	rex.WB
 5b0:	44 5f                	rex.R pop %rdi
 5b2:	4d                   	rex.WRB
 5b3:	45                   	rex.RB
 5b4:	4d                   	rex.WRB
 5b5:	42                   	rex.X
 5b6:	45 52                	rex.RB push %r10
 5b8:	5f                   	pop    %rdi
 5b9:	52                   	push   %rdx
 5ba:	45 56                	rex.RB push %r14
 5bc:	4f                   	rex.WRXB
 5bd:	4b                   	rex.WXB
 5be:	45                   	rex.RB
 5bf:	44 00 53 47          	add    %r10b,0x47(%rbx)
 5c3:	58                   	pop    %rax
 5c4:	5f                   	pop    %rdi
 5c5:	45 52                	rex.RB push %r10
 5c7:	52                   	push   %rdx
 5c8:	4f 52                	rex.WRXB push %r10
 5ca:	5f                   	pop    %rdi
 5cb:	46                   	rex.RX
 5cc:	49                   	rex.WB
 5cd:	4c                   	rex.WR
 5ce:	45 5f                	rex.RB pop %r15
 5d0:	52                   	push   %rdx
 5d1:	45                   	rex.RB
 5d2:	43                   	rex.XB
 5d3:	4f 56                	rex.WRXB push %r14
 5d5:	45 52                	rex.RB push %r10
 5d7:	59                   	pop    %rcx
 5d8:	5f                   	pop    %rdi
 5d9:	4e                   	rex.WRX
 5da:	45                   	rex.RB
 5db:	45                   	rex.RB
 5dc:	44                   	rex.R
 5dd:	45                   	rex.RB
 5de:	44 00 5f 5f          	add    %r11b,0x5f(%rdi)
 5e2:	69 6e 5f 6d 73 00 53 	imul   $0x5300736d,0x5f(%rsi),%ebp
 5e9:	47 58                	rex.RXB pop %r8
 5eb:	5f                   	pop    %rdi
 5ec:	45 52                	rex.RB push %r10
 5ee:	52                   	push   %rdx
 5ef:	4f 52                	rex.WRXB push %r10
 5f1:	5f                   	pop    %rdi
 5f2:	53                   	push   %rbx
 5f3:	45 52                	rex.RB push %r10
 5f5:	56                   	push   %rsi
 5f6:	49                   	rex.WB
 5f7:	43                   	rex.XB
 5f8:	45 5f                	rex.RB pop %r15
 5fa:	55                   	push   %rbp
 5fb:	4e                   	rex.WRX
 5fc:	41 56                	push   %r14
 5fe:	41                   	rex.B
 5ff:	49                   	rex.WB
 600:	4c                   	rex.WR
 601:	41                   	rex.B
 602:	42                   	rex.X
 603:	4c                   	rex.WR
 604:	45 00 6d 73          	add    %r13b,0x73(%r13)
 608:	5f                   	pop    %rdi
 609:	69 6e 70 75 74 5f 70 	imul   $0x705f7475,0x70(%rsi),%ebp
 610:	6f                   	outsl  %ds:(%rsi),(%dx)
 611:	69 6e 74 65 72 00 53 	imul   $0x53007265,0x74(%rsi),%ebp
 618:	47 58                	rex.RXB pop %r8
 61a:	5f                   	pop    %rdi
 61b:	45 52                	rex.RB push %r10
 61d:	52                   	push   %rdx
 61e:	4f 52                	rex.WRXB push %r10
 620:	5f                   	pop    %rdi
 621:	41 54                	push   %r12
 623:	54                   	push   %rsp
 624:	5f                   	pop    %rdi
 625:	4b                   	rex.WXB
 626:	45 59                	rex.RB pop %r9
 628:	5f                   	pop    %rdi
 629:	55                   	push   %rbp
 62a:	4e                   	rex.WRX
 62b:	49                   	rex.WB
 62c:	4e                   	rex.WRX
 62d:	49 54                	rex.WB push %r12
 62f:	49                   	rex.WB
 630:	41                   	rex.B
 631:	4c                   	rex.WR
 632:	49 5a                	rex.WB pop %r10
 634:	45                   	rex.RB
 635:	44 00 53 47          	add    %r10b,0x47(%rbx)
 639:	58                   	pop    %rax
 63a:	5f                   	pop    %rdi
 63b:	45 52                	rex.RB push %r10
 63d:	52                   	push   %rdx
 63e:	4f 52                	rex.WRXB push %r10
 640:	5f                   	pop    %rdi
 641:	50                   	push   %rax
 642:	43                   	rex.XB
 643:	4c 5f                	rex.WR pop %rdi
 645:	4e                   	rex.WRX
 646:	4f 54                	rex.WRXB push %r12
 648:	5f                   	pop    %rdi
 649:	45                   	rex.RB
 64a:	4e                   	rex.WRX
 64b:	43 52                	rex.XB push %r10
 64d:	59                   	pop    %rcx
 64e:	50                   	push   %rax
 64f:	54                   	push   %rsp
 650:	45                   	rex.RB
 651:	44 00 53 47          	add    %r10b,0x47(%rbx)
 655:	58                   	pop    %rax
 656:	5f                   	pop    %rdi
 657:	45 52                	rex.RB push %r10
 659:	52                   	push   %rdx
 65a:	4f 52                	rex.WRXB push %r10
 65c:	5f                   	pop    %rdi
 65d:	41                   	rex.B
 65e:	45 5f                	rex.RB pop %r15
 660:	49                   	rex.WB
 661:	4e 56                	rex.WRX push %rsi
 663:	41                   	rex.B
 664:	4c                   	rex.WR
 665:	49                   	rex.WB
 666:	44 5f                	rex.R pop %rdi
 668:	45 50                	rex.RB push %r8
 66a:	49                   	rex.WB
 66b:	44                   	rex.R
 66c:	42                   	rex.X
 66d:	4c                   	rex.WR
 66e:	4f                   	rex.WRXB
 66f:	42 00 53 47          	rex.X add %dl,0x47(%rbx)
 673:	58                   	pop    %rax
 674:	5f                   	pop    %rdi
 675:	49                   	rex.WB
 676:	4e 54                	rex.WRX push %rsp
 678:	45 52                	rex.RB push %r10
 67a:	4e                   	rex.WRX
 67b:	41                   	rex.B
 67c:	4c 5f                	rex.WR pop %rdi
 67e:	45 52                	rex.RB push %r10
 680:	52                   	push   %rdx
 681:	4f 52                	rex.WRXB push %r10
 683:	5f                   	pop    %rdi
 684:	45                   	rex.RB
 685:	4e                   	rex.WRX
 686:	43                   	rex.XB
 687:	4c                   	rex.WR
 688:	41 56                	push   %r14
 68a:	45 5f                	rex.RB pop %r15
 68c:	43 52                	rex.XB push %r10
 68e:	45                   	rex.RB
 68f:	41 54                	push   %r12
 691:	45 5f                	rex.RB pop %r15
 693:	49                   	rex.WB
 694:	4e 54                	rex.WRX push %rsp
 696:	45 52                	rex.RB push %r10
 698:	52                   	push   %rdx
 699:	55                   	push   %rbp
 69a:	50                   	push   %rax
 69b:	54                   	push   %rsp
 69c:	45                   	rex.RB
 69d:	44 00 53 47          	add    %r10b,0x47(%rbx)
 6a1:	58                   	pop    %rax
 6a2:	5f                   	pop    %rdi
 6a3:	45 52                	rex.RB push %r10
 6a5:	52                   	push   %rdx
 6a6:	4f 52                	rex.WRXB push %r10
 6a8:	5f                   	pop    %rdi
 6a9:	49                   	rex.WB
 6aa:	4e 56                	rex.WRX push %rsi
 6ac:	41                   	rex.B
 6ad:	4c                   	rex.WR
 6ae:	49                   	rex.WB
 6af:	44 5f                	rex.R pop %rdi
 6b1:	41 54                	push   %r12
 6b3:	54                   	push   %rsp
 6b4:	52                   	push   %rdx
 6b5:	49                   	rex.WB
 6b6:	42 55                	rex.X push %rbp
 6b8:	54                   	push   %rsp
 6b9:	45 00 53 47          	add    %r10b,0x47(%r11)
 6bd:	58                   	pop    %rax
 6be:	5f                   	pop    %rdi
 6bf:	45 52                	rex.RB push %r10
 6c1:	52                   	push   %rdx
 6c2:	4f 52                	rex.WRXB push %r10
 6c4:	5f                   	pop    %rdi
 6c5:	46                   	rex.RX
 6c6:	49                   	rex.WB
 6c7:	4c                   	rex.WR
 6c8:	45 5f                	rex.RB pop %r15
 6ca:	43                   	rex.XB
 6cb:	41                   	rex.B
 6cc:	4e 54                	rex.WRX push %rsp
 6ce:	5f                   	pop    %rdi
 6cf:	4f 50                	rex.WRXB push %r8
 6d1:	45                   	rex.RB
 6d2:	4e 5f                	rex.WRX pop %rdi
 6d4:	52                   	push   %rdx
 6d5:	45                   	rex.RB
 6d6:	43                   	rex.XB
 6d7:	4f 56                	rex.WRXB push %r14
 6d9:	45 52                	rex.RB push %r10
 6db:	59                   	pop    %rcx
 6dc:	5f                   	pop    %rdi
 6dd:	46                   	rex.RX
 6de:	49                   	rex.WB
 6df:	4c                   	rex.WR
 6e0:	45 00 53 47          	add    %r10b,0x47(%r11)
 6e4:	58                   	pop    %rax
 6e5:	5f                   	pop    %rdi
 6e6:	45 52                	rex.RB push %r10
 6e8:	52                   	push   %rdx
 6e9:	4f 52                	rex.WRXB push %r10
 6eb:	5f                   	pop    %rdi
 6ec:	50                   	push   %rax
 6ed:	43                   	rex.XB
 6ee:	4c 5f                	rex.WR pop %rdi
 6f0:	45                   	rex.RB
 6f1:	4e                   	rex.WRX
 6f2:	43 52                	rex.XB push %r10
 6f4:	59                   	pop    %rcx
 6f5:	50                   	push   %rax
 6f6:	54                   	push   %rsp
 6f7:	45                   	rex.RB
 6f8:	44 00 53 47          	add    %r10b,0x47(%rbx)
 6fc:	58                   	pop    %rax
 6fd:	5f                   	pop    %rdi
 6fe:	45 52                	rex.RB push %r10
 700:	52                   	push   %rdx
 701:	4f 52                	rex.WRXB push %r10
 703:	5f                   	pop    %rdi
 704:	41                   	rex.B
 705:	45 5f                	rex.RB pop %r15
 707:	53                   	push   %rbx
 708:	45 53                	rex.RB push %r11
 70a:	53                   	push   %rbx
 70b:	49                   	rex.WB
 70c:	4f                   	rex.WRXB
 70d:	4e 5f                	rex.WRX pop %rdi
 70f:	49                   	rex.WB
 710:	4e 56                	rex.WRX push %rsi
 712:	41                   	rex.B
 713:	4c                   	rex.WR
 714:	49                   	rex.WB
 715:	44 00 53 47          	add    %r10b,0x47(%rbx)
 719:	58                   	pop    %rax
 71a:	5f                   	pop    %rdi
 71b:	45 52                	rex.RB push %r10
 71d:	52                   	push   %rdx
 71e:	4f 52                	rex.WRXB push %r10
 720:	5f                   	pop    %rdi
 721:	49                   	rex.WB
 722:	4e 56                	rex.WRX push %rsi
 724:	41                   	rex.B
 725:	4c                   	rex.WR
 726:	49                   	rex.WB
 727:	44 5f                	rex.R pop %rdi
 729:	53                   	push   %rbx
 72a:	54                   	push   %rsp
 72b:	41 54                	push   %r12
 72d:	45 00 53 47          	add    %r10b,0x47(%r11)
 731:	58                   	pop    %rax
 732:	5f                   	pop    %rdi
 733:	45 52                	rex.RB push %r10
 735:	52                   	push   %rdx
 736:	4f 52                	rex.WRXB push %r10
 738:	5f                   	pop    %rdi
 739:	45                   	rex.RB
 73a:	4e                   	rex.WRX
 73b:	43                   	rex.XB
 73c:	4c                   	rex.WR
 73d:	41 56                	push   %r14
 73f:	45 5f                	rex.RB pop %r15
 741:	43 52                	rex.XB push %r10
 743:	41 53                	push   %r11
 745:	48                   	rex.W
 746:	45                   	rex.RB
 747:	44 00 53 47          	add    %r10b,0x47(%rbx)
 74b:	58                   	pop    %rax
 74c:	5f                   	pop    %rdi
 74d:	45 52                	rex.RB push %r10
 74f:	52                   	push   %rdx
 750:	4f 52                	rex.WRXB push %r10
 752:	5f                   	pop    %rdi
 753:	44                   	rex.R
 754:	45 56                	rex.RB push %r14
 756:	49                   	rex.WB
 757:	43                   	rex.XB
 758:	45 5f                	rex.RB pop %r15
 75a:	42 55                	rex.X push %rbp
 75c:	53                   	push   %rbx
 75d:	59                   	pop    %rcx
 75e:	00 53 47             	add    %dl,0x47(%rbx)
 761:	58                   	pop    %rax
 762:	5f                   	pop    %rdi
 763:	45 52                	rex.RB push %r10
 765:	52                   	push   %rdx
 766:	4f 52                	rex.WRXB push %r10
 768:	5f                   	pop    %rdi
 769:	4f 55                	rex.WRXB push %r13
 76b:	54                   	push   %rsp
 76c:	5f                   	pop    %rdi
 76d:	4f                   	rex.WRXB
 76e:	46 5f                	rex.RX pop %rdi
 770:	45 50                	rex.RB push %r8
 772:	43 00 73 67          	rex.XB add %sil,0x67(%r11)
 776:	78 5f                	js     7d7 <__ImageBase+0x7d7>
 778:	73 74                	jae    7ee <__ImageBase+0x7ee>
 77a:	61                   	(bad)  
 77b:	74 75                	je     7f2 <__ImageBase+0x7f2>
 77d:	73 5f                	jae    7de <__ImageBase+0x7de>
 77f:	74 00                	je     781 <__ImageBase+0x781>
 781:	6d                   	insl   (%dx),%es:(%rdi)
 782:	65 6d                	gs insl (%dx),%es:(%rdi)
 784:	63 70 79             	movsxd 0x79(%rax),%esi
 787:	5f                   	pop    %rdi
 788:	76 65                	jbe    7ef <__ImageBase+0x7ef>
 78a:	72 77                	jb     803 <__ImageBase+0x803>
 78c:	5f                   	pop    %rdi
 78d:	73 00                	jae    78f <__ImageBase+0x78f>
 78f:	53                   	push   %rbx
 790:	47 58                	rex.RXB pop %r8
 792:	5f                   	pop    %rdi
 793:	53                   	push   %rbx
 794:	55                   	push   %rbp
 795:	43                   	rex.XB
 796:	43                   	rex.XB
 797:	45 53                	rex.RB push %r11
 799:	53                   	push   %rbx
 79a:	00 65 72             	add    %ah,0x72(%rbp)
 79d:	72 6e                	jb     80d <__ImageBase+0x80d>
 79f:	6f                   	outsl  %ds:(%rsi),(%dx)
 7a0:	5f                   	pop    %rdi
 7a1:	74 00                	je     7a3 <__ImageBase+0x7a3>
 7a3:	73 67                	jae    80c <__ImageBase+0x80c>
 7a5:	78 5f                	js     806 <__ImageBase+0x806>
 7a7:	6f                   	outsl  %ds:(%rsi),(%dx)
 7a8:	63 66 72             	movsxd 0x72(%rsi),%esp
 7ab:	65 65 00 53 47       	gs add %dl,%gs:0x47(%rbx)
 7b0:	58                   	pop    %rax
 7b1:	5f                   	pop    %rdi
 7b2:	45 52                	rex.RB push %r10
 7b4:	52                   	push   %rdx
 7b5:	4f 52                	rex.WRXB push %r10
 7b7:	5f                   	pop    %rdi
 7b8:	4e                   	rex.WRX
 7b9:	4f 5f                	rex.WRXB pop %r15
 7bb:	50                   	push   %rax
 7bc:	52                   	push   %rdx
 7bd:	49 56                	rex.WB push %r14
 7bf:	49                   	rex.WB
 7c0:	4c                   	rex.WR
 7c1:	45                   	rex.RB
 7c2:	47                   	rex.RXB
 7c3:	45 00 73 67          	add    %r14b,0x67(%r11)
 7c7:	78 5f                	js     828 <__ImageBase+0x828>
 7c9:	65 63 61 6c          	movsxd %gs:0x6c(%rcx),%esp
 7cd:	6c                   	insb   (%dx),%es:(%rdi)
 7ce:	5f                   	pop    %rdi
 7cf:	75 70                	jne    841 <__ImageBase+0x841>
 7d1:	64 61                	fs (bad) 
 7d3:	74 65                	je     83a <__ImageBase+0x83a>
 7d5:	5f                   	pop    %rdi
 7d6:	72 65                	jb     83d <__ImageBase+0x83d>
 7d8:	73 70                	jae    84a <__ImageBase+0x84a>
 7da:	6f                   	outsl  %ds:(%rsi),(%dx)
 7db:	6e                   	outsb  %ds:(%rsi),(%dx)
 7dc:	73 65                	jae    843 <__ImageBase+0x843>
 7de:	5f                   	pop    %rdi
 7df:	6c                   	insb   (%dx),%es:(%rdi)
 7e0:	6f                   	outsl  %ds:(%rsi),(%dx)
 7e1:	63 00                	movsxd (%rax),%eax
 7e3:	53                   	push   %rbx
 7e4:	47 58                	rex.RXB pop %r8
 7e6:	5f                   	pop    %rdi
 7e7:	45 52                	rex.RB push %r10
 7e9:	52                   	push   %rdx
 7ea:	4f 52                	rex.WRXB push %r10
 7ec:	5f                   	pop    %rdi
 7ed:	49                   	rex.WB
 7ee:	4e 56                	rex.WRX push %rsi
 7f0:	41                   	rex.B
 7f1:	4c                   	rex.WR
 7f2:	49                   	rex.WB
 7f3:	44 5f                	rex.R pop %rdi
 7f5:	50                   	push   %rax
 7f6:	41 52                	push   %r10
 7f8:	41                   	rex.B
 7f9:	4d                   	rex.WRB
 7fa:	45 54                	rex.RB push %r12
 7fc:	45 52                	rex.RB push %r10
 7fe:	00 69 73             	add    %ch,0x73(%rcx)
 801:	5f                   	pop    %rdi
 802:	73 77                	jae    87b <__ImageBase+0x87b>
 804:	69 74 63 68 6c 65 73 	imul   $0x7373656c,0x68(%rbx,%riz,2),%esi
 80b:	73 
 80c:	00 53 47             	add    %dl,0x47(%rbx)
 80f:	58                   	pop    %rax
 810:	5f                   	pop    %rdi
 811:	45 52                	rex.RB push %r10
 813:	52                   	push   %rdx
 814:	4f 52                	rex.WRXB push %r10
 816:	5f                   	pop    %rdi
 817:	50                   	push   %rax
 818:	43                   	rex.XB
 819:	4c 5f                	rex.WR pop %rdi
 81b:	47 55                	rex.RXB push %r13
 81d:	49                   	rex.WB
 81e:	44 5f                	rex.R pop %rdi
 820:	4d                   	rex.WRB
 821:	49 53                	rex.WB push %r11
 823:	4d                   	rex.WRB
 824:	41 54                	push   %r12
 826:	43                   	rex.XB
 827:	48 00 5f 5f          	rex.W add %bl,0x5f(%rdi)
 82b:	62                   	(bad)  
 82c:	75 69                	jne    897 <__ImageBase+0x897>
 82e:	6c                   	insb   (%dx),%es:(%rdi)
 82f:	74 69                	je     89a <__ImageBase+0x89a>
 831:	6e                   	outsb  %ds:(%rsi),(%dx)
 832:	5f                   	pop    %rdi
 833:	69 61 33 32 5f 6c 66 	imul   $0x666c5f32,0x33(%rcx),%esp
 83a:	65 6e                	outsb  %gs:(%rsi),(%dx)
 83c:	63 65 00             	movsxd 0x0(%rbp),%esp
 83f:	53                   	push   %rbx
 840:	47 58                	rex.RXB pop %r8
 842:	5f                   	pop    %rdi
 843:	45 52                	rex.RB push %r10
 845:	52                   	push   %rdx
 846:	4f 52                	rex.WRXB push %r10
 848:	5f                   	pop    %rdi
 849:	45                   	rex.RB
 84a:	4e                   	rex.WRX
 84b:	43                   	rex.XB
 84c:	4c                   	rex.WR
 84d:	41 56                	push   %r14
 84f:	45 5f                	rex.RB pop %r15
 851:	4c                   	rex.WR
 852:	4f 53                	rex.WRXB push %r11
 854:	54                   	push   %rsp
 855:	00 6d 73             	add    %ch,0x73(%rbp)
 858:	5f                   	pop    %rdi
 859:	6f                   	outsl  %ds:(%rsi),(%dx)
 85a:	63 61 6c             	movsxd 0x6c(%rcx),%esp
 85d:	6c                   	insb   (%dx),%es:(%rdi)
 85e:	5f                   	pop    %rdi
 85f:	70 72                	jo     8d3 <__ImageBase+0x8d3>
 861:	69 6e 74 5f 74 00 5f 	imul   $0x5f00745f,0x74(%rsi),%ebp
 868:	5f                   	pop    %rdi
 869:	75 69                	jne    8d4 <__ImageBase+0x8d4>
 86b:	6e                   	outsb  %ds:(%rsi),(%dx)
 86c:	74 70                	je     8de <__ImageBase+0x8de>
 86e:	74 72                	je     8e2 <__ImageBase+0x8e2>
 870:	5f                   	pop    %rdi
 871:	74 00                	je     873 <__ImageBase+0x873>
 873:	5f                   	pop    %rdi
 874:	74 6d                	je     8e3 <__ImageBase+0x8e3>
 876:	70 5f                	jo     8d7 <__ImageBase+0x8d7>
 878:	69 6e 70 75 74 5f 70 	imul   $0x705f7475,0x70(%rsi),%ebp
 87f:	6f                   	outsl  %ds:(%rsi),(%dx)
 880:	69 6e 74 65 72 00 69 	imul   $0x69007265,0x74(%rsi),%ebp
 887:	73 5f                	jae    8e8 <__ImageBase+0x8e8>
 889:	70 72                	jo     8fd <__ImageBase+0x8fd>
 88b:	69 76 00 65 63 61 6c 	imul   $0x6c616365,0x0(%rsi),%esi
 892:	6c                   	insb   (%dx),%es:(%rdi)
 893:	5f                   	pop    %rdi
 894:	61                   	(bad)  
 895:	64 64 72 00          	fs fs jb 899 <__ImageBase+0x899>
 899:	73 67                	jae    902 <__ImageBase+0x902>
 89b:	78 5f                	js     8fc <__ImageBase+0x8fc>
 89d:	65 63 61 6c          	movsxd %gs:0x6c(%rcx),%esp
 8a1:	6c                   	insb   (%dx),%es:(%rdi)
 8a2:	5f                   	pop    %rdi
 8a3:	67 65 74 5f          	addr32 gs je 906 <__ImageBase+0x906>
 8a7:	72 65                	jb     90e <__ImageBase+0x90e>
 8a9:	73 70                	jae    91b <__ImageBase+0x91b>
 8ab:	6f                   	outsl  %ds:(%rsi),(%dx)
 8ac:	6e                   	outsb  %ds:(%rsi),(%dx)
 8ad:	73 65                	jae    914 <__ImageBase+0x914>
 8af:	00 53 47             	add    %dl,0x47(%rbx)
 8b2:	58                   	pop    %rax
 8b3:	5f                   	pop    %rdi
 8b4:	45 52                	rex.RB push %r10
 8b6:	52                   	push   %rdx
 8b7:	4f 52                	rex.WRXB push %r10
 8b9:	5f                   	pop    %rdi
 8ba:	49                   	rex.WB
 8bb:	4e 56                	rex.WRX push %rsi
 8bd:	41                   	rex.B
 8be:	4c                   	rex.WR
 8bf:	49                   	rex.WB
 8c0:	44 5f                	rex.R pop %rdi
 8c2:	4c                   	rex.WR
 8c3:	41 55                	push   %r13
 8c5:	4e                   	rex.WRX
 8c6:	43                   	rex.XB
 8c7:	48 5f                	rex.W pop %rdi
 8c9:	54                   	push   %rsp
 8ca:	4f                   	rex.WRXB
 8cb:	4b                   	rex.WXB
 8cc:	45                   	rex.RB
 8cd:	4e 00 53 47          	rex.WRX add %r10b,0x47(%rbx)
 8d1:	58                   	pop    %rax
 8d2:	5f                   	pop    %rdi
 8d3:	45 52                	rex.RB push %r10
 8d5:	52                   	push   %rdx
 8d6:	4f 52                	rex.WRXB push %r10
 8d8:	5f                   	pop    %rdi
 8d9:	49                   	rex.WB
 8da:	4e 56                	rex.WRX push %rsi
 8dc:	41                   	rex.B
 8dd:	4c                   	rex.WR
 8de:	49                   	rex.WB
 8df:	44 5f                	rex.R pop %rdi
 8e1:	56                   	push   %rsi
 8e2:	45 52                	rex.RB push %r10
 8e4:	53                   	push   %rbx
 8e5:	49                   	rex.WB
 8e6:	4f                   	rex.WRXB
 8e7:	4e 00 67 5f          	rex.WRX add %r12b,0x5f(%rdi)
 8eb:	64 79 6e             	fs jns 95c <__ImageBase+0x95c>
 8ee:	5f                   	pop    %rdi
 8ef:	65 6e                	outsb  %gs:(%rsi),(%dx)
 8f1:	74 72                	je     965 <__ImageBase+0x965>
 8f3:	79 5f                	jns    954 <__ImageBase+0x954>
 8f5:	74 61                	je     958 <__ImageBase+0x958>
 8f7:	62                   	(bad)  
 8f8:	6c                   	insb   (%dx),%es:(%rdi)
 8f9:	65 00 53 47          	add    %dl,%gs:0x47(%rbx)
 8fd:	58                   	pop    %rax
 8fe:	5f                   	pop    %rdi
 8ff:	45 52                	rex.RB push %r10
 901:	52                   	push   %rdx
 902:	4f 52                	rex.WRXB push %r10
 904:	5f                   	pop    %rdi
 905:	49                   	rex.WB
 906:	4e 56                	rex.WRX push %rsi
 908:	41                   	rex.B
 909:	4c                   	rex.WR
 90a:	49                   	rex.WB
 90b:	44 5f                	rex.R pop %rdi
 90d:	46 55                	rex.RX push %rbp
 90f:	4e                   	rex.WRX
 910:	43 54                	rex.XB push %r12
 912:	49                   	rex.WB
 913:	4f                   	rex.WRXB
 914:	4e 00 53 47          	rex.WRX add %r10b,0x47(%rbx)
 918:	58                   	pop    %rax
 919:	5f                   	pop    %rdi
 91a:	45 52                	rex.RB push %r10
 91c:	52                   	push   %rdx
 91d:	4f 52                	rex.WRXB push %r10
 91f:	5f                   	pop    %rdi
 920:	50                   	push   %rax
 921:	43                   	rex.XB
 922:	4c 5f                	rex.WR pop %rdi
 924:	4d                   	rex.WRB
 925:	41                   	rex.B
 926:	43 5f                	rex.XB pop %r15
 928:	4d                   	rex.WRB
 929:	49 53                	rex.WB push %r11
 92b:	4d                   	rex.WRB
 92c:	41 54                	push   %r12
 92e:	43                   	rex.XB
 92f:	48 00 53 47          	rex.W add %dl,0x47(%rbx)
 933:	58                   	pop    %rax
 934:	5f                   	pop    %rdi
 935:	45 52                	rex.RB push %r10
 937:	52                   	push   %rdx
 938:	4f 52                	rex.WRXB push %r10
 93a:	5f                   	pop    %rdi
 93b:	46                   	rex.RX
 93c:	45                   	rex.RB
 93d:	41 54                	push   %r12
 93f:	55                   	push   %rbp
 940:	52                   	push   %rdx
 941:	45 5f                	rex.RB pop %r15
 943:	4e                   	rex.WRX
 944:	4f 54                	rex.WRXB push %r12
 946:	5f                   	pop    %rdi
 947:	53                   	push   %rbx
 948:	55                   	push   %rbp
 949:	50                   	push   %rax
 94a:	50                   	push   %rax
 94b:	4f 52                	rex.WRXB push %r10
 94d:	54                   	push   %rsp
 94e:	45                   	rex.RB
 94f:	44 00 53 47          	add    %r10b,0x47(%rbx)
 953:	58                   	pop    %rax
 954:	5f                   	pop    %rdi
 955:	45 52                	rex.RB push %r10
 957:	52                   	push   %rdx
 958:	4f 52                	rex.WRXB push %r10
 95a:	5f                   	pop    %rdi
 95b:	49                   	rex.WB
 95c:	4e 56                	rex.WRX push %rsi
 95e:	41                   	rex.B
 95f:	4c                   	rex.WR
 960:	49                   	rex.WB
 961:	44 5f                	rex.R pop %rdi
 963:	4d                   	rex.WRB
 964:	49 53                	rex.WB push %r11
 966:	43 00 53 47          	rex.XB add %dl,0x47(%r11)
 96a:	58                   	pop    %rax
 96b:	5f                   	pop    %rdi
 96c:	45 52                	rex.RB push %r10
 96e:	52                   	push   %rdx
 96f:	4f 52                	rex.WRXB push %r10
 971:	5f                   	pop    %rdi
 972:	4b                   	rex.WXB
 973:	44                   	rex.R
 974:	46 5f                	rex.RX pop %rdi
 976:	4d                   	rex.WRB
 977:	49 53                	rex.WB push %r11
 979:	4d                   	rex.WRB
 97a:	41 54                	push   %r12
 97c:	43                   	rex.XB
 97d:	48 00 53 47          	rex.W add %dl,0x47(%rbx)
 981:	58                   	pop    %rax
 982:	5f                   	pop    %rdi
 983:	45 52                	rex.RB push %r10
 985:	52                   	push   %rdx
 986:	4f 52                	rex.WRXB push %r10
 988:	5f                   	pop    %rdi
 989:	54                   	push   %rsp
 98a:	4c 53                	rex.WR push %rbx
 98c:	5f                   	pop    %rdi
 98d:	58                   	pop    %rax
 98e:	35 30 39 5f 49       	xor    $0x495f3930,%eax
 993:	4e 56                	rex.WRX push %rsi
 995:	41                   	rex.B
 996:	4c                   	rex.WR
 997:	49                   	rex.WB
 998:	44 5f                	rex.R pop %rdi
 99a:	45 58                	rex.RB pop %r8
 99c:	54                   	push   %rsp
 99d:	45                   	rex.RB
 99e:	4e 53                	rex.WRX push %rbx
 9a0:	49                   	rex.WB
 9a1:	4f                   	rex.WRXB
 9a2:	4e 00 53 47          	rex.WRX add %r10b,0x47(%rbx)
 9a6:	58                   	pop    %rax
 9a7:	5f                   	pop    %rdi
 9a8:	45 52                	rex.RB push %r10
 9aa:	52                   	push   %rdx
 9ab:	4f 52                	rex.WRXB push %r10
 9ad:	5f                   	pop    %rdi
 9ae:	4f                   	rex.WRXB
 9af:	43                   	rex.XB
 9b0:	41                   	rex.B
 9b1:	4c                   	rex.WR
 9b2:	4c 5f                	rex.WR pop %rdi
 9b4:	4e                   	rex.WRX
 9b5:	4f 54                	rex.WRXB push %r12
 9b7:	5f                   	pop    %rdi
 9b8:	41                   	rex.B
 9b9:	4c                   	rex.WR
 9ba:	4c                   	rex.WR
 9bb:	4f 57                	rex.WRXB push %r15
 9bd:	45                   	rex.RB
 9be:	44 00 53 47          	add    %r10b,0x47(%rbx)
 9c2:	58                   	pop    %rax
 9c3:	5f                   	pop    %rdi
 9c4:	45 52                	rex.RB push %r10
 9c6:	52                   	push   %rdx
 9c7:	4f 52                	rex.WRXB push %r10
 9c9:	5f                   	pop    %rdi
 9ca:	49                   	rex.WB
 9cb:	4e 56                	rex.WRX push %rsi
 9cd:	41                   	rex.B
 9ce:	4c                   	rex.WR
 9cf:	49                   	rex.WB
 9d0:	44 5f                	rex.R pop %rdi
 9d2:	4b                   	rex.WXB
 9d3:	45 59                	rex.RB pop %r9
 9d5:	4e                   	rex.WRX
 9d6:	41                   	rex.B
 9d7:	4d                   	rex.WRB
 9d8:	45 00 53 47          	add    %r10b,0x47(%r11)
 9dc:	58                   	pop    %rax
 9dd:	5f                   	pop    %rdi
 9de:	45 52                	rex.RB push %r10
 9e0:	52                   	push   %rdx
 9e1:	4f 52                	rex.WRXB push %r10
 9e3:	5f                   	pop    %rdi
 9e4:	4e                   	rex.WRX
 9e5:	4f 5f                	rex.WRXB pop %r15
 9e7:	44                   	rex.R
 9e8:	45 56                	rex.RB push %r14
 9ea:	49                   	rex.WB
 9eb:	43                   	rex.XB
 9ec:	45 00 6d 73          	add    %r13b,0x73(%r13)
 9f0:	5f                   	pop    %rdi
 9f1:	65 63 61 6c          	movsxd %gs:0x6c(%rcx),%esp
 9f5:	6c                   	insb   (%dx),%es:(%rdi)
 9f6:	5f                   	pop    %rdi
 9f7:	63 68 65             	movsxd 0x65(%rax),%ebp
 9fa:	63 6b 5f             	movsxd 0x5f(%rbx),%ebp
 9fd:	73 65                	jae    a64 <__ImageBase+0xa64>
 9ff:	63 72 65             	movsxd 0x65(%rdx),%esi
 a02:	74 5f                	je     a63 <__ImageBase+0xa63>
 a04:	74 00                	je     a06 <__ImageBase+0xa06>
 a06:	53                   	push   %rbx
 a07:	47 58                	rex.RXB pop %r8
 a09:	5f                   	pop    %rdi
 a0a:	45 52                	rex.RB push %r10
 a0c:	52                   	push   %rdx
 a0d:	4f 52                	rex.WRXB push %r10
 a0f:	5f                   	pop    %rdi
 a10:	46                   	rex.RX
 a11:	49                   	rex.WB
 a12:	4c                   	rex.WR
 a13:	45 5f                	rex.RB pop %r15
 a15:	4e                   	rex.WRX
 a16:	41                   	rex.B
 a17:	4d                   	rex.WRB
 a18:	45 5f                	rex.RB pop %r15
 a1a:	4d                   	rex.WRB
 a1b:	49 53                	rex.WB push %r11
 a1d:	4d                   	rex.WRB
 a1e:	41 54                	push   %r12
 a20:	43                   	rex.XB
 a21:	48 00 53 47          	rex.W add %dl,0x47(%rbx)
 a25:	58                   	pop    %rax
 a26:	5f                   	pop    %rdi
 a27:	45 52                	rex.RB push %r10
 a29:	52                   	push   %rdx
 a2a:	4f 52                	rex.WRXB push %r10
 a2c:	5f                   	pop    %rdi
 a2d:	4d                   	rex.WRB
 a2e:	43 5f                	rex.XB pop %r15
 a30:	55                   	push   %rbp
 a31:	53                   	push   %rbx
 a32:	45                   	rex.RB
 a33:	44 5f                	rex.R pop %rdi
 a35:	55                   	push   %rbp
 a36:	50                   	push   %rax
 a37:	00 67 5f             	add    %ah,0x5f(%rdi)
 a3a:	65 63 61 6c          	movsxd %gs:0x6c(%rcx),%esp
 a3e:	6c                   	insb   (%dx),%es:(%rdi)
 a3f:	5f                   	pop    %rdi
 a40:	74 61                	je     aa3 <__ImageBase+0xaa3>
 a42:	62                   	(bad)  
 a43:	6c                   	insb   (%dx),%es:(%rdi)
 a44:	65 00 53 47          	add    %dl,%gs:0x47(%rbx)
 a48:	58                   	pop    %rax
 a49:	5f                   	pop    %rdi
 a4a:	45 52                	rex.RB push %r10
 a4c:	52                   	push   %rdx
 a4d:	4f 52                	rex.WRXB push %r10
 a4f:	5f                   	pop    %rdi
 a50:	4d                   	rex.WRB
 a51:	41                   	rex.B
 a52:	43 5f                	rex.XB pop %r15
 a54:	4d                   	rex.WRB
 a55:	49 53                	rex.WB push %r11
 a57:	4d                   	rex.WRB
 a58:	41 54                	push   %r12
 a5a:	43                   	rex.XB
 a5b:	48 00 53 47          	rex.W add %dl,0x47(%rbx)
 a5f:	58                   	pop    %rax
 a60:	5f                   	pop    %rdi
 a61:	45 52                	rex.RB push %r10
 a63:	52                   	push   %rdx
 a64:	4f 52                	rex.WRXB push %r10
 a66:	5f                   	pop    %rdi
 a67:	4e                   	rex.WRX
 a68:	45 54                	rex.RB push %r12
 a6a:	57                   	push   %rdi
 a6b:	4f 52                	rex.WRXB push %r10
 a6d:	4b 5f                	rex.WXB pop %r15
 a6f:	46                   	rex.RX
 a70:	41                   	rex.B
 a71:	49                   	rex.WB
 a72:	4c 55                	rex.WR push %rbp
 a74:	52                   	push   %rdx
 a75:	45 00 53 47          	add    %r10b,0x47(%r11)
 a79:	58                   	pop    %rax
 a7a:	5f                   	pop    %rdi
 a7b:	45 52                	rex.RB push %r10
 a7d:	52                   	push   %rdx
 a7e:	4f 52                	rex.WRXB push %r10
 a80:	5f                   	pop    %rdi
 a81:	4e                   	rex.WRX
 a82:	44                   	rex.R
 a83:	45                   	rex.RB
 a84:	42 55                	rex.X push %rbp
 a86:	47 5f                	rex.RXB pop %r15
 a88:	45                   	rex.RB
 a89:	4e                   	rex.WRX
 a8a:	43                   	rex.XB
 a8b:	4c                   	rex.WR
 a8c:	41 56                	push   %r14
 a8e:	45 00 53 47          	add    %r10b,0x47(%r11)
 a92:	58                   	pop    %rax
 a93:	5f                   	pop    %rdi
 a94:	45 52                	rex.RB push %r10
 a96:	52                   	push   %rdx
 a97:	4f 52                	rex.WRXB push %r10
 a99:	5f                   	pop    %rdi
 a9a:	53                   	push   %rbx
 a9b:	54                   	push   %rsp
 a9c:	41                   	rex.B
 a9d:	43                   	rex.XB
 a9e:	4b 5f                	rex.WXB pop %r15
 aa0:	4f 56                	rex.WRXB push %r14
 aa2:	45 52                	rex.RB push %r10
 aa4:	52                   	push   %rdx
 aa5:	55                   	push   %rbp
 aa6:	4e 00 73 74          	rex.WRX add %r14b,0x74(%rbx)
 aaa:	61                   	(bad)  
 aab:	74 75                	je     b22 <__ImageBase+0xb22>
 aad:	73 00                	jae    aaf <__ImageBase+0xaaf>
 aaf:	73 67                	jae    b18 <__ImageBase+0xb18>
 ab1:	78 5f                	js     b12 <__ImageBase+0xb12>
 ab3:	65 63 61 6c          	movsxd %gs:0x6c(%rcx),%esp
 ab7:	6c                   	insb   (%dx),%es:(%rdi)
 ab8:	5f                   	pop    %rdi
 ab9:	63 68 65             	movsxd 0x65(%rax),%ebp
 abc:	63 6b 5f             	movsxd 0x5f(%rbx),%ebp
 abf:	73 65                	jae    b26 <__ImageBase+0xb26>
 ac1:	63 72 65             	movsxd 0x65(%rdx),%esi
 ac4:	74 00                	je     ac6 <__ImageBase+0xac6>
 ac6:	73 67                	jae    b2f <__ImageBase+0xb2f>
 ac8:	78 5f                	js     b29 <__ImageBase+0xb29>
 aca:	6f                   	outsl  %ds:(%rsi),(%dx)
 acb:	63 61 6c             	movsxd 0x6c(%rcx),%esp
 ace:	6c                   	insb   (%dx),%es:(%rdi)
 acf:	6f                   	outsl  %ds:(%rsi),(%dx)
 ad0:	63 00                	movsxd (%rax),%eax
 ad2:	53                   	push   %rbx
 ad3:	47 58                	rex.RXB pop %r8
 ad5:	5f                   	pop    %rdi
 ad6:	45 52                	rex.RB push %r10
 ad8:	52                   	push   %rdx
 ad9:	4f 52                	rex.WRXB push %r10
 adb:	5f                   	pop    %rdi
 adc:	49                   	rex.WB
 add:	4e 56                	rex.WRX push %rsi
 adf:	41                   	rex.B
 ae0:	4c                   	rex.WR
 ae1:	49                   	rex.WB
 ae2:	44 5f                	rex.R pop %rdi
 ae4:	41 54                	push   %r12
 ae6:	54                   	push   %rsp
 ae7:	5f                   	pop    %rdi
 ae8:	4b                   	rex.WXB
 ae9:	45 59                	rex.RB pop %r9
 aeb:	5f                   	pop    %rdi
 aec:	43                   	rex.XB
 aed:	45 52                	rex.RB push %r10
 aef:	54                   	push   %rsp
 af0:	5f                   	pop    %rdi
 af1:	44                   	rex.R
 af2:	41 54                	push   %r12
 af4:	41 00 53 47          	add    %dl,0x47(%r11)
 af8:	58                   	pop    %rax
 af9:	5f                   	pop    %rdi
 afa:	45 52                	rex.RB push %r10
 afc:	52                   	push   %rdx
 afd:	4f 52                	rex.WRXB push %r10
 aff:	5f                   	pop    %rdi
 b00:	55                   	push   %rbp
 b01:	4e 53                	rex.WRX push %rbx
 b03:	55                   	push   %rbp
 b04:	50                   	push   %rax
 b05:	50                   	push   %rax
 b06:	4f 52                	rex.WRXB push %r10
 b08:	54                   	push   %rsp
 b09:	45                   	rex.RB
 b0a:	44 5f                	rex.R pop %rdi
 b0c:	41 54                	push   %r12
 b0e:	54                   	push   %rsp
 b0f:	5f                   	pop    %rdi
 b10:	4b                   	rex.WXB
 b11:	45 59                	rex.RB pop %r9
 b13:	5f                   	pop    %rdi
 b14:	49                   	rex.WB
 b15:	44 00 6e 72          	add    %r13b,0x72(%rsi)
 b19:	5f                   	pop    %rdi
 b1a:	6f                   	outsl  %ds:(%rsi),(%dx)
 b1b:	63 61 6c             	movsxd 0x6c(%rcx),%esp
 b1e:	6c                   	insb   (%dx),%es:(%rdi)
 b1f:	00 53 47             	add    %dl,0x47(%rbx)
 b22:	58                   	pop    %rax
 b23:	5f                   	pop    %rdi
 b24:	45 52                	rex.RB push %r10
 b26:	52                   	push   %rdx
 b27:	4f 52                	rex.WRXB push %r10
 b29:	5f                   	pop    %rdi
 b2a:	41 54                	push   %r12
 b2c:	54                   	push   %rsp
 b2d:	5f                   	pop    %rdi
 b2e:	4b                   	rex.WXB
 b2f:	45 59                	rex.RB pop %r9
 b31:	5f                   	pop    %rdi
 b32:	43                   	rex.XB
 b33:	45 52                	rex.RB push %r10
 b35:	54                   	push   %rsp
 b36:	49                   	rex.WB
 b37:	46                   	rex.RX
 b38:	49                   	rex.WB
 b39:	43                   	rex.XB
 b3a:	41 54                	push   %r12
 b3c:	49                   	rex.WB
 b3d:	4f                   	rex.WRXB
 b3e:	4e 5f                	rex.WRX pop %rdi
 b40:	46                   	rex.RX
 b41:	41                   	rex.B
 b42:	49                   	rex.WB
 b43:	4c 55                	rex.WR push %rbp
 b45:	52                   	push   %rdx
 b46:	45 00 53 47          	add    %r10b,0x47(%r11)
 b4a:	58                   	pop    %rax
 b4b:	5f                   	pop    %rdi
 b4c:	45 52                	rex.RB push %r10
 b4e:	52                   	push   %rdx
 b4f:	4f 52                	rex.WRXB push %r10
 b51:	5f                   	pop    %rdi
 b52:	55                   	push   %rbp
 b53:	50                   	push   %rax
 b54:	44                   	rex.R
 b55:	41 54                	push   %r12
 b57:	45 5f                	rex.RB pop %r15
 b59:	4e                   	rex.WRX
 b5a:	45                   	rex.RB
 b5b:	45                   	rex.RB
 b5c:	44                   	rex.R
 b5d:	45                   	rex.RB
 b5e:	44 00 53 47          	add    %r10b,0x47(%rbx)
 b62:	58                   	pop    %rax
 b63:	5f                   	pop    %rdi
 b64:	45 52                	rex.RB push %r10
 b66:	52                   	push   %rdx
 b67:	4f 52                	rex.WRXB push %r10
 b69:	5f                   	pop    %rdi
 b6a:	4d                   	rex.WRB
 b6b:	45                   	rex.RB
 b6c:	4d                   	rex.WRB
 b6d:	4f 52                	rex.WRXB push %r10
 b6f:	59                   	pop    %rcx
 b70:	5f                   	pop    %rdi
 b71:	4d                   	rex.WRB
 b72:	41 50                	push   %r8
 b74:	5f                   	pop    %rdi
 b75:	43                   	rex.XB
 b76:	4f                   	rex.WRXB
 b77:	4e                   	rex.WRX
 b78:	46                   	rex.RX
 b79:	4c                   	rex.WR
 b7a:	49                   	rex.WB
 b7b:	43 54                	rex.XB push %r12
 b7d:	00 53 47             	add    %dl,0x47(%rbx)
 b80:	58                   	pop    %rax
 b81:	5f                   	pop    %rdi
 b82:	45 52                	rex.RB push %r10
 b84:	52                   	push   %rdx
 b85:	4f 52                	rex.WRXB push %r10
 b87:	5f                   	pop    %rdi
 b88:	4f 55                	rex.WRXB push %r13
 b8a:	54                   	push   %rsp
 b8b:	5f                   	pop    %rdi
 b8c:	4f                   	rex.WRXB
 b8d:	46 5f                	rex.RX pop %rdi
 b8f:	4d                   	rex.WRB
 b90:	45                   	rex.RB
 b91:	4d                   	rex.WRB
 b92:	4f 52                	rex.WRXB push %r10
 b94:	59                   	pop    %rcx
	...

Disassembly of section .debug_line_str:

0000000000000000 <.debug_line_str>:
   0:	65 6e                	outsb  %gs:(%rsi),(%dx)
   2:	63 6c 2e 63          	movsxd 0x63(%rsi,%rbp,1),%ebp
   6:	00 2f                	add    %ch,(%rdi)
   8:	68 6f 6d 65 2f       	push   $0x2f656d6f
   d:	6a 61                	push   $0x61
   f:	6e                   	outsb  %ds:(%rsi),(%dx)
  10:	2f                   	(bad)  
  11:	70 6f                	jo     82 <__ImageBase+0x82>
  13:	69 6e 74 65 72 73 73 	imul   $0x73737265,0x74(%rsi),%ebp
  1a:	2f                   	(bad)  
  1b:	45 6e                	rex.RB outsb %ds:(%rsi),(%dx)
  1d:	63 6c 61 76          	movsxd 0x76(%rcx,%riz,2),%ebp
  21:	65 00 2f             	add    %ch,%gs:(%rdi)
  24:	6f                   	outsl  %ds:(%rsi),(%dx)
  25:	70 74                	jo     9b <__ImageBase+0x9b>
  27:	2f                   	(bad)  
  28:	69 6e 74 65 6c 2f 73 	imul   $0x732f6c65,0x74(%rsi),%ebp
  2f:	67 78 73             	addr32 js a5 <__ImageBase+0xa5>
  32:	64 6b 2f 69          	imul   $0x69,%fs:(%rdi),%ebp
  36:	6e                   	outsb  %ds:(%rsi),(%dx)
  37:	63 6c 75 64          	movsxd 0x64(%rbp,%rsi,2),%ebp
  3b:	65 2f                	gs (bad) 
  3d:	74 6c                	je     ab <__ImageBase+0xab>
  3f:	69 62 63 2f 73 79 73 	imul   $0x7379732f,0x63(%rdx),%esp
  46:	00 2f                	add    %ch,(%rdi)
  48:	6f                   	outsl  %ds:(%rsi),(%dx)
  49:	70 74                	jo     bf <__ImageBase+0xbf>
  4b:	2f                   	(bad)  
  4c:	69 6e 74 65 6c 2f 73 	imul   $0x732f6c65,0x74(%rsi),%ebp
  53:	67 78 73             	addr32 js c9 <__ImageBase+0xc9>
  56:	64 6b 2f 69          	imul   $0x69,%fs:(%rdi),%ebp
  5a:	6e                   	outsb  %ds:(%rsi),(%dx)
  5b:	63 6c 75 64          	movsxd 0x64(%rbp,%rsi,2),%ebp
  5f:	65 2f                	gs (bad) 
  61:	74 6c                	je     cf <__ImageBase+0xcf>
  63:	69 62 63 00 2e 2e 00 	imul   $0x2e2e00,0x63(%rdx),%esp
  6a:	2f                   	(bad)  
  6b:	6f                   	outsl  %ds:(%rsi),(%dx)
  6c:	70 74                	jo     e2 <__ImageBase+0xe2>
  6e:	2f                   	(bad)  
  6f:	69 6e 74 65 6c 2f 73 	imul   $0x732f6c65,0x74(%rsi),%ebp
  76:	67 78 73             	addr32 js ec <__ImageBase+0xec>
  79:	64 6b 2f 69          	imul   $0x69,%fs:(%rdi),%ebp
  7d:	6e                   	outsb  %ds:(%rsi),(%dx)
  7e:	63 6c 75 64          	movsxd 0x64(%rbp,%rsi,2),%ebp
  82:	65 00 5f 74          	add    %bl,%gs:0x74(%rdi)
  86:	79 70                	jns    f8 <__ImageBase+0xf8>
  88:	65 73 2e             	gs jae b9 <__ImageBase+0xb9>
  8b:	68 00 73 74 64       	push   $0x64747300
  90:	69 6e 74 2e 68 00 73 	imul   $0x7300682e,0x74(%rsi),%ebp
  97:	74 72                	je     10b <__ImageBase+0x10b>
  99:	69 6e 67 2e 68 00 6d 	imul   $0x6d00682e,0x67(%rsi),%ebp
  a0:	79 73                	jns    115 <__ImageBase+0x115>
  a2:	74 72                	je     116 <__ImageBase+0x116>
  a4:	75 63                	jne    109 <__ImageBase+0x109>
  a6:	74 2e                	je     d6 <__ImageBase+0xd6>
  a8:	68 00 73 67 78       	push   $0x78677300
  ad:	5f                   	pop    %rdi
  ae:	74 72                	je     122 <__ImageBase+0x122>
  b0:	74 73                	je     125 <__ImageBase+0x125>
  b2:	2e 68 00 61 73 6d    	cs push $0x6d736100
  b8:	2e 53                	cs push %rbx
  ba:	00 65 6e             	add    %ah,0x6e(%rbp)
  bd:	63 6c 5f 74          	movsxd 0x74(%rdi,%rbx,2),%ebp
  c1:	2e 63 00             	cs movsxd (%rax),%eax
  c4:	77 63                	ja     129 <__ImageBase+0x129>
  c6:	68 61 72 2e 68       	push   $0x682e7261
  cb:	00 73 67             	add    %dh,0x67(%rbx)
  ce:	78 5f                	js     12f <__ImageBase+0x12f>
  d0:	65 72 72             	gs jb  145 <__ImageBase+0x145>
  d3:	6f                   	outsl  %ds:(%rsi),(%dx)
  d4:	72 2e                	jb     104 <__ImageBase+0x104>
  d6:	68 00 65 6e 63       	push   $0x636e6500
  db:	6c                   	insb   (%dx),%es:(%rdi)
  dc:	5f                   	pop    %rdi
  dd:	74 2e                	je     10d <__ImageBase+0x10d>
  df:	68 00 73 67 78       	push   $0x78677300
  e4:	5f                   	pop    %rdi
  e5:	65 64 67 65 72 38    	gs fs addr32 gs jb 123 <__ImageBase+0x123>
  eb:	72 2e                	jb     11b <__ImageBase+0x11b>
  ed:	68 00 6d 62 75       	push   $0x75626d00
  f2:	73 61                	jae    155 <__ImageBase+0x155>
  f4:	66 65 63 72 74       	movsxd %gs:0x74(%rdx),%si
  f9:	2e 68 00 73 67 78    	cs push $0x78677300
  ff:	5f                   	pop    %rdi
 100:	6c                   	insb   (%dx),%es:(%rdi)
 101:	66 65 6e             	data16 outsb %gs:(%rsi),(%dx)
 104:	63 65 2e             	movsxd 0x2e(%rbp),%esp
 107:	68                   	.byte 0x68
	...

Disassembly of section .debug_loclists:

0000000000000000 <.debug_loclists>:
   0:	5e                   	pop    %rsi
   1:	00 00                	add    %al,(%rax)
   3:	00 05 00 08 00 00    	add    %al,0x800(%rip)        # 809 <__ImageBase+0x809>
	...
  11:	00 00                	add    %al,(%rax)
  13:	00 04 af             	add    %al,(%rdi,%rbp,4)
  16:	01 c2                	add    %eax,%edx
  18:	01 01                	add    %eax,(%rcx)
  1a:	55                   	push   %rbp
  1b:	04 c2                	add    $0xc2,%al
  1d:	01 c4                	add    %eax,%esp
  1f:	01 04 a3             	add    %eax,(%rbx,%riz,4)
  22:	01 55 9f             	add    %edx,-0x61(%rbp)
  25:	04 c4                	add    $0xc4,%al
  27:	01 cb                	add    %ecx,%ebx
  29:	01 01                	add    %eax,(%rcx)
  2b:	55                   	push   %rbp
  2c:	04 cb                	add    $0xcb,%al
  2e:	01 d2                	add    %edx,%edx
  30:	01 04 a3             	add    %eax,(%rbx,%riz,4)
  33:	01 55 9f             	add    %edx,-0x61(%rbp)
  36:	00 00                	add    %al,(%rax)
  38:	00 00                	add    %al,(%rax)
  3a:	00 04 5c             	add    %al,(%rsp,%rbx,2)
  3d:	6d                   	insl   (%dx),%es:(%rdi)
  3e:	01 55 04             	add    %edx,0x4(%rbp)
  41:	6d                   	insl   (%dx),%es:(%rdi)
  42:	79 04                	jns    48 <__ImageBase+0x48>
  44:	a3 01 55 9f 00 00 00 	movabs %eax,0x9f5501
  4b:	00 00 
  4d:	00 00                	add    %al,(%rax)
  4f:	04 00                	add    $0x0,%al
  51:	11 01                	adc    %eax,(%rcx)
  53:	55                   	push   %rbp
  54:	04 11                	add    $0x11,%al
  56:	5b                   	pop    %rbx
  57:	01 53 04             	add    %edx,0x4(%rbx)
  5a:	5b                   	pop    %rbx
  5b:	5c                   	pop    %rsp
  5c:	04 a3                	add    $0xa3,%al
  5e:	01 55 9f             	add    %edx,-0x61(%rbp)
  61:	00 2e                	add    %ch,(%rsi)
  63:	02 00                	add    (%rax),%al
  65:	00 05 00 08 00 00    	add    %al,0x800(%rip)        # 86b <__ImageBase+0x86b>
	...
  73:	00 04 ad 04 cf 04 01 	add    %al,0x104cf04(,%rbp,4)
  7a:	55                   	push   %rbp
  7b:	04 cf                	add    $0xcf,%al
  7d:	04 b8                	add    $0xb8,%al
  7f:	06                   	(bad)  
  80:	01 53 04             	add    %edx,0x4(%rbx)
  83:	b8 06 be 06 04       	mov    $0x406be06,%eax
  88:	a3 01 55 9f 00 00 00 	movabs %eax,0xad040000009f5501
  8f:	04 ad 
  91:	04 cf                	add    $0xcf,%al
  93:	04 01                	add    $0x1,%al
  95:	54                   	push   %rsp
  96:	00 01                	add    %al,(%rcx)
  98:	00 00                	add    %al,(%rax)
  9a:	00 00                	add    %al,(%rax)
  9c:	01 04 b1             	add    %eax,(%rcx,%rsi,4)
  9f:	04 aa                	add    $0xaa,%al
  a1:	06                   	(bad)  
  a2:	02 30                	add    (%rax),%dh
  a4:	9f                   	lahf   
  a5:	04 aa                	add    $0xaa,%al
  a7:	06                   	(bad)  
  a8:	ae                   	scas   %es:(%rdi),%al
  a9:	06                   	(bad)  
  aa:	01 50 04             	add    %edx,0x4(%rax)
  ad:	ae                   	scas   %es:(%rdi),%al
  ae:	06                   	(bad)  
  af:	b3 06                	mov    $0x6,%bl
  b1:	03 91 b4 7f 00 01    	add    0x1007fb4(%rcx),%edx
  b7:	00 00                	add    %al,(%rax)
  b9:	01 01                	add    %eax,(%rcx)
  bb:	00 00                	add    %al,(%rax)
  bd:	01 04 d4             	add    %eax,(%rsp,%rdx,8)
  c0:	04 a1                	add    $0xa1,%al
  c2:	05 02 30 9f 04       	add    $0x49f3002,%eax
  c7:	b0 05                	mov    $0x5,%al
  c9:	b0 05                	mov    $0x5,%al
  cb:	02 30                	add    (%rax),%dh
  cd:	9f                   	lahf   
  ce:	04 b0                	add    $0xb0,%al
  d0:	05 b4 05 01 50       	add    $0x500105b4,%eax
  d5:	04 b4                	add    $0xb4,%al
  d7:	05 b3 06 01 56       	add    $0x560106b3,%eax
  dc:	00 02                	add    %al,(%rdx)
	...
  e6:	01 04 d4             	add    %eax,(%rsp,%rdx,8)
  e9:	04 f2                	add    $0xf2,%al
  eb:	04 02                	add    $0x2,%al
  ed:	40 9f                	rex lahf 
  ef:	04 fc                	add    $0xfc,%al
  f1:	04 83                	add    $0x83,%al
  f3:	05 02 40 9f 04       	add    $0x49f4002,%eax
  f8:	83 05 91 05 01 55 04 	addl   $0x4,0x55010591(%rip)        # 55010690 <_end+0x54fe5680>
  ff:	91                   	xchg   %eax,%ecx
 100:	05 a1 05 03 7d       	add    $0x7d0305a1,%eax
 105:	10 9f 04 b0 05 b9    	adc    %bl,-0x46fa4ffc(%rdi)
 10b:	05 03 7d 10 9f       	add    $0x9f107d03,%eax
 110:	00 00                	add    %al,(%rax)
 112:	00 00                	add    %al,(%rax)
 114:	00 00                	add    %al,(%rax)
 116:	00 04 c4             	add    %al,(%rsp,%rax,8)
 119:	02 e0                	add    %al,%ah
 11b:	02 01                	add    (%rcx),%al
 11d:	55                   	push   %rbp
 11e:	04 e0                	add    $0xe0,%al
 120:	02 a7 04 01 53 04    	add    0x4530104(%rdi),%ah
 126:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
 127:	04 ad                	add    $0xad,%al
 129:	04 04                	add    $0x4,%al
 12b:	a3 01 55 9f 00 01 00 	movabs %eax,0x1009f5501
 132:	00 00 
 134:	00 01                	add    %al,(%rcx)
 136:	04 c8                	add    $0xc8,%al
 138:	02 99 04 02 30 9f    	add    -0x60cffdfc(%rcx),%bl
 13e:	04 99                	add    $0x99,%al
 140:	04 9d                	add    $0x9d,%al
 142:	04 01                	add    $0x1,%al
 144:	50                   	push   %rax
 145:	04 9d                	add    $0x9d,%al
 147:	04 a2                	add    $0xa2,%al
 149:	04 03                	add    $0x3,%al
 14b:	91                   	xchg   %eax,%ecx
 14c:	bc 7f 00 01 00       	mov    $0x1007f,%esp
 151:	00 01                	add    %al,(%rcx)
 153:	01 00                	add    %eax,(%rax)
 155:	00 01                	add    %al,(%rcx)
 157:	04 e5                	add    $0xe5,%al
 159:	02 b2 03 02 30 9f    	add    -0x60cffdfd(%rdx),%dh
 15f:	04 be                	add    $0xbe,%al
 161:	03 be 03 02 30 9f    	add    -0x60cffdfd(%rsi),%edi
 167:	04 be                	add    $0xbe,%al
 169:	03 c2                	add    %edx,%eax
 16b:	03 01                	add    (%rcx),%eax
 16d:	50                   	push   %rax
 16e:	04 c2                	add    $0xc2,%al
 170:	03 a2 04 01 5c 00    	add    0x5c0104(%rdx),%esp
 176:	02 00                	add    (%rax),%al
 178:	00 00                	add    %al,(%rax)
 17a:	00 00                	add    %al,(%rax)
 17c:	00 00                	add    %al,(%rax)
 17e:	00 01                	add    %al,(%rcx)
 180:	04 e5                	add    $0xe5,%al
 182:	02 83 03 02 38 9f    	add    -0x60c7fdfd(%rbx),%al
 188:	04 8d                	add    $0x8d,%al
 18a:	03 94 03 02 38 9f 04 	add    0x49f3802(%rbx,%rax,1),%edx
 191:	94                   	xchg   %eax,%esp
 192:	03 a2 03 01 55 04    	add    0x4550103(%rdx),%esp
 198:	a2 03 b2 03 03 7d 08 	movabs %al,0x49f087d0303b203
 19f:	9f 04 
 1a1:	be 03 c7 03 03       	mov    $0x303c703,%esi
 1a6:	7d 08                	jge    1b0 <__ImageBase+0x1b0>
 1a8:	9f                   	lahf   
 1a9:	00 00                	add    %al,(%rax)
 1ab:	00 00                	add    %al,(%rax)
 1ad:	00 00                	add    %al,(%rax)
 1af:	00 04 00             	add    %al,(%rax,%rax,1)
 1b2:	0e                   	(bad)  
 1b3:	01 55 04             	add    %edx,0x4(%rbp)
 1b6:	0e                   	(bad)  
 1b7:	13 04 a3             	adc    (%rbx,%riz,4),%eax
 1ba:	01 55 9f             	add    %edx,-0x61(%rbp)
 1bd:	04 13                	add    $0x13,%al
 1bf:	19 01                	sbb    %eax,(%rcx)
 1c1:	55                   	push   %rbp
	...
 1ca:	00 04 19             	add    %al,(%rcx,%rbx,1)
 1cd:	33 01                	xor    (%rcx),%eax
 1cf:	55                   	push   %rbp
 1d0:	04 33                	add    $0x33,%al
 1d2:	74 01                	je     1d5 <__ImageBase+0x1d5>
 1d4:	53                   	push   %rbx
 1d5:	04 74                	add    $0x74,%al
 1d7:	75 04                	jne    1dd <__ImageBase+0x1dd>
 1d9:	a3 01 55 9f 04 75 7b 	movabs %eax,0x55017b75049f5501
 1e0:	01 55 
 1e2:	00 00                	add    %al,(%rax)
 1e4:	00 04 3f             	add    %al,(%rdi,%rdi,1)
 1e7:	6f                   	outsl  %ds:(%rsi),(%dx)
 1e8:	01 53 00             	add    %edx,0x0(%rbx)
 1eb:	01 00                	add    %eax,(%rax)
 1ed:	04 42                	add    $0x42,%al
 1ef:	6f                   	outsl  %ds:(%rsi),(%dx)
 1f0:	01 53 00             	add    %edx,0x0(%rbx)
 1f3:	01 00                	add    %eax,(%rax)
 1f5:	04 64                	add    $0x64,%al
 1f7:	6f                   	outsl  %ds:(%rsi),(%dx)
 1f8:	02 30                	add    (%rax),%dh
 1fa:	9f                   	lahf   
	...
 203:	00 04 7b             	add    %al,(%rbx,%rdi,2)
 206:	95                   	xchg   %eax,%ebp
 207:	01 01                	add    %eax,(%rcx)
 209:	55                   	push   %rbp
 20a:	04 95                	add    $0x95,%al
 20c:	01 da                	add    %ebx,%edx
 20e:	01 01                	add    %eax,(%rcx)
 210:	53                   	push   %rbx
 211:	04 da                	add    $0xda,%al
 213:	01 db                	add    %ebx,%ebx
 215:	01 04 a3             	add    %eax,(%rbx,%riz,4)
 218:	01 55 9f             	add    %edx,-0x61(%rbp)
 21b:	04 db                	add    $0xdb,%al
 21d:	01 e1                	add    %esp,%ecx
 21f:	01 01                	add    %eax,(%rcx)
 221:	55                   	push   %rbp
 222:	00 00                	add    %al,(%rax)
 224:	00 04 a1             	add    %al,(%rcx,%riz,4)
 227:	01 d5                	add    %edx,%ebp
 229:	01 01                	add    %eax,(%rcx)
 22b:	53                   	push   %rbx
 22c:	00 01                	add    %al,(%rcx)
 22e:	00 04 a4             	add    %al,(%rsp,%riz,4)
 231:	01 d5                	add    %edx,%ebp
 233:	01 01                	add    %eax,(%rcx)
 235:	53                   	push   %rbx
 236:	00 01                	add    %al,(%rcx)
 238:	00 04 c6             	add    %al,(%rsi,%rax,8)
 23b:	01 d5                	add    %edx,%ebp
 23d:	01 02                	add    %eax,(%rdx)
 23f:	30 9f 00 00 00 00    	xor    %bl,0x0(%rdi)
 245:	00 00                	add    %al,(%rax)
 247:	00 00                	add    %al,(%rax)
 249:	00 04 e1             	add    %al,(%rcx,%riz,8)
 24c:	01 fb                	add    %edi,%ebx
 24e:	01 01                	add    %eax,(%rcx)
 250:	55                   	push   %rbp
 251:	04 fb                	add    $0xfb,%al
 253:	01 bd 02 01 53 04    	add    %edi,0x4530102(%rbp)
 259:	bd 02 be 02 04       	mov    $0x402be02,%ebp
 25e:	a3 01 55 9f 04 be 02 	movabs %eax,0x2c402be049f5501
 265:	c4 02 
 267:	01 55 00             	add    %edx,0x0(%rbp)
 26a:	00 00                	add    %al,(%rax)
 26c:	04 87                	add    $0x87,%al
 26e:	02 b8 02 01 53 00    	add    0x530102(%rax),%bh
 274:	01 00                	add    %eax,(%rax)
 276:	04 8a                	add    $0x8a,%al
 278:	02 b8 02 01 53 00    	add    0x530102(%rax),%bh
 27e:	01 00                	add    %eax,(%rax)
 280:	04 ac                	add    $0xac,%al
 282:	02 b8 02 02 30 9f    	add    -0x60cffdfe(%rax),%bh
 288:	00 02                	add    %al,(%rdx)
 28a:	00 04 ac             	add    %al,(%rsp,%rbp,4)
 28d:	02 b5 02 02 91 68    	add    0x68910202(%rbp),%dh
	...
