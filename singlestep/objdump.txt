
Enclave/encl.so:     file format elf64-x86-64


Disassembly of section .text:

0000000000002000 <trts_access_version_dummy1>:
    2000:	f3 0f 1e fa          	endbr64 
    2004:	48 8d 05 45 62 01 00 	lea    0x16245(%rip),%rax        # 18250 <sgx_trts_version>
    200b:	c6 00 73             	movb   $0x73,(%rax)
    200e:	c3                   	ret    
    200f:	90                   	nop

0000000000002010 <tstdc_access_version_dummy1>:
    2010:	f3 0f 1e fa          	endbr64 
    2014:	c6 05 c5 80 01 00 73 	movb   $0x73,0x180c5(%rip)        # 1a0e0 <sgx_tstdc_version>
    201b:	48 8d 05 be 80 01 00 	lea    0x180be(%rip),%rax        # 1a0e0 <sgx_tstdc_version>
    2022:	c3                   	ret    
    2023:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    202a:	00 00 00 
    202d:	0f 1f 00             	nopl   (%rax)

0000000000002030 <tcrypto_access_version_dummy1>:
    2030:	f3 0f 1e fa          	endbr64 
    2034:	c6 05 c5 80 01 00 73 	movb   $0x73,0x180c5(%rip)        # 1a100 <sgx_tcrypto_version>
    203b:	48 8d 05 be 80 01 00 	lea    0x180be(%rip),%rax        # 1a100 <sgx_tcrypto_version>
    2042:	c3                   	ret    
    2043:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    204a:	00 00 00 
    204d:	0f 1f 00             	nopl   (%rax)

0000000000002050 <tservice_access_version_dummy1>:
    2050:	f3 0f 1e fa          	endbr64 
    2054:	c6 05 c5 80 01 00 73 	movb   $0x73,0x180c5(%rip)        # 1a120 <sgx_tservice_version>
    205b:	48 8d 05 be 80 01 00 	lea    0x180be(%rip),%rax        # 1a120 <sgx_tservice_version>
    2062:	c3                   	ret    

0000000000002063 <ecall_lookup>:
    2063:	f3 0f 1e fa          	endbr64 
    2067:	48 63 05 f2 80 01 00 	movslq 0x180f2(%rip),%rax        # 1a160 <idx>
    206e:	83 f8 09             	cmp    $0x9,%eax
    2071:	7f 0a                	jg     207d <ecall_lookup+0x1a>
    2073:	48 8d 15 86 5f 01 00 	lea    0x15f86(%rip),%rdx        # 18000 <array>
    207a:	8b 04 82             	mov    (%rdx,%rax,4),%eax
    207d:	c3                   	ret    

000000000000207e <ecall_increase>:
    207e:	f3 0f 1e fa          	endbr64 
    2082:	50                   	push   %rax
    2083:	48 8d 3d 76 0f 01 00 	lea    0x10f76(%rip),%rdi        # 13000 <second_phase+0xc50>
    208a:	31 c0                	xor    %eax,%eax
    208c:	e8 0d 20 00 00       	call   409e <ocall_print>
    2091:	8b 05 c9 80 01 00    	mov    0x180c9(%rip),%eax        # 1a160 <idx>
    2097:	48 8d 3d 67 0f 01 00 	lea    0x10f67(%rip),%rdi        # 13005 <second_phase+0xc55>
    209e:	8d 70 01             	lea    0x1(%rax),%esi
    20a1:	31 c0                	xor    %eax,%eax
    20a3:	89 35 b7 80 01 00    	mov    %esi,0x180b7(%rip)        # 1a160 <idx>
    20a9:	48 63 f6             	movslq %esi,%rsi
    20ac:	5a                   	pop    %rdx
    20ad:	e9 d5 20 00 00       	jmp    4187 <ocall_print_address>
    20b2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    20b9:	00 00 00 
    20bc:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    20c3:	00 00 00 
    20c6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    20cd:	00 00 00 
    20d0:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    20d7:	00 00 00 
    20da:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    20e1:	00 00 00 
    20e4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    20eb:	00 00 00 
    20ee:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    20f5:	00 00 00 
    20f8:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    20ff:	00 00 00 
    2102:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2109:	00 00 00 
    210c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2113:	00 00 00 
    2116:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    211d:	00 00 00 
    2120:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2127:	00 00 00 
    212a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2131:	00 00 00 
    2134:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    213b:	00 00 00 
    213e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2145:	00 00 00 
    2148:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    214f:	00 00 00 
    2152:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2159:	00 00 00 
    215c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2163:	00 00 00 
    2166:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    216d:	00 00 00 
    2170:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2177:	00 00 00 
    217a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2181:	00 00 00 
    2184:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    218b:	00 00 00 
    218e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2195:	00 00 00 
    2198:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    219f:	00 00 00 
    21a2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21a9:	00 00 00 
    21ac:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21b3:	00 00 00 
    21b6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21bd:	00 00 00 
    21c0:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21c7:	00 00 00 
    21ca:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21d1:	00 00 00 
    21d4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21db:	00 00 00 
    21de:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21e5:	00 00 00 
    21e8:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21ef:	00 00 00 
    21f2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21f9:	00 00 00 
    21fc:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2203:	00 00 00 
    2206:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    220d:	00 00 00 
    2210:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2217:	00 00 00 
    221a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2221:	00 00 00 
    2224:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    222b:	00 00 00 
    222e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2235:	00 00 00 
    2238:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    223f:	00 00 00 
    2242:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2249:	00 00 00 
    224c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2253:	00 00 00 
    2256:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    225d:	00 00 00 
    2260:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2267:	00 00 00 
    226a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2271:	00 00 00 
    2274:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    227b:	00 00 00 
    227e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2285:	00 00 00 
    2288:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    228f:	00 00 00 
    2292:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2299:	00 00 00 
    229c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22a3:	00 00 00 
    22a6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22ad:	00 00 00 
    22b0:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22b7:	00 00 00 
    22ba:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22c1:	00 00 00 
    22c4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22cb:	00 00 00 
    22ce:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22d5:	00 00 00 
    22d8:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22df:	00 00 00 
    22e2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22e9:	00 00 00 
    22ec:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22f3:	00 00 00 
    22f6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22fd:	00 00 00 
    2300:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2307:	00 00 00 
    230a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2311:	00 00 00 
    2314:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    231b:	00 00 00 
    231e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2325:	00 00 00 
    2328:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    232f:	00 00 00 
    2332:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2339:	00 00 00 
    233c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2343:	00 00 00 
    2346:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    234d:	00 00 00 
    2350:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2357:	00 00 00 
    235a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2361:	00 00 00 
    2364:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    236b:	00 00 00 
    236e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2375:	00 00 00 
    2378:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    237f:	00 00 00 
    2382:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2389:	00 00 00 
    238c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2393:	00 00 00 
    2396:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    239d:	00 00 00 
    23a0:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23a7:	00 00 00 
    23aa:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23b1:	00 00 00 
    23b4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23bb:	00 00 00 
    23be:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23c5:	00 00 00 
    23c8:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23cf:	00 00 00 
    23d2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23d9:	00 00 00 
    23dc:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23e3:	00 00 00 
    23e6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23ed:	00 00 00 
    23f0:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23f7:	00 00 00 
    23fa:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2401:	00 00 00 
    2404:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    240b:	00 00 00 
    240e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2415:	00 00 00 
    2418:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    241f:	00 00 00 
    2422:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2429:	00 00 00 
    242c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2433:	00 00 00 
    2436:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    243d:	00 00 00 
    2440:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2447:	00 00 00 
    244a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2451:	00 00 00 
    2454:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    245b:	00 00 00 
    245e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2465:	00 00 00 
    2468:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    246f:	00 00 00 
    2472:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2479:	00 00 00 
    247c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2483:	00 00 00 
    2486:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    248d:	00 00 00 
    2490:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2497:	00 00 00 
    249a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24a1:	00 00 00 
    24a4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24ab:	00 00 00 
    24ae:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24b5:	00 00 00 
    24b8:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24bf:	00 00 00 
    24c2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24c9:	00 00 00 
    24cc:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24d3:	00 00 00 
    24d6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24dd:	00 00 00 
    24e0:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24e7:	00 00 00 
    24ea:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24f1:	00 00 00 
    24f4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24fb:	00 00 00 
    24fe:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2505:	00 00 00 
    2508:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    250f:	00 00 00 
    2512:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2519:	00 00 00 
    251c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2523:	00 00 00 
    2526:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    252d:	00 00 00 
    2530:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2537:	00 00 00 
    253a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2541:	00 00 00 
    2544:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    254b:	00 00 00 
    254e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2555:	00 00 00 
    2558:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    255f:	00 00 00 
    2562:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2569:	00 00 00 
    256c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2573:	00 00 00 
    2576:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    257d:	00 00 00 
    2580:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2587:	00 00 00 
    258a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2591:	00 00 00 
    2594:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    259b:	00 00 00 
    259e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25a5:	00 00 00 
    25a8:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25af:	00 00 00 
    25b2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25b9:	00 00 00 
    25bc:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25c3:	00 00 00 
    25c6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25cd:	00 00 00 
    25d0:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25d7:	00 00 00 
    25da:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25e1:	00 00 00 
    25e4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25eb:	00 00 00 
    25ee:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25f5:	00 00 00 
    25f8:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25ff:	00 00 00 
    2602:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2609:	00 00 00 
    260c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2613:	00 00 00 
    2616:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    261d:	00 00 00 
    2620:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2627:	00 00 00 
    262a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2631:	00 00 00 
    2634:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    263b:	00 00 00 
    263e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2645:	00 00 00 
    2648:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    264f:	00 00 00 
    2652:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2659:	00 00 00 
    265c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2663:	00 00 00 
    2666:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    266d:	00 00 00 
    2670:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2677:	00 00 00 
    267a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2681:	00 00 00 
    2684:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    268b:	00 00 00 
    268e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2695:	00 00 00 
    2698:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    269f:	00 00 00 
    26a2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26a9:	00 00 00 
    26ac:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26b3:	00 00 00 
    26b6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26bd:	00 00 00 
    26c0:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26c7:	00 00 00 
    26ca:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26d1:	00 00 00 
    26d4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26db:	00 00 00 
    26de:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26e5:	00 00 00 
    26e8:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26ef:	00 00 00 
    26f2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26f9:	00 00 00 
    26fc:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2703:	00 00 00 
    2706:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    270d:	00 00 00 
    2710:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2717:	00 00 00 
    271a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2721:	00 00 00 
    2724:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    272b:	00 00 00 
    272e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2735:	00 00 00 
    2738:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    273f:	00 00 00 
    2742:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2749:	00 00 00 
    274c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2753:	00 00 00 
    2756:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    275d:	00 00 00 
    2760:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2767:	00 00 00 
    276a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2771:	00 00 00 
    2774:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    277b:	00 00 00 
    277e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2785:	00 00 00 
    2788:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    278f:	00 00 00 
    2792:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2799:	00 00 00 
    279c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27a3:	00 00 00 
    27a6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27ad:	00 00 00 
    27b0:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27b7:	00 00 00 
    27ba:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27c1:	00 00 00 
    27c4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27cb:	00 00 00 
    27ce:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27d5:	00 00 00 
    27d8:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27df:	00 00 00 
    27e2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27e9:	00 00 00 
    27ec:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27f3:	00 00 00 
    27f6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27fd:	00 00 00 
    2800:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2807:	00 00 00 
    280a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2811:	00 00 00 
    2814:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    281b:	00 00 00 
    281e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2825:	00 00 00 
    2828:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    282f:	00 00 00 
    2832:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2839:	00 00 00 
    283c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2843:	00 00 00 
    2846:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    284d:	00 00 00 
    2850:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2857:	00 00 00 
    285a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2861:	00 00 00 
    2864:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    286b:	00 00 00 
    286e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2875:	00 00 00 
    2878:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    287f:	00 00 00 
    2882:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2889:	00 00 00 
    288c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2893:	00 00 00 
    2896:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    289d:	00 00 00 
    28a0:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28a7:	00 00 00 
    28aa:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28b1:	00 00 00 
    28b4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28bb:	00 00 00 
    28be:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28c5:	00 00 00 
    28c8:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28cf:	00 00 00 
    28d2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28d9:	00 00 00 
    28dc:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28e3:	00 00 00 
    28e6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28ed:	00 00 00 
    28f0:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28f7:	00 00 00 
    28fa:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2901:	00 00 00 
    2904:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    290b:	00 00 00 
    290e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2915:	00 00 00 
    2918:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    291f:	00 00 00 
    2922:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2929:	00 00 00 
    292c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2933:	00 00 00 
    2936:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    293d:	00 00 00 
    2940:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2947:	00 00 00 
    294a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2951:	00 00 00 
    2954:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    295b:	00 00 00 
    295e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2965:	00 00 00 
    2968:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    296f:	00 00 00 
    2972:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2979:	00 00 00 
    297c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2983:	00 00 00 
    2986:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    298d:	00 00 00 
    2990:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2997:	00 00 00 
    299a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29a1:	00 00 00 
    29a4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29ab:	00 00 00 
    29ae:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29b5:	00 00 00 
    29b8:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29bf:	00 00 00 
    29c2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29c9:	00 00 00 
    29cc:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29d3:	00 00 00 
    29d6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29dd:	00 00 00 
    29e0:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29e7:	00 00 00 
    29ea:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29f1:	00 00 00 
    29f4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29fb:	00 00 00 
    29fe:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a05:	00 00 00 
    2a08:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a0f:	00 00 00 
    2a12:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a19:	00 00 00 
    2a1c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a23:	00 00 00 
    2a26:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a2d:	00 00 00 
    2a30:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a37:	00 00 00 
    2a3a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a41:	00 00 00 
    2a44:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a4b:	00 00 00 
    2a4e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a55:	00 00 00 
    2a58:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a5f:	00 00 00 
    2a62:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a69:	00 00 00 
    2a6c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a73:	00 00 00 
    2a76:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a7d:	00 00 00 
    2a80:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a87:	00 00 00 
    2a8a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a91:	00 00 00 
    2a94:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a9b:	00 00 00 
    2a9e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2aa5:	00 00 00 
    2aa8:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2aaf:	00 00 00 
    2ab2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ab9:	00 00 00 
    2abc:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ac3:	00 00 00 
    2ac6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2acd:	00 00 00 
    2ad0:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ad7:	00 00 00 
    2ada:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ae1:	00 00 00 
    2ae4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2aeb:	00 00 00 
    2aee:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2af5:	00 00 00 
    2af8:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2aff:	00 00 00 
    2b02:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b09:	00 00 00 
    2b0c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b13:	00 00 00 
    2b16:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b1d:	00 00 00 
    2b20:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b27:	00 00 00 
    2b2a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b31:	00 00 00 
    2b34:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b3b:	00 00 00 
    2b3e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b45:	00 00 00 
    2b48:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b4f:	00 00 00 
    2b52:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b59:	00 00 00 
    2b5c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b63:	00 00 00 
    2b66:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b6d:	00 00 00 
    2b70:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b77:	00 00 00 
    2b7a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b81:	00 00 00 
    2b84:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b8b:	00 00 00 
    2b8e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b95:	00 00 00 
    2b98:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b9f:	00 00 00 
    2ba2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ba9:	00 00 00 
    2bac:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2bb3:	00 00 00 
    2bb6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2bbd:	00 00 00 
    2bc0:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2bc7:	00 00 00 
    2bca:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2bd1:	00 00 00 
    2bd4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2bdb:	00 00 00 
    2bde:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2be5:	00 00 00 
    2be8:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2bef:	00 00 00 
    2bf2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2bf9:	00 00 00 
    2bfc:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c03:	00 00 00 
    2c06:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c0d:	00 00 00 
    2c10:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c17:	00 00 00 
    2c1a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c21:	00 00 00 
    2c24:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c2b:	00 00 00 
    2c2e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c35:	00 00 00 
    2c38:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c3f:	00 00 00 
    2c42:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c49:	00 00 00 
    2c4c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c53:	00 00 00 
    2c56:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c5d:	00 00 00 
    2c60:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c67:	00 00 00 
    2c6a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c71:	00 00 00 
    2c74:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c7b:	00 00 00 
    2c7e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c85:	00 00 00 
    2c88:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c8f:	00 00 00 
    2c92:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c99:	00 00 00 
    2c9c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ca3:	00 00 00 
    2ca6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2cad:	00 00 00 
    2cb0:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2cb7:	00 00 00 
    2cba:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2cc1:	00 00 00 
    2cc4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ccb:	00 00 00 
    2cce:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2cd5:	00 00 00 
    2cd8:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2cdf:	00 00 00 
    2ce2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ce9:	00 00 00 
    2cec:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2cf3:	00 00 00 
    2cf6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2cfd:	00 00 00 
    2d00:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d07:	00 00 00 
    2d0a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d11:	00 00 00 
    2d14:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d1b:	00 00 00 
    2d1e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d25:	00 00 00 
    2d28:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d2f:	00 00 00 
    2d32:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d39:	00 00 00 
    2d3c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d43:	00 00 00 
    2d46:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d4d:	00 00 00 
    2d50:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d57:	00 00 00 
    2d5a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d61:	00 00 00 
    2d64:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d6b:	00 00 00 
    2d6e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d75:	00 00 00 
    2d78:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d7f:	00 00 00 
    2d82:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d89:	00 00 00 
    2d8c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d93:	00 00 00 
    2d96:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d9d:	00 00 00 
    2da0:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2da7:	00 00 00 
    2daa:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2db1:	00 00 00 
    2db4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2dbb:	00 00 00 
    2dbe:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2dc5:	00 00 00 
    2dc8:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2dcf:	00 00 00 
    2dd2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2dd9:	00 00 00 
    2ddc:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2de3:	00 00 00 
    2de6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ded:	00 00 00 
    2df0:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2df7:	00 00 00 
    2dfa:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e01:	00 00 00 
    2e04:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e0b:	00 00 00 
    2e0e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e15:	00 00 00 
    2e18:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e1f:	00 00 00 
    2e22:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e29:	00 00 00 
    2e2c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e33:	00 00 00 
    2e36:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e3d:	00 00 00 
    2e40:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e47:	00 00 00 
    2e4a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e51:	00 00 00 
    2e54:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e5b:	00 00 00 
    2e5e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e65:	00 00 00 
    2e68:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e6f:	00 00 00 
    2e72:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e79:	00 00 00 
    2e7c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e83:	00 00 00 
    2e86:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e8d:	00 00 00 
    2e90:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e97:	00 00 00 
    2e9a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ea1:	00 00 00 
    2ea4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2eab:	00 00 00 
    2eae:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2eb5:	00 00 00 
    2eb8:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ebf:	00 00 00 
    2ec2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ec9:	00 00 00 
    2ecc:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ed3:	00 00 00 
    2ed6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2edd:	00 00 00 
    2ee0:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ee7:	00 00 00 
    2eea:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ef1:	00 00 00 
    2ef4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2efb:	00 00 00 
    2efe:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f05:	00 00 00 
    2f08:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f0f:	00 00 00 
    2f12:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f19:	00 00 00 
    2f1c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f23:	00 00 00 
    2f26:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f2d:	00 00 00 
    2f30:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f37:	00 00 00 
    2f3a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f41:	00 00 00 
    2f44:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f4b:	00 00 00 
    2f4e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f55:	00 00 00 
    2f58:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f5f:	00 00 00 
    2f62:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f69:	00 00 00 
    2f6c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f73:	00 00 00 
    2f76:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f7d:	00 00 00 
    2f80:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f87:	00 00 00 
    2f8a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f91:	00 00 00 
    2f94:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f9b:	00 00 00 
    2f9e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2fa5:	00 00 00 
    2fa8:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2faf:	00 00 00 
    2fb2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2fb9:	00 00 00 
    2fbc:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2fc3:	00 00 00 
    2fc6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2fcd:	00 00 00 
    2fd0:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2fd7:	00 00 00 
    2fda:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2fe1:	00 00 00 
    2fe4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2feb:	00 00 00 
    2fee:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ff5:	00 00 00 
    2ff8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    2fff:	00 

0000000000003000 <test_dummy>:
    3000:	b8 00 00 00 00       	mov    $0x0,%eax
    3005:	c3                   	ret    
	...

0000000000004006 <sgx_ecall_increase>:
    4006:	f3 0f 1e fa          	endbr64 
    400a:	48 85 ff             	test   %rdi,%rdi
    400d:	75 0a                	jne    4019 <sgx_ecall_increase+0x13>
    400f:	50                   	push   %rax
    4010:	e8 69 e0 ff ff       	call   207e <ecall_increase>
    4015:	31 c0                	xor    %eax,%eax
    4017:	5a                   	pop    %rdx
    4018:	c3                   	ret    
    4019:	b8 02 00 00 00       	mov    $0x2,%eax
    401e:	c3                   	ret    

000000000000401f <sgx_ecall_lookup>:
    401f:	f3 0f 1e fa          	endbr64 
    4023:	48 85 ff             	test   %rdi,%rdi
    4026:	74 70                	je     4098 <sgx_ecall_lookup+0x79>
    4028:	53                   	push   %rbx
    4029:	be 04 00 00 00       	mov    $0x4,%esi
    402e:	48 89 fb             	mov    %rdi,%rbx
    4031:	48 83 ec 10          	sub    $0x10,%rsp
    4035:	e8 66 1a 00 00       	call   5aa0 <sgx_is_outside_enclave>
    403a:	85 c0                	test   %eax,%eax
    403c:	75 07                	jne    4045 <sgx_ecall_lookup+0x26>
    403e:	b8 02 00 00 00       	mov    $0x2,%eax
    4043:	eb 4d                	jmp    4092 <sgx_ecall_lookup+0x73>
    4045:	0f ae e8             	lfence 
    4048:	48 89 da             	mov    %rbx,%rdx
    404b:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    4050:	b9 04 00 00 00       	mov    $0x4,%ecx
    4055:	be 04 00 00 00       	mov    $0x4,%esi
    405a:	e8 51 ca 00 00       	call   10ab0 <memcpy_s>
    405f:	89 c2                	mov    %eax,%edx
    4061:	b8 01 00 00 00       	mov    $0x1,%eax
    4066:	85 d2                	test   %edx,%edx
    4068:	75 28                	jne    4092 <sgx_ecall_lookup+0x73>
    406a:	e8 f4 df ff ff       	call   2063 <ecall_lookup>
    406f:	48 8d 54 24 0c       	lea    0xc(%rsp),%rdx
    4074:	b9 04 00 00 00       	mov    $0x4,%ecx
    4079:	48 89 df             	mov    %rbx,%rdi
    407c:	be 04 00 00 00       	mov    $0x4,%esi
    4081:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    4085:	e8 a6 ca 00 00       	call   10b30 <memcpy_verw_s>
    408a:	85 c0                	test   %eax,%eax
    408c:	0f 95 c0             	setne  %al
    408f:	0f b6 c0             	movzbl %al,%eax
    4092:	48 83 c4 10          	add    $0x10,%rsp
    4096:	5b                   	pop    %rbx
    4097:	c3                   	ret    
    4098:	b8 02 00 00 00       	mov    $0x2,%eax
    409d:	c3                   	ret    

000000000000409e <ocall_print>:
    409e:	f3 0f 1e fa          	endbr64 
    40a2:	41 55                	push   %r13
    40a4:	41 54                	push   %r12
    40a6:	55                   	push   %rbp
    40a7:	31 ed                	xor    %ebp,%ebp
    40a9:	53                   	push   %rbx
    40aa:	48 89 fb             	mov    %rdi,%rbx
    40ad:	48 83 ec 28          	sub    $0x28,%rsp
    40b1:	48 85 ff             	test   %rdi,%rdi
    40b4:	74 09                	je     40bf <ocall_print+0x21>
    40b6:	e8 a5 c7 00 00       	call   10860 <strlen>
    40bb:	48 8d 68 01          	lea    0x1(%rax),%rbp
    40bf:	31 c9                	xor    %ecx,%ecx
    40c1:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
    40c6:	48 85 db             	test   %rbx,%rbx
    40c9:	74 1c                	je     40e7 <ocall_print+0x49>
    40cb:	48 89 ee             	mov    %rbp,%rsi
    40ce:	48 89 df             	mov    %rbx,%rdi
    40d1:	49 89 ed             	mov    %rbp,%r13
    40d4:	e8 67 19 00 00       	call   5a40 <sgx_is_within_enclave>
    40d9:	85 c0                	test   %eax,%eax
    40db:	75 0d                	jne    40ea <ocall_print+0x4c>
    40dd:	b8 02 00 00 00       	mov    $0x2,%eax
    40e2:	e9 95 00 00 00       	jmp    417c <ocall_print+0xde>
    40e7:	45 31 ed             	xor    %r13d,%r13d
    40ea:	49 8d 7d 08          	lea    0x8(%r13),%rdi
    40ee:	48 39 ef             	cmp    %rbp,%rdi
    40f1:	73 05                	jae    40f8 <ocall_print+0x5a>
    40f3:	48 85 db             	test   %rbx,%rbx
    40f6:	75 e5                	jne    40dd <ocall_print+0x3f>
    40f8:	e8 03 1a 00 00       	call   5b00 <sgx_ocalloc>
    40fd:	49 89 c4             	mov    %rax,%r12
    4100:	48 85 c0             	test   %rax,%rax
    4103:	75 13                	jne    4118 <ocall_print+0x7a>
    4105:	31 d2                	xor    %edx,%edx
    4107:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
    410c:	e8 cf 1a 00 00       	call   5be0 <sgx_ocfree>
    4111:	b8 01 00 00 00       	mov    $0x1,%eax
    4116:	eb 64                	jmp    417c <ocall_print+0xde>
    4118:	48 8d 40 08          	lea    0x8(%rax),%rax
    411c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    4121:	48 85 db             	test   %rbx,%rbx
    4124:	74 39                	je     415f <ocall_print+0xc1>
    4126:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
    412b:	b9 08 00 00 00       	mov    $0x8,%ecx
    4130:	be 08 00 00 00       	mov    $0x8,%esi
    4135:	4c 89 e7             	mov    %r12,%rdi
    4138:	e8 f3 c9 00 00       	call   10b30 <memcpy_verw_s>
    413d:	85 c0                	test   %eax,%eax
    413f:	75 cb                	jne    410c <ocall_print+0x6e>
    4141:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    4146:	48 89 e9             	mov    %rbp,%rcx
    4149:	48 89 da             	mov    %rbx,%rdx
    414c:	4c 89 ee             	mov    %r13,%rsi
    414f:	e8 dc c9 00 00       	call   10b30 <memcpy_verw_s>
    4154:	85 c0                	test   %eax,%eax
    4156:	75 b4                	jne    410c <ocall_print+0x6e>
    4158:	48 01 6c 24 18       	add    %rbp,0x18(%rsp)
    415d:	eb 06                	jmp    4165 <ocall_print+0xc7>
    415f:	31 c0                	xor    %eax,%eax
    4161:	49 89 04 24          	mov    %rax,(%r12)
    4165:	4c 89 e6             	mov    %r12,%rsi
    4168:	31 ff                	xor    %edi,%edi
    416a:	e8 51 2f 00 00       	call   70c0 <sgx_ocall>
    416f:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    4173:	e8 68 1a 00 00       	call   5be0 <sgx_ocfree>
    4178:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    417c:	48 83 c4 28          	add    $0x28,%rsp
    4180:	5b                   	pop    %rbx
    4181:	5d                   	pop    %rbp
    4182:	41 5c                	pop    %r12
    4184:	41 5d                	pop    %r13
    4186:	c3                   	ret    

0000000000004187 <ocall_print_address>:
    4187:	f3 0f 1e fa          	endbr64 
    418b:	41 55                	push   %r13
    418d:	41 54                	push   %r12
    418f:	45 31 e4             	xor    %r12d,%r12d
    4192:	55                   	push   %rbp
    4193:	53                   	push   %rbx
    4194:	48 89 fb             	mov    %rdi,%rbx
    4197:	48 83 ec 28          	sub    $0x28,%rsp
    419b:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    41a0:	48 85 ff             	test   %rdi,%rdi
    41a3:	74 09                	je     41ae <ocall_print_address+0x27>
    41a5:	e8 b6 c6 00 00       	call   10860 <strlen>
    41aa:	4c 8d 60 01          	lea    0x1(%rax),%r12
    41ae:	31 c9                	xor    %ecx,%ecx
    41b0:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
    41b5:	48 85 db             	test   %rbx,%rbx
    41b8:	74 1c                	je     41d6 <ocall_print_address+0x4f>
    41ba:	4c 89 e6             	mov    %r12,%rsi
    41bd:	48 89 df             	mov    %rbx,%rdi
    41c0:	4d 89 e5             	mov    %r12,%r13
    41c3:	e8 78 18 00 00       	call   5a40 <sgx_is_within_enclave>
    41c8:	85 c0                	test   %eax,%eax
    41ca:	75 0d                	jne    41d9 <ocall_print_address+0x52>
    41cc:	b8 02 00 00 00       	mov    $0x2,%eax
    41d1:	e9 b7 00 00 00       	jmp    428d <ocall_print_address+0x106>
    41d6:	45 31 ed             	xor    %r13d,%r13d
    41d9:	49 8d 7d 10          	lea    0x10(%r13),%rdi
    41dd:	4c 39 e7             	cmp    %r12,%rdi
    41e0:	73 05                	jae    41e7 <ocall_print_address+0x60>
    41e2:	48 85 db             	test   %rbx,%rbx
    41e5:	75 e5                	jne    41cc <ocall_print_address+0x45>
    41e7:	e8 14 19 00 00       	call   5b00 <sgx_ocalloc>
    41ec:	48 89 c5             	mov    %rax,%rbp
    41ef:	48 85 c0             	test   %rax,%rax
    41f2:	75 16                	jne    420a <ocall_print_address+0x83>
    41f4:	31 d2                	xor    %edx,%edx
    41f6:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
    41fb:	e8 e0 19 00 00       	call   5be0 <sgx_ocfree>
    4200:	b8 01 00 00 00       	mov    $0x1,%eax
    4205:	e9 83 00 00 00       	jmp    428d <ocall_print_address+0x106>
    420a:	48 8d 40 10          	lea    0x10(%rax),%rax
    420e:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    4213:	48 85 db             	test   %rbx,%rbx
    4216:	74 39                	je     4251 <ocall_print_address+0xca>
    4218:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
    421d:	b9 08 00 00 00       	mov    $0x8,%ecx
    4222:	be 08 00 00 00       	mov    $0x8,%esi
    4227:	48 89 ef             	mov    %rbp,%rdi
    422a:	e8 01 c9 00 00       	call   10b30 <memcpy_verw_s>
    422f:	85 c0                	test   %eax,%eax
    4231:	75 c8                	jne    41fb <ocall_print_address+0x74>
    4233:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    4238:	4c 89 e1             	mov    %r12,%rcx
    423b:	48 89 da             	mov    %rbx,%rdx
    423e:	4c 89 ee             	mov    %r13,%rsi
    4241:	e8 ea c8 00 00       	call   10b30 <memcpy_verw_s>
    4246:	85 c0                	test   %eax,%eax
    4248:	75 b1                	jne    41fb <ocall_print_address+0x74>
    424a:	4c 01 64 24 18       	add    %r12,0x18(%rsp)
    424f:	eb 06                	jmp    4257 <ocall_print_address+0xd0>
    4251:	31 c0                	xor    %eax,%eax
    4253:	48 89 45 00          	mov    %rax,0x0(%rbp)
    4257:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
    425c:	48 8d 7d 08          	lea    0x8(%rbp),%rdi
    4260:	b9 08 00 00 00       	mov    $0x8,%ecx
    4265:	be 08 00 00 00       	mov    $0x8,%esi
    426a:	e8 c1 c8 00 00       	call   10b30 <memcpy_verw_s>
    426f:	85 c0                	test   %eax,%eax
    4271:	75 88                	jne    41fb <ocall_print_address+0x74>
    4273:	48 89 ee             	mov    %rbp,%rsi
    4276:	bf 01 00 00 00       	mov    $0x1,%edi
    427b:	e8 40 2e 00 00       	call   70c0 <sgx_ocall>
    4280:	89 44 24 04          	mov    %eax,0x4(%rsp)
    4284:	e8 57 19 00 00       	call   5be0 <sgx_ocfree>
    4289:	8b 44 24 04          	mov    0x4(%rsp),%eax
    428d:	48 83 c4 28          	add    $0x28,%rsp
    4291:	5b                   	pop    %rbx
    4292:	5d                   	pop    %rbp
    4293:	41 5c                	pop    %r12
    4295:	41 5d                	pop    %r13
    4297:	c3                   	ret    
    4298:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    429f:	00 

00000000000042a0 <register_value_select>:
    42a0:	89 f1                	mov    %esi,%ecx
    42a2:	31 c0                	xor    %eax,%eax
    42a4:	48 83 f9 00          	cmp    $0x0,%rcx
    42a8:	48 0f 44 07          	cmove  (%rdi),%rax
    42ac:	48 83 f9 01          	cmp    $0x1,%rcx
    42b0:	48 0f 44 47 08       	cmove  0x8(%rdi),%rax
    42b5:	48 83 f9 02          	cmp    $0x2,%rcx
    42b9:	48 0f 44 47 10       	cmove  0x10(%rdi),%rax
    42be:	48 83 f9 03          	cmp    $0x3,%rcx
    42c2:	48 0f 44 47 18       	cmove  0x18(%rdi),%rax
    42c7:	48 83 f9 04          	cmp    $0x4,%rcx
    42cb:	48 0f 44 47 20       	cmove  0x20(%rdi),%rax
    42d0:	48 83 f9 05          	cmp    $0x5,%rcx
    42d4:	48 0f 44 47 28       	cmove  0x28(%rdi),%rax
    42d9:	48 83 f9 06          	cmp    $0x6,%rcx
    42dd:	48 0f 44 47 30       	cmove  0x30(%rdi),%rax
    42e2:	48 83 f9 07          	cmp    $0x7,%rcx
    42e6:	48 0f 44 47 38       	cmove  0x38(%rdi),%rax
    42eb:	48 83 f9 08          	cmp    $0x8,%rcx
    42ef:	48 0f 44 47 40       	cmove  0x40(%rdi),%rax
    42f4:	48 83 f9 09          	cmp    $0x9,%rcx
    42f8:	48 0f 44 47 48       	cmove  0x48(%rdi),%rax
    42fd:	48 83 f9 0a          	cmp    $0xa,%rcx
    4301:	48 0f 44 47 50       	cmove  0x50(%rdi),%rax
    4306:	48 83 f9 0b          	cmp    $0xb,%rcx
    430a:	48 0f 44 47 58       	cmove  0x58(%rdi),%rax
    430f:	48 83 f9 0c          	cmp    $0xc,%rcx
    4313:	48 0f 44 47 60       	cmove  0x60(%rdi),%rax
    4318:	48 83 f9 0d          	cmp    $0xd,%rcx
    431c:	48 0f 44 47 68       	cmove  0x68(%rdi),%rax
    4321:	48 83 f9 0e          	cmp    $0xe,%rcx
    4325:	48 0f 44 47 70       	cmove  0x70(%rdi),%rax
    432a:	48 83 f9 0f          	cmp    $0xf,%rcx
    432e:	48 0f 44 47 78       	cmove  0x78(%rdi),%rax
    4333:	c3                   	ret    
    4334:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    433b:	00 00 00 
    433e:	66 90                	xchg   %ax,%ax

0000000000004340 <ct_decode>:
    4340:	f3 0f 1e fa          	endbr64 
    4344:	55                   	push   %rbp
    4345:	48 89 e5             	mov    %rsp,%rbp
    4348:	41 57                	push   %r15
    434a:	41 56                	push   %r14
    434c:	41 55                	push   %r13
    434e:	41 54                	push   %r12
    4350:	53                   	push   %rbx
    4351:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    4355:	48 81 ec 40 05 00 00 	sub    $0x540,%rsp
    435c:	48 89 7c 24 78       	mov    %rdi,0x78(%rsp)
    4361:	48 89 74 24 50       	mov    %rsi,0x50(%rsp)
    4366:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    436d:	00 00 
    436f:	48 89 84 24 38 05 00 	mov    %rax,0x538(%rsp)
    4376:	00 
    4377:	31 c0                	xor    %eax,%eax
    4379:	48 8d 84 24 00 01 00 	lea    0x100(%rsp),%rax
    4380:	00 
    4381:	f6 05 ab 3a 01 00 08 	testb  $0x8,0x13aab(%rip)        # 17e33 <g_cpu_feature_indicator+0x3>
    4388:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    438d:	0f 84 fd 0f 00 00    	je     5390 <ct_decode+0x1050>
    4393:	62 f1 7c 48 29 00    	vmovaps %zmm0,(%rax)
    4399:	62 f1 7c 48 29 48 01 	vmovaps %zmm1,0x40(%rax)
    43a0:	62 f1 7c 48 29 50 02 	vmovaps %zmm2,0x80(%rax)
    43a7:	62 f1 7c 48 29 58 03 	vmovaps %zmm3,0xc0(%rax)
    43ae:	62 f1 7c 48 29 60 04 	vmovaps %zmm4,0x100(%rax)
    43b5:	62 f1 7c 48 29 68 05 	vmovaps %zmm5,0x140(%rax)
    43bc:	62 f1 7c 48 29 70 06 	vmovaps %zmm6,0x180(%rax)
    43c3:	62 f1 7c 48 29 78 07 	vmovaps %zmm7,0x1c0(%rax)
    43ca:	62 71 7c 48 29 40 08 	vmovaps %zmm8,0x200(%rax)
    43d1:	62 71 7c 48 29 48 09 	vmovaps %zmm9,0x240(%rax)
    43d8:	62 71 7c 48 29 50 0a 	vmovaps %zmm10,0x280(%rax)
    43df:	62 71 7c 48 29 58 0b 	vmovaps %zmm11,0x2c0(%rax)
    43e6:	62 71 7c 48 29 60 0c 	vmovaps %zmm12,0x300(%rax)
    43ed:	62 71 7c 48 29 68 0d 	vmovaps %zmm13,0x340(%rax)
    43f4:	62 71 7c 48 29 70 0e 	vmovaps %zmm14,0x380(%rax)
    43fb:	62 71 7c 48 29 78 0f 	vmovaps %zmm15,0x3c0(%rax)
    4402:	48 8b 7c 24 78       	mov    0x78(%rsp),%rdi
    4407:	31 c9                	xor    %ecx,%ecx
    4409:	ba f0 0f 00 00       	mov    $0xff0,%edx
    440e:	48 be f0 f0 f0 f0 f0 	movabs $0xf0f0f0f0f0f0f0f0,%rsi
    4415:	f0 f0 f0 
    4418:	c4 e1 f9 6e c6       	vmovq  %rsi,%xmm0
    441d:	c5 f9 6f 25 1b 3d 01 	vmovdqa 0x13d1b(%rip),%xmm4        # 18140 <standard>
    4424:	00 
    4425:	49 bb 80 80 80 80 80 	movabs $0x8080808080808080,%r11
    442c:	80 80 80 
    442f:	c4 e3 5d 38 25 07 3c 	vinserti128 $0x1,0x13c07(%rip),%ymm4,%ymm4        # 18040 <extended>
    4436:	01 00 01 
    4439:	4c 8b b7 88 00 00 00 	mov    0x88(%rdi),%r14
    4440:	c4 e2 7d 59 c0       	vpbroadcastq %xmm0,%ymm0
    4445:	c5 79 6f 2d 13 3d 01 	vmovdqa 0x13d13(%rip),%xmm13        # 18160 <standard+0x20>
    444c:	00 
    444d:	48 bf ff ff ff ff ff 	movabs $0xffffffffffff,%rdi
    4454:	ff 00 00 
    4457:	c4 63 15 38 2d ff 3b 	vinserti128 $0x1,0x13bff(%rip),%ymm13,%ymm13        # 18060 <extended+0x20>
    445e:	01 00 01 
    4461:	c5 79 6f 25 27 3d 01 	vmovdqa 0x13d27(%rip),%xmm12        # 18190 <standard+0x50>
    4468:	00 
    4469:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    446f:	41 b8 03 00 00 00    	mov    $0x3,%r8d
    4475:	4c 89 f0             	mov    %r14,%rax
    4478:	c5 79 6f 1d 20 3d 01 	vmovdqa 0x13d20(%rip),%xmm11        # 181a0 <standard+0x60>
    447f:	00 
    4480:	c4 63 1d 38 25 06 3c 	vinserti128 $0x1,0x13c06(%rip),%ymm12,%ymm12        # 18090 <extended+0x50>
    4487:	01 00 01 
    448a:	4c 89 74 24 68       	mov    %r14,0x68(%rsp)
    448f:	25 ff 0f 00 00       	and    $0xfff,%eax
    4494:	c5 79 6f 15 14 3d 01 	vmovdqa 0x13d14(%rip),%xmm10        # 181b0 <standard+0x70>
    449b:	00 
    449c:	c4 63 25 38 1d fa 3b 	vinserti128 $0x1,0x13bfa(%rip),%ymm11,%ymm11        # 180a0 <extended+0x60>
    44a3:	01 00 01 
    44a6:	48 3d f0 0f 00 00    	cmp    $0xff0,%rax
    44ac:	c5 79 6f 0d 0c 3d 01 	vmovdqa 0x13d0c(%rip),%xmm9        # 181c0 <standard+0x80>
    44b3:	00 
    44b4:	c4 63 2d 38 15 f2 3b 	vinserti128 $0x1,0x13bf2(%rip),%ymm10,%ymm10        # 180b0 <extended+0x70>
    44bb:	01 00 01 
    44be:	0f 96 c1             	setbe  %cl
    44c1:	c5 79 6f 05 07 3d 01 	vmovdqa 0x13d07(%rip),%xmm8        # 181d0 <standard+0x90>
    44c8:	00 
    44c9:	c4 63 35 38 0d ed 3b 	vinserti128 $0x1,0x13bed(%rip),%ymm9,%ymm9        # 180c0 <extended+0x80>
    44d0:	01 00 01 
    44d3:	48 83 f9 00          	cmp    $0x0,%rcx
    44d7:	48 0f 45 d0          	cmovne %rax,%rdx
    44db:	31 c9                	xor    %ecx,%ecx
    44dd:	48 3d f0 0f 00 00    	cmp    $0xff0,%rax
    44e3:	c4 63 3d 38 05 e3 3b 	vinserti128 $0x1,0x13be3(%rip),%ymm8,%ymm8        # 180d0 <extended+0x90>
    44ea:	01 00 01 
    44ed:	c5 79 6f 3d 0b 3d 01 	vmovdqa 0x13d0b(%rip),%xmm15        # 18200 <standard+0xc0>
    44f4:	00 
    44f5:	0f 97 c1             	seta   %cl
    44f8:	45 31 e4             	xor    %r12d,%r12d
    44fb:	2d f0 0f 00 00       	sub    $0xff0,%eax
    4500:	44 89 e3             	mov    %r12d,%ebx
    4503:	45 89 e7             	mov    %r12d,%r15d
    4506:	48 83 f9 00          	cmp    $0x0,%rcx
    450a:	0f 45 d8             	cmovne %eax,%ebx
    450d:	4c 89 f0             	mov    %r14,%rax
    4510:	89 5c 24 4c          	mov    %ebx,0x4c(%rsp)
    4514:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    451a:	48 09 d0             	or     %rdx,%rax
    451d:	c5 fa 6f 28          	vmovdqu (%rax),%xmm5
    4521:	48 63 c3             	movslq %ebx,%rax
    4524:	bb 02 00 00 00       	mov    $0x2,%ebx
    4529:	c4 e1 f9 6e f8       	vmovq  %rax,%xmm7
    452e:	b8 10 00 00 00       	mov    $0x10,%eax
    4533:	41 89 de             	mov    %ebx,%r14d
    4536:	c5 d1 f3 ef          	vpsllq %xmm7,%xmm5,%xmm5
    453a:	c4 c1 f9 6e fb       	vmovq  %r11,%xmm7
    453f:	c4 e2 7d 59 df       	vpbroadcastq %xmm7,%ymm3
    4544:	c4 e2 7d 59 cd       	vpbroadcastq %xmm5,%ymm1
    4549:	c4 e1 f9 7e ea       	vmovq  %xmm5,%rdx
    454e:	c5 fd df d1          	vpandn %ymm1,%ymm0,%ymm2
    4552:	c5 f5 db c8          	vpand  %ymm0,%ymm1,%ymm1
    4556:	c5 f9 ef c0          	vpxor  %xmm0,%xmm0,%xmm0
    455a:	49 89 d2             	mov    %rdx,%r10
    455d:	c5 f5 74 c0          	vpcmpeqb %ymm0,%ymm1,%ymm0
    4561:	c5 fd df c3          	vpandn %ymm3,%ymm0,%ymm0
    4565:	c5 fd eb c2          	vpor   %ymm2,%ymm0,%ymm0
    4569:	c4 62 5d 00 f0       	vpshufb %ymm0,%ymm4,%ymm14
    456e:	c5 f9 6e c0          	vmovd  %eax,%xmm0
    4572:	c5 f9 6f 25 d6 3b 01 	vmovdqa 0x13bd6(%rip),%xmm4        # 18150 <standard+0x10>
    4579:	00 
    457a:	c4 e3 5d 38 25 cc 3a 	vinserti128 $0x1,0x13acc(%rip),%ymm4,%ymm4        # 18050 <extended+0x10>
    4581:	01 00 01 
    4584:	c4 e2 7d 78 c0       	vpbroadcastb %xmm0,%ymm0
    4589:	b8 20 00 00 00       	mov    $0x20,%eax
    458e:	c5 7d 7f b4 24 a0 00 	vmovdqa %ymm14,0xa0(%rsp)
    4595:	00 00 
    4597:	c5 f5 74 c0          	vpcmpeqb %ymm0,%ymm1,%ymm0
    459b:	c5 fd df c3          	vpandn %ymm3,%ymm0,%ymm0
    459f:	c5 fd eb c2          	vpor   %ymm2,%ymm0,%ymm0
    45a3:	c4 e2 5d 00 f8       	vpshufb %ymm0,%ymm4,%ymm7
    45a8:	c5 f9 6e c0          	vmovd  %eax,%xmm0
    45ac:	b8 30 00 00 00       	mov    $0x30,%eax
    45b1:	c5 f9 6f 25 b7 3b 01 	vmovdqa 0x13bb7(%rip),%xmm4        # 18170 <standard+0x30>
    45b8:	00 
    45b9:	c4 e3 5d 38 25 ad 3a 	vinserti128 $0x1,0x13aad(%rip),%ymm4,%ymm4        # 18070 <extended+0x30>
    45c0:	01 00 01 
    45c3:	c4 e2 7d 78 c0       	vpbroadcastb %xmm0,%ymm0
    45c8:	c5 fd 7f bc 24 e0 00 	vmovdqa %ymm7,0xe0(%rsp)
    45cf:	00 00 
    45d1:	c5 f9 6f 3d 07 3c 01 	vmovdqa 0x13c07(%rip),%xmm7        # 181e0 <standard+0xa0>
    45d8:	00 
    45d9:	c4 e3 45 38 3d fd 3a 	vinserti128 $0x1,0x13afd(%rip),%ymm7,%ymm7        # 180e0 <extended+0xa0>
    45e0:	01 00 01 
    45e3:	c5 f5 74 c0          	vpcmpeqb %ymm0,%ymm1,%ymm0
    45e7:	c5 fd df c3          	vpandn %ymm3,%ymm0,%ymm0
    45eb:	c5 fd eb c2          	vpor   %ymm2,%ymm0,%ymm0
    45ef:	c4 62 15 00 e8       	vpshufb %ymm0,%ymm13,%ymm13
    45f4:	c5 f9 6e c0          	vmovd  %eax,%xmm0
    45f8:	b8 40 00 00 00       	mov    $0x40,%eax
    45fd:	c4 e2 7d 78 c0       	vpbroadcastb %xmm0,%ymm0
    4602:	c5 f9 6e f0          	vmovd  %eax,%xmm6
    4606:	b8 50 00 00 00       	mov    $0x50,%eax
    460b:	c5 f5 74 c0          	vpcmpeqb %ymm0,%ymm1,%ymm0
    460f:	c4 e2 7d 78 f6       	vpbroadcastb %xmm6,%ymm6
    4614:	c5 f5 74 f6          	vpcmpeqb %ymm6,%ymm1,%ymm6
    4618:	c5 fd df c3          	vpandn %ymm3,%ymm0,%ymm0
    461c:	c5 fd eb c2          	vpor   %ymm2,%ymm0,%ymm0
    4620:	c5 cd df f3          	vpandn %ymm3,%ymm6,%ymm6
    4624:	c4 e2 5d 00 e0       	vpshufb %ymm0,%ymm4,%ymm4
    4629:	c5 f9 6f 05 4f 3b 01 	vmovdqa 0x13b4f(%rip),%xmm0        # 18180 <standard+0x40>
    4630:	00 
    4631:	c5 cd eb f2          	vpor   %ymm2,%ymm6,%ymm6
    4635:	c4 e3 7d 38 05 41 3a 	vinserti128 $0x1,0x13a41(%rip),%ymm0,%ymm0        # 18080 <extended+0x40>
    463c:	01 00 01 
    463f:	c4 e1 f9 7e e1       	vmovq  %xmm4,%rcx
    4644:	c4 e3 7d 39 e4 01    	vextracti128 $0x1,%ymm4,%xmm4
    464a:	c4 e2 7d 00 c6       	vpshufb %ymm6,%ymm0,%ymm0
    464f:	c5 f9 6e f0          	vmovd  %eax,%xmm6
    4653:	b8 60 00 00 00       	mov    $0x60,%eax
    4658:	c4 e2 7d 78 f6       	vpbroadcastb %xmm6,%ymm6
    465d:	c5 f5 74 f6          	vpcmpeqb %ymm6,%ymm1,%ymm6
    4661:	c5 cd df f3          	vpandn %ymm3,%ymm6,%ymm6
    4665:	c5 cd eb f2          	vpor   %ymm2,%ymm6,%ymm6
    4669:	c4 62 1d 00 e6       	vpshufb %ymm6,%ymm12,%ymm12
    466e:	c5 f9 6e f0          	vmovd  %eax,%xmm6
    4672:	b8 70 00 00 00       	mov    $0x70,%eax
    4677:	c4 e2 7d 78 f6       	vpbroadcastb %xmm6,%ymm6
    467c:	c5 f5 74 f6          	vpcmpeqb %ymm6,%ymm1,%ymm6
    4680:	c5 cd df f3          	vpandn %ymm3,%ymm6,%ymm6
    4684:	c5 cd eb f2          	vpor   %ymm2,%ymm6,%ymm6
    4688:	c4 62 25 00 de       	vpshufb %ymm6,%ymm11,%ymm11
    468d:	c5 f9 6e f0          	vmovd  %eax,%xmm6
    4691:	b8 80 ff ff ff       	mov    $0xffffff80,%eax
    4696:	c4 e2 7d 78 f6       	vpbroadcastb %xmm6,%ymm6
    469b:	c5 f5 74 f6          	vpcmpeqb %ymm6,%ymm1,%ymm6
    469f:	c5 cd df f3          	vpandn %ymm3,%ymm6,%ymm6
    46a3:	c5 cd eb f2          	vpor   %ymm2,%ymm6,%ymm6
    46a7:	c4 62 2d 00 d6       	vpshufb %ymm6,%ymm10,%ymm10
    46ac:	c5 f9 6e f0          	vmovd  %eax,%xmm6
    46b0:	b8 90 ff ff ff       	mov    $0xffffff90,%eax
    46b5:	c4 e2 7d 78 f6       	vpbroadcastb %xmm6,%ymm6
    46ba:	c5 f5 74 f6          	vpcmpeqb %ymm6,%ymm1,%ymm6
    46be:	c5 cd df f3          	vpandn %ymm3,%ymm6,%ymm6
    46c2:	c5 cd eb f2          	vpor   %ymm2,%ymm6,%ymm6
    46c6:	c4 62 35 00 ce       	vpshufb %ymm6,%ymm9,%ymm9
    46cb:	c5 f9 6e f0          	vmovd  %eax,%xmm6
    46cf:	b8 a0 ff ff ff       	mov    $0xffffffa0,%eax
    46d4:	c4 e2 7d 78 f6       	vpbroadcastb %xmm6,%ymm6
    46d9:	c5 f5 74 f6          	vpcmpeqb %ymm6,%ymm1,%ymm6
    46dd:	c5 cd df f3          	vpandn %ymm3,%ymm6,%ymm6
    46e1:	c5 cd eb f2          	vpor   %ymm2,%ymm6,%ymm6
    46e5:	c4 62 3d 00 c6       	vpshufb %ymm6,%ymm8,%ymm8
    46ea:	c5 f9 6e f0          	vmovd  %eax,%xmm6
    46ee:	b8 b0 ff ff ff       	mov    $0xffffffb0,%eax
    46f3:	c4 e2 7d 78 f6       	vpbroadcastb %xmm6,%ymm6
    46f8:	c5 79 6e f0          	vmovd  %eax,%xmm14
    46fc:	b8 c0 ff ff ff       	mov    $0xffffffc0,%eax
    4701:	c5 f5 74 f6          	vpcmpeqb %ymm6,%ymm1,%ymm6
    4705:	c4 42 7d 78 f6       	vpbroadcastb %xmm14,%ymm14
    470a:	c4 41 75 74 f6       	vpcmpeqb %ymm14,%ymm1,%ymm14
    470f:	c5 cd df f3          	vpandn %ymm3,%ymm6,%ymm6
    4713:	c5 cd eb f2          	vpor   %ymm2,%ymm6,%ymm6
    4717:	c5 0d df f3          	vpandn %ymm3,%ymm14,%ymm14
    471b:	c4 e2 45 00 fe       	vpshufb %ymm6,%ymm7,%ymm7
    4720:	c5 f9 6f 35 c8 3a 01 	vmovdqa 0x13ac8(%rip),%xmm6        # 181f0 <standard+0xb0>
    4727:	00 
    4728:	c5 0d eb f2          	vpor   %ymm2,%ymm14,%ymm14
    472c:	c4 e3 4d 38 35 ba 39 	vinserti128 $0x1,0x139ba(%rip),%ymm6,%ymm6        # 180f0 <extended+0xb0>
    4733:	01 00 01 
    4736:	c4 63 05 38 3d c0 39 	vinserti128 $0x1,0x139c0(%rip),%ymm15,%ymm15        # 18100 <extended+0xc0>
    473d:	01 00 01 
    4740:	c4 c2 4d 00 f6       	vpshufb %ymm14,%ymm6,%ymm6
    4745:	c5 79 6e f0          	vmovd  %eax,%xmm14
    4749:	b8 d0 ff ff ff       	mov    $0xffffffd0,%eax
    474e:	c4 42 7d 78 f6       	vpbroadcastb %xmm14,%ymm14
    4753:	c4 41 75 74 f6       	vpcmpeqb %ymm14,%ymm1,%ymm14
    4758:	c5 0d df f3          	vpandn %ymm3,%ymm14,%ymm14
    475c:	c5 0d eb f2          	vpor   %ymm2,%ymm14,%ymm14
    4760:	c4 42 05 00 fe       	vpshufb %ymm14,%ymm15,%ymm15
    4765:	c5 79 6e f0          	vmovd  %eax,%xmm14
    4769:	b8 e0 ff ff ff       	mov    $0xffffffe0,%eax
    476e:	c5 7d 7f bc 24 c0 00 	vmovdqa %ymm15,0xc0(%rsp)
    4775:	00 00 
    4777:	c4 42 7d 78 f6       	vpbroadcastb %xmm14,%ymm14
    477c:	c5 79 6f 3d 8c 3a 01 	vmovdqa 0x13a8c(%rip),%xmm15        # 18210 <standard+0xd0>
    4783:	00 
    4784:	c4 63 05 38 3d 82 39 	vinserti128 $0x1,0x13982(%rip),%ymm15,%ymm15        # 18110 <extended+0xd0>
    478b:	01 00 01 
    478e:	c4 41 75 74 f6       	vpcmpeqb %ymm14,%ymm1,%ymm14
    4793:	c5 0d df f3          	vpandn %ymm3,%ymm14,%ymm14
    4797:	c5 0d eb f2          	vpor   %ymm2,%ymm14,%ymm14
    479b:	c4 42 05 00 fe       	vpshufb %ymm14,%ymm15,%ymm15
    47a0:	c5 79 6e f0          	vmovd  %eax,%xmm14
    47a4:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
    47a9:	c5 7d 7f bc 24 80 00 	vmovdqa %ymm15,0x80(%rsp)
    47b0:	00 00 
    47b2:	c4 42 7d 78 f6       	vpbroadcastb %xmm14,%ymm14
    47b7:	c5 79 6f 3d 61 3a 01 	vmovdqa 0x13a61(%rip),%xmm15        # 18220 <standard+0xe0>
    47be:	00 
    47bf:	c4 63 05 38 3d 57 39 	vinserti128 $0x1,0x13957(%rip),%ymm15,%ymm15        # 18120 <extended+0xe0>
    47c6:	01 00 01 
    47c9:	c4 41 75 74 f6       	vpcmpeqb %ymm14,%ymm1,%ymm14
    47ce:	c5 0d df f3          	vpandn %ymm3,%ymm14,%ymm14
    47d2:	c5 0d eb f2          	vpor   %ymm2,%ymm14,%ymm14
    47d6:	c4 42 05 00 fe       	vpshufb %ymm14,%ymm15,%ymm15
    47db:	c5 79 6e f0          	vmovd  %eax,%xmm14
    47df:	c4 61 f9 7e e8       	vmovq  %xmm13,%rax
    47e4:	48 09 c8             	or     %rcx,%rax
    47e7:	c4 42 7d 78 f6       	vpbroadcastb %xmm14,%ymm14
    47ec:	c4 e1 f9 7e c1       	vmovq  %xmm0,%rcx
    47f1:	48 09 c8             	or     %rcx,%rax
    47f4:	c4 c1 75 74 ce       	vpcmpeqb %ymm14,%ymm1,%ymm1
    47f9:	c4 61 f9 7e e1       	vmovq  %xmm12,%rcx
    47fe:	c5 7d 6f b4 24 a0 00 	vmovdqa 0xa0(%rsp),%ymm14
    4805:	00 00 
    4807:	48 09 c8             	or     %rcx,%rax
    480a:	c4 61 f9 7e d9       	vmovq  %xmm11,%rcx
    480f:	c4 43 7d 39 ed 01    	vextracti128 $0x1,%ymm13,%xmm13
    4815:	48 09 c8             	or     %rcx,%rax
    4818:	c4 61 f9 7e d1       	vmovq  %xmm10,%rcx
    481d:	c5 91 eb e4          	vpor   %xmm4,%xmm13,%xmm4
    4821:	48 09 c8             	or     %rcx,%rax
    4824:	c5 f5 df cb          	vpandn %ymm3,%ymm1,%ymm1
    4828:	c4 61 f9 7e c9       	vmovq  %xmm9,%rcx
    482d:	c5 f9 6f 1d fb 39 01 	vmovdqa 0x139fb(%rip),%xmm3        # 18230 <standard+0xf0>
    4834:	00 
    4835:	c5 f5 eb ca          	vpor   %ymm2,%ymm1,%ymm1
    4839:	48 09 c8             	or     %rcx,%rax
    483c:	c4 61 f9 7e c1       	vmovq  %xmm8,%rcx
    4841:	48 09 c8             	or     %rcx,%rax
    4844:	c4 e1 f9 7e f9       	vmovq  %xmm7,%rcx
    4849:	c4 e3 65 38 1d dd 38 	vinserti128 $0x1,0x138dd(%rip),%ymm3,%ymm3        # 18130 <extended+0xf0>
    4850:	01 00 01 
    4853:	48 09 c8             	or     %rcx,%rax
    4856:	c4 e1 f9 7e f1       	vmovq  %xmm6,%rcx
    485b:	c4 61 f9 7e f6       	vmovq  %xmm14,%rsi
    4860:	c4 e2 65 00 d9       	vpshufb %ymm1,%ymm3,%ymm3
    4865:	48 09 c8             	or     %rcx,%rax
    4868:	c5 f9 6f 8c 24 c0 00 	vmovdqa 0xc0(%rsp),%xmm1
    486f:	00 00 
    4871:	c4 e3 7d 39 c0 01    	vextracti128 $0x1,%ymm0,%xmm0
    4877:	c5 d9 eb c0          	vpor   %xmm0,%xmm4,%xmm0
    487b:	c4 43 7d 39 e4 01    	vextracti128 $0x1,%ymm12,%xmm12
    4881:	c4 43 7d 39 db 01    	vextracti128 $0x1,%ymm11,%xmm11
    4887:	c5 fd 6f a4 24 c0 00 	vmovdqa 0xc0(%rsp),%ymm4
    488e:	00 00 
    4890:	c4 e1 f9 7e c9       	vmovq  %xmm1,%rcx
    4895:	c4 c1 79 eb c4       	vpor   %xmm12,%xmm0,%xmm0
    489a:	c5 f9 6f 8c 24 80 00 	vmovdqa 0x80(%rsp),%xmm1
    48a1:	00 00 
    48a3:	c4 43 7d 39 d2 01    	vextracti128 $0x1,%ymm10,%xmm10
    48a9:	48 09 c8             	or     %rcx,%rax
    48ac:	c4 c1 79 eb c3       	vpor   %xmm11,%xmm0,%xmm0
    48b1:	c4 43 7d 39 c9 01    	vextracti128 $0x1,%ymm9,%xmm9
    48b7:	c4 e1 f9 7e c9       	vmovq  %xmm1,%rcx
    48bc:	c4 c1 79 eb c2       	vpor   %xmm10,%xmm0,%xmm0
    48c1:	c5 f9 6f 8c 24 e0 00 	vmovdqa 0xe0(%rsp),%xmm1
    48c8:	00 00 
    48ca:	c4 43 7d 39 c0 01    	vextracti128 $0x1,%ymm8,%xmm8
    48d0:	48 09 c8             	or     %rcx,%rax
    48d3:	c4 61 f9 7e f9       	vmovq  %xmm15,%rcx
    48d8:	c4 c1 79 eb c1       	vpor   %xmm9,%xmm0,%xmm0
    48dd:	48 09 c8             	or     %rcx,%rax
    48e0:	c4 e1 f9 7e d9       	vmovq  %xmm3,%rcx
    48e5:	c4 c1 79 eb c0       	vpor   %xmm8,%xmm0,%xmm0
    48ea:	48 09 c8             	or     %rcx,%rax
    48ed:	c4 e1 f9 7e c9       	vmovq  %xmm1,%rcx
    48f2:	c4 e3 7d 39 ff 01    	vextracti128 $0x1,%ymm7,%xmm7
    48f8:	48 09 f1             	or     %rsi,%rcx
    48fb:	be 0f 00 00 00       	mov    $0xf,%esi
    4900:	c5 f9 eb c7          	vpor   %xmm7,%xmm0,%xmm0
    4904:	c5 fd 6f bc 24 e0 00 	vmovdqa 0xe0(%rsp),%ymm7
    490b:	00 00 
    490d:	48 09 c8             	or     %rcx,%rax
    4910:	c4 e3 7d 39 f6 01    	vextracti128 $0x1,%ymm6,%xmm6
    4916:	c4 43 7d 39 ff 01    	vextracti128 $0x1,%ymm15,%xmm15
    491c:	48 21 c7             	and    %rax,%rdi
    491f:	25 c0 00 00 00       	and    $0xc0,%eax
    4924:	c5 f9 eb c6          	vpor   %xmm6,%xmm0,%xmm0
    4928:	48 83 f8 7f          	cmp    $0x7f,%rax
    492c:	49 89 f9             	mov    %rdi,%r9
    492f:	c4 e3 7d 39 db 01    	vextracti128 $0x1,%ymm3,%xmm3
    4935:	0f 97 c0             	seta   %al
    4938:	0f b6 c0             	movzbl %al,%eax
    493b:	48 83 f8 00          	cmp    $0x0,%rax
    493f:	41 0f 45 f4          	cmovne %r12d,%esi
    4943:	48 89 f8             	mov    %rdi,%rax
    4946:	89 f1                	mov    %esi,%ecx
    4948:	48 c1 e8 08          	shr    $0x8,%rax
    494c:	25 c0 00 00 00       	and    $0xc0,%eax
    4951:	48 83 f8 7f          	cmp    $0x7f,%rax
    4955:	0f 97 c0             	seta   %al
    4958:	c1 e1 08             	shl    $0x8,%ecx
    495b:	0f b6 c0             	movzbl %al,%eax
    495e:	09 c8                	or     %ecx,%eax
    4960:	3d 01 0f 00 00       	cmp    $0xf01,%eax
    4965:	0f 94 c0             	sete   %al
    4968:	0f b6 c0             	movzbl %al,%eax
    496b:	48 83 f8 00          	cmp    $0x0,%rax
    496f:	41 0f 45 f5          	cmovne %r13d,%esi
    4973:	48 89 f8             	mov    %rdi,%rax
    4976:	89 f1                	mov    %esi,%ecx
    4978:	48 c1 e8 10          	shr    $0x10,%rax
    497c:	25 c0 00 00 00       	and    $0xc0,%eax
    4981:	48 83 f8 7f          	cmp    $0x7f,%rax
    4985:	0f 97 c0             	seta   %al
    4988:	c1 e1 08             	shl    $0x8,%ecx
    498b:	0f b6 c0             	movzbl %al,%eax
    498e:	09 c8                	or     %ecx,%eax
    4990:	3d 01 0f 00 00       	cmp    $0xf01,%eax
    4995:	0f 94 c0             	sete   %al
    4998:	0f b6 c0             	movzbl %al,%eax
    499b:	48 83 f8 00          	cmp    $0x0,%rax
    499f:	0f 45 f3             	cmovne %ebx,%esi
    49a2:	48 89 f8             	mov    %rdi,%rax
    49a5:	89 f1                	mov    %esi,%ecx
    49a7:	bb 04 00 00 00       	mov    $0x4,%ebx
    49ac:	48 c1 e8 18          	shr    $0x18,%rax
    49b0:	25 c0 00 00 00       	and    $0xc0,%eax
    49b5:	48 83 f8 7f          	cmp    $0x7f,%rax
    49b9:	0f 97 c0             	seta   %al
    49bc:	c1 e1 08             	shl    $0x8,%ecx
    49bf:	0f b6 c0             	movzbl %al,%eax
    49c2:	09 c8                	or     %ecx,%eax
    49c4:	3d 01 0f 00 00       	cmp    $0xf01,%eax
    49c9:	0f 94 c0             	sete   %al
    49cc:	0f b6 c0             	movzbl %al,%eax
    49cf:	48 83 f8 00          	cmp    $0x0,%rax
    49d3:	41 0f 45 f0          	cmovne %r8d,%esi
    49d7:	48 89 f8             	mov    %rdi,%rax
    49da:	89 f1                	mov    %esi,%ecx
    49dc:	48 c1 e8 20          	shr    $0x20,%rax
    49e0:	25 c0 00 00 00       	and    $0xc0,%eax
    49e5:	48 83 f8 7f          	cmp    $0x7f,%rax
    49e9:	0f 97 c0             	seta   %al
    49ec:	c1 e1 08             	shl    $0x8,%ecx
    49ef:	0f b6 c0             	movzbl %al,%eax
    49f2:	09 c8                	or     %ecx,%eax
    49f4:	3d 01 0f 00 00       	cmp    $0xf01,%eax
    49f9:	0f 94 c0             	sete   %al
    49fc:	0f b6 c0             	movzbl %al,%eax
    49ff:	48 83 f8 00          	cmp    $0x0,%rax
    4a03:	0f 45 f3             	cmovne %ebx,%esi
    4a06:	48 89 f8             	mov    %rdi,%rax
    4a09:	89 f1                	mov    %esi,%ecx
    4a0b:	48 c1 e8 28          	shr    $0x28,%rax
    4a0f:	25 c0 00 00 00       	and    $0xc0,%eax
    4a14:	48 83 f8 7f          	cmp    $0x7f,%rax
    4a18:	0f 97 c0             	seta   %al
    4a1b:	c1 e1 08             	shl    $0x8,%ecx
    4a1e:	0f b6 c0             	movzbl %al,%eax
    4a21:	09 c8                	or     %ecx,%eax
    4a23:	31 c9                	xor    %ecx,%ecx
    4a25:	3d 01 0f 00 00       	cmp    $0xf01,%eax
    4a2a:	b8 05 00 00 00       	mov    $0x5,%eax
    4a2f:	0f 94 c1             	sete   %cl
    4a32:	48 83 f9 00          	cmp    $0x0,%rcx
    4a36:	0f 45 f0             	cmovne %eax,%esi
    4a39:	8d 0c f5 00 00 00 00 	lea    0x0(,%rsi,8),%ecx
    4a40:	49 d3 e9             	shr    %cl,%r9
    4a43:	49 d3 ea             	shr    %cl,%r10
    4a46:	4c 89 d1             	mov    %r10,%rcx
    4a49:	45 89 ca             	mov    %r9d,%r10d
    4a4c:	4c 89 cb             	mov    %r9,%rbx
    4a4f:	48 89 4c 24 70       	mov    %rcx,0x70(%rsp)
    4a54:	41 c0 ea 02          	shr    $0x2,%r10b
    4a58:	31 c9                	xor    %ecx,%ecx
    4a5a:	80 7c 24 70 0f       	cmpb   $0xf,0x70(%rsp)
    4a5f:	0f 94 c1             	sete   %cl
    4a62:	44 88 94 24 a0 00 00 	mov    %r10b,0xa0(%rsp)
    4a69:	00 
    4a6a:	45 89 e2             	mov    %r12d,%r10d
    4a6d:	48 83 f9 00          	cmp    $0x0,%rcx
    4a71:	45 0f 45 fd          	cmovne %r13d,%r15d
    4a75:	44 89 c9             	mov    %r9d,%ecx
    4a78:	45 31 c9             	xor    %r9d,%r9d
    4a7b:	83 e1 f0             	and    $0xfffffff0,%ecx
    4a7e:	80 f9 a0             	cmp    $0xa0,%cl
    4a81:	41 0f 94 c1          	sete   %r9b
    4a85:	49 83 f9 00          	cmp    $0x0,%r9
    4a89:	45 0f 45 d5          	cmovne %r13d,%r10d
    4a8d:	80 f9 b0             	cmp    $0xb0,%cl
    4a90:	45 89 e1             	mov    %r12d,%r9d
    4a93:	44 89 54 24 48       	mov    %r10d,0x48(%rsp)
    4a98:	0f 94 c1             	sete   %cl
    4a9b:	29 f0                	sub    %esi,%eax
    4a9d:	45 31 d2             	xor    %r10d,%r10d
    4aa0:	0f b6 c9             	movzbl %cl,%ecx
    4aa3:	48 83 f9 00          	cmp    $0x0,%rcx
    4aa7:	45 0f 45 cd          	cmovne %r13d,%r9d
    4aab:	8d 0c c5 00 00 00 00 	lea    0x0(,%rax,8),%ecx
    4ab2:	44 89 4c 24 3c       	mov    %r9d,0x3c(%rsp)
    4ab7:	48 b8 ff ff ff ff ff 	movabs $0xffffffffff,%rax
    4abe:	00 00 00 
    4ac1:	48 d3 f8             	sar    %cl,%rax
    4ac4:	8d 0c f5 f8 ff ff ff 	lea    -0x8(,%rsi,8),%ecx
    4acb:	48 21 f8             	and    %rdi,%rax
    4ace:	49 89 c1             	mov    %rax,%r9
    4ad1:	c4 e1 f9 6e d0       	vmovq  %rax,%xmm2
    4ad6:	49 d3 e9             	shr    %cl,%r9
    4ad9:	c4 c1 f9 6e c9       	vmovq  %r9,%xmm1
    4ade:	49 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%r9
    4ae5:	c4 c3 f1 22 c9 01    	vpinsrq $0x1,%r9,%xmm1,%xmm1
    4aeb:	c5 f1 74 0d 2d e5 00 	vpcmpeqb 0xe52d(%rip),%xmm1,%xmm1        # 13020 <g_dyn_entry_table+0x10>
    4af2:	00 
    4af3:	c4 e1 f9 7e cf       	vmovq  %xmm1,%rdi
    4af8:	c4 c3 e9 22 c9 01    	vpinsrq $0x1,%r9,%xmm2,%xmm1
    4afe:	45 89 e9             	mov    %r13d,%r9d
    4b01:	c5 f1 74 15 27 e5 00 	vpcmpeqb 0xe527(%rip),%xmm1,%xmm2        # 13030 <g_dyn_entry_table+0x20>
    4b08:	00 
    4b09:	48 85 ff             	test   %rdi,%rdi
    4b0c:	44 89 ef             	mov    %r13d,%edi
    4b0f:	41 0f 94 c2          	sete   %r10b
    4b13:	48 d3 ea             	shr    %cl,%rdx
    4b16:	44 89 e1             	mov    %r12d,%ecx
    4b19:	49 83 fa 00          	cmp    $0x0,%r10
    4b1d:	41 0f 45 fc          	cmovne %r12d,%edi
    4b21:	c4 e1 f9 7e d0       	vmovq  %xmm2,%rax
    4b26:	c5 f1 74 15 12 e5 00 	vpcmpeqb 0xe512(%rip),%xmm1,%xmm2        # 13040 <g_dyn_entry_table+0x30>
    4b2d:	00 
    4b2e:	83 e2 4f             	and    $0x4f,%edx
    4b31:	89 ff                	mov    %edi,%edi
    4b33:	48 83 ff 00          	cmp    $0x0,%rdi
    4b37:	0f 45 ca             	cmovne %edx,%ecx
    4b3a:	31 d2                	xor    %edx,%edx
    4b3c:	48 85 c0             	test   %rax,%rax
    4b3f:	44 89 e8             	mov    %r13d,%eax
    4b42:	89 4c 24 38          	mov    %ecx,0x38(%rsp)
    4b46:	0f 94 c2             	sete   %dl
    4b49:	44 89 e9             	mov    %r13d,%ecx
    4b4c:	48 83 fa 00          	cmp    $0x0,%rdx
    4b50:	41 0f 45 c4          	cmovne %r12d,%eax
    4b54:	89 c2                	mov    %eax,%edx
    4b56:	44 89 e0             	mov    %r12d,%eax
    4b59:	48 83 fa 00          	cmp    $0x0,%rdx
    4b5d:	41 0f 45 c5          	cmovne %r13d,%eax
    4b61:	c4 e1 f9 7e d2       	vmovq  %xmm2,%rdx
    4b66:	c5 f1 74 15 e2 e4 00 	vpcmpeqb 0xe4e2(%rip),%xmm1,%xmm2        # 13050 <g_dyn_entry_table+0x40>
    4b6d:	00 
    4b6e:	48 85 d2             	test   %rdx,%rdx
    4b71:	0f 94 c2             	sete   %dl
    4b74:	0f b6 d2             	movzbl %dl,%edx
    4b77:	48 83 fa 00          	cmp    $0x0,%rdx
    4b7b:	45 0f 45 cc          	cmovne %r12d,%r9d
    4b7f:	c4 e1 f9 7e d2       	vmovq  %xmm2,%rdx
    4b84:	c5 f1 74 15 d4 e4 00 	vpcmpeqb 0xe4d4(%rip),%xmm1,%xmm2        # 13060 <g_dyn_entry_table+0x50>
    4b8b:	00 
    4b8c:	44 89 4c 24 34       	mov    %r9d,0x34(%rsp)
    4b91:	49 b9 00 80 80 80 80 	movabs $0x8080808080808000,%r9
    4b98:	80 80 80 
    4b9b:	48 85 d2             	test   %rdx,%rdx
    4b9e:	c5 f1 74 0d ca e4 00 	vpcmpeqb 0xe4ca(%rip),%xmm1,%xmm1        # 13070 <g_dyn_entry_table+0x60>
    4ba5:	00 
    4ba6:	0f 94 c2             	sete   %dl
    4ba9:	0f b6 d2             	movzbl %dl,%edx
    4bac:	48 83 fa 00          	cmp    $0x0,%rdx
    4bb0:	41 0f 45 cc          	cmovne %r12d,%ecx
    4bb4:	c4 e1 f9 7e d2       	vmovq  %xmm2,%rdx
    4bb9:	89 4c 24 30          	mov    %ecx,0x30(%rsp)
    4bbd:	31 c9                	xor    %ecx,%ecx
    4bbf:	c4 63 7d 39 f2 01    	vextracti128 $0x1,%ymm14,%xmm2
    4bc5:	48 85 d2             	test   %rdx,%rdx
    4bc8:	44 89 ea             	mov    %r13d,%edx
    4bcb:	0f 94 c1             	sete   %cl
    4bce:	48 83 f9 00          	cmp    $0x0,%rcx
    4bd2:	41 0f 45 d4          	cmovne %r12d,%edx
    4bd6:	89 d2                	mov    %edx,%edx
    4bd8:	31 c9                	xor    %ecx,%ecx
    4bda:	48 83 fa 00          	cmp    $0x0,%rdx
    4bde:	41 0f 45 c0          	cmovne %r8d,%eax
    4be2:	c4 e1 f9 7e ca       	vmovq  %xmm1,%rdx
    4be7:	c4 e3 7d 39 e1 01    	vextracti128 $0x1,%ymm4,%xmm1
    4bed:	41 89 c0             	mov    %eax,%r8d
    4bf0:	c5 fd 6f a4 24 80 00 	vmovdqa 0x80(%rsp),%ymm4
    4bf7:	00 00 
    4bf9:	c5 f9 eb c1          	vpor   %xmm1,%xmm0,%xmm0
    4bfd:	48 85 d2             	test   %rdx,%rdx
    4c00:	44 89 ea             	mov    %r13d,%edx
    4c03:	c4 e3 7d 39 e1 01    	vextracti128 $0x1,%ymm4,%xmm1
    4c09:	0f 94 c1             	sete   %cl
    4c0c:	c5 f9 eb c1          	vpor   %xmm1,%xmm0,%xmm0
    4c10:	c4 e3 7d 39 f9 01    	vextracti128 $0x1,%ymm7,%xmm1
    4c16:	c4 c1 79 eb c7       	vpor   %xmm15,%xmm0,%xmm0
    4c1b:	c5 f1 eb ca          	vpor   %xmm2,%xmm1,%xmm1
    4c1f:	c5 f9 eb c3          	vpor   %xmm3,%xmm0,%xmm0
    4c23:	c5 f9 eb c1          	vpor   %xmm1,%xmm0,%xmm0
    4c27:	48 83 f9 00          	cmp    $0x0,%rcx
    4c2b:	41 0f 45 d4          	cmovne %r12d,%edx
    4c2f:	c4 e1 f9 7e c0       	vmovq  %xmm0,%rax
    4c34:	8d 0c f5 08 00 00 00 	lea    0x8(,%rsi,8),%ecx
    4c3b:	89 d2                	mov    %edx,%edx
    4c3d:	44 01 fe             	add    %r15d,%esi
    4c40:	48 d3 f8             	sar    %cl,%rax
    4c43:	44 89 f9             	mov    %r15d,%ecx
    4c46:	48 83 fa 00          	cmp    $0x0,%rdx
    4c4a:	45 0f 45 c6          	cmovne %r14d,%r8d
    4c4e:	89 c2                	mov    %eax,%edx
    4c50:	44 89 44 24 5c       	mov    %r8d,0x5c(%rsp)
    4c55:	41 89 f0             	mov    %esi,%r8d
    4c58:	45 89 e6             	mov    %r12d,%r14d
    4c5b:	c0 ea 04             	shr    $0x4,%dl
    4c5e:	41 89 d2             	mov    %edx,%r10d
    4c61:	8b 94 24 a0 00 00 00 	mov    0xa0(%rsp),%edx
    4c68:	89 b4 24 e0 00 00 00 	mov    %esi,0xe0(%rsp)
    4c6f:	41 83 e2 03          	and    $0x3,%r10d
    4c73:	48 89 5c 24 40       	mov    %rbx,0x40(%rsp)
    4c78:	83 e2 03             	and    $0x3,%edx
    4c7b:	48 83 f9 00          	cmp    $0x0,%rcx
    4c7f:	41 0f 45 d2          	cmovne %r10d,%edx
    4c83:	41 8d 48 01          	lea    0x1(%r8),%ecx
    4c87:	0f b6 c9             	movzbl %cl,%ecx
    4c8a:	4c 09 c9             	or     %r9,%rcx
    4c8d:	c4 e1 f9 6e f9       	vmovq  %rcx,%xmm7
    4c92:	c4 c3 c1 22 c3 01    	vpinsrq $0x1,%r11,%xmm7,%xmm0
    4c98:	c4 e2 51 00 c0       	vpshufb %xmm0,%xmm5,%xmm0
    4c9d:	c4 e1 f9 7e c1       	vmovq  %xmm0,%rcx
    4ca2:	89 ce                	mov    %ecx,%esi
    4ca4:	41 89 c8             	mov    %ecx,%r8d
    4ca7:	40 c0 ee 03          	shr    $0x3,%sil
    4cab:	41 c0 e8 06          	shr    $0x6,%r8b
    4caf:	89 f7                	mov    %esi,%edi
    4cb1:	44 88 44 24 64       	mov    %r8b,0x64(%rsp)
    4cb6:	83 e7 07             	and    $0x7,%edi
    4cb9:	40 88 7c 24 60       	mov    %dil,0x60(%rsp)
    4cbe:	89 cf                	mov    %ecx,%edi
    4cc0:	83 e1 c7             	and    $0xffffffc7,%ecx
    4cc3:	88 8c 24 c0 00 00 00 	mov    %cl,0xc0(%rsp)
    4cca:	83 e7 07             	and    $0x7,%edi
    4ccd:	31 c9                	xor    %ecx,%ecx
    4ccf:	41 80 f8 03          	cmp    $0x3,%r8b
    4cd3:	41 89 d8             	mov    %ebx,%r8d
    4cd6:	0f 95 c1             	setne  %cl
    4cd9:	40 88 bc 24 80 00 00 	mov    %dil,0x80(%rsp)
    4ce0:	00 
    4ce1:	83 e6 07             	and    $0x7,%esi
    4ce4:	41 83 e0 30          	and    $0x30,%r8d
    4ce8:	01 f6                	add    %esi,%esi
    4cea:	48 83 f9 00          	cmp    $0x0,%rcx
    4cee:	45 0f 45 f5          	cmovne %r13d,%r14d
    4cf2:	44 89 c1             	mov    %r8d,%ecx
    4cf5:	41 89 d8             	mov    %ebx,%r8d
    4cf8:	31 db                	xor    %ebx,%ebx
    4cfa:	41 c0 e8 06          	shr    $0x6,%r8b
    4cfe:	41 0f b6 f8          	movzbl %r8b,%edi
    4d02:	49 b8 aa 6a aa aa a5 	movabs $0x155a55a5aaaa6aaa,%r8
    4d09:	55 5a 15 
    4d0c:	40 80 ff 03          	cmp    $0x3,%dil
    4d10:	0f 94 c3             	sete   %bl
    4d13:	01 f1                	add    %esi,%ecx
    4d15:	49 d3 e8             	shr    %cl,%r8
    4d18:	0f b6 4c 24 60       	movzbl 0x60(%rsp),%ecx
    4d1d:	41 83 e0 03          	and    $0x3,%r8d
    4d21:	48 83 fb 00          	cmp    $0x0,%rbx
    4d25:	41 0f 45 d0          	cmovne %r8d,%edx
    4d29:	41 b8 4c 00 00 00    	mov    $0x4c,%r8d
    4d2f:	44 89 e3             	mov    %r12d,%ebx
    4d32:	49 d3 e8             	shr    %cl,%r8
    4d35:	0f b6 4c 24 70       	movzbl 0x70(%rsp),%ecx
    4d3a:	41 83 e0 01          	and    $0x1,%r8d
    4d3e:	c1 e1 04             	shl    $0x4,%ecx
    4d41:	49 83 f8 00          	cmp    $0x0,%r8
    4d45:	41 0f 45 dd          	cmovne %r13d,%ebx
    4d49:	01 df                	add    %ebx,%edi
    4d4b:	45 89 e0             	mov    %r12d,%r8d
    4d4e:	09 f9                	or     %edi,%ecx
    4d50:	89 c7                	mov    %eax,%edi
    4d52:	81 f9 f4 0f 00 00    	cmp    $0xff4,%ecx
    4d58:	0f 94 c1             	sete   %cl
    4d5b:	40 c0 ef 06          	shr    $0x6,%dil
    4d5f:	31 db                	xor    %ebx,%ebx
    4d61:	0f b6 c9             	movzbl %cl,%ecx
    4d64:	40 0f b6 ff          	movzbl %dil,%edi
    4d68:	48 83 f9 00          	cmp    $0x0,%rcx
    4d6c:	45 0f 45 c5          	cmovne %r13d,%r8d
    4d70:	44 89 44 24 2c       	mov    %r8d,0x2c(%rsp)
    4d75:	45 89 f8             	mov    %r15d,%r8d
    4d78:	0f b6 4c 24 5c       	movzbl 0x5c(%rsp),%ecx
    4d7d:	41 c1 e0 04          	shl    $0x4,%r8d
    4d81:	c5 fb f0 0d a7 32 01 	vlddqu 0x132a7(%rip),%xmm1        # 18030 <extension_2op_table>
    4d88:	00 
    4d89:	41 09 f8             	or     %edi,%r8d
    4d8c:	41 83 f8 11          	cmp    $0x11,%r8d
    4d90:	0f 94 c3             	sete   %bl
    4d93:	01 c9                	add    %ecx,%ecx
    4d95:	c0 e8 03             	shr    $0x3,%al
    4d98:	42 8d 0c d1          	lea    (%rcx,%r10,8),%ecx
    4d9c:	41 ba 1a 05 0a 00    	mov    $0xa051a,%r10d
    4da2:	83 e0 07             	and    $0x7,%eax
    4da5:	41 d3 ea             	shr    %cl,%r10d
    4da8:	41 83 e2 03          	and    $0x3,%r10d
    4dac:	48 83 fb 00          	cmp    $0x0,%rbx
    4db0:	41 0f 45 d2          	cmovne %r10d,%edx
    4db4:	44 8d 14 00          	lea    (%rax,%rax,1),%r10d
    4db8:	41 8d 4a 01          	lea    0x1(%r10),%ecx
    4dbc:	c1 e1 08             	shl    $0x8,%ecx
    4dbf:	44 09 d1             	or     %r10d,%ecx
    4dc2:	41 83 f8 13          	cmp    $0x13,%r8d
    4dc6:	c5 f9 6e f9          	vmovd  %ecx,%xmm7
    4dca:	89 f1                	mov    %esi,%ecx
    4dcc:	0f b6 74 24 64       	movzbl 0x64(%rsp),%esi
    4dd1:	41 0f 94 c0          	sete   %r8b
    4dd5:	41 c1 e7 0c          	shl    $0xc,%r15d
    4dd9:	c5 f9 70 c7 00       	vpshufd $0x0,%xmm7,%xmm0
    4dde:	45 0f b6 c0          	movzbl %r8b,%r8d
    4de2:	c1 e7 08             	shl    $0x8,%edi
    4de5:	c4 e2 71 00 c0       	vpshufb %xmm0,%xmm1,%xmm0
    4dea:	89 74 24 64          	mov    %esi,0x64(%rsp)
    4dee:	c4 c1 f9 7e c2       	vmovq  %xmm0,%r10
    4df3:	41 d3 ea             	shr    %cl,%r10d
    4df6:	41 83 e2 03          	and    $0x3,%r10d
    4dfa:	49 83 f8 00          	cmp    $0x0,%r8
    4dfe:	41 0f 45 d2          	cmovne %r10d,%edx
    4e02:	41 89 f0             	mov    %esi,%r8d
    4e05:	c1 e6 04             	shl    $0x4,%esi
    4e08:	44 8b 94 24 e0 00 00 	mov    0xe0(%rsp),%r10d
    4e0f:	00 
    4e10:	41 09 f7             	or     %esi,%r15d
    4e13:	89 74 24 60          	mov    %esi,0x60(%rsp)
    4e17:	41 09 c7             	or     %eax,%r15d
    4e1a:	31 c0                	xor    %eax,%eax
    4e1c:	41 09 ff             	or     %edi,%r15d
    4e1f:	41 81 ff 32 13 00 00 	cmp    $0x1332,%r15d
    4e26:	44 0f b6 bc 24 c0 00 	movzbl 0xc0(%rsp),%r15d
    4e2d:	00 00 
    4e2f:	0f 97 c0             	seta   %al
    4e32:	48 83 f8 00          	cmp    $0x0,%rax
    4e36:	41 0f 45 d4          	cmovne %r12d,%edx
    4e3a:	31 c0                	xor    %eax,%eax
    4e3c:	41 80 f8 03          	cmp    $0x3,%r8b
    4e40:	0f 94 c0             	sete   %al
    4e43:	48 83 f8 00          	cmp    $0x0,%rax
    4e47:	41 0f 45 d4          	cmovne %r12d,%edx
    4e4b:	89 54 24 28          	mov    %edx,0x28(%rsp)
    4e4f:	44 89 d2             	mov    %r10d,%edx
    4e52:	8d 42 02             	lea    0x2(%rdx),%eax
    4e55:	0f b6 c0             	movzbl %al,%eax
    4e58:	48 89 c2             	mov    %rax,%rdx
    4e5b:	48 8d 48 01          	lea    0x1(%rax),%rcx
    4e5f:	4c 09 ca             	or     %r9,%rdx
    4e62:	48 c1 e1 08          	shl    $0x8,%rcx
    4e66:	c4 e1 f9 6e c2       	vmovq  %rdx,%xmm0
    4e6b:	48 8d 50 03          	lea    0x3(%rax),%rdx
    4e6f:	48 c1 e2 18          	shl    $0x18,%rdx
    4e73:	c4 c3 f9 22 c3 01    	vpinsrq $0x1,%r11,%xmm0,%xmm0
    4e79:	48 09 ca             	or     %rcx,%rdx
    4e7c:	c4 e2 51 00 c0       	vpshufb %xmm0,%xmm5,%xmm0
    4e81:	48 b9 00 00 00 00 80 	movabs $0x8080808000000000,%rcx
    4e88:	80 80 80 
    4e8b:	48 09 c2             	or     %rax,%rdx
    4e8e:	48 83 c0 02          	add    $0x2,%rax
    4e92:	c4 c1 f9 7e c0       	vmovq  %xmm0,%r8
    4e97:	48 c1 e0 10          	shl    $0x10,%rax
    4e9b:	48 09 d0             	or     %rdx,%rax
    4e9e:	44 89 d2             	mov    %r10d,%edx
    4ea1:	83 c2 03             	add    $0x3,%edx
    4ea4:	48 09 c8             	or     %rcx,%rax
    4ea7:	0f b6 d2             	movzbl %dl,%edx
    4eaa:	c4 e1 f9 6e e0       	vmovq  %rax,%xmm4
    4eaf:	48 8d 72 01          	lea    0x1(%rdx),%rsi
    4eb3:	48 8d 42 03          	lea    0x3(%rdx),%rax
    4eb7:	c4 c3 d9 22 c3 01    	vpinsrq $0x1,%r11,%xmm4,%xmm0
    4ebd:	48 c1 e6 08          	shl    $0x8,%rsi
    4ec1:	48 c1 e0 18          	shl    $0x18,%rax
    4ec5:	c4 e2 51 00 c0       	vpshufb %xmm0,%xmm5,%xmm0
    4eca:	48 09 f0             	or     %rsi,%rax
    4ecd:	48 8d 72 02          	lea    0x2(%rdx),%rsi
    4ed1:	c4 e1 f9 7e c3       	vmovq  %xmm0,%rbx
    4ed6:	48 09 d0             	or     %rdx,%rax
    4ed9:	48 c1 e6 10          	shl    $0x10,%rsi
    4edd:	4c 09 ca             	or     %r9,%rdx
    4ee0:	48 89 5c 24 70       	mov    %rbx,0x70(%rsp)
    4ee5:	48 09 f0             	or     %rsi,%rax
    4ee8:	c4 e1 f9 6e e2       	vmovq  %rdx,%xmm4
    4eed:	bb 04 00 00 00       	mov    $0x4,%ebx
    4ef2:	44 89 e2             	mov    %r12d,%edx
    4ef5:	48 09 c8             	or     %rcx,%rax
    4ef8:	31 c9                	xor    %ecx,%ecx
    4efa:	41 80 ff 05          	cmp    $0x5,%r15b
    4efe:	44 89 e6             	mov    %r12d,%esi
    4f01:	c4 e1 f9 6e f8       	vmovq  %rax,%xmm7
    4f06:	0f 94 c1             	sete   %cl
    4f09:	45 89 c1             	mov    %r8d,%r9d
    4f0c:	45 31 d2             	xor    %r10d,%r10d
    4f0f:	c4 c3 c1 22 c3 01    	vpinsrq $0x1,%r11,%xmm7,%xmm0
    4f15:	c4 e2 51 00 c0       	vpshufb %xmm0,%xmm5,%xmm0
    4f1a:	c4 e1 f9 7e c0       	vmovq  %xmm0,%rax
    4f1f:	c4 c3 d9 22 c3 01    	vpinsrq $0x1,%r11,%xmm4,%xmm0
    4f25:	45 89 f3             	mov    %r14d,%r11d
    4f28:	48 83 f9 00          	cmp    $0x0,%rcx
    4f2c:	0f 45 54 24 70       	cmovne 0x70(%rsp),%edx
    4f31:	48 83 f9 00          	cmp    $0x0,%rcx
    4f35:	0f 45 f3             	cmovne %ebx,%esi
    4f38:	0f b6 8c 24 80 00 00 	movzbl 0x80(%rsp),%ecx
    4f3f:	00 
    4f40:	41 c1 e3 08          	shl    $0x8,%r11d
    4f44:	c4 e2 51 00 e8       	vpshufb %xmm0,%xmm5,%xmm5
    4f49:	89 4c 24 5c          	mov    %ecx,0x5c(%rsp)
    4f4d:	44 09 d9             	or     %r11d,%ecx
    4f50:	81 f9 04 01 00 00    	cmp    $0x104,%ecx
    4f56:	41 0f 94 c2          	sete   %r10b
    4f5a:	41 c0 e9 06          	shr    $0x6,%r9b
    4f5e:	41 0f b6 c9          	movzbl %r9b,%ecx
    4f62:	41 b9 ff 00 00 00    	mov    $0xff,%r9d
    4f68:	41 c1 e6 10          	shl    $0x10,%r14d
    4f6c:	44 89 cf             	mov    %r9d,%edi
    4f6f:	49 83 fa 00          	cmp    $0x0,%r10
    4f73:	0f 45 f9             	cmovne %ecx,%edi
    4f76:	44 89 e1             	mov    %r12d,%ecx
    4f79:	89 7c 24 24          	mov    %edi,0x24(%rsp)
    4f7d:	8b 7c 24 38          	mov    0x38(%rsp),%edi
    4f81:	49 83 fa 00          	cmp    $0x0,%r10
    4f85:	41 0f 45 cd          	cmovne %r13d,%ecx
    4f89:	8d 74 0e 01          	lea    0x1(%rsi,%rcx,1),%esi
    4f8d:	89 74 24 58          	mov    %esi,0x58(%rsp)
    4f91:	44 89 c6             	mov    %r8d,%esi
    4f94:	40 c0 ee 03          	shr    $0x3,%sil
    4f98:	89 f1                	mov    %esi,%ecx
    4f9a:	8d 34 bd 00 00 00 00 	lea    0x0(,%rdi,4),%esi
    4fa1:	83 e6 08             	and    $0x8,%esi
    4fa4:	83 e1 07             	and    $0x7,%ecx
    4fa7:	09 f1                	or     %esi,%ecx
    4fa9:	44 89 ce             	mov    %r9d,%esi
    4fac:	49 83 fa 00          	cmp    $0x0,%r10
    4fb0:	0f 45 f1             	cmovne %ecx,%esi
    4fb3:	8d 0c fd 00 00 00 00 	lea    0x0(,%rdi,8),%ecx
    4fba:	44 89 c7             	mov    %r8d,%edi
    4fbd:	89 74 24 38          	mov    %esi,0x38(%rsp)
    4fc1:	45 0f b6 c0          	movzbl %r8b,%r8d
    4fc5:	83 e7 07             	and    $0x7,%edi
    4fc8:	83 e1 08             	and    $0x8,%ecx
    4fcb:	89 fe                	mov    %edi,%esi
    4fcd:	44 89 e7             	mov    %r12d,%edi
    4fd0:	09 ce                	or     %ecx,%esi
    4fd2:	49 83 fa 00          	cmp    $0x0,%r10
    4fd6:	0f 45 fe             	cmovne %esi,%edi
    4fd9:	89 fe                	mov    %edi,%esi
    4fdb:	41 0f b6 ff          	movzbl %r15b,%edi
    4fdf:	41 89 f7             	mov    %esi,%r15d
    4fe2:	89 74 24 20          	mov    %esi,0x20(%rsp)
    4fe6:	41 c1 e7 08          	shl    $0x8,%r15d
    4fea:	44 89 fe             	mov    %r15d,%esi
    4fed:	45 31 ff             	xor    %r15d,%r15d
    4ff0:	81 e6 00 07 00 00    	and    $0x700,%esi
    4ff6:	44 09 f6             	or     %r14d,%esi
    4ff9:	09 fe                	or     %edi,%esi
    4ffb:	81 fe 04 05 01 00    	cmp    $0x10504,%esi
    5001:	44 89 e6             	mov    %r12d,%esi
    5004:	41 0f 94 c7          	sete   %r15b
    5008:	41 09 fb             	or     %edi,%r11d
    500b:	44 89 e7             	mov    %r12d,%edi
    500e:	49 83 ff 00          	cmp    $0x0,%r15
    5012:	0f 45 f3             	cmovne %ebx,%esi
    5015:	49 83 ff 00          	cmp    $0x0,%r15
    5019:	0f 45 d0             	cmovne %eax,%edx
    501c:	44 8b 7c 24 58       	mov    0x58(%rsp),%r15d
    5021:	41 01 f7             	add    %esi,%r15d
    5024:	c4 e1 f9 7e ee       	vmovq  %xmm5,%rsi
    5029:	44 89 fb             	mov    %r15d,%ebx
    502c:	45 31 ff             	xor    %r15d,%r15d
    502f:	41 81 fb 44 01 00 00 	cmp    $0x144,%r11d
    5036:	40 0f b6 f6          	movzbl %sil,%esi
    503a:	41 0f 94 c7          	sete   %r15b
    503e:	49 83 ff 00          	cmp    $0x0,%r15
    5042:	0f 45 fe             	cmovne %esi,%edi
    5045:	44 89 e6             	mov    %r12d,%esi
    5048:	49 83 ff 00          	cmp    $0x0,%r15
    504c:	41 0f 45 f5          	cmovne %r13d,%esi
    5050:	01 de                	add    %ebx,%esi
    5052:	41 81 fb 84 01 00 00 	cmp    $0x184,%r11d
    5059:	41 bf 04 00 00 00    	mov    $0x4,%r15d
    505f:	8b 5c 24 5c          	mov    0x5c(%rsp),%ebx
    5063:	41 0f 94 c3          	sete   %r11b
    5067:	45 0f b6 db          	movzbl %r11b,%r11d
    506b:	49 83 fb 00          	cmp    $0x0,%r11
    506f:	0f 45 d0             	cmovne %eax,%edx
    5072:	44 89 e0             	mov    %r12d,%eax
    5075:	49 83 fb 00          	cmp    $0x0,%r11
    5079:	41 0f 45 c7          	cmovne %r15d,%eax
    507d:	45 31 db             	xor    %r11d,%r11d
    5080:	01 c6                	add    %eax,%esi
    5082:	80 bc 24 80 00 00 00 	cmpb   $0x4,0x80(%rsp)
    5089:	04 
    508a:	44 89 e0             	mov    %r12d,%eax
    508d:	41 0f 95 c3          	setne  %r11b
    5091:	49 83 fb 00          	cmp    $0x0,%r11
    5095:	41 0f 45 c5          	cmovne %r13d,%eax
    5099:	44 8b 5c 24 64       	mov    0x64(%rsp),%r11d
    509e:	c1 e0 08             	shl    $0x8,%eax
    50a1:	44 09 f0             	or     %r14d,%eax
    50a4:	44 09 d8             	or     %r11d,%eax
    50a7:	45 31 db             	xor    %r11d,%r11d
    50aa:	3d 01 01 01 00       	cmp    $0x10101,%eax
    50af:	41 0f 94 c3          	sete   %r11b
    50b3:	49 83 fb 00          	cmp    $0x0,%r11
    50b7:	41 0f 45 f8          	cmovne %r8d,%edi
    50bb:	45 89 e0             	mov    %r12d,%r8d
    50be:	49 83 fb 00          	cmp    $0x0,%r11
    50c2:	45 0f 45 c5          	cmovne %r13d,%r8d
    50c6:	41 01 f0             	add    %esi,%r8d
    50c9:	3d 02 01 01 00       	cmp    $0x10102,%eax
    50ce:	4c 0f be df          	movsbq %dil,%r11
    50d2:	44 89 e6             	mov    %r12d,%esi
    50d5:	0f 94 c0             	sete   %al
    50d8:	09 d9                	or     %ebx,%ecx
    50da:	0f b6 c0             	movzbl %al,%eax
    50dd:	49 83 fa 00          	cmp    $0x0,%r10
    50e1:	41 0f 45 cf          	cmovne %r15d,%ecx
    50e5:	48 83 f8 00          	cmp    $0x0,%rax
    50e9:	41 0f 45 f7          	cmovne %r15d,%esi
    50ed:	48 83 f8 00          	cmp    $0x0,%rax
    50f1:	0f 45 54 24 70       	cmovne 0x70(%rsp),%edx
    50f6:	41 01 f0             	add    %esi,%r8d
    50f9:	31 c0                	xor    %eax,%eax
    50fb:	8b 74 24 20          	mov    0x20(%rsp),%esi
    50ff:	4d 85 db             	test   %r11,%r11
    5102:	0f 94 c0             	sete   %al
    5105:	89 d2                	mov    %edx,%edx
    5107:	41 89 da             	mov    %ebx,%r10d
    510a:	48 83 f8 00          	cmp    $0x0,%rax
    510e:	4c 0f 45 da          	cmovne %rdx,%r11
    5112:	31 d2                	xor    %edx,%edx
    5114:	80 bc 24 c0 00 00 00 	cmpb   $0x4,0xc0(%rsp)
    511b:	04 
    511c:	0f b6 c1             	movzbl %cl,%eax
    511f:	44 8b 7c 24 60       	mov    0x60(%rsp),%r15d
    5124:	0f 94 c2             	sete   %dl
    5127:	48 8b 7c 24 78       	mov    0x78(%rsp),%rdi
    512c:	48 83 fa 00          	cmp    $0x0,%rdx
    5130:	41 0f 45 c1          	cmovne %r9d,%eax
    5134:	89 f2                	mov    %esi,%edx
    5136:	83 e2 07             	and    $0x7,%edx
    5139:	44 09 fa             	or     %r15d,%edx
    513c:	83 fa 05             	cmp    $0x5,%edx
    513f:	0f 94 c2             	sete   %dl
    5142:	0f b6 d2             	movzbl %dl,%edx
    5145:	48 83 fa 00          	cmp    $0x0,%rdx
    5149:	41 0f 45 f1          	cmovne %r9d,%esi
    514d:	31 d2                	xor    %edx,%edx
    514f:	80 f9 04             	cmp    $0x4,%cl
    5152:	0f 94 c2             	sete   %dl
    5155:	45 09 fa             	or     %r15d,%r10d
    5158:	48 83 fa 00          	cmp    $0x0,%rdx
    515c:	0f 45 c6             	cmovne %esi,%eax
    515f:	31 d2                	xor    %edx,%edx
    5161:	41 83 fa 05          	cmp    $0x5,%r10d
    5165:	89 c6                	mov    %eax,%esi
    5167:	b8 10 00 00 00       	mov    $0x10,%eax
    516c:	0f 94 c2             	sete   %dl
    516f:	31 db                	xor    %ebx,%ebx
    5171:	48 83 fa 00          	cmp    $0x0,%rdx
    5175:	0f 45 f0             	cmovne %eax,%esi
    5178:	e8 23 f1 ff ff       	call   42a0 <register_value_select>
    517d:	89 f1                	mov    %esi,%ecx
    517f:	8b 74 24 38          	mov    0x38(%rsp),%esi
    5183:	4c 8b 74 24 68       	mov    0x68(%rsp),%r14
    5188:	44 8b 54 24 34       	mov    0x34(%rsp),%r10d
    518d:	48 89 c2             	mov    %rax,%rdx
    5190:	31 c0                	xor    %eax,%eax
    5192:	48 83 f9 10          	cmp    $0x10,%rcx
    5196:	49 0f 44 d6          	cmove  %r14,%rdx
    519a:	48 81 f9 ff 00 00 00 	cmp    $0xff,%rcx
    51a1:	48 0f 44 d3          	cmove  %rbx,%rdx
    51a5:	89 d1                	mov    %edx,%ecx
    51a7:	49 83 fa 01          	cmp    $0x1,%r10
    51ab:	48 0f 44 d1          	cmove  %rcx,%rdx
    51af:	83 fe 04             	cmp    $0x4,%esi
    51b2:	0f 94 c0             	sete   %al
    51b5:	48 83 f8 00          	cmp    $0x0,%rax
    51b9:	41 0f 45 f1          	cmovne %r9d,%esi
    51bd:	e8 de f0 ff ff       	call   42a0 <register_value_select>
    51c2:	44 8b 4c 24 28       	mov    0x28(%rsp),%r9d
    51c7:	89 f6                	mov    %esi,%esi
    51c9:	48 83 fe 10          	cmp    $0x10,%rsi
    51cd:	49 0f 44 c6          	cmove  %r14,%rax
    51d1:	48 81 fe ff 00 00 00 	cmp    $0xff,%rsi
    51d8:	48 0f 44 c3          	cmove  %rbx,%rax
    51dc:	89 c1                	mov    %eax,%ecx
    51de:	41 be 02 00 00 00    	mov    $0x2,%r14d
    51e4:	49 83 fa 01          	cmp    $0x1,%r10
    51e8:	48 0f 44 c1          	cmove  %rcx,%rax
    51ec:	45 85 c9             	test   %r9d,%r9d
    51ef:	44 89 e9             	mov    %r13d,%ecx
    51f2:	40 0f 94 c6          	sete   %sil
    51f6:	40 0f b6 f6          	movzbl %sil,%esi
    51fa:	48 83 fe 00          	cmp    $0x0,%rsi
    51fe:	41 0f 45 cc          	cmovne %r12d,%ecx
    5202:	41 01 c8             	add    %ecx,%r8d
    5205:	0f b6 4c 24 24       	movzbl 0x24(%rsp),%ecx
    520a:	44 89 ee             	mov    %r13d,%esi
    520d:	d3 e6                	shl    %cl,%esi
    520f:	48 63 ce             	movslq %esi,%rcx
    5212:	48 0f af c1          	imul   %rcx,%rax
    5216:	48 01 c2             	add    %rax,%rdx
    5219:	8b 84 24 a0 00 00 00 	mov    0xa0(%rsp),%eax
    5220:	4c 01 da             	add    %r11,%rdx
    5223:	83 e0 0f             	and    $0xf,%eax
    5226:	8d 70 06             	lea    0x6(%rax),%esi
    5229:	e8 72 f0 ff ff       	call   42a0 <register_value_select>
    522e:	8b 74 24 40          	mov    0x40(%rsp),%esi
    5232:	44 8b 7c 24 3c       	mov    0x3c(%rsp),%r15d
    5237:	48 89 c1             	mov    %rax,%rcx
    523a:	8b 44 24 48          	mov    0x48(%rsp),%eax
    523e:	44 8b 64 24 2c       	mov    0x2c(%rsp),%r12d
    5243:	83 e6 03             	and    $0x3,%esi
    5246:	48 83 f8 01          	cmp    $0x1,%rax
    524a:	48 0f 44 d1          	cmove  %rcx,%rdx
    524e:	89 f1                	mov    %esi,%ecx
    5250:	49 89 c3             	mov    %rax,%r11
    5253:	be 04 00 00 00       	mov    $0x4,%esi
    5258:	83 c1 01             	add    $0x1,%ecx
    525b:	48 83 f8 00          	cmp    $0x0,%rax
    525f:	44 0f 45 c9          	cmovne %ecx,%r9d
    5263:	44 89 f8             	mov    %r15d,%eax
    5266:	44 09 e0             	or     %r12d,%eax
    5269:	49 89 c2             	mov    %rax,%r10
    526c:	48 83 f8 00          	cmp    $0x0,%rax
    5270:	45 0f 45 ce          	cmovne %r14d,%r9d
    5274:	e8 27 f0 ff ff       	call   42a0 <register_value_select>
    5279:	8b 4c 24 30          	mov    0x30(%rsp),%ecx
    527d:	8b 5c 24 4c          	mov    0x4c(%rsp),%ebx
    5281:	49 83 fa 01          	cmp    $0x1,%r10
    5285:	48 0f 44 d0          	cmove  %rax,%rdx
    5289:	42 8d 04 09          	lea    (%rcx,%r9,1),%eax
    528d:	31 c9                	xor    %ecx,%ecx
    528f:	44 8b 94 24 e0 00 00 	mov    0xe0(%rsp),%r10d
    5296:	00 
    5297:	83 f8 02             	cmp    $0x2,%eax
    529a:	44 89 c8             	mov    %r9d,%eax
    529d:	0f 97 c1             	seta   %cl
    52a0:	48 83 f9 00          	cmp    $0x0,%rcx
    52a4:	41 0f 45 c5          	cmovne %r13d,%eax
    52a8:	44 89 f9             	mov    %r15d,%ecx
    52ab:	44 09 d9             	or     %r11d,%ecx
    52ae:	48 83 f9 00          	cmp    $0x0,%rcx
    52b2:	45 0f 45 c5          	cmovne %r13d,%r8d
    52b6:	44 89 e1             	mov    %r12d,%ecx
    52b9:	48 83 f9 00          	cmp    $0x0,%rcx
    52bd:	45 0f 45 c6          	cmovne %r14d,%r8d
    52c1:	42 8d 0c 03          	lea    (%rbx,%r8,1),%ecx
    52c5:	48 8b 5c 24 50       	mov    0x50(%rsp),%rbx
    52ca:	44 01 d1             	add    %r10d,%ecx
    52cd:	83 f9 10             	cmp    $0x10,%ecx
    52d0:	48 89 13             	mov    %rdx,(%rbx)
    52d3:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
    52d8:	0f 96 c1             	setbe  %cl
    52db:	0f b6 c9             	movzbl %cl,%ecx
    52de:	48 21 c1             	and    %rax,%rcx
    52e1:	48 83 f9 00          	cmp    $0x0,%rcx
    52e5:	0f 45 c0             	cmovne %eax,%eax
    52e8:	f6 05 44 2b 01 00 08 	testb  $0x8,0x12b44(%rip)        # 17e33 <g_cpu_feature_indicator+0x3>
    52ef:	0f 84 1b 01 00 00    	je     5410 <ct_decode+0x10d0>
    52f5:	62 f1 7c 48 28 03    	vmovaps (%rbx),%zmm0
    52fb:	62 f1 7c 48 28 4b 01 	vmovaps 0x40(%rbx),%zmm1
    5302:	62 f1 7c 48 28 53 02 	vmovaps 0x80(%rbx),%zmm2
    5309:	62 f1 7c 48 28 5b 03 	vmovaps 0xc0(%rbx),%zmm3
    5310:	62 f1 7c 48 28 63 04 	vmovaps 0x100(%rbx),%zmm4
    5317:	62 f1 7c 48 28 6b 05 	vmovaps 0x140(%rbx),%zmm5
    531e:	62 f1 7c 48 28 73 06 	vmovaps 0x180(%rbx),%zmm6
    5325:	62 f1 7c 48 28 7b 07 	vmovaps 0x1c0(%rbx),%zmm7
    532c:	62 71 7c 48 28 43 08 	vmovaps 0x200(%rbx),%zmm8
    5333:	62 71 7c 48 28 4b 09 	vmovaps 0x240(%rbx),%zmm9
    533a:	62 71 7c 48 28 53 0a 	vmovaps 0x280(%rbx),%zmm10
    5341:	62 71 7c 48 28 5b 0b 	vmovaps 0x2c0(%rbx),%zmm11
    5348:	62 71 7c 48 28 63 0c 	vmovaps 0x300(%rbx),%zmm12
    534f:	62 71 7c 48 28 6b 0d 	vmovaps 0x340(%rbx),%zmm13
    5356:	62 71 7c 48 28 73 0e 	vmovaps 0x380(%rbx),%zmm14
    535d:	62 71 7c 48 28 7b 0f 	vmovaps 0x3c0(%rbx),%zmm15
    5364:	48 8b 94 24 38 05 00 	mov    0x538(%rsp),%rdx
    536b:	00 
    536c:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    5373:	00 00 
    5375:	0f 85 0d 01 00 00    	jne    5488 <ct_decode+0x1148>
    537b:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    537f:	5b                   	pop    %rbx
    5380:	41 5c                	pop    %r12
    5382:	41 5d                	pop    %r13
    5384:	41 5e                	pop    %r14
    5386:	41 5f                	pop    %r15
    5388:	5d                   	pop    %rbp
    5389:	c3                   	ret    
    538a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5390:	c5 fc 29 00          	vmovaps %ymm0,(%rax)
    5394:	c5 fc 29 48 20       	vmovaps %ymm1,0x20(%rax)
    5399:	c5 fc 29 50 40       	vmovaps %ymm2,0x40(%rax)
    539e:	c5 fc 29 58 60       	vmovaps %ymm3,0x60(%rax)
    53a3:	c5 fc 29 a0 80 00 00 	vmovaps %ymm4,0x80(%rax)
    53aa:	00 
    53ab:	c5 fc 29 a8 a0 00 00 	vmovaps %ymm5,0xa0(%rax)
    53b2:	00 
    53b3:	c5 fc 29 b0 c0 00 00 	vmovaps %ymm6,0xc0(%rax)
    53ba:	00 
    53bb:	c5 fc 29 b8 e0 00 00 	vmovaps %ymm7,0xe0(%rax)
    53c2:	00 
    53c3:	c5 7c 29 80 00 01 00 	vmovaps %ymm8,0x100(%rax)
    53ca:	00 
    53cb:	c5 7c 29 88 20 01 00 	vmovaps %ymm9,0x120(%rax)
    53d2:	00 
    53d3:	c5 7c 29 90 40 01 00 	vmovaps %ymm10,0x140(%rax)
    53da:	00 
    53db:	c5 7c 29 98 60 01 00 	vmovaps %ymm11,0x160(%rax)
    53e2:	00 
    53e3:	c5 7c 29 a0 80 01 00 	vmovaps %ymm12,0x180(%rax)
    53ea:	00 
    53eb:	c5 7c 29 a8 a0 01 00 	vmovaps %ymm13,0x1a0(%rax)
    53f2:	00 
    53f3:	c5 7c 29 b0 c0 01 00 	vmovaps %ymm14,0x1c0(%rax)
    53fa:	00 
    53fb:	c5 7c 29 b8 e0 01 00 	vmovaps %ymm15,0x1e0(%rax)
    5402:	00 
    5403:	e9 fa ef ff ff       	jmp    4402 <ct_decode+0xc2>
    5408:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    540f:	00 
    5410:	c5 fc 28 03          	vmovaps (%rbx),%ymm0
    5414:	c5 fc 28 4b 20       	vmovaps 0x20(%rbx),%ymm1
    5419:	c5 fc 28 53 40       	vmovaps 0x40(%rbx),%ymm2
    541e:	c5 fc 28 5b 60       	vmovaps 0x60(%rbx),%ymm3
    5423:	c5 fc 28 a3 80 00 00 	vmovaps 0x80(%rbx),%ymm4
    542a:	00 
    542b:	c5 fc 28 ab a0 00 00 	vmovaps 0xa0(%rbx),%ymm5
    5432:	00 
    5433:	c5 fc 28 b3 c0 00 00 	vmovaps 0xc0(%rbx),%ymm6
    543a:	00 
    543b:	c5 fc 28 bb e0 00 00 	vmovaps 0xe0(%rbx),%ymm7
    5442:	00 
    5443:	c5 7c 28 83 00 01 00 	vmovaps 0x100(%rbx),%ymm8
    544a:	00 
    544b:	c5 7c 28 8b 20 01 00 	vmovaps 0x120(%rbx),%ymm9
    5452:	00 
    5453:	c5 7c 28 93 40 01 00 	vmovaps 0x140(%rbx),%ymm10
    545a:	00 
    545b:	c5 7c 28 9b 60 01 00 	vmovaps 0x160(%rbx),%ymm11
    5462:	00 
    5463:	c5 7c 28 a3 80 01 00 	vmovaps 0x180(%rbx),%ymm12
    546a:	00 
    546b:	c5 7c 28 ab a0 01 00 	vmovaps 0x1a0(%rbx),%ymm13
    5472:	00 
    5473:	c5 7c 28 b3 c0 01 00 	vmovaps 0x1c0(%rbx),%ymm14
    547a:	00 
    547b:	c5 7c 28 bb e0 01 00 	vmovaps 0x1e0(%rbx),%ymm15
    5482:	00 
    5483:	e9 dc fe ff ff       	jmp    5364 <ct_decode+0x1024>
    5488:	e8 e3 b3 00 00       	call   10870 <__stack_chk_fail>
    548d:	0f 1f 00             	nopl   (%rax)

0000000000005490 <_ZL22init_rts_contexts_emasP9_layout_tS0_m>:
    5490:	48 39 f7             	cmp    %rsi,%rdi
    5493:	0f 83 f7 01 00 00    	jae    5690 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x200>
    5499:	41 57                	push   %r15
    549b:	41 56                	push   %r14
    549d:	49 89 d6             	mov    %rdx,%r14
    54a0:	41 55                	push   %r13
    54a2:	49 89 f5             	mov    %rsi,%r13
    54a5:	41 54                	push   %r12
    54a7:	55                   	push   %rbp
    54a8:	53                   	push   %rbx
    54a9:	48 89 fb             	mov    %rdi,%rbx
    54ac:	48 83 ec 08          	sub    $0x8,%rsp
    54b0:	66 f7 03 00 10       	testw  $0x1000,(%rbx)
    54b5:	0f 85 d5 00 00 00    	jne    5590 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x100>
    54bb:	48 8b 6b 08          	mov    0x8(%rbx),%rbp
    54bf:	e8 34 ca 00 00       	call   11ef8 <get_enclave_base>
    54c4:	44 8b 63 04          	mov    0x4(%rbx),%r12d
    54c8:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
    54cc:	4c 01 f5             	add    %r14,%rbp
    54cf:	48 01 c5             	add    %rax,%rbp
    54d2:	49 c1 e4 0c          	shl    $0xc,%r12
    54d6:	48 85 c9             	test   %rcx,%rcx
    54d9:	0f 84 81 00 00 00    	je     5560 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xd0>
    54df:	0f b7 43 02          	movzwl 0x2(%rbx),%eax
    54e3:	a8 04                	test   $0x4,%al
    54e5:	75 79                	jne    5560 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xd0>
    54e7:	89 c2                	mov    %eax,%edx
    54e9:	41 89 c7             	mov    %eax,%r15d
    54ec:	83 e2 10             	and    $0x10,%edx
    54ef:	41 83 e7 08          	and    $0x8,%r15d
    54f3:	a8 01                	test   $0x1,%al
    54f5:	0f 84 e5 00 00 00    	je     55e0 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x150>
    54fb:	66 85 d2             	test   %dx,%dx
    54fe:	0f 85 3c 01 00 00    	jne    5640 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x1b0>
    5504:	0f b7 03             	movzwl (%rbx),%eax
    5507:	66 45 85 ff          	test   %r15w,%r15w
    550b:	0f 85 e1 00 00 00    	jne    55f2 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x162>
    5511:	66 83 f8 04          	cmp    $0x4,%ax
    5515:	0f 84 65 01 00 00    	je     5680 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x1f0>
    551b:	83 e1 07             	and    $0x7,%ecx
    551e:	ba 80 02 00 00       	mov    $0x280,%edx
    5523:	45 31 c9             	xor    %r9d,%r9d
    5526:	45 31 c0             	xor    %r8d,%r8d
    5529:	4c 89 e6             	mov    %r12,%rsi
    552c:	48 89 ef             	mov    %rbp,%rdi
    552f:	e8 fc 61 00 00       	call   b730 <mm_init_ema>
    5534:	85 c0                	test   %eax,%eax
    5536:	75 44                	jne    557c <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xec>
    5538:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    553f:	00 
    5540:	48 83 c3 20          	add    $0x20,%rbx
    5544:	4c 39 eb             	cmp    %r13,%rbx
    5547:	0f 82 63 ff ff ff    	jb     54b0 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x20>
    554d:	48 83 c4 08          	add    $0x8,%rsp
    5551:	31 c0                	xor    %eax,%eax
    5553:	5b                   	pop    %rbx
    5554:	5d                   	pop    %rbp
    5555:	41 5c                	pop    %r12
    5557:	41 5d                	pop    %r13
    5559:	41 5e                	pop    %r14
    555b:	41 5f                	pop    %r15
    555d:	c3                   	ret    
    555e:	66 90                	xchg   %ax,%ax
    5560:	45 31 c9             	xor    %r9d,%r9d
    5563:	45 31 c0             	xor    %r8d,%r8d
    5566:	31 c9                	xor    %ecx,%ecx
    5568:	ba 81 00 00 00       	mov    $0x81,%edx
    556d:	4c 89 e6             	mov    %r12,%rsi
    5570:	48 89 ef             	mov    %rbp,%rdi
    5573:	e8 b8 61 00 00       	call   b730 <mm_init_ema>
    5578:	85 c0                	test   %eax,%eax
    557a:	74 c4                	je     5540 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xb0>
    557c:	b8 01 00 00 00       	mov    $0x1,%eax
    5581:	48 83 c4 08          	add    $0x8,%rsp
    5585:	5b                   	pop    %rbx
    5586:	5d                   	pop    %rbp
    5587:	41 5c                	pop    %r12
    5589:	41 5d                	pop    %r13
    558b:	41 5e                	pop    %r14
    558d:	41 5f                	pop    %r15
    558f:	c3                   	ret    
    5590:	8b 43 04             	mov    0x4(%rbx),%eax
    5593:	31 ed                	xor    %ebp,%ebp
    5595:	45 31 e4             	xor    %r12d,%r12d
    5598:	85 c0                	test   %eax,%eax
    559a:	74 a4                	je     5540 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xb0>
    559c:	0f b7 7b 02          	movzwl 0x2(%rbx),%edi
    55a0:	4c 03 63 08          	add    0x8(%rbx),%r12
    55a4:	48 89 de             	mov    %rbx,%rsi
    55a7:	4c 89 e2             	mov    %r12,%rdx
    55aa:	f7 df                	neg    %edi
    55ac:	48 63 ff             	movslq %edi,%rdi
    55af:	48 c1 e7 05          	shl    $0x5,%rdi
    55b3:	48 01 df             	add    %rbx,%rdi
    55b6:	e8 d5 fe ff ff       	call   5490 <_ZL22init_rts_contexts_emasP9_layout_tS0_m>
    55bb:	85 c0                	test   %eax,%eax
    55bd:	75 c2                	jne    5581 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xf1>
    55bf:	83 c5 01             	add    $0x1,%ebp
    55c2:	3b 6b 04             	cmp    0x4(%rbx),%ebp
    55c5:	72 d5                	jb     559c <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x10c>
    55c7:	48 83 c3 20          	add    $0x20,%rbx
    55cb:	4c 39 eb             	cmp    %r13,%rbx
    55ce:	0f 82 dc fe ff ff    	jb     54b0 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x20>
    55d4:	e9 74 ff ff ff       	jmp    554d <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xbd>
    55d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    55e0:	66 85 d2             	test   %dx,%dx
    55e3:	75 5b                	jne    5640 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x1b0>
    55e5:	66 45 85 ff          	test   %r15w,%r15w
    55e9:	0f 84 51 ff ff ff    	je     5540 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xb0>
    55ef:	0f b7 03             	movzwl (%rbx),%eax
    55f2:	8d 50 ef             	lea    -0x11(%rax),%edx
    55f5:	66 83 fa 01          	cmp    $0x1,%dx
    55f9:	76 0b                	jbe    5606 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x176>
    55fb:	ba e4 02 00 00       	mov    $0x2e4,%edx
    5600:	66 83 f8 07          	cmp    $0x7,%ax
    5604:	75 05                	jne    560b <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x17b>
    5606:	ba d4 02 00 00       	mov    $0x2d4,%edx
    560b:	45 31 c9             	xor    %r9d,%r9d
    560e:	45 31 c0             	xor    %r8d,%r8d
    5611:	31 c9                	xor    %ecx,%ecx
    5613:	4c 89 e6             	mov    %r12,%rsi
    5616:	48 89 ef             	mov    %rbp,%rdi
    5619:	e8 12 62 00 00       	call   b830 <mm_alloc>
    561e:	85 c0                	test   %eax,%eax
    5620:	0f 85 56 ff ff ff    	jne    557c <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xec>
    5626:	48 83 c3 20          	add    $0x20,%rbx
    562a:	4c 39 eb             	cmp    %r13,%rbx
    562d:	0f 82 7d fe ff ff    	jb     54b0 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x20>
    5633:	e9 15 ff ff ff       	jmp    554d <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xbd>
    5638:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    563f:	00 
    5640:	45 31 c9             	xor    %r9d,%r9d
    5643:	45 31 c0             	xor    %r8d,%r8d
    5646:	b9 03 00 00 00       	mov    $0x3,%ecx
    564b:	ba 80 00 00 00       	mov    $0x80,%edx
    5650:	4c 89 e6             	mov    %r12,%rsi
    5653:	48 89 ef             	mov    %rbp,%rdi
    5656:	e8 d5 60 00 00       	call   b730 <mm_init_ema>
    565b:	85 c0                	test   %eax,%eax
    565d:	0f 85 19 ff ff ff    	jne    557c <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xec>
    5663:	4c 89 e6             	mov    %r12,%rsi
    5666:	48 89 ef             	mov    %rbp,%rdi
    5669:	e8 02 62 00 00       	call   b870 <mm_dealloc>
    566e:	85 c0                	test   %eax,%eax
    5670:	0f 84 6f ff ff ff    	je     55e5 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x155>
    5676:	e9 01 ff ff ff       	jmp    557c <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xec>
    567b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5680:	ba 80 01 00 00       	mov    $0x180,%edx
    5685:	31 c9                	xor    %ecx,%ecx
    5687:	e9 97 fe ff ff       	jmp    5523 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x93>
    568c:	0f 1f 40 00          	nopl   0x0(%rax)
    5690:	31 c0                	xor    %eax,%eax
    5692:	c3                   	ret    
    5693:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    569a:	00 00 00 
    569d:	0f 1f 00             	nopl   (%rax)

00000000000056a0 <init_rts_emas>:
    56a0:	f3 0f 1e fa          	endbr64 
    56a4:	55                   	push   %rbp
    56a5:	48 89 d5             	mov    %rdx,%rbp
    56a8:	53                   	push   %rbx
    56a9:	48 89 f3             	mov    %rsi,%rbx
    56ac:	48 83 ec 08          	sub    $0x8,%rsp
    56b0:	e8 5b 32 00 00       	call   8910 <init_segment_emas>
    56b5:	85 c0                	test   %eax,%eax
    56b7:	74 07                	je     56c0 <init_rts_emas+0x20>
    56b9:	48 83 c4 08          	add    $0x8,%rsp
    56bd:	5b                   	pop    %rbx
    56be:	5d                   	pop    %rbp
    56bf:	c3                   	ret    
    56c0:	48 83 c4 08          	add    $0x8,%rsp
    56c4:	48 89 ee             	mov    %rbp,%rsi
    56c7:	48 89 df             	mov    %rbx,%rdi
    56ca:	31 d2                	xor    %edx,%edx
    56cc:	5b                   	pop    %rbx
    56cd:	5d                   	pop    %rbp
    56ce:	e9 bd fd ff ff       	jmp    5490 <_ZL22init_rts_contexts_emasP9_layout_tS0_m>
    56d3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    56da:	00 00 00 
    56dd:	0f 1f 00             	nopl   (%rax)

00000000000056e0 <sgx_mm_alloc_ocall>:
    56e0:	f3 0f 1e fa          	endbr64 
    56e4:	41 56                	push   %r14
    56e6:	41 89 ce             	mov    %ecx,%r14d
    56e9:	41 55                	push   %r13
    56eb:	49 89 fd             	mov    %rdi,%r13
    56ee:	bf 20 00 00 00       	mov    $0x20,%edi
    56f3:	41 54                	push   %r12
    56f5:	49 89 f4             	mov    %rsi,%r12
    56f8:	55                   	push   %rbp
    56f9:	89 d5                	mov    %edx,%ebp
    56fb:	53                   	push   %rbx
    56fc:	e8 ff 03 00 00       	call   5b00 <sgx_ocalloc>
    5701:	48 85 c0             	test   %rax,%rax
    5704:	74 4a                	je     5750 <sgx_mm_alloc_ocall+0x70>
    5706:	89 68 18             	mov    %ebp,0x18(%rax)
    5709:	48 89 c6             	mov    %rax,%rsi
    570c:	bf fa ff ff ff       	mov    $0xfffffffa,%edi
    5711:	48 89 c3             	mov    %rax,%rbx
    5714:	4c 89 68 08          	mov    %r13,0x8(%rax)
    5718:	bd 0e 00 00 00       	mov    $0xe,%ebp
    571d:	4c 89 60 10          	mov    %r12,0x10(%rax)
    5721:	44 89 70 1c          	mov    %r14d,0x1c(%rax)
    5725:	e8 96 19 00 00       	call   70c0 <sgx_ocall>
    572a:	85 c0                	test   %eax,%eax
    572c:	74 12                	je     5740 <sgx_mm_alloc_ocall+0x60>
    572e:	e8 ad 04 00 00       	call   5be0 <sgx_ocfree>
    5733:	5b                   	pop    %rbx
    5734:	89 e8                	mov    %ebp,%eax
    5736:	5d                   	pop    %rbp
    5737:	41 5c                	pop    %r12
    5739:	41 5d                	pop    %r13
    573b:	41 5e                	pop    %r14
    573d:	c3                   	ret    
    573e:	66 90                	xchg   %ax,%ax
    5740:	8b 03                	mov    (%rbx),%eax
    5742:	f7 d8                	neg    %eax
    5744:	19 ed                	sbb    %ebp,%ebp
    5746:	83 e5 0e             	and    $0xe,%ebp
    5749:	eb e3                	jmp    572e <sgx_mm_alloc_ocall+0x4e>
    574b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5750:	e8 8b 04 00 00       	call   5be0 <sgx_ocfree>
    5755:	bd 01 00 00 00       	mov    $0x1,%ebp
    575a:	5b                   	pop    %rbx
    575b:	89 e8                	mov    %ebp,%eax
    575d:	5d                   	pop    %rbp
    575e:	41 5c                	pop    %r12
    5760:	41 5d                	pop    %r13
    5762:	41 5e                	pop    %r14
    5764:	c3                   	ret    
    5765:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    576c:	00 00 00 
    576f:	90                   	nop

0000000000005770 <sgx_mm_modify_ocall>:
    5770:	f3 0f 1e fa          	endbr64 
    5774:	41 56                	push   %r14
    5776:	41 89 ce             	mov    %ecx,%r14d
    5779:	41 55                	push   %r13
    577b:	49 89 fd             	mov    %rdi,%r13
    577e:	bf 20 00 00 00       	mov    $0x20,%edi
    5783:	41 54                	push   %r12
    5785:	49 89 f4             	mov    %rsi,%r12
    5788:	55                   	push   %rbp
    5789:	89 d5                	mov    %edx,%ebp
    578b:	53                   	push   %rbx
    578c:	e8 6f 03 00 00       	call   5b00 <sgx_ocalloc>
    5791:	48 85 c0             	test   %rax,%rax
    5794:	74 4a                	je     57e0 <sgx_mm_modify_ocall+0x70>
    5796:	89 68 18             	mov    %ebp,0x18(%rax)
    5799:	48 89 c6             	mov    %rax,%rsi
    579c:	bf f9 ff ff ff       	mov    $0xfffffff9,%edi
    57a1:	48 89 c3             	mov    %rax,%rbx
    57a4:	4c 89 68 08          	mov    %r13,0x8(%rax)
    57a8:	bd 0e 00 00 00       	mov    $0xe,%ebp
    57ad:	4c 89 60 10          	mov    %r12,0x10(%rax)
    57b1:	44 89 70 1c          	mov    %r14d,0x1c(%rax)
    57b5:	e8 06 19 00 00       	call   70c0 <sgx_ocall>
    57ba:	85 c0                	test   %eax,%eax
    57bc:	74 12                	je     57d0 <sgx_mm_modify_ocall+0x60>
    57be:	e8 1d 04 00 00       	call   5be0 <sgx_ocfree>
    57c3:	5b                   	pop    %rbx
    57c4:	89 e8                	mov    %ebp,%eax
    57c6:	5d                   	pop    %rbp
    57c7:	41 5c                	pop    %r12
    57c9:	41 5d                	pop    %r13
    57cb:	41 5e                	pop    %r14
    57cd:	c3                   	ret    
    57ce:	66 90                	xchg   %ax,%ax
    57d0:	8b 03                	mov    (%rbx),%eax
    57d2:	f7 d8                	neg    %eax
    57d4:	19 ed                	sbb    %ebp,%ebp
    57d6:	83 e5 0e             	and    $0xe,%ebp
    57d9:	eb e3                	jmp    57be <sgx_mm_modify_ocall+0x4e>
    57db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    57e0:	e8 fb 03 00 00       	call   5be0 <sgx_ocfree>
    57e5:	bd 01 00 00 00       	mov    $0x1,%ebp
    57ea:	5b                   	pop    %rbx
    57eb:	89 e8                	mov    %ebp,%eax
    57ed:	5d                   	pop    %rbp
    57ee:	41 5c                	pop    %r12
    57f0:	41 5d                	pop    %r13
    57f2:	41 5e                	pop    %r14
    57f4:	c3                   	ret    
    57f5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    57fc:	00 00 00 
    57ff:	90                   	nop

0000000000005800 <sgx_mm_register_pfhandler>:
    5800:	f3 0f 1e fa          	endbr64 
    5804:	31 c0                	xor    %eax,%eax
    5806:	48 83 3d 72 49 01 00 	cmpq   $0x0,0x14972(%rip)        # 1a180 <g_mm_pfhandler>
    580d:	00 
    580e:	74 08                	je     5818 <sgx_mm_register_pfhandler+0x18>
    5810:	c3                   	ret    
    5811:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5818:	48 89 3d 61 49 01 00 	mov    %rdi,0x14961(%rip)        # 1a180 <g_mm_pfhandler>
    581f:	b8 01 00 00 00       	mov    $0x1,%eax
    5824:	c3                   	ret    
    5825:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    582c:	00 00 00 
    582f:	90                   	nop

0000000000005830 <sgx_mm_unregister_pfhandler>:
    5830:	f3 0f 1e fa          	endbr64 
    5834:	31 c0                	xor    %eax,%eax
    5836:	48 39 3d 43 49 01 00 	cmp    %rdi,0x14943(%rip)        # 1a180 <g_mm_pfhandler>
    583d:	74 01                	je     5840 <sgx_mm_unregister_pfhandler+0x10>
    583f:	c3                   	ret    
    5840:	48 c7 05 35 49 01 00 	movq   $0x0,0x14935(%rip)        # 1a180 <g_mm_pfhandler>
    5847:	00 00 00 00 
    584b:	b8 01 00 00 00       	mov    $0x1,%eax
    5850:	c3                   	ret    
    5851:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5858:	00 00 00 
    585b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000005860 <sgx_mm_mutex_create>:
    5860:	f3 0f 1e fa          	endbr64 
    5864:	48 83 ec 08          	sub    $0x8,%rsp
    5868:	bf 18 00 00 00       	mov    $0x18,%edi
    586d:	e8 4e 77 00 00       	call   cfc0 <dlmalloc>
    5872:	48 85 c0             	test   %rax,%rax
    5875:	74 16                	je     588d <sgx_mm_mutex_create+0x2d>
    5877:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    587e:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
    5885:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    588c:	00 
    588d:	48 83 c4 08          	add    $0x8,%rsp
    5891:	c3                   	ret    
    5892:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5899:	00 00 00 
    589c:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000058a0 <sgx_mm_mutex_lock>:
    58a0:	f3 0f 1e fa          	endbr64 
    58a4:	53                   	push   %rbx
    58a5:	48 89 fb             	mov    %rdi,%rbx
    58a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    58af:	00 
    58b0:	48 89 df             	mov    %rbx,%rdi
    58b3:	e8 c8 b0 00 00       	call   10980 <sgx_thread_spin_trylock>
    58b8:	85 c0                	test   %eax,%eax
    58ba:	75 f4                	jne    58b0 <sgx_mm_mutex_lock+0x10>
    58bc:	5b                   	pop    %rbx
    58bd:	c3                   	ret    
    58be:	66 90                	xchg   %ax,%ax

00000000000058c0 <sgx_mm_mutex_unlock>:
    58c0:	f3 0f 1e fa          	endbr64 
    58c4:	e9 47 b1 00 00       	jmp    10a10 <sgx_thread_spin_unlock>
    58c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000058d0 <sgx_mm_mutex_destroy>:
    58d0:	f3 0f 1e fa          	endbr64 
    58d4:	55                   	push   %rbp
    58d5:	53                   	push   %rbx
    58d6:	48 89 fb             	mov    %rdi,%rbx
    58d9:	48 83 ec 08          	sub    $0x8,%rsp
    58dd:	e8 1e b0 00 00       	call   10900 <sgx_thread_spin_destroy>
    58e2:	48 89 df             	mov    %rbx,%rdi
    58e5:	89 c5                	mov    %eax,%ebp
    58e7:	e8 c4 94 00 00       	call   edb0 <dlfree>
    58ec:	48 83 c4 08          	add    $0x8,%rsp
    58f0:	89 e8                	mov    %ebp,%eax
    58f2:	5b                   	pop    %rbx
    58f3:	5d                   	pop    %rbp
    58f4:	c3                   	ret    
    58f5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    58fc:	00 00 00 
    58ff:	90                   	nop

0000000000005900 <sgx_mm_is_within_enclave>:
    5900:	f3 0f 1e fa          	endbr64 
    5904:	48 83 ec 08          	sub    $0x8,%rsp
    5908:	e8 33 01 00 00       	call   5a40 <sgx_is_within_enclave>
    590d:	85 c0                	test   %eax,%eax
    590f:	0f 95 c0             	setne  %al
    5912:	48 83 c4 08          	add    $0x8,%rsp
    5916:	c3                   	ret    
    5917:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    591e:	00 00 

0000000000005920 <init_optimized_libs>:
    5920:	f3 0f 1e fa          	endbr64 
    5924:	41 54                	push   %r12
    5926:	49 89 d4             	mov    %rdx,%r12
    5929:	55                   	push   %rbp
    592a:	48 89 f5             	mov    %rsi,%rbp
    592d:	53                   	push   %rbx
    592e:	48 89 fb             	mov    %rdi,%rbx
    5931:	e8 ce c5 00 00       	call   11f04 <get_enclave_state>
    5936:	83 f8 01             	cmp    $0x1,%eax
    5939:	0f 85 d6 00 00 00    	jne    5a15 <init_optimized_libs+0xf5>
    593f:	48 b8 ff ff ff ff ff 	movabs $0xffffffffffffff,%rax
    5946:	ff ff 00 
    5949:	48 89 da             	mov    %rbx,%rdx
    594c:	48 21 c2             	and    %rax,%rdx
    594f:	48 39 d8             	cmp    %rbx,%rax
    5952:	48 0f 42 da          	cmovb  %rdx,%rbx
    5956:	48 81 fb ff 01 00 00 	cmp    $0x1ff,%rbx
    595d:	0f 86 b2 00 00 00    	jbe    5a15 <init_optimized_libs+0xf5>
    5963:	f6 c3 20             	test   $0x20,%bl
    5966:	74 0e                	je     5976 <init_optimized_libs+0x56>
    5968:	48 89 d8             	mov    %rbx,%rax
    596b:	48 f7 d0             	not    %rax
    596e:	a8 1f                	test   $0x1f,%al
    5970:	0f 85 9f 00 00 00    	jne    5a15 <init_optimized_libs+0xf5>
    5976:	f6 c3 40             	test   $0x40,%bl
    5979:	74 0e                	je     5989 <init_optimized_libs+0x69>
    597b:	48 89 d8             	mov    %rbx,%rax
    597e:	48 f7 d0             	not    %rax
    5981:	a8 3f                	test   $0x3f,%al
    5983:	0f 85 8c 00 00 00    	jne    5a15 <init_optimized_libs+0xf5>
    5989:	f6 c3 80             	test   $0x80,%bl
    598c:	74 0a                	je     5998 <init_optimized_libs+0x78>
    598e:	48 89 d8             	mov    %rbx,%rax
    5991:	48 f7 d0             	not    %rax
    5994:	a8 7f                	test   $0x7f,%al
    5996:	75 7d                	jne    5a15 <init_optimized_libs+0xf5>
    5998:	f6 c7 01             	test   $0x1,%bh
    599b:	74 0b                	je     59a8 <init_optimized_libs+0x88>
    599d:	0f b6 c3             	movzbl %bl,%eax
    59a0:	48 3d ff 00 00 00    	cmp    $0xff,%rax
    59a6:	75 6d                	jne    5a15 <init_optimized_libs+0xf5>
    59a8:	f6 c7 02             	test   $0x2,%bh
    59ab:	74 0d                	je     59ba <init_optimized_libs+0x9a>
    59ad:	48 89 d8             	mov    %rbx,%rax
    59b0:	48 f7 d0             	not    %rax
    59b3:	a9 ff 01 00 00       	test   $0x1ff,%eax
    59b8:	75 5b                	jne    5a15 <init_optimized_libs+0xf5>
    59ba:	f6 c7 04             	test   $0x4,%bh
    59bd:	75 49                	jne    5a08 <init_optimized_libs+0xe8>
    59bf:	4c 89 e0             	mov    %r12,%rax
    59c2:	48 f7 d0             	not    %rax
    59c5:	a8 06                	test   $0x6,%al
    59c7:	74 57                	je     5a20 <init_optimized_libs+0x100>
    59c9:	48 b8 ff 7f 12 86 08 	movabs $0xfffe200886127fff,%rax
    59d0:	20 fe ff 
    59d3:	48 21 c3             	and    %rax,%rbx
    59d6:	4c 8d 25 53 24 01 00 	lea    0x12453(%rip),%r12        # 17e30 <g_cpu_feature_indicator>
    59dd:	48 89 df             	mov    %rbx,%rdi
    59e0:	49 89 1c 24          	mov    %rbx,(%r12)
    59e4:	e8 67 ae 00 00       	call   10850 <sgx_init_string_lib>
    59e9:	85 c0                	test   %eax,%eax
    59eb:	75 28                	jne    5a15 <init_optimized_libs+0xf5>
    59ed:	49 8b 3c 24          	mov    (%r12),%rdi
    59f1:	48 89 ee             	mov    %rbp,%rsi
    59f4:	e8 57 b4 00 00       	call   10e50 <sgx_init_crypto_lib>
    59f9:	5b                   	pop    %rbx
    59fa:	5d                   	pop    %rbp
    59fb:	f7 d8                	neg    %eax
    59fd:	41 5c                	pop    %r12
    59ff:	19 c0                	sbb    %eax,%eax
    5a01:	c3                   	ret    
    5a02:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5a08:	48 89 d8             	mov    %rbx,%rax
    5a0b:	48 f7 d0             	not    %rax
    5a0e:	a9 ff 03 00 00       	test   $0x3ff,%eax
    5a13:	74 aa                	je     59bf <init_optimized_libs+0x9f>
    5a15:	5b                   	pop    %rbx
    5a16:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    5a1b:	5d                   	pop    %rbp
    5a1c:	41 5c                	pop    %r12
    5a1e:	c3                   	ret    
    5a1f:	90                   	nop
    5a20:	4c 89 e0             	mov    %r12,%rax
    5a23:	48 f7 d0             	not    %rax
    5a26:	a8 e0                	test   $0xe0,%al
    5a28:	74 ac                	je     59d6 <init_optimized_libs+0xb6>
    5a2a:	48 b8 ff ff ff b6 18 	movabs $0xfffee018b6ffffff,%rax
    5a31:	e0 fe ff 
    5a34:	48 21 c3             	and    %rax,%rbx
    5a37:	eb 9d                	jmp    59d6 <init_optimized_libs+0xb6>
    5a39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000005a40 <sgx_is_within_enclave>:
    5a40:	f3 0f 1e fa          	endbr64 
    5a44:	48 8d 05 d5 23 01 00 	lea    0x123d5(%rip),%rax        # 17e20 <g_enclave_base>
    5a4b:	48 8b 10             	mov    (%rax),%rdx
    5a4e:	48 8d 05 c3 23 01 00 	lea    0x123c3(%rip),%rax        # 17e18 <g_enclave_size>
    5a55:	48 8b 08             	mov    (%rax),%rcx
    5a58:	48 01 d1             	add    %rdx,%rcx
    5a5b:	48 89 c8             	mov    %rcx,%rax
    5a5e:	48 83 e8 01          	sub    $0x1,%rax
    5a62:	48 85 f6             	test   %rsi,%rsi
    5a65:	74 21                	je     5a88 <sgx_is_within_enclave+0x48>
    5a67:	48 83 ee 01          	sub    $0x1,%rsi
    5a6b:	48 01 fe             	add    %rdi,%rsi
    5a6e:	0f 93 c1             	setae  %cl
    5a71:	48 39 d7             	cmp    %rdx,%rdi
    5a74:	0f 93 c2             	setae  %dl
    5a77:	21 ca                	and    %ecx,%edx
    5a79:	48 39 f0             	cmp    %rsi,%rax
    5a7c:	0f 93 c0             	setae  %al
    5a7f:	0f b6 c0             	movzbl %al,%eax
    5a82:	21 d0                	and    %edx,%eax
    5a84:	c3                   	ret    
    5a85:	0f 1f 00             	nopl   (%rax)
    5a88:	48 89 fe             	mov    %rdi,%rsi
    5a8b:	b9 01 00 00 00       	mov    $0x1,%ecx
    5a90:	eb df                	jmp    5a71 <sgx_is_within_enclave+0x31>
    5a92:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5a99:	00 00 00 
    5a9c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005aa0 <sgx_is_outside_enclave>:
    5aa0:	f3 0f 1e fa          	endbr64 
    5aa4:	48 85 f6             	test   %rsi,%rsi
    5aa7:	74 17                	je     5ac0 <sgx_is_outside_enclave+0x20>
    5aa9:	48 83 ee 01          	sub    $0x1,%rsi
    5aad:	b8 00 00 00 00       	mov    $0x0,%eax
    5ab2:	48 01 fe             	add    %rdi,%rsi
    5ab5:	73 0c                	jae    5ac3 <sgx_is_outside_enclave+0x23>
    5ab7:	c3                   	ret    
    5ab8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    5abf:	00 
    5ac0:	48 89 fe             	mov    %rdi,%rsi
    5ac3:	48 8d 05 56 23 01 00 	lea    0x12356(%rip),%rax        # 17e20 <g_enclave_base>
    5aca:	48 8b 10             	mov    (%rax),%rdx
    5acd:	48 8d 05 44 23 01 00 	lea    0x12344(%rip),%rax        # 17e18 <g_enclave_size>
    5ad4:	48 8b 08             	mov    (%rax),%rcx
    5ad7:	48 01 d1             	add    %rdx,%rcx
    5ada:	48 89 c8             	mov    %rcx,%rax
    5add:	48 83 e8 01          	sub    $0x1,%rax
    5ae1:	48 39 f8             	cmp    %rdi,%rax
    5ae4:	0f 92 c0             	setb   %al
    5ae7:	48 39 d6             	cmp    %rdx,%rsi
    5aea:	0f 92 c2             	setb   %dl
    5aed:	09 d0                	or     %edx,%eax
    5aef:	0f b6 c0             	movzbl %al,%eax
    5af2:	c3                   	ret    
    5af3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5afa:	00 00 00 
    5afd:	0f 1f 00             	nopl   (%rax)

0000000000005b00 <sgx_ocalloc>:
    5b00:	f3 0f 1e fa          	endbr64 
    5b04:	53                   	push   %rbx
    5b05:	48 89 fb             	mov    %rdi,%rbx
    5b08:	48 83 ec 10          	sub    $0x10,%rsp
    5b0c:	e8 32 c4 00 00       	call   11f43 <get_thread_data>
    5b11:	48 8d 15 08 23 01 00 	lea    0x12308(%rip),%rdx        # 17e20 <g_enclave_base>
    5b18:	48 8b 70 20          	mov    0x20(%rax),%rsi
    5b1c:	48 8b 3a             	mov    (%rdx),%rdi
    5b1f:	48 8d 15 f2 22 01 00 	lea    0x122f2(%rip),%rdx        # 17e18 <g_enclave_size>
    5b26:	48 8b 86 90 00 00 00 	mov    0x90(%rsi),%rax
    5b2d:	48 8b 0a             	mov    (%rdx),%rcx
    5b30:	48 89 c2             	mov    %rax,%rdx
    5b33:	48 83 c2 07          	add    $0x7,%rdx
    5b37:	72 33                	jb     5b6c <sgx_ocalloc+0x6c>
    5b39:	4c 8d 44 0f ff       	lea    -0x1(%rdi,%rcx,1),%r8
    5b3e:	48 39 fa             	cmp    %rdi,%rdx
    5b41:	72 05                	jb     5b48 <sgx_ocalloc+0x48>
    5b43:	49 39 c0             	cmp    %rax,%r8
    5b46:	73 24                	jae    5b6c <sgx_ocalloc+0x6c>
    5b48:	48 39 d8             	cmp    %rbx,%rax
    5b4b:	72 1f                	jb     5b6c <sgx_ocalloc+0x6c>
    5b4d:	48 89 c2             	mov    %rax,%rdx
    5b50:	48 29 da             	sub    %rbx,%rdx
    5b53:	48 89 d1             	mov    %rdx,%rcx
    5b56:	48 83 e1 f0          	and    $0xfffffffffffffff0,%rcx
    5b5a:	48 85 db             	test   %rbx,%rbx
    5b5d:	75 19                	jne    5b78 <sgx_ocalloc+0x78>
    5b5f:	48 89 cb             	mov    %rcx,%rbx
    5b62:	48 39 fb             	cmp    %rdi,%rbx
    5b65:	72 21                	jb     5b88 <sgx_ocalloc+0x88>
    5b67:	49 39 c8             	cmp    %rcx,%r8
    5b6a:	72 1c                	jb     5b88 <sgx_ocalloc+0x88>
    5b6c:	e8 c6 c7 00 00       	call   12337 <abort>
    5b71:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5b78:	48 83 eb 01          	sub    $0x1,%rbx
    5b7c:	48 01 cb             	add    %rcx,%rbx
    5b7f:	72 eb                	jb     5b6c <sgx_ocalloc+0x6c>
    5b81:	eb df                	jmp    5b62 <sgx_ocalloc+0x62>
    5b83:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5b88:	48 83 e8 01          	sub    $0x1,%rax
    5b8c:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    5b92:	48 81 e2 00 f0 ff ff 	and    $0xfffffffffffff000,%rdx
    5b99:	75 1d                	jne    5bb8 <sgx_ocalloc+0xb8>
    5b9b:	eb cf                	jmp    5b6c <sgx_ocalloc+0x6c>
    5b9d:	0f 1f 00             	nopl   (%rax)
    5ba0:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    5ba5:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    5baa:	c6 00 00             	movb   $0x0,(%rax)
    5bad:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    5bb2:	48 2d 00 10 00 00    	sub    $0x1000,%rax
    5bb8:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    5bbd:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    5bc2:	48 39 d0             	cmp    %rdx,%rax
    5bc5:	73 d9                	jae    5ba0 <sgx_ocalloc+0xa0>
    5bc7:	48 89 8e 90 00 00 00 	mov    %rcx,0x90(%rsi)
    5bce:	48 83 c4 10          	add    $0x10,%rsp
    5bd2:	48 89 c8             	mov    %rcx,%rax
    5bd5:	5b                   	pop    %rbx
    5bd6:	c3                   	ret    
    5bd7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    5bde:	00 00 

0000000000005be0 <sgx_ocfree>:
    5be0:	f3 0f 1e fa          	endbr64 
    5be4:	48 83 ec 08          	sub    $0x8,%rsp
    5be8:	e8 56 c3 00 00       	call   11f43 <get_thread_data>
    5bed:	48 8d 15 2c 22 01 00 	lea    0x1222c(%rip),%rdx        # 17e20 <g_enclave_base>
    5bf4:	48 8d 0d 1d 22 01 00 	lea    0x1221d(%rip),%rcx        # 17e18 <g_enclave_size>
    5bfb:	48 8b 70 20          	mov    0x20(%rax),%rsi
    5bff:	48 8b 40 08          	mov    0x8(%rax),%rax
    5c03:	48 8b 12             	mov    (%rdx),%rdx
    5c06:	48 8b 09             	mov    (%rcx),%rcx
    5c09:	48 8b 40 e8          	mov    -0x18(%rax),%rax
    5c0d:	48 89 c7             	mov    %rax,%rdi
    5c10:	48 83 c7 07          	add    $0x7,%rdi
    5c14:	72 0f                	jb     5c25 <sgx_ocfree+0x45>
    5c16:	48 8d 4c 0a ff       	lea    -0x1(%rdx,%rcx,1),%rcx
    5c1b:	48 39 c1             	cmp    %rax,%rcx
    5c1e:	72 10                	jb     5c30 <sgx_ocfree+0x50>
    5c20:	48 39 d7             	cmp    %rdx,%rdi
    5c23:	72 0b                	jb     5c30 <sgx_ocfree+0x50>
    5c25:	e8 0d c7 00 00       	call   12337 <abort>
    5c2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5c30:	48 89 86 90 00 00 00 	mov    %rax,0x90(%rsi)
    5c37:	48 83 c4 08          	add    $0x8,%rsp
    5c3b:	c3                   	ret    
    5c3c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005c40 <sgx_read_rand>:
    5c40:	f3 0f 1e fa          	endbr64 
    5c44:	41 55                	push   %r13
    5c46:	41 54                	push   %r12
    5c48:	55                   	push   %rbp
    5c49:	53                   	push   %rbx
    5c4a:	48 83 ec 18          	sub    $0x18,%rsp
    5c4e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    5c55:	00 00 
    5c57:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    5c5c:	31 c0                	xor    %eax,%eax
    5c5e:	48 85 ff             	test   %rdi,%rdi
    5c61:	0f 84 f9 00 00 00    	je     5d60 <sgx_read_rand+0x120>
    5c67:	48 89 f3             	mov    %rsi,%rbx
    5c6a:	48 85 f6             	test   %rsi,%rsi
    5c6d:	0f 84 ed 00 00 00    	je     5d60 <sgx_read_rand+0x120>
    5c73:	48 8d 05 a6 21 01 00 	lea    0x121a6(%rip),%rax        # 17e20 <g_enclave_base>
    5c7a:	48 89 fd             	mov    %rdi,%rbp
    5c7d:	31 ff                	xor    %edi,%edi
    5c7f:	48 8b 08             	mov    (%rax),%rcx
    5c82:	48 8d 05 8f 21 01 00 	lea    0x1218f(%rip),%rax        # 17e18 <g_enclave_size>
    5c89:	48 8b 10             	mov    (%rax),%rdx
    5c8c:	48 8d 46 ff          	lea    -0x1(%rsi),%rax
    5c90:	48 01 ca             	add    %rcx,%rdx
    5c93:	48 83 ea 01          	sub    $0x1,%rdx
    5c97:	48 01 e8             	add    %rbp,%rax
    5c9a:	40 0f 92 c7          	setb   %dil
    5c9e:	48 39 c2             	cmp    %rax,%rdx
    5ca1:	41 0f 93 c0          	setae  %r8b
    5ca5:	48 85 ff             	test   %rdi,%rdi
    5ca8:	40 0f 94 c6          	sete   %sil
    5cac:	41 84 f0             	test   %sil,%r8b
    5caf:	74 05                	je     5cb6 <sgx_read_rand+0x76>
    5cb1:	48 39 cd             	cmp    %rcx,%rbp
    5cb4:	73 42                	jae    5cf8 <sgx_read_rand+0xb8>
    5cb6:	be 02 00 00 00       	mov    $0x2,%esi
    5cbb:	48 85 ff             	test   %rdi,%rdi
    5cbe:	74 28                	je     5ce8 <sgx_read_rand+0xa8>
    5cc0:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    5cc5:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    5ccc:	00 00 
    5cce:	0f 85 96 00 00 00    	jne    5d6a <sgx_read_rand+0x12a>
    5cd4:	48 83 c4 18          	add    $0x18,%rsp
    5cd8:	89 f0                	mov    %esi,%eax
    5cda:	5b                   	pop    %rbx
    5cdb:	5d                   	pop    %rbp
    5cdc:	41 5c                	pop    %r12
    5cde:	41 5d                	pop    %r13
    5ce0:	c3                   	ret    
    5ce1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5ce8:	48 39 c8             	cmp    %rcx,%rax
    5ceb:	72 0b                	jb     5cf8 <sgx_read_rand+0xb8>
    5ced:	48 39 d5             	cmp    %rdx,%rbp
    5cf0:	76 ce                	jbe    5cc0 <sgx_read_rand+0x80>
    5cf2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5cf8:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
    5cff:	00 
    5d00:	4c 8d 6c 24 04       	lea    0x4(%rsp),%r13
    5d05:	4c 89 ef             	mov    %r13,%rdi
    5d08:	e8 07 c6 00 00       	call   12314 <do_rdrand>
    5d0d:	85 c0                	test   %eax,%eax
    5d0f:	74 3f                	je     5d50 <sgx_read_rand+0x110>
    5d11:	41 bc 04 00 00 00    	mov    $0x4,%r12d
    5d17:	48 89 ef             	mov    %rbp,%rdi
    5d1a:	4c 89 ee             	mov    %r13,%rsi
    5d1d:	4c 39 e3             	cmp    %r12,%rbx
    5d20:	4c 0f 46 e3          	cmovbe %rbx,%r12
    5d24:	4c 89 e2             	mov    %r12,%rdx
    5d27:	4c 01 e5             	add    %r12,%rbp
    5d2a:	e8 31 a8 00 00       	call   10560 <memcpy>
    5d2f:	4c 29 e3             	sub    %r12,%rbx
    5d32:	75 d1                	jne    5d05 <sgx_read_rand+0xc5>
    5d34:	be 04 00 00 00       	mov    $0x4,%esi
    5d39:	b9 04 00 00 00       	mov    $0x4,%ecx
    5d3e:	31 d2                	xor    %edx,%edx
    5d40:	4c 89 ef             	mov    %r13,%rdi
    5d43:	e8 68 aa 00 00       	call   107b0 <memset_s>
    5d48:	31 f6                	xor    %esi,%esi
    5d4a:	e9 71 ff ff ff       	jmp    5cc0 <sgx_read_rand+0x80>
    5d4f:	90                   	nop
    5d50:	be 01 00 00 00       	mov    $0x1,%esi
    5d55:	e9 66 ff ff ff       	jmp    5cc0 <sgx_read_rand+0x80>
    5d5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5d60:	be 02 00 00 00       	mov    $0x2,%esi
    5d65:	e9 56 ff ff ff       	jmp    5cc0 <sgx_read_rand+0x80>
    5d6a:	e8 01 ab 00 00       	call   10870 <__stack_chk_fail>
    5d6f:	90                   	nop

0000000000005d70 <check_static_stack_canary>:
    5d70:	f3 0f 1e fa          	endbr64 
    5d74:	48 8d 05 8d 20 01 00 	lea    0x1208d(%rip),%rax        # 17e08 <__intel_security_cookie>
    5d7b:	48 8b 00             	mov    (%rax),%rax
    5d7e:	48 39 87 08 fc fe ff 	cmp    %rax,-0x103f8(%rdi)
    5d85:	0f 95 c0             	setne  %al
    5d88:	0f b6 c0             	movzbl %al,%eax
    5d8b:	f7 d8                	neg    %eax
    5d8d:	c3                   	ret    
    5d8e:	66 90                	xchg   %ax,%ax

0000000000005d90 <sgx_rdpkru>:
    5d90:	f3 0f 1e fa          	endbr64 
    5d94:	53                   	push   %rbx
    5d95:	48 89 fb             	mov    %rdi,%rbx
    5d98:	e8 33 18 00 00       	call   75d0 <is_pkru_enabled>
    5d9d:	89 c2                	mov    %eax,%edx
    5d9f:	31 c0                	xor    %eax,%eax
    5da1:	84 d2                	test   %dl,%dl
    5da3:	74 0c                	je     5db1 <sgx_rdpkru+0x21>
    5da5:	89 c1                	mov    %eax,%ecx
    5da7:	0f 01 ee             	rdpkru 
    5daa:	89 03                	mov    %eax,(%rbx)
    5dac:	b8 01 00 00 00       	mov    $0x1,%eax
    5db1:	5b                   	pop    %rbx
    5db2:	c3                   	ret    
    5db3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5dba:	00 00 00 
    5dbd:	0f 1f 00             	nopl   (%rax)

0000000000005dc0 <sgx_wrpkru>:
    5dc0:	f3 0f 1e fa          	endbr64 
    5dc4:	53                   	push   %rbx
    5dc5:	89 fb                	mov    %edi,%ebx
    5dc7:	e8 04 18 00 00       	call   75d0 <is_pkru_enabled>
    5dcc:	31 d2                	xor    %edx,%edx
    5dce:	84 c0                	test   %al,%al
    5dd0:	74 0c                	je     5dde <sgx_wrpkru+0x1e>
    5dd2:	89 d8                	mov    %ebx,%eax
    5dd4:	89 d1                	mov    %edx,%ecx
    5dd6:	0f 01 ef             	wrpkru 
    5dd9:	ba 01 00 00 00       	mov    $0x1,%edx
    5dde:	89 d0                	mov    %edx,%eax
    5de0:	5b                   	pop    %rbx
    5de1:	c3                   	ret    
    5de2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5de9:	00 00 00 
    5dec:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005df0 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0>:
    5df0:	41 55                	push   %r13
    5df2:	49 89 cd             	mov    %rcx,%r13
    5df5:	41 54                	push   %r12
    5df7:	55                   	push   %rbp
    5df8:	53                   	push   %rbx
    5df9:	48 83 ec 08          	sub    $0x8,%rsp
    5dfd:	48 8d 0d 7c d3 00 00 	lea    0xd37c(%rip),%rcx        # 13180 <g_global_data>
    5e04:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    5e0a:	85 c0                	test   %eax,%eax
    5e0c:	0f 84 8e 00 00 00    	je     5ea0 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0xb0>
    5e12:	48 89 d3             	mov    %rdx,%rbx
    5e15:	49 89 fc             	mov    %rdi,%r12
    5e18:	31 d2                	xor    %edx,%edx
    5e1a:	eb 11                	jmp    5e2d <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0x3d>
    5e1c:	0f 1f 40 00          	nopl   0x0(%rax)
    5e20:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    5e26:	83 c2 01             	add    $0x1,%edx
    5e29:	39 c2                	cmp    %eax,%edx
    5e2b:	73 73                	jae    5ea0 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0xb0>
    5e2d:	89 d0                	mov    %edx,%eax
    5e2f:	48 83 c0 0b          	add    $0xb,%rax
    5e33:	48 c1 e0 05          	shl    $0x5,%rax
    5e37:	48 01 c8             	add    %rcx,%rax
    5e3a:	0f b7 00             	movzwl (%rax),%eax
    5e3d:	66 39 c6             	cmp    %ax,%si
    5e40:	75 de                	jne    5e20 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0x30>
    5e42:	8d 42 0b             	lea    0xb(%rdx),%eax
    5e45:	48 c1 e0 05          	shl    $0x5,%rax
    5e49:	48 01 c1             	add    %rax,%rcx
    5e4c:	48 89 cd             	mov    %rcx,%rbp
    5e4f:	74 4f                	je     5ea0 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0xb0>
    5e51:	e8 a2 c0 00 00       	call   11ef8 <get_enclave_base>
    5e56:	48 8b 55 08          	mov    0x8(%rbp),%rdx
    5e5a:	48 01 da             	add    %rbx,%rdx
    5e5d:	48 01 d0             	add    %rdx,%rax
    5e60:	8b 55 04             	mov    0x4(%rbp),%edx
    5e63:	49 39 c4             	cmp    %rax,%r12
    5e66:	72 38                	jb     5ea0 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0xb0>
    5e68:	48 c1 e2 0c          	shl    $0xc,%rdx
    5e6c:	49 81 c4 00 10 00 00 	add    $0x1000,%r12
    5e73:	48 01 c2             	add    %rax,%rdx
    5e76:	4c 39 e2             	cmp    %r12,%rdx
    5e79:	72 25                	jb     5ea0 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0xb0>
    5e7b:	4d 85 ed             	test   %r13,%r13
    5e7e:	74 11                	je     5e91 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0xa1>
    5e80:	48 8b 45 18          	mov    0x18(%rbp),%rax
    5e84:	49 89 45 00          	mov    %rax,0x0(%r13)
    5e88:	0f b7 45 02          	movzwl 0x2(%rbp),%eax
    5e8c:	66 41 89 45 08       	mov    %ax,0x8(%r13)
    5e91:	31 c0                	xor    %eax,%eax
    5e93:	48 83 c4 08          	add    $0x8,%rsp
    5e97:	5b                   	pop    %rbx
    5e98:	5d                   	pop    %rbp
    5e99:	41 5c                	pop    %r12
    5e9b:	41 5d                	pop    %r13
    5e9d:	c3                   	ret    
    5e9e:	66 90                	xchg   %ax,%ax
    5ea0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    5ea5:	eb ec                	jmp    5e93 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0xa3>
    5ea7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    5eae:	00 00 

0000000000005eb0 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0>:
    5eb0:	48 81 ff ff ef ff ff 	cmp    $0xffffffffffffefff,%rdi
    5eb7:	0f 87 c3 01 00 00    	ja     6080 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x1d0>
    5ebd:	41 57                	push   %r15
    5ebf:	41 56                	push   %r14
    5ec1:	41 55                	push   %r13
    5ec3:	41 54                	push   %r12
    5ec5:	49 89 f4             	mov    %rsi,%r12
    5ec8:	55                   	push   %rbp
    5ec9:	48 89 d5             	mov    %rdx,%rbp
    5ecc:	53                   	push   %rbx
    5ecd:	48 89 fb             	mov    %rdi,%rbx
    5ed0:	48 83 ec 08          	sub    $0x8,%rsp
    5ed4:	e8 57 13 00 00       	call   7230 <get_heap_base>
    5ed9:	49 89 c5             	mov    %rax,%r13
    5edc:	e8 df 13 00 00       	call   72c0 <get_heap_min_size>
    5ee1:	49 01 c5             	add    %rax,%r13
    5ee4:	e8 67 13 00 00       	call   7250 <get_heap_size>
    5ee9:	49 89 c6             	mov    %rax,%r14
    5eec:	e8 cf 13 00 00       	call   72c0 <get_heap_min_size>
    5ef1:	49 29 c6             	sub    %rax,%r14
    5ef4:	4c 39 eb             	cmp    %r13,%rbx
    5ef7:	72 37                	jb     5f30 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x80>
    5ef9:	48 8d 83 00 10 00 00 	lea    0x1000(%rbx),%rax
    5f00:	4d 01 f5             	add    %r14,%r13
    5f03:	49 39 c5             	cmp    %rax,%r13
    5f06:	72 28                	jb     5f30 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x80>
    5f08:	48 85 ed             	test   %rbp,%rbp
    5f0b:	74 11                	je     5f1e <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x6e>
    5f0d:	b8 08 00 00 00       	mov    $0x8,%eax
    5f12:	48 c7 45 00 03 02 00 	movq   $0x203,0x0(%rbp)
    5f19:	00 
    5f1a:	66 89 45 08          	mov    %ax,0x8(%rbp)
    5f1e:	31 c0                	xor    %eax,%eax
    5f20:	48 83 c4 08          	add    $0x8,%rsp
    5f24:	5b                   	pop    %rbx
    5f25:	5d                   	pop    %rbp
    5f26:	41 5c                	pop    %r12
    5f28:	41 5d                	pop    %r13
    5f2a:	41 5e                	pop    %r14
    5f2c:	41 5f                	pop    %r15
    5f2e:	c3                   	ret    
    5f2f:	90                   	nop
    5f30:	31 d2                	xor    %edx,%edx
    5f32:	48 89 e9             	mov    %rbp,%rcx
    5f35:	be 07 00 00 00       	mov    $0x7,%esi
    5f3a:	48 89 df             	mov    %rbx,%rdi
    5f3d:	e8 ae fe ff ff       	call   5df0 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0>
    5f42:	85 c0                	test   %eax,%eax
    5f44:	74 d8                	je     5f1e <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x6e>
    5f46:	48 8d 15 1b 1f 01 00 	lea    0x11f1b(%rip),%rdx        # 17e68 <rsrv_mem_size>
    5f4d:	48 8d 05 1c 1f 01 00 	lea    0x11f1c(%rip),%rax        # 17e70 <rsrv_mem_base>
    5f54:	48 8b 0a             	mov    (%rdx),%rcx
    5f57:	48 8d 15 02 1f 01 00 	lea    0x11f02(%rip),%rdx        # 17e60 <rsrv_mem_min_size>
    5f5e:	48 8b 00             	mov    (%rax),%rax
    5f61:	48 8b 32             	mov    (%rdx),%rsi
    5f64:	48 01 c6             	add    %rax,%rsi
    5f67:	48 39 f3             	cmp    %rsi,%rbx
    5f6a:	72 0f                	jb     5f7b <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0xcb>
    5f6c:	48 8d 93 00 10 00 00 	lea    0x1000(%rbx),%rdx
    5f73:	48 01 c8             	add    %rcx,%rax
    5f76:	48 39 d0             	cmp    %rdx,%rax
    5f79:	73 8d                	jae    5f08 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x58>
    5f7b:	48 8d 0d fe d1 00 00 	lea    0xd1fe(%rip),%rcx        # 13180 <g_global_data>
    5f82:	31 d2                	xor    %edx,%edx
    5f84:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    5f8a:	85 c0                	test   %eax,%eax
    5f8c:	74 25                	je     5fb3 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x103>
    5f8e:	66 90                	xchg   %ax,%ax
    5f90:	89 d0                	mov    %edx,%eax
    5f92:	48 83 c0 0b          	add    $0xb,%rax
    5f96:	48 c1 e0 05          	shl    $0x5,%rax
    5f9a:	48 01 c8             	add    %rcx,%rax
    5f9d:	0f b7 00             	movzwl (%rax),%eax
    5fa0:	66 3d 13 10          	cmp    $0x1013,%ax
    5fa4:	74 42                	je     5fe8 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x138>
    5fa6:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    5fac:	83 c2 01             	add    $0x1,%edx
    5faf:	39 c2                	cmp    %eax,%edx
    5fb1:	72 dd                	jb     5f90 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0xe0>
    5fb3:	41 bd 0e 00 00 00    	mov    $0xe,%r13d
    5fb9:	31 d2                	xor    %edx,%edx
    5fbb:	48 89 e9             	mov    %rbp,%rcx
    5fbe:	44 89 ee             	mov    %r13d,%esi
    5fc1:	48 89 df             	mov    %rbx,%rdi
    5fc4:	e8 27 fe ff ff       	call   5df0 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0>
    5fc9:	85 c0                	test   %eax,%eax
    5fcb:	0f 84 96 00 00 00    	je     6067 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x1b7>
    5fd1:	41 83 c5 01          	add    $0x1,%r13d
    5fd5:	41 83 fd 13          	cmp    $0x13,%r13d
    5fd9:	75 de                	jne    5fb9 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x109>
    5fdb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    5fe0:	e9 3b ff ff ff       	jmp    5f20 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x70>
    5fe5:	0f 1f 00             	nopl   (%rax)
    5fe8:	8d 42 0b             	lea    0xb(%rdx),%eax
    5feb:	41 bd 0e 00 00 00    	mov    $0xe,%r13d
    5ff1:	48 c1 e0 05          	shl    $0x5,%rax
    5ff5:	48 01 c1             	add    %rax,%rcx
    5ff8:	49 89 ce             	mov    %rcx,%r14
    5ffb:	74 bc                	je     5fb9 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x109>
    5ffd:	41 8b 46 04          	mov    0x4(%r14),%eax
    6001:	45 31 ff             	xor    %r15d,%r15d
    6004:	83 f8 ff             	cmp    $0xffffffff,%eax
    6007:	75 17                	jne    6020 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x170>
    6009:	eb 4d                	jmp    6058 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x1a8>
    600b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6010:	41 8b 46 04          	mov    0x4(%r14),%eax
    6014:	49 83 c7 01          	add    $0x1,%r15
    6018:	83 c0 01             	add    $0x1,%eax
    601b:	41 39 c7             	cmp    %eax,%r15d
    601e:	73 38                	jae    6058 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x1a8>
    6020:	49 8b 56 08          	mov    0x8(%r14),%rdx
    6024:	48 89 e9             	mov    %rbp,%rcx
    6027:	44 89 ee             	mov    %r13d,%esi
    602a:	48 89 df             	mov    %rbx,%rdi
    602d:	49 0f af d7          	imul   %r15,%rdx
    6031:	e8 ba fd ff ff       	call   5df0 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0>
    6036:	85 c0                	test   %eax,%eax
    6038:	75 d6                	jne    6010 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x160>
    603a:	4d 85 e4             	test   %r12,%r12
    603d:	0f 84 db fe ff ff    	je     5f1e <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x6e>
    6043:	49 8b 46 08          	mov    0x8(%r14),%rax
    6047:	49 0f af c7          	imul   %r15,%rax
    604b:	49 89 04 24          	mov    %rax,(%r12)
    604f:	e9 ca fe ff ff       	jmp    5f1e <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x6e>
    6054:	0f 1f 40 00          	nopl   0x0(%rax)
    6058:	41 83 c5 01          	add    $0x1,%r13d
    605c:	41 83 fd 13          	cmp    $0x13,%r13d
    6060:	75 9b                	jne    5ffd <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x14d>
    6062:	e9 74 ff ff ff       	jmp    5fdb <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x12b>
    6067:	4d 85 e4             	test   %r12,%r12
    606a:	0f 84 ae fe ff ff    	je     5f1e <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x6e>
    6070:	49 c7 04 24 00 00 00 	movq   $0x0,(%r12)
    6077:	00 
    6078:	e9 a1 fe ff ff       	jmp    5f1e <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x6e>
    607d:	0f 1f 00             	nopl   (%rax)
    6080:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    6085:	c3                   	ret    
    6086:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    608d:	00 00 00 

0000000000006090 <_Z24get_dynamic_layout_by_idt>:
    6090:	f3 0f 1e fa          	endbr64 
    6094:	48 8d 05 e5 d0 00 00 	lea    0xd0e5(%rip),%rax        # 13180 <g_global_data>
    609b:	8b 90 58 01 00 00    	mov    0x158(%rax),%edx
    60a1:	85 d2                	test   %edx,%edx
    60a3:	74 3b                	je     60e0 <_Z24get_dynamic_layout_by_idt+0x50>
    60a5:	31 c9                	xor    %ecx,%ecx
    60a7:	eb 14                	jmp    60bd <_Z24get_dynamic_layout_by_idt+0x2d>
    60a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    60b0:	8b 90 58 01 00 00    	mov    0x158(%rax),%edx
    60b6:	83 c1 01             	add    $0x1,%ecx
    60b9:	39 d1                	cmp    %edx,%ecx
    60bb:	73 23                	jae    60e0 <_Z24get_dynamic_layout_by_idt+0x50>
    60bd:	89 ca                	mov    %ecx,%edx
    60bf:	48 83 c2 0b          	add    $0xb,%rdx
    60c3:	48 c1 e2 05          	shl    $0x5,%rdx
    60c7:	48 01 c2             	add    %rax,%rdx
    60ca:	0f b7 12             	movzwl (%rdx),%edx
    60cd:	66 39 fa             	cmp    %di,%dx
    60d0:	75 de                	jne    60b0 <_Z24get_dynamic_layout_by_idt+0x20>
    60d2:	8d 51 0b             	lea    0xb(%rcx),%edx
    60d5:	48 c1 e2 05          	shl    $0x5,%rdx
    60d9:	48 01 d0             	add    %rdx,%rax
    60dc:	c3                   	ret    
    60dd:	0f 1f 00             	nopl   (%rax)
    60e0:	31 c0                	xor    %eax,%eax
    60e2:	c3                   	ret    
    60e3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    60ea:	00 00 00 
    60ed:	0f 1f 00             	nopl   (%rax)

00000000000060f0 <is_dynamic_thread>:
    60f0:	f3 0f 1e fa          	endbr64 
    60f4:	48 83 ec 28          	sub    $0x28,%rsp
    60f8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    60ff:	00 00 
    6101:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    6106:	31 c0                	xor    %eax,%eax
    6108:	48 85 ff             	test   %rdi,%rdi
    610b:	74 0e                	je     611b <is_dynamic_thread+0x2b>
    610d:	31 f6                	xor    %esi,%esi
    610f:	48 89 e2             	mov    %rsp,%rdx
    6112:	e8 99 fd ff ff       	call   5eb0 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0>
    6117:	85 c0                	test   %eax,%eax
    6119:	74 1d                	je     6138 <is_dynamic_thread+0x48>
    611b:	31 c0                	xor    %eax,%eax
    611d:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    6122:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    6129:	00 00 
    612b:	75 1a                	jne    6147 <is_dynamic_thread+0x57>
    612d:	48 83 c4 28          	add    $0x28,%rsp
    6131:	c3                   	ret    
    6132:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6138:	31 c0                	xor    %eax,%eax
    613a:	48 81 3c 24 00 01 00 	cmpq   $0x100,(%rsp)
    6141:	00 
    6142:	0f 94 c0             	sete   %al
    6145:	eb d6                	jmp    611d <is_dynamic_thread+0x2d>
    6147:	e8 24 a7 00 00       	call   10870 <__stack_chk_fail>
    614c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000006150 <is_dynamic_thread_exist>:
    6150:	f3 0f 1e fa          	endbr64 
    6154:	48 8d 05 d1 1c 01 00 	lea    0x11cd1(%rip),%rax        # 17e2c <EDMM_supported>
    615b:	8b 00                	mov    (%rax),%eax
    615d:	85 c0                	test   %eax,%eax
    615f:	74 59                	je     61ba <is_dynamic_thread_exist+0x6a>
    6161:	48 8d 0d 18 d0 00 00 	lea    0xd018(%rip),%rcx        # 13180 <g_global_data>
    6168:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    616e:	85 c0                	test   %eax,%eax
    6170:	74 46                	je     61b8 <is_dynamic_thread_exist+0x68>
    6172:	31 d2                	xor    %edx,%edx
    6174:	eb 17                	jmp    618d <is_dynamic_thread_exist+0x3d>
    6176:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    617d:	00 00 00 
    6180:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    6186:	83 c2 01             	add    $0x1,%edx
    6189:	39 c2                	cmp    %eax,%edx
    618b:	73 2b                	jae    61b8 <is_dynamic_thread_exist+0x68>
    618d:	89 d0                	mov    %edx,%eax
    618f:	48 83 c0 0b          	add    $0xb,%rax
    6193:	48 c1 e0 05          	shl    $0x5,%rax
    6197:	48 01 c8             	add    %rcx,%rax
    619a:	0f b7 00             	movzwl (%rax),%eax
    619d:	66 83 f8 12          	cmp    $0x12,%ax
    61a1:	75 dd                	jne    6180 <is_dynamic_thread_exist+0x30>
    61a3:	8d 42 0b             	lea    0xb(%rdx),%eax
    61a6:	48 c1 e0 05          	shl    $0x5,%rax
    61aa:	48 01 c1             	add    %rax,%rcx
    61ad:	0f 95 c0             	setne  %al
    61b0:	0f b6 c0             	movzbl %al,%eax
    61b3:	c3                   	ret    
    61b4:	0f 1f 40 00          	nopl   0x0(%rax)
    61b8:	31 c0                	xor    %eax,%eax
    61ba:	c3                   	ret    
    61bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000061c0 <get_dynamic_stack_max_page>:
    61c0:	f3 0f 1e fa          	endbr64 
    61c4:	48 8d 0d b5 cf 00 00 	lea    0xcfb5(%rip),%rcx        # 13180 <g_global_data>
    61cb:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    61d1:	85 c0                	test   %eax,%eax
    61d3:	74 45                	je     621a <get_dynamic_stack_max_page+0x5a>
    61d5:	31 d2                	xor    %edx,%edx
    61d7:	eb 14                	jmp    61ed <get_dynamic_stack_max_page+0x2d>
    61d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    61e0:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    61e6:	83 c2 01             	add    $0x1,%edx
    61e9:	39 c2                	cmp    %eax,%edx
    61eb:	73 2b                	jae    6218 <get_dynamic_stack_max_page+0x58>
    61ed:	89 d0                	mov    %edx,%eax
    61ef:	48 83 c0 0b          	add    $0xb,%rax
    61f3:	48 c1 e0 05          	shl    $0x5,%rax
    61f7:	48 01 c8             	add    %rcx,%rax
    61fa:	0f b7 00             	movzwl (%rax),%eax
    61fd:	66 83 f8 07          	cmp    $0x7,%ax
    6201:	75 dd                	jne    61e0 <get_dynamic_stack_max_page+0x20>
    6203:	8d 42 0b             	lea    0xb(%rdx),%eax
    6206:	48 c1 e0 05          	shl    $0x5,%rax
    620a:	48 01 c1             	add    %rax,%rcx
    620d:	74 09                	je     6218 <get_dynamic_stack_max_page+0x58>
    620f:	8b 41 04             	mov    0x4(%rcx),%eax
    6212:	c3                   	ret    
    6213:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6218:	31 c0                	xor    %eax,%eax
    621a:	c3                   	ret    
    621b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000006220 <do_add_thread>:
    6220:	f3 0f 1e fa          	endbr64 
    6224:	41 56                	push   %r14
    6226:	41 55                	push   %r13
    6228:	41 54                	push   %r12
    622a:	55                   	push   %rbp
    622b:	53                   	push   %rbx
    622c:	48 89 fb             	mov    %rdi,%rbx
    622f:	48 83 ec 10          	sub    $0x10,%rsp
    6233:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    623a:	00 00 
    623c:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    6241:	31 c0                	xor    %eax,%eax
    6243:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    624a:	00 
    624b:	e8 a8 bc 00 00       	call   11ef8 <get_enclave_base>
    6250:	31 d2                	xor    %edx,%edx
    6252:	48 89 e6             	mov    %rsp,%rsi
    6255:	48 89 df             	mov    %rbx,%rdi
    6258:	48 89 c5             	mov    %rax,%rbp
    625b:	e8 50 fc ff ff       	call   5eb0 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0>
    6260:	85 c0                	test   %eax,%eax
    6262:	75 62                	jne    62c6 <do_add_thread+0xa6>
    6264:	4c 8d 25 15 cf 00 00 	lea    0xcf15(%rip),%r12        # 13180 <g_global_data>
    626b:	41 8b 84 24 58 01 00 	mov    0x158(%r12),%eax
    6272:	00 
    6273:	85 c0                	test   %eax,%eax
    6275:	74 4f                	je     62c6 <do_add_thread+0xa6>
    6277:	31 d2                	xor    %edx,%edx
    6279:	eb 14                	jmp    628f <do_add_thread+0x6f>
    627b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6280:	41 8b 84 24 58 01 00 	mov    0x158(%r12),%eax
    6287:	00 
    6288:	83 c2 01             	add    $0x1,%edx
    628b:	39 c2                	cmp    %eax,%edx
    628d:	73 37                	jae    62c6 <do_add_thread+0xa6>
    628f:	89 d0                	mov    %edx,%eax
    6291:	48 83 c0 0b          	add    $0xb,%rax
    6295:	48 c1 e0 05          	shl    $0x5,%rax
    6299:	4c 01 e0             	add    %r12,%rax
    629c:	44 0f b7 28          	movzwl (%rax),%r13d
    62a0:	66 41 83 fd 0e       	cmp    $0xe,%r13w
    62a5:	75 d9                	jne    6280 <do_add_thread+0x60>
    62a7:	8d 42 0b             	lea    0xb(%rdx),%eax
    62aa:	48 c1 e0 05          	shl    $0x5,%rax
    62ae:	4c 01 e0             	add    %r12,%rax
    62b1:	74 13                	je     62c6 <do_add_thread+0xa6>
    62b3:	4c 8b 34 24          	mov    (%rsp),%r14
    62b7:	48 8b 40 08          	mov    0x8(%rax),%rax
    62bb:	49 01 ee             	add    %rbp,%r14
    62be:	4c 01 f0             	add    %r14,%rax
    62c1:	48 39 d8             	cmp    %rbx,%rax
    62c4:	74 4e                	je     6314 <do_add_thread+0xf4>
    62c6:	b8 01 00 00 00       	mov    $0x1,%eax
    62cb:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    62d0:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    62d7:	00 00 
    62d9:	0f 85 f9 00 00 00    	jne    63d8 <do_add_thread+0x1b8>
    62df:	48 83 c4 10          	add    $0x10,%rsp
    62e3:	5b                   	pop    %rbx
    62e4:	5d                   	pop    %rbp
    62e5:	41 5c                	pop    %r12
    62e7:	41 5d                	pop    %r13
    62e9:	41 5e                	pop    %r14
    62eb:	c3                   	ret    
    62ec:	0f 1f 40 00          	nopl   0x0(%rax)
    62f0:	8d 42 0b             	lea    0xb(%rdx),%eax
    62f3:	48 c1 e0 05          	shl    $0x5,%rax
    62f7:	4c 01 e0             	add    %r12,%rax
    62fa:	74 0d                	je     6309 <do_add_thread+0xe9>
    62fc:	0f b7 50 02          	movzwl 0x2(%rax),%edx
    6300:	83 e2 20             	and    $0x20,%edx
    6303:	0f 85 af 00 00 00    	jne    63b8 <do_add_thread+0x198>
    6309:	41 83 c5 01          	add    $0x1,%r13d
    630d:	66 41 83 fd 13       	cmp    $0x13,%r13w
    6312:	74 3c                	je     6350 <do_add_thread+0x130>
    6314:	41 8b 84 24 58 01 00 	mov    0x158(%r12),%eax
    631b:	00 
    631c:	31 d2                	xor    %edx,%edx
    631e:	85 c0                	test   %eax,%eax
    6320:	75 15                	jne    6337 <do_add_thread+0x117>
    6322:	eb e5                	jmp    6309 <do_add_thread+0xe9>
    6324:	0f 1f 40 00          	nopl   0x0(%rax)
    6328:	41 8b 84 24 58 01 00 	mov    0x158(%r12),%eax
    632f:	00 
    6330:	83 c2 01             	add    $0x1,%edx
    6333:	39 c2                	cmp    %eax,%edx
    6335:	73 d2                	jae    6309 <do_add_thread+0xe9>
    6337:	89 d0                	mov    %edx,%eax
    6339:	48 83 c0 0b          	add    $0xb,%rax
    633d:	48 c1 e0 05          	shl    $0x5,%rax
    6341:	4c 01 e0             	add    %r12,%rax
    6344:	0f b7 00             	movzwl (%rax),%eax
    6347:	66 44 39 e8          	cmp    %r13w,%ax
    634b:	75 db                	jne    6328 <do_add_thread+0x108>
    634d:	eb a1                	jmp    62f0 <do_add_thread+0xd0>
    634f:	90                   	nop
    6350:	ba 48 00 00 00       	mov    $0x48,%edx
    6355:	49 8d b4 24 10 01 00 	lea    0x110(%r12),%rsi
    635c:	00 
    635d:	48 89 df             	mov    %rbx,%rdi
    6360:	e8 fb a1 00 00       	call   10560 <memcpy>
    6365:	f3 0f 6f 4b 30       	movdqu 0x30(%rbx),%xmm1
    636a:	48 89 d8             	mov    %rbx,%rax
    636d:	48 89 df             	mov    %rbx,%rdi
    6370:	66 48 0f 6e c3       	movq   %rbx,%xmm0
    6375:	48 29 e8             	sub    %rbp,%rax
    6378:	48 01 43 10          	add    %rax,0x10(%rbx)
    637c:	ba 00 01 00 00       	mov    $0x100,%edx
    6381:	66 0f 6c c0          	punpcklqdq %xmm0,%xmm0
    6385:	be 00 10 00 00       	mov    $0x1000,%esi
    638a:	66 0f d4 c8          	paddq  %xmm0,%xmm1
    638e:	66 48 0f 6e c5       	movq   %rbp,%xmm0
    6393:	66 0f 6c c0          	punpcklqdq %xmm0,%xmm0
    6397:	66 0f fb c8          	psubq  %xmm0,%xmm1
    639b:	0f 11 4b 30          	movups %xmm1,0x30(%rbx)
    639f:	e8 ec 54 00 00       	call   b890 <mm_modify_type>
    63a4:	85 c0                	test   %eax,%eax
    63a6:	0f 95 c0             	setne  %al
    63a9:	0f b6 c0             	movzbl %al,%eax
    63ac:	e9 1a ff ff ff       	jmp    62cb <do_add_thread+0xab>
    63b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    63b8:	8b 70 04             	mov    0x4(%rax),%esi
    63bb:	48 8b 78 08          	mov    0x8(%rax),%rdi
    63bf:	48 c1 e6 0c          	shl    $0xc,%rsi
    63c3:	4c 01 f7             	add    %r14,%rdi
    63c6:	e8 85 54 00 00       	call   b850 <mm_commit>
    63cb:	85 c0                	test   %eax,%eax
    63cd:	0f 84 36 ff ff ff    	je     6309 <do_add_thread+0xe9>
    63d3:	e9 ee fe ff ff       	jmp    62c6 <do_add_thread+0xa6>
    63d8:	e8 93 a4 00 00       	call   10870 <__stack_chk_fail>
    63dd:	0f 1f 00             	nopl   (%rax)

00000000000063e0 <sgx_set_ssa_aexnotify>:
    63e0:	f3 0f 1e fa          	endbr64 
    63e4:	55                   	push   %rbp
    63e5:	89 fd                	mov    %edi,%ebp
    63e7:	53                   	push   %rbx
    63e8:	48 83 ec 08          	sub    $0x8,%rsp
    63ec:	e8 52 bb 00 00       	call   11f43 <get_thread_data>
    63f1:	48 85 c0             	test   %rax,%rax
    63f4:	74 3a                	je     6430 <sgx_set_ssa_aexnotify+0x50>
    63f6:	48 89 c3             	mov    %rax,%rbx
    63f9:	e8 42 ae 00 00       	call   11240 <sgx_self_report>
    63fe:	f6 40 31 04          	testb  $0x4,0x31(%rax)
    6402:	74 2c                	je     6430 <sgx_set_ssa_aexnotify+0x50>
    6404:	48 8b 53 20          	mov    0x20(%rbx),%rdx
    6408:	0f b6 82 a7 00 00 00 	movzbl 0xa7(%rdx),%eax
    640f:	89 c1                	mov    %eax,%ecx
    6411:	83 c8 01             	or     $0x1,%eax
    6414:	83 e1 fe             	and    $0xfffffffe,%ecx
    6417:	85 ed                	test   %ebp,%ebp
    6419:	0f 44 c1             	cmove  %ecx,%eax
    641c:	88 82 a7 00 00 00    	mov    %al,0xa7(%rdx)
    6422:	48 83 c4 08          	add    $0x8,%rsp
    6426:	31 c0                	xor    %eax,%eax
    6428:	5b                   	pop    %rbx
    6429:	5d                   	pop    %rbp
    642a:	c3                   	ret    
    642b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6430:	48 83 c4 08          	add    $0x8,%rsp
    6434:	b8 01 00 00 00       	mov    $0x1,%eax
    6439:	5b                   	pop    %rbx
    643a:	5d                   	pop    %rbp
    643b:	c3                   	ret    
    643c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000006440 <sgx_register_aex_handler>:
    6440:	f3 0f 1e fa          	endbr64 
    6444:	48 85 ff             	test   %rdi,%rdi
    6447:	0f 84 bb 00 00 00    	je     6508 <sgx_register_aex_handler+0xc8>
    644d:	41 55                	push   %r13
    644f:	b8 02 00 00 00       	mov    $0x2,%eax
    6454:	41 54                	push   %r12
    6456:	49 89 f4             	mov    %rsi,%r12
    6459:	55                   	push   %rbp
    645a:	53                   	push   %rbx
    645b:	48 83 ec 08          	sub    $0x8,%rsp
    645f:	48 85 f6             	test   %rsi,%rsi
    6462:	74 2a                	je     648e <sgx_register_aex_handler+0x4e>
    6464:	48 89 fb             	mov    %rdi,%rbx
    6467:	48 89 d5             	mov    %rdx,%rbp
    646a:	e8 c1 11 00 00       	call   7630 <get_ssa_aexnotify>
    646f:	85 c0                	test   %eax,%eax
    6471:	75 2d                	jne    64a0 <sgx_register_aex_handler+0x60>
    6473:	e8 cb ba 00 00       	call   11f43 <get_thread_data>
    6478:	66 48 0f 6e c5       	movq   %rbp,%xmm0
    647d:	0f 16 40 48          	movhps 0x48(%rax),%xmm0
    6481:	4c 89 23             	mov    %r12,(%rbx)
    6484:	0f 11 43 08          	movups %xmm0,0x8(%rbx)
    6488:	48 89 58 48          	mov    %rbx,0x48(%rax)
    648c:	31 c0                	xor    %eax,%eax
    648e:	48 83 c4 08          	add    $0x8,%rsp
    6492:	5b                   	pop    %rbx
    6493:	5d                   	pop    %rbp
    6494:	41 5c                	pop    %r12
    6496:	41 5d                	pop    %r13
    6498:	c3                   	ret    
    6499:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    64a0:	e8 9e ba 00 00       	call   11f43 <get_thread_data>
    64a5:	49 89 c5             	mov    %rax,%r13
    64a8:	48 85 c0             	test   %rax,%rax
    64ab:	74 16                	je     64c3 <sgx_register_aex_handler+0x83>
    64ad:	e8 8e ad 00 00       	call   11240 <sgx_self_report>
    64b2:	f6 40 31 04          	testb  $0x4,0x31(%rax)
    64b6:	74 0b                	je     64c3 <sgx_register_aex_handler+0x83>
    64b8:	49 8b 45 20          	mov    0x20(%r13),%rax
    64bc:	80 a0 a7 00 00 00 fe 	andb   $0xfe,0xa7(%rax)
    64c3:	e8 7b ba 00 00       	call   11f43 <get_thread_data>
    64c8:	66 48 0f 6e c5       	movq   %rbp,%xmm0
    64cd:	0f 16 40 48          	movhps 0x48(%rax),%xmm0
    64d1:	4c 89 23             	mov    %r12,(%rbx)
    64d4:	0f 11 43 08          	movups %xmm0,0x8(%rbx)
    64d8:	48 89 58 48          	mov    %rbx,0x48(%rax)
    64dc:	e8 62 ba 00 00       	call   11f43 <get_thread_data>
    64e1:	48 89 c3             	mov    %rax,%rbx
    64e4:	48 85 c0             	test   %rax,%rax
    64e7:	74 a3                	je     648c <sgx_register_aex_handler+0x4c>
    64e9:	e8 52 ad 00 00       	call   11240 <sgx_self_report>
    64ee:	f6 40 31 04          	testb  $0x4,0x31(%rax)
    64f2:	74 98                	je     648c <sgx_register_aex_handler+0x4c>
    64f4:	48 8b 43 20          	mov    0x20(%rbx),%rax
    64f8:	80 88 a7 00 00 00 01 	orb    $0x1,0xa7(%rax)
    64ff:	31 c0                	xor    %eax,%eax
    6501:	eb 8b                	jmp    648e <sgx_register_aex_handler+0x4e>
    6503:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6508:	b8 02 00 00 00       	mov    $0x2,%eax
    650d:	c3                   	ret    
    650e:	66 90                	xchg   %ax,%ax

0000000000006510 <sgx_unregister_aex_handler>:
    6510:	f3 0f 1e fa          	endbr64 
    6514:	41 54                	push   %r12
    6516:	55                   	push   %rbp
    6517:	53                   	push   %rbx
    6518:	48 85 ff             	test   %rdi,%rdi
    651b:	0f 84 e7 00 00 00    	je     6608 <sgx_unregister_aex_handler+0xf8>
    6521:	48 89 fd             	mov    %rdi,%rbp
    6524:	e8 07 11 00 00       	call   7630 <get_ssa_aexnotify>
    6529:	89 c3                	mov    %eax,%ebx
    652b:	85 c0                	test   %eax,%eax
    652d:	75 61                	jne    6590 <sgx_unregister_aex_handler+0x80>
    652f:	e8 0f ba 00 00       	call   11f43 <get_thread_data>
    6534:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    653a:	48 8b 50 48          	mov    0x48(%rax),%rdx
    653e:	48 85 d2             	test   %rdx,%rdx
    6541:	74 3d                	je     6580 <sgx_unregister_aex_handler+0x70>
    6543:	31 f6                	xor    %esi,%esi
    6545:	eb 1c                	jmp    6563 <sgx_unregister_aex_handler+0x53>
    6547:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    654e:	00 00 
    6550:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
    6554:	48 89 d6             	mov    %rdx,%rsi
    6557:	48 85 c9             	test   %rcx,%rcx
    655a:	0f 84 98 00 00 00    	je     65f8 <sgx_unregister_aex_handler+0xe8>
    6560:	48 89 ca             	mov    %rcx,%rdx
    6563:	48 39 2a             	cmp    %rbp,(%rdx)
    6566:	75 e8                	jne    6550 <sgx_unregister_aex_handler+0x40>
    6568:	48 8b 52 10          	mov    0x10(%rdx),%rdx
    656c:	48 85 f6             	test   %rsi,%rsi
    656f:	0f 84 ab 00 00 00    	je     6620 <sgx_unregister_aex_handler+0x110>
    6575:	48 89 56 10          	mov    %rdx,0x10(%rsi)
    6579:	45 31 e4             	xor    %r12d,%r12d
    657c:	85 db                	test   %ebx,%ebx
    657e:	75 48                	jne    65c8 <sgx_unregister_aex_handler+0xb8>
    6580:	44 89 e0             	mov    %r12d,%eax
    6583:	5b                   	pop    %rbx
    6584:	5d                   	pop    %rbp
    6585:	41 5c                	pop    %r12
    6587:	c3                   	ret    
    6588:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    658f:	00 
    6590:	e8 ae b9 00 00       	call   11f43 <get_thread_data>
    6595:	49 89 c4             	mov    %rax,%r12
    6598:	48 85 c0             	test   %rax,%rax
    659b:	74 17                	je     65b4 <sgx_unregister_aex_handler+0xa4>
    659d:	e8 9e ac 00 00       	call   11240 <sgx_self_report>
    65a2:	f6 40 31 04          	testb  $0x4,0x31(%rax)
    65a6:	74 0c                	je     65b4 <sgx_unregister_aex_handler+0xa4>
    65a8:	49 8b 44 24 20       	mov    0x20(%r12),%rax
    65ad:	80 a0 a7 00 00 00 fe 	andb   $0xfe,0xa7(%rax)
    65b4:	e8 8a b9 00 00       	call   11f43 <get_thread_data>
    65b9:	48 8b 50 48          	mov    0x48(%rax),%rdx
    65bd:	48 85 d2             	test   %rdx,%rdx
    65c0:	75 81                	jne    6543 <sgx_unregister_aex_handler+0x33>
    65c2:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    65c8:	e8 76 b9 00 00       	call   11f43 <get_thread_data>
    65cd:	48 89 c3             	mov    %rax,%rbx
    65d0:	48 85 c0             	test   %rax,%rax
    65d3:	74 ab                	je     6580 <sgx_unregister_aex_handler+0x70>
    65d5:	e8 66 ac 00 00       	call   11240 <sgx_self_report>
    65da:	f6 40 31 04          	testb  $0x4,0x31(%rax)
    65de:	74 a0                	je     6580 <sgx_unregister_aex_handler+0x70>
    65e0:	48 8b 43 20          	mov    0x20(%rbx),%rax
    65e4:	80 88 a7 00 00 00 01 	orb    $0x1,0xa7(%rax)
    65eb:	44 89 e0             	mov    %r12d,%eax
    65ee:	5b                   	pop    %rbx
    65ef:	5d                   	pop    %rbp
    65f0:	41 5c                	pop    %r12
    65f2:	c3                   	ret    
    65f3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    65f8:	41 bc 02 00 00 00    	mov    $0x2,%r12d
    65fe:	e9 79 ff ff ff       	jmp    657c <sgx_unregister_aex_handler+0x6c>
    6603:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6608:	41 bc 02 00 00 00    	mov    $0x2,%r12d
    660e:	5b                   	pop    %rbx
    660f:	5d                   	pop    %rbp
    6610:	44 89 e0             	mov    %r12d,%eax
    6613:	41 5c                	pop    %r12
    6615:	c3                   	ret    
    6616:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    661d:	00 00 00 
    6620:	48 89 50 48          	mov    %rdx,0x48(%rax)
    6624:	e9 50 ff ff ff       	jmp    6579 <sgx_unregister_aex_handler+0x69>
    6629:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000006630 <sgx_apply_mitigations>:
    6630:	f3 0f 1e fa          	endbr64 
    6634:	55                   	push   %rbp
    6635:	48 89 fd             	mov    %rdi,%rbp
    6638:	53                   	push   %rbx
    6639:	48 83 ec 08          	sub    $0x8,%rsp
    663d:	e8 01 b9 00 00       	call   11f43 <get_thread_data>
    6642:	48 8b 58 48          	mov    0x48(%rax),%rbx
    6646:	48 85 db             	test   %rbx,%rbx
    6649:	74 17                	je     6662 <sgx_apply_mitigations+0x32>
    664b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6650:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    6654:	48 89 ef             	mov    %rbp,%rdi
    6657:	ff 13                	call   *(%rbx)
    6659:	48 8b 5b 10          	mov    0x10(%rbx),%rbx
    665d:	48 85 db             	test   %rbx,%rbx
    6660:	75 ee                	jne    6650 <sgx_apply_mitigations+0x20>
    6662:	48 83 c4 08          	add    $0x8,%rsp
    6666:	31 c0                	xor    %eax,%eax
    6668:	5b                   	pop    %rbx
    6669:	5d                   	pop    %rbp
    666a:	c3                   	ret    
    666b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000006670 <_pthread_thread_run>:
    6670:	f3 0f 1e fa          	endbr64 
    6674:	31 c0                	xor    %eax,%eax
    6676:	c3                   	ret    
    6677:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    667e:	00 00 

0000000000006680 <_ZL11do_save_tcsPv>:
    6680:	55                   	push   %rbp
    6681:	53                   	push   %rbx
    6682:	48 89 fb             	mov    %rdi,%rbx
    6685:	48 83 ec 18          	sub    $0x18,%rsp
    6689:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    6690:	00 00 
    6692:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    6697:	31 c0                	xor    %eax,%eax
    6699:	48 83 3d cf 3a 01 00 	cmpq   $0x0,0x13acf(%rip)        # 1a170 <_ZL12g_tcs_cookie>
    66a0:	00 
    66a1:	74 4d                	je     66f0 <_ZL11do_save_tcsPv+0x70>
    66a3:	bf 10 00 00 00       	mov    $0x10,%edi
    66a8:	e8 13 69 00 00       	call   cfc0 <dlmalloc>
    66ad:	48 85 c0             	test   %rax,%rax
    66b0:	74 68                	je     671a <_ZL11do_save_tcsPv+0x9a>
    66b2:	48 8b 15 bf 3a 01 00 	mov    0x13abf(%rip),%rdx        # 1a178 <_ZL10g_tcs_node>
    66b9:	48 33 1d b0 3a 01 00 	xor    0x13ab0(%rip),%rbx        # 1a170 <_ZL12g_tcs_cookie>
    66c0:	48 89 05 b1 3a 01 00 	mov    %rax,0x13ab1(%rip)        # 1a178 <_ZL10g_tcs_node>
    66c7:	48 89 18             	mov    %rbx,(%rax)
    66ca:	48 89 50 08          	mov    %rdx,0x8(%rax)
    66ce:	31 c0                	xor    %eax,%eax
    66d0:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    66d5:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    66dc:	00 00 
    66de:	75 62                	jne    6742 <_ZL11do_save_tcsPv+0xc2>
    66e0:	48 83 c4 18          	add    $0x18,%rsp
    66e4:	5b                   	pop    %rbx
    66e5:	5d                   	pop    %rbp
    66e6:	c3                   	ret    
    66e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    66ee:	00 00 
    66f0:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    66f7:	00 
    66f8:	48 89 e5             	mov    %rsp,%rbp
    66fb:	eb 0c                	jmp    6709 <_ZL11do_save_tcsPv+0x89>
    66fd:	0f 1f 00             	nopl   (%rax)
    6700:	48 8b 04 24          	mov    (%rsp),%rax
    6704:	48 85 c0             	test   %rax,%rax
    6707:	75 1f                	jne    6728 <_ZL11do_save_tcsPv+0xa8>
    6709:	be 08 00 00 00       	mov    $0x8,%esi
    670e:	48 89 ef             	mov    %rbp,%rdi
    6711:	e8 2a f5 ff ff       	call   5c40 <sgx_read_rand>
    6716:	85 c0                	test   %eax,%eax
    6718:	74 e6                	je     6700 <_ZL11do_save_tcsPv+0x80>
    671a:	b8 01 00 00 00       	mov    $0x1,%eax
    671f:	eb af                	jmp    66d0 <_ZL11do_save_tcsPv+0x50>
    6721:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6728:	48 83 3d 40 3a 01 00 	cmpq   $0x0,0x13a40(%rip)        # 1a170 <_ZL12g_tcs_cookie>
    672f:	00 
    6730:	0f 85 6d ff ff ff    	jne    66a3 <_ZL11do_save_tcsPv+0x23>
    6736:	48 89 05 33 3a 01 00 	mov    %rax,0x13a33(%rip)        # 1a170 <_ZL12g_tcs_cookie>
    673d:	e9 61 ff ff ff       	jmp    66a3 <_ZL11do_save_tcsPv+0x23>
    6742:	e8 29 a1 00 00       	call   10870 <__stack_chk_fail>
    6747:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    674e:	00 00 

0000000000006750 <_ZL18add_static_threadsPVK9_layout_tS1_m>:
    6750:	48 39 f7             	cmp    %rsi,%rdi
    6753:	0f 83 cf 00 00 00    	jae    6828 <_ZL18add_static_threadsPVK9_layout_tS1_m+0xd8>
    6759:	41 56                	push   %r14
    675b:	41 55                	push   %r13
    675d:	49 89 f5             	mov    %rsi,%r13
    6760:	41 54                	push   %r12
    6762:	49 89 d4             	mov    %rdx,%r12
    6765:	55                   	push   %rbp
    6766:	53                   	push   %rbx
    6767:	48 89 fb             	mov    %rdi,%rbx
    676a:	eb 0d                	jmp    6779 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x29>
    676c:	0f 1f 40 00          	nopl   0x0(%rax)
    6770:	48 83 c3 20          	add    $0x20,%rbx
    6774:	4c 39 eb             	cmp    %r13,%rbx
    6777:	73 77                	jae    67f0 <_ZL18add_static_threadsPVK9_layout_tS1_m+0xa0>
    6779:	0f b7 03             	movzwl (%rbx),%eax
    677c:	f6 c4 10             	test   $0x10,%ah
    677f:	75 13                	jne    6794 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x44>
    6781:	48 8b 43 18          	mov    0x18(%rbx),%rax
    6785:	f6 c4 01             	test   $0x1,%ah
    6788:	74 0a                	je     6794 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x44>
    678a:	0f b7 43 02          	movzwl 0x2(%rbx),%eax
    678e:	66 83 f8 03          	cmp    $0x3,%ax
    6792:	74 6c                	je     6800 <_ZL18add_static_threadsPVK9_layout_tS1_m+0xb0>
    6794:	0f b7 03             	movzwl (%rbx),%eax
    6797:	f6 c4 10             	test   $0x10,%ah
    679a:	74 d4                	je     6770 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x20>
    679c:	8b 43 04             	mov    0x4(%rbx),%eax
    679f:	85 c0                	test   %eax,%eax
    67a1:	74 cd                	je     6770 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x20>
    67a3:	31 ed                	xor    %ebp,%ebp
    67a5:	45 31 f6             	xor    %r14d,%r14d
    67a8:	eb 10                	jmp    67ba <_ZL18add_static_threadsPVK9_layout_tS1_m+0x6a>
    67aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    67b0:	8b 43 04             	mov    0x4(%rbx),%eax
    67b3:	83 c5 01             	add    $0x1,%ebp
    67b6:	39 c5                	cmp    %eax,%ebp
    67b8:	73 b6                	jae    6770 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x20>
    67ba:	48 8b 43 08          	mov    0x8(%rbx),%rax
    67be:	0f b7 7b 02          	movzwl 0x2(%rbx),%edi
    67c2:	48 89 de             	mov    %rbx,%rsi
    67c5:	f7 df                	neg    %edi
    67c7:	49 01 c6             	add    %rax,%r14
    67ca:	48 63 ff             	movslq %edi,%rdi
    67cd:	4c 89 f2             	mov    %r14,%rdx
    67d0:	48 c1 e7 05          	shl    $0x5,%rdi
    67d4:	48 01 df             	add    %rbx,%rdi
    67d7:	e8 74 ff ff ff       	call   6750 <_ZL18add_static_threadsPVK9_layout_tS1_m>
    67dc:	85 c0                	test   %eax,%eax
    67de:	74 d0                	je     67b0 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x60>
    67e0:	5b                   	pop    %rbx
    67e1:	5d                   	pop    %rbp
    67e2:	41 5c                	pop    %r12
    67e4:	41 5d                	pop    %r13
    67e6:	41 5e                	pop    %r14
    67e8:	c3                   	ret    
    67e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    67f0:	5b                   	pop    %rbx
    67f1:	31 c0                	xor    %eax,%eax
    67f3:	5d                   	pop    %rbp
    67f4:	41 5c                	pop    %r12
    67f6:	41 5d                	pop    %r13
    67f8:	41 5e                	pop    %r14
    67fa:	c3                   	ret    
    67fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6800:	48 8b 6b 08          	mov    0x8(%rbx),%rbp
    6804:	e8 ef b6 00 00       	call   11ef8 <get_enclave_base>
    6809:	4c 01 e5             	add    %r12,%rbp
    680c:	48 8d 3c 28          	lea    (%rax,%rbp,1),%rdi
    6810:	e8 6b fe ff ff       	call   6680 <_ZL11do_save_tcsPv>
    6815:	85 c0                	test   %eax,%eax
    6817:	0f 84 53 ff ff ff    	je     6770 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x20>
    681d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    6822:	eb bc                	jmp    67e0 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x90>
    6824:	0f 1f 40 00          	nopl   0x0(%rax)
    6828:	31 c0                	xor    %eax,%eax
    682a:	c3                   	ret    
    682b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000006830 <_ZL10trts_ecalljPv>:
    6830:	f3 0f 1e fa          	endbr64 
    6834:	41 55                	push   %r13
    6836:	41 54                	push   %r12
    6838:	55                   	push   %rbp
    6839:	48 89 f5             	mov    %rsi,%rbp
    683c:	53                   	push   %rbx
    683d:	89 fb                	mov    %edi,%ebx
    683f:	48 83 ec 08          	sub    $0x8,%rsp
    6843:	0f b6 05 f6 19 01 00 	movzbl 0x119f6(%rip),%eax        # 18240 <_ZL16g_is_first_ecall>
    684a:	84 c0                	test   %al,%al
    684c:	0f 85 b6 00 00 00    	jne    6908 <_ZL10trts_ecalljPv+0xd8>
    6852:	83 fb fa             	cmp    $0xfffffffa,%ebx
    6855:	0f 84 8d 00 00 00    	je     68e8 <_ZL10trts_ecalljPv+0xb8>
    685b:	4c 8d 25 7e 15 01 00 	lea    0x1157e(%rip),%r12        # 17de0 <g_ecall_table>
    6862:	49 3b 1c 24          	cmp    (%r12),%rbx
    6866:	73 68                	jae    68d0 <_ZL10trts_ecalljPv+0xa0>
    6868:	e8 d6 b6 00 00       	call   11f43 <get_thread_data>
    686d:	0f ae e8             	lfence 
    6870:	48 8b 50 08          	mov    0x8(%rax),%rdx
    6874:	48 3b 50 10          	cmp    0x10(%rax),%rdx
    6878:	0f 84 b2 00 00 00    	je     6930 <_ZL10trts_ecalljPv+0x100>
    687e:	48 81 7a 20 44 49 43 	cmpq   $0x4f434944,0x20(%rdx)
    6885:	4f 
    6886:	0f 85 5b 01 00 00    	jne    69e7 <_ZL10trts_ecalljPv+0x1b7>
    688c:	48 8d 05 7d c7 00 00 	lea    0xc77d(%rip),%rax        # 13010 <g_dyn_entry_table>
    6893:	48 8b 52 28          	mov    0x28(%rdx),%rdx
    6897:	48 3b 10             	cmp    (%rax),%rdx
    689a:	73 34                	jae    68d0 <_ZL10trts_ecalljPv+0xa0>
    689c:	49 0f af 14 24       	imul   (%r12),%rdx
    68a1:	48 01 d8             	add    %rbx,%rax
    68a4:	80 7c 02 08 00       	cmpb   $0x0,0x8(%rdx,%rax,1)
    68a9:	74 6c                	je     6917 <_ZL10trts_ecalljPv+0xe7>
    68ab:	48 c1 e3 04          	shl    $0x4,%rbx
    68af:	31 f6                	xor    %esi,%esi
    68b1:	49 8b 5c 1c 08       	mov    0x8(%r12,%rbx,1),%rbx
    68b6:	48 89 df             	mov    %rbx,%rdi
    68b9:	e8 82 f1 ff ff       	call   5a40 <sgx_is_within_enclave>
    68be:	85 c0                	test   %eax,%eax
    68c0:	0f 84 8a 00 00 00    	je     6950 <_ZL10trts_ecalljPv+0x120>
    68c6:	48 89 d8             	mov    %rbx,%rax
    68c9:	eb 24                	jmp    68ef <_ZL10trts_ecalljPv+0xbf>
    68cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    68d0:	41 bc 01 10 00 00    	mov    $0x1001,%r12d
    68d6:	48 83 c4 08          	add    $0x8,%rsp
    68da:	44 89 e0             	mov    %r12d,%eax
    68dd:	5b                   	pop    %rbx
    68de:	5d                   	pop    %rbp
    68df:	41 5c                	pop    %r12
    68e1:	41 5d                	pop    %r13
    68e3:	c3                   	ret    
    68e4:	0f 1f 40 00          	nopl   0x0(%rax)
    68e8:	48 8d 05 81 fd ff ff 	lea    -0x27f(%rip),%rax        # 6670 <_pthread_thread_run>
    68ef:	0f ae e8             	lfence 
    68f2:	48 83 c4 08          	add    $0x8,%rsp
    68f6:	48 89 ef             	mov    %rbp,%rdi
    68f9:	5b                   	pop    %rbx
    68fa:	5d                   	pop    %rbp
    68fb:	41 5c                	pop    %r12
    68fd:	41 5d                	pop    %r13
    68ff:	ff e0                	jmp    *%rax
    6901:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6908:	e8 36 b6 00 00       	call   11f43 <get_thread_data>
    690d:	48 8b 48 10          	mov    0x10(%rax),%rcx
    6911:	48 39 48 08          	cmp    %rcx,0x8(%rax)
    6915:	74 49                	je     6960 <_ZL10trts_ecalljPv+0x130>
    6917:	48 83 c4 08          	add    $0x8,%rsp
    691b:	41 bc 07 10 00 00    	mov    $0x1007,%r12d
    6921:	5b                   	pop    %rbx
    6922:	44 89 e0             	mov    %r12d,%eax
    6925:	5d                   	pop    %rbp
    6926:	41 5c                	pop    %r12
    6928:	41 5d                	pop    %r13
    692a:	c3                   	ret    
    692b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6930:	48 89 d8             	mov    %rbx,%rax
    6933:	48 c1 e0 04          	shl    $0x4,%rax
    6937:	41 80 7c 04 10 00    	cmpb   $0x0,0x10(%r12,%rax,1)
    693d:	0f 84 68 ff ff ff    	je     68ab <_ZL10trts_ecalljPv+0x7b>
    6943:	eb d2                	jmp    6917 <_ZL10trts_ecalljPv+0xe7>
    6945:	4c 89 ef             	mov    %r13,%rdi
    6948:	e8 43 5d 00 00       	call   c690 <sgx_spin_unlock>
    694d:	0f 1f 00             	nopl   (%rax)
    6950:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    6956:	e9 7b ff ff ff       	jmp    68d6 <_ZL10trts_ecalljPv+0xa6>
    695b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6960:	4c 8d 2d 01 38 01 00 	lea    0x13801(%rip),%r13        # 1a168 <_ZL10g_ife_lock>
    6967:	4c 89 ef             	mov    %r13,%rdi
    696a:	e8 91 5c 00 00       	call   c600 <sgx_spin_lock>
    696f:	0f b6 05 ca 18 01 00 	movzbl 0x118ca(%rip),%eax        # 18240 <_ZL16g_is_first_ecall>
    6976:	84 c0                	test   %al,%al
    6978:	74 53                	je     69cd <_ZL10trts_ecalljPv+0x19d>
    697a:	48 8d 05 ab 14 01 00 	lea    0x114ab(%rip),%rax        # 17e2c <EDMM_supported>
    6981:	8b 00                	mov    (%rax),%eax
    6983:	85 c0                	test   %eax,%eax
    6985:	74 3a                	je     69c1 <_ZL10trts_ecalljPv+0x191>
    6987:	48 8d 05 f2 c7 00 00 	lea    0xc7f2(%rip),%rax        # 13180 <g_global_data>
    698e:	31 d2                	xor    %edx,%edx
    6990:	8b b0 58 01 00 00    	mov    0x158(%rax),%esi
    6996:	48 8d b8 60 01 00 00 	lea    0x160(%rax),%rdi
    699d:	48 c1 e6 05          	shl    $0x5,%rsi
    69a1:	48 01 fe             	add    %rdi,%rsi
    69a4:	e8 a7 fd ff ff       	call   6750 <_ZL18add_static_threadsPVK9_layout_tS1_m>
    69a9:	85 c0                	test   %eax,%eax
    69ab:	75 98                	jne    6945 <_ZL10trts_ecalljPv+0x115>
    69ad:	e8 46 b5 00 00       	call   11ef8 <get_enclave_base>
    69b2:	48 89 c7             	mov    %rax,%rdi
    69b5:	e8 76 1d 00 00       	call   8730 <change_protection>
    69ba:	41 89 c4             	mov    %eax,%r12d
    69bd:	85 c0                	test   %eax,%eax
    69bf:	75 19                	jne    69da <_ZL10trts_ecalljPv+0x1aa>
    69c1:	e8 9a 21 00 00       	call   8b60 <init_global_object>
    69c6:	c6 05 73 18 01 00 00 	movb   $0x0,0x11873(%rip)        # 18240 <_ZL16g_is_first_ecall>
    69cd:	4c 89 ef             	mov    %r13,%rdi
    69d0:	e8 bb 5c 00 00       	call   c690 <sgx_spin_unlock>
    69d5:	e9 78 fe ff ff       	jmp    6852 <_ZL10trts_ecalljPv+0x22>
    69da:	4c 89 ef             	mov    %r13,%rdi
    69dd:	e8 ae 5c 00 00       	call   c690 <sgx_spin_unlock>
    69e2:	e9 ef fe ff ff       	jmp    68d6 <_ZL10trts_ecalljPv+0xa6>
    69e7:	e8 4b b9 00 00       	call   12337 <abort>
    69ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000069f0 <_Z30_random_stack_noinline_wrapperI9_status_tJjPvEJRiRS1_EET_PFS4_DpT0_EDpOT1_.constprop.0.isra.0>:
    69f0:	e9 3b fe ff ff       	jmp    6830 <_ZL10trts_ecalljPv>
    69f5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    69fc:	00 00 00 
    69ff:	90                   	nop

0000000000006a00 <_Z16_pthread_enabledv>:
    6a00:	f3 0f 1e fa          	endbr64 
    6a04:	31 c0                	xor    %eax,%eax
    6a06:	c3                   	ret    
    6a07:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    6a0e:	00 00 

0000000000006a10 <_Z24_pthread_tls_store_state9_status_t>:
    6a10:	f3 0f 1e fa          	endbr64 
    6a14:	c3                   	ret    
    6a15:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6a1c:	00 00 00 
    6a1f:	90                   	nop

0000000000006a20 <_Z22_pthread_tls_get_statev>:
    6a20:	f3 0f 1e fa          	endbr64 
    6a24:	31 c0                	xor    %eax,%eax
    6a26:	c3                   	ret    
    6a27:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    6a2e:	00 00 

0000000000006a30 <_Z26_pthread_tls_store_contextPv>:
    6a30:	f3 0f 1e fa          	endbr64 
    6a34:	c3                   	ret    
    6a35:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6a3c:	00 00 00 
    6a3f:	90                   	nop

0000000000006a40 <_Z20_pthread_wakeup_joinPv>:
    6a40:	f3 0f 1e fa          	endbr64 
    6a44:	c3                   	ret    
    6a45:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6a4c:	00 00 00 
    6a4f:	90                   	nop

0000000000006a50 <_Z24_pthread_tls_destructorsv>:
    6a50:	f3 0f 1e fa          	endbr64 
    6a54:	c3                   	ret    
    6a55:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6a5c:	00 00 00 
    6a5f:	90                   	nop

0000000000006a60 <tc_set_idle>:
    6a60:	f3 0f 1e fa          	endbr64 
    6a64:	c3                   	ret    
    6a65:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6a6c:	00 00 00 
    6a6f:	90                   	nop

0000000000006a70 <do_init_thread>:
    6a70:	f3 0f 1e fa          	endbr64 
    6a74:	41 57                	push   %r15
    6a76:	66 48 0f 6e d7       	movq   %rdi,%xmm2
    6a7b:	ba c0 00 00 00       	mov    $0xc0,%edx
    6a80:	41 56                	push   %r14
    6a82:	66 0f 6c d2          	punpcklqdq %xmm2,%xmm2
    6a86:	41 55                	push   %r13
    6a88:	41 54                	push   %r12
    6a8a:	41 89 f4             	mov    %esi,%r12d
    6a8d:	55                   	push   %rbp
    6a8e:	48 89 fd             	mov    %rdi,%rbp
    6a91:	53                   	push   %rbx
    6a92:	48 83 ec 38          	sub    $0x38,%rsp
    6a96:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    6a9d:	00 00 
    6a9f:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    6aa4:	48 8d 05 d5 c6 00 00 	lea    0xc6d5(%rip),%rax        # 13180 <g_global_data>
    6aab:	0f 29 14 24          	movaps %xmm2,(%rsp)
    6aaf:	48 8b 58 50          	mov    0x50(%rax),%rbx
    6ab3:	48 8d 70 50          	lea    0x50(%rax),%rsi
    6ab7:	48 01 fb             	add    %rdi,%rbx
    6aba:	48 89 df             	mov    %rbx,%rdi
    6abd:	4c 8b 7b 28          	mov    0x28(%rbx),%r15
    6ac1:	4c 8b 73 30          	mov    0x30(%rbx),%r14
    6ac5:	4c 8b ab b0 00 00 00 	mov    0xb0(%rbx),%r13
    6acc:	e8 8f 9a 00 00       	call   10560 <memcpy>
    6ad1:	48 8d 85 00 fc ff ff 	lea    -0x400(%rbp),%rax
    6ad8:	f3 0f 6f 1b          	movdqu (%rbx),%xmm3
    6adc:	f3 0f 6f 6b 10       	movdqu 0x10(%rbx),%xmm5
    6ae1:	66 48 0f 6e c0       	movq   %rax,%xmm0
    6ae6:	48 8b 43 18          	mov    0x18(%rbx),%rax
    6aea:	f3 0f 6f 73 68       	movdqu 0x68(%rbx),%xmm6
    6aef:	66 48 0f 6e cd       	movq   %rbp,%xmm1
    6af4:	66 0f 6f 14 24       	movdqa (%rsp),%xmm2
    6af9:	66 48 0f 6e e5       	movq   %rbp,%xmm4
    6afe:	66 0f 6c c8          	punpcklqdq %xmm0,%xmm1
    6b02:	48 01 6b 20          	add    %rbp,0x20(%rbx)
    6b06:	48 01 e8             	add    %rbp,%rax
    6b09:	66 0f 6c c4          	punpcklqdq %xmm4,%xmm0
    6b0d:	66 0f d4 cb          	paddq  %xmm3,%xmm1
    6b11:	48 01 6b 58          	add    %rbp,0x58(%rbx)
    6b15:	48 89 83 b0 00 00 00 	mov    %rax,0xb0(%rbx)
    6b1c:	48 8d 05 e5 12 01 00 	lea    0x112e5(%rip),%rax        # 17e08 <__intel_security_cookie>
    6b23:	66 0f d4 c5          	paddq  %xmm5,%xmm0
    6b27:	66 0f d4 d6          	paddq  %xmm6,%xmm2
    6b2b:	4c 89 7b 28          	mov    %r15,0x28(%rbx)
    6b2f:	48 8b 00             	mov    (%rax),%rax
    6b32:	4c 89 73 30          	mov    %r14,0x30(%rbx)
    6b36:	0f 11 53 68          	movups %xmm2,0x68(%rbx)
    6b3a:	0f 11 0b             	movups %xmm1,(%rbx)
    6b3d:	0f 11 43 10          	movups %xmm0,0x10(%rbx)
    6b41:	48 89 85 08 fc fe ff 	mov    %rax,-0x103f8(%rbp)
    6b48:	48 8d 05 dd 12 01 00 	lea    0x112dd(%rip),%rax        # 17e2c <EDMM_supported>
    6b4f:	8b 00                	mov    (%rax),%eax
    6b51:	85 c0                	test   %eax,%eax
    6b53:	48 8d 05 ba 12 01 00 	lea    0x112ba(%rip),%rax        # 17e14 <g_aexnotify_supported>
    6b5a:	0f 85 f0 00 00 00    	jne    6c50 <do_init_thread+0x1e0>
    6b60:	83 38 01             	cmpl   $0x1,(%rax)
    6b63:	0f 84 17 01 00 00    	je     6c80 <do_init_thread+0x210>
    6b69:	4d 85 ed             	test   %r13,%r13
    6b6c:	0f 85 c8 00 00 00    	jne    6c3a <do_init_thread+0x1ca>
    6b72:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6b78:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
    6b7f:	00 00 
    6b81:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    6b88:	00 00 
    6b8a:	e8 69 b3 00 00       	call   11ef8 <get_enclave_base>
    6b8f:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
    6b94:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
    6b99:	48 89 c7             	mov    %rax,%rdi
    6b9c:	e8 0f 19 00 00       	call   84b0 <elf_tls_info>
    6ba1:	89 c2                	mov    %eax,%edx
    6ba3:	b8 01 00 00 00       	mov    $0x1,%eax
    6ba8:	85 d2                	test   %edx,%edx
    6baa:	75 0a                	jne    6bb6 <do_init_thread+0x146>
    6bac:	48 83 7c 24 18 00    	cmpq   $0x0,0x18(%rsp)
    6bb2:	75 2c                	jne    6be0 <do_init_thread+0x170>
    6bb4:	31 c0                	xor    %eax,%eax
    6bb6:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    6bbb:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    6bc2:	00 00 
    6bc4:	0f 85 00 01 00 00    	jne    6cca <do_init_thread+0x25a>
    6bca:	48 83 c4 38          	add    $0x38,%rsp
    6bce:	5b                   	pop    %rbx
    6bcf:	5d                   	pop    %rbp
    6bd0:	41 5c                	pop    %r12
    6bd2:	41 5d                	pop    %r13
    6bd4:	41 5e                	pop    %r14
    6bd6:	41 5f                	pop    %r15
    6bd8:	c3                   	ret    
    6bd9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6be0:	48 8b 03             	mov    (%rbx),%rax
    6be3:	48 8b 7b 68          	mov    0x68(%rbx),%rdi
    6be7:	31 f6                	xor    %esi,%esi
    6be9:	48 8d 90 ff 0f 00 00 	lea    0xfff(%rax),%rdx
    6bf0:	48 29 fa             	sub    %rdi,%rdx
    6bf3:	48 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%rdi
    6bfa:	48 81 e2 00 f0 ff ff 	and    $0xfffffffffffff000,%rdx
    6c01:	e8 9a 9b 00 00       	call   107a0 <memset>
    6c06:	48 8b 7b 68          	mov    0x68(%rbx),%rdi
    6c0a:	48 8b 03             	mov    (%rbx),%rax
    6c0d:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
    6c12:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    6c17:	48 29 f8             	sub    %rdi,%rax
    6c1a:	48 39 d0             	cmp    %rdx,%rax
    6c1d:	72 95                	jb     6bb4 <do_init_thread+0x144>
    6c1f:	e8 3c 99 00 00       	call   10560 <memcpy>
    6c24:	eb 8e                	jmp    6bb4 <do_init_thread+0x144>
    6c26:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6c2d:	00 00 00 
    6c30:	83 f8 01             	cmp    $0x1,%eax
    6c33:	74 7b                	je     6cb0 <do_init_thread+0x240>
    6c35:	4d 85 ed             	test   %r13,%r13
    6c38:	74 5e                	je     6c98 <do_init_thread+0x228>
    6c3a:	4c 89 ab b0 00 00 00 	mov    %r13,0xb0(%rbx)
    6c41:	e9 32 ff ff ff       	jmp    6b78 <do_init_thread+0x108>
    6c46:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6c4d:	00 00 00 
    6c50:	8b 00                	mov    (%rax),%eax
    6c52:	45 84 e4             	test   %r12b,%r12b
    6c55:	74 d9                	je     6c30 <do_init_thread+0x1c0>
    6c57:	48 c7 43 30 01 00 00 	movq   $0x1,0x30(%rbx)
    6c5e:	00 
    6c5f:	83 f8 01             	cmp    $0x1,%eax
    6c62:	74 5c                	je     6cc0 <do_init_thread+0x250>
    6c64:	4d 85 ed             	test   %r13,%r13
    6c67:	75 d1                	jne    6c3a <do_init_thread+0x1ca>
    6c69:	e8 52 f5 ff ff       	call   61c0 <get_dynamic_stack_max_page>
    6c6e:	89 c0                	mov    %eax,%eax
    6c70:	48 c1 e0 0c          	shl    $0xc,%rax
    6c74:	48 01 83 b0 00 00 00 	add    %rax,0xb0(%rbx)
    6c7b:	e9 f8 fe ff ff       	jmp    6b78 <do_init_thread+0x108>
    6c80:	48 c7 43 50 01 00 00 	movq   $0x1,0x50(%rbx)
    6c87:	00 
    6c88:	4d 85 ed             	test   %r13,%r13
    6c8b:	75 ad                	jne    6c3a <do_init_thread+0x1ca>
    6c8d:	e9 e6 fe ff ff       	jmp    6b78 <do_init_thread+0x108>
    6c92:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6c98:	48 89 ef             	mov    %rbp,%rdi
    6c9b:	e8 50 f4 ff ff       	call   60f0 <is_dynamic_thread>
    6ca0:	85 c0                	test   %eax,%eax
    6ca2:	75 c5                	jne    6c69 <do_init_thread+0x1f9>
    6ca4:	e9 cf fe ff ff       	jmp    6b78 <do_init_thread+0x108>
    6ca9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6cb0:	48 c7 43 50 01 00 00 	movq   $0x1,0x50(%rbx)
    6cb7:	00 
    6cb8:	e9 78 ff ff ff       	jmp    6c35 <do_init_thread+0x1c5>
    6cbd:	0f 1f 00             	nopl   (%rax)
    6cc0:	48 c7 43 50 01 00 00 	movq   $0x1,0x50(%rbx)
    6cc7:	00 
    6cc8:	eb 9a                	jmp    6c64 <do_init_thread+0x1f4>
    6cca:	e8 a1 9b 00 00       	call   10870 <__stack_chk_fail>
    6ccf:	90                   	nop

0000000000006cd0 <do_ecall>:
    6cd0:	f3 0f 1e fa          	endbr64 
    6cd4:	53                   	push   %rbx
    6cd5:	48 89 d3             	mov    %rdx,%rbx
    6cd8:	48 83 ec 70          	sub    $0x70,%rsp
    6cdc:	89 7c 24 10          	mov    %edi,0x10(%rsp)
    6ce0:	48 89 34 24          	mov    %rsi,(%rsp)
    6ce4:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    6ceb:	00 00 
    6ced:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    6cf2:	31 c0                	xor    %eax,%eax
    6cf4:	e8 0b b2 00 00       	call   11f04 <get_enclave_state>
    6cf9:	89 c2                	mov    %eax,%edx
    6cfb:	b8 01 00 00 00       	mov    $0x1,%eax
    6d00:	83 fa 02             	cmp    $0x2,%edx
    6d03:	74 1b                	je     6d20 <do_ecall+0x50>
    6d05:	48 8b 54 24 68       	mov    0x68(%rsp),%rdx
    6d0a:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    6d11:	00 00 
    6d13:	0f 85 d5 01 00 00    	jne    6eee <do_ecall+0x21e>
    6d19:	48 83 c4 70          	add    $0x70,%rsp
    6d1d:	5b                   	pop    %rbx
    6d1e:	c3                   	ret    
    6d1f:	90                   	nop
    6d20:	e8 1e b2 00 00       	call   11f43 <get_thread_data>
    6d25:	48 85 c0             	test   %rax,%rax
    6d28:	0f 84 16 01 00 00    	je     6e44 <do_ecall+0x174>
    6d2e:	48 8b 48 08          	mov    0x8(%rax),%rcx
    6d32:	48 39 48 10          	cmp    %rcx,0x10(%rax)
    6d36:	0f 84 f4 00 00 00    	je     6e30 <do_ecall+0x160>
    6d3c:	e8 02 b2 00 00       	call   11f43 <get_thread_data>
    6d41:	48 83 78 50 01       	cmpq   $0x1,0x50(%rax)
    6d46:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    6d4b:	0f 84 0f 01 00 00    	je     6e60 <do_ecall+0x190>
    6d51:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    6d56:	48 8b 48 08          	mov    0x8(%rax),%rcx
    6d5a:	48 39 48 10          	cmp    %rcx,0x10(%rax)
    6d5e:	74 48                	je     6da8 <do_ecall+0xd8>
    6d60:	48 8b 34 24          	mov    (%rsp),%rsi
    6d64:	8b 7c 24 10          	mov    0x10(%rsp),%edi
    6d68:	e8 c3 fa ff ff       	call   6830 <_ZL10trts_ecalljPv>
    6d6d:	48 8d 15 0c c4 00 00 	lea    0xc40c(%rip),%rdx        # 13180 <g_global_data>
    6d74:	48 8b 52 38          	mov    0x38(%rdx),%rdx
    6d78:	48 85 d2             	test   %rdx,%rdx
    6d7b:	74 88                	je     6d05 <do_ecall+0x35>
    6d7d:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    6d82:	48 8b 59 08          	mov    0x8(%rcx),%rbx
    6d86:	48 39 59 10          	cmp    %rbx,0x10(%rcx)
    6d8a:	0f 85 75 ff ff ff    	jne    6d05 <do_ecall+0x35>
    6d90:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
    6d94:	e8 c7 fc ff ff       	call   6a60 <tc_set_idle>
    6d99:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    6d9d:	e9 63 ff ff ff       	jmp    6d05 <do_ecall+0x35>
    6da2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6da8:	31 ff                	xor    %edi,%edi
    6daa:	e8 11 f0 ff ff       	call   5dc0 <sgx_wrpkru>
    6daf:	e8 4c fc ff ff       	call   6a00 <_Z16_pthread_enabledv>
    6db4:	84 c0                	test   %al,%al
    6db6:	0f 84 fc 00 00 00    	je     6eb8 <do_ecall+0x1e8>
    6dbc:	66 0f ef c0          	pxor   %xmm0,%xmm0
    6dc0:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
    6dc5:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
    6dca:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
    6dcf:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
    6dd4:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
    6dd9:	e8 c4 9d 00 00       	call   10ba2 <setjmp>
    6dde:	f3 0f 1e fa          	endbr64 
    6de2:	85 c0                	test   %eax,%eax
    6de4:	0f 84 96 00 00 00    	je     6e80 <do_ecall+0x1b0>
    6dea:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
    6def:	48 8b 43 10          	mov    0x10(%rbx),%rax
    6df3:	48 89 43 08          	mov    %rax,0x8(%rbx)
    6df7:	b8 09 00 00 00       	mov    $0x9,%eax
    6dfc:	bf 09 00 00 00       	mov    $0x9,%edi
    6e01:	89 44 24 18          	mov    %eax,0x18(%rsp)
    6e05:	e8 06 fc ff ff       	call   6a10 <_Z24_pthread_tls_store_state9_status_t>
    6e0a:	8b 44 24 18          	mov    0x18(%rsp),%eax
    6e0e:	89 44 24 14          	mov    %eax,0x14(%rsp)
    6e12:	e8 39 fc ff ff       	call   6a50 <_Z24_pthread_tls_destructorsv>
    6e17:	48 8b 3c 24          	mov    (%rsp),%rdi
    6e1b:	e8 20 fc ff ff       	call   6a40 <_Z20_pthread_wakeup_joinPv>
    6e20:	8b 44 24 14          	mov    0x14(%rsp),%eax
    6e24:	e9 44 ff ff ff       	jmp    6d6d <do_ecall+0x9d>
    6e29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6e30:	48 8d 05 49 c3 00 00 	lea    0xc349(%rip),%rax        # 13180 <g_global_data>
    6e37:	48 8b 40 38          	mov    0x38(%rax),%rax
    6e3b:	48 85 c0             	test   %rax,%rax
    6e3e:	0f 84 8c 00 00 00    	je     6ed0 <do_ecall+0x200>
    6e44:	31 f6                	xor    %esi,%esi
    6e46:	48 89 df             	mov    %rbx,%rdi
    6e49:	e8 22 fc ff ff       	call   6a70 <do_init_thread>
    6e4e:	85 c0                	test   %eax,%eax
    6e50:	0f 84 e6 fe ff ff    	je     6d3c <do_ecall+0x6c>
    6e56:	e9 aa fe ff ff       	jmp    6d05 <do_ecall+0x35>
    6e5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6e60:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    6e65:	bf 01 00 00 00       	mov    $0x1,%edi
    6e6a:	48 c7 40 50 00 00 00 	movq   $0x0,0x50(%rax)
    6e71:	00 
    6e72:	e8 69 f5 ff ff       	call   63e0 <sgx_set_ssa_aexnotify>
    6e77:	e9 d5 fe ff ff       	jmp    6d51 <do_ecall+0x81>
    6e7c:	0f 1f 40 00          	nopl   0x0(%rax)
    6e80:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
    6e85:	e8 a6 fb ff ff       	call   6a30 <_Z26_pthread_tls_store_contextPv>
    6e8a:	0f c7 f0             	rdrand %eax
    6e8d:	73 fb                	jae    6e8a <do_ecall+0x1ba>
    6e8f:	8b 5c 24 10          	mov    0x10(%rsp),%ebx
    6e93:	48 8b 34 24          	mov    (%rsp),%rsi
    6e97:	89 df                	mov    %ebx,%edi
    6e99:	e8 52 fb ff ff       	call   69f0 <_Z30_random_stack_noinline_wrapperI9_status_tJjPvEJRiRS1_EET_PFS4_DpT0_EDpOT1_.constprop.0.isra.0>
    6e9e:	83 fb fa             	cmp    $0xfffffffa,%ebx
    6ea1:	0f 84 55 ff ff ff    	je     6dfc <do_ecall+0x12c>
    6ea7:	83 f8 09             	cmp    $0x9,%eax
    6eaa:	0f 85 5e ff ff ff    	jne    6e0e <do_ecall+0x13e>
    6eb0:	e9 42 ff ff ff       	jmp    6df7 <do_ecall+0x127>
    6eb5:	0f 1f 00             	nopl   (%rax)
    6eb8:	0f c7 f0             	rdrand %eax
    6ebb:	73 fb                	jae    6eb8 <do_ecall+0x1e8>
    6ebd:	48 8b 34 24          	mov    (%rsp),%rsi
    6ec1:	8b 7c 24 10          	mov    0x10(%rsp),%edi
    6ec5:	e8 26 fb ff ff       	call   69f0 <_Z30_random_stack_noinline_wrapperI9_status_tJjPvEJRiRS1_EET_PFS4_DpT0_EDpOT1_.constprop.0.isra.0>
    6eca:	e9 9e fe ff ff       	jmp    6d6d <do_ecall+0x9d>
    6ecf:	90                   	nop
    6ed0:	e8 4b fb ff ff       	call   6a20 <_Z22_pthread_tls_get_statev>
    6ed5:	83 7c 24 10 fa       	cmpl   $0xfffffffa,0x10(%rsp)
    6eda:	0f 84 64 ff ff ff    	je     6e44 <do_ecall+0x174>
    6ee0:	83 f8 09             	cmp    $0x9,%eax
    6ee3:	0f 85 53 fe ff ff    	jne    6d3c <do_ecall+0x6c>
    6ee9:	e9 56 ff ff ff       	jmp    6e44 <do_ecall+0x174>
    6eee:	e8 7d 99 00 00       	call   10870 <__stack_chk_fail>
    6ef3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6efa:	00 00 00 
    6efd:	0f 1f 00             	nopl   (%rax)

0000000000006f00 <do_ecall_add_thread>:
    6f00:	f3 0f 1e fa          	endbr64 
    6f04:	55                   	push   %rbp
    6f05:	53                   	push   %rbx
    6f06:	48 89 fb             	mov    %rdi,%rbx
    6f09:	48 83 ec 08          	sub    $0x8,%rsp
    6f0d:	e8 5e 06 00 00       	call   7570 <is_utility_thread>
    6f12:	48 85 db             	test   %rbx,%rbx
    6f15:	0f 84 a5 00 00 00    	je     6fc0 <do_ecall_add_thread+0xc0>
    6f1b:	3c 01                	cmp    $0x1,%al
    6f1d:	0f 85 9d 00 00 00    	jne    6fc0 <do_ecall_add_thread+0xc0>
    6f23:	be 08 00 00 00       	mov    $0x8,%esi
    6f28:	48 89 df             	mov    %rbx,%rdi
    6f2b:	e8 70 eb ff ff       	call   5aa0 <sgx_is_outside_enclave>
    6f30:	85 c0                	test   %eax,%eax
    6f32:	0f 84 88 00 00 00    	je     6fc0 <do_ecall_add_thread+0xc0>
    6f38:	0f ae e8             	lfence 
    6f3b:	48 8b 2b             	mov    (%rbx),%rbp
    6f3e:	48 85 ed             	test   %rbp,%rbp
    6f41:	74 7d                	je     6fc0 <do_ecall_add_thread+0xc0>
    6f43:	0f ae e8             	lfence 
    6f46:	48 89 ef             	mov    %rbp,%rdi
    6f49:	e8 32 f7 ff ff       	call   6680 <_ZL11do_save_tcsPv>
    6f4e:	89 c3                	mov    %eax,%ebx
    6f50:	85 c0                	test   %eax,%eax
    6f52:	75 71                	jne    6fc5 <do_ecall_add_thread+0xc5>
    6f54:	48 89 ef             	mov    %rbp,%rdi
    6f57:	e8 c4 f2 ff ff       	call   6220 <do_add_thread>
    6f5c:	89 c3                	mov    %eax,%ebx
    6f5e:	85 c0                	test   %eax,%eax
    6f60:	74 63                	je     6fc5 <do_ecall_add_thread+0xc5>
    6f62:	e8 09 06 00 00       	call   7570 <is_utility_thread>
    6f67:	84 c0                	test   %al,%al
    6f69:	74 5a                	je     6fc5 <do_ecall_add_thread+0xc5>
    6f6b:	48 8b 0d 06 32 01 00 	mov    0x13206(%rip),%rcx        # 1a178 <_ZL10g_tcs_node>
    6f72:	48 85 c9             	test   %rcx,%rcx
    6f75:	74 4e                	je     6fc5 <do_ecall_add_thread+0xc5>
    6f77:	48 8b 35 f2 31 01 00 	mov    0x131f2(%rip),%rsi        # 1a170 <_ZL12g_tcs_cookie>
    6f7e:	48 8b 01             	mov    (%rcx),%rax
    6f81:	48 8b 79 08          	mov    0x8(%rcx),%rdi
    6f85:	48 31 f0             	xor    %rsi,%rax
    6f88:	48 39 c5             	cmp    %rax,%rbp
    6f8b:	74 41                	je     6fce <do_ecall_add_thread+0xce>
    6f8d:	48 85 ff             	test   %rdi,%rdi
    6f90:	75 11                	jne    6fa3 <do_ecall_add_thread+0xa3>
    6f92:	eb 31                	jmp    6fc5 <do_ecall_add_thread+0xc5>
    6f94:	0f 1f 40 00          	nopl   0x0(%rax)
    6f98:	48 89 f9             	mov    %rdi,%rcx
    6f9b:	48 85 c0             	test   %rax,%rax
    6f9e:	74 25                	je     6fc5 <do_ecall_add_thread+0xc5>
    6fa0:	48 89 c7             	mov    %rax,%rdi
    6fa3:	48 8b 17             	mov    (%rdi),%rdx
    6fa6:	48 8b 47 08          	mov    0x8(%rdi),%rax
    6faa:	48 31 f2             	xor    %rsi,%rdx
    6fad:	48 39 d5             	cmp    %rdx,%rbp
    6fb0:	75 e6                	jne    6f98 <do_ecall_add_thread+0x98>
    6fb2:	48 89 41 08          	mov    %rax,0x8(%rcx)
    6fb6:	e8 f5 7d 00 00       	call   edb0 <dlfree>
    6fbb:	eb 08                	jmp    6fc5 <do_ecall_add_thread+0xc5>
    6fbd:	0f 1f 00             	nopl   (%rax)
    6fc0:	bb 01 00 00 00       	mov    $0x1,%ebx
    6fc5:	48 83 c4 08          	add    $0x8,%rsp
    6fc9:	89 d8                	mov    %ebx,%eax
    6fcb:	5b                   	pop    %rbx
    6fcc:	5d                   	pop    %rbp
    6fcd:	c3                   	ret    
    6fce:	48 89 3d a3 31 01 00 	mov    %rdi,0x131a3(%rip)        # 1a178 <_ZL10g_tcs_node>
    6fd5:	48 89 cf             	mov    %rcx,%rdi
    6fd8:	e8 d3 7d 00 00       	call   edb0 <dlfree>
    6fdd:	eb e6                	jmp    6fc5 <do_ecall_add_thread+0xc5>
    6fdf:	90                   	nop

0000000000006fe0 <do_uninit_enclave>:
    6fe0:	f3 0f 1e fa          	endbr64 
    6fe4:	48 8d 05 41 0e 01 00 	lea    0x10e41(%rip),%rax        # 17e2c <EDMM_supported>
    6feb:	41 54                	push   %r12
    6fed:	55                   	push   %rbp
    6fee:	53                   	push   %rbx
    6fef:	8b 00                	mov    (%rax),%eax
    6ff1:	85 c0                	test   %eax,%eax
    6ff3:	0f 84 a4 00 00 00    	je     709d <do_uninit_enclave+0xbd>
    6ff9:	49 89 fc             	mov    %rdi,%r12
    6ffc:	e8 6f 05 00 00       	call   7570 <is_utility_thread>
    7001:	84 c0                	test   %al,%al
    7003:	0f 84 87 00 00 00    	je     7090 <do_uninit_enclave+0xb0>
    7009:	f0 83 0d 53 31 01 00 	lock orl $0x1,0x13153(%rip)        # 1a164 <g_uninit_flag>
    7010:	01 
    7011:	48 8b 1d 60 31 01 00 	mov    0x13160(%rip),%rbx        # 1a178 <_ZL10g_tcs_node>
    7018:	48 c7 05 55 31 01 00 	movq   $0x0,0x13155(%rip)        # 1a178 <_ZL10g_tcs_node>
    701f:	00 00 00 00 
    7023:	eb 2f                	jmp    7054 <do_uninit_enclave+0x74>
    7025:	0f 1f 00             	nopl   (%rax)
    7028:	48 8b 3b             	mov    (%rbx),%rdi
    702b:	48 33 3d 3e 31 01 00 	xor    0x1313e(%rip),%rdi        # 1a170 <_ZL12g_tcs_cookie>
    7032:	4c 39 e7             	cmp    %r12,%rdi
    7035:	74 0e                	je     7045 <do_uninit_enclave+0x65>
    7037:	be 00 10 00 00       	mov    $0x1000,%esi
    703c:	e8 2f 48 00 00       	call   b870 <mm_dealloc>
    7041:	85 c0                	test   %eax,%eax
    7043:	75 58                	jne    709d <do_uninit_enclave+0xbd>
    7045:	48 8b 6b 08          	mov    0x8(%rbx),%rbp
    7049:	48 89 df             	mov    %rbx,%rdi
    704c:	e8 5f 7d 00 00       	call   edb0 <dlfree>
    7051:	48 89 eb             	mov    %rbp,%rbx
    7054:	48 85 db             	test   %rbx,%rbx
    7057:	75 cf                	jne    7028 <do_uninit_enclave+0x48>
    7059:	48 8d 1d 08 31 01 00 	lea    0x13108(%rip),%rbx        # 1a168 <_ZL10g_ife_lock>
    7060:	48 89 df             	mov    %rbx,%rdi
    7063:	e8 98 55 00 00       	call   c600 <sgx_spin_lock>
    7068:	0f b6 05 d1 11 01 00 	movzbl 0x111d1(%rip),%eax        # 18240 <_ZL16g_is_first_ecall>
    706f:	84 c0                	test   %al,%al
    7071:	74 45                	je     70b8 <do_uninit_enclave+0xd8>
    7073:	48 89 df             	mov    %rbx,%rdi
    7076:	e8 15 56 00 00       	call   c690 <sgx_spin_unlock>
    707b:	bf 03 00 00 00       	mov    $0x3,%edi
    7080:	e8 90 ae 00 00       	call   11f15 <set_enclave_state>
    7085:	5b                   	pop    %rbx
    7086:	31 c0                	xor    %eax,%eax
    7088:	5d                   	pop    %rbp
    7089:	41 5c                	pop    %r12
    708b:	c3                   	ret    
    708c:	0f 1f 40 00          	nopl   0x0(%rax)
    7090:	e8 bb f0 ff ff       	call   6150 <is_dynamic_thread_exist>
    7095:	85 c0                	test   %eax,%eax
    7097:	0f 84 6c ff ff ff    	je     7009 <do_uninit_enclave+0x29>
    709d:	bf 03 00 00 00       	mov    $0x3,%edi
    70a2:	e8 6e ae 00 00       	call   11f15 <set_enclave_state>
    70a7:	5b                   	pop    %rbx
    70a8:	b8 01 00 00 00       	mov    $0x1,%eax
    70ad:	5d                   	pop    %rbp
    70ae:	41 5c                	pop    %r12
    70b0:	c3                   	ret    
    70b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    70b8:	e8 43 1b 00 00       	call   8c00 <uninit_global_object>
    70bd:	eb b4                	jmp    7073 <do_uninit_enclave+0x93>
    70bf:	90                   	nop

00000000000070c0 <sgx_ocall>:
    70c0:	f3 0f 1e fa          	endbr64 
    70c4:	8d 47 07             	lea    0x7(%rdi),%eax
    70c7:	83 f8 05             	cmp    $0x5,%eax
    70ca:	76 12                	jbe    70de <sgx_ocall+0x1e>
    70cc:	85 ff                	test   %edi,%edi
    70ce:	74 0e                	je     70de <sgx_ocall+0x1e>
    70d0:	48 8d 15 39 bf 00 00 	lea    0xbf39(%rip),%rdx        # 13010 <g_dyn_entry_table>
    70d7:	89 f8                	mov    %edi,%eax
    70d9:	48 3b 02             	cmp    (%rdx),%rax
    70dc:	73 0a                	jae    70e8 <sgx_ocall+0x28>
    70de:	e9 fc b0 00 00       	jmp    121df <__morestack>
    70e3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    70e8:	b8 01 10 00 00       	mov    $0x1001,%eax
    70ed:	c3                   	ret    
    70ee:	66 90                	xchg   %ax,%ax

00000000000070f0 <update_ocall_lastsp>:
    70f0:	f3 0f 1e fa          	endbr64 
    70f4:	53                   	push   %rbx
    70f5:	48 89 fb             	mov    %rdi,%rbx
    70f8:	e8 46 ae 00 00       	call   11f43 <get_thread_data>
    70fd:	b9 01 00 00 00       	mov    $0x1,%ecx
    7102:	48 8b 50 08          	mov    0x8(%rax),%rdx
    7106:	48 89 53 30          	mov    %rdx,0x30(%rbx)
    710a:	48 39 50 10          	cmp    %rdx,0x10(%rax)
    710e:	74 0b                	je     711b <update_ocall_lastsp+0x2b>
    7110:	48 8b b2 90 00 00 00 	mov    0x90(%rdx),%rsi
    7117:	48 8d 4e 01          	lea    0x1(%rsi),%rcx
    711b:	48 89 8b 90 00 00 00 	mov    %rcx,0x90(%rbx)
    7122:	48 89 58 08          	mov    %rbx,0x8(%rax)
    7126:	48 89 d0             	mov    %rdx,%rax
    7129:	5b                   	pop    %rbx
    712a:	c3                   	ret    
    712b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000007130 <do_oret>:
    7130:	f3 0f 1e fa          	endbr64 
    7134:	55                   	push   %rbp
    7135:	48 89 fd             	mov    %rdi,%rbp
    7138:	53                   	push   %rbx
    7139:	48 83 ec 18          	sub    $0x18,%rsp
    713d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    7144:	00 00 
    7146:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    714b:	31 c0                	xor    %eax,%eax
    714d:	e8 f1 ad 00 00       	call   11f43 <get_thread_data>
    7152:	48 83 78 50 01       	cmpq   $0x1,0x50(%rax)
    7157:	48 89 c3             	mov    %rax,%rbx
    715a:	74 74                	je     71d0 <do_oret+0xa0>
    715c:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    7160:	48 89 e0             	mov    %rsp,%rax
    7163:	48 89 3c 24          	mov    %rdi,(%rsp)
    7167:	48 39 f8             	cmp    %rdi,%rax
    716a:	72 24                	jb     7190 <do_oret+0x60>
    716c:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    7171:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    7178:	00 00 
    717a:	75 6b                	jne    71e7 <do_oret+0xb7>
    717c:	48 83 c4 18          	add    $0x18,%rsp
    7180:	b8 01 00 00 00       	mov    $0x1,%eax
    7185:	5b                   	pop    %rbx
    7186:	5d                   	pop    %rbp
    7187:	c3                   	ret    
    7188:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    718f:	00 
    7190:	48 8b 43 10          	mov    0x10(%rbx),%rax
    7194:	48 8d 90 10 ff ff ff 	lea    -0xf0(%rax),%rdx
    719b:	48 39 fa             	cmp    %rdi,%rdx
    719e:	72 cc                	jb     716c <do_oret+0x3c>
    71a0:	48 81 7f 20 44 49 43 	cmpq   $0x4f434944,0x20(%rdi)
    71a7:	4f 
    71a8:	75 c2                	jne    716c <do_oret+0x3c>
    71aa:	48 8b 57 30          	mov    0x30(%rdi),%rdx
    71ae:	48 39 d7             	cmp    %rdx,%rdi
    71b1:	73 b9                	jae    716c <do_oret+0x3c>
    71b3:	48 39 d0             	cmp    %rdx,%rax
    71b6:	72 b4                	jb     716c <do_oret+0x3c>
    71b8:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    71bc:	48 89 ee             	mov    %rbp,%rsi
    71bf:	e8 2e b0 00 00       	call   121f2 <asm_oret>
    71c4:	eb a6                	jmp    716c <do_oret+0x3c>
    71c6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    71cd:	00 00 00 
    71d0:	48 c7 40 50 00 00 00 	movq   $0x0,0x50(%rax)
    71d7:	00 
    71d8:	bf 01 00 00 00       	mov    $0x1,%edi
    71dd:	e8 fe f1 ff ff       	call   63e0 <sgx_set_ssa_aexnotify>
    71e2:	e9 75 ff ff ff       	jmp    715c <do_oret+0x2c>
    71e7:	e8 84 96 00 00       	call   10870 <__stack_chk_fail>
    71ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000071f0 <get_enclave_size>:
    71f0:	f3 0f 1e fa          	endbr64 
    71f4:	48 8d 05 85 bf 00 00 	lea    0xbf85(%rip),%rax        # 13180 <g_global_data>
    71fb:	48 8b 40 08          	mov    0x8(%rax),%rax
    71ff:	c3                   	ret    

0000000000007200 <get_enclave_end>:
    7200:	f3 0f 1e fa          	endbr64 
    7204:	48 83 ec 08          	sub    $0x8,%rsp
    7208:	e8 eb ac 00 00       	call   11ef8 <get_enclave_base>
    720d:	48 8d 15 6c bf 00 00 	lea    0xbf6c(%rip),%rdx        # 13180 <g_global_data>
    7214:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    7218:	48 83 c4 08          	add    $0x8,%rsp
    721c:	48 8d 44 02 ff       	lea    -0x1(%rdx,%rax,1),%rax
    7221:	c3                   	ret    
    7222:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    7229:	00 00 00 
    722c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000007230 <get_heap_base>:
    7230:	f3 0f 1e fa          	endbr64 
    7234:	48 83 ec 08          	sub    $0x8,%rsp
    7238:	e8 bb ac 00 00       	call   11ef8 <get_enclave_base>
    723d:	48 8d 15 3c bf 00 00 	lea    0xbf3c(%rip),%rdx        # 13180 <g_global_data>
    7244:	48 8b 52 10          	mov    0x10(%rdx),%rdx
    7248:	48 83 c4 08          	add    $0x8,%rsp
    724c:	48 01 d0             	add    %rdx,%rax
    724f:	c3                   	ret    

0000000000007250 <get_heap_size>:
    7250:	f3 0f 1e fa          	endbr64 
    7254:	48 8d 05 d1 0b 01 00 	lea    0x10bd1(%rip),%rax        # 17e2c <EDMM_supported>
    725b:	48 8d 0d 1e bf 00 00 	lea    0xbf1e(%rip),%rcx        # 13180 <g_global_data>
    7262:	8b 00                	mov    (%rax),%eax
    7264:	48 8b 79 18          	mov    0x18(%rcx),%rdi
    7268:	85 c0                	test   %eax,%eax
    726a:	74 41                	je     72ad <get_heap_size+0x5d>
    726c:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    7272:	85 c0                	test   %eax,%eax
    7274:	74 37                	je     72ad <get_heap_size+0x5d>
    7276:	31 d2                	xor    %edx,%edx
    7278:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    727f:	00 
    7280:	89 d0                	mov    %edx,%eax
    7282:	48 83 c0 0b          	add    $0xb,%rax
    7286:	48 c1 e0 05          	shl    $0x5,%rax
    728a:	48 01 c8             	add    %rcx,%rax
    728d:	0f b7 30             	movzwl (%rax),%esi
    7290:	66 83 fe 03          	cmp    $0x3,%si
    7294:	75 0a                	jne    72a0 <get_heap_size+0x50>
    7296:	8b 40 04             	mov    0x4(%rax),%eax
    7299:	48 c1 e0 0c          	shl    $0xc,%rax
    729d:	48 01 c7             	add    %rax,%rdi
    72a0:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    72a6:	83 c2 01             	add    $0x1,%edx
    72a9:	39 c2                	cmp    %eax,%edx
    72ab:	72 d3                	jb     7280 <get_heap_size+0x30>
    72ad:	48 89 f8             	mov    %rdi,%rax
    72b0:	c3                   	ret    
    72b1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    72b8:	00 00 00 
    72bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000072c0 <get_heap_min_size>:
    72c0:	f3 0f 1e fa          	endbr64 
    72c4:	48 8d 0d b5 be 00 00 	lea    0xbeb5(%rip),%rcx        # 13180 <g_global_data>
    72cb:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    72d1:	85 c0                	test   %eax,%eax
    72d3:	74 3b                	je     7310 <get_heap_min_size+0x50>
    72d5:	31 d2                	xor    %edx,%edx
    72d7:	eb 14                	jmp    72ed <get_heap_min_size+0x2d>
    72d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    72e0:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    72e6:	83 c2 01             	add    $0x1,%edx
    72e9:	39 c2                	cmp    %eax,%edx
    72eb:	73 23                	jae    7310 <get_heap_min_size+0x50>
    72ed:	89 d0                	mov    %edx,%eax
    72ef:	48 83 c0 0b          	add    $0xb,%rax
    72f3:	48 c1 e0 05          	shl    $0x5,%rax
    72f7:	48 01 c8             	add    %rcx,%rax
    72fa:	0f b7 30             	movzwl (%rax),%esi
    72fd:	66 83 fe 01          	cmp    $0x1,%si
    7301:	75 dd                	jne    72e0 <get_heap_min_size+0x20>
    7303:	8b 40 04             	mov    0x4(%rax),%eax
    7306:	48 c1 e0 0c          	shl    $0xc,%rax
    730a:	c3                   	ret    
    730b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7310:	31 c0                	xor    %eax,%eax
    7312:	c3                   	ret    
    7313:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    731a:	00 00 00 
    731d:	0f 1f 00             	nopl   (%rax)

0000000000007320 <get_rsrv_base>:
    7320:	f3 0f 1e fa          	endbr64 
    7324:	48 83 ec 08          	sub    $0x8,%rsp
    7328:	e8 cb ab 00 00       	call   11ef8 <get_enclave_base>
    732d:	48 8d 15 4c be 00 00 	lea    0xbe4c(%rip),%rdx        # 13180 <g_global_data>
    7334:	48 8b 52 20          	mov    0x20(%rdx),%rdx
    7338:	48 83 c4 08          	add    $0x8,%rsp
    733c:	48 01 d0             	add    %rdx,%rax
    733f:	c3                   	ret    

0000000000007340 <get_rsrv_end>:
    7340:	f3 0f 1e fa          	endbr64 
    7344:	48 83 ec 08          	sub    $0x8,%rsp
    7348:	e8 ab ab 00 00       	call   11ef8 <get_enclave_base>
    734d:	48 8d 35 2c be 00 00 	lea    0xbe2c(%rip),%rsi        # 13180 <g_global_data>
    7354:	48 8d 15 d1 0a 01 00 	lea    0x10ad1(%rip),%rdx        # 17e2c <EDMM_supported>
    735b:	4c 8b 4e 20          	mov    0x20(%rsi),%r9
    735f:	8b 12                	mov    (%rdx),%edx
    7361:	4c 8b 46 28          	mov    0x28(%rsi),%r8
    7365:	49 83 e9 01          	sub    $0x1,%r9
    7369:	85 d2                	test   %edx,%edx
    736b:	74 40                	je     73ad <get_rsrv_end+0x6d>
    736d:	8b 96 58 01 00 00    	mov    0x158(%rsi),%edx
    7373:	85 d2                	test   %edx,%edx
    7375:	74 36                	je     73ad <get_rsrv_end+0x6d>
    7377:	31 c9                	xor    %ecx,%ecx
    7379:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7380:	89 ca                	mov    %ecx,%edx
    7382:	48 83 c2 0b          	add    $0xb,%rdx
    7386:	48 c1 e2 05          	shl    $0x5,%rdx
    738a:	48 01 f2             	add    %rsi,%rdx
    738d:	0f b7 3a             	movzwl (%rdx),%edi
    7390:	66 83 ff 16          	cmp    $0x16,%di
    7394:	75 0a                	jne    73a0 <get_rsrv_end+0x60>
    7396:	8b 52 04             	mov    0x4(%rdx),%edx
    7399:	48 c1 e2 0c          	shl    $0xc,%rdx
    739d:	49 01 d0             	add    %rdx,%r8
    73a0:	8b 96 58 01 00 00    	mov    0x158(%rsi),%edx
    73a6:	83 c1 01             	add    $0x1,%ecx
    73a9:	39 d1                	cmp    %edx,%ecx
    73ab:	72 d3                	jb     7380 <get_rsrv_end+0x40>
    73ad:	4c 01 c8             	add    %r9,%rax
    73b0:	48 83 c4 08          	add    $0x8,%rsp
    73b4:	4c 01 c0             	add    %r8,%rax
    73b7:	c3                   	ret    
    73b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    73bf:	00 

00000000000073c0 <get_rsrv_size>:
    73c0:	f3 0f 1e fa          	endbr64 
    73c4:	48 8d 05 61 0a 01 00 	lea    0x10a61(%rip),%rax        # 17e2c <EDMM_supported>
    73cb:	48 8d 0d ae bd 00 00 	lea    0xbdae(%rip),%rcx        # 13180 <g_global_data>
    73d2:	8b 00                	mov    (%rax),%eax
    73d4:	48 8b 79 28          	mov    0x28(%rcx),%rdi
    73d8:	85 c0                	test   %eax,%eax
    73da:	74 41                	je     741d <get_rsrv_size+0x5d>
    73dc:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    73e2:	85 c0                	test   %eax,%eax
    73e4:	74 37                	je     741d <get_rsrv_size+0x5d>
    73e6:	31 d2                	xor    %edx,%edx
    73e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    73ef:	00 
    73f0:	89 d0                	mov    %edx,%eax
    73f2:	48 83 c0 0b          	add    $0xb,%rax
    73f6:	48 c1 e0 05          	shl    $0x5,%rax
    73fa:	48 01 c8             	add    %rcx,%rax
    73fd:	0f b7 30             	movzwl (%rax),%esi
    7400:	66 83 fe 16          	cmp    $0x16,%si
    7404:	75 0a                	jne    7410 <get_rsrv_size+0x50>
    7406:	8b 40 04             	mov    0x4(%rax),%eax
    7409:	48 c1 e0 0c          	shl    $0xc,%rax
    740d:	48 01 c7             	add    %rax,%rdi
    7410:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    7416:	83 c2 01             	add    $0x1,%edx
    7419:	39 c2                	cmp    %eax,%edx
    741b:	72 d3                	jb     73f0 <get_rsrv_size+0x30>
    741d:	48 89 f8             	mov    %rdi,%rax
    7420:	c3                   	ret    
    7421:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    7428:	00 00 00 
    742b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000007430 <get_rsrv_min_size>:
    7430:	f3 0f 1e fa          	endbr64 
    7434:	48 8d 0d 45 bd 00 00 	lea    0xbd45(%rip),%rcx        # 13180 <g_global_data>
    743b:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    7441:	85 c0                	test   %eax,%eax
    7443:	74 3b                	je     7480 <get_rsrv_min_size+0x50>
    7445:	31 d2                	xor    %edx,%edx
    7447:	eb 14                	jmp    745d <get_rsrv_min_size+0x2d>
    7449:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7450:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    7456:	83 c2 01             	add    $0x1,%edx
    7459:	39 c2                	cmp    %eax,%edx
    745b:	73 23                	jae    7480 <get_rsrv_min_size+0x50>
    745d:	89 d0                	mov    %edx,%eax
    745f:	48 83 c0 0b          	add    $0xb,%rax
    7463:	48 c1 e0 05          	shl    $0x5,%rax
    7467:	48 01 c8             	add    %rcx,%rax
    746a:	0f b7 30             	movzwl (%rax),%esi
    746d:	66 83 fe 14          	cmp    $0x14,%si
    7471:	75 dd                	jne    7450 <get_rsrv_min_size+0x20>
    7473:	8b 40 04             	mov    0x4(%rax),%eax
    7476:	48 c1 e0 0c          	shl    $0xc,%rax
    747a:	c3                   	ret    
    747b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7480:	31 c0                	xor    %eax,%eax
    7482:	c3                   	ret    
    7483:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    748a:	00 00 00 
    748d:	0f 1f 00             	nopl   (%rax)

0000000000007490 <get_errno_addr>:
    7490:	f3 0f 1e fa          	endbr64 
    7494:	48 83 ec 08          	sub    $0x8,%rsp
    7498:	e8 a6 aa 00 00       	call   11f43 <get_thread_data>
    749d:	48 83 c4 08          	add    $0x8,%rsp
    74a1:	48 83 c0 40          	add    $0x40,%rax
    74a5:	c3                   	ret    
    74a6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    74ad:	00 00 00 

00000000000074b0 <feature_supported>:
    74b0:	f3 0f 1e fa          	endbr64 
    74b4:	48 85 ff             	test   %rdi,%rdi
    74b7:	74 37                	je     74f0 <feature_supported+0x40>
    74b9:	31 d2                	xor    %edx,%edx
    74bb:	eb 08                	jmp    74c5 <feature_supported+0x15>
    74bd:	0f 1f 00             	nopl   (%rax)
    74c0:	48 85 c0             	test   %rax,%rax
    74c3:	78 2b                	js     74f0 <feature_supported+0x40>
    74c5:	89 d0                	mov    %edx,%eax
    74c7:	83 c2 01             	add    $0x1,%edx
    74ca:	41 89 d1             	mov    %edx,%r9d
    74cd:	49 89 c0             	mov    %rax,%r8
    74d0:	48 8b 04 c7          	mov    (%rdi,%rax,8),%rax
    74d4:	41 c1 e1 06          	shl    $0x6,%r9d
    74d8:	44 39 ce             	cmp    %r9d,%esi
    74db:	73 e3                	jae    74c0 <feature_supported+0x10>
    74dd:	41 c1 e0 06          	shl    $0x6,%r8d
    74e1:	44 29 c6             	sub    %r8d,%esi
    74e4:	89 f1                	mov    %esi,%ecx
    74e6:	48 d3 e8             	shr    %cl,%rax
    74e9:	83 e0 01             	and    $0x1,%eax
    74ec:	c3                   	ret    
    74ed:	0f 1f 00             	nopl   (%rax)
    74f0:	31 c0                	xor    %eax,%eax
    74f2:	c3                   	ret    
    74f3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    74fa:	00 00 00 
    74fd:	0f 1f 00             	nopl   (%rax)

0000000000007500 <is_stack_addr>:
    7500:	f3 0f 1e fa          	endbr64 
    7504:	55                   	push   %rbp
    7505:	48 89 f5             	mov    %rsi,%rbp
    7508:	53                   	push   %rbx
    7509:	48 89 fb             	mov    %rdi,%rbx
    750c:	48 83 ec 08          	sub    $0x8,%rsp
    7510:	e8 2e aa 00 00       	call   11f43 <get_thread_data>
    7515:	31 c9                	xor    %ecx,%ecx
    7517:	48 01 dd             	add    %rbx,%rbp
    751a:	48 89 c2             	mov    %rax,%rdx
    751d:	0f 92 c1             	setb   %cl
    7520:	48 39 68 10          	cmp    %rbp,0x10(%rax)
    7524:	0f 93 c0             	setae  %al
    7527:	48 3b 5a 18          	cmp    0x18(%rdx),%rbx
    752b:	0f 93 c2             	setae  %dl
    752e:	21 d0                	and    %edx,%eax
    7530:	48 85 c9             	test   %rcx,%rcx
    7533:	0f 94 c2             	sete   %dl
    7536:	48 83 c4 08          	add    $0x8,%rsp
    753a:	21 d0                	and    %edx,%eax
    753c:	5b                   	pop    %rbx
    753d:	5d                   	pop    %rbp
    753e:	c3                   	ret    
    753f:	90                   	nop

0000000000007540 <is_valid_sp>:
    7540:	f3 0f 1e fa          	endbr64 
    7544:	40 f6 c7 07          	test   $0x7,%dil
    7548:	74 06                	je     7550 <is_valid_sp+0x10>
    754a:	31 c0                	xor    %eax,%eax
    754c:	c3                   	ret    
    754d:	0f 1f 00             	nopl   (%rax)
    7550:	53                   	push   %rbx
    7551:	48 89 fb             	mov    %rdi,%rbx
    7554:	e8 ea a9 00 00       	call   11f43 <get_thread_data>
    7559:	48 89 c2             	mov    %rax,%rdx
    755c:	48 3b 58 18          	cmp    0x18(%rax),%rbx
    7560:	0f 93 c0             	setae  %al
    7563:	48 39 5a 10          	cmp    %rbx,0x10(%rdx)
    7567:	5b                   	pop    %rbx
    7568:	0f 93 c2             	setae  %dl
    756b:	21 d0                	and    %edx,%eax
    756d:	c3                   	ret    
    756e:	66 90                	xchg   %ax,%ax

0000000000007570 <is_utility_thread>:
    7570:	f3 0f 1e fa          	endbr64 
    7574:	48 83 ec 08          	sub    $0x8,%rsp
    7578:	e8 c6 a9 00 00       	call   11f43 <get_thread_data>
    757d:	31 d2                	xor    %edx,%edx
    757f:	48 85 c0             	test   %rax,%rax
    7582:	74 07                	je     758b <is_utility_thread+0x1b>
    7584:	48 8b 50 30          	mov    0x30(%rax),%rdx
    7588:	83 e2 01             	and    $0x1,%edx
    758b:	89 d0                	mov    %edx,%eax
    758d:	48 83 c4 08          	add    $0x8,%rsp
    7591:	c3                   	ret    
    7592:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    7599:	00 00 00 
    759c:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000075a0 <get_max_tcs_num>:
    75a0:	f3 0f 1e fa          	endbr64 
    75a4:	48 8d 05 81 08 01 00 	lea    0x10881(%rip),%rax        # 17e2c <EDMM_supported>
    75ab:	83 38 01             	cmpl   $0x1,(%rax)
    75ae:	48 8d 05 cb bb 00 00 	lea    0xbbcb(%rip),%rax        # 13180 <g_global_data>
    75b5:	74 09                	je     75c0 <get_max_tcs_num+0x20>
    75b7:	48 8b 40 48          	mov    0x48(%rax),%rax
    75bb:	c3                   	ret    
    75bc:	0f 1f 40 00          	nopl   0x0(%rax)
    75c0:	48 8b 40 40          	mov    0x40(%rax),%rax
    75c4:	c3                   	ret    
    75c5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    75cc:	00 00 00 
    75cf:	90                   	nop

00000000000075d0 <is_pkru_enabled>:
    75d0:	f3 0f 1e fa          	endbr64 
    75d4:	48 83 ec 08          	sub    $0x8,%rsp
    75d8:	e8 23 0a 00 00       	call   8000 <get_xfeature_state>
    75dd:	48 83 c4 08          	add    $0x8,%rsp
    75e1:	48 c1 e8 09          	shr    $0x9,%rax
    75e5:	83 e0 01             	and    $0x1,%eax
    75e8:	c3                   	ret    
    75e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000075f0 <is_tcs_binding_mode>:
    75f0:	f3 0f 1e fa          	endbr64 
    75f4:	48 8d 05 85 bb 00 00 	lea    0xbb85(%rip),%rax        # 13180 <g_global_data>
    75fb:	48 8b 40 38          	mov    0x38(%rax),%rax
    75ff:	48 85 c0             	test   %rax,%rax
    7602:	0f 94 c0             	sete   %al
    7605:	c3                   	ret    
    7606:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    760d:	00 00 00 

0000000000007610 <get_xsave_size>:
    7610:	f3 0f 1e fa          	endbr64 
    7614:	48 8d 05 65 bb 00 00 	lea    0xbb65(%rip),%rax        # 13180 <g_global_data>
    761b:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
    7622:	c3                   	ret    
    7623:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    762a:	00 00 00 
    762d:	0f 1f 00             	nopl   (%rax)

0000000000007630 <get_ssa_aexnotify>:
    7630:	f3 0f 1e fa          	endbr64 
    7634:	48 83 ec 08          	sub    $0x8,%rsp
    7638:	e8 06 a9 00 00       	call   11f43 <get_thread_data>
    763d:	48 85 c0             	test   %rax,%rax
    7640:	74 16                	je     7658 <get_ssa_aexnotify+0x28>
    7642:	48 8b 40 20          	mov    0x20(%rax),%rax
    7646:	0f b6 80 a7 00 00 00 	movzbl 0xa7(%rax),%eax
    764d:	48 83 c4 08          	add    $0x8,%rsp
    7651:	83 e0 01             	and    $0x1,%eax
    7654:	c3                   	ret    
    7655:	0f 1f 00             	nopl   (%rax)
    7658:	31 c0                	xor    %eax,%eax
    765a:	48 83 c4 08          	add    $0x8,%rsp
    765e:	c3                   	ret    
    765f:	90                   	nop

0000000000007660 <internal_handle_exception>:
    7660:	f3 0f 1e fa          	endbr64 
    7664:	55                   	push   %rbp
    7665:	48 89 e5             	mov    %rsp,%rbp
    7668:	41 57                	push   %r15
    766a:	41 56                	push   %r14
    766c:	41 55                	push   %r13
    766e:	41 54                	push   %r12
    7670:	53                   	push   %rbx
    7671:	48 89 fb             	mov    %rdi,%rbx
    7674:	48 83 ec 38          	sub    $0x38,%rsp
    7678:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    767f:	00 00 
    7681:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    7685:	31 c0                	xor    %eax,%eax
    7687:	e8 b7 a8 00 00       	call   11f43 <get_thread_data>
    768c:	4c 8b 60 20          	mov    0x20(%rax),%r12
    7690:	49 89 c5             	mov    %rax,%r13
    7693:	e8 78 ff ff ff       	call   7610 <get_xsave_size>
    7698:	48 85 db             	test   %rbx,%rbx
    769b:	0f 84 4f 01 00 00    	je     77f0 <internal_handle_exception+0x190>
    76a1:	49 8d b4 24 ff 0f 00 	lea    0xfff(%r12),%rsi
    76a8:	00 
    76a9:	48 05 b7 10 00 00    	add    $0x10b7,%rax
    76af:	48 8b 93 b0 00 00 00 	mov    0xb0(%rbx),%rdx
    76b6:	4c 8d b3 c0 00 00 00 	lea    0xc0(%rbx),%r14
    76bd:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    76c3:	48 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%rsi
    76ca:	4c 89 f7             	mov    %r14,%rdi
    76cd:	48 29 c6             	sub    %rax,%rsi
    76d0:	e8 8b 8e 00 00       	call   10560 <memcpy>
    76d5:	8b 83 a8 00 00 00    	mov    0xa8(%rbx),%eax
    76db:	85 c0                	test   %eax,%eax
    76dd:	0f 84 2e 01 00 00    	je     7811 <internal_handle_exception+0x1b1>
    76e3:	49 8b 45 78          	mov    0x78(%r13),%rax
    76e7:	48 85 c0             	test   %rax,%rax
    76ea:	0f 88 00 01 00 00    	js     77f0 <internal_handle_exception+0x190>
    76f0:	48 8d 50 01          	lea    0x1(%rax),%rdx
    76f4:	83 bb 90 00 00 00 0e 	cmpl   $0xe,0x90(%rbx)
    76fb:	49 89 55 78          	mov    %rdx,0x78(%r13)
    76ff:	75 27                	jne    7728 <internal_handle_exception+0xc8>
    7701:	48 8b 15 78 2a 01 00 	mov    0x12a78(%rip),%rdx        # 1a180 <g_mm_pfhandler>
    7708:	48 85 d2             	test   %rdx,%rdx
    770b:	74 1b                	je     7728 <internal_handle_exception+0xc8>
    770d:	49 89 45 78          	mov    %rax,0x78(%r13)
    7711:	48 8d bb 98 00 00 00 	lea    0x98(%rbx),%rdi
    7718:	ff d2                	call   *%rdx
    771a:	83 c0 01             	add    $0x1,%eax
    771d:	0f 84 ee 00 00 00    	je     7811 <internal_handle_exception+0x1b1>
    7723:	49 83 45 78 01       	addq   $0x1,0x78(%r13)
    7728:	48 8d 3d 61 2a 01 00 	lea    0x12a61(%rip),%rdi        # 1a190 <_ZL14g_handler_lock>
    772f:	e8 cc 4e 00 00       	call   c600 <sgx_spin_lock>
    7734:	48 8b 05 5d 2a 01 00 	mov    0x12a5d(%rip),%rax        # 1a198 <_ZL12g_first_node>
    773b:	48 85 c0             	test   %rax,%rax
    773e:	0f 84 b9 00 00 00    	je     77fd <internal_handle_exception+0x19d>
    7744:	45 31 ff             	xor    %r15d,%r15d
    7747:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    774e:	00 00 
    7750:	48 8b 40 08          	mov    0x8(%rax),%rax
    7754:	49 83 c7 08          	add    $0x8,%r15
    7758:	48 85 c0             	test   %rax,%rax
    775b:	75 f3                	jne    7750 <internal_handle_exception+0xf0>
    775d:	4d 85 ff             	test   %r15,%r15
    7760:	0f 84 97 00 00 00    	je     77fd <internal_handle_exception+0x19d>
    7766:	4c 89 ff             	mov    %r15,%rdi
    7769:	e8 e2 4c 00 00       	call   c450 <alloca>
    776e:	49 89 c4             	mov    %rax,%r12
    7771:	48 85 c0             	test   %rax,%rax
    7774:	0f 84 a9 02 00 00    	je     7a23 <internal_handle_exception+0x3c3>
    777a:	48 8b 05 17 2a 01 00 	mov    0x12a17(%rip),%rax        # 1a198 <_ZL12g_first_node>
    7781:	4c 89 e1             	mov    %r12,%rcx
    7784:	48 85 c0             	test   %rax,%rax
    7787:	74 1b                	je     77a4 <internal_handle_exception+0x144>
    7789:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7790:	48 8b 30             	mov    (%rax),%rsi
    7793:	48 8b 40 08          	mov    0x8(%rax),%rax
    7797:	48 83 c1 08          	add    $0x8,%rcx
    779b:	48 89 71 f8          	mov    %rsi,-0x8(%rcx)
    779f:	48 85 c0             	test   %rax,%rax
    77a2:	75 ec                	jne    7790 <internal_handle_exception+0x130>
    77a4:	48 8d 3d e5 29 01 00 	lea    0x129e5(%rip),%rdi        # 1a190 <_ZL14g_handler_lock>
    77ab:	4d 01 e7             	add    %r12,%r15
    77ae:	e8 dd 4e 00 00       	call   c690 <sgx_spin_unlock>
    77b3:	49 83 6d 78 01       	subq   $0x1,0x78(%r13)
    77b8:	eb 13                	jmp    77cd <internal_handle_exception+0x16d>
    77ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    77c0:	49 83 c4 08          	add    $0x8,%r12
    77c4:	4d 39 fc             	cmp    %r15,%r12
    77c7:	0f 84 e7 01 00 00    	je     79b4 <internal_handle_exception+0x354>
    77cd:	49 8b 04 24          	mov    (%r12),%rax
    77d1:	48 89 df             	mov    %rbx,%rdi
    77d4:	48 33 05 ad 29 01 00 	xor    0x129ad(%rip),%rax        # 1a188 <_ZL12g_veh_cookie>
    77db:	ff d0                	call   *%rax
    77dd:	83 f8 ff             	cmp    $0xffffffff,%eax
    77e0:	75 de                	jne    77c0 <internal_handle_exception+0x160>
    77e2:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    77e6:	e8 55 fd ff ff       	call   7540 <is_valid_sp>
    77eb:	84 c0                	test   %al,%al
    77ed:	75 22                	jne    7811 <internal_handle_exception+0x1b1>
    77ef:	90                   	nop
    77f0:	49 c7 45 78 ff ff ff 	movq   $0xffffffffffffffff,0x78(%r13)
    77f7:	ff 
    77f8:	e8 3a ab 00 00       	call   12337 <abort>
    77fd:	48 8d 3d 8c 29 01 00 	lea    0x1298c(%rip),%rdi        # 1a190 <_ZL14g_handler_lock>
    7804:	e8 87 4e 00 00       	call   c690 <sgx_spin_unlock>
    7809:	49 c7 45 78 ff ff ff 	movq   $0xffffffffffffffff,0x78(%r13)
    7810:	ff 
    7811:	83 bb ac 00 00 00 01 	cmpl   $0x1,0xac(%rbx)
    7818:	74 12                	je     782c <internal_handle_exception+0x1cc>
    781a:	4c 89 f7             	mov    %r14,%rdi
    781d:	e8 8f a2 00 00       	call   11ab1 <restore_xregs>
    7822:	48 89 df             	mov    %rbx,%rdi
    7825:	e8 20 ab 00 00       	call   1234a <continue_execution>
    782a:	eb c4                	jmp    77f0 <internal_handle_exception+0x190>
    782c:	48 89 df             	mov    %rbx,%rdi
    782f:	e8 fc ed ff ff       	call   6630 <sgx_apply_mitigations>
    7834:	4c 89 f7             	mov    %r14,%rdi
    7837:	e8 75 a2 00 00       	call   11ab1 <restore_xregs>
    783c:	e8 02 a7 00 00       	call   11f43 <get_thread_data>
    7841:	49 89 c6             	mov    %rax,%r14
    7844:	48 8b 40 10          	mov    0x10(%rax),%rax
    7848:	49 89 c4             	mov    %rax,%r12
    784b:	49 81 e4 00 f0 ff ff 	and    $0xfffffffffffff000,%r12
    7852:	48 3d ff 0f 00 00    	cmp    $0xfff,%rax
    7858:	77 07                	ja     7861 <internal_handle_exception+0x201>
    785a:	4c 8d a0 00 f0 ff ff 	lea    -0x1000(%rax),%r12
    7861:	48 89 d8             	mov    %rbx,%rax
    7864:	49 8b 4e 18          	mov    0x18(%r14),%rcx
    7868:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    786e:	4c 39 e0             	cmp    %r12,%rax
    7871:	0f 84 93 01 00 00    	je     7a0a <internal_handle_exception+0x3aa>
    7877:	48 05 00 10 00 00    	add    $0x1000,%rax
    787d:	48 83 c8 01          	or     $0x1,%rax
    7881:	49 89 c4             	mov    %rax,%r12
    7884:	48 8b 83 88 00 00 00 	mov    0x88(%rbx),%rax
    788b:	49 89 c7             	mov    %rax,%r15
    788e:	48 c1 e8 0b          	shr    $0xb,%rax
    7892:	48 89 c1             	mov    %rax,%rcx
    7895:	49 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%r15
    789c:	81 e1 fe 0f 00 00    	and    $0xffe,%ecx
    78a2:	48 03 0d 3f 07 01 00 	add    0x1073f(%rip),%rcx        # 17fe8 <_GLOBAL_OFFSET_TABLE_+0x30>
    78a9:	44 0f b7 09          	movzwl (%rcx),%r9d
    78ad:	4b 8d 14 39          	lea    (%r9,%r15,1),%rdx
    78b1:	80 3a c3             	cmpb   $0xc3,(%rdx)
    78b4:	74 3b                	je     78f1 <internal_handle_exception+0x291>
    78b6:	4d 89 f9             	mov    %r15,%r9
    78b9:	49 8d 87 00 10 00 00 	lea    0x1000(%r15),%rax
    78c0:	eb 13                	jmp    78d5 <internal_handle_exception+0x275>
    78c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    78c8:	49 83 c1 01          	add    $0x1,%r9
    78cc:	4c 39 c8             	cmp    %r9,%rax
    78cf:	0f 84 5f 01 00 00    	je     7a34 <internal_handle_exception+0x3d4>
    78d5:	41 80 39 c3          	cmpb   $0xc3,(%r9)
    78d9:	75 ed                	jne    78c8 <internal_handle_exception+0x268>
    78db:	4c 39 c8             	cmp    %r9,%rax
    78de:	0f 84 50 01 00 00    	je     7a34 <internal_handle_exception+0x3d4>
    78e4:	44 89 c8             	mov    %r9d,%eax
    78e7:	4c 89 ca             	mov    %r9,%rdx
    78ea:	66 25 ff 0f          	and    $0xfff,%ax
    78ee:	66 89 01             	mov    %ax,(%rcx)
    78f1:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
    78f5:	48 89 df             	mov    %rbx,%rdi
    78f8:	48 89 55 a0          	mov    %rdx,-0x60(%rbp)
    78fc:	e8 3f ca ff ff       	call   4340 <ct_decode>
    7901:	4d 89 e0             	mov    %r12,%r8
    7904:	be 01 00 00 00       	mov    $0x1,%esi
    7909:	49 83 e0 fe          	and    $0xfffffffffffffffe,%r8
    790d:	4c 63 c8             	movslq %eax,%r9
    7910:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    7914:	4c 89 c1             	mov    %r8,%rcx
    7917:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
    791b:	49 83 f9 01          	cmp    $0x1,%r9
    791f:	48 0f 44 c8          	cmove  %rax,%rcx
    7923:	49 83 f9 02          	cmp    $0x2,%r9
    7927:	48 0f 44 c8          	cmove  %rax,%rcx
    792b:	48 89 cf             	mov    %rcx,%rdi
    792e:	4c 89 4d b0          	mov    %r9,-0x50(%rbp)
    7932:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
    7936:	e8 05 e1 ff ff       	call   5a40 <sgx_is_within_enclave>
    793b:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
    793f:	4c 8b 45 a8          	mov    -0x58(%rbp),%r8
    7943:	85 c0                	test   %eax,%eax
    7945:	4c 8b 4d b0          	mov    -0x50(%rbp),%r9
    7949:	48 98                	cltq   
    794b:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
    794f:	4c 0f 45 c1          	cmovne %rcx,%r8
    7953:	4c 89 f9             	mov    %r15,%rcx
    7956:	48 83 c9 01          	or     $0x1,%rcx
    795a:	49 83 f9 02          	cmp    $0x2,%r9
    795e:	4c 0f 44 f9          	cmove  %rcx,%r15
    7962:	4c 89 fe             	mov    %r15,%rsi
    7965:	48 83 e6 fe          	and    $0xfffffffffffffffe,%rsi
    7969:	48 83 f8 01          	cmp    $0x1,%rax
    796d:	49 0f 44 f7          	cmove  %r15,%rsi
    7971:	41 83 ae bc 00 00 00 	subl   $0x1,0xbc(%r14)
    7978:	01 
    7979:	78 57                	js     79d2 <internal_handle_exception+0x372>
    797b:	41 8b 8e b8 00 00 00 	mov    0xb8(%r14),%ecx
    7982:	49 89 d1             	mov    %rdx,%r9
    7985:	48 89 df             	mov    %rbx,%rdi
    7988:	4c 89 e2             	mov    %r12,%rdx
    798b:	89 c8                	mov    %ecx,%eax
    798d:	c1 e1 04             	shl    $0x4,%ecx
    7990:	d1 e8                	shr    %eax
    7992:	83 e1 10             	and    $0x10,%ecx
    7995:	48 09 f1             	or     %rsi,%rcx
    7998:	41 89 86 b8 00 00 00 	mov    %eax,0xb8(%r14)
    799f:	49 8b 76 20          	mov    0x20(%r14),%rsi
    79a3:	48 81 c6 a7 00 00 00 	add    $0xa7,%rsi
    79aa:	e8 51 a2 00 00       	call   11c00 <constant_time_apply_sgxstep_mitigation_and_continue_execution>
    79af:	e9 3c fe ff ff       	jmp    77f0 <internal_handle_exception+0x190>
    79b4:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    79b8:	e8 83 fb ff ff       	call   7540 <is_valid_sp>
    79bd:	84 c0                	test   %al,%al
    79bf:	0f 84 2b fe ff ff    	je     77f0 <internal_handle_exception+0x190>
    79c5:	49 c7 45 78 ff ff ff 	movq   $0xffffffffffffffff,0x78(%r13)
    79cc:	ff 
    79cd:	e9 3f fe ff ff       	jmp    7811 <internal_handle_exception+0x1b1>
    79d2:	49 8d be b8 00 00 00 	lea    0xb8(%r14),%rdi
    79d9:	48 89 75 a8          	mov    %rsi,-0x58(%rbp)
    79dd:	4c 89 45 b0          	mov    %r8,-0x50(%rbp)
    79e1:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    79e5:	e8 2a a9 00 00       	call   12314 <do_rdrand>
    79ea:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    79ee:	4c 8b 45 b0          	mov    -0x50(%rbp),%r8
    79f2:	85 c0                	test   %eax,%eax
    79f4:	48 8b 75 a8          	mov    -0x58(%rbp),%rsi
    79f8:	74 46                	je     7a40 <internal_handle_exception+0x3e0>
    79fa:	41 c7 86 bc 00 00 00 	movl   $0x1f,0xbc(%r14)
    7a01:	1f 00 00 00 
    7a05:	e9 71 ff ff ff       	jmp    797b <internal_handle_exception+0x31b>
    7a0a:	48 81 e1 00 f0 ff ff 	and    $0xfffffffffffff000,%rcx
    7a11:	4c 39 e1             	cmp    %r12,%rcx
    7a14:	0f 84 6a fe ff ff    	je     7884 <internal_handle_exception+0x224>
    7a1a:	49 83 cc 01          	or     $0x1,%r12
    7a1e:	e9 61 fe ff ff       	jmp    7884 <internal_handle_exception+0x224>
    7a23:	48 8d 3d 66 27 01 00 	lea    0x12766(%rip),%rdi        # 1a190 <_ZL14g_handler_lock>
    7a2a:	e8 61 4c 00 00       	call   c690 <sgx_spin_unlock>
    7a2f:	e9 bc fd ff ff       	jmp    77f0 <internal_handle_exception+0x190>
    7a34:	48 8d 15 bc a4 00 00 	lea    0xa4bc(%rip),%rdx        # 11ef7 <__ct_mitigation_ret>
    7a3b:	e9 b1 fe ff ff       	jmp    78f1 <internal_handle_exception+0x291>
    7a40:	49 c7 46 78 ff ff ff 	movq   $0xffffffffffffffff,0x78(%r14)
    7a47:	ff 
    7a48:	e8 ea a8 00 00       	call   12337 <abort>
    7a4d:	0f 1f 00             	nopl   (%rax)

0000000000007a50 <sgx_register_exception_handler>:
    7a50:	f3 0f 1e fa          	endbr64 
    7a54:	41 55                	push   %r13
    7a56:	41 54                	push   %r12
    7a58:	41 89 fc             	mov    %edi,%r12d
    7a5b:	55                   	push   %rbp
    7a5c:	48 89 f5             	mov    %rsi,%rbp
    7a5f:	53                   	push   %rbx
    7a60:	48 83 ec 18          	sub    $0x18,%rsp
    7a64:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    7a6b:	00 00 
    7a6d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    7a72:	31 c0                	xor    %eax,%eax
    7a74:	48 83 3d 0c 27 01 00 	cmpq   $0x0,0x1270c(%rip)        # 1a188 <_ZL12g_veh_cookie>
    7a7b:	00 
    7a7c:	0f 84 ae 00 00 00    	je     7b30 <sgx_register_exception_handler+0xe0>
    7a82:	31 f6                	xor    %esi,%esi
    7a84:	48 89 ef             	mov    %rbp,%rdi
    7a87:	e8 b4 df ff ff       	call   5a40 <sgx_is_within_enclave>
    7a8c:	85 c0                	test   %eax,%eax
    7a8e:	0f 84 cc 00 00 00    	je     7b60 <sgx_register_exception_handler+0x110>
    7a94:	bf 10 00 00 00       	mov    $0x10,%edi
    7a99:	e8 22 55 00 00       	call   cfc0 <dlmalloc>
    7a9e:	48 89 c3             	mov    %rax,%rbx
    7aa1:	48 85 c0             	test   %rax,%rax
    7aa4:	0f 84 b6 00 00 00    	je     7b60 <sgx_register_exception_handler+0x110>
    7aaa:	48 33 2d d7 26 01 00 	xor    0x126d7(%rip),%rbp        # 1a188 <_ZL12g_veh_cookie>
    7ab1:	4c 8d 2d d8 26 01 00 	lea    0x126d8(%rip),%r13        # 1a190 <_ZL14g_handler_lock>
    7ab8:	48 89 28             	mov    %rbp,(%rax)
    7abb:	4c 89 ef             	mov    %r13,%rdi
    7abe:	e8 3d 4b 00 00       	call   c600 <sgx_spin_lock>
    7ac3:	48 8b 15 ce 26 01 00 	mov    0x126ce(%rip),%rdx        # 1a198 <_ZL12g_first_node>
    7aca:	45 85 e4             	test   %r12d,%r12d
    7acd:	75 29                	jne    7af8 <sgx_register_exception_handler+0xa8>
    7acf:	48 85 d2             	test   %rdx,%rdx
    7ad2:	74 24                	je     7af8 <sgx_register_exception_handler+0xa8>
    7ad4:	0f 1f 40 00          	nopl   0x0(%rax)
    7ad8:	48 89 d0             	mov    %rdx,%rax
    7adb:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    7adf:	48 85 d2             	test   %rdx,%rdx
    7ae2:	75 f4                	jne    7ad8 <sgx_register_exception_handler+0x88>
    7ae4:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
    7aeb:	00 
    7aec:	48 89 58 08          	mov    %rbx,0x8(%rax)
    7af0:	eb 11                	jmp    7b03 <sgx_register_exception_handler+0xb3>
    7af2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7af8:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    7afc:	48 89 1d 95 26 01 00 	mov    %rbx,0x12695(%rip)        # 1a198 <_ZL12g_first_node>
    7b03:	4c 89 ef             	mov    %r13,%rdi
    7b06:	e8 85 4b 00 00       	call   c690 <sgx_spin_unlock>
    7b0b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    7b10:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    7b17:	00 00 
    7b19:	75 7e                	jne    7b99 <sgx_register_exception_handler+0x149>
    7b1b:	48 83 c4 18          	add    $0x18,%rsp
    7b1f:	48 89 d8             	mov    %rbx,%rax
    7b22:	5b                   	pop    %rbx
    7b23:	5d                   	pop    %rbp
    7b24:	41 5c                	pop    %r12
    7b26:	41 5d                	pop    %r13
    7b28:	c3                   	ret    
    7b29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7b30:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    7b37:	00 
    7b38:	48 89 e3             	mov    %rsp,%rbx
    7b3b:	eb 0a                	jmp    7b47 <sgx_register_exception_handler+0xf7>
    7b3d:	0f 1f 00             	nopl   (%rax)
    7b40:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
    7b45:	75 21                	jne    7b68 <sgx_register_exception_handler+0x118>
    7b47:	be 08 00 00 00       	mov    $0x8,%esi
    7b4c:	48 89 df             	mov    %rbx,%rdi
    7b4f:	e8 ec e0 ff ff       	call   5c40 <sgx_read_rand>
    7b54:	85 c0                	test   %eax,%eax
    7b56:	74 e8                	je     7b40 <sgx_register_exception_handler+0xf0>
    7b58:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    7b5f:	00 
    7b60:	31 db                	xor    %ebx,%ebx
    7b62:	eb a7                	jmp    7b0b <sgx_register_exception_handler+0xbb>
    7b64:	0f 1f 40 00          	nopl   0x0(%rax)
    7b68:	4c 8d 2d 21 26 01 00 	lea    0x12621(%rip),%r13        # 1a190 <_ZL14g_handler_lock>
    7b6f:	4c 89 ef             	mov    %r13,%rdi
    7b72:	e8 89 4a 00 00       	call   c600 <sgx_spin_lock>
    7b77:	48 83 3d 09 26 01 00 	cmpq   $0x0,0x12609(%rip)        # 1a188 <_ZL12g_veh_cookie>
    7b7e:	00 
    7b7f:	75 0b                	jne    7b8c <sgx_register_exception_handler+0x13c>
    7b81:	48 8b 04 24          	mov    (%rsp),%rax
    7b85:	48 89 05 fc 25 01 00 	mov    %rax,0x125fc(%rip)        # 1a188 <_ZL12g_veh_cookie>
    7b8c:	4c 89 ef             	mov    %r13,%rdi
    7b8f:	e8 fc 4a 00 00       	call   c690 <sgx_spin_unlock>
    7b94:	e9 e9 fe ff ff       	jmp    7a82 <sgx_register_exception_handler+0x32>
    7b99:	e8 d2 8c 00 00       	call   10870 <__stack_chk_fail>
    7b9e:	66 90                	xchg   %ax,%ax

0000000000007ba0 <sgx_unregister_exception_handler>:
    7ba0:	f3 0f 1e fa          	endbr64 
    7ba4:	48 85 ff             	test   %rdi,%rdi
    7ba7:	0f 84 9b 00 00 00    	je     7c48 <sgx_unregister_exception_handler+0xa8>
    7bad:	55                   	push   %rbp
    7bae:	48 8d 2d db 25 01 00 	lea    0x125db(%rip),%rbp        # 1a190 <_ZL14g_handler_lock>
    7bb5:	53                   	push   %rbx
    7bb6:	48 89 fb             	mov    %rdi,%rbx
    7bb9:	48 89 ef             	mov    %rbp,%rdi
    7bbc:	48 83 ec 08          	sub    $0x8,%rsp
    7bc0:	e8 3b 4a 00 00       	call   c600 <sgx_spin_lock>
    7bc5:	48 8b 05 cc 25 01 00 	mov    0x125cc(%rip),%rax        # 1a198 <_ZL12g_first_node>
    7bcc:	48 85 c0             	test   %rax,%rax
    7bcf:	74 20                	je     7bf1 <sgx_unregister_exception_handler+0x51>
    7bd1:	48 39 d8             	cmp    %rbx,%rax
    7bd4:	75 0f                	jne    7be5 <sgx_unregister_exception_handler+0x45>
    7bd6:	eb 58                	jmp    7c30 <sgx_unregister_exception_handler+0x90>
    7bd8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    7bdf:	00 
    7be0:	48 39 d8             	cmp    %rbx,%rax
    7be3:	74 23                	je     7c08 <sgx_unregister_exception_handler+0x68>
    7be5:	48 89 c2             	mov    %rax,%rdx
    7be8:	48 8b 40 08          	mov    0x8(%rax),%rax
    7bec:	48 85 c0             	test   %rax,%rax
    7bef:	75 ef                	jne    7be0 <sgx_unregister_exception_handler+0x40>
    7bf1:	48 89 ef             	mov    %rbp,%rdi
    7bf4:	e8 97 4a 00 00       	call   c690 <sgx_spin_unlock>
    7bf9:	48 83 c4 08          	add    $0x8,%rsp
    7bfd:	31 c0                	xor    %eax,%eax
    7bff:	5b                   	pop    %rbx
    7c00:	5d                   	pop    %rbp
    7c01:	c3                   	ret    
    7c02:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7c08:	48 8b 43 08          	mov    0x8(%rbx),%rax
    7c0c:	48 89 ef             	mov    %rbp,%rdi
    7c0f:	48 89 42 08          	mov    %rax,0x8(%rdx)
    7c13:	e8 78 4a 00 00       	call   c690 <sgx_spin_unlock>
    7c18:	48 89 df             	mov    %rbx,%rdi
    7c1b:	e8 90 71 00 00       	call   edb0 <dlfree>
    7c20:	48 83 c4 08          	add    $0x8,%rsp
    7c24:	b8 01 00 00 00       	mov    $0x1,%eax
    7c29:	5b                   	pop    %rbx
    7c2a:	5d                   	pop    %rbp
    7c2b:	c3                   	ret    
    7c2c:	0f 1f 40 00          	nopl   0x0(%rax)
    7c30:	48 8b 43 08          	mov    0x8(%rbx),%rax
    7c34:	48 89 ef             	mov    %rbp,%rdi
    7c37:	48 89 05 5a 25 01 00 	mov    %rax,0x1255a(%rip)        # 1a198 <_ZL12g_first_node>
    7c3e:	e8 4d 4a 00 00       	call   c690 <sgx_spin_unlock>
    7c43:	eb d3                	jmp    7c18 <sgx_unregister_exception_handler+0x78>
    7c45:	0f 1f 00             	nopl   (%rax)
    7c48:	31 c0                	xor    %eax,%eax
    7c4a:	c3                   	ret    
    7c4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000007c50 <trts_handle_exception>:
    7c50:	f3 0f 1e fa          	endbr64 
    7c54:	41 57                	push   %r15
    7c56:	41 56                	push   %r14
    7c58:	41 55                	push   %r13
    7c5a:	41 54                	push   %r12
    7c5c:	55                   	push   %rbp
    7c5d:	53                   	push   %rbx
    7c5e:	48 89 fb             	mov    %rdi,%rbx
    7c61:	48 83 ec 08          	sub    $0x8,%rsp
    7c65:	e8 d9 a2 00 00       	call   11f43 <get_thread_data>
    7c6a:	48 85 c0             	test   %rax,%rax
    7c6d:	48 89 c5             	mov    %rax,%rbp
    7c70:	0f 94 c2             	sete   %dl
    7c73:	48 85 db             	test   %rbx,%rbx
    7c76:	0f 94 c0             	sete   %al
    7c79:	08 c2                	or     %al,%dl
    7c7b:	75 33                	jne    7cb0 <trts_handle_exception+0x60>
    7c7d:	48 89 df             	mov    %rbx,%rdi
    7c80:	41 89 d4             	mov    %edx,%r12d
    7c83:	e8 e8 e0 ff ff       	call   5d70 <check_static_stack_canary>
    7c88:	85 c0                	test   %eax,%eax
    7c8a:	75 24                	jne    7cb0 <trts_handle_exception+0x60>
    7c8c:	e8 73 a2 00 00       	call   11f04 <get_enclave_state>
    7c91:	83 f8 02             	cmp    $0x2,%eax
    7c94:	75 1a                	jne    7cb0 <trts_handle_exception+0x60>
    7c96:	48 83 7d 78 ff       	cmpq   $0xffffffffffffffff,0x78(%rbp)
    7c9b:	74 13                	je     7cb0 <trts_handle_exception+0x60>
    7c9d:	48 8b 45 10          	mov    0x10(%rbp),%rax
    7ca1:	48 05 00 04 01 00    	add    $0x10400,%rax
    7ca7:	48 39 c3             	cmp    %rax,%rbx
    7caa:	74 24                	je     7cd0 <trts_handle_exception+0x80>
    7cac:	0f 1f 40 00          	nopl   0x0(%rax)
    7cb0:	bf 03 00 00 00       	mov    $0x3,%edi
    7cb5:	e8 5b a2 00 00       	call   11f15 <set_enclave_state>
    7cba:	b8 06 10 00 00       	mov    $0x1006,%eax
    7cbf:	48 83 c4 08          	add    $0x8,%rsp
    7cc3:	5b                   	pop    %rbx
    7cc4:	5d                   	pop    %rbp
    7cc5:	41 5c                	pop    %r12
    7cc7:	41 5d                	pop    %r13
    7cc9:	41 5e                	pop    %r14
    7ccb:	41 5f                	pop    %r15
    7ccd:	c3                   	ret    
    7cce:	66 90                	xchg   %ax,%ax
    7cd0:	4c 8b 6d 20          	mov    0x20(%rbp),%r13
    7cd4:	e8 37 f9 ff ff       	call   7610 <get_xsave_size>
    7cd9:	48 05 b7 10 00 00    	add    $0x10b7,%rax
    7cdf:	49 81 e5 00 f0 ff ff 	and    $0xfffffffffffff000,%r13
    7ce6:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    7cec:	49 29 c5             	sub    %rax,%r13
    7cef:	4c 39 eb             	cmp    %r13,%rbx
    7cf2:	75 bc                	jne    7cb0 <trts_handle_exception+0x60>
    7cf4:	4c 8b 6d 20          	mov    0x20(%rbp),%r13
    7cf8:	be 08 00 00 00       	mov    $0x8,%esi
    7cfd:	4d 8b b5 90 00 00 00 	mov    0x90(%r13),%r14
    7d04:	4c 89 f7             	mov    %r14,%rdi
    7d07:	e8 94 dd ff ff       	call   5aa0 <sgx_is_outside_enclave>
    7d0c:	85 c0                	test   %eax,%eax
    7d0e:	0f 84 ec 01 00 00    	je     7f00 <trts_handle_exception+0x2b0>
    7d14:	49 8b 5d 20          	mov    0x20(%r13),%rbx
    7d18:	49 39 de             	cmp    %rbx,%r14
    7d1b:	0f 84 df 01 00 00    	je     7f00 <trts_handle_exception+0x2b0>
    7d21:	31 f6                	xor    %esi,%esi
    7d23:	48 89 df             	mov    %rbx,%rdi
    7d26:	e8 d5 f7 ff ff       	call   7500 <is_stack_addr>
    7d2b:	84 c0                	test   %al,%al
    7d2d:	0f 84 cd 01 00 00    	je     7f00 <trts_handle_exception+0x2b0>
    7d33:	48 8b 45 38          	mov    0x38(%rbp),%rax
    7d37:	48 8d b0 b8 01 00 00 	lea    0x1b8(%rax),%rsi
    7d3e:	48 29 f3             	sub    %rsi,%rbx
    7d41:	48 83 e3 c0          	and    $0xffffffffffffffc0,%rbx
    7d45:	48 89 df             	mov    %rbx,%rdi
    7d48:	e8 b3 f7 ff ff       	call   7500 <is_stack_addr>
    7d4d:	84 c0                	test   %al,%al
    7d4f:	0f 84 ab 01 00 00    	je     7f00 <trts_handle_exception+0x2b0>
    7d55:	4c 8d 7b f8          	lea    -0x8(%rbx),%r15
    7d59:	be 08 00 00 00       	mov    $0x8,%esi
    7d5e:	4c 89 ff             	mov    %r15,%rdi
    7d61:	e8 9a f7 ff ff       	call   7500 <is_stack_addr>
    7d66:	41 89 c6             	mov    %eax,%r14d
    7d69:	84 c0                	test   %al,%al
    7d6b:	0f 84 8f 01 00 00    	je     7f00 <trts_handle_exception+0x2b0>
    7d71:	48 8b bd b0 00 00 00 	mov    0xb0(%rbp),%rdi
    7d78:	49 39 ff             	cmp    %rdi,%r15
    7d7b:	0f 83 93 01 00 00    	jae    7f14 <trts_handle_exception+0x2c4>
    7d81:	4c 8d a7 ff 0f 00 00 	lea    0xfff(%rdi),%r12
    7d88:	4d 29 fc             	sub    %r15,%r12
    7d8b:	49 81 e4 00 f0 ff ff 	and    $0xfffffffffffff000,%r12
    7d92:	49 39 fc             	cmp    %rdi,%r12
    7d95:	0f 83 65 01 00 00    	jae    7f00 <trts_handle_exception+0x2b0>
    7d9b:	4c 29 e7             	sub    %r12,%rdi
    7d9e:	48 3b 7d 18          	cmp    0x18(%rbp),%rdi
    7da2:	0f 82 58 01 00 00    	jb     7f00 <trts_handle_exception+0x2b0>
    7da8:	4d 85 e4             	test   %r12,%r12
    7dab:	0f 84 4f 01 00 00    	je     7f00 <trts_handle_exception+0x2b0>
    7db1:	4c 89 e6             	mov    %r12,%rsi
    7db4:	e8 97 3a 00 00       	call   b850 <mm_commit>
    7db9:	85 c0                	test   %eax,%eax
    7dbb:	0f 85 3f 01 00 00    	jne    7f00 <trts_handle_exception+0x2b0>
    7dc1:	48 8d 05 4c 00 01 00 	lea    0x1004c(%rip),%rax        # 17e14 <g_aexnotify_supported>
    7dc8:	4c 29 a5 b0 00 00 00 	sub    %r12,0xb0(%rbp)
    7dcf:	45 89 f4             	mov    %r14d,%r12d
    7dd2:	8b 08                	mov    (%rax),%ecx
    7dd4:	31 c0                	xor    %eax,%eax
    7dd6:	89 83 a8 00 00 00    	mov    %eax,0xa8(%rbx)
    7ddc:	41 0f b6 85 a0 00 00 	movzbl 0xa0(%r13),%eax
    7de3:	00 
    7de4:	89 83 90 00 00 00    	mov    %eax,0x90(%rbx)
    7dea:	41 0f b6 95 a1 00 00 	movzbl 0xa1(%r13),%edx
    7df1:	00 
    7df2:	83 e8 0d             	sub    $0xd,%eax
    7df5:	83 e2 07             	and    $0x7,%edx
    7df8:	89 93 94 00 00 00    	mov    %edx,0x94(%rbx)
    7dfe:	48 8b 55 38          	mov    0x38(%rbp),%rdx
    7e02:	48 89 93 b0 00 00 00 	mov    %rdx,0xb0(%rbx)
    7e09:	49 8b 55 00          	mov    0x0(%r13),%rdx
    7e0d:	48 89 13             	mov    %rdx,(%rbx)
    7e10:	49 8b 55 08          	mov    0x8(%r13),%rdx
    7e14:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    7e18:	49 8b 55 10          	mov    0x10(%r13),%rdx
    7e1c:	48 89 53 10          	mov    %rdx,0x10(%rbx)
    7e20:	49 8b 55 18          	mov    0x18(%r13),%rdx
    7e24:	48 89 53 18          	mov    %rdx,0x18(%rbx)
    7e28:	49 8b 55 20          	mov    0x20(%r13),%rdx
    7e2c:	48 89 53 20          	mov    %rdx,0x20(%rbx)
    7e30:	49 8b 55 28          	mov    0x28(%r13),%rdx
    7e34:	48 89 53 28          	mov    %rdx,0x28(%rbx)
    7e38:	49 8b 55 30          	mov    0x30(%r13),%rdx
    7e3c:	48 89 53 30          	mov    %rdx,0x30(%rbx)
    7e40:	49 8b 55 38          	mov    0x38(%r13),%rdx
    7e44:	48 89 53 38          	mov    %rdx,0x38(%rbx)
    7e48:	49 8b 95 80 00 00 00 	mov    0x80(%r13),%rdx
    7e4f:	48 89 93 80 00 00 00 	mov    %rdx,0x80(%rbx)
    7e56:	49 8b 95 88 00 00 00 	mov    0x88(%r13),%rdx
    7e5d:	48 89 93 88 00 00 00 	mov    %rdx,0x88(%rbx)
    7e64:	49 8b 75 40          	mov    0x40(%r13),%rsi
    7e68:	48 89 73 40          	mov    %rsi,0x40(%rbx)
    7e6c:	49 8b 75 48          	mov    0x48(%r13),%rsi
    7e70:	48 89 73 48          	mov    %rsi,0x48(%rbx)
    7e74:	49 8b 75 50          	mov    0x50(%r13),%rsi
    7e78:	48 89 73 50          	mov    %rsi,0x50(%rbx)
    7e7c:	49 8b 75 58          	mov    0x58(%r13),%rsi
    7e80:	48 89 73 58          	mov    %rsi,0x58(%rbx)
    7e84:	49 8b 75 60          	mov    0x60(%r13),%rsi
    7e88:	48 89 73 60          	mov    %rsi,0x60(%rbx)
    7e8c:	49 8b 75 68          	mov    0x68(%r13),%rsi
    7e90:	48 89 73 68          	mov    %rsi,0x68(%rbx)
    7e94:	49 8b 75 70          	mov    0x70(%r13),%rsi
    7e98:	48 89 73 70          	mov    %rsi,0x70(%rbx)
    7e9c:	49 8b 75 78          	mov    0x78(%r13),%rsi
    7ea0:	48 89 73 78          	mov    %rsi,0x78(%rbx)
    7ea4:	83 f8 01             	cmp    $0x1,%eax
    7ea7:	77 15                	ja     7ebe <trts_handle_exception+0x26e>
    7ea9:	49 8b 45 f0          	mov    -0x10(%r13),%rax
    7ead:	48 89 83 98 00 00 00 	mov    %rax,0x98(%rbx)
    7eb4:	41 8b 45 f8          	mov    -0x8(%r13),%eax
    7eb8:	89 83 a0 00 00 00    	mov    %eax,0xa0(%rbx)
    7ebe:	85 c9                	test   %ecx,%ecx
    7ec0:	0f 85 99 00 00 00    	jne    7f5f <trts_handle_exception+0x30f>
    7ec6:	45 84 e4             	test   %r12b,%r12b
    7ec9:	0f 85 ec 00 00 00    	jne    7fbb <trts_handle_exception+0x36b>
    7ecf:	48 8d 05 8a f7 ff ff 	lea    -0x876(%rip),%rax        # 7660 <internal_handle_exception>
    7ed6:	4d 89 7d 20          	mov    %r15,0x20(%r13)
    7eda:	49 89 85 88 00 00 00 	mov    %rax,0x88(%r13)
    7ee1:	49 89 5d 00          	mov    %rbx,0x0(%r13)
    7ee5:	49 89 5d 38          	mov    %rbx,0x38(%r13)
    7ee9:	48 8b 83 88 00 00 00 	mov    0x88(%rbx),%rax
    7ef0:	48 89 43 f8          	mov    %rax,-0x8(%rbx)
    7ef4:	31 c0                	xor    %eax,%eax
    7ef6:	e9 c4 fd ff ff       	jmp    7cbf <trts_handle_exception+0x6f>
    7efb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7f00:	bf 03 00 00 00       	mov    $0x3,%edi
    7f05:	e8 0b a0 00 00       	call   11f15 <set_enclave_state>
    7f0a:	b8 09 10 00 00       	mov    $0x1009,%eax
    7f0f:	e9 ab fd ff ff       	jmp    7cbf <trts_handle_exception+0x6f>
    7f14:	48 8d 15 f9 fe 00 00 	lea    0xfef9(%rip),%rdx        # 17e14 <g_aexnotify_supported>
    7f1b:	49 8b 85 88 00 00 00 	mov    0x88(%r13),%rax
    7f22:	48 3b 05 b7 00 01 00 	cmp    0x100b7(%rip),%rax        # 17fe0 <_GLOBAL_OFFSET_TABLE_+0x28>
    7f29:	8b 0a                	mov    (%rdx),%ecx
    7f2b:	74 6a                	je     7f97 <trts_handle_exception+0x347>
    7f2d:	48 3b 05 a4 00 01 00 	cmp    0x100a4(%rip),%rax        # 17fd8 <_GLOBAL_OFFSET_TABLE_+0x20>
    7f34:	0f 84 8c 00 00 00    	je     7fc6 <trts_handle_exception+0x376>
    7f3a:	85 c9                	test   %ecx,%ecx
    7f3c:	75 0e                	jne    7f4c <trts_handle_exception+0x2fc>
    7f3e:	41 80 bd a3 00 00 00 	cmpb   $0x0,0xa3(%r13)
    7f45:	00 
    7f46:	0f 89 64 fd ff ff    	jns    7cb0 <trts_handle_exception+0x60>
    7f4c:	41 0f b6 85 a3 00 00 	movzbl 0xa3(%r13),%eax
    7f53:	00 
    7f54:	c0 e8 07             	shr    $0x7,%al
    7f57:	0f b6 c0             	movzbl %al,%eax
    7f5a:	e9 77 fe ff ff       	jmp    7dd6 <trts_handle_exception+0x186>
    7f5f:	48 89 53 f8          	mov    %rdx,-0x8(%rbx)
    7f63:	e8 c8 f6 ff ff       	call   7630 <get_ssa_aexnotify>
    7f68:	48 8b 7d 58          	mov    0x58(%rbp),%rdi
    7f6c:	89 83 ac 00 00 00    	mov    %eax,0xac(%rbx)
    7f72:	e8 3a 9b 00 00       	call   11ab1 <restore_xregs>
    7f77:	83 bb ac 00 00 00 01 	cmpl   $0x1,0xac(%rbx)
    7f7e:	74 76                	je     7ff6 <trts_handle_exception+0x3a6>
    7f80:	48 8d 15 d9 f6 ff ff 	lea    -0x927(%rip),%rdx        # 7660 <internal_handle_exception>
    7f87:	4c 89 fe             	mov    %r15,%rsi
    7f8a:	48 89 df             	mov    %rbx,%rdi
    7f8d:	e8 1e a4 00 00       	call   123b0 <second_phase>
    7f92:	e9 19 fd ff ff       	jmp    7cb0 <trts_handle_exception+0x60>
    7f97:	49 83 7d 00 00       	cmpq   $0x0,0x0(%r13)
    7f9c:	75 8f                	jne    7f2d <trts_handle_exception+0x2dd>
    7f9e:	48 83 c0 03          	add    $0x3,%rax
    7fa2:	49 83 8d 80 00 00 00 	orq    $0x1,0x80(%r13)
    7fa9:	01 
    7faa:	45 89 f4             	mov    %r14d,%r12d
    7fad:	49 89 85 88 00 00 00 	mov    %rax,0x88(%r13)
    7fb4:	31 c0                	xor    %eax,%eax
    7fb6:	e9 1b fe ff ff       	jmp    7dd6 <trts_handle_exception+0x186>
    7fbb:	48 89 53 f8          	mov    %rdx,-0x8(%rbx)
    7fbf:	31 c0                	xor    %eax,%eax
    7fc1:	e9 f9 fc ff ff       	jmp    7cbf <trts_handle_exception+0x6f>
    7fc6:	49 83 7d 00 08       	cmpq   $0x8,0x0(%r13)
    7fcb:	0f 85 69 ff ff ff    	jne    7f3a <trts_handle_exception+0x2ea>
    7fd1:	48 83 c0 03          	add    $0x3,%rax
    7fd5:	49 83 8d 80 00 00 00 	orq    $0x40,0x80(%r13)
    7fdc:	40 
    7fdd:	45 89 f4             	mov    %r14d,%r12d
    7fe0:	49 89 85 88 00 00 00 	mov    %rax,0x88(%r13)
    7fe7:	31 c0                	xor    %eax,%eax
    7fe9:	49 c7 45 00 01 00 00 	movq   $0x1,0x0(%r13)
    7ff0:	00 
    7ff1:	e9 e0 fd ff ff       	jmp    7dd6 <trts_handle_exception+0x186>
    7ff6:	31 ff                	xor    %edi,%edi
    7ff8:	e8 e3 e3 ff ff       	call   63e0 <sgx_set_ssa_aexnotify>
    7ffd:	eb 81                	jmp    7f80 <trts_handle_exception+0x330>
    7fff:	90                   	nop

0000000000008000 <get_xfeature_state>:
    8000:	f3 0f 1e fa          	endbr64 
    8004:	48 83 ec 08          	sub    $0x8,%rsp
    8008:	e8 33 92 00 00       	call   11240 <sgx_self_report>
    800d:	31 d2                	xor    %edx,%edx
    800f:	48 8b 40 38          	mov    0x38(%rax),%rax
    8013:	48 83 f8 03          	cmp    $0x3,%rax
    8017:	0f 95 c2             	setne  %dl
    801a:	89 15 24 21 01 00    	mov    %edx,0x12124(%rip)        # 1a144 <g_xsave_enabled>
    8020:	48 83 c4 08          	add    $0x8,%rsp
    8024:	c3                   	ret    
    8025:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    802c:	00 00 00 
    802f:	90                   	nop

0000000000008030 <has_text_relo>:
    8030:	85 d2                	test   %edx,%edx
    8032:	74 5b                	je     808f <has_text_relo+0x5f>
    8034:	89 d2                	mov    %edx,%edx
    8036:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax
    803d:	00 
    803e:	48 29 d0             	sub    %rdx,%rax
    8041:	48 8d 04 c6          	lea    (%rsi,%rax,8),%rax
    8045:	eb 12                	jmp    8059 <has_text_relo+0x29>
    8047:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    804e:	00 00 
    8050:	48 83 c6 38          	add    $0x38,%rsi
    8054:	48 39 c6             	cmp    %rax,%rsi
    8057:	74 36                	je     808f <has_text_relo+0x5f>
    8059:	83 3e 02             	cmpl   $0x2,(%rsi)
    805c:	75 f2                	jne    8050 <has_text_relo+0x20>
    805e:	48 8b 56 20          	mov    0x20(%rsi),%rdx
    8062:	48 03 7e 18          	add    0x18(%rsi),%rdi
    8066:	48 c1 ea 04          	shr    $0x4,%rdx
    806a:	74 23                	je     808f <has_text_relo+0x5f>
    806c:	48 c1 e2 04          	shl    $0x4,%rdx
    8070:	48 01 fa             	add    %rdi,%rdx
    8073:	eb 12                	jmp    8087 <has_text_relo+0x57>
    8075:	0f 1f 00             	nopl   (%rax)
    8078:	48 83 f8 16          	cmp    $0x16,%rax
    807c:	74 1a                	je     8098 <has_text_relo+0x68>
    807e:	48 83 c7 10          	add    $0x10,%rdi
    8082:	48 39 fa             	cmp    %rdi,%rdx
    8085:	74 08                	je     808f <has_text_relo+0x5f>
    8087:	48 8b 07             	mov    (%rdi),%rax
    808a:	48 85 c0             	test   %rax,%rax
    808d:	75 e9                	jne    8078 <has_text_relo+0x48>
    808f:	31 c0                	xor    %eax,%eax
    8091:	c3                   	ret    
    8092:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8098:	b8 01 00 00 00       	mov    $0x1,%eax
    809d:	c3                   	ret    
    809e:	66 90                	xchg   %ax,%ax

00000000000080a0 <do_relocs>:
    80a0:	49 89 d3             	mov    %rdx,%r11
    80a3:	48 8d 14 37          	lea    (%rdi,%rsi,1),%rdx
    80a7:	49 01 fb             	add    %rdi,%r11
    80aa:	48 85 c9             	test   %rcx,%rcx
    80ad:	0f 84 c2 01 00 00    	je     8275 <do_relocs+0x1d5>
    80b3:	55                   	push   %rbp
    80b4:	49 89 c9             	mov    %rcx,%r9
    80b7:	31 f6                	xor    %esi,%esi
    80b9:	4c 8d 05 f0 af 00 00 	lea    0xaff0(%rip),%r8        # 130b0 <g_dyn_entry_table+0xa0>
    80c0:	53                   	push   %rbx
    80c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    80c8:	4c 8b 12             	mov    (%rdx),%r10
    80cb:	48 8b 42 08          	mov    0x8(%rdx),%rax
    80cf:	49 01 fa             	add    %rdi,%r10
    80d2:	89 c1                	mov    %eax,%ecx
    80d4:	83 f8 12             	cmp    $0x12,%eax
    80d7:	0f 87 85 00 00 00    	ja     8162 <do_relocs+0xc2>
    80dd:	49 63 0c 88          	movslq (%r8,%rcx,4),%rcx
    80e1:	4c 01 c1             	add    %r8,%rcx
    80e4:	3e ff e1             	notrack jmp *%rcx
    80e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    80ee:	00 00 
    80f0:	48 c1 e8 20          	shr    $0x20,%rax
    80f4:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
    80f8:	49 8d 1c c3          	lea    (%r11,%rax,8),%rbx
    80fc:	0f b6 43 04          	movzbl 0x4(%rbx),%eax
    8100:	c0 e8 04             	shr    $0x4,%al
    8103:	3c 02                	cmp    $0x2,%al
    8105:	0f 84 05 01 00 00    	je     8210 <do_relocs+0x170>
    810b:	48 85 db             	test   %rbx,%rbx
    810e:	0f 84 8c 00 00 00    	je     81a0 <do_relocs+0x100>
    8114:	48 85 ff             	test   %rdi,%rdi
    8117:	74 49                	je     8162 <do_relocs+0xc2>
    8119:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    811f:	75 41                	jne    8162 <do_relocs+0xc2>
    8121:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    8126:	75 3a                	jne    8162 <do_relocs+0xc2>
    8128:	48 89 f8             	mov    %rdi,%rax
    812b:	48 03 47 20          	add    0x20(%rdi),%rax
    812f:	74 31                	je     8162 <do_relocs+0xc2>
    8131:	0f b7 6f 38          	movzwl 0x38(%rdi),%ebp
    8135:	66 85 ed             	test   %bp,%bp
    8138:	74 28                	je     8162 <do_relocs+0xc2>
    813a:	83 ed 01             	sub    $0x1,%ebp
    813d:	48 8d 0c ed 00 00 00 	lea    0x0(,%rbp,8),%rcx
    8144:	00 
    8145:	48 29 e9             	sub    %rbp,%rcx
    8148:	48 8d 4c c8 38       	lea    0x38(%rax,%rcx,8),%rcx
    814d:	0f 1f 00             	nopl   (%rax)
    8150:	83 38 07             	cmpl   $0x7,(%rax)
    8153:	0f 84 e7 00 00 00    	je     8240 <do_relocs+0x1a0>
    8159:	48 83 c0 38          	add    $0x38,%rax
    815d:	48 39 c8             	cmp    %rcx,%rax
    8160:	75 ee                	jne    8150 <do_relocs+0xb0>
    8162:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8167:	5b                   	pop    %rbx
    8168:	5d                   	pop    %rbp
    8169:	c3                   	ret    
    816a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8170:	48 c1 e8 20          	shr    $0x20,%rax
    8174:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
    8178:	49 8d 0c c3          	lea    (%r11,%rax,8),%rcx
    817c:	0f b6 41 04          	movzbl 0x4(%rcx),%eax
    8180:	c0 e8 04             	shr    $0x4,%al
    8183:	3c 02                	cmp    $0x2,%al
    8185:	0f 84 95 00 00 00    	je     8220 <do_relocs+0x180>
    818b:	48 85 c9             	test   %rcx,%rcx
    818e:	74 10                	je     81a0 <do_relocs+0x100>
    8190:	48 8b 42 10          	mov    0x10(%rdx),%rax
    8194:	48 01 f8             	add    %rdi,%rax
    8197:	48 03 41 08          	add    0x8(%rcx),%rax
    819b:	49 89 02             	mov    %rax,(%r10)
    819e:	66 90                	xchg   %ax,%ax
    81a0:	48 83 c6 01          	add    $0x1,%rsi
    81a4:	48 83 c2 18          	add    $0x18,%rdx
    81a8:	49 39 f1             	cmp    %rsi,%r9
    81ab:	0f 85 17 ff ff ff    	jne    80c8 <do_relocs+0x28>
    81b1:	31 c0                	xor    %eax,%eax
    81b3:	5b                   	pop    %rbx
    81b4:	5d                   	pop    %rbp
    81b5:	c3                   	ret    
    81b6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    81bd:	00 00 00 
    81c0:	48 c1 e8 20          	shr    $0x20,%rax
    81c4:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
    81c8:	49 8d 0c c3          	lea    (%r11,%rax,8),%rcx
    81cc:	0f b6 41 04          	movzbl 0x4(%rcx),%eax
    81d0:	c0 e8 04             	shr    $0x4,%al
    81d3:	3c 02                	cmp    $0x2,%al
    81d5:	74 59                	je     8230 <do_relocs+0x190>
    81d7:	48 85 c9             	test   %rcx,%rcx
    81da:	74 c4                	je     81a0 <do_relocs+0x100>
    81dc:	48 8b 42 10          	mov    0x10(%rdx),%rax
    81e0:	48 03 41 08          	add    0x8(%rcx),%rax
    81e4:	49 89 02             	mov    %rax,(%r10)
    81e7:	eb b7                	jmp    81a0 <do_relocs+0x100>
    81e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    81f0:	49 c7 02 01 00 00 00 	movq   $0x1,(%r10)
    81f7:	eb a7                	jmp    81a0 <do_relocs+0x100>
    81f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8200:	48 8b 42 10          	mov    0x10(%rdx),%rax
    8204:	48 01 f8             	add    %rdi,%rax
    8207:	49 89 02             	mov    %rax,(%r10)
    820a:	eb 94                	jmp    81a0 <do_relocs+0x100>
    820c:	0f 1f 40 00          	nopl   0x0(%rax)
    8210:	48 83 7b 08 00       	cmpq   $0x0,0x8(%rbx)
    8215:	0f 85 f0 fe ff ff    	jne    810b <do_relocs+0x6b>
    821b:	eb 83                	jmp    81a0 <do_relocs+0x100>
    821d:	0f 1f 00             	nopl   (%rax)
    8220:	48 83 79 08 00       	cmpq   $0x0,0x8(%rcx)
    8225:	0f 85 60 ff ff ff    	jne    818b <do_relocs+0xeb>
    822b:	e9 70 ff ff ff       	jmp    81a0 <do_relocs+0x100>
    8230:	48 83 79 08 00       	cmpq   $0x0,0x8(%rcx)
    8235:	75 a0                	jne    81d7 <do_relocs+0x137>
    8237:	e9 64 ff ff ff       	jmp    81a0 <do_relocs+0x100>
    823c:	0f 1f 40 00          	nopl   0x0(%rax)
    8240:	48 8b 48 28          	mov    0x28(%rax),%rcx
    8244:	48 8b 40 30          	mov    0x30(%rax),%rax
    8248:	48 83 f8 01          	cmp    $0x1,%rax
    824c:	76 0b                	jbe    8259 <do_relocs+0x1b9>
    824e:	48 8d 4c 01 ff       	lea    -0x1(%rcx,%rax,1),%rcx
    8253:	48 f7 d8             	neg    %rax
    8256:	48 21 c1             	and    %rax,%rcx
    8259:	48 85 c9             	test   %rcx,%rcx
    825c:	0f 84 00 ff ff ff    	je     8162 <do_relocs+0xc2>
    8262:	48 8b 42 10          	mov    0x10(%rdx),%rax
    8266:	48 03 43 08          	add    0x8(%rbx),%rax
    826a:	48 29 c8             	sub    %rcx,%rax
    826d:	49 89 02             	mov    %rax,(%r10)
    8270:	e9 2b ff ff ff       	jmp    81a0 <do_relocs+0x100>
    8275:	31 c0                	xor    %eax,%eax
    8277:	c3                   	ret    
    8278:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    827f:	00 

0000000000008280 <relocate_enclave>:
    8280:	f3 0f 1e fa          	endbr64 
    8284:	48 85 ff             	test   %rdi,%rdi
    8287:	0f 84 d3 01 00 00    	je     8460 <relocate_enclave+0x1e0>
    828d:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    8293:	0f 85 c7 01 00 00    	jne    8460 <relocate_enclave+0x1e0>
    8299:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    829e:	0f 85 bc 01 00 00    	jne    8460 <relocate_enclave+0x1e0>
    82a4:	41 57                	push   %r15
    82a6:	41 56                	push   %r14
    82a8:	41 55                	push   %r13
    82aa:	41 54                	push   %r12
    82ac:	55                   	push   %rbp
    82ad:	53                   	push   %rbx
    82ae:	48 89 fb             	mov    %rdi,%rbx
    82b1:	48 83 ec 08          	sub    $0x8,%rsp
    82b5:	48 03 5f 20          	add    0x20(%rdi),%rbx
    82b9:	0f 84 fd 00 00 00    	je     83bc <relocate_enclave+0x13c>
    82bf:	0f b7 57 38          	movzwl 0x38(%rdi),%edx
    82c3:	66 85 d2             	test   %dx,%dx
    82c6:	0f 84 c4 01 00 00    	je     8490 <relocate_enclave+0x210>
    82cc:	83 ea 01             	sub    $0x1,%edx
    82cf:	48 8d 2d 26 ae 00 00 	lea    0xae26(%rip),%rbp        # 130fc <g_dyn_entry_table+0xec>
    82d6:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax
    82dd:	00 
    82de:	48 29 d0             	sub    %rdx,%rax
    82e1:	4c 8d 64 c3 38       	lea    0x38(%rbx,%rax,8),%r12
    82e6:	eb 15                	jmp    82fd <relocate_enclave+0x7d>
    82e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    82ef:	00 
    82f0:	48 83 c3 38          	add    $0x38,%rbx
    82f4:	49 39 dc             	cmp    %rbx,%r12
    82f7:	0f 84 93 01 00 00    	je     8490 <relocate_enclave+0x210>
    82fd:	83 3b 02             	cmpl   $0x2,(%rbx)
    8300:	75 ee                	jne    82f0 <relocate_enclave+0x70>
    8302:	48 8b 53 18          	mov    0x18(%rbx),%rdx
    8306:	4c 8b 53 20          	mov    0x20(%rbx),%r10
    830a:	48 01 fa             	add    %rdi,%rdx
    830d:	49 c1 ea 04          	shr    $0x4,%r10
    8311:	74 dd                	je     82f0 <relocate_enclave+0x70>
    8313:	49 c1 e2 04          	shl    $0x4,%r10
    8317:	45 31 f6             	xor    %r14d,%r14d
    831a:	45 31 ed             	xor    %r13d,%r13d
    831d:	31 c0                	xor    %eax,%eax
    831f:	49 01 d2             	add    %rdx,%r10
    8322:	45 31 ff             	xor    %r15d,%r15d
    8325:	45 31 c9             	xor    %r9d,%r9d
    8328:	45 31 c0             	xor    %r8d,%r8d
    832b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8330:	48 8b 32             	mov    (%rdx),%rsi
    8333:	48 85 f6             	test   %rsi,%rsi
    8336:	74 30                	je     8368 <relocate_enclave+0xe8>
    8338:	48 83 fe 17          	cmp    $0x17,%rsi
    833c:	77 1a                	ja     8358 <relocate_enclave+0xd8>
    833e:	48 63 74 b5 00       	movslq 0x0(%rbp,%rsi,4),%rsi
    8343:	48 01 ee             	add    %rbp,%rsi
    8346:	3e ff e6             	notrack jmp *%rsi
    8349:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8350:	4c 8b 42 08          	mov    0x8(%rdx),%r8
    8354:	0f 1f 40 00          	nopl   0x0(%rax)
    8358:	48 83 c2 10          	add    $0x10,%rdx
    835c:	49 39 d2             	cmp    %rdx,%r10
    835f:	75 cf                	jne    8330 <relocate_enclave+0xb0>
    8361:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8368:	4d 85 c9             	test   %r9,%r9
    836b:	0f 84 ff 00 00 00    	je     8470 <relocate_enclave+0x1f0>
    8371:	4d 85 ed             	test   %r13,%r13
    8374:	74 46                	je     83bc <relocate_enclave+0x13c>
    8376:	31 d2                	xor    %edx,%edx
    8378:	4c 89 ce             	mov    %r9,%rsi
    837b:	4c 89 04 24          	mov    %r8,(%rsp)
    837f:	49 f7 f5             	div    %r13
    8382:	4c 89 c2             	mov    %r8,%rdx
    8385:	48 89 c1             	mov    %rax,%rcx
    8388:	e8 13 fd ff ff       	call   80a0 <do_relocs>
    838d:	85 c0                	test   %eax,%eax
    838f:	75 2b                	jne    83bc <relocate_enclave+0x13c>
    8391:	4d 85 ff             	test   %r15,%r15
    8394:	4c 8b 04 24          	mov    (%rsp),%r8
    8398:	0f 84 52 ff ff ff    	je     82f0 <relocate_enclave+0x70>
    839e:	31 d2                	xor    %edx,%edx
    83a0:	4c 89 f0             	mov    %r14,%rax
    83a3:	4c 89 fe             	mov    %r15,%rsi
    83a6:	49 f7 f5             	div    %r13
    83a9:	4c 89 c2             	mov    %r8,%rdx
    83ac:	48 89 c1             	mov    %rax,%rcx
    83af:	e8 ec fc ff ff       	call   80a0 <do_relocs>
    83b4:	85 c0                	test   %eax,%eax
    83b6:	0f 84 34 ff ff ff    	je     82f0 <relocate_enclave+0x70>
    83bc:	48 83 c4 08          	add    $0x8,%rsp
    83c0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    83c5:	5b                   	pop    %rbx
    83c6:	5d                   	pop    %rbp
    83c7:	41 5c                	pop    %r12
    83c9:	41 5d                	pop    %r13
    83cb:	41 5e                	pop    %r14
    83cd:	41 5f                	pop    %r15
    83cf:	c3                   	ret    
    83d0:	4c 8b 7a 08          	mov    0x8(%rdx),%r15
    83d4:	48 83 c2 10          	add    $0x10,%rdx
    83d8:	49 39 d2             	cmp    %rdx,%r10
    83db:	0f 85 4f ff ff ff    	jne    8330 <relocate_enclave+0xb0>
    83e1:	eb 85                	jmp    8368 <relocate_enclave+0xe8>
    83e3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    83e8:	48 8b 42 08          	mov    0x8(%rdx),%rax
    83ec:	48 83 c2 10          	add    $0x10,%rdx
    83f0:	49 39 d2             	cmp    %rdx,%r10
    83f3:	0f 85 37 ff ff ff    	jne    8330 <relocate_enclave+0xb0>
    83f9:	e9 6a ff ff ff       	jmp    8368 <relocate_enclave+0xe8>
    83fe:	66 90                	xchg   %ax,%ax
    8400:	4c 8b 4a 08          	mov    0x8(%rdx),%r9
    8404:	48 83 c2 10          	add    $0x10,%rdx
    8408:	49 39 d2             	cmp    %rdx,%r10
    840b:	0f 85 1f ff ff ff    	jne    8330 <relocate_enclave+0xb0>
    8411:	e9 52 ff ff ff       	jmp    8368 <relocate_enclave+0xe8>
    8416:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    841d:	00 00 00 
    8420:	4c 8b 72 08          	mov    0x8(%rdx),%r14
    8424:	48 83 c2 10          	add    $0x10,%rdx
    8428:	49 39 d2             	cmp    %rdx,%r10
    842b:	0f 85 ff fe ff ff    	jne    8330 <relocate_enclave+0xb0>
    8431:	e9 32 ff ff ff       	jmp    8368 <relocate_enclave+0xe8>
    8436:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    843d:	00 00 00 
    8440:	4c 8b 6a 08          	mov    0x8(%rdx),%r13
    8444:	48 83 c2 10          	add    $0x10,%rdx
    8448:	49 39 d2             	cmp    %rdx,%r10
    844b:	0f 85 df fe ff ff    	jne    8330 <relocate_enclave+0xb0>
    8451:	e9 12 ff ff ff       	jmp    8368 <relocate_enclave+0xe8>
    8456:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    845d:	00 00 00 
    8460:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8465:	c3                   	ret    
    8466:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    846d:	00 00 00 
    8470:	4d 85 ff             	test   %r15,%r15
    8473:	0f 84 77 fe ff ff    	je     82f0 <relocate_enclave+0x70>
    8479:	4d 85 ed             	test   %r13,%r13
    847c:	0f 84 3a ff ff ff    	je     83bc <relocate_enclave+0x13c>
    8482:	e9 17 ff ff ff       	jmp    839e <relocate_enclave+0x11e>
    8487:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    848e:	00 00 
    8490:	48 83 c4 08          	add    $0x8,%rsp
    8494:	31 c0                	xor    %eax,%eax
    8496:	5b                   	pop    %rbx
    8497:	5d                   	pop    %rbp
    8498:	41 5c                	pop    %r12
    849a:	41 5d                	pop    %r13
    849c:	41 5e                	pop    %r14
    849e:	41 5f                	pop    %r15
    84a0:	c3                   	ret    
    84a1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    84a8:	00 00 00 
    84ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000084b0 <elf_tls_info>:
    84b0:	f3 0f 1e fa          	endbr64 
    84b4:	49 89 f0             	mov    %rsi,%r8
    84b7:	48 89 f9             	mov    %rdi,%rcx
    84ba:	48 89 d6             	mov    %rdx,%rsi
    84bd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    84c2:	48 85 ff             	test   %rdi,%rdi
    84c5:	74 7e                	je     8545 <elf_tls_info+0x95>
    84c7:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    84cd:	75 75                	jne    8544 <elf_tls_info+0x94>
    84cf:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    84d4:	75 6e                	jne    8544 <elf_tls_info+0x94>
    84d6:	48 8b 47 20          	mov    0x20(%rdi),%rax
    84da:	48 01 f8             	add    %rdi,%rax
    84dd:	4d 85 c0             	test   %r8,%r8
    84e0:	0f 94 c2             	sete   %dl
    84e3:	48 85 f6             	test   %rsi,%rsi
    84e6:	40 0f 94 c7          	sete   %dil
    84ea:	40 08 fa             	or     %dil,%dl
    84ed:	75 50                	jne    853f <elf_tls_info+0x8f>
    84ef:	48 85 c0             	test   %rax,%rax
    84f2:	74 4b                	je     853f <elf_tls_info+0x8f>
    84f4:	0f b7 79 38          	movzwl 0x38(%rcx),%edi
    84f8:	49 c7 00 00 00 00 00 	movq   $0x0,(%r8)
    84ff:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
    8506:	66 85 ff             	test   %di,%di
    8509:	74 31                	je     853c <elf_tls_info+0x8c>
    850b:	83 ef 01             	sub    $0x1,%edi
    850e:	48 8d 14 fd 00 00 00 	lea    0x0(,%rdi,8),%rdx
    8515:	00 
    8516:	48 29 fa             	sub    %rdi,%rdx
    8519:	48 8d 54 d0 38       	lea    0x38(%rax,%rdx,8),%rdx
    851e:	eb 09                	jmp    8529 <elf_tls_info+0x79>
    8520:	48 83 c0 38          	add    $0x38,%rax
    8524:	48 39 d0             	cmp    %rdx,%rax
    8527:	74 13                	je     853c <elf_tls_info+0x8c>
    8529:	83 38 07             	cmpl   $0x7,(%rax)
    852c:	75 f2                	jne    8520 <elf_tls_info+0x70>
    852e:	48 03 48 10          	add    0x10(%rax),%rcx
    8532:	49 89 08             	mov    %rcx,(%r8)
    8535:	48 8b 40 20          	mov    0x20(%rax),%rax
    8539:	48 89 06             	mov    %rax,(%rsi)
    853c:	31 c0                	xor    %eax,%eax
    853e:	c3                   	ret    
    853f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8544:	c3                   	ret    
    8545:	c3                   	ret    
    8546:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    854d:	00 00 00 

0000000000008550 <elf_get_init_array>:
    8550:	f3 0f 1e fa          	endbr64 
    8554:	49 89 f8             	mov    %rdi,%r8
    8557:	49 89 f1             	mov    %rsi,%r9
    855a:	49 89 d2             	mov    %rdx,%r10
    855d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8562:	48 85 ff             	test   %rdi,%rdi
    8565:	0f 84 c8 00 00 00    	je     8633 <elf_get_init_array+0xe3>
    856b:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    8571:	0f 85 b6 00 00 00    	jne    862d <elf_get_init_array+0xdd>
    8577:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    857c:	0f 85 ab 00 00 00    	jne    862d <elf_get_init_array+0xdd>
    8582:	48 8b 57 20          	mov    0x20(%rdi),%rdx
    8586:	48 01 fa             	add    %rdi,%rdx
    8589:	48 85 f6             	test   %rsi,%rsi
    858c:	0f 94 c0             	sete   %al
    858f:	4d 85 d2             	test   %r10,%r10
    8592:	0f 94 c1             	sete   %cl
    8595:	08 c8                	or     %cl,%al
    8597:	0f 85 8b 00 00 00    	jne    8628 <elf_get_init_array+0xd8>
    859d:	48 85 d2             	test   %rdx,%rdx
    85a0:	0f 84 82 00 00 00    	je     8628 <elf_get_init_array+0xd8>
    85a6:	0f b7 4f 38          	movzwl 0x38(%rdi),%ecx
    85aa:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
    85b1:	49 c7 02 00 00 00 00 	movq   $0x0,(%r10)
    85b8:	66 85 c9             	test   %cx,%cx
    85bb:	74 73                	je     8630 <elf_get_init_array+0xe0>
    85bd:	83 e9 01             	sub    $0x1,%ecx
    85c0:	48 8d 04 cd 00 00 00 	lea    0x0(,%rcx,8),%rax
    85c7:	00 
    85c8:	48 29 c8             	sub    %rcx,%rax
    85cb:	48 8d 7c c2 38       	lea    0x38(%rdx,%rax,8),%rdi
    85d0:	eb 0f                	jmp    85e1 <elf_get_init_array+0x91>
    85d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    85d8:	48 83 c2 38          	add    $0x38,%rdx
    85dc:	48 39 fa             	cmp    %rdi,%rdx
    85df:	74 4f                	je     8630 <elf_get_init_array+0xe0>
    85e1:	83 3a 02             	cmpl   $0x2,(%rdx)
    85e4:	75 f2                	jne    85d8 <elf_get_init_array+0x88>
    85e6:	48 8b 42 18          	mov    0x18(%rdx),%rax
    85ea:	48 8b 72 20          	mov    0x20(%rdx),%rsi
    85ee:	4c 01 c0             	add    %r8,%rax
    85f1:	48 c1 ee 04          	shr    $0x4,%rsi
    85f5:	74 e1                	je     85d8 <elf_get_init_array+0x88>
    85f7:	48 c1 e6 04          	shl    $0x4,%rsi
    85fb:	48 01 c6             	add    %rax,%rsi
    85fe:	eb 16                	jmp    8616 <elf_get_init_array+0xc6>
    8600:	48 83 f9 1b          	cmp    $0x1b,%rcx
    8604:	75 07                	jne    860d <elf_get_init_array+0xbd>
    8606:	48 8b 48 08          	mov    0x8(%rax),%rcx
    860a:	49 89 0a             	mov    %rcx,(%r10)
    860d:	48 83 c0 10          	add    $0x10,%rax
    8611:	48 39 c6             	cmp    %rax,%rsi
    8614:	74 c2                	je     85d8 <elf_get_init_array+0x88>
    8616:	48 8b 08             	mov    (%rax),%rcx
    8619:	48 83 f9 19          	cmp    $0x19,%rcx
    861d:	75 e1                	jne    8600 <elf_get_init_array+0xb0>
    861f:	48 8b 48 08          	mov    0x8(%rax),%rcx
    8623:	49 89 09             	mov    %rcx,(%r9)
    8626:	eb e5                	jmp    860d <elf_get_init_array+0xbd>
    8628:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    862d:	c3                   	ret    
    862e:	66 90                	xchg   %ax,%ax
    8630:	31 c0                	xor    %eax,%eax
    8632:	c3                   	ret    
    8633:	c3                   	ret    
    8634:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    863b:	00 00 00 
    863e:	66 90                	xchg   %ax,%ax

0000000000008640 <elf_get_uninit_array>:
    8640:	f3 0f 1e fa          	endbr64 
    8644:	49 89 f8             	mov    %rdi,%r8
    8647:	49 89 f1             	mov    %rsi,%r9
    864a:	49 89 d2             	mov    %rdx,%r10
    864d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8652:	48 85 ff             	test   %rdi,%rdi
    8655:	0f 84 c8 00 00 00    	je     8723 <elf_get_uninit_array+0xe3>
    865b:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    8661:	0f 85 b6 00 00 00    	jne    871d <elf_get_uninit_array+0xdd>
    8667:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    866c:	0f 85 ab 00 00 00    	jne    871d <elf_get_uninit_array+0xdd>
    8672:	48 8b 57 20          	mov    0x20(%rdi),%rdx
    8676:	48 01 fa             	add    %rdi,%rdx
    8679:	48 85 f6             	test   %rsi,%rsi
    867c:	0f 94 c0             	sete   %al
    867f:	4d 85 d2             	test   %r10,%r10
    8682:	0f 94 c1             	sete   %cl
    8685:	08 c8                	or     %cl,%al
    8687:	0f 85 8b 00 00 00    	jne    8718 <elf_get_uninit_array+0xd8>
    868d:	48 85 d2             	test   %rdx,%rdx
    8690:	0f 84 82 00 00 00    	je     8718 <elf_get_uninit_array+0xd8>
    8696:	0f b7 4f 38          	movzwl 0x38(%rdi),%ecx
    869a:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
    86a1:	49 c7 02 00 00 00 00 	movq   $0x0,(%r10)
    86a8:	66 85 c9             	test   %cx,%cx
    86ab:	74 73                	je     8720 <elf_get_uninit_array+0xe0>
    86ad:	83 e9 01             	sub    $0x1,%ecx
    86b0:	48 8d 04 cd 00 00 00 	lea    0x0(,%rcx,8),%rax
    86b7:	00 
    86b8:	48 29 c8             	sub    %rcx,%rax
    86bb:	48 8d 7c c2 38       	lea    0x38(%rdx,%rax,8),%rdi
    86c0:	eb 0f                	jmp    86d1 <elf_get_uninit_array+0x91>
    86c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    86c8:	48 83 c2 38          	add    $0x38,%rdx
    86cc:	48 39 fa             	cmp    %rdi,%rdx
    86cf:	74 4f                	je     8720 <elf_get_uninit_array+0xe0>
    86d1:	83 3a 02             	cmpl   $0x2,(%rdx)
    86d4:	75 f2                	jne    86c8 <elf_get_uninit_array+0x88>
    86d6:	48 8b 42 18          	mov    0x18(%rdx),%rax
    86da:	48 8b 72 20          	mov    0x20(%rdx),%rsi
    86de:	4c 01 c0             	add    %r8,%rax
    86e1:	48 c1 ee 04          	shr    $0x4,%rsi
    86e5:	74 e1                	je     86c8 <elf_get_uninit_array+0x88>
    86e7:	48 c1 e6 04          	shl    $0x4,%rsi
    86eb:	48 01 c6             	add    %rax,%rsi
    86ee:	eb 16                	jmp    8706 <elf_get_uninit_array+0xc6>
    86f0:	48 83 f9 1c          	cmp    $0x1c,%rcx
    86f4:	75 07                	jne    86fd <elf_get_uninit_array+0xbd>
    86f6:	48 8b 48 08          	mov    0x8(%rax),%rcx
    86fa:	49 89 0a             	mov    %rcx,(%r10)
    86fd:	48 83 c0 10          	add    $0x10,%rax
    8701:	48 39 c6             	cmp    %rax,%rsi
    8704:	74 c2                	je     86c8 <elf_get_uninit_array+0x88>
    8706:	48 8b 08             	mov    (%rax),%rcx
    8709:	48 83 f9 1a          	cmp    $0x1a,%rcx
    870d:	75 e1                	jne    86f0 <elf_get_uninit_array+0xb0>
    870f:	48 8b 48 08          	mov    0x8(%rax),%rcx
    8713:	49 89 09             	mov    %rcx,(%r9)
    8716:	eb e5                	jmp    86fd <elf_get_uninit_array+0xbd>
    8718:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    871d:	c3                   	ret    
    871e:	66 90                	xchg   %ax,%ax
    8720:	31 c0                	xor    %eax,%eax
    8722:	c3                   	ret    
    8723:	c3                   	ret    
    8724:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    872b:	00 00 00 
    872e:	66 90                	xchg   %ax,%ax

0000000000008730 <change_protection>:
    8730:	f3 0f 1e fa          	endbr64 
    8734:	48 85 ff             	test   %rdi,%rdi
    8737:	0f 84 be 01 00 00    	je     88fb <change_protection+0x1cb>
    873d:	41 56                	push   %r14
    873f:	41 55                	push   %r13
    8741:	49 89 fd             	mov    %rdi,%r13
    8744:	41 54                	push   %r12
    8746:	55                   	push   %rbp
    8747:	53                   	push   %rbx
    8748:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    874e:	0f 85 bc 00 00 00    	jne    8810 <change_protection+0xe0>
    8754:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    8759:	0f 85 b1 00 00 00    	jne    8810 <change_protection+0xe0>
    875f:	48 89 fb             	mov    %rdi,%rbx
    8762:	48 03 5f 20          	add    0x20(%rdi),%rbx
    8766:	0f 84 a4 00 00 00    	je     8810 <change_protection+0xe0>
    876c:	0f b7 57 38          	movzwl 0x38(%rdi),%edx
    8770:	48 89 de             	mov    %rbx,%rsi
    8773:	89 d1                	mov    %edx,%ecx
    8775:	e8 b6 f8 ff ff       	call   8030 <has_text_relo>
    877a:	41 89 c6             	mov    %eax,%r14d
    877d:	66 85 c9             	test   %cx,%cx
    8780:	0f 84 ea 00 00 00    	je     8870 <change_protection+0x140>
    8786:	49 bc ff ff ff ff 02 	movabs $0x2ffffffff,%r12
    878d:	00 00 00 
    8790:	31 ed                	xor    %ebp,%ebp
    8792:	eb 18                	jmp    87ac <change_protection+0x7c>
    8794:	0f 1f 40 00          	nopl   0x0(%rax)
    8798:	41 0f b7 45 38       	movzwl 0x38(%r13),%eax
    879d:	83 c5 01             	add    $0x1,%ebp
    87a0:	48 83 c3 38          	add    $0x38,%rbx
    87a4:	39 c5                	cmp    %eax,%ebp
    87a6:	0f 83 c4 00 00 00    	jae    8870 <change_protection+0x140>
    87ac:	45 85 f6             	test   %r14d,%r14d
    87af:	74 0c                	je     87bd <change_protection+0x8d>
    87b1:	48 8b 03             	mov    (%rbx),%rax
    87b4:	4c 21 e0             	and    %r12,%rax
    87b7:	48 83 f8 01          	cmp    $0x1,%rax
    87bb:	74 63                	je     8820 <change_protection+0xf0>
    87bd:	81 3b 52 e5 74 64    	cmpl   $0x6474e552,(%rbx)
    87c3:	75 d3                	jne    8798 <change_protection+0x68>
    87c5:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    87c9:	48 8b 73 28          	mov    0x28(%rbx),%rsi
    87cd:	48 01 fe             	add    %rdi,%rsi
    87d0:	48 89 f8             	mov    %rdi,%rax
    87d3:	48 81 c6 ff 0f 00 00 	add    $0xfff,%rsi
    87da:	48 31 f0             	xor    %rsi,%rax
    87dd:	48 3d ff 0f 00 00    	cmp    $0xfff,%rax
    87e3:	76 b3                	jbe    8798 <change_protection+0x68>
    87e5:	48 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%rdi
    87ec:	48 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%rsi
    87f3:	ba 01 00 00 00       	mov    $0x1,%edx
    87f8:	48 29 fe             	sub    %rdi,%rsi
    87fb:	4c 01 ef             	add    %r13,%rdi
    87fe:	e8 9d 30 00 00       	call   b8a0 <mm_modify_permissions>
    8803:	85 c0                	test   %eax,%eax
    8805:	74 91                	je     8798 <change_protection+0x68>
    8807:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    880e:	00 00 
    8810:	b8 01 00 00 00       	mov    $0x1,%eax
    8815:	5b                   	pop    %rbx
    8816:	5d                   	pop    %rbp
    8817:	41 5c                	pop    %r12
    8819:	41 5d                	pop    %r13
    881b:	41 5e                	pop    %r14
    881d:	c3                   	ret    
    881e:	66 90                	xchg   %ax,%ax
    8820:	48 8b 43 10          	mov    0x10(%rbx),%rax
    8824:	8b 4b 04             	mov    0x4(%rbx),%ecx
    8827:	48 89 c7             	mov    %rax,%rdi
    882a:	89 ca                	mov    %ecx,%edx
    882c:	48 03 43 28          	add    0x28(%rbx),%rax
    8830:	c1 e9 02             	shr    $0x2,%ecx
    8833:	83 e2 01             	and    $0x1,%edx
    8836:	48 8d b0 ff 0f 00 00 	lea    0xfff(%rax),%rsi
    883d:	48 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%rdi
    8844:	83 e1 01             	and    $0x1,%ecx
    8847:	48 c1 e2 02          	shl    $0x2,%rdx
    884b:	48 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%rsi
    8852:	48 29 fe             	sub    %rdi,%rsi
    8855:	09 ca                	or     %ecx,%edx
    8857:	4c 01 ef             	add    %r13,%rdi
    885a:	e8 41 30 00 00       	call   b8a0 <mm_modify_permissions>
    885f:	85 c0                	test   %eax,%eax
    8861:	0f 84 56 ff ff ff    	je     87bd <change_protection+0x8d>
    8867:	eb a7                	jmp    8810 <change_protection+0xe0>
    8869:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8870:	8b 05 62 aa 00 00    	mov    0xaa62(%rip),%eax        # 132d8 <g_global_data+0x158>
    8876:	85 c0                	test   %eax,%eax
    8878:	74 9b                	je     8815 <change_protection+0xe5>
    887a:	31 d2                	xor    %edx,%edx
    887c:	48 8d 3d fd a8 00 00 	lea    0xa8fd(%rip),%rdi        # 13180 <g_global_data>
    8883:	eb 10                	jmp    8895 <change_protection+0x165>
    8885:	0f 1f 00             	nopl   (%rax)
    8888:	8b 05 4a aa 00 00    	mov    0xaa4a(%rip),%eax        # 132d8 <g_global_data+0x158>
    888e:	83 c2 01             	add    $0x1,%edx
    8891:	39 c2                	cmp    %eax,%edx
    8893:	73 5b                	jae    88f0 <change_protection+0x1c0>
    8895:	89 d1                	mov    %edx,%ecx
    8897:	48 8d 41 0b          	lea    0xb(%rcx),%rax
    889b:	48 c1 e0 05          	shl    $0x5,%rax
    889f:	48 01 f8             	add    %rdi,%rax
    88a2:	0f b7 30             	movzwl (%rax),%esi
    88a5:	66 83 fe 14          	cmp    $0x14,%si
    88a9:	75 dd                	jne    8888 <change_protection+0x158>
    88ab:	48 c1 e1 05          	shl    $0x5,%rcx
    88af:	48 01 f9             	add    %rdi,%rcx
    88b2:	48 8b 89 78 01 00 00 	mov    0x178(%rcx),%rcx
    88b9:	48 81 f9 07 02 00 00 	cmp    $0x207,%rcx
    88c0:	75 c6                	jne    8888 <change_protection+0x158>
    88c2:	8b 48 04             	mov    0x4(%rax),%ecx
    88c5:	85 c9                	test   %ecx,%ecx
    88c7:	74 bf                	je     8888 <change_protection+0x158>
    88c9:	8b 70 04             	mov    0x4(%rax),%esi
    88cc:	48 8b 40 08          	mov    0x8(%rax),%rax
    88d0:	ba 03 00 00 00       	mov    $0x3,%edx
    88d5:	48 c1 e6 0c          	shl    $0xc,%rsi
    88d9:	49 8d 7c 05 00       	lea    0x0(%r13,%rax,1),%rdi
    88de:	e8 bd 2f 00 00       	call   b8a0 <mm_modify_permissions>
    88e3:	85 c0                	test   %eax,%eax
    88e5:	0f 95 c0             	setne  %al
    88e8:	0f b6 c0             	movzbl %al,%eax
    88eb:	e9 25 ff ff ff       	jmp    8815 <change_protection+0xe5>
    88f0:	5b                   	pop    %rbx
    88f1:	31 c0                	xor    %eax,%eax
    88f3:	5d                   	pop    %rbp
    88f4:	41 5c                	pop    %r12
    88f6:	41 5d                	pop    %r13
    88f8:	41 5e                	pop    %r14
    88fa:	c3                   	ret    
    88fb:	b8 01 00 00 00       	mov    $0x1,%eax
    8900:	c3                   	ret    
    8901:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8908:	00 00 00 
    890b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000008910 <init_segment_emas>:
    8910:	f3 0f 1e fa          	endbr64 
    8914:	48 85 ff             	test   %rdi,%rdi
    8917:	0f 84 e8 00 00 00    	je     8a05 <init_segment_emas+0xf5>
    891d:	41 55                	push   %r13
    891f:	49 89 fd             	mov    %rdi,%r13
    8922:	41 54                	push   %r12
    8924:	55                   	push   %rbp
    8925:	53                   	push   %rbx
    8926:	48 83 ec 08          	sub    $0x8,%rsp
    892a:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    8930:	0f 85 ae 00 00 00    	jne    89e4 <init_segment_emas+0xd4>
    8936:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    893b:	0f 85 a3 00 00 00    	jne    89e4 <init_segment_emas+0xd4>
    8941:	48 89 fb             	mov    %rdi,%rbx
    8944:	48 03 5f 20          	add    0x20(%rdi),%rbx
    8948:	0f 84 96 00 00 00    	je     89e4 <init_segment_emas+0xd4>
    894e:	0f b7 57 38          	movzwl 0x38(%rdi),%edx
    8952:	48 89 de             	mov    %rbx,%rsi
    8955:	45 31 e4             	xor    %r12d,%r12d
    8958:	89 d1                	mov    %edx,%ecx
    895a:	e8 d1 f6 ff ff       	call   8030 <has_text_relo>
    895f:	89 c5                	mov    %eax,%ebp
    8961:	66 85 c9             	test   %cx,%cx
    8964:	75 1c                	jne    8982 <init_segment_emas+0x72>
    8966:	e9 8d 00 00 00       	jmp    89f8 <init_segment_emas+0xe8>
    896b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8970:	41 0f b7 45 38       	movzwl 0x38(%r13),%eax
    8975:	41 83 c4 01          	add    $0x1,%r12d
    8979:	48 83 c3 38          	add    $0x38,%rbx
    897d:	41 39 c4             	cmp    %eax,%r12d
    8980:	73 76                	jae    89f8 <init_segment_emas+0xe8>
    8982:	83 3b 01             	cmpl   $0x1,(%rbx)
    8985:	75 e9                	jne    8970 <init_segment_emas+0x60>
    8987:	8b 4b 04             	mov    0x4(%rbx),%ecx
    898a:	48 8b 73 10          	mov    0x10(%rbx),%rsi
    898e:	89 c8                	mov    %ecx,%eax
    8990:	48 89 f2             	mov    %rsi,%rdx
    8993:	48 03 73 28          	add    0x28(%rbx),%rsi
    8997:	83 e0 02             	and    $0x2,%eax
    899a:	48 81 c6 ff 0f 00 00 	add    $0xfff,%rsi
    89a1:	48 81 e2 00 f0 ff ff 	and    $0xfffffffffffff000,%rdx
    89a8:	09 e8                	or     %ebp,%eax
    89aa:	48 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%rsi
    89b1:	49 8d 7c 15 00       	lea    0x0(%r13,%rdx,1),%rdi
    89b6:	83 f8 01             	cmp    $0x1,%eax
    89b9:	48 19 c0             	sbb    %rax,%rax
    89bc:	83 e1 01             	and    $0x1,%ecx
    89bf:	48 29 d6             	sub    %rdx,%rsi
    89c2:	45 31 c9             	xor    %r9d,%r9d
    89c5:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    89c9:	48 c1 e1 02          	shl    $0x2,%rcx
    89cd:	45 31 c0             	xor    %r8d,%r8d
    89d0:	ba 80 02 00 00       	mov    $0x280,%edx
    89d5:	48 83 c0 03          	add    $0x3,%rax
    89d9:	09 c1                	or     %eax,%ecx
    89db:	e8 50 2d 00 00       	call   b730 <mm_init_ema>
    89e0:	85 c0                	test   %eax,%eax
    89e2:	74 8c                	je     8970 <init_segment_emas+0x60>
    89e4:	48 83 c4 08          	add    $0x8,%rsp
    89e8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    89ed:	5b                   	pop    %rbx
    89ee:	5d                   	pop    %rbp
    89ef:	41 5c                	pop    %r12
    89f1:	41 5d                	pop    %r13
    89f3:	c3                   	ret    
    89f4:	0f 1f 40 00          	nopl   0x0(%rax)
    89f8:	48 83 c4 08          	add    $0x8,%rsp
    89fc:	31 c0                	xor    %eax,%eax
    89fe:	5b                   	pop    %rbx
    89ff:	5d                   	pop    %rbp
    8a00:	41 5c                	pop    %r12
    8a02:	41 5d                	pop    %r13
    8a04:	c3                   	ret    
    8a05:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8a0a:	c3                   	ret    
    8a0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000008a10 <__cxa_atexit>:
    8a10:	f3 0f 1e fa          	endbr64 
    8a14:	41 55                	push   %r13
    8a16:	49 89 d5             	mov    %rdx,%r13
    8a19:	41 54                	push   %r12
    8a1b:	49 89 f4             	mov    %rsi,%r12
    8a1e:	55                   	push   %rbp
    8a1f:	48 89 fd             	mov    %rdi,%rbp
    8a22:	53                   	push   %rbx
    8a23:	48 83 ec 18          	sub    $0x18,%rsp
    8a27:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    8a2e:	00 00 
    8a30:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    8a35:	31 c0                	xor    %eax,%eax
    8a37:	48 83 3d 61 17 01 00 	cmpq   $0x0,0x11761(%rip)        # 1a1a0 <g_exit_function_cookie>
    8a3e:	00 
    8a3f:	0f 84 8b 00 00 00    	je     8ad0 <__cxa_atexit+0xc0>
    8a45:	31 f6                	xor    %esi,%esi
    8a47:	48 89 ef             	mov    %rbp,%rdi
    8a4a:	e8 f1 cf ff ff       	call   5a40 <sgx_is_within_enclave>
    8a4f:	85 c0                	test   %eax,%eax
    8a51:	0f 84 a1 00 00 00    	je     8af8 <__cxa_atexit+0xe8>
    8a57:	bf 20 00 00 00       	mov    $0x20,%edi
    8a5c:	e8 5f 45 00 00       	call   cfc0 <dlmalloc>
    8a61:	48 89 c3             	mov    %rax,%rbx
    8a64:	48 85 c0             	test   %rax,%rax
    8a67:	0f 84 8b 00 00 00    	je     8af8 <__cxa_atexit+0xe8>
    8a6d:	48 8b 05 2c 17 01 00 	mov    0x1172c(%rip),%rax        # 1a1a0 <g_exit_function_cookie>
    8a74:	4c 89 6b 10          	mov    %r13,0x10(%rbx)
    8a78:	48 31 c5             	xor    %rax,%rbp
    8a7b:	49 31 c4             	xor    %rax,%r12
    8a7e:	48 89 2b             	mov    %rbp,(%rbx)
    8a81:	48 8d 2d 20 17 01 00 	lea    0x11720(%rip),%rbp        # 1a1a8 <g_exit_function_lock>
    8a88:	4c 89 63 08          	mov    %r12,0x8(%rbx)
    8a8c:	48 89 ef             	mov    %rbp,%rdi
    8a8f:	e8 6c 3b 00 00       	call   c600 <sgx_spin_lock>
    8a94:	48 8b 05 15 17 01 00 	mov    0x11715(%rip),%rax        # 1a1b0 <g_exit_function>
    8a9b:	48 89 ef             	mov    %rbp,%rdi
    8a9e:	48 89 1d 0b 17 01 00 	mov    %rbx,0x1170b(%rip)        # 1a1b0 <g_exit_function>
    8aa5:	48 89 43 18          	mov    %rax,0x18(%rbx)
    8aa9:	e8 e2 3b 00 00       	call   c690 <sgx_spin_unlock>
    8aae:	31 c0                	xor    %eax,%eax
    8ab0:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    8ab5:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    8abc:	00 00 
    8abe:	75 71                	jne    8b31 <__cxa_atexit+0x121>
    8ac0:	48 83 c4 18          	add    $0x18,%rsp
    8ac4:	5b                   	pop    %rbx
    8ac5:	5d                   	pop    %rbp
    8ac6:	41 5c                	pop    %r12
    8ac8:	41 5d                	pop    %r13
    8aca:	c3                   	ret    
    8acb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8ad0:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    8ad7:	00 
    8ad8:	48 89 e3             	mov    %rsp,%rbx
    8adb:	eb 0a                	jmp    8ae7 <__cxa_atexit+0xd7>
    8add:	0f 1f 00             	nopl   (%rax)
    8ae0:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
    8ae5:	75 19                	jne    8b00 <__cxa_atexit+0xf0>
    8ae7:	be 08 00 00 00       	mov    $0x8,%esi
    8aec:	48 89 df             	mov    %rbx,%rdi
    8aef:	e8 4c d1 ff ff       	call   5c40 <sgx_read_rand>
    8af4:	85 c0                	test   %eax,%eax
    8af6:	74 e8                	je     8ae0 <__cxa_atexit+0xd0>
    8af8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8afd:	eb b1                	jmp    8ab0 <__cxa_atexit+0xa0>
    8aff:	90                   	nop
    8b00:	48 8d 1d a1 16 01 00 	lea    0x116a1(%rip),%rbx        # 1a1a8 <g_exit_function_lock>
    8b07:	48 89 df             	mov    %rbx,%rdi
    8b0a:	e8 f1 3a 00 00       	call   c600 <sgx_spin_lock>
    8b0f:	48 83 3d 89 16 01 00 	cmpq   $0x0,0x11689(%rip)        # 1a1a0 <g_exit_function_cookie>
    8b16:	00 
    8b17:	75 0b                	jne    8b24 <__cxa_atexit+0x114>
    8b19:	48 8b 04 24          	mov    (%rsp),%rax
    8b1d:	48 89 05 7c 16 01 00 	mov    %rax,0x1167c(%rip)        # 1a1a0 <g_exit_function_cookie>
    8b24:	48 89 df             	mov    %rbx,%rdi
    8b27:	e8 64 3b 00 00       	call   c690 <sgx_spin_unlock>
    8b2c:	e9 14 ff ff ff       	jmp    8a45 <__cxa_atexit+0x35>
    8b31:	e8 3a 7d 00 00       	call   10870 <__stack_chk_fail>
    8b36:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8b3d:	00 00 00 

0000000000008b40 <atexit>:
    8b40:	f3 0f 1e fa          	endbr64 
    8b44:	48 8b 15 25 f7 00 00 	mov    0xf725(%rip),%rdx        # 18270 <__dso_handle>
    8b4b:	31 f6                	xor    %esi,%esi
    8b4d:	e9 be fe ff ff       	jmp    8a10 <__cxa_atexit>
    8b52:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8b59:	00 00 00 
    8b5c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000008b60 <init_global_object>:
    8b60:	f3 0f 1e fa          	endbr64 
    8b64:	55                   	push   %rbp
    8b65:	53                   	push   %rbx
    8b66:	48 83 ec 28          	sub    $0x28,%rsp
    8b6a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    8b71:	00 00 
    8b73:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    8b78:	31 c0                	xor    %eax,%eax
    8b7a:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    8b81:	00 00 
    8b83:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    8b8a:	00 00 
    8b8c:	e8 67 93 00 00       	call   11ef8 <get_enclave_base>
    8b91:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    8b96:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
    8b9b:	48 89 c7             	mov    %rax,%rdi
    8b9e:	48 89 c3             	mov    %rax,%rbx
    8ba1:	e8 aa f9 ff ff       	call   8550 <elf_get_init_array>
    8ba6:	85 c0                	test   %eax,%eax
    8ba8:	75 31                	jne    8bdb <init_global_object+0x7b>
    8baa:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    8baf:	48 85 c0             	test   %rax,%rax
    8bb2:	74 27                	je     8bdb <init_global_object+0x7b>
    8bb4:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
    8bb9:	48 85 ed             	test   %rbp,%rbp
    8bbc:	74 1d                	je     8bdb <init_global_object+0x7b>
    8bbe:	48 01 c3             	add    %rax,%rbx
    8bc1:	48 83 e5 f8          	and    $0xfffffffffffffff8,%rbp
    8bc5:	48 01 dd             	add    %rbx,%rbp
    8bc8:	48 39 eb             	cmp    %rbp,%rbx
    8bcb:	73 0e                	jae    8bdb <init_global_object+0x7b>
    8bcd:	0f 1f 00             	nopl   (%rax)
    8bd0:	ff 13                	call   *(%rbx)
    8bd2:	48 83 c3 08          	add    $0x8,%rbx
    8bd6:	48 39 eb             	cmp    %rbp,%rbx
    8bd9:	72 f5                	jb     8bd0 <init_global_object+0x70>
    8bdb:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    8be0:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    8be7:	00 00 
    8be9:	75 07                	jne    8bf2 <init_global_object+0x92>
    8beb:	48 83 c4 28          	add    $0x28,%rsp
    8bef:	5b                   	pop    %rbx
    8bf0:	5d                   	pop    %rbp
    8bf1:	c3                   	ret    
    8bf2:	e8 79 7c 00 00       	call   10870 <__stack_chk_fail>
    8bf7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    8bfe:	00 00 

0000000000008c00 <uninit_global_object>:
    8c00:	f3 0f 1e fa          	endbr64 
    8c04:	55                   	push   %rbp
    8c05:	53                   	push   %rbx
    8c06:	48 83 ec 28          	sub    $0x28,%rsp
    8c0a:	48 8b 1d 9f 15 01 00 	mov    0x1159f(%rip),%rbx        # 1a1b0 <g_exit_function>
    8c11:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    8c18:	00 00 
    8c1a:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    8c1f:	31 c0                	xor    %eax,%eax
    8c21:	48 c7 05 84 15 01 00 	movq   $0x0,0x11584(%rip)        # 1a1b0 <g_exit_function>
    8c28:	00 00 00 00 
    8c2c:	48 85 db             	test   %rbx,%rbx
    8c2f:	74 2b                	je     8c5c <uninit_global_object+0x5c>
    8c31:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8c38:	48 8b 05 61 15 01 00 	mov    0x11561(%rip),%rax        # 1a1a0 <g_exit_function_cookie>
    8c3f:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    8c43:	48 31 c7             	xor    %rax,%rdi
    8c46:	48 33 03             	xor    (%rbx),%rax
    8c49:	ff d0                	call   *%rax
    8c4b:	48 89 df             	mov    %rbx,%rdi
    8c4e:	48 8b 5b 18          	mov    0x18(%rbx),%rbx
    8c52:	e8 59 61 00 00       	call   edb0 <dlfree>
    8c57:	48 85 db             	test   %rbx,%rbx
    8c5a:	75 dc                	jne    8c38 <uninit_global_object+0x38>
    8c5c:	e8 97 92 00 00       	call   11ef8 <get_enclave_base>
    8c61:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    8c66:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
    8c6b:	48 89 c7             	mov    %rax,%rdi
    8c6e:	48 89 c5             	mov    %rax,%rbp
    8c71:	e8 ca f9 ff ff       	call   8640 <elf_get_uninit_array>
    8c76:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    8c7b:	48 85 d2             	test   %rdx,%rdx
    8c7e:	74 2b                	je     8cab <uninit_global_object+0xab>
    8c80:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    8c85:	48 85 c0             	test   %rax,%rax
    8c88:	74 21                	je     8cab <uninit_global_object+0xab>
    8c8a:	48 01 d5             	add    %rdx,%rbp
    8c8d:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    8c91:	48 8d 5c 05 f8       	lea    -0x8(%rbp,%rax,1),%rbx
    8c96:	48 39 eb             	cmp    %rbp,%rbx
    8c99:	72 10                	jb     8cab <uninit_global_object+0xab>
    8c9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8ca0:	ff 13                	call   *(%rbx)
    8ca2:	48 83 eb 08          	sub    $0x8,%rbx
    8ca6:	48 39 eb             	cmp    %rbp,%rbx
    8ca9:	73 f5                	jae    8ca0 <uninit_global_object+0xa0>
    8cab:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    8cb0:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    8cb7:	00 00 
    8cb9:	75 07                	jne    8cc2 <uninit_global_object+0xc2>
    8cbb:	48 83 c4 28          	add    $0x28,%rsp
    8cbf:	5b                   	pop    %rbx
    8cc0:	5d                   	pop    %rbp
    8cc1:	c3                   	ret    
    8cc2:	e8 a9 7b 00 00       	call   10870 <__stack_chk_fail>
    8cc7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    8cce:	00 00 

0000000000008cd0 <__tls_get_addr>:
    8cd0:	f3 0f 1e fa          	endbr64 
    8cd4:	53                   	push   %rbx
    8cd5:	48 89 fb             	mov    %rdi,%rbx
    8cd8:	e8 66 92 00 00       	call   11f43 <get_thread_data>
    8cdd:	48 8b 40 68          	mov    0x68(%rax),%rax
    8ce1:	48 03 43 08          	add    0x8(%rbx),%rax
    8ce5:	5b                   	pop    %rbx
    8ce6:	c3                   	ret    
    8ce7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    8cee:	00 00 

0000000000008cf0 <bit_array_new>:
    8cf0:	f3 0f 1e fa          	endbr64 
    8cf4:	41 54                	push   %r12
    8cf6:	55                   	push   %rbp
    8cf7:	53                   	push   %rbx
    8cf8:	48 85 ff             	test   %rdi,%rdi
    8cfb:	74 63                	je     8d60 <bit_array_new+0x70>
    8cfd:	48 8d 47 07          	lea    0x7(%rdi),%rax
    8d01:	48 89 fb             	mov    %rdi,%rbx
    8d04:	48 89 c2             	mov    %rax,%rdx
    8d07:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    8d0b:	48 39 fa             	cmp    %rdi,%rdx
    8d0e:	72 50                	jb     8d60 <bit_array_new+0x70>
    8d10:	48 c1 e8 03          	shr    $0x3,%rax
    8d14:	bf 18 00 00 00       	mov    $0x18,%edi
    8d19:	49 89 c4             	mov    %rax,%r12
    8d1c:	e8 9f 25 00 00       	call   b2c0 <emalloc>
    8d21:	48 89 c5             	mov    %rax,%rbp
    8d24:	48 85 c0             	test   %rax,%rax
    8d27:	74 37                	je     8d60 <bit_array_new+0x70>
    8d29:	4c 89 20             	mov    %r12,(%rax)
    8d2c:	4c 89 e7             	mov    %r12,%rdi
    8d2f:	48 89 58 08          	mov    %rbx,0x8(%rax)
    8d33:	e8 88 25 00 00       	call   b2c0 <emalloc>
    8d38:	48 89 45 10          	mov    %rax,0x10(%rbp)
    8d3c:	48 85 c0             	test   %rax,%rax
    8d3f:	74 0f                	je     8d50 <bit_array_new+0x60>
    8d41:	48 89 e8             	mov    %rbp,%rax
    8d44:	5b                   	pop    %rbx
    8d45:	5d                   	pop    %rbp
    8d46:	41 5c                	pop    %r12
    8d48:	c3                   	ret    
    8d49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8d50:	48 89 ef             	mov    %rbp,%rdi
    8d53:	e8 e8 27 00 00       	call   b540 <efree>
    8d58:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    8d5f:	00 
    8d60:	31 ed                	xor    %ebp,%ebp
    8d62:	eb dd                	jmp    8d41 <bit_array_new+0x51>
    8d64:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8d6b:	00 00 00 
    8d6e:	66 90                	xchg   %ax,%ax

0000000000008d70 <bit_array_new_set>:
    8d70:	f3 0f 1e fa          	endbr64 
    8d74:	53                   	push   %rbx
    8d75:	e8 76 ff ff ff       	call   8cf0 <bit_array_new>
    8d7a:	48 89 c3             	mov    %rax,%rbx
    8d7d:	48 85 c0             	test   %rax,%rax
    8d80:	74 11                	je     8d93 <bit_array_new_set+0x23>
    8d82:	48 8b 10             	mov    (%rax),%rdx
    8d85:	48 8b 78 10          	mov    0x10(%rax),%rdi
    8d89:	be ff 00 00 00       	mov    $0xff,%esi
    8d8e:	e8 0d 7a 00 00       	call   107a0 <memset>
    8d93:	48 89 d8             	mov    %rbx,%rax
    8d96:	5b                   	pop    %rbx
    8d97:	c3                   	ret    
    8d98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    8d9f:	00 

0000000000008da0 <bit_array_new_reset>:
    8da0:	f3 0f 1e fa          	endbr64 
    8da4:	53                   	push   %rbx
    8da5:	e8 46 ff ff ff       	call   8cf0 <bit_array_new>
    8daa:	48 89 c3             	mov    %rax,%rbx
    8dad:	48 85 c0             	test   %rax,%rax
    8db0:	74 0e                	je     8dc0 <bit_array_new_reset+0x20>
    8db2:	48 8b 10             	mov    (%rax),%rdx
    8db5:	48 8b 78 10          	mov    0x10(%rax),%rdi
    8db9:	31 f6                	xor    %esi,%esi
    8dbb:	e8 e0 79 00 00       	call   107a0 <memset>
    8dc0:	48 89 d8             	mov    %rbx,%rax
    8dc3:	5b                   	pop    %rbx
    8dc4:	c3                   	ret    
    8dc5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8dcc:	00 00 00 
    8dcf:	90                   	nop

0000000000008dd0 <bit_array_delete>:
    8dd0:	f3 0f 1e fa          	endbr64 
    8dd4:	53                   	push   %rbx
    8dd5:	48 89 fb             	mov    %rdi,%rbx
    8dd8:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    8ddc:	e8 5f 27 00 00       	call   b540 <efree>
    8de1:	48 89 df             	mov    %rbx,%rdi
    8de4:	5b                   	pop    %rbx
    8de5:	e9 56 27 00 00       	jmp    b540 <efree>
    8dea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000008df0 <bit_array_test>:
    8df0:	f3 0f 1e fa          	endbr64 
    8df4:	48 89 f1             	mov    %rsi,%rcx
    8df7:	48 89 f2             	mov    %rsi,%rdx
    8dfa:	48 8b 77 10          	mov    0x10(%rdi),%rsi
    8dfe:	b8 01 00 00 00       	mov    $0x1,%eax
    8e03:	83 e1 07             	and    $0x7,%ecx
    8e06:	48 c1 ea 03          	shr    $0x3,%rdx
    8e0a:	d3 e0                	shl    %cl,%eax
    8e0c:	84 04 16             	test   %al,(%rsi,%rdx,1)
    8e0f:	0f 95 c0             	setne  %al
    8e12:	c3                   	ret    
    8e13:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8e1a:	00 00 00 
    8e1d:	0f 1f 00             	nopl   (%rax)

0000000000008e20 <set_mask>:
    8e20:	f3 0f 1e fa          	endbr64 
    8e24:	89 f1                	mov    %esi,%ecx
    8e26:	b8 01 00 00 00       	mov    $0x1,%eax
    8e2b:	d3 e0                	shl    %cl,%eax
    8e2d:	89 f9                	mov    %edi,%ecx
    8e2f:	83 e8 01             	sub    $0x1,%eax
    8e32:	d3 e0                	shl    %cl,%eax
    8e34:	c3                   	ret    
    8e35:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8e3c:	00 00 00 
    8e3f:	90                   	nop

0000000000008e40 <bit_array_test_range>:
    8e40:	f3 0f 1e fa          	endbr64 
    8e44:	48 89 f0             	mov    %rsi,%rax
    8e47:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    8e4b:	83 e6 07             	and    $0x7,%esi
    8e4e:	b9 08 00 00 00       	mov    $0x8,%ecx
    8e53:	48 c1 e8 03          	shr    $0x3,%rax
    8e57:	48 29 f1             	sub    %rsi,%rcx
    8e5a:	44 0f b6 0c 07       	movzbl (%rdi,%rax,1),%r9d
    8e5f:	48 39 d1             	cmp    %rdx,%rcx
    8e62:	72 24                	jb     8e88 <bit_array_test_range+0x48>
    8e64:	89 d1                	mov    %edx,%ecx
    8e66:	b8 01 00 00 00       	mov    $0x1,%eax
    8e6b:	41 f7 d1             	not    %r9d
    8e6e:	d3 e0                	shl    %cl,%eax
    8e70:	89 f1                	mov    %esi,%ecx
    8e72:	83 e8 01             	sub    $0x1,%eax
    8e75:	d3 e0                	shl    %cl,%eax
    8e77:	41 84 c1             	test   %al,%r9b
    8e7a:	41 0f 94 c2          	sete   %r10b
    8e7e:	44 89 d0             	mov    %r10d,%eax
    8e81:	c3                   	ret    
    8e82:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8e88:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    8e8e:	41 f7 d1             	not    %r9d
    8e91:	45 31 d2             	xor    %r10d,%r10d
    8e94:	41 d3 e0             	shl    %cl,%r8d
    8e97:	89 f1                	mov    %esi,%ecx
    8e99:	41 83 e8 01          	sub    $0x1,%r8d
    8e9d:	41 d3 e0             	shl    %cl,%r8d
    8ea0:	45 84 c1             	test   %r8b,%r9b
    8ea3:	75 d9                	jne    8e7e <bit_array_test_range+0x3e>
    8ea5:	48 8d 4c 16 f8       	lea    -0x8(%rsi,%rdx,1),%rcx
    8eaa:	48 83 f9 07          	cmp    $0x7,%rcx
    8eae:	77 12                	ja     8ec2 <bit_array_test_range+0x82>
    8eb0:	eb 26                	jmp    8ed8 <bit_array_test_range+0x98>
    8eb2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8eb8:	48 83 e9 08          	sub    $0x8,%rcx
    8ebc:	48 83 f9 07          	cmp    $0x7,%rcx
    8ec0:	76 16                	jbe    8ed8 <bit_array_test_range+0x98>
    8ec2:	48 83 c0 01          	add    $0x1,%rax
    8ec6:	80 3c 07 ff          	cmpb   $0xff,(%rdi,%rax,1)
    8eca:	74 ec                	je     8eb8 <bit_array_test_range+0x78>
    8ecc:	45 31 d2             	xor    %r10d,%r10d
    8ecf:	44 89 d0             	mov    %r10d,%eax
    8ed2:	c3                   	ret    
    8ed3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8ed8:	41 ba 01 00 00 00    	mov    $0x1,%r10d
    8ede:	48 85 c9             	test   %rcx,%rcx
    8ee1:	74 9b                	je     8e7e <bit_array_test_range+0x3e>
    8ee3:	ba 01 00 00 00       	mov    $0x1,%edx
    8ee8:	0f b6 74 07 01       	movzbl 0x1(%rdi,%rax,1),%esi
    8eed:	d3 e2                	shl    %cl,%edx
    8eef:	83 ea 01             	sub    $0x1,%edx
    8ef2:	21 d6                	and    %edx,%esi
    8ef4:	40 38 d6             	cmp    %dl,%sil
    8ef7:	41 0f 94 c2          	sete   %r10b
    8efb:	eb 81                	jmp    8e7e <bit_array_test_range+0x3e>
    8efd:	0f 1f 00             	nopl   (%rax)

0000000000008f00 <bit_array_test_range_any>:
    8f00:	f3 0f 1e fa          	endbr64 
    8f04:	49 89 f8             	mov    %rdi,%r8
    8f07:	48 89 f0             	mov    %rsi,%rax
    8f0a:	48 89 d7             	mov    %rdx,%rdi
    8f0d:	83 e6 07             	and    $0x7,%esi
    8f10:	49 8b 50 10          	mov    0x10(%r8),%rdx
    8f14:	b9 08 00 00 00       	mov    $0x8,%ecx
    8f19:	48 c1 e8 03          	shr    $0x3,%rax
    8f1d:	48 29 f1             	sub    %rsi,%rcx
    8f20:	44 0f b6 0c 02       	movzbl (%rdx,%rax,1),%r9d
    8f25:	48 39 f9             	cmp    %rdi,%rcx
    8f28:	72 1e                	jb     8f48 <bit_array_test_range_any+0x48>
    8f2a:	89 f9                	mov    %edi,%ecx
    8f2c:	b8 01 00 00 00       	mov    $0x1,%eax
    8f31:	d3 e0                	shl    %cl,%eax
    8f33:	89 f1                	mov    %esi,%ecx
    8f35:	83 e8 01             	sub    $0x1,%eax
    8f38:	d3 e0                	shl    %cl,%eax
    8f3a:	41 84 c1             	test   %al,%r9b
    8f3d:	41 0f 95 c2          	setne  %r10b
    8f41:	44 89 d0             	mov    %r10d,%eax
    8f44:	c3                   	ret    
    8f45:	0f 1f 00             	nopl   (%rax)
    8f48:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    8f4e:	41 ba 01 00 00 00    	mov    $0x1,%r10d
    8f54:	41 d3 e0             	shl    %cl,%r8d
    8f57:	89 f1                	mov    %esi,%ecx
    8f59:	41 83 e8 01          	sub    $0x1,%r8d
    8f5d:	41 d3 e0             	shl    %cl,%r8d
    8f60:	45 84 c1             	test   %r8b,%r9b
    8f63:	75 dc                	jne    8f41 <bit_array_test_range_any+0x41>
    8f65:	48 8d 4c 3e f8       	lea    -0x8(%rsi,%rdi,1),%rcx
    8f6a:	48 83 f9 07          	cmp    $0x7,%rcx
    8f6e:	77 12                	ja     8f82 <bit_array_test_range_any+0x82>
    8f70:	eb 2e                	jmp    8fa0 <bit_array_test_range_any+0xa0>
    8f72:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8f78:	48 83 e9 08          	sub    $0x8,%rcx
    8f7c:	48 83 f9 07          	cmp    $0x7,%rcx
    8f80:	76 1e                	jbe    8fa0 <bit_array_test_range_any+0xa0>
    8f82:	48 83 c0 01          	add    $0x1,%rax
    8f86:	80 3c 02 00          	cmpb   $0x0,(%rdx,%rax,1)
    8f8a:	74 ec                	je     8f78 <bit_array_test_range_any+0x78>
    8f8c:	41 ba 01 00 00 00    	mov    $0x1,%r10d
    8f92:	44 89 d0             	mov    %r10d,%eax
    8f95:	c3                   	ret    
    8f96:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8f9d:	00 00 00 
    8fa0:	45 31 d2             	xor    %r10d,%r10d
    8fa3:	48 85 c9             	test   %rcx,%rcx
    8fa6:	74 99                	je     8f41 <bit_array_test_range_any+0x41>
    8fa8:	be 01 00 00 00       	mov    $0x1,%esi
    8fad:	d3 e6                	shl    %cl,%esi
    8faf:	83 ee 01             	sub    $0x1,%esi
    8fb2:	40 84 74 02 01       	test   %sil,0x1(%rdx,%rax,1)
    8fb7:	41 0f 95 c2          	setne  %r10b
    8fbb:	eb 84                	jmp    8f41 <bit_array_test_range_any+0x41>
    8fbd:	0f 1f 00             	nopl   (%rax)

0000000000008fc0 <bit_array_set>:
    8fc0:	f3 0f 1e fa          	endbr64 
    8fc4:	48 89 f1             	mov    %rsi,%rcx
    8fc7:	48 89 f0             	mov    %rsi,%rax
    8fca:	ba 01 00 00 00       	mov    $0x1,%edx
    8fcf:	48 c1 e8 03          	shr    $0x3,%rax
    8fd3:	83 e1 07             	and    $0x7,%ecx
    8fd6:	48 03 47 10          	add    0x10(%rdi),%rax
    8fda:	d3 e2                	shl    %cl,%edx
    8fdc:	08 10                	or     %dl,(%rax)
    8fde:	c3                   	ret    
    8fdf:	90                   	nop

0000000000008fe0 <bit_array_set_range>:
    8fe0:	f3 0f 1e fa          	endbr64 
    8fe4:	48 89 f0             	mov    %rsi,%rax
    8fe7:	4c 8b 4f 10          	mov    0x10(%rdi),%r9
    8feb:	83 e6 07             	and    $0x7,%esi
    8fee:	b9 08 00 00 00       	mov    $0x8,%ecx
    8ff3:	48 c1 e8 03          	shr    $0x3,%rax
    8ff7:	48 29 f1             	sub    %rsi,%rcx
    8ffa:	49 89 d0             	mov    %rdx,%r8
    8ffd:	49 01 c1             	add    %rax,%r9
    9000:	45 0f b6 11          	movzbl (%r9),%r10d
    9004:	48 39 d1             	cmp    %rdx,%rcx
    9007:	73 67                	jae    9070 <bit_array_set_range+0x90>
    9009:	ba 01 00 00 00       	mov    $0x1,%edx
    900e:	d3 e2                	shl    %cl,%edx
    9010:	89 f1                	mov    %esi,%ecx
    9012:	83 ea 01             	sub    $0x1,%edx
    9015:	d3 e2                	shl    %cl,%edx
    9017:	4a 8d 4c 06 f8       	lea    -0x8(%rsi,%r8,1),%rcx
    901c:	41 09 d2             	or     %edx,%r10d
    901f:	45 88 11             	mov    %r10b,(%r9)
    9022:	48 83 f9 07          	cmp    $0x7,%rcx
    9026:	76 68                	jbe    9090 <bit_array_set_range+0xb0>
    9028:	48 8d 51 f8          	lea    -0x8(%rcx),%rdx
    902c:	48 83 c0 01          	add    $0x1,%rax
    9030:	48 c1 ea 03          	shr    $0x3,%rdx
    9034:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
    9038:	eb 0a                	jmp    9044 <bit_array_set_range+0x64>
    903a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9040:	48 83 c0 01          	add    $0x1,%rax
    9044:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    9048:	c6 04 02 ff          	movb   $0xff,(%rdx,%rax,1)
    904c:	48 39 f0             	cmp    %rsi,%rax
    904f:	75 ef                	jne    9040 <bit_array_set_range+0x60>
    9051:	83 e1 07             	and    $0x7,%ecx
    9054:	48 85 c9             	test   %rcx,%rcx
    9057:	74 12                	je     906b <bit_array_set_range+0x8b>
    9059:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    905d:	b8 01 00 00 00       	mov    $0x1,%eax
    9062:	d3 e0                	shl    %cl,%eax
    9064:	83 e8 01             	sub    $0x1,%eax
    9067:	08 44 32 01          	or     %al,0x1(%rdx,%rsi,1)
    906b:	c3                   	ret    
    906c:	0f 1f 40 00          	nopl   0x0(%rax)
    9070:	89 d1                	mov    %edx,%ecx
    9072:	b8 01 00 00 00       	mov    $0x1,%eax
    9077:	d3 e0                	shl    %cl,%eax
    9079:	89 f1                	mov    %esi,%ecx
    907b:	83 e8 01             	sub    $0x1,%eax
    907e:	d3 e0                	shl    %cl,%eax
    9080:	44 09 d0             	or     %r10d,%eax
    9083:	41 88 01             	mov    %al,(%r9)
    9086:	c3                   	ret    
    9087:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    908e:	00 00 
    9090:	48 89 c6             	mov    %rax,%rsi
    9093:	eb bf                	jmp    9054 <bit_array_set_range+0x74>
    9095:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    909c:	00 00 00 
    909f:	90                   	nop

00000000000090a0 <bit_array_set_all>:
    90a0:	f3 0f 1e fa          	endbr64 
    90a4:	48 8b 17             	mov    (%rdi),%rdx
    90a7:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    90ab:	be ff 00 00 00       	mov    $0xff,%esi
    90b0:	e9 eb 76 00 00       	jmp    107a0 <memset>
    90b5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    90bc:	00 00 00 
    90bf:	90                   	nop

00000000000090c0 <clear_mask>:
    90c0:	f3 0f 1e fa          	endbr64 
    90c4:	89 f1                	mov    %esi,%ecx
    90c6:	b8 01 00 00 00       	mov    $0x1,%eax
    90cb:	d3 e0                	shl    %cl,%eax
    90cd:	89 f9                	mov    %edi,%ecx
    90cf:	83 e8 01             	sub    $0x1,%eax
    90d2:	d3 e0                	shl    %cl,%eax
    90d4:	f7 d0                	not    %eax
    90d6:	c3                   	ret    
    90d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    90de:	00 00 

00000000000090e0 <bit_array_reset_range>:
    90e0:	f3 0f 1e fa          	endbr64 
    90e4:	48 89 f0             	mov    %rsi,%rax
    90e7:	4c 8b 4f 10          	mov    0x10(%rdi),%r9
    90eb:	83 e6 07             	and    $0x7,%esi
    90ee:	b9 08 00 00 00       	mov    $0x8,%ecx
    90f3:	48 c1 e8 03          	shr    $0x3,%rax
    90f7:	48 29 f1             	sub    %rsi,%rcx
    90fa:	49 89 d0             	mov    %rdx,%r8
    90fd:	49 01 c1             	add    %rax,%r9
    9100:	45 0f b6 11          	movzbl (%r9),%r10d
    9104:	48 39 d1             	cmp    %rdx,%rcx
    9107:	73 67                	jae    9170 <bit_array_reset_range+0x90>
    9109:	ba 01 00 00 00       	mov    $0x1,%edx
    910e:	d3 e2                	shl    %cl,%edx
    9110:	89 f1                	mov    %esi,%ecx
    9112:	83 ea 01             	sub    $0x1,%edx
    9115:	d3 e2                	shl    %cl,%edx
    9117:	4a 8d 4c 06 f8       	lea    -0x8(%rsi,%r8,1),%rcx
    911c:	f7 d2                	not    %edx
    911e:	44 21 d2             	and    %r10d,%edx
    9121:	41 88 11             	mov    %dl,(%r9)
    9124:	48 83 f9 07          	cmp    $0x7,%rcx
    9128:	76 66                	jbe    9190 <bit_array_reset_range+0xb0>
    912a:	48 8d 51 f8          	lea    -0x8(%rcx),%rdx
    912e:	48 83 c0 01          	add    $0x1,%rax
    9132:	48 c1 ea 03          	shr    $0x3,%rdx
    9136:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
    913a:	eb 08                	jmp    9144 <bit_array_reset_range+0x64>
    913c:	0f 1f 40 00          	nopl   0x0(%rax)
    9140:	48 83 c0 01          	add    $0x1,%rax
    9144:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    9148:	c6 04 02 00          	movb   $0x0,(%rdx,%rax,1)
    914c:	48 39 f0             	cmp    %rsi,%rax
    914f:	75 ef                	jne    9140 <bit_array_reset_range+0x60>
    9151:	83 e1 07             	and    $0x7,%ecx
    9154:	48 85 c9             	test   %rcx,%rcx
    9157:	74 0f                	je     9168 <bit_array_reset_range+0x88>
    9159:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    915d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    9162:	d3 e0                	shl    %cl,%eax
    9164:	20 44 32 01          	and    %al,0x1(%rdx,%rsi,1)
    9168:	c3                   	ret    
    9169:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9170:	89 d1                	mov    %edx,%ecx
    9172:	b8 01 00 00 00       	mov    $0x1,%eax
    9177:	d3 e0                	shl    %cl,%eax
    9179:	89 f1                	mov    %esi,%ecx
    917b:	83 e8 01             	sub    $0x1,%eax
    917e:	d3 e0                	shl    %cl,%eax
    9180:	f7 d0                	not    %eax
    9182:	44 21 d0             	and    %r10d,%eax
    9185:	41 88 01             	mov    %al,(%r9)
    9188:	c3                   	ret    
    9189:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9190:	48 89 c6             	mov    %rax,%rsi
    9193:	eb bf                	jmp    9154 <bit_array_reset_range+0x74>
    9195:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    919c:	00 00 00 
    919f:	90                   	nop

00000000000091a0 <bit_array_reset_all>:
    91a0:	f3 0f 1e fa          	endbr64 
    91a4:	48 8b 17             	mov    (%rdi),%rdx
    91a7:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    91ab:	31 f6                	xor    %esi,%esi
    91ad:	e9 ee 75 00 00       	jmp    107a0 <memset>
    91b2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    91b9:	00 00 00 
    91bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000091c0 <bit_array_reattach>:
    91c0:	f3 0f 1e fa          	endbr64 
    91c4:	41 54                	push   %r12
    91c6:	49 89 d4             	mov    %rdx,%r12
    91c9:	55                   	push   %rbp
    91ca:	48 89 f5             	mov    %rsi,%rbp
    91cd:	53                   	push   %rbx
    91ce:	48 89 fb             	mov    %rdi,%rbx
    91d1:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    91d5:	48 85 ff             	test   %rdi,%rdi
    91d8:	74 05                	je     91df <bit_array_reattach+0x1f>
    91da:	e8 61 23 00 00       	call   b540 <efree>
    91df:	48 8d 45 07          	lea    0x7(%rbp),%rax
    91e3:	48 89 6b 08          	mov    %rbp,0x8(%rbx)
    91e7:	48 c1 e8 03          	shr    $0x3,%rax
    91eb:	4c 89 63 10          	mov    %r12,0x10(%rbx)
    91ef:	48 89 03             	mov    %rax,(%rbx)
    91f2:	5b                   	pop    %rbx
    91f3:	5d                   	pop    %rbp
    91f4:	41 5c                	pop    %r12
    91f6:	c3                   	ret    
    91f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    91fe:	00 00 

0000000000009200 <bit_array_split>:
    9200:	f3 0f 1e fa          	endbr64 
    9204:	41 57                	push   %r15
    9206:	41 56                	push   %r14
    9208:	41 55                	push   %r13
    920a:	41 54                	push   %r12
    920c:	55                   	push   %rbp
    920d:	53                   	push   %rbx
    920e:	48 89 fb             	mov    %rdi,%rbx
    9211:	48 83 ec 38          	sub    $0x38,%rsp
    9215:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    921a:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    921f:	48 85 f6             	test   %rsi,%rsi
    9222:	0f 84 88 01 00 00    	je     93b0 <bit_array_split+0x1b0>
    9228:	4c 8b 77 08          	mov    0x8(%rdi),%r14
    922c:	45 31 e4             	xor    %r12d,%r12d
    922f:	4c 39 f6             	cmp    %r14,%rsi
    9232:	72 24                	jb     9258 <bit_array_split+0x58>
    9234:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    9239:	48 89 18             	mov    %rbx,(%rax)
    923c:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    9241:	4c 89 20             	mov    %r12,(%rax)
    9244:	31 c0                	xor    %eax,%eax
    9246:	48 83 c4 38          	add    $0x38,%rsp
    924a:	5b                   	pop    %rbx
    924b:	5d                   	pop    %rbp
    924c:	41 5c                	pop    %r12
    924e:	41 5d                	pop    %r13
    9250:	41 5e                	pop    %r14
    9252:	41 5f                	pop    %r15
    9254:	c3                   	ret    
    9255:	0f 1f 00             	nopl   (%rax)
    9258:	48 8d 46 07          	lea    0x7(%rsi),%rax
    925c:	48 89 f5             	mov    %rsi,%rbp
    925f:	41 89 f7             	mov    %esi,%r15d
    9262:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
    9267:	48 c1 e8 03          	shr    $0x3,%rax
    926b:	49 29 f6             	sub    %rsi,%r14
    926e:	48 c1 ed 03          	shr    $0x3,%rbp
    9272:	41 83 e7 07          	and    $0x7,%r15d
    9276:	48 89 c7             	mov    %rax,%rdi
    9279:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    927e:	e8 3d 20 00 00       	call   b2c0 <emalloc>
    9283:	49 89 c5             	mov    %rax,%r13
    9286:	48 85 c0             	test   %rax,%rax
    9289:	0f 84 98 01 00 00    	je     9427 <bit_array_split+0x227>
    928f:	48 85 ed             	test   %rbp,%rbp
    9292:	0f 84 80 01 00 00    	je     9418 <bit_array_split+0x218>
    9298:	31 c0                	xor    %eax,%eax
    929a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    92a0:	48 8b 53 10          	mov    0x10(%rbx),%rdx
    92a4:	0f b6 14 02          	movzbl (%rdx,%rax,1),%edx
    92a8:	41 88 54 05 00       	mov    %dl,0x0(%r13,%rax,1)
    92ad:	48 83 c0 01          	add    $0x1,%rax
    92b1:	48 39 c5             	cmp    %rax,%rbp
    92b4:	75 ea                	jne    92a0 <bit_array_split+0xa0>
    92b6:	48 89 ea             	mov    %rbp,%rdx
    92b9:	45 84 ff             	test   %r15b,%r15b
    92bc:	0f 85 fe 00 00 00    	jne    93c0 <bit_array_split+0x1c0>
    92c2:	4c 89 f7             	mov    %r14,%rdi
    92c5:	e8 26 fa ff ff       	call   8cf0 <bit_array_new>
    92ca:	49 89 c4             	mov    %rax,%r12
    92cd:	48 85 c0             	test   %rax,%rax
    92d0:	0f 84 49 01 00 00    	je     941f <bit_array_split+0x21f>
    92d6:	49 89 ea             	mov    %rbp,%r10
    92d9:	31 d2                	xor    %edx,%edx
    92db:	49 83 fe 07          	cmp    $0x7,%r14
    92df:	76 78                	jbe    9359 <bit_array_split+0x159>
    92e1:	49 8d 46 f8          	lea    -0x8(%r14),%rax
    92e5:	45 0f b6 df          	movzbl %r15b,%r11d
    92e9:	41 b9 08 00 00 00    	mov    $0x8,%r9d
    92ef:	31 ff                	xor    %edi,%edi
    92f1:	48 c1 e8 03          	shr    $0x3,%rax
    92f5:	48 8d 55 01          	lea    0x1(%rbp),%rdx
    92f9:	44 88 7c 24 2f       	mov    %r15b,0x2f(%rsp)
    92fe:	45 29 d9             	sub    %r11d,%r9d
    9301:	48 89 c6             	mov    %rax,%rsi
    9304:	4c 8d 14 02          	lea    (%rdx,%rax,1),%r10
    9308:	eb 0a                	jmp    9314 <bit_array_split+0x114>
    930a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9310:	48 83 c2 01          	add    $0x1,%rdx
    9314:	4c 8b 43 10          	mov    0x10(%rbx),%r8
    9318:	48 89 e8             	mov    %rbp,%rax
    931b:	44 89 d9             	mov    %r11d,%ecx
    931e:	49 89 ff             	mov    %rdi,%r15
    9321:	48 89 d5             	mov    %rdx,%rbp
    9324:	48 83 c7 01          	add    $0x1,%rdi
    9328:	41 0f b6 04 00       	movzbl (%r8,%rax,1),%eax
    932d:	45 0f b6 04 10       	movzbl (%r8,%rdx,1),%r8d
    9332:	d3 f8                	sar    %cl,%eax
    9334:	44 89 c9             	mov    %r9d,%ecx
    9337:	41 d3 e0             	shl    %cl,%r8d
    933a:	49 8b 4c 24 10       	mov    0x10(%r12),%rcx
    933f:	44 09 c0             	or     %r8d,%eax
    9342:	42 88 04 39          	mov    %al,(%rcx,%r15,1)
    9346:	4c 39 d2             	cmp    %r10,%rdx
    9349:	75 c5                	jne    9310 <bit_array_split+0x110>
    934b:	44 0f b6 7c 24 2f    	movzbl 0x2f(%rsp),%r15d
    9351:	48 8d 56 01          	lea    0x1(%rsi),%rdx
    9355:	41 83 e6 07          	and    $0x7,%r14d
    9359:	b8 08 00 00 00       	mov    $0x8,%eax
    935e:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    9362:	44 29 f8             	sub    %r15d,%eax
    9365:	48 0f be c0          	movsbq %al,%rax
    9369:	4c 39 f0             	cmp    %r14,%rax
    936c:	72 72                	jb     93e0 <bit_array_split+0x1e0>
    936e:	4d 85 f6             	test   %r14,%r14
    9371:	74 16                	je     9389 <bit_array_split+0x189>
    9373:	42 0f b6 04 17       	movzbl (%rdi,%r10,1),%eax
    9378:	49 8b 74 24 10       	mov    0x10(%r12),%rsi
    937d:	44 89 f9             	mov    %r15d,%ecx
    9380:	d3 f8                	sar    %cl,%eax
    9382:	88 04 16             	mov    %al,(%rsi,%rdx,1)
    9385:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    9389:	48 85 ff             	test   %rdi,%rdi
    938c:	74 05                	je     9393 <bit_array_split+0x193>
    938e:	e8 ad 21 00 00       	call   b540 <efree>
    9393:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    9398:	4c 89 6b 10          	mov    %r13,0x10(%rbx)
    939c:	48 89 03             	mov    %rax,(%rbx)
    939f:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    93a4:	48 89 43 08          	mov    %rax,0x8(%rbx)
    93a8:	e9 87 fe ff ff       	jmp    9234 <bit_array_split+0x34>
    93ad:	0f 1f 00             	nopl   (%rax)
    93b0:	49 89 fc             	mov    %rdi,%r12
    93b3:	31 db                	xor    %ebx,%ebx
    93b5:	e9 7a fe ff ff       	jmp    9234 <bit_array_split+0x34>
    93ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    93c0:	48 8b 73 10          	mov    0x10(%rbx),%rsi
    93c4:	b8 01 00 00 00       	mov    $0x1,%eax
    93c9:	44 89 f9             	mov    %r15d,%ecx
    93cc:	d3 e0                	shl    %cl,%eax
    93ce:	83 e8 01             	sub    $0x1,%eax
    93d1:	22 04 16             	and    (%rsi,%rdx,1),%al
    93d4:	41 88 44 15 00       	mov    %al,0x0(%r13,%rdx,1)
    93d9:	e9 e4 fe ff ff       	jmp    92c2 <bit_array_split+0xc2>
    93de:	66 90                	xchg   %ax,%ax
    93e0:	42 0f b6 44 17 01    	movzbl 0x1(%rdi,%r10,1),%eax
    93e6:	45 0f b6 c7          	movzbl %r15b,%r8d
    93ea:	b9 08 00 00 00       	mov    $0x8,%ecx
    93ef:	42 0f b6 3c 17       	movzbl (%rdi,%r10,1),%edi
    93f4:	44 29 c1             	sub    %r8d,%ecx
    93f7:	49 8b 74 24 10       	mov    0x10(%r12),%rsi
    93fc:	d3 e0                	shl    %cl,%eax
    93fe:	44 89 f9             	mov    %r15d,%ecx
    9401:	d3 ff                	sar    %cl,%edi
    9403:	09 f8                	or     %edi,%eax
    9405:	88 04 16             	mov    %al,(%rsi,%rdx,1)
    9408:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    940c:	e9 78 ff ff ff       	jmp    9389 <bit_array_split+0x189>
    9411:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9418:	31 d2                	xor    %edx,%edx
    941a:	e9 9a fe ff ff       	jmp    92b9 <bit_array_split+0xb9>
    941f:	4c 89 ef             	mov    %r13,%rdi
    9422:	e8 19 21 00 00       	call   b540 <efree>
    9427:	b8 0c 00 00 00       	mov    $0xc,%eax
    942c:	e9 15 fe ff ff       	jmp    9246 <bit_array_split+0x46>
    9431:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    9438:	00 00 00 
    943b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000009440 <ema_do_uncommit_real>:
    9440:	55                   	push   %rbp
    9441:	48 89 e5             	mov    %rsp,%rbp
    9444:	41 57                	push   %r15
    9446:	41 56                	push   %r14
    9448:	41 55                	push   %r13
    944a:	41 54                	push   %r12
    944c:	53                   	push   %rbx
    944d:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    9451:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
    9458:	89 4c 24 28          	mov    %ecx,0x28(%rsp)
    945c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    9463:	00 00 
    9465:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
    946c:	00 
    946d:	48 8b 47 18          	mov    0x18(%rdi),%rax
    9471:	f6 47 10 01          	testb  $0x1,0x10(%rdi)
    9475:	0f 85 68 01 00 00    	jne    95e3 <ema_do_uncommit_real+0x1a3>
    947b:	25 00 ff 00 00       	and    $0xff00,%eax
    9480:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9484:	48 89 fb             	mov    %rdi,%rbx
    9487:	49 89 f7             	mov    %rsi,%r15
    948a:	89 44 24 24          	mov    %eax,0x24(%rsp)
    948e:	8b 44 24 28          	mov    0x28(%rsp),%eax
    9492:	49 89 d4             	mov    %rdx,%r12
    9495:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
    949c:	00 00 
    949e:	80 cc 04             	or     $0x4,%ah
    94a1:	0f 11 44 24 48       	movups %xmm0,0x48(%rsp)
    94a6:	48 c7 44 24 40 10 04 	movq   $0x410,0x40(%rsp)
    94ad:	00 00 
    94af:	89 44 24 2c          	mov    %eax,0x2c(%rsp)
    94b3:	0f 11 44 24 58       	movups %xmm0,0x58(%rsp)
    94b8:	0f 11 44 24 68       	movups %xmm0,0x68(%rsp)
    94bd:	0f 1f 00             	nopl   (%rax)
    94c0:	4d 39 e7             	cmp    %r12,%r15
    94c3:	72 17                	jb     94dc <ema_do_uncommit_real+0x9c>
    94c5:	e9 19 01 00 00       	jmp    95e3 <ema_do_uncommit_real+0x1a3>
    94ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    94d0:	49 81 c7 00 10 00 00 	add    $0x1000,%r15
    94d7:	4d 39 e7             	cmp    %r12,%r15
    94da:	73 17                	jae    94f3 <ema_do_uncommit_real+0xb3>
    94dc:	4c 89 fe             	mov    %r15,%rsi
    94df:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    94e3:	48 2b 33             	sub    (%rbx),%rsi
    94e6:	48 c1 ee 0c          	shr    $0xc,%rsi
    94ea:	e8 01 f9 ff ff       	call   8df0 <bit_array_test>
    94ef:	84 c0                	test   %al,%al
    94f1:	74 dd                	je     94d0 <ema_do_uncommit_real+0x90>
    94f3:	4c 89 7c 24 38       	mov    %r15,0x38(%rsp)
    94f8:	4d 39 fc             	cmp    %r15,%r12
    94fb:	0f 84 e2 00 00 00    	je     95e3 <ema_do_uncommit_real+0x1a3>
    9501:	49 81 c7 00 10 00 00 	add    $0x1000,%r15
    9508:	4d 39 e7             	cmp    %r12,%r15
    950b:	72 17                	jb     9524 <ema_do_uncommit_real+0xe4>
    950d:	e9 f5 00 00 00       	jmp    9607 <ema_do_uncommit_real+0x1c7>
    9512:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9518:	49 81 c7 00 10 00 00 	add    $0x1000,%r15
    951f:	4d 39 e7             	cmp    %r12,%r15
    9522:	73 17                	jae    953b <ema_do_uncommit_real+0xfb>
    9524:	4c 89 fe             	mov    %r15,%rsi
    9527:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    952b:	48 2b 33             	sub    (%rbx),%rsi
    952e:	48 c1 ee 0c          	shr    $0xc,%rsi
    9532:	e8 b9 f8 ff ff       	call   8df0 <bit_array_test>
    9537:	84 c0                	test   %al,%al
    9539:	75 dd                	jne    9518 <ema_do_uncommit_real+0xd8>
    953b:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
    9540:	4c 89 f8             	mov    %r15,%rax
    9543:	48 29 c8             	sub    %rcx,%rax
    9546:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    954b:	8b 54 24 24          	mov    0x24(%rsp),%edx
    954f:	8b 44 24 28          	mov    0x28(%rsp),%eax
    9553:	8b 4c 24 2c          	mov    0x2c(%rsp),%ecx
    9557:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
    955c:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
    9561:	09 c2                	or     %eax,%edx
    9563:	e8 08 c2 ff ff       	call   5770 <sgx_mm_modify_ocall>
    9568:	85 c0                	test   %eax,%eax
    956a:	75 70                	jne    95dc <ema_do_uncommit_real+0x19c>
    956c:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    9571:	4c 8d 6c 24 40       	lea    0x40(%rsp),%r13
    9576:	49 89 c6             	mov    %rax,%r14
    9579:	4c 39 f8             	cmp    %r15,%rax
    957c:	73 21                	jae    959f <ema_do_uncommit_real+0x15f>
    957e:	66 90                	xchg   %ax,%ax
    9580:	4c 89 f6             	mov    %r14,%rsi
    9583:	4c 89 ef             	mov    %r13,%rdi
    9586:	e8 34 8d 00 00       	call   122bf <do_eaccept>
    958b:	85 c0                	test   %eax,%eax
    958d:	0f 85 82 00 00 00    	jne    9615 <ema_do_uncommit_real+0x1d5>
    9593:	49 81 c6 00 10 00 00 	add    $0x1000,%r14
    959a:	4d 39 fe             	cmp    %r15,%r14
    959d:	72 e1                	jb     9580 <ema_do_uncommit_real+0x140>
    959f:	4c 8b 74 24 30       	mov    0x30(%rsp),%r14
    95a4:	4c 8b 6c 24 38       	mov    0x38(%rsp),%r13
    95a9:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    95ad:	4c 89 f2             	mov    %r14,%rdx
    95b0:	4c 89 ee             	mov    %r13,%rsi
    95b3:	48 2b 33             	sub    (%rbx),%rsi
    95b6:	48 c1 ea 0c          	shr    $0xc,%rdx
    95ba:	48 c1 ee 0c          	shr    $0xc,%rsi
    95be:	e8 1d fb ff ff       	call   90e0 <bit_array_reset_range>
    95c3:	8b 4c 24 2c          	mov    0x2c(%rsp),%ecx
    95c7:	4c 89 f6             	mov    %r14,%rsi
    95ca:	4c 89 ef             	mov    %r13,%rdi
    95cd:	89 ca                	mov    %ecx,%edx
    95cf:	e8 9c c1 ff ff       	call   5770 <sgx_mm_modify_ocall>
    95d4:	85 c0                	test   %eax,%eax
    95d6:	0f 84 e4 fe ff ff    	je     94c0 <ema_do_uncommit_real+0x80>
    95dc:	b8 0e 00 00 00       	mov    $0xe,%eax
    95e1:	eb 02                	jmp    95e5 <ema_do_uncommit_real+0x1a5>
    95e3:	31 c0                	xor    %eax,%eax
    95e5:	48 8b 94 24 b8 00 00 	mov    0xb8(%rsp),%rdx
    95ec:	00 
    95ed:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    95f4:	00 00 
    95f6:	75 22                	jne    961a <ema_do_uncommit_real+0x1da>
    95f8:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    95fc:	5b                   	pop    %rbx
    95fd:	41 5c                	pop    %r12
    95ff:	41 5d                	pop    %r13
    9601:	41 5e                	pop    %r14
    9603:	41 5f                	pop    %r15
    9605:	5d                   	pop    %rbp
    9606:	c3                   	ret    
    9607:	48 c7 44 24 30 00 10 	movq   $0x1000,0x30(%rsp)
    960e:	00 00 
    9610:	e9 36 ff ff ff       	jmp    954b <ema_do_uncommit_real+0x10b>
    9615:	e8 1d 8d 00 00       	call   12337 <abort>
    961a:	e8 51 72 00 00       	call   10870 <__stack_chk_fail>
    961f:	90                   	nop

0000000000009620 <get_ema_alloc_flags>:
    9620:	f3 0f 1e fa          	endbr64 
    9624:	8b 47 10             	mov    0x10(%rdi),%eax
    9627:	c3                   	ret    
    9628:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    962f:	00 

0000000000009630 <get_ema_si_flags>:
    9630:	f3 0f 1e fa          	endbr64 
    9634:	48 8b 47 18          	mov    0x18(%rdi),%rax
    9638:	c3                   	ret    
    9639:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000009640 <ema_fault_handler>:
    9640:	f3 0f 1e fa          	endbr64 
    9644:	48 85 f6             	test   %rsi,%rsi
    9647:	74 07                	je     9650 <ema_fault_handler+0x10>
    9649:	48 8b 47 30          	mov    0x30(%rdi),%rax
    964d:	48 89 06             	mov    %rax,(%rsi)
    9650:	48 8b 47 28          	mov    0x28(%rdi),%rax
    9654:	c3                   	ret    
    9655:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    965c:	00 00 00 
    965f:	90                   	nop

0000000000009660 <ema_set_eaccept_full>:
    9660:	f3 0f 1e fa          	endbr64 
    9664:	53                   	push   %rbx
    9665:	48 89 fb             	mov    %rdi,%rbx
    9668:	48 8b 7f 20          	mov    0x20(%rdi),%rdi
    966c:	48 85 ff             	test   %rdi,%rdi
    966f:	74 0f                	je     9680 <ema_set_eaccept_full+0x20>
    9671:	e8 2a fa ff ff       	call   90a0 <bit_array_set_all>
    9676:	31 c0                	xor    %eax,%eax
    9678:	5b                   	pop    %rbx
    9679:	c3                   	ret    
    967a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9680:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    9684:	48 c1 ef 0c          	shr    $0xc,%rdi
    9688:	e8 e3 f6 ff ff       	call   8d70 <bit_array_new_set>
    968d:	48 89 43 20          	mov    %rax,0x20(%rbx)
    9691:	48 85 c0             	test   %rax,%rax
    9694:	75 e0                	jne    9676 <ema_set_eaccept_full+0x16>
    9696:	b8 0c 00 00 00       	mov    $0xc,%eax
    969b:	5b                   	pop    %rbx
    969c:	c3                   	ret    
    969d:	0f 1f 00             	nopl   (%rax)

00000000000096a0 <ema_clear_eaccept_full>:
    96a0:	f3 0f 1e fa          	endbr64 
    96a4:	53                   	push   %rbx
    96a5:	48 89 fb             	mov    %rdi,%rbx
    96a8:	48 8b 7f 20          	mov    0x20(%rdi),%rdi
    96ac:	48 85 ff             	test   %rdi,%rdi
    96af:	74 0f                	je     96c0 <ema_clear_eaccept_full+0x20>
    96b1:	e8 ea fa ff ff       	call   91a0 <bit_array_reset_all>
    96b6:	31 c0                	xor    %eax,%eax
    96b8:	5b                   	pop    %rbx
    96b9:	c3                   	ret    
    96ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    96c0:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    96c4:	48 c1 ef 0c          	shr    $0xc,%rdi
    96c8:	e8 d3 f6 ff ff       	call   8da0 <bit_array_new_reset>
    96cd:	48 89 43 20          	mov    %rax,0x20(%rbx)
    96d1:	48 85 c0             	test   %rax,%rax
    96d4:	75 e0                	jne    96b6 <ema_clear_eaccept_full+0x16>
    96d6:	b8 0c 00 00 00       	mov    $0xc,%eax
    96db:	5b                   	pop    %rbx
    96dc:	c3                   	ret    
    96dd:	0f 1f 00             	nopl   (%rax)

00000000000096e0 <ema_set_eaccept>:
    96e0:	f3 0f 1e fa          	endbr64 
    96e4:	48 85 ff             	test   %rdi,%rdi
    96e7:	74 6f                	je     9758 <ema_set_eaccept+0x78>
    96e9:	55                   	push   %rbp
    96ea:	48 89 fd             	mov    %rdi,%rbp
    96ed:	48 83 ec 10          	sub    $0x10,%rsp
    96f1:	48 8b 07             	mov    (%rdi),%rax
    96f4:	48 8b 7f 20          	mov    0x20(%rdi),%rdi
    96f8:	48 29 c6             	sub    %rax,%rsi
    96fb:	48 29 c2             	sub    %rax,%rdx
    96fe:	48 c1 ee 0c          	shr    $0xc,%rsi
    9702:	48 c1 ea 0c          	shr    $0xc,%rdx
    9706:	48 85 ff             	test   %rdi,%rdi
    9709:	74 15                	je     9720 <ema_set_eaccept+0x40>
    970b:	48 29 f2             	sub    %rsi,%rdx
    970e:	e8 cd f8 ff ff       	call   8fe0 <bit_array_set_range>
    9713:	31 c0                	xor    %eax,%eax
    9715:	48 83 c4 10          	add    $0x10,%rsp
    9719:	5d                   	pop    %rbp
    971a:	c3                   	ret    
    971b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9720:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
    9724:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    9729:	48 89 34 24          	mov    %rsi,(%rsp)
    972d:	48 c1 ef 0c          	shr    $0xc,%rdi
    9731:	e8 6a f6 ff ff       	call   8da0 <bit_array_new_reset>
    9736:	48 8b 34 24          	mov    (%rsp),%rsi
    973a:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    973f:	48 85 c0             	test   %rax,%rax
    9742:	48 89 45 20          	mov    %rax,0x20(%rbp)
    9746:	48 89 c7             	mov    %rax,%rdi
    9749:	75 c0                	jne    970b <ema_set_eaccept+0x2b>
    974b:	b8 0c 00 00 00       	mov    $0xc,%eax
    9750:	eb c3                	jmp    9715 <ema_set_eaccept+0x35>
    9752:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9758:	b8 16 00 00 00       	mov    $0x16,%eax
    975d:	c3                   	ret    
    975e:	66 90                	xchg   %ax,%ax

0000000000009760 <ema_page_committed>:
    9760:	f3 0f 1e fa          	endbr64 
    9764:	48 8b 47 20          	mov    0x20(%rdi),%rax
    9768:	48 85 c0             	test   %rax,%rax
    976b:	74 13                	je     9780 <ema_page_committed+0x20>
    976d:	48 2b 37             	sub    (%rdi),%rsi
    9770:	48 89 c7             	mov    %rax,%rdi
    9773:	48 c1 ee 0c          	shr    $0xc,%rsi
    9777:	e9 74 f6 ff ff       	jmp    8df0 <bit_array_test>
    977c:	0f 1f 40 00          	nopl   0x0(%rax)
    9780:	31 c0                	xor    %eax,%eax
    9782:	c3                   	ret    
    9783:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    978a:	00 00 00 
    978d:	0f 1f 00             	nopl   (%rax)

0000000000009790 <search_ema>:
    9790:	f3 0f 1e fa          	endbr64 
    9794:	48 8b 0f             	mov    (%rdi),%rcx
    9797:	48 8b 41 38          	mov    0x38(%rcx),%rax
    979b:	48 39 c1             	cmp    %rax,%rcx
    979e:	74 1a                	je     97ba <search_ema+0x2a>
    97a0:	48 8b 10             	mov    (%rax),%rdx
    97a3:	48 39 d6             	cmp    %rdx,%rsi
    97a6:	72 09                	jb     97b1 <search_ema+0x21>
    97a8:	48 03 50 08          	add    0x8(%rax),%rdx
    97ac:	48 39 d6             	cmp    %rdx,%rsi
    97af:	72 0b                	jb     97bc <search_ema+0x2c>
    97b1:	48 8b 40 38          	mov    0x38(%rax),%rax
    97b5:	48 39 c1             	cmp    %rax,%rcx
    97b8:	75 e6                	jne    97a0 <search_ema+0x10>
    97ba:	31 c0                	xor    %eax,%eax
    97bc:	c3                   	ret    
    97bd:	0f 1f 00             	nopl   (%rax)

00000000000097c0 <insert_ema>:
    97c0:	f3 0f 1e fa          	endbr64 
    97c4:	48 8b 56 40          	mov    0x40(%rsi),%rdx
    97c8:	66 48 0f 6e c6       	movq   %rsi,%xmm0
    97cd:	48 89 f8             	mov    %rdi,%rax
    97d0:	66 48 0f 6e ca       	movq   %rdx,%xmm1
    97d5:	66 0f 6c c1          	punpcklqdq %xmm1,%xmm0
    97d9:	0f 11 47 38          	movups %xmm0,0x38(%rdi)
    97dd:	48 89 7a 38          	mov    %rdi,0x38(%rdx)
    97e1:	48 89 7e 40          	mov    %rdi,0x40(%rsi)
    97e5:	c3                   	ret    
    97e6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    97ed:	00 00 00 

00000000000097f0 <push_back_ema>:
    97f0:	f3 0f 1e fa          	endbr64 
    97f4:	48 8b 07             	mov    (%rdi),%rax
    97f7:	48 8b 50 40          	mov    0x40(%rax),%rdx
    97fb:	66 48 0f 6e c0       	movq   %rax,%xmm0
    9800:	66 48 0f 6e ca       	movq   %rdx,%xmm1
    9805:	66 0f 6c c1          	punpcklqdq %xmm1,%xmm0
    9809:	0f 11 46 38          	movups %xmm0,0x38(%rsi)
    980d:	48 89 72 38          	mov    %rsi,0x38(%rdx)
    9811:	48 89 70 40          	mov    %rsi,0x40(%rax)
    9815:	c3                   	ret    
    9816:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    981d:	00 00 00 

0000000000009820 <search_ema_range>:
    9820:	f3 0f 1e fa          	endbr64 
    9824:	4c 8b 0f             	mov    (%rdi),%r9
    9827:	49 89 fa             	mov    %rdi,%r10
    982a:	49 8b 41 38          	mov    0x38(%r9),%rax
    982e:	49 39 c1             	cmp    %rax,%r9
    9831:	75 0e                	jne    9841 <search_ema_range+0x21>
    9833:	eb 4b                	jmp    9880 <search_ema_range+0x60>
    9835:	0f 1f 00             	nopl   (%rax)
    9838:	48 8b 40 38          	mov    0x38(%rax),%rax
    983c:	49 39 c1             	cmp    %rax,%r9
    983f:	74 3f                	je     9880 <search_ema_range+0x60>
    9841:	48 8b 38             	mov    (%rax),%rdi
    9844:	48 03 78 08          	add    0x8(%rax),%rdi
    9848:	48 39 fe             	cmp    %rdi,%rsi
    984b:	73 eb                	jae    9838 <search_ema_range+0x18>
    984d:	49 39 c1             	cmp    %rax,%r9
    9850:	74 2e                	je     9880 <search_ema_range+0x60>
    9852:	48 39 10             	cmp    %rdx,(%rax)
    9855:	73 29                	jae    9880 <search_ema_range+0x60>
    9857:	48 89 01             	mov    %rax,(%rcx)
    985a:	49 8b 0a             	mov    (%r10),%rcx
    985d:	48 39 c1             	cmp    %rax,%rcx
    9860:	74 14                	je     9876 <search_ema_range+0x56>
    9862:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9868:	48 8b 40 38          	mov    0x38(%rax),%rax
    986c:	48 39 c1             	cmp    %rax,%rcx
    986f:	74 05                	je     9876 <search_ema_range+0x56>
    9871:	48 39 10             	cmp    %rdx,(%rax)
    9874:	72 f2                	jb     9868 <search_ema_range+0x48>
    9876:	31 d2                	xor    %edx,%edx
    9878:	49 89 00             	mov    %rax,(%r8)
    987b:	89 d0                	mov    %edx,%eax
    987d:	c3                   	ret    
    987e:	66 90                	xchg   %ax,%ax
    9880:	48 c7 01 00 00 00 00 	movq   $0x0,(%rcx)
    9887:	31 c0                	xor    %eax,%eax
    9889:	ba ff ff ff ff       	mov    $0xffffffff,%edx
    988e:	eb e8                	jmp    9878 <search_ema_range+0x58>

0000000000009890 <ema_split>:
    9890:	f3 0f 1e fa          	endbr64 
    9894:	41 56                	push   %r14
    9896:	41 89 d6             	mov    %edx,%r14d
    9899:	41 55                	push   %r13
    989b:	49 89 cd             	mov    %rcx,%r13
    989e:	41 54                	push   %r12
    98a0:	49 89 f4             	mov    %rsi,%r12
    98a3:	55                   	push   %rbp
    98a4:	53                   	push   %rbx
    98a5:	48 89 fb             	mov    %rdi,%rbx
    98a8:	bf 48 00 00 00       	mov    $0x48,%edi
    98ad:	48 83 ec 30          	sub    $0x30,%rsp
    98b1:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    98b8:	00 00 
    98ba:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    98bf:	31 c0                	xor    %eax,%eax
    98c1:	e8 fa 19 00 00       	call   b2c0 <emalloc>
    98c6:	48 85 c0             	test   %rax,%rax
    98c9:	0f 84 39 01 00 00    	je     9a08 <ema_split+0x178>
    98cf:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
    98d6:	00 00 
    98d8:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    98dc:	48 89 c5             	mov    %rax,%rbp
    98df:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    98e6:	00 00 
    98e8:	48 85 ff             	test   %rdi,%rdi
    98eb:	74 21                	je     990e <ema_split+0x7e>
    98ed:	4c 89 e6             	mov    %r12,%rsi
    98f0:	48 8d 4c 24 20       	lea    0x20(%rsp),%rcx
    98f5:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
    98fa:	48 2b 33             	sub    (%rbx),%rsi
    98fd:	48 c1 ee 0c          	shr    $0xc,%rsi
    9901:	e8 fa f8 ff ff       	call   9200 <bit_array_split>
    9906:	85 c0                	test   %eax,%eax
    9908:	0f 85 e2 00 00 00    	jne    99f0 <ema_split+0x160>
    990e:	ba 48 00 00 00       	mov    $0x48,%edx
    9913:	48 89 de             	mov    %rbx,%rsi
    9916:	48 89 ef             	mov    %rbp,%rdi
    9919:	e8 42 6c 00 00       	call   10560 <memcpy>
    991e:	45 84 f6             	test   %r14b,%r14b
    9921:	0f 85 99 00 00 00    	jne    99c0 <ema_split+0x130>
    9927:	48 8b 43 38          	mov    0x38(%rbx),%rax
    992b:	48 89 d9             	mov    %rbx,%rcx
    992e:	48 8b 50 40          	mov    0x40(%rax),%rdx
    9932:	66 48 0f 6e c0       	movq   %rax,%xmm0
    9937:	66 48 0f 6e da       	movq   %rdx,%xmm3
    993c:	66 0f 6c c3          	punpcklqdq %xmm3,%xmm0
    9940:	0f 11 45 38          	movups %xmm0,0x38(%rbp)
    9944:	48 89 6a 38          	mov    %rbp,0x38(%rdx)
    9948:	48 89 ea             	mov    %rbp,%rdx
    994b:	48 89 68 40          	mov    %rbp,0x40(%rax)
    994f:	48 8b 03             	mov    (%rbx),%rax
    9952:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    9956:	4c 89 e7             	mov    %r12,%rdi
    9959:	48 29 c7             	sub    %rax,%rdi
    995c:	66 48 0f 6e c0       	movq   %rax,%xmm0
    9961:	48 01 f0             	add    %rsi,%rax
    9964:	66 48 0f 6e cf       	movq   %rdi,%xmm1
    9969:	4c 29 e0             	sub    %r12,%rax
    996c:	48 83 7b 20 00       	cmpq   $0x0,0x20(%rbx)
    9971:	66 0f 6c c1          	punpcklqdq %xmm1,%xmm0
    9975:	0f 11 01             	movups %xmm0,(%rcx)
    9978:	4c 89 22             	mov    %r12,(%rdx)
    997b:	48 89 42 08          	mov    %rax,0x8(%rdx)
    997f:	74 12                	je     9993 <ema_split+0x103>
    9981:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    9986:	48 89 41 20          	mov    %rax,0x20(%rcx)
    998a:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    998f:	48 89 42 20          	mov    %rax,0x20(%rdx)
    9993:	49 89 6d 00          	mov    %rbp,0x0(%r13)
    9997:	31 c0                	xor    %eax,%eax
    9999:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    999e:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    99a5:	00 00 
    99a7:	75 66                	jne    9a0f <ema_split+0x17f>
    99a9:	48 83 c4 30          	add    $0x30,%rsp
    99ad:	5b                   	pop    %rbx
    99ae:	5d                   	pop    %rbp
    99af:	41 5c                	pop    %r12
    99b1:	41 5d                	pop    %r13
    99b3:	41 5e                	pop    %r14
    99b5:	c3                   	ret    
    99b6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    99bd:	00 00 00 
    99c0:	48 8b 43 40          	mov    0x40(%rbx),%rax
    99c4:	66 48 0f 6e c3       	movq   %rbx,%xmm0
    99c9:	48 89 da             	mov    %rbx,%rdx
    99cc:	48 89 e9             	mov    %rbp,%rcx
    99cf:	66 48 0f 6e d0       	movq   %rax,%xmm2
    99d4:	66 0f 6c c2          	punpcklqdq %xmm2,%xmm0
    99d8:	0f 11 45 38          	movups %xmm0,0x38(%rbp)
    99dc:	48 89 68 38          	mov    %rbp,0x38(%rax)
    99e0:	48 89 6b 40          	mov    %rbp,0x40(%rbx)
    99e4:	e9 66 ff ff ff       	jmp    994f <ema_split+0xbf>
    99e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    99f0:	48 89 ef             	mov    %rbp,%rdi
    99f3:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    99f7:	e8 44 1b 00 00       	call   b540 <efree>
    99fc:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    9a00:	eb 97                	jmp    9999 <ema_split+0x109>
    9a02:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9a08:	b8 0c 00 00 00       	mov    $0xc,%eax
    9a0d:	eb 8a                	jmp    9999 <ema_split+0x109>
    9a0f:	e8 5c 6e 00 00       	call   10870 <__stack_chk_fail>
    9a14:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    9a1b:	00 00 00 
    9a1e:	66 90                	xchg   %ax,%ax

0000000000009a20 <ema_split_ex>:
    9a20:	f3 0f 1e fa          	endbr64 
    9a24:	41 54                	push   %r12
    9a26:	49 89 cc             	mov    %rcx,%r12
    9a29:	55                   	push   %rbp
    9a2a:	48 89 d5             	mov    %rdx,%rbp
    9a2d:	53                   	push   %rbx
    9a2e:	48 89 fb             	mov    %rdi,%rbx
    9a31:	48 83 ec 10          	sub    $0x10,%rsp
    9a35:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    9a3c:	00 00 
    9a3e:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    9a43:	48 8b 07             	mov    (%rdi),%rax
    9a46:	48 39 f0             	cmp    %rsi,%rax
    9a49:	72 35                	jb     9a80 <ema_split_ex+0x60>
    9a4b:	48 03 43 08          	add    0x8(%rbx),%rax
    9a4f:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    9a56:	00 
    9a57:	48 39 c5             	cmp    %rax,%rbp
    9a5a:	72 44                	jb     9aa0 <ema_split_ex+0x80>
    9a5c:	48 89 d8             	mov    %rbx,%rax
    9a5f:	49 89 04 24          	mov    %rax,(%r12)
    9a63:	31 c0                	xor    %eax,%eax
    9a65:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    9a6a:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    9a71:	00 00 
    9a73:	75 5b                	jne    9ad0 <ema_split_ex+0xb0>
    9a75:	48 83 c4 10          	add    $0x10,%rsp
    9a79:	5b                   	pop    %rbx
    9a7a:	5d                   	pop    %rbp
    9a7b:	41 5c                	pop    %r12
    9a7d:	c3                   	ret    
    9a7e:	66 90                	xchg   %ax,%ax
    9a80:	31 d2                	xor    %edx,%edx
    9a82:	48 89 e1             	mov    %rsp,%rcx
    9a85:	e8 06 fe ff ff       	call   9890 <ema_split>
    9a8a:	85 c0                	test   %eax,%eax
    9a8c:	75 d7                	jne    9a65 <ema_split_ex+0x45>
    9a8e:	48 8b 14 24          	mov    (%rsp),%rdx
    9a92:	48 85 d2             	test   %rdx,%rdx
    9a95:	74 31                	je     9ac8 <ema_split_ex+0xa8>
    9a97:	48 8b 02             	mov    (%rdx),%rax
    9a9a:	48 89 d3             	mov    %rdx,%rbx
    9a9d:	eb ac                	jmp    9a4b <ema_split_ex+0x2b>
    9a9f:	90                   	nop
    9aa0:	48 89 e1             	mov    %rsp,%rcx
    9aa3:	ba 01 00 00 00       	mov    $0x1,%edx
    9aa8:	48 89 ee             	mov    %rbp,%rsi
    9aab:	48 89 df             	mov    %rbx,%rdi
    9aae:	e8 dd fd ff ff       	call   9890 <ema_split>
    9ab3:	85 c0                	test   %eax,%eax
    9ab5:	75 ae                	jne    9a65 <ema_split_ex+0x45>
    9ab7:	48 8b 04 24          	mov    (%rsp),%rax
    9abb:	48 85 c0             	test   %rax,%rax
    9abe:	75 9f                	jne    9a5f <ema_split_ex+0x3f>
    9ac0:	eb 9a                	jmp    9a5c <ema_split_ex+0x3c>
    9ac2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9ac8:	48 8b 03             	mov    (%rbx),%rax
    9acb:	e9 7b ff ff ff       	jmp    9a4b <ema_split_ex+0x2b>
    9ad0:	e8 9b 6d 00 00       	call   10870 <__stack_chk_fail>
    9ad5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    9adc:	00 00 00 
    9adf:	90                   	nop

0000000000009ae0 <find_free_region>:
    9ae0:	f3 0f 1e fa          	endbr64 
    9ae4:	41 57                	push   %r15
    9ae6:	49 89 cf             	mov    %rcx,%r15
    9ae9:	41 56                	push   %r14
    9aeb:	49 89 fe             	mov    %rdi,%r14
    9aee:	41 55                	push   %r13
    9af0:	49 89 d5             	mov    %rdx,%r13
    9af3:	41 54                	push   %r12
    9af5:	49 f7 dd             	neg    %r13
    9af8:	55                   	push   %rbp
    9af9:	48 89 f5             	mov    %rsi,%rbp
    9afc:	53                   	push   %rbx
    9afd:	48 89 d3             	mov    %rdx,%rbx
    9b00:	48 83 ec 18          	sub    $0x18,%rsp
    9b04:	4c 8b 27             	mov    (%rdi),%r12
    9b07:	49 8b 4c 24 38       	mov    0x38(%r12),%rcx
    9b0c:	49 c7 00 00 00 00 00 	movq   $0x0,(%r8)
    9b13:	49 c7 07 00 00 00 00 	movq   $0x0,(%r15)
    9b1a:	49 39 cc             	cmp    %rcx,%r12
    9b1d:	0f 84 a5 00 00 00    	je     9bc8 <find_free_region+0xe8>
    9b23:	48 8b 51 38          	mov    0x38(%rcx),%rdx
    9b27:	4c 8b 11             	mov    (%rcx),%r10
    9b2a:	48 8d 73 ff          	lea    -0x1(%rbx),%rsi
    9b2e:	49 39 d4             	cmp    %rdx,%r12
    9b31:	0f 84 02 01 00 00    	je     9c39 <find_free_region+0x159>
    9b37:	4c 8b 0d c2 0e 02 00 	mov    0x20ec2(%rip),%r9        # 2aa00 <mm_user_end>
    9b3e:	48 89 c8             	mov    %rcx,%rax
    9b41:	48 8d 3d 20 05 01 00 	lea    0x10520(%rip),%rdi        # 1a068 <g_rts_ema_root>
    9b48:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    9b4f:	00 
    9b50:	48 8b 58 08          	mov    0x8(%rax),%rbx
    9b54:	48 01 f3             	add    %rsi,%rbx
    9b57:	48 89 d8             	mov    %rbx,%rax
    9b5a:	4c 01 d0             	add    %r10,%rax
    9b5d:	4c 8b 12             	mov    (%rdx),%r10
    9b60:	4c 21 e8             	and    %r13,%rax
    9b63:	49 39 c2             	cmp    %rax,%r10
    9b66:	72 48                	jb     9bb0 <find_free_region+0xd0>
    9b68:	4d 89 d3             	mov    %r10,%r11
    9b6b:	49 29 c3             	sub    %rax,%r11
    9b6e:	49 39 eb             	cmp    %rbp,%r11
    9b71:	72 3d                	jb     9bb0 <find_free_region+0xd0>
    9b73:	49 39 fe             	cmp    %rdi,%r14
    9b76:	75 16                	jne    9b8e <find_free_region+0xae>
    9b78:	49 89 eb             	mov    %rbp,%r11
    9b7b:	49 01 c3             	add    %rax,%r11
    9b7e:	72 30                	jb     9bb0 <find_free_region+0xd0>
    9b80:	4c 39 c8             	cmp    %r9,%rax
    9b83:	73 09                	jae    9b8e <find_free_region+0xae>
    9b85:	4c 39 1d 7c 0e 02 00 	cmp    %r11,0x20e7c(%rip)        # 2aa08 <mm_user_base>
    9b8c:	72 22                	jb     9bb0 <find_free_region+0xd0>
    9b8e:	49 89 10             	mov    %rdx,(%r8)
    9b91:	49 89 07             	mov    %rax,(%r15)
    9b94:	48 83 c4 18          	add    $0x18,%rsp
    9b98:	b8 01 00 00 00       	mov    $0x1,%eax
    9b9d:	5b                   	pop    %rbx
    9b9e:	5d                   	pop    %rbp
    9b9f:	41 5c                	pop    %r12
    9ba1:	41 5d                	pop    %r13
    9ba3:	41 5e                	pop    %r14
    9ba5:	41 5f                	pop    %r15
    9ba7:	c3                   	ret    
    9ba8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    9baf:	00 
    9bb0:	48 8b 5a 38          	mov    0x38(%rdx),%rbx
    9bb4:	48 89 d0             	mov    %rdx,%rax
    9bb7:	49 39 dc             	cmp    %rbx,%r12
    9bba:	0f 84 80 00 00 00    	je     9c40 <find_free_region+0x160>
    9bc0:	48 89 da             	mov    %rbx,%rdx
    9bc3:	eb 8b                	jmp    9b50 <find_free_region+0x70>
    9bc5:	0f 1f 00             	nopl   (%rax)
    9bc8:	48 8d 05 99 04 01 00 	lea    0x10499(%rip),%rax        # 1a068 <g_rts_ema_root>
    9bcf:	48 8b 15 32 0e 02 00 	mov    0x20e32(%rip),%rdx        # 2aa08 <mm_user_base>
    9bd6:	48 39 c7             	cmp    %rax,%rdi
    9bd9:	74 25                	je     9c00 <find_free_region+0x120>
    9bdb:	48 8d 44 1a ff       	lea    -0x1(%rdx,%rbx,1),%rax
    9be0:	4c 21 e8             	and    %r13,%rax
    9be3:	48 01 c5             	add    %rax,%rbp
    9be6:	72 40                	jb     9c28 <find_free_region+0x148>
    9be8:	48 39 d0             	cmp    %rdx,%rax
    9beb:	72 3b                	jb     9c28 <find_free_region+0x148>
    9bed:	48 39 2d 0c 0e 02 00 	cmp    %rbp,0x20e0c(%rip)        # 2aa00 <mm_user_end>
    9bf4:	72 32                	jb     9c28 <find_free_region+0x148>
    9bf6:	49 89 07             	mov    %rax,(%r15)
    9bf9:	4d 89 20             	mov    %r12,(%r8)
    9bfc:	eb 96                	jmp    9b94 <find_free_region+0xb4>
    9bfe:	66 90                	xchg   %ax,%ax
    9c00:	48 39 f2             	cmp    %rsi,%rdx
    9c03:	0f 83 be 01 00 00    	jae    9dc7 <find_free_region+0x2e7>
    9c09:	48 8b 05 f0 0d 02 00 	mov    0x20df0(%rip),%rax        # 2aa00 <mm_user_end>
    9c10:	4c 8d 74 03 ff       	lea    -0x1(%rbx,%rax,1),%r14
    9c15:	48 89 e8             	mov    %rbp,%rax
    9c18:	4d 21 ee             	and    %r13,%r14
    9c1b:	4c 01 f0             	add    %r14,%rax
    9c1e:	0f 83 e4 00 00 00    	jae    9d08 <find_free_region+0x228>
    9c24:	0f 1f 40 00          	nopl   0x0(%rax)
    9c28:	31 c0                	xor    %eax,%eax
    9c2a:	48 83 c4 18          	add    $0x18,%rsp
    9c2e:	5b                   	pop    %rbx
    9c2f:	5d                   	pop    %rbp
    9c30:	41 5c                	pop    %r12
    9c32:	41 5d                	pop    %r13
    9c34:	41 5e                	pop    %r14
    9c36:	41 5f                	pop    %r15
    9c38:	c3                   	ret    
    9c39:	48 89 d3             	mov    %rdx,%rbx
    9c3c:	48 89 ca             	mov    %rcx,%rdx
    9c3f:	90                   	nop
    9c40:	4d 8d 24 32          	lea    (%r10,%rsi,1),%r12
    9c44:	4c 03 62 08          	add    0x8(%rdx),%r12
    9c48:	48 89 ee             	mov    %rbp,%rsi
    9c4b:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    9c50:	4d 21 ec             	and    %r13,%r12
    9c53:	48 89 0c 24          	mov    %rcx,(%rsp)
    9c57:	4c 89 e7             	mov    %r12,%rdi
    9c5a:	e8 a1 bc ff ff       	call   5900 <sgx_mm_is_within_enclave>
    9c5f:	48 8b 0c 24          	mov    (%rsp),%rcx
    9c63:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
    9c68:	84 c0                	test   %al,%al
    9c6a:	74 4c                	je     9cb8 <find_free_region+0x1d8>
    9c6c:	48 89 ee             	mov    %rbp,%rsi
    9c6f:	31 d2                	xor    %edx,%edx
    9c71:	48 8d 05 f0 03 01 00 	lea    0x103f0(%rip),%rax        # 1a068 <g_rts_ema_root>
    9c78:	4c 01 e6             	add    %r12,%rsi
    9c7b:	0f 92 c2             	setb   %dl
    9c7e:	49 39 c6             	cmp    %rax,%r14
    9c81:	0f 84 a7 00 00 00    	je     9d2e <find_free_region+0x24e>
    9c87:	48 85 d2             	test   %rdx,%rdx
    9c8a:	0f 85 20 01 00 00    	jne    9db0 <find_free_region+0x2d0>
    9c90:	4c 3b 25 71 0d 02 00 	cmp    0x20d71(%rip),%r12        # 2aa08 <mm_user_base>
    9c97:	0f 82 13 01 00 00    	jb     9db0 <find_free_region+0x2d0>
    9c9d:	48 39 35 5c 0d 02 00 	cmp    %rsi,0x20d5c(%rip)        # 2aa00 <mm_user_end>
    9ca4:	0f 82 06 01 00 00    	jb     9db0 <find_free_region+0x2d0>
    9caa:	49 89 18             	mov    %rbx,(%r8)
    9cad:	4d 89 27             	mov    %r12,(%r15)
    9cb0:	e9 df fe ff ff       	jmp    9b94 <find_free_region+0xb4>
    9cb5:	0f 1f 00             	nopl   (%rax)
    9cb8:	48 8b 19             	mov    (%rcx),%rbx
    9cbb:	48 39 eb             	cmp    %rbp,%rbx
    9cbe:	0f 82 64 ff ff ff    	jb     9c28 <find_free_region+0x148>
    9cc4:	48 29 eb             	sub    %rbp,%rbx
    9cc7:	48 8d 05 9a 03 01 00 	lea    0x1039a(%rip),%rax        # 1a068 <g_rts_ema_root>
    9cce:	4c 21 eb             	and    %r13,%rbx
    9cd1:	49 39 c6             	cmp    %rax,%r14
    9cd4:	0f 84 85 00 00 00    	je     9d5f <find_free_region+0x27f>
    9cda:	48 01 dd             	add    %rbx,%rbp
    9cdd:	0f 82 45 ff ff ff    	jb     9c28 <find_free_region+0x148>
    9ce3:	48 3b 1d 1e 0d 02 00 	cmp    0x20d1e(%rip),%rbx        # 2aa08 <mm_user_base>
    9cea:	0f 82 38 ff ff ff    	jb     9c28 <find_free_region+0x148>
    9cf0:	48 39 2d 09 0d 02 00 	cmp    %rbp,0x20d09(%rip)        # 2aa00 <mm_user_end>
    9cf7:	0f 82 2b ff ff ff    	jb     9c28 <find_free_region+0x148>
    9cfd:	49 89 1f             	mov    %rbx,(%r15)
    9d00:	49 89 08             	mov    %rcx,(%r8)
    9d03:	e9 8c fe ff ff       	jmp    9b94 <find_free_region+0xb4>
    9d08:	48 89 ee             	mov    %rbp,%rsi
    9d0b:	4c 89 f7             	mov    %r14,%rdi
    9d0e:	4c 89 04 24          	mov    %r8,(%rsp)
    9d12:	e8 e9 bb ff ff       	call   5900 <sgx_mm_is_within_enclave>
    9d17:	4c 8b 04 24          	mov    (%rsp),%r8
    9d1b:	84 c0                	test   %al,%al
    9d1d:	0f 84 05 ff ff ff    	je     9c28 <find_free_region+0x148>
    9d23:	4d 89 37             	mov    %r14,(%r15)
    9d26:	4d 89 20             	mov    %r12,(%r8)
    9d29:	e9 66 fe ff ff       	jmp    9b94 <find_free_region+0xb4>
    9d2e:	48 85 d2             	test   %rdx,%rdx
    9d31:	75 1a                	jne    9d4d <find_free_region+0x26d>
    9d33:	4c 3b 25 c6 0c 02 00 	cmp    0x20cc6(%rip),%r12        # 2aa00 <mm_user_end>
    9d3a:	0f 83 6a ff ff ff    	jae    9caa <find_free_region+0x1ca>
    9d40:	48 39 35 c1 0c 02 00 	cmp    %rsi,0x20cc1(%rip)        # 2aa08 <mm_user_base>
    9d47:	0f 83 5d ff ff ff    	jae    9caa <find_free_region+0x1ca>
    9d4d:	48 8b 19             	mov    (%rcx),%rbx
    9d50:	48 39 eb             	cmp    %rbp,%rbx
    9d53:	0f 82 cf fe ff ff    	jb     9c28 <find_free_region+0x148>
    9d59:	48 29 eb             	sub    %rbp,%rbx
    9d5c:	4c 21 eb             	and    %r13,%rbx
    9d5f:	48 89 ee             	mov    %rbp,%rsi
    9d62:	48 89 df             	mov    %rbx,%rdi
    9d65:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    9d6a:	48 89 0c 24          	mov    %rcx,(%rsp)
    9d6e:	e8 8d bb ff ff       	call   5900 <sgx_mm_is_within_enclave>
    9d73:	84 c0                	test   %al,%al
    9d75:	0f 84 ad fe ff ff    	je     9c28 <find_free_region+0x148>
    9d7b:	48 01 dd             	add    %rbx,%rbp
    9d7e:	0f 82 a4 fe ff ff    	jb     9c28 <find_free_region+0x148>
    9d84:	48 3b 1d 75 0c 02 00 	cmp    0x20c75(%rip),%rbx        # 2aa00 <mm_user_end>
    9d8b:	48 8b 0c 24          	mov    (%rsp),%rcx
    9d8f:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
    9d94:	0f 83 63 ff ff ff    	jae    9cfd <find_free_region+0x21d>
    9d9a:	48 39 2d 67 0c 02 00 	cmp    %rbp,0x20c67(%rip)        # 2aa08 <mm_user_base>
    9da1:	0f 83 56 ff ff ff    	jae    9cfd <find_free_region+0x21d>
    9da7:	31 c0                	xor    %eax,%eax
    9da9:	e9 7c fe ff ff       	jmp    9c2a <find_free_region+0x14a>
    9dae:	66 90                	xchg   %ax,%ax
    9db0:	48 8b 19             	mov    (%rcx),%rbx
    9db3:	48 39 eb             	cmp    %rbp,%rbx
    9db6:	0f 82 6c fe ff ff    	jb     9c28 <find_free_region+0x148>
    9dbc:	48 29 eb             	sub    %rbp,%rbx
    9dbf:	4c 21 eb             	and    %r13,%rbx
    9dc2:	e9 13 ff ff ff       	jmp    9cda <find_free_region+0x1fa>
    9dc7:	48 29 f2             	sub    %rsi,%rdx
    9dca:	4c 89 04 24          	mov    %r8,(%rsp)
    9dce:	4c 21 ea             	and    %r13,%rdx
    9dd1:	48 89 d7             	mov    %rdx,%rdi
    9dd4:	49 89 d6             	mov    %rdx,%r14
    9dd7:	e8 24 bb ff ff       	call   5900 <sgx_mm_is_within_enclave>
    9ddc:	4c 8b 04 24          	mov    (%rsp),%r8
    9de0:	84 c0                	test   %al,%al
    9de2:	0f 85 3b ff ff ff    	jne    9d23 <find_free_region+0x243>
    9de8:	e9 1c fe ff ff       	jmp    9c09 <find_free_region+0x129>
    9ded:	0f 1f 00             	nopl   (%rax)

0000000000009df0 <find_free_region_at>:
    9df0:	f3 0f 1e fa          	endbr64 
    9df4:	41 55                	push   %r13
    9df6:	49 89 cd             	mov    %rcx,%r13
    9df9:	41 54                	push   %r12
    9dfb:	49 89 fc             	mov    %rdi,%r12
    9dfe:	55                   	push   %rbp
    9dff:	48 89 d5             	mov    %rdx,%rbp
    9e02:	53                   	push   %rbx
    9e03:	48 89 f3             	mov    %rsi,%rbx
    9e06:	48 89 d6             	mov    %rdx,%rsi
    9e09:	48 89 df             	mov    %rbx,%rdi
    9e0c:	48 83 ec 08          	sub    $0x8,%rsp
    9e10:	e8 eb ba ff ff       	call   5900 <sgx_mm_is_within_enclave>
    9e15:	31 c9                	xor    %ecx,%ecx
    9e17:	84 c0                	test   %al,%al
    9e19:	74 5f                	je     9e7a <find_free_region_at+0x8a>
    9e1b:	31 f6                	xor    %esi,%esi
    9e1d:	48 8d 15 44 02 01 00 	lea    0x10244(%rip),%rdx        # 1a068 <g_rts_ema_root>
    9e24:	48 01 dd             	add    %rbx,%rbp
    9e27:	40 0f 92 c6          	setb   %sil
    9e2b:	49 39 d4             	cmp    %rdx,%r12
    9e2e:	0f 84 7c 00 00 00    	je     9eb0 <find_free_region_at+0xc0>
    9e34:	48 85 f6             	test   %rsi,%rsi
    9e37:	75 5e                	jne    9e97 <find_free_region_at+0xa7>
    9e39:	48 3b 1d c8 0b 02 00 	cmp    0x20bc8(%rip),%rbx        # 2aa08 <mm_user_base>
    9e40:	72 55                	jb     9e97 <find_free_region_at+0xa7>
    9e42:	48 39 2d b7 0b 02 00 	cmp    %rbp,0x20bb7(%rip)        # 2aa00 <mm_user_end>
    9e49:	72 4c                	jb     9e97 <find_free_region_at+0xa7>
    9e4b:	49 8b 14 24          	mov    (%r12),%rdx
    9e4f:	48 8b 4a 38          	mov    0x38(%rdx),%rcx
    9e53:	48 39 ca             	cmp    %rcx,%rdx
    9e56:	75 1a                	jne    9e72 <find_free_region_at+0x82>
    9e58:	eb 20                	jmp    9e7a <find_free_region_at+0x8a>
    9e5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9e60:	48 03 71 08          	add    0x8(%rcx),%rsi
    9e64:	48 39 f3             	cmp    %rsi,%rbx
    9e67:	72 27                	jb     9e90 <find_free_region_at+0xa0>
    9e69:	48 8b 49 38          	mov    0x38(%rcx),%rcx
    9e6d:	48 39 ca             	cmp    %rcx,%rdx
    9e70:	74 08                	je     9e7a <find_free_region_at+0x8a>
    9e72:	48 8b 31             	mov    (%rcx),%rsi
    9e75:	48 39 ee             	cmp    %rbp,%rsi
    9e78:	72 e6                	jb     9e60 <find_free_region_at+0x70>
    9e7a:	49 89 4d 00          	mov    %rcx,0x0(%r13)
    9e7e:	48 83 c4 08          	add    $0x8,%rsp
    9e82:	5b                   	pop    %rbx
    9e83:	5d                   	pop    %rbp
    9e84:	41 5c                	pop    %r12
    9e86:	41 5d                	pop    %r13
    9e88:	c3                   	ret    
    9e89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9e90:	48 39 ca             	cmp    %rcx,%rdx
    9e93:	74 e5                	je     9e7a <find_free_region_at+0x8a>
    9e95:	31 c9                	xor    %ecx,%ecx
    9e97:	31 c0                	xor    %eax,%eax
    9e99:	49 89 4d 00          	mov    %rcx,0x0(%r13)
    9e9d:	48 83 c4 08          	add    $0x8,%rsp
    9ea1:	5b                   	pop    %rbx
    9ea2:	5d                   	pop    %rbp
    9ea3:	41 5c                	pop    %r12
    9ea5:	41 5d                	pop    %r13
    9ea7:	c3                   	ret    
    9ea8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    9eaf:	00 
    9eb0:	48 85 f6             	test   %rsi,%rsi
    9eb3:	75 e2                	jne    9e97 <find_free_region_at+0xa7>
    9eb5:	48 3b 1d 44 0b 02 00 	cmp    0x20b44(%rip),%rbx        # 2aa00 <mm_user_end>
    9ebc:	73 8d                	jae    9e4b <find_free_region_at+0x5b>
    9ebe:	48 39 2d 43 0b 02 00 	cmp    %rbp,0x20b43(%rip)        # 2aa08 <mm_user_base>
    9ec5:	73 84                	jae    9e4b <find_free_region_at+0x5b>
    9ec7:	31 c0                	xor    %eax,%eax
    9ec9:	eb ce                	jmp    9e99 <find_free_region_at+0xa9>
    9ecb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000009ed0 <ema_new>:
    9ed0:	f3 0f 1e fa          	endbr64 
    9ed4:	53                   	push   %rbx
    9ed5:	48 83 ec 50          	sub    $0x50,%rsp
    9ed9:	64 4c 8b 14 25 28 00 	mov    %fs:0x28,%r10
    9ee0:	00 00 
    9ee2:	4c 89 54 24 48       	mov    %r10,0x48(%rsp)
    9ee7:	45 31 d2             	xor    %r10d,%r10d
    9eea:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
    9eef:	89 54 24 10          	mov    %edx,0x10(%rsp)
    9ef3:	48 89 e3             	mov    %rsp,%rbx
    9ef6:	48 89 3c 24          	mov    %rdi,(%rsp)
    9efa:	bf 48 00 00 00       	mov    $0x48,%edi
    9eff:	48 8b 50 40          	mov    0x40(%rax),%rdx
    9f03:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    9f08:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    9f0d:	48 89 54 24 40       	mov    %rdx,0x40(%rsp)
    9f12:	48 89 5a 38          	mov    %rbx,0x38(%rdx)
    9f16:	48 89 58 40          	mov    %rbx,0x40(%rax)
    9f1a:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
    9f1f:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    9f26:	00 00 
    9f28:	4c 89 44 24 28       	mov    %r8,0x28(%rsp)
    9f2d:	4c 89 4c 24 30       	mov    %r9,0x30(%rsp)
    9f32:	e8 89 13 00 00       	call   b2c0 <emalloc>
    9f37:	48 85 c0             	test   %rax,%rax
    9f3a:	74 6c                	je     9fa8 <ema_new+0xd8>
    9f3c:	66 0f 6f 0c 24       	movdqa (%rsp),%xmm1
    9f41:	0f 11 08             	movups %xmm1,(%rax)
    9f44:	66 0f 6f 54 24 10    	movdqa 0x10(%rsp),%xmm2
    9f4a:	0f 11 50 10          	movups %xmm2,0x10(%rax)
    9f4e:	66 0f 6f 5c 24 20    	movdqa 0x20(%rsp),%xmm3
    9f54:	0f 11 58 20          	movups %xmm3,0x20(%rax)
    9f58:	66 0f 6f 64 24 30    	movdqa 0x30(%rsp),%xmm4
    9f5e:	0f 11 60 30          	movups %xmm4,0x30(%rax)
    9f62:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
    9f67:	48 89 50 40          	mov    %rdx,0x40(%rax)
    9f6b:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
    9f70:	48 89 42 38          	mov    %rax,0x38(%rdx)
    9f74:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
    9f79:	48 89 42 40          	mov    %rax,0x40(%rdx)
    9f7d:	66 48 0f 6e c2       	movq   %rdx,%xmm0
    9f82:	0f 16 44 24 40       	movhps 0x40(%rsp),%xmm0
    9f87:	0f 11 40 38          	movups %xmm0,0x38(%rax)
    9f8b:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
    9f90:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    9f97:	00 00 
    9f99:	75 2d                	jne    9fc8 <ema_new+0xf8>
    9f9b:	48 83 c4 50          	add    $0x50,%rsp
    9f9f:	5b                   	pop    %rbx
    9fa0:	c3                   	ret    
    9fa1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9fa8:	48 8b 4c 24 40       	mov    0x40(%rsp),%rcx
    9fad:	48 39 59 38          	cmp    %rbx,0x38(%rcx)
    9fb1:	75 1a                	jne    9fcd <ema_new+0xfd>
    9fb3:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
    9fb8:	48 39 5a 40          	cmp    %rbx,0x40(%rdx)
    9fbc:	75 0f                	jne    9fcd <ema_new+0xfd>
    9fbe:	48 89 51 38          	mov    %rdx,0x38(%rcx)
    9fc2:	48 89 4a 40          	mov    %rcx,0x40(%rdx)
    9fc6:	eb c3                	jmp    9f8b <ema_new+0xbb>
    9fc8:	e8 a3 68 00 00       	call   10870 <__stack_chk_fail>
    9fcd:	e8 65 83 00 00       	call   12337 <abort>
    9fd2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    9fd9:	00 00 00 
    9fdc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000009fe0 <ema_destroy>:
    9fe0:	f3 0f 1e fa          	endbr64 
    9fe4:	53                   	push   %rbx
    9fe5:	48 89 fb             	mov    %rdi,%rbx
    9fe8:	48 85 ff             	test   %rdi,%rdi
    9feb:	74 1c                	je     a009 <ema_destroy+0x29>
    9fed:	48 8b 47 40          	mov    0x40(%rdi),%rax
    9ff1:	48 3b 78 38          	cmp    0x38(%rax),%rdi
    9ff5:	75 29                	jne    a020 <ema_destroy+0x40>
    9ff7:	48 8b 57 38          	mov    0x38(%rdi),%rdx
    9ffb:	48 3b 7a 40          	cmp    0x40(%rdx),%rdi
    9fff:	75 1f                	jne    a020 <ema_destroy+0x40>
    a001:	48 89 50 38          	mov    %rdx,0x38(%rax)
    a005:	48 89 42 40          	mov    %rax,0x40(%rdx)
    a009:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    a00d:	48 85 ff             	test   %rdi,%rdi
    a010:	74 05                	je     a017 <ema_destroy+0x37>
    a012:	e8 b9 ed ff ff       	call   8dd0 <bit_array_delete>
    a017:	48 89 df             	mov    %rbx,%rdi
    a01a:	5b                   	pop    %rbx
    a01b:	e9 20 15 00 00       	jmp    b540 <efree>
    a020:	e8 12 83 00 00       	call   12337 <abort>
    a025:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a02c:	00 00 00 
    a02f:	90                   	nop

000000000000a030 <destroy_ema_root>:
    a030:	f3 0f 1e fa          	endbr64 
    a034:	55                   	push   %rbp
    a035:	53                   	push   %rbx
    a036:	48 83 ec 08          	sub    $0x8,%rsp
    a03a:	48 8b 07             	mov    (%rdi),%rax
    a03d:	48 8b 58 38          	mov    0x38(%rax),%rbx
    a041:	48 39 d8             	cmp    %rbx,%rax
    a044:	74 1c                	je     a062 <destroy_ema_root+0x32>
    a046:	48 89 fd             	mov    %rdi,%rbp
    a049:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a050:	48 89 df             	mov    %rbx,%rdi
    a053:	48 8b 5b 38          	mov    0x38(%rbx),%rbx
    a057:	e8 84 ff ff ff       	call   9fe0 <ema_destroy>
    a05c:	48 39 5d 00          	cmp    %rbx,0x0(%rbp)
    a060:	75 ee                	jne    a050 <destroy_ema_root+0x20>
    a062:	48 83 c4 08          	add    $0x8,%rsp
    a066:	5b                   	pop    %rbx
    a067:	5d                   	pop    %rbp
    a068:	c3                   	ret    
    a069:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000a070 <do_commit>:
    a070:	f3 0f 1e fa          	endbr64 
    a074:	55                   	push   %rbp
    a075:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a079:	48 83 ca 08          	or     $0x8,%rdx
    a07d:	48 89 e5             	mov    %rsp,%rbp
    a080:	41 55                	push   %r13
    a082:	41 54                	push   %r12
    a084:	49 89 fc             	mov    %rdi,%r12
    a087:	53                   	push   %rbx
    a088:	48 8d 1c 37          	lea    (%rdi,%rsi,1),%rbx
    a08c:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    a090:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    a094:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a09b:	00 00 
    a09d:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    a0a2:	31 c0                	xor    %eax,%eax
    a0a4:	48 89 14 24          	mov    %rdx,(%rsp)
    a0a8:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    a0af:	00 00 
    a0b1:	0f 11 44 24 08       	movups %xmm0,0x8(%rsp)
    a0b6:	0f 11 44 24 18       	movups %xmm0,0x18(%rsp)
    a0bb:	0f 11 44 24 28       	movups %xmm0,0x28(%rsp)
    a0c0:	84 c9                	test   %cl,%cl
    a0c2:	74 4c                	je     a110 <do_commit+0xa0>
    a0c4:	49 89 e5             	mov    %rsp,%r13
    a0c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    a0ce:	00 00 
    a0d0:	48 81 eb 00 10 00 00 	sub    $0x1000,%rbx
    a0d7:	4c 89 ef             	mov    %r13,%rdi
    a0da:	48 89 de             	mov    %rbx,%rsi
    a0dd:	e8 dd 81 00 00       	call   122bf <do_eaccept>
    a0e2:	85 c0                	test   %eax,%eax
    a0e4:	75 57                	jne    a13d <do_commit+0xcd>
    a0e6:	49 39 dc             	cmp    %rbx,%r12
    a0e9:	72 e5                	jb     a0d0 <do_commit+0x60>
    a0eb:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    a0f0:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    a0f7:	00 00 
    a0f9:	75 47                	jne    a142 <do_commit+0xd2>
    a0fb:	48 8d 65 e8          	lea    -0x18(%rbp),%rsp
    a0ff:	31 c0                	xor    %eax,%eax
    a101:	5b                   	pop    %rbx
    a102:	41 5c                	pop    %r12
    a104:	41 5d                	pop    %r13
    a106:	5d                   	pop    %rbp
    a107:	c3                   	ret    
    a108:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a10f:	00 
    a110:	48 39 df             	cmp    %rbx,%rdi
    a113:	73 d6                	jae    a0eb <do_commit+0x7b>
    a115:	49 89 e5             	mov    %rsp,%r13
    a118:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a11f:	00 
    a120:	4c 89 e6             	mov    %r12,%rsi
    a123:	4c 89 ef             	mov    %r13,%rdi
    a126:	e8 94 81 00 00       	call   122bf <do_eaccept>
    a12b:	85 c0                	test   %eax,%eax
    a12d:	75 0e                	jne    a13d <do_commit+0xcd>
    a12f:	49 81 c4 00 10 00 00 	add    $0x1000,%r12
    a136:	49 39 dc             	cmp    %rbx,%r12
    a139:	72 e5                	jb     a120 <do_commit+0xb0>
    a13b:	eb ae                	jmp    a0eb <do_commit+0x7b>
    a13d:	e8 f5 81 00 00       	call   12337 <abort>
    a142:	e8 29 67 00 00       	call   10870 <__stack_chk_fail>
    a147:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    a14e:	00 00 

000000000000a150 <ema_do_commit>:
    a150:	f3 0f 1e fa          	endbr64 
    a154:	55                   	push   %rbp
    a155:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a159:	48 89 e5             	mov    %rsp,%rbp
    a15c:	41 57                	push   %r15
    a15e:	41 56                	push   %r14
    a160:	41 55                	push   %r13
    a162:	41 54                	push   %r12
    a164:	53                   	push   %rbx
    a165:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    a169:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    a16d:	4c 8b 77 08          	mov    0x8(%rdi),%r14
    a171:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a178:	00 00 
    a17a:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    a17f:	48 8b 07             	mov    (%rdi),%rax
    a182:	48 c7 04 24 0b 02 00 	movq   $0x20b,(%rsp)
    a189:	00 
    a18a:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    a191:	00 00 
    a193:	0f 11 44 24 08       	movups %xmm0,0x8(%rsp)
    a198:	0f 11 44 24 18       	movups %xmm0,0x18(%rsp)
    a19d:	0f 11 44 24 28       	movups %xmm0,0x28(%rsp)
    a1a2:	48 39 f0             	cmp    %rsi,%rax
    a1a5:	48 0f 43 f0          	cmovae %rax,%rsi
    a1a9:	49 01 c6             	add    %rax,%r14
    a1ac:	49 39 d6             	cmp    %rdx,%r14
    a1af:	4c 0f 47 f2          	cmova  %rdx,%r14
    a1b3:	4c 39 f6             	cmp    %r14,%rsi
    a1b6:	73 61                	jae    a219 <ema_do_commit+0xc9>
    a1b8:	49 89 fd             	mov    %rdi,%r13
    a1bb:	48 89 f3             	mov    %rsi,%rbx
    a1be:	49 89 e7             	mov    %rsp,%r15
    a1c1:	eb 15                	jmp    a1d8 <ema_do_commit+0x88>
    a1c3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a1c8:	48 81 c3 00 10 00 00 	add    $0x1000,%rbx
    a1cf:	4c 39 f3             	cmp    %r14,%rbx
    a1d2:	73 45                	jae    a219 <ema_do_commit+0xc9>
    a1d4:	49 8b 45 00          	mov    0x0(%r13),%rax
    a1d8:	49 89 dc             	mov    %rbx,%r12
    a1db:	49 8b 7d 20          	mov    0x20(%r13),%rdi
    a1df:	49 29 c4             	sub    %rax,%r12
    a1e2:	49 c1 ec 0c          	shr    $0xc,%r12
    a1e6:	4c 89 e6             	mov    %r12,%rsi
    a1e9:	e8 02 ec ff ff       	call   8df0 <bit_array_test>
    a1ee:	84 c0                	test   %al,%al
    a1f0:	75 d6                	jne    a1c8 <ema_do_commit+0x78>
    a1f2:	48 89 de             	mov    %rbx,%rsi
    a1f5:	4c 89 ff             	mov    %r15,%rdi
    a1f8:	e8 c2 80 00 00       	call   122bf <do_eaccept>
    a1fd:	85 c0                	test   %eax,%eax
    a1ff:	75 1a                	jne    a21b <ema_do_commit+0xcb>
    a201:	49 8b 7d 20          	mov    0x20(%r13),%rdi
    a205:	4c 89 e6             	mov    %r12,%rsi
    a208:	48 81 c3 00 10 00 00 	add    $0x1000,%rbx
    a20f:	e8 ac ed ff ff       	call   8fc0 <bit_array_set>
    a214:	4c 39 f3             	cmp    %r14,%rbx
    a217:	72 bb                	jb     a1d4 <ema_do_commit+0x84>
    a219:	31 c0                	xor    %eax,%eax
    a21b:	48 8b 54 24 78       	mov    0x78(%rsp),%rdx
    a220:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    a227:	00 00 
    a229:	75 0f                	jne    a23a <ema_do_commit+0xea>
    a22b:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    a22f:	5b                   	pop    %rbx
    a230:	41 5c                	pop    %r12
    a232:	41 5d                	pop    %r13
    a234:	41 5e                	pop    %r14
    a236:	41 5f                	pop    %r15
    a238:	5d                   	pop    %rbp
    a239:	c3                   	ret    
    a23a:	e8 31 66 00 00       	call   10870 <__stack_chk_fail>
    a23f:	90                   	nop

000000000000a240 <ema_do_commit_loop>:
    a240:	f3 0f 1e fa          	endbr64 
    a244:	41 55                	push   %r13
    a246:	41 54                	push   %r12
    a248:	55                   	push   %rbp
    a249:	53                   	push   %rbx
    a24a:	48 89 cb             	mov    %rcx,%rbx
    a24d:	48 83 ec 08          	sub    $0x8,%rsp
    a251:	48 8b 0f             	mov    (%rdi),%rcx
    a254:	48 39 f7             	cmp    %rsi,%rdi
    a257:	0f 84 9b 00 00 00    	je     a2f8 <ema_do_commit_loop+0xb8>
    a25d:	49 89 f5             	mov    %rsi,%r13
    a260:	48 89 d5             	mov    %rdx,%rbp
    a263:	48 89 f8             	mov    %rdi,%rax
    a266:	eb 26                	jmp    a28e <ema_do_commit_loop+0x4e>
    a268:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a26f:	00 
    a270:	f6 40 10 01          	testb  $0x1,0x10(%rax)
    a274:	75 27                	jne    a29d <ema_do_commit_loop+0x5d>
    a276:	48 03 48 08          	add    0x8(%rax),%rcx
    a27a:	48 8b 40 38          	mov    0x38(%rax),%rax
    a27e:	48 89 ca             	mov    %rcx,%rdx
    a281:	49 39 c5             	cmp    %rax,%r13
    a284:	74 3a                	je     a2c0 <ema_do_commit_loop+0x80>
    a286:	48 8b 08             	mov    (%rax),%rcx
    a289:	48 39 d1             	cmp    %rdx,%rcx
    a28c:	75 22                	jne    a2b0 <ema_do_commit_loop+0x70>
    a28e:	48 8b 50 18          	mov    0x18(%rax),%rdx
    a292:	48 f7 d2             	not    %rdx
    a295:	f7 c2 02 02 00 00    	test   $0x202,%edx
    a29b:	74 d3                	je     a270 <ema_do_commit_loop+0x30>
    a29d:	b8 0d 00 00 00       	mov    $0xd,%eax
    a2a2:	48 83 c4 08          	add    $0x8,%rsp
    a2a6:	5b                   	pop    %rbx
    a2a7:	5d                   	pop    %rbp
    a2a8:	41 5c                	pop    %r12
    a2aa:	41 5d                	pop    %r13
    a2ac:	c3                   	ret    
    a2ad:	0f 1f 00             	nopl   (%rax)
    a2b0:	48 83 c4 08          	add    $0x8,%rsp
    a2b4:	b8 16 00 00 00       	mov    $0x16,%eax
    a2b9:	5b                   	pop    %rbx
    a2ba:	5d                   	pop    %rbp
    a2bb:	41 5c                	pop    %r12
    a2bd:	41 5d                	pop    %r13
    a2bf:	c3                   	ret    
    a2c0:	b8 16 00 00 00       	mov    $0x16,%eax
    a2c5:	48 39 d9             	cmp    %rbx,%rcx
    a2c8:	73 1c                	jae    a2e6 <ema_do_commit_loop+0xa6>
    a2ca:	eb d6                	jmp    a2a2 <ema_do_commit_loop+0x62>
    a2cc:	0f 1f 40 00          	nopl   0x0(%rax)
    a2d0:	48 89 da             	mov    %rbx,%rdx
    a2d3:	48 89 ee             	mov    %rbp,%rsi
    a2d6:	4c 8b 67 38          	mov    0x38(%rdi),%r12
    a2da:	e8 71 fe ff ff       	call   a150 <ema_do_commit>
    a2df:	85 c0                	test   %eax,%eax
    a2e1:	75 bf                	jne    a2a2 <ema_do_commit_loop+0x62>
    a2e3:	4c 89 e7             	mov    %r12,%rdi
    a2e6:	4c 39 ef             	cmp    %r13,%rdi
    a2e9:	75 e5                	jne    a2d0 <ema_do_commit_loop+0x90>
    a2eb:	31 c0                	xor    %eax,%eax
    a2ed:	48 83 c4 08          	add    $0x8,%rsp
    a2f1:	5b                   	pop    %rbx
    a2f2:	5d                   	pop    %rbp
    a2f3:	41 5c                	pop    %r12
    a2f5:	41 5d                	pop    %r13
    a2f7:	c3                   	ret    
    a2f8:	b8 16 00 00 00       	mov    $0x16,%eax
    a2fd:	48 39 d9             	cmp    %rbx,%rcx
    a300:	72 a0                	jb     a2a2 <ema_do_commit_loop+0x62>
    a302:	31 c0                	xor    %eax,%eax
    a304:	eb e7                	jmp    a2ed <ema_do_commit_loop+0xad>
    a306:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a30d:	00 00 00 

000000000000a310 <ema_change_to_tcs>:
    a310:	f3 0f 1e fa          	endbr64 
    a314:	55                   	push   %rbp
    a315:	48 89 e5             	mov    %rsp,%rbp
    a318:	41 56                	push   %r14
    a31a:	41 55                	push   %r13
    a31c:	41 54                	push   %r12
    a31e:	53                   	push   %rbx
    a31f:	48 89 fb             	mov    %rdi,%rbx
    a322:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    a326:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
    a32d:	4c 8b 6f 18          	mov    0x18(%rdi),%r13
    a331:	48 8b 7f 20          	mov    0x20(%rdi),%rdi
    a335:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a33c:	00 00 
    a33e:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
    a345:	00 
    a346:	31 c0                	xor    %eax,%eax
    a348:	45 89 ee             	mov    %r13d,%r14d
    a34b:	41 81 e6 00 ff 00 00 	and    $0xff00,%r14d
    a352:	48 85 ff             	test   %rdi,%rdi
    a355:	74 33                	je     a38a <ema_change_to_tcs+0x7a>
    a357:	49 89 f4             	mov    %rsi,%r12
    a35a:	48 2b 33             	sub    (%rbx),%rsi
    a35d:	48 c1 ee 0c          	shr    $0xc,%rsi
    a361:	e8 8a ea ff ff       	call   8df0 <bit_array_test>
    a366:	84 c0                	test   %al,%al
    a368:	74 20                	je     a38a <ema_change_to_tcs+0x7a>
    a36a:	41 81 fe 00 01 00 00 	cmp    $0x100,%r14d
    a371:	0f 84 e1 00 00 00    	je     a458 <ema_change_to_tcs+0x148>
    a377:	41 83 e5 07          	and    $0x7,%r13d
    a37b:	41 83 fd 03          	cmp    $0x3,%r13d
    a37f:	75 09                	jne    a38a <ema_change_to_tcs+0x7a>
    a381:	41 81 fe 00 02 00 00 	cmp    $0x200,%r14d
    a388:	74 2e                	je     a3b8 <ema_change_to_tcs+0xa8>
    a38a:	b8 0d 00 00 00       	mov    $0xd,%eax
    a38f:	48 8b 94 24 b8 00 00 	mov    0xb8(%rsp),%rdx
    a396:	00 
    a397:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    a39e:	00 00 
    a3a0:	0f 85 c4 00 00 00    	jne    a46a <ema_change_to_tcs+0x15a>
    a3a6:	48 8d 65 e0          	lea    -0x20(%rbp),%rsp
    a3aa:	5b                   	pop    %rbx
    a3ab:	41 5c                	pop    %r12
    a3ad:	41 5d                	pop    %r13
    a3af:	41 5e                	pop    %r14
    a3b1:	5d                   	pop    %rbp
    a3b2:	c3                   	ret    
    a3b3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a3b8:	b9 03 01 00 00       	mov    $0x103,%ecx
    a3bd:	ba 03 02 00 00       	mov    $0x203,%edx
    a3c2:	be 00 10 00 00       	mov    $0x1000,%esi
    a3c7:	4c 89 e7             	mov    %r12,%rdi
    a3ca:	e8 a1 b3 ff ff       	call   5770 <sgx_mm_modify_ocall>
    a3cf:	85 c0                	test   %eax,%eax
    a3d1:	0f 85 89 00 00 00    	jne    a460 <ema_change_to_tcs+0x150>
    a3d7:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a3db:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
    a3e0:	4c 89 e6             	mov    %r12,%rsi
    a3e3:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
    a3ea:	00 00 
    a3ec:	48 c7 44 24 40 10 01 	movq   $0x110,0x40(%rsp)
    a3f3:	00 00 
    a3f5:	0f 11 44 24 48       	movups %xmm0,0x48(%rsp)
    a3fa:	0f 11 44 24 58       	movups %xmm0,0x58(%rsp)
    a3ff:	0f 11 44 24 68       	movups %xmm0,0x68(%rsp)
    a404:	e8 b6 7e 00 00       	call   122bf <do_eaccept>
    a409:	85 c0                	test   %eax,%eax
    a40b:	75 62                	jne    a46f <ema_change_to_tcs+0x15f>
    a40d:	48 8d 4c 24 38       	lea    0x38(%rsp),%rcx
    a412:	49 8d 94 24 00 10 00 	lea    0x1000(%r12),%rdx
    a419:	00 
    a41a:	4c 89 e6             	mov    %r12,%rsi
    a41d:	48 89 df             	mov    %rbx,%rdi
    a420:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    a427:	00 00 
    a429:	e8 f2 f5 ff ff       	call   9a20 <ema_split_ex>
    a42e:	85 c0                	test   %eax,%eax
    a430:	0f 85 59 ff ff ff    	jne    a38f <ema_change_to_tcs+0x7f>
    a436:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
    a43b:	48 8b 51 18          	mov    0x18(%rcx),%rdx
    a43f:	48 81 e2 f8 00 ff ff 	and    $0xffffffffffff00f8,%rdx
    a446:	80 ce 01             	or     $0x1,%dh
    a449:	48 89 51 18          	mov    %rdx,0x18(%rcx)
    a44d:	e9 3d ff ff ff       	jmp    a38f <ema_change_to_tcs+0x7f>
    a452:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a458:	31 c0                	xor    %eax,%eax
    a45a:	e9 30 ff ff ff       	jmp    a38f <ema_change_to_tcs+0x7f>
    a45f:	90                   	nop
    a460:	b8 0e 00 00 00       	mov    $0xe,%eax
    a465:	e9 25 ff ff ff       	jmp    a38f <ema_change_to_tcs+0x7f>
    a46a:	e8 01 64 00 00       	call   10870 <__stack_chk_fail>
    a46f:	e8 c3 7e 00 00       	call   12337 <abort>
    a474:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a47b:	00 00 00 
    a47e:	66 90                	xchg   %ax,%ax

000000000000a480 <ema_modify_permissions>:
    a480:	f3 0f 1e fa          	endbr64 
    a484:	55                   	push   %rbp
    a485:	48 89 e5             	mov    %rsp,%rbp
    a488:	41 57                	push   %r15
    a48a:	41 56                	push   %r14
    a48c:	41 55                	push   %r13
    a48e:	41 54                	push   %r12
    a490:	53                   	push   %rbx
    a491:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    a495:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
    a49c:	89 4c 24 20          	mov    %ecx,0x20(%rsp)
    a4a0:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a4a7:	00 00 
    a4a9:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
    a4b0:	00 
    a4b1:	48 8b 47 18          	mov    0x18(%rdi),%rax
    a4b5:	41 89 c4             	mov    %eax,%r12d
    a4b8:	41 83 e4 07          	and    $0x7,%r12d
    a4bc:	41 39 cc             	cmp    %ecx,%r12d
    a4bf:	0f 84 e2 00 00 00    	je     a5a7 <ema_modify_permissions+0x127>
    a4c5:	49 89 fd             	mov    %rdi,%r13
    a4c8:	89 c7                	mov    %eax,%edi
    a4ca:	49 89 f7             	mov    %rsi,%r15
    a4cd:	44 8b 74 24 20       	mov    0x20(%rsp),%r14d
    a4d2:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    a4d6:	81 e7 00 ff 00 00    	and    $0xff00,%edi
    a4dc:	44 89 f1             	mov    %r14d,%ecx
    a4df:	89 7c 24 0c          	mov    %edi,0xc(%rsp)
    a4e3:	48 39 f3             	cmp    %rsi,%rbx
    a4e6:	4c 0f 43 fb          	cmovae %rbx,%r15
    a4ea:	49 03 5d 08          	add    0x8(%r13),%rbx
    a4ee:	48 39 d3             	cmp    %rdx,%rbx
    a4f1:	48 0f 47 da          	cmova  %rdx,%rbx
    a4f5:	89 c2                	mov    %eax,%edx
    a4f7:	09 f9                	or     %edi,%ecx
    a4f9:	4c 89 ff             	mov    %r15,%rdi
    a4fc:	81 e2 07 ff 00 00    	and    $0xff07,%edx
    a502:	4c 89 7c 24 18       	mov    %r15,0x18(%rsp)
    a507:	48 89 de             	mov    %rbx,%rsi
    a50a:	4c 29 fe             	sub    %r15,%rsi
    a50d:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    a512:	e8 59 b2 ff ff       	call   5770 <sgx_mm_modify_ocall>
    a517:	85 c0                	test   %eax,%eax
    a519:	0f 85 21 01 00 00    	jne    a640 <ema_modify_permissions+0x1c0>
    a51f:	44 89 f0             	mov    %r14d,%eax
    a522:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a526:	48 8d 54 24 40       	lea    0x40(%rsp),%rdx
    a52b:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
    a532:	00 00 
    a534:	0d 20 02 00 00       	or     $0x220,%eax
    a539:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
    a53e:	48 98                	cltq   
    a540:	0f 11 44 24 48       	movups %xmm0,0x48(%rsp)
    a545:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    a54a:	44 89 f0             	mov    %r14d,%eax
    a54d:	45 09 e6             	or     %r12d,%r14d
    a550:	83 e0 06             	and    $0x6,%eax
    a553:	0f 11 44 24 58       	movups %xmm0,0x58(%rsp)
    a558:	89 44 24 24          	mov    %eax,0x24(%rsp)
    a55c:	0f 11 44 24 68       	movups %xmm0,0x68(%rsp)
    a561:	49 39 df             	cmp    %rbx,%r15
    a564:	72 76                	jb     a5dc <ema_modify_permissions+0x15c>
    a566:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a56d:	00 00 00 
    a570:	49 8b 45 00          	mov    0x0(%r13),%rax
    a574:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    a579:	48 39 d0             	cmp    %rdx,%rax
    a57c:	0f 82 ce 00 00 00    	jb     a650 <ema_modify_permissions+0x1d0>
    a582:	49 03 45 08          	add    0x8(%r13),%rax
    a586:	48 39 c3             	cmp    %rax,%rbx
    a589:	0f 82 f9 00 00 00    	jb     a688 <ema_modify_permissions+0x208>
    a58f:	49 8b 45 18          	mov    0x18(%r13),%rax
    a593:	48 63 54 24 20       	movslq 0x20(%rsp),%rdx
    a598:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    a59c:	48 09 d0             	or     %rdx,%rax
    a59f:	49 89 45 18          	mov    %rax,0x18(%r13)
    a5a3:	85 d2                	test   %edx,%edx
    a5a5:	74 79                	je     a620 <ema_modify_permissions+0x1a0>
    a5a7:	31 c0                	xor    %eax,%eax
    a5a9:	48 8b 94 24 b8 00 00 	mov    0xb8(%rsp),%rdx
    a5b0:	00 
    a5b1:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    a5b8:	00 00 
    a5ba:	0f 85 f8 00 00 00    	jne    a6b8 <ema_modify_permissions+0x238>
    a5c0:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    a5c4:	5b                   	pop    %rbx
    a5c5:	41 5c                	pop    %r12
    a5c7:	41 5d                	pop    %r13
    a5c9:	41 5e                	pop    %r14
    a5cb:	41 5f                	pop    %r15
    a5cd:	5d                   	pop    %rbp
    a5ce:	c3                   	ret    
    a5cf:	90                   	nop
    a5d0:	49 81 c7 00 10 00 00 	add    $0x1000,%r15
    a5d7:	49 39 df             	cmp    %rbx,%r15
    a5da:	73 94                	jae    a570 <ema_modify_permissions+0xf0>
    a5dc:	45 39 f4             	cmp    %r14d,%r12d
    a5df:	74 0d                	je     a5ee <ema_modify_permissions+0x16e>
    a5e1:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
    a5e6:	4c 89 fe             	mov    %r15,%rsi
    a5e9:	e8 0d 7d 00 00       	call   122fb <do_emodpe>
    a5ee:	83 7c 24 24 06       	cmpl   $0x6,0x24(%rsp)
    a5f3:	74 db                	je     a5d0 <ema_modify_permissions+0x150>
    a5f5:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
    a5fa:	4c 89 fe             	mov    %r15,%rsi
    a5fd:	e8 bd 7c 00 00       	call   122bf <do_eaccept>
    a602:	85 c0                	test   %eax,%eax
    a604:	75 a3                	jne    a5a9 <ema_modify_permissions+0x129>
    a606:	49 81 c7 00 10 00 00 	add    $0x1000,%r15
    a60d:	49 39 df             	cmp    %rbx,%r15
    a610:	0f 83 5a ff ff ff    	jae    a570 <ema_modify_permissions+0xf0>
    a616:	45 39 f4             	cmp    %r14d,%r12d
    a619:	74 da                	je     a5f5 <ema_modify_permissions+0x175>
    a61b:	eb c4                	jmp    a5e1 <ema_modify_permissions+0x161>
    a61d:	0f 1f 00             	nopl   (%rax)
    a620:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
    a624:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    a629:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    a62e:	89 ca                	mov    %ecx,%edx
    a630:	e8 3b b1 ff ff       	call   5770 <sgx_mm_modify_ocall>
    a635:	85 c0                	test   %eax,%eax
    a637:	0f 84 6a ff ff ff    	je     a5a7 <ema_modify_permissions+0x127>
    a63d:	0f 1f 00             	nopl   (%rax)
    a640:	b8 0e 00 00 00       	mov    $0xe,%eax
    a645:	e9 5f ff ff ff       	jmp    a5a9 <ema_modify_permissions+0x129>
    a64a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a650:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    a655:	31 d2                	xor    %edx,%edx
    a657:	48 8d 4c 24 38       	lea    0x38(%rsp),%rcx
    a65c:	4c 89 ef             	mov    %r13,%rdi
    a65f:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    a666:	00 00 
    a668:	e8 23 f2 ff ff       	call   9890 <ema_split>
    a66d:	85 c0                	test   %eax,%eax
    a66f:	0f 85 34 ff ff ff    	jne    a5a9 <ema_modify_permissions+0x129>
    a675:	4c 8b 6c 24 38       	mov    0x38(%rsp),%r13
    a67a:	49 8b 45 00          	mov    0x0(%r13),%rax
    a67e:	e9 ff fe ff ff       	jmp    a582 <ema_modify_permissions+0x102>
    a683:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a688:	4c 89 ef             	mov    %r13,%rdi
    a68b:	48 8d 4c 24 38       	lea    0x38(%rsp),%rcx
    a690:	ba 01 00 00 00       	mov    $0x1,%edx
    a695:	48 89 de             	mov    %rbx,%rsi
    a698:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    a69f:	00 00 
    a6a1:	e8 ea f1 ff ff       	call   9890 <ema_split>
    a6a6:	4c 8b 6c 24 38       	mov    0x38(%rsp),%r13
    a6ab:	85 c0                	test   %eax,%eax
    a6ad:	0f 84 dc fe ff ff    	je     a58f <ema_modify_permissions+0x10f>
    a6b3:	e9 f1 fe ff ff       	jmp    a5a9 <ema_modify_permissions+0x129>
    a6b8:	e8 b3 61 00 00       	call   10870 <__stack_chk_fail>
    a6bd:	0f 1f 00             	nopl   (%rax)

000000000000a6c0 <ema_do_uncommit>:
    a6c0:	f3 0f 1e fa          	endbr64 
    a6c4:	41 55                	push   %r13
    a6c6:	49 89 f5             	mov    %rsi,%r13
    a6c9:	41 54                	push   %r12
    a6cb:	53                   	push   %rbx
    a6cc:	48 83 ec 10          	sub    $0x10,%rsp
    a6d0:	48 8b 07             	mov    (%rdi),%rax
    a6d3:	44 8b 67 18          	mov    0x18(%rdi),%r12d
    a6d7:	48 39 f0             	cmp    %rsi,%rax
    a6da:	4c 0f 43 e8          	cmovae %rax,%r13
    a6de:	48 03 47 08          	add    0x8(%rdi),%rax
    a6e2:	48 39 d0             	cmp    %rdx,%rax
    a6e5:	48 0f 47 c2          	cmova  %rdx,%rax
    a6e9:	48 89 c3             	mov    %rax,%rbx
    a6ec:	41 83 e4 07          	and    $0x7,%r12d
    a6f0:	74 1e                	je     a710 <ema_do_uncommit+0x50>
    a6f2:	48 83 c4 10          	add    $0x10,%rsp
    a6f6:	44 89 e1             	mov    %r12d,%ecx
    a6f9:	48 89 da             	mov    %rbx,%rdx
    a6fc:	4c 89 ee             	mov    %r13,%rsi
    a6ff:	5b                   	pop    %rbx
    a700:	41 5c                	pop    %r12
    a702:	41 5d                	pop    %r13
    a704:	e9 37 ed ff ff       	jmp    9440 <ema_do_uncommit_real>
    a709:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a710:	b9 01 00 00 00       	mov    $0x1,%ecx
    a715:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    a71a:	e8 61 fd ff ff       	call   a480 <ema_modify_permissions>
    a71f:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    a724:	eb cc                	jmp    a6f2 <ema_do_uncommit+0x32>
    a726:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a72d:	00 00 00 

000000000000a730 <ema_do_dealloc>:
    a730:	f3 0f 1e fa          	endbr64 
    a734:	41 54                	push   %r12
    a736:	49 89 f4             	mov    %rsi,%r12
    a739:	55                   	push   %rbp
    a73a:	53                   	push   %rbx
    a73b:	48 89 fb             	mov    %rdi,%rbx
    a73e:	48 83 ec 10          	sub    $0x10,%rsp
    a742:	48 8b 6f 08          	mov    0x8(%rdi),%rbp
    a746:	48 8b 4f 18          	mov    0x18(%rdi),%rcx
    a74a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a751:	00 00 
    a753:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    a758:	48 8b 07             	mov    (%rdi),%rax
    a75b:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    a762:	00 
    a763:	48 39 f0             	cmp    %rsi,%rax
    a766:	4c 0f 43 e0          	cmovae %rax,%r12
    a76a:	48 01 c5             	add    %rax,%rbp
    a76d:	48 39 d5             	cmp    %rdx,%rbp
    a770:	48 0f 47 ea          	cmova  %rdx,%rbp
    a774:	f6 47 10 01          	testb  $0x1,0x10(%rdi)
    a778:	75 1c                	jne    a796 <ema_do_dealloc+0x66>
    a77a:	83 e1 07             	and    $0x7,%ecx
    a77d:	74 71                	je     a7f0 <ema_do_dealloc+0xc0>
    a77f:	31 c9                	xor    %ecx,%ecx
    a781:	48 89 ea             	mov    %rbp,%rdx
    a784:	4c 89 e6             	mov    %r12,%rsi
    a787:	48 89 df             	mov    %rbx,%rdi
    a78a:	e8 b1 ec ff ff       	call   9440 <ema_do_uncommit_real>
    a78f:	85 c0                	test   %eax,%eax
    a791:	75 3e                	jne    a7d1 <ema_do_dealloc+0xa1>
    a793:	48 8b 03             	mov    (%rbx),%rax
    a796:	4c 39 e0             	cmp    %r12,%rax
    a799:	72 65                	jb     a800 <ema_do_dealloc+0xd0>
    a79b:	48 03 43 08          	add    0x8(%rbx),%rax
    a79f:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    a7a6:	00 
    a7a7:	48 39 c5             	cmp    %rax,%rbp
    a7aa:	73 1b                	jae    a7c7 <ema_do_dealloc+0x97>
    a7ac:	48 89 e1             	mov    %rsp,%rcx
    a7af:	ba 01 00 00 00       	mov    $0x1,%edx
    a7b4:	48 89 ee             	mov    %rbp,%rsi
    a7b7:	48 89 df             	mov    %rbx,%rdi
    a7ba:	e8 d1 f0 ff ff       	call   9890 <ema_split>
    a7bf:	85 c0                	test   %eax,%eax
    a7c1:	75 0e                	jne    a7d1 <ema_do_dealloc+0xa1>
    a7c3:	48 8b 1c 24          	mov    (%rsp),%rbx
    a7c7:	48 89 df             	mov    %rbx,%rdi
    a7ca:	e8 11 f8 ff ff       	call   9fe0 <ema_destroy>
    a7cf:	31 c0                	xor    %eax,%eax
    a7d1:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    a7d6:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    a7dd:	00 00 
    a7df:	75 3f                	jne    a820 <ema_do_dealloc+0xf0>
    a7e1:	48 83 c4 10          	add    $0x10,%rsp
    a7e5:	5b                   	pop    %rbx
    a7e6:	5d                   	pop    %rbp
    a7e7:	41 5c                	pop    %r12
    a7e9:	c3                   	ret    
    a7ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a7f0:	b9 01 00 00 00       	mov    $0x1,%ecx
    a7f5:	e8 86 fc ff ff       	call   a480 <ema_modify_permissions>
    a7fa:	eb 83                	jmp    a77f <ema_do_dealloc+0x4f>
    a7fc:	0f 1f 40 00          	nopl   0x0(%rax)
    a800:	31 d2                	xor    %edx,%edx
    a802:	48 89 e1             	mov    %rsp,%rcx
    a805:	4c 89 e6             	mov    %r12,%rsi
    a808:	48 89 df             	mov    %rbx,%rdi
    a80b:	e8 80 f0 ff ff       	call   9890 <ema_split>
    a810:	85 c0                	test   %eax,%eax
    a812:	75 bd                	jne    a7d1 <ema_do_dealloc+0xa1>
    a814:	48 8b 1c 24          	mov    (%rsp),%rbx
    a818:	48 8b 03             	mov    (%rbx),%rax
    a81b:	e9 7b ff ff ff       	jmp    a79b <ema_do_dealloc+0x6b>
    a820:	e8 4b 60 00 00       	call   10870 <__stack_chk_fail>
    a825:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a82c:	00 00 00 
    a82f:	90                   	nop

000000000000a830 <ema_do_dealloc_loop>:
    a830:	f3 0f 1e fa          	endbr64 
    a834:	41 55                	push   %r13
    a836:	49 89 d5             	mov    %rdx,%r13
    a839:	41 54                	push   %r12
    a83b:	49 89 cc             	mov    %rcx,%r12
    a83e:	55                   	push   %rbp
    a83f:	48 89 f5             	mov    %rsi,%rbp
    a842:	53                   	push   %rbx
    a843:	48 83 ec 08          	sub    $0x8,%rsp
    a847:	eb 1d                	jmp    a866 <ema_do_dealloc_loop+0x36>
    a849:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a850:	4c 89 e2             	mov    %r12,%rdx
    a853:	4c 89 ee             	mov    %r13,%rsi
    a856:	48 8b 5f 38          	mov    0x38(%rdi),%rbx
    a85a:	e8 d1 fe ff ff       	call   a730 <ema_do_dealloc>
    a85f:	85 c0                	test   %eax,%eax
    a861:	75 0a                	jne    a86d <ema_do_dealloc_loop+0x3d>
    a863:	48 89 df             	mov    %rbx,%rdi
    a866:	48 39 ef             	cmp    %rbp,%rdi
    a869:	75 e5                	jne    a850 <ema_do_dealloc_loop+0x20>
    a86b:	31 c0                	xor    %eax,%eax
    a86d:	48 83 c4 08          	add    $0x8,%rsp
    a871:	5b                   	pop    %rbx
    a872:	5d                   	pop    %rbp
    a873:	41 5c                	pop    %r12
    a875:	41 5d                	pop    %r13
    a877:	c3                   	ret    
    a878:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a87f:	00 

000000000000a880 <ema_do_uncommit_loop>:
    a880:	f3 0f 1e fa          	endbr64 
    a884:	41 57                	push   %r15
    a886:	41 56                	push   %r14
    a888:	41 55                	push   %r13
    a88a:	41 54                	push   %r12
    a88c:	49 89 d4             	mov    %rdx,%r12
    a88f:	55                   	push   %rbp
    a890:	48 89 cd             	mov    %rcx,%rbp
    a893:	53                   	push   %rbx
    a894:	48 83 ec 18          	sub    $0x18,%rsp
    a898:	48 8b 17             	mov    (%rdi),%rdx
    a89b:	48 39 f7             	cmp    %rsi,%rdi
    a89e:	0f 84 d9 00 00 00    	je     a97d <ema_do_uncommit_loop+0xfd>
    a8a4:	49 89 ff             	mov    %rdi,%r15
    a8a7:	48 89 f3             	mov    %rsi,%rbx
    a8aa:	48 89 f8             	mov    %rdi,%rax
    a8ad:	0f 1f 00             	nopl   (%rax)
    a8b0:	f6 40 10 01          	testb  $0x1,0x10(%rax)
    a8b4:	75 32                	jne    a8e8 <ema_do_uncommit_loop+0x68>
    a8b6:	48 8b 48 08          	mov    0x8(%rax),%rcx
    a8ba:	48 8b 40 38          	mov    0x38(%rax),%rax
    a8be:	48 01 d1             	add    %rdx,%rcx
    a8c1:	48 39 c3             	cmp    %rax,%rbx
    a8c4:	74 3a                	je     a900 <ema_do_uncommit_loop+0x80>
    a8c6:	48 8b 10             	mov    (%rax),%rdx
    a8c9:	48 39 ca             	cmp    %rcx,%rdx
    a8cc:	74 e2                	je     a8b0 <ema_do_uncommit_loop+0x30>
    a8ce:	b8 16 00 00 00       	mov    $0x16,%eax
    a8d3:	48 83 c4 18          	add    $0x18,%rsp
    a8d7:	5b                   	pop    %rbx
    a8d8:	5d                   	pop    %rbp
    a8d9:	41 5c                	pop    %r12
    a8db:	41 5d                	pop    %r13
    a8dd:	41 5e                	pop    %r14
    a8df:	41 5f                	pop    %r15
    a8e1:	c3                   	ret    
    a8e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a8e8:	48 83 c4 18          	add    $0x18,%rsp
    a8ec:	b8 0d 00 00 00       	mov    $0xd,%eax
    a8f1:	5b                   	pop    %rbx
    a8f2:	5d                   	pop    %rbp
    a8f3:	41 5c                	pop    %r12
    a8f5:	41 5d                	pop    %r13
    a8f7:	41 5e                	pop    %r14
    a8f9:	41 5f                	pop    %r15
    a8fb:	c3                   	ret    
    a8fc:	0f 1f 40 00          	nopl   0x0(%rax)
    a900:	b8 16 00 00 00       	mov    $0x16,%eax
    a905:	48 39 e9             	cmp    %rbp,%rcx
    a908:	73 1e                	jae    a928 <ema_do_uncommit_loop+0xa8>
    a90a:	eb c7                	jmp    a8d3 <ema_do_uncommit_loop+0x53>
    a90c:	0f 1f 40 00          	nopl   0x0(%rax)
    a910:	44 89 c1             	mov    %r8d,%ecx
    a913:	4c 89 f2             	mov    %r14,%rdx
    a916:	4c 89 ce             	mov    %r9,%rsi
    a919:	4c 89 ff             	mov    %r15,%rdi
    a91c:	e8 1f eb ff ff       	call   9440 <ema_do_uncommit_real>
    a921:	85 c0                	test   %eax,%eax
    a923:	75 ae                	jne    a8d3 <ema_do_uncommit_loop+0x53>
    a925:	4d 89 ef             	mov    %r13,%r15
    a928:	49 39 df             	cmp    %rbx,%r15
    a92b:	74 5e                	je     a98b <ema_do_uncommit_loop+0x10b>
    a92d:	49 8b 07             	mov    (%r15),%rax
    a930:	45 8b 47 18          	mov    0x18(%r15),%r8d
    a934:	4d 8b 6f 38          	mov    0x38(%r15),%r13
    a938:	49 39 c4             	cmp    %rax,%r12
    a93b:	49 89 c1             	mov    %rax,%r9
    a93e:	4d 0f 43 cc          	cmovae %r12,%r9
    a942:	49 03 47 08          	add    0x8(%r15),%rax
    a946:	48 39 e8             	cmp    %rbp,%rax
    a949:	48 0f 47 c5          	cmova  %rbp,%rax
    a94d:	49 89 c6             	mov    %rax,%r14
    a950:	41 83 e0 07          	and    $0x7,%r8d
    a954:	75 ba                	jne    a910 <ema_do_uncommit_loop+0x90>
    a956:	b9 01 00 00 00       	mov    $0x1,%ecx
    a95b:	48 89 ea             	mov    %rbp,%rdx
    a95e:	4c 89 e6             	mov    %r12,%rsi
    a961:	4c 89 ff             	mov    %r15,%rdi
    a964:	44 89 44 24 0c       	mov    %r8d,0xc(%rsp)
    a969:	4c 89 0c 24          	mov    %r9,(%rsp)
    a96d:	e8 0e fb ff ff       	call   a480 <ema_modify_permissions>
    a972:	44 8b 44 24 0c       	mov    0xc(%rsp),%r8d
    a977:	4c 8b 0c 24          	mov    (%rsp),%r9
    a97b:	eb 93                	jmp    a910 <ema_do_uncommit_loop+0x90>
    a97d:	b8 16 00 00 00       	mov    $0x16,%eax
    a982:	48 39 ca             	cmp    %rcx,%rdx
    a985:	0f 82 48 ff ff ff    	jb     a8d3 <ema_do_uncommit_loop+0x53>
    a98b:	48 83 c4 18          	add    $0x18,%rsp
    a98f:	31 c0                	xor    %eax,%eax
    a991:	5b                   	pop    %rbx
    a992:	5d                   	pop    %rbp
    a993:	41 5c                	pop    %r12
    a995:	41 5d                	pop    %r13
    a997:	41 5e                	pop    %r14
    a999:	41 5f                	pop    %r15
    a99b:	c3                   	ret    
    a99c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000a9a0 <ema_modify_permissions_loop>:
    a9a0:	f3 0f 1e fa          	endbr64 
    a9a4:	41 57                	push   %r15
    a9a6:	41 56                	push   %r14
    a9a8:	41 55                	push   %r13
    a9aa:	41 54                	push   %r12
    a9ac:	55                   	push   %rbp
    a9ad:	48 89 d5             	mov    %rdx,%rbp
    a9b0:	53                   	push   %rbx
    a9b1:	48 89 cb             	mov    %rcx,%rbx
    a9b4:	48 83 ec 08          	sub    $0x8,%rsp
    a9b8:	48 8b 17             	mov    (%rdi),%rdx
    a9bb:	48 39 f7             	cmp    %rsi,%rdi
    a9be:	0f 84 de 00 00 00    	je     aaa2 <ema_modify_permissions_loop+0x102>
    a9c4:	49 89 fe             	mov    %rdi,%r14
    a9c7:	49 89 f4             	mov    %rsi,%r12
    a9ca:	45 89 c5             	mov    %r8d,%r13d
    a9cd:	49 89 ff             	mov    %rdi,%r15
    a9d0:	41 f6 47 19 02       	testb  $0x2,0x19(%r15)
    a9d5:	74 79                	je     aa50 <ema_modify_permissions_loop+0xb0>
    a9d7:	41 f6 47 10 01       	testb  $0x1,0x10(%r15)
    a9dc:	75 72                	jne    aa50 <ema_modify_permissions_loop+0xb0>
    a9de:	48 39 d5             	cmp    %rdx,%rbp
    a9e1:	48 89 d6             	mov    %rdx,%rsi
    a9e4:	49 8b 47 08          	mov    0x8(%r15),%rax
    a9e8:	49 8b 7f 20          	mov    0x20(%r15),%rdi
    a9ec:	48 0f 43 f5          	cmovae %rbp,%rsi
    a9f0:	48 01 d0             	add    %rdx,%rax
    a9f3:	48 29 d6             	sub    %rdx,%rsi
    a9f6:	48 c1 ee 0c          	shr    $0xc,%rsi
    a9fa:	48 39 d8             	cmp    %rbx,%rax
    a9fd:	48 0f 47 c3          	cmova  %rbx,%rax
    aa01:	48 29 d0             	sub    %rdx,%rax
    aa04:	48 c1 e8 0c          	shr    $0xc,%rax
    aa08:	48 85 ff             	test   %rdi,%rdi
    aa0b:	74 27                	je     aa34 <ema_modify_permissions_loop+0x94>
    aa0d:	48 29 f0             	sub    %rsi,%rax
    aa10:	48 89 c2             	mov    %rax,%rdx
    aa13:	e8 28 e4 ff ff       	call   8e40 <bit_array_test_range>
    aa18:	84 c0                	test   %al,%al
    aa1a:	74 18                	je     aa34 <ema_modify_permissions_loop+0x94>
    aa1c:	49 8b 47 08          	mov    0x8(%r15),%rax
    aa20:	49 03 07             	add    (%r15),%rax
    aa23:	4d 8b 7f 38          	mov    0x38(%r15),%r15
    aa27:	4d 39 fc             	cmp    %r15,%r12
    aa2a:	74 3c                	je     aa68 <ema_modify_permissions_loop+0xc8>
    aa2c:	49 8b 17             	mov    (%r15),%rdx
    aa2f:	48 39 d0             	cmp    %rdx,%rax
    aa32:	74 9c                	je     a9d0 <ema_modify_permissions_loop+0x30>
    aa34:	b8 16 00 00 00       	mov    $0x16,%eax
    aa39:	48 83 c4 08          	add    $0x8,%rsp
    aa3d:	5b                   	pop    %rbx
    aa3e:	5d                   	pop    %rbp
    aa3f:	41 5c                	pop    %r12
    aa41:	41 5d                	pop    %r13
    aa43:	41 5e                	pop    %r14
    aa45:	41 5f                	pop    %r15
    aa47:	c3                   	ret    
    aa48:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    aa4f:	00 
    aa50:	48 83 c4 08          	add    $0x8,%rsp
    aa54:	b8 0d 00 00 00       	mov    $0xd,%eax
    aa59:	5b                   	pop    %rbx
    aa5a:	5d                   	pop    %rbp
    aa5b:	41 5c                	pop    %r12
    aa5d:	41 5d                	pop    %r13
    aa5f:	41 5e                	pop    %r14
    aa61:	41 5f                	pop    %r15
    aa63:	c3                   	ret    
    aa64:	0f 1f 40 00          	nopl   0x0(%rax)
    aa68:	48 39 d8             	cmp    %rbx,%rax
    aa6b:	73 1f                	jae    aa8c <ema_modify_permissions_loop+0xec>
    aa6d:	eb c5                	jmp    aa34 <ema_modify_permissions_loop+0x94>
    aa6f:	90                   	nop
    aa70:	44 89 e9             	mov    %r13d,%ecx
    aa73:	48 89 da             	mov    %rbx,%rdx
    aa76:	48 89 ee             	mov    %rbp,%rsi
    aa79:	4c 89 f7             	mov    %r14,%rdi
    aa7c:	4d 8b 7e 38          	mov    0x38(%r14),%r15
    aa80:	e8 fb f9 ff ff       	call   a480 <ema_modify_permissions>
    aa85:	85 c0                	test   %eax,%eax
    aa87:	75 b0                	jne    aa39 <ema_modify_permissions_loop+0x99>
    aa89:	4d 89 fe             	mov    %r15,%r14
    aa8c:	4d 39 f4             	cmp    %r14,%r12
    aa8f:	75 df                	jne    aa70 <ema_modify_permissions_loop+0xd0>
    aa91:	31 c0                	xor    %eax,%eax
    aa93:	48 83 c4 08          	add    $0x8,%rsp
    aa97:	5b                   	pop    %rbx
    aa98:	5d                   	pop    %rbp
    aa99:	41 5c                	pop    %r12
    aa9b:	41 5d                	pop    %r13
    aa9d:	41 5e                	pop    %r14
    aa9f:	41 5f                	pop    %r15
    aaa1:	c3                   	ret    
    aaa2:	48 39 ca             	cmp    %rcx,%rdx
    aaa5:	72 8d                	jb     aa34 <ema_modify_permissions_loop+0x94>
    aaa7:	31 c0                	xor    %eax,%eax
    aaa9:	eb e8                	jmp    aa93 <ema_modify_permissions_loop+0xf3>
    aaab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000aab0 <ema_do_commit_data>:
    aab0:	f3 0f 1e fa          	endbr64 
    aab4:	55                   	push   %rbp
    aab5:	41 81 c8 00 02 00 00 	or     $0x200,%r8d
    aabc:	66 0f ef c0          	pxor   %xmm0,%xmm0
    aac0:	4d 63 c0             	movslq %r8d,%r8
    aac3:	48 89 e5             	mov    %rsp,%rbp
    aac6:	41 57                	push   %r15
    aac8:	41 56                	push   %r14
    aaca:	49 89 f6             	mov    %rsi,%r14
    aacd:	41 55                	push   %r13
    aacf:	41 54                	push   %r12
    aad1:	49 89 d4             	mov    %rdx,%r12
    aad4:	53                   	push   %rbx
    aad5:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    aad9:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
    aae0:	48 89 7c 24 38       	mov    %rdi,0x38(%rsp)
    aae5:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    aaec:	00 00 
    aaee:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
    aaf5:	00 
    aaf6:	31 c0                	xor    %eax,%eax
    aaf8:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
    aafd:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
    ab04:	00 00 
    ab06:	0f 11 44 24 48       	movups %xmm0,0x48(%rsp)
    ab0b:	0f 11 44 24 58       	movups %xmm0,0x58(%rsp)
    ab10:	0f 11 44 24 68       	movups %xmm0,0x68(%rsp)
    ab15:	48 39 d6             	cmp    %rdx,%rsi
    ab18:	73 46                	jae    ab60 <ema_do_commit_data+0xb0>
    ab1a:	48 29 f1             	sub    %rsi,%rcx
    ab1d:	49 89 f7             	mov    %rsi,%r15
    ab20:	4c 8d 6c 24 40       	lea    0x40(%rsp),%r13
    ab25:	48 89 cb             	mov    %rcx,%rbx
    ab28:	eb 12                	jmp    ab3c <ema_do_commit_data+0x8c>
    ab2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    ab30:	49 81 c7 00 10 00 00 	add    $0x1000,%r15
    ab37:	4d 39 e7             	cmp    %r12,%r15
    ab3a:	73 24                	jae    ab60 <ema_do_commit_data+0xb0>
    ab3c:	4a 8d 14 3b          	lea    (%rbx,%r15,1),%rdx
    ab40:	4c 89 fe             	mov    %r15,%rsi
    ab43:	4c 89 ef             	mov    %r13,%rdi
    ab46:	e8 92 77 00 00       	call   122dd <do_eacceptcopy>
    ab4b:	85 c0                	test   %eax,%eax
    ab4d:	74 e1                	je     ab30 <ema_do_commit_data+0x80>
    ab4f:	b8 0e 00 00 00       	mov    $0xe,%eax
    ab54:	eb 1a                	jmp    ab70 <ema_do_commit_data+0xc0>
    ab56:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    ab5d:	00 00 00 
    ab60:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
    ab65:	4c 89 e2             	mov    %r12,%rdx
    ab68:	4c 89 f6             	mov    %r14,%rsi
    ab6b:	e8 70 eb ff ff       	call   96e0 <ema_set_eaccept>
    ab70:	48 8b 94 24 b8 00 00 	mov    0xb8(%rsp),%rdx
    ab77:	00 
    ab78:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    ab7f:	00 00 
    ab81:	75 0f                	jne    ab92 <ema_do_commit_data+0xe2>
    ab83:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    ab87:	5b                   	pop    %rbx
    ab88:	41 5c                	pop    %r12
    ab8a:	41 5d                	pop    %r13
    ab8c:	41 5e                	pop    %r14
    ab8e:	41 5f                	pop    %r15
    ab90:	5d                   	pop    %rbp
    ab91:	c3                   	ret    
    ab92:	e8 d9 5c 00 00       	call   10870 <__stack_chk_fail>
    ab97:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    ab9e:	00 00 

000000000000aba0 <ema_do_commit_data_loop>:
    aba0:	f3 0f 1e fa          	endbr64 
    aba4:	41 57                	push   %r15
    aba6:	41 56                	push   %r14
    aba8:	41 55                	push   %r13
    abaa:	41 54                	push   %r12
    abac:	55                   	push   %rbp
    abad:	53                   	push   %rbx
    abae:	48 89 cb             	mov    %rcx,%rbx
    abb1:	48 83 ec 18          	sub    $0x18,%rsp
    abb5:	48 8b 0f             	mov    (%rdi),%rcx
    abb8:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    abbd:	44 89 4c 24 04       	mov    %r9d,0x4(%rsp)
    abc2:	48 39 f7             	cmp    %rsi,%rdi
    abc5:	0f 84 a2 00 00 00    	je     ac6d <ema_do_commit_data_loop+0xcd>
    abcb:	48 89 fd             	mov    %rdi,%rbp
    abce:	49 89 f4             	mov    %rsi,%r12
    abd1:	49 89 d7             	mov    %rdx,%r15
    abd4:	49 89 fd             	mov    %rdi,%r13
    abd7:	eb 72                	jmp    ac4b <ema_do_commit_data_loop+0xab>
    abd9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    abe0:	41 8b 45 10          	mov    0x10(%r13),%eax
    abe4:	a8 01                	test   $0x1,%al
    abe6:	75 71                	jne    ac59 <ema_do_commit_data_loop+0xb9>
    abe8:	a8 04                	test   $0x4,%al
    abea:	0f 84 86 00 00 00    	je     ac76 <ema_do_commit_data_loop+0xd6>
    abf0:	49 8b 7d 20          	mov    0x20(%r13),%rdi
    abf4:	49 8b 45 08          	mov    0x8(%r13),%rax
    abf8:	48 85 ff             	test   %rdi,%rdi
    abfb:	74 39                	je     ac36 <ema_do_commit_data_loop+0x96>
    abfd:	49 39 cf             	cmp    %rcx,%r15
    ac00:	48 89 ce             	mov    %rcx,%rsi
    ac03:	49 0f 43 f7          	cmovae %r15,%rsi
    ac07:	48 01 c8             	add    %rcx,%rax
    ac0a:	48 29 ce             	sub    %rcx,%rsi
    ac0d:	48 c1 ee 0c          	shr    $0xc,%rsi
    ac11:	48 39 d8             	cmp    %rbx,%rax
    ac14:	48 0f 47 c3          	cmova  %rbx,%rax
    ac18:	48 89 c2             	mov    %rax,%rdx
    ac1b:	48 29 ca             	sub    %rcx,%rdx
    ac1e:	48 c1 ea 0c          	shr    $0xc,%rdx
    ac22:	48 29 f2             	sub    %rsi,%rdx
    ac25:	e8 d6 e2 ff ff       	call   8f00 <bit_array_test_range_any>
    ac2a:	84 c0                	test   %al,%al
    ac2c:	75 2b                	jne    ac59 <ema_do_commit_data_loop+0xb9>
    ac2e:	49 8b 4d 00          	mov    0x0(%r13),%rcx
    ac32:	49 8b 45 08          	mov    0x8(%r13),%rax
    ac36:	4d 8b 6d 38          	mov    0x38(%r13),%r13
    ac3a:	48 01 c8             	add    %rcx,%rax
    ac3d:	4d 39 ec             	cmp    %r13,%r12
    ac40:	74 4e                	je     ac90 <ema_do_commit_data_loop+0xf0>
    ac42:	49 8b 4d 00          	mov    0x0(%r13),%rcx
    ac46:	48 39 c8             	cmp    %rcx,%rax
    ac49:	75 2b                	jne    ac76 <ema_do_commit_data_loop+0xd6>
    ac4b:	49 8b 45 18          	mov    0x18(%r13),%rax
    ac4f:	48 f7 d0             	not    %rax
    ac52:	a9 02 02 00 00       	test   $0x202,%eax
    ac57:	74 87                	je     abe0 <ema_do_commit_data_loop+0x40>
    ac59:	b8 0d 00 00 00       	mov    $0xd,%eax
    ac5e:	48 83 c4 18          	add    $0x18,%rsp
    ac62:	5b                   	pop    %rbx
    ac63:	5d                   	pop    %rbp
    ac64:	41 5c                	pop    %r12
    ac66:	41 5d                	pop    %r13
    ac68:	41 5e                	pop    %r14
    ac6a:	41 5f                	pop    %r15
    ac6c:	c3                   	ret    
    ac6d:	48 39 d9             	cmp    %rbx,%rcx
    ac70:	0f 83 98 00 00 00    	jae    ad0e <ema_do_commit_data_loop+0x16e>
    ac76:	48 83 c4 18          	add    $0x18,%rsp
    ac7a:	b8 16 00 00 00       	mov    $0x16,%eax
    ac7f:	5b                   	pop    %rbx
    ac80:	5d                   	pop    %rbp
    ac81:	41 5c                	pop    %r12
    ac83:	41 5d                	pop    %r13
    ac85:	41 5e                	pop    %r14
    ac87:	41 5f                	pop    %r15
    ac89:	c3                   	ret    
    ac8a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    ac90:	48 39 d8             	cmp    %rbx,%rax
    ac93:	72 e1                	jb     ac76 <ema_do_commit_data_loop+0xd6>
    ac95:	49 89 ee             	mov    %rbp,%r14
    ac98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    ac9f:	00 
    aca0:	49 8b 16             	mov    (%r14),%rdx
    aca3:	4c 89 fe             	mov    %r15,%rsi
    aca6:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    acab:	4c 89 f7             	mov    %r14,%rdi
    acae:	44 8b 44 24 04       	mov    0x4(%rsp),%r8d
    acb3:	4c 39 fa             	cmp    %r15,%rdx
    acb6:	48 0f 43 f2          	cmovae %rdx,%rsi
    acba:	49 03 56 08          	add    0x8(%r14),%rdx
    acbe:	48 89 f1             	mov    %rsi,%rcx
    acc1:	4c 29 f9             	sub    %r15,%rcx
    acc4:	48 01 c1             	add    %rax,%rcx
    acc7:	48 39 da             	cmp    %rbx,%rdx
    acca:	48 0f 47 d3          	cmova  %rbx,%rdx
    acce:	e8 dd fd ff ff       	call   aab0 <ema_do_commit_data>
    acd3:	85 c0                	test   %eax,%eax
    acd5:	75 87                	jne    ac5e <ema_do_commit_data_loop+0xbe>
    acd7:	4d 8b 76 38          	mov    0x38(%r14),%r14
    acdb:	4d 39 ee             	cmp    %r13,%r14
    acde:	75 c0                	jne    aca0 <ema_do_commit_data_loop+0x100>
    ace0:	49 39 ec             	cmp    %rbp,%r12
    ace3:	74 29                	je     ad0e <ema_do_commit_data_loop+0x16e>
    ace5:	0f 1f 00             	nopl   (%rax)
    ace8:	8b 4c 24 04          	mov    0x4(%rsp),%ecx
    acec:	48 89 da             	mov    %rbx,%rdx
    acef:	4c 89 fe             	mov    %r15,%rsi
    acf2:	48 89 ef             	mov    %rbp,%rdi
    acf5:	4c 8b 75 38          	mov    0x38(%rbp),%r14
    acf9:	e8 82 f7 ff ff       	call   a480 <ema_modify_permissions>
    acfe:	85 c0                	test   %eax,%eax
    ad00:	0f 85 58 ff ff ff    	jne    ac5e <ema_do_commit_data_loop+0xbe>
    ad06:	4c 89 f5             	mov    %r14,%rbp
    ad09:	49 39 ec             	cmp    %rbp,%r12
    ad0c:	75 da                	jne    ace8 <ema_do_commit_data_loop+0x148>
    ad0e:	48 83 c4 18          	add    $0x18,%rsp
    ad12:	31 c0                	xor    %eax,%eax
    ad14:	5b                   	pop    %rbx
    ad15:	5d                   	pop    %rbp
    ad16:	41 5c                	pop    %r12
    ad18:	41 5d                	pop    %r13
    ad1a:	41 5e                	pop    %r14
    ad1c:	41 5f                	pop    %r15
    ad1e:	c3                   	ret    
    ad1f:	90                   	nop

000000000000ad20 <ema_realloc_from_reserve_range>:
    ad20:	f3 0f 1e fa          	endbr64 
    ad24:	41 57                	push   %r15
    ad26:	41 56                	push   %r14
    ad28:	41 55                	push   %r13
    ad2a:	49 89 d5             	mov    %rdx,%r13
    ad2d:	41 54                	push   %r12
    ad2f:	49 89 cc             	mov    %rcx,%r12
    ad32:	55                   	push   %rbp
    ad33:	48 89 fd             	mov    %rdi,%rbp
    ad36:	53                   	push   %rbx
    ad37:	48 89 f3             	mov    %rsi,%rbx
    ad3a:	48 83 ec 28          	sub    $0x28,%rsp
    ad3e:	4c 8b 37             	mov    (%rdi),%r14
    ad41:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
    ad46:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    ad4b:	44 89 44 24 04       	mov    %r8d,0x4(%rsp)
    ad50:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    ad55:	48 39 f7             	cmp    %rsi,%rdi
    ad58:	74 4a                	je     ada4 <ema_realloc_from_reserve_range+0x84>
    ad5a:	49 89 ff             	mov    %rdi,%r15
    ad5d:	eb 1a                	jmp    ad79 <ema_realloc_from_reserve_range+0x59>
    ad5f:	90                   	nop
    ad60:	4d 39 37             	cmp    %r14,(%r15)
    ad63:	75 20                	jne    ad85 <ema_realloc_from_reserve_range+0x65>
    ad65:	41 f6 47 10 01       	testb  $0x1,0x10(%r15)
    ad6a:	74 19                	je     ad85 <ema_realloc_from_reserve_range+0x65>
    ad6c:	4d 03 77 08          	add    0x8(%r15),%r14
    ad70:	4d 8b 7f 38          	mov    0x38(%r15),%r15
    ad74:	49 39 df             	cmp    %rbx,%r15
    ad77:	74 27                	je     ada0 <ema_realloc_from_reserve_range+0x80>
    ad79:	4c 89 ff             	mov    %r15,%rdi
    ad7c:	e8 6f 07 00 00       	call   b4f0 <can_erealloc>
    ad81:	85 c0                	test   %eax,%eax
    ad83:	75 db                	jne    ad60 <ema_realloc_from_reserve_range+0x40>
    ad85:	48 83 c4 28          	add    $0x28,%rsp
    ad89:	31 c0                	xor    %eax,%eax
    ad8b:	5b                   	pop    %rbx
    ad8c:	5d                   	pop    %rbp
    ad8d:	41 5c                	pop    %r12
    ad8f:	41 5d                	pop    %r13
    ad91:	41 5e                	pop    %r14
    ad93:	41 5f                	pop    %r15
    ad95:	c3                   	ret    
    ad96:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    ad9d:	00 00 00 
    ada0:	4c 8b 75 00          	mov    0x0(%rbp),%r14
    ada4:	48 8b 5b 40          	mov    0x40(%rbx),%rbx
    ada8:	4d 39 ee             	cmp    %r13,%r14
    adab:	72 6b                	jb     ae18 <ema_realloc_from_reserve_range+0xf8>
    adad:	48 8b 43 08          	mov    0x8(%rbx),%rax
    adb1:	48 03 03             	add    (%rbx),%rax
    adb4:	49 39 c4             	cmp    %rax,%r12
    adb7:	0f 82 88 00 00 00    	jb     ae45 <ema_realloc_from_reserve_range+0x125>
    adbd:	48 8b 6b 38          	mov    0x38(%rbx),%rbp
    adc1:	48 89 6c 24 10       	mov    %rbp,0x10(%rsp)
    adc6:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
    adcb:	48 39 dd             	cmp    %rbx,%rbp
    adce:	74 11                	je     ade1 <ema_realloc_from_reserve_range+0xc1>
    add0:	48 89 df             	mov    %rbx,%rdi
    add3:	48 8b 5b 38          	mov    0x38(%rbx),%rbx
    add7:	e8 04 f2 ff ff       	call   9fe0 <ema_destroy>
    addc:	48 39 dd             	cmp    %rbx,%rbp
    addf:	75 ef                	jne    add0 <ema_realloc_from_reserve_range+0xb0>
    ade1:	48 83 ec 08          	sub    $0x8,%rsp
    ade5:	4c 89 e6             	mov    %r12,%rsi
    ade8:	4c 89 ef             	mov    %r13,%rdi
    adeb:	55                   	push   %rbp
    adec:	4c 8b 4c 24 78       	mov    0x78(%rsp),%r9
    adf1:	4c 29 ee             	sub    %r13,%rsi
    adf4:	4c 8b 44 24 70       	mov    0x70(%rsp),%r8
    adf9:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    adfe:	8b 54 24 14          	mov    0x14(%rsp),%edx
    ae02:	e8 c9 f0 ff ff       	call   9ed0 <ema_new>
    ae07:	5a                   	pop    %rdx
    ae08:	59                   	pop    %rcx
    ae09:	48 83 c4 28          	add    $0x28,%rsp
    ae0d:	5b                   	pop    %rbx
    ae0e:	5d                   	pop    %rbp
    ae0f:	41 5c                	pop    %r12
    ae11:	41 5d                	pop    %r13
    ae13:	41 5e                	pop    %r14
    ae15:	41 5f                	pop    %r15
    ae17:	c3                   	ret    
    ae18:	31 d2                	xor    %edx,%edx
    ae1a:	48 8d 4c 24 18       	lea    0x18(%rsp),%rcx
    ae1f:	4c 89 ee             	mov    %r13,%rsi
    ae22:	48 89 ef             	mov    %rbp,%rdi
    ae25:	e8 66 ea ff ff       	call   9890 <ema_split>
    ae2a:	85 c0                	test   %eax,%eax
    ae2c:	0f 85 53 ff ff ff    	jne    ad85 <ema_realloc_from_reserve_range+0x65>
    ae32:	48 39 dd             	cmp    %rbx,%rbp
    ae35:	0f 85 72 ff ff ff    	jne    adad <ema_realloc_from_reserve_range+0x8d>
    ae3b:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
    ae40:	e9 68 ff ff ff       	jmp    adad <ema_realloc_from_reserve_range+0x8d>
    ae45:	31 d2                	xor    %edx,%edx
    ae47:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
    ae4c:	4c 89 e6             	mov    %r12,%rsi
    ae4f:	48 89 df             	mov    %rbx,%rdi
    ae52:	e8 39 ea ff ff       	call   9890 <ema_split>
    ae57:	85 c0                	test   %eax,%eax
    ae59:	0f 85 26 ff ff ff    	jne    ad85 <ema_realloc_from_reserve_range+0x65>
    ae5f:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
    ae64:	e9 5d ff ff ff       	jmp    adc6 <ema_realloc_from_reserve_range+0xa6>
    ae69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000ae70 <ema_do_alloc>:
    ae70:	f3 0f 1e fa          	endbr64 
    ae74:	41 55                	push   %r13
    ae76:	41 54                	push   %r12
    ae78:	55                   	push   %rbp
    ae79:	53                   	push   %rbx
    ae7a:	48 83 ec 08          	sub    $0x8,%rsp
    ae7e:	8b 6f 10             	mov    0x10(%rdi),%ebp
    ae81:	40 f6 c5 01          	test   $0x1,%bpl
    ae85:	74 11                	je     ae98 <ema_do_alloc+0x28>
    ae87:	31 c0                	xor    %eax,%eax
    ae89:	48 83 c4 08          	add    $0x8,%rsp
    ae8d:	5b                   	pop    %rbx
    ae8e:	5d                   	pop    %rbp
    ae8f:	41 5c                	pop    %r12
    ae91:	41 5d                	pop    %r13
    ae93:	c3                   	ret    
    ae94:	0f 1f 40 00          	nopl   0x0(%rax)
    ae98:	4c 8b 6f 08          	mov    0x8(%rdi),%r13
    ae9c:	8b 57 18             	mov    0x18(%rdi),%edx
    ae9f:	48 89 fb             	mov    %rdi,%rbx
    aea2:	89 e9                	mov    %ebp,%ecx
    aea4:	4c 8b 27             	mov    (%rdi),%r12
    aea7:	81 e2 00 ff 00 00    	and    $0xff00,%edx
    aead:	4c 89 ee             	mov    %r13,%rsi
    aeb0:	4c 89 e7             	mov    %r12,%rdi
    aeb3:	e8 28 a8 ff ff       	call   56e0 <sgx_mm_alloc_ocall>
    aeb8:	89 c2                	mov    %eax,%edx
    aeba:	b8 0e 00 00 00       	mov    $0xe,%eax
    aebf:	85 d2                	test   %edx,%edx
    aec1:	75 c6                	jne    ae89 <ema_do_alloc+0x19>
    aec3:	40 f6 c5 02          	test   $0x2,%bpl
    aec7:	74 37                	je     af00 <ema_do_alloc+0x90>
    aec9:	89 e9                	mov    %ebp,%ecx
    aecb:	48 8b 53 18          	mov    0x18(%rbx),%rdx
    aecf:	4c 89 ee             	mov    %r13,%rsi
    aed2:	4c 89 e7             	mov    %r12,%rdi
    aed5:	c1 e9 04             	shr    $0x4,%ecx
    aed8:	83 f1 01             	xor    $0x1,%ecx
    aedb:	83 e1 01             	and    $0x1,%ecx
    aede:	e8 8d f1 ff ff       	call   a070 <do_commit>
    aee3:	85 c0                	test   %eax,%eax
    aee5:	75 a2                	jne    ae89 <ema_do_alloc+0x19>
    aee7:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    aeeb:	48 85 ff             	test   %rdi,%rdi
    aeee:	74 50                	je     af40 <ema_do_alloc+0xd0>
    aef0:	e8 ab e1 ff ff       	call   90a0 <bit_array_set_all>
    aef5:	31 c0                	xor    %eax,%eax
    aef7:	eb 90                	jmp    ae89 <ema_do_alloc+0x19>
    aef9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    af00:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    af04:	48 85 ff             	test   %rdi,%rdi
    af07:	74 0f                	je     af18 <ema_do_alloc+0xa8>
    af09:	e8 92 e2 ff ff       	call   91a0 <bit_array_reset_all>
    af0e:	31 c0                	xor    %eax,%eax
    af10:	e9 74 ff ff ff       	jmp    ae89 <ema_do_alloc+0x19>
    af15:	0f 1f 00             	nopl   (%rax)
    af18:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    af1c:	48 c1 ef 0c          	shr    $0xc,%rdi
    af20:	e8 7b de ff ff       	call   8da0 <bit_array_new_reset>
    af25:	48 89 43 20          	mov    %rax,0x20(%rbx)
    af29:	48 85 c0             	test   %rax,%rax
    af2c:	0f 85 55 ff ff ff    	jne    ae87 <ema_do_alloc+0x17>
    af32:	b8 0c 00 00 00       	mov    $0xc,%eax
    af37:	e9 4d ff ff ff       	jmp    ae89 <ema_do_alloc+0x19>
    af3c:	0f 1f 40 00          	nopl   0x0(%rax)
    af40:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    af44:	48 c1 ef 0c          	shr    $0xc,%rdi
    af48:	e8 23 de ff ff       	call   8d70 <bit_array_new_set>
    af4d:	48 89 43 20          	mov    %rax,0x20(%rbx)
    af51:	48 85 c0             	test   %rax,%rax
    af54:	74 dc                	je     af32 <ema_do_alloc+0xc2>
    af56:	31 c0                	xor    %eax,%eax
    af58:	e9 2c ff ff ff       	jmp    ae89 <ema_do_alloc+0x19>
    af5d:	0f 1f 00             	nopl   (%rax)

000000000000af60 <add_reserve>:
    af60:	41 54                	push   %r12
    af62:	55                   	push   %rbp
    af63:	53                   	push   %rbx
    af64:	31 db                	xor    %ebx,%ebx
    af66:	48 83 ec 10          	sub    $0x10,%rsp
    af6a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    af71:	00 00 
    af73:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    af78:	31 c0                	xor    %eax,%eax
    af7a:	80 3d 37 f2 00 00 00 	cmpb   $0x0,0xf237(%rip)        # 1a1b8 <adding_reserve>
    af81:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    af88:	00 
    af89:	74 25                	je     afb0 <add_reserve+0x50>
    af8b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    af90:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    af97:	00 00 
    af99:	0f 85 fb 00 00 00    	jne    b09a <add_reserve+0x13a>
    af9f:	48 83 c4 10          	add    $0x10,%rsp
    afa3:	89 d8                	mov    %ebx,%eax
    afa5:	5b                   	pop    %rbx
    afa6:	5d                   	pop    %rbp
    afa7:	41 5c                	pop    %r12
    afa9:	c3                   	ret    
    afaa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    afb0:	48 8b 35 11 f1 00 00 	mov    0xf111(%rip),%rsi        # 1a0c8 <reserve_size_increment>
    afb7:	49 89 e4             	mov    %rsp,%r12
    afba:	48 89 fd             	mov    %rdi,%rbp
    afbd:	ba 01 00 00 00       	mov    $0x1,%edx
    afc2:	4d 89 e1             	mov    %r12,%r9
    afc5:	c6 05 ec f1 00 00 01 	movb   $0x1,0xf1ec(%rip)        # 1a1b8 <adding_reserve>
    afcc:	48 39 f7             	cmp    %rsi,%rdi
    afcf:	48 0f 43 f7          	cmovae %rdi,%rsi
    afd3:	45 31 c0             	xor    %r8d,%r8d
    afd6:	31 c9                	xor    %ecx,%ecx
    afd8:	31 ff                	xor    %edi,%edi
    afda:	48 89 35 e7 f0 00 00 	mov    %rsi,0xf0e7(%rip)        # 1a0c8 <reserve_size_increment>
    afe1:	48 81 c6 00 00 01 00 	add    $0x10000,%rsi
    afe8:	e8 83 0d 00 00       	call   bd70 <sgx_mm_alloc>
    afed:	89 c3                	mov    %eax,%ebx
    afef:	85 c0                	test   %eax,%eax
    aff1:	75 2a                	jne    b01d <add_reserve+0xbd>
    aff3:	48 8b 04 24          	mov    (%rsp),%rax
    aff7:	48 8b 35 ca f0 00 00 	mov    0xf0ca(%rip),%rsi        # 1a0c8 <reserve_size_increment>
    affe:	4d 89 e1             	mov    %r12,%r9
    b001:	31 c9                	xor    %ecx,%ecx
    b003:	45 31 c0             	xor    %r8d,%r8d
    b006:	ba 44 00 00 00       	mov    $0x44,%edx
    b00b:	48 8d b8 00 80 00 00 	lea    0x8000(%rax),%rdi
    b012:	e8 59 0d 00 00       	call   bd70 <sgx_mm_alloc>
    b017:	89 c3                	mov    %eax,%ebx
    b019:	85 c0                	test   %eax,%eax
    b01b:	74 13                	je     b030 <add_reserve+0xd0>
    b01d:	c6 05 94 f1 00 00 00 	movb   $0x0,0xf194(%rip)        # 1a1b8 <adding_reserve>
    b024:	e9 62 ff ff ff       	jmp    af8b <add_reserve+0x2b>
    b029:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b030:	48 8b 3c 24          	mov    (%rsp),%rdi
    b034:	48 89 ee             	mov    %rbp,%rsi
    b037:	e8 24 0e 00 00       	call   be60 <sgx_mm_commit>
    b03c:	48 8b 04 24          	mov    (%rsp),%rax
    b040:	48 8b 15 79 f1 00 00 	mov    0xf179(%rip),%rdx        # 1a1c0 <reserve_list>
    b047:	c6 05 6a f1 00 00 00 	movb   $0x0,0xf16a(%rip)        # 1a1b8 <adding_reserve>
    b04e:	66 48 0f 6e c0       	movq   %rax,%xmm0
    b053:	48 89 50 18          	mov    %rdx,0x18(%rax)
    b057:	ba 00 00 00 10       	mov    $0x10000000,%edx
    b05c:	0f 16 05 65 f0 00 00 	movhps 0xf065(%rip),%xmm0        # 1a0c8 <reserve_size_increment>
    b063:	66 0f d4 05 15 80 00 	paddq  0x8015(%rip),%xmm0        # 13080 <g_dyn_entry_table+0x70>
    b06a:	00 
    b06b:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    b072:	00 
    b073:	48 89 05 46 f1 00 00 	mov    %rax,0xf146(%rip)        # 1a1c0 <reserve_list>
    b07a:	0f 11 00             	movups %xmm0,(%rax)
    b07d:	48 8b 05 44 f0 00 00 	mov    0xf044(%rip),%rax        # 1a0c8 <reserve_size_increment>
    b084:	48 01 c0             	add    %rax,%rax
    b087:	48 39 d0             	cmp    %rdx,%rax
    b08a:	48 0f 47 c2          	cmova  %rdx,%rax
    b08e:	48 89 05 33 f0 00 00 	mov    %rax,0xf033(%rip)        # 1a0c8 <reserve_size_increment>
    b095:	e9 f1 fe ff ff       	jmp    af8b <add_reserve+0x2b>
    b09a:	e8 d1 57 00 00       	call   10870 <__stack_chk_fail>
    b09f:	90                   	nop

000000000000b0a0 <remove_from_list>:
    b0a0:	48 8b 07             	mov    (%rdi),%rax
    b0a3:	48 23 05 26 f0 00 00 	and    0xf026(%rip),%rax        # 1a0d0 <size_mask>
    b0aa:	48 89 c2             	mov    %rax,%rdx
    b0ad:	48 8b 06             	mov    (%rsi),%rax
    b0b0:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
    b0b4:	48 39 f8             	cmp    %rdi,%rax
    b0b7:	74 3f                	je     b0f8 <remove_from_list+0x58>
    b0b9:	48 83 fa 10          	cmp    $0x10,%rdx
    b0bd:	76 21                	jbe    b0e0 <remove_from_list+0x40>
    b0bf:	48 8b 47 10          	mov    0x10(%rdi),%rax
    b0c3:	48 85 c0             	test   %rax,%rax
    b0c6:	74 04                	je     b0cc <remove_from_list+0x2c>
    b0c8:	48 89 48 08          	mov    %rcx,0x8(%rax)
    b0cc:	48 85 c9             	test   %rcx,%rcx
    b0cf:	74 1f                	je     b0f0 <remove_from_list+0x50>
    b0d1:	48 89 41 10          	mov    %rax,0x10(%rcx)
    b0d5:	c3                   	ret    
    b0d6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b0dd:	00 00 00 
    b0e0:	48 89 c2             	mov    %rax,%rdx
    b0e3:	48 8b 40 08          	mov    0x8(%rax),%rax
    b0e7:	48 39 f8             	cmp    %rdi,%rax
    b0ea:	75 f4                	jne    b0e0 <remove_from_list+0x40>
    b0ec:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
    b0f0:	c3                   	ret    
    b0f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b0f8:	48 89 0e             	mov    %rcx,(%rsi)
    b0fb:	48 85 c9             	test   %rcx,%rcx
    b0fe:	74 f0                	je     b0f0 <remove_from_list+0x50>
    b100:	48 83 fa 10          	cmp    $0x10,%rdx
    b104:	76 ea                	jbe    b0f0 <remove_from_list+0x50>
    b106:	48 c7 41 10 00 00 00 	movq   $0x0,0x10(%rcx)
    b10d:	00 
    b10e:	c3                   	ret    
    b10f:	90                   	nop

000000000000b110 <put_free_block>:
    b110:	48 8b 05 b9 ef 00 00 	mov    0xefb9(%rip),%rax        # 1a0d0 <size_mask>
    b117:	48 8b 17             	mov    (%rdi),%rdx
    b11a:	48 21 c2             	and    %rax,%rdx
    b11d:	48 81 fa 08 08 00 00 	cmp    $0x808,%rdx
    b124:	76 2a                	jbe    b150 <put_free_block+0x40>
    b126:	48 8b 15 9b f0 00 00 	mov    0xf09b(%rip),%rdx        # 1a1c8 <large_block_list>
    b12d:	48 89 57 08          	mov    %rdx,0x8(%rdi)
    b131:	48 85 d2             	test   %rdx,%rdx
    b134:	74 0d                	je     b143 <put_free_block+0x33>
    b136:	48 23 02             	and    (%rdx),%rax
    b139:	48 83 f8 10          	cmp    $0x10,%rax
    b13d:	76 04                	jbe    b143 <put_free_block+0x33>
    b13f:	48 89 7a 10          	mov    %rdi,0x10(%rdx)
    b143:	48 89 3d 7e f0 00 00 	mov    %rdi,0xf07e(%rip)        # 1a1c8 <large_block_list>
    b14a:	c3                   	ret    
    b14b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b150:	48 8d 4a f0          	lea    -0x10(%rdx),%rcx
    b154:	48 8d 35 85 f0 00 00 	lea    0xf085(%rip),%rsi        # 1a1e0 <exact_block_list>
    b15b:	48 c1 e9 03          	shr    $0x3,%rcx
    b15f:	48 83 fa 0f          	cmp    $0xf,%rdx
    b163:	ba 00 00 00 00       	mov    $0x0,%edx
    b168:	48 0f 47 d1          	cmova  %rcx,%rdx
    b16c:	48 8b 0c d6          	mov    (%rsi,%rdx,8),%rcx
    b170:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
    b174:	48 85 c9             	test   %rcx,%rcx
    b177:	74 0d                	je     b186 <put_free_block+0x76>
    b179:	48 23 01             	and    (%rcx),%rax
    b17c:	48 83 f8 10          	cmp    $0x10,%rax
    b180:	76 04                	jbe    b186 <put_free_block+0x76>
    b182:	48 89 79 10          	mov    %rdi,0x10(%rcx)
    b186:	48 89 3c d6          	mov    %rdi,(%rsi,%rdx,8)
    b18a:	c3                   	ret    
    b18b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000b190 <neighbor_right>:
    b190:	4c 8b 05 39 ef 00 00 	mov    0xef39(%rip),%r8        # 1a0d0 <size_mask>
    b197:	4c 89 c2             	mov    %r8,%rdx
    b19a:	48 23 17             	and    (%rdi),%rdx
    b19d:	48 8d 04 17          	lea    (%rdi,%rdx,1),%rax
    b1a1:	74 2f                	je     b1d2 <neighbor_right+0x42>
    b1a3:	48 8b 0d 16 f0 00 00 	mov    0xf016(%rip),%rcx        # 1a1c0 <reserve_list>
    b1aa:	48 85 c9             	test   %rcx,%rcx
    b1ad:	74 23                	je     b1d2 <neighbor_right+0x42>
    b1af:	48 89 ca             	mov    %rcx,%rdx
    b1b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b1b8:	48 8b 32             	mov    (%rdx),%rsi
    b1bb:	48 39 f7             	cmp    %rsi,%rdi
    b1be:	72 09                	jb     b1c9 <neighbor_right+0x39>
    b1c0:	48 03 72 10          	add    0x10(%rdx),%rsi
    b1c4:	48 39 c6             	cmp    %rax,%rsi
    b1c7:	73 0f                	jae    b1d8 <neighbor_right+0x48>
    b1c9:	48 8b 52 18          	mov    0x18(%rdx),%rdx
    b1cd:	48 85 d2             	test   %rdx,%rdx
    b1d0:	75 e6                	jne    b1b8 <neighbor_right+0x28>
    b1d2:	31 c0                	xor    %eax,%eax
    b1d4:	c3                   	ret    
    b1d5:	0f 1f 00             	nopl   (%rax)
    b1d8:	74 f8                	je     b1d2 <neighbor_right+0x42>
    b1da:	4c 23 00             	and    (%rax),%r8
    b1dd:	74 f3                	je     b1d2 <neighbor_right+0x42>
    b1df:	4a 8d 3c 00          	lea    (%rax,%r8,1),%rdi
    b1e3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b1e8:	48 8b 31             	mov    (%rcx),%rsi
    b1eb:	48 39 f0             	cmp    %rsi,%rax
    b1ee:	72 09                	jb     b1f9 <neighbor_right+0x69>
    b1f0:	48 03 71 10          	add    0x10(%rcx),%rsi
    b1f4:	48 39 fe             	cmp    %rdi,%rsi
    b1f7:	73 0f                	jae    b208 <neighbor_right+0x78>
    b1f9:	48 8b 49 18          	mov    0x18(%rcx),%rcx
    b1fd:	48 85 c9             	test   %rcx,%rcx
    b200:	75 e6                	jne    b1e8 <neighbor_right+0x58>
    b202:	31 c0                	xor    %eax,%eax
    b204:	c3                   	ret    
    b205:	0f 1f 00             	nopl   (%rax)
    b208:	48 39 d1             	cmp    %rdx,%rcx
    b20b:	ba 00 00 00 00       	mov    $0x0,%edx
    b210:	48 0f 45 c2          	cmovne %rdx,%rax
    b214:	c3                   	ret    
    b215:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b21c:	00 00 00 
    b21f:	90                   	nop

000000000000b220 <payload_to_block>:
    b220:	f3 0f 1e fa          	endbr64 
    b224:	48 89 f8             	mov    %rdi,%rax
    b227:	48 2b 05 aa ee 00 00 	sub    0xeeaa(%rip),%rax        # 1a0d8 <header_size>
    b22e:	c3                   	ret    
    b22f:	90                   	nop

000000000000b230 <block_to_payload>:
    b230:	f3 0f 1e fa          	endbr64 
    b234:	48 8d 47 08          	lea    0x8(%rdi),%rax
    b238:	c3                   	ret    
    b239:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000b240 <is_alloced>:
    b240:	f3 0f 1e fa          	endbr64 
    b244:	48 8b 07             	mov    (%rdi),%rax
    b247:	83 e0 01             	and    $0x1,%eax
    b24a:	c3                   	ret    
    b24b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000b250 <block_size>:
    b250:	f3 0f 1e fa          	endbr64 
    b254:	48 8b 07             	mov    (%rdi),%rax
    b257:	48 23 05 72 ee 00 00 	and    0xee72(%rip),%rax        # 1a0d0 <size_mask>
    b25e:	c3                   	ret    
    b25f:	90                   	nop

000000000000b260 <block_end>:
    b260:	f3 0f 1e fa          	endbr64 
    b264:	48 8b 07             	mov    (%rdi),%rax
    b267:	48 23 05 62 ee 00 00 	and    0xee62(%rip),%rax        # 1a0d0 <size_mask>
    b26e:	48 01 f8             	add    %rdi,%rax
    b271:	c3                   	ret    
    b272:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b279:	00 00 00 
    b27c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000b280 <emalloc_init_with_reserved_mem>:
    b280:	f3 0f 1e fa          	endbr64 
    b284:	48 83 ec 08          	sub    $0x8,%rsp
    b288:	e8 d3 fc ff ff       	call   af60 <add_reserve>
    b28d:	85 c0                	test   %eax,%eax
    b28f:	75 17                	jne    b2a8 <emalloc_init_with_reserved_mem+0x28>
    b291:	48 c7 05 2c ee 00 00 	movq   $0x10000,0xee2c(%rip)        # 1a0c8 <reserve_size_increment>
    b298:	00 00 01 00 
    b29c:	48 83 c4 08          	add    $0x8,%rsp
    b2a0:	c3                   	ret    
    b2a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b2a8:	b8 0c 00 00 00       	mov    $0xc,%eax
    b2ad:	48 83 c4 08          	add    $0x8,%rsp
    b2b1:	c3                   	ret    
    b2b2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b2b9:	00 00 00 
    b2bc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000b2c0 <emalloc>:
    b2c0:	f3 0f 1e fa          	endbr64 
    b2c4:	48 8b 05 0d ee 00 00 	mov    0xee0d(%rip),%rax        # 1a0d8 <header_size>
    b2cb:	53                   	push   %rbx
    b2cc:	bb 10 00 00 00       	mov    $0x10,%ebx
    b2d1:	48 8d 44 38 07       	lea    0x7(%rax,%rdi,1),%rax
    b2d6:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    b2da:	48 39 d8             	cmp    %rbx,%rax
    b2dd:	48 0f 43 d8          	cmovae %rax,%rbx
    b2e1:	80 3d d0 ee 00 00 00 	cmpb   $0x0,0xeed0(%rip)        # 1a1b8 <adding_reserve>
    b2e8:	74 36                	je     b320 <emalloc+0x60>
    b2ea:	48 8b 05 ef f6 00 00 	mov    0xf6ef(%rip),%rax        # 1a9e0 <meta_used>
    b2f1:	48 8d 14 03          	lea    (%rbx,%rax,1),%rdx
    b2f5:	48 81 fa 00 00 01 00 	cmp    $0x10000,%rdx
    b2fc:	0f 87 1c 01 00 00    	ja     b41e <emalloc+0x15e>
    b302:	48 8d 0d f7 f6 00 00 	lea    0xf6f7(%rip),%rcx        # 1aa00 <meta_reserve>
    b309:	48 83 cb 01          	or     $0x1,%rbx
    b30d:	48 89 15 cc f6 00 00 	mov    %rdx,0xf6cc(%rip)        # 1a9e0 <meta_used>
    b314:	48 01 c8             	add    %rcx,%rax
    b317:	48 89 18             	mov    %rbx,(%rax)
    b31a:	48 83 c0 08          	add    $0x8,%rax
    b31e:	5b                   	pop    %rbx
    b31f:	c3                   	ret    
    b320:	48 3d 08 08 00 00    	cmp    $0x808,%rax
    b326:	0f 86 74 01 00 00    	jbe    b4a0 <emalloc+0x1e0>
    b32c:	48 8b 05 95 ee 00 00 	mov    0xee95(%rip),%rax        # 1a1c8 <large_block_list>
    b333:	48 85 c0             	test   %rax,%rax
    b336:	0f 84 ec 00 00 00    	je     b428 <emalloc+0x168>
    b33c:	45 31 c0             	xor    %r8d,%r8d
    b33f:	90                   	nop
    b340:	48 8b 10             	mov    (%rax),%rdx
    b343:	48 39 da             	cmp    %rbx,%rdx
    b346:	72 3e                	jb     b386 <emalloc+0xc6>
    b348:	4d 85 c0             	test   %r8,%r8
    b34b:	74 7b                	je     b3c8 <emalloc+0x108>
    b34d:	49 3b 10             	cmp    (%r8),%rdx
    b350:	48 8b 48 08          	mov    0x8(%rax),%rcx
    b354:	73 20                	jae    b376 <emalloc+0xb6>
    b356:	48 85 c9             	test   %rcx,%rcx
    b359:	0f 84 89 01 00 00    	je     b4e8 <emalloc+0x228>
    b35f:	48 8b 11             	mov    (%rcx),%rdx
    b362:	49 89 c0             	mov    %rax,%r8
    b365:	48 39 da             	cmp    %rbx,%rdx
    b368:	72 19                	jb     b383 <emalloc+0xc3>
    b36a:	48 89 c8             	mov    %rcx,%rax
    b36d:	49 3b 10             	cmp    (%r8),%rdx
    b370:	48 8b 48 08          	mov    0x8(%rax),%rcx
    b374:	72 e0                	jb     b356 <emalloc+0x96>
    b376:	48 85 c9             	test   %rcx,%rcx
    b379:	74 14                	je     b38f <emalloc+0xcf>
    b37b:	48 8b 11             	mov    (%rcx),%rdx
    b37e:	48 39 da             	cmp    %rbx,%rdx
    b381:	73 e7                	jae    b36a <emalloc+0xaa>
    b383:	48 89 c8             	mov    %rcx,%rax
    b386:	48 8b 40 08          	mov    0x8(%rax),%rax
    b38a:	48 85 c0             	test   %rax,%rax
    b38d:	75 b1                	jne    b340 <emalloc+0x80>
    b38f:	4d 85 c0             	test   %r8,%r8
    b392:	0f 84 90 00 00 00    	je     b428 <emalloc+0x168>
    b398:	48 8d 35 29 ee 00 00 	lea    0xee29(%rip),%rsi        # 1a1c8 <large_block_list>
    b39f:	4c 89 c7             	mov    %r8,%rdi
    b3a2:	e8 f9 fc ff ff       	call   b0a0 <remove_from_list>
    b3a7:	49 8b 00             	mov    (%r8),%rax
    b3aa:	48 8d 53 10          	lea    0x10(%rbx),%rdx
    b3ae:	48 39 d0             	cmp    %rdx,%rax
    b3b1:	0f 83 c9 00 00 00    	jae    b480 <emalloc+0x1c0>
    b3b7:	48 83 cb 01          	or     $0x1,%rbx
    b3bb:	49 8d 40 08          	lea    0x8(%r8),%rax
    b3bf:	49 89 18             	mov    %rbx,(%r8)
    b3c2:	5b                   	pop    %rbx
    b3c3:	c3                   	ret    
    b3c4:	0f 1f 40 00          	nopl   0x0(%rax)
    b3c8:	49 89 c0             	mov    %rax,%r8
    b3cb:	eb b9                	jmp    b386 <emalloc+0xc6>
    b3cd:	0f 1f 00             	nopl   (%rax)
    b3d0:	48 8d bb 1f 00 01 00 	lea    0x1001f(%rbx),%rdi
    b3d7:	66 31 ff             	xor    %di,%di
    b3da:	e8 81 fb ff ff       	call   af60 <add_reserve>
    b3df:	85 c0                	test   %eax,%eax
    b3e1:	75 3b                	jne    b41e <emalloc+0x15e>
    b3e3:	48 8b 15 d6 ed 00 00 	mov    0xedd6(%rip),%rdx        # 1a1c0 <reserve_list>
    b3ea:	48 85 d2             	test   %rdx,%rdx
    b3ed:	75 12                	jne    b401 <emalloc+0x141>
    b3ef:	eb 2d                	jmp    b41e <emalloc+0x15e>
    b3f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b3f8:	48 8b 52 18          	mov    0x18(%rdx),%rdx
    b3fc:	48 85 d2             	test   %rdx,%rdx
    b3ff:	74 1d                	je     b41e <emalloc+0x15e>
    b401:	48 8b 42 10          	mov    0x10(%rdx),%rax
    b405:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
    b409:	48 29 c1             	sub    %rax,%rcx
    b40c:	48 39 d9             	cmp    %rbx,%rcx
    b40f:	72 e7                	jb     b3f8 <emalloc+0x138>
    b411:	48 8d 0c 03          	lea    (%rbx,%rax,1),%rcx
    b415:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
    b419:	48 03 02             	add    (%rdx),%rax
    b41c:	75 4c                	jne    b46a <emalloc+0x1aa>
    b41e:	31 c0                	xor    %eax,%eax
    b420:	5b                   	pop    %rbx
    b421:	c3                   	ret    
    b422:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b428:	48 8b 15 91 ed 00 00 	mov    0xed91(%rip),%rdx        # 1a1c0 <reserve_list>
    b42f:	48 85 d2             	test   %rdx,%rdx
    b432:	75 15                	jne    b449 <emalloc+0x189>
    b434:	eb 9a                	jmp    b3d0 <emalloc+0x110>
    b436:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b43d:	00 00 00 
    b440:	48 8b 52 18          	mov    0x18(%rdx),%rdx
    b444:	48 85 d2             	test   %rdx,%rdx
    b447:	74 87                	je     b3d0 <emalloc+0x110>
    b449:	48 8b 42 10          	mov    0x10(%rdx),%rax
    b44d:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
    b451:	48 29 c1             	sub    %rax,%rcx
    b454:	48 39 d9             	cmp    %rbx,%rcx
    b457:	72 e7                	jb     b440 <emalloc+0x180>
    b459:	48 8d 0c 03          	lea    (%rbx,%rax,1),%rcx
    b45d:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
    b461:	48 03 02             	add    (%rdx),%rax
    b464:	0f 84 66 ff ff ff    	je     b3d0 <emalloc+0x110>
    b46a:	48 83 cb 01          	or     $0x1,%rbx
    b46e:	48 83 c0 08          	add    $0x8,%rax
    b472:	48 89 58 f8          	mov    %rbx,-0x8(%rax)
    b476:	5b                   	pop    %rbx
    b477:	c3                   	ret    
    b478:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    b47f:	00 
    b480:	49 8d 3c 18          	lea    (%r8,%rbx,1),%rdi
    b484:	48 29 d8             	sub    %rbx,%rax
    b487:	49 89 18             	mov    %rbx,(%r8)
    b48a:	48 89 07             	mov    %rax,(%rdi)
    b48d:	e8 7e fc ff ff       	call   b110 <put_free_block>
    b492:	e9 20 ff ff ff       	jmp    b3b7 <emalloc+0xf7>
    b497:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    b49e:	00 00 
    b4a0:	48 8d 43 f0          	lea    -0x10(%rbx),%rax
    b4a4:	48 8d 15 35 ed 00 00 	lea    0xed35(%rip),%rdx        # 1a1e0 <exact_block_list>
    b4ab:	48 c1 e8 03          	shr    $0x3,%rax
    b4af:	4c 8b 04 c2          	mov    (%rdx,%rax,8),%r8
    b4b3:	4d 85 c0             	test   %r8,%r8
    b4b6:	0f 84 6c ff ff ff    	je     b428 <emalloc+0x168>
    b4bc:	49 8b 48 08          	mov    0x8(%r8),%rcx
    b4c0:	48 89 0c c2          	mov    %rcx,(%rdx,%rax,8)
    b4c4:	48 85 c9             	test   %rcx,%rcx
    b4c7:	0f 84 ea fe ff ff    	je     b3b7 <emalloc+0xf7>
    b4cd:	48 85 c0             	test   %rax,%rax
    b4d0:	0f 84 e1 fe ff ff    	je     b3b7 <emalloc+0xf7>
    b4d6:	48 c7 41 10 00 00 00 	movq   $0x0,0x10(%rcx)
    b4dd:	00 
    b4de:	e9 d4 fe ff ff       	jmp    b3b7 <emalloc+0xf7>
    b4e3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b4e8:	49 89 c0             	mov    %rax,%r8
    b4eb:	e9 9f fe ff ff       	jmp    b38f <emalloc+0xcf>

000000000000b4f0 <can_erealloc>:
    b4f0:	f3 0f 1e fa          	endbr64 
    b4f4:	80 3d bd ec 00 00 00 	cmpb   $0x0,0xecbd(%rip)        # 1a1b8 <adding_reserve>
    b4fb:	b8 01 00 00 00       	mov    $0x1,%eax
    b500:	75 30                	jne    b532 <can_erealloc+0x42>
    b502:	48 2b 3d cf eb 00 00 	sub    0xebcf(%rip),%rdi        # 1a0d8 <header_size>
    b509:	48 8d 15 f0 f4 01 00 	lea    0x1f4f0(%rip),%rdx        # 2aa00 <mm_user_end>
    b510:	48 39 d7             	cmp    %rdx,%rdi
    b513:	73 1d                	jae    b532 <can_erealloc+0x42>
    b515:	48 8b 05 b4 eb 00 00 	mov    0xebb4(%rip),%rax        # 1a0d0 <size_mask>
    b51c:	48 23 07             	and    (%rdi),%rax
    b51f:	48 01 c7             	add    %rax,%rdi
    b522:	48 8d 82 00 00 ff ff 	lea    -0x10000(%rdx),%rax
    b529:	48 39 f8             	cmp    %rdi,%rax
    b52c:	0f 93 c0             	setae  %al
    b52f:	0f b6 c0             	movzbl %al,%eax
    b532:	c3                   	ret    
    b533:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b53a:	00 00 00 
    b53d:	0f 1f 00             	nopl   (%rax)

000000000000b540 <efree>:
    b540:	f3 0f 1e fa          	endbr64 
    b544:	48 2b 3d 8d eb 00 00 	sub    0xeb8d(%rip),%rdi        # 1a0d8 <header_size>
    b54b:	41 54                	push   %r12
    b54d:	48 8d 05 ac f4 01 00 	lea    0x1f4ac(%rip),%rax        # 2aa00 <mm_user_end>
    b554:	55                   	push   %rbp
    b555:	4c 8b 1d 74 eb 00 00 	mov    0xeb74(%rip),%r11        # 1a0d0 <size_mask>
    b55c:	49 89 fc             	mov    %rdi,%r12
    b55f:	53                   	push   %rbx
    b560:	4c 8b 0f             	mov    (%rdi),%r9
    b563:	4d 21 d9             	and    %r11,%r9
    b566:	48 39 c7             	cmp    %rax,%rdi
    b569:	73 14                	jae    b57f <efree+0x3f>
    b56b:	49 8d 04 39          	lea    (%r9,%rdi,1),%rax
    b56f:	48 8d 15 8a f4 00 00 	lea    0xf48a(%rip),%rdx        # 1aa00 <meta_reserve>
    b576:	48 39 c2             	cmp    %rax,%rdx
    b579:	0f 82 f9 00 00 00    	jb     b678 <efree+0x138>
    b57f:	4d 85 c9             	test   %r9,%r9
    b582:	74 2e                	je     b5b2 <efree+0x72>
    b584:	4c 8b 15 35 ec 00 00 	mov    0xec35(%rip),%r10        # 1a1c0 <reserve_list>
    b58b:	4d 85 d2             	test   %r10,%r10
    b58e:	74 22                	je     b5b2 <efree+0x72>
    b590:	4b 8d 14 21          	lea    (%r9,%r12,1),%rdx
    b594:	0f 1f 40 00          	nopl   0x0(%rax)
    b598:	49 8b 02             	mov    (%r10),%rax
    b59b:	49 39 c4             	cmp    %rax,%r12
    b59e:	72 09                	jb     b5a9 <efree+0x69>
    b5a0:	49 03 42 10          	add    0x10(%r10),%rax
    b5a4:	48 39 d0             	cmp    %rdx,%rax
    b5a7:	73 17                	jae    b5c0 <efree+0x80>
    b5a9:	4d 8b 52 18          	mov    0x18(%r10),%r10
    b5ad:	4d 85 d2             	test   %r10,%r10
    b5b0:	75 e6                	jne    b598 <efree+0x58>
    b5b2:	e8 80 6d 00 00       	call   12337 <abort>
    b5b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    b5be:	00 00 
    b5c0:	4d 89 0c 24          	mov    %r9,(%r12)
    b5c4:	49 c7 44 24 08 00 00 	movq   $0x0,0x8(%r12)
    b5cb:	00 00 
    b5cd:	49 83 f9 10          	cmp    $0x10,%r9
    b5d1:	0f 87 b9 00 00 00    	ja     b690 <efree+0x150>
    b5d7:	4c 89 e7             	mov    %r12,%rdi
    b5da:	48 8d 1d ff eb 00 00 	lea    0xebff(%rip),%rbx        # 1a1e0 <exact_block_list>
    b5e1:	48 8d 2d e0 eb 00 00 	lea    0xebe0(%rip),%rbp        # 1a1c8 <large_block_list>
    b5e8:	e8 a3 fb ff ff       	call   b190 <neighbor_right>
    b5ed:	48 89 c7             	mov    %rax,%rdi
    b5f0:	48 85 c0             	test   %rax,%rax
    b5f3:	75 3c                	jne    b631 <efree+0xf1>
    b5f5:	e9 2d 01 00 00       	jmp    b727 <efree+0x1e7>
    b5fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b600:	48 89 de             	mov    %rbx,%rsi
    b603:	49 83 f8 0f          	cmp    $0xf,%r8
    b607:	76 0b                	jbe    b614 <efree+0xd4>
    b609:	49 8d 70 f0          	lea    -0x10(%r8),%rsi
    b60d:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
    b611:	48 01 de             	add    %rbx,%rsi
    b614:	e8 87 fa ff ff       	call   b0a0 <remove_from_list>
    b619:	4d 8b 0c 24          	mov    (%r12),%r9
    b61d:	4d 01 c1             	add    %r8,%r9
    b620:	4d 89 0c 24          	mov    %r9,(%r12)
    b624:	e8 67 fb ff ff       	call   b190 <neighbor_right>
    b629:	48 89 c7             	mov    %rax,%rdi
    b62c:	48 85 c0             	test   %rax,%rax
    b62f:	74 23                	je     b654 <efree+0x114>
    b631:	4c 8b 07             	mov    (%rdi),%r8
    b634:	41 f6 c0 01          	test   $0x1,%r8b
    b638:	75 16                	jne    b650 <efree+0x110>
    b63a:	4d 21 d8             	and    %r11,%r8
    b63d:	49 81 f8 08 08 00 00 	cmp    $0x808,%r8
    b644:	76 ba                	jbe    b600 <efree+0xc0>
    b646:	48 89 ee             	mov    %rbp,%rsi
    b649:	e8 52 fa ff ff       	call   b0a0 <remove_from_list>
    b64e:	eb c9                	jmp    b619 <efree+0xd9>
    b650:	4d 8b 0c 24          	mov    (%r12),%r9
    b654:	4d 21 cb             	and    %r9,%r11
    b657:	49 8b 1a             	mov    (%r10),%rbx
    b65a:	4c 89 e0             	mov    %r12,%rax
    b65d:	48 29 d8             	sub    %rbx,%rax
    b660:	49 01 c3             	add    %rax,%r11
    b663:	4d 3b 5a 10          	cmp    0x10(%r10),%r11
    b667:	74 37                	je     b6a0 <efree+0x160>
    b669:	5b                   	pop    %rbx
    b66a:	4c 89 e7             	mov    %r12,%rdi
    b66d:	5d                   	pop    %rbp
    b66e:	41 5c                	pop    %r12
    b670:	e9 9b fa ff ff       	jmp    b110 <put_free_block>
    b675:	0f 1f 00             	nopl   (%rax)
    b678:	80 3d 39 eb 00 00 00 	cmpb   $0x0,0xeb39(%rip)        # 1a1b8 <adding_reserve>
    b67f:	0f 84 2d ff ff ff    	je     b5b2 <efree+0x72>
    b685:	5b                   	pop    %rbx
    b686:	5d                   	pop    %rbp
    b687:	41 5c                	pop    %r12
    b689:	c3                   	ret    
    b68a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b690:	49 c7 44 24 10 00 00 	movq   $0x0,0x10(%r12)
    b697:	00 00 
    b699:	e9 39 ff ff ff       	jmp    b5d7 <efree+0x97>
    b69e:	66 90                	xchg   %ax,%ax
    b6a0:	48 8b 3d 21 eb 00 00 	mov    0xeb21(%rip),%rdi        # 1a1c8 <large_block_list>
    b6a7:	4d 29 cb             	sub    %r9,%r11
    b6aa:	4d 89 5a 10          	mov    %r11,0x10(%r10)
    b6ae:	4e 8d 04 1b          	lea    (%rbx,%r11,1),%r8
    b6b2:	48 85 ff             	test   %rdi,%rdi
    b6b5:	75 12                	jne    b6c9 <efree+0x189>
    b6b7:	eb 65                	jmp    b71e <efree+0x1de>
    b6b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b6c0:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    b6c4:	48 85 ff             	test   %rdi,%rdi
    b6c7:	74 55                	je     b71e <efree+0x1de>
    b6c9:	48 8b 07             	mov    (%rdi),%rax
    b6cc:	48 01 f8             	add    %rdi,%rax
    b6cf:	49 39 c0             	cmp    %rax,%r8
    b6d2:	75 ec                	jne    b6c0 <efree+0x180>
    b6d4:	48 8d 35 ed ea 00 00 	lea    0xeaed(%rip),%rsi        # 1a1c8 <large_block_list>
    b6db:	e8 c0 f9 ff ff       	call   b0a0 <remove_from_list>
    b6e0:	4c 2b 07             	sub    (%rdi),%r8
    b6e3:	48 8b 3d de ea 00 00 	mov    0xeade(%rip),%rdi        # 1a1c8 <large_block_list>
    b6ea:	48 85 ff             	test   %rdi,%rdi
    b6ed:	75 12                	jne    b701 <efree+0x1c1>
    b6ef:	eb 27                	jmp    b718 <efree+0x1d8>
    b6f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b6f8:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    b6fc:	48 85 ff             	test   %rdi,%rdi
    b6ff:	74 17                	je     b718 <efree+0x1d8>
    b701:	48 8b 07             	mov    (%rdi),%rax
    b704:	48 01 f8             	add    %rdi,%rax
    b707:	49 39 c0             	cmp    %rax,%r8
    b70a:	75 ec                	jne    b6f8 <efree+0x1b8>
    b70c:	e8 8f f9 ff ff       	call   b0a0 <remove_from_list>
    b711:	eb cd                	jmp    b6e0 <efree+0x1a0>
    b713:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b718:	4d 89 c3             	mov    %r8,%r11
    b71b:	49 29 db             	sub    %rbx,%r11
    b71e:	4d 89 5a 10          	mov    %r11,0x10(%r10)
    b722:	5b                   	pop    %rbx
    b723:	5d                   	pop    %rbp
    b724:	41 5c                	pop    %r12
    b726:	c3                   	ret    
    b727:	4d 89 cb             	mov    %r9,%r11
    b72a:	e9 28 ff ff ff       	jmp    b657 <efree+0x117>
    b72f:	90                   	nop

000000000000b730 <mm_init_ema>:
    b730:	f3 0f 1e fa          	endbr64 
    b734:	41 57                	push   %r15
    b736:	4d 89 cf             	mov    %r9,%r15
    b739:	41 56                	push   %r14
    b73b:	4d 89 c6             	mov    %r8,%r14
    b73e:	41 55                	push   %r13
    b740:	41 89 cd             	mov    %ecx,%r13d
    b743:	41 54                	push   %r12
    b745:	41 89 d4             	mov    %edx,%r12d
    b748:	55                   	push   %rbp
    b749:	48 89 f5             	mov    %rsi,%rbp
    b74c:	53                   	push   %rbx
    b74d:	48 89 fb             	mov    %rdi,%rbx
    b750:	48 83 ec 18          	sub    $0x18,%rsp
    b754:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    b75b:	00 00 
    b75d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    b762:	31 c0                	xor    %eax,%eax
    b764:	e8 97 a1 ff ff       	call   5900 <sgx_mm_is_within_enclave>
    b769:	89 c2                	mov    %eax,%edx
    b76b:	b8 0d 00 00 00       	mov    $0xd,%eax
    b770:	84 d2                	test   %dl,%dl
    b772:	0f 84 7d 00 00 00    	je     b7f5 <mm_init_ema+0xc5>
    b778:	41 f7 c4 7e f8 ff ff 	test   $0xfffff87e,%r12d
    b77f:	75 6f                	jne    b7f0 <mm_init_ema+0xc0>
    b781:	41 83 fd 07          	cmp    $0x7,%r13d
    b785:	77 69                	ja     b7f0 <mm_init_ema+0xc0>
    b787:	48 89 e1             	mov    %rsp,%rcx
    b78a:	48 89 ea             	mov    %rbp,%rdx
    b78d:	48 8d 3d d4 e8 00 00 	lea    0xe8d4(%rip),%rdi        # 1a068 <g_rts_ema_root>
    b794:	48 89 de             	mov    %rbx,%rsi
    b797:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    b79e:	00 
    b79f:	e8 4c e6 ff ff       	call   9df0 <find_free_region_at>
    b7a4:	84 c0                	test   %al,%al
    b7a6:	74 48                	je     b7f0 <mm_init_ema+0xc0>
    b7a8:	48 83 ec 08          	sub    $0x8,%rsp
    b7ac:	44 89 e1             	mov    %r12d,%ecx
    b7af:	41 0f b6 d4          	movzbl %r12b,%edx
    b7b3:	48 89 df             	mov    %rbx,%rdi
    b7b6:	ff 74 24 08          	push   0x8(%rsp)
    b7ba:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    b7c0:	4d 89 f9             	mov    %r15,%r9
    b7c3:	4d 89 f0             	mov    %r14,%r8
    b7c6:	44 09 e9             	or     %r13d,%ecx
    b7c9:	48 89 ee             	mov    %rbp,%rsi
    b7cc:	48 63 c9             	movslq %ecx,%rcx
    b7cf:	e8 fc e6 ff ff       	call   9ed0 <ema_new>
    b7d4:	48 89 c7             	mov    %rax,%rdi
    b7d7:	58                   	pop    %rax
    b7d8:	5a                   	pop    %rdx
    b7d9:	48 85 ff             	test   %rdi,%rdi
    b7dc:	74 3a                	je     b818 <mm_init_ema+0xe8>
    b7de:	31 c0                	xor    %eax,%eax
    b7e0:	41 83 e4 01          	and    $0x1,%r12d
    b7e4:	75 0f                	jne    b7f5 <mm_init_ema+0xc5>
    b7e6:	e8 75 de ff ff       	call   9660 <ema_set_eaccept_full>
    b7eb:	eb 08                	jmp    b7f5 <mm_init_ema+0xc5>
    b7ed:	0f 1f 00             	nopl   (%rax)
    b7f0:	b8 16 00 00 00       	mov    $0x16,%eax
    b7f5:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    b7fa:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    b801:	00 00 
    b803:	75 1a                	jne    b81f <mm_init_ema+0xef>
    b805:	48 83 c4 18          	add    $0x18,%rsp
    b809:	5b                   	pop    %rbx
    b80a:	5d                   	pop    %rbp
    b80b:	41 5c                	pop    %r12
    b80d:	41 5d                	pop    %r13
    b80f:	41 5e                	pop    %r14
    b811:	41 5f                	pop    %r15
    b813:	c3                   	ret    
    b814:	0f 1f 40 00          	nopl   0x0(%rax)
    b818:	b8 0c 00 00 00       	mov    $0xc,%eax
    b81d:	eb d6                	jmp    b7f5 <mm_init_ema+0xc5>
    b81f:	e8 4c 50 00 00       	call   10870 <__stack_chk_fail>
    b824:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b82b:	00 00 00 
    b82e:	66 90                	xchg   %ax,%ax

000000000000b830 <mm_alloc>:
    b830:	f3 0f 1e fa          	endbr64 
    b834:	48 83 ec 10          	sub    $0x10,%rsp
    b838:	48 8d 05 29 e8 00 00 	lea    0xe829(%rip),%rax        # 1a068 <g_rts_ema_root>
    b83f:	50                   	push   %rax
    b840:	e8 2b 02 00 00       	call   ba70 <mm_alloc_internal>
    b845:	48 83 c4 18          	add    $0x18,%rsp
    b849:	c3                   	ret    
    b84a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000b850 <mm_commit>:
    b850:	f3 0f 1e fa          	endbr64 
    b854:	48 8d 15 0d e8 00 00 	lea    0xe80d(%rip),%rdx        # 1a068 <g_rts_ema_root>
    b85b:	e9 40 05 00 00       	jmp    bda0 <mm_commit_internal>

000000000000b860 <mm_uncommit>:
    b860:	f3 0f 1e fa          	endbr64 
    b864:	48 8d 15 fd e7 00 00 	lea    0xe7fd(%rip),%rdx        # 1a068 <g_rts_ema_root>
    b86b:	e9 00 06 00 00       	jmp    be70 <mm_uncommit_internal>

000000000000b870 <mm_dealloc>:
    b870:	f3 0f 1e fa          	endbr64 
    b874:	48 8d 15 ed e7 00 00 	lea    0xe7ed(%rip),%rdx        # 1a068 <g_rts_ema_root>
    b87b:	e9 c0 06 00 00       	jmp    bf40 <mm_dealloc_internal>

000000000000b880 <mm_commit_data>:
    b880:	f3 0f 1e fa          	endbr64 
    b884:	4c 8d 05 dd e7 00 00 	lea    0xe7dd(%rip),%r8        # 1a068 <g_rts_ema_root>
    b88b:	e9 80 07 00 00       	jmp    c010 <mm_commit_data_internal>

000000000000b890 <mm_modify_type>:
    b890:	f3 0f 1e fa          	endbr64 
    b894:	48 8d 0d cd e7 00 00 	lea    0xe7cd(%rip),%rcx        # 1a068 <g_rts_ema_root>
    b89b:	e9 90 08 00 00       	jmp    c130 <mm_modify_type_internal>

000000000000b8a0 <mm_modify_permissions>:
    b8a0:	f3 0f 1e fa          	endbr64 
    b8a4:	48 8d 0d bd e7 00 00 	lea    0xe7bd(%rip),%rcx        # 1a068 <g_rts_ema_root>
    b8ab:	e9 40 0a 00 00       	jmp    c2f0 <mm_modify_permissions_internal>

000000000000b8b0 <sgx_mm_enclave_pfhandler>:
    b8b0:	f3 0f 1e fa          	endbr64 
    b8b4:	41 56                	push   %r14
    b8b6:	41 55                	push   %r13
    b8b8:	49 89 fd             	mov    %rdi,%r13
    b8bb:	41 54                	push   %r12
    b8bd:	55                   	push   %rbp
    b8be:	53                   	push   %rbx
    b8bf:	31 db                	xor    %ebx,%ebx
    b8c1:	48 83 ec 10          	sub    $0x10,%rsp
    b8c5:	4c 8b 37             	mov    (%rdi),%r14
    b8c8:	48 8b 3d 41 f1 01 00 	mov    0x1f141(%rip),%rdi        # 2aa10 <mm_lock>
    b8cf:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    b8d6:	00 00 
    b8d8:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    b8dd:	31 c0                	xor    %eax,%eax
    b8df:	e8 bc 9f ff ff       	call   58a0 <sgx_mm_mutex_lock>
    b8e4:	85 c0                	test   %eax,%eax
    b8e6:	74 28                	je     b910 <sgx_mm_enclave_pfhandler+0x60>
    b8e8:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    b8ed:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    b8f4:	00 00 
    b8f6:	0f 85 50 01 00 00    	jne    ba4c <sgx_mm_enclave_pfhandler+0x19c>
    b8fc:	48 83 c4 10          	add    $0x10,%rsp
    b900:	89 d8                	mov    %ebx,%eax
    b902:	5b                   	pop    %rbx
    b903:	5d                   	pop    %rbp
    b904:	41 5c                	pop    %r12
    b906:	41 5d                	pop    %r13
    b908:	41 5e                	pop    %r14
    b90a:	c3                   	ret    
    b90b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b910:	49 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%r14
    b917:	48 8d 3d e2 e6 00 00 	lea    0xe6e2(%rip),%rdi        # 1a000 <g_user_ema_root>
    b91e:	89 c3                	mov    %eax,%ebx
    b920:	4c 89 f6             	mov    %r14,%rsi
    b923:	e8 68 de ff ff       	call   9790 <search_ema>
    b928:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    b92f:	00 
    b930:	48 89 c5             	mov    %rax,%rbp
    b933:	48 85 c0             	test   %rax,%rax
    b936:	0f 84 b4 00 00 00    	je     b9f0 <sgx_mm_enclave_pfhandler+0x140>
    b93c:	48 89 e6             	mov    %rsp,%rsi
    b93f:	48 89 ef             	mov    %rbp,%rdi
    b942:	e8 f9 dc ff ff       	call   9640 <ema_fault_handler>
    b947:	49 89 c4             	mov    %rax,%r12
    b94a:	48 85 c0             	test   %rax,%rax
    b94d:	74 21                	je     b970 <sgx_mm_enclave_pfhandler+0xc0>
    b94f:	48 8b 3d ba f0 01 00 	mov    0x1f0ba(%rip),%rdi        # 2aa10 <mm_lock>
    b956:	e8 65 9f ff ff       	call   58c0 <sgx_mm_mutex_unlock>
    b95b:	48 8b 34 24          	mov    (%rsp),%rsi
    b95f:	4c 89 ef             	mov    %r13,%rdi
    b962:	41 ff d4             	call   *%r12
    b965:	89 c3                	mov    %eax,%ebx
    b967:	e9 7c ff ff ff       	jmp    b8e8 <sgx_mm_enclave_pfhandler+0x38>
    b96c:	0f 1f 40 00          	nopl   0x0(%rax)
    b970:	4c 89 f6             	mov    %r14,%rsi
    b973:	48 89 ef             	mov    %rbp,%rdi
    b976:	e8 e5 dd ff ff       	call   9760 <ema_page_committed>
    b97b:	84 c0                	test   %al,%al
    b97d:	74 31                	je     b9b0 <sgx_mm_enclave_pfhandler+0x100>
    b97f:	41 f6 45 08 02       	testb  $0x2,0x8(%r13)
    b984:	0f 84 86 00 00 00    	je     ba10 <sgx_mm_enclave_pfhandler+0x160>
    b98a:	48 89 ef             	mov    %rbp,%rdi
    b98d:	e8 9e dc ff ff       	call   9630 <get_ema_si_flags>
    b992:	48 d1 e8             	shr    %rax
    b995:	48 89 c3             	mov    %rax,%rbx
    b998:	83 e3 01             	and    $0x1,%ebx
    b99b:	f7 db                	neg    %ebx
    b99d:	48 8b 3d 6c f0 01 00 	mov    0x1f06c(%rip),%rdi        # 2aa10 <mm_lock>
    b9a4:	e8 17 9f ff ff       	call   58c0 <sgx_mm_mutex_unlock>
    b9a9:	e9 3a ff ff ff       	jmp    b8e8 <sgx_mm_enclave_pfhandler+0x38>
    b9ae:	66 90                	xchg   %ax,%ax
    b9b0:	48 89 ef             	mov    %rbp,%rdi
    b9b3:	e8 68 dc ff ff       	call   9620 <get_ema_alloc_flags>
    b9b8:	a8 04                	test   $0x4,%al
    b9ba:	0f 84 91 00 00 00    	je     ba51 <sgx_mm_enclave_pfhandler+0x1a1>
    b9c0:	41 f6 45 08 02       	testb  $0x2,0x8(%r13)
    b9c5:	74 69                	je     ba30 <sgx_mm_enclave_pfhandler+0x180>
    b9c7:	48 89 ef             	mov    %rbp,%rdi
    b9ca:	e8 61 dc ff ff       	call   9630 <get_ema_si_flags>
    b9cf:	a8 02                	test   $0x2,%al
    b9d1:	74 ca                	je     b99d <sgx_mm_enclave_pfhandler+0xed>
    b9d3:	49 8d 96 00 10 00 00 	lea    0x1000(%r14),%rdx
    b9da:	4c 89 f6             	mov    %r14,%rsi
    b9dd:	48 89 ef             	mov    %rbp,%rdi
    b9e0:	e8 6b e7 ff ff       	call   a150 <ema_do_commit>
    b9e5:	85 c0                	test   %eax,%eax
    b9e7:	75 68                	jne    ba51 <sgx_mm_enclave_pfhandler+0x1a1>
    b9e9:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
    b9ee:	eb ad                	jmp    b99d <sgx_mm_enclave_pfhandler+0xed>
    b9f0:	4c 89 f6             	mov    %r14,%rsi
    b9f3:	48 8d 3d 6e e6 00 00 	lea    0xe66e(%rip),%rdi        # 1a068 <g_rts_ema_root>
    b9fa:	e8 91 dd ff ff       	call   9790 <search_ema>
    b9ff:	48 89 c5             	mov    %rax,%rbp
    ba02:	48 85 c0             	test   %rax,%rax
    ba05:	0f 85 31 ff ff ff    	jne    b93c <sgx_mm_enclave_pfhandler+0x8c>
    ba0b:	eb 90                	jmp    b99d <sgx_mm_enclave_pfhandler+0xed>
    ba0d:	0f 1f 00             	nopl   (%rax)
    ba10:	48 89 ef             	mov    %rbp,%rdi
    ba13:	e8 18 dc ff ff       	call   9630 <get_ema_si_flags>
    ba18:	a8 01                	test   $0x1,%al
    ba1a:	0f 84 7d ff ff ff    	je     b99d <sgx_mm_enclave_pfhandler+0xed>
    ba20:	41 f6 45 08 02       	testb  $0x2,0x8(%r13)
    ba25:	74 c2                	je     b9e9 <sgx_mm_enclave_pfhandler+0x139>
    ba27:	e9 5e ff ff ff       	jmp    b98a <sgx_mm_enclave_pfhandler+0xda>
    ba2c:	0f 1f 40 00          	nopl   0x0(%rax)
    ba30:	48 89 ef             	mov    %rbp,%rdi
    ba33:	e8 f8 db ff ff       	call   9630 <get_ema_si_flags>
    ba38:	a8 01                	test   $0x1,%al
    ba3a:	0f 84 5d ff ff ff    	je     b99d <sgx_mm_enclave_pfhandler+0xed>
    ba40:	41 f6 45 08 02       	testb  $0x2,0x8(%r13)
    ba45:	74 8c                	je     b9d3 <sgx_mm_enclave_pfhandler+0x123>
    ba47:	e9 7b ff ff ff       	jmp    b9c7 <sgx_mm_enclave_pfhandler+0x117>
    ba4c:	e8 1f 4e 00 00       	call   10870 <__stack_chk_fail>
    ba51:	48 8b 3d b8 ef 01 00 	mov    0x1efb8(%rip),%rdi        # 2aa10 <mm_lock>
    ba58:	e8 63 9e ff ff       	call   58c0 <sgx_mm_mutex_unlock>
    ba5d:	e8 d5 68 00 00       	call   12337 <abort>
    ba62:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    ba69:	00 00 00 
    ba6c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000ba70 <mm_alloc_internal>:
    ba70:	f3 0f 1e fa          	endbr64 
    ba74:	41 57                	push   %r15
    ba76:	41 56                	push   %r14
    ba78:	41 55                	push   %r13
    ba7a:	41 54                	push   %r12
    ba7c:	55                   	push   %rbp
    ba7d:	53                   	push   %rbx
    ba7e:	48 83 ec 68          	sub    $0x68,%rsp
    ba82:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    ba89:	00 00 
    ba8b:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    ba90:	31 c0                	xor    %eax,%eax
    ba92:	4c 8b b4 24 a0 00 00 	mov    0xa0(%rsp),%r14
    ba99:	00 
    ba9a:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
    baa1:	00 00 
    baa3:	f6 c2 07             	test   $0x7,%dl
    baa6:	74 60                	je     bb08 <mm_alloc_internal+0x98>
    baa8:	4c 89 c5             	mov    %r8,%rbp
    baab:	89 d0                	mov    %edx,%eax
    baad:	41 89 d0             	mov    %edx,%r8d
    bab0:	25 00 ff 00 00       	and    $0xff00,%eax
    bab5:	41 81 e0 00 ff 00 00 	and    $0xff00,%r8d
    babc:	f6 c6 f8             	test   $0xf8,%dh
    babf:	75 47                	jne    bb08 <mm_alloc_internal+0x98>
    bac1:	85 c0                	test   %eax,%eax
    bac3:	b8 00 02 00 00       	mov    $0x200,%eax
    bac8:	49 89 f7             	mov    %rsi,%r15
    bacb:	4c 0f 44 c0          	cmove  %rax,%r8
    bacf:	f7 c6 ff 0f 00 00    	test   $0xfff,%esi
    bad5:	75 31                	jne    bb08 <mm_alloc_internal+0x98>
    bad7:	48 89 cb             	mov    %rcx,%rbx
    bada:	89 d1                	mov    %edx,%ecx
    badc:	4d 89 cc             	mov    %r9,%r12
    badf:	c1 e9 18             	shr    $0x18,%ecx
    bae2:	74 54                	je     bb38 <mm_alloc_internal+0xc8>
    bae4:	83 f9 0b             	cmp    $0xb,%ecx
    bae7:	76 1f                	jbe    bb08 <mm_alloc_internal+0x98>
    bae9:	b8 01 00 00 00       	mov    $0x1,%eax
    baee:	49 c7 c5 ff ff ff ff 	mov    $0xffffffffffffffff,%r13
    baf5:	48 d3 e0             	shl    %cl,%rax
    baf8:	49 d3 e5             	shl    %cl,%r13
    bafb:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    bb00:	49 f7 d5             	not    %r13
    bb03:	eb 42                	jmp    bb47 <mm_alloc_internal+0xd7>
    bb05:	0f 1f 00             	nopl   (%rax)
    bb08:	b9 16 00 00 00       	mov    $0x16,%ecx
    bb0d:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
    bb12:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    bb19:	00 00 
    bb1b:	0f 85 41 02 00 00    	jne    bd62 <mm_alloc_internal+0x2f2>
    bb21:	48 83 c4 68          	add    $0x68,%rsp
    bb25:	89 c8                	mov    %ecx,%eax
    bb27:	5b                   	pop    %rbx
    bb28:	5d                   	pop    %rbp
    bb29:	41 5c                	pop    %r12
    bb2b:	41 5d                	pop    %r13
    bb2d:	41 5e                	pop    %r14
    bb2f:	41 5f                	pop    %r15
    bb31:	c3                   	ret    
    bb32:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    bb38:	48 c7 44 24 08 00 10 	movq   $0x1000,0x8(%rsp)
    bb3f:	00 00 
    bb41:	41 bd ff 0f 00 00    	mov    $0xfff,%r13d
    bb47:	48 89 7c 24 38       	mov    %rdi,0x38(%rsp)
    bb4c:	49 21 fd             	and    %rdi,%r13
    bb4f:	75 b7                	jne    bb08 <mm_alloc_internal+0x98>
    bb51:	48 85 ff             	test   %rdi,%rdi
    bb54:	74 23                	je     bb79 <mm_alloc_internal+0x109>
    bb56:	4c 89 fe             	mov    %r15,%rsi
    bb59:	89 54 24 1c          	mov    %edx,0x1c(%rsp)
    bb5d:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
    bb62:	e8 99 9d ff ff       	call   5900 <sgx_mm_is_within_enclave>
    bb67:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
    bb6c:	8b 54 24 1c          	mov    0x1c(%rsp),%edx
    bb70:	b9 0d 00 00 00       	mov    $0xd,%ecx
    bb75:	84 c0                	test   %al,%al
    bb77:	74 94                	je     bb0d <mm_alloc_internal+0x9d>
    bb79:	48 8b 3d 90 ee 01 00 	mov    0x1ee90(%rip),%rdi        # 2aa10 <mm_lock>
    bb80:	89 54 24 1c          	mov    %edx,0x1c(%rsp)
    bb84:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
    bb89:	e8 12 9d ff ff       	call   58a0 <sgx_mm_mutex_lock>
    bb8e:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
    bb93:	8b 54 24 1c          	mov    0x1c(%rsp),%edx
    bb97:	b9 0e 00 00 00       	mov    $0xe,%ecx
    bb9c:	85 c0                	test   %eax,%eax
    bb9e:	0f 85 69 ff ff ff    	jne    bb0d <mm_alloc_internal+0x9d>
    bba4:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
    bba9:	49 83 c8 03          	or     $0x3,%r8
    bbad:	0f b6 c2             	movzbl %dl,%eax
    bbb0:	f6 c2 01             	test   $0x1,%dl
    bbb3:	89 44 24 10          	mov    %eax,0x10(%rsp)
    bbb7:	4d 0f 44 e8          	cmove  %r8,%r13
    bbbb:	48 85 f6             	test   %rsi,%rsi
    bbbe:	0f 85 9c 00 00 00    	jne    bc60 <mm_alloc_internal+0x1f0>
    bbc4:	4c 8d 44 24 40       	lea    0x40(%rsp),%r8
    bbc9:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    bbce:	48 8d 4c 24 38       	lea    0x38(%rsp),%rcx
    bbd3:	4c 89 fe             	mov    %r15,%rsi
    bbd6:	4c 89 f7             	mov    %r14,%rdi
    bbd9:	e8 02 df ff ff       	call   9ae0 <find_free_region>
    bbde:	84 c0                	test   %al,%al
    bbe0:	0f 84 0a 01 00 00    	je     bcf0 <mm_alloc_internal+0x280>
    bbe6:	48 83 ec 08          	sub    $0x8,%rsp
    bbea:	49 89 e9             	mov    %rbp,%r9
    bbed:	49 89 d8             	mov    %rbx,%r8
    bbf0:	4c 89 e9             	mov    %r13,%rcx
    bbf3:	ff 74 24 48          	push   0x48(%rsp)
    bbf7:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
    bbfc:	4c 89 fe             	mov    %r15,%rsi
    bbff:	8b 54 24 20          	mov    0x20(%rsp),%edx
    bc03:	e8 c8 e2 ff ff       	call   9ed0 <ema_new>
    bc08:	48 89 c7             	mov    %rax,%rdi
    bc0b:	58                   	pop    %rax
    bc0c:	5a                   	pop    %rdx
    bc0d:	48 85 ff             	test   %rdi,%rdi
    bc10:	0f 84 da 00 00 00    	je     bcf0 <mm_alloc_internal+0x280>
    bc16:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    bc1b:	e8 50 f2 ff ff       	call   ae70 <ema_do_alloc>
    bc20:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    bc25:	85 c0                	test   %eax,%eax
    bc27:	89 c1                	mov    %eax,%ecx
    bc29:	0f 85 21 01 00 00    	jne    bd50 <mm_alloc_internal+0x2e0>
    bc2f:	4d 85 e4             	test   %r12,%r12
    bc32:	74 09                	je     bc3d <mm_alloc_internal+0x1cd>
    bc34:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    bc39:	49 89 04 24          	mov    %rax,(%r12)
    bc3d:	48 8b 3d cc ed 01 00 	mov    0x1edcc(%rip),%rdi        # 2aa10 <mm_lock>
    bc44:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
    bc48:	e8 73 9c ff ff       	call   58c0 <sgx_mm_mutex_unlock>
    bc4d:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
    bc51:	e9 b7 fe ff ff       	jmp    bb0d <mm_alloc_internal+0x9d>
    bc56:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    bc5d:	00 00 00 
    bc60:	83 e2 40             	and    $0x40,%edx
    bc63:	4a 8d 04 3e          	lea    (%rsi,%r15,1),%rax
    bc67:	48 8d 4c 24 48       	lea    0x48(%rsp),%rcx
    bc6c:	4c 89 f7             	mov    %r14,%rdi
    bc6f:	89 54 24 1c          	mov    %edx,0x1c(%rsp)
    bc73:	4c 8d 44 24 50       	lea    0x50(%rsp),%r8
    bc78:	48 89 c2             	mov    %rax,%rdx
    bc7b:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
    bc82:	00 00 
    bc84:	48 c7 44 24 50 00 00 	movq   $0x0,0x50(%rsp)
    bc8b:	00 00 
    bc8d:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    bc92:	48 89 74 24 28       	mov    %rsi,0x28(%rsp)
    bc97:	e8 84 db ff ff       	call   9820 <search_ema_range>
    bc9c:	85 c0                	test   %eax,%eax
    bc9e:	75 60                	jne    bd00 <mm_alloc_internal+0x290>
    bca0:	55                   	push   %rbp
    bca1:	4d 89 e9             	mov    %r13,%r9
    bca4:	53                   	push   %rbx
    bca5:	48 8b 7c 24 58       	mov    0x58(%rsp),%rdi
    bcaa:	44 8b 44 24 20       	mov    0x20(%rsp),%r8d
    bcaf:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
    bcb4:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
    bcb9:	48 8b 74 24 60       	mov    0x60(%rsp),%rsi
    bcbe:	e8 5d f0 ff ff       	call   ad20 <ema_realloc_from_reserve_range>
    bcc3:	41 58                	pop    %r8
    bcc5:	41 59                	pop    %r9
    bcc7:	48 89 c7             	mov    %rax,%rdi
    bcca:	48 85 c0             	test   %rax,%rax
    bccd:	0f 85 43 ff ff ff    	jne    bc16 <mm_alloc_internal+0x1a6>
    bcd3:	8b 7c 24 1c          	mov    0x1c(%rsp),%edi
    bcd7:	b9 11 00 00 00       	mov    $0x11,%ecx
    bcdc:	85 ff                	test   %edi,%edi
    bcde:	0f 84 e0 fe ff ff    	je     bbc4 <mm_alloc_internal+0x154>
    bce4:	e9 54 ff ff ff       	jmp    bc3d <mm_alloc_internal+0x1cd>
    bce9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    bcf0:	b9 0c 00 00 00       	mov    $0xc,%ecx
    bcf5:	e9 43 ff ff ff       	jmp    bc3d <mm_alloc_internal+0x1cd>
    bcfa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    bd00:	4c 8d 44 24 40       	lea    0x40(%rsp),%r8
    bd05:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
    bd0a:	4c 89 fa             	mov    %r15,%rdx
    bd0d:	4c 89 f7             	mov    %r14,%rdi
    bd10:	4c 89 c1             	mov    %r8,%rcx
    bd13:	4c 89 44 24 20       	mov    %r8,0x20(%rsp)
    bd18:	e8 d3 e0 ff ff       	call   9df0 <find_free_region_at>
    bd1d:	3c 01                	cmp    $0x1,%al
    bd1f:	0f 84 c1 fe ff ff    	je     bbe6 <mm_alloc_internal+0x176>
    bd25:	8b 74 24 1c          	mov    0x1c(%rsp),%esi
    bd29:	b9 01 00 00 00       	mov    $0x1,%ecx
    bd2e:	85 f6                	test   %esi,%esi
    bd30:	0f 85 07 ff ff ff    	jne    bc3d <mm_alloc_internal+0x1cd>
    bd36:	84 c0                	test   %al,%al
    bd38:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
    bd3d:	0f 84 86 fe ff ff    	je     bbc9 <mm_alloc_internal+0x159>
    bd43:	e9 9e fe ff ff       	jmp    bbe6 <mm_alloc_internal+0x176>
    bd48:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    bd4f:	00 
    bd50:	89 44 24 08          	mov    %eax,0x8(%rsp)
    bd54:	e8 87 e2 ff ff       	call   9fe0 <ema_destroy>
    bd59:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
    bd5d:	e9 db fe ff ff       	jmp    bc3d <mm_alloc_internal+0x1cd>
    bd62:	e8 09 4b 00 00       	call   10870 <__stack_chk_fail>
    bd67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    bd6e:	00 00 

000000000000bd70 <sgx_mm_alloc>:
    bd70:	f3 0f 1e fa          	endbr64 
    bd74:	f6 c2 80             	test   $0x80,%dl
    bd77:	75 17                	jne    bd90 <sgx_mm_alloc+0x20>
    bd79:	48 83 ec 10          	sub    $0x10,%rsp
    bd7d:	48 8d 05 7c e2 00 00 	lea    0xe27c(%rip),%rax        # 1a000 <g_user_ema_root>
    bd84:	50                   	push   %rax
    bd85:	e8 e6 fc ff ff       	call   ba70 <mm_alloc_internal>
    bd8a:	48 83 c4 18          	add    $0x18,%rsp
    bd8e:	c3                   	ret    
    bd8f:	90                   	nop
    bd90:	b8 16 00 00 00       	mov    $0x16,%eax
    bd95:	c3                   	ret    
    bd96:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    bd9d:	00 00 00 

000000000000bda0 <mm_commit_internal>:
    bda0:	f3 0f 1e fa          	endbr64 
    bda4:	41 55                	push   %r13
    bda6:	49 89 d5             	mov    %rdx,%r13
    bda9:	41 54                	push   %r12
    bdab:	49 89 fc             	mov    %rdi,%r12
    bdae:	55                   	push   %rbp
    bdaf:	48 89 f5             	mov    %rsi,%rbp
    bdb2:	53                   	push   %rbx
    bdb3:	bb 0e 00 00 00       	mov    $0xe,%ebx
    bdb8:	48 83 ec 28          	sub    $0x28,%rsp
    bdbc:	48 8b 3d 4d ec 01 00 	mov    0x1ec4d(%rip),%rdi        # 2aa10 <mm_lock>
    bdc3:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    bdca:	00 00 
    bdcc:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    bdd1:	31 c0                	xor    %eax,%eax
    bdd3:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    bdda:	00 00 
    bddc:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    bde3:	00 00 
    bde5:	e8 b6 9a ff ff       	call   58a0 <sgx_mm_mutex_lock>
    bdea:	85 c0                	test   %eax,%eax
    bdec:	75 47                	jne    be35 <mm_commit_internal+0x95>
    bdee:	4c 01 e5             	add    %r12,%rbp
    bdf1:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    bdf6:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    bdfb:	4c 89 e6             	mov    %r12,%rsi
    bdfe:	48 89 ea             	mov    %rbp,%rdx
    be01:	4c 89 ef             	mov    %r13,%rdi
    be04:	bb 16 00 00 00       	mov    $0x16,%ebx
    be09:	e8 12 da ff ff       	call   9820 <search_ema_range>
    be0e:	85 c0                	test   %eax,%eax
    be10:	78 17                	js     be29 <mm_commit_internal+0x89>
    be12:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    be17:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    be1c:	48 89 e9             	mov    %rbp,%rcx
    be1f:	4c 89 e2             	mov    %r12,%rdx
    be22:	e8 19 e4 ff ff       	call   a240 <ema_do_commit_loop>
    be27:	89 c3                	mov    %eax,%ebx
    be29:	48 8b 3d e0 eb 01 00 	mov    0x1ebe0(%rip),%rdi        # 2aa10 <mm_lock>
    be30:	e8 8b 9a ff ff       	call   58c0 <sgx_mm_mutex_unlock>
    be35:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    be3a:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    be41:	00 00 
    be43:	75 0d                	jne    be52 <mm_commit_internal+0xb2>
    be45:	48 83 c4 28          	add    $0x28,%rsp
    be49:	89 d8                	mov    %ebx,%eax
    be4b:	5b                   	pop    %rbx
    be4c:	5d                   	pop    %rbp
    be4d:	41 5c                	pop    %r12
    be4f:	41 5d                	pop    %r13
    be51:	c3                   	ret    
    be52:	e8 19 4a 00 00       	call   10870 <__stack_chk_fail>
    be57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    be5e:	00 00 

000000000000be60 <sgx_mm_commit>:
    be60:	f3 0f 1e fa          	endbr64 
    be64:	48 8d 15 95 e1 00 00 	lea    0xe195(%rip),%rdx        # 1a000 <g_user_ema_root>
    be6b:	e9 30 ff ff ff       	jmp    bda0 <mm_commit_internal>

000000000000be70 <mm_uncommit_internal>:
    be70:	f3 0f 1e fa          	endbr64 
    be74:	41 55                	push   %r13
    be76:	49 89 d5             	mov    %rdx,%r13
    be79:	41 54                	push   %r12
    be7b:	49 89 fc             	mov    %rdi,%r12
    be7e:	55                   	push   %rbp
    be7f:	48 89 f5             	mov    %rsi,%rbp
    be82:	53                   	push   %rbx
    be83:	bb 0e 00 00 00       	mov    $0xe,%ebx
    be88:	48 83 ec 28          	sub    $0x28,%rsp
    be8c:	48 8b 3d 7d eb 01 00 	mov    0x1eb7d(%rip),%rdi        # 2aa10 <mm_lock>
    be93:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    be9a:	00 00 
    be9c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    bea1:	31 c0                	xor    %eax,%eax
    bea3:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    beaa:	00 00 
    beac:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    beb3:	00 00 
    beb5:	e8 e6 99 ff ff       	call   58a0 <sgx_mm_mutex_lock>
    beba:	85 c0                	test   %eax,%eax
    bebc:	75 47                	jne    bf05 <mm_uncommit_internal+0x95>
    bebe:	4c 01 e5             	add    %r12,%rbp
    bec1:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    bec6:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    becb:	4c 89 e6             	mov    %r12,%rsi
    bece:	48 89 ea             	mov    %rbp,%rdx
    bed1:	4c 89 ef             	mov    %r13,%rdi
    bed4:	bb 16 00 00 00       	mov    $0x16,%ebx
    bed9:	e8 42 d9 ff ff       	call   9820 <search_ema_range>
    bede:	85 c0                	test   %eax,%eax
    bee0:	78 17                	js     bef9 <mm_uncommit_internal+0x89>
    bee2:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    bee7:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    beec:	48 89 e9             	mov    %rbp,%rcx
    beef:	4c 89 e2             	mov    %r12,%rdx
    bef2:	e8 89 e9 ff ff       	call   a880 <ema_do_uncommit_loop>
    bef7:	89 c3                	mov    %eax,%ebx
    bef9:	48 8b 3d 10 eb 01 00 	mov    0x1eb10(%rip),%rdi        # 2aa10 <mm_lock>
    bf00:	e8 bb 99 ff ff       	call   58c0 <sgx_mm_mutex_unlock>
    bf05:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    bf0a:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    bf11:	00 00 
    bf13:	75 0d                	jne    bf22 <mm_uncommit_internal+0xb2>
    bf15:	48 83 c4 28          	add    $0x28,%rsp
    bf19:	89 d8                	mov    %ebx,%eax
    bf1b:	5b                   	pop    %rbx
    bf1c:	5d                   	pop    %rbp
    bf1d:	41 5c                	pop    %r12
    bf1f:	41 5d                	pop    %r13
    bf21:	c3                   	ret    
    bf22:	e8 49 49 00 00       	call   10870 <__stack_chk_fail>
    bf27:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    bf2e:	00 00 

000000000000bf30 <sgx_mm_uncommit>:
    bf30:	f3 0f 1e fa          	endbr64 
    bf34:	48 8d 15 c5 e0 00 00 	lea    0xe0c5(%rip),%rdx        # 1a000 <g_user_ema_root>
    bf3b:	e9 30 ff ff ff       	jmp    be70 <mm_uncommit_internal>

000000000000bf40 <mm_dealloc_internal>:
    bf40:	f3 0f 1e fa          	endbr64 
    bf44:	41 55                	push   %r13
    bf46:	49 89 d5             	mov    %rdx,%r13
    bf49:	41 54                	push   %r12
    bf4b:	49 89 fc             	mov    %rdi,%r12
    bf4e:	55                   	push   %rbp
    bf4f:	48 89 f5             	mov    %rsi,%rbp
    bf52:	53                   	push   %rbx
    bf53:	bb 0e 00 00 00       	mov    $0xe,%ebx
    bf58:	48 83 ec 28          	sub    $0x28,%rsp
    bf5c:	48 8b 3d ad ea 01 00 	mov    0x1eaad(%rip),%rdi        # 2aa10 <mm_lock>
    bf63:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    bf6a:	00 00 
    bf6c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    bf71:	31 c0                	xor    %eax,%eax
    bf73:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    bf7a:	00 00 
    bf7c:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    bf83:	00 00 
    bf85:	e8 16 99 ff ff       	call   58a0 <sgx_mm_mutex_lock>
    bf8a:	85 c0                	test   %eax,%eax
    bf8c:	75 47                	jne    bfd5 <mm_dealloc_internal+0x95>
    bf8e:	4c 01 e5             	add    %r12,%rbp
    bf91:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    bf96:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    bf9b:	4c 89 e6             	mov    %r12,%rsi
    bf9e:	48 89 ea             	mov    %rbp,%rdx
    bfa1:	4c 89 ef             	mov    %r13,%rdi
    bfa4:	bb 16 00 00 00       	mov    $0x16,%ebx
    bfa9:	e8 72 d8 ff ff       	call   9820 <search_ema_range>
    bfae:	85 c0                	test   %eax,%eax
    bfb0:	78 17                	js     bfc9 <mm_dealloc_internal+0x89>
    bfb2:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    bfb7:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    bfbc:	48 89 e9             	mov    %rbp,%rcx
    bfbf:	4c 89 e2             	mov    %r12,%rdx
    bfc2:	e8 69 e8 ff ff       	call   a830 <ema_do_dealloc_loop>
    bfc7:	89 c3                	mov    %eax,%ebx
    bfc9:	48 8b 3d 40 ea 01 00 	mov    0x1ea40(%rip),%rdi        # 2aa10 <mm_lock>
    bfd0:	e8 eb 98 ff ff       	call   58c0 <sgx_mm_mutex_unlock>
    bfd5:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    bfda:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    bfe1:	00 00 
    bfe3:	75 0d                	jne    bff2 <mm_dealloc_internal+0xb2>
    bfe5:	48 83 c4 28          	add    $0x28,%rsp
    bfe9:	89 d8                	mov    %ebx,%eax
    bfeb:	5b                   	pop    %rbx
    bfec:	5d                   	pop    %rbp
    bfed:	41 5c                	pop    %r12
    bfef:	41 5d                	pop    %r13
    bff1:	c3                   	ret    
    bff2:	e8 79 48 00 00       	call   10870 <__stack_chk_fail>
    bff7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    bffe:	00 00 

000000000000c000 <sgx_mm_dealloc>:
    c000:	f3 0f 1e fa          	endbr64 
    c004:	48 8d 15 f5 df 00 00 	lea    0xdff5(%rip),%rdx        # 1a000 <g_user_ema_root>
    c00b:	e9 30 ff ff ff       	jmp    bf40 <mm_dealloc_internal>

000000000000c010 <mm_commit_data_internal>:
    c010:	f3 0f 1e fa          	endbr64 
    c014:	41 57                	push   %r15
    c016:	41 56                	push   %r14
    c018:	41 55                	push   %r13
    c01a:	41 54                	push   %r12
    c01c:	55                   	push   %rbp
    c01d:	53                   	push   %rbx
    c01e:	48 83 ec 28          	sub    $0x28,%rsp
    c022:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c029:	00 00 
    c02b:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    c030:	31 c0                	xor    %eax,%eax
    c032:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    c039:	00 00 
    c03b:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    c042:	00 00 
    c044:	48 85 f6             	test   %rsi,%rsi
    c047:	0f 84 a3 00 00 00    	je     c0f0 <mm_commit_data_internal+0xe0>
    c04d:	48 89 d0             	mov    %rdx,%rax
    c050:	49 89 fc             	mov    %rdi,%r12
    c053:	48 89 f3             	mov    %rsi,%rbx
    c056:	48 89 d5             	mov    %rdx,%rbp
    c059:	48 09 f0             	or     %rsi,%rax
    c05c:	48 09 f8             	or     %rdi,%rax
    c05f:	a9 ff 0f 00 00       	test   $0xfff,%eax
    c064:	0f 85 86 00 00 00    	jne    c0f0 <mm_commit_data_internal+0xe0>
    c06a:	41 89 cf             	mov    %ecx,%r15d
    c06d:	83 f9 07             	cmp    $0x7,%ecx
    c070:	77 7e                	ja     c0f0 <mm_commit_data_internal+0xe0>
    c072:	48 89 d7             	mov    %rdx,%rdi
    c075:	4d 89 c6             	mov    %r8,%r14
    c078:	e8 83 98 ff ff       	call   5900 <sgx_mm_is_within_enclave>
    c07d:	84 c0                	test   %al,%al
    c07f:	74 6f                	je     c0f0 <mm_commit_data_internal+0xe0>
    c081:	48 8b 3d 88 e9 01 00 	mov    0x1e988(%rip),%rdi        # 2aa10 <mm_lock>
    c088:	41 bd 0e 00 00 00    	mov    $0xe,%r13d
    c08e:	e8 0d 98 ff ff       	call   58a0 <sgx_mm_mutex_lock>
    c093:	85 c0                	test   %eax,%eax
    c095:	75 5f                	jne    c0f6 <mm_commit_data_internal+0xe6>
    c097:	4c 01 e3             	add    %r12,%rbx
    c09a:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    c09f:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    c0a4:	4c 89 e6             	mov    %r12,%rsi
    c0a7:	48 89 da             	mov    %rbx,%rdx
    c0aa:	4c 89 f7             	mov    %r14,%rdi
    c0ad:	41 bd 16 00 00 00    	mov    $0x16,%r13d
    c0b3:	e8 68 d7 ff ff       	call   9820 <search_ema_range>
    c0b8:	85 c0                	test   %eax,%eax
    c0ba:	78 1e                	js     c0da <mm_commit_data_internal+0xca>
    c0bc:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    c0c1:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    c0c6:	45 89 f9             	mov    %r15d,%r9d
    c0c9:	49 89 e8             	mov    %rbp,%r8
    c0cc:	48 89 d9             	mov    %rbx,%rcx
    c0cf:	4c 89 e2             	mov    %r12,%rdx
    c0d2:	e8 c9 ea ff ff       	call   aba0 <ema_do_commit_data_loop>
    c0d7:	41 89 c5             	mov    %eax,%r13d
    c0da:	48 8b 3d 2f e9 01 00 	mov    0x1e92f(%rip),%rdi        # 2aa10 <mm_lock>
    c0e1:	e8 da 97 ff ff       	call   58c0 <sgx_mm_mutex_unlock>
    c0e6:	eb 0e                	jmp    c0f6 <mm_commit_data_internal+0xe6>
    c0e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    c0ef:	00 
    c0f0:	41 bd 16 00 00 00    	mov    $0x16,%r13d
    c0f6:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    c0fb:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    c102:	00 00 
    c104:	75 12                	jne    c118 <mm_commit_data_internal+0x108>
    c106:	48 83 c4 28          	add    $0x28,%rsp
    c10a:	44 89 e8             	mov    %r13d,%eax
    c10d:	5b                   	pop    %rbx
    c10e:	5d                   	pop    %rbp
    c10f:	41 5c                	pop    %r12
    c111:	41 5d                	pop    %r13
    c113:	41 5e                	pop    %r14
    c115:	41 5f                	pop    %r15
    c117:	c3                   	ret    
    c118:	e8 53 47 00 00       	call   10870 <__stack_chk_fail>
    c11d:	0f 1f 00             	nopl   (%rax)

000000000000c120 <sgx_mm_commit_data>:
    c120:	f3 0f 1e fa          	endbr64 
    c124:	4c 8d 05 d5 de 00 00 	lea    0xded5(%rip),%r8        # 1a000 <g_user_ema_root>
    c12b:	e9 e0 fe ff ff       	jmp    c010 <mm_commit_data_internal>

000000000000c130 <mm_modify_type_internal>:
    c130:	f3 0f 1e fa          	endbr64 
    c134:	41 54                	push   %r12
    c136:	55                   	push   %rbp
    c137:	bd 01 00 00 00       	mov    $0x1,%ebp
    c13c:	53                   	push   %rbx
    c13d:	48 83 ec 20          	sub    $0x20,%rsp
    c141:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c148:	00 00 
    c14a:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    c14f:	31 c0                	xor    %eax,%eax
    c151:	81 fa 00 01 00 00    	cmp    $0x100,%edx
    c157:	0f 85 83 00 00 00    	jne    c1e0 <mm_modify_type_internal+0xb0>
    c15d:	48 81 fe 00 10 00 00 	cmp    $0x1000,%rsi
    c164:	0f 85 96 00 00 00    	jne    c200 <mm_modify_type_internal+0xd0>
    c16a:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    c171:	00 00 
    c173:	49 89 fc             	mov    %rdi,%r12
    c176:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    c17d:	00 00 
    c17f:	f7 c7 ff 0f 00 00    	test   $0xfff,%edi
    c185:	75 79                	jne    c200 <mm_modify_type_internal+0xd0>
    c187:	48 8b 3d 82 e8 01 00 	mov    0x1e882(%rip),%rdi        # 2aa10 <mm_lock>
    c18e:	48 89 cb             	mov    %rcx,%rbx
    c191:	bd 0e 00 00 00       	mov    $0xe,%ebp
    c196:	e8 05 97 ff ff       	call   58a0 <sgx_mm_mutex_lock>
    c19b:	85 c0                	test   %eax,%eax
    c19d:	75 41                	jne    c1e0 <mm_modify_type_internal+0xb0>
    c19f:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    c1a4:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    c1a9:	4c 89 e6             	mov    %r12,%rsi
    c1ac:	48 89 df             	mov    %rbx,%rdi
    c1af:	49 8d 94 24 00 10 00 	lea    0x1000(%r12),%rdx
    c1b6:	00 
    c1b7:	bd 16 00 00 00       	mov    $0x16,%ebp
    c1bc:	e8 5f d6 ff ff       	call   9820 <search_ema_range>
    c1c1:	85 c0                	test   %eax,%eax
    c1c3:	78 0f                	js     c1d4 <mm_modify_type_internal+0xa4>
    c1c5:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    c1ca:	4c 89 e6             	mov    %r12,%rsi
    c1cd:	e8 3e e1 ff ff       	call   a310 <ema_change_to_tcs>
    c1d2:	89 c5                	mov    %eax,%ebp
    c1d4:	48 8b 3d 35 e8 01 00 	mov    0x1e835(%rip),%rdi        # 2aa10 <mm_lock>
    c1db:	e8 e0 96 ff ff       	call   58c0 <sgx_mm_mutex_unlock>
    c1e0:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    c1e5:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    c1ec:	00 00 
    c1ee:	75 17                	jne    c207 <mm_modify_type_internal+0xd7>
    c1f0:	48 83 c4 20          	add    $0x20,%rsp
    c1f4:	89 e8                	mov    %ebp,%eax
    c1f6:	5b                   	pop    %rbx
    c1f7:	5d                   	pop    %rbp
    c1f8:	41 5c                	pop    %r12
    c1fa:	c3                   	ret    
    c1fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    c200:	bd 16 00 00 00       	mov    $0x16,%ebp
    c205:	eb d9                	jmp    c1e0 <mm_modify_type_internal+0xb0>
    c207:	e8 64 46 00 00       	call   10870 <__stack_chk_fail>
    c20c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000c210 <sgx_mm_modify_type>:
    c210:	f3 0f 1e fa          	endbr64 
    c214:	55                   	push   %rbp
    c215:	53                   	push   %rbx
    c216:	bb 01 00 00 00       	mov    $0x1,%ebx
    c21b:	48 83 ec 28          	sub    $0x28,%rsp
    c21f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c226:	00 00 
    c228:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    c22d:	31 c0                	xor    %eax,%eax
    c22f:	81 fa 00 01 00 00    	cmp    $0x100,%edx
    c235:	0f 85 85 00 00 00    	jne    c2c0 <sgx_mm_modify_type+0xb0>
    c23b:	48 81 fe 00 10 00 00 	cmp    $0x1000,%rsi
    c242:	0f 85 98 00 00 00    	jne    c2e0 <sgx_mm_modify_type+0xd0>
    c248:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    c24f:	00 00 
    c251:	48 89 fd             	mov    %rdi,%rbp
    c254:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    c25b:	00 00 
    c25d:	f7 c7 ff 0f 00 00    	test   $0xfff,%edi
    c263:	75 7b                	jne    c2e0 <sgx_mm_modify_type+0xd0>
    c265:	48 8b 3d a4 e7 01 00 	mov    0x1e7a4(%rip),%rdi        # 2aa10 <mm_lock>
    c26c:	bb 0e 00 00 00       	mov    $0xe,%ebx
    c271:	e8 2a 96 ff ff       	call   58a0 <sgx_mm_mutex_lock>
    c276:	85 c0                	test   %eax,%eax
    c278:	75 46                	jne    c2c0 <sgx_mm_modify_type+0xb0>
    c27a:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    c27f:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    c284:	48 89 ee             	mov    %rbp,%rsi
    c287:	bb 16 00 00 00       	mov    $0x16,%ebx
    c28c:	48 8d 95 00 10 00 00 	lea    0x1000(%rbp),%rdx
    c293:	48 8d 3d 66 dd 00 00 	lea    0xdd66(%rip),%rdi        # 1a000 <g_user_ema_root>
    c29a:	e8 81 d5 ff ff       	call   9820 <search_ema_range>
    c29f:	85 c0                	test   %eax,%eax
    c2a1:	78 0f                	js     c2b2 <sgx_mm_modify_type+0xa2>
    c2a3:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    c2a8:	48 89 ee             	mov    %rbp,%rsi
    c2ab:	e8 60 e0 ff ff       	call   a310 <ema_change_to_tcs>
    c2b0:	89 c3                	mov    %eax,%ebx
    c2b2:	48 8b 3d 57 e7 01 00 	mov    0x1e757(%rip),%rdi        # 2aa10 <mm_lock>
    c2b9:	e8 02 96 ff ff       	call   58c0 <sgx_mm_mutex_unlock>
    c2be:	66 90                	xchg   %ax,%ax
    c2c0:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    c2c5:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    c2cc:	00 00 
    c2ce:	75 17                	jne    c2e7 <sgx_mm_modify_type+0xd7>
    c2d0:	48 83 c4 28          	add    $0x28,%rsp
    c2d4:	89 d8                	mov    %ebx,%eax
    c2d6:	5b                   	pop    %rbx
    c2d7:	5d                   	pop    %rbp
    c2d8:	c3                   	ret    
    c2d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c2e0:	bb 16 00 00 00       	mov    $0x16,%ebx
    c2e5:	eb d9                	jmp    c2c0 <sgx_mm_modify_type+0xb0>
    c2e7:	e8 84 45 00 00       	call   10870 <__stack_chk_fail>
    c2ec:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000c2f0 <mm_modify_permissions_internal>:
    c2f0:	f3 0f 1e fa          	endbr64 
    c2f4:	41 56                	push   %r14
    c2f6:	41 55                	push   %r13
    c2f8:	41 54                	push   %r12
    c2fa:	41 bc 16 00 00 00    	mov    $0x16,%r12d
    c300:	55                   	push   %rbp
    c301:	53                   	push   %rbx
    c302:	48 83 ec 20          	sub    $0x20,%rsp
    c306:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c30d:	00 00 
    c30f:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    c314:	31 c0                	xor    %eax,%eax
    c316:	48 85 f6             	test   %rsi,%rsi
    c319:	0f 84 9b 00 00 00    	je     c3ba <mm_modify_permissions_internal+0xca>
    c31f:	48 89 f8             	mov    %rdi,%rax
    c322:	48 89 fd             	mov    %rdi,%rbp
    c325:	48 89 f3             	mov    %rsi,%rbx
    c328:	48 09 f0             	or     %rsi,%rax
    c32b:	a9 ff 0f 00 00       	test   $0xfff,%eax
    c330:	0f 85 84 00 00 00    	jne    c3ba <mm_modify_permissions_internal+0xca>
    c336:	89 d0                	mov    %edx,%eax
    c338:	41 89 d6             	mov    %edx,%r14d
    c33b:	83 e0 05             	and    $0x5,%eax
    c33e:	83 f8 04             	cmp    $0x4,%eax
    c341:	74 77                	je     c3ba <mm_modify_permissions_internal+0xca>
    c343:	48 8b 3d c6 e6 01 00 	mov    0x1e6c6(%rip),%rdi        # 2aa10 <mm_lock>
    c34a:	49 89 cd             	mov    %rcx,%r13
    c34d:	41 bc 0e 00 00 00    	mov    $0xe,%r12d
    c353:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    c35a:	00 00 
    c35c:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    c363:	00 00 
    c365:	e8 36 95 ff ff       	call   58a0 <sgx_mm_mutex_lock>
    c36a:	85 c0                	test   %eax,%eax
    c36c:	75 4c                	jne    c3ba <mm_modify_permissions_internal+0xca>
    c36e:	48 01 eb             	add    %rbp,%rbx
    c371:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    c376:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    c37b:	48 89 ee             	mov    %rbp,%rsi
    c37e:	48 89 da             	mov    %rbx,%rdx
    c381:	4c 89 ef             	mov    %r13,%rdi
    c384:	41 bc 16 00 00 00    	mov    $0x16,%r12d
    c38a:	e8 91 d4 ff ff       	call   9820 <search_ema_range>
    c38f:	85 c0                	test   %eax,%eax
    c391:	78 1b                	js     c3ae <mm_modify_permissions_internal+0xbe>
    c393:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    c398:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    c39d:	45 89 f0             	mov    %r14d,%r8d
    c3a0:	48 89 d9             	mov    %rbx,%rcx
    c3a3:	48 89 ea             	mov    %rbp,%rdx
    c3a6:	e8 f5 e5 ff ff       	call   a9a0 <ema_modify_permissions_loop>
    c3ab:	41 89 c4             	mov    %eax,%r12d
    c3ae:	48 8b 3d 5b e6 01 00 	mov    0x1e65b(%rip),%rdi        # 2aa10 <mm_lock>
    c3b5:	e8 06 95 ff ff       	call   58c0 <sgx_mm_mutex_unlock>
    c3ba:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    c3bf:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    c3c6:	00 00 
    c3c8:	75 10                	jne    c3da <mm_modify_permissions_internal+0xea>
    c3ca:	48 83 c4 20          	add    $0x20,%rsp
    c3ce:	44 89 e0             	mov    %r12d,%eax
    c3d1:	5b                   	pop    %rbx
    c3d2:	5d                   	pop    %rbp
    c3d3:	41 5c                	pop    %r12
    c3d5:	41 5d                	pop    %r13
    c3d7:	41 5e                	pop    %r14
    c3d9:	c3                   	ret    
    c3da:	e8 91 44 00 00       	call   10870 <__stack_chk_fail>
    c3df:	90                   	nop

000000000000c3e0 <sgx_mm_modify_permissions>:
    c3e0:	f3 0f 1e fa          	endbr64 
    c3e4:	48 8d 0d 15 dc 00 00 	lea    0xdc15(%rip),%rcx        # 1a000 <g_user_ema_root>
    c3eb:	e9 00 ff ff ff       	jmp    c2f0 <mm_modify_permissions_internal>

000000000000c3f0 <sgx_mm_init>:
    c3f0:	f3 0f 1e fa          	endbr64 
    c3f4:	55                   	push   %rbp
    c3f5:	48 89 fd             	mov    %rdi,%rbp
    c3f8:	53                   	push   %rbx
    c3f9:	48 89 f3             	mov    %rsi,%rbx
    c3fc:	48 83 ec 08          	sub    $0x8,%rsp
    c400:	e8 5b 94 ff ff       	call   5860 <sgx_mm_mutex_create>
    c405:	48 89 05 04 e6 01 00 	mov    %rax,0x1e604(%rip)        # 2aa10 <mm_lock>
    c40c:	48 85 c0             	test   %rax,%rax
    c40f:	74 2f                	je     c440 <sgx_mm_init+0x50>
    c411:	48 8d 3d 98 f4 ff ff 	lea    -0xb68(%rip),%rdi        # b8b0 <sgx_mm_enclave_pfhandler>
    c418:	48 89 2d e9 e5 01 00 	mov    %rbp,0x1e5e9(%rip)        # 2aa08 <mm_user_base>
    c41f:	48 89 1d da e5 01 00 	mov    %rbx,0x1e5da(%rip)        # 2aa00 <mm_user_end>
    c426:	e8 d5 93 ff ff       	call   5800 <sgx_mm_register_pfhandler>
    c42b:	84 c0                	test   %al,%al
    c42d:	74 11                	je     c440 <sgx_mm_init+0x50>
    c42f:	48 83 c4 08          	add    $0x8,%rsp
    c433:	31 c0                	xor    %eax,%eax
    c435:	5b                   	pop    %rbx
    c436:	5d                   	pop    %rbp
    c437:	c3                   	ret    
    c438:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    c43f:	00 
    c440:	48 83 c4 08          	add    $0x8,%rsp
    c444:	b8 0e 00 00 00       	mov    $0xe,%eax
    c449:	5b                   	pop    %rbx
    c44a:	5d                   	pop    %rbp
    c44b:	c3                   	ret    
    c44c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000c450 <alloca>:
    c450:	f3 0f 1e fa          	endbr64 
    c454:	5a                   	pop    %rdx
    c455:	48 89 e1             	mov    %rsp,%rcx
    c458:	48 83 c7 0f          	add    $0xf,%rdi
    c45c:	48 83 e7 f0          	and    $0xfffffffffffffff0,%rdi
    c460:	48 29 fc             	sub    %rdi,%rsp
    c463:	48 89 e0             	mov    %rsp,%rax
    c466:	3e ff e2             	notrack jmp *%rdx
    c469:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000c470 <heap_init>:
    c470:	f3 0f 1e fa          	endbr64 
    c474:	48 89 f8             	mov    %rdi,%rax
    c477:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    c47d:	48 85 ff             	test   %rdi,%rdi
    c480:	75 0e                	jne    c490 <heap_init+0x20>
    c482:	44 89 c0             	mov    %r8d,%eax
    c485:	c3                   	ret    
    c486:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    c48d:	00 00 00 
    c490:	48 89 f7             	mov    %rsi,%rdi
    c493:	49 89 c1             	mov    %rax,%r9
    c496:	48 09 d7             	or     %rdx,%rdi
    c499:	41 81 e1 ff 0f 00 00 	and    $0xfff,%r9d
    c4a0:	81 e7 ff 0f 00 00    	and    $0xfff,%edi
    c4a6:	48 0b 3d a3 b9 00 00 	or     0xb9a3(%rip),%rdi        # 17e50 <heap_base>
    c4ad:	4c 09 cf             	or     %r9,%rdi
    c4b0:	75 d0                	jne    c482 <heap_init+0x12>
    c4b2:	45 31 c0             	xor    %r8d,%r8d
    c4b5:	48 89 05 94 b9 00 00 	mov    %rax,0xb994(%rip)        # 17e50 <heap_base>
    c4bc:	48 89 35 85 b9 00 00 	mov    %rsi,0xb985(%rip)        # 17e48 <heap_size>
    c4c3:	44 89 c0             	mov    %r8d,%eax
    c4c6:	48 89 15 6b b9 00 00 	mov    %rdx,0xb96b(%rip)        # 17e38 <heap_min_size>
    c4cd:	89 0d 6d b9 00 00    	mov    %ecx,0xb96d(%rip)        # 17e40 <is_edmm_supported>
    c4d3:	c3                   	ret    
    c4d4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    c4db:	00 00 00 
    c4de:	66 90                	xchg   %ax,%ax

000000000000c4e0 <sbrk>:
    c4e0:	f3 0f 1e fa          	endbr64 
    c4e4:	55                   	push   %rbp
    c4e5:	53                   	push   %rbx
    c4e6:	48 83 ec 08          	sub    $0x8,%rsp
    c4ea:	48 8b 05 5f b9 00 00 	mov    0xb95f(%rip),%rax        # 17e50 <heap_base>
    c4f1:	48 85 c0             	test   %rax,%rax
    c4f4:	0f 84 e6 00 00 00    	je     c5e0 <sbrk+0x100>
    c4fa:	48 8b 1d 17 e5 01 00 	mov    0x1e517(%rip),%rbx        # 2aa18 <heap_used.0>
    c501:	48 85 ff             	test   %rdi,%rdi
    c504:	0f 88 86 00 00 00    	js     c590 <sbrk+0xb0>
    c50a:	48 89 fa             	mov    %rdi,%rdx
    c50d:	48 01 da             	add    %rbx,%rdx
    c510:	0f 82 ca 00 00 00    	jb     c5e0 <sbrk+0x100>
    c516:	48 39 15 2b b9 00 00 	cmp    %rdx,0xb92b(%rip)        # 17e48 <heap_size>
    c51d:	0f 82 bd 00 00 00    	jb     c5e0 <sbrk+0x100>
    c523:	48 8d 2c 18          	lea    (%rax,%rbx,1),%rbp
    c527:	48 85 ff             	test   %rdi,%rdi
    c52a:	74 53                	je     c57f <sbrk+0x9f>
    c52c:	48 8b 0d ed e4 01 00 	mov    0x1e4ed(%rip),%rcx        # 2aa20 <g_peak_heap_used>
    c533:	48 89 15 de e4 01 00 	mov    %rdx,0x1e4de(%rip)        # 2aa18 <heap_used.0>
    c53a:	48 39 d1             	cmp    %rdx,%rcx
    c53d:	48 0f 42 ca          	cmovb  %rdx,%rcx
    c541:	48 89 0d d8 e4 01 00 	mov    %rcx,0x1e4d8(%rip)        # 2aa20 <g_peak_heap_used>
    c548:	8b 0d f2 b8 00 00    	mov    0xb8f2(%rip),%ecx        # 17e40 <is_edmm_supported>
    c54e:	85 c9                	test   %ecx,%ecx
    c550:	74 2d                	je     c57f <sbrk+0x9f>
    c552:	48 8b 0d df b8 00 00 	mov    0xb8df(%rip),%rcx        # 17e38 <heap_min_size>
    c559:	48 39 d1             	cmp    %rdx,%rcx
    c55c:	73 21                	jae    c57f <sbrk+0x9f>
    c55e:	49 89 e8             	mov    %rbp,%r8
    c561:	48 39 d9             	cmp    %rbx,%rcx
    c564:	72 0a                	jb     c570 <sbrk+0x90>
    c566:	48 29 ca             	sub    %rcx,%rdx
    c569:	4c 8d 04 08          	lea    (%rax,%rcx,1),%r8
    c56d:	48 89 d7             	mov    %rdx,%rdi
    c570:	48 89 fe             	mov    %rdi,%rsi
    c573:	4c 89 c7             	mov    %r8,%rdi
    c576:	e8 d5 f2 ff ff       	call   b850 <mm_commit>
    c57b:	85 c0                	test   %eax,%eax
    c57d:	75 56                	jne    c5d5 <sbrk+0xf5>
    c57f:	48 83 c4 08          	add    $0x8,%rsp
    c583:	48 89 e8             	mov    %rbp,%rax
    c586:	5b                   	pop    %rbx
    c587:	5d                   	pop    %rbp
    c588:	c3                   	ret    
    c589:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c590:	48 89 fe             	mov    %rdi,%rsi
    c593:	48 f7 de             	neg    %rsi
    c596:	48 39 f3             	cmp    %rsi,%rbx
    c599:	72 45                	jb     c5e0 <sbrk+0x100>
    c59b:	44 8b 05 9e b8 00 00 	mov    0xb89e(%rip),%r8d        # 17e40 <is_edmm_supported>
    c5a2:	48 01 df             	add    %rbx,%rdi
    c5a5:	48 89 3d 6c e4 01 00 	mov    %rdi,0x1e46c(%rip)        # 2aa18 <heap_used.0>
    c5ac:	48 8d 2c 38          	lea    (%rax,%rdi,1),%rbp
    c5b0:	45 85 c0             	test   %r8d,%r8d
    c5b3:	74 ca                	je     c57f <sbrk+0x9f>
    c5b5:	48 8b 15 7c b8 00 00 	mov    0xb87c(%rip),%rdx        # 17e38 <heap_min_size>
    c5bc:	48 39 da             	cmp    %rbx,%rdx
    c5bf:	73 be                	jae    c57f <sbrk+0x9f>
    c5c1:	48 89 e9             	mov    %rbp,%rcx
    c5c4:	48 39 fa             	cmp    %rdi,%rdx
    c5c7:	73 27                	jae    c5f0 <sbrk+0x110>
    c5c9:	48 89 cf             	mov    %rcx,%rdi
    c5cc:	e8 8f f2 ff ff       	call   b860 <mm_uncommit>
    c5d1:	85 c0                	test   %eax,%eax
    c5d3:	74 aa                	je     c57f <sbrk+0x9f>
    c5d5:	48 89 1d 3c e4 01 00 	mov    %rbx,0x1e43c(%rip)        # 2aa18 <heap_used.0>
    c5dc:	0f 1f 40 00          	nopl   0x0(%rax)
    c5e0:	48 c7 c5 ff ff ff ff 	mov    $0xffffffffffffffff,%rbp
    c5e7:	eb 96                	jmp    c57f <sbrk+0x9f>
    c5e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c5f0:	48 89 de             	mov    %rbx,%rsi
    c5f3:	48 8d 0c 10          	lea    (%rax,%rdx,1),%rcx
    c5f7:	48 29 d6             	sub    %rdx,%rsi
    c5fa:	eb cd                	jmp    c5c9 <sbrk+0xe9>
    c5fc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000c600 <sgx_spin_lock>:
    c600:	f3 0f 1e fa          	endbr64 
    c604:	48 83 ec 18          	sub    $0x18,%rsp
    c608:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c60f:	00 00 
    c611:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    c616:	b8 01 00 00 00       	mov    $0x1,%eax
    c61b:	f0 87 07             	lock xchg %eax,(%rdi)
    c61e:	89 44 24 04          	mov    %eax,0x4(%rsp)
    c622:	8b 54 24 04          	mov    0x4(%rsp),%edx
    c626:	85 d2                	test   %edx,%edx
    c628:	74 48                	je     c672 <sgx_spin_lock+0x72>
    c62a:	48 89 f9             	mov    %rdi,%rcx
    c62d:	be 01 00 00 00       	mov    $0x1,%esi
    c632:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    c638:	ba 02 00 00 00       	mov    $0x2,%edx
    c63d:	0f 1f 00             	nopl   (%rax)
    c640:	85 d2                	test   %edx,%edx
    c642:	7e 0d                	jle    c651 <sgx_spin_lock+0x51>
    c644:	31 c0                	xor    %eax,%eax
    c646:	f3 90                	pause  
    c648:	f3 90                	pause  
    c64a:	83 c0 02             	add    $0x2,%eax
    c64d:	39 c2                	cmp    %eax,%edx
    c64f:	75 f5                	jne    c646 <sgx_spin_lock+0x46>
    c651:	b8 00 04 00 00       	mov    $0x400,%eax
    c656:	01 d2                	add    %edx,%edx
    c658:	39 c2                	cmp    %eax,%edx
    c65a:	0f 4f d0             	cmovg  %eax,%edx
    c65d:	8b 01                	mov    (%rcx),%eax
    c65f:	85 c0                	test   %eax,%eax
    c661:	75 dd                	jne    c640 <sgx_spin_lock+0x40>
    c663:	f0 87 31             	lock xchg %esi,(%rcx)
    c666:	89 74 24 04          	mov    %esi,0x4(%rsp)
    c66a:	8b 44 24 04          	mov    0x4(%rsp),%eax
    c66e:	85 c0                	test   %eax,%eax
    c670:	75 c6                	jne    c638 <sgx_spin_lock+0x38>
    c672:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    c677:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    c67e:	00 00 
    c680:	75 07                	jne    c689 <sgx_spin_lock+0x89>
    c682:	31 c0                	xor    %eax,%eax
    c684:	48 83 c4 18          	add    $0x18,%rsp
    c688:	c3                   	ret    
    c689:	e8 e2 41 00 00       	call   10870 <__stack_chk_fail>
    c68e:	66 90                	xchg   %ax,%ax

000000000000c690 <sgx_spin_unlock>:
    c690:	f3 0f 1e fa          	endbr64 
    c694:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
    c69a:	31 c0                	xor    %eax,%eax
    c69c:	c3                   	ret    
    c69d:	0f 1f 00             	nopl   (%rax)

000000000000c6a0 <dispose_chunk>:
    c6a0:	55                   	push   %rbp
    c6a1:	48 89 f0             	mov    %rsi,%rax
    c6a4:	48 01 d6             	add    %rdx,%rsi
    c6a7:	53                   	push   %rbx
    c6a8:	48 83 ec 08          	sub    $0x8,%rsp
    c6ac:	48 8b 48 08          	mov    0x8(%rax),%rcx
    c6b0:	f6 c1 01             	test   $0x1,%cl
    c6b3:	0f 85 f7 00 00 00    	jne    c7b0 <dispose_chunk+0x110>
    c6b9:	83 e1 03             	and    $0x3,%ecx
    c6bc:	4c 8b 10             	mov    (%rax),%r10
    c6bf:	0f 84 64 01 00 00    	je     c829 <dispose_chunk+0x189>
    c6c5:	4c 8b 47 18          	mov    0x18(%rdi),%r8
    c6c9:	4c 29 d0             	sub    %r10,%rax
    c6cc:	4c 01 d2             	add    %r10,%rdx
    c6cf:	4c 39 c0             	cmp    %r8,%rax
    c6d2:	0f 82 38 03 00 00    	jb     ca10 <dispose_chunk+0x370>
    c6d8:	48 39 47 20          	cmp    %rax,0x20(%rdi)
    c6dc:	0f 84 2e 04 00 00    	je     cb10 <dispose_chunk+0x470>
    c6e2:	4c 89 d1             	mov    %r10,%rcx
    c6e5:	4c 8b 48 18          	mov    0x18(%rax),%r9
    c6e9:	48 c1 e9 03          	shr    $0x3,%rcx
    c6ed:	49 81 fa ff 00 00 00 	cmp    $0xff,%r10
    c6f4:	0f 86 46 03 00 00    	jbe    ca40 <dispose_chunk+0x3a0>
    c6fa:	48 8b 58 30          	mov    0x30(%rax),%rbx
    c6fe:	49 39 c1             	cmp    %rax,%r9
    c701:	0f 84 89 05 00 00    	je     cc90 <dispose_chunk+0x5f0>
    c707:	48 8b 48 10          	mov    0x10(%rax),%rcx
    c70b:	4c 39 c1             	cmp    %r8,%rcx
    c70e:	0f 82 fc 02 00 00    	jb     ca10 <dispose_chunk+0x370>
    c714:	48 39 41 18          	cmp    %rax,0x18(%rcx)
    c718:	0f 85 f2 02 00 00    	jne    ca10 <dispose_chunk+0x370>
    c71e:	49 39 41 10          	cmp    %rax,0x10(%r9)
    c722:	0f 85 e8 02 00 00    	jne    ca10 <dispose_chunk+0x370>
    c728:	4c 89 49 18          	mov    %r9,0x18(%rcx)
    c72c:	49 89 49 10          	mov    %rcx,0x10(%r9)
    c730:	48 85 db             	test   %rbx,%rbx
    c733:	74 7f                	je     c7b4 <dispose_chunk+0x114>
    c735:	44 8b 50 38          	mov    0x38(%rax),%r10d
    c739:	4c 89 d1             	mov    %r10,%rcx
    c73c:	4d 8d 5a 4a          	lea    0x4a(%r10),%r11
    c740:	4a 39 84 d7 58 02 00 	cmp    %rax,0x258(%rdi,%r10,8)
    c747:	00 
    c748:	0f 84 32 06 00 00    	je     cd80 <dispose_chunk+0x6e0>
    c74e:	4c 39 c3             	cmp    %r8,%rbx
    c751:	0f 82 b9 02 00 00    	jb     ca10 <dispose_chunk+0x370>
    c757:	48 39 43 20          	cmp    %rax,0x20(%rbx)
    c75b:	0f 84 9c 06 00 00    	je     cdfd <dispose_chunk+0x75d>
    c761:	4c 89 4b 28          	mov    %r9,0x28(%rbx)
    c765:	4d 85 c9             	test   %r9,%r9
    c768:	74 4a                	je     c7b4 <dispose_chunk+0x114>
    c76a:	4d 39 c1             	cmp    %r8,%r9
    c76d:	0f 82 9d 02 00 00    	jb     ca10 <dispose_chunk+0x370>
    c773:	48 8b 48 20          	mov    0x20(%rax),%rcx
    c777:	49 89 59 30          	mov    %rbx,0x30(%r9)
    c77b:	48 85 c9             	test   %rcx,%rcx
    c77e:	74 11                	je     c791 <dispose_chunk+0xf1>
    c780:	4c 39 c1             	cmp    %r8,%rcx
    c783:	0f 82 87 02 00 00    	jb     ca10 <dispose_chunk+0x370>
    c789:	49 89 49 20          	mov    %rcx,0x20(%r9)
    c78d:	4c 89 49 30          	mov    %r9,0x30(%rcx)
    c791:	48 8b 48 28          	mov    0x28(%rax),%rcx
    c795:	48 85 c9             	test   %rcx,%rcx
    c798:	74 1a                	je     c7b4 <dispose_chunk+0x114>
    c79a:	4c 39 c1             	cmp    %r8,%rcx
    c79d:	0f 82 6d 02 00 00    	jb     ca10 <dispose_chunk+0x370>
    c7a3:	49 89 49 28          	mov    %rcx,0x28(%r9)
    c7a7:	4c 89 49 30          	mov    %r9,0x30(%rcx)
    c7ab:	eb 07                	jmp    c7b4 <dispose_chunk+0x114>
    c7ad:	0f 1f 00             	nopl   (%rax)
    c7b0:	4c 8b 47 18          	mov    0x18(%rdi),%r8
    c7b4:	4c 39 c6             	cmp    %r8,%rsi
    c7b7:	0f 82 53 02 00 00    	jb     ca10 <dispose_chunk+0x370>
    c7bd:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    c7c1:	f6 c1 02             	test   $0x2,%cl
    c7c4:	74 6a                	je     c830 <dispose_chunk+0x190>
    c7c6:	48 83 e1 fe          	and    $0xfffffffffffffffe,%rcx
    c7ca:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
    c7ce:	48 89 d1             	mov    %rdx,%rcx
    c7d1:	48 83 c9 01          	or     $0x1,%rcx
    c7d5:	48 89 48 08          	mov    %rcx,0x8(%rax)
    c7d9:	48 89 14 10          	mov    %rdx,(%rax,%rdx,1)
    c7dd:	48 89 d1             	mov    %rdx,%rcx
    c7e0:	48 c1 e9 03          	shr    $0x3,%rcx
    c7e4:	48 81 fa ff 00 00 00 	cmp    $0xff,%rdx
    c7eb:	0f 87 57 01 00 00    	ja     c948 <dispose_chunk+0x2a8>
    c7f1:	8d 54 09 09          	lea    0x9(%rcx,%rcx,1),%edx
    c7f5:	44 8b 0f             	mov    (%rdi),%r9d
    c7f8:	48 8d 34 d7          	lea    (%rdi,%rdx,8),%rsi
    c7fc:	ba 01 00 00 00       	mov    $0x1,%edx
    c801:	d3 e2                	shl    %cl,%edx
    c803:	41 85 d1             	test   %edx,%r9d
    c806:	0f 84 24 02 00 00    	je     ca30 <dispose_chunk+0x390>
    c80c:	48 8b 56 10          	mov    0x10(%rsi),%rdx
    c810:	4c 39 c2             	cmp    %r8,%rdx
    c813:	0f 82 f7 01 00 00    	jb     ca10 <dispose_chunk+0x370>
    c819:	48 89 46 10          	mov    %rax,0x10(%rsi)
    c81d:	48 89 42 18          	mov    %rax,0x18(%rdx)
    c821:	48 89 50 10          	mov    %rdx,0x10(%rax)
    c825:	48 89 70 18          	mov    %rsi,0x18(%rax)
    c829:	48 83 c4 08          	add    $0x8,%rsp
    c82d:	5b                   	pop    %rbx
    c82e:	5d                   	pop    %rbp
    c82f:	c3                   	ret    
    c830:	48 8b 5f 20          	mov    0x20(%rdi),%rbx
    c834:	48 39 77 28          	cmp    %rsi,0x28(%rdi)
    c838:	0f 84 22 03 00 00    	je     cb60 <dispose_chunk+0x4c0>
    c83e:	48 39 f3             	cmp    %rsi,%rbx
    c841:	0f 84 89 03 00 00    	je     cbd0 <dispose_chunk+0x530>
    c847:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    c84b:	4c 8b 4e 18          	mov    0x18(%rsi),%r9
    c84f:	49 89 cb             	mov    %rcx,%r11
    c852:	48 01 ca             	add    %rcx,%rdx
    c855:	49 c1 eb 03          	shr    $0x3,%r11
    c859:	48 81 f9 f8 00 00 00 	cmp    $0xf8,%rcx
    c860:	0f 86 7a 01 00 00    	jbe    c9e0 <dispose_chunk+0x340>
    c866:	48 8b 6e 30          	mov    0x30(%rsi),%rbp
    c86a:	49 39 f1             	cmp    %rsi,%r9
    c86d:	0f 84 7d 03 00 00    	je     cbf0 <dispose_chunk+0x550>
    c873:	48 8b 4e 10          	mov    0x10(%rsi),%rcx
    c877:	4c 39 c1             	cmp    %r8,%rcx
    c87a:	0f 82 90 01 00 00    	jb     ca10 <dispose_chunk+0x370>
    c880:	48 39 71 18          	cmp    %rsi,0x18(%rcx)
    c884:	0f 85 86 01 00 00    	jne    ca10 <dispose_chunk+0x370>
    c88a:	49 39 71 10          	cmp    %rsi,0x10(%r9)
    c88e:	0f 85 7c 01 00 00    	jne    ca10 <dispose_chunk+0x370>
    c894:	4c 89 49 18          	mov    %r9,0x18(%rcx)
    c898:	49 89 49 10          	mov    %rcx,0x10(%r9)
    c89c:	48 85 ed             	test   %rbp,%rbp
    c89f:	74 7f                	je     c920 <dispose_chunk+0x280>
    c8a1:	44 8b 56 38          	mov    0x38(%rsi),%r10d
    c8a5:	4c 89 d1             	mov    %r10,%rcx
    c8a8:	4d 8d 5a 4a          	lea    0x4a(%r10),%r11
    c8ac:	4a 39 b4 d7 58 02 00 	cmp    %rsi,0x258(%rdi,%r10,8)
    c8b3:	00 
    c8b4:	0f 84 76 04 00 00    	je     cd30 <dispose_chunk+0x690>
    c8ba:	4c 39 c5             	cmp    %r8,%rbp
    c8bd:	0f 82 4d 01 00 00    	jb     ca10 <dispose_chunk+0x370>
    c8c3:	48 39 75 20          	cmp    %rsi,0x20(%rbp)
    c8c7:	0f 84 27 05 00 00    	je     cdf4 <dispose_chunk+0x754>
    c8cd:	4c 89 4d 28          	mov    %r9,0x28(%rbp)
    c8d1:	4d 85 c9             	test   %r9,%r9
    c8d4:	74 4a                	je     c920 <dispose_chunk+0x280>
    c8d6:	4d 39 c1             	cmp    %r8,%r9
    c8d9:	0f 82 31 01 00 00    	jb     ca10 <dispose_chunk+0x370>
    c8df:	48 8b 4e 20          	mov    0x20(%rsi),%rcx
    c8e3:	49 89 69 30          	mov    %rbp,0x30(%r9)
    c8e7:	48 85 c9             	test   %rcx,%rcx
    c8ea:	74 11                	je     c8fd <dispose_chunk+0x25d>
    c8ec:	4c 39 c1             	cmp    %r8,%rcx
    c8ef:	0f 82 1b 01 00 00    	jb     ca10 <dispose_chunk+0x370>
    c8f5:	49 89 49 20          	mov    %rcx,0x20(%r9)
    c8f9:	4c 89 49 30          	mov    %r9,0x30(%rcx)
    c8fd:	48 8b 4e 28          	mov    0x28(%rsi),%rcx
    c901:	48 85 c9             	test   %rcx,%rcx
    c904:	74 1a                	je     c920 <dispose_chunk+0x280>
    c906:	4c 39 c1             	cmp    %r8,%rcx
    c909:	0f 82 01 01 00 00    	jb     ca10 <dispose_chunk+0x370>
    c90f:	49 89 49 28          	mov    %rcx,0x28(%r9)
    c913:	4c 89 49 30          	mov    %r9,0x30(%rcx)
    c917:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    c91e:	00 00 
    c920:	48 89 d1             	mov    %rdx,%rcx
    c923:	48 83 c9 01          	or     $0x1,%rcx
    c927:	48 89 48 08          	mov    %rcx,0x8(%rax)
    c92b:	48 89 14 10          	mov    %rdx,(%rax,%rdx,1)
    c92f:	48 39 d8             	cmp    %rbx,%rax
    c932:	0f 85 a5 fe ff ff    	jne    c7dd <dispose_chunk+0x13d>
    c938:	48 89 57 08          	mov    %rdx,0x8(%rdi)
    c93c:	e9 e8 fe ff ff       	jmp    c829 <dispose_chunk+0x189>
    c941:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c948:	48 89 d6             	mov    %rdx,%rsi
    c94b:	48 c1 ee 08          	shr    $0x8,%rsi
    c94f:	89 f1                	mov    %esi,%ecx
    c951:	85 f6                	test   %esi,%esi
    c953:	0f 84 bf 00 00 00    	je     ca18 <dispose_chunk+0x378>
    c959:	81 fe ff ff 00 00    	cmp    $0xffff,%esi
    c95f:	0f 87 e3 01 00 00    	ja     cb48 <dispose_chunk+0x4a8>
    c965:	0f bd f1             	bsr    %ecx,%esi
    c968:	b9 26 00 00 00       	mov    $0x26,%ecx
    c96d:	48 89 d3             	mov    %rdx,%rbx
    c970:	41 b9 1f 00 00 00    	mov    $0x1f,%r9d
    c976:	83 f6 1f             	xor    $0x1f,%esi
    c979:	29 f1                	sub    %esi,%ecx
    c97b:	41 29 f1             	sub    %esi,%r9d
    c97e:	be 01 00 00 00       	mov    $0x1,%esi
    c983:	48 d3 eb             	shr    %cl,%rbx
    c986:	48 89 d9             	mov    %rbx,%rcx
    c989:	83 e1 01             	and    $0x1,%ecx
    c98c:	42 8d 0c 49          	lea    (%rcx,%r9,2),%ecx
    c990:	44 8d 49 4b          	lea    0x4b(%rcx),%r9d
    c994:	d3 e6                	shl    %cl,%esi
    c996:	49 c1 e1 03          	shl    $0x3,%r9
    c99a:	44 8b 57 04          	mov    0x4(%rdi),%r10d
    c99e:	66 48 0f 6e c8       	movq   %rax,%xmm1
    c9a3:	66 0f ef c0          	pxor   %xmm0,%xmm0
    c9a7:	89 48 38             	mov    %ecx,0x38(%rax)
    c9aa:	66 0f 6c c9          	punpcklqdq %xmm1,%xmm1
    c9ae:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    c9b2:	44 85 d6             	test   %r10d,%esi
    c9b5:	0f 85 c5 00 00 00    	jne    ca80 <dispose_chunk+0x3e0>
    c9bb:	44 09 d6             	or     %r10d,%esi
    c9be:	49 01 f9             	add    %rdi,%r9
    c9c1:	89 77 04             	mov    %esi,0x4(%rdi)
    c9c4:	48 89 84 cf 58 02 00 	mov    %rax,0x258(%rdi,%rcx,8)
    c9cb:	00 
    c9cc:	4c 89 48 30          	mov    %r9,0x30(%rax)
    c9d0:	0f 11 48 10          	movups %xmm1,0x10(%rax)
    c9d4:	48 83 c4 08          	add    $0x8,%rsp
    c9d8:	5b                   	pop    %rbx
    c9d9:	5d                   	pop    %rbp
    c9da:	c3                   	ret    
    c9db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    c9e0:	43 8d 4c 1b 09       	lea    0x9(%r11,%r11,1),%ecx
    c9e5:	4c 8b 56 10          	mov    0x10(%rsi),%r10
    c9e9:	48 8d 0c cf          	lea    (%rdi,%rcx,8),%rcx
    c9ed:	4c 39 d1             	cmp    %r10,%rcx
    c9f0:	0f 85 57 03 00 00    	jne    cd4d <dispose_chunk+0x6ad>
    c9f6:	4d 39 d1             	cmp    %r10,%r9
    c9f9:	0f 84 79 02 00 00    	je     cc78 <dispose_chunk+0x5d8>
    c9ff:	4d 39 c1             	cmp    %r8,%r9
    ca02:	0f 83 ae 01 00 00    	jae    cbb6 <dispose_chunk+0x516>
    ca08:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    ca0f:	00 
    ca10:	e8 22 59 00 00       	call   12337 <abort>
    ca15:	0f 1f 00             	nopl   (%rax)
    ca18:	be 01 00 00 00       	mov    $0x1,%esi
    ca1d:	41 b9 58 02 00 00    	mov    $0x258,%r9d
    ca23:	e9 72 ff ff ff       	jmp    c99a <dispose_chunk+0x2fa>
    ca28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    ca2f:	00 
    ca30:	41 09 d1             	or     %edx,%r9d
    ca33:	48 89 f2             	mov    %rsi,%rdx
    ca36:	44 89 0f             	mov    %r9d,(%rdi)
    ca39:	e9 db fd ff ff       	jmp    c819 <dispose_chunk+0x179>
    ca3e:	66 90                	xchg   %ax,%ax
    ca40:	44 8d 5c 09 09       	lea    0x9(%rcx,%rcx,1),%r11d
    ca45:	4c 8b 50 10          	mov    0x10(%rax),%r10
    ca49:	4e 8d 1c df          	lea    (%rdi,%r11,8),%r11
    ca4d:	4d 39 d3             	cmp    %r10,%r11
    ca50:	0f 85 4a 03 00 00    	jne    cda0 <dispose_chunk+0x700>
    ca56:	4d 39 d1             	cmp    %r10,%r9
    ca59:	0f 84 b9 02 00 00    	je     cd18 <dispose_chunk+0x678>
    ca5f:	4d 39 c1             	cmp    %r8,%r9
    ca62:	72 ac                	jb     ca10 <dispose_chunk+0x370>
    ca64:	49 39 41 10          	cmp    %rax,0x10(%r9)
    ca68:	75 a6                	jne    ca10 <dispose_chunk+0x370>
    ca6a:	4d 89 4a 18          	mov    %r9,0x18(%r10)
    ca6e:	4d 89 51 10          	mov    %r10,0x10(%r9)
    ca72:	e9 3d fd ff ff       	jmp    c7b4 <dispose_chunk+0x114>
    ca77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    ca7e:	00 00 
    ca80:	89 ce                	mov    %ecx,%esi
    ca82:	48 8b b4 f7 58 02 00 	mov    0x258(%rdi,%rsi,8),%rsi
    ca89:	00 
    ca8a:	48 89 d7             	mov    %rdx,%rdi
    ca8d:	83 f9 1f             	cmp    $0x1f,%ecx
    ca90:	74 34                	je     cac6 <dispose_chunk+0x426>
    ca92:	89 cf                	mov    %ecx,%edi
    ca94:	b9 39 00 00 00       	mov    $0x39,%ecx
    ca99:	d1 ef                	shr    %edi
    ca9b:	29 f9                	sub    %edi,%ecx
    ca9d:	48 89 d7             	mov    %rdx,%rdi
    caa0:	48 d3 e7             	shl    %cl,%rdi
    caa3:	eb 21                	jmp    cac6 <dispose_chunk+0x426>
    caa5:	0f 1f 00             	nopl   (%rax)
    caa8:	48 89 f9             	mov    %rdi,%rcx
    caab:	48 01 ff             	add    %rdi,%rdi
    caae:	48 c1 e9 3f          	shr    $0x3f,%rcx
    cab2:	48 83 c1 04          	add    $0x4,%rcx
    cab6:	4c 8b 0c ce          	mov    (%rsi,%rcx,8),%r9
    caba:	4d 85 c9             	test   %r9,%r9
    cabd:	0f 84 d5 00 00 00    	je     cb98 <dispose_chunk+0x4f8>
    cac3:	4c 89 ce             	mov    %r9,%rsi
    cac6:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    caca:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    cace:	48 39 d1             	cmp    %rdx,%rcx
    cad1:	75 d5                	jne    caa8 <dispose_chunk+0x408>
    cad3:	48 8b 56 10          	mov    0x10(%rsi),%rdx
    cad7:	66 48 0f 6e d6       	movq   %rsi,%xmm2
    cadc:	66 48 0f 6e c2       	movq   %rdx,%xmm0
    cae1:	66 0f 6c c2          	punpcklqdq %xmm2,%xmm0
    cae5:	4c 39 c6             	cmp    %r8,%rsi
    cae8:	0f 82 22 ff ff ff    	jb     ca10 <dispose_chunk+0x370>
    caee:	4c 39 c2             	cmp    %r8,%rdx
    caf1:	0f 82 19 ff ff ff    	jb     ca10 <dispose_chunk+0x370>
    caf7:	48 89 42 18          	mov    %rax,0x18(%rdx)
    cafb:	48 89 46 10          	mov    %rax,0x10(%rsi)
    caff:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
    cb06:	00 
    cb07:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    cb0b:	e9 19 fd ff ff       	jmp    c829 <dispose_chunk+0x189>
    cb10:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    cb14:	49 89 c9             	mov    %rcx,%r9
    cb17:	49 f7 d1             	not    %r9
    cb1a:	41 83 e1 03          	and    $0x3,%r9d
    cb1e:	0f 85 90 fc ff ff    	jne    c7b4 <dispose_chunk+0x114>
    cb24:	48 83 e1 fe          	and    $0xfffffffffffffffe,%rcx
    cb28:	48 89 57 08          	mov    %rdx,0x8(%rdi)
    cb2c:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
    cb30:	48 89 d1             	mov    %rdx,%rcx
    cb33:	48 83 c9 01          	or     $0x1,%rcx
    cb37:	48 89 48 08          	mov    %rcx,0x8(%rax)
    cb3b:	48 89 16             	mov    %rdx,(%rsi)
    cb3e:	e9 e6 fc ff ff       	jmp    c829 <dispose_chunk+0x189>
    cb43:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    cb48:	be 00 00 00 80       	mov    $0x80000000,%esi
    cb4d:	41 b9 50 03 00 00    	mov    $0x350,%r9d
    cb53:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    cb58:	e9 3d fe ff ff       	jmp    c99a <dispose_chunk+0x2fa>
    cb5d:	0f 1f 00             	nopl   (%rax)
    cb60:	48 03 57 10          	add    0x10(%rdi),%rdx
    cb64:	48 89 47 28          	mov    %rax,0x28(%rdi)
    cb68:	48 89 57 10          	mov    %rdx,0x10(%rdi)
    cb6c:	48 83 ca 01          	or     $0x1,%rdx
    cb70:	48 89 50 08          	mov    %rdx,0x8(%rax)
    cb74:	48 39 d8             	cmp    %rbx,%rax
    cb77:	0f 85 ac fc ff ff    	jne    c829 <dispose_chunk+0x189>
    cb7d:	48 c7 47 20 00 00 00 	movq   $0x0,0x20(%rdi)
    cb84:	00 
    cb85:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
    cb8c:	00 
    cb8d:	e9 97 fc ff ff       	jmp    c829 <dispose_chunk+0x189>
    cb92:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    cb98:	48 8d 14 ce          	lea    (%rsi,%rcx,8),%rdx
    cb9c:	4c 39 c2             	cmp    %r8,%rdx
    cb9f:	0f 82 6b fe ff ff    	jb     ca10 <dispose_chunk+0x370>
    cba5:	48 89 04 ce          	mov    %rax,(%rsi,%rcx,8)
    cba9:	48 89 70 30          	mov    %rsi,0x30(%rax)
    cbad:	0f 11 48 10          	movups %xmm1,0x10(%rax)
    cbb1:	e9 73 fc ff ff       	jmp    c829 <dispose_chunk+0x189>
    cbb6:	49 39 71 10          	cmp    %rsi,0x10(%r9)
    cbba:	0f 85 50 fe ff ff    	jne    ca10 <dispose_chunk+0x370>
    cbc0:	4d 89 4a 18          	mov    %r9,0x18(%r10)
    cbc4:	4d 89 51 10          	mov    %r10,0x10(%r9)
    cbc8:	e9 53 fd ff ff       	jmp    c920 <dispose_chunk+0x280>
    cbcd:	0f 1f 00             	nopl   (%rax)
    cbd0:	48 03 57 08          	add    0x8(%rdi),%rdx
    cbd4:	48 89 47 20          	mov    %rax,0x20(%rdi)
    cbd8:	48 89 d1             	mov    %rdx,%rcx
    cbdb:	48 89 57 08          	mov    %rdx,0x8(%rdi)
    cbdf:	48 83 c9 01          	or     $0x1,%rcx
    cbe3:	48 89 48 08          	mov    %rcx,0x8(%rax)
    cbe7:	48 89 14 10          	mov    %rdx,(%rax,%rdx,1)
    cbeb:	e9 39 fc ff ff       	jmp    c829 <dispose_chunk+0x189>
    cbf0:	48 8b 4e 28          	mov    0x28(%rsi),%rcx
    cbf4:	4c 8d 56 28          	lea    0x28(%rsi),%r10
    cbf8:	48 85 c9             	test   %rcx,%rcx
    cbfb:	0f 84 cf 01 00 00    	je     cdd0 <dispose_chunk+0x730>
    cc01:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    cc08:	4d 89 d3             	mov    %r10,%r11
    cc0b:	49 89 c9             	mov    %rcx,%r9
    cc0e:	4c 8d 51 28          	lea    0x28(%rcx),%r10
    cc12:	48 8b 49 28          	mov    0x28(%rcx),%rcx
    cc16:	48 85 c9             	test   %rcx,%rcx
    cc19:	75 ed                	jne    cc08 <dispose_chunk+0x568>
    cc1b:	49 8b 49 20          	mov    0x20(%r9),%rcx
    cc1f:	4d 8d 51 20          	lea    0x20(%r9),%r10
    cc23:	48 85 c9             	test   %rcx,%rcx
    cc26:	75 e0                	jne    cc08 <dispose_chunk+0x568>
    cc28:	4d 39 c3             	cmp    %r8,%r11
    cc2b:	0f 82 df fd ff ff    	jb     ca10 <dispose_chunk+0x370>
    cc31:	49 c7 03 00 00 00 00 	movq   $0x0,(%r11)
    cc38:	48 85 ed             	test   %rbp,%rbp
    cc3b:	0f 84 df fc ff ff    	je     c920 <dispose_chunk+0x280>
    cc41:	8b 4e 38             	mov    0x38(%rsi),%ecx
    cc44:	4c 8d 51 4a          	lea    0x4a(%rcx),%r10
    cc48:	48 39 b4 cf 58 02 00 	cmp    %rsi,0x258(%rdi,%rcx,8)
    cc4f:	00 
    cc50:	0f 84 b0 01 00 00    	je     ce06 <dispose_chunk+0x766>
    cc56:	4c 39 c5             	cmp    %r8,%rbp
    cc59:	0f 82 b1 fd ff ff    	jb     ca10 <dispose_chunk+0x370>
    cc5f:	48 39 75 20          	cmp    %rsi,0x20(%rbp)
    cc63:	0f 84 b1 01 00 00    	je     ce1a <dispose_chunk+0x77a>
    cc69:	4c 89 4d 28          	mov    %r9,0x28(%rbp)
    cc6d:	e9 64 fc ff ff       	jmp    c8d6 <dispose_chunk+0x236>
    cc72:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    cc78:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    cc7d:	44 89 d9             	mov    %r11d,%ecx
    cc80:	d3 c6                	rol    %cl,%esi
    cc82:	21 37                	and    %esi,(%rdi)
    cc84:	e9 97 fc ff ff       	jmp    c920 <dispose_chunk+0x280>
    cc89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    cc90:	48 8b 48 28          	mov    0x28(%rax),%rcx
    cc94:	4c 8d 50 28          	lea    0x28(%rax),%r10
    cc98:	48 85 c9             	test   %rcx,%rcx
    cc9b:	0f 84 41 01 00 00    	je     cde2 <dispose_chunk+0x742>
    cca1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    cca8:	4d 89 d3             	mov    %r10,%r11
    ccab:	49 89 c9             	mov    %rcx,%r9
    ccae:	4c 8d 51 28          	lea    0x28(%rcx),%r10
    ccb2:	48 8b 49 28          	mov    0x28(%rcx),%rcx
    ccb6:	48 85 c9             	test   %rcx,%rcx
    ccb9:	75 ed                	jne    cca8 <dispose_chunk+0x608>
    ccbb:	49 8b 49 20          	mov    0x20(%r9),%rcx
    ccbf:	4d 8d 51 20          	lea    0x20(%r9),%r10
    ccc3:	48 85 c9             	test   %rcx,%rcx
    ccc6:	75 e0                	jne    cca8 <dispose_chunk+0x608>
    ccc8:	4d 39 c3             	cmp    %r8,%r11
    cccb:	0f 82 3f fd ff ff    	jb     ca10 <dispose_chunk+0x370>
    ccd1:	49 c7 03 00 00 00 00 	movq   $0x0,(%r11)
    ccd8:	48 85 db             	test   %rbx,%rbx
    ccdb:	0f 84 d3 fa ff ff    	je     c7b4 <dispose_chunk+0x114>
    cce1:	8b 48 38             	mov    0x38(%rax),%ecx
    cce4:	4c 8d 51 4a          	lea    0x4a(%rcx),%r10
    cce8:	48 39 84 cf 58 02 00 	cmp    %rax,0x258(%rdi,%rcx,8)
    ccef:	00 
    ccf0:	0f 84 1a 01 00 00    	je     ce10 <dispose_chunk+0x770>
    ccf6:	4c 39 c3             	cmp    %r8,%rbx
    ccf9:	0f 82 11 fd ff ff    	jb     ca10 <dispose_chunk+0x370>
    ccff:	48 39 43 20          	cmp    %rax,0x20(%rbx)
    cd03:	0f 84 1a 01 00 00    	je     ce23 <dispose_chunk+0x783>
    cd09:	4c 89 4b 28          	mov    %r9,0x28(%rbx)
    cd0d:	e9 58 fa ff ff       	jmp    c76a <dispose_chunk+0xca>
    cd12:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    cd18:	41 b9 fe ff ff ff    	mov    $0xfffffffe,%r9d
    cd1e:	41 d3 c1             	rol    %cl,%r9d
    cd21:	44 21 0f             	and    %r9d,(%rdi)
    cd24:	e9 8b fa ff ff       	jmp    c7b4 <dispose_chunk+0x114>
    cd29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    cd30:	4e 89 4c df 08       	mov    %r9,0x8(%rdi,%r11,8)
    cd35:	4d 85 c9             	test   %r9,%r9
    cd38:	0f 85 98 fb ff ff    	jne    c8d6 <dispose_chunk+0x236>
    cd3e:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    cd43:	d3 c6                	rol    %cl,%esi
    cd45:	21 77 04             	and    %esi,0x4(%rdi)
    cd48:	e9 d3 fb ff ff       	jmp    c920 <dispose_chunk+0x280>
    cd4d:	4d 39 c2             	cmp    %r8,%r10
    cd50:	0f 82 ba fc ff ff    	jb     ca10 <dispose_chunk+0x370>
    cd56:	49 39 72 18          	cmp    %rsi,0x18(%r10)
    cd5a:	0f 85 b0 fc ff ff    	jne    ca10 <dispose_chunk+0x370>
    cd60:	4d 39 d1             	cmp    %r10,%r9
    cd63:	0f 84 0f ff ff ff    	je     cc78 <dispose_chunk+0x5d8>
    cd69:	4c 39 c9             	cmp    %r9,%rcx
    cd6c:	0f 84 4e fe ff ff    	je     cbc0 <dispose_chunk+0x520>
    cd72:	e9 88 fc ff ff       	jmp    c9ff <dispose_chunk+0x35f>
    cd77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    cd7e:	00 00 
    cd80:	4e 89 4c df 08       	mov    %r9,0x8(%rdi,%r11,8)
    cd85:	4d 85 c9             	test   %r9,%r9
    cd88:	0f 85 dc f9 ff ff    	jne    c76a <dispose_chunk+0xca>
    cd8e:	41 b9 fe ff ff ff    	mov    $0xfffffffe,%r9d
    cd94:	41 d3 c1             	rol    %cl,%r9d
    cd97:	44 21 4f 04          	and    %r9d,0x4(%rdi)
    cd9b:	e9 14 fa ff ff       	jmp    c7b4 <dispose_chunk+0x114>
    cda0:	4d 39 c2             	cmp    %r8,%r10
    cda3:	0f 82 67 fc ff ff    	jb     ca10 <dispose_chunk+0x370>
    cda9:	49 39 42 18          	cmp    %rax,0x18(%r10)
    cdad:	0f 85 5d fc ff ff    	jne    ca10 <dispose_chunk+0x370>
    cdb3:	4d 39 d1             	cmp    %r10,%r9
    cdb6:	0f 84 5c ff ff ff    	je     cd18 <dispose_chunk+0x678>
    cdbc:	4d 39 cb             	cmp    %r9,%r11
    cdbf:	0f 84 a5 fc ff ff    	je     ca6a <dispose_chunk+0x3ca>
    cdc5:	e9 95 fc ff ff       	jmp    ca5f <dispose_chunk+0x3bf>
    cdca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    cdd0:	48 8b 4e 20          	mov    0x20(%rsi),%rcx
    cdd4:	48 85 c9             	test   %rcx,%rcx
    cdd7:	74 53                	je     ce2c <dispose_chunk+0x78c>
    cdd9:	4c 8d 56 20          	lea    0x20(%rsi),%r10
    cddd:	e9 26 fe ff ff       	jmp    cc08 <dispose_chunk+0x568>
    cde2:	48 8b 48 20          	mov    0x20(%rax),%rcx
    cde6:	48 85 c9             	test   %rcx,%rcx
    cde9:	74 75                	je     ce60 <dispose_chunk+0x7c0>
    cdeb:	4c 8d 50 20          	lea    0x20(%rax),%r10
    cdef:	e9 b4 fe ff ff       	jmp    cca8 <dispose_chunk+0x608>
    cdf4:	4c 89 4d 20          	mov    %r9,0x20(%rbp)
    cdf8:	e9 d4 fa ff ff       	jmp    c8d1 <dispose_chunk+0x231>
    cdfd:	4c 89 4b 20          	mov    %r9,0x20(%rbx)
    ce01:	e9 5f f9 ff ff       	jmp    c765 <dispose_chunk+0xc5>
    ce06:	4e 89 4c d7 08       	mov    %r9,0x8(%rdi,%r10,8)
    ce0b:	e9 c6 fa ff ff       	jmp    c8d6 <dispose_chunk+0x236>
    ce10:	4e 89 4c d7 08       	mov    %r9,0x8(%rdi,%r10,8)
    ce15:	e9 50 f9 ff ff       	jmp    c76a <dispose_chunk+0xca>
    ce1a:	4c 89 4d 20          	mov    %r9,0x20(%rbp)
    ce1e:	e9 b3 fa ff ff       	jmp    c8d6 <dispose_chunk+0x236>
    ce23:	4c 89 4b 20          	mov    %r9,0x20(%rbx)
    ce27:	e9 3e f9 ff ff       	jmp    c76a <dispose_chunk+0xca>
    ce2c:	48 85 ed             	test   %rbp,%rbp
    ce2f:	0f 84 eb fa ff ff    	je     c920 <dispose_chunk+0x280>
    ce35:	44 8b 4e 38          	mov    0x38(%rsi),%r9d
    ce39:	4c 89 c9             	mov    %r9,%rcx
    ce3c:	4a 39 b4 cf 58 02 00 	cmp    %rsi,0x258(%rdi,%r9,8)
    ce43:	00 
    ce44:	74 4f                	je     ce95 <dispose_chunk+0x7f5>
    ce46:	4c 39 c5             	cmp    %r8,%rbp
    ce49:	0f 82 c1 fb ff ff    	jb     ca10 <dispose_chunk+0x370>
    ce4f:	48 39 75 20          	cmp    %rsi,0x20(%rbp)
    ce53:	74 60                	je     ceb5 <dispose_chunk+0x815>
    ce55:	31 c9                	xor    %ecx,%ecx
    ce57:	48 89 4d 28          	mov    %rcx,0x28(%rbp)
    ce5b:	e9 c0 fa ff ff       	jmp    c920 <dispose_chunk+0x280>
    ce60:	48 85 db             	test   %rbx,%rbx
    ce63:	0f 84 4b f9 ff ff    	je     c7b4 <dispose_chunk+0x114>
    ce69:	44 8b 48 38          	mov    0x38(%rax),%r9d
    ce6d:	4c 89 c9             	mov    %r9,%rcx
    ce70:	4a 39 84 cf 58 02 00 	cmp    %rax,0x258(%rdi,%r9,8)
    ce77:	00 
    ce78:	74 2b                	je     cea5 <dispose_chunk+0x805>
    ce7a:	4c 39 c3             	cmp    %r8,%rbx
    ce7d:	0f 82 8d fb ff ff    	jb     ca10 <dispose_chunk+0x370>
    ce83:	48 39 43 20          	cmp    %rax,0x20(%rbx)
    ce87:	74 37                	je     cec0 <dispose_chunk+0x820>
    ce89:	45 31 db             	xor    %r11d,%r11d
    ce8c:	4c 89 5b 28          	mov    %r11,0x28(%rbx)
    ce90:	e9 1f f9 ff ff       	jmp    c7b4 <dispose_chunk+0x114>
    ce95:	45 31 d2             	xor    %r10d,%r10d
    ce98:	4e 89 94 cf 58 02 00 	mov    %r10,0x258(%rdi,%r9,8)
    ce9f:	00 
    cea0:	e9 99 fe ff ff       	jmp    cd3e <dispose_chunk+0x69e>
    cea5:	45 31 d2             	xor    %r10d,%r10d
    cea8:	4e 89 94 cf 58 02 00 	mov    %r10,0x258(%rdi,%r9,8)
    ceaf:	00 
    ceb0:	e9 d9 fe ff ff       	jmp    cd8e <dispose_chunk+0x6ee>
    ceb5:	31 f6                	xor    %esi,%esi
    ceb7:	48 89 75 20          	mov    %rsi,0x20(%rbp)
    cebb:	e9 60 fa ff ff       	jmp    c920 <dispose_chunk+0x280>
    cec0:	31 ed                	xor    %ebp,%ebp
    cec2:	48 89 6b 20          	mov    %rbp,0x20(%rbx)
    cec6:	e9 e9 f8 ff ff       	jmp    c7b4 <dispose_chunk+0x114>
    cecb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000ced0 <init_mparams.isra.0>:
    ced0:	48 83 ec 18          	sub    $0x18,%rsp
    ced4:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    cedb:	00 00 
    cedd:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    cee2:	b8 01 00 00 00       	mov    $0x1,%eax
    cee7:	87 05 43 df 01 00    	xchg   %eax,0x1df43(%rip)        # 2ae30 <malloc_global_mutex>
    ceed:	85 c0                	test   %eax,%eax
    ceef:	0f 85 8b 00 00 00    	jne    cf80 <init_mparams.isra.0+0xb0>
    cef5:	48 83 3d 03 df 01 00 	cmpq   $0x0,0x1df03(%rip)        # 2ae00 <mparams>
    cefc:	00 
    cefd:	75 5d                	jne    cf5c <init_mparams.isra.0+0x8c>
    ceff:	66 0f 6f 05 89 61 00 	movdqa 0x6189(%rip),%xmm0        # 13090 <g_dyn_entry_table+0x80>
    cf06:	00 
    cf07:	48 89 e7             	mov    %rsp,%rdi
    cf0a:	be 08 00 00 00       	mov    $0x8,%esi
    cf0f:	c7 05 0f df 01 00 02 	movl   $0x2,0x1df0f(%rip)        # 2ae28 <mparams+0x28>
    cf16:	00 00 00 
    cf19:	48 c7 05 8c de 01 00 	movq   $0x2,0x1de8c(%rip)        # 2adb0 <_gm_+0x370>
    cf20:	02 00 00 00 
    cf24:	0f 11 05 dd de 01 00 	movups %xmm0,0x1dedd(%rip)        # 2ae08 <mparams+0x8>
    cf2b:	66 0f 6f 05 6d 61 00 	movdqa 0x616d(%rip),%xmm0        # 130a0 <g_dyn_entry_table+0x90>
    cf32:	00 
    cf33:	0f 11 05 de de 01 00 	movups %xmm0,0x1dede(%rip)        # 2ae18 <mparams+0x18>
    cf3a:	e8 01 8d ff ff       	call   5c40 <sgx_read_rand>
    cf3f:	85 c0                	test   %eax,%eax
    cf41:	75 69                	jne    cfac <init_mparams.isra.0+0xdc>
    cf43:	48 8b 04 24          	mov    (%rsp),%rax
    cf47:	48 35 55 55 55 55    	xor    $0x55555555,%rax
    cf4d:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    cf51:	48 83 c8 08          	or     $0x8,%rax
    cf55:	48 89 05 a4 de 01 00 	mov    %rax,0x1dea4(%rip)        # 2ae00 <mparams>
    cf5c:	c7 05 ca de 01 00 00 	movl   $0x0,0x1deca(%rip)        # 2ae30 <malloc_global_mutex>
    cf63:	00 00 00 
    cf66:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    cf6b:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    cf72:	00 00 
    cf74:	75 31                	jne    cfa7 <init_mparams.isra.0+0xd7>
    cf76:	48 83 c4 18          	add    $0x18,%rsp
    cf7a:	c3                   	ret    
    cf7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    cf80:	48 8d 15 a9 de 01 00 	lea    0x1dea9(%rip),%rdx        # 2ae30 <malloc_global_mutex>
    cf87:	b9 01 00 00 00       	mov    $0x1,%ecx
    cf8c:	0f 1f 40 00          	nopl   0x0(%rax)
    cf90:	8b 02                	mov    (%rdx),%eax
    cf92:	85 c0                	test   %eax,%eax
    cf94:	75 fa                	jne    cf90 <init_mparams.isra.0+0xc0>
    cf96:	89 c8                	mov    %ecx,%eax
    cf98:	87 05 92 de 01 00    	xchg   %eax,0x1de92(%rip)        # 2ae30 <malloc_global_mutex>
    cf9e:	85 c0                	test   %eax,%eax
    cfa0:	75 ee                	jne    cf90 <init_mparams.isra.0+0xc0>
    cfa2:	e9 4e ff ff ff       	jmp    cef5 <init_mparams.isra.0+0x25>
    cfa7:	e8 c4 38 00 00       	call   10870 <__stack_chk_fail>
    cfac:	e8 86 53 00 00       	call   12337 <abort>
    cfb1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    cfb8:	00 00 00 
    cfbb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000cfc0 <dlmalloc>:
    cfc0:	f3 0f 1e fa          	endbr64 
    cfc4:	41 57                	push   %r15
    cfc6:	41 56                	push   %r14
    cfc8:	41 55                	push   %r13
    cfca:	41 54                	push   %r12
    cfcc:	55                   	push   %rbp
    cfcd:	48 89 fd             	mov    %rdi,%rbp
    cfd0:	53                   	push   %rbx
    cfd1:	48 83 ec 18          	sub    $0x18,%rsp
    cfd5:	48 83 3d 23 de 01 00 	cmpq   $0x0,0x1de23(%rip)        # 2ae00 <mparams>
    cfdc:	00 
    cfdd:	0f 84 55 01 00 00    	je     d138 <dlmalloc+0x178>
    cfe3:	f6 05 c6 dd 01 00 02 	testb  $0x2,0x1ddc6(%rip)        # 2adb0 <_gm_+0x370>
    cfea:	0f 85 5a 01 00 00    	jne    d14a <dlmalloc+0x18a>
    cff0:	48 81 fd e0 00 00 00 	cmp    $0xe0,%rbp
    cff7:	0f 87 fb 00 00 00    	ja     d0f8 <dlmalloc+0x138>
    cffd:	48 83 fd 0e          	cmp    $0xe,%rbp
    d001:	0f 87 d9 00 00 00    	ja     d0e0 <dlmalloc+0x120>
    d007:	b9 04 00 00 00       	mov    $0x4,%ecx
    d00c:	41 bc 20 00 00 00    	mov    $0x20,%r12d
    d012:	8b 15 28 da 01 00    	mov    0x1da28(%rip),%edx        # 2aa40 <_gm_>
    d018:	4c 8d 2d 21 da 01 00 	lea    0x1da21(%rip),%r13        # 2aa40 <_gm_>
    d01f:	89 d0                	mov    %edx,%eax
    d021:	d3 e8                	shr    %cl,%eax
    d023:	a8 03                	test   $0x3,%al
    d025:	0f 84 d5 01 00 00    	je     d200 <dlmalloc+0x240>
    d02b:	f7 d0                	not    %eax
    d02d:	83 e0 01             	and    $0x1,%eax
    d030:	01 c1                	add    %eax,%ecx
    d032:	8d 44 09 09          	lea    0x9(%rcx,%rcx,1),%eax
    d036:	49 8d 74 c5 00       	lea    0x0(%r13,%rax,8),%rsi
    d03b:	48 8b 5e 10          	mov    0x10(%rsi),%rbx
    d03f:	48 8b 43 10          	mov    0x10(%rbx),%rax
    d043:	48 39 c6             	cmp    %rax,%rsi
    d046:	0f 84 a4 07 00 00    	je     d7f0 <dlmalloc+0x830>
    d04c:	48 3b 05 05 da 01 00 	cmp    0x1da05(%rip),%rax        # 2aa58 <_gm_+0x18>
    d053:	0f 82 c7 05 00 00    	jb     d620 <dlmalloc+0x660>
    d059:	48 39 58 18          	cmp    %rbx,0x18(%rax)
    d05d:	0f 85 bd 05 00 00    	jne    d620 <dlmalloc+0x660>
    d063:	48 89 70 18          	mov    %rsi,0x18(%rax)
    d067:	48 89 46 10          	mov    %rax,0x10(%rsi)
    d06b:	c1 e1 03             	shl    $0x3,%ecx
    d06e:	89 c8                	mov    %ecx,%eax
    d070:	83 c8 03             	or     $0x3,%eax
    d073:	48 89 43 08          	mov    %rax,0x8(%rbx)
    d077:	48 8d 04 0b          	lea    (%rbx,%rcx,1),%rax
    d07b:	48 83 c3 10          	add    $0x10,%rbx
    d07f:	48 83 48 08 01       	orq    $0x1,0x8(%rax)
    d084:	4c 33 2d 75 dd 01 00 	xor    0x1dd75(%rip),%r13        # 2ae00 <mparams>
    d08b:	4c 89 28             	mov    %r13,(%rax)
    d08e:	48 85 db             	test   %rbx,%rbx
    d091:	0f 84 96 00 00 00    	je     d12d <dlmalloc+0x16d>
    d097:	e8 94 a1 ff ff       	call   7230 <get_heap_base>
    d09c:	48 39 c3             	cmp    %rax,%rbx
    d09f:	0f 82 7b 05 00 00    	jb     d620 <dlmalloc+0x660>
    d0a5:	48 01 dd             	add    %rbx,%rbp
    d0a8:	0f 82 72 05 00 00    	jb     d620 <dlmalloc+0x660>
    d0ae:	31 ff                	xor    %edi,%edi
    d0b0:	e8 2b f4 ff ff       	call   c4e0 <sbrk>
    d0b5:	48 39 e8             	cmp    %rbp,%rax
    d0b8:	0f 82 62 05 00 00    	jb     d620 <dlmalloc+0x660>
    d0be:	f6 05 eb dc 01 00 02 	testb  $0x2,0x1dceb(%rip)        # 2adb0 <_gm_+0x370>
    d0c5:	0f 85 35 05 00 00    	jne    d600 <dlmalloc+0x640>
    d0cb:	48 83 c4 18          	add    $0x18,%rsp
    d0cf:	48 89 d8             	mov    %rbx,%rax
    d0d2:	5b                   	pop    %rbx
    d0d3:	5d                   	pop    %rbp
    d0d4:	41 5c                	pop    %r12
    d0d6:	41 5d                	pop    %r13
    d0d8:	41 5e                	pop    %r14
    d0da:	41 5f                	pop    %r15
    d0dc:	c3                   	ret    
    d0dd:	0f 1f 00             	nopl   (%rax)
    d0e0:	4c 8d 65 1f          	lea    0x1f(%rbp),%r12
    d0e4:	49 83 e4 f0          	and    $0xfffffffffffffff0,%r12
    d0e8:	4c 89 e1             	mov    %r12,%rcx
    d0eb:	48 c1 e9 03          	shr    $0x3,%rcx
    d0ef:	e9 1e ff ff ff       	jmp    d012 <dlmalloc+0x52>
    d0f4:	0f 1f 40 00          	nopl   0x0(%rax)
    d0f8:	4c 8b 05 49 d9 01 00 	mov    0x1d949(%rip),%r8        # 2aa48 <_gm_+0x8>
    d0ff:	4c 8d 2d 3a d9 01 00 	lea    0x1d93a(%rip),%r13        # 2aa40 <_gm_>
    d106:	4c 89 c6             	mov    %r8,%rsi
    d109:	48 81 fd 7f ff ff ff 	cmp    $0xffffffffffffff7f,%rbp
    d110:	76 76                	jbe    d188 <dlmalloc+0x1c8>
    d112:	48 8b 05 e7 dc 01 00 	mov    0x1dce7(%rip),%rax        # 2ae00 <mparams>
    d119:	49 83 f8 ff          	cmp    $0xffffffffffffffff,%r8
    d11d:	0f 84 5d 02 00 00    	je     d380 <dlmalloc+0x3c0>
    d123:	48 85 c0             	test   %rax,%rax
    d126:	75 05                	jne    d12d <dlmalloc+0x16d>
    d128:	e8 a3 fd ff ff       	call   ced0 <init_mparams.isra.0>
    d12d:	31 db                	xor    %ebx,%ebx
    d12f:	eb 8d                	jmp    d0be <dlmalloc+0xfe>
    d131:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    d138:	e8 93 fd ff ff       	call   ced0 <init_mparams.isra.0>
    d13d:	f6 05 6c dc 01 00 02 	testb  $0x2,0x1dc6c(%rip)        # 2adb0 <_gm_+0x370>
    d144:	0f 84 a6 fe ff ff    	je     cff0 <dlmalloc+0x30>
    d14a:	b8 01 00 00 00       	mov    $0x1,%eax
    d14f:	87 05 5f dc 01 00    	xchg   %eax,0x1dc5f(%rip)        # 2adb4 <_gm_+0x374>
    d155:	85 c0                	test   %eax,%eax
    d157:	0f 84 93 fe ff ff    	je     cff0 <dlmalloc+0x30>
    d15d:	ba 01 00 00 00       	mov    $0x1,%edx
    d162:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    d168:	8b 05 46 dc 01 00    	mov    0x1dc46(%rip),%eax        # 2adb4 <_gm_+0x374>
    d16e:	85 c0                	test   %eax,%eax
    d170:	75 f6                	jne    d168 <dlmalloc+0x1a8>
    d172:	89 d0                	mov    %edx,%eax
    d174:	87 05 3a dc 01 00    	xchg   %eax,0x1dc3a(%rip)        # 2adb4 <_gm_+0x374>
    d17a:	85 c0                	test   %eax,%eax
    d17c:	75 ea                	jne    d168 <dlmalloc+0x1a8>
    d17e:	e9 6d fe ff ff       	jmp    cff0 <dlmalloc+0x30>
    d183:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    d188:	44 8b 0d b5 d8 01 00 	mov    0x1d8b5(%rip),%r9d        # 2aa44 <_gm_+0x4>
    d18f:	4c 8d 65 1f          	lea    0x1f(%rbp),%r12
    d193:	49 83 e4 f0          	and    $0xfffffffffffffff0,%r12
    d197:	45 85 c9             	test   %r9d,%r9d
    d19a:	0f 85 20 02 00 00    	jne    d3c0 <dlmalloc+0x400>
    d1a0:	4c 39 e6             	cmp    %r12,%rsi
    d1a3:	0f 83 7f 01 00 00    	jae    d328 <dlmalloc+0x368>
    d1a9:	48 8b 05 a0 d8 01 00 	mov    0x1d8a0(%rip),%rax        # 2aa50 <_gm_+0x10>
    d1b0:	48 8b 15 49 dc 01 00 	mov    0x1dc49(%rip),%rdx        # 2ae00 <mparams>
    d1b7:	49 39 c4             	cmp    %rax,%r12
    d1ba:	0f 83 b0 06 00 00    	jae    d870 <dlmalloc+0x8b0>
    d1c0:	48 8b 1d a1 d8 01 00 	mov    0x1d8a1(%rip),%rbx        # 2aa68 <_gm_+0x28>
    d1c7:	4c 29 e0             	sub    %r12,%rax
    d1ca:	4c 31 ea             	xor    %r13,%rdx
    d1cd:	48 89 05 7c d8 01 00 	mov    %rax,0x1d87c(%rip)        # 2aa50 <_gm_+0x10>
    d1d4:	48 83 c8 01          	or     $0x1,%rax
    d1d8:	4a 8d 0c 23          	lea    (%rbx,%r12,1),%rcx
    d1dc:	49 83 cc 03          	or     $0x3,%r12
    d1e0:	48 89 0d 81 d8 01 00 	mov    %rcx,0x1d881(%rip)        # 2aa68 <_gm_+0x28>
    d1e7:	48 89 41 08          	mov    %rax,0x8(%rcx)
    d1eb:	4c 89 63 08          	mov    %r12,0x8(%rbx)
    d1ef:	48 89 11             	mov    %rdx,(%rcx)
    d1f2:	48 83 c3 10          	add    $0x10,%rbx
    d1f6:	e9 93 fe ff ff       	jmp    d08e <dlmalloc+0xce>
    d1fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    d200:	48 8b 35 41 d8 01 00 	mov    0x1d841(%rip),%rsi        # 2aa48 <_gm_+0x8>
    d207:	4c 39 e6             	cmp    %r12,%rsi
    d20a:	0f 83 18 01 00 00    	jae    d328 <dlmalloc+0x368>
    d210:	85 c0                	test   %eax,%eax
    d212:	0f 84 10 04 00 00    	je     d628 <dlmalloc+0x668>
    d218:	bf 01 00 00 00       	mov    $0x1,%edi
    d21d:	d3 e0                	shl    %cl,%eax
    d21f:	41 89 f9             	mov    %edi,%r9d
    d222:	41 d3 e1             	shl    %cl,%r9d
    d225:	45 01 c9             	add    %r9d,%r9d
    d228:	45 89 c8             	mov    %r9d,%r8d
    d22b:	41 f7 d8             	neg    %r8d
    d22e:	45 09 c8             	or     %r9d,%r8d
    d231:	44 21 c0             	and    %r8d,%eax
    d234:	89 c1                	mov    %eax,%ecx
    d236:	f7 d9                	neg    %ecx
    d238:	21 c1                	and    %eax,%ecx
    d23a:	f3 0f bc c9          	tzcnt  %ecx,%ecx
    d23e:	8d 44 09 09          	lea    0x9(%rcx,%rcx,1),%eax
    d242:	4d 8d 44 c5 00       	lea    0x0(%r13,%rax,8),%r8
    d247:	49 8b 58 10          	mov    0x10(%r8),%rbx
    d24b:	48 8b 43 10          	mov    0x10(%rbx),%rax
    d24f:	49 39 c0             	cmp    %rax,%r8
    d252:	0f 84 d1 05 00 00    	je     d829 <dlmalloc+0x869>
    d258:	48 3b 05 f9 d7 01 00 	cmp    0x1d7f9(%rip),%rax        # 2aa58 <_gm_+0x18>
    d25f:	0f 82 bb 03 00 00    	jb     d620 <dlmalloc+0x660>
    d265:	48 39 58 18          	cmp    %rbx,0x18(%rax)
    d269:	0f 85 b1 03 00 00    	jne    d620 <dlmalloc+0x660>
    d26f:	4c 89 40 18          	mov    %r8,0x18(%rax)
    d273:	49 89 40 10          	mov    %rax,0x10(%r8)
    d277:	8d 04 cd 00 00 00 00 	lea    0x0(,%rcx,8),%eax
    d27e:	48 8b 3d 7b db 01 00 	mov    0x1db7b(%rip),%rdi        # 2ae00 <mparams>
    d285:	48 89 c2             	mov    %rax,%rdx
    d288:	48 89 c1             	mov    %rax,%rcx
    d28b:	48 01 d8             	add    %rbx,%rax
    d28e:	4c 29 e2             	sub    %r12,%rdx
    d291:	4c 31 ef             	xor    %r13,%rdi
    d294:	48 83 fa 1f          	cmp    $0x1f,%rdx
    d298:	0f 86 8d 0d 00 00    	jbe    e02b <dlmalloc+0x106b>
    d29e:	4c 89 e1             	mov    %r12,%rcx
    d2a1:	49 01 dc             	add    %rbx,%r12
    d2a4:	48 83 c9 03          	or     $0x3,%rcx
    d2a8:	48 89 4b 08          	mov    %rcx,0x8(%rbx)
    d2ac:	48 89 d1             	mov    %rdx,%rcx
    d2af:	48 83 c9 01          	or     $0x1,%rcx
    d2b3:	49 89 3c 24          	mov    %rdi,(%r12)
    d2b7:	49 89 4c 24 08       	mov    %rcx,0x8(%r12)
    d2bc:	48 89 10             	mov    %rdx,(%rax)
    d2bf:	48 85 f6             	test   %rsi,%rsi
    d2c2:	74 4d                	je     d311 <dlmalloc+0x351>
    d2c4:	48 c1 ee 03          	shr    $0x3,%rsi
    d2c8:	bf 01 00 00 00       	mov    $0x1,%edi
    d2cd:	48 8b 05 8c d7 01 00 	mov    0x1d78c(%rip),%rax        # 2aa60 <_gm_+0x20>
    d2d4:	48 89 f1             	mov    %rsi,%rcx
    d2d7:	8d 74 36 09          	lea    0x9(%rsi,%rsi,1),%esi
    d2db:	4d 8d 44 f5 00       	lea    0x0(%r13,%rsi,8),%r8
    d2e0:	8b 35 5a d7 01 00    	mov    0x1d75a(%rip),%esi        # 2aa40 <_gm_>
    d2e6:	d3 e7                	shl    %cl,%edi
    d2e8:	85 fe                	test   %edi,%esi
    d2ea:	0f 84 a9 10 00 00    	je     e399 <dlmalloc+0x13d9>
    d2f0:	49 8b 48 10          	mov    0x10(%r8),%rcx
    d2f4:	48 3b 0d 5d d7 01 00 	cmp    0x1d75d(%rip),%rcx        # 2aa58 <_gm_+0x18>
    d2fb:	0f 82 1f 03 00 00    	jb     d620 <dlmalloc+0x660>
    d301:	49 89 40 10          	mov    %rax,0x10(%r8)
    d305:	48 89 41 18          	mov    %rax,0x18(%rcx)
    d309:	48 89 48 10          	mov    %rcx,0x10(%rax)
    d30d:	4c 89 40 18          	mov    %r8,0x18(%rax)
    d311:	48 89 15 30 d7 01 00 	mov    %rdx,0x1d730(%rip)        # 2aa48 <_gm_+0x8>
    d318:	4c 89 25 41 d7 01 00 	mov    %r12,0x1d741(%rip)        # 2aa60 <_gm_+0x20>
    d31f:	e9 ce fe ff ff       	jmp    d1f2 <dlmalloc+0x232>
    d324:	0f 1f 40 00          	nopl   0x0(%rax)
    d328:	48 8b 1d 31 d7 01 00 	mov    0x1d731(%rip),%rbx        # 2aa60 <_gm_+0x20>
    d32f:	48 8b 3d ca da 01 00 	mov    0x1daca(%rip),%rdi        # 2ae00 <mparams>
    d336:	48 89 f2             	mov    %rsi,%rdx
    d339:	4c 29 e2             	sub    %r12,%rdx
    d33c:	48 8d 04 33          	lea    (%rbx,%rsi,1),%rax
    d340:	4c 31 ef             	xor    %r13,%rdi
    d343:	48 83 fa 1f          	cmp    $0x1f,%rdx
    d347:	0f 86 83 0a 00 00    	jbe    ddd0 <dlmalloc+0xe10>
    d34d:	48 89 d6             	mov    %rdx,%rsi
    d350:	4a 8d 0c 23          	lea    (%rbx,%r12,1),%rcx
    d354:	49 83 cc 03          	or     $0x3,%r12
    d358:	48 89 15 e9 d6 01 00 	mov    %rdx,0x1d6e9(%rip)        # 2aa48 <_gm_+0x8>
    d35f:	48 83 ce 01          	or     $0x1,%rsi
    d363:	48 89 0d f6 d6 01 00 	mov    %rcx,0x1d6f6(%rip)        # 2aa60 <_gm_+0x20>
    d36a:	48 89 71 08          	mov    %rsi,0x8(%rcx)
    d36e:	48 89 10             	mov    %rdx,(%rax)
    d371:	4c 89 63 08          	mov    %r12,0x8(%rbx)
    d375:	48 89 39             	mov    %rdi,(%rcx)
    d378:	e9 75 fe ff ff       	jmp    d1f2 <dlmalloc+0x232>
    d37d:	0f 1f 00             	nopl   (%rax)
    d380:	48 8b 1d d9 d6 01 00 	mov    0x1d6d9(%rip),%rbx        # 2aa60 <_gm_+0x20>
    d387:	48 c7 c6 ff ff ff ff 	mov    $0xffffffffffffffff,%rsi
    d38e:	48 8d 43 ff          	lea    -0x1(%rbx),%rax
    d392:	48 c7 05 ab d6 01 00 	movq   $0x0,0x1d6ab(%rip)        # 2aa48 <_gm_+0x8>
    d399:	00 00 00 00 
    d39d:	48 c7 05 b8 d6 01 00 	movq   $0x0,0x1d6b8(%rip)        # 2aa60 <_gm_+0x20>
    d3a4:	00 00 00 00 
    d3a8:	48 89 73 08          	mov    %rsi,0x8(%rbx)
    d3ac:	48 83 48 08 01       	orq    $0x1,0x8(%rax)
    d3b1:	4c 33 2d 48 da 01 00 	xor    0x1da48(%rip),%r13        # 2ae00 <mparams>
    d3b8:	4c 89 28             	mov    %r13,(%rax)
    d3bb:	e9 32 fe ff ff       	jmp    d1f2 <dlmalloc+0x232>
    d3c0:	4c 89 e0             	mov    %r12,%rax
    d3c3:	4c 89 e7             	mov    %r12,%rdi
    d3c6:	48 c1 e8 08          	shr    $0x8,%rax
    d3ca:	48 f7 df             	neg    %rdi
    d3cd:	41 89 c2             	mov    %eax,%r10d
    d3d0:	85 c0                	test   %eax,%eax
    d3d2:	0f 85 28 04 00 00    	jne    d800 <dlmalloc+0x840>
    d3d8:	48 8b 15 b9 d8 01 00 	mov    0x1d8b9(%rip),%rdx        # 2ac98 <_gm_+0x258>
    d3df:	b9 39 00 00 00       	mov    $0x39,%ecx
    d3e4:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    d3e9:	48 85 d2             	test   %rdx,%rdx
    d3ec:	0f 84 52 04 00 00    	je     d844 <dlmalloc+0x884>
    d3f2:	4d 89 e3             	mov    %r12,%r11
    d3f5:	49 d3 e3             	shl    %cl,%r11
    d3f8:	31 c9                	xor    %ecx,%ecx
    d3fa:	31 db                	xor    %ebx,%ebx
    d3fc:	eb 05                	jmp    d403 <dlmalloc+0x443>
    d3fe:	66 90                	xchg   %ax,%ax
    d400:	4d 01 db             	add    %r11,%r11
    d403:	48 8b 42 08          	mov    0x8(%rdx),%rax
    d407:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    d40b:	4c 29 e0             	sub    %r12,%rax
    d40e:	48 39 f8             	cmp    %rdi,%rax
    d411:	73 0f                	jae    d422 <dlmalloc+0x462>
    d413:	48 85 c0             	test   %rax,%rax
    d416:	0f 84 c3 0b 00 00    	je     dfdf <dlmalloc+0x101f>
    d41c:	48 89 c7             	mov    %rax,%rdi
    d41f:	48 89 d3             	mov    %rdx,%rbx
    d422:	48 8b 42 28          	mov    0x28(%rdx),%rax
    d426:	4d 89 de             	mov    %r11,%r14
    d429:	49 c1 ee 3f          	shr    $0x3f,%r14
    d42d:	4a 8b 54 f2 20       	mov    0x20(%rdx,%r14,8),%rdx
    d432:	48 85 c0             	test   %rax,%rax
    d435:	74 07                	je     d43e <dlmalloc+0x47e>
    d437:	48 39 d0             	cmp    %rdx,%rax
    d43a:	48 0f 45 c8          	cmovne %rax,%rcx
    d43e:	48 85 d2             	test   %rdx,%rdx
    d441:	75 bd                	jne    d400 <dlmalloc+0x440>
    d443:	48 89 c8             	mov    %rcx,%rax
    d446:	48 09 d8             	or     %rbx,%rax
    d449:	0f 84 eb 03 00 00    	je     d83a <dlmalloc+0x87a>
    d44f:	48 85 c9             	test   %rcx,%rcx
    d452:	75 0f                	jne    d463 <dlmalloc+0x4a3>
    d454:	eb 35                	jmp    d48b <dlmalloc+0x4cb>
    d456:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    d45d:	00 00 00 
    d460:	48 89 c1             	mov    %rax,%rcx
    d463:	48 8b 41 08          	mov    0x8(%rcx),%rax
    d467:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    d46b:	4c 29 e0             	sub    %r12,%rax
    d46e:	48 39 f8             	cmp    %rdi,%rax
    d471:	73 06                	jae    d479 <dlmalloc+0x4b9>
    d473:	48 89 c7             	mov    %rax,%rdi
    d476:	48 89 cb             	mov    %rcx,%rbx
    d479:	48 8b 41 20          	mov    0x20(%rcx),%rax
    d47d:	48 85 c0             	test   %rax,%rax
    d480:	75 de                	jne    d460 <dlmalloc+0x4a0>
    d482:	48 8b 41 28          	mov    0x28(%rcx),%rax
    d486:	48 85 c0             	test   %rax,%rax
    d489:	75 d5                	jne    d460 <dlmalloc+0x4a0>
    d48b:	48 85 db             	test   %rbx,%rbx
    d48e:	0f 84 0c fd ff ff    	je     d1a0 <dlmalloc+0x1e0>
    d494:	4c 89 c0             	mov    %r8,%rax
    d497:	4c 29 e0             	sub    %r12,%rax
    d49a:	48 39 c7             	cmp    %rax,%rdi
    d49d:	0f 83 fd fc ff ff    	jae    d1a0 <dlmalloc+0x1e0>
    d4a3:	4c 8b 1d ae d5 01 00 	mov    0x1d5ae(%rip),%r11        # 2aa58 <_gm_+0x18>
    d4aa:	4c 39 db             	cmp    %r11,%rbx
    d4ad:	0f 82 6d 01 00 00    	jb     d620 <dlmalloc+0x660>
    d4b3:	4e 8d 14 23          	lea    (%rbx,%r12,1),%r10
    d4b7:	4c 39 d3             	cmp    %r10,%rbx
    d4ba:	0f 83 60 01 00 00    	jae    d620 <dlmalloc+0x660>
    d4c0:	4c 8b 73 18          	mov    0x18(%rbx),%r14
    d4c4:	4c 8b 7b 30          	mov    0x30(%rbx),%r15
    d4c8:	4c 39 f3             	cmp    %r14,%rbx
    d4cb:	0f 84 2d 0d 00 00    	je     e1fe <dlmalloc+0x123e>
    d4d1:	48 8b 43 10          	mov    0x10(%rbx),%rax
    d4d5:	4c 39 d8             	cmp    %r11,%rax
    d4d8:	0f 82 42 01 00 00    	jb     d620 <dlmalloc+0x660>
    d4de:	48 3b 58 18          	cmp    0x18(%rax),%rbx
    d4e2:	0f 85 38 01 00 00    	jne    d620 <dlmalloc+0x660>
    d4e8:	49 3b 5e 10          	cmp    0x10(%r14),%rbx
    d4ec:	0f 85 2e 01 00 00    	jne    d620 <dlmalloc+0x660>
    d4f2:	4c 89 70 18          	mov    %r14,0x18(%rax)
    d4f6:	49 89 46 10          	mov    %rax,0x10(%r14)
    d4fa:	4d 85 ff             	test   %r15,%r15
    d4fd:	74 71                	je     d570 <dlmalloc+0x5b0>
    d4ff:	8b 53 38             	mov    0x38(%rbx),%edx
    d502:	48 89 d0             	mov    %rdx,%rax
    d505:	49 3b 9c d5 58 02 00 	cmp    0x258(%r13,%rdx,8),%rbx
    d50c:	00 
    d50d:	0f 84 ca 0f 00 00    	je     e4dd <dlmalloc+0x151d>
    d513:	4d 39 df             	cmp    %r11,%r15
    d516:	0f 82 04 01 00 00    	jb     d620 <dlmalloc+0x660>
    d51c:	49 3b 5f 20          	cmp    0x20(%r15),%rbx
    d520:	0f 84 3e 11 00 00    	je     e664 <dlmalloc+0x16a4>
    d526:	4d 89 77 28          	mov    %r14,0x28(%r15)
    d52a:	4d 85 f6             	test   %r14,%r14
    d52d:	74 41                	je     d570 <dlmalloc+0x5b0>
    d52f:	4d 39 de             	cmp    %r11,%r14
    d532:	0f 82 e8 00 00 00    	jb     d620 <dlmalloc+0x660>
    d538:	48 8b 43 20          	mov    0x20(%rbx),%rax
    d53c:	4d 89 7e 30          	mov    %r15,0x30(%r14)
    d540:	48 85 c0             	test   %rax,%rax
    d543:	74 11                	je     d556 <dlmalloc+0x596>
    d545:	4c 39 d8             	cmp    %r11,%rax
    d548:	0f 82 d2 00 00 00    	jb     d620 <dlmalloc+0x660>
    d54e:	49 89 46 20          	mov    %rax,0x20(%r14)
    d552:	4c 89 70 30          	mov    %r14,0x30(%rax)
    d556:	48 8b 43 28          	mov    0x28(%rbx),%rax
    d55a:	48 85 c0             	test   %rax,%rax
    d55d:	74 11                	je     d570 <dlmalloc+0x5b0>
    d55f:	4c 39 d8             	cmp    %r11,%rax
    d562:	0f 82 b8 00 00 00    	jb     d620 <dlmalloc+0x660>
    d568:	49 89 46 28          	mov    %rax,0x28(%r14)
    d56c:	4c 89 70 30          	mov    %r14,0x30(%rax)
    d570:	48 8b 15 89 d8 01 00 	mov    0x1d889(%rip),%rdx        # 2ae00 <mparams>
    d577:	4c 31 ea             	xor    %r13,%rdx
    d57a:	48 83 ff 1f          	cmp    $0x1f,%rdi
    d57e:	0f 86 fa 0c 00 00    	jbe    e27e <dlmalloc+0x12be>
    d584:	4c 89 e0             	mov    %r12,%rax
    d587:	48 89 f9             	mov    %rdi,%rcx
    d58a:	48 83 c8 03          	or     $0x3,%rax
    d58e:	48 c1 e9 03          	shr    $0x3,%rcx
    d592:	48 89 43 08          	mov    %rax,0x8(%rbx)
    d596:	48 89 f8             	mov    %rdi,%rax
    d599:	48 83 c8 01          	or     $0x1,%rax
    d59d:	49 89 12             	mov    %rdx,(%r10)
    d5a0:	49 89 42 08          	mov    %rax,0x8(%r10)
    d5a4:	49 89 3c 3a          	mov    %rdi,(%r10,%rdi,1)
    d5a8:	48 81 ff ff 00 00 00 	cmp    $0xff,%rdi
    d5af:	0f 87 e8 0c 00 00    	ja     e29d <dlmalloc+0x12dd>
    d5b5:	8d 44 09 09          	lea    0x9(%rcx,%rcx,1),%eax
    d5b9:	8b 35 81 d4 01 00    	mov    0x1d481(%rip),%esi        # 2aa40 <_gm_>
    d5bf:	49 8d 54 c5 00       	lea    0x0(%r13,%rax,8),%rdx
    d5c4:	b8 01 00 00 00       	mov    $0x1,%eax
    d5c9:	d3 e0                	shl    %cl,%eax
    d5cb:	85 c6                	test   %eax,%esi
    d5cd:	0f 84 39 10 00 00    	je     e60c <dlmalloc+0x164c>
    d5d3:	48 8b 42 10          	mov    0x10(%rdx),%rax
    d5d7:	4c 39 d8             	cmp    %r11,%rax
    d5da:	72 44                	jb     d620 <dlmalloc+0x660>
    d5dc:	4c 89 52 10          	mov    %r10,0x10(%rdx)
    d5e0:	4c 89 50 18          	mov    %r10,0x18(%rax)
    d5e4:	49 89 42 10          	mov    %rax,0x10(%r10)
    d5e8:	49 89 52 18          	mov    %rdx,0x18(%r10)
    d5ec:	48 83 c3 10          	add    $0x10,%rbx
    d5f0:	4c 89 c6             	mov    %r8,%rsi
    d5f3:	0f 85 9e fa ff ff    	jne    d097 <dlmalloc+0xd7>
    d5f9:	e9 a2 fb ff ff       	jmp    d1a0 <dlmalloc+0x1e0>
    d5fe:	66 90                	xchg   %ax,%ax
    d600:	c7 05 aa d7 01 00 00 	movl   $0x0,0x1d7aa(%rip)        # 2adb4 <_gm_+0x374>
    d607:	00 00 00 
    d60a:	e9 bc fa ff ff       	jmp    d0cb <dlmalloc+0x10b>
    d60f:	48 8b 42 10          	mov    0x10(%rdx),%rax
    d613:	48 3b 05 3e d4 01 00 	cmp    0x1d43e(%rip),%rax        # 2aa58 <_gm_+0x18>
    d61a:	0f 83 57 06 00 00    	jae    dc77 <dlmalloc+0xcb7>
    d620:	e8 12 4d 00 00       	call   12337 <abort>
    d625:	0f 1f 00             	nopl   (%rax)
    d628:	44 8b 0d 15 d4 01 00 	mov    0x1d415(%rip),%r9d        # 2aa44 <_gm_+0x4>
    d62f:	45 85 c9             	test   %r9d,%r9d
    d632:	0f 84 71 fb ff ff    	je     d1a9 <dlmalloc+0x1e9>
    d638:	44 89 c8             	mov    %r9d,%eax
    d63b:	f7 d8                	neg    %eax
    d63d:	44 21 c8             	and    %r9d,%eax
    d640:	f3 0f bc c0          	tzcnt  %eax,%eax
    d644:	49 8b 84 c5 58 02 00 	mov    0x258(%r13,%rax,8),%rax
    d64b:	00 
    d64c:	48 8b 78 08          	mov    0x8(%rax),%rdi
    d650:	48 89 c3             	mov    %rax,%rbx
    d653:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    d657:	4c 29 e7             	sub    %r12,%rdi
    d65a:	eb 1d                	jmp    d679 <dlmalloc+0x6b9>
    d65c:	0f 1f 40 00          	nopl   0x0(%rax)
    d660:	48 8b 41 08          	mov    0x8(%rcx),%rax
    d664:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    d668:	4c 29 e0             	sub    %r12,%rax
    d66b:	48 39 f8             	cmp    %rdi,%rax
    d66e:	73 06                	jae    d676 <dlmalloc+0x6b6>
    d670:	48 89 c7             	mov    %rax,%rdi
    d673:	48 89 cb             	mov    %rcx,%rbx
    d676:	48 89 c8             	mov    %rcx,%rax
    d679:	48 8b 48 20          	mov    0x20(%rax),%rcx
    d67d:	48 85 c9             	test   %rcx,%rcx
    d680:	75 de                	jne    d660 <dlmalloc+0x6a0>
    d682:	48 8b 48 28          	mov    0x28(%rax),%rcx
    d686:	48 85 c9             	test   %rcx,%rcx
    d689:	75 d5                	jne    d660 <dlmalloc+0x6a0>
    d68b:	4c 8b 1d c6 d3 01 00 	mov    0x1d3c6(%rip),%r11        # 2aa58 <_gm_+0x18>
    d692:	4c 39 db             	cmp    %r11,%rbx
    d695:	72 89                	jb     d620 <dlmalloc+0x660>
    d697:	4e 8d 14 23          	lea    (%rbx,%r12,1),%r10
    d69b:	4c 39 d3             	cmp    %r10,%rbx
    d69e:	73 80                	jae    d620 <dlmalloc+0x660>
    d6a0:	4c 8b 43 18          	mov    0x18(%rbx),%r8
    d6a4:	4c 8b 73 30          	mov    0x30(%rbx),%r14
    d6a8:	49 39 d8             	cmp    %rbx,%r8
    d6ab:	0f 84 36 0d 00 00    	je     e3e7 <dlmalloc+0x1427>
    d6b1:	48 8b 43 10          	mov    0x10(%rbx),%rax
    d6b5:	4c 39 d8             	cmp    %r11,%rax
    d6b8:	0f 82 62 ff ff ff    	jb     d620 <dlmalloc+0x660>
    d6be:	48 39 58 18          	cmp    %rbx,0x18(%rax)
    d6c2:	0f 85 58 ff ff ff    	jne    d620 <dlmalloc+0x660>
    d6c8:	49 39 58 10          	cmp    %rbx,0x10(%r8)
    d6cc:	0f 85 4e ff ff ff    	jne    d620 <dlmalloc+0x660>
    d6d2:	4c 89 40 18          	mov    %r8,0x18(%rax)
    d6d6:	49 89 40 10          	mov    %rax,0x10(%r8)
    d6da:	4d 85 f6             	test   %r14,%r14
    d6dd:	74 71                	je     d750 <dlmalloc+0x790>
    d6df:	8b 4b 38             	mov    0x38(%rbx),%ecx
    d6e2:	48 89 c8             	mov    %rcx,%rax
    d6e5:	49 39 9c cd 58 02 00 	cmp    %rbx,0x258(%r13,%rcx,8)
    d6ec:	00 
    d6ed:	0f 84 14 10 00 00    	je     e707 <dlmalloc+0x1747>
    d6f3:	4d 39 de             	cmp    %r11,%r14
    d6f6:	0f 82 24 ff ff ff    	jb     d620 <dlmalloc+0x660>
    d6fc:	49 39 5e 20          	cmp    %rbx,0x20(%r14)
    d700:	0f 84 00 11 00 00    	je     e806 <dlmalloc+0x1846>
    d706:	4d 89 46 28          	mov    %r8,0x28(%r14)
    d70a:	4d 85 c0             	test   %r8,%r8
    d70d:	74 41                	je     d750 <dlmalloc+0x790>
    d70f:	4d 39 d8             	cmp    %r11,%r8
    d712:	0f 82 08 ff ff ff    	jb     d620 <dlmalloc+0x660>
    d718:	48 8b 43 20          	mov    0x20(%rbx),%rax
    d71c:	4d 89 70 30          	mov    %r14,0x30(%r8)
    d720:	48 85 c0             	test   %rax,%rax
    d723:	74 11                	je     d736 <dlmalloc+0x776>
    d725:	4c 39 d8             	cmp    %r11,%rax
    d728:	0f 82 f2 fe ff ff    	jb     d620 <dlmalloc+0x660>
    d72e:	49 89 40 20          	mov    %rax,0x20(%r8)
    d732:	4c 89 40 30          	mov    %r8,0x30(%rax)
    d736:	48 8b 43 28          	mov    0x28(%rbx),%rax
    d73a:	48 85 c0             	test   %rax,%rax
    d73d:	74 11                	je     d750 <dlmalloc+0x790>
    d73f:	4c 39 d8             	cmp    %r11,%rax
    d742:	0f 82 d8 fe ff ff    	jb     d620 <dlmalloc+0x660>
    d748:	49 89 40 28          	mov    %rax,0x28(%r8)
    d74c:	4c 89 40 30          	mov    %r8,0x30(%rax)
    d750:	48 8b 05 a9 d6 01 00 	mov    0x1d6a9(%rip),%rax        # 2ae00 <mparams>
    d757:	4c 31 e8             	xor    %r13,%rax
    d75a:	48 83 ff 1f          	cmp    $0x1f,%rdi
    d75e:	0f 86 d2 0d 00 00    	jbe    e536 <dlmalloc+0x1576>
    d764:	4c 89 e1             	mov    %r12,%rcx
    d767:	48 83 c9 03          	or     $0x3,%rcx
    d76b:	48 89 4b 08          	mov    %rcx,0x8(%rbx)
    d76f:	49 89 02             	mov    %rax,(%r10)
    d772:	48 89 f8             	mov    %rdi,%rax
    d775:	48 83 c8 01          	or     $0x1,%rax
    d779:	49 89 42 08          	mov    %rax,0x8(%r10)
    d77d:	49 89 3c 3a          	mov    %rdi,(%r10,%rdi,1)
    d781:	48 85 f6             	test   %rsi,%rsi
    d784:	74 46                	je     d7cc <dlmalloc+0x80c>
    d786:	48 c1 ee 03          	shr    $0x3,%rsi
    d78a:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    d790:	48 8b 05 c9 d2 01 00 	mov    0x1d2c9(%rip),%rax        # 2aa60 <_gm_+0x20>
    d797:	48 89 f1             	mov    %rsi,%rcx
    d79a:	8d 74 36 09          	lea    0x9(%rsi,%rsi,1),%esi
    d79e:	41 d3 e0             	shl    %cl,%r8d
    d7a1:	4d 8d 4c f5 00       	lea    0x0(%r13,%rsi,8),%r9
    d7a6:	44 85 c2             	test   %r8d,%edx
    d7a9:	0f 84 79 0f 00 00    	je     e728 <dlmalloc+0x1768>
    d7af:	49 8b 51 10          	mov    0x10(%r9),%rdx
    d7b3:	4c 39 da             	cmp    %r11,%rdx
    d7b6:	0f 82 64 fe ff ff    	jb     d620 <dlmalloc+0x660>
    d7bc:	49 89 41 10          	mov    %rax,0x10(%r9)
    d7c0:	48 89 42 18          	mov    %rax,0x18(%rdx)
    d7c4:	48 89 50 10          	mov    %rdx,0x10(%rax)
    d7c8:	4c 89 48 18          	mov    %r9,0x18(%rax)
    d7cc:	48 89 3d 75 d2 01 00 	mov    %rdi,0x1d275(%rip)        # 2aa48 <_gm_+0x8>
    d7d3:	4c 89 15 86 d2 01 00 	mov    %r10,0x1d286(%rip)        # 2aa60 <_gm_+0x20>
    d7da:	48 83 c3 10          	add    $0x10,%rbx
    d7de:	0f 85 b3 f8 ff ff    	jne    d097 <dlmalloc+0xd7>
    d7e4:	48 8b 35 5d d2 01 00 	mov    0x1d25d(%rip),%rsi        # 2aa48 <_gm_+0x8>
    d7eb:	e9 b0 f9 ff ff       	jmp    d1a0 <dlmalloc+0x1e0>
    d7f0:	0f b3 ca             	btr    %ecx,%edx
    d7f3:	89 15 47 d2 01 00    	mov    %edx,0x1d247(%rip)        # 2aa40 <_gm_>
    d7f9:	e9 6d f8 ff ff       	jmp    d06b <dlmalloc+0xab>
    d7fe:	66 90                	xchg   %ax,%ax
    d800:	3d ff ff 00 00       	cmp    $0xffff,%eax
    d805:	0f 86 85 07 00 00    	jbe    df90 <dlmalloc+0xfd0>
    d80b:	48 8b 15 7e d5 01 00 	mov    0x1d57e(%rip),%rdx        # 2ad90 <_gm_+0x350>
    d812:	4d 89 e3             	mov    %r12,%r11
    d815:	41 ba 1f 00 00 00    	mov    $0x1f,%r10d
    d81b:	48 85 d2             	test   %rdx,%rdx
    d81e:	0f 85 d4 fb ff ff    	jne    d3f8 <dlmalloc+0x438>
    d824:	e9 77 f9 ff ff       	jmp    d1a0 <dlmalloc+0x1e0>
    d829:	d3 e7                	shl    %cl,%edi
    d82b:	f7 d7                	not    %edi
    d82d:	21 d7                	and    %edx,%edi
    d82f:	89 3d 0b d2 01 00    	mov    %edi,0x1d20b(%rip)        # 2aa40 <_gm_>
    d835:	e9 3d fa ff ff       	jmp    d277 <dlmalloc+0x2b7>
    d83a:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    d83f:	44 89 d1             	mov    %r10d,%ecx
    d842:	d3 e0                	shl    %cl,%eax
    d844:	44 21 c8             	and    %r9d,%eax
    d847:	0f 84 53 f9 ff ff    	je     d1a0 <dlmalloc+0x1e0>
    d84d:	89 c2                	mov    %eax,%edx
    d84f:	31 db                	xor    %ebx,%ebx
    d851:	f7 da                	neg    %edx
    d853:	21 d0                	and    %edx,%eax
    d855:	f3 0f bc c0          	tzcnt  %eax,%eax
    d859:	49 8b 8c c5 58 02 00 	mov    0x258(%r13,%rax,8),%rcx
    d860:	00 
    d861:	48 85 c9             	test   %rcx,%rcx
    d864:	0f 85 f9 fb ff ff    	jne    d463 <dlmalloc+0x4a3>
    d86a:	e9 31 f9 ff ff       	jmp    d1a0 <dlmalloc+0x1e0>
    d86f:	90                   	nop
    d870:	48 85 d2             	test   %rdx,%rdx
    d873:	0f 84 70 12 00 00    	je     eae9 <dlmalloc+0x1b29>
    d879:	48 8b 05 90 d5 01 00 	mov    0x1d590(%rip),%rax        # 2ae10 <mparams+0x10>
    d880:	49 8d 4c 04 5f       	lea    0x5f(%r12,%rax,1),%rcx
    d885:	48 f7 d8             	neg    %rax
    d888:	48 21 c1             	and    %rax,%rcx
    d88b:	49 39 cc             	cmp    %rcx,%r12
    d88e:	0f 83 99 f8 ff ff    	jae    d12d <dlmalloc+0x16d>
    d894:	48 8b 05 0d d5 01 00 	mov    0x1d50d(%rip),%rax        # 2ada8 <_gm_+0x368>
    d89b:	48 85 c0             	test   %rax,%rax
    d89e:	74 1d                	je     d8bd <dlmalloc+0x8fd>
    d8a0:	48 8b 15 f1 d4 01 00 	mov    0x1d4f1(%rip),%rdx        # 2ad98 <_gm_+0x358>
    d8a7:	48 8d 34 11          	lea    (%rcx,%rdx,1),%rsi
    d8ab:	48 39 f2             	cmp    %rsi,%rdx
    d8ae:	0f 83 79 f8 ff ff    	jae    d12d <dlmalloc+0x16d>
    d8b4:	48 39 f0             	cmp    %rsi,%rax
    d8b7:	0f 82 70 f8 ff ff    	jb     d12d <dlmalloc+0x16d>
    d8bd:	f6 05 ec d4 01 00 04 	testb  $0x4,0x1d4ec(%rip)        # 2adb0 <_gm_+0x370>
    d8c4:	0f 85 b9 00 00 00    	jne    d983 <dlmalloc+0x9c3>
    d8ca:	48 8b 15 97 d1 01 00 	mov    0x1d197(%rip),%rdx        # 2aa68 <_gm_+0x28>
    d8d1:	48 85 d2             	test   %rdx,%rdx
    d8d4:	0f 84 b6 05 00 00    	je     de90 <dlmalloc+0xed0>
    d8da:	4c 8d 35 d7 d4 01 00 	lea    0x1d4d7(%rip),%r14        # 2adb8 <_gm_+0x378>
    d8e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    d8e8:	49 8b 06             	mov    (%r14),%rax
    d8eb:	48 39 c2             	cmp    %rax,%rdx
    d8ee:	72 0d                	jb     d8fd <dlmalloc+0x93d>
    d8f0:	49 03 46 08          	add    0x8(%r14),%rax
    d8f4:	48 39 c2             	cmp    %rax,%rdx
    d8f7:	0f 82 44 07 00 00    	jb     e041 <dlmalloc+0x1081>
    d8fd:	4d 8b 76 10          	mov    0x10(%r14),%r14
    d901:	4d 85 f6             	test   %r14,%r14
    d904:	75 e2                	jne    d8e8 <dlmalloc+0x928>
    d906:	b8 01 00 00 00       	mov    $0x1,%eax
    d90b:	87 05 1f d5 01 00    	xchg   %eax,0x1d51f(%rip)        # 2ae30 <malloc_global_mutex>
    d911:	85 c0                	test   %eax,%eax
    d913:	0f 84 8a 05 00 00    	je     dea3 <dlmalloc+0xee3>
    d919:	45 31 f6             	xor    %r14d,%r14d
    d91c:	48 8d 15 0d d5 01 00 	lea    0x1d50d(%rip),%rdx        # 2ae30 <malloc_global_mutex>
    d923:	be 01 00 00 00       	mov    $0x1,%esi
    d928:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    d92f:	00 
    d930:	8b 02                	mov    (%rdx),%eax
    d932:	85 c0                	test   %eax,%eax
    d934:	75 fa                	jne    d930 <dlmalloc+0x970>
    d936:	89 f0                	mov    %esi,%eax
    d938:	87 05 f2 d4 01 00    	xchg   %eax,0x1d4f2(%rip)        # 2ae30 <malloc_global_mutex>
    d93e:	85 c0                	test   %eax,%eax
    d940:	75 ee                	jne    d930 <dlmalloc+0x970>
    d942:	4d 85 f6             	test   %r14,%r14
    d945:	0f 84 58 05 00 00    	je     dea3 <dlmalloc+0xee3>
    d94b:	48 8b 05 be d4 01 00 	mov    0x1d4be(%rip),%rax        # 2ae10 <mparams+0x10>
    d952:	4c 8d 78 5f          	lea    0x5f(%rax),%r15
    d956:	4c 2b 3d f3 d0 01 00 	sub    0x1d0f3(%rip),%r15        # 2aa50 <_gm_+0x10>
    d95d:	48 f7 d8             	neg    %rax
    d960:	4d 01 e7             	add    %r12,%r15
    d963:	49 21 c7             	and    %rax,%r15
    d966:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
    d96d:	ff ff 7f 
    d970:	4c 39 f8             	cmp    %r15,%rax
    d973:	0f 83 73 06 00 00    	jae    dfec <dlmalloc+0x102c>
    d979:	c7 05 ad d4 01 00 00 	movl   $0x0,0x1d4ad(%rip)        # 2ae30 <malloc_global_mutex>
    d980:	00 00 00 
    d983:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
    d98a:	ff ff 7f 
    d98d:	48 39 c8             	cmp    %rcx,%rax
    d990:	73 16                	jae    d9a8 <dlmalloc+0x9e8>
    d992:	e8 a9 33 00 00       	call   10d40 <__errno_location>
    d997:	31 db                	xor    %ebx,%ebx
    d999:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
    d99f:	e9 1a f7 ff ff       	jmp    d0be <dlmalloc+0xfe>
    d9a4:	0f 1f 40 00          	nopl   0x0(%rax)
    d9a8:	b8 01 00 00 00       	mov    $0x1,%eax
    d9ad:	87 05 7d d4 01 00    	xchg   %eax,0x1d47d(%rip)        # 2ae30 <malloc_global_mutex>
    d9b3:	48 8d 15 76 d4 01 00 	lea    0x1d476(%rip),%rdx        # 2ae30 <malloc_global_mutex>
    d9ba:	be 01 00 00 00       	mov    $0x1,%esi
    d9bf:	85 c0                	test   %eax,%eax
    d9c1:	0f 85 11 03 00 00    	jne    dcd8 <dlmalloc+0xd18>
    d9c7:	48 89 cf             	mov    %rcx,%rdi
    d9ca:	e8 11 eb ff ff       	call   c4e0 <sbrk>
    d9cf:	31 ff                	xor    %edi,%edi
    d9d1:	48 89 c3             	mov    %rax,%rbx
    d9d4:	e8 07 eb ff ff       	call   c4e0 <sbrk>
    d9d9:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
    d9dd:	0f 95 c1             	setne  %cl
    d9e0:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    d9e4:	c7 05 42 d4 01 00 00 	movl   $0x0,0x1d442(%rip)        # 2ae30 <malloc_global_mutex>
    d9eb:	00 00 00 
    d9ee:	0f 95 c2             	setne  %dl
    d9f1:	84 d1                	test   %dl,%cl
    d9f3:	74 9d                	je     d992 <dlmalloc+0x9d2>
    d9f5:	48 39 c3             	cmp    %rax,%rbx
    d9f8:	73 98                	jae    d992 <dlmalloc+0x9d2>
    d9fa:	48 29 d8             	sub    %rbx,%rax
    d9fd:	49 89 c7             	mov    %rax,%r15
    da00:	49 8d 44 24 50       	lea    0x50(%r12),%rax
    da05:	4c 39 f8             	cmp    %r15,%rax
    da08:	73 88                	jae    d992 <dlmalloc+0x9d2>
    da0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    da10:	48 8b 05 81 d3 01 00 	mov    0x1d381(%rip),%rax        # 2ad98 <_gm_+0x358>
    da17:	4c 01 f8             	add    %r15,%rax
    da1a:	48 39 05 7f d3 01 00 	cmp    %rax,0x1d37f(%rip)        # 2ada0 <_gm_+0x360>
    da21:	48 89 05 70 d3 01 00 	mov    %rax,0x1d370(%rip)        # 2ad98 <_gm_+0x358>
    da28:	73 07                	jae    da31 <dlmalloc+0xa71>
    da2a:	48 89 05 6f d3 01 00 	mov    %rax,0x1d36f(%rip)        # 2ada0 <_gm_+0x360>
    da31:	48 8b 35 30 d0 01 00 	mov    0x1d030(%rip),%rsi        # 2aa68 <_gm_+0x28>
    da38:	48 8d 05 79 d3 01 00 	lea    0x1d379(%rip),%rax        # 2adb8 <_gm_+0x378>
    da3f:	48 85 f6             	test   %rsi,%rsi
    da42:	75 15                	jne    da59 <dlmalloc+0xa99>
    da44:	e9 a7 02 00 00       	jmp    dcf0 <dlmalloc+0xd30>
    da49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    da50:	48 8b 40 10          	mov    0x10(%rax),%rax
    da54:	48 85 c0             	test   %rax,%rax
    da57:	74 27                	je     da80 <dlmalloc+0xac0>
    da59:	48 8b 10             	mov    (%rax),%rdx
    da5c:	48 8b 48 08          	mov    0x8(%rax),%rcx
    da60:	48 8d 3c 0a          	lea    (%rdx,%rcx,1),%rdi
    da64:	48 39 fb             	cmp    %rdi,%rbx
    da67:	75 e7                	jne    da50 <dlmalloc+0xa90>
    da69:	f6 40 18 08          	testb  $0x8,0x18(%rax)
    da6d:	75 11                	jne    da80 <dlmalloc+0xac0>
    da6f:	48 39 d6             	cmp    %rdx,%rsi
    da72:	72 0c                	jb     da80 <dlmalloc+0xac0>
    da74:	48 39 de             	cmp    %rbx,%rsi
    da77:	0f 82 ed 09 00 00    	jb     e46a <dlmalloc+0x14aa>
    da7d:	0f 1f 00             	nopl   (%rax)
    da80:	48 3b 1d d1 cf 01 00 	cmp    0x1cfd1(%rip),%rbx        # 2aa58 <_gm_+0x18>
    da87:	73 07                	jae    da90 <dlmalloc+0xad0>
    da89:	48 89 1d c8 cf 01 00 	mov    %rbx,0x1cfc8(%rip)        # 2aa58 <_gm_+0x18>
    da90:	4a 8d 14 3b          	lea    (%rbx,%r15,1),%rdx
    da94:	48 8d 05 1d d3 01 00 	lea    0x1d31d(%rip),%rax        # 2adb8 <_gm_+0x378>
    da9b:	eb 10                	jmp    daad <dlmalloc+0xaed>
    da9d:	0f 1f 00             	nopl   (%rax)
    daa0:	48 8b 40 10          	mov    0x10(%rax),%rax
    daa4:	48 85 c0             	test   %rax,%rax
    daa7:	0f 84 b3 05 00 00    	je     e060 <dlmalloc+0x10a0>
    daad:	48 39 10             	cmp    %rdx,(%rax)
    dab0:	75 ee                	jne    daa0 <dlmalloc+0xae0>
    dab2:	44 8b 48 18          	mov    0x18(%rax),%r9d
    dab6:	49 89 d8             	mov    %rbx,%r8
    dab9:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
    dabd:	41 83 e0 0f          	and    $0xf,%r8d
    dac1:	41 83 e1 08          	and    $0x8,%r9d
    dac5:	0f 84 a5 05 00 00    	je     e070 <dlmalloc+0x10b0>
    dacb:	48 8d 05 e6 d2 01 00 	lea    0x1d2e6(%rip),%rax        # 2adb8 <_gm_+0x378>
    dad2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    dad8:	48 8b 10             	mov    (%rax),%rdx
    dadb:	48 39 d6             	cmp    %rdx,%rsi
    dade:	72 09                	jb     dae9 <dlmalloc+0xb29>
    dae0:	48 03 50 08          	add    0x8(%rax),%rdx
    dae4:	48 39 d6             	cmp    %rdx,%rsi
    dae7:	72 19                	jb     db02 <dlmalloc+0xb42>
    dae9:	48 8b 40 10          	mov    0x10(%rax),%rax
    daed:	48 85 c0             	test   %rax,%rax
    daf0:	75 e6                	jne    dad8 <dlmalloc+0xb18>
    daf2:	48 8b 14 25 08 00 00 	mov    0x8,%rdx
    daf9:	00 
    dafa:	48 03 14 25 00 00 00 	add    0x0,%rdx
    db01:	00 
    db02:	48 8d 42 b1          	lea    -0x4f(%rdx),%rax
    db06:	48 c7 c1 a1 ff ff ff 	mov    $0xffffffffffffffa1,%rcx
    db0d:	a8 0f                	test   $0xf,%al
    db0f:	74 0a                	je     db1b <dlmalloc+0xb5b>
    db11:	48 f7 d8             	neg    %rax
    db14:	83 e0 0f             	and    $0xf,%eax
    db17:	48 8d 48 a1          	lea    -0x5f(%rax),%rcx
    db1b:	48 01 d1             	add    %rdx,%rcx
    db1e:	48 8d 46 20          	lea    0x20(%rsi),%rax
    db22:	4d 8d 4f b0          	lea    -0x50(%r15),%r9
    db26:	48 39 c1             	cmp    %rax,%rcx
    db29:	48 0f 42 ce          	cmovb  %rsi,%rcx
    db2d:	4c 8d 51 10          	lea    0x10(%rcx),%r10
    db31:	4d 85 c0             	test   %r8,%r8
    db34:	0f 84 86 02 00 00    	je     ddc0 <dlmalloc+0xe00>
    db3a:	48 f7 df             	neg    %rdi
    db3d:	4c 89 c8             	mov    %r9,%rax
    db40:	83 e7 0f             	and    $0xf,%edi
    db43:	4c 8d 04 3b          	lea    (%rbx,%rdi,1),%r8
    db47:	48 29 f8             	sub    %rdi,%rax
    db4a:	48 89 05 ff ce 01 00 	mov    %rax,0x1ceff(%rip)        # 2aa50 <_gm_+0x10>
    db51:	48 83 c8 01          	or     $0x1,%rax
    db55:	f3 0f 6f 15 5b d2 01 	movdqu 0x1d25b(%rip),%xmm2        # 2adb8 <_gm_+0x378>
    db5c:	00 
    db5d:	4c 89 05 04 cf 01 00 	mov    %r8,0x1cf04(%rip)        # 2aa68 <_gm_+0x28>
    db64:	49 89 40 08          	mov    %rax,0x8(%r8)
    db68:	48 8b 05 b1 d2 01 00 	mov    0x1d2b1(%rip),%rax        # 2ae20 <mparams+0x20>
    db6f:	4a c7 44 0b 08 50 00 	movq   $0x50,0x8(%rbx,%r9,1)
    db76:	00 00 
    db78:	48 89 05 f1 ce 01 00 	mov    %rax,0x1cef1(%rip)        # 2aa70 <_gm_+0x30>
    db7f:	48 8b 05 7a d2 01 00 	mov    0x1d27a(%rip),%rax        # 2ae00 <mparams>
    db86:	0f 11 51 10          	movups %xmm2,0x10(%rcx)
    db8a:	f3 0f 6f 1d 36 d2 01 	movdqu 0x1d236(%rip),%xmm3        # 2adc8 <_gm_+0x388>
    db91:	00 
    db92:	4c 31 e8             	xor    %r13,%rax
    db95:	48 c7 41 08 33 00 00 	movq   $0x33,0x8(%rcx)
    db9c:	00 
    db9d:	48 89 41 30          	mov    %rax,0x30(%rcx)
    dba1:	48 8d 41 38          	lea    0x38(%rcx),%rax
    dba5:	48 89 c7             	mov    %rax,%rdi
    dba8:	48 8d 41 40          	lea    0x40(%rcx),%rax
    dbac:	0f 11 59 20          	movups %xmm3,0x20(%rcx)
    dbb0:	48 f7 d7             	not    %rdi
    dbb3:	48 89 1d fe d1 01 00 	mov    %rbx,0x1d1fe(%rip)        # 2adb8 <_gm_+0x378>
    dbba:	48 01 d7             	add    %rdx,%rdi
    dbbd:	4c 89 3d fc d1 01 00 	mov    %r15,0x1d1fc(%rip)        # 2adc0 <_gm_+0x380>
    dbc4:	48 c1 ef 03          	shr    $0x3,%rdi
    dbc8:	4c 89 15 f9 d1 01 00 	mov    %r10,0x1d1f9(%rip)        # 2adc8 <_gm_+0x388>
    dbcf:	c7 05 f7 d1 01 00 00 	movl   $0x0,0x1d1f7(%rip)        # 2add0 <_gm_+0x390>
    dbd6:	00 00 00 
    dbd9:	83 e7 01             	and    $0x1,%edi
    dbdc:	48 c7 41 38 0b 00 00 	movq   $0xb,0x38(%rcx)
    dbe3:	00 
    dbe4:	48 39 d0             	cmp    %rdx,%rax
    dbe7:	73 2f                	jae    dc18 <dlmalloc+0xc58>
    dbe9:	48 85 ff             	test   %rdi,%rdi
    dbec:	74 12                	je     dc00 <dlmalloc+0xc40>
    dbee:	48 c7 00 0b 00 00 00 	movq   $0xb,(%rax)
    dbf5:	48 8d 41 48          	lea    0x48(%rcx),%rax
    dbf9:	48 39 d0             	cmp    %rdx,%rax
    dbfc:	73 1a                	jae    dc18 <dlmalloc+0xc58>
    dbfe:	66 90                	xchg   %ax,%ax
    dc00:	48 c7 00 0b 00 00 00 	movq   $0xb,(%rax)
    dc07:	48 83 c0 10          	add    $0x10,%rax
    dc0b:	48 c7 40 f8 0b 00 00 	movq   $0xb,-0x8(%rax)
    dc12:	00 
    dc13:	48 39 d0             	cmp    %rdx,%rax
    dc16:	72 e8                	jb     dc00 <dlmalloc+0xc40>
    dc18:	48 39 ce             	cmp    %rcx,%rsi
    dc1b:	0f 84 5f 02 00 00    	je     de80 <dlmalloc+0xec0>
    dc21:	48 89 ca             	mov    %rcx,%rdx
    dc24:	48 83 61 08 fe       	andq   $0xfffffffffffffffe,0x8(%rcx)
    dc29:	48 29 f2             	sub    %rsi,%rdx
    dc2c:	48 89 d0             	mov    %rdx,%rax
    dc2f:	48 83 c8 01          	or     $0x1,%rax
    dc33:	48 89 46 08          	mov    %rax,0x8(%rsi)
    dc37:	48 89 11             	mov    %rdx,(%rcx)
    dc3a:	48 89 d1             	mov    %rdx,%rcx
    dc3d:	48 c1 e9 03          	shr    $0x3,%rcx
    dc41:	48 81 fa ff 00 00 00 	cmp    $0xff,%rdx
    dc48:	0f 87 92 01 00 00    	ja     dde0 <dlmalloc+0xe20>
    dc4e:	8d 44 09 09          	lea    0x9(%rcx,%rcx,1),%eax
    dc52:	8b 3d e8 cd 01 00    	mov    0x1cde8(%rip),%edi        # 2aa40 <_gm_>
    dc58:	49 8d 54 c5 00       	lea    0x0(%r13,%rax,8),%rdx
    dc5d:	b8 01 00 00 00       	mov    $0x1,%eax
    dc62:	d3 e0                	shl    %cl,%eax
    dc64:	85 c7                	test   %eax,%edi
    dc66:	0f 85 a3 f9 ff ff    	jne    d60f <dlmalloc+0x64f>
    dc6c:	09 c7                	or     %eax,%edi
    dc6e:	48 89 d0             	mov    %rdx,%rax
    dc71:	89 3d c9 cd 01 00    	mov    %edi,0x1cdc9(%rip)        # 2aa40 <_gm_>
    dc77:	48 89 72 10          	mov    %rsi,0x10(%rdx)
    dc7b:	48 89 70 18          	mov    %rsi,0x18(%rax)
    dc7f:	48 89 56 18          	mov    %rdx,0x18(%rsi)
    dc83:	48 89 46 10          	mov    %rax,0x10(%rsi)
    dc87:	48 8b 05 c2 cd 01 00 	mov    0x1cdc2(%rip),%rax        # 2aa50 <_gm_+0x10>
    dc8e:	49 39 c4             	cmp    %rax,%r12
    dc91:	0f 83 fb fc ff ff    	jae    d992 <dlmalloc+0x9d2>
    dc97:	48 8b 1d ca cd 01 00 	mov    0x1cdca(%rip),%rbx        # 2aa68 <_gm_+0x28>
    dc9e:	4c 29 e0             	sub    %r12,%rax
    dca1:	4c 33 2d 58 d1 01 00 	xor    0x1d158(%rip),%r13        # 2ae00 <mparams>
    dca8:	48 89 05 a1 cd 01 00 	mov    %rax,0x1cda1(%rip)        # 2aa50 <_gm_+0x10>
    dcaf:	48 83 c8 01          	or     $0x1,%rax
    dcb3:	4a 8d 14 23          	lea    (%rbx,%r12,1),%rdx
    dcb7:	49 83 cc 03          	or     $0x3,%r12
    dcbb:	48 89 15 a6 cd 01 00 	mov    %rdx,0x1cda6(%rip)        # 2aa68 <_gm_+0x28>
    dcc2:	48 89 42 08          	mov    %rax,0x8(%rdx)
    dcc6:	4c 89 63 08          	mov    %r12,0x8(%rbx)
    dcca:	4c 89 2a             	mov    %r13,(%rdx)
    dccd:	e9 20 f5 ff ff       	jmp    d1f2 <dlmalloc+0x232>
    dcd2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    dcd8:	8b 02                	mov    (%rdx),%eax
    dcda:	85 c0                	test   %eax,%eax
    dcdc:	75 fa                	jne    dcd8 <dlmalloc+0xd18>
    dcde:	89 f0                	mov    %esi,%eax
    dce0:	87 05 4a d1 01 00    	xchg   %eax,0x1d14a(%rip)        # 2ae30 <malloc_global_mutex>
    dce6:	85 c0                	test   %eax,%eax
    dce8:	75 ee                	jne    dcd8 <dlmalloc+0xd18>
    dcea:	e9 d8 fc ff ff       	jmp    d9c7 <dlmalloc+0xa07>
    dcef:	90                   	nop
    dcf0:	48 8b 05 61 cd 01 00 	mov    0x1cd61(%rip),%rax        # 2aa58 <_gm_+0x18>
    dcf7:	48 85 c0             	test   %rax,%rax
    dcfa:	74 05                	je     dd01 <dlmalloc+0xd41>
    dcfc:	48 39 c3             	cmp    %rax,%rbx
    dcff:	73 07                	jae    dd08 <dlmalloc+0xd48>
    dd01:	48 89 1d 50 cd 01 00 	mov    %rbx,0x1cd50(%rip)        # 2aa58 <_gm_+0x18>
    dd08:	48 8b 05 f1 d0 01 00 	mov    0x1d0f1(%rip),%rax        # 2ae00 <mparams>
    dd0f:	48 89 1d a2 d0 01 00 	mov    %rbx,0x1d0a2(%rip)        # 2adb8 <_gm_+0x378>
    dd16:	4c 89 3d a3 d0 01 00 	mov    %r15,0x1d0a3(%rip)        # 2adc0 <_gm_+0x380>
    dd1d:	c7 05 a9 d0 01 00 00 	movl   $0x0,0x1d0a9(%rip)        # 2add0 <_gm_+0x390>
    dd24:	00 00 00 
    dd27:	48 c7 05 46 cd 01 00 	movq   $0xffffffffffffffff,0x1cd46(%rip)        # 2aa78 <_gm_+0x38>
    dd2e:	ff ff ff ff 
    dd32:	48 89 05 47 cd 01 00 	mov    %rax,0x1cd47(%rip)        # 2aa80 <_gm_+0x40>
    dd39:	48 8d 05 48 cd 01 00 	lea    0x1cd48(%rip),%rax        # 2aa88 <_gm_+0x48>
    dd40:	48 8d 90 00 02 00 00 	lea    0x200(%rax),%rdx
    dd47:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    dd4e:	00 00 
    dd50:	66 48 0f 6e c0       	movq   %rax,%xmm0
    dd55:	48 83 c0 10          	add    $0x10,%rax
    dd59:	66 0f 6c c0          	punpcklqdq %xmm0,%xmm0
    dd5d:	0f 11 00             	movups %xmm0,(%rax)
    dd60:	48 39 d0             	cmp    %rdx,%rax
    dd63:	75 eb                	jne    dd50 <dlmalloc+0xd90>
    dd65:	49 83 ef 50          	sub    $0x50,%r15
    dd69:	48 8d 53 10          	lea    0x10(%rbx),%rdx
    dd6d:	f6 c3 0f             	test   $0xf,%bl
    dd70:	0f 84 aa 02 00 00    	je     e020 <dlmalloc+0x1060>
    dd76:	48 f7 da             	neg    %rdx
    dd79:	4c 89 f8             	mov    %r15,%rax
    dd7c:	83 e2 0f             	and    $0xf,%edx
    dd7f:	48 8d 0c 13          	lea    (%rbx,%rdx,1),%rcx
    dd83:	48 29 d0             	sub    %rdx,%rax
    dd86:	48 89 c2             	mov    %rax,%rdx
    dd89:	48 89 0d d8 cc 01 00 	mov    %rcx,0x1ccd8(%rip)        # 2aa68 <_gm_+0x28>
    dd90:	48 83 ca 01          	or     $0x1,%rdx
    dd94:	48 89 05 b5 cc 01 00 	mov    %rax,0x1ccb5(%rip)        # 2aa50 <_gm_+0x10>
    dd9b:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    dd9f:	48 8b 15 7a d0 01 00 	mov    0x1d07a(%rip),%rdx        # 2ae20 <mparams+0x20>
    dda6:	4a c7 44 3b 08 50 00 	movq   $0x50,0x8(%rbx,%r15,1)
    ddad:	00 00 
    ddaf:	48 89 15 ba cc 01 00 	mov    %rdx,0x1ccba(%rip)        # 2aa70 <_gm_+0x30>
    ddb6:	e9 d3 fe ff ff       	jmp    dc8e <dlmalloc+0xcce>
    ddbb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    ddc0:	4c 89 c8             	mov    %r9,%rax
    ddc3:	49 89 d8             	mov    %rbx,%r8
    ddc6:	e9 7f fd ff ff       	jmp    db4a <dlmalloc+0xb8a>
    ddcb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    ddd0:	48 83 ce 03          	or     $0x3,%rsi
    ddd4:	e9 b9 f5 ff ff       	jmp    d392 <dlmalloc+0x3d2>
    ddd9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    dde0:	48 89 d0             	mov    %rdx,%rax
    dde3:	48 c1 e8 08          	shr    $0x8,%rax
    dde7:	89 c1                	mov    %eax,%ecx
    dde9:	85 c0                	test   %eax,%eax
    ddeb:	0f 84 60 03 00 00    	je     e151 <dlmalloc+0x1191>
    ddf1:	3d ff ff 00 00       	cmp    $0xffff,%eax
    ddf6:	0f 87 ad 05 00 00    	ja     e3a9 <dlmalloc+0x13e9>
    ddfc:	0f bd c1             	bsr    %ecx,%eax
    ddff:	b9 26 00 00 00       	mov    $0x26,%ecx
    de04:	48 89 d3             	mov    %rdx,%rbx
    de07:	bf 1f 00 00 00       	mov    $0x1f,%edi
    de0c:	83 f0 1f             	xor    $0x1f,%eax
    de0f:	29 c1                	sub    %eax,%ecx
    de11:	29 c7                	sub    %eax,%edi
    de13:	48 d3 eb             	shr    %cl,%rbx
    de16:	48 89 d9             	mov    %rbx,%rcx
    de19:	83 e1 01             	and    $0x1,%ecx
    de1c:	8d 0c 79             	lea    (%rcx,%rdi,2),%ecx
    de1f:	bf 01 00 00 00       	mov    $0x1,%edi
    de24:	44 8d 41 4b          	lea    0x4b(%rcx),%r8d
    de28:	d3 e7                	shl    %cl,%edi
    de2a:	49 c1 e0 03          	shl    $0x3,%r8
    de2e:	8b 05 10 cc 01 00    	mov    0x1cc10(%rip),%eax        # 2aa44 <_gm_+0x4>
    de34:	66 48 0f 6e ce       	movq   %rsi,%xmm1
    de39:	66 0f ef c0          	pxor   %xmm0,%xmm0
    de3d:	89 4e 38             	mov    %ecx,0x38(%rsi)
    de40:	66 0f 6c c9          	punpcklqdq %xmm1,%xmm1
    de44:	0f 11 46 20          	movups %xmm0,0x20(%rsi)
    de48:	85 f8                	test   %edi,%eax
    de4a:	0f 85 11 03 00 00    	jne    e161 <dlmalloc+0x11a1>
    de50:	09 f8                	or     %edi,%eax
    de52:	4d 01 e8             	add    %r13,%r8
    de55:	49 89 b4 cd 58 02 00 	mov    %rsi,0x258(%r13,%rcx,8)
    de5c:	00 
    de5d:	89 05 e1 cb 01 00    	mov    %eax,0x1cbe1(%rip)        # 2aa44 <_gm_+0x4>
    de63:	48 8b 05 e6 cb 01 00 	mov    0x1cbe6(%rip),%rax        # 2aa50 <_gm_+0x10>
    de6a:	4c 89 46 30          	mov    %r8,0x30(%rsi)
    de6e:	0f 11 4e 10          	movups %xmm1,0x10(%rsi)
    de72:	e9 17 fe ff ff       	jmp    dc8e <dlmalloc+0xcce>
    de77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    de7e:	00 00 
    de80:	48 8b 05 c9 cb 01 00 	mov    0x1cbc9(%rip),%rax        # 2aa50 <_gm_+0x10>
    de87:	e9 02 fe ff ff       	jmp    dc8e <dlmalloc+0xcce>
    de8c:	0f 1f 40 00          	nopl   0x0(%rax)
    de90:	b8 01 00 00 00       	mov    $0x1,%eax
    de95:	87 05 95 cf 01 00    	xchg   %eax,0x1cf95(%rip)        # 2ae30 <malloc_global_mutex>
    de9b:	85 c0                	test   %eax,%eax
    de9d:	0f 85 76 fa ff ff    	jne    d919 <dlmalloc+0x959>
    dea3:	31 ff                	xor    %edi,%edi
    dea5:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    deaa:	e8 31 e6 ff ff       	call   c4e0 <sbrk>
    deaf:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    deb4:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    deb8:	49 89 c6             	mov    %rax,%r14
    debb:	0f 84 b8 fa ff ff    	je     d979 <dlmalloc+0x9b9>
    dec1:	48 8b 15 40 cf 01 00 	mov    0x1cf40(%rip),%rdx        # 2ae08 <mparams+0x8>
    dec8:	49 89 cf             	mov    %rcx,%r15
    decb:	48 8d 42 ff          	lea    -0x1(%rdx),%rax
    decf:	49 85 c6             	test   %rax,%r14
    ded2:	74 0f                	je     dee3 <dlmalloc+0xf23>
    ded4:	4c 01 f0             	add    %r14,%rax
    ded7:	48 f7 da             	neg    %rdx
    deda:	4d 29 f7             	sub    %r14,%r15
    dedd:	48 21 d0             	and    %rdx,%rax
    dee0:	49 01 c7             	add    %rax,%r15
    dee3:	48 8b 05 ae ce 01 00 	mov    0x1ceae(%rip),%rax        # 2ad98 <_gm_+0x358>
    deea:	4d 39 fc             	cmp    %r15,%r12
    deed:	0f 83 86 fa ff ff    	jae    d979 <dlmalloc+0x9b9>
    def3:	48 ba fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rdx
    defa:	ff ff 7f 
    defd:	4c 39 fa             	cmp    %r15,%rdx
    df00:	0f 82 73 fa ff ff    	jb     d979 <dlmalloc+0x9b9>
    df06:	48 8b 15 9b ce 01 00 	mov    0x1ce9b(%rip),%rdx        # 2ada8 <_gm_+0x368>
    df0d:	48 85 d2             	test   %rdx,%rdx
    df10:	74 16                	je     df28 <dlmalloc+0xf68>
    df12:	4a 8d 34 38          	lea    (%rax,%r15,1),%rsi
    df16:	48 39 f0             	cmp    %rsi,%rax
    df19:	0f 83 5a fa ff ff    	jae    d979 <dlmalloc+0x9b9>
    df1f:	48 39 f2             	cmp    %rsi,%rdx
    df22:	0f 82 51 fa ff ff    	jb     d979 <dlmalloc+0x9b9>
    df28:	4c 89 ff             	mov    %r15,%rdi
    df2b:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    df30:	e8 ab e5 ff ff       	call   c4e0 <sbrk>
    df35:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    df3a:	49 39 c6             	cmp    %rax,%r14
    df3d:	48 89 c3             	mov    %rax,%rbx
    df40:	74 3c                	je     df7e <dlmalloc+0xfbe>
    df42:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
    df46:	0f 84 2d fa ff ff    	je     d979 <dlmalloc+0x9b9>
    df4c:	49 8d 44 24 60       	lea    0x60(%r12),%rax
    df51:	49 39 c7             	cmp    %rax,%r15
    df54:	73 28                	jae    df7e <dlmalloc+0xfbe>
    df56:	48 8b 05 b3 ce 01 00 	mov    0x1ceb3(%rip),%rax        # 2ae10 <mparams+0x10>
    df5d:	4d 8d 74 04 5f       	lea    0x5f(%r12,%rax,1),%r14
    df62:	48 f7 d8             	neg    %rax
    df65:	4d 29 fe             	sub    %r15,%r14
    df68:	49 21 c6             	and    %rax,%r14
    df6b:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
    df72:	ff ff 7f 
    df75:	4c 39 f0             	cmp    %r14,%rax
    df78:	0f 83 91 08 00 00    	jae    e80f <dlmalloc+0x184f>
    df7e:	c7 05 a8 ce 01 00 00 	movl   $0x0,0x1cea8(%rip)        # 2ae30 <malloc_global_mutex>
    df85:	00 00 00 
    df88:	e9 83 fa ff ff       	jmp    da10 <dlmalloc+0xa50>
    df8d:	0f 1f 00             	nopl   (%rax)
    df90:	44 0f bd d0          	bsr    %eax,%r10d
    df94:	b9 26 00 00 00       	mov    $0x26,%ecx
    df99:	4c 89 e0             	mov    %r12,%rax
    df9c:	ba 1f 00 00 00       	mov    $0x1f,%edx
    dfa1:	41 83 f2 1f          	xor    $0x1f,%r10d
    dfa5:	44 29 d1             	sub    %r10d,%ecx
    dfa8:	44 29 d2             	sub    %r10d,%edx
    dfab:	48 d3 e8             	shr    %cl,%rax
    dfae:	83 e0 01             	and    $0x1,%eax
    dfb1:	8d 04 50             	lea    (%rax,%rdx,2),%eax
    dfb4:	49 8b 94 c5 58 02 00 	mov    0x258(%r13,%rax,8),%rdx
    dfbb:	00 
    dfbc:	49 89 c2             	mov    %rax,%r10
    dfbf:	48 85 d2             	test   %rdx,%rdx
    dfc2:	0f 84 72 f8 ff ff    	je     d83a <dlmalloc+0x87a>
    dfc8:	83 f8 1f             	cmp    $0x1f,%eax
    dfcb:	0f 84 d0 09 00 00    	je     e9a1 <dlmalloc+0x19e1>
    dfd1:	d1 e8                	shr    %eax
    dfd3:	b9 39 00 00 00       	mov    $0x39,%ecx
    dfd8:	29 c1                	sub    %eax,%ecx
    dfda:	e9 13 f4 ff ff       	jmp    d3f2 <dlmalloc+0x432>
    dfdf:	48 89 d3             	mov    %rdx,%rbx
    dfe2:	31 ff                	xor    %edi,%edi
    dfe4:	48 89 d1             	mov    %rdx,%rcx
    dfe7:	e9 77 f4 ff ff       	jmp    d463 <dlmalloc+0x4a3>
    dfec:	4c 89 ff             	mov    %r15,%rdi
    dfef:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    dff4:	e8 e7 e4 ff ff       	call   c4e0 <sbrk>
    dff9:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    dffe:	48 89 c3             	mov    %rax,%rbx
    e001:	49 8b 46 08          	mov    0x8(%r14),%rax
    e005:	49 03 06             	add    (%r14),%rax
    e008:	48 39 c3             	cmp    %rax,%rbx
    e00b:	0f 85 31 ff ff ff    	jne    df42 <dlmalloc+0xf82>
    e011:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
    e015:	0f 85 63 ff ff ff    	jne    df7e <dlmalloc+0xfbe>
    e01b:	e9 59 f9 ff ff       	jmp    d979 <dlmalloc+0x9b9>
    e020:	4c 89 f8             	mov    %r15,%rax
    e023:	48 89 d9             	mov    %rbx,%rcx
    e026:	e9 5b fd ff ff       	jmp    dd86 <dlmalloc+0xdc6>
    e02b:	83 c9 03             	or     $0x3,%ecx
    e02e:	89 ce                	mov    %ecx,%esi
    e030:	48 89 73 08          	mov    %rsi,0x8(%rbx)
    e034:	48 89 38             	mov    %rdi,(%rax)
    e037:	48 83 48 08 01       	orq    $0x1,0x8(%rax)
    e03c:	e9 b1 f1 ff ff       	jmp    d1f2 <dlmalloc+0x232>
    e041:	b8 01 00 00 00       	mov    $0x1,%eax
    e046:	87 05 e4 cd 01 00    	xchg   %eax,0x1cde4(%rip)        # 2ae30 <malloc_global_mutex>
    e04c:	85 c0                	test   %eax,%eax
    e04e:	0f 84 f7 f8 ff ff    	je     d94b <dlmalloc+0x98b>
    e054:	e9 c3 f8 ff ff       	jmp    d91c <dlmalloc+0x95c>
    e059:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    e060:	49 89 d8             	mov    %rbx,%r8
    e063:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
    e067:	41 83 e0 0f          	and    $0xf,%r8d
    e06b:	e9 5b fa ff ff       	jmp    dacb <dlmalloc+0xb0b>
    e070:	4c 01 78 08          	add    %r15,0x8(%rax)
    e074:	49 89 d2             	mov    %rdx,%r10
    e077:	48 89 18             	mov    %rbx,(%rax)
    e07a:	4d 85 c0             	test   %r8,%r8
    e07d:	74 09                	je     e088 <dlmalloc+0x10c8>
    e07f:	48 f7 df             	neg    %rdi
    e082:	83 e7 0f             	and    $0xf,%edi
    e085:	48 01 fb             	add    %rdi,%rbx
    e088:	48 8d 42 10          	lea    0x10(%rdx),%rax
    e08c:	f6 c2 0f             	test   $0xf,%dl
    e08f:	74 0a                	je     e09b <dlmalloc+0x10db>
    e091:	48 f7 d8             	neg    %rax
    e094:	83 e0 0f             	and    $0xf,%eax
    e097:	4c 8d 14 02          	lea    (%rdx,%rax,1),%r10
    e09b:	48 8b 0d 5e cd 01 00 	mov    0x1cd5e(%rip),%rcx        # 2ae00 <mparams>
    e0a2:	4c 89 d0             	mov    %r10,%rax
    e0a5:	4a 8d 14 23          	lea    (%rbx,%r12,1),%rdx
    e0a9:	48 29 d8             	sub    %rbx,%rax
    e0ac:	4c 29 e0             	sub    %r12,%rax
    e0af:	4c 31 e9             	xor    %r13,%rcx
    e0b2:	49 83 cc 03          	or     $0x3,%r12
    e0b6:	4c 89 63 08          	mov    %r12,0x8(%rbx)
    e0ba:	48 89 0a             	mov    %rcx,(%rdx)
    e0bd:	4c 39 d6             	cmp    %r10,%rsi
    e0c0:	0f 84 38 04 00 00    	je     e4fe <dlmalloc+0x153e>
    e0c6:	4c 39 15 93 c9 01 00 	cmp    %r10,0x1c993(%rip)        # 2aa60 <_gm_+0x20>
    e0cd:	0f 84 49 05 00 00    	je     e61c <dlmalloc+0x165c>
    e0d3:	49 8b 7a 08          	mov    0x8(%r10),%rdi
    e0d7:	4c 89 d1             	mov    %r10,%rcx
    e0da:	48 89 fe             	mov    %rdi,%rsi
    e0dd:	83 e6 03             	and    $0x3,%esi
    e0e0:	48 83 fe 01          	cmp    $0x1,%rsi
    e0e4:	0f 84 a2 05 00 00    	je     e68c <dlmalloc+0x16cc>
    e0ea:	48 89 c6             	mov    %rax,%rsi
    e0ed:	48 83 e7 fe          	and    $0xfffffffffffffffe,%rdi
    e0f1:	48 83 ce 01          	or     $0x1,%rsi
    e0f5:	49 89 7a 08          	mov    %rdi,0x8(%r10)
    e0f9:	48 89 72 08          	mov    %rsi,0x8(%rdx)
    e0fd:	48 89 01             	mov    %rax,(%rcx)
    e100:	48 89 c1             	mov    %rax,%rcx
    e103:	48 c1 e9 03          	shr    $0x3,%rcx
    e107:	48 3d ff 00 00 00    	cmp    $0xff,%rax
    e10d:	0f 87 42 04 00 00    	ja     e555 <dlmalloc+0x1595>
    e113:	bf 01 00 00 00       	mov    $0x1,%edi
    e118:	8b 35 22 c9 01 00    	mov    0x1c922(%rip),%esi        # 2aa40 <_gm_>
    e11e:	8d 44 09 09          	lea    0x9(%rcx,%rcx,1),%eax
    e122:	d3 e7                	shl    %cl,%edi
    e124:	49 8d 44 c5 00       	lea    0x0(%r13,%rax,8),%rax
    e129:	85 fe                	test   %edi,%esi
    e12b:	0f 85 08 06 00 00    	jne    e739 <dlmalloc+0x1779>
    e131:	09 fe                	or     %edi,%esi
    e133:	48 89 c1             	mov    %rax,%rcx
    e136:	89 35 04 c9 01 00    	mov    %esi,0x1c904(%rip)        # 2aa40 <_gm_>
    e13c:	48 89 50 10          	mov    %rdx,0x10(%rax)
    e140:	48 89 51 18          	mov    %rdx,0x18(%rcx)
    e144:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
    e148:	48 89 42 18          	mov    %rax,0x18(%rdx)
    e14c:	e9 a1 f0 ff ff       	jmp    d1f2 <dlmalloc+0x232>
    e151:	bf 01 00 00 00       	mov    $0x1,%edi
    e156:	41 b8 58 02 00 00    	mov    $0x258,%r8d
    e15c:	e9 cd fc ff ff       	jmp    de2e <dlmalloc+0xe6e>
    e161:	89 c8                	mov    %ecx,%eax
    e163:	49 89 d0             	mov    %rdx,%r8
    e166:	49 8b bc c5 58 02 00 	mov    0x258(%r13,%rax,8),%rdi
    e16d:	00 
    e16e:	83 f9 1f             	cmp    $0x1f,%ecx
    e171:	74 33                	je     e1a6 <dlmalloc+0x11e6>
    e173:	89 c8                	mov    %ecx,%eax
    e175:	b9 39 00 00 00       	mov    $0x39,%ecx
    e17a:	d1 e8                	shr    %eax
    e17c:	29 c1                	sub    %eax,%ecx
    e17e:	49 d3 e0             	shl    %cl,%r8
    e181:	eb 23                	jmp    e1a6 <dlmalloc+0x11e6>
    e183:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    e188:	4c 89 c0             	mov    %r8,%rax
    e18b:	4d 01 c0             	add    %r8,%r8
    e18e:	48 c1 e8 3f          	shr    $0x3f,%rax
    e192:	48 83 c0 04          	add    $0x4,%rax
    e196:	48 8b 0c c7          	mov    (%rdi,%rax,8),%rcx
    e19a:	48 85 c9             	test   %rcx,%rcx
    e19d:	0f 84 1b 02 00 00    	je     e3be <dlmalloc+0x13fe>
    e1a3:	48 89 cf             	mov    %rcx,%rdi
    e1a6:	48 8b 47 08          	mov    0x8(%rdi),%rax
    e1aa:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    e1ae:	48 39 c2             	cmp    %rax,%rdx
    e1b1:	75 d5                	jne    e188 <dlmalloc+0x11c8>
    e1b3:	48 8b 47 10          	mov    0x10(%rdi),%rax
    e1b7:	48 8b 15 9a c8 01 00 	mov    0x1c89a(%rip),%rdx        # 2aa58 <_gm_+0x18>
    e1be:	66 48 0f 6e e7       	movq   %rdi,%xmm4
    e1c3:	66 48 0f 6e c0       	movq   %rax,%xmm0
    e1c8:	66 0f 6c c4          	punpcklqdq %xmm4,%xmm0
    e1cc:	48 39 d7             	cmp    %rdx,%rdi
    e1cf:	0f 82 4b f4 ff ff    	jb     d620 <dlmalloc+0x660>
    e1d5:	48 39 d0             	cmp    %rdx,%rax
    e1d8:	0f 82 42 f4 ff ff    	jb     d620 <dlmalloc+0x660>
    e1de:	48 89 70 18          	mov    %rsi,0x18(%rax)
    e1e2:	48 8b 05 67 c8 01 00 	mov    0x1c867(%rip),%rax        # 2aa50 <_gm_+0x10>
    e1e9:	48 89 77 10          	mov    %rsi,0x10(%rdi)
    e1ed:	48 c7 46 30 00 00 00 	movq   $0x0,0x30(%rsi)
    e1f4:	00 
    e1f5:	0f 11 46 10          	movups %xmm0,0x10(%rsi)
    e1f9:	e9 90 fa ff ff       	jmp    dc8e <dlmalloc+0xcce>
    e1fe:	48 8b 43 28          	mov    0x28(%rbx),%rax
    e202:	48 8d 53 28          	lea    0x28(%rbx),%rdx
    e206:	48 85 c0             	test   %rax,%rax
    e209:	0f 84 11 03 00 00    	je     e520 <dlmalloc+0x1560>
    e20f:	90                   	nop
    e210:	48 89 d6             	mov    %rdx,%rsi
    e213:	48 89 c1             	mov    %rax,%rcx
    e216:	48 8d 50 28          	lea    0x28(%rax),%rdx
    e21a:	48 8b 40 28          	mov    0x28(%rax),%rax
    e21e:	48 85 c0             	test   %rax,%rax
    e221:	75 ed                	jne    e210 <dlmalloc+0x1250>
    e223:	48 8b 41 20          	mov    0x20(%rcx),%rax
    e227:	48 8d 51 20          	lea    0x20(%rcx),%rdx
    e22b:	48 85 c0             	test   %rax,%rax
    e22e:	75 e0                	jne    e210 <dlmalloc+0x1250>
    e230:	4c 39 de             	cmp    %r11,%rsi
    e233:	0f 82 e7 f3 ff ff    	jb     d620 <dlmalloc+0x660>
    e239:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
    e240:	4d 85 ff             	test   %r15,%r15
    e243:	0f 84 27 f3 ff ff    	je     d570 <dlmalloc+0x5b0>
    e249:	41 8b 46 38          	mov    0x38(%r14),%eax
    e24d:	48 8d 50 4a          	lea    0x4a(%rax),%rdx
    e251:	4d 3b b4 c5 58 02 00 	cmp    0x258(%r13,%rax,8),%r14
    e258:	00 
    e259:	0f 84 9e 04 00 00    	je     e6fd <dlmalloc+0x173d>
    e25f:	4d 39 df             	cmp    %r11,%r15
    e262:	0f 82 b8 f3 ff ff    	jb     d620 <dlmalloc+0x660>
    e268:	49 3b 5f 20          	cmp    0x20(%r15),%rbx
    e26c:	0f 84 cb 05 00 00    	je     e83d <dlmalloc+0x187d>
    e272:	49 89 4f 28          	mov    %rcx,0x28(%r15)
    e276:	49 89 ce             	mov    %rcx,%r14
    e279:	e9 b1 f2 ff ff       	jmp    d52f <dlmalloc+0x56f>
    e27e:	49 8d 04 3c          	lea    (%r12,%rdi,1),%rax
    e282:	48 89 c1             	mov    %rax,%rcx
    e285:	48 01 d8             	add    %rbx,%rax
    e288:	48 83 c9 03          	or     $0x3,%rcx
    e28c:	48 89 4b 08          	mov    %rcx,0x8(%rbx)
    e290:	48 83 48 08 01       	orq    $0x1,0x8(%rax)
    e295:	48 89 10             	mov    %rdx,(%rax)
    e298:	e9 4f f3 ff ff       	jmp    d5ec <dlmalloc+0x62c>
    e29d:	48 89 fa             	mov    %rdi,%rdx
    e2a0:	48 c1 ea 08          	shr    $0x8,%rdx
    e2a4:	89 d0                	mov    %edx,%eax
    e2a6:	85 d2                	test   %edx,%edx
    e2a8:	0f 84 20 02 00 00    	je     e4ce <dlmalloc+0x150e>
    e2ae:	81 fa ff ff 00 00    	cmp    $0xffff,%edx
    e2b4:	0f 87 be 03 00 00    	ja     e678 <dlmalloc+0x16b8>
    e2ba:	0f bd c0             	bsr    %eax,%eax
    e2bd:	b9 26 00 00 00       	mov    $0x26,%ecx
    e2c2:	48 89 fa             	mov    %rdi,%rdx
    e2c5:	83 f0 1f             	xor    $0x1f,%eax
    e2c8:	29 c1                	sub    %eax,%ecx
    e2ca:	48 d3 ea             	shr    %cl,%rdx
    e2cd:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    e2d2:	83 e2 01             	and    $0x1,%edx
    e2d5:	29 c1                	sub    %eax,%ecx
    e2d7:	8d 04 4a             	lea    (%rdx,%rcx,2),%eax
    e2da:	ba 01 00 00 00       	mov    $0x1,%edx
    e2df:	89 c1                	mov    %eax,%ecx
    e2e1:	8d 70 4b             	lea    0x4b(%rax),%esi
    e2e4:	d3 e2                	shl    %cl,%edx
    e2e6:	48 c1 e6 03          	shl    $0x3,%rsi
    e2ea:	89 d1                	mov    %edx,%ecx
    e2ec:	8b 15 52 c7 01 00    	mov    0x1c752(%rip),%edx        # 2aa44 <_gm_+0x4>
    e2f2:	66 49 0f 6e ca       	movq   %r10,%xmm1
    e2f7:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e2fb:	41 89 42 38          	mov    %eax,0x38(%r10)
    e2ff:	66 0f 6c c9          	punpcklqdq %xmm1,%xmm1
    e303:	41 0f 11 42 20       	movups %xmm0,0x20(%r10)
    e308:	85 ca                	test   %ecx,%edx
    e30a:	0f 84 db 02 00 00    	je     e5eb <dlmalloc+0x162b>
    e310:	89 c2                	mov    %eax,%edx
    e312:	48 89 fe             	mov    %rdi,%rsi
    e315:	49 8b 94 d5 58 02 00 	mov    0x258(%r13,%rdx,8),%rdx
    e31c:	00 
    e31d:	83 f8 1f             	cmp    $0x1f,%eax
    e320:	74 2c                	je     e34e <dlmalloc+0x138e>
    e322:	d1 e8                	shr    %eax
    e324:	b9 39 00 00 00       	mov    $0x39,%ecx
    e329:	29 c1                	sub    %eax,%ecx
    e32b:	48 d3 e6             	shl    %cl,%rsi
    e32e:	eb 1e                	jmp    e34e <dlmalloc+0x138e>
    e330:	48 89 f0             	mov    %rsi,%rax
    e333:	48 01 f6             	add    %rsi,%rsi
    e336:	48 c1 e8 3f          	shr    $0x3f,%rax
    e33a:	48 83 c0 04          	add    $0x4,%rax
    e33e:	48 8b 0c c2          	mov    (%rdx,%rax,8),%rcx
    e342:	48 85 c9             	test   %rcx,%rcx
    e345:	0f 84 fa 02 00 00    	je     e645 <dlmalloc+0x1685>
    e34b:	48 89 ca             	mov    %rcx,%rdx
    e34e:	48 8b 42 08          	mov    0x8(%rdx),%rax
    e352:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    e356:	48 39 f8             	cmp    %rdi,%rax
    e359:	75 d5                	jne    e330 <dlmalloc+0x1370>
    e35b:	48 8b 42 10          	mov    0x10(%rdx),%rax
    e35f:	66 48 0f 6e ea       	movq   %rdx,%xmm5
    e364:	66 48 0f 6e c0       	movq   %rax,%xmm0
    e369:	66 0f 6c c5          	punpcklqdq %xmm5,%xmm0
    e36d:	4c 39 da             	cmp    %r11,%rdx
    e370:	0f 82 aa f2 ff ff    	jb     d620 <dlmalloc+0x660>
    e376:	4c 39 d8             	cmp    %r11,%rax
    e379:	0f 82 a1 f2 ff ff    	jb     d620 <dlmalloc+0x660>
    e37f:	4c 89 50 18          	mov    %r10,0x18(%rax)
    e383:	4c 89 52 10          	mov    %r10,0x10(%rdx)
    e387:	49 c7 42 30 00 00 00 	movq   $0x0,0x30(%r10)
    e38e:	00 
    e38f:	41 0f 11 42 10       	movups %xmm0,0x10(%r10)
    e394:	e9 53 f2 ff ff       	jmp    d5ec <dlmalloc+0x62c>
    e399:	09 fe                	or     %edi,%esi
    e39b:	4c 89 c1             	mov    %r8,%rcx
    e39e:	89 35 9c c6 01 00    	mov    %esi,0x1c69c(%rip)        # 2aa40 <_gm_>
    e3a4:	e9 58 ef ff ff       	jmp    d301 <dlmalloc+0x341>
    e3a9:	bf 00 00 00 80       	mov    $0x80000000,%edi
    e3ae:	41 b8 50 03 00 00    	mov    $0x350,%r8d
    e3b4:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    e3b9:	e9 70 fa ff ff       	jmp    de2e <dlmalloc+0xe6e>
    e3be:	48 8d 14 c7          	lea    (%rdi,%rax,8),%rdx
    e3c2:	48 3b 15 8f c6 01 00 	cmp    0x1c68f(%rip),%rdx        # 2aa58 <_gm_+0x18>
    e3c9:	0f 82 51 f2 ff ff    	jb     d620 <dlmalloc+0x660>
    e3cf:	48 89 34 c7          	mov    %rsi,(%rdi,%rax,8)
    e3d3:	48 8b 05 76 c6 01 00 	mov    0x1c676(%rip),%rax        # 2aa50 <_gm_+0x10>
    e3da:	48 89 7e 30          	mov    %rdi,0x30(%rsi)
    e3de:	0f 11 4e 10          	movups %xmm1,0x10(%rsi)
    e3e2:	e9 a7 f8 ff ff       	jmp    dc8e <dlmalloc+0xcce>
    e3e7:	48 8b 43 28          	mov    0x28(%rbx),%rax
    e3eb:	48 8d 4b 28          	lea    0x28(%rbx),%rcx
    e3ef:	48 85 c0             	test   %rax,%rax
    e3f2:	0f 84 f8 03 00 00    	je     e7f0 <dlmalloc+0x1830>
    e3f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    e3ff:	00 
    e400:	49 89 c9             	mov    %rcx,%r9
    e403:	49 89 c0             	mov    %rax,%r8
    e406:	48 8d 48 28          	lea    0x28(%rax),%rcx
    e40a:	48 8b 40 28          	mov    0x28(%rax),%rax
    e40e:	48 85 c0             	test   %rax,%rax
    e411:	75 ed                	jne    e400 <dlmalloc+0x1440>
    e413:	49 8b 40 20          	mov    0x20(%r8),%rax
    e417:	49 8d 48 20          	lea    0x20(%r8),%rcx
    e41b:	48 85 c0             	test   %rax,%rax
    e41e:	75 e0                	jne    e400 <dlmalloc+0x1440>
    e420:	4d 39 d9             	cmp    %r11,%r9
    e423:	0f 82 f7 f1 ff ff    	jb     d620 <dlmalloc+0x660>
    e429:	49 c7 01 00 00 00 00 	movq   $0x0,(%r9)
    e430:	4d 85 f6             	test   %r14,%r14
    e433:	0f 84 17 f3 ff ff    	je     d750 <dlmalloc+0x790>
    e439:	8b 43 38             	mov    0x38(%rbx),%eax
    e43c:	48 8d 48 4a          	lea    0x4a(%rax),%rcx
    e440:	49 3b 9c c5 58 02 00 	cmp    0x258(%r13,%rax,8),%rbx
    e447:	00 
    e448:	0f 84 0a 05 00 00    	je     e958 <dlmalloc+0x1998>
    e44e:	4d 39 de             	cmp    %r11,%r14
    e451:	0f 82 c9 f1 ff ff    	jb     d620 <dlmalloc+0x660>
    e457:	49 3b 5e 20          	cmp    0x20(%r14),%rbx
    e45b:	0f 84 37 05 00 00    	je     e998 <dlmalloc+0x19d8>
    e461:	4d 89 46 28          	mov    %r8,0x28(%r14)
    e465:	e9 a5 f2 ff ff       	jmp    d70f <dlmalloc+0x74f>
    e46a:	4c 01 f9             	add    %r15,%rcx
    e46d:	4c 03 3d dc c5 01 00 	add    0x1c5dc(%rip),%r15        # 2aa50 <_gm_+0x10>
    e474:	48 89 48 08          	mov    %rcx,0x8(%rax)
    e478:	48 8d 46 10          	lea    0x10(%rsi),%rax
    e47c:	40 f6 c6 0f          	test   $0xf,%sil
    e480:	0f 84 e7 01 00 00    	je     e66d <dlmalloc+0x16ad>
    e486:	48 f7 d8             	neg    %rax
    e489:	83 e0 0f             	and    $0xf,%eax
    e48c:	48 89 c2             	mov    %rax,%rdx
    e48f:	48 8d 0c 06          	lea    (%rsi,%rax,1),%rcx
    e493:	4c 89 f8             	mov    %r15,%rax
    e496:	48 29 d0             	sub    %rdx,%rax
    e499:	48 89 c2             	mov    %rax,%rdx
    e49c:	48 89 0d c5 c5 01 00 	mov    %rcx,0x1c5c5(%rip)        # 2aa68 <_gm_+0x28>
    e4a3:	48 83 ca 01          	or     $0x1,%rdx
    e4a7:	48 89 05 a2 c5 01 00 	mov    %rax,0x1c5a2(%rip)        # 2aa50 <_gm_+0x10>
    e4ae:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    e4b2:	48 8b 15 67 c9 01 00 	mov    0x1c967(%rip),%rdx        # 2ae20 <mparams+0x20>
    e4b9:	4a c7 44 3e 08 50 00 	movq   $0x50,0x8(%rsi,%r15,1)
    e4c0:	00 00 
    e4c2:	48 89 15 a7 c5 01 00 	mov    %rdx,0x1c5a7(%rip)        # 2aa70 <_gm_+0x30>
    e4c9:	e9 c0 f7 ff ff       	jmp    dc8e <dlmalloc+0xcce>
    e4ce:	b9 01 00 00 00       	mov    $0x1,%ecx
    e4d3:	be 58 02 00 00       	mov    $0x258,%esi
    e4d8:	e9 0f fe ff ff       	jmp    e2ec <dlmalloc+0x132c>
    e4dd:	4d 89 b4 d5 58 02 00 	mov    %r14,0x258(%r13,%rdx,8)
    e4e4:	00 
    e4e5:	4d 85 f6             	test   %r14,%r14
    e4e8:	0f 85 41 f0 ff ff    	jne    d52f <dlmalloc+0x56f>
    e4ee:	41 0f b3 c1          	btr    %eax,%r9d
    e4f2:	44 89 0d 4b c5 01 00 	mov    %r9d,0x1c54b(%rip)        # 2aa44 <_gm_+0x4>
    e4f9:	e9 72 f0 ff ff       	jmp    d570 <dlmalloc+0x5b0>
    e4fe:	48 03 05 4b c5 01 00 	add    0x1c54b(%rip),%rax        # 2aa50 <_gm_+0x10>
    e505:	48 89 15 5c c5 01 00 	mov    %rdx,0x1c55c(%rip)        # 2aa68 <_gm_+0x28>
    e50c:	48 89 05 3d c5 01 00 	mov    %rax,0x1c53d(%rip)        # 2aa50 <_gm_+0x10>
    e513:	48 83 c8 01          	or     $0x1,%rax
    e517:	48 89 42 08          	mov    %rax,0x8(%rdx)
    e51b:	e9 d2 ec ff ff       	jmp    d1f2 <dlmalloc+0x232>
    e520:	48 8b 43 20          	mov    0x20(%rbx),%rax
    e524:	48 85 c0             	test   %rax,%rax
    e527:	0f 84 ec 03 00 00    	je     e919 <dlmalloc+0x1959>
    e52d:	48 8d 53 20          	lea    0x20(%rbx),%rdx
    e531:	e9 da fc ff ff       	jmp    e210 <dlmalloc+0x1250>
    e536:	49 8d 14 3c          	lea    (%r12,%rdi,1),%rdx
    e53a:	48 89 d1             	mov    %rdx,%rcx
    e53d:	48 01 da             	add    %rbx,%rdx
    e540:	48 83 c9 03          	or     $0x3,%rcx
    e544:	48 89 4b 08          	mov    %rcx,0x8(%rbx)
    e548:	48 83 4a 08 01       	orq    $0x1,0x8(%rdx)
    e54d:	48 89 02             	mov    %rax,(%rdx)
    e550:	e9 85 f2 ff ff       	jmp    d7da <dlmalloc+0x81a>
    e555:	48 89 c6             	mov    %rax,%rsi
    e558:	48 c1 ee 08          	shr    $0x8,%rsi
    e55c:	89 f1                	mov    %esi,%ecx
    e55e:	85 f6                	test   %esi,%esi
    e560:	0f 84 7b 02 00 00    	je     e7e1 <dlmalloc+0x1821>
    e566:	81 fe ff ff 00 00    	cmp    $0xffff,%esi
    e56c:	0f 87 12 04 00 00    	ja     e984 <dlmalloc+0x19c4>
    e572:	0f bd c9             	bsr    %ecx,%ecx
    e575:	48 89 c7             	mov    %rax,%rdi
    e578:	89 ce                	mov    %ecx,%esi
    e57a:	b9 26 00 00 00       	mov    $0x26,%ecx
    e57f:	83 f6 1f             	xor    $0x1f,%esi
    e582:	29 f1                	sub    %esi,%ecx
    e584:	48 d3 ef             	shr    %cl,%rdi
    e587:	48 89 f9             	mov    %rdi,%rcx
    e58a:	bf 1f 00 00 00       	mov    $0x1f,%edi
    e58f:	29 f7                	sub    %esi,%edi
    e591:	83 e1 01             	and    $0x1,%ecx
    e594:	8d 0c 79             	lea    (%rcx,%rdi,2),%ecx
    e597:	bf 01 00 00 00       	mov    $0x1,%edi
    e59c:	8d 71 4b             	lea    0x4b(%rcx),%esi
    e59f:	d3 e7                	shl    %cl,%edi
    e5a1:	48 c1 e6 03          	shl    $0x3,%rsi
    e5a5:	44 8b 05 98 c4 01 00 	mov    0x1c498(%rip),%r8d        # 2aa44 <_gm_+0x4>
    e5ac:	66 48 0f 6e c2       	movq   %rdx,%xmm0
    e5b1:	66 0f ef c9          	pxor   %xmm1,%xmm1
    e5b5:	89 4a 38             	mov    %ecx,0x38(%rdx)
    e5b8:	66 0f 6c c0          	punpcklqdq %xmm0,%xmm0
    e5bc:	0f 11 4a 20          	movups %xmm1,0x20(%rdx)
    e5c0:	41 85 f8             	test   %edi,%r8d
    e5c3:	0f 85 86 01 00 00    	jne    e74f <dlmalloc+0x178f>
    e5c9:	41 09 f8             	or     %edi,%r8d
    e5cc:	4c 01 ee             	add    %r13,%rsi
    e5cf:	49 89 94 cd 58 02 00 	mov    %rdx,0x258(%r13,%rcx,8)
    e5d6:	00 
    e5d7:	44 89 05 66 c4 01 00 	mov    %r8d,0x1c466(%rip)        # 2aa44 <_gm_+0x4>
    e5de:	48 89 72 30          	mov    %rsi,0x30(%rdx)
    e5e2:	0f 11 42 10          	movups %xmm0,0x10(%rdx)
    e5e6:	e9 07 ec ff ff       	jmp    d1f2 <dlmalloc+0x232>
    e5eb:	09 ca                	or     %ecx,%edx
    e5ed:	4c 01 ee             	add    %r13,%rsi
    e5f0:	4d 89 94 c5 58 02 00 	mov    %r10,0x258(%r13,%rax,8)
    e5f7:	00 
    e5f8:	89 15 46 c4 01 00    	mov    %edx,0x1c446(%rip)        # 2aa44 <_gm_+0x4>
    e5fe:	49 89 72 30          	mov    %rsi,0x30(%r10)
    e602:	41 0f 11 4a 10       	movups %xmm1,0x10(%r10)
    e607:	e9 e0 ef ff ff       	jmp    d5ec <dlmalloc+0x62c>
    e60c:	09 c6                	or     %eax,%esi
    e60e:	48 89 d0             	mov    %rdx,%rax
    e611:	89 35 29 c4 01 00    	mov    %esi,0x1c429(%rip)        # 2aa40 <_gm_>
    e617:	e9 c0 ef ff ff       	jmp    d5dc <dlmalloc+0x61c>
    e61c:	48 03 05 25 c4 01 00 	add    0x1c425(%rip),%rax        # 2aa48 <_gm_+0x8>
    e623:	48 89 15 36 c4 01 00 	mov    %rdx,0x1c436(%rip)        # 2aa60 <_gm_+0x20>
    e62a:	48 89 c1             	mov    %rax,%rcx
    e62d:	48 89 05 14 c4 01 00 	mov    %rax,0x1c414(%rip)        # 2aa48 <_gm_+0x8>
    e634:	48 83 c9 01          	or     $0x1,%rcx
    e638:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
    e63c:	48 89 04 02          	mov    %rax,(%rdx,%rax,1)
    e640:	e9 ad eb ff ff       	jmp    d1f2 <dlmalloc+0x232>
    e645:	48 8d 0c c2          	lea    (%rdx,%rax,8),%rcx
    e649:	4c 39 d9             	cmp    %r11,%rcx
    e64c:	0f 82 ce ef ff ff    	jb     d620 <dlmalloc+0x660>
    e652:	4c 89 14 c2          	mov    %r10,(%rdx,%rax,8)
    e656:	49 89 52 30          	mov    %rdx,0x30(%r10)
    e65a:	41 0f 11 4a 10       	movups %xmm1,0x10(%r10)
    e65f:	e9 88 ef ff ff       	jmp    d5ec <dlmalloc+0x62c>
    e664:	4d 89 77 20          	mov    %r14,0x20(%r15)
    e668:	e9 bd ee ff ff       	jmp    d52a <dlmalloc+0x56a>
    e66d:	4c 89 f8             	mov    %r15,%rax
    e670:	48 89 f1             	mov    %rsi,%rcx
    e673:	e9 21 fe ff ff       	jmp    e499 <dlmalloc+0x14d9>
    e678:	b9 00 00 00 80       	mov    $0x80000000,%ecx
    e67d:	be 50 03 00 00       	mov    $0x350,%esi
    e682:	b8 1f 00 00 00       	mov    $0x1f,%eax
    e687:	e9 60 fc ff ff       	jmp    e2ec <dlmalloc+0x132c>
    e68c:	49 89 f8             	mov    %rdi,%r8
    e68f:	48 89 f9             	mov    %rdi,%rcx
    e692:	49 8b 72 18          	mov    0x18(%r10),%rsi
    e696:	49 83 e0 f8          	and    $0xfffffffffffffff8,%r8
    e69a:	48 c1 e9 03          	shr    $0x3,%rcx
    e69e:	48 81 ff ff 00 00 00 	cmp    $0xff,%rdi
    e6a5:	0f 87 9b 01 00 00    	ja     e846 <dlmalloc+0x1886>
    e6ab:	44 8d 5c 09 09       	lea    0x9(%rcx,%rcx,1),%r11d
    e6b0:	49 8b 7a 10          	mov    0x10(%r10),%rdi
    e6b4:	4f 8d 5c dd 00       	lea    0x0(%r13,%r11,8),%r11
    e6b9:	4c 39 df             	cmp    %r11,%rdi
    e6bc:	0f 85 80 03 00 00    	jne    ea42 <dlmalloc+0x1a82>
    e6c2:	48 39 f7             	cmp    %rsi,%rdi
    e6c5:	0f 84 65 03 00 00    	je     ea30 <dlmalloc+0x1a70>
    e6cb:	48 3b 35 86 c3 01 00 	cmp    0x1c386(%rip),%rsi        # 2aa58 <_gm_+0x18>
    e6d2:	0f 82 48 ef ff ff    	jb     d620 <dlmalloc+0x660>
    e6d8:	4c 39 56 10          	cmp    %r10,0x10(%rsi)
    e6dc:	0f 85 3e ef ff ff    	jne    d620 <dlmalloc+0x660>
    e6e2:	48 89 77 18          	mov    %rsi,0x18(%rdi)
    e6e6:	48 89 7e 10          	mov    %rdi,0x10(%rsi)
    e6ea:	4d 01 c2             	add    %r8,%r10
    e6ed:	4c 01 c0             	add    %r8,%rax
    e6f0:	49 8b 7a 08          	mov    0x8(%r10),%rdi
    e6f4:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    e6f8:	e9 ed f9 ff ff       	jmp    e0ea <dlmalloc+0x112a>
    e6fd:	49 89 4c d5 08       	mov    %rcx,0x8(%r13,%rdx,8)
    e702:	e9 6f fb ff ff       	jmp    e276 <dlmalloc+0x12b6>
    e707:	4d 89 84 cd 58 02 00 	mov    %r8,0x258(%r13,%rcx,8)
    e70e:	00 
    e70f:	4d 85 c0             	test   %r8,%r8
    e712:	0f 85 f7 ef ff ff    	jne    d70f <dlmalloc+0x74f>
    e718:	41 0f b3 c1          	btr    %eax,%r9d
    e71c:	44 89 0d 21 c3 01 00 	mov    %r9d,0x1c321(%rip)        # 2aa44 <_gm_+0x4>
    e723:	e9 28 f0 ff ff       	jmp    d750 <dlmalloc+0x790>
    e728:	44 09 c2             	or     %r8d,%edx
    e72b:	89 15 0f c3 01 00    	mov    %edx,0x1c30f(%rip)        # 2aa40 <_gm_>
    e731:	4c 89 ca             	mov    %r9,%rdx
    e734:	e9 83 f0 ff ff       	jmp    d7bc <dlmalloc+0x7fc>
    e739:	48 8b 48 10          	mov    0x10(%rax),%rcx
    e73d:	48 3b 0d 14 c3 01 00 	cmp    0x1c314(%rip),%rcx        # 2aa58 <_gm_+0x18>
    e744:	0f 83 f2 f9 ff ff    	jae    e13c <dlmalloc+0x117c>
    e74a:	e9 d1 ee ff ff       	jmp    d620 <dlmalloc+0x660>
    e74f:	89 ce                	mov    %ecx,%esi
    e751:	49 8b b4 f5 58 02 00 	mov    0x258(%r13,%rsi,8),%rsi
    e758:	00 
    e759:	83 f9 1f             	cmp    $0x1f,%ecx
    e75c:	74 0b                	je     e769 <dlmalloc+0x17a9>
    e75e:	d1 e9                	shr    %ecx
    e760:	41 b9 39 00 00 00    	mov    $0x39,%r9d
    e766:	41 29 c9             	sub    %ecx,%r9d
    e769:	48 89 c7             	mov    %rax,%rdi
    e76c:	44 89 c9             	mov    %r9d,%ecx
    e76f:	48 d3 e7             	shl    %cl,%rdi
    e772:	eb 1e                	jmp    e792 <dlmalloc+0x17d2>
    e774:	48 89 f9             	mov    %rdi,%rcx
    e777:	48 01 ff             	add    %rdi,%rdi
    e77a:	48 c1 e9 3f          	shr    $0x3f,%rcx
    e77e:	48 83 c1 04          	add    $0x4,%rcx
    e782:	4c 8b 04 ce          	mov    (%rsi,%rcx,8),%r8
    e786:	4d 85 c0             	test   %r8,%r8
    e789:	0f 84 d3 01 00 00    	je     e962 <dlmalloc+0x19a2>
    e78f:	4c 89 c6             	mov    %r8,%rsi
    e792:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    e796:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    e79a:	48 39 c8             	cmp    %rcx,%rax
    e79d:	75 d5                	jne    e774 <dlmalloc+0x17b4>
    e79f:	48 8b 46 10          	mov    0x10(%rsi),%rax
    e7a3:	48 8b 0d ae c2 01 00 	mov    0x1c2ae(%rip),%rcx        # 2aa58 <_gm_+0x18>
    e7aa:	66 48 0f 6e f6       	movq   %rsi,%xmm6
    e7af:	66 48 0f 6e c0       	movq   %rax,%xmm0
    e7b4:	66 0f 6c c6          	punpcklqdq %xmm6,%xmm0
    e7b8:	48 39 c8             	cmp    %rcx,%rax
    e7bb:	0f 82 5f ee ff ff    	jb     d620 <dlmalloc+0x660>
    e7c1:	48 39 ce             	cmp    %rcx,%rsi
    e7c4:	0f 82 56 ee ff ff    	jb     d620 <dlmalloc+0x660>
    e7ca:	48 89 50 18          	mov    %rdx,0x18(%rax)
    e7ce:	31 c0                	xor    %eax,%eax
    e7d0:	48 89 56 10          	mov    %rdx,0x10(%rsi)
    e7d4:	48 89 42 30          	mov    %rax,0x30(%rdx)
    e7d8:	0f 11 42 10          	movups %xmm0,0x10(%rdx)
    e7dc:	e9 11 ea ff ff       	jmp    d1f2 <dlmalloc+0x232>
    e7e1:	bf 01 00 00 00       	mov    $0x1,%edi
    e7e6:	be 58 02 00 00       	mov    $0x258,%esi
    e7eb:	e9 b5 fd ff ff       	jmp    e5a5 <dlmalloc+0x15e5>
    e7f0:	48 8b 43 20          	mov    0x20(%rbx),%rax
    e7f4:	48 85 c0             	test   %rax,%rax
    e7f7:	0f 84 ac 01 00 00    	je     e9a9 <dlmalloc+0x19e9>
    e7fd:	48 8d 4b 20          	lea    0x20(%rbx),%rcx
    e801:	e9 fa fb ff ff       	jmp    e400 <dlmalloc+0x1440>
    e806:	4d 89 46 20          	mov    %r8,0x20(%r14)
    e80a:	e9 fb ee ff ff       	jmp    d70a <dlmalloc+0x74a>
    e80f:	4c 89 f7             	mov    %r14,%rdi
    e812:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    e817:	e8 c4 dc ff ff       	call   c4e0 <sbrk>
    e81c:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    e821:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    e825:	0f 84 57 02 00 00    	je     ea82 <dlmalloc+0x1ac2>
    e82b:	4d 01 f7             	add    %r14,%r15
    e82e:	c7 05 f8 c5 01 00 00 	movl   $0x0,0x1c5f8(%rip)        # 2ae30 <malloc_global_mutex>
    e835:	00 00 00 
    e838:	e9 d3 f1 ff ff       	jmp    da10 <dlmalloc+0xa50>
    e83d:	49 89 4f 20          	mov    %rcx,0x20(%r15)
    e841:	e9 30 fa ff ff       	jmp    e276 <dlmalloc+0x12b6>
    e846:	4d 8b 62 30          	mov    0x30(%r10),%r12
    e84a:	49 39 f2             	cmp    %rsi,%r10
    e84d:	0f 84 96 01 00 00    	je     e9e9 <dlmalloc+0x1a29>
    e853:	49 8b 4a 10          	mov    0x10(%r10),%rcx
    e857:	48 3b 0d fa c1 01 00 	cmp    0x1c1fa(%rip),%rcx        # 2aa58 <_gm_+0x18>
    e85e:	0f 82 bc ed ff ff    	jb     d620 <dlmalloc+0x660>
    e864:	4c 39 51 18          	cmp    %r10,0x18(%rcx)
    e868:	0f 85 b2 ed ff ff    	jne    d620 <dlmalloc+0x660>
    e86e:	4c 39 56 10          	cmp    %r10,0x10(%rsi)
    e872:	0f 85 a8 ed ff ff    	jne    d620 <dlmalloc+0x660>
    e878:	48 89 71 18          	mov    %rsi,0x18(%rcx)
    e87c:	48 89 4e 10          	mov    %rcx,0x10(%rsi)
    e880:	4d 85 e4             	test   %r12,%r12
    e883:	0f 84 61 fe ff ff    	je     e6ea <dlmalloc+0x172a>
    e889:	41 8b 7a 38          	mov    0x38(%r10),%edi
    e88d:	48 89 f9             	mov    %rdi,%rcx
    e890:	4c 8d 5f 4a          	lea    0x4a(%rdi),%r11
    e894:	4d 39 94 fd 58 02 00 	cmp    %r10,0x258(%r13,%rdi,8)
    e89b:	00 
    e89c:	0f 84 0e 02 00 00    	je     eab0 <dlmalloc+0x1af0>
    e8a2:	4c 3b 25 af c1 01 00 	cmp    0x1c1af(%rip),%r12        # 2aa58 <_gm_+0x18>
    e8a9:	0f 82 71 ed ff ff    	jb     d620 <dlmalloc+0x660>
    e8af:	4d 39 54 24 20       	cmp    %r10,0x20(%r12)
    e8b4:	0f 84 ec 01 00 00    	je     eaa6 <dlmalloc+0x1ae6>
    e8ba:	49 89 74 24 28       	mov    %rsi,0x28(%r12)
    e8bf:	48 85 f6             	test   %rsi,%rsi
    e8c2:	0f 84 22 fe ff ff    	je     e6ea <dlmalloc+0x172a>
    e8c8:	48 8b 3d 89 c1 01 00 	mov    0x1c189(%rip),%rdi        # 2aa58 <_gm_+0x18>
    e8cf:	48 39 fe             	cmp    %rdi,%rsi
    e8d2:	0f 82 48 ed ff ff    	jb     d620 <dlmalloc+0x660>
    e8d8:	49 8b 4a 20          	mov    0x20(%r10),%rcx
    e8dc:	4c 89 66 30          	mov    %r12,0x30(%rsi)
    e8e0:	48 85 c9             	test   %rcx,%rcx
    e8e3:	74 11                	je     e8f6 <dlmalloc+0x1936>
    e8e5:	48 39 f9             	cmp    %rdi,%rcx
    e8e8:	0f 82 32 ed ff ff    	jb     d620 <dlmalloc+0x660>
    e8ee:	48 89 4e 20          	mov    %rcx,0x20(%rsi)
    e8f2:	48 89 71 30          	mov    %rsi,0x30(%rcx)
    e8f6:	49 8b 4a 28          	mov    0x28(%r10),%rcx
    e8fa:	48 85 c9             	test   %rcx,%rcx
    e8fd:	0f 84 e7 fd ff ff    	je     e6ea <dlmalloc+0x172a>
    e903:	48 39 f9             	cmp    %rdi,%rcx
    e906:	0f 82 14 ed ff ff    	jb     d620 <dlmalloc+0x660>
    e90c:	48 89 4e 28          	mov    %rcx,0x28(%rsi)
    e910:	48 89 71 30          	mov    %rsi,0x30(%rcx)
    e914:	e9 d1 fd ff ff       	jmp    e6ea <dlmalloc+0x172a>
    e919:	4d 85 ff             	test   %r15,%r15
    e91c:	0f 84 4e ec ff ff    	je     d570 <dlmalloc+0x5b0>
    e922:	8b 53 38             	mov    0x38(%rbx),%edx
    e925:	48 89 d0             	mov    %rdx,%rax
    e928:	48 8d 4a 4a          	lea    0x4a(%rdx),%rcx
    e92c:	49 3b 9c d5 58 02 00 	cmp    0x258(%r13,%rdx,8),%rbx
    e933:	00 
    e934:	0f 84 a2 01 00 00    	je     eadc <dlmalloc+0x1b1c>
    e93a:	4d 39 df             	cmp    %r11,%r15
    e93d:	0f 82 dd ec ff ff    	jb     d620 <dlmalloc+0x660>
    e943:	4d 39 77 20          	cmp    %r14,0x20(%r15)
    e947:	0f 84 83 01 00 00    	je     ead0 <dlmalloc+0x1b10>
    e94d:	31 f6                	xor    %esi,%esi
    e94f:	49 89 77 28          	mov    %rsi,0x28(%r15)
    e953:	e9 18 ec ff ff       	jmp    d570 <dlmalloc+0x5b0>
    e958:	4d 89 44 cd 08       	mov    %r8,0x8(%r13,%rcx,8)
    e95d:	e9 ad ed ff ff       	jmp    d70f <dlmalloc+0x74f>
    e962:	48 8d 04 ce          	lea    (%rsi,%rcx,8),%rax
    e966:	48 3b 05 eb c0 01 00 	cmp    0x1c0eb(%rip),%rax        # 2aa58 <_gm_+0x18>
    e96d:	0f 82 ad ec ff ff    	jb     d620 <dlmalloc+0x660>
    e973:	48 89 14 ce          	mov    %rdx,(%rsi,%rcx,8)
    e977:	48 89 72 30          	mov    %rsi,0x30(%rdx)
    e97b:	0f 11 42 10          	movups %xmm0,0x10(%rdx)
    e97f:	e9 6e e8 ff ff       	jmp    d1f2 <dlmalloc+0x232>
    e984:	bf 00 00 00 80       	mov    $0x80000000,%edi
    e989:	be 50 03 00 00       	mov    $0x350,%esi
    e98e:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    e993:	e9 0d fc ff ff       	jmp    e5a5 <dlmalloc+0x15e5>
    e998:	4d 89 46 20          	mov    %r8,0x20(%r14)
    e99c:	e9 6e ed ff ff       	jmp    d70f <dlmalloc+0x74f>
    e9a1:	4d 89 e3             	mov    %r12,%r11
    e9a4:	e9 4f ea ff ff       	jmp    d3f8 <dlmalloc+0x438>
    e9a9:	4d 85 f6             	test   %r14,%r14
    e9ac:	0f 84 9e ed ff ff    	je     d750 <dlmalloc+0x790>
    e9b2:	8b 4b 38             	mov    0x38(%rbx),%ecx
    e9b5:	48 89 c8             	mov    %rcx,%rax
    e9b8:	4c 8d 41 4a          	lea    0x4a(%rcx),%r8
    e9bc:	49 3b 9c cd 58 02 00 	cmp    0x258(%r13,%rcx,8),%rbx
    e9c3:	00 
    e9c4:	0f 84 34 01 00 00    	je     eafe <dlmalloc+0x1b3e>
    e9ca:	4d 39 de             	cmp    %r11,%r14
    e9cd:	0f 82 4d ec ff ff    	jb     d620 <dlmalloc+0x660>
    e9d3:	49 3b 5e 20          	cmp    0x20(%r14),%rbx
    e9d7:	0f 84 16 01 00 00    	je     eaf3 <dlmalloc+0x1b33>
    e9dd:	45 31 ff             	xor    %r15d,%r15d
    e9e0:	4d 89 7e 28          	mov    %r15,0x28(%r14)
    e9e4:	e9 67 ed ff ff       	jmp    d750 <dlmalloc+0x790>
    e9e9:	49 8b 72 28          	mov    0x28(%r10),%rsi
    e9ed:	48 85 f6             	test   %rsi,%rsi
    e9f0:	74 7a                	je     ea6c <dlmalloc+0x1aac>
    e9f2:	49 8d 7a 28          	lea    0x28(%r10),%rdi
    e9f6:	48 89 f1             	mov    %rsi,%rcx
    e9f9:	49 89 fb             	mov    %rdi,%r11
    e9fc:	48 89 ce             	mov    %rcx,%rsi
    e9ff:	48 8d 79 28          	lea    0x28(%rcx),%rdi
    ea03:	48 8b 49 28          	mov    0x28(%rcx),%rcx
    ea07:	48 85 c9             	test   %rcx,%rcx
    ea0a:	75 ed                	jne    e9f9 <dlmalloc+0x1a39>
    ea0c:	48 8b 4e 20          	mov    0x20(%rsi),%rcx
    ea10:	48 8d 7e 20          	lea    0x20(%rsi),%rdi
    ea14:	48 85 c9             	test   %rcx,%rcx
    ea17:	75 e0                	jne    e9f9 <dlmalloc+0x1a39>
    ea19:	4c 3b 1d 38 c0 01 00 	cmp    0x1c038(%rip),%r11        # 2aa58 <_gm_+0x18>
    ea20:	0f 82 fa eb ff ff    	jb     d620 <dlmalloc+0x660>
    ea26:	31 c9                	xor    %ecx,%ecx
    ea28:	49 89 0b             	mov    %rcx,(%r11)
    ea2b:	e9 50 fe ff ff       	jmp    e880 <dlmalloc+0x18c0>
    ea30:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    ea35:	d3 c6                	rol    %cl,%esi
    ea37:	21 35 03 c0 01 00    	and    %esi,0x1c003(%rip)        # 2aa40 <_gm_>
    ea3d:	e9 a8 fc ff ff       	jmp    e6ea <dlmalloc+0x172a>
    ea42:	48 3b 3d 0f c0 01 00 	cmp    0x1c00f(%rip),%rdi        # 2aa58 <_gm_+0x18>
    ea49:	0f 82 d1 eb ff ff    	jb     d620 <dlmalloc+0x660>
    ea4f:	4c 39 57 18          	cmp    %r10,0x18(%rdi)
    ea53:	0f 85 c7 eb ff ff    	jne    d620 <dlmalloc+0x660>
    ea59:	48 39 f7             	cmp    %rsi,%rdi
    ea5c:	74 d2                	je     ea30 <dlmalloc+0x1a70>
    ea5e:	49 39 f3             	cmp    %rsi,%r11
    ea61:	0f 84 7b fc ff ff    	je     e6e2 <dlmalloc+0x1722>
    ea67:	e9 5f fc ff ff       	jmp    e6cb <dlmalloc+0x170b>
    ea6c:	49 8b 72 20          	mov    0x20(%r10),%rsi
    ea70:	48 85 f6             	test   %rsi,%rsi
    ea73:	0f 84 07 fe ff ff    	je     e880 <dlmalloc+0x18c0>
    ea79:	49 8d 7a 20          	lea    0x20(%r10),%rdi
    ea7d:	e9 74 ff ff ff       	jmp    e9f6 <dlmalloc+0x1a36>
    ea82:	4c 89 ff             	mov    %r15,%rdi
    ea85:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    ea8a:	48 f7 df             	neg    %rdi
    ea8d:	e8 4e da ff ff       	call   c4e0 <sbrk>
    ea92:	c7 05 94 c3 01 00 00 	movl   $0x0,0x1c394(%rip)        # 2ae30 <malloc_global_mutex>
    ea99:	00 00 00 
    ea9c:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    eaa1:	e9 dd ee ff ff       	jmp    d983 <dlmalloc+0x9c3>
    eaa6:	49 89 74 24 20       	mov    %rsi,0x20(%r12)
    eaab:	e9 0f fe ff ff       	jmp    e8bf <dlmalloc+0x18ff>
    eab0:	4b 89 74 dd 08       	mov    %rsi,0x8(%r13,%r11,8)
    eab5:	48 85 f6             	test   %rsi,%rsi
    eab8:	0f 85 0a fe ff ff    	jne    e8c8 <dlmalloc+0x1908>
    eabe:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    eac3:	d3 c6                	rol    %cl,%esi
    eac5:	21 35 79 bf 01 00    	and    %esi,0x1bf79(%rip)        # 2aa44 <_gm_+0x4>
    eacb:	e9 1a fc ff ff       	jmp    e6ea <dlmalloc+0x172a>
    ead0:	45 31 c9             	xor    %r9d,%r9d
    ead3:	4d 89 4f 20          	mov    %r9,0x20(%r15)
    ead7:	e9 94 ea ff ff       	jmp    d570 <dlmalloc+0x5b0>
    eadc:	45 31 f6             	xor    %r14d,%r14d
    eadf:	4d 89 74 cd 08       	mov    %r14,0x8(%r13,%rcx,8)
    eae4:	e9 05 fa ff ff       	jmp    e4ee <dlmalloc+0x152e>
    eae9:	e8 e2 e3 ff ff       	call   ced0 <init_mparams.isra.0>
    eaee:	e9 86 ed ff ff       	jmp    d879 <dlmalloc+0x8b9>
    eaf3:	31 c0                	xor    %eax,%eax
    eaf5:	49 89 46 20          	mov    %rax,0x20(%r14)
    eaf9:	e9 52 ec ff ff       	jmp    d750 <dlmalloc+0x790>
    eafe:	31 c9                	xor    %ecx,%ecx
    eb00:	4b 89 4c c5 08       	mov    %rcx,0x8(%r13,%r8,8)
    eb05:	e9 0e fc ff ff       	jmp    e718 <dlmalloc+0x1758>
    eb0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000eb10 <internal_memalign.constprop.0>:
    eb10:	41 55                	push   %r13
    eb12:	41 54                	push   %r12
    eb14:	55                   	push   %rbp
    eb15:	53                   	push   %rbx
    eb16:	bb 20 00 00 00       	mov    $0x20,%ebx
    eb1b:	48 83 ec 18          	sub    $0x18,%rsp
    eb1f:	48 39 df             	cmp    %rbx,%rdi
    eb22:	48 0f 43 df          	cmovae %rdi,%rbx
    eb26:	48 8d 43 ff          	lea    -0x1(%rbx),%rax
    eb2a:	48 85 d8             	test   %rbx,%rax
    eb2d:	74 49                	je     eb78 <internal_memalign.constprop.0+0x68>
    eb2f:	48 83 ff 20          	cmp    $0x20,%rdi
    eb33:	0f 86 17 02 00 00    	jbe    ed50 <internal_memalign.constprop.0+0x240>
    eb39:	b8 20 00 00 00       	mov    $0x20,%eax
    eb3e:	66 90                	xchg   %ax,%ax
    eb40:	48 01 c0             	add    %rax,%rax
    eb43:	48 39 d8             	cmp    %rbx,%rax
    eb46:	72 f8                	jb     eb40 <internal_memalign.constprop.0+0x30>
    eb48:	48 c7 c2 80 ff ff ff 	mov    $0xffffffffffffff80,%rdx
    eb4f:	48 89 c3             	mov    %rax,%rbx
    eb52:	48 29 c2             	sub    %rax,%rdx
    eb55:	48 39 d6             	cmp    %rdx,%rsi
    eb58:	72 2d                	jb     eb87 <internal_memalign.constprop.0+0x77>
    eb5a:	e8 e1 21 00 00       	call   10d40 <__errno_location>
    eb5f:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
    eb65:	48 83 c4 18          	add    $0x18,%rsp
    eb69:	31 c0                	xor    %eax,%eax
    eb6b:	5b                   	pop    %rbx
    eb6c:	5d                   	pop    %rbp
    eb6d:	41 5c                	pop    %r12
    eb6f:	41 5d                	pop    %r13
    eb71:	c3                   	ret    
    eb72:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    eb78:	48 c7 c2 80 ff ff ff 	mov    $0xffffffffffffff80,%rdx
    eb7f:	48 29 da             	sub    %rbx,%rdx
    eb82:	48 39 d6             	cmp    %rdx,%rsi
    eb85:	73 d3                	jae    eb5a <internal_memalign.constprop.0+0x4a>
    eb87:	48 8d 46 1f          	lea    0x1f(%rsi),%rax
    eb8b:	ba 20 00 00 00       	mov    $0x20,%edx
    eb90:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
    eb94:	48 83 fe 0e          	cmp    $0xe,%rsi
    eb98:	48 0f 47 d0          	cmova  %rax,%rdx
    eb9c:	48 8d 7c 13 10       	lea    0x10(%rbx,%rdx,1),%rdi
    eba1:	49 89 d4             	mov    %rdx,%r12
    eba4:	e8 17 e4 ff ff       	call   cfc0 <dlmalloc>
    eba9:	48 85 c0             	test   %rax,%rax
    ebac:	74 b7                	je     eb65 <internal_memalign.constprop.0+0x55>
    ebae:	44 8b 2d fb c1 01 00 	mov    0x1c1fb(%rip),%r13d        # 2adb0 <_gm_+0x370>
    ebb5:	48 8d 70 f0          	lea    -0x10(%rax),%rsi
    ebb9:	41 83 e5 02          	and    $0x2,%r13d
    ebbd:	0f 85 9d 00 00 00    	jne    ec60 <internal_memalign.constprop.0+0x150>
    ebc3:	48 8d 6b ff          	lea    -0x1(%rbx),%rbp
    ebc7:	48 85 e8             	test   %rbp,%rax
    ebca:	75 3c                	jne    ec08 <internal_memalign.constprop.0+0xf8>
    ebcc:	48 8b 50 f8          	mov    -0x8(%rax),%rdx
    ebd0:	48 89 f5             	mov    %rsi,%rbp
    ebd3:	f6 c2 03             	test   $0x3,%dl
    ebd6:	74 15                	je     ebed <internal_memalign.constprop.0+0xdd>
    ebd8:	48 89 d1             	mov    %rdx,%rcx
    ebdb:	49 8d 74 24 20       	lea    0x20(%r12),%rsi
    ebe0:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    ebe4:	48 39 ce             	cmp    %rcx,%rsi
    ebe7:	0f 82 a3 00 00 00    	jb     ec90 <internal_memalign.constprop.0+0x180>
    ebed:	45 85 ed             	test   %r13d,%r13d
    ebf0:	0f 85 72 01 00 00    	jne    ed68 <internal_memalign.constprop.0+0x258>
    ebf6:	48 83 c4 18          	add    $0x18,%rsp
    ebfa:	5b                   	pop    %rbx
    ebfb:	5d                   	pop    %rbp
    ebfc:	41 5c                	pop    %r12
    ebfe:	41 5d                	pop    %r13
    ec00:	c3                   	ret    
    ec01:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    ec08:	48 89 da             	mov    %rbx,%rdx
    ec0b:	48 01 c5             	add    %rax,%rbp
    ec0e:	48 f7 da             	neg    %rdx
    ec11:	48 21 d5             	and    %rdx,%rbp
    ec14:	48 83 ed 10          	sub    $0x10,%rbp
    ec18:	48 89 e9             	mov    %rbp,%rcx
    ec1b:	48 29 f1             	sub    %rsi,%rcx
    ec1e:	48 83 f9 1f          	cmp    $0x1f,%rcx
    ec22:	77 09                	ja     ec2d <internal_memalign.constprop.0+0x11d>
    ec24:	48 01 dd             	add    %rbx,%rbp
    ec27:	48 89 e9             	mov    %rbp,%rcx
    ec2a:	48 29 f1             	sub    %rsi,%rcx
    ec2d:	48 8b 78 f8          	mov    -0x8(%rax),%rdi
    ec31:	48 8d 5d 10          	lea    0x10(%rbp),%rbx
    ec35:	48 89 fa             	mov    %rdi,%rdx
    ec38:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    ec3c:	48 29 ca             	sub    %rcx,%rdx
    ec3f:	83 e7 03             	and    $0x3,%edi
    ec42:	0f 85 a8 00 00 00    	jne    ecf0 <internal_memalign.constprop.0+0x1e0>
    ec48:	48 03 48 f0          	add    -0x10(%rax),%rcx
    ec4c:	48 89 55 08          	mov    %rdx,0x8(%rbp)
    ec50:	48 89 d8             	mov    %rbx,%rax
    ec53:	48 89 4d 00          	mov    %rcx,0x0(%rbp)
    ec57:	e9 77 ff ff ff       	jmp    ebd3 <internal_memalign.constprop.0+0xc3>
    ec5c:	0f 1f 40 00          	nopl   0x0(%rax)
    ec60:	ba 01 00 00 00       	mov    $0x1,%edx
    ec65:	87 15 49 c1 01 00    	xchg   %edx,0x1c149(%rip)        # 2adb4 <_gm_+0x374>
    ec6b:	85 d2                	test   %edx,%edx
    ec6d:	0f 85 0d 01 00 00    	jne    ed80 <internal_memalign.constprop.0+0x270>
    ec73:	44 8b 2d 36 c1 01 00 	mov    0x1c136(%rip),%r13d        # 2adb0 <_gm_+0x370>
    ec7a:	48 8d 6b ff          	lea    -0x1(%rbx),%rbp
    ec7e:	41 83 e5 02          	and    $0x2,%r13d
    ec82:	48 85 e8             	test   %rbp,%rax
    ec85:	75 81                	jne    ec08 <internal_memalign.constprop.0+0xf8>
    ec87:	e9 40 ff ff ff       	jmp    ebcc <internal_memalign.constprop.0+0xbc>
    ec8c:	0f 1f 40 00          	nopl   0x0(%rax)
    ec90:	83 e2 01             	and    $0x1,%edx
    ec93:	49 89 c8             	mov    %rcx,%r8
    ec96:	4a 8d 74 25 00       	lea    0x0(%rbp,%r12,1),%rsi
    ec9b:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    eca0:	4c 09 e2             	or     %r12,%rdx
    eca3:	4d 29 e0             	sub    %r12,%r8
    eca6:	48 8d 3d 93 bd 01 00 	lea    0x1bd93(%rip),%rdi        # 2aa40 <_gm_>
    ecad:	48 83 ca 02          	or     $0x2,%rdx
    ecb1:	4d 89 c1             	mov    %r8,%r9
    ecb4:	48 89 55 08          	mov    %rdx,0x8(%rbp)
    ecb8:	48 8b 15 41 c1 01 00 	mov    0x1c141(%rip),%rdx        # 2ae00 <mparams>
    ecbf:	48 01 cd             	add    %rcx,%rbp
    ecc2:	49 83 c9 03          	or     $0x3,%r9
    ecc6:	4c 89 4e 08          	mov    %r9,0x8(%rsi)
    ecca:	48 31 fa             	xor    %rdi,%rdx
    eccd:	48 89 16             	mov    %rdx,(%rsi)
    ecd0:	48 83 4d 08 01       	orq    $0x1,0x8(%rbp)
    ecd5:	48 89 55 00          	mov    %rdx,0x0(%rbp)
    ecd9:	4c 89 c2             	mov    %r8,%rdx
    ecdc:	e8 bf d9 ff ff       	call   c6a0 <dispose_chunk>
    ece1:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    ece6:	e9 02 ff ff ff       	jmp    ebed <internal_memalign.constprop.0+0xdd>
    eceb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    ecf0:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
    ecf4:	4c 8b 05 05 c1 01 00 	mov    0x1c105(%rip),%r8        # 2ae00 <mparams>
    ecfb:	83 e7 01             	and    $0x1,%edi
    ecfe:	48 09 d7             	or     %rdx,%rdi
    ed01:	48 01 ea             	add    %rbp,%rdx
    ed04:	48 83 cf 02          	or     $0x2,%rdi
    ed08:	48 89 7d 08          	mov    %rdi,0x8(%rbp)
    ed0c:	48 8d 3d 2d bd 01 00 	lea    0x1bd2d(%rip),%rdi        # 2aa40 <_gm_>
    ed13:	49 31 f8             	xor    %rdi,%r8
    ed16:	48 83 4a 08 01       	orq    $0x1,0x8(%rdx)
    ed1b:	4c 89 02             	mov    %r8,(%rdx)
    ed1e:	48 8b 50 f8          	mov    -0x8(%rax),%rdx
    ed22:	83 e2 01             	and    $0x1,%edx
    ed25:	48 09 ca             	or     %rcx,%rdx
    ed28:	48 83 ca 02          	or     $0x2,%rdx
    ed2c:	48 89 50 f8          	mov    %rdx,-0x8(%rax)
    ed30:	48 89 ca             	mov    %rcx,%rdx
    ed33:	48 83 4d 08 01       	orq    $0x1,0x8(%rbp)
    ed38:	4c 89 45 00          	mov    %r8,0x0(%rbp)
    ed3c:	e8 5f d9 ff ff       	call   c6a0 <dispose_chunk>
    ed41:	48 8b 55 08          	mov    0x8(%rbp),%rdx
    ed45:	48 89 d8             	mov    %rbx,%rax
    ed48:	e9 86 fe ff ff       	jmp    ebd3 <internal_memalign.constprop.0+0xc3>
    ed4d:	0f 1f 00             	nopl   (%rax)
    ed50:	48 c7 c2 60 ff ff ff 	mov    $0xffffffffffffff60,%rdx
    ed57:	bb 20 00 00 00       	mov    $0x20,%ebx
    ed5c:	e9 21 fe ff ff       	jmp    eb82 <internal_memalign.constprop.0+0x72>
    ed61:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    ed68:	c7 05 42 c0 01 00 00 	movl   $0x0,0x1c042(%rip)        # 2adb4 <_gm_+0x374>
    ed6f:	00 00 00 
    ed72:	48 83 c4 18          	add    $0x18,%rsp
    ed76:	5b                   	pop    %rbx
    ed77:	5d                   	pop    %rbp
    ed78:	41 5c                	pop    %r12
    ed7a:	41 5d                	pop    %r13
    ed7c:	c3                   	ret    
    ed7d:	0f 1f 00             	nopl   (%rax)
    ed80:	b9 01 00 00 00       	mov    $0x1,%ecx
    ed85:	0f 1f 00             	nopl   (%rax)
    ed88:	8b 15 26 c0 01 00    	mov    0x1c026(%rip),%edx        # 2adb4 <_gm_+0x374>
    ed8e:	85 d2                	test   %edx,%edx
    ed90:	75 f6                	jne    ed88 <internal_memalign.constprop.0+0x278>
    ed92:	89 ca                	mov    %ecx,%edx
    ed94:	87 15 1a c0 01 00    	xchg   %edx,0x1c01a(%rip)        # 2adb4 <_gm_+0x374>
    ed9a:	85 d2                	test   %edx,%edx
    ed9c:	75 ea                	jne    ed88 <internal_memalign.constprop.0+0x278>
    ed9e:	e9 d0 fe ff ff       	jmp    ec73 <internal_memalign.constprop.0+0x163>
    eda3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    edaa:	00 00 00 
    edad:	0f 1f 00             	nopl   (%rax)

000000000000edb0 <dlfree>:
    edb0:	f3 0f 1e fa          	endbr64 
    edb4:	48 85 ff             	test   %rdi,%rdi
    edb7:	0f 84 db 01 00 00    	je     ef98 <dlfree+0x1e8>
    edbd:	41 55                	push   %r13
    edbf:	48 89 f8             	mov    %rdi,%rax
    edc2:	48 8d 57 f0          	lea    -0x10(%rdi),%rdx
    edc6:	41 54                	push   %r12
    edc8:	55                   	push   %rbp
    edc9:	53                   	push   %rbx
    edca:	48 83 ec 08          	sub    $0x8,%rsp
    edce:	48 8b 4f f8          	mov    -0x8(%rdi),%rcx
    edd2:	48 8b 35 27 c0 01 00 	mov    0x1c027(%rip),%rsi        # 2ae00 <mparams>
    edd9:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    eddd:	48 8b 5c 0f f0       	mov    -0x10(%rdi,%rcx,1),%rbx
    ede2:	48 31 f3             	xor    %rsi,%rbx
    ede5:	48 3b 73 40          	cmp    0x40(%rbx),%rsi
    ede9:	0f 85 89 02 00 00    	jne    f078 <dlfree+0x2c8>
    edef:	f6 83 70 03 00 00 02 	testb  $0x2,0x370(%rbx)
    edf6:	0f 85 54 01 00 00    	jne    ef50 <dlfree+0x1a0>
    edfc:	4c 8b 4b 18          	mov    0x18(%rbx),%r9
    ee00:	4c 39 ca             	cmp    %r9,%rdx
    ee03:	0f 82 87 01 00 00    	jb     ef90 <dlfree+0x1e0>
    ee09:	48 8b 48 f8          	mov    -0x8(%rax),%rcx
    ee0d:	49 89 c8             	mov    %rcx,%r8
    ee10:	41 83 e0 03          	and    $0x3,%r8d
    ee14:	49 83 f8 01          	cmp    $0x1,%r8
    ee18:	0f 84 72 01 00 00    	je     ef90 <dlfree+0x1e0>
    ee1e:	48 89 ce             	mov    %rcx,%rsi
    ee21:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
    ee25:	83 e1 01             	and    $0x1,%ecx
    ee28:	48 8d 3c 32          	lea    (%rdx,%rsi,1),%rdi
    ee2c:	0f 84 9e 00 00 00    	je     eed0 <dlfree+0x120>
    ee32:	48 39 fa             	cmp    %rdi,%rdx
    ee35:	0f 83 55 01 00 00    	jae    ef90 <dlfree+0x1e0>
    ee3b:	48 8b 47 08          	mov    0x8(%rdi),%rax
    ee3f:	a8 01                	test   $0x1,%al
    ee41:	0f 84 49 01 00 00    	je     ef90 <dlfree+0x1e0>
    ee47:	a8 02                	test   $0x2,%al
    ee49:	0f 84 51 01 00 00    	je     efa0 <dlfree+0x1f0>
    ee4f:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    ee53:	48 89 47 08          	mov    %rax,0x8(%rdi)
    ee57:	48 89 f0             	mov    %rsi,%rax
    ee5a:	48 83 c8 01          	or     $0x1,%rax
    ee5e:	48 89 42 08          	mov    %rax,0x8(%rdx)
    ee62:	48 89 34 32          	mov    %rsi,(%rdx,%rsi,1)
    ee66:	48 89 f1             	mov    %rsi,%rcx
    ee69:	48 c1 e9 03          	shr    $0x3,%rcx
    ee6d:	48 81 fe ff 00 00 00 	cmp    $0xff,%rsi
    ee74:	0f 87 ce 01 00 00    	ja     f048 <dlfree+0x298>
    ee7a:	8d 44 09 09          	lea    0x9(%rcx,%rcx,1),%eax
    ee7e:	8b 3b                	mov    (%rbx),%edi
    ee80:	48 8d 34 c3          	lea    (%rbx,%rax,8),%rsi
    ee84:	b8 01 00 00 00       	mov    $0x1,%eax
    ee89:	d3 e0                	shl    %cl,%eax
    ee8b:	85 c7                	test   %eax,%edi
    ee8d:	0f 84 35 06 00 00    	je     f4c8 <dlfree+0x718>
    ee93:	48 8b 46 10          	mov    0x10(%rsi),%rax
    ee97:	4c 39 c8             	cmp    %r9,%rax
    ee9a:	0f 82 d8 01 00 00    	jb     f078 <dlfree+0x2c8>
    eea0:	48 89 56 10          	mov    %rdx,0x10(%rsi)
    eea4:	48 89 50 18          	mov    %rdx,0x18(%rax)
    eea8:	48 89 42 10          	mov    %rax,0x10(%rdx)
    eeac:	48 89 72 18          	mov    %rsi,0x18(%rdx)
    eeb0:	f6 83 70 03 00 00 02 	testb  $0x2,0x370(%rbx)
    eeb7:	0f 85 73 01 00 00    	jne    f030 <dlfree+0x280>
    eebd:	48 83 c4 08          	add    $0x8,%rsp
    eec1:	5b                   	pop    %rbx
    eec2:	5d                   	pop    %rbp
    eec3:	41 5c                	pop    %r12
    eec5:	41 5d                	pop    %r13
    eec7:	c3                   	ret    
    eec8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    eecf:	00 
    eed0:	48 8b 40 f0          	mov    -0x10(%rax),%rax
    eed4:	4d 85 c0             	test   %r8,%r8
    eed7:	74 d7                	je     eeb0 <dlfree+0x100>
    eed9:	48 29 c2             	sub    %rax,%rdx
    eedc:	48 01 c6             	add    %rax,%rsi
    eedf:	4c 39 ca             	cmp    %r9,%rdx
    eee2:	0f 82 a8 00 00 00    	jb     ef90 <dlfree+0x1e0>
    eee8:	48 39 53 20          	cmp    %rdx,0x20(%rbx)
    eeec:	0f 84 9e 05 00 00    	je     f490 <dlfree+0x6e0>
    eef2:	48 89 c1             	mov    %rax,%rcx
    eef5:	4c 8b 42 18          	mov    0x18(%rdx),%r8
    eef9:	48 c1 e9 03          	shr    $0x3,%rcx
    eefd:	48 3d ff 00 00 00    	cmp    $0xff,%rax
    ef03:	0f 87 67 02 00 00    	ja     f170 <dlfree+0x3c0>
    ef09:	44 8d 54 09 09       	lea    0x9(%rcx,%rcx,1),%r10d
    ef0e:	48 8b 42 10          	mov    0x10(%rdx),%rax
    ef12:	4e 8d 14 d3          	lea    (%rbx,%r10,8),%r10
    ef16:	49 39 c2             	cmp    %rax,%r10
    ef19:	0f 85 ae 07 00 00    	jne    f6cd <dlfree+0x91d>
    ef1f:	49 39 c0             	cmp    %rax,%r8
    ef22:	0f 84 28 05 00 00    	je     f450 <dlfree+0x6a0>
    ef28:	4d 39 c8             	cmp    %r9,%r8
    ef2b:	0f 82 47 01 00 00    	jb     f078 <dlfree+0x2c8>
    ef31:	49 39 50 10          	cmp    %rdx,0x10(%r8)
    ef35:	0f 85 3d 01 00 00    	jne    f078 <dlfree+0x2c8>
    ef3b:	4c 89 40 18          	mov    %r8,0x18(%rax)
    ef3f:	49 89 40 10          	mov    %rax,0x10(%r8)
    ef43:	e9 ea fe ff ff       	jmp    ee32 <dlfree+0x82>
    ef48:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    ef4f:	00 
    ef50:	48 8d b3 74 03 00 00 	lea    0x374(%rbx),%rsi
    ef57:	b9 01 00 00 00       	mov    $0x1,%ecx
    ef5c:	87 0e                	xchg   %ecx,(%rsi)
    ef5e:	85 c9                	test   %ecx,%ecx
    ef60:	0f 84 96 fe ff ff    	je     edfc <dlfree+0x4c>
    ef66:	bf 01 00 00 00       	mov    $0x1,%edi
    ef6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    ef70:	8b 8b 74 03 00 00    	mov    0x374(%rbx),%ecx
    ef76:	85 c9                	test   %ecx,%ecx
    ef78:	75 f6                	jne    ef70 <dlfree+0x1c0>
    ef7a:	89 f9                	mov    %edi,%ecx
    ef7c:	87 0e                	xchg   %ecx,(%rsi)
    ef7e:	85 c9                	test   %ecx,%ecx
    ef80:	75 ee                	jne    ef70 <dlfree+0x1c0>
    ef82:	e9 75 fe ff ff       	jmp    edfc <dlfree+0x4c>
    ef87:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    ef8e:	00 00 
    ef90:	e8 a2 33 00 00       	call   12337 <abort>
    ef95:	0f 1f 00             	nopl   (%rax)
    ef98:	c3                   	ret    
    ef99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    efa0:	4c 8b 5b 20          	mov    0x20(%rbx),%r11
    efa4:	48 39 7b 28          	cmp    %rdi,0x28(%rbx)
    efa8:	0f 84 72 05 00 00    	je     f520 <dlfree+0x770>
    efae:	49 39 fb             	cmp    %rdi,%r11
    efb1:	0f 84 91 06 00 00    	je     f648 <dlfree+0x898>
    efb7:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    efbb:	4c 8b 47 18          	mov    0x18(%rdi),%r8
    efbf:	48 89 c1             	mov    %rax,%rcx
    efc2:	48 01 c6             	add    %rax,%rsi
    efc5:	48 c1 e9 03          	shr    $0x3,%rcx
    efc9:	48 3d f8 00 00 00    	cmp    $0xf8,%rax
    efcf:	0f 87 63 02 00 00    	ja     f238 <dlfree+0x488>
    efd5:	44 8d 54 09 09       	lea    0x9(%rcx,%rcx,1),%r10d
    efda:	48 8b 47 10          	mov    0x10(%rdi),%rax
    efde:	4e 8d 14 d3          	lea    (%rbx,%r10,8),%r10
    efe2:	49 39 c2             	cmp    %rax,%r10
    efe5:	0f 85 73 04 00 00    	jne    f45e <dlfree+0x6ae>
    efeb:	49 39 c0             	cmp    %rax,%r8
    efee:	0f 84 7c 06 00 00    	je     f670 <dlfree+0x8c0>
    eff4:	4d 39 c8             	cmp    %r9,%r8
    eff7:	72 7f                	jb     f078 <dlfree+0x2c8>
    eff9:	49 39 78 10          	cmp    %rdi,0x10(%r8)
    effd:	75 79                	jne    f078 <dlfree+0x2c8>
    efff:	4c 89 40 18          	mov    %r8,0x18(%rax)
    f003:	49 89 40 10          	mov    %rax,0x10(%r8)
    f007:	48 89 f0             	mov    %rsi,%rax
    f00a:	48 83 c8 01          	or     $0x1,%rax
    f00e:	48 89 42 08          	mov    %rax,0x8(%rdx)
    f012:	48 89 34 32          	mov    %rsi,(%rdx,%rsi,1)
    f016:	4c 39 da             	cmp    %r11,%rdx
    f019:	0f 85 47 fe ff ff    	jne    ee66 <dlfree+0xb6>
    f01f:	48 89 73 08          	mov    %rsi,0x8(%rbx)
    f023:	e9 88 fe ff ff       	jmp    eeb0 <dlfree+0x100>
    f028:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    f02f:	00 
    f030:	c7 83 74 03 00 00 00 	movl   $0x0,0x374(%rbx)
    f037:	00 00 00 
    f03a:	48 83 c4 08          	add    $0x8,%rsp
    f03e:	5b                   	pop    %rbx
    f03f:	5d                   	pop    %rbp
    f040:	41 5c                	pop    %r12
    f042:	41 5d                	pop    %r13
    f044:	c3                   	ret    
    f045:	0f 1f 00             	nopl   (%rax)
    f048:	48 89 f0             	mov    %rsi,%rax
    f04b:	48 c1 e8 08          	shr    $0x8,%rax
    f04f:	89 c1                	mov    %eax,%ecx
    f051:	85 c0                	test   %eax,%eax
    f053:	74 2b                	je     f080 <dlfree+0x2d0>
    f055:	3d ff ff 00 00       	cmp    $0xffff,%eax
    f05a:	0f 86 a0 02 00 00    	jbe    f300 <dlfree+0x550>
    f060:	b8 00 00 00 80       	mov    $0x80000000,%eax
    f065:	bf 50 03 00 00       	mov    $0x350,%edi
    f06a:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    f06f:	eb 19                	jmp    f08a <dlfree+0x2da>
    f071:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f078:	e8 ba 32 00 00       	call   12337 <abort>
    f07d:	0f 1f 00             	nopl   (%rax)
    f080:	b8 01 00 00 00       	mov    $0x1,%eax
    f085:	bf 58 02 00 00       	mov    $0x258,%edi
    f08a:	44 8b 43 04          	mov    0x4(%rbx),%r8d
    f08e:	66 48 0f 6e ca       	movq   %rdx,%xmm1
    f093:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f097:	89 4a 38             	mov    %ecx,0x38(%rdx)
    f09a:	66 0f 6c c9          	punpcklqdq %xmm1,%xmm1
    f09e:	0f 11 42 20          	movups %xmm0,0x20(%rdx)
    f0a2:	44 85 c0             	test   %r8d,%eax
    f0a5:	0f 84 2d 04 00 00    	je     f4d8 <dlfree+0x728>
    f0ab:	89 c8                	mov    %ecx,%eax
    f0ad:	49 89 f0             	mov    %rsi,%r8
    f0b0:	48 8b bc c3 58 02 00 	mov    0x258(%rbx,%rax,8),%rdi
    f0b7:	00 
    f0b8:	83 f9 1f             	cmp    $0x1f,%ecx
    f0bb:	74 31                	je     f0ee <dlfree+0x33e>
    f0bd:	89 c8                	mov    %ecx,%eax
    f0bf:	b9 39 00 00 00       	mov    $0x39,%ecx
    f0c4:	d1 e8                	shr    %eax
    f0c6:	29 c1                	sub    %eax,%ecx
    f0c8:	49 d3 e0             	shl    %cl,%r8
    f0cb:	eb 21                	jmp    f0ee <dlfree+0x33e>
    f0cd:	0f 1f 00             	nopl   (%rax)
    f0d0:	4c 89 c0             	mov    %r8,%rax
    f0d3:	4d 01 c0             	add    %r8,%r8
    f0d6:	48 c1 e8 3f          	shr    $0x3f,%rax
    f0da:	48 83 c0 04          	add    $0x4,%rax
    f0de:	48 8b 0c c7          	mov    (%rdi,%rax,8),%rcx
    f0e2:	48 85 c9             	test   %rcx,%rcx
    f0e5:	0f 84 15 04 00 00    	je     f500 <dlfree+0x750>
    f0eb:	48 89 cf             	mov    %rcx,%rdi
    f0ee:	48 8b 47 08          	mov    0x8(%rdi),%rax
    f0f2:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    f0f6:	48 39 f0             	cmp    %rsi,%rax
    f0f9:	75 d5                	jne    f0d0 <dlfree+0x320>
    f0fb:	48 8b 47 10          	mov    0x10(%rdi),%rax
    f0ff:	66 48 0f 6e d7       	movq   %rdi,%xmm2
    f104:	66 48 0f 6e c0       	movq   %rax,%xmm0
    f109:	66 0f 6c c2          	punpcklqdq %xmm2,%xmm0
    f10d:	4c 39 cf             	cmp    %r9,%rdi
    f110:	0f 82 62 ff ff ff    	jb     f078 <dlfree+0x2c8>
    f116:	4c 39 c8             	cmp    %r9,%rax
    f119:	0f 82 59 ff ff ff    	jb     f078 <dlfree+0x2c8>
    f11f:	48 89 50 18          	mov    %rdx,0x18(%rax)
    f123:	48 89 57 10          	mov    %rdx,0x10(%rdi)
    f127:	48 c7 42 30 00 00 00 	movq   $0x0,0x30(%rdx)
    f12e:	00 
    f12f:	0f 11 42 10          	movups %xmm0,0x10(%rdx)
    f133:	48 83 6b 38 01       	subq   $0x1,0x38(%rbx)
    f138:	0f 85 72 fd ff ff    	jne    eeb0 <dlfree+0x100>
    f13e:	48 8b 83 88 03 00 00 	mov    0x388(%rbx),%rax
    f145:	48 85 c0             	test   %rax,%rax
    f148:	74 0f                	je     f159 <dlfree+0x3a9>
    f14a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    f150:	48 8b 40 10          	mov    0x10(%rax),%rax
    f154:	48 85 c0             	test   %rax,%rax
    f157:	75 f7                	jne    f150 <dlfree+0x3a0>
    f159:	48 c7 43 38 ff ff ff 	movq   $0xffffffffffffffff,0x38(%rbx)
    f160:	ff 
    f161:	e9 4a fd ff ff       	jmp    eeb0 <dlfree+0x100>
    f166:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    f16d:	00 00 00 
    f170:	4c 8b 5a 30          	mov    0x30(%rdx),%r11
    f174:	49 39 d0             	cmp    %rdx,%r8
    f177:	0f 84 c3 01 00 00    	je     f340 <dlfree+0x590>
    f17d:	48 8b 42 10          	mov    0x10(%rdx),%rax
    f181:	4c 39 c8             	cmp    %r9,%rax
    f184:	0f 82 ee fe ff ff    	jb     f078 <dlfree+0x2c8>
    f18a:	48 39 50 18          	cmp    %rdx,0x18(%rax)
    f18e:	0f 85 e4 fe ff ff    	jne    f078 <dlfree+0x2c8>
    f194:	49 39 50 10          	cmp    %rdx,0x10(%r8)
    f198:	0f 85 da fe ff ff    	jne    f078 <dlfree+0x2c8>
    f19e:	4c 89 40 18          	mov    %r8,0x18(%rax)
    f1a2:	49 89 40 10          	mov    %rax,0x10(%r8)
    f1a6:	4d 85 db             	test   %r11,%r11
    f1a9:	0f 84 83 fc ff ff    	je     ee32 <dlfree+0x82>
    f1af:	8b 42 38             	mov    0x38(%rdx),%eax
    f1b2:	48 89 c1             	mov    %rax,%rcx
    f1b5:	4c 8d 50 4a          	lea    0x4a(%rax),%r10
    f1b9:	48 39 94 c3 58 02 00 	cmp    %rdx,0x258(%rbx,%rax,8)
    f1c0:	00 
    f1c1:	0f 84 cc 04 00 00    	je     f693 <dlfree+0x8e3>
    f1c7:	4d 39 cb             	cmp    %r9,%r11
    f1ca:	0f 82 a8 fe ff ff    	jb     f078 <dlfree+0x2c8>
    f1d0:	49 39 53 20          	cmp    %rdx,0x20(%r11)
    f1d4:	0f 84 4e 05 00 00    	je     f728 <dlfree+0x978>
    f1da:	4d 89 43 28          	mov    %r8,0x28(%r11)
    f1de:	4d 85 c0             	test   %r8,%r8
    f1e1:	0f 84 4b fc ff ff    	je     ee32 <dlfree+0x82>
    f1e7:	4d 39 c8             	cmp    %r9,%r8
    f1ea:	0f 82 88 fe ff ff    	jb     f078 <dlfree+0x2c8>
    f1f0:	48 8b 42 20          	mov    0x20(%rdx),%rax
    f1f4:	4d 89 58 30          	mov    %r11,0x30(%r8)
    f1f8:	48 85 c0             	test   %rax,%rax
    f1fb:	74 11                	je     f20e <dlfree+0x45e>
    f1fd:	4c 39 c8             	cmp    %r9,%rax
    f200:	0f 82 72 fe ff ff    	jb     f078 <dlfree+0x2c8>
    f206:	49 89 40 20          	mov    %rax,0x20(%r8)
    f20a:	4c 89 40 30          	mov    %r8,0x30(%rax)
    f20e:	48 8b 42 28          	mov    0x28(%rdx),%rax
    f212:	48 85 c0             	test   %rax,%rax
    f215:	0f 84 17 fc ff ff    	je     ee32 <dlfree+0x82>
    f21b:	4c 39 c8             	cmp    %r9,%rax
    f21e:	0f 82 54 fe ff ff    	jb     f078 <dlfree+0x2c8>
    f224:	49 89 40 28          	mov    %rax,0x28(%r8)
    f228:	4c 89 40 30          	mov    %r8,0x30(%rax)
    f22c:	e9 01 fc ff ff       	jmp    ee32 <dlfree+0x82>
    f231:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f238:	48 8b 6f 30          	mov    0x30(%rdi),%rbp
    f23c:	49 39 f8             	cmp    %rdi,%r8
    f23f:	0f 84 83 01 00 00    	je     f3c8 <dlfree+0x618>
    f245:	48 8b 47 10          	mov    0x10(%rdi),%rax
    f249:	4c 39 c8             	cmp    %r9,%rax
    f24c:	0f 82 26 fe ff ff    	jb     f078 <dlfree+0x2c8>
    f252:	48 39 78 18          	cmp    %rdi,0x18(%rax)
    f256:	0f 85 1c fe ff ff    	jne    f078 <dlfree+0x2c8>
    f25c:	49 39 78 10          	cmp    %rdi,0x10(%r8)
    f260:	0f 85 12 fe ff ff    	jne    f078 <dlfree+0x2c8>
    f266:	4c 89 40 18          	mov    %r8,0x18(%rax)
    f26a:	49 89 40 10          	mov    %rax,0x10(%r8)
    f26e:	48 85 ed             	test   %rbp,%rbp
    f271:	0f 84 90 fd ff ff    	je     f007 <dlfree+0x257>
    f277:	8b 47 38             	mov    0x38(%rdi),%eax
    f27a:	48 89 c1             	mov    %rax,%rcx
    f27d:	4c 8d 50 4a          	lea    0x4a(%rax),%r10
    f281:	48 39 bc c3 58 02 00 	cmp    %rdi,0x258(%rbx,%rax,8)
    f288:	00 
    f289:	0f 84 21 04 00 00    	je     f6b0 <dlfree+0x900>
    f28f:	4c 39 cd             	cmp    %r9,%rbp
    f292:	0f 82 e0 fd ff ff    	jb     f078 <dlfree+0x2c8>
    f298:	48 39 7d 20          	cmp    %rdi,0x20(%rbp)
    f29c:	0f 84 8f 04 00 00    	je     f731 <dlfree+0x981>
    f2a2:	4c 89 45 28          	mov    %r8,0x28(%rbp)
    f2a6:	4d 85 c0             	test   %r8,%r8
    f2a9:	0f 84 58 fd ff ff    	je     f007 <dlfree+0x257>
    f2af:	4d 39 c8             	cmp    %r9,%r8
    f2b2:	0f 82 c0 fd ff ff    	jb     f078 <dlfree+0x2c8>
    f2b8:	48 8b 47 20          	mov    0x20(%rdi),%rax
    f2bc:	49 89 68 30          	mov    %rbp,0x30(%r8)
    f2c0:	48 85 c0             	test   %rax,%rax
    f2c3:	74 11                	je     f2d6 <dlfree+0x526>
    f2c5:	4c 39 c8             	cmp    %r9,%rax
    f2c8:	0f 82 aa fd ff ff    	jb     f078 <dlfree+0x2c8>
    f2ce:	49 89 40 20          	mov    %rax,0x20(%r8)
    f2d2:	4c 89 40 30          	mov    %r8,0x30(%rax)
    f2d6:	48 8b 47 28          	mov    0x28(%rdi),%rax
    f2da:	48 85 c0             	test   %rax,%rax
    f2dd:	0f 84 24 fd ff ff    	je     f007 <dlfree+0x257>
    f2e3:	4c 39 c8             	cmp    %r9,%rax
    f2e6:	0f 82 8c fd ff ff    	jb     f078 <dlfree+0x2c8>
    f2ec:	49 89 40 28          	mov    %rax,0x28(%r8)
    f2f0:	4c 89 40 30          	mov    %r8,0x30(%rax)
    f2f4:	e9 0e fd ff ff       	jmp    f007 <dlfree+0x257>
    f2f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f300:	0f bd c1             	bsr    %ecx,%eax
    f303:	b9 26 00 00 00       	mov    $0x26,%ecx
    f308:	48 89 f7             	mov    %rsi,%rdi
    f30b:	83 f0 1f             	xor    $0x1f,%eax
    f30e:	29 c1                	sub    %eax,%ecx
    f310:	48 d3 ef             	shr    %cl,%rdi
    f313:	48 89 f9             	mov    %rdi,%rcx
    f316:	bf 1f 00 00 00       	mov    $0x1f,%edi
    f31b:	29 c7                	sub    %eax,%edi
    f31d:	83 e1 01             	and    $0x1,%ecx
    f320:	b8 01 00 00 00       	mov    $0x1,%eax
    f325:	8d 0c 79             	lea    (%rcx,%rdi,2),%ecx
    f328:	8d 79 4b             	lea    0x4b(%rcx),%edi
    f32b:	d3 e0                	shl    %cl,%eax
    f32d:	48 c1 e7 03          	shl    $0x3,%rdi
    f331:	e9 54 fd ff ff       	jmp    f08a <dlfree+0x2da>
    f336:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    f33d:	00 00 00 
    f340:	48 8b 42 28          	mov    0x28(%rdx),%rax
    f344:	48 8d 4a 28          	lea    0x28(%rdx),%rcx
    f348:	48 85 c0             	test   %rax,%rax
    f34b:	0f 84 af 03 00 00    	je     f700 <dlfree+0x950>
    f351:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f358:	49 89 ca             	mov    %rcx,%r10
    f35b:	49 89 c0             	mov    %rax,%r8
    f35e:	48 8d 48 28          	lea    0x28(%rax),%rcx
    f362:	48 8b 40 28          	mov    0x28(%rax),%rax
    f366:	48 85 c0             	test   %rax,%rax
    f369:	75 ed                	jne    f358 <dlfree+0x5a8>
    f36b:	49 8b 40 20          	mov    0x20(%r8),%rax
    f36f:	49 8d 48 20          	lea    0x20(%r8),%rcx
    f373:	48 85 c0             	test   %rax,%rax
    f376:	75 e0                	jne    f358 <dlfree+0x5a8>
    f378:	4d 39 ca             	cmp    %r9,%r10
    f37b:	0f 82 f7 fc ff ff    	jb     f078 <dlfree+0x2c8>
    f381:	49 c7 02 00 00 00 00 	movq   $0x0,(%r10)
    f388:	4d 85 db             	test   %r11,%r11
    f38b:	0f 84 a1 fa ff ff    	je     ee32 <dlfree+0x82>
    f391:	8b 42 38             	mov    0x38(%rdx),%eax
    f394:	48 8d 48 4a          	lea    0x4a(%rax),%rcx
    f398:	48 39 94 c3 58 02 00 	cmp    %rdx,0x258(%rbx,%rax,8)
    f39f:	00 
    f3a0:	0f 84 a2 03 00 00    	je     f748 <dlfree+0x998>
    f3a6:	4d 39 cb             	cmp    %r9,%r11
    f3a9:	0f 82 c9 fc ff ff    	jb     f078 <dlfree+0x2c8>
    f3af:	49 39 53 20          	cmp    %rdx,0x20(%r11)
    f3b3:	0f 84 ac 03 00 00    	je     f765 <dlfree+0x9b5>
    f3b9:	4d 89 43 28          	mov    %r8,0x28(%r11)
    f3bd:	e9 25 fe ff ff       	jmp    f1e7 <dlfree+0x437>
    f3c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    f3c8:	48 8b 47 28          	mov    0x28(%rdi),%rax
    f3cc:	48 8d 4f 28          	lea    0x28(%rdi),%rcx
    f3d0:	48 85 c0             	test   %rax,%rax
    f3d3:	0f 84 39 03 00 00    	je     f712 <dlfree+0x962>
    f3d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f3e0:	49 89 ca             	mov    %rcx,%r10
    f3e3:	49 89 c0             	mov    %rax,%r8
    f3e6:	48 8d 48 28          	lea    0x28(%rax),%rcx
    f3ea:	48 8b 40 28          	mov    0x28(%rax),%rax
    f3ee:	48 85 c0             	test   %rax,%rax
    f3f1:	75 ed                	jne    f3e0 <dlfree+0x630>
    f3f3:	49 8b 40 20          	mov    0x20(%r8),%rax
    f3f7:	49 8d 48 20          	lea    0x20(%r8),%rcx
    f3fb:	48 85 c0             	test   %rax,%rax
    f3fe:	75 e0                	jne    f3e0 <dlfree+0x630>
    f400:	4d 39 ca             	cmp    %r9,%r10
    f403:	0f 82 6f fc ff ff    	jb     f078 <dlfree+0x2c8>
    f409:	49 c7 02 00 00 00 00 	movq   $0x0,(%r10)
    f410:	48 85 ed             	test   %rbp,%rbp
    f413:	0f 84 ee fb ff ff    	je     f007 <dlfree+0x257>
    f419:	8b 47 38             	mov    0x38(%rdi),%eax
    f41c:	48 8d 48 4a          	lea    0x4a(%rax),%rcx
    f420:	48 39 bc c3 58 02 00 	cmp    %rdi,0x258(%rbx,%rax,8)
    f427:	00 
    f428:	0f 84 24 03 00 00    	je     f752 <dlfree+0x9a2>
    f42e:	4c 39 cd             	cmp    %r9,%rbp
    f431:	0f 82 41 fc ff ff    	jb     f078 <dlfree+0x2c8>
    f437:	48 39 7d 20          	cmp    %rdi,0x20(%rbp)
    f43b:	0f 84 1b 03 00 00    	je     f75c <dlfree+0x9ac>
    f441:	4c 89 45 28          	mov    %r8,0x28(%rbp)
    f445:	e9 65 fe ff ff       	jmp    f2af <dlfree+0x4ff>
    f44a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    f450:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    f455:	d3 c0                	rol    %cl,%eax
    f457:	21 03                	and    %eax,(%rbx)
    f459:	e9 d4 f9 ff ff       	jmp    ee32 <dlfree+0x82>
    f45e:	4c 39 c8             	cmp    %r9,%rax
    f461:	0f 82 11 fc ff ff    	jb     f078 <dlfree+0x2c8>
    f467:	48 39 78 18          	cmp    %rdi,0x18(%rax)
    f46b:	0f 85 07 fc ff ff    	jne    f078 <dlfree+0x2c8>
    f471:	49 39 c0             	cmp    %rax,%r8
    f474:	0f 84 f6 01 00 00    	je     f670 <dlfree+0x8c0>
    f47a:	4d 39 c2             	cmp    %r8,%r10
    f47d:	0f 84 7c fb ff ff    	je     efff <dlfree+0x24f>
    f483:	e9 6c fb ff ff       	jmp    eff4 <dlfree+0x244>
    f488:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    f48f:	00 
    f490:	48 8b 47 08          	mov    0x8(%rdi),%rax
    f494:	48 89 c1             	mov    %rax,%rcx
    f497:	48 f7 d1             	not    %rcx
    f49a:	83 e1 03             	and    $0x3,%ecx
    f49d:	0f 85 8f f9 ff ff    	jne    ee32 <dlfree+0x82>
    f4a3:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    f4a7:	48 89 73 08          	mov    %rsi,0x8(%rbx)
    f4ab:	48 89 47 08          	mov    %rax,0x8(%rdi)
    f4af:	48 89 f0             	mov    %rsi,%rax
    f4b2:	48 83 c8 01          	or     $0x1,%rax
    f4b6:	48 89 42 08          	mov    %rax,0x8(%rdx)
    f4ba:	48 89 37             	mov    %rsi,(%rdi)
    f4bd:	e9 ee f9 ff ff       	jmp    eeb0 <dlfree+0x100>
    f4c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    f4c8:	09 c7                	or     %eax,%edi
    f4ca:	48 89 f0             	mov    %rsi,%rax
    f4cd:	89 3b                	mov    %edi,(%rbx)
    f4cf:	e9 cc f9 ff ff       	jmp    eea0 <dlfree+0xf0>
    f4d4:	0f 1f 40 00          	nopl   0x0(%rax)
    f4d8:	44 09 c0             	or     %r8d,%eax
    f4db:	48 01 df             	add    %rbx,%rdi
    f4de:	89 43 04             	mov    %eax,0x4(%rbx)
    f4e1:	48 89 94 cb 58 02 00 	mov    %rdx,0x258(%rbx,%rcx,8)
    f4e8:	00 
    f4e9:	48 89 7a 30          	mov    %rdi,0x30(%rdx)
    f4ed:	0f 11 4a 10          	movups %xmm1,0x10(%rdx)
    f4f1:	e9 3d fc ff ff       	jmp    f133 <dlfree+0x383>
    f4f6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    f4fd:	00 00 00 
    f500:	48 8d 0c c7          	lea    (%rdi,%rax,8),%rcx
    f504:	4c 39 c9             	cmp    %r9,%rcx
    f507:	0f 82 6b fb ff ff    	jb     f078 <dlfree+0x2c8>
    f50d:	48 89 14 c7          	mov    %rdx,(%rdi,%rax,8)
    f511:	48 89 7a 30          	mov    %rdi,0x30(%rdx)
    f515:	0f 11 4a 10          	movups %xmm1,0x10(%rdx)
    f519:	e9 15 fc ff ff       	jmp    f133 <dlfree+0x383>
    f51e:	66 90                	xchg   %ax,%ax
    f520:	48 03 73 10          	add    0x10(%rbx),%rsi
    f524:	48 89 53 28          	mov    %rdx,0x28(%rbx)
    f528:	48 89 f0             	mov    %rsi,%rax
    f52b:	48 89 73 10          	mov    %rsi,0x10(%rbx)
    f52f:	48 83 c8 01          	or     $0x1,%rax
    f533:	48 89 42 08          	mov    %rax,0x8(%rdx)
    f537:	4c 39 da             	cmp    %r11,%rdx
    f53a:	0f 84 3e 01 00 00    	je     f67e <dlfree+0x8ce>
    f540:	48 39 73 30          	cmp    %rsi,0x30(%rbx)
    f544:	0f 83 66 f9 ff ff    	jae    eeb0 <dlfree+0x100>
    f54a:	48 83 3d ae b8 01 00 	cmpq   $0x0,0x1b8ae(%rip)        # 2ae00 <mparams>
    f551:	00 
    f552:	0f 84 e2 01 00 00    	je     f73a <dlfree+0x98a>
    f558:	48 85 d2             	test   %rdx,%rdx
    f55b:	0f 84 4f f9 ff ff    	je     eeb0 <dlfree+0x100>
    f561:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
    f565:	48 83 f9 50          	cmp    $0x50,%rcx
    f569:	0f 86 a7 00 00 00    	jbe    f616 <dlfree+0x866>
    f56f:	48 8b 35 9a b8 01 00 	mov    0x1b89a(%rip),%rsi        # 2ae10 <mparams+0x10>
    f576:	48 8d ab 78 03 00 00 	lea    0x378(%rbx),%rbp
    f57d:	0f 1f 00             	nopl   (%rax)
    f580:	48 8b 45 00          	mov    0x0(%rbp),%rax
    f584:	48 39 c2             	cmp    %rax,%rdx
    f587:	72 09                	jb     f592 <dlfree+0x7e2>
    f589:	48 03 45 08          	add    0x8(%rbp),%rax
    f58d:	48 39 c2             	cmp    %rax,%rdx
    f590:	72 09                	jb     f59b <dlfree+0x7eb>
    f592:	48 8b 6d 10          	mov    0x10(%rbp),%rbp
    f596:	48 85 ed             	test   %rbp,%rbp
    f599:	75 e5                	jne    f580 <dlfree+0x7d0>
    f59b:	f6 45 18 08          	testb  $0x8,0x18(%rbp)
    f59f:	75 75                	jne    f616 <dlfree+0x866>
    f5a1:	48 8d 44 31 af       	lea    -0x51(%rcx,%rsi,1),%rax
    f5a6:	31 d2                	xor    %edx,%edx
    f5a8:	48 f7 f6             	div    %rsi
    f5ab:	48 83 e8 01          	sub    $0x1,%rax
    f5af:	48 0f af c6          	imul   %rsi,%rax
    f5b3:	49 89 c4             	mov    %rax,%r12
    f5b6:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
    f5bd:	ff ff 7f 
    f5c0:	4c 39 e0             	cmp    %r12,%rax
    f5c3:	73 0d                	jae    f5d2 <dlfree+0x822>
    f5c5:	49 bc 00 00 00 00 00 	movabs $0x8000000000000000,%r12
    f5cc:	00 00 80 
    f5cf:	49 29 f4             	sub    %rsi,%r12
    f5d2:	b8 01 00 00 00       	mov    $0x1,%eax
    f5d7:	87 05 53 b8 01 00    	xchg   %eax,0x1b853(%rip)        # 2ae30 <malloc_global_mutex>
    f5dd:	48 8d 15 4c b8 01 00 	lea    0x1b84c(%rip),%rdx        # 2ae30 <malloc_global_mutex>
    f5e4:	b9 01 00 00 00       	mov    $0x1,%ecx
    f5e9:	85 c0                	test   %eax,%eax
    f5eb:	75 40                	jne    f62d <dlfree+0x87d>
    f5ed:	31 ff                	xor    %edi,%edi
    f5ef:	e8 ec ce ff ff       	call   c4e0 <sbrk>
    f5f4:	49 89 c5             	mov    %rax,%r13
    f5f7:	48 8b 45 08          	mov    0x8(%rbp),%rax
    f5fb:	48 03 45 00          	add    0x0(%rbp),%rax
    f5ff:	49 39 c5             	cmp    %rax,%r13
    f602:	0f 84 e5 01 00 00    	je     f7ed <dlfree+0xa3d>
    f608:	c7 05 1e b8 01 00 00 	movl   $0x0,0x1b81e(%rip)        # 2ae30 <malloc_global_mutex>
    f60f:	00 00 00 
    f612:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
    f616:	48 39 4b 30          	cmp    %rcx,0x30(%rbx)
    f61a:	0f 83 90 f8 ff ff    	jae    eeb0 <dlfree+0x100>
    f620:	48 c7 43 30 ff ff ff 	movq   $0xffffffffffffffff,0x30(%rbx)
    f627:	ff 
    f628:	e9 83 f8 ff ff       	jmp    eeb0 <dlfree+0x100>
    f62d:	8b 02                	mov    (%rdx),%eax
    f62f:	85 c0                	test   %eax,%eax
    f631:	75 fa                	jne    f62d <dlfree+0x87d>
    f633:	89 c8                	mov    %ecx,%eax
    f635:	87 05 f5 b7 01 00    	xchg   %eax,0x1b7f5(%rip)        # 2ae30 <malloc_global_mutex>
    f63b:	85 c0                	test   %eax,%eax
    f63d:	75 ee                	jne    f62d <dlfree+0x87d>
    f63f:	eb ac                	jmp    f5ed <dlfree+0x83d>
    f641:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f648:	48 03 73 08          	add    0x8(%rbx),%rsi
    f64c:	48 89 53 20          	mov    %rdx,0x20(%rbx)
    f650:	48 89 f0             	mov    %rsi,%rax
    f653:	48 89 73 08          	mov    %rsi,0x8(%rbx)
    f657:	48 83 c8 01          	or     $0x1,%rax
    f65b:	48 89 42 08          	mov    %rax,0x8(%rdx)
    f65f:	48 89 34 32          	mov    %rsi,(%rdx,%rsi,1)
    f663:	e9 48 f8 ff ff       	jmp    eeb0 <dlfree+0x100>
    f668:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    f66f:	00 
    f670:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    f675:	d3 c0                	rol    %cl,%eax
    f677:	21 03                	and    %eax,(%rbx)
    f679:	e9 89 f9 ff ff       	jmp    f007 <dlfree+0x257>
    f67e:	48 c7 43 20 00 00 00 	movq   $0x0,0x20(%rbx)
    f685:	00 
    f686:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
    f68d:	00 
    f68e:	e9 ad fe ff ff       	jmp    f540 <dlfree+0x790>
    f693:	4e 89 44 d3 08       	mov    %r8,0x8(%rbx,%r10,8)
    f698:	4d 85 c0             	test   %r8,%r8
    f69b:	0f 85 46 fb ff ff    	jne    f1e7 <dlfree+0x437>
    f6a1:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    f6a6:	d3 c0                	rol    %cl,%eax
    f6a8:	21 43 04             	and    %eax,0x4(%rbx)
    f6ab:	e9 82 f7 ff ff       	jmp    ee32 <dlfree+0x82>
    f6b0:	4e 89 44 d3 08       	mov    %r8,0x8(%rbx,%r10,8)
    f6b5:	4d 85 c0             	test   %r8,%r8
    f6b8:	0f 85 f1 fb ff ff    	jne    f2af <dlfree+0x4ff>
    f6be:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    f6c3:	d3 c0                	rol    %cl,%eax
    f6c5:	21 43 04             	and    %eax,0x4(%rbx)
    f6c8:	e9 3a f9 ff ff       	jmp    f007 <dlfree+0x257>
    f6cd:	4c 39 c8             	cmp    %r9,%rax
    f6d0:	0f 82 a2 f9 ff ff    	jb     f078 <dlfree+0x2c8>
    f6d6:	48 39 50 18          	cmp    %rdx,0x18(%rax)
    f6da:	0f 85 98 f9 ff ff    	jne    f078 <dlfree+0x2c8>
    f6e0:	49 39 c0             	cmp    %rax,%r8
    f6e3:	0f 84 67 fd ff ff    	je     f450 <dlfree+0x6a0>
    f6e9:	4d 39 c2             	cmp    %r8,%r10
    f6ec:	0f 84 49 f8 ff ff    	je     ef3b <dlfree+0x18b>
    f6f2:	e9 31 f8 ff ff       	jmp    ef28 <dlfree+0x178>
    f6f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    f6fe:	00 00 
    f700:	48 8b 42 20          	mov    0x20(%rdx),%rax
    f704:	48 85 c0             	test   %rax,%rax
    f707:	74 65                	je     f76e <dlfree+0x9be>
    f709:	48 8d 4a 20          	lea    0x20(%rdx),%rcx
    f70d:	e9 46 fc ff ff       	jmp    f358 <dlfree+0x5a8>
    f712:	48 8b 47 20          	mov    0x20(%rdi),%rax
    f716:	48 85 c0             	test   %rax,%rax
    f719:	0f 84 8f 00 00 00    	je     f7ae <dlfree+0x9fe>
    f71f:	48 8d 4f 20          	lea    0x20(%rdi),%rcx
    f723:	e9 b8 fc ff ff       	jmp    f3e0 <dlfree+0x630>
    f728:	4d 89 43 20          	mov    %r8,0x20(%r11)
    f72c:	e9 ad fa ff ff       	jmp    f1de <dlfree+0x42e>
    f731:	4c 89 45 20          	mov    %r8,0x20(%rbp)
    f735:	e9 6c fb ff ff       	jmp    f2a6 <dlfree+0x4f6>
    f73a:	e8 91 d7 ff ff       	call   ced0 <init_mparams.isra.0>
    f73f:	48 8b 53 28          	mov    0x28(%rbx),%rdx
    f743:	e9 10 fe ff ff       	jmp    f558 <dlfree+0x7a8>
    f748:	4c 89 44 cb 08       	mov    %r8,0x8(%rbx,%rcx,8)
    f74d:	e9 95 fa ff ff       	jmp    f1e7 <dlfree+0x437>
    f752:	4c 89 44 cb 08       	mov    %r8,0x8(%rbx,%rcx,8)
    f757:	e9 53 fb ff ff       	jmp    f2af <dlfree+0x4ff>
    f75c:	4c 89 45 20          	mov    %r8,0x20(%rbp)
    f760:	e9 4a fb ff ff       	jmp    f2af <dlfree+0x4ff>
    f765:	4d 89 43 20          	mov    %r8,0x20(%r11)
    f769:	e9 79 fa ff ff       	jmp    f1e7 <dlfree+0x437>
    f76e:	4d 85 db             	test   %r11,%r11
    f771:	0f 84 bb f6 ff ff    	je     ee32 <dlfree+0x82>
    f777:	8b 42 38             	mov    0x38(%rdx),%eax
    f77a:	48 89 c1             	mov    %rax,%rcx
    f77d:	4c 8d 40 4a          	lea    0x4a(%rax),%r8
    f781:	48 39 94 c3 58 02 00 	cmp    %rdx,0x258(%rbx,%rax,8)
    f788:	00 
    f789:	0f 84 fd 00 00 00    	je     f88c <dlfree+0xadc>
    f78f:	4d 39 cb             	cmp    %r9,%r11
    f792:	0f 82 e0 f8 ff ff    	jb     f078 <dlfree+0x2c8>
    f798:	49 3b 53 20          	cmp    0x20(%r11),%rdx
    f79c:	0f 84 02 01 00 00    	je     f8a4 <dlfree+0xaf4>
    f7a2:	45 31 c0             	xor    %r8d,%r8d
    f7a5:	4d 89 43 28          	mov    %r8,0x28(%r11)
    f7a9:	e9 84 f6 ff ff       	jmp    ee32 <dlfree+0x82>
    f7ae:	48 85 ed             	test   %rbp,%rbp
    f7b1:	0f 84 50 f8 ff ff    	je     f007 <dlfree+0x257>
    f7b7:	8b 47 38             	mov    0x38(%rdi),%eax
    f7ba:	48 89 c1             	mov    %rax,%rcx
    f7bd:	4c 8d 40 4a          	lea    0x4a(%rax),%r8
    f7c1:	48 3b bc c3 58 02 00 	cmp    0x258(%rbx,%rax,8),%rdi
    f7c8:	00 
    f7c9:	0f 84 b1 00 00 00    	je     f880 <dlfree+0xad0>
    f7cf:	4c 39 cd             	cmp    %r9,%rbp
    f7d2:	0f 82 a0 f8 ff ff    	jb     f078 <dlfree+0x2c8>
    f7d8:	48 39 7d 20          	cmp    %rdi,0x20(%rbp)
    f7dc:	0f 84 b7 00 00 00    	je     f899 <dlfree+0xae9>
    f7e2:	31 c0                	xor    %eax,%eax
    f7e4:	48 89 45 28          	mov    %rax,0x28(%rbp)
    f7e8:	e9 1a f8 ff ff       	jmp    f007 <dlfree+0x257>
    f7ed:	4c 89 e7             	mov    %r12,%rdi
    f7f0:	48 f7 df             	neg    %rdi
    f7f3:	e8 e8 cc ff ff       	call   c4e0 <sbrk>
    f7f8:	31 ff                	xor    %edi,%edi
    f7fa:	49 89 c4             	mov    %rax,%r12
    f7fd:	e8 de cc ff ff       	call   c4e0 <sbrk>
    f802:	49 83 c4 01          	add    $0x1,%r12
    f806:	0f 84 fc fd ff ff    	je     f608 <dlfree+0x858>
    f80c:	4c 39 e8             	cmp    %r13,%rax
    f80f:	0f 83 f3 fd ff ff    	jae    f608 <dlfree+0x858>
    f815:	49 29 c5             	sub    %rax,%r13
    f818:	c7 05 0e b6 01 00 00 	movl   $0x0,0x1b60e(%rip)        # 2ae30 <malloc_global_mutex>
    f81f:	00 00 00 
    f822:	48 8b 43 28          	mov    0x28(%rbx),%rax
    f826:	48 8b 53 10          	mov    0x10(%rbx),%rdx
    f82a:	4c 29 6d 08          	sub    %r13,0x8(%rbp)
    f82e:	48 89 c6             	mov    %rax,%rsi
    f831:	4c 29 ea             	sub    %r13,%rdx
    f834:	48 8d 48 10          	lea    0x10(%rax),%rcx
    f838:	4c 29 ab 58 03 00 00 	sub    %r13,0x358(%rbx)
    f83f:	83 e6 0f             	and    $0xf,%esi
    f842:	74 09                	je     f84d <dlfree+0xa9d>
    f844:	48 f7 d9             	neg    %rcx
    f847:	48 89 ce             	mov    %rcx,%rsi
    f84a:	83 e6 0f             	and    $0xf,%esi
    f84d:	48 89 d1             	mov    %rdx,%rcx
    f850:	48 8d 3c 30          	lea    (%rax,%rsi,1),%rdi
    f854:	48 29 f1             	sub    %rsi,%rcx
    f857:	48 89 7b 28          	mov    %rdi,0x28(%rbx)
    f85b:	48 89 4b 10          	mov    %rcx,0x10(%rbx)
    f85f:	48 83 c9 01          	or     $0x1,%rcx
    f863:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
    f867:	48 c7 44 10 08 50 00 	movq   $0x50,0x8(%rax,%rdx,1)
    f86e:	00 00 
    f870:	48 8b 05 a9 b5 01 00 	mov    0x1b5a9(%rip),%rax        # 2ae20 <mparams+0x20>
    f877:	48 89 43 30          	mov    %rax,0x30(%rbx)
    f87b:	e9 30 f6 ff ff       	jmp    eeb0 <dlfree+0x100>
    f880:	31 ff                	xor    %edi,%edi
    f882:	4a 89 7c c3 08       	mov    %rdi,0x8(%rbx,%r8,8)
    f887:	e9 32 fe ff ff       	jmp    f6be <dlfree+0x90e>
    f88c:	45 31 db             	xor    %r11d,%r11d
    f88f:	4e 89 5c c3 08       	mov    %r11,0x8(%rbx,%r8,8)
    f894:	e9 08 fe ff ff       	jmp    f6a1 <dlfree+0x8f1>
    f899:	31 c9                	xor    %ecx,%ecx
    f89b:	48 89 4d 20          	mov    %rcx,0x20(%rbp)
    f89f:	e9 63 f7 ff ff       	jmp    f007 <dlfree+0x257>
    f8a4:	45 31 d2             	xor    %r10d,%r10d
    f8a7:	4d 89 53 20          	mov    %r10,0x20(%r11)
    f8ab:	e9 82 f5 ff ff       	jmp    ee32 <dlfree+0x82>

000000000000f8b0 <calloc>:
    f8b0:	f3 0f 1e fa          	endbr64 
    f8b4:	55                   	push   %rbp
    f8b5:	53                   	push   %rbx
    f8b6:	48 89 fb             	mov    %rdi,%rbx
    f8b9:	48 83 ec 08          	sub    $0x8,%rsp
    f8bd:	48 85 ff             	test   %rdi,%rdi
    f8c0:	74 1b                	je     f8dd <calloc+0x2d>
    f8c2:	48 89 f8             	mov    %rdi,%rax
    f8c5:	48 f7 e6             	mul    %rsi
    f8c8:	0f 90 c2             	seto   %dl
    f8cb:	48 09 fe             	or     %rdi,%rsi
    f8ce:	48 89 c3             	mov    %rax,%rbx
    f8d1:	0f b6 d2             	movzbl %dl,%edx
    f8d4:	48 81 fe ff ff 00 00 	cmp    $0xffff,%rsi
    f8db:	77 2b                	ja     f908 <calloc+0x58>
    f8dd:	48 89 df             	mov    %rbx,%rdi
    f8e0:	e8 db d6 ff ff       	call   cfc0 <dlmalloc>
    f8e5:	48 89 c5             	mov    %rax,%rbp
    f8e8:	48 85 c0             	test   %rax,%rax
    f8eb:	74 0d                	je     f8fa <calloc+0x4a>
    f8ed:	48 89 da             	mov    %rbx,%rdx
    f8f0:	31 f6                	xor    %esi,%esi
    f8f2:	48 89 c7             	mov    %rax,%rdi
    f8f5:	e8 a6 0e 00 00       	call   107a0 <memset>
    f8fa:	48 83 c4 08          	add    $0x8,%rsp
    f8fe:	48 89 e8             	mov    %rbp,%rax
    f901:	5b                   	pop    %rbx
    f902:	5d                   	pop    %rbp
    f903:	c3                   	ret    
    f904:	0f 1f 40 00          	nopl   0x0(%rax)
    f908:	48 85 d2             	test   %rdx,%rdx
    f90b:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    f912:	48 0f 45 d8          	cmovne %rax,%rbx
    f916:	eb c5                	jmp    f8dd <calloc+0x2d>
    f918:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    f91f:	00 

000000000000f920 <dlrealloc>:
    f920:	f3 0f 1e fa          	endbr64 
    f924:	41 57                	push   %r15
    f926:	41 56                	push   %r14
    f928:	41 55                	push   %r13
    f92a:	41 54                	push   %r12
    f92c:	55                   	push   %rbp
    f92d:	53                   	push   %rbx
    f92e:	48 89 f3             	mov    %rsi,%rbx
    f931:	48 83 ec 08          	sub    $0x8,%rsp
    f935:	48 85 ff             	test   %rdi,%rdi
    f938:	0f 84 f2 01 00 00    	je     fb30 <dlrealloc+0x210>
    f93e:	48 81 fe 7f ff ff ff 	cmp    $0xffffffffffffff7f,%rsi
    f945:	0f 87 05 02 00 00    	ja     fb50 <dlrealloc+0x230>
    f94b:	48 89 fd             	mov    %rdi,%rbp
    f94e:	48 85 f6             	test   %rsi,%rsi
    f951:	0f 84 11 02 00 00    	je     fb68 <dlrealloc+0x248>
    f957:	48 8d 46 1f          	lea    0x1f(%rsi),%rax
    f95b:	ba 20 00 00 00       	mov    $0x20,%edx
    f960:	4c 8d 6f f0          	lea    -0x10(%rdi),%r13
    f964:	48 8b 0d 95 b4 01 00 	mov    0x1b495(%rip),%rcx        # 2ae00 <mparams>
    f96b:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
    f96f:	48 83 fe 0e          	cmp    $0xe,%rsi
    f973:	48 8b 77 f8          	mov    -0x8(%rdi),%rsi
    f977:	48 0f 46 c2          	cmovbe %rdx,%rax
    f97b:	48 89 f2             	mov    %rsi,%rdx
    f97e:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    f982:	49 8d 7c 15 00       	lea    0x0(%r13,%rdx,1),%rdi
    f987:	4c 8b 27             	mov    (%rdi),%r12
    f98a:	49 31 cc             	xor    %rcx,%r12
    f98d:	49 3b 4c 24 40       	cmp    0x40(%r12),%rcx
    f992:	0f 85 90 01 00 00    	jne    fb28 <dlrealloc+0x208>
    f998:	41 f6 84 24 70 03 00 	testb  $0x2,0x370(%r12)
    f99f:	00 02 
    f9a1:	0f 85 89 00 00 00    	jne    fa30 <dlrealloc+0x110>
    f9a7:	4d 8b 44 24 18       	mov    0x18(%r12),%r8
    f9ac:	4d 39 c5             	cmp    %r8,%r13
    f9af:	0f 82 73 01 00 00    	jb     fb28 <dlrealloc+0x208>
    f9b5:	48 89 f1             	mov    %rsi,%rcx
    f9b8:	83 e1 03             	and    $0x3,%ecx
    f9bb:	48 83 f9 01          	cmp    $0x1,%rcx
    f9bf:	0f 84 63 01 00 00    	je     fb28 <dlrealloc+0x208>
    f9c5:	49 39 fd             	cmp    %rdi,%r13
    f9c8:	0f 83 5a 01 00 00    	jae    fb28 <dlrealloc+0x208>
    f9ce:	4c 8b 4f 08          	mov    0x8(%rdi),%r9
    f9d2:	41 f6 c1 01          	test   $0x1,%r9b
    f9d6:	0f 84 4c 01 00 00    	je     fb28 <dlrealloc+0x208>
    f9dc:	48 85 c9             	test   %rcx,%rcx
    f9df:	0f 84 8b 00 00 00    	je     fa70 <dlrealloc+0x150>
    f9e5:	48 39 c2             	cmp    %rax,%rdx
    f9e8:	0f 82 82 01 00 00    	jb     fb70 <dlrealloc+0x250>
    f9ee:	48 29 c2             	sub    %rax,%rdx
    f9f1:	49 89 d6             	mov    %rdx,%r14
    f9f4:	48 83 fa 1f          	cmp    $0x1f,%rdx
    f9f8:	0f 87 fa 02 00 00    	ja     fcf8 <dlrealloc+0x3d8>
    f9fe:	41 8b 8c 24 70 03 00 	mov    0x370(%r12),%ecx
    fa05:	00 
    fa06:	83 e1 02             	and    $0x2,%ecx
    fa09:	0f 85 31 02 00 00    	jne    fc40 <dlrealloc+0x320>
    fa0f:	4d 85 ed             	test   %r13,%r13
    fa12:	0f 84 94 00 00 00    	je     faac <dlrealloc+0x18c>
    fa18:	49 89 ec             	mov    %rbp,%r12
    fa1b:	48 83 c4 08          	add    $0x8,%rsp
    fa1f:	4c 89 e0             	mov    %r12,%rax
    fa22:	5b                   	pop    %rbx
    fa23:	5d                   	pop    %rbp
    fa24:	41 5c                	pop    %r12
    fa26:	41 5d                	pop    %r13
    fa28:	41 5e                	pop    %r14
    fa2a:	41 5f                	pop    %r15
    fa2c:	c3                   	ret    
    fa2d:	0f 1f 00             	nopl   (%rax)
    fa30:	49 8d 8c 24 74 03 00 	lea    0x374(%r12),%rcx
    fa37:	00 
    fa38:	ba 01 00 00 00       	mov    $0x1,%edx
    fa3d:	87 11                	xchg   %edx,(%rcx)
    fa3f:	85 d2                	test   %edx,%edx
    fa41:	0f 85 b9 00 00 00    	jne    fb00 <dlrealloc+0x1e0>
    fa47:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    fa4b:	4d 8b 44 24 18       	mov    0x18(%r12),%r8
    fa50:	48 89 f2             	mov    %rsi,%rdx
    fa53:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    fa57:	49 8d 7c 15 00       	lea    0x0(%r13,%rdx,1),%rdi
    fa5c:	4d 39 c5             	cmp    %r8,%r13
    fa5f:	0f 83 50 ff ff ff    	jae    f9b5 <dlrealloc+0x95>
    fa65:	e9 be 00 00 00       	jmp    fb28 <dlrealloc+0x208>
    fa6a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    fa70:	41 8b 8c 24 70 03 00 	mov    0x370(%r12),%ecx
    fa77:	00 
    fa78:	89 ce                	mov    %ecx,%esi
    fa7a:	83 e6 02             	and    $0x2,%esi
    fa7d:	48 3d f8 00 00 00    	cmp    $0xf8,%rax
    fa83:	76 1f                	jbe    faa4 <dlrealloc+0x184>
    fa85:	48 8d 78 08          	lea    0x8(%rax),%rdi
    fa89:	48 39 fa             	cmp    %rdi,%rdx
    fa8c:	72 16                	jb     faa4 <dlrealloc+0x184>
    fa8e:	48 29 c2             	sub    %rax,%rdx
    fa91:	48 8b 05 78 b3 01 00 	mov    0x1b378(%rip),%rax        # 2ae10 <mparams+0x10>
    fa98:	48 01 c0             	add    %rax,%rax
    fa9b:	48 39 d0             	cmp    %rdx,%rax
    fa9e:	0f 83 62 ff ff ff    	jae    fa06 <dlrealloc+0xe6>
    faa4:	85 f6                	test   %esi,%esi
    faa6:	0f 85 c4 01 00 00    	jne    fc70 <dlrealloc+0x350>
    faac:	48 89 df             	mov    %rbx,%rdi
    faaf:	e8 0c d5 ff ff       	call   cfc0 <dlmalloc>
    fab4:	49 89 c4             	mov    %rax,%r12
    fab7:	48 85 c0             	test   %rax,%rax
    faba:	0f 84 5b ff ff ff    	je     fa1b <dlrealloc+0xfb>
    fac0:	4c 8b 6d f8          	mov    -0x8(%rbp),%r13
    fac4:	48 89 ee             	mov    %rbp,%rsi
    fac7:	48 89 c7             	mov    %rax,%rdi
    faca:	49 83 e5 f8          	and    $0xfffffffffffffff8,%r13
    face:	49 83 ed 10          	sub    $0x10,%r13
    fad2:	4c 39 eb             	cmp    %r13,%rbx
    fad5:	49 0f 47 dd          	cmova  %r13,%rbx
    fad9:	48 89 da             	mov    %rbx,%rdx
    fadc:	e8 7f 0a 00 00       	call   10560 <memcpy>
    fae1:	48 89 ef             	mov    %rbp,%rdi
    fae4:	4c 89 ea             	mov    %r13,%rdx
    fae7:	31 f6                	xor    %esi,%esi
    fae9:	e8 b2 0c 00 00       	call   107a0 <memset>
    faee:	48 89 ef             	mov    %rbp,%rdi
    faf1:	e8 ba f2 ff ff       	call   edb0 <dlfree>
    faf6:	e9 20 ff ff ff       	jmp    fa1b <dlrealloc+0xfb>
    fafb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    fb00:	be 01 00 00 00       	mov    $0x1,%esi
    fb05:	0f 1f 00             	nopl   (%rax)
    fb08:	41 8b 94 24 74 03 00 	mov    0x374(%r12),%edx
    fb0f:	00 
    fb10:	85 d2                	test   %edx,%edx
    fb12:	75 f4                	jne    fb08 <dlrealloc+0x1e8>
    fb14:	89 f2                	mov    %esi,%edx
    fb16:	87 11                	xchg   %edx,(%rcx)
    fb18:	85 d2                	test   %edx,%edx
    fb1a:	75 ec                	jne    fb08 <dlrealloc+0x1e8>
    fb1c:	e9 26 ff ff ff       	jmp    fa47 <dlrealloc+0x127>
    fb21:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    fb28:	e8 0a 28 00 00       	call   12337 <abort>
    fb2d:	0f 1f 00             	nopl   (%rax)
    fb30:	48 83 c4 08          	add    $0x8,%rsp
    fb34:	48 89 f7             	mov    %rsi,%rdi
    fb37:	5b                   	pop    %rbx
    fb38:	5d                   	pop    %rbp
    fb39:	41 5c                	pop    %r12
    fb3b:	41 5d                	pop    %r13
    fb3d:	41 5e                	pop    %r14
    fb3f:	41 5f                	pop    %r15
    fb41:	e9 7a d4 ff ff       	jmp    cfc0 <dlmalloc>
    fb46:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    fb4d:	00 00 00 
    fb50:	e8 eb 11 00 00       	call   10d40 <__errno_location>
    fb55:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
    fb5b:	45 31 e4             	xor    %r12d,%r12d
    fb5e:	e9 b8 fe ff ff       	jmp    fa1b <dlrealloc+0xfb>
    fb63:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    fb68:	e8 43 f2 ff ff       	call   edb0 <dlfree>
    fb6d:	eb ec                	jmp    fb5b <dlrealloc+0x23b>
    fb6f:	90                   	nop
    fb70:	49 39 7c 24 28       	cmp    %rdi,0x28(%r12)
    fb75:	0f 84 d5 01 00 00    	je     fd50 <dlrealloc+0x430>
    fb7b:	49 39 7c 24 20       	cmp    %rdi,0x20(%r12)
    fb80:	0f 84 02 01 00 00    	je     fc88 <dlrealloc+0x368>
    fb86:	41 f6 c1 02          	test   $0x2,%r9b
    fb8a:	0f 85 c8 00 00 00    	jne    fc58 <dlrealloc+0x338>
    fb90:	49 83 e1 f8          	and    $0xfffffffffffffff8,%r9
    fb94:	4e 8d 1c 0a          	lea    (%rdx,%r9,1),%r11
    fb98:	49 39 c3             	cmp    %rax,%r11
    fb9b:	0f 82 b7 00 00 00    	jb     fc58 <dlrealloc+0x338>
    fba1:	4c 89 da             	mov    %r11,%rdx
    fba4:	4c 89 c9             	mov    %r9,%rcx
    fba7:	4c 8b 57 18          	mov    0x18(%rdi),%r10
    fbab:	48 29 c2             	sub    %rax,%rdx
    fbae:	48 c1 e9 03          	shr    $0x3,%rcx
    fbb2:	49 81 f9 f8 00 00 00 	cmp    $0xf8,%r9
    fbb9:	0f 87 ee 01 00 00    	ja     fdad <dlrealloc+0x48d>
    fbbf:	44 8d 74 09 09       	lea    0x9(%rcx,%rcx,1),%r14d
    fbc4:	4c 8b 4f 10          	mov    0x10(%rdi),%r9
    fbc8:	4f 8d 34 f4          	lea    (%r12,%r14,8),%r14
    fbcc:	4d 39 f1             	cmp    %r14,%r9
    fbcf:	0f 85 c6 03 00 00    	jne    ff9b <dlrealloc+0x67b>
    fbd5:	4d 39 d1             	cmp    %r10,%r9
    fbd8:	0f 84 7c 03 00 00    	je     ff5a <dlrealloc+0x63a>
    fbde:	4d 39 c2             	cmp    %r8,%r10
    fbe1:	0f 82 41 ff ff ff    	jb     fb28 <dlrealloc+0x208>
    fbe7:	49 39 7a 10          	cmp    %rdi,0x10(%r10)
    fbeb:	0f 85 37 ff ff ff    	jne    fb28 <dlrealloc+0x208>
    fbf1:	4d 89 51 18          	mov    %r10,0x18(%r9)
    fbf5:	4d 89 4a 10          	mov    %r9,0x10(%r10)
    fbf9:	48 8b 3d 00 b2 01 00 	mov    0x1b200(%rip),%rdi        # 2ae00 <mparams>
    fc00:	83 e6 01             	and    $0x1,%esi
    fc03:	4b 8d 4c 1d 00       	lea    0x0(%r13,%r11,1),%rcx
    fc08:	4c 31 e7             	xor    %r12,%rdi
    fc0b:	48 83 fa 1f          	cmp    $0x1f,%rdx
    fc0f:	0f 87 84 02 00 00    	ja     fe99 <dlrealloc+0x579>
    fc15:	4c 89 da             	mov    %r11,%rdx
    fc18:	48 09 f2             	or     %rsi,%rdx
    fc1b:	48 83 ca 02          	or     $0x2,%rdx
    fc1f:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
    fc23:	48 89 39             	mov    %rdi,(%rcx)
    fc26:	48 83 49 08 01       	orq    $0x1,0x8(%rcx)
    fc2b:	41 8b 8c 24 70 03 00 	mov    0x370(%r12),%ecx
    fc32:	00 
    fc33:	e9 ce fd ff ff       	jmp    fa06 <dlrealloc+0xe6>
    fc38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    fc3f:	00 
    fc40:	41 c7 84 24 74 03 00 	movl   $0x0,0x374(%r12)
    fc47:	00 00 00 00 00 
    fc4c:	e9 be fd ff ff       	jmp    fa0f <dlrealloc+0xef>
    fc51:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    fc58:	41 f6 84 24 70 03 00 	testb  $0x2,0x370(%r12)
    fc5f:	00 02 
    fc61:	0f 84 45 fe ff ff    	je     faac <dlrealloc+0x18c>
    fc67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    fc6e:	00 00 
    fc70:	41 c7 84 24 74 03 00 	movl   $0x0,0x374(%r12)
    fc77:	00 00 00 00 00 
    fc7c:	e9 2b fe ff ff       	jmp    faac <dlrealloc+0x18c>
    fc81:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    fc88:	49 03 54 24 08       	add    0x8(%r12),%rdx
    fc8d:	41 8b 8c 24 70 03 00 	mov    0x370(%r12),%ecx
    fc94:	00 
    fc95:	48 39 c2             	cmp    %rax,%rdx
    fc98:	0f 82 01 01 00 00    	jb     fd9f <dlrealloc+0x47f>
    fc9e:	4c 8b 05 5b b1 01 00 	mov    0x1b15b(%rip),%r8        # 2ae00 <mparams>
    fca5:	49 89 d1             	mov    %rdx,%r9
    fca8:	49 8d 7c 15 00       	lea    0x0(%r13,%rdx,1),%rdi
    fcad:	83 e6 01             	and    $0x1,%esi
    fcb0:	49 29 c1             	sub    %rax,%r9
    fcb3:	4d 31 e0             	xor    %r12,%r8
    fcb6:	49 83 f9 1f          	cmp    $0x1f,%r9
    fcba:	0f 86 af 01 00 00    	jbe    fe6f <dlrealloc+0x54f>
    fcc0:	49 8d 54 05 00       	lea    0x0(%r13,%rax,1),%rdx
    fcc5:	48 09 c6             	or     %rax,%rsi
    fcc8:	4c 89 c8             	mov    %r9,%rax
    fccb:	48 83 ce 02          	or     $0x2,%rsi
    fccf:	48 83 c8 01          	or     $0x1,%rax
    fcd3:	48 89 75 f8          	mov    %rsi,-0x8(%rbp)
    fcd7:	4c 89 02             	mov    %r8,(%rdx)
    fcda:	48 89 42 08          	mov    %rax,0x8(%rdx)
    fcde:	4c 89 0f             	mov    %r9,(%rdi)
    fce1:	48 83 67 08 fe       	andq   $0xfffffffffffffffe,0x8(%rdi)
    fce6:	4d 89 4c 24 08       	mov    %r9,0x8(%r12)
    fceb:	49 89 54 24 20       	mov    %rdx,0x20(%r12)
    fcf0:	e9 11 fd ff ff       	jmp    fa06 <dlrealloc+0xe6>
    fcf5:	0f 1f 00             	nopl   (%rax)
    fcf8:	83 e6 01             	and    $0x1,%esi
    fcfb:	4d 8d 7c 05 00       	lea    0x0(%r13,%rax,1),%r15
    fd00:	48 83 ca 03          	or     $0x3,%rdx
    fd04:	48 09 c6             	or     %rax,%rsi
    fd07:	48 8b 05 f2 b0 01 00 	mov    0x1b0f2(%rip),%rax        # 2ae00 <mparams>
    fd0e:	48 83 ce 02          	or     $0x2,%rsi
    fd12:	4c 31 e0             	xor    %r12,%rax
    fd15:	48 89 75 f8          	mov    %rsi,-0x8(%rbp)
    fd19:	31 f6                	xor    %esi,%esi
    fd1b:	49 89 57 08          	mov    %rdx,0x8(%r15)
    fd1f:	49 8d 56 f0          	lea    -0x10(%r14),%rdx
    fd23:	49 89 07             	mov    %rax,(%r15)
    fd26:	48 83 4f 08 01       	orq    $0x1,0x8(%rdi)
    fd2b:	48 89 07             	mov    %rax,(%rdi)
    fd2e:	49 8d 7f 10          	lea    0x10(%r15),%rdi
    fd32:	e8 69 0a 00 00       	call   107a0 <memset>
    fd37:	4c 89 f2             	mov    %r14,%rdx
    fd3a:	4c 89 fe             	mov    %r15,%rsi
    fd3d:	4c 89 e7             	mov    %r12,%rdi
    fd40:	e8 5b c9 ff ff       	call   c6a0 <dispose_chunk>
    fd45:	e9 b4 fc ff ff       	jmp    f9fe <dlrealloc+0xde>
    fd4a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    fd50:	49 03 54 24 10       	add    0x10(%r12),%rdx
    fd55:	41 8b 8c 24 70 03 00 	mov    0x370(%r12),%ecx
    fd5c:	00 
    fd5d:	48 39 d0             	cmp    %rdx,%rax
    fd60:	73 3d                	jae    fd9f <dlrealloc+0x47f>
    fd62:	83 e6 01             	and    $0x1,%esi
    fd65:	49 8d 7c 05 00       	lea    0x0(%r13,%rax,1),%rdi
    fd6a:	48 29 c2             	sub    %rax,%rdx
    fd6d:	48 09 c6             	or     %rax,%rsi
    fd70:	48 8b 05 89 b0 01 00 	mov    0x1b089(%rip),%rax        # 2ae00 <mparams>
    fd77:	48 83 ce 02          	or     $0x2,%rsi
    fd7b:	4c 31 e0             	xor    %r12,%rax
    fd7e:	48 89 75 f8          	mov    %rsi,-0x8(%rbp)
    fd82:	48 89 07             	mov    %rax,(%rdi)
    fd85:	48 89 d0             	mov    %rdx,%rax
    fd88:	48 83 c8 01          	or     $0x1,%rax
    fd8c:	48 89 47 08          	mov    %rax,0x8(%rdi)
    fd90:	49 89 7c 24 28       	mov    %rdi,0x28(%r12)
    fd95:	49 89 54 24 10       	mov    %rdx,0x10(%r12)
    fd9a:	e9 67 fc ff ff       	jmp    fa06 <dlrealloc+0xe6>
    fd9f:	83 e1 02             	and    $0x2,%ecx
    fda2:	0f 84 04 fd ff ff    	je     faac <dlrealloc+0x18c>
    fda8:	e9 c3 fe ff ff       	jmp    fc70 <dlrealloc+0x350>
    fdad:	4c 8b 7f 30          	mov    0x30(%rdi),%r15
    fdb1:	49 39 fa             	cmp    %rdi,%r10
    fdb4:	0f 84 1d 01 00 00    	je     fed7 <dlrealloc+0x5b7>
    fdba:	48 8b 4f 10          	mov    0x10(%rdi),%rcx
    fdbe:	4c 39 c1             	cmp    %r8,%rcx
    fdc1:	0f 82 61 fd ff ff    	jb     fb28 <dlrealloc+0x208>
    fdc7:	48 39 79 18          	cmp    %rdi,0x18(%rcx)
    fdcb:	0f 85 57 fd ff ff    	jne    fb28 <dlrealloc+0x208>
    fdd1:	49 39 7a 10          	cmp    %rdi,0x10(%r10)
    fdd5:	0f 85 4d fd ff ff    	jne    fb28 <dlrealloc+0x208>
    fddb:	4c 89 51 18          	mov    %r10,0x18(%rcx)
    fddf:	49 89 4a 10          	mov    %rcx,0x10(%r10)
    fde3:	4d 85 ff             	test   %r15,%r15
    fde6:	0f 84 0d fe ff ff    	je     fbf9 <dlrealloc+0x2d9>
    fdec:	44 8b 4f 38          	mov    0x38(%rdi),%r9d
    fdf0:	4c 89 c9             	mov    %r9,%rcx
    fdf3:	4d 8d 71 4a          	lea    0x4a(%r9),%r14
    fdf7:	4b 3b bc cc 58 02 00 	cmp    0x258(%r12,%r9,8),%rdi
    fdfe:	00 
    fdff:	0f 84 65 01 00 00    	je     ff6a <dlrealloc+0x64a>
    fe05:	4d 39 c7             	cmp    %r8,%r15
    fe08:	0f 82 1a fd ff ff    	jb     fb28 <dlrealloc+0x208>
    fe0e:	49 3b 7f 20          	cmp    0x20(%r15),%rdi
    fe12:	0f 84 a9 01 00 00    	je     ffc1 <dlrealloc+0x6a1>
    fe18:	4d 89 57 28          	mov    %r10,0x28(%r15)
    fe1c:	4d 85 d2             	test   %r10,%r10
    fe1f:	0f 84 d4 fd ff ff    	je     fbf9 <dlrealloc+0x2d9>
    fe25:	4d 39 c2             	cmp    %r8,%r10
    fe28:	0f 82 fa fc ff ff    	jb     fb28 <dlrealloc+0x208>
    fe2e:	48 8b 4f 20          	mov    0x20(%rdi),%rcx
    fe32:	4d 89 7a 30          	mov    %r15,0x30(%r10)
    fe36:	48 85 c9             	test   %rcx,%rcx
    fe39:	74 11                	je     fe4c <dlrealloc+0x52c>
    fe3b:	4c 39 c1             	cmp    %r8,%rcx
    fe3e:	0f 82 e4 fc ff ff    	jb     fb28 <dlrealloc+0x208>
    fe44:	49 89 4a 20          	mov    %rcx,0x20(%r10)
    fe48:	4c 89 51 30          	mov    %r10,0x30(%rcx)
    fe4c:	48 8b 4f 28          	mov    0x28(%rdi),%rcx
    fe50:	48 85 c9             	test   %rcx,%rcx
    fe53:	0f 84 a0 fd ff ff    	je     fbf9 <dlrealloc+0x2d9>
    fe59:	4c 39 c1             	cmp    %r8,%rcx
    fe5c:	0f 82 c6 fc ff ff    	jb     fb28 <dlrealloc+0x208>
    fe62:	49 89 4a 28          	mov    %rcx,0x28(%r10)
    fe66:	4c 89 51 30          	mov    %r10,0x30(%rcx)
    fe6a:	e9 8a fd ff ff       	jmp    fbf9 <dlrealloc+0x2d9>
    fe6f:	48 09 f2             	or     %rsi,%rdx
    fe72:	48 83 ca 02          	or     $0x2,%rdx
    fe76:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
    fe7a:	4c 89 07             	mov    %r8,(%rdi)
    fe7d:	48 83 4f 08 01       	orq    $0x1,0x8(%rdi)
    fe82:	49 c7 44 24 08 00 00 	movq   $0x0,0x8(%r12)
    fe89:	00 00 
    fe8b:	49 c7 44 24 20 00 00 	movq   $0x0,0x20(%r12)
    fe92:	00 00 
    fe94:	e9 6d fb ff ff       	jmp    fa06 <dlrealloc+0xe6>
    fe99:	4d 8d 44 05 00       	lea    0x0(%r13,%rax,1),%r8
    fe9e:	48 09 f0             	or     %rsi,%rax
    fea1:	48 83 c8 02          	or     $0x2,%rax
    fea5:	4c 89 c6             	mov    %r8,%rsi
    fea8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    feac:	48 89 d0             	mov    %rdx,%rax
    feaf:	48 83 c8 03          	or     $0x3,%rax
    feb3:	49 89 38             	mov    %rdi,(%r8)
    feb6:	49 89 40 08          	mov    %rax,0x8(%r8)
    feba:	48 83 49 08 01       	orq    $0x1,0x8(%rcx)
    febf:	48 89 39             	mov    %rdi,(%rcx)
    fec2:	4c 89 e7             	mov    %r12,%rdi
    fec5:	e8 d6 c7 ff ff       	call   c6a0 <dispose_chunk>
    feca:	41 8b 8c 24 70 03 00 	mov    0x370(%r12),%ecx
    fed1:	00 
    fed2:	e9 2f fb ff ff       	jmp    fa06 <dlrealloc+0xe6>
    fed7:	48 8b 4f 28          	mov    0x28(%rdi),%rcx
    fedb:	4c 8d 4f 28          	lea    0x28(%rdi),%r9
    fedf:	48 85 c9             	test   %rcx,%rcx
    fee2:	0f 84 a1 00 00 00    	je     ff89 <dlrealloc+0x669>
    fee8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    feef:	00 
    fef0:	4d 89 ce             	mov    %r9,%r14
    fef3:	49 89 ca             	mov    %rcx,%r10
    fef6:	4c 8d 49 28          	lea    0x28(%rcx),%r9
    fefa:	48 8b 49 28          	mov    0x28(%rcx),%rcx
    fefe:	48 85 c9             	test   %rcx,%rcx
    ff01:	75 ed                	jne    fef0 <dlrealloc+0x5d0>
    ff03:	49 8b 4a 20          	mov    0x20(%r10),%rcx
    ff07:	4d 8d 4a 20          	lea    0x20(%r10),%r9
    ff0b:	48 85 c9             	test   %rcx,%rcx
    ff0e:	75 e0                	jne    fef0 <dlrealloc+0x5d0>
    ff10:	4d 39 c6             	cmp    %r8,%r14
    ff13:	0f 82 0f fc ff ff    	jb     fb28 <dlrealloc+0x208>
    ff19:	49 c7 06 00 00 00 00 	movq   $0x0,(%r14)
    ff20:	4d 85 ff             	test   %r15,%r15
    ff23:	0f 84 d0 fc ff ff    	je     fbf9 <dlrealloc+0x2d9>
    ff29:	8b 4f 38             	mov    0x38(%rdi),%ecx
    ff2c:	4c 8d 49 4a          	lea    0x4a(%rcx),%r9
    ff30:	49 3b bc cc 58 02 00 	cmp    0x258(%r12,%rcx,8),%rdi
    ff37:	00 
    ff38:	0f 84 8c 00 00 00    	je     ffca <dlrealloc+0x6aa>
    ff3e:	4d 39 c7             	cmp    %r8,%r15
    ff41:	0f 82 e1 fb ff ff    	jb     fb28 <dlrealloc+0x208>
    ff47:	49 3b 7f 20          	cmp    0x20(%r15),%rdi
    ff4b:	0f 84 bb 00 00 00    	je     1000c <dlrealloc+0x6ec>
    ff51:	4d 89 57 28          	mov    %r10,0x28(%r15)
    ff55:	e9 cb fe ff ff       	jmp    fe25 <dlrealloc+0x505>
    ff5a:	bf fe ff ff ff       	mov    $0xfffffffe,%edi
    ff5f:	d3 c7                	rol    %cl,%edi
    ff61:	41 21 3c 24          	and    %edi,(%r12)
    ff65:	e9 8f fc ff ff       	jmp    fbf9 <dlrealloc+0x2d9>
    ff6a:	4f 89 54 f4 08       	mov    %r10,0x8(%r12,%r14,8)
    ff6f:	4d 85 d2             	test   %r10,%r10
    ff72:	0f 85 ad fe ff ff    	jne    fe25 <dlrealloc+0x505>
    ff78:	bf fe ff ff ff       	mov    $0xfffffffe,%edi
    ff7d:	d3 c7                	rol    %cl,%edi
    ff7f:	41 21 7c 24 04       	and    %edi,0x4(%r12)
    ff84:	e9 70 fc ff ff       	jmp    fbf9 <dlrealloc+0x2d9>
    ff89:	48 8b 4f 20          	mov    0x20(%rdi),%rcx
    ff8d:	48 85 c9             	test   %rcx,%rcx
    ff90:	74 42                	je     ffd4 <dlrealloc+0x6b4>
    ff92:	4c 8d 4f 20          	lea    0x20(%rdi),%r9
    ff96:	e9 55 ff ff ff       	jmp    fef0 <dlrealloc+0x5d0>
    ff9b:	4d 39 c1             	cmp    %r8,%r9
    ff9e:	0f 82 84 fb ff ff    	jb     fb28 <dlrealloc+0x208>
    ffa4:	49 39 79 18          	cmp    %rdi,0x18(%r9)
    ffa8:	0f 85 7a fb ff ff    	jne    fb28 <dlrealloc+0x208>
    ffae:	4d 39 d1             	cmp    %r10,%r9
    ffb1:	74 a7                	je     ff5a <dlrealloc+0x63a>
    ffb3:	4d 39 d6             	cmp    %r10,%r14
    ffb6:	0f 84 35 fc ff ff    	je     fbf1 <dlrealloc+0x2d1>
    ffbc:	e9 1d fc ff ff       	jmp    fbde <dlrealloc+0x2be>
    ffc1:	4d 89 57 20          	mov    %r10,0x20(%r15)
    ffc5:	e9 52 fe ff ff       	jmp    fe1c <dlrealloc+0x4fc>
    ffca:	4f 89 54 cc 08       	mov    %r10,0x8(%r12,%r9,8)
    ffcf:	e9 51 fe ff ff       	jmp    fe25 <dlrealloc+0x505>
    ffd4:	4d 85 ff             	test   %r15,%r15
    ffd7:	0f 84 1c fc ff ff    	je     fbf9 <dlrealloc+0x2d9>
    ffdd:	44 8b 4f 38          	mov    0x38(%rdi),%r9d
    ffe1:	4c 89 c9             	mov    %r9,%rcx
    ffe4:	4d 8d 51 4a          	lea    0x4a(%r9),%r10
    ffe8:	4b 3b bc cc 58 02 00 	cmp    0x258(%r12,%r9,8),%rdi
    ffef:	00 
    fff0:	74 2e                	je     10020 <dlrealloc+0x700>
    fff2:	4d 39 c7             	cmp    %r8,%r15
    fff5:	0f 82 2d fb ff ff    	jb     fb28 <dlrealloc+0x208>
    fffb:	49 39 7f 20          	cmp    %rdi,0x20(%r15)
    ffff:	74 14                	je     10015 <dlrealloc+0x6f5>
   10001:	31 c9                	xor    %ecx,%ecx
   10003:	49 89 4f 28          	mov    %rcx,0x28(%r15)
   10007:	e9 ed fb ff ff       	jmp    fbf9 <dlrealloc+0x2d9>
   1000c:	4d 89 57 20          	mov    %r10,0x20(%r15)
   10010:	e9 10 fe ff ff       	jmp    fe25 <dlrealloc+0x505>
   10015:	31 ff                	xor    %edi,%edi
   10017:	49 89 7f 20          	mov    %rdi,0x20(%r15)
   1001b:	e9 d9 fb ff ff       	jmp    fbf9 <dlrealloc+0x2d9>
   10020:	45 31 c0             	xor    %r8d,%r8d
   10023:	4f 89 44 d4 08       	mov    %r8,0x8(%r12,%r10,8)
   10028:	e9 4b ff ff ff       	jmp    ff78 <dlrealloc+0x658>
   1002d:	0f 1f 00             	nopl   (%rax)

0000000000010030 <dlmemalign>:
   10030:	f3 0f 1e fa          	endbr64 
   10034:	48 83 ff 10          	cmp    $0x10,%rdi
   10038:	76 06                	jbe    10040 <dlmemalign+0x10>
   1003a:	e9 d1 ea ff ff       	jmp    eb10 <internal_memalign.constprop.0>
   1003f:	90                   	nop
   10040:	48 89 f7             	mov    %rsi,%rdi
   10043:	e9 78 cf ff ff       	jmp    cfc0 <dlmalloc>
   10048:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1004f:	00 

0000000000010050 <dlposix_memalign>:
   10050:	f3 0f 1e fa          	endbr64 
   10054:	53                   	push   %rbx
   10055:	48 89 fb             	mov    %rdi,%rbx
   10058:	48 89 f7             	mov    %rsi,%rdi
   1005b:	48 89 d6             	mov    %rdx,%rsi
   1005e:	48 83 ff 10          	cmp    $0x10,%rdi
   10062:	74 6c                	je     100d0 <dlposix_memalign+0x80>
   10064:	48 89 f9             	mov    %rdi,%rcx
   10067:	49 89 f8             	mov    %rdi,%r8
   1006a:	ba 16 00 00 00       	mov    $0x16,%edx
   1006f:	48 c1 e9 03          	shr    $0x3,%rcx
   10073:	41 83 e0 07          	and    $0x7,%r8d
   10077:	48 83 ff 07          	cmp    $0x7,%rdi
   1007b:	76 36                	jbe    100b3 <dlposix_memalign+0x63>
   1007d:	48 8d 41 ff          	lea    -0x1(%rcx),%rax
   10081:	48 21 c8             	and    %rcx,%rax
   10084:	4c 09 c0             	or     %r8,%rax
   10087:	75 2a                	jne    100b3 <dlposix_memalign+0x63>
   10089:	48 c7 c0 80 ff ff ff 	mov    $0xffffffffffffff80,%rax
   10090:	48 29 f8             	sub    %rdi,%rax
   10093:	48 39 f0             	cmp    %rsi,%rax
   10096:	72 28                	jb     100c0 <dlposix_memalign+0x70>
   10098:	b8 20 00 00 00       	mov    $0x20,%eax
   1009d:	48 39 c7             	cmp    %rax,%rdi
   100a0:	48 0f 42 f8          	cmovb  %rax,%rdi
   100a4:	e8 67 ea ff ff       	call   eb10 <internal_memalign.constprop.0>
   100a9:	48 85 c0             	test   %rax,%rax
   100ac:	74 12                	je     100c0 <dlposix_memalign+0x70>
   100ae:	48 89 03             	mov    %rax,(%rbx)
   100b1:	31 d2                	xor    %edx,%edx
   100b3:	89 d0                	mov    %edx,%eax
   100b5:	5b                   	pop    %rbx
   100b6:	c3                   	ret    
   100b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   100be:	00 00 
   100c0:	ba 0c 00 00 00       	mov    $0xc,%edx
   100c5:	5b                   	pop    %rbx
   100c6:	89 d0                	mov    %edx,%eax
   100c8:	c3                   	ret    
   100c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   100d0:	48 89 d7             	mov    %rdx,%rdi
   100d3:	e8 e8 ce ff ff       	call   cfc0 <dlmalloc>
   100d8:	eb cf                	jmp    100a9 <dlposix_memalign+0x59>
   100da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000100e0 <dlmallinfo>:
   100e0:	f3 0f 1e fa          	endbr64 
   100e4:	41 55                	push   %r13
   100e6:	41 54                	push   %r12
   100e8:	55                   	push   %rbp
   100e9:	53                   	push   %rbx
   100ea:	48 89 fb             	mov    %rdi,%rbx
   100ed:	48 83 ec 08          	sub    $0x8,%rsp
   100f1:	48 83 3d 07 ad 01 00 	cmpq   $0x0,0x1ad07(%rip)        # 2ae00 <mparams>
   100f8:	00 
   100f9:	0f 84 89 01 00 00    	je     10288 <dlmallinfo+0x1a8>
   100ff:	44 8b 1d aa ac 01 00 	mov    0x1acaa(%rip),%r11d        # 2adb0 <_gm_+0x370>
   10106:	41 83 e3 02          	and    $0x2,%r11d
   1010a:	0f 85 16 01 00 00    	jne    10226 <dlmallinfo+0x146>
   10110:	48 8b 3d 51 a9 01 00 	mov    0x1a951(%rip),%rdi        # 2aa68 <_gm_+0x28>
   10117:	48 85 ff             	test   %rdi,%rdi
   1011a:	0f 84 f4 00 00 00    	je     10214 <dlmallinfo+0x134>
   10120:	48 8b 2d 29 a9 01 00 	mov    0x1a929(%rip),%rbp        # 2aa50 <_gm_+0x10>
   10127:	41 b9 01 00 00 00    	mov    $0x1,%r9d
   1012d:	4c 8d 15 84 ac 01 00 	lea    0x1ac84(%rip),%r10        # 2adb8 <_gm_+0x378>
   10134:	4c 8d 45 50          	lea    0x50(%rbp),%r8
   10138:	4c 89 c1             	mov    %r8,%rcx
   1013b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10140:	49 8b 32             	mov    (%r10),%rsi
   10143:	48 8d 46 10          	lea    0x10(%rsi),%rax
   10147:	40 f6 c6 0f          	test   $0xf,%sil
   1014b:	0f 84 af 00 00 00    	je     10200 <dlmallinfo+0x120>
   10151:	48 f7 d8             	neg    %rax
   10154:	83 e0 0f             	and    $0xf,%eax
   10157:	48 01 f0             	add    %rsi,%rax
   1015a:	72 4a                	jb     101a6 <dlmallinfo+0xc6>
   1015c:	4d 8b 6a 08          	mov    0x8(%r10),%r13
   10160:	49 01 f5             	add    %rsi,%r13
   10163:	4c 39 e8             	cmp    %r13,%rax
   10166:	72 39                	jb     101a1 <dlmallinfo+0xc1>
   10168:	eb 3c                	jmp    101a6 <dlmallinfo+0xc6>
   1016a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10170:	48 8b 50 08          	mov    0x8(%rax),%rdx
   10174:	48 83 fa 0b          	cmp    $0xb,%rdx
   10178:	74 2c                	je     101a6 <dlmallinfo+0xc6>
   1017a:	49 89 d4             	mov    %rdx,%r12
   1017d:	83 e2 03             	and    $0x3,%edx
   10180:	49 83 e4 f8          	and    $0xfffffffffffffff8,%r12
   10184:	4c 01 e1             	add    %r12,%rcx
   10187:	48 83 fa 01          	cmp    $0x1,%rdx
   1018b:	75 07                	jne    10194 <dlmallinfo+0xb4>
   1018d:	4d 01 e0             	add    %r12,%r8
   10190:	49 83 c1 01          	add    $0x1,%r9
   10194:	4c 01 e0             	add    %r12,%rax
   10197:	48 39 f0             	cmp    %rsi,%rax
   1019a:	72 0a                	jb     101a6 <dlmallinfo+0xc6>
   1019c:	4c 39 e8             	cmp    %r13,%rax
   1019f:	73 05                	jae    101a6 <dlmallinfo+0xc6>
   101a1:	48 39 f8             	cmp    %rdi,%rax
   101a4:	75 ca                	jne    10170 <dlmallinfo+0x90>
   101a6:	4d 8b 52 10          	mov    0x10(%r10),%r10
   101aa:	4d 85 d2             	test   %r10,%r10
   101ad:	75 91                	jne    10140 <dlmallinfo+0x60>
   101af:	48 8b 05 e2 ab 01 00 	mov    0x1abe2(%rip),%rax        # 2ad98 <_gm_+0x358>
   101b6:	89 ca                	mov    %ecx,%edx
   101b8:	89 c6                	mov    %eax,%esi
   101ba:	44 29 c0             	sub    %r8d,%eax
   101bd:	29 ce                	sub    %ecx,%esi
   101bf:	8b 0d db ab 01 00    	mov    0x1abdb(%rip),%ecx        # 2ada0 <_gm_+0x360>
   101c5:	45 85 db             	test   %r11d,%r11d
   101c8:	75 3e                	jne    10208 <dlmallinfo+0x128>
   101ca:	89 43 1c             	mov    %eax,0x1c(%rbx)
   101cd:	48 89 d8             	mov    %rbx,%rax
   101d0:	89 13                	mov    %edx,(%rbx)
   101d2:	44 89 4b 04          	mov    %r9d,0x4(%rbx)
   101d6:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
   101dd:	00 
   101de:	89 73 10             	mov    %esi,0x10(%rbx)
   101e1:	89 4b 14             	mov    %ecx,0x14(%rbx)
   101e4:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%rbx)
   101eb:	44 89 43 20          	mov    %r8d,0x20(%rbx)
   101ef:	89 6b 24             	mov    %ebp,0x24(%rbx)
   101f2:	48 83 c4 08          	add    $0x8,%rsp
   101f6:	5b                   	pop    %rbx
   101f7:	5d                   	pop    %rbp
   101f8:	41 5c                	pop    %r12
   101fa:	41 5d                	pop    %r13
   101fc:	c3                   	ret    
   101fd:	0f 1f 00             	nopl   (%rax)
   10200:	48 89 f0             	mov    %rsi,%rax
   10203:	e9 54 ff ff ff       	jmp    1015c <dlmallinfo+0x7c>
   10208:	c7 05 a2 ab 01 00 00 	movl   $0x0,0x1aba2(%rip)        # 2adb4 <_gm_+0x374>
   1020f:	00 00 00 
   10212:	eb b6                	jmp    101ca <dlmallinfo+0xea>
   10214:	31 ed                	xor    %ebp,%ebp
   10216:	45 31 c0             	xor    %r8d,%r8d
   10219:	31 c0                	xor    %eax,%eax
   1021b:	31 c9                	xor    %ecx,%ecx
   1021d:	31 f6                	xor    %esi,%esi
   1021f:	45 31 c9             	xor    %r9d,%r9d
   10222:	31 d2                	xor    %edx,%edx
   10224:	eb a4                	jmp    101ca <dlmallinfo+0xea>
   10226:	b8 01 00 00 00       	mov    $0x1,%eax
   1022b:	87 05 83 ab 01 00    	xchg   %eax,0x1ab83(%rip)        # 2adb4 <_gm_+0x374>
   10231:	ba 01 00 00 00       	mov    $0x1,%edx
   10236:	85 c0                	test   %eax,%eax
   10238:	75 36                	jne    10270 <dlmallinfo+0x190>
   1023a:	44 8b 1d 6f ab 01 00 	mov    0x1ab6f(%rip),%r11d        # 2adb0 <_gm_+0x370>
   10241:	48 8b 3d 20 a8 01 00 	mov    0x1a820(%rip),%rdi        # 2aa68 <_gm_+0x28>
   10248:	41 83 e3 02          	and    $0x2,%r11d
   1024c:	48 85 ff             	test   %rdi,%rdi
   1024f:	0f 85 cb fe ff ff    	jne    10120 <dlmallinfo+0x40>
   10255:	31 ed                	xor    %ebp,%ebp
   10257:	45 31 c0             	xor    %r8d,%r8d
   1025a:	31 c0                	xor    %eax,%eax
   1025c:	31 c9                	xor    %ecx,%ecx
   1025e:	31 f6                	xor    %esi,%esi
   10260:	45 31 c9             	xor    %r9d,%r9d
   10263:	31 d2                	xor    %edx,%edx
   10265:	e9 5b ff ff ff       	jmp    101c5 <dlmallinfo+0xe5>
   1026a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10270:	8b 05 3e ab 01 00    	mov    0x1ab3e(%rip),%eax        # 2adb4 <_gm_+0x374>
   10276:	85 c0                	test   %eax,%eax
   10278:	75 f6                	jne    10270 <dlmallinfo+0x190>
   1027a:	89 d0                	mov    %edx,%eax
   1027c:	87 05 32 ab 01 00    	xchg   %eax,0x1ab32(%rip)        # 2adb4 <_gm_+0x374>
   10282:	85 c0                	test   %eax,%eax
   10284:	75 ea                	jne    10270 <dlmallinfo+0x190>
   10286:	eb b2                	jmp    1023a <dlmallinfo+0x15a>
   10288:	e8 43 cc ff ff       	call   ced0 <init_mparams.isra.0>
   1028d:	e9 6d fe ff ff       	jmp    100ff <dlmallinfo+0x1f>
   10292:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   10299:	00 00 00 
   1029c:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000102a0 <__memcpy.part.0>:
   102a0:	48 89 f0             	mov    %rsi,%rax
   102a3:	48 89 f1             	mov    %rsi,%rcx
   102a6:	48 09 f8             	or     %rdi,%rax
   102a9:	a8 07                	test   $0x7,%al
   102ab:	74 43                	je     102f0 <__memcpy.part.0+0x50>
   102ad:	48 89 f0             	mov    %rsi,%rax
   102b0:	48 31 f8             	xor    %rdi,%rax
   102b3:	a8 07                	test   $0x7,%al
   102b5:	75 0a                	jne    102c1 <__memcpy.part.0+0x21>
   102b7:	48 83 fa 07          	cmp    $0x7,%rdx
   102bb:	0f 87 87 00 00 00    	ja     10348 <__memcpy.part.0+0xa8>
   102c1:	45 31 c9             	xor    %r9d,%r9d
   102c4:	45 31 c0             	xor    %r8d,%r8d
   102c7:	45 31 d2             	xor    %r10d,%r10d
   102ca:	31 c0                	xor    %eax,%eax
   102cc:	0f 1f 40 00          	nopl   0x0(%rax)
   102d0:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
   102d4:	40 88 34 07          	mov    %sil,(%rdi,%rax,1)
   102d8:	48 83 c0 01          	add    $0x1,%rax
   102dc:	48 39 c2             	cmp    %rax,%rdx
   102df:	75 ef                	jne    102d0 <__memcpy.part.0+0x30>
   102e1:	48 01 d1             	add    %rdx,%rcx
   102e4:	48 01 d7             	add    %rdx,%rdi
   102e7:	4c 89 d2             	mov    %r10,%rdx
   102ea:	eb 12                	jmp    102fe <__memcpy.part.0+0x5e>
   102ec:	0f 1f 40 00          	nopl   0x0(%rax)
   102f0:	49 89 d0             	mov    %rdx,%r8
   102f3:	49 89 d1             	mov    %rdx,%r9
   102f6:	49 c1 e8 03          	shr    $0x3,%r8
   102fa:	41 83 e1 07          	and    $0x7,%r9d
   102fe:	48 83 fa 07          	cmp    $0x7,%rdx
   10302:	76 23                	jbe    10327 <__memcpy.part.0+0x87>
   10304:	4a 8d 34 c5 00 00 00 	lea    0x0(,%r8,8),%rsi
   1030b:	00 
   1030c:	31 c0                	xor    %eax,%eax
   1030e:	66 90                	xchg   %ax,%ax
   10310:	48 8b 14 01          	mov    (%rcx,%rax,1),%rdx
   10314:	48 89 14 07          	mov    %rdx,(%rdi,%rax,1)
   10318:	48 83 c0 08          	add    $0x8,%rax
   1031c:	48 39 f0             	cmp    %rsi,%rax
   1031f:	75 ef                	jne    10310 <__memcpy.part.0+0x70>
   10321:	48 01 c1             	add    %rax,%rcx
   10324:	48 01 c7             	add    %rax,%rdi
   10327:	4d 85 c9             	test   %r9,%r9
   1032a:	74 14                	je     10340 <__memcpy.part.0+0xa0>
   1032c:	31 c0                	xor    %eax,%eax
   1032e:	66 90                	xchg   %ax,%ax
   10330:	0f b6 14 01          	movzbl (%rcx,%rax,1),%edx
   10334:	88 14 07             	mov    %dl,(%rdi,%rax,1)
   10337:	48 83 c0 01          	add    $0x1,%rax
   1033b:	49 39 c1             	cmp    %rax,%r9
   1033e:	75 f0                	jne    10330 <__memcpy.part.0+0x90>
   10340:	c3                   	ret    
   10341:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10348:	48 89 f0             	mov    %rsi,%rax
   1034b:	83 e0 07             	and    $0x7,%eax
   1034e:	4c 8d 54 10 f8       	lea    -0x8(%rax,%rdx,1),%r10
   10353:	ba 08 00 00 00       	mov    $0x8,%edx
   10358:	4d 89 d0             	mov    %r10,%r8
   1035b:	4d 89 d1             	mov    %r10,%r9
   1035e:	48 29 c2             	sub    %rax,%rdx
   10361:	49 c1 e8 03          	shr    $0x3,%r8
   10365:	41 83 e1 07          	and    $0x7,%r9d
   10369:	e9 5c ff ff ff       	jmp    102ca <__memcpy.part.0+0x2a>
   1036e:	66 90                	xchg   %ax,%ax

0000000000010370 <__memcpy>:
   10370:	f3 0f 1e fa          	endbr64 
   10374:	49 89 fb             	mov    %rdi,%r11
   10377:	48 85 d2             	test   %rdx,%rdx
   1037a:	74 0a                	je     10386 <__memcpy+0x16>
   1037c:	48 39 f7             	cmp    %rsi,%rdi
   1037f:	74 05                	je     10386 <__memcpy+0x16>
   10381:	e8 1a ff ff ff       	call   102a0 <__memcpy.part.0>
   10386:	4c 89 d8             	mov    %r11,%rax
   10389:	c3                   	ret    
   1038a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000010390 <memcpy_verw>:
   10390:	f3 0f 1e fa          	endbr64 
   10394:	41 56                	push   %r14
   10396:	41 55                	push   %r13
   10398:	49 89 fd             	mov    %rdi,%r13
   1039b:	41 54                	push   %r12
   1039d:	55                   	push   %rbp
   1039e:	53                   	push   %rbx
   1039f:	48 85 d2             	test   %rdx,%rdx
   103a2:	0f 84 8f 00 00 00    	je     10437 <memcpy_verw+0xa7>
   103a8:	48 89 f3             	mov    %rsi,%rbx
   103ab:	48 39 f7             	cmp    %rsi,%rdi
   103ae:	0f 84 83 00 00 00    	je     10437 <memcpy_verw+0xa7>
   103b4:	49 89 d4             	mov    %rdx,%r12
   103b7:	48 89 fd             	mov    %rdi,%rbp
   103ba:	48 83 fa 07          	cmp    $0x7,%rdx
   103be:	77 25                	ja     103e5 <memcpy_verw+0x55>
   103c0:	eb 5b                	jmp    1041d <memcpy_verw+0x8d>
   103c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   103c8:	48 89 de             	mov    %rbx,%rsi
   103cb:	48 89 ef             	mov    %rbp,%rdi
   103ce:	49 83 ec 01          	sub    $0x1,%r12
   103d2:	48 83 c3 01          	add    $0x1,%rbx
   103d6:	e8 75 09 00 00       	call   10d50 <__memcpy_verw>
   103db:	48 83 c5 01          	add    $0x1,%rbp
   103df:	49 83 fc 07          	cmp    $0x7,%r12
   103e3:	76 33                	jbe    10418 <memcpy_verw+0x88>
   103e5:	48 89 e8             	mov    %rbp,%rax
   103e8:	48 09 d8             	or     %rbx,%rax
   103eb:	a8 07                	test   $0x7,%al
   103ed:	75 d9                	jne    103c8 <memcpy_verw+0x38>
   103ef:	4d 89 e3             	mov    %r12,%r11
   103f2:	49 83 e3 f8          	and    $0xfffffffffffffff8,%r11
   103f6:	48 39 dd             	cmp    %rbx,%rbp
   103f9:	74 0e                	je     10409 <memcpy_verw+0x79>
   103fb:	4c 89 da             	mov    %r11,%rdx
   103fe:	48 89 de             	mov    %rbx,%rsi
   10401:	48 89 ef             	mov    %rbp,%rdi
   10404:	e8 97 fe ff ff       	call   102a0 <__memcpy.part.0>
   10409:	4d 29 dc             	sub    %r11,%r12
   1040c:	4c 01 db             	add    %r11,%rbx
   1040f:	4c 01 dd             	add    %r11,%rbp
   10412:	49 83 fc 07          	cmp    $0x7,%r12
   10416:	77 cd                	ja     103e5 <memcpy_verw+0x55>
   10418:	4d 85 e4             	test   %r12,%r12
   1041b:	74 1a                	je     10437 <memcpy_verw+0xa7>
   1041d:	45 31 f6             	xor    %r14d,%r14d
   10420:	4a 8d 34 33          	lea    (%rbx,%r14,1),%rsi
   10424:	4a 8d 7c 35 00       	lea    0x0(%rbp,%r14,1),%rdi
   10429:	49 83 c6 01          	add    $0x1,%r14
   1042d:	e8 1e 09 00 00       	call   10d50 <__memcpy_verw>
   10432:	4d 39 e6             	cmp    %r12,%r14
   10435:	72 e9                	jb     10420 <memcpy_verw+0x90>
   10437:	5b                   	pop    %rbx
   10438:	4c 89 e8             	mov    %r13,%rax
   1043b:	5d                   	pop    %rbp
   1043c:	41 5c                	pop    %r12
   1043e:	41 5d                	pop    %r13
   10440:	41 5e                	pop    %r14
   10442:	c3                   	ret    
   10443:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1044a:	00 00 00 
   1044d:	0f 1f 00             	nopl   (%rax)

0000000000010450 <copy_external_memory>:
   10450:	41 57                	push   %r15
   10452:	66 0f ef c0          	pxor   %xmm0,%xmm0
   10456:	41 56                	push   %r14
   10458:	41 55                	push   %r13
   1045a:	41 54                	push   %r12
   1045c:	55                   	push   %rbp
   1045d:	53                   	push   %rbx
   1045e:	48 83 ec 38          	sub    $0x38,%rsp
   10462:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   10469:	00 00 
   1046b:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   10470:	31 c0                	xor    %eax,%eax
   10472:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   10477:	48 85 d2             	test   %rdx,%rdx
   1047a:	74 2d                	je     104a9 <copy_external_memory+0x59>
   1047c:	41 89 f6             	mov    %esi,%r14d
   1047f:	49 89 fd             	mov    %rdi,%r13
   10482:	48 89 f3             	mov    %rsi,%rbx
   10485:	41 89 cc             	mov    %ecx,%r12d
   10488:	41 83 e6 07          	and    $0x7,%r14d
   1048c:	75 52                	jne    104e0 <copy_external_memory+0x90>
   1048e:	48 83 fa 08          	cmp    $0x8,%rdx
   10492:	75 4c                	jne    104e0 <copy_external_memory+0x90>
   10494:	45 84 e4             	test   %r12b,%r12b
   10497:	75 37                	jne    104d0 <copy_external_memory+0x80>
   10499:	4c 39 eb             	cmp    %r13,%rbx
   1049c:	74 0b                	je     104a9 <copy_external_memory+0x59>
   1049e:	48 89 de             	mov    %rbx,%rsi
   104a1:	4c 89 ef             	mov    %r13,%rdi
   104a4:	e8 f7 fd ff ff       	call   102a0 <__memcpy.part.0>
   104a9:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   104ae:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
   104b5:	00 00 
   104b7:	75 7f                	jne    10538 <copy_external_memory+0xe8>
   104b9:	48 83 c4 38          	add    $0x38,%rsp
   104bd:	5b                   	pop    %rbx
   104be:	5d                   	pop    %rbp
   104bf:	41 5c                	pop    %r12
   104c1:	41 5d                	pop    %r13
   104c3:	41 5e                	pop    %r14
   104c5:	41 5f                	pop    %r15
   104c7:	c3                   	ret    
   104c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   104cf:	00 
   104d0:	48 89 de             	mov    %rbx,%rsi
   104d3:	4c 89 ef             	mov    %r13,%rdi
   104d6:	e8 b5 fe ff ff       	call   10390 <memcpy_verw>
   104db:	eb cc                	jmp    104a9 <copy_external_memory+0x59>
   104dd:	0f 1f 00             	nopl   (%rax)
   104e0:	45 89 f7             	mov    %r14d,%r15d
   104e3:	48 89 de             	mov    %rbx,%rsi
   104e6:	48 8d 6c 24 10       	lea    0x10(%rsp),%rbp
   104eb:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   104f0:	4c 29 fe             	sub    %r15,%rsi
   104f3:	48 89 ef             	mov    %rbp,%rdi
   104f6:	e8 75 08 00 00       	call   10d70 <__memcpy_8a>
   104fb:	45 85 f6             	test   %r14d,%r14d
   104fe:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   10503:	74 0a                	je     1050f <copy_external_memory+0xbf>
   10505:	49 8d 04 17          	lea    (%r15,%rdx,1),%rax
   10509:	48 83 f8 08          	cmp    $0x8,%rax
   1050d:	77 11                	ja     10520 <copy_external_memory+0xd0>
   1050f:	4a 8d 5c 3d 00       	lea    0x0(%rbp,%r15,1),%rbx
   10514:	45 84 e4             	test   %r12b,%r12b
   10517:	74 80                	je     10499 <copy_external_memory+0x49>
   10519:	eb b5                	jmp    104d0 <copy_external_memory+0x80>
   1051b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10520:	4c 29 fb             	sub    %r15,%rbx
   10523:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   10528:	48 8d 73 08          	lea    0x8(%rbx),%rsi
   1052c:	e8 3f 08 00 00       	call   10d70 <__memcpy_8a>
   10531:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   10536:	eb d7                	jmp    1050f <copy_external_memory+0xbf>
   10538:	e8 33 03 00 00       	call   10870 <__stack_chk_fail>
   1053d:	0f 1f 00             	nopl   (%rax)

0000000000010540 <memcpy_nochecks>:
   10540:	f3 0f 1e fa          	endbr64 
   10544:	49 89 fb             	mov    %rdi,%r11
   10547:	48 85 d2             	test   %rdx,%rdx
   1054a:	74 0a                	je     10556 <memcpy_nochecks+0x16>
   1054c:	48 39 f7             	cmp    %rsi,%rdi
   1054f:	74 05                	je     10556 <memcpy_nochecks+0x16>
   10551:	e8 4a fd ff ff       	call   102a0 <__memcpy.part.0>
   10556:	4c 89 d8             	mov    %r11,%rax
   10559:	c3                   	ret    
   1055a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000010560 <memcpy>:
   10560:	f3 0f 1e fa          	endbr64 
   10564:	41 57                	push   %r15
   10566:	41 56                	push   %r14
   10568:	41 55                	push   %r13
   1056a:	49 89 fd             	mov    %rdi,%r13
   1056d:	41 54                	push   %r12
   1056f:	55                   	push   %rbp
   10570:	53                   	push   %rbx
   10571:	48 83 ec 18          	sub    $0x18,%rsp
   10575:	48 85 d2             	test   %rdx,%rdx
   10578:	0f 84 d4 00 00 00    	je     10652 <memcpy+0xf2>
   1057e:	48 89 f3             	mov    %rsi,%rbx
   10581:	48 39 f7             	cmp    %rsi,%rdi
   10584:	0f 84 c8 00 00 00    	je     10652 <memcpy+0xf2>
   1058a:	48 89 d6             	mov    %rdx,%rsi
   1058d:	48 89 df             	mov    %rbx,%rdi
   10590:	48 89 d5             	mov    %rdx,%rbp
   10593:	e8 a8 54 ff ff       	call   5a40 <sgx_is_within_enclave>
   10598:	48 89 ee             	mov    %rbp,%rsi
   1059b:	4c 89 ef             	mov    %r13,%rdi
   1059e:	41 89 c4             	mov    %eax,%r12d
   105a1:	e8 9a 54 ff ff       	call   5a40 <sgx_is_within_enclave>
   105a6:	45 85 e4             	test   %r12d,%r12d
   105a9:	0f 85 b9 00 00 00    	jne    10668 <memcpy+0x108>
   105af:	85 c0                	test   %eax,%eax
   105b1:	4d 89 ec             	mov    %r13,%r12
   105b4:	0f 94 c0             	sete   %al
   105b7:	0f b6 c0             	movzbl %al,%eax
   105ba:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   105be:	48 83 fd 07          	cmp    $0x7,%rbp
   105c2:	77 38                	ja     105fc <memcpy+0x9c>
   105c4:	eb 7a                	jmp    10640 <memcpy+0xe0>
   105c6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   105cd:	00 00 00 
   105d0:	41 be 08 00 00 00    	mov    $0x8,%r14d
   105d6:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
   105da:	48 89 de             	mov    %rbx,%rsi
   105dd:	4c 89 e7             	mov    %r12,%rdi
   105e0:	4d 29 fe             	sub    %r15,%r14
   105e3:	49 8d 6c 2f f8       	lea    -0x8(%r15,%rbp,1),%rbp
   105e8:	4c 89 f2             	mov    %r14,%rdx
   105eb:	4c 01 f3             	add    %r14,%rbx
   105ee:	4d 01 f4             	add    %r14,%r12
   105f1:	e8 5a fe ff ff       	call   10450 <copy_external_memory>
   105f6:	48 83 fd 07          	cmp    $0x7,%rbp
   105fa:	76 44                	jbe    10640 <memcpy+0xe0>
   105fc:	48 89 d8             	mov    %rbx,%rax
   105ff:	4d 89 e7             	mov    %r12,%r15
   10602:	4c 09 e0             	or     %r12,%rax
   10605:	41 83 e7 07          	and    $0x7,%r15d
   10609:	a8 07                	test   $0x7,%al
   1060b:	75 c3                	jne    105d0 <memcpy+0x70>
   1060d:	49 89 eb             	mov    %rbp,%r11
   10610:	49 83 e3 f8          	and    $0xfffffffffffffff8,%r11
   10614:	4c 39 e3             	cmp    %r12,%rbx
   10617:	74 0e                	je     10627 <memcpy+0xc7>
   10619:	4c 89 da             	mov    %r11,%rdx
   1061c:	48 89 de             	mov    %rbx,%rsi
   1061f:	4c 89 e7             	mov    %r12,%rdi
   10622:	e8 79 fc ff ff       	call   102a0 <__memcpy.part.0>
   10627:	4c 29 dd             	sub    %r11,%rbp
   1062a:	4c 01 db             	add    %r11,%rbx
   1062d:	4d 01 dc             	add    %r11,%r12
   10630:	48 83 fd 07          	cmp    $0x7,%rbp
   10634:	77 c6                	ja     105fc <memcpy+0x9c>
   10636:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1063d:	00 00 00 
   10640:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
   10644:	48 89 ea             	mov    %rbp,%rdx
   10647:	48 89 de             	mov    %rbx,%rsi
   1064a:	4c 89 e7             	mov    %r12,%rdi
   1064d:	e8 fe fd ff ff       	call   10450 <copy_external_memory>
   10652:	48 83 c4 18          	add    $0x18,%rsp
   10656:	4c 89 e8             	mov    %r13,%rax
   10659:	5b                   	pop    %rbx
   1065a:	5d                   	pop    %rbp
   1065b:	41 5c                	pop    %r12
   1065d:	41 5d                	pop    %r13
   1065f:	41 5e                	pop    %r14
   10661:	41 5f                	pop    %r15
   10663:	c3                   	ret    
   10664:	0f 1f 40 00          	nopl   0x0(%rax)
   10668:	48 89 ea             	mov    %rbp,%rdx
   1066b:	48 89 de             	mov    %rbx,%rsi
   1066e:	4c 89 ef             	mov    %r13,%rdi
   10671:	85 c0                	test   %eax,%eax
   10673:	75 1b                	jne    10690 <memcpy+0x130>
   10675:	48 83 c4 18          	add    $0x18,%rsp
   10679:	5b                   	pop    %rbx
   1067a:	5d                   	pop    %rbp
   1067b:	41 5c                	pop    %r12
   1067d:	41 5d                	pop    %r13
   1067f:	41 5e                	pop    %r14
   10681:	41 5f                	pop    %r15
   10683:	e9 08 fd ff ff       	jmp    10390 <memcpy_verw>
   10688:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1068f:	00 
   10690:	e8 0b fc ff ff       	call   102a0 <__memcpy.part.0>
   10695:	eb bb                	jmp    10652 <memcpy+0xf2>
   10697:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1069e:	00 00 

00000000000106a0 <memset_verw>:
   106a0:	f3 0f 1e fa          	endbr64 
   106a4:	41 56                	push   %r14
   106a6:	41 55                	push   %r13
   106a8:	41 54                	push   %r12
   106aa:	49 89 fc             	mov    %rdi,%r12
   106ad:	55                   	push   %rbp
   106ae:	53                   	push   %rbx
   106af:	48 83 ec 20          	sub    $0x20,%rsp
   106b3:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   106ba:	00 00 
   106bc:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   106c1:	31 c0                	xor    %eax,%eax
   106c3:	48 85 d2             	test   %rdx,%rdx
   106c6:	0f 84 a0 00 00 00    	je     1076c <memset_verw+0xcc>
   106cc:	48 85 ff             	test   %rdi,%rdi
   106cf:	0f 84 97 00 00 00    	je     1076c <memset_verw+0xcc>
   106d5:	4c 8d 6c 24 10       	lea    0x10(%rsp),%r13
   106da:	48 89 d5             	mov    %rdx,%rbp
   106dd:	ba 08 00 00 00       	mov    $0x8,%edx
   106e2:	4c 89 e3             	mov    %r12,%rbx
   106e5:	4c 89 ef             	mov    %r13,%rdi
   106e8:	40 88 74 24 0f       	mov    %sil,0xf(%rsp)
   106ed:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   106f4:	00 00 
   106f6:	e8 85 06 00 00       	call   10d80 <__memset>
   106fb:	48 83 fd 07          	cmp    $0x7,%rbp
   106ff:	76 4b                	jbe    1074c <memset_verw+0xac>
   10701:	4c 8d 74 24 0f       	lea    0xf(%rsp),%r14
   10706:	eb 21                	jmp    10729 <memset_verw+0x89>
   10708:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1070f:	00 
   10710:	48 89 df             	mov    %rbx,%rdi
   10713:	4c 89 ee             	mov    %r13,%rsi
   10716:	48 83 ed 08          	sub    $0x8,%rbp
   1071a:	48 83 c3 08          	add    $0x8,%rbx
   1071e:	e8 4d 06 00 00       	call   10d70 <__memcpy_8a>
   10723:	48 83 fd 07          	cmp    $0x7,%rbp
   10727:	76 1e                	jbe    10747 <memset_verw+0xa7>
   10729:	f6 c3 07             	test   $0x7,%bl
   1072c:	74 e2                	je     10710 <memset_verw+0x70>
   1072e:	48 89 df             	mov    %rbx,%rdi
   10731:	4c 89 f6             	mov    %r14,%rsi
   10734:	48 83 ed 01          	sub    $0x1,%rbp
   10738:	48 83 c3 01          	add    $0x1,%rbx
   1073c:	e8 0f 06 00 00       	call   10d50 <__memcpy_verw>
   10741:	48 83 fd 07          	cmp    $0x7,%rbp
   10745:	77 e2                	ja     10729 <memset_verw+0x89>
   10747:	48 85 ed             	test   %rbp,%rbp
   1074a:	74 20                	je     1076c <memset_verw+0xcc>
   1074c:	48 01 dd             	add    %rbx,%rbp
   1074f:	4c 8d 6c 24 0f       	lea    0xf(%rsp),%r13
   10754:	0f 1f 40 00          	nopl   0x0(%rax)
   10758:	48 89 df             	mov    %rbx,%rdi
   1075b:	4c 89 ee             	mov    %r13,%rsi
   1075e:	48 83 c3 01          	add    $0x1,%rbx
   10762:	e8 e9 05 00 00       	call   10d50 <__memcpy_verw>
   10767:	48 39 eb             	cmp    %rbp,%rbx
   1076a:	75 ec                	jne    10758 <memset_verw+0xb8>
   1076c:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   10771:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
   10778:	00 00 
   1077a:	75 10                	jne    1078c <memset_verw+0xec>
   1077c:	48 83 c4 20          	add    $0x20,%rsp
   10780:	4c 89 e0             	mov    %r12,%rax
   10783:	5b                   	pop    %rbx
   10784:	5d                   	pop    %rbp
   10785:	41 5c                	pop    %r12
   10787:	41 5d                	pop    %r13
   10789:	41 5e                	pop    %r14
   1078b:	c3                   	ret    
   1078c:	e8 df 00 00 00       	call   10870 <__stack_chk_fail>
   10791:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   10798:	00 00 00 
   1079b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000107a0 <memset>:
   107a0:	f3 0f 1e fa          	endbr64 
   107a4:	e9 d7 05 00 00       	jmp    10d80 <__memset>
   107a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000107b0 <memset_s>:
   107b0:	f3 0f 1e fa          	endbr64 
   107b4:	53                   	push   %rbx
   107b5:	48 85 ff             	test   %rdi,%rdi
   107b8:	74 3e                	je     107f8 <memset_s+0x48>
   107ba:	48 89 f0             	mov    %rsi,%rax
   107bd:	89 d6                	mov    %edx,%esi
   107bf:	48 39 c8             	cmp    %rcx,%rax
   107c2:	73 1c                	jae    107e0 <memset_s+0x30>
   107c4:	48 8b 0d 8d 76 00 00 	mov    0x768d(%rip),%rcx        # 17e58 <__memset_vp>
   107cb:	48 89 c2             	mov    %rax,%rdx
   107ce:	bb 4b 00 00 00       	mov    $0x4b,%ebx
   107d3:	ff d1                	call   *%rcx
   107d5:	e8 66 05 00 00       	call   10d40 <__errno_location>
   107da:	89 18                	mov    %ebx,(%rax)
   107dc:	89 d8                	mov    %ebx,%eax
   107de:	5b                   	pop    %rbx
   107df:	c3                   	ret    
   107e0:	31 db                	xor    %ebx,%ebx
   107e2:	48 8b 05 6f 76 00 00 	mov    0x766f(%rip),%rax        # 17e58 <__memset_vp>
   107e9:	48 89 ca             	mov    %rcx,%rdx
   107ec:	ff d0                	call   *%rax
   107ee:	89 d8                	mov    %ebx,%eax
   107f0:	5b                   	pop    %rbx
   107f1:	c3                   	ret    
   107f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   107f8:	bb 16 00 00 00       	mov    $0x16,%ebx
   107fd:	eb d6                	jmp    107d5 <memset_s+0x25>
   107ff:	90                   	nop

0000000000010800 <memset_verw_s>:
   10800:	f3 0f 1e fa          	endbr64 
   10804:	53                   	push   %rbx
   10805:	48 85 ff             	test   %rdi,%rdi
   10808:	74 36                	je     10840 <memset_verw_s+0x40>
   1080a:	48 89 f0             	mov    %rsi,%rax
   1080d:	89 d6                	mov    %edx,%esi
   1080f:	48 39 c8             	cmp    %rcx,%rax
   10812:	73 1c                	jae    10830 <memset_verw_s+0x30>
   10814:	48 89 c2             	mov    %rax,%rdx
   10817:	bb 4b 00 00 00       	mov    $0x4b,%ebx
   1081c:	e8 7f fe ff ff       	call   106a0 <memset_verw>
   10821:	e8 1a 05 00 00       	call   10d40 <__errno_location>
   10826:	89 18                	mov    %ebx,(%rax)
   10828:	89 d8                	mov    %ebx,%eax
   1082a:	5b                   	pop    %rbx
   1082b:	c3                   	ret    
   1082c:	0f 1f 40 00          	nopl   0x0(%rax)
   10830:	31 db                	xor    %ebx,%ebx
   10832:	48 89 ca             	mov    %rcx,%rdx
   10835:	e8 66 fe ff ff       	call   106a0 <memset_verw>
   1083a:	89 d8                	mov    %ebx,%eax
   1083c:	5b                   	pop    %rbx
   1083d:	c3                   	ret    
   1083e:	66 90                	xchg   %ax,%ax
   10840:	bb 16 00 00 00       	mov    $0x16,%ebx
   10845:	eb da                	jmp    10821 <memset_verw_s+0x21>
   10847:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1084e:	00 00 

0000000000010850 <sgx_init_string_lib>:
   10850:	f3 0f 1e fa          	endbr64 
   10854:	31 c0                	xor    %eax,%eax
   10856:	c3                   	ret    
   10857:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1085e:	00 00 

0000000000010860 <strlen>:
   10860:	f3 0f 1e fa          	endbr64 
   10864:	e9 77 05 00 00       	jmp    10de0 <_strlen>
   10869:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000010870 <__stack_chk_fail>:
   10870:	f3 0f 1e fa          	endbr64 
   10874:	50                   	push   %rax
   10875:	58                   	pop    %rax
   10876:	48 83 ec 08          	sub    $0x8,%rsp
   1087a:	e8 b8 1a 00 00       	call   12337 <abort>
   1087f:	90                   	nop

0000000000010880 <__stack_chk_fail_local>:
   10880:	f3 0f 1e fa          	endbr64 
   10884:	50                   	push   %rax
   10885:	58                   	pop    %rax
   10886:	48 83 ec 08          	sub    $0x8,%rsp
   1088a:	e8 a8 1a 00 00       	call   12337 <abort>
   1088f:	90                   	nop

0000000000010890 <__intel_security_check_cookie>:
   10890:	f3 0f 1e fa          	endbr64 
   10894:	48 39 3d 6d 75 00 00 	cmp    %rdi,0x756d(%rip)        # 17e08 <__intel_security_cookie>
   1089b:	75 01                	jne    1089e <__intel_security_check_cookie+0xe>
   1089d:	c3                   	ret    
   1089e:	50                   	push   %rax
   1089f:	e8 93 1a 00 00       	call   12337 <abort>
   108a4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   108ab:	00 00 00 
   108ae:	66 90                	xchg   %ax,%ax

00000000000108b0 <sgx_thread_spin_init>:
   108b0:	f3 0f 1e fa          	endbr64 
   108b4:	48 85 ff             	test   %rdi,%rdi
   108b7:	74 37                	je     108f0 <sgx_thread_spin_init+0x40>
   108b9:	53                   	push   %rbx
   108ba:	be 18 00 00 00       	mov    $0x18,%esi
   108bf:	48 89 fb             	mov    %rdi,%rbx
   108c2:	e8 79 51 ff ff       	call   5a40 <sgx_is_within_enclave>
   108c7:	85 c0                	test   %eax,%eax
   108c9:	74 1d                	je     108e8 <sgx_thread_spin_init+0x38>
   108cb:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   108d2:	31 c0                	xor    %eax,%eax
   108d4:	48 c7 43 10 00 00 00 	movq   $0x0,0x10(%rbx)
   108db:	00 
   108dc:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%rbx)
   108e3:	5b                   	pop    %rbx
   108e4:	c3                   	ret    
   108e5:	0f 1f 00             	nopl   (%rax)
   108e8:	b8 16 00 00 00       	mov    $0x16,%eax
   108ed:	5b                   	pop    %rbx
   108ee:	c3                   	ret    
   108ef:	90                   	nop
   108f0:	b8 16 00 00 00       	mov    $0x16,%eax
   108f5:	c3                   	ret    
   108f6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   108fd:	00 00 00 

0000000000010900 <sgx_thread_spin_destroy>:
   10900:	f3 0f 1e fa          	endbr64 
   10904:	48 85 ff             	test   %rdi,%rdi
   10907:	74 6f                	je     10978 <sgx_thread_spin_destroy+0x78>
   10909:	55                   	push   %rbp
   1090a:	be 18 00 00 00       	mov    $0x18,%esi
   1090f:	53                   	push   %rbx
   10910:	48 89 fb             	mov    %rdi,%rbx
   10913:	48 83 ec 08          	sub    $0x8,%rsp
   10917:	e8 24 51 ff ff       	call   5a40 <sgx_is_within_enclave>
   1091c:	85 c0                	test   %eax,%eax
   1091e:	74 30                	je     10950 <sgx_thread_spin_destroy+0x50>
   10920:	48 8d 6b 08          	lea    0x8(%rbx),%rbp
   10924:	48 89 ef             	mov    %rbp,%rdi
   10927:	e8 d4 bc ff ff       	call   c600 <sgx_spin_lock>
   1092c:	48 83 7b 10 00       	cmpq   $0x0,0x10(%rbx)
   10931:	75 2d                	jne    10960 <sgx_thread_spin_destroy+0x60>
   10933:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   1093a:	48 89 ef             	mov    %rbp,%rdi
   1093d:	e8 4e bd ff ff       	call   c690 <sgx_spin_unlock>
   10942:	48 83 c4 08          	add    $0x8,%rsp
   10946:	31 c0                	xor    %eax,%eax
   10948:	5b                   	pop    %rbx
   10949:	5d                   	pop    %rbp
   1094a:	c3                   	ret    
   1094b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10950:	48 83 c4 08          	add    $0x8,%rsp
   10954:	b8 16 00 00 00       	mov    $0x16,%eax
   10959:	5b                   	pop    %rbx
   1095a:	5d                   	pop    %rbp
   1095b:	c3                   	ret    
   1095c:	0f 1f 40 00          	nopl   0x0(%rax)
   10960:	48 89 ef             	mov    %rbp,%rdi
   10963:	e8 28 bd ff ff       	call   c690 <sgx_spin_unlock>
   10968:	48 83 c4 08          	add    $0x8,%rsp
   1096c:	b8 10 00 00 00       	mov    $0x10,%eax
   10971:	5b                   	pop    %rbx
   10972:	5d                   	pop    %rbp
   10973:	c3                   	ret    
   10974:	0f 1f 40 00          	nopl   0x0(%rax)
   10978:	b8 16 00 00 00       	mov    $0x16,%eax
   1097d:	c3                   	ret    
   1097e:	66 90                	xchg   %ax,%ax

0000000000010980 <sgx_thread_spin_trylock>:
   10980:	f3 0f 1e fa          	endbr64 
   10984:	48 85 ff             	test   %rdi,%rdi
   10987:	74 7f                	je     10a08 <sgx_thread_spin_trylock+0x88>
   10989:	41 54                	push   %r12
   1098b:	be 18 00 00 00       	mov    $0x18,%esi
   10990:	55                   	push   %rbp
   10991:	53                   	push   %rbx
   10992:	48 89 fb             	mov    %rdi,%rbx
   10995:	e8 a6 50 ff ff       	call   5a40 <sgx_is_within_enclave>
   1099a:	85 c0                	test   %eax,%eax
   1099c:	74 42                	je     109e0 <sgx_thread_spin_trylock+0x60>
   1099e:	e8 a0 15 00 00       	call   11f43 <get_thread_data>
   109a3:	4c 8d 63 08          	lea    0x8(%rbx),%r12
   109a7:	4c 89 e7             	mov    %r12,%rdi
   109aa:	48 89 c5             	mov    %rax,%rbp
   109ad:	e8 4e bc ff ff       	call   c600 <sgx_spin_lock>
   109b2:	48 8b 43 10          	mov    0x10(%rbx),%rax
   109b6:	48 39 e8             	cmp    %rbp,%rax
   109b9:	74 09                	je     109c4 <sgx_thread_spin_trylock+0x44>
   109bb:	48 85 c0             	test   %rax,%rax
   109be:	75 30                	jne    109f0 <sgx_thread_spin_trylock+0x70>
   109c0:	48 89 6b 10          	mov    %rbp,0x10(%rbx)
   109c4:	48 83 03 01          	addq   $0x1,(%rbx)
   109c8:	4c 89 e7             	mov    %r12,%rdi
   109cb:	e8 c0 bc ff ff       	call   c690 <sgx_spin_unlock>
   109d0:	5b                   	pop    %rbx
   109d1:	31 c0                	xor    %eax,%eax
   109d3:	5d                   	pop    %rbp
   109d4:	41 5c                	pop    %r12
   109d6:	c3                   	ret    
   109d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   109de:	00 00 
   109e0:	5b                   	pop    %rbx
   109e1:	b8 16 00 00 00       	mov    $0x16,%eax
   109e6:	5d                   	pop    %rbp
   109e7:	41 5c                	pop    %r12
   109e9:	c3                   	ret    
   109ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   109f0:	4c 89 e7             	mov    %r12,%rdi
   109f3:	e8 98 bc ff ff       	call   c690 <sgx_spin_unlock>
   109f8:	5b                   	pop    %rbx
   109f9:	b8 10 00 00 00       	mov    $0x10,%eax
   109fe:	5d                   	pop    %rbp
   109ff:	41 5c                	pop    %r12
   10a01:	c3                   	ret    
   10a02:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10a08:	b8 16 00 00 00       	mov    $0x16,%eax
   10a0d:	c3                   	ret    
   10a0e:	66 90                	xchg   %ax,%ax

0000000000010a10 <sgx_thread_spin_unlock>:
   10a10:	f3 0f 1e fa          	endbr64 
   10a14:	48 85 ff             	test   %rdi,%rdi
   10a17:	0f 84 8b 00 00 00    	je     10aa8 <sgx_thread_spin_unlock+0x98>
   10a1d:	41 54                	push   %r12
   10a1f:	be 18 00 00 00       	mov    $0x18,%esi
   10a24:	55                   	push   %rbp
   10a25:	53                   	push   %rbx
   10a26:	48 89 fb             	mov    %rdi,%rbx
   10a29:	e8 12 50 ff ff       	call   5a40 <sgx_is_within_enclave>
   10a2e:	85 c0                	test   %eax,%eax
   10a30:	74 56                	je     10a88 <sgx_thread_spin_unlock+0x78>
   10a32:	e8 0c 15 00 00       	call   11f43 <get_thread_data>
   10a37:	4c 8d 63 08          	lea    0x8(%rbx),%r12
   10a3b:	4c 89 e7             	mov    %r12,%rdi
   10a3e:	48 89 c5             	mov    %rax,%rbp
   10a41:	e8 ba bb ff ff       	call   c600 <sgx_spin_lock>
   10a46:	48 8b 43 10          	mov    0x10(%rbx),%rax
   10a4a:	48 85 c0             	test   %rax,%rax
   10a4d:	74 21                	je     10a70 <sgx_thread_spin_unlock+0x60>
   10a4f:	48 39 e8             	cmp    %rbp,%rax
   10a52:	75 1c                	jne    10a70 <sgx_thread_spin_unlock+0x60>
   10a54:	48 83 2b 01          	subq   $0x1,(%rbx)
   10a58:	74 3e                	je     10a98 <sgx_thread_spin_unlock+0x88>
   10a5a:	4c 89 e7             	mov    %r12,%rdi
   10a5d:	e8 2e bc ff ff       	call   c690 <sgx_spin_unlock>
   10a62:	5b                   	pop    %rbx
   10a63:	31 c0                	xor    %eax,%eax
   10a65:	5d                   	pop    %rbp
   10a66:	41 5c                	pop    %r12
   10a68:	c3                   	ret    
   10a69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10a70:	4c 89 e7             	mov    %r12,%rdi
   10a73:	e8 18 bc ff ff       	call   c690 <sgx_spin_unlock>
   10a78:	5b                   	pop    %rbx
   10a79:	b8 01 00 00 00       	mov    $0x1,%eax
   10a7e:	5d                   	pop    %rbp
   10a7f:	41 5c                	pop    %r12
   10a81:	c3                   	ret    
   10a82:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10a88:	5b                   	pop    %rbx
   10a89:	b8 16 00 00 00       	mov    $0x16,%eax
   10a8e:	5d                   	pop    %rbp
   10a8f:	41 5c                	pop    %r12
   10a91:	c3                   	ret    
   10a92:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10a98:	48 c7 43 10 00 00 00 	movq   $0x0,0x10(%rbx)
   10a9f:	00 
   10aa0:	eb b8                	jmp    10a5a <sgx_thread_spin_unlock+0x4a>
   10aa2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10aa8:	b8 16 00 00 00       	mov    $0x16,%eax
   10aad:	c3                   	ret    
   10aae:	66 90                	xchg   %ax,%ax

0000000000010ab0 <memcpy_s>:
   10ab0:	f3 0f 1e fa          	endbr64 
   10ab4:	48 85 c9             	test   %rcx,%rcx
   10ab7:	74 4f                	je     10b08 <memcpy_s+0x58>
   10ab9:	53                   	push   %rbx
   10aba:	48 85 ff             	test   %rdi,%rdi
   10abd:	74 51                	je     10b10 <memcpy_s+0x60>
   10abf:	48 89 d3             	mov    %rdx,%rbx
   10ac2:	48 85 d2             	test   %rdx,%rdx
   10ac5:	74 19                	je     10ae0 <memcpy_s+0x30>
   10ac7:	48 39 ce             	cmp    %rcx,%rsi
   10aca:	72 14                	jb     10ae0 <memcpy_s+0x30>
   10acc:	48 89 de             	mov    %rbx,%rsi
   10acf:	48 89 ca             	mov    %rcx,%rdx
   10ad2:	e8 89 fa ff ff       	call   10560 <memcpy>
   10ad7:	31 c0                	xor    %eax,%eax
   10ad9:	5b                   	pop    %rbx
   10ada:	c3                   	ret    
   10adb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10ae0:	48 89 f2             	mov    %rsi,%rdx
   10ae3:	31 f6                	xor    %esi,%esi
   10ae5:	e8 b6 fc ff ff       	call   107a0 <memset>
   10aea:	48 85 db             	test   %rbx,%rbx
   10aed:	74 21                	je     10b10 <memcpy_s+0x60>
   10aef:	e8 4c 02 00 00       	call   10d40 <__errno_location>
   10af4:	c7 00 22 00 00 00    	movl   $0x22,(%rax)
   10afa:	b8 22 00 00 00       	mov    $0x22,%eax
   10aff:	5b                   	pop    %rbx
   10b00:	c3                   	ret    
   10b01:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10b08:	31 c0                	xor    %eax,%eax
   10b0a:	c3                   	ret    
   10b0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10b10:	e8 2b 02 00 00       	call   10d40 <__errno_location>
   10b15:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   10b1b:	b8 16 00 00 00       	mov    $0x16,%eax
   10b20:	5b                   	pop    %rbx
   10b21:	c3                   	ret    
   10b22:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   10b29:	00 00 00 
   10b2c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000010b30 <memcpy_verw_s>:
   10b30:	f3 0f 1e fa          	endbr64 
   10b34:	48 85 c9             	test   %rcx,%rcx
   10b37:	74 4f                	je     10b88 <memcpy_verw_s+0x58>
   10b39:	53                   	push   %rbx
   10b3a:	48 85 ff             	test   %rdi,%rdi
   10b3d:	74 51                	je     10b90 <memcpy_verw_s+0x60>
   10b3f:	48 89 d3             	mov    %rdx,%rbx
   10b42:	48 85 d2             	test   %rdx,%rdx
   10b45:	74 19                	je     10b60 <memcpy_verw_s+0x30>
   10b47:	48 39 ce             	cmp    %rcx,%rsi
   10b4a:	72 14                	jb     10b60 <memcpy_verw_s+0x30>
   10b4c:	48 89 de             	mov    %rbx,%rsi
   10b4f:	48 89 ca             	mov    %rcx,%rdx
   10b52:	e8 39 f8 ff ff       	call   10390 <memcpy_verw>
   10b57:	31 c0                	xor    %eax,%eax
   10b59:	5b                   	pop    %rbx
   10b5a:	c3                   	ret    
   10b5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10b60:	48 89 f2             	mov    %rsi,%rdx
   10b63:	31 f6                	xor    %esi,%esi
   10b65:	e8 36 fb ff ff       	call   106a0 <memset_verw>
   10b6a:	48 85 db             	test   %rbx,%rbx
   10b6d:	74 21                	je     10b90 <memcpy_verw_s+0x60>
   10b6f:	e8 cc 01 00 00       	call   10d40 <__errno_location>
   10b74:	c7 00 22 00 00 00    	movl   $0x22,(%rax)
   10b7a:	b8 22 00 00 00       	mov    $0x22,%eax
   10b7f:	5b                   	pop    %rbx
   10b80:	c3                   	ret    
   10b81:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10b88:	31 c0                	xor    %eax,%eax
   10b8a:	c3                   	ret    
   10b8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10b90:	e8 ab 01 00 00       	call   10d40 <__errno_location>
   10b95:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   10b9b:	b8 16 00 00 00       	mov    $0x16,%eax
   10ba0:	5b                   	pop    %rbx
   10ba1:	c3                   	ret    

0000000000010ba2 <setjmp>:
   10ba2:	f3 0f 1e fa          	endbr64 
   10ba6:	50                   	push   %rax
   10ba7:	53                   	push   %rbx
   10ba8:	51                   	push   %rcx
   10ba9:	52                   	push   %rdx
   10baa:	56                   	push   %rsi
   10bab:	57                   	push   %rdi
   10bac:	41 50                	push   %r8
   10bae:	41 51                	push   %r9
   10bb0:	41 52                	push   %r10
   10bb2:	41 53                	push   %r11
   10bb4:	41 54                	push   %r12
   10bb6:	41 55                	push   %r13
   10bb8:	41 56                	push   %r14
   10bba:	41 57                	push   %r15
   10bbc:	48 c7 c6 08 00 00 00 	mov    $0x8,%rsi
   10bc3:	e8 78 4e ff ff       	call   5a40 <sgx_is_within_enclave>
   10bc8:	83 f8 00             	cmp    $0x0,%eax
   10bcb:	74 60                	je     10c2d <.crash>
   10bcd:	41 5f                	pop    %r15
   10bcf:	41 5e                	pop    %r14
   10bd1:	41 5d                	pop    %r13
   10bd3:	41 5c                	pop    %r12
   10bd5:	41 5b                	pop    %r11
   10bd7:	41 5a                	pop    %r10
   10bd9:	41 59                	pop    %r9
   10bdb:	41 58                	pop    %r8
   10bdd:	5f                   	pop    %rdi
   10bde:	5e                   	pop    %rsi
   10bdf:	5a                   	pop    %rdx
   10be0:	59                   	pop    %rcx
   10be1:	5b                   	pop    %rbx
   10be2:	58                   	pop    %rax
   10be3:	4c 8b 1c 24          	mov    (%rsp),%r11
   10be7:	48 89 1f             	mov    %rbx,(%rdi)
   10bea:	48 89 6f 08          	mov    %rbp,0x8(%rdi)
   10bee:	4c 89 67 10          	mov    %r12,0x10(%rdi)
   10bf2:	4c 89 6f 18          	mov    %r13,0x18(%rdi)
   10bf6:	4c 89 77 20          	mov    %r14,0x20(%rdi)
   10bfa:	4c 89 7f 28          	mov    %r15,0x28(%rdi)
   10bfe:	48 89 67 30          	mov    %rsp,0x30(%rdi)
   10c02:	4c 89 5f 38          	mov    %r11,0x38(%rdi)
   10c06:	e8 46 13 00 00       	call   11f51 <get_stack_guard>
   10c0b:	48 31 07             	xor    %rax,(%rdi)
   10c0e:	48 31 47 08          	xor    %rax,0x8(%rdi)
   10c12:	48 31 47 10          	xor    %rax,0x10(%rdi)
   10c16:	48 31 47 18          	xor    %rax,0x18(%rdi)
   10c1a:	48 31 47 20          	xor    %rax,0x20(%rdi)
   10c1e:	48 31 47 28          	xor    %rax,0x28(%rdi)
   10c22:	48 31 47 30          	xor    %rax,0x30(%rdi)
   10c26:	48 31 47 38          	xor    %rax,0x38(%rdi)
   10c2a:	31 c0                	xor    %eax,%eax
   10c2c:	c3                   	ret    

0000000000010c2d <.crash>:
   10c2d:	0f 0b                	ud2    

0000000000010c2f <longjmp>:
   10c2f:	f3 0f 1e fa          	endbr64 
   10c33:	50                   	push   %rax
   10c34:	53                   	push   %rbx
   10c35:	51                   	push   %rcx
   10c36:	52                   	push   %rdx
   10c37:	56                   	push   %rsi
   10c38:	57                   	push   %rdi
   10c39:	41 50                	push   %r8
   10c3b:	41 51                	push   %r9
   10c3d:	41 52                	push   %r10
   10c3f:	41 53                	push   %r11
   10c41:	41 54                	push   %r12
   10c43:	41 55                	push   %r13
   10c45:	41 56                	push   %r14
   10c47:	41 57                	push   %r15
   10c49:	57                   	push   %rdi
   10c4a:	48 c7 c6 08 00 00 00 	mov    $0x8,%rsi
   10c51:	e8 ea 4d ff ff       	call   5a40 <sgx_is_within_enclave>
   10c56:	83 f8 00             	cmp    $0x0,%eax
   10c59:	74 d2                	je     10c2d <.crash>
   10c5b:	5f                   	pop    %rdi
   10c5c:	48 8b 57 30          	mov    0x30(%rdi),%rdx
   10c60:	e8 ec 12 00 00       	call   11f51 <get_stack_guard>
   10c65:	48 31 c2             	xor    %rax,%rdx
   10c68:	52                   	push   %rdx
   10c69:	5f                   	pop    %rdi
   10c6a:	e8 d1 68 ff ff       	call   7540 <is_valid_sp>
   10c6f:	83 f8 00             	cmp    $0x0,%eax
   10c72:	74 b9                	je     10c2d <.crash>
   10c74:	41 5f                	pop    %r15
   10c76:	41 5e                	pop    %r14
   10c78:	41 5d                	pop    %r13
   10c7a:	41 5c                	pop    %r12
   10c7c:	41 5b                	pop    %r11
   10c7e:	41 5a                	pop    %r10
   10c80:	41 59                	pop    %r9
   10c82:	41 58                	pop    %r8
   10c84:	5f                   	pop    %rdi
   10c85:	5e                   	pop    %rsi
   10c86:	5a                   	pop    %rdx
   10c87:	59                   	pop    %rcx
   10c88:	5b                   	pop    %rbx
   10c89:	58                   	pop    %rax
   10c8a:	89 f0                	mov    %esi,%eax
   10c8c:	48 8b 1f             	mov    (%rdi),%rbx
   10c8f:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   10c93:	4c 8b 67 10          	mov    0x10(%rdi),%r12
   10c97:	4c 8b 6f 18          	mov    0x18(%rdi),%r13
   10c9b:	4c 8b 77 20          	mov    0x20(%rdi),%r14
   10c9f:	4c 8b 7f 28          	mov    0x28(%rdi),%r15
   10ca3:	48 8b 57 30          	mov    0x30(%rdi),%rdx
   10ca7:	48 8b 4f 38          	mov    0x38(%rdi),%rcx
   10cab:	50                   	push   %rax
   10cac:	e8 a0 12 00 00       	call   11f51 <get_stack_guard>
   10cb1:	48 31 c3             	xor    %rax,%rbx
   10cb4:	48 31 c6             	xor    %rax,%rsi
   10cb7:	49 31 c4             	xor    %rax,%r12
   10cba:	49 31 c5             	xor    %rax,%r13
   10cbd:	49 31 c6             	xor    %rax,%r14
   10cc0:	49 31 c7             	xor    %rax,%r15
   10cc3:	48 31 c2             	xor    %rax,%rdx
   10cc6:	48 31 c1             	xor    %rax,%rcx
   10cc9:	58                   	pop    %rax
   10cca:	48 89 f5             	mov    %rsi,%rbp
   10ccd:	48 89 0a             	mov    %rcx,(%rdx)
   10cd0:	48 89 d4             	mov    %rdx,%rsp
   10cd3:	85 c0                	test   %eax,%eax
   10cd5:	75 02                	jne    10cd9 <longjmp+0xaa>
   10cd7:	ff c0                	inc    %eax
   10cd9:	c3                   	ret    
   10cda:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000010ce0 <rsrv_mem_init>:
   10ce0:	f3 0f 1e fa          	endbr64 
   10ce4:	48 85 ff             	test   %rdi,%rdi
   10ce7:	74 47                	je     10d30 <rsrv_mem_init+0x50>
   10ce9:	48 89 f0             	mov    %rsi,%rax
   10cec:	b9 01 00 00 00       	mov    $0x1,%ecx
   10cf1:	48 09 d0             	or     %rdx,%rax
   10cf4:	48 09 f8             	or     %rdi,%rax
   10cf7:	a9 ff 0f 00 00       	test   $0xfff,%eax
   10cfc:	74 0a                	je     10d08 <rsrv_mem_init+0x28>
   10cfe:	89 c8                	mov    %ecx,%eax
   10d00:	c3                   	ret    
   10d01:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10d08:	48 89 f0             	mov    %rsi,%rax
   10d0b:	48 03 05 5e 71 00 00 	add    0x715e(%rip),%rax        # 17e70 <rsrv_mem_base>
   10d12:	72 ea                	jb     10cfe <rsrv_mem_init+0x1e>
   10d14:	31 c9                	xor    %ecx,%ecx
   10d16:	48 89 3d 53 71 00 00 	mov    %rdi,0x7153(%rip)        # 17e70 <rsrv_mem_base>
   10d1d:	48 89 35 44 71 00 00 	mov    %rsi,0x7144(%rip)        # 17e68 <rsrv_mem_size>
   10d24:	89 c8                	mov    %ecx,%eax
   10d26:	48 89 15 33 71 00 00 	mov    %rdx,0x7133(%rip)        # 17e60 <rsrv_mem_min_size>
   10d2d:	c3                   	ret    
   10d2e:	66 90                	xchg   %ax,%ax
   10d30:	b9 01 00 00 00       	mov    $0x1,%ecx
   10d35:	89 c8                	mov    %ecx,%eax
   10d37:	c3                   	ret    
   10d38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   10d3f:	00 

0000000000010d40 <__errno_location>:
   10d40:	f3 0f 1e fa          	endbr64 
   10d44:	e9 47 67 ff ff       	jmp    7490 <get_errno_addr>
   10d49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000010d50 <__memcpy_verw>:
   10d50:	8a 06                	mov    (%rsi),%al
   10d52:	48 83 ec 08          	sub    $0x8,%rsp
   10d56:	8c 1c 24             	mov    %ds,(%rsp)
   10d59:	0f 00 2c 24          	verw   (%rsp)
   10d5d:	88 07                	mov    %al,(%rdi)
   10d5f:	0f ae f0             	mfence 
   10d62:	0f ae e8             	lfence 
   10d65:	48 83 c4 08          	add    $0x8,%rsp
   10d69:	48 89 f8             	mov    %rdi,%rax
   10d6c:	c3                   	ret    
   10d6d:	cc                   	int3   
   10d6e:	cc                   	int3   
   10d6f:	cc                   	int3   

0000000000010d70 <__memcpy_8a>:
   10d70:	48 8b 06             	mov    (%rsi),%rax
   10d73:	48 89 07             	mov    %rax,(%rdi)
   10d76:	48 89 f8             	mov    %rdi,%rax
   10d79:	c3                   	ret    
   10d7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000010d80 <__memset>:
   10d80:	48 89 f0             	mov    %rsi,%rax
   10d83:	48 25 ff 00 00 00    	and    $0xff,%rax
   10d89:	48 89 d1             	mov    %rdx,%rcx
   10d8c:	49 89 fb             	mov    %rdi,%r11
   10d8f:	fc                   	cld    
   10d90:	48 83 f9 0f          	cmp    $0xf,%rcx
   10d94:	7e 38                	jle    10dce <L1>
   10d96:	88 c4                	mov    %al,%ah
   10d98:	89 c2                	mov    %eax,%edx
   10d9a:	c1 e0 10             	shl    $0x10,%eax
   10d9d:	09 d0                	or     %edx,%eax
   10d9f:	89 c2                	mov    %eax,%edx
   10da1:	48 c1 e0 20          	shl    $0x20,%rax
   10da5:	48 09 d0             	or     %rdx,%rax
   10da8:	48 89 fa             	mov    %rdi,%rdx
   10dab:	48 f7 da             	neg    %rdx
   10dae:	48 83 e2 07          	and    $0x7,%rdx
   10db2:	49 89 c8             	mov    %rcx,%r8
   10db5:	49 29 d0             	sub    %rdx,%r8
   10db8:	48 89 d1             	mov    %rdx,%rcx
   10dbb:	f3 aa                	rep stos %al,%es:(%rdi)
   10dbd:	4c 89 c1             	mov    %r8,%rcx
   10dc0:	48 c1 e9 03          	shr    $0x3,%rcx
   10dc4:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   10dc7:	4c 89 c1             	mov    %r8,%rcx
   10dca:	48 83 e1 07          	and    $0x7,%rcx

0000000000010dce <L1>:
   10dce:	f3 aa                	rep stos %al,%es:(%rdi)
   10dd0:	4c 89 d8             	mov    %r11,%rax
   10dd3:	c3                   	ret    
   10dd4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   10ddb:	00 00 00 
   10dde:	66 90                	xchg   %ax,%ax

0000000000010de0 <_strlen>:
   10de0:	49 b8 01 01 01 01 01 	movabs $0x101010101010101,%r8
   10de7:	01 01 01 
   10dea:	40 f6 c7 07          	test   $0x7,%dil
   10dee:	48 89 f8             	mov    %rdi,%rax
   10df1:	49 b9 80 80 80 80 80 	movabs $0x8080808080808080,%r9
   10df8:	80 80 80 
   10dfb:	75 33                	jne    10e30 <_strlen+0x50>
   10dfd:	0f 1f 00             	nopl   (%rax)
   10e00:	48 8b 10             	mov    (%rax),%rdx
   10e03:	48 83 c0 08          	add    $0x8,%rax
   10e07:	48 89 d1             	mov    %rdx,%rcx
   10e0a:	4c 29 c2             	sub    %r8,%rdx
   10e0d:	48 f7 d1             	not    %rcx
   10e10:	4c 21 ca             	and    %r9,%rdx
   10e13:	74 eb                	je     10e00 <_strlen+0x20>
   10e15:	48 21 ca             	and    %rcx,%rdx
   10e18:	74 e6                	je     10e00 <_strlen+0x20>
   10e1a:	48 29 f8             	sub    %rdi,%rax
   10e1d:	48 0f bc d2          	bsf    %rdx,%rdx
   10e21:	48 c1 ea 03          	shr    $0x3,%rdx
   10e25:	48 8d 44 10 f8       	lea    -0x8(%rax,%rdx,1),%rax
   10e2a:	c3                   	ret    
   10e2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10e30:	88 c1                	mov    %al,%cl
   10e32:	48 c7 c6 01 00 00 00 	mov    $0x1,%rsi
   10e39:	80 e1 07             	and    $0x7,%cl
   10e3c:	24 f8                	and    $0xf8,%al
   10e3e:	c0 e1 03             	shl    $0x3,%cl
   10e41:	48 8b 10             	mov    (%rax),%rdx
   10e44:	48 d3 e6             	shl    %cl,%rsi
   10e47:	48 ff ce             	dec    %rsi
   10e4a:	48 09 f2             	or     %rsi,%rdx
   10e4d:	eb b4                	jmp    10e03 <_strlen+0x23>
   10e4f:	90                   	nop

0000000000010e50 <sgx_init_crypto_lib>:
   10e50:	f3 0f 1e fa          	endbr64 
   10e54:	e9 07 00 00 00       	jmp    10e60 <init_ipp_cpuid>
   10e59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000010e60 <init_ipp_cpuid>:
   10e60:	f3 0f 1e fa          	endbr64 
   10e64:	48 83 3d 84 71 00 00 	cmpq   $0x0,0x7184(%rip)        # 17ff0 <ippcpSetCpuFeatures>
   10e6b:	00 
   10e6c:	0f 84 2e 02 00 00    	je     110a0 <init_ipp_cpuid+0x240>
   10e72:	48 89 f8             	mov    %rdi,%rax
   10e75:	ba 02 00 00 00       	mov    $0x2,%edx
   10e7a:	f6 c4 02             	test   $0x2,%ah
   10e7d:	0f 84 1f 02 00 00    	je     110a2 <init_ipp_cpuid+0x242>
   10e83:	48 89 fa             	mov    %rdi,%rdx
   10e86:	48 83 ec 08          	sub    $0x8,%rsp
   10e8a:	48 b9 00 00 00 00 08 	movabs $0x800000000,%rcx
   10e91:	00 00 00 
   10e94:	81 e2 00 08 00 00    	and    $0x800,%edx
   10e9a:	48 83 fa 01          	cmp    $0x1,%rdx
   10e9e:	48 19 ff             	sbb    %rdi,%rdi
   10ea1:	48 83 e7 e0          	and    $0xffffffffffffffe0,%rdi
   10ea5:	48 83 c7 7f          	add    $0x7f,%rdi
   10ea9:	48 89 fa             	mov    %rdi,%rdx
   10eac:	80 ca 80             	or     $0x80,%dl
   10eaf:	f6 c4 04             	test   $0x4,%ah
   10eb2:	48 0f 45 fa          	cmovne %rdx,%rdi
   10eb6:	48 89 fa             	mov    %rdi,%rdx
   10eb9:	80 ce 03             	or     $0x3,%dh
   10ebc:	a9 00 00 01 00       	test   $0x10000,%eax
   10ec1:	48 0f 45 fa          	cmovne %rdx,%rdi
   10ec5:	48 89 fa             	mov    %rdi,%rdx
   10ec8:	80 ce 04             	or     $0x4,%dh
   10ecb:	f6 c4 40             	test   $0x40,%ah
   10ece:	48 0f 45 fa          	cmovne %rdx,%rdi
   10ed2:	48 89 fa             	mov    %rdi,%rdx
   10ed5:	80 ce 08             	or     $0x8,%dh
   10ed8:	f6 c4 20             	test   $0x20,%ah
   10edb:	48 0f 45 fa          	cmovne %rdx,%rdi
   10edf:	48 89 fa             	mov    %rdi,%rdx
   10ee2:	80 ce 20             	or     $0x20,%dh
   10ee5:	a9 00 00 02 00       	test   $0x20000,%eax
   10eea:	48 0f 45 fa          	cmovne %rdx,%rdi
   10eee:	48 89 fa             	mov    %rdi,%rdx
   10ef1:	80 ce 40             	or     $0x40,%dh
   10ef4:	f6 c4 80             	test   $0x80,%ah
   10ef7:	48 0f 45 fa          	cmovne %rdx,%rdi
   10efb:	48 89 fa             	mov    %rdi,%rdx
   10efe:	80 ce 80             	or     $0x80,%dh
   10f01:	a9 00 00 80 00       	test   $0x800000,%eax
   10f06:	48 0f 45 fa          	cmovne %rdx,%rdi
   10f0a:	48 89 fa             	mov    %rdi,%rdx
   10f0d:	48 81 ca 00 00 01 00 	or     $0x10000,%rdx
   10f14:	a9 00 00 00 10       	test   $0x10000000,%eax
   10f19:	48 0f 45 fa          	cmovne %rdx,%rdi
   10f1d:	48 89 fa             	mov    %rdi,%rdx
   10f20:	48 81 ca 00 00 02 00 	or     $0x20000,%rdx
   10f27:	a9 00 00 00 20       	test   $0x20000000,%eax
   10f2c:	48 0f 45 fa          	cmovne %rdx,%rdi
   10f30:	48 89 fa             	mov    %rdi,%rdx
   10f33:	48 81 ca 00 00 08 00 	or     $0x80000,%rdx
   10f3a:	48 85 c8             	test   %rcx,%rax
   10f3d:	48 0f 45 fa          	cmovne %rdx,%rdi
   10f41:	a9 00 00 00 08       	test   $0x8000000,%eax
   10f46:	74 0d                	je     10f55 <init_ipp_cpuid+0xf5>
   10f48:	48 ba 00 00 10 00 02 	movabs $0x200100000,%rdx
   10f4f:	00 00 00 
   10f52:	48 09 d7             	or     %rdx,%rdi
   10f55:	48 b9 00 00 00 00 02 	movabs $0x200000000,%rcx
   10f5c:	00 00 00 
   10f5f:	48 89 fa             	mov    %rdi,%rdx
   10f62:	48 81 ca 00 00 80 00 	or     $0x800000,%rdx
   10f69:	48 85 c8             	test   %rcx,%rax
   10f6c:	48 b9 00 00 00 00 01 	movabs $0x100000000,%rcx
   10f73:	00 00 00 
   10f76:	48 0f 45 fa          	cmovne %rdx,%rdi
   10f7a:	48 89 fa             	mov    %rdi,%rdx
   10f7d:	48 81 ca 00 00 40 00 	or     $0x400000,%rdx
   10f84:	48 85 c8             	test   %rcx,%rax
   10f87:	48 b9 00 00 00 00 04 	movabs $0x400000000,%rcx
   10f8e:	00 00 00 
   10f91:	48 0f 45 fa          	cmovne %rdx,%rdi
   10f95:	48 89 fa             	mov    %rdi,%rdx
   10f98:	48 81 ca 00 00 20 00 	or     $0x200000,%rdx
   10f9f:	48 85 c8             	test   %rcx,%rax
   10fa2:	48 b9 00 00 00 00 20 	movabs $0x2000000000,%rcx
   10fa9:	00 00 00 
   10fac:	48 0f 45 fa          	cmovne %rdx,%rdi
   10fb0:	48 89 fa             	mov    %rdi,%rdx
   10fb3:	48 81 ca 00 00 00 02 	or     $0x2000000,%rdx
   10fba:	a9 00 00 00 01       	test   $0x1000000,%eax
   10fbf:	48 0f 45 fa          	cmovne %rdx,%rdi
   10fc3:	48 89 fa             	mov    %rdi,%rdx
   10fc6:	48 81 ca 00 00 00 01 	or     $0x1000000,%rdx
   10fcd:	48 85 c8             	test   %rcx,%rax
   10fd0:	48 b9 00 00 00 00 40 	movabs $0x4000000000,%rcx
   10fd7:	00 00 00 
   10fda:	48 0f 45 fa          	cmovne %rdx,%rdi
   10fde:	48 89 fa             	mov    %rdi,%rdx
   10fe1:	48 81 ca 00 00 00 04 	or     $0x4000000,%rdx
   10fe8:	48 85 c8             	test   %rcx,%rax
   10feb:	48 b9 00 00 00 00 80 	movabs $0x8000000000,%rcx
   10ff2:	00 00 00 
   10ff5:	48 0f 45 fa          	cmovne %rdx,%rdi
   10ff9:	48 89 fa             	mov    %rdi,%rdx
   10ffc:	48 81 ca 00 00 00 08 	or     $0x8000000,%rdx
   11003:	48 85 c8             	test   %rcx,%rax
   11006:	48 b9 00 00 00 00 00 	movabs $0x20000000000,%rcx
   1100d:	02 00 00 
   11010:	48 0f 45 fa          	cmovne %rdx,%rdi
   11014:	48 89 fa             	mov    %rdi,%rdx
   11017:	48 81 ca 00 00 00 40 	or     $0x40000000,%rdx
   1101e:	48 85 c8             	test   %rcx,%rax
   11021:	48 b9 00 00 00 00 00 	movabs $0x10000000000,%rcx
   11028:	01 00 00 
   1102b:	48 0f 45 fa          	cmovne %rdx,%rdi
   1102f:	48 89 fa             	mov    %rdi,%rdx
   11032:	48 81 ca 00 00 00 20 	or     $0x20000000,%rdx
   11039:	48 85 c8             	test   %rcx,%rax
   1103c:	48 0f 45 fa          	cmovne %rdx,%rdi
   11040:	48 0f ba e0 2e       	bt     $0x2e,%rax
   11045:	73 05                	jae    1104c <init_ipp_cpuid+0x1ec>
   11047:	48 0f ba ef 23       	bts    $0x23,%rdi
   1104c:	a9 00 00 00 40       	test   $0x40000000,%eax
   11051:	74 05                	je     11058 <init_ipp_cpuid+0x1f8>
   11053:	48 0f ba ef 20       	bts    $0x20,%rdi
   11058:	48 0f ba e0 2d       	bt     $0x2d,%rax
   1105d:	73 05                	jae    11064 <init_ipp_cpuid+0x204>
   1105f:	48 0f ba ef 22       	bts    $0x22,%rdi
   11064:	48 0f ba e0 2c       	bt     $0x2c,%rax
   11069:	73 05                	jae    11070 <init_ipp_cpuid+0x210>
   1106b:	48 0f ba ef 25       	bts    $0x25,%rdi
   11070:	48 0f ba e0 2f       	bt     $0x2f,%rax
   11075:	73 05                	jae    1107c <init_ipp_cpuid+0x21c>
   11077:	48 0f ba ef 24       	bts    $0x24,%rdi
   1107c:	48 0f ba ef 3f       	bts    $0x3f,%rdi
   11081:	e8 92 ff fe ff       	call   1018 <ippcpSetCpuFeatures@plt>
   11086:	31 d2                	xor    %edx,%edx
   11088:	85 c0                	test   %eax,%eax
   1108a:	0f 95 c2             	setne  %dl
   1108d:	48 83 c4 08          	add    $0x8,%rsp
   11091:	01 d2                	add    %edx,%edx
   11093:	89 d0                	mov    %edx,%eax
   11095:	c3                   	ret    
   11096:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1109d:	00 00 00 
   110a0:	31 d2                	xor    %edx,%edx
   110a2:	89 d0                	mov    %edx,%eax
   110a4:	c3                   	ret    
   110a5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   110ac:	00 00 00 
   110af:	90                   	nop

00000000000110b0 <sgx_create_report>:
   110b0:	f3 0f 1e fa          	endbr64 
   110b4:	55                   	push   %rbp
   110b5:	48 89 e5             	mov    %rsp,%rbp
   110b8:	41 57                	push   %r15
   110ba:	49 89 f7             	mov    %rsi,%r15
   110bd:	31 f6                	xor    %esi,%esi
   110bf:	41 56                	push   %r14
   110c1:	41 55                	push   %r13
   110c3:	49 89 fd             	mov    %rdi,%r13
   110c6:	41 54                	push   %r12
   110c8:	53                   	push   %rbx
   110c9:	48 89 d3             	mov    %rdx,%rbx
   110cc:	ba 40 00 00 00       	mov    $0x40,%edx
   110d1:	48 81 e4 00 fe ff ff 	and    $0xfffffffffffffe00,%rsp
   110d8:	48 81 ec 00 08 00 00 	sub    $0x800,%rsp
   110df:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   110e6:	00 00 
   110e8:	48 89 84 24 f8 07 00 	mov    %rax,0x7f8(%rsp)
   110ef:	00 
   110f0:	31 c0                	xor    %eax,%eax
   110f2:	48 8d 84 24 80 01 00 	lea    0x180(%rsp),%rax
   110f9:	00 
   110fa:	4c 8d b4 24 00 04 00 	lea    0x400(%rsp),%r14
   11101:	00 
   11102:	48 89 c7             	mov    %rax,%rdi
   11105:	48 89 84 24 78 01 00 	mov    %rax,0x178(%rsp)
   1110c:	00 
   1110d:	4c 8d a4 24 00 02 00 	lea    0x200(%rsp),%r12
   11114:	00 
   11115:	e8 66 fc ff ff       	call   10d80 <__memset>
   1111a:	31 f6                	xor    %esi,%esi
   1111c:	ba 00 02 00 00       	mov    $0x200,%edx
   11121:	4c 89 f7             	mov    %r14,%rdi
   11124:	e8 57 fc ff ff       	call   10d80 <__memset>
   11129:	31 f6                	xor    %esi,%esi
   1112b:	ba b0 01 00 00       	mov    $0x1b0,%edx
   11130:	4c 89 e7             	mov    %r12,%rdi
   11133:	e8 48 fc ff ff       	call   10d80 <__memset>
   11138:	4d 85 ed             	test   %r13,%r13
   1113b:	74 23                	je     11160 <sgx_create_report+0xb0>
   1113d:	be 00 02 00 00       	mov    $0x200,%esi
   11142:	4c 89 ef             	mov    %r13,%rdi
   11145:	e8 f6 48 ff ff       	call   5a40 <sgx_is_within_enclave>
   1114a:	85 c0                	test   %eax,%eax
   1114c:	0f 84 be 00 00 00    	je     11210 <sgx_create_report+0x160>
   11152:	b9 40 00 00 00       	mov    $0x40,%ecx
   11157:	4c 89 f7             	mov    %r14,%rdi
   1115a:	4c 89 ee             	mov    %r13,%rsi
   1115d:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
   11160:	4d 85 ff             	test   %r15,%r15
   11163:	74 4c                	je     111b1 <sgx_create_report+0x101>
   11165:	be 40 00 00 00       	mov    $0x40,%esi
   1116a:	4c 89 ff             	mov    %r15,%rdi
   1116d:	e8 ce 48 ff ff       	call   5a40 <sgx_is_within_enclave>
   11172:	85 c0                	test   %eax,%eax
   11174:	0f 84 96 00 00 00    	je     11210 <sgx_create_report+0x160>
   1117a:	f3 41 0f 6f 0f       	movdqu (%r15),%xmm1
   1117f:	f3 41 0f 6f 57 10    	movdqu 0x10(%r15),%xmm2
   11185:	f3 41 0f 6f 5f 20    	movdqu 0x20(%r15),%xmm3
   1118b:	f3 41 0f 6f 67 30    	movdqu 0x30(%r15),%xmm4
   11191:	0f 29 8c 24 80 01 00 	movaps %xmm1,0x180(%rsp)
   11198:	00 
   11199:	0f 29 94 24 90 01 00 	movaps %xmm2,0x190(%rsp)
   111a0:	00 
   111a1:	0f 29 9c 24 a0 01 00 	movaps %xmm3,0x1a0(%rsp)
   111a8:	00 
   111a9:	0f 29 a4 24 b0 01 00 	movaps %xmm4,0x1b0(%rsp)
   111b0:	00 
   111b1:	48 85 db             	test   %rbx,%rbx
   111b4:	74 5a                	je     11210 <sgx_create_report+0x160>
   111b6:	be b0 01 00 00       	mov    $0x1b0,%esi
   111bb:	48 89 df             	mov    %rbx,%rdi
   111be:	e8 7d 48 ff ff       	call   5a40 <sgx_is_within_enclave>
   111c3:	85 c0                	test   %eax,%eax
   111c5:	74 49                	je     11210 <sgx_create_report+0x160>
   111c7:	48 8b b4 24 78 01 00 	mov    0x178(%rsp),%rsi
   111ce:	00 
   111cf:	4c 89 e2             	mov    %r12,%rdx
   111d2:	4c 89 f7             	mov    %r14,%rdi
   111d5:	e8 a6 10 00 00       	call   12280 <do_ereport>
   111da:	89 c2                	mov    %eax,%edx
   111dc:	b8 01 00 00 00       	mov    $0x1,%eax
   111e1:	85 d2                	test   %edx,%edx
   111e3:	75 30                	jne    11215 <sgx_create_report+0x165>
   111e5:	31 c0                	xor    %eax,%eax
   111e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   111ee:	00 00 
   111f0:	66 41 0f 6f 04 04    	movdqa (%r12,%rax,1),%xmm0
   111f6:	0f 11 04 03          	movups %xmm0,(%rbx,%rax,1)
   111fa:	48 83 c0 10          	add    $0x10,%rax
   111fe:	48 3d b0 01 00 00    	cmp    $0x1b0,%rax
   11204:	75 ea                	jne    111f0 <sgx_create_report+0x140>
   11206:	31 c0                	xor    %eax,%eax
   11208:	eb 0b                	jmp    11215 <sgx_create_report+0x165>
   1120a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   11210:	b8 02 00 00 00       	mov    $0x2,%eax
   11215:	48 8b 94 24 f8 07 00 	mov    0x7f8(%rsp),%rdx
   1121c:	00 
   1121d:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   11224:	00 00 
   11226:	75 0f                	jne    11237 <sgx_create_report+0x187>
   11228:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
   1122c:	5b                   	pop    %rbx
   1122d:	41 5c                	pop    %r12
   1122f:	41 5d                	pop    %r13
   11231:	41 5e                	pop    %r14
   11233:	41 5f                	pop    %r15
   11235:	5d                   	pop    %rbp
   11236:	c3                   	ret    
   11237:	e8 34 f6 ff ff       	call   10870 <__stack_chk_fail>
   1123c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000011240 <sgx_self_report>:
   11240:	f3 0f 1e fa          	endbr64 
   11244:	55                   	push   %rbp
   11245:	53                   	push   %rbx
   11246:	48 8d 1d 13 9c 01 00 	lea    0x19c13(%rip),%rbx        # 2ae60 <_ZZ15sgx_self_reportE7_report>
   1124d:	48 83 ec 08          	sub    $0x8,%rsp
   11251:	48 83 3d 37 9c 01 00 	cmpq   $0x0,0x19c37(%rip)        # 2ae90 <_ZZ15sgx_self_reportE7_report+0x30>
   11258:	00 
   11259:	74 0d                	je     11268 <sgx_self_report+0x28>
   1125b:	48 83 c4 08          	add    $0x8,%rsp
   1125f:	48 89 d8             	mov    %rbx,%rax
   11262:	5b                   	pop    %rbx
   11263:	5d                   	pop    %rbp
   11264:	c3                   	ret    
   11265:	0f 1f 00             	nopl   (%rax)
   11268:	48 8d 2d d1 9b 01 00 	lea    0x19bd1(%rip),%rbp        # 2ae40 <_ZZ15sgx_self_reportE11report_lock>
   1126f:	48 89 ef             	mov    %rbp,%rdi
   11272:	e8 89 b3 ff ff       	call   c600 <sgx_spin_lock>
   11277:	48 83 3d 11 9c 01 00 	cmpq   $0x0,0x19c11(%rip)        # 2ae90 <_ZZ15sgx_self_reportE7_report+0x30>
   1127e:	00 
   1127f:	74 17                	je     11298 <sgx_self_report+0x58>
   11281:	48 89 ef             	mov    %rbp,%rdi
   11284:	e8 07 b4 ff ff       	call   c690 <sgx_spin_unlock>
   11289:	48 83 c4 08          	add    $0x8,%rsp
   1128d:	48 89 d8             	mov    %rbx,%rax
   11290:	5b                   	pop    %rbx
   11291:	5d                   	pop    %rbp
   11292:	c3                   	ret    
   11293:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   11298:	48 89 da             	mov    %rbx,%rdx
   1129b:	31 f6                	xor    %esi,%esi
   1129d:	31 ff                	xor    %edi,%edi
   1129f:	e8 0c fe ff ff       	call   110b0 <sgx_create_report>
   112a4:	eb db                	jmp    11281 <sgx_self_report+0x41>
